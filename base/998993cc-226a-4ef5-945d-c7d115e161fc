{
    "title": "I Will Love You Forever Pt. 2 Ch. 18",
    "pages": [
        "Hello all! Thank you for reading and commenting on my stories! It is much appreciated. Thanks to Donalde and Avare for beta reading and catching those pesky name changes. There are no historical facts at the end of this chapter, but there will be at the end of the next one. Oh and there also is very little sex in this chapter as well. \n\n******\n\nIt was time to start getting ready for the holidays. Because she was carrying a full course load, Patricia began delegating. She had Niko and Marie begin making decorations for the house and Christmas tree. Abby and Hattie were in charge of the cookie baking, Sally, Dianne and Eli helped wherever they were needed and Nick and Hana were in charge of making sure that everyone had whatever supplies they needed. In one more week she would be able to help with the final preparations. Also Kenji would be home. Miraculously, he was going to be home for Thanksgiving and Christmas both. \n\nPatricia forced herself back to her studies. She had two finals on one day and two on another. She wasn't particularly worried, but if she wanted to get into med school, she had to keep her grades up. She smiled when she heard Niko and Marie giggling. It seemed as though things were as they should be-normal.\n\nAlthough there were still some problems at school, Niko was happy. He had finally made other friends in addition to Florrie who Patricia had yet to meet. Marie seemed to have settled down after the incident with the broken figurine and once Niko stopped taking the blame for things that she had done wrong. The only thing that blighted their otherwise happy life was an intern by the name of Mai Kabata.\n\nPatricia had seen the intern at a distance whenever she had lunch with Kenji. The intern never approached them, but watched with an expression that contained curiosity, dislike and disgust. She had mentioned the intern to Penny during one of their weekly phone calls.\n\n\"Have you mentioned anything to Kenji?\" Penny asked.\n\n\"No, I don't want to come across like a jealous wife who doesn't trust her husband,\" Patricia replied. \"I told you about the first time I met the woman, Kenji sent her a clear message.\"\n\n\"It doesn't sound as if she's received it, but Patricia; know that you have nothing to worry about don't you? Remember when I told you that Kenji could be fully dressed in a roomful of naked men?\"\n\n\"I remember,\" Patricia said chuckling.\n\n\"The same goes for Kenji regarding you. Mai or whatever her name is doesn't stand a chance against you. But, it you're really bothered about it, I would suggest that you talk to Kenji about it. I had to talk with a nurse the other day about Joel.\"\n\n\"Really? What happened?\" Patricia asked.\n\n\"This particular nurse had taken a shine to Joel meaning that she's always putting her hand on his arm or standing so close that the man could hardly breathe. Well, I yanked her skinny butt into an empty room and told her that if she touches my husband one more time, I was going to break her fingers.\"\n\n\"You didn't!\" Patricia exclaimed laughing.\n\n\"I most certainly did and then I told Joel about it. His reaction was pretty much like yours.\"\n\n\"Did she get the message?\" Patricia asked.\n\n\"Loud and clear- every time she sees me, she puts her hands in her pockets.\"\n\n\"You know, I think I will say something to Kenji when he comes home this time. I wish that you guys were here.\"\n\n\"Believe you me, so do we! It's so damned cold! Which reminds me, we're planning to take the train out this summer- can we stay with you guys?\"\n\n\"Of course you can! When are you coming?\" Patricia asked excitedly.\n\n\"I'm not sure of the exact dates; it depends on when our rotation is over. We thought about doing a summer rotation, but we want to take the summer off.\"\n\n\"I can't wait to tell Kenji and the others! But you know Kenji will do the summer rotation.\"\n\n\"I suspected as much, but we're still coming.\"\n\nPatricia smiled at the memory of the phone call. She hadn't told Kenji yet. She wanted to surprise him when he came home.\n\n\"Focus!\" she chided herself.\n\nShe studied until it was time for dinner, the smell of meatloaf making her stomach growl. She closed her books, went to the kitchen and washed her hands and helped her mother finish dinner. \n\n\"Where's daddy?\"\n\n\"Out back playing with the kids,\" Hattie replied. \"Supper will be ready soon.\"\n\n\"I'll set the table,\" Patricia said as she headed for the cabinet.\n\n\"It's done, Niko and Marie did it,\" Hattie said as she mashed the potatoes. \"Sit down and tell me about school.\"\n\n\"I love it!\" Patricia said with a smile. \"Some of the classes are challenging, but I'm learning so much.\"\n\n\"We're so proud of you,\" Hattie said. \"You believed that it could happen when we didn't and look at you! You're going to be a doctor and you're married to one!\"\n\nThey chatted until the kids came running in followed by John.\n\n\"Where's dinner?\" he demanded with mock severity. \"You've got hungry people here! Right kids!\"\n\n\"Go wash your hands,\" Hattie said laughing, \"It'll be ready by the time you get back.\"\n\nPatricia watched as her father herded the kids to the sink so that they could wash their hands. It was hard to believe that for a short time, he had disowned her. Now he considered Kenji a son although he still hadn't forgiven Hiroshi for what he and Joben tried to do to her. She had stopped talking to him about it and had to be satisfied with the fact that he was at least civil to him. Dai and Hiro were another matter altogether. John doted on the little boy and was kind to Dai because he didn't hold them responsible for Hiroshi's wrong doings.\n\n\"Let's eat! He bellowed making Marie and Niko laugh.\n\nPatricia laughed too, but then frowned. Something wasn't quite right with her father. He looked alright, he was acting alright, but something was off. She watched him throughout dinner taking note of how much he was eating and drinking... something wasn't right.\n\nLater when they were washing the dishes, Patricia asked her mother about it.\n\n\"Mama, is daddy alright?\"\n\n\"He's fine, why?\"\n\n\"He ate so much and drank so much water at dinner. How long has he been doing that?\"\n\n\"I don't know... a week or so,\" Hattie replied with a shrug.\n\nPatricia looked toward the living room where John was reading to the kids and made a mental note to tell Kenji what she had seen when he called. Abby came by around eight to pick John and Hattie up to take them home.\n\n\"I'll be back around nine to take care of Marie so that you can study,\" Abby said.\n\nSoon after they were gone the phone rang. It was Kenji calling to talk to the children. He talked to Marie first and then Niko. After talking to them, he spoke to Patricia.\n\n\"I will call you back around nine,\" he told her. \"I love you.\"\n\nPatricia got the kids ready for bed, read with them and tucked them in. She moved her books to the kitchen table so that she could hear the phone and the kids if they called for her. Just after nine, the phone rang.\n\n\"Hello Kirei, are you well?\"\n\n\"I'm fine, I'm getting ready for finals; how about you?\"\n\n\"I am well and I am looking forward to being home again. In case I have not mentioned it, the pictures of you and the children are very helpful. Perhaps when I come home we can take a picture of all of us for me to add to my notebook which by the way is full. I keep moving the picture from one notebook to another.\"\n\n\"Do you need more? I can get more for you.\"\n\n\"No Kirei, I have others. So what did your mother make for dinner tonight?\"\n\n\"You really are a glutton for punishment aren't you?\" Patricia teased, \"but here it goes- meatloaf, mashed potatoes and cooked carrots oh and pound cake.\"\n\n\"That sounds delicious- I had something that was supposed to be meatloaf,\" Kenji replied with a chuckle.\n\n\"I saved you a piece,\" Patricia replied. \"Kenji, I think that there's something wrong with my dad.\"\n\n\"Why do you say that?\" \n\n\"I don't know. He's always been a big eater, but tonight he ate more double what he usually does. I watched him drink almost a whole pitcher of water by himself.\"\n\n\"How long has he been doing this?\" Kenji asked.\n\n\"Mama says a week, what are you thinking?\"\n\n\"Has he been urinating more frequently?\"\n\n\"I don't know-Kenji what's wrong with him?\" Patricia asked worried.\n\n\"It sounds as like sugar diabetes,\" Kenji replied. \"It's an endocrine disorder where the body does not make enough insulin. It is early yet, call Nick and ask him if he will bring your father to the hospital. I will meet him in the emergency room.\"\n\n\"It sounds bad,\" Patricia said.\n\n\"It can be if it isn't controlled. Call Nick and I will call you back in ten minutes.\"\n\nAn hour later, John was at the hospital being tended to by Kenji and Paul Mynt and insisting that he was fine. Patricia and Hattie stood by listening.\n\n\"John have you been eating more lately?\" Kenji asked ignoring John's insistence that he was fine.\n\n\"Yes he has,\" Hattie answered. He's been drinking more too.\"\n\n\"What about urination?\" Kenji asked. \"Have you been going more than usual?\"\n\n\"That too,\" Hattie replied before John had a chance to say anything. \"What's wrong with him?\"\n\n\"He has diabetes,\" Paul said. \"His pancreas isn't making enough insulin. That's what controls the sugar levels in our bodies. What we need to do is admit you and run a few tests. We also need to start you on insulin although there are now pills available.\"\n\n\"Do I have to stay?\" John asked not liking what he was hearing.\n\n\"Yes,\" Paul replied. \"We need to figure out the best dosage of insulin for you and I'm afraid that I have some more bad news for you. You'll have to give up sweets. That means no more of Hattie's pound cake. You're going to have to watch your diet in order to control your blood sugars.\"\n\n\"No more desserts?\" John asked.\n\n\"I'm sorry but no,\" Paul replied. \"There is an artificial sweetener called saccharine. It's been around for a while. You want to use it sparingly as it's much sweeter than sugar. Maybe Hattie can experiment with it and come up with some desserts for you, but even if she can't...\"\n\n\"I'm not staying here and I'm not going to starve myself either!\" John said interrupting Paul.\n\n\"John Middleton!\" Hattie said, \"You will stay here until Paul and Kenji say that you can go home and you will follow their instructions.\"\n\n\"John,\" Kenji gently, \"if we do not get this under control you could die or lose a limb. It will require a change in the way that you eat, but we can help you with that.\"\n\n\"How are you going to do that?\" John demanded. \"Are you going to take this diabetes away?\"\n\n\"No,\" Kenji replied, \"but when we are together we will eat as you do.\"\n\n\"Daddy please,\" Patricia said softly. \"I want you at my graduations.\"\n\nFinally John relented agreeing to stay for only two days.\n\n\"After that, I'm gone.\"\n\nAfter John was settled, Kenji pulled Patricia into an empty room and kissed her.\n\n\"He will be well cared for so try not to worry.\"\n\n\"I know,\" Patricia replied. \"We should go so that you can get some sleep.\"\n\n\"I only have two more days, I will be fine,\" Kenji replied holding her against him. \"You can have lunch with me and we can take your father home with us.\"\n\nThey talked for a few more minutes, kissed and then parted ways.\n\n***\n\nMai was on her way to the phones to call her sister when she saw Kenji. His back was to her, and she couldn't hear what he was saying. She knew that he was talking to his wife by the intimate tone of his voice. She watched as his relaxed posture tensed and tone of his voice changed. He hung up and then waited.\n\n\"Kenjiro?\" she called softly, \"Is something wrong?\"\n\nKenji turned to face her, gave her a polite bow and replied.\n\n\"It is my father in law, if you will excuse me,\" he said as he turned back to the phone and made a call.\n\n\"Kirei, have you spoken to Nick? Good... I will meet you there.\"\n\nMai watched as Kenji hurried off and went to make the phone call that she didn't want to make. She took a deep breath, picked up the phone that Kenji had just used and called her sister.\n\n\"Have they arrived yet?\" she asked hoping that her father and Shotaro changed their minds about visiting.\n\n\"Not yet,\" Ani replied. \"Jiro left for the train station a little while ago.\"\n\nMai's heart sank. She wasn't looking forward to the visit with her father and Shotaro. She had tried to get them to change their minds by telling them that she would be at the hospital for most of their two week visit.\n\n\"That is fine,\" both of them had responded. \"I am most anxious to see the hospital where you are doing your internship,\" Shotaro said.\n\nMai noticed that there wasn't a trace of warmth in his voice as he spoke to her. \n\nNow they would be waiting for her when she got to her sister's home in two days.\n\n\"Father and Shotaro have already said that they would like to come with me when I pick you up on Thursday,\" Ani said.\n\n\"That will be nice,\" Mai replied trying to sound sincere. \"Have you told Jiro about the baby yet?\" she asked changing the subject.\n\n\"Yes and he is so excited! We will wait until you are here to tell father. He will be so pleased,\" Ani replied. \"Mai, are you alright?\"\n\n\"I am fine, why do you ask?\"\n\n\"You just seem distant-are you not pleased that Shotaro is coming to visit?\"\n\nMai warned herself to tread carefully.\n\n\"Of course I am,\" she replied. \"I'm just tired and wishing that I could spend more time with them.\"\n\nOf that statement, only the part about being tired was true. They chatted about other things and lost track of the time.\n\n\"They're here!\" Ani exclaimed, \"Don't hang up, you can say hello to them.\"\n\nMai cursed under her breath while she waited for someone to come to the phone. It was her father that she spoke to first.\n\n\"Welcome father, how was your trip?\"\n\n\"It was comfortable,\" he replied in a curt tone.\n\n\"I am pleased that you are here,\" Mai lied.\n\n\"Thank you, I am very anxious to see you. We have things to discuss.\"\n\nMai's stomach dropped. Whenever her father said something like that it never bode well for her.\n\n\"Shotaro would like to speak with you,\" her father said in that same curt tone.\n\nWhile she waited for Shotaro to take the phone, Mai thought about Kenji and the way in which he spoke to his family. She couldn't remember her father ever speaking to any of them like that. In fact, she couldn't remember if he ever told them that he loved them and that included their mother. She thought that he loved them, but she had always wondered. Kenji's family, she realized; knew beyond doubt that he loved them even if he didn't say it. It was obvious in the way that he spoke to them.\n\n\"Mai, are you well?\" Shotaro's deep voice asked. If she had cared for him, she would have thought it sexy.\n\n\"I am well; did you enjoy your trip?\"\n\n\"Yes I did,\" he replied. \"I am looking forward to seeing your hospital. Perhaps when we come for you on Thursday you can take us on a tour.\"\n\n\"Of course,\" Mai replied not missing the fact that he hadn't mentioned that he was looking forward to seeing her. \"Ani will have to park the car, but I will meet you in the main lobby.\"\n\n\"Good, I will see you then,\" Shotaro replied.\n\nA moment later, she was back on the phone with Ani. After she hung up, Mai leaned against the wall and wiped her eyes. She thought about Kenji again and how wrong it was that he was with the black woman. She admitted that jealousy was a part of what she was feeling. Not that Kenji was taken necessarily, but that if she married Shotaro; there would be no love involved. She was even jealous of Ani. It was clear that even though her marriage was an arranged one, Jiro loved her and Ani-she loved him too. \n\nWhy her father had picked Shotaro for her she didn't know, nor did she care. What she did care about was the fact that she was in for a lifetime of misery. She wondered how her mother had done it. Her mother loved her father no more than she loved Shotaro. Unfortunately, her mother was no longer alive to ask.\n\nMai went to her room and took out her notebook so that she could go over her notes for the day. She couldn't bring herself to concentrate because she kept thinking about Kenji. One day out of curiosity, she asked Kenji what he kept looking at in his notebook.\n\n\"It is private,\" he told her. His tone while polite was firm.\n\nMiffed at the shutdown, Mai became even more determined to find out what was in the notebook and to find out more about Kenji himself. The burning questions were how he had broken tradition had and why with a black woman. She could have understood it better if the woman had been white even though she considered them inferior too.\n\nMai realized that her attitude toward different races was at odds with her chosen profession, but what she hoped to do was to open her own practice and cater only to her race. She had even planned to have an herbalist practice with her so that she could care for those who still believed in the old ways. She hadn't talked with Shotaro about her plans because she already knew that he wouldn't agree with them. He had become a strong advocate for western medicine. That was the only thing that he and her father disagreed on.\n\nShe closed the notebook and got ready for bed. As she changed clothes, she wondered what the emergency was with Kenji's father in law. Once again the way in which he seemed to care crossed her mind. But then, he always showed genuine care and concern to the patients that he rounded on and it didn't matter who or what they were. A small part of her wished that she could be like more like him.\n\nWhen she was in bed, Mai began to examine her feelings for Kenji. It was much more than physical attraction. It was even more than the fact that he had broken convention... it had everything to do with his wife and what she had. Mai replayed the conversation with Shotaro in her head trying to see if there was any trace of affection. Then she replayed the conversations that Kenji had with Patricia. His voice oozed love, caring and respect. She thought about what she knew about Patricia and realized that it wasn't much.\n\nShe knew that she was a student working on her undergrad- Kenji had told her that, but she found out that the plan was for her to go to med school from another intern. The intern who happened to be female had become one of Mai's friends. Mai soon found out that the intern was every bit as astute as Ani was and had no problems with being blunt.\n\n\"Mai,\" Vera said one day while they were having dinner, \"I've come to think of you as a friend so I hope that you'll take what I'm going to say in the spirit in which it's meant. Kenjiro Takeda is off limits. He is a married man with two children.\"\n\n\"I know that,\" Mai replied feigning confusion. \"Why are you telling me this?\"\n\n\"You already know the answer to that,\" Vera replied tersely. \"I don't know if you're aware of it, but every institution has a rumor mill and you've got it running hot and heavy. There are bets as to whether you'll be able to take Kenjiro away from his wife.\"\n\n\"What?!\" Mai exclaimed. Had she been that obvious about her feelings toward Kenji? \"Where is this coming from?\"\n\n\"People watch,\" Vera replied, \"me included. I can understand the attraction. He's one of the few Japanese interns here. He's good looking and sweet, but Mai; I repeat-he's married. I don't profess to know a lot about your culture, but I imagine that wanting someone else's husband is as looked down upon in it as much as it is in mine.\"\n\n\"I don't-\"\n\n\"Yes you do,\" Vera broke in. \"I see it in your face every time you see him and I see it now. I also know that you've been asking personal questions about him-\"\n\n\"How...\"\n\n\"It doesn't matter how I know,\" Vera broke in, \"and if I know, so do other people. It's only a matter of time before Kenjiro finds out. Whatever it is that you're thinking about doing, you need to forget it.\"\n\nThat conversation took place just a few nights ago and Mai thought about it all that night. She thought that she had decided that Vera was right, but after hearing Kenji talk to Patricia and then her own conversation with her father and Shotaro, she wasn't so sure that Vera was right about her forgetting about Kenjiro. He was still Japanese and at heart he couldn't really believe that he belonged with a black woman.",
        "****\n\nThursday arrived finding Kenji excited to be seeing Patricia. He met her at the cafeteria with a kiss on the cheek.\n\n\"Your father is responding well to the insulin,\" he told her. \"Paul and I would like for him to stay another night, but he refuses.\"\n\n\"That doesn't surprise me,\" Patricia replied. \"I'm actually surprised that he agreed to wait until after you were finished today.\"\n\n\"He did not want to,\" Kenji replied. \"He is only still here because he didn't want anyone to make a special trip for him.\"\n\n\"I'll go sit with him after lunch,\" Patricia said. \"By the way, mom has been experimenting with the saccharine and she may be onto something. The real test will be daddy.\"\n\nKenji reached across the table, took Patricia's hand in his and leaned forward. Patricia leaned forward so that she could hear what he was saying.\n\n\"I cannot wait to get you into bed.\"\n\n\"Oh really?\" she teased back squirming a little in her seat.\n\n\"Yes really,\" Kenji replied smiling and stroking her knuckles. \"I fell asleep last night thinking about it.\"\n\nPatricia was about to reply when she saw Mai watching them and then begin walking toward them.\n\n\"Ohayo Kenjiro,\" she said when she reached them. \"Hello Patricia,\" she said as an afterthought.\"\n\n\"Hello Mai,\" Kenji replied in English. \"Would you care to join us?\"\n\n\"Thank you,\" Mai said as she sat down. She noticed that Kenji was holding Patricia's hand and ignored it. \"Do you have plans for your time off?\"\n\n\"As a matter of fact, we do,\" Patricia replied. \n\n\"We will be making Christmas decorations with the children,\" Kenji added. It was becoming clear that he would have to talk to Mai, but it could wait until after the Thanksgiving holiday. He knew that she was waiting for him to ask about her plans, but he didn't. He didn't want to give her the impression that he was interested in her personal life. If she had nothing more than a platonic interest in him, it would have been different.\n\nSeeing that he wasn't going to ask, Mai volunteered information leaving out that her betrothed and her father were in town.\n\n\"I will be shopping with my sister-did I mention that she is expecting her first child?\"\n\n\"No you didn't,\" Kenji replied, \"congratulations.\"\n\n\"Thank you- I am in the process of finding a Japanese doctor for her... do you know of anyone?\"\n\n\"No,\" Kenji replied fully aware of what Mai was doing. \"Kirei, are you ready to go see your father?\"\n\n\"I think so,\" Patricia said staring at Mai. Her instincts had been right- the woman was trouble. Thankfully Kenji saw it too.\n\n\"Have a pleasant time with your family,\" Kenji said as he stood, held his hand out to Patricia and led her out of the cafeteria.\n\nMai watched them leave with anger and jealousy in her heart. She stayed in her seat until she had to go back to her room and pack her things.\n\n\"Kenji,\" Patricia said when they were out of earshot, \"she's trouble.\"\n\n\"Only if we allow her to be,\" Kenji replied. \"But I plan to speak with her after I return.\"\n\n\"Okay... by the way, I brought a tin of cookies for you to leave in the room for the next student.\"\n\n\"Robert will appreciate that,\" Kenji said. \"I have time to walk with you to your father's room.\"\n\n\"We did cut lunch short didn't we?\" Patricia asked. \n\nJohn was sitting on the side of the bed with his bag already packed. He stood up as soon as he saw Kenji and Patricia walk in.\n\n\"Relax daddy,\" Patricia said. \"We have a couple of hours yet.\"\n\n\"Can't we wait outside?\" John asked anxious to leave the room. \n\n\"I do not see why not,\" Kenji replied. \"Let me see if the discharge orders are ready.\"\n\nA moment later, Kenji was back.\n\n\"The physician caring for you today will be here shortly to go over your instructions,\" Kenji said. \"I must go to conference now, I will see you soon.\" \n\nKenji kissed Patricia on the cheek and left carrying the tin of cookies. He ran up to his room, made sure that everything was packed and then left for the conference room taking his bags with him. He sat where he usually did and allowed his mind to wander. He hadn't lied when he told Patricia that he couldn't wait to get her into bed. For some unknown reason, he had missed her more than usual. He opened the notebook and gently touched the photograph of her and the children.\n\nMai walked into the conference room, looked around debating as to where she should sit. She saw an empty chair on either side of Kenji and almost headed toward one. At the last minute, she changed her mind and sat on the opposite side of the room. From where she sat, she could watch his face. She could see that his notebook was open and that his mind was someplace else. She barely paid attention to the announcements regarding the schedule when they returned. Her ears did perk up when her last name and Kenji's were announced together.\n\n\"Takeda, Kabata, Chester and Morgan: Your next rotation will be nights. You will be under the leadership of Dr. Vincente. On your way out, stop at the desk and I'll give you the packets for that rotation.\"\n\nMai couldn't believe it! She would get to do a rotation with Kenji. Maybe then she could find out more about him. She snuck a peek at Kenji to see what his reaction was. His expression was unreadable. In fact, she wasn't sure that he had heard the announcement.\n\nAfter the conference was over, she watched as he rushed to the front with bags in hand and took a packet before hurrying off. She rushed after him grabbing a packet as she ran by. She caught sight of him just as the door to the stairs closed.\n\nShe went to her room, gathered her belongings and went to the main lobby where Ani, Shotaro, Jiro and her father waited for her. Shotaro gave her a cool glance and then offered to take her bags to the car. While they waited for him to return, Patricia, Kenji and John walked by. Kenji had his arm around Patricia's waist.\n\n\"Who is that?\" Mai's father demanded.\n\n\"Kenjiro Takeda,\" Mai replied. \"He is one of the interns here.\"\n\n\"Do you know him?\" he asked.\n\n\"Yes father, we sometimes cross paths.\"\n\n\"Who is the negro woman that he is touching so inappropriately?\"\n\n\"Th... That is his wife and the man is her father,\" Mai replied.\n\n\"His what?\" her father asked shocked. \"He is married to an inferior?\"\n\n\"Yes.\"\n\n\"How is this possible?\" he asked as he turned to Mai. \"This is what happens when the old ways are pushed aside. You will have nothing to do with him.\"\n\n\"But...\"\n\n\"I have spoken; you will stay away from him.\"\n\n\"We are in the same rotation,\" Mai said weakly. \"It cannot be changed.\"\n\n\"After this rotation, you are to make sure that there isn't another.\"\n\n\"I have no say over that,\" Mai replied.\n\n\"Then I shall take care of it,\" her father said.\n\nShotaro came in on the tail end of the conversation. Without being asked, Mai's father filled Shotaro in on what he found out about Kenji. A strange look crossed Shotaro's face and was gone before anyone except Mai noticed it.\n\n\"Shall we begin the tour?\" Shotaro asked not responding to the revelation about Kenji. His reaction stuck Mai as odd, but she began the tour.\n\n\"Very impressive,\" Shotaro said at the end of the tour. \n\n\"Maybe you could move here when you are finished with your residency,\" Ani said. \"That way you and Mai could get married! You could stay with us couldn't they Jiro?\"\n\n\"Of course,\" Jiro replied, \"there is plenty of space.\"\n\nMai was horrified. If Shotaro and her father agreed, the wedding could take place in less than three months.\n\n\"Thank you for the kind offer,\" Shotaro said, \"but there is the matter of a job-\"\n\n\"I am sure that you can find one here,\" Ani said ignoring the warning glances from Mai.\n\nThe drive to Jiro and Mai's house was quiet. Mai knew that somehow she had given something away. That was why Ani began to push for Shotaro to move to California. She also wondered about Shotaro's odd reaction to the news about Kenji. Something wasn't right.\n\n*****\n\nKenji and Patricia dropped John off first and then went home. Hana had dinner prepared and waiting for them. After greeting the children and dinner, Hana and Patricia went over plans for the party while Nick and Kenji talked.\n\n\"Is there any word of Andrew Kelly?\" Kenji asked.\n\n\"No,\" Nick replied. \"He's going to be there for a long time. How are things at school?\"\n\n\"They are going well although I am a little concerned about Patricia. Some of Andrew's followers still attend classes.\"\n\n\"Peter is still there and is keeping an eye on things,\" Nick said. \"Andrew's group is pretty much done for.\"\n\n\"Nick, when I am done with my internship, would you and mother consider having the children stay with you for a week? I know that it is far into the future, but I would like to take Patricia away.\"\n\n\"Just say when,\" Nick replied.\n\nLater when they were alone, Kenji pulled Patricia into his arms and kissed her.\n\n\"I have missed you.\"\n\n\"I missed you too... you have a lot of reading to catch up on,\" Patricia replied wrapping her arms around him. \"Kenji, about Mai...\"\n\n\"We will talk about her later,\" Kenji replied, \"all I want to do right now is to take you to bed.\"\n\n\"Can you give me ten minutes to get ready?\" Patricia asked with a mischievous grin on her face.\n\n\"I know that look,\" Kenji teased, \"What color is the nightgown?\"\n\n\"Who said that there's a nightgown? Maybe it's one of my old ones,\" Patricia replied.\n\n\"Whatever it is, it will not remain on for long,\" Kenji replied. \"Now hurry, I grow impatient.\"\n\n***\n\nSaul hadn't seen Isadora since he introduced himself to her at church. His work schedule hadn't allowed him to attend church since then. The next Sunday he would be off wasn't for another week. He replayed the introduction in his mind several times and was pleased that she hadn't completely shut him down.\n\nShe had taken his hand and told him her name, but that was as far as it went. He thought that there was a haunted feeling about her, but he couldn't be sure. The next time he saw her, he was going to engage her in conversation and see what happened. \n\nAs of yet, he hadn't heard from Nick and had resisted calling. He had spoken to his mother and siblings a few times and was satisfied that they were being taken care of. He realized that once he was satisfied that they were safe; his anxiety level seemed to drop. The next issue was his friend Harry. He had changed and it definitely wasn't for the good.\n\nHarry no longer really talked with him other than a quick hello. They hadn't walked to work or eaten lunch together in weeks. Saul had given up on finding out what Harry was into and slowly accepted that he had lost his friend. What made it so bad was that he didn't know to what or who he had lost him. One day he managed to catch Harry alone.\n\n\"Hey,\" Saul said quietly. \"How are you doing?\"\n\n\"I'm good,\" Harry replied and started to walk away.\n\n\"Harry-what in the hell are you into?\" Saul asked. \"We haven't talked or-\"\n\n\"Look,\" Harry said, \"I will always consider you a friend, but things have changed. I have other responsibilities and all that you need to know is that you're safe.\"\n\n\"Safe?\" Saul asked. \"Who am I supposed to be safe from? Harry, if you're in trouble let me help you.\"\n\n\"Can you make things more equal for black people?\" Harry asked. \"Can you get white people to see us as more than servants?\"\n\n\"Change takes time,\" Saul said. \"And it's already happening. Laws-\"\n\n\"Are you talking about the laws that we talked about a few months back?\" Harry interrupted. \"Are we talking about same laws that are being monitored by other white people that don't give a shit as to whether they're being upheld or not? Because if we are; not a damned thing has changed.\"\n\n\"Harry, what are you into?\" Saul asked again.\n\nInstead of answering, Harry walked away.\n\nThat conversation had happened less than a week ago and it still disturbed him. Joshua and Cora both had been asking about Harry and why he hadn't been coming over for meals. \n\n\"He's busy with something,\" Saul always replied each time. He decided that if they asked again, he would tell them about his concerns. More often than not, they knew what was happening in the black community because they knew so many people.\n\nAfter work he walked home his mind in a jumble. Reggie was sitting on the porch sipping on a glass of lemonade when he got there.\n\n\"What's wrong with you?\" he asked when he saw Saul's face.\n\n\"Nothing- I'm just worried about Harry,\" Saul replied. \"Something is going on with him. He barely talks to me anymore and when he does; he's angry. When I asked him what was going on, he tells me that it's nothing for me to worry about and that I'm safe.\" \n\nSaul went on to tell Reggie that he had heard the same thing from other baggage boys.\n\n\"He's talking to people that he had previously avoided and that includes Dewey.\"\n\nReggie was quiet for several minutes before speaking.\n\n\"I think that I know what Harry is into.\"\n\n\"What is it?\" Saul asked anxiously.\n\n\"There are rumors about group young black men who have been robbing white people. Word has it that they're going to use the money to buy guns so that they can start a war with the whites.\"\n\n\"It's more than a rumor isn't it?\" Saul asked.\n\n\"I would say so,\" Reggie replied. \"Apparently Harry still considers you a friend, but watch your back. That could change at any time.\"\n\nSaul wanted to say that Harry wouldn't change like that, but he already had changed. He was forced to admit that Reggie was right.\n\n\"Have you heard anything from that Lawyer?\" Reggie asked changing the subject.\n\n\"No, not yet,\" Saul replied. \"They aren't having much luck in finding anyone who will talk. I can't say as I blame them, but Reggie if no one else steps up, the warden is going to get away with murder.\"\n\n\"Maybe, but if he does; it won't be because you didn't try. I also think that Jacob would understand that and would consider the debt paid in full. I'm actually glad that we're talking,\" Reggie said. \"I wanted to talk to you about that girl at church.\"\n\n\"What about her?\" Saul asked warily.\n\n\"Saul, the world isn't ready for blacks and whites to sit together in restaurants, let alone for them to be in the same bed together. I think that you should let this go and find yourself a nice white girl.\"\n\nSaul listened with his eyes closed and heard Reggie's concern.\n\n\"Reggie, I hear and understand what you're saying,\" Saul said cautiously, \"but what we choose to do is no one's concern but ours. I also think that you're a little premature about the bed thing. All we've done is exchanged names.\"\n\n\"What happens if you pursue this and one of you gets hurt?\" Reggie asked. \"What you need to realize is this, people will spout the god created everyone equal line as long as the line between us and them don't blur. There are people at our church who spout that line but when it comes down to it... \"\n\n\"You mean like you're doing?\" Saul asked. \"I don't mean any disrespect, but Reggie; you're spouting the same line. I mean, listen to yourself. At any rate, the only way that I'm not going to pursue Miss Isadora Hughes is if she tells me that she isn't interested. And if she does decide to see where it goes, then we'll work through any issues together.\"\n\nReggie started to argue with him but saw that Saul's mind was made up.\n\n\"I hope that you know what you're doing,\" was all that he said.\n\n****\n\nDinner was noisy with both Niko and Marie full of news for Kenji. Mai was temporarily for gotten as Kenji listened to what was happening at Niko's school and what Marie had learned during the week from her grandmothers. Patricia listened happily fully aware that this was the normalcy that they wanted and needed.\n\n\"I made something for you papa,\" Marie said her voice excited and full of pride.\n\n\"You did? What is it?\" Kenji asked with a smile.\n\n\"Mama says to give it to you after supper so that you can have time to look at it,\" Marie said still grinning.\n\n\"I look forward to seeing your surprise,\" Kenji replied with a bow of his head. \"Niko, I am happy to hear that things are going well for you at school.\"\n\n\"Thank you papa-mama? Can Florrie come over to play sometime?\"\n\n\"I don't see why not,\" Patricia replied. \"We'll have to ask her parents if it's alright, but Niko; they may say no.\"\n\nIt took Niko a moment to understand what Patricia meant and when he did, a little of his happiness faded.\n\n\"Maybe I should not ask,\" he said softly. It hadn't occurred to him that Florrie's parents would say no. When they talked about it, she had been so excited telling him that no one had ever offered to have her come to their house to play.\n\n\"Honey, I'm not saying not to ask her,\" Patricia said. \"I'm just saying that they may say no. I'll ask them tomorrow when I take you to school.\"\n\nAll of them helped with cleaning up after dinner making it go much faster. When the kitchen was cleaned, Marie rushed Kenji to the living room.\n\n\"Hurry papa! I want to give you my gift.\"\n\nKenji obliged and sat down on the sofa with Patricia to his right and Niko sitting to his left. \n\n\"Close your eyes,\" Marie instructed from across the room.\n\n\"They are closed,\" Kenji said. \n\n\"Open your hands,\" was the next instruction.\n\nKenji opened his hands and felt something large and flat being placed on them. He opened his eyes to see a flat parcel that was wrapped in newspaper resting in his hands.\n\nHe carefully opened the package and smiled when he saw it. Marie shook with nervousness as she waited for Kenji to open the package.\n\n\"Pretty one,\" Kenji said as he looked at the drawing, \"this is beautiful! Come here.\"\n\nMarie shyly approached Kenji and yelped and then giggled when he lifted her from her feet and into his lap.\n\n\"Thank you for your gift,\" Kenji said kissing her plump cheek. \"I would like for you to sign it and then help me choose a place to hang it.\"\n\nAfter admiring the drawing for several more minutes, Kenji took a pen from his pocket, turned the drawing over and removed it from the frame.\n\n\"Here pretty one; sign your name in the corner.\"\n\nAfter the drawing was signed, Kenji and Marie hung the picture where it would be seen as soon as the living room was entered. Kenji kissed Marie's cheek and again thanked her for the gift. Soon afterwards, they were all sitting together and reading. Without being told to, Niko led Marie to the bathroom so she could wash her face and brush her teeth. He took his turn when she was through. After a final goodnight, they were in their beds.\n\n\"Kirei, relax while I make tea for us,\" Kenji said. \"Then we will begin making plans for my next rotation.\"\n\nAfter the tea was made and he was sitting, Kenji told Patricia about the next rotation.\n\n\"It will be the night rotation with Dr. Vincente,\" he said as he sat his cup down. \"The group will consist of four interns...\"\n\n\"Let me guess,\" Patricia said, \"one of them is Mai.\"\n\n\"Yes Kirei, it is and that makes it even more important that I talk to her as soon as possible.\"\n\n\"Kenji, I don't want you to think that I don't trust you, because I do. I've even questioned whether I'm being a jealous wife, but I'm not jealous. Mai has a thing for you and if she thinks that she has a chance with you, she's going to take it.\"\n\nKenji took Patricia's cup from her, sat it on the table next to his and took her hands in his.\n\n\"Kirei, you are anything but a jealous wife. Your feelings about Mai are accurate and I have no intentions of ever leaving you for her or anyone else. As I said, I plan to address the situation with Mai as soon as I get back. I will begin by no longer calling her by her given name.\"\n\n\"I don't care that you call her by her given name,\" Patricia said, \"Just be careful around her. I don't trust her. But what I don't understand is why she chose to be a doctor. She's going to have to take care of people of all races.\"\n\n\"This is but a stepping stone for her,\" Kenji replied. \"I believe that she plans to cater to those who are Japanese only.\"",
        "\"Did she tell you that?\" Patricia asked.\n\n\"No, but I see the way that she treats those who are not Japanese,\" Kenji replied. \"They are nothing more than a way for her to learn her skills. There is no real compassion or caring there. But enough about her, our daughter is quite the artist is she not?\"\n\n\"Yes she is... Kenji, do you think that Niko's friend will be allowed to come over to play?\"\n\n\"I don't know, we shall see,\" Kenji replied. \"I suggest that we go to bed, we have much to do to get ready for the party. You go prepare while I take care of the cups.\"\n\nPatricia was surprised that he had lasted as long as he did. The entire time that they were talking the front of his pants was tented out. She reached over and brushed her hand across the head and then gave it a little squeeze.\n\n\"See you upstairs,\" she said as she stood up. \"Oh, I forgot to tell you that Joel and Penny are coming to visit this summer.\"\n\n\"That is good news,\" Kenji replied. \"It will be good to see them again.\"\n\n\"I know, I'm so excited, but I guess we'll talk about it later,\" Patricia said. \"I'll see you in a few minutes.\"\n\n\"Two minutes,\" Kenji called after her.\n\n****\n\nMai tried to be an active participant in the table conversation. Ani and Jiro had broken the news of the pregnancy and their father was ecstatic.\n\n\"This is wonderful news!!!\"\n\nMai plastered a smile on her face, but wished that she was somewhere else. She wondered what was happening at Kenji's home. Was he pretending to be happy as she was? Somehow, she didn't think so. She envisioned him sitting at the dinner table with his wife and children thrilled to be home. She could even imagine the smiles that he gave them. What-\n\n\"Mai!\" her father called. \"Since when have you become so rude?\"\n\n\"I am sorry father, I was thinking about the hospital. \"\n\n\"I was just saying that I believe that you and Shotaro should marry sooner rather than later. I have been thinking about moving to a warmer climate and I so far, I like this place.\"\n\nMai's heart pounded. This wasn't what she wanted to hear.\n\n\"What about Shotaro's residency?\"\n\n\"It is almost over and I am sure that Shotaro would agree that UCLA is an excellent hospital.\"\n\nMai looked at Shotaro who refused to look at her.\n\n\"What of your business? Who will run it?\" Mai asked frantically trying to think of a way to keep this from happening.\n\n\"That is of no concern to you,\" her father said sternly. \"Your sister and Jiro have offered me a place to stay-\"\n\n\"W...What?\" Mai stammered.\n\n\"This is what happens when you don't listen,\" her father said sternly. \"I am not returning to Boston. Shotaro will go back alone and arrange for the house to be sold. I already have a buyer. The rest of my things will be shipped.\"\n\nMai was speechless. What little freedom she thought she had was gone.\n\n\"I... I am pleased that you are staying,\" she murmured.\n\n\"Shotaro will go to the hospital and apply for a position,\" her father continued. \"If he is accepted, he will move here and we will find a home large enough for all of us.\"\n\n\"Yes father,\" Mai said looking down.\n\nShe didn't see Ani watching her with a disturbed expression on her face, but she did wonder why Shotaro was going along with her father's plan so willingly. After dinner, she excused herself to her room saying that she was exhausted. She changed her clothes and lay on her bed blinking back tears. If she didn't do something, in three months' time; she would be married to Shotaro.\n\nShe heard the bedroom door creak open and then Ani's soft voice.\n\n\"Mai, we must talk,\"\n\n\"Not tonight Ani, I am tired,\" Mai replied hoping that Ani would go away.\n\n\"Mai, you must forget about him.\" Ani said as she ignored Mai's excuse of being tired and sat on the bed, \"Kenjiro Takeda is married and it was obvious to me that he loves his wife.\"\n\n\"Ani, he is just a friend and nothing more.\"\n\n\"I do not believe you,\" Ani said softly. \"I saw the look on your face when he walked out with her. You may not be in love with him, but you covet him.\"\n\n\"Ani-\"\n\n\"And if I know this, then so will father. You forget how astute he is. He will never forgive you if you bring dishonor on this family.\"\n\n\"Ani- you don't understand! I don't want to marry Shotaro!\"\n\n\"That is nerves talking,\" Ani soothed. \"I felt the same way about Jiro and look! We are happy together and are having a baby. Maybe it will be the same for you and Shotaro. Why do you not take this time to get to know him better?\"\n\nMai's eyes burned with tears of frustration. There was no way that Ani could understand what she was feeling. All she knew was that her arranged marriage had turned out well for her. Mai knew that it wouldn't be the same for her and Shotaro. Once again she thought about Kenji and the way that he talked to Patricia. It wasn't right! If her father had only paired her with someone even remotely like Kenji, she wouldn't have fought so hard. But Shotaro was cold and unfeeling. She couldn't even remember if he had ever smiled at her. \n\n\"Mai, this is the way things are. I do not understand how it happened that ... Kenjiro... is that his name? Married a black woman, but that doesn't matter. What matters is that he is married and that you have obligations to your family as he has obligations to his. I suggest that you take the next few days and think about that.\"\n\nIn that moment, Ani sounded like her father and Mai rebelled.\n\n\"You do not understand! Shotaro and I will not have what you and Jiro have! He will never speak to me in loving tones nor do I want him to! We will never end a telephone conversation with the words I love you. Even Jiro gives you that much! A dark one is with one of ours and even she hears those words.\"\n\nAni didn't know what to say. She had known that Mai was less than enthused about Shotaro, but she really believed that the marriage would turn out as well as hers had.\n\n\"Mai-\"\n\n\"Please leave, I am tired.\"\n\nAni sat on the bed for a few more minutes before leaving. She had a decision to make. Did she go to her father and Shotaro or did she give Mai a chance to see reason? She decided on the latter. After all, she had been as shocked as her and Jiro had been when their father announced that he was staying. She and Jiro had been sincere in their offer, but they hadn't expected it to happen so quickly.\n\nAs Ani left the room, she saw her father sitting on the patio. She quickly slipped by before he saw her. She didn't want to answer any questions about Mai. She slipped into the bedroom where Jiro was waiting for her naked on the bed. She would talk to him about it she decided, but later after they brought each other pleasure.\n\nMai could hear the voices of her father and Shotaro as they passed her room. The idea to run came to her, but she needed her father in order to reach her goals. She sobbed as she realized that she was trapped. She would have no choice but to marry Shotaro if he found a position at the hospital. She began to silently pray that he wouldn't get hired. He would go back to Boston thus giving her more time. She felt a sense of relief that was quickly replaced with a new anxiety: her father could make her transfer to the Boston hospital and there would be nothing she could do to stop it\n\n***\n\nThe next morning, Kenji, Patricia and Marie took Niko to school. He was beside himself with excitement that Florrie could come to their house. He tried to keep Kenji and Patricia's warnings in mind, but he couldn't help but to be optimistic. Surely, Florrie's parents would agree to let her play at his house.\n\n\"There she is!\" Niko said excitedly when he saw Florrie standing with her mother. \"Florrie!\" he yelled as he ran over to her.\n\n\"Hi Niko!\" Florrie called back ignoring the scowl from her mother.\n\n\"Good morning,\" Patricia said politely. \"I'm Patricia; this is my husband Kenji and our daughter Marie. We're Niko's-\"\n\n\"I know who you are,\" the woman rudely interrupted. \"Florrie told me about you.\"\n\n\"Oh, well then I guess she told you that Niko invited her over to our house to play.\"\n\n\"Look,\" Florrie's mother said, \"I appreciate that your boy has befriended my girl, but she won't be going to your house to play. They play at school and there's nothing that I can do about that, but-\"\n\n\"I see,\" Patricia said. \"It's alright that he defends her from the other children, but not alright that they play together outside of school. The war is over and these kids had nothing to do with it!\"\n\nNiko and Florrie stopped their excited chatter when they heard Patricia speak.\n\n\"Mom? Can I go?\" Florrie asked. \"Please?\"\n\nMrs. Lane's face turned red as it fell upon her to explain why Florrie and Niko couldn't play together outside of school.\n\n\"No, you can't go,\" she said after several seconds had passed.\n\n\"Why?\" Florrie asked confused. \"Nikos mom and dad said that it was alright.\"\n\n\"Because.... Because I said so now get into school before you're late.\"\n\nNiko was crushed. Tears filled his soft brown eyes as Florrie walked away. Kenji knelt down in front of him and hugged him.\n\n\"I am sorry Niko, perhaps she will change her mind and Florrie can visit another day.\"\n\nPatricia bent down and kissed his cheek. \"I'm sorry baby,\"\n\n\"Thank you for asking,\" Niko replied back under control. \"I must go so I won't be late.\"\n\nNiko, like his father hated tardiness. Patricia thought that he was probably the only first grader who didn't have to be woken up for school. They watched him walk into the school and headed toward home.\n\n\"Please... wait,\" a voice called from behind them.\n\n\"Mrs. Takeda,\" Mrs. Lane said. \"I'm sorry that I was o rude. I just want you to know that I don't have a problem with my Florrie playing with your boy here or anywhere else. It's my husband- he would never go for it...\"\n\n\"Thank you for explaining that to us,\" Kenji said politely.\n\n\"I... thank you,\" Mrs. Lane said and then she hurried off.\n\nThe walk home was quiet with no one speaking until they reached the house.\n\n\"I hope that Niko is alright,\" Patricia said.\n\n\"He will be,\" Kenji assured her with a hug.\n\n\"I hope so- he looked so hurt.\"\n\n\"Children are resilient,\" Kenji told her hugging her tighter. \"But we need to make sure that he understands that it isn't him, but it is the attitude that is the problem.\"\n\n\"I know, but still... anyway, let's get moving; we've got some things to do for the party on Thursday.\"\n\nThe day passed quickly and it was time to go get Niko from school.\n\n\"I will go get him,\" Kenji said. \"That way you can keep working on the party.\"\n\nPatricia almost agreed, but then decided that Niko needed to see her. Instead of walking, they decided to drive in case they needed to go to the store. Niko greeted them with a smile on his face that made both Kenji and Patricia sigh with relief. \n\n\"How are you?\" Kenji asked when Niko was in the car.\n\n\"I am fine papa,\" Niko replied. \"Florrie's mother talked to us. She told us that she would like for us to be able to play together and she would ask Florrie's father if he would change his mind.\"\n\nKenji hesitated; he didn't want to burst Niko's bubble for a second time that day.\n\n\"Mrs. Lane also said that he will probably say no,\" Niko added.\n\n\"I'm glad that she explained things to you,\" Patricia said. \"How about we go home and make dinner?\"\n\n\"Can I help?\" Niko asked, \"Please?\"\n\n\"Of course you can!\" Patricia replied. \"I was counting on it.\"\n\nWhile Marie liked to help, it was Niko that loved spending time in the kitchen no matter who was cooking. Patricia viewed those times with Niko as her special time with him. Her time with Marie came in a different form- they colored together.\n\n\"What will we make mama?\" Niko asked.\n\n\"I was thinking about grilled cheese sandwiches and soup.\"\n\nNiko yelped with excitement. Whenever they had that for dinner, Patricia let him make the sandwiches while she watched from a distance. It was the one thing that she knew would chase any of his blues away. \n\n\"You are a good mother,\" Kenji told her as he took her hand and brought it to his lips.\n\n\"I'm just hungry for grilled cheese sandwiches,\" Patricia replied with a wink.\n\n***\n\nThe week passed quickly and it was time for Kenji to go back to the hospital. Instead of leaving early in the day, Kenji left early afternoon since he was now on night rotation. Patricia packed him snacks and a sandwich for his lunch.\n\n\"I will call you before I go to the floor and again in the morning,\" Kenji told Patricia as he kissed her.\n\nPatricia watched him drive away with the same ache in her heart that she always had when he left. She distracted herself by calling her parents and asking them over for left overs. When they agreed, she quickly put away the cookies and any other sweets and then reminded Niko and Marie that their grandfather couldn't eat sweets.\n\nNiko listened fascinated. He was amazed that such a tiny thing as the pancreas could have such a large effect on the body. Marie on the other hand could have cared less. The only thing that concerned her was that there would be no dessert. She didn't like any of the desserts that Hattie made with the artificial sweetener. Neither did Niko, but he always ate some of it figuring that if his grandpa had to eat it, then so would he.\n\n***\n\nKenji got to his room just as the previous intern, Robert was leaving.\n\n\"Thank you for the cookies, they were great.\"\n\n\"You are welcome; I will make sure to tell Patricia that you enjoyed them.\"\n\n\"Ummm Kenjiro, I know that we don't really know each other, but I think I need to tell you something. Do you have a minute?\"\n\n\"Of course, let me put my bags down,\" Kenji replied.\n\nA few minutes later, he was sitting on the chair by the desk and Robert was sitting on the bed fidgeting. \n\n\"I try to keep my nose out of the things that go on around here and I try to ignore the rumor mill,\" Robert said. \"But, I'm hearing something that concerns you and I think that you should know about it.\"\n\nKenji closed his eyes and then opened them. He suspected that what he was about to hear had something to do with Mai.\n\n\"I... people are making bets on you and that Japanese intern Mai.\"\n\n\"Bets? What kind of bets?\" Kenji asked.\n\n\"The bet is regarding when you'll give in and go to bed with her,\" Robert said clearly embarrassed. \"Just so you know, I'm not a part of it and I don't know who initiated it.\"\n\n\"Thank you for telling me,\" Kenji said. \n\n\"You're welcome, I'd better get going or I'll miss my bus,\" Robert said as he stood up.\n\nAfter Robert was gone, Kenji let his anger rise. He knew who had initiated the bet. It was the same person who initiated every bet that he knew of. The Intern, Neal Carlisle had approached him a number of times wanting him to participate in various raffles and bets. He finally stopped asking after Kenji refused to participate and Kenji avoided the intern whenever possible. The intern was married and had a child but he pursued the nurses as if it was his right and as if he was a single man.\n\nKenji looked at the small clock on the desk and wondered if the intern was still in his room. Taking a chance, he left his room and went in search of Neal. He found him in his room counting money.\n\n\"I would like a word with you,\" Kenji said not giving the intern a chance to speak. \"I was told of a bet that you have initiated regarding me and another intern.\"\n\n\"Who told you?\" Neal asked.\n\n\"That does not matter,\" Kenji replied. \"I want the bet to end.\"\n\n\"Oh come on Kenjiro! You'll get a cut either way and don't tell me that you can't use the money,\" Neal said not noticing how angry Kenji was. \"You've got a wife and a couple of kids to feed and besides, maybe a good screw will loosen you up a little.\"\n\nKenji took a deep breath to calm his anger.\n\n\"Neal, you are married are you not? And you have a child with your wife.\"\n\n\"Yeah and?\"\n\n\"I do not understand how you can profess to love your wife and child and then you dishonor them and your marriage by sleeping with anyone who is willing. The fact that they are willing does nothing to change the fact that you are breaking your vows to your wife. You further dishonor the sanctity of marriage by taking bets on whether someone will be unfaithful or not. I want this wager to end immediately. Give the money back to those who have participated and do not start another wager involving me again.\"\n\n\"Are you for real?\" Neal asked. \"That Mai has an ass that many of us married or not want to get our hands on! She wants you and you're going to walk away from a free fuck? And let's face it, your wife is expecting you to fool around just like mine does.\"\n\n\"Neal, I love my wife and my children,\" Kenji said. \"My wife has been through hell with me and I would do nothing to dishonor her and our marriage and that includes sleeping with another. This is something that she knows and trusts. I am telling you to end this bet. I also want to warn you of something. Just as I found out about this bet, your wife will find out about your infidelity. What will you tell her? That the woman was willing? What will you tell your child if your wife decides to leave you? Now, end this bet.\"\n\nKenji walked out not giving Neal a chance to reply. Mai was next on his list, but he would wait to talk to her. Going to her room alone was not acceptable as it would only lend credence to the rumors that there was something between them. He would wait until breakfast.\n\n***\n\nMai couldn't leave home fast enough. She went back to the hospital under the guise of needing to do a few things before her shift. She knew that Ani wanted to talk to her again, but she avoided being alone with her as much as she could. She did however; take Ani's suggestion that she try to get to know Shotaro a little better.\n\nIt didn't take her long to realize that she had been right: Shotaro didn't want to marry her and he didn't want to move to California. When she found him, he was sitting on the patio reading a letter. He had a smile on his face that reminded her of Kenji whenever he looked in his notebook. The smile on Shotaro's face took away the hard edges and showed how handsome he really was. Mai knew that look- Shotaro was in love with someone. He was as trapped as she was. \n\nWhen she tapped on the patio door to let him know that she was there, the smile vanished as did the letter that he was holding. The hard edges reappeared and he greeted her with a curt hello.The conversation was stiff, formal and over in a matter of minutes with Shotaro excusing himself first.\n\nShe tried again to talk to him with no real success. The night before she was due back to the hospital, she corned him.\n\n\"Shotaro, I am no happier about this than you are.\"\n\nShotaro gave her a small smile, but didn't reply.\n\n\"What are we going to do?\" she asked.\n\n\"What can we do?\" Shotaro replied. \"We have been betrothed for years. Our wedding will happen as planned.\"\n\n\"You love someone else,\" Mai said. \"I see it whenever you read that letter.\"\n\n\"Be that as it may,\" Shotaro replied, \"there is the family honor. I cannot and will not dishonor either of our families by following my heart. We will simply have to learn to make the best of it.\"\n\n\"But Shotaro...\"\n\n\"There is nothing more to discuss,\" Shotaro said quietly but firmly. \"I will make my application to UCLA and will move here after my residency.\"\n\n\"Shotaro, wait... we don't have to do this, remember that intern who is married to that black woman? He did it! He broke away from tradition...\"\n\n\"But at what cost?\" Shotaro asked. \"What will become of their children? Who will accept them as more than half-breeds? No Mai, I will not do that to our families or my children.\"\n\n\"Wait,\" Mai said suddenly understanding Shotaro's reaction to Kenji. \"This woman that you love; she isn't Japanese is she?\"\n\n\"That does not matter,\" Shotaro replied. \"What we want does not matter; preserving the family honor is what's important. I am through discussing this; begin the preparations for our marriage.\"",
        "Mai replayed the conversation in her head and started to cry. What were her options other than to refuse? The only way that it would work was if Shotaro refused too but he was clear in that he was going to go through with the wedding.\n\nAs she went to her room, she wondered if Kenji had arrived yet. It was just past ten in the morning so she doubted it. She knew that he would take the extra hours and spend them with his family. Anger that he would choose to defy tradition and marry an inferior mixed with the anger that she felt at Shotaro who also was in love with an inferior. Then she was angry at Ani that her life had turned out so well in spite of the arranged marriage. Finally she was angry with her father for forcing her into a marriage that she didn't want.\n\nWith nothing left to do, Mai changed clothes and tried to rest for the night shift. Try as she might to rest, her anger wouldn't let her rest. She tried the relaxation breathing exercises that had always worked in the past, but even those failed. Part of her wanted to just let it go, to do what was required of her, but the other part of her wanted to be free and she wanted Kenji. She finally fell into a fitful sleep with her issues unresolved.\n\n*****\n\nKenji walked into the conference room just after Mai did. He glanced at her and found a seat on the opposite side of the room although there were plenty of seats in the area where she sat. He sat looking straight ahead fully aware that Mai was looking at him. After the conference, Mai approached him.\n\n\"Hello Kenjiro, did you have a pleasant time with your family?\"\n\n\"Yes, thank you,\" Kenji replied and walked away.\n\nMai stared after him, he had always been aloof; but he had always been pleasant. Now he was borderline rude. She wondered if things at home weren't as good as Kenji led her to believe. Throughout the shift, she tried to pair herself with Kenji whenever possible. Each time, he nodded at her curtly, performed whatever the task was and walked away.\n\nAt the end of the shift and the post shift conference, Kenji pulled her aside.\n\n\"We must talk; I will meet you in the cafeteria in twenty minutes.\"\n\nMai waited a few minutes and followed him out. She followed him to the phones. As soon as she heard the low, intimate sound of his voice, she walked away. Kenji found her sitting in a corner where they could have privacy.\n\n\"Please, let's sit at another table,\" he said and walked away leaving Mai no choice but to follow him. He found a table where they could talk, but still be in full view. When she was sitting, he gave her a long look as if deciding where to start. \"Mai, it has come to my attention that bets were being made about us.\"\n\n\"Yes, I know of it but paid it no attention.\"\n\n\"I am also told that there are rumors circulating about us and I need to clarify something with you. First, I have spoken with the intern who started the bet and they have stopped.\"\n\n\"Thank you for that,\" Mai said wondering why he was telling her this.\n\n\"Second, I am aware that you have feelings for me. Maybe it is because I am also Japanese or maybe I have inadvertently done something that leads you to believe that I feel something other than friendship for you. If I have misled you in any way, I apologize. I love and am in love with my wife. It is as I told the intern conducting the bet, Patricia has been through hell with me and I will not do anything to dishonor her or our marriage. She and our children are my life.\"\n\nMai felt as if she had been slapped. She had either been more obvious than she realized or Kenji was more astute than she had given him credit for. She now understood why he never shared anything truly personal with her- he knew. Vera's warnings came back to her, but she hadn't believed her.\n\n\"It is inevitable that we will have to work together,\" Kenji continued, \"I am fine with that as long as we keep it on a professional basis. That means that you cannot ask me any personal questions and I would appreciate it if you would respect my privacy and not ask others about my personal life.\"\n\n\"Why?\" Mai countered. \"Are things not as perfect as you would lead us to believe?\"\n\n\"Things are few things in life that are perfect,\" Kenji replied with a smile thinking that Patricia and her touch was one of the few things that he considered perfect. \"But I am a very private person and I strive to keep my home life separate from this one. I must go now, the evening will come quickly. Rest well.\"\n\n\"I warned you,\" Vera said as she took Kenji's vacated seat. \"You're the talk of the hospital.\"\n\n\"You knew that this was going happen?\" Mai asked.\n\n\"If you will recall, I told you that it was only a matter of time before he found out. I figured he would talk to you this morning when Neal gave me my money back.\"\n\n\"You took part in the bet?\" \n\n\"Sure did and I didn't bet on you. Mai, I know that you see me as an inferior, but take it from someone who's been there; find someone else to lust after. Kenjiro Takeda is as steady as they come, he won't do anything to betray his wife.\"\n\n\"What do you know about her?\" Mai asked.\n\n\"Not much,\" Vera replied as she took a sip of juice. \"I know that she's working on her undergrad so that she can get into med school, but I told you that. Other than that, I don't know anything about her other than that her husband loves her. Mai, you need to leave him alone. There are plenty of single interns who would love to be seen with you.\"\n\nMai wasn't listening.\n\n***\n\nKenji stopped by the phones to call Patricia confident that he could tell her that he had clarified things with Mai.\n\n\"Good morning Kirei, did you sleep well?\"\n\n\"I did, but why aren't you in bed?\" Patricia asked.\n\n\"I think that this night rotation is going to take some getting used to,\" Kenji replied. \"I just had breakfast with Mai and explained things to her.\"\n\n\"And?\" Patricia prompted.\n\n\"I told her in no uncertain terms that I belonged only to you and that if I did anything to mislead her, I apologized.\"\n\nPatricia was silent for a moment.\n\n\"What did she say?\"\n\n\"Nothing really, she didn't deny or confirm anything,\" Kenji replied.\n\n\"She didn't even say that you were mistaken?\"\n\n\"No... Kirei... oh,\" Kenji said as he saw what Patricia was getting at.\n\n\"Kenji, she hasn't given up. She was probably surprised that you confronted her and that's why she didn't respond. Just watch yourself ok? Is there any way that you can get into a different group?\"\n\n\"Not very easily, but I will be careful. Kirei, you have class today, would you come have lunch with me?\"\n\n\"You need to sleep,\" Patricia replied.\n\n\"I will take a nap before my shift, will you come? Nick can pick you up here.\"\n\n\"Are you sure you don't want to try to sleep?\" \n\n\"I am sure; I need to be with you even if it's for an hour.\"\n\n\"Ok then, I'll see you at eleven... Kenji I love you.\"\n\n\"I love you too,\" Kenji replied and hung up.\n\nHe went to his room, stripped, showered and changed and lay on the small bed. He closed his eyes wondering what it would take to get Mai to understand that he didn't care for her.\n\n****\n\nThe next time that Saul saw Isadora, he made a point of speaking to her before she spoke to him. He couldn't help but notice the wary look on her face. It was as if for a moment, she thought that he was someone else.\n\n\"Hello,\" he said as he took the empty seat next to hers. \"Is someone sitting here?\"\n\n\"N...no,\" she replied nervously.\n\n\"Do you mind if I sit here then?\"\n\n\"I... no,\" she stammered.\n\n\"Thanks,\" Saul replied and then faced forward. He now understood what he needed to do. He wouldn't be able to just ask her out, she needed to get comfortable with him before that could happen. He would start slowly and let her see that he wasn't a bad guy.\n\nAfter the service, Saul bid Isadora goodnight and left with a grin on his face. She had been sneaking peeks at him throughout the service. She was finally noticing him. As he left the church followed by Joshua and Cora, he didn't notice the pair of angry eyes watching him from a corner.\n\n****\n\nWarden Ellis sat back in his chair and took a long drag from his Cuban cigar. He was about to begin his political career. It wasn't a major office that he was running for and he was already affiliated with the Republican Party. Now he had to begin running for public office.\n\nIt was only in the last few months that he began to relax. Soon after the deaths of Lawrence Goodman and Jacob Lincoln, he wondered if he had acted too rashly. It was the hanging of Jacob Lincoln that had him more concerned than the death of Lawrence Goodman. He realized that he had committed murder in front of hundreds of inmates and the guards. To compound things, he had let the boy go. After months of not hearing anything, he thought that he worried for nothing. The only thing that really concerned him was that the boy Saul seemed to have vanished. A few months ago, his family vanished as well and no one knew where.\n\nFor a short time his anxiety level stayed high, but as with Jacob and Saul, he decided that it was nothing to worry about. So what they moved, he thought. They didn't know anything and no one would believe the boy if he decided to say anything. The same applied to the inmates: who would believe them? They were nothing but criminals who were always claiming that they had been wrongly treated by him or someone else in the prison system. Armed with this belief, Ellis totally relaxed and began to plot his political career.\n\nThe phone on his desk jingled several times before he answered it. He knew who it was; it was his wife of one year Hazel. Like starting small in the political arena was necessary, so was Hazel. He hadn't been married and didn't want to be; but his advisors encouraged it.\n\n\"It will help with the votes,\" they said. \"And whoever she is, make sure that she has money and is young enough to give you a baby or two.\"\n\nSeveral months later, he wooed, courted and then married Hazel Covington the daughter of the very wealthy Jaspar and Millicent Covington of Charleston, South Carolina. It was her father that was funding his political career because of two reasons, one he believed in his politics and two; it kept Hazel from becoming a spinster.\n\nHazel was plain to look at, quiet; but people liked her. That was something that pleased his advisors greatly. They then advised him to \"knock her up\" as soon as possible. Ellis had grimaced at that. He didn't enjoy sex which was part of the reason that he hadn't married. When he first saw Hazel, he breathed a sigh of relief. She didn't look as if she would enjoy sex any more than he did. He had been wrong.\n\nHazel came to the marriage with all kinds of ideas and a very healthy sexual appetite. It was primarily because of that appetite that she was now expecting their first child. Ellis had hoped that the pregnancy would buy him a few months peace, but it did the opposite. Most nights he did as she wished so that she would leave him alone.\n\nThe phone rang once more before he answered it.\n\n\"Hello sweetheart,\" he said with forced cheerfulness. \"Are you alright? Tonight? I don't know honey. I'm working on my speech.... Well, since they're on the way, I can't very well not come home now can I? I'll be there within the hour.\"\n\nEllis hung up with a grimace. Even though Jaspar Covington was footing the bill, he didn't like him. His father in law was already trying to run things and he hadn't even won his first election yet. What he needed to do he realized, was to find alternate funding but that wouldn't happen until after he was better known.\n\nThe other thing that would help is if he had his cousin Will on his side. That wasn't about to happen so he pushed the thought away. He stood up and sighed. For now, like it or not; he was in bed with Jaspar Covington.\n\nHe stood up and got ready to leave dreading the evening ahead of him. Then he hoped that his in laws stayed late and would have to spend the night. As eager as Hazel was about sex, she refrained from it when there were house guests- especially if those house guests were her parents. He knew what he had to do in order to get them to stay. All he had to do was bring up his political plans. He left whistling at his free night of pleasuring Hazel until she screamed like a banshee. He wondered if he could somehow get his in laws to stay for more than one night.\n\n*****\n\nThe weeks before Christmas passed quickly. Kenji soon acclimated to the night shift and found that he actually preferred it. For two weeks after Kenji talked to her Mai had kept her distance. Kenji spoke to her politely, but engaged her in no conversation unless it was about a patient or a discussion during conference. To further make his point, he only had breakfast with her if there were other interns at the table with them and even then; his conversations with her were limited.\n\nMai was miserable. Not only was Kenji politely ignoring her, her father really was going to stay in California. Shotaro applied to UCLA and to her disappointment was hired pending the completion of his residency. Ani was beyond excited; she had started planning the wedding. Mai talked to Shotaro once more before he left for Boston.\n\n\"Shotaro please! You do not want this anymore than I do. If we both refuse, there will be no choice but to cancel the wedding.\"\n\n\"I will not do that, we have a duty to our families and what we want is secondary. We will marry as planned.\"\n\n\"You are willing to just walk away from the woman that makes you smile?\" Mai asked grasping for straws. \"What about her? Is she not worth fighting for?\"\n\nFor just a second, she thought that she had him; but then the resolute look returned.\n\n\"Begin to plan for our wedding, I will return as soon as I have taken care of things in Boston.\"\n\n\"Shotaro...\"\n\n\"Enough... this conversation is over and we will not discuss it again.\"\n\nHe then walked away without looking back. Later, when she had time to think about it; Mai understood something. She understood how Kenji and Patricia had come to be together. He had been brave enough to do what Shotaro wasn't. He simply walked away from what was expected of him and followed his heart. He loved the black woman enough to defy tradition and his family. She also realized that while Shotaro loved the woman in the letter, he would do as he was told even if it hurt the woman and him.\n\nMai had laid awake long after she and Shotaro talked weighing her options. If she had someone like Kenji, she could and would walk away. Kenji, she knew would never be accepted by her family. He would be seen as a rebel and the fear would be that she would also go against tradition. Her father already thought that-that was why he warned her away from Kenjiro.\n\n\"How much longer is this rotation?\" he would ask. \"You are not spending time with him are you?\"\n\nEach time she would say no and try to change the subject. She would catch Ani looking at her with a warning in her eyes, but Mai would look away. As she lay in bed, she wondered if she could convince her father to let her get an apartment. She felt a flicker of hope as she listed the reasons why having her own apartment would be beneficial.\n\nShotaro had been gone for about a week and she was home for three days. They were sitting on the patio drinking tea when she broached the subject.\n\n\"Father, I was thinking that maybe I should get my own apartment.\"\n\nThree pairs of eyes looked at her and waited for her to continue.\n\n\"I know that Ani and Jiro welcome all of us, but with the baby coming; they will need more space. If I moved to my own apartment, that would free an additional room for them to use as the nursery. It would also save time and gasoline. Once the baby is here, Ani won't be able to take me to the hospital or pick me up.\"\n\nAni wasn't buying it, but said nothing. \n\n\"No,\" her father said.\n\n\"The agreement was that on your off days you would stay here.\"\n\n\"I understand, but father that was before you decided to move here,\" Mai replied. \"I will come one evening a week for dinner...\"\n\n\"The answer is still no, \"her father said cutting her off. If the issue is getting you to and back from the hospital, then I am sure that between Jiro and me we can take care of that.\"\n\n\"But father, surely you can see that the house will be crowded,\" Mai said.\n\n\"Yes I can see that,\" her father replied. \"That is why I am purchasing a bigger home. Jiro and Ani will sell this one and will put the proceeds in a fund for the baby's future. As I said, I already have a buyer for my home in Boston and the proceeds from that will go toward the purchase of the new home. I expect that the money will be in my account sometime within the next month.\"\n\nMai couldn't speak because she was so angry. It galled her that Jiro and Ani had been in on the decision, but no one had bothered to ask her. Something inside of her broke. She was tired of people telling her what she could and couldn't do. In a rare moment of rebellion, she spoke up.\n\n\"Father, I must respectfully disagree with you. I am no longer a child, but an adult. As such I should be able to make my own decisions as to where I live and with who I associate with.\"\n\nAni and Jiro stared at Mai opened mouthed and waited for their father, Eisuke's response.\n\n\"I knew that it was a mistake to allow you to come here,\" he said after several minutes had passed. In a short time you have already become rude and you question the wisdom of your elders. I have to wonder how much of this has to do with the intern Takeda...\"\n\n\"He...\"\n\n\"Silence! I am speaking and you will listen!\" Eisuke said his tone cold. \"Next you will tell me that you will not marry Shotaro. Has this Takeda been filling your head with ideas of forgetting your familial obligations? Is that what this is about?\"\n\n\"No, but father since you mention Shotaro; I do not want to marry him. Nor does he want to marry me. He is in love with another...\"\n\n\"That doesn't matter,\" Eisuke interrupted. \"He is doing the right thing by honoring his obligations as you should be instead of arguing about what you should be able to do.\"\n\n\"What if I refuse?\" Mai asked. \"What if I refuse to live in the same house with you and refuse to marry Shotaro?\"\n\n\"Mai, who is it that pays for your education? Who is it that pays all of your expenses so that you can concentrate on your studies?\" Eisuke asked in a deceptively soft voice. \"Go ahead and refuse. Once you stop honoring your obligations, you will be on your own. You will not be permitted to stay here nor will Ani and Jiro offer you any financial assistance. I know that you are close to your cousin in Boston- I will alert her family as well. You will not only be penniless, you will also be without a family and a home.\"\n\n\"That... That is blackmail!\" Mai exclaimed as tears of anger, disappointment and frustration ran down her cheeks.\n\n\"You may call it what you want,\" her father replied, \"just as you may decide to do as you wish. I am tired, goodnight.\"\n\nMai speechlessly watched her father walk away. Jiro followed on his heels to give the sisters time to talk.\n\n\"Your fascination with this intern has already brought you trouble,\" Ani said softly. \"It wasn't until you met him that you grew dissatisfied with Shotaro.\"\n\n\"I was always dissatisfied with Shotaro,\" Mai replied. \"I just never said anything.\"\n\n\"Why now? You and Shotaro have been betrothed for years\" Ani challenged. \"I maintain that it has everything to do with Kenjiro Takeda. Had you not met him, would you have said anything?\"\n\nWhen Mai didn't reply, Ani pressed on.\n\n\"Mai, no good can come of defying father. He will disown you if you continue as you have been. If he disowns you I won't go against him and neither will anyone else. Also no good can come of coveting this intern. You will find yourself in disgrace and alone.\"\n\n\"Ani, this is wrong and you know it!\" Mai said with a sob. \"This isn't Japan!\"",
        "\"No Mai, what is wrong is that you lust after another woman's husband and do not deny it. I heard what you said about Shotaro and I agree with father- he is doing the right thing by putting his family first. Kenjiro Takeda didn't so that. He abandoned his family for his own happiness and he was wrong to do that.\"\n\n\"Would you be saying this if you didn't love Jiro?\" Mai asked. \"I concede that I should not be looking at Kenjiro Takeda as I have been, but the rest of it- taking away my choices is wrong!\"\n\n\"So you seek to compound that wrongness by being disrespectful?\" Ani asked. \"I don't know what I would be saying or feeling if I didn't love Jiro but I do know that I would not be looking for ways to be with another woman's husband.\"\n\n\"That's not what I'm doing!\" Mai retorted.\n\n\"Yes Mai, you are,\" Ani replied. \"That may not be what you were thinking when you thought about it, but that is where this is going. Mai, you are going to get hurt not only from your family, but from him. He loves his wife! I saw it in the way that he touched her. Please, I am begging you! Do not bring dishonor on yourself and our family by pursuing him. Tomorrow at breakfast, apologize to father for your rudeness and ask his forgiveness and all will be well.\"\n\n\"Ani...\"\n\n\"I am going to bed, Jiro is waiting; but Mai think about what you are doing. You have just insulted the man who has had nothing but our best interest at heart. You would not be here if not for his kindness.\"\n\n\"Is that what you call it?\" Mai asked tearfully. \"I call it control and manipulation! He says nothing until I want to do something not to his liking...\"\n\n\"Mai, maybe he sees something in you that must be controlled,\" Ani said. \"I have to admit that I agree with him. Without father's control as you call it, you would have already dishonored us. I am going to bed, but Mai; think about what we talked about.\"\n\nMai sat on the patio for a long time after Ani left. After she thought about it, she realized that she really had no options but to apologize to her father and to do as he asked for the time being at least. But as far as Kenji went, she didn't know. On one level, the intellectual level; she knew that she was wrong. On an emotional level, she wanted what Patricia, Ani and now the woman that Shotaro was in love with had. The fact that Patricia and Shotaro's woman weren't Japanese began to fade in importance. At that point it should have occurred to her to find someone attainable, but her mind was set on Kenji primarily because he was Japanese. He also had what Shotaro lacked: courage.\n\nThat had been almost three weeks ago. She had made her apologies and had been acted as the perfect and dutiful daughter. Whenever she was home, she worked on the plans for the wedding pretending to accept her responsibility. What she hoped and prayed for was that Shotaro would back out. Every time he called or wrote to her father, she hoped that it was to tell him that he wasn't coming back. It was now Christmas and that letter and phone call never came. \n\n****\n\nKenji was pleased that Mai seemed to take his talk with her to heart although like Patricia, he didn't really believe that her feelings for him had changed. He even doubted if what she felt for him was really love, but it didn't matter; it had to be addressed. The good thing was that the gossip and bets about them had stopped. Kenji didn't know who or what the latest target was, and he didn't care as long as it didn't involve him.\n\nHe counted the days that he had left before he could go home for Christmas-one more shift. He had already gone Christmas shopping. The gifts were hidden in the trunk of the car. One of the gifts was a small diamond ring for Patricia. He knew that she would fuss about him spending the money, but he knew that Ralph would have wanted her to have it. He looked forward to the day when he could buy her a diamond with his own money. He knew that it didn't matter to her whether she had a diamond or not, but it mattered to him. For Niko he got a small chemistry set and for Marie a box of crayons that had every color imaginable in it, paints and a sketch pad.\n\nIn his suitcase were the floor plans of several homes. He knew that he was being premature, but in less than two years they could begin the search for their first home. He was thrilled with the knowledge that he would be able to support his family without the help of others. After they made love, he would show Patricia the floor plans and they would begin to plan out the rest of their lives.\n\nThe last shift passed slowly. It seemed as if everyone was taking a holiday from being sick. About one am, Dr. Vicente went to Kenji with good news.\n\n\"It's quiet here so there's no point to you staying until seven. Why don't you go home?\"\n\nKenji didn't need to be told twice. After thanking Dr. Vincente, he took off at a run before anything happened that he had to stay. As he ran up the stairs, he wondered if he should call Patricia; but decided to surprise her. He quickly stripped the bed, packed his things and left the tin of cookies and small gift for Robert on the desk.\n\nHe grabbed his bags and ran down the stairs past the phones. He stopped rethinking whether he should call Patricia or not. He backed up, looked at the phone and decided to call. \n\n\"Kenji?\" Patricia asked in a sleepy voice, \"What's wrong?\"\n\n\"Nothing Kirei,\" Kenji replied. \"I am calling with good news. It is quiet here and Dr. Vicente is letting me leave early. I will see you shortly. And Kirei? Could you please put on the lavender gown?\"\n\nMai, also having been released early, stood behind Kenji listening. Jealousy and anger raged through her as she listened to Kenji ask Patricia to wear a certain gown. It left no question as to what was going to happen when he got home. She moved away when she heard the usual \"I love you, but this time it was spoken in Japanese.\n\nBy the time Mai reached her small room, she was crying at the unfairness of it all. Since it was late, she couldn't go home- not that she minded. She changed into her pajamas and tried to sleep. Sleep didn't come easily and she made a decision: she would write to Shotaro and beg him to deny her. He could say whatever he wanted for the reason including that she was a whore. It was now the only way out of the marriage and the only way that she could keep her financing for school. It was a gamble; her father could still disown her. It was that thought that made her hesitate. After a moment more, she made her decision.\n\nShe got up, turned on the lights and sat at the desk and wrote her letter.\n\n\"Dear Shotaro,\n\nI know that you do not wish to discuss this, but please listen to reason. We do not care for each other and for us to marry will only be a constant reminder of that. I will never make you smile as the woman in your letter does. We will both live our lives in unhappiness and will come to hate each other. Why should we do that? Just to satisfy old traditions? What of any children that we would have? How is bringing them into a loveless home any better than you bringing a child of mixed heritage into the world? In time you will begin to see me as the one who kept you away from your one true love. Shotaro-please, I am begging you to back away from this marriage. You can give any reason that you like including that I have dishonored you. Our time grows short, so please either call or write to my father. I will find out from him whether the marriage is cancelled or not.\"\n\nThank you in advance, \n\nMai\"\n\nMai quickly reread the letter and got it ready to mail. She redressed and left her room to mail the letter. If Shotaro agreed, her father would be angry; and she would be at his mercy; but it was a gamble that she was prepared to take. She didn't believe for one second that Ani and her cousin would turn their backs on her. With that in mind, she put the letter in the mailbox and went back to her room hoping that Shotaro would change his mind and cancel the wedding.\n\nBy the time she was undressed and back in her nightclothes, her mind was on Kenji and Patricia imagining what was going to happen in their bedroom. She wondered if Patricia had done what Kenji had asked of her and put on the lavender gown. \n\n\"Of course she did,\" Mai scoffed as she lay on the bed.\n\nSuddenly her nightclothes seemed too confining. She tossed and turned trying to get comfortable and trying not to think about what Kenji looked like naked. Her body began to tingle in places that hadn't been touched since med school. That was her one dishonor. The man, another student had also been Japanese and their affair had been brief but intense. It ended when he was accepted as an intern somewhere in one of the southern states. For weeks after he left, Mai pleasured herself. Then there was the pregnancy scare. After that, she slept with no one else. \n\nHer hand made its way to between her legs. She closed her eyes and imagined that the hands belonged to someone else. She knew just from Kenji's mannerisms that he would be a thoughtful and gentle lover. Patricia's name popped into her head, but she pushed it away. Her breathing quickened as a finger slipped between her vaginal lips. She moaned softly when she touched her hardened nub and began to rub it in tight little circles harder and faster until her hips raised off the bed and she was crying out her release. A few minutes later, she was sound asleep dreaming that she was free to marry whom she chose. In her dream, the one she chose was Kenji."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese man",
        "black woman",
        "historical romance",
        "historical",
        "historical drama",
        "drama",
        "romance novella",
        "interracial romance",
        "asian man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-18"
}