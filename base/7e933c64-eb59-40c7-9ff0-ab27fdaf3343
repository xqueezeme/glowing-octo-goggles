{
    "title": "How To: Create a Golem",
    "pages": [
        "How To: Create a Golem\n\n<center>1 Collect Virgin Soil</center>\n\n\u05dc\u05d0\u05e1\u05d5\u05e3 \u05d0\u05d3\u05de\u05d4 \u05d1\u05ea\u05d5\u05dc\u05d4 \n\nThere is a different type of cold that reaches beyond the limitations of temperature. It's a sterile, unemotional beast that reminds you that man is mortal and civilization is a facade that can be stripped away. This cold seeped into my soul as I trudged my way back into the truck and began removing my protective gear.\n\nOur drilling was done. We'd removed the clay from under the tundra and had plenty of ice that hadn't been liquid in millennia. I stared out the window as Joe drove us back to the base. It was a barren and stark landscape that offered neither comfort nor hope. \n\nJoe had the powerful halogen lights on as we drove and the fleeting daylight gave up its fight against the twilight. \n\n\"What the fuck!?\" \n\nStriding from the snow onto the worn pathway in front of us, snow embanked on the sides, the creature lurched towards the truck. I leaned over and grabbed the wheel. The vehicle skidded, slipped, righted itself and we kept going. \n\nPushing me back into my seat, Joe wiped at his eyes. \"What the hell was that?\"\n\n\"A bear. It was a bear.\"\n\n\"The fuck it was! It looked like a huge man in furs.\"\n\n\"It was a bear.\"\n\nHe turned to look at me but I refused to meet his eyes. \n\n\"Yeah, a bear. Sure.\"\n\n\"Radio ahead. I want the helicopter picking us up tonight.\"\n\n\"Can't wait until morning, Doc?\"\n\n\"No, get it here asap.\"\n\nIt had found me. Again. \n\n<center>2 Collect Fresh Water</center>\n\n<center>That Has Never Been Poured Into A Vessel</center>\n\n\u05dc\u05d0\u05e1\u05d5\u05e3 \u05de\u05d9\u05dd \u05de\u05ea\u05d5\u05e7\u05d9\u05dd\n\nThe clay was in crates and the frozen water was stored in temperature-controlled containers. As the helicopter took off I wondered if I was leaving the men there to their deaths. Too tired to weep and unable to sleep, I put my headphones on again and listened to the almost endless recitation of Hebrew phrases. \n\nOpening my dog-eared copy of Sefir Yezirah, known in English as the Book of Creation, I tried to concentrate as we flew to Williams Field at McMurdo Station. The constant drone of the engines acted as white noise and I was able to push everything else aside.\n\nI was bone-weary and worn down to a shadow of who I used to be. The hunt was relentless. Trying to be proactive as I fled had drained me. It had been less than a year but felt like a lifetime. My eyes ached and felt dry. Eventually putting the book down, I felt myself slipping away, dreaming of long hot showers and family that was now dead, killed to satisfy a twisted karmic debt that has lived beyond mortal limitations.\n\n<center>3 Gather Pure White Vestments</center>\n\n\u05dc\u05d0\u05e1\u05d5\u05e3 \u05d5\u05e1\u05d8\u05d9\u05dd \u05dc\u05d1\u05e0\u05d9\u05dd \u05d8\u05d4\u05d5\u05e8\u05d9\u05dd\n\nMy money, like my future, was slipping through my fingers. One of the only benefits of having your relatives stalked and killed is that you found inheritances coming your way. A year ago I was a wealthy man. Now I was using the last of my savings to finance an impossible scheme. \n\nThe phone refused to ring and every minute I waited felt like a lifetime. I lay on my bed staring up at the ceiling fan as rippled shadows played across the room. I tried to make the most of the weeks, days, and hours I had left. My sister's last call to me was saved on my phone. I'd listen to it over and over while staring at her picture, her voice fading into familiar sounds as the words lost meaning. \n\nThe sounds were comforting and familiar, bringing peace to my soul. Childhood memories swam forward, the two of us at the beach building sandcastles, drinking those store-brand sodas Mom bought, and throwing the crusts from our sandwiches to the seagulls. \n\nLike the rising tide slowly encroaching on our creations, breaking them down, tearing them apart, the creature methodically destroyed my family. My parents' mysterious deaths in Germany, my sister's death in Brooklyn, and so on throughout the years. No one in my family died of old age. \n\nNow I was the only one left to remember them, and if this attempt failed, I would be gone as well. \n\nNot far from Mahane Yehuda Market in Jerusalem, I could hear the distant voices of merchants reaching my open window, and still, I waited. The tailor was the artisan of choice for Hasidim of means. He needed wool from a snow-white ram, specially crafted scissors that had been used for no other garments, and other implements that continued to drain my money. \n\nA minyan was formed and compensated with more of my resources. They prayed continuously as the tailor cut, snipped, and sewed. Ten Jewish men reciting ancient prayers that had been passed down from generation to generation. \n\nClosing my eyes, I wondered how long it would be before my sister's face would become less distinct in my memories, when it would start to fade as my parents' had. I realized that I might not live long enough for that to be a concern when the phone rang. \n\n\"Hello?\"\n\n\"Dr. Franks? It is done. You may pick them up anytime before sunset.\"\n\nSighing, I sat up. \"Thank you. I'll be there within the hour.\"\n\n<center>4 Discover The Name Of God</center>\n\n\u05dc\u05d2\u05dc\u05d5\u05ea \u05d0\u05ea \u05e9\u05de\u05d5 \u05e9\u05dc \u05d0\u05dc\u05d5\u05d4\u05d9\u05dd \n\nEverything I was working on was the longest of longshots. Of each bizarre component, the most far-fetched was determining the true name of God. None of this was an exact science. The closest you were able to get to perfection in each step, the greater your chance of success, but according to legend, there was wiggle room. \n\nIf your clay wasn't the purest, if your shaped body wasn't worthy of Michelangelo, if your garments weren't cut to exactly the right length the project could still succeed. If, however, the name of God was wrong or incomplete or was more of a description of an aspect of God, the resulting golem would be highly flawed. \n\nSeven years ago I met Sarina Albohim, an Ethiopian archeologist. She was convinced that YHWH and Elohim were correct but limited. Sarina was as beautiful as she was brilliant. We spent many days drinking, eating, and passionately debating the merits of proto-Hebrew and the Gnostic Gospels. Those days were often followed by nights in her bed or mine. \n\nI knew the horrors that had befallen my family, and I couldn't condemn Sarina to such a fate if or when I became the creature's prey. As much as we would have preferred our dalliances to grow into something more permanent, we distanced ourselves. \n\nSarina traveled and researched while I funded her efforts. The tetragrammaton needed amending, in her learned opinion. She joined the staff of Cambridge and studied under Professor Janezeeta McGillicuddy, the expert in Semitic languages. \n\nWe spoke daily. Sometimes it was a few words, other times it was hours. No matter what we spoke of on the surface, the subtext was always the same. We shared a yearning for each other, to be together, to live our lives entwined in the other's heart and soul.\n\nAnd then the creature came for me. It was odd questions at first. \"Dr. Franks, did that man reach you? He said he was an old friend, but his... Well, I thought he might be a patient. That poor man.\"\n\nThere were two times when I escaped him. A glimpse of a large, incongruous body, arms long enough to snatch me and pull me into the darkness and I was gone, running, making my escape. I knew my safety was temporary. I wouldn't always get away.\n\nHis grotesque laughter would follow after me, the echoes chasing that of my footsteps. Did he allow me to escape? Was he playing with me? \n\nThe last I spoke to Sarina she was heading home to Axum in Ethiopia. There is a priest there that attends what they claim is the Ark of the Covenant. She'd somehow arranged to have him inscribe her version of Eloha on the shem that will be inserted under the tongue of our golem.\n\nWorking with her mentor on fragments of gnostic gospels found in Nag Hammadi and sold on the black market, they came to believe that a more complete name of God included both the masculine and feminine. Without both, any attempt to create life was doomed to failure and corruption. \n\nI had no idea how she convinced the priest to aid her, how she got past the fabled blue gates that led to the church that was the home of the supposed Ark or if her efforts would be fruitful. \n\nAll I could do was trust in her genius and dedication. \n\n<center>5 Craft The Body</center>\n\n\u05dc\u05e2\u05e6\u05d1 \u05d0\u05ea \u05d4\u05d2\u05d5\u05e3\n\nI rented converted warehouse space in Brooklyn, the same borough where my sister had died, and oversaw the delivery of everything I'd accumulated. Fasting for days whilst praying continuously, I had sculptors guide me as I shaped the clay and kneaded in the water. \n\nSeparated by a curtain but in the same room, I had another minyan of ten Jewish men reciting prayers as I worked. They thought me eccentric and maybe a bit mad. They were right, but my money was good and they could see no harm. \n\nMy vestments slowly took on the reddish hue of the clay as I worked. Pausing often, I would stretch my shaking hands and let them still. Unlike Jonathan, I'd waited my time and incurred no curse as I ate from the honeycomb. My blood sugar rose, the trembling halted and I went back to work. \n\n\"A little higher on the shoulder, Dr. Franks.\" I'd listen and add more clay. \n\nArtists abounded in Brooklyn, and it seemed like every one of them had boundless talent and empty pockets. They also thought I was eccentric and maybe a bit mad. They also were right, but my pockets were still deep enough to ensure their assistance. \n\nEarbuds in, they often had to wave their hands in front of me to get my attention. They were under strict orders to not touch me or my vestments. The repeated phrases I listened to lost all meaning and became just sounds as I shaped and molded. \n\nSmells that shouldn't and likely didn't exist began to fill the room. Hot copper and rich spices were redolent and pushed my other senses out of focus. I alternated between feeling chilled and flushed, and found myself forcing my eyes to blink so they didn't dry out. \n\nI was losing what was left of my mind.\n\n<center>6 Carve Your Commands</center>\n\n\u05dc\u05d2\u05dc\u05e3 \u05d0\u05ea \u05d4\u05e4\u05e7\u05d5\u05d3\u05d5\u05ea \u05e9\u05dc\u05da\n\nProtect, or lagen in Hebrew. \u05dc\u05d4\u05d2\u05df\n\nIt was to be carved into the side of my creation's head. \n\nKnowing my limitations as an artist, I cheated. A stencil was created and then affixed parallel to the head. I used that. The blade went through the stencil and into the skull and I simply followed the pattern. \n\nIf this worked, our creation would need direction, a raison d'\u00eatre. \n\nProtect. Save me from the hubris of the man who thought to defeat death.\n\n<center>7 Insert The Shem</center>\n\n\u05d4\u05db\u05e0\u05e1 \u05d0\u05ea \u05d4\u05db\u05e0\u05d9\u05e1\u05d4\n\nI washed and then washed again. Opening the box with reverence, I removed the small piece of papyrus, rolled it carefully, and approached the form. Kneeling, I added an informal prayer that was closer to begging than anything else. \n\nInserting it into the mouth and under the nascent tongue, I sat back on my haunches and stared at the body I'd molded. \n\nOne way or another, we neared the end.\n\n<center>8 Recite The Prayers</center>\n\n\u05dc\u05d3\u05e7\u05dc\u05dd \u05d0\u05ea \u05d4\u05ea\u05e4\u05d9\u05dc\u05d5\u05ea\n\nThe artists had been dismissed long ago. It was just me, the minyan, and the clay body. I ate of the unleavened bread, consumed more honey, and made sure I had plenty of water. \n\nRestarting the recording, I spoke along with the voice that had been a part of me for hour after hour, day after day, week after week. The words and phrases had become ingrained in my heart and soul, a part of me that needed to be, demanded to be, uttered, and released into the world. \n\nI'd become a Kabbalist with one dedicated purpose. When this was all done I'd never dabble in such things again. It wasn't romantic or intriguing. Everything was a means to an end.\n\nHour after hour I spoke aloud the words. The volume seemed to grow and recede, and I wasn't sure if it was in my mind or not. The walls that enclosed my sanity were slowly being lowered. There were built-in pauses where I would drink, and as I returned to that pause, I would have some of the honey and let it coat my throat. \n\nAs I approached the final recitation I rose to my feet and stretched. Seven times I walked counterclockwise around our creation, my voice steady and even. Sparks seemed to ignite at the edge of my vision, and I shook slightly as I moved, oddly sure-footed. \n\nMy circuit completed, I stopped and stared. The clay remained clay, lacking animation. Rocking back and forth, I waited. There was nothing. More than seven years of effort resulted in a lifeless sculpture of dubious artistic merit. \n\nAgain. Again! I forced myself to walk another seven times around the form, repeating the words and phrases from the ancient text. One step after another. \n\nNothing. \n\nA third time. Tears streaking down my dusty and clay-spottled face, I put one foot in front of another. One time around. A second time. Another and another until I'd circled it seven times.\n\nNo spark, no vitality, no animus. \n\nEverything was for naught. If I lived, my family existed, they didn't all die for nothing. And yet, I'd failed. Falling to my knees, I clutched my belly and listed to my side, silent sobs wracking my body.\n\nEventually finding some strength, I got to my feet, drank of the water, and resigned myself to my death. I walked past the curtain and spoke to the men. I thanked them for their help and wished them well. \n\nWalking them out, I finally noticed the rain that was pelting the building. They hustled to two vans and drove off as thunder rumbled across the night. Shivering, I went back inside. \n\nI was disgusting. The stench of dried sweat stuck to me and I was too exhausted to do anything about it. There was a cot and I fell into it like a man obsessing about oblivion looks to the water below and steps from a bridge. Like that man, I found darkness and an ending.\n\nMine, however, was temporary. It was still dark as my eyes shot open. Something had awakened me. Something wrong. Something sentient. Something that shouldn't exist. Its mere presence yanked me from my sleep.\n\nTrying to scramble from the cot, I fell to the ground. \n\n\"At last. All the years, all the hiding and we are finally at an end.\"\n\nThe voice was unnatural, causing my reptilian hindbrain to scream at me to flee, hide, or fight.\n\nI did none of that. \n\nSlowly getting to my feet. I took the two steps to the wall and hit the switch. The lights came on and I beheld him, the nightmare that had hunted and eliminated my family.\n\n\"No pleading, Doctor? No begging? No assurances that you will not breed if I only let you live?\"\n\nThere was a restrained glee in the eyes of the malformed monstrosity. I wondered if the man who once had those eyes looked as mad. \n\nI shook my head. \"No. No begging. Just do what you are going to do.\"\n\n\"You are braver than many of your line, Herr Doctor, I will give you that, certainly braver than your forebear, the original Dr. Frankenstein. You do not quake in fear in front of your ancestor's creation. Two-hundred years. It has taken me more than two centuries, but tonight I will end the line of my creator. This not-so-modern Prometheus will have had his vengeance.\"\n\nSighing, I looked to the ceiling and then took a deep breath. \"Not brave. I'm tired. So, so tired. Just do it.\"\n\nHe tilted his head in my direction, an acknowledgment of his victory, like a gentleman gambler who had won the final hand. Taking one step towards me, he pivoted and looked behind him. The curtain was thrown to the side and She stood there. One purpose. To protect. Hand darting out, She grabbed the creature by the throat and lifted.\n\nMy many-great uncle's creature struck Her arm again and again. Her grip only loosened when She hurled him against the wall. Bellowing, he rose and charged. Striking again and again, his rage matched the storm outside the walls. \n\nShe stumbled on occasion but did little more. He never realized that he could have just left. If he was gone, She'd have nothing to protect me from. His efforts amounted to little, but She wasn't fighting back. Eventually turning towards me, he ceased his attack on my protector and moved my way. \n\nGrabbing his shoulder, She hauled him backwards, wrapped an arm around his neck, and wrenched the head from his body. Falling to the ground, its centuries of isolation and pain were done. I staggered back a step and leaned against the wall.\n\nLightning lit up the sky as I saw his de-animated corpse lying on the floor, head a few feet away with lifeless eyes staring up to the rafters.\n\nIt was over. Finally, simply, over.\n\n<center>9 Live<center>\n\n\u05dc\u05d7\u05d9\u05d5\u05ea\n\nSarina and I stood next to my sister's headstone. Whispering, I told Mary that she could rest now. Looking at Sarina, her hand resting on her swelling belly, I told my sister how we would continue. We would persevere and I would tell her nieces and nephews about her. \n\nI felt something akin to eyes resting on me, watching me. Near or far, She observed from the shadows. Taking Sarina's hand, I walked with my wife back to the car content knowing that my children would be protected if another threat arose. \n\n<center>*****</center>\n\nHappy Halloween! This was a collaboration between Bebop3 and Steve M. We would like to thank Ms. M. Shelley for the inspiration. \n\nWe'd be remiss if we did not express our gratitude to everyone that was kind enough to beta-read and/or offer feedback. We're also grateful to Nora Fares for the editing. Due to last minute tinkering, any errors are the fault of the authors.\n\nAs always, we appreciate the continued efforts of the Amalgamated Adventurers."
    ],
    "authorname": "Bebop3",
    "tags": [
        "go mets 2021",
        "golem",
        "halloween 2020",
        "kabbalah",
        "no ninjas"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-create-a-golem"
}