{
    "title": "Spinal Meningitis is No Joke Ch. 08",
    "pages": [
        "What do you do when your ultimate fantasy becomes a reality? You hold on tight and don't ask any stupid questions about it. I lay in bed, trying to keep that in mind with my arm wrapped around my sleeping fantasy woman. Leanne and I would probably have gotten together eventually, but after my sister and my mom had gotten me worked up to the point of no return...\n\nI can't say I regretted what we had done, just that I could scarcely believe how intense that insane, often violent coupling had been. I had gone longer, harder and cum more than I would ever have believed was possible. Leanne had been equally unbelievable. I looked at her sleeping face, right in front of mine. Unbelievable, I thought for the fiftieth time.\n\nUnfortunately, my body was now paying the price for that manic exertion. Despite the vitamins and supplements, despite drinking almost a gallon of water, the pain that was wracking my body was making it impossible for me to lie in bed. I kissed Leanne's forehead and then her nose before getting out of the bed with a groan. I stretched my arms above my head, trying to work out the kinks in my back. My buttocks and the backs of my thighs were cramping up almost continuously. At least the sunburn was no longer excruciating. Then again, it may just be that my muscle pain was so much more intense, like when you have a hangnail that hurts a lot until someone stomps on your foot.\n\nMy groaning and moving around wakened Leanne. I saw her eyes open in the mirror, saw her stretch out languidly in my bed, the sheet sliding down to reveal one of her magnificent breasts. I slowly turned around to face her. I was really trying to control my face, trying to smile at her, but I winced despite my best effort. I did manage to force a smile after that. Leanne smiled up at me, her face looking relaxed as she softly spoke to me.\n\n\"Oh, Josh. I can barely believe what we did. You were beyond my wildest dreams.\" Her expression vouched for her words, it was just dreamy as she gazed up and softly shook her head. She sighed softly then. A wry little smile came to her lips as she continued, \"Of course, we're totally busted now. I don't even know what I'm going to say to Beth.\"\n\n\"You know,\" I said to her softly, \"I was thinking the same exact thing an hour ago. But...we're not busted at all.\"\n\nLeanne's eyes lit up. \"How is that possible?\"\n\n\"After I carried you in here and tucked you in, I walked out to the living room prepared to catch ten kinds of hell. Nobody was here. I walked through the whole house, saw my mom's car was gone but Beth's was still here. I thought they might be back any time, so I was scrambling around trying to clean up all the evidence.\"\n\nLeanne had a little shiver pass through her as she recalled that evidence. What that did to her exposed breast was far too distracting. I closed my eyes and took a deep breath before going on.\n\n\"Once I had done that, I wanted to make sure things looked as normal as possible when they got home. So I got dressed, came in and put your panties on you, and sat out there working on the placement stuff.\" Leanne's eyes had widened a bit when she realized that she was wearing her panties. I could see her mind working through the implications of that. I went on, \"I did two more chapters in that World History book, and then realized I was starving, so I made a sandwich, grabbed chips and...\" Leanne's expression told me that she was starving as well, now that I had mentioned food. \n\n\"Hey, why don't I fix you some lunch and we can continue this while you eat?\" I suggested.\n\nLeanne's face lit up again, and she hopped right out of bed and over to stand in front of me. That vision is planted in my brain to this day. I will carry it to my grave. I have to admit, though, I flinched a bit as she reached for me. Leanne's hands were gentle as she put them on top of my shoulders and rose up to kiss me. I kissed her right back, still marveling as my hands wrapped around her naked back and her breasts pressed against the sensitive skin of my chest.\n\nShe broke off the kiss, looking deeply into my eyes. \"Amazing,\" she murmured. She then turned to get dressed. I was frozen there, my eyes worshipping that incredible sexy backside as she bent over to pick up her clothes, bent more deeply to step into her shorts. She turned to face me again as she started putting on her bra. Her delicious smile snapped me out of the spell she had me under. I smiled wryly and asked, \"What can I make you for lunch, my goddess?\"\n\n\"Ooh. 'Goddess,'\" Leanne grinned at me. She pulled on her t-shirt, \"I think I like the sound of that.\" \n\nWe went to the kitchen. I started pulling together a decent meal, but it was mostly leftovers like my mom's potato salad.\n\n\"I would love to cook you an amazing meal, Leanne,\" I said as I made her a roast beef sandwich. I knew exactly how she liked her sandwich. I could have made this in the dark, with my eyes closed. \"But if you're as hungry as I was, you just need something good in your stomach now.\"\n\n\"It's like you read my mind,\" she said. I barely got the plate in front of her before she was on that meal like a starving animal. I jerked my hand back, making a show of counting my fingers to make sure they were all still there. Leanne growled at me around a bite of potato salad. I smiled at her as I sat next to her at the table and went on.\n\n\"Let's see...oh, so I had my lunch, and I was about halfway through another chapter in this thing,\" I indicated the World History text book, \"and still nobody had showed up. So I cleaned up after my lunch and called my mom. Mind you, still thinking I was going to catch hell. At that point I figured they had heard us, got mad and left or something. But instead of that, mom was at her office, just asked if I was okay, and...\n\n\"Oh! Sorry, I was supposed to tell you, Paula Henderson is having a bunch of friends over for drinks. Mom dropped Beth over there so she wouldn't have to drive home. You're invited as well, and if you'd like, my mom will drop you off so you don't have to worry about driving anywhere.\"\n\nLeanne chewed thoughtfully, nodding to indicate she had heard me. She swallowed the bite she had in her mouth and said, \"I'm not sure that's a great idea. I'm not sure I can face those guys right now.\"\n\n\"Hey, I'm in no hurry to send you anywhere,\" I said. The dreamy look returned to Leanne's eyes. I shivered a bit before continuing, \"So, my mom said she would be at her office at least two more hours. She did have a client coming in, and she said she'd call if she was going to show houses today.\" I thought hard about that conversation, but didn't think I had left anything out.\n\nSatisfied with my account, I nodded. \"That's it. So, I was obviously relieved. I knocked out the last of that chapter and rejoined your sexy body in bed. Well, until my muscles started a freaking holy war under my skin and I had to get up to stretch. Sorry to wake you up like that. You look amazing even when you're sleeping, by the way.\" Leanne colored at the compliment. I felt like I made up for some of my earlier awkwardness with that one.\n\nJust when I was feeling self-congratulatory, a vicious cramp bit into my left butt cheek like a steel fist. I practically fell out of my chair. Through clenched teeth I made sure to get out \"cramp!\" before I rolled to the living room carpet and tried to work it out. I looked over at Leanne. She looked a little alarmed, and was rising to her feet. I held up a hand and said, \"There isn't really anything you can do about this, please finish your lunch.\"\n\nThen I was stretching out my legs and rubbing my tightly clenched butt cheek, trying to relax the muscles without aggravating my sunburn again. That was a slow, excruciating process. Somewhere in the middle of it, Leanne brought me a big cup of water with a lid and a straw, holding it for me to drink while I stretched my left leg.\n\n\"Have you been drinking enough water?\" she asked. I nodded, and when I finished guzzling through the straw I got out, \"I've had a gallon and then some since...\" and tilted my head toward the bathroom.\n\n\"Good,\" she said. Then, \"Actually, I need to use the bathroom. I'll be right back.\"\n\nI stared at her ass walking away from me, still on my back on the floor. \"Even upside-down, her ass is perfect,\" I thought. A few minutes later, Leanne returned. She stood above me and held a foot or an ankle, helping me stretch out my legs. When I remembered the laundry in the washer, Leanne followed me while I moved it to the dryer. We returned to the living room, where she continued to help me stretch out my legs and buttocks. She talked to me gently while we did this, \n\n\"You really did do a good job cleaning up that bathroom, Josh. I expected, you being a guy and all, that it would still need some work.\" I chuckled a bit at that one. It's not like she was wrong, most of my friends are...well, \"pigs\" is a little harsh. Let's say they haven't learned to clean up after themselves very well. \"Did I say something funny?\" Leanne asked looking down at me.\n\n\"I was just thinking about how Mark's bathroom always looks like hell. Seth isn't any better. The really funny part of that, though, is it's my dad who taught me to clean house thoroughly.\" We both smiled at that. I had a more sobering thought, though.\n\n\"Leanne...I just want you to know, I'm sorry I was so rough with you earlier. I'm not normally like that at all. Are you okay now?\" I stopped short of asking if I had hurt her gorgeous little pussy with the rough fucking I had given it. She saw that meaning in my expression, though.\n\n\"You were...that was just...\" Leanne looked annoyed as she hunted for the right words. \"That was a lot rougher that I was expecting. Now, I absolutely loved it, don't get me wrong. After you came the second time, though, you were so much gentler, so much more in control...I could see the difference in your eyes, in the mirror there. My pussy is still tender, but\u2014don't you dare apologize! But, seriously, if I could come up with a good excuse, I would drive us over to my place and have you fuck my ass again like that right now. That was amazing, Josh.\"\n\nMy cock throbbed as those words washed over me. I began wracking my brain. Come on, man! Think of that excuse! Everything that occurred to me sounded lame, or it involved lying to my mom in a way that she would certainly see through. \"Damn,\" I finally said, \"If my mother wasn't so damned smart, I could come up with a lie. I would love to see your place, Leanne.\" I raised my eyebrows suggestively, once, and she gave a sexy shiver before she answered softly, \"I would love for you to 'see my place,' Josh.\"\n\nWe heard my mom's car pull up then. She walked in to find me lying on my back while Leanne was helping me stretch. It was a perfectly legitimate physical therapy exercise, I thought. My mom looked in, nodded when she saw what we were doing, and smiled at us. \"I'm going to change and I'll be right with you,\" she said.\n\nAfter the stretching, I did feel remarkably better. I'm sure it helped that I had eaten and had the vitamins and supplements, and had drunk all that water. I ducked into the bathroom to apply more aloe, paying particular attention to my neck and shoulders. Leanne came in and did my back. We shared a hot look in that bathroom mirror, and a quick, hot kiss afterwards, but were careful not to start anything more.\n\nLeanne did administer the standardized post-coma cognition test that afternoon, with my mom in attendance. The test was mostly little mind games with numbers and names and words. It seemed blessedly easy, although I get how that wouldn't be the case if I had sustained brain damage from my illness. Again, I have been remarkably fortunate.\n\nLeanne tallied up the score when we were done. \"Well?\" I said, \"How did I do?\"\n\nLeanne looked up at me, then my mom. She took a big breath and said, \"Josh, it seems that you are not a vegetable.\" She then flashed that sexy grin and we all laughed.\n\nI then did some actual work, hunkering down to hit the junior English course. My mom noticed that I was just starting on it and raised an eyebrow.\n\n\"Oh, right,\" I said, \"I finished up chapter eight in the World History course, but then realized I had been a jackass and hadn't fed our guest lunch.\"\n\nLeanne nodded and added, \"You can make me a sandwich like that any time.\"\n\nMom and I both raised an eyebrow at that one. It did sound suggestive. Leanne thought about it and blushed. \"No! Really, that was a perfect roast beef sandwich. I wasn't saying...\" \n\nI chuckled, and my mom smiled. I went on, \"Then I got these fierce muscle cramps in the backs of my legs from all that weight lifting yesterday. I did take my vitamins and supplements earlier, but Leanne really helped me get stretched out, there.\" I indicated the living room carpet, where my mom had seen what we were doing.\n\n\"Still, I'm right on pace with the course you set up, Mom. As long as I can stick to it, I'll be ready to take those placement tests in six weeks. This afternoon, I need to get three chapters of English done.\"\n\nI got to work, and listened in as Leanne started talking to my mom. \"Josh told me you dropped Beth over at Paula's place. Are they already drinking this early?\"\n\n\"I don't know. Probably something light while they use the pool. Dianne, Tiffany and Annabelle were there already. I think Christine and Tammy are planning on dropping by later.\"\n\n\"Oh, really? Tiffany got Charley to watch the kids and let her go out?\"\n\n\"Well, maybe she got a sitter. That girl deserves a good night out.\"\n\nLeanne nodded vigorously at that. I had to really make myself focus on the book in front of me instead of her bouncing breasts. My mom then continued with, \"So, would you like me to drop you off? I'll be picking Beth up in the morning...unless she calls earlier.\"\n\n\"I don't know...\"\n\nMy mother then gave a bit of a speech.\n\n\"Leanne, you know I love you, right? You have been the best sister that my daughter could ever have had. You need to enjoy these moments with your friends. You're at the age where you still have them in your life; best friends forever. But, life is going to get moving for you awfully damned fast. Before you know it, you find yourself married, you've moved a couple times, and\u2014if you're really lucky\u2014you have raised some amazing kids.\" \n\nI looked up at that. They were both smiling at me. I smiled back and went back to reading. \"But then you realize that you haven't seen your best friends in years. You aren't a part of each others' lives anymore. I couldn't tell you what my best friends from high school are up to these days. Oh, we send out Christmas letters, and I know their kids' names, but it's not the same. What I do have are some great memories of the times we got to hang out. You should go enjoy an evening with your friends. You'll have that memory to cherish for the rest of your life.\"\n\nLeanne laughed at that, a lovely sound. \"How could I say no to that?\" she said.\n\nMy mom had me read out loud from the textbook, but it just wasn't the entertaining exercise that reading World History had been. I looked up at the dazed, somewhat sleepy expression on their faces and quipped, \"Well, if I ever want to knock you guys out, we know what I need to do. Read you an English textbook.\" They managed weak smiles at that, but then I snapped the book shut loudly. \"Fortunately, the torture is over! Now, why don't you ladies make yourselves comfortable in the living room while I cook you a real dinner.\"\n\nMy mom has really made an effort over the years to teach Beth and me to cook. Neither of us will ever be as good at it as Mom is, but I can cook a decent meal. Tonight, the chicken marsala I served up was inspired. The setting couldn't have been better, either. The sun was setting behind the house, making Leanne's and Mom's faces seem to glow as they savored the food.\n\n\"Mmm,\" my mom said, \"Wow. Joshua, I have to say, you have surpassed me on this one. This may be the best chicken marsala I've ever had.\" High praise, indeed.\n\nLeanne finished a bite and moaned. She turned to my mom and said, \"Jennifer, I hope you won't be mad, but I'm going to have to marry your son.\"\n\nMom reached out and squeezed Leanne's hand. \"Nothing would make me happier.\"\n\nMe neither, I thought as I ate my dinner.\n\nAfter dinner, I was outvoted and the ladies did the dishes. Mom had me put on one of my dad's shirts over my tank top. It was a really lightweight silk shirt that would cover my sunburn without hurting me. It also looked really good on me. I knew the shirt was expensive, so I promised I would be careful with it. I got out my cell phone to call Mark's house. His mom answered and said that he was over at Seth's.\n\nI called over there, and Seth's mom was really excited to hear my voice. She eagerly invited me to come over. The three of us piled into my mom's Subaru and we dropped Leanne at Paula's place. We could hear laughter and splashing coming from the back yard. Mom rolled down the passenger side window to say goodbye to Leanne, \"Remember, if you girls want to come back tonight, just give me a call,\" she said.\n\nLeanne turned back to us and said, \"Alright, I'll do that. I should have brought a swimsuit, though.\"\n\nMom laughed, \"Nobody else did.\"\n\nWhen I realized what that implied, I acted like I was getting out of the car, \"You know,\" I said, \"maybe I should stay here. In case they need a lifeguard or something.\" Mom gave me a bit of a stern look, but she laughed along with Leanne.\n\n\"Have fun!\" my mom said as we pulled away from the driveway.\n\nI have to admit I was a little nervous when I rang the doorbell at Seth's house. I was thinking, if I've changed this much, I wonder if I will even recognize my friends now. It was Seth's mom who answered the door. She smiled and gave my mom a big hug, then shook her head as she looked at me.\n\n\"Good lord, Josh. I wouldn't even have recognized you. You are the spitting image of your dad.\"\n\nMy mother's head jerked as she looked at me intently. I realized that she hadn't realized it until that moment. Seth's mom led us into the house, and she hollered, \"Seth, Josh is here!\" before having a seat at the dining room table with my mom. Mom looked a little bit rattled, but that passed almost immediately as she started talking with her old friend.\n\n\"Josh! Oh my goodness!\" this came from Penelope, long-time stroke fantasy of me and my friends, and now Seth's girlfriend.\n\n\"Hey, Penelope,\" I smiled at her, \"you look great! How have you been?\"\n\n\"Holy cow!\" I grinned widely at that familiar voice. I managed not to wince as I was hugged fiercely by Seth, then Mark, and even Penelope gave me a nice hug.\n\nWe all retreated to \"The Den\" to hang out. It was a dark room most of the time, with computers spread around the outside, and bean bag chairs arranged around a wide coffee table. Snacks were omnipresent in The Den. I just smiled and looked at my friends for the longest time. The three of them were right back on their computers, playing a new online game that I hadn't seen before. They filled me in on the details as they got going. I hopped onto a fourth computer and they quickly hooked me up with gear for my new character. \n\n\"It's like we never missed a beat,\" I thought as we rolled into a battlefield.\n\nWe played for a couple of hours. At the end, I felt like I was finally getting the hang of it, finally carrying my weight in our group. Several of our other friends were on VOIP to chat with us, so I was repeatedly welcomed back by most of my friends. We wrapped up playing and sat around talking for a while after that. Penelope sat in Seth's lap on their beanbag chair with her arm wrapped around him. I tried to sum up the hospital stay, carefully leaving out any sordid details.\n\nAt one point, Mark blurted out, \"Man, Josh. You look great. Like, kinda scary great. I really expected you to be in a wheelchair when we would see you again.\" I laughed at that. That was classic Mark; he never had a filter to keep his foot out of his mouth. I stood up to stretch again. Although they had all grown over the last two years, I towered over them now.",
        "Seth, in his drawling way, said, \"Damn, Josh, what were they feeding you at that hospital? A steady diet of nurse poontang, I'll bet.\" We all laughed at that.\n\n\"Oh, I wish,\" I said. \"Those were some really beautiful women, I must say. But, come on, they had to change my diapers when I was in the coma. Kind of a mood killer, I would think.\"\n\n\"They made you wear diapers?\" Penelope asked.\n\n\"I have no idea. I was a little out of it.\" I smiled slyly at that, and Seth busted up.\n\n\"Man, I've missed you, Josh,\" he said.\n\nHours later, we all sat around the dining room table with the parents. Penelope's mom had showed up to get her, as had Mark's dad. It was just great to be back among friends.\n\nFinally, we all said our goodbyes and mom and I headed home. She checked her phone, but had no messages or missed calls. \"I guess Beth and Leanne will be staying over at Paula's place tonight. Guess it's just you and me tonight, Joshua.\" I smiled at my mother. The look in her eyes sent a chill down my spine. She looked hungry.\n\nWe got home a little before 10 pm. I carefully removed my dad's shirt and gave it back to my mom. I then retrieved the laundry from the dryer and took it back to my room to fold it and put it away. I started with the towels, hanging them in the bathroom. When I hung the clean washcloth over the sink, I had to suppress an erection. I could almost see Leanne's face in that mirror, the washcloth clenched in her teeth as I took her hard from behind.\n\nI returned to my room and quickly got the rest of the clothes folded and put away. I realized that my body didn't ache for once when I was done. I looked at my sunburned shoulders in the mirror. When I touched one shoulder with a finger, it took a good twenty seconds to fade to a dark reddish brown. I turned and looked at the scratches on my shoulder, where I could see them. They still looked pretty bad. At that point my mom walked up behind me. I saw her in the mirror as she stopped in my doorway and looked at me.\n\n\"Hey, mom,\" I said. I tried not to stare. The short, sexy nightgown she was wearing was unlike anything I had ever seen on her body. I smiled and walked over. I was careful to keep my eyes locked onto hers as she met me in the middle of my bedroom. I wrapped my arms around her and hugged her to me. Her arms carefully found my back and squeezed me gently. I could feel her thick nipples hardening against the still-sensitive skin of my chest. \"I love you so much, mom,\" I said softly.\n\n\"I am so proud of you, Joshua,\" she replied. I pulled back a bit and looked into her eyes. Proud of me?\n\nShe could see the question without me having to say a word. She gave out a long sigh. \"Come with me,\" she said, \"There's something I need to show you.\" She took my hand in hers and led me to the living room, stopping in front of the sliding glass door to the back yard.\n\n\"By the way, we keep the sunscreen in that cabinet,\" she said, indicating a waist-high cabinet to the right of the door. I would have guessed it was for storing DVDs if no one had told me. She then switched on the backyard light switch, and multiple floodlights came on, lighting up the entire pool deck area. She flipped on a second switch, and lights came on inside the pool.\n\n\"If you'd like, you could swim in the pool tonight,\" she said, \"or at least soak in there.\" I nodded. She opened the door then, and I followed her into the back yard. She walked toward the end of the house and pointed up under the eave. My eyes shot open. There was a small security camera there.\n\nOh, shit.\n\nMom then walked past me to the opposite end of the house. Another camera was under the eave there.\n\n\"Your dad had these installed at the end of last summer. There were some animals coming into the yard and making a mess. He thought some neighborhood kids were sneaking in and skinny-dipping in the pool at night. At any rate, we neglected to tell Beth that it was here.\" She shivered a bit in the night air, and then said, \"Let's go back inside.\"\n\nMy mind was racing. What had she seen? I started to get worried about getting kicked out of the house, but then...she had said she was proud of me. I had no idea where this was going.\n\nMom sat on the couch in our living room and patted the cushion next to her. I sat down, and we faced each other. Her eyes had no accusation in them, no anger. She looked at me like my loving mother as she continued.\n\n\"Look, Joshua, I watched the video in my office earlier today. It showed everything that happened in that pool with you and Leanne and Beth.\" She put a finger to my lips to stop me from saying anything. \"You need to find a way to let them know about the security cameras. Don't worry; your dad's not going to see that. I erased it from the disc. I watched it, and what I saw was my son trying to be a gentleman in the face of overwhelming temptation. You were struggling to the end. Even after that, you were so good to your sister...it was just heartwarming.\" My mother then leaned over and hugged me to her. \"I am so proud of you, Joshua,\" she whispered into my hair.\n\nI was so stunned I didn't know what to think. Then my mother gave my shoulders a squeeze, and that did hurt. She felt me wince and pulled back from me. \n\n\"Oh, I'm so sorry about that,\" she said. \n\n\"I love you mom,\" I replied, \"I'm going to go take a cold shower and put on more aloe, if that's okay with you.\" She nodded and gave me a soft smile as I rose and padded into the bathroom. I debated with myself for several seconds before deciding to leave the door unlocked. I was mostly relieved that I finished my shower uninterrupted this time.\n\nThe cold water soothed my skin. After I carefully dried off, I looked much better, much less like a lobster, when I looked in the mirror. I spread the aloe lotion over the sunburned areas that I could reach, then secured my towel tightly around my waist. I opened the bathroom door. Mom looked up at me from the dining room table, where she was looking over some of the work I had done earlier.\n\n\"Would you mind doing my back?\" I called to her, holding the aloe container up. She smiled and said, \"Sure.\"\n\nI walked over to where she sat, handing her the tube of lotion and turning around. She stood and gently applied the lotion to my back. \n\n\"Those scratches already look much better,\" she commented as she smoothed the creamy aloe over them. \n\nHer hands felt soft and sensuous as they gently worked over the middle of my back. I managed to fight down the erection building in my towel this time. I was only half hard when she turned me around and kissed me. I took the lotion back from her hand, noticing her hard nipples poking out from the lacy fabric of her nightgown as I did. I quickly brought my eyes back up to hers and said, \"Thanks so much, Mom. I feel so much better now.\"\n\nI put the aloe back into the bathroom, and then took my dirty clothes to the hamper. In my room, I found the soft men's pajamas we had bought two days before. I put on boxer shorts that my mom had picked out. It was the first time I had ever put on silk underwear, and it was maybe a little too delightful. The weightless material just glided up my sunburned legs, and I have to admit to a shiver when my cock was wrapped in the caressing cloth. I was getting more than half-hard, and I watched the head of my prick sliding its way toward the handy opening in the front of the shorts. I was startled to hear my mom behind me. \"Those look good on you,\" she said huskily from the doorway. I looked up at her reflection in my bedroom mirror. That hungry look was back in her eyes.\n\nI carefully pulled on the pajamas while she walked in and sat on my bed to continue watching me. I had been under the impression that her nightgown had matching lace shorts, but when she sat down I realized it was more of a skirt. It spread around her slightly parted thighs and I could clearly make out her aroused pussy in the mirror. \n\nI looked at my own reflection. The pajama top I was wearing was a loose-fitting dark blue shirt with sleeves that came to around the elbow. It was a very thin flannel material, but not so thin that you could see through it. The pajama pants matched the top, and the whole thing was very comfortable despite my tender skin. I turned to my mom, grinned and held out my arms in a pose, \"What do you think?\" I saw her eyes shoot down to my crotch, and looked down. The pajamas also had a handy opening in the front, and it gapped open slightly. The thick shaft of my dick was clearly visible.\n\n\"I think you look like a real man in those,\" my mother growled from the bed.\n\nI was trying to figure out if there was a way to minimize the way the crotch of my pajamas gaped open when my mother rose from the bed and walked up to me. I looked up at her face, and she kissed my mouth hotly before I could say a word. I was at a loss when she ended the kiss. She took my hand, then, and led me from the room. She walked me down the hallway, turning off lights as we went. We walked all the way to my parents' room. She turned on the bedroom light, turned to me and said, \"Come cuddle with your mother. I still have more to tell you.\"\n\nShe crawled up onto the bed, and her outfit revealed the entirety of her round, sexy ass, her wet pussy, and her luscious thighs. Even her asshole was clearly visible. I forced my eyes to the floor and walked around to the other side of the bed, sitting shakily on the side. If she hadn't said that she had more to say, I probably would have bolted from the room. I wouldn't know how to face my mother if I had sex with her. Instead, I lay back in the bed next to her. I put out my right arm and she rolled up to my side with her head on my shoulder. I rubbed her back slowly as she spoke.\n\n\"I have always been proud of you, Joshua. I have seen you go through so many trials, and watched you grow into a young man. Every time I have said, 'That's my son,' I have been happy to say it. You have always been a complete gentleman to every woman or girl you have met, even when they didn't deserve it. When you got sick,\" I watched her eyes, saw that haunted faraway look, and hugged her gently to me, \"well, I was just terrified. I pretty much lived at the hospital for the first three weeks. After that, I was there every day for the next month until they kicked me out at night.\n\n\"Eventually, Gretchen helped me get straightened out. Gretchen was one of the nurses there in the coma ward when they brought you there. She sat me down and told me I needed to get back to my life, and let her take care of you until you woke up. I broke down, you know, and she just hugged me through it. I don't know if I would have made it without her.\n\n\"After that, I forced myself to go back to work, to spend quality time with your father and Beth when she was around. I trusted those nurses to take care of my son, and I did get my life back together. I was still visiting you two or three times during the week. Your father and I visited every weekend. We sat and talked to you and held your hand. It was actually therapeutic to listen to your father talk to you. That man revealed depths of his soul to me that I didn't even know he had. I am so lucky to have him. Lucky to have you both\u2014and Beth, of course.\" We smiled at each other. I knew what she meant. It wasn't any disrespect of her daughter.\n\n\"A couple months into your coma, I started getting a weird vibe from the nurses. It was like there was something wrong with you that they were afraid to tell me. That really bothered me for weeks. Finally, I pulled Gretchen aside one day and asked her, 'What the hell is wrong with my son?' She smiled and took me to your bed, pulled your curtain around the bed and made me promise to keep what she showed me a secret.\" I felt my mom reaching into the front of my pajama bottoms, and she fished out my dick.\n\n\"She showed me this.\" We both looked down at my cock, hardening in her small hand. She just held it there, looked back at my face and continued.\n\n\"You had a weird growth spurt. This and your hands had grown really quickly over three months. It took another year for the rest of your body to catch up. With the exception of Gretchen, the rest of the nurses were a little...crude about it. I caught two of them playing with you and joking about decorating your dick for Christmas. I confronted them about that. I made it clear that if they didn't get themselves transferred somewhere else, I would have them fired. Not only were you my son, but you were still a minor then.\n\n\"They left, and then Sarah and Jeannie replaced them. Those two girls are just amazing, as you well know. We became really close friends. I helped Jeannie and her husband find a really nice place, and got Sarah into the place she shares with Charlene and Sarah. All four of them were with our family around your bed on your eighteenth birthday.\n\n\"What you need to know, though, is that Jeannie and I have been incredibly close friends for months now. She and the other nurses were good friends, but she felt a little left out since she was the only married one in the group and they were all roommates. So she would talk to me over coffee. I had her over for brunch, or we'd go out somewhere and we would just talk for hours.\n\n\"You should know that women\u2014especially married women\u2014talk about everything if they're close friends. The stuff that gets left out, the secrets, are the exception rather than the rule. A couple weeks after your birthday, Jeannie and I were talking about our sex lives\" my cock lurched in her hand at that \"and she confessed she wasn't being satisfied.\" My erection was now throbbing softly in my mother's hand. I don't know if she was even aware she was doing it as she began to slowly stroke her hand up and down the shaft.\n\n\"Jeannie and I were on the same page, there. There were some things we had done, sexually, before we got married that we missed doing. Things our husbands wouldn't or couldn't do for us. I told her how my husband is just completely turned off by anal, the same as hers is. I had picked out a porno for us to watch one night; one that I knew had a really hot anal scene in it. I was stroking his hard cock while we watched it together. When the anal scene started, he just went limp in my hand. I knew then that was something that just wasn't going to happen for me.\n\n\"Jeannie confessed that her husband was the same way, and that he wouldn't even have oral sex either. Your father and I at least have some oral sex, but it's always too quick. Just foreplay before he takes me with that thick cock. To be honest, the whole talk did get me pretty worked up. I expect it did the same for her. We would joke about how nice it would be to have a nice big dick to suck on for hours, to feel it slide up inside and satisfy our horny asses. \n\n\"That was an ongoing thing for a while. A few months back, though, she stopped talking about sex entirely. She would make sure we dropped the subject quickly when I would bring it up, so I knew there was something going on with her. Something that didn't involve her husband.\" I was watching my mother's face intently as she talked, trying to ignore how hard she was getting me. I could see her hand stroking me out of my peripheral vision. She went on with her story.\n\n\"One of the marks of a true gentleman is that he can keep a secret. He doesn't kiss and tell, doesn't brag about his conquests. Every woman wants that in her man, even if that man isn't her husband. When you woke up last month, I was just so happy to have you back. We all were. It felt like a miracle, you had been gone so long. You were getting so strong, so fast. My little boy was transforming into a full-grown man right in front of my eyes each day I visited you in the hospital.\n\n\"I was so caught up in you that I totally missed what was going on with my good friends...for a while.\" I think I stopped breathing at that. Mom smiled at me and then looked down at my hard cock in her hand. She slid her fist to the base of it, and a clear drop of pre-cum was on the tip. She looked at my face again and said, \"Just a second.\"\n\nShe slid down and sucked the tip of my cock into her mouth, nursing out the pre-cum. She released me after just a couple of insistent pulls with her mouth, and then laid her head back on my shoulder and continued.\n\n\"A woman can tell when one of her friends has been getting some, and suddenly all the women around you had that look. They all tried their best to hide it, but they just adored you, Joshua. You were the only one I couldn't read. Truly, you were being a gentleman the whole time. Not only that, but you were clearly satisfying them all completely. They weren't fighting over you, and they were closer than ever as friends. Even Jeannie was finally in. They were the four musketeers, and you made them that way.\n\n\"When Doctor Hinton told your father and me that you could finally come home, I was so excited I couldn't contain myself. That night, though, I realized what I was taking away from my best friends\u2014especially Jeannie. I wasn't at all surprised, then, when she showed up at my office two days ago, looking like she had cried all night. I made sure I closed my office door behind me. I held her while she cried and broke down. And then she told me everything.\" I am sure I looked completely shocked at that revelation. She nodded at me and repeated \"everything\" before continuing.\n\n\"She told me how she had given in to the temptation, started sucking you while you were still in your coma, and told me how the guilt had just eaten her up. She told me about the first time she did it after you woke up, how Sarah had caught her, and that all of the nurses had been doing that\u2014sucking your hard cock while you were out\u2014for months. Then she told me about taking you in her ass. How you were absolutely perfect about it, how respectful you were, how you let her do what she needed to do.\n\n\"She told me about watching you with each of the other girls. When she told me about the time you accidentally slid into her pussy, how she felt, how ready she was to surrender it to you before you took charge and stopped...well, let me just say I had to throw away those panties and that office chair. Jeannie apologized for not telling me that she was having an affair with my son, but she said she just couldn't bear the thought of losing you. Now, she was losing you. Jeannie had this crazy look when she asked if there was a house for sale in our neighborhood, just so she could sneak over for time with you. Just a second.\"\n\nThen she was taking my entire cock head into her mouth, moaning as she took my pre-cum again. She released me with a smack of her lips and rested her head on my tummy, looking up at me as she continued her story.\n\n\"I managed to calm Jeannie down. I told her not to do anything as foolish as moving. We are best friends, after all. No reason at all that she wouldn't continue coming over to my house for coffee, a nice chat...and of course a nice long session with my son. I have to tell you, Joshua, just the thought of watching you take her tight little ass, maybe bent over the couch in our living room...it had me soaking wet then and it still does right now.\n\n\"Then you were home. I was trying to figure out how to approach you, to talk to you about Jeannie and maybe the other girls, when I saw those welts on your neck and shoulders. You immediately took the blame for it. I absolutely would have believed you, but Beth gave it away with her expression. I started to wonder what was going on, when I thought to check that surveillance footage from the back yard. And there you were, once again being my perfect gentleman while those girls attacked and molested you in the pool. Also, there was the biggest, hardest cock I had ever seen rising up out of the pool, so I couldn't blame them for being all over it.\"\n\nShe turned her head back away from me, and then sucked my cock urgently back into her mouth. She really started sucking it thoroughly, taking several inches of my shaft into her hot, wet mouth. I was about to try pulling her off of me when she released it from her slurping lips. She gave the tip an appreciative kiss and slid her head back up onto my shoulder. She pressed her body into mine, and then she toyed with the buttons on my pajama top as she continued.",
        "\"I was really torn after I saw that video. You know how much I love Leanne, how much I worry about Beth. I knew Leanne would try to get you to take care of your sister, even force you if she had to. I still don't know how I feel about that. I have no idea what your father would do if he ever found out. But then Leanne was just being Leanne, she refused to acknowledge how badly she needed you. I could read it in her face all morning, though.\n\n\"Then I thought about teasing you again when I heard you in the shower. To be honest, I really wanted to see this fellow\" she shook my hard cock \"again. Then you were standing naked in front of me, glistening and wet and vulnerable. You were struggling so hard to control yourself, and it was so damned sexy and irresistible.\" She leaned in and kissed me again. I realized she had my pajama top half unbuttoned at that point.\n\n\"I teased you and rubbed you so slowly. It was such a turn on. Then I saw your face in that bathroom mirror, when you were standing behind me and I was washing my hands. You looked like you were ready to take me, right there. I have to tell you, I actually came a little just seeing that face. If you would have done it, if you had given in to that lust, I'm not sure I would have had the will to stop you.\"\n\nI involuntarily growled in my throat as she said that. She opened my pajama top and ran her hand lightly over my chest and abdomen as she went on.\n\n\"Then I heard the girls come back, and I knew I had to push Leanne to go to you. I had a pretty good idea that it might be...a good idea to get Beth out of the house. So we went shopping, and then her friend called about the party. I really had to talk her into the idea. Clearly, she had her heart set on seeing you tonight. At the same time, I could tell you had taken really good care of your sister last night. She had that look I had seen on your nurses' faces so many times. It explained the welts she left on your back, too.\n\n\"But I worked up a really good speech, and talked her into going to Paula's. You got to hear it later on, when I used it again on Leanne. I still didn't know what I was going to say to you, though. Then we went to Seth's house. I watched you like a hawk all night, eavesdropped so much that I'm embarrassed to tell you about it now. I figured if there was a chance that you wouldn't be the perfect gentleman, that was it. But there you were, keeping to yourself the kind of things that most men would brag about to anyone who would listen. And that's when I knew. I could trust you with everything.\"\n\nShe leaned in to kiss me again, and this time she didn't hold back at all. Her hot mouth closed on mine, she sucked on my lips, invaded my mouth with her hungry tongue, and then sucked hard on my tongue. It was an amazing kiss, and we both gasped when she finally pulled away. She brought her hand up to caress the side of my face as she gazed up at me.\n\n\"So, what do you think, Joshua? Can you continue being the perfect gentleman for my best friend, Jeannie?\"\n\n\"I will do my best,\" I croaked out, then, \"I need some water, can I get some for you?\"\n\n\"I'll come with you,\" she said. We got out of bed, but she did pull my pajama top from my shoulders in the process. \"I hope you don't mind,\" she said, \"I do like seeing you like this.\" \n\nI smiled and shrugged as we walked out to the kitchen. We each got a tall glass of ice water and leaned back against opposite counters. We looked at each other as we sipped. \"About Jeannie,\" my mom started, \"You should know that she really loves Steve. Outside of what he doesn't give her in the bedroom, he's really a great guy. She's lucky to have him. I figure she will need her \"Joshua fix\" for a while, until she gets pregnant\u2014either from Steve or from you\u2014and then raising her baby will be the center of her life and marriage.\"\n\nMy cock gave a lurch at the thought of putting a baby into Jeannie. I looked down at the evil bastard, but he has no shame. I looked back up at my mother and she searched my eyes for a moment before dropping her gaze to my body.\n\n\"Your sunburn looks much better,\" she said as her eyes took in my naked chest, \"Does it still hurt?\"\n\n\"It's a lot better than it was,\" I replied, \"still a little tender. My chest is really sensitive.\" My gaze traveled down to her chest then. I sighed as I looked at her hard nipples pressed against the lace of her nightgown. It occurred to me then that I was still hanging completely out of the front of my pajama bottoms, and that my mom was looking down at my exposed cock with a loving expression. She slid to the kitchen floor at my feet, one hand taking hold of my shaft as she looked up at me.\n\n\"What about me, Joshua? Can you take care of my needs as a woman? Do you think you can be a perfect gentleman for your mother?\" She took me into her hot mouth, and I breathed, \"Yes, ma'am.\" \n\nI finished the rest of my water in one big gulp and set the glass on the counter. Her mouth was gentle but insistent as it worked me over. Her constant moans, groans and slurps let me know she was doing this for her own enjoyment. I saw her other hand make its way into her lap. I could hear how wet her pussy was from the squelching noises her fingers made inside it. I am pretty sure she came, shivering as she took me deep into her mouth. When my knees began to feel weak from standing, I figured her knees must be sore too. I reached down and lifted her to her feet, ignoring her moan of protest as she reluctantly released me from her mouth. I kissed her mouth when she was back on her feet.\n\n\"You are amazing,\" I said. I kissed her again and said, \"Come cuddle with your son.\" She moaned softly at my words. I led her back to my bedroom, and she followed without protest. \n\nI turned on the bedroom light, and led her to the bed. As I did, I realized I had forgotten a couple of things. I gave her a big, wet kiss before lifting her entirely into the air and laying her on her back, with her head on a pillow. \"I will be right back,\" I whispered. I walked quickly back to my parents' bedroom, grabbing my pajama top and my mom's cell phone, and I turned off the light in that room and the kitchen before rounding the doorway to my room again.\n\nAt the foot of my bed, I just stopped and gazed in admiration and lust at the beauty before my eyes. Mom was lying on her side with her right knee up and her left leg stretched out. She had her head up, resting on her right hand as she met my gaze. I let my eyes travel over her body, stretched out like that. \"Wow,\" I finally breathed, \"You are so incredibly sexy.\"\n\nI walked around the bed and handed her the cell phone. She checked to make sure she hadn't missed an important message. I folded my pajama top and set it on my desk. I turned to her, then, and she moved back on the bed to make room for me. As I climbed onto the bed, I reached out and gently took her left ankle, turning her body slightly and spreading her legs open.\n\n\"You've been teasing me with this beautiful little pussy for weeks,\" I said as I slid between her thighs, \"and now you're going to pay.\" My hands slid up the backs of her thighs, pushing the little lacy skirt up and out of the way. My hungry mouth and tongue found her sopping wet pussy and I began to lick and suck and feast as her moans and gasps spurred me on. She soaked my face with her juices again and again, and her hands tangled in my hair. I licked her thoroughly, from the sparse hair of her neatly-trimmed bush down to her asshole. My tongue probed her deeply in both of her eager holes.\n\nLike a man-whore, I had looked at my clock while folding my pajama top, so when she desperately pulled my head from her lap, I looked over to see I had been feasting on her pussy for a little over forty minutes.\n\nAfter a couple of minutes of fending me off and gasping for air, she regained control. She gently pushed my shoulder, so I rolled onto my side facing her from the foot of the bed. She then scooted off of the bed and turned to face me, her chest heaving wonderfully as she brought her hands to her hips.\n\n\"Joshua...\" she began. She then sucked in a deep breath and slowly let it out. \"I will be back in just a minute. I expect you to have those pajamas and boxers off when I get back.\" Her eyes twinkled as she marched out of my room.\n\nI was out of that bed in a flash, undressing and folding the pajamas and boxers and setting them neatly on top of the pajama shirt. I took a pillow and propped it against the headboard, keeping my head raised so that I could see the doorway clearly. My cock was throbbing as I waited to see what would happen next. That turned out to be my mother, gloriously naked, walking through my bedroom door with a wet washcloth in one hand and a bottle of lubricant in the other. She climbed into my bed on her knees, setting the lube on top of my headboard, next to her cell phone. She then carefully straddled my midsection, sitting right on my belly button. She gently cleaned my face with the washcloth and spoke to me in that stern, matronly voice I knew so well.\n\n\"Joshua, I cannot believe what you just did to your own mother! Aren't you ashamed of yourself?\"\n\n\"No, ma'am,\" I responded softly, \"I think it was something that just had to be done.\"\n\nShe pulled the washcloth away from my face at that, and leaned down to bury her tongue in my mouth. Her huge, soft breasts mashed against my chest and her slippery pussy slid down my abdomen until she jerked to a stop with my huge cock head spreading her pussy lips wide open. I saw her eyes shoot wide open in surprise. She pulled her mouth from mine with a gasp.\n\nI growled at her, \"I know what that lubricant is for. It's so I can fuck my own mother in her hungry little asshole.\" My cock head popped inside her molten pussy, and I held it there. \"What I don't know, is whether I should be sliding my big, horny cock into my mother's soaking wet little pussy.\" I gave a very slight nudge of my hips, causing her to gasp again as my cock head lurched inside her. \"What do you think?\" I finished.\n\nI held perfectly still, and my mother looked down at my face as she lifted her upper body from mine. Her eyes were wild as we both felt my thick cock sliding inexorably up into her unbelievably tight, welcoming tunnel. She looked into my eyes with pure lust in hers. As she pushed slightly down on me, she said, \"No, you should definitely not fuck your own mother in her\u2014oh, lord\u2014tight, cock-hungry little pussy.\"\n\nI reached out and softly seized her hips at that. I held her firmly in place as I lifted my head from the pillow. \n\n\"Should I stop that hungry little pussy from swallowing my dick, then? Or should I let it have its way with me?\" I lifted her bottom two inches in the air, demonstrating that I could do it if I had to. She groaned, her eyes on fire as she felt my cock withdrawing.\n\n\"Joshua Thompson! You let go of your mother's ass, right now!\" she commanded.\n\n\"Yes, ma'am!\" I groaned back, letting go and feeling half my cock slide smoothly back up inside her. Her thick nipple was just irresistible, hanging in front of me. I seized it in my mouth and sucked hard.\n\nMom rode me slowly, gradually sinking more and more of my length up inside her. I could feel her clutching, spasming little pussy just eating up every inch of me, soaking me with her juices. Her low, constant moaning made me throb inside of her. When I switched to suck her other succulent nipple, she wrapped her arms around my head and rocked us both back and forth. I saw her mouth open wide, and with a soft \"Oh!\" and a delicious shiver of her body, she was coming.\n\nHer orgasm was like a series of ripples on a lake, gently lapping through her body. Her pussy clutched me tightly for several seconds, then released me with a small burst of moisture. Again and again, clutching and releasing, until my drenched cock was held firmly all the way inside her. Her eyes closed, and she gently rocked her hips. \"Oh!\" then softer still, \"Oh.\" Finally, she whispered, \"Ohhh...\" \n\nWith a final shiver, she sat upright, gently disengaging from my softly sucking lips. She looked down at me lovingly. After bending down for a gentle kiss, she pushed up from the bed with her knees. Her tight pussy reluctantly released me. Now it was my turn to shiver as I felt every millimeter of her sweet channel on my way out. My mom finally got all of my throbbing cock out of her and then lay beside me again, her head on my shoulder. She reached out to gently stroke my wet, pulsing erection with her right hand.\n\n\"Oh, I should not have done that,\" she said softly. Her eyes traveled up from my groin to my face, and she saw the question in my eyes. \"Now my pussy is going to want more of that as well,\" she whispered to me.\n\n\"I'm...sorry?\" I said, not sure if that was the right sentiment. My mother's tight little pussy was a slice of heaven on earth. I could have stopped her. At that moment, I couldn't say I was really filled with regret.\n\nA grin gradually spread across my mom's face. \"Oh, you liar,\" she chuckled finally.\n\nI grinned back. \"Okay, I'm not sorry. That was incredible.\" My hand gently stroked her back. I couldn't help but lean in and kiss her gently again. We kissed again, more insistently. Then our mouths were opening, our tongues finding each other, and we pressed our bodies together. My left hand eagerly pulled my mother's generous ass to me, mashing my cock between us. Her hands roamed across my back, one pulling my head to her while the other squeezed my ass. The intensity of that kissing and make out session took me right to the brink of orgasm.\n\n\"Wow!\" I gasped out, pulling my mouth free. \"You are the most amazing kisser! If we keep that up, I'll be coming all over your belly.\"\n\n\"We can't have that, now, can we?\" There was a decidedly devilish look in my mother's eye as she slid down my body, her hand once again firmly holding the base of my cock. She took the head into her mouth and gave it a couple of short, insistent sucks. I felt her tongue gathering up the pre-cum and her own juices. She pulled off of me and swallowed. \"Let's see...\" she said, \"Where DO I want you to come?\" She took me back into her mouth, making a \"Hmm\" as her lips and tongue worked me over. She pulled back up.\n\n\"Do I want that delicious cum in my mouth?\" she slurped me back in for a couple more delightful seconds, \"or do I want it in my ass?\" Suck. Suck. Suck. \"Mmm. Decisions, decisions.\" Slurp! She bobbed her head up and down on me about ten more times, looking sexily into my eyes the whole time. By now, I was shaking. The decision would be made for her if she kept that up. The look in her eye let me know that she knew exactly what she was doing to me.\n\nShe slowly pulled her mouth back off of my cock, holding the shaft in her hand. I was so close that the length of it was shaking in her hand. She admired it, and then looked at me. \"I've made up my mind. I definitely want it in my mouth. Joshua, would you mind sucking my pussy hard for me while I eat your cum?\"\n\nThat was a rhetorical question if I've ever heard one. I heard a desperately horny \"Ahhumm!\" sound come out of my throat as I nodded vigorously. My mom shifted her body around, and her drenched pussy was lowering to my face. I dove into it like a starving man as I felt her smoldering mouth firmly sucking my cock. I grabbed her ass with both hands as I devoured her, and then I was exploding in my mom's mouth. I could hear and feel the sexy sounds coming out of her throat as she came and swallowed at the same time.\n\nMy head was buzzing with the force of that shared climax. My lips held her thick clit and the tops of her pussy lips as I shook my head from side to side. I heard her gasp, \"Oh, God!\" and felt another shot of cum erupt from my cock into her face. Then her mouth sucked me back in, and I heard and felt \"Mmm!\" \"Mmm!\" \"Mmm!\" from her as she drained me. My mouth was still firmly attached to that delicious pussy when we both realized that there was an actual buzzing. \n\nSomeone was calling my mom's cell phone.\n\nShe sat up and reached for the phone. Her knees took some of her weight, as did my hands on her ass so she wasn't crushing my sunburned face. I continued softly sucking her clit as she answered the phone.\n\n\"Hello?\" I felt her body twist as she looked at my bedside clock. \"Oh no! Well, that's a shame.\" She gently rocked her hips on my face, and I slid my tongue up inside her pussy, gently fucking it into her in time with the thrusting of her hips. \"I'll need to get dressed before I can come get you. Can she walk?\" Mom's twitching little butthole, right in front of my eyes, presented an irresistible target. I ran my tongue around it twice, eliciting a shiver from my mother.\n\n\"I guess I'll need to get Joshua out of bed then\u2014Oh!\" I had thrust my tongue into her asshole, spreading her open wide with my hands as I began tongue-fucking her tight little ass. \"Sorry! I was stretching. We should be there in...mmm...about twenty minutes or so...uhhh...depending on how long Joshua takes.\" Her tight little hole was now wide open, and I was able to force the full length of my tongue up into her with each stroke. Her voice was a little rough when she said, \"I'll call when we're on the way, see you soon!\"\n\nWe struggled a bit after she hung up the phone. I was holding her hips firmly, thrusting my face into her hard as she tried weakly to pull away. \"Oh! OH!\" I felt her pussy clutching on my chin, buried my tongue in her ass and wiggled it around as she shook softly. She pulled a bit more insistently away, and I released her heavenly ass reluctantly, helping to ease her to her side on the bed. She lay there, panting for a bit. I saw that there was a rope of my cum on the side of her face, from her right temple down almost to her chin.\n\n\"Mom, you've got a little cum on your face,\" I said softly.\n\n\"I know,\" she panted. She struggled a bit, managing to rise to her knees after three failed attempts. Her hand was shaky as she set her cell phone back on the headboard and picked up the bottle of lubricant. Her expression was tough to read; hunger, desperation, excitement and urgency all battled for a place on her face. \"We don't have a lot of time,\" she gasped out, \"Help me up.\" I stood and took her hand. Once she had her feet under her, she led me into the bathroom and turned on the light.\n\nFollowing my mother's naked body was just inspiring. Her bottom swayed and bounced enticingly, and I could see that sexy curve of the outside of her breast from behind. She walked to the bathroom sink and then turned around, opening the bottle of lube and reaching out to hold my cock. She squirted some of the cool liquid in a line on the first half of my cock and began spreading it around. She looked up in my eyes. Hunger had won the battle and was all over her face. That and that little line of cum. \n\n\"I know you want to be gentle and take your time, Joshua, but I need you to be a little rough.\" Still stroking the lubricant on my cock, she kissed me hungrily. She turned to face the mirror, then. Her ass was pointed back, her feet spread. She looked at me in the mirror as she bent to grab the edges of the sink.\n\n\"Fuck my ass. Take it!\"\n\nMy lubricated cock head opened her tight little sphincter with surprising ease. I watched intently as I sank the first three inches into her eagerly clinging butt. She was far too tight for me to just slam it into her. I knew from the way Sarah had suffered after taking too much of my cock up her ass too quickly that I had to take this hungry ass patiently. I had to prepare it thoroughly before I could punish it the way she craved.\n\nI leaned forward, slowly but steadily forcing my lubricated cock deeper into that tight channel. My eyes looked wild and hungry in the mirror, matching my mother's as I brought my head next to hers. I growled into her ear, \"Oh, mom. You are such a bad mother.\" She groaned back at me. I could feel her trying to thrust her hips back at me, but I held her ass cheeks firmly in place. \"I can't believe you're letting your own son fuck your tight little ass!\" I hissed, \"Do you know how much thick cock you have in your ass right now?\"",
        "\"Oh, fuck, yes!\" she hissed back. I felt her shaking as the head of my cock and then the thickest part of the shaft mashed her g-spot. I had a little over half my length inside her. The resistance and tightness was still far too great for me to try thrusting.\n\n\"Oh...yessss,\" I groaned in her ear, \"Did I ever tell you that you have the most amazing, tight little asshole, mom?\" She groaned again. Her shaking intensified. I continued, \"I'll bet if I just touched your wet little pussy right now, you would just explode, wouldn't you?\" I was getting really close to having my full length inside her, so I slid my right hand around her hip and down to her pubic mound. I made two slow circles with my fingertips there, and when I was balls deep in her ass, I reached down and touched her soaking clit and pussy lips with those three fingertips. As I predicted, she exploded. The look on her face, the way her mouth opened in a fierce howl, the way her eyes shot open and then rolled back in her head...it was all too much. Her clutching, insanely tight little ass milked a load of cum right out of my eager cock.\n\nMy face in the mirror gave away that I was just shocked. \"Oh, I'm coming!\" I gasped out. \"I can't believe you made me cum again so fast!\" \n\nHer muscles released their death grip on my shaft after my mom's fierce climax. That, combined with my gooey cum shooting into her insides allowed me to pull back and drive powerfully back into her. I gave her the pounding she wanted. For twelve soul-shaking thrusts, my sensitive cock pounded into her, still spewing cum the whole time. Her breasts were flying around, just insanely arousing to watch. Her face went through a quick series of transformations, cumming hard to disbelief to fiery lust to ultimate surrender and quaking orgasm.\n\nHer legs gave out as my own climax slowed to a drool inside her. My hard cock in her ass and my clutching hands were all that held her up. She looked so amazing, so vulnerable like that. Her ass stretched around my hard shaft was far too arousing. I didn't go soft at all, despite unloading into her. I couldn't resist taking more.\n\n\"Oh, damn, mom. I don't think I'm ever going to be able to get enough of this tight little asshole of yours.\" I started to fuck her ass again. Her eyes lit up and met mine. Her feet struggled to get set under her, and then she was thrusting back into me as I sped up my strokes. \"When you get up to brush your teeth in the morning,\" I went on, \"I will have to just walk right in\u2014thrust\u2014lift up your robe\u2014thrust!\u2014and just take you\u2014thrust\u2014right there in your bathroom.\"\n\n\"Oh, GOD YES!\" she shouted. I felt her clamp down hard and her pussy was drooling juices down both our legs. I held still then. I kissed her shoulder and then her neck. When my mother had finished that violent climax, she turned slowly until I slid out of her. Then she grabbed my head and pulled me to her, kissing me violently. When she finally released me, the calm in her voice was actually a little unsettling.\n\n\"Joshua, you know exactly how to make your mother's asshole happy. I can't wait to get up to brush my teeth.\"\n\nWe smiled at each other, and I watched as she finally took that rope of cum off of her face with a finger and sucked it down. She turned to check herself in the mirror then. She was running her fingers through her hair as she said, \"We don't have a lot of time, we need\u2014Oh!\"\n\nI couldn't help it. I needed more of that tight, welcoming mommy ass right then. I did take her roughly this time, grabbing her ass cheeks and spreading her wide. I fucked her hard, driving the full length of my cock up her with each stroke. Her eyes were wide as I watched her in the mirror. Her huge breasts bounced all over and her head shook crazily. She gasped out, \"We don't\" \"We can't!\" \"Oh, God!\" then she grabbed the sink and held on as I fucked her in her sweet ass without mercy.\n\nI pounded her furiously for several minutes. I knew that it wouldn't take me long to cum this way, despite the fact that I had so recently. I also knew that we had taken too much time already. I slid my hands from her ass down to her thighs, then made sure my feet were firmly planted. I lifted her into the air, still thrusting into her ass. I lifted her legs until she could set her feet on the counter, so she could see my cock pistoning in and out of her asshole in the mirror. As I expected, that coaxed a splendid orgasm out of her. I seated my cock all the way in her ass, then carefully walked us into the shower for a quick rinse.\n\nAs the water carried our sweat away, I finally caught my breath enough to say, \"I presume we're picking up Leanne and Beth?\" Mom nodded. This made her breasts wobble temptingly as the water washed over them. It was all I could do not to attack her right there in the shower. I stepped out and started drying off quickly. I heard the water being turned off, and wrapped my towel around my waist. When Mom stepped out of the shower I wrapped a towel around her, then grabbed a second towel to dry her hair while she dried her body.\n\n\"Just so you know,\" I said, \"I still want you. If we didn't have to go...\"\n\n\"I know,\" she replied simply. She didn't have to say anything else. We were on the same page.\n\nShe started to go back into my bedroom. I reached out and grabbed her arm. \"Don't,\" I said. The look in my eyes told her I was serious, and she nodded and headed to her room. If she had bent over in front of me to pick up her cell phone...we would never have left.\n\nI dressed quickly in cargo shorts and a long t-shirt. I grabbed my mom's cell phone and the lube from the bathroom, and marched down the hall to her room. I went in quickly and set everything on her dresser, beating a hasty retreat to go put on shoes and socks before I even saw where she was.\n\nPaula Henderson's place was only a five-minute drive from our house. There wasn't enough time for any conversation or planning en route. Mom basically said, \"Some of the girls had too much to drink. When I talked to Beth, she sounded fine. They just wanted to come home.\"\n\nI nodded at that. \"Why did you say you were bringing me?\" I asked.\n\n\"To buy us more time.\" At that point, we were pulling up, so Mom pulled her cell phone out and called. \"We're right out front,\" she said.\n\nBeth and Leanne came out moments later and got in the back seat. They seemed cheerful and talked a little loudly as we drove home. When we got to the house, my mom made up the couch. I offered Leanne my bed and brushed my teeth before making my way through the darkened house to collapse on the couch. It was a comfortable couch for sleeping, I reflected as I lay there.\n\nI almost laughed out loud when it occurred to me: Here I am, in a house with three women who all desperately want to fuck me, and I'm sleeping alone on the couch!"
    ],
    "authorname": "LexxRuthless",
    "tags": [
        "mom",
        "son",
        "sisters friend",
        "huge cock",
        "nurse",
        "anal",
        "big tits"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/spinal-meningitis-is-no-joke-ch-08"
}