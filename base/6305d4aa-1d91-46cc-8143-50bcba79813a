{
    "title": "The New Principal Ch. 21",
    "pages": [
        "The next Monday morning I was in the kitchen puttering around and reading the news when there was a very businesslike rat-a-tat on the door.\n\nI opened it to find myself pushed inside with real force.\n\n\"Principal Lee, you need to get inside. Has anyone been here?\"\n\nShe looked agitated.\n\n\"Good Morning Kimberly, and how are you?\"\n\n\"I'm sorry, sir, but this is no joke. Get upstairs and in bed immediately, shoo!\"\n\n\"Oh, it's like that is it. Well, I think I'm recovered enough for a little fun.\"\n\nI smiled wide, but Kimberly grabbed me by the shoulders and looked me in the eye.\n\n\"They're sending a nurse for you. You need to be much much sicker than you are. Go. To. Bed. I'll be up in a sec. I've got to make this look like my mess down here.\"\n\nHer all-business look was immovable. It started to dawn on me that this wasn't going to be a nice morning romp.\n\nI rushed upstairs, not knowing how much time I had. They're sending a nurse? I supposed this was their way of making sure I really was out of the picture. Whoever 'they' were.\n\nI dragged out my set of pajamas that I never wore and slid into them, putting the clothes I had been wearing back in the dresser. Then I got back into bed. \n\nThen there was nothing I could do but wait. I listened to Kimberly bustling around down in the kitchen for a while, then heard her coming up the stairs.\n\n\"Ah, you don't look nearly sick enough. Here. Take this.\" She handed me a pill and a glass of water.\n\n\"What is this?\" I hesitated.\n\n\"I don't know. Ms Rai gave it to me. She said it would make you a little woozy, and that might help.\"\n\n\"Woozy? How woozy?\"\n\n\"I don't know! I'm... I'm really a bit frazzled here, just take it, okay? I'm sorry Principal Lee, it's just...\" \n\n\"When is the nurse going to be here?\"\n\nShe glanced at her watch and sighed, seeming to relax a little bit. Then she looked at me and the pill I wasn't taking with a stern glance.\n\n\"Fine.\" I popped the pill down and took a long swig of the water. \"When is the nurse going to be here?\"\n\n\"We're actually doing better on time than I thought. Time enough for me to take care of your other treatment.\" Her nervousness faded a bit as she moved to the bed. \"The pill was from Ms Rai, but Ms Lashgari suggested something else to alter your vital statistics.\"\n\nMy mind was still spinning a bit, but I was pleased to see where this was going. \n\nShe pulled down the duvet, uncovering me.\n\n\"You did lose a bit of weight over the past few weeks, but if I remember right, this,\" and she pulled down my pajama bottoms, \"ah... yes, sir. This looks as healthy as ever.\"\n\nIt seemed that preparing to blow me was calming her down a bit. I wasn't quite hard yet, but she was determined to remedy that situation with a quickness. She dove straight down without any preliminaries and took me in her mouth.\n\n\"Ahhh... Kimberly... Aren't you aggressive now? You've gotten a lot better at this...\"\n\nI could feel her smile around me at the compliment. Her enjoyment was very real. As if to prove her growing ability, she dipped even further down, causing her neck to swell.\n\nShe choked a little bit then pulled back up.\n\n\"You're still bigger than I can take, my jaw can just barely stretch wide enough for you.\" She started licking around the edge of the tip of my cock. \"I've been working on Ms Lashgari's toys. You should see all of the stuff she's got. But we really don't have a lot of time here, so...\"\n\nAnd with that we went into overdrive. She cupped my balls and took me into her mouth again. \n\nShe sucked hard and squeezed lightly. When I groaned in pleasure, I felt her hum in satisfaction. \n\nShe looked up at me with those sparkling green eyes, and kept eye contact as she started pumping over my cock, building a rhythm of sucking and shoving her face back down. I had a bit twinge of nostalgia for the trick. Even though she was clearly having a great time, I felt bad that I couldn't pass on the pleasure I was feeling back to her.\n\nShe really was like a cartoon princess. Her eyes just seemed so huge. Her entire face was almost unnaturally adorable. Then there was her flawless porcelain skin, and her kinky red hair, bound up and almost contained in a nice professional updo, was shaking all over as she worked me with a kind of delightful circular motion. \n\nIt was just obscene to see such a cute face turned red with exertion as she pounded herself repeatedly down on my big slippery pillar of cock. She was a fantasy of spoiled childhoods, and it was no wonder that she had become the plaything of our little group.\n\nBut of course, no cartoon had a body like Kimberly. When she lifted up, tonguing the very tip of me, I could see her breasts bouncing slightly. That's when I noticed that she was back to wearing the severely conservative blouses that she wore when I first met her. But even a substantial bra couldn't completely contain the happy undulation of those perfect tits. \n\nShe saw my glance and smiled again, then slipped off me.\n\n\"Naughty, naughty, Principal Lee, there's no time for that. Isn't my little mouth enough for you?\"\n\nI reached out and grabbed her by the side of the head and guided her back to suck me in.\n\n\"You have no idea, Kimberly. I'm nearly there, I just can't resist you, can't... hgnn... can't resist any part of you... ohfu... fuu...\"\n\nShe smiled and wiggled her ass back and forth to signal how pleased she was by that and by my groans. \n\nI kept my hands on her head as she slid up and down with even more speed and enthusiasm. \n\nThen she was moaning to match me as I flopped down onto my back and gave over to the sensation. Her mouth was getting wetter and sloppier. She pushed deeper than she had before, and the last sensation I remember was a tight constriction on the tip of my penis.\n\n\"Ohgod... Ohgod... Kimberly... now... ohfuck... OHFUCK! Ohgodohgod...\"\n\nI felt myself fire off into her mouth, multiple shots over what seemed like minutes.\n\nI felt her slurping and swallowing the best she could.\n\nShe moaned as she took me all in.\n\nMy skin was so sensitive and she kept moving, sliding all over me, up and down, slower and slower.\n\n\"Oh, fuck... Kimberly that was so good. Remind me to thank Jennifer...\"\n\nWith a final gulp she shifted back onto her knees on the edge of the bed.\n\n\"And Ms Rai. Like I said, I've been using her toys.\" She smiled wide, running her hand over her mouth to catch a wayward string of cum. \"That was a really nice load. Maybe you are getting healthier.\"\n\nThen right as she sucked her fingers dry in a dawn-out erotic show for me, the doorbell rang.\n\nIn a flash, her adorable wet dream visage slipped back into her professional guise. It was like the blowjob centered her, like it confirmed she had power over her situation. She hopped off the bed and her hands moved expertly to her hair to make sure I hadn't mussed it too much.\n\nShe headed to the door, then made a gesture to me to get myself presentable.\n\nI pulled up my pajama pants and was getting ready to pull up the covers, but she darted over to me, ripped my bottoms down and used the sheet to dry off my cock, then snapped the waistband, which cracked down right on my balls. \n\nI squealed in anguish, and her eyes widened in apologetic shock.\n\nBut the doorbell rang again, and she darted out of the room, leaving me to pull up my bottoms again and try to arrange myself as an invalid.\n\nI heard her open the door and welcome someone in, then two sets of feet were heading up the stairs.\n\n\"I came over just to make him some breakfast and see if he was improving, but I'm afraid he's pretty much the same.\"\n\n\"Well, what he needs more than anything is rest, I'm sure.\"\n\nThen Kimberly came into the room, leading a middle-aged woman in a very sensible simple outfit. \n\n\"Principal Lee, this is Mrs. Agate. The school has hired her on to come and check up on you every so often.\"\n\nI scooted myself up to put my back against the headboard. I planned on trying to fake a groaning incapacity, but as soon as my head moved above my chest, I felt a not-too unpleasant swimming in my head. I was always a horrible actor, but whatever expression I made must have been more convincing than anything I could have faked. \n\n\"Oh, dear, no no no...\"\n\nMrs. Agate moved quickly and efficiently over to the side of the bed and pushed me back down so I was flat on the mattress. That movement again caused the world to swivel rather nicely. I wonder what that pill was.\n\nShe sat down on the bed next to me. There was a faint scent of industrial cleaner coming off of her.\n\n\"Ms. Adams, I'm afraid you were right. He seems to still be a little off, doesn't he?\" There was an odd questioning lilt at the end of that sentence. \n\nWith impressive professional competence, she had a thermometer in my mouth and a hand on my wrist in seconds. \n\n\"Odd. His pulse is high, but...\" She peeled open each of my eyes and looked at them with a little penlight. \"Hmm... He didn't have a concussion according to the records, and he wasn't on any medication, was he?\"\n\n\"Not that I know of... I don't think so.\" Kimberly was admirably vague.\n\nThen with a lightning-fast move, Mrs. Agate slid her hand under the sheets and into my pants. She grabbed my cock with a cold clinical hand, stroked then squeezed me painfully tight. \n\nI yelped, but the sound came out of my voice strangely.\n\nShe ignored my protest and turned back to Kimberly, both her hands now set nicely on her lap.\n\n\"Well, he's flushed, has a mild fever, elevated pulse, but seems lethargic, his reactions are not stable, and... Well, it's a lot of little things. I imagine the doctors are in the right of it. He's just going to need a good long recuperation. I'll write all this up and get it back to the hospital. Also, I've brought a week's worth of frozen meals based on the nutritionist's reports.\"\n\nShe paused and looked appraisingly at Kimberly.\n\n\"I don't suppose I could ask for you to help out?\"\n\n\"Oh... certainly... I... ah, Principal Sten is allowing me to come in late if I leave late. I had planned on coming over each day to make breakfast and clean up.\"\n\n\"Hm. Well, it will probably only be for a day or two. I'm sure he could do it himself...\" She looked back at me. \"Slowly, but he could do it. The more important thing is that he needs to eat everything I've prepared, no leftovers. He's going to need to take in as many calories as he can, but only of the right stuff, otherwise, no recovery! So, you'll need to help him make the meals, but more important is to make sure he finishes it all, every day, every meal.\"\n\nShe was clearly no novice. There's something about a nurse telling you what to do and how, but all this was addressed at Kimberly. I wasn't sure if she was ignoring me because she thought I was too weak or because she thought I was useless. \n\nBut I have to admit it was getting a little difficult to focus on what they were saying. I started wondering again what that pill was that Kimberly gave me. It was from Veronica. I had gleaned some hints of her past. She came from a really wealthy family, and I think she had a rebellious phase, but I didn't know if that meant anything involving hard drugs. She hadn't taken anything stronger than a full-bodied red since I'd known her as far as I knew.\n\nI started giggling a little.\n\nThese thoughts pulled my mind in strange directions. I started imagining my current Veronica, my hot librarian fantasy, wearing a long skirt, tight corset and a loose thin white blouse. She was sitting on a tall barstool, but then she was wearing a school uniform, not ours, but something out of a fetishist catalogue. There was an obscenely short tartan skirt now, and white hose and garters caressing those heavenly dark-skinned legs. She was still wearing her blouse, but the corset was gone, and the buttons were undone most of the way to her belly. I looked up to her face, that face I'd seen in dreams, in ecstasy, in joy. She had a lollipop in her mouth and she tilted her head coquettishly. But the crowning effect was her hair in two tight pigtails. The clich\u00e9 was perfect. God, she was hot in anything.\n\nI started to giggle again, but it came out as a groan.\n\nMrs. Agate's voice wove back into my mind.\n\n\"I'm scheduled to come in on Mondays and Thursdays, but if there is any trouble, call me immediately.\"\n\nThey were at the door, heading out. \n\n\"Goodbye, Mrs. Agate.\" I think I said it out loud, but I couldn't be sure. \n\nKimberly did come back, and that day she did end up feeding me the frozen meals that Mrs. Agate delivered. They were actually delicious, but maybe that was just a side effect of Veronica's pill. I found out a long time ago that I wasn't a good drinker, and now I was discovering that I probably wasn't very good with whatever the hell that was.\n\nThe next day, Jennifer showed up with Kimberly. They decided that it was best if I stayed up in the bedroom during the day, just in case there were people watching the house, so Jennifer came up to talk while Kimberly put together breakfast. \n\n\"So how are you actually feeling?\"\n\n\"Pretty good, really. I'm already getting a bit of cabin fever though. I'm not sure how long I'm going to be able to handle this whole charade.\"\n\n\"Well, we're putting some things together. Hopefully it won't be too long, but for now, they need to think you are down. You've actually got the easiest job here. I was given an awful syllabus I have to teach from, and most of my class is so terrified of saying anything wrong, they just don't speak at all. All of Veronica's classes were just outright cancelled, no research class, her maker-space was shuttered, and I'm expecting the library to be closed up any day now.\"\n\n\"I hadn't even thought about any of that. You guys must be miserable.\"\n\n\"That's not even the worst. Poor Kimberly is in middle of it all. She's in the administrative office, but she's had all of her responsibilities taken away. They even took her out of her office. She's back to fetching coffee and filing. She won't say anything about it, but I've never seen her so depressed.\"\n\n\"Oh, Jesus, I can't imagine. We need to get back in there. How are we going to fix all of this?\"\n\n\"The only way is to get you back in that office. One good thing is that this little coup has shown the true colors of faculty and staff. It's actually heartening how much grumbling I've been hearing. I swear, even some folks who didn't like you at all are bitching about things now. It's not as urgent as it was before you got here, but there will absolutely be a mass quitting at the end of the semester if we can't get things turned around.\"\n\n\"Well, that might be something we could use. Could we take that to the Board of Directors?\"\n\n\"That's what I was thinking. Kimberly said that most of them seemed to support you pretty strongly, especially Dr. Cline, and she's the chair, and the main one who matters for a lot of reasons. I don't think she would have let Sten take over if she felt there were any other choice.\"\n\nKimberly walked into the room with a large bed-tray that had three plates. There were eggs and vegetables and hashbrowns, but there was nothing from the reheated meals from Mrs. Agate.\n\nKimberly set the tray on the bed. \"That's for sure. I remember being a bit surprised about how Dr. Cline backed you. She doesn't change her mind about people like that, so I think she's the one we could approach. But we'll need something more than the threat of losing faculty and staff. If she is going to need to convince the rest of the board to reinstate you, there needs to be something else.\"\n\nI looked meaningfully at the food in front of us and Jennifer began to dig in.\n\n\"Oh, right.\" Kimberly looked a little embarrassed. \"Maybe I shouldn't have fed you that stuff yesterday.\"\n\nJennifer swallowed her mouthful of eggs. \"It might just be paranoia, but I haven't heard of the hospital doing meals on wheels for patients back home. After the spiked tea thing, I don't think we should be taking too many chances.\"\n\n\"The trick is gone. I'm not sure what they could do to me now.\"\n\n\"Maybe they want you really gone? Or maybe just genuinely sick on a chronic basis. Again, maybe it's paranoia, but the three of us agreed that we're going to get you fresh food and smuggle out the premade ones and toss them in the disposal.\"\n\n\"This seems like so much trouble. I can't be that important.\"\n\n\"You don't know that.\" Kimberly scolded me. \"I've tried to tell you. People saw the changes, and they connect them with you. They liked the things you were doing.\"\n\n\"Oh, and another practical thing. Veronica said to apologize for the pill. Kimberly thought you were hilarious, but getting you stoned is probably not repeatable. I think the best thing now is for you to go nocturnal. When Mrs. Agate comes to visit you should be in deep sleep. That'll make her think you're still out of it.\"\n\n\"That make sense I guess.\"\n\n\"Oh, and Ms Rai also said that at night you should review the videos from your cellar. That way you can watch over the school and look for things that might help us.\"\n\n\"We know the principal's office doesn't have a camera, so I'd focus on following Mr. Grant and looking over the public places. Do a little Rear Window work, ya know?\"\n\nAfter that, we tried to talk about other things, but there was a pall over the meal. Normally, Kimberly would be able to lighten things up with her enthusiasm, but now that Jennifer told me about the way her days were going, I felt that I could see the weariness in her. If I was already getting tired, she must be exhausted. \n\nTrue to their plan, Jennifer left with some of the meals. She was going straight home to dispose of them before heading in to class. Kimberly had also made some stew for me to have for lunch and dinner. \n\nI thought more about the possibility of the food actually being drugged. We didn't have any good proof, but it made sense that all of the movements against me were coming from the same person or group. If Mr. Grant did spike my tea, then maybe it wasn't so far-fetched that they would get the nurse to deliver drugged food. But we still didn't know what was in the tea. Was it a coincidence that it tripped the trick into overload? What would they get out of having me drugged?\n\nThere was just too much we didn't know, but some threads were becoming clearer. We needed to know more about Mr. Grant. \n\nWith that in mind, I went to sleep early and set an alarm for ten at night. I didn't sleep particularly well, but I figured it would take a while to get used to the night-owl schedule, and I wanted to be appropriately groggy for Mrs. Agate's visit that Thursday.\n\nWhen I did wake up, I brewed a full pot of tea and took it down to the creepy camera cave. The concrete bunker feel with the florescent lights really made the squalor shine. If I was going to be spending any time down there, I was going to need to get a rug and something to put on the walls, or something.\n\nJust as Veronica had set it up, the camera system backup had saved the previous day's recording for my perusal. \n\nI figured I would start by looking at the wide angle cameras in the public areas to start with. There probably wouldn't be much to see, but it would give me a chance to reacquaint myself with the system and get a feel for the campus again. After all, it had been a long time since I'd even set foot there.\n\nThe first thing I noticed was how empty everything was. There just weren't that many people anywhere. At first, I thought that the video wasn't running, but the time hack at the corner of the screen ticked away. I checked the cafe, but it looked like they shut that down, too. No cashier, no customers, no fresh bread, nothing. I couldn't see the door to the theater, but I was sure they had that closed, too.\n\nThen at about ten minutes before the first class of the day, I saw students flood out of the dorms. They almost looked like they were walking in formation, just lines of students moving with speed, but not running, streaming to the class building. These cameras didn't have sound, but I could tell that no one was even speaking. ",
        "Then I noticed the uniforms. They had been changed after all.\n\nThey didn't look bad actually, but it was clear they didn't choose any of the options from the fashion show. They kept the deep school green. There was still a jacket, but it was cut very aggressively in at the waist, with darts to emphasize the angle from the waist to the bust. The lapels were wide with dark piping and a couple horizontal stripes. The skirts were a bit higher in the hem, up to right below the knee. They were pleated, but still fairly tight, in line with the military look of the whole outfit.\n\nAgain, it didn't look bad, actually, but with everyone marching along like they were, the effect was dishearteningly regimental. \n\nThen, right as they got to the class building, I saw an adult move toward one student. I recognized him vaguely. He was one of the science faculty. He stopped the girl and started talking to her with a good deal of heat. The most depressing thing was that not one of the other students even stopped. As the teacher pulled out a notebook and started writing, the student lowered her head, and I could see her shoulders shudder slightly. I couldn't tell what, if anything she had done wrong. And all of the other students just kept on walking. \n\nThis was the revitalized demerit system, I suppose. \n\nI scrubbed through the rest of the day on the outdoor cameras and saw much the same. More cowed students trooping from the dorms to the classrooms, and from the classrooms to the cafeteria, and then back to the classrooms or dorms. No frisbee or soccer on the quad, no reading in the warm grass, and certainly no nervous couples holding hands as they walked together in the early autumn sun. \n\nAs I was getting ready to head upstairs to head up some stew for a midnight meal, I saw a weird blur in the corner of the screen. The video was fairly late in the day, only a few hours ago. \n\nIt took me a while to find the next camera angle around the corner. I had to look through the cameras that weren't on the regular security camera list, one of the cameras that were part of the creepy, hidden list. But when I did find it and synced up the time, I saw a smallish girl in uniform jogging down into a dark area and crouching down. She pulled something out of her bag and then... I had to zoom in to see what was going on.\n\nI laughed out loud.\n\nScrubbing a bit forward I saw the result of my young graffiti artist's effort: \"Fuck Sten, demerit my ass.\" Underneath that bit of eloquence was a decorative tag that took me a bit to decipher, then I saw it: \"DC.\" It had to stand for the Dionysian Club.\n\nI laughed again, then watched to make sure she got away safely. I wondered if she had been there at the spa training. I couldn't tell who she was, but that wasn't important. The Dionysian Club was still going strong, it seemed. \n\nAfter heating up a bowl of stew, I went back down to go through the indoor cameras. First order of business was to check up on Veronica and Jennifer to make sure they were okay.\n\nJennifer had a desk in the main teacher's area and there was a camera there, so I glanced through, but there wasn't much to see. The teachers were all at their desks and they seemed much busier than I remember. These indoor creeper cams had audio, so I listened in every time there was a bump in the sound wave. The room was quiet for the most part, pens on paper, honking of chairs being pushed back on tile, and not much else. Then I saw a Jennifer talking to another teacher and scrubbed back to catch the conversation. \n\n\"Ms. Lashgari, can you help me out on this for a second?\"\n\n\"Sure, Beth, what's up?\"\n\nBeth, whoever she was, maybe one of the English teachers? seemed very stressed. Even the use of her first name seemed to agitate her.\n\n\"Uh, well, it's the progress report for Angela Jackson. I'm not sure what to put down for remediation.\"\n\n\"Angela? She's the best! She hasn't gotten into trouble, has she?\"\n\n\"No! Of course not. She's an angel, just like her name.\"\n\nBeth gave out a painfully forced laugh.\n\n\"No problems, no remediation, then, right?\"\n\n\"Well, that's... I mean... you read that email, right? Principal Sten implied that there were expectations...\"\n\n\"Beth. Look at me. It's your class. Angela is your student. You run things. Don't let anyone tell you that you've got to tear down any student out of some kind of messianic to pull people down in order to form them better, or whatever bullshit Sten was spouting. You don't need to hurt people to make them better. You know that. You're a good teacher. Allow yourself to be a good teacher.\"\n\nThrough this speech, Beth started cringing visibly. She glanced around, looking to see who would be overhearing, but Jennifer didn't lower her voice at all. She did see Beth's reaction though.\n\n\"Yeah, I know...\"\n\n\"Beth.\" Jennifer sighed deeply. \"If you think this is going to rebound to you, then you'll have to make your choices...\"\n\n\"Ms Lashgari. I appreciate you... and what you are saying here, but... I mean... I need this job. I can't afford to just quit... I don't mean that as an attack on what you did back then, but... I just can't lose this job. Principal Sten said she was going to be shuffling up faculty... and... I can't be shuffled.\"\n\n\"God... I'm sorry.\" Jennifer sighed again, this time in pained exasperation. \"I didn't... Okay... let's fix this. We'll need to talk to Angela...\"\n\nAnd with that, Jennifer walked with Beth out of range of the microphone. \n\nDr. Sten's terror campaign seemed to be working pretty well. This only convinced me that we needed to move faster.\n\nNothing else from that camera, so I moved to the next on my list. \n\nI didn't expect to see anything from Veronica's office. She knew where the camera was and blocked it long ago. \n\nI was surprised, then, to see her office, clear as day. I could see her computer was on and there was a document open. Written in a large font was, \"Nosey, nosey, you big perv!\"\n\nI chuckled again. She knew I was going to be poking around. It was actually kind of cute. Veronica wasn't a people person at all. Despite her blossoming among our little foursome, she maintained that she usually didn't like people, and I believed her. Her students adored her, well, they adored and feared her. She was the embodiment of the strict librarian, but she was probably one of the truest, best, and most capable people I knew. The students could see that and a lot of them tried to model themselves off of her, much to her flattered confusion.\n\nAs I was thinking about what a wonderful woman she was, I saw her walk into frame. \n\nShe didn't sit down, but went right to the camera. She looked at it and winked, then licked her lips.\n\n\"Hey there, friend. Wish I could see you right now.\"\n\nWith a smile, she darted back to the door and I heard a click. \n\n\"But maybe we could take advantage of you being able to see me, eh?\"\n\nShe blew a kiss toward the camera and moved up toward her desk.\n\nShe chuckled and then deleted the message on her computer.\n\nAs always, she was stunning. Today she was wearing her hair up in the stereotypical severe bun, held together with a pair of chopsticks. There were a few strands of hair very strategically dangling down to frame her face. She rarely wore much makeup, but then she did have a dark red lipstick and a subtle eye shadow and blush.\n\nJust like everyone else, she was dressed more conservatively than I remember, but it fit her style more easily. She wore a dark tight-fitting jacket over a white blouse. Her skirt was long and slit high on the side. It looked like she had on tights or hose of some kind, but I couldn't be sure. And her statuesque form was lifted higher on a pair of perilously high heels. \n\nShe swayed back and forth, slowly unbuttoning her jacket. There wasn't any music, but I could feel the beat in the bump of her hips. For a thin woman, she had lovely curves, and she certainly knew how to show herself to best effect.\n\nThe jacket came off first and without much fanfare. She tossed it over to the chair as she spun around. She leaned over on the desk, aiming her derriere toward the camera. Looking back over her shoulder, she looked back to the camera.\n\n\"There really isn't enough room in here to do this right, you know? I'll have to give you the full version later. But, seeing as how you are playing peeking Tom today, I'll give you a little peek to tide you over.\"\n\nHer incredible ass was still bumping back and forth to that unheard beat. She held herself up with one arm, and ran the other hand up her legs, defining that luscious line of taut skin under the fabric of the skirt. When her hand got to the curve of her butt, she slowed down, caressing herself gently. Then in a flash, she pulled her hand back and brought it down hard. The smack was loud, and I could see her eyes flash wide, even though she knew it was coming. \n\nShe laughed gently, I guess she was imagining my reaction.\n\nI had never been into spanking, but the sight of her bent over like that might have made me a believer. Something else to try in private when we could get together again.\n\nShe continued her caressing. Back down her leg, but this time, when she brought her hand back up, she was pulling the hem of the skirt up with it. She was wearing stockings after all! The dark nylon over her dark skin, both so smooth and sexy, what an incredible sight. As she brought her hand higher, I saw that she had even been wearing garters. I swear I saw her shudder when her hand finally reached the flesh of her upper thigh.\n\nWith that, she stood up straight again, letting the skirt fall back down. But she turned slowly, both hands now exploring her body, up her belly, and moving so close, but ultimately avoiding those incredible breasts. Up, one tracing lightly up her neck to the side of her head into her hair, and the other trailing back down over her waist and back to her butt. Now she was facing the camera again, and I could see that she was getting a little worked up.\n\n\"I didn't think this would really do much for me, but damn... This is really fun.\"\n\nShe floated lower, sitting gently back down on her chair. She looked straight into the camera with smoky eyes. Without any change in expression, her legs began to spread. The slit in the skirt widened, but she reached down to pull it up again. She lifted her butt up and slid the skirt up, bunching it up around her waist.\n\n\"That's going to wrinkle like hell. See what I do for you?\" Her eyebrow arched high.\n\nWhen she got the skirt out of the way, I saw the bigger surprise. \n\nVeronica the naughty librarian was not wearing panties!\n\nShe laughed again.\n\n\"Well, the garters already make too much of a bump in the line, so I figured why bother? And besides, I figured I'd be making a little video for you anyway.\"\n\nShe settled back down and went back to running her hands all over her body. Her legs were now spread wide, showing me those incredible lips that always made my mouth water. \n\nShe was still moving gently back and forth, but now she started rocking her hips a bit, which shook her breasts nicely underneath that thin white fabric. \n\nAs I was enjoying the movement, it was like she could sense my gaze. She moved a hand toward the buttons, not opening the top of bottom, but a couple in the middle, so she could slide a hand inside, and she did just that. \n\nWatching that hand slink into her blouse and anticipating the reaction in her face to the sensation of groping her breast, I almost didn't see where the other hand was heading. Her other hand was already down on her thigh, and my eyes were drawn there when she squeezed her thigh, hard. Then in drifted up, fingernails on skin, heading toward that carefully trimmed bush, now clearly glistening.\n\nHer head rocked back as her hand reached the edge of her pussy. She gently ran a single finger up her labia, lingering lightly at the top, where her hood protected her oh-so-sensitive clit. Before her finger got there, I could see that it was already starting to poke out slightly. She was well and truly starting to feel it. \n\nI looked up to her face to watch the transformation I knew was soon to come. Her head was still thrown back, but soon she lifted it to look back into the camera. She smiled, knowing that no matter how hot I found her body to be, I always needed to see her face. Even without the trick, her eyes were the key, so expressive, dark and evocative of her catlike spirit. \n\nMy peripheral vison noticed the hand on her breast was moving slowly, but the other hand was picking up speed. Her shoulder rocked in rhythm, so I didn't need to look to see what she was up to. \n\nShe tried to keep her expression stoic, knowing she was on display, but it was increasingly hard to maintain. The pleasure her hands were evoking, the sensation of a hardening nipple, labia rubbing back and forth, becoming more slippery with each stroke, it was all shown on her face. Her eyelids lowered and then snapped open. Her tongue slipped out and licked her full lips. Her nostrils flared wider and more rapidly as her desire grew. Then there was a sign I had seen before, she opened her mouth ever so slightly and bit down on her lower lip. Maybe she knew how much I enjoyed that look, maybe it was unconscious, but to me it was powerful.\n\nThen there was a loud pounding on Veronica's office door. \n\nI saw her entire body jerk in surprise. She nearly slid off her chair.\n\nBut amazingly, in an impossibly short time, she gathered herself. She stood up, letting the skirt drop down into place. It did look a little wrinkled, but not too bad. She grabbed her jacket and slipped it on, leaving it unbuttoned, and turned to the door. The camera and its single viewer were seemingly forgotten.\n\nShe took the briefest of moments, breathed in, then out. Then, remembering, she reached out and wiped her hand on something off-camera.\n\nThen she went to the door and opened it.\n\n\"Ah, Mr. Grant, what do you want?\"\n\n\"Oh, Veronica, I asked you to call me Dean.\"\n\n\"Dean. what do you want?\"\n\nIt was odd to see Veronica interacting with someone without me there. She had opened up so much in our little group, I had forgotten how awkward and abrupt she was with people she didn't know, or in this case, people she didn't like. \n\n\"Can I come in for a sec? I need to talk to you about the committee.\"\n\nThere was a quick pause.\n\n\"I am right in the middle of something, but if it's quick...\"\n\nMr. Grant walked in the office and glanced around.\n\n\"We really need to get you over into the administration building. This is way too cramped. I'm moving over there to my own office in a week or two.\"\n\n\"Why would the nurse's office be in the administration building?\"\n\n\"Oh, I'd still have the exam room for taking care of students, but I'm going to be shifting over and handling some of the stuff over there. You'll see.\n\n\"Well, as a librarian,\" now the sarcasm came out. \"I think it's best that I stay, well, in the library. It's part of the whole job description, right?\"\n\n\"Things are changing. I mean, we live in a digital age now. I'm not sure this old dead tree library is going to stay around. We did fine without it before. You'll need to find another field if you want to keep up.\"\n\nI could almost feel Veronica vibrating with rage. Mr. Grant had basically hit all of the top answers on the how to piss of a librarian quiz.\n\n\"Mr. Grant.\"\n\n\"Dean.\"\n\n\"Dean. What do you need?\"\n\n\"Did you get my email?\"\n\n\"I don't recall. What was it about?\"\n\n\"The Restructuring Committee. Melissa is putting together an ad hoc committee to look into ways we can put things back on track here, ya know, efficiency, focusing on core competencies, that kind of thing. The scope is pretty wide open though.\"\n\n\"What do you need? Mr... What do you need, Dean?\"\n\nHe smiled as she said her name. \"Melissa wanted another person on the committee. She wants to bring on another faculty member from the sciences, but I convinced her that we should ask you first.\"\n\n\"You want me on the committee? Why?\"\n\n\"Listen, Veronica. You don't know the way all this works. I know you were kind of close to Ben, but he really did a lot of damage to the school. Maybe he was an okay guy, but he didn't know anything about running this place. I mean, all that money spent on stupid things that we don't need, right? We're not a big school. We're not a college. Good students don't come here, and we're not going to convince them to come here, especially not with pools and that creepy theater.\"\n\n\"Why do you want me on the committee?\"\n\n\"Well, it's a favor. I mean, I convinced Melissa to take you on, she didn't want to. I like you Veronica.\" He stepped a bit forward into the room and closer to her. \"I figure I could do things to help you out. Things are going to change a lot around here, and if you want to stay here, you are going to need to be one of the people making the decisions. I am one of those people, and I could help you out.\"\n\n\"Principal Sten doesn't want me on the committee?\"\n\n\"No, but I convinced her. I'm helping her out with some stuff and she owes me a favor. That's how this works, honey. Listen, I'm not dumb. I know you're trying to protect people, students, a couple of teachers, Kimberly Adams over in the office... I even know you are still hoping you can help Ben. Now, you'll have to give up on him, but if you let me help you, we might be able to help keep some of those people around. Hell, I've got my eye on a few students, too.\" He gave a quick chuckle. \"That's not going to be a problem, but you've got to be on board, you understand? I help you, and maybe you help me sometime later on.\"\n\nVeronica looked back at him with an impressively stoic face.\n\n\"It's okay. I'll take care of you.\" He reached out and placed his hand on her shoulder. I had no idea how she didn't flinch. \"Like I said, I like you, honey. You're incredible, like nothing else around here. You'll fit in really well with the plans we've got lined up here. But I get it, it's a lot. You've got to think it over, look at your horoscope, whatever. Take a day or two and let me know, yes or no. Committee's going to meet next Monday, you need to be there.\"\n\nHe dropped his hand from her shoulder and his voice got a bit harder. \"But keep this under your hat, you hear? I'm taking a chance here, getting you in on this, and you need to respect that. Okay?\"\n\n\"Okay.\" Veronica seemed to have shut down all of her emotions.\n\nHe stepped back and looked her up and down, not even hiding the leer. \"Like nothing else around here.\" Then he smiled warmly and chuckled. \"Oh, you got a button undone there.\" He reached out toward her chest to point it out, but she batted his hand away.\n\n\"Hey! No offence, honey.\"\n\n\"In a day or two? Maybe by Friday. I'll let you know soon. I need to think about it.\"\n\n\"Fine, fine. Just remember. You've got people you want to help out. This is how you help them. And it might just be fun, you know?\"\n\nHe chuckled and walked out the door.\n\nShe closed it behind her and collapsed back into her chair. \n\n\"Well, shit.\"\n\nThen she looked up and looked at the camera.\n\n\"Fun time's over. Stay there, stay offline. Don't email anyone. I might not be able to be there tomorrow morning, but we'll need to get together soon. I've got to try and prepare the library. If they shut this place down, I need to secure some things and lock down the special collections.\"\n\nA deep sigh.\n\n\"Love ya. Take care.\"\n\nAnd with that, she shifted a stack of books in front of the camera.\n\nI leaned back in my chair.\n\n\"Well, shit, indeed.\"\n\nI needed a moment, so I took in the last, now not-so-warm spoons full of stew, then took it upstairs to clean the bowl. I made another pot of tea and headed back down.\n\nWhen I got back to the console, I was getting a bit tired. That was the plan, of course, but I wanted to be awake for when Kimberly showed up and that was not for a good while yet.",
        "The only main place left that I planned to check tonight was the big one. I knew there was a camera in the nurse's office, and now that I had seen Mr. Grant in action, I worried what I would find there. Hopefully I would be able to learn more about what the hell was going on.\n\nI scrubbed back to the morning and waited for him to arrive. When he didn't show up for a few hours, I checked the other cameras to see if I could find him elsewhere.\n\nThere he was. He did show up spot on at eight in the morning, but he went directly to the administration building. No cameras in there, so I just had to wait for him to come out. \n\nFinally, he did. Based on the time hack, I knew he would head over to the library to creep on Veronica, and he did exactly that. When he left there, I clicked over to the camera in his office, and in a moment, he walked right in.\n\nHe closed the door and then kicked the metal trashcan hard. I heard him scream though gritted teeth and then he actually punched the wall. The drywall gave way and it took him a bit to get his hand out of the hole. It would have been comic if he weren't showing a violent side that I didn't know he had. I thought he was just an administrative bully, but this put a new wrinkle in things.\n\nHe threw himself down on the chair in front of his desk like a petulant child.\n\nHe was crumpled down in his chair, and I heard him mumbling to himself. I couldn't make anything out, and he didn't seem to have any intention of doing anything, so I scrubbed forward a bit.\n\nEventually, he did get up and walk to a standing cabinet on the other side of the office. He opened it up, revealing a store of first aid supplies, bandages, splints and the like. There was also a basic collection of aspirins and other over-the-counter stuff. Then he opened a small refrigerated compartment. \n\nAmong the cold packs was a small white case. He took it out and laid it on his desk. He fiddled with the clasp for a bit, and I realized there was a combination lock. I paused to zoom in and slowmo through his opening it so I could figure out the code. Maybe that would become handy later on.\n\nI zoomed out and hit play to get out of slowmo, more curious than even about what was in the box. If I hadn't been so tired, or if I just thought about it for a moment, I probably would have figured it out sooner, but all I saw were a few vials of reddish liquid and a compartment of syringes.\n\nHe took out a vial and tapped it on the desk for a moment, as if he was making a decision. Then, the decision apparently made, he took out a syringe and filled it from the vial. \n\nI watched enthralled as he went though the process of injecting himself with whatever was in the vial. \n\nIt seemed to be quite painful. As soon as he pressed the plunger, he whole body tensed. I thought he was going to break the needle off in his arm, but he pulled it out right before tossing it aside and crumpling into a fetal ball. He fell off the chair and I heard him groaning in obvious agony. His fist struck out and he pounded the tile floor a few times.\n\nAfter a little while, he did get up slowly, straightened out his clothes, and started pacing, back and forth across the office. Then he walked over to another cabinet. He took off his sportscoat and hunt it up in the cabinet, taking out and putting on a long white doctor's coat. He looked at the clock on the wall, and being agitated by what he saw, he rushed to clean up the white box and the rest of the office. \n\nAs he was finishing this, there was a soft regular rapping at the door. \n\nHe sat down at his chair, turned himself carefully toward the door, and said in an almost absurdly low voice. \"Enter!\"\n\nThree students walked into the room, walking in that same weird way I had seen them walk across the quad. There was something different about them, though. Two seemed very ill at ease, but one, the one who had come in first, smiling nervously.\n\n\"Very well. Lynn, why are you here today?\"\n\nThe first girl spoke. Even though she tried to answer in the same regimented fashion Mr. Grant had used, her voice was low and dreamy. I recognized that voice. It sounded almost exactly like a women under the influence of the trick. But there was something else, too. It was a combination of sexual arousal and adoration. There was a confusion there, too, though. I couldn't see in her mind, obviously, but it didn't sound like she was entirely in control.\n\nSo this must be the strangeness. And it was coming out of a vial?\n\n\"Mr. Grant... I brought these girls to you for their checkup.\"\n\n\"Good. Why did you bring these two?\"\n\n\"You... you said...\" The girl he called Lynn was nearly swaying back and forth like she was going to pass out.\n\nMr. Grant stood up and grabbed her by the wrists.\n\n\"Lynn. Why did you bring these two girls to me?\"\n\nThe two other girls were starting to shift nervously, clearly not comfortable with whatever was going on here. \n\n\"You said to bring you... bring you pretty girls... Everyone needs to have a checkup.\" She looked up into his face with a look of deep worry. \"Did I... Did I mess up? Are they not pretty enough? I don't really know...\"\n\n\"You did fine, Lynn, just fine. Now why don't you sit down in this chair while I talk to them, okay?\"\n\nLynn stumbled over to the chair and slumped into it. I think she actually passed out, but Mr. Grant didn't pay any attention.\n\nHe turned to the two trembling students.\n\n\"Hello, I think I have seen you on campus. I'm Mr. Grant. I'm the nurse here on campus, and Lynn has just brought you over here to finish off your enrollment physical.\"\n\nHe carefully looked both girls in the eyes as he spoke. I tried to see if I could see a sparkle in anyone's eyes, but didn't see anything. \n\nBoth girls noticeably calmed a little bit, no longer shaking.\n\n\"Why don't the both of you hop up on the examination table. We've got almost all the physical data from you, but I just need to ask you a few questions, and we'll get you on your way. Just let me see your ID cards, please.\"\n\nThey both handed them over and Mr. Grant punched them up on a tablet.\n\n\"Ok, let's start with Maria. Which of you is Maria?\"\n\nThe girl on the left raised her hand and squeaked out, \"I'm Maria, sir.\"\n\n\"Excellent. Now first I just want to confirm a bit about your eyes. Look right at my eyes if you could, Maria.\"\n\nIt was fascinating to see him go through this. Something was very different about the version of the trick that he had. It seemed like it wasn't working easily. I saw beads of sweat roll down the side of his face. He was clearly concentrating all his energy on her, but she wasn't really reacting much.\n\nHis voice was more ragged than before, almost exhausted.\n\n\"Ok, well done, Maria.\"\n\n\"Thank you, sir.\"\n\n\"Now one quick question to round things off. Are you a virgin?\"\n\n\"What?\" Maria's voice came out clear and unclouded. \"What? Why would you need to know that? I don't think... I don't...\"\n\nMr. Grant was back in front of her looking directly at her, but it was no good.\n\n\"I don't... think that's appropriate. I'm sorry, sir. I just...\"\n\n\"Fine.\" Mr. Grant's voice was ice cold with barely controlled anger. \"That will be twenty demerits for you Maria. You'll be working in the spa for the next month.\"\n\n\"Oh, Mr. Grant, but...\" \n\n\"Maybe you'd rather work in the cafeteria? That's opening up for demerit work soon.\"\n\n\"No, sir.\"\n\n\"Are you a virgin?\"\n\n\"I'm very sorry, but I don't think you need to know that information, sir.\"\n\n\"Fine, thirty demerits. Wait outside for your paperwork.\"\n\nMaria was tearing up and it looked like she was trying to figure out what to say.\n\n\"OUT!\"\n\nMaria hopped off the examination table and rushed halfway to the door.\n\n\"What do you say, Maria?\"\n\nThrough choked sobs, she sputtered out, \"Thank you, sir.\" And then she was out of the room.\n\nMr. Grant, sighed, then turned to the other girl. \n\n\"So you would be Della?\"\n\n\"Yes, sir.\"\n\nHer voice was not as woozy as Lynn's, but it was not too far off, either.\n\n\"Good. Della, lets look at your eyes, too.\"\n\nHe looked in her eyes comparatively quickly before taking half a step back, clearly still exhausted, but much more pleased. He looked her up and down.\n\n\"You are a pretty girl. Lynn did well to bring you to me.\"\n\n\"Thank you, sir.\"\n\n\"Now, Della, can you tell me if you are a virgin or not?\"\n\nIn a dazed voice, she replied, \"No, sir. I'm not a virgin.\"\n\n\"Godammit! We've got too many fucking sluts here. Get the hell out of here, you skank.\"\n\nDella seemed confused, then slowly got down from the examination table.\n\n\"Thank you, sir.\"\n\nAnd then she left.\n\nMr. Grant was left in the room alone with Lynn, who was now clearly unconscious in a chair in the corner. He slammed his fist down on the padded table, then collected himself and walked over to Lynn.\n\nHe kicked the chair without much strength.\n\n\"Oh! Sir, I'm so sorry. Did I fall asleep again? I don't know what's wrong with me. I just... I'm so tired all the time.\"\n\n\"Lynn. Why did you bring me those girls?\"\n\n\"You told me to, sir.\"\n\n\"But I told you what I wanted. What did I tell you I wanted, Lynn?\"\n\n\"Pretty girls... You wanted pretty girls...\"\n\n\"And...\"\n\n\"Sir, you said you wanted virgins. Were they not okay? But I don't know! How do I find that out? I'm sorry. I'll get you more girls. I just don't know how to tell. How do I tell if they're... if they're...\"\n\n\"Sluts. Skanks. Whores.\"\n\nLynn flinched at each word that was spat at her.\n\n\"I'll try harder, sir.\"\n\n\"Yes, you will. Bring me two more...\" He wiped the sweat from his forehead and thought for a moment. \"for Friday. Can you do that?\"\n\n\"Yes, sir! I'll do my best... But, sir...\" She looked up at him with a truly pathetic expression. Her voice became almost inaudible. \"I'm still a virgin. Can't I help?\"\n\nMr. Grant pulled her up out of the chair and hugged her tight, kissing her on the forehead. He brushed hair back over her ears.\n\n\"You are helping, Lynn. Oh, you are helping. And you are going to be perfect. You'll be our number one girl.\"\n\nShe smiled, but didn't lean into the hug.\n\nHe pulled back a little bit and looked at her in the eyes. Then he reached out and grabbed awkwardly at her breasts, squeezing hard.\n\nShe cringed, and her expression started to change, wavering between that anodyne nothingness and confusion.\n\nMr. Grant shoved her away and moved away, sitting down at his desk.\n\n\"You may leave, Lynn.\"\n\n\"Thank... Thank you, sir.\"\n\nAnd Mr. Grant was left alone in his office. One hand was on the arm of his chair, and I could see his knuckles were white with the pressure of his grip.\n\n\"Goddammit.\"\n\nI sat back again, only then realizing that every muscle in my body had been clenched. \n\nSo they had a serum? Some kind of liquid trick? But it didn't seem to work right. I mean, any time I came across someone who wasn't into me, or interested, they would either unconsciously kick me out of their head, or... or, anyway, I don't think I even had access to anything that could make them do something they didn't want to do. I mean, I never really tried though. Maybe I could?\n\nBut it seemed like what they were trying to do was to break people down and remove their ability to resist. But that one girl was able to resist him basically from the get-go. And then there was poor Lynn, I wondered what that was all about. \n\nAnd he was looking for virgins? That was creepy as all hell. I had suspicions about what that meant, but I didn't even want to start thinking in that direction.\n\nAs I was caught in my reverie, I heard Mr. Grant start talking on his phone.\n\n\"Principal Sten... Yes ma'am. Yes... they just left. It was, let me check... batch number 62c3, sample 3. The level of pain was about the same... No, I can handle it. But if it's like last time, I'll need another day to recover.\"\n\nThere was a long pause as he listened. His leg started rapidly jerking up and down, tapping his heel on the floor.\n\n\"Yes ma'am. I'll send the report along before I go home tonight... The gist? It's not as effective. I don't know, maybe it is me, but the effect isn't as strong. One girl outright denied to even answer questions. We've never had that before. The second one was just another fucking slut... No!... No, ma'am... I'm sorry. I just get so frustrated... Correct. She was not a virgin. Right. What really had me worried was Lynn... Right... I tried to touch her boobs and she nearly snapped out of it... I don't know... I don't know that either... Well, we need to get him back in the hospital then, don't we?... So, maybe we'll have to arrange something to get him there sooner.\"\n\nAt that, I shot up bolt straight in my chair.\n\nMr. Grant was getting more agitated by the moment. \"You're the boss, but I don't think we can wait another few weeks. If we don't have them conditioned by graduation, things are going to get real ugly, and there's so much we still have to do... I don't know anything about that side of things, that's all you... I am... I'm doing the best I can, dammit!\"\n\nHe abruptly stopped talking. I could tell he was trying to master his emotions as he held the phone a bit further from his ear.\n\nHe took a deep breath.\n\n\"Yes ma'am. I am sorry. I'm just... Yes... I know that's irrelevant. Yes. I just really... I'm really looking forward to this stage of the whole process being over.\"\n\nThen his energy started to ebb. He sunk lower in the chair.\n\n\"Yes... Okay... I'll be back in on Thursday, I've got Lynn bringing two more in on Friday. Okay, we can try the new batch then. Yes, before I leave today... I may need to leave a bit early though. I, no. I'm going to need to go home. I'll get the report to you tonight... Okay... Thank you. Goodbye.\"\n\nHe hung up the phone and just wilted. If that was an effect of their version of the trick, that was very different, too. I was almost always energized after using it.\n\nThen he stood up, replaced his doctor's coat and left. \n\nThat said, my weariness was only being held at bay by the horrific nature of the video I was watching. I stood up and heard every bone in my back crack as I let out a yawn worthy of any lion on the savannah. \n\nFortunately, there was only a little time before Kimberly would show up.\n\nWhen she did, I tried to start to tell her everything I saw that night, but she shushed me and insisted I stay upstairs while she prepared breakfast. \n\nBut when she did bring things up for us, we sat down in the library to eat, and I laid everything out for her. \n\nShe wasn't as shocked as I thought she would be. We both agreed that we would need to get everyone together as soon as possible to make some decisions.\n\nIt was a fairly subdued breakfast. I was nearly nodding off and Kimberly looked like she had a lot of things on her mind. \n\nAs she was leaving, she said that she would get in touch with everyone, but things were so crazy on campus that she wasn't sure we could get everyone together until Friday.\n\nWe kissed and hugged a bit, neither one with the energy to do much more than that. And then she was gone, leaving another batch of things for me to eat that evening. \n\nI slunk over to my bed and collapsed.\n\nWhen I woke up, it was already getting dark. My inner clock was messed up so much that I couldn't tell if it was morning or evening. I thought the nurse Mrs. Agate would take a great report back to her higher ups if she saw me now. Dry mouth, confusion, and one look in the bathroom mirror convinced me I looked like hell too. \n\nI shook off the drowsiness as well as I could. I figured that I would need my energy if I was going to make it through another night of voyeuristic agony. \n\nI finished a shower and was drying my hair when I heard something downstairs. I mean, I think I heard something. I stopped and stood as still as I could, listening for what seemed like a minute or more. I would have sworn I had heard something, but then nothing. But then I still had a strong feeling that something was wrong. I figured it was paranoia and my creeping cabin-fever.\n\nThen I remembered what Mr. Grant said about getting \"him\" back in the hospital.\n\nThere wasn't anything around that I could use as a weapon. I should have taken up golf instead of running. Then I remembered a spare bar to hang clothes on that was over in the closet.\n\nAs quiet as I could, I snuck over and opened up the closet. The bar was where I remembered it, but it was just a wooden stick, and not very long. Better than nothing, right?\n\nI said I wasn't going to go downstairs in case someone was watching outside, but what did that matter if whoever was watching had come in to make sure I was readmitted to the hospital in a particularly kinetic way?\n\nMaybe it was that older newly-minted trooper. I figured I might be able to take him, but if they were both there, I might not be able to, and if they drew their pistols, I'd be shit out of luck.\n\nStill, better to go down swinging. If you're going to get the crap beaten out of you, you might as well get in a few swings on other guy.\n\nI was thinking all this as I made my way to the stairs and then slowly, step by step down to the dark first floor. The sun wasn't entirely down when I woke up, but there wasn't any light out now.\n\nI glanced into the kitchen and didn't see anything.\n\nMaybe it was just a regular old burglar? I didn't really have anything to steal though, and they would have to be local. What local would decide to rob the Green House?\n\nWith catlike tread, I moved into the parlor room. It was pitch black, but I swore I felt that someone was in there. It was like there was a darker shade of blackness over on the lounge chair.\n\n\"Now, now, Ben. Do you have a license for that... stick?\"\n\nFor a split second I was stunned. I knew that voice. It was a woman...\n\n\"Now don't tell me you think I'm a threat. Or has the whole situation here gotten to you a bit? I would turn on the light, but you've got someone outside watching your house, Ben. Why don't we go upstairs and have a little chat, huh?\"\n\n\"TESS?!\"\n\n\"Quiet down there, bucko. Don't want your friend out there getting curious. I would rather I remain unknown here for the moment. Hush now, let's go upstairs.\" \n\nMy eyes had adjusted enough that I saw a dark silhouette walk toward me and I felt her hand grab mine as she walked by toward the stairs.\n\nI followed dumbly.\n\nWhen we got upstairs, she led me toward the library and sat me down in a chair.\n\n\"Do you mind if I make use of the necessaries? It's been a very long day.\"\n\n\"Of course.\" I pointed vaguely down the hall to the bathroom, and she headed off.\n\nWhat the hell was Tess Kindlaw doing here? I swear I felt the gears in my mind turning slower than molasses. Nothing made sense and I felt dumber than ever. There were so many pieces that felt like they should be connected, but I couldn't see clearly. \n\nThe last time I saw Tess, I was shooting my spunk over her shoulder onto the face of a student who I didn't even know was in the room. She was the one who had started all this mess. \n\nShe had the trick! \n\nMaybe she could explain what the hell was going on with me. But if she had the trick, how could I know she wasn't working with Sten and her goons?\n\nI heard her come into the room and click on a dim chairside lamp. She sat down across from me.\n\nShe looked exactly the same. She was a tall woman, even a bit taller than me, medium long brown hair, a sort of roundish face. Looking at her again, I could see clearly in my memory, those lovely large breasts, and I could feel those thighs crushing me in her passion. She was dressed for plausibly deniable stealth, I suppose. Black sweater, tight enough to please me, black pants, but pants that looked normal enough, and boots that could just be regular old hiking boots. All of this with enough style that wouldn't be too out of place for someone on a late-night grocery run.",
        "She didn't look the part then, but I back when I met her, I thought she must be some kind of high-powered lawyer or something. She always seemed smart and in command, but never talked business. But here she was in my library, in the early evening at Bright Hall. Wait. How did she even get here? There wasn't a ferry from the mainland for another week or two.\n\n\"Well, Ben. You really look like shit, don't you?\" She laughed, and I remembered that lovely sound, too. I smiled despite myself.\n\n\"Yeah, I've had a bit of a rough time lately.\"\n\n\"So I understand. You're not eating that prepackaged stuff in your freezer, are you?\"\n\n\"What? How?\" I felt like my mind was running a minute late.\n\n\"I wouldn't, if I were you, that's all.\" Her enigmatic smile widened. She was enjoying this.\n\n\"What the hell, Tess. What are you doing here? How did you get here? And into my house?\"\n\n\"All in due time. It's not so bad, trust me.\"\n\n\"I'm not sure I should trust you.\"\n\n\"Ok, fair. Just take a look in my eyes then, okay?\"\n\n\"So you know what's in my freezer, but you don't know I lost the trick?\"\n\nThe sly smile on her face vanished.\n\n\"You lost it. That's impossible. How?\"\n\n\"Listen, I'm really not sure what's going on here, and I'm getting a real strong feeling that you aren't who I thought you were.\"\n\n\"Right, no reason to trust me, I get it. But you haven't lost the trick. I can tell you that right now. I could feel the lust when I came in the house.\"\n\n\"Well, you might be able to, but I sure as hell can't.\"\n\nShe looked genuinely confused, but then she set her shoulders and stood up. Her expression was worried as she crossed the short distance between us and went down on a knee so that we would be eye-to-eye.\n\nThe memory of our first meeting flooded my consciousness. I remembered my confusion to have a student's mother coming on to me within a few minutes of meeting her. Many times since then, I've been able to see her expression as she realized that I had the trick, and that her lust was being pushed, just like she had pushed so many other people.\n\nBut that night in the library, I felt nothing but depressed. It wasn't that I thought I was a better man when I had the trick, but that I just had more control over my life. And right then, I was thinking that if I still had the trick, maybe I could help out my friends, and the students, and hell, the whole college.\n\nTess was there kneeling in front of me. \n\nShe looked me in the eye and smiled a bit.\n\nIt was funny. I don't remember her actually going in my mind back then the way that I got into other people's minds. Her trick was more of a vague thing, a sensual encouragement, but without the explicit view of people's consciousness that I got.\n\nBut right then, I could feel her trying. She was looking in my eyes, just like I looked into eyes.\n\nThe feeling was eerie. I knew what she was doing, and I still didn't trust her entirely, but she was the only person who might have answers, so I tried to open my mind to her as much as I could. I felt a pressure in my head, not unpleasant, but pressing from the inside.\n\n\"Oh!\" Tess's eyes opened wider, and her confidence slipped. \"Um... this... I'm not sure about this...\"\n\nThen I felt a warm caress ebbing and flowing throughout my body. My cock rose up from nothing to painfully hard, tenting my sweatpants to the limit.\n\n\"Unnggg... Tess, what the...\" \n\nThen I felt another wave crash over me. It was lust. I knew the feeling. I had felt this exact sensation in the women I had pushed before. It was as if every square centimeter of my flesh became an erogenous zone, like everything, my arms, my knees, my nose, everything was as sensitive as the underside of the tip of my cock. \n\nI arched back into my chair, the sensation was that powerful. It wasn't orgasmic, but I felt like I didn't have control over my body. The thing my mind kept at the center of my being was the eye contact with Tess. I couldn't look away if my life depended on it.\n\nTess reached out and put her hand on my knee, and it was like a white-hot floe of lava spread out from where she touched me, even though the sweatpants. It was a burning sensation, but with no pain in it, just heightened sensitivity and sensuality. \n\nI heard a moan of pleasure, much louder than seemed possible. Only after a moment did I realize it came from my mouth, which was now hanging open.\n\n\"Tess...ohfuck...\"\n\n\"Ben. This isn't... I'm not...\"\n\nHer eyes were still wide, but the smile was gone. I could see worry in her expression. Her hand came off of my leg and it slapped vaguely on the arm of the chair. It was clear that she wasn't entirely in control of things, even her body. I could still feel the pressure in my mind, but there was something else, something new, but I couldn't place it.\n\nThere was a flash of panic in her eyes as her arm kept moving jerkily, looking for something to grab hold of, something to ground her.\n\nI was in no condition to help. My entire body was roiling with lust, but I couldn't move a muscle. \n\nI vaguely saw her hand frantically moving toward me, then I felt her hand grab onto my forearm below the sleeve of my t-shirt.\n\nFlesh on flesh.\n\nI felt a massive jolt flowing from her hand to my arm. It was like it welded our skin together, and if I thought the heat was pegging my arousal to the maximum, the thousands of little electric jolts that I felt coming off of her doubled that.\n\nThe pressure in my mind increased, my ears started ringing, and my vision started whiting out. \n\nThen I felt the pop.\n\nIt was just like that first pop when I got the trick, but more, somehow.\n\nLike popping my ears, it was my consciousness seeking some kind of equilibrium. \n\nThe ringing in my ears faded, and I heard that familiar hum that I associated with the power in use.\n\nThe burning sensation that covered my body faded into a comfortable tingling.\n\nAnd my vision cleared.\n\nI was looking back into Tess's eyes.\n\nThey sparkled like never before.\n\nI saw her relief cover her face, her smile open up wide, and I slid into her mind.\n\nI nearly shouted with joy. I could see her mind just like before. I saw her lust, which was substantial, but kept in check by her anxiety, and a few other irrelevant pieces of her mind. And with a reflexive giddy thrill, I pushed.\n\nI gathered up my own arousal, and fed it back into her, then I pushed her lust. Maybe I forgot how receptive she was, because with the barest touch, her lust broke free and began to flood her mind.\n\nHer hand was still on my arm with a death grip, but her expression was utterly transformed.\n\n\"Holy... holycrap... Ohgod, Ben...\"\n\nShe jumped off her knees and lunged at me, planting her lips on me with a force that nearly tipped the chair back.\n\nI focused back into the substantial world and wrapped my arms around her. My heightened sensations made everything so powerful. I tried to take stock of and enjoy each bit: the feel of her body, thrust between my legs, the heat and the weight of her pressed against me, the heavy sensual thrust of her breasts, pressing urgently against my chest, my arms around her waist, with one arm rubbing against the skin of her lower back, with twinkling sparks where her sweater had pulled up a bit.\n\nThen there was her kiss. Her lips were wet and needy, and her tongue slipped out to find my mouth. I reciprocated, needing her, tasting her. So smooth and slippery, no teasing, no playing, just raw animal sensation.\n\nI reached up from where my arms were, finding the hem of her sweater and slipping under it to caress the lovely curves of her lower back and sides.\n\nShe pulled off the kiss and rolled her head back. With a throaty purr, she swung a leg over mine and lowered her weight on my thigh. She squeezed her legs around me and leaned forward to get better contact where she needed it.\n\n\"Crap... Ben, was it like this? I forgot how it felt... Hmmmm... but I'm just on fire...\"\n\nI continued raising my hands under her sweater and came across a bra strap. The latch was in the back, and she paused, hovering over me, her eyes devouring me as I unclipped it and started running my hands back down her sides.\n\n\"Tess?\"\n\n\"Mmmgggg...\"\n\n\"Maybe the bedroom?\"\n\nHer smile widened and she hopped off of me and nearly ran out of the room toward the bedroom.\n\nI stood up and realized how good I felt. It wasn't just that I was horny as hell, but I really felt great. I had been recovering well at home, but was still a bit sluggish, but now I felt like I could beat my time on the beach to forest run. The trick was a hell of a thing.\n\nI walked over to the bedroom and found a glorious sight. \n\nTess had draped herself on the bed, splayed across the pillows. She had discarded everything but her panties and she was attempting to casually run a hand up and down her body from thigh to breast. But it was clear that she was too pumped up to pull off the languid casual look she wanted. Her eyes were darting from my eyes to my crotch, and I could see her chest rise and fall deeply, barely controlled.\n\nKnowing that she was brimming over with lust, I did my best to slow things down and draw out the tease. I was aware of my own desire, but with an effort, I was able to set it aside.\n\nI walked slowly to the side of the bed, watching her, running my eyes up and down her body. She was older, and she didn't have a body like the women in my group, but she was still fit and sexy as hell. When her hand reached her breasts, she lightly trailed her fingernails up and over her nipple. \n\nShe was so wired up that her mouth dropped open as she started to rub her nipple. She was nearly panting.\n\nI took off my shirt, but only when I slid my sweatpants off did I find a huge wet spot in the crotch.\n\n\"Looks like... you got a bit excited there, Ben, eh?\"\n\nI was still hard as I rock. I must have cum when she touched my arm, but I with all my senses pegged, I didn't even realize it. \n\nI knelt on the bed across from her.\n\n\"I got excited? You should look at yourself. You're panting like a bitch in heat.\"\n\n\"You have no idea...\"\n\nShe licked her lips again, then she pinched her nipple hard and twitched in response. \n\n\"Or smell yourself. Just look at your panties... They're ruined, aren't they. How wet are you? Tell me.\"\n\n\"Ben, I'm... hmmm... I'm so wet for you... I can't even tell you how hot... I can't even think straight. I want you to just... Mnnngghh...\"\n\nThis last exclamation was teased out of her as I reached over and ran my fingers from the tops of her feet up to her calf. I wasn't surprised to feel the little tingling shocks all the way up.\n\nI picked up my hand and hovered over her other leg.\n\n\"Ohgod Ben... I want you to just throw me down... Mmmmm... and fuck me like an animal... Ohcrapohcrap... your hands... God, they're like... it's like your hands are hardwired to my clit...\"\n\nNow I moved from fingers to squeezing and caressing with my whole hands. Up and down her legs that she had spread wide for me now. She shifted onto her back, and that let her start mauling her breasts with both hands, pulling her nipples out, stretching them and groaning in pleasure.\n\nAs I got closer to her, her scent got stronger. Her panties really were soaked.\n\n\"Pull them off... I need you... ahhhhnnn... crap... keep your hands on me... it's like lightning...\"\n\nI ran both hands up her legs, up the sensitive inner thighs toward heaven. Goosebumps raised as I moved from fingers to fingernails, then back to full-hand massage.\n\nHer groans were getting rhythmic and shallow.\n\n\"Ohgod... I'm... it's too soon... ohgod... Unnnngghhh...\"\n\nRight then, I arrived at her panties and ran my fingers under the band. They were nice quality pretty little black panties, with a bow on the front, but they were nearly soggy with her sex. I had to peel them off her, her juices clinging to the fabric.\n\nThen her pussy was exposed to the air and oh my god she smelled wonderful. A thick musk just saturated with desire. The scent nearly made my head dizzy, but more powerful was the knowledge of how aroused she was. \n\nI flung the panties off the bed and looked up to her face.\n\nShe was panting shallowly and it seemed like she was trying to talk, but nothing comprehensible was coming out of her mouth. It was all mumbling and groaning in between the gasps for breath.\n\n\"How close are you, Tess?\" I stroked the inside of her thigh up to the edge of her little nicely trimmed pubic hair, running my fingers around the edges, coming close, but not touching those engorged lips.\n\nHer response wasn't any language I knew, but it was clear she was right on the brink.\n\nI pulled my hand back and spread her knees further apart. Then with what I hoped was agonizing slowness, I lowered my head in-between them. \n\nLight kisses all over. Slow licks up and around her.\n\nShe was crying out in little chirps of frustrated anguish.\n\n\"Oh, Tess, god you are beautiful... Your lips are red and... Oh, god they have to be so sensitive right now...\"\n\nI licked over to her labia and gently nibbled.\n\n\"OHshitshitshit... ohgod... ohgod...\"\n\n\"And you are so wet... I bet I could just slip my entire cock inside you with one push... So delicious... You've tasted yourself, right?\"\n\n\"C'mon... c'mon... ohfuck...\"\n\n\"When I'm done down here, I'm going to come up there and kiss you... You know how wet you are... You're going to lick it all off me... God, you should see your clit... it's all the way out, just begging for me to get at it...\"\n\n\"Hhhhmmmmghh... fu... ohfu...\"\n\n\"Should I?\"\n\nI saw the muscles in her belly tense up, and her legs started to twitch, and I knew she had passed the point of no return.\n\nI moved fast, licking from the bottom of her all the way up to the clit. When my tongue touched her, there was another little tingling shock and I dove down, running my tongue around it in little circles.\n\nThe second I felt that little shock, she went off like an atom bomb. She screeched for a split second before she jammed a pillow over her mouth. Her legs snapped closed over my head, hard, but none of her movements stayed, she was shuddering and twisting with everything she had, and I was just along for the ride.\n\nI was able to keep on her though, and my little circles around her clit turned into sucking on it. I snuck my hand in and pushed two fingers into her as deep as I could.\n\nThis was like shifting the gears on her orgasm. She groaned loud and froze for a moment before twisting hard the other way and crying out again into the pillow.\n\nCatching a bit of downtempo on her quaking, I pulled up and crouched over her. Feeling my movement, she threw the pillow to the side and looked down at me. \n\nHer face was a perfect distillation of sexual desire. Her hair was matted in strands to the side of her face. Her skin was blotched with lusty flushing from her nose down deep into her cleavage. She was panting a little easier now, but still hadn't entirely caught her breath. Her Cheshire smile was beaming satisfaction and unadulterated joy, and her eyes were wet with tears of emotional exhaustion. \n\nBut we weren't done by a long shot.\n\nI looked her in the eyes and saw that her entire body was pinging with lust, but I could have seen that without the trick. What I needed to make sure of was that she was up for more. She was sensitive, feeling every touch of the fabric of the sheets, the clinging hair on her face, the slow drip of the sweat down her neck, but her mind was focused on the pressure my legs were making on the inside of her thighs. In her mind, I felt her look down and see my cock on display, close enough to her pussy that the muscles in her hips twitched just seeing it. She hadn't remembered how large I was. Far from being too sensitive to go on, she was ready to throw me on the bed and take what she wanted.\n\nBut I was feeling my need now, too. I pushed her leg over me to move her on her side. I gave her ass check a sharp slap and watched her eyes flash in the slightest pain overcome with acute need. Catching on to my idea, she kept rolling onto her chest, keeping her ass up in the air.\n\n\"C'mon Ben... I bet I can take all of you like this... Fuck me... God! Fuck me!\"\n\nI sidled up on my knees and took hold of her hips, but I wasn't even aiming at her when I felt her hand reach up from under her and grab hold of my cock to position it home.\n\n\"Get in there you fucker... I... ohgod... how am I still cumming... Fuckmefuckmefuckme...\"\n\nHanging right at the entrance to her pussy, I teased as much as I could. She didn't have the muscle control anymore to force the issue, so I slid in just the slightest bit and was rewarded by an inhuman groan of wanting. \n\n\"Goddammit get... fuckme...fuckmefuckme...\"\n\nShe devolved into just chanting 'fuckme' over and over again. I was a little worried that something in her brain was fried, but at this point, I was being driven by lust and nothing more.\n\nShe was up on her elbows, one hand clasping the sheets in a death grip, and the other strumming on her clit. She was trying to push back as I slid in a little more, then all the way out, garnering a few more choice curses. Then I pushed in deep, almost as far as I could go, and she cried out, slamming her face into the pillows again and squealing out a raspy cry of triumph.\n\nI pulled almost all the way out then back in hard. That pushed her off her elbows onto her face and she hugged the pillow tight as rutting animal yelps poured out of her mouth into it. \n\nI got into a good pace, pumping her hard and fast. The sensation of her pussy was so incredible. It felt like she was cumming constantly. The spasms that gripped me came in pulsing waves, impossibly tight in random throbbing ecstasy.\n\nGetting into a good grove, deep enough to get a yelp on each thrust and fast enough to bring me very close to my own peak, I could feel once again that incredible sensation of lust pouring off of both of us. But far from being out of control, I felt like I could sense it and even manage it to some degree. I was in control. I felt like a fucking king.\n\nAfter a bit, her right leg started twitching and she kicked it out as pleasure wracked her. I took that as a sign to bring this to a climax. I was super close and wanted this to be spectacular.\n\nSo I grabbed her leg and pulled it up against my chest, twisting her over onto her side again. I straddled her left leg and held her right leg up against me, never pausing my furious thrusts inside her.\n\nSwinging her around like this, she dropped her pillow and looked back at me. If she looked like a wanton slave to her lust before, she was an erotic ruin now. Hair was everywhere and her breathing were erratic. She was actually still chanting 'fuckme,' but in a voice ragged and low.\n\nI looked her in the eyes to give her a final push. Her mind was a perfect mirror of her body, given utterly to sexual pleasure. I didn't have to look to see where and how to push her desire, it was everything and everywhere.\n\nI pushed.\n\nAnd I fucked.\n\nI had to hold on tight to her legs, as she tripped over into orgasm again. She had hardly any energy left, but the spasmodic twitches were still strong. \n\nI was so enraptured with her reactions, I hardly realized how close I was.\n\nThen her pussy clenched down one more time, so tight I couldn't take it, and I felt my cum rising. I pushed into her faster and harder, then and the very last second, I pulled out and ran my cock sliding over her clit, back and forth maybe two or three strokes. \n\nHer weary eyes opened wide again, and as I started to shoot my cum up her incredible body, she shuddered again. I came more than I had in a long time, firing up over her, covering her belly and running streaks far enough to drizzle over her heaving breasts.\n\nShe immediately reached up and started massaging my spunk into her, making little cooing noises as she rubbed my cum into her hyper-sensitive nipples.",
        "Completely drained, I collapsed on top of her, pressing her hands into he breasts and coating us both with our mixed cum and sweat.\n\nShe pushed me gently to one side off her.\n\n\"God damn, Ben Lee. Just... god... damn...\"\n\n\"So... I think... I think the trick is back...\"\n\nShe laughed out loud in a brassy joyous horselaugh.\n\n\"Yeah... I expect so. Oh, yeah, you promised...\"\n\nShe rolled over and kissed me gently.\n\n\"I do taste good, don't I?\"\n\nShe proceeded to kiss and suck herself off of my face.\n\n\"Tess... It's really really good to see you.\"\n\n\"But?\"\n\n\"But, what the hell are you doing here?\"\n\nShe laughed again, with a little more control.\n\n\"Fair enough. You deserve a few answers, no? Ok. Let me take a shower and drink about a gallon of water, and we'll have a chat.\"\n\nShe paused and her face got serious.\n\n\"Ben, I've treated you very badly. And I doubt you understand how dangerous things are here.\""
    ],
    "authorname": "shudai",
    "tags": [
        "mf",
        "blowjob",
        "stripping",
        "harem",
        "school",
        "voyeurism",
        "doggie style",
        "cunnilingus",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-21"
}