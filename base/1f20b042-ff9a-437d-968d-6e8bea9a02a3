{
    "title": "Hearts of Warriors Ch. 06",
    "pages": [
        "The ringing of the telephone in the early hours of the morning would have woken Mac had he been asleep, but his earlier encounter with Lily had made sleep impossible. He retrieved his cell phone from the coffee table, the familiar number automatically setting his instincts on high alert\n\n\"Hello?\" He deliberately altered the sound of his voice, making it huskier. His caller wasn't due to check in for another week and it paid to be cautious.\n\n\"You do that very well, Mac,\" Pietro laughed softly. \"For a moment there I didn't recognise your voice.\"\n\nMac blew out an irritated noise. \"Just because the number belongs to you doesn't mean someone else didn't get their hands on it,\" he countered. \"I know you think you're infallible but even the best make mistakes.\" He couldn't stop the little dig. He wouldn't have been awake and brooding if Pietro had paid more attention when he vetted 'Andrea Ruminskey.' \n\n\"Who pissed on your parade?\" Pietro laughed again. \"Almost wish I was there to witness it, but you'd probably be tempted to rearrange my face for me.\"\n\nMac counted to ten, then kept going until he reached twenty. When he could trust himself to speak calmly, he let out a slow breath. \"I assume you called in the middle of the night to tell me something important? Or did you just feel like pissing me off?\"\n\nThe other man sobered immediately. \"I got a whiff of something and followed the trail to the UK. I'm now in Edinburgh with a couple of barely-turned Elders. They act like brain-dead idiots, but it's all just a good show. These two are deliberately hiding their smarts. But they're not that intelligent though, as they've bought into my anti-establishment rhetoric. They appear excited by the prospect of having someone more experienced sharing their views. Makes me think an individual is running this little European rebellion after all. And it feels like someone important is coming soon to check me out.\"\n\nMac's tension increased at the news. \"So you think they're finally going to make a move?\"\n\n\"Something's in the wind, Mac. It's been so long since the last attack and I'm getting little clues here and there that appear to be nothing on their own. But taken together, they all point to an offensive about to happen. Our European brethren have a distinct lack of concern about The Council and even the Ancients. They don't view themselves as being under Council control. I also think they expect the V\u00e2rcolac to be easier targets now that they're grown and more likely to be out and about unescorted.\"\n\nMac's eyes automatically drifted to the door as he inhaled deeply to scent Lily as she slept just down the stairs from him. Pietro couldn't be more right about the timing of the V\u00e2rcolac's movements. He felt a surge of rage at the thought of someone making plans to harm the woman he was now personally protecting.\n\n\"You're sure there isn't a central figure pulling the strings from here stateside?\" he finally asked.\n\n\"It's unlikely but not impossible,\" Pietro conceded. \"The anti-Council rhetoric is pretty fierce over here, but that could just be a smokescreen. There could be someone close to our leaders who hates all the changes. The formation of the Ancient Council could have stirred up bad blood. Someone could be plotting to bring down both Councils and set themselves up as the new ruler of our nation.\"\n\nMac's smile was grim. \"If they had any inkling of the triumvirate's existence they wouldn't be so stupid,\" he growled. \"If someone close to the Council is involved then your cover may not be as good as you think, Pietro.\"\n\nThe other vampire laughed softly. \"Why, Mackenzie. For a moment there it actually sounded like you care.\"\n\n\"I care about losing the only eyes and ears we have over there, de la Rios. I've got people to protect and losing you would make my job that little bit more difficult.\"\n\nThe other man still laughed, delight in his voice. \"You know that's not the only reason you sound worried, Mac. I know you like me, really.\"\n\nMac growled in annoyance, his mind whirling at the possible implications of Pietro's intel. He chose to ignore the teasing. \"How much longer will you be in Edinburgh?\"\n\nPietro sobered again. \"Don't know, but it'll probably be a while longer. I get the impression I'm receiving my final vetting before they let me in deeper.\"\n\nMac mulled over his options. If the vampires were preparing to move then the V\u00e2rcolac and possibly even the Council were in danger. Lily was tucked in bed downstairs and his gut instinct was to send her home. But no one knew she was here, and it would be logical to assume the attack would be made against the Armand-Hanlon compound. She would be safer staying with the Praetorians. The question was: could he safely leave her with Karn and the others?\n\n\"I don't have all day to hang around on this call, Mac. The others could come back any moment.\"\n\n\"Send me details of where you are and how long you expect to be there. Update me if you move again. I've a couple of things I need to do here but I'll meet you there as soon as possible. I want to get a feel for these people personally,\" Mac finally answered. \n\nHis gut clenched hard at the thought of leaving but it was the right decision. The more firsthand intel he had, the more effective the Praetorians would be in their mission to protect Lily and the others. He trusted Pietro, but he was used to trusting in his own abilities more. If something was off about the Elders Pietro had met, he'd be able to spot it right away.\n\nAnd there was the risk that Pietro wasn't safe. If someone stateside was running this little rebellion then the final vetting process could blow Pietro's cover. The other vampire's link to the Romanovs wasn't exactly a secret here, even though Pietro had been cultivating his cover in Europe for the past 25 years. Mac had no such ties so his cover would be harder to expose.\n\n\"You do care, Mac,\" Pietro laughed softly. \"I'm really touched.\"\n\n\"Fuck off and just send me the information, de la Rios. I'll let you know when I'm heading out.\"\n\nMac ended the call, his gaze going to the pack that he'd tossed against the wall. He had planned to stay away from the compound for a few of days to clear his head but Lily had halted that escape. Now it looked like he would get his chance after all.\n\nThe thought of leaving Lily alone was like a punch in the gut, though. It hadn't felt this bad before, but after their confrontation in the study he loathed the thought of being away from her. He knew Karn would protect her but it didn't feel right leaving her protection to someone else. \n\nHe knew it was her mating instinct calling him. Her Were heritage was asserting itself fully, actively seeking the one man who was destined to be hers for eternity. Mac couldn't afford to be that man.\n\nAnd yet, he found himself stopping outside her door on his way out. He wanted to walk away but found it impossible. Leaving his pack in the hallway, he opened the door silently and stepped into the room. The yards of fabric were the first thing he noticed. There were swathes of the stuff in different colours covering every inch of the walls.\n\nHe stared in shock and wondered how she'd managed this feat even as his lips curled in a reluctant smile. She was a V\u00e2rcolac and he knew they shared some of the magic the triumvirate used. He also knew she'd prettied up her room to send a great big 'fuck you' in his direction. He couldn't help but admire her determination even if he had no intention of letting her win the battle.\n\nHis gaze swung to the bed. Despite the darkness he could see her just as clearly as he could see the material. Lily lay curled on her side, her hair loose and partially covering her face. She'd kicked the top sheet off as if she'd been restless in her sleep and her soft curves were covered in a bright red silk camisole and panty set.\n\nIt was enough to send him to his knees. He couldn't breathe as his eyes ran slowly down her body, lingering on the swell of her breasts before moving down to areas he knew better than to dwell on. Need slammed his body hard and a groan ripped from his throat.\n\n\"Mac?\" Lily breathed sleepily, her head rising from pillow. She rubbed at her eyes, a gesture that made her appear younger than she was. \"What are you doing in my room?\" There was no irritation in her tone, just curiosity.\n\nMac let out a slow breath and walked to the bed. This was sheer insanity but he couldn't stop himself. He wanted to reach out and run his fingers slowly along the tempting curve of her bare leg. Instead, he held himself rigid as he stared down at her.\n\n\"I have to go away from a while,\" he answered, his voice coming out thick and husky. He watched a shiver run through her body even as she started to frown.\n\n\"I didn't take you for a coward, Mac. Running away doesn't seem like your style.\"\n\n\"It's work-related, Lily,\" he sighed, moving to sit on the side of the bed. Every instinct he possessed told him he should be running away from the temptress before him and yet here he was sitting on her bed. He should never have come into her room.\n\n\"I need to go to Scotland,\" he explained when she looked sceptical. \"I didn't want you to panic in the morning when you found me gone. While I'm away you have to stick close to Karn at all times. No going off on your own. Try to keep a minimum of three Praetorians around you. And don't you dare shadow. If I find out you've slipped the leash even once I'll make you pay for it when I get back.\"\n\nLily was wide-awake now, so completely conscious of Mac sitting on her bed. Her hormones were going haywire and desire was flooding her body. Despite Mac's stern words she could feel his tension, scent his arousal. He wanted her even though he was keeping himself in check.\n\nUnderneath all the emotions she sensed from him, though, the prevailing one was fear. She knew he feared for her safety, that he was leaving to protect her in some way. She didn't know what was going on and didn't want him to leave, but she also knew she couldn't stop him if he was determined to go. \n\nHe wasn't going to get away easily, though.\n\n\"I will promise not to shadow while you're away but I have one condition,\" she breathed softly, sitting up until her body was so close to his they were almost touching. She felt him stiffen but he didn't move away.\n\n\"Name your condition.\" His voice was so low and raspy she barely heard him.\n\n\"I want a kiss goodbye. Not a peck on the cheek or lips, Mac, but a proper kiss. Give me that and I'll give you my word.\"\n\nHe froze, his breath catching in his throat. She was so close all he had to do was lean forward and their lips would be touching. One kiss? He scoffed silently at the thought. He didn't trust himself to stop at one. She was just too tempting.\n\n\"Lily!\" It was a growled warning when he caught her looking at his mouth.\n\n\"Then I won't give you my word, Mac.\"\n\nAnger flared at the determination in her voice. He almost forced her to promise him, to dominate her as he'd done in the study, but the memory of her fear was too close to the surface and he knew he couldn't do that again. Not if he wanted to stay sane.\n\nHis eyes dropped to her lips. She sat so temptingly close to him. He could feel her breath caressing his face, feel the heat of her body. He wanted to kiss her just as badly as she wanted him. Surely he could stop at one kiss if he tried hard enough? \n\nMac found himself reaching for her, brushing the back of his fingers down the soft curve of a perfect cheekbone. Lily shivered and his fingers trailed down the side of her throat before moving to cradle the nape of her neck.\n\nGod, she was so soft, her bones so fragile beneath his large hand. His head bent and he closed the distance between them, brushing his lips against hers gently. The instant they touched, his hand tightened painfully hard on the back of her neck. Lily let out a soft whimper, her lips parting for him. Then he was really kissing her, slanting his mouth over hers, claiming her completely.\n\nThe sound she made went straight to his head; the softness of her mouth was a temptation he couldn't resist. She literally took his breath away, and fire raced through his veins as she moaned softly, her mouth hungry against his. Mac lost all conscious thought, was completely caught up in the moment and the exquisite taste of Lily's mouth. He groaned and dipped into her sweetness, sliding his tongue against hers in slow, languorous flicks. \n\nHis heart was racing, his body hard and aching with need as he wrapped his arms around her body and forgot that he was supposed to stop with one kiss. He dragged her onto his lap, desperate to feel her soft curves against him as he slid his hand against the sensuous material of her top. \n\nA warning was screaming in his mind but he ignored it, a deep growl erupting from his chest as he pulled Lily's body astride his and rocked his hips up to rub himself against the scalding heat that teased him through the tiniest silk panties he'd ever seen.\n\nThe kiss deepened and became more frantic as Lily writhed on his lap and tried to grind herself against him. Her small hands were in his hair, keeping his mouth to hers. His own hand had moved into the mass of luscious brown silky waves that rippled down her back and draped over his thighs. He clenched his fist in the heavy weight of her hair and kept her pinned against him.\n\nMac pushed into her damp heat as he pulled her down with his arm around her lower back. The desperate little sounds she was making had his head swimming, and liquid fire raced through his veins. He wanted to free himself and slide into her body, to lose himself in the scent and taste of her. He could smell her arousal, feel the dampness between her thighs. The way she rocked against him made it clear she was lost in the moment, desperate for the pleasure that was a heartbeat away. He wanted to give her that pleasure, wanted to watch her shudder and gasp as she let go and soared.\n\nThe voice in his head was becoming more urgent, screaming at him to stop, but the scent and taste of Lily was stronger, more demanding. He took her mouth over and over again in long, hot kisses, sweeping his tongue deep into her moistness, biting at her full lower lip with sharp little nips.\n\nLily was on fire. It was the only way to describe the sensations Mac was wreaking deep within her. His mouth was hot and dangerous, his hands hard and unyielding as he held her pinned to his body. She couldn't catch a breath, didn't want to because that would mean he'd take his mouth from hers.\n\nDesire rippled through her, a hot and heavy sensation that tightened her breasts to a painful ache and sent liquid heat flooding straight to the juncture of her thighs where she cradled the steely hardness of his body. \n\nShe strained to get closer, whimpering urgently. The feel of him so close to her most intimate place was heady and just as frustrating because she wanted -- no, she needed him inside desperately.\n\nHer wolf howled with glee, was frantic to claim her mate as Lily tried to pull his T-shirt from his jeans. She wanted to feel the touch of his bare skin beneath her hands. \n\nMac groaned loudly, sanity returning when Lily tried to take his clothes off. For a brief second he was tempted to let her and ignore the consequences but he knew he had to fight that temptation. His heart was pounding hard as he dragged his mouth away from her and pushed her off his lap onto the bed. He caught her hands in his, stilling her frantic grasping at his clothes.\n\n\"No,\" Lily whimpered, desperation in her eyes as she tried to get closer again. \"Don't stop, Mac. Please don't stop.\"\n\nHe kept himself still, fought the need to pull her back into his arms as his gaze raked over her flushed face. She was so fucking beautiful he was sure it would break him to deny her. Her mouth was swollen from his kisses, her chocolate eyes flecked liberally with golden swirls. \n\nHer breath was coming out in harsh pants, making her breasts strain against the fragile material covering her body. God, her scent had to be the most potent aphrodisiac he'd ever come across. Her entire body was hot with need, her nipples clearly outlined against the silk, almost begging his mouth to slide over the fabric and tease her mercilessly.\n\nMac fought his own need, suppressed the desperation he felt as his hands itched to pull her closer, to strip away her clothes and taste every inch of the soft flesh he would uncover.\n\n\"You said one kiss, Lily. That was slightly more than one kiss, but I held up my end of the bargain. Now give me your word that you won't shadow while I'm away.\" \n\nWas that really his voice? How could he sound so unemotional when his entire body was attuned to hers, when what was left of his shattered self-control was barely enough to stop him from completing what he'd started? He watched her face carefully and caught the fleeting emotions that raced across her beautiful features. It made him suck in a deep breath. \n\nMac's cold tone was like a bucket of ice being thrown over her. Lily stared at him, biting her bottom lip as the heat of passion began to fade and she was left with Mac in all his unemotional glory. \n\nHe'd seemed as caught up in the moment as she was; hell, she hadn't been thinking clearly but the way he'd responded to her made it clear that he'd wanted her as much as she'd wanted him. Now it was like he'd flicked a switch and just shut off the passion between them.\n\nHad he guessed at her inexperience? Was she just not tempting enough for him? Her reaction to his kiss has been instinctual and she'd burned up like a living flame. Even as he pushed her away she was still aching for him, her body strung out and desperate for completion. But Mac had just cooled off as if it was the easiest thing in the world to do. Maybe for him it was.\n\nLily could feel tears threatening and she fought to swallow them down. She wouldn't cry for him, wouldn't let him see how much it hurt that he could just walk away as if she didn't affect him. \"I promise,\" she finally said, amazed that her voice sounded so neutral when she felt as if she was dying inside.\n\nHe was silent for a long moment, his eyes trying to penetrate her soul. \"Why do you do that?\" he asked quietly. \n\nHis gaze was relentless and she wanted to look away, but looking away from Mac wasn't always the easiest thing to do. \"Do what?\" Her tone was sullen, colour creeping into her cheeks.\n\n\"Turn from a sensual, vibrant woman into a vulnerable young girl. You were so passionate just a moment ago and now you appear so young and unsure.\" There was more than a hint of confusion in his voice.\n\n\"Probably the same reason you turn from a passionate man into a cold, hard vampire, Mackenzie,\" she answered bitterly, unable to keep the thread of hurt out of her tone as she leaned away from him. \"I guess that's just the way we're both made. You got your promise. Just go now.\" The tears were getting closer to the surface, becoming harder to contain. She needed him to leave before she disgraced herself completely.\n\nMac could hear her voice quiver, could feel the pain she was trying so hard to conceal. He muttered a curse, knowing he'd hurt her again. Suspicion was starting to rear up inside him. He was probably crazy for even thinking it, but he needed to know if he was right.\n\n\"Lily, how much experience have you had with men?\"\n\nShe stiffened instantly and her cheeks flushed with colour. It was all the answer he needed and he cursed again, loudly this time. If he'd known, even suspected that she was so inexperienced he would never have touched her. 'Yeah right,' a little voice whispered in his head even as a part of him sat up and preened at the knowledge that no man had touched her before.\n\nIt was an insanely possessive reaction, but he couldn't help it even as he was astounded that she'd led so sheltered a life. His expression must have given something away because she flushed even more and stared down at the bed.",
        "\"You do know who my father is, don't you?\" she muttered defensively. \"How many males do you think were willing to take him on when it came to his only daughter? They were too frightened to even kiss me let alone do anything else.\"\n\nHis heart banged painfully in his chest and he reached out with a gentleness he didn't know he possessed, tilting her chin up so their eyes met. \"Was that your first kiss, sugar?\" It should have been a stupid question to be asking a woman of her age but her expressive eyes answered him eloquently.\n\nMac wanted to kick himself. The uncertainty he'd seen on her face when he'd broken off their kiss was now very understandable. He'd had to use all his self-control to restrain himself, digging deep inside to find the cold, ruthless edge he wore so easily. And Lily had thought it meant she was somehow lacking in her sensuality. He swore long and hard.\n\n\"Liliana,\" he breathed softly, cradling her face gently in his hands. \"You could tempt an angel to abandon heaven for one taste of your sweet lips. Never doubt yourself as a woman. I want you so badly it's only a lifetime of control that's stopping me from taking you right now. I know it's wrong to want you, to crave your taste and your touch. But still I crave you with everything inside me. If you believe nothing else I ever say to you always believe that.\"\n\nHe kissed her again, a soft gentle touch. He didn't want to incite her passionate nature, knew he would succumb if she melted into his arms again. His kiss was full of reassurance and tenderness, letting her know that she was a beautiful, sensual woman any man would give his right arm to be with.\n\nHe pulled away reluctantly to stare down at the woman who had somehow managed to reach inside him and find the hidden well of softer emotions he thought he'd lost centuries ago.\n\n\"I really need to leave, Lily,\" he finally sighed, resting his forehead against hers because he didn't want to let her go just yet. It felt so good to be with her like this, to feel her breath on his face and her warmth against him. \"Remember your promise. Do whatever Karn tells you.\"\n\nLily watched Mac stand up, feeling bereft when his hands left her. He confused the hell out of her and made her feel so insecure one moment and so protected the next. The short glimpses she'd seen of the softer side to her mate made her heart race hard in her chest, made her believe that she would be able to win him. But every time he retreated behind his walls, as he was doing now, she knew she'd have to start breaking them down all over again.\n\nHe walked out of the room without a backward glance and she swallowed hard, her fingers touching her swollen lips tentatively. A slow smile curved over her face and she lay back against her pillow. As first kisses went, Mac's were pretty spectacular whether they were hot, fiery, and passionate or gentle, slow and loving. \n\nHer wolf rumbled her approval and she stretched languidly on the bed. She was content with the progress she'd made in this first foray against Mac's heart. She'd proven he wasn't indifferent to her. He had told her that he wanted her. It was only a matter of time before she was in his bed. Once that happened, her mate would never be able to leave her again.\n\n* * * *\n\nMac leaned against the wall outside Lily's door and closed his eyes, wondering just exactly where he'd left his brain because he certainly wasn't using it today. He couldn't believe he'd been stupid enough to kiss her. He'd known it would be crazy to give in to the temptation and yet he'd gone and done it anyway.\n\nNow her taste was in his mouth, and his body craved the feel of her soft skin. Walking away from her had been sheer torture and all he could think of was going back inside the room and finishing what he'd started. He had to be completely out of his fucking mind to behave no better than an untried youth.\n\nBut she was Lily; so beautiful, so feisty and sassy, and so bloody vulnerable. He wanted to wrap his arms around her and protect her from the world. He had to remind himself that she wasn't his no matter what she thought. He couldn't be who he needed to be, couldn't do the things he needed to do if he allowed himself to be sidetracked by the woman on the other side of that door.\n\nHis body stiffened with tension and he opened his eyes to look down the hallway. Unsurprisingly, Karn stood at the head of the stairs looking as if he hadn't been to bed yet. His expression was neutral, but Mac could tell he was displeased about something.\n\nGrabbing his pack, Mac walked past Karn, ignoring his friend as he headed downstairs into the wrecked study. A minute later Karn entered too. Mac knew Karn would have checked on Lily before following him down. The fact that his friend had felt the need to check on her cut deep.\n\n\"I hope she wasn't in this room when you wrecked it,\" Karn said quietly, disapproval lacing his voice.\n\nMac shot him a quelling look and surveyed the room slowly. \"Make arrangements to clean this up,\" he answered coldly, not deigning to respond to Karn's comment. \"Pietro called and I have to go to Europe. I need to stop by Annie's before I head over there, so I'll stay at the apartment the rest of the night. I need to pick up a few things anyway.\"\n\n\"What do you want to do with Lily?\"\n\nMac moved to the fireplace to stare into the empty grate. \"She stays here, Karn. Make sure nothing happens to her. She's promised not to shadow while I'm away so protecting her should be easy enough. Pietro thinks something is about to happen and I need to check it out firsthand. I also need to let the triumvirate know.\"\n\nKarn watched him for a moment, feeling a mix of anticipation and concern. It was only a matter of time before their unknown enemies struck again and part of him was itching to pit his wits against them. The rest of him was trying to work out how to keep the V\u00e2rcolac safe.\n\n\"I'll keep her safe from the vampires,\" he finally answered. \"But what's to protect her from you, Mac? I don't know what the fuck happened in here earlier or what you were doing just now in her room, but she needs to be fully focused on the here and now. She can't afford to have her head up her ass because you're fucking with her mind.\"\n\nHe watched his friend tense and waited for him to explode. Mackenzie didn't always like hearing the truth and tended to lash out first and think later. He was prepared to get his ass handed to him on a plate, but his friend obviously dug deep and managed to restrain himself.\n\n\"Your point is duly noted,\" Mac answered in a cold voice. \"I won't be around so she'll be focused on what she needs to be doing. I've told her to listen to you and she respects you anyway so her focus shouldn't be a problem.\"\n\nHe turned to pierce Karn with a cold stare. \"I appreciate your concern, my friend, but tread carefully. What goes on between Lily and I is not your concern. I strongly suggest you remember that.\"\n\nKarn knew it was pointless to argue with Mac when he had that look on his face. He was right on the very edge of his self-control and it wouldn't take much to tip him over. He wisely kept his mouth shut.\n\n\"I had the apartment cleaned up earlier,\" he told his friend, changing the subject. \"It stinks of cleaner and you need a new carpet but I've managed to find a rug to hide the worst of the damage.\"\n\nMac nodded almost absentmindedly and then let out a long sigh. He rubbed his hand tiredly over his face. \"How the fuck did everything go tits up, Karn?\" He couldn't keep the weariness out of his voice. It was a sign of the trust he placed in Karn that he lowered some of his carefully constructed barriers when he was alone with the other man.\n\nHis friend gave him a rueful smile. \"That's women for you. Why do you think I stay as far away from them as possible, Mac? Let them get anywhere near you and before you know it, you're thinking with your cock instead of your head and all hell breaks loose. I'm stuck between pitying you and wanting to kick the shit out of you if you hurt her.\"\n\nMac couldn't stop the snort of laughter that escaped him. Give Karn an inch and he took a mile. Hell, he took two. He eyed his friend speculatively, trying to work out just when their relationship had changed. \n\nThey'd known each other for over a century, had worked together on some of the more taxing assignments Mac had undertaken. He respected the other man immensely for his skills and his dedication to his tasks, but at some point in the last few decades their relationship had changed. He'd started thinking of Karn more as a friend and not just a colleague. He'd come to trust him.\n\nIt was a disconcerting thought. Since he'd met the triumvirate, he was starting to trust more people, letting them into his life, allowing them to matter to him. Was that why Lily had slipped through his defences so easily? Just thinking about her was enough to send his blood pressure sky high. He took a deep breath. He really needed to get away.\n\n\"Keep her safe, Karn,\" he ordered softly, his tone resolute. \"If anything happens to her while I'm away...\"\n\n\"You don't need to threaten to kill me,\" Karn snorted, rolling his eyes. \"If anything were to happen to her then I would already be dead, Mac, and you know that.\"\n\nHe did know that. It was the only reason he was willing to leave Lily's side. Why he'd even opened his mouth he had no idea. Was he really so far gone that he needed Karn's reassurance? The situation was becoming intolerable. He couldn't afford to have his thought processes muddled. The threat to the V\u00e2rcolac was becoming more dangerous and he had to get himself under control as soon as possible. Now was not the time to become unfocused.\n\nHe nodded to Karn and headed out of the house to the waiting Jeep. Dawn wasn't far off but it was still too early to go and see Annie. He headed to his apartment, not surprised when he did not encounter another soul in the building upon his arrival. Anyone with half a brain would be tucked in bed fast asleep. \n\nAs he let himself into the apartment, Mac wondered if he'd ever get a full night's sleep again. He'd had precious few hours of sleep since Lily had crashed into his life. Something told him this was about to become the norm for him rather than the exception. He surveyed the apartment, finding the expected scent of the cleaner and the underlying trace of blood.\n\nHe tried not to inhale too deeply but couldn't stop himself. Lily's 'scent' of nutmeg still hung in the air and he stifled a groan, trying not to imagine her here in his private space. Karn was right. It had been insanity to bring her here, to the very place he used to satisfy his sexual needs and his blood lust. It had been disrespectful, especially when he knew she considered him her mate.\n\nBut it was done and if nothing else, her reaction had highlighted the issues she had with her control of her abilities and her wolf. If something good came out of it then they'd both just have to learn to live with his insensitivity. \n\nHe spent the remainder of the night and early morning hours reviewing the data Pietro sent to his cell phone, trying to work out how best to tackle things once he got to Scotland. When the clock hit nine o'clock, he gathered his gear and headed back outside. It was time to have a chat with Annie and find out just what the hell she was playing at leaving Lily in his care.\n\n* * * *\n\nRhianna smiled, her head turning to the front door as she felt her guest's approach. It was so unusual for him to visit her at home that for a moment she genuinely felt surprised -- a feat very few managed to accomplish.\n\n\"The door's open, so just come right in,\" she called out, her smile widening when she heard his footsteps falter on the steps for a second before the door swung open to reveal Kallum Romanov.\n\n\"How do you do that?\" Kallum laughed, shaking his head ruefully as he closed the door and leaned down to give the petite redhead a kiss on the cheek.\n\n\"Magic,\" she laughed, giving him an affectionate hug. She loved all the V\u00e2rcolac as if they were her own and loved to spend time with them. She usually had to visit the pack to see them, but today one of them had actually come to see her.\n\n\"Should I guess why you're here?\" she smiled, leading the way to the living room with Kallum close on her heels.\n\n\"Lily sent me,\" he admitted with a smile. \"Said I was to mention Mac to you and you would fill me in on where she is.\"\n\nRhianna stiffened noticeably then let out a slow breath. She turned to give him a long, measuring look. The V\u00e2rcolac had been children and in need of protection when she'd first set up the Praetorians. Back then, it had been a simple matter to keep their charges ignorant of the threat whilst ensuring they were never left unguarded. \n\nIt had worked for almost twenty-five years. What none of them had factored into the equation was the way the children's skills had advanced so dramatically as they had grown up. It was plainly obvious now that the children, if trained properly, would outstrip their guardians when it came to protecting themselves.\n\nShe should have seen it coming, should have realised that they needed to reassess the situation once their charges became adults. With the benefit of hindsight, she could see that the triumvirate and the pack had created an untenable situation for Lily by failing to act earlier. \n\nRhianna couldn't blame the girl for fleeing everyone she loved if that was the only way she'd have a chance to discover who she was as a person. And Lily was not alone. Some of the other children clearly exhibited character traits that indicated they'd have a hard time adapting to the real world and coping with their abilities.\n\nThankfully, Rhianna knew Kallum wouldn't have any issues. The young man was every inch the Alpha, and reminded her of her brother Rafe in some ways. He had a slightly more ruthless streak, though, which he kept strictly controlled. There was no doubt in her mind that the young man standing before her could more than adequately take care of himself and all those he considered part of his pack.\n\nSo now she had to decide just how much she was going to share with him. She was almost certain that she would tell Kallum everything, even though Caleb would be furious once he learned that she had not only concealed Lily's whereabouts, but she'd also made the unilateral decision to reveal everything without consulting him first.\n\n\"First Lily and now you,\" she smiled ruefully. \"Caleb is not going to be very happy with me, Kal.\"\n\nKallum frowned slightly, disbelief on his handsome face. \"I can't imagine Caleb ever being unhappy with you, Annie. He adores you.\"\n\nShe laughed softly. \"Believe me, I frustrate the hell out of him very easily. Thankfully he doesn't stay mad long.\"\n\nHe stared at her for a long moment before speaking. He knew Caleb worshipped the ground Annie walked on, would do anything for her. Lily had to be involved in something pretty big for Annie to be so certain that Caleb would be angry with her.\n\nIf there was some way he could get the information he needed without causing any dissent between the couple, he would take it. But Annie was his only link to Lily now, and he needed to track his sister down and make sure she was okay. Her voice had been filled with panic when she'd yelled at him, and their father's news of her distress was worrying. He knew Lily needed to have someone she trusted unconditionally at her side. He wasn't about to leave her all alone and afraid.\n\n\"Lila needs me, Annie. She thinks she's so tough and can handle anything but she isn't. She reached out to Dad yesterday, and told him she was a monster. Something has scared her so much that she talked to Dad even though she knew he would be furious with her.\"\n\nKallum's words brought a frown to Rhianna's face and a sense of unease. Surely Lily would have contacted her if something was wrong? Lily knew she'd come to her if needed. \n\n\"She was fine when I saw her, Kallum. In fact, she was more than fine; she was ready to lead Mac in a merry dance. I would have loved to stay and watch the fireworks, but Caleb would have come looking for me and if he'd found her, he would have sent her home to the pack.\"\n\nShe watched Kal's frown deepen before he sat in one of the large leather armchairs close to the fire. She followed and took the seat across from him. \"Maybe Mac is fighting the mating pull,\" she murmured quietly.\n\nThe instant she thought of Mac, she could sense he was close. Her head shot up and she narrowed her eyes at Kallum. \"Did you shadow yourself before leaving the pack?\" she asked suspiciously.\n\nMac was almost at the door. He would not be approaching the house if any of the Praetorians were stationed nearby, not when they made a point of keeping themselves hidden from their charges. Kallum's unrepentant look gave her all the answer she needed and she bit down a curse.\n\n\"Caleb, love, I think it might be best if you come home. There's a bit of a situation developing.\" She felt her mate's immediate concern, followed by a quick kiss running down their mating bond. Her own mental tone had made it obvious she did not feel threatened.\n\n\"What have you gone and done now, my Annie?\" Caleb's rich, deep voice was laced with exasperation as it echoed in her head. \"I'm not going to like it, am I?\"\n\nRhianna's lips quirked in a small smile and she shivered slightly at his tone. \"Probably not, love,\" she laughed.\n\n\"I'm on my way.\"\n\nCaleb disappeared from her head a second before the front door opened and Mac stepped into the house. Kallum had obviously sensed his approach as well, because he shadowed himself just before Mac walked straight into the room. Until Caleb arrived it was probably best for him to remain hidden.\n\n\"Mackenzie! I wasn't expecting you today,\" Rhianna said smoothly, rising to greet her additional guest. She saw a flash of irritation in his dark eyes before he quickly masked it. She sighed as she surmised that Lily's secret was out.\n\n\"And here I was thinking you're some kind of oracle, Annie,\" he drawled softly before he bent to brush his lips against the top of her hair. \"Or did you think I wouldn't find out about Liliana Romanov so quickly?\"\n\nHe watched her face intently, searching for some sign of remorse. Her light laughter raised his hackles and he frowned down at her in disapproval.\n\n\"It's not funny, Annie. You must know what a nightmare this is? Andrei will not be happy to learn that his little girl has flown the nest and become a bloody Praetorian. You know he'll personally come in and disband the lot of us... permanently. How could you leave us in this mess? What were you thinking?\"\n\n\"I was thinking how remarkable Lily is that she managed to learn about the Praetorians, breach our defences, and become part of the elite team we had created to protect the V\u00e2rcolac.\" She couched her words to ensure that Kallum gleaned as much information as possible through their conversation. \n\nMac's frustrated snort was a testament to how annoyed he was. His hands raked through his hair as he glared down at the unrepentant woman in front of him. She might be his queen but he could quite cheerfully shake her right this moment.\n\n\"I suggest you take a few steps back, Mackenzie,\" Caleb Cullen said coldly from the doorway, his eyes fixed on the vampire standing so close to his mate. He didn't bother trying to hide his anger, his body tense as his eyes briefly flickered over Kallum before coming to rest on his mate.\n\nRhianna's heart skipped a beat as she read the raw fury burning in his amber gaze. He was magnificent when angry, a golden avenging angel full of raw power. Even dressed in a dark grey business suit he looked wild and untamed. Her vampire was the epitome of an Alpha male: big and dominant... and right now very, very displeased with her.\n",
        "She could see him trying to rein in his fury at Kallum's presence. He could tell that Mac had no idea one of the V\u00e2rcolac was sitting right there, but it didn't alleviate his building rage.\n\nHe strode into the room, his footsteps taking him right up to her. The hands that reached for her upper arms were gentle despite the raging emotions surging down their bond. His head bent slowly, his eyes intense as he rubbed his lips gently against hers. \n\n\"I don't quite know why Mac wants to strangle you, Rhianna, but I can understand the sentiment. There had better be a very good reason for this because I am sorely struggling to rein my temper in.\"\n\nHis use of her given name was always a bad sign. He only used it when he was seriously pissed at her. She smiled gently and stepped into his embrace, knowing he wouldn't be able to stop himself from wrapping his arms around her.\n\n\"We have a bit of a problem with the Praetorians or I suppose I should say the V\u00e2rcolac,\" she admitted feeling the tension in his big body. \"Lily knows about them as does Kallum now. There's no point in trying to maintain secrecy any longer which is why I wanted you to come home. We need to work out what we're going to do about it.\"\n\nCaleb's body stiffened further and his arms tightened so much she almost gasped at the pressure he was applying. He appeared to notice and relaxed his hold, glancing down at her in apology.\n\n\"There's no way we can do damage control?\" He had to ask even though he knew whatever was going on was probably beyond that. He kissed Rhianna's forehead, running a hand slowly down her back. Despite her brave little smile and the defiant tilt of her chin he knew she was worried about his reaction to the news.\n\nHe sighed wearily as he read the answer in her lavender eyes and then his lips quirked in a reluctant smile. Yelling at his woman was pointless. She would only yell back or smile at him until he'd vented his displeasure and succumbed to her charms. If there was no way to contain the situation then he'd be better off finding out just exactly what the situation was.\n\nHe tilted his head slightly to catch Kallum's eye. \"You might as well reveal your presence. There's no arguing with my woman when she makes her mind up about something and she appears hell-bent on this course of action.\"\n\nMac immediately stiffened, turning to gaze at the empty chair. His eyes narrowed and he bit back a curse as a large, brown-haired man suddenly appeared. Brown eyes met his, wary but also full of curiosity. He'd seen those eyes before, only they belonged to someone else. \n\nThe spicy scent of sandalwood with the barest hint of lilac on the edges had him stiffening further as he realised who the mystery guest was. His eyes darted to Rhianna and he growled low in his throat.\n\n\"You have got to be fucking kidding me,\" he ground out through clenched teeth. \"There are no Praetorians out there, Annie, which means he's as bloody reckless as his sister. How the fuck are we supposed to protect the V\u00e2rcolac if they all start shadowing themselves and running around on their own?\"\n\nKallum rose slowly to scrutinise the man his sister had chosen as her mate. It was more than evident the vampire was deadly, a large, well-honed fighting machine. It was also evident he had a temper to match their father's, which would most likely make for some pretty explosive moments with Lily.\n\nObviously the Praetorians were an elite group, as Annie had mentioned, tasked with protecting the hybrid children as they grew up. It didn't take a genius to work out that there had to be some reason that protection had been required, something none of them knew about. The scent masking, no-shadowing rules when leaving the pack sort of made sense now.\n\nHe wanted to learn a bit more about his sister's mate, to make sure he was good enough for her, but something told him that it wouldn't matter to Lily whether or not he liked the man. She would prefer it if he did but she wouldn't allow it to affect her decision about mating with him. He shuddered at the thought of her bringing Mac home to meet their father.\n\nHe kept his gaze locked with eyes so black they were bottomless pits. He had a sense that Mac was waiting for something to happen, for him to do something. When he didn't drop his gaze, the vampire's mouth twitched ever so slightly, almost reluctantly.\n\n\"Might have known he'd be as bad as she is,\" he muttered irritably. \n\n\"Actually, Lila's a lot worse than I am,\" Kallum corrected. \"I take it she's inveigled herself into your little band of protectors and that's what's causing all the consternation? God, that is just so like Lily. How did she manage to do it? Surely there are checks in place or something when recruiting?\"\n\nMac's eyes tracked back to Annie and he gave her a pointed look. Caleb's eyes also dropped to his mate and he growled loudly.\n\n\"Tell me you know nothing about this,\" he bit out.\n\nRhianna grinned sheepishly up at him. \"I knew nothing about it until a couple of days ago when Mac called me to check the new recruits. Lily assured me she was okay and she appeared happy where she was. She didn't want to return to the pack and I saw no harm in leaving her with the Praetorians. They are her protectors after all.\"\n\n\"Rhianna, you know the pack have been going insane trying to find her,\" Caleb bit out, his voice starting to rise as his temper flared again. \"You know Andrei has been at the killing edge for weeks now. How could you keep this quiet? We talked about this. We agreed that the sooner we found Lily and got her safely home the better.\"\n\n\"No, you decreed that Lily should be brought back to the pack and locked up for her own good,\" she countered quietly. \"I just didn't argue with you about it. It was more than evident as you, Andrei, and Alexei all sat around plotting the poor woman's incarceration that there would be no reasoning with any of you. I didn't agree with you, Caleb. I just didn't disagree with you.\"\n\nCaleb stared down at her for a long moment, then his arms dropped away and he stalked over to the other end of the room. He turned, his eyes almost black with anger when he pinned her with his gaze once more. \"Don't you bloody argue semantics with me, woman. The very fact you didn't disagree implied that we had your agreement and you know it.\"\n\nRhianna took a deep breath to quell her own burgeoning temper and met his gaze unflinchingly. \"You only hear what you want to hear sometimes, Caleb. I've learnt when it's pointless arguing with you. You knew very well that I disagreed with your decision, which was why you never actually asked me outright. You avoided it because you didn't want to get into an argument over it. But all this is rather a moot point anyway. Lily joined the Praetorians and I didn't give her up to Mac when I approved the recruits.\"\n\nHer tone quite clearly dared him to deny her accusation. It also left the room in no doubt that she was quite finished with the topic and wouldn't be drawn into any more arguments about it. Caleb glared at her furiously, opened his mouth to speak, and then growled as he clamped his lips closed.\n\nHe wanted to call her a liar, wanted to be the one in the right, but as he cast his mind back a few weeks he could see that she hadn't once agreed with him and the twins. She'd been present in the room and he'd felt her disapproval down their mate bond. And that was why he hadn't asked her if they were doing the right thing. He hadn't wanted her to tell him no.\n\n\"You should have opened your mouth at the time,\" he finally muttered, his unhappiness still very evident.\n\nRhianna sighed deeply. \"Andrei wasn't willing to hear it and quite frankly keeping him in check was more important at that point. I should have said something afterwards but you were all so certain you were in the right that it seemed pointless trying to get you all to see reason.\"\n\nShe crossed the room to her mate, stopping just before him. Her eyes raked over his face, watching him struggle to calm his annoyance at her. She hated arguing with Caleb and was thankful they didn't do it very often. But she wasn't about to apologise for the decision she'd made, not in this instance. Lily had needed freedom and she didn't regret allowing her that freedom. \n\n\"Caleb, you're almost as blinkered as Andrei on this point,\" she finally sighed softly. \"Maybe it's a male thing, but for some strange reason none of you seem to have realised that the V\u00e2rcolac are no longer children. They're fully grown adults who are quite capable of making their own decisions and going out into the world to find their mates. \n\n\"We have no right to restrict their movements, to damage their spirits by denying them that. Yes, we can love them and want to protect them but we have to allow them to live their lives. We can't cage them or confine them to pack lands because we're frightened something may happen to them. That's just wrong and you know it.\"\n\n\"In more ways than one,\" Mac reluctantly agreed. Everyone turned to look at him and he sighed in resignation. \"Annie does have a point, Caleb. Lily can fight like a professional -- hell, she blooded me when we were sparring. She's smart, fast, and utterly lethal when she's in fight mode. But when it comes to interacting with others she struggles with her emotions. \n\n\"She's fine when everything is going well and she's feeling confident but the moment things don't go to plan she reacts in one of two ways. She either loses all confidence in herself or she reacts so negatively she turns violent.\"\n\nKallum growled softly, his body tensing. \"Lily isn't violent,\" he argued, anger creeping into his voice. \"Yes, she's a bit on the wild side but she'd never deliberately hurt someone, not in anger.\"\n\nMac turned to spear him with a cold stare. \"Tell that to Karn. She lost control of her wolf yesterday because she was upset about something and she ripped out part of his throat. He's lucky she regained enough control otherwise he'd be dead now. He's been her main protector all her life. He wouldn't lift a hand to defend himself against her.\"\n\nRhianna let out a startled gasp and Caleb's arms automatically gathered her close, comforting his mate even as shock rippled through him.\n\nKallum continued to glare at Mac for a moment longer before his eyes softened and concern etched across his face. \"That's why she contacted Dad and told him she was a monster,\" he breathed quietly. His heart ached for his sister. He knew her so well, could guess at the awful guilt she would have felt over her actions.\n\nThe room was silent as Mac's words hung heavy in the air. Caleb held Rhianna close, running soothing fingers through her riot of red curls as her distress flooded over him.\n\n\"You're right, Annie,\" he finally conceded. \"We all should have seen this coming. There's been way too much testosterone in play. We've all let the children down.\"\n\n\"Not deliberately,\" Rhianna answered with a sad smile. \"We've been working blind for the most part. Rayne came to us as an Ancient. Any issues she may have had to overcome as she grew up she handled on her own. None of us really knew what to expect. And it's not as if major harm has been done either. We just need a new plan of action going forward.\"\n\nMac had more information to impart and the news wasn't going to be very welcome. \"The timing sucks,\" he announced bluntly. He glanced at Kallum then looked pointedly at the others.\n\n\"Whatever it is, Kallum can hear it,\" Caleb said, motioning for everyone to take a seat. \n\nMac chose the sofa closest to him and Caleb manoeuvred Annie over to the sofa across Mac. Mac's eyebrows rose when Kallum chose to sit beside him but he continued with his news without saying anything about it.\n\n\"Pietro called and said there was activity over in Europe. He's fairly certain he's about to get access to whatever is going on over there. I fly out to Scotland this afternoon. I want a firsthand feel for the situation.\"\n\nCaleb's lips tightened and he looked at Kallum. \"There was an attack on the compound a quarter of a century ago,\" he explained. \"Freya and Dayton were surprised by vampires. They didn't get anywhere near the pack but an investigation into the attack led us to believe that someone was trying to harm the V\u00e2rcolac. Pack security was enhanced and we set up the Praetorians to protect you. \n\n\"The attack came from our European brethren and Pietro has been there ever since trying to infiltrate the group so we can take it out. Until now there haven't been any further incursions.\"\n\nKallum quickly digested the information. Everything about their sheltered lives and growing up in the pack suddenly made sense. \"So whoever is after us probably thinks we've grown complacent and now would be a good time to have a second attempt at harming us.\"\n\nHe felt a bubble of fury begin to well up inside him and he fought to push it down. There was no point getting angry about the problem. He needed a clear head to protect his people. Sensing Mac's eyes on him he turned his head to meet the vampire's gaze. He was slightly surprised to see approval in the other man's eyes.\n\nMac was impressed by how quickly Kallum had interpreted the situation. He didn't ask any unnecessary questions, just got straight to heart of the matter. He examined the V\u00e2rcolac carefully, trying to get a feel for just who Kallum Romanov was as a man. \n\nHe was important to Lily and he knew she would be unhappy if he didn't find some common ground with her brother. He also had the impression that Kallum was equally trying to size him up too. Had Lily told her brother that she thought he was her mate? So far that little gem hadn't come up in the conversation and Mac would prefer if it didn't.\n\nHe turned back to Caleb and Annie. \"So where does this leave us?\" He blinked slowly when Kallum answered him.\n\n\"Everyone has underestimated just who and what the V\u00e2rcolac are,\" Kallum said firmly. \"Everyone is so hell-bent on protecting us that you appear to have forgotten just what we're capable of. Mac said himself that Lily was a lethal fighter. I can tell you right now that she would have been curbing her skills in any sparring matches she's undertaken. If she was trying to pass as a full vampire, and a reasonably young one at that, then she'd have no option but to hide her true abilities.\"\n\n\"Yes, you've have extensive training, Kal,\" Caleb agreed though his tone was slightly doubtful. \"Gard has done his best to ensure you can handle yourselves in emergency situations until backup arrives. But it's an entirely different thing when you're being assaulted by a group of experienced fighters out in the real world.\"\n\nRhianna kept her eyes on Kallum's face, noting the way his lips tightened in displeasure. She let out a slow breath, the sound drawing his gaze to hers. His lips quirked into a smile and she felt herself answering him with a smile of her own as realisation dawned on her.\n\n\"How much have you all been hiding from us?\"\n\nHe shrugged nonchalantly. \"It varies depending on skill level. I'd say the majority of us probably train at about eighty percent. Me, personally, I dial it down to about seventy percent, Lily about seventy-five. I'm not entirely sure about Kothari because he only does the basic training. I think he's hiding a lot of his power from all of us. \n\n\"The same goes for Liam. He's so empathic he doesn't want to fight but he knows he has to be able to defend himself. I think he's got a lot in reserves. It's almost as if he's afraid of what he's capable of...\" Kallum trailed off to give the people in the room time to process his admission.\n\nThey'd never made a conscious decision to hide their abilities from their pack; it had just sort of happened. When it had become so obvious that they were outstripping their teachers at such a young age, they'd become concerned that their friends and family would start to fear them. \n\nWithout discussion, they'd all started training that little bit under their skill level until it became the norm for them. The only time they trained at their full abilities was when they were alone and sparring against each other.\n\nRhianna wondered why she wasn't overly surprised by the news. She could sense Caleb's consternation through their bond. He didn't say anything though. He appeared to be content to let her decide how to deal with the situation.\n\n\"Does that include whatever magical abilities you have?\" she finally asked.\n\nKallum frowned and shook his head. \"That's the one area we've still not managed to break through yet. We can all do the small things that Rayne does but no one's exhibited anything more enhanced than that. Lily can create things other than clothes when she shifts, mostly jewellery and girlie trinkets. She's certain she's got untapped power deep inside. She believes she can create things that don't necessarily relate to her body, though she hasn't been able to so far.\"\n\n\"Why is this the first time we're hearing about all this, Kallum?\" There was disapproval in Caleb's tone. He wasn't happy that they'd all been kept in the dark.\n\nThe younger man met his gaze steadily. There was no apology in his eyes. \"Nobody wanted to listen to us, Caleb. You were all too busy telling us what to do and how to do it. I know it was done out of love and concern but you guys dropped the ball big time. You left us with no choice but to rely on ourselves.\"\n\nMore silence filled the room and it was Mac who eventually broke it. \"So basically, Kallum's saying that the Praetorians are a waste of time and the V\u00e2rcolac could run rings around us when it comes to protecting themselves?\"\n\n\"On the contrary, I think the Praetorians are completely necessary,\" Kallum countered. \"When we were younger, we needed the protection you gave us. Any new children born will be in dire need of that same protection as they grow into their skills. \n\n\"Lily's problems highlight that we still need you, just in a different way. We need to train with you, learn what issues we have as individuals and work to correct any problems which may crop up. Everyone just needs to stop treating us like we're incapable of protecting ourselves and let us train properly.\"\n\nHis gaze left Mac's and turned to Rhianna. She wasn't one to hide her emotions and he could clearly see the distress in her eyes. He hadn't meant to make her feel bad. Learning about Lily's anguish had just been the last straw. The situation was no one person's fault. They had all failed to communicate properly.\n\n\"No one's angry, Annie,\" he said soothingly, giving her his usual lopsided grin. \"We love our families and our pack. We know you love us too. It's a relief to finally be taken seriously and tell you about this. I've wanted to for a long time, and until Lily ran away there really wasn't a compelling reason to break the silence.\"\n\n\"I feel like we've failed you, Kal,\" Rhianna whispered, her voice trembling slightly. \"How could I have gotten this so wrong?\"\n\nHe moved to kneel before her, taking her hands gently in his. He was just like everyone else; he couldn't bear to see her so upset. \"You didn't fail us, Annie. All you've ever done is love and protect us. We just need a different kind of guidance now. I should have told you sooner. I'm sorry I didn't.\"\n\nHe squeezed her hands gently, his eyes turning to Caleb to see his reaction. The Ancient didn't like it when his mate was upset. He couldn't read Caleb's expression though his hand was stroking gently through Rhianna's curls.\n\nCaleb nodded to Kallum, silently urging him to return to his seat. They'd learned so much in this meeting, and it was a lot to take in. He gathered Rhianna against his side and brushed his lips soothingly against her hair as he sensed her distress starting to subside.\n\n\"You really think your presence is required in Scotland?\" he finally asked Mac.\n\n\"I'm concerned that Pietro's cover could be blown if we're wrong and someone close to the Council is actually involved in this plot. I know he's not technically a Praetorian in the real sense but I class him as one of mine. I don't leave one of my team hanging out on a limb with no backup, Caleb.\"",
        "The Ancient couldn't fault his logic. He wasn't willing to lose Pietro either should there be a spy hidden among them. \"And you're content to leave Karn in charge?\"\n\n\"I wouldn't leave Lily if I didn't trust Karn completely,\" Mac answered. His voice rang with certainty.\n\nCaleb nodded again and turned to look at Rhianna. \"How do you want to play this, Annie?\" He could make the decisions himself but he knew she was feeling uncertain because of the recent revelations. She needed to be doing something to address the mistakes they'd made.\n\nInstead of answering, Rhianna glanced at Kallum. He met her gaze, smiling as he did so. \"What do you think, Kal?\"\n\nHis smile broadened and he relaxed back on the sofa. It was only then that the others realised he'd been tense, as if waiting for something.\n\n\"If Mac's going to be out of the country, then Lily needs someone she trusts close to her,\" he answered instantly. \"Mom's managed to get through to Dad somewhat but I think it's too soon for Lily to come home and face him. \n\n\"I'm sure this Karn is a reliable person otherwise he wouldn't be Mac's second-in-command, but he's not family and she's already lost control once when he's been her companion. She needs someone she can't dominate, someone who will kick her ass if she's about to lose it. If that person can't be one of our parents then I guess that only leaves me.\"\n\n\"And just how are we going to explain you to the Praetorians?\" Mac growled softly. He knew what Kallum said made sense, but he still didn't like hearing Kallum say he was ready to kick Lily's ass, even if she may need to be kept in line until he returned. He ignored the possessiveness that was shifting through him like a whirlwind when he thought of Lily.\n\n\"That's the point I've been trying to make,\" Kallum retorted, a hint of steel in his voice. \"You don't explain me, just as you don't explain Lily or any of the others. The time for secrecy is past. The V\u00e2rcolac aren't hiding any more, Mac. We're joining the Praetorians.\"\n\nTo be continued... "
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "werewolves",
        "hybrids",
        "love",
        "mates",
        "paranormal romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/hearts-of-warriors-ch-06"
}