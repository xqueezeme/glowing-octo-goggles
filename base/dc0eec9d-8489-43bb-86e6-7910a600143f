{
    "title": "Bah Humbug",
    "pages": [
        "Ben wasn't sure if he had heard the first knock on the door as he was concentrating so hard on what he was doing. It was probably only the second knock which penetrated his thoughts, making him sit back and sigh in frustration. Shit, he thought, I don't need this interruption. His research paper was due in a few weeks and he needed to focus on it. He pushed back the chair from the table and with a frown on his face, walked to the front door. As he passed the hall window, he saw the long predicted rain had arrived. It was already mixed with sleet, and snow was forecast later on. He opened the door coming face to face with a bedraggled figure. It was a young door-to-door seller carrying a plastic box full of domestic bits and pieces. He had seen them before, boys or girls trying to make some money by knocking on doors to sell cheap dusters and scissors for twice their real price.\n\nBefore he could say anything, the figure in front of him waved a laminated card under his nose saying, 'I'm not a criminal, I'm only trying to make some money. Will you buy something from me? I need money for the hostel tonight.' It was a litany he had heard before, and he was going to say no, when he noticed how wet the figure was. He put his glasses on, thinking it was a boy, although with a baggy anorak and a hoodie over the head, it wasn't easy to tell. Whoever it was looked soaked to the skin and exhausted. Ben was afraid the boy was going to collapse on the doorstep.\n\n'Are you alright?' Ben asked.\n\n'Yeah, I'm OK, but will you buy something, please?' Ben heard despair in the voice.\n\nThe figure staggered a little under the weight of the box and Ben's hands went out instinctively to try to catch him before he fell. The boy didn't look very old, and the wet hoodie and jeans didn't conceal how thin he was. Ben knew he should send him on his way, but he couldn't make him go back out in this weather in this state.\n\n'Look, you're cold and soaked through. This weather isn't going to ease up. Come in and dry off. I'll make you a cup of tea or something. It's freezing out here.' Ben already felt the cold seeping through his own shirt.\n\nThe figure looked up and Ben thought he'd made a mistake. By the shape of the face and the eyes it might be a girl under the hoodie. Ben supposed he, or she, was trying to work out if he was a serial killer preying on young door-to-door salespeople. The primal need to be warm and dry seemed to overcome any reservations, 'If I can come in for a few minutes, maybe have a tea?' The voice was quiet and Ben still wasn't able to tell if it was a boy or girl. He opened the door wide to let the figure past.\n\n***\n\nShe had reached the end of her tether by the time she knocked on the door of the cottage. It was the last one in the lane before the countryside began. She didn't hold out much hope of a sale. The people in these types of houses were more likely to call the police than buy anything from her. When the young guy opened the door, a frown on his face and glasses dangling from his fingers, she launched into her spiel. Experience had taught her to say it quickly before they had a chance to say no. She thought he was going to send her on her way, but he took a second glance at her, even put his glasses on, then made the offer for her to come inside for a tea. She hesitated, life had taught her to be wary about offers like this. But, she was soaking wet, cold and hungry. The thought of getting dry was enough to overcome her reservations. When he moved aside to let her in, she stepped inside, her senses alert for anything that looked off.\n\nHe told her to keep going straight, the kitchen was at the end of the corridor. He closed the front door following her in. Her cheap anorak and hoodie were so wet through they were dripping on the kitchen floor as she stood there clasping the box tightly as if she feared he would steal it.\n\n'Put your box on the floor, it won't hurt the tiles,' he said.\n\nShe cautiously lowered the box to the floor, her eyes trying to take everything in. It was a bright country kitchen with wooden cabinets, pottery jugs and flowery curtains. She felt a sudden pang as it made her think of her mother, back in the days when they were still talking.\n\n'Sit down. Here, use this chair.' He pulled a wooden backed chair towards the table and she sat down, feeling the exhaustion sweep over her. She knew she shouldn't stay, but the chance to get dry and have a cup of tea was too strong to pass up. He was filling the kettle, glancing over to her. She looked at him properly for the first time, thinking he looked OK, a bit nerdy, younger than she had first thought. He flicked the switch on the kettle before walking across to her.\n\n'Hi, I'm Ben,' he said, holding out his hand. She was so surprised she shook the outstretched hand.\n\n'Oh, you're so wet. Hang on, let me get you a towel to dry yourself.' He opened a door, through which she glimpsed a washing machine and a pile of laundry on a work top. He came back with a towel and she took it gratefully, wiping her hands and face before starting to dry her hair.\n\n'Sorry, is it OK if I dry my hair on it?'\n\n'Yes, yes, of course, there are plenty more towels. Is tea OK? I mean there's coffee too, if you prefer?'\n\nShe wondered if she was dreaming. She never got asked in for tea, let alone whether she preferred coffee.\n\n'No, tea's good, thanks.' 'Milk, sugar?' he called across. 'Milk, two sugars.'\n\n***\n\nHe was now sure it was a girl, but she looked so androgynous that he forgave himself his mistake of thinking it was a boy. She had taken the hoodie off, her long hair soaking wet hair hung in curls down to her shoulders. Her face was devoid of makeup making her look boyish, he thought. He tried to place her accent. Somewhere up North, Manchester maybe, he thought, definitely not Birmingham or Liverpool. If so, she was a long way from home down here in the outer suburbs of London. She continued to dry her hair as he made the tea. Pouring the boiling water onto the tea bags, he stole a glance at her. He thought she looked quite presentable now her hair didn't resemble a rat's nest.\n\nHe walked across to the table, put a mug down in front of her before pulling up a chair for himself. He noticed the hoodie was still dripping on the floor.\n\n'Look, your top is soaking, if you want I can put it through the tumble dryer for you. It will never dry otherwise.'\n\n'No, no. I'm alright, it'll dry in a minute.'\n\n'It's dripping all over the floor, let me throw it in the dryer, it'll be dry in ten minutes.'\n\n***\n\nShe looked down at the floor where small puddles of water on the floor had formed from the dripping wet hoodie. She knew he was right, but every instinct she had was telling her to be careful. Sensing her hesitation, he said, 'if you want you can borrow something of mine to wear while your top is drying. They'll be a bit big but they should be OK.' He went back into the laundry room, returning with a baggy sweatshirt.\n\n'Why are you doing this for me?' she asked.\n\nHe paused before replying, 'You looked so wet and miserable out there, I wasn't going to send you on your way. Besides, tomorrow is Christmas Eve. it's good to do something nice.' She sat for a moment trying to work out if he was playing her, but tiredness made her cave in.\n\n'Drying out my hoodie would be great.'\n\nHe grinned, and she thought his smile transformed his face. He passed her the sweatshirt, 'You can change in the downstairs cloakroom, it's at the end of the corridor.' At that instant her stomach rumbled loudly, a reminder she hadn't eaten since breakfast.\n\nHe smiled, 'Do you want a sandwich? There's bread and ham and some cheese. You've reminded me I haven't eaten, I get carried away when I'm working and forget to eat and drink.'\n\nShe thought, in for a penny, in for a pound. 'A sandwich would be great, but are you sure?'\n\nHe grinned again, 'Yeah, it's only a sandwich, I can do one of those. I'll have it done when you come back.'\n\nShe walked down the corridor and as she got to the door, she turned to look back. He was cutting the bread, and she thought maybe she might have had some good luck for once.\n\nShe closed the door of the cloakroom turning the key in the lock, just in case. She stripped off the hoodie dumping the sodden mess on the floor. Her t-shirt was also wet through and that joined the hoodie. The jeans were soaked from the knees down and she wondered if she could get them done too. She shrugged them off standing there in her knickers. She instinctively checked her face in the mirror. She looked tired, but that wasn't surprising. She ran her hands over her small breasts and when she touched the nipples, they tingled making her shiver. She pulled on his baggy shirt which came down to the middle of her thighs. She decided it covered up pretty much everything well enough. She definitely didn't want anything showing. After checking herself in the mirror once more, she unlocked the door and walked back to the kitchen.\n\n***\n\nAs he made the sandwich he thought, it's a good question. Why am I doing this? He didn't need the interruption, but he knew his concentration was blown the moment he went to answer the door. Still, why had he asked her in? Why was he making her tea and sandwiches? He hadn't seen anyone since Sean and Carol had left a few days earlier for their trip to the Amazonian rain forest. It meant that he would spend Christmas here, but that wasn't a hardship as he hated the Christmas holiday. The whole commercial charade made him sick.\n\nThat had been part of the attraction though. House sitting for a couple of friends for a few months seemed an ideal way to get on with his research paper. He was, if anything a little ahead of schedule, so this little distraction probably wouldn't cost him too much time.\n\nHe looked up as she came back into the kitchen wearing only his sweatshirt and carrying her wet clothes. The shirt was short enough to reveal quite a bit of her legs, and he felt himself go a little pink as she caught him looking at them.\n\n'Do you mind if I dry my jeans too?' she said.\n\n'No, not at all. Give them to me and I'll put them through the dryer. Your sandwich is on the table.'\n\nHe disappeared into the laundry room putting her wet clothes into the dryer. She was attacking the sandwich as he came back in, making him think she hadn't eaten for a while. He watched her eat as he drank his tea, and when she saw him looking said, 'What?'\n\n'You didn't tell me your name,' he said.\n\n'Sandy,' she said, 'short for Alexandra.'\n\n'Nice name, where are you from?'\n\nShe looked back at him without answering.\n\n'Sorry,' he said, 'none of my business.'\n\nShe nodded, 'Yep.'\n\nFeeling a little rebuffed he went back to watching her eat. Elven, he thought, that's her look. She was small and slender, with a pretty face and delicate hands, her hair tumbling down over her ears. He thought it wouldn't be at all surprising if they were pointed. He smiled to himself, imagining she had come from Rivendell, straight out of the pages of Lord of the Rings.\n\n***\n\nShe knew he was watching her, but she didn't mind that too much. She probably shouldn't have been so rude when he asked her where she came from, but it wasn't any of his business. He was nice looking, not handsome, but interesting. She thought if he lost the glasses and got a better haircut he would look attractive. Thinking she should be nicer, considering what he was doing for her, she said, 'Nice place you got here.'\n\n'Oh, no, it's not mine. I'm house sitting for friends of my Professor while they're away on an expedition. The Amazon. They're biologists.' He realised he was babbling. 'I have some work to do on a research paper, so it's good timing for us all.' God, he thought, why did he always have to over explain himself?\n\n'What's it about? Your paper, I mean.'\n\n'Oh, it's not so interesting, honestly.'\n\n'Oh, you think I'm too stupid to understand?' She meant it more light-heartedly than it sounded.\n\nHe went bright pink, 'No, no, it's just a bit obscure, it's about the effectiveness of different therapies following male SRS. Sex reassignment...'\n\n'Surgery.' She finished it off.\n\n'You know about SRS?'\n\nShe knew she shouldn't have tried to show off by finishing off the sentence, but for some reason she wanted him to know she wasn't stupid.\n\n'A bit, read about it. Friend of mine thought about doing it. Are you a doctor then?'\n\n'No, a psychologist. Did you friend go through with it?'\n\n'No, no, only talked about it. Are my clothes dry yet?'\n\nHe went to check before coming back frowning, 'No, I'm sorry I pressed the wrong programme. I've never used this machine before. I've put in on the right one now. I'm sorry.'\n\n'Ok, if you have to do some work, go ahead, I'll sit here and wait if you don't mind.'\n\n***\n\nHis laptop was in the next room so he thought it wouldn't do any harm to leave her here. He could do some editing and make a fresh start tomorrow. He worked for a while, losing track of the time as he usually did. He heard the dryer announcing it had finished the cycle with an irritating electronic noise that would wake the dead. He listened, but he didn't hear Sandy move as he assumed she would want to get her clothes out. He pushed back his chair and walked into the kitchen as the dryer continued to buzz its annoyance. Sandy was asleep at the table, her head on her arms. She must have been dog-tired he thought, the warmth and the food probably pushing her into sleep. He smiled as her face looked so peaceful, so he decided to leave her to sleep a little while longer.\n\nHe turned off the dryer, but she hadn't moved when he returned. He crept past her to the room he had made his study sitting down at his laptop once more. He started to edit his work again, becoming so engrossed an hour had passed before he checked his watch. He listened, but couldn't hear anything from the kitchen, so he walked through to find Sandy still asleep. The only change was she had shifted her head from one arm to the other. He hated to wake her, but it had to be done.\n\n'Sandy, Sandy, wake up.' He spoke softly at first, but as she didn't stir, he called her name louder and louder. When she didn't wake, he rocked her shoulder with his hand but still she didn't wake up. He thought she must have been exhausted to be in such a deep sleep. She reminded him of his sister's children. They fell straight asleep and were out for the count. Nothing would wake them until they were good and ready. What to do with Sandy? He knew he should wake her, but she looked as if she needed the sleep.\n\nThere was a sofa pushed against the wall of the kitchen and he thought if he could get her to lay there she would be far better off. Once more he wondered why he was doing this. Fine, offering someone in need a cup of tea is one thing, but then drying their clothes and making them food is surely something else. Looking at her again, he thought there was something about the girl which touched him. He knew he had a thing for waifs and strays of all kinds, yet there was something more. He sensed a vulnerability in her which compelled him to help her.\n\nHe couldn't think of a way to get her across to the sofa without carrying her, and that was out of the question. He had dealt with vulnerable people before and the risks involved in any physical contact were too high to contemplate. All he came up with was to place a pillow gently beneath her head and to cover her up with a blanket. He folded her clothes, noticing how threadbare they were, placing them next to her on the table. Glancing out of the window he saw the rain had turned to snow. Small flakes being blown around by the wind like confetti at a wedding. This wasn't going to let up for a few hours, so he thought he would let her sleep, she wouldn't be able to go far in this weather.\n\nHe returned to his laptop and sighed as he realised he wouldn't be getting any more work done today. It was coming up to six o'clock now, so he logged off from his paper and spent the next hour catching up on emails which he had been neglecting for the past few days. He hesitated, then signed into his cloud account, where he kept his stories. He tried to write at least a couple of pages each day. It was his way of relaxing and to exercise his imagination in a way that the rigid demands of his academic work would not allow him. These stories were definitely never going to be published except anonymously in on-line websites, but he felt compelled to keep writing them. He had written a few lines for the story he was working on when he heard a noise from next door. He guessed it was Sandy waking up, so he lowered the screen on his laptop as she burst through the door. She had her clothes in her hands and an angry look on her face.\n\n'Why did you let me sleep? I have to go. I need to get to the hostel or they'll give away my bed. Shit, shit, shit.' She started to drag her jeans on as she swore under her breath.\n\n'I tried to wake you, but you were out for the count. Besides you can't go out in this,' he said, gesturing out of the window where it seemed the snow was still falling even harder than before.\n\n'Fuck, can't you do something?' she said, getting increasingly agitated.\n\n'Like what? I can't stop it snowing.'\n\n'I don't know, can't you drive me or something?'\n\n'No, I don't have a car. Anyway, it wouldn't be any good if I did, I can't drive.'\n\n'What? Everyone can drive.' She was getting increasingly angry now. 'You have to do something. This is your fault.'\n\nHe paused, trying to control his impulse to snap back at her. 'Well, I can't drive, never needed to, or wanted to. What is my fault, anyway?'\n\nShe stared at him, 'You let me sleep and now I'll miss the deadline at the hostel, I'll have to sleep on the street tonight, that's what's your fault.'\n\nShe intended the words to sting, and they found their mark. He flushed as he realised that his act of kindness had created such an unintended consequence for the girl.\n\n'I'm sorry, I didn't realise, I thought it would be better for you to sleep, especially in this weather.'\n\n'Yeah, my entire fucking life people have been making decisions for me, without asking me first.'\n\nHe knew she wasn't being fair, but the words hurt all the same. He absolutely knew that he shouldn't say what he was about to, but he said it anyway, 'Why don't you stay here tonight?'\n\nShe stopped trying to pull her jeans up and glared at him. 'What? You can't be serious.'\n\n'Why not? There's a spare room and I don't want you to sleep rough because of something I've done. You can get a good night's sleep and be on your way in the morning.' He knew he was being reckless, but he found himself wanting her to say yes.\n\n***\n\nShe had woken slowly, trying to work out where she was, before remembering how the guy had invited her to get dry. The first thing she saw were her clothes on the table beside her. She thought she must have dozed off for a few minutes. She stretched and yawned, then caught sight of the clock on the wall. 'Fuck,' she said out loud. The clock showed 7.45, and she had to be at the hostel by 8 o'clock to claim her bed. Why hadn't he woken her up? She grabbed her clothes and ran into the other room where she found him hunched over his laptop.\n\nHis explanation for why he hadn't woken her was pathetic. Why did everybody want to do her thinking for her? All through her life, other people had been making decisions for her without asking her what she wanted. He was just another one, deciding what was best for her. Why didn't they ever learn to ask her first? She saw that her words had hurt him, but she didn't care. She would have to sleep rough tonight because of what he had done. She wanted him to know that.\n\nThen, he made his offer. She didn't believe what he had said at first. Stay the night here? Well, that was never going to happen. Then she looked out of the window where he was waving his arm. The snow was coming down hard like a white sheet covering the window. Her heart sank as she knew she couldn't go back out in that. Should she risk staying here? He seemed OK, but experience had taught her that was no guarantee of safety. Living as she did though, had also taught her not to turn her nose up at an opportunity.",
        "'Ok, if I stay, where do I sleep?'\n\n'There's a spare bedroom you can use.'\n\nShe was still hesitant, her senses on high alert. She tried to read what his motives were from his face, but there was nothing she could tell from the way he was looking at her. She looked out of the window once more at the snow and made her mind up.\n\n'OK, I don't have much choice do I?' She was still mad at him, but his gesture had thrown her off balance.\n\n'Look, I'm sorry for what's happened.' he said, 'It's not what I intended. Let me show you the room first.'\n\nShe realised she was still holding her jeans in her hand and hurriedly pulled them on. She hoped his sweat shirt she was wearing had covered her knickers. She followed him as he opened a door in the kitchen which opened up into a small bedroom. It was basic, with a single bed, a small chest of drawers and a bicycle standing against the wall. It looked clean, and most importantly there was a lock on the door.\n\n'Sorry, it's my bike. I told you I don't drive, so I ride a lot. I'll move it if you want.' She shook her head, sharing the room with a bike didn't worry her in the slightest. She had slept in many places worse than this. What she didn't understand was why he was so keen to please her. What was his game? Everyone had a game, but she couldn't work out what his was.\n\n***\n\nHe knew he was overcompensating for what he had done. It wasn't his fault that it was snowing so hard. After all he had only meant to be kind. But, there was something about her that made him want to make it up to her. He shouldn't be inviting strangers into the house, but he couldn't bear the thought of her sleeping rough. When she had burst into the kitchen after waking up, her eyes had blazed with anger, yet that spark of emotion had drawn him to her.\n\n'Sandy, I'm going to make some dinner, it's only pasta with a tomato sauce I made and defrosted, would you like some?'\n\nHer stomach growled at the thought.\n\n'Yeah, I would like that, thanks.'\n\nHe thought she must be hungry by the way her face lit up when he mentioned food.\n\n'Ben, can I help with anything?' she asked.\n\n'Thanks Sandy, can you get some plates out of the cupboard over there? And some knives and forks from the drawer above. I'm going to have a glass of wine, do you want one?' He sensed her hesitation. 'If you don't, that's fine, there's water in the fridge, if you prefer. Can you open that bottle of red over there and pour me a glass?' She opened it and looked around for a glass.\n\n'In the bottom cupboard, right where you're standing.' He said. She bent down, and he caught himself looking as the jeans tightened across her bum. Her hair, now dry, was blonder than it had appeared when it was wet and she kept pushing it behind one ear, a gesture that somehow made her look even more vulnerable. He went back to reheating the sauce as he heard the sound of wine being poured into a glass.\n\n***\n\nShe felt his eyes on her, even though her back was turned. She didn't mind, so long as it was only looking. She blushed a little as there had been times when she had slept with a man simply to get a meal and a warm bed for the night. She poured him a glass and thinking, what the hell, she poured herself a glass. She handed him the glass as he stirred the sauce, 'Cheers, Ben, thank you.'\n\nHe grinned at her, 'I am sorry, you know. I deserved what you said about making decisions for you without asking. I should have known better.' He clinked his glass against Sandy's and she wasn't able to stop herself smiling.\n\n'Well, I'm sorry too. I shouldn't have gone off at you like I did. It wasn't fair, but I was scared.'\n\n'Can we start again?' said Ben.\n\n'Sure, I'm Sandy.'\n\n'And I'm Ben, pleased to meet you Sandy.' He smiled and she liked the way it lit up his face.\n\nBen brought across the bowls of pasta and sauce, serving portions for both of them. Sandy was wolfing it down, and he felt a pang of conscience as he realised how hungry she must be. She looked up and said with her mouth half full, 'S'great, thanks. Tastes wonderful.'\n\nHe smiled, 'There's plenty more left. Help yourself.' She piled a second helping onto her plate while Ben refilled his glass of wine and offered one to Sandy. She nodded, and he poured some into her glass. She held her hand out to stop him, 'S'enough, thanks.'\n\nShe looked around, noticing something for the first time, 'You haven't got any Christmas stuff up.'\n\n'It's because I hate Christmas.'\n\nSandy stopped, her fork halfway to her mouth, 'You hate Christmas? How can anyone hate Christmas?'\n\nHe shrugged his shoulders, 'Well I do. It's an excuse for businesses to persuade you to buy a whole load of stuff you don't want or need. People end up getting into debt for the rest of the year to pay for it all. The Samaritans take more calls at Christmas than at any other time of the year because families end up fighting with each other when they get on each other's nerves. Plus, the whole thing starts about September so you can't go into a shop between then and Christmas without hearing Slade singing Merry bloody Xmas Everybody.'\n\nSandy looked stunned. 'Wow, didn't you enjoy Christmas as a kid?'\n\nBen frowned, 'No, I grew up in an orphanage. It was a hateful place. Christmas was the worst time.'\n\nShe felt guilty, 'I'm sorry, it couldn't have been much fun then.'\n\n'No it wasn't. So, I never celebrate Christmas, too many bad memories.' He shivered a little as he remembered how miserable he had been at this time of the year in the orphanage.\n\nSandy smiled at him, 'Still, it's a real white Christmas this year.' He felt his heart jump a little at how her eyes sparkled when she smiled. He watched as she took another helping before eventually sitting back and burping loudly. Ben laughed and Sandy went bright red, covering her mouth with her hand.\n\n'I'm so sorry. It was so good.'\n\n'Don't worry, in some cultures, that's a compliment.'\n\n'Ben, thanks for the meal and everything, but do you think I can get some sleep. I feel so tired.'\n\n'Sure, no problem. I hope you get some rest.'\n\nShe stood up and started to walk towards her room. She stopped, came back and gave him a peck on the cheek, 'Thanks, Ben, you've been great.'\n\nShe giggled then ran back to the room, closing the door behind her. Ben sat there for a while, staring at the door and wondering why that little peck on the cheek made him feel so good. He finished his glass of wine, stacked the dishes in the dishwasher before going to his bedroom. He found it difficult to sleep, his mind going over what had happened, and why he had acted as he did. He finally decided he had done the right thing, falling asleep with a smile on his face.\n\nSomething woke him, and he lay there for a moment trying to work out what it was. His mouth was dry, so he got up to fetch a glass of water from the kitchen. He had filled the glass when he thought he heard a noise, like someone sighing in the distance. He stood listening for a moment, but heard nothing. it must have been the wind outside, he thought. He was heading back to bed when he heard it again. This time it seemed to be coming from Sandy's room. He tiptoed across, and despite feeling a little guilty put his ear to the door. He could clearly hear the sound of crying. He tapped on the door, 'Sandy? Are you OK?'\n\nThe noise stopped, then restarted. Ben tapped on the door again, 'Are you OK?'\n\n'I'm OK, please go away.'\n\nHe shrugged, short of breaking down the door there was little more he could do. He walked back to his room. Looking back at Sandy's door, he felt something lurch in his chest as he heard the crying start once more. He lay in his bed, wondering about how someone like Sandy ended up living so close to the edge. He thanked his lucky stars that he had survived his childhood, but he knew how lucky he had been. If things hadn't gone his way, it might have been him out there today. He finally fell asleep thinking about that kiss on the cheek.\n\nHis alarm woke him up at seven o'clock as usual. Sometimes he went for a run or a ride on the bike before making breakfast and getting started on his work. One look out of the window convinced him that wasn't going to happen today. By the depth of snow on the bushes outside, it must have snowed even heavier during the night. Ben shivered just looking at the flurries being whipped about by the wind, and the clouds looked heavy with more snow. There was no sign of Sandy as he walked into the kitchen and he assumed she must still be asleep. It was only when he had finished making some tea that he noticed the piece of paper on the table. He picked it up, his heart sinking as he read what was written there.\n\nBen, thank you for last night. It was kind of you to take me in and to give me some food and a place to sleep. I can't thank you enough. I have to get going though, so thank you again and I hope you find out one day that Christmas isn't all bad. You're a lovely guy, love Sandy.\n\nBen looked but couldn't see Sandy's plastic box and he realised she had already left. He looked through the window to see the snow had started to fall again. It was coming down in big fat flakes and Ben knew it would be freezing outside. How could she have gone out in weather like this with only a thin coat and her hoodie? He looked out of the front door and saw fresh footprints in the snow leading up to the gate, then turning left up the lane. He went back inside, sat down and picked up his tea. What could he do? She had made her own choice. It wasn't anything to do with him anymore. He took a sip of the tea, then swore to himself and looked around for his coat.\n\n***\n\nSandy hadn't been able to get back to sleep after she heard Ben knock on her door. She was grateful for his kindness. She hadn't had a meal like that for ages, and to sleep in a proper bed by herself had been wonderful. But she knew this couldn't last. She needed to get back on the road again, try to make some money from people who might feel sorry for her at Christmas and buy some of her stuff. She got dressed and crept out into the kitchen, picked up her box and was about to leave when she thought she couldn't just disappear like this. Ben had been too kind for that. She found a piece of paper, hastily writing a thank you note. She thought her mother would be pleased about that at least if about nothing else she did these days.\n\nShe slipped on her anorak and opened the front door as quietly as possible. By the light of a solitary street light she saw it had stopped snowing, but it lay deep on the garden path. She hesitated as she looked out, but then squared her shoulders, closed the door behind her and started down the path. She would get a bus back to the shelter, then set out to try her luck in another patch. She started to shiver as the cold cut through her thin coat and her shoes were soaked by the time she got halfway up the lane. She looked back once, but even the street light outside Ben's house had disappeared in the snow. \n\nShe had to keep moving to keep warm, so she plodded on, the box growing heavier in her hands, which were already shaking with the cold. She reached the end of the lane and turned left to where she remembered there were some shops. She would surely find a cafe to sit in with a cup of tea to warm up. She found the cafe in the middle of the row of shops, but there was no sign of life inside. It surely wouldn't be long before the cafe opened, she thought, as she sat down in the doorway to wait.\n\n***\n\nBen plodded up the lane, pulling his collar up to keep the snow from trickling down his neck. You're barking mad, he told himself. She's long gone, probably sitting on a warm bus right now. He half thought about turning around, but something made him keep going. It was eerie walking in the snow. There were the tyre tracks of one or two cars in the road, but there was no-one else about. There was a spectral quality to the light as it reflected off the snow, softening and distorting the edges of everything it covered. The snow also seemed to deaden sound, and it was eerily quiet as Ben walked further up the lane. Sandy's footprints were clear enough in front of him, and he would keep going until he couldn't see them anymore.\n\nHe got to the end of the lane, following the tracks which seemed to lead to the small parade of shops. Even here there was no sign of life. Ben wondered if this was what life after humans would look like. He followed the footprints across the road towards a cafe in the middle of the row of shops. The snow was falling heavier now, but he thought he could see something in the doorway of the cafe. There were no lights on inside and he guessed the owners had taken one look out of the window, then decided to have an early Christmas. He began to run the last few steps as he saw a bright blue box in the doorway, and Ben's stomach dropped as he recognised Sandy's anorak.\n\nBen stumbled as he reached her, almost falling on top of her. She was hunched over with her head on her chest and her arms wrapped around her knees. Calling her name, he shook her shoulder, but she didn't respond. He saw her eyelids flutter as he tried again, but that was all. Her hand felt like ice when he touched it. He knew he had to get her warmed up, so he took off his coat, wrapping it around her shoulders. She moaned softly as he did, opening her eyes briefly, but not seeming to recognise him. He took off his hat and stuck it on her head before kicking the box out of his way. He would come back for it, or pay for the whole thing if it came to that. She felt as light as a feather in his arms as he picked her up. He retraced his steps, slipping a couple of times in the deepening snow. He stopped to wrap his coat around her as tightly as he could before carrying on. Without his coat and hat he began to shiver as he tried to walk as fast as he dared. He was shivering by the time he got to the front door and in fumbling for his keys he almost dropped her. She opened her eyes, smiled as she looked up at him, then closed her eyes again.\n\nBen carried her through to the bedroom before taking off the coat and hat which were now wet through. Her hands were still icy cold when he felt them. He rubbed them between his hands, but he soon realised that would do little to help as he was still shivering himself. He knew he would have to get rid of all her clothes which had been soaked by the snow before she could warm up. He hesitated for a moment. He was going to have to take everything off, but the situation overrode any concerns about modesty.\n\nPulling her upright he lifted the hoodie up and over her head. She was wearing a t-shirt underneath which was also wet through, so he pulled that off as well. He thought she would be wearing a bra but as he removed the t-shirt he was surprised to see her small puffy breasts appear. He stopped, slightly embarrassed, but this was no time to be prudish. Throwing the duvet over her, he ran to his room grabbing a pair of his pyjamas and a couple of thick sweaters. By the time he got back she had begun to shiver, which he thought he had read somewhere was a good sign, the body beginning to warm up.\n\nWith a little struggle he got his pyjama top on her and managed to pull a sweater over the top. Her jeans had to come off next, but they were so wet it was difficult to pull them down. He yanked hard, and they began to move when Sandy moaned, briefly opening her eyes before closing them again. He hoped he wasn't hurting her and tugged at the jeans one more time before they slid down to her knees. The jeans had caught on her knickers and they came down too. Ben looked up, almost falling over in shock. Nestling in her groin wax a small but unmistakable penis.\n\nHe stared at it, not quite believing his eyes. For a split second he wondered if it was real, then realised how stupid that was. Sandy moaned again and seemed to be coming round, so he quickly wrapped the duvet over her before going to fetch his own, laying that on top of her as well. He touched her face which didn't seem quite as cold as it was before. He felt himself begin to shiver as the adrenaline rush left him.\n\nHe needed to get warm as well. His hands were shaking as he made some tea. Nothing in his life had felt as good as that cup of tea, he thought. He sat by the side of Sandy's bed and watched as she blinked once or twice before her eyes opened fully. He smiled down at her, 'Hi Sandy. How are you feeling?'\n\nShe frowned, 'Where am I? I'm so cold.'\n\n'You went out in the snow and I think you have hypothermia. You were out for the count when I found you and brought you back.'\n\n'Oh. I can't remember.' She tried to sit up but fell back on the pillow, 'I'm shivering.' Her teeth were chattering loudly.\n\n'I'll get you something to warm you up.' He went back to the kitchen to make another cup of tea. 'Here, drink some of this. It will help warm you up.'\n\nBen held the mug for her as her hands were trembling so much. He wrapped her fingers around the mug to warm them up as she sipped the tea. She looked up at him as if recognising him for the first time. 'Ben, thank you.' 'You're welcome, Sandy. Drink the rest of the tea.'\n\nShe drank some more before laying back on the pillow again. 'I feel so tired and I have a headache.'\n\n'It's OK, I'll be here.' He watched as her eyes closed again. She seemed to be shivering less and her hands felt less cold than before. Ben finished his tea, thinking about what he had just seen. It had been a shock to see that she had a penis that's for sure. He recalled that yesterday, he had been confused about whether she was a boy or a girl. He now realised he knew why. That's fine, he thought, if she wants to identify as female that's her choice. What he couldn't work out was the thrill he felt as he thought about her. He looked at his watch, it was already 11 o'clock so he knew he wasn't going to get any work done today.\n\n***\n\nSandy slowly woke up. The duvet wrapped around her felt so comfortable. She didn't feel like moving at all. She opened one eye to see Ben sitting on a chair next to the bed reading a book. She didn't move as watched him. What was it he had said? She had gone out in the snow and he had brought her back. Try as she might she couldn't remember anything. As her mind began to clear she felt the duvet against her bare legs. That meant she didn't have her jeans on. Shit, he must have undressed her and put her to bed. She felt her face go red as she realised he must know about her. Fuck, she thought, she had to get away.\n\nHe looked up from his book, smiling as he saw she was awake, 'Hi Sandy, how are you feeling?'\n\n'I have to go,' she said. 'Where are my clothes? I have to leave.'\n\nHe frowned, 'Look, I didn't go out this morning to stop you from freezing to death to allow you to try the same trick again.'\n\nWhat was he saying? Freeze to death? She groaned as flashes of memory flickered into her mind. Walking up the lane, feeling colder and colder. Sitting in the doorway of the cafe waiting for them to open. Being carried back down the lane. Feeling so cold she couldn't even shiver. Drinking tea so hot it burnt her mouth. Oh shit. He must think she's a freak. Maybe he's called the police already to have her picked up. She had to get away. She struggled to sit up, but the weight of the duvets pulled her back done. 'I have to get going, thanks for everything, but I can't stay here.'\n\n'Sandy,' he said firmly, 'You're not going anywhere today, even if I was going to let you, which I'm not. It snowed so hard there's no public transport and the lane is closed to cars. It's still snowing. The heaviest fall this century they're saying on the radio. So, you're not going anywhere.'\n\n'Have you called the police?'\n\n'Why on earth would I call the police? I was going to call the ambulance if you didn't wake up, but not the police.'\n\n'Because you think I'm a freak.' She was close to panic. He laughed, and flushed with anger and fear she said, 'What's so fucking funny?'",
        "'I'm sorry, I wasn't laughing at you. Just at the thought of me thinking you're a freak. No, I don't think you're a freak. I assume you mean because I must have undressed you and found you have a penis. Is that it?'\n\nShe nodded, her face blazing.\n\n'Sandy, I don't care about that. That's your business, not mine. I have not called the police and never would. I don't think you're a freak, all I want is for you to get better.'\n\nShe sank back on the pillow. 'I'm sorry. I'm used to people who hate me for what I am.'\n\n'That's incredibly sad, Sandy. But I'm not one of them.'\n\nSandy looked away, unable to hold eye contact with him.\n\n'Do you want some more tea?'\n\nShe nodded.\n\n'OK, I'll go make some. I couldn't get my pyjama bottoms on you, so if you want to wear them, they're right here. Your stuff is still drying. It was so wet.'\n\nHe left the room, closing the door behind him. She unwrapped herself from the duvet to find she was wearing a sweater and what must be his pyjama top. She picked up the pyjama bottoms and pulled them on. They were a bit too long and too loose at the top, but she managed to roll up the legs and tie them tight enough to fit. She groaned as she looked at herself in the mirror. Her hair was a mess and her face was deathly white. Shit, what was she going to do? She hesitated before opening the door, but she knew she had to face him. Ben was standing by the table with two mugs of steaming tea.\n\n'OK, sit down and have some tea.' She did as she was told as he plonked the mug in front of her. 'Are you hungry, do you want some breakfast?'\n\nShe nodded, still unable to speak to him.\n\n'Eggs, bacon, baked beans are my speciality. Would that be OK?'\n\n'I don't want to cause you any trouble,' she said. Then realising that after what he had done for her that sounded ungrateful. 'I mean, thank you for what you did this morning, but I don't want to cause any more trouble.'\n\n'Well, I'm going to have some anyway, if you want some, that's no problem,'\n\n'Yes please, then. If you're sure.'\n\nShe sipped the scalding hot tea as she watched him make breakfast. He was humming to himself as the smell of cooking bacon wafted through the kitchen. She smiled as she recognised the tune, 'Fairy-tale of New York', she thought it was called. So he did have something about Christmas in him. His hair was a mess, and he needed a shave, but she thought he looked sweet even in jeans and a sweatshirt. He looked younger this morning, somehow more boyish, she thought. His eyes were a lovely shade of blue, and the corners of his eyes crinkled when he smiled. Why had she not seen that last night? His hands looked nice with slender fingers and his smile lit up his face.\n\n'I'm sorry, Ben, for causing all this trouble. I'll be on my way as soon as I can.'\n\n'Sandy, I'm just glad you're OK. You had me worried this morning after I found your note. But you need to get back on your feet. If the weather stays like this, you're not going anywhere for a while, anyway.'\n\nShe looked out of the window for the first time to see it was still snowing with big fat flakes of snow drifting in the breeze. He brought two plates to the table, piled with eggs and bacon, beans and slices of toast as well. Her stomach rumbled. She had forgotten the last time she had a breakfast like this.\n\n'Tuck in. Oh, by the way, is there anyone you want to get in touch with to let them know you're OK?'\n\n'No, there's no need, but thank you.' She looked around, 'Where's my box?'\n\n'I couldn't carry you and the box back. When we've had this, I'll go up there to get it.'\n\nShe started to panic again, 'You don't understand that's my only way of making money.'\n\n'Sandy, if it's not there, I'll pay for the whole box, don't worry.'\n\nShe stood up, 'I can't let you do that, I'll go get it now.'\n\n'In my pyjamas? I don't think you'll get far.' She sat down again and began to cry.\n\n***\n\nBen knew he shouldn't, but he reached over to take her hand. 'Sandy, I've finished eating, so I'll go now. Stay here, finish your food and keep yourself warm. I've lit a fire in the other room. Go in there, wrap the duvet round you and I'll be back before you know it.'\n\nHe grabbed his hat and coat before turning to look at Sandy. She looked so sweet in his sweater and pyjamas. He wanted to hug her and tell her everything would be OK, but he knew he couldn't do that. As he closed the door, he saw her mopping up the beans with her toast and a blissful look on her face.\n\nFor the second time that day he trudged up the lane through the snow. He kept thinking of her laying frozen in the cafe doorway. If he hadn't followed her she might have become yet another homeless person to die on the streets. Something else kept pushing its way into his thoughts. The sudden frisson of excitement he had felt when he saw her penis.\n\n***\n\nShe finished the food and sat there for a moment trying to think things through. By the look of the weather she was stuck here for a while. Ben seemed a good guy, but she couldn't work him out. Why he had gone to find her this morning she didn't know. She also didn't understand why he was so calm about finding out about her. In her experience, most people, if they ever found out about her, either got angry or treated her as a freak. Anyway, it looked as if she had been lucky, in more ways than one. \n\nShe brought one of the duvets from the bedroom and took it into the room where Ben had lit a fire. She settled down on the sofa to watch the flames dance in the fire and the logs hiss and spit. The smells and sounds of the burning wood took her back to the days before her parents had separated. Nothing had gone right for her from the day they told her they would be divorcing. She started to cry but tried to shake herself out of it. Crying wouldn't do any good. She felt warm and cosy wrapped in the duvet, and before long she had slipped off to sleep.\n\n***\n\nBen found the box exactly where he had left it and as far as he could see there was nothing missing. The snow was getting even deeper now as he turned to go back. A few cars were trying to move, but they were slipping and sliding all over the road. He helped push one woman's car, but she gave up, locked it up and walked off, without even saying thank you to him. That's the Christmas spirit he thought to himself. He trudged back to the cottage and let himself in, snow falling from his coat and hat onto the hall carpet. He smelt the wood burning on the fire and he walked into the room to find Sandy asleep on the sofa, wrapped up in the duvet. She looked so peaceful that he didn't wake her to tell her about the box. He stood looking at her for a moment, and the word that came to his mind was beautiful.\n\nHe let her sleep and when she eventually woke up she shuffled into the kitchen where he was working on his laptop. He pulled the screen down quickly when he saw her come in. She thought he looked a bit guilty and wondered what he had been looking at. She squealed when she saw her box lying on the floor and everything seemed to be there. She went over to Ben, wrapped her arms around his neck to give him a hug. 'Thank you so much for getting this for me.'\n\nHe went red as she hugged him. 'That's OK, I'm glad it was still there.'\n\nShe sat down opposite him and looked him straight in the eyes. He shifted uneasily, not sure why she was doing this. 'What?'\n\n'I am grateful believe me, but why are you doing this for me?'\n\nHe thought for a moment, 'Because it's what I think we should do for each other. I mean look out for someone when you get the chance. Not just pass by.' She tried but couldn't keep the cynical look from her face. He asked, 'Why do you look like that?'\n\n'Because in my experience that's what most people do. Just pass by without a second look. Sometimes they even give you a kick on the way past.'\n\nHe felt his face flush, 'Well I'm not most people.' He decided to change the subject. 'Do you want to take a shower?'\n\n'Why? Do I smell? It wouldn't surprise me if I did. But yes, I'd love a shower.'\n\nBen laughed, 'No, you don't smell, I thought it might help you to feel better. The bathroom's through there, between the two bedrooms. There's a clean towel there as well. Use any of the stuff in the bathroom if you want. I'll see if your clothes are ready.'\n\n***\n\nSandy loved the chance to have a shower. She had become accustomed to going without for days at a time. The hostel showers were not always safe places to be, especially for someone like her. It was a pretty bathroom with a large shower cubicle, and most importantly of all the water was hot. She used his shower gel which made her think about him. She still found it difficult to believe what he had done for her this morning. Even in the heat of the shower she shivered at the memory of how cold she had been.\n\nSandy thought he was good looking in a nerdy kind of way. In a different time and place something might have happened between them. That thought brought an extra warmth to her body that had nothing to do with the hot water. Wrapping her hair in one towel and a bigger one around herself, she walked out of the bathroom into the kitchen. She smiled as Ben looked up from his computer, saw her, nearly dropping the mug of tea he was holding. He also went bright pink which amused her and set her wondering.\n\n'Oh, you've finished.' His face was still bright pink.\n\n'Yeah, I wondered if there was a hair dryer I can borrow?'\n\n'Um, yes, I think so. There's one in my room, I'll fetch it for you.'\n\nShe smiled, 'Thanks, Ben.' He seemed to be embarrassed, and she wondered why. He walked away to fetch the hair dryer. He had left his laptop open on the table and she couldn't resist having a quick peek at what he was doing. She assumed it would be his paper he was working on, but when she read the first few sentences, she began to giggle.\n\n'Hang on it's here somewhere,' she heard him shout. She managed to read a few more paragraphs before he shouted, 'Found it,' She moved away from the laptop, smiling to herself. He came back into the kitchen handing her the hair dryer. 'It's not the most powerful but I hope it will do.' he noticed her grinning as she took it. 'Why are you smiling?'\n\n'Thanks Ben, you're a star.' Once inside her room she sat on the bed thinking about what she had read. It explains a lot she thought. Still smiling she dried her hair and managed to make it look presentable. Clothes, I need my clothes, I can't go around like this all night. She walked back into the kitchen to find Ben listening to the radio and drinking more tea. God, how much tea did he drink?\n\n'Thanks for the hairdryer. Are my clothes dry? I need to wear something other than this towel.'\n\nBen was staring at her from some reason. She cocked her head to one side, 'What's up?'\n\n'Oh, nothing, it's only that your hair looks so nice.'\n\nIt was her turn to blush, something she thought she would never do again. 'Thanks.'\n\nHe stood looking at her for a few seconds before jumping up, 'Oh, I'm sorry I'll go see about your clothes.' He returned from the laundry room with her jeans, her t-shirt and hoodie, together with a black bin liner which seemed to be full of something. He laid her clothes on the table and as she went to pick them up he said, 'Look, I just remembered. Carol, that's the woman who lives here, she packed up a whole bagful of clothes to go to the charity shop. She asked me to take them for her. Only, I haven't got round to it.' He pointed to the black plastic sack and went pink as Sandy stared back at him without saying anything. 'I mean It's all clean, she's about your size, I think. If you don't want to it's OK, but if you do, that's fine too. I'm sorry, I didn't mean to be condescending.' He was gabbling and knew he should shut up.\n\n'Ben, I'm sorry but I can't possibly wear someone else's clothes.'\n\nShe watched as his face dropped. 'I'm sorry, I shouldn't have said anything, I'll take it back,' he mumbled.\n\n'I'm kidding you, Ben. It's a lovely thought, thank you. By the way, I get most of my clothes from charity shops.'\n\n***\n\nBen had been surprised when Sandy reappeared after drying her hair. He had no idea how she had done it, but she looked so different from the pathetic waif who had knocked on the door yesterday. He thought she looked pretty, and he felt his pulse quicken as she stood in front of him wearing only a towel which ended about mid-thigh. He went to fetch her clothes from the dryer and had spotted the bag of Carol's clothes which he had forgotten to take to the charity shop. When he returned to the kitchen Sandy was smiling about something, and he got himself into a muddle asking her if she wanted any of the clothes.\n\nShe had got him with her joke, but it also told him she had a sense of humour. When she had smiled, his heart did a little flip in his chest. Sandy disappeared into her room with the bag of clothes which gave him a chance to think about why she was having this effect on him? His childhood in the orphanage had left him with a weakness for the underdog, and a belief that we should help others when they needed it. He shook his head. That would explain why he took her in, but not the emotions he felt when he looked at Sandy.\n\nHis sex life had been sparse, to say the least. He'd had a few fumbles with boys back in the orphanage, and he had a couple of very short lived flings with girls, but they had dumped him pretty quickly. He had focussed his energies on his studies which left little time to invest in relationships. He had built a hard shell around his emotions, never letting anyone close enough to penetrate his defences. At the orphanage he had always had to look out for himself, and that self-reliance had stayed with him. He thought he didn't need anyone else. He had also concluded that he wasn't that interested in sex. If he had to find a label for himself, it would probably have been asexual, so what he was feeling now for Sandy was totally unexpected. \n\nSandy had thrown him completely. He didn't know why she affected him so much. He admired the way she had dealt with the hand that life had dealt her, but there was more to it than admiration. She aroused in him feelings that he thought he had long buried. He couldn't stop thinking about her, stealing little glances at her. His heart beat a little faster when she smiled, and he felt a definite excitement when she had appeared wearing just the towel. He had been surprised to discover she was transgender, but that was the strangest thing. He liked her for who she was. What she had between her legs seemed totally irrelevant. He sighed, she would be moving on soon, so he would just have to conceal what he was feeling. \n\n***\n\nSandy sat on the bed looking at the bag of clothes. She had no problem with wearing them. They were clean he said, and it wasn't as if she had never worn charity shop clothes before. It was so sweet of him to offer them, and his reaction was even sweeter when she teased him about it. She liked him, but he had read that people who had been in danger were sometimes attracted to their rescuers. She couldn't afford to get too close to anyone because it always ended in disaster for her. It would be best for both of them if she got away as soon as possible.\n\nTipping the bag onto the bed she sorted through what was there. It all looked clean and freshly washed if in need of an iron. There was some good stuff here, she thought. Well off people threw too much away, they didn't value what they had. There were some dresses, skirts, blouses and tops. There were some good labels too. She held up a dress which seemed to be about the right size. Shrugging off the towel, she pulled it on and looked in the mirror. God, she thought, how different do I look? It had been ages since she had worn anything but jeans and a t-shirt. It was a sleeveless shift, in a dark floral print that came down to mid-thigh. Sandy giggled, twirling around to watch herself in the mirror. It was a long time since she had felt as pretty as this. With a rush, she realised she wanted to look nice, not only for herself, but also for Ben.\n\nBen was adding fresh logs to the fire when Sandy walked into the room. He had his back to her, so as he turned around and caught sight of her, she giggled to see his mouth drop open. \n\n'Do I look OK?'\n\nTwo pink spots appeared on Ben's cheeks as he struggled for his composure. 'Um, err, yes. I mean you look great. That dress suits you so much.'\n\n'Thanks, are you sure it's OK to wear it?'\n\n'Carol wanted to throw the stuff away, sure it's OK.' She sat down on the sofa, tucking her legs beneath her. 'I love the fire, it makes me think of Christmas at home.' As she said it, a pang of regret passed through her as she remembered what it had been like when she had a family. \n\n'It's still snowing out there, I think we're snowed in for a while.' he gestured out of the window, 'But we have enough food in the freezer for a few days, and there's plenty to drink so we should be OK. I was going to have a drink, do you want something? I'm having red wine. But there's some other things as well I think.'\n\n'Wine Is fine for me, thanks.'\n\n'I was about to start dinner, how about a curry?'\n\nShe nodded, 'Yes please, can I help?'\n\nBen asked Sandy to start the rice as he prepared the chicken. She liked having something to do, and it felt nice standing next to Ben as they prepared the food together. He poured two glasses of wine, giving one to Sandy. She took a sip before saying, 'You said you grew up in an orphanage, but do you have any family at all?' He turned to look at her with a frown on his face and she thought she had over stepped the mark.\n\n'Oh, I'm sorry I shouldn't be so personal.'\n\n'No, no, it's OK, I don't mind. The truth is I don't know, I never found out about my birth parents, so I guess there may be some relatives out there, but I don't have any desire to find out. I don't think I would feel anything for them.'\n\n'Any girlfriends, or are you married?' He wasn't wearing a ring, but that meant nothing she knew from experience.\n\n'No, not married, no girlfriends. Totally boring, I know.'\n\nShe felt a little thrill at his answer. Clinking their glasses together, Sandy said 'Merry Christmas, Ben.' He grinned, 'Happy Holidays, Sandy.'\n\nShe laughed, 'You really don't like Christmas do you?'\n\nBen served the food in big bowls on the table, and as they ate Sandy thought carefully about what she was going to say next. As they finished the food, she took a deep breath and said, 'Ben, do you have any questions for me?'\n\nHe looked at her for a moment, 'Sandy, if you want to tell me something then that's fine, but I don't want to put pressure on you.'\n\nShe was a little disappointed. She had opened up about herself, something she never did, yet he seemed uninterested. Didn't he care? Then, with a start she realised that was his way of caring. He wanted it to be her decision to share anything with him. Strangely enough that made her want to tell him her story. One which she had only told to a handful of people. She hesitated, took a deep breath, and it all began to tumble out. \n\n'My name was Alexander, not Alexandra. I'm 20, but I look more like 18 or so I'm told. My parents divorced when I was eight years old. It hit me hard as I loved my father, but he and my mother couldn't live with each other. He moved away, so I saw him at weekends for a while, until he met someone else with their own family, and well, I guess he preferred them.'\n\nShe took another sip of the wine before continuing.\n\n'By this time, I knew I wanted to be a girl. I didn't understand what it all meant, but I didn't want to be with the boys, I wanted to be with the girls. If there's a male equivalent of a tomboy, that was me. I was small and slender, androgynous, I guess you would say. I hated the clothes I wore as a boy, I wanted to wear what the girls did. My mother didn't understand. Anyway, she was struggling with her own problems. She resented my father for leaving her, and me, I think, for reminding her of him. We fought like cats and dogs and It got so bad that when I was twelve I went to live with my aunt. She was great to me. She hadn't had children, so she indulged me a lot.'",
        "Sandy ran her hands through her hair and looked away blinking back a tear.\n\n'She was kind, clever, generous, didn't judge anyone, loved me, and I loved her. Somehow she soon realised I was unhappy being a boy, and after a few long talks together, she made me an offer. She said that at weekends and holidays she would let me live as a girl. The only condition was that at school I would be a boy and to work hard at my studies. I jumped at the idea. To tell the truth, I think my Aunt got a thrill from it all too.'\n\nShe brushed her hand through hair.\n\n'She taught me how to be a girl, about makeup and dresses, how to walk and sit and behave as a girl. She said it was wonderful to have both a nephew and a niece. I had to be a boy at school. An effeminate boy to be honest, but it meant I was picked on a lot. I coped with it because I went home to become Sandy. At weekends, I lived as Sandy full time, and it wasn't long before I was able to pass quite easily as a girl. I didn't grow much as you can see, so it wasn't so difficult to fool people. Eventually, we used to go out together as aunt and niece for shopping trips and days out. We even went on holiday when I could be Sandy all the time. It was like one of those stories where a young boy is taken in by his aunt and feminised. Except for me, it was real.'\n\nShe watched him but there was no reaction, not even a flickering of his eyelids.\n\n'It was a blissful time, and I was so happy. I started to think about transitioning fully when I reached 18. With my aunt's approval I started hormones and everything seemed like a dream. In return, I worked hard at school and did well. I had an offer of a place at University and was set to go until one day I came home to find my aunt lying on the floor. She had suffered a massive heart attack and had died instantly.'\n\nA tear trickled down her cheek and she wiped it away. 'Oh my God, I'm so sorry,' said Ben.\n\nSandy nodded, wiped away another tear before going on. 'It was like I had been hit with sledgehammer, it seems I had a breakdown of some kind. I couldn't cope with anything and I spent time in hospital, but the place I was in closed due to budget cuts and I was pushed out. I was still in a bad way and hit the streets. I've been there ever since, two years now.'\n\nBen reached over and took her hand, 'How are you now?'\n\nShe smiled at him, 'Don't worry, I not going to do anything bad. I'm better now, I feel well, but it's been a long haul. I see a doctor, and he took me off my meds a year ago and I feel good.'\n\n'Have you tried to get off the streets, get a job?'\n\n'Do you know how difficult it is to get a job when you're homeless?'\n\n'No, no. I guess not,' Ben said, embarrassed by his naivety.\n\n'Anyway, about a couple of months ago, a solicitor managed to track me down. He is my aunt's executor, and it appears that she left me her house and some money in her will. Except it's in a trust which I can't get until I'm 21. She didn't expect to die so soon, I guess. None of us do, I suppose. Anyway, I'm 21 in six months' time, so when that happens I don't know what I'll do.'\n\nShe felt Ben squeeze her hand, and that felt good. 'That's not too long to wait.' he said.\n\n'No, I guess not. But I'm still on the street. I've been beaten up more times than I can count and have done some things to get by that I'm not proud of.'\n\nThere was silence for a while then Ben said, 'Did you contact your mother?'\n\nSandy snorted, 'When she found out what I had become, she freaked out and wanted nothing to do with me. She hasn't spoken to me since. I could be dead and she wouldn't care less. My father passed away a few years back.'\n\nBen moved his chair next to Sandy and hugged her. 'I'm so sorry, Sandy, You've had a rough time.'\n\nShe looked at him, her eyes glistening with tears, 'We both have, haven't we?'\n\nThey hugged for a while before Ben said, 'Come on, it's late and you've had a rotten day. Go to bed and let's talk some more in the morning.' Sandy nodded, 'Ben, thanks for listening to me. You remind me of my aunt.' He looked puzzled, 'She was a good listener, and wouldn't judge anyone. Just like you.' She leaned across to kiss his cheek. Their eyes met and Sandy for a moment thought he would kiss her back. But, he went pink and said, 'You're welcome, Sandy. You deserve more.'\n\nWithout a word she stood up and ran to her room, slamming the door behind her. She threw herself on the bed, punched the pillow thinking she mustn't let herself feel like this. It will be over soon, and she would never see him again.\n\n***\n\nBen sat at the table for a while and finished the bottle of wine. He didn't normally drink so much, but Sandy had made him remember his own childhood in the orphanage, and whenever that happened he knew he would end up feeling bad. He thought about the moment when she kissed him on the cheek. He had been so close to kissing her back until he stopped himself. He couldn't get involved, it wasn't fair to her. He damped down the fire before locking up and heading for bed. As he passed her door, he raised his hand to knock on her door, but he shook his head and walked by.\n\nBen rarely dreamt about the orphanage, but tonight he was back there and it was Christmas. He was awake in his bed listening to two other boys giggling somewhere in the darkness. He knew what they were up to because he had done the same thing a few times for the comfort it brought. He heard footsteps padding towards his bed and he felt the sheets being drawn back as someone slipped into the bed beside him. He felt hands sliding over his body and his lips were brushed in a soft kiss. As he turned towards whoever it was, his eyes snapped open as he realised this was not a dream. He heard someone giggle softly next to him, 'Merry Christmas, Ben.'\n\nHe started to say something but Sandy rolled on top of him kissing him with her tongue in his mouth. He tried to push her away, but she was like a limpet. He stopped struggling, his body responding to her, and he began to kiss her back. His arms went around her, his fingers stroking her soft warm skin. He felt her body press into his and his cock began to harden as she kissed him. He felt something bump into his groin and he realised it must be her cock. He froze for a moment, then thought, I don't care what she has down there. She raised herself up and he made out her face in the light from the window. 'You're not going to scream for help are you?' she said with a giggle.\n\nHe laughed, 'Not yet anyway,' pulling her down for another kiss. Their tongues fought a delicious battle before Sandy moved down, kissing his neck, then sucking and licking his nipples with her tongue. He moaned as she nipped a nipple between her teeth. Her hand snaked down to take his cock in her fingers as she kissed her way down his tummy. Her lips gently brushed his skin, making his insides flip and his cock swell. He felt her hair and then her cool breath swirl across the tip before she kissed the head, making him jump at the touch of her lips. \n\n'Do you want me to stop?' he heard her say, the teasing clear in her voice.\n\n'Don't you dare stop,' he said as his cock was enveloped by her warm mouth and tongue. He arched his back as she took him inside, her tongue swirling around the head and a sound came from somewhere in his throat as she rolled his balls around in her fingers. She teased him mercilessly, taking him to the edge with her mouth, then slowing down, so that he was panting for release. She let him slip out of the mouth, using her tongue to lick up and down the shaft, flicking the tip with her tongue until he was desperate. She recognised he was close and whispered, 'Are you ready Ben? I mean really ready?' She enjoyed teasing him, feeling his cock grow in her fingers and the tension in his body as she held him on the edge.\n\n'Yes, yes, I'm ready, please do it.'\n\nShe giggled, and with one last kiss on the tip she took him deep into her mouth. It pushed him over the edge and his climax crashed through him, tensing every last muscle as his cock twitched, sending cum exploding out through his cock into her mouth. She swallowed as much as she could, but some of it leaked through her lips splashing onto his tummy. He felt her tongue lick up what had escaped before she moved up to kiss him, and he tasted the saltiness of his cum on her lips. They kissed for a few moments before he lay back with a sigh and she snuggled close beside him, pulling his arm around her.\n\n'Sandy, that was beautiful. But why did you do it?'\n\nShe turned to look at him in the din light. 'Because I wanted to, and I thought you deserved a Christmas present.'\n\nHe laughed, 'You're not fat enough to be Father Christmas.'\n\nShe giggled, 'I told you Christmas wasn't all bad.'\n\n***\n\nShe had lain in bed hoping that sleep would come, but all she thought about was Ben. She hadn't met anyone like him for a long time. Someone who didn't despise her, who listened and didn't preach at her, who seemed to accept her for who she was. She was sure he was attracted to her. The little looks he gave her, the blushing all added up. But she sensed he was also unsure about his attraction to her and was unlikely to do anything about it. So, if anything was going to happen she would have to start it. Did she want to? She liked him, that she was sure of, but did she want more? She didn't know, but she thought she needed to find out before she moved on. She slid out of bed and made her way to his room. She listened to him snoring inside before opening the door and tiptoeing to his bed. It's now or never, she thought, and offered up a prayer that he wouldn't scream the house down.\n\nShe need not have worried. After the initial shock had gone, he had begun to kiss her back, and she could feel his excitement. It had been a long time since she had been with someone who didn't simply want to be sucked off as quickly as possible, and she never, ever let them come in her mouth. Ben was different, she couldn't tell you why, but he was gentle and sweet. She surprised herself by taking his cum in her mouth, and he didn't seem to mind the taste when she kissed him afterwards. Some guys had made her use mouthwash before kissing her again. When they had finished, he cuddled her for a while which felt so good. She felt his breathing slow down and before long she too fell asleep cradled in his arms.\n\nShe woke and stretched, feeling warm and comfortable under the duvet. Then, the memories of last night crashed like a breaking wave into her mind. She looked around to see she was alone in the bed. Oh Christ, she thought, what have I done? He must hate me. Her cheeks blazed with embarrassment. She heard the door open, and she dived under the duvet to hide. She felt the bed tilt as he sat on the edge and she tensed, waiting for the abuse to come.\n\n'I've brought you some tea, although you'll have to come out of hiding to drink it.'\n\nHe flicked down the end of the duvet but she pulled it back over her head again. He laughed, 'I'm going to make some breakfast, nod once if you want some.' She thought he can't be that angry if he wants to make me breakfast, so she nodded her head beneath the duvet.\n\n'I've brought the bag of clothes through, in case you want to get dressed before you come out for breakfast.' She felt him get up from the bed and the door close. She stuck her head out to see that he had gone and gratefully drank some of the tea. She fell back onto the pillow. She had woken up in some strange places, but right now none seemed as strange as this. Nothing for it but to face the music. Rifling through Carol's bin bag of clothes she found a pretty top and pulled on her jeans which were dry again. Her hair looked like a disaster zone, so she piled it up into a topknot telling herself it would have to do. Taking a deep breath, she pushed open the door and walked into the kitchen. The smell of cooking bacon made her stomach rumble. Ben was piling food onto plates and he looked up and smiled, 'Merry Christmas, Sandy. Breakfast is ready.'\n\n'Merry Christmas, Ben. Thanks for this.'\n\nShe sat down and started to eat. She couldn't look at him, but she felt his eyes on her. She felt she had to say something, 'About last night...' she tailed off, not knowing how to go on.\n\nBen waved his fork in the air, 'If you want to know, last night was great. But don't worry about it. We don't have to mention it again if you don't want to.'\n\nDamn it, she thought, what did that mean? He said it was great, but not to worry about it.\n\n'Ben, I'm sorry, I shouldn't have jumped you like that. It wasn't fair.'\n\n'Do you regret it?'\n\n'No, I enjoyed it, but...'\n\n'But what?'\n\nShe covered her face with her hands and said, 'I don't know, you make me crazy.'\n\nHe laughed.\n\n'Don't laugh at me,' she snapped.\n\n'I wasn't laughing at you, it's just that you make me crazy too.'\n\nShe stared at him, 'What?'\n\n'Ever since you knocked on the door you've turned my life upside down. I can't concentrate on my work because I keep thinking about you. I don't know why but you make me feel things I haven't felt for a long time. I don't let people get close to me, yet you barge in here and I'm in pieces.'\n\nSandy's mouth dropped open. 'I'm sorry, but you invited me in, remember. If I make you feel that bad, then I'll go now.' She stood up, her eyes blazing.\n\n'Sandy, sit down, please. I didn't say it made me feel bad, did I?'\n\nShe remained standing as he went on. 'I'm in pieces, but it makes me feel good. You make me feel alive again. I've dedicated myself to my work for such a long time, but you've managed to do something I didn't think could happen.'\n\nShe sat down with a bump. 'What's that?'\n\n'I haven't been close to anyone for a long time. You made me feel for someone for the first time for a very long time. I tremble when I think of you. I can't explain why, but you make me excited to be with you. Something in you reached into me and shook me up like a rag doll. I'm scared by what I feel for you, but I don't want it to stop. That's why you drive me crazy.'\n\nSandy listened with growing amazement to what he said. Did he mean it? She had been hurt so many times before, she didn't want it to happen again. He knew what she was, and yet he still said those things. He had looked as if he were about to cry as he spoke, yet could she really believe him? Her heart did a quick flip as she reached out to touch his hand. 'Do you mean that, Ben? You know what I am.'\n\nHe looked straight back at her, 'Every word, Sandy, every single word. And I don't care about what you are. It's who you are that's important.' Sandy started to cry, tears rolling down her cheeks as Ben held her hand, 'I'm sorry, Sandy. But after last night I had to tell you.'\n\nShe wiped her eyes, 'Don't play with me, Ben. I can't cope if you do.'\n\n'I promise I'm not playing with you. I mean it, but I'm as scared as hell.'\n\nSandy moved to sit on Ben's lap, wrapping her arms around him. She kissed him before resting her head on his shoulder. 'Ben, it's been a long time since I met someone like you. I've met a lot of shits, and I've been hurt a lot. It's hard for me to trust anyone, so please be patient with me.'\n\nHe stroked her back with his hand, 'If you'll be patient with me as well.'\n\nShe giggled, 'What a pair we make.' She turned her head and kissed him, tenderly at first, then with growing ferocity. Ben's hands began to move over her body, his fingers sliding under her top and finding her warm skin. He pushed up the top revealing her small breasts with their hard nipples. She sighed as he began to rub a nipple between his fingers and her head went back as he twisted the little nub. He bent forward to lick the nipple, and she almost jumped off his lap as his lips touched her skin. She moved off his lap and straddled him on the chair, allowing him full access to her breasts. She pulled his head towards her and he responded by sucking and licking each tender nipple in turn.\n\nPutting her finger beneath his chin she raised his face to hers and they kissed hard, their tongues entwined. His hands were all over her, the touch of his fingertips like small electric shocks on her skin. Sandy could feel Ben's cock hardening beneath her and she began to move around on his lap making him gasp and grip her tighter. She felt as if every nerve ending was on fire and she wanted him so badly. She slid off his lap, turned away from him and tugged her jeans off. Ok, this is it, she thought, as she turned around to face him.\n\n***\n\nSandy slid off his lap and Ben watched as she turned away and pulled her jeans down. She paused for a moment, and he looked up at her as she turned around to face him. He thought she looked so shy and vulnerable as she held a hand over her mouth. His eyes dropped to her groin, seeing her cock for the second time. This time it was hard and pointing straight at him. Although he knew Sandy had a cock, he hadn't been sure how he would react when he saw it. He looked up at her to see her biting her lip as she waited for his reaction. He looked back down and smiled because he couldn't believe how beautiful it looked. It was smaller than his own, with blue veins standing out along the shaft and the head glistening in the light. He realised he had been holding his breath and he let it out in one big sigh. Without thinking about it, he reached out a hand and brushed the tip gently with his fingers. Sandy jumped as she felt his touch, making her giggle nervously. That made Ben jump too, and he laughed. He wrapped his fingers around it, feeling its softness and its strength. He knew what his own felt like, but this was the first time he had touched another cock since his days playing around in the orphanage. For an instant, he thought he must be dreaming, but this was all so real.\n\nHe moved his fingers up and down the shaft and above him Sandy moaned. He liked the feel of it in his hand. It was warm and soft, yet hard at the same time. From somewhere he felt an irresistible desire to kiss it, so he bent his head forward and licked the tip with his tongue. He heard Sandy hiss with pleasure, so he touched his lips against it and she hissed again. He closed his eyes and tentatively pressed his lips against the head. Sandy moved her hips forward, and the cock slipped through his lips and into his mouth. He gagged a little but recovered and held it inside. It felt just like he was sucking a thumb, he thought. He tried to remember what Sandy had done to him and he used his tongue to slide around the head, earning another hiss from Sandy. He felt her hands on the back of his head and she began to move her hips, sliding the cock in and out. It slipped out once and he felt lost until she slid it back into his mouth.\n\nIt felt like a dream to Ben as he sucked on Sandy's cock, relishing the feeling of it within his mouth. He felt it twitch as she said, 'I'm cumming,' He panicked, not knowing what to do next and it slipped out just as her cum surged from the tip. He watched in fascination as it spurted in pulses out of her cock. Some of it splashed onto his lips and he couldn't stop himself licking it with his tongue. The taste wasn't unpleasant, something like a salty oyster, he thought.\n\n***\n\nAs her cock slipped out of his mouth, her knees buckled as she came hard. She hadn't expected Ben to take her into his mouth, but she wasn't about to complain. He was nervous and inexperienced but the touch of his tongue on her cock was like being plugged into the mains. She looked down to see he had his eyes closed, and she could feel his tongue swirling around the tip of her cock. Her hands instinctively went to the back of his head, holding him in place as she began to move her hips to and fro. She loved having her cock sucked, and she was soon close to the edge. She was surprised as Ben licked some stray drops of cum from his lips, and using her finger to pick up some cum she slid it through his lips, watching as he licked the finger clean.",
        "'Thank you, Ben, that was beautiful.'\n\nHe grinned up at her. 'Well, I had to give you a Christmas present too.'\n\nShe bent down and kissed him, the taste of her cum still lingering on his lips. She pulled up her jeans and sat on his lap again.\n\n'Sandy,' Ben stroked her face with his fingers, 'What made you come to my room last night?'\n\nSandy looked away, then looked back at him. 'I don't understand it totally, I think. I fancied you, I was horny, I thought you liked me, I wanted to say thank you. All of those things.'\n\n'But how could you be sure I wouldn't go crazy, or throw you out?'\n\nShe blushed, 'I didn't, but promise not to be mad.'\n\nHe looked puzzled and Sandy took a breath, 'I read what you had on your laptop yesterday when you went to fetch the hairdryer. It was a story you were writing. I'm sorry I shouldn't have read it, but...' She thought he was going to be angry, but instead he laughed. 'It's OK, Sandy, although nobody else knows I write stories like that, so I may have to kill you to protect my secret vice.' He tickled her and she nearly fell off his lap.\n\n'It's a way of getting away from my work, and it's also been my release I guess. I had begun that one because of you. I was trying to sort out my feelings about you. I was confused by how much I was attracted to you, and I thought writing it out would help me understand it more.'\n\nShe giggled, 'Well, from what I read you were beginning to work it out.'\n\nHe blushed, and she thought he looked so much like a little boy at that moment. 'Well, I do have a vivid imagination.'\n\n'Did it work?' she asked. 'Did it help you understand?'\n\n'A bit, but last night and this morning helped a lot more.' he kissed her again, and her tummy did a flip flop. Where was this going? She needed to be careful, she was going to have go back to real life soon and this dreaming would have to stop. He would go back to his work and she would have to hit the streets again. She stood up and turned away from him, so that he wouldn't see the wetness in her eyes.\n\n'What's up?' He came up behind her and put his arms around her. She shook her head, 'It's nothing, honestly.' He turned her round, and she buried her head in his shoulder. She didn't want him to see her crying.\n\n'Sandy, look at me. I have something to ask you.' he put his finger under her chin and made her look at him. 'I want to ask if you want to stay here for a while. Until your trust fund comes through. I couldn't bear the thought of you out on the streets again. You can stay in the spare room. No conditions or anything. I just want to know you're safe.'\n\nShe searched his eyes to see if he was joking. He looked serious, and she imagined what it would be like. She shook her head, 'I can't do that.'\n\n'Why not?'\n\n'It's not fair on you. I haven't got any money, and what happens when your friends get back?'\n\n'Money's not a problem. This is all paid for until they come back, and two can live as cheaply as one. We have time to work out what happens when Sean and Carol get back.'\n\n'I don't know. I don't want charity.'\n\n'I'm not offering charity. You can go looking for a job if you want. You won't be homeless, so it should be easier.' She knew that was true, at least. The temptation was too great, and she kissed him, 'OK, Ben, but remember you should careful what you wish for. I can be a nightmare.'\n\nHe hugged her, 'You've only seen me at my best so far.' She had said yes, but there were still big doubts in her mind. Maybe, he would get fed up with her pretty quickly. Maybe, she would get fed up with him and this place too. She thought she would give it a few days to see what happened.\n\n***\n\nIt was only when she said yes that he realised what he had done. Was he crazy? Offering to share with her was something that just popped into his head. He wasn't normally spontaneous, but Sandy had this effect on him, and he was being just a little crazy. Let's give it a few days, he thought. Everything might change then.\n\nFor the rest of the morning they drank tea and shared their stories. Ben told her about life at the orphanage and she told him more about life on the streets. Both of them cried at different points as they relived the bad times they had experienced, bringing them closer together. Eventually, Ben looked at the clock and said, 'It's Christmas Day, we need to make some food.'\n\n'You don't believe in Christmas.'\n\n'No, but I believe in eating, and Christmas this year hasn't been too bad so far.'\n\nThey made the dinner together, then spent the evening watching old films and drinking more wine than either of them usually would. Ben found himself being drawn more and more to Sandy. He had never felt like this about anyone before, and he wondered if this was what falling in love felt like.\n\nSandy had fallen asleep on the sofa in the middle of one of the films. Ben covered her with a blanket and sat looking at her sleep. She looked so peaceful lying there that he hated to disturb her, but she would sleep better in her bed. He picked her up and started to carry her through to the spare bedroom. She woke up and looked around, 'Where are you taking me?'\n\n'To your bedroom, you need to get some sleep.'\n\n'Oh no, no. I want to sleep with you, tonight. I don't want to be on my own, please.' She locked her arms around his neck and wasn't going to let go. He hesitated, this was yet another step towards something he didn't understand.\n\n'Please, Ben, I don't want to be on my own.'\n\nHe had little choice he thought and carried her through to his bedroom. He laid her on the bed and she grinned up at him. 'Thanks, Ben.'\n\nHe went to use the bathroom and when he came back, she was in the bed and snoring lightly. He smiled to himself and slipped in beside her. He tried to remember the last time he had gone to sleep with someone in the same bed and it was a long time ago. He lay there, unable to fall asleep, while Sandy snored beside him. It must have been a little later when he realised that Sandy had stopped snoring and he sensed she was awake.\n\n'Can't you sleep?' she whispered.\n\n'No, too much going on in my mind.' he whispered back, 'Go back to sleep.'\n\n'I have a cure for insomnia,' she giggled.\n\n'What's that?'\n\nShe rolled over and kissed him, her tongue sliding between his lips. Her hands found his cock, and she began to stroke it as she kissed him. He began to respond and rolled on top of her, feeling his cock rubbing against hers.\n\n'Mmm, that's nice,' she said, and she opened her legs, allowing his cock to slide between her thighs. His cock was very hard by now and she pulled his head to hers and gently nipped his earlobe between her teeth.\n\n'Ben, will you fuck me please? I want you in me so much.'\n\n'Are you sure?'\n\n'Yes, I'm sure, Ben. Fuck me please.'\n\nHe knew this was yet another step into the unknown, but he didn't hesitate. 'OK, but you'll have to show me what to do.'\n\nShe giggled, 'Don't worry, you'll work most of it out yourself. Have you got any lube?'\n\n'What?' he said, 'Nooooo.'\n\nShe laughed, 'Don't worry, we'll just have to improvise.' She jumped out of bed and ran out of the room. What was she doing, he wondered, there wasn't any lube out there. He lay there, feeling a little foolish, and he stroked his cock to keep it hard. She was back a few minutes later carrying a towel and a bottle.\n\n'There's always a way,' she said. She spread the towel on the bed. 'Now slide over here.' She unscrewed the bottle and smeared something on her hands. 'Olive oil,' she giggled, it's extra virgin which seemed appropriate. It could get a bit messy so that's why I brought the towel.' He couldn't believe his ears. She was going to use olive oil as a lubricant. He started to laugh. 'What's so funny?' she asked.\n\n'I don't know how I'm ever going to cook with it again and keep a straight face.'\n\nShe shut him up by kissing him and he felt her hands slide across his cock. The oil was slippery and as she covered his cock with it, he burst out laughing again. She squeezed his balls, and that shut him up. He watched as she went down on all fours on the towel and used some of the oil on her hole.\n\n'Slide up behind me and use a finger first to open me up.' He moved as he was told and positioned himself behind her. His cock bumped against her bum as he pushed a finger gently into her hole. He couldn't believe this was happening to him, but he was so aroused that he was going to go through with it.\n\n'Push harder.' she ordered, and he slipped the finger in deeper feeling her close up around it.\n\n'Now use two,' this time there was more resistance, and he didn't want to hurt her, but she jerked backwards and his fingers slid in, making her hiss as she felt them enter.\n\n'Now take your cock and fuck me. I need you in me now.'\n\nHe shuffled forwards and his cock tapped against her hole. He thought it would never go in there, it looked so small to him. He pushed gently, and the head slipped in a little, but then he felt real resistance. 'Don't worry, push harder.'\n\nHe tried again and as he got a little further in, she pushed back hard and he felt his cock slide all the way in. He gasped out loud as he felt her tighten around his cock.\n\n'Now slide in and out, slowly at first then as hard as you can, it won't hurt.'\n\nHe began to slide his cock backwards, then forwards, and he felt her push back as he slid in. he couldn't believe how good this felt, any reservations he had about what he was doing evaporated as he began to move faster. Sandy was grunting now as he pushed deeper and deeper into her. It was like his cock was being held by a slippery velvet glove, and he could feel his excitement grow as he slipped in and out. Sandy was grunting loudly now and pushing back harder and harder into him. His climax almost caught him by surprise, and he fell forward onto her back as his cum pumped into her. His cock seemed to twitch three or four times before he was finished and pulled out of Sandy. He fell to the bed, rolled onto his side as he watched her stroking her cock and with a grunt, she came too, her cum spraying over his legs.\n\n'Fuck, that was good, Ben. How about you?'\n\nHe couldn't think straight for a moment as he tried to control his breathing.\n\n'Oh my God, oh my God.' was all he could manage.\n\n'I'll take that as a good sign.'\n\nShe hugged him and pulled him up. 'Come on. We have to clean ourselves up, this stuff gets everywhere.' She dragged him to the bathroom and washed him under the shower until all the oil was gone. He was still shaking as she led him back to the bed, taking the towel off the bed and pushing him down onto it.\n\n'Not bad for your first time,' she giggled.\n\nThey kissed, and this time it wasn't long before Ben slipped into sleep.\n\nEpilogue\n\nHe woke to find the light already shining in through the window. It must be late he thought. He smiled as he remembered what he and Sandy had done last night. He turned over expecting to find her beside him, but the bed was empty. She must be up already he thought. He couldn't hear anything from the kitchen. Maybe she's in the bathroom. He yawned, stretched, then put on his trousers and a shirt and walked into the kitchen expecting to see Sandy making a cup of tea. The room was empty and a sickening feeling grew in Ben as he looked around the empty kitchen. 'Sandy,' he called out but somehow he already knew she wouldn't be there. He dragged his eyes towards the corner of the room where she had left her box but it wasn't there. He slumped on the chair, his head fell forward and he wiped away tears from his eyes. She hadn't even left him a note this time. He got up and looked out the front door to see a thaw had set in overnight and most of the deep snow had gone, but there was still enough left to show the unmistakable trace of footsteps leaving the house.\n\nWhat a fool he had been. How could he have thought she would stay with him? She'd had a couple of days' rest and food, before deciding to get out as soon as she could. She had used him and thrown him a little sex to sweeten him up even more. He cursed himself for letting her get so close to him. He knew Christmas was the worst time of the year, so why had he thought this one would be any different? He resolved never to let anyone get so close to him again. All it brought was pain and heartbreak.\n\nHe sat down at the table, unable even to make a cup of tea. He sighed, no point in feeling sorry for himself. He would have to move on. Get back to his work and forget that this fucking Christmas had ever happened. He tidied up and opened his laptop to find the story he had started to write about Sandy, paused for a moment, then hit delete. Opening up his research paper he began to focus on his work again.\n\nHe didn't hear the first knock on the door, but the second one broke into his train of thought. 'Shit,' he said to himself. He opened the front door to come face to face with a teenage boy with a box. The boy started to say something, and Ben was about to tell him where to stick the box, when he heard a voice from somewhere behind the boy. 'It's no good, Jimmy, he won't buy anything. He didn't buy anything when I tried.'\n\nThe boy turned around and they both said. 'Sandy!' Sandy looked at Ben and said, 'I had to take my box back, got my money back.' She saw the look on his face. 'Oh my God, you thought I wasn't coming back.' \n\nBen grinned, 'Never crossed my mind.'\n\nThe End"
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "christmas",
        "first time",
        "crossdressing"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/bah-humbug"
}