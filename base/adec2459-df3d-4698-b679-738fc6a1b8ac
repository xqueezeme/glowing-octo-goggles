{
    "title": "Animal Caf\u00e9 Ch. 06",
    "pages": [
        "She was beautiful.\n\nMy shy finger traced the shape of her black spots, standing out on her white latex skin as she was sleeping. Apparently, Asha, the small snow leopard, liked sleeping a lot.\n\nAfter our shower incident last night, we cuddled ourselves to sleep without having sex. It was not so evident for me to determine when was a good time or not for this type of extra play with the pets.\n\nI mean, with Trixie, it was easy to know... she always wanted sex. But most of the other pets seemed as happy just to cuddle, which was fine by me. I was still very new at physical contact; therefore, I was in no rush to get naked and do dirty things with them.\n\nAsha still smelled like lavender from when she cuddled my soapy body in the tub; I hoped this wouldn't get me in trouble, and Lucy would have a good product to restore her original latex smell. I could sense a good scolding coming my way because of this stunt, but as long as Lucy didn't revoke my permission to bring pets home, it couldn't be too bad.\n\n\"Asha? ... Asha? Are you awake?\"\n\nI had time to get a coffee, breakfast and do some cleaning, but Asha was still asleep. It broke my heart to disturb something this cute, but I had no choice. If I didn't want to be late for work, I had to wake up the pet girl, feed her, and bring her back to the animal caf\u00e9. Anyway, Asha worked there, so assuming Lucy was paying her, so she had an obligation to fulfil.\n\n\"Asha... You have to wake up!\"\n\nI shook her shoulder a little bit, which triggered a long sigh. Then Asha turned her back to me and pulled the duvet over her head.\n\n\"You want to... sleep more?\"\n\nShe curled into the smallest, latex pet ball.\n\n\"I have to go to work... you must wake up... else I'm going to be late.\"\n\nAnother loud sigh came out from under the blanket.\n\n\"Ashaaa! Please!\"\n\n\"...\"\n\n\"Okay, then! Let's make a Leopard sausage.\"\n\nI climbed on top of the lazy pet and started wrapping her tightly in the duvet. She struggled a bit, but there was not much she could do to stop me with those soft paws pinned to her sides. Very quickly, I ended up with a small pet roll on top of my bed.\n\nI went to get her food and water and sat next to her.\n\n\"Breakfast time, Asha-roll. You are so cute... I want to keep you like this forever.\"\n\nShe had no other choice but to eat this time, and it went fairly well. Maybe Asha just didn't feel like going to work today, and I could totally relate to that as my workday would consist of preparing random items for shipping. I really didn't like this job; I was only doing it because that was all I found to pay the rent. They were kind enough to hire a girl who couldn't say two words in a row; I should be happy. That said, if I were a talkative girl stuck in a workplace where it was not allowed to talk, I would probably be even more miserable. There was always worse.\n\nAfter eating, I cuddled for a few minutes with the wrapped up pet, but then we had to move.\n\nWith her black hoodie on, Asha didn't attract attention nearly as much as Trixie did with her bright pink fur coat and giant ears, but still, we got a few comments; her rubber legs and tail were not something people were used to seeing.\n\nIt was only a ten-minutes walk, but it always felt longer when I was with a cute pet. Asha's arm was wrapped around mine, letting me guide her around. It almost felt as if we were a couple; she even leaned her head on my shoulder. I never knew what the pet girls thought precisely, but they always found a way to let me know they had a good time.\n\nWhen we arrived at the caf\u00e9, Lucy greeted us with her usual smile.\n\n\"Aaah, here you are! Almost late for work, Asha... I bet you overslept again. It's not nice to abuse Clara like this, you know. And... wait a minute... What's that smell... Asha, come here!\"\n\nUh oh! And me who thought she wouldn't notice.\n\n\"Asha? Why do you smell like lavender? Clara? What did you do to her?\"\n\n\"... I'm... I'm sorry.\"\n\n\"What happened? Did you put Asha in the tub with soap?\"\n\n\"... N\u2014 No...\"\n\n\"I told you that is not how we wash latex. Clara, those suits are costly. Why would you do such a thing?\"\n\n\"It was... Asha...\"\n\nI was in trouble... I couldn't find a way to explain to Lucy what had happened. All I could do was tremble and fear that she would revoke my permission to borrow pets.\n\n\"Are you blaming Asha for this? She wouldn't even be able to grab a soap bar with her cushioned paws...\"\n\n\"... No... but...\"\n\n\"Ah, it doesn't matter, Clara. I'm a bit disappointed. Listen, I don't know what happened, but it can't happen again. I can't have my pets smelling like flowers. You were responsible for her. At what time do you finish working today?\"\n\n\"... E\u2014 Eight o'clock... but...\"\n\n\"Good, then come back here right after. I need your help with something. And you, Asha, go to the bathroom upstairs right away. We need to get rid of that smell.\"\n\nThere was no room for argumentation. I lowered my head and walked out of the caf\u00e9. It was better to obey anyway if I didn't want Lucy to separate me from my friends.\n\n***\n\nThe day at work was long and painful. My mind kept drifting back to the animal caf\u00e9. It was more fun helping Lucy take care of her pets rather than work in this giant warehouse, packaging shoes and books for clients who had more money than me.\n\nWhen I arrived at the Pets & Cakes, Lucy was not at the reception, so I went right to the lounge since I now had access. As soon as I stepped in, Vix jumped on me.\n\n\"Vix!\"\n\nI walked to my favorite booth with her and sat down. Immediately, my cute fox girl straddled me and requested cuddles. I barely had time to react when Asha showed up and climbed on the seat next to me. Right away, I noticed something that took some of my nervousness away.\n\n\"Asha... You smell like before... Lucy managed to clean you?\"\n\nShe nodded and clung on me. Knowing that I had not permanently damaged her costume was a huge relief, I didn't know how much one of those costumes cost, but I certainly didn't have the money to have it replaced.\n\nAs I was slowly getting covered in rubber pets, Lucy entered the lounge and walked directly to us.\n\n\"Asha! Get off her! We talked about this already. You two are not touching again until your next shift. It will teach you both a lesson.\"\n\n\"...\"\n\n\"Don't worry, Clara, I'm not mad at you. But I have to protect my investment through a bit of discipline, right? At least I'm letting you play with all the other pets...\"\n\nThat was directed at Vix. The fox girl leaned on me some more and squeezed me tightly, obviously not wanting Lucy to take me away from her as well. I held the small fox girl in my arms and rubbed her back. Doing this also gave me some courage to ask a question that I had on my mind all day long.\n\n\"Lucy... you needed... help?\"\n\n\"Ah! So you remember what I said... Good. If you are up to it, yes, I have a favor to ask. Do you have a few hours in front of you?\"\n\n\"... yes.\"\n\n\"Good, I received a new costume, and I need to make sure it's fine. Unfortunately, I can't hire another pet girl at the moment. Would you mind trying the costume for me for an hour or two just to make sure there are no flaws?\"\n\nMy lungs automatically constricted, and I couldn't breathe anymore. I gripped Vix tightly, trying to keep my trembling in check. Did Lucy really ask me to wear one of her pet costumes? This was insanity...\n\n\"Hey! Calm down, Clara... It's not like I'm asking you to become a pet girl. I just need you to wear it for a short time, that's all. I just need to confirm to the seller that everything is good. A simple visual inspection won't be enough.\"\n\n\"...\"\n\n\"Would you breathe a little bit, please? You are turning blue.\"\n\nIt took me a little while and a lot of hugs from Vix to regain my composure and re-establish my oxygen level, but I managed to calm down. I still had no idea what to say or think, though. Wearing a latex suit was the last thing I expected when Lucy told me she needed help with something. She wanted to turn me into the thing I loved the most... a cute pet girl.\n\n\"So? Is it a yes? Plus, it will be useful for you to know how it feels to wear a pet costume. You'll realize how much you have to rely on people and why you would not want them to wash you with lavender soap.\n\n\"...\"\n\nI lowered my head, and shyly nodded. Vix was now bouncing on top of my laps; at least someone was excited about all of this.\n\n\"Alright then, come with me. Vix, do you want to come too?\"\n\nOf course, Vix wanted to come and watch the transformation. As a pet girl, she loved pet costumes and probably haven't seen that new one Lucy was talking about. She must have been over-excited to discover what critter would temporarily join her crew.\n\nLucy was emotionally disconnected from this. She made it sound like there was nothing to it, and it was just a formality, something that needed to be done. That said, Lucy always behaved around her pets as if everything was normal. Having critter girls roaming around the place was the equivalent of seeing waiters in a restaurant; nothing more natural.\n\nVix and I followed Lucy upstairs to a room I have never been to before. When I got in, I understood that it was the costume room, or the changing room, whatever was the most appropriate term.\n\nRight away, on a shelf, I noticed Trixie's costume, which turned my stomach upside down. It was as if I looked at a white rabbit that had its skin removed. I never thought I would see her empty costume one day. She probably ended her shift this morning and was replaced by Meeka.\n\nVix climbed on a stool to watch the show as Lucy pulled a cardboard box from the shelve and placed it on the table.\n\n\"Alright, Clara, take off your clothes!\"\n\n\"...\"\n\n\"Stop worrying, I've seen you naked, remember? Mind you, you had a few pets on top of you. You can turn your back to me if you prefer.\"\n\n\"... Okay.\"\n\nIt was not a bad idea. I turned around and started unbuttoning my shirt, but then Vix got off her seat and decided to stand in front of me. She had seen me naked... and even did sexual things to me... Plus, I saw her like an animal more than a human, so I didn't feel as embarrassed as I was when facing Lucy.\n\nWhen I took my shirt off, Vix extended her arms, asking me to put my clothes in her arms. The next item to pile up in her paws were my jeans... and socks... and bra... and panties.\n\nBefore I knew it, I was naked like a worm, which made Lucy giggle.\n\n\"Aww, you are the perfect size for the costume. I'm so jealous, I always wished I was shorter so that I could be cuter. Okay, close your eyes, I think I want to surprise you. Once we are done dressing you up, I will let you look at yourself in the mirror. You'll love it.\"\n\n\"...\"\n\n\"I'll take that as a yes. Vix is going to help you keep your balance... You don't have to do anything. I'll take care of everything.\"\n\nAs Lucy began to encase my legs in the suit, my corrupted brain was only worried about a single thing; what animal was she turning me into. It could be anything, really. So far, in her menagerie, she had three felines, one rabbit, a doggy, a fox and a raccoon. It was all over the place. I didn't have a chance to guess correctly.\n\nBut what would I like to be? I knew this costume wasn't mine, but still... What animal would represent me better? I didn't want to be a dog, but that was about it. For the beauty, I would love to be Asha... for the cuddliness, a fox like Vix would be nice. Red pandas were cute, but it was a bit of a stretch.\n\nWhen the rubbery suit covered my hips and reached my crotch, I stopped thinking about this; the excitement hit me hard. Lucy knew exactly what she was doing and noticed my anxiousness.\n\n\"You are doing really well, Clara. Keep your eyes closed and relax. You'll love it, I tell you. Now, place your arms inside the sleeves. You'll see, the paws are funny. There are three holes for your fingers, so you have to separate them as if you were a Vulcan, then your thumb will curl inside your palm.\"\n\nI had no idea what a Vulcan was, but I got the idea. I felt the two holes, in which I inserted two fingers each, then the third hole for my thumb, which, as Lucy said, made it curl under my palm. Somehow, it was mostly how I imagined it was going to be. All the padding rendered my hands useless.\n\nAfter my other arm went inside the sleeve, Lucy pulled the suit over my shoulders and zipped it up to my upper back, making me feel a notch sexier as my waist got slightly compressed.\n\n\"Alright, almost done. Only the mask to go. It's a little tricky the first time, but trust me, you'll find it very comfortable once it's on. Trust me, okay? All your pet friends love it very much.\"\n\n\"... Yes.\"\n\n\"Good. First, you have to bite in this mouthpiece. It's like the ones to protect your teeth when you do sports, but way more comfortable. And don't worry, it's all clean. Hehe.\"\n\nLucy pulled a corner of my mouth with her finger and inserted the mouthpiece. I didn't taste anything, and she was right, as soon as my teeth ended up inside the trenches, it was not annoying at all. But now I fully understood why the pets were not making any sounds; they were just not able to.\n\n\"Next, the nose tubes for breathing. It sounds scary, but it's not. You'll feel nothing outside being able to breathe better. I'll gently insert them now. Don't move and trust me. I've done this so many times.\"\n\nAs if I were going to move! I was way too busy trying to appreciate what was happening to me to even argue with anything. When I arrived here today, turning into a pet was the last thing I expected.\n\nI felt some tubes entering my nostrils, they felt larger than I had anticipated, but it didn't hurt at all. Lucy may have lubricated them with something first.\n\n\"Alright, I'll pull the mask on now, see you later Clara. Hehe. Just kidding, we won't leave you alone. Ready?\"\n\nIt was a rhetorical question, of course. Lucy pulled the mask over my face; the nose tubes went farther down my nose, at least it felt like it, and my head got fully encased inside the rubber mask.\n\nA wave of sexual pleasure washed over my body, only realizing now that this was one of my biggest fantasies, wearing a full latex suit. I trembled, but not out of fear this time. Before Lucy even finished to zip me up, Vix pulled me in a tight hug.\n\nI was so... happy!\n\nI finally opened my eyes, and through the smokey lenses, I saw the world from a pet's perspective.\n\n\"Aww! Clara! You are so cute! This suit fits you like a glove. Can you breathe okay? Can you see okay?\"\n\nI nodded.\n\n\"Aawww! She nodded. So adorable. Let me just test the locks now. They are just clipping on the zipper tabs.\"\n\nIt felt so unreal. I turned into a pet, and Lucy acted with me as she did with all the others. Because I was wearing an animal costume, it changed her attitude entirely. I was now wholly dependent on her.\n\nShe clipped one of the locks to my crotch zipper and another one behind my neck. Those were the flat little metal blocks that all the pets were wearing.\n\n\"Ah, you are so pretty. Trixie will be thrilled that I let you try her suit.\"\n\nWHAT? I looked at Vix, and her two paws went up to her muzzle as if she was laughing. When I turned to Lucy she was doing the same thing as if they had just pranked me. Was... I... in Trixie's suit?\n\nI looked on the shelf where her costume was earlier, and it was GONE!\n\n\"Haha! It is so funny. The box I pulled from the shelve was just full of crafting supplies. It was not a costume at all. Come! Come to the mirror... You'll see. You look amazing as a white rabbit.\"\n\nShe grabbed my wrist and led me to a full-length mirror. When I arrived in front of it, my heart skipped a beat. In the reflection was one of my favorite pet girls... Trixie. This animal wasn't me... But it was so cute.\n\n\"See? You are beautiful! As cute as Trixie. Hehe. But you know... I just wanted to teach you a gentle lesson. When you are a pet, you have to rely on your friends to keep you safe and prevent you from doing bad things. When Asha slipped in your shower, it was your responsibility to ensure it didn't happen. You should have leashed her somewhere first, even if that had made her grumpy. Leaving pets in a new environment without supervision is asking for trouble.\"\n\nI never told Lucy about the shower. Probably she got this info from Asha when she cleaned her suit earlier today. But now that she said that, Lucy was right. I have to be more vigilant around the pets to keep them out of harm's way. Lesson learned.\n\nI looked at my white paws, and there was not much I could do with them outside cuddling. \n\n\"So... Do you like it? The costume?\"\n\nI immediately nodded. Of course, I liked it. It was even better than I could have imagined.\n\n\"Alright, you two adorable things. Come to the lounge. I have another little surprise for you, Clara.\"\n\nAnother surprise? As if I didn't have enough yet. Vix and I went back to the lounge, but we had to wait for Lucy to let us in. When I entered the room, the other pet girls seemed to be very confused. Trixie was not working today, yet, she was in front of them.\n\nIt was impossible to tell which of the pets understood what had happened or not, but Lucy quickly explained what the deal was. And as soon as she did, all the pets converged to me and submerged me with touchy cuddles.\n\nAs I was lying flat on my back, a victim of all of the cushy paws, I couldn't believe how lucky I was.\n\nI was wearing the cutest rubber pet costume around all my friends. The surprise could wait a little longer."
    ],
    "authorname": "Tigerstretch",
    "tags": [
        "costume",
        "cute",
        "latex",
        "petgirl",
        "rubber",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/animal-cafe-ch-06"
}