{
    "title": "The Professors' Dildos",
    "pages": [
        "CAUTION: This tale is about two women fucking a man in the ass with dildos, and has an interracial aspect. All the participants are willing and all are over 18, and they all enjoy themselves, but if these kinds of subjects bother you, you probably shouldn't read this story. \n\n*\n\nOn the first day of the fall semester, Professor Patricia \"Dixie\" Dugan eagerly scanned the list of students scheduled to be in her Social Studies class. It was her last class of the day that semester and she was searching for one name, that of Jeremy Jones. He had promised to enroll in the class and she fervently hoped he had kept his word. Dixie had extremely fond memories of him from the previous year and, and she smiled to herself when she saw it\n\nProfessor Dugan stood up. \"Mr. Jones?\" \n\n\"Yes, Professor?\" As he responded, Jeremy rose from his seat in the back of the room. She was glad to see his smiling face, although she was much more interested in his ass.\n\nAs she thought of the fun things they had done together the previous term, the professor could feel moistness collecting in her pussy. \"There seems to be some kind of glitch in your registration. Can you come to my office when you have a chance, and we can clear it up? My new office number is on the syllabus I will be passing out.\" \n\n\"Okay, Professor. I'm free for the rest of the afternoon after this class ends, and I'll come to see you then.\" The thought crossed his mind that he expected to do some really good cumming in her office, and that the professor would too. \n\n\"Good. I'll see you there after class.\" She smiled at his double entendre, agreeing with it and hoping nobody else would catch on to it. \n\nProfessor Dugan passed out the schedules and other necessary papers to Jeremy and the others. She was eager to see him again and, since nothing much ever gets accomplished on the first day anyhow, she dismissed the class after talking to them for a few minutes about her expectations and requirements, including what she expected them to do in preparation for the next class. \n\nJeremy would be very happy to join the professor in her office. He also had memories, maybe even more pleasant than hers, of what had transpired there. He remembered her body extremely well, with her large breasts and shapely ass and delectable pussy. He remembered her surprisingly pretty face with her big, brown eyes. More than anything, he remembered her new dildo. It was longer and thicker than the first one she had used, and he had gotten some of the greatest pleasure of his life when she put it on and gave his ass the longest and best fucking it had ever gotten. \n\nHe waited a half hour before starting to look for the professor's new office, giving her plenty of time to get there and do whatever needed doing to prepare for him. Jeremy hoped she would have the same sofa there, the one he had leaned against while kneeling on the floor and reaching back to spread his ass cheeks. It took him a few minutes to find the right place and, after knocking on the door, he thought he heard two voices inviting him to enter. \n\nWhen he walked through the doorway, he saw the new office was larger, and the professor's desk was right in front of the entrance. \"Hello Dix...Professor Dugan,\" he greeted her. Jeremy had suddenly noticed another person, seated behind a desk by the far wall. The woman he had come to see had combed her long brown hair out of the tight bun she had worn in the classroom, and had taken off her boxy suit jacket. Jeremy wasn't sure, but he believed she had also taken off her bra. Even though she looked almost ready to start giving his ass a workout, he thought he'd better be careful in front of the new and unknown person. \n\n\"Hello, Jeremy. I'm still Dixie to you, at least in here,\" she responded. \"And this is Professor Sarah Black of the Women's Studies Department. We both hope you'll be calling her Sally.\" \n\nJeremy looked at Professor Black. She was a tall, very pretty young African American woman, with big, brown eyes, a clear, milk-chocolate complexion and short, black hair. Sally stood up and smiled prettily to acknowledge the introduction and he saw she was wearing a red jersey and blue jeans, both filled out very sexily. She smiled and greeted him by his first name. \n\nProfessor Dugan continued. \"Because of staffing changes, I had to move from my old office to share one with another professor. Sally and I are old friends, and we arranged to share this one. Although we are in different departments, we have similar interests. In fact, almost identical interests.\" \n\nSally smiled even more broadly. \"This is what she's talking about, Love.\" She reached into her desk drawer and pulled out a bottle of Aqualube and a strapon, almost identical to the one Dixie had worn a few months earlier, except that it had a big, black dildo protruding from the front. \n\nDixie continued. \"That's right. Anyhow, what we would like is to take turns with you, doing what you and I enjoyed so much the last time we were together in my old office. You don't have to if you don't want to, and it won't be held against you. If you prefer, Sally will leave and you and I can do what I think you came here expecting. Or, I can leave, and you can get better acquainted with Sally and her strapon. Or, you can turn around and just walk away, but I'm sure you came here for some more of the good fucking we shared last year.\" \n\nJeremy looked at the two women, and the choice was a no-brainer. Just from the sight of the big plastic cock protruding from Sally's toy, his ass was twitching in anticipation. Especially, he had noticed the molded pleasure bumps and remembered what those on Dixie's strapon had done for his prostate gland. His cock was already getting hard from the thought of two beautiful women taking turns fucking him, maybe a couple of times each. He hoped he would have a chance to eat the pussy of the one who wasn't behind him, pleasuring his ass with her dildo, and wondered how to broach that possibility. \n\n\"Ladies, it is the primary fantasy of every red-blooded American boy, including me, to have a threesome with two beautiful and sexy women. Let's do it! Who goes first?\" \n\nDixie got up and went over to the door to bolt it and pull the shade over the window. Sally also got up and Jeremy joined her in the middle of the room, where she hugged him. After letting go, Sally slipped around behind him and squeezed both his ass cheeks in her hands before hugging him again, this time from behind. She definitely was not wearing a bra. \n\n\"I'm sure you remember the sofa from my old office,\" Dixie pointed out, smiling at Sally's proprietary actions and hugging Jeremy from the front. When that embrace ended, all three of them stood, contemplating the sofa and thinking happily of what they were about to start doing on it and in front of it. \n\nDixie continued. \"I hope you don't mind, but we were pretty sure you would pick the threesome, so Sally and I flipped a coin before you got here. She won, so she gets to fuck you first. I hope you can eat my pussy while she's doing you, though.\" \n\nSally grinned and walked behind Jeremy again and resumed fondling him. One of her favorite sexual activities was fucking a man in the ass with her strapon, and Jeremy seemed to be perfect for it, short, rather chubby, with blonde hair, soft, fair skin and blue eyes. If she had placed an order with Central Casting, she would have asked for a young man who looked exactly as he did, and she expected to enjoy fucking him as much as her friend had described.\n\n\"Dixie has told me you have a really great ass. It feels pretty good but I can't really tell, with all these pants and things you've got on.\" \n\nCorrectly taking that as his cue, Jeremy stepped over to the sofa and started undressing. First, he sat down and took off his shoes and socks and set them on the floor in front of one end. Standing up again, he removed his jacket and shirt. Just as he was starting to unbuckle his belt, Sally put her hands on his to stop him. \n\n\"Let me, Love. I won you, fair and square, so I get to take your pants off.\" \n\nShe unbuckled his belt, unfastened the button on his waistband and unzipped the fly of his pants. Slowly and sensuously, Sally pulled the outer garment down to the floor, and knelt to pull the legs around his feet. Still kneeling, she smiled up at Jeremy, who was wearing only his jockey shorts, clearly showing his cock, which was stretching the fabric as he avidly thought about what would soon be happening. \n\nInstead of idly watching Sally undress the man they were going to be sharing, Dixie started matching her actions with her own clothing. She quickly divested herself of her white blouse and hung it over a chair back. As Jeremy had expected, she was not wearing a bra. She had certainly been wearing one in class but must have removed it after she returned to her office. As he admired her luscious breasts, she smiled at him and unfastened her skirt, but paused before removing it. \n\n\"I hope you like what you're seeing so far. You know what else I have for you.\" \n\nJeremy knew, alright. He had eaten many pussies and hers was one of the best. There had only been the one time, at their last session the previous semester, and all summer long he had been hoping for a chance to bury his face in the same soft and delightfully fragrant place. As he watched, Dixie let go of her skirt and it dropped to the floor, leaving her completely naked. Apparently, she had removed her shoes and stockings and all her undergarments while waiting for him to join her and her friend. \n\nAs Jeremy watched Dixie undressing, Sally got to her feet and stood off to the other side. Smiling lewdly, she crossed her arms in front of herself and took hold of the bottom hem of her jersey. With a quick motion, she peeled it off over head, letting her luscious breasts bounce as the thin material ceased restraining them. \n\n\"You like these?\" she asked, cupping the twin beauties in her hands. Jeremy grinned and nodded his head, and Sally smiled again. \n\n\"I have more to show you too.\" Deftly, she unbuttoned and unzipped her tight jeans and pushed them down to the floor. After stepping out of them, she kicked the pants aside and stood before Jeremy, as naked as Dixie. He realized that both women had taken off their shoes and stockings and all their undergarments while waiting for him. \n\nSally sauntered around behind him and held her lovely naked body against his back, hugging him around the waist and pressing her hard nipples against his skin. Jeremy loved the sensation, but he knew they would feel even better when he was kneeling in front of the sofa and Sally was leaning over him with her big, black dildo plunging in and out of his ass. \n\n\"Let's see what you're hiding under here, Love.\" She thrust her hands down the front of his jockey shorts and fondled his cock, which was erect and straining to get free. Sally reached in further and held his balls gently in one hand and wrapped the other around his erection. \"Mmmm, nice big cock,\" she murmured.\n\nShe released the stiff object of her admiration and separated her hands, moving one across each of his hip bones and around and down until they were cupping his smooth, plump buttocks. From there, she moved her hands together until they met, and used them to spread his ass cheeks. Her fingers moved to between the soft hemispheres and gently fondled the very sensitive puckered area there. Shivers of joy shot through Jeremy, from the soft touch of Sally's fingers and in anticipation of the fucking she would soon be giving him. \n\nShe wasn't through yet. Jeremy felt the tips of two fingers -- probably her middle ones -- at the sides of the hole that was the object of the women's lust. They spread the sides apart and the one on the right pressed against the opening that was being created. He was sure what Sally wanted to do, and he bent forward to help her finger gain entrance to his ass. The tip wiggled there briefly before pushing its way inside, followed by more of her digit, up to the second knuckle. He smiled and cooed his delight. Giving the young man a small sample of the greater pleasures he was soon to enjoy, Sally's finger fucked in and out of his ass a few times. Loving the sensation and wanting more, he squirmed and thrust his plump buttocks downward, as if trying to induce her pleasuring finger to penetrate him more deeply. \n\n\"You were right, Dixie,\" Sally said to her colleague. To Jeremy, she added \"Dixie said you had a really great ass, Love. Smooth and soft and hairless, and she was right. I can hardly wait to get my cock inside you.\" \n\nSally withdrew her finger but continued to caress the insides of Jeremy's ass cheeks for a few seconds before taking her hands out of his underwear. She put her thumbs back in the waistband and pushed down, working the elastic around his cock, which had gotten even harder as a result of Sally's fondling it and finger-fucking him. Once the shorts had cleared his ass, she let them go. They fell down around his ankles and Jeremy stepped out of them and kicked them in the direction of his shoes and socks. All three of them were equally naked and looking forward to a wonderful afternoon of sex. \n\nOnce she knew Sally's foreplay had ended, Dixie walked over to the sofa, sat down, and scooted forward so her pussy was hanging over the edge, ready to share pleasure with Jeremy's mouth. He knelt on the floor and walked on his knees to where her legs were spread and waiting for him. From what she had seen and heard already, and what she knew she would be seeing and hearing and doing, Dixie was in a high state of arousal. She raised her legs and, when he leaned forward, placed them on the young man's shoulders. He responded by wrapping his arms around her thighs until his fingers met in her soft pubic hair, and leaning forward to lick up some of the fragrant juices that were trickling out of her pussy. They tasted even better than he remembered. \n\n\"Have fun, kiddies. I'll be right back with The Big, Black Bull,\" Sally remarked, as she walked over to retrieve the Aqualube and her strapon from where she had left them on her desk. \n\nHolding the toy so the dildo was bouncing up and down in front, she stepped into one leg hole, then the other, and pulled the straps far enough up so the other dildo, also big and black and covered with pleasure bumps, was just touching the lips of her pussy. After playing with Jeremy's ass, Sally was extremely wet, her juices running down her thighs, so she reached between her legs to push the tip of the dildo inside her pussy. \n\nWith it started in place, she pulled the straps the rest of the way up and adjusted the clit spur so it would be in a position to do her the most good. The toy was not imbedded all the way inside her, and the spur was not yet against her clit, but they would be adjusted when Sally began fucking Jeremy. The toy had come equipped with two spurs, but Sally had removed the one from the dildo that would be fucking Jeremy. She pushed his legs wider apart and knelt between them so she could prepare his ass.\n\nDixie saw her colleague's preparations but Jeremy was looking away and concentrating on the pussy in front of him. He drew his face back to gaze on it, finding it to be truly a thing of beauty, surrounded by soft, curly brown hair, and possessing lips that were swollen with lust and blossoming through her slit. The blossoming petals surrounded her adorable pink hole that he knew to be the source of those delicious juices. At the upper end of her engorged lips, he could see her precious clit, also swollen, and pushing its way out from under its protective hood. After admiring the sight, aroma and taste of Dixie's pussy, Jeremy was about to bury his face there, when he felt Sally's hands spreading his ass cheeks and her voice interrupting his thoughts. \n\n\"Quit hugging Dixie's legs, Love, and reach back here and open your ass for me. The Bull and I are about to give you the best fucking you have ever gotten.\" \n\nAlthough he was reluctant to delay eating a pussy as lovely as Dixie's, Jeremy was also eager to get Sally's big dildo imbedded deep inside his ass. He released his hold of the legs that continued to frame his face and reached back to spread his ass cheeks as Sally had requested. His tongue continued caressing one of Dixie's delectable pussy lips, but he concentrated more on helping Sally with what they both wanted her to do. \n\nThe first thing he felt was the familiar neck of the bottle inserted in him and, immediately after that, the equally familiar rush of the cool lubricant. This was followed by Sally's finger inside him again, but this time she was behind him and could drive the digit all the way in to her knuckles. She took her time spreading the Aquaglide, fucking her finger in and out of his ass and giving him a better foretaste of the extreme pleasure that he knew would be following momentarily. \n\nSally had applied the lube to her dildo right after putting it on and, with Jeremy ready, she once again put the tips of her middle fingers on either edge of his ass to pry open a small hole. She pressed the tip of the dildo against the opening being created and, with a firm push, the head of The Big Black Bull wedged inside Jeremy. Waves of intense pleasure washed through his body from the place of entry, and he murmured happily. It had been almost three months since he had felt a dildo spreading open the rim of his ass, and it felt even better than he remembered it. Best of all was his knowledge that the pleasure would quickly become much greater. \n\nIt became better immediately. While he and Sally held his ass open, she gave another thrust, and almost an inch of thick plastic cock plowed into him. He moaned from the incredible pleasure the toy was giving him and, the next time he felt Sally's dildo start to burrow deeper inside, he thrust his ass back to meet it, taking in almost three more inches. Besides stretching the opening and the connected channel the way they hadn't been stretched in too long, the molded bumps on the shaft of the toy were starting to massage his prostate gland, saturating his body with a new kind of delight. Intense pleasure throbbed through him from the path of the dildo, making him writhe in bliss. As wonderful as it already was, he wanted more. \n\n\"Give it to me, Sally. Give me all you've got.\" He arched his back downward, raising his hips and presenting an even better target to the woman who had started to fuck him. His ass squirmed in front of her, helping Sally do what he wanted, which was what she very much wanted also.\n\nShe laughed at his eagerness. \"You really like this, don't you? That's good because it makes it even more fun for me.\" With her hands on the young man's hips for leverage, Sally thrust forward again, and again and again, until almost the entire length of her big dildo had found a home in Jeremy's very hospitable ass. \n\nShe ran her hands all over his cheeks again, including the smooth insides, and leaned forward to grip his shoulders and press her erect nipples against Jeremy's back. \"I really love your ass, Jeremy. We're gonna have us a lot of fun today.\" Sally put her hands back on his soft, white hips and began to fulfill her prediction. \n\nWhile his ass was being crammed full of the plastic cock, Jeremy had paused in eating Dixie's pussy. After the dildo started surging all the way in and being slowly withdrawn, only to plunge back into him again, his tongue returned to fondling the swollen labia before him. Her pussy was squirming in front of his mouth so, to keep her in position, he once again wrapped his arms around Dixie's thighs. As wave after wave of three kinds of pleasure inundated his body from where Sally was working her toy, a fourth kind, delighting all his senses, swirled outward from where his face was pressed against Dixie's marvelous pussy. ",
        "The women were truly delighted at was happening to them too. It had also been three months since Dixie's pussy had been eaten as well as Jeremy was eating it, and her reactions were predictable. While his agile tongue slowly worked its way upward, caressing an outer and an inner lip and probing between them, she moaned blissfully. Her pussy was involuntarily fucking up against his mouth, and she could see Jeremy's forehead and the bridge of his nose rising and falling as he stayed with her, keeping his face tightly pressed where they both wanted it. \n\nWhen he reached her clit, she hoped he would lick and suck her there, and bring her to an orgasm. However, he wasn't ready just yet and, although his tongue did stroke across her clit hood a few times, it returned to its starting point and scooped up all the juices she had just produced. Although a bit disappointed, Dixie remembered how Jeremy had eaten her pussy before, prolonging the pleasure until bringing her to a tremendous climax. She hoped he would do the same thing again. \n\nSally was also building slowly to an orgasm. Slowly, and with long strokes, she drove her dildo all the way into Jeremy's perfect ass and drew it back out again. Every time one dildo plunged inside the young man, the other moved inside Sally, with the cleverly-designed bumps stimulating all the sweet spots in her pussy while the vinyl fingers of the spur raked across her clit. She was immensely enjoying what she was doing and wanted to take a long time before cumming. Dixie had told her that Jeremy liked a long, slow fuck too, and she wanted to give him as good a time as she could, while having as much fun as she manage to get. . \n\nSometimes she leaned forward, holding the young man's pudgy shoulders in her hands, rubbing her nipples against his back and telling him what a great ass he had and how much fun they were going to keep having for the rest of the day. Sometimes her body was straight up and down, with her hands pulling against his hips while she drove the dildo in as deeply into his ass as she could, so far that her thighs kept ending up pressed snugly against his cheeks. Whatever stroke she used, Jeremy fucked back to meet her, and she could feel the toy inside her pussy doing exactly what it was designed to do. Sally knew her climax, when she finally let it happen, would be one of her best ever. \n\nAfter licking all the fresh nectar from Dixie, Jeremy started at the bottom of her second pair of lips. Slowly, reveling in the way she was thrusting her pussy against his face, he licked his way back to her clit hood and let his tongue caress her there for a few strokes. Dixie looked and smelled and tasted and felt just as good as he remembered. \n\nShe sounded as good too. \"Suck my clit, Jeremy. Make me cum!\" she interrupted her moans and whimpers of pleasure to beg him. \n\nShifting his knees slightly, Jeremy probed his tongue against the small area between her dripping love hole and her clit, which had, by then, pushed its way completely clear of its protective hood. He wrapped his lips around the succulent morsel and gently fondled it with his tongue. Using his lips as a seal, he started gently sucking, while continuing to lick the swollen sides and top. The movements of Dixie's body became even more frenetic, actually lifting her ass off the sofa while she rammed her pussy into the face of the man who was eating her out so skillfully. \n\nOh! I'm cumming,\" she blurted. Her hands went to the back of Jeremy's head and pressed down, jamming her pussy against his face, while her thighs squeezed his temples. Dixie's ass rocked from side to side and back and forth on the sofa, while Jeremy kept a tight grip on her legs and continued licking and sucking her clit. \n\nWhen she saw and heard her friend starting to cum, Sally drove her dildo all the way into the soft, white ass she was fucking, and left it there while she leaned forward to enjoy the erotic sights and sounds. The thrashing of Dixie's body on the sofa yanked Jeremy around, moving Sally's dildo inside his ass, sending bursts of pleasure through him from everywhere it touched. The same movements caused the other dildo to jerk inside Sally's pussy, giving her another kind of pleasure as the molded shapes massaged all her many sweet spots, \n\nDixie may have been getting the most pleasure of all, though. While Jeremy's mouth continued working over her clit, she rocked from side to side and back and forth, barely staying on the sofa. Abruptly, with a joyous and incoherent cry, she climaxed, arching her back and jamming her pussy against Jeremy's face. After her orgasm, her hands released their grip and flopped at her sides, while her legs relaxed just as much, but remained draped over the shoulders of the young man who had done such a great job of eating her pussy. \n\nThat same young man took his reward, licking all the delicious juices off Dixie's legs, crotch, lips and everywhere else they had spattered during her gyrations. Although it was difficult to pass up the treat, he left some inside the pink hole that had been their source, knowing they would be needed for lubrication when Dixie inserted the dildo into herself, as part of her preparation before fucking him with the other part of her strapon. \n\nWhen he was through, he smiled back at Sally, his face smeared with the juices his tongue hadn't been able to reach. She smiled back, and straightened up. She had liked watching and hearing her friend climax, and believed it would be her turn next. Sally resumed fucking Jeremy with the long, deep strokes that both of them love so much. He concentrated on the exquisite pleasure flooding out to saturate every part of his body from the course of the long, thick dildo that was being driven in and out of his ass. \n\nWhen Sally is being fucked, either by a cock or a dildo, she likes the kind of strokes that she assumed, correctly, that Jeremy would like. However, the dildo in her pussy, and everything else she had seen and done that day, had driven her level of pleasure so high that she knew her climax was near. She had fucked many men the way she was doing to Jeremy, and always left it up to him to take care of his climax, usually by masturbating. Without really thinking much about it, that was what she expected to happen that day, preferably with both of them cumming at about the same time. \n\nWith her back straight and her hands firmly holding Jeremy's hips, she started fucking him faster, still plunging the dildo all the way into him with every stroke. His hands were on the sofa, on either side of Dixie, and he used them to push back to meet the Big Black Bull as it surged into his ass. Leaning back, smiling and relaxing and watching the others, Dixie regained her strength after her orgasm. She had immensely enjoyed having Jeremy eat her pussy, and she wanted to do something for him, in addition to fucking him after Sally finished. \n\nDixie remembered the last time she and Jeremy had gotten together, just before finals in the previous semester. She had masturbated him that time, and had licked his semen off her fingers, finding it quite tasty. Dixie decided to go a bit further to start the new college period, and suck him off while Sally was fucking him. Being careful not to kick either him or her colleague, she pushed herself to the back of the sofa and swung her leg over his head. After climbing off the sofa, she slid on her back under Jeremy, opened her mouth wide and, with one motion, enveloped his cock. \n\nThe three of them quickly developed a rhythm. Jeremy fucked back to meet the strokes of the Bull every time Sally pounded it into his ass. As he did, Dixie withdrew her mouth until just his cock head was still inside. When Sally withdrew the dildo for another long, deep stroke, Jeremy moved forward, and Dixie moved her face to meet him and engulf his cock in her mouth again. She could feel it throbbing already, and knew the young man would be cumming momentarily, and placed her tongue to catch his semen when it started squirting. \n\n\"Uh! Uh! Uh!\" Sally whimpered, in time with the thrusts of her plastic cock into the chubby blonde man's ass and the corresponding movements of the other dildo in her pussy. The spur on that second part of the toy raked her clit with every movement she made, and Sally knew she was less than a minute from starting to cum. Eager to reach that glorious point, she started fucking Jeremy faster and harder, and he and Dixie matched her increased pace. \n\nThe big toy driving in and out of his ass and Dixie's lips caressing his cock had the desired effect on Jeremy. \"Uh!\" he grunted, and climaxed, filling one professor's mouth with his semen. The other professor didn't stop, nor did he, nor did Dixie. He kept fucking his ass back to meet the dildo that was filling it so gloriously, and Sally continued pounding it into him. She wanted more of his cum, so Dixie moved her lips back and forth on the cock that had just given her a taste. Jeremy obliged her by pumping two more gobs onto her tongue, which she savored and swallowed. \n\nThat part of the Big Black Bull that was filling Sally's pussy and massaging her clit was doing its job also. \"Ah!\" she cried ecstatically as she started cumming. \n\nHer movements were more erratic, but she didn't stop or slow down, but rammed one dildo in and out of the plump white ass in front of her, while the other dildo bounced around inside her pussy. \"Oh! Oh!\" she warbled joyfully as she climaxed, her back arching, while she drove the twin toys home for a final time. After her orgasm, she leaned forward on top of Jeremy's back, leaving both dildos buried all the way in the places where they had given so much pleasure. \n\nAfter squeezing as much semen as she could from Jeremy's cock, Dixie was the first to move from the tableau of sexual joy. She remained on her knees and moved over to see how Sally had enjoyed her first session with the young man's chubby ass. Still leaving the toy in place, her friend turned her head toward Dixie and smiled. She had obviously just done some of the best fucking in her experience. Sally would be moving out of the way in a few minutes, partly because she very much wanted her pussy to be eaten by Jeremy, and partly to give Dixie a turn with the young man's superb ass. \n\nThe owner of the object of their lust had no wish to stop either. Sally had just finished giving him some truly great fucking, as good as anything that Dixie's strapon had ever done, but he wanted more. Jeremy was also really looking forward to eating the pussy of the sexy African-American, especially knowing how juicy it would be to start. He knew that his cock would become hard again during the fucking and pussy-eating, and hoped one of the women would either suck him off or masturbate him. If he had to take care of his own needs, however, he was more than willing. \n\n\"Dixie, you were even more right than I would have thought. This is the best ass I have ever gotten into.\" Sally was fulsome in her praise of Jeremy. \n\nShe addressed him then. \"I hope you'll do the same thing for me as you did for Dixie.\" \n\n\"Of course. I want to eat your pussy just as much as you want me to eat it. Maybe even more.\" \n\nDixie went to her desk to retrieve and prepare her strapon, while Sally slowly pulled The Big Black Bull from the two holes it had just finished cramming. Still naked, with juices running down both her legs, she stepped over to the sofa, and sat on the edge, placing her pussy in a position where Jeremy's mouth could most easily reach her. After having straightened up and squatted back on his heels to get out of her way while Sally was settling into the sofa, he got back onto his hands and knees and leaned forward to gaze raptly at the pussy he was about to start eating. \n\nIt was truly a lovely sight, either waxed or shaved, apparently that morning. The clear, brown skin contrasted beautifully with the dark pink lips. They were shiny with her juices and so swollen they had pushed their way through her slit. Sally's precious clit was engorged as well, and had also crowded its way into view, peeking out from its protective hood at the juncture of her inner lips. To Jeremy, it looked much like a lovely pink pearl, but larger. \n\nSally raised her legs, and Jeremy ducked under them, so they rested across his shoulders and moved in still closer. He wrapped his arms around her thighs, letting his hands met on her hairless mons, and moved his fingers down to spread her lips, letting him peer into the delectable pink hole that was the source of the juices that covered her thighs, belly and her entire pussy. An incredibly fragrant cloud arose to delight him further. \n\nAfter reveling in the aroma, Jeremy licked some of the juices from Sally's soft, brown thighs. They were just as delicious as Dixie's had been, with a slightly more earthy flavor. He greedied on all of her nectar, licking it from everywhere it had collected, until he had cleaned it all off, before his tongue started to caress one of her satiny outer lips. Jeremy had just barely started when he was pleasantly interrupted. \n\nHer soft hands on his hips told him that Dixie was ready to start fucking his ass, so he unwrapped his arms from Sally's thighs and reached back, spreading his cheeks to help her make the deepest penetration possible. The hole she was aiming at was still stretched open from the great reaming he had already gotten from Sally's strapon, and there was still plenty of lubrication inside. He delighted in the erotic sensation of the tip of Dixie's toy being rubbed against the edges of his distended pleasure hole, spreading the leftover lubrication more evenly, but he moaned aloud from the infinitely greater pleasure of her ramming its wide head into his ass. \n\nAlmost three inches surged into him from Dixie's first thrust, and it immediately started massaging his prostate every bit as well as Sally's toy had. He bowed his back, raising his hips and presenting his ass even better for the fucking Dixie was starting to give him. After a series of thrusts, the whole toy was buried deep inside where it was desired, stretching the opening again, expanding the attached channel and, best of all, raking his prostate gland with the cleverly designed pleasure bumps. Her hands were still resting on Jeremy's hips and he felt them pressing against him, and felt the dildo being slowly pulled back. The withdrawal stopped when just the head was still inside his sphincter; Dixie paused very briefly, before starting to drive her toy slowly back into him. Jeremy moaned again, at the huge waves of pleasure swirling through his body from the same three places, and fucked back to meet the very welcome intruder. \n\nDixie's next stroke into his ass felt even better, as did the next and the next. He hadn't forgotten about Sally; no man could forget about the delectable pussy waiting to be eaten. Since he no longer needed to hold his ass open, he again wrapped both his arms around her soft brown thighs, and buried his face in the wet fragrance while his tongue resumed its journey up her smooth outer lip. \n\nSally had started to get slightly impatient, but it stopped when Jeremy finally resumed eating her pussy. She was aware that the pause had been while her friend was driving her dildo deeply into the young man's ass, but his tongue had already felt so good that she wanted him to continue. Fortunately, any pique she might have started feeling totally disappeared when his tongue was once more doing what she loved so much. The pleasuring organ meandered up one outer lip, sending joy rippling through her body, and it continued all the way to her soft mons. Seconds later, her other outer lip was receiving the same treatment, and she moaned from the exquisite pleasure, and felt her pussy starting to involuntarily thrust against the face of the man who was providing it to her. \n\nIt got even better after Jeremy had licked all the way to Sally's mons a second time and started back again. She felt his tongue probe the very soft and sensitive area between the origins of an inner and an outer lip, and continue to where the labia are close together. As she watched, his head tilted slightly to one side, and she started feeling his tongue thrusting into the seam between the lips. Very slowly, the giver of carnal delight worked its way up between the labia, licking both of them, until it reached the end of the inner one. Jeremy raised his head then, and looked at her, grinning, with her fresh juices smeared all over his face. He didn't pause more than a second, before his tongue once again resumed giving Sally's pussy some of the greatest thrills of pleasure it had ever experienced.\n\nDixie was getting thrills of a different kind. Her hands rested on Jeremy's pudgy hips, and she slowly thrust her dildo in and out of his ass, burying it to the hilt every time. With every stroke she made, he fucked back to meet her, their combined movements yanking the toy around inside her pussy and massaging all her most sensitive places. She was aware that many men, maybe even most of them, would be squeamish about having a woman use a strapon on their asses. They might even consider it to be \"queer\" to enjoy such an activity. Dixie could understand their point, but she saw nothing \"queer\" or even at all perverse about a man and a woman enjoying sexual fun together. \n\nJeremy had been reluctant that first day too, and she had extorted him into submitting to it. The escapade had been so much fun for both of them that they had become regular sex partners for the rest of the semester, and this term was already starting out even better. Her orgasm from his eating her pussy had been the best one for her since the last time he had visited her office, and she could feel her part of the toy slowly bringing her closer to another one that might be even better. She leaned slightly to one side and noted that the young man's cock was erect again, and surmised that he would probably be cumming again also. She wondered if Sally would suck him off as she had. \n\nJust then, Sally wasn't thinking about what she was going to do about Jeremy's cock, although she had admired it earlier. All her attentions were focused on her climax that was only seconds from starting. After thoroughly licking between one pair of inner and outer lips, he had done the same for the other, until she was ramming her pussy up against his face. \n\n\"Make me cum, Jeremy\" she implored him. \n\nWith no hesitation, he moved his face higher and his mouth engulfed the swollen clit that was being offered to him. With his lips forming a seal at the base, he sucked in the same rhythm as Sally's pussy was humping up against him. His arms kept their tight grip on her legs as his tongue continued with its caressing the adorable morsel. For a few seconds, she rocked from side to side, before giving out a joyous cry. \n\n\"Ah!\" she cried. \"Yes! Yes!\" \n\nSally's legs squeezed Jeremy's head and her arms flailed aimlessly against the sofa cushion while she bounced up and down on her ass, ramming her pussy against his face. Jeremy kept his tight grip on her thighs and kept Sally's clit securely inside his mouth while he sucked and licked the delectable morsel.\n\n\"Oh! Oh!\" she crooned while in the throes of cumming. Abruptly, Sally gave a loud but incoherent cry, as her back arched, all her muscles tensed, and she rammed her pussy into the face of the man who had just brought her to a glorious orgasm. Totally relaxed, her legs still draped over Jeremy's shoulders, Sally sagged against the back of the sofa, while the young man claimed his reward by feasting on her fresh juices. \n\nWith his mouth no longer fully engaged, Jeremy could concentrate on the excruciating pleasure Dixie's strapon was giving to his ass. From her irregular breathing and the erratic way she was moving behind him, he knew she was close to an orgasm also, and his own cock was badly in need of being sucked or pumped. ",
        "When Dixie saw that Sally had climaxed, she started fucking Jeremy harder and faster and building even more rapidly toward her own orgasm. He no longer needed to cling to Sally's thighs, so he placed his forearms against the sofa and pushed back to ram his ass back to meet her just as fast and just hard. The dildo in her pussy matched their pace and its molded pleasure bumps did the job they had been designed to do. \n\n\"Oh, god! Oh god! I'm cumming!\" Dixie cried out joyously, and she started moving even faster, ramming the plastic cock in and out of Jeremy's ass, intensifying his joy. \n\n\"Keep fucking me! Keep fucking me!\" he implored her. As he jammed his ass back against Dixie's toy, his cock swung from side to side and back and forth. When he tried to grab it to start stroking it, he almost fell over, but he very badly needed the release of a good climax. \n\nSally came to his rescue. Knowing what was needed, she quickly scrambled off the sofa, lay on her back with her head turned and slid toward the needful cock with her mouth open. Dixie, aiming for a tremendous orgasm, was pounding her dildo into Jeremy's ass so hard that, even when he fucked back to meet her, the force of her thrust drove him forward. His cock slid off Sally's forehead and off her cheek but, with Dixie's next hard stroke, it plunged perfectly into her mouth where she wanted it. \n\nHer lips closed firmly on his shaft, but not so tightly that it couldn't be drawn back out when he fucked back to meet the dildo the next time it surged into his ass. Her mouth released his cock and took it back in when the force of Dixie's thrust drove him forward again. They continued like that for almost a minute, one professor plowing her strapon into Jeremy's ass and driving him forward so he was fucking the other professor in her eager and willing mouth. \n\n\"Ooooahhh,\" Dixie cried, loudly and joyously as she climaxed, driving her dildo even more deeply into the ass that wanted it so much. \n\nAfter her orgasm, she sagged forward on top of Jeremy's back, with the entire length of her dildo buried inside him. He didn't want to stop, so he continued thrusting back at her, fucking his ass on Dixie's plastic cock, followed by driving forward to cram Sally's open mouth with his own hard shaft, while she moved her face forward to envelop it. \n\n\"Uh! Uh! Uh!\" Jeremy grunted, each guttural sound accompanied by alternately stuffing his ass and Sally's mouth. He climaxed, like a great explosion of ecstasy, and released a big gush of cum into the mouth that avidly accepted it, but Jeremy still didn't stop. Three more times, his cock and Sally's mouth came together, and he ejaculated more each time. When he was through she savored the big mouthful he had just given her, and swirled it around in her mouth before swallowing it. \n\nThey lay like that in the professors' office, Jeremy's cock slowly softening in the warm wet place that had made it so welcome, and Dixie's dildo buried so far in his ass that her thighs were squashing against his buttocks. The Big Black Bull had performed its usual outstanding service, and it was off to the side, ready to be used again if wanted. \n\nJeremy, for one, did want it. \"Ladies,\" he announced after a few minutes of rest. \"I have suffered all the way through the summer without getting my ass crammed even once by a beautiful woman, and I have missed it sorely. It's been a great day already, but I hope we're not through yet. I would really love to have both of you take another turn fucking me, and I would also love to eat both your beautiful and delicious pussies again.\" \n\nDixie was still sprawled across Jeremy's back, but she leaned to the side to look at Sally, who looked back at her. \"I'm ready for more if you are,\" she said. \"But I need to rest a few more minutes.\"\n\nSally grinned and carefully removed the sticky shaft from her mouth. \"The Big Black Bull never gets tired, and he's always ready for more, and so am I, now. It's my turn, though, as soon as you get your big tool out of him, Girlfriend.\" While waiting, she slipped Jeremy's cock back into her mouth to catch, savor, and swallow the rest of the cum that was oozing out as it softened. \n\nEverybody was happy about that, and nobody disagreed with her. It was only the first day of the Fall Semester, and the college year was already off to a fabulous start. \n\nThank you for reading this story. I hope you had as much fun as Jeremy and Dixie and Sally did, and expect to continue having that day and all during that semester and beyond. I like writing stories on Literotica, but I like it a lot more when I know that people are reading and enjoying them, and I appreciate it when readers take the time to express their opinions by voting. Like most authors on Literotica, I practically live for feedback from readers, either public comments or email to me. Such feedback, whether praise or criticism, helps me to write more and better stories, and I respond to it whenever I can. "
    ],
    "authorname": "Boxlicker101",
    "tags": [
        "strapon",
        "dildo",
        "threeway",
        "professor and student",
        "eating pussy"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-professors-dildos"
}