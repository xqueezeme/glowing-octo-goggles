{
    "title": "A Trial in Vennington",
    "pages": [
        "\"Bring him out!\"\n\nGary Garrett quaked beneath a black hood. His hands were bound together behind his back by some kind of plastic tie.\n\nWho were they? Al Qaeda? ISIS? The IRA?\n\nWas the IRA even a thing anymore?\n\nWhat did they want with him? He was a nobody. He worked as a community manager for one of the smaller DoTA-type online games. The job didn't pay particularly well, but it allowed Gary to work in an area he loved.\n\nHe'd been walking home from the bus stop when a van had pulled up alongside him, masked men had jumped out, shoved a hood over his head and bundled him inside. He hadn't even got a glimpse of their faces. After a short drive Gary had been shoved out and left in a small room with a bare concrete floor for what seemed like hours.\n\nGary was pulled, roughly, to his feet and led outside. The hood was taken off his head and almost took his spectacles with it. They snagged on the rough fabric, but only slid a few centimetres up his forehead before dropping back into place on the bridge of his nose.\n\nIt was night time. A blood-red moon hung above them in a cloudless sky. He was standing in the yard of what appeared to be a disused farm. The surrounding buildings were ramshackle and moss-encrusted, as if the farm had been in a state of disuse for some time. The yard was lit up by a ring of burning torches.\n\nGary didn't know what to make of his captors. They definitely weren't ISIS. He counted seven of them\u2014two women and five men, although it was harder to determine with the men as all five wore dark clothing and black bandanas over the lower half of their faces. They looked more like student activists than terrorists. The two women made no attempt to hide their faces. One looked an obvious radical student feminist\u2014right down to her bright red hair and horn-rimmed spectacles. The other girl also had dyed hair\u2014light blue in her case\u2014but had chosen more eclectic attire. She wore a long white leather trench coat and looked like a mashup between gothic spy and urban warlock.\n\n\"Do you know why you're here?\" the woman with red hair asked.\n\nGary shook his head. He looked around. Other than the blue-haired girl in the white trench coat his captors looked like the same sort of people he'd seen on YouTube videos of campus demonstrations, the sort of people that claimed to be liberal and yet pulled fire alarms and blocked entrances to prevent people they didn't like giving talks at universities. It couldn't be them, though. Those campus activists might be extremists, but surely they weren't extreme enough to yank people off streets in broad daylight.\n\n\"You, Gary Garrett, are to face trial for your crimes against feminism,\" Red informed him.\n\nWhaaat? Gary gawped at her. He would have laughed out loud at the silliness of it had he not been so terrified he'd already wet himself.\n\n\"You are a member of GamerGate, that vile online misogynist hate movement devoted to driving women out of the games industry and off the internet.\"\n\nGary opened his mouth to speak.\n\nRed pushed out a hand to interrupt. \"Don't try to deny it,\" she said sharply. \"Your Twitter handle is @TheMagnificentGGG and you post on Reddit as GaimerGaryGarrett. We have your posting history for the last six months. We know you were at the GamerGate meetup last night.\"\n\n\"I wasn't going to deny it,\" Gary said. \"Yes, I'm pro-GG, but it's not what\u2014\"\n\nRed held up a hand. \"Stop!\" she said.\n\nShe looked around at the other goons with a smug smile on her lips.\n\n\"Anyone want to finish for him?\"\n\n\"Actually, it's about ethics in videogames journalism,\" one of the goons mocked in a silly voice. It was followed by snerks and sniggers from the others.\n\nYeah, he'd walked right into that one, Gary thought.\n\n\"I haven't harassed anyone,\" he said. \"I only started posting in support of the tag because I was fed up with the gaming press constantly shitting on its audience.\"\n\n\"Aw diddums,\" Red said. \"Did the straight white man with all the privilege in the world get his fee-fees hurt?\"\n\n\"Um, you do realise this is kidnapping,\" Gary said. \"I'm pretty sure that's still a fairly serious crime. You could all go to prison for this.\"\n\nRed's face twisted in a snarl. \"We do not recognise or acknowledge your patriarchal system of abuse and oppression.\"\n\nGary watched with a wide-eyed mix of both astonishment and horror.\n\nThey were mad. Not just extreme. Mad.\n\nHe'd had the misfortune of running into people like this on the internet before. Everyone called them Social Justice Warriors, or SJWs for short. It was a label meant to be ironic on both counts. They were only interested in social justice in as much as it gave them a convenient club to bash people with and an equally convenient shield to deflect criticism when others tried to call out their bullying and harassment. Thankfully\u2014like the Keyboard Warrior meme they were descended from\u2014their 'warrioring' was mostly confined to getting angry and shouting at people on social media. Until now... \n\nSomeone gave Gary a solid kick to the back of his legs. He buckled and fell down to his knees.\n\n\"GamerGate has gone on too long,\" Red said. \"The authorities won't do anything about it, so we've been forced to take matters into our own hands. Your harassment and women hating must stop.\"\n\n\"But I don't hate women,\" Gary protested. \"There are two girls on my regular League of Legends team. One of them even taught me how to get good.\"\n\nSomeone hit him on the back of his head. It was an open-handed slap rather than a full-blooded punch, but it still rattled his brain inside his skull.\n\n\"We do not use girl!\" Red roared. \"Girl is a diminutive used to deny full-grown women the respect they deserve.\"\n\n\"Um, she's like fifteen,\" Gary said. \"And she hates anti-GG even more than I do.\"\n\nHe was struck again. This time it was a closed fist. It knocked his head to the side and left his glasses resting lopsidedly on the bridge of his nose.\n\n\"You deserve this, GamerGate scum,\" Red said.\n\n\"I haven't harassed anyone!\" Gary wailed.\n\nRed wagged a finger at him. \"There's no point lying, Gary Garrett. We did our research.\" She picked up a tablet computer from the low wall next to her. \"Your history of crimes against women goes back further than GamerGate. We know all about the woman you raped back at university.\"\n\nThis. Again? Inwardly he sighed. Was he ever going to be free of it?\n\n\"If you've read your research you'll know I didn't rape her,\" he said.\n\n\"I'm sure you didn't,\" Red snarked. \"I'm sure it was all a big misunderstanding and you really thought she'd consented to having sex with you.\"\n\n\"No, I didn't rape her as I wasn't in the same part of the city where the assault took place. I was playing Magic in the student union bar all night. There's CCTV footage. It's in the court documents and why the case was thrown out. You'd know this if you'd read them instead of just the newspaper headlines.\"\n\nIt wouldn't matter.\n\nRed scowled and put the tablet aside. \"I don't need to read them to know they're the typical lies put out by the patriarchy.\"\n\nIt was the same with every SJW he'd attempted to reason with online. The moment they were given a fact or piece of evidence that didn't agree with their carefully cultivated and blinkered worldview it was all block, block, block. He might as well debate a brick.\n\nThis wasn't online. Neither was it debate.\n\nThey'd kidnapped him in broad daylight. If they were okay with that, what else were they okay with...?\n\n\"We've heard enough,\" Red said. \"You are guilty and now it's time to pass sentence.\"\n\nShe picked up another object. It reflected the light from the burning torches. The blood drained from Gary's face as he realised it was a wickedly-sharp scalpel.\n\nohfuckohfuckohfuckohfuck\n\nSomething broke in Gary as he realised they were going to go as far as his worst fears. He started babbling.\n\n\"I'm sorry. I'm sorry. I'll leave GamerGate. I'll stop posting on Reddit. I'll delete my Twitter account.\"\n\nHe didn't want to die. Not over something as trivial and stupid as this.\n\nHe tried to stand up. Somebody stamped on the back of his calf.\n\n\"Please don't kill me. I'm sorry.\"\n\nHis stomach convulsed and he threw up. He lifted his head and saw the contemptuous eyes of the activists all around him.\n\n\"Too late,\" Red said. \"GamerGate's reign of oppression has lasted for over a year now. But no longer. For you, GamerGate is over. It ends tonight.\"\n\nThose last three words triggered something in Gary. He didn't know where the laughter came from. They were going to kill him. That was nothing to laugh about, yet laugh he did. Maybe it was the absurdity of the situation. Maybe it was a memory of the mockery a prominent anti-GGer had received when they'd used those exact same three words on Twitter. First it was a nervous giggle, then a chuckle, and finally an uncontrollable guffaw welling up from the depths of his belly.\n\nSomeone punched him from the left.\n\nHe kept laughing.\n\nAnother punch came in from the right. Gary went over. His glasses left his face and bounced off the grit in front of him.\n\nHe couldn't stop giggling, even as they hit him.\n\nFuck, he hadn't taken a beating like this since some bullies had gone after him one time in secondary school. All he wanted to do was curl up in a ball and bawl his eyes out until someone in authority came by.\n\nNo. Fuck it.\n\nGary spat out a bloodied tooth.\n\nIt hadn't worked back then and it wouldn't work for adult him either.\n\nHe awkwardly levered himself back to his knees and stared defiantly at Red.\n\n\"I'm laughing because you're ridiculous. You disrupt meetings with bomb threats, harass people off social media, even get people fired for comments taken out of context, and you say we're the hate group. Look at you. Even now you probably still think you're the victim in all this even as your goons literally knock my teeth out.\n\n\"You're losing. You took advantage of people's basic empathy and decency, but now that sympathy is running out. They're seeing through your screen of diversity, trigger warnings and safe spaces to see you for what you really are\u2014another extremist authoritarian group that wants the power to dictate what other people can say, think and create.\n\n\"And, like all extremist authoritarian groups that don't get what they want, you fall back on intimidation and violence. In your twisted worldview I bet you don't even think you're doing anything wrong. No bad tactics only bad targets, am I right?\n\n\"Well guess what. That's not how it works in the real world, not in the eyes of the law. You're going to be put away for a very long time for this.\"\n\nHe stared from activist to activist. He doubted any of them were past college age.\n\n\"All of you.\"\n\nHe lingered last on Red. She was furious. This wasn't part of the script. He was supposed to huddle up on the ground and beg for mercy from their righteous judgment.\n\nFuck her. He'd been forced to bow to bullies before. No more, and not to ones as pathetic as this.\n\nRed looked so pissed Gary thought she might charge over and stab him right there and then. Her companion in the white trench coat put a hand on her arm.\n\n\"Let him rage against imaginary persecution. He is in a higher court now,\" she said.\n\nRed calmed down. \"Your defence has been noted and rejected as the usual paranoid ramblings of chan trash. Sentence will be carried out.\" Red gave Gary a spiteful smile. \"And for you the punishment will be deliciously ironic.\"\n\nSkinny Blue, the blue-haired girl with the white trench coat, stepped forwards. Evidently it was her turn in the spotlight.\n\n\"We're not going to kill you,\" she said. Her thin lips were curled up in a smile Gary didn't like in the slightest. \"The demon will do that.\"\n\nGary turned to look in the direction Skinny Blue indicated. His vision was blurry without his glasses. He saw a woman leaning casually against the crumbling wall of a dilapidated outbuilding. She was dressed in an outfit that had it existed in a game the SJWs would have attacked it for being problematic. It consisted of lots of tight black PVC that displayed more flesh than it covered, including a generous amount of her quite spectacular cleavage.\n\nDemon? She looked more like a kinky adult film actress or professional dominatrix. The woman looked a little bored by the proceedings, as if she'd seen it all before and was eager to get it over and done with so she could collect her pay check.\n\nHad the SJWs hired a sex worker... to what? Prank him? Rough him up, maybe even sexually abuse him in some twisted idea of payback?\n\nAnother student activist with a bandana obscuring the lower half of their face entered the open area. They carried an inflated airbed. They dragged it over to Gary and plonked it down amongst the weeds and gravel.\n\n\"Where's Anthony?\" Red asked.\n\nThe man shrugged.\n\n\"I thought he wanted to see this,\" Red said.\n\nSee what? Gary thought.\n\nThey'd piqued the interest of the woman dressed as a dominatrix. She detached from the wall and approached them.\n\n\"Have you heard of succubi?\" Skinny Blue asked. \"In ancient times they were described as demons from hell that lured men into sexual congress in order to weaken and sometimes even kill them. Of course, our knowledge has advanced since those superstitious times. We now know demons are entities that inhabit an adjacent plane of existence to our own.\" \n\nGary knew what a succubus was. He'd played enough computer RPGs.\n\nThe woman approaching had horns, wings and a tail. What he first took to be a dominatrix outfit took on a more sinister, occult tinge.\n\nHe also knew demons were fiction. This was cosplay. Superbly put together cosplay, right down to the Morrigan-esque bat wings sticking out of the side of her head, but still cosplay.\n\n\"Demonology is a science nowadays,\" Skinny Blue said, \"albeit an exclusive and carefully hidden one. Strip away the silly superstitions and pare the rituals right down to their core components and it's not all that dissimilar from computer programming. Carry out the correct set of instructions and it's possible to bring one of those entities into our plane of existence and bind them to your will.\"\n\nThe 'demon' walked up to Gary. Up close Gary's vision was less blurry and he saw she had both stunning looks and figure. She had high, pointed cheekbones and while her face was model-perfect, it was also very pale and possessed an aristocratic severity. Her long black hair was swept back and tied up in an austere ponytail. A PVC corset cinched her waist and emphasised the curves of her chest and ass. It looked both sexy and painful.\n\nShe nudged the airbed with her foot. \"A little basic, but it will suffice.\" Her accent was clipped and full of Received Pronunciation\u2014posh totty with hints of a filthy nature underneath.\n\nShe loosened her corset and turned the top down until her substantial breasts popped out. They were large, firm and perfectly round. Gary hadn't seen anything like them outside of anime\u2014and that was supposed to be unrealistic!\n\n\"Shall we begin?\" she asked.\n\n\"Oh, the myths were right about one thing,\" Skinny Blue said. \"Succubi are like vampires. They feed off the energy given out during sexual intercourse, often depleting their victims entirely. That's why we don't need to worry about the authorities. When they find your body, your death will be put down to a tragic and untimely heart attack. Extradimensional sex vampires are extremely handy in that regard.\"\n\nRed stepped up and cut the ties binding Gary's wrists.\n\n\"The irony is perfect,\" she said. \"You misogynist shitlords idolise the unrealistic forms of beauty that oppress real women. It's fitting your end will come from a living embodiment of your own puerile masturbation fantasies.\"\n\nGary didn't know what to say. They were totally fucking loopy.\n\nHe looked at the semi-naked woman in the PVC bondage outfit. Was she in on this lunacy?\n\nThey had to be trolling. Yeah, that's what it was\u2014dress a Barbie-doll model up in a stripperific dominatrix outfit and scare the shit out of him to make the point they weren't just sex objects.\n\nTop kek, SJWs. You got me. You do have a sense of humour, who'd have thought it. Can we go home now? he thought.\n\nIt was then he noticed his knees were knocking together. Shaking. Trembling. It was like a chill creeping up from the ground. It slithered up his legs in gelid ropes and crawled up his spine on icy fingers. The sensation of dread rustled through the hairs on the back of his neck. His teeth started chattering even though the early October night wasn't that chilly.\n\nThis wasn't cold. It was an atavistic sensation of pure terror\u2014an ancestral memory from back when humanity was small and fluffy and the nights were filled with teeth and claws. Black dread radiated out of the figure standing before him in pulsing waves. \n\nHe noticed her eyes, or rather the lack of them. At first he thought they were hidden in shadow, now he saw they were black wells sunk into an infinite abyss. Her horns, wings and tail were not cosplay accessories, they were the real thing. The spade tip of her tail flicked back and forth like a menacing snake.\n\nAll his senses screamed at him. This... thing... should not exist on this physical plane. Its wrongness caused his guts to twist and knot inside him, as if they wanted to turn themselves inside out.\n\nGary wanted to run. It was an overpowering instinct that wrapped talons around his primitive hindbrain and squeezed.\n\nThe demon reached over and caressed his right cheek. Black static crackled between nails as long as claws. Her cold black lips turned up at the corner in an equally cold smile.\n\nGary couldn't move. His legs were locked and shivering. He might as well have been frozen to the floor with great sheets of black ice.\n\n\"Look at how terrified he is,\" one of the masked goons said.\n\n\"It's because he's never seen a real woman's tits in the flesh before,\" another laughed.\n\nDid they not see it? Did they not see what she\u2014it\u2014was?\n\n\"Mmm, the smell of your fear is delicious,\" the demon said. Her voice had picked up jagged cadences, like rusty metal scraping together.\n\nGary's bladder let go. Warm urine flooded his underpants and flowed down his legs. The demon reached down and cupped a hand beneath his sodden genitals. She brought it back to her face and licked her palm with a tongue as black as a bruise. She wrapped equally black lips around a long finger and gave it a suggestive suck.\n\n\"Mmm, tastes delicious as well,\" she purred.\n\nHer face was a perfect doll's mask\u2014as pale as porcelain with two abyssal pits for eyes. Gary tried to avoid meeting her stare. He feared being dragged into those dark wells and lost forever in endless darkness and cold.\n\n\"Where is the fire I heard earlier?\" the demon asked.\n\n\"F-f-f-fu-fu-fu...\"\n\nGary's chattering jaw wouldn't allow him to shape the retort. Instead he stared at the demon with sullen defiance.\n\nShe chuckled. Her lips, sensual and plump despite being as black as plague buboes, turned up at the corners in the facsimile of a smile.\n\n\"That's more like it,\" she said. \"I like to see a little fight.\"\n\nAnd then, as if it'd been turned off by a switch, the paralysing sensation of dread locking up Gary's bones was gone. It was as if what was visible of the demoness was a shadow behind a shrouding curtain. The others saw the silhouette of a beautiful woman. He'd been permitted a glimpse between the curtains and saw what really lay on the other side. But only for a moment, before the veils swished back across and the shadow of a beautiful woman returned. \n\nGary blinked. The feeling of overwhelming dread had vanished so quickly and completely he wondered if it had ever been real in the first place. Maybe it was just a temporary blip of brain chemistry brought on by the stress of the situation.",
        "The girl smiled at him. His gaze roamed all over her stunning figure. She really did look like an anime succubus given flesh, improbable proportions and all. His gaze kept sticking on the perfect round globes of her tits. It triggered a primal sense of longing in him he hadn't felt since he was an awkward teen and completely clueless about love and sex.\n\nWait. Wasn't she a demon? She had horns. And wings. And that was definitely a tail swinging behind the delightful curves of her rump.\n\nGary's brow wrinkled.\n\nAnd then his gaze switched back to the pale swell of her exposed breasts. He followed her smooth curves and was drawn into the soft pink canyon of her cleavage. His heart throbbed with need and was seconded by a similar throb in his loins.\n\n\"Why don't you take your clothes off and lie back on this comfortable airbed here?\" she asked sweetly.\n\nAnd then Gary was naked and lying on his back on the airbed. The details on precisely how he'd got here were a little hazy. The succubus stood astride him with her bat wings partially extended. Beyond her he saw the blood-red moon hanging in a cloudless sky.\n\n\"The succubus will now carry out sentence,\" Red stated.\n\nSomebody muttered something that caused their neighbour to giggle. Red turned, face twisted in anger.\n\n\"Do not objectify the succubus!\" she roared. \"She is a divine instrument of feminist vengeance.\"\n\n\"Diabolic,\" Skinny Blue quietly corrected.\n\nThere was an unhealthy gleam in her eyes as she looked down at Gary. One hand had strayed inside her white jacket and was level with her crotch.\n\n\"Ignore them,\" the succubus said. \"You should only have eyes for me.\"\n\nShe stood astride Gary like a colossus painted in shiny black PVC. Her big breasts curved out in two perfect hemispheres. Completely defying gravity, they floated above Gary like a pair of pale moons. Beyond them a perfect doll-mask face stared down at him with unrestrained lust. His eyes weren't going anywhere else.\n\nThe succubus reached down and undid a zipper at her crotch. She parted the shiny PVC to expose the hairless folds of her sex. A warm wave cascaded down and flowed over Gary, covering him and shutting out the chill October air like an invisible duvet. It brought with it traces of an exotic musk that caused Gary's nostrils to dilate and triggered a surge of excitement.\n\nShe made a gesture and Gary's erection rose like a cobra in thrall to a snake charmer. Pouting seductively, the sexy demoness bent her knees and squatted down on him. Her labia parted around his swollen glans as she impaled herself on him. She didn't go all the way down. Instead she took in maybe an inch of his length and teased him with little up and down motions that caused her moist inner walls to rub against his foreskin.\n\n\"I don't know why they think you're a virgin,\" the woman astride him said. \"I taste three women on this prick. Mmm, one was good. I like that. There's no challenge when they haven't had a really good lay to compare you with.\"\n\nHer labia fluffed out as she sank down and took his whole length inside her. She was tight. Wet enough for him slide up inside her with minimal resistance, but still tight. Very tight. And hot. Not just warm... hot.\n\nGary was fucking a demon.\n\nA demon that had been summoned by a group of SJWs to punish him for transgressions that existed only in their heads.\n\nThis was fucked up.\n\nHe knew this and yet seemed powerless to do anything. It was like he was weirdly dislocated. He felt her rise up and down on him, felt the mattress rock and bounce beneath him to her motions, and yet he also felt like a passenger watching it all from afar.\n\nThe succubus smoothly moved her hips up and down. Her big breasts bounced and swayed with her movements. She let out low erotic moans.\n\n\"We should film this,\" one of the goons said.\n\n\"It wouldn't work,\" Skinny Blue said. \"She is not of this plane of existence. Her form won't register on any recording device.\"\n\nThe succubus moved up and down with smooth grace. Gary felt his cock slide back and forth into her wet heat. Her vagina was incredible. He fit so snugly inside her it was like her parts had been specifically moulded to match his. It felt so good that even with the audience and strangeness of circumstances, Gary couldn't resist the urge to respond. He flexed his buttocks and thrust up to meet her.\n\nThe succubus slammed down on him and growled. The message was clear. She was the boss. Gary lay back and let her get on with it.\n\n\"She's so dominant,\" Skinny Blue said. Her hand was inside her coat, down between her legs, and she made no attempt to hide what she was doing with it.\n\nThe woman continued riding Gary. She wriggled her hips with each stroke, as if wanting to make sure no single millimetre of Gary's cock remained unexplored by her moist vaginal folds. Gary had never experienced sex with a partner as experienced as this. She really was a professional. She even had fine control over the muscular walls of her vagina. With each downstroke the walls of her pussy gave his erection a teasing little squeeze.\n\nThis didn't make sense. This was his punishment? She was fucking him like she was auditioning for a breakout part in the porn industry.\n\nOne of the activists evidently felt the same as he raised the same point.\n\n\"It's a statement,\" Red explained.\n\n\"I'm not so... comfortable watching this,\" the dissenting activist said. \"It's too much like watching porn.\"\n\n\"Oh don't be so sex-negative,\" Red said. \"If you're that uncomfortable go and look for Anthony. He'll be disappointed if he misses the climax.\"\n\nSpeaking of climaxes, Gary's wasn't far off. As the sumptuous inner walls of the dominatrix stroked up and down Gary's shaft he felt pressure building in his balls.\n\n\"Are you going to come for me, baby?\" the woman in tight black PVC asked him.\n\nThat sounded like a splendid idea to Gary.\n\n\"Yes, come,\" Red said with a ghoulish glee. \"Let her take your worthless soul.\"\n\n\"She is an embodiment of anti-life,\" Skinny Blue elaborated for the benefit of Gary. \"Her corrupt womb takes life rather than creating it.\"\n\nOh. Yeah. Not a hot dominatrix escort. Demon.\n\nComing no longer sounded like such a splendid idea to Gary.\n\nHe tried to lift his arms. The succubus folded her body over his and pinned his arms back to the mattress. She stared into his eyes as her hips pumped up and down. Faster. Harder. He heard the fleshy slaps as their bodies came together, heard the inflatable mattress squeaking beneath them.\n\nHe felt pressure building in his balls.\n\nNope, nope, nope. Bad. Coming was bad. Really bad. He had to think unsexy thoughts\u2014old grannies with wrinkly tits, STDs, pustulent gunk dripping from infected dicks. Think gross stuff. Infected dicks going into wrinkly granny pussy. Don't think about her soft vaginal walls stroking him inexorably to ecstasy. Don't look at her beautiful round breasts bouncing as she rode him.\n\nThe pressure grew. Gary's toes were curling. His whole body was trembling.\n\n\"I love it when they try to hold back,\" the demon said. \"It's always futile.\"\n\nHer hips came down in one final downstroke that engulfed Gary's whole length. She sat upright, closed her eyes and her black bat wings extended behind her. Her pussy seemed to melt around Gary, as if he'd sunk his cock into soft, warm dough.\n\n\"Yes,\" she murmured. \"Yes, yes, yes.\"\n\nNo, no, no, Gary thought.\n\nIt was no good. Malleable flesh rippled up his shaft like lapping tongues. Softer lips kissed and suckled on the tip. He couldn't hold back anymore. His hips bucked and a slow explosion of pleasure rattled through him as he spurted a big load of semen up into her tight vagina.\n\nNoooo!\n\nShe was going to drain his life and suck out all his fluids until only a shrivelled husk remained. She was going to tear out his soul. She was going to...\n\nThe violent throbbing pulses of ejaculation lessoned and left behind the glow of post-orgasmic bliss. The succubus milked the dregs out of his pipes with gentle squeezes of her sex. Then, once the orgasm had subsided for both of them, she stood up, stretched and then zipped up her crotch.\n\n\"Mmm, that was rather pleasant,\" she said.\n\nGary looked up at her and blinked. He was still alive. At least he thought so. Aside from feeling like he'd just been run over by a steamroller made out of pure sex, he otherwise felt intact.\n\nWas this supposed to happen?\n\nThe activists didn't think so. They looked at each other and chattered in confusion.\n\nSkinny Blue addressed the demon in black PVC. \"Succubus, what is going on? Why have you not slain and taken the soul of this human as per the conditions of our contract?\"\n\nThe succubus turned to her. Her face was a mask of innocence. \"You summoned me to slay and take the soul of one who has abused and is abusive to women. I have done as you desired.\"\n\nShe smiled down at Gary.\n\n\"I am also grateful for this additional offering of sex you have provided me. He was most agreeable, despite not being a virgin.\"\n\nSkinny Blue looked puzzled.\n\nSo did Red. Then her head jerked up. \"Where's Anthony?\" she asked.\n\nA door to one of the outbuildings opened. The masked activist that had left earlier because he felt uncomfortable stumbled out into the courtyard. He clawed off the bandana obscuring the lower half of his face. The skin beneath was pale and waxy. He turned and threw up over the wall.\n\nThe succubus's pale face was a picture of innocence. Apart from her eyes. They shone with dark amusement.\n\nThe activists chattered amongst themselves and went over to the outbuilding. One went through the doorway. He returned moments later with vomit already spilling down his chin. He doubled up next to the entrance and splattered the gravel with the contents of his stomach.\n\nThe succubus took Gary's hand and helped him to his feet.\n\n\"Now would be a really good time to make a run for it,\" she whispered in his ear."
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "gamer",
        "gaming",
        "trial",
        "femdom",
        "magic",
        "demon",
        "warlock"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-trial-in-vennington"
}