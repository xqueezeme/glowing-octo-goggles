{
    "title": "Do Miracles Happen? Ch. 05",
    "pages": [
        "With time on my hands, Claire and I spent the remainder of the morning playing with the kids on the living room floor. At noon, we ate a quick lunch and piled into her suburban for the appointment with Mark.\n\nHis heart clinic was a light tan brick building, originally an office complex, but having been converted into his medical facility. Three other specialists had joined him and they had a thriving practice, well known and respected by all. When I'd been in med school, Mark was the attending physician for a patient in the wing, where I worked. We'd struck up a growing friendship, it was his recommendation and support which helped me through my medical boards.\n\nThe receptionist was bright and cheery, smiling as us. She handed us a stack of forms, and I was glad we'd come early. Tedious as they were, the one which took the longest was Andrew's medical history. Claire was scratching her head to remember things from his birth and other events since then.\n\nThe nurse called for Andrew, and Claire carried him to the examination room, I stayed with the older two, they played in the children's section, while I browsed a magazine. Time dragged and the two were tired, they'd missed their afternoon nap. Amy handed me a story book, Aaron climbed into my lap and both listened contentedly while I read the story of some adventuresome puppies. Finishing, Aaron jumped down and snatched up another book, encouraging me to read more, which I did. This one was about a little train and his escapades in the train yard; I read it through twice. \n\nAmy was wiggly, when I asked if she had to go 'potty', she slipped off my lap and tugged on my hands. Not wanting to leave Aaron alone, I took them both. Returning to our seats, Amy asks, \"Where's mommy?\"\n\n\"She's with Andrew, back in one of those rooms.\" \n\nAmy was tired, rubbing her eyes; I picked her up and gently rocked her on my lap. She was asleep within minutes, her doll cuddled in her arms. Aaron is clingy and I suggest he lay on the carpet beside me, which he does. He fiddles with the chair for about ten minutes, and then he's asleep too.\n\nGlancing at my watch, it reads 4:06, still no sign of Mark or Claire. All of the other patients have gone and the clinic staff is busy with paperwork and phone calls. At the present moment, I'd traded my doctors hat for one who was responsible for these children and I wasn't complaining, not one bit.\n\n4:48 when I saw Mark appear in the hall. He was talking to one of the nurses when he looks up and spies me. He motioned to me, I placed Amy over one shoulder, reaching down, I lifted Aaron to the other. They stir and wake up, but settle back in my arms, dozing again.\n\n\"You have your hands full, I see.\" Mark comments.\n\nI smile, but don't say anything.\n\n\"She back in room #3, waiting. Go on back, I'll be there shortly and we can talk.\"\n\nIt takes a minute, I'm seated beside Claire, and she's holding Andrew. \"How is he?\" I ask.\n\n\"He's still doped up. They put him out and stuck this thing down his throat. Haven't been told anything yet.\"\n\n\"I just saw Mark, said he'll be back in a couple minutes.\"\n\nShe reached out and brushed the hair away from Amy's face. Her eyes fluttered open, she reached out touching her mom's hand. Claire leaned over, kissing Amy on the cheek. Being this close, she moved a couple inches, kissing me full on the mouth and I kissed her back.\n\nMark stepped in the doorway at just that moment, saw us and loudly clears his throat. \"Ahem. All right you two. This is a doctor's office, not the love boat.\" He grins.\n\nClaire blushes, but I know Mark. He's a big tease, and enjoys giving me a good ribbing. I figure this won't be the last time I hear about it, either.\n\nPutting his doctor face back on, he stepped forward and checked Andrew. \"He's coming round. When you get home, let him eat, then put him down for the night, should sleep soundly.\"\n\nMark sat on the examination table, facing us. \"The good news, you have a very healthy boy there. He's strong and his weight is good. The bad news, as you know, is his heart. Andrew has two issues, one is a small hole between his ventricles. This can happen in newborns, and as they grow, the hole closes normally. Andrew's hasn't. By itself, we'd watch it and it would close naturally over the course of a few months. \n\nThe problem which troubles me is his Tricuspid valve hasn't formed properly and it's leaking; there's regurgitation. That's why he turns blue, not getting enough oxygen.\"\n\n\"What's it mean, Doctor? What's this all mean?\"\n\nMark pulled down a chart of the heart, a diagram, showing the chambers, valves, and connecting arteries. Briefly he outlined the normal flow of blood. Then he showed what would happen when the valve didn't close, and the blood moved backwards, his body would starve for oxygen.\n\nHe stopped and we waited.\n\nTurning to Claire, \"As he grows, his body will need more and more oxygen, but his heart won't be able to provide; it'll work harder, grow larger. At some point, he'll become a prime candidate for congestive heart failure.\"\n\n\"What's your recommendation?\" I ask.\n\n\"I'd like to do a 'heart Catheterization'. That means inserting a tube into an artery in his leg, to closer examine his heart from the inside. At this time, I'm fairly confident on what we'll find; it'll be necessary for surgery to repair the valve and to close the hole.\"\n\nHe looked at Claire before continuing. \"It's not an emergency, but the sooner it's performed, the quicker he can resume a normal life.\"\n\n\"Following valve surgery, what's your prognosis?\" I raise the question.\n\n\"He can have a normal live, maybe not with high contact sports, but otherwise he'll have a healthy life. He'll be on medication for the rest of his life and require monthly blood tests.\"\n\n\"Why the medicine and the blood tests?\" Claire inquired.\n\n\"His heart valve's not repairable; he needs an artificial valve. It'll work normally and there's a very high success rate. Because the device isn't biological, blood clots can form, therefore, the medication, to thin out his blood and prevent clotting around the valve. The level of medication has to be closely monitored.\"\n\nHis explanation detailed the surgical procedures, potential risks, hospital stay, and recovery period. Claire asks the questions and Mark outlines his answers. \n\nAt the conclusion, \"The decision's yours. What do you want to do?\"\n\n\"When could you do it?\"\n\n\"We can check with my scheduling nurse, but probably 3 or 4 weeks. The Cath can be scheduled, directly followed by surgery OR the surgery can be done at a later time.\"\n\nAndrew begins to cry as he was waking up. His throat is sore and his voice is subdued. She patted his back and adjusted his position on her shoulder.\n\n\"Let's do it at the same time.\" she answers his question.\n\nThis doctor's visit was brought to a close, and Claire, carrying Andrew and escorting the older two, stopped by the scheduling nurse, to make the appointment. Mark pulled me aside, \"What's with you and her?\"\n\nQuickly I give an overview of the events from the past two weeks; the meeting, the trip, the medical emergency, loss of her husband, and her staying with me.\n\nHe whistled, \"You have been busy.\"\n\n\"Will the hospital pick up the tab?\"\n\n\"Working on it. Greer figures it's doable and he's handling the details. He'll know in a week or two. The test results from today will help strengthen his case to the hospital board.\"\n\n\"You're probably wondering about her and me.\" I volunteer, looking towards Clair, \"We've no personal commitment. But there's the family I've taken responsibility. I can't ignore them.\"\n\nMark chuckled. \"All physicians with families wrestle with their personal lives. How much time to devote to the 'profession of healing' and to how juggle time with a family. Here's my two cents, if you plan on a commitment with her, do it soon. If you're not, then find a way to cut her loose. If it's the latter, don't burn your bridges, because you may have to cross them when you go in the other direction.\" \n\nI'd known Mark for several years, he wasn't meddling, he was being brutally honest.\n\nLooking towards the front, he adds, \"There's a lady up there with three kids. Go take care of her.\"\n\nHe gave me a pat on the back and together we walked to the front; Claire was waiting.\n\nBy the time we left the clinic, Andrew was extremely fussy. Back inside the apartment, she set about changing him and I was in the kitchen, looking to start supper. Aaron and Amy were awake, hungry and grumpy. They'd been playing in the other room; I was busy putting something on the stove, when I heard loud voices and Amy crying. \n\nStepping around the corner, Aaron had her doll, fiddling with it in the corner and Amy was sitting cross-legged on the floor, wailing at the top of her lungs, wanting it back. He, for what ever reason, had forcibly taken the doll. I stepped in as mediator and pulled him back towards Amy and asked him to return her doll. He stood there, ignoring me. \n\n\"Aaron, give Amy her doll.\"\n\nSilence. Amy was watching, her crying diminished.\n\n\"Give the doll back to her, Aaron.\"\n\nHis demeanor radiates defiance, and he stands there, adamantly refusing.\n\nAs a child, I'd been taught that disobedience merited swift punishment. With that in mind, I gave Aaron a stiff swat on his bottom. \"Aaron, give her doll back.\" I demanded with a stern voice.\n\nHis eyes opened wide in surprise, he dropped the doll beside Amy and moved to sulk in the corner. At that moment I see Claire, holding Andrew, watching me, and her face was full of anger. She said nothing, but sparks flew from her gaze.\n\nI made certain Amy had her doll, which she snuggled in her arms; I scooped up Aaron, sat in a chair and put him in my lap. He may have thought I'd swat him again, for he held himself rigid. \"Aaron, that's Amy's doll, you shouldn't take it from her.\"\n\nHe listened but said nothing, Claire watched from the far side of the room, fire in her eyes.\n\n\"Do you know why I swatted your bottom?\"\n\nHe remains silent.\n\n\"Aaron, why did I spank you?\"\n\nHe had relaxed a bit, but his body was tight. \"I took Amy's doll.\"\n\n\"No, that's not why I swatted you.\"\n\nHe looked at me for the first time since this began, a big 'Why' was on his face.\n\n\"I'd asked you to give the doll back, but you didn't listen. I spanked you because you didn't obey.\"\n\nWith that, I wrapped my arms around him, giving a hug, and a kiss on the forehead.\n\n\"You can go play now.\"\n\nHe jumped off my lap, but stood there. \"Why did you spank me and give me a hug?\" he asked.\n\nI laughed. \"Aaron, I hugged you because I love you. The spanking was because you did something wrong. I like YOU, but I didn't like what you did. Do you understand?\"\n\nHe shook his head, and then sped off towards his mom, who'd been watching the entire time. From her look, I knew we'd talk about this later and for that, I was glad.\n\nShe and I worked together to cook supper. Not much conversation passed between us and her attitude towards me was cold. The evening was awkward and our relationship was stilted, things certainly weren't the best. After we'd eaten, she read to them and I was left to wash the dishes. The task didn't bother me, I was troubled at being excluded. \n\nEventually, she put the children in bed and we were alone. Knowing a discussion was coming, I'd brewed up some coffee and had a steaming cup ready. She sat and I slid it across to her. She picked it up, holding it in her hands and our eyes locked.\n\n\"Don't you EVER discipline my children again.\" She said sternly.\n\nAt first I said nothing, then commented, \"If you're gone from the apartment, say ... the laundry room, and I catch Aaron yanking Amy's hair, you don't want me to do anything? I'm to watch?\"\n\n\"Well, I ...\" She stopped \u2026 , then continued. \"They are MY children, NOT yours.\"\n\n\"Yes, they are and you have wonderful kids. However, this is my apartment and they DO fall under my care.\"\n\n\"You will NOT spank my children.\"\n\n\"How should I \u2026? \n\n\"We could leave.\"\n\n\"Yes you could.\" I know she won't; she knows she won't; and she knows I know she wouldn't. I smile.\n\nShe was trying not to, but a smile crept to her lips.\n\n\"Want to discuss how we'll form a united front when it comes to disciplining them? They should learn that the two of us are working from the same set of rules.\"\n\nShe rolled this around in her mind for a minute. \"But, what \u2026\" Her attitude softened, a sigh escaped her lips. \"Okay.\"\n\nFor the next hour we talked and discussed ways, rules, and guidelines for handling the children. A list was drawn up which set the boundaries and the extent to which we'll act. Both of us give in a little, it was not completely to my liking, nor was it hers, either, but with the end result, we were in agreement. In addition, we talked about giving Aaron and Amy responsibilities for each day. Things like putting the toys away, picking up clothes, helping with other household chores. Together we formed the rules that would govern the household and how we'd react when handling the children.\n\nNot only did we come to an agreement about the children, lines of communication were opened between us which was drawing us closer. I wondered how far this would go, but now wasn't the time to consider that; that would come later.\n\nThe evening ended with us in much better spirits than when it had started. \"I'm sorry for being so angry with you.\"\n\n\"I'm sorry for being so upset earlier this morning.\" I confess.\n\nThe coffee was gone and I stood to wash. Her hands found mine and we spent a moment together, I kiss her softly.\n\n\"Thanks. I needed that.\" She responded.\n\nShortly after, she went to her room, and I slipped into my bed.\n\nIn the morning, the temperature hovered close to 30 F and the sun was shining, with a few clouds. She and the kids were antsy, so we headed for the mall; nothing was planned, only to spend the time away from the apartment. We browsed the stores, ate ice cream, and visited a movie theater. \n\nThe afternoon was warmer, so a visit to the park was in order, after lunch. Nap time passed and Claire figured to put them to bed early, that evening. After the children had been tucked into bed, she commented, \"Your entire vacation has been spent with my children. Do you wish it were otherwise?\"\n\n\"Yes, I do wish it otherwise. I wish it could've been two vacations, instead of one. As far as spending it with your kids, nothing could've been more enjoyable.\"\n\nAll she said was, \"Thank you.\" But the smile brightened her face.\n\nThe next day I returned to work and the news of Claire and the kids had preceded me. Only it had become a rumor of me shacking up with a girlfriend who had children. Initially I attempted to correct the false premise, but this became tiring; in the end it was easier to let the rumors stand.\n\nI surprised Claire on two different occasions. The first time I ordered a huge, I mean HUGE, bouquet of roses. I was out running some errands and spied a floral shop. I stopped and placed the order and knowing she'd be at the apartment, I asked they deliver immediately, which they agreed. It was late that evening before I returned home. Opening the door presented me with a view of the arrangement, centered on the table. \n\nClaire was running, making a bee line for me. She wrapped her arms around my neck and smothered me with kisses. \"Thank you.\"\n\nShe'd never received flowers before. She'd heard of others, but this was her first time.\n\nThe second time I surprised her, took a bit more planning. I'd called Mark and asked his wife, 'Who would she recommend for babysitting?' A name and number was received, I placed the call and Maria was free for the coming Friday evening; I gave a time and directions. Claire hadn't been told, this would be a surprise.\n\n\"What would you like for supper?\" she asked. Andrew was wandering from room to room, not quite walking, but almost. Aaron had the train set, making 'Choo Choo' sounds and Amy had the tea set on the table before her three dolls.\n\n\"I'd like to have a steak dinner with you at the Golden Bull restaurant.\" \n\n\"Bob, be real. What would you like me to make?\"\n\n\"Tonight, nothing. I want to take you out. Just the two of us.\"\n\n\"That may be what you want, but it's not possible. Do you want lasagna or my famous meat loaf, you're always raving about?\"\n\n\"Claire, go dress up. I'm taking you to the Golden Bull this evening.\"\n\n\"The kids, Bob?\"\n\n\"I have a babysitter, she'll be here shortly. You and I are going out tonight.\"\n\n\"You're serious, aren't you?\"\n\n\"Absolutely.\"\n\nHer face was awash with emotions. She wanted to smile, but feared it were a mistake. She was happy but concerned about leaving the children. She wanted to cry but didn't want the kids to see.\n\n\"Go change. The children will be fine.\" I smiled.\n\nShe turned and skipped to her room, she became a high school girl who'd been asked to the prom.\n\nMaria arrived and I introduced her to the children, giving instructions on bed times, what they were permitted to do, what they could eat, how to contact us in an emergency, and the medical necessities for Andrew. She settled in quickly by reading a story, the kids gathered round and were right at home.\n\nExiting her room, Claire was stunning. She wore a beautiful dress, heels, a sweater draped over her arm, her hair was nicely done, and the biggest smile. Tonight I'd treat her like a princess. I pulled out a small package, giving it to her. She was surprised by the corsage; I pinned in on.\n\nShe kissed each child, I helped her with her coat, and we were out the door. It was good to see her smile, it made her look beautiful.\n\nAt the restaurant I gave my name, they had the table waiting and I escorted her. We were seated and drinks ordered. The music was quietly playing and the candle, burning in the holder gave a soft light which highlighted her face.\n\nWe chatted and I gently swung the conversation so she'd talk about herself. \n\nBorn in Raytown, Missouri, outside of Kansas City, her Dad skipped town, leaving her Mom, caring for four children, to fend for themselves. Claire was the youngest and her older siblings, by more than 6 years, left the home at the earliest possible moment. It was in Jr. High School she developed a close friendship with Renee, who was active in the band and encouraged Claire to join, which she did. While banging on the bass drum wasn't glamorous, the concerts and road trips to competitions were always fun. The two girls were inseparable, going everywhere and doing everything together. Not being athletic, Claire was pretty and made it on the Cheerleading squad while Renee took a position on the girls' basketball team.\n\nDuring her Junior year, her Mom found a new boyfriend, a sailor stationed in San Diego, and they left for California. Claire didn't want to leave her friends, and jumped at the chance, when Renee's family opened their home. Her mom sent her a card that Christmas, but since then, she'd heard nothing. Claire became the sister who Renee never had, sharing clothes, trying new hair styles, using makeup, but mostly, they talked about boys.\n\nRenee's crush on Ron, the class President, kept them busy conspiring ways to meet him in physics class or to 'accidentally' bump into him in the hallway. He never asked her out, but she was always dreaming. Claire, being on the Cheerleading squad, met Barry in their Senior year and the two dated regularly. Prom was the crowning event before graduation. Renee's date was Roger, and it was only natural for Claire and Barry to double with them.\n\nWhen school was over, Claire had no plans; Barry asked her to marry him and with nothing better, she said 'Yes.' She and Renee had drifted apart, particularly after Aaron was born. Barry found work with a construction firm, but this was summer work and by late fall he'd been laid off. The two argued, mostly about money; that was when she noticed he stayed out late, coming home drunk. Their relationship went quickly downhill and deteriorated completely when he beat her half to death; she was carrying Amy then, and almost lost her in a miscarriage. ",
        "From that time, Barry never hid the fact he was 'hitting' on other women. He even bragged about his conquests, particularly if they were married. One day, after Andrew was 7 months, he came home early, threw some clothes into an old back pack, slung it over his shoulder and was gone. He'd said \"I'm leaving,\" and disappeared, she never saw him again. Two months after, Claire had packed up the Suburban, took the children and headed west.\n\nThe waiter having taken our order earlier, brought our dinners, steaming hot and juicy steaks. We were quiet, slowly chewing our food. The sparkle had disappeared from her eyes while she spoke of her past. I was hoping to put it back, she deserved an enjoyable evening. We traded small talk after the meal, decided to forego desert and left the restaurant. \n\n\"The evening is still young.\" \n\n\"Bob, where are we going?\"\n\n\"Dancing.\"\n\n\"I don't know how to dance.\"\n\n\"You went to your High School Prom.\"\n\n\"Yes, but I couldn't dance. I don't know how.\"\n\n\"Good, then you can teach me.\"\n\n\"Bob!\" she pleaded. \"You're serious aren't you?\"\n\n\"I certainly am. The last time I was on a dance floor was 6th grade music class.\"\n\nI'd located a local establishment from browsing the phone book and we pulled into the parking lot. Entering, the band was playing from the stage and the floor was busy with couples, dancing to the tune. We found a table near the side wall and watched for a while.\n\n\"Come on.\" I extended my hand.\n\nShe accepted it and together we found a place by the edge of the crowd. I opened my arms and held her; together we swayed to the music. At first we were very conscious of our feet, but this passed and the mood swept over us. She was an exciting woman and I took pleasure in holding her.\n\nThe tunes changed to a faster beat and we changed the dance. It was more fun learning, we joked with each other and struck up a friendship with another couple. We traded partners a few times, but mostly Claire and I danced with each other.\n\nTime sure flies when you're having fun. We were and it was.\n\nThe number of patrons was thinning when we slipped out the door. The wind took a chill and I wrapped her coat around her. \"You interested in having some desert now?\" I asked. \n\n\"I'd like that.\"\n\nI found a place with late hours and we sat at a booth. She ordered the lemon meringue pie; I took the apple pie ala mode.\n\n\"Why did you plan this evening?'\n\n\"A couple reasons. You're tied to the children and need a break. I thought this would be something you'd like.\"\n\n\"Yes, I have, thank you. It's been most enjoyable. We made a fool of ourselves dancing, but it was lots of fun.\"\n\nA pause settles over our conversation and I clean up the last of the pie.\n\n\"And?\"\n\nAnd what?\" I ask.\n\n\"You said there were two reasons for tonight.\"\n\n\"And the second reason?\"\n\n\"Uh hum.\"\n\n\"I'm courting a beautiful woman who has three children I simply adore.\"\n\n\"Are you courting this woman, or because she has the three children?\"\n\n\"I'd ask her out even if she didn't have any children.\"\n\n\"Thank you. That's the nicest thing anyone's said in a long time.\"\n\nThe trip home, in silence, was made without incident. Walking to the door, I stopped before turning the lock. \"What now?\" she asked.\n\n\"I'd like to kiss my date 'good night'.\"\n\nWithout hesitation she was in my arms, we embraced warmly. \"You're correct, this could be contagious.\" And she kissed me again.\n\nFor three weeks we lived quietly, she cared for the children and I worked through the day, coming home evening to play with the kids. They'd come to expect it, and everyday we did something different.\n\nThe day for Andrew's procedure arrived; Sue gave me time off. I'd arranged for Maria to watch the older children while Claire and I took him to the hospital. He was prepped and we stayed with him till it was time, they put him under and we waited. The Cath would take an hour, the 'valve replacement' would be another three. To a mother, waiting for her child, this would be an eternity.\n\nWe waited through the first part, being told the findings by one of the attending doctors. The valve was calcified and had torn in two placed; this information had been expected and the surgery would correct the defects. \n\nClaire was tense, tight; she was worried about her baby. \"Come on,\" I encourage. \"Let's walk.\"\n\nTogether we strolled through the halls of the hospital, took time to browse the gift shop, and visited the front lobby, watching folks as they passed. Time passed slowly and we talked.\n\n\"You should get a bite to eat.\" I persuaded\n\n\"Okay.\"\n\nThe hospital cafeteria was only for medical staff, but my connections allowed us in. I got her a coffee and a Danish, which she nibbled. Physically she was beside me, talking; but emotionally her heart was upstairs with Andrew. She was 'willing' the doctors to heal her son. She was praying he would be returned to her in full health. The love of a mother is strong; the love of this mother was extraordinary.\n\nIt was time and we returned to the waiting room, where we waited some more.\n\nTwenty-five minutes later, Mark came through the door, Claire spotted him first and was on her feet in an flash.\n\n\"Andrew's fine. He's in Post-Op and will wake up shortly. Then he'll be moved to ICU and you can see him there. Everything went well, he should make a full recovery.\"\n\nClaire put her hands to her face as tears coursed down her cheeks. She was happy, they were tears of joy. \"When can I see him?\"\n\n\"We'll call you when he's moved to ICU, maybe 30 minutes. He came through just fine.\"\n\n\"Thank you doctor. Thank you.\"\n\nMark turned and was gone. In a natural move, Claire turned towards me, stepped close and placed her hands on my chest. I enfolded her with my arms, she cried happily. It was 20 minutes and we were ushered into the ICU. He was being monitored closely, a tube down his throat, several from his stomach, and one sticking from his leg. His eyes were closed but the nurse said he was awake, Claire should talk to him.\n\nTouching his arm she spoke his name and he responded to the sound of her voice, moving slightly. She kissed him gently on the forehead and whispered to him. I sat with them for a couple hours, Claire would be staying the night and I returned home.\n\nEight days later, she carried Andrew home. Aaron and Amy gathered round to view their brother, they had to be gentle. He wasn't able to walk or crawl, his incision would heal but it would be weeks before he regained his strength. Claire gently laid him on the floor, with blankets to prevent him from rolling. He cried from the discomfort but settled down when given a bottle.\n\nI was busy putting our coats into the closet, Claire was sorting Andrew's clothes, she stood and I turned, she was right there. Our eyes meet, her lips are in a smile. We were so close and it was natural for me to reach for her waist and pull us together. We kiss. No, that's wrong, WE KISS.\n\nAaron sees us in the clinch and tugs on my trousers. \"Bob, are you going to be my daddy?\" Claire and I step back, laughing; my eyes meet hers briefly, before I kneel beside him.\n\n\"That's possible, Aaron. That's possible.\" I wrap my arms around his small frame and give him a fatherly embrace. Amy isn't to be left out and I use one arm for her. Right then, those kids become mine.  There's no way in the world I'd let anything happen to them; and I want to be their father.\n\nSpeaking to them both, \"Aaron, Amy, do you want me to be your new daddy?\"\n\nThere's no hesitation; Aaron says 'Yes' and Amy shakes her head affirmatively.\n\n\"Well, for that to happen, your Momma has to say 'Yes' too. Do you think she will?\"\n\nTwo tiny faces turn upwards and look at their Mom. I chose to watch the kids. She places her hand on my shoulder and squats beside me, looking at her children. \"Tell Bob, 'Yes'. He can be your daddy.\"\n\nFour tiny arms reach up to enfold me. Then her two arms encircle us all. Claire gave me a kiss on the cheek and whispered in my ear. \"That was sneaky. Sneaky, but appreciated. Yes, I'll marry you.\"\n\nMy hands were full of two squirming kids and one lovely woman. We'd have stayed like this longer but Andrew was crying, he needed changed.\n\nCONCLUSION\n\nDay by day, Andrew regained his strength, weeks passed before he was comfortable on his tummy and it was longer, before he took to crawling again. The pain and discomfort on the sternum, where he'd been cut open, was a bit much.  Both Claire and I rejoiced because his bouts of 'blue' fingers were gone; his skin brightened to a healthy pink.\n\nShe and I made plans to be married over Easter weekend. Andrew was walking by that time and getting into most things, as toddlers do. The older two were included in the ceremony and Claire was the most beautiful bride in town. Mark and his wife took care of the children while we were gone for a few days, but then, how many couples take their kids on a honeymoon? Returning, we settled into our apartment and Aaron, Amy, and Andrew became my children, and we couldn't have been happier.\n\nDo Miracles Happen? Well, if you're ever driving through Denver, please stop by and visit. We'd be glad to set an extra place at the table. We'd tell you when God's Angels were busy, and He sent an ordinary man to rescue a damsel. Yes, we know miracles happen; we experienced one, and participated in it first hand."
    ],
    "authorname": "Rabbitrunner91",
    "tags": [
        "aaron amy",
        "miracles happen",
        "day andrew",
        "blood tests",
        "regained strength",
        "gathered round",
        "gave time",
        "found place",
        "cheerleading squad",
        "hands full"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/do-miracles-happen-ch-05"
}