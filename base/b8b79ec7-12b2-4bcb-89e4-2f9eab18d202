{
    "title": "My Education Ch. 01",
    "pages": [
        "Chapter 01: A Study in Chemistry\n\nForeword - story takes place in 1996, before cell phones were in wide spread use. As always, the names have been changed to protect the not so innocent.\n\n------------------------------------------------\n\nHave you ever heard the story about the person who showed up late for a final exam in college?\n\nWell, I actually did. I didn't oversleep. I didn't goof around. I just did the right thing.\n\nIt was a Friday exam, and I hate Friday exams. When exams are scheduled for earlier in the week, you get them all out of the way and you have a couple of extra days of vacation. By Friday, many of your friends are done and are out enjoying the week off. This time though, I didn't mind quite as much because I wanted an \"A\" in the class. This final exam in Freshman Advanced Chemistry was my last one for the quarter and I really put in the work to make certain I excelled on the final exam. As a Chemical Engineering Major who ultimately wanted to pursue an advanced degree, I wanted nothing less than A's the core classes. The only obstacle here was Professor Grant.\n\nProfessor Grant was substituting for another professor who had taken time off to handle a family emergency. At first we were all pretty hyped up because she usually only teaches senior level classes and graduate students. By the end of the second week, everyone wanted out. This woman was a ball-buster who gave not one millimeter of slack. A pretty woman, but a ball buster. She did not tread lightly with grading homework, marking down even the smallest of errors. She even reviewed the grades that her teaching assistants assigned in the labs. All the kids on campus knew she was divorced, and a bunch of people in the class had heard she went through a bitter break-up with her ex-husband a few years before.\n\nI got a solid eight hours of sleep. I got up did a quick 20 minute run around the neighborhood to get the blood flowing and jumped in the shower. After that, I wolfed down breakfast and was on my way to school. There was an accident on the freeway, but after it cleared it was smooth sailing. With a little extra foot on the gas pedal, I should be to school with a few minutes to spare.\n\nAs I turned off the freeway, the street was pretty empty. Better still, I was clearly recalling the facts from the night before: chemical equilibrium; properties of gases, liquids, solids, and solutions; atomic and molecular structures. I recall thinking how ready I was for this test when I saw the collision. A white Mercedes S-Class ran a light and due to the speed made a wide turn. In doing so, the driver clipped the side of a red Honda Civic that was in front of me. The Civic was hit hard enough to force it up the curb and into a tree. The Mercedes took off, but I managed to get the first three numbers of the license plate before the car was too far away.\n\nI drove up next to the Civic to see the driver slumped back and the passenger shaking her. Shaking someone who probably has a concussion doesn't make great sense. I turned my car off, hit the hazard lights, and jumped out to see how badly they were hurt. As I approached the car, the extent of the damage was clear. At least one foot of the front end of the car had been demolished by the tree. This vehicle was totaled.\n\n\"Are you okay?\" I asked after opening the driver side door.\n\n\"I'm okay I think,\" replied the passenger. \"Sandra wasn't wearing her seatbelt and she hit the steering wheel pretty hard.\"\n\nThe Civic was a late 80s model that lacked airbags. Sandra had a bloody nose to prove it. The cut above her eye didn't look so good either. The passenger kept shaking Sandra and asking her if she was okay.\n\n\"What's your name?\" I asked the passenger. I received no reply.\n\n\"What ... is ... your ... name?\" I asked with in a stern tone.\n\nThe passenger just looked at me.\n\n\"Your name?\"\n\n\"Michelle.\"\n\n\"Michelle, it's quite possible that Sandra has a concussion. Can you stop shaking her?\"\n\n\"Oh God,\" Michelle whispered as she jerked her hand away from Sandra. \"Is she okay?\"\n\nI hadn't noticed it before, but both girls were wearing jeans shorts and bikini tops. They must have been going to the beach. By the subtle rising of Sandra's chest, I had to believe she was still breathing. I leaned forward and put my hand next to her mouth. I could feel her breathing. I held her wrist and searched for a pulse. Feeling the subtle beat, I smiled at Michelle.\n\n\"She's still breathing and I can feel her pulse. I think she's just unconscious. You two did hit the tree pretty hard.\"\n\nA look of relief swept over Michelle.\n\n\"You stay here and I will go call for help.\"\n\n\"NO! Don't go,\" shrieked the girl. \"Stay. Don't leave.\"\n\n\"Michelle, someone has to call 911 and get an ambulance.\"\n\n\"I'll go flag someone down. We'll get them to call. Please, don't leave. Please,\" she begged. This girl was on the verge of tears.\n\n\"Okay, okay\" I sighed. \"I'll stay.\"\n\nI just hoped Professor Grant was having a good day. Earlier this quarter, she locked the doors on her exams and refused two students to enter when they showed up late. I had done well all quarter, and I hoped she would take that into consideration when deciding whether or not to let me in.\n\nWhile it didn't take very long for a girl in jean shorts and a bikini top to flag down another car, it did take over 30 minutes for the police to arrive. Evidently, there was some confusion about the location. The guy in the car was probably paying more attention to Michelle's cleavage than the situation. I can't say I blame him too much; the girl obviously had great genes. While we waited for emergency services, Michelle kneeled next to me and eventually ended up leaning on me. A large part of me wanted to simply drink her body in, but I was more concerned with Sandra.\n\nI kept Michelle engaged in conversation to keep her occupied. It wasn't any surprise that she easily dominated the conversation, telling me about her plans for Spring Break, her love of college life in San Diego, and a number of other things. We heard some cars stop and Michelle told me two police cars had arrived. One of the officers looked after Sandra, while the other two officers started taking statements. A female officer talked to Michelle aside while a male officer talked to me. I gave a description of the incident as well as the first three numbers of the license plate from the Mercedes. I wanted to leave, but when I turned around I could see that the police had conveniently parked their car in front of mine. 'In for a penny, in for a pound' I guess.\n\nAnother ten minutes passed before the ambulance arrived. Michelle climbed into it with Sandra, but not before hugging me and thanking me for staying. I was going to be an hour late for the final and all I had to show for it was a hug. I know I did the right thing, but I had a bad feeling about my test. What's the saying: no good deed goes unpunished.\n\n\"That was nice of you to stay.\"\n\nI turned around to see the female police officer, Officer Coles. Her partner was coordinating with the tow truck that had arrived to collect what used to be a drivable Honda Civic.\n\n\"What? Oh yeah. Well, I just hope my professor lets me in late.\"\n\n\"Let's you in late?\" the officer inquired.\n\n\"I have a final exam that started about 40 minutes ago. She's a real ball bus... She's pretty strict on the rules and isn't known for her leniency. If you don't need me for anything else, I'd like to go try to get into my exam.\"\n\n\"Oh,\" said the officer. \"Maybe I can help. It doesn't seem right that you stay here to help out, and then get punished for it. I can go with you if you like and talk to the professor if she wants to be a ball buster about it.\"\n\n\"That would be great,\" I said smiling. I didn't want to say anything but I thought it was kind of funny to hear one woman call another one a 'ball buster'.\n\n\"Just follow me to the school and then I'll follow you.\"\n\nThings were beginning to look up I thought as I got in my car. I quickly tucked in behind the patrol car and the police officer had the lights running the entire way to the university. Running the lights certainly made me smile, and I could feel my disposition improving already. I parked my car in student parking, and the officer drove us on to campus, taking the patrol car right up to the chemistry building.\n\nBy the time we got to the room, the exam had been going for an hour. As expected, the door was locked. I knocked softly. The door opened just enough for Professor Grant to see me.\n\n\"Mr. Rhodes you know I don't tolerate tardiness,\" she snapped. \"Especially when you're over an hour late.\"\n\nProfessor Grant went to close the door, but Officer Coles was quicker. She grabbed the door, pulling it open far enough for Professor Grant to notice her. She looked my teacher dead in the eye and spoke in that tone of voice that only law enforcement personnel seem to know.\n\n\"Professor Grant is it. My name is Officer Debra Coles with the Police Department. Your student is late for one reason. He witnessed a hit-and-run accident and pulled over to make certain that everyone was alright. The driver of the car was unconscious and the passenger was shaking her in an attempt to wake her up. You can imagine that shaking someone with a concussion isn't exactly a good thing.\"\n\nProfessor Grant just stood there taking it in.\n\n\"At the insistence of the passenger, Mr. Rhodes stayed until emergency services arrived and then provided a detailed account of the incident. As I took the passenger's statements, she wouldn't stop going on about how grateful she was that he stayed with them until we arrived. If one of my daughters was in an accident, I would hope and pray that someone like this young man was there to do such a selfless thing. Now it's up to you, but I'd consider cutting the kid a little slack.\"\n\nProfessor Grant looked at me and told me to go ahead inside. I smiled at Officer Coles and the look on her face told me she knew how grateful I was.\n\n\"One more thing Professor Grant,\" Officer Coles said. She then proceeded to whisper to the professor, but I couldn't hear what was being said because the door had shut.\n\nA few moments later, Professor Grant knocked on the door and I let her in. She went to her desk and handed me a copy of the exam. She looked at me and smiled. There was a kind of softness in her eyes that I can honestly say I would have never thought her capable of. She quietly told me that while another exam was scheduled after this one but that if I needed extra time I could go to her office time was up. I'm glad she did, because the exam was positively brutal. In two hours time, I was barely through two-thirds of the exam.\n\nAs I followed Professor Grant to her office, I couldn't help but check her out. We went up two flights of stairs, and she was right in front of me. Professor Grant always dresses in a business formal suit, and today was no exception. Black slacks and a black blazer that covered a white blouse. Normally, we are in a large lecture hall looking down at a chalkboard. In front of that chalkboard is a large table where chemistry labs are demonstrated to students. Between that and her blazer, I don't think I have ever really seen her body from the waist down. But as she took each step, the blazer kept creeping up. By the end of the first landing, I was afforded a perfect view of her perfect ass. And yes, it was perfect: round but not huge; firm but with a nice bounce as she took each step. And when she walked, it rocked side-to-side in that delicious way that just seems to come naturally to a woman wearing heels. In the span of five seconds I went from simply fearing this woman to entertaining a few hundred thoughts of my teacher in various sexual acts as we completed the trip to her office.\n\nProfessor's Grant's office was in a new wing that had just been completed earlier this month. The new wing caused quite a stir with some students. A $30 million donation had been giving to the Chemistry department. Half the money was used to build this new wing while the other half was being used to purchase new equipment. The older offices were going to be converted into additional laboratories and classroom. One of the perks of the new offices was that each one had its own bathroom. While the University couldn't arbitrarily decide to pay the professors more, they could provide nicer working spaces for the professors which helped retain some of the more prestigious members.\n\nWhen we got to her office, I could see that she had been put in one of the larger offices reserved for Senior Faculty. I'd never been to her office before, preferring to go through one of her teaching assistants when I had a question. There was one large desk near the tinted windows at the far side of the room. Another smaller desk was next to the door that we had just come through. Across from that was a large couch. On the near side of the room and opposite the windows was another door, which I assumed was her personal restroom, and two large bookshelves filled with Chemistry volumes. There was something else I noticed. Professor Grant had attained two Doctorate Degrees, a PhD in Chemistry and another in Biochemistry. \n\n\"Go ahead and sit there to finish your exam Justin,\" she told me, indicating the smaller desk.\n\nI sat down while she proceeded to take off her blazer and hang it up. As she walked over to her desk and picked up her phone, I just stared. This woman was stacked. Maybe she dressed to hide it, but without the black blazer to conceal it, a fabulous set of tits could clearly be seen hiding in her white blouse. Thank God she was so focused on whoever she was calling, because she would have seen me blatantly staring at her.\n\nUpon hearing a voice and saying hello, she fell into her chair and turned around to look out the window. With her back to me and her body mostly hidden by her desk, I tried to get the blood out of my little head and back to the big one so I could finish the exam. It was difficult. No, it was Herculean to keep my mind on the exam and off of Professor Grant's body. But I did. It took another hour, but I did answer every question. When it was complete, I was brain dead. I felt like I had given mental birth and I was drained completely. I put my exam on Professor Grant's desk and thanked her for allowing me the extra time. As I turned to leave, she spoke.\n\n\"Hold on Mr. Rhodes,\" she said as she rose out of her chair. She walked straight to me and wrapped her arms around me tightly.\n\n\"Thank you,\" she said with her head buried in my neck. \"Thank you so very much Justin.\"\n\n\"Umm ... what for Professor Grant?\"\n\n\"My daughter was in the car this morning. Michelle, the girl you stayed with. She's my daughter.\"\n\nSo that's what Officer Coles had told her. That must have been who she called. She must have been relieved to know that her daughter was not harmed.\n\n\"You're welcome,\" I said as I wrapped my arms around her to return her hug.\n\nWhen I did that, she tightened her hug even more and took a deep breath. And did her chest ever feel good pressed up against me like that.\n\n\"I called the house and Michelle told me everything. She told me you wanted to leave, but that she begged you to stay. She couldn't believe that you did. Between her father, or rather the lack there of, and the guys she's dated, I doubt she has ever had a man do something selfless for her. She couldn't believe that any guy would stay without getting something out of it.\"\n\nShe moved her head and before I knew it she had lightly kissed the corner of my mouth. And I can honestly say that up to that young age of 18 years, I have never gotten so hard so fast. Professor Grant had to have felt it because her entire body was pressed up against mine, but she didn't say a thing. She just put her head back into the small of my neck and continued.\n\n\"Michelle even said you didn't try to take peeks at her or Sandra. She thinks it the first time since she developed that a guy has looked at her and didn't just notice her tits.\"\n\n'Hello,' I thought. Did my professor just say the word 'tits' while hers were pressed against me? At this point I thought my dick was so hard I thought it was going to poke right through my jeans.\n\n\"Well, she is a pretty girl,\" I said. I heard her take in a quick breath of air.\n\n\"But she needed help not some idiot drooling on her,\" I quickly added. Professor Grant leaned back, looked up into my eyes, and just smiled at me. I never took the time to notice, but she had really great blue eyes. I think this was the first time I had ever seen her act like a lady and not as some cold-as-ice bitch.\n\n\"I hope she gets to hear a compliment like that some day. My daughters could use hearing more of that and less of the 'nice rack' and 'damn you're hot'.\"\n\nShe took a deep breath and slowly exhaled. With put her head against my chest and whispered 'we all could'.\n\nWithout thinking, I just said \"Well she definitely takes after her mother. You're both gorgeous.\"\n\n\"What did you say?\" Professor Grant asked.\n\n\"I said you're both gorgeous.\"\n\nShe looked up at me and I could see the tears just welling in her eyes. While I have had one serious girlfriend, I didn't have a solid understanding of women. In an instant, I made her cry. Because of that, I thought I was screwed.\n\n\"You think I'm gorgeous?\" she asked. She almost seemed anxious to hear me say it again.\n\nOkay, maybe I wasn't screwed.\n\n\"Absolutely. Without a doubt,\" I replied eagerly.\n\n\"How could you say that?\" she asked shaking her head. \"Michelle was in a bikini, so that I get. But you've never seen me in anything like that.\"\n\n\"Well that's true, but as we came up the stairs ...\"\n\nMy words just trailed off. My dad has often told me that I speak without thinking. In the span of one second, I realized he was right.\n\n\"Wait,\" Professor Grant said as she pushed back from me. \"You were checking me out as we came up the stairs.\"\n\nI knew she could hear me gulp before I confessed.\n\n\"Yes, I did. I'm not making excuses, but I couldn't help it. You were walking up the stairs right in front of me. Your blazer had drifted up and there it was.\"\n\n\"There what was?\"\n\n\"Uhh ... your behind. And as you walked up the stairs ... in those slacks ... wow ... I mean ...\"\n\n\"Wow?\"\n\nI was beginning to think I couldn't dig this hole any deeper. But as I looked at Professor Grant, I didn't see anger. I didn't see disgust. I saw her looking at me with those blue eyes and hers eyes seemed to be searching for something.\n\nI don't know how I remembered the advice my friend Katrina gave me, but I did. She had said that women like compliments, but they love sincere ones. If you want a woman to believe you are sincere when you compliment her, look her straight in her eyes and speak your mind. Here I was, standing in front of a Senior Professor at the University. She could fail me. She could probably get me kicked out of the school if she wanted. But right then and there, every part of me knew she wouldn't. I didn't know how I knew, but I did.\n\nSo I looked Professor Grant dead in the eyes and spoke up.\n\n\"Professor Grant, when I followed you up the stairs I got a glimpse of the most perfect ass I have ever seen.\"\n\n\"Really?\" she asked with big eyes. \"You really think I have a great ass?\"\n\n\"No,\" I said with more confidence. \"You have a perfect ass. And those slacks were made to show it off. The view of your ass as you walked up the stairs was ... well ... fucking awesome. It was all I could do to concentrate for the past hour.\"\n\nProfessor Grant leaned up and kissed me again on the corner of my mouth. She then leaned back for a moment, looking into my eyes.\n\n\"So then, this is for me?\" she asked as she grinded her hips into mine. With my mind running 800 miles per hour, I had momentarily forgotten about how hard my dick was. Five minutes ago, I would have simply run out of the room. But standing here with her body pressed against mine as she looked directly into my eyes, I felt positive about being able to answer her directly and without fear.",
        "\"Yes, Professor Grant. That is most definitely for you.\"\n\nI am five-foot eleven-inches tall. Professor Grant was five-foot four-inches ... five-seven with her heels. As I looked down at her in that moment, I didn't see my professor. I only saw a beautiful woman. One very beautiful woman who leaned up and kissed me on the mouth. I felt her lips part slightly as her tongue pushed against my lips. I responded in kind, opening my mouth slightly to let my tongue slip out. I could feel her soft, wet tongue begin to dance with mine. God could she kiss. It was then that I felt the couch against the back of my calves. I held onto her as I descended back onto the couch, and she gracefully slid top of my thighs.\n\nTaking her mouth from mine, she said \"Then that would make it mine to do with as I please. Unless of course you object.\"\n\n\"No Professor Grant. I trust you to ....\"\n\nHer mouth cut me off, but I didn't mind in the slightest. I almost jumped when I felt her hand start to undo my jeans. She moaned into my mouth when my hand cupped her left breast. I could feel her nipple harden against my fingers. My other hand fumbled for the buttons on her blouse. Her hands were tugging my jeans down past my hips. I had half of the buttons on her blouse undone when she started fishing in my underwear for my cock. Her hand felt amazing as it encircled my shaft and slowly began stroking me. I finished with her blouse and reached down to feel her tits. Even in a bra, they felt wonderful.\n\n\"Allow me,\" she whispered. \"And take off your shoes.\"\n\nUsing one foot on the heel of the other, I started to take off my sneakers off. At the same time, I felt her hands dart between mine. By the time my shoes were off, I felt her taut bra give way to the treasure beneath. Her flesh felt soft and warm. She moaned into my mouth as my fingers toyed with her nipple. I made it a point to gently explore her breasts. As her hands began working on my underwear, I lifted my hips. Seizing the opportunity, Professor Grant quickly lowered them and my jeans to my ankles.\n\nShe knelt on the ground and literally ripped them off of my legs. While I awaited the return of her mouth to mine, I gazed at her breasts. They were incredible. She noticed my gaze and looked at me with a hunger in her eyes. She grabbed my ankles and picked them up, turning me length wise on the couch. Kneeling next to the couch, she wrapped her right hand around the base of my cock and stared into my eyes. I kept my eyes locked on hers until she sucked the head of my cock into her mouth.\n\n\"Fuck me,\" I gasped as my head jerked back.\n\nProfessor Grant attacked my cock with a hunger I have never felt before. As she lowered her mouth down onto my cock, her hand would travel down over the base of my cock to rub my balls. As she lifted her head back up, her hand followed and stroked my cock. It took her but a few repetitions of these motions to settle into a rhythm of stroking and sucking my cock. I looked back down to see her staring up into my eyes as if she was waiting for my senses to return before moving forward. She kept a lock with my eyes for five iterations of her exquisite stroking-sucking technique. As she started the sixth, she closed her eyes and really began to work me.\n\nIn high school, I helped more than a few cheerleaders pass their classes. In return, they treated me to more than a few blowjobs. One in particular named Kim could get me to cum in just a few minutes, and then she would continue until she got a second round from me. It never took her more than 15 minutes to get two loads from my eager balls. Kim was a novice compared to Professor Grant. It took 40 or 50 seconds before I arched my hips and came hard into this woman's mouth. As I came, I could feel just the first couple inches of my cock in her mouth. Her hand worked the base of my shaft and my balls, as I pumped again and again.\n\nWhen I was done, she just kept sucked the head while continuing to stroke the base and I think my cock was harder now than we started. She lifted her head from my shaft and started kissing up my stomach. When she got to my face, she stopped and looked me in the eyes. Remembering yet another tip from Katrina, I looked at her like she was a priceless treasure and pulled her mouth to mine. I kissed her deeply and passionately, silently thanking her for the intense pleasure she had just given me.\n\nHolding her, I stood up without taking my mouth from hers. It felt so good to feel her nipples pressing against my chest. I moved my mouth to her neck and sucked hard. Professor Grant started moaning loudly, and I could feel one her hands between our bodies rubbing up and down inside her slacks. With my hands on her shoulders, I slowly spun her around. I brought my hands to her tits, cupping them. The weight of her flesh felt great in my hands. I gently pinched her nipples and she just groaned while I softly twisted the hard buttons between my fingers. I lowered my hands to her hips, and by the looseness of her slacks I knew they were already unbuttoned. I pushed them down over her hips and Professor Grant responded by wiggling them down her legs.\n\n\"Stay,\" I told her.\n\nI quickly dropped down to my knees. I hooked my fingers under the waistband of her panties and pulled down. In seconds, they joined her slacks at her ankles. Before she could move, I stood back up behind her and wrapped my arms around her waist. I picked her up off the ground and felt her feet kick a few times. It was then that we both realized that my cock was wedged between the cheeks of her ass. She just started grind her ass up and down against my cock while my hands once again found her tits. I pulled her back with me as I sank back down onto the couch and my shaft never left the valley of her ass. I was sitting on the edge of the couch and Professor Grant was effectively laying back against me. I let one of my hands slide down her body in search of her sex.\n\n\"Yesssss,\" she hissed as my fingers found her clit.\n\nI started rubbing her clit in circles and she groaned out loud. Professor Grant leaned slightly to one side and turned back to kiss me. As our tongues met, she started moaning. Her right arm had reached up and around so that her hand could grab the back of my head. My mouth would not leave hers until she wanted it to. As she continued to grind her ass against my cock, I continued to roll her clit in circles with my right hand. I felt her body tense up once, then twice, and then she came. Shaking, Professor Grant groaned deeply into my mouth as she closed her legs around my hand holding it against her pussy. I could feel her sucking air out of my body into hers and then pushing it back into me as she breathed hard through her orgasm. This continued until her orgasm passed and she let go of the back of my head.\n\n\"Don't move,\" she whispered to me.\n\nShe stood up and quickly turned around. I could only watch as this goddess crawled into my lap and straddled me. I felt her hand hold my cock against the hot wetness of her sex. She stared deeply into my eyes. I just looked up at her, silently begging her to do it. She moved the head of my cock up and down her slit, moaning every time the tip pushed against her clit. Professor Grant just smiled as she let the weight of her body sank her down onto my cock.\n\n\"Oh fuck Professor Grant,\" I groaned. \n\nThe feeling was mind-blowing. As good as Professor Grant's mouth had felt, it paled in comparison to the tight, warm, and very wet pussy on my cock. I could feel the heat of her walls along the entire length of my shaft, and I felt like I was going to cum without her having to do anything else. Professor Grant rolled her hips in circles on top of me. She stared down at me and grinned. I could feel her clenching and unclenching her pussy muscles around me. The feeling was unbelievable.\n\nProfessor Grant moved slowly at first, using her legs to raise and lower herself. Then her hands found my shoulders, and I could feel her pace beginning to increase. I couldn't hold out any longer and my hands sought out her tits. Her nipples hardened as my fingers gently twisted them, prompting an unexpected reaction from the woman on top of me who had two PhD's.\n\n\"That's it baby, play with my tits. Fuck yes. My nipples are so fucking sensitive. Suck them baby. Suck them now.\"\n\nAnd I did. Not that I had much choice. Professor Grant had moved her hands to the back of the couch above my shoulders. The result was that her tits were now pressed against my face. I moved my mouth to her right nipple, and suck it into my mouth. I pinched the hard little button between my tongue and teeth. The reaction was immediate.\n\n\"Fuck yes,\" she groaned. \"Just like that baby. Just fucking like that.\"\n\nProfessor Grant was now bouncing up and down on me fast and hard. I put my hands on her hips to help, pushing my hips up into her as best as I could while using my hands to push her down at the same time. She was gasping and moaning as fucked. With my cock driving my cock in and out of her wonderful pussy, I knew it wouldn't be long before I came again. I just hoped to make her cum again as well. My only other thought at the time was how I would be able to pull out before cumming.\n\nAs if reading my mind, Professor Grant answered that question as well.\n\n\"When you get there ... don't ... hold ... back ... Justin ... cum ... in ... me ... it's ... been ... so ... long ... please.\"\n\nThat pretty much cut the chord on any control I had left. My balls began to throb in eager anticipation. With my hands on her hips, I began thrusting up into her dripping cunt as hard as I could. Professor Grant matched my actions, driving her body down onto my cock faster and faster.\n\n\"Yes ... yes ... do it ... uhhhh ... so close ... so ... uhhh ... fucking close ... do it baby ... do it\"\n\nThat was what pushed me over the edge. My hips shot up off the couch, driving my cock as deep into her as I could manage. I felt the muscles near my prostate tightening and I grabbed her hips with my hands. My fingers dug into her flesh, holding her down on my cock. Restraining her in this way seemed to spur her on as much as her words were spurring me on.\n\n\"Do it ... do it you fucking ... stud ... cum in me ... cum in my cunt ... do it ... cum with me ... FUCKING DO IT\"\n\nAnd I did. My cock pulsed harder than I had ever felt and I came in this goddess. For the first time in my life, I came in a woman's pussy. And Professor Grant came with me. Her body shuddered against mine as she drove her hips down hard. I felt her pussy working my shaft, squeezing and releasing in an attempt to pull my seed deep into her body. She groaned in my ear, continuing to tell me to cum in her ... driving my cock to spasm even harder in her. \n\n\"Yes baby ... yes ... give it to me Justin ... feel it ... I feel it inside ... deep inside me baby\"\n\nWe sat there for a few minutes, drifting down from our mutual high. Although my mouth had left her nipple, my head was still on her chest. Turned to the side, the position had my ear pressed up against body. I could hear her heart pounding. It felt good to sit there with this woman on top of me, her arms wrapped around my head, holding me to her. I didn't have to wonder about her, I knew that right then, right there, Professor Grant felt the same.\n\n\"Thank you,\" she whispered.\n\n\"Professor Grant, don't you think I should be thanking you?\" I inquired.\n\n\"Erin,\" she said. \"My name is Erin. After what we just shared, I want you to call me by my first name.\"\n\n\"As you wish Erin\"\n\n\"And no Justin, you shouldn't be thanking me at all.\"\n\nI began to think that the rumors surrounding Professor Grant's divorce were true. For the past ten weeks, this woman had simply been a shrew. She gave no quarter to anyone in our class, not even to one of guys when his mother was in the hospital after her car was hit by a drunk driver. Even the girls in the class considered her the definition of a cold-hearted bitch. Up until today, I have never seen her smile. But sitting here, I could feel a warmth from her. Erin Grant was hardly an ice queen. She was probably just burned badly by her ex-husband.\n\n\"I haven't felt like this in over ten years,\" she continued. \"Relaxed and safe. There have been times when I didn't know if I would ever feel secure in a man's arms again.\"\n\nFor the next ten minutes, Professor Grant shared the details of her divorce. There was her discovery of her husband's affair with his secretary, a taller girl with \"bolt-on\" tits that he had had paid for. There were years of weekend getaways he managed to take with the girl while Professor Grant had been immersed in her second PhD. For the last seven years of their marriage, he gave an unbelievable amount of verbal abuse to their daughters when he did talk to them. He was nothing more than an emotional void he gave to his daughters for three years before the divorce. He constantly criticized her professional achievements, as the advanced degrees didn't increase their personal wealth nearly as much as his skill in the stock market. He even said it was one of the things that drove him into the arms of his secretary. I laughed when she said that last one.\n\n\"You think that's funny,\" she asked.\n\n\"Hell yes. If anything, your degrees add to the package. I mean, not only do you have the body of a goddess but you have the brain of a genius. That thought alone is really hot.\"\n\nTo emphasize my point, I flexed my still hard cock in her pussy. She moaned in response.\n\n\"You really find that attractive Justin?\"\n\n\"Absolutely. Erin, with your body you could get just about anything you want. But there are lots of hot women walking around. Not many have the brains to achieve what you have. Two Doctoral Degrees ... how many people ever obtain one, let alone two? And in a scientific field no less. Women aren't the only people on this planet attracted to successful people.\"\n\nShe just sat there looking me in the eyes taking it all in. Then she kissed me lightly on the lips while she clenched her pussy tight around my cock.\n\n\"Is that why you're still hard?\"\n\n\"Mostly.\"\n\n\"Mostly?\" she inquired with a raised eye brow.\n\n\"Well, yes. I mean, you are downright fucking hot. To add to that is that wonderful brain and the success you have seen professionally because of that brain. It completely sets you apart from the legions of brainless beauties walking around. You're not common. You are a priceless treasure.\"\n\nBy now she was just looking up at me as if I was center of her universe. I leaned forward and kissed her on the nose.\n\n\"Plus there is the whole teacher thing. I mean, what man hasn't ever had a 'teacher' fantasy. And I didn't get just any teacher. I got one of the hottest fucking women I have ever seen, and more so, she's probably the smartest woman in the state.\"\n\nShe smiled at that comment.\n\n\"How do you do that?\"\n\n\"Do what Erin?\" I asked. I was really beginning to enjoy the way her name rolled off my tongue.\n\n\"Know how to say just what to say to make my heart flutter.\"\n\nI blushed at her statement.\n\n\"Someone once told that I was an 'old soul, with a young mind'. I just say what know ... in my heart as well as my mind.\" \n\n\"Can I ask you favor of you Justin?\"\n\n\"Erin, after what we just did, you can ask me to walk across hot coals if you like.\"\n\n\"Would you take me again?\" she asked finally getting up off of me.\n\n\"I would love to.\"\n\nShe smiled upon hearing my response. She took my hand and pulled me up off the couch. Grabbing the blanket on the far side, she laid it across the leather cushions and then sat down. \n\n\"Good,\" she said, as she leaned up and kissed me. \"Earlier was without thinking. I needed that more than you'll ever know. But right now, before we have to part, I want to indulge my one of my own fantasies.\"\n\nI just grinned and said, \"you want one of your students ...\"\n\n\"... to fuck me good and proper,\" she finished. \"Give me a minute to clean up a bit.\"\n\n\"What for?\" I asked.\n\n\"Because I'm a mess. Your cum and mine is dripping down my thighs.\"\n\nI stepped forward and put my hand between her legs. I ran my fingers across the sticky mess coating her pussy.\n\n\"True,\" I said pushing her back on the couch. \"But right now, before we have to part, that mess belongs to me. And I intend on making it much worse before letting you clean up.\"\n\nErin didn't reply. She just kissed me deeply and wrapped her hand around my hard, sticky cock. She sat on the couch, laid back, and pulled me on top of her. With a graceful motion, she guided me to her sex and wrapped her legs around me. I looked her deeply in the eyes as this woman used her hand to aim my cock and her legs to drive me in. I sank into her slowly. And even though a part of me I wanted so desperately to fuck her as fast and hard as I could, a larger part of me wanted to give her what I believed she needed. I know she wanted her student to fuck her, but looking down into those pools of sapphire I saw another need ... the need to be loved. And there was no way I could just fuck her and leave this need completely unfulfilled.\n\nI pulled back slowly and held for just a second before sliding slowly back into her. She moaned at the movement and smiled as she looked up at me. Again I pulled back slowly.  Again I slid back into her, this time grinding my pelvic bone against her clit. Erin just closed her eyes and moaned a bit more loudly. Again I repeated the slowly withdrawal from and penetration into her sex. It took a couple of more successions, but I found a slow, measured pace that I could maintain. Erin noticed this and told me to go faster.\n\nLooking directly into her eyes, I said, \"Not just yet Erin.\"\n\n\"Why?\"\n\n\"Because my fantasy would never be complete if I didn't get to slowly make love to my teacher. And right here, right now, I know you want that too.\"\n\nSmiling at up at me, she wrapped her arms around my neck. She pulled her head up and kissed me deeply, moaning softly into my mouth as I kept my unhurried pace. I thought she might admit it, but as she continued to kiss me it occurred to me she couldn't. This day was probably pushing her limits emotionally. And I realized that if I was going to make love to Erin Grant and give her what she needed that I had to take her silence as the only response she would be able to give me.\n\nSo I closed my eyes and lost myself to in the sensations of loving Erin Grant. I made love to... slowly ... methodically ... completely. I was able to maintain that pace for another 30 minutes, driving my teacher to two more orgasms. Her lips never left mine and I felt her body against mine the entire time, moving with me. We shared as perfect a union as I ever believed possible. And as she writhed beneath me in the midst of her second orgasm, her pussy clenching and unclenching uncontrollably, I came with her.\n\nWe turned just a bit, so that I was laying on my back, pinning her between my body and the back of the couch. She put her head on my chest and draped her left arm over my body to hold me. In the calm of that moment, I heard her whisper 'thank you' ... to which I whispered my reply 'you're welcome'. And then I fell asleep.\n\nWhen I awoke, I sighed when I realized that Erin hadn't moved and was still laying against me. I realized that the sun was just starting to set. With her office facing west and with the tinted windows, the entire room was bathed in a soft, warm glow. I smiled. This was indeed a perfect moment.\n\n\"Good evening,\" she said softly.\n\n\"Good evening,\" I replied. \"This is a delicious way to wake up. You here ... with me ... sharing the sunset. Have you been awake long?\"\n\n\"About five minutes,\" she said softly. \"I didn't want to wake you. You looked so peaceful sleeping.\"\n\n\"Thank you.\"\n\n\"But now that you're up ...\"\n\n\"... bathroom ... yes, good idea.\"\n\n\"You go first.\"\n\nErin lifted her head and I got up. I darted into the bathroom and quickly relieved myself. I washed my hands and returned to the main room. Walking over to the couch where she was laying, I took a minute to admire Erin Grant. She was just beautiful. I reached for her hands and helped her to her feet. She walked gracefully to the bathroom and shut the door. I turned and looked out the window. She must have picked the best office in the building with the view it provided. I lifted my arms high above my head and stretched. Nearly ten minutes passed before she came out and moved to join me in admiring the view. At least I thought she would join me for the view.",
        "I felt her breasts against my back as her arms wrapped around my chest. I felt her right cheek against my back and realized the complexities of what we had done must have finally settled in.\n\n\"I know I don't have to ask ...\" she started.\n\n\"I won't tell a soul Erin. Not one. Not ever.\"\n\nI felt her sigh against me.\n\n\"Today is ours and I am not sharing that with anyone save you.\"\n\nHer arms loosened slightly and I felt her move around my right side. I lifted my arm and put it around her shoulders holding her to me. I leaned down to kiss her gently on the lips and I realized I could fall in love with this woman.\n\n\"After today, you will always have a place in my heart Erin.\"\n\n\"And you in mine Justin.\"\n\nWe watched the sunset in silence. After a few minutes, I heard her giggle. Before I could ask her why, I felt her hand brush my erect cock.\n\n\"I can't believe you're still hard.\"\n\n\"I'm an 18 year-old man standing next to a completely naked goddess and you expect my cock to be anything but rock hard?\"\n\n\"Eighteen ... oh God,\" she groaned.\n\n\"Just setting in is it?\" I asked with a grin.\n\n\"Yes. But ...\"\n\n\"But what?\"\n\n\"But ... I can't believe how much the thought excites me too. You're younger than both my daughters. I'm 41 years-old. 4 ... 1 ... and just thinking about the fact that this hard, young cock stretched my pussy twice today makes my entire body tingle. And to top it off you made me cum harder today than I have in probably 15 years. And four times ... four.\"\n\n\"Wow.\"\n\n\"Wow?\" she inquired, looking up at me.\n\n\"Yeah ... wow. That's just a little mind-blowing ... that I made you cum that hard. That's ... well, that's a pretty big compliment.\"\n\n\"You better believe it young man. I hope that little tidbit makes your fantasy complete.\"\n\nI was silent. There was one thing left in that fantasy, but I didn't want to push my luck. Erin stepped directly in front of me.\n\n\"Don't tell me there's something else?\"\n\n\"Just one scene that I have wanted to do with a teacher,\" I said.\n\nErin put her hands on her hips and cocked her head to the side. \"You want my ass?\"\n\nHELLO I thought. I'm glad her hands weren't on my cock right this second, because she would have felt it throb upon hearing her asking me if wanted her ass.\n\n\"No that's not it.\"\n\n\"Tell me what it is then Justin.\"\n\n\"Erin, right now this day has been perfect. In my dreams I couldn't have wished for a day like this ... to spend a day with someone half the woman you are. I don't need anything more.\"\n\nShe walked right up to me. She kissed me tenderly on the lips.\n\n\"That is the sweetest thing I have been told in a long time,\" she stated, once the kiss was broken. \"But in case you missed it, today has been as much about me as it has about you. At some point we're going to leave this office and go back to being just professor and student. Before that happens though, I am going to give you your complete fantasy. Because right now, I want to give you that fantasy. I need to ... I need to give you your complete fantasy.\"\n\nI felt her hand wrap around my shaft with those words. Then she squeezed my cock tightly with her fist.\n\n\"You don't want to disappoint your teacher, do you Justin?\"\n\n\"No Professor Grant.\"\n\nShe smiled at my return to calling her 'Professor Grant'.\n\n\"Then be a good young man and tell me what I want to know.\"\n\n\"Yes Professor Grant. I want you to sit back in your chair. I want your legs over the arms of the chair, spreading yourself wide open. Then I want to eat your dripping pussy until you cum hard on my mouth and tongue, feeding me your juices.\"\n\nShe groaned at hearing this, and her hand began to slowly jack my cock back and forth.\n\n\"And when you're done cumming on my mouth, I want to bend you over your desk and fuck you as deep and hard as I can until I cum one last time deep in your tight cunt.\"\n\nProfessor Grant pulled me by my cock around her desk. She sat down in her chair and smiled up at me as she spread her legs over the arms of her chair. It was the first time I had clearly seen her pussy and she gave me a minute to drink in the sight. Her legs were muscular and smooth. They were bereft of any hair. Surrounding her sex, was a layer of light blonde hair that extended to a slightly thicker patch above her clit. Her clit was swollen, but was still just a small though hard button at the top of her sex. Her lips were a light shade of pink and the moisture of her arousal made them shine in the light. She ran her hand down her body and pushed her fingers down her slit. Her middle finger ran over her clit and slowly pushed into her pussy. The two fingers next to this one ran between her inner and outer lips, making the inner lips stand out and emphasizing the digit now pushing into her pussy.\n\n\"Mmmmmmmmm,\" she moaned. \"Do you like what you see Mr. Rhodes?\"\n\n\"Fuck yes Professor Grant.\"\n\nWith a wicked grin she said, \"Then get to it young man. Eat your teacher's pussy and drink her cum.\"\n\nI kneeled before Professor Grant, fully prepared to pleasure my teacher to the fullest. I leaned in and inhaled deeply, taking in the sweet scent of her sex. With my tongue but an inch away, I exhaled slowly over her clit. As I began to run out of air, I let my tongue touch her clit. As she moaned at the sensation, I inhaled slowly and deeply drawing air slowly over her clit and my tongue. A surprised gasp came from her throat. I sucked her clit into my mouth and flicked my tongue over it. I held my lips down over her clit, continuing to suck gently to keep her clit exposed and to provide added stimulation. With a skill taught to me years ago, I worked my tongue around her button as I held it captive between my lips. \n\nAs I heard her moans increase, I felt her hips begin to thrust up and down into my mouth. As she continued to climb the wave, I brought my right hand up and began to trace her pussy lips. Her moans became louder and one of her hands found its way to the back of my head. With leverage, she began to thrust her hips harder into my mouth and holding my head against her sex. I continued my assault but managed to peek up at her and I would have smiled if I could. Her other hand was gently playing with her hard nipple. A nipple that was heaving up and down as Professor Grant breathed deeply over and over. At first she was gently rubbing and occasionally twisting the nub. I watched and I waited. Soon she would be at the crest of that wave.\n\nI didn't have to wait long. In seconds, she started groaning loudly and pulling nipple hard while twisting it. When I saw this, I pushed my finger straight into my professor's snatch. A string of obscenities coupled with loud moaning spewed from her lips. It took some effort, but I continued sucking and working her clit as my finger searched for its prize. I knew I had found it when her entire body jerked and she screamed. I was leaning against her right thigh and I hooked my left arm under and around her leg. When she had taken in another deep breath of air, I struck both places. I pushed the finger of my right hand against her g-spot once more, using the leverage gained with my left arm to hold her a bit better. At the same time, I bit down on her clit with my teeth and tongue. The result was instantaneous: Professor Erin Grant came immediately. Another string of garbled words and moans came from her mouth. I continued to work her in both areas. When she said \"Oh fuck ... it's coming again ... again,\" I quickly changed my position. With a quick jerk, I pulled my finger out of her pussy. I also let go of her leg.\n\n\"What are you doing,\" she yelled. \"Don't stop eating me.\"\n\nI had no intention of stopping. I just wanted to do as my professor instructed. I wanted to drink her cum. Changing my position enough, I wrapped each of my arms around her thighs. I could feel her staring down at me trying to figure out what I was doing, which is exactly what I wanted. Leaning down, I lowered my mouth onto her sex. I had my lips around her inner lips, so all of the area immediately surrounding her pussy was in my mouth. I heard her try to say something, but couldn't make it out. Not that I really cared. I pushed my tongue into her hole and her words ceased. Her hips shot up into me face, driving my tongue a little further into her pussy and I was rewarded with the taste of her juices. I can only hold my breath for about 45-50 seconds so I knew I had to finish this quickly.\n\nWith my tongue buried in her cunt and my mouth enclosed around her lips, the fingers of my right hand found her clit. Using my thumb and two fingers, I pinched her clit stopping just short of being too much. My efforts met with the result I had hoped for. Both of her hands grabbed the hair on the back of my head. She grunted hard and held my mouth against her pussy. She started pumping her hips up and down as if my tongue was a soft little cock inside her. I began to rub her clit as best I could while keeping my fingers pressed firmly against it. It was then that Professor Grant gave me her treasure. Her hips pumped up one last time and she came hard. And my goddess came, I drank her nectar. Keeping my tongue inside her quivering pussy, I lapped up as much as I could ... for as long as I could. Finally, I had to pull my mouth away and drink in the oxygen.\n\nI looked up and Professor Grant. Her breathing was hard and labored. Her eyes were looking straight at me, but were unfocused. I took a minute to savor the taste of her juices. The nectar of her sex was ambrosia to me. I wanted to drink from her more, but there was a more urgent matter to attend to. I stood up in front of Erin and pulled her up out of her chair. Looking into her eyes, I could see that she realized what was about to happen, but was still recovering from the back-to-back orgasms I had wretched from her body. The soft smile that Erin wore told me that even though she couldn't respond, she knew and approved of what I was about to do.\n\nAs fortune would have it, the left side of her desk was relatively empty. Knowing she was still a bit weak, I wrapped one arm around her waist and picked her up. I knew she would not have the strength to stand, so I would have to settle for laying her back on her desk instead of bending her over it. The sacrifices we have to make huh?\n\nAs I laid her on the desk, she just closed her eyes and spread her legs as best she could. I moved around and grabbed her legs one at a time, placing each one over my shoulders. As I moved forward, I saw her nod slowly up and down. My cock was hard as steel in anticipation of the fucking I was going to give Erin. A soft moan escaped her lips as the head nestled between her nether lips and as I pushed into her, I saw her eyes close. When I was completely buried in her, I stroked back and forth a few times, savoring the wet flesh of her pussy sucking on my cock. With her legs almost straight up my chest, I wrapped my arms around thighs and began to fuck my beautiful teacher in earnest.\n\nI found a pace that I could keep where I could pull almost my entire shaft out of her before plunging it back inside her. Her pussy felt really good around my cock and I continued to fuck her with vigor. It didn't take long for me to begin sweating and soon I could drops of my sweat running down my face and body. Shortly after this, I felt Professor Grant pushing up against me. I looked up and saw that her right hand was gripping the side of her desk and that her left hand was moving down her body. I continued to pump her hard, but watched her hand moving down between her legs. I parted her legs a little when she pushed and felt her fingertips at the union of my cock and her pussy. She moaned softly as she felt my shaft sawing in and out of her soaking hole. Then she slid her fingers back up enough to begin playing with her clit. I felt her begin to clench and unclench those wonderful pussy muscles and knew it wouldn't be long before I came. I looked up and saw that she had her eyes squeezed shut, putting all her concentration into the sensations her pussy was providing me.\n\n\"Do it,\" she said. \"Do it ... cum in my wet pussy ... don't worry about me ... just fuck me ... fuck my cunt and fill it with your cum.\"\n\nHearing this, my hips started pumping as fast and hard. I wanted to do just that ... cum my beautiful teacher's soaking pussy one last time.\n\n\"That's it Justin ... right now ... give it to me ... don't you want to ... want to cum in my cunt ... one last time.\"\n\nI could feel my balls tightening up. I was there.\n\n\"Yes baby ... now ... cum in my cunt now.\"\n\nAnd cum I did. My arms locked around her thighs and my hips shot forward against her one last time. My cock lurched so hard I knew she felt it.\n\n\"Yes ... yes ... cum in me ... cumming with you ... fill me ... please fill me.\"\n\nShe got her wish. My first shot of cum drove her to one final orgasm. Her words made me push so hard to cum, I could feel the muscles around my prostrate squeezing to give her every bit I had. I felt my cock pulse again and again. I felt her pussy squeeze again and again on my shaft. I have never cum so hard or so much in my life. My entire body seemed to be contracting and the body of my professor was matching me movement for movement. \n\nAs we lay there panting hard, I looked at my professor.\n\n\"Thank you Professor Grant. Thank you so much Erin.\"\n\n\"You're welcome,\" she replied and leaned up to kiss me softly. \"And thank you Justin.\"\n\nAs I started to pull out, she asked me if I could carry her to the couch first. Pulling her to me, I felt her wrap her legs around my waist and her arms around my neck. I put my hands under the cheeks of her ass and slowly proceeded to the couch. The street lights and city lights provided some low illumination for the room, which made it possible to navigate. I laid her down and pulled my wet cock from her.\n\n\"You should go get cleaned up,\" she told me as she pulled the blanket around her body.\n\nI gathered my clothes and went into the bathroom, shutting the door before turning on the light. Ten minutes later, I turned the light off and returned to the office. I knelt down and looked Professor Grant in the eyes. I cupped her cheek with my hand and kissed her tenderly. She didn't move, but returned the kiss.\n\n\"That kiss was the perfect way to end our fantasies,\" she told me. \"Thank you Justin.\"\n\n\"Yes it is. Would you like me to wait and walk you to your car?\"\n\n\"No. I'm going to rest for a bit. Then I think I will go home and spend the entire weekend in bed ... sleeping.\"\n\n\"As you wish Erin,\" I said and leaned up to kiss her forehead gently.\n\nShe smiled and closed her eyes. I left her office and made certain the door shut very softly.\n\nI walked to my car daydreaming about Professor Erin Grant. As I started my car, it occurred to me that she would be my professor again in two years. I wondered if I should show up late to her finals then too. "
    ],
    "authorname": "NicholasTemplar",
    "tags": [
        "professor",
        "student",
        "teacher",
        "older"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-education-ch-01"
}