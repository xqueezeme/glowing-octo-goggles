{
    "title": "Claiming Treasure Ch. 21-25",
    "pages": [
        "Spider Monkey's POV \n\nI-5 North of San Francisco \n\nI stayed in the back seat while Vic drove, keeping my computer equipment going as we drove north. The Prospect who drove our car and trailer from Las Vegas had met us yesterday in San Jose. He helped us store our motorcycles and more of my stuff from the storage garage into the enclosed trailer. We repacked everything so Heather's Harley and her things closer to the doors. We dropped the prospect off at the airport for the flight back, then continued up the coast towards Heather's new home in Washington state. \n\nRori had called Vic and asked us to cut our vacation short. The news about her grandfather Charles, though not unexpected, had hit her hard. The coroner had released the body yesterday, and they cremated his body immediately. \n\nRori and Chase wanted to go to New York for his funeral and asked if we could come back to help run things. When I asked why we were needed, Vic just said that Ron and Teri had to travel on business and weren't available. It took all of my control to avoid blurting out that they were trying to figure out how the Werewolf Council server was compromised. Or that it was the Adirondack Pack, and as Alphas, they needed to be there. \n\nI'd learned so much in the last week or so since I got into the Council server. I marveled at how well they hid their nature; Vic couldn't say no to me, but he never let on anything about it. The same went for Rori and the Pack; I had seen them as another Club, like the Brotherhood chapters I'd been a part of for decades. Their facilities were resort quality, and the parties epic, but I never saw or heard anything to hint they were all WEREWOLVES. \n\nI'd even seen one shift, as the cellphone video of Tatiana shifting and attacking Heather was on the server. \n\nI looked up at the profile of Vic at the wheel and wondered what his wolf looked like. I imagined his wolf would be like him. Tall, black fur with streaks of gray around the muzzle, broad-shouldered, deep chest, tapering to a trim waist and powerful thighs. My big dog nickname was prophetic. I smiled as another thought came to mind. If his body is proportional, his wolfie wiener would almost be dragging on the ground! \n\nI knew the Council had discovered the hack, but I'd left a worm behind to hide the evidence. I hoped they had good backups of their data because the program would turn their servers into expensive doorstops in just a few minutes. I wasn't worried about them finding me; the hacking server routed the files through servers in two other countries, and the file transfers were untraceable. Just to be safe, I activated a program on my hacking server that erased all the files there, overwriting them several times, so there was no chance of recovery. I didn't need them anyway, as I had already been sent the updated data each night. The hacked files were on removable hard drives connected to my laptop, along with the hard drives I'd removed from my clean server. I made it a habit to remove and lock up my data in a fireproof safe, but for this trip, I brought it all with me. \n\n\"What's the plan when we get to Carson's place,\" I asked him. \n\n\"It's going to be dark by the time we arrive, so we'll unload her stuff into the garage and stay the night,\" he said. \"We can get going in the morning. It will take us two days to get home with me driving,\" he said. \n\nI didn't like driving with a big trailer behind me, especially in the mountains. The seat only adjusted so far for a tiny thing like me. \"Is that going to be fast enough? I thought Chase and Rori needed to leave tomorrow night.\" \n\n\"It's as fast as I can drive safely,\" he said. \"And that's weather permitting. Can you check the travel forecast?\" \n\nI minimized the window for the audio files I was playing, all recordings of the Werewolf Council members calling out from their headquarters. I had been working backward from the most recent communications, taking notes on each file and its contents. I was pulling up Intellicast's page when my phone rang. It was the alarm company for my home. \"Hello?\" \n\n\"Miss King, this is First Security Alarm Company with an alert. We are showing a door open alarm on the front entrance door. Can you confirm if this alarm is valid?\" \n\n\"I'm twelve hundred miles away,\" I said. \"No one is supposed to be in my home.\" Before we left, Vic arranged for some of his people to clean the carpets and repaint two rooms, but they had finished up days ago. \n\n\"We are contacting the police, oh, wait... I have a fire alarm, as well. Contacting 911 in your area, please stay on the line.\" I told Vic what was happening as I waited for the operator to come back on the line. He immediately called the security center at Arrowhead to tell them what was going on. \n\nIt was a long thirty seconds. \"Miss King, I have multiple fire alarms in the home now. Can you confirm if there are any pets or occupants in the home?\" \n\n\"Nothing,\" I said. I didn't even have a fish. \n\n\"Emergency services are on their way to your home, and I have provided the 911 operator with your contact information,\" she said. \"Thank you for using First Security,\" she said before hanging up. \n\n\"Our home is on fire!\" \n\n\"I know.\" He had an earphone in, so I couldn't hear the other side of the conversation. \"The house is completely engulfed. Someone broke in and torched it.\" \n\n\"Shit.\" I looked over at the bag on my seat where the hard drives were. Everything else in my computer room I could replace. \"I hope that safe we buried in the basement is as fireproof and waterproof as they say.\" \n\n\"It's bolted to the floor of the panic room, and it would take them a lot longer than two minutes to breach the room and break into the safe,\" he said. \"Your money should be safe.\" I'd kept about a quarter-million in cash from the Sons of Tezcatlipoca heist, after processing the money I needed to buy and refurbish our home. I didn't trust banks with everything. \n\n\"Who would do this?\" \n\n\"Who wouldn't, if they knew who you were and what you had been doing. The Sons, the Cartels, any of them could be behind it.\" \n\nI'd made a lot of enemies. I didn't think any of them knew who I was. \"Bastards.\" \n\nHe listened and gave me updates. The security cameras could see the back of my house, and he told me when the first Sheriff car arrived. One disadvantage to living where we did was that the closest fire station was a good fifteen minutes away. The first fire trucks showed up five minutes after the roof of our home collapsed. \"It's too late to save the house,\" Vic told me. \"Our neighbors to the south, their home has caught on fire. The fire department is trying to limit the damage.\" \n\nI felt sorry for Mrs. Winters; her husband served her with divorce papers at Christmas, after thirty years of marriage, to marry his twenty-four-year-old secretary. She got the lake house in the settlement. I was relieved to remember she was staying with her daughter in Florida now. \n\n\"Well, this sucks,\" I said. I got another call, this time from the Sheriff's Department. I told them what I knew, which wasn't much. I had a lot of computer equipment, but no other jewelry or valuables. I didn't know who might have done it. When they hung up, I called my insurance company and gave them the bad news. \"I won't be back in town for several days,\" I told the claims adjuster. \n\n\"We will speak with the fire investigators and survey the damage,\" she told me. \"Given the clear indications of arson, this claim will take longer than normal to process.\" She gave me more information about filing the claim and what my policy would cover for temporary housing. I was exhausted when I hung up. \"Do the Arrowhead cameras show anything?\" \n\n\"They do, but not in enough detail to make out license plates,\" he said. \"One vehicle, maybe a Suburban, and four people go in, all wearing ski masks and gloves. Two are carrying gas cans. A man and woman come out, carrying computer stuff or large boxes, they can't tell. A minute later, the other two come running out as the home goes up in flames.\" \n\n\"Can you have them provide it to the Sheriff?\" \n\n\"Already done,\" he said. \n\n\"What do I go back to if I don't have a house,\" I asked. \n\n\"You can stay with Carson for a bit? I have to head back and deal with stuff so that I wouldn't be around much anyway. If the Sons or Cartel tracked you to our home, I don't want you anywhere close to it.\" \n\nI couldn't argue with that, as much as I hated the idea of him not being around me. \"I suppose I could hang out with Heather for a few days,\" I said. \n\n\"I'll make the call.\" \n\nI let him do that. Needing to calm down, I went back to the work I was doing, listening to the files. I was listening to Councilman Oscar Millner talking to another male. It was apparent they knew each other, and I was about to skip to the next recording when I heard the name. \n\nMy blood ran cold as I listened to the rest of the conversation. \n\nI closed my eyes as I considered the potential consequences of the action I KNEW I had to take. It might destroy my marriage, and it could cost me my life, but could I let this happen? \n\nNo. I could not let the Council do this to Heather. \n\n\"Vic, I need you to call Carson Nygaard RIGHT NOW and put it on speaker,\" I said. \n\n\"What do you need-\" \n\n\"NOW,\" I said. \"This is an emergency.\" \n\n\"I don't have his number,\" he said. \n\n\"THEN GET IT. NOW.\" \n\nHe nodded and told his phone to call Chase Nygaard while he pulled off the freeway and parked on the exit ramp. A few rings in, he answered. \"Vic? Are you and Spider Monkey safe?\" \n\n\"Chase, it's Spider. Carson and Heather are in danger, and I need to talk to them immediately.\" \n\n\"Hang on.\" \n\nI heard some tones, and then a female voice came on the line. \"Carson Nygaard's office, this is McKenna,\" she said. \n\n\"McKenna, this is Chase Nygaard. I need to speak to Carson immediately.\" \n\n\"I'm sorry, Alpha Chase, but Carson is with Heather in the outer range of our territory. He's out of link range.\" \n\n\"Who is the senior person there?\" \n\n\"Hold for Beta Carl Striker, sir.\" \n\nThere was a short pause before he picked up. \"Alpha Chase, how may I help you?\" \n\n\"Go ahead, Spider Monkey,\" Chase said. \n\n\"There's a threat against Heather Rhodes and your Alpha,\" I said. \"Councilman Millner hired men to come to your land and wait for Heather to leave the safety of the Pack House. He told them he has an asset in your Pack who would tell them when and where they would be.\" \n\n\"SHIT.\" I heard yelling, and it was thirty seconds before he came back to us. \"I know where he's at, and we're passing a warning along now. I have to go; my mate is out there with them.\" He hung up. \n\nChase was still on the line. \"Now, what is this plan you overheard?\" I took the phone from Vic and held it near my laptop's speaker while I played the call, which lasted almost ten minutes. When it ended, Chase let out a long sigh. \"Teri was right,\" he groaned out. \n\n\"About what,\" Vic said. \n\n\"Your wife knows about us and what we are. She was the one who hacked the Werewolf Council servers. She's the one Beta Teri was supposed to find, and the Council figured it out.\" \n\nVic looked over at me, and his eyes filled with fear. \"The Council sent those men to our home,\" he said. \"They will kill you.\" \n\nCh. 22 \n\nAlpha Rori King's POV \n\nArrowhead Pack House, Alpha Offices \n\n\"They will kill you.\" \n\nI thought about what Vic just told me, and he was right. It was worse than that, though. \n\n\"Vic, they will kill you too,\" I said. \"They were in your house. They have your scent, maybe one of them recognized it. The house is in her name, but a simple records search will show the two of you are married.\" \n\n\"Fuck me sideways,\" I heard him say over the phone. \"Spider Monkey didn't just step in a pile of shit. No, that would be easy. She stomped on it before kicking it around the house, then tracked it over the white carpet.\" \n\n\"Yeah.\" \n\nChase figured it out before me. \"You need to get off the road and off the grid now,\" he said. \"DO NOT go to Cascade Pack; if they have people watching it, and if the Council has a mole there, they will know. The Council has Spider as a human who knows all their secrets. You are her accomplice, with a grudge against the Council because you fell for a human. Both of you will have kill orders against you; I bet the Council is already drafting the order.\" \n\n\"We can't let them get away with this,\" Spider Monkey answered. \"These people are evil; I watched the trials, and they grant Heather asylum in public, then authorize a hit on her in private! If they hurt Heather, nothing is going to stop me from taking them down.\" \n\n\"I'm not saying we let them get away with anything. I'm just saying we have to be careful how we go about it. You've got one phone conversation, gained illegally. How can I use it without condemning myself?\" I leaned back into Chase's chest. \"We can't let this explode into open warfare; too many people will get hurt that way.\" \n\n\"What do you mean? You WON at trial,\" Spider Monkey said. \"Two-thirds of the Pack supported you!\" \n\nShe didn't understand Pack politics. \"I know we convinced two-thirds of the Alphas that I shouldn't be punished further, but that was vastly different than this. Heather was exposed to us by accident, in a way that was the werewolf's fault, not hers. You found out under the nose of one of my Pack members. Many will see this as a failing of me as an Alpha and a leader. If I try and protect you, it's going to be even worse. I don't know if my family would be enough to protect us.\" \n\nVic didn't answer for ten or fifteen seconds. \"I cannot drag you or the Pack down with me,\" he said. \"I owe you too much. Let my daughter know I'm sorry I won't be able to see her again. She can have everything I left behind.\" \n\n\"You can tell her yourself,\" I said. \"The Council hasn't sent out a communication yet, so she won't be under Alpha command to report your call. Tell Celeste how much you love her, but don't tell her anything she shouldn't know. \n\n\"I appreciate your loyalty, Vic,\" Chase said. \"When your chain of command is corrupt, you can't depend on the institution to police itself. Change has to come from the outside, and justice as well.\" \n\n\"You are right. Spider Monkey was my charge, and what she has done is on me, not you. I renounce you as my Alphas, and declare myself no longer to be part of the Arrowhead Pack.\" \n\n\"You can't join another Pack; none would dare take you in. You'll be a rogue wolf, hiding from us all,\" Chase said. \n\n\"I'll be alive with my wife and our child,\" Vic said. \"You do not know where I am or what I am doing, and you will not hear from us again. May the blessings of Luna be upon you and the Arrowhead Pack,\" he said. \n\n\"Vic, I just wish someone would do to the Council and those evil Alphas what we did to the Sons,\" I said. If they were breaking bad, they should go all the way. Make those fuckers suffer. \"May her blessings rest upon you and your family, Vic.\" I wiped away a tear. \"Goodbye.\" \n\nChase reached forward and ended the call. I was breaking down in his lap, so he took care of the announcement. \"Attention Arrowhead Pack. Former Beta Vic Knightly has admitted that he and his wife Spider Monkey hacked the Werewolf Council server. His reckless and illegal actions have broken the trust of our Pack and our People as a whole. Vic is no longer a member of the Arrowhead Pack. He and Spider Monkey are now fugitives. No member of the Arrowhead Pack may initiate contact with him or his wife, and any contact with them is to be reported to your Alphas immediately. We will discuss this further at a Pack meeting following dinner, so please hold any questions until then. Continue with your work.\" \n\nI leaned my head against his chest as the tears flowed. He rocked me in the office chair while his fingers massaged the knot in my neck. \"We're running out of Betas,\" I said. \n\n\"We've got a couple of old bikers,\" he teased. \n\n\"Thank Luna we have Ron and Teri coming back.\" I sat up quickly. \"Oh shit. They're going to think Teri was in on it too. She's in danger!\" \n\nHe looked at the clock. \"They'll be landing in Minneapolis in an hour, and our driver will bring them back. Those people who burned down the house might still be around. What are you thinking?\" \n\n\"We tell them the truth,\" I said. I filled Chase in on the plan before we made the phone call. \n\n\"Chairman Coffey's office,\" a woman answered. \n\n\"This is Alpha Rori King, calling from Arrowhead. I need to speak to the Chairman or an available Council member. It's urgent.\" \n\n\"One moment, please.\" \n\nShe put me on hold, but not for long. \"WHAT THE FUCK IS GOING ON WITH YOUR PEOPLE, ALPHA RORI,\" Chairman Coffey yelled. \n\n\"I know who the hacker is, Mr. Chairman. It's a human, who goes by the name Spider Monkey. She's the one my Beta Vic got pregnant,\" I said. \n\n\"We KNOW about your Spider problem. I sent the exterminators your way.\" \n\nI looked out the window, where I could still see the smoldering hole where Spider Monkey's house used to be. \"That was you?\" \n\n\"People loyal to me figured it out Spider Monkey was the hacker eight hours ago.\" I could tell he was still pissed. \n\n\"Why didn't you call me?\" \n\n\"Because I don't trust you outside a jail cell, Rori. Alpha John says his Beta Brian Steele broke his Pack bond, and now he's disappeared with your Betas. They never checked out with the team, and no one can reach them.\" \n\n\"I didn't direct my Betas to do anything, and I haven't even talked to them,\" I said. That was true since they had called Chase. \"Look, Mr. Chairman, I have my own problems to deal with today. I don't have time for your baseless accusations or secret squirrel antics. Spider Monkey and Vic just got off the phone with me. The ungrateful fucks heard about their house, and they think I did it when I found out they hacked MY server. If I don't transfer them a million dollars by noon tomorrow, they're going to release it all on the Internet.\" \n\n\"SON OF A BITCH,\" he said. \n\n\"You and I haven't agreed on coming out to humans, but an old werewolf plus a skilled hacker with a grudge is about the worst-case scenario. I'm going to pay it, I have no choice,\" I said. \n\n\"Fine.\" I heard some people talking in the background. \"If Steele shows up with your Betas, give Alpha John a call.\" \n\n\"Yes, Mr. Chairman.\" He hung up without saying goodbye. \n\n\"And now we wait,\" Chase said. \n\nSpider Monkey's POV \n\nI-5, Northern California \n\n\"I'm sorry, baby.\" I'd been crying ever since Vic hung up the phone. I'd ruined everything; my home was a smoldering mess, my friends couldn't talk to me, and Vic had to give up his Pack and his daughter. \n\nI could see Vic was struggling with it too. \"Why?\" \n\nI blew my nose, then leaned back against the seat. I'd hidden so much from Vic, and if I kept secrets now, I'd lose him for sure. \"When Frank and Colletta stayed with us, that afternoon you went back to work, I saw their computer connect, and they were streaming a video. Since they were on my network, I used their login to see what they were watching. It was the Council trial of Chase and Rori, the live feed.\" \n\n\"Oh shit,\" he said. \n\n\"Yeah. I couldn't stop watching, and my emotions were all over the place. I realized you had hidden things from me, BIG things, but it wasn't just you. Chase, Rori, Teri, Ron- all of them were werewolves, and nobody trusted me enough to tell me. Not even you, not even after we got married.\" \n\nHe at least looked guilty. \"I couldn't tell you, not after what had happened with Chase and Rori and Heather. They would have killed you.\" \n\n\"I figured that out as I watched the trial, and then I wasn't mad at you. My Big Dog was trying to protect me. I was mad at the Council and those Alphas just for threatening Heather, who hadn't done anything but love a man. I watched a few of the trials, and then I decided to hack the system so I'd have all the data.\" ",
        "\"And you got caught.\" \n\n\"Yes. Four days ago, the updates stopped coming, and I got a notification the worm programs had activated. I had those set up to wipe out all traces of my hack, but it didn't work.\" \n\nHe didn't say anything as we drove north. \"I'm not sorry I hacked the data. If I hadn't, we wouldn't have found out about the plot against Carson and Heather.\" \n\n\"We don't even know if the warning helped,\" he said. \"I need to think.\" \n\nHis silence hurt more than anything else. When he refused to even look back at me, I went back to work. I had to see what else I could dig up from the archives. \n\nCh. 23 \n\nHeather Rhodes' POV \n\nCascade Pack Territory \n\nMy lips were tingling, and I wanted more, just as he pulled away. \n\n\"We're in danger,\" he said. He stood me up, quickly pulling off his clothes and shifting into his wolf. He moved in front of me, starting to growl at the surrounding woods as I looked to see what was going on. The rock we had our picnic on was about eight feet wide and fifteen feet long, and it extended out to a sheer cliff that dropped fifty feet to the pool under the waterfall at the back. To the sides, it was a sheer drop to the rocks below. \n\nI unzipped my jacket and tossed it aside, not wanting it in the way if I had to shoot my way out of this. I drew my Glock 19 from the shoulder holster, moving it to a low carry with my two-hand grip. \"Humans or wolves,\" I asked. He snapped his teeth together twice as his nose sought out the scent. \"Help on the way?\" \n\nHe nodded, then looked back at me. Gesturing with his head, he wanted me to stay put while he dealt with it. \"No,\" I said. \"If this mate thing is the truth, if I'm yours just as you are mine, we live or die together. Do you understand me, wolf boy?\" \n\nHe looked at me, his eyes pleading, but I wasn't backing down on this. If one of us had to die today, it would be me. His Pack could go on without him, while I had little family or future. He gave up, letting out a low groan as he did so. \n\nHis eyes jerked to the treeline, where a tan and black wolf stepped out from behind the trees. Carson started to growl, his hackles up and tail high behind him. He took a few steps forward before tossing his head up and letting out a ferocious howl. \n\nThere were now eight wolves surrounding us, plus a naked man in his human form who walked out from behind a tree. He was tall and muscled, with claw scars on his arms and chest. I think Carson recognized him because he looked at him and growled loudly. \"You're surrounded, Alpha. Give up the girl, and you can walk away.\" \n\nI just snorted. \"Really? You come on to OUR land and make demands of us?\" \n\n\"Our? You are NOTHING to him and nothing to us. You're just a pathetic human girl, a slut who spread her legs for a weak wolf to rut. Toss your pistol over the cliff and come quietly, and your friend gets to live. Resist, and you both die.\" \n\n\"You want this pistol? Molon Labe',\" I said. \n\n\"What?\" \n\nI moved until my knee was touching Carson's leg, hoping he would get the idea as I pushed his leg to the right. \"Watch my right,\" I whispered. \n\nThere was a flash of fur from the left side, followed by a yelp and a tangled, rolling ball of fur as Beta Angelina arrived and took out the wolf on the far left. Everyone took this as the start, and I raised my pistol in the isosceles stance I'd learned and started my firing with the next wolf from the left. I touched off four shots as the wolf ran forward, hitting him twice. The last round hit him just above his right eye, and his body crumpled and rolled through the grass and gravel, finally coming to a stop twenty feet away from me. \n\nI had already shifted my aim right, getting in three shots on the next charging wolf. I fired my last shot at point-blank range as it leaped for my throat. He yelps as the round hit his stomach, and then I wasn't there. I'd dropped and rolled to my right, escaping his jaws but not his claws. His back leg caught my shoulder and tore through the sweater and underlayer. I bit back a scream as the claws raked furrows in my skin. \n\nI heard the wolf scramble for purchase on the water-slick rock before it fell over the edge. I didn't look because another wolf was on me before I could raise my gun on target. Sharp teeth ripped into flesh as his jaws clamped onto my right forearm just above the wrist, and I heard the cracking of bone as it bit down and shook. \n\nMy Glock fell from my hand, skittering across the rock and over the edge. \n\nI screamed in pain as he abused my arm, and I fought to regain focus. I needed to keep him away from my throat, so I swung my left leg up and around and wrapped it around his neck. He let go of my arm when my thighs tightened, and his front paws pushed off my butt and back to get free. I drew a throwing knife from the sheath on my useless right arm with my left, then stabbed him through the eye with it. \n\nHis howl of pain gave me strength, and I left the knife in place as I scrambled out from under him. He was pawing at it, trying to get it out without success. As soon as my right let was free, I kicked him hard in the chest and sent him rolling for the edge of the rock. A second kick knocked his back legs over, and from there, gravity did the rest. He growled as he tried to pull himself back up, but his nails found no purchase, and he disappeared over the edge. \n\nI looked up to see the big naked guy standing in front of me. To the right, Carson was fighting off three wolves while a fourth lay bleeding out onto the rocks. On the left side, Angelina's wolf was fighting a losing battle against a much larger male. \"Who did this,\" I asked as I rolled over and onto my knees. \n\n\"Councilman Millner sends his regards. The Council will not tolerate your continued existence,\" he said. \"It's nothing personal; it's just Pack business.\" \n\nThe confession told me they had no intention of letting any of us live. I moved my left hand under my torn shirt, where my stomach was bleeding profusely. Hunched over, my shirt hanging forward, I turned my body so he couldn't see what I was doing. \"It's personal to ME,\" I said. My left hand gripped my backup Glock and pulled it down and free from the bang bra holster. His eyes got wide as he saw it, and he lunged forward as I brought the pistol up and started firing. \n\nHe rushed me and grabbed my left arm, and that was the opening I needed. Falling backward, I got my right foot under his stomach and pushed up against his overextended body. He flew forward towards the cliff, realizing too late what I had done to him. \n\nIt was the perfect plan, except when he refused to let go of my arm. His claws extended into my arm and held on, almost pulling my shoulder out of its socket as he went over the edge. I screamed as he pulled me off the rock, finally free but tumbling with him as I cartwheeled down towards the water. It seemed like I was in the air forever, and them my face hit the water. The impact took the breath out of me, and the cold temperature shocked me to where I couldn't move. \n\nI gulped in the cold water as I sank. \n\nCarson Nygaard's POV \n\nTriple Falls, Cascade Pack Territory \n\nI loved her, but she refused to let me protect her like I needed to. That drove my wolf nuts. \n\nI looked out at the wolves who had invaded my lands and were threatening my mate. \"Angelina, Cascade Pack, I've got eight hostiles, make that nine,\" I said as the man walked out. \"Observation rock over triple falls.\" \n\n\"I'm thirty seconds out, Alpha,\" Angelina said. \n\n\"Anyone else in range?\" \n\n\"Warrior Thomas, I'm fifteen minutes out.\" \n\nNo response. I growled as I recognized the man. He was a low-level Beta in the Blue River Pack, or at least he had been. \"You're surrounded, Alpha. Give up the girl, and you can walk away.\" \n\n\"Hostiles are from Blue River Pack, maybe others. Thomas, relay the information.\" I looked for a way out. Tactically, this position sucked. We were trapped on three sides by the cliff, and backup was not coming anytime soon. Our patrols only went through this area once a day, and we were out of link range with the Pack. \"Really? You come on to OUR land and make demands of us?\" I didn't take my eyes off the threat, but my wolf and I loved this. She called it OURS. \n\n\"Our? You are NOTHING to him and nothing to us. You're just a pathetic human slut who spread her legs for a wolf. Toss your pistol over the cliff and come quietly, and your friend gets to live. Resist, and you both die.\" I would make him pay for the insult. \n\n\"You want this pistol? Molon Labe',\" Heather said. Come And Get It. She was perfect, my fierce little mate. Here we were, trapped and outnumbered, just like the Battle of Thermopylae. I just hoped we weren't all killed like in that fight. \n\n\"What?\" I couldn't believe the man didn't know his Greek. \n\nHeather's knee pushed at my back left leg before she whispered, \"Watch my right.\" I'd watch her shoot in the FATS simulator many times, and she always shot from left to right. \n\nWe weren't going down without a fight. \n\n\"Five... four...three...\" I saw a flash of fur to the left as Angelina ran full speed and crashed into the nearest wolf. That set everything in motion, and I moved forward to engage the wolves on the right side. If I did it right, she'd be able to escape to the left as I held them off. \n\nFour wolves went towards me, and I picked the biggest one to go after first. He was second from the right and nearly as large as I was. Our chests crashed together as I sought to grab his throat, and he tried for mine. I had leverage and knocked him over, exploiting a momentary opening to rip open his throat. \n\nMy victory was short-lived, as I was knocked from my feet while another wolf tore into my flanks. I rolled quickly to my feet, slashing the ear of the wolf who missed my throat by the smallest of margin. They circled me, keeping me away from my mate as she fired her pistol before she screamed in pain. I wanted to go to her, but the three worked together to keep me isolated. I couldn't protect myself on all sides, and they used this well. In thirty seconds, they had inflicted far more damage than I could. I was slowing down from fatigue, blood loss, and dozens of bites. \n\nOne of the wolves fighting Heather let out a pained howl, and I snuck a look. Heather had been hurt badly and was on her knees with her right arm held close as the Blue River Beta advanced on her. I attacked the wolf in between us, ignoring the attacks of the two others. I ripped into his shoulder, finally getting the opening I needed to break their circle. She had to live, and I had to protect her from this man. \n\nI wouldn't reach her in time. One of the wolves behind me jumped on my back, sharp teeth digging into my shoulders as his dead weight drove me to the ground. I rolled him off, yelping in pain as his teeth tore free. When I looked up again, my heart dropped. \n\nThe Beta had rushed Heather as she shot at him before he knocked her arm away. I watched in horror as he pulled her over the cliff, her scream and his howl echoing off the canyon wall. \n\nI shifted, screaming my rage as I rushed for the edge. The wolves I had been fighting with heard the howls of my Pack approaching and went the other way. I got to the cliff edge and looked down; I saw a wolf smashed on the rocks near the pool, but no sign of Heather. \"Heather went into the water, I'm going after her,\" I said. Jumping forward, I pulled my arms in and crossed my legs, praying to Luna that the pool was deep enough to survive the fall. \n\nCh. 24 \n\nAlpha Carson Nygaard's POV \n\nTriple Falls, Cascade Pack Territory \n\nThe combination of the fall and the cold water on my torn skin was a combination I never wanted to experience again. \n\nThe pool was deep and cold, just above freezing with the snowmelt from higher in the mountains. I pushed through the shock of the water entry, swimming with the current instead of fighting it. I popped my head up out of the water, and Luna was with me. I saw Heather floating face-down about ten feet away. \n\nSwimming over, I grabbed her and rolled her face up. She wasn't breathing, but I had to get her out of the water first. Wrapping my right arm over her chest, I kept her face out of the water with my chest as I swam on my left side for the shallow water under the cliff. \n\n\"Alpha!\" It was Angelica from the cliff above. \n\n\"Get help to me, and make sure Doc knows she's been bitten,\" I sent to the Pack. \n\n\"I'm ten minutes out, and I passed the message to Beta Carl,\" Thomas said. \"They are sending vehicles to the forest service road.\" \n\n\"Make sure they have a stretcher and something to warm her up.\" I got close enough my feet could touch bottom, and I stood up and carried her out of the water in my arms. Her right arm was hanging at an angle, obviously broken, but it was the drowning I had to handle first. Setting her on the rocky shore, I checked her, and she wasn't breathing. I started my first round of CPR. \n\nAngelina showed up during the second set; she was torn up from the fight, but she ignored the pain as she scrambled down the narrow trail. I finished the compressions and gave Heather two rescue breaths; after the second, she started to cough up water. I rolled her on her side as Heather drew in a breath, then coughed more of the cold water out. I sat back on my bleeding legs and sent a thank you to Luna as she started to breathe on her own. \"Get those wet clothes off her,\" said Angelina as she set down the coat that Heather had tossed aside. \n\nI pulled off her boots and pants, then shifted a claw and cut the top from her. \"She needs a splint for her arm,\" I said. \n\nAngelina went off to find something as I pulled the dry jacket onto the cold and unconscious body of my mate. She returned with two pieces of wood, and we used them and her shoelaces to keep her forearm straight. I carefully put her arm through the sleeve. \"We have to get her out of here and get her warm,\" I said. \n\n\"Shift, and I'll hold her on top of you,\" my Beta said. I shifted, my wounds tearing back open, and the pain cutting through as I changed forms. I ignored it, crouching down while Angelina picked my mate up and set her on my back. She kept her in place as I stood, her arms and legs hanging down on either side of me, her head on top of my shoulders. \"Take it slow going up the trail. We can't let her fall.\" \n\nI started for the winding trail that led out of the narrow canyon as Angelina followed, keeping a hand on her Luna, so she didn't slide off. Warrior Thomas showed up just before we reached the top of the trail. \"Help is on the way, Alpha. How is our Luna?\" \n\n\"Cold,\" I said. \"Find some grass to lay her down on.\" He waved me over to a place in the sun, and I got down on my belly in the center. Angelina pulled her to the ground and tucked in behind her to warm her up. Thomas laid over her bare legs, and we warmed her while we waited for help to arrive. I was linking with Doc, letting him know everything that happened and what our injuries were. \n\nWhen help arrived, there was a lot of it. I sent warriors to track the wolves that had fled while the rest helped us. Doc was among them, running with Frank Grimes, who was carrying Doc's emergency bag around his neck as he ran up in wolf form. \"Get her on the stretcher,\" he told the other men. The rescue stretcher was unique to werewolves; it started as an aluminum wire-mesh rescue litter, but added at each corner was a harness. It allowed the litter to be carried by straps that went around the shoulders of four wolves, or it could be carried by two or four in human form. \n\nThomas and Angelina got up, and Doc quickly examined her before three of them gently lifted her onto the litter, wrapped in warm blankets. Doc cut away the splint and fastened a better one as the men strapped her in place. \"We've got to get her back; she's hypothermic and in shock. Probably a good thing, it will slow down her reaction to the bite,\" he said. \n\nFour wolves each took a corner, holding her a few feet up between the group. They started off for the vehicles while Doc checked us over. \"You look like hell,\" he told me. \"Can you make it to the road, or do I need to send a team back for you?\" \n\n\"I'm going with my mate,\" I said as I got up. I was covered in blood and felt weak from blood loss, but I'd make it. \n\n\"I can go slowly,\" Angelina said before she shifted. She whined in pain as she was torn up from her fight. \n\n\"Stay with her and take the Jeep home,\" he told some of the remaining wolves. I limped off, stretching out my muscles until I was in a painful run. The road was on the other side of the river, and the bridge we'd installed was a good five miles downriver. Doc ran ahead to catch up to his Luna, while four warriors stayed with me. No one was going to forget that we were under attack, with enemy wolves on our territory somewhere. \n\n\"Where is Beta Carl,\" I asked. \n\n\"Directing things from the Pack House and angry as hell,\" one of the warriors said. \"All non-combatants are locked up in the Pack safe room, and there hasn't been an attack there yet. We've left wolves staggered along to relay messages.\" \n\n\"Good. Get a message to Alpha Coral that some of her men were involved in the attack. Then get Alpha Chase on the line, I need to talk to him about the bite.\" \n\n\"We've been talking to him,\" Frank said as we reached the bridge. \"Doc is making preparations to change her.\" \n\nI ran across the bridge to the cargo van that Doc used as a makeshift ambulance. Frank and I shifted and climbed in the back; as soon as the door closed, we were moving. Doc was hanging a bag of blood, and I could see four more units on the warmer. \"What are you doing?\" \n\n\"Saving her life,\" Doc said. \"Heather was bitten multiple times by a werewolf, and the reaction is starting. She'll be dead by morning if I don't do this now.\" \n\n\"The blood will counteract the normal human reaction,\" Frank said. \"It will also boost her healing.\" He pulled out a blanket and handed it to me. I quickly wrapped it around my body. \n\nI knew what he'd been through, and a chill went through me as I realized what I would have to do. \"Heather's going to have to change.\" \n\n\"Yes, she is,\" Doc said. \"If she wouldn't want that, you need to tell me now. I can keep her comfortable and make her death as painless as possible.\" \n\nMy wolf pushed forward at the thought. \"NO! She's MINE, and she has to live!\" \n\n\"Then this is what we have to do.\" He inserted the needle and started the drip; he'd used a large-bore needle so it would go fast. \"This is only the second time we've done this; we don't know how much blood is needed, but Frank got five pints, so that's what I'll do. Once her blood pressure recovers, I'll remove a pint for every pint I give her.\" \n\nFrank had connected the monitors to her, and I could see the vitals were low. Blood pressure was eighty over forty, pulse 100, and oxygen 90%. Doc put an oxygen mask on her as we bounced down the forest road. \"I have to give her a mating bite like Colletta gave you?\" \n\n\"Yes. The blood was enough to heal me and start the change, but I got stuck. I would have died without it,\" Frank said. \n\n\"The change will kill her babies!\" My hand went to her belly, where the twins were. \n\n\"Her babies might be dead already, from the fight or the fall. Yes, the babies will not survive the change to a wolf. They are too young to be viable. I'm sorry,\" Doc said. \"We need to focus on saving our Luna.\" \n\n\"DAMMIT!\" I was mad at the attackers, I was furious at the Council, but mostly I was angry at myself. I'd brought her to a remote part of the territory with only Angelina as protection. Our little picnic was going to cost her the twins. ",
        "\"Sit down, Alpha. Let me look at your injuries.\" \n\n\"They're not important.\" \n\n\"I can do nothing for her until it is time to change bags. Let me see.\" I lowered the blanket, and he poked around. \"Looks like I have some cleaning and sewing to do,\" he said. \n\n\"Angelina is as bad,\" I said. \"Take her first.\" \n\nHe'd just hung the second bag when we arrived at the Pack House. Men were waiting to carry the stretcher to Medical, while Carl was waiting for his mate to arrive. \"Alpha, the Pack House area is secure. The trail of the attackers led over the mountain to a trailhead; they escaped in vehicles.\" \n\n\"One was from Blue River, I recognized him,\" I said. \n\n\"They all were. Alpha Coral reported one Beta, five Warriors, and three Omegas missing from her Pack. All of them were on probation when they disappeared. She is investigating, and has been in contact with Alpha Rori.\" We stood waiting, hearing the last vehicles approaching. \"There's more. Alpha Rori got a call from Beta Vic and his wife Spider Monkey. She was the one who hacked the Council server.\" \n\n\"Oh, fuck,\" I said. \"That was Spider?\" \n\n\"She found a recording in the files and played it for us. Councilman Millner was talking to a man in the Blue River Pack. He was upset with Alpha Coral for killing his son, and he directed the attack on you and your mate, sir.\" \n\n\"I'm going to deep-fry his nuts and make him choke on them,\" I said as I fought a shift. \n\n\"No, you're going to be with your mate, just like I will be with mine,\" Beta Carl said. He was at the door as soon as it stopped, lifting his mate out of the back seat. She was in human form, covered in cuts and bites, and they kissed before he started carrying her in. \n\nI went ahead, opening the clinic door for them. \"Put her down over there,\" Doc said to Carl as he handed her a syringe. \"Inject her with this for the pain. Clean her wounds and glue the shallow ones closed with superglue.\" \n\nDoc gave me the same injection, then walked back to Heather's bedside. He cleaned and sutured the bite wound, then used a portable X-ray to check Heather's broken right forearm. \"Alpha, you stand on that side and stay out of the way. I'll be with you in a minute.\" \n\n\"I'm not leaving her side,\" I said. \n\n\"Fine. Hold your mate's good hand and watch her face, not me,\" he said. \n\n\"Why not?\" \n\n\"I have to reset this break before it starts to heal wrong. It's going to hurt a lot, and I don't want you attacking me for hurting her, plus I don't know when she's going to wake up. Keep her calm if she does.\" I sat next to the bed on a stool, leaning forward to push her dark hair away from her bruised face. Doc was right; I didn't want to know what those crunching sounds were. Satisfied, he applied a brace to keep it from moving. \"This bag is almost in; I'll hang the next unit, then I'll start patching you up.\" \n\n\"Is it working?\" \n\n\"Her vitals have improved, and her body temperature is a little higher than normal now. She's doing well, considering she drowned before you brought her back. She's got some strength to her.\" \n\n\"It was nine on three, and Heather killed four of them,\" I said proudly, as I leaned over and kissed her forehead. \"Took out two rapid-fire in seconds before the third bit her gun arm.\" \n\n\"She will be a good Luna for us, but now she needs to rest while I fix up her mate. Lie down on that gurney, on your stomach.\" He went to wash up. \n\nI moved the gurney close enough I could hold her hand, then laid down. \"By Luna, Alpha Carson, you've got to stop losing fights. I'm getting too old for all these stitches,\" he teased as he brought his supplies over. \n\n\"Four on one and I killed one,\" I said. \n\n\"I killed one at the beginning and fought to a draw with the second,\" Angelina said. \"OW!\" \n\n\"Sorry, love, but there was dirt in there,\" Carl said apologetically. \n\nDoc didn't apologize as he cleaned, rinsed, and glued or sewed up the mess that was my back, shoulders, and legs. It took him about twenty minutes to finish me, then he went to check on Angelina. \"Nice work, Carl,\" he said. It was another ten minutes stitching up the deeper wounds on her. \n\nBy this time, the third unit of werewolf blood had gone in. Doc started a line to remove blood from Heather's left foot while the fourth unit of blood started going in. \"Her vitals are stable, she should be waking soon,\" he said as he pushed the gurney over, lowering the rails between us. \n\n\"The babies?\" \n\n\"You know what is going to happen, Alpha. It would be better for her if the miscarriage happened now.\" \n\nI knew what the outcome was, but I didn't care. \"Check the twins anyway. Get Heather one last ultrasound picture before they are gone.\" \n\nHe had no choice, as I'd made it a command. \"This isn't a good idea, Alpha.\" He pulled over the stand with the portable ultrasound and spread the gel on her baby bump. I watched the screen, seeing the pair still active and moving. \"Well, they aren't stressed now, but when she changes...\" \n\n\"I know.\" I scooted over until my side and leg were touching Heather, then Doc put some blankets over both of us. \"Pray for her,\" I said. \n\n\"We're all praying for our Luna,\" Beta Carl said. \"Get some rest; I'm having food sent over.\" \n\n\"Carl?\" \n\n\"Yes, Alpha?\" \n\n\"Find out who the mole is. Bring me the traitor who gave up their Luna.\" \n\n\"Yes, sir. \" He kissed his sleeping mate and left the room. \n\nI fell asleep to the beeping of the monitors, hand in hand with my love. \n\nCh. 25 \n\nSpider Monkey's POV \n\nInterstate 5 in Oregon \n\nI got a text from Rori as I was going through the audio files. \"I know you can't return to take care of your house. I've already reached an agreement with your neighbor Mrs. Winters; her home is a loss. That would leave only one property to buy to expand our Pack boundary around the edge of the lake. If you agree, I'll transfer $1M to your account. You sign over the home, insurance settlement, and land to me.\" \n\n\"Baby, do you see any way we'd ever be able to move back to our house on the lake?\" \n\nHe shook his head. \"I don't see it anytime soon. What's going on?\" \n\nI told him about the offer and Rori's plan to expand her territory. \"How is she going to send us a million dollars without getting in trouble with the Council for it?\" \n\nGood question, so I texted her back. I snorted at the answer. \"She's quick,\" I said. \"She said she told the Council we hacked the Arrowhead system, and wanted a million dollars to keep from exposing it.\" \n\n\"There's no going back, not with the Council. Rori burned us with them so she could stay out of trouble for now.\" He snuck a quick look back at me. \"What about the cash?\" \n\n\"We'll work that out.\" I sent a text to Rori, accepting the offer. I would mail her a limited power of attorney so she would be able to act in my stead for the insurance claim and real estate transfer when we got to our next place. Finally, I told her about the fireproof safe down in the basement, including the combinations for the door to the room and the safe room. I offered to take a check, but she had a better idea. \"I'll get the bag to Carson, and he can get it to you.\" \n\n\"I don't want to endanger Heather or Carson by contacting them,\" I said. \n\n\"Carson won't care about that, not after the attack today.\" \n\n\"WHAT? Are they all right?\" \n\n\"For now. Carson and his Beta Angelina will recover, but Heather got bit and took a fall. I have to go. Bye.\" \n\nI looked at the screen in disbelief. \"Vic? Rori said someone attacked Carson and Heather today.\" \n\nThe SUV swerved a little from Vic's reaction before he caught it. \"Are they alive?\" \n\n\"She said Carson and Angelina should recover, but Heather got bit and fell.\" \n\nVic's jaw clenched, and his knuckles tightened on the steering wheel. \"SON OF A BITCH!\" His hand slapped the dash. \n\n\"They are alive, honey. Maybe our warning stopped Heather from being killed? Rori said Carson wouldn't mind if we contacted them.\" \n\n\"We didn't save her, baby. A werewolf bite is always fatal to a human. She'll be dead by tomorrow.\" \n\n\"NO!\" Tears started to fall; we were too late. Vic got some control back as he drove, while I thought about what was next. \n\n\"They could change her,\" he finally said. \"She could live if they changed her.\" \n\n\"What do you mean?\" \n\n\"I was going to tell you after you had our baby,\" he said. \"Colletta's mate, Frank Grimes, he was human. Alpha Rori brought him into a Council meeting to talk about how technology was inevitably going to result in the exposure of our kind. It didn't go well, and Councilman Millner's son tore his throat open.\" \n\n\"But Frank is alive,\" I said. \n\n\"Yes. Chase was there in the room to pinch off the severed artery, and he and the Oxbow Lake Pack Doctor managed to save his life. He lost a lot of blood, and he needed a lot of blood. Since it was a Pack clinic, and all they had on hand was werewolf blood. Our curse, the thing that gives us the wolf and our dual nature, it is a blood curse. Enough of Frank's blood got replaced with ours that it changed him. He almost died in the process; the blood helped him heal, but the first change is painful. For him, it was torture. His wolf kept trying to come out, but couldn't take over, and his body was giving out.\" \n\n\"How did he live then?\" \n\n\"Colletta bit his neck, claiming him as her mate. The mating bond gave him enough strength to complete the change. Mates are like that; they can help the other heal, take some of their pain, and encourage each other. Somehow she helped him push through it all. He's the only person in our recorded history to go from human to werewolf.\" \n\n\"So, it's possible.\" My mind was whirring. \"I can be like you. I can grow old WITH you instead of ON you since you live so long. Why didn't you tell me before?\" \n\n\"You saw the trial. Frank's exposure to us during the attack on Rori's home was not planned, and it nearly resulted in her removal and imprisonment. We are working to change the laws, but until then, I was not allowed to tell you our secret.\" \n\n\"But I found out your secret.\" \n\n\"Yes, and the Council knows that you know. That's another reason Rori had to disavow us. She wouldn't survive a second trial, not with what you've done to the Council.\" \n\nShit. \"Were you going to change me?\" \n\n\"I was going to give you the option,\" he said. \"Look, it's only worked once, and Frank damn near died. For him, there was no other choice. You have one, and I didn't know if you would want to take the risk. Hell, I didn't know how you would react to me being a werewolf! In any case, we can't do it now.\" \n\n\"Why not?\" \n\n\"No access to a doctor or a werewolf blood bank, for one. The second reason is that you're pregnant. Pregnancies don't survive a shift to our wolf form; one of the reasons we are so protective of our pregnant females is because they can't shift to protect themselves. Rori, Teri, Coral, Margaret, Colletta, all of them are vulnerable during their pregnancies.\" \n\n\"No wonder their mates don't like them out of reach. It is a bit over the top at times, but it makes sense now,\" I said. I thought back to how attentive and possessive Chase and Ron behaved with their wives, er, mates. Come to think of it, Vic was the same way. \"Why don't the babies survive?\" \n\n\"Technically, babies are not part of the mother. They don't share the same blood, as the placenta separates them from the mother's bloodstream while still providing the exchange of oxygen, nutrients, and waste products needed for them to grow. When the change takes the mother's body, it changes her form in an instant, and her internal organs move and reshape. The placenta and baby don't change forms because they can't. Werewolf babies don't shift until their mid-teens. As a result, the shift causes the placenta to detach. The mother should heal from blood loss, but the baby miscarries.\" He looked back at me in the mirror. \"There was no reason to tell you about anything until you had our child.\" \n\n\"I need to talk to them.\" I had Heather's cellphone number, so I called that; it went to voice mail so I left a message. I found Carson's phone number in the three-way chat we'd had with Chase, and it was the same thing. \"They aren't answering,\" I said. \n\n\"Rori said they were hurt, so they are probably in the clinic.\" \n\n\"I guess.\" \n\n\"I'm not comfortable talking to anyone but them until we know who the mole is. Meanwhile, we need to figure out where we're going to crash for the night. Going to the Cascade Pack is out, and I don't have contacts this way,\" he said. His whole life had been spent in Alaska until he switched to the Arrowhead Pack, so that wasn't surprising. Any werewolf contacts were off-limits anyway. \n\nI checked my phone and found Thor's number; he was President of the Portland Steel Brotherhood chapter. Dialing it, he picked up on the second ring. \"Thor.\" \n\n\"It's Spider Monkey. I'm in trouble and need your help, Thor. I'm hot, but not radioactive.\" He needed to know people were after me, but it wasn't going to get him or the Club in trouble. \n\n\"Where are you?\" \n\n\"A few hours out. You'll probably want to call everyone to church to hear about this.\" \n\n\"Anyone on your ass I have to deal with?\" \n\n\"No pursuit yet. I went a hack too far and got burned. I'll see you soon, and I'm bringing my old man with me.\" \n\n\"Our Club is here for you, Spider. See you soon.\" He hung up, and I moved into the front seat so I could program the navigation system for the new address. \"We'll be able to crash there, and the Club will protect us.\" \n\n\"We can't stay long. The Council went after Rori when she was hiding out in the Clubs; they could send wolves to walk around nearby and check for my scent. We need a place off the grid, with no ties to either of us.\" \n\n\"I'm sure they can help.\" We were about ninety minutes out. \"I need to get set up again, and I need your help going through the phone calls and data. Who knows what other surprises are still in there.\" \n\n\"What will we do when we find it?\" \n\n\"We use it to fucking bury them,\" I said. \"Rori told us that she wished someone would do to the Council and the evil Alphas what we did to the Sons of Tezcatlipoca.\" \n\n\"And we hacked them and exploited it, taking away their money, burning their operations and bringing in law enforcement to clean up,\" he said. \"We can't bring law enforcement in. I won't risk the innocent being hurt in this.\" \n\n\"That leaves me a lot of room. Two people can do a lot of damage if we do it right.\" I looked over at him. \"How far are you willing to go, Vic?\" \n\n\"As far as it takes. Our only chance of getting our lives back is to help Rori eliminate the people who are against her, and against humans. Rori wants this; I may have renounced her Pack to protect her, but I'm still loyal to her and Chase. We can do things she can't.\" He looked at me. \"There will be a division of labor here. You point, I shoot. You and our baby need to survive.\" \n\n\"You're not dying on me, Vic. I won't let you.\" I took his hand as we drove north to Portland. \"When we get to the Portland Chapter, I have to take the lead. As a Steel Lady, I have status in the Club, and I know them.\" \n\n\"I met Thor and Vic when they came for the Arrowhead Rally last summer,\" he said. \n\n\"Sure, but you aren't a member of the Brotherhood, you're not even a prospect or a hang-around. You're my old man, and I'm not from their chapter. That means you stay quiet and respectful, even if they test you, which they will.\" \n\n\"I'll stay next to you.\" \n\nI just laughed at that. \"Biker Church is strictly for Club business. You won't be allowed. Hell, I wouldn't be allowed except I have to tell them what's going on. You'll stay in the bar with the Prospects and keep out of trouble. Don't lose your cool, even when they start with their dick-measuring contests.\" \n\n\"What, we lay them out on the bar? Soft or hard? I'll defend your honor, you know.\" \n\nI snorted and slapped his arm. \"If that is the contest, you'd easily win,\" I said. \"Seriously, they will want to test you and see what kind of man you are. They want to know if you are Brotherhood material.\" \n\n\"At least I ride,\" he said. \n\n\"If we stick around long enough, you should prospect the Brotherhood,\" I said. \"They will protect us, and it will help smooth the way if we have to move around. You heard about what the Club did for Rori; we could use that.\" \n\n\"I'll think about it,\" he said. \"If the wolves are looking for us, we'll have to keep out of sight. I'm not ruling it out. I like the Club, but it isn't our priority. Getting a cut takes a back seat to our main job, baby.\" \n\n\"Speaking of which, I better get back to that.\" I popped the buckle and climbed into the back seat, opening up my laptop. \"Let me know when we're ten minutes away.\""
    ],
    "authorname": "partwolf",
    "tags": [
        "biker",
        "luna",
        "motorcycle",
        "pack",
        "rogue",
        "war",
        "werewolf",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-21-25"
}