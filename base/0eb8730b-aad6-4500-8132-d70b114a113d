{
    "title": "Suzie's Lessons Ch. 08",
    "pages": [
        "This is a fictional account.\n\n*\n\nJanie told Suzie the next morning that she had told her parents the whole story and apologized for not calling Suzie back the night before. The discussion with her parents had lasted nearly two hours, mainly because they were concerned about drugs. Her dad also took a ton of convincing not to call Mr. Williams right away, but he finally agreed to wait and talk to Suzie's dad this morning. \n\nOn the ride to school with Curt, they continued talking. Janie's dad had insisted she go with Suzie and give her statement too, even though the cops had not yet called. So it was agreed Curt would drive them both after practice and drama club and wait for them. Suzie was to expect a call from her dad around noon about his conversation with the attorney. \n\nWhen they got to school, parked, and walked to the entrance, Scott and Peggy were there. They had actually been waiting for Suzie. Scott and Peggy had already been called to give statements by the police. Peggy apologized to Suzie but they had to tell the police she was there.  Suzie was okay with them telling the truth but she asked about Mary.\n\n\"Peggy, did you say anything about Mary?\" Suzie asked.\n\n\"No, we just told them we didn't know the girl being talked about in the papers,\" Peggy said.\n\n\"That was brilliant,\" Suzie said. \"Maybe we can use the same line. What do you think Curt?\"\n\n\"Maybe but you need to hear what your dad says after he talks with the lawyer.\"\n\n\"Lawyer?\" Scott said. \"Your dad is talking to a lawyer about this?\"\n\n\"Yes, I had to tell them everything once the cops called my house,\" Suzie said. \"The only way I could keep him from calling Mary's parents was to agree for him to talk to his lawyer about how to handle this.\"\n\n\"Oh, my God, it's going to come out about poor Mary then, most likely,\" Peggy said.\n\n\"I'm afraid it might,\" Suzie said. \n\n\"I had to tell my parents too,\" Janie said. \"They wanted to call the Williamses also. My dad would of, if not for waiting for Mr. Johnson to talk with the attorney today.\"\n\n\"Poor Mary,\" Scott said. \"Her name is going to get dragged into this and she's going to have to endure the embarrassment at school and even go through a trial. They say the evidence against Kevin and his brother Keith is pretty compelling and they're likely to do time even as a first offense.\"\n\n\"We'd better get to classes,\" Curt said. \"Scott and Peggy, keep us posted on what you hear and we'll do the same.\"\n\nSuzie had a hard time concentrating on classes as she went through the day. She ran into Mary third hour and she was remarkably chipper, talking of the prom. Suzie didn't have the heart to tell her then where Janie and she had to go after school. Mary would be devastated by the news, and she was doing so well at forgetting the whole thing, and putting it behind her. This would crush her if it came out. Suzie was sure of that. \n\nAt noon, she had her cell on. She had grabbed a sandwich from the cafe with Janie and Andy. They were all sitting in Andy's car eating and awaiting the call. At 12:10 her cell rang and, of course, it was her dad. After hello, she mostly just listened for about five minutes. Two \"but, Dad's\" were all Andy and Janie heard her say the whole beginning of the conversation. Suzie said two more 'okays' before she hung up.\n\n\"What'd he say?\" Janie was the first to ask.\n\n\"The lawyer, first and foremost, advises we tell the police everything,\" Suzie said. \"If we hold back evidence, we could be charged with obstruction of justice. But he also said we were only obligated to answer the questions they put to us. If we can somehow avoid mentioning Mary, the police would be hard pressed to charge us later on if they found out. That is, if we answered their questions specifically. Mr. Cohen would go with us, but it would only arouse more suspicion on the part of the police if we showed up with an attorney. My dad wants us to tell everything, Janie.\"\n\n\"Shit, Suzie, we can't do that to poor Mary. She'll be destroyed.\"\n\n\"Believe me, I know,\" Suzie said. \"Maybe we can do what Scott and Peggy did and plead we don't know the girl in the papers. That is mostly true, I only know Kathy Walker to say hi, nothing more.\"\n\n\"Yeah, I don't know her either, really,\" Janie said.\n\n\"God, I hope they take us both together,\" Suzie said. \"I'm so nervous; I know I'm going to blow this.\"\n\n\"Me too,\" Janie said. \n\n\"My dad isn't going to say anything to the Williamses until after he hears how our statements went, Janie,\" Suzie said. \n\nThey finished their lunch in near silence. Each deep in thought about Mary, the police, and trying to keep Mary from being hurt more. Suzie went through the rest of the day and even drama club preoccupied with the police appointment. She only hoped it didn't show too much when she was on stage repeating her lines. Fortunately, the studying the night before did come back to her and she carried the lines beautifully. Her memory had not failed her, but she wasn't sure her face had lacked the concern racking her body. At 4:00, she was walking into the parking lot, and Janie and Curt were already standing by the Ford Torino. \n\n\"How'd my pretty little actress do today?\" he said, trying to joke.\n\n\"Good, I hope,\" Suzie said. \"As long as my face didn't show the stress I'm feeling, I guess I was pretty good.\"\n\n\"You're going to need your acting skill for this police statement,\" Curt said. \"Janie was just filling me in on your conversation with your dad and his with the lawyer.\"\n\n\"What about me?\" Janie said, lamenting. \"At least she can act. I'm just a dumb soccer player.\"\n\n\"You're a better liar than me,\" Suzie joked halfheartedly.\n\n\"See, she's even good at acting the innocent one,\" Janie shot back.\n\n\"Good comeback. Proves you're the quicker witted one,\" Suzie said.\n\n\"We'll see about that,\" Janie fretted.\n\nCurt drove them to the station. They all went in together. At the counter, after explaining that Curt was their ride, and Janie also needed to give a statement since she was at the party too, the police asked them to sit in the lobby for a minute. About ten minutes later, a man and woman approached.\n\n\"I'm Detective John Peterson and this is Officer Lisa Banks. We're the people that will be taking your statements today. Would Suzie Johnson please come with us?\" he asked.\n\n\"Could we give our statements together?\" Suzie asked, shyly.\n\n\"I'm afraid not,\" Detective Peterson said.\n\nSuzie followed the officers down a hall and into a meeting room. It was a plain room with a rectangular table and four chairs. The table was set in the middle of the room. Other than a wall mirror, it had no other furniture or pictures. On the table was what looked like a recording device. \n\n\"Do you mind if we record our session?\" Detective Peterson said.\n\n\"No,\" Suzie said.\n\n\"Okay then, we'll begin,\" he said, as Officer Banks hit the record button on the player.\n\n\"Your name is Susannah Johnson, is that correct?\" he asked.\n\n\"Yes,\" Suzie said.\n\n\"Where were you last Saturday, April the nineteenth?\" he asked.\n\n\"At a party at Kevin Richards's house,\" she said.\n\n\"Was the party already started when you got there?\" he asked.\n\n\"Yes,\" she said.\n\n\"Did you have something to drink?\" he said.\n\n\"I had a Diet Coke,\" she said.\n\n\"You didn't drink a beer or anything else alcoholic?\" he asked.\n\n\"No,\" she said.\n\n\"Did your friend, Janie, have a beer?\" he asked.\n\n\"No. She had orange juice, as I recall,\" Suzie said, feeling bolder with these questions.\n\n\"Describe to us the scene at the party please?\" he asked.\n\nSuzie talked about each room and the outside. She told how they had a beer keg in the kitchen. The rooms were smoky from cigarettes, so she went outside. That was where she found her friends Scott and Peggy, and talked to them for a while. Suzie went on to talk about the music being kind of loud, and the rooms were mostly packed with people. She only knew a few people. Most of them seemed to be college friends of Kevin's older brother, Keith. They're the ones doing most of the drinking.\n\n\"What happened during the party? I mean did you notice anything unusual?\" he asked.\n\nSuzie then described the whole incident with finding Janie drugged on Ecstasy or something; how she pulled Janie from the clutches of this guy, Bart; and how Scott and Peggy helped her get Janie into the car. \n\n\"Did you see anyone put a pill in Janie's drink?\" he asked.\n\n\"No,\" she responded.\n\n\"How'd you know it was Ecstasy?\" he asked.\n\n\"I didn't, but I knew Janie would never take anything, on her own. I knew she wasn't drinking. So when I found her acting funny, I knew something was up,\" Suzie said.\n\n\"Did you see anyone else drugged?\" he asked.\n\n\"I understand from the paper that the girl raped was drugged too,\" Suzie slyly said.\n\n\"Did you see her?\" he asked.\n\n\"No, I didn't,\" Suzie said.\n\n\"Did you see anyone having sex?\" he asked.\n\n\"I saw plenty of people making out,\" Suzie said.\n\n\"But did you see anyone having sex?\" he asked again.\n\n\"No one having intercourse, if that's what you mean,\" Suzie said, hoping that wasn't a lie. After all, she didn't see anyone actually fucking Mary, only getting a blowjob. That wasn't sex according to President Clinton, right?\n\n\"Did you leave once your friend was in the car?\" he asked.\n\n\"Yes, after I said goodbye to Scott and Peggy,\" Suzie said.\n\n\"Was the party still going on at that point?\" he asked.\n\n\"Yes,\" Suzie said.\n\n\"Is there anything else you can tell us, Miss Johnson?\" Detective Peterson said.\n\n\"Not that I can think of,\" Suzie stated.\n\n\"Did you hear anything odd like a scream or anything?\" he asked.\n\n\"No,\" she said.\n\n\"Did you talk to any of the college guys?\" he asked.\n\n\"No,\" she said.\n\n\"Were many of them drunk?\" he asked.\n\n\"They were drinking beer, but I can't say if they were drunk,\" she said.\n\n\"How many people would you say you knew at the party besides Kevin?\" he asked.\n\n\"Only a handful,\" Suzie said.\n\n\"Can you name them?\" he asked.\n\nSuzie named them, but by their reactions it didn't appear she mentioned anyone they'd not already heard of as being there. She did not, however, mention Mary.\n\n\"Officer Banks has some photos to show you. Please identify any you can,\" he said.\n\nOfficer Banks spread over 30 pictures down on the table. Susie picked out Kevin and his brother Keith right away. The rest were not familiar, except one. She couldn't find or didn't recognize the guy that passed her leaving Mary as she had approached. But she did remember and recognize the guy that had been fucking her mouth, and pointed him out to the police.\n\n\"What about him?\" Officer Banks asked.\n\n\"I recognize him as one of the guys that was in the hallway by the bedrooms,\" Suzie said.\n\n\"You looked down the hallway leading to the bedrooms?\" Officer Banks asked.\n\n\"Yes, but he's the only one I recognize for certain was in the hallway,\" Suzie said. \n\nShe suppressed a smile as she said it. 'I hope they get that bastard,' she said to herself. She only wished she could remember the other guy that had probably been fucking Mary just before she entered the room. Suzie scanned the pictures again, but couldn't be certain of the other guy.  \"Anything else?\" Officer Banks asked.\n\n\"No,\" she said.\n\n\"One last question please, Miss Johnson. Could you repeat for me what I'm about to say?\" she asked.\n\n\"Sure,\" Suzie said, wondering what this was.\n\n\"Officer, I'd like to report a rape,\" Officer Banks said.\n\nSuzie paused for a second in shock, but then repeated the words.\n\n\"Thank you, Miss Johnson. Officer Banks will escort you out,\" Detective Peterson said.\n\n\"Oh, and one more thing, Miss Johnson, if you think of anything more please be sure to call us right away. This is a very serious case,\" he added.\n\n\"Okay,\" Suzie said, and she followed the officer back to Janie and Curt.  Officer Banks asked Janie to follow her. Janie glanced at Suzie for some sign of how it went, but with the officer there, Suzie couldn't say anything. After they left, she sat with Curt and whispered to him what had happened and how it went. She thought she had handled it well, not to expose Mary, but she could be accused of lying to them a couple times. \n\nSuzie was really worried, especially about the last part where she had to repeat the phrase. Those words reminded her of exactly what she said when she placed the 911 call. She had only finished telling Curt everything and sat back when Janie was lead back out by both police officers. Suzie was shocked they were done with Janie already. \n\n\"Thank you both for coming in,\" Detective Peterson said. \n\nCurt, Janie and Suzie walked to the door. Suzie looked back at the two officers. They were standing side by side talking and looking right at her. It sent a chill up her spine. \n\nThey walked to the car in silence but once inside and underway, the conversation flowed. First Suzie wanted to know how Janie finished so fast. \n\nJanie said, \"They figured out early on since I was drugged I did not see anything and could not be a reliable witness to anything.\" \n\nThey asked her preliminaries about how she got to the party; who she knew - and she didn't mention Mary either; what she had to drink; and whether she saw who put something in her drink. Once she was drugged they could not give much weight to anything she might say, so they finished with her quickly. \n\n\"Did they ask you to repeat a phrase?\" Suzie asked.\n\n\"No,\" Janie said.\n\n\"Did you look at pictures?\" she asked.\n\n\"No,\" Janie said.\n\n\"Did they ask you if you saw anyone having sex?\" Suzie asked.\n\n\"No,\" Janie said.\n\n\"Oh, I'm screwed!\" said Suzie, worried. \"They know I have more information than I told them. They're going to throw the book at me.\"\n\n\"Did you tell them about Mary?\" Janie asked.\n\n\"No,\" Suzie said.\n\n\"Phew,\" Janie said. \"I was hoping you hadn't because I didn't and if you did I was screwed too.\"\n\n\"My dad's going to kill me,\" Suzie exclaimed.\n\n\"Mine too,\" Janie agreed.\n\n\"It's looking like it's going to be impossible to keep Mary's name out of this,\" Curt said. \"Maybe we ought to tell her so she can prepare versus being caught surprised.\"\n\n\"That's a good point, Curt,\" Janie said. \"Suzie, we should warn her anyway.\"\n\n\"You're probably both right. I think those officers are going to want to talk with me again, and this time I won't be able to get around it,\" Suzie said.\n\n\"We tried, Suzie, but lying to the police is serious business and we have pretty much lied to them,\" she said. \"I'm sure Mary doesn't expect us to go to jail to protect her.\"\n\nThey talked the rest of the way home about the statements they gave and what they should do now. Suzie was elected to talk with Mary. They couldn't agree to a time though. Suzie and Janie wanted to wait till after the prom. Curt thought she should know now. He also added that Suzie's and Janie's dads would not be comfortable that they did not tell the police the truth and want to tell Mary's parents. Suzie and Janie agreed he was right but could not bring themselves to possibly ruin the prom for Mary. They still had not agreed, when they dropped Janie off.  \n\nIt was only 6:30 and Janie was supposed to be going bowling with Andy at 7:30. She said goodbye and hurried inside to get ready. Curt then drove Suzie home. They hadn't planned the evening, but knew Suzie needed to get out of the house fast, if she was to avoid a long discussion with her Dad that resulted in Mary's parents being told. They agreed to go to the diner for dinner and then to a movie. Suzie was to hurry and change while Curt drove home, changed and hurried back. \n\nAs Suzie entered the house, she could hear Beth yelling something to her Mother about needing something ironed. Suzie remembered Beth's date with Mark. Maybe, just maybe, that would be enough of a distraction to allow her to get ready and leave before getting bombarded with questions. She tried to make it upstairs without being seen but her mom and Beth were talking in the hall. As she crested the stairs, they both said hi. Her mom wanted to know right away how the police statement went. Suzie said fine but her mom wanted more details. \n\nSuzie started to tell her the whole story but Beth interrupted and said she would be late if her skirt was not ironed. Suzie's Mom wanted her to come talk to her while she ironed but Suzie told her she had to hurry as she was going to dinner with Curt and then a movie. \n\nThey all parted and Suzie escaped to the bathroom. She tore off her clothes and jumped into the shower. She covered her hair first, so it would not get wet. She took a fast shower being sure to clean her pussy and anus well. She got out, toweled off, grabbed her old clothes, put most in the hamper, and with the towel around her dashed to her room. Her mom had finished the skirt and knocked on her door. \n\n\"Suzie, can we talk now?\" she asked.\n\n\"Give me a minute. I just got out of the shower,\" she said.\n\nSuzie put on some clothes and then opened the door. Her mom entered and sat on the bed as Suzie worked to get ready.\n\n\"Please continue,\" her mom said.\n\nSuzie related the whole story and didn't leave much out. She knew she'd get in trouble for not telling about Mary. She just hoped they didn't ground her or something. She was thankful to tell her mom first and maybe avoid having to tell her dad. He would be less understanding and quicker to ground her. When she was done telling her mom the complete story, right down to the disagreement over when they were going to tell Mary, her mom seemed to be trembling. \n\n\"Mom, you okay?\" Suzie asked.\n\n\"Suzie, do you have any idea how serious this is and what you've done?\" she said.\n\n\"Mom, all I know is I have to protect Mary or she might freak out and do something stupid,\" Suzie said.\n\n\"So you and Janie do something stupid for her, and lie to the police. Are you mad too?\" she exclaimed.\n\n\"Mom, you don't understand,\" Suzie said. \"We...\"\n\n\"I understand perfectly, young lady. I don't think you understand this isn't a game. You're playing with the law and you could end up paying a very high price to protect your friend, only to have it be in vain anyway,\" her mom said. \"Furthermore, you defied your dad when he told you to tell the truth.\"\n\n\"But, I mostly did, Mom,\" Suzie said. \"I only really lied just once.\"\n\n\"Suzie, it's noble you and Janie to try to protect Mary but this is crazy. You need to tell the truth and Mary needs to face the facts. I'm sure her folks will be able to get her help and in the end that will be the best for all,\" she said.\n\n\"We agree, Mom, but can't it just wait till after the prom?\" Suzie begged. \"Give her one day of still being a girl and not a raped woman that everyone looks at with pity or disregard.\"\n\nHer mom looked at her, either taken back by what she said or surprised at her statement. \n\n\"Okay, Suzie, we'll play it your way if we can. I'll talk to your father. He's going to be mad but I can hold him off for one day I think. On Sunday though, the truth comes out,\" her mom said with emphasis.\" \n\n\"You tell Mary she needs to tell her parents!\"\n\n\"I understand, Mom,\" Suzie said, as she ran and hugged her mom. \"Thanks for being so understanding.\"\n\n\"Well, you're a convincing advocate for Mary. I suppose all that acting is paying off,\" she chuckled. \"It helps that you do hold a small piece of the moral high ground here.\"\n\nThey hugged again and Suzie hurried out the room to see if Curt was outside. Fortunately, her mom followed her downstairs because her father was just coming up. He started to demand Suzie stop and tell him what happened when her mom intervened and told him she knew everything and would tell him. He was still saying, 'but... but' as Suzie hurried out the door to Curt in the driveway. She could hear her dad yelling in the background that she shouldn't be going anywhere till he had some answers. Curt backed out of the driveway and soon as she was belted in and they pulled away quickly. ",
        "\"God, that was close,\" Suzie said.\n\n\"What happened?\" Curt asked.\n\n\"I talked it out with my mom and convinced her to wait till Sunday. On Sunday, I have to tell Mary we're telling the police everything. I have no choice now. It was the only way I could save her at least until the prom. My mom helped me get by my dad but he's not too pleased,\" she said, with a smile.\n\n\"I thought I heard him yelling as you were leaving,\" Curt smiled too.\n\n\"He'll be livid when my mom tells him what happened at the police station. Curt, he might ground me,\" she said.\n\n\"He wouldn't prevent you from going to the prom, would he?\" Curt asked, worried.\n\n\"Oh, no, my mom would never let him do that,\" she said. \"But after? Who knows.\"\n\n\"You're a brave girl, Susannah Johnson, and a tough one too. You're also the kind of friend every person should have,\" he said sincerely.\n\n\"Why, Curtiss Clayton, are you hitting on me?\" she joked.\n\n\"You know I am,\" he grinned back.\n\n\"Flattery will get you everywhere, my dear,\" she said, laughing.\n\n\"Good, that's what I had in mind for later,\" he joked.\n\n\"Wait a minute, mister,\" she said. \"It's still not prom night, remember?\"\n\n\"Shit,\" he said smiling. \"I was hoping to get in a day early.\"\n\n\"One day more won't kill ya,\" she quipped.  \"It just might,\" he joked.\n\n\"Leave it to me. I'm make Cyclops understand,\" she assured him, as she seductively licked her lips for Curt to see.\n\n\"I bet you will at that,\" Curt joked with her. \n\nThey had a good dinner at the diner and tried to forget about the police and the outside world for the night. They laughed to the point of tears as they relived the old man and his beagle seeing them on the beach the night before. Curt took her to a horror movie. Suzie didn't normally like horror movies but there wasn't much good playing they hadn't seen and he convinced her it would make her forget all else. It did that. She clung to his arm most of the movie and through part of it hid her face against his chest. It was 11:15 by the time they made it back to the cabana. If Suzie were to make her midnight curfew, they would have to work fast.\n\n\"We only have 45 minutes,\" Curt said.\n\n\"What do you want to do?\" Suzie asked.  \"I know one thing that would be fast,\" he said.\n\n\"You just want me to suck you off?\" she asked.\n\n\"Well, that's good but I was more thinking about your cute ass,\" he grinned.\n\n\"Oh, gee, I'm afraid to do that a lot,\" she said.\n\n\"Why? Does it hurt?\" he asked.\n\n\"Well, a little at first but I'm more afraid your big dick is going to do permanent damage to my poor little asshole,\" she said. \"Did you see those girls in that first porn we watched? Their assholes looked like well used open holes.\"\n\n\"Yeah, I suppose but once in a while should be okay,\" he stated.\n\n\"Well, I suppose it would be okay once in a while,\" she said.\n\n\"If you don't like it though we don't have to,\" he said.\n\n\"No, it's not that. Actually, after that big fellow is in for a while I loosen up and it starts to feel good,\" she admitted.\n\n\"I've got an idea. Let's 69 first and then we can work up to the anal stuff,\" he said. \"Besides, your mouth is too tempting to ever pass up,\" he grinned.\n\n\"Okay, I like your mouth too and kissing Cyclops is one of my greatest joys,\" she smiled.\n\nThey striped themselves to save time. When they were naked Curt looked at her and she at him. \n\n\"You're gorgeous,\" he said. \"I could stare at you for hours.\"\n\n\"You're so handsome too and that big dick and balls makes my mouth water,\" she said, as she seductively licked her lips.\n\nThey put a towel down on the couch and Curt lay down. Suzie wanted to be on top so she would have more room to maneuver. She crawled over him but face to face. They kissed passionately for several minutes and explored each others mouth with their tongues.  Curt's hands played with her nipples tweaking them between his thumb and forefinger and pulled on them lightly. Suzie groaned into his mouth as he did this. She loved him playing with her tits. \n\nCurt broke their kiss and pushed her up a little to get to her breasts. He sucked a nipple into his mouth. He lightly chewed on it and then tried to take as much of her tit meat into his mouth as he could. He played with the other as he did this and then switched. Suzie moaned enjoyment above him. She could feel his stiff dick rubbing her ass every time she pushed back. She reached back and grabbed Cyclops with one hand. As Curt worked her tits, she rubbed the head of his cock against her pussy. She held on in case he got any ideas but she moved it into the folds of her labia and then up to rub her clit. They both groaned at the sensations this was causing. \n\nSuzie's pussy was getting slick from the action Curt was giving her tits and from her rubbing his cock on her cunt and clit. At one point, she slipped a little or he pushed up, she wasn't sure which, but his cockhead lodged in the entrance to her pussy. It stretched it open deliciously and she was very tempted to say the hell with it and let it slide in more. After all what was one more day? Tomorrow was prom and she promised him he could have her cheery then. Did one day really matter? \n\nSuzie decided to be strong and quickly moved him away. He teasingly moaned into her tit and she knew he would have liked to go further. Suzie extracted her tits from Curt's hold and swung around. 'It was time to get to business sucking some cock,' she thought.\n\nAs she positioned herself above him, she spit on her hand and rubbed it up and down on his shaft. She loved the feel of his steely cock and loved to fondle his balls too. She leaned down on her elbows and played with his cock and balls for a while. She played and squeezed him until a large drop of pre-cum appeared at his hole. That was her signal to start using her tongue and the first move was to lick away that drop. \n\nSuzie swabbed the head for several minutes. She loved its velvety soft feel on her tongue. She pushed his dick up onto his belly and licked and sucked the underside of the head until Curt bucked beneath her for mercy. If she kept that up much longer, he feared she would get him off too soon. Suzie licked down to his testicles and washed them with her tongue until they were soaked with spit. Holding herself with one arm, she squeezed and rubbed one nut while sucking the other into her mouth and lightly chewing it. Curt moaned into her pussy.\n\nCurt had not been idle. He was trying to give as good as he was getting which was tough because Suzie was rapidly become expert at giving blowjobs. He considered himself good at eating pussy but he was done as a teacher to Suzie when it came to giving head. She had advanced quickly and was now beyond his realm to give advice. She was becoming the master and teaching herself now. So he concentrated on his pussy eating skills. This was not a chore either as he had never tasted a sweeter twat than the one he was inches from now. \n\nNot only was it sweet but he loved everything about it. The short fuzzy blonde landing strip of pubic hair on top, the pink pouty outer lips, and the best part, the soft pink inner lips, leading to her hood and that hard little nubbin of a clit. Curt was tempted to attack it and drive his tongue into her hole right away but held back. He worked her outer lips, first with kisses and then licks. He sucked on them too and lightly chewed them. \n\nCurt could feel the wetness increasing in her snatch and it wasn't all his saliva. He moved inward slowly and pressed his tongue into her gash and ran it back and forth. He was careful in the beginning to avoid her clit but eventually took a few purposeful swipes at it. These always caused Suzie to groan into his cock, now in her mouth. \n\nSuzie sucked on the head of Curt's dick, creating a good deal of suction. She would suck on it for a while and then pop it from her mouth like a lollipop. The sudden pressure changes, always seemed to make Curt squirm beneath her. Her hands had also been busy playing with his cock and balls. It was time now for the main event. She bobbed up and down on his dick, trying to wet it with saliva as much as she could. \n\nWhen she was satisfied, she took a couple good breaths and pushed down on his cock. It slid easily across her tongue into the back of her mouth. She started her swallowing method and pulled down harder. The head popped into her throat and she then pushed down to absorb the entire shaft. Her deepthroat action always drove Curt crazy and this time was no exception. Her throat muscles worked his cock head like a pulsing vacuum. Unfortunately, she needed air in her lungs badly and pushed his hips away until just the head remained in her mouth. \n\nSuzie wished she could hold her breath for about five minutes, because she was sure if she could keep him in her throat that long, he would cum every time. When she recovered enough, she throated him again. She stayed with him a little longer this time and swore to herself, she felt his nuts tighten for release. However, she pulled off before he did. She wickedly thought, if I suck him off I can spare my ass a pounding and she sucked up several good breaths, to see how long she could hold him in her throat. \n\nCurt felt like his cock was being ingested by some evil creature, one that wanted to rip it off his body and swallow it whole. He fought back by trying to get Suzie to cum. He thought if he could just get her so worked up she could not focus on his cock, he would be able to last. If he did not get there soon though, her skills were too great and he would be lost.  Curt had been sawing his tongue into her cunt hole and wiggling it around. Suzie loved this, he could tell, but he needed to do something more quickly. He moved his mouth up and found her little knob of a clit. He sucked it into his mouth and immediately felt Suzie stiffen and groan. \n\nCurt pulled out all the stops and inserted a finger into her hole, followed quickly by a second. While he did this, he licked the trapped button of her clit and teased it without mercy. Suzie had sucked him down a third time and she was causing the most delicious sensations to his cock, he had to either pull her off or finish her quickly. He did not want to lose the battle of who would cum first, so he inserted a third finger in her cunt and grabbed for her nipple. \n\nSuzie had her nose buried in his pubic hair and his monster cock crammed down her throat. She was sure she could bring him off down her throat if given the time. However, Curt was driving her nuts. His attack on her clit and the two fingers fucking her overcharged pussy were driving her insane. She could feel her juices flowing from her gapping hole. \n\nSuzie was prepared to fight through and make him cum first until he increased his attack. The third finger to her cunt, the pleasure spreading from her clit and then the calculated assault to her nipple at that instant threw poor Suzie for a loop. Her brain could not concentrate with so much overpowering sexual stimulation. Her throat muscles stopped working as she felt a scream trying to escape her already tortured lungs. She had to pop his cock from her throat or choke to death. She never got him back down her throat after that as his assault drove her rapidly to orgasm. \n\nSuzie tried pulling him back into her mouth and licking the head rapidly as she jacked his cock and squeezed his balls, but even then her focus eluded her as her body peaked. Suzie drove her pussy down into Curt's face and squeezed his head with her legs. Rockets burst in her brain. She fought back a scream as her juices flowed and her climax hit. Curt continued his relentless assault and it prolonged her pleasure. When she finally came down and relaxed her pressure to his head, he pushed her aside a bit to breathe. Suzie would have liked to return the favor and after a short rest resume her blowjob but she knew what he wanted and would give it to him. \n\nCurt slowly extracted his fingers from her pussy and Suzie swung her body around on the couch. She was exhausted and laid down on top of him. He groaned slightly but tolerated her smaller frame with ease. Suzie kissed his cheek which was wet with her own juices. She looked at him and he was wet completely on the lower half of his face. She smiled weakly, still recovering from her wonderful climax. \n\n\"Did you like that?\" he asked.\n\n\"You know I did, silly,\" she smiled back. \"I almost got you off too.\"\n\n\"Yeah, you had me very close,\" he admitted.\n\n\"I thought I could get you off down my throat but you triple teamed me with your tongue and two hands,\" she said.\n\n\"You were using both hands too and that marvelous mouth,\" he chuckled.\n\n\"I could keep going if you want?\" she asked.\n\nCurt looked at her, not sure which way he should go. He looked at the clock. They only had about fifteen minutes. Suzie could easily suck him off in five minutes, if she wanted. Suzie could see him pondering what to do.\n\n\"You really want in my ass, don't you?\" she asked.\n\n\"Yes,\" he admitted.  \"I guess I'm not going to get my taste of Curt juice tonight,\" she smiled. \"You know I need a fix everyday now that you got me hooked.\"\n\n\"Normally, I'd be all for that,\" he laughed. \n\n\"But you want to fuck poor Suzie's little asshole, huh?\" she asked.\n\n\"I must admit, I do,\" he said.\n\n\"Okay, you nasty boy. You can pound my poor little ass with that big dick of yours,\" she smiled.\n\n\"We need to hurry though,\" he said.\n\n\"Not too fast, please. I need time to adjust to your size,\" she said seriously.\n\nCurt got up and retrieved the lube and the toys. When he got back, Suzie had her knees on the floor and her upper body lying on the sofa. Curt moved behind her and lubed up the butt plug. He then applied a generous amount of lube to her cute tight ass with his index finger. When it was sufficiently lubed he pushed the finger slowly in to the first knuckle. He wiggled it a little before advancing to the second knuckle. \n\nCurt took his time but soon he had two fingers all the way in and had removed those and worked the butt plug in deep. He played with the butt plug in her ass for a while taking it in and out and moving it around. Next he lubed the purple dildo and slowly worked that in several inches. Suzie tensed up as he worked the large dildo into her tight hole. Finally he had most of the dildo in and felt she was ready.\n\n\"Think we can try the real thing now?\" he asked.\n\n\"I think so, but slowly please,\" she pleaded. \"You don't want your girl to have a stretched out ass do you?\"\n\n\"No, I'll go slowly,\" he said.\n\nCurt lubed his dick and eased Cyclops up to her opening. He pushed lightly and was rewarded for his preparation by the head slipping in easily. Even Suzie barely groaned. Curt looked at the clock, 11:57. He pushed forward slowly. When he had several more inches in, Suzie reached back to hold his thigh. It was a good indication she wanted him to go slower. \n\nCurt rested there a moment before pushing another inch in. Suzie seems to absorb that okay so he pushed forward more. Several inches fed into her ass before she slowed him with pressure to his thigh again. After he stopped a minute, then he was able to push forward. In another minute, he was buried almost all the way. He waited there for Suzie to relax. He wiggled it back and forth a little. When she indicated she was fine, he started moving slowly in and out. \n\nCurt gained pace slowly and looked to the clock. It was 12:02. He started to pick up speed more and Suzie groaned. He slowed but she told him to keep going because it felt good. He sped up again and soon was fucking her pretty good. Curt had both hands on her hips all through the start but now he leaned forward and grabbed both tits. This was one of the things Suzie liked about being fucked anally. He could play with her tits while he did it. The feeling in her ass had gone from mild pain, to fullness with pressure, to all out pleasure now. His tweaking her nipples was helping to build her pleasure further. \n\nThen Curt shifted a hand to her pussy and stuck a finger in her hole. This drove Suzie wild. The double fucking of her ass and cunt and gentle mauling of her breast sent Suzie into orbit. She couldn't believe how the pleasure was building in her ass. Curt, too, was now fucking her with purpose. The extreme tightness of Suzie's butt hole was driving him nuts. His balls were already churning and he would not last long. He wanted to get Suzie off first and then himself but he needed to work fast. It was awkward but he managed to get a second finger into her cunt. This added stimulation was all Suzie could handle. \n\n\"Fuck me, Curt!\" she yelled. \"Fuck my ass!\"\n\nCurt quickened his pace and rammed into her to his balls. Suzie took it and pushed back wanting more.\n\n\"Oh, God, fuck it, Curt. Fuck my poor little asshole,\" she said.\n\nCurt wished she would stop talking dirty because it was stimulating him further and he was near to exploding. But he liked it too.\n\n\"Oh, God, oh, God, I'm going to cum. Fuck me, Curt,\" Suzie gasped.\n\nCurt pumped her ass for all he was worth.\n\n\"I'm there, I'm there, oh, fuck,\" Suzie said.\n\nWaves of sheer pleasure radiated from her two fuck holes and her tit. She gripped the sofa and screamed into it to kill the sound. Curt could not hold on any longer. His dick expanded like a balloon in her ass and then shot turbo jets of cum up into her bowels. He continued to saw into her ass the whole time. Suzie was coming hard but when she felt the increased pleasure of his hot cum flooding her ass, she re-ignited and rolled right into a multiple orgasm. \n\nBy the time Curt's dick had stopped pumping cum into her ass and began to shrink, Suzie was coming back to life, having thought she passed out.  Seconds seemed like minutes until they both had recovered enough to separate. When Curt backed his long dick out of her ass, a flood of sperm followed suit. Curt quickly grabbed the towel and put it under her. He watched as his spunk ran from her abused butt hole. Then he glanced at the clock - 12:10. They had better hurry. \n\n\"Curt, get me something to clean myself with, please,\" she asked.\n\nCurt ran to the bathroom. He grabbed two handfuls of tissue. He wrapped one around his cum slick cock and brought the other to Suzie. She wiped her ass to clean away the lube and cum still oozing from her rear hole. \n\n\"God, I don't think I can move,\" she said. \"You literally fucked the shit out of me with that big dick.\"\n\n\"You okay?\" Curt asked concerned, knowing he had pounded her pretty good. \n\n\"Help me up, will you?\" she asked.\n\nHer legs seemed to be weak, as he nearly lifted her to a standing position. \n\n\"Oh, my ass is feeling a little stretched out and sore now,\" she said.\n\n\"Sorry about that,\" Curt said.\n\n\"I was worried about your big dick in my pussy but it maybe the only way to save my asshole,\" she joked.\n\n\"You're right, your pussy will be much better at handling my dick,\" Curt said.\n\n\"You probably planned this all along. Fuck her in the ass a couple times and she'll be begging to give up her virginity,\" she queried.\n\n\"No, but come to think of it that would have been a good plan,\" he joked.\n\n\"I was looking forward to tomorrow for many reasons,\" she said, joking with him. \"Now, I have one more reason, to save my poor ass.\"\n\nHe looked at her and they laughed together. They got dressed and straightened up the cabana. Curt then walked her home. At her back door they kissed briefly because she was already late. Suzie managed to get to her room without anyone stopping her. It seemed the rest of the house was asleep, though she knew her mother was probably still awake waiting to hear her come in. She was ready for bed in fifteen minutes and asleep in ten more. \n\nJanie, Mary, and Suzie had hair appointments the next day at the same time. Suzie picked everyone up at 10:00 and they drove to the salon. Suzie was going with leaving her blonde hair long but putting tight curls into it. Janie wanted her brunette hair in tight curls too but she was going to wear them up on her head. Mary was having her shoulder length brown hair trimmed and styled with some highlights added. ",
        "The three girls enjoyed getting their hair done together. They also had both their finger nails and toenails done. Janie had artificial nails added as she kept breaking them in soccer. They were not done till two o'clock, hadn't had lunch, so they went to the diner for salads. \n\nThey purposely avoided any talk of the rape even though Janie and Suzie were churning inside to break the news to Mary. Their desire to see her enjoy the day was paramount and they resisted any of the bad news. The discussion mostly centered on the plan for the day. Everyone was to meet at Curt's for pictures before the prom. Curt's mom had a caterer delivering food. The party would center on the back porch and deck, the pool, and the cabana. Suzie smiled to herself as she thought about if these people only knew what Curt and she did in that cabana all the time. The guys were all picking them up at 6:00 for individual pictures before heading to Curt's at 7:00. All the parents were invited too. \n\nAfter Suzie dropped Mary home, she swung by Janie's house. In the driveway, Janie told her to kill the engine a second, she wanted to tell Suzie about her date last night with Andy.  \n\n\"Suzie, I did it,\" she said excited.\n\n\"You did what?\" Suzie asked.\n\n\"I gave my first blowjob! I sucked Andy's dick, Suzie,\" she exclaimed.\n\n\"You did?\" Suzie said, excited too.\n\nJanie told her how they went bowling. They had a good time. They stopped for ice cream after bowling and then drove out to the scenic overlook they had gone to before. There were four other cars there spaced out, probably all doing the same thing. They had started making out and climbed into the back seat. \n\nJanie let Andy play with her tits and even slip his hand up her shirt and under her bra. Janie described the magic Andy did to her nipples. Suzie agreed having a boy playing with your nipples was the best. Janie then described how Andy was rock hard in his pants. She was massaging his dick through his pants as he played with her tits and they swapped tongues. \n\nJanie said, \"He was getting uncomfortable with his hard on in his pants, so I told him to lay back.\"\n\nShe undid his belt and pants and pulled them down. He had on cute white briefs but they were bulging out from his hard cock. Janie grabbed the top of his briefs, pulled them down over his dick, down to his ankles with his pants. Andy's dick bounced free and straight up. \n\nJanie described it to Suzie as gorgeous. It was about six and a half inches long and fairly thick, though Suzie thought to herself she should see Curt's. Janie loved his testicles and the way they hung like two small coconuts. \n\nJanie said, \"I was planning to jerk him off again. So I started playing with his cock and balls with my hands.\"\n\nShe told Suzie how Andy groaned as she played with his cock. He tried to continue to play with her tits but it was hard for him to lean forward without restricting her hand movements on his cock. In the dim moonlight, Janie noticed a drop of fluid forming at the tip. Janie remembered Suzie describing pre-cum to her and how tasty she thought it was. She remembered having an irresistible urge to lick it off. Janie was drawn to it. Janie looked at Andy and he was watching her with burning desire. \n\nJanie told Suzie, \"I asked him if he would like me to lick it. He just nodded yes.\"\n\n\"I did, Suzie, I leaned in and licked the head getting his pre-cum on my tongue. Andy moaned when I was licking his head. It felt so good to my tongue. The head was all soft and the pre-cum did not have much taste really. I licked his head for a few minutes and then looked up at him. He had his eyes closed but opened them when I stopped. \n\n\"Andy told me, 'It felt so good what I was doing.' I started licking him up and down his shaft and caressing his balls. I like the feel of them, like little nuggets rolling around in his sack. Then I worked back up to the head. Another drop was there and I licked that up too. Andy was moaning the whole time. \n\n\"Then I decided to go for it and opened my mouth to take the whole head inside. When I closed my lips around his soft head, I felt a shiver go through his body and he groaned aloud. I sucked on the head like you told me and he put his hands in my hair. I rubbed the underside with my tongue and Andy bucked and pulled me off his dick. I asked him if I had bitten him or something and he said no but he was going to cum if I kept that up. I told him it was okay to cum in my mouth. He asked if I was sure and I told him yes. \n\n\"I then went back to sucking on the head and licking the underside. He put his hands back in my hair. I started stroking the shaft and bobbing my head while I fondled his balls. He was moaning something fierce and his hips started bucking into my mouth. I knew he must be close, so I got ready like you said. I could feel his legs tighten up and his balls too. Then his cock expanded in my mouth and I knew it was coming. A second later, a really forceful blast hit me in the back of my mouth followed by another right away. I stayed with him though and took the rest into my mouth too.\n\n\"Wait,\" Suzie said. \"Did you swallow any of it as he was shooting?\"\n\n\"No, I just caught it all in my mouth,\" Janie said.\n\n\"Interesting,\" Suzie said.\n\n\"What?\" Janie asked.\n\n\"Well, with Curt, if I don't swallow at least once, he would overflow my mouth,\" she said. \"I guess with his big balls, he cums more than Andy.\"\n\n\"I guess so, because I caught it all in my mouth,\" Janie said. \"But Suzie, yuck! I tried to swallow it but the taste was awful and it has the consistency of a mouth full of snot. God, yuck, I couldn't swallow it. I wanted to gag when I tried. I had to open the backdoor and spit it out on the ground. God, I hope no one from those other cars saw me do that.\"\n\nSuzie laughed hard.\n\n\"What is so funny? Man, it was gross. How do you do that?\" she asked.\n\n\"I was just picturing people in the other car watching you open the backdoor and spit white stuff out on the ground,\" Suzie roared with laughter again.\n\nJanie started laughing too, \"Screw you. I couldn't help it,\" she said. \"How do you do that really?\" Janie asked.\n\n\"I don't know. I guess I have to with Curt because there is so much. If I didn't, it would spill out of my mouth in a flood. Besides, I really don't mind the taste. Yes, it's salty and tastes somewhat like bleach, but I can handle it. The consistency doesn't bother me either. Maybe I'm weird or maybe Curt's is sweeter. I don't know but I have to admit I like swallowing it,\" she said.\n\n\"You're a freak if you like that stuff,\" Janie joked.\n\n\"Oh, nice. Just because you can't handle it, I'm some freak,\" Suzie shot back.\n\n\"Sorry but, God, it's gross,\" Janie said.\n\n\"Men like a girl that swallows. I guess I'm just more talented than you when it comes to blowjobs, so there,\" Suzie mocked. \"What was Andy's reaction when you spit his stuff out on the ground?\"\n\n\"Well, he did look a little hurt I must admit, even though he said it was okay when I told him it was making me gag,\" Janie said.\n\n\"You told him his seed was making you gag?\" Suzie questioned.\n\n\"Yeah, why?\" Janie asked.\n\n\"Oh, that must have made him feel good. Like his seed is grotesque or something,\" Suzie commented.\n\n\"Oh, my, you think I hurt his feelings?\" Janie asked.\n\n\"How would you feel if he ate your pussy and when you came he said 'yuck, gross, that is disgusting'?\" Suzie asked.\n\n\"Oh, shit,\" Janie said. \"You're right! Oh, Suzie, you think I really hurt his feelings?\" \n\n\"Hey, I got to get going but if I were you I would learn to swallow his seed,\" Suzie said.\n\n\"Oh, God, you're probably right,\" Janie lamented as she got out of the car.\n\nSuzie pulled away keeping a straight face but laughed till her eyes got teary after she was down the road. She hated to play a trick on her best friend but this was perfect and Janie called her a freak. She didn't believe that Janie had really hurt Andy's feelings that bad but she enjoyed playing on Janie's fears. Besides if she could convince Janie to really swallow, it could only help her relationship with Andy. \n\nSuzie went home and showered without getting her hair wet. She was leaving the bathroom when Beth saw her and asked to talk. Suzie told her to follow her into her room and they could talk as Suzie put her make-up on. \n\nAs Suzie sat at her dressing table, Beth began to tell her about her date with Mark. They had gone to the movies again. Afterwards his mom had picked them up and they went back to his house for ice cream. After there ice cream, they were watching television in the basement. They were sitting on the couch together and the rest of the family was upstairs. Beth described the rest of the evening to Suzie, giving her all the details of their make-out session.\n\n\"Beth, just go slow,\" Suzie instructed her.  \"You think I should?\" Beth asked.\n\n\"Yes, definitely. Beth, please go slowly with Mark. Making-out is okay but don't push it too far.\" \n\n\"Okay, thanks, Suzie. I knew you'd know what I should do and not do,\" Beth said.\n\n\"No problem, you're my little sister. I have to watch out for you.\"\n\n\"Have a good time at the prom tonight,\" Beth said. \"Your hair looks beautiful.\"\n\nSuzie said, \"Thanks.\" and they hugged. Beth left Suzie to finish her make-up. She was impressed with her little sister. Beth was advancing much faster than she did. It was good for Beth to get some experience with boys but she needed to be careful. \n\nSuzie's mom was having an early light dinner so they could all eat before going to Curt's. Suzie put on some lounge clothes to eat in. After dinner, she went up to put her gown on and finish getting ready. At 6:00, Curt and his parents showed up. Curt had a flower for Suzie. They made a beautiful couple and both sets of parents took many pictures. Since Curt's parents were hosting the party, they had to leave quickly and Suzie and Curt went with them. Suzie's parents straightened up the dishes and met them over at Curt's at 7:00. \n\nThe parents were all grinning and snapping pictures like crazy of their sons and daughters. Mary and Mark were there, as were Janie and Andy. Also, Scott and Peggy were there and three other guys from the football team with their dates. Suzie knew them all and they had a great time. The caterers did a good job too. \n\nThe party ended abruptly at 8:00 and the kids all loaded into two limos to go to the prom. It was being held at a local banquet hall. Suzie got a little nervous when she realized she had never even danced with Curt. He turned out to be a good dancer and they moved together well. Everyone had a wonderful time but the shocker of all was when Suzie and Curt were voted King and Queen. Everyone seemed happy for them except the runners up, Becca and Brian.  \n\nAfter the prom, there was a post-prom party they all attended. It was great fun but Suzie was glad when they all went back to Curt's for the last stop of the evening. The guys chowed down on the leftover food from the caterers, while the girls all fixed their make-up and freshened up. The party at Curt's lasted till 2:30 in the morning. At the end only Mary, Mark, Janie, and Andy along with Suzie and Curt were left of the original group.\n\nThe rest had retired elsewhere or were off at other parties. The small group of six was watching television in the cabana. Andy got up to go to the bathroom at one point but Janie followed him in. They did not come out for a while. Curt asked Mark and Mary to excuse them and pulled Suzie into the one changing room. Suzie realized her moment of womanhood was rapidly approaching.  She looked around the room and saw no bed, no sofa, not even a love seat.  The room consisted of a row of lockers for storing clothes after changing, two chairs and a small table. \n\n\"Curt, are we going to do it on the floor?\" \n\nCurt chuckled, \"No, just wait a minute.\" \n\nHe locked the door and opened the closet. Standing up in the closet were two large air mattresses already blown up. He pulled them out and laid them down side by side on the floor. Next, he took two large quilts he had and spread one down over the air mattresses. Before he did that, Suzie noticed he had tied the air mattresses together so they would not separate. \n\n\"Your bed my lady,\" he said with a bow and a smile.\n\n\"Have those been blown up in the closet all winter?\" Suzie asked.\n\n\"No, I took care of that this afternoon,\" Curt said.  \"I see,\" Suzie said. \"So you planned just how you were going to bed me, huh?\"\n\n\"Yup,\" he said with a smile.\n\n\"Good,\" Suzie said back, with a smile and moved to kiss him. \"Hey, Curt, what about the others?\"\n\n\"Don't worry. If they want to stay, everything is arranged. Mark and Mary are to use the couch on the porch. It pulls out into a sleeper. The same deal with Janie and Andy. The couch in the other room is actually a sleeper too.  They both know where the blankets and pillows are,\" he said.\n\n\"Wow, you thought of everything. You're a genius,\" Suzie smiled.\n\n\"Thanks, I tried,\" Curt said. \"Oh, I have a few more preparations for us too. \n\nCurt lit a few candles he had scattered around. He produced a bottle of champagne from one of the lockers in an ice bucket; he had glasses too, and a box of candies. \n\n\"Sweets for the sweet,\" he said and gave them to Suzie. \n\nThen he opened the champagne. Even though the ice had melted in the bucket, it was still cold. He poured them two glasses and shut off the lights so only the candles prevailed.  \n\n\"A toast to my queen, fairest maiden of them all on her night of bliss,\" he said.\n\n\"And to the king, the most chivalrous knight of all,\" Suzie said, as if she were acting.\n\nThey sipped their champagne and shared a chocolate. Then Curt got down on one knee before Suzie.\n\n\"My beautiful lady and queen, it would do me great honor to make you a woman,\" he said.\n\n'Wow,' Suzie thought, 'he is making this special for me. This is so much better than losing one's virginity in the back seat of a car.' \n\n\"Arise, handsome king, for it is I that should bow before you and the mighty Cyclops,\" Suzie said, with serious acting ability even though she wanted to laugh. \n\nCurt got up and they kissed passionately. They finished their glasses of champagne. Curt offered her another but Suzie said she wanted to remember this moment for the rest of her life and a second glass would probably make her giddy. They put their glasses down on the table and Curt took Suzie in his strong arms. They kissed with such passion, Suzie felt like the air was being sucked from her lungs. After a few minutes of hot kissing and probing each other's mouth with their tongues, they parted and looked at each other. Each sensed the other's desire and they both stripped without a word said. \n\nThey came back together, naked, and kissed again. Suzie could feel Cyclops proudly and impatiently pushing at her abdomen as he fought for space between them to expand. Curt hugged Suzie so tight he felt the bullets of her erect nipples caressing his chest as he pressed her ample breasts to him. Curt surprised Suzie and bent down and picked her up like a groom would his bride and carried her to the air mattress bed. \n\nCurt lowered her down onto the comforter and then moved above her. Resting on his elbows, he played with her breasts as he kissed her deeply and hot. Suzie felt Cyclops battering her lower belly. She reached for him and caressed Curt's massive dick with her hands. She thought to herself, 'Well, Suzie you're about to find out what this big cock feels like inside you. No small dick to start with for her, oh, no. She was taking on the king right from the start.' \n\nCurt was thinking, 'Oh, my, this is the greatest honor of my life to deflower this beautiful creature.' He would take the cherry of this girl and make her a woman. He only feared he might hurt her though. That was the last thing he would want. He needed to keep remembering to go slowly, despite his own passion.\n\nCurt moved down her, kissing her neck and upper body as he went. He kissed all around her tits and kneaded their fullness with his fingers. God, he loved her tits. Her nipples were fully erect. He wasn't sure if it was sexual excitement or the slight coolness to the room. The heater from the other room didn't carry back here well, especially with the door shut. He didn't care though, they were absolutely gorgeous and he loved sucking on them. They would both be hot enough soon, plus he had the second comforter for later. \n\nSuzie had to let go of Cyclops as Curt moved lower. He kissed down her belly, made firmer by the work outs, and teased her bellybutton. This tickled Suzie and she urged him lower. She was surprised how comfortable the makeshift bed was. If she didn't know better she would swear she was on a regular bed. \n\nCurt started kissing and licking her outer lips. He pushed them together to form a slitted mound and licked the puffy sides and up the middle. Then he spread her sex and feasted on the soft inner pink petals. After licking her all around and getting appreciative moans from Suzie, he sucked her clit hood into his mouth. He used his tongue to seek out her knob and Suzie moved her hands to his hair. \n\nSuzie wasn't sure. Did he aim to bring her off first? To make sure she was ripe for the picking? It was a good plan, if that's what he intended. Her thoughts were immediately mottled by the intense pleasure from his sucking her clit. He found it with his tongue and probed around it. Her hips came up off the bed and she pushed his head to her sex.\n\nCurt tongued her and inserted a finger slowly in her cunt. She was wet for him and the first finger slid right in. He pushed deeper and soon felt her maidenhead. He backed off and worked a second finger into her. He started pushing them slowly in and out, finger fucking her pussy.  \n\nSuzie was so sexually charged and horny, her orgasm came on quickly. His third finger and that devilish other hand to her right nipple put her over the edge and she groaned loudly as her dam burst. Curt kept up his assault until her last shudder of bliss. He then removed his fingers and replaced them with his tongue. He craved her sweet cum and lapped up what he could. When he was finished he moved back up and lay beside Suzie. She kissed him passionately.\n\n\"You do me so well,\" she said. \"I want to do you now.\"\n\n\"Okay, for a little bit, but don't get me off,\" Curt said.\n\nSuzie slid over him and moved between his legs. Cyclops was lying on his abdomen up to his bellybutton. His testicles drew her attention first and she started there. She washed them with her tongue tasting and smelling his maleness. If possible it excited her more. She sucked first one big ball into her mouth and then the other. When his scrotal sack was totally wet, she kissed and sucked up his shaft. \n\nSuzie stopped to suck on the underside of the head and Curt moaned his approval. Suzie teased him there with her tongue before moving higher. With her hand, she raised his big cock and licked the head. Her other hand caressed his wet balls. Her tongue circled the head teasing the ridge separating his head from the shaft. After a few licks to the head, she pushed her pursed lips down over it until the bulbous head popped into her mouth. \n\nSuzie sucked and licked it until Curt groaned constantly above her. Her thoughts were also to wet his cock as much as possible for later and she worked at that. Soon she started bobbing on his cock and Curt groaned some more. She thought she would give him one more thrill with her mouth before allowing him entry to her pussy. \n\nSuzie pushed down until the head clogged the back of her mouth. She swallowed hard repeatedly and pushed further, popping the head into her throat. She was accomplished at this now and it took little effort on her part to relax her gag reflex. This still surprised her, given how hard it had originally been. She worked him in until she felt his pubic hair tickling her nose. Suzie continued to swallow as best she could and the effect to Curt was obvious. When she had to come up for air, he pulled her from his cock. ",
        "\"If you keep that up, you'll get me off,\" he stated.\n\nSuzie gave Cyclops a few more licks and then moved up to kiss Curt. They kissed for several minutes before he rolled her over and moved on top. Suzie's thoughts were, 'Oh, my, here we go.' Curt said something and moved to get up.\n\n\"What did you say?\" Suzie asked.\n\n\"I need to get a condom,\" he said.\n\n\"No condom, Curt. Take me bare. I want to feel you the first time. Only you,\" she said.\n\n\"But, Suzie, that's not wise,\" Curt said.\n\n\"I don't care,\" she said. \"Besides, I'm close to my period and I'm very regular. I think we might be safe.\"\n\n\"You want me to pull out at the end?\" he said.\n\n\"No, I want to feel it all,\" she said.\n\n\"This is risky,\" Curt said. \"You sure about this?\"\n\n\"Yes. Fuck me, my king. Make me your woman,\" Suzie said.\n\nCurt moved back into position. He was no stranger to fucking a woman but he had never deflowered one before. He usually had to go slow because of his girth but now he tried to move doubly slow. He positioned the head at the mouth of her cunt and sought her opening. Even with his three fingers in her earlier, he knew this would be different. The opening resisted the intruder, but he pushed slightly forward and the tapered end of his cockhead forced her open like nature intended. \n\nCurt felt Suzie stiffen a bit beneath him as he pressed slightly forward. In a few seconds, the whole head popped inside. Suzie groaned. He had never stretched her this much with his fingers. Suzie moaned beneath him. She had her hands on his hips, ready to push back if she felt too much pain, but she only felt incredible fullness at this point. \n\nCurt pushed forward a bit more and forced the walls of her cunt to stretch and accept another bit of the intruder. He stopped and allowed Suzie seconds to adjust to the new feeling and pressure. She was tight. She was tighter than anyone before. Her pussy squeezed his dick, almost to the point of pain. After giving her a few moments, he pushed forward again. This time he didn't go far before reaching her barrier. Suzie groaned loudly beneath him when his dick stretched her hymen. Curt stopped and looked at Suzie for guidance. Her eyes were closed but opened after several seconds. She had a strained look that worried Curt.\n\n\"Take me, my love,\" Suzie said to Curt.\n\nCurt pulled back until just the head remained inside and then shoved forward. His cock rammed forward, hit her barrier, paused momentarily, before tearing ahead. Suzie arched her back and cried an agonizing groan. Curt stopped moving, even breathing, to make sure Suzie was okay. She settled back down to the bed and looked at him. The pain in her face was obvious. She nodded okay to him and he pushed forward a bit more. The last of her hymen gave way and Suzie cried out one more time. Curt waited again but soon she urged him on. \n\nCurt pushed slowly forward into her completely uncharted waters. Her pussy still resisted, fighting every inch with its tightness. The intruder was too powerful and slowly her cunt stretched to accept its monstrous visitor. It took several more seconds for Curt to work his whole cock in. She bucked again as he first hit her cervix, and then moved deeper. She whimpered her pain and Curt pulled back a little. He waited there to allow her time to adjust to the fullness and pain. \n\nSuzie was amazed. She still had pain from her torn hymen but the incredible fullness shocked her. It felt like an alien monster had invaded her body through her pussy. He threatened to push her insides out of the way as he sought to go deeper. She wasn't sure she'd ever feel comfortable, and probably never pleasure, with Curt's huge phallus inside her. Curt, patiently waited above her, watching her face with keen interest. 'God, she is tight,' he thought. 'I hope I'm not hurting her to much.' \n\n\"Suzie, you okay?\" he asked.\n\n\"Yes, my darling,\" she said. \"Fuck me please, slowly.\"\n\nCurt eased back and forth very slowly. The tightness of her pussy was squeezing him with wondrous affect. He didn't know how long he could last, but he wanted desperately to make it long enough for her to feel pleasure, if not cum. But he wasn't sure that would even be possible for her or him to last. Suzie trembled beneath him as he slowly worked his cock. Curt went as slow as he could for several minutes. When Suzie seemed to settle into the rhythm with him, he picked up a margin of speed. \n\nCurt tried hard to avoid striking her cervix, but every once it a while he would and Suzie would groan. As he picked up speed, he noticed a change in Suzie's facial expression. The pain seemed to melt away and astonishment crept in. Soon she was moaning and he could tell it wasn't from pain.  He picked up a little more speed and Suzie tightened her grip on his hips. Fearing he was hurting her but also feeling his balls announcing their need to release, he stopped completely.\n\n\"What's wrong?\" Suzie asked. \"Why did you stop?\"\n\n\"I thought I was hurting you,\" he said. \"Plus, I was going to cum.\"\n\n\"You weren't hurting me,\" Suzie said. \"In fact, it was starting to feel incredible.\"\n\n\"Okay, great,\" he said. \"I just thought the way you were squeezing my hips I was hurting you too much.\"\n\n\"No, it was feeling so wonderful, I guess I got a little excited,\" she stated smiling weakly.\n\n\"Okay, good,\" Curt said.\n\nHe started moving again. In a little while, he was back up to the same speed as before. The rest had helped him back down his desire. She was still so tight to his cock it felt like a warm, wet velvet glove caressing his cock every time he pushed in. Curt pushed forward fucking her now at a normal pace.\n\n\"Oh, God,\" Suzie said. \"It feels wonderful. Fuck me, Curt. Fuck me good,\" she said.\n\nCurt sped up and groaned himself from the incredible feelings.  \"Oh, god! Oh, god!\" Suzie screamed this time. \"Fuck me, Curt. Keep fucking me.\"\n\nCurt rammed into her with little regard for the fact she was a virgin minutes earlier. His cock was in control now; his mind was a frenzy of sexual bliss. He'd cum soon and there was no way he wanted to stop it. Suzie's words were igniting his passion even more, driving him on to release. \n\nFortunately he did not need to worry if she would make it because Suzie was already there. For a while now, she had been meeting his thrusts and pushed up into them. Her brain had never known this kind of pleasure. The exquisite feels radiating from her cunt had reached her brain and pushed it to overload. She bucked up against him one last time and froze stiff. Rockets burst in her head as her orgasm rocked her like an atomic bomb.\n\nCurt continued to pump into her even as she clenched her pussy muscles tightly. The feelings were beyond anything she had ever felt before. Time seemed to stand still as her climax bore through her. She barely came down when his consistent fucking drove her right over the edge again as she felt his seed explode into her cunt. It seemed to scald the walls of her pussy and burn right through to her brain. \n\nSuzie clung onto Curt's hips with a white knuckled death grip, wanting him to never stop fucking her or her orgasm to end. But somehow, after the last of his cum flooded her twat and he slowed down, she started to come back to reality. It took a bit for them both to recover and breathe more normally. Suzie felt Curt pull back and his long penis slide from her pussy. It was immediately followed by a flood of semen that ran down the crack of her ass onto the comforter. Curt slid over next to her on the makeshift bed and looked at her. She turned her head to look at him. His hand came up to caress her left breast and nipple.\n\n\"You okay?\" Curt asked, smiling lovingly at her.\n\n\"Wonderful, my big strong man,\" she said.\n\n\"How was your first time, 'Woman',\" he emphasized the word Woman, as she now was.\n\n\"Oh, my god, Curt, it was wonderful,\" Suzie said. \"The early part was painful when you broke my cherry but after that it was phenomenal. I came twice in rapid session. It was the most incredible orgasms of my life.\"\n\n\"I'm glad you liked it,\" Curt said proudly.\n\n\"How was it for you?\" Suzie wanted to know.\n\n\"It was wild,\" he said. \"Your pussy was so tight it felt exquisite squeezing my dick.\"\n\n\"Oh, Curt, you filled me so full with Cyclops. He felt monstrous inside me,\" she said.\n\nThey kissed passionately for several minutes as Curt continued to idly play with her tit. \n\nWhen they broke the kiss, Suzie asked, \"How soon could we do it again?\"\n\nCurt smiled at her and said, \"As soon as Cyclops is ready.\"\n\nSuzie sat up and looked down at Cyclops. He was lying flat on Curt's upper left thigh. He was slick with both their combined juices. Suzie noticed traces of Curt's cum but also up near his pubic hair seemed to be a little pink. She thought right away of blood and looked down at her pussy. She completely sat up and leaned over to examine herself as best she could without a mirror. Her pussy still gaped open slightly and residual cum remained clinging to her lips and down her ass. The oozing had stopped and she thought about the sperm still in her hoping it wasn't making a baby. But she also thought, 'Hell, if it's Curt's baby, I could accept that.' She looked over at Curt and he was watching her.\n\n\"How can we clean up first?\" Suzie asked.\n\n\"I've got a towel in one of the lockers,\" he said. \"Or, we can try to sneak through the other room to the bathroom.\"\n\n\"Are Mark and Mary still out there?\" she asked.\n\n\"I don't know and if they were sleeping, you probably woke them yelling, 'Fuck me, Curt',\" he said grinning.\n\n\"Oh, my god, you think they heard me?\" she worried.\n\n\"Definitely. The question is whether Janie and Andy heard you on the porch or not,\" he laughed.\n\n\"Oh, how embarrassing,\" Suzie said, snickering with him.  \"Nobody will doubt what we were doing now,\" he chuckled.\n\n\"Don't say that. I won't be able to show my face,\" she said, half serious and half kidding. \n\n\"Hey, I got an idea. Let's go in the hot tub,\" Curt said. \n\n\"We don't have swimsuits,\" Suzie said.\n\n\"So,\" Curt smiled.\n\n\"I embarrassed myself completely by yelling; now you want me to parade around naked. Janie and Andy are out on the porch. If they wake up, they will see us,\" she said.\n\n\"There must be some beach towels in one of these lockers,\" he said. \"We can slip in without anyone seeing us.\"\n\n\"You sure? I couldn't stand any more embarrassment tonight,\" she ginned.\n\n\"Completely,\" he said.\n\nCurt got up and took a long swig of champagne. He handed Suzie her filled glass. Then he removed the champagne bottle from the ice bucket. Grabbing the towel he had for cleaning up, he soaked it in the melted ice water. The water was cool now, not even cold. He used one end of the towel to wipe down Cyclops and then handed the towel to Suzie. She took it and leaned back to wipe her pussy. She felt a little sore down there but mostly internal with her destroyed hymen. Curt was searching the lockers and found one full of towels. He picked two large beach towels and handed one to Suzie. She in turn handed him back the soiled wash towel. Curt finished his second glass of champagne and poured another. Suzie was still working on her second. \n\n\"You sure this is going to work with the hot tub?\" Suzie asked.\n\n\"No doubt,\" he said. \"Come on, wrap the towel around you.\"\n\nCurt wrapped his around his waist. Suzie stood and wrapped hers over her tits and secured it in place. It covered her to only mid-thigh. If she bent over, her ass might be visible.\n\n\"Drink your champagne,\" he said.\n\nSuzie took a big swig, which nearly finished her second glass. Curt filled her right back up and emptied the bottle into his half empty glass. Then they moved to the door to the pool outside. He opened the door and they walked out towards the hot tub. The air was a little cool being it was still just springtime. Curt peeled back the cover off the hot tub.\n\nCurt had put the heater on in the afternoon and stream rose from the water. Curt left the light off but switched on the jets. Once in the water, with the jets going, no one could tell they were naked unless they were standing on top off them. Curt got in first stepping on a seat, raising the towel to keep it for getting wet and stepping into the deeper water as he shed the towel. It worked perfectly. He didn't get the towel wet and not even Suzie saw Cyclops for even a second before he was in the water. \n\nCurt had Suzie walk around the tub and held his towel up for her with both arms stretched out. This created a screen and Suzie sat down on the edge of the tub, removed her towel from behind his screen, and slipped into the warm water. They chose a seat together with their backs to the porch. The yard was tree lined on the other three sides and blocked from the neighbors' view. \n\nThe water felt delightful to them both and they relaxed after the long sleepless day. It was 3:30 in the morning. Suzie's parents had, as all the parents, been understanding that the kids would want to party through the night, as was tradition. They were thankful to the Claytons for offering their cabana and heated enclosed porch so the kids would not be out driving around at all hours. \n\nCurt and Suzie sipped their champagne. They talked about the evening and laughed softly about different things that happened. Mostly, they laughed about how mad Becca was when she lost king and queen. After their champagne was done both were feeling a little buzz. They started kissing and soon they were into it heavily with hot passionate kisses and tongue wrestling. Suzie slinked her hand down to search out Cyclops in the water, at the same time as Curt was kneading a breast and tweaking her nipple. It did not take much play for Suzie's nipples to become fully erect and for Curt's dick to get steely hard. \n\n\"God, I wish no one was around,\" Suzie said.\n\n\"Why?\" Curt asked, somewhat knowingly.\n\n\"I'd want you to fuck me, right here in the hot tub,\" Suzie giggled.\n\n\"You might wake the neighbors with your dirty talk and screaming,\" Curt said jokingly.\n\n\"Oh, I'm going to have to watch that,\" she said giggling.\n\n\"Not on my account,\" Curt said. \"I like it.\"\n\n\"You do?\" she said.\n\n\"Yes, remember what I taught you about sex being mostly mental? When you talk dirty, I find it very sexy and it drives me crazy,\" he said. \n\n\"You and the neighbors,\" Suzie quipped joking.\n\nCurt shifted off the seat to face her. \n\n\"What're you doing?\" she asked.\n\n\"I want to fuck you here, like you said,\" he stated.\n\n\"No, we can't! Someone might see,\" she worried.\n\n\"I got an idea,\" Curt said.\n\nHe reached for a towel, wrapped it around his upper body and lowered it as he got out of the tub. He was gone into the dark for a minute and Suzie did not see him. Seconds later, he was back with a lounge chair that had a towel on it. He positioned the chair to act as a screen between them and the porch. He draped the towel to act as a further barrier. Now Suzie could see hardly any of the porch from where she sat in the tub. Curt dropped back into the water, doing his towel removal move. Suzie noticed Cyclops was not very hard anymore. \n\n\"Good plan,\" she complimented Curt. \"Come here.\"\n\nCurt moved over to her in the middle of the tub. She grabbed his cock and pulled him to her. \n\n\"I want this,\" she said. \"Sit down and let me have it for a little while first. I need to get him good and hard so he can fuck me real good.\"\n\nJust her talking like that and she could feel Cyclops stiffen a bit in her hand. 'I guess this mental stuff and dirty talk works like he said,' she thought.  Suzie had him kneel on the seat. This raised his dick out of the water when he leaned back against the tub. Suzie moved forward from the deeper middle and lowered herself into the water until she was facing Cyclops. \n\nCurt was still mostly soft, so Suzie didn't fool around with licks and kisses. She opened her mouth and engulfed his whole soft cock. It felt like a soft snake in her mouth.  She started chewing on it lightly and sucking on the head. She pulled it with her lips, stretching his cock and squeezed Curt's balls. In no time, Curt's dick began to harden and in a minute was completely stiff. Suzie stuck with her task. She sucked his head and licked it. She forced her tongue into his piss hole and heard Curt start moaning. She licked all around it, around the ridge, and battered the underside with her tongue. She was after pre-cum and teased him and milked his cock with her hands until she got some on her tongue. \n\nSuzie then wet him more and went down. She worked him into the back of her mouth and swallowed him into her throat. She pushed forward hard and took him to the root. When she had him all the way down her throat as far as possible, she started shaking her head back and forth lightly. She was like a shark trying to rip off the mouthful of flesh it was trying to consume. The effect on Curt was dramatic. He moaned intensely until she had to back off for air. Curt popped his cock out of her mouth, not wanting to give her too much time to make him cum. \n\n\"What?\" Suzie said. \n\nShe never wanted his cock out of her mouth.\n\n\"I want to fuck you before you get me off again,\" he said.\n\nThey switched positions and Curt moved between her legs. \n\n\"You want me to eat you for a while to get you wet?\" he asked.\n\n\"No, between the water and sucking your cock, I think I'm ready,\" she said. \n\nSucking Curt's cock always made her horny. She could make herself cum with very little stimulation with his gorgeous cock in her mouth. \n\nCurt moved forward and guided Cyclops to Suzie's cunt. She helped him and soon the head was nestled into her opening. Curt eased forward and a little more crept in. Suzie stiffened a bit but did not stop him. She was holding onto the sides of the hot tub for support. She liked this position because she could watch his cock penetrate her body. Curt pushed forward more and the head popped in. Suzie moaned but still did not protest. Curt looked at her and she licked her lips at him like a devil woman. \n\nCurt pressed forward slowly but soon worked most of his cock into her pussy. Suzie had moaned a little louder as he passed by her ravaged former barrier but that only lasted a second. Curt moved on until he felt his head press against her cervix. Suzie stiffened a bit at that but still did not protest. When Curt had given her a moment to adjust to the fullness, he pulled back a bit and then pushed forward. He looked at Suzie again for signs of pain. She was watching the incredible sight of his huge dick moving back and forth into her twat. She sensed he was looking at her and looked up. Before he could say anything she whispered to him.\n\n\"Fuck me with that big dick, oh king,\" Suzie said, as she sneered at him.\n\n\"Keep it up, oh queen, and I'll fuck you silly,\" Curt stated joking back.\n\n\"Don't make idle promises, oh king,\" she quipped.\n\n\"I'll promise you this, oh queen. I'm going to fuck your pussy until you scream and wake the neighbors,\" he said chuckling.\n\n\"Oh, not that, oh, please, my king, just fuck me long and hard,\" she begged.\n\nCurt fucked into her. He pulled back until only the head remained and then pushed back in all the way in her cunt. The wonderful sensations this caused in Suzie were building her rapidly to an orgasm. Her tight pussy felt every inch of his thick cock as it pushed forward. The nerve endings at the opening of her vagina were humming with the intense pleasure. As Curt gain speed, Suzie cried out.\n\n\"Oh, that's it, fuck me like that. Oh, god, fuck me, Curt. Do it,\" she said.\n\nCurt put his hand over her mouth, \"Hush, you will wake the neighbors,\" he said.\n\nCurt moved his hands from her mouth to her tits and kneaded the soft flesh. He squeezed them, rubbed around over the nipples and then grabbed her nipples with both hands. He lightly pulled them away from her chest. Suzie moaned deeply. Her orgasm was coming on fast. Curt fucked her faster now.",
        "\"Rub your clit,\" he said to her.\n\n\"What? Why?\" she wheezed out.\n\n\"Try it,\" he said, between clenched teeth. \n\nHer tight cunt was driving the nerve endings in the head of his dick berserk. Suzie did as he instructed and started rubbing her clit. The added wonderful touches to her clit were just the necessary stimulus she needed. In moments, she was ready to peak. Curt fucked her even faster, occasionally nailing her g-spot. Suzie was lost in sexual bliss. \n\n\"Oh, god, Curt, I'm going to cum. I'm going to cum so good. Oh, fuck, oh fuck me harder,\" she whispered vehemently.\n\nHe pounded her tender pussy, groaning as his own release gained momentum. He was trying to hold off but her tight pussy clamped his dick like a warm, moist velvety vise. \n\n\"Oh, drive it deep in me,\" she said. \"You're fucking me so good, so good.\"\n\nSuzie came first. Her legs were wrapped around his hips and she squeezed him tightly as her climax hit. He tried pumping her further but her legs held him too tight for much movement. He leaned forward to grab the sides of the tub and Suzie wrapped her arms around his shoulders, hugging him to her heaving chest. Her body shuddered as wave after wave of intense pleasure course through her. She continued to quake until her orgasm waned. \n\nThe restricted movement held off Curt's own release. He slowed to let her recover but then continued to fuck her. He built back up quickly but Suzie was right there with him. Her hand went back to rubbing her clit and in another minute they both neared release. Curt came first flooding her pussy with his cum. The feeling of his hot seed pumping into her was too much for Suzie and she came again. They groaned together as the tidal wave of pleasure washed over them both. Once again, Suzie pulled him tightly to her body crushing her tits into his chest. The bliss seemed to last a long time but eventually they came down together. They kissed several times before Curt removed his cock. Just as he did, Janie spoke from back on the deck.\n\n\"Suzie, you guys in the hot tub?\" Janie called.\n\n\"Oh, no, Janie, wait,\" Suzie yelled back in fright.\n\nCurt and Suzie scrambled to grab their towels and wrap them around themselves as they exited the tub. After they were wrapped up, they ducked out from behind the chair. Janie and Andy were standing twenty feet away. They both had towels wrapped around them. \n\n\"Where did you guys get the towels?\" Curt said.\n\n\"Your mom left them on the porch for us,\" Andy said. \n\n\"We're going to join you guys in the hot tub,\" Janie said.\n\n\"You don't have swimsuits,\" Suzie said.\n\n\"We're going to go in with our undies, if that was okay with Curt?\" Janie asked.\n\n\"That's fine but Suzie and I will leave the hot tub to you guys. We're finished,\" he said.\n\n\"Was someone skinny dippy?\" Janie mused joking with them.\n\n\"Possibly,\" Curt smiled back. \n\nSuzie and he proceeded back to the cabana. They slipped inside while Andy and Janie tested the water with their feet.\n\n\"Wow, that was close,\" Suzie said.\n\n\"Yeah, if Janie hadn't thought to yell, I probably would have had my dick still in you,\" he said. \n\nThey both laughed at that. Then they crawled back in their make shift bed. \n\nJanie and Andy shed their towels and eased into the hot tub. As Andy settled down he noticed something on the concrete walk next to the hot tub. He bent over the tub to look at it in the dim light. Then he pointed it out to Janie. It was definitely cum, both of them thought, and laughed."
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virginity",
        "prom night",
        "anal"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/suzies-lessons-ch-08"
}