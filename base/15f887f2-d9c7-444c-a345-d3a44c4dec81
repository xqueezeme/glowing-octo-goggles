{
    "title": "Possessing Bella Ch. 19",
    "pages": [
        "Authors Note: Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. Thank you very much to Aisielynn who continues to my second set of eyes, she is a great friend to help me out so much. This chapter was written along with the previous chapter so it is a bit earlier than my usual postings. I hope yu enjoy it. ~ellie\n\n*****\n\nBella walked into the breakfast banquet in an emerald green ball gown, which seemed so odd at this time of day. Even though she had seen the preparations over the last few days, she wasn't prepared for the amount of guests in attendance. Rob approached her looking handsome with his long dark hair tied back and a tuxedo replacing his usual jeans and biker leathers.\n\n\"You're looking beautiful, little brat,\" he said quietly with a boyish grin. \"Samuel, I believe some friends of yours are waiting to see you and your pony.\" He looked back over his shoulder to where Stephen stood with Mark and Tali.\n\n\"I believe they may be more interested in my pony than me, but I can't fault them for that,\" Samuel said easily and walked Bella toward them.\n\nRob chuckled; he could not help but like the man. He felt sorry for him because he believed that he could not make the girl on his arm happy in the long term. It was a sad fact that he had not realised what she wanted and needed from a prospective master until this weekend. Rob could see after his revelation the day before that he had boxed himself into a relationship with her that may never recover enough to be a contender for her true submission. He could also see how close Stephen was to losing her and, if he kept compromising for her, he would certainly lose her for good.\n\nAs was a tradition, the masters and ponies that were competing sat in a large horseshoe formation with the novice contenders at the ends of the tables. The guest tables dotted in and around the formation. As custom dictated they were introduced and, at her turn, Bella stood quietly as her name was announced. She could see both Stephen and Rob from where she sat, and it bothered her that Stephen had not spoken to her as yet.\n\nThe banquet seemed to go on forever with official speeches by the ruling body of the Horse Masters Society. They outlined some minor rule changes and introduced the judges for the events. Bella was grateful that she didn't recognise any of them. It took the girl next to Bella to point out that this was by far the most prestigious event held by the society and that some foreign Masters always came to judge events here to ensure impartiality.\n\n\"If you ask me they just come to add to their stables,\" she added in a whisper. \n\n\"Have you competed at a show before?\" Bella was confused. She had assumed that the other novices she would compete against were competing for their first time too.\n\n\"Uh huh, twice now,\" she nodded. \"I am hoping this time my master will let me move up a class.\" She smiled and nudged Bella with her shoulder, \"Don't look so worried, no one expects first timers to do very well, you'll be fine. Just relax and enjoy all the attention.\"\n\n\"Is it so obvious that this is my first time?\" Bella asked, her anxiousness clear in her voice.\n\n\"Only because I haven't seen you at one of these before, and I tend to watch to see which girls go up a class and which stay or get taken overseas by the judges. One day I am gonna sit beside Star Dust up there at the head of the table,\" she looked toward where Dusty sat beside Jack.\n\n\"I've seen them training,\" Bella confided, liking the open young woman. \"I think they are telepathic,\" she said in an amazed voice. \"I can't wait to see them perform in the show.\"\n\n\"You know, Waleed, the judge on the left up there, has been trying to buy Star Dust from Jack for years now,\" the young girl confided. \n\n\"You don't call him Master Jack?\" Bella asked curiously.\n\n\"He's not my Master,\" she laughed. \"If he came over and spoke to me I would address him as Master but no need while we are whispering like this. Anyway, Waleed isn't so bad except for that whole buying and selling of slaves, thing. He's not pushy or too hands-on,\" she seemed to be considering the table of judges. \"Ivan the terrible, the one with the beard, tends to be a bit too familiar. He might have been an octopus in his last life, he seems to have his hands everywhere when inspecting the ponies,\" she giggled girlishly.\n\n\"Thanks for the warning,\" Bella grimaced.\n\n\"I don't know the local judge. He apparently used to judge a lot, but hasn't done much while I have been competing. They say he is fair, though,\" she continued to whisper. Bella immediately recognised Hunter, but did not let on that she knew anything more than a first-time novice might. Secretly she was happy that Hunter had not returned to his self-imposed exile on his island. It meant that he was healing, and Bella hoped that meant Flora was doing well too. She felt a momentary pang of guilt that she had not visited the girl over the holidays, but Samuel's voice cut into her thoughts.\n\n\"The girls are a bit vocal this morning,\" Samuel chuckled over Bella's head to the Master beside her new friend. She immediately closed her mouth and sat up paying attention to the proceedings. \n\n\"Topaz can't seem to help herself, even with a bit wedged between her teeth she can still talk,\" the other man chuckled. \"Can't hurt to let her give your girl a few tips; it's a big one for a first showing.\" \n\nSamuel had strategically placed himself beside Ryan and his filly in the hopes that a friendship would form with the two girls. He knew Bella's anxiousness could affect her performance and hoped the sweet natured Topaz would help to settle her nerves. In truth, he too was anxious. He had never attempted a showing after such a short amount of training and while confident in both his own and Bella's abilities, he also knew he would be scrutinised intensely by friend and foe alike.\n\n\"Emerald is usually a quiet filly, so I will let Topaz carry the blame,\" Samuel chuckled with a wink in Topaz's direction. Topaz giggled girlishly and while they remained mostly quiet, the soft whispering continued from time to time as Topaz found snippets of interesting information to relay to the nervous first timer she sat beside.\n\n\"You've been fabulous with all the tips,\" Bella whispered as the breakfast ended, and they prepared to move off to their allotted spaces to ready themselves for inspection and competition. Bella was glad that the novices would compete first so she would be able to relax and enjoy the spectacle of the show after she was done. \"Thank you so much, Topaz,\" she impulsively hugged the girl, \"best of luck out there.\"\n\n\"Good luck to you too, Emerald, just relax and enjoy it. It's your first show, so it's all just practise for next year,\" the girl smiled and moved off with her Master.\n\n\"Ready or not, here we come,\" Samuel chuckled, \"That poor little filly doesn't know who you are or how good you are at everything you do.\" He smiled widely. \"She is right about one thing, though, you should relax and enjoy it. It may be the only time you ever compete, or it could be practise for the future if you decide you want this lifestyle.\" He stopped short of suggesting that she might want him as a future Master. His hope for that had dwindled last night as he had observed the looks between Bella and Stephen. Samuel was aware of her during the entirety of the evening, though he was less obvious about it than Stephen as he engaged in the conversations about this special girl and her training.\n\nSamuel took her to the allocated space that looked like a dressing room of sorts. The box with her competition tack was waiting for them, along with Dorothea. \n\n\"There have been a few nosy parkers, but I brushed them off fairly easily,\" Dorothea grinned. \"They certainly weren't expecting to find an old lady guarding your tack.\"\n\n\"Anyone of interest?\" Samuel asked mildly. \n\n\"That man of Binatang's that you have been training as a specialist vet for these events,\" she chortled. \"I disliked him from the moment I met him.\"\n\n\"It was a favour. Jack asked me to agree to the arrangement. We've been keeping an eye on them. I haven't let him near Bella, but he has seen her training, I am not surprised he came to sabotage her tack.\" Bella couldn't help but gasp. It hadn't occurred to her that this would be anything but a friendly competition.\n\n\"Do not fret, my pet,\" Samuel petted her soothingly. \"It shows just that they think you could beat their girls for the prize money. Nothing will happen I assure you, trust me.\" Bella nodded and stomped her foot to agree with him, but she had begun to gnaw on her lip. She hadn't considered that there was prize money at stake, money she didn't need nor want. It would be Samuel's should she succeed regardless, but she thought about Topaz and what it would mean to her.\n\nBella continued to worry about the idea that winning was worth sabotaging other competitors while Dorothea and Samuel undressed and dressed her again. Another young woman arrived as they made finishing touches and Bella sat quietly while the woman arranged her hair and her headgear was fitted and adjusted.\n\n\"Thank you, Hilary,\" Samuel said, dismissing the stylist and turned to Dorothea. \"I'll just see how far the inspection has gotten.\" He knew Bella had some nagging worry and thought Dorothea may be best to deal with it at this point. He stepped out of the room but stayed close to the door as he looked down the corridor, spotting the judges a few doors away.\n\n\"He can sense something is worrying you,\" Dorothea said mildly in a questioning tone.\n\n\"I hadn't even considered prize money, or that it would be anything but a friendly competition,\" she continued to chew her lip.\n\n\"Whether you do well or not will make no difference to lives of the girls in the competition. What will make a difference is doing your best, being the best you can be and making all those people who love you proud of what you can accomplish when you set your mind to it. Win or lose, if you do your best, no one will ever fault you, least of all for prize money.\" Dorothea paused, deciding how much to tell her. Bella said nothing but Dorothea could see her thinking.\n\n\"It's sad that most of the jealousy and big money is wrapped up in the buying and selling of girls,\" Dorothea said sadly. \"It's not as bad as it seems. The girls get a percentage, and there is a time frame on the contracts. The girls take those contracts willingly, and the Masters tend to stay away from those who look like they are being coerced into such a thing. Jack ensures everything at his show is strictly above board, there isn't usually any bad business here, but it is a chance for some trainers like Binatang to show girls that they have on the market. That's the prize for them, more than the competition itself.\" She smiled then and gave Bella nudge, \"So unless you're thinking about selling yourself to a Middle Eastern prince for a few years, you have nothing to worry about.\"\n\nBella blushed but grinned back at Dorothea, \"No, I don't think I am going to do that.\"\n\n\"Good,\" Samuel said from the doorway. \"Gentlemen, this way.\" He led three large men into the room, making it seem over-crowded. Bella straightened nervously and faced the judges. \n\n\"Small even for a show pony,\" Waleed murmured. \n\n\"Good things come in small packages. I can vouch for this one. If Samuel says she is ready, she is,\" Hunter chimed in as Ivan ran a hand over her flank.\n\n\"She's certainly a pretty pony, and your word is good enough for me,\" he stamped her upper arm with an approved symbol, and they left the room again.\n\nBella let out the breath she had been holding and looked at her arm. She had been stamped with the letters P and N. She had prepared the three earliest levels but just as Samuel had said she would not be required to do Preparatory but rather begin in the Preliminary field and move onto the Novice field.\n\n\"Would you like to watch the Preparatory field?\" Samuel asked, \"They will begin the show.\"\n\nBella nodded slightly, still unsteady with the weight of her head gear and stamped her foot. Samuel shook out a hooded cloak and wrapped it around her shoulders, effectively concealing her competition tack and attached a lead to her collar. They walked a short distance through the corridors to the arena area and a small alcove area that a few trainers and their ponies stood in. Topaz grinned and immediately nudged her Master so she could stand closer to Bella.\n\n\"Not many new girls this season. That makes your girl a rarity, especially as she is not in this round,\" Ryan murmured to Samuel as Topaz flashed Bella her glittering, almost golden coloured tack. Bella reciprocated, knowing that in the shadow of her cloak her tack would appear basic black and unadorned from that angle.\n\nThey watched five girls fumble their way through the basic movements of the preparatory routine and Bella realised why Samuel had not wanted her to compete in this field. Though she was possibly more of a beginner than these girls, she had mastered the basics and no longer fumbled over them as these girls did. She was quietly confident with her first event as well. It was the novice class that she worried about as it was the first truly competitive class, where more than a dozen girls would compete.\n\n\"Good luck,\" Topaz whispered, exposing her shoulder to show one letter, N. Bella smiled her thanks as Samuel lead her toward the warm up area for the next round of competition. From that point on Bella's world went by in a blur of memorised salutations and routine. She concentrated solely on Samuel and the nuances of his body language, how he held the reins and the occasional look of pleasure on his otherwise stoic expression. She had effectively shut out the crowd and any noise they made, instead focusing solely on what she knew she had to do.\n\nAfter her final salute to the judges, she let the applause of the spectators seep into the bubble she had created around herself. Turning to follow Samuel, she was startled as he stopped and acknowledged the crowd, flicking the reins to indicate a salute. Bella turned to face the crowd and bent to salute them all as the applause went on. Allowing herself a quick glance directly ahead at the crowd, she saw they had stopped before Stephen, Rob and Mark. Her eyes locked with Stephen's for a brief moment, and she saw his pleasure written plainly there. The sight caused a small thrill to travel up her spine, and she gave a half smile before lowering her head again and blushing as Samuel led her from the arena.\n\nThey waited in the holding pen for their scores to arrive. There were twelve movements, each of which was scored out of ten and Bella was hoping to get one hundred or more from the judges. It was what she knew she needed to be able to continue in the novice category. Her mind was still on Stephen and the pleasure in his eyes when a score of one hundred and eighteen spun up on the board. She felt relief and once again acknowledged the crowd with a salute, seeing Stephen and Rob slap each other on the back in celebration of her accomplishment.\n\nThey remained in the arena as the rest of the field competed. Each time a lower score was posted Samuel would pet her gently and smile softly. The final pony, a leggy brunette with the name Charcoal, who received a near perfect score of one hundred and nineteen, completed the Preliminary class. She took the first place trophy for her owner and trainer, Binatang, leaving Samuel and Bella with second place. \n\n\"Well done, my pet,\" Samuel spoke excitedly as they re-entered the dressing room to prepare for the next event. Bella was confused. She had done well, but she hadn't won, so she didn't understand his excitement. \n\n\"Ah good, Dorothea you are here,\" he turned as the old woman entered the dressing room. \"Could you, as subtly as possible, go and whisper in either Jack or Hunter's ear that Preliminary one point routine automatically accrues a two-point deduction as pointed out by the ruling body this morning?\"\n\n\"Ah the subtlety of levels within levels,\" Dorothea grinned. \"It might be wise for the judges to review their scoring and the routines for the next level as well. I think I might go straight to the head of the society, he's an old friend after all, so that none of our friend's interests can be called into question.\"\n\n\"No need,\" Jack's voice sounded from the doorway where he had appeared behind Dorothea. \"It would seem there were several protests made about the scoring of the preliminary round and adjustments have been made accordingly for the overall scores. It is being announced as we speak. I volunteered to inform the new winner of the change in circumstance.\" Jack stepped in and swooped Bella up off the ground, \"Congratulations, little one!\" \n\n\"That's one,\" Samuel told Jack with a wide smile. \n\n\"Yes, it is, but you still have a ways to go,\" Jack replied with a smile, \"I will be cheering for you. This is one bet I will be happy to lose, good luck in the next event.\"\n\n\"Thanks, but we don't need luck. Bella knows her routine to perfection,\" Samuel said proudly. \"Would you mind giving us a few moments alone, please?\"\n\n\"May I escort you back, dear lady?\" Jack offered Dorothea his arm formally. \n\n\"Of course, you may! How often does an old duck like me get to be escorted around by a big handsome Horse Master like you,\" Dorothea chuckled and took his arm. \"Good luck Bella darling, not that you need it.\" They disappeared out of the room chatting happily.\n\n\"How are you feeling?\" Samuel tilted her chin up to him so he could look into her eyes. \"How are the nerves now?\"\n\nBella smiled and stamped her foot to let him know she was fine. Smiling in return, he rubbed her legs down and spoke to her about her routine before he led her back to the competitors' waiting area. Having just competed, she would be close to last in this lineup, and they stood toward the rear of the competitors' pen, watching as the other ponies went through their routines. Bella watched carefully this time, noting the subtle differences in the routines of the other girls. She had not realised there were degrees of difficulty involved and she wondered about the degree of difficulty associated with her routine.\n\nWhen her turn came, it was like time slowed down, and each movement became crystal clear in her mind before she had to execute it. She halted exactly six paces in and saluted the judges. The next move required a sashaying walk before lengthening her stride in an exaggerated walk. It all fell into place as she manoeuvred fluidly through the changes to the crosswalk, walking trot, rising trot, and canter. She went back through the manoeuvres as she moved through the patterns of curved and straight lines in her routine. \n\nWhen she got to the final salute, she was exhausted. She had known it was a tough routine, but the added anxiety and pressure of the show seemed to add to the energy she spent getting through the routine. She felt the weight of the headgear press down on her and although the applause was loud, she was grateful that Samuel had not made her stop to salute the crowd this time. As they got to the edge of the arena to wait for the scores, she felt Samuel's arm settle on her lower back. Supporting her, he stood close enough to add to that support with his body without making his actions obvious. \n\n\"Stay strong, my pet, it is almost over now,\" Samuel murmured into her ear as he lowered his head, slightly masking his words.\n\nBella straightened her stance and pulled her shoulders back, realising that Samuel as always was aware of her condition and would take her to rest as soon as possible. The scores spun up on the board, and she heard the big cheer. She found it difficult to focus on the numbers with the pressure of the headgear giving her a dull ache that seemed to lodge itself behind her eyes. Smiling and saluting the crowd from her position in the competitors' pen, she tried not to wobble in the hooved heels.",
        "After what seemed like a lifetime to the now wilting Bella, Samuel led her back to the dressing room and closed the door. Bella immediately sagged, and Samuel helped her to a couch and began to release the head gear. Dorothea appeared shortly after with barley sugar, which she pushed into Bella's mouth.\n\n\"Suck on this sweet girl. It's no wonder you started to wilt. You have barely eaten anything in the last two days,\" She clicked her tongue disapprovingly. Her disapproval was not so much at Bella as at Samuel and herself, who had not thought to make sure she had something in the small break between events.\n\nOnce the headgear was removed, Bella felt an almost immediate easing of the ache she had felt in her head and behind her eyes. The barley sugar was settling her stomach, and she felt suddenly embarrassed that she had wilted so obviously in front of the crowd.\n\n\"I can see you are feeling better already,\" Dorothea smiled. \"You will bring her back out to watch the rest of the show soon,\" she said meaningfully to Samuel, who nodded. The colour had come back into Bella's face, but he knew until they saw for themselves, Rob and Stephen would be worried. Jack particularly had been concerned that everything went smoothly during her stay here, and he berated himself for not taking the time during the break to ensure she had water and sugar rather than asking about her nerves. \n\n\"When you're ready,\" Samuel said softly as he knelt beside her and began massaging her legs, \"We will need to go back out and watch the rest of the show. I should have made sure you ate more at the breakfast this morning,\" he said in an apologetic tone. The truth was he couldn't remember if she had eaten at all. He had always had Dusty to watch over her meals until this morning. Once again he berated himself for complacency, Bella was such a sweet and obedient girl that he had let his guard slip as he would with a far more experienced girl.\n\n\"Come,\" he said softly, \"I will take you to Rob and Stephen and then find you some decent food.\" Jack would be busy with the organisation of the show, and he felt he needed a minute to himself. He needed to think about how he had come to the point of putting a girl in his care at risk like this for the sake of proving he was still the best trainer in this society.\n\n\"You truly are the most exquisite creature. I am so very proud of you,\" Samuel bent to kiss her and led her from the room.\n\n*****\n\nBella had endured the scrutiny and worried looks from Rob and Stephen before being taken back to the main house and the relative quiet of the kitchen. \n\n\"The caterers have set up a wonderful kitchen out near the banquet hall,\" Samuel explained as he walked around the kitchen with confidence. \"Ah good,\" he smiled, lifting a tray of leftover lasagne from the refrigerator, \"This will do nicely. You need something to sustain you. I imagine the rest of the day will be quite busy. You have outdone everyone's expectations. I get the feeling though that you are often underestimated, in my case though I overestimated you and trusted you to eat properly this morning without my scrutiny.\"\n\nBella dropped her head in shame that she hadn't eaten at breakfast, but she had been so anxious about the show that the last thing she had wanted was food. She could see how foolish it was not to have forced down a little bit. She hated that she had let Samuel down despite her performance in the arena.\n\n\"You are a wonderful girl and usually so attentive to my expectations that I forget you are still so new to this lifestyle. It is quite easy to get carried away with you, my pet,\" he said sadly. \"Such a sweet young girl, I can see now that you require more care than I had thought. Ponies and pets to some level tend to have an independent streak and can tell their masters what it is they need if necessary. You, I think, struggle with that as yet,\" he smiled softly, speaking as if to himself as he reheated servings of the pasta for both of them. \n\n\"As much as Jack would wish it. I don't believe this is the lifestyle best suited to you,\" he said after long moments of silence while he placed the food on the bench and went to sit beside her. \"I adore you, I have relished every moment of your submission, and it pains me to admit that I can't give you the type of care that you need. Eat, my pet, and then we will go and celebrate the triumph of our time together.\" Bella needed a more nurturing man than he and that fact saddened him. He adored her, lusted after her, and wished fervently at that moment she was as in tune with her own needs as she was with his. \n\nBella felt the rejection keenly, and she knew that not eating breakfast had been a bigger mistake than she had thought possible. While Billie and Hunter had never mentioned collaring her when she was ready, they had left the door open to explore further with them should she want that type of relationship. She was glad she could not speak because she didn't know what she could say to make it better, or even if she wanted to make it better now. The idea that she had let him down so badly by becoming faint at the end of her performance crushed her inside, and she felt as if she should beg for forgiveness. She could feel tears burning behind her eyes that she had failed on some core level, and it took the shine off the celebrations he suggested.\n\nThey ate silently, lost in their thoughts, and Samuel quietly picked up their plates, putting them into the sink. They walked quietly back to her suite, and he pulled her into his arms and kissed her deeply.\n\n\"I adore you, my pet. You are the most delightful girl I have ever had the pleasure of training. Use the bathroom while you can. I doubt you will have much time to yourself once the celebrations begin,\" Samuel said softly, releasing her. He continued to talk from the doorway as she disappeared into the bathroom.\n\n\"You belong to me until I hand you back to Stephen in the morning, and I intend to make the most of our last evening together,\" he grinned at her. \"I am proud beyond words of what you have accomplished in such a short time and that you wear my collar if only for one more day.\" He gathered her lead as she returned to him and tilted her chin up to look into her eyes. \"You have no idea how much I wish it could be longer, so let's make this evening a night to remember for always.\"\n\nBella gave a half smile. The crushing guilt and sadness she felt at letting this man down had been eased somewhat by his words and she would do her best to make him proud for the remainder of her time with him. Leaving the suite, they were accosted by Jyace in the corridor. \n\n\"Still pandering to the spoilt filly?\" he said with a fake sounding chuckle. \"Binatang sent me to find you like some errand boy.\"\n\n\"Why does he want to see me?\" Samuel asked, ignoring the initial comment. \"Is one of his fillies injured?\"\n\n\"\"There is nothing in his stable that I couldn't handle,\" he replied indignantly. \"I believe he plans on buying that small one,\" his voice held distaste, and he peered at Bella critically. \"I have watched all week, and there is nothing so special about that one to cause the interest she has generated here.\"\n\n\"That is because you do not see properly,\" Samuel replied easily. \n\n\"Oh, I see that a spoilt brat is being pandered to here. I can't however work out why. Binatang has at least half a dozen better trained, better looking and better at knowing their place,\" Jyace continued with his disparaging tone.\n\n\"That my friend is why you will never be a full member of this society,\" Samuel said with a smile. Bella could feel him tense beside her and became tense herself with her shock at the confrontational words. The blow took them both by surprise. He sucker-punched Samuel, without warning. Samuel went down in a heap, the blow rendering him temporarily unconscious. He hit him twice more while he was on the ground, then hoisted the stunned Bella to his shoulder and began walking towards the rear exit of the house. \n\n\"No!\" she screamed. He held her legs tightly and expertly, and with her hands still chained to her waist there was she little she could do but scream. Although it was rare at events like this, it was not unusual for girls to be punished. The few people who were not attending the show looked in their direction, but on seeing her unharmed they continued on their way.\n\n\"You have no idea what you have done!\" Bella yelled. \"I may be a spoilt brat but do you have any idea who will come after you when they realise I am missing? Not even Binatang is that dumb,\" she yelled in fear. \"You can't possibly be this stupid!\"\n\n\"You're a girl who can be bought and sold as easily as a real pony at the marketplace. Binatang will pay a fair price, and you will get your share slut. Be thankful someone like him is willing to pay for a scrawny girl who isn't even strong enough to compete with the likes of the true champions here,\" he growled at her. \"I am sure Binatang will have no problem if I deliver you slightly damaged, so shut up, or you will regret it.\"\n\nShe knew they were in the corridors surrounding the arena by the noise of the crowd that was becoming louder with every step. She began to yell and scream again but suddenly she was dumped unceremoniously to the floor, and he slapped her face hard, \"I said shut up!\" He raised his hand again but was stopped short.\n\n\"Hit that girl again and you will be charged with assault,\" Binatang said coldly from behind where Bella lay sprawled on the floor. \"Where is Samuel?\" \n\n\"Sleeping off the shots he took,\" Jyace said warily, unsure of himself now and allowing Bella to half sit and turn her tear stained face to Binatang.\n\n\"He beat him badly and brought me here,\" Bella said desperately, fear and dread clearly showing on her face.\n\n\"Go and get Rob Collins,\" Binatang said to the girl in the dressing room with him. \"Remain calm and ask an official if you are unsure which is him, tell him Bella wishes to speak with him. Do not express why.\" He turned back to Bella, \"Where is Samuel now?\"\n\n\"He was in the corridor in the... east wing of the house,\" Bella said less fearful after hearing Binatang send for Rob. \n\n\"See to him,\" Binatang spoke to a large man who had been standing with the young pony. He helped Bella to the couch and touched her cheek, brushing the tears away. \"Trust me, I mean you no harm. I wished only to congratulate you and give you a gift of sorts.\" He saw her visibly relax and offered her a handkerchief from his suit pocket as he pulled out his vibrating phone. After a brief conversation, he looked up at Jyace and back at Bella. \n\n\"An ambulance has been called for Samuel,\" Binatang shook his head sadly, and Bella gasped. \n\n\"He deserved it with his holier than thou attitude. He provoked me,\" Jyace said without remorse.\n\n\"How can you not know what you have done and tried to make me a part of?\" Binatang said harshly. \"There is no place within my organisation for such ineptitude.\"\n\n\"What?\" Jyace was confused as to what had gone wrong for him. \"Samuel deserved being taken down a peg or two. You had said so yourself and that...\" he pointed at Bella as his voice rose in anger tinged with fear, \"She is just a girl that Jack bet Samuel he couldn't train to be a champion in two weeks. There are twenty more out there who are more desirable than this spoilt brat.\"\n\n\"I assure you she's far more than just a girl,\" Rob took in the room at a glance and descended on Jyace. \"What have you done to her?\" his tone was as threatening as his sheer size in the small room.\n\n\"What's it to you, old man,\" Jyace bit back, though his bravado was all show at this point as his head tried to wrap around everyone's reactions. He had kissed the ass of the right people to get this far, and he felt like he was on the verge of losing it all without understanding why. It had taken time within Binatang's organisation to prove himself of being mentored as a pony trainer, using his veterinarian degree to move through the ranks quickly. The internship here was part of that mentorship. Unlike Binatang though Samuel was weak in Jyace's eyes, and he had little respect for the man and his talents.\n\n\"That girl is my ward, and should one hair on her head be harmed I am not the only person who will hunt you down like a stray dog,\" Rob said through gritted teeth. \"Do not move from this spot or you will regret it, I promise you.\" He went to Bella then and scooped her up into his arms, holding her close as she dissolved into tears.\n\n\"They've called an ambulance for Samuel, I need to go and see him, please Master Rob,\" Bella cried.\n\n\"Yes, I think we should all go and check on him, little brat,\" he looked meaningfully over Bella's shoulder to Binatang, who nodded in acknowledgment. \n\nThey left as discreetly as possible so as not to interrupt the show that was about to break for lunch in the large marquis beside the arena stadium. Carrying Bella, Rob led the way up to the house and into Jack's den. \n\nBella immediately went to Samuel, who was now awake and sitting up. Each looked relieved to see that the other was safe. One of the guests, a doctor, was in attendance and was giving instructions, so Bella sat beside his chair silently listening as she looked at the large bruises forming on his face and head. She was oblivious to the other men around her as she waited to be able to apologise.\n\n\"Jack, it's good you're here,\" Rob said still seething. \"It's best you do the investigation with Binatang. I imagine Jyace will be withdrawing his application to the society.\" Despite his anger, he turned to Binatang, \"You and I don't often see eye to eye, but I thank you for alerting me so quickly. Next time, you are at the club we will talk properly.\" Rob stepped to the side and pulled out his phone while keeping an eye on Bella, leaving Binatang to fill Jack in on what he knew, and called Stephen.\n\nThe use of old school brass knuckles by Jyace, who it seemed had been waiting for an opportunity to attack Samuel, ensured that there was sufficient damage done for the injured man to be airlifted to the hospital. Jyace was restrained and placed in a cage where he would be kept until he could be taken to the authorities the following day and charged with assault before being flown back to Singapore.\n\nBella was beside herself with grief and guilt over her part in the conflict and even though she had been told several times that the attack would have occurred regardless of her presence, she remained morose. As the group began to head back to the arena where the show had been delayed after lunch with the absence of both Jack and Binatang, Stephen decided to take matters into his own hands with Bella. He told Rob that he would take her to clean up and calm down and meet him back at the arena. \n\nWithout giving Rob time to reply, he took Bella's lead and led her from the room. Walking with long strides, he approached her suite. He closed the door loudly behind them. Pulling her with him, he sat and bent her over his lap. Spanking her hard, he began to talk.\n\n\"How dare you not look after yourself here!\" he raged at her. \"You have lost weight, you almost fainted after your second event, which from what I could see last evening and again this morning means that you have not been eating properly.\" He had been upset at not being able to be near her and touch her during his time here, and now this drama had almost undone him. \n\n\"I love you! I try to trust you to look after yourself. Obviously you can't do that alone, no matter how much you protest that you can,\" his voice was hard as if she had hurt him deeply with her actions. He pushed her from his lap, and she scrambled to kneel up before him. She watched as he reached inside his shirt and drew out the crossed sword pendant that was his crest and remove it from the chain around his neck.\n\n\"Samuel has asked me to stand in his stead in his absence, so you will wear this. You will stay by my side for the rest of your time here,\" his rolling bass voice was abrupt, putting off any arguments she may offer. \"Do not think this is the end of this conversation by any means Bella, you will learn that no matter how much you want your freedom sometimes there have to be limitations for your own good.\" He waited for her to answer him, and when she said nothing he realised his error. \"I am not a Horse Master. When I speak, you will answer me,\" he ordered.\n\n\"Yes, Master,\" her voice was small and trembling but his heart sang, she had used Master once more to address him. He pushed together the ends of the small ring that held his pendant to her tack collar and sat back satisfied. She was back where she belonged, at his feet and following his command.\n\n\"We will return to the arena but tonight we will revisit your lack of regard for your health and well-being,\" Stephen stood and pulled her to her feet. He leaned down to kiss her tentatively, unsure of the reception his kiss would get at this moment. When she kissed him back however, he pulled her tightly against his body and groaned in pleasure.\n\nTrapped in the nightmare of knowing Samuel was lying in a hospital as Mel once had because of her relationship with him, Bella responded to Stephen on automatic pilot. He was right, everything that had gone wrong today had stemmed from her lack of judgement. \n\n*****\n\nThe afternoon had been long for Bella as she once again sat between Stephen and Rob in the arena crowd. Her thoughts were dark and, as she watched the performers and the cheering crowd, she did her best to push those thoughts into a dark corner her mind and smile cheerily with the rest of the crowd. Dusty performed beautifully for Jack and won her class. It was as the final Show Champions trophies were being announced that Rob placed his phone in her hand. Looking at the screen, she saw Samuel's face on Skype. \n\n\"I am here with you to see you get the trophy,\" his voice was clear and confident. \"You did nothing wrong today. Nothing. Do you understand?\"\n\n\"Yes Master,\" Bella replied, the relief of seeing him in a room without the tubes and machines in the room her mind had conjured for her.\n\n\"I have a concussion, that is all, no need to worry about me. I will return tomorrow and see you before you leave for the city.\" He gave a sad smile. \"I wish I could be with you tonight, but the doctor insists on rest before making the journey back home.\" \n\n\"I am glad,\" Bella replied softly with a genuine smile of relief. She handed the phone back to Rob at Samuel's request, and they spoke quietly, waiting for the announcement of the Champions trophies.\n\nShe felt reassured after seeing Samuel that he would be well cared for and recover from his injuries without any long-term effects. Her thoughts stayed with him though as she sat with Rob and Stephen. He had been right when he had spoken to her before all the drama occurred. This was not the lifestyle for her nor was he the right Master. She had enjoyed her time with him, though. She wished that she could find that balance between the freedom she desired and the protectiveness others felt for her.\n\nBella was lost in thought when Dusty's name was announced for show champion and, although she cheered, she felt badly for Samuel as she had known that this was the prize he had wanted. She once again berated herself for not taking care to eat enough. Lost in the dark thoughts again, she missed the following announcement of an additional best in show award. It was the first time a new performer had attained a perfect score in any event.\n\nJack walked to the edge of the arena and took the lead from Stephen, walking Bella out to stand beside Dusty as the announcer explained that Samuel had left to attend to an emergency. Bella blushed and smiled as she was paraded around the arena and returned to Stephen, who had stood unmoving from where he had handed her over. With the ceremonies done, the Grand Ball would begin shortly in the banquet room for all participants and their trainers. Bella hoped she would have time to rest a little before having to attend the ball.",
        "\"There is special tack for tonight,\" Dorothea said to Stephen. \"I will come and help you.\" It was a statement, knowing Stephen would defer to her if she pressed the point.\n\nBella had not seen Dorothea for hours and wondered where she had been, so she happily followed them back to her suite. Stephen's mood had not improved over the last several hours and, once they were in the relative privacy of her suite, Dorothea turned on him. She drew her small frame up and took on the commanding tone she used when unimpressed with any of her boys, as she thought of the small group of men who were a large part of her life since her husband's death.\n\n\"It wasn't her fault this time, nor was it Samuel's, so you can stop acting like some overbearing buffoon,\" she said sternly.\n\n\"There will always be men like that at these big events. I do not blame her or even Samuel, though he should have known better in some ways,\" Stephen said, frustration clear in his voice. \"No one wants to stop her living her life, but she dismisses all the dangers as if they don't exist when clearly they do.\" \n\n\"Events like this as you say bring in a wide variety of people who often do not socialise in the same circle as we do,\" Dorothea said slowly. \"I will agree that extra precautions at big events should be taken from now on. You don't have to stand over her like some great man mountain and stop her from celebrating her triumph here, though.\"\n\n\"If only it were that simple,\" he said, relaxing slightly and turning to face Bella. \"Until you understand and accept that there will always be dangers for you, these things will continue to happen.\"\n\n\"They said it wasn't my fault,\" Bella whispered. \"That he would have attacked Samuel regardless of whether I was there or not.\" Tears filled her eyes as she once again felt the guilt of what happened to Samuel coming to rest on her shoulders.\n\n\"That is not what I meant,\" Stephen shook his head. \"It's true Jyace would have eventually attacked Samuel because he resented the way in which all the Masters here sought out his expertise. My concern is that he did not know who you were or your value to those who love you. He saw you only as a pony girl, property to be traded amongst men with enough power and money to pay for another human being.\" His voice held disgust. \n\n\"Let me help her dress for the ball,\" Dorothea interrupted his tirade, seeing Bella's distress at his onslaught. \"She will be expected at the Champions table.\"\n\n\"I do understand,\" Bella said softly, \"I would never have strayed away from Samuel here. I will never go to the club uncollared again. I understand that in the lifestyle I will always need some protection from people who do not know me or flout the protocols. I am sorry I worried you yet again.\" Her voice was sad, but she looked up at him with a sincere expression when she spoke. \n\n\"Go and get dressed for the ball,\" Stephen grunted and went to sit in a chair to wait for them. He knew it wasn't her fault and yet his blood had turned to ice in his veins when he had received the call from Rob. He had been too compromising with her of late. It was time to take back the power she had over him and put in place a strict set of boundaries. Now that her training was over, she needed to stop gallivanting all over the place and stumbling into these situations. She was young, beautiful and wealthy. In the vanilla world that made her a target, adding to that her submissive nature, he shook his head. He knew too many men who would want to take advantage of her, the sooner he made his position clear with her the better.\n\nHe was well respected within their social circles. Thanks to hard work, a generous bequest from Mel and the sudden appearance of a mysterious benefactor to the Knights of the Cross charity he was certainly in a good position financially. He could offer her a lifestyle on par with what she was used to, without her ever having to worry about touching her own wealth, which she could invest in her business ventures. He could see their future together so clearly. He just had to make her see it now that she was free. He realised he was going over this again as much to convince himself that he was worthy of her than to justify why she should accept him over anyone else.\n\nWhen she entered the room, he looked up, and his breath caught. She wore a body stocking that shimmered with the glittering dust of emeralds and gold. Small delicate gold pasties held her nipples erect and pushing at the thin fabric that was held in place by a finely wrought gold and emerald harness. The only concession made to being a dress was a panel of the same shimmering material that hung from the front of the harness just above her mons and fell to the floor at her feet.\n\nThough it had the overall appearance of pony tack, it looked almost fragile as it framed her contours. She turned for him to inspect her and he noted the carefully plaited tail that seemed to highlight the heart-like shape of her ass. Even the specially made shoes were perfect, making her legs seem longer. Stephen noted with satisfaction that Dorothea had added his pendant to the starburst collar, and it was evident who she belonged to this night.\n\n\"You look exactly as a champion pony should,\" Stephen said finally after his initial reaction and inspection. \"You are as beautiful as always, little one.\" He stepped forward, lifting her chin to kiss her gently and smiled. \n\nBella thought he would say more, but he stepped back and addressed Dorothea,\" Would you like us to escort you to your room to change?\" Stephen asked solicitously. \n\n\"Oh no, I can find my way, nobody notices an old lady's comings and goings at these things,\" she chuckled. \"I will be along in a few moments and, Sir Stephen,\" she paused. \"You may want to thank Binatang for righting the situation earlier. It could have gone very differently if he hadn't alerted us all,\" she said meaningfully. \"I think perhaps we have judged him too harshly in light of recent events.\"\n\nStephen nodded and grunted his acknowledgement of her words. Though he did not approve of some of the darker kinks Binatang indulged in; he had to admit that the man had never crossed the line with a girl that did not wear his collar. They perhaps would never be friends, but he did owe him gratitude for his handling of the situation.\n\nThey left the room, parting ways in the living room as Bella and Stephen carried on to the large red barn that had been transformed into the banquet hall. The horseshoe shape of the tables that had filled the large space that morning was gone now. One end of the hall was taken by large round tables while a dance floor and bandstand took up most of the remaining space now. Stephen guided Bella to the buffet table and encouraged her to eat before more people arrived, and she became too busy receiving congratulations to think about it.\n\nBella looked at him dubiously but did as he said, filling a plate with salad and fresh fruit before sitting to eat with Topaz, who had waved them over. Stephen smiled, seeing the exuberant young girl waving in their direction and seeing Bella wave in answer, had guided them to that table. He liked that she made friends so easily with other girls. So many of the girls at the club were competitive, and that seemed to take their bitchiness to the next level.\n\n\"Oh my God, oh my God! You did so well! I can't believe you won three trophies,\" Topaz hugged Bella enthusiastically. \"Sit beside me, it's such a shame Master Samuel had to leave, lucky there was someone to look after you for him,\" she said, eyeing Stephen speculatively.\n\n\"Stephen,\" he introduced himself to Ryan, holding out his hand in greeting.\n\n\"Ryan, nice to meet you properly,\" he said with a smile. \"I've been to the club once or twice and have seen you there but never been able to catch you when you weren't working before.\"\n\n\"It's always a busy night at the club,\" Stephen agreed. \"You and your girl should come and have dinner with Bella and me sometime.\"\n\n\"I'm not a member. We don't get down to the city very often. Jack usually signs me in if I happen to be in the city for business with him,\" Ryan kept up the easy conversation. \"I thought this must be Bella, though I wasn't sure until just now. Samuel introduced her by her competition name this morning.\"\n\n\"Oh gosh, you're that girl, the one who was in that shooting last year,\" Topaz looked stunned and then impulsively hugged Bella to her. \"We went to the wake at the pony club, but you weren't there, I am so glad you are recovering so well.\"\n\n\"There was a wake?\" Bella asked softly, her face creasing into a frown as she tried to remember. \n\n\"Jack had one here for members of the society,\" Topaz suddenly regretted saying anything. \"It probably wasn't anything official.\"\n\n\"There were several as I remember it,\" Stephen said, placing a hand on Bella's back, supporting her. \"A lot of people were upset by what happened,\" the time for sweeping it away had passed. Bella would have to face conversations like this more and more now that she was becoming a public figure.\n\n\"I'm sorry,\" Bella said quietly, \"I didn't know. It took me a while to even think about it clearly. It's still so...\"\n\n\"Not another word,\" Topaz stopped her. \"Tonight is for celebrating, and we are going to have some fun! I can't wait to dance. I hope it's the same band as last year.\"\n\nThe crowd began to thicken, and they were joined at their table by Rob and Dorothea, who took the last seats. The conversation was loud and cheerful as everyone relaxed into the atmosphere of the evening. Bella was visited by many people who wished to congratulate her, including Binatang and Charcoal.\n\n\"My sincere apologies, my dear,\" Binatang said after making his way to her. \"I had assumed Jyace understood my instructions properly. It is being taken care of, and you need have no more concerns about him. May I introduce my girl, Charcoal?\"\n\n\"Why don't we let them introduce themselves,\" Stephen said, standing beside Binatang and offering Charcoal his chair.\n\n\"You may sit,\" Binatang said with a forced smile as the girl hesitated to take the offered seat.\n\n\"It's nice to meet you,\" Bella said to the dark-eyed girl. \"You were beautiful in the arena today, and deserved to win.\" \n\n\"Yes, I did. I did not though, you did,\" Charcoal said haughtily. \"I don't see what the big deal is about you,\" she looked over her shoulder as she spoke in a whisper. \"You're too short and too weak. Your Master must be friends with those judges.\"\n\nBella choked on her drink, surrounded by friends, this was not what she had expected but as she looked around the table for help, she could see that nobody had overheard the accusations.\n\n\"It is because you cheat I must be punished,\" Charcoal said harshly. \"My Master makes me meet you to see what true slave is and learn humility, but I only see small, weak girl who did not deserve my trophy.\"\n\n\"I believe this girl requires punishment,\" Stephen said loudly, looking down on them both, showing that he was well aware of Bella's situation.\n\n\"Doubly so now,\" Binatang agreed. \"It is bad to be so ungracious. She can share the cell with Jyace until we leave. I am sure he has some frustrations to work out.\" \n\n\"No, Master, please, I will not,\" Charcoal's almond eyes flashed with barely contained rage as she begged not to be caged with Jyace. \n\n\"Perhaps you are right,\" Binatang smiled widely, \"There is another punishment fit for you.\" He looked toward where the judges sat, \"If you speak again there will be no choice in the matter at all.\" He turned toward Bella, \"My apologies, my dear, I had expected better behaviour but she is a wild beast, and I overestimated my training with her. If you will excuse me,\" he gave a slight bow to Stephen and walked away, followed by the now silent Charcoal.\n\n\"Finding trouble again, I see, little brat?\" Rob laughed.\n\n\"You know I don't find it, it finds me, Master Rob,\" Bella said softly, but a playful smile appeared on her lips, making Rob laugh all the more.\n\n\"You know there was no truth to her words. Samuel and Jack were very careful to guard your identity, even Jyace did not know,\" Stephen said softly as he took his seat.\n\n\"Yes, Master,\" Bella said. \"It doesn't matter much now as I won't be competing again.\" She said it as if it was a foregone conclusion, and she enjoyed the look of momentary surprise that showed on Stephen's face. Even a month ago she might have been upset by Charcoal's words, but she knew that Samuel had worked hard to make her show ready. It was his trophy more than hers. He had made it possible for her to be in a position to win with the training he had given her. She felt sad that he had not been able to be here to enjoy this evening with her.\n\n\"You did not enjoy your time here?\" Stephen asked quietly, concern in his voice that the incident with Charcoal had hurt her more than it seemed.\n\n\"I enjoyed it a lot,\" Bella said quickly, then lowered her voice to a whisper. \"Master Samuel and I spoke after my events. We agreed that this was not the lifestyle for me.\" There was no need to extend her explanation. She knew it would be enough for Stephen to know she would return to her life in the city without regret.\n\nThe band began to play, and people mingled around the tables even more. Stephen stayed by Bella's side, even waiting near the bathrooms as she went inside or beside the dance floor as she danced with Topaz and a few of the other girls. Anytime another man approached her, she could see Stephen watching and ensuring they meant her no harm.\n\nBella was exhausted and though she tried not to let it show, Stephen eventually stepped in to suggest that they think about retiring early as she had begun to look worn. Putting her hand to her face, she worried that perhaps her hair or makeup had deteriorated but he smiled.\n\n\"It has been a long day, and your energy is starting to fade, you still look beautiful, little one,\" he said softly. Wrapping his arms around her, he leaned down to her ear, \"There is no shame in admitting you need to rest.\" \n\n\"Yes, Master,\" Bella said, admitting that she was exhausted despite the party atmosphere she was enjoying.\n\n\"I am thinking the same for that wicked, old woman over there flirting with Ivan,\" Stephen chuckled, indicating Dorothea. \n\n\"Why don't you ask her to dance while I say goodnight to Master Rob and Jack and Dusty,\" Bella suggested with a smile. His reaction to her earlier when they were alone made her feel anxious about returning to her suite with him.\n\n\"I will be back shortly to walk you to your rooms,\" Stephen said, leaving her with Rob and Jack, and seeking out Dorothea.\n\n\"I'm afraid this one is not for sale, Ivan,\" Stephen said, walking up behind the giggling Dorothea.\n\n\"A woman with such experience would be a delicacy in my country,\" Ivan argued, \"I would pay highly for such a jewel.\"\n\n\"Ah but she is priceless, my friend,\" Stephen said easily, \"We are lucky indeed when she comes to shine in our presence. May I have this dance, dear lady?\"\n\n\"How could I resist such a gallant request,\" Dorothea fluttered her eyelashes girlishly and took his arm.\n\nBella had watched the exchange from her table and smiled. She couldn't imagine her life without Dorothea in it. The woman epitomised everything Bella wished she could be in the years to come. She was poised, dignified and respected, while still being girlishly flirtatious and beloved of so many strong and powerful men. Returning her attention to the table, she leaned into Rob's side, feeling his arm snake around her back and ribs, pulling her closer.\n\n\"Getting tired, little brat?\" Rob said into her hair.\n\n\"I'm afraid so. I would love to stay longer, but I think my energy is just about spent,\" she whispered, looking up at him. \n\n\"Would you like me to take you to bed?\" Rob asked.\n\n\"There was a time when that is exactly what I wanted,\" Bella giggled, teasing at the play on words. \"Not tonight though, I am already exhausted. Thank you, Master,\" she grinned at the look of surprise on his face and reached up to stroke his cheek. \"Stay and enjoy the party, Stephen is just ensuring Dorothea isn't overdoing it before he walks me back to my room. No need for you both to miss out on the party because of me.\"\n\n\"I wouldn't have minded at all. I love you,\" Rob said simply, his heart breaking just a little bit more with her teasing. He almost insisted but realised this was not the time or the place to discuss his true feelings. He wondered if there would ever be a right time or place, or if it was better to let her go to another and maintain the relationship they had as best as possible.\n\nRob held her close as she made her apologies and congratulations to Jack and Dusty, enjoying the warmth and feel of her softness against him. All too soon Stephen arrived to take her back to her rooms, and he watched them go, his thoughts and emotions still churning.\n\nDorothea could see the turmoil in Rob and she considered the situation. As a rule, she didn't like to meddle too much in the affairs of Masters but she had been invited into this affair by Bella and the Masters who loved her. Perhaps it was time to stop just listening and asking questions to make them all think about possibilities and consequences of their actions and speak her mind.\n\n\"Come dance with me while I still have a little energy left, Mater Rob.\" It was a statement rather than a question, and he dutifully rose to his feet and guided her onto the dance floor.\n\n*****\n\nThe intricately delicate body harness was difficult for Stephen to help remove as Bella undressed. He became frustrated with the tiny bejewelled buckles. \n\n\"It will be good to have you home where things are not so complicated,\" he growled.\n\n\"Back to normal clothes with many layers and shoes with heels,\" Bela laughed lightly. \"I must admit I won't miss the head gear.\" The harness and accessories finally fell free of her body. \"I would very much like to shower before going to bed, please,\" she asked hopefully, unsure if she would still face the punishment he had threatened earlier in the day.\n\n\"I think that is wise,\" Stephen agreed, his arm rising in the direction of the bathroom as if giving her directions. He watched as she walked and started pulling the body stocking from her shoulders. Shrugging out of his coat and tie, he shed his clothes, listening to the water begin to run in the other room and imagining her discarding the last piece of clothing. After the last week of waiting and worry, he desperately needed to connect with her on a physical level. He knew she was exhausted, but his desire was such that although he may not be able to use her as he otherwise might, even light play would go a long way to assuaging his need.\n\nBella was surprised when he stepped into the shower with her, his taller muscled body spraying the water into her face and soaking her hair. Turning her face up to his, he bent to give her one of those deep, leg popping, tingle inducing kisses that had been missing from her life recently. His arms wrapped around her tightly as he kissed her, and she felt as if she was melting under his intensity.\n\nWhile the water streamed over them, his hand began to work on the tired and aching muscles in her back. Bending low, he continued to rain kisses and little nibbles on her lips and jawline, extending down the side of her neck to the collarbone. Bella began to stroke his back gently, and he kissed her again with deep passion, their tongues entwining in a sensual dance. His hand ran down to cup her ass and lift her slightly, the kiss deepening and becoming a little more urgent.\n\nBella draped her hand over his shoulders more easily and let her fingers wind into and caress the hair at the nape of his neck. His lips once again skimmed down her throat to bite gently at the hollow where it met her shoulder. Her breathing quickened, and she let out a small purr as his mouth continued down her shoulder line.",
        "\"I need you,\" he groaned, placing her back on her feet and guiding her hand to his hard cock. It was an admission of weakness he could make to no other, but here with this woman, the words were humiliatingly true. Her fingers dancing erotically around his shaft and over the head of his cock, making him groan and bite into her shoulder again. \n\nBella whimpered softly, her hand still working the turgid flesh with delicate movements as he kissed her again, possessing her mouth. The kiss seemed to last a lifetime, his hands exploring her body, one caressing and teasing at breast and nipple while the other delved between her legs to part the lips of her cunt. She shivered as if jolted as his fingers pressed against her clit briefly. She lifted her free hand to cup his heavy balls as she continued to slide the other along his hard shaft. Unrelenting in his possession of her mouth, she mewled when his fingers entered her and began pumping, his thumb firmly against her clit. \n\nStephen savoured the sound she made and the feeling of her small body against his. Not wanting to peak too soon, he pushed her gently back against the wall of the shower and with his free hand raised her hands above her head, leaving his cock to press against her belly. He stared down into her eyes as she edged closer to the edge of her climax. \n\n\"Please. Master,\" she panted in staccato, \"Please. May. I. Cum. Master.\" Her voice as shaky as her legs had become.\n\n\"No,\" he said simply and pulled his hand away, enjoying her sob of disbelief. \n\nShe drew a deep breath, trying to stem the tide of need she felt and looked up at him, her eyes glazed with need. She watched as he smirked at her and lifted his hands to her breasts. Palming them roughly and narrowing his focus until he caught the nipples between fingers and thumb.\n\n\"I have given into your demands, your needs and your wants too much over the last few months. It is time a Master took you back in hand and reminded you of your place. I am not Rob or Charles, who will give into your little girl ways, nor am I a new Master, who must get to know your needs and wants.\" He twisted her nipples then, making her cry out. \"I know exactly what you need, I know your talents and charms and I also know your failings and foibles. I know you, Bella,\" he said harshly. \"I need you, and I want you, but I won't share you and I won't wait forever for you to realise that.\" His mouth descended upon hers, claiming another cry of pain as he twisted her nipples cruelly.\n\nBella's brain exploded with the intensity of his words and the pain that combined to push her over the edge, and she came hard, her knees buckling as spasms shook her. Only with Mel had she ever come like that, heat, pain and the intensity of his words. Stephen let her slide slowly to the floor, shocked that his words combined with her heat and pain had elicited such a reaction in her. He stood looking down on her, shielding her from the spray of the shower which rained down his back. Watching her and considering what had just occurred, he was surprised to see her recover enough to kneel up and reach out for his cock.\n\nWanting nothing more than to please the man before her now, she went through her ritual of greeting his cock with kisses before parting her lips and snaking her tongue out around the head alone. His groan of pleasure sang in her ears, and she spent long moments licking, kissing, and nibbling at the shaft before returning to suck the head of his cock into her mouth. She loved the feel of hot flesh on her tongue, and she began working up and down the shaft, taking more and more of him into the warm cavern of her mouth. Feeling him bump against the back of her throat, she moaned, letting the vibrations run through him.\n\nShe was rewarded with the feeling of his hands tangling in her hair and the slight pump of his hips that told her that he needed more from her. Her hand went up to massage the huge heavy balls hanging below, and she swallowed around the tip of his cock, easing its way deeper into her. Feeling the portal opening to him, he tightened his grip on her hair and began to pump into her mouth. The suctioning gurgle of the movements were accompanied by his deep groans and he closed his eyes, enjoying the sensations of fucking her mouth.\n\nIt was too soon Stephen realised. This night was about his reclaiming of her, and he did not want to finish like this tonight. He pulled from her mouth and took a half step back breathing hard. Long strands of spittle hung heavily between his cock and her still open lips, and he had to gird himself against the need he had to plunge his cock back between the soft pink opening of her mouth. Leaning forward, she flicked her tongue at his balls, bending her head to be directly under them as they hung beneath his rock hard cock.\n\nIt was too much for Stephen, and he drove his fingers back into her hair and pulled her upright, claiming her cries with deep plundering kisses. In a swift movement, he moved his hands to her ass and picked her up, impaling her on his shaft without ever breaking the kiss. He swallowed each noise she made as if hungry for her cries of pain and pleasure. He moved in little thrusts as his fingers delved between her cheeks to the dark star of her anus.\n\nBalancing with some difficulty, he reached out blindly for the soap dish and covered his hand before returning it to her ass. He felt her using her arms and thigh muscles to fuck him as he played with her ass, readying it for his final assault on her body. Her mewls and cries echoed in the bathroom as he slipped first one then two fingers into her tightest hole, feeling his cock through the thin membrane and the added sensations his fingers gave him.\n\nHe gritted his teeth against his growing climax and lifted her from his cock, turning her and bending her forward to grip the edge of the small shower seat. Slapping her ass hard and receiving her answering squeal, he pumped his cock several times with a soapy hand before directing it at its target. Slapping her ass again and leaving a large red handprint, he parted her cheeks and pushed the head of his cock into her.\n\n\"Fuck!\" he groaned the drawn out word in a rumbling bass counterpoint to her high-pitched cries. He continued to force more and more inside her until his balls rested against her hot sticky cunt. \"Fuck,\" he groaned again as he pulled out to ram back inside her. He could feel her trembling already. \"Such a fucking hot pain slut,\" he groaned, knowing he could not hold out very long as he began to fuck her hard and fast. His hands went to rest on her breasts gripping them hard, making her cry even harder at his treatment of her body. \n\nBella could feel it coming long before it hit her. She was floating on pure endorphins when her body started to almost convulse with the strength of her orgasm. Pain and pleasure melded but it was more than that, her mind was lost in the sensations, and she couldn't question why or how, just that it was more.\n\nThe body he held so tightly as he came went slack beneath him. While she still twitched and jerked, he knew she had passed out, and he worried he had pushed her too hard after such an exhausting day. Despite his own trembling limbs, he picked her up and strode from the shower, grabbing a towel on his way and laid her on the comforter of the bed. Drying her quickly, he wrapped the towel around his waist and stroked her face. She was out cold, but her breathing was no longer ragged, and her body had ceased its twitching spasms.\n\nReturning to the bathroom to shut off the shower, he dried himself properly and, rearranging the covers, he placed Bella into bed, sliding in beside her. Lying on his back, he pulled her to his side, wrapping his arms around her and listening to her breathing. Tonight was the first step in making her realise she belong to him, and the sooner she came to terms with that, the better for everyone. He knew it would not be so simple, but he had been serious when he had spoken earlier. He did not like to share her and would not wait forever for her to realise they were meant to be."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "master",
        "slave",
        "ponygirl",
        "competition"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/possessing-bella-ch-19"
}