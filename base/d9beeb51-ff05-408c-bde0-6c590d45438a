{
    "title": "Amy's Anal Adventure with Alice Ch. 01",
    "pages": [
        "*Author's note: I know this is long, but I like character development. I hope you will too.\n\n*****\n\nAmy and Todd had been together since Freshman year in college, now, two years later, Amy was pretty sure they'd get married once they were done with school. They were still very much in love two years after their romance began. Amy loved Todd and he loved her right back. They had similar interests, and overall just loved being in each other's company.\n\nAmy and Todd were studying in his room, on his bed, but Amy couldn't concentrate, she knew Todd's birthday was in a week and she couldn't think of what to get for him. Every time she asked he gave the same answer ' you don't need to get me a gift babe.' Such a guy thing to say, but it was probably true, if Todd wanted something, which was rare, he'd ask his parents and poof, there it would appear. Todd's family was well funded, he was doing well studying pre-med, so his parents were proud of him. They didn't want him wanting anything so they took care of any need he had.\n\nAmy came from a household were money was always tight. Her father worked two jobs just to pay the bills, put food on the table for Amy, her sister, and her mother. Luckily, Amy was able to get enough scholarships and student loans to cover the cost of college. She worked as a waitress to pay for other expenses like her books and clothes, etc. She knew she didn't have much money to spend on Todd, but it was his twenty-first birthday for God's sake, she had to give him something he wanted. Amy wasn't the best student, she did her best for most of her academic career to achieve B's and C's, that is, until she met Todd. For some unknown reason, he worked with her for about an hour and he understood the way she learned. He was able to teach her how to study for tests so that she was no longer nervous about them, instead confident. He taught her how to organize papers and writing prompts so that she would do well. He brought her from an average student, to the top of her Journalism class.\n\nFinally, she had had enough of her wandering thoughts. She sighed and as soon as the noise escaped her lips, Todd looked up from his organic chemistry reading. \n\nShe looked at him and said \"Baby, what do you want for your birthday? I know It's silly, but until I have it sorted out in my head I cannot concentrate.\"\n\nHe grinned at her and looked back down \"Aim, I told you before, you don't need to give me anything, I'm happy with you and that's enough for me.\" Then, he looked back down at his papers and continued reading.\n\n\"Ugh,\" she groaned. \"you're so frustrating sometimes, you know that? There must be something I can give you, even if it's small, anything, please, you've done so much for me.\"\n\nTodd grinned, \"Anything? Really? Hmmmm, well, there is one thing.\"\n\nAmy looked at him a bit puzzled and then asked the obvious question, \"Ok, what is it?\"\n\nTodd didn't look up at her, but she could see his 'evil grin' emerge on his face 'Well, I've always wanted to take your ass.\"\n\nAmy wasn't drinking anything and still thought she might choke. She did know that Todd had always wanted to try to take her anal virginity. He had stuck his finger in her butt while they were having sex before, and she liked the feeling of that. So much in fact that if she knew they were going to have sex she'd clean up really well with a finger in the shower sliding up and down in her ass to make sure she was nice and clean for his finger or his thumb, whichever he used at the time. She actually got really horny a few times that she was cleaning up in the shower and slid her finger up there, she'd start rubbing her clit and nearly came right there in the ladies shower in her dorm. There was once when he tried to put two fingers, but it hurt so she asked him to go down to one. Maybe it was because she wasn't quite ready yet, she wasn't sure. \n\nAmy saw Todd during orientation day, literally her first day at school. She didn't expect to meet the person she figured she'd marry on her first day. He wasn't the most athletic guy, he had a tummy, but the way he looked and his kind smile, she couldn't stop looking. After she picked up her books at the bookstore, she was walking to her dorm, not paying attention, she walked right into him as he was making his way into the bookstore, funny enough he was actually trying to make sure she didn't hit him, so she wouldn't be hurt, but he miscalculated her step. He chuckled when she turned beat red and her books flew in every direction. He helped her up and helped her pick up the books and started talking to her, so much so, that he walked her back to her dorm and had to walk all the way back to the bookstore, he didn't mind because he knew right there he loved her.\n\nAmy was small, she was only 5 foot 4 inches compared to Todd's 6 feet. Her skin was a pale white and she had chestnut brown hair and green eyes. Todd, who stood above her, even in heels, had dirty blonde hair and blue eyes, she always thought he had the kindest eyes. They loved old movies, they loved to play Xbox together, and she swore he let her kill him in Call of Duty and Halo multiplayer. She was pretty sure he loved the way she stuck her tongue out between her teeth and twisted the controller in the direction she wanted her player to move, and she was right, he loved it all.\n\nAmy knew Todd didn't want to hurt her, and he could see her wrestling with his revelation of what he wanted for his birthday. \"Aims, forget it, I don't want you worrying about anything, it's fine. I've got everything I need right here. Ok? Seriously, let's not make a thing of this.\"\n\nShe continued to look as though she was thinking it through and working out what her response would be. She finally looked up and said \"umm, I don't know if I can... I mean I could try, I don't know babe, I mean, um, errr, I don't know if it'll hurt too much, maybe, ok, maybe.\"\n\nTodd got up, went to her and held her and said \"Forget I said anything, let's just have a good day together and we'll get ice cream or something.\" \n\nThe funny thing, she thought, was that he meant it too. He didn't want her to worry, and he loved ice cream, so he actually would have been fine doing just that. Amy couldn't stop thinking about it, she loved giving herself to him in every way she could, this was just one thing that made her nervous, but she had a plan. After they finished studying, they made out for a bit and she and Todd walked back to her room. Todd left her once she was safely inside and went back to get some sleep, Amy flopped down onto her bed face first. She wanted to cry, she loved Todd and wanted to give him this. She sobbed and hugged her pillow, she waited for Alice, her roommate, to get back to the room.\n\nAmy had started to drift off to sleep when she heard the door open and close and her roommate, Alice dropped onto her own bed. Alice looked over and said \"what's new with you Donna Reed?\", her nickname for Amy as she thought Amy had the perfect life with the perfect boyfriend. Where Amy's family worked hard and loved she and Todd to pieces, Alice was a disappointment to her family. She wasn't following in the family tradition of becoming a lawyer, she wanted to work on TV as a news writer. She had tattoos and a punkish look of which her family didn't approve, and, worst of all, according to her family, she was bisexual. Her very conservative family could get past the tattoos, the clothes that they figured was a phase, but the fact that she loved women sometimes more than men, that they could not look past and so she rebelled against the family Attorney business since she knew she'd never be truly welcome. She'd never see her name up on the wall. Most of all, she never wanted to be with people who didn't accept her for who she is.\n\nWhen Amy looked up Alice could see that she was upset, she was a bit taken a back but offered, 'hey Amy, I'm sorry, you know how I joke around, I'm sorry, what's wrong?\" She looked at her roommate who she really liked as a sister who wasn't saying a word. She had that look of 'I can't say it' on her face.\n\n\"Is it Todd?\" Alice asked, figuring that this is the most upset she'd seen her roommate of two years ever, it must be serious.\n\nAmy nodded and held her hands over her face and whimpered.\n\n\"Did you guys break up?\" Alice asked, hopeful that wasn't the case, but it was worth a shot.\n\n\"No, it's Todd's birthday next week\" Amy sobbed into her palms\n\n\"Err, ok, and that's bad?\" Alice now had no clue what was wrong until she remembered how obsessive her roommate is about finding 'the perfect gift' and for Todd, that could be a tough call, the guy had everything. \n\n\"No, it's what he wants for his birthday.\" again Amy sobbed. Alice could see her mascara running down her face.\n\nAlice thought 'he can't want something that she can't afford, he'd never do that to her, he knows her family's financial situation.' \n\n\"Amy, what is it that he's asking for that's making you this upset?\" Alice asked her.\n\n\"He wants my anal cherry, he said he was kidding and he'd be fine with ice cream instead, but he's never asked for anything from me. How can I deny him this?!\" She muttered as her hands finally dropped from her face.\n\nIt took Alice a minute to decipher exactly what Amy said through the hands covering her face, hyperventilating, and sobbing, but in the end she was pretty sure she understood. \n\n\"Oh, is that all? I thought you guys broke up or had a huge fight, geez Aim, no one died, what's the big deal?\" Alice asked.\n\n\"The big deal? The big deal?!\" Amy cried out in shock. \"I've never done that before! I don't really want to, I'm afraid it'll hurt\" Amy started to cry again.\n\n\"Hey, hey now, it's not that bad, I can tell you how to get warmed up, so you'll be fine. Relax, I love anal now, there are days I prefer it.\" Alice tried to comfort her.\n\n\"Really? Amy stopped crying.\n\n\"Sure, I'll tell you how to get comfortable with it, and you'll be fine.\" Alice assured her again.\n\n\"Could, well, could you, um, you know, help me? Like, do it with me?\" Amy asked.\n\nAlice knew Amy was straight. Sure, they'd shared a kiss, a fondled breast and butt cheek after a drink or two, but this was very different. \n\n\"Amy, you love Todd and...\" Alice began but was cut off by Amy.\n\n\"I do, I love him with every part of me, but I've always loved you Alice. You've always been here for me whenever I've needed you. I've been curious about doing more with girls for a long time. Whenever you and I would start cuddling or touching each other, you'd break it off. I figured I was doing something wrong, or maybe it's because I like guys more than girls.\" Amy confessed to her roommate.\n\n\"Oh wow, this is a lot. No, I didn't back away because you were doing something wrong. I backed away so that I wouldn't push you. I knew you loved Todd, and well, I didn't want to jeopardize that. Honestly, I didn't trust myself not to want more. I didn't think we'd have a relationship like you and Todd do, but I would have loved to do more with you.\" Alice spoke softly to Amy, making her own confession of sorts. \n\nThen, she continued \"Amy, if you like, I'll help you with this. By the time his birthday comes around, you'll be an anal pro. There may be times that you'll want an anal orgasm instead.\"\n\nAmy didn't see how that could possibly happen, but she trusted Alice just as much as she trusted Todd. They'd never hurt her, lied to her, or tried to deceive her. She smiled and calmed down knowing that her friend would help her.\n\n\"How do we start? When can we start?\" Amy asked inquisitively.\n\n\"We can start tonight if you like.\" Alice smiled. \"We'll start slow, and take it one step at a time. You have to trust me, I promise not to move any faster than what you say you can handle. Deal?\" She asked.\n\n\"Deal. Teach me, teacher. What's my first lesson?\" Amy sat up on her bed and perked up. Alice swore she saw Amy's breasts bounce and nipples harden through her shirt and bra when she sat up. Alice melted a bit knowing that she'd finally be able to touch Amy in the way she'd always wanted to, but didn't want to freak her out. Now, she salivate with the chance to touch Amy in the most intimate of places.\n\n\"OK, then, get up.\" Alice commanded.\n\n\"Whe..where are we going?\" Amy asked curiously.\n\n\"To get cleaned up.\" Alice said grabbing towels, face cloths, soap, and shampoo.\n\nAmy and Alice both undressed and slipped into bathrobes and made their way down the hall to the shower. There were shower stalls on both sides of the room and the had a door and curtain for privacy. Inside there was a bench for placing personal items as well as towels and hooks for clothes. Amy started into the first stall on the left. As she did, Alice was right behind her and looked surprised as Amy was closing the door. \n\n\"Are you coming in my shower with me?\" Amy asked with a puzzled, almost innocent look on her face.\n\n\"With all that we're about to do, and you're going to get modest with the shower.\" Alice grinned.\n\n\"Ahh, good point.\" Amy agreed and stepped aside to allow Alice entry into her shower stall.\n\nThey both smiled at one another as they put their personal items down and started to take off their robes. Amy notice that there was an odd object mixed in with Alice's things. \n\n\"What is that?\" Amy asked.\n\n\"The big thing with anal is being clean and being relaxed. This little ball enema gets you clean on the inside, so there are no worries. Don't worry, it won't hurt or anything, promise.\" Alice smiled with her explanation looking over at Amy's body as her robe slipped from her shoulders revealing her pale skin and perky breasts which were just the right B cup size for Alice. \n\nShe loved how the curve of Amy's breast almost made that tear drop shape from the profile, with gorgeous nipples protruding from the tips. Alice eyed her up and down with out making it seem too obvious. Amy was smaller than she, with small features, her legs were cleanly shaven and shapely, Alice loved the way her legs stopped and the curve of her ass began, it just bumped out, curved around and connected with the small of her back in an arch. Her hair was down and spilled from her neck down to her shoulders to almost the middle of her back. Alice wanted to throw herself at Amy, but thought better of that idea. She removed her own robe, she wasn't as pale as Amy, her breasts were larger and her hair was darker, and she was an inch or two taller, but, like Amy, she was clean shaven from the waist down. Alice picked up everything and headed to the shower, turning it on so that the water would be warm for her friend.\n\n\"Are you ready Amy?\" Alice's voice changed to a very sultry and calm voice, one that Amy wasn't sure she'd ever heard before. She was drawn to her roommate's call, like a ship to the Sirens. She nodded slightly and padded over to the shower where her friend was waiting for her with her hand in the water to ensure that the temperature was just right. Amy's cheeks were flushed, a little excited, a little nervous, and a little self-conscious of being so naked and exposed in front of who she would consider to be her best friend at school, but she continued to walk forward until the warm water cascaded down her back, dampening her hair. Alice loved the way the water glistened off of her skin and she was thankful that they were the only two people in the shower room. Before Alice ducked into the water herself she looked at the lock on the stall door, just to make sure it was closed completely.\n\nAlice entered the water with Amy and the skin of their arms, their legs, and their breasts brushed against one another. Both girls quivered at the electric feeling that coursed through their bodies as they touched. Alice made the first move, her hands raised up and rubbed Amy's arms as she leaned forward and gently kissed Amy's lips. \n\n\"Don't be nervous, ok? I think we'll both enjoy this and we know where we stand, everything is out there, no surprises. Ok?\" Alice comforted her roommate. \n\nAmy nodded in response and licked her lips, and pushed herself forward kissing her friend on the lips hard and opening her mouth, her tongue pushed out and connected with Alice's. Alice pulled her close so their bodies pressed together, and Amy melted into her arms as they kissed. Alice let her hands fall down Amy's back and rest on the cheeks of her bottom, she lifted the fleshy globes and separated them, pulling Amy's ass apart, the warm water streaming down between her cheeks, washing over Amy's tight hole and teasing the very bottom of her pussy. Amy gasped into Alice's mouth and moaned a little as Alice's hands massaged her cheeks. Realizing that she too could touch, Amy rubbed her hands up and down Alice's back, each time exploring further down Alice's body. Alice moaned and Amy could feel her mouth turn up into a smile as they continued to kiss, their tongue's dancing with one another. Amy couldn't believe how nice Alice's mouth tasted.\n\nAlice reached down, breaking their kiss for a moment, grabbing the soap and squeezing it right between their bodies, then giving her body a little shake against Amy, spreading the soap around between them, making their bodies even more slippery. Alice put more soap into her hand and rubbed it down Amy's back and between her cheeks, grazing ever so lightly over the tight opening to her bottom. Amy gasped and then relaxed remembering that she needs to relax. Alice rubbed her hands up and down between Amy's cheeks, getting them very sudsy. Amy pushed her butt out into Alice's hands. Alice, feeling Amy push into her hands smiled and ran her finger up and down Amy's ass, paying special attention to slow down over the entrance to her rear. Then, her hands wandered slightly down to the lips of Amy's pussy. As she started to touch and rub, Amy shot up.\n\n\"Wait, am I cheating on Todd? I love him, I don't want to cheat on him.\" Amy looked a bit worried again. \n\nAlice went back to stroking Amy's back \"Hey, you're not doing this against Todd, you're doing this for Todd. We're doing this so that you'll have a more enjoyable experience with him and so you'll want to have anal sex again. Instead, we could do nothing, you'd be nervous and I would hate for your hand for him to have a negative experience an then you don't ever want to do it again. \n\nAmy once again nodded and settled back into Alice's hands which began to rub her up and down her back again. Alice stood up and let Amy bend over more. Alice moved the shower head so that Amy wouldn't be doused with water. She moved behind Amy and bent down so that she was eye level with Amy's pussy and ass, all laid out in front of her. Finally, after more than a year, she could finally touch Amy like she really wanted to. In the back of her mind Alice did wonder what would happen when this was done, once Todd was able to take Amy's ass and Amy liking it. Would Alice be thrown aside to find a new lover? She didn't think that either Todd or Amy would do that to her. Todd was always nice to her, and she did think he was cute, for a guy. She'd have to take a chance on this and hoped that she wouldn't feel jealous at the end.\n\n\"Alice? Am I ok back there? You're not doing anything, are you ok?\" Amy asked in her self-conscious voice, and turned her head to look behind her.\n\nAlice, emerging from her inner thoughts looked up into Amy's gorgeous pussy and her ass, which Amy had started to part with her hand, exposing her pink entrance to her bottom and the lips of her pussy just barely starting to part, revealing the dark tunnel. She smiled and met Amy's eyes.\n\n\"Oh my god Amy, you're gorgeous back here, every inch of you. I was thinking and just staring at how beautiful you are\" Alice smiled back at Amy's staring eyes. \n\nAmy looked forward again and Alice began by sliding her hand up Amy's thigh until it reached her pussy. She let her hand rub back and forth over the skin covering Amy's clit before leaning forward to taste her for the first time. Her tongue just making its way between her lips, she heard Amy gasp and moan as Alice's tongue touched her in her most intimate of places. Alice then slowly pushed her tongue into Amy, she was a bit mesmerized by how sweet her roommate tasted. She could have spent all day here, with her mouth licking and tasting her friend. She reached up and spread Amy's butt cheeks, she looked up as she licked and saw Amy's tight entrance part just slightly. She felt and heard Amy moan. Alice soaped up her hand and rubbed her thumb over Amy's butt hole, she pressed slightly, but didn't enter her. She could see Amy reaching down to grab her own breast with her hands and pinching her nipple. Alice's tongue pressed further into Amy and Amy's body began to rock backward, pressing her bottom into Alice's face. Alice loved feeling Amy's bottom press against her face, her nose pressed into her taught rear, she could breath in all of Amy's scent. Her tongue immediately, almost without her knowing, left Amy's pussy, and flicked over the tight skin of her butt hole. Amy breathed in sharply and began to moan as Alice pressed her tongue into her butt.",
        "Amy couldn't believe what she was feeling. She was initially nervous about being with a girl, nervous that she was cheating on Todd. Once Alice started to touch her softly, she just melted away, right into Alice's hands. Then, of course, there was her mouth on her pussy. She thought to herself, 'oh my god, her tongue is in me, it's going so deep, and I want it so much!' She loved it when Todd went down on her, and he was good at it, but this was like taking good and exploding it up to mind blowing. Alice knew where to put her tongue, she knew how to take it out and flick her clit before diving right back between her folds. When Alice started to rub her butt, she like it, she wasn't sure if Alice meant to enter her bottom right there, but was happy when she put pressure and rubbed. Amy didn't have to think about starting to rock back and forth into Alice's face, it just happened naturally, and when Alice removed her tongue and started licking her butt hole, she couldn't believe the feeling of electricity that felt like it was flowing through her. Todd had wanted to rim her bottom before, but she was always afraid that he would get grossed out or something, so she never let him, something that she thought she would have to change.\n\nAlice slid her tongue in and out of Amy's tight entrance a few times while rubbing her clit. She heard Amy's moans become louder and her body started to buck up and down. She knew she was getting Amy close to cumming. So, she knew she had to stand up and start the process they were meant to complete in the shower, as much as she wanted to make Amy cum in her mouth. \n\n\"Ok, baby,\" Alice said standing up, hoping the term of affection wouldn't bother her friend. \"Time to get cleaned up and ready, we'll have much more of this back in the privacy of our room where we can be much louder.\" Alice smiled.\n\n\"Umm.. \" Amy seemed worried. Alice was ready with a response.\n\n\"Don't worry, we'll go slow. Now, just stay exactly how you are, though you may want to bend a little further over, like you're going to touch your toes. Ok? Then, I'm going to fill the bulb up with nice warm water. It may feel, odd, but it won't hurt. Tell you what, you can do me afterward, ok?\" Alice stated.\n\nAmy relaxed and was gaining the confidence in her roommate that she wouldn't hurt her. So, she did what she was told, she bent over as far as she could. She was so turned on from all of the licking and touching that happened before, she thought anything would feel good at this point, anything could probably just slip right in she was so wet, both of her holes were wet. This wasn't something that Amy was used to, but she really liked the feeling. \n\nAlice watched her friend bend over at the waist. She was tempted to get back on her knees and suck on her pussy and tongue her butt again, but she gained her self control and did what she needed to do. She took the bulb from her pile of things outside of the shower, took the top off of it and let the water fill it. Then, she placed the nozzle back on and put it in her mouth to get it nice and wet. She felt so excited to penetrate her friend's ass with the enema bulb. Alice tried to keep her composure as she lowered her hand to Amy's pussy and began to rub between the folds of her lips, finding her clit again.\n\n\"Ok, now, nice and slow, here we go.\" Alice informed Amy.\n\nAmy started moaning from Alice rubbing her clit, she squeaked a few times in nervousness.\n\nAlice lowered the enema bulb to Amy's rear entrance and felt for the correct position with her finger over the tip of the nozzle before moving her finger away and letting the tip of the bulb slide into Amy's butt. She heard Amy moan as it slid in, then she squeezed the bulb gently releasing the water into Amy's rear. She continued to rub Amy's clit as she released and squeezed the bulb to get as much water into her as possible. When she could feel that the water was gone, she slowly withdrew the nozzle from Amy's ass. Alice felt Amy shiver a little as the enema was removed.\n\nAmy hadn't ever done anything like this, but Todd's finger and her finger had been in her ass before so she knew it wouldn't hurt. She rocked back and forth on her feet to the rhythm of Alice stroking her clit. Then, she felt Alice spread her butt apart and first a finger, then the nozzle. She was right it didn't hurt, it sort of felt good. Then, she felt the water start to rush into her rectum. Again, it didn't hurt, it actually just felt warm and a little soothing if she had to be honest. She felt a bit of a full feeling as the water finished entering her. Once it was done she stayed in the position Alice told her to. \n\n\"Ok baby, now you can stand up and start washing me. If you feel pressure, like you have to go, just step out the toilet. You'll need to make sure that the water is running clear from you and repeat the process until it does.\" Alice instructed her.\n\nAmy smiled and nodded. She grabbed the soap and poured it all over Alice's body with a bit of a giggle. She took a cloth and started to wash her roommate. She took special care when washing Alice's breasts, she loved how they were larger than hers. Alice was definitely a full C while Amy was a B cup at best. She lowered her head, opened her mouth, and placed it over Alice's left nipple. This was the first time she'd ever had another girl's breast in her mouth. She couldn't believe how soft it felt against her tongue, how it felt against her cheek and lips. She continued to scrub Alice's body while her mouth moved between both of Alice's breasts. \n\n\"I love you tits so much.\" Amy declared smiling at them, holding them up with her palms. \"I love sucking on them, and feeling them against me. It's like nothing I've ever felt before.\" Amy continued.\n\nAlice smiled at her \"I'm glad you approve.\"\n\nAmy moved the cloth to Alice's back and scrubbed up and down. Then, she dropped the cloth and added more soap to her hand before sliding her hand down between Alice's butt cheeks. She found her rear entrance immediately and poked and prodded a little. She let her fingers find the end of Alice's pussy and used two fingers to spread her open a bit. She heard Alice moan in response. \n\n\"I've never done anything with a girl, other than you Alice. So, if I do something wrong please tell me.\" Amy informed Alice.\n\n\"Just do what you would like and I'm sure I'll like it too. Just remember that we need to clean me out as well baby.\" Alice said and bent over so that Amy could move behind her and do everything she wanted. \n\nAmy took her cue and moved behind Alice. She got down on her knees as Alice had with her. She'd never been up close to someone else's pussy before. It was actually quite pretty. She took her hands and spread Alice's cheeks apart, opening her up for Amy to see. Alice was completely shaved from the waist down as well. Amy could see the tattoos on her sides and on her lower back. She always wondered if she should get a tattoo, but she didn't like the thought of pain. She watched the lips of Alice's pretty pussy part as she spread her hands and Alice's cheeks apart. Alice had nice skin, not quite as alabaster white as her own, but pretty darn close. She wasn't quite sure where to start or exactly what to do. However, Alice's words resonated in her head 'just do what you would like...' So, she leaned up and placed her tongue right against Alice's clit. She moved her tongue up and down the slit of her pussy and moved her thumb back toward Alice's butt hole. \n\nOnce her thumb was in place, she rubbed the pad of her thumb against Alice's tight hole. She could feel it opening up against her thumb as she moved it around. Amy heard Alice begin to moan. She flicked her tongue against Alice's pussy again before she moved her mouth away and slid her thumb into Alice's pussy a few times before removing it and replacing it with her tongue. She pushed her tongue deep into Alice, tasting her juices. She actually liked it, she was afraid she wouldn't like it and mess things up, but that was the opposite of the truth. Now, she took her thumb and pressed it against Alice's bum. She felt something push against her. She was a little startled until she looked up and saw that Alice was holding her cheek spread apart, she also was pushing her butt hole out, which felt to Amy like an invitation to move her thumb inward. So, Amy pushed her thumb into Alice's butt while continuing to thrust her tongue in and out of her pussy. \n\nAmy's senses were overloaded. She could taste more of Alice flowing down onto her tongue. She could feel the pressure of Alice's ass all around her thumb as she started to move it in and out. She watched her thumb fuck her friend's butt and she felt dazed, almost drunk with passion. \n\nAfter a while of this Alice looked back at her \"Baby...Amy, stop. Stop or I will cum and I don't want to right now. Amy stopped as her friend instructed. Alice bent over just as she had. She took the bulb and filled it with water and closed it, just as Amy had. She moved her hand to rub Alice's clit and slowly pushed the nozzle of the bulb inside of Alice's bottom. Once she was in all of the way, she squeezed gently and could feel the flow of water escape the nozzle into her friend's behind, cleaning her out. When she was finished, she removed the nozzle gently and they both soaped up, rinsed and got out of the shower. They dried quickly and used the toilet, then put their robes back on, gathered their things, washing everything quickly before heading to their room. \n\nAmy was the last one in, she shut and locked the door and tore her robe off, she pressed her lips to Alice's mouth and kissed her deeply as Alice removed her own robe and pulled Amy's body in toward her and they fell on Alice's bed. Their hands moved all over each other's bodies, exploring their breasts, their legs, their thighs, nothing was off limits. Amy was wet, so wet. She wanted Alice now, she wanted Alice to fuck her and make her go right over the edge. Alice got up quickly grabbed some toys and a bottle of lube (Amy assumed that's what the clear liquid was) and fell back into bed with Amy. \n\n\"Ok, now, before we get too excited, we need to remember that we're on a mission to get you used to anal sex with Todd.\" Alice explained.\n\n\"I know, I just can't believe how much I'm loving this. God, you feel so good.\" Amy declared and waited for the next instruction.\n\nAlice placed Amy down on her stomach and put a pillow under her middle, as she did Amy bent her wait up toward Alice spreading her legs and her ass. It felt, for Alice, that Amy was offering her most intimate parts of her body to her for their mutual pleasure.\n\nAmy laid back down on the pillow and parted her legs slightly. She felt Alice pull her hips up a little and felt Alice's breath on the back of her legs and her pussy. She felt her insides melt instantly with want, desire, and a touch of nervous excitement as to what lay in store for her. Alice began by licking the folds of her pussy, from the outside then toward the slit in the middle, parting them with her tongue like the soft petals of a flower. As she felt this, she felt an instantly cold liquid touch the top of her bottom and start to slide down the crack in her bum toward her rear entrance. She felt Alice's fingers stop the drips and coat her finger. Amy took a breath, she tried to relax and push her bottom out a bit, relaxing the hole that would inevitability be penetrated. To her surprise, Alice's finger slipped right in. She yipped in surprise, but not pain. Alice took her time with her bottom and it was so nice. Nothing was rushed, Amy just got used to the feeling of her friend's finger in her butt. After a minute or so Alice began to move her finger in and out of Amy's bottom. \n\n\"Wow, you're finger fucking my butt.\" Amy said with a moan and a smile.\n\nAlice continued to lick and breathed a 'uh huh' into Amy's pussy, grinned, and continue to delve into Amy's tunnel with gusto. As she continued to tongue Amy's pussy, she got a second finger lubed up and slipped it into Amy's ass, beside the second one, stretching Amy's hole out a little more. Amy moaned and sucked in air. \n\n\"Easy baby, just try to relax\" Alice told her.\n\n\"It's ok, I just needed a sec to get used to it. Please, don't stop, god please don't stop.\" Amy moaned breathily.\n\nAlice, still licking, eyed a dildo that was just a tiny bit larger than her two fingers. She slipped her fingers from Amy's bottom and slicked up the toy with lube. She used her palm and thumb to spread Amy's ass open and she watched as the toy spread Amy's tight butt hole open until finally yielding to the girth of the toy and making it's way inside of her. Alice let it sit in Amy's butt for a few moments before moving it at all, letting Amy's body get used to the feeling of the toy inside of her.\n\nAmy felt the second finger and gasped a bit, but then she inhaled deeply as she felt Alice's finger leave her bottom to be replaced by a larger toy. At first she felt Alice press it against her bottom, then she tried to do what Alice had done in the shower, pushing out with her butt. The lubrication and her loosening her hole seemed to really help. All of the sudden it was pushing down inside of her. The sensation was hard for her to take in all at once, thusly why she inhaled so sharply. It hurt, but only for a moment while her hole stretched out to accommodate the toy. Then she just felt a fullness in her bottom. She was glad that Alice gave her body some time to adjust before pulling the toy out of her butt and then pushing back in. Everything was slow and steady. Alice stopped licking her and sat up next to her and rubbed her clit with her fingers. Amy breathed taking it all in, being penetrated and having her clit rubbed. It all started to feel...good. Soon, Amy was moving her hips up and down to match the rhythm of the toy that Alice was fucking her with. \n\n\"Oh, yes, please, Alice. Alice? Fuck me, please.\" Amy cried\n\nAlice knew that once the toy was inside of Amy's bottom, she needed to watch her friend carefully. She wanted to know if something hurt so that she could back it off before it got too painful and made Amy frightened of anal. So, she sat up and put her fingers to Amy's clit and occasionally plunged a finger inside of her. She slowly moved the dildo up and down, in and out of Amy's butt. She wasn't sure where Amy was at with it, was she into it, or was she just going along with it? Alice was about to ask when Amy started moving her hips up and down to match the way Alice was fucking her with the toy. Soon she was able to put the toy almost all of the way inside of her. As she did this she heard Amy's cry of passion and asking her to fuck her. This drove Alice wild. She couldn't contain her passion. She slowly removed the dildo from Amy's ass and replaced it with a slightly bigger one that resembled what a normal cock would be like. Alice lubed it up and pressed it against Amy's rosebud, it took some massaging and more of her fingers rubbing Amy's clit, but eventually it slid into Amy's ass. She cried out again. Alice once again stopped to make sure that Amy's body could adjust to the thicker toy. Then, she slid her body underneath Amy's, putting them in a sixty-nine position. She lapped at Amy's pussy and watched as the larger cock fucked her friend's tight ass. She felt Amy spread her own legs, so Alice obliged and spread her legs wide, giving Amy access. Amy didn't miss a beat, her fingers found Alice's pussy and clit and began to work both. Alice started bucking up and down, she felt her orgasm stir from deep within her. She wasn't sure if she could hold on. The feeling of Amy touching her coupled with licking Amy's pussy and fucking her ass, it was all too much.\n\nAmy knew she was getting close herself. When the larger toy entered her bottom, she needed a few moments more to adjust, but she was very surprised how easily she took it. She never thought her butt would stretch like that without hurting. The fullness in her bottom increased substantially, and she could really feel it each time the toy moved in her butt hole. She could feel her orgasm welling up. She wanted to cum, but she wanted to last. When Alice positioned herself underneath Amy, she tried to help as much as possible, but she dared not move too much with the cock in her ass. \n\nSoon, both girls were moaning louder and louder. Amy plunged her fingers into Alice's pussy and rubbed her clit with her thumb. Alice fucked Amy's butt faster and faster with the toy while licking her pussy and flicking her clit with her tongue. \n\nIt seemed like the both cried out together. Alice was pretty sure Amy came first, she felt a rush of liquid deep inside of Amy as she came on Alice's tongue. Alice was all too happy to lap it up as she slowed the toy in Amy's ass. \n\nAmy felt like both of the entrances were being fucked at once and she couldn't contain it any longer, she exploded in orgasm, she wasn't totally sure if she squirted a bit when she came. Then she felt Alice's pussy clamp down on her fingers as she also came with Amy. She continued to rub Alice's clit until she knew Alice was spent. \n\nThey both withdrew their fingers, and Alice withdrew the toy from Amy's butt. Amy used her fingers to feel her gaping butt hole closing up and thought it was an odd feeling, feeling her own butt close, but she liked it.\n\nThey just laid in bed, holding one another for a few minutes before kissing each other deeply. \n\n\"Was I ok?\" Amy asked.\n\n\"Ok? Ok?!\" Alice exclaimed.\n\n\"No, you were amazing baby.\" Alice smiled and kissed her.\n\n\"I like it when you call me baby.\" Amy smiled.\n\n\"I hate to ask, but what now?\" Alice asked.\n\n\"Well, I hope Todd will understand and hope he'll be ok with it once...\" Amy started but was cut off.\n\n\"I mean, what about us.\" Alice interrupted.\n\n\"Oh, that what now. Well, would you be willing to help me with Todd?\" Amy asked.\n\n\"Of course Aim, I'll explain anything you need. I just...\" Alice started but Amy stopped her.\n\n\"Alice, I loved this, I want this again. But, I want you to HELP me with Todd.\" Amy stated.\n\n\"Yeah, I told you I'll explain...\" Alice continued.\n\n\"No, you're not getting it. I want you to be there when he's fucking me. I want your hands on my butt, I want your hands guiding him into my holes.\" Amy turned red and smiled.\n\n\"You want a threesome with me and you, and Todd?\" Alice asked a bit shocked.\n\n\"Oh, yes, that's exactly what I want...I want you both in my bed.. I want all of us fucking each other, touching each other, and kissing each other.\" Amy grinned a grin that Alice was pretty sure she hadn't seen before. She wondered what in god's name she had awoken in Amy. Whatever it was, she liked it. She just hoped Todd would.\n\n\"Oh I think we have to do that then baby.\" Alice grinned back and they started planning what to say and what they wanted to do\n\n~To be Continued"
    ],
    "authorname": "greywolf393",
    "tags": [
        "lesbian",
        "rimming",
        "toys",
        "anal",
        "lesbian sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/amys-anal-adventure-with-alice-ch-01"
}