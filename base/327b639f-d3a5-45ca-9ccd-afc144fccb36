{
    "title": "Jack Bauer Adjusts to Change",
    "pages": [
        "\"Mr. Bauer, I...\"\n\n\"Jack. Call me Jack.\"\n\n\"Yes, well, Jack! I can't say I'm pleased to have you coming back to work at UMMSDPU. I fought to...\"\n\n\"UMMSDPU? I'm sorry, I thought this was CTU---Counter Terrorism Unit?\"\n\n\"That just shows how out of touch you are. Since the President officially ended the War on, ah, well, you know the 'T' word, that awful word is no longer used within the Government or on any college campus. Our new title is, Understanding Misguided and Misunderstood Socially Disadvantaged Persons Unit or, UMMSDPU. Although that will probably change since the ACLU had filed suit over the use of the word, 'misguided' as being too pejorative.\"\n\n\"Now as I was saying, Mr. Bauer, ah, Jack, there are three reasons you are being reinstated. First, under the new civil service guidelines a federal employee cannot be dismissed from government service for any reason\u2014you're due back pay for the last two years, in fact, less of course the cost of the three sheep that were killed when you flew that airplane with the nuke on board out into the desert. Secondly, although I have it on good authority that you have violated the civil rights of an untold number of Misguided and Misunderstood Socially Disadvantaged Persons, or MMSDPs, remarkably none of them elected to press charges against you.\"\n\n\"That would be because they are all dead?\"\n\n\"Whatever. In addition, under the new government hiring guidelines for transsexual, transgendered or gay persons, such individuals must move to the top of the list for hiring.\"\n\n\"I'm pretty sure I don't fit any of those categories.\"\n\n\"Of course you do! It's clearly checked on your computer file. Now, as I was saying...\"\n\n\"Maybe Chloe could double check that file and...\"\n\n\"I'm sorry, Chloe is no longer employed here. It had always been assumed that she was in fact a lesbian and then after one of her subordinates came forward and confirmed that she was blatantly and I might add, disgustingly heterosexual, we had to let her go. Her dismissal is the only reason you got called. She works at the State Department now, they have plenty of room for heterosexuals. Under the new rigid quota system our head count is out of balance and we must replace a phony TTGP---transsexual, transgendered or gay person with the genuine article.\"\n\n\"I see.\"\n\n\"But I do not have to bring you in at your former rank; in fact you will start back at the bottom. You will report to Edgar.\"\n\n\"Edgar? Very well.\"\n\n\"You will only be on part time status. I have enrolled you in several programs to help you adjust to the way we do things around here. You will attend those programs on your own time.\"\n\n\"Programs?\"\n\n\"First, a one year Anger Management program.\"\n\n\"I'm not angry; my friends, well those who haven't been assassinated over the years, would say that I am really very calm, mild mannered and low key.\"\n\n\"Mr. Bauer you once shot a poor witness in the knee in a holding room!\"\n\n\"He wasn't really a witness, he was a known terrorist and he had information about a nuclear bomb set to go off within the hour...\"\n\n\"Did you even take the time to get to know that poor man? To understand his side of the story before you violated his civil rights?\"\n\n\"No, I needed him to talk, quickly. But I certainly wasn't angry with him, but maybe a little frustrated.\"\n\n\"And the time you violated Vice President McCain's anti-torture guidelines and cut that man's fingers off?\"\n\n\"He wasn't the VP then and the guidelines didn't exist but the man in question had information that helped us save Los Angeles.\"\n\n\"You are a relic! You're one of those that refuses to accept the Supreme Court decision regarding the renaming of the city we are in to the more secular and acceptable, Los Fienstein. And then there was the time you cut off that poor man's head.\"\n\n\"He was due to be executed anyway and I only removed his head after I killed him, I needed it to get back in with the narco-terrorist gang that...\"\n\n\"Don't you use that 'T' word in my presence!\"\n\n\"Yes ma'am.\"\n\n\"What about that poor misunderstood boy who you blew up at the airport?\"\n\n\"He was wearing an explosive vest and planned to participate in the killing of over sixty people by blowing himself up and he was hardly a boy. His leader was, however, about to execute a fifteen year old boy who was a friend of mine.\"\n\n\"It's always about you and your priorities, isn't it? It's a pattern of behavior that I find troubling. Even the Secretary of Defense, Secretary Boxer, agrees that your past actions raise deep concerns. You just don't seem to resolve conflict in a healthy manner. You will also be attending a seminar in conflict resolution.\"\n\n\"I always felt that I handled conflict pretty well, I mean, terrorists, excuse me, Misguided and Misunderstood Socially Disadvantaged Persons on American soil with nukes, biological weapons, nerve gas and such had chosen to enter into conflict with our country. I resolved that conflict.\"\n\n\"Yes, well, you also have been signed up for sensitivity training to help you deal with your obvious prejudices toward those who are, shall we say, 'different' than you are. It is a program to help expand your cultural and social conscience. It's put on my PETA and comes highly recommended by out National Security Director, Sheila Jackson Lee.\"\n\n\"Ah, ma'am, how do you prefer to be addressed?\"\n\n\"Director McKinney or Congresswoman McKinney will do just fine, thank you.\"\n\n\"Well, Director McKinney, I do have one concern; I noticed when I came in today that at least three people downstairs, apparently current employees of the Unit have a striking resemblance to known, ah, Misguided and Misunderstood Socially Disadvantaged Persons that were once at the top of our watch list.\"\n\n\"There you go again with your ingrained bigotry! The three gentlemen in question are part of the new exchange program that the President had mandated. We in turn sent three of our people to monitor the activities at the Misguided and Misunderstood Socially Disadvantaged Persons headquarters. Although, now that I think about it, our people haven't checked in in several weeks. It's all part of the new United Nations program entitled, It Takes a Village to Raise a Healthy Misguided and Misunderstood Socially Disadvantaged Person. Secretary General Clinton is very proud of the program.\"\n\n\"And the North Korean, Cuban and Iranian folks?\"\n\n\"President Clinton is just trying to get ahead of the game by expanding the program to include representatives from the Axis of Peoples Oppressed by the United States---APOUS. Now Mr. Bauer, two more things. You will not be allowed to carry firearms of any sort during your employment here. Well, actually, the Attorney General, Sara Brady, had mandated that no Federal employees---except those in the department of Education and at the EEOC---are allowed to be armed.\"\n\n\"We don't have guns?\"\n\n\"No, of course not! Furthermore, we've retired all of those obnoxious armored SUVs. All of our vehicles are light weight electric cars with a maximum speed of forty-five.\"\n\n\"Just so I understand the chain of command here, ma'am, you report to the district director and that is...?\n\n\"District Director Cindy Sheehan.\"\n\n\"Okay...you said there was one more thing?\"\n\n\"Macram\u00e9! You have been enrolled in a Macram\u00e9 class. We have a monthly contest. Last week the prize was an anthology of the movies of Michael Moore, or should I say, Secretary of Education Moore. Next month it's a signed edition of Secretary of State George Clooney's remarkable book on foreign policy.\"\n\n\"Do we still work pretty closely with the FBI?\"\n\n\"Oh heavens no! Under the Schumer-Feingold bill, we are forbidden from any contact with any other federal agencies, well, except for the Department of Housing and Human Services. Secretary Kaine West is such a talented artist, don't you think?\"\n\n\"And so, we can't talk to the CIA either about possible foreign threats?\"\n\n\"Unfortunately, no. Director Bellefonte is such a good friend of mine and I really miss our daily chats.\"\n\n\"NSA?\"\n\n\"There's no reason to really. They've been folded into a National Endowment for the Arts program and now produce some really exceptional artistic photo mosaics; there's a collection on display at the National Museum if you're interested.\"\n\n\"I'm sorry. I'm a little confused, how do we actually collect intelligence?\"\n\nWe read the key ACLU authorized intelligence sources at our disposal each and every day. That would include The New York Times, The Los Fienstein Times, The Boston Globe, the Nation, Slate and of course Wonkette and the Daily Kos---and of course we watch CNN and MSNBC. If it's not in one of those sources, it's just not important.\"\n\n\"Ummmm. Are there currently any threats I should be aware of that we're keeping an eye on?\"\n\n\"Of course not! If there were, our foreign exchange partners would have told us so.\"\n\n\"If a threat did arise, what is our protocol?\"\n\n\"Well the immediate priority would be an Environmental Impact Statement followed by an in depth review by the EEOC, CAIR, NAACP, NOW and of course NARAL and NAMBLA. Then after public hearings in the House and Senate, the 9th Circuit Court would rule. Then it would go to the United Nations General Assembly, followed by the Security Council. Then, assuming a unanimous vote with no abstentions, it would go to Health and Human Services to ensure that no contemplated action would negatively impact those living in public housing. Then, it would have to be reviewed by the Defense Department Procurement Office to ensure that any contracts required met all minority and women owned business mandates. Then the GAO would review it and there would be a thirty day open hearing to allow any whistle blowers to come forward.\"\n\n\"That could take years!\"\n\nExactly! But it's really a mute point since the War on the 'T' word is officially over. Do you have any other questions? I have a flag burning rally to get to.\"\n\n\"No ma'am. I'll go check in with my new boss.\"\n\n\"Hi Edgar.\"\n\n\"Jack, thank God you're back in charge---this place is totally f**ked up!\"\n\n\"I'm not in charge, Edgar, in fact I work for you. I am officially the junior person in the building.\"\n\n\"Well that's a load of cr*p!\"\n\n\"Not a problem, Edgar. Say, you look different. You've lost some weight. Have you been working out?\"\n\n\"I got tired of being the butt of jokes and a total dweeb. I work out every day and just got a black belt. I also joined a shooting club---Jesus, don't tell anyone, I'll have to go to Macram\u00e9 class again!\"\n\n\"Your wardrobe had definitely improved, nice haircut, s**t Edgar, if I didn't know better I'd swear you had a lady friend!\"\n\n\"Ah, Jack, that's kind of a sensitive issue, but, your old girl friend, the former SECDEF's daughter, we're, well...\"\n\n\"Not a problem, Edgar, we were over long ago.\"\n\n\"So Jack, do you want me to show you how the computers work?\"\n\n\"Has the system changed much in the last five years?\"\n\n\"Not really, Jack.\"\n\n\"Well since I designed it when I was the Director here, just bring me up to date on the changes.\"\n\n\"Before I do Jack, I need to show you something. Don't tell anybody but the source of this information is not on the ACLU approved intelligence list. What do you make of it?\"\n\nJack examined the data carefully. \"Edgar, it would appear that there is a constant stream of data between this office and every known terrorists, or, I mean, oh, f**k it, terrorist organization in the world including those crazy environmental wacko who burn BMWs. It looks as if the complete defensive plan for this installation and virtually every military base and nuclear facility in the country is posted on the Amazon web site. Oh, there's an interesting one, the travel itineraries of every government official all the way down to the mayoral level, along with their security protocols. Wait a minute! Those containers being off loaded in Oakland show clear signs of radiation leakage!\"\n\n\"Well, Jack that's because of the new Kennedy-Leahy bill; we're not allowed to violate the civil rights of shipping containers.\"\n\n\"Shipping containers don't have civil rights!\"\n\n\"They do now.\"\n\n\"Whose terminal is all this data coming from?\"\n\n\"Well, several Jack, but the real classified stuff is all streaming out of the, ah, the Director's computer.\"\n\n\"Is that what I think it is? Where did you get that footage, I thought we didn't have satellite access anymore!\"\n\n\"We don't. I hacked in to the security camera at the convenience store across the street then tied into the one of the 500,000 new red light cameras installed under the Durbin-Biden Amendment.\"\n\n\"What does it look like to you that those people are loading into that, \"Gore and Kerry in 2012\" bus?\"\n\n\"Canisters of nerve gas? Let me zoom in...there we are...yep! You can read the writing on the side: 'Danger, Nerve Gas. Disperse with Caution', damn! Another friggen' Environmental Impact study.\"\n\n\"Wait, Edgar, what the heck is that?\"\n\n\"That would appear to be people replacing the cheap cologne in all of the bathrooms at the Super Bowl site with some sort of aerosol biological agent. There's more stuff going on out there, do you want to see it?\"\n\n\"I don't have time for that, Edgar, you're just going to have to trust me.\"\n\n\"What are you going to do Jack? How can I help? You're going to save the world again, aren't you?\"\n\n\"No. I'm late for my Macram\u00e9 class. And under the new agreement between the government and the union, I could receive a reprimand for working longer than my allotted hours---I'm only a part time employee.\"\n\n\"Jesus Christ, Jack, you've got to be s**tting me! I can't believe it! You've changed! The world is depending on you! Tell me it isn't so!\"\n\n\"Yea, I was just f**king with you. By the way, what happened to the metal detectors at the front door?\"\n\n\"The director had them removed; there's no need for them since all guns are against the law everywhere in the country.\"\n\n\"That wasn't very smart.\" Jack said, retrieving his trusty automatic from under his jacket and shooting the six foreign exchange \"students\" in the center of their foreheads.\n\n\"Any one else you're not too sure of, Edgar?\"\n\n\"Yea, those two over there are definitely covert agents.\"\n\n\"Got it.\" Jack said, dispatching the two.\n\n\"Anyone else?\" Jack inquired.\n\n\"The ACLU monitor across from me?\"\n\n\"Done, hold on, I need to reload.\"\n\n\"Any more?\"\n\n\"Well, sure! She's running down the stairs right now preparing to give you a real tongue lashing.\" Edgar observed.\n\n\"Right!\" Jack said, spinning around and dispatching the director with a well placed center mass double tap, just for good measure.\n\n\"Anyone have any questions?\" Jack said to those who were still alive in the room.\n\n\"Good to have you back, Jack!\" The group replied almost in unison.\n\n\"Get to work! We have a nation to save.\" Jack replied.\n\n\"Who are you calling, Jack?\" Edgar asked, as Jack hit the speed dial on his cell phone.\n\n\"David Palmer, then Tony, then Michelle, you know, the old gang.\" Jack responded nonchalantly.\n\n\"But, but, Jack, there all dead!\" Edgar observed, wondering if Jack had both oars in the water.\n\n\"Wrong again, former fat boy! Now get off your ass and let's go violate some federal statutes.\"\n\n\"Can I carry a gun?\"\n\n\"Two or three, if you like, Edgar.\"\n\n\"F**ken \u2013A!\""
    ],
    "authorname": "Dinsmore",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/jack-bauer-adjusts-to-change"
}