{
    "title": "My Little Ventrue Pt. 08 Ch. 10",
    "pages": [
        "~~Beatrice~~\n\nDamien was a sexy fucker. Yeah, she knew he was built all lean and lithe, and he had the face and hair of a young girl's emo vampire crush. But seeing him give into his hunger -- caused by Fiona's blood she figured -- was fucking hypnotizing. The dude bounced his exhausted girlfriend on his dick until her giant tits were almost hitting her in the face, and she was mewling and whimpering, until Triss and Jen were both squirming as they watched.\n\nFiona collapsed on Damien's chest, and he hugged her tight as they came. Which earned a longing sigh from Jen.\n\n\"What's it like?\" Jen said.\n\nDamien, clutching his girlfriend as he slowly came down from his pleasure high, looked at Jen, something between pleasure and annoyance on his face. Probably the sorta face Triss often had, when Jen teased her during sex with Julias. It was a cute face, she had to admit. And Damien was kinda asking for some teasing, being caught mid-fuck in a nightclub.\n\n\"What's what like?\"\n\n\"Being the man, and draining a woman as you fuck her. Triss and I can't really speak to the experience. I mean, I've fucked plenty of kine while draining them, but it's not the same.\"\n\nDamien rolled his eyes, and held Fiona close to him, as if to protect her from them, and hide her body from their eyes. Heh, didn't matter now, not after seeing the curvy short stack bouncing on that dick like her life depended on it.\n\n\"It's... satisfying,\" he said.\n\nTriss laughed. \"Satisfying? That's it? Looked like you were enjoying the best thing in the world, dude. Maybe the better question is, what does it feel like to be inside a girl when she's getting Kissed?\"\n\nDamien glared at her, but she saw more of that half pleased look in his eyes. \"It's wonderful, ok?\"\n\nJen rolled her eyes, mirroring and mocking Damien. \"No details? No talk of... clenching, boiling heat, dripping juices, muscle spasms? Please, regale me.\"\n\n\"No.\"\n\n\"Ugh, you are such a bore.\"\n\nTriss shook her head. \"He was a bore. Now, he's sitting naked in a booth with his naked girlfriend, in public, fucking her and Kissing her, and...\" She leaned back and underneath the booth a bit to double check something. Confirmed. \"And, giving his naughty girl a spanking.\"\n\nJen moaned, and sighed. \"If you were Othello, you'd happily share every dirty detail with us.\"\n\n\"I'm not Othello.\" The Mekhet raised a hand, and stroked Fiona's back. She mewled into his neck, coming down from her orgasm high, and delighting in his touch like a lovesick puppy. Hard to tell if that meant anything, considering Fiona's personality, but maybe it did.\n\n\"True,\" Jen said, \"but now you're part of the... more active members of Dolareido's nightlife, and its Kindred. I give it another year, then you'll be inviting others for an audience to your lovemaking.\"\n\n\"He's not a warlock, Jen.\"\n\n\"He doesn't need to be a member of the Circle to enjoy putting on a spectacle.\" She grinned at the man, and licked her lips enticingly. \"And it was a spectacle. You're a gorgeous man, Damien. Young girls everywhere would swoon over you, if your face ever found its way into media.\"\n\nFiona nodded, though she kept her face hidden in his neck. It was pretty damn cute, especially cause her frizzy red hair rubbed into his chin.\n\n\"If you two insist on pestering me, can I ask a question?\"\n\n\"Shoot,\" Triss said.\n\n\"Did you two run into Jack and the others? They left not long ago.\"\n\nJennifer grinned. \"We did. Jack didn't look happy to see his mother with Jacob.\"\n\n\"Understandable.\"\n\nTriss frowned. \"How's that? Jacob is--\"\n\n\"It's not about Jacob. It's about Jack.\" The man sighed, leaned back in his seat, and stroked Fiona's back as she hugged him. Silly girl would fall asleep if he gave her the chance, even with the pulsing bass-heavy music in their ears. \"You know Jack suspects him of... everything, I suppose. And since you're here, making my life Hell, I should also ask: does he treat Samantha well?\"\n\nOh, that. Laughing, Triss and Jen shared glances before grinning at the man.\n\n\"She's here with him, isn't she?\" Triss said.\n\nJennifer nodded. \"Indeed. Samantha has been enjoying her time with the Circle. And, she's been enjoying her time with Jacob immensely. Intensely. Sort of like how Fiona seems to be enjoying yours.\" Grinning, she reached out and touched Fiona's hair, only for Damien to swat her hand away.\n\nDamien eyed Jen, but when he looked at Beatrice, it was different. The look said it all. He expected Triss to keep an eye on Samantha, to protect her, to do the right thing.\n\nShe smiled at him, pat the naked man on his shoulder, nodded, and got out of the booth. \"Come on Jen.\"\n\nJennifer gave Damien her sexy look, her 'if you and Fiona joined me I'd make Heaven look like a two-star hotel' look. But she was just playing, teasing and whatnot, the damn slut, and she slid out of the booth to join Triss. Of course, the two of them took a moment to look back at the pretty boy and the naked short stack still sitting on his dick, and grinned.\n\nThey moved on, and slid into the booth Jacob had found.\n\n\"They're a cute couple,\" Triss said as she and Jen got comfortable, taking the other side of Samantha and Jacob, who had Othello, Madison, and Aaron on the other.\n\n\"Yeah,\" Samantha said, \"I think so.\"\n\n\"Oh? Do you know about Damien's past?\" Jennifer asked.\n\n\"Only a little. My sire told me about Lucas, and what Damien did, attacking the tower and all that.\" She nodded to herself as she thought about something. \"I've seen Fiona a few times, and she seems full of life. Damien seems like the sort of man who needs that, like... like his life has been taken from him, right?\"\n\n\"You don't think he's a bit mature for her?\" Othello said. \"And not about the age difference. Age difference doesn't really affect Kindred, as I'm sure you've noticed.\" He gestured to the far, far older man beside Samantha. \"But, Damien's a pretty somber guy.\"\n\nSamantha shook her head. \"Sometimes opposites attract. Sometimes, the best relationships are when two people fill in the gaps for each other.\"\n\nThat was a nice sentiment, but Beatrice wasn't buying it. \"Eh, maybe. People need to have some kind of foundation to connect on. I have no idea how you and the boss are connecting, but I'm sure you have something.\" That was a lie. She had a clue. The two were adults; like, embraced at an adult age, and that affected how their brains worked. And they'd both lost, a lot.\n\nWhen the two were done fucking like animals, it was easy to imagine the two of them talking about their lives, and finding comfort in each other. Samantha would probably talk first, because her wounds were relatively new, and she was softer than Jacob. And once the woman's sweet heart penetrated Jacob's many, many, many masks, he might confide in her a grain of truth about him.\n\nJacob grinned subtly, hooked his arm around Samantha, and gently hugged her against him for a second. But he said nothing. He just smiled, and set a kiss on Samantha's ear.\n\nThere was something there, in his expression. So fucking damn hard to read without eyes, but something in his grin caught Triss's eye, and she raised a brow for a moment as she looked at the man. Maybe Damien wasn't too far off the mark, asking her to look after Samantha.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nBeatrice and Jen took to the streets in Devil's Corner. Triss made sure to wrap herself in the Discipline Face in the Crowd, so passing eyes glanced over her. Jen on the other hand, walked the street like she was looking for a client for the night. Still wearing her nightclub dress, she definitely looked the part. A few times, someone stopped their car and asked her how much. She politely declined.\n\n\"Getting harder to find people,\" Jen whispered to her.\n\n\"Yeah.\" Triss slid her jaw to the side, causing some of her crocodile teeth to click together. \"Makes things difficult.\"\n\n\"If the Prince finds out--\"\n\n\"I'm a lot more worried about that asshole Daniel. The sheriff is a cold fucker.\" She shrugged, and nodded toward an alley. \"There?\"\n\n\"We did that spot two weeks ago.\"\n\n\"Shit, you're right.\" She sighed heavy, but shrugged it off. No point in getting her hopes down yet. \"And besides, I'm sure the Prince and the sheriff know something is up. As long as we're careful, they won't mind.\"\n\n\"And if they told us we had to stop?\"\n\nTriss stopped and looked at her friend. Jen met her gaze, eyebrows furrowed. Sadness, mixed with determination maybe? At this point, Jen would follow Triss into whatever hell found them, but Triss knew Jen would have preferred she stop this insanity. And she knew Triss wasn't going to.\n\n\"Then I ask Black Blood for help dealing with them.\"\n\n\"You know he might actually do something, and it probably wouldn't be good.\"\n\n\"Maybe. He's got some weird rules he has to follow. Can't fuck with the city directly, I guess.\"\n\nJen rubbed her bare arms, pretending to be a weak fawn any hunting predator would love to rob, or rape. Serial killers weren't exactly common, but if Triss and Jen got lucky, they might find a kine royally fucked up like that. But so far, just rapists and muggers, kine that probably didn't exactly merit what Triss was going to do to them, but she couldn't afford to be picky.\n\n\"Either way,\" Triss continued, \"don't worry about them. People go missing from Dolareido all the time, the fuckers we don't care about.\"\n\n\"We don't, but someone else might.\"\n\nThat was always a possibility. Kine were dumb, but not so dumb that you could lower your guard; that's how hunters were made. If Kindred made a mistake, they could have a hundred, or even a thousand kine suddenly keeping an eye out for them, and who the fuck knew what might happen after that. Jacob, and even Garry warned her that kine were dangerous because they had this nasty habit of multiplying, and not in the procreative sense. More like, if you pissed off one kine, you could suddenly find yourself looking at the angry end of a mob.\n\nSo, vampires did things in shadows and darkness and shit, and now was no exception. Classic vampire shit, a combination of displays of power, but also trying to be secretive, so a thousand angry people with torches didn't show up at their door.\n\nBut in Dolareido, it wasn't a big concern anyhow. The Invictus and the Prince controlled the city, and that included the media. If some random human managed to get some footage of Beatrice abducting someone, and posted it to media, it would probably mysteriously disappear from the internet, while the person who posted it would find a Ventrue at their door, ready to do some memory wiping.\n\nOf course, that was just the concern over whether the Masquerade would be shattered. It wouldn't change that she'd be caught violating it, and someone would come have a strong chat with her. If she violated it too many times, Jacob himself would rip her damn head right off her shoulders, or the sheriff would tie her up and leave her for sunrise as a warning to everyone else. Probably not a fun way to die.\n\nJen and Triss weren't flying blind in their hunt. Aaron knew a lot more about Devil's Corner than Triss figured, and when she'd talked about sacrifices, he'd pointed her in some directions, like this one. He knew she was up to some dark shit, but after what happened, he and Othello were perfectly willing to help her without asking questions\n\nJen and Triss drifted into another part of town, and ended up behind some whore house. Say one thing for Dolareido, it was gender progressive, criminals included. Women were treated the same as men, and women did nasty, horrible shit, just as much as the men. Didn't matter if you had tits or a dick, anyone could be a giant fuckwad, and if you knew where to look, you could find them.\n\nSo when they found a woman with a gun, holding up a couple hookers at gunpoint, Triss and Jen smiled at each other.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nBack in the cave with Elen, Triss and Jen sat their new sacrifice down in front of the bowl. A weak-willed mugger was an easy target for Dominate, and Jen had no trouble turning her into a mindless sheep; for a little while, anyway. If it'd been Jack, he could have permanently fucked up her mind, and a few other minds besides, at the same time. But Jack's role with the Circle was done. She didn't want him even more buried in the shit she was getting into, and the kid had a big enough problem to deal with already.\n\nFirst step: summon Black Blood, and not with the sacrifice. Instead, she and Jen lit some candles, ensured the symbols drawn on the walls and floor were still good, and began the ritual. Beatrice sent vitae through her, and tapped into the part of her, the hidden muscle that could reach across the air and into the ether. And as the energy of life coursed out through her undead limbs, she held them up, and spoke:\n\n\"Black Blood. I summon you.\"\n\nBlack Blood came, in his usual style. First, the almost inaudible wails and cries of the dying, as if painful death was something that'd been cut into the spirit until he was literally scarred with the noise. Second, the presence of death, the odd, cold chill it sent through the spine. Third, the black ooze, or blood or whatever it was, thick and gross. It flowed from the cracks in the walls, the eyes of the carved skulls underneath the sacrifice bowl, and from holes in the ceiling and earth.\n\nBlack Blood surrounded them, his presence everywhere, and no matter how many times he and Triss had a talk, the insane overwhelming pressure of his aura was undeniable. It was fucking scary.\n\n\"Fresh blood tonight?\" the deep, almost soothing, mostly scary voice said in a southern drawl.\n\n\"Yeah.\" Triss grabbed the sacrifice, and pushed her toward Elen. They didn't know her name; made it easier. \"Can we try and keep the mess to a minimum this time?\"\n\nThe evil god of death and doom chuckled, and more of the black ooze seeped up into the bowl Elen hung over.\n\n\"Sure sweetheart. I'll try.\"\n\n\"Dears,\" Elen said, voice cracked, withered and dry. \"Do an old woman a favor and get her a glass of water, would you?\"\n\nJen winced, but didn't move. Of the three people--er, entities in the room, excluding Elen, Jen felt the most empathy for the old woman, but even she wasn't willing to entertain the delusional hag her strange requests. She didn't need water. Hell, the woman was so fucked in the head she never registered Black Blood's presence. The ooze flowed up off the floor, and pooled into the bowl under Elen's feet. Anyone else would have panicked to all fuck, screaming and kicking. Not Elen. She just hung there, like everyone was a-ok. Creepy, and weird.\n\nMore weird, was how it looked when Black Blood, or a piece of him or whatever, began to climb up the old woman's leg. Elen looked down at the creeping veins of black that inched up her loose skirt, and didn't frown or struggle or anything. She just looked at it, like noticing a rock on the road, before looking to the sacrifice standing in front of her.\n\n\"Are we carving up another one tonight, dears?\" she said.\n\nTriss forced down the wince. \"Yes, we are.\"\n\nEven as Black Blood crawled up her neck, and the black ooze began to press into her right ear and left nostril, Elen didn't react. If anything, she smiled, a tiny smile, like an old woman going through her typical daily routine she was comfortable with.\n\n\"Without my tools and my book, there's only so much I can do, dear.\" A bit of black slipped in between her lips. She didn't respond to it. Was she even aware of it? She had to be. Much as Elen's brain was permanently fucked, she had some awareness of her surroundings. A big hook skewering her wrists and holding her up? No big deal. But an alien death god thing oozing up into her mouth, nostrils, and brain? Fucking hell.\n\n\"Your tools are out of our reach,\" Jennifer said.\n\n\"Yeah. Locked up in the Prince's tower.\" Triss jumped up onto the edge of the bowl, unhooked the woman's thin wrists from the meat hook, and helped her down. A small chair waited for her, and Triss sat her in it. Then, she grabbed the brainwashed sacrifice, and put her on her knees in front of the old woman.\n\nThe veins in Elen's body swelled, like a dehydrated bodybuilder, and Triss shuddered as they bulged and squirmed. Black Blood was in her fucking veins.\n\n\"Still not sure how you're doing that,\" Triss said.\n\nA resonating voice, bassy, alien, mixed with Elen's voice, came from the old woman's mouth. \"This vessel is almost empty.\" Southern accent gone, Black Blood now adopted Elen's decrepit old woman accent. The creepy factor soared to eleven. \"She provides little more trouble than possessing a corpse.\"\n\n\"Don't be rough, deary,\" Elen said, once Black Blood was done. \"I'm just skin and bones, you know.\"\n\n\"Silence,\" Black Blood said. Christ it was like watching Gollum argue with himself.\n\nShaking, trembling, Black Blood guided the old woman's hands onto the face of their sacrifice, and began to touch her flesh. The sacrifice pulled back, but Jennifer came around, and met the woman's eyes hard. Another fresh dose of brainwashing from the skilled Ventrue was enough to get the sacrifice to hold still again.\n\nThe plan was simple. Elen refused to help them, but after some experimentation, Triss and Black Blood learned the woman's mind was so empty, that Black Blood could possess her. Normally possession was a different process that took time, according to the spirit, and normally required the person to resonate with the spirit trying to possess them; again, according to Black Blood. A fire spirit could possess someone with arsonist tendencies, given time. But since Elen was half dead and unable to die, Black Blood could sort of half possess her. And half force her to do things.\n\nSo Black Blood learned how to use Elen and her ability to manipulate flesh. An ancient creature learning to use a tool, a tiny, fragile, weak tool, meant only for subtle, precise work. One mistake and Black Blood might tear the woman apart from the inside out.\n\nElen frowned at the sacrifice, and gently slid fingers up and down her face. As she did, Jen pulled out a scalpel, and handed it to the woman. Triss pulled out her smart phone, brought up a picture of Julias he'd posed for, and pointed it at Black Blood. It took every bit of effort Triss had to not look at the picture this time, but she managed. No need for those painful memories, not now.\n\nElen got to cutting, guided by Black Blood, but Triss could tell it was Elen doing the more delicate stuff. Lifting her arms and pushing her hands forward? Black Blood. The tiny cuts, the quiet humming, the weird smile? Elen. Like a granny given a knitting needle and wool, she couldn't help but get to work when the tools were in her hands.\n\n\"Be a dear and get my book for me?\" the old woman said.\n\nTriss groaned. This woman, this damn woman, was so fucking senile, it hurt.\n\n\"I already told you Elen, a hundred times, I can't. It's locked up. The book, the knife, the other artifacts, all of them.\"\n\nElen sighed and lowered one of her hands. The scalpel sliced into the sacrifice's face, hard, deep, down across her cheek, and blood flowed. The sacrifice screamed, pain breaking through Jen's Dominate. But before the scream could get too bad, Triss cracked the doomed woman upside the head, and picked her back up by her neck. Unconscious was still alive, and alive was all Elen needed.\n\n\"If you could get my book for me, and my knife, I'd do this for you, you know.\" Sighing, Elen and Black Blood brought her cutting hand back up to the sacrifice's face, and got digging. Her right hand sliced, and her left hand plied and plucked at the skin \"It's been a long time since I've had a fun project. Rebuilding sonny there\"--she half nodded toward the phone--\"sounds like a fun project for old Elen.\"\n\nTriss frowned down at the old woman, and looked at the face of the sacrifice. Unconscious, the woman they were cutting on couldn't feel what they were doing to her, and if she woke up and saw, she'd kill herself the moment she got her hands on a sharp object. She wouldn't be waking up. This was just an experiment, another lamb for the slaughter, or a better comparison, this was fucking Unit 731. She scrunched up her nose at the awful comparison, but it was partly true. Every asshole and douchebag Jen and Triss pulled off the streets and into this hole in the ground on the edge of Dolareido, were fodder to be fucked with as Black Blood and Elen worked to see if they could accomplish the first part of Beatrice's plan.",
        "The second part was going to be worse, but for now, she was focusing on the first part. Creating a body for her dead love.\n\n\"Is she lying?\" Triss said.\n\n\"I don't know, deary,\" Black Blood said, and again Triss shivered. The fact his voice changed to match his host's was god damn weird. \"But this would be easier if I had her tools.\"\n\nThe fact Black Blood could, on the fly, possess Elen, and actually use some of her magical flesh manipulating abilities, was damn fucking amazing considering he wasn't supposed to be able to do much to anything that still had a soul. But still, Triss ground her teeth in frustration and almost started yelling. Every fucking barrier they ran into was infuriating. No matter how many times she told herself this whole attempt to resurrect Julias was bound to failure, no matter how many times she reminded herself of what the Crone told her, she couldn't help but get her hopes up a little, which of course meant she got super fucking pissed the moment she ran into a problem.\n\n\"There are three elders in that tower, Black Blood, not to mention Jack. That's four people that could kick my ass instantly.\"\n\n\"Jack,\" Black Blood said as he worked on the woman's face, flesh sliding far more than it should have. Literally rearranging the woman's face. \"That boy, a lot has happened since I last saw him.\"\n\n\"I suppose Jacob's kept you up to date. And you kinda saved the day, when you gave S\u00e1ndor an opening back there, to stop the ritual. You saw what Jack's become.\"\n\nThe old woman smiled, but continued to cut into the sacrifice's face. \"The curse inside him is... interesting. It's been ages since I've seen something like it.\"\n\nBlack Blood had run into something like it before? That was useful information. She almost asked, but shut up before she could. Better to bring it up to Jack, without Black Blood knowing.\n\nTriss rolled her eyes, doing her best to pass off how scary what he'd just said was. \"Focus BB. You have no way to manipulate Jack into working for you, no leverage.\"\n\nBlack Elen Blood chuckled, a weak and sad little sound, but he-she nodded as he-she continued his-her work. \"Don't I?\"\n\n\"No. And if you fuck with Jack, consider our deal terminated.\"\n\nAgain, the old woman chuckled, voice half mixed with the bassy vibration of the demon possessing her. \"Alright dear.\"\n\n\"As for the book and shit, I have no idea how to get them. No way in hell. I can't sneak in there. Jacob couldn't sneak in there, not with the fucking sheriff around. Plus, you know, dozens of thralls with guns and probably flamethrowers and shit.\"\n\nJen made a thinking noise. \"Breaking into the Elysium Tower is a lost cause. But, we do have another way in. Rather, another person.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nHe grumbled and groaned, and Jessy laughed.\n\n\"Come on, your mom looked happy.\"\n\n\"I don't trust him.\"\n\nShe shrugged, hooked an arm over his shoulders, and gestured to the city around them as they walked the street. \"No one trusts anyone, dude.\"\n\n\"You don't trust me?\"\n\n\"Ha, you know what I mean.\" She rubbed his buzzed head before letting him go.\n\n\"I don't trust Jacob, and as much as Antoinette trusts him, a little, I don't think she has a good perspective on it.\"\n\n\"You don't? She's gotta be pretty damn smart to be as old and successful as she is, ya know.\"\n\nHe shook his head. \"Ever had a friend you watched degrade into a... a bad person, despite your efforts to help them? And you were convinced if you just gave 'em a chance, they'd come through for you?\"\n\nThat struck home, and she lowered her eyes as they walked. \"Yeah, I have.\"\n\n\"And did they pull through for you?\"\n\n\"No, they didn't. But the Prince is old, Jack. She's gotta be smart enough, or at least wise enough, to not make that mistake.\"\n\nHis turn to shake his head again. \"You'd think, but Antoinette is... a bit of a softy, honestly. Yeah sure, a lot of people in the city think she's some kinda ice queen, and she can be when its time to get professional, but her friendship with that old fucker is ancient.\" Daniel saw it. The sheriff had no delusions about Jacob, and would happily cut the man's head off if he saw an opportunity and reason. Jack was happy for that, at least. \"So yeah, the Prince thinks Jacob can be trusted, and I'd be an idiot to ignore that, cause you're right, she is smart and wise. But at the same time, she's not a robot. She and Jacob have a history.\"\n\n\"Like she and Elaine do.\"\n\n\"Y... Yeah.\" He winced and looked up at her. \"What do you think of her?\"\n\n\"Elaine? Smoking hot. Got that tall, busty model looking going for her.\"\n\nJack groaned, earning a laugh from the Gangrel.\n\n\"No, I mean--\"\n\n\"I know what you mean. Can she be trusted? Or at least, trusted more than any self-respecting vampire would trust someone in this kinda circumstance. Honestly? I don't fucking know, man. I met her eyes, and she... well, she kinda reminded me of Viktor.\"\n\nA chill ran up Jack's spine. \"Yeah. That secret has slipped out, and I guess now she doesn't really mind people knowing she's my great grandsire.\"\n\n\"And Viktor was a fucking sociopath.\"\n\n\"Maybe he wasn't always? I have a hard time imagining Elaine willingly siring someone like the Viktor I met.\"\n\n\"Or, maybe Elaine was different back then compared to now?\"\n\nHe nodded at that. It was possible. Elaine told him as much, that she was a completely different person back then, ran through the woods with pet wolves at her side and stuff.\n\nSpeaking of pets. He looked up, and smiled as he noticed Mulder and Scully perched on a powerline. They'd come down for some cuddles and snacks later, but for now, it'd be damn weird to walk around all these people with a couple crows perched on his shoulders. And he didn't want them with him when he was underground in Isabella's lair.\n\n\"Maybe,\" he said, \"maybe Viktor wasn't always the asshole we knew. He sired Julias, and he had to know Julias was... was--\"\n\n\"Better than the fucking rest of us.\" Jessy sighed, shook her head, and slipped an arm over his shoulders again. Half hug, while walking. Not comfortable, but a glance up told him he should let her do it. \"Christ, still can't believe he's gone sometimes.\"\n\n\"Me neither. But, you knew him a lot longer than I did.\"\n\n\"I did yeah. I never got as close to him as you did, Jack, but yeah, knew him most of my second life. I--\" She stopped hugging him, made an awkward cough, and fixed the shoulders of her suit. \"No sissy shit. We're supposed to be enforcers here, and get Isabella back in line. Let's go.\" She didn't hesitate a moment last night to show everyone her nipples, and get pretty damn ballsy with an elder vampire, but to let it show that she was genuinely sad over Julias's death? That was a line she couldn't cross, not yet at least.\n\nThat was fine. Eric had that covered, Jack was sure. They were a great couple, and he was happy they got together, and not Fiona. Eric was good for Jessy, and honestly, Fiona was good for Damien.\n\nThe two walked the street in silence for a while, on a slow path to the Lamanar Theatre. Michael and Jack had talked after his few weeks of meditation practice with Elaine, and concluded that if he felt the curse was under control, the man should get back to work. Work, in this case, meant having a talk with Isabella Leauvion and Hella Vendram. The two lovers were neglecting their duties -- they were supposed to be a thorn in the Carthians' sides -- and Michael wanted to remind them that just because the hunters were defeated, they didn't get to sit around doing nothing.\n\nSo Jessy and Jack, two Right Hands, were going to pay an unannounced visit, and remind them. Jack was down with the idea. Supposedly the hunters that remained in the city were still in Isabella's care, and Jack wanted to see just how caring that care was.\n\n\"So, last night,\" Jessy said. \"Wow.\" Of course, with time to recover from talk of Julias, Jessy's more normal personality reemerged. Give it to the Gangrel, she bounced back fast.\n\n\"Yeah, wow.\"\n\n\"Like what you saw?\" She gestured to herself. At the moment the both of them were in suits, full on secret agent suits that practically screamed hidden pistol.\n\nHe rolled his eyes. \"You're hot Jessy, and you know it.\"\n\nShe grinned. \"Yeah, but it's still great to hear.\"\n\n\"What, Eric doesn't tell you?\"\n\n\"Oh he does, but you can never have too many compliments.\" She grasped the air and put her hand in her pocket, as if saving the compliment for later consumption. \"But, damn, lot of tits at that table. Elaine and Fiona have huuuge boobs. And of course, your freaky lover's got tits the size of Georgia.\"\n\n\"They're not that big.\"\n\nJessy set her hand on his shoulder, leaned in, and gently hit her forehead against the top of his head. \"Dude, yes they are.\"\n\nHe pushed her away and did his best to hide his smile. Fail. \"Don't suppose you could act like a proper lady for the rest of the night?\"\n\n\"Fuck that. Last night's put me into perma horny mode. Natasha and her boys are fucking perfect, aren't they?\"\n\n\"From the conversation, it sounded like you've seen them having sex already, multiple times.\"\n\n\"Yeap. Surprised you haven't seen the tape. Natasha's become a full-on porn director. Your lover's seen it.\"\n\nHe shuddered. \"Antoinette's just respecting Tash's privacy, probably.\"\n\n\"I bet if you asked Tash, she'd trade.\"\n\nOh god, he knew where this was going. \"You just want to see me having sex with the Prince.\"\n\n\"Bingo!\"\n\n\"You know if we were kine, working for some normal business organization, I'd report you to HR?\"\n\n\"But we're not kine. We're vampires, and you know as well as I, the best god damn fucking thing about our seconds lives, is\"--she leaned in close again--\"how good we are at fucking.\"\n\nAgain, he pushed her away, and again he failed to keep the smile off his face. Yeah, it was true. With a little will and vitae, a Kindred's body Blushed Life, and as long as the Kindred had the vitae to fuel it, they could push their body to pretty massive biological extremes. He'd gotten a lot better at it in the past near three years, and now, if he wanted, he could orgasm and stay erect as much as he wanted.\n\nBut Antoinette insisted they don't let things go too far. She had a few stories for him about powerful vampires who literally held meetings while their ghouls gave them fellatio and whatnot. Elaine admitted to having a meeting with Antoinette about dragon business while the two of them were fucked by some ghouls, too, back in their heyday. Not exactly an objectively bad thing, but too much of anything meant the impact of it lessened.\n\n\"Besides,\" Jessy continued, \"I don't pester everyone like this. But you? Fair game. Natasha? Ha, took years to get her to come out of her shell, and the result has been fucking glorious. Damien and Fiona? Well, Fiona didn't take much to nudge her out of her shell. Basically had no shell when I found her.\"\n\n\"Found her?\"\n\n\"Mhmm. Fucked Eric while she was sitting right next to him. He fingered her. Great times.\"\n\n\"I'm guessing this was before Damien started dating her.\"\n\n\"Ha, of course. And I bet Fiona's constantly using her big doe eyes to drive Damien crazy.\"\n\nJack groaned, annoyed with Jessy for putting images of his friend fucking Fiona in his head. \"Like at the ball.\"\n\n\"Exactly. Whoda thought church boy would fuck his girlfriend hardcore like that, on the roof of the Black Hall, where everyone could see her tits bouncing around?\" She brought her fingers up to her mouth and kissed them, like a chef celebrating a masterpiece of a meal. \"And after last night, I am fucking dying to see what it's like when you fuck the Prince.\"\n\n\"Of course you are.\" Maybe he could use this as leverage? If Jessy was so desperate to see him and Antoinette, there had to be a way he could turn that to his advantage. Maybe get her to do him a favor or something. \"Aren't you into bigger dudes?\"\n\n\"Eh, sure, I guess. I mean yeah, big tall and handsome is a preference, but it's not like it's required. Like, you obviously like the big tits, but I know the Prince's ghouls don't have em.\"\n\n\"True.\" No point in denying that. He'd fucked Ashley and Julee plenty of times, and found their thin bodies and small breasts intensely attractive. Just because he preferred large breasts didn't suddenly change that small breasts were hot as fuck, too.\n\n\"So, like, is it kinda like a mommy kink?\"\n\n\"What the fuck? No. No there is no mommy kink involved in my lovemaking with Antoinette.\"\n\n\"Aw, come on, not even a little? Never called her mommy even once?\"\n\n\"Not once.\"\n\nShe pouted. \"But, you do do the shit I'm thinking of, right? Like, hug and hold her while you have slow, gentle sex, and suck on her tits?\"\n\nHe growled up at the Gangrel, but he couldn't find any real anger to put into it. Jessy was just being Jessy, and after last night, he couldn't blame her for being fixated.\n\nShe went on. \"Or maybe you lie down on her lap, and suck on her tits while she gives you a handjob? Or maybe you sit on her chest, and fuck her tits? Or maybe--\"\n\nHe held up his hands. \"Yes, okay? Yes, we do a lot of that kind of stuff.\" And some other stuff, but no need to fuel the damn woman's growing obsession. \"Figured you wouldn't be into that sort of stuff.\"\n\n\"Not really interested in it happening to me. But to see a little pipsqueak like you, deceptively sexy and ripped you little fucker, getting buried in tits and just covering them in cum over and over?\" She groaned, and unlike his groan, hers sounded like an animal mid sex. \"That's hot shit, man.\"\n\nOkay, if he was going to use this leverage, he needed to plant an image in her head she couldn't resist.\n\n\"Last night, Antoinette and Elaine buried my dick in their breasts, and Ashley and Julee ate them out.\" He grinned as he said it, noticing how Jessy's jaw dropped in the corner of his eye. \"It took a long time, but after like, half an hour, Elaine and Antoinette had cum so many times and had been grinding on me the whole time, I came all over them.\" Some pedestrians raised a brow as they walked past, but he didn't care.\n\n\"Fuuuuuuck.\"\n\n\"And then Ashley sat on my dick. Antoinette sat on my legs, Elaine on my stomach, and they squashed her between their soaked tits, as they grabbed her hips and ground her back and forth.\"\n\n\"Fuuuuuuuuuuuuuuck.\"\n\n\"So of course they Kissed her, and basically humped her while she came, and I came, and--\"\n\n\"No! No no no!\" She grabbed him by the suit jacket and shook him. \"You're lying.\"\n\nBullseye. \"Nope. Ashley absolutely drenched me, being doubled Kissed like that. Then they replaced her with Julee, and we went through the whole process again. I--\"\n\nJessy pushed him off the large sidewalk, and into an alley. Her eyes were wide with manic hunger, and she pinned him against a wall as she glared at him.\n\n\"You've never talked about your sex life like this before. You have to be lying.\"\n\n\"Nope.\" He grinned, one of those evil, playful grins he learned from his sire.\n\nJessy burst into whining groans and threw up her hands. \"You asshole! Show me!\"\n\n\"Nope.\" He felt a little bad about abusing this. Much as he loved sex, like everyone in Dolareido, Jessy was clearly a sex addict. She'd happily have meetings in the middle of an orgy if others would let her.\n\n\"God damn you Jack. You just won't show me because--\"\n\n\"You know Antoinette would happily let you watch us have sex, Jessy. Old and powerful as she is, and a Daeva, she loves to be the center of attention. You probably noticed it at the club, if not before. She'd fuck in the center of Bloodlust, complete with an audience, if she thought she could control the media freakout.\" Porn and other sex-oriented material had a habit of going viral instantly, and beyond the control of any governing body.\n\nShe grit her teeth and glared harder. \"Ok, so... Wait, you're trying to manipulate me. You want me to do something, or get you something, for a peek of the action?\"\n\n\"Yeap.\"\n\n\"You sneaky fucker,\" she said, and he smiled. \"You sneaky god damn fucker. Fuck you, fine. What do you want me to do?\"\n\n\"Handle the talking when we meet Isabella. She... she uh...\"\n\nJessy burst into laughter, and nearby people looked into the alley as they passed.\n\n\"Dude, you fucking serious?\"\n\n\"She's scary!\"\n\n\"She's just a pretty girl who knows it and uses it, paired with some serious ice queen vibes.\"\n\nHe shuddered and shook his head. \"I can feel my balls freeze and pull back up into my body when I'm around her.\"\n\nThat earned a laughing snort from the Gangrel. \"Yeah, she's like Antoinette without the nurturing half. No idea what Hella sees in her.\"\n\nJack shrugged. \"Her plays are a big success.\"\n\n\"Her plays have nudity and even fake sex scenes. Fake.\" She air quoted 'fake'. Yeah, Isabella probably would have her troupe having actual sex on stage, and call it fake later. \"Sex sells.\"\n\n\"Heh, yeah. But I read her plays are also genuinely good. Erotica kinda stuff, like the actual genre, exploring sexuality and whatnot.\"\n\n\"With singing?\"\n\nHe laughed. \"No singing.\"\n\n\"Damn. I like the songs.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThey stood outside the Lamanar Theatre, and whistled. It was such an old, beautiful building, and when they stepped into the lobby, the royal theater look was blatant. Giant white pillars carved from stone, gold braziers, gold chandelier, and red carpet and drapes around. Old, all very old, but beautiful.\n\n\"I used to think this was Hella's home, not Isabella's,\" Jack said.\n\n\"It used to be like that, but Isabella kinda moved in when her old directing efforts took off.\"\n\nJack rubbed his chin as his eyes tracked the floor. \"Hope she didn't force herself onto Hella's living situation.\"\n\n\"Ha! Nah. Those two are in love.\"\n\nHe nodded as the two approached an usherette, the same usherette that tried to stop Jack last time. That time, he'd brainwashed her to leave him alone, and he explored the upper floor until Isabella found him. She'd taken him along the catwalk, then to a wall where there'd been a hidden passage. But it seemed like it could only be opened with a password or something, so, no point in going exploring. Vendram or Leauvion would just have to come get them; no way in hell they didn't know two vampires had just arrived.\n\nIf they didn't come get them, well, then Jack and Jessy would just have to kick a wall down.\n\nJack looked into the usherette's eyes, and before she could say anything, Jack shook his head. \"You're going to ignore us.\"\n\n\"I... am going to ignore you.\" The woman nodded, and walked away.\n\n\"Jesus Jack. That took you, what, half a second to do?\" Jessy gave him a small nudge in the shoulder. \"Getting good.\"\n\n\"It's not like that. The curse is like a raging river, and all I'm doing is trying to let out just a little bit of it.\"\n\nShe grimaced as the two of them pushed past the heavy, hanging curtains that led into the auditorium. \"Like a mad dog on a leash?\"\n\n\"Kinda, yeah.\"\n\n\"That sucks.\"\n\nHe laughed. \"Yes, it does. Usually. I mean, it's not all bad. The power's there, but I have trouble controlling it.\" Sighing, he reached up and gently stroked his shirt where the necklace sat underneath. Elaine said it was some ancient occult object that helped suppress Beastly urges; not something she had during her struggles, but something the Ordo Dracul had that she could now borrow.\n\nIt worked, a little. It tingled on his skin, and he could feel the sharp edge on his desires blunted. He could also feel the readiness of his Beastly instincts lowered, like someone had thrown a big blanket over them. Not a good thing, if shit was hitting the fan. Thankfully the city had calmed down quite a bit, and he could take a breath and focus on other problems.\n\nOnce Jessy and Jack got close to the big stage, Hella Vendram stepped out from behind a heavy curtain. Hella was very attractive, a bit tall with a fit body and tan skin, lots of badass scars from her human days, and tonight she wore her dark hair short, very short. He thought she might have been from Brazil, or maybe her kine parents had been, since she had the typical Dolareido accent.",
        "\"Just going to show up unannounced?\" she asked, half yelling. She wore typical jeans and t-shirt, completely at odds with the decor, but totally predictable for a Gangrel. \"I suppose you're wanting to cash in on the favor.\"\n\nFavor? He almost asked about it, but stopped himself. Right right, avenging Barry.\n\n\"Not really, no. Not yet at least. We're here because Michael's pissed you're not out there, dealing with the Carthians,\" he said.\n\nHella groaned, and motioned for them to come join her. They did, and they followed her backstage where scene props were, and then down below to the dressing rooms. There was no threat here, nothing to make Jessy or Jack hesitate or look over their shoulders for a knife coming for the back. Of course, Kindred would always be Kindred, and it paid to not be too carefree, but Jack felt more or less relaxed.\n\nHella used a key to open a secure door, and another to open another secure door. Then it was down, and down, into an underground passage. Stone and metal, deep in the Earth where only a creature that didn't need oxygen could feel comfortable.\n\n\"Last time I was here, I couldn't find anyway in,\" he said. He'd been down there before, and other than what looked like some kind of tunnel through water deep in the Earth, Isabella's secret path starting from the catwalks above seemed like the only way in.\n\n\"You can never be too careful.\" She shrugged at him. \"There may be more ways, there may not. I have no obligation to tell you.\"\n\nJessy growled, a very animal sound, but nodded. \"Yeah, we know, Hella. Kid was just curious.\"\n\nHella smirked, but shrugged again. Good, no follow up meant she wasn't feeling too aggressive. If she wasn't on edge, than Isabella might not be either.\n\nAfter a long journey down spiraling stairs cut into stone, they came out into the cave that was Hella's home. Not the way he came in last time he was here, this time stepping out from behind a heavy curtain, and out onto a higher part of the cave. The very well decorated cave that might as well have been a scene from The Phantom of the Opera. It even had some dress mannequins, and a big comfy, fancy four poster bed.\n\n\"No no no!\" Isabella, wrapped in some sort of gorgeous, blue, fluffy nightgown that belonged on a woman who'd recently killed her rich husband for his money, walked around the bed. A couple of Kindred sat around it, as did a couple of kine, likely ghouls, and everyone was watching the two Kindred on the bed. \"You're not capturing the sheer taboo nature of the act.\"\n\nJack raised a brow, looked at Jessy, who returned the confused look, before they both shrugged and followed Hella as she led them down the winding twists on the floor of the cave. Lots of lit candles, hanging curtains, beautiful paintings, a chandelier, it was like Maria's den, except less morose.\n\nOn the cave floor beside the bed sat another kine Jack hadn't seen before, and whoever he was, he was out cold. Alive, but comatose, from a Kiss no doubt. The two Kindred on the bed were hidden under the blanket, a white woman and a black man, and the man was currently lying on the girl's back. And, from the smell in the air and the flushed look on her cheeks, they were very aroused; probably them who Kissed the kine.\n\n\"Taboo?\" Jessy said, smirk on her face as she approached, taking slow steps down the carved stairs of the stone cave. \"What's taboo about this? Ass fucking? Not really the best position for that, F Y I. Get a pillow under your hips, girl.\"\n\nThe group of actors and actresses chuckled, but Jack rolled his eyes and shook his head. Yeah, he'd forced Jessy to handle Isabella so he wouldn't have to, but that didn't mean Jessy had to go all... Jessy on him. Fuck. He really should have asked for something better.\n\n\"It's a period piece,\" Isabella said as she folded her arms across her chest. \"I don't suppose you understand what that means?\"\n\nJessy raised a brow, looked to the two people covered in a blanket on the bed, at the fancy old fashioned dress on the foot of the bed, at the field worker's clothes beside them, and then to Isabella. \"Oh, I get it. Black dude, white girl?\"\n\nIsabella almost snarled, but a sheet of ice covered her cold face instead. \"Indeed.\"\n\n\"Harcourt involved?\" Jessy nodded to herself, as if she'd come to a great idea. \"Dude's smoking hot, and black.\"\n\nIt took every ounce of discipline Jack had to not hit Jessy upside the head. That could wait till later.\n\n\"None of the hunters are members of this performance,\" the Daeva said, glaring.\n\nJessy raised a brow, and gestured with her chin to the other side of the cave. A few more actors and actresses stood around, chatting, nodding, and holding up various costume pieces in front of themselves. Some sort of feedback group then. Two of the hunters, Dennis and Marge, stood with them, chatting away.\n\n\"Jessy, I'm going to speak with the hunters,\" Jack said. \"Can you--\"\n\n\"Yeah yeah. Don't forget what you owe me though.\" Jessy winked at him, walked over to Isabella, and sat down on the foot of the bed, big grin on her face.\n\nThe more Jack thought about it, the more he realized he'd made a bad trade. Jessy liked confrontation, and considering how condescending Isabella often was, the Gangrel was probably aching for an opportunity to get uppity with her. Maybe Jack could haggle with her over his deal?\n\nHe laughed quietly to himself as he approached Dennis and Marge. He hadn't even asked Antoinette if he could make a deal like that, a sex tape or something of them together, to give to Jessy. No way she'd say no, or so he thought, but there was a chance she'd say no. Maybe. Possibly.\n\nNah. Antoinette was perfectly comfortable with the idea of fucking in front of an audience, both in person, and planet-wide. So comfortable, she'd take requests from the audience for positions, mid sex. He could see it now. She'd be riding him, pull out her smart phone, and put up a global poll for people to vote on the next position. Live voting.\n\nMaybe Jessy and Antoinette, and Elaine, had more in common than he thought?\n\n\"Marge, Dennis,\" he said once he got close.\n\nThe group of vampires backed away, offering him small bows. Uncomfortable. One of the vampires was younger than him, but the other few were older than him. They all looked a little frightened. The two hunters, on the other hand, looked terrified of him, which of course soon had the other vampires even more scared.\n\n\"Jack,\" Dennis said eventually. \"You uh, you here for us?\"\n\n\"No. You can all calm down, I'm not here for any of you.\" That managed to dial them down from nine to eight on the panic scale, at least. \"Jessy and I are here to... speak to Isabella.\" He didn't mean to pause there; just wanted to avoid telling these guys what they were actually going to say to their boss. But the pause made it sound indirectly threatening, and the group of them, vampires included, stirred and looked over him to Isabella.\n\n\"She in trouble?\" one of the actresses said.\n\n\"Covenant business,\" he said. Which only made things worse. Fuck. \"Don't worry about it. So, Dennis, Marge, how is it in Dolareido?\"\n\n\"Could be worse,\" Marge said, a small smile managing to emerge. \"I mean, considering we were pretty sure we were dead, when you... you know. Being stuck in Dolareido is, um, frustrating, but we're pretty happy compared to the alternative.\"\n\n\"They holding a grudge for Barry's death?\"\n\n\"Nope,\" they said together.\n\n\"Good. Isabella and Hella treating you well?\"\n\n\"We're not really sure,\" Dennis said. \"How do vampires normally treat prisoners in Dolareido?\"\n\nJack looked down as he held his chin. Tell them? No, probably not a good idea. Maria, Michael, Viktor, Jacob, they all did some pretty nasty shit to kine they felt deserved it, or kine they wanted to use as kindling for their actual purposes. Even Antoinette kept live prisoners indefinitely, as potential emergency blood sources.\n\n\"Not like this,\" he said. \"You guys aren't true prisoners. You're an opportunity. The Prince is a peaceful Prince, and she'll play the long game to make that peace a reality. You two and Harcourt are another tool in her toolkit. Once she's satisfied you guys understand what we're about, she'll let you go.\" And if she's not satisfied, she'll probably lock the three of you up. But no reason to tell them that.\n\n\"How long will that take?\" Dennis asked.\n\nJack shrugged. \"No idea. How much of Dolareido have you seen? Er, better question. How much of Dolareido have you seen with vampires doing what they do in it?\"\n\nMarge nodded. \"You mean, have we seen vamps go on hunts and stuff?\"\n\n\"Yeah.\"\n\n\"We've seen a few, yes. Been to Bloodlust a few times.\" She squirmed a little as she said it. \"And we've been fed on a few times.\" And from the way she wriggled when she said it, that feeding had been intense, pleasurable, and sexual. Dennis's reaction was identical.\n\n\"Anyone slip you any of their blood?\"\n\n\"No,\" Dennis said. \"But I mean, how would we know if they had?\"\n\n\"Overwhelming infatuation and obsession with one of the Kindred, generally unwarranted.\"\n\nMarge winced and looked down. \"Uh, I don't think there's been anything like that. But, uh--\"\n\nLaughing, Jack put up his hands. \"If you're in with the vamps in Dolareido, it's like... winning the lottery, and going on vacation in Las Vegas. Yeah, you're going to get buried in so much sex and indulgence, you'll get whiplash.\"\n\n\"You got that right,\" Dennis said, and he smiled at some of the nearby vampires. They returned it.\n\n\"Where's Harcourt?\" Jack asked.\n\nDennis shook his head. \"Dunno. Despite her best efforts, I don't think Miss Leauvion's been able to convince Brace to get involved in her plays.\"\n\n\"That the reason she got her claws into you so early? Just... for the plays?\"\n\n\"Seems to be a large part of it, yeah. There's been a few occasions where she's kinda negotiated with other Kindred to get to talk to us; probably traded for it.\"\n\nJack raised a brow at that. \"But, you're not trapped under Isabella, or Hella. You're stuck in the city, but no Kindred is allowed to keep you under their thumb.\"\n\nMarge nodded. \"I guess. She is a bit... insistent, that we should be careful about leaving the comfort of her care, though.\"\n\nJack frowned at that. Of course the damn woman would be manipulating the hunters, without actually quite breaking the Prince's decree. He'd fix that before he left.\n\n\"Any idea where I can find Harcourt?\"\n\n\"Probably hanging with the Carthians.\"\n\nInteresting. Harcourt had a personality that didn't exactly fit the hunter mold. Maybe he felt more comfortable in the borderline anarchist environment of the Carthians?\n\nJack nodded. \"Alright, I'll talk to Isabella, and then... well, keep your heads down, ok?\"\n\n\"You mean right now?\" Marge asked.\n\n\"I mean in general. City isn't perfectly safe.\"\n\n\"It is filled with vampires. I mean--\"\n\n\"It's not that,\" Jack said. \"Just... be careful.\" Before they, or the listening vampires could interject, not that they would considering they were afraid of him, he marched back from where he came, to get involved in the conversation between Jessy and Isabella.\n\nConversation, not argument. Surprising. Considering Jessy being Jessy, he'd expected to find his fellow Right Hand throwing curses at the older Daeva, but she hadn't. Nope, she'd sat down on the bed with the two actors, and was in the process of ripping the blanket off them.\n\n\"No no!\" Jessy said, voice louder, but not angry. Impassioned was probably a better word, though Jack had trouble understanding what was going on. \"The sex shouldn't be gentle. He should be grinding into her. Come on, if we're playing up the rich girl seduces farm hand, it's been a long, slow tease, right? When he gives in, it should be like an animal!\" She gestured to the two on the bed, who were actually having sex -- or had been -- until Jessy interrupted. Authenticity, or at least compelling performances, evidently meant a lot to Isabella.\n\n\"Madam Herrington,\" Jack said, frowning at his partner, \"did you speak with her?\"\n\n\"What? Yeah yeah, she knows what's up. If we have come back down here, we'll crack some skulls and ruin her next play.\"\n\nHella did not like that threat. The Gangrel prowled over toward them, but Isabella held out her arm and cut her off.\n\n\"The Right Hands are correct,\" Isabella said, no effort made to hide the ice in her voice. \"Mister McDonald does not care for the arts, and we have become too involved in our passions.\"\n\nJack managed a small smile. \"I get you.\"\n\nThe Daeva's glare could have cut steel. \"Do you, Mister Terry?\"\n\nWow, damn. Much as Isabella was a cold woman, Jack half expected her to treat him with at least a little politeness. He'd gotten revenge for Barry, one of their actors. But no, the fact the Right Hands had come to interrupt something important to her meant she was pissed. Time to play diplomat again.\n\n\"Yes, I understand, Madam Leauvion. I know how it feels when you get a hook, in the brain, you know? I know exactly what it's like when something grabs you, and you spend all night and day sinking energy into it. It eats you up, in delightful masochism. And for any Daeva, I imagine that that's an even stronger sensation. You want to master your craft, and create works that resonate.\" He said 'resonate' very carefully, with emphasis and articulation, and the satisfied smile on Isabella's face told him he'd struck home. \"And when outside interference gets in the way, it's beyond frustrating, because you know that the energy filling you right now can be fickle. You want to strike while the fire's hot, right?\"\n\n\"Are you an artist, Mister Terry?\" she asked, some ice in her voice gone. \"You speak like someone who knows.\"\n\n\"I've dabbled, when I was human.\"\n\n\"But not since?\"\n\n\"No, I guess not. Haven't really had the time.\" Or the desire, really. Ever since he was embraced, his mental energy naturally gravitated toward different things, usually anything that involved growing his skill, power, and status as an Invictus. Being a Ventrue had changed him. He used to have a lot of skills, a natural at anything he put his mind to, and it was a bonding point between him and Antoinette. But he wasn't that guy anymore. Kinda sad, really, now that he thought about it.\n\nAnd because he could not fucking stop wearing his emotions on his sleeve, Isabella smiled as she watched him, catching what he was thinking.\n\n\"My troupe are afraid of you, Jack,\" she said, and Jack raised a brow at the dropping of title. \"The hunters, and my Kindred. The stories about you, about the things you've done, the hunters have corroborated them.\"\n\n\"Is that why you got your fingers into them so quickly? To ask them questions about me?\" Ugh, he didn't want to talk to her. She was mean. Jessy was supposed to be talking to her, and was, and he was the idiot that interrupted that.\n\n\"Partly. Partly for more obvious reasons. Partly because I did wish to see them in my work. And, partly, because they are delicious.\" She licked her lips as she said it, and it was pretty damn obvious she meant more than just their blood. To seal the image, Hella grinned a big grin beside her.\n\nTime to spoil her night even more, then.\n\n\"Right, well, you've been hogging them. Let others have a turn,\" he said, earning a bark laugh from Jessy.\n\nIsabella scowled, and the ice returned in full force. \"I have not been--\"\n\n\"I really don't have patience for a back-and-forth of indirectness, Isabella. You know what I mean, and you know what you're doing. Marge and Dennis are supposed to be seeing more of Dolareido, so Antoinette can convince them we're not really worth other hunters' time, remember?\"\n\nFuck. One moment he had patience, and the next he didn't. Something about Isabella and her deceitful, manipulative attitude really got under his skin, and now that he had the power to rip her into pieces, fear didn't hold back his tongue.\n\nYeap, this was why he wanted Jessy to do the talking. With Jessy, getting uppity and angry and stuff was the norm. With him, cutting through the bullshit and getting a point across quickly, was taken a lot more harshly. Both because of his known past as a keeper of the peace, and his recent curse.\n\n\"I thought you were a Right Hand of the Invictus, not an assistant to the sheriff?\" she said, a sneer slowly creeping across her face. \"Michael would prefer we keep them locked down here indefinitely. Yet, it seems like you're putting your lover's desires over his.\"\n\nWow, she didn't back down, like he thought she would. Hell, she'd said it herself, the hunters corroborated the rumors. She knew what he could do.\n\nJessy was right. Isabella had eyes for growth in the Invictus hierarchy, and she never forgave him for becoming the next Right Hand. And the problem was, she'd just insulted him in front of a group of people. His status was at stake, and to an Invictus, status was everything. He understood that, got that, and fuck him, he even kinda liked that about the Invictus; the Ventrue in him was coming out.\n\nHe snarled, very quietly, and took a step toward her, eyes locked onto hers. She took a step back, so did her girlfriend, and the two of them glared at him like angry animals suddenly cornered by a much larger animal. Every Kindred nearby froze. The Beast in his gut roared its triumphant power, and theirs huddled back, whimpering.\n\n\"You think I'm Antoinette's bitch, is that it?\" The word choice had everyone staring, and he ground his teeth hard enough his fangs emerged. \"Michael wants you to get off your ass, and stop Garry from pushing in on our territory more than he already has. But you're so self absorbed, you can only think about indulging your obsessions.\" He nodded toward the hunters behind him, who had drifted closer along with the other vampires. He was now the center of attention for everyone in the cave. Lovely. \"And hey, I get it. I know exactly what it's like when something grabs hold of you and you can't help but pour every bit of focus you have into it. But instead of a reasonable conversation, you want to be a fucking pain in my ass?\" He took another step forward, and again Isabella and Hella stepped back. \"You know what Michael wants you to do, and you'll do it. Now you know what the Prince wants you to do it, and you'll do it, because it's the smart thing to do. And because I told you to.\"\n\nHella slipped under Isabella's protecting arm, and marched toward him, eyes glaring. \"You can't just walk into our home and--\"\n\nJack met her eyes. The world stopped. Everyone watching petrified, and Hella became a statue as she realized what was happening to her. What had happened to her. She was what, maybe thirty years embraced? Not even in her ancilla years. Breaking past the barrier all Kindred -- and paranormals -- had guarding their mind was easy. More than easy, he had to make an active effort to hold back his Beast and keep it from ripping into her damn mind. It was a gamble he did not want to make, but the situation was quickly spiraling out of control and he had to get it under control, now.\n\nWith another quiet growl, Jack pointed at her, and then slowly pointed at the bed. With a quiet whimper and broken eyes, the warrior woman inched her way over to the bed, and sat down on the foot of it.\n\n\"Let me make this perfectly clear,\" Jack said. \"This isn't a negotiation. Don't mistake my kindness for weakness or passivity. You're all members of the Invictus. Do what MacDonald says, or I'll make you. You're all Kindred of Dolareido. Do what the Prince says, or I'll make you. Understood?\"\n\nEveryone except for Hella and Isabella nodded vigorously. They nodded too, once a few moments of deadly silence passed.\n\n\"So this is how it is?\" Isabella said. \"We're to be enemies?\"\n\n\"You fucking shitting me?\" Laughing, Jessy hopped off the bed, and put a hand on Jack's shoulder. \"Dude's the best friend you could ask for. He just saved you a whole lot of pain. All you gotta do is listen, and everyone comes out better.\" She saluted the two Kindred, waved to everyone else, and turned to leave with Jack.",
        "She did a good job hiding that she was actually pushing Jack to guide him back out of the cave. Good. Part of him kinda wanted to stay and throw a few punches, and he knew that was a damn bad idea.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Thought you were going to let me do the talking?\" Shaking her head, she gently elbowed him in the side as the two stepped back onto the Dolareido sidewalk.\n\n\"I was! I was. Just, fuck, I wanted to make sure the hunters weren't being treated like prisoners.\"\n\nJessy shrugged at that. \"Yeah sure, but that doesn't mean you needed to burn that bridge with Isabella.\"\n\n\"Hard to not burn a bridge with that bitch.\"\n\n\"Ha! Agreed. But still, you're normally pretty good about this sorta shit. What happened?\"\n\nSighing, Jack looked down and stared at the toes of his Invictus shoes as he walked. \"That sort of shit always annoys the ever living fuck out of me.\"\n\n\"Yeah, I get that, but you didn't let it get the best of you, before now.\"\n\n\"I didn't have this curse back then. Now, I can... I can have Isabella on her knees with the snap of a finger.\"\n\nJessy raised a brow at that. \"Damn, that's badass.\"\n\nHe snorted. \"I feel like a kid who's found his dad's gun, a shitty pistol with a quick safety and hair trigger. One fucking mistake and I'm going to kill someone.\"\n\n\"Better be careful then.\"\n\n\"Yeah, I know. But fuck me, knowing I can tell an asshat to fuck off and get to work now? It's... it's like god damn fucking candy! Knowing that if I wanted to, I could make her drag her pretty ass into the Invictus HQ, and openly admit she's being lazy? Hell yes.\" He looked up at Jessy, and she blinked at him, apparently not really aware of the sensation. \"You've never dealt with someone stronger or richer than you, and all you can think is 'fuck I wish I had the power or money to deal with you?' But you couldn't?\"\n\n\"Eh, I mean I guess? Normally I kinda just... try, and get beat up for trying.\"\n\nHe blinked at her, she smiled a big dopey smile, and he laughed. \"Not me. I just fantasized about it. But, now I'm the... 'big dog.'\" He air quoted that, naturally. \"I can tell an asshat to stop being an asshat. I can genuinely fix things.\" And he wanted to fix things. Christ, if he could just fix everything, his purpose in life would be complete. He could die happy.\n\n\"Sounding kinda like a dictator there, you know? Waving a big ole 'I know best, follow me' sorta flag over your head.\"\n\nHe winced at that. \"I know. I'm not an idiot. I shouldn't just go around, bullying people into doing what I want them to do, because I think I know best. Setting myself up for a historically clich\u00e9 fall doing that.\"\n\n\"Maybe a bit, yeah. But I'm a little more concerned about how things are gonna be after you get rid of the curse.\"\n\n\"Get rid of it...\"\n\n\"Yeah.\" She nudged him with her elbow again. \"You know, that thing you wanted to do?\"\n\nHe frowned at the street beneath him. \"Yeah.\"\n\n\"Ok, um, you sound hesitant, and that's kinda scary. Last I heard, this curse thing was horrible, you hated it, and you wanted to get rid of it?\"\n\n\"I do, I do. But I've had it under control for weeks now, and... and it's easy to forget the horrible shit, and only remember the good shit.\" The power in his fingertips, for one.\n\n\"Well, whatever you do Jack, I'll back you. You've earned it. Julias chose well. But take it from someone who's burned a lot of bridges: don't burn a lot of bridges. If you do get rid of the curse, the fuck you gonna do if Isabella decides it's time to shove you around?\"\n\nSighing, he shrugged and looked up at the Gangrel. \"I'll... ask for your help?\"\n\n\"Ha!\" She clapped him on the back and laughed. \"A Ventrue, ask for help when his pride is on the line? I'll believe it when I see it.\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\n\"I think I have seen far too many naked bodies the past few weeks,\" Samantha said.\n\nAntoinette laughed, and smiled at her childe beside her. The two sat in one of her vehicles, being driven by one of her thralls, a large vehicle, but not quite a limousine. Deliciously overindulgent without being gaudy.\n\n\"You spend much of your time with witches and warlocks, my childe. Expect to be surrounded with flesh and sin.\"\n\n\"It's not really the image I think of, when you say witch. I think cauldrons and warts and stuff. And warlock just makes me think of Jack, playing video games in the living room.\"\n\nAgain Antoinette laughed. Young Jack, a boy, indulging his growing mind with the rising media of the current age. Such an image, so at odds with the current reality.\n\n\"Then allow me to correct your assumptions, Samantha. Long ago, in the woods distant from nearby villages, Kindred of the Circle of the Crone would gather. Come the full moon, they would sit around a fire managed by their ghouls, and they would pray to old gods, gods of the elements, and gods of forces beyond understanding. Sometimes they would sacrifice an animal to the flame. Sometimes a person.\"\n\nSamantha gasped. \"A person?\"\n\nHow silly her childe was. Antoinette had told Samantha all this already, but her childe was the sort of woman who needed to hear information many times, and in many forms, before it sank past her skull. With time, she would sharpen her mind, despite the natural inclination of her first life's habits. She would have to.\n\n\"Indeed. Consider the myths you have undoubtedly come across, about some of the more barbaric acts performed by the occult, hundreds of years ago. Many such stories are simply tales of the terrible things the Circle has done, worshiping ancient gods or pursing dark magics. And, as you know, many such stories are filled with sex.\"\n\nSamantha looked down and shivered; a shiver of delight, not fear. \"There's definitely been sex.\"\n\n\"I am sure that Jacob, in his younger years, indulged in carnal delights of a similar nature to my own past. Though, some key details would be different. I preferred walls, and beds of silk. Jacob would have undoubtedly preferred fur rugs.\"\n\n\"Yeap, there's fur.\"\n\n\"And he would have included members of his family.\"\n\n\"F-Family?\"\n\n\"The Circle of the Crone embraces an ancient tradition, sometimes called the Family. Kindred are given roles, such as Mother, Father, and others, such as the Maiden or the Whore.\" The details and purpose of which evaded her. She was no stranger to secrets; such was the way of the Ordo Dracul. But the secrets of the Circle were far more infuriating, as they rarely wrote what they believed or acted. A culture propagated either by frustratingly cryptic scripture, or through verbal story. \"I am sure many in such a tribe would have joined in, and engaged each other sexually during some of their rituals.\"\n\n\"I... uh, haven't had anything crazy like that happen to me.\"\n\n\"Yet.\"\n\n\"Yet.\" She shivered again and smiled as she looked up to her. \"But honestly, I think it's a little easier to, um, open up, sexually speaking, in that environment I guess? Beatrice and Jennifer are so nice, and they've got their legs around each other all the time.\" She put her hands up to her cheeks and shook her head, as if the very images going through her mind would condemn her. \"Triss, she uh... Jennifer likes to... put her whole fist inside her! And not in her, you know, vagina, but in her...\"\n\nAntoinette could not help but laugh. \"And that startles you?\"\n\n\"Kinda, yeah. She gets really deep, and you can actually see her fist pushing up against her insides! And Triss cums and she absolutely soaks Jen, and--\"\n\nAntoinette leaned forward, and grinned at her silly childe beside her, causing her to freeze solid, an infant caught with hand in the cookie jar.\n\n\"You have watched them. Several times.\"\n\n\"I... um... yeah. I didn't mean to! But they have sex with their little cubbyhole cave open so I... can't help but notice, when I come or go.\" Sighing, she looked out the window at the passing houses, and ran her fingers back through her hair. \"Aaron doesn't seem to be interested in doing that sort of stuff, but Othello...\"\n\n\"Ah, Othello. I enjoy the man, as one Daeva to another, but his mind is perhaps on the other end of the spectrum from mine, or any dragon's.\" If the man had a mind at all.\n\n\"He. Is. Gorgeous.\" She giggled, and Antoinette raised a brow at her, but did not stop smiling as she leaned back and watched her childe be a child. \"So much muscle! And Madison, she's so pretty, and...\" More giggles. \"Her poor ass.\"\n\n\"You have not had anal sex with Jacob yet?\"\n\n\"Antoinette!\" Her giggles disappeared, replaced with shock. \"I... I uh...\"\n\n\"As I am sure Madison has made abundantly obvious, anal sex can be quite enjoyable for those with the proclivity. I never much fancied it, despite many efforts to. Alas.\" She shrugged. \"You are a vampire now, sweet childe. Any and all concern with which orifice you indulge should be dismissed.\"\n\nTrying to indirectly convince her childe to have anal sex with Jacob was a hilarious topic, but Antoinette kept her face smooth and calm. It was obvious Samantha was indulging her rediscovered sexual desires with Antoinette's old friend, and that was a connection Antoinette found value in fostering.\n\n\"I... I suppose that's true, isn't it? Every time I see Jen and Triss have sex, they're so... free to um... use any part of the body.\"\n\n\"Indeed.\"\n\nShe giggled again as a thought struck the sweet childe. \"Not sure how Madison keeps herself clean for Othelo all the time, but she does. And she... she really loves having sex with him. Is it because of the Vinculum?\"\n\n\"With the blood bind, a ghoul or thrall will be forever wholly infatuated with the master, unless steps are taken to break it, such as months without either contact or vitae fed to the ghoul. Such a bond could lead to sexual arousal, but it is no substitute for sexual skill. If Madison enjoys anal sex with Othello frequently--\"\n\n\"Very frequently. Like, almost every night.\" She squirmed and wriggled as more dirty thoughts ran through her innocent mind. \"She cums and soaks him too, just like Triss.\"\n\n\"Then I am sure the man has the skills and knowledge to earn such pleasure.\"\n\nSamantha leaned toward her, as if sharing a dark secret only to be shared among close friends, women sipping wine around a table in the living room. \"One time, Madison was giving him a... blowjob. Triss and Jen sat with him and watched. And... and I did too! Even opened my blouse for him.\" She cupped her cheeks in her hands again. \"I showed him my breasts, and he stared at them, and came in his ghoul's mouth! Ugh, I felt so... hot, and guilty! I told Jacob later. He just laughed and said next time, I should give Othello a strip tease.\"\n\n\"Of course he did, childe. Though I suspect he would not want you to partake, at least not without his presence.\"\n\n\"Y-Yeah, but still. In that cave, I could... I could walk into that cave, strip, and ask everyone to have sex around me, while they watched me. And... and they would!\"\n\nOh Jacob, what have you done to her sweet, innocent childe? Not so innocent anymore. Antoinette laughed, finger against her cheek, and she smiled at Samantha as she pondered.\n\n\"Be careful, childe.\"\n\n\"I know I know. Don't wanna put myself in that sort of situation, buried that deep with the Circle, and suddenly--\"\n\n\"It is not that, Samantha.\"\n\n\"No?\"\n\n\"Non. If you wish to become very close friends with the Circle, then by all means, do so.\" And by all means, share every detail with your sire, sweet little Terry. \"If you want to swim in the flesh and fluids of the witches and warlocks, by all means, do so. Enjoy yourself. My concern is that you remain aware that you are Daeva, and Daeva can often become obsessed with their passions.\"\n\n\"I never really thought of sex as a passion of mine.\"\n\n\"And yet...\"\n\nSamantha sighed, dreamily at that, and smiled at her. \"And yet, I look forward to seeing Jacob, half because I enjoy spending time with the man, half because the sex is so damn good. Is that shallow?\"\n\n\"Not at all. As you said, you enjoy talking to the man.\"\n\n\"I do. He's... he's fun, in a strange, chaotic kinda way, you know?\" Another longing sigh. \"He makes me feel young.\"\n\n\"You are young, compared to my old friend.\"\n\n\"Heh, that's true, isn't it? But he seems young too. He laughs, makes jokes, actually funny, witty jokes. He's smooth, you know? Really... suave, and smart.\" She squirmed some more. \"And he's really, really talented.\"\n\n\"Go on,\" Antoinette said. Samantha always needed a small nudge, to be let out of her shell to share details of her love life. And she wanted to share them, otherwise Antoinette would leave her to her privacy. But Samantha, young and inexperienced, was unaware of her own desires, despite how simple it was to read her. Antoinette could, and Jacob could.\n\n\"Last night, at Bloodlust, after the others left, he was kissing my neck, and then he... slid his hand inside me.\" She avoided eye contact with Antoinette, horribly embarrassed, but the sheer joy radiating from her helped her push through. \"But then Othello and Madison came back, and when they realized what was happening, Madison sat down beside me, and Othello beside her. And Othello, he started doing to Madison what Jacob was doing to me.\" Again she buried her face in her hands, this time while looking down.\n\n\"It sounds like a delightful time. Othello's ghoul is beautiful.\" Antoinette leaned in a touch and whispered. \"How many times did you climax?\" After a small quiver, and while still looking down, Samantha kept one hand to her face to hide it, while she held up the other with three fingers high. \"Oh my.\"\n\n\"I don't know what it is!\" She threw her hands up as she sat up straight and lifted her head, exasperated. \"Jacob gets his hands on me, and I just... melt.\"\n\n\"The man is ancient, my childe. He has slept with countless women, and from what Minerva told me, he enjoyed using his skill.\"\n\n\"Ancient. Kinda like you...\"\n\nAntoinette smiled, but kept it gentle. \"I see where your mind wanders. Oui, what Jacob does for you, I have done for Jack.\"\n\nSamantha managed a half grin. \"And you enjoy that? The sex being so one sided, I mean.\"\n\n\"Oh, immensely. To share my skill with him? To please him? Jacob feels the same when he is with you, I am sure.\"\n\nShe smiled at that, and started to curl her hair around a finger. \"He's spoiling me. And that... that makes me kind of nervous, honestly. If I was still human, I'd think maybe he was just a horny guy saying and doing all the right things to keep me in his bed. But, he's a vampire! He could have any human in his bed, any he wanted. A few drops of blood and a kine is enthralled, right?\"\n\n\"Correct. Three servings. Every Kindred with power is spoiled for choice in my city, sexually speaking.\" Antoinette tilted her head to the side and raised a brow. \"Are you concerned Jacob is unhappy with you?\"\n\n\"I was at first. Thought maybe he was just getting close to me, so he could... I don't know.\"\n\nAh, perhaps Samantha was not as naive as Antoinette thought, if she considered Jacob's interest in her to be a way for him to manipulate Antoinette.\n\n\"Kindred will forever look for ways to better control wherever they roost, Samantha. Jacob undoubtedly took an interest in you because you are my childe, as a possible means to influence me. Do not hold it against him. I would have done the same.\" And she currently did so, in a way. \"But since then, you have made it clear he is quite interested in you.\"\n\n\"All the sex--\"\n\nAntoinette put up her hand. \"It it not the sex, Samantha. You have made it clear he is interested in you, because of the topics you have shared with me. Jacob does not speak of Minerva lightly, and yet you have told me that he has, indeed, spoken of her to you?\"\n\n\"Y-Yeah, he has.\"\n\n\"He's spoken to you of his tastes?\"\n\n\"Yeah. He likes jazz.\"\n\nAntoinette grinned and relaxed back in the car seat. \"Oui. He does.\"\n\nThe two grew quiet as the large car drove along. The street grew darker as they grew further from the entertainment and business districts of South Side, and quieter, the crowds eventually vanishing. Soon, the car came to a stop at the end of a driveway, and Samantha's old home awaited them.\n\n\"Are you ready?\" Antoinette said.\n\n\"I... I am. Let's go.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "slow",
        "violent",
        "vampires",
        "werewolves",
        "paranormal romance",
        "suspense"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-08-ch-10"
}