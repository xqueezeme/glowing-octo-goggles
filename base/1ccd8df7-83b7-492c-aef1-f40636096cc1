{
    "title": "Sketching Sophie",
    "pages": [
        "I glanced up at the man, then back down to my sketchpad. I hashed in the shadows on his cheek, the line cast by the frame of his glasses, the dark circles under his eyes. My drawing was not a likeness; it came closer to a caricature - the tired doppelg\u00e4nger of this nameless middle-aged person, hunching over in front of his MacBook with his coffee removed to a safe distance. Forgettable in so many ways. But the light through the cafe windows had caught him - the backlighting made him somehow more real, more present - and thus, interesting.\n\nStroke by stroke I caught something of him, pinned it to paper.\n\nThen he shifted and the scene shattered. I willed him to stay still, but he glanced at his watch, pulled a face, collected his accoutrements and stood to go.\n\nI set aside my pencil and evaluated the partial portrait, sighing ruefully. I knew I wouldn't complete it; it would join the many others in the mostly forgotten darkness of my storage box.\n\nI packed my pencils and pad back into my bag. I still had time; some thirty minutes before I needed to be back at work. I picked up my tepid coffee, stepped out into the street and looked up, considering the state of the day. It was still clear, still bright, and the dome of St Pauls Cathedral beckoned to me.\n\n-\n\nThe north-east edifice of the Cathedral raked the sky above me. I'd roughed in the architecture of the wall, and was now trying to capture the brooding manner in which the building loomed over London. Fluffy white clouds drifted into view over the small section of visible dome high above me; I paused and watched one meander through my patch of sky. Then I winced, stretched, and took a moment to glance around me.\n\nA young woman walked into the churchyard from the square. She sat down on the bench next to mine, tucking her shapely legs up against her. She pulled a battered paperback out of her equally-battered shoulder bag, and tucked a rogue waft of her amber-gold hair behind her ear as she settled against the wooden backrest.\n\nI couldn't help myself. Something primal compelled me. I recognised the urge, knew I would never forgive myself if I ignored it. \n\nI selected a new pencil, turned to a fresh page, and started to draw the perfect arcs of her body. I captured the way she'd clamped the tam-o-shanter down to control her glorious mane. I hinted to the texture of her boots, and to how her thigh-length burgundy coat clung to her waist and shoulders, the way the small section of cream polo-neck beneath it sheathed the curves of her slender body...\n\nAnd then I realised that she was watching me.\n\n\"I'm so sorry,\" I apologised, after a few moments of mortified silence. \"It's... a terrible habit of mine.\"\n\n\"I don't mind,\" she answered. She let down her legs, leaned forward, smiled. \"Can... can I see?\"\n\nI nodded, gestured. \"Please,\" I replied, smiling back nervously.\n\nShe joined me, perching on the bench beside me.\n\n\"Wow...\" she said, after a moment. \"That's... really good. Are you an artist?\"\n\n\"No,\" I laughed, somewhat bitter. \"In another timeline, maybe... but not in this one. Maybe in a year or two...\"\n\n\"Shame,\" she breathed. \"It's really beautiful. Um... so... do you want to finish it? I could ... I could go sit and model for you, if you'd like me to?\"\n\n\"Please,\" I murmured, captured by the warmth in her eyes.\n\nShe grinned, stood and returned to her bench. She tucked her legs up, and guided by some curious instinct she assumed very nearly the exact same pose once more - except, that was, for the small Mona-Lisa smile.\n\nThat smile. I looked down, thought. \n\nI could capture that for her. \n\nSo I did.\n\nAnd when I was done, I rolled the familiar tension out of my neck. She took that as her cue to rejoin me, and we sat in silence for a moment, looking down at the serendipitous work that I cradled in my lap.\n\n\"You're really talented,\" she said. \"Really, really good. Wow.\"\n\nI glanced away, blushing from the unaccustomed praise. Then I did something that I'd never done before - I slowly, gently tore the sheet free from my pad, and offered it to her. Her eyes widened and she hesitantly reached out, then paused.\n\n\"Sign your name?\" she begged me. \"Please? I've never had anyone draw me, and I'd love to have your name on it? Please?\"\n\nSo I signed it, a neat cursive *Kay Jackson* slanting over the bottom right corner. She took the sheet reverently from me, and tucked it carefully between some papers in a plastic binder that she wrestled from her bag.\n\n\"Thank you,\" she said softly. She paused, as if she wanted to say more. Then she shook her head slightly and stood. She walked off, glancing back once, thoughtful. I watched her until she rounded the corner, then sat back with a sigh. I looked down at my forgotten and now deeply uninteresting study of rocks. Then I stood and set off for the office. Time to be an adult once more.\n\n-\n\nI couldn't believe that I'd given the drawing away. In all my reams of works, my books and pads and napkin sketches, there was one drawing as good - a boy and his model boat at Battersea Park. I had captured him perfectly. This had been my second masterpiece... and I'd given it away. I could have framed it, hung it on my wall, and people would have assumed it was the work of a master - as good, as wondrous as a modern-day Raphael. \n\nInstead, I'd handed it away to a beautiful girl who'd merely had to spend twenty minutes sitting still while I drew her. \n\nI sighed, rolled over, stared at the faint square of street light surrounding my blackout blinds. \n\nI was being unfair. Her hand had been shaking as she'd accepted it; clearly she'd been deeply affected. I hoped she'd frame it and display it, that it wouldn't be tucked away somewhere and forgotten, or worse, discovered years later as a vaguely-recalled memento of her youth.\n\nI rolled over again, closed my eyes, and curled my legs up, hunting warmth and oblivion.\n\nSleep came eventually, and morning followed in its usual cruel way. I lurched to the tube station, watching my fellow commuters as they fought their way through London's daily salmon run. I studied them all, but none compelled me like she had, so I merely aped them and made my way to the office, where I prayed to the resurrection of the body with a double espresso which carried me through my morning meetings. Spite and stubbornness kept me going until lunchtime and my abortive date with St Paul's churchyard and the north-eastern wall.\n\nI sat on my familiar bench, glaring up at the stones. The light was wrong. Hopeless. Execrable. I fought the childish urge to scream, to tear the page out of my notebook, scrunch it up and fling it away. \n\nInstead, I closed my eyes and tried to find some sort of calm. I regretted the drawing. I regretted giving it away. But I knew that I'd had no choice - the childlike wonder, the joy on her face had made it impossible for me to do anything else but give it to her. \n\nFootsteps approached, and I sighed as I heard someone sit down. I hoped that it was just a fellow city worker, and not a nutter I'd have to try to extricate myself from. I took a breath, and opened my eyes.\n\nIt was her.\n\n\"Hello,\" she said, with a small smile.\n\n\"Um... hi...\" I answered, feeling strangely weak and unexpectedly happy. \n\n\"I'm glad you came back,\" she said softly. \"I... saw you sitting here and came over. I hope that's ok?\"\n\n\"Of course.\"\n\nShe looked down at the aborted architectural study in my lap. \"What, no young girls to draw today?\"\n\n\"Nobody inspired me. And the light is all wrong for the church today. So... I've given up in despair and I'm just sitting and thinking, I guess.\"\n\n\"Do you come here often?\" She leaned back, turning towards me. Her eyes were a rich, almost honey brown, and it took a moment for me to remember she'd asked me a question.\n\n\"I try to... it's a beautiful oasis of calm, if you can ignore the tourists...\"\n\nShe grinned. \"And the nutters.\"\n\n\"They're mostly on the west side of the cathedral, though,\" I continued. \"They come for the stairs and the interior. I'm here for... well, nothing at the moment. Call it a sanity break from work if you will.\"\n\n\"Where's work?\" She tilted her head slightly, watching me.\n\n\"Just south of here, near Cannon Street. We have space in the WeWork there.\"\n\n\"Hello, fellow local,\" she said. \"Oh. I forgot to introduce myself. I'm Sophie.\"\n\n\"I'm Kay... but then you already know that.\"\n\n\"Thank you, by the way. I've never owned anything of which I'm so proud.\"\n\n\"Oh... I... I'm glad.\" I could feel myself blushing, and I glanced down at my lap again.\n\n\"So... oh gosh,\" she said softly. \"So... I know we just met, and I'm a nutter, and thus this is going to sound weird, but... some friends of mine and I are meeting tonight for drinks. It's right near you. The Do Not Disturb?\"\n\n\"I... think I've walked past it.\"\n\n\"It would be awesome if you could come?\"\n\n\"Um...\"\n\n\"I'm a writer. Of sorts. Ella's a singer. Danny's an amateur magician. We're short a forth member of our band. Come on. You'd fit right in. We're completely harmless. Please?\" she added, fluttering her eyelashes at me.\n\nI couldn't help myself. Laughing, I nodded. \n\n\"Great. We'll be there from 6pm. See you there... Kay.\"\n\nShe stood and smiled down at me, then turned to go. She turned once, and I felt a strange lightness of being when she waved.\n\nThe afternoon crawled slowly by; I fuelled myself with caffeine and a croissant that I liberated from the common area. Dull day, dull work, dull mid-afternoon meetings that made me seriously contemplating gnawing off a limb to escape. Momentary flashes of her smile kept me sane until it was time to pack up and escape. Despite my misgivings and my general dislike of social events, I made my way to the Do Not Disturb.\n\n-\n\nI pushed my way through the door and then stopped, awed. The interior of the bar looked like it had been lifted directly from the thirties, with a deep burgundy ceiling spotted with amber art-deco lamps. The opulent interior was scattered with leather booths and elegant tables populated by beautiful people. I felt extremely underdressed, but drew some comfort from the many other city women dotted around the room in suits, jeans or leggings. \n\nI slunk quietly to the bar, ordered a Gin and tonic from the immaculate barman, and fought down the powerful urge to draw the other patrons as I slid onto a stool. I sat, sipping my drink, and spent an enjoyable moment or two appreciating the Gershwin piano soundtrack pouring softly from the bar's sound system. I stared at the lights, the shadows, and the way they softened the edges of everything so wonderfully.\n\n\"Kay!\"\n\nI felt Sophie's hand on my shoulder, and I turned to face her. \"Hello you. So glad you came. Come on,\" she added, \"we've got a booth.\"\n\nShe took my hand and led me to a corner table, where a man in a nice grey suit sat next to a tall, slender woman. \"El, Danny, this is Kay.\"\n\n\"Hello,\" they offered, and El blessed me with a smile as Sophie ushered me into a seat next to her.\n\n\"So you're the mystery artist that drew our Soph so nicely?\" \n\nI flushed and El laughed gently at me. \"Shy, isn't she?\"\n\n\"Be nice to her, and maybe she'll draw you too,\" Sophie answered. \"I showed the drawing to all of them, sorry. I couldn't resist,\" she said in an aside to me.\n\n\"Nothing like cheating to get the first official portrait,\" El observed.\n\n\"Losers weepers,\" Sophie smirked.\n\n\"I'd say cheaters never prosper, but that would be patently false now, wouldn't it?\"\n\nSophie stuck out her tongue and then grinned behind her wineglass. \n\n\"So I'd like to call this meeting to order,\" Danny announced. \"First item on the agenda - alcohol. Second item, more alcohol. \"\n\n\"I can only do two,\" El interjected, \"because... drum roll please... I've got an audition tomorrow!\"\n\n\"Oh my god, finally!\" Sophie squealed. \n\n\"Congratulations, El,\" Danny cheered. He leaned in and kissed her cheek. \"That is the best news I've had all year.\"\n\n\"Don't jinx it, don't jinx it,\" she laughed. \"But someone connected heard my last performance and pulled some strings... so I need to be good tonight so that I'm at my best tomorrow.\"\n\n\"To El. May this be the start of great things.\"\n\n\"To Ella,\" Sophie agreed, raising her wine.\n\nAnd from there, drinks followed in quick succession as the gang dug into my past, worked out that I was single and lonely and bored at work, and, after liberating my phone and rooting through the photos of my work that I kept on it, that in their opinion I was officially their new artist in residence. They discovered that my dream was a house with a south-facing study in which I could draw and paint, and Sophie smiled at me as she confessed to the same longing; for somewhere that she could have wall-to-ceiling shelves of books that she loved.\n\nI felt curiously welcome, curiously at home, curiously content in my seat across from her.\n\n-\n\n\"My mouth tastes foul,\" I complained. \n\n\"Schnapps. Sorry,\" Sophie said. \"It always happens. One drink turns into many. Danny is a terrible influence. They like you.\"\n\n\"What?\"\n\n\"El and Danny. They have declared you to be one of us, you are now unable to escape our clutches. We own your ass.\"\n\nI snorted and she laughed.\n\n\"Oh god, I'm going to feel horrid tomorrow.\"\n\n\"Need help getting home?\"\n\n\"Nah. Just have to stumble to the Northern line, then south to Clapham.\"\n\n\"North or Common?\"\n\n\"Common.\"\n\n\"Snap. Same as me,\" she said, surprised. \"Come on, it's getting cold, let's go.\"\n\nShe took my arm and we staggered to Bank station, down the escalators and onto a train. We found two seats and collapsed into them, Sophie giggling slightly. As we set off she glanced at me, smiled, and laid her head against my shoulder. \n\n\"Sophie?\"\n\n\"Using you as a pillow,\" she explained. \"Always wanted one on the tube. Shush, pillow, Sophie is sleeping.\"\n\nI snorted, but didn't move. The scent of her shampoo surrounded me, and after a moment I closed my eyes and leaned my head against hers as we rattled and shrieked our way southwards. The strange ache in my chest was back, and I didn't want to disturb her for the world.\n\n-\n\n\"Sophie?\"\n\n\"Mm?\"\n\n\"Our station is next.\"\n\n\"Heartless. I was so happily asleep.\" She sat up and yawned, then shot me a small smile. \"Thanks for being my pillow.\"\n\nWe exited the station and stood for a moment on the pavement. Then Sophie linked arms with me again, and we stepped off, our gaits synchronising naturally within a couple of steps.\n\n\"Where are you?\"\n\n\"Nelsons row.\"\n\n\"It really is a small world. You could throw a stone and hit my mum's place.\"\n\n\"London's like that.\"\n\n\"True,\" she smiled. We walked on in silence for a minute or two. \"Well,\" she said softly, \"this is you. Drink some water, Kay. What time do you leave for work?\"\n\n\"Seven am or thereabouts... why?\"\n\n\"Want some company?\"\n\n\"You know what... that would be really nice,\" I said softly.\n\nShe smiled. \"See you tomorrow then.\" She took a breath. \"Hug?\"\n\nI nodded, tongue-tied, and she stepped forward to give me a laughing squeeze. Then she turned and walked off, hair flouncing gently with every step. Two lampposts on she turned and waved, and I raised my arm and waved back, knowing in my heart that she was smiling.\n\nThen I sighed out the breath I'd been holding and turned for home.\n\nI let myself in quietly, walking quietly out of habit to avoid disturbing my flatmate Sue. I drank some water, then crept upstairs to my room. I was wide awake, too keyed up to sleep, and I knew I had to capture her on paper. So I sat at my easel, tacked a fresh sheet of paper to the board, and started to draw, wild free slashes pinning down the essence of her, of Sophie, as she turned and waved, backlit by the streetlights of Clapham.\n\nIt was early by the time I crawled into bed.\n\n-\n\n\"Hello, you.\"\n\nShe stepped away from the nook she'd been sheltering in, and smiled up at me as she took my arm in hers.\n\n\"My mouth tasted like something peed in it,\" I grumbled. \"I can't believe how rough I feel after one night out. All your fault.\"\n\n\"It was a good night,\" she agreed with a grin. \"Fun. I enjoyed it.\"\n\nWe swiped our Oysters and made our way down to the platform. The tube was rammed, and Sophie genially forced a tunnel for us onto a carriage, where we stood, pressed in a corner, chatting and laughing as we shook and shuddered our way into the city. Several sharp bends or applications of brakes pushed her into me; each time she laughed up at me, eyes sparkling, and each time I felt an unfamiliar catch in my breath, a fleeting weakness.\n\nIt was with no small measure of regret that I said goodbye as we reached street level at Bank station.\n\n\"Wait,\" she said. \"Don't just run off. Give me your number, so we can meet up for lunch later.\"\n\n\"That... I'd really like that, Sophie.\"\n\n\"Soph,\" she smiled. \"Call me Soph.\" She gave me a brief missed call, and smiled as I glanced down at my battered Samsung. \"Gotta go,\" she sighed. \"Busy period at the mo. Big clients, angry bosses... So, half past twelve?\"\n\n\"Where?\"\n\n\"Meet you at the churchyard and we can take it from there?\"\n\n\"It's a date.\"\n\n\"If only,\" she said softly.\n\n\"What?\"\n\n\"Nothing. See you later, Kay!\"\n\nShe smiled and walked off, and once more I found myself compelled to watch this beautiful, fae creature with her golden halo as she walked away.\n\nThen I sighed, and turned, fighting my way to the office. I begged an aspirin off a colleague, diluted the blood in my caffeine stream, and then started on the newest round of designs requested by Soulless Marketing Gimp, as I'd uncharitably labeled him. For once the morning passed without drama, and I looked at the clock one or twice, each time surprised at how time was for once fleeting.\n\nMidday arrived, and my phone buzzed. \n\n- Can't make lunch :( - from Sophie.\n\nI thought for a moment. It was a quiet spell, half the company had disappeared to Spittalfields Market to raid a pop-up steak stand. \n\n- I will bring you something. Where do you work? -\n\n- Seriously? Oh wow. My hero. 2a Friar street, near Blackfriars. Ping me and I'll run down. -\n\nI queued at the corner cafe and bought two coffees and a brace of pain au chocolat. It was a short walk to Sophie's work, and I sent her an - I'm here - as I turned into the street. A few moments later, I smiled to myself as she dashed out into the street, spinning on her toes as she craned her head to look for me.\n\n\"Minx,\" she laughed, as I handed her her lunch. \"Thank you. Meetings everywhere today.\"\n\nShe put an arm around me and squeezed me to her, then smiled up at me. \"Drinks after work? To say sorry for bailing on you?\"\n\n\"I was... going to go home tonight.\"\n\n\"Please, Kay? Just one teeny, tiny, little drink with moi?\"\n\n\"Well... ok. If you insist...\"\n\nShe flushed, victorious. \"Same time, same place? Do Not Disturb? You seemed to like it.\"\n\n\"Ok. I'll... see you there.\"\n\n\"Bye, Kay,\" she said with a smile. She ducked back indoors, turned, and blew me a kiss. I blushed, spun around, and stalked off towards the churchyard to sit and think.\n\nSix pm found me perched at the bar, nursing my Gin and Tonic. I looked around at the people, drinking in the atmosphere, the soundtrack, the gloriously romantic lighting. I reached down into my bag, retrieved my pad and my pencils.\n\n\"Do you mind if I draw?\" I asked the barman, quietly.\n\nHe smiled at me. \"Go ahead,\" he answered.\n\nAnd so I did. I tried to capture the sense, the subtle emotion of the room, the soft susurration of conversations half-heard around me, the way the gentle light made angels from humans. My drawing hinted at shapes, forms rather than faces, and I realised I was capturing something akin to a dreamscape rather than reality, stylised and beautiful in its own way...\n\nA touch, cool skin against mine, a whiff of scent. I took a breath, exhaled, continued to draw as Sophie leaned over my shoulder, her cheek against mine, watching.",
        "\"You're so talented,\" she observed, after some time.\n\n\"She really is, she's a joy to watch,\" agreed the barman. \n\n\"Stop it, both of you,\" I murmured, flushing.\n\n\"What was that?\" Sophie asked, nodding to my drink. \"G&T?\"\n\n\"It was,\" the barman replied, reaching for a glass.\n\n\"Two of those then please,\" she said with a smile, as she climbed onto the stool adjacent to me and leaned her chin on her hand.\n\n\"Two?\" I glanced at her, suspicious.\n\n\"One for me, one for you,\" she replied, innocent.\n\n\"I already have my one drink.\"\n\n\"One drink by yourself, you promised to have one drink with me. Don't blame me that you started early,\" she said, tossing her mane, amused.\n\n\"Sophie...\" I whined.\n\nShe accepted the drinks from the barman, and slid to the floor. She linked her arm with mine and applied gentle pressure. \"Come on, Kay. Let's find a booth.\"\n\nAnd against my amused, half-hearted protests, she removed me from my stool and led me to a corner, where she sat down next to me, body pressed to me as if we were in a jammed tube carriage despite the empty space around us.\n\nAnd for once in my life I felt no desire to shift away.\n\n-\n\n\"Oh god you are evil.\"\n\n\"Sorry not sorry,\" she cackled.\n\nWe stumbled up to street level, and cowered behind a bus stop as a gust of wind blew through. \n\n\"Fuck it's cold,\" Sophie complained. \"Come on then!\"\n\nWe set off, our gaits merging naturally, Sophie laughing raucously next to me as another gust blew through and we staggered against it.\n\n\"Sophie, shh, you'll wake everyone up!\"\n\n\"The night is young,\" she sang, badly out of tune. I cringed, laughing. \"Sophie!\"\n\n\"Wake up everyone, wake up, wake up!\" she sang again, louder and even more out of tune if that were possible, and I had to lean against a wall to avoid falling over at the helpless giggles that took me. \n\n\"Oh, oh, you are strange,\" I hiccoughed, trying to recover some sort of control.\n\n\"Mad as a broken clock, me,\" she agreed, as she draped an arm around me and levered me up. \"Come on Kay, it's cold and I'm going to start peeing icicles if I don't get home soon.\"\n\nLaughing like hyenas, we staggered to our crossroads, where she gave me a long hug. \"See you in the morning, strumpet,\" she said with a lilting laugh. \n\n\"Strumpet?\" I protested.\n\n\"Tart,\" she amended. She looked up at me, then smiled and shook her head. She turned and walked away, and I huddled into my coat, waiting for her wave.\n\nThen I made my way home, snuck indoors, somewhat scandalised by and yet still rather envious of the faint thumps and moans coming from Sue's room.\n\nI drank some water, set my alarms and named Sophie one or two unmentionable names for the hangover that I knew was coming. I made myself some cereal for supper, and ate it while staring at the peeling kitchen wall. Then I snuck upstairs, tiptoed past Sue's harlot cave, and closed my door behind me.\n\nI changed into my pyjamas and lay, restless, my head full of her, of the image of her sitting at the bar, chin on her hand, smiling that small Mona Lisa smile at me. Thinking of the shape of her, the way she'd come to fill my world, my thoughts so profoundly. As a lonely, arty misfit with no local friends, the warmth she and her coterie had extended to me felt like a glimmering lifeline in a dark storm.\n\nI fell asleep dreaming of her smile.\n\n-\n\n\"I am not talking to you, and neither is my liver.\"\n\nShe smiled up at me. \"And a good morning to you too.\"\n\nI shuddered. \"I feel like death.\"\n\n\"You look better than death.\"\n\n\"Not by much, I'm willing to bet,\" I said, as we made our way down to the platform. Somehow we found two unoccupied chairs, and Sophie took up her place with her head against my shoulder as we shook and juddered our way into the city. And once again, I felt a deep regret as I said goodbye and turned to go.\n\nShe caught my hand. I stopped, arched a curious eyebrow.\n\n\"Kay?\"\n\n\"Yes?\"\n\n\"Lunch today?\"\n\n\"Will you be able to make it this time?\" I said, archly.\n\n\"I'll try,\" she said, with a small smile. \"Meet at Francesco's, on Ludgate hill?\"\n\n\"Ok. Half past twelve work?\"\n\n\"Yeah. I'll... see you there.\"\n\n\"See you later, Soph.\"\n\nI walked off, and this time it was me who turned to wave, and she who stood watching.\n\nSheer bloody mindedness got me through the morning, with close air support provided by a battalion of the roughest, toughest espressos the office had to offer. Noon rolled slowly, blessedly through, and I stumbled down the stairs to make for my lunch date with Sophie.\n\nThe street outside was bright and harsh, and I fished my dad's battered aviators out of my bag to help me. It was a short walk, but my head was pounding by the time I found the cafe, which was tastefully decorated with flowers, stock photos, and an art installation titled \"Sophie, slumped at a corner table\".\n\n\"I just want you to know,\" I said, glaring down at her, \"that my liver has given formal notice that it intends to secede.\"\n\nShe laughed up at me, then winced. \"Ow. Jesus, I have a headache. I am dropping gin. It is vile stuff.\"\n\nI flumped down next to her. \"From now on, we shall stick to Absinthe.\"\n\nSophie made noises not dissimilar to a cat coughing up a hairball, and I laughed at her.\n\nLunch passed in a pained daze, our panini and coffees giving us punctuation for our stream of consciousness conversation.\n\n\"What are your plans tonight?\" she asked, softly, as I stood to go.\n\n\"Home. Brahms and Mendelssohn and my paints.\"\n\n\"Multitalented girl.\" She looked up at me, hesitant. \"I don't suppose... \"\n\n\"What?\" I asked, suspiciously.\n\n\"I don't have any plans tonight. Could I... twist your rubber arm for a drink after work?\"\n\n\"Soph...\"\n\n\"One drink, Kay? I swear, pixie honour.\"\n\nI narrowed my eyes at her. Sue would be out, I'd have the entire house to myself for one rare evening...\n\nSophie fluttered her eyelashes at me, and I knew I'd lost.\n\n\"You are evil,\" I sighed. \"One drink. Then home, Brahms, bed.\"\n\nShe smiled and mouthed \"thank you,\" and I blushed, trying not to smile.\n\n-\n\n\"Oh god oh god why do you do this to me,\" I groaned.\n\n\"Sorry, I don't remember holding you down and pouring booze down you,\" she slurred.\n\nWe staggered, steering home only by average, Sophie under my arm and propping me up. We came to a junction and stopped to pause for breath. \n\n\"I had a really nice night tonight,\" Sophie said softly.\n\n\"It's been fun but I need that organ transplant now,\" I said. \"And possibly a new brain in the morning.\" \n\n\"Mm.\"\n\n\"Oh god, Soph, don't let go of me,\" I begged as she released me in order to tuck away an errant waft of hair. \"I'll fall over with the other leaves and won't be able to get up and they'll sweep me away...\"\n\nShe laughed. \"You're a flower, not a leaf, pumpkin.\" she said as she caught my arm again.\n\n\"Squash.\"\n\n\"What?\"\n\n\"I'm far too weird to be a pumpkin. I'm a squash. Or a calabash. A gourd.\"\n\nShe looked at me, shaking her head. \"And they call me mad,\" she observed.\n\n\"S'true.\"\n\nWe stood for a moment, staring at one another. Then she shook her head, gently, snapping herself out of some reverie.\n\n\"What is it, Soph?\"\n\n\"Just like being out with you,\" she said softly.\n\n\"I've had fun. It makes a lovely change to my usual routine.\"\n\n\"Kay?\"\n\n\"Mm.\"\n\nShe took a breath, then pulled me to her. She stood up on her toes and kissed me, full on the lips. \n\nI staggered, steadied myself against a railing, heart suddenly hammering in my chest.\n\n\"Soph, what... what are you doing?\"\n\n\"I would have thought that was obvious,\" she said softly. She stared up at me, frowning. \"Kay?\"\n\n\"Feeling really unsteady,\" I whispered. \n\n\"Oh. Ok. I'm sorry... I didn't... Come. Let's get you home.\"\n\nI could instantly tell I'd hurt her, I could feel how stiff she suddenly was, and it felt like a red hot knife was twisting in my heart. I groped for her, desperate to explain.\n\n\"Soph, please...\"\n\n\"Not now, Kay, let's get you home.\"\n\n\"Soph, I've never been with anyone!\" I gasped.\n\nShe stopped, turned to me, incredulous. \"What? Kay? What's wrong? Oh. Oh Jesus. Kay... no, please, please don't cry, not here, not now. Come. Come, my mum's house is nearby. Come, sweetie. Lean on me, lets get you inside and warm.\"\n\n\"I'm sorry,\" I sobbed.\n\n\"Shh now, Kay. Shh.\"\n\nShe steered us, supporting me, down a series of roads, through a gate, up a short flight of stairs, and in through a battered door. She kept an arm around me as she helped me out of my coat, and my shoes, then guided me to the kitchen, where she installed me at her kitchen table.\n\n\"I'm sorry,\" I hiccoughed again, scrubbing at my face.\n\n\"Stop. Stop it, you stop it right now,\" she hissed low and furious. \"Stop it or I'm going to scream.\"\n\nI gulped, swallowed. She went down on a knee, and hugged me hard. \"This is on me. I've treated you abominably. I thought... I thought you were into girls. I'm sorry for fucking things so badly.\"\n\n\"I've... never been into anyone,\" I shuddered. \"Nobody was ever... interested. I've never... you're the first... I'd never even been kissed till you did that...\"\n\n\"Oh Jesus, what the fuck,\" she whispered. She hugged me harder. \"Christ, Kay, I'm so sorry for doing this to you.\"\n\n\"Soph?\" I managed after a while.\n\n\"Yes?\"\n\n\"Can I... have some tea?\"\n\nShe brushed her face on a sleeve, then sighed. \"Coming right up.\"\n\n\"Please don't burn yourself,\" I said softly.\n\n\"I'd deserve it,\" she said, bitter.\n\nShe boiled the kettle and stood, hunched and closed off, staring out of the window. Then she shook her head, steeped my tea, and brought it to me with a wan smile.\n\n\"Here,\" she said softly. \"Listen, Kay, I... I don't think you should go home right now. And I'm too drunk and far too fucked up now to make it home after walking you home, so... do you want to stay the night?\"\n\n\"What?\"\n\n\"No funny business,\" she added, with a wry grin. \"I have a day bed in my room that we can fold out for you, and there are blankets enough for both of us in the linen cupboard.\"\n\nI looked up at her, and nodded, not trusting myself to speak.\n\nI spent a long, lonely, confused night listening to her breathing, as a band of hopelessness ratcheted tighter across my heart. Once, I thought I heard her crying softly, but I couldn't be sure, and I was too unsettled to reach out.\n\nSomehow I eventually fell asleep.\n\n-\n\n\"Morning, mum. This is Kay. Kay, mum.\"\n\n\"Is this Kay who did the drawing?\"\n\nSophie's mum looked like an older copy of her daughter, and she smiled warmly at me as I admitted to being Kay who did the drawing. She nodded at the kitchen wall, where my sketch of Sophie hung in pride of place.\n\n\"Nobody's ever captured her like that,\" she said softly. \"Sophie breaks cameras. So this is something marvellous to have. You're really talented, Kay.\"\n\nI mumbled my thanks, blushing.\n\n\"Kay ran afoul of my penchant for gin, Mum,\" Sophie said as she started rattling pots onto the stove. \"I installed her in my day bed to prevent her coming to grief.\"\n\n\"Sophie Williams, fie. I've told you before, guests get your bed and you get the day bed. Honestly,\" she continued with a wink to me, \"You're incorrigible.\"\n\n\"Love you too, mum,\" Sophie said, sticking out her tongue and then laughing. \"Mum thinks I'm completely uncivilised.\"\n\n\"Certainly not socially adept,\" Sophie's mum agreed. \"Lost cause, that.\"\n\nI felt like an interloper in what was obviously an intense mother-daughter bond, but as Sophie started to cook egg and bacon and sourdough toast I felt myself relaxing somewhat. Sophie's mum poked and prodded at me, and before long she'd decided that she approved of me. Behind her, Sophie gave me a grinning thumbs-up.\n\nI sat, still somewhat raw, unsure after the previous evening. I desperately needed to talk to Sophie, but there was no time or space, not with her mum there, and so I did the best I could at pretending to be a social creature, despite the hard, tight pain in my chest, and the conflict that raged in me every time I looked at her.\n\nI think Sophie knew, because she sat next to me as we ate the breakfast she'd made us, and the gentle pressure of her leg against mine gave me strength.\n\n-\n\n\"Bye girls, have fun!\"\n\n\"Bye mum\", Sophie called. \n\nShe closed the door, took my arm and we set off, gaits falling into pattern in a way I now thought of as normal. Sophie steered us towards the Common, and I was content to let her lead. I was intensely nervous, unsure of how to break the horrible silence that stretched out as we walked slowly between the tall oak trees.\n\n\"Where are we going?\" I asked, softly, eventually.\n\n\"Nowhere and everywhere. It feels like we need a moment of sanity. Some air.\"\n\nShe glanced over at me, a frown creasing the smooth skin of her forehead. \"I know it's a stupid question, but... are you ok, Kay?\"\n\n\"Not really,\" I said softly. \"Not very much at all.\"\n\nShe kicked an acorn, sending it skittering off into the grass. \"I'm so fucking sorry for last night. I really fucked it up. I'm sorry for misreading everything so badly.\"\n\nWe walked on in silence a bit longer. Then Sophie sighed and steered us to a bench. She helped me sit, then sat down next to me, tucking her legs up under her once more.\n\n\"Say what's on your mind,\" she said softly. \"Don't hold back.\"\n\n\"I'm... \" I sighed, took a breath, started again. \"Christ... where do I even start? I've never been... noticed. Never been anything but the tall, awkward arty misfit that nobody sees or wants to see. School... school was really lonely for me. I didn't fit in.\" I stopped, sighed. \"University was easier. I found a small circle of other lost souls, formed some friendships. They accepted me for who I was. Or who they thought I was, at least,\" I sighed again. \"I didn't set out to paint a hex on my back but I may as well have. At a certain point it just became easy to be alone. I told myself... I told myself it was by choice...\"\n\nSophie tilted her head to one side. \"You've really never been with anyone, Kay? Nobody?\"\n\n\"Not even a kiss until now,\" I said, closing my eyes. My chest felt tight, and I shuddered as Sophie leaned against me. \"Does your mum know?\" I breathed. \n\nSophie sighed. \"Yeah. Mum knows. She was the first person I told when I worked it out. I was fifteen, and scared. She set me straight, told me to be me as hard as I could be, and that she'd never not be proud to call me her daughter. I could never have come out without her support. School...\" she shook her head. \"There was a wolf-pack of girls at my school. They got wind another girl was a lesbian... she had to leave. I'd never have made it without mum. As you said, Uni was easier, more adult, more accepting. School was hell.\"\n\n\"I'm sorry for last night, for how I reacted. I'm sorry for hurting you.\"\n\n\"You didn't hurt me, Kay, I hurt myself. I misread things.\"\n\nI pulled my knees up to my chest and held them, swallowing hard. \"That's not... I don't...\"\n\n\"Kay?\"\n\n\"I don't know who I am or... what I am,\" I said, shivering. \"I don't know who or what I want. All I know is...\"\n\n\"What?\" she prompted softly, after a while.\n\n\"You make me feel breathless. Lightheaded. Excited. Terrified. I don't know what this is. I've never felt anything like this. Never.\"\n\nShe shifted, looked at me, considered me.\n\n\"Kay, I'm going to ask you an extremely serious question.\"\n\n\"Ok,\" I breathed.\n\n\"Do you like spending time with me?\"\n\n\"Yes, more than anything,\" I whispered.\n\n\"Do you want to carry on spending time with me?\"\n\n\"Yes.\"\n\n\"Do you want me?\"\n\nI nodded, too scared to speak.\n\n\"Ok,\" she breathed softly. \"Ok, I'll take that.\"\n\nShe leaned in against me, and I closed my eyes as she gently laid her head against my shoulder and simply stayed there, quietly breathing.\n\n\"Come,\" she said, after a while. \"Let's get you home.\"\n\nI sighed. \"Can't we just stay here, where it's uncomplicated?\"\n\nShe snorted, and I could feel the laughter that shook her. \"Life with me is anything but uncomplicated, Kay.\"\n\n\"Promise?\" I whispered, after a while.\n\nShe lifted her head and looked at me for a moment. \"Come,\" she said, as she kissed my cheek. \"I'm going to do things as slowly as I know how, and you are going to tell me the minute anything I do makes you uncomfortable.\"\n\n\"Okay.\"\n\n\"I mean it. I'd never forgive myself if I chased someone as special as you away due to my impetuousness.\"\n\n\"Special? Me?\"\n\n\"Oui,\" she breathed, as she reached up to gently touch my cheek.\n\nShe walked me home, gave me a long hug goodbye and another chaste kiss. \"God, I love your eyes,\" she said, softly. \"I could drown in them.\" She turned and set off homewards. I waved to her when she glanced back, and then let myself into the flat, feeling off-balance, weak and yet somehow strangely alive.\n\nI climbed the stairs to my room, rummaged for my paints, tacked a sheet of card to my easel, and started to paint. I worked quickly and accurately, desperate now to capture the vision of her from the night before, smiling at me from the barstool adjacent to me. Slowly she took form, and as she did, I knew, knew that this would be my best work, that I had captured the essence of her beauty, of her pose, her smile, everything about her that was now becoming so precious to me.\n\nAnd then, as the day faded to deep evening, I sat back, drained. The work was incomplete, but I had enough of it down that I could afford to rest without fear that I'd lose the sense of her.\n\nMy phone beeped, and I sighed as I stood up to stretch.\n\n- You're very quiet -\n\n- I've been painting - I replied.\n\n- What have you been painting? -\n\n- It's a secret. You'll have to come and see tomorrow. -\n\n- Now I'm really curious... -\n\nI smiled as I lay down on my bed and dialled her.\n\n\"Curiosity killed the cat, you know,\" I said by way of greeting.\n\n\"Can't blame me, I've been missing you all afternoon, and have exhausted my ability to give you space.\"\n\nI smiled again. \"Sorry, I was answering the call of my muse.\"\n\n\"Tell that bitch she's overdue at mine, I haven't written a thing worth committing to paper in the last month.\"\n\nI rolled onto my side. \"I'm sorry for spazzing out on you.\"\n\n\"You had every reason to,\" she returned softly. \"Most girls would have run, screaming, or would have punched me. You just needed time to think.\"\n\n\"Well, I wish you were here right now. I miss... I miss the lightness of being you bring me.\"\n\n\"It's a good thing I'm not there if you're going to start talking like that,\" she said after a moment.\n\n\"Why?\"\n\n\"Because I'd struggle to keep my grubby paws off of you.\"\n\nA zing, a tingle; I took a breath.\n\n\"Kay?\"\n\n\"Sorry, just spazzing out again.\"\n\nShe laughed, soft and throaty. \"You are delicious when you do that.\"\n\n\"Stop it,\" I whispered. \"You're making me blush.\"\n\n\"I'd make you more than blush if I could,\" Sophie breathed. \"Oh, the things I'd do to you.\"\n\nA ache in my tummy, I felt myself squeezing my legs together.\n\n\"Kay, you're very quiet all of a sardine.\"\n\n\"Just... feeling really strange. Weak, giddy...\"\n\n\"You ok?\"\n\n\"Yeah, it's just, your voice is giving me goosebumps and it's so nice.\"\n\nShe chuckled. \"Well, I'm flattered... but then, you're not able to see what I'm doing right now.\"\n\nI swallowed. \"What... are you doing?\"\n\n\"Not going to tell you,\" she breathed, a strange catch in her voice. \"Don't want to scare you off...\"\n\nAnother shiver down my spine, another little gasp for air.\n\n\"Kay,\" she breathed. \n\n\"Uhuh.\"\n\n\"Do you ever... touch yourself?\"\n\n\"No,\" I said, with a shiver. \"Not for... years...\"\n\n\"Why not?\"\n\n\"Never felt the... need. Never... seemed worth the effort. Always left me feeling... empty I guess. Lonelier.\"\n\n\"Mm. I bet you need it now though.\"\n\n\"I don't know what this is I'm feeling...\"\n\n\"Warm? Restless? Tightness in your belly?\"\n\n\"Yes,\" I whimpered.\n\n\"Slip a hand down to yourself...\"\n",
        "\"Sophie...\"\n\n\"I'm lying here with my pyjamas open, breasts bare to the cold air, wishing you were here with me.\"\n\n\"Oh god.\"\n\n\"Yeah, you like that image, don't you...\"\n\n\"Uh huh...\"\n\n\"Touch yourself.\"\n\nAnd so, unable to resist her any longer, I slipped a finger down under my jeans, moaning at the sensations it sent over my skin.\n\n\"Oh god, Sophie,\" I panted.\n\n\"That sounds excruciating,\" she purred. \"Aching. Desperate.\"\n\nI whimpered assent as I stroked a finger over my clit. \n\n\"Christ, Kay, I wish I was there,\" Sophie groaned. \"I'd play you like an instrument, kiss you until you saw stars...\"\n\n\"Is this what... it's supposed to be like?\"\n\n\"Mostly, for me,\" she whispered. \"Though... your voice is doing all sorts of... things to... me... oh, oh, oh god...\"\n\nAnd then I lay there, flushing fiercely, as I listened to Sophie whimpering through what I guessed was an orgasm.\n\n\"Oh, fuck me,\" she whispered eventually. \"Oh fuck, that was special.\"\n\nI lay, aching, listening to her breathing. Then she sighed, a long, languid, throaty groan.\n\n\"Now you're stuck with me,\" she said softly. \"Now that I know what your voice does to me, I'm going to be all over you.\"\n\n\"I'm a mess.\"\n\n\"Maybe, but you're my mess.\"\n\n\"Promise?\" I whispered, closing my eyes.\n\n\"Oh, pumpkin, if only you knew how much...\"\n\n-\n\n\"Sue?\"\n\n\"Yep?\" she answered through her door.\n\n\"Is it ok if I take a bath?\"\n\n\"All good, Kay, I'm done for the evening.\"\n\n\"Ok, thanks. Sleep well.\"\n\n\"You too.\"\n\nI collected my small box of toiletries from my room, and locked the bathroom door behind me. Then I turned on the tap, and stripped while I waited for the bath to fill to a decent but not ridiculous depth. I felt my matted, soaked pubic hair, and shivered at the tremor that ran through my legs when I touched my still-sensitive clitoris. \n\nI picked up my razor and body wash and climbed into the bath.\n\nIt had been a while since I'd shaven my legs. I looked ruefully at them, and set to work, slowly paring them back to smoothness. Then I looked down at my straggly bush, and paused, thinking. I'd never felt the need to be bare, but my hair had been so matted, so grim after that phone call with Sophie, that I wanted it gone. So I worked slowly, methodically, freeing myself of it and gathering the remains into a ball to flush.\n\nAnd then I stood, rinsed myself with the shower head, and climbed out. I rinsed the bath, cleaned up the bathroom and slunk back to my room, where, heart pounding at the unaccustomed adventurousness, I spread my legs and used my Samsung to view myself, inspecting my mons and lips closely for any patches of remaining hair or stubble.\n\nMy lips stood smooth and pink, framed in the vee of my thighs, still moist, my inner lips and entrance visibly glistening in the cellphone's light as I parted myself with the fingers of my left hand. I looked trim and neat and nicely proportioned in my opinion. I fought down the briefest urge to touch myself, to stroke a finger down and around myself, into myself...\n\nBut I was hers now, and I wanted her to have me first.\n\nI hoped she'd like me.\n\n-\n\nI woke, languid and happy - a rarity for me. Strange, erotic dreams had chased themselves around my head - one vivid one remained, of me using Sophie as a canvas to reproduce Starry Night - her breast a star, the line of her belly transected by dark conifers.\n\nI stood, opened my curtains, bathing my room with soft natural light - a sunny Sunday morning; good light for working. I settled myself at my easel, and went to work on my portrait of her, neatening up the lines, working the golden highlights into her hair, adding the warm undertones to her skin, and then capturing the soft lighting of the room behind her.\n\nMorning became midday as I worked, massaged, eased this great work through its gestation.\n\nMy phone rang, and I put down my brush, knowing I needed to take a break.\n\n\"Hello, Soph.\"\n\n\"You've been ignoring my messages. Sad. So sad. Poor me.\"\n\n\"I was painting,\" I said softly. \"It's a lovely morning for it... and I was inspired.\"\n\n\"Mm. I forgive you,\" she laughed softly. \"Have you eaten, pumpkin?\"\n\n\"Breakfast?\"\n\n\"Lunch, silly.\"\n\nI looked at the time. \"Oh wow. No, I haven't.\"\n\n\"Shall I bring something?\"\n\nI smiled to myself. \"You know what, that would be wonderful.\"\n\n\"See you now then. Mwa.\"\n\nI sat up, stretched. I dug a worn sports bra out of my laundry hamper and pulled it on, then rummaged for a base layer top and some leggings. I pulled some fluffy yoga socks over my feet, and spent a few minutes tidying the room, trying to hide or at least disguise my normal heedless squalor. The doorbell rang, and I hurried downstairs to open it.\n\n\"Ding dong,\" Sophie said, smiling up at me. \"I come bearing gifts. Hope you don't mind, I also brought my craptop.\"\n\n\"Your what?\"\n\n\"Craptop. Crappy laptop. I thought I'd maybe spend some time writing... if you're comfortable with me in your space, that is?\"\n\n\"Of course. Come in,\" I added, shuffling aside to permit her to squeeze past me.\n\n\"I like the outfit,\" she said in passing. \"Very, very nice,\" she leered. \"Does wonderful things for that delectable bum of yours.\"\n\nI smiled. \"I was aiming for chalet chiq, whatever that is.\"\n\n\"You hit chalet chick,\" she said, grinning over her shoulder at me as she kicked off her boots. She hung up her coat, then turned, looking up at me. \"I always seem to forget how tall you are,\" she breathed softly. \"Love it,\" she added, stepping in for a hug. I returned the squeeze, stupidly pleased by the gentle compliments.\n\n\"I brought stuff to scavenge, and some wine.\"\n\n\"Wine?\"\n\n\"Uh huh. I work best with a bit of booze in me; eases the creative flow. Such as mine is,\" she said, with a lopsided grin. \"Do you have any wineglasses, or are we going to have to slum it?\"\n\n\"I have some, but they're old and mismatched...\"\n\n\"I suppose I can lower my standards for one day,\" she chuckled. \"Here, pour us a glass, and then lets head for your cave.\"\n\n\"My tower. I have light of sorts.\"\n\nShe laughed softly at me, and followed me upstairs, carrying the assortment of olives, bruschetta and cold meat she'd clearly pillaged from her home. I kicked open the door, held it open for her with my hip as she stepped through, then nudged it closed behind me. \n\n\"I like your room,\" she said, as she put her tray down. \"Light, airy... oh...\"\n\nShe stared at the painting.\n\n\"Oh my god,\" she breathed. \"Kay... is this... me?\"\n\n\"Yeah. From the other night,\" I said softly. \"It's not finished yet.\"\n\n\"Jesus Christ, Kay,\" she said, moving closer to it. \"You did this from memory? Seriously?\"\n\n\"Uh huh.\"\n\n\"Wow... I...\"\n\n\"Soph?\"\n\nShe shook her head, brushed at an eye, and gave me a bright smile. \"I don't have the words. It's beautiful,\" she said, stepping forward and up onto her toes to kiss me. \"Thank you.\"\n\n\"I'm going to work some more on it while I'm in the groove, if you don't mind...\"\n\n\"Never apologise for being you. I'll sit here and admire you.\"\n\nAnd she did, a small smile ever-present on her lips.\n\n-\n\n\"Oh god, I need to take a break,\" I groaned, sitting up after a long period of intense detailing.\n\nLate afternoon light slanted in through my window, lighting Sophie as she lay on her side, reading. She glanced up at me. \"You ok?\"\n\n\"No,\" I whimpered. \"Fuck sakes, I knew this was going to happen, but I was too in the moment and didn't want to stop.\"\n\n\"What's going on?\"\n\n\"My back. Shoulders go into spasm if I don't move enough. Ow, fuck,\" I whimpered, \"there it goes. Shit.\"\n\n\"Come here. Come lie down. I'll try to work it out.\"\n\nShe scooted over, and I stumbled over to the bed, lowering myself painfully onto my belly. \"Where is it, Kay?\"\n\n\"Left shoulder, between my shoulder blade and my spine, then up to my collarbone. You'll probably be able to see it, the muscle locks like a metal bar...\"\n\n\"This one?\"\n\n\"Yes... oh, yes, that's the fucker right there.\"\n\n\"Ok.\" She swung a leg over me, and settled down on my lower back. \"I'm going to have to use my weight, pumpkin. This will probably hurt.\"\n\n\"Just make it stoooohFUCK CUNT SHIT JESUS...\"\n\nI buried my head in my pillow, biting hard on my lip, while Sophie leaned on me, first with the palm of her hand, then with her elbow.\n\n\"Oh... oh fuck that's so sore...\"\n\n\"My mum gets something similar,\" she said conversationally as she brutalised me. \"This is sometimes all that works.\"\n\n\"Oh fuck me...\"\n\n\"Maybe later.\"\n\nI laughed then, quietly, some weird reflex caused by the extreme discomfort, and Sophie joined in after a while. Slowly the muscle eased, slowly I relaxed. Sophie switched to merely gently massaging me, while I lay there in a partial, drooling catatonia.\n\n\"This is so nice,\" I managed after a while.\n\n\"You should take your scandalously tight top off, then it will feel even better,\" she teased.\n\n\"Ok,\" I breathed, after a moment's hesitation. \"Help me...\"\n\n\"Um... really?\"\n\n\"Uh huh. Scoot off my bum a bit.\"\n\nSophie lifted herself, and I arched my back as I stripped off my base layer top. Then I reached for my bra, and pulled it up and off me, flinging it aside.\n\n\"Kay...\" Sophie said softly. \"You don't need to do that...\"\n\n\"It was pinching me,\" I replied as quietly, as I lay down once more.\n\nShe was silent for a moment.\n\n\"Every time I look to up the ante, you go and pull the rug out from under me,\" she said, a strange note in her voice. \"Who are you and what have you done with my girlfriend?\"\n\n\"Girlfriend?\"\n\n\"It's... how I've been thinking of you,\" she whispered.\n\n\"I... really like that title.\" I reached back, found her leg, squeezed it gently. \"I like how you make me feel. How everything glows when you're around. I've come to... depend on it. On you...\"\n\nShe gently, hesitantly set her hands to my back, and I stretched out, whimpering in pleasure as she started to gently massage me again.\n\nThen she leaned forward, and I could hear the quivering breath she let out as she laid her cheek on the small of my back. I shivered as she exhaled over me, and closed my eyes, trying to fix this moment forever.\n\n\"Kay?\" she breathed, after some time.\n\n\"Soph?\"\n\n\"Does your door lock?\"\n\n\"Yes. Key's hanging on the coat-hook.\"\n\nShe climbed off me, and I rolled onto my side, watching her as she locked the door. She stripped out of her jumper and the thin cotton vest under it, then stood, somewhat shyly, as she touched her turquoise lace bra.\n\n\"Do you want me to take this off?\"\n\nI nodded, not trusting myself to speak. She reached down to her sternum, and unclipped the two halves, shrugging out of it and casting it aside. She came back to the bed, her small high breasts with their small erect nipples jiggling slightly with every step, and I flushed guiltily as I watched her.\n\n\"Like the view?\" she breathed into my ear.\n\n\"Uh huh.\"\n\n\"Mm. Good. So do I\" She leaned forward, pulled me against her, letting me feel her, before she lay down next to me, head pillowed on an arm, smiling that small smile.\n\n\"You're good for my ego,\" she said softly.\n\n\"You're good for my soul.\"\n\nShe leaned in to me, and I closed my eyes as she kissed me and gathered me to her.\n\nAnd then she moved slightly, and I felt her fingers on my left breast, and my toes curled in on themselves as I arched my back and groaned.\n\n\"Oh, I'm going to enjoy getting to know you,\" she breathed.\n\nI whimpered assent, and then froze as she planted the softest of kisses on my neck.\n\n\"Kay,\" she breathed.\n\n\"Uh huh...\"\n\n\"You need to tell me if anything I do is too much, too quick, too soon...\"\n\n\"Please... just don't stop...\"\n\nShe trailed a finger over my nipple, and I felt goosebumps crawl up my back.\n\n\"I'm going to cover us with a blanket,\" she said, matter-of-fact, \"because very soon I'm going to have a powerful need to be naked, and as hot as you're making me I'm still going to get cold.\"\n\nShe pulled my fleece over us, and then nuzzled up against me, gathering me against her once more. \"You have such a lovely body,\" she whispered. \"I wish I was a sculptor so I could capture this.\" Her fingers trailed over the globe of my breast, down over my ribs, to my hip, and she pulled me to her as another shudder ran through me.\n\n\"Oh god, Sophie, your fingers are like fire on my skin...\"\n\n\"You, pumpkin, have what sounds like a long span of years worth of stored up frustration.\"\n\n\"You're causing it,\" I quavered. \"Your scent, your voice, the sound of you, the sensation of you... oh god, you're doing my head in...\"\n\nShe leaned in, kissed me again, groaned as she pulled her breasts against me. \"You can touch me,\" she moaned. \"Please, touch me.\"\n\n\"I don't know what to do...\"\n\n\"Here,\" she whispered, as she took my hand and placed it against her small, perfect breast. \"Touch me gently,\" she said, and I moaned as I felt her, cupped her, her nipple hard against the skin of my palm. She whimpered, a quiet \"Oh,\" as I gently took her nipple in my fingers and squeezed it. \"Like that,\" she said. \"That's great.\" She pushed me over onto my back, and held herself up on an elbow, granting me access to her. Her hair had escaped her hairband, and it fell in golden cascades down over the slight freckling of her shoulders. Her nipples, pinker than mine, stood out against her fair skin, and when she noticed me staring at them she smiled and lifted herself more. \"Tongue them,\" she breathed. \"I'd love you to tongue them...\"\n\nGently, hesitantly, I leaned towards her, nuzzled her, took one in my mouth, held it gently, running the tip of my tongue over it. She hissed out a breath. \"Oh, oh, that's nice,\" she breathed, and I felt her hand on my own nipples, teasing me in sympathy with what I did to her. Then I felt her fingers crawling down over my belly, to the waistband of my leggings... and under.\n\n\"Soph,\" I whispered.\n\n\"Too much?\"\n\n\"Just... I've... \"\n\n\"Ok, slowing down,\" she breathed. \"Forgot, sorry, you're just making me so hot it's so hard to be good right now...\"\n\n\"I don't know what I'm feeling. Never felt this before. Not even last night.\"\n\n\"It's nerves, pumpkin. Nerves and need, probably, given how you're flushing and panting when I touch you...\"\n\n\"You make my body ache. My belly... it feels like there's a hollow in it, like I can't catch my breath at all...\"\n\n\"Mm.\" She leaned forward, kissed my nipple, my breast, my cheek. \"I'm going to strip, Kay.\"\n\n\"Oh god...\"\n\n\"You don't have to touch, or look, if you're not ready. But I'm wetter than the Titanic right now so unless I want to walk home with a massive damp spot I need to get these jeans off me immediately.\"\n\nI snorted, then laughed, dizzy, and she grinned down at me as she fumbled at her buttons. \"Make room,\" she breathed, and she flopped onto her back and wriggled free, kicking jeans and panties off the bed in contempt.\n\nThen she lay still, flushed, almost shy, waiting as I levered myself up to look, to admire her.\n\n\"Do you like it?\" she breathed, after a long silence.\n\n\"You're beautiful...\"\n\nShe shivered, swallowed. \"You will probably never really understand how important that was to me.\"\n\n\"Can I... see... you?\"\n\n\"You mean... my pussy?\"\n\n\"I've... never really... apart from mine.\"\n\nShe nodded, spreading her legs slightly, then further as I hesitantly moved down. She reached down, trailed a finger along herself, and let out a shuddering sigh. Then she slowly spread her lips, exposing herself, her sparse, golden hair serving more as a punctuation mark than any cover. I could see how wet she was, her lips, her inner lips glistened, and if she was even remotely as aroused as I was then her self-deprecatory joke had not been far from the mark.\n\nShe reached out, gently took my unresisting hand, guided me down to her. \n\n\"Oh... oh god,\" I quavered, and she moaned in sympathy as I parted her with a shaking fingertip.\n\n\"Slowly... slick it up... then stroke it around the base of my... clit,\" she whispered. \"Uhn... yes... just like that... oh, oh fuck you have no idea... just no idea...\"\n\nShe pulled me down to her, tangled her hand in my hair, kissed me, and I felt as she started to wriggle, to writhe against me as I stroked her. \"Oh, oh, don't stop, don't stop,\" she panted into my ear, pulling my head down against her breasts. I could hear my heart thumping, my pulse pounding in my ears, a deep-seated need to hold her, pleasure her overriding all my normal reserve. I curled my finger over, felt for her, felt her give around it, felt rather than heard the way she arched her back and whimpered as I started to slide my fingertip in and out of her vagina, slicking it and her engorged clit, teasing her, aching in sympathy, clamping my legs together as need built and built within me.\n\n\"Kay... Kay... oh... oh... oh...\"\n\nAnd then she paused. I felt her stiffen, felt her arms lock around me as she crushed me down against her, small little grunting panted whimpers escaping her as her abdominal muscles started to spasm. I felt her vagina clench, clench, clench on me, and something made me push my finger deep into her - I needed to feel everything, sense everything as Sophie orgasmed.\n\n\"Oh... God...\" she moaned, legs shaking. She flailed helplessly at me, trying to catch my hand, trying to stop me, but she couldn't, and I didn't, and it was so delightful to hold her here, feeling her, watching her, hearing her, that I didn't want to stop.\n\n\"Please... please stop... oh... please stop...\" she begged eventually, and reluctantly I did. I slowly slipped my hand out of her, wiped it self-consciously on my duvet cover, and then crawled in against her, marvelling at the scent of her, at the beautiful flush on her chest, at the small, erect nipples in their beautiful areolae, at the slight sheen of sweat on her belly.\n\n-\n\n\"What are you thinking?\"\n\nI sighed out a breath, opened my eyes, met her gaze.\n\n\"Just... trying to capture this forever.\"\n\n\"I just want to tell you that for someone who claims to have no experience, you sure know your way around a vagina.\"\n\n\"Beginners luck, I think,\" I said softly. \n\n\"How are you feeling?\" she asked, as she reached out to gently touch my shoulder.\n\n\"Really, really nervous.\"\n\n\"It's a big thing, pumpkin. Being with someone. Lots of people try to brush it off, be glib about it. But... it makes you really vulnerable to give yourself to someone.\" She stared at me, then leaned forward to kiss me on the forehead. \"Listen to me, Kay. I'm totally ok with going as slow as you need. If you don't want me touching you yet, that's ok. I'm ok with that.\"\n\n\"It's not... it's just... I'm scared.\"\n\n\"Scared?\"\n\n\"I'm feeling things I've never felt. This... need to be near you. I'm just really scared that... that I won't be good enough.\"\n\n\"Good enough?\"\n\n\"For you,\" I whispered. \n\n\"Are you serious?\"\n\nShe trailed her hand down my back, down over my bum, making me shiver. \"Kay, darling, a simple smile from you is good enough for me. Everything else you give me is a magical, unexpected, undeserved bonus. I would follow you for days for the promise of a kiss. The only way,\" she added, squeezing me, \"that you will not be good enough for me is if there's a surprise penis hiding in this delectable booty of yours.\"\n\nI snorted, laughed, choked, and she joined in as she snuggled in against me. \"And I don't think there is,\" she purred, sending me into muffled whooping hyena laughter again.\n\n\"No penis, I swear,\" I managed, after some time.\n\n\"Good. Can't abide sausage.\"\n\nI rolled onto my side, and crawled in closer to her. \"How do you make me feel this way?\"\n\n\"Some of it must just be reflections of how you make me feel. Breathless. Unsteady. Silly.\"\n\n\"Sillier than normal, thats for certain,\" I breathed. \"And... much more liberated.\" I felt for her hand, guided it downwards, slipped it and mine under my leggings.\n\n\"Are... are you sure about this?\" Sophie asked shakily. \"Kay?\"",
        "\"I want you to be my first. More than I can remember ever wanting anything, I want you.\"\n\n\"You... shave?\" she quivered, as I guided her fingers over me.\n\n\"Last night... for you...\"\n\n\"Oh god. Oh, you just delight in doing this, I just think I'm getting a handle on you and you just send it all up into the air again like butterflies...\"\n\nAnd then she parted me, and I felt her on me, and for a pure, intense moment I forgot everything else but her.\n\n\"Kay... you're soaked.\"\n\n\"Please,\" I begged, \"please touch me... please...\"\n\nShe rolled me over onto my back, started to place kisses up and down my neck, my chest, over my breasts, all the time keeping a slow, teasing stroke moving on, over, around my clit, down to my slit, back up. I could feel myself writhing, could hear myself panting hoarsely; Sophie drove a leg between mine to try to pin me down; she bit my left nipple gently, and then I felt her add a finger to me and my back arched, locking me in place. I groaned, deep in my throat.\n\nIt felt like there was fire in the small of my back. I couldn't breathe, couldn't focus, couldn't do anything except experience the way she took me, led me, pushed me upwards, through the vaguely remembered building tenseness I'd once felt in those abortive long-ago moments when I'd explored myself. But Sophie drove me on, whispering now, cajoling me, a gentle \"Come, Kay, come for me,\" as I moaned, shuddered, writhed, powerless as she took me up... up...\n\nI convulsed, arched over against her, crying out, clutching spasmodically at her hand as my orgasm took me, wracked me, wrung me out and, eventually, left me slumped against her, crying in some strange mix of shock and exultation.\n\nShe held me close, kissed away my tears, and let the proximity of her body calm me.\n\nShe said nothing, she didn't need to.\n\n-\n\n\"What time are you heading in tomorrow?\" she said softly, as she pulled herself against me.\n\n\"Seven am, bright and early...\"\n\n\"Shall I meet you?\"\n\n\"Please. I'd... really like that.\"\n\nShe looked up at me, then reached up to gently stroke my cheek. \"Don't look at me that way,\" she whispered. \"I'll never be able to leave if you do. And if I don't leave, neither of us are going to sleep tonight, and then tomorrow is going to be hell.\"\n\n\"Please be safe walking home.\"\n\nShe grinned up at me. \"Gosh, I love how tall you are,\" she said. \"Really makes me warm and fuzzy inside.\"\n\n\"That's afterglow.\"\n\nShe laughed. \"Speak for yourself... actually, don't, just kiss me.\"\n\nShe stood on her toes and I held her to me.\n\n\"I'll call you to say good night,\" she said softly. \"Go inside and keep warm, pumpkin. I can see how cold you are,\" she added, gently brushing a nipple through the thin sheath of my fleece.\n\n\"Soph?\" I shuddered, catching her hand and holding it against my breast as I shivered.\n\n\"Yeah?\"\n\n\"It was really special. Today, I mean. I... thank you.\"\n\nShe kissed me again. \"Go on, you. Chat a bit later. Mwa.\"\n\nI leaned against the door, watching until she was out of sight, then closed the door and stretched my exhausted body. I ached in places I'd never suspected could ache before, and every memory of her made me blush and sent flutters down my arms and legs. I snuck back upstairs to my room, found our abandoned wine, and poured myself the remains of a glass. Then I sat against my headboard, sipping the wine, smelling the ghostly scent of her on my sheets.\n\nHer painting beckoned to me, and, wincing slightly, I moved to my easel, where I simply stared at her, marvelling at the way in which my life had changed so completely in a handful of days\n\nAnd then I found myself thinking about the study she wanted. And about how I could give it to her.\n\n-\n\n\"You look tired,\" she said, archly, as I reached our crossroads and stepped into her waiting arms. \n\nI snorted, then tucked my face into her hair and inhaled, luxuriating in the scent of her as she squeezed me against her. She pulled free, stood on her toes and kissed me. \"Good morning,\" she added, grinning.\n\n\"It is now,\" I said softly. \n\nShe laughed and took my arm, and we set off for the station. \"Sleep alright?\"\n\n\"No... had lots to think about.\"\n\n\"Are you ok? About yesterday?\" She frowned.\n\n\"It was wonderful. I... just had to unpack it all and make sure it was in the correct places is all...\"\n\n\"Mm.\" She leaned in, resting her head against my shoulder. \"I had fun. Slept like the dead. Was filthy when I woke up though, had to have a whore shower.\"\n\n\"A what?\"\n\n\"Whore shower. Tits, bum, pits, face, pussy...\"\n\n\"Sophie,\" I laughed, scandalised.\n\n\"It's your fault, so don't get all high and mighty,\" she grinned. \"Anyway, it's good enough for the day, it's not like anyone in the office is going to see my nethers...\"\n\n\"Oh you are foul.\"\n\n\"You love it.\"\n\n\"Mm,\" I replied, not dignifying her with an answer as we made our way through the ticket barriers and down to the platform. The carriage was packed, so we wormed our way into a space, and she rested her head against my shoulder as our interminable commute started.\n\n\"I got odd looks from Sue this morning,\" I complained.\n\n\"Well... we were quite noisy.\"\n\n\"Serves her right. I've put up with her sexcapades with no complaint for months.\"\n\n\"I'll moan more next time,\" Sophie breathed into my neck, and we descended into suppressed giggles.\n\nI parted from her at the door to my office, and she gave me a long, lingering hug and a chaste kiss goodbye before she carried on walking towards Blackfriars. I leaned against the wall, watching her, and she gave me her customary glance and smile before she disappeared into the crowd.\n\nI tagged myself into the building, climbed the flight of stairs, and found myself a booth. I had an idea, and I needed to talk to my Dad. I knew that I could always trust him to give me good advice.\n\nRing.\n\nRing.\n\nClick.\n\n\"Kay, princess! This is early for you. Everything ok?\"\n\nI smiled, tucked the handset into my neck. \"Hi, Dad, um... everything is... really good, actually. Listen, just a quick call. I think it's time for me to start looking for a house, and I wanted your advice on what to do.\"\n\n\"Wow, that's sudden. What prompted this?\"\n\n\"Just tired of coming home to the sounds of my flat-mate's sex life is all, and want more space for my art.\"\n\n\"Get your own sex life and compete!\"\n\n\"Daaaaaad,\" I laughed. \"Stop being filthy.\"\n\n\"Okay, okay love. So. You've got your Nan's inheritance... I guess you intend to tap into that?\"\n\n\"I thought it would be enough for a deposit, maybe cover some of whatever fees there are.\"\n\n\"Oh, trust me, it will help but it probably won't cover them all. There are parasites, leeches everywhere when it comes to property,\" he grumbled. \"Listen, love, on the subject, your mum and I were actually thinking of investing in one of these property syndicates... but if you're serious, we would always rather back you than some randoms. We could help you with the deposit, and then if you ever sell you pay us back whatever our money's grown - would that work for you?\"\n\n\"That... would be magical, Dad. That would give us so many more options.\"\n\n\"Us, Kay?\"\n\n\"Um...\" I felt myself blushing. \"Well, shit...\"\n\n\"Kay, is there something you should be telling me?\"\n\nI could hear the grin, could see the raised eyebrow and crinkling laugh lines. Subterfuge was futile, Dad knew me too well.\n\n\"Oh god... Dad... I... I think I've met someone... and I think it's serious. I wanted to tell you and Mum in person, not for it to slip out like this.\"\n\n\"Serious, hmm? That's exciting. It must be serious if you're letting things slip like that. So... what's her name?\"\n\n\"What? How? How did you...\" I stammered, after a period of stunned, mortified silence.\n\nI heard his laughter. \"Kay,\" he chuckled. \"Oh, my girl, you're such an innocent sometimes. Did you think I didn't know?\"\n\n\"How? How on earth when I... didn't know?\"\n\n\"Maybe,\" he laughed softly. \"Mum and I have known for years, love. We just never mentioned it because it's none of our business, and you seemed to be working through it okay by yourself. Maybe you hadn't worked it all out yet, but then you never were very quick on the uptake with some things.\"\n\n\"Dad!\" I protested.\n\n\"What's your lady's name, love?\"\n\n\"Sophie,\" I whispered, blushing.\n\n\"Is she nice?\"\n\n\"There aren't enough words.\"\n\n\"Oh dear. Sounds extremely serious. You'll have to bring her around so we can embarrass you more.\"\n\n\"Dad!\"\n\n\"Kay, in all seriousness... I'm really happy to hear your news... both sets of it.\"\n\n\"So.. you're not... it doesn't bug you?\"\n\n\"Who you love is none of my business,\" he replied softly. \"I'm your Dad. The only thing I care about, my girl, is that you're safe and happy. So long as she's hot,\" he added, teasing.\n\n\"Dad!\"\n\n\"I'm joking, I'm joking,\" he laughed. \"Kay, on the original subject, run the numbers, we'll do the same this side, then go find an agency and get your name on their books and get them looking. It will take some time but you need to be ready to move when something comes up. Property moves quickly, but you have the advantage of not needing to sell a home in order to buy. Let us know.\"\n\n\"I love you, Daddy,\" I breathed, heart aching. \"God, I'm so lucky I have you. I was so scared of this talk and you just made it so easy for me.\"\n\n\"Not half as lucky as me, princess. You and your mum are the two best things that ever happened to me. Phone later when you can, and we'll talk more. Bye now.\"\n\n\"Bye, Dad...\"\n\nAnd then I leaned back, wanting to laugh and cry at the same time. So I sniffed, stood, and went to make myself a cup of tea to start the day.\n\n-\n\n\"Hello, lover.\"\n\n\"Hello,\" I breathed into her neck.\n\n\"You look strange. What's going on?\"\n\n\"Just a long shitty day. Glad... glad I have you to finish it with.\"\n\n\"Mm. Flattery will get you everywhere, you know.\"\n\n\"What are our plans?\"\n\n\"How about we have a quiet one? We could go back to my mum's, make supper, watch a film...\"\n\n\"That sounds magical,\" I agreed. \"That sounds like exactly what I need.\"\n\nWe made our way down into the bowels of the Underground, and found a nook on the third train to arrive. Once again, Sophie wormed her way up against me, and I flushed as I felt her press a leg gently against my thighs.\n\n\"Sophie,\" I whispered, slightly scandalised.\n\n\"What,\" she replied, mischievously.\n\n\"Don't start something you can't finish...\"\n\n\"Is that a challenge?\"\n\nI blushed, grinned. \"Maybe...\"\n\n\"I've half a mind to take you up on that, you know.\"\n\nShe leaned her head against me, and increased the pressure slightly, but did nothing more until we reached Clapham. I was almost relieved when it was time to exit the train; the slow, bumpy journey had pushed me to an uncomfortable level of desire, and I desperately needed the fresh air for my own sanity. Sophie was also flushed, eyes sparkling as she glanced sideways at me.\n\n\"I'm going to need new underwear,\" I grumbled.\n\nShe cackled, unrepentant. \"I like doing that to you.\"\n\n\"I think you just have to touch me, you know. That's all I think it takes...\"\n\n\"But it's more fun up close and personal,\" she replied, as she squeezed me against her, and I had to agree.\n\nWe walked slowly through the building drizzle, and I for one enjoyed the gentle pressure of her against me, the knowledge that she was there. All too soon, we reached her house - she unlocked the door and ushered me in. She took my coat from me, and hung it and hers behind the door.\n\n\"Hungry?\" she asked.\n\n\"A bit. Is your mum home?\"\n\n\"Nah, she'll be on shift until much later.\" She ducked into the kitchen. \"We've got some leftover mac and cheese, or I could whip us something up if you like?\"\n\nI leaned my chin on my crossed arms, watching her. \"I don't mind, not fussed.\"\n\nShe smiled over a shoulder at me. \"Ok, I'll make us some quick pasta. A warm meal would be nice, don't you think?\"\n\n\"Yeah, that sounds nice.\"\n\n\"You ok, Kay?\"\n\n\"Uhuh. Just... still kind of star-struck or something I think.\"\n\nShe laughed. \"You're a very appreciative girlfriend.\"\n\n\"I have lots to be appreciative of.\"\n\nShe smiled at me, then started rummaging in the cupboards.\n\n-\n\n\"This is nice,\" she breathed, and shifted slightly.\n\n\"Ow. That's my breast.\"\n\n\"Sorry.\" She shifted again. \"Better?\"\n\n\"Uh huh.\"\n\n\"Have I told you recently how nice it is that you're so tall?\"\n\n\"I'm only six foot. Not much more than you, really...\"\n\n\"Well, it's wonderful to have you to look up to.\"\n\n\"That' a terrible pun, Soph.\"\n\n\"I know, I'm proud of it.\"\n\nShe pulled herself in against me, then settled back with a sigh. \"Always liked this movie. Kate Winslet is gorgeous.\"\n\n\"Yeah. Rubens would have wanted to paint her.\"\n\n\"He's the one who did the the nudes, right?\"\n\n\"Soph, that could be used to describe every artist from the Renaissance onwards. People get into art because it allows them to see naked girls. But yes, Rubens did a lot of nudes. Famous Dutch master. Sort of a contemporary of Rembrandt.\"\n\n\"Swot,\" she breathed.\n\n\"I bet you could tell me seventeen things I don't know about Oscar Wilde.\"\n\n\"Perhaps,\" she agreed. \"But I'm more into Stephen King and Lovecraft.\"\n\n\"I\u00e4! I\u00e4! Cthulhu fhtagn!\"\n\n\"Shush, you, or I'll give you something to be saucy about.\" She turned, kissed my breast through the fabric of my top.\n\nI shivered, wriggled slightly against her. \"Soph,\" I breathed.\n\nShe trailed a finger down over my tummy, to my lap, where she brushed her fingertips along my inner thighs, eliciting another whimper from me.\n\n\"I like how much you like being touched.\"\n\n\"By you,\" I moaned. \"It's... like I'm wired up to a battery. Everything tingles when you do that. Soph... stop, Soph, you're... you're going to make me very uncomfortable...\"\n\n\"Really?\"\n\n\"Uh huh. You're... Soph... you're drenching me...\" I whispered.\n\n\"And that is bad why?\" she asked, as she slowly slipped her hand under my tights. I took a shuddering breath, and then as she quested slowly lower I gave in, opening myself to her. She made a soft noise in her throat as she reached me, and pressed her belly hard against my hip.\n\n\"This is what you do to me,\" I whimpered, as I reached down to hold her hand against me. \"Feel what you do to me...\"\n\n\"Oh, babes, I can, and believe me, it's mutual.\"\n\nI moaned as I felt her caress me, felt her part my lips with one and then two fingers. I slid lower on the couch, arching back against the armrest, and Sophie rolled partially onto me as she nuzzled my neck and teased my soaking slit, then started to stroke a finger around the base of my throbbing, aching clitoris. I turned my head, squeezing my eyes closed, as she tortured me, teased me, played me.\n\n\"Soph... Soph... oh... oh...\"\n\n\"I love doing this to you,\" she hissed. \"Love fucking you, making love to you. You're so sexy, so hot, God you do my head in...\"\n\n\"Soph... God... I'm... this is...\"\n\n\"Come for me, pumpkin. I know you're close. I can feel you trembling.\"\n\nI moaned assent, slid further down, opened my legs further. I could feel myself sweating, feel how slick I was, and the sensation of her fingers on me, of her body against mine, was the most exquisite sensation I could ever remember.\n\n\"So... oh, oh God... oh...\"\n\nI could feel a knot of tension building deep in me. I could feel my back tensing. I couldn't resist the urge to squirm, my hips moving almost of their own accord as she moved her thigh over mine, slipped my right leg between hers and started to grind on it.\n\nI was close. Aching, near-incoherent, powerless to resist in any manner as Sophie took me.\n\n\"So... so...\" I moaned.\n\n\"Come, Kay, come for me,\" she groaned in sympathy. \"Come hard for me, baby...\"\n\nAnd then it happened; my belly spasmed, thighs clamping down on her, arching me up off the sofa, crying out, begging her to carry on, begging her to stop, unable to help myself as my hips bucked against her, her own shuddering moan a pale echo of the exultation of release I felt with her fingers on and in me.\n\nShe held me against her until I'd stopped shaking, then reached up to kiss me, a slow, sensual epilogue to the delicious way she'd made love to me.\n\nAnd then I lay there, panting slightly, while she slowly withdrew her fingers and licked them clean.\n\n\"Shall we move upstairs?\" she asked softly, after a while.\n\n\"Won't... won't it scandalise your mum?\"\n\nSophie snorted. \"That ship sailed long ago. She won't mind.\"\n\n\"Ok. Ok. But... you're going to have to help me up, my legs are jelly.\"\n\nShe laughed softly at me, then levered herself up and offered me a hand. She pulled me to my feet, and made a soft, happy sound as I wrapped my arms around her and crushed her to me.\n\nThen she turned off the telly, took my hand and led me upstairs to her room. She turned on her desk lamp, killed the main light, and closed the door.\n\n\"I want to see you naked,\" she said, matter of fact. \"I've felt you but not seen you, and I desperately need to admire you.\"\n\n\"You're going to make me shy,\" I whispered.\n\nShe took the hem of my top, and slowly lifted it up. She pulled it over my head, then down off my arms, and dropped it to one side. I shivered slightly, whimpering as she placed a gentle butterfly kiss on my shoulder. She reached around me, unclipped my bra, and discarded it too. She leaned forward, and gently kissed my left breast, my left nipple, then my throat.\n\n\"I wish I could have this as a photo,\" she breathed. \"You are gorgeous. You should have been a model.\"\n\n\"Soph,\" I protested, blushing.\n\n\"I'm going to ravish you,\" she announced, as she stripped out of her jersey and discarded it and her vest. She unclipped her bra, dropped it, then took my hands, raised them to her, to cup her, to fondle her. \"Touch me,\" she commanded, as she pushed herself against me. \"Your touch makes me crazy. Make me crazy, Kay.\"\n\nI gently started to explore her body, flushing with some mix of shyness and ramping desire as she stood there, eyes closed, goosebumps spreading swiftly over her shoulders. She shuddered as I stepped around her and brushed my lips across her shoulders and then up to the nape of her neck. I crossed my arms over her belly, pulled her back against me, and kissed down her jawline. She groaned, spun in my arms, and reached up to pull me down to her, her lips hot, eager for me.\n\nThen she broke free, laughing giddily, as she unzipped her skirt and let it fall - she stepped free and kicked it out of the way; I watched her move, a lump in my throat as I admired the sheer lace panties and thigh-high stockings that she began to slide down her legs. \"Don't undress,\" she breathed, \"I want to do it. I want to feel your skin as I strip you.\"\n\nShe peeled her panties off her, and I felt my heart thumping as she straightened to let me see her.\n\n\"Now you,\" she breathed, and she hooked her fingers into my leggings. She slid them and my wrecked underwear slowly down, planting kisses down my thighs as she squatted in front of me, her face level with me, as she freed first one and then the other leg. She looked up at me, smiled wickedly, and then slowly pushed me back towards her bed.\n\n\"Soph... what...\"\n\n\"Sit down and let me see you...\"\n\nI blushed, unnerved by the intensity of her gaze, settling myself onto the side of her bed, opening myself for her, flushing hot red, tingling as she stared down at my body.\n\n\"Kay...\"\n\n\"Uh huh...\"\n\n\"Can I... taste you?\"\n\n\"What?\"\n\n\"I want to lick your clit, Kay. I want to tongue you until you scream my name.\"\n\n\"Oh... oh god, Sophie,\" I whispered, as the ache built in my belly again. \"I... don't I need to clean myself?\"\n\n\"Not for me. Not now. Not if you don't want to. But it's your choice,\" she said, as she slowly reached out to touch me. \"I want to, but not if it's going to be weird for you.\"\n\nI looked at her, then, swallowing, braced my arms behind me and leaned back, lifting myself slightly for her. \"I... ok...\"",
        "\"You sure?\"\n\n\"No... but yes...\"\n\n\"Ok. Tell me if that changes.\"\n\nShe lowered her mouth to me, and I gasped a breath as she touched the tip of her tongue to my clit.\n\n\"Oh... oh wow...\"\n\n\"Ok?\"\n\n\"Uh... huh...\"\n\n\"Ok then.\"\n\nShe slowly started to lick me, a small, excruciating movement along me. I moaned, loudly, arched my back, then fell over backwards, uncaring of how my head rebounded off the wall as she pushed herself against me, her tongue spreading me, teasing on me, around me, darting down to my entrance then back up, firm but yielding in just the perfect way. Then I cried out as she slipped a finger into me, and followed it with another. I clutched at her head, at her hair, grinding unconsciously against her as she started to suck on my clit, rolling it between her lips.\n\n\"Uhn... oh... fuck...\" I panted. \"Oh... fuck... fuck... Soph... God that's amazing... please... God... don't... stop...\"\n\nAnd then I strained upwards off the bed as I felt her curling her fingers over inside me. Everything became suddenly more intense. The sensation of her in me, her tongue on me... I felt like I couldn't breathe no matter how much I panted for air, little begging gasps as I writhed on her, impaled on her, as she taunted me, loved me, pleasured me and pushed me screaming off the cliff edge of my climax and into the near-unconsciousness of an apocalyptic orgasm.\n\nI lay there, convulsing, shaking, completely incapable of thought or action, as she licked me in time with each pulsing, agonising contraction. I knew I was crying out, but there was nothing I could do, something primal had taken hold of me and would not let go.\n\nAnd then, after an age, it started to ebb. I moaned, long and low, as she pulled her fingers out of me, and again as she climbed up to kiss me, the taste of me slick on her lips, her own breathing laboured as she lay down on me, skin to slick skin, her neck tucked into mine.\n\nI took a deep, shuddering breath, then, slowly, I wormed my hand in between us, to her, to find her, to open her, gently start to tease her. She moaned, then spread herself over me, sliding her thighs down over my hips and gripping me with them as she gyrated in small circles against my palm, brushing herself against me and slicking me with her as I slowly stroked my fingertips along and around her clit. She began to pant, pulling her belly against me - I stretched, slipping my fingertips in and out of her, just penetrating her, marvelling at the heat of her. Sweat slicked our skin; her breasts and nipples pressing against me as she shifted, squeezed me between her legs, rode back against my hand. She placed her hands on my shoulders and lifted herself, eyes closed, mouth open, head thrown back, grinding hard down against my palm, driving my index and middle fingers into her.\n\nSophie began to lift herself and let herself drop back onto me, driving my digits into her as she pinched her nipples, squeezed her breasts, and panted.\n\nShe opened her eyes, a puzzled frown taking form. I could feel her stomach starting to tense in time with her pained crescendo of whimpers. Then she hunched forward, face going slack as her leg muscles locked, quivering on me.\n\n\"Mm...mm...mmmoh...fucking...shit...\" she whimpered. \"Oh... oh... oh fuck... fuck... oh god...\"\n\nShe collapsed forward onto me, grunting into my neck with each powerful spasm of her muscles. I wrapped my free arm around her, pulled her down against me, and held her, fingers still in her, revelling in the way I could feel all the muscles of her body clenching and releasing in sympathy with one another.\n\nSlowly she relaxed, and I gently eased out of her, toes curling at the little moan she let out. She rolled unceremoniously off me, leaving a mostly-sweat-slicked thigh thrown over my belly, and lay there, watching me with a silly grin that probably matched my own.\n\n\"You, missy,\" she breathed, \"have my cheat codes. Oh God, Kay, that was intense.\"\n\nI laughed softly. \"Seemed only fair given what you just did to me.\"\n\n\"Uh huh. Well. I'm going to need a rest. And then a bath. And then, maybe, I'll get you to do that to me again. If my stomach muscles last,\" she snorted.\n\nI rolled into her, tucked my face into her neck. \"I would love to do that to you again. I have never felt anything as amazing as that. Any of it. Your tongue on me. Feeling you coming... all of it.\"\n\n\"You should have felt it from my side,\" she laughed, as she stroked my back. \"Oh, I'm definitely going to get addicted to you.\"\n\n\"Ditto,\" I breathed, closing my eyes, pulling myself in closer to her.\n\n-\n\n\"Morning mum!\"\n\n\"Morning Soph. Morning, Kay,\" she added, with a grin.\n\n\"Morning, Mrs Williams,\" I said, blushing.\n\n\"Gemma, Kay. I'm Gemma. Don't make me feel old,\" she added, waving a finger at me. \"I hope Sophie gave you the bed this time, Kay.\"\n\nI muttered a yes, blushed more, and she laughed at me.\n\n\"Mum, please stop teasing my girlfriend.\"\n\n\"Never,\" Sophie's mum replied, with a wink. \"She knew what she was signing up for.\"\n\n\"Not strictly true, but I'll allow it,\" Sophie answered with a smile. She hugged her mum, then turned to me. \"Come, Kay, we need to get going or we're going to be horribly late. Bye, mum!\"\n\n\"Bye girls, have a nice day!\"\n\nSophie shut the door behind us, and we loped towards the Tube station. Sophie was smiling like a sunbeam, her arm linked through mine - I, meanwhile, was preoccupied, trying to deal with the knowledge that I was wearing an incredibly sheer, effectively transparent pair of Sophie's own panties due to a lack of time to get home and get a clean pair of my own.\n\n\"You picked these on purpose, didn't you?\"\n\n\"Naturally,\" she grinned. \"They look amazing on you. You look amazing in them.\"\n\n\"If by amazing you mean awash, yes...\"\n\n\"Half the fun, pumpkin. Just think how nice it will be when I slip them off you later.\"\n\n\"Soph,\" I whispered. \"Don't make me blush or start me down that route now or I'm not going to be able to concentrate at all at work today.\"\n\n\"Sneak into the ladies and ad-lib a bit.\"\n\n\"Sophie!\" I gasped, scandalised, laughing.\n\n\"What,\" she said, eyes wide and innocent. \"Needs must, pumpkin! You can send me photos,\" she added, wickedly.\n\n\"You're going to get me arrested for public indecency at this rate.\"\n\n\"Pubic indecency,\" she said, grinning.\n\n\"That too.\"\n\nWe tagged in through the barriers, and then climbed onto the train as it arrived. Sophie pushed me into a corner, and leaned in against me.\n\n\"It's not much easier for me either, you know,\" she breathed. \"You're just wearing them. I'm going to be spending the day daydreaming about getting home, peeling them off you and getting at what's under them.\"\n\n\"Sophie,\" I breathed, as I felt a tremor run through me. \"Sophie, you're wicked. You're making me so wet. Stop, or I'm going to jump you.\"\n\nShe laughed softly, throatily, and I felt her slip a hand inside my jacket. I held my breath, pulse thumping in my ears, but she behaved, and merely reached down to gently run her hands over the small of my back as she tucked her face into my neck.\n\nBank station came far too soon, and I kissed her goodbye at the door to my office building, uncaring now of the envious looks many passing men gave us, and I thoroughly enjoyed both the little moan she gave me as I kissed her, and the bright red flush it had brought to her cheeks and neck that I noticed as I let her go. I watched her walk away, waited for the glance, blew her a kiss, laughed at how she stumbled slightly, and then turned and entered my building. The receptionist gave me an approving grin and thumbs up, and blushing even more fiercely if that was possible, I escaped upstairs.\n\nI sat down at my desk, squeezed my legs together, briefly, and started searching for well-regarded (or at least less-hated) estate agents.\n\n-\n\nI'd left early, pleading personal admin, and my boss had waved me off with a \"See you tomorrow!\". Then I'd boarded the tube and set off south to Morden, where I'd emerged and walked a small distance down the main road, pausing as I reached my destination. \n\nI hesitated, took a breath to calm myself, then stepped into the estate agent's office. I smiled shyly at the single middle-aged agent, and waited for her to finish her call.\n\n\"Good afternoon,\" I said, as she turned to me.\n\n\"Hi, how can I help?\"\n\n\"Um. I would like to buy a house. I've never done this so I've got no idea what the process is, but I looked online and your agency has good ratings so I thought I'd come and ask...\"\n\n\"Well,\" she began, \"it's a fairly long process to distill down, but the gist of it is you give us a budget and the general areas you'd want to look, and leave your contact details with us - then if anything comes up that matches, we let you know.\"\n\n\"How... long does it typically take?\"\n\n\"That depends on a lot of factors - chaining, whether you can get mortgage approval, surveys, etcetera. Assuming everything works out, it could take a couple of weeks.\"\n\n\"Ok, wow, that's quite quick.\"\n\n\"Only in good cases. All too often, things come up,\" she added wryly.\n\n\"So, would it be possible for me to leave my details with you?\"\n\n\"Sure. Fill in this form,\" she said, \"and we'll capture you onto our system. Don't forget your email address.\"\n\nI filled in the forms, setting a budget that would be a push but not impossible, and limiting the search to commutable regions. I knew that realistically whatever the agents turned up would be no gem, not even in the rough... but the chance to own something, to share it with her... it was worth the inevitable problems I'd encounter down the road.\n\nI left the form on her desk, smiled my thanks, and then made my way to the nearest station.\n\n- All done, on my way home now -\n\n- How was the appointment? - came the response from Sophie.\n\nI flushed, guilty at the white lie I'd told her about the mole on my back.\n\n- She says to keep an eye on it, but that it's not a problem at the moment -\n\n- I'll keep a very close eye on it ;) -\n\nI smiled to myself. - Climbing onto tube, probably going to lose signal. Will ping you when I'm home -\n\n- xxx. Leaving work shortly too. Your place or mine? -\n\n- Mine, yours needs new linen... -\n\n- Touch\u00e9 - she replied, and I could imagine the grin.\n\nI climbed onto a carriage, and leaned into a corner, staring at the floor or out the windows as the train rumbled on. I was picturing a house for us; how we could make it ours. \n\nI hoped to God I was right about her.\n\n-\n\n\"Ding dong!\" she sang, grinning up at me in the soft light of our outside light.\n\nI reached out and pulled her to me, sighing and tucking my face into her hair as she wrapped her arms around me.\n\n\"Kay?\"\n\n\"Just... really glad to see you,\" I breathed, squeezing her against me, luxuriating in the scent of her.\n\nThen I let her go and closed the door behind her. \"Long day,\" I said, by way of explanation, as I took her coat and scarf and hung them up for her.\n\n\"Uh huh. Preaching to the choir. So,\" she said, glancing up at me, \"The mole is ok then? Nothing sinister?\"\n\n\"Yeah. She reckoned it's benign but that if it grows or changes shape I need to go back. She says I should take regular photos of it.\"\n\n\"Pity it's just your back and not somewhere more... intimate.\"\n\n\"Sophie,\" I laughed, leading her to the kitchen. \"You are filthy. Filthy!\"\n\n\"Hot-blooded,\" she said, grinning. \"On that note... how're the undies?\"\n\n\"Ruined,\" I said, sourly. \"I've been soaked since you said you were coming over.\"\n\n\"Really?\"\n\n\"Uh huh.\" I reached for a wineglass, then froze as I felt her slip her hand around my waist and down into my leggings.\n\n\"Sophie,\" I groaned. \"What are you doing?\"\n\n\"Shh,\" she breathed, \"just checking...\"\n\nI shivered as I felt her fingertip slip down, and then further down.\n\n\"Oh... wow,\" she murmured.\n\n\"Soph...\" I whimpered as I felt her push the slick fabric of my... of her panties aside.\n\n\"You're soaking wet.\"\n\n\"Tell me something... I don't... already know,\" I groaned, shuddering as she stroked her finger along me. \"Been like this all day. Surprised I'm not dehydrated.\"\n\n\"Did you masturbate?\"\n\n\"No. Didn't. Just. Suffered through. It.\"\n\n\"Silly...\" she observed quietly as she increased the speed, the pressure.\n\n\"Wanted... your fingers on me...\" I whimpered, helpless, hips grinding of their own volition.\n\nShe wrapped her arm around me, pulled me back against her, and penetrated me, driving her finger in and out of me, sliding over my clit with each movement. I braced my arms on the countertop, opened my legs for her, moaning deep in my throat, letting her use me, letting her take me.\n\n\"You're close, aren't you. I can tell,\" she whispered into my ear, making me shiver as she nuzzled my earlobe. \"Your leg and tummy muscles give these small twitches when you're near. It's so much fun.\"\n\n\"Uhn...huhn...oh... oh... oh fuck...\"\n\nAnd then I convulsed forward onto my forearms, crying out, legs shivering, heart thudding a mad tattoo as she drove her fingers deep into me. I gasped for breath, struggling to keep my legs under me as Sophie teased me, timing each small movement of her fingers for the spasms running through me.\n\nShe was laughing exultantly as she let me go. She pulled her hand free, licked her fingers clean, and then gripped my bum and pulled me hard against her. Her kiss was wanton, hot, salty, and far, far shorter than I wanted it to be.\n\nAnd then she just held me, still giggling, as I fought to regain some sort of control of my primary motor functions.\n\n\"You can't do that to me,\" I panted, trembling. \"You cannot. I'll pass out.\"\n\n\"I like how appreciative you are.\"\n\n\"Soph, I can't walk straight right now. Certainly can't pour you the wine I was going to pour you. It will go everywhere but the intended receptacle.\"\n\n\"I'll help myself then,\" she grinned. \"Let you pull yourself together. Want a glass too?\"\n\n\"Fuck, yes please.\"\n\nShe poured me a glass, set it and hers on the table, and then helped me stagger over. My lips sent small pulses of sensation through me as I walked, and I'm sure I whimpered once or twice, because she laughed softly.\n\n\"Highly strung,\" she teased me.\n\n\"You're just so very fucking good for me,\" I said. \"I... just...\"\n\n\"Hmm?\"\n\n\"Just wish I'd met you years ago is all. I was so lonely, Soph.\"\n\nShe leaned in and kissed my cheek. \"All things in their correct time, pumpkin. All that matters is we have each other now.\"\n\n\"Is it weird to say that I can't imagine not having you in my life?\"\n\nShe took a sip of her wine. \"Not to me. Especially not now that I'm getting to know you. Every layer I peel back just makes me more excited about what's to come.\"\n\n\"You free me.\"\n\n\"Free you? From?\"\n\n\"From myself.\"\n\n\"Mm. I don't think I free you, pumpkin. I think you've always had the capacity. Maybe you just needed a catalyst.\"\n\n\"Maybe I just needed your tongue on my pussy.\"\n\n\"Now who's being filthy,\" she said, grinning.\n\n\"I blame you.\"\n\n\"I confess.\"\n\n\"I'll punish you later. Once I can walk,\" I added, ruefully.\n\nWe laughed again, and Sophie stood and began to rummage. \"What do you want for supper?\" she asked.\n\n\"Soph, you can't always be the cook...\"\n\n\"Shush. I love cooking, and cooking for you is something I want to do as often as I can.\"\n\n\"So long as you let me do the dishes then.\"\n\n\"Deal,\" she said, smiling over her shoulder.\n\n-\n\nShe shifted slightly in my arms, wriggling down, her bum pressed to my belly. I moved my hand a bit, cupped her breast, toyed gently with her nipple. She sighed, a small, happy sound.\n\n\"I like being like this with you,\" she murmured. \"Naked, nothing chasing us, no need to move or think or be anyone but myself, right here, right now.\"\n\n\"Are you ever someone else?\"\n\n\"Only when I have to pretend to be an adult.\"\n\n\"Mm.\" I kissed her neck, and she wriggled. \"Well, for what it's worth, I really enjoy holding you like this.\"\n\n\"Mm. I'm not surprised. My breasts are awesome.\"\n\n\"Yes. Yes, they are.\"\n\nShe snorted, pushed herself back against me. \"Well, I'm glad you like them.\"\n\n\"Anybody would. They're works of art. I'd love to paint you some day.\"\n\n\"Paint... as in nude?\"\n\nI flushed slightly. \"Yeah.\"\n\n\"Mm. So long as nobody else sees it. I'm into flaunting myself for you, not for anyone who stops by.\"\n\n\"I'm bad at sharing.\"\n\nI felt her laughter. \"You're good at sharing yourself with me.\"\n\n\"That's easy. You just smile at me and I lose the ability to resist you.\"\n\n\"Mm. Nice thought.\"\n\n\"Soph?\"\n\n\"Uh huh.\"\n\n\"Are you...\"\n\n\"Little bit.\"\n\n\"Can I...\"\n\nShe lifted a leg slightly, rolled over onto her back, and lay there, eyes closed, smiling. \"Go ahead,\" she breathed.\n\n\"I'd like to... look at you.\"\n\n\"Mm. I might have to charge you admission.\"\n\n\"Really.\"\n\nShe laughed softly. then spread her legs. \"Look, touch, admire,\" she breathed. \"I'm just going to lie here and enjoy it.\"\n\nI levered myself up. She lifted her leg, let me under it, and hooked it over my waist, giving me an unobstructed view of her. I reached out, hesitant at first, admiring the deep pink of her lips, the paler hood of her clit. A faint sheen of moisture clung to her, and her sparse pubic hair was looped into small brown curls against her skin.\n\nI parted her, and she arched her back slightly as I leaned in towards her.\n\n\"This is making me really hot,\" she said, shakily. \"Having you there, staring at me with such intensity. Makes it really hard to catch my breath.\"\n\n\"Your lips are beautiful.\"\n\n\"And aching.\"\n\n\"Mm.\" I spread her, admiring her neat inner lips, parting them slightly with my fingertip.\n\n\"Soph?\"\n\n\"Kay...\"\n\n\"Can I...taste you?\"\n\n\"Do you need to ask? Touch me, taste me, feel me, fuck me...\"\n\nI leaned in further, the heady scent of her rising around me. I touched my tongue to her, slipping the tip along her. She moaned softly, and reached down, pulling herself apart for me.\n\nI licked her again, tasting her, drunk on the scent of her, watching as her stomach quivered.\n\n\"What do you like?\" I said, softly.\n\n\"Anything. You do. Anything,\" she panted.\n\nI trailed my tongue over her clit, then around the base. Sophie arched up again. \"Oh. Oh... God... Yeah. Just there. That. Do that. Do it more.\"\n\nI obliged, slowly running my tongue over and around her. Sophie moaned, head rolling from side to side, and I watched goosebumps crawl over her belly.\n\n\"Finger. Put a finger in me,\" she whispered. \"Put two fingers in me.\"\n\nI slowly inserted my index finger into her. She groaned, a deep animalistic growl of need. I felt her start to gyrate, to shimmy up and down on me. I added another finger, and found a rhythm that seemed to really please her, judging by the sounds she started to make.\n\n\"Kay... Kay... swear to God... will kill you if you stop... don't stop... fuck that's nice...\"\n\nAnd then I took her clit between my lips, and sucked gently on it as I tongued it. Sophie cried out, arched up off the bed.\n\n\"Oh... oh... oh fuck that's good...\"\n\nI could feel her legs tensing and relaxing, could see the way her belly muscles were spasming. I started to slide my slick fingers in and out of her, timing each thrust for one of her spasms.\n\n\"Uhn... uhn... oh... oh...\"\n\nAnd then she bucked up, lifting herself completely clear of the bed, crying out, legs clamping down on my head, hands pressing me against her, grinding my chin against her lips and my tongue against her clit, covering me with her scent. She collapsed back, convulsions wracking her, clenching her legs on me, her vaginal muscles pulsing on my fingers and against my lips.\n\nSlowly her orgasm subsided, and she moaned as she reached down to pull me up to her. She kissed me, then clasped me to her, panting for breath. Then she pushed me over to her side and rolled into me, arms clasped across her chest, face buried in my own dishevelled hair.",
        "\"Soph?\" I breathed after a moment.\n\n\"Just... waiting for my brain to return from wherever you sent it to...\"\n\n\"Was it nice?\"\n\n\"Oh God. Kay, if I could write down in actual words just how nice that was I could retire off the profits...\"\n\n\"Mm. I'd read it.\"\n\n\"Tell you what. Tell you what. You paint me. I'll write you. When I've recovered.\"\n\nI smiled, and she lifted her face to mine for the kiss she knew I wanted.\n\nThen I wriggled my arm under her head, and rolled onto my back. Sophie crept in closer to me, and dragged my blankets up and over us.\n\n\"I brought spare undies,\" she whispered, mischievously. \"We can sleep in and scandalise your housemate.\"\n\n\"Woman after my own heart.\"\n\n\"Yes. I am,\" she said softly, matter of fact.\n\nAnd then she said no more, dozing softly in the warm muggy heat of her afterglow. I lay, still and quiet.\n\nMy heart, however, was singing.\n\nSophie comes over, more romping. Kay realises that she cannot imagine being apart from Sophie. Sophie has brought a bag with spare clothes, and spends the night - less ... more loving.\n\n-\n\nSophie and I had slept in, and had faced a high-stress panic commute to be on time. A hurried kiss goodbye at my office, a secret squeeze and smile from her, and then she'd been off into the crowd, trying to make her morning curfew.\n\nThe email arrived as I was drinking my second coffee of the morning.\n\nI read it. Stared at the photos. Panicked ever so slightly.\n\nThe house had been sitting on their books for a month or two. A mid-terrace repossession that was not within easy walking distance of a station and so had escaped the usual buy-to-let nonsense. Their agent said that it had been viewed several times, but not recently. Was I interested?\n\nIt needed a lot of love.\n\nBut I had a lot of love to give it, and I knew my Dad would want to help.\n\nAnd it had huge bay windows on both floors. I could have a studio, Soph could have a study.\n\nI scrabbled up my phone, dialled him, waited, heart in my throat.\n\nRing.\n\nRing.\n\nClick.\n\n\"Kay love, what's up?\"\n\n\"Dad, I've... I've found a house.\"\n\n\"Have you now?\"\n\n\"Yes. It's a mid-terrace down south, near Purley. Needs a lot of work, a lot of sprucing up, but it's available. And almost in budget. Can... can I send you the details?\"\n\n\"Yeah, forward it on, love, and we'll take a look. If it looks like a possibility Mum and I can always hop in the car and come take a look with you two.\"\n\n\"That... that would be amazing, dad. Dad, I've got to go, busy day here, I just... wanted to tell you you're awesome and I love you.\"\n\nHe laughed. \"Send the details over, princess. Love you too, talk later.\"\n\n\"Love to mum please.\"\n\n\"Will do, princess. Bye now.\"\n\nI broke the connection, then sat back in my chair, an icy-cold nervousness filling me.\n\nI had to tell her, and I was terrified.\n\n-\n\n\"Rough day?\"\n\n\"Yeah,\" I breathed as I stepped into her arms. \"Too long by half. Glad it's home-time. Glad it's home-time with you,\" I added, struggling to meet her concerned gaze.\n\n\"Mm. Flatterer.\"\n\n\"You're the best part of my day. It's not flattery.\"\n\nShe tucked her arm through mine. \"So, definitely home then? Not keen for a drink at all?\" she added, with a smile.\n\n\"We've still got wine at mine,\" I said softly. \"A bottle or two. I feel like I need both of them. No gin though.\"\n\n\"Thank god,\" she laughed. \"I'm totally off it now. Wine sounds nice. I'll cook, and then... movie?\"\n\n\"Movie,\" I agreed. \"Movie sounds good to me.\"\n\nWe fought our way down into Bank station, and caught a train. Sophie leaned quietly against me, arm around my waist. She smiled up at me once or twice, but seemed content to simply be with me as we rocked and jolted with our fellow commuters.\n\nAnd every second, I fretted. \n\nClapham came at last, and we climbed out to street level. She took my hand in hers. \"Can see you're in your own head,\" she said softly. \"Lets go get out of the cold.\"\n\n\"Great idea\" I agreed. \"Fluffy blanket night.\"\n\n\"I prefer you as my hot water bottle,\" she grinned. \"But fluffy blanket too, I suspect. What do you feel like eating?\"\n\n\"Got some bacon that we need to cook. Could always put it in a sauce on pasta?\"\n\n\"Yeah, that could work. I know a recipe.\"\n\nWe fell back into silence, and I felt ashamed as I avoided looking her way, scared she'd see my secret before I could summon the courage.\n\nI opened my door, followed her in, then took her coat and scarf and hung them with mine behind the door. She made for the kitchen, and poured us both a glass.\n\n\"You going to tell me what's going on?\" she asked, matter of fact.\n\nI froze.\n\n\"I can see something's bugging you. You're an open book to me, Kay.\"\n\nThis was it. No time left.\n\nI took a deep, deliberate breath to calm myself, retrieved the folder from my bag, and set it down on the kitchen table.\n\n\"Soph?\"\n\n\"Uh huh.\"\n\n\"Could... could you come over here a minute?\"\n\n\"What is it?\" Sophie put down her wine glass, and joined me at the table.\n\n\"I... have to confess to something. Something really... important... that I never told you. I know we've just met and I get that this is insane and you're totally going to say no,\" I babbled on, \"but... but... I have the chance to do this and I know it's really sudden and... but...\"\n\n\"Never told me... what?\" she said, guarded.\n\nI swallowed again, breathed. \"I had... have... some money from when my Gran passed on. I went and saw an estate agent. I asked them to find me something. To find... us... something. I thought it would take much longer... but they had something on their books. They found us this.\"\n\nI opened the folder, slid the printed pages over in front of her.\n\n\"What is this?\" she said, after a moment.\n\n\"A house... for us.\"\n\n\"A... house?\"\n\nShe looked down at the pages, knuckles going white on the back of the chair.\n\n\"It's south facing. End of terrace. Far from any station... but I'm not scared of walking. It has bay windows, Sophie, on both floors. We could build you the study you wanted, the studio I wanted. My dad's already said he'd help with the deposit and the DIY... It... it would be really hard at first, but we could make it work...\"\n\nI watched her as she slowly picked a page up.\n\n\"Sophie?\" I quavered.\n\n\"Kay... we can't afford this...\"\n\n\"We... I'd sell paintings. I'm due a raise. We... we could do it. We could try. You and me. Sophie? Oh god, Sophie,\" I added, horrified, \"Please don't cry, please don't cry! Please talk to me!\"\n\nShe stood suddenly, scattering the pages.\n\n\"Oh God, Sophie, please...\" I breathed, mortified at how badly I'd misread this, misread her.\n\nShe stared down at me, heedless of tears tracking down the curves of her cheeks. Then, suddenly, she threw her leg over me, sat on my lap, and pulled herself hard against me, body trembling with quiet, gulping sobs. \n\nI wrapped my arms around her, tucked her against me, held her to me, hating myself for making her cry.\n\n\"Sophie?\" I breathed after some time.\n\n\"Yes,\" she whispered.\n\n\"Yes?\"\n\n\"Yes, Kay. Yes.\""
    ],
    "authorname": "onehitwanda",
    "tags": [
        "lesbian romance",
        "romance",
        "love story",
        "lesbian love story",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/sketching-sophie"
}