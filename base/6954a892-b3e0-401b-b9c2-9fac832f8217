{
    "title": "City of Angels Ch. 04",
    "pages": [
        "The next week was very busy for both Evan and Craig, and most nights they simply got into bed, exhausted from heat and stress, too tired to do anything but cuddle.\n\nOn the Friday he was going to leave for Laguna, Evan left very early in the morning, kissing a sleepy Craig goodbye before getting in his cruiser and heading downtown. \n\nIt was 6:00, and for an hour or so the cool dawn held back the heat. He turned on the radio to listen to the news. All anyone talked about was the threat of more fire. There was no remote chance of rain\u2014the only thing to hope for was that the Santa Anas wouldn't pick up again. \n\nAt the major intersection of Sunset and Fairfax he drew up to a red light, and there was Craig's billboard, in full glory. It was huge. It stood out even among all the other garish signs crowding every available point of view. He'd passed it several times on the way in the past week, and it had always made him smile. There was his boyfriend, floating on a cloud, surrounded by a bevy of gorgeous hunks. Craig looked stunningly beautiful and so seductive. Even disregarding their relationship, Evan thought how powerful a photo it really was, entirely because of Craig. This model wasn't trying to sell you anything, or project an image of unattainable happiness. He looked almost pained, full of longing and desire\u2014all the qualities that had made Evan fall in love with him. \n\nThe traffic light lasted longer than usual, and Evan just sat and stared at \"Mr. Los Angeles.\" He was. He was an image of the world around him\u2014a city so soft, vulnerable, and open, so sprawling and huge but so intimate and tender at the same time.\n\nAnd yet even now the fires were beginning to smolder again under the rising sun.\n\nThe light changed, and he drove on.\n\n+++\n\nAs Evan headed down to Laguna after a long day of work, Craig was just leaving the Paramount lot on Melrose Avenue late that afternoon. He was stressed.\n\nHe cranked up the AC in his Porsche and drove as he replayed the conversation he had just finished in his head, over and over. \n\n\"Well, Craig, I can't tell you how impressed I am. Very very impressed with the work you've done here.\"\n\n\"Thanks, Mandy. So what's the next step?\"\n\n\"From my end, it's a go. I have to run this past my boss, of course, but I don't see any problem.\"\n\n\"Ok, so that's . . . good?\"\n\n\"Craig, it's good. It's VERY good. Why don't you set up a conference call, um . . . next Thursday, with Sony and Universal. You should have your own legal representation there, too. And we can iron out the details then.\"\n\n\"Well, if the city doesn't burn down in the meantime.\"\n\n\"What? Oh, we've never let a little thing like a natural disaster get in the way of doing business in this town. Uh, Craig, let me ask you. You do know what this means, right? I mean, for you?\"\n\n\"You're talking about my cut.\"\n\n\"Yes. It is going to be substantial. Quite substantial. That, plus being the one to broker this. It's really going to make you a name in this town. I can guarantee your life is going to change. Coming into that can be overwhelming, even for you. I've seen it do terrible things to people. You should think about it, if this is what you really want.\"\n\n\"I have thought about that. And, well, here I am.\"\n\n\"Alright then. Let me be the first to say\u2014unofficially, off the record\u2014congratulations. It has truly been a pleasure.\"\n\nDriving away, Craig knew he should have been happy, but he wasn't. His stomach felt queasy, he felt this strange buzzing in his head, and he realized he did not want to go home\u2014not to his house, tonight, alone. \n\nHe had told himself, sworn to himself, that if this deal worked out, he was going to sever ties with his dad, once and for all. And now he felt his mind being torn into different directions, like it was splitting into several different pieces. \n\nPart of him was saying, \"You didn't really mean it. You don't have to do anything. It's not a big deal. This doesn't have anything to do with your dad. You can still go see him.\" \n\nAnother part was racked with guilt, saying, \"It's now or never! If you don't make the break now, you never will. You have to! If you don't you're just a weak, spineless, stupid coward!\" \n\nDeep inside, another part was comparing this meeting to the last one he'd had with his father, and seeing in stark contrast the blatant evidence of his success and acceptance against his father's total dismissal of him. But as soon as Craig gave in to feelings of finally being worth something, on his own, he went in the other direction and attacked himself for being self-deluded. His instinctive need for self-protection was battling with genuine happiness and it was cranking up the stress inside to the boiling point.\n\nThis he recognized. He'd talked about this battle inside himself many times with therapists, whenever something good happened to him, but it didn't help him the least bit right now.\n\nThe only thing he knew could truly help him at this moment was to feel Evan's strong arms around him. But he wasn't here. \n\nCraig tried; he really tried to hang onto his trust in their newly-expressed love, but his world seemed to be crashing down around him, and now all he could think was Why hadn't Evan asked him to join him? Why hadn't he insisted? Was he ashamed of him, despite saying he wasn't? It didn't matter that it made no sense; he was here working. It was never a question if he'd join him with his family. But the self-doubt crept in, licking around his security in their relationship like tiny tongues of flame. \n\nHe began to drive. Just drive\u2014aimlessly, stupidly, mindlessly. Down Melrose, then Fairfax, then Pico, a right on Wilshire, then down to 18th street in Santa Monica and towards the ocean. As he drove, he gazed at all the normal people in their little stucco houses. He saw fathers pulling into driveways getting back from work; stay-at-home moms pushing their kids in strollers; teenagers playing basketball; girls in tight yoga pants coming back from the gym. Normal, happy life, unrolling in front of his eyes like a movie, or a waking dream. \n\nHe'd always been so alone! In his heart, in his dreams. And now he had achieved it all\u2014the success he'd always wanted. He'd made a name for himself, but he feared it was only going to cut him off and make him even more isolated. \n\nHe drove and drove and drove like a lost man. At one point he stopped at a 7-11 and bought a pint of Ben & Jerry's and a box of powdered doughnuts and ate them as he continued to drive. He drove through LA, up and down, getting on and off the freeway, for hours, until he felt sick. At last, barely even knowing what he was doing or where he was going, he found himself pulling into a driveway in West Hollywood. He knew he'd been here before but he didn't recall who he had come to see. \n\nHe shook his head, and seemed to suddenly wake up, as if he had just lost four hours of his life. With a huge feeling of relief, he realized he had somehow driven himself to Larry's house. Larry. Thank god. Not Jason. Ok. He began to calm down, saying, \"I'm at Larry's. A friend. Larry's a friend.\"\n\nAt that moment he heard Larry's loud, sarcastic voice.\n\n\"Oh, he's alive! Come to see us at last. Where the hell have you been, Craigy?\"\n\nLarry. Troy. Several other guys he recognized. Walking towards him, down the driveway. Craig smoothed his hair in the mirror, put on some shades and stepped out of his car, smiling, and held out his arms.\n\n\"Hey guys! Where's the party?\"\n\n+++\n\nThat same night, Evan found himself alone in the ICU of the Cardiac Wing of the Laguna hospital, keeping watch over his dad. After a long day and night, his mother and sister and her family had gone home to shower and change their clothes, at Evan's insistence. \n\nHis dad had gone in for a routine operation, or so he thought, while he was still at work. But when he arrived at the hospital, expecting to find him sleeping or up in bed, he ran into total chaos\u2014his mom and sister hysterical, doctors running around, nephews and nieces crying. Apparently there had been some complication, and he was still on the operating table, undergoing open heart surgery. The doctors could only say it was very serious, and it was going to be touch and go for a while. So Evan, all thoughts of Craig pushed out of his mind, went into comfort mode for his female relations. He had to be strong, for them. He held his mother and talked his sister out of a fit as they sat and waited, and waited. His dad was in there for hours, with no word from the doctors. \n\nAt last, an exhausted surgeon, his scrubs soaked in sweat, came out to see them.\n\nCaptain Malone was ok, if very shaky. They'd had to go in and do a quadruple bypass. His heart had stopped more than once, but he had eventually stabilized. His pressure was good, his breathing normal. \n\n\"I don't want to lie to you, Mrs. Malone, if we hadn't caught this now, your husband would have had a massive heart attack in the next couple of weeks. But we did. Sometimes these kinds of things, you just can't see until something bad happens. It's a damn good thing you brought him in a few weeks ago. A damn lucky thing.\"\n\n\"But it's going to be real rough over the next few weeks. He's not out of the woods, yet.\"\n\nAt this Evan's mom threw herself in Evan's arms and sobbed into his neck. \n\n\"Shh, mom, it's ok. He's going to be alright.\"\n\nBut Evan sounded a lot more sure of it than he actually was, and when, finally, everyone had gone home and he was alone, he sat down at his dad's bedside petrified in fear. His dad looked terrible. He had tubes coming out of his mouth hooked up to IVs and machines. His chest was bandaged and tightly bound. He looked 15 years older and so fragile and weak it scared Evan to death. \n\nHe was mortified. Paralyzed. Unable to think or breathe. He had to stifle the urge to vomit, so violently did his mind want to reject the image before him. The sight of his father's chest made his own burst into pain, so overwhelming he thought he would pass out. It didn't stop aching the whole time he was in the room. The idiotic hospital clock was ticking so loudly, as if life and time was going on as normal, and nothing was normal. Nothing would ever be normal again!\n\nHe held his father's weak, lifeless hand as tears welled up in his eyes. He was utterly unprepared for the emotions breaking open in his body, which had been muffled until the moment he was alone. But now it was so quiet, the only sounds his father's slow, labored breath and the ticking of the damn clock. He looked dead. Even if he survived this, Evan knew looking at him that the strong, vibrant man he'd always known as his father was gone forever. He looked as weak and vulnerable as a baby.\n\nEvan continued to hold his hand as he struggled to get a grip on himself. He clenched his teeth together and focused on his breathing, otherwise he felt any second he was going to scream or have a fit.\n\nBut he realized this wasn't just about his dad. It was Craig, and everything that had happened in the last two months.\n\nThe emotions, the raw, primitive, true emotions, were swirling and churning and boiling inside him, beyond words, beyond understanding. Happiness, amazement, fear, and love, above all love, hitting him like a tidal wave. For Craig, for his father. What a bunch of lies he'd been living his whole life! He did not know himself, he never had. His love for his father burned its way up through his heart, as searing and powerful as the desert, as deep as the ocean. It burst over him now, at this moment, at his bedside, their history forgotten, swallowed up in the tender memories that now flooded his mind. \n\n\"Daddy.\" He whispered the word to himself. \"I don't want you to die.\" \n\nEvan sat for a while murmuring to him, comforting him in his sleep, holding his hand, and pushing back his own pain. He could not process it. He only knew that he began to feel weak and fragile himself, dazed and confused. And his love for Craig! Just barely acknowledged, timidly embraced, mysterious and unknown. He had to talk to him, right this second.\n\nHe left the hospital room where cell phones were forbidden and went into the waiting area and desperately called Craig's phone, praying that he would answer. But it just rang and rang, which was unusual. When the voicemail finally picked up, he could hardly wait for the beep.\n\n\"Hey, it's me. Where are you? I'm at the hospital. I'd really like to talk to you, so when you get this, give me a call, ok? I miss you. . .\" Evan let the tape run for a minute, not knowing what else to say. \"Just call me. Hope everything's going ok.\"\n\nHe went back to his dad's room and took up his silent vigil. He was only in there a few minutes when he heard a soft knock on the doorframe.\n\n\"Evan?\"\n\nEvan turned to look, wondering if he was correct in thinking he recognized the voice. He was. It was Chad.\n\nTheir eyes locked and they exchanged a long, intense look. They had not seen each other in years, but it was as if they were 15 again. The beach flashed into Evan's memory\u2014watching Chad on the surfboard, laughing as he saw him wipe out. Chad saw an image of Evan on his new bike, proud and defiant, cruising down their street with his long hair flying behind him. High school home room, the football field, the sweaty locker room, and the long hot days of summer with nothing to do. Intimate talks on the beach and drinking beer underneath the pier. \n\n\"Chad,\" Evan murmured, completely stunned. \"What are you . . . what are you doing here?\"\n\nHe had not changed in ten years. Still in fabulous shape. Perhaps a few wrinkles around the eyes, but otherwise just as cute and blond as before. \n\n\"Hey, I'm sorry if I'm interrupting. I heard about your dad and well, I just thought I'd stop by . . .\" He held out some flowers he'd bought in the hospital gift shop. \"I'm sorry, I didn't know you'd be here.\"\n\nEvan was so absorbed in worrying about his dad he forgot to be mad. He just stared at him and said, \"Uh, thanks, you can put them over there.\"\n\nAs Chad stepped into the room, Evan was aware of his every gesture, his every sound. The tension was so great he could hear his heart pounding and was sure Chad could, too. He noticed Chad's large, strong, tanned hands as he put down the bouquet. He remembered them tossing a football, running them through his soft feathered hair. He remembered Chad down to the smallest detail. \n\n\"What are you doing here?\" Evan said softly, his voice insinuating much more than he actually said.\n\n\"Just came to see your dad. You know how I feel. It's almost like he was my dad, too.\"\n\n\"I didn't mean that,\" Evan said abruptly. \"I meant what are you doing here, back in LA?\"\n\nChad sighed. In a second the past erupted into the room like an exploding volcano. They both knew exactly what Evan meant.\n\n\"Evan . . .\" Chad said, quietly. \"I'm sorry. I've been in town, I just didn't know if you'd want to see me.\"\n\n\"Oh you mean you were actually going to drop by and say hello, after all this time? I'm so honored.\"\n\n\"Evan. I'm sorry. Can we talk?\"\n\n\"Well as you can see, I'm kind of pre-occupied.\"\n\n\"I know. I mean . . . I lied. I knew you were here. I stopped by your house and Gina told me you were here. I came to see you.\"\n\n\"Oh, I see. It's only been, what\u2014ten fucking years?\"\n\nChad sighed, and ran his hand through his hair. Evan couldn't help noticing his body, as if for the first time. Never, in all the time they were friends, had he ever \"checked him out,\" but now . . . after what he knew, knowing how he was, who he was . . . he noticed, alright. Everything. And it made him feel like a disgusting pervert. He could suck Craig and fuck him in the ass, but only this, noticing Chad's body, made him in the least bit uncomfortable with his homosexuality. Aware of it. Self-conscious in a bad way. \n\n\"Evan, I'd really like to talk to you. There were\u2014there are\u2014reasons. I'd like to explain.\"\n\n\"Are you married?\" Evan interrupted him, his head down, refusing to look at Chad's face.\n\n\"Am I what?\"\n\n\"Are you married? I want to know.\"\n\n\"No,\" Chad almost whispered. \"No, I'm not.\"\n\nThe emotional atmosphere in the room thickened. Evan closed his eyes, with a sinking feeling. He knew what was coming. Hadn't he known? Hadn't he always known? But he just could not deal with this right now. And why the fuck hadn't Craig called him back?\n\n\"I can't talk to you now, Chad. I just can't. Could you leave, please?\"\n\n\"Yeah, of course, sure. Maybe later?\"\n\n\"Fine. You know where to find me.\"\n\n\"Ok. And Evan, I'm sorry about your dad. I'm so sorry. If you need anything\u2014anything at all!\u2014let me know, ok? I'm staying at my house. Same number.\"\n\n\"Fine.\" Evan just wanted him to leave.\n\nJust then, his phone rang, and he saw Craig's number coming up. \n\n\"Excuse me, I have to take this.\" He headed out into the hallway as Chad left.\n\n\"Hey,\" Evan said in relief, desperate to hear Craig's voice. But what came through the receiver, so loud it caused the nurses at the check-in station to glare at him, was raucous noise. Blaring dance music, shouts, yells, laughter. \n\nExtremely irritated, Evan moved into a stairwell. \n\n\"Craig? What's going on?\"\n\nCraig's slurred, drunken voice echoed loudly through the concrete stairwell.\n\n\"Evan! Baby, how are you?\"\n\n\"What the fuck's going on? Where are you?\"\n\nHe heard male voices laughing in the background, and Craig talking off the phone.\n\n\"Craig! Jesus Christ!\"\n\n\"Ho . . . whoah, I'm sorry. Kinda loud in here. Hang on.\"\n\nEvan clutched the phone getting angrier by the second. Finally Craig came back on.\n\n\"Mmmm. . baby why aren't you here?\" It was obvious he was extremely drunk.\n\n\"I'm in the fucking hospital, Craig, why do you think?\"\n\nHe thought he actually heard Craig snorting with laughter.\n\n\"I'm sorry, babe, sorry. Larry's trying to get me to dance. You ok?\"\n\n\"No I'm not. Not at all.\"\n\n\"Aw . . . I'm sorry, hon. Too bad you can't get up here. Mmmmmm . . . guess what, baby?\"\n\n\"What?\" said Evan, in the most cynical voice he could muster.\n\n\"My deal went through. Today. Yep. Millions of dollars, of my own fucking money, and now . . .\" Craig's voice was so slurred and thick Evan could barely understand him. \"Now I can tell that ASSHOLE to fuck off and get the fuck out of my life, how about that?\"\n\n\"Craig. My father is in the next room with tubes coming out of his chest. He could die.\"\n\nThere was silence at the other end of the line.\n\n\"Babe, I can't hear you, I'm sorry, can we talk later, I gotta . . . I gotta go, get a drink, or something. Call me.\"\n\nEvan hung up on him, infuriated. He yelled out \"Fuck!!\" in the empty stairwell. \n\n+++\n\nCraig woke up late the next morning, in his own bed, with no recollection of how he'd gotten there. His head was about to explode. He moaned, \"Oh, fuck.\" He had very little memory of the previous day. His last clear thought was leaving the studio. Pico. Driving. Doughnuts. Oh, god, he moaned and rolled over in bed again. He'd eaten doughnuts. He only did that when he was really bad off.\n\nAround his room he saw spilled glasses, bottles of beer, and ashtrays full of cigarette butts. He thought he was still smelling the leftover smoke from the apparent party in his room last night, which he did not recall in the least, until he realized the sharp, acrid scent was real, and wafting in through the open patio doors. He got up, naked\u2014how the hell had that happened?\u2014and padded over to the window. \n\n\"Jesus!\" \n\nOutside, to the northeast and very far away, he could see a huge plume of black smoke. This was real. The tinder box ringing LA had finally exploded, Craig had seen it before. Not close enough to threaten him, but it was bad. He clicked on his phone. The news reports were all over the \"firestorm\" raging in Ventura county. Thousands of acres. Uncontrolled. Winds picking up. ",
        "Craig wiped his face, feeling the slightly greasy stubble, as parts of the previous day slowly trickled into his memory. Talking to Mandy Grusmann. Then driving. And driving. And driving. He held his aching head and groaned. He had not done that in a long time. Ending up at Larry's. Going out. Dancing. Getting absolutely shit-faced. And that was it. That was all he could remember. The rest was a complete blank.\n\nHe wrapped a sheet around his waist and sat down, dialing Evan's number. After a long time, he finally picked up.\n\n\"Hello?\"\n\nCraig felt like he'd just been slapped in the face. Evan's voice was cold and devoid of his usual happiness at hearing from him. It startled Craig and immediately put him on high alert. His heart thudded loudly in his chest. \n\nHe stammered when he tried to respond. \"Evan? Are you ok?\"\n\n\"What do you think, Craig?\"\n\n\"I don't understand. What's going on?\"\n\n\"Jesus, you don't remember, do you? You were too fucking drunk.\"\n\n\"Evan, I'm\u2014I don't know, I'm sorry, I\u2014\"\n\n\"Where were you last night? What did you do?\"\n\n\"Uh . . . I went out to a club, I guess.\"\n\n\"Yeah. You know, I have to go. They need me back at the hospital.\"\n\n\"Wait! I don't . . . I can't remember. What happened?\"\n\n\"I'm sorry, I have to go. Talk to you later.\"\n\n\"No! Don't\u2014\"\n\nCraig clutched both hands to the sides of head. It was splitting in two. Evan! He felt like he had just slipped down a deep ravine and he was falling down, down with nothing to grab onto. \n\nJust then his phone rang. He glanced at it\u2014it was someone from work.\n\n\"Yeah?\"\n\n\"Symons! Glad I caught you. So I heard things went well with Mandy over at Paramount. Glad to hear it!\"\n\nCraig felt like his world was spinning out of control. He could not think. What had happened? But he had to focus on this, he had to! He pushed Evan out of his head with a huge effort, and went into work mode.\n\n\"Yes, it did. Very positive.\"\n\n\"Awesome. So, I need you to come in bright and early Monday morning. Can you make it?\"\n\nCraig closed his eyes. He could not breathe!\n\n\"Yes. That's fine.\"\n\n\"Fantastic! Bring those contracts with you. I'd love it if you could write up a little synopsis of your meeting with Mandy, have it ready to present to the studio heads. You up for it? I know it's a bit of short notice.\"\n\n\"Nope, no problem. I'll be ready.\"\n\n\"Great. Great. Fingers crossed, this looks like a done deal. It's the big time, Craig, I hope you're ready.\"\n\n\"Yeah, see you soon.\"\n\nCraig clicked off the phone, pulled on a pair of sweats, and went downstairs to make himself a Bloody Mary. A strong one.\n\n+++\n\nFor the next couple of days, through the week that followed, it was unbelievable to both Evan and Craig that they had just said \"I love you\" and shared a wonderful intimate weekend together. In the matter of a day, it seemed to have blown up, revealing for the very first time anything less than perfect in their relationship. But they were both so pre-occupied they couldn't really think about it or face it.\n\nThe firestorm raged, all around the northern most part of Los Angeles county, as the days continued to blaze into 100 degrees and above. It was hell. An enormous cloud of ash and soot soon drifted over the city proper, hitting Malibu first and making Craig's eyes sting and leak tears. His life was utter insanity. He had to rush out the door early every morning for meetings, then drive to more meetings, then come home to write and work for the next day. He pushed himself and pushed himself. If he stopped for one second to think about what was going on\u2014with Evan, with his life\u2014he knew he'd just collapse, so he just kept working, and drinking himself into a near-stupor every night. \n\nEvan was either at home with his mom and sister or at the hospital. He didn't see Chad at any point, though he wondered what he was up to. His dad was not doing well. It was beginning to seem like just a matter of time.\n\nAfter that tense phone call, they had talked very briefly only a few times\u2014not fighting, but maintaining a distance. \n\n\"Evan, I'm so sorry. What do you want? What can I do?\" Craig pleaded with him.\n\n\"I don't know.\" He heard Evan sigh. \"I'm sorry. I know you have things on your plate, too. I'm sorry. And look, I just don't know when I'll be up there. Not sure. But we'll talk, alright?\"\n\n\"Alright, alright. I'll see you soon.\"\n\nCraig seemed to have forgotten about his day of craziness driving around the city as he pushed hard to complete his deal. He went back into \"being Craig Symons\" mode, as skillful and charming as ever. But he felt completely numb. \n\nTowards the end of the week, he was in his Porsche at the intersection of Sunset and Fairfax. He'd sent Evan a text more than an hour earlier and it had not been returned. He was checking his phone every two seconds, and each time he saw nothing the panic ratcheted up one more terrifying notch. He saw his own face and body plastered over the skyline, and it almost made him physically nauseous remembering what he was thinking about at the time. It made his stomach swoop up and down, as if he was on an airplane going through terrible turbulence. His own image made him sick. It was so fake. If people only knew what that man was feeling beneath the beautiful fa\u00e7ade! \n\nBut somehow he managed to get it together. He simply couldn't think about the little tiff with Evan without massive panic breaking out and he COULD NOT afford that right now. \n\nTomorrow was Thursday. If he could only make it that far. Then everything would be settled with his work. And at least he'd know. He could relax at least for a little bit. He clung to that thought, and continued to drive.\n\n+++\n\nEvan had not been ignoring Craig; he just didn't have time or mental energy to answer his text that day. He spent every second at the hospital with his mother and sister. Like Craig, he was just hanging on, trying to get through the days. At night they all went home drained and exhausted. \n\nHe was in emotional free fall. He felt like a totally different person. Grief such as he had never known was turning his world completely upside down, plunging him into hell. He'd been completely blindsided by this storm. \n\nWhen he wasn't at the hospital, he was home surrounded by his life. His past. All the memories of his father. He saw his captain's hat hanging on the door\u2014his clothes, his coffee mug, his favorite recliner\u2014and he was pulled down into a pit of quicksand of pain that sunk into his bones, wiped everything else out. It was unthinkable, unimaginable. \n\nAt night, after a quick \"Hello, see you soon\" to Craig on the phone, he curled up in a ball, doing nothing but aching.\n\nTalking to Craig was strained, but not only because of that night. Evan felt, sensed, the very dynamics of their relationship subtly shifting under his feet. \n\nHe'd always been the strong one. For his mother, his sister, at work, even just being alone. Strong and proud and defiant, just like his father. But the love and pain wracking his body had rendered him weak. He didn't know how to deal with it, and he didn't know how it would be with Craig. This was . . . he couldn't even articulate it to himself. He lay in his bed staring at the walls, lost, drowning, confused beyond expression at the violent emotions roiling within him, most of which he did not understand. \n\nHe needed Craig. He ached for his body in his bed. At the same time, he was aware of anger\u2014boiling, simmering, mystifying rage he had not truly felt since he was a teenager. He knew he was angry with Craig for the phone call, but there was something else, something more, something deeper, and it scared him. He didn't know where it was coming from or what it meant, only that he could trace it to hearing Craig laughing with his friends on the phone. \n\nOn Thursday, he went to the hospital as usual, and they were greeted with good news. His dad was sitting up, and looking better. The doctors said he was finally showing signs of improvement. Evan hugged him before he left. \n\nBack at the house, he felt the first feeling of relief in nearly a week, and a slight, very slight, easing of pain. In fact, he was feeling so much better he decided to drive up to Malibu and surprise Craig. He knew this was a big day for him and he wanted to be there.\n\nThis had been Evan's very first experience with deep grief, and for a week he had barely noticed the world around him. When he stepped outside to get onto his bike, he was shocked at what he saw.\n\nThe sky over LA was eerie and otherworldly. The ash from the fires had changed the very chemistry of the clouds, it seemed, setting the sky ablaze with rippled streaks of violent pink and unnaturally intense, flourescent oranges and yellows. A dull haze of smoke smothered the setting sun and settled everywhere, blurring the hills. Evan looked around and noticed a fine layer of ash coating everything in sight, and it was still drifting down like snow all around him. He felt like he was on Mars. The world seemed to have completely changed. \n\nHe was just buckling his pack onto his bike, after wiping it down, when he saw Chad walking towards him. \"Great\" he thought, with a flaring of his anger. \"Just what I don't need.\"\n\nHe stood by his bike as Chad approached, watching him. He felt his gaze being pulled down towards his crotch, noticing the bulge and really being aware of it. This was followed in quick succession by anger, guilt and shame. Chad looked like Craig. His goddamned blond hair and blue eyes reminded him of Craig as well as his open, easy manner. He didn't want to see it. It infuriated him!\n\n\"Hi,\" Chad said, running his hand through his soft, feathered hair in a gesture Evan knew so well. \n\n\"Hey, I'm on my way. Just leaving now.\"\n\n\"Ok, I won't keep you. I just wanted to say hello.\"\n\n\"Ok. Hello.\"\n\nChad sighed, and moved closer.\n\n\"Evan, please. I'd like to talk to you. I know you must be mad. But can't we please just talk? I want to explain.\"\n\n\"Alright, I'm listening.\"\n\nChad stood awkwardly in the driveway, with one hand on Evan's bike. \n\nHe said, quietly, \"There's something I want to tell you.\"\n\n\"Ok.\"\n\n\"You asked if I was married. No, I'm not. I never have been. But I was with someone for a long time. Kind of why I came back here. I was coming off a bad break-up, had to get away, and then this job offer came along, and well, that's why I'm here.\"\n\n\"That's what you wanted to tell me?\"\n\n\"Yes. Well, no, not exactly. I mean, the person I was with, my ex . . . it's a man. I'm gay, Evan. I just thought . . . you might want to know. If you'd only let me explain things.\"\n\nEvan wasn't exactly surprised. In fact, he felt pretty sure this was coming. But he was surprised at his reaction. He wanted to jump off his bike and strangle him!\n\n\"How long?\" he said through clenched teeth.\n\n\"Huh? How long what?\" asked Chad.\n\n\"How long were you with this guy?\" Evan snapped.\n\n\"Six years\u2014why is that important?\"\n\n\"You've known for six years?\"\n\n\"No, longer than that. Damn it, Evan, can't we just talk?\"\n\nEvan sighed. \"Yeah. Yeah, but just\u2014not now, Chad. I'm really beat. And I have somewhere I have to be . . .\"\n\n\"Well fine, but later? This weekend, maybe?\"\n\n\"That'll work. I'll be here,\" Evan said as he gunned the motor on his bike. \"It's, uh . . . nice to see you. I gotta go.\"\n\nChad sadly watched Evan take off, thinking \"It was just like old times.\" Evan, being angry, avoiding him when he needed to, flying away on his motorcycle. \n\nIt had been almost ten long years since he'd been back here, and it was if nothing had changed. But that was one reason he'd come back\u2014to see Evan, to face him, to deal with it. He needed to, to fully move on with his own life. His break-up with Todd had made that abundantly clear. He'd never forgotten Evan, never truly gotten over him. He needed to know how Evan felt, where he was at. He had to. \n\nSeeing him in the flesh after all this time had totally knocked Chad on his ass. The old attraction burned just as hot as before\u2014even more so now that he was fully out to himself. No one, not even Todd, got to him like Evan did. And it was strange seeing Evan's personality again, the same as it always was, his fiery temper, his repression, his need to flee\u2014it was all part of the attraction. But he felt pretty sure Evan was still in the closet. He'd never doubted Evan was gay, at least, once he came out. He knew it in his bones. But this put a little twist into things. He thought by now Evan would have realized it. Could he be the one to plant that seed in his mind? What should he say?\n\nHe walked back to his house with a heavy heart. If he could only have an hour. Just one hour! Just one hour alone with the love of his life.\n\n+++\n\nEvan zoomed up towards Malibu eager to see Craig and get him in his arms. He wanted to make up and get right back to where they were before this horrible week. More than that, he needed him. Oh, did he need him! His warmth, his smile, his beauty, his softness. Evan felt like he'd just barely been holding it together for days, and he couldn't stand it one more minute. Every second flying up the coast was torture. For the very first time, Evan knew he needed Craig more than, or as much as, Craig needed him. His usual strength had crumbled beneath him, seeing his father so helpless, so frail, and human! He'd held it together for his family and even for himself, alone, but it was eroding second by second, the faster he drove. \n\nThe night was so pitch black! The smoke was obscuring most of the usual illumination, to the point where the brightest spots on the horizon were the fires forming a distant ring to the north. The dry, hot wind burned into his skin as he flew north, towards the heat, towards the flames, towards his love. \n\nBut when he pulled into Craig's driveway, Evan was extremely surprised and irritated to see that Craig was not alone and waiting for him, as he expected. His place was mobbed with expensive cars, and he heard loud drunken laughter and music blasting from his patio. \n\nHe hadn't called; he knew his arrival was going to be a surprise, but nevertheless he felt a flare of intense anger at what he found. Apparently Craig was having a \"party.\"\n\nHe parked his bike and took off his helmet and walked to the door, where several men he didn't recognize were standing with drunks in hand, laughing.\n\n\"Heyyyy, come on in!\"\n\n\"Ooooh please!\"\n\n\"What's going on?\" Evan asked.\n\n\"Look around!\" someone said. \"It's the party of the apocalypse baby! Get a drink!\"\n\n\"Where's Craig?\" Evan demanded. \n\n\"Craigy? He's out on the lanai. What's your hurry?\"\n\n\"I just want to find Craig, that's all.\"\n\n\"Well get in line, cutie.\"\n\nEvan pushed his way inside, annoyed. He couldn't help thinking of the first party he'd been to at Craig's house. And lo and behold, as soon as he had that thought, he ran into Larry and Troy as soon as got into the kitchen. \"Oh, great,\" he muttered.\n\n\"You seen Craig?\" he said abruptly to them.\n\nBoth Larry and Troy looked at him like he was a little bug. Evan knew from a glance Craig hadn't told them about him. They clearly had no clue who he was\u2014who he was to Craig. It enraged him to even see them here!\n\n\"Well he's around somewhere. How do you know him again?\"\n\n\"None of your fuckin' business,\" Evan growled as he pushed past them.\n\nHe finally found Craig out on his patio. Evan could tell from one glance that he was drunk. He had a martini in hand and he was laughing with some men. \n\nAs he got closer he could overhear the conversation.\n\n\"Remember that trip to San Diego, a couple of years ago?\" Craig was saying. \"The fountain?\"\n\nEverybody else erupted into peals of laughter. \n\n\"Those Italian guys? The tourists?\"\n\n\"Gianni and Luciano? Fuuuuck . . .\"\n\n\"Here's to Italian men,\" Craig raised his glass in a toast before tossing back the whole glass. \"And just . . . fucking MEN. Oh . . . and here's mine!\"\n\nEvan was standing sort of dumbstruck, watching Craig. He'd never seen him quite like this. Craig reached out and pulled him towards him. He was sitting on a ledge and he spread his legs and positioned Evan between them while wrapping his arms around his waist and kissing his neck, not noticing that Evan was standing like a statue. \n\n\"I've missed you. Why didn't you tell me you were coming?\"\n\nEvan tried to smile and play along, but he was fuming with anger. Craig was wasted. \n\nCraig smothered him with kisses while running his hands over Evan's stomach and hips. Evan felt himself getting hard despite himself. \n\n\"Mmmm . . . you guys haven't met my boyfriend yet, Evan. He's a cop.\"\n\nSome of the guys around Craig smiled and were friendly, but most stared at him with hostility. Evan did not feel welcomed into this crowd, and it made him pull away from Craig's hands and mouth.\n\n\"Aw, baby, what's wrong?\"\n\n\"Stop it, Craig. I didn't know there'd be people here.\"\n\n\"Oh, we're just having a little fun. I had to celebrate,\" Craig yelled, leaning far backwards with his arms held out over the railing and letting the hot wind blow through his silky hair. He yelled \"God I love LA!\" into the sky.\n\nEvan held tightly to his thighs behind him, and hissed, \"Be careful!\"\n\n\"Oh, it's fine! I'm fine! I'm rich, for fuck's sake. It all happened today, baby. Everything. We're going to have everything we ever wanted! Have some fun!\"\n\n\"Jesus, Craig, watch it!\" Evan had spun around to keep him from falling and they both collapsed together against the railing. For a second, Evan saw the real Craig\u2014his Craig\u2014look at him, and he whispered, \"It's me, baby.\" Craig let out a kind of drunken moan and a bleary \"Evan?\" before doubling over with laughter. \n\n\"How funny is that? I'm almost as rich as my dad.\"\n\n\"Craig\u2014\"\n\n\"Yes, Craig Symons SENIOR, of Symons DEVELOPMENT. Fucking bastard if there ever was one. My daddy,\" Craig spat out with disgust, while Evan glared at him. \"Mmmmm, here's my real daddy, right baby?\" Craig said, trying to run his hands up towards Evan's crotch. \n\nEvan roughly pushed him away. \"I'm going upstairs, Craig. I need to be alone. When you're done 'having fun,' come and talk.\"\n\nThe party did not stop. Evan sat in Craig's bed\u2014their bed\u2014waiting and waiting, getting angrier by the minute. It was so fucking LOUD. He put pillows over his head but he couldn't drown out the laughter. It was driving him crazy. He tossed and turned, thinking about Chad laughing in gay bars, having sex, being with men . . . six years in a relationship with a man . . . six years he had missed with Craig! More than that\u2014ten years, his whole life, as far as he could remember. \n\nFor the first time Evan felt a wild jealousy for Craig's life without him, before him. And resentment . . . deep, bitter resentment . . . he struggled to understand why . . . Craig. . . if he didn't have him . . . if he didn't have him, he'd have nothing. Nothing! No relationship to his sexuality, and Craig made it all seem so easy and effortless! He couldn't stand the thought of Craig down there enjoying himself with his friends! \n\nFinally the music and laughter died down, and Evan heard Craig shut the door and the last car drive off. He heard glasses clinking and sounds of cleaning up, then Craig padding up the stairs to the bedroom.\n\nWhen he came in Evan saw that Craig had his shirt off. He was clad in nothing but a pair of tight jeans and he looked so amazingly hot it took Evan's breath away. \n\nEvan was sitting on the edge of the bed, waiting and watching, saying nothing.\n\n\"What's up?\" Craig said, casually. He was still drunk, obviously, and Evan had never really seen the full drunk Craig before. He was different. He had a totally different vibe. \n\n\"You have fun down there?\" Evan said.\n\n\"Yeah, fuck, I needed it. Just had to let off some steam, ya know? It's been a hard week.\"\n\n\"Really. Was it?\" Evan said, with barely restrained fury. He moved towards Craig as if he were stalking a piece of prey.",
        "They had moved to Craig's large balcony and were now standing and facing each other. In the distance, the fire had reached its peak. Huge columns of flame emitting showers of sparks were exploding on the horizon. Evan glanced at it, distractedly, thinking it looked a chain of erupting volcanos. He stupidly thought of Mt. Vesuvius and the buried city of Pompeii.\n\n\"Did it ever occur to you while you were partying your ass off that I needed you, Craig? Do you have any idea what the last week has been like for me?\"\n\n\"It's been tough for me, too.\"\n\n\"But\u2014\"\n\nCraig held up his hands to ward off the explosion. \"I know. I know it's not the same. I know what you went through was worse, but I wasn't just sitting home watching TV! I had a very very difficult week.\"\n\n\"Oh really?\" Evan said, the bitter sarcasm dripping from his voice. \"Difficult partying with your friends, getting drunk?\"\n\n\"Evan, you don't know what it's been like for me. Some things . . . happened. Sometimes that's how I need to cope.\"\n\nEvan seemed not to have heard him. \"I come back here tonight needing you, desperate to see you, and I find you laughing your ass off in front of a bunch of assholes.\"\n\n\"I didn't know you were coming up, and those assholes are my friends.\"\n\n\"What\u2014Larry and Troy? The 'West Hollywood' crowd? These people are all so fucking shallow!\"\n\n\"Why is this bothering you all of a sudden? You never complained before.\"\n\n\"Because . . . I don't appreciate you calling me at my dad's deathbed and hearing you partying, that's why.\"\n\n\"I told you . . . you don't know the whole story . . . of what happened that day, what I went through. What are you really mad about, Evan?\"\n\nEvan stopped to look at Craig. It was if he had read his mind. \n\nEvan sputtered. \"I . . . I . . . I needed you! And you weren't there for me.\"\n\n\"Is that it? Or are you mad at me for having gay friends?\"\n\n\"No! When have I ever implied that?\"\n\n\"You are right now.\"\n\n\"That's not it. That's not fair.\"\n\n\"It seems like it, to me. You're angry about something, and I don't think it's what you're saying it is.\"\n\nEvan moved closer to him. \"These are the people you call your 'friends?' These stupid, shallow idiots?\"\n\n\"I can't help it that you're so in the closet, Evan.\"\n\n\"WHAT?\"\n\n\"I can't help that I've been out so much longer than you. I have a lot of gay friends.\"\n\n\"Oh\u2014really? The same gay friends who are too scared to want a boyfriend? The same ones who just want to fuck you? Or be some kind of . . . boy toy or something? You are really hot, after all.\"\n\n\"They're not all like that! They're GAY. They're OUT. They're part of my life, part of who I am,\" Craig nearly shouted.\n\nEvan was standing so close to Craig. They were staring at each other and breathing heavily. \n\n\"They're 'gay.' Really. What do you know about it, Craig, I mean, really know about it?\"\n\nNow it was Craig's turn to sputter. \"Excuse me? Mr. 'I just had my first kiss?'\"\n\nThe anger that had flashed up between them seemed to come out of nowhere, out of the dark night, like a flash fire, suddenly and totally unexpected but gathering heat. They both wondered why but were totally swept up in it. \n\n\"Yes, what do you know about it, Mr. 'Never been in a real relationship?' What do you know about love?\"\n\n\"And you do?\" Craig shouted back.\n\nEvan grabbed Craig by both sides of his face, staring fiercely into his eyes. \n\n\"What do you really know about loving a man? About loving a man so much it tears your heart right out of your chest to see him in pain? I'm not talking about a crush, or a little fuck, or . . . or . . . chasing after some unavailable asshole. I mean LOVING a man. With a love that is as much pain as happiness. So that when he leaves you . . .\" Evan eyes began to fill with tears and his voice broke, \"When he leaves you, he takes your soul with him. He takes everything, and you may never recover. What the fuck do you know about that? Can your 'friends' understand that?\"\n\nCraig pushed Evan's hands off his face and started pacing. Evan just watched him.\n\nCraig finally faced him. \"Do you know what I went through? Why I started drinking? Because I did it. I DID it. I just scored the biggest fucking deal to go down in this town in a long time. Me. It's all ME. And you know what I did? I drove like a complete psycho all over Los Angeles, for hours and hours, like a crazy person, and you know why? Because YOU WEREN'T THERE. Because you didn't want me to be with you. Because you were preoccupied. Because this means absolutely nothing without you. I nearly had a fucking heart attack when you didn't answer my texts. That's why I threw this party. Because if I didn't, I'd probably be lying in a ditch somewhere. So don't tell me I don't fucking love you.\"\n\nEvan was taken aback. \"What do you mean, 'Because I didn't want you to be with me?'\"\n\n\"Well you didn't exactly ask me to join you in Laguna, did you?\"\n\n\"But\u2014\" Evan sputtered again. \"That's where I live. I mean, that's where I'm from. My family . . .\"\n\n\"Yeah, and what? You don't want them to meet your homo boyfriend?\"\n\n\"No! I\u2014I\u2014you were busy!\"\n\n\"Oh, so now you understand me being busy with my own life?\"\n\n\"No, I\u2014Jesus, Craig, why are you laying this on me now? I can't\u2014I haven't\u2014I haven't told any of them. You're making too big a deal about it.\"\n\nThis time Craig came up and held Evan's face in his hands. \"When are you going to face being gay, baby?\"\n\nCraig couldn't have predicted he would say this. It just came out, because of his relaxed inhibitions. It wasn't even until he said it that he realized he'd been thinking it all along.\n\n\"I have!\" Evan stuttered. \"It . . . took me a while. I'm not denying it. And what about our trip? That wasn't gay enough for you?\"\n\n\"It was . . .\" Craig said softly. He put one hand on Evan's chest, right over his heart. \"But there's something missing. In here. Deep inside here, where no one can see it. Only you.\"\n\nEvan gazed at Craig, only barely understanding what he meant. \n\nHe only knew he loved him, more than ever, and in a second his anger was gone.\n\nEvan grasped his head in his hands and kissed him hard on the lips. He began pushing him towards the bed, murmuring, \"What happened to you, baby? Why didn't you call me! I would have come up from Laguna that day.\"\n\n\"Oh, fuck, let's not talk about that now!\" Craig exclaimed, as he frantically pulled up Evan's shirt.\n\nCraig hurriedly undressed him, free with drunken lust, and pushed Evan flat on his back on his bed. \n\n\"Lie back,\" he ordered him.\n\nEvan was enthralled with the change in Craig's demeanor. He didn't know he was about to be masterfully seduced by an experienced man intent on seducing him. \n\nCraig was still quite drunk, but he knew what he wanted. And he knew what Evan needed and wanted. \n\nHe straddled Evan's chest, and brought his mouth close to Evan's full, sensuous lips. \n\n\"I made millions today. I did it. And I'm letting myself feel good about it. Just tonight. Just tonight, I can have whatever I want, be whatever I want. And I. Want. You. I want you, baby.\" He slowly brought his lips closer to Evan's. \"Open your mouth,\" he whispered. Evan opened his mouth and Craig teased him, refusing to fully kiss him. He hovered over him, his lips barely grazing him, gently tracing and nipping, while he continued to keep Evan's hands above his head.\n\n\"You really never thought about men? Never, hmmmm?\"\n\nEvan whimpered helplessly beneath him, feeling his cock swell up and push against Craig's cheeks. \n\n\"You never dreamed of the taste of a man's lips . . .?\" Craig said, as he finally kissed him, pressing his warm, soft mouth onto his. \n\nEvan moaned in needy pleasure, overwhelmed and on fire. \n\n\"Remember what you said the first time you kissed me? Right down there on my lanai?\"\n\n\"You were so fucking hot that night. When I saw you pull up on your bike I thought I would pass out. You were so strong and confident, so sure of yourself, but so nice. I didn't know . . . I wasn't sure . . . but when you agreed to stay, oh then I knew . . .\"\n\n\"I knew, baby . . . and I wanted it. I thought about you, watched you, every single second until we were alone.\"\n\nEvan whimpered beneath him, desperate to get his hands free and run them over Craig's ass, but Craig held him tight to the bed.\n\n\"Remember what you said?' Craig whispered. \"I could feel that beautiful cock of yours so hard\u2014so hard\u2014against my thigh. You were pushing it into me, letting me feel it, wanting me to feel it, as you said 'No, I'm not gay.'\"\n\n\"I'm not gay,\" Craig whispered again, so seductively. \"No . . . I've never wanted to fuck a man, or love a man, or come in a man's mouth. . .\"\n\n\"No . . . \" he whispered over and over as his lips opened Evan's, slowly, hotly, lazily, refusing to give him his tongue.\n\nEvan was moaning and sweating, all traces of the past week forgotten, his worries and pain about his father pushed from his mind. There was nothing in the world now but Craig, the night, and the fires burning out of control.\n\n\"Tell me again,\" Craig whispered, just touching the tip of his tongue into Evan's mouth. He snaked it partway in, licking his bottom lip, dancing it around the opening.\n\n\"But this time, be honest.\"\n\nEvan whined, whispering hoarsely words Craig could barely understand. \n\n\"I want you,\" Evan gasped. \"I want you, Craig, I want you, I want you. . .\"\n\nCraig stilled his nearly incoherent babbling with his mouth, opening his lips wide and drawing Evan's tongue into his, sucking on it, swirling around it, sensuously licking and tasting as he freed one hand and let it snake down to Evan's raging hard erection. \n\nEvan couldn't stand it one second longer. He used his powerful arms and legs to flip Craig over and pull him into a tight, frantic embrace.\n\n+++\n\nThe night was long and hot. In their bed, Evan and Craig made passionate love\u2014hotter, better, sweeter, more intimate than anything they had experienced yet.\n\nEvan remembered it later only through flashes, like lightning strikes in a dark room. Craig's tongue, Craig's wonderful, masterful, experienced mouth evoking shouts and moans as Evan crushed his hair in his hands, sweating, begging him not to stop.\n\nSweat oozing down Craig's back onto soaked sheets as Evan fucked him, seemingly able to go forever, not wanting it to end. \n\nSlippery hands pumping and squeezing hard muscle, edging each other, teasing, releasing at the last moment, only to suck and touch each other towards another peak.\n\nHis sweet boy, so different. Aggressive, eager, supremely confidant, enflaming Evan's cock again and again. They wrestled each other, flipping roles and positions, Evan for the first time letting himself be passive and controlled by Craig's hands and mouth, letting him set the pace. \n\nEvan coming, both of them coming together, as their fingers tightly interlaced and Evan crushed Craig's palms with his own.\n\nTheir love, denied for more than a week, threatened, tested, made them inexhaustible with each other. \n\nTheir hearts and minds twisted together, knotted around an erotic core, as tightly as their bodies, never letting go, only growing closer and closer. \n\nEvan felt like he was making love with his own gay self.\n\nCraig forgot entirely about pleasing another person. He stepped fully into his truest being as a god of sex, burning with unapologetic lust, strong and powerful in joyful abandon, leading the way, showing Evan how much more there was to learn and feel and experience. Evan was absolutely in awe of him. \n\nWhen they finally flopped onto their backs, their hearts pounding, drenched in sweat, unable to go again, the sun was just coming up. \n\nThey drifted off to sleep holding hands. No words were necessary. They knew they had done it. Their love was stronger, consecrated with sweat and cum, blessed by wild cries. They knew they were more devoted to each other than ever, and that they could face whatever challenges tomorrow held. \n\n+++\n\nThe next morning, lying in bed, spooned tightly together, Craig murmured, \"You feel that?\"\n\nThe slightest breeze was wafting in through the window, but it was cool and moist. The ocean was awakening, finally pushing back the heat.\n\n\"Yeah,\" Evan said. \"Smells like rain.\"\n\n+++\n\nHours later, at dusk, they were sitting on Craig's lanai enjoying the cool-down. They'd gone out for a late brunch at a Malibu diner, feasting on huge plates of huevos rancheros. They knew they had things to talk about, but they kept their conversation light\u2014Craig filled Evan in on all the mundane details of his work while Evan told him about his visit home. But they smiled a lot and touched and held hands more than usual, conveying to each other a new and comfortable intimacy. They spent the rest of a lazy Sunday afternoon drinking coffee and talking and relaxing. Now they were sacked out on deck chairs, completely sated and happy.\n\n\"So I was thinking . . .\" Evan said, reaching out to touch Craig's thigh. \"I'd like to invite a friend over.\"\n\nCraig smiled. \"Good idea. Are you talking about that guy from the station\u2014Andy?\"\n\n\"Yes. He told me he wants you to introduce him to 'some of your friends.'\"\n\n\"Sure. Anytime. But I think I'm kind of partied out at the moment.\"\n\n\"Well why don't we just have him over for drinks?\" \n\n\"Of course. Next weekend, maybe?\"\n\n\"Or sooner. I have the whole week off. Maybe he's free.\"\n\nCraig rolled over on his side to face Evan, smiling into his brown eyes. \"I think that's a fantastic idea.\"\n\nEvan smiled back at him. \"Alright, then, I'll give him a call.\"\n\nIn bed, later, after another session of lovemaking, Craig lay nestled against Evan's arms and they talked quietly in the dimly-lit room. The intensity of their argument and the things they had yelled were on their minds.\n\nCraig said, \"So who were you talking about?\"\n\nEvan knew what he meant, but he didn't say anything.\n\n\"At first I thought you meant your dad, but . . . it wasn't just him, was it?\"\n\nEvan let out a tense sigh. He didn't want to go there, but he knew he had to. He ran his hand through his dark curly hair. \"Yeah . . .\"\n\n\"It's . . . Chad, isn't it? That guy, your friend? Did you see him last week?\" \n\n\"Yes. He came by, two times, wanting to talk.\" Evan held back the detail of Chad informing him he was gay.\n\nCraig rubbed Evan's strong arms, which were holding him so closely.\n\n\"You have to face it, babe.\"\n\n\"I know, and I don't want to . . . which I guess makes me a hypocrite, lecturing you about love . . .\"\n\n\"Are you still in love with him?\" Craig asked.\n\nEvan was amazed that Craig could be so blas\u00e9 and accepting about it. He did not sound threatened or worried in the least.\n\n\"No. . . I don't think so . . . I was never consciously aware of anything like that . . .\"\n\n\"Well you need to find out.\"\n\n\"But Craig, it doesn't bother you?\"\n\n\"Yes and no. I guess there's a remote chance you could fall into each other's arms. But I think it's something different. I just have a feeling. I think it's what you need to do, for yourself.\"\n\nEvan hugged him tighter. \"No. I'd be doing it for us. If you think this will make us closer.\"\n\n\"I do. I know so. Because Evan, it will get to be a strain. I can't be everything to you. I can't be your only path to who you are. I just can't. It will start to stifle me.\"\n\n\"You're right,\" Evan whispered. \"I think that's why, one reason why, I was angry with you.\"\n\n\"It's ok. It's ok.\"\n\nCraig's voice had changed, and he seemed to be thinking of something else entirely.\n\n\"What is it?\" Evan asked him.\n\n\"Nothing. I just got this feeling. I think I may be ready to face my dad.\"\n\n\"Well that's a good thing, isn't it?\"\n\n\"Yeah. Yeah. Whew,\" Craig said, shaking his head as if he just couldn't believe it.\n\n\"I'm a little surprised.\" Craig said. \"I thought I'd feel so different. That day, when you weren't there, when I first got any real confirmation, I fell apart. I totally fell apart. I thought that's what would happen again, and it almost did. But . . . I'm not. I'm ok. I'm doing ok. \"\n\nHe turned to face Evan. He looked at him, and caressed his face, as if seeing him for the first time.\n\n\"It's all because of you. I can, because this is real. We're real.\" \n\n\"Yes, we are.\"\n\n\"And I love you.\"\n\nEvan kissed him softly on the lips. \"I love you, too. And I know you can do it. Whatever it is you need to do.\"\n\n\"I love you,\" Craig whispered, holding him tighter.\n\nHe could hear Evan speaking quietly against his shoulder. \n\n\"It's a good idea. Because I might not always be there for you, baby. I might not always be able to be the strong one.\"\n\n\"I know\" Craig said, through a few tears. He held Evan tighter. \"As long as you'll always be my daddy.\"\n\nEvan spoke closely into his ear. \"I'll always be that. No matter what happens.\"\n\n+++\n\nThe next few days were quiet, in their house and all over the city, which was slowly recovering from the massive firestorms. \n\nEvan called down to Laguna and heard good news about his father; he was awake and alert and talking. He made plans to go down there over the weekend. He had the week off, so spent every day with Craig. \n\nWith not much going on, they fell into a rhythm of taking walks on the beach in the morning and going out to eat at night, searching out Japanese and Thai restaurants. Then they'd go home and make love. Each day was perfect, falling asleep and waking up in each other's arms and never being that far from a caress or a touch or a kiss. \n\nTowards the end of the week Craig decided to visit his sister in the valley, while Evan and Andy had made plans. He was just getting ready to leave when Andy knocked on the door. \n\n\"Heeeyy,\" said Craig, as he welcomed him in. \"Nice to see you!\"\n\n\"Hi, Craig. Thanks for having me over.\"\n\n\"Of course. Evan's out on the lanai. I was going to fix you guys some drinks before I headed out. Sorry I can't stay.\"\n\n\"Oh, that's ok.\"\n\nCraig took a moment to really look at Andy. He was very cute, in a boy next door kind of way, with warm hazel eyes and soft brown hair. But his body was really the main draw. He was amazingly ripped, tight, and beefed up\u2014which was somewhat at odds with his gentle demeanor and looks but together they made a luscious combination. Craig could see a rippling six pack under his khaki t-shirt, which was tucked into cargo shorts. He slid one hand up his strong, powerful forearm and up to his bulging biceps.\n\n\"What do you do? You lift weights?\" \n\nAndy blushed. \"I spend a lot of time at the gym. Blowing off steam, I guess.\"\n\n\"Come on, Evan's out here.\"\n\nCraig kept up the flirtatious touching, wanting him to feel completely relaxed. He noticed Andy was immaculately shaved and groomed, as if he'd spent hours getting ready. What a doll, he thought, as he racked his mind thinking for someone to introduce him to.\n\nAndy took a seat sitting backwards with legs spread around a chair as he chatted with Evan about work, mostly discussing all the assholes they knew, while Craig fixed their drinks. When he came back out he set the tray down and immediately said, \"So Evan tells me you're single and want to meet someone.\"\n\n\"Jesus, Craig, a little subtlety, perhaps?\" Evan exclaimed.\n\n\"What? I just want to help.\"\n\n\"It's ok!\" Andy practically shouted. \"I don't mind.\"\n\n\"Alright well let me think about it. Have fun you guys. I have to get going.\" Craig leaned down to kiss Evan before he left. \"Bye baby. I'll see you soon,\" he whispered. \n\nAndy simply could not help staring at them, drinking in the tenderness they expressed towards each other. He was really quite envious.\n\n\"So what do you want to do? You hungry?\" Evan asked.\n\n\"Actually, yes. You want to catch lunch somewhere?\"\n\n\"I'd love to. You like seafood? Craig and I go to this little place down on the beach.\"\n\n\"Well I don't have too much time. Why don't we go to the Getty? It's like two minutes from here. I know they have a great restaurant.\"",
        "\"The Getty. You mean the museum? The one with all the banners?\"\n\n\"Yes. Haven't you been there? You're right next door.\"\n\n\"Never. Not much of an art person. But why not, let's do it.\"\n\nThe Getty was another one of the many sites along his old beat that Evan had passed a million times\u2014every day\u2014and hardly noticed, much less had the opportunity to visit. He was surprised that Andy wanted to.\n\n\"So do you usually spend your days off at museums?\" he asked as they drove.\n\n\"Nah, just this one. I came out of curiosity after a shift one day and liked it. You'll see. It's really pretty cool.\"\n\nHe was right. \n\nAs soon as they pulled off the highway and onto the private drive lined with cypress trees in perfect rows, they had entered another world. It was a small museum built as a replica of a Roman villa, down to the smallest details. It truly was like stepping back in time. Gleaming white sculptures and bas reliefs adorned the exterior reflecting pool\u2014a simple rectangle full of the clearest, crystalline turquoise that mirrored the perfect rows of columns, the precisely measured and proportioned architecture, making it blend in with the clouds and the curve of hills. \n\nAs they walked back towards the restaurant, they passed images and objects\u2014paintings, mosaics, vases, in addition to sculpture\u2014of such fine, lush beauty. Images and representations of bodies, mostly male, mostly nude, paraded in front of Evan's eyes, one after the other. \n\nOf course Evan knew a little bit about classical art. But he was a bit blown away by the overt sensuality on display here. He reached out to still Andy's arms so he could slow down and enjoy some of it. \n\nHe stopped to peer at tiny drawings on vases of what looked like men fucking. A man on his back, legs spread, surrounded by other men, their phalluses huge and dripping; another of a blow job, an older man on his knees slurping at the cock of a very young man; naked men kissing and touching, in pairs and in groups.\n\nThe sculptures . . . celebrations of male beauty that would not be equaled for centuries . . . men as flagrantly erotic objects, displaying themselves, rendered with love and desire by unknown artists, unashamed, pure and lustful. \n\nAll this time, Evan thought, he had driven by this place never bothering to go inside, just passing it by. \n\nBut it wasn't true that he \"didn't exactly\" know about it. He'd seen the signs. He knew it was there. But he'd just kept driving.\n\nThe exterior world faded away for Evan. He forgot about Andy for a minute as he gazed upon art which had no other purpose than to proudly express gay love and desire. The hidden world of homosexuality. It was just as much a part of this city as anything else. He was reminded of the gym, of the gay bar. A world revealed he had never known before only this one was ancient, going far far back in time, and part of everyone's world, everyone's life, everyone's history. It had been quietly tucked way up here on this mountain hidden from view, the secret heart of his Los Angeles, beating and throbbing all on its own, for whoever cared to stop by.\n\nHe was awed beyond words, especially at certain statues that reminded him of Craig. Craig on his billboard, Craig lying invitingly on his bed, Craig when he held him in his arms. Evan knew that whoever had made these things had stood in his shoes, felt what he felt, had loved and wanted these heavenly beings as much as he wanted Craig.\n\nAndy's voice finally interrupted his reverie. \"You ready? I'm hungry!\"\n\n\"Yeah, yeah, sure,\" Evan said distractedly, tearing his eyes away.\n\n\"Wow this is really an amazing place,\" he said later as they chatted over bowls of pasta. \"I'm glad you suggested it.\"\n\n\"Yeah. Seems like a good place for a first date. Or maybe second.\"\n\nEvan laughed. \"Not your typical Los Angeles 'date' I'd have to say.\"\n\n\"Well I'm not really into the typical gay culture of LA. I'm thinking of moving, actually, back to San Diego.\"\n\n\"Oh, don't do that. You're on such a good career path here.\"\n\n\"Yeah,\" Andy said, anxiously beginning to shake his leg. \"I am. I'm doing great. Financially. Never been in better shape. But it's time, you know? I want something. I want a relationship. I want what you and Craig have. I crave it. And I just don't think it's happening here.\"\n\n\"I don't know, Andy. You can't predict the future. Who's to say it would be better anywhere else? One day, you could meet someone, out of the blue, just crash into them, and your life could change in flash, just like that. It will never be the same. I don't think you can orchestrate it.\"\n\nAndy smiled. \"Is that what happened with you and Craig?\"\n\n\"Pretty much.\"\n\n\"God I still can't believe it. If only. And you had seriously never been with anyone before him?\"\n\n\"Nope,\" Evan said. \"What about you? How did you know? When did you know?\"\n\nAndy cracked a grin. \"Mmmm. That's kind of a good story.\"\n\n\"Oh please tell!\" Evan nudged him. \"I want to hear it.\"\n\n\"Well it was with my best friend. The summer of graduation. Brian. We were always together, best friends since forever. Brian would be leaving for college in the fall, so we spent as much of it together as we could.\"\n\n\"Did you know you had feelings for him?\"\n\n\"Sexual feelings? Hell no. Not until then at least. I didn't really know, I mean, I sort of knew I wasn't into girls but I certainly hadn't come out. But I knew I loved Brian, in a way. I didn't exactly think of it as gay, but I knew I was very close to him, that we were 'special' kinds of friends. I guess you could say I was in denial.\"\n\nBy this point Evan was hanging on Andy's every word, utterly fascinated. He just wanted him to keep talking.\n\n\"So it all happened one night.\" \n\nEvan noticed Andy get a kind of far-away look in his eyes, happy in the recollection.\n\n\"My parents were gone, and we were just hanging out at my house, in my bedroom. It was really hot, and Brian was lying on my bed wearing nothing but a pair of loose gym shorts. He had his fucking thighs spread, and I could see his cock just kind of flapping in the breeze. I was all, 'Jesus, dude, cover it up.'\"\n\n\"He's like, 'What? You don't like seeing my nuts?'\"\n\n\"'Fuck no,' but I couldn't stop myself from looking. It was huge. He had a huge cock. Uncut. And it's just fucking lying there on his thigh.\"\n\n\"I threw a pillow at him and I'm like, 'Put it away, dude, it's blocking the sunlight.'\"\n\nEvan found himself suddenly getting very hard. He felt his own cock growing, swelling up, pushing at the fly on his jeans, hanging on Andy's every word!\n\n\"And he fucking spreads his legs even wider! And he's like, 'What, you jealous?'\"\n\n\"'Of that thing? How do you even jerk off with that fucking skin all over it?'\"\n\n\"And he pulls down his shorts. Just pulls them right off. He's showing me his cock and it's fucking huge and I'm just gaping at it.\"\n\n\"He said, 'Do you want to see me do it?'\"\n\n\"I was fascinated. I'd never seen an uncut cock. Didn't even know they existed, I think. It was so weird! So I moved closer to him, still acting and thinking like nothing's going on, and said, 'Yeah, show me. How the fuck do you . . .?'\"\n\n\"And in seconds he's got that fucking dick in his hands. It's hard. It's massively hard.\"\n\nEvan was absolutely aching, practically drooling. He could see it. He could picture it all perfectly just as it happened. Andy, on his knees, watching. Brian, swelling up, proud of his big dick, grasping it, proud of his erection. Stroking out some pre-cum. Showing off for his friend. \n\n\"Then what happened?\" Evan said eagerly. \n\n\"He lies back on some pillows, legs wide, and just starts stroking, man. I was in awe. I wasn't . . . you know . . . explicitly turned on, not yet, just really fascinated. I wanted him to keep going! I'd never seen anything like it.\"\n\n\"He starts talking to me. 'You gotta go gentle, at first. Like this.' And I'm watching his hand. It's grasping that cock hard. He's showing me. He pulls the foreskin up and down, and pretty soon it's sloshing and squishing with pre-cum. It was gross and disgusting and the hottest fucking thing I'd ever seen in my life.\"\n\n\"The fucking sounds, the slick, slippery, flesh sounds. And I know he's working it hard for me. He's putting on a show. He's making it good. He's just letting it all out.\"\n\n\"And then . . . I don't know how to describe it . . . I'm sitting there, watching, thinking I'm just 'being curious,' when somehow, it shifts. I think it's because we looked at each other. I caught his eye, or he caught mine, and the next thing you know something's happening. I know this is fucking different. This is hot. And he says, so quietly, 'You like it?'\"\n\n\"And my mouth is so dry, I can't speak. I'm hard. My hand is moving down to my shorts. I can only nod at him, and he knows what the fuck's going on, we both do.\"\n\n\"Then he says, 'You want to help me?'\"\n\n\"I nod, and in a second he grabs my hand and fucking lands it on the head of his cock. 'Jack it off,' he hisses. 'Jerk it off for me. It helps if you, if you, yeah, get some of that liquid, get that pre-cum oh fuck yeah, spread it all over, just like that. . .'\"\n\nAndy's voice trailed off in amusement. \"And, well, that's pretty much how I came out of the closet.\" \n\n\"And what happened between you two?\" Evan instantly wanted to know.\n\n\"Oh my god. That summer. The summer of sex. My fucking god. We were together every day. Every fucking day. We started just by jerking each other off, you know, mutual masturbation, but that didn't last long. Pretty soon we were going down on each other all the time. Jesus! Sucking and swallowing and 69'ing.\"\n\n\"Did you fuck him? Or did he fuck you?\"\n\n\"Both. Oh my god. Wow. Still makes me hot remembering all that.\"\n\nEvan abruptly stood up. \"You ready? I'd kinda like to get going.\"\n\n\"Yeah, yeah, sure. Wait, did I offend you or something, Evan?\"\n\n\"Hell no. No, no, I just, uh . . . want to get back.\"\n\nEvan felt a little bad sending Andy on his way, but he had to get going anyway. They said goodbye, made plans to meet again with Craig, and the second Andy left Evan was up in Craig's shower. He could barely make it to the door before he had his jeans off, his briefs down, and his hand wrapped tightly around his cock. He had to come so bad he thought he would explode.\n\nThis was no loving, tender orgasm. It was purely physical, a violent release of something pent up and constrained. His cock was harder than he'd practically ever seen it. It was rigid. Turgid. Like a solid bar of iron. Throbbing and pulsing, pulling at his groin, red hot to the touch; Evan yelled out loud when he grabbed himself. So much cum had leaked out on the way home his balls were soaked.\n\nHe fisted his cock, eyes closed, picturing the scene. Those two boys. It took him less than two minutes to come, propping himself up with one hand against the shower stall, spraying the dark tiled walls with jets of hot, exploding cum, crying out, wondering what the fuck was happening. It was the kind of orgasm he'd had when he was young and just discovering it but much more powerful-an instinctual, natural, animal reaction. He was exhausted and stunned when it was over, and he almost instantly felt himself getting hard again, so he stroked some more, not wanting to let it end. He couldn't breathe.\n\nIt was terrifying and exhilarating at the same time. \n\nHe collapsed against the shower wall with tears in his eyes, feeling drained but elated. He knew he had discovered something, but what he did not know\u2014exactly. He knew this was about himself. And Chad. And that he absolutely had to see him.\n\n+++\n\nWhen Craig got home, Evan was waiting for him, and he told him the whole story, the whole day. \n\nCraig took it all in, and laughed when Evan told him about the jerk off scene.\n\n\"Sounds like some of my prep school days.\"\n\nEvan was pacing in their room with nervous energy.\n\n\"Yes, but . . . that never happened to me. It never did. It never did.\"\n\n\"Sounds like these two were also together, you know, like a couple. Probably made it more intense.\"\n\nEvan pulled Craig onto their bed. He was so fucking hot and horny tonight!\n\n\"Would you do that? Jerk me off? Just jerk off my big cock, please?\"\n\n\"Whatever you need, baby,\" said Craig. \"Whatever you fucking need. Mmmm . . . come here . . .\"\n\n+++\n\nOn the morning that Evan left for Laguna, Craig called his sister and discovered that his father was in town. He was in Beverly Hills, at the same house they'd (sort of) grown up in. After absorbing this, he lazed around on his deck for a while, pondering again and again if it was worth it.\n\nHe felt so different. It was only a few weeks ago that he'd broken down, but a lot had happened since then\u2014it seemed like ages ago, and he wondered if there was any reason to even bother now. He seemed fine. And for the most part, he was. Except for a nagging sense of guilt. \n\nHe could feel it, like a splinter in the corner of his mind, telling him to go, to do it. Telling him if he didn't, it was because he was trying to keep that old, old hope alive, that he was unable to truly let go, and that this was making him weak. He had to shut that goddamned door for good.\n\nSo he did it. Without thinking. He didn't change clothes, or even shave, just hopped in his Porsche and started to drive, not having a clue what he was going to say or do once he got there. The whole time he thought of Evan. \n\nWhen he arrived he saw his dad's car in the driveway. He had not been home\u2014here\u2014in years. He felt the slightest twinge of anxiety being back, but nothing he couldn't handle. He went up and rang the doorbell.\n\nA woman answered the door. A young bleached blonde who was six months pregnant. She could have been his dad's second, or third, or fourth wife. They were pretty much all the same, except that they kept getting younger and younger. Jeannie was probably nastier than the rest. She seemed obviously annoyed to see Craig. \n\n\"Craig! What are you doing here?\" \n\n\"Just came to see my father. Is he in?\"\n\n\"Well, this is unexpected. I'm not sure he wants any visitors. He's busy.\"\n\n\"Oh it will only take a minute,\" Craig said, pushing his way past her. \"Is he in his study?\"\n\nJeannie made a sour face and gestured wordlessly down a hallway.\n\nCraig walked the same hallway he had on the night he was 12. He could remember every single detail of that night and the feelings of that scared little boy. He steeled himself, imagining, what if instead of his father that night, he'd encountered Evan? Or someone like him? Someone who welcomed him and loved him, and didn't turn him away. How would his life have turned out differently?\n\nIt was the first time he'd ever been truly angry about it. Somehow feeling loved did that. He had a perspective he'd never had before. \n\nHe knocked on the door, but didn't wait for an answer. \n\nHis dad was there, but Craig was a little shocked at his appearance. Normally a very well-dressed and well-groomed man, he was unkempt. His shirt was untucked over wrinkled khakis, and he had stubble on his face. He did not look well. \n\nHis dad was extremely surprised and clearly unhappy about the visit. But for once, it didn't bother Craig. Craig sat down on the couch, making himself at home. His dad just looked at him, finally saying \"What is it?\"\n\nCraig sighed. He thought this would be so different. He thought he'd be scared, or full of anxiety, but all he was feeling now was empty. \n\n\"I want to talk to you.\"\n\n\"Yes? About what?\"\n\n\"What's going on dad? You don't look good.\"\n\nHis father got up to go listen and at the door and make sure it was locked. \"What the fuck are you doing here?\"\n\n\"Something wrong?\" Craig asked. \"Trying to hide from Jeannie?\"\n\n\"Look, Craig, I'm under a bit of pressure at work. Could you get to the point?\"\n\n\"The point. Ok, let me ask you a question. Do you remember a night, when I was about 12, and I came down here? You were in this study, working, and I came down in the middle of night scared, because I'd had a nightmare?\"\n\nHis dad looked at him blankly. And Craig knew in an instant that he had no recollection of it whatsoever. \n\nCraig sighed. \"Jesus, what a waste of my life. What a fucking selfish dick you are. Utterly useless.\"\n\nPerhaps it was what he said, or perhaps it was his tone, but Craig Symons, Sr. stopped for a second to look at him. He actually seemed interested for the first time. \n\n\"What?\"\n\nCraig held up his empty hands in the air. \"You're useless. You got nothin'.\"\n\n\"What?\" his dad said, moving closer to him. \n\n\"What, this surprises you?\"\n\n\"Why do you keep doing this? When are you ever going to let the past go? What the fuck do you want from me?\"\n\n\"Nothing, dad. Nothing at all. That's why I'm here.\"\n\n\"Jesus Christ. I don't need this, Craig! I'm having major problems with work, with money, with Jeannie . . .\"\n\n\"Ok, well I'll make one thing easier on you. You can take my trust money. All of it. I don't want it. I don't need it.\"\n\nHis dad eyed him, and Craig wondered for a brief second what kind of twisted shit had kept them linked to each other for so long. He knew why he had stuck around, that was abundantly clear, now. It wasn't love. It was never love. It was just need\u2014the natural need of a child for a parent. The other part was idealization. He'd blown up this man in his mind to mean something he never was. It was a dream, an ideal, he'd desperately needed at a crucial point in his life and he'd never outgrown it. But he didn't need it anymore.\n\nBut his father? For the first time Craig was able to look at him objectively. It had never occurred to him, not in a million years, that his father was getting something out of it, too. Something was being threatened in this man, right now. He did not like their relationship changing. He was scared, but WHY, for fuck's sake? He'd always acted like he wanted Craig to be gone, and now that he was . . . he acted like he was the one falling apart. \n\nCraig didn't know for sure, but he had a guess. He stood up.\n\n\"Yep. I'm done, dad. Look at the papers. Read Variety and The Hollywood Reporter this week, and you'll figure out why, in case you're interested. But it isn't just that. I want out. I want this to end. I'm done with you.\"\n\nHis dad seemed to wither in front of him.\n\n\"And I'm standing here, now, looking at you, wondering why the hell this bothers you. You want to tell me?\"\n\nHis dad could only sputter. He had no answer. He was a fish out of water, unable to comprehend what was happening. \n\n\"Well I think I may know. It's how it was with your dad, wasn't it? The same exact thing. It's all you know. It's all you've ever known, all you'll ever know. And you so want it to stay that way, don't you, because it's too goddamned late for you to change. You liked and needed to see me begging you for love because it justifies how you've spent your life, isn't it? Because that's exactly what you've done.\"\n\n\"I bet I know what's going on with you. I bet I can figure it out. You're just like me\u2014you had to succeed, make money, everything you did was to get some sort of approval from your father, show him you were worth something, or perhaps defy him. You instilled the same drive in me. And I see you now\u2014something's obviously collapsed, something's gone wrong. I can see it. I was right where you were not two weeks ago. I get it.\"\n\n\"Dad, you're on the verge of having a real fit!\"\n\nCraig ran his hands through his hair. He wished he could feel more pity, but he simply couldn't.\n\nThe most he could do was say, \"Dad, you've got a wife and a baby on the way. Hang onto that. Please. Do it differently this time. Go talk to Jeannie. But as for me? I'm through with you and this whole fucked up family. I don't need you anymore.\"\n\nCraig started to walk out of the room. He turned one last time to look at his dad, who was staring after him like he'd seen a ghost\u2014perhaps a shadow of a self he once wanted to be, Craig could only guess. As he shut the door, he saw his dad mouthing a word. He was saying, \"Craig . . .\" mystified, as if he was only now realizing he had a son. ",
        "But it was too late. \n\nCraig got in his Porsche and sat in the driver's seat for a few minutes\u2014the same car he'd driven like a mad man through the streets of LA, the same car he almost killed himself with. He needed to sell it, immediately. He didn't want it anymore. He pealed out of the driveway and took off, eager to get away, eager to get on with his life. He did not look back.\n\nHe drove, and for the first time he realized he was not driving to get away from something\u2014himself, his past, his pain. No, he was driving to get somewhere, and he knew exactly where that was. There was only one place in the world he wanted to be, and that was with Evan.\n\nEvan.\n\nEvan's words from that night suddenly echoed loudly, so loudly in his head:\n\nWhat do you know about loving a man, Craig, I mean, really know about it?\n\nNot a fuck of a lot, Craig thought. Not as much as I'd like to. \n\nEvan. My god. How selfish he'd been with him, how needy. Had he even begun to love him\u2014really love him, really be there for him? He'd just sort of accepted him into his heart like a mystery, like a gift from the heavens. Had he really earned it? Was he good enough to be loved by him? \n\nCraig had had no idea how he would feel doing this and he was quite surprised at the reality. He was not upset, or afraid, or anxious. When it came to his father, he simply felt empty, and glad to be rid of it. He had chosen a different life. He'd chosen to love. He was not going to remain in the same place forever. \n\nHe knew he was stronger. He could feel it. He was going to embrace his new self. And if for some reason, if for some horrible, terrible reason things didn't work out with Evan in the future, even then he knew he'd survive. He knew it. He was on a new path, one of strength and self-acceptance.\n\nYes, he was driving towards Evan, towards love. But he knew he'd be driving towards that destination for the rest of his life, no matter who was at the end of it.\n\nHe pulled into his house very tired. He checked his phone\u2014there were no messages. He immediately lay down to rest. Oh it felt so good. He kept his phone by his side in case Evan needed him, but was almost instantly asleep.\n\n+++\n\nEvan was home talking with his mother and sister, after stopping by the hospital. His dad was due to be released the next day and he had just finished setting up a hospital bed in his parents' room. When he was done, he managed to send Craig a quick text saying goodnight, he'd talk to him tomorrow. Then he took his phone and went out into his back yard. He walked to the old swingset his parents still kept around, probably hoping it would be used by grandkids, and sat down on one of the chained seats. \n\nHe stared at his phone for a few minutes, dialed Chad's number\u2014he'd never forgotten it\u2014and hesitated for a few more seconds before forcing his thumb to push the icon. It began to ring.\n\n\"Hello?\"\n\n\"Hi Chad. It's me. It's Evan.\"\n\nSilence. \n\n\"You there?\"\n\n\"Yes. Where are you? Are you home?\"\n\n\"Yeah. Dad's coming back tomorrow so I came to get the house set up.\"\n\n\"Uh huh. Well that's good.\"\n\n\"I was hoping we could talk, later, if you want to.\"\n\n\"Yeah. I do. I think we should.\"\n\n\"Alright well I should be free all day tomorrow. You want to hit our old spot?\"\n\nEvan heard a little laugh on the other end of the line. \"Sure. Sure. Haven't been there in years. What, like around noon?\"\n\n\"Ok, sounds good. I'll, uh . . . see you then.\"\n\nThe next morning Evan chatted with Craig before heading out. Craig told him all about his \"date\" with his father.\n\n\"Wow. I'm so proud of you, baby. You really did it.\"\n\n\"Yeah, but it seems unimportant now. How are you?\"\n\n\"Well, dad should be coming home today. Things are fine here. And you know . . . maybe I can move my stuff up tomorrow . . finally make it official.\"\n\n\"Oh, fantastic! I haven't even set things up for you. I'll do that today.\"\n\n\"I miss you, Craig. I can't wait to be there, all the time.\"\n\n\"Me too, baby, me too.\"\n\n\"So I'm seeing Chad today. Hopefully it won't take too long.\"\n\n\"Alright. Call me if you need me. I love you, baby.\"\n\n\"I love you, too,\" Evan said, clicking off the phone.\n\nHe took his bike and drove down to Aliso Beach. It was actually a pretty gloomy day, with dark clouds amassed all along the horizon. At the southern end of the beach, there was a small pier in the midst of gigantic rock formations, shrouded in palm trees. It was secret and private and it was where he and Chad used to come all the time. As he pulled up he saw Chad standing by his VW Bug convertible, the same old damn piece of shit from ten years ago. Evan could not help laughing remember how they used to cram their surfboards in the back and fly down the highway in it.\n\n\"Hey,\" he said, pulling up. \"I see you got the old ride out.\"\n\nChad laughed. \"Yeah, yeah. Well you need wheels in Southern California. I haven't needed a car in a long time.\"\n\n\"So you took a job here, you told me. And my mom mentioned it, too. Coaching?\"\n\n\"Yes. Fantastic opportunity. Actually I'm an Assistant Coach at USC.\"\n\n\"Awesome. So you'll be, what, moving up to LA?\"\n\n\"Oh, definitely. I already have an apartment in Silver Lake lined up. Are you still in Venice?\"\n\n\"Yep. Same old place. But I'll be moving, too, soon.\"\n\n\"Oh, where?\" They stood in the parking lot awkwardly avoiding each other's eyes.\n\n\"Malibu, actually.\"\n\n\"Ah, moving up in the world.\"\n\n\"You want to head down to the beach?\"\n\n\"Sure. Let me grab my stuff.\"\n\nThey walked gently down a slippery rock ravine that led eventually into a little cove, where they spread out their towels. They both sat up with their hands around their knees, looking at the ocean.\n\n\"Been a while, hasn't it?\" said Evan. \n\n\"Yeah, but it seems like nothing's changed. Here we are just like old times.\"\n\n\"Some things are different.\"\n\n\"Ah. You mean what I told you.\"\n\n\"Yes.\" \n\nEvan did not understand why he was so uncomfortable. He was gay, for fuck's sake. He was with Craig. But he could barely look at Chad.\n\n\"Well . . . I told you, because I thought it might help explain things\u2014why I avoided you and never responded to your letters or calls.\"\n\n\"It hurt me, Chad. I lost a friend. A good friend.\"\n\n\"I know, I know. That's why I'm here! Evan, I'm sorry. I'm so sorry for how it played out.\"\n\nEvan looked down at the sand, digging a useless hole.\n\n\"When did you know this? Do you mind if I ask? How you knew?\"\n\n\"Are you sure you really want to know?\"\n\n\"Yes,\" Evan said firmly. \"Tell me.\"\n\nChad's voice had become softer. \"Don't you remember Senior Prom?\"\n\n\"Huh.\" Evan grunted. He hadn't expected that. \"Prom? What about it?\"\n\n\"You went. That's what happened.\"\n\n\"And . . . so? I'm not getting it.\"\n\n\"Evan. Would you please fucking look at me? I'm sick of talking to your back.\"\n\nEvan turned around, a little to the side. Chad's blue eyes were looking earnestly into his own, searching them with nothing but honesty.\n\n\"Don't you remember how I upset I got? I was so fucking mad at you, after you asked that girl. Wendy. Fucking Wendy Mancuso, with the big tits. I'll never forget that name.\"\n\n\"Yes. Yes. I do remember. You were mad. You didn't speak to me for like two weeks.\"\n\nChad reached out to touch Evan's knee. \"Can't you figure out why?\"\n\nEvan stood up, brushing his hand off like it was burning hot. He wanted to run away. He paced, not looking at Chad.\n\n\"So what, you were . . . jealous or something? I always thought it was because, you know, I got a date and you didn't.\"\n\n\"No, it was more than that!\" Chad exclaimed.\n\nEvan didn't want to hear it. He wanted to be anywhere but here! He felt something caving in in mind, crumbling into dust, pulling him down into the sand, into the depths of the ocean. \n\n\"I don't want to know,\" Evan said. \"Chad, I don't want to hear this.\"\n\n\"Too bad. You have to Evan. You have to.\" Chad sat calmly gazing up at Evan, watching him closely, gauging his reaction. He took in his nervous anxiety. It was quite familiar to him.\n\nEvan stood in front of him now holding his gaze. He could not stop the love and pain from flowing into his heart. He could not stop it. He knew what Chad was going to say.\n\n\"It wasn't just that you had a 'date,' Evan. God, I'm not so petty as that. Let me explain. Until that moment, that day that you told me\u2014such a silly thing, no big deal, you're going to the prom, who cares?\u2014I never realized that I was gay. Never. And I didn't realize it then, either. All I knew was that it hurt me. Oh did it hurt me. It felt like the biggest betrayal. I remember I went home and curled up on my bed and cried. Just sobbed without having a clue why. It HURT. It felt like you'd stabbed me in the fucking heart. And I couldn't understand why, at first.\"\n\n\"So I had to ask myself why this bothered me so very, very much. Why shouldn't I be happy for my best friend, snagging a gorgeous girl?\"\n\n\"Eventually I did think 'Ok, I'm gay.' But that was the least of it! That was the second realization. The first realization, the most important one, was that\u2014\"\n\nEvan interrupted him, completing the thought. \"You loved me. And I loved you. We did, didn't we?\" Evan said, simply, through a strangled voice.\n\n\"Yeah, babe, I think we did.\"\n\nEvan spun around, bending over to catch his breath. He felt the urge to vomit and hyperventilate at the same time. He could not take this in, even though it was hardly a surprise. But he simply could not face it.\n\nChad came over and stood by him. \"I'm sorry, Evan! I'm sorry to spring this on you, but please understand. Please, please, understand that's why I didn't want to see you. It was just too goddamned painful. Just too fucking painful. I was heartbroken for a long time. I thought you were with women. That girl I heard about, Amy? What could I do? I couldn't tell you. I didn't think I could be the one to tell you, and risk being rejected and feeling that pain all over again. I just couldn't. So I avoided you.\"\n\nEvan heard him but was shaking his head. \"No, no, you're wrong. I mean. I was with women. I was, until recently. I'm gay, Chad. I am. It's just . . .\"\n\nChad felt sudden elation hearing Evan's words. \"You mean you know?\"\n\nEvan brushed off his question. He was still dealing with something. They were moving too fast.\n\nAll the pieces, all the mysteries of his life, were rapidly falling into place, so fast he could not catch up with it. Chad. He had loved Chad. Of course he had. But he loved Craig, too. So why was it so much worse with Chad? Why did it embarrass him and shake him to the core, why did he want to run?\n\nHe looked at Chad with dawning understanding on his face. \n\n\"It's because I loved YOU. YOU. My best friend. You were as close as a brother to me. More than that, even.\"\n\nEven now, after all this time, the feelings of shame and self-hatred poured through him. The awareness that he was sexually attracted to someone so close, someone he'd known all his life, it made him feel perverted. Like some kind of monster. And that's why. That's why he could never see it or admit it. Because it was Chad, always Chad.\n\nEvan mumbled. \"It's almost like, like . . . incest or something. I can't, I can't be having these feelings for my FRIEND. My BROTHER. I can't, I can't.\" Even now he felt the urge to vomit at the thought!\n\n\"What? What are you talking about, incest, Evan?\"\n\n\"Nothing. I'm just telling you. I'm understanding. Why I could never see it.\"\n\n\"But it doesn't make you 'sick' and 'perverted.'\"\n\n\"I know. I know. But I didn't know it then. I didn't know it. Oh, Jesus Christ, Chad, Jesus Christ! I loved you. I really loved you.\"\n\n\"I know. I know you did. And I loved you.\"\n\n\"Chad . . .\" Evan said, and grabbed him fiercely and pulled him into a tight, smothering embrace. The emotions of ten years past were as raw and fresh and real as if they were just happening. He hugged his friend, letting himself feel the love he had for him, had always had without knowing it. \n\n\"I'm so sorry. I'm so sorry!\"\n\n\"It's ok,\" Chad said. \"It's ok. We're talking about it, now. I didn't blame you. And you're out now, which is more than I expected. I thought you were still in the closet. That changes everything.\"\n\nBut Chad felt Evan shaking his head against him and murmuring, even as he continued to hold him.\n\n\"No, no, oh Chad, I'm so goddamned sorry.\"\n\n\"What, Evan, what? Don't you . . . don't you feel the same way?\"\n\nEvan pulled back, still holding him. His saw the hopeful light in Chad's eyes, knowing he'd have to break his heart all over again.\n\n\"No, Chad,\" Evan whispered. \"It's not that . . . it's . . . I'm with someone. I love someone. I have a boyfriend. Oh god I am so sorry!\"\n\n\"Oh. Ok. Um, ok. Was not expecting that.\" \n\nNow it was Chad pacing and walking away, unable to look at him. Now he was the one who felt like he had to vomit, like he'd had his knees kicked right out from under him. He bent over and held his legs, catching his breath. \n\n\"Ok, whew, that's uh . . .\" \n\nChad's voice broke and a loud sob was torn from his throat. The tears were fresh, but they were actually 10 years old, and his lover was telling him he had a date for Prom . . . \n\n\"I shouldn't have come back. . . I shouldn't have come back.\"\n\nBoth of them had been so preoccupied they had completely failed to notice that the dark clouds in the distance were now directly overhead, and in a second a huge flash of lightening and violent crack of thunder shook the sky before it exploded in heavy rain, soaking them to the skin in seconds. \n\nIt was dangerous so isolated on the beach, so Evan grabbed Chad's hand and pulled him into the protection of some huge rocks which formed a kind of dark cave. Around them the lightening flashed so near they could see it strike the sand.\n\nAs Evan pulled him inside, Chad fell against him, his rain-soaked t-shirt showing the most amazing rippled chest and fabulous abs. His full lips were wet and his eyes drowsy with sudden lust even through his tears. Evan's glance was torn down to Chad's crotch and he saw him, hard, his cock plainly visible through the thin fabric. He couldn't stop it. He couldn't stop it! He looked directly at Chad with the repressed lust of an 18 year old boy who had never even had a real kiss.\n\nChad pressed him back against the rocks, staring at him, his eyes drawn straight to Evan's lips. They were so fucking hot. So soft, so full, so sensuous. He gazed for the first time with undisguised sexual longing at his beautiful friend and his hands reached of their own accord to stroke his face as he looked into his dark brown eyes. He moved closer to Evan, who was utterly transfixed. The rain formed a thick blanket around them, shielding them from the storm.\n\nChad whispered, \"You're with someone. Ok. But please, Evan, pleeeeaase . . . .\"\n\nOh the need and longing and anguish in his voice! Evan could not refuse him.\n\n\"Please . . . babe . . . just one kiss . . . just once, just this once, please . . .\" and then his lips had found Evan's and they were both lost.\n\nIt was the best kiss that never was, the spark that never ignited the flames, the touch that arrived ten years too late. Evan felt Chad's tongue push into his mouth and he was 18, a young gay man in love with his best friend, and kissing him for the first time. He was Andy, and he was Brian, and he was Craig, all at the same time, newly born into the truth of his body. It was the sweet taste of another man that had haunted his dreams without even knowing that he had dreamed anything. It was the forbidden lust for his best friend who was like a brother, which had so enflamed his cock the other day. He was utterly, completely powerless to stop it. He sucked Chad's tongue into his mouth like he was drinking in his lost youth, his lost years, all that time he had spent alone, without the feel of Craig's arms around him.\n\nCraig. \n\nEvan moaned, as if in pain. He felt the pull towards Chad like an inexorable slide, like the force of gravity. But it was dragging him away and down, towards a place he did not want to go. He did not want to slide into the past! He knew it would drown him. \n\nHe wanted only Craig, and their future together. \n\nWith an immense effort he pushed Chad away, shaking his head, covering his mouth.\n\n\"No, no, no no, no, no we can't, I can't. I can't go backwards! I don't want this. I can't want this!\"\n\n\"Evan, please don't do this to me. Please. Pleeeease!\" Chad begged him. \"Please don't leave me again. Don't run away like you always have!\"\n\n\"I can't, I can't,\" Evan moaned, even as he found his arms reaching for Chad again.\n\nIt was just at this moment that Evan's phone buzzed in the pocket of his trunks, loud and insistent. He kept it with him at all times, in case Craig needed him or there was news about his dad. He held a finger up to Chad mouthing, \"Hang on.\"\n\nHe glanced down. It was a text from his sister Gina. \n\nEvan. You need to come back to the house RIGHT AWAY. Hurry!\n\n\"Oh my god. Chad, Chad, I have to go, I HAVE TO GO. I'm sorry, I'm sorry. I have to go.\"\n\nEvan took off running into the rain, leaving Chad with a raging hard-on and a look on his face that would melt the coldest heart. \n\n+++\n\nAt the house, Evan hurriedly parked his bike and ran up to the door, knowing what he would find even before he got there.\n\nGina was standing on the doorway with a look of total shock on her face, holding her phone. She saw Evan approach as if in a dream.\n\n\"Gina! Gina! What\u2014what!\"\n\n\"It's daddy, Evan,\" she said, with a lost, empty voice. \"It's daddy. He's gone.\"\n\nEvan was vaguely conscious of a voice in his head saying \"Oh no. Oh no, no, no, no, no . . .\"\n\nBut his sister only heard him say \"No\" once before he slid to the ground.\n\n+++\n\nIn Malibu, Craig was in his bedroom cleaning out some drawers and closets when his phone rang. He picked it up, happy to see Evan's number. \n\n\"Hey, baby, I was just thinking about you.\"\n\nBut a woman's voice came over the line.\n\n\"Hello? Hello?\"\n\n\"Uh, hi . . . who is this?\"\n\n\"It's Gina. Evan's sister. Is this Craig? Do I have that right?\"\n\n\"Yes! Yes, yes, yes! What's wrong? Where's Evan?\"\n\n\"I'm sorry. I don't know you. I found your number here. Evan is asking for you. Can you get down here? Right away?\"\n\n\"I'm on my way,\" Craig said, rushing out of his room.\n\n\"Please hurry.\"\n\n\"I'll be there as soon as I can.\"\n\nCraig rushed through the house, grabbing his keys as he flew past the front door. He hadn't ever been to Evan's house but he knew the address and punched it into the GPS. \n\nIt was the longest drive of his life.\n\nThe rains that had been held back for a year from California had finally broken, and they poured down into the valley with the force of a monsoon. His wipers were going a thousand miles a minute but he could still barely see. He was so scared. He had to get there! Evan needed him. He had to get there! \n\nIt took forever. Absolutely forever, with rain and traffic impeding him at every turn. \n\nHe picked his way through one fucking little suburban street after another, trying to find his house. He had to get there!\n\nFinally he saw Evan's bike and slammed on the brakes, leaving the Porsche at nearly a 90 degree angle to the curb as he ran towards the door. As he approached, he saw Evan walking towards him, stumbling towards him in the rain, a shocked and dazed look on his face. When he reached Craig he said nothing, only collapsed into his arms. Gina saw it all happening from the window.\n\n\"Hey. Hey. I'm here. I'm here, baby, I'm here.\"\n\nEvan held him like he was the only life raft in the vastest ocean. \n\n\"Craig,\" he cried into his neck. \"Craig. He's gone. My dad is gone. My father . . . oh god . . .\"\n\nEvan's body shuddered and collapsed beneath him and he fell to his knees, dragging Craig down with him. Craig tried to keep him upright, using his strong arms to prop him up. ",
        "\"I gotcha, I gotcha,\" he said.\n\n\"Craig.\" Evan moaned. \"Craig. Don't leave me! Don't leave me!\"\n\n\"I won't baby, I won't. I'm here.\"\n\nEvan sobbed into his arms knowing there was only one person, one person in the whole world who could help him right now, and that was his sweet angel, who was just as damaged and wounded as he. No one but Craig knew the pain of this loss. He'd lived it his whole life, and Evan had held him just like he was now. They knew each other and understood each other like no one else. \n\n\"It's ok. I'm here. I'm here. It's ok.\"\n\nEvan clung to him as the only solid thing, the only reality. He held him and cried, his sobs turning into howls as he clutched at Craig's chest. \"Don't leave me. I can't face this without you. Don't ever fuckin' leave me!\"\n\nIn the heavy rain, Evan cried for his past. For Chad, for his father, for the love that was lacking between fathers and sons, for the unexpressed lust that had accompanied his every day and night. \n\nFrom this moment forward, they were two men who would have to face a world without fathers, loving each other, helping each other, discovering for themselves what it meant to live as a couple, facing an unknown future but knowing it could be faced, as long as they had each other.\n\n+++\n\nEpilogue: 9 months later.\n\n\"Jesus, Craig, hurry up! They're almost here!\"\n\nEvan yelled to him from the lanai, where he was barbecuing and setting up drinks and snacks. Craig was doing god knows what in the bedroom, probably primping.\n\nThen there was a knock on the door. \n\n\"Ok, then, I guess I'll get it.\"\n\nHe opened it wide with a big smile on his face. \"Hey, hey, guys. Glad you could make it!\"\n\nAndy stepped inside, holding hands with Chad. \n\n\"Aw, look at that apron. So domestic of you,\" said Chad.\n\n\"Yeah, well, this will be you in a few weeks. You guys find a place yet?\"\n\n\"No,\" said Andy, glaring at Chad. \"HE doesn't want to move from Silver Lake.\"\n\n\"I like it there, babe! I've told you! I like getting up into the hills.\"\n\n\"Aw, your first fight,\" said Evan. \"Come on in. You want something to drink?\"\n\nFinally Craig emerged from his cave, looking stunning with an early summer tan and his trademark yellow shirt and jeans.\n\n\"Fuck, I do. A martini, please. Hi,\" he said, giving a quick kiss on the cheek to both Andy and Chad. \"Good to see you.\"\n\nThere were smiles all around and quick laughter as the four friends relaxed. This had become nearly a weekly ritual for the last few months, around the time Andy and Chad started getting serious with each other. In no time, it seemed, they had formed a close unit, preferring to spend time with each over nearly all their other friends. \n\nThey were sitting outside laughing, buzzed, as the sun set. It was a beautiful, gorgeous, absolutely perfect evening in Los Angeles.\n\n\"I have an announcement,\" said Evan, in a slightly slurred voice. \n\n\"Oh, toast, toast!\" said Chad, holding up his glass. \n\n\"Oh stop. I just want to point out, guys, that it was exactly one year ago today that I met Craig. Well, not exactly true. It was the first time I came up here. Remember that party, hon?\"\n\nCraig smiled at him. It seemed like an utter eternity ago that he'd watched the hot cop in the leather jacket pull into his driveway. Ages. Centuries. So much had happened. He\u2014they\u2014were so different! \n\n\"Of course, dummy. It was the first time we kissed.\"\n\nEvan smiled at him. \"Yeah. And here we are.\"\n\n\"Yes. Here we are.\"\n\nCraig stood up to kiss him on the lips. \"I love you, baby.\"\n\n\"I love you, too. So here's to fucking Los Angeles highways. If it wasn't for that, we wouldn't be here now.\"\n\nUnder the table, Andy squeezed Chad's hand. He knew everything, the whole story. He wasn't jealous in the slightest, but he knew that Evan and Chad had their history. Chad stroked his thigh under the table, snaking it up to his cock. He had his man. He wouldn't change anything. It had all worked out for the best.\n\n\"Well I think Craig's parties have a special kind of magic, too. If it weren't for you, inviting me up here, I wouldn't have met Andy.\"\n\n\"And I'm so fucking glad you came,\" Andy said, leaning in to kiss him.\n\nIn time, they would be as close as a true family, spending birthdays and holidays together, taking vacations and being there for all the important milestones of their lives. Andy and Chad would forever adore them for bringing them together in the first place, and both Evan and Craig adored and appreciated their genuine love for each other, which was perhaps surpassed only by their own. It was not easy to find that in LA. Craig, especially, became very close to them both, almost adopting himself into their lives. \n\nBut none of them knew that, yet, not this night. This night was simply perfect and soft and young. \n\nAfter Andy and Chad left, Evan stood on the lanai looking down into the ravine that sloped down to the ocean. \n\nHe could smell the jasmine once again blooming in the night sky. He listened to the sway of palm trees, and the swishing of the jacarandas. He thought of his father, but the grief no longer killed him. The rhythms of nature and time had slowly, achingly, but inevitably allowed him to heal\u2014along with Craig's undying love and devotion. For the first time in a very long time Evan felt moved by the immense beauty before him, finally able to respond. \n\nHe was still standing there when he felt Craig come up behind him, and softly kiss his neck. They didn't speak, just held each other and gazed outwards, towards the valley and the desert beyond, as the ocean waves gently crashed against the shore.\n\nEvan leaned back into his arms. \n\nThey were still getting used to it\u2014being everything to each other. Facing life, together. \n\n\"You ever seriously think of leaving? Moving . . . I don't know . . . somewhere else?\" Evan asked him.\n\nIt was peaceful now, but they knew their fragile city would be rocked again by violent storms, and that vast upheavals lurked just below the glittering surface. \n\n\"Nah . . . I kind of like it here.\" Craig whispered to him.\n\nIt wasn't perfect. It had \"issues.\"\n\nBut oh, my love. My heart.\n\nMy city of angels."
    ],
    "authorname": "Love_Brokers",
    "tags": [
        "los angeles",
        "california",
        "gay cop",
        "gay lawyer",
        "love",
        "relationship",
        "jerking off",
        "passionate sex",
        "daddy",
        "gay incest"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/city-of-angels-ch-04"
}