{
    "title": "Impersonating Brianne Ch. 02",
    "pages": [
        "This is the second part of a series entitled \"Impersonating Brianne\". It picks up a couple of days after the last chapter ended. If you haven't read the first part, I recommend that you do so. Enjoy!\n\n*************************** \n\nMarissa's heart was pounding. Her stomach fluttered. She fidgeted nervously. And it wasn't because of turbulence or flight anxiety.\n\nAlan was next to her, snoring softly. She watched him sleeping. His face was free of worry and stress. He looked so peaceful. So handsome.\n\nShe held his hand, enjoying the warmth of his touch.\n\nStill, she could not reconcile the feelings within her, struggling for control. Their trip was almost over.\n\nA single thought raced through her mind.\n\nWhat am I going to do?\n\n********************* \n\nThe next two days in Las Vegas passed quickly.\n\nWednesday morning, Alan woke up and went back to his seminars. Marissa took the rental car and ran some errands. After a quickie and then lunch, the two were in the exhibition hall, closing a sixty-five thousand dollar deal on some equipment for the restaurant's kitchen. Afterwards, he went back to his meetings, and she went back to the blackjack tables.\n\nThe conference had a banquet that night. The pair ate and danced in their own little world, oblivious to everyone around them. After all, their business was done, and they found they were enjoying each other's company more and more.\n\nThe last day of the conference began on Thursday morning. While Alan went to the closing sessions, Marissa took the car out again for some final business. After the conference was over, Alan drove her around town and they did touristy things. The visited the shops a Caesars Palace, the Star Trek Experience at the Las Vegas Hilton and went downtown to see Fremont Street.\n\nAll the while, they held hands, walked arm in arm and acted like lovers, not like a call girl and her client.\n\nMarissa liked Alan, and she felt that he liked her, too. She was dreading the end of the week because it would force them to address their relationship, something neither of them seemed eager to do.\n\nAfter their talk about Brianne on Tuesday night, Alan was much more outgoing and even more engaging than he was before. It was as if a giant weight had been lifted from his shoulders. \n\nAt first, Marissa felt threatened by Brianne. She didn't like that feeling. To her, it meant that Alan had gotten to her, and that was unsettling. He stirred feelings within her, feelings that she never had the luxury of acknowledging in her line of work.\n\nMarissa had been a call girl for the last few years. Trading her body for money, she didn't allow herself the luxury of emotional investment or personal attachment.\n\nShe wasn't in the business because she was a drug addict or had no where else to turn. For her, it was all about the money. Marissa had a college degree, but never found a job that paid as well as working for Laurie. Even after taking the madam's share off the top, Alan was paying her more per day that she had ever made in a week working a regular 9 to 5 job.\n\nAnd all it had cost was her self-respect.\n\nSomething happened that night, as she and Alan talked about his late wife. It started at the beginning of the week, when she got the feeling that he wasn't going to be like her other clients. It seems strange, but there was a certain amount of comfort in her sex life. Not because it was pleasurable, but because it was regular and there were no expectations. \n\nMen had sex with her. She got paid. It was cut and dry. There was no middle ground. No relationship beyond a simple business transaction.\n\nNot with Alan, though.\n\nThe more he talked about Brianne, though, the more uncomfortable Marissa felt. Alan was opening up to her. Although she was scared of the way she responded, she felt like she was getting close to him. She realised just how lonely her life was. Not that she had a bad life, but she realised just how much she was missing out on. All for the sake of a few dollars.\n\nMarissa also found herself talking to Alan more. She didn't acknowledge it then, but she was investing herself in him and in their relationship. She was also setting herself up. Both of them knew that initially their relationship was on a timer, but she could never have imagined that she would have to make a heartbreaking decision a week later.\n\nAs Alan talked about Brianne, Marissa's feelings changed from jealously and insecurity to warmth. She liked that he recalled little things about her, like what she liked to drink with meals or where she had gone on vacation with her parents when she was little. Marissa liked that he treasured memories. She liked that Alan could tell her what he and Brianne had for dinner on the night they saw Siegfried and Roy when they had come to Las Vegas to be married. She liked that he wasn't afraid of commitment or falling in love.\n\nNow if she could only get past her own aversion to commitments and attachments.\n\nShe knew Brianne wasn't going to show up one day and take Alan back. Marissa thought Alan liked her as much as she liked him, once she could admit that to herself. What she didn't know was if she was willing to let him get through the barriers she had spent a lifetime putting up around herself.\n\nHer feelings came to a head early Friday morning. \n\nOn Thursday, after driving downtown and making a few dollars off the blackjack tables at the Golden Nugget, she and Alan stopped to see the water show at the Bellagio on Thursday night.\n\nWith soft romantic music playing through strategically-placed speakers, she leaned back into Alan's arms. He held her tenderly. Neither said a word. His embrace was comforting. Secure.\n\nEven amidst the crowd gathered to see the show, she felt like they were alone. She was losing herself to his charm. Afterwards, she drew out a pocked-sized digital camera and had a passerby take a picture of them together, with the lights and water sprays of the Bellagio behind them.\n\nThis was something Alan and Brianne had not done on their previous trip to Las Vegas; the Bellagio hadn't been built then. Along with some of the other pictures she had taken throughout the day, these were the first of their memories together.\n\nThey went back to their room at the Luxor and made love under the moonlight that shone through the windows.\n\nWhen she awoke, the sun was coming up. Alan must have gotten up in the middle of the night because the curtains were closed. His naked body was spooned up against hers. His arm was around her. She could feel his shallow breath on the back of her neck.\n\nRealising where she was, she seemed to be fully awake instantly. Her heart started to pound.\n\nShe wanted to sit up, but instead tried to calm herself. A couple of deep breaths later, her pulse was down and she no longer had the urge to get up and leave her lover.\n\nInstead she rolled Alan on to his back. He started snoring softly.\n\nHer hand ran along his jawbone and down his neck. \n\n\"What have you done to me, Alan?\" Marissa whispered.\n\nShe watched his chest rise and fall.\n\n\"I can't stand sleeping with someone touching me, but when you hold me, I never want you to let me go.\" Her voice was soft.\n\nThis was the first time they had woken up together. All week, Alan had to get up early and be in meetings and seminars first thing in the morning while she slept in. With the conference over, she had him all to herself.\n\nShe reached down between her legs and felt the warm semen that was slowly leaking out of her, left over from the night before. Alan had convinced her to break one of her call girl rules: Never let a john cum in anything other than a condom.\n\nJust the feeling of the slippery fluid gave her chills. The memories of the orgasms she had with Alan made her toes tingle. \n\n\"Why do you have to be such a nice guy?\" Marissa said quietly, even knowing that Alan wouldn't respond. \"Why couldn't you be just another jackass client? I wouldn't feel bad about taking your money then.\"\n\nAnd I wouldn't have to break your heart. The words were on her lips but she couldn't bring herself to say them aloud, even if Alan couldn't hear her. Or my own.\n\nAlan stirred slightly and she hurriedly brushed the tears out of her eyes. She leaned over and kissed him. A sleepy smile was on his lips.\n\nShe gently kissed her way down his body, giving Alan the kind of good morning greeting every guy likes.\n\nA short time later, the two were in the shower, each washing the other's body. They playfully groped and tickled each other under the warm water.\n\n\"So what's the plan tonight?\" Marissa asked.\n\nAlthough his smile was sincere, his laugh was a little hollow. There was a distant look in his eye. This would have been his anniversary and Marissa couldn't blame him for being a little distracted.\n\n\"It's a surprise.\" He slapped her gently across the backside.\n\n\"Don't start that if you're not going to finish it,\" she warned him with a sly wink.\n\n\"Marissa,\" he started. There was a look in his eyes that made her shiver with anticipated pleasure. \"If I were ten years younger, you would be begging me for mercy.\"\n\n\"I never beg,\" she replied with a huff of mock indignation.\n\nAlan smiled gently and pulled her close. His lips were warm. As the water poured over their bodies, she folded into his embrace. The feeling of his body pressed against hers sent a chill down her spine.\n\nWith a sigh, he pulled back and released her. Then, Alan opened the glass door to the stand-up shower. Marissa let out a disappointed sigh of her own and turned off the water. Alan handed her a towel and the two dried off.\n\n\"Why don't you go order us some breakfast,\" Alan suggested as he hunted around for his electric razor.\n\n\"What do you want?\"\n\n\"Surprise me.\"\n\nMarissa wrapped her hair in a towel and then slipped into one of the Luxor's soft bathrobes.\n\nShe went through the bedroom and stopped in her tracks when she opened the door to the outer room. \n\nThere were flowers everywhere. \n\nThey covered the coffee table and the desk. Daises. Roses. Carnations. Tulips. Bouquets were on every end table and stand, even on the floor. On the couch, there was a basket full of chocolates and other goodies next to a carefully-wrapped present and a card with her name on it.\n\nHer hands trembling, she opened the card to find Alan's neat print.\n\nMarissa,\n\nI can't thank you enough for what you have done for me this week.\n\nIt's more than the deal you made with TGR or the help you've given me with the restaurant.\n\nBrianne has been on my mind a lot lately. You are the first person I have talked to about her since she died. She was taken from me without warning and my heart is still broken. I can't live in the past and I know that, but she was the center of my life for so long. You've helped me realise that there is life after loss. \n\nI'm sorry if I've made you feel uncomfortable when I talk about her, but you're always willing to listen and you are so easy for me to talk to.\n\nYou are a special woman and have done more for me than I ever could have asked.\n\nThank you from the bottom of my heart.\n\n\u2014Alan \n\nMarissa set the card down and unwrapped the present. In a simple wooden picture frame, she found a picture of her and Alan from the night before. They were standing in front of the Bellagio. They both had goofy grins on their faces. His arms were around her, holding her close.\n\n\"You bastard.\" Her voice was barely audible.\n\nShe turned and looked back over her shoulder. Through her tears, she could barely see Alan standing in the doorway, grinning sheepishly.\n\nHer blood boiled with anger. Not at Alan. At herself. For becoming so jaded. For giving up hope. She was angry with fate for bringing this man into her life as a paying client. She cursed the day she gave up being a woman and became a whore. All her pent up emotions came boiling to the surface.\n\nMarissa stared at Alan for a moment. Time seemed to stop.\n\nShe threw the card and picture down on the couch and stalked towards Alan.\n\nMarissa threw herself into his arms. Hunger consumed her. It wasn't just sexual desire. With Alan, she felt loved and wanted. Not for her body. Not for her talents in the bedroom. Simply for being herself.\n\nAlan wasn't fully prepared for her assault and staggered back a step or two. Marissa was all over him. She took his face in her hands and she kissed him hard, even as he wrapped his arms around her.\n\nHe backpedaled until he bumped into the bed. Marissa put her feet on the floor and her hands tore at his bathrobe. Then she flung her own across the room.\n\nShe gave him a savage push and Alan fell back on the bed. \n\nMarissa jumped on top of him, her naked body hot with desire. She bit his neck and collarbone. \n\nHis hands squeezed her breasts.\n\nTheir eyes locked together.\n\n\"I am sooooooooo going to fuck your brains out,\" Marissa vowed.\n\nAlan's only response was a knowing smile. There was a hint of sadness in his eyes, but he blinked that away quickly. His gaze transfixed her. Something passed between them. Something inexplicable. Something that shook Marissa to her very core.\n\nShe leaned down and kissed Alan. \n\nHard. \n\nPassionately. \n\nHungrily. \n\nLustily.\n\nAs Alan's hands roamed her body, Marissa let him up long enough so he could move to the center of the unmade bed. Then, she took his hands and pinned them down. He put up a token struggle, but otherwise willingly met his fate.\n\nThey continued to kiss. Marissa pressed her body against his. Alan's cock was hard, brought to attention by his lover's eagerness.\n\nMarissa started to grind her pussy against him and soon felt the head of his cock against the entrance to her sex.\n\nShe let out a long sigh as Alan entered her. She threw her head back as his length penetrated her.\n\nThey both gasped when he hit bottom.\n\nStill holding his hands, Marissa impaled herself on Alan.\n\nAny semblance of control she had was long gone. Lust consumed her. Desire clouded her thoughts.\n\nUp and down she bounced. \n\nHer hips moved back and forth. Her clit rubbed against him.\n\nAlan's sex filled her up.\n\nHe tried to move his hands, but Marissa still held him down.\n\nShe was out of control.\n\nHer toes started to tingle.\n\nTheir teeth knocked together with wet, slobbery kisses.\n\nUp and down.\n\nAlan didn't move as Marissa rode him. His cock stood straight up in the air as her pussy enveloped it. \n\nHe couldn't speak because Marissa's tongue was in his mouth.\n\nMarissa closed her eyes. \n\nUp and down.\n\nFaster. Harder.\n\nShe sat up, releasing his hands. They went to her breasts and Alan squeezed them. Marissa cried out.\n\nHer hands closed over his. She needed to steady herself.\n\nHe felt perfect inside her.\n\nA dangerous thought raced through her mind. I never want to be with anyone else ever again.\n\nMarissa squeezed her eyes shut as the tears began to flow. Overcome with desire, she let out a gasp and brought herself down hard on Alan.\n\nShe felt his hips push upward. \n\nHer hands clasped Alan tighter. \n\nWith one final cry, the room started to spin. The head of Alan's cock was flaring inside her.\n\nThe tingling in her toes spread to her whole body.\n\nShe felt lightheaded. \n\nAnd then she seemed to explode.\n\nWaves of pleasure wracked Marissa's body. She continued to grind her hips against her lover. \n\nIt seemed as if the orgasm would never end.\n\nThere were flashes in the corners of her eyes. Her hypersensitive nipples were pressed flat against Alan's palms.\n\nHer pussy flooded with nectar, mixing with Alan's exertions.\n\nAlan tried to steady her, but she collapsed anyway.\n\nInto the safety and comfort of his loving embrace.\n\n*************************** \n\n\"How did you get all those flowers into the room?\" Marissa asked. She couldn't see Alan, but she knew he was right next to her.\n\n\"You're a heavy sleeper,\" he replied, a touch of amusement in his voice. \n\nOnly around you, she thought. In truth, Marissa was a very light sleeper, but there was something about Alan that put her off guard.\n\n\"And what about the picture?\"\n\n\"I . . . uh, took the memory card out of your camera and had the photo shop on the main floor make me a print,\" Alan said. \"I hope you don't mind.\"\n\n\"They were open in the middle of the night?\"\n\n\"The service desk is always open. Especially when you drop the name of a favoured guest, Miss High Roller.\"\n\nThat caused Marissa to chuckle.\n\nThe hands on her body moved down from her shoulders to the middle of her back.\n\nShe assumed that the woman giving Alan a massage on the next table over was doing just as good a job because he moaned with pleasure after she hit just the right spot.\n\nOnce she recovered consciousness from their earlier frenetic sex, Marissa and Alan shared a room service breakfast and then went down to the spa.\n\nThey were getting the royal treatment. She didn't know how much the afternoon was costing Alan, but she made a mental note to see if her friend\u2014and Luxor pit boss\u2014Taylor could get at least part of the spa bill comped to her. After all, she had wagered a fair amount of money in their casino and that had to count for something, right? At least she was ahead for the week.\n\nThe two had some time in the sauna, then a skin treatment and a full body massage, complete with hot stones and aromatherapy. Marissa had never felt so relaxed.\n\nAlan was never far from her. They held hands when they could, but she took great comfort in knowing he was always nearby.\n\nOnce they had been worked over by the masseuses, Alan checked the clock on the wall as Marissa pulled a bathrobe around her body. It was close to 3:30.\n\nHe slipped into a bathrobe of his own and then went over to the door. Two young women with Luxor nametags were waiting outside. They came into the room behind Alan. He leaned over and gave Marissa quick kiss on the cheek.\n\n\"I'll be back to pick you up at six,\" he said. \"Girls, take good care of her.\"\n\nTonight was their big date.\n\nBefore Marissa could respond, he was gone. The two introduced themselves as Patty and Kyra. They led Marissa to another part of the salon. The next two hours were taken up with a manicure and pedicure, and then it was off to do her hair.\n\nAfter a thorough wash, Patty asked how she wanted it styled.\n\n\"Did Alan say anything to you about it?\" Marissa asked.\n\n\"No,\" the other girl replied. \"He just said to give you the full treatment, so I guess we can do anything you want.\"\n\nMarissa thought about the pictures she had seen of Brianne and how she might have worn her hair. \n\nThat is what Alan wants, isn't it? Marissa thought. A date with his wife?\n\nShe thought long and hard for a minute. I'm not her. I told him as much the other night. But he was so happy when they were together. Shouldn't I do that much for him?\n\n\"Surprise me,\" Marissa said, not wanting to be the one to make that decision.\n\nPatty spun her around, so she couldn't see the mirror.\n\nThe stylist was chatty and engaging. She even trimmed a little off and evened the layers out.\n\nThen Patty really went to work. With pins and hairspray, Marissa's hair was pulled back. She wove some baby's breath into the curls.\n\nAfter a few minutes, Kyra came back and began putting makeup on Marissa. \n\n\"We're almost out of time,\" she said apologetically. \"I'm sorry to rush you.\"\n\nMarissa felt like she was 17 again and going to the prom.\n\nWithout letting Marissa see herself, Patty and Kyra led Marissa to another room. On a stand was a flowing ballroom dress. It was an elegant deep blue, low-cut but not too much. There was a pair of white, elbow-length gloves that went with it and some matching heels.\n\nThinking back to the day she and Alan met, Marissa realised this is what he had her measured for. Is it hers?",
        "The two girls dressed Marissa quickly.\n\n\"Do you think this is the night?\" Kyra asked conversationally.\n\n\"For what?\" Marissa was puzzled.\n\nThe other girl smiled. \"That he's going to ask you to marry him?\"\n\nMarissa's jaw dropped.\n\n\"Oh,\" Kyra blushed furiously when she saw the blank expression. \"I'm sorry. I just assumed . . . big date . . . gorgeous gown . . . Ohmygod . . .\"\n\n\"You two just look like you're so in love,\" Patty said, trying to come to her friend's rescue.\n\nMe? A hooker in love? Marissa's pulse began to race. It took a minute to find her voice. \"That would be nice, wouldn't it?\"\n\n\nKyra didn't say anything else. If she could have disappeared, Marissa thought she would have. Instead she tried to hurriedly finish up Marissa's makeup.\n\nWhen the final touches were complete, Patty turned Marissa towards a floor-length mirror. \n\nMarissa's heart jumped into her throat.\n\nAll that was missing were the glass slippers.\n\n\"Thank you, girls,\" Marissa said when she could breathe again. \n\n\"You're very welcome,\" Patty replied. They each gave Marissa a quick hug, being careful not to smudge any makeup.\n\nThey led her out to the sitting area and assured her that her clothes had already been sent up to her room and that the bill had been taken care of.\n\nIt was exactly six o'clock, and Alan was no where to be seen.\n\nMarissa fidgeted nervously.\n\nShe felt a soft touch on her elbow.\n\n\"Ma'am?\" The spa manager stood beside her. \"Mr. Gibson says he is going to be a few more minutes. He's asked if you would meet him in the main lobby.\"\n\nMarissa slipped her hand into the crook of his offered arm.\n\nThey walked out of the spa and across the floor. As she passed, people fell silent, staring at her. Marissa held her head high as if oblivious to the admiring stares. Her heart raced. She was the princess going to the ball.\n\nShe spied Alan talking to someone at the concierge desk. He still hadn't seen her.\n\nThe woman behind the counter pointed at Marissa and Alan turned. He was wearing a handsome black tuxedo. There was a corsage on the counter next to him.\n\nMarissa stopped in her tracks. Alan's eyes were fixed on her. Time seemed to stand still. All the ambient noise\u2014from the people, from the slot machines, from the music playing through the overhead speakers\u2014faded away.\n\n\"Thank you,\" Marissa said to the spa manager.\n\n\"It was my pleasure. You two have a wonderful evening,\" he bowed slightly and then walked away.\n\nAlan still hadn't moved. She crossed the distance between them, fully aware of all the eyes upon her.\n\nIs he seeing her? Marissa thought to herself. Or does he see me?\n\n\"You look fantastic,\" he breathed, spellbound.\n\nThey stared at each other for a moment longer. Finally, Alan took out the corsage and pinned it on her. Of course, it matched perfectly.\n\n\"We'll have that all taken care of when you get back, Mr. Gibson,\" the concierge said with an envious smile.\n\nMarissa took Alan's arm as he led her out the front doors. Everyone around them stopped as they passed by, as if they had been drawn into a fairy tale for just a moment.\n\nWaiting outside was a white limousine. The driver held the door open as Alan and Marissa got in.\n\nShe felt like she was having an out of body experience. It was surreal.\n\nA couple of times, she looked over and saw Alan staring at her. When they made eye contact, he looked away.\n\nThen she took his hand, and their fingers intertwined. They rode to the Paris hotel and casino in silence.\n\nThe door opened and Alan went to get out. Marissa caught his hand and pulled him to her. \n\nThey shared a quick kiss.\n\nThe touch of Alan's lips was electric.\n\nHe pulled back and stepped out of the car. She took his hand and followed.\n\nThere, too, people there stared at them as they made their way through the hotel. Alan led her to the Eiffel Tower Restaurant. They were seated at one of the best tables in the house, with a magnificent view of the hotel and the rest of the city.\n\nThe lighting was low and romantic.\n\nThe food was fantastic and the service superb.\n\nAlan was quiet after they ordered. Marissa tried to engage him in some small talk, but all he did was stare absently at her.\n\nThe appetizers arrived.\n\n\"This dress is gorgeous,\" Marissa said, trying to draw Alan out.\n\n\"It was Brianne's,\" he replied, almost apologetically.\n\nThe first night they were together, when Alan looked at her, Marissa could tell he was seeing his wife. Their resemblance was close enough. Now . . .\n\nNow there was something different in his gaze.\n\n\"She got it for our fifth anniversary.\" The corners of his mouth turned up into a slight smile as the memory came back to him. \"Brianne never liked to shop for clothes. She said she didn't like to spend money on herself. I practically had to hold a gun to her head to get her to go shopping. We found that dress and a couple others, but she didn't want to buy it because it cost so much. The other dresses were pretty, but not nearly as nice. I made her buy it. She deserved it.\"\n\n\"She was a special woman,\" Marissa said quietly.\n\n\"Yes, she was,\" Alan shifted uncomfortably. \"You feel funny wearing her clothes, don't you?\"\n\n\"A little,\" Marissa admitted.\n\n\"I'm sorry about that,\" Alan looked away. \"I . . . I thought I wanted one more date with her.\"\n\nMarissa had to remind herself to breathe.\n\n\"But you're not her,\" Alan continued. There wasn't any bitterness in his voice. Only sorrow. \"You're just as beautiful, Marissa. You look like my wife, but you walk differently. You carry yourself differently. Your smile is the same but the way you talk isn't.\"\n\nThere was a long pause. It seemed like Alan wanted to say more, but couldn't.\n\n\"What do you want now?\" Marissa asked softly.\n\nHe thought for a minute. \"I want a date with you.\"\n\nMarissa was struck speechless.\n\n\"Not a day goes by that I don't think about Brianne or wish she was still with me.\" Alan took her hands in his. Their appetizers were getting cold. \"But when I'm with you . . . I forget about the sadness that has been the center of my life for these last two years.\"\n\nThe lump in Marissa's throat wouldn't go away. She had her answer. Now it was only a question of what she was going to do.\n\nFirst she had to find the words, though.\n\n\"I\u2014\" she started, unable to continue.\n\n\"Sometimes,\" Alan said, seeing Marissa struggling to find something to say. \"When you turn your head a certain way . . . Or when you laugh . . . I see her for just a second . . . But then . . . then Brianne is gone and I see you again, Marissa . . . And that makes me . . .\"\n\nHe stopped and looked away again.\n\nMarissa squeezed his hands. They were saved by the servers who brought a bottle of Pinot Noir, some bread and their main courses.\n\nAlan had the duck breast in a white mushroom sauce while Marissa picked at her sea bass over scalloped potatoes.\n\nThey ate quietly, each not sure what to say to the other.\n\nA light salad came after the main course, followed by a selection of cheeses. Then it was off to dessert. Marissa had a white chocolate mousse drizzled with dark chocolate and Alan had chocolate crepes served with fresh fruit.\n\nNeither wanted to continue their earlier conversation. Marissa thought Alan didn't want to confuse his feelings for Brianne with his feelings for her. She didn't want to think about them.\n\nWith only crumbs on their plates, they sat nervously staring at each other.\n\nAlan wanted to say something. \"I . . . Thank you for this week, Marissa.\"\n\n\"It was my pleasure, Alan.\"\n\n\"Look . . . I'm sorry for putting you through this.\" He looked her in the eyes. She felt like he was reading her mind. If he really knew what she was thinking, she didn't know what she would do. \"But I couldn't have gotten through this trip without you.\"\n\nAll Marissa could manage was a slight smile.\n\nThere was so much she wanted to say. Things she needed to tell him. Her feelings screamed to be heard. Yet she pushed all that from her mind. \n\nNot now. This is his night. You'll get your say, she promised herself. Years of conditioned emotional repression took control once again. But not like this.\n\nAfter a sweet ice wine to end the meal, the two walked back through the Paris hotel to their waiting limo. Marissa was feeling a little more relaxed. Maybe it was the wine she had with dinner. Maybe it was because she was determined not to ruin this night for Alan, his anniversary. The butterflies in her stomach were gone. Instead, she just enjoyed the romance of the night and the gentle touch of her companion.\n\nThey left and drove around town for a little while. Alan took her hand and she was eager to be close to him.\n\nAfter seeing a few of the sights and giving their food a chance to digest, the driver took them back to the Luxor. \n\nThey got out and were once again the center of attention. Marissa felt vaguely self-conscious. She normally liked to keep a low profile, but since she was out of town, she figured no one would recognise her as a high-priced call girl. He led her once again to one of the lounges.\n\nAn eight piece band was set up and playing. There were a handful of people dancing, but mostly just watchers. It seemed like a throwback to the \"old days\" of Vegas, when women wore formal gowns and men wore tuxedos to dinner and Sinatra played the rooms.\n\nMarissa smiled to herself as they made their way to the center of the dance floor. Alan spun her around and took her in his arms.\n\nThey slow-danced for the rest of the song. Alan's touch was comforting. Marissa found herself staring into his eyes more than once. He smiled at her.\n\nThe music ended and the band leader invited other couples out on to the dance floor. She noticed Alan nod in the direction of the band. The drummer returned a subtle salute and a waltz started to play.\n\nNow it was time for those lessons to pay off.\n\nShoulders back, chin up, elbows up, chest out, she remembered the instructions of her dance tutor from the days before.\n\nAlan had a surprised look on his face which quickly became a broad smile.\n\nMarissa was still kind of clumsy, but Alan was a good lead. Her feet didn't quite move instinctively and she tried to let herself flow with the music instead of counting along in her head.\n\nShe felt like she was floating on air. This man, who had started out the week as a paying client, had become more than just another john. His kindness, his humour. The way he opened up to her, and in turn, got her to open up to him. He almost made her forget what she did for a living. And there she was, wanting only to be in his arms. \n\nEverything about this night seemed perfect.\n\n\"Where did you pick up ballroom dancing?\" Alan whispered in her ear. The song was ending and he pulled her close.\n\n\"I had a lot of free time while you were in your meetings,\" she replied.\n\n\"You're full of surprises, Marissa,\" he said and the look in his eyes made her heart skip a beat.\n\n\"I didn't want to step all over your toes again,\" she blushed.\n\n\"What else did you learn?\" Alan asked.\n\n\"Just the basics, so don't try anything funny,\" Marissa laughed. Alan pulled her closer as the band struck up another tune. \"We did a waltz, a foxtrot and a tango.\"\n\n\"No quickstep?\"\n\n\"Not in two days.\" \n\n\"I guess I'll have to teach that to you later.\"\n\nBefore she could respond, Marissa found herself tilting her head back as Alan leaned in to kiss her. She melted into his arms.\n\nIs he kissing me or is he kissing her? she thought. It didn't matter. Marissa only cared that she was in his arms, not Brianne.\n\nFinally he pulled back and began leading her around the dance floor again.\n\nAs the evening wore on, their dance became more intimate. Alan would tell her which way he was going to turn or where to go next or when he was going to dip her. They got a feel for where the other was going to move. Marissa still managed to step on his toes a time or two, but they were learning to be partners.\n\nThey took a couple of breaks, but danced the rest of the night away. Alan coached her along and turned out to be a pretty good teacher. It helped that Marissa was a fast learner. Soon, she found herself a step ahead of Alan's instructions and he didn't need to tell her which way to go next. Everyone else made room for them, and some people seemed to be stopping by just to watch them dance.\n\nA part of Marissa imagined that it was because they looked as if they were made for each other. That their movements had become part of their innermost selves, intertwined and anticipating the other's next step. She found she liked that feeling.\n\nThe rest of the night was a blur. All too soon, Marissa heard the band leader announce that it was the last song of their set.\n\nAs soon as the music started, Marissa's head shot up. She looked Alan in the eyes. It was the same song they had first danced to the night they arrived in Las Vegas.\n\nThis time, though, the distant look was gone from his face. He looked straight into her eyes. There was a flash of sorrow, but it was quickly gone, replaced by a combination of tenderness and\u2014dare she think it?\u2014love.\n\nMarissa's hand rested on Alan's shoulder. She drew in close to him; close enough to feel his breath in her ear. One of his hands rested on the small of her back. The other held her hand tightly.\n\nThere are moments in someone's life that they will never forget. That they never want to forget. This was one of those times for Marissa. Everything about her life was temporarily forgotten. The people around them faded away. The only thing she saw was Alan's steady and unwavering gaze. The only thing she felt was his gentle touch. The only thing she heard was the music.\n\nAll too soon, the song came to an end. Still Alan held her.\n\nShe vaguely heard the band leader speaking, \"That was 'There Will Never Be Another You' by the great Andy Williams. Thank you for dancing with us tonight. We hope you enjoy your stay at the Luxor. Good night!\"\n\nMarissa didn't want to let Alan go, and she got the feeling that he didn't want that either.\n\nThey stood there in each other's arms for several more minutes. The house lights never came up even as the band packed up their instruments.\n\nAlan kissed her again, and she felt lightheaded. A shiver ran the length of her spine.\n\n\"Are you hungry?\" he asked finally.\n\n\"Actually I am,\" she replied. After all the dancing she had worked up quite an appetite.\n\nMarissa wasn't wearing a watch\u2014and casinos don't have clocks inside\u2014but most of the evening crowd had dispersed.\n\nThe other people in the casino gave them a wide berth and Marissa was on the receiving end of many more admiring stares. Her arm rested comfortably in the crook of Alan's arm and even in her heels, she felt as if she were gliding along side him.\n\nThey went to Fusia, one of the restaurants in the Luxor, and got a table. Although not as romantic as the Eiffel Tower Restaurant at the Paris casino, Fusia was intimate enough for them. \n\nThey ordered a couple of light appetizers and drinks.\n\nWhen the server returned, Marissa whispered something in his ear.\n\n\"Alan,\" she started when she saw their server returning with her box. \"Tonight has been perfect.\"\n\n\"Thank you,\" he replied. \"I'm glad you were here to share it with me.\"\n\n\"Me, too.\"\n\n\"Thank you,\" Alan said when the server placed a good-sized gift box on the table in front of him. The server bowed slightly and then left. \"What's this?\"\n\nMarissa blushed nervously. \"You can't have an anniversary without presents.\"\n\n\"You didn't have to do this,\" Alan looked her in the eyes. There was a flash of pain in his eyes, as if he had forgotten about his wife up until that moment. Then it was gone when he realised that the woman he was with was thinking of him, too.\n\nShe smiled. \"Open it up.\"\n\nCarefully, Alan untied the bow and slipped the lid off the box. He dug through the tissue paper and then stopped. He flashed an incredulous look at Marissa. His eyes went back into the box. Then back to Marissa.\n\nVery slowly, he reached in and lifted out his present.\n\nAlan was at a loss for words. Handling it as if it were the Holy Grail itself, Alan set the camera down on the table.\n\n\"How did\u2014\" he stammered. \"You can't . . . Marissa . . . This must have cost a fortune.\"\n\n\"Then it's a good thing I'm ahead of the casino,\" she replied with a mischievous grin. Then she drew her own pocket camera out of her purse. \"Oh, and smile.\"\n\nHe tried, but still looked bewildered.\n\nMarissa watched him flip the camera on and off. He played with the lens. He didn't bother to look through the manual. He dug out all the other accessories along with the leather camera bag Marissa had also gotten for him.\n\nWith all the pictures he had of Brianne, Marissa figured he was quite the amateur photographer. She confirmed this over the course of several conversations and thanks to some helpful folks in the Luxor's photo shop, she found one of the best digital SLR cameras money could buy and ordered it through her friends at the Luxor's hospitality desk (with next day delivery, of course). Then it was just a matter of staying ahead at blackjack and craps to pay for it.\n\nAs she watched him playing with his new toy, Marissa smiled to herself. After all the nice things Alan had done for her, she felt quite a sense of accomplishment. His smile made her wish she could see it every day.\n\nIs this what unconditional friendship is like? she thought to herself. Almost all of Marissa's relationships were built on people using each other for their own individual gains. All her clients paid for her services. Even though Laurie was friendly and they had gone out for drinks a couple of times, their relationship was still business first. Marissa didn't have many girlfriends because she worked so much and because she never wanted to tell people the truth about what she did for a living. She hadn't gone out on a real date in over a year.\n\n\"Marissa,\" Alan said and the sound of her name in his voice made her heart beat faster. \"I can't accept this . . . it's too much\u2014\"\n\n\"Alan,\" she snickered. \"Shut up. You deserve it. And really: I'm not out anything. I bought that on house money.\"\n\n\"You're that much ahead?\" \n\nMore actually, she thought but didn't tell him. \"Yes. Did they charge the battery?\"\n\n\"Um,\" Alan looked down at the display as Marissa changed the subject on him. \"I think so. This is a professional-quality camera. Don't tell me you picked up photography this week, too?\"\n\n\nMarissa giggled. \"No. I only learn one new skill a week and ballroom dancing was it for me. The folks here at the hotel were very helpful.\"\n\n\"Especially for a pretty Miss High Roller. I'll have to thank them,\" Alan said appreciatively. \"And thank you.\"\n\n\"You're very welcome.\" Marissa bowed slightly. Her toes started to tingle when she thought of the ways she could get Alan to show his appreciation. \"Now let's eat.\"\n\nTheir small meal arrived just then. They split a spring roll appetizer and a chef's choice sushi and sashimi platter. For dessert, they had the \"Fusia Chocolate Decadence\". The food was fabulous, but it didn't matter to Marissa. All she wanted was to be with Alan.\n\nDone eating, Alan gathered up his present. With the box under one arm and Marissa on the other, he led her back to their room.\n\nThe flowers were still all over the place, their sweet scent filling the suite. Alan set his box down on the desk and then went into the bedroom. He came back out with a garment travel bag that was designed for expensive gowns.\n\n\"Let me get one last picture,\" he said. Raising his new camera, Alan snapped several shots of Marissa in the dress and along with her flowers. She smiled for him and hoped that he would let her have copies of some of them. Marissa was also glad she had several pictures of the two of them from that night, taken at dinner, over their late night snack and even on the dance floor.",
        "This was going to be one night Marissa would never forget.\n\nAlan set his camera down and helped Marissa out of her dress. Then lovingly, he put it in the travel bag and zipped it up for the return trip home.\n\nMarissa stripped down and slipped into a bathrobe. Very carefully, she pulled all the pins out of her hair and set the baby's breath on the counter in the bathroom. She found a chilled bottle of champagne next to the bed and poured a couple of glasses.\n\nAfter their big night, Marissa found that she was crashing. So was Alan.\n\nHe changed into a pair of boxer shorts and a t-shirt. They cuddled on the couch for a while, sipping champagne and holding each other. Neither said a word, fearing that the spell would be broken.\n\nFinally, Marissa found herself nodding off. Between the dancing and the alcohol, she was almost done for the night.\n\nShe struggled to her feet and then pulled Alan into the bedroom with her.\n\nThe sheets were turned down and they fell into the bed. Alan's arms were around her and he kissed her forehead. \n\nMarissa nuzzled up against him, her lips biting his neck softly. He moaned and pulled her close.\n\nShe reached for him, but he brushed her hands away.\n\n\"No,\" he whispered. \"Not tonight.\"\n\n\"What\u2014?\" she was confused.\n\n\"I just want you to hold me,\" Alan said softly.\n\nMarissa shifted, uncomfortable for the first time that night. She didn't know what to say.\n\nShe lay against him, her head on his shoulder.\n\n\"Thank you for tonight.\" Alan's voice was gentle. \n\n\"I had a wonderful time,\" Marissa said.\n\n\"Me, too.\" Alan kissed the top of her head. \"I\u2014\"\n\nHe stopped.\n\n\"You what, Alan?\"\n\nThere was a long pause.\n\n\"I'm sorry I wanted you to be Brianne,\" he managed to say. Even in the darkness, Marissa could tell his eyes were full of tears. \"You can't be. No one can. And that's okay. That was the wrong reason to bring you with me.\"\n\nMarissa smiled tenderly, even though she knew Alan couldn't see her in the darkness.\n\n\"If you hadn't wanted that, I wouldn't be here,\" she reminded him. The next words were out of her mouth before she could stop them. \"I'm glad I came with you, Alan.\"\n\n\"I'm glad I didn't have to spend another anniversary alone,\" he said, running his hand through her hair.\n\n\"I can think of a better way for someone to spend his anniversary,\" Marissa purred and pressed her naked body against him. Her lips sought his and they kissed eagerly. \n\nWhen her hands tried to push his boxers down, she found Alan holding her wrists.\n\n\"No.\" His voice was hoarse. \"Not tonight. I can't make love to you tonight.\"\n\n\"Why not?\" Marissa was confused.\n\nAlan took a deep breath. \"Because if I do . . . if I do, it will be like I was making love with Brianne. And I don't want to be having her, Marissa. I\u2014\"\n\nShe knew what he was going to say next and she inhaled sharply. \n\n\"I . . . I want you.\"\n\nHer eyes welled up. It was all she could do to keep her breathing steady. To hear those words sent Marissa into an emotional tailspin. Some of her other clients enjoyed her company and told her the same thing. But she never felt for them like she did for Alan. Her feelings had never been the issue. Until now.\n\nAlan was the first man she had been with since college that she didn't care how deep his bank account was. He was the first person to make her blood boil with desire. \n\nShe struggled to keep her voice steady. \"I want you, too, Alan.\"\n\nThere it was. With five simple words, Marissa set her heart up to be broken.\n\nAlan lifted her chin up and kissed her. It was soft and tender. She lost herself to him.\n\nWrapped in his embrace, she felt safe and warm and wanted. They drifted off to sleep together, their bodies pressed against one another.\n\n********************* \n\nHer mouth fell open in a wide yawn. Marissa stretched out her arms and arched her back. Her back popped in a couple of places. The top sheet fell away.\n\nLazily, she opened her eyes and found Alan in bed next to her. He was on his side, one arm under the pillows. \n\nAs her vision came into focus, she saw that he was watching her. A faint smile was on his lips.\n\nShe smiled back. \n\n\"Good morning, sleepyhead,\" he said softly. Alan was still wearing the t-shirt and shorts he had fallen asleep in.\n\n\"Good morning, yourself,\" Marissa replied. She was lying on her back, naked. Her breasts had fallen to the sides, their nipples pointing straight up. Still, Alan was looking into her eyes, not at her chest. \"What are you doing?\"\n\n\"Nothing,\" he said softly.\n\n\"You're a lousy liar,\" she giggled. \"Don't tell me you were waiting for me to wake up to make your move.\"\n\nAlan didn't reply. His eyes seemed to bore right into her.\n\n\"You were beautiful last night,\" he said.\n\nThat made Marissa's smile bigger.\n\n\"And you're beautiful this morning,\" Alan continued.\n\nThat made Marissa want him even more. The night before, she was ready to jump him. Everything about their date had been perfect. It was an evening of pure romance. Yet Alan didn't want to sleep with her. Or rather, he really wanted to sleep with her, but he didn't want think that he was only using her as a surrogate for Brianne.\n\n\"Flattery will get you everywhere, mister.\" Marissa smiled seductively.\n\nAlan propped himself up on one arm and Marissa pulled him close to her.\n\nThey shared a good morning kiss. She pulled the t-shirt over his head and pushed his boxer shorts down. His cock sprang to attention.\n\nMarissa rolled on to her back and pulled Alan on top of her. She felt the head of his cock pressing against her belly. He kissed his way down her neck.\n\nAlan cupped one of her breasts. Marissa moaned with pleasure.\n\nHis lips began moving down to her shoulder.\n\n\"Stop teasing me, Alan!\" she gasped.\n\n\"Teasing you?\" he replied. \"I thought you girls liked all the kissey-feely stuff before getting down and dirty.\"\n\n\"You can't lead a girl on all night and then not give it to her.\" Marissa let out an exasperated sigh. She was already wet.\n\n\"What do you mean?\" Alan said with a grin.\n\n\"You know exactly what I mean,\" she replied with a mock huff. \"Flowers. Spa. Dinner. Dancing. Champagne. There was a lot of romance promised last night, but no lovin'. You owe me, mister.\"\n\nAlan smiled perniciously. \"I should\u2014\"\n\n\"Shut up and fuck me.\" Marissa couldn't take it any longer. She needed to have Alan inside her. She reached for him and brought his lips to hers. Their kiss was hungry.\n\n\"Do what?\" \n\n\"You heard me, Alan. Shut up and fuck me.\" Her voice was desperate. \"Make me scream.\"\n\nSure enough, he did.\n\n********************* \n\nWhen they finally stumbled out of bed, Alan and Marissa took a shower together and got dressed. It was spring, and while the sun was going to be out all day, the heat wasn't stifling. She put on shorts and a sleeveless polo shirt. She found a hat in her suitcase and dug out her sunglasses. Alan was wearing a pair of cargo shorts and a nice t-shirt.\n\nThey got in the car and drove first to Hoover Dam. They met the dam guide, took the dam tour, saw the dam generators, watched some of the dam fish and bought a few dam souvenirs. By late morning, the temperature was up in the mid-70s and they were riding around with the top down on the convertible. Alan had thought far enough ahead that there was a bottle of SPF 30 in the glovebox so they greased each other up and then drove west to the other side of Las Vegas.\n\nWhile in the car, Marissa and Alan held hands. Several times, Marissa looked in one of the mirrors and found that she had a goofy grin on her face. It was almost a mirror image of the one Alan had.\n\nShe and Alan talked, mostly about what else they wanted to do in Las Vegas. \n\nAfter leaving Hoover Dam, they stopped by Sergio's Italian Gardens Ristorante, a charming Italian restaurant that was off the strip. It came highly recommended from the TGR salesmen.\n\nThey sat outdoors and in the shade and shared a light lunch. The staff was friendly and professional and the food was excellent. Marissa only had a salad, but helped herself to some of Alan's pasta.\n\nWith the sun still out, they headed west and drove through Red Rock Canyon, stopping at the visitor's center and at a couple of other places to take some pictures.\n\nMarissa watched Alan playing with his new camera and it made her feel good that she had found something for him that he really liked. After a zillion pictures and a couple of chincy t-shirts from the gift shop, they went back to the hotel.\n\nThey took a quick shower, washed off the oily suntan lotion and cleaned up for dinner. Marissa put on a yellow sundress while Alan dug out a pressed pair of khakis and a short-sleeve button-down shirt.\n\nHeading downstairs again, they picked the car up from the valet and drove over to the Venetian. Alan had made reservations at the Canaletto restaurant. They got an outdoor table overlooking the Grand Canal, a man-made body of water that runs through the casino property, complete with gondolas and singing gondoliers.\n\nSeveral times she noticed Alan staring admiringly at her legs or her chest, but when he'd talk, he always looked her in the eyes.\n\nAfter a couple glasses of wine, both were loosened up a little. She ordered the lamb shank with polenta and Alan had a variety of shellfish in a red sauce over a bed of linguini.\n\n\"Can I ask you something?\" Marissa said. \n\n\"Sure.\"\n\n\"What did you want to be when you grew up?\"\n\nAlan shrugged. \"Mostly the usual. Doctor. Astronaut. President.\"\n\n\"How did you get into academia?\"\n\n\"Dad was a professor and wrote a couple of books,\" Alan replied. \"He was always around the house either writing his next article or grading term papers. The hours are really good, and since there really isn't a large job market for people with PhDs in history, university gigs are the best thing out there. What about you? What did you want to be when you grew up?\"\n\n\"A pediatrician,\" Marissa replied. \"I got my undergraduate degree from Guilford in biology and spent a year trying to get into medical school.\"\n\n\"Why didn't you go?\" Alan asked. \"You don't have to answer that.\"\n\n\"No, it's okay,\" she said with a slight smile. \"I actually got admitted to the program at Wake Forest, but I couldn't get a financial aid package that wasn't loaded up with student loans. So I put it on hold and haven't gone back.\"\n\n\"Would you?\" Alan said. \"Go back, I mean.\"\n\n\"I don't know,\" Marissa shrugged. \"I've got a little bit in savings and I could probably get some additional financial aid since the government doesn't think I've made any money for the past five years.\"\n\nHas it really been that long? she thought to herself. \n\n\"What do your parents think you do?\" Alan asked. \"You don't have to answer that either.\"\n\n\"They think I'm a personal trainer,\" Marissa flashed him a sardonic smile. \"Let me ask you something else . . . why do you want to open this restaurant?\"\n\nAlan's gaze became distant for just a second. He took a sip of his wine. \"When Brianne and I met, we were in college at Davidson. She graduated a year ahead of me and we got engaged. She was a fabulous cook and when we moved to New York while I was at Columbia, she worked two jobs so I could go to school. After I graduated, we got married and moved back closer to home. Her degree was in business so she got her MBA and wanted to open her own restaurant. We kept putting it off because we each had loans to pay off and then she got pregnant. Her face would light up whenever we talked about the restaurant, though.\"\n\nThe far-off look in his eyes returned. \"She knew what she wanted everything to look like. How the kitchen would be set up. She was so excited about it, that she got me to want it to happen, too.\" \n\nA flash of sadness came across Alan's face. \"When Brianne died, my one regret was that she never got her dream to come true. She gave up so much for me\u2014for us\u2014that I want to make it work. I guess it's my way of holding on to her.\"\n\nMarissa reached across the table and took Alan's hand in hers. They didn't speak for a long time.\n\nThey finished their meal and skipped dessert. They walked around the Venetian, holding hands while working off dinner.\n\n\"Let's take a gondola ride,\" Marissa said.\n\nThey headed back to the Grand Canal and found a gondolier bringing his boat in. There was no line. Another couple got out. He saw Alan and Marissa standing there.\n\n\"Care for a ride?\" he asked in a fairly good faux-Italian accent.\n\nAlan helped her in the boat. They sat down in the plush seats. Marissa sat close to her lover.\n\nThe gondolier was funny and engaging. He sang in Italian.\n\nAll the while, Marissa felt Alan's hands on her bare shoulders and arms. His touch gave her chills.\n\nWhen she looked at him, all she could think was, How can I do this? To him. To me.\n\nAnd then another part of her thought, How can I not?\n\nThe gondola slipped back into its berth and Alan helped her out. He gave the gondolier a tip and they headed back to their car.\n\nHe started to drive and soon Marissa found that they were off the strip, headed out of town. She didn't think Alan knew where he was going, but she didn't say anything. The top was down and the wind blew their hair around.\n\nSoon, they were well west of town, on a newly paved road.\n\nHe pulled into what would soon be a new home development. It was stuck out in the middle of nowhere, but there were streets paved with curbs and sidewalks. They were on a small rise and had a wonderful view of the city down in the valley, but were about five or ten miles away from anything and there was not a soul to be seen.\n\nLas Vegas is one of the fastest-growing cities in the country and in a year or so, this would probably be just another suburban neighbourhood. But right now, it was just a street and a bunch of empty lots. They were all alone.\n\nAlan parked the car on one of the new streets facing west. The sun was just setting over the mountains.\n\nThe sky was streaked with reds and yellows. The few clouds in the sky were brilliant.\n\nThey sat in silence. Alan's hand was on her knee, Marissa's fingers wrapped around his.\n\nIt was starting to cool off, but the temperature was still comfortable.\n\n\"Can I ask you something?\" Alan said tentatively.\n\n\"Sure.\"\n\n\"Do you have any fantasies?\"\n\nMarissa looked at him blankly for a second. \n\n\"You know,\" he said quietly. \"Sexual fantasies. Is there anything I can do for you? After all, this is our last night in Vegas.\"\n\nShe stifled a bitter chuckle. \"No. I don't have any fantasies. Not anymore.\"\n\n\"Done it all, huh?\"\n\n\"Not quite,\" she replied, uncomfortable. Marissa never talked to clients about her other jobs. It wasn't anyone's business. Of course, none of her other clients ever asked about the others. She always pretended that whoever she was with was the best she ever had or that she had never taken a cock up her ass before.\n\nAlan sat there for a little while longer. Marissa could tell he wanted to ask her something else, but didn't know quite what to say.\n\nShe waited expectantly.\n\nFinally, he looked her in the eyes. \"What about other fantasies? Dreams? If you could do anything with your life, what would it be?\"\n\nThat gave her pause to think. \n\n\"I don't know,\" Marissa replied after a moment. \"I'd have to work for myself or in a job that wasn't nine to five. I'd still like to go to med school. Or just be a mommy.\"\n\nFor the past several years, she lived day to day. One job to the next. Marissa owned a house that was now paid for. She had some money saved up. She could quit being a call girl and start a second career. But what? What was Alan getting at?\n\nThe truth of the matter is that she liked the money and she liked the predictability of her life. She was good in bed, pretty and knew how to conduct herself among the highbrow clientele she entertained. That made her very valuable to Laurie and enabled her to command a greater price than some of the other girls she knew. Still, it wasn't going to last forever, and she knew that.\n\n\"How did you get into . . . um, the business?\" Alan blurted out. He glanced over at her apologetically. \"You don't have to answer that.\"\n\nMarissa smiled outwardly, but inside, it was like Alan had struck her. In her line of work, this was one question no one ever asked.\n\nPart of it was that her reasons were none of his damn business. A bigger part was that she didn't really want to confront those reasons. She didn't want to acknowledge that she was selling herself for a few dollars. While she called herself a call girl or an escort or even a courtesan, the truth is that she was nothing more than a prostitute. A whore.\n\n\"Look . . . I was out of\u2014\" Alan said and reached for the ignition to start he car.\n\n\"No,\" she patted his hand reassuringly. \"It's okay. No one has ever asked me that before.\"\n\nAfter a deep breath, she started to speak. \"After I graduated from college and was waiting to hear back from Wake, I took a job at a temp agency. The pay was lousy, but it made the rent and the bills.\"\n\nNow it was her turn to have a distant look in her eyes. \"I took an assignment at an insurance agency. After a couple of weeks, I got to know the other folks there and once night, the regional manager was going to a company function and needed a date. He offered me two hundred dollars to go to the dinner with him. I was already late with my car payment and that would cover it. So I went with him. He was young and good looking and after the dinner, he asked if I wanted to go back to his place for a drink.\"\n\nShe stopped to take another deep breath. \"I didn't want to at first, so he gave me the two hundred. Then he showed me another five hundred dollars and said if I'd follow him home, he'd give that to me, too.\"\n\nMarissa's mouth turned into a bitter smile. \"Seven hundred dollars in a night. I didn't make that much in two weeks as a temp after taxes. I would be caught up on my rent and my car payments.\"\n\nAlan didn't interrupt her. Instead he just took her hand, a gesture she appreciated. She had never told anyone about this before.\n\n\"So I followed him back to his house. We had some wine and then he stripped me down and fucked me.\" Marissa shuddered at the memory. \"It was a hate fuck. He has some issues with women and did me hard and fast. No, he didn't hit me and he didn't rape me. I let him do it because I thought I needed the money. When it was over, I got dressed and left. But I had another five hundred dollars.\"\n\nIt took a minute for Marissa to compose herself. She stared off as sun's last rays streaked across the skies.\n\n\"The next Monday, I didn't go back to work there. I requested another assignment through the temp agency. I was ashamed of what I had done. But the money . . . it was so easy.\" Alan squeezed her hand. It felt good to tell someone about her experience. And it scared her, confronting the stark reality of the profession she had chosen. \"He called me again the next month. It wasn't a date. He just wanted to fuck. At first I said no, but then he offered me more money.\"\n\nTears began to run down her cheeks. \n\n\"And I took it,\" Marissa whispered, wiping her eyes. \"He called me once a month for almost a year. He paid cash and the money was good. Then one day I got a message that he couldn't see me any more. Apparently I wasn't the only girl he was doing this with. As a regional manager he traveled a lot and his wife found out about one of his other 'girlfriends' and made him quit his job so he would be closer to her.\"\n\nAlan continued to sit next to her in silence. Just as this week was cathartic for him, it was turning out to be the same for Marissa, too.\n\n\"At first I was relieved. I didn't feel so cheap. But then . . .\" Marissa paused. \"Then I started to miss the money. The extra eight hundred dollars every month was a hefty supplement to what I was making as a temp, and I had gotten use to having it. After a month of being behind on my bills again, I got a call from Laurie. She called herself an 'associate' of the guy from the insurance company.\" ",
        "For the first time since she started speaking, Marissa turned and looked at Alan. She expected him to have an expression of revulsion. That was how she felt about herself. But he didn't. There was a sad look in his eyes. Empathic.\n\nThey say that joy shared is multiplied and that burdens shared are divided. Marissa thought that was a load of crap. Since graduating from college, she had learned to be self-sufficient. To never count on anyone other than herself. It made her quite the loner. She equated independence with isolation.\n\nAlan's eyes showed her a different message. His eyes were tearing up along with hers. His touch reassured her. In an odd way, he strengthened her and sought to share her pain.\n\n\"Laurie's quite the saleswoman. She told me that if I went to work for her, she would only get me the best jobs and the best money.\" Marissa carefully watched Alan. She wanted to know how he felt about her being with other men. \"And she was right. I quit my temp job and I've been with her for four years now. They money is great. The men she sends me are upper class and discreet.\"\n\nBut is it worth it? Marissa thought to herself. \n\n\"Do you think about quitting?\" Alan asked softly.\n\n\"Every day.\" Her voice was bitter, and not because of Alan.\n\n\"Why don't you?\"\n\n\"Let me ask you something, Alan,\" Marissa said. \"You've been teaching for how long? Eight years and you're up to what? Associate professor? How much do you make in a year?\"\n\nHe thought for a moment. \"From the university alone . . . about fifty-five thousand.\"\n\nMarissa flashed him a sardonic smile. \"I can make that in a month if I want. I have before.\"\n\n\"It's a good thing my parents left me all that money when they died, then,\" Alan flashed her the same smile, but there was something different about his gaze. Tenderness. \n\nIt struck her just then that he was going to be paying her almost half of his annual salary for the past week. And that didn't count all the expense or trouble he had gone through just for her. Marissa had never felt guilty about taking a client's money before. Most of her patrons could afford it. But then again, Alan wasn't 'most patrons'. She didn't feel anything but loathing for most of the men she serviced.\n\nShe and Alan stared at each other for a moment. She thought he was about to say something, but instead he just looked into her eyes. Their conversation took all of her guards down. He knew more about her than she had told anyone.\n\nIn telling him about her past, Marissa was forced to confront things\u2014hard, ugly things\u2014about herself. Things she took no pride in. A past that was checkered with whoring and rationalising. She had sold everything about herself, including her soul. Just the thought of that made her uncomfortable.\n\nWhy am I letting him in? Marissa thought to herself. If I wasn't worthy of him before, I sure as hell am not now.\n\nAlan reached over and brushed the tears out of her eyes.\n\n\"What are you thinking about?\" he whispered.\n\nMarissa took a deep breath. \"How much I want you inside me right now.\"\n\nHe pulled her close and kissed her. It was a warm, sensual, loving kiss. Marissa melted into his arms.\n\nIt was all she could do not to rip his clothes off. If the steering wheel weren't in the way, she might have. She pulled back. \"Get in the back seat.\"\n\nBoth of them practically vaulted over the bucket seats into the back of the convertible. Marissa pushed Alan down into the center of the reach bench seat. Alan tugged at his khakis and pushed them down to his ankles while Marissa struggled to get her panties off.\n\nAlan's cock wasn't limp and it stiffened in her grasp. She stroked him a couple of times and then took it in her mouth.\n\nShe swirled her tongue around his head. He threw his head back and moaned. Alan reached for her breasts but she pushed his hands away.\n\nHer head bobbed up and down on his cock until he was hard. Then she threw her leg across his lap and sat down.\n\nIn one swift motion, Alan was inside her. He put his hands on her hips and she slowly began to ride his cock.\n\n\"You fit perfectly,\" she whispered in his ear.\n\n\"I'll bet you say that to all the guys,\" Alan replied teasingly and bit her neck gently.\n\nMarissa smiled as Alan's hands roamed her body. His hands cupped her breasts. Even through the thin fabric of her sundress, his touch was tender and loving.\n\n\"No, Alan, I've never told anyone that before,\" she said, sinking all the way down on his cock. Her pussy was slick and his cock was warm inside her.\n\n\"Marissa.\" When he spoke her name, there was a serious tone to his voice. She pulled back and looked him in the eyes. There was a combination of fear, desire and hope on his face. \"Am I just another job for you?\"\n\nHer mouth fell open, unable to respond. She tried valiantly to form the words, but couldn't. There were a million things she wanted\u2014no, needed\u2014to say, but they just wouldn't come out. Her confused emotions were overloaded.\n\nThe tears came.\n\nShe tried to hold them back, but they would not be contained. Not any longer.\n\nAlan pulled her to him. Marissa buried her face in his shoulder and started to sob. Five years of buried pain, sublimated humiliation, and everything else that went along with whoring came to the surface and poured out of her.\n\nHe held her as the sobs wracked her body. Alan's strong arms enveloped her in a warm embrace. She felt safe there, with this man who, a week ago, was barely more than a stranger.\n\nWhispering comfortingly in her ear, Alan stroked her hair as she cried. She gasped for breath and wiped the tears and running mascara from her eyes.\n\nAll the while, Alan's steady touch was there for her.\n\nThrough the tears, Marissa looked down at him. There were tears in his own eyes. The face gazing back at her was a man in pain. A pain different from her own, but no less intense. It took her a minute to realise why he was crying too. He was hurting because she was hurting.\n\nEmpathy.\n\nHaving deadened herself to the emotion, Marissa didn't immediately recognise why Alan would hold her so tenderly as she broke down.\n\nWhen it finally hit her, she was overcome with emotion again. This time, though, it wasn't anger or self-loathing, it was desire.\n\nMarissa leaned over and kissed Alan hard. She started to grind her hips against him. Her heightened emotions also heightened the sensitivity of her touch.\n\nHer pussy burned with lust. She squeezed Alan's cock and it sprang back to life, filling her up.\n\nTheir tongues dueled and she bit his lip.\n\nAlan's hands went to her ass, which was bouncing up and down on his lap at a feverish pace.\n\nMarissa pressed her clit against the base of Alan's cock and her toes started their familiar tingle.\n\nShe threw her head back and let out a throaty growl.\n\nTaking him by the hair, Marissa pulled Alan forward and into her bosom. He nibbled greedily along the valley between her breasts. She was tempted to strip out of the sundress so he could pay proper attention to her tits, but settled for riding him. Long. Slow. Hard.\n\nHer desire controlled her.\n\nHer feelings consumed her.\n\nForgetting about everything that kept her life in order, Marissa surrendered herself to Alan. Her lover.\n\nUnderneath him, Alan began to thrust upwards. His hips met hers and they both let out satisfied moans.\n\n\"Oh, god,\" she whispered. She pushed him back against the seat and pressed her lips to his.\n\n\"I'm about to cum,\" Alan managed to gasp.\n\n\"Yes, Alan!\" she cried out. \"Cum inside me . . . cum inside me, please!\"\n\n\"Oh, fuck.\" His hands tensed on her hips. He pushed into her one final time. \"Oh! I'm cumming . . . I'm cumming . . . Marissa . . . I'm\u2014\"\n\nHearing her name from his lips sent her over the edge. Her pussy erupted with a warm flood. A torrent of emotion washed over her.\n\nShe felt Alan's cock pulsing inside her, filling her with his seed. She held on to him as her own orgasm overpowered her already drained body.\n\nAs the last vestiges of the sun dropped behind the mountains, Marissa let out a delicious, rapturous, glorious scream. \n\nShe cried out and it seemed to echo back from the hills.\n\nFinally, she slumped forward, Alan's limp cock still inside her. Her arms were around his neck.\n\nShe gasped for breath.\n\nAll the while, Alan held her. There was a comforting promise to his touch. A promise that he would never let her go. \n\nAnd all she had to do was let herself fall for him.\n\nThey held each other for a long time. It didn't matter that they were out in the middle of nowhere. It didn't matter that he was a widower missing his late wife. It didn't matter that she was a whore who had lost all of her self-respect.\n\nThe only thing each cared about was that they had someone in their arms who cared about them..\n\nAs this day ended, Marissa could only feel that at the next sunrise, the new day would bring something better.\n\n***************************\n\nYes, there will be a part 3."
    ],
    "authorname": "HLD",
    "tags": [
        "las vegas",
        "casino",
        "back seat",
        "ballroom dancing",
        "flowers spa",
        "romantic dinners"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/impersonating-brianne-ch-02"
}