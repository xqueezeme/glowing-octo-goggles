{
    "title": "Jetsam",
    "pages": [
        "Jetsam\n\nI dreamed Kelly one morning in that half-asleep state just before I woke up. She was older than she is here, but no less battered. Like seems to often happen to my characters, I wanted something better for her\n\n--\n\nI studied my reflection as I waited for the water to heat up, and frowned at the faint crows-feet that I'd once have called laugh lines.\n\nI found a new grey hair, then a second, and sighed. It was clearly time to visit the hairdresser again - to make another vain attempt to stave off Father Time's greedy paws for a little longer.\n\nFor what that was worth.\n\nI climbed under the jets of steaming water, and let the warmth sluice over my neck and shoulders. I spread my lips and probed myself with my fingers as I began to to wash the dregs of the night's poorly-thought-through decisions out of me.\n\nHe'd been pleasant enough and clean. I'd been able to put up with him for the promise of an hour or two of fun, a brief rush of endorphins, and a small bit of afterglow to keep the loneliness at bay for another day or so. Letting him come inside me had been unwise, but neither of us had had a condom to hand and I'd had too great a need to be touched to let prudence have much say in the matter.\n\nI sighed.\n\nIt hadn't been all that bad, really. I'd enjoyed it. He'd smelled nice, and he had felt good inside me, and he'd made amusing noises as I'd ridden him to his second climax. Better than some times I could remember from my recent past.\n\nI'd left early enough for it to still be called late - before the fairy godmother L'Or\u00e9al's magic totally evaporated and betrayed me for what I was rather than what the blurring of alcohol, makeup and club lights had no doubt made me.\n\nI briefly wondered if he'd think of me again.\n\nAnd then I grinned mockingly at myself. Of course he wouldn't. I was a notch on the bedpost, one for the lads down at the pub. An easy and enjoyable lay.\n\nThat was what he'd remember.\n\nNot me.\n\nI spun slowly under the shower head and reached for my body wash.\n\nIt would be six soon. If I was quick I could squeeze in my routine before work.\n\nAnd that would salve the bitterness and keep me going for the day.\n\nAt least my body hadn't betrayed me. For now at least.\n\nThe thought came unbidden, sliding past my layers of armour without so much as an if-you-please.\n\nI tried to ignore the sudden bitter ache it woke in my heart.\n\n.:.\n\n\"Ms Marshall?\"\n\nMy assistant waited patiently for me to finish reviewing an email. I sighed and looked up at him. \"Hey, Graham. What is it?\"\n\n\"It's pub'o'clock. Do you need anything before I head out?\"\n\n\"No, thanks Graham. I've just got some stuff to finish before I head home. Go enjoy yourself and have a lovely weekend. See you on Monday.\"\n\nHe paused, looked as if he wanted to say something more, then elected for the safer option of \"See you on Monday, then.\"\n\nI watched him collect his coat and bag. Graham. God bless whatever whim of fate had sent him my way, young, babyfaced, and almost-but-not-quite straight. He hid his youth well, soaked knowledge up like a sponge, and always quietly stepped up on the days when I was drowning.\n\nI was both sad and relieved that he'd left without trying to say anything to me. I didn't have the energy spare to pretend that I was okay. Not to someone as perceptive as him.\n\nI took off my glasses and set them aside, slouched back into my chair and stared up at the plasterboard ceiling above me.\n\nI was miserable. Lonely, cut off from what few friends I'd made in my years here by the acrimony of divorce and by the long slow erosion of time. Those who'd kept in touch had had children and moved into a different stage of their lives as parents.\n\nI had... not.\n\nI'd passed through bitterness into acceptance years before, back when we'd done the all the tests, spoken to the specialists, and discovered that, for me at least, the half-formed dream of a family was over before it could ever become real.\n\nPeter had not taken it well. A middle child from a large family, he'd always had a firm view of what he felt he deserved. My inability to provide it for him had been a severe blow to us both.\n\nAnd then the long years of sneaking and deception had started. The overheard conversations, the strange growing coldness, the business trips, the weekends away for work...\n\nI wasn't sure of the final tally on the wall of shame. One for me, of course - a moment of lunatic need for human touch that I still regretted. At least three for him, though I was relatively certain he'd fucked a former friend of mine as well. He'd lapsed first, but mine had been the death-blow, since it had changed me from victim to conspirator.\n\nAnd after that, all roads had had only one destination at their end.\n\nI hadn't fought that hard. I'd waived my interest in most of his assets. I had enough, and earned more than enough that I'd not want for anything. And better a clean break - we'd wasted enough time on one another.\n\nI'd kept the flat in Barnes and had used some of my share of the proceeds of the sale of the beautiful house in Kew to buy a small cottage in Dorset, a few miles from Lyme Regis and a stone's throw from the sea.\n\nIt was there, to that sanctuary, that I had retreated in the aftermath of our divorce and the ruin it wreaked on me and the relationships with the people who I'd made the mistake of thinking were my friends.\n\n.:.\n\nI closed my laptop and locked it into my desk. It was growing dark outside, and the Square Mile would be starting its slow transformation into a mausoleum. I didn't like walking empty streets, so it was time for me to head for the flat - for home, I pretended to myself.\n\n'Home' - a beautifully finished and almost spotless shrine to what might have been for another me.\n\nI couldn't say that I was looking forward to a weekend of echoing silence in which I could almost hear the dust-motes falling. The thought was claustrophobic - another nightmare of long walks along fume-drenched streets and overcrowded parks, trying not to look at the young mothers; trying to hide from the silence and waste of a life not lived.\n\nStuff that.\n\nI pulled out my phone and checked the weather in Dorset. It looked like it would be a beautiful couple of days down south.\n\nSuddenly the urge to sit on the sand and watch the waves came upon me. It would be a two hour drive at least. Probably three. But my cottage was stocked with the basics and I could pick up what fresh stuff I needed at one of the service stations on the M3 motorway... all I needed was clothes. And not even very many of those; I had some stashed there just in case.\n\nAnd, just like that, I made use of the one positive aspect of my life - complete freedom of choice - and decided to just go. I waved goodnight to the security guard at the front desk and walked to the nearest tube station with something an onlooker might have mistaken for a spring in my step.\n\nAn hour later, I was nearing the motorway, with a tog-bag full of whatever clothing had been easiest to grab on the Mini's passenger seat and Tracy Chapman's smokey voice crooning comfort to my weathered soul.\n\nThe stars were glittering high above the faint ocean haze when I arrived at my sanctuary. I parked the Mini right up against my wall, taking care to leave plenty space for any tractors or trucks to get past if they needed to traverse the lane. I carried my bags into the cottage and dropped them by my bed. I lit my two favourite oil lamps, wedged the sash windows open in the bathroom and kitchen, and spent a moment staring out with complacency at the rich, beautiful night that blanketed my garden in velvety darkness.\n\nI poured myself a double gin from my booze shelf and added tonic water from the bottle I'd bought en route, then kicked off my sneakers so that I could enjoy the texture of the uneven slate tiles under my feet.\n\nAnd once that was done I had a quick shower, snuggled into my fleece pyjamas and enjoyed a small, simple meal with another G and T to wash it down and help get the week's kinks out of my back.\n\nThe wind shifted and brought the faint sound of surf to me. Slowly the warmth of my cottage enfolded me like a mother's protective arms.\n\nIt was good to be back.\n\n.:.\n\nThe pre-dawn sky was pink and clear; punctuated only by the last few fading stars in the west.\n\nI shimmied into leggings, pulled on a sports bra and long-sleeved thermal vest. I dug out one of my three season jackets from the lopsided cupboard and struggled into it. I snatched breakfast of a banana and some raisins, pulled on my socks and walking shoes and set off on the mile or so lope to the little beach that I'd come to love.\n\nI reached the eroded bluffs overlooking the bay as the sun crested the south-eastern horizon and threw the world into a rich riot of colour. I paused, just breathing, moved by the beauty of the place; this little slice of heaven on earth that had become my haven. I breathed in the ocean tang, letting the salt scour my thoughts clean of the patina of the city.\n\nThree figures were milling around near the gravel car park at the western edge of the beach. I watched them as they staked out claims on the sand and began unpacking equipment from the bowels of a small white van. Boards of some sort followed, and I realised that it was a group of kite surfers, here to take advantage of the gentle onshore breeze.\n\nI negotiated the descent down to the beach below and sat on a large flat rock, part of some long-ago fall from the strata above. I sat, crossed my legs and studied the group as they began the laborious process of inflating their wings.\n\nA tall, athletic, blonde-maned woman wound up nearest me. Her two middle-aged male friends faffed and chatted to one another while she simply got on with things. I watched her and her alone, envious of her calm, competent grace as she arranged her kite and slipped into her harness.\n\nShe wore a three-quarter-length sea-grey neoprene suit trimmed with pale blue flashes that played to her already lovely figure. I watched as she pulled her hair into a careless ponytail and positioned it under her day-glo-yellow helmet. She turned, saw me watching her, and gave me a long, level stare in return.\n\nSomething about her gaze set off a frisson deep in me, and even as I flushed I found that I couldn't look away from her.\n\nShe turned back to her wing, dismissing me with a gentle shake of her head. One of her friends helped her with some complicated process involving lines and a clip on her harness, and then she pulled her wing up into the air above her.\n\nShe squatted, picked up her board and shuffled out into the water. In almost no time at all she was racing out towards the foamy line of what could charitably be called breakers.\n\nI watched her as she carved languid curves on the ocean's face. I watched her as she worked her way upwind and then sped back downwind to begin the process again. And I was still watching her as, an hour or more later, she rode the dying gasps of the breeze back inshore to the beach some scant few metres from my perch.\n\nShe deflated her wing, bundled her kit into a manageable ball, and started back towards the carpark. Her hair was soaked, her skin pink from the cold, and she was smiling in artless exhilaration.\n\nAs she passed me by, she gave me another long, direct stare. This time, though, she smiled at me, and then brushed a strand of soaked hair back from her face as she looked away.\n\n\"Jack!\" she shouted. She waved to one of her friends as he made landfall.\n\n\"Aye, Ash!\" came the faint reply.\n\n\"Need a hand packing?\"\n\n\"Aye, that would be grand, love!\"\n\nShe gave me a thoughtful glance over her shoulder as she walked away.\n\nI shivered.\n\n.:.\n\nI ate a small second breakfast, staring out at my garden and the unkempt hedge behind it; both needed care. But first, I thought, I'd make for town and see if I could find any more 'antique' tat that I could clutter my cottage with. Peter had hated clutter, so as a psychic 'fuck you' to him I tended to buy small items from antique shops that I knew would have infuriated him. Of course it was petty, but it was something I permitted myself.\n\nThe road down to Lyme Regis had almost no traffic. I wound down the long hill to the foreshore and turned into the first parking lot I found. I pulled to the side and watched in growing amusement as a middle aged man in a tarted-up Range Rover spent five minutes trying to fit the vehicle into a bay that was obviously too small. In the end he left in a fury, wheels chirping as he stamped down on his accelerator and abandoned the space and victory to me. \"Serves you right, prick,\" I said, uncharitably.\n\nI breathed the cool, salty air and smiled. It was busy but nowhere near as bad as it would have been in high season. I dawdled, soaking in the sun and the bustle, watching the people flowing around me. Dogs gambolled in the gentle waves and small children claimed waterside fiefdoms under the watchful eyes of their parents or grandparents.\n\nJust beyond the breakers was a gaggle of stand-up paddle-boarders - I laughed softly at the distant screams as first one and then another of them fell off as a larger set of waves rolled through.\n\nI stopped at a cafe's ice cream counter and bought myself an indulgence; a decadent double scoop of Madagascan vanilla and a single of my favourite mint on a sugar cone. The bitter cold froze my brain, and I fumbled my card and phone back into my pocket as I squinched my eyes closed against it.\n\nI took a few steps down the promenade, bonding intimately with my treat.\n\nA woman called out behind me.\n\n\"Hey! Excuse me!\"\n\nI ignored it, a London reflex honed by long years of practice.\n\n\"Excuse me, excuse me, sorry, hey, you dropped this!\"\n\nSomeone touched my arm.\n\nI turned, and found myself confronted by the stunning blonde kitesurfer.\n\nWe stared at one another for a heartbeat, and I imagine my expression very closely matched her own wide-eyed surprised.\n\nShe was the first to recover. \"Well,\" she said, grinning. \"That's certainly one for the books. Anyway. Hello. You dropped your credit card. Here you are. \"\n\nShe handed it to me; her fingers were delightfully cool as they brushed my palm.\n\n\"Oh God, thank you,\" I said, flustered. \"I didn't even notice. That would have been a disaster. You're so sweet. Thank you so much!\"\n\n\"You're welcome,\" she said, with a warm smile. She half-turned, paused, looked back at me. \"You're not... from around here, are you?\"\n\n\"No,\" I answered her. \"I'm just down from London...\"\n\n\"Mm. It shows. Well. See you around, then...\"\n\n\"Um... bye...\"\n\nI stood, forgotten ice cream beginning to melt and run down over my fingers, watching her as she loped away. Then, confused by my reaction to her and irritated with myself for dropping my card, I shook the cobwebs out of my head and got on with my morning.\n\nI spent an hour or two roaming the foreshore and the bric-a-brac shops and the boutiques. Then, feeling strangely unsettled, I sat on the seawall and watched the incoming tide as it displaced families and their dogs and erased the history of the various lands and territories that had been briefly staked out on the sand.\n\nI glimpsed her once more.\n\nShe was young. Confident. Beautiful.\n\nEverything that I was not.\n\nI sighed.\n\n.:.\n\nI woke before dawn as usual, yawned, stretched and dragged on my leggings, vest and a fleece. Dew clung to the grass and my feet and calves were soon soaked; I made my way to my beach, reaching it not long after the sun had risen.\n\nI perched on my rock and quietly contemplated the waves, content in the tranquility around me.\n\nSlowly the day lightened and a faint breeze woke. As the sun softened the hard edge off the pre-dawn chill I removed my shoes and socks and waded out a few metres into the ocean, heedless of the bitterly-cold salt water that soaked my leggings. I dug my toes into the sand beneath them and closed my eyes, grounding myself.\n\nI stood there for some time, doing nothing, just breathing, feeling each ebb and flow of the waves that lap around me, wishing that they would wash away the dents and stains on me and leave me smooth as one of the pebbles on the shore.\n\nThen the moment passed - I took a breath, sighed it out and turned back to shore.\n\nShe was sitting on my rock, arms around her legs and chin resting on her knee as she watched me.\n\nWe stared at one another over the ten or so metres between us. A gentle breath of wind stirred her fringe, and she shifted and brushed it out of her eyes. She gave me a hesitant smile then hopped down off the rock and slowly approached me.\n\n\"Hey there. You looked like you were contemplating going deeper,\" she said, by way of greeting. \"So I thought I'd keep an eye on you in case. The waves can be really dangerous here.\"\n\nI turned and looked back at the lazy sea, then turned back to her, eyebrow arched in amusement. \"I can see that.\"\n\nShe had the decency to grin, but didn't look away from me.\n\n\"I was just enjoying the clean sand under my feet,\" I said, flushing under her scrutiny. \"It's the nicest beach near my cottage, so I like to come here when I want to think.\"\n\n\"Mm. It's my favourite beach for that too. There's not much in the way of broken shells or glass to cut your feet on here. And it's wonderfully secluded - tourists don't come here because there's no ice cream vendors or coffee shops. I'm Ashleigh,\" she added.\n\n\"Kelly,\" I answered, unnerved by the warmth of her pale blue eyes.\n\n\"Nice to meet you,\" she said; her mouth twitched up at one corner.\n\n\"Where are your friends?\"\n\n\"Oh, there's not enough wind so they're sleeping in. They're foul weather friends,\" she added, with a pained wince at her own joke.\n\n\"Oh.\"\n\n\"So... Kelly... if you don't mind me asking - what's a city girl like you doing out here all alone on this particular remote stretch of desolate Dorset?\"\n\nGirl?\n\nThat amused me.\n\n\"I'm in hiding from life for an all-too-brief weekend,\" was my flippant response.\n\n\"Fair enough... it's a good place for thinking when you can get a moment alone.\"\n\n\"Until you wind up making conversation with friendly locals...\"\n\n\"We're a social bunch,\" she agreed. \"We're also very nosey and terribly bad at picking up on cues and sarcasm,\" she added with a wink.\n\nDespite myself, I grinned at her.\n\n\"I'm going for a walk along the sand while the tide's still out,\" she said. \"Might find some fossils. You're welcome to walk with me, if you've got nothing else on...\"\n\n\"Fossils?\"\n\n\"This entire region's rife with them. Mostly ammonites, sometimes other things.\"\n\n\"Sorry... what are ammonites?\"\n\n\"A kind of pre-historic cousin of the octopus.\"\n\n\"And they're just... lying around here? For people to just pick up?\"\n\n\"Oh god, yes, common as muck, relatively speaking. Didn't you go and see the big ones in the rocks at Lyme Regis?\"\n\n\"Um... no.\"\n\nShe laughed at that. \"You must be the first tourist in history who hasn't, then. Come on. We've got a little while before the tide will become dangerous.\"\n\n\"Well, alright,\" I agreed. \"It sounds much more interesting than weeding my garden.\"\n\nShe picked up a small backpack and waited patiently while I pulled on my shoes.\n\n.:.\n\n\"So what are you hiding from, if you don't mind me asking?\" she asked. She rummaged in her bag, and pulled out a hammer and some clear plastic goggles of some sort. \"Stand back, this might throw up some shards.\"\n\n\"What are you doing?\"\n\nI watched as she positioned a grey pebble and raised her hammer.\n\n\"Fossil-hunting.\"\n\n\"That's a rock,\" I told her, helpfully.\n\n\"You don't say. More precisely, it's mudstone, which around here means that it's probably part of an ancient seafloor, and there's a high chance...\"\n\nping. ping. clonk.\n\n\"... that there might be something in it. Though, in this case, that's clearly a vain hope.\"",
        "\"Are you a geologist or something?\"\n\n\"Me?\" she snorted. \"God, no. Just someone who never grew out of her childhood love of dinosaurs etcetera. You haven't answered my question.\"\n\n\"I was hoping you'd forget it and move on.\"\n\n\"Yeah, I don't do that, I'm afraid. It's a character flaw.\"\n\n\"Why do you care?\"\n\n\"I'm just making conversation. No need for you to get bent out of shape if it's a state secret...\"\n\n\"Sorry,\" I sighed, after a pause. \"Old wounds. Well, then...\"\n\nI took a breath. \"I'm hiding out from the mutiny and desertion of a friendship circle who sided with my ex-husband during our divorce. I'm also trying to keep some distance between me and my resulting tendency to drink too much and misbehave shortly thereafter.\"\n\n\"Yikes,\" she said, glancing up. \"That's a lot to unpack out of two sentences.\"\n\n\"I was compressing several years worth of horror down to a catchy tagline.\"\n\n\"Uh huh.\"\n\nShe turned over a few pebbles and pursed her lips as she picked one up.\n\n\"And you chose this part of the world to hide out in?\" she added. She glanced up again. \"No offence intended.\"\n\n\"None taken. I basically drunken-rage-Googled and searched for seaside cottages for sale. I was looking at Wales and the Hebrides at first - the old run as far as you can routine, I suppose. Then I found the one here. It started as a whim, almost a mad self-mocking joke. But... bit by bit it's become, well, a kind of home to me now; far more so than... the other place. Which is a bit of a problem given that my job is in London and isn't really the sort of thing I can do remotely.\"\n\n\"Yep, that's going to take some untangling. Here. Hold this one for me, will you?\"\n\nShe handed me a pebble and positioned another. She raised the hammer.\n\nping. ping. ping. clonk.\n\n\"Fuck,\" she muttered. \"I was sure there'd be something in that one.\n\nI grinned at her. \"It looked like a rock to me. Like the previous one.\"\n\n\"It was just a rock,\" she agreed amiably. She stood and stretched out her back with a groan.\n\n\"So is this how you spend your free time?\" I asked. I shook out my hair and bound it up so that it wouldn't tickle my neck in the faint breeze.\n\n\"Sometimes.\"\n\n\"And other times?\"\n\n\"Kiteboarding. Surfing. Sailing. Volunteering for the RNLI when they need me.\"\n\n\"The lifeboats?\"\n\n\"Yeah, my dad's ex Royal Navy and my cousin's on a freighter somewhere off Macau at the mo, so it's my act of contrition to the sea,\" she said. She tucked a strand of hair back and squinted out at the waves. Then she took the pebble she'd handed me, and knelt down. \"Close your eyes.\"\n\nping. clonk\n\n\"Oh sodding arseholes, I'm losing my knack.\"\n\n\"So what's work?\"\n\n\"Bit of this, bit of that. Basically, if it's outdoors or involves driving a van, lorry or tractor then there's a chance I've done it at some point.\"\n\n\"That's really cool,\" I said. \"It sounds interesting.\"\n\n\"It has its moments,\" she agreed. \"Ok. Time's up. The tide's started to come in. We should turn around and get out of this choke point.\"\n\n\"I take it that it's dangerous?\"\n\n\"There's a strong rip that develops in this bay. And if the water traps you up against the cliffs you get washed off and pulled out to sea - and here that's basically it for you unless a lifeboat can get round from Lyme Regis or Weymouth in time. And there's always a chance of rockfalls, so you really do never want to be under the cliffs if you can possibly help it. And absolutely never, ever walk to the edge to look over - unless you know how to fly.\"\n\n\"The coast is ravenous and I am delicious. Got it.\"\n\nShe laughed. \"That's a good description. I'll steal that one and use it.\" She slung her bag over her shoulder and we started walking. \"So why the divorce?\"\n\n\"How long have you got?\" I sighed.\n\n\"About fifteen minutes at this speed. Maybe twenty if we dawdle,\" she added.\n\n\"Wow. You weren't kidding about you guys not picking up on social cues.\"\n\n\"I know, right,\" she said, amused. \"So what was the reason?\"\n\n\"Infidelity.\"\n\n\"Ah. That's a harsh one. Yours or his?\"\n\n\"I like how you assume...\"\n\nHer eyebrow arched ever so slightly.\n\nI sighed. \"Yes. Fine. Both of us. But he was first, so it's all his fault.\"\n\n\"Mhmm.\"\n\nI stared down at the sand, watching it shift under my weight as I took a step. And another.\n\n\"Lots of things built up to it,\" I continued, hesitantly. \"I won't go into them now. But... I honestly do regret my lapse. I broke a solemn promise to myself and I doubt I'll ever really forgive myself for it. I suppose I could mutter platitudes about how he was already cheating and I was - and still am - extremely lonely but... I still did cross that line of my own free will.\"\n\n\"Mm. That's the attitude of an adult right there.\"\n\n\"I've had lots of time to think about it,\" I said. \"That said, I don't think he ever regretted his own behaviour. Oh, of course he paid lip service to being ashamed and begging forgiveness. The first time anyway. But in retrospect I don't think he's actually capable of understanding how his actions affect others. It's like he's missing that part of him. I guess I worked that out as the... process... went on.\"\n\n\"And now you're... alone?\"\n\n\"Most of the time.\"\n\n\"That's rough. I know how that is.\"\n\nI took a few silent, contemplative steps. \"It's kind of liberating to be talking to you about this,\" I said.\n\n\"How's that?\"\n\n\"It's just... easy. You're a stranger; it really... shouldn't be this simple to tell you these intensely personal things about myself.\"\n\n\"Perhaps it's because I'm a stranger that you feel like you can do it - because I don't know you, you feel like you don't have to fear being judged. Or if you are judged, it's irrelevant, because you're unlikely to see me again.\"\n\n\"That's a sad thought.\"\n\n\"Is it?\" she asked, glancing at me once more.\n\n\"Well... yes, actually. This is the longest non-work-related conversation that I've had with anyone in over a year. It's... nice to just be able to talk to somebody who has no vested interest or history. Someone who doesn't see me as a victim or, worse, a perpetrator. Thank you for listening.\"\n\n\"You're welcome. I'm told that I'm a good listener.\"\n\n\"You should try being a therapist.\"\n\n\"Hah, that's a solid nope,\" she grimaced. \"I've barely got enough energy to deal with my own issues.\"\n\n\"What would life be without luggage, eh?\"\n\n\"Too bloody right.\"\n\nWe reached my rock, and I paused. I nodded at the path up to the bluffs.\n\n\"Well, this is me,\" I said. \"Thanks for the walk, Ashleigh. It was... it was nice.\"\n\n\"How far away's your cottage, Kelly?\"\n\n\"About a mile or so, I guess. It's not far to walk, but it's a bit further by road.\"\n\n\"Want a ride?\" she offered with a hesitant smile.\n\n\"You know, that would be very kind of you. Thank you.\"\n\n\"See,\" she added, as we continued on to the car park. \"You're not the only one who's having the first meaningful conversation in some time. And I'm being greedy; I'm not ready to let it end just yet.\"\n\n\"Um... well, I have coffee,\" I said. \"And tea. And gin and other delicacies for when it's late enough to have something boozy. And I'm free until seven this evening when I need to leave for London... so if you'd like to stay for lunch?\"\n\nI felt uncharacteristically uncertain of myself.\n\nThen I smiled, relieved, as she accepted the offer.\n\n\"That sounds great, I think we may need to make use of all of those things, then. I've got nowhere urgent to be and it's nice to talk. With you, that is,\" she added, as an undertone. \"Well. That's my car,\" she said, pointing at her ancient Mazda. \"I must warn you, though, it leaked a few days ago and hasn't dried out yet so it may be a bit funky in there. I need to repair the window seals but I've been too lazy.\"\n\n\"I'm sure I'll survive,\" I said, with an easy smile.\n\n.:.\n\n\"Come in,\" I said, self-consciously. \"It's a bit of a mess, sorry.\"\n\n\"It looks perfectly fine to me,\" she said. \"You should see my tip. Where can I put my bag?\"\n\n\"Anywhere it fits.\" I said as I closed the door behind her. \"So. I've got coffee and tea and hot chocolate to start us off.\"\n\n\"Hot chocolate would be grand. Mind if I snoop?\"\n\n\"Go ahead, the bodies are all buried out back under the hedge - let me know if you see anything twitching and I'll grab the pitchfork.\"\n\nShe laughed, and made her way to the kitchen window. \"It's a nice little garden. Small, neat and manageable.\"\n\nI filled my kettle and put it on the stove.\n\n\"I needed something low maintenance. It's part of why I bought the place, but it needs love and attention.\"\n\n\"It will be really nice in winter, should catch what sun there is very well. What do you want to do to it?\"\n\n\"I want to put some flagstones in here near the door and let the rest go semi-wild. I'm not really a fan of all the grass, it's too much work to keep it looking nice. I'd far prefer wildflowers. Maybe I'll see if I can train a vine up a trellis for some shade in summer. Kind of an English mediterranean wild garden or something...\"\n\n\"Mm. It's doable and it would probably work,\" she said. \"Just make sure whatever climber you choose is hardy or winter will kill it stone dead.\"\n\nShe turned away and browsed my small collection of lanterns. \"And you're clearly into oil lamps. Greenpeace must send you tons of hate mail.\"\n\n\"I like the soft light. It feels right out here. I don't like harsh lighting... it sounds stupid, but it makes me feel old and ugly.\"\n\nShe snorted and peered through the door to my bedroom. \"You should add some colour,\" she said. \"This cottage is screaming for loud blues and yellows.\"\n\n\"Maybe once I've bought out all the lamps in the area I'll move on to 'I love the seaside' pillows.\"\n\nShe laughed, then came and pulled out a chair at my weathered kitchen table. The kettle began to boil, and I could feel her watching me as I put a pot of tea on to brew for myself.\n\nSomething about her disturbed my equilibrium - I felt a heightened awareness of her presence. It was not unpleasant. Just... different.\n\n\"How sweet do you want your chocolate?\"\n\n\"I like it sweet and as dark as sin. Three spoons, please.\"\n\nI put her mug in front of her and sat down; I watched her as she blew the froth and steam away. She took a sip, and sighed. \"I love this stuff, it's my guilty pleasure,\" she said. \"A direct link to childhood memories and all that. Whatever his other faults, Dad used to always have a thermos of it whenever we went anywhere.\"\n\n\"So you've local?\"\n\n\"These days, yes. We moved around a bit when Dad was still in the Navy, but when he retired we came out here. It's been twelve years or more now, give or take. I don't see myself leaving; I like it here.\"\n\n\"It's a lovely part of the world. I always feel better when I get out here. The sky is bigger. The world intrudes less.\"\n\n\"How long were you married?\" she asked. She leaned back into her chair.\n\n\"Eleven years on paper, more or less. Several years less than that by behaviour.\"\n\n\"So you're... what... thirty-two, thirty-three?\"\n\n\"Wow. That's a good guess. Thirty three in a month or two. How on earth did you work that out?\"\n\n\"I'm not really sure. You just have this air about you of someone who married young, and you're either late twenties or early thirties. I'm pretty good at judging that, though I never have managed to figure out why.\"\n\nShe took another sip of her chocolate. \"Any kids?\"\n\nI busied myself pouring a cup of tea, and didn't answer her.\n\n\"From the expression on your face that was a terrible question to ask you. I'm sorry. I didn't mean to...\"\n\n\"No... it's... it's ok. I...\"\n\nI took a breath, and looked up at her.\n\n\"I can't have children. At all. That's part of what... caused the divorce, I guess.\"\n\nI was proud of how steady my hands were on my cup, of how my voice didn't shake even a little.\n\n\"Fuck,\" she said, softly. \"That's... Jesus, that's brutal. I'm so sorry. Jesus.\"\n\nI made a noise, shook my head.\n\n\"I'm sorry,\" she repeated.\n\n\"It's fine, really,\" I lied. \"It's done. Dust on the wind. Can't be helped. I don't dwell on it.\"\n\nI coughed to clear my throat, took a sip of tea. \"So... my turn to pry. What about you?\"\n\n\"What about me?\"\n\n\"Well, I don't see a ring on any of those fingers.\"\n\n\"I'm not a ring kind of girl,\" she said. \"Or earrings, for that matter. My body is sacred. But, since you asked, I am most emphatically single. I have a tattoo, a leaky car and my wits and that's about it.\"\n\n\"A tattoo?\"\n\n\"Yes.\"\n\n\"Of what?\"\n\n\"Now that is a secret that many have died trying to discover,\" she said, grinning.\n\n\"Mm. So is there anybody at all in your life?\"\n\n\"Other than family? Nuh uh. People bring... complications for me,\" she added. She glanced down. Then she took a breath and squared her shoulders. \"I'm a full-time consort of Neptune. Strictly fishy kisses only.\"\n\nI laughed, and put my teacup down as I tried to recover. \"You're funny,\" I managed. \"Oh, you're a breath of fresh air.\"\n\n\"Can I get that in writing?\"\n\n\"For sure.\"\n\nShe smirked and took another sip of her hot chocolate. She licked her upper lip clean with the tip of her tongue.\n\nI watched, entranced, then caught myself. I stared at my hands and wondered what it was about her that I found so fascinating.\n\n\"So what's your work?\" she asked. \"I told you mine.\" She turned slightly on her chair so she could stare out the window.\n\n\"Middle management in a payments company. It used to be somewhat rewarding. Now it's just about filling my days, if I'm honest.\"\n\nShe made a face. \"That's no way to live.\"\n\n\"I don't really have much of a choice just yet. I'm still growing used to my status as a Newly Discarded Female. But I think I'm going to start looking for something to do out this way. I'm... I'm growing bloody weary of London. And I don't need the money that comes with it. I've got enough, and I've had enough.\"\n\n\"And what do you want?\" she gently probed.\n\n\"No real idea to be honest. Peace maybe. Time. A friend or two would be nice. Some hobbies and the time and energy to do them. I could try being an eccentric, I guess. Or a failed artist. Or one of those crazy old ladies in a coat who shouts at people.\"\n\n\"We're oversubscribed in that department around here. Besides, you're far too young for that,\" she grinned.\n\n\"Young. Hah. Once, maybe...\" I rolled my shoulders to ease them. \"God, it's so nice to have you to talk to. I'd almost forgotten what this was like. To just sit and talk. To just be...\"\n\n\"So what on earth happened? You said that people just turned their backs on you? That sounds extremely... well, cruel.\"\n\n\"I guess that people have to pick a side. And he was the more... advantageous side. He's extremely well-connected. He comes from money. I'm a social dead-end from a working-class family who was always a barely-tolerated outsider in the circles he moved in...\"\n\nI raised my cup to my lips, took a sip.\n\n\"What a bunch of shallow pathetic loathsome malodorous weasel-fucking swamp-donkeys,\" she growled.\n\nI let out a shocked cough and sprayed tea everywhere. I hunched over the table, stomach muscles heaving as I shook with barely-controlled laughter.\n\n\"Sorry,\" I wheezed, struggling. \"That's the funniest thing I've ever heard someone say. And it's so true. They were shallow weasel-fuckers. Oh god, my sides,\" I whispered. \"Ow.\"\n\n\"Where are the dishcloths?\" she laughed as she pushed back her chair.\n\n\"Just grab the towel from the bed,\" I said, wiping my eyes. \"Oh God, thank you, I needed that laugh. Oh wow.\"\n\n\"My dad says I have a filthy mouth,\" she called. \"It has its uses, and honestly, it's his own fault. Not sure how he expected me to turn out a princess when he kept the company he kept.\"\n\n\"So are sailors crude, then?\"\n\n\"You simply cannot comprehend how bad it is. There are no words. I'm still scarred by some of the things I've heard.\"\n\nShe finished drying the table, turned the towel over, and handed it gently to me. \"Your hands and top,\" she said, smiling mischievously. \"I got you all wet.\"\n\n\"Oh dear, so you did. I'd better go change.\"\n\nI walked to the bedroom and stripped off my fleece and vest. My bra had a large damp spot so I pulled it off as well. \"Put the kettle on if you'd like another cuppa,\" I called, turning unselfconsciously back to the kitchen. She looked at me, froze for a wide-eyed moment, then flushed and turned hurriedly away.\n\nI pulled on a clean vest and bent down to dig a fleece gilley vest out of my bag. I pulled it over my shoulders and zipped it partway up as I returned to the table.\n\n\"How late does it need to be for booze?\" Ashleigh asked. Faint spots of colour highlighted her cheeks; I thought that they suited her. \"I know it's technically just after breakfast but...\"\n\n\"I won't tell anyone if you don't,\" I answered. \"I can't be too silly because I'll be driving later, but one or two between now and then won't be a problem. Grab the glasses from that cupboard by the stove, I'll get the bottle. Any preference?\"\n\n\"I'm an absolute terror for gin or rum.\"\n\n\"Gin it is then.\"\n\n.:.\n\n\"Thanks for the lovely chat and the company,\" I said, as I leaned against her car and peered down at her through her open window.\n\n\"It was great. We should do it again sometime and make a day of it.\"\n\n\"That would be lovely.\"\n\n\"So you're driving home this evening, right?\" she asked as she fastened her hair up into a straggly tail.\n\n\"Yeah. I can't wait,\" I added, sarcastically.\n\n\"Make sure you leave early. It might get misty tonight and the lanes around here can get... exciting. Lots of locals know the roads backwards and drive at stupid speeds whatever the weather. If I were you I'd try to be past Ringwood and close to if not on the motorway by seven.\"\n\n\"Thanks. I'll do that. Hey... do you have a cellphone number or landline I could reach you at? It would be really nice to be able to get hold of you when I'm next down here.\"\n\n\"Got your phone?\"\n\n\"Yes.\"\n\n\"Zero Eight Four Two Two Three Five One Seven Nine Five.\"\n\nI sent her a :P and she grinned as her bag vibrated. \"See you later, Kelly. Ta for the gin. Take care, now!\"\n\n\"Cheers, Ashleigh. Thanks for the lovely day.\"\n\nI waved at her as she drove off down the lane.\n\nI made sure I was well past Ringwood by seven, and I was back in Barnes by nine. I gazed around with newfound distaste at the perfect clean lines of the flat, and dumped my bag in the middle of the floor in as messy a manner as I could manage.\n\nOn a whim I sent her a home safe, and smiled at the :) I got in return.\n\n.:.\n\nThe monotonous days of the week slid past in slow succession. Mornings were my workout routine and commute, followed by meetings, deadlines, reports and far too many other people's crises - followed inevitably by the late evening journey home back to the flat with whatever I could scavenge and eat on the way. I struggled to fall asleep, and most nights I spent far more time than was healthy awake, staring at the roof of my bedroom, wishing I were back in the warm, silent darkness of my cottage and the landscape in which it nestled.\n\nAnd... stupidly enough as it sounded, I discovered that I missed her.\n\nI missed the simple companionship we'd shared. The jokes, the easy conversation, the subtle, warm lilt of her accent and the ready smile that always seemed about to shine through when she looked at me.\n\nBut as much as I missed her I didn't dare presume on our brief contact to reach out to her.\n\nIt was Wednesday morning when she lost patience with me. A simple So how is the week going?, winking at me on my phone's lock screen.\n\nI leaned back into my chair, unnerved and shamefully gratified at the thought that she was thinking of me - however fleetingly.\n\nI responded after a great deal of internal debate and several false starts.\n\nI could tell you but you'd pull a face. How are you?\n\nHer reply was swift and clearly unrehearsed.",
        "Doing well thanks. Looking forward to the weekend, forecast says it may be fine and onshore on Sunday. Perfect for kitesurfing. Are you coming down?\n\nAnd just like that the seed was planted. Sun, wind, camaraderie... there was no reason for me to stay here where I was neither wanted nor needed.\n\nDriving down Friday evening\n\nAnd I smiled at the immediate response.\n\nAwesome. Can't wait - see you soon. :)\n\n.:.\n\nI stared at the strange grey pebble that lay on the cottage's worn stone step. I crouched down and picked it up, and breathed out in wonder at the intricate spiral shell structure frozen on the underside of the uniform grey stone. Ashleigh had clearly been by to drop it off for me.\n\nI put it on my kitchen shelf, between the lamps, angled so I could see the contours of the fossil from my table.\n\nThen I picked up my phone, frowned, and typed out Here safely. Thank you for the rock.\n\nAmmonite :P Thought I'd prove to you that I can still find them\n\nI smiled.\n\nSo are you up to anything interesting?\n\nI listened to the faint hiss of the gas as the kettle slowly came to boil, and waited for her to reply.\n\nTonight? Not really. You?\n\nSettling in for the duration. Boiling the kettle, lighting the lamps, listening to the silence...\n\nYour cottage is a lovely sanctuary\n\nYou should drop in sometime\n\nIs that an invitation? \n\nHonestly. How more blatant did I need to be?\n\nThat depends on you. I was going to brew tea but I have a bottle of wine that needs drinking... hint hint\n\nTempting...\n\nI took a breath, unsure how far I should push...\n\nI'd really enjoy your company\n\nAnd then I held my breath, hoping...\n\nI'll be there in five minutes\n\nA strange, wild happiness welled up in me. I put a lamp on the table, hunted for and set out some cheese and crackers, and opened the bottle of Burgundy so that it would breathe.\n\nI stood, shifting from foot to foot like a child at Christmas, watching the lights of her car creep in around the curtains as she parked behind the Mini. I heard her close her door, and I heard the tell-tale squeak of my gate.\n\nI yanked the door open as she paused to knock, and I laughed with glee at the surprised grin she gave me.\n\n.:.\n\n\"Gosh, this is nice wine.\"\n\n\"It's one of my reliable ones. Haven't had a bad bottle yet.\"\n\n\"You'll have to teach me, I'm hopeless at selecting them. I always end up with vinegar or tart juice.\"\n\n\"One of my ex-husband's friends was a wine snob who never passed up an opportunity to drone on about the subject. I'll gladly pass on what he taught me in the hope it makes his arse itch.\"\n\n\"Mm. I will gladly drink to his further discomfort.\"\n\nI grinned at her. \"So what were you doing out this way?\"\n\nShe frowned and swirled the wine in her glass. \"I couldn't settle for the night,\" she answered, after a brief silence. \"So I was sitting in my car at... the beach. Staring out at the sea, listening to the waves. Kind of at a loss, really, until you popped up.\"\n\n\"Why? I mean, what's wrong? Too much in your head?\"\n\n\"Oh, lots of things, the usual mental clutter. Mostly just... I don't know. You know how you sometimes get into a rut and then spend a lot of time chewing over bad decisions you've made etcetera etcetera?\"\n\n\"Ah, I guess you mean good old Oh-no-o'clock, when you relive all the cringeworthy or questionable moments from your past?\"\n\n\"I see you're familiar with it,\" she said drily.\n\n\"Oh, it and I are fairly intimate these days. So... what's the worst of what's going on up there?\" I probed.\n\nShe sighed and pulled a face. \"I'm turning thirty soon.\"\n\nI laughed. \"Oh, that one's great. Yes, I remember that one. I think I found my first grey hair not too long after. At least you won't have that problem with that mane of yours.\"\n\nShe flushed. \"Oh whatever. Anyway. Guess I'm just feeling a little... lost, is all. Like I should have had an idea of what I wanted by now. My father keeps making noises at me about settling down. Marriage. Grandchildren. Ugh. It drives me mad.\"\n\nShe eyed me. \"You've got it all worked out. Share your wisdom with me, please...\"\n\n\"Hah. I thought I had it all worked out. Trust me, it's all an illusion anyway. All the planning in the world won't survive ten seconds of attention from Chance or Fate. Everyone's a moment away from a disaster of some sort.\"\n\n\"Easy for you to say,\" she said. \"You're successful...\"\n\n\"Successful?\" I laughed bitterly. \"Me? Hardly. I may have a small bit of money, but apart from that? Nothing.\" I took a numbing gulp of my wine and coughed. \"Nothing and nobody. Nobody misses me when I'm not around. Do you think anyone's looking for me back in London? Not on your nellie. The first person who will notice I'm missing will be my assistant on Monday morning. I could disappear off the face of the Earth and nobody would let the police know until a week later. The only recent messages in my phone that are not work related are... from you.\"\n\nShe made a face. \"Ok... but you've got so many options. You have the ability to move somewhere and start over... I mean, you did that and here you are...\"\n\n\"Sure, maybe I have a bit of freedom. Freedom, and nothing to do with it. Does that even count? I'd trade it for a feeling that I belonged; that... that someone... that anyone wanted me.\"\n\nI looked away, unnerved by the way she looked at me. \"I'm thirty-plus and divorced and... infertile,\" I said, softly. \"There. I admitted it. I'm infertile. A pariah, a bird of ill omen, a warning sign to others - eat your greens or you'll end up like her! The odds are not stacked in my favour. Nobody wants damaged goods,\" I finished, bitterly. \"In the end I'll pass away like smoke and leave nothing behind me.\"\n\n\"At least you're a free agent.\"\n\n\"So are you. And you look a lot happier and much more together than I feel on a day to day basis.\"\n\nShe fiddled with her glass, frowning.\n\n\"So... what are you looking for?\" I said, trying to lift the conversation away from the negativity I'd so unwittingly summoned. \"To settle you. To make you happy?\"\n\nShe stared at her wine.\n\n\"Something... real,\" she replied, after a long silence. \"Something permanent. Something that makes me feel like there's more to life than just taking it a day at a time, slapping paint and sealant and caulking over the cracks until you just can't any more. A someone would be nice, too,\" she added softly. \"I haven't been lucky with that. I've wasted lots of time. I've hurt and got hurt by more than my fair share of people in the process.\"\n\n\"C'est la vie.\"\n\n\"Yes,\" she sighed.\n\nI topped up our glasses. \"Pity I didn't bring another bottle of this,\" I sighed. \"It would have been useful. It was unforgivably poor preparation on my part, sorry.\"\n\n\"We didn't exactly have a drinking date in our calendars. We should learn to plan better.\"\n\n\"I hope from your choice of words that this will become a regular thing.\"\n\n\"If you'd like it to?\" she said softly. \"I certainly would.\"\n\nI flushed, pleased at that. \"I'm glad to hear that my company is bearable.\"\n\n\"You're kind. You're friendly. I can talk to you. And you're extremely generous with your booze.What's not to like?\" She smiled warmly at me over the rim of her glass. \"I'd like to think that you and I are going to be great together.\"\n\n\"You can be my good twin.\"\n\n\"Mm,\" she murmured, glancing away, \"That's an unlikely role for me. So is there in fact any more wine, or did you tempt me over here just to leave me unsatisfied?\"\n\n\"None as good as this, I'm afraid. But I have a bottle or two for medicinal use. So if you're keen...\"\n\n\"We'll need one of those soon enough. But not yet. Just sit, for a bit. Sit and listen to the sea with me.\"\n\nShe closed her eyes and stayed still for a long moment. The boom of the surf carried faintly to us on the evening air.\n\nShe looked so young and pretty; it was hard to believe her claim that she was nearly thirty. I envied her a little. Maybe if I'd been more like her...\n\n\"I can hear you thinking,\" she murmured. \"What is it?\"\n\n\"Just... wishing I was still as young and gorgeous as you. The green-eyed monster and all that.\"\n\n\"Oh, rubbish,\" she snorted. \"You're a stunning woman. Don't let that pig of an ex define you, Kells. You're delicious. Trust me on that.\"\n\nI flushed hot at the compliment. \"Nobody's called me that since primary school.\"\n\nShe opened her eyes and gave me an amused look. \"Kells? Or delicious?\"\n\n\"The former. Nobody's ever called me the latter.\"\n\n\"What? Seriously? Well, then, you'll just have to make peace with me doing both.\"\n\n\"Oh. Okay. I'll try to bear it...\"\n\nShe laughed, and drained her wineglass. \"Best you open that second bottle,\" she said. \"I think you're stuck with me for a while.\"\n\n\"You say that like it's a bad thing,\" I teased her as I stood. The world lurched slightly. \"Wow, la France is hitting me hard now. We should eat before we drink any more... want some more crisps or something?\"\n\n\"Got any pasta and cheese? That's probably a better idea. It will line our stomachs a bit. Also, I... I stupidly kind of skipped supper today...\"\n\n\"Technically so did I. I've got pasta somewhere and there's a fresh block of cheddar in the fridge. And I've got flour and milk, and I think some mushrooms... we could make a sauce...\"\n\n\"You find the pasta and sort the booze, I'll get the water on the go,\" she said. \"The sauce is on you, though, because if I even so much as look at it it will burn.\"\n\n.:.\n\nThe second bottle was a distant memory. We lay, bundled up warmly on a picnic blanket in the darkness of the garden, staring up at the panoply of stars above us.\n\n\"Ashleigh?\"\n\n\"Mm?\"\n\n\"Thank you.\"\n\n\"For what?\"\n\n\"For coming and visiting tonight. You're a great companion to stare drunkenly at the sky with.\"\n\nShe laughed quietly. \"It was a really hard decision. Cold smelly car and insomnia, or wine with you. Ooh, tough choice. I must tell you, the car almost won.\"\n\nI grinned to myself. \"Glad I rate higher than a smelly car.\"\n\n\"Oh, much higher,\" she said in a soft contralto. \"Smelly car doesn't have a wine cellar or blankets.\"\n\nWe giggled.\n\n\"You should stop thinking of yourself as old,\" she said, nudging me with an elbow. \"Or as unattractive. Or... any of the other things I'm sure are roving through your head. They're... not fair to you. You're really nice, and you're really easy to be around. And really pretty,\" she added in a whisper I almost didn't catch.\n\n\"That's really sweet of you,\" I said. I could feel the flush taking me as I basked in her approval. \"Nobody... nobody's had anything that kind to say about me in years.\"\n\n\"They're idiots then. Every single last one of them. Idiots.\"\n\nShe shifted closer. \"Don't mind me, leeching some heat; two bodies are better than one and I'm getting cold.\"\n\n\"Yeah, it's getting nippy, isn't it. Haha. Nipply. Get it?\"\n\nI laughed as she elbowed me again.\n\nWe stared upwards into the darkness, and I felt strangely content lying there beside her, content in our silence, content to just be.\n\n\"Shit\", she sighed, after a while. \"It's late. It's probably already early, actually. Technically I'm working in a few hours.\"\n\n\"Working? It's Saturday.\"\n\n\"Well... volunteering. Soliciting donations for the lifeboats from innocent townsfolk and less innocent tourists.\"\n\nI laughed. \"Charity mugging. Chugging. You're a chugger.\"\n\n\"I'm totes a chugger. But fuck knows how I'm going to manage. Ugh. Alright. Thanks for the lovely night, Kells. I'd better go sleep this off in the car.\"\n\n\"Are you mad? I'm not going to let you go sleep in Smelly Car. My bed's a king size; there's more than enough room for both of us.\"\n\n\"Um...\" she temporised. \"I'm not sure...\"\n\n\"Oh come on Ashleigh. I don't bite. Much. And it's cold and you'll sleep much better in a bed than on a car seat. Don't be stubborn. Besides, I have a kettle and coffee for the morning.\"\n\n\"Kells... I don't know if...\"\n\n\"Oi. I'm the oldest, I know best. I've got some spare jimjams, you'll be toasty warm. You're not allowed to say no, Ashleigh. I'd never forgive myself if you got pneumonia or were abducted by badgers or something...\"\n\nShe started to laugh. \"Abducted by badgers! What on earth!\"\n\n\"They're evil little bastards. Nasty stripy faces. Furry pirates of the animal kingdom. Bet you anything you like that they'd try to abduct you. Please stay. I'll feel guilty all night if you don't.\"\n\n\"Okay. Okay. Jesus. I'll stay,\" she giggled. \"You're a fruitcake.\"\n\nI lay back, smiling. \"I'm glad I met you.\"\n\nShe fumbled for my hand, and squeezed it briefly.\n\n\"Ditto.\"\n\n\"Come,\" I said, after a while. \"We should go sleep. Dew's starting to come down.\"\n\n\"Yeah, ok.\"\n\nI unbundled myself and helped her to her feet. We abandoned the picnic blanket and carried the rest of the bedding indoors, closing the door behind us on the witching-hour chill.\n\nI dug out my spare pyjamas for her and then, without thinking, I started to strip so that I could change into mine. She flushed bright scarlet as I shed my vest and bra, and scampered past me into the bathroom.\n\nThe door slammed shut.\n\n\"Sorry,\" I called out, \"I'm so used to being alone...\"\n\n\"It's ok!\"\n\nShe sounded flustered and I dropped it with a shrug - some people just had nudity issues.\n\nI filled glasses with water for both of us, and snuffed the lamp in the kitchen. \"Ashleigh?\" I called. \"You ok?\"\n\n\"Just washing my face,\" came the muffled answer.\n\n\"Okay, got some water here for you. Which side you want?\"\n\n\"Window side if you don't mind, please...\"\n\n\"All yours.\"\n\nI crawled in under the duvet and she emerged from the bathroom shortly afterwards. \"It's really not like we needed any more proof that you're much slenderer than I am,\" she said, as she ran her hands down her sides. \"This is borderline obscene. It's basically as if it's painted on.\"\n\nI laughed. \"Call it flattering, rather. Gosh, you look fantastic. I wish I had your figure. The boys at my work would love you.\"\n\nShe made a retching noise, and I laughed again.\n\n\"Kelly, are you sure you're ok with this?\"\n\n\"Are you going to climb into the fucking bed or do I need to drag you into it by your ear?\"\n\n\"Okay, okay!\"\n\nShe slid in under the covers and pulled them up under her neck. \"Fuck it's got got freezing all of a sudden.\"\n\n\"Yeah. One downside of this cottage is that it's not insulated. I need to fix that and find some way to heat it in winter.\"\n\n\"Better windows might help. And some insulation in the roof. And a carpet by your bed. But the stone walls and floor are deathly. You're going to struggle with those. Will make summer much better though.\"\n\n\"Mm. Oil heater and a hot water bottle might be on order then. And maybe I can shoehorn a wood-burning stove into the corner. Shall I kill the light?\"\n\n\"Yeah. Please. It's well past time to snooze.\"\n\nI clicked off the lamp and rolled onto my side, away from her. \"Hey, Ashleigh?\" I said, softly.\n\n\"Yeah?\"\n\n\"Thanks for staying. It's really nice to have you here. Sleep well.\"\n\n\"You too, gorgeous. Thanks for being my port in a storm.\"\n\nI smiled sleepily. \"You're most welcome.\"\n\nI woke up once during the night, desperate to wee, and snuck out as quietly as I could, cursing under my breath at the ice-cold stones underfoot. She made a small noise of protest as I tried to ease back under the covers, and as I pulled the duvet up over myself again I felt her shift. She rolled over towards me and threw an arm over me, then settled in against me with a happy grumble.\n\nI tried to decide whether I was uncomfortable.\n\nAnd then I decided that I wasn't.\n\nHer arm around me made me feel deliciously fuzzy and safe.\n\nShe was warm, and soft, and smelled amazing, and it was so... nice... to know that she was there.\n\n.:.\n\nThe whistle of the kettle woke me. I rolled over and sat up, momentarily confused.\n\n\"Ashleigh?\" I called out. \"Is that you?\"\n\n\"Yep. Getting coffee on the go.\"\n\nI groaned and rubbed my eyes. \"What time is it?\"\n\n\"Sparrow fart. Sun's just come up.\"\n\n\"Mm. Amazing. Usually I'm up well before it.\"\n\n\"You looked so happy that I couldn't bear to wake you so I left you to sleep.\"\n\nHer pyjamas were folded neatly at the foot of the bed and she'd put on her jeans and technical top from the night before.\n\nI dug into my tog-bag for a pair of fluffy socks, then I stumbled my way through to the living area. \"You ok?\" I asked as I slumped down at my table. \"Because I'm not.\"\n\n\"Bit of a headache but the coffee will make everything good. Can't say I'm looking forward to a morning of asking for donations though. I would far rather wait for it to get warmer and then go find a spot on the beach and have a nap in the sun.\"\n\nShe turned and smiled at me. \"Thanks for letting me crash here, Kelly.\"\n\n\"Of course. No way were either of us fit to drive anywhere. And anyway, I liked the company. It's nice to wake up with another breath in this place. And it's really nice to have coffee on the go; it's been years since that was a regular thing for me.\"\n\n\"You don't look like you're fully awake yet,\" she said with a grin. \"Your hair is everywhere.\"\n\n\"Red wine is a hazard,\" I complained, as I dragged my fingers through my rat's nest. \"Christ, I must look a fright.\"\n\n\"Think something along the lines of Bellatrix Lestrange after she's licked an electrical socket. Here... let me.\"\n\nShe reached into a pocket and pulled out a faded cyan hairband, came to me, and quickly pulled my hair into a tail. \"There, that will keep it out of the way until you've risen from the dead.\"\n\nHer hand lingered briefly on my shoulder, and I felt goosebumps crawl over my scalp and neck. I bit back the involuntary noise I nearly made.\n\nShe sighed and moved back to the stove. \"Where's your coffee? I didn't want to dig too much while you were still snoring.\"\n\n\"Check the Blue Delft jar with the windmill on it,\" I said softly, still trying to find my balance. \"Shall I sort something for us for breakfast?\"\n\n\"Nah, I'm okay thanks. I don't usually eat it first thing; it makes me a bit queasy. And I need to get going anyway, I've got to get a change of clothes and shower etcetera.\"\n\n\"Oh,\" I said, drooping sadly. \"That's a shame.\"\n\nShe leaned against the counter; watched me for a moment. \"I don't want to wear out my welcome just yet.\"\n\n\"Oh, you're nowhere near that point. It's just... it's so nice to have you here. But of course you need to go and get your stuff; I forgot, you've got nothing here, and we can't send you out there in my clothes, we'll scandalise everyone.\"\n\nShe laughed. \"Yeah, you're petite and I am... not.\"\n\n\"I'd have said you've got a much nicer proportion to you than I do. But perhaps we'll meet in the middle on that and accept each-other's compliments and gracefully move on. \"\n\n\"Cup of coffee?\" she said. The flush on her cheeks was back; it made her look even prettier if that was possible.\n\n\"Oh God, yes please.\"\n\nShe made me a cup and gently put it down in front of me. \"Here you are then.\"\n\n\"So are you going to be busy all day?\"\n\n\"Morning definitely, maybe some of the afternoon if Vanessa doesn't show up.\"\n\n\"Who's Vanessa?\"\n\n\"Someone who's supposed to be coming to take over for me,\" she said, with a voice suddenly flat. She stretched her arms up and behind her back, and groaned. \"We'll see if that actually happens. She's... not reliable,\" she added, frowning.\n\n\"Where will you be?\"\n\n\"Marine Parade in Lyme Regis. Highest proportion of tourists. Best chance of a mugging.\"\n\n\"Well... I could always stop by, if you'd like.\"\n\nShe perked up. \"I thought you'd want a break from me.\"\n\n\"I can grit my teeth and bear it it,\" I said with a grin, and she laughed at that. She raised her cup to her lips and blew on it. \"It's nice starting a day like this,\" she said softly. \"I like it.\"",
        "\"Mm. Yeah, it makes a lovely change for me. Most mornings I wake up, and if it's been... questionable... I will end up washing off the previous night's... lapses, and then it's workouts and work and another lovely day of other people's problems.\"\n\n\"Washing off lapses... what do you... oh. Oh. Eeuw,\" she added, with a full-body shudder.\n\n\"It's self-destructive, I know. And I'm not proud,\" I muttered. \"But I'll take what little is on offer to me. I don't cope well with too much time by myself, these days. I need... I need to be touched,\" I sighed.\n\nShe glanced away and shifted her weight against the counter. \"Mm. Planning on behaving like that here?\"\n\n\"No. Different environment. Here I don't hate the space I'm in. Here, I... I don't have to hide from anything. Or anyone. Here... I'm lonely but not desperate to escape.\"\n\n\"You'd need to head to Bournemouth or Exeter for anything approximating the sort of nightlife you're used to, anyway, and getting back home can be an adventure.\"\n\n\"Yeah, I'm okay with staying right here,\" I said. \"I can make my bad decisions here at home with wine and a book and little chance of morning regrets or, worse, lingering gifts. And I think that's a far healthier space to be in right now.\"\n\n\"And here you've got company,\" she added, softly. She finished her coffee. \"Right. I've got to get going.\"\n\n\"Ok. So shall I come find you later?\"\n\n\"I'd like that,\" she sighed.\n\n\"Ashleigh? What's wrong?\"\n\n\"Nothing. Just... I was just thinking that it would be nice to just pull that chair out next to you and sit down and not have to rush off, is all. It's strange, but you... you give me a safe space where I feel like... like I can drop my walls a bit. A space where I can breathe...\"\n\nI made the offer without thinking.\n\n\"If you like... I can lay in stuff for supper tonight. If you'd like to come by again? I'll cook roast or something. What do you say?\"\n\nShe smiled like sunrise. \"I'd... wow. I'd really appreciate that, Kells. Home is stifling at the moment. That's part of why I was out last night; I was waiting for everyone else to go to bed so I didn't have to talk to any of them. God, that would be marvellous.\"\n\n\"Right, it's a date then. Bring some sleeping clothes and so on as well because you'll likely end up spending the night again anyway. That's a standing offer, by the way.\"\n\n\"Are... you sure?\"\n\n\"Of course!\" I stood, and drained my coffee. \"Come, I'll walk you out.\"\n\nI hugged her once, hard, and she buried her face briefly in my hair. Then she gently freed herself and climbed into her car.\n\n\"Thanks, Kells,\" she said softly as she glanced up at me. \"You're a godsend.\" She turned her key and Smelly Car rattled into life. \"I'll see you later?\"\n\n\"Absolutely. Looking forward to it.\"\n\nI stood waving until she'd turned the corner at the bottom of the lane.\n\n.:.\n\n\"Oh my fucking God, that was a long one,\" she sighed as she leaned back into the Mini's passenger seat. She rubbed her neck and winced. \"Glad that's over with. I can't believe the nerve of that bitch Vanessa, swanning in at two. Thanks for keeping me company, Kells. You might want to open the windows; I reek.\"\n\n\"Why do you do it if you don't enjoy it?\" I said. I fastened my seatbelt and pressed the starter button.\n\n\"It's a moral obligation for me,\" she said. \"The RNLI saved my life when I was young and stupid. So this is something I've got to do to balance the books. And besides, mostly it's fine - I actually enjoy sweeping the boathouse and helping work on the boats and cleaning the gear. And I really love the other volunteers. Well,\" she added, narrowing her eyes, \"make that most of them. But the fundraising bit really sucks.\"\n\n\"Mm. That Vanessa woman seemed nice enough...\"\n\n\"She's an absolute cunt,\" Ashleigh said with venom. \"She'll be sweet and kind to your face and stab you in the back without a second thought. Stay away from her. She's trouble.\"\n\n\"Avoid the deadly noxious back-stabby bitch. Got it.\"\n\nAshleigh snorted.\n\nI backed the Mini out of the bay. We nosed out into the road and turned for home. \"I got us a roast chicken and all the accompanying goodies for dinner,\" I said.\n\n\"Oh my God, I may actually kiss your feet. That is so evil of you, and I absolutely shouldn't, but I promise to enjoy every bit of it. Please tell me there are spuds.\"\n\n\"There are potatoes, yes.\"\n\n\"I think I may love you.\"\n\nI laughed, flushing. \"Don't thank me until it's done, I haven't cooked a roast in a while so it might class as experimental. Where did you park your car?\"\n\n\"Home. Got a lift here with a friend. Do you want to drop me off so I can grab it?\"\n\n\"Of course not. Don't be silly, I'll drive you wherever you need to go tomorrow. I enjoy it. Driving, I mean. With you,\" I finished, flustered at how tongue tied such a simple sentence made me sound.\n\n\"You sure?\"\n\n\"Yes! And now I'm abducting you for the evening. No complaints now.\"\n\n\"Wouldn't even dream of it,\" she answered. I glanced at her and approved of her happy smile. \"Want to turn left up ahead?\" she suggested. \"It's a lot more scenic than the main road. Seems a shame to miss out on the chance to enjoy it with you given nothing is chasing us...\"\n\nI indicated and made the turn, and I grinned at the happy sigh she let out beside me.\n\nIt was late afternoon, and the evening promised to be clear again.\n\nShe slumped down with her head turned to the window, watching the sea as it flashed in and out of view behind hedges, trees and the distant curve of a headland.\n\nI watched the road and stole occasional glances at her, but left her to her thoughts until we got home.\n\nI let her hop out at the gate, then I reversed backwards until the car was almost kissing the stonework of the wall.\n\n\"You're cutting it fine there,\" she commented as I clambered out. \"I doubt I could fit a sheet of paper in there. You'd better hope your cottage doesn't sneeze or settle overnight.\"\n\n\"Paint's there to tell me a road is too narrow,\" I retorted with a grin. I eased past her and unlocked the door. \"You know the drill,\" I called as I made for the kitchen and turned on the oven. \"Make yourself at home. Oh, and pick us a wine will you? I made sure that there's a selection this time.\"\n\nShe dumped her bag in the bedroom and stuck her head back through the doorway. \"Hey, Kells? Mind if I take a shower?\"\n\n\"Of course not! Go ahead, anything in there is fair game. You got some clean clothes?\"\n\n\"No... I forgot. I just brought sleeping things.\"\n\n\"Well, if you're ok with wearing my stuff I can probably find you a vest at least.\"\n\n\"I'd appreciate that. Ugh, this shirt is rank. I should burn it and spare humanity the horror.\"\n\nI dug into my cupboard. \"Here,\" I said, handing her my favourite - a navy cotton vee-neck with white trim. \"It will be a bit tight, I'm afraid.\"\n\n\"It's perfect, thanks.\"\n\nShe closed the bathroom door behind her, and I heard her turn on the water. \"You've got an entire soap factory here,\" she called. \"I feel positively rural.\"\n\n\"The green one is lovely. It's juniper and something or other, will make you smell like a gin and tonic.\"\n\n\"Now that's talking my language. Oh... wow, you weren't kidding about that.\"\n\nShe turned on the water.\n\n\"It's my favourite,\" I shouted. \"Enjoy it!\"\n\n\"I plan to!\"\n\n.:.\n\nI sipped my glass of wine and stared out over my hedge at the distant horizon.\n\n\"Kelly?\"\n\n\"Here,\" I called. \"Your glass is on the table.\"\n\nShe emerged, and I turned, paused, then grinned wolfishly. \"Oh dear. Sorry, yeah, that shirt is very tight on you. You look amazing in it though, that colour was made for you.\"\n\n\"Navy shirt, navy girl, so it makes sense. It's like a second skin,\" she said, flushing. \"And... well, as you can see, I forgot to pack a clean bra, so I'm afraid the twins are going to get an airing.\"\n\n\"Gosh, you look unbelievable,\" I said. \"The men must stack up in a holding pattern for you.\"\n\nShe made a face. \"Meh. What are you doing?\"\n\n\"Watching the skyline, ignoring the weeds, drinking. I've banged supper in the oven, it will be ready in an hour and a bit I guess.\"\n\n\"That is perfect. I feel like I could eat a horse.\"\n\nShe came and stood next to me, and I shivered as she lightly brushed my back with her fingertips. \"Thanks for this, Kells,\" she said. \"I don't think you understand what a relief it is to be here tonight with you.\"\n\nI turned, glanced up at her. \"What's going on, Ashleigh?\"\n\n\"You may as well call me Ash, you know. Everyone else does.\"\n\n\"Do you want me to?\"\n\n\"It will do for now,\" she sighed. She put her wineglass down on the rim of a garden pot and stretched her arms up and behind her. I tried not to stare; I looked away quickly and sipped my wine to compose myself. For a moment I'd caught myself wondering what she...\n\nI shuddered, and slammed the door hard on that line of thought.\n\n\"My dad disapproves of many of my... life choices,\" she softly continued. \"And given that I'm living at home at the moment that kind of makes things a bit... fraught. My dad was twenty when he and mum got married, so I get it with spades from him. 'Why haven't you settled down? Why aren't you married? We were by this age.' Blah blah blah. It's exhausting.\"\n\n\"I wish that generation would realise that things have changed,\" I said, bitterly. \"My mum used to constantly yap at me about my relationship with Peter.\"\n\n\"Peter?\"\n\n\"The adulterous prick formerly known as my husband.\"\n\n\"And... used to?\" she asked as she touched my arm.\n\n\"Yeah, Mum's long gone now. Fortunately before the whole divorce and everything that came with it, it would have broken her heart. She worshipped Peter. I think she'd have chosen him over me if the chips were down.\"\n\n\"Wow.\"\n\n\"Yeah, we had a... strained relationship. She didn't understand why I chased my career so hard. And she never stopped pushing for grandkids.\"\n\n\"But... you said...\"\n\n\"Logic doesn't come into it, I'm afraid,\" I sighed. \"She had this whole idea that if I simply stopped being so 'difficult' and 'selfish' then everything downstairs would magically start working again. I think it was some form of dementia. It was a mercy, really, when she went.\"\n\n\"I'm sorry,\" she said. She put her arm around me and squeezed me. \"It sounds like it's been rough.\"\n\n\"Yeah, it wasn't much fun. But hey, I lived, and I'm still standing. Hah! On that note, I'm going to segue into the fact that I bought some actual garden chairs for us this morning.\"\n\n\"Oh wow. Please tell me they recline.\"\n\n\"Not only do they recline, they have actual cushions.\"\n\n\"You are now the goddess of my own personal religion.\"\n\n\"Mm. I like that idea. Let's set them up and get comfortable; we've got a long night ahead of us.\"\n\nShe unfolded hers. \"Do we have snacks?\"\n\n\"Does a fox do his business in the woods?\" I asked her, amused that she'd even thought of doubting me.\n\n\"I mean, I presume so, but I've never stopped to ask one.\" She sat down and leaned back, and my teeshirt clung to her amazing breasts and rode up high over her firm, flat stomach.\n\n\"God, Ashleigh, you are a stunning woman,\" I said artlessly, staring down at her.\n\nShe flushed pink. \"Thanks,\" she murmured, as she tugged the shirt down.\n\n\"Sorry, it's just... I can't help but think of the carnage I'd cause daily if I looked as good as you do. And how much trouble I'd be in literally all the time.\"\n\n\"You look great too, you know,\" she said softly. Then she met my stare. \"You just refuse to admit it.\"\n\n\"You're delusional,\" I said, with an indulgent smile. \"Either that or you've been hitting the wine on the sly. I'm skinny and mousy and out of proportion and nothing to write home about. I got it from the mouth of the prick himself so it must be true.\"\n\nShe sighed and looked away. I noticed that she was clenching her jaw.\n\n\"Snacks?\" she suggested softly, after a moment.\n\n\"Coming right up, babes.\"\n\n.:.\n\n\"Shall I do the dishes for us?\"\n\n\"Don't be silly, that's Hungover Kelly's job. Your present job is to help Merry Kelly drink.\"\n\n\"You cook really nicely, you know.\"\n\n\"I think we got lucky, I doubt I could reproduce that under pressure.\"\n\n\"I bet you could. I bet you could do anything you put your mind to.\"\n\nI glanced over at her. \"You sound down. What's wrong?\"\n\n\"... mostly just tired, I think. But it's more than that. I wish I had it as together as you do.\"\n\n\"I guess I fake it well, then, because I feel like a rat in a mad scientist's experiment.\"\n\n\"I don't feel like having this argument with you again, so I'm simply going to declare myself victor.\"\n\n\"By whose authority!\" I protested.\n\n\"Mine,\" she said, with a grin. Then her smile faded. \"I'd give a lot to have this - this space that you're busy making for yourself here. And... and your strength. You're reinventing yourself without even seeming to notice it - most people lack the ability to change at all.\"\n\n\"I don't feel special. And I don't feel like I had a choice - it was sink or swim, Ash. And... this conversation is flirting dangerously with seriousness.\"\n\n\"Sorry. I guess... I warned you that being in this space - with you - made me feel like I could let my walls down.\"\n\nI sat up and crossed my legs, then spun so that I could watch her. She was staring up at the purpling sky above us, where the first few stars of evening were starting to glitter.\n\n\"Tell me what's on your mind,\" I said. \"I know we've only just met, but I feel like I have a real connection to you, and people who are close to one another should reach out when they need to. Or... or so I've heard, anyway.\"\n\n\"I've heard that too, so it must be something that happens. I've never really felt close enough to anyone to test the theory though.\"\n\n\"What? Surely... what about your partners?\"\n\n\"What about them?\"\n\n\"Surely they cared for you... supported you, listened to you? At least somewhat?\"\n\n\"I treated them as disposable items of sexual gratification because I was too scared to let them see the real me.\"\n\nShe took a large gulp of her wine. Her hand shook, and she clamped her second hand around the first.\n\n\"Oh Ash. Surely not. You? Scared?\" I said, incredulous. \"That doesn't seem like you. You're courageous, gorgeous...\"\n\n\"And underneath all that there's a thirteen year old who doesn't know what the fuck she's doing. And wishes she could just be normal,\" she whispered.\n\n\"Nobody's normal. Normal's the average of all our individual weirdnesses and insecurities. Normal's a lie we tell ourselves.\"\n\n\"Do you really think that? It seems... convenient.\"\n\n\"Sweetie, some day I'll tell you all the shit that goes round and round in my head on a day to day basis. You'll feel all wonderful and well-adjusted once I'm done.\"\n\n\"Maybe you should,\" she agreed, softly. \"It would make a nice change.\"\n\n\"Anyway,\" I continued, \"you're far too awesome to ever aspire to be normal.\"\n\n\"That's the wine talking, I suspect\".\n\nI leaned forward and glared at her. \"Oi. The wine might be greasing the gears a bit but it's not changing the fact that you offered me the most precious thing in the world - your time and your companionship. I was completely and utterly alone. Now, because of you, I'm not. Now, because you reached out to me, I have someone to be like this with. You don't get to talk yourself down, I simply won't permit it.\"\n\nShe stared at me. \"Is that your manager voice?\" she said, after a moment. \"It's... quite intimidating. Um.\"\n\n\"It... might have been,\" I admitted. \"But it pissed me off to hear you putting yourself down like that.\"\n\n\"So why do you do it then? To yourself, I mean,\" she added, staring back at me, defiant.\n\nI couldn't hold her gaze. I turned, looked up at the sky and mulled that one over for a while.\n\nShe had a point.\n\n\"Because, deep down, I think that I don't believe I deserve any of this.\" I said.\n\n\"I just really wish you'd stop is all. You're really nice. You're really kind. And so sweet and gentle. And lovely. I wish more people were... like you.\"\n\nI could feel the blush creeping up my throat and cheeks. I stretched out my legs, and amused myself by drawing circles with my foot as I mulled her words. \"You're biassed,\" I said softly.\n\n\"No,\" she said, quiet and final. She clenched her jaw again, and something warned me to drop it.\n\n\"There's more that's bugging you. Spill it.\" I said, after I'd watched her for a while.\n\n\"Mm.\"\n\n\"Go on. You'll feel better,\" I cajoled her.\n\n\"I'm... still livid at Vanessa. She said she'd be there. That selfish witch. I can't believe she did that to me. To... us.\"\n\n\"I didn't mind. Look at it this way, I got to spend a morning in the sun chatting with you.\"\n\n\"We could have spent that time on the beach, or walking, or doing something meaningful with what little time you get to have here...\"\n\n\"You were doing something meaningful. I was just your entourage,\" I said, grinning. \"Your chorus line.\"\n\n\"You're a great chorus line,\" she whispered.\n\n\"What was that?\"\n\n\"Nothing,\" she said quickly. \"Is there more wine?\"\n\n\"Not open. Shall I open it?\"\n\n\"Maybe. Or maybe we should just get blankets and not get too silly. That's probably wiser...\" She yawned. \"Wow. Excuse me. That came out of nowhere.\"\n\n\"It's Sunday tomorrow. Got anywhere to be?\" I asked.\n\n\"No.\"\n\n\"Neither do I until I leave. We don't need to be wise.\"\n\nShe sighed. \"I wish you weren't. Leaving, I mean. I've enjoyed these two weekends. I've... they... they've made everything far nicer. I've had something to look forward to since... since I met you...\"\n\n\"Yeah. They have been so much better,\" I agreed. \"Chance, luck or fate. I hope it was fate that we met.\"\n\nShe looked away.\n\n.:.\n\n\"I'm going to shower,\" I called to her. \"You ok brewing the coffee?\"\n\n\"Yeah, I'll try not to set myself on fire.\"\n\n\"Please don't, the hedge submitted a written complaint to the forestry commission last time I fed it cinders.\"\n\nI heard her laughing, but her reply was drowned by the hiss of the water. I stripped, groaning as I stretched the kinks out of my back, and stepped carefully into the small enamel bathtub that doubled as my shower. I washed myself free from the grime and sweat of the day (such as it was) and rinsed my hair. I draped my robe loosely around myself, returned to the bedroom and quickly dried my hair with my GHD.\n\nThen I shrugged out of my bathrobe and started to pull on my fleece pyjamas.\n\n\"You really should warn me before you wiggle your bum at me,\" Ash called from the kitchen.\n\n\"Shit, sorry, it's a really bad habit from living alone. I'll try not to do it any more.\"\n\n\"No, it's... it's fine, I was just teasing you. You've... um... you've got really nice... arms.\"\n\n\"Push ups,\" I answered as I buttoned up my top. \"My weekday routine of self abuse.\"\n\n\"It shows,\" she said. \"Your body is wonderfully toned.\"\n\n\"Thanks. Aren't you cold?\" I asked her as I rejoined her. \"You've got goosebumps. And...\" I cleared my throat.\n\n\"What? Oh. Hah. Yes. I am cold. A bit.\"\n\n\"Didn't you pack a long top?\"\n\n\"No,\" she said. \"I was really haphazard this morning, for some strange reason.\"\n\n\"Hang on.\"\n\nI found a generously cut fleece top and handed it to her. She pulled it on, then lifted her hair free of the collar and zipped it up. \"Thank you,\" she said. \"You're so organised.\"\n\n\"I don't have a choice. Nobody else will do it for me,\" I sighed.\n\n\"I would...\" she whispered.\n\nI smiled at her. \"That would be extremely useful if we were room mates, but it's not helpful when I'm in London and you're in the most distant part of the realm.\"\n\n\"It's not that far,\" she protested. \"My geography's not that rubbish, I'll have you know. It's not that far to you.\"\n\n\"I know,\" I said, \"and I appreciate the thought,\" I added as I smiled up at her. I gently touched her arm and was distracted for a moment by the strange shivery noise she made at my touch.\n\nShe really was a beautiful woman...\n\n\"Kells? Here's yours,\" she said, touching a cup. She yawned, caught herself, and covered her mouth. \"Ugh. Sorry. The day is catching up on me. Too much fresh air.\"",
        "I slipped into the gap next to her and reached for the milk. I was just about to pick it up when she leaned in and touched her face to my temple. I froze, taken aback by the strange jolt that ran up my spine as she exhaled over my cheek... my shoulder... the nape of my neck...\n\n\"Gosh, you smell so nice,\" she whispered. Then she jerked, almost spilling scalding coffee on her hand. \"Shit,\" she said. \"Sorry. I'm so tired that my brain is freewheeling and the mouth and body are on autopilot. Sorry. That was dumb. And creepy. Sorry.\"\n\nI pushed my cup aside and stared up at her. I reached out, cupped her cheek, turned her face gently to me. I stared up at her, noting the signs of exhaustion and kicking myself for not seeing them sooner.\n\n\"You look tired and sound... wrecked. Ash... be honest with me now. How much have you been sleeping recently?\"\n\n\"Not much. Two or three hours a night.\"\n\n\"Since...\"\n\n\"A month. Maybe two.\"\n\n\"Jesus! You must be running on fumes! I think you should skip that coffee. Have a glass of water instead and we'll get you into bed, yeah?\"\n\n\"Ok.\"\n\nShe yawned again. \"You make me feel so safe,\" she mumbled. \"It's so nice. Like I can finally relax. So now I'm falling apart because I feel like I can just float away when I'm here with you. Your hand is so warm,\" she added, reaching for it and taking it in her own cool fingers.\n\n\"You're totally safe here. I promise,\" I managed. I got a grip on myself. I took her arm and steered her into the bedroom. I pulled the covers back and helped her slide in. \"Can you help me take the fleece off?\" she muttered. \"Will get a bit too hot otherwise.\"\n\n\"Sure, sweetie.\" I unzipped it and helped her ease one and then the other arm out. She wrapped her arms around me and hugged me tight, then let go and slumped back. \"Thanks for letting me stay again,\" she whispered. \"Your bed is so nice. Smells so nice too. Just like you.\"\n\n\"Of course, Ash. Go to sleep. I'll lock up and douse the lights.\"\n\nI tucked her in, killed the main lights, and quickly made sure all the doors and windows were closed. She'd rolled onto her side and was already out.\n\nThat had been a spectacular crash and burn, I thought. I sighed. Poor thing.\n\nFrom what she'd let slip she was struggling desperately to make a place in the world.\n\nAs was I.\n\nI slipped into bed beside her and spent a moment or two staring at her face in the faint moonlight that leaked around the curtains.\n\nI felt no aching emptiness around her; no need to scrabble for whatever passing crumbs of affection were flung my way. Around her, I was content just being... me.\n\nStrange how fond I'd grown of her in such a short space of time.\n\nI leaned in, and gently kissed her cheek. She made a noise, frowned, then relaxed again. I brushed her hair away from her eyes and mouth, rolled away and hunted for a comfortable position.\n\n\"Sleep well, Ash,\" I whispered.\n\n.:.\n\nI woke to a subtle strangeness.\n\nAsh was snuggled in behind me, and her breath was warm on my neck.\n\nBut that wasn't it.\n\nI could feel the firm swell of her breasts against my back.\n\nBut that wasn't it either...\n\nI flushed when I realised that my nipples were hard.\n\nBut that, while embarrassing, wasn't it...\n\nThen, aghast, I realised that the crotch of my pyjamas was soaked.\n\nMy vest had shifted in sleep and her warm hand cupped my bare belly; it was this strange gentle pressure of her skin on mine that had intruded on my dreams and woken me into this awkward hell.\n\nMy body had responded to touch in its usual deprived manner - complete surrender - and I took a agonisingly slow breath as I squeezed my legs against the familiar hollow ache deep in me.\n\n\"Shit.\" I whispered.\n\nI was burning up.\n\nAsh made a small noise and shifted, and I froze as her hand shifted lower, coming finally to rest on my thigh.\n\nGoosebumps spread like frost over my shoulders. Each breath she took tickled over my neck and throat like the loving ministrations of the world's most attentive torturer.\n\nI was aching, and I was ashamed of my body's shameless response to her entirely innocent need for comfort.\n\nBut my body didn't give a fig about shame. My body wanted... my body craved...\n\nAsh exhaled again, and I bit my lip as I tried not to moan.\n\nGod, I was so horny. Her fingertips were dead-centre on one of my most sensitive erogenous zones, and it was killing me.\n\nThis was so unfair. There was no way I'd be able to free myself without waking her. And I couldn't face her, not like this. She'd know something was up. She'd smell it, for Christ's sake.\n\nShe'd know.\n\nBut there was no way I'd fall asleep again. I knew myself too well. I'd lie here, watching the world lighten, unable to escape, slowly going crazy, and I'd be unable to concentrate at all until I was able to deal with... my need.\n\nI cursed myself and my stupid libido.\n\nMaybe if I was very careful...\n\nNo, Kelly. No. That's not even an option. We are not going there.\n\nAsh groaned softly and shifted against me, and I whimpered deep in my throat as I felt her press her thigh up against mine.\n\nHer body was so warm. I could imagine what it would feel like under my fingertips... under my tongue...\n\nI ground my teeth together.\n\nI could feel those marvellous breasts against me. I could feel the slight bumps of her nipples. I could practically see them in my mind's eye. Pink. Perfect. Jutting temptingly proud of...\n\nThis was ridiculous. I could not remember ever being this wet or aroused, ever.\n\nI wanted to touch her. I wanted her. And that entirely foreign, alien desire didn't bug me at all.\n\nIn fact, the realisation that I'd quite readily climb onto her and proceed to shag her silly simply made things a million times worse for me.\n\nMy stomach spasmed once.\n\n\"Fuck,\" I whimpered as I shivered.\n\nI had to do something. There was no option. I had to do it or I would scream. It would get worse and worse and...\n\nMy right hand was free.\n\nI could use it. I could reach over her hand without disturbing her. Yes. I could do that. Brilliant idea.And likely the only viable option for... release.\n\nI slid my hand slowly to myself. I reached under my waistband and found myself. I took a shuddering breath as I slid my fingertip between my labia, biting hard on my lip to try to stifle the low moan that I couldn't quite silence.\n\nMy clit was hard, engorged, and ridiculously slick under my fingers. My pussy was soaked. I shifted my middle finger to my clit so the others could slide along my bare lips as I teased myself. I moved my free leg to angle my hips and open myself a bit, and reached further, increased the length of my strokes, teasing down and into to my aching entrance with each one. I knew my body, and I knew it wouldn't take much of this, and that I would have to bite down hard not to make any noise as I came...\n\nGod it was hot. And wrong. And so hot. And so wrong. I could feel her breasts and stomach against me, pushing against me with every breath.\n\nIt was so wicked, so delightfully furtive...\n\nI was getting so close.\n\nShe felt so right against me.\n\nI tried to be quiet. I tried to control the panting, to breathe slow and deep.\n\nI was so hot, and aching, and so desperate.\n\nI wished she was awake.\n\nI wished she was touching me.\n\nI wished... I wished...\n\nI arched back against the warm wonderful yielding pressure of her body. My belly cramped, cramped again. I felt my legs shaking as the first contractions started...\n\nI let out a quiet gasp, a low moan deep in my throat.\n\nMy body shuddered.\n\n\"Kelly?\" she slurred. She shifted, lifted her head slightly. \"What...\"\n\nI convulsed, crying out, then grunting harsh and deep in my throat with each aching throbbing contraction in my belly, too shocked and mortified to respond, unable in fact to do anything until the traitorous spasms of my utterly delicious orgasm had quite burned away.\n\n.:.\n\nI sat, clutching myself, rocking back and forward on the freezing toilet where I'd stumbled to die of shame the moment my legs had been able to carry me.\n\n\"Fuck, fuck, fuck,\" I whispered. \"Oh fuck, fuck, fuck. Fuck! You stupid tart. Fuck!\"\n\nRage at my stupid senselessness burned white hot in me.\n\nShe'd leave. She was probably already packing her bag.\n\nShe'd probably already called a taxi.\n\nI'd never see her again...\n\nI swallowed a sob.\n\nA gentle knock at the bathroom door.\n\n\"Kelly? Um... are... are you ok?\"\n\n\"No,\" I gulped.\n\n\"Do you... um... do you want to talk?\"\n\nI shuddered.\n\n\"Kelly? Come on. Come out. Come out or... or I'm going to come in.\"\n\nShe paused a moment. \"Ok. That's it. I'm coming in...\"\n\nThe door creaked open. I turned away, burying my flaming face in my hands.\n\n\"Hey,\" she breathed, as she stuck her head around the door. \"Oh... no, Kells. No. Don't do that. Come on, come back to bed, it's freezing here. You'll freeze. Come on.\"\n\n\"I'm sorry, Ash, I'm so sorry. Jesus I'm so sorry. I'm so sorry. I have no idea what came over me. I'm so sorry. That was so wrong of me...\" I stammered.\n\nI felt her wrap her arms around me and I curled in on myself.\n\n\"Shush. It's fine. I don't mind, Kells. It's fine. It really is. Come on. Breathe. Just breathe. You're ok. Just breathe.\"\n\nI swallowed, coughed, swallowed again.\n\n\"I'm such an idiot,\" I coughed. \"So stupid. Jesus. I'm sorry.\"\n\n\"No. You're not an idiot. Come on. It's freezing.\"\n\nShe put her arms under mine and gently, inexorably, pulled me to my feet. She steered me back to bed, then pushed me down onto the mattress. I curled up tightly as she crawled in beside me and pulled the blankets back from where I'd kicked them in my panic.\n\nI was shivering; she slid in closer to me to try to warm me up and calm me down.\n\n\"Come on,\" she said. She gently rubbed my back. \"Talk to me.\"\n\n\"I'm ashamed. Of that. I can't believe I did that.\"\n\n\"Kells, it's natural. Everyone does it.\"\n\n\"In private. Not like that.\"\n\n\"Sometimes they do.\"\n\n\"I'm not an exhibitionist. I'm not that kind of person. I can't believe I did that! To you!\"\n\n\"Shh. Calm down. Breathe. You weren't being one. You thought I was asleep. I was asleep. I think it was only the... end... that I woke up for. And it's not like I saw anything, you know. I don't know why you're so stressed about it. It really doesn't bother me. \"\n\n\"You... you don't mind?\"\n\n\"Of course I don't.\"\n\n\"I was in your arms, Ash, I was... I was...\"\n\n\"That's no crime. Not the last time I checked, anyway.\"\n\nShe found my hand and held it loosely in hers. I found the gentle touch of her fingers strangely soothing. I took a shuddering breath. And then another.\n\nWe lay in silence.\n\n\"Was I any good at least?\" she said, suddenly.\n\nI started to laugh.\n\nI pulled my pillow over my face and squealed into it, stomach burning, shaking, tension blowing away like smoke and leaving me weak and giddy with tears of laughter drawing lines down my cheeks.\n\nShe was shaking silently next to me. As I calmed and got myself under control, I rolled over to face her.\n\n\"Thank you,\" I whispered when I could. \"I needed that. Oh God.\"\n\n\"Which bit?\"\n\n\"Stop. Stop. I'm going to wee on us if you make me laugh more. Please. I surrender.\"\n\nHer teeth flashed white as she grinned at me. \"So... are you going to tell me what caused that?\"\n\n\"Oh God, no, Ash! I can't...\"\n\n\"No. I want to know, and you know that you owe me an explanation. So confess, woman. Confess!\"\n\nI took a breath, fought for calm.\n\n\"You were spooning me. And... and my shirt had shifted, and your hand was on my tummy... and then on my hip, and I could feel your... your breasts against me... and I was in this lethargic state, and warm, and safe, and it was just so... so nice to be held like that by you... and something about all of that must have triggered something. Because I woke up... drenched. And unbelievably... um... yeah. Stupidly so. Like... crawling up walls, shag whatever moves... and I knew I wouldn't be able to sleep. And I was desperate not to wake you. So I was just trying to... to deal with it as quietly as possible... and... and... oh my God, I can't believe I'm saying this, but it was so good, so good...\" I finished with a breathy little shudder.\n\n\"Mm. Sounds to me like you needed it,\" she whispered.\n\n\"Uh huh.\"\n\n\"Well, so long as you had fun.\"\n\n\"Ash... aren't... why doesn't this bother you?\"\n\n\"Should it?\"\n\n\"I feel like it should to some degree...\"\n\n\"Would you have preferred it if I was awake?\"\n\n\"What?\"\n\n\"I'm just trying to get to the core of why you're so worked up about this.\"\n\n\"I don't do things like this. I'm not that sort of girl.\"\n\nShe shifted, and I swallowed as her leg brushed against mine.\n\n\"Clearly some part of you is. And in my opinion it's nothing to be ashamed of. You weren't trying to get caught. It's not your fault I woke up. So you're going to have to just live with the guilt, because I sure won't let it keep me up at night.\" She sighed. \"That said, though, sadly now I'm awake and probably won't get back to sleep any time soon.\"\n\n\"Sorry. I really was desperately trying to be quiet,\" I whispered, flushing hot. \"I really tried.\"\n\n\"Uh huh. Clearly not very hard,\" she said, and I could hear the smile. \"It's not... well, actually, I guess it is kind of your fault. You hussy.\"\n\nI squeezed my eyes closed, then squeaked as she moved against me and wrapped her arm around me.\n\n\"Tell me if you need me to leave a gap,\" she whispered. \"It's just really nice having someone to hold for once.\"\n\nI shivered. I could feel the pressure of her body against me, and it was sublime.\n\nI made a small noise and squirmed.\n\n\"Kelly? What was that?\"\n\n\"You feel so nice,\" I whispered. \"God, I don't know what it is, but you... you smell so nice. It's so good to be held by you. It's... oh God it's so nice. But... Ash, it's... it's making me very... uncomfortable.\"\n\n\"Uncomfortable... how?\"\n\n\"You know very well how,\" I whimpered as I squirmed again. I rolled onto my back and lifted my knees, bouncing a leg to try to distract myself. \"God, what the hell is going on with me tonight, it's never this bad, it's like I'm wired up to the mains or something...\"\n\n\"Afterglow and my magnetic charm,\" she breathed, and laughed into my neck as I reached over and smacked where I thought her bum would be.\n\n\"It's not funny,\" I hissed. \"It's not funny to mock me. This is really embarrassing, Ash!\"\n\n\"I'm not mocking. I'm amused. And maybe... a bit flattered? In my view it's nothing to be upset or embarrassed about. Your body is just expressing itself. It does, however, raise other... things...\" she added softly.\n\n\"What do you mean? What things? Ash?\"\n\n\"Stuff I've been trying to... keep at arms length,\" she said. Her voice had changed; I stared at her, trying to work out what she was saying.\n\n\"Ash, you're talking in riddles. I'm strung out... and stressed and stupid... and I really don't understand what you're trying to tell me right now.\"\n\n\"You're not the only one who feels warm and safe and... everything that came with that.\"\n\nI swallowed. I thought I got the gist of what she was trying to tell me.\n\n\"Um. I can go... somewhere... if you want some privacy. Um...\"\n\n\"That's... that's not what I'm talking about, Kelly. Not the... important part of it, anyway.\"\n\n\"Um... then... then what...\" I flailed.\n\n\"Never mind,\" she whispered. I felt her sigh.\n\n\"No. Please... please tell me, Ash? Tell me what it is. You have to tell me, come on, you can't do that. That's not fair. You can't start a conversation that sounds so serious and then say never mind. Now I'm going to worry all night...\"\n\nShe lay still, eyes closed, hardly breathing.\n\n\"Ash? Please,\" I begged her. \"Please. Just tell me whatever it is. It can't be as bad as you think it is. Please.\"\n\nShe took a shuddering breath, and let it all out in a rush. \"I want to be in your arms.\"\n\nMy heart lurched. \"What?\" I managed.\n\n\"I want you to wrap me in those strong arms of yours. I want you to hold me tight, and not let go. I want to feel you against me. I want... I want...\"\n\nShe opened her eyes and stared at me. \"I want to be wanted. By you,\" she finished, voice crackling with something that sounded horribly like despair.\n\nShe let me go and rolled away from me.\n\nI stared at her back, at the way she clasped her arms to herself and curled her legs up against herself to try to find comfort as my shocked silence stretched out between us.\n\nShe wanted me. She wanted me.\n\nShe was kind, and strong, and beautiful.\n\nShe made me smile, and laugh.\n\nShe was someone whose friendship I'd come to cherish.\n\nShe made me happy.\n\nShe'd just made herself completely vulnerable to me.\n\nAnd my silence was killing her.\n\nIt broke my heart to see her hurting.\n\nHer happiness had somehow become central to my own happiness.\n\nDid it really matter who she was?\n\nDid it really matter who I thought I was?\n\nDid anything actually matter beyond the fact that she was here?\n\nAnd that all she wanted was me?\n\nAnd that she'd been brave enough to tell me?\n\nNo.\n\nNothing mattered but that.\n\nNothing was more important than that.\n\nI threw my arm over her and pulled myself as tightly to her as I possibly could.\n\nI buried my face in her hair, and gasped a shaky breath. I kissed the nape of her neck and she made a weird little sound. She pulled slightly away.\n\n\"Kelly,\" she whispered. \"You don't need to do that... I know you're not...\"\n\n\"I don't know anything any more. You've lit fires in me that I didn't even know existed,\" I whispered into her ear. \"Don't tell me what I need to do. Don't even dare to try to tell me what I am. Roll over. Roll over to me and let me hold you to me.\"\n\nShe didn't move.\n\n\"Ash. Ash... what's wrong? Please?\"\n\n\"I don't want you to do this because I guilted you. I don't want your sympathy. I don't want you to feel obliged...\"\n\n\"You didn't. I'm not. This... I don't know what it is, but my heart is hammering and I feel young and stupid and alive. I feel alive. When I'm with you,\" I babbled. \"So. So roll over, and let me hold you. Please. I'm... I'm begging you, Ash. Let me. Please,\" I ended with a desperate whisper.\n\nShe sniffed, and I felt her shift as she rubbed at her eyes.\n\n\"Oh, Ashleigh,\" I breathed, heart breaking.\n\nShe rolled over and buried her face against me, and I clasped her to me as her walls came tumbling down.\n\n.:.\n\n\"So what now,\" I whispered, some time later.\n\nShe lay in my arms, head pillowed on my still-damp shoulder.\n\n\"Dunno. Guess that depends on you,\" she said, soft and hopeless.\n\n\"How so?\"\n\nShe sighed. \"You'll probably wake up and this will all be an embarrassment and I'll be inconvenient and you'll pretend it never happened and... well, that will be that.\"\n\n\"I really do doubt that, Ashleigh.\"\n\nShe brushed at her eyes, and then put her arm back around me. She sniffed. \"Have you ever been with... a girl? Ever? Or even thought of it?\"\n\n\"No.\"\n\n\"See?\" she sighed as she buried her face against me once more. \"This is a dream. It's not real.\"\n\n\"That's not fair, Ash. I've never met a woman like you before. Had you ever been with anyone before your first time?\"\n\nShe was silent for a moment. \"No.\"\n\n\"See? That's my point. Yes, I've fucked an awful lot of men. And yes, I will be the first to admit that it's extremely nice to have a penis sunk in me. But... clearly my view of who... or what... I am is... changing.\" I said. \"Maybe I was... open to this but just never met the right person. Maybe it's you who's changed me. All I'm sure of right now is that this little bit of time I've had with you has been some of my happiest. You... you're important to me. Your happiness matters to me. You matter. And... and I'm... attracted to you, and I really like you... and I can't think why that shouldn't be enough for... for us to build something on.\"",
        "I waited for her to look up at me again.\n\n\"I'd... I'd like a chance to at least try. I'd never forgive myself for not at least trying. I want to have something. With you.\"\n\n\"I tried so hard not to put you on the spot like this,\" she whispered, voice thick with emotion. \"I tried so hard. I wanted you from the start. I didn't want to want you. I knew it would cause issues down the road. I knew I wouldn't get to have you. I thought you just wanted a... friend...\"\n\n\"I do. Of course I do. I'm desperately lonely. Desperately. But if the price of having you as my friend is that I have to have you as my girlfriend too... I mean, if it's a buy-one-get-one-free situation we're talking about here, I guess I can make peace with that...\"\n\nShe snorted when she saw my gentle smile. \"You're terrible,\" she said, as she lay back down. \"Absolutely terrible. You're treating this like it's a game.\"\n\n\"You'll get used to it, I suspect,\" I said. \"It's my coping mechanism for things I can't yet get a grip on.\"\n\n\"Kelly?\"\n\n\"Uh huh.\"\n\n\"Do you have any idea about what you're getting yourself into?\"\n\n\"Not the foggiest. Absolutely no clue whatsoever. But...\"\n\n\"But... what?\"\n\n\"I just have this strange feeling that so long as I have you here with me... then I'll be okay.\"\n\n\"I hope so,\" she sighed tiredly. \"I'm so... tired of being alone. I don't want to lose you too. Not when I've just met you.\"\n\nI shifted downwards, deeper into our nest. \"Come on,\" I whispered. \"The birds are starting to sing, shall we see if we can sleep just a little bit longer? I'll hold you.\"\n\n.:.\n\nI woke, and fumbled out, reaching for her.\n\nShe was gone.\n\nI sat up in a panic, looking around frantically for her. \"No,\" I breathed. \"Oh no, no, no! Ash! Where...\"\n\nThen I saw her bag on the floor.\n\n\"Oh thank God.\"\n\nWeak with relief, I leaned forward onto my knees and took a breath to calm myself.\n\nI swung my legs out of bed and, shivering, bent to pull on my socks. Then I stumbled into the kitchen, and squinted out through one of the windows.\n\nShe was curled up on one of the recliners, wrapped from head to toe in blankets that she'd stolen from the cupboard.\n\nI sighed.\n\nShe must have been so stressed.\n\nThe sun was climbing over the tree line; dappled light would soon reach her face and wake her. But I'd leave her in peace for the final few moments that I could.\n\nI filled the kettle and put it on the gas, then washed two cups. I kept an eye on her as I waited for the kettle to boil. I made myself a tea and loaded hers with hot chocolate powder. Then I grabbed another blanket, snuck outside with it and my cup and sat stealthily down on the recliner beside hers. I pulled the blanket around my shoulders to hide from the morning chill.\n\nI watched as the first breath of morning breeze stirred the locks of her hair. I felt a sharp, almost painful breathless as I gazed at her.\n\nShe looked so beautiful, and so fragile, and my heart ached.\n\nShe made a faint noise of complaint as the first touch of sun kissed her.\n\nI reached out, and brushed my finger against her cheek.\n\nShe stirred, frowned, and opened her eyes. She stared at me for a moment or two, seemingly trying to work out where she was. Then she winced, and shifted.\n\n\"Kells? What is it?\" she mumbled.\n\n\"I thought you'd run away,\" I said softly. \"I woke up and you were gone and I had a horrid moment of abject panic.\"\n\n\"I needed the fresh air,\" she answered as softly. \"Sorry. I was stifling. Too stressed and scared and strung out. So I came out here once you started snoring. I got an hour or so more of sleep, I guess. It's better than nothing, anyway.\"\n\n\"Scared?\"\n\n\"Terrified, really,\" she whispered.\n\nI leaned forward and hugged her, then tucked my face into her neck for a moment. \"Don't be. I'm going nowhere.\" I pulled back, stared at her. \"I mean it.\"\n\nShe risked a small smile. \"So. Where do we go to now?\"\n\nI took a deep breath.\n\n\"I know you don't do breakfast, but I do. So how about I make you some hot chocolate and me some toast, and we have a nice slow Sunday morning. Together, just you and me. Wake up properly, get dressed, and take a slow walk down to the sea. I want to spend the morning just with you. Just the two of us. I want you to have my full and undivided attention.\"\n\n\"That would be... really special,\" she said, softly. She wiped her eyes with the back of her hand. \"I'd like that a lot.\"\n\n\"Come inside then, and keep me company.\"\n\nShe freed herself from her blankets, lifted her hand and offered it to me. I helped her to her feet; she winced as she stood, and then leaned over to stretch out her lower back. \"Remind me not to do this again,\" she groaned. \"The cold got into my bones.\"\n\n\"You were silly. Next time just stay in bed with me. That would have been far better for you. You'd probably have got good morning kisses too...\"\n\nShe gave me a shy smile but said nothing as she followed me indoors.\n\nThat wouldn't do.\n\n\"Ash?\"\n\n\"Uh huh.\"\n\nI put down my cup on the table, turned, and wrapped my arms around her. I looked up at her. \"Good morning,\" I breathed. Then, impulsively, I stood up on my toes and kissed her.\n\nShe made a noise of surprise, then closed her arms around me. I clung to her, eyes closed, cheek to her shoulder and my heart thumping in my chest.\n\n\"Wow,\" I breathed.\n\nAnd I smiled as I felt her giggling.\n\n\"Wow,\" she agreed. \"Good morning. Um. That was... really nice.\"\n\n\"Want another one? Because I sure do. For a first kiss that was right up there.\"\n\n\"Oh yes. Yes, please...\"\n\nSo I kissed her again.\n\n.:.\n\nI watched her as she bent to look at a potential find. She'd left her hair loose for our walk; when the sun broke through the patchwork clouds it flashed to gold around her.\n\nA month ago I could never have imagined this latest change of direction in my life. Sure, I'd always admired (and, let's be honest, envied) beautiful women in clubs, or bars, or at work. But I'd never felt any need to be with them in the way I felt with her. Something about her spoke to me, some part of who she was called to me. She filled an empty space in me that I had not even known or suspected was there.\n\nShe looked up at me, as if she could hear what I was thinking. The shy smile she gave left me weak and made me want to pinch myself to be sure I wasn't dreaming.\n\nMy partner. My... girlfriend.\n\nI turned the thought over in my mind, enjoying and exploring the concept from various different vantage points.\n\n\"Try that one on for size, Mum,\" I said under my breath. I laughed.\n\n\"What's funny?\" she called.\n\n\"Was just thinking that my mum must be spinning in her grave right now.\"\n\n\"That's foul, Kells,\" she said. \"Don't be so grotesque.\"\n\nI saw the small smile and stuck my tongue out at her.\n\nShe turned another pebble over. \"You've cursed me,\" she sighed. \"There's nothing here. The fishes are jealous and have taken them all away to punish me.\"\n\n\"So walk with me then,\" I said. \"There will be other days for fossil hunting.\"\n\nShe stood, and slung her backpack over her shoulder. I made my way over to her and took her arm.\n\n\"You are so slender and stylish,\" she said. \"And you choose such flattering clothes. I feel like a complete clod around you.\"\n\n\"Well, I feel like a wilting violet around you, so I guess that's only fair. I'd kill to have your figure.\"\n\n\"I love yours. Have since the moment I saw you. You're stunning, Kelly - willowy and elegant. Please stop talking yourself down, it makes me really sad. You're beautiful. I'm not just saying that either. You have this lovely, reedlike grace to you. And I love it.\"\n\nI looked up at her, and swallowed hard at the intensity of her gaze. \"I'll... I'll try. I promise.\"\n\n\"That's all I ask,\" she said softly. She leaned in and brushed my cheek with her lips. \"I wish you didn't have to go back to London this evening.\" she added.\n\n\"You and me both,\" I sighed. \"I'd far rather stay here with you. I'd rather stay here with you forever.\"\n\nWe passed a mess of tangled fishing line, half-buried in the sand.\n\n\"Wait,\" she said. \"Hang on. I've got to do something about that.\"\n\nShe paused, dug into her pack, and pulled out a plastic bag. She knelt down and pulled the line clear, following it until she found the hook and carefully closed the whole mess up. \"It could kill something or injure someone,\" she said to my silent question. \"I always pick line or bits of net up when I can. I like to leave the beach better than I found it.\"\n\n\"Girl guide.\"\n\n\"I am the sea and the sea is me,\" she said softly. \"It's one of my favourite things on this Earth, so I do what I can.\" She packed the bag carefully away and brushed her hands clean against her hips.\n\n\"Mm.\"\n\nI but my arm around her waist and held her against me. \"When I first saw you I mistook you for this hardcore water goddess. I'm glad you have a soft and benign aspect too.\"\n\nShe smiled. \"It's reserved for those who let me show it without judging me.\"\n\n\"I'd never judge you.\"\n\n\"I know.\"\n\n.:.\n\nI turned off the main road and pulled over. \"Where to?\"\n\n\"You can drop me here,\" she said. \"I need to go grab some things from the Spar anyway.\"\n\n\"Okay,\" I said. I stared at her for a moment. \"I am going to miss you so much this week. God, it's just sinking in how much I hate going back there.\"\n\n\"Me too. Please get going now - I don't want you driving in the dark. I'm going to worry myself sick about you on these roads.\"\n\n\"I'm going to head out now, Ash. I've got it all packed. But... there's something I want to give you.\"\n\nI reached down into the cupholder and pulled out my cottage keys. \"Here.\"\n\n\"Kells... what's this? Your keys? I... don't understand.\"\n\n\"Keep the keys for me. Go sleep at the cottage if you want to. Move in if you'd like. It will give you some space of your own if... if you'd like it.\"\n\n\"Wow,\" she breathed, eyes wide. \"Really?\"\n\n\"Yes. It would make me happy to know that you've got somewhere safe that you can just... be you. When you want or need it...\"\n\nShe leaned over and pulled me into a fierce, shaking hug. \"You... you have no idea what that means to me...\"\n\n\"Can't... breathe...\" I squawked, laughing. She released me, then kissed me, and I made some weird sort of involuntary noise that made her laugh as well.\n\n\"Get going,\" she said, smiling bravely. \"Call me when you're home. Please.\"\n\n\"I will. Ash?\"\n\n\"Uh huh?\"\n\n\"I'll see you on Friday night.\"\n\n\"Drive safe, Kelly. Please be careful.\"\n\nShe climbed out and grabbed her backpack from the rear seats. She blew me a kiss and then turned away. I watched her until she turned the corner.\n\nIt was a long, lonely, stressful and dull drive back to London, and I hated every mile of it.\n\n.:.\n\nI'd slept in for once, then lurked lazily under the duvet, watching the room lighten. My first order of business was a large mug of triple-strength coffee, and my second was to drop my favourite tame recruiter a Whatsapp message; a simple non-committal So, whats's up? I'm looking for a change. Something low-stress in the South West. Got anything that would amuse me?\n\nHe was on it like a starving pig in a truffle patch.\n\nI sauntered into the office a gnat's fart before nine. I sat down at my desk, retrieved my laptop, and logged in a leave request for the Friday and the following Monday, intending to surprise Ash with a long weekend.\n\nAnd then it was merely a survival game until home time.\n\nAt around four my phone pinged; I picked it up and laughed at the photo of Ashleigh's feet in fluffy pink socks set against the backdrop of the hedge in my back garden.\n\nKeeping home warm for you arrived soon after.\n\nGod, I wish I was there, I replied.\n\nDitto. I miss knowing you're close enough to touch\n\nI smiled wistfully.\n\nI miss your kisses\n\nStop it, I'm blushing\n\nI packed my bags at six, locked my laptop away, and waved goodbye to a startled and bemused Graham. I made my way though the circuitous bowels of the London Transport System and got back to the flat by eight. I stripped out of my work clothes and dug out the navy teeshirt I'd loaned to her - I brought it to my face and inhaled; I could still smell her on it. I pulled it on so she'd be closer to me and made my way to the kitchenette where I poured myself a glass of wine.\n\nI picked up my phone and dialled her.\n\n\"Hey, you,\" she murmured when she picked up. \"I was just making myself something to eat.\"\n\n\"Hey you. I was just about to have a glass of wine and I wanted to hear your voice. It's incredibly lonely here.\"\n\n\"Ditto here, but it's better now that I can hear you. How's your day been?\"\n\n\"Long but bearable,\" I grumbled. \"I'm officially over London, though, that much is for certain.\"\n\n\"Are you, now?\"\n\n\"Yeah. I'm going to look for something to do closer to... to home.\"\n\n\"That would be great. I'd like that... shit, two seconds, Kells... I just spilled water on the stove, the sodding rice boiled over as soon as I took my eyes off it. Hang on a mo.\"\n\nI heard clanging and swearing. \"Sorry,\" she said as she picked up her phone once more. \"I'll lay in some cleaning stuff. I suck at this.\"\n\n\"At what?\"\n\n\"Being domestic. I was born to be a kept woman.\"\n\nI smiled to myself. \"I'll keep you. What's the weather like out there?\"\n\n\"Clear, beautiful. It's was a stunning sunset tonight.\"\n\n\"I'd love to be watching it with you.\"\n\n\"That would have been nice. What have you made for supper?\"\n\n\"I haven't got that far,\" I said with a laugh. \"I only just got home. Still destressing after the day with a glass of wine. My first order of business was to strip, my second was to phone you.\"\n\nI heard her sigh.\n\n\"So...\"\n\n\"So...\"\n\n\"When will you be back?\" she said, softly. \"Friday?\"\n\n\"No. Thursday night.\"\n\n\"What? Really?\"\n\n\"I've taken leave. Thursday and Monday. To give us a nice long weekend together.\"\n\n\"Oh wow. Thats... you didn't need to do that, Kells. I mean... \"\n\n\"I want to spend the time with you,\" I said. \"I want to learn about you, the things you like, the things you need. I want to learn what makes you tick, what I need to do to look after you, what you need to keep you happy.\"\n\n\"You just melted me,\" she whispered, after a silence. \"You just turned me completely to mush. God, Kelly, I wish you were here. I wish you were here so I could crawl into your arms and just be...\"\n\n\"Soon. I promise.\"\n\nShe sighed. \"Well,\" she said. \"I suppose I'd better get back to this mess I'm trying to cook. God only knows what it's going to taste like once I'm done with it.\"\n\n\"There are crackers and some emergency tuna in the cupboard to the left of the back door. And mayo in the fridge. There's some hazelnut chocolate too.\"\n\n\"You really should not have told me that last bit.\"\n\n\"Consider it my naughty treat,\" I grinned. \"I'll eat it vicariously through you.\"\n\nShe laughed. \"I'll describe it in detail if I survive my supper.\"\n\nI stretched. \"Right, babes, I'm going to see what I have on this side.\"\n\n\"Ok. I miss you. Phone me before you go to sleep.\"\n\n\"I will. Bye, Ash.\"\n\n\"Chat later. Mwa.\"\n\nThe days of the week crawled by. My routine grated at me like nails on a chalkboard. I spent every free waking moment thinking about her. My work ethic died a gruesome death as I took to taking extended breaks in the office kitchen, sitting at one of the windows and staring out at the world. I could see the concern on Graham's face; the growing fear that he'd have to come and ask if I was alright.\n\nI amused myself at imagining various scenarios in which I casually mentioned my girlfriend, just to hear him squeal like a sixteen year old girl.\n\nMorning, Evening. Morning, Evening. My very own personal purgatory.\n\nThe phone calls every night did not help - they simply reenforced the unhappy reality of the distance between us.\n\n\"This is ridiculous,\" I said to her on one of our rambling night-time chats. \"I'm like a lovesick teenager. You're in my head all the time.\"\n\n\"You say that like it's a bad thing.\"\n\n\"No. It's lovely. I love it. But there's no room for anything else. This afternoon I put the milk in the cupboard and the cup of tea I was brewing in the fridge. My colleagues are going to have me committed.\"\n\n\"I like that you think about me,\" she said. \"I... I like hearing that you miss me.\"\n\n\"Why?\"\n\n\"Because it makes me feel needed.\"\n\n\"Is that something you need?\"\n\n\"It is. I need to feel like I have a place. I crave it.\"\n\n\"Trust me, you have a very special place.\"\n\n\"Mm. It's a shame you're not here.\"\n\n\"You're telling me.\"\n\n\"I've been lying here thinking of you. Of what I want to do when you get here.\"\n\n\"Really?\" I breathed. \"Tell me.\"\n\n\"No. It's far too personal for a phone call. God, I'm blushing now. Stop making me blush!\"\n\nI laughed. \"You're gorgeous when you blush. I love the spots of colour you get on your cheeks.\"\n\n\"Kelly, stop it, you're making it worse! Oh my god. Stop it!\"\n\n\"Well, all I want to do is wrap my arms around you and hear you breathing,\" I said. \"I miss the feeling of you asleep beside me. I miss waking up and your voice being the first thing I hear.\"\n\nI heard her sigh. \"If you keep on talking like this you're going to have a real problem on your hands when you get here. I will tie you to the bed and never let you out.\"\n\n\"Promise?\" I asked, and I smiled at her quiet, heartfelt \"Yes.\"\n\nI spent a fraught Wednesday night trying to decide on what I wanted to wear for her. In the end I chose convenience over couture; my only nod to raciness of any sort being the red lace bra and panties I shoved in as an afterthought.\n\nI packed my bag and left it conspicuously on the floor. It gave me a focus, an anchor - something to look forward to as I counted down the hours.\n\nThursday dawned and crawled past, and meetings and transport chaos on the underground meant I got away later than I'd planned to.\n\nTraffic was biblical leaving London, and it took some time to get past all the chaos in Heathrow and surrounds. Thankfully it cleared once I crossed the M25 and I soon found cars to match speed to, trying to keep my average speed up a shade above seventy.\n\nThe miles slid by. I finally began to relax into the drive. I pulled into the services near Winchester and bought myself something to eat and a strong coffee to keep me alert. I filled the Mini's tank, visited the rather grim ladies restrooms, and got back onto the motorway having lost only a little time.\n\nI'd only gone a few more miles though when I noticed the halo around the lights of oncoming vehicles.\n\nMist.\n\nShit.\n\nI moved swiftly over to the left hand lane, something I usually hated to do due to the potential for debris and the risk of getting cut off by trucks. But cars were screaming past to the right of me at well over eighty and I didn't fancy my chances if one of them misjudged their closing speed as the visibility deteriorated.\n\nTime passed. The world slid by. The mist grew thicker. Drivers around me turned on their fog-lights and, thankfully, began to ease off on their speed.\n\nMy GPS's projected time of arrival climbed slowly back up north of two hours as I passed Southampton and merged onto the M27 heading west.\n\nThings were getting far from ideal. I started to seriously consider whether I should find somewhere cheap to spend the night. I racked my brains, trying to think of the geography. Ringwood would be the best option. I'd phone Ash and let her know, then leave early the next morning...\n\nThe mist was getting thicker still. It was getting hard to see more than ten seconds ahead.\n\nI could feel myself clenching my jaw. I rolled my shoulders, forced myself to relax, forced myself to watch the road and try not to get distracted by the growing tendrils of fear.\n\nThe road undulated gently down into a dip, and I cursed as the visibility went from poor to terrible.\n\nAnd then, suddenly, a sea of scarlet lights ahead as everyone slammed on their brakes all at once."
    ],
    "authorname": "onehitwanda",
    "tags": [
        "romance",
        "loss",
        "dialog",
        "breavement",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/jetsam"
}