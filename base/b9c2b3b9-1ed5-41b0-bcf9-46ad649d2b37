{
    "title": "Ganymede Station Pt. 02",
    "pages": [
        "GANYMEDE STATION \n\nPART 2: DEACON\n\nCHAPTER 10.\n\nI wandered back to the old recliner and flopped down. I poured myself another drink and downed it in three quick gulps. Cheyne was gone, as I knew he would be, there was no real reason for him to stay. Things had gotten out of hand, his temper had flared and he said some stuff I didn't know how to process. What went through that kid's head sometimes, I had no idea. Even so, he had been gone for only two days and I was miserable. I couldn't deny I missed having him around. It had been nice, having someone around to talk to, spend time with, even enjoy sex with again. Checking my device confirmed that he hadn't tried to contact me and I stuffed it back in my jeans pocket. He finally figured out what a stubborn, loveless bastard I had become. I tried to warn him, he hadn't listened.\n\nMonday morning as it turned out, two days after the incident with Cheyne when he stormed out, proved to be too much of a hangover for even me to handle. I was actually forced to use a sick day, something I almost never did. So when Tuesday rolled around I forced myself out the door and dragged myself into work. I had hit the bottle early, or maybe, hadn't really slowed down from the previous night. My goal wasn't to stay drunk all the time, I just, wanted to keep myself comfortably numb. When Eilie passed, my life had crumbled down around my ears. Drinking was easier than nightmares. In spite of the walls I kept up, that damn kid had gotten close to me, much closer than I had intended. In his absence I could feel myself slipping back into bad habits. He was handsome, youthful and full of questions, the kind of person you just didn't find on Ganymede. Who could help but be a little smitten? Sure he was a little naive, and maybe too impetuous for his own good but there was a certain way about him that made him stand out in my mind. My intentions over the last few months hadn't been to get serious, I wasn't looking for a relationship, I just, didn't want to be alone anymore. \n\nReynolds looked up from the front desk as I stumbled in through the door. He wrinkled his nose up and scowled.\n\n\"Dammit Deacon, I know Chief Holden has spoken to you about showing up to work drunk before. I can smell it from here.\"\n\n\"I don't want to hear it from you.\" I glared down at the little man.\n\n\"You were doing better I thought.\" He commented with a frown.\n\nIt took me by surprise, though as I thought it over, I realized I had been drinking less while Cheyne was around. \"I'm doing fine, don't worry about it.\" I grumbled as I moved toward the small kitchen.\n\n\"You're over an hour late, again. So Cheyne's still sick? Tell him I hope he feels better soon, you live together right?\" The desk sergeant called from behind me.\n\n\"Still sick? He wasn't in yesterday?\" I asked, turning my head to regard the man.\n\n\"No, he wasn't, I assumed you would know that?\" Reynolds replied, raising an eyebrow.\n\n\"Hell if I know.\" I said, and then giving the desk sergeant a sour expression added. \"And stop trying to snoop around in my personal life. You're not a detective for a reason.\"\n\nHe scowled again but said nothing more. \n\nI wondered if the kid was skipping work on my account, I hoped that wasn't the case. I already felt badly about causing Cheyne so much trouble, I didn't want him to think he had to start missing work to avoid me. I decided I could at least send him a message later, maybe even check in on him downstairs at his apartment, see if he was adjusting back to his old place. In truth I just wanted to see him, make sure he was going to be okay. \n\nCoffee machine was empty, this really was shaping up to be a spectacular morning. I added the instant mix and started the hot water over the ground coffee-flavored powder. I leaned against the counter in the small kitchen and let out a sigh. I thought about work for the day, there had been a rash of human smuggling over the last half a year or better. I had been working with other station marshalls, swapping intelligence and trying to help narrow down any leads but so far there hadn't been much to follow. Occasionally we might find a piece of suspicious cargo or make an arrest that yielded a criminal wanting to make a deal, providing us information in exchange for a reduced punishment or maybe avoid arrest altogether. Even then the information rarely panned out, the galaxy is a big place, too many spots to run and hide. If anything else came up that needed my attention today, I would shift my focus.\n\nWithin a few minutes the coffee was ready and I anxiously poured myself a cup. I had just finished adding a little whisky and had tucked the flask back into my jacket pocket when I heard Abby behind me in the doorway.\n\n\"In my office, Deacon.\" She said with a tone I knew to mean trouble, although she controlled her true emotions well.\n\n\"Uh, sure thing.\" I said, although as I headed toward the open kitchen door, she had already left and marched down much of the hall to her office. I had a leisurely sip of my coffee as I took my time following her. If I was going to get an earful, she could damn well wait a minute.\n\nI didn't bother to knock when I reached the chief's office, instead I breezed in and pulled a chair out for myself. I set my coffee mug on the edge of the large desk nearest to me, then sat down heavily and leaned back in the uncomfortable office chair.\n\n\"Let's have it.\" I said, folding my arms over my chest and giving her an unhappy look.\n\nAbigail Holden regarded me carefully, her lips pursed. \"I want to talk to you, not as the Ganymede police chief but as your friend, Deacon. Does that sound agreeable to you?\n\nShe caught me off-guard, I had expected a lecture. \"Yeah, of course Abby.\" I answered.\n\nI watched as she visibly relaxed. \"Good, then let's speak candidly. You haven't taken a sick day in over five years, and now you come back, drunk like you used to get after Eilie.\"\n\n\"That little shit.\" I mumbled.\n\n\"Yes, Reynolds told me after you got in, I think he's worried about you, almost as much as I am.\" She commented.\n\nI bit my tongue, I was pretty sure Reynolds only wanted to stir up drama for me, not because he actually gave a damn.\n\n\"Did something happen recently?\" She asked, concern edging her question. \"Does it have anything to do with Cheyne being out today and yesterday?\"\n\nI felt like I was slowly deflating, she wasn't trying to berate me, only extend her concern out of friendship. \n\n\"I don't know, I mean, I guess so.\" I admitted sullenly.\n\n\"Talk to me, how are the two of you doing?\" She asked.\n\nI rolled my head around on my shoulders. \"Not, great. I want you to know, we were never really a couple or anything.\" I shot her a glance.\n\n\"Deacon, do you honestly think I would think less of you for being with another man?\" Abby asked.\n\nI shifted uncomfortably in the small chair. I had nearly forgotten how direct she could be in her questioning, part of what made her a great cop.\n\n\"No, I don't think that, probably. Look, we had something going for a while but I wasn't gonna let it go too far. Dammit, it's not like I meant to hurt the kid.\" I tried to explain.\n\n\"Hurt how?\" She considered me carefully.\n\n\"Christ, Abby, I didn't hit him or anything.\" I looked at her reproachfully.\n\n\"I didn't think you had.\" She assured me. \"And he's twenty-five, hardly a kid anymore.\"\n\nI lifted my cap off and gave my scalp a scratch. \"He told me had feelings for me, you know what I mean?\"\n\nShe nodded.\n\n\"Well, I didn't feel the same way, so he packed up his stuff and moved out. He was crying... Fuck, it was kind of a mess.\" I said shaking my head. \n\nAbby leaned back in her chair and took a sip from her own coffee mug. \"It was plain to me that you did care about the man.\" She said presently, looking into her cup as she swirled the dark liquid slowly.\n\n\"I care, I'm not saying I don't. We spent all that time together, went to movies, had meals together. We were intimate.\" \n\nAbby flashed me a look and I actually felt my cheeks redden. Maybe I shouldn't have added that last bit. Surprisingly, it felt good to talk to someone about Cheyne.\n\n\"And yet you don't love him?\" She asked.\n\n\"Give me a break, I'm not doing that to myself again, or anyone else. Cheyne is much better off without me, even if he doesn't know it.\" I said dismissively.\n\nAbby gave a sad sigh. \"And you, Deacon? Can you honestly tell me you're better off without him in your life?\"\n\nMy face felt hot, I couldn't be sure if it was the drink or frustration but I rose to my feet. \"Maybe, maybe not. It was never going to work anyway.\" I said defensively.\n\n\"Sounds like you've made your mind up then. Too bad Cheyne was willing to take a chance. Look where it got him, completely shut out of your life.\" Her eyes were full of pity.\n\nI slammed my hand down on her desk, I didn't want her sympathy or offhanded remarks. My coffee mug jumped and spilled across her desk. \n\n\"That's not for you to say, Abigail! I've made mistakes, lord knows I have, but I'm not dragging that kid down with me. Keep your damn nose out of my business.\" I snarled through gritted teeth.\n\nThe chief stood and began fishing some paper towels out of her desk to clean up the encroaching spill.\n\n\"I know you don't let anyone get close to you anymore, Deacon, and I've tried to be understanding.\" Abby said softly as she started mopping up the coffee and whisky. \"But she's been gone nearly seven years. You allowed that 'kid' in for a reason, maybe it's time to let yourself be happy again.\" \n\nIf I hadn't been angry there was a chance I could have seen the wisdom of her words. \"What would you know about it, huh? You've never been married, never been with anyone for very long, and I've been married twice and it's gotten fucked up twice.\" I muttered.\n\n\"Deacon,\" She began.\n\n\"We're done here.\" I finished, and stormed out of the office.\n\nThe rest of the day passed in mostly a blur. Yes I was still drinking for most of it, but I felt constantly distracted. Abby's words struck me in a startling way that I couldn't shake. Abigail had been my friend for the last decade, no, even longer than that, since I had first come to Ganymede and started my life as a marshall with my young wife by my side. We had become fast friends, neither of us cared much for bullshit and never had any issues speaking our minds. Three years later, after Eilie had died, I became isolated, shutting everyone out around me. Abby was the one exception. She should have fired me when the drinking started. I'd show up to work completely smashed, emotional at times, if I even showed up at all. Instead she took on the role of friend and started trying to help me manage my alcoholism. It wasn't an easy transition to make and I won't say that I didn't still drink in excess after work was over and on my days off, but, with her support I could at least function during the day. For the most part I've been able to keep on track.\n\nThe grief was another story altogether. They say time heals all wounds and yet, seven years later I still had trouble coping. It's shameful, but I didn't know how to move forward when everything reminded me of my past and what I had lost that day. My eye, a lung, chunks of shoulder and chest, so much more than just the physical was ripped from me during the accident. I lost my life that day when she died and everything since has just been, going through the motions in a shell of metal and skin. Ever since then I was trying to kill off the sorrow I felt everyday and drinking was the easiest, although not the fastest way. When I was at my lowest points, I considered more direct means.\n\nAnd then, my neighbor had woken me out of a drunken slumber on the floor outside my apartment one night, and something changed. He looked familiar, reminded me instantly of my lost love, though even in my stupor I knew it wasn't her. Regardless, I woke up the next day thinking about the kid, and also that he had done something nice for me without any provocation. In my book, that means something. I happened to be on my way to the precinct the next morning when I saw him leave the apartment and head downtown. He was obviously in a hurry so I tailed him to the Rose Thorn, figuring I would catch him again as he was leaving. It hadn't gone very well. I learned he was a prostitute, which didn't bother me any, but it did freak me out a little when he came on to me, grabbing on my dick through my jeans.\n\nI figured I had made a mistake, trying to get to know him, and my reasons were pretty selfish so I decided to leave him alone. Of course fate intervened again when he was attacked in his place and drew us back together. Suddenly I felt like maybe we were meant to know one another. \n\nThere was something about Cheyne though. The more time I spent with him, the more interested I became. It might have been easy to write him off as just another tragic tale so common on Ganymede, but there was much more to him than that. Instead of burying himself in the bottle, or drugs or even bad reality shows, he watched programs about the history of planets he had never seen, drew amazing pictures of animals, trees, and even me. With the crappy hand he had been dealt he somehow looked to the future with optimism. I liked spending my time with him and even more than that, he was teaching me things, like maybe the world doesn't have to be so bleak all the time. There were times I forgot my own pain, forgot to have another drink. He was good for me. \n\nWhen we started getting physical I became excited, felt like a damn kid again. I never would have initiated it of course, I didn't want to take advantage of him, even though I was painfully aware of how attractive he was. Something about scabarethen has always struck me as beautiful and Cheyne was no exception. I'll admit it was something of a surprise to find that I fantasized about him at times, often in fact. I don't remember ever entertaining those ideas about another man before. It was foolish, letting myself get pulled into a sexual relationship with him, but damned if I didn't want it to happen. To his credit he was a fantastic partner, sensual and giving, it actually made me want to try harder to make him feel good too. When we were tangled up together at night, my cock buried deep inside him and his arms gripping me so tightly, there was nothing else that mattered. I hadn't seen it coming and I didn't know if I was doing right by him. I could see the way he started looking at me, and I knew what it might mean. It had been a long time since anyone looked at me like that, like they cared about me deeply. I knew it wouldn't be fair to let it continue, and was becoming certain that it was already too late to end it without hurting him. When he received word about his apartment finally being fixed up, it seemed like the best opportunity to let him go. My heart was being torn apart seeing him cry, hearing his confession but knowing there was nothing I could say to him. It was time to go our separate ways. He would eventually come to understand, I was sure of it.\n\nI stopped by Jim's Place, the local watering hole near the apartment on my way home after work and an hour in the gym. There weren't any pretenses here, just a bunch of sad sacks getting fucked up to deal with their own personal demons. I felt right at home. \n\nThe bartender, an older fellow by the name of Grayson greeted me as I ambled up to the bar. He gave a small nod as he saw me stroll up to the bar.\n\n\"Deacon, it's been awhile. Some of the boys were saying that you must have kicked off, but I knew better.\" He gave me a wry smile.\n\n\"Not yet anyway. Whisky, neat.\" I ordered.\n\n\"You got it buddy.\" Said the man as he poured a perfect two fingers from a bottle behind the bar. \"So what was the story? You go off station for a bit? Marshall stuff?\" He asked curiously as he set my drink on the counter in front of me.\n\nI gave him a long look, trying to determine if I felt like talking or not. This was actually the most the man had ever spoken to me in all the years I had been coming here.\n\n\"Nah it wasn't work related. I met someone, just wanted to spend more time with them I suppose.\" I answered with a sad smile.\n\n\"Oh, well, good for you then, eh? This first one's on the house.\" He gave me a friendly wink and shuffled off to help another patron further down the bar.\n\nI took a drink and looked around the dimly lit pub. While I was with Cheyne I hadn't made it in more than a couple times in the beginning and I hadn't missed the place at all. At the end of each day I had just wanted to come home to the kid and find out about his day, hear him laugh, or shed our clothes and have a different kind of fun. As I stared into the bottom of my glass I shook my head at the realization, that I was seriously missing him. Could I have made a mistake letting him leave? If I wanted him back in my life, I would have to admit that I loved him but I wasn't sure if that was the truth. My heart had been broken for so long I didn't think it was capable of those feelings anymore.\n\nGrayson was back in front of me as I finished the drink with the bottle handy. He moved to pour another but I placed my hand over the glass. His eyebrow raised, but only a touch.\n\n\"I'm good.\" I said.\n\n\"No problem. Don't want to be too messed up going to see that special someone, am I right?\" He asked.\n\n\"Something like that.\" I replied as I thanked the old man for the drink, clambered off the bar stool and walked out of the musty tavern into the night lights of Ganymede.\n\nI reached the Andromeda Arms in much better shape than was usual for me at this time of night. I actually felt pretty good about things, and I wanted to see Cheyne. I stopped at the second floor and steeled myself. Maybe he wasn't ready to see me again, he might not even let me inside, but I was prepared for that. I just wanted to talk with him, to explain what I was thinking, the things I should have said two nights ago but wasn't sure how. It may not get me anywhere but I'd feel better just knowing how he was faring. Even though I couldn't echo his sentiments, I wouldn't abandon our friendship.\n\nIn front of his door I hesitated. My hands were sweating, it was making me nervous standing in the hall like this, unsure of how the kid might react. \n\n\"Get a grip!\" I said quietly to myself.\n\nI pushed the small intercom button next to the metal door frame and could hear it buzz inside the small apartment. I stepped back and waited, staring at the heavy door, willing it to open. It shouldn't be taking this long, I buzzed again. When there was still no answer I knocked loudly on the door.\n\n\"Come on Cheyne, I just want to talk, please open the door!\" I shouted. \n\nI placed my ear to the door. The metal was thick but I should have been able to hear his wallscreen if it had been turned on or maybe the shower. I heard nothing, not a single sound, not even the soft hum of the lights. If he wasn't home at this time of night, I wondered where else he could have gone. Would he have gone back to hooking up with strange men? I seriously doubted it, he had been so happy after he started working at the precinct. I decided to check again tomorrow if I didn't see him at work. I padded back down the narrow corridor and headed upstairs.\n\nWhen I got to my apartment I couldn't help but look around the place and scowl unhappily. Without the kid living here I was already letting dishes accumulate and bottles were piling up too. I didn't mean to be a slob, I just, didn't think about the conditions I was living in all that much. Cheyne did, he was a neat and tidy guy, he'd give me the business over letting the place get like this, and he'd be in the right. No, I decided I wasn't going to spend my night thinking and worrying about him. He was a grown man, Abby was right on that front, probably more mature than I was. ",
        "I needed to eat something, hadn't had anything solid since breakfast. I clattered about in the little kitchen, found a food cake and stirred it with some water into a bowl until it had the consistency of what the package called food. Maybe I should stop by the grocery store tomorrow, get some of that better quality stuff that Cheyne would bring home sometimes. It tasted better, might even be good for me. Damn I was doing it again, thinking about the kid. The memory of him lingered everywhere.\n\nI resigned myself to take some of the garbage out and clean up a little. I grabbed a bag from under the sink and started to toss bottles and other scrap inside. I bustled around the little apartment, grabbed some junk out of the bathroom and stopped by the bedroom to make sure Cheyne hadn't left any trash behind. I ducked inside, making my heart beat a little faster. I had spent so long avoiding this tiny room, giving it more power than it deserved. Recently I had spent the night with the kid in here, although I couldn't remember much aside from the next morning. It had been nice though, waking up with someone beside me again. \n\nI surveyed the room, it was basically spotless, as expected. The photos on the shelf behind the bed caught my eye and I set the garbage bag down by the doorway. It had been a long while since I had looked at them. I sat near the head of the bed and picked up the nearest picture, the one of my first wife, Grace. She was pretty, blonde, petite, and I smiled as I looked at her. We had gotten married too young, I was a little older than her and though we had been madly in love neither of us had much direction. She wanted more than I could provide, materially and emotionally and within a few years she left me for some lawyer or something. I had taken it hard but when you're young you recover and your heart can still heal. I didn't miss her anymore, didn't wish her any ill will, I hoped wherever she had ended up she was happy. \n\nI replaced her picture on the shelf and grabbed the one of my old man. He was the best father a kid could have wanted. He taught me right from wrong, to be good to people, fair, and the basics of flying a ship when I was still sitting on his lap as a boy. He had a great big moustache that completely hid his mouth except when he laughed. When I was old enough I grew one of my own. He had died before I finished my second and final term in the military when I was in my late twenties of aggressive brain cancer. The funeral had been a relatively small affair and miserable. I missed him a little every day. One of my greatest regrets is he couldn't see the man I became, although these days I wondered if he would be proud or disappointed.\n\nLastly I looked over my photo of Eilie. Grace was a pretty young girl, but Eilie had been a beautiful, refined woman. We had met midway through my training at the marshall academy on Olympia. She was lost and looking for a street address and as luck would have it I knew it well, the building right next to where I was renting an apartment on a freight pilot's salary. We got along immediately and I fell for her almost within our first conversation. She had grown up on Olympia with her family, the second generation not born on her homeworld of Scabareth. She made me laugh, she stressed me out, she was in my head at all times. Within three years I asked her to be my wife despite her parents' objections. We were married soon after and for a time, life was the best it had ever been for me and I hoped, for her as well. We couldn't have children of our own of course, but we were happy, just the two of us. I finally became a marshall and she was so proud. The only place I could find a position though was a fairly small station near the edge of a deep space shipping lane called Ganymede. I didn't need to ask her, she freely gave up some of her own dreams to follow me and help me pursue mine.\n\nI replaced her photo on the ledge between the others. I needed to keep them here, where I could see and remember, my shelf of past loves. It wasn't meant as a form of torture or anything, but it was important to remind myself of those who I had lost. Maybe it could be enough if they were never forgotten. It was all I had to offer. \n\nI was through reminiscing, and was about to haul myself to my feet when I noticed a scrap of paper tucked toward the back of the shelf. I cocked my head curiously as I leaned in and fished it out between my fingers. Had I left this in here? I unfolded the paper and became still when I saw what was there. It was one of Cheyne's art pieces, on a sheet of his drawing paper, torn out apparently along one side from his sketchbook. It was a drawing of him. It was a portrait drawing, facing the front of the page, some hair in his face and a smile on his lips. He had his chin held in his hands and maybe was sitting or lying down, he hadn't finished that part. In the corner was a scrawled note that read, \"Put me in a picture frame?\" I felt an unexpected surge of emotion and the paper began to tremble in my hands. When had he done this? It was very good, the kid had so much talent. I ran my finger gently across his paper cheek, missing the feel of his soft purple skin. I decided right then and there that it wouldn't be framed for this shelf. Cheyne wasn't an ending, not yet, more of a 'to be continued,' I thought. There were still things I wanted to say, needed him to understand. I was unwilling to lose him like I had everyone else important to me. \n\nCHAPTER 11.\n\nIn the morning I was able to get by on just one drink of whisky before I got myself out of the apartment and on my way to work. I arrived on time just to make sure I didn't hear about it from Reynolds. \n\n\"Morning Deac.\" He said as I passed by his desk without looking up from his console. \"You look better.\"\n\n\"Morning.\" I replied.\n\nMy office was on the second floor so after I grabbed my coffee I headed there. Normally I would hit the pavement, I didn't care much to be cooped up in the precinct unless I needed to be there. My small office was about as well-decorated as my place which was to say, nothing here but the essentials. A computer took up much of a fair-sized metal desk, a fan in the corner to help move the stale air and a rack behind the door for my jacket. Until recently there had been a box near the desk with files pertinent to cases I was looking into, but Cheyne had digitized all that. He had made a special point of taking care of my stuff first, even though it hadn't been the most pressing. \n\nI hung up my sidearm, hat and heavy jacket behind the door and strode over to my desk. The computer blinked to life when I pressed my thumb to the key surface. I perused old case files and started looking at some newer ones. Time got away from me I guess because it was already afternoon when my device alerted me about a message. I checked it out, it was from Abby. \"Deacon, come see me in my office when you can.\" She wrote.\n\nI put the console to sleep and headed out the door, pulling my jacket on and strapping down my weapon as I left. When I was on duty I didn't go anywhere without them. I wondered what she was contacting me about, it would be great if any new leads had developed in the body trafficking operation I had been working. I knocked once as I reached her office downstairs before opening the door. \n\n\"Deacon, have a seat.\" She said.\n\n\"What's this about, Abby?\" I asked as I pulled a chair out for myself and plopped down.\n\n\"Have you heard from Cheyne at all?\" She asked.\n\n\"Nope.\" I said, unsure if I wanted to get into another discussion about him.\n\n\"Well, here, see for yourself.\" She said. Her voice was uncharacteristically reserved. She pulled out her own personal screen which she kept affixed to her arm and made a holographic projection with it in the air between us over her desk. It appeared to be a message.\n\nIt read: \"Chief, thank you for taking a chance on me but I'm leaving Ganymede for Prometheus as of today. I am going to try to become a pilot. I learned much while I was in your employ and will miss you and the rest of the precinct. Take care, Cheynex.\"\n\nI furrowed my brows as I digested the information. \"He left.\" I said quietly to myself.\n\n\"I know things between you weren't left well but, I figured you would want to know.\" She said, giving me a solemn look as she collapsed the image back into her device.\n\nI became lost in thought. I rubbed my moustache as I considered what he had written.\n\n\"Deacon, are you alright?\" She asked when I hadn't responded.\n\n\"Huh? Oh, yeah, fine.\" I said.\n\nShe recognized the look of her friend completely preoccupied and asked, \"What is it?\"\n\n\"Well, he says he's what, on his way to Prometheus, left today?\" I asked aloud.\n\nAbby nodded.\n\n\"No transport shuttles left today or yesterday, next one isn't until tomorrow, which means he's going by other means.\" I said.\n\n\"You think he could have left yesterday?\" She asked, giving me a puzzled expression.\n\n\"Or at least was preparing to leave yesterday, I went by his apartment last night but he wasn't there. I couldn't hear anything at the door, and I was pretty insistent.\" I explained. \n\nShe leaned back, crossing her arms over her chest. \"Well, I'm glad you at least tried to see him.\"\n\nI ignored her comment. \"I'll need to get shipping manifests from the dockmaster, any ship heading to Prometheus today. He must have gotten a lift with someone, I want to know who.\" I determined as I got quickly to my feet.\n\n\"Deacon, so what? Are you planning to drag him back here? He obviously wanted to leave, just call him first.\" Abby made reasonable points.\n\n\"Something doesn't seem right, I feel it in my gut.\" I told her flatly. I dialed him on my smartscreen but it didn't even ring, just gave me his outgoing message. \"You see? He didn't answer!\" I pointed at the device for emphasis.\n\nAbby tilted her head and made a slight frown. \"You proved he turned his device off, or he's in a dead zone between satellites.\"\n\n\"No, I don't buy it. That kid always has his device on him. Never seen him turn it off. I'm just going make sure he's okay.\" I said, backing to the office door and resting my hand on the knob.\n\nShe rose to her feet and stepped around the desk. \"Deacon, I know you want to see Cheyne, I know you probably feel responsible for him leaving...\"\n\nShe was right about that, I knew I was the reason he left, but I wasn't ready to acknowledge that fact yet. \n\nAbby moved to where I stood and put her hand on my shoulder. \"This isn't a case you need to solve. It's a young man who needed to get away for a while.\" She fixed me with a look, I knew she was just trying to be understanding.\n\n\"I told you, I don't feel good about this, I'm going to call him again but if he doesn't answer or hit me back, I'm following up. You should message him too.\" I added.\n\nShe sighed. \"Deacon, you're on the clock, this can wait.\"\n\n\"Then I'm taking the rest of the day off.\" I said pointedly and hurried out of the room.\n\nI made my way to the docks at a brisk pace. Despite trying to spend time at the gym as often as I could manage, it proved to be a little too much exertion. I stopped and caught my breath before finally reaching the dockmaster's station. Near the front of the spaceport, where it meets the rest of Ganymede, are immense bay doors and a small office building. I opened the door and entered the cramped reception area beyond. I was actually quite familiar with this place as anything coming in or out of the station is recorded and logged here on these computers. \n\nA larger girl sat behind the desk wearing thick glasses. It was rare to see anyone wearing glasses anymore as laser surgery was quick and inexpensive. Perhaps she had a rare condition, or more likely, employed them as an extension for using her smartscreen.\n\n\"Kelly was it?\" I asked as I approached. I had seen her around the docks, tallying freight and verifying schedules before but hadn't seen her at the desk until just now.\n\n\"Kelsey.\" She corrected me. \"What do ya need, marshall?\" She looked over the rim of her glasses at me. She appeared bored.\n\n\"Kelsey, right, sorry.\" I acknowledged. \"I'd like to see your shipping schedules, starting this morning. Anything bound for Prometheus Station.\" I said. \n\nShe turned to a large computer monitor next to her and began swiping the screen projected in front of her. It only took her a couple minutes to find what I had asked for. \n\n\"There were three ships that left for Prometheus today.\" She said, her voice conveying her indifference.\n\n\"Galaxy, an ice freighter left at six in the morning, Comet Chaser, hauling machine parts, and the Mackenzie, an ore mining ship heading to Prometheus for repairs.\" She looked up at me. \"Anything else?\"\n\n\"I need the names of crew members and any passengers.\" I informed her, leaning over the counter to get a better view of her screen.\n\nShe gave an irritated sigh. \"Galaxy is huge, man, probably thirty to forty person crew. Give me a couple minutes, and some space please.\"\n\nI ducked back out of her window. \"Sorry.\" I mumbled.\n\nI paced the floor of the office between a couple of chairs and an old faded map of the star system where Ganymede was located. \n\n\"Okay, I got all the names you needed.\" She called from the far side of the counter after a few minutes had passed.\n\nI walked back over and asked her to clone the information and send it to my smartscreen. When I had the information in front of me I began to comb through the names. Some I recognized, guys who had gotten into trouble here, usually a bar fight or maybe forcing one of the brothel girls to do more than she wanted. \n\n\"Anything else?\" She asked again.\n\n\"Hold on a minute.\" I said as I began to draw my conclusions. \n\nThe Galaxy was indeed aptly named, it was a huge freighter, likely hauling an iceberg's worth of water ice. Cheyne could know any of the folks onboard but it was unlikely that such a large crew would want an extra passenger who could get in the way and cause other issues. The Mackenzie was heading out for repairs and only had one pilot aboard, a man I knew fairly well. More importantly it had only left twenty or so minutes ago, meaning Cheyne wouldn't have sent his message yet. This left the Comet Chaser, a smaller freighter piloted by a fellow named Wexel Carson. \n\nOn a hunch I poked my head over the counter to talk to Kelsey again. \"You know this Wexel guy?\"\n\n\"Carson?\" She asked.\n\n\"Yeah.\" I replied. \"Know anything about him?\"\n\nShe gave a noncommittal shrug. \"Big guy, comes through every couple months I guess. I don't know, he seems alright, always on time with his deliveries. I know he stops by the big brothel on main sometimes. Think he was there yesterday.\"\n\n\"Rose Thorn?\" I asked her, a note of concern creeping into my tone. \n\n\"Sure.\" She said.\n\n\"If there's any other information about Carson or his ship you might have, you pass it along to me, understood?\" I said seriously.\n\n\"Yup.\" She agreed.\n\n\"Thank you.\" I added hastily.\n\nI keyed Carson's information into the marshall database on my device. Unsurprisingly the guy had a record, mostly smuggling, also a potential homicide for which he was never convicted due to lack of evidence. I looked over his physical description and mugshot, the man was big, thickly-built, had a trim blonde beard. I thought he looked like a typical space trucker though I suspected Cheyne would find him attractive. The fact that he frequented the Rose Thorn cinched it for me, this was the guy with whom Cheyne was traveling, I was positive.\n\nI already knew that the woman who ran the Rose Thorn had gone after the kid once already and hadn't gotten satisfaction. Was she reckless enough to hire another man? I wished I could have put her away before but the men she hired to attack Cheyne hadn't given us anything, neither had turning their apartments upside down. I never told Cheyne, because I had come up empty, but I had spent two weeks trying to find any link back to Tetha, even going so far as to try to question her. That had proved fruitless, she was smart, calculating, given me nothing at all. In the end all I had were empty threats and telling her we were keeping an eye on her. She had only smiled.\n\nI tried calling Cheyne again without any luck. I left another message for him, knowing I wouldn't receive anything back. Even though I was following my instincts and had a lead, I felt unease in the pit of my stomach. This Carson guy must know Cheyne and knew just when to show up and offer him a ride. It was too much of a coincidence, and in my line of work, coincidences were exceptionally rare. Even so, I couldn't get a warrant to pursue because I had nothing more than my hunch and I wouldn't be able to take the cruiser without one. I would have to speak with Tetha, get something out of her. It was a long shot, but all I had to go on at the moment. I headed with purpose toward the Rose Thorn bordello.\n\nIt was early evening when I arrived at the whorehouse and stepped inside. The front room was packed with randy pilots and miners chatting up girls and a couple boys in the large front room. No one paid me any mind as I made a quick scan of the room. Tetha was by one of the bars tucked into a corner, speaking with a couple of her subordinates by the looks of them. I started to weave my way through the crowd in the low red light of the bar. The tall scabarethen woman saw me coming and watched my approach with obvious attentiveness.\n\n\"Why marshall, coming to me directly for a good time? I'm flattered of course, but not sure your salary will afford you much of my time.\" She gave a sweet smile.\n\n\"I'm here on business, I need to speak with you.\" I told her plainly.\n\n\"Well, I'm here on business too. I'm teaching a couple of my newer employees how to better perform their duties for our clients.\" She nodded at a young human girl and scabarethen boy standing next to her. Neither of them could be much older than twenty. I tipped my cap to them and they smiled shyly in return.\n\n\"Where can we talk?\" I asked.\n\nShe looked me over, narrowing her orange eyes. \"I suppose there's a vacant room nearby. Follow me please.\" She snapped her fingers for her employees and I guessed for me to follow her.\n\nShe lead the way down two intersecting hallways to a room near the back of the brothel. She unlocked the door and ushered us inside, closing and locking it behind her. It was a bedroom, draped with heavy black and red sheets over the walls and the head of the bed. There was a small, expensive-looking couch on each side of the bed against the walls. Tetha motioned for me to sit on the nearest one and she slid in next to me. I pushed myself further into the corner of the couch to give us more space.\n\n\"You two, up on the bed please.\" She ordered. The pair quickly complied, climbing up onto the bed, sitting on their knees, facing one another.\n\n\"Boy, I want you to fuck her, let me see what you can do. Girl, let me know you're enjoying what he's doing.\" \n\nThe two began to slide out of their clothes and I rose to my feet. \"We can't talk here, what is this?!\" I exclaimed, flustered.\n\nTetha made a small snort. \"My gods, who knew you were such a prude, marshall! Honestly, weren't you just dating a whore?\"\n\n\"Why would you say that?\" I questioned.\n\n\"Oh please, I have ears.\" She said with a roll of her large eyes. \"Now if you wanted to ask me something I suggest you sit and get comfortable. I'm not wasting my precious time unless you have a warrant this time?\" \n\n\"Do I need one?\" I countered.\n\nShe smiled, cocking her head to the side. \"Not at all, I'm entirely at your service.\" She patted the seat next to her.\n\nI hesitated but sat back down. The young man was on top of the girl, slowly thrusting into her. He drew his long prick all the way out and then pushed back in to his stomach. Beneath him I could hear her moaning as she pulled at her nipples and bit her lip. I turned my head to face Tetha. ",
        "\"You can watch, marshall, I'm not going to charge for this.\" She informed me, giving my thigh a pat.\n\nI cleared my throat. \"What do you know about a man named Wexel Carson?\" I asked.\n\n\"Hm, Carson, maybe he's gotten a girl here before, who can remember?\" \n\nI glowered. This line of questioning wasn't going to get me anywhere.\n\nTetha turned to the couple on the bed. \"You're boring our guest and you're boring me. Mix it up, find some better positions.\"\n\nThe boy moved to his back, holding himself up like a bridge with his feet and elbows against the bed and pushing his groin into the air. The girl struggled to pull herself atop him, grabbing his cock to guide it inside. It didn't look very comfortable but they were obviously flexible enough to handle themselves. He began bucking into her, causing her to bounce on her toes above him. She moaned her assent as her hands grasped at his muscular, flat chest.\n\n\"Better.\" Complimented the brothel owner.\n\n\"Cheyne says he's known you for a long time.\" I mentioned casually.\n\n\"Mm, since he was a boy. I knew his father.\" She admitted.\n\n\"Knew him how?\" I asked.\n\n\"He worked for me, part time.\" She answered.\n\n\"Here?\" I asked.\n\nShe laughed. \"No, he escorted certain goods for me, as the need arose.\"\n\n\"Smuggled for you?\" I asked.\n\n\"There's an ugly word, but yes.\" She replied.\n\n\"Drugs? People?\" I pressed.\n\nShe gave me a bored expression. \"Next question.\"\n\n\"How do you feel about the kid?\" I asked.\n\nShe was silent a moment and then barked at the couple frantically writhing on the large mattress.\n\n\"Alright, that's enough of that. Boy, it's your turn to play submissive. Girl, find something under the bed and make him moan for a while.\"\n\nThe girl slid off the far side of the mattress and ducked out of sight, reappearing after a minute with a long, black, rubber dick. She hopped back onto the bed and crawled over to the young guy who flipped onto his hands and knees in anticipation. She moved in front of him, slapping the heavy cock against her palm. She pushed the dildo slowly into his mouth and he began to suck automatically, slurping the synthetic dick further down. I didn't mean to but I kept watching, feeling the beginnings of an erection. \n\n\"How did you feel about Cheyne?\" I repeated, turning back to the woman.\n\n\"He was annoying. He was too sweet to be worth a damn as a prostitute, but so pretty, I know you thought so too.\" \n\nI said nothing in response.\n\n\"He wouldn't work for me, wouldn't let me help him, it was sad.\" She said with a sympathetic look on her face I knew to be false.\n\n\"He's missing.\" I said, stretching the truth a little.\n\n\"Oh no, well I hope he's found soon.\" She said soothingly. She looked to the pair on the bed. \"Now fuck him please, show him how it feels.\"\n\nThe young scabarethen flipped around, offering his rear end to the girl and lifting his tail. \n\n\"Boy, I want you to face the marshall please. Show him how you like getting fucked.\"\n\nMy heart beat faster. I opened my mouth to protest but part of me liked what was happening. The boy gasped and tensed as he suddenly felt his hole being opened up by the thick dildo. He grunted as she began to push more of it inside, clenching the blanket under him in his fists. With a few more thrusts of the rubber dick he began to become adjusted to the feeling and locked his eyes on mine. They were a bright yellowish orange, full of lust, the same color as Cheyne's were when we fooled around. The boy licked his lips and moaned softly to me. He stretched out so he could reach out a hand to rub my knee. Under his slender front I could see his prick swaying back and forth, swinging a long strand of precum as it did.\n\n\"I see, so this is what you like.\" Tetha mused.\n\nI shifted to look at her and she dropped her gaze to my lap where I was poking my jeans outward in an unmistakable way. \n\n\"You can join them if you want.\" She said.\n\n\"I'm sorry?\" I asked. There was sweat beading my forehead.\n\n\"I don't mind, they would love to have you, wouldn't you kids?\" She asked them.\n\n\"You'd feel so good inside me, mister, at least give me a taste.\" Pleaded the scabarethen guy, even as he was drilled again by the heavy cock. \"We could do anything you want.\" Added the girl with an impish smirk.\n\nI found my voice missing, my hands shaking.\n\n\"The only question then,\" Tetha said as she laid her hand on my thigh again. \"Is whether you want to fuck the boy or get fucked by him?\"\n\nThe whole situation, the way I was being manipulated and lied to, and finally her insinuations about Cheyne and myself infuriated me. She was used to getting what she wanted, and I knew she wanted Cheyne dead. I couldn't control myself. I leapt up quickly before she had time to react and grabbed her around the throat with both hands, slamming her into the wall behind the couch. The wall shook with the impact.\n\nShe clawed at my big hands and slashed her tail around. The two on the bed gasped and recoiled, moving to the far side of the mattress, putting distance between themselves and the violent marshall.\n\n\"Tell me what you know!\" I roared at her.\n\nEven as I held her by the neck she somehow still managed a snarl. \"You'll be on the next prison ship for this.\" She hissed.\n\n\"Tell me about Carson, tell me what he's going to do!\" I bellowed, moving my face closer to hers.\n\n\"Ha! Why would I know that?\" She gasped, wrenching the side of her face into a mad grin.\n\nThe girl from the far side of the bed yelled, \"Just tell him before he hurts you!\" \n\n\"Shut up, you stupid bitch!\" Tetha cried scornfully.\n\n\"Oh, I won't hurt her, little girl, not for long anyway. You might not know this about your boss but she's had this coming a long time.\" I squeezed tighter, forcing a sharp cry from the woman.\n\n\"Stop, please!\" Screamed the girl. \"I heard them talking yesterday! She told him to make the kid disappear! Please leave her alone!\"\n\n\"What else?\" I growled.\n\nShe was crying now. \"That's all I heard! Take him off the station and make him disappear! That's all! Please!\" Her body shook as she wailed. The boy stood next to her, his eyes wide with fear.\n\nI dropped Tetha to the couch where she massaged her throat, gasping for precious air. \"I'm going to have you killed.\" She managed hoarsely, her voice dripping with venom.\n\n\"Maybe.\" I said calmly. \"But I'm going to find Cheyne before you can take me down.\" \n\nShe laughed, a cold, hollow-sounding noise. \"You'll never find him, and if you do, it will be what's left.\"\n\nI clenched my teeth together as I headed to the door. \"Sorry for that kids.\" I said as I pulled open the door to leave. Behind me the girl was still crying and Tetha, in spite of her bruised vocal chords was still shrieking obscenities and death threats after me, a class act to the very last. \n\nIt had been a risky gamble to be sure. I had no doubt that I wasn't going to get anything useful from Tetha, but there was a chance that those kids had heard something they shouldn't. Even considering how I personally felt about the woman, I would never kill an unarmed civilian. I was half expecting some of Tetha's goons to attack me before I could get outside but my escape was surprisingly swift and uneventful. I didn't expect she was a person to make idle threats either.\n\nTime wasn't on my side. Carson had half a day on me, more if you considered the time it took to verify a ship was ready for travel. I thought about what I had learned from the frightened girl. Carson had been given directions to make Cheyne disappear, well, that wasn't explicit and I suspected that he wasn't the type of man to turn down a payday. This meant he likely wouldn't kill the kid, he'd want to turn a profit if he could, which should hopefully give me the time I needed to catch up to him and save my friend. At least, I prayed that it would. If anything happened to that kid... I had to keep that possibility far from my mind for now. If things went sideways on me, I would have my whole life to regret, but I had a plan. I needed to make one last stop by the precinct.\n\nCHAPTER 12.\n\nIt was clear from her expression that Abby was concerned. I had spent a few precious minutes catching her up to speed and she seemed skeptical. We were standing in the kitchen where I had found her when I had reached the precinct and dashed inside. Almost everyone had gone home except for the couple night crew arriving and the chief.\n\n\"You assaulted this woman, Tetha?\" She asked with an even tone.\n\n\"She's fine, it was only an act to get her to talk.\" I explained, again.\n\n\"Which she didn't.\" Abby corrected me.\n\n\"Well, no, this other girl did.\" I placed my hands on my waist.\n\n\"And you think she was telling the truth?\" Abby pressed.\n\n\"There's no reason she would lie about it.\" I shrugged.\n\n\"Unless it was an act that Tetha had planned for you.\" She said.\n\n\"You weren't there, Abby. She was scared, and I believe her.\" I said with a sharp exhalation.\n\n\"Fine, I know that you think she was telling the truth. But it was still a coerced statement, It's not admissible.\" She countered.\n\nI could feel my face getting angry. I did my best to keep calm, despite the frustration bubbling just beneath my exterior. \"Warrant or not, I have to go after this guy. If something happens to Cheyne, something I could have prevented...\" I gave her a serious look and shook my head. \"I don't think I could handle it, Abby.\"\n\nHer face softened. \"Deacon, I know what this potentially means. I want that young man back safely too. He's a kind man, I liked having him in the office. We all miss him around here.\" She sighed. \"You know I don't have the authority to stop you, marshall. What is it you need from me?\"\n\nI wrung my hands, truth be told I was a little anxious. \"It's been too long, and I don't know if I can still fly.\" I said, letting my head droop a little. \n\nShe studied my face and considered my position. I hadn't stepped foot on a ship since what happened seven years ago. I hated feeling this way, scared over something I couldn't control. \n\n\"Take Reynolds. He can fly, and he needs to get out of the office. He's been on Ganymede too long, just like you.\"\n\nI shook my head and pouted. \"Come on, not Reynolds, he's ridiculous. Give me Ellis, he's a better cop.\"\n\n\"Ellis hasn't spent as long in the field and his wife just had their second child, he wants to be home as much as he can. I respect that.\"\n\n\"For crying out loud. Fine, I'm heading for the spaceport. Tell Reynolds to meet me there, we're leaving as soon as we're cleared.\"\n\n\"Have you filed for a warrant with the marshalls yet?\" Abby asked, giving me a measured look.\n\n\"I'll do it on the way.\" I said quickly.\n\n\"Dammit, Deacon!\" She cursed. \"Follow protocol on this if you care about having a job when you get back at all!\" \n\n\"That's not important right now.\" I said flatly. \"Wish me luck.\" I doffed my cap as I turned to leave.\n\n\"Good luck then.\" She said with a stoic expression. \"Bring him home.\"\n\nAfter I had hustled to the docks I had to stand around twiddling my thumbs for fifteen minutes before Reynolds showed up carrying a heavy duffel bag. He was winded as he hurried over to where I was tapping my foot near the airlock to the police cruiser.\n\n\"This is urgent, hurry up!\" I shouted.\n\nReynolds huffed and shot me an annoyed glance. \"I know how you work, marshall. Did you bring extra clothes? Extra rations if we need them?\" He asked with an expectant voice.\n\n\"Well, no, there wasn't time.\" I muttered.\n\n\"There was just enough time, hopefully some of these things fit you.\" He commented as he unlocked the airlock outer door by moving to its side, allowing the retinal scanner to identify him. \n\nThe heavy doors slid open with a soft hiss of escaping air.\n\n\"You brought me clothes?\" I asked, a bit surprised.\n\n\"Yes Deacon, if we're going to be sharing a cruiser for the next couple weeks, you're going to wear fresh clothes.\" He said shortly.\n\n\"Alright, alright, thanks.\" I said as the inner airlock doors hissed open, leading the way into the sleek blue cruiser. \n\nI suddenly felt a twinge of uncertainty as I stared into the dark spaceship. The last time I had been aboard a cruiser much like this one... My legs stopped moving and I could feel my hands begin to tremble. I wasn't sure if I could do this, just another piece of my past I had tried to bury because I didn't know how to cope with it in a healthy way.\n\nReynolds had already boarded the ship but he turned when I stopped moving to regard me, standing there in the airlock chamber. He was about to say something, I could tell it would be brusque and condescending. Instead he swiped his hand over a console I couldn't see and the ship became flooded with light.\n\n\"Come on marshall, let's go get your boy back.\" He said simply.\n\nI nodded in understanding and forced myself to take another step, then another, and enter the craft. My heart still fluttered and my breathing felt quickened. I leaned against the nearest wall and focused on slowing my breath.\n\nMarshalls didn't necessarily have their own cruisers since they could commandeer the local police's as necessary. The grasp I still had on my marshall star was tenuous at best anyway. I wouldn't fly which meant I couldn't chase perps off-station which meant I might not be able to apprehend. When part of that cruiser had exploded, filling me with superheated shrapnel and gouging out my eye, it had been considered grievous injury in the line of duty. Losing my wife in the same accident meant a commendation and the heads of the marshall service to look the other way about a wounded man who could no longer take to space. Lucky me.\n\n\"Start prepping the ship to leave port.\" I instructed the younger man.\n\n\"Obviously. You check out our supplies then.\" Reynolds said irritably as he headed for the bridge. \n\nI moved down the passage to the small cargo bay to see what our supply situation looked like. The cruiser was usually kept stocked at all times for occasions such as this when we needed to leave in a hurry. There was a weapon rack, three rifles, a wide array of blasters, and smaller firearms, and boxes of ammunition locked behind another retinal scanner. There should be no cause to need this much weaponry, especially between the two of us but there was no telling how Carson would react when we caught up to him. In a storage closet nearby were boxes of rations, enough to last a full crew for several weeks. We certainly weren't going to starve. Nearby was a standing locker filled with proto-fiber vests. We had enough fuel and the ship's diagnostics, according to a console on the cargo bay wall showed everything as looking good. With Reynolds having the presence of mind to bring some changes of clothes for us, I reasoned we had everything we needed to pursue. I shut the cargo bay door behind me and moved up toward the bridge to check in with the sergeant.\n\n\"How we looking?\" I asked as I entered the bridge.\n\nReynolds didn't bother to look up but continued accessing screens and pushing buttons across the wide console that was spread out before him. \"Cruiser's ready to go, Deac. We'll be leaving Ganymede in about two minutes. How are we on supplies?\"\n\n\"We're fully stocked, weapons and rations.\" I informed him.\n\n\"I figured, nobody's taken this thing out for a month or so and even then it was just patrol stuff.\" He said.\n\nThe ship's engines roared to life shortly thereafter, causing the craft to shudder briefly.\n\n\"That didn't sound great.\" I grumbled. \"You sure you know what you're doing?\"\n\n\"Give me a break, I know how to fly it's just, been awhile. Go sit down and don't bother me.\" Reynolds griped.\n\nI muttered to myself as I padded over to one of the crew's chairs along the wall and strapped down.\n\nThe cruiser left the dock within another few minutes and began its slow reversal into space. As we moved through the energy shield and into deep space beyond, there was some nervousness settling in my stomach. That, coupled with the nausea over having to acclimate to the lack of gravity for the first time in years was not a pleasant combination. I wouldn't say I had become afraid of flying or being aboard a ship again, but suddenly the reality of what we were working toward struck me fully. The preparation was over and we were now officially in pursuit of Cheyne and his captor.\n\nReynolds began to bring the ship about, locking in Prometheus' bearing and coordinates. I turned my head to glance out the nearest window at Ganymede Station, the huge grey shell of humanity in the middle of nothing. I hadn't been away from it for so many years. Under better circumstances, I suspected I would be glad to leave it behind.\n\nThe sergeant verified that I was strapped down before engaging the cruiser's hyperdrive. It was a strain on the engines but it should allow us to overtake Carson, assuming he kept to a normal freighter pace, within a day.\n\nI unbuckled myself from the seat and floated upwards where I grabbed one of the rails in the ceiling.\n\n\"Now the part I hate.\" I grimaced as I looked through the expanse of glass that formed the front of the ship.\n\n\"Oh?\" Asked Reynolds.\n\n\"The waiting.\" I said.\n\nThe first day on the ship passed with a painstaking, almost deliberate slowness. With nothing to do with my time but twiddle my thumbs, my mind reminded me that I needed a drink, or several. I was suddenly struck by the realization that I hadn't brought any booze on board. It was a police cruiser, there wouldn't be any in stock. I pulled myself down a corridor and found Reynolds reading something on his smartscreen in the galley. He looked at me when I floated over to him.\n\n\"What is it?\" He asked.\n\n\"That uh, bag you brought, what's in it exactly?\" I tried to keep the edge of panic from my voice.\n\nHe looked me over carefully. \"Like I said, extra food, clothes, my personal blaster. Why?\"\n\n\"Shit.\" I grumbled.\n\n\"Didn't think to bring any alcohol, eh?\" He gave me a derisive scowl.\n\n\"Fuck you. It, helps me stay calm is all.\" I explained weakly.\n\n\"You going to fall apart now or what? This is supposed to be your operation.\" He said, pulling his screen back to his wrist and putting it to sleep. \n\n\"Don't act so smug, I'll be fine. Just try not to get on my nerves any more than usual.\" I snapped at him.\n\nI drank coffee, ate dinner by myself and eventually when my body started to become tired, headed for the crew quarters. The room was full of bunks for a complement of about twenty. Footlockers could be found affixed to the base of each bed. I ran into Reynolds there which was something of a surprise.\n\n\"Why aren't you in the officer's room? Better bed, privacy.\" I said, eyeing the man as he lay on his bed in undershorts and a shirt on one of the top bunks. He was loosely strapped down so he wouldn't float away in the lack of gravity and was apparently still reading.\n\n\"I'm more comfortable in here. Anyway, you're lead on this marshall, you take it.\" He replied.\n\nI thought about it and he was right, I was in charge. Reynolds was basically just on loan from Abby to assist as needed. \n\n\"I'm actually more comfortable in here too. Maybe it reminds me of bunking with my squad back in my military days.\" I said.\n\nReynolds shrugged. \"Whatever.\"\n\nIn truth, I don't do well on my own and hate being completely alone. My past always finds me, especially when I sleep and sometimes it terrifies me. Even when I had asked Cheyne to stay with me it had been mostly for my own sake.\n\nI propelled myself through the air to the bunk on the other side of the room facing his. Being a bigger guy I decided on the top bunk as well. I didn't want to suddenly wake up in a strange place during the night and smash my head into the bed above me. I tugged off my boots and socks and stuffed them into the connected locker. Then I stripped out of my jacket, button-down shirt and jeans then shut them up in the trunk. I tugged down the blankets tucked tightly against the sides of the bed when a thought occurred to me. I opened the footlocker again and rummaged through my jacket and found a piece of paper. I held it carefully in my fingers as I pulled myself against the mattress by a bed rail running its length. I unfolded the paper and wedged it carefully against the side of the bed before pulling the straps over myself. ",
        "\"What's that, Deacon?\" Reynolds asked from the other side of the room.\n\n\"Uh, what?\" I tried to play dumb.\n\n\"That paper you got out.\" He inquired.\n\n\"It's personal.\" I muttered.\n\n\"Oh, well okay. I'm just trying to make conversation.\" He said indignantly.\n\nI rolled my eyes and looked over at the guy. Mike Reynolds was small, middle-aged, completely average in nearly every way from his short brown hair to his build. He liked to annoy me, poke at me, hoping for a response. Abby tried to assure me he was an upstanding cop but he and I, for whatever reasons had never really gotten along. It was just the two of us for the next while on this ship though, I supposed I could try to be more accommodating.\n\n\"It's, a drawing, that Cheyne made for me.\" I told him.\n\n\"Huh, I didn't know Cheyne could draw.\" He said.\n\n\"Well, I think he was pretty private about it, but he really has a knack for it. I think his stuff is great.\" I told him openly.\n\n\"What kind of things does he draw?\" Reynolds asked.\n\n\"All kinds of stuff but he really likes nature, living things. I saw some trees he's done, and planets. Really amazing, all of it.\" I said. I thought of the piece he had done of me, but kept that memory to myself.\n\n\"And what's that one?\" He nodded to the paper I had tucked next to my shoulder at the edge of the bed.\n\n\"It's one he drew of himself. I, I guess I just wanted to look at it.\" I admitted sheepishly. I felt like I had been caught doing something I shouldn't.\n\nReynolds chuckled and lay down on his back. \"Aww you big softie.\" He teased.\n\n\"Fuck off.\" I muttered.\n\nHe was silent for a time, I thought he might have fallen asleep but he piped up a moment later.\n\n\"We're going to find him, Deacon.\" He sounded sure of himself.\n\nI exhaled slowly into the low light of the room. \"Ready for lights out?\" I asked him.\n\n\"Yeah it's pretty late.\" Reynolds agreed.\n\nI reached above my head and held two of my fingers to a sensor bar until the lights dimmed to full darkness.\n\n\"Night.\" I said.\n\nNight, Deac.\" He responded.\n\nMy body trembled as I lay there, strapped to the bed. It took some getting used to, sleeping in zero gee. I had trouble getting to sleep, had for many years and without booze to help me pass out I was legitimately worried. I could no longer make out the image of Cheyne in the dark but I knew he was there. It was small comfort but comfort nevertheless. \n\nI awoke with a start. I was bolt upright, snapping away some sort of restraint. There were more at my waist and legs and I cried out in alarm as I tore at them. The room was black except for small lights along the floor. I bellowed and tore the straps from my body and began floating away from where I had been tethered. I was having a nightmare about space that I was unable to wake from. Panic gripped me as I bumped into a hard surface and punched it hard, reflexively. Lights suddenly flooded my vision and I shut my eye, covering it with my hands. My knuckles stung with pain.\n\n\"Deacon! What the fuck? What is going on, man?\" Someone asked urgently.\n\nMy mind was racing, I didn't know what was happening or where I was. My stomach heaved involuntarily.\n\n\"Dammit, don't you dare puke in here!\" The voice came again.\n\nI uncovered my eye and looked around. It was a room full of bunk beds. I turned and saw Reynolds floating nearby. Why was he here? I heaved again, tasting bile at the back of my throat.\n\n\"Fuck, come on big guy, bathroom's just outside.\" He said.\n\nI felt his hand grab my arm and instinctively I reached back to clobber him. I threw a wild arm in his direction which he narrowly moved to avoid. There was a sudden inexplicable flash of recognition, I knew this place. This was the police cruiser crew quarters. I dropped my fist and saw relief wash over Reynolds' face. He tugged me urgently along behind him. I could feel my insides shaking.\n\nHe hauled me out of the bunk room and across the hall into the large restroom. He let me hang in the air where I was as he pulled some lined bags from a cabinet near the enclosed shower stalls. He unfolded it carefully and tugged it open, bringing it up to my face.\n\n\"Here, take this.\" He ordered me.\n\nI vaguely understood what he wanted as I convulsed and vomited into the plastic bag. Reynolds held it tightly over my mouth until I was finished then wiped my face carefully and sealed the bag closed. He stayed with me for probably an hour or more as my insides turned outside. He rubbed my back and gave me a nervous look.\n\nWhen my body had finally started to recover I gave him a feeble smile. \"S-sorry, I didn't mean to do all that.\" I felt embarrassed and weak. I could feel sweat beading off my forehead where it hung in the air around me.\n\n\"You scared the shit out of me, marshall.\" He said with a shake of his head. \"Has this happened to you before?\" \n\n\"Not usually this bad. I just have trouble sleeping sometimes. I uh, have nightmares.\" I hated having to admit this to anybody, let alone Reynolds. \"Anyway, it's just normal readjustment to space.\"\n\n\"It's more than that, I think.\" He said. \"Confusion, anxiety, agitation, nausea, tremors, it's not just spacesick, Deac. I think you're going through severe alcohol withdrawal.\"\n\n\"That's not really a thing.\" I said uncertainly.\n\n\"It sure as hell is.\" He snapped. \"This is the first time you've gone this long without a drink in what, months?\"\n\n\"I think years.\" I said quietly.\n\nHe gave me a disapproving look. \"There's some pills in the first aid kit that should help with the nausea at least. There might be something to help you sleep.\" He pushed away from where we were hunkered in the corner of the restroom and unlatched the kit from inside another cabinet. \n\nWithin another half an hour or so I was strapped back into my bed. I was relieved to see that I hadn't damaged the piece of paper in my thrashing. Reynolds was holding the bed rail next to me, keeping himself nearby as he provided a thermos of water and a few pills. \n\n\"Here, this will help you sleep.\" He said, more gently than I was expecting.\n\n\"Hey, why are you being so nice to me?\" I asked him.\n\nHe shook his head in disbelief. \"You're sick, Deacon. You need someone to look out for you. Simple as that.\"\n\nI turned my head away from him. \"But you don't have to. I mean, I've always been kind of a jerk to you.\" I said, frowning.\n\n\"It's been mutual.\" He let out a long sigh. \"Look, my parents were both drunks and I grew up around that, hating it. It's why I've never taken a drink in my life. Seeing you at work, drunk a lot of the time... I couldn't stand seeing it.\" He explained.\n\nI looked at him, my brow furrowed. \"I didn't know. I'm sorry about that.\" I said earnestly.\n\n\"It's, my own baggage, we all have it right? I'm sorry if I sort of dumped it on you over the years.\" He gave a heavy sigh.\n\nHe had shared something deeply personal and I felt an obligation to return the favor. \"I don't think I can get through a day sober, Mike. And I'm scared shitless when I'm alone.\" I swallowed hard. Maybe it was the delirium, or how damn exhausted I felt but it felt good to be honest with the guy.\n\nReynolds actually smiled at me. \"Deac, you're going to be okay. Get some sleep, I'm just ten feet away. I'm keeping a barf bag here for you.\"\n\nHe floated back to his bunk and strapped himself down. He dimmed the lights only halfway this time before we both fell back to sleep.\n\nWhen I woke up later that day Reynolds wasn't in his bunk, so I guessed he must be at the bridge. His duffel bag was tied by the strap to one of my bunk posts. I figured he wanted me to find something fresh to wear. I dressed in some sweatpants and a t-shirt which barely fit and picked up my device from the locker. I sent Cheyne another message, even knowing he couldn't receive them. My warrant petition to the marshall service had been approved. I may have stretched some truths to have it authorized but such was the nature of the job sometimes. Something about the greater good and all that. I could have a shower later, right now I wanted to check in on the scanners and our proximity to the Comet Chaser.\n\nReynolds was on the bridge in the pilot's chair pouring over a console and I joined him there. His face appeared frustrated.\n\n\"What's up?\" I asked him.\n\n\"Well, we should be damn close to that freighter by now. But our long range scans are showing no sign of it whatsoever.\" He explained.\n\nI nodded slowly. \"Shit. She let him know we were following him, obviously.\" I said, wishing I was wrong, wishing more that I would have seen it coming.\n\n\"Who did?\" Reynolds asked.\n\n\"The woman, owner of the Rose Thorn. She hired him and she would have messaged him that we were gonna be bringing him in.\" I grumbled.\n\n\"So? What do we do? He could be anywhere.\" Reynolds pouted, leaning back and crossing his arms.\n\n\"We keep going, not much for it. He still has a shipment to bring in to Prometheus, and whatever else he might be carrying is bound there too.\" I scratched my stubbled chin in thought. \"How much faster can we go?\"\n\nThe sergeant sighed. \"Not too much faster and it can't be for too long or else it might damage the engines.\" \n\n\"Speed up then, as fast as we can safely go. Don't blow anything but we need to try to catch him. If he reaches that station much before us we could lose everything.\" I said sternly. \n\nHe nodded his understanding and increased our velocity. I could now feel a slight shuddering throughout the cruiser. I clenched my teeth.\n\nWhat was normally an eight day journey from Ganymede to Prometheus we made in just under five. It had been rough going, mostly for me. I was sick twice more but didn't have any more bouts of confusion or aggression, well, more than usual. We had picked up the other ship on long-range scanners, finally. That had been fifteen hours again. Clearly we weren't chasing a normal freighter, they simply couldn't move with this much speed. So it had been altered, souped-up, it almost certainly meant that he was a smuggler and likely into other shady dealings. Fortunately our cruiser was no slowpoke either. At our current velocity we should be able to catch up, though likely not quite in time. From the numbers on the screen in front of Reynolds, I guessed the ship would dock somewhere between thirty minutes and an hour before we could reach Prometheus. It had occurred to me to contact the station ahead of time, have them hold the Comet Chaser in space and not allow it to dock. At that point we could board his ship in space and leave the station out of harm's way. The issue with this plan was our comms were unable to contact Prometheus. It was possible that they were faulty, but I suspected it was more likely that we were being disrupted somehow, either by the station directly or possibly expensive, illegal equipment on Carson's ship. We had no way of knowing.\n\nPrometheus station came into view within the hour. Our attempts to contact the small freighter were fruitless, just like trying to communicate with the station. It was frustrating.\n\n\"We'll be there in about ten minutes now, Deacon.\" Reynolds informed me. \"We ran the engines into the red for practically the last four days. I'm actually impressed we didn't have any issues.\" He mentioned.\n\n\"It's a good ship, and you did a good job taking care of her.\" I told him. \n\nA satisfied smirk spread over the man's face.\n\n\"You loaded up?\" I inquired.\n\n\"Expecting trouble?\" Reynolds asked with a twinge of anxiety.\n\n\"Just preparing for it is all.\" I said firmly. \"Make sure the cruiser can dock as soon as possible. They might be jamming our comms but if there is an available dock near the Comet Chaser, you pull in and we do it manually.\"\n\nHe nodded. \"Will do.\"\n\nIt could be tricky, maneuvering in a spaceport, beyond the shield. Normally docking and separation was handled while in contact with the dockmasters to avoid any collisions or scheduling conflicts over where one could land and disembark. We could get away with it simply by benefit of having a police cruiser.\n\nThere were several proto-fiber vests hanging in the armory section of the cargo bay and Reynolds and I would each need to wear one. They were the latest in firearms protection, able to stop many small blaster rounds and somewhat capable of stopping shots from energy rifles. Before we docked I would make sure to grab us a couple.\n\nI pulled out my sidearm and looked it over. It had been fired frequently since that day in the apartment all those months ago but it appeared to be in good condition. Normally I was at the firing range at the precinct a few times a week. I was a good shot, even among the cops and other marshalls. I took care of my equipment, I wasn't worried about that. I turned the heavy weapon over in my hands to check the display on the side. The chamber showed as full which gave me about thirty lethal rounds. There was a setting to fire energy pulses which incapacitated as well and those were only limited by the battery stored in the handle. I tucked it back into my leg holster and pushed myself from the floor over to the large windows. Prometheus was getting larger by the moment, a wide, elongated oval of mismatched copper-colored metal. \n\n\"Can you tell which spaceport he entered?\" I asked Reynolds over my shoulder.\n\n\"Yeah, our instruments pinpointed his location. Looks like the nearest port, almost directly ahead. Once we're through the energy shield we'll have to use our eyes though. We'll have too much interference from other ships, machinery.\" He said.\n\n\"Understood.\" I replied. I took a deep breath and even though my stomach was tying itself in a knot, I ignored my nerves to focus on the next steps. We would dock, board Carson's ship, arrest the man and find Cheyne. It was a simple enough plan though with his forty minute lead on us, I knew the execution wouldn't be nearly as smooth.\n\nI let out my breath, causing a fog over the glass near my mouth. \"I'm coming, kid. Hold on just a little longer.\"\n\nCHAPTER 13.\n\nReynolds maneuvered the cruiser deftly between slow-moving freighters and mining vessels as we both kept our eyes peeled for the Comet Chaser. \n\n\"I just know it's in this vicinity.\" He said, glancing down at his screens and frowning.\n\n\"There!\" I shouted, pointing out a side window. \"Tried to hide it behind that big transport shuttle. Looks like maybe an empty dock a little further in.\"\n\nReynolds turned on the reverse thrusters and began to turn the ship slowly in the direction I had indicated. \n\n\"Hey! Comms just came back online, Prometheus dockmaster trying to get in touch.\" Reynolds informed me as he carefully maneuvered the large cruiser toward the dock.\n\n\"Put them through to my device.\" I informed the sergeant.\n\nI pulled my smartscreen from my jacket and held it near my face. \"This is marshall Henry Deacon of Ganymede Station, requesting emergency docking.\" I barked.\n\nThere was a brief electrical buzz of static. \"This is Prometheus dockmaster Phil Jaster. Understood marshall, but you really should have contacted us before this!\" Came the older man's somewhat frazzled voice.\n\nI glanced down at my screen where I could see Phil scratching his balding head. \"Sorry about that, Phil, but our comms were being jammed. Please grant us clearance and prepare for landing, what airlock are we approaching here?\" \n\nThe dockmaster looked at something to his side that I couldn't see on my display. \"Um, the vacant one I assume? That would be dock fifty-one. Be ready in a jiffy.\" I could see the man tapping and sliding his fingers over what I guessed was the console in front of him.\n\n\"Has the freighter, Comet Chaser been unloaded yet?\" I asked, knowing full-well the answer. \n\n\"Yes, marshall, about twenty minutes ago or so, there were vehicles waiting at the dock before it had even landed. Must have been some important cargo.\"\n\n\"Fuck.\" I swore softly. I turned back to Reynolds. \"Get in touch with station police and have them go over every inch of that ship. I doubt they'll find anything but just in case.\" He nodded and reached for his own device. \n\nI spoke into my smartscreen again. \"Meet me at the dock please, Phil, I'll need surveillance of that ship's arrival as well as anything street-side.\" I ordered him.\n\n\"Okay, give me a couple minutes to meet you there.\" He said.\n\n\"You have one.\" I said. \"And Phil? That ship is not to leave this station for any reason or it's your ass.\"\n\n\"I understand, marshall.\"\n\nReynolds lined up our door with the airlock hatch and large mechanical arms drifted down from the ceiling of the spaceport like immense insect limbs to hold our cruiser in place. I was already waiting by the door when a display overhead turned green indicating to me that we had made an airtight seal and the doors could be safely opened. I opened the doors as quickly as I could and rushed into the airlock. A few moments more and I was in the connecting walkway to the rest of the station. Reynolds would catch up shortly but I couldn't afford to wait for him. As I exited through one final hatch I was in the spaceport of Prometheus. I was immediately struck by its sheer size. Ganymede only had two spaceports and this station had eight. I saw Phil hurrying over to me carrying a large screen.\n\n\"Marshall! Sorry, bit of a trek from the control building to here.\" He puffed.\n\n\"That's fine Phil, what can you show me?\"\n\nThe old dockmaster swiped his screen and displayed the arrival of the ship. He handed it over to me so I could speed up time as I saw fit. I watched for a minute and saw three unmarked vans arrive. Wexel Carson emerged a short time later from the access walkway and met with some other men. They moved offscreen. \n\n\"Where did they go?\" I inquired sharply.\n\nPhil tapped out some items on the display and we got another camera view from the far side of the street running parallel to the docks. The men appeared here, opening a much larger hatch, this one leading down and connecting to the freighter's cargo bay. The vans descended into the tunnel in single-file.\n\n\"Is there a camera in there?\" I asked.\n\n\"Uhm,\" Phil poked around on the display. \"I, can't seem to find it.\" He said unhappily. I watched sweat drip down his forehead. \n\n\"Forget it, we'll assume they loaded up. What can you tell me about these vehicles?\" I asked him urgently, tapping them on his screen. Behind me Reynolds had finally caught up and craned his neck to see the display that I held.\n\n\"I don't really know, marshall, they're not labeled or anything. They look just like any of the mag-vehicles around the station. I know his delivery said he was unloading machine parts though if that helps.\" Phil added hastily.\n\nThe display showed the vehicles leaving up the street but beyond that I had nothing to work with, I would have to get in touch with the traffic division for further camera angles and that would take time we didn't have. Every minute Cheyne was being taken further away and giving these assholes more time to cover their tracks.\n\n\"Fuck!\" I screamed at the station ceiling. \n\nPhil jumped back, clutching his screen to his chest, his eyes wide with surprise. \n\nReynolds put a hand on my shoulder. \"Deacon, we just need to think this through, find another angle.\"\n\n\"There's no goddamned time, don't you get that?\" I turned and snarled at the man. \"If we go to street cams, it takes too long! The station's too big! They're long gone and we have no idea where!\" I could feel panic set in and my legs felt rubbery. To come this close, and lose the lead, I wasn't sure if I could bear the weight of my failure. I couldn't bury anyone else I loved. I had never lost it like this on the job before, I could feel myself coming undone.\n\nReynolds regarded me carefully but focused his attention back on the screen that Phil still held. He was a good cop after all, keeping a cool head, reviewing the information. I had too much personal stake in all this and it wasn't helping anyone.",
        "\"What was that? Go back.\" I heard him say. \"Yeah, right there. Huh.\"\n\nI was snapped out of my head as it looked like he may have seen something I missed. I padded back to where the two men stood. Phil watched me uncertainly.\n\n\"What'd you find?\" I asked.\n\n\"Here, ducked into the corner of a garage on the far side of the street. I think it might be a person. It's hard to see, it's in the shadow there.\" He pointed.\n\nPhil cocked his head as he studied the dark image. \"Huh, I think that might be Ned. Homeless guy, comes around sometimes.\"\n\n\"He was here when they picked up the shipment. Might know something if we find him.\" Reynolds said with a shrug.\n\n\"I've seen Ned most of the time near the overpass, in front of the dock station. I guess there's room underneath, not sure if he lives there or what.\" Phil told us without needing to be asked.\n\nI started jogging off in the direction the dockmaster had indicated. Just behind me I heard Reynolds thank the man for his time and cooperation and then hurry to follow me.\n\nJust up the way, on the other side of the dock buildings we found the overpass ramp to the upper level of traffic. Most streets on Prometheus were two-tiered to make better use of the space. For the most part the bottom level was for large and medium-sized vehicle traffic of all kinds, while the upper level was for pedestrians, small shops and small single-manned vehicles. When we were closer I could see that there was an area to the side of the ramp with enough room for someone to crawl into. It appeared that bigger metal scraps had been used to fashion a crude lean-to over the top. I neared the entrance with Reynolds just to my side.\n\n\"Hey, uh, Ned? You in there?\" I called to the makeshift shelter.\n\nThere was the sound of shuffling and then a grizzled face appeared in the entrance.\n\n\"Who're you?\" The man asked suspiciously. He leaned further out and I could see he held a mostly empty bottle of booze. I unconsciously licked my lips. It had been five and a half days since my last drink but it wasn't far from my mind. I forced myself to remember what was important, why were here.\n\n\"Hi Ned! You're not in any trouble, but would you mind us asking you a few questions?\" Reynolds asked politely. \n\n\"Maybe, I guess so. Whaddaya want?\" The ragged man snapped.\n\n\"Did you see some vans, three of them, leave from that loading zone over there?\" I got down low to the man so I could point more exactly.\n\n\"When?\" He asked. The smell of alcohol on his breath was nearly staggering. I briefly wondered if that was how I got at times. I hoped it wasn't.\n\n\"Just about thirty minutes ago.\" I told him.\n\n\"Maybe, what do ya wanna know for?\" He asked.\n\nI gave him a serious look. \"There's at least one person's life at stake, he's been taken hostage and if you help us, we might be able to save him.\" \n\nNed looked down in contemplation, then crawled out from his shelter and stood to his full height. He pushed out his chest and gave a short nod. \"Okay, I wanna help. I seen those vehicles, I've seen them down here before. Seen some of those guys before.\" He continued nodding as he explained.\n\n\"Do you know where they might have gone?\" I asked eagerly, almost anxiously.\n\n\"Probably, two of those guys are um, doctors or something. Seen them at the hospital when I had to go there before.\" He said knowingly.\n\n\"Are you sure, Ned?\" Reynolds inquired.\n\nNed furrowed his wiry eyebrows and clucked his tongue. \"Yeah, I know it. They do more than just normal medical stuff there. My buddy Ernie told me he's seen some other guys go into that place and not come out again. He said they weren't sick or anything when they went in.\" \n\nIf Ned and his friend were to be believed, they might be running a chop shop in there, that is, a place where they would harvest organs, tissue, whatever else they could and deal it out on the black market. In an age where engineered replacements were increasingly common and relatively affordable, it could be difficult to fathom the need to abduct, murder, and sell off body parts. Still, need doesn't always determine demand, I thought grimly.\n\n\"Where's the hospital?\" I asked bluntly.\n\n\"Uh, not too far, about a couple miles maybe? It's just up the way, there's signs for it.\" Ned said.\n\n\"Thanks, Ned. You've been a big help, we appreciate it.\" Reynolds gave the man a smile.\n\nThe man gave a big smile back, missing a few of its teeth. \"I hope you save him. I hope I helped ya.\" He said gently. \n\nI figured we would have to commandeer a vehicle as we swiftly climbed the ramp leading to the lower roads. Luck finally threw us a bone as a taxi happened by right when we needed a ride. Reynolds flashed his badge and we scrambled into the back seat.\n\n\"Hospital, it's an emergency, get there fast!\" I barked at our driver as Reynolds pulled the door closed behind him.\n\nThe driver didn't say a word but sped his vehicle up onto the narrow shoulder as he headed for the hospital. I couldn't help but appreciate the fellow's enthusiasm. I would have ordered him onto the angled shoulder myself if he hadn't headed there by his own accord. By car it wasn't more than a few minutes as our driver was skilled and direct. I instructed him to pull around behind the hospital premisis as we arrived. I didn't want to alert anyone who might be waiting inside to our approach and I guessed any shady dealings that went on here wouldn't take place through the front door. \n\nWe got out of the taxi and headed toward the loading bays. Lo and behold we found three grey vans matching what we had observed on the screen as well as some others.\n\nI pulled out my firearm and held it at the ready. I motioned for Reynolds to do the same and follow my lead. \n\n\"What are you expecting in there?\" He whispered as we moved along the back wall to a door just off the loading zone. \n\nI said quietly, \"We know they probably have Cheyne, jammed our comms and may be running some kind of body harvesting operation somewhere in the building. They're going to have some sort of security, likely armed.\" I watched as Reynolds gulped, his face going a bit pale.\n\n\"You stay behind me, watch my back, no unnecessary risks. You got me?\" I said sternly.\n\nHe nodded quickly and we reached the door. I tested it tentatively, and it came slightly open in my grip. \n\nI kicked the door in and drew my weapon level across the large office inside. There was one worker on this side of the cargo bay who instinctively raised his hands and went stiff. \n\n\"Don't move!\" I roared.\n\nReynolds moved in beside me a moment later, his own weapon drawn. My eye made a quick scan of the room but there didn't appear to be much going on here, not even another hospital worker around. I approached the startled man.\n\n\"You work here right?\" I asked.\n\n\"Y-yessir.\" He said shakily.\n\n\"Where is the cargo that just arrived?\" I asked, still looking around the offices for any sign of information.\n\n\"They um, brought in some empty stasis pods, took them into the elevators. They would probably store them in the sub-basement.\" He said, still trembling. \n\nI didn't think those stasis pods were likely to actually be empty.\n\nReynolds piped up to speak to the man. \"Can we get into the basement or is it keyed entry?\"\n\nThe man looked to Reynolds and blinked as he thought. \"You, you need a keycard.\" He managed.\n\n\"Take us down.\" I informed him.\n\nThe elevator doors opened onto the sublevel basement where Reynolds and I were both tucked against the sides, leaning out with only our eyes and weapons. It looked like this was mostly storage and we headed out into the cool room. I had taken the nervous worker's keycard and gotten the code from him. He seemed genuinely oblivious so I had let him remain in the elevator, attached by a small plastic bracelet to a railing inside. We could release him later, for now I couldn't let him alert anyone on this level that we were coming.\n\nWe moved further into the basement, ducking around each corner but finding no one. At last I poked my head around a turn in a hallway to find an armed guard standing at its end. Bingo, this was what we had been searching for. \n\n\"One man, about twenty feet down the next hall, heavily armored, carrying an energy rifle.\" I said quietly to Reynolds. \"There will be more inside. I'm popping out and taking him. After I get the shot, I'm heading down the hall, fast. You cover me, steady aim from here. Use lethal rounds, stunners won't get through that armor. Try to incapacitate. Ready?\"\n\nMike Reynolds took a deep breath and blew it out again slowly, steeling himself. \"Yeah.\" He said.\n\nI clapped him gently on the shoulder. \"Just doing our jobs, hey, you got this Reynolds.\" I gave him a small smile. He nodded and I could see him relax, ever so slightly. \n\n\"Should we request backup?\" He whispered.\n\n\"Do it.\" I said as he began tapping out the message. They wouldn't arrive in time, we had to act now, it could already be too late. But if it we made it through the ordeal, we could still use their help. When he was done, I took a deep breath of my own in preparation.\n\nI held my weapon up near my eye so i could sight along the top as I stepped out from the corner of the wall from where we had been hiding into the man's view. I had the element of surprise and he didn't have time to fully raise his rifle before I had fired, punching a hole through the meat of his shoulder. He screamed out in pain and alarm as he dropped his weapon and sank to his knees. The injury would be too much for him to be a threat now, and I guessed he might go into shock depending on the blood loss. Lucky for him we were in a hospital.\n\nI moved quickly down the hallway with my weapon trained on the double doors ahead of me. I had almost reached them when they suddenly slid open and another armed man pushed through them, weapon raised. He whirled in my direction to train his rifle on me as Reynolds let off a shot that hit the man in the side. He had heavy armor there but the impact still sent him sprawling backwards into the room he had just begun to exit. I quickly followed to make sure he stayed down and in case the doors locked behind him. He hadn't actually dropped his weapon and even as he laid on the ground he was bringing it back up to take a shot at me. I took a precise shot, and from this distance it had to be if I didn't want to kill him. The bullet entered his arm just below the elbow, spattering the floor under him with a fresh coat of red. He cried out in agony but the weapon went limp in his hands. I switched my rounds to stun and shot him again in the leg where the armor appeared weakest. His eyes rolled back a moment later as he went limp on the basement floor.\n\nThere was a blast behind me and I turned to see Reynolds stepping through the doorway. \n\n\"Got him with a stun shot, just in case.\" He informed me about the mercenary outside the door.\n\nWe moved forward as one. There was medical equipment in this room, plenty of tables, gurneys, other supplies and little else. In the next room however I could hear raised voices and movement. The next set of doors had two dark windows but they were impossible to see through. I was hurrying forward when the first shot rang out through one of the heavy doors. I ducked against the closest wall instinctively but apparently it hadn't been meant for me. As I stole a glance to my left I saw Reynolds hurtling backward as he took the hit in his stomach. I dived from the wall to where he had fallen as I heard another blast come through the door. I heard it whizz past my head and bury itself in the wall.\n\n\"Reynolds, hey, you alive?\" I asked huskily as I rolled up next to him. He didn't look good, blood was already pooling under him.\n\n\"Y-yeah, for now.\" He responded weakly. \n\nI wrapped an arm over him and dragged him behind the sturdiest nearby table. \n\n\"It looks bad, doesn't it Deac?\" He asked quietly.\n\n\"You'll be fine, who cares how it looks.\" I said, acting crossly, trying to alleviate his fears.\n\nI turned my attention back to the far door which now had two large holes through one side. I guessed there was only one gunman left. Obviously those windows were tinted so anyone inside could see out without giving their position away. I needed to get inside without being blown apart in the process. It appeared that the doors opened inward, away from us so I might be able to ram them from this side, or shoot the lock, but I would need to be closer. I surveyed the room for anything I could use. \n\n\"Wait here, try not to move.\" I said to Reynolds. He gave me a shallow nod. \n\nThe room was in the shape of a large \"L\" so I quickly burst from behind the table and landed behind the wall near where we had entered. I heard another blast behind me but didn't feel any impact. I stood up and leaned on the nearest gurney. It creaked and rolled on its wheels as I tested its weight and mobility. More importantly the bottom of the thing was a fairly sturdy metal. I folded another gurney up and leaned it along the length of the first, making a sort of ramp that I could stand behind and remain mostly hidden. Was it an ideal plan? Not in the least. Believe me, if there had been any time to waste I would have loved to wait for backup, but for Cheyne's sake, Reynolds', and anyone else who might be in those stasis pods I needed to act now.\n\nI held onto the rails under the metal frame of the top hospital bed as I leaned it over my head and torso. I pulled in more tightly so my body wouldn't be easily seen from the front of the awkward construct and rolled the entire thing near the corner of the wall. I hunkered down and readied myself for a short rush of speed. With a burst of strength from my legs I pushed the mobile barricade forward in front of me, speeding it along with my entire weight. There was a short delay before I heard the first shot from the other side of the door as I sprinted forward. Judging by the size and sound of the weapon firing I guessed it to be another rifle which meant there was some delay between shots. I had just about reached the doors at full tilt when the next shot went off, sounding and feeling much closer. Part of the gurney over my head blasted backward, narrowly avoiding my face and arm, leaving a hot, gaping punch through the metal. \n\nIn the next instant I was colliding the thing into the hospital doors and despite the locking mechanism they wrenched apart, opening away from me. I risked leaning to the side so I could try to catch a glimpse of the shooter as I rammed close to sixty pounds of hospital equipment into him. He didn't appear to be armored like the other two, instead only wearing a long-sleeved shirt and pants. He jumped deftly out of the way just as the metal beds smashed into the wall to his side. I released the gurneys before they impacted and brought my weapon to bear, as the large, bald gunman on the floor was scooping his rifle back into his arms. There was only enough time for my brain to process that it was Carson, that son of a bitch. He got his legs under him in a tight crouch and sprang at me, driving me sideways against the wall. He was close to my weight and we made contact hard. I dropped my gun, but his still dangled around him by the strap so I grabbed it where it lay across his shoulder and tugged it tightly across his throat. He sputtered and punched me in the side of my gut, several times, forcing me to push off the wall, taking us both to the ground with me on top. The strap broke at the clasp and his weapon clattered away over the floor. He gnashed his teeth fiercely as he kicked at me and tried to strike me in the side of the head. I could see that he lacked close quarters combat training and took the time to secure a better position atop him and punched him in the throat. He coughed, but had flinched just before the blow, causing the impact to be diminished.\n\n\"Get the fuck off me!\" He roared from beneath me. \n\nInstead, I reared my head back and then smashed my forehead into his face, breaking his nose with the force of the blow. It looked like he was seeing stars for the moment and I bellowed, \"That was for Cheyne!\" \n\nBlood had begun to ooze from his nostrils into his facial hair and his eyes filled with hatred. He kicked again, but this time it wasn't wildly placed and I felt his knee smash into my genitals, causing me immediately to roll off him and clutch my groin. He pushed over to his hands and knees, crawling toward where his rifle had landed. I saw where he was heading and, despite the overwhelming pain radiating from my crotch, staggered to my feet and stumbled over to where my blaster lay. I grabbed it up but didn't have the time to aim. Carson rolled onto his back and raised the formidable rifle up, he was faster than me, the pain from a moment ago had temporarily unbalanced me. He aimed carefully at my chest and squeezed off a round. I felt the hit, could sense the heat of metal and kinetic energy move through me. It was as though I had run straight into a wall, suddenly stopping me in my tracks. Being shot by an energy rifle at this range was fatal, I knew well enough. Even the vest couldn't stop that kind of power. So when I continued to lift my blaster and aim it at the shocked man on the floor I was as surprised as he was. The difference being, I wasn't too stunned to fire my weapon in that split second of bewilderment. It was clean, took him right through the middle, though in truth I had been aiming for the heart.\n\nWexel Carson wheezed and fell back against the cool floor of the basement. \n\nI took a staggered step backward and reached up to my chest in wonder. There was a hole burned right through my jacket, proto-fiber vest and undershirt, but underneath the charred remnants of clothing materials was a hard metal surface. The replacement chest plate had proven to be the perfect body armor. Without it I would have died, no question. For the first time, I was thankful for that piece of myself.\n\nWith the immediate threat neutralized I took in my surroundings. There were two people, a man and a woman in the back of the room wearing white hospital garb, masks over their noses and mouths. They weren't armed and their eyes described their terror well enough. Near them were several tables, each with a plastic sheet over top and trays covered in cruel-looking cutting tools. Behind them a half dozen or more stasis pods were lined against the back wall.\n\n\"Nice shot, Deadeye. Guess yer reputation is deserved.\" It was Carson, his voice choked with blood. \"Dumb though, real dumb.\"\n\nI looked down at the dying man. \"How's that?\" I asked.\n\n\"Shoulda just let it go. That scab whore worth all this? Fuck, stupid, I can't even feel anything.\" He somehow managed a grin under his red-stained beard. I couldn't tell if he was still thinking clearly.\n\n\"I'm saving that kid.\" I said, giving him a defiant look.\n\nCarson laughed and then began to cough again. \"Too late for that.\" He said, his eyes were fierce but quivering.\n\nThe thought of coming this far just to find Cheyne's lifeless body filled me with dread. \"You lying piece of shit.\" I seethed.\n\nThe man smirked and gave a small shake of his head. \"Heh, name calling now huh? Say what you want, we all do what we have to, to survive.\"\n\n\"Maybe just surviving isn't enough for the rest of us.\" I replied, before moving past him toward the stasis containers.\n\nHe mumbled something incoherent from behind me as I stalked away. I couldn't hear what it was but it would be the last sound the bastard ever made.\n\n\"Are these all of the pods?\" I demanded of the two jumpy doctors as I stalked over to them.\n\n\"Yes, there were seven, this is all of them!\" The male doctor responded. \n\n\"Is there a young scabarethen in one of them?\" I asked, quickly stepping over to where the stasis containers were huddled in a corner of the room.\n\n\"Um, well yes, that farthest one there.\" The man replied, pointing.",
        "I pushed between two other containers and reached for the hatch release as I neared the one that held Cheyne. I knew a little about stasis pods, I had used one before, several times in marshall training and before that in my military days, but those were older models, less complicated-looking. \n\n\"How do I open this? I want him out of there!\" I yelled. \"Come here!\" I ordered the man, waving him over with my weapon.\n\nHe walked over nervously. He peered at the display on the side of the machine and audibly gasped.\n\n\"What? What's wrong?\" I demanded, my heart thumped in my chest. I tried to read the display but it was mostly numbers, symbols and jargon I couldn't immediately comprehend.\n\n\"Well, the temperature in this stasis chamber, it was preset for a human subject.\" The man fidgeted as he explained the situation.\n\n\"And what does that mean?\" I asked, though I already understood.\n\nThe man looked at me with some worry for his own safety. \"It's just too cold in there. He didn't survive.\"\n\nCHAPTER 14.\n\nA sudden chill ran over my body, making me feel numb all over. I was still of a single mind, and it was to find Cheyne. Maybe that wasn't him in there, maybe they had found him, safe and sound back on Carson's ship. I only half believed that though. My mind almost wanted to give in, this was the end of the chase and I had arrived too late. Honestly I'm not sure how I still managed to keep it together, maybe because I needed to see him, to know with certainty.\n\n\"Open it up, now!\" I barked at the man.\n\nHe looked over to his partner, a question in his eyes.\n\n\"Don't look at her! Look at the goddamned pod and open it! Now!\" I repeated.\n\nThe man in the white garb knelt down and pressed some buttons at the side of the container, causing the lid to hiss and begin to lift outward. Hibernation gases formed a cloud that spilled out the sides and onto the floor. I was careful not to inhale any. I grabbed the lid with both hands and hoisted it out of the way until I could see inside. Cheyne was there, strapped down into the narrow, padded interior. His normal deep violet skin was a frightening bluish color. His eyes were closed and he was stripped bare. His chest didn't move. I began to tremble as I beheld the young man. Part of me felt like there must still be something I could do, so I quickly unfastened the belts that held him and lifted him out in my arms. His body was so cold, so much colder than I had ever felt. I raised his head and lowered my own, listening for breath. There was none.\n\nThe two doctors still milled about, stupidly, uncertain of what they should be doing.\n\n\"Police are on their way, don't try to run.\" I told them. \"There's a man with a gunshot wound in his stomach in the next room. Go see to him.\" \n\nThey quickly filed out of the room.\n\nI sat down with Cheyne in my lap and lightly kissed his forehead. Even now, I was unwilling to surrender to the truth, must be my damnable stubborness. He was so chilled, raw, but I remembered my survival training from my military days. I quickly began stripping off my clothes, all the way down to my briefs. I covered my large insulated jacket around the kid's body and pulled him tightly against my front. I tucked his feet down between my thighs where it was warmest and brought his hands up to my mouth where I could heat them with my breath. I rubbed his back vigorously with my big arms under the jacket, wishing there was more I could do for him. Within a short time I began to feel his body warming against mine, grateful at least for that. I continued to rub his smaller frame, the friction beginning to radiate more heat into his young body. I kissed him gently between warm breaths. \n\n\"Please wake up, baby.\" I said quietly. \"Please come back.\" My voice faltered, and that part of my brain was now telling me to let him go, but my dogged determination just kept him tightly locked in my embrace.\n\nThere came a small gasp for air that I thought had come from me at first. I stopped rubbing him for just a moment and this time there was a short cough and I realized it was from Cheyne. I held him even closer as I redoubled my efforts to heat him up as much as I could. My god, the kid was still alive, and I didn't even know how it was possible. My pulse raced, he was just as determined as I knew him to be, not ready to die like this.\n\n\"Cheyne, you're safe now, it's okay.\" I told him in a strangled voice.\n\nHis breathing was ragged and weak, his large, beautiful eyes were still closed. He didn't respond to my words but I knew he would be alright, he had to be, nothing else mattered.\n\nAfter several more minutes the room came alive as four uniformed officers made their way inside with weapons raised.\n\n\"Over here!\" I called from where I lay on my back across the floor, Cheyne still on top of me covered by my jacket. \"I'm a marshall!\"\n\nThe police holstered their weapons and two of them made their way over to where I was lying.\n\nIt must have been something of a peculiar sight, me in my underwear, cradling a young naked man in my arms on the floor of a chop shop, though it didn't occur to me at the time.\n\n\"This is Cheyne, he came out of a pod, nearly dead. He needs to be warmed up, and fast! Find him a room and a doctor in the hospital upstairs and do everything you can to help him!\" I shouted frantically.\n\nOne of the officers was scabarethen himself and pulled off his heated uniform jacket and brought it over to where we lay.\n\n\"The man outside, the cop, is he...?\" I asked anxiously.\n\n\"Reynolds? There were two doctors with him.\" One of the officers began. \"The proto-fiber he was wearing took most of the damage but some pieces got through. He'll need more medical attention but they said he'll survive.\"\n\nThe news actually brought a grim smile to my face. \"That's good to hear.\" I said.\n\nThe doctors from the basement operation were arrested, the two gunmen who had been incapacitated would be treated for their injuries and arrested as well. Wexel Carson would be taken to the morgue and incinerated. None of the other victims in stasis were on death's door like Cheyne had been as they were all human. They were woken up, made comfortable and then questioned. Nearly all of them had been homeless people from Ganymede and in one case a missing person that had been unsolved for a couple weeks. Reynolds and I had gotten here in time before any organ harvesting surgeries could be performed. When all was said and done, we had performed our duty admirably, uncovered a shady operation that spanned several stations and shut it down. \n\nCheyne was given a private room upstairs and for the first two days the waiting around was killing me. I wanted to be by his side at all times but initially I was forced out by his doctors. There had been complications with the hibernation. Apparently he had been drugged first by a paralyzing agent, then put to sleep by the stasis gases in a container that was too cold for him where he had developed severe hypothermia. His breathing had become halted and even his pulse wasn't registering enough for the machine to monitor life signs. Again, if it had been set for a scabarethen, the display might have been different. If I had listened to that man in the basement, believed Cheyne was truly dead, left him any longer in that box... But I hadn't done that, I knew in my bones that I was going to find that kid and save his life. \n\nI had slept the night in an uncomfortable chair right next to Cheyne's hospital bed when he finally woke on his own. It was early morning, and the room was kept hot to aid in his recovery. He was lying on his back in the middle of the bed with monitors strapped to his wrists and a thin, transparent tube that lead into his arm where it was taped down. His eyes opened slowly, then closed again. Under the blankets his chest rose and fell with a steady rhythm. I had been told by his primary physician that he had been legally dead, and they were unclear for how long. What that meant was they were uncertain if he would regain all of his brain functions. I waited to see how he would respond, now that he was finally waking. My heart was in my throat as I climbed out of the chair and moved to sit at the edge of his bed. It creaked under my weight and Cheyne opened his eyes a second time, focusing on the large man sitting nearby.\n\n\"Are you really here, Deacon?\" He asked weakly.\n\nHis eyes were a shade of pale yellow-orange, a color I had never seen, and would never forget. I don't have the words to explain everything I felt in that moment, it was like nothing I've ever experienced. For over a week I had thought about this man, missed him, wanted to touch him, worried about him and been beyond terrified that I had lost him, time and again. My body, my brain, had been nearly devastated as I followed after him through the stars. At last he was here beside me and I couldn't keep up the brave facade anymore. My defenses crumbled away as I beheld him. My eye welled with tears that started to course down my face. I wiped them away as best I could on my sleeve but I couldn't hold them back. I couldn't remember the last time I had spilled tears. I had spent so much of my life being tough, being numb through drink and distraction, being a coward to my own emotions. I felt Cheyne's long fingers touch my leg tenderly.\n\n\"Why are you crying?\" He asked quietly.\n\nI looked down at him through the tears and blubbered like a child. \"Are you kidding? Because I thought I lost you. I-I thought you were dead! I don't ever want to feel that way again.\" My voice cracked as I spoke. I lifted his hand and kissed it warmly.\n\n\"Maybe we're both phoenixes.\" He said thoughtfully.\n\nI looked him in the eyes and was disarmed by the depth of his words.\n\n\"Deacon...\" He began. \"I thought you and I, were over. You let me walk out, remember?\" \n\nI nodded. \"I know I did. It was stupid, I didn't want you to leave but I...\" I had thought about seeing Cheyne again for many nights, but now that we were finally here together, I hardly knew what to say. I lay down beside him on the small edge of the hospital bed so I could look at him more closely. He turned his head and struggled to shift onto his side, allowing me more room. He was careful not to tug the tube from his arm.\n\n\"Cheyne, I never meant to drive you away. I'm so sorry, about everything that happened, I know it was all my fault!\" I exclaimed, even as I still wept.\n\nHe stroked a hand over my face. \"It's okay, I shouldn't have been in such a hurry to leave. I should have told you, but I was scared to face you again.\" He looked down, ashamed.\n\n\"Please don't ever be afraid again, not of me.\" I pleaded. \"I've only ever wanted to keep you by my side, keep you safe.\"\n\n\"And you did, you're a good friend.\" His smile was kind, but brimming with sadness.\n\nI knew right then, that I hadn't come this far out of mere friendship. \n\n\"It's not enough to be your friend.\" I said softly.\n\n\"What do you mean?\" He asked, his eyes searching my face.\n\nI reached out and pressed my fingers to his warm, full lips.\n\n\"I'm in love with you, Cheyne. For a long time now, though I was too stupid to realize it.\" I croaked.\n\nI watched as his eyes spilled over with tears of his own. \"You idiot.\" He said with a short laugh. \"Why couldn't you have just told me before?\"\n\nI shook my head. \"I didn't know what I had until you were taken from me. I didn't think I could feel this way again.\"\n\n\"Just kiss me, please Henry.\" Cheyne said.\n\nI leaned closer, holding him gently around the shoulder until our lips met. It felt like fireworks exploding in my chest, something I had not felt so intensely for many years. His mouth was so wonderful, inviting against mine. We melted together passionately, our tongues danced with one another like two old flames reunited. I could feel his hand behind my head, brushing through my thinning hair as he pressed closer into my body. We kissed and held one another for a long time until at last we each pulled apart and lay there, holding hands and studying the other.\n\n\"Why did you let me go before?\" Cheyne asked again. \"I know you think you had your reasons.\"\n\nI sighed and placed an arm behind my head as I rolled onto my back. \"Cheyne, I'm not good at this whole, boyfriend thing. You must know you could do a lot better than me.\" I said seriously.\n\n\"Who?\" He snapped.\n\n\"Huh?\" I asked in response.\n\n\"Who would be better for me than you? The man who cares about me, helps me, even put a roof over my head when I had nowhere to turn, who could possibly be better for me than you?\" He asked again. Clearly his energy was returning.\n\n\"I don't know, but think about it. I drink too much, you know that. I'm old enough to be your dad. I can't give you the life you deserve.\" I answered sadly.\n\n\"You actually mean all of that don't you?\" Cheyne asked in disbelief.\n\nI nodded.\n\nHe rolled close to me and laid his head against my chest. \"You do drink too much, and you probably are old enough to be my dad, but you're not him. And my life? I wouldn't even have it, if it wasn't for you. I don't want to think of a future that doesn't include you.\" He rubbed my belly affectionately.\n\nI could feel tears begin to seep from my eye again.\n\n\"I'm not the easiest guy to be with, I can be stubborn--\" I protested.\n\n\"Shut up, Henry. If you love me, and I love you, the rest will work out.\" He said knowingly. \"You think you're the only one who's broken? Look at my life! The only good part of it has been with you. You make me grateful to be alive.\"\n\n\"Oh Cheyne.\" I said as I wrapped him up in my arms.\n\nHe turned to look up at me. \"I'm always going to love you. No one has ever seen me like you do.\" \n\nWe lay there, quietly enjoying the comfortable silence when the door to the room suddenly opened and one of the doctors who had regularly been checking in stepped inside. He looked at us and his face reddened slightly.\n\n\"I would like to speak with the patient if that's alright.\" He said.\n\nI carefully, grudgingly released Cheyne from my embrace and climbed off the bed, standing nearby and allowing the doctor room to walk over.\n\n\"How are you feeling, young man?\" The older fellow asked in a kindly way.\n\n\"I feel pretty good, tired though, hungry.\" Cheyne replied.\n\nThe doctor gave a warm smile. \"Well that's excellent news, I'll send the nurse along with some food shortly. You gave everyone quite a scare, but you're in good health, we expect you to recover fully.\"\n\n\"Thanks, doctor.\" Cheyne said earnestly.\n\nI think my face must have shown more relief than Cheyne's and I gave an audible sigh.\n\nThe doctor looked me over then moved closer to his patient on the bed. \"You might have this gentleman to thank as well. I heard he kept you warm when he found you and hasn't left your side since. I'd say he's a pretty good friend.\" He added.\n\n\"We're actually together.\" I gently corrected the man.\n\nOn the bed, I could see Cheyne swallow a lump in his throat and his eyes glisten. It did both of us good for me to acknowledge our relationship out loud, finally.\n\n\"Well hopefully after this little episode you boys can get back to something a bit less hectic.\" The doctor said.\n\n\"Less hectic than being abducted and almost dying? Sounds pretty boring to me.\" Cheyne joked. Neither the physician nor myself were terribly amused.\n\nThe tubes and monitors that were hooked up to Cheyne were removed. The hospital staff wanted him to remain for the rest of the day for observation and to ensure he remained rested. Within half an hour a nurse came by with some breakfast which Cheyne ate greedily. I was also brought some food as I hadn't made it to the cafeteria. It wasn't customary for them to feed visitors of patients but apparently word of what I had done was spreading, and now I was getting some special treatment as a result. When we were alone again in the small room again I slid back into bed beside Cheyne and we talked. I told him about seeing his message, going to Tetha, following him in the cruiser and finally about Carson. He listened soberly, asking questions throughout my retelling.\n\n\"Henry, I never meant to cause you so much trouble.\" He said.\n\n\"Nonsense, it's on me, and you have no need to apologize for anything. We're together now, that's what matters.\" I said firmly. \n\nAs he held me I could feel his body along my side, even his erection as he pressed his hips into mine. My own body began to respond similarly.\n\n\"How are you feeling? Physically I mean.\" I asked him.\n\n\"Not great, still pretty tired. At least I'm not hungry anymore.\" He said quietly, though he offered me a smile.\n\n\"Then let me take care of you.\" I grinned as I sat up and began to undo my belt buckle.\n\nCheyne cocked his head to the side and glanced first at my crotch, then up to my face. \"Are you thinking what I think you're thinking?\" He inquired.\n\nI gave him a deliberate nod. \"I can't be this close to you and not want to make you feel good, kid.\" I told him.\n\nHe gave me a sorry expression. \"I don't think I feel up to getting fucked.\" He said.\n\nI grinned down at him as I pulled my shirt over my head, showing him my hairy chest. \"That's okay, you just lay there and let me handle it.\" It made me feel attractive as his eyes roamed over my body, clearly enjoying the view. I kicked my boots off to the side and rolled my jeans down my legs and tossed them onto the chair.\n\nCheyne giggled. \"Right here, in the hospital?\"\n\n\"Oh yeah, it's okay, we can be quick.\" I told him. \n\n\"Well, at least pull the curtain around the bed!\" He exclaimed.\n\nI did as he asked, tugging the thin sheet hanging on a U-shaped rail around the bed to give us some privacy. I slid my fingers underneath the waistband of my underwear and tugged them down to my ankles, kicking them over near my boots. \n\n\"Damn you're beautiful.\" He said.\n\nI gave him a sheepish grin. I hadn't considered myself to be someone that anybody could find appealing since losing an eye, gaining the scars and a substantial beer belly, and yet when Cheyne said it to me, I knew it was genuine.\n\n\"So are you, baby, more than you know.\" I said as I climbed onto the bed near the foot on my knees. I reached up and kissed him again, leaning my broad body over his. I reached between us then hauled the blankets down to his knees, causing his lengthy purple dick to slap up against his stomach. I quickly fell forward to my hands on either side of his body as I began to suck him into my mouth. I heard him gasp as I forced him down my throat. He was already oozing plenty of precum and I relished his tangy, nearly sweet flavor. I would have never guessed I could enjoy another man so much, but here I was, completely absorbed in my task.\n\n\"Flip around, I want to suck you too.\" Cheyne breathed.\n\nI walked my back end up the bed and straddled his head with my knees. \n\n\"Mmm, what a view.\" He mused. \n\nI chuckled in response.\n\nCheyne began to suck my cock into his mouth and then lap at my balls, tugging them gently and slurping his tongue around my bag. I decided it would only be fair if I did the same. I suckled one testicle into my mouth and then worked to pull the other in as well. Underneath me he moaned and jerked and tried to pull my entire scrotum into his hungry mouth, though I proved too large and he settled for one at a time. The sensations were incredible though. I remembered how much he enjoyed my face in his testicles and made sure to provide him as much pleasure as I could. \n\nI stopped abruptly as I felt my asshole get licked. It was like nothing else, that ticklish, wonderful sensation back there. I could feel his hands spreading my big cheeks apart as he sniffed and tongued my pucker. I became like putty in his hands and a low groan escaped from my lips. I leaned my face back in between his long legs and pulled his thighs apart. This would be an altogether new experience for me but I was willing to try it with the man I loved. His anus was so dark it was almost black in color, it tensed and tightened as he breathed. I pushed my moustached mouth against it and gave a tentative lick. Then I licked again and shoved my face into his cheeks. Above me I could hear Cheyne moan and gasp between his own slurps and prods of my backside. His scent and taste was unique and strange but still exciting to experience. We continued to simultaneously pleasure each others' assholes for several minutes until I was too turned on to handle the foreplay any longer.",
        "I pulled up enough to take his cock back into my throat and coated it thickly with saliva. Carefully I got to my feet and turned around to face him, planting a foot on either side of his waist, then I lowered myself carefully until my fat ass was hovering just over his manhood.\n\n\"Are you sure?\" He asked.\n\n\"Yup, ever since the last time, I've wanted to try this again.\" I smiled shyly.\n\nReaching underneath me I found his spit-slick cock and lifted it to my asshole. I took a couple of deep breaths and then pushed down, feeling his head start to split me open. I exhaled another breath and tried to relax my sphincter muscles as I pushed more of his length into my guts. He moved his hands up my body so he could gently tweak my nipples. The feeling of his cock halfway buried inside and the slight pain in my nipples was fantastic. I panted and drove him further in, finally reaching his flat stomach with my ass.\n\n\"Oh yes, oh damn.\" He murmured as he started to thrust, very slowly at first.\n\nThat scabarethen cock was incredible, and I had missed it terribly. I couldn't help but think of all the things I didn't know about myself sexually before Cheyne helped me to explore them. Once I had been stretched enough, I began to lift myself and slam back down. He still played with my furry chest as he bucked in time to my pelvis grinding into him. I reached down and tilted myself back, holding myself just above him, giving him a clear view of his prick impaling my asshole. He sat up and spit into his palms, rubbing them together then grabbing hold of my cock. He stroked me eagerly as he also cupped and played with my bouncing sack.\n\n\"Oh baby, gonna be real soon.\" I told him as I ground my rump down on his crotch.\n\n\"Me too, any second.\" He said hoarsely.\n\nTrue to my word, the plunging cock inside of me and those skilled hands on my thick maleness brought me to climax mere seconds later. I shouted as my orgasm rocked me. \n\n\"Cheyne! Fuck, yes!!\" I bellowed as long white ropes shot out of me, coating and dribbling down Cheyne's smooth, flat chest. He leaned back in response and drove his hips against me, I felt his balls slap my ass when he began to unload into my butt. It was a perverse thrill that I could actually feel his seed filling me as he came. He grunted and bucked wildly, his eyes shut tightly as we both climaxed powerfully together. At last he fell back against the bed, struggling to catch his breath. My dick still bobbed and a long string of cum connected it to Cheyne's stomach. I exhaled deeply, sweat rolled down my forehead into my eye. I hauled myself up, letting his slightly softened dick slurp from my hole as I climbed over the edge of the bed.\n\n\"Damn I missed doing that with you.\" I admitted, wiping the sweat from my brow with the back of my forearm.\n\n\"Yeah, me too.\" He said, showing me the widest grin.\n\n\"You have a private bathroom, let me clean us both up.\" I said, leaning over him.\n\n\"Okay.\" He replied simply.\n\nI scooped him up in my arms and carried him toward the bathroom door, admiring the mess I had made on his chest and belly. He ran his finger through the puddle as he caught me looking and took a taste.\n\n\"Yum, tastes like Henry!\" He said happily.\n\nI chuckled heartily in response.\n\nThe little shower actually proved to be larger than the one we had shared back in our apartment. I made sure the water was nice and hot and then pulled him in with me. There were metal railings in this shower, likely for recovering patients to help steady themselves. I made sure that Cheyne had a grip on one before I gently placed him on his feet and set about washing his long dark hair and shoulders. I scrubbed under his arms and down his back. He swished his tail as I washed his perfect rear and around to his stomach and groin.\n\n\"You're riling me up again.\" He said over his shoulder.\n\n\"Ahh, to be in my twenties again.\" I smiled. \n\nWhen we were finished cleaning up I got dressed and Cheyne pulled on a hospital gown as that was the only clothing he had. He sat on the side of the bed and I plopped down next to him.\n\n\"Did they find my box on Carson's ship?\" He asked hopefully.\n\nI grimaced and shook my head. \"There wasn't anything on the ship. He must have blown it into space so we wouldn't find obvious evidence that you had been with him.\" \n\n\"Oh, well that's too bad.\" He said quietly.\n\n\"It's okay, Cheyne, we'll get you more clothes, some heated jackets.\" I assured him.\n\nHe forced a smile as he looked at me. \"I know, it's, not that. I lost my sketchbook. That kinda hurts actually to lose everything I made.\" He was crestfallen at the realization.\n\n\"Not quite everything!\" I said as I hopped to my feet.\n\nHe gave me a puzzled expression as I carefully dug into the inner pocket of my jacket which was hanging over the back of the chair. I produced a twice-folded piece of paper and brought it over to the bed.\n\n\"See?\" I unfolded it carefully and showed him the drawing he had made of himself and left for me.\n\n\"You found it? You kept it?\" He asked, his voice no more than a whisper.\n\n\"Of course I did. You made it for me, it's special.\" I said truthfully. \"I've looked at it every night before I go to sleep.\"\n\nI could see the moisture in his eyes. \"You have?\" He asked in a faltering voice.\n\nI reached out and stroked his tall ears gently. \"I missed you, I told you that.\" I said.\n\n\"I guess you really did.\" He admitted, rubbing his eyes with the heel of his hand.\n\nI sat back down and put my arm around his shoulders. \"Doctor said this is your last day in hospital. You ready to go home tomorrow? Well, I mean, get on the cruiser and start heading home? I'm going to check in with Reynolds, but I've been messaging him and it sounds like he's going to need to stay for awhile. He assures me he can grab a transport shuttle back, but I can pilot the cruiser, I remembered a few things on the way here. It would be you and me, just like it was.\"\n\nThe young scabarethen straightened up and stared at the wall in front of him. He was silent for a couple of minutes while he thought.\n\n\"Cheyne?\" I finally asked.\n\nHe turned his head to give me a meaningful look. \"I'm not going back to Ganymede, Henry, not ever.\"\n\nCHAPTER 15.\n\nMy face showed my surprise. It hadn't occurred to me that he wouldn't come home with me. He had left to get away from me, but now that we were back together why would he...? \n\nHe interrupted my reverie by saying, \"Henry, I want to be with you, more than anything, but I can't go back there. Leaving wasn't a hard decision to make. What was I really losing? Just you, the chief and the guys at the precinct, but I was also leaving behind memories I wish I never had. I left Tetha behind, that shitty apartment, all those men I had been with who recognized me sometimes. Can you understand?\" He asked.\n\nOf course I understood. \"Cheyne, I, yes I do. There are so many things I want to leave in the past too, but, where would we go? What do you want to do?\" I asked seriously.\n\n\"I Don't know, away. We're on Prometheus now, I heard there's a lake here, and parks. Maybe we could live here?\" He asked hopefully.\n\nI couldn't help but frown. \"Prometheus is no better than Ganymede, I hate to say it, but it's not. Same problems, same type of place, just bigger. Those parks are full of muggers, worse, and the lake is almost polluted to the point of being toxic.\" I told him.\n\nI watched as he deflated, his shoulders hunching forward. I thought about the predicament, wondered what other options we might have.\n\n\"Listen,\" I began. \"We won't leave right away but staying here is temporary. Let me contact some folks, figure things out for both of us. Would you, want to live with me again? If I found something?\" I discovered that I was anxious for his answer.\n\nHe looked at me again and furrowed his eyebrows. \"Yes, Henry, of course I want to live with you again.\"\n\nThere was a wave of relief at hearing his words. \"Good. Let's go down and get something to eat in the cafeteria in a little bit. The hospital has already told me that they're paying your medical bills.\"\n\n\"Why would they do that?\" He asked.\n\n\"Well, they had something of an illegal mess right under their noses and I think they're going to take care of everyone that came out of the stasis pods by way of an apology. Probably trying to keep from getting sued.\" I explained. \n\n\"Huh, well that's kinda cool of them I guess.\" He responded.\n\nI had Cheyne remain in the room briefly while I went to the gift shop on the first floor and purchased some pretty basic-looking clothing for him. Luckily they had a handful of self-heating coats for scabarethen and I bought one that I thought was nice, although maybe a bit too large. I also purchased some socks and a pair of boots in the kid's size. I returned to the room where he got dressed as I waited.\n\nA short time later we headed down to the commissary and grabbed some trays near the entrance.\n\nWe moved about the cafeteria gathering whatever food looked most edible and a couple bottles of water for lunch. We found a table off to one side and sat down to eat, facing each other.\n\nCheyne looked over the contents on my tray. \"Sorry they don't have any beer or anything. It must have been tough for you the last day or so.\" He said.\n\nI tipped my head to one side and gave him something of a thoughtful expression. \"Ya know, it's actually been eight days since my last drink. It was back on Ganymede.\" It sounded as hard to believe as it was to say it, but it really had been that long.\n\nCheyne's large eyes grew even wider. \"You serious? Not a single drink in all that time? Are you okay? How do you feel?\"\n\nI shrugged. \"I feel okay. The first few days were really hard, I was sick a lot but Reynolds helped me get through it. Turns out he's a decent guy. I still think about having a drink, almost all the time but, I'm realizing that maybe I don't have to anymore. I've gone this long right?\" I said, trying to sound convincing.\n\nHe stood up suddenly and leaned across the small table, pulling me into a hug. \"Oh Henry, I'm so proud of you! I love you!\" He whispered in my ear.\n\nMy face became hot as I blushed. \"Th-thanks.\" I said, putting an arm around him in return.\n\nHe sat back down and was beaming. \"I want you to know I'm here for you. I support you, just like you've done for me.\" He said seriously.\n\n\"Thanks, baby. Listen, I can't make any promises, I don't know how long I can keep it up but, I'm going to do my best.\" I told him.\n\n\"I know you will.\" He said, placing his hand on mine. His faith in me made me feel like I could do anything. \n\n\"I didn't want to be, under the influence when I was looking for you. I wouldn't have forgiven myself if I let anything happen because of, because I needed a drink.\" I explained.\n\nHe gripped my hand tighter and smiled sweetly. We still held hands like that throughout the meal. It was nice, familiar, made me feel loved.\n\nEven though I was supposed to let Cheyne rest and relax on his own during his last night in hospital, when the lights had gone out to let him sleep I crawled under the covers next to him. He had already told me he would only fall asleep if I held him, to let him know he was safe. I happily obliged. For the first night since I had stopped drinking I don't remember having trouble falling asleep. Better than that, I don't think there were any nightmares. \n\nCheyne got released the following morning, clean bill of health, strong and resilient. It was hard to believe he had actually died three days ago and yet, here he was, big as life. Before we left though we both wanted to stop in to see Mike Reynolds. He had undergone surgery to remove fragments in his gut but it had gone well and he was recuperating better than the doctors had expected.\n\nI knocked at the door to his room even though it had been propped open. When he saw Cheyne and myself he gave us an easy smile. His color was still quite pale but he was sitting up in the hospital bed, alert and active.\n\n\"Hey guys, good to see you.\" He greeted us as we approached his bed. \"Cheyne, you look really good.\" He added.\n\n\"Thanks Mike. I'm really happy that you're doing well. I'm sorry you got shot because of me.\" Cheyne said, looking forlorn.\n\nReynolds eyebrows shot up his forehead. \"Ha! Deac and I were chasing a criminal and we ended up shutting down a big smuggling and organ harvesting ring. You just happened to be in the wrong place at the right time.\" He said, folding his arms, though he was chuckling to himself.\n\n\"Oh, well then I don't feel too bad.\" Cheyne responded with a grin.\n\n\"How long they going to make you stay here?\" I asked.\n\nHe shrugged. \"Not really sure, another week? Maybe longer, I don't know. But like I told Deacon, you guys can go back in the cruiser, I'll take a shuttle. Maybe kick around here a little bit, use up some of my vacation days.\" He explained.\n\n\"Well,\" I started. \"We might just take the cruiser for a little while but it won't be back to Ganymede.\"\n\n\"Oh yeah?\" Reynolds asked.\n\n\"Cheyne doesn't want to go back, and honestly, I don't really either. Suppose I'll go where he does.\" I told him.\n\n\"So you guys a couple now, officially?\" He asked in a canny way.\n\nI sighed and tousled Cheyne's hair. \"Yeah, we are. At some point I figured out my feelings for this guy.\" \n\nCheyne smiled up at me. \"Yeah, he's alright too.\" He said, laughing.\n\nReynolds nodded. \"Good for you both, it's about time. So what's next then, if you're not heading back?\"\n\nI had been giving it some serious thought over the last day and night but hadn't told Cheyne yet. He would hear it now as I told Reynolds.\n\n\"We're going to travel to Olympia, see about starting a life there.\" I said.\n\nCheyne whirled around to look at me. On the bed, I could see Reynolds was dubious.\n\n\"Look,\" I said. \"I know it's costly but, I have a marshall friend living there who owes me a favor, might be able to find me some work, hopefully Cheyne too. He says the two of us could make something happen, living-wise if we both have steady incomes.\"\n\n\"You and your favors.\" Cheyne mused.\n\n\"Still pretty expensive.\" Reynolds added.\n\n\"Well, if we stayed here it would just be trading one shithole for another. Olympia is the nicest place in the entire sector, I owe it to both of us to make it work.\" I said, hugging Cheyne against my side.\n\nThe sergeant exhaled wistfully. \"We'll miss you guys back home, but, I understand. I sure hope you fellas find what you're looking for out there.\"\n\n\"Me too.\" I said sincerely.\n\nWe said our goodbyes and I gave Mike a warm pat on his arm, thanking him for all of his help finding Cheyne, and with me personally back on the ship. He told me to think nothing of it, but I got the feeling we had both become grateful for the other's friendship. Though neither of us gave it voice, we had been through it together, had each other's back when it counted, and created a lifelong bond as a result. I would miss him.\n\nWe stopped into a Digita Now store just after we left the hospital. It was one of many chain stores found throughout the galaxy, specializing in various electronics, games and especially smartscreens. Cheyne's device had been stolen or destroyed by Carson at some point and needed replacing. Happily each smartscreen is coded to the personal user by scanning retinas and fingerprints when they are initially programmed. This meant that all of his favorite shows, stories, frequented sites, etc. would be updated in his device once it scanned his eye and fingertip. The new screen was apparently a much nicer, newer model and Cheyne was really excited about the upgrade. Even though it frustrated him, I paid for the thing, explaining that it was my prerogative as his boyfriend. He got quiet when I said it and I watched the fight go out of him. He thanked me quietly when we left the shop.\n\nMost of the day was spent browsing and buying in Prometheus' extensive shopping district. This was Cheyne's first time setting foot anywhere but Ganymede, and he was literally a kid in a candy store, and then a clothing store, followed by a pet store. Rarely, a freighter pilot might have a pet dog with him, but Cheyne had never seen any other animals in person and was very excited. We must have spent two hours inside, playing with various animals, most of them originally from Earth but there were a couple from Scabareth. We stopped for dinner, having skipped lunch in favor of seeing more stores. So we had a nice meal on a patio filled with mostly happy people talking and laughing. Cheyne pointed out that nobody seemed to be laughing and having a fun time back on our home station, and therefore, Prometheus couldn't be as bad as I had said. He had a way of seeing the good in places where I had stopped looking.\n\nWe discussed getting a hotel room for the night but both agreed that saving money was a fair concern so we would spend the night on the cruiser. We stopped into a grocery store on our way to the docks, grabbing items that we could use for breakfast in the morning. The store had a little pharmacy section where Cheyne grabbed some lubricant as he gave me a wink. I found more of the pills that Reynolds had given me aboard the ship to help with the nausea I still felt occasionally. When we passed the alcohol racks I hesitated. The bottles were so near and my body yearned in a familiar, addicted way. Cheyne put his hand at the small of my back. He may not understand exactly what I was going through, but I was stronger with him there by my side. I shook my head to clear it before ushering us past. There was an an aisle of old magazines and a few paper goods. These items were mostly hard to find these days as everything was digital and online, but they did have a couple sketchbooks and writing tools. I bought what they had and Cheyne grabbed me in a tight hug.\n\n\"So you can start again.\" I said as he cradled the bag of art supplies in his arms.\n\n\"Thank you, it means a lot to me.\" He said, grinning warmly.\n\nThe docks weren't too far from where we ended up after walking most of the day so we headed there by foot. The immense overhead lights were starting to fade as the station transitioned into its night cycle.\n\n\"Nice day today, wasn't it?\" He asked.\n\n\"Yeah, it sure was.\" I agreed.\n\nHe gave me an uncertain expression and I could see him struggling to say something.\n\n\"What? What are you thinking?\" I asked.\n\n\"Would you mind holding my hand?\" He asked softly.\n\n\"Huh?\" I responded, lifting an eyebrow.\n\nHe gave a shrug and pushed a silky strand of hair out of his eye. \"It's just, I want people to know I'm with you, and you're with me. More than that, I want to feel my hand in yours.\" His cheeks flushed an even darker purple as he blushed.\n\nThere was no hesitation, I grabbed his hand in mine and tugged him closer. He laughed and smiled at me. I leaned down and kissed him on the mouth, tenderly, lovingly, right in the middle of the promenade. Some folks gasped, others grumbled and walked quickly away, but some smiled, one young couple cheered. \n\nCheyne was still visibly blushing. \"I just wanted to hold hands.\" He said awkwardly.\n\n\"It wasn't enough for me.\" I told him. \n\n\"I thought you might be embarrassed about--\" He started.\n\n\"Being seen with you?\" I finished. \"No, not at all. Why would you think that?\"\n\nWe continued our stroll before he answered.\n\n\"You used to be so emphatic that we weren't a couple I guess, so it's surprising.\" He admitted.\n\nI couldn't help but sigh. \"I know, I know. It wasn't because I was embarrassed of you kid. I just thought, well, you'd be better off being with someone else in that way. If I had known then what I know now, I would've held hands with you everywhere we went!\" I told him.\n\nHe laughed again, it sounded wonderful. \n\n\"You're just so manly, I didn't really see this coming.\" He said. \"I mean, I hoped everyday that we lived together that you might, tell me you loved me but I, I don't think I ever actually believed it would happen.\" He had trouble meeting my eye, letting me see him with his emotions bared.",
        "\"Sometimes good things happen in the universe.\" I told him. He smiled happily, contentedly, and leaned into me as we walked, our fingers intertwined.\n\nCheyne was incredibly eager about seeing every inch of the cruiser once we got back. He told me, in the past when he was aboard a ship he usually only saw the bedroom but had always been curious and interested about the rest. So I gave him the full tour, explained the functions of things I understood, glazed over the ones I didn't. We stopped by the galley and dropped off the breakfast fixings. He wondered where I had been sleeping so I showed him around the crew quarters, he frowned.\n\n\"There's not much room for two of us is there?\" He asked.\n\n\"There's a room for officers, two big beds in there.\" I said.\n\nHe brightened. \"Well that sounds much better!\" \n\nWe made our way to the officers' quarters where we set down the rest of our purchases, mostly new clothes for Cheyne and flopped down on the nearer of the two beds. \n\n\"This is much nicer.\" Cheyne agreed. \"So am I an officer now, or just an officer's wife?\" He teased.\n\nI looked at him sternly. \"You're no one's wife, Cheyne, but I have some clout around here, I guess you can stay.\" \n\nHe laughed. \"Yeah, clout when we're the only two on the ship.\"\n\n\"Still.\" I said.\n\nHe rolled on top of me. \"You want to get naked?\"\n\n\"I don't know, I'm pretty tired.\" I said, faking a yawn.\n\n\"Really? From walking? Damn I was hoping--\" He began.\n\n\"I'm kidding! Yes, of course I want to fool around! Get out of those damn clothes!\" I growled, tugging at his jeans.\n\nHe laughed again, a wicked grin spreading over his face. Cheyne moved to the end of the bed and began to slowly, deliberately remove his clothing, teasing me. I watched, mesmerized. He had such a beautiful body, young, strong and lean, I was forced to wonder how I got so lucky. He swayed and rubbed his hands over his body sensually, dancing rhythmically to music only he could hear. \n\n\"Undress.\" He said.\n\nI quickly tugged my shirt over my head, bunching it up and tossing it to the side. I reached down and yanked at my belt until it loosened and hauled my faded jeans down before throwing them across the room. I peeled each sock off and then finally yanked my underwear down tossing them away. My erection bobbed and leaked against my belly as I watched Cheyne dance.\n\nHe stepped onto the bed, grabbing the zero gee railings above the bed to help support himself as he continued to move for me, rotating his hips and swishing his tail. We still had gravity, and would until we actually moved past the energy shields, but he needed the balance on the springy bed. He kept his pale yellow gaze locked with mine as he twisted and stretched, letting me see every part of his hard body. I bit my lip as I watched. I wanted to grab him, feel his tight ass milking my cock, but didn't want to spoil the show. After a wonderful eternity he sank to his knees on either side of my thighs.\n\n\"That was hot as hell!\" I told him, sitting up on my elbows.\n\n\"Haha, thanks. I hoped you'd like it, some guys want me to dance a little first, but I started to enjoy it actually.\" He explained.\n\n\"Well you dance really well, definitely did the trick for me!\" I told him, grabbing my hard prick for emphasis. \n\n\"I should probably take care of that then.\" He winked as he bounced from the bed to poke through one of the pockets of his jeans on the floor. \n\nHe returned a moment later with the lube he had bought. I excitedly moved to the edge of the bed. He unexpectedly lay down across my lap, lifting his tail and pushing his butt into the air.\n\n\"Loosen me up, big guy.\" He told me seductively. \n\nI spit into his ass and then began to apply the cool lubricant to my fingers. I worked over his tight butt as he moaned and pushed against me. I dipped my head and gave his round purple cheek a long, wet lick.\n\nWhen he was ready he rolled onto his back and gave me a lust-filled look. \"Can you lift me? I want you to fuck me against the wall.\" He informed me.\n\n\"Hell yeah I can!\" I said enthusiastically, picking him up easily and carrying him to the wall near the bed. I held him under his ass and he draped his hands behind my neck. Our faces were close together and he pulled me in closer and began to kiss me aggressively. I pushed my hips forward, finding his asshole dripping lube on my swollen cockhead and drove into him. I felt him tremble and gasp into my mouth. I pulled back and thrust in again, forcing a muffled cry from him. I held there, making sure I wasn't hurting him.\n\n\"Don't you fucking stop. Keep going until you flood me.\" He ordered. \n\nI pulled back and dug back in, picking up the pace on his ass while I ravaged his mouth. His short clawed fingers scratched at my neck and shoulders as I slammed into him against the wall. His eyes rolled back in his head and the noises he made were incredible, almost feral. There was an unexpected and insistent poke at my backside and it took me a moment to realize it was the tip of his tail wanting to slide into me.\n\n\"It's too dry.\" I complained.\n\nHe brought the long appendage up to our faces where we began to lick and suck at the tip in tandem. It darted into my mouth and I sucked him down, like it was his hard dick. I wasn't sure if he gained any pleasure from the feeling but it proved to be arousing to me if nothing else. His tail slid out of my mouth, snaked back down, and found its way again to my ass. I took a breath and spread my legs apart to allow him entry. I could feel him nudge inside and I grunted from the strange intrusion. I could feel it, slipping around in my guts. Cheyne tugged my mouth back to his and ground down my rigid cock with his hips. I resumed my vigorous pace and now had the kid inside me too, massaging against my prostate. My god it was the most fulfilling sex I had ever experienced. I drove my tongue and my oozing manhood further into the kid as he forced more of his slender tail into my rear and raked his nails over my back. My body was in pain, mostly pleasure and still other sensations beyond the physical I couldn't comprehend. It was too much for me, passion too great to contain and I exploded inside of Cheyne's warm, pulsing body. I roared as I climaxed, my balls feeling like they were being wrung out for the amount of fluid they released. That damned tail was still doing a number inside, forcing what felt like electricity through my erupting cock and I couldn't stop cumming. \n\n\"Ungh, oh fuck, here I come!\" Cheyne gasped breathlessly. \n\nHe had reached down to jerk himself as he brought me to my own staggering orgasm. \n\nI lowered my head and could just get the kid's cockhead into my mouth as he began to blow his load. I had never taken a man's ejaculation in my mouth before but it was exhilarating, feeling the jets of salty, tangy mess as it splashed over my tongue and into my throat. He groaned and held tightly to the back of my head, forcing more of his twitching prick into my hungry mouth. I sucked and gulped until there he had nothing left to give. He lifted my face when he was done so we could kiss again. I still had some of his cum in my mouth and I knew he could taste it there as we pressed our mouths together.\n\nMy legs barely held out as I trudged back to the bed and fell heavily onto my back, still holding Cheyne on top of me. He rolled onto his back on my round stomach and reached up to rub my neck and face. Neither of us were able to speak for several minutes. I was so thoroughly spent, so remarkably satisfied.\n\n\"Cheyne, my love, that was the greatest sex I've ever had. That is not an exaggeration.\" I told him breathlessly, wrapping my arms around his chest.\n\n\"Me too, my love.\" He giggled.\n\n\"What's funny?\" I asked.\n\n\"Sounds weird to hear it.\" He said.\n\n\"Should I say something else?\" I inquired.\n\nHe shook his head firmly. \"No, keep calling me your love, 'cause that's what I am.\" He sighed happily.\n\nSleep found me easily, which had become the nicest surprise in my life in a long time. Feeling that kid lying there, pressed up against me made me feel secure, under control, happy. Just being with him relaxed me, made me feel capable in a way I wasn't sure I could ever fully express to him. \n\nWe were sleeping soundly, all wrapped up together when Cheyne suddenly bolted awake and let out a scream. I sat up too, terrified for his safety. I pressed my fingers to the touch bar over the bed and the room became bathed in light.\n\n\"Cheyne, what's wrong?!\" I asked in a worried voice.\n\nHe panted and then let his head fall into his hands, sobbing gently.\n\n\"Baby, please tell me.\" I implored him, holding him tightly to my chest.\n\nHe shook his head and sniffed back the tears. \"Sorry, I'm sorry, Henry. It was just a nightmare, I get them sometimes. It shouldn't happen again, at least not tonight.\"\n\nHe moved to lie down again and I moved with him, spooning against him. \"I know something about nightmares. Would you tell me about it?\" I asked gently.\n\n\"D-do you really want to know?\" He asked.\n\n\"Of course I do.\" I assured him, giving his shoulder a light kiss.\n\nHe released a drawn-out exhalation. He hesitated for a moment. \"I was, slipping away into darkness. I-I think I was back in that stasis pod, that Carson put me in. The scarier part was, I saw my dad's face closing the lid on me.\" He shuddered.\n\n\"Damn, that's awful.\" I agreed.\n\n\"I ever tell you about my dad?\" He asked.\n\n\"No, I don't think so.\" I tried to recall, but I didn't think he had ever said more than two words about his old man.\n\n\"Well, I don't talk about him much, but I do think about him, if only when I'm trying to sleep. It's strange though because I can't clearly remember his face anymore.\" He began. \"I don't really know that much about him to be honest. He was a freighter pilot, no surprise there. Didn't know my mom, didn't really know anybody when I was a kid. All I wanted was to make him proud, but he wasn't around much. I wanted to ask him questions about things, the galaxy, our home planet, sex and stuff. I don't know, all sorts of questions but he wasn't that kind of father. When I was eighteen, he found me going down on some guy.\"\n\nI heard him start to cry again so I held him more tightly. \n\n\"He didn't let me explain, he didn't say a word he, he just left me! I knew what I had done, but I couldn't believe he would leave, just like mom had done to him! I hated myself for making him leave.\" \n\nHis body shook, he placed his palm to his forehead. The story made me angry, I could feel my face flash with rage.\n\n\"Hey, Fuck him! You didn't make him do shit! That man was a goddamned coward and not worthy of having you for a son!\" I roared. In my arms I felt Cheyne suddenly stiffen.\n\nThe sudden anger subsided quickly. \"I'm sorry to say so Cheyne, I know he was your dad, but he sounds like a piece of garbage. You deserve so much better than that.\" I leaned forward and kissed his soft neck.\n\n\"Th-thank you Henry. I've never told anyone that story before. I've been so ashamed, I didn't know what to do. Sometimes I think... the life I've lead was just me trying to punish myself for losing my only family.\"\n\n\"Aw Cheyne, don't say that, it's just not true.\" I said.\n\n\"Maybe it is. I want you to know all this crap, see who I really am. You need to know how broken I am, that maybe I can't be fixed.\" He trembled against my body. \n\nHis words swam around in my head as I thought about what I could say. So he was damaged, as if I wasn't? I thought about what Tetha had told me about his father, wondering if I should bring it up now. \n\n\"Cheyne, I want you to listen to me, alright?\" I started. \"I see exactly who you are. We're just the same, you and me. We both have baggage, we've both lost our families and somehow no matter what shit we find ourselves in, we manage to climb out and get back on our feet. We're fighters, we're strong, but you know something else?\"\n\n\"What?\" He asked, lifting his head and cocking his ears back.\n\n\"We're stronger together. You saved me from the worst parts of myself. Hell, I can't even fall asleep without you next to me! You brought me back into the light, showed me what it's like to be happy in my own skin again, to be loved.\" My voice shook.\n\nHe rolled over to face me and I gently caressed his cheek with my hand.\n\n\"I'm just as broken as you are, but maybe, between the two of us, we can find enough pieces to make something whole.\" I said at last.\n\nHe smiled even as tears streamed from his beautiful golden eyes. He buried his face into the soft chest hair covering my front and pulled my arms around him. \n\n\"Don't ever let go, okay?\" I heard him whisper.\n\n\"Never.\" I told him honestly.\n\nEPILOGUE: CHEYNEX\n\nIt had been four and a half years since Henry and I moved to Olympia Station. It's funny, the time flew by in many ways and yet, much transpired in that time. Finding a place to live hadn't been overly easy but Henry's marshall friend was married to a woman in real estate and she had been able to find us a nice apartment that we could afford. It was bigger than what we had on Ganymede but what truly set it apart were wide, clear windows on two sides that looked out over a lush green park full of trees, flowers and birds. Sometimes we would wake up to hear birds singing. I know it's bizarre but of all the changes from our old lives, this was the one that made me happiest and it seems like such a small, unexpected thing.\n\nOlympia was enormous and as beautiful as we had ever heard. Apparently when the architects and engineers had designed this place they wanted equal parts nature and development. There were lakes, wild animals, a mountain, albeit a small one with a river cascading down its side. It was almost too good to be true and yet, I could see the mountain from the roof of our home, hear boats in the lake. Henry and I even took lessons and learned how to swim, what a truly sensational experience that was! People here just seemed friendlier, which was strange at first. Instead of jeers or catcalls when I walked down the street I would receive \"good mornings\" and neighborly smiles. There were families here, children and schools. If my life had been different, I could have grown up with them. Some days it still felt like a dream, but this was one I was happy not to wake from.\n\nLife reminded me sometimes of what we had for those few months on Ganymede, but in a good way. I loved being with Henry, he was a great boyfriend, decent roommate. We had a nice big couch, a full living room in fact, where we would spend many of our evenings, Henry watching his terrible shows and I would usually draw, nestled up against him. Before bed, almost every night we'd make sure to fool around. It was fantastic, being with someone who knew my body as well as I did and always making sure to make me feel incredible. I reciprocated as best I could, which always proved to be well received. This was the life I had always wanted but never actually believed I could find, or deserved, until now.\n\nHenry had been able to keep his job as marshall and after cracking the smuggling operation that was centered on Prometheus he got a big raise and a commendation. He was humble about it, and told me afterward that it was all because of me that he had even known to go to Prometheus in the first place. Thanks to the extra money from Henry's job, I was able to get a part-time office job in the financial sector of the city and was able to start going through pilot's school. Henry had encouraged it and I was really excited to begin a new chapter in my life as well. Turns out I had an aptitude for spaceships and flying was second nature to me. On some level I always knew I was destined to spend more time out among the stars, though I don't feel the need to travel as far as I did when I was younger. It took me four years and a lot of study and determination, but I got my pilot's certification and license. \n\nHenry had a surprise party for me, inviting my friends from the flight school, the office, and even a couple of Henry's colleagues from the marshall precinct. Our guests brought drinks for everyone but the marshall politely declined. He has slipped up a few times, he's not perfect, none of us are, but as of that day he had been sober for nearly two years. I'm proud of him, not just for his recovery but so many reasons, more than I can list. I'm proud of myself too, I've come a long way, grown up a lot from the guy I was while living on Ganymede.\n\nAfter the party, we were cleaning up a little. Henry found a small, wrapped gift that someone had left at the edge of our dining table. He handed it to me.\n\n\"There's no note or anything, not sure who left it for you.\" He said.\n\n\"I guess they felt awkward about giving it to me at the party?\" I asked rhetorically. \"Nobody else brought a gift, it's kind of weird.\" I turned it over in my hand.\n\nI scratched through the thin paper and found a short paper box. I opened the box curiously and found a shiny metal band. It was a pretty white gold while still being masculine. \n\n\"Huh, that's nice.\" Henry commented, peering into the little box. \"Is it engraved?\"\n\nI picked the ring up gently and sure enough, there was something written around the inside. I squinted and read, \"You have my, head?\" \n\n\"Heart, it says you have my heart.\" Henry corrected me.\n\nI looked up from my inspection to find that the marshall had taken a knee in front of me. I can be incredibly dense at times but suddenly the ruse fell away and I understood. My heart began to pound in my chest, a tangle of thoughts tumbled around in my head, all at once.\n\n\"Cheyne,\" He reached his big hands up and took one of mine softly in both of his. \"Would you do me the honor of being my husband?\" He looked pleased and nervous, I swear his hands were shaking, or maybe that was me. Somehow my mouth was dry, it felt like time was standing still. \n\n\"Cheyne? Say something baby.\" He said anxiously.\n\n\"Y-yes of course I will!\" I exclaimed. \n\nHis face fell in relief before he got to his feet and pulled me in close, nearly crushing me in his joyful embrace.\n\nWe kissed, and when we pulled apart I could see his eye sparkling with emotion. \n\n\"I didn't know that you, wanted to get married again.\" I told him truthfully. \n\nHe rubbed my shoulders and looked at me thoughtfully. \"I didn't really, not until you came along. Marriage number three for me, huh? Let's make sure this is the last one.\" He joked.\n\nIt felt like there was a warm glow inside, surrounding my heart and emanating outward. We had talked about marriage only once before, a couple years back and he had only sort of shrugged and changed the subject. I had wrongly assumed he had no interest. I should have known better, he had probably been thinking about it a great deal but was waiting for the right time.\n\n\"Why propose now?\" I asked him, curious to his reasoning.\n\nHe lifted the ring from the box between his thumb and forefinger and held out my hand, splaying the digits. \n\n\"I didn't want to interfere with your school schedule, or your job, I know it's been a busy few years for both of us.\" He explained as he gently slid the band onto my long ring finger. \"Seemed like the right time, wanted to make sure you still wanted to stay with me.\" \n\n\"Henry, come on, you know there's nowhere else I want to be. You're it, you're my man. I have your heart remember? It says so right in there.\" I said, pointing to the ring on my finger.\n\n\"Yeah yeah, I know. It's written on a ring so I guess it's probably true.\" He laughed. I always loved the sound of his laugh, so hearty, it shook his entire body.\n\nHe hugged me again, rubbing his bushy moustache against my sensitive ears. \"Thanks for saying yes, Cheyne. Thanks for everything. You saved my life, made me the man I am today.\" He whispered. I could hear him give a small sniff. I had only seen him cry once before but when I glanced up there was a tear halfway down his bristly cheek.",
        "\"Funny, I was going to say something similar. I love you, you know.\" I told him. \"You have my heart too.\"\n\n\"I know.\" He smiled warmly.\n\nWe were married the following year, about five months later. We rented matching suits and I would be lying if I didn't admit that Henry Deacon was the most handsome fellow I've ever laid eyes on. He felt a little foolish being so dressed up but he put up with it because of how I kept eyeing him and telling him how dashing he looked. I think I kept him blushing for nearly the whole day. It was a very intimate affair with only a handful of guests in attendance including Chief Holden flying in all the way from Ganymede along with Mike. The weather, being manufactured of course was very nice, and we made our vows on the end of a wooden dock at a quiet edge of the brilliant blue lake. Neither Henry nor myself had been raised with religion so we had a justice pronounce us married. We both cried a little bit, Henry was becoming such a softie in his older age. I considered it a welcome change from his days of trying so hard to stay numb.\n\nWhen the ceremony was over, we provided our guests with dinner in a small lake house just off the docks. There was some music and dancing, naturally, and that was when I learned that Henry had two left feet. He did his best though and ultimately found his groove during a slow song when we could just hold each other and I laid my head on his shoulder.\n\n\"I'm glad I don't have to dance very often.\" He said quietly.\n\n\"Not me, I could stay like this every night.\" I said, smiling up at him.\n\nHe leaned down and kissed me softly.\n\nAs the night drew to a close, our guests left to find their hotels and the locals headed home. The two of us strolled back to the end of the dock, hand in hand. Unlike Ganymede and Prometheus, the high domed ceiling here mimicked stars that twinkled and glowed unobtrusively and beautiful. We both stared up blissfully. \n\n\"I had a really nice time today, with you.\" Henry told me.\n\n\"Thanks for marrying me.\" I said.\n\n\"Thanks for marrying me back.\" He countered.\n\nWe stood there, newlyweds, friends, and saviors to one another. I couldn't remember a time when I had been this happy or for this long, but then, I knew that such a time had never existed before meeting my marshall. He had shown me over the last five years that I could grow and learn and experience life in new ways with someone who cared deeply for me and wanted me to succeed. Now that I was a full-fledged pilot there were many opportunities available. I could run freight of course, or salvage, but I knew that I most wanted to be a transport pilot, someone who took people where they wanted to go in the cosmos. Some of my few happy moments on Ganymede were when I would see the transport shuttle arrive and families or couples would be reunited. The looks of love in their eyes never failed to soften my heart. \n\nIt would be challenging sometimes, I wouldn't see Henry for weeks at a time in some cases, but we weren't worried. We could miss each other, for a little while, and it would make coming home that much sweeter. We both always knew how much I wanted to see more of the galaxy, that I might never be satisfied until I traversed one end to the other. There was so much to experience out there, and I wanted nothing more than to explore as much as I could. Then, when I arrived back on Olympia I would come home to the person I loved above all else. \n\nI know that we are lucky to have found one another. I know that many times in our lives the darkness was almost overwhelming, but even at our lowest points, nearly lost in the blackness, there was always the light from a distant star to beckon us forward. It didn't take me very long to realize that star, for me, was shining in the heart of Henry Deacon. Though the universe is bright and vast, it is a small thing when compared to what I feel inside for that man. \n\nEND "
    ],
    "authorname": "Dudebulge",
    "tags": [
        "action",
        "love",
        "older and younger",
        "versatile",
        "bisexual",
        "marshall",
        "cheyne",
        "alien11111",
        "sci-fi",
        "ganymede"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/ganymede-station-pt-02"
}