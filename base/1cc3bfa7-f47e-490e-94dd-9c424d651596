{
    "title": "Amnesty Program Ch. 03",
    "pages": [
        "This is a continuation of the story that began with Amnesty Program.\n\n----\n\nThe email from Professor Denton was waiting for Jason when he woke up the next morning.\n\nJason,\n\nYour report from last night was very complete and Professor Suarez and I are pleased with the results. We realize now that we should have let you know that the kinds of exercises we are asking you to complete could result in sexual attraction. While we believe that the kinds of sexual experimentation and play that you have been engaging in with Rebecca are healthy, please understand that the tasks we are setting you do not require sexual activity in order to be successful. We will note this possibility when we orient new subjects into our experiment.\n\nI have a different kind of task for you today. We have discovered that many students that find their primary affirmation by means of their grades become insecure in other areas. They have difficulty believing that people actually like them. This happens with both male and female students, but female students often feel especially insecure about their physical attractiveness. This insecurity can hamper their social lives, causing some women to withdraw. Your task today is to find a way to affirm Rebecca's attractiveness to her in a way that she will accept.\n\nThis is a task we had prepared for later, but given your very fast progress yesterday, we think it will be beneficial to both of you to maintain your momentum. This should be considered a first attempt, and you should not consider it a failure if she does not respond positively initially. Just beginning the conversation is our goal here. I have not communicated this material with Rebecca and I will let you decide whether you will share it with her.\n\nProfessor Dalton\n\n----\n\nJason rubbed the sleep out of his eyes and read the email again before rolling out of bed and heading for the shower.\n\n\"Why are you smiling so much,\" his mother said at breakfast between mouthfuls of scrambled eggs, \"you look like the cat that ate the canary.\"\n\n\"It's nothing. Just had a breakthrough at school yesterday.\"\n\n\"Well that's not nothing,\" she prodded, setting her fork down. \"Tell me the good news.\"\n\n\"I have a new study partner.\"\n\nJason's mom deflated. \"A study partner. That usually doesn't go well.\"\n\nJason scooted his chair back. \"This one can keep up.\" He grabbed his backpack and went for the door. He heard her call \"What's his name?\" as he unlocked his car and his smile widened, but he didn't answer. ----\n\n\"So. Anything interesting happen after I left last night?\" Jason was walking across a wide lawn at the university with Rebecca. She wore a red sundress that had him struggling to keep his eyes straight ahead.\n\n\"No.\" Rebecca smiled to herself. \"Yes.\"\n\n\"Okay, this is why guys don't understand women.\"\n\n\"Yes, I know.\"\n\n\"So...\" Jason ran his hand through his hair, trying to formulate a meaningful question, \"What didn't happen that's interesting?\"\n\n\"Emily's going out with Nathan tomorrow night.\"\n\n\"That's it?'\n\n\"She's uncharacteristically freaked out about what to wear.\"\n\n\"Women.\"\n\n\"Well, think about it- she wants him to forget what she was like the night they met, but she wants him to remember too, so...\"\n\nJason sighed. \"I guess I'd be freaked out too. It doesn't really matter though.\"\n\n\"What?\" Rebecca stopped walking. \"What do you mean?\"\n\n\"Emily won't have any trouble making whatever impression she wants to make no matter what she wears.\"\n\nRebecca crossed her arms and grinned at him. \"Are you saying that you find her attractive?\"\n\n\"Yes. More than she knows.\"\n\n\"More than me?\"\n\n\"Not more than you. Yesterday changes how I see you.\"\n\n\"So if I hadn't given you a blowjob under the table last night, Emily would be more attractive than me?\"\n\n\"You're trying to trap me,\" Jason said carefully, \"but it's not going to work for two reasons: your model of attraction is flawed and your evaluation of your own attractiveness is weighted to the negative.\"\n\n\"You're sweet... and you're just trying to get more blowjobs.\"\n\nJason stepped in and embraced Rebecca warmly. \"Honestly, I can't stop calculating the distance,\" he whispered in her ear, \"between my cock and your lips.\"\n\n\"Me too,\" she squeezed him back and whispered, \"twenty two inches.\"\n\n\"Twenty one.\"\n\n\"You think I'm wrong?\"\n\n\"No,\" he smelled her hair, her perfume, \"the distance just changed.\"\n\n\"I like that,\" she cooed.\n\n\"Yes, but now I'm going to have to walk around with my jeans all bulging in front... I guess it won't matter much though.\"\n\n\"Really? Why not?\"\n\nJason smiled at her. \"I'm with you, and you're wearing a red dress. That makes me pretty much invisible.\"\n\nRebecca snorted and stepped back. \"That'll be the day. You're in some sort of hormonal reality distortion field.\"\n\n\"You want to make a bet?\"\n\n\"Sure- how are you going to prove it?\"\n\nJason thought for a moment. \"We walk the sidewalk from here to the sociology building at the next break. I'll count the number of guys that check you out and you can count the number of girls that notice my, uh, condition.\"\n\nRebecca looked at him skeptically. \"That's a long walk. You might not stay in 'your condition' the whole way and that would skew the results.\"\n\nJason shrugged. \"I don't think this is going away anytime soon, but I'm sure a girl with your imagination can think of ways to make it fair.\"\n\nRebecca thought for a minute, and a wicked smile spread across her face. \"All right.\"\n\n\"So,\" Jason said, \"When I prove you wrong I get to do another round of attractiveness research with you as the subject.\"\n\n\"If. If you prove me wrong. If not... I get to write your daily report to Professor Dalton tonight. Agreed?\"\n\n\"A factual report?\"\n\n\"Not remotely.\"\n\nJason swallowed. \"Agreed. Classes get out any second now.\" Students were already starting to trickle out of the buildings.\n\n\"Well it's not fair for you to be the only one poking your clothes out.\" Rebecca reached behind her back. A couple of shrugs and she was grinning at him and asking him sweetly to hold a strapless red bra for her. Jason took it, stunned. Rebecca had thrown her shoulders back and was arching an eyebrow at him. Just as he noticed her nipples poking at the fabric she leaned forward and touched them lightly to his chest. She tipped her chin up and kissed him slowly and deliberately. Her hands wandered up and touched his forearms.\n\n\"Nineteen inches?\" she asked, her lips still touching his.\n\nJason groaned. \"At most.\"\n\n\"Perfect!\" she said. She grabbed his hand to keep him from covering himself and pulled him to the walkway.\n\nJason folded the bra as small as he could with one hand and tried to walk naturally. He noticed that Rebecca's new flirty bounce had cooled to a smooth stride so she wouldn't attract as much attention. He started to wonder if he could win after all.\n\n\"One,\" Rebecca said, grinning as she walked.\n\n\"Who?\"\n\n\"The one in the yellow sweater.\"\n\n\"That was a guy.\"\n\n\"Counts.\" She looked at him out of the corner of her eye. \"Don't argue. Two-- girl with the red glasses.\"\n\nJason felt his face burning, but then he caught four guys in mid-stare, following Rebecca shamelessly. \"Four for you,\" he said, \"from the barber shop quartet. And the guy on the phone makes five.\"\n\nAt the halfway mark, Jason had counted sixteen guys checking Rebecca out and she had seen six people ogling Jason, including Yellow Sweater.\n\nRebecca needed to even the score. She talked out of the corner of her mouth. \"When was the last time you masturbated?\"\n\nJason's face flushed. \"Yesterday. You were watching.\"\n\n\"I did it this morning,\" Rebecca let her voice get a little louder, \"while I thought about how good it felt licking the tip of your dick.\"\n\nJason opened his mouth, shut it again.\n\n\"That's not all.\" Rebecca slowed her pace a little. \"I was imagining what your tongue will feel like on my pussy. What do you think that's going to be like?\"\n\n\"I, uh...\" Jason started to worry about coming in his pants.\n\n\"I mean, do you think I'll feel all zing, sharp and tingly exciting or will it be swirly sweet, warm and wonderful?\"\n\nRebecca counted two more, silently.\n\n\"That's what I was thinking about, playing with myself this morning. Your tongue all over my pussy.\" She sighed dramatically. \"I didn't make myself come though. It was very hard to stop.\"\n\n\"You stopped?\" Jason's voice was a little strangled. \"Why?\"\n\n\"I wanted to share,\" she said quietly, smiling, \"with you.\"\n\n\"I'm not going to make it to the sociology building.\"\n\n\"You're about to come in your pants?\" she asked incredulously.\n\n\"Yes. Please... just... sheesh.\"\n\n\"I can't ever remember,\" Rebecca said conversationally, \"how to do hexadecimal conversions.\"\n\nJason had his hands on his knees. \"What?\"\n\n\"Do you know? I mean, like, what is 931 in hex? How would I convert that?\"\n\n\"Uh, you divide by two hundred fifty six first. It's easier if you can remember the highest number in each place.\" Jason stood up, took a deep breath. \"fifteen in the first place, two hundred fifty five in the second place...\"\n\n\"Four thousand ninety five in the third place, sixty five thousand five hundred and thirty five in the fourth place.\" Rebecca finished for him. \"Can you make it to the sociology building now?\"\n\n\"Yeah,\" Jason grinned at her. \"Thanks. I lost count though.\"\n\n\"That's fine,\" Rebecca stopped and grabbed her bra from him, slipped it into a pocket in his backpack. \"You can win. I'll be your research subject. I'm going to make you pay though.\"\n\n\"How?\"\n\n\"I want to do my own research first.\" She took his hand and squeezed it. \"Come with me.\"\n\n----\n\nJason hadn't ever been in a women's bathroom before. Rebecca just led him right into the women's in the sociology building like it was the most natural thing in the world and he followed. He didn't know what she would have done if someone had been at the sinks. She slipped into the first stall with him and bolted the door.\n\n\"Put your hands on the walls.\"\n\nJason did what she said. He was facing the toilet with Rebecca behind him. He could feel her breath on his back. His cock was uncomfortably hard.\n\n\"Don't move them.\" Rebecca reached around his waist, unbuckled his belt, and loosened his pants. She worked with her eyes closed, the side of her face resting against Jason's back. She could hear his breathing and the beating of his heart. She smiled. She pulled his pants down just enough, slipped her thumbs into the sides of his boxers and pulled. They got snagged on his cock and Jason drew in a sudden breath.\n\nRebecca stifled a laugh and peeked around under Jason's arm so she could stretch the elastic of his underwear to clear his penis. It stood up straight. She never touched him. She went up on tiptoe, put her lips next to his ear.\n\n\"Don't talk, okay? Just nod or shake your head. If any other girls come in, I don't want to stop, and your voice...\"\n\nJason nodded.\n\n\"Good. I want to know exactly what I said that got to you out there. What pushed you to the edge? Was it that I told you that I played with myself this morning?\"\n\nJason paused, shook his head. His cock bounced a little.\n\n\"Was it that I was remembering your cock in my mouth?\"\n\nHis cock bounced again and a tiny drop of clear fluid appeared at the tip, but he shook his head again.\n\n\"Was it... that I didn't let myself come this morning? That it was hard to stop?\" She touched her nose to his neck and inhaled deeply. \"I know what 931 is in hex because I did that one this morning so I could wait for you. It's 03A3.\"\n\nJason's breaths were coming faster. He shook his head slowly.\n\nThe bathroom door opened and two girls walked in, talking loudly about a recent episode of something on television.\n\nStartled, Jason's took his hands off the walls momentarily, but he quickly put them back.\n\n\"So,\" Rebecca whispered in his ear, \"it was when I imagined what your tongue would feel like on my pussy?\"\n\nJason let out a shuddering breath. He nodded.\n\nRebecca slid her hands up under his shirt, over the firm sculpture of his stomach.\n\n\"Because that was exciting for me too. I think it's going to be sweet and hot when you lick my pussy. I imagined feeling the tip of your tongue on my little damp lips down there- slipping up and down, slowly. You made circles and spirals. You brushed my clit with your lips. You blew on me softly. It made me squirm and wiggle.\"\n\nJason's head was down and he was trying not to breathe too loudly. The other girls finished touching up their makeup. Their chatter faded quickly as the bathroom door closed. Rebecca's breasts were brushing his back.\n\n\"But do you know what was the most exciting for me?\"\n\nJason shook his head. She watched his cock twitch rhythmically.\n\n\"If you don't already think I'm a pervert, you will now.\"\n\nJason grunted a half laugh. Shook his head. The head of his cock turned a dark purple and a clear drop slid down and dripped from the edge of his crown to the floor.\n\n\"I imagined I was you,\" she pressed her body into his back, \"and I was licking my own pussy. I felt every taste bud on your tongue rub across my clitoris. I tasted myself. I felt my fingers tangle in your hair, pulling your face in closer. When I started to come I slipped your tongue into my pussy and felt it squeeze.\"\n\nRebecca felt Jason's stomach muscles spasm a fraction of a second before he came. His come splattered against the back wall of the stall and got all over the chrome valve. A few drops got on the seat. His body was hunched forward, the tips of his fingers white, pressing into the walls. He let out a groan, his teeth clenched. Rebecca scratched Jason's stomach lightly with her fingernails and felt his whole body shudder as his orgasm played out. He gulped for air and finally dropped his arms, his penis still standing straight out from his body. The last drop of semen stretched from the tip and finally fell.\n\nRebecca spun a length of toilet paper off the roll as Jason leaned against the tile wall, exhausted. She smiled at him as she wiped off the seat. \"That,\" she said, \"was the most beautiful thing I've ever seen!\"\n\nThe door opened and a woman went into the stall next to them, slamming the door.\n\nJason's face went white and he stood stone still. Rebecca sat down quickly on the toilet. She put her finger to her lips. Her eyes sparkled at him and she raised her eyebrows. She mouthed two words at him, \"watch this.\"\n\nShe waited for the woman to sit, then called out, \"Excuse me? Sorry. No TP.\"\n\nJason heard the roll rattle in the next stall and a few seconds later a woman's hand appeared under the partition holding a neatly folded bundle of toilet paper.\n\n\"Thanks!\" Rebecca said, grinning hugely. She wiped the tip of Jason's cock with the paper, then cleaned up as much of the chrome as she could while he got his pants up. She flushed and nudged him out of the stall and they ran.\n\nRebecca started laughing in the hallway, holding Jason's hand and running for the outer doors. The startled look on Jason's face softened as he ran, turned into a grin. They burst through the doors and on to the lawn outside and collapsed in the grass, both of them laughing hysterically.\n\nPeople walked around them with their heads down on their way to some class or other, not even curious.\n\nJason was on his back with his breathing finally returning to normal. \"That was... yess\" he sighed, and Rebecca curled up next to him, her head on his shoulder. \"I made you come with my voice,\" she said, with a hint of awe.\n\nJason smiled at the sky. \"You made me come with your mind.\"\n\n----\n\n\"So I just have to stand around at the mall?\" Rebecca was in the passenger seat of Jason's car as he pulled out of the parking lot.\n\n\"Yes. I'm going to collect some data.\" He was happy and relaxed.\n\n\"All right, but I'm not wearing this. Can we stop by my apartment on the way so I can change?\"\n\n\"What are you going to wear?\"\n\n\"What I would have worn two days ago.\"\n\n\"Hot librarian?\"\n\nRebecca giggled. \"No. Just plain librarian.\"\n\nJason pulled into a parking space at Rebecca's apartment. \"We'll see about that.\"\n\nHe followed her to her door but before she opened it she turned around and looked up into Jason's eyes.\n\n\"I like playing games with you. You're sweet and smart and when I'm with you I'm excited,\" She stepped towards him, \"all the time.\"\n\nJason wrapped his arms around her and kissed her, let his hands travel down her back, over the swell of her ass. He pulled her into his body and held her there.\n\n\"I have a little question,\" Rebecca said, breathlessly between kisses.\n\n\"Yes?\" he said, moving his lips to her neck.\n\n\"Do you think I'm a pervert?\"\n\nJason laughed, then saw that she was serious. \"Why are you asking me this now?\"\n\nRebecca was quiet for a moment. \"I just realized that I care what you think of me...\"\n\n\"What you said in the bathroom,\" Jason said, looking directly into her eyes, \"was true and vulnerable. You were more naked in there than I was, and you saw what it did to me. As far as I'm concerned, you're only as perverted as your lies.\"\n\n\"Thank you. You've been so patient.\" She closed her eyes and hissed as his lips lit up the skin behind her ear. \"I thought guys always wanted to get, you know, right down to business.\"\n\nJason stepped away a little and looked in her eyes thoughtfully.\n\n\"This is business. This and the stall and messing with Emily's head and everything all the way back to that terrifying talk in the elevator.\" Jason grinned. \"Our games are fun because they're new, and they're only going to be new once.\"\n\n\"I like that about you.\" Rebecca smiled at him, turned, and went into her apartment. He was going to follow her all the way to her room to see if he could get his head under her dress, but he stopped short in the dining room.\n\nEmily was sitting at the table, eating a bowl of Lucky Charms. \"Well now,\" she said, around a mouthful, \"that's a record-breaking boner.\"\n\nJason looked down at himself. His cock was sculpted into his jeans. He covered himself with his hands, realized the futility, and gave up.\n\n\"You should have seen the first one.\" Rebecca called on her way to her room.\n\nEmily's eyebrows rose. \"Really? Sit. Talk.\" She pointed her nose at the chair across from her at the table.\n\nJason sat, grateful for the concealment of the tabletop, uncomfortable with the direction the conversation was going.\n\n\"You look like you're about to put your clothes through our laundry again,\" Emily teased.\n\n\"I hear,\" Jason said, getting some composure back, \"that you can't decide what to wear for your second date with Nathan.\"\n\n\"Tou-fucking-ch\u00e9.\" Emily drank the last of the milk from the bowl. \"Looks like you've made an impression on Rebecca.\"\n\n\"She's made an impression on me.\" Jason said, reaching for the box of cereal.\n\n\"So, have you two been discussing my sorry dating life all morning?\"\n\n\"Nope.\" Jason tossed a couple of mini-marshmallows in his mouth. \"We've been having a scientific discussion.\"\n\n\"Right. Scientific like yesterday?\"\n\n\"Yes,\" Jason smiled, \"just like yesterday. You might have come up once or twice.\"\n\n\"Just how pathetic did you decide I am?\"\n\n\"Not pathetic at all. Smart, beautiful, convincing.\"\n\nEmily raised her eyebrows. \"You said that to Rebecca?\"\n\n\"She can take it. I told her it doesn't matter what you wear. You'll make your point.\"\n\n\"What do you think my 'point' is?\"\n\n\"Forget, but don't forget.\" Jason dug more marshmallows out of the cereal.\n\nEmily's nose wrinkled. \"And they say women are confusing.\"\n\nRebecca came out wearing a knee length grey dress, short sleeves with buttons up to her neck, her hair up in a bun held with a couple of Dixon Ticonderoga #2 pencils. She wore Mary Janes.\n\n\"I'm ready,\" she said.\n\nJason stared.\n\nEmily looked at her, then back at Jason. \"Oh honey,\" she said to Rebecca, \"this one's a librarian pervert.\"",
        "Rebecca put on a petulant face. \"Let's hope so,\" she said, and went out the door.\n\nJason knocked over his chair following her.\n\n----\n\nThe ride to the mall was strangely subdued. For all her flirting earlier, Rebecca seemed to take the role of prim librarian to heart. She talked about authors and genres. She touched on the Shakespeare authorship debates. Jason found her infuriatingly hot and inaccessible. If she knew she was driving him crazy, she didn't let on. The conversation turned to education.\n\n\"What classes are you skipping today?\" she said, smoothing her dress over her knees.\n\n\"Early American Government and Health.\" Jason found his eyes wandering to her legs. \"I'll only have to check into Government once a week. Health I can skip the rest of the term and still get an A. You?\"\n\n\"Just chemistry today. I did most of the material in homeschool though, so I won't miss anything. I just have to take the tests.\"\n\nJason drove in silence for a while.\n\n\"Did Professor Denton give you an assignment today?\" Rebecca asked suddenly.\n\n\"Why- did you get one from Professor Suarez?\n\nRebecca folded her hands on her lap. \"Yes. It was short. She said that I should try to learn something about myself from you today. Something that you know better than I do.\"\n\nJason nodded.\n\n\"What does that mean?\"\n\nHe smiled and signalled to turn into the mall. \"You're a beautiful woman.\"\n\nRebecca rolled her eyes. \"I'm your weird sex gnome. What did the email say?\"\n\n\"I'll send it to you tonight. It's going to be more fun if you don't read it yet.\"\n\nTo Jason's surprise, Rebecca seemed to relax a little.\n\n\"Well, if you say it'll be more fun, I guess I can wait.\" She allowed herself a very unlibrarianlike crooked grin.\n\n----\n\nIt couldn't have turned out better for Jason at the mall. There was a book fair set up in the main concourse of the mall between the other shops. Jason gave Rebecca a nudge toward the books and she didn't argue. She was in her element. The sun came through a skylight over the tables of books and lit her up like a spotlight.\n\nJason opened the voice recorder app on his iPhone, pulled a clipboard, a short pencil and a sheet of paper out of his backpack and waited at the entrance to a stationery store for his first subject. He didn't have to wait long. A young businessman walked by slowly, looking for someone.\n\n\"Excuse me sir,\" Jason said in what he hoped was a good researcher voice, \"I'm doing a survey on first impressions. Can I get your help?\"\n\nThe man stopped. \"Okay, but if my appointment shows up I have to leave.\"\n\n\"No problem at all,\" Jason said, surreptitiously starting the recording, \"I'm going to ask you a few questions about someone. I'm looking for your impressions. Answer with the first thing that comes to mind.\"\n\n\"All right.\"\n\n\"Great. Do you see the lady in the grey dress looking at books?\"\n\n\"With the brown hair?\"\n\n\"Yes. That's her.\" Jason said, noting the beginning time of the recording. \"She's a university student. What do you think her major is?\"\n\n\"I'd say she's some sort of designer- maybe graphic design or fashion design.\"\n\n\"Why do you say that?\"\n\n\"Well, she dresses conservatively, but it seems to be ironic, like she's emphasizing her beauty by hiding it. I see that in designers a lot.\"\n\n\"So you think that she's attractive.\"\n\n\"Sure. Yes. Of course.\" the man said quickly, \"Did I get it right?\"\n\nJason had to think fast. \"I don't know. She's a model the psych department hired for the study.\"\n\n\"A model,\" the man thought for a moment, \"that seems right too.\"\n\n\"Why do you say that?\"\n\n\"Well,\" he said, evaluating Rebecca, \"she has great skin, she knows how to carry herself, and she can make a plain grey dress look fantastic.\"\n\n\"What would you guess about her intelligence?\" Jason asked, pretending to tick off boxes on his clipboard.\n\nThe man looked at him strangely. \"She's reading Kant's Critique of Pure Reason.\"\n\n\"I'll put that down as 'high.'\" Jason improvised. \"That's it. Thank you very much.\"\n\n\"You're welcome. I don't suppose you know if she's single?\"\n\nJason shrugged. \"It would be a fairly large breach of privacy to tell you that even if I knew. Sorry.\"\n\n\"I've got to go. Good luck.\" The man had seen someone across the concourse and hurried away.\n\n----\n\nAt first, when she entered the book fair, Rebecca drifted towards books about impressionist painters, which led her to the photography books, which led her in turn to the true crime books. She went from subject to subject, from children's books to philosophy, to 501 things to do with rubber bands. Time seemed to stand still whenever she was around books. There was a calming sureness about them, their smell, their finiteness. She held a fat biography just to feel the weight in her hand. Then she found the used books. She sniffed the pages of seventy-year-old pulp novels and caressed the cover of a leather-bound volume of Elizabethan poetry.\n\nShe was vaguely aware of Jason having conversations with other people, occasionally, then she would find another treasure.\n\n----\n\nJason moved to the next store- a nutritional supplement store that catered to body builders. A fine specimen of their clientele was just coming out of the shop with an immense tub of protein powder. Jason started the recorder.\n\n\"Excuse me,\" Jason said, \"can I ask you a few questions for a survey I'm doing?\"\n\n\"Sure.\" The man looked like he always dressed for the gym.\n\n\"See the woman over there in the grey dress?\"\n\n\"Holy shit,\" the bodybuilder said with feeling, \"she's one fucking hot piece of ass.\"\n\n\"Oh, uh, yes she is,\" Jason stuttered, and tried to get back on track. \"What do you think her major is in college?\"\n\n\"God, I hope she's going to be a nurse.\" His face became wistful. \"If I was in her ward I'd wet myself just to get a sponge bath.\"\n\n\"Uh,\" Jason stumbled, \"uh, so, you'd say she qualifies as 'attractive?'\"\n\n\"Attractive, hell. I'd like to pop the buttons off that dress and show her what she's missing.\"\n\nJason felt the conversation slipping away from him. \"What do you imagine she's missing, exactly?\"\n\n\"Well, I'd say she's starving for some good head.\" the man had set down his supplements and had his arms crossed, appraising Rebecca carefully. \"The tighter a woman is wound up, the more she appreciates a little oral skill, and that chick looks pretty wound up. Then I'd bend her over a stack of dictionaries and teach her a few of the finer points of a slow, gentle fucking. And when she started to beg for a pounding, I'd let her have it with all the extras.\"\n\nJason caught himself staring, dumbfounded. Finally he managed, \"'Wound up'? Why do you say that?\"\n\n\"Shit. She's messing with our heads. She's dressed to undress. Look at all the contradictions. She could have pink panties under there or a leather thong. She wants us to wonder. You pull those pencils out of her hair there's going to be an explosion. The question is whether you just die or if you die happy.\" The bodybuilder shook his head in admiration. \"And she's flipping through a fucking puppy calendar. A puppy calendar. Fucking hot piece of ass.\"\n\n\"So if you were to make a guess about her intelligence...\"\n\nThe bodybuilder shrugged and grinned. \"Well, she doesn't exactly have to earn her grades, does she? But she looks really fucking smart. What kind of research are you doing?\"\n\n\"First impressions...\"\n\n\"Right. My impression is that she's a squealer, but she might be one of those girls that's different depending on on what you're doing. My girlfriend can be totally silent when she's fingering herself, but she squeals when I'm hitting the right spot in her pussy and she's about to come.\"\n\n\"You'd better be talking about me.\" The voice came from behind Jason and he jumped.\n\nThe bodybuilder smiled. \"Hey Baby. I was just telling this guy about how you squeal when...\"\n\n\"That's enough telling,\" she said, walking up to him and grabbing a fistful of his tank top, \"and not enough squealing.\" She had spiked bleach blond hair. It fit her. She winked at Jason over her shoulder and dragged her grinning boyfriend away.\n\nJason stopped the recording.\n\n----\n\nRebecca was looking at a book of paintings of three masted sailing ships when Jason appeared on the other side of the table. He looked a little pale.\n\nHe bought her an old book on how to use explosives she was carrying around. He'd have to ask her about that.\n\n\"So, what's the verdict,\" she said, moving into step next to him, \"Do I pass? Why do you look so... green?\"\n\nJason didn't answer. He just led her to a bench that was a little out of the way.\n\n\"I'll let you hear for yourself.\" He pressed play for the businessman's interview.\n\nJason watched Rebecca's face as she listened, watched it change from a frown of concentration to a suppressed smile to wonder.\n\n\"He really wanted to know if I'm single?\"\n\n\"You heard it just like it happened,\" Jason said.\n\n\"What's this?\" Rebecca pointed to a note scrawled on the paper. It said \"Skip 2:14 to 4:18\"\n\n\"Oh, uh, that guy really crossed a line.\"\n\nRebecca raised an eyebrow.\n\n\"It's totally inappropriate.\"\n\n\"Let me hear it.\" she said, and her tone warned not to argue.\n\nJason closed his eyes and hit \"play.\"\n\n\"Holy shit,\" the bodybuilder's voice came clearly out of the tiny speakers of Jason's phone, \"she's one fucking hot piece of ass.\"\n\nThe phone's battery died.\n\nJason looked at Rebecca's face, expecting anger or disgust.\n\nHer cheeks reddened a little and she swallowed. \"I want to hear it,\" she said quietly. \"All of it.\"\n\nJason's attempts to get the phone to turn back on, though, were met only with a sultry red recharge icon.\n\n\"I left my charging cable at home,\" he said, hoping Rebecca's resolve might weaken.\n\n\"Let's go then,\" she said, looking every bit the strict librarian.\n\n----\n\nJason thought she was furious. She had been silent ever since they got into the car. He was driving down tree-lined neighborhood streets toward his house. He broke the awkward silence. \"I'm sorry- this was a bad idea. I thought it would be a slam-dunk and I was wrong.\"\n\n\"No, I'm sorry,\" she said quietly, \"I'm just confused. I thought I was the kind of person that would be offended at that kind of comment, but the only thing I can think is that he was talking about me. Me. And I kind of like it.\"\n\nJason shrugged. \"Yeah. Well,\" he said, \"he didn't stop there.\"\n\n\"Really?\" Rebecca turned to him, her face interested. \"What else did he say?\n\n\"I'll play it for you when we get there.\"\n\n\"Well, okay, but I think you owe me.\"\n\n\"I'm sure I do- what are you thinking though?\"\n\nRebecca grinned a little. \"Since we met, you've had four orgasms and I've only had one.\"\n\nThe car sped up a little. \"That's a shocking injustice,\" he said, \"and I intend to do what any good all-american boy would do to make things right.\"\n\n\"And what's that?\"\n\n\"I'll buy you a dildo.\"\n\nRebecca laughed and hit his arm. \"I don't need a dildo.\"\n\nJason laughed with her. \"I'll give you anything you need.\"\n\n\"Will you do anything I need to have done?\"\n\n\"With pleasure,\" Jason said, \"but I'm afraid my mom is going to be home.\"\n\n\"Shit, I am going to need a dildo.\"\n\n\"No, but listen. Your favorite cookies are oatmeal chocolate chip.\"\n\n\"What? I like ginger snaps.\"\n\n\"Look, I love my mom, but she's nosy. She's going to try to get right in the middle of things.\"\n\n\"That could get really awkward.\"\n\nJason laughed. \"Yes. At some point she's going to ask what kind of goodies you like. You're going to say...\"\n\n\"Oatmeal chocolate chip.\"\n\n\"Yes. And then everything will be fine. Here we are.\" Jason pulled into his driveway.\n\nThe door opened before Jason could even get his key out and his mother appeared in the doorway.\n\n\"Jason! Who's this?\"\n\n\"Hi Mom, this is Rebecca- she's the study partner I told you about. The one that can keep up.\"\n\nJason's mom opened her mouth and shut it again. \"I thought you were... Well! Anyway. Aren't you cute! Come in- I'll clear a place at the table for you two to work.\"\n\nJason rolled his eyes and Rebecca stepped close.\n\n\"I'm not 'cute,'\" she said so only he could hear. \"I'm a fucking hot piece of ass!\"\n\nJason went into a coughing fit and stumbled into the kitchen, Rebecca following smugly.\n\nJason's mom called from the kitchen, \"You okay, honey? Here's a glass of water.\"\n\nShe came in, water in one hand, a dish towel in the other. \"Poor dear. He has sensitive lungs. Call me Diane.\"\n\n\"Mom! I do not have sensitive lungs,\" Jason said, snatching the water out of her hand. \"Rebecca just said something...\"\n\n\"...that he's going to have to look up in the dictionary.\" Rebecca crossed her arms. \"It upsets him when I do that.\"\n\nJason spit out his water, tried to disguise his laughter as coughing again.\n\n\"Well,\" Diane said, \"I hardly ever understand what he's talking about. Here. You two can just set up all over the table here.\"\n\n\"Oh, Mom, sorry,\" Jason said, \"We need a cable in my room. We're going to set up in there.\"\n\nDiane deflated a little. \"Oh, alright then.\"\n\nJason led Rebecca down a short hall to his room. She wasn't surprised to see that it was neat without being fussy. She looked around while Jason plugged in his iPhone. He hadn't done a lot to make the space his own. She guessed it was because his mother seemed to be pretty intrusive.\n\n\"Why don't you close your door?\" she asked absently, as she looked over a few textbooks in his bookcase.\n\n\"Mom.\" He said simply, \"I bring you home looking good enough to eat and I shuffle you into my room and close the door... well, it's a rare mother than can let that go. My mother is not rare. She'd have her ear pressed to the door all afternoon. An open door though? At least we might know when she's around.\"\n\n\"You've thought this through.\"\n\n\"I'm a survivor. I have scars.\" Jason sat down on the floor, leaning against his bed. Rebecca sat next to him.\n\n\"So. What other dirty things did that guy say?\"\n\nDiane was suddenly in the doorway. \"What guy?\"\n\nJason froze.\n\n\"Oh, it's this subject in a research project we're doing,\" Rebecca said smoothly, \"and he has Turettes Syndrome. Poor man can't stop cursing.\"\n\n\"I think I've heard of that,\" Diane said, leaning against the door, \"it's tragic, isn't it.\"\n\nRebecca nodded earnestly. \"Oh yes. Our subject said, um, excuse me, 'shit,' nine hundred and thirty... what was it?\"\n\nJason squirmed. \"Nine hundred and thirty one times in a row.\"\n\nRebecca nodded at Diane. \"Imagine!\" \n\n\"Well. That must be awkward. Listen- I was going to get some goodies and I just wondered if there's anything you kids want?\"\n\n\"Do you have any cookies?\" Jason asked.\n\n\"Not yet,\" Diane smiled, \"what kind do you like, Rebecca?\"\n\n\"Oh, I like all cookies, but my favorite is oatmeal chocolate chip.\"\n\nDiane flashed a huge smile. \"Oatmeal chocolate chip cookies it is.\" She disappeared down the hallway.\n\nRebecca turned to Jason, \"Are you going to explain that?\"\n\n\"Now she's going to be banging around in the kitchen, maybe four minutes of uninterrupted time.\"\n\n\"Then what?\"\n\n\"Then she's going to realize that we're out of chocolate chips.\"\n\nRebecca kissed him. \"You're brilliant.\"\n\nJason's iPhone finally made a little bleep and booted up. He plugged in a pair of earbuds and handed one to Rebecca. They had to sit close so she could share the tiny earpieces. \"Are you ready?\"\n\nRebecca's face had an intensity he hadn't seen before. She nodded.\n\nJason pressed play.\n\n\"Holy shit, she's one fucking hot piece of ass,\" the bodybuilder's voice played in Jason's head, and he hoped it wasn't as bad as he remembered.\n\nHe looked at Rebecca's face. Her eyes were closed, concentrating on the interview. She fumbled for his hand, squeezed it.\n\n\"...when she started to beg for a pounding,\" the voice was saying, \"I'd let her have it with all the extras.\"\n\nRebecca's lips parted and Jason watched her breasts rise and fall with her breathing. He could hear his mom using the hand mixer in the kitchen. The interview ended.\n\nRebecca pulled the earpiece out, stared straight ahead. She bent her knees up and hugged them.\n\nJason pulled his earpiece out. \"Are you okay?\"\n\n\"I'm either going to melt or explode.\"\n\nJason pulled one of the pencils out of her hair, slowly and her hair loosened. He pulled the other one out and her hair fell over her shoulder.\n\nDiane's voice floated in from the kitchen, \"Oh, for heaven's sake.\" A few drawers and cupboards banged. \"Jason!\" she called, \"I have to run to the store. I'm out of chocolate chips.\"\n\nRebecca was having a hard time holding still. \"Okay!\" Jason called. His voice sounded strange in his ears. He held his breath, heard the car keys jingle, the garage door open, the car door slam. Rebecca whimpered. The car started, clunked into reverse. The garage door started to close.\n\nJason's lips were on hers before she even saw him coming. She kissed him back hungrily, her hand on the back of his head. \"You,\" she gasped, \"are going to die happy.\" He kissed her neck and she bit his earlobe. Jason grunted, sat back on his knees and pulled his shirt off in a smooth motion. Rebecca sat up against the bed, breathing hard. She watched him to see what he would do next. Her eyes burned into him. She put her hands over her head and waited.\n\nJason took her in, sitting against his bed, her hair wild from the kiss, her knees slightly parted. Her dress fell between her thighs. He crawled to her and she watched him like he was a predator. He ran his hands up her thighs, watching her eyes, exposing her legs, her panties. \"Yellow,\" he said.\n\nHe touched one of the buttons between her breasts with his tongue, took it between his teeth and pulled. The thread held and pulled, finally popped off. He spit the button across the room and looked into the opening in the dress between her breasts. He saw a flash of color. \"Yellow.\"\n\nRebecca watched his eyes, watched the muscles bunch and roll under his skin. She squirmed.\n\nJason kissed the inside of her left knee, twice and she widened her thighs. He kissed the inside of her right thigh, lingering, tickling his lips up to the hollow at the top of her leg. He ran the tip of his nose along the edge of her panties and stopped to look at her face, to watch her bite her lip. He kissed the top of her right thigh and slid his hands up to pull down her panties. He rested his cheek against the inside of her thigh and paused, looking at her pussy for the first time. He loved every moist curve and wrinkle. He loved the light dusting of fine, soft hair. On an impulse, he blew on her lips gently. Rebecca tipped her pussy up at him, inviting. He kissed her like it was her mouth, feelingly, then he breathed in her scent, licked slowly straight up the middle.\n\n\"Ohhh,\" she breathed, then as he licked again, his tongue wider and softer, \"that feels fantastic.\"\n\nHe smiled and started to play in earnest, making shapes, swirling his tongue in her flavor, memorizing which spots made her hiss, which ones made her moan, which ones made her jerk and squirm.\n\nRebecca's head pressed back against the bed, and her hands dropped down to cradle Jason's head. The pleasure was effortless, she was caught in Jason's current, drifting, spinning, tumbling, unable to stop the sweet growing pressure that crept through her body. He sped up and she felt Jason's arms curl around her thighs and felt his fingers tighten against her flesh. She knew vaguely that she must be bucking and rolling against him. He slowed a little, found her clitoris and softened his tongue against it. He swayed his head.\n\nThe feeling was immediately completely different, completely right. \"Oh yess. That's...\"\n\nHe did it again, two more times and Rebecca exploded in orgasm. She felt it flow through her like electricity. Her teeth clenched and a rising squeal stopped suddenly as her whole body clenched and shook.",
        "Rebecca's orgasm was unmistakable. Jason felt her hours of mounting tension suddenly release in just a few seconds. He felt the climax take her away, and he could feel her thighs begin to relax as she came back to him, shivering. He kneeled between her legs and felt sweat trickle down his back. When he looked at her face, she had tears in her eyes. She could only manage to mutter, \"How?\" and smile softly at him.\n\nJason looked sheepish. \"I imagined I was you, feeling my tongue on your pussy. You taught me.\"\n\nRebecca put a hand on his chest, felt like she was touching something magical.\n\nJason leaned into her. \"This is your taste,\" he said, and kissed her deeply.\n\nRebecca kissed hungrily, letting her tongue slip out of Jason's mouth and let her lips wander his chin, his cheek, the tip of his nose. \"This is our taste,\" she said, and kissed his mouth again.\n\n----\n\n\"How long?\" she asked, lazy minutes later.\n\nJason sighed. \"We'll hear the brakes squeal a little when she comes around the corner. Then it's less than thirty seconds before she's in the house. We might have fifteen more minutes.\"\n\n\"Fix my dress.\" Rebecca started unbuttoning the grey dress, pulling it open a little wider with each button. She dropped it on the floor.\n\nJason stared at her in awe. She wore only the yellow bra, then she wasn't wearing anything at all. She smiled at him and wandered to his closet, picked out a flannel shirt and put it on. She found her panties, but wrinkled her nose and dropped them. She opened Jason's underwear drawer and found a purple and grey pair of plaid boxers that matched the shirt.\n\nJason couldn't concentrate on finding the button. He watched, fascinated, as she dressed in his clothes, dwarfed by them.\n\nRebecca found a well-worn pair of jeans and slipped into them, concentrated as she threaded the too-big belt into the loops. She rolled up the legs and struck a pose, picked up her pencils and twirled her hair effortlessly into her librarian bun.\n\n\"You're beautiful.\"\n\n\"Right now,\" Rebecca said, \"I feel beautiful.\" \n\n\"I know that better than you do.\" Jason found the button and stood up, the dress hanging from his left hand, the button in his right. \n\nRebecca suddenly stepped close and hugged him warmly, her cheek against his naked chest. \"Thank you.\" She kissed the hollow at the base of his neck and unbuttoned his pants. She pulled his boxers down and gripped his penis in her hand, the long sleeve of his shirt completely covering her hand. She squeezed, closed her eyes.\n\n\"It wasn't at all what I imagined,\" she said, \"your tongue on my pussy. It was different. More.\" She sank to her knees and licked the head of his cock. \"You made me feel safe.\" She slid her mouth over his erection and sucked on the way back. \"I trusted you, and you...\" She let the tip of her tongue tease the bottom of his head, \"...you made me explode.\" \n\nJason watched Rebecca's eyes turn up to his as she swirled his cock. She experimented, sucking, licking, pumping with her right hand, the sleeve of his shirt slapping against his thigh. He realized with a jolt that she was doing it too- dressed in his clothes, imagining what he felt like. He dropped the dress.\n\nSuddenly she started moving faster, tonguing the hole in the tip of his cock, twisting her head, moaning. He saw that she had her left hand inside her... his pants, inside his underwear, fingering herself. She held his balls in her other hand and was scratching him lightly with her fingernails. She pulled back a little, looked in his eyes. She was almost gone. \"Do you trust me?\" she said, breathlessly.\n\n\"Yes.\"\n\n\"Don't be afraid.\"\n\nRebecca covered his cock with her mouth again, now the frantic movement of her hand translating to her mouth. Jason felt her teeth touch the skin of his cock just under the head. She licked his tip frantically as she sped her hand. Suddenly, he felt her bite down slightly, just enough to feel, but the rest of her body went rigid, her shoulders tightened and her eyes squeezed shut with her orgasm. He came with her, shuddering. He heard her squeal through her nose so she could take all of his come in her mouth.\n\nRebecca opened her eyes and slid Jason's cock out of her mouth slowly, leaving him clean and slick. She swallowed easily and smiled. She learned fast. She pulled his pants up as she stood and kissed him.\n\nThey heard brakes squeal.\n\nRebecca put her hand on Jason's arm, a huge smile on her face. \"You've been telling me I'm beautiful all day, and I only believed you just now.\" She squeezed his arm. \"Now save us.\"\n\nJason closed his eyes for one second, then he started talking as he put on his shirt. \"Okay. You take my laptop to the living room. You'll be there when she comes in, typing our research report. Run. I'll find a needle.\"\n\nThey went into frantic action just as they heard the garage door start to open. Rebecca slipped her panties into Jason's underwear drawer.\n\nWhen Diane came in the door, Rebecca was sitting cross-legged on the couch with the computer, making the keyboard sing.\n\n\"What happened to you?\" Diane said, grocery bags still in her arms.\n\n\"Oh- I lost a button and Jason's putting it back on for me,\" Rebecca hardly looked up from the screen. \"I have to keep pounding on this or we're not going to finish in time.\"\n\n\"I have a bathrobe you could have used,\" Diane said.\n\n\"Oh, thank you, that's very kind, but I think it kind of flustered Jason and he just gave me some of his clothes and went off to find a needle and thread. Come to think of it, I haven't seen him in a while.\"\n\n\"Jason!\" Diane called.\n\n\"Hi Mom...\" his voice was muffled and far away.\n\nDiane set down the groceries and went back towards her room.\n\nJason's voice was plaintive. \"Where's the sewing stuff?\"\n\n\"On the floor of my closet.\"\n\n\"That's where I am.\"\n\n\"No, bless you. My other closet.\"\n\nRebecca grinned to herself and started an email:\n\nProfessor Denton,\n\nI don't know if you take recommendations for the Amnesty program, but if you do, would you please consider my roommate, Emily Andrews. She is a very highly motivated Journalism major and I think she might make a good candidate for the program.\n\nRebecca\n\nP.S. Whatever your assignment was for Jason today, thank you!\n\nDiane came in a few minutes later. \"I swear, that boy. I think he was hiding in there.\" She rubbed her hands together. \"Okay, where was I?\"\n\n\"Oatmeal chocolate chip cookies,\" Rebecca said, smiling, \"my favorite.\""
    ],
    "authorname": "Ambidentrous",
    "tags": [
        "oral",
        "college",
        "cunnilingus",
        "interview",
        "flirting",
        "intelligence",
        "teasing",
        "affirmation",
        "virgin",
        "research"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/amnesty-program-ch-03"
}