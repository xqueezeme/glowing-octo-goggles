{
    "title": "Tucker's Studio Ch. 23",
    "pages": [
        "All people and places are fictional. All characters are over eighteen.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nCinnamon Sugar in the Summertime\n\nNot long after shooting the fun scene with Josh at the University, Kelsey had to take a break from work to buckle down on her Art School studies. Freshman year was coming to a close. Finals were taken, grades were handed out, and Kelsey smiled as she thought about how amazing the last nine months at school had been. It had been almost twelve months of flying high, really, when the previous summer's epic virginity obliteration orgies were taken into account.\n\nHer grades were good, school was a blast and work was even better. She decided to take three weeks and go home to recharge her batteries. The end of the school year had taken a lot out of her \u2014 she slept for the entire bus ride home.\n\n\"Hi Honey!\" Kay said, greeting her sleepy-eyed daughter at the bus station. \"Your hair looks amazing!\" she said, fingering the waist-length tresses. \"I know you were proud of never cutting it, but this looks so much better, and it's still long like you like it. Oh honey, you look tired. Let's get you home and relax by the pool.\"\n\nThe big old house looked wonderful to Kelsey. Slightly disheveled as always, with spring flowers blooming profusely in the gardens, it looked like an overgrown fairy tail house \u2014 too big for its intended purpose, but somehow perfect. She had been home briefly for the Thanksgiving and Christmas holidays, but in the early summer, with no snow on the ground and fresh green leaves on the trees, that's when the place really felt like an oasis from the madness of the world. Kay took off her clothes just moments after walking through the front door, and the beautiful picture of home that Kelsey carried in her minds-eye was complete.\n\n\"You're way ahead of me this year,\" Kelsey said as she shed her own clothes, showing her creamy white skin and pale freckles. \"I've been so busy I haven't laid out at all.\"\n\n\"Oh honey, you're gonna burn,\" Kay said. \"You'll have to be careful for a day or two. But at least you don't have any tan-lines to get rid of. You'll be nice and even.\"\n\nMother and daughter spent the afternoon by the pool, shifting between sun and shade, gradually bringing Kelsey's lovely freckles into more relief, closer and closer to the color of her mom's sexy speckles.\n\nKelsey found her mom's body more interesting than she had in the past. Being an enthusiastic bisexual had given her a greater appreciation of a woman's parts and pieces, and laying languidly in the sun gave her a chance to appreciate the details of her mother's lovely body as she never had before. The color and texture of her areolas, the shape of her nipples, the delicate waviness of her smoothly shaved pussy lips, the eye-poppingly sexy curves of her ass when she lay on her stomach. They were things Kelsey had seen thousands of times growing up, but that day it all struck her different. She was seeing her mother as a beautiful sexual creature, and not only that, one who looked almost like an older twin.\n\n\"How's work going Honey?\" Kay asked. They were both lying on their stomachs in the strong sun, facing each other. \"Is that Tucker still as nice as I remember?\"\n\n\"He's great,\" Kelsey said. \"Everybody loves him.\"\n\n\"Have you?\" Kay asked. \"Loved him I mean?\"\n\n\"So...we're gonna talk about everything?\" Kelsey said. She had a funny look on her face, like she didn't know how to handle a conversation like that with her mother.\n\n\"I hope so honey. You're an adult now. I talk with my girlfriends about these things.\"\n\n\"You do?\"\n\n\"Sure. It's part of being sexually open. Sexually aware. Sexually...alive. You're certainly all those things on your own now. I hope we can talk about it all.\"\n\n\"Okay. Yeah, I'd like to. I just...wasn't sure.\"\n\n\"Let's just...bust it wide open,\" Kay said. \"Then it'll be easy and we can be girlfriends who talk about everything.\"\n\n\"Okay Mom.That sounds nice.\"\n\n\"So tell me all about Tucker,\" Kay said, with a dreamy look in her eye.\n\n\"He's just the best boss. Do you remember Marsha? She does the hair and wardrobe and stuff.\"\n\n\"Sure honey. I liked her. She's married right?\"\n\n\"Not anymore. She and Tucker are together. They've always had a thing for each other, and now...\"\n\n\"Oh, that's so nice! So...Vegas must have been extra fun with that going on. Is that when it started?\"\n\n\"Yeah. It was pretty nice,\" Kelsey said, with a 'that's an understatement' smirk.\n\n\"Ooo! I had a feeling you had a good time there,\" Kay said, recognizing the look. \n\n\"I didn't tell you something about that trip, because I didn't know what you'd think. Tucker said I could bring a friend, so...I brought Raymond went with me.\"\n\n\"Oh my God! Little Raymond's all grown up? Wait'll I see him,\" Kay said, looking like she'd give him a good ribbing about his new manhood. \"Remember when he saw me naked in the yard?\" Kay laughed. \"Wow. So...Vegas, with Tucker, Marsha and Raymond. Gosh, it sounds better than one of your scenes at the studio.\"\n\n\"It was sooo much fun!\" Kelsey said, gushing like a teenager. \"I told you about the awards banquet. That was so cool, everybody dressed up beautiful and slutty. And I told you about that amazing suite I was in. You know, Tucker's room wasn't nearly as nice. He did that special for me, giving me the nice one. It was sooo cool, with this huge round bed right in front of the big windows, almost right out on the balcony.\"\n\n\"So did you guys pair off right away? Marsha and Tucker? And you and Raymond!\" Kay almost squealed. \"I still can't believe that!\"\n\n\"I know!\" Kelsey said happily. \"I love that I've been able to do this for him. He was pretty lost when it came to girls, before last summer.\"\n\n\"Last Summer?\"\n\n\"Oh. Yeah,\" Kelsey said sheepishly. \"I, um...I didn't want him to go to college without...you know.\"\n\n\"Oh, honey! He's a lucky boy to have a friend like you. So, back to Vegas. Did you guys pair off?\"\n\n\"No, first was sort of...all of us,\" Kelsey said, sounding embarrassed again.\n\n\"Don't worry. The more we talk the easier it'll be,\" Kay said, reaching over and patting Kelsey's bare butt. \"Oooo, you better roll honey, you feel warm.\"\n\nMother and daughter rolled onto their backs, both of them smoothing the perspiration into their warm breasts in an almost identical way.\n\n\"So, some nice group lovin' on your first night in Vegas,\" Kay said, like it was the most natural thing in the world for her daughter to have done. \"Tell me about it.\"\n\n\"Tucker must have gone broke buying Champagne,\" Kelsey said. \"The whole weekend must have cost him a fortune. Champagne's really cool, isn't it? I got so...it's not like drunk, it's more like high or something. It made the sex really...\"\n\n\"You can tell me honey. Did you cum really good? I always do when I drink Champagne.\"\n\nKelsey smiled at her mom. All kinds of new ground was being broken in their conversation, and she was enjoying it.\n\n\"I did,\" she said, feeling relieved when she said it. Time to go all in, she thought to herself. \"Raymond's still learning. He's way better than you'd think, but Tucker, he's good.\" \n\nKay's imagination was firing on all cylinders. She was on her side, head in hand, nipples hard and pussy getting wet. She'd had a strong reaction to Tucker when she'd met him, and getting to fuck him vicariously through her look-alike daughter was thrilling to her.\n\n\"He was with Marsha first,\" Kelsey said. \"That was good 'cause we could all tell they were gonna be a couple, you know? But then Marsha gave Raymond a fun time, and Tucker and me, we went out on the balcony. It was so beautiful, with the lights of the city and all the windows that could see us. Marsha and Raymond could see us too. It was super hot Mom.\"\n\n\"How'd you do it with him?\"\n\n\"He was behind me, sort of standing up.\"\n\n\"Oh, I love it like that. Did he play with your tits and your clit while he was doin' it?\" Kay asked. It was pretty clear she was imagining Tucker doing it to her, and it took all her willpower to keep from rubbing one out right there on the lounge chair. \n\n\"Yeah, he did. It was a killer orgasm. I'd already had a big one. All three of them used their mouths on me on the bed.\"\n\n\"Nice! Oh, honey...God...I wish I was young again. Promise me you'll tell me these kind of stories when I'm old.\"\n\n\"Mom! You're not even close to old! And what about your stories? Are you ever gonna tell me any?\"\n\n\"Sure. That's what this is all about. We're best friends now,\" Kay said proudly.\n\n\"Tell me about Jamaica,\" Kelsey said, with a twinkle in her eye.\n\n\"Oh Kelsey! How long have you known about that?\"\n\n\"I guess I have to admit something that I'm not proud of. I've seen your pictures.\"\n\n\"You little snooper!\" Kay said, slapping Kelsey's thigh. She had a smile on her face though, so Kelsey wasn't too worried. \"Oh my God!\" Kay said as she thought about it some more. \"All of them?\"\n\n\"Yup. Sorry Mom. I shouldn't have.\"\n\n\"So what else do you know?\"\n\n\"The parties here. I...sorta watched...some of them. From up there.\" Kelsey pointed to a window in a small room on the third floor of big old house.\n\n\"Kelsey! You...shouldn't have done that! Oh God...am I a terrible mother? I'm a terrible mother, aren't I?\" Kay asked, suddenly looking like she was on the verge of tears.\n\n\"Mom! Are you kidding? You're the best mother. The coolest parents ever.\"\n\n\"But Kelsey! What did you think of me when you found those pictures? How old were you?\"\n\n\"Fifteen I guess...\"\n\n\"Oh...well...that's not too bad...I guess. Oh God. I told your father we should lock those up, or put them...somewhere. He wanted them where we could enjoy them.\"\n\n\"It's okay Mom. Really. It is. It was like an education.\"\n\n\"Ha! I guess it was! Holy craaapp! I'm trying to think what it would have been like for me to find something like that of my mother and father's. I can't even imagine.\"\n\n\"That's because they're old-fashioned. You and Dad have always been different. The pictures sorta fit. It wasn't like a shock or anything.\"\n\n\"Well, that's...good...I guess.\"\n\n\"Let's go with that. It was good,\" Kelsey said. \"So...what about Jamaica?\"\n\n\"Oh Jesus,\" Kay said. \"All right, let me...God, my head is spinning. Yes...okay...best friends, telling each other about their lovers. Okay...you remember the trip. You were eleven, or twelve?\"\n\n\"Twelve.\"\n\n\"Yeah. Well, your dad and I met Glenmore on the beach. He was alone, and, I guess we were...anxious. I guess that's the right word. We were leaving for home the next day and...God I was just so horny that week. So many beautiful men. Women too. You dad was hoping for...well, I don't know if you want to hear about him. We were hoping to meet a couple, you know? But the trip went so fast, and our last full day there we happened to meet Glenmore. Do you remember the beach? It was clothing optional with kind of a mix.\"\n\n\"Yeah, I remember. Some of the kids had suits. But it was cool. No one seemed to care that I didn't.\"\n\n\"Yeah, it was real mellow. Laid back. People getting high and stuff. So Glenmore, he had a little speedo kind of suit on, but I sweet-talked him into taking it off. Do you remember him at all?\"\n\n\"I guess, maybe a little. I didn't realize he was the guy in the pictures.\"\n\n\"Yeah. So do you remember later that day, when you were down at the pool with your friends from the resort?\"\n\n\"That's when you were with him?\" Kelsey said. Her eyes were wide as she put two and two together.\n\n\"He was in our room. At first I was so worried you were gonna knock on the door, but then...well...I kinda got swept up in things. Your dad was taking the pictures.\"\n\n\"Yeah. I kinda figured Dad did that. You know, there's one picture that was always my favorite. The doggie-style one, with you looking over your shoulder, all sweaty and wild.\"\n\n\"Yes! We love that one too! Your dad always said we should enter it in a contest!\" Kay laughed.\n\n\"How's my little nature girl?\" Bobby said as he rounded the corner of the house.\n\n\"Daddy!\" Kelsey shrieked. She bounded across the grass and embraced him.\n\n\"Hi kiddo. I've been counting the days until you got here,\" he said quietly in her ear. \"How's life treating my precious girl?\"\n\n\"So good Dad.\" Kelsey said, still squeezing him tight.\n\nShe finally let him loose, took him by the hand and led him to the pool patio. Bobby gave his wife a nice kiss and settled into a lounge chair.\n\n\"Mommy and I are telling each other secrets,\" Kelsey said, sounding like a teenager again.\n\n\"Ahhh,\" Bobby said. His eyes flashed with understanding when he looked at Kay's lovely smile. \"Good. You know your mom always hoped you guys could talk freely about things when the time came.\"\n\n\"Really Mom? You thought about that?\"\n\n\"Sure honey. A mother dreams of a daughter who's her friend. It doesn't always happen you know.\"\n\n\"So how was your bus ride?\" Bobby asked.\n\n\"I slept,\" Kelsey said. \"I'm so glad to be home.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nBrie and Raymond were home for the summer too, both working summer jobs to earn some money. The old friendship patterns picked up like nobody had been away, although the vibe between Kelsey and Raymond felt different after all the sex they'd had. There were times though, when all of that left their minds and they were just kids again.\n\nKelsey tried to get the old pattern reestablished with Brie's dad too. She'd looked forward to being with him again, but the way he acted toward her had changed. He treated her less kindly, and even tried to bring in a weasely male friend for a threeway, assuming the porn girl wouldn't mind. Kelsey did mind, mainly because of the way it came about. She stopped going to Brie's house when her father was home. It was a bit of a relief, really, because Brie had never caught on to what was happening between her dad and Kelsey, and Kelsey had always felt bad about the sneaking around. Brie was her best friend after all. She would have hated for anything to mess that up.\n\nOne beautiful, early summer morning the two best friends sat around Brie's pool, both of them naked, working on their tans.\n\n\"Does your dad have any business trips coming up?\" Kelsey asked, wondering about the possibility of a pool party.\n\n\"No,\" Brie said, sounding dejected. \"I checked his calendar. He'll be here the whole time your home. I'm so bummed.\"\n\n\"What else could we do?\"\n\n\"What about your house?\" Brie asked.\n\n\"My mom and dad'll be there,\" Kelsey said. The fact that her parents were swingers and had their own pool party orgies was one of the only secrets Kelsey kept from Brie. She'd often wondered how Brie would react if she found out about her mom and dad's wild sex life. \"I could...ask them...maybe.\"\n\n\"Ask them what?\" Brie said, looking quizzical. \n\n\"Yeah, you're right,\" Kelsey said. \"There's always the dunes. We could all camp out.\"\n\nBrie's eyes grew with her excitement. The kids had camped there a few times, but it was back before they were sexual. The thought of a wild orgy on a beach in the moonlight made Brie's heart flutter.\n\n\"Yes! Can we do it?\" she said. \"Oh my God, I love that idea!\"\n\n\"I've got almost three weeks left,\" Kelsey said, \"so if we tell everybody now, maybe they can all get the time off.\"\n\nThe two of them spent the rest of the morning texting all the friends who had been at Brie's sexy pool parties. There'd be at least one summer blow-out, and if all went well, it'd be a doozie.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Can you camp with us Raymond?\" Kelsey asked. He'd stopped by the next day when to spend a little time by her pool. They were reclined on lounges, Kelsey in a bikini and Raymond in a bathing suit that was better looking than the ones he used to wear. He had new glasses too. They were a huge improvement over the King of the Geeks model he used to wear.\n\n\"Yeah, I can go. I've got a couple days off. Who's gonna be there?\"\n\nKelsey rattled off a few names, but a lot of their friends still had to finagle time off from their employers. Raymond looked excited though, because Trina, the captain of the cheerleaders, had already said she could make it. Kelsey saw the look on Raymond's face when she mentioned her name, and she smiled.\n\n\"What is it with you guys and Trina? I mean I get it, she's super hot, but there's other hot girls. Tell me what it is about her,\" Kelsey asked seductively. \"I want the whole story.\"\n\nRaymond looked shy. As he was about to speak Kay came around the corner of the house, naked, pushing her wheelbarrow.\n\n\"Oh hi Raymond!\" she said brightly. \"I didn't know you were here!\"\n\n\"Mom, his car's right out front,\" Kelsey said, shaking her head at her mother's goofy brazenness.\n\n\"Oh. I guess...I didn't realize that was you Raymond.\" She walked over and sat down in a chair across from the young man, her nice big tits jiggling as the did. \"So how's school going?\"\n\n\"Good,\" he said. It wasn't easy to get the word to come out coherently with the stunning naked redhead sitting there.\n\n\"Kelsey tells me you guys had fun in Vegas,\" Kay said.\n\n\"Mom!\" Kelsey said, glaring at her mother. \"You don't have to answer her Ray. She's just messin' with you.\"\n\n\"I'm not messin' with anyone honey,\" Kay said. \"We're all adults now, right Raymond?\"\n\n\"Yeah,\" he said. That word was another struggle, but suddenly he felt more coming, and let them out into the world. \"I sorta feel like an adult, I guess. Do you?\" he asked Kelsey.\n\n\"Yeah, most of the time. I'm not really used to it yet, but yeah, I do.\"\n\n\"Take that suit off honey. You're gonna get tan-lines today,\" Kay said to her daughter. Kay was constantly at war with the dreaded tan-line. \"Raymond's seen all of you, plenty of times. Right Raymond?\"\n\n\"Yeah,\" he said feebly. He was back to struggling with words again.\n\n\"Don't worry Raymond, you can keep your suit on. Looks like you need a little cover today,\" Kay said, glancing at the way his hard cock was tenting his suit.\n\n\"Mom! Jeez!\" Kelsey said.\n\nKay got up and went around behind her daughter. She untied Kelsey's little bikini top and whisked it off.\n\n\"My mother, the crazy nudist,\" Kelsey said, shaking her head. \"Are you happy now Mom?\"\n\n\"Bottoms honey. You don't want tan-lines.\"\n\nKelsey chuckled and took them off.\n\n\"Sorry Raymond,\" she said. \"You okay?\"\n\n\"He's fine honey,\" Kay said her. \"What boy wouldn't be?\"\n\nA nice conversation finally got going, not much different from the ones Raymond had had many times over the years with his childhood friend and her mother. The fact that they were both naked became almost normal, in an odd kind of way. He found himself comparing their bodies, the way Kelsey had done. The similarities were almost uncanny, and Raymond couldn't help but wonder if Kay's pussy, which looked so much like her daughter's on the outside, would feel the same on the inside as Kelsey's gloriously velvety tunnel of magic.\n\n\"Raymond's distracted again,\" Kay said smiling mischievously at him. \"Why don't you jump in the pool and cool that off honey?\"\n\nRay thought he was sitting in a way that disguised the boner that had grown rock hard when he was comparing bodies, but apparently not. Kay had a wonderfully happy look in her eye, happy that she could still divert blood-flow in a boy Raymond's age.\n\nRay's heart was pounding. He had to do something to break the horny spell, so he did as Kay suggested and jumped feet first into the blissfully cool water. Kelsey followed him, and then, a few moments later, Kay dove in, head first. She surfaced in the middle of the pool, swam to the other end, and rose up out of the water on the wide steps. She stopped when the water was halfway up her thighs, her hourglass back and lovely ass sparkling with wetness in the sun. She squeezed the water out of her red hair with her hands, shook the tresses out across her wet back, climbed the steps to the patio and walked casually toward her wheelbarrow.",
        "\"You two have fun,\" she said. \"I'm gonna work on that front garden.\"\n\n\"Well,\" Kelsey said to Raymond when she was gone, \"you got your excitement for the day.\"\n\nIt took him a minute to snap himself out of the hallucinogenic spell Kay had cast. Before he'd gathered his wits Kelsey slipped her hand inside his bathing suit, underneath the water. Raymond didn't know what to do. Kelsey had never been so bold with him out in the real world, and certainly never at her house. She could sense Raymond's confusion. She massaged his cock gently and spoke softly, with her mouth close to his ear.\n\n\"You heard what Mom said. She knows all about us. I told her. She's giving us some privacy.\"\n\n\"I don't know Kel,\" Raymond said. We shouldn't...here...should we?\"\n\n\"If you're too nervous I'll just give you a nice blowjob. You need that, right? After everything?\"\n\nHe did. His balls were aching. Kelsey slipped his suit down his legs and had him sit on the edge of the pool. She stayed in the water and took his hard cock in her wet hands, squeezing and stroking it ever so gently. When he was rock hard and moaning she took him into her mouth. He tasted like pool water until she got going. Raymond leaned back on his elbows. The hot sun beat down on him as Kelsey worked her magic. It didn't take long. Kay had fibbed a little and was right around the corner of the house, silently pulling weeds as she eavesdropped on the soft moans. Raymond's quiet, grunting release made her smile.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"I wanna have a party,\" Kay said to Bobby that night in their room.\n\n\"What kind of party?\" Bobby asked, already pretty sure of the answer.\n\n\"With the gang,\" she said. \"Whoever can make it. What do you think about bringing Kelsey in on it?\"\n\n\"Whoa! What makes you think that's a good idea?\"\n\n\"She knows, Bobby. She's known for like, five years. She used to sneak in the house and watch from the third floor window, and she's seen the picture books. It's all out in the open between us now. I'm happy about it really.\"\n\n\"Wow! This is...big, huh? I mean I guess I figured she'd know someday.\"\n\n\"So, I was thinking it would be good, for all of us, if we at least invite her. To make her know that we're all happy about everything, you know? To make everything...I don't know. I just think it'd be really special.\"\n\n\"You don't want she and I to...you know. I don't want that,\" Bobby said, shaking his head.\n\n\"No, I don't want that either. But she's watched us before, and always felt sneaky and detached, like she was doing something wrong. I want those memories to go away. We can replace them for her, with new ones, ones were she feels welcome. It's a big part of our life Bobby, and I want her to feel welcome in it.\"\n\n\"Well, you're making a powerful case. You should be a lawyer,\" he chuckled. \"Yeah, I can understand what you mean. What about our friends though? You don't think they'll think we're exploiting her, do you? Because she works in porn?\"\n\n\"Oh. I don't think so. Would they? They're all intelligent people. They know us. No, I think just the opposite. They'll find her enjoyable, don't you think?\"\n\n\"Well that goes without saying! It just might be a little weird at first.\"\n\n\"Weird is good,\" Kay said. \"It'll spice things up. So, should we bring it up to Kelsey? See if she's interested?\"\n\n\"Yeah, we can at least talk it over with her. Maybe she'll be freaked out by the idea, but that's cool. Yeah, let's run it by her.\"\n\n\u2014\n\n\"I'd love to!\" Kelsey said, her enthusiasm bubbling over like an overfull glass of Champagne.\n\n\"No, we want you to think about this honey, for a day or two,\" Kay said.\n\n\"It's a big decision Kelsey,\" Bobby said. \"I know it won't exactly be new to you, that kind of thing, but having us there will be. And some of our friends are quite a bit older than us. Keep that in mind too.\"\n\n\"No Daddy, I wanna be there. Really. This is so cool! I always dreamt of being a part of it. So is it gonna be a big orgy, or do you guys do pair-off parties too. I always wondered why we had so many guest rooms in this big house, with beds that never seemed to get used. Is that what they are? Party rooms?\"\n\n\"I guess there's no more secrets around here,\" Kay said. \"Yes honey, that's what they're for.\"\n\n\"I knew it!\" Kelsey said. \"Did you use my room too?\"\n\n\"No!\" Kay said. \"We had a strict rule about that.\"\n\n\"There was that one time,\" Bobby said. \"Since we're being honest.\"\n\n\"Oh. Well, I wasn't happy about that,\" Kay said.\n\n\"No you weren't!\" Bobby chuckled.\n\n\"It happened without us knowing. We should have though. I'm sorry honey. Do you remember when your favorite little teddy bear disappeared? His head got pushed into...well, somewhere it shouldn't have gotten pushed into. I couldn't get the smell out, so I threw it away.\"\n\n\"Oh my God!\" Kelsey said, laughing in disbelief. \"Teddy had anal sex? That's hilarious!\"\n\n\"We're getting away from what we should be talking about,\" Kay said, eager to change the subject away from bad parenting.\n\n\"There's nothing more to talk about,\" Kelsey said. \"We're having a party, and you're the coolest parents in the world.\"\n\n\"Well, there's the guest list to think about,\" Kay said. \"Your father and I discussed inviting Raymond and Brie, but we've decided against it. We feel they're still too close to high school age, and if their parents found out it wouldn't be good. We just don't feel comfortable with that yet. When they graduate college, if we're all still doing this, then yes, we'd love to include them.\"\n\n\"Yeah I...I wasn't gonna ask you to invite them. It's nice of you to think about it though. Oh my God Mom, can you imagine you and me double teaming Ray? I don't know if he'd survive. He thinks you're so hot,\" Kelsey smiled.\n\n\"Yes, well, it's...something to look forward to, isn't it?\" Kay said, obviously excited by the thought of it.\n\n\"Even though we decided against them, we would like to include some friends from your life,\" Bobby said. \"We were wondering if Tucker and Marsha might enjoy a little weekend getaway.\"\n\nKelsey's face lit up. She immediately reached for her phone and sent Marsha a text.\n\n\"That's the best idea ever,\" Kelsey said. \"So when are we doing this?\"\n\n\"A week from Saturday night,\" Kay said. She was thrilled at Kelsey's enthusiasm, and her heart fluttered at the thought of Tucker joining them. \"Looks like it's happening, huh?\" Kay said to Bobby. There were about six different emotions showing on her pretty face.\n\n\"Oh, it's happening,\" Kelsey said, still typing out her text message. \"It's gonna kill!\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nThe warm, early summer days went by in a blur. Deep talks between mother and daughter, gardening, shopping for clothes for Kelsey's upcoming semester, and lots of no tan-lines pool time. Raymond was a regular visitor, slowly getting more and more comfortable with the two naked redheads. He never got to the point of sunning with them au naturel though \u2014 his boner was too unpredictable.\n\nAs the day of the party drew closer Kelsey helped her mom get the guest rooms cleaned and ready. She cleaned her room too, thinking it was a perfectly good bed that someone might as well use. The thought of wild sex going on in her childhood inner-sanctum turned her on something fierce. Her stuffed animals got tossed in a box and closeted though, just to be safe.\n\nTucker and Marsha accepted the invitation to the party. They politely turned down Kay's nice offer to stay at the house, choosing a nearby motel instead. Kelsey drove her mom's car over to see them after they checked in.\n\n\"Hey you guys!\" she said, kissing them both on the cheek. \"I'm so glad you came!\"\n\n\"We're so happy to be invited!\" Marsha said. \"So, this has gotta be something new, right? You, and your folks, and the party?\"\n\n\"Yeah. I'm sooo excited!\" Kelsey beamed.\n\n\"How'd it come about sweetheart,\" Tucker asked. \"I mean it's...not exactly normal.\"\n\n\"My mom and I have been having these awesome talks. It was, like, the first day I guess, I told her I knew everything about them, their parties and stuff. They decided that they wanted me to feel included, if I wanted to be. Of course I do! It so cool! I can't wait!\"\n\n\"Wow,\" Marsha said. \"I hope you don't take this the wrong way, but your family is fascinating.\"\n\n\"It's kinda cool being different,\" Kelsey said.\n\n\"So are you enjoying your vacation?\" Tucker asked.\n\n\"Oh, yeah! Most of my friends are home for the summer. Raymond's home. If you guys were gonna stay longer we could...\"\n\n\"We gotta get back tomorrow sweetheart. Sorry,\" Tucker said. \"If he visits you at school sometime we'll all get together, all right?\"\n\n\"Yeah! He'll like that. Whenever Marsha's name comes up he acts all funny. It's so cute.\"\n\n\"You did give him a run for his money,\" Tucker said, smiling at Marsha.\n\n\"I think it was the other way around,\" Marsha laughed. \"That was so much fun.\"\n\n\"So, eight o'clock tonight. I've got the directions, but we'll text you if we get lost,\" Tucker said.\n\n\"Okay. I can't wait!\" Kelsey said. \"Take your pill Tucker, we're gonna go all night.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nTucker turned off of a country road onto a long, informal driveway that curved gently around the side of an old apple orchard, the Cadillac's tires crunching quietly on the gravel. The big old Victorian house loomed ahead through the trees, every window lit up bright in the fading light of the overcast evening. A grassy area served as a parking lot for the four cars already there. Marsha took a deep, nervous breath, and she and Tucker started the short hike to the house. The smell of an approaching summer rain shower was in the air.\n\n\"We're so glad you could come!\" Kay yelled from the big porch as they approached. She was a vision, in a short, slinky dress with nothing on underneath, her nipples already at full attention and visible from the yard.\n\nShe and Bobby met Tucker and Marsha on the stone walkway at the base of the steps, hugging and cheek kissing, with twinkling eyes that gave away future possibilities.\n\n\"I love your dress!\" Kay said to Marsha. \"You look like a femme fatale from an old movie.\"\n\n\"Yours is amazing,\" Marsha said, fingering the clingy, slinky fabric of Kay's little dress. \"It doesn't leave much to the imagination, does it? I can see you and Kelsey are almost twins. What do you think Tucker? Kelsey's sexy older sister?\"\n\n\"Yes,\" Tucker said. He was as close to speechless as he had ever been.\n\n\"Shall we Marsha?\" Bobby asked. He put his arm around her and escorted her up the wide steps to the open door. Kay took Tucker's arm and followed them inside.\n\n\"Hi you guys!\" Kelsey's bright voice squealed. She bounded out from behind a happy looking group of guests, wearing a dress identical to her mother's.\n\n\"Gooood Looorrd!\" Marsha said when she saw the two petite redheads together. The way their nearly identical tits and nipples were draped by the thin fabric was quite possibly the sexiest thing she'd ever seen. She could only imagine what was going on in all the men's heads.\n\n\"Isn't it fun?\" Kelsey said happily, looking down at the two dresses and the four hard nipples straining to get free. \"When we saw 'em at the store we knew we had to do it.\"\n\n\"That may be the best thing I've ever seen in my life,\" Tucker said.\n\nKay's body betrayed her when she saw the way Tucker was looking at her. A quick breath fueled a tingle that emanated outward from her lungs, threatening to engulf her if she didn't get a grip. Bobby noticed and smiled.\n\n\"Well, it looks like my girls are ready to burn the place up,\" he said. \"Should I call the fire department honey?\"\n\n\"Don't you dare douse me. Not with water anyway,\" Kay said. She winked at Tucker. The tingle shot through her again, and it infected Tucker too.\n\nMarsha still had hold of Bobby's arm, leaning her shoulder in against him. She'd liked him when she met him at the studio, but it wasn't the ignitable spark kind of feeling Tucker and Kay had felt. Holding his arm there in the big, slightly bohemian house felt different. They all knew what they were there for, and sparks were already flying. Bobby's muscular bicep felt good in Marsha's hands \u2014 strong and warm. The swinger dynamic was still relatively new to her, and she had been nervous when Tucker's Cadillac rolled into the driveway, but holding onto Bobby like that was nice. Really nice. There was an energy flowing between them that quickly grew. Kay noticed and smiled.\n\n\"Looks like we're not the only ones ready to burn,\" she said.\n\nShe took Tucker's arm again and introductions were made. It was all a bit of a blur to Marsha. New faces, new names, lots of sly smiles and knowing looks as everyone sized she and Tucker up \u2014 two new playmates added to the group. Three if you count Kelsey, but she was a slightly more known quantity. All of the partiers knew Kelsey, at least a little.\n\nRich and Jess first met Kelsey when she was nine. They own a restaurant that Kay and Bobby frequent, and used to make special alcohol-free cocktails for Kelsey, with two or three maraschino cherries in the bottom of the glass speared with a tiny plastic pirate sword.\n\nOlivia, at the party with her husband Larry, knew Kelsey from high school. Being the secretary to the Principle, she didn't know the girl well, but it was a small school and Kelsey was a stand-out. Everyone knew the sprightly redheaded cheerleader at least a little.\n\nAnd then there was Albert and Trinny. Albert worked with Bobby, and the couple had been regular visitors to Bobby and Kay's parties for as long as Kelsey could remember. They'd vacationed together a few times as well, all of them enjoying the nude beaches together at their destinations. Those vacations were from a time before Kelsey discovered her parents swinger parties. She was astonished, spying from the third floor window the very first time, to see \"Uncle Albert\" and \"Aunt Trinny\", fucking their way wildly through the group at the pool that night. It was one of the biggest \"Holy shit!\" moments in Kelsey's life.\n\nKay was hoping for a slightly bigger turnout for Kelsey's coming out party\u2014 their circle of swinger friends was quite large \u2014 but the seemingly imminent rain would put a damper on an all-out poolside orgy and a smaller group could take advantage of the bedrooms for more of a full-swap type of party. Time would tell how it all played out.\n\nThe sound of rainfall disappointed Kay. \n\n\"Oh poo,\" she said. \"Kelsey and I had the pool all decorated. I guess that's out. I love water parties, but inside's fun too.\"\n\nShe and Kelsey lowered the old double hung windows, leaving each open a crack to let in the sound and the smell of the early summer rain.\n\nRich was the designated bartender whenever he was in attendance, mixing cocktails with skill as he did at the restaurant. Marsha was quite taken with him, and eased her way to the kitchen island where he was working his magic.\n\n\"You know\" he said to her, \"all our friends have been very curious about you and Tucker. It's not everyday we meet porn producers.\"\n\n\"Tucker's the producer. \"I'm just...\"\n\n\"She's just awesome!\" Kelsey said as she swung the french doors to the pool patio closed, to keep out the rain. \"She's a genius at haircutting and makeup. She dresses us too. It's amazing what she does with the amateurs when they come in. She makes them look so good, it's a big part of why they can relax I think.\"\n\nKelsey got up on her tiptoes, kissed Marsha on the cheek, squeezed her tit and her ass, and scampered away into the living room.\n\n\"It seems you have an admirer,\" Rich said.\n\n\"Yes,\" Marsha blushed. \"We...admire each other.\"\n\n\"I've gotta say, she's sort of blown all our minds,\" Rich said. \"Jess and I have known her since she was this high,\" he said, holding his hand about three feet off the floor. \"Seeing her on your website has been...one of those things you don't soon forget.\" \n\n\"I can't even imagine,\" Marsha said. \"And here we all are. As a woman I'm trying to put myself in Kelsey's place. There were men, when I was a girl, friends of my parents. When I went through puberty they all started looking different to me. I can't even imagine a party like this. What's going on in her head I wonder? I'm burning up just thinking about it.\"\n\nRich's lips curled into a gentle smile. His eyes twinkled as he stirred a big pitcher of margaritas.\n\n\"Here's to a memorable night,\" he said as he poured two. He clinked glasses with Marsha and they both let some of the magical liquid warm their throats.\n\n\"Ooo, those look good,\" Kelsey said. She danced her way into the kitchen to the beat of the James Brown funk Bobby was playing on the stereo. \"Pour me one?\"\n\n\"Can I see some I.D. young lady?\" Rich said.\n\n\"I don't have any sir,\" she said with a sly smile, \"but I'll let you fuck me if you give me one.\"\n\n\"You drive a hard bargain young lady,\" Rich said as he poured.\n\n\"Cherry please,\" Kelsey smiled.\n\nRich dropped two into her glass. His smile grew into something bigger, with a hint of mischief in it.\n\n\"Thank you Mr. Coulter,\" she said, looking like a well practiced seductress. She turned, thrust out her ass, and flipped her little dress up, showing off her naked crack. \"Would you like me now, or later?\"\n\n\"Jess might not like it,\" Rich said, looking a bit flustered, \"if I seem too anxious.\"\n\n\"I hope it's not too much later. You got me all wet,\" she said. The teenager Rich used to know was gone, replaced by a margarita gulping sexpot. She turned and walked out of the room, her perfect ass shimmying under the slinky little dress.\n\n\"Wow!\" Marsha said quietly when she'd left. \"That girl never ceases to amaze me. Tucker says he's never come across anyone sexier in his life, and I know I haven't.\"\n\n\"How well do you know her mother?\" Rich asked.\n\n\"Kay? Not very well,\" Marsha said.\n\n\"It's hereditary,\" he said. \"I'd love to meet Kay's mother sometime. Bobby tells me she's one hot sixty-five-year-old.\"\n\n\"What are you two gabbing about?\" Jess asked as she walked into the kitchen.\n\n\"Sexy women,\" Rich said. \"Wanna drink honey?\"\n\n\"Yup. I'll have whatever this sexy women's having,\" she said. She came to a stop next to Marsha and put her arm around her waist. \"Tucker tells me you two are kinda new to these kind of parties.\"\n\n\"Yeah,\" Marsha said. Jess's hand felt good, warm and gently caressing. \"We, um, we're still kind of getting used to the group thing. It's funny, 'cause we watch that kind of thing so often, at the studio, but being involved is...so much more...\"\n\n\"Yes. It's so much more. Richy and I both love it, but we try and moderate it. Not too often, you know? Tonight's special though. Not only you guys \u2014 it's kind of a small town and we love meeting new people \u2014 but Kelsey. This is just so wild with her here. It feels like there's electricity in the air. It's one of those wow nights.\"\n\n\"Kelsey just wowed us a few minutes ago,\" Rich said.\n\n\"So do you know about her history with everybody?\" Jess asked Marsha. She filled her in on all the years at the restaurant, the high school secretary, and \"Uncle Albert\" and \"Aunt Trinny\".\n\n\"Oh my God!\" Marsha said. \"This is beyond wild and crazy isn't it?\"\n\n\"That's what makes these parties extra special,\" Jess said. \"A little extra something. Like you. Come dance with me?\"\n\nJess led Marsha away by the hand, out into the funky music that was kicking everyone into gear.\n\n\"Look at Mom go!\" Kelsey said to Marsha when she saw her.\n\nTucker was in a big, comfortable chair and Kay was on her knees between his legs. She'd just unfastened his pants and was scooping his cock into her mouth when Jess and Marsha walked in.\n\n\"She's always the first to get things going,\" Jess chuckled.\n\nWithin the blink of an eye Jess was dancing, as if the music hit like a jolt of energy.\n\nGET ON UP...\n\nSTAY ON THE SCENE...\n\nGET ON UP...\n\nLIKE A SEX MACHINE...\n\nYou could almost smell the sweat on James Brown's face as his growling words pumped out of the speakers. The beat was relentless.",
        "Jess's tits gyrated wildly, and as she pulled up her thigh-length dress, playing it up and down as she danced, it was clear she didn't have anything on under the summery cotton shift. Her well trimmed pussy showed itself more than once.\n\nMarsha was more of a sensual dancer, but the driving beat carried her away and soon she was gyrating too, her hips swiveling like a sixties go-go dancer. Her smile lit up the room and drew more dancers up off their chairs. Albert took Olivia's hand and the handsome man had the school secretary grinding against him in no time. \n\nKelsey leaned against a doorframe and took in the scene. She smiled and sipped her drink. She'd watched her mom suck cocks before, but always from way up in the third floor window. Being just ten feet away was thrilling for her, and the fact that it was Tucker's cock made it extra special. He was clearly enjoying her mom's technique. \n\nKelsey's horniness was bubbling to a froth. She downed her drink, chewed up the cherries and joined her mom at Tucker's chair. First was a long, wet kiss, giving him a nice taste of her cherry flavored tongue, and then she settled in next to her mother, Tucker spreading his legs wider to give her room. Her maraschino-red colored tongue extended and Kay laid Tucker's cock on it. Kelsey sucked it in, Kay's mouth went for his balls, and the two redheads were off to the races. Tucker's groan was one of the only things that could be heard above the music.\n\nRich and Bobby sipped their drinks in the kitchen doorway, keeping an eye on all the action. Olivia was the first of the women to show some skin. The fifty-year-old tossed her dress to the couch and continued her sexy, grinding dance with Albert. His hands went right to her slippery satin panties. From the look on her face it wouldn't be long before her ski-slope tits were out from behind her bra and in Albert's hands.\n\nJess knew Marsha had lingerie on, from running her hands all over Marsha's dress as they danced. She wanted to see it.\n\n\"Aren't you warm in that pretty dress?\" she asked.\n\nShe danced around behind her and lowered the zipper. Marsha was well aware Rich and Bobby were watching as Jess lowered the dress and let Marsha step out of it.\n\n\"You look so hot,\" Jess breathed, with her cheek pressed against Marsha's ear.\n\nMarsha turned her head and they kissed. The boys watched as Jess's hand slipped down into the front of Marsha's panties, her fingers squishing through already wet pussy lips. Marsha's legs were parted, and her knees and hips worked in conjunction to move her pussy against the blissful intruding hand. She looked oh so sexy in her all black ensemble \u2014 bra, panties, garter belt and stockings.\n\n\"Fuck,\" Rich said as he watched his wife play with the sexy new girl's clit. \n\nJess was skilled with the girls. She held her warm body against Marsha's back and quickly took her to an orgasm. The throbbing, funky dance groove swirled in Marsha's mind as she came. It was an unexpected turn of events. If you'd told her the year before that she'd be going to sex parties and she'd be the first one at the party to orgasm, she'd have told you were crazy. But James Brown's sweaty words were ricocheting through her head, a skilled woman's fingers were in her pussy, two attractive men were watching, and her lover's moans mixed with the music as his cock was expertly sucked. It was the perfect storm. Tucker came a moment later, his own release triggered by Marsha's lovely noises.\n\nSo the party at Kay and Bobby's house was every bit as interesting as Marsha and Tucker had thought it might be \u2014 within a half-an-hour they'd both cum with glorious intensity. Kelsey smiled. Kay smiled after she'd swallowed Tucker's warm gift. Jess and Marsha smiled. The spectators smiled too. It was a feel good moment if there ever was one.\n\nThe thrill of the moment triggered more, as was wont to happen at an orgy. The slippery, squishy sounds; the earthy, carnal smells; the moaning, rapturous vocalizations. It was all to much to deny. School secretary Olivia's panties were down around her knees and Albert's cock plunged into her, bent over the side of the couch.\n\nKelsey was inspired. \n\n\"Sorry Daddy, I need Mr. Coulter,\" she said.\n\nRich wanted to tell her to use his first name, but words failed him. Kelsey led him to the couch.\n\n\"Lick my pussy,\" she said as she pulled her dress up, revealing her sweet little slit. She sounded both young and experienced. That was one of the magical things about her \u2014 the youthful innocence mixed with the highest possible sex appeal.\n\nRich was on his knees. He looked up at Kelsey's freckled, blue eyed face and lapped his tongue up through her wetness. Her pussy was sopping after sharing Tucker's cock with her mom.\n\n\"Oh God yeah!\" she sighed. \"Are you gonna fuck me hard tonight Mr. Coulter? I need you to fuck me really hard.\"\n\nRick moaned into her pussy. Young and smooth, it tasted fresh and sweet. His hands went up the velvety softness of her body, pushing the slinky dress as they roamed. The tits that he dreamed about were in his hands, but he needed to taste them. He kissed across her heaving belly, peachfuzzy hair catching the wetness and leaving a glistening trail. He moaned as a big tit squeezed softly into his mouth, the hard nipple playing across the wetness of his tongue.\n\n\"I watched you fuck my mom,\" Kelsey breathed. \"I've always wanted you to do it to me.\"\n\nRich moaned at her words. It was music. Kelsey was music. Her body was a beautiful melody. And her pussy! Oh God, her pussy!\n\nHis mouth was on it again. In it. All around it. The smell, and the taste, was intoxicating. Kelsey was serenading him with a moaning giggle, adding to the musical magic.\n\n\"Fuck me,\" she said, in a pleading sigh. \"Please fuck me.\"\n\nNeedless to say, Rich was rock hard and ready. He pulled her ass off the edge of the couch cushion, folded her legs back against her and thrust into her tightness. He half expected a sloppy porn star, but he got the tightest bit of heaven he could imagine, and let out a moaning cry that overwhelmed the room.\n\n\"I love your cock!\" Kelsey gasped when she was full. \"I knew I would!\"\n\nIt was one of the sweetest fucks in the history of mankind. That's the way it felt to Kelsey and Rich. Sex didn't get any better. Just a simple fuck. Nothing fancy. Big cock in tight pussy, thrusting hard. Fireworks result.\n\n\"Wow honey!\" Kay said when she saw how intense it was for both her daughter and Rich. \"Wow!\"\n\nThe others were captivated too. Marsha was taken by the beauty of Rich's flexing ass, and the exquisite, heavenly sounds Kelsey was making as she flew close to the flame. Larry and Albert were mesmerized, astonished that Cinnamon Sugar's performances on Tucker's website weren't acting. Kelsey really was a sexual dynamo, and she was right there for the taking.\n\nHer orgasm was a roiling, muscle spasming delight. Everyone was tempted to applaud when it was over, but didn't. They just hoped they'd get a turn with the sexy little thing. Rich, he couldn't hold on like he'd hoped, and pulled out in the midst of her orgasm already spurting, making a mess of Kelsey's writhing crotch and the old couch.\n\n\"Fuck little girl!\" he groaned, holding his spewing cock in his fist as his body spasmed. \"Damn!\"\n\n\"So beautiful honey,\" Kay said. \"So beautiful.\"\n\nShe flung her little dress off and kissed her daughter. It was instinctual, both their tongues lapping together in the sexual heat. Then Kay was on Rich, a longer deeper kiss as she unbuttoned his shirt. Clothes were being discarded all around the room.\n\nAnd so it went. Kay's desire to have a party led to a glorious outpouring of raw sexuality. Kelsey was in heaven. Wild sex with handsome men, right in her own house! It didn't take too long for her to go all the way and spread her naked legs in her own childhood bedroom.\n\n\"I'll be in my room if anyone wants me,\" she'd said, with a wicked look of seduction before climbing the old staircase. Larry was quick to follow, seemingly drawn up the stairs like a magnet by her sashaying little ass.\n\nKelsey went right to her hands and knees and Larry did the deed. Feeling a cock slip into her on her own bed, on top of her pink chenille bedspread, surrounded by her posters and her cheerleader pom-poms hanging on the wall \u2014 it just about blew Kelsey's mind.\n\nAnd then it continued. Rich stopped by to pay his respects \u2014 and fuck her hard. So did Uncle Albert. Jess and Marsha stopped in and helped to clean Kelsey up, licking up the juicy cum that was oozing out of her holes. She'd had half a dozen orgasms already when Tucker went up to see how she was.\n\nWhen Kay appeared in the doorway Kelsey was splayed out on her back with Tucker half under her \u2014 a spoon fuck that had rolled a bit. Her legs were wide and Tucker's nice cock was fucking her slowly.\n\n\"My sweet baby's a woman,\" Kay said, sounding both happy and sad. She walked over and sat on the bed. \"Your daddy doesn't want to, but I do. Is it okay honey?\"\n\n\"Yes,\" Kelsey said, somehow sounding exhausted and raring to go at the same time.\n\nTucker held her on top of him with a gentle embrace, her big tits oozing against his forearm. Kelsey was wide open to her mother, with a lovely smile on her face. Kay's mouth went to her pussy, tentatively at first, more on Tucker's slippery cock than Kelsey. \n\n\"God that's hot!\" Kay sighed as she felt the hot, fucking shaft slip past her tongue.\n\nShe tickled Kelsey's pussy a little with her mouth, moaning as she took in the taste of her daughter. She settled in at Kelsey's clit, massaging it with the tip of her tongue as Tucker fucked her slow and deep.\n\nKelsey knew she was in for a big one. It had been an extraordinary night, with some of her favorite orgasms ever, but what was building was truly breathtaking. \n\nThe tip of her mom's tongue flattened, putting more gentle pressure on the overloaded clit, puffy and engorged and red-hot from hours of attention. Kay was massaging Tucker's balls too, and the whole scene was more than he could take.\n\n\"I'm gonna cum baby!\" Tucker breathed in Kelsey's ear. \"Oh fuck, I'm gonna cum!\"\n\nThe powerful throb of Tucker's cock deep inside her as he let loose, and the relentless, glorious pressure of her mother's tongue took Kelsey over the edge. It was a massive orgasm that looked like it might never end. Tucker and Kay never stopped driving, both of them whimpering while Kelsey wailed.\n\n\"That's my baby,\" Kay mumbled into Kelsey's steaming pussy. \"That's my baby.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Tucker has such a nice cock, doesn't he?\" Kay said, as she dished out scrambled eggs to Kelsey the next morning. \"Certain ones just feel special, you know?\"\n\n\"Yeah,\" Kelsey said. She smiled, thinking about how trippy it was to have a discussion with her mom about such things. \"You really killed it with him on the couch. I've never heard you scream like that before.\"\n\n\"Did I kill it?\" Kay said with a big smile. \"God that was fun!\"\n\n\"How are my sweethearts this morning?\" Bobby asked when he walked into the sun-filled room.\n\n\"Good morning honey,\" Kay said. She kissed him and ran her hand inside his bathrobe, all over his hairy chest.\n\n\"Mornin' Daddy,\" Kelsey said. \n\n\"You sound tired little girl,\" Bobby said. He kissed her on the top of the head and sat down at the table.\n\n\"Your male friends wore her out,\" Kay said.\n\n\"My male friends? I think you've got that backward honey. They're your male friends and from what I saw they wore you out too. Having Kelsey and Marsha here really heated things up, didn't it?\"\n\n\"It was pretty incredible,\" Kay said, sounding dreamy. \"And you, my sweet man, just about wore Marsha out single handed. We're all supposed to share you know.\"\n\n\"Was it that obvious?\" Bobby asked. \"She's...got something.\"\n\n\"Yes, she does,\" Kay said.\n\n\"Should I tell her you guys are in love with her?\" Kelsey said, with a mischievous smile.\n\n\"I think she knows,\" Kay said wistfully. She wondered if Bobby had noticed that Marsha's pussy tasted young, but she decided not to ask. \"So honey,\" Kay asked Kelsey, \"I don't think I even need to ask you this, but, was everything...okay? I mean it's not exactly a normal party for a family to have.\"\n\n\"It was way better than okay Mom. Best night of my life.\" She got up out of her chair and hugged Kay from behind. \"Thank you,\" she said. She went to her dad and squeezed him from behind in his chair. \"Thank you. Thank you for trusting me with your wonderful life. For letting me be a part of it.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"So you gotta go back next week?\" Brie asked.\n\n\"Yeah, back to work,\" Kelsey said. \"I wish I could stay here all summer with you guys.\"\n\nThe two girls were sitting on a low concrete wall on a bridge over a rocky creek, dangling their legs over the side.\n\n\"Back to work,\" Brie said, shaking her head. \"Back to fucking all kinds of cool guys you mean.\" She threw a pebble into the churning water and watched it disappear. \"Why didn't you tell me about the party the other night?\"\n\n\"Oh...I...didn't wanna be like, braggy or anything.\"\n\n\"So it was worth bein' braggy about?\" Brie asked. It was clear she was disappointed she missed such a thing.\n\n\"I didn't tell you what my mom and dad said last week,\" Kelsey said. \"They said they would have liked to have invited you and Raymond, but they don't feel comfortable with it until we're out of college. But they want to then, if...you want to.\"\n\n\"Really?\" Brie said, looking stunned and thrilled. \"Your dad said that?\"\n\n\"You wanna fuck him?\" Kelsey asked, easily reading between the lines. \"How come you never told me?\"\n\n\"Kel, he's your dad. You wouldn't tell me if you wanted to get with my dad, would you?\"\n\n\"No, I guess not,\" Kelsey said, thinking about all the steamy sex she'd had with Brie's father the summer before. \"Well anyway, he wants to fuck you. I could tell. And my mom's dyin' to get with Raymond. You should see it when he's over at the pool. She teases the crap out of him. She loves gettin' him all hard.\"\n\n\"Really?\" Brie giggled. \"Is he naked in front of her?\"\n\n\"Not yet. She'd love it though. Maybe I'll work on that this week. That'd be fun.\"\n\n\"Can I come over? I've got Wednesday off, and it's supposed to be hot I think.\"\n\n\"Yeah! We can get him out of his suit, right? Oh God, Mom'll flip!\"\n\n\"So are we good for the dunes this weekend?\" Brie asked.\n\n\"Yeah there's gonna be nine of us. Four girls and five guys. Austin's in charge of the tents and stuff. He says all we've gotta do is show up.\"\n\n\"Sweet,\" Brie said. \"I'm bummed we haven't been able to do anything at my house, but this is gonna be awesome.\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Hi Raymond!\" Kelsey said. She was waving from her lounge chair next to the pool, her already naked body soaking in the strong early summer sun. Raymond walked to her, still surprised by the sight, but strangely almost used to it. \"Brie's on her way too,\" Kelsey said. \"She's got the day off.\"\n\n\"Oh. Cool,\" he said. \"I saw your mom's car...\"\n\n\"I'm sure she'll be out,\" Kelsey said, smirking at Raymond's awkwardness. \"She wouldn't want to miss you.\"\n\n\"Oh,\" Raymond said. He'd seen Kay naked four times already, but the thought still gave him butterflies.\n\n\"So, you ready for the big weekend? Trina asked if you were gonna be there.\"\n\n\"She did not!\" Raymond said.\n\n\"Hey, she likes the way you fuck her,\" Kelsey shrugged. \"What can I say.\"\n\nRaymond looked at her like she was crazy. The hottest girl from high school said that about him? He often wondered if his life the past year had been a dream. It almost had to be. The next hour of his surprisingly charmed life did nothing to sort out that mystery.\n\n\"Hi guys,\" Brie said. She strutted across the lawn toward the pool, showing off her perfect posture and her new bikini, just the top of it, worn above her usual faded blue jeans.\n\n\"Nice suit! That's cute!\" Kelsey said. \"Show me the rest.\"\n\nBrie pealed off her jeans, almost baring her pussy in the process. Raymond's butterflies churned again. He hadn't seen Brie naked in many months, and the thought of it still surprised him. He'd fucked her numerous times the summer before, but none of that seemed real anymore. Watching her strip off her jeans right next to him...now that was real!\n\n\"That's cute,\" Kelsey said matter-of-factly when Brie struck a pose in the new bikini. \"Where'd you get it?\"\n\n\"Waldhime's\"\n\n\"Nice. I shoulda went there this summer,\" Kelsey said. \"But I guess I don't wear suits too often anymore.\"\n\n\"How's it goin' Ray?\" Brie asked, giving him a cheek kiss before settling onto the lounge next to him.\n\n\"Good,\" Raymond said. The two girls had him tongue-tied again. It made Brie smile.\n\n\"So, it's just your mom home? Nobody comin' over?\" Brie asked Kelsey.\n\n\"No. Just us and Mom.\" \n\n\"Good,\" Brie said. She reached behind her and whisked off the colorful bikini top.\n\n\"Nice!\" Kelsey said. \"How come you've never laid out with me and Mom before?\n\n\"I don't know. I guess I'm more comfortable with my body after...last year,\" Brie said. \"You don't mind, do you Ray?\"\n\n\"No!\" he said, a little too enthusiastically. The girls giggled. They loved that he was still a nervous geek.\n\n\"You'll get tan lines if you don't take the bottom off,\" Kelsey said. \"Raymond'll lotion us, right Ray?\"\n\nHis nervous geek heart pounded. He wasn't able to muster an answer.\n\nBrie slipped off the bikini bottom and put it under her chair next to the top. She followed Kelsey's lead and flattened her lounge, and rolled onto her stomach like her friend had done.\n\n\"Do us Raymond,\" Kelsey said. Do our bottoms good. They burn more 'cause they stick up.\" She winked at Brie and they smiled.\n\nRay sat there for a moment, unable to shift his overloaded brain into gear. In the hallways at school he and his socially awkward friends used to dream about Kelsey and Brie's sweet asses, and there they were, laid out for him like a buffet, and the hands at the ends of his very own arms were about to massage them with lotion.\n\n\"Raymond?\" Kelsey said quietly. \"You okay honey?\"\n\n\"Yeah,\" Raymond said feebly.\n\nKay was changing the sheets in her bedroom when she saw the kids from her window. Ray picked up the suntan lotion and knelt next to Kelsey. He started on her shoulders and worked his way down her back. Kay pulled a chair next to the window, anxious to see how the boy was going to handle the situation.\n\nKelsey spread her legs a bit as Raymond's hands glided over the hump of her lovely ass, onto the back of her thighs. His was a two-handed attack, and as they slid back over her daughter's ass Kay felt the tell-tale heat building inside her. She knew Raymond was hands off for a few more years, but damn the awkward kid made her horny!\n\nAs Kay watched, Kelsey reached back and spread her ass cheeks, showing off her pretty pucker hole and a little bit of her pussy. She was instructing Ray on getting the lotion everywhere, lest she get a sunburn where it might really hurt. Raymond moved slowly, his fingers slipping into the widely spread crack, tickling the perfect little hole, and lotioning the smooth flesh between it and Kelsey's glistening pussy.\n\n\"That's nice Raymond,\" she sighed, still holding her ass cheeks wide. \"Do Brie now.\"\n\nRay's cock was at full attention, but the girls couldn't see it and he didn't know Kay was watching, so he stood and shifted positions with the big tent showing in his bathing suit.\n\n\"Raymond, you naughty boy!\" Kay said under her breath, careful to stay quiet next to the open window.\n\nHe knelt next to Brie. Her skin jumped a little when she felt his touch. She was surprised that he started at the small of her back, but he loved that part of a girl, especially on Brie, with her narrow waist that he could almost get his hands around. He worked up to her shoulders \u2014 a little bonier than Kelsey's but still womanly \u2014 before sweeping down the slipperiness and up onto the hump of her sweet little ass.",
        "\"Are you gonna play with her asshole too Raymond?\" Kay whispered to herself. \"So naughty!\"\n\nShe got her answer when Brie spread herself as Kelsey had, the two girls facing each other and smiling. Once again Raymond compared his two sexy friends \u2014 Brie's little hole was darker and smoother, and the skin below looked different too. Raymond already knew their pussies were very different, but he'd never seen the view he was looking at.\n\n\"You just gonna look or are you gonna oil her up?\" Kelsey asked, snapping Raymond back into reality.\n\n\"Oh,\" he said softly.\n\nBut reality wasn't much different that the dream he'd been stuck in. His hands moved again on the firm buttocks, avoiding Brie's fingers that were holding her in that most extraordinary position. A puff of air exited her open mouth when Ray's slippery fingers danced across the little pucker hole.\n\n\"Oh, she likes that Raymond,\" Kelsey said. \"Do it more.\"\n\nAir was puffing out of Ray's open mouth too, as the magical carnality played out. His fingertips started a slow massage of Brie's anal opening, and her held breath escaped as soft, groaning sigh.\n\n\"Do me too Raymond,\" Kelsey said. \"Can you reach me?\"\n\nHe was between the two lounges, and reached for Kelsey as she spread herself open again. Raymond's fingers massaged both the little assholes, and the girls made stunningly beautiful noises.\n\nKay was amazed at the young man. She fingered her pussy as she watched the scene below, trying desperately to stay quiet. It was a struggle as a nice orgasm flowed through her, but she swallowed hard and hoped her heavy breathing couldn't be heard. When the sweet release passed she found herself heading down the stairs. She needed to get her hands on Raymond.\n\nThe anal massage had ended when Kay walked out through the french doors, but Raymond was still hard as a rock. He panicked and jumped in the pool when he saw her.\n\n\"Hi Ray!\" Kay said when he surfaced. She was naked, of course, and he was wide eyed. \"Is that Brie? Oh my goodness honey! When did you become such a beautiful woman?\"\n\nBrie giggled, and sat up. She was surprised at herself, but it felt good to be blatantly naked in front of Kelsey's sexy mom.\n\n\"Hi Mom,\" Kelsey said. \"Raymond was hoping you'd join us.\"\n\nRaymond was stunned. Kelsey had ratted him out. He did what a child would do and submerged. He was good at holding his breath, but to what end? As he moved his arms to hold his position, he wondered how the predicament would conclude. Should he just suck in water and let nature take it's course? Or maybe he could hold his breath until Kelsey's mom left? But he wanted to see her! She was naked for God's sake!\n\nHe burst though the surface, gasping for breath. Before he'd gotten his bearings Kelsey and Brie jumped in. Kay sat herself down on the edge, dangling her feet in the water.\n\n\"Time to be a man Raymond,\" Kelsey said. \"This has gotta go.\"\n\nShe and Brie pulled down his bathing suit and flung it all the way to the lawn. Ray didn't protest, even though he was horrified. It was like a Zen moment, where the horrible is beautiful. Kay smiled when she saw the confused look on his face.\n\n\"We're all gonna give you a blowjob Raymond,\" the older woman said, \"and there's nothin' you can do about it.\"\n\nKelsey smiled at her mother's boldness, and Brie looked on with wide eyed wonder.\n\nKay pushed herself off the edge and submerged in the blissful water. She swam underwater like a Navy Seal and came up for air next to the boy. He looked stunned.\n\n\"You won't tell anyone, will you Raymond?\" she said, as she reached through the gin-clear water for his hard cock. \"I've waited so long to touch you.\"\n\nKelsey and Brie were silent. They knew it was big moment.\n\n\"Sit up on the wall,\" Kay said.\n\nRaymond obeyed. How could he not? His wet cock went into Kay's mouth, and he cried out. Kelsey was amazed at the loud, visceral reaction. She knew Raymond would be a goner very soon, and if it was going to be a three-way blowjob there was no time to waste. She muscled her mother aside, took Raymond deep into her throat, and motioned Brie into position. Brie took over, giving Raymond a brief memory of the high suction technique he remembered from Brie's pool parties, and then Kay took the helm again, her hands at the crease of his thighs, her thumbs tickling the top of his ball-sack as her throat contracted on the swollen shaft. It was all too much for Raymond. He cried out again to the blue-skied heavens, and flooded Kay's mouth with his seed.\n\n\"I hope you and Brie'll come and sunbath with me after Kelsey leaves,\" Kay said after she swallowed her salty snack. She walked through the water toward the pool steps. \"It's lonely here during the day.\"\n\nRaymond watched her beautiful ass as she climbed the steps, sparkling water cascading over it off her shimmering red hair.\n\n\"Daddy doesn't mind,\" Kelsey said to her friends, setting the hook hard.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\nRaymond's old Toyota shuddered when he turned onto the rutted road to the dunes. It was really more of a two-track trail, along the edge of a cattail choked marsh, leading across a State Wildlife Preserve. There were many such areas on the shores of the Great Lakes, but the one the kids were driving into was known more for its human wildlife than the animal kind. The dunes had long been a place to party, and the local authorities didn't interrupt things much, as long as it didn't turn into a trash dump and nobody got hurt. It was a big area, quite a bit of it right on the beach, but it seemed to be falling out of favor. The previous generation of partiers got married, had kids and calmed down, and Kelsey's generation didn't seem as eager to make the long drive to have some fun.\n\n\"Fuck, this road sucks,\" Kelsey said as the bottom of Raymond's car scraped on a sandy hump in the center of the trail. \"Do what Austin's doing.\"\n\nAustin was just ahead of them, in a grimy white Jeep Cherokee. He had two wheels on the center hump and two on the edge of the trail. Raymond tried it and the scraping stopped.\n\nIt was slow going and took twenty minutes to get to their destination \u2014 a sandy peninsula with craggy old Black Willow trees and clumps of gently swaying beachgrass.\n\n\"Yay! Nobody's here!\" Kelsey said when their favorite spot came into view. \"I was worried there might be old fisherman or somethin'.\"\n\nRaymond opened his trunk revealing one of the reasons his car had scraped bottom so much on the way in \u2014 a full load of firewood previously destined for his parents' fireplace.\n\n\"Awesome!\" Kelsey said. \"You musta took half their pile!\"\n\n\"Yeah, he's not gonna be happy,\" Raymond said as he started tossing the wood out onto the sand.\n\nWhen his trunk was empty he got to work building a nice fire while Kelsey, Brie, Austin and their friend Donny started setting up four tents \u2014 a big one Donny's father used in hunting season, and three smaller ones. They smoothed the sand underneath them and set them in a semi-circle, surrounding the fire and overlooking the vast, ocean-like lake. Donny pounded long plastic stakes into the sand with a hammer to secure the tents to terra firma. \n\nA big shiny Nissan Murrano appeared, moving almost silently across the sand. Two girls bounded out of the passenger side doors, and two boys stepped out of the near side.\n\n\"Partyyyyyy!\" one of the guys bellowed.\n\nKelsey ran over and hugged all four of them. They opened the hatch and hauled out sleeping bags and air mattresses to add to the pile of gear Donny had brought.\n\nThere were four coolers nestled between two of the tents, with an assortment of craft beer, hard cider and bottled water. Brie contributed four bottles of Larceny Bourbon from her father's stash. Before the sun went down the fire was hot and young throats were burning from the 92 proof liquid gold.\n\nWhen the last of the air mattresses was inflated and the sleeping bags were spread out, Kelsey emerged from the big tent naked.\n\n\"Nudie Kelsey!\" Tyler growled. \"I figured you'd kick things into gear! I love ya baby!\"\n\nHe downed a mouthful of bourbon, whooped at the burn as it hit his gullet, and started chucking off his clothing, throwing it every which-way.\n\n\"Tyler! You're funny!\" Kelsey giggled.\n\nShe sauntered to his side when he was fully naked, reached for his neck, and pulled him into a steamy kiss. His cock hardened in her hand, and in one fell swoop Kelsey was down on all fours and Tyler was fucking her. The gang was settling onto blankets around the fire, mesmerized by their little porn star friend, and the way the firelight made her glow.\n\n\"Fuck yeah,\" Josh said quietly as he watched, speaking the words everyone was thinking.\n\n\"Fuck yeah!\" Kelsey sighed, reinforcing the communal thought.\n\nShe rose up on her knees and Tyler cupped the base of her soft tits as he fucked up into her gyrating ass.\n\n\"Fuuckk!\" Donny said softly, amazed at Kelsey's raw sensuality. \"Cinnamon fuckin' Sugar!\"\n\nHe pulled his phone out of his pocket and aimed it at the carnal display.\n\n\"No,\" Brie said, pushing it down. \"No video. No pictures. Okay everybody? Let's just enjoy, and remember.\"\n\nSarah and Trina were relieved. Neither one wanted to be a slut on the internet. In private? Yes, let the slut flag fly, but not on the internet.\n\nThe bourbon bottle was passed, and twilight turned burnt orange on the watery horizon. As Kelsey and Tyler continued to entertain their friends, hard cocks were loosed, shorts and tops were tossed aside, and a lovely, fire-lit orgy blossomed.\n\nThe girls were slightly outnumbered \u2014 Brie planned it that way \u2014 so there was usually at least one double-team happening, usually a spit-roast of some kind, or a gagging tea-bag, or just a stroking female fist, keeping the extra boy hard and ready to plunge into yet another warm hole. \n\nTrina was the first girl covered in cum. Everyone knew she loved that kind of thing, so Brie organized the first messy plastering. It happened when Trina was cumming, a serendipitous bit of luck that thrilled Brie to no end. Trina was overwhelmed, writhing around on the red-plaid blanket, her hands spreading the goo on her skin as her tongue lapped the dripping stuff of her lips. She was a glorious mess.\n\nRaymond was dubbed Fire Man and fed the glowing coals with fresh lumber long into the night. It was a pitch-black night with no moon, and stars so three dimensional you felt like you could walk right out into them. The gentle breeze of the day died, leaving a just warm enough stillness, with small waves lapping at the sandy shore, whooshing their hypnotic song.\n\nLong after midnight Kelsey and Austin retreated from the writhing, moaning pleasures and sat at the edge of the water, looking out into the darkness.\n\n\"So what do you think of me?\" Kelsey asked, the bourbon and the post-orgasmic buzz making her contemplative. \n\n\"Wow, big questions,\" Austin said. He looked at Kelsey, siting cross-legged on the wet sand, her body slumped a bit, with flickering firelight illuminating her back. \"What do I think of you? I love you,\" he said. \"Don't take that the wrong way. I don't think we're like a couple or anything. I just think you're awesome. I love that you're fearless. I love that you're Cinnamon Sugar. I love that you let a guy with a cock bigger than your thigh put in in you...on camera,\" Austin smiled. \"I love that I can sit here. Naked. I never do that. Not when you're not around. You just make life seem so...doable. I don't mean girls...I mean life. I love that it's so doable...for you. You inspire me.\"\n\nKelsey smiled. Even in the dark it lit up Austin's heart. \n\n\"You know, you were my first,\" she said. \"I never told you that, 'cause I was embarrassed that I was eighteen. Trina and Brie were way ahead of me.\"\n\n\"No shit?\" Austin said. \"Wow...\"\n\n\"You made me fearless,\" she said. \"There was something about you, by the pool that night. It was the first time I'd felt that way. You started it.\"\n\n\"Wow,\" Austin said. His smile lit up Kelsey's heart.\n\n\"Wanna fuck some more?\" she asked, her eyes nearly glowing with sparkly happiness.\n\nShe rolled onto him, her tongue searching deep in his mouth. The wet sand was cool and hard, but it mattered not. Austin went onto his back, and his young cock slipped into Kelsey's pussy as the hot kiss burned on. Halfway through the primal fuck they rolled, and Kelsey's long red hair was matted with wet sand when the big orgasm finally hit her.\n\n\"Fuck! she screeched into the darkness, as Austin's hardness drove her to a dreamlike finish. \"I love you too!\" she yelled. \"I fuckin' love you too!\"\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"I wish I had my camera,\" a woman's voice said. It came out of nowhere, startling Kelsey. \"You look like a work of art sitting there. Like a mermaid. You know you could get arrested for that?\" The woman was sitting in a kayak, drifting slowly toward the naked redhead. \"Where did you come from?\" the woman asked, her head craning in each direction, looking up and down the vast, empty beach.\n\nKelsey was sitting on a driftwood log at the edge of a creek that connected Sandgrass Pond to the great lake, resting after a long, early morning walk.\n\n\"I'm camping, with some friends,\" Kelsey said.\n\nThe woman sat quietly in her drifting boat, unable to look away from the beauty of the unexpected scene, Kelsey's tiny voluptuous body lit golden in the morning light.\n\n\"You don't have a stitch of clothing with you, do you?\" the woman asked, looking for some sign of something. She was amazed at the young woman's boldness.\n\n\"I hate clothes,\" Kelsey said. \"I mean I like 'em, but I hate 'em too. I guess I should get back, before...\"\n\n\"Don't go on my account,\" the woman said. \"I didn't see anybody else out yet, if that's what you're worried about.\"\n\n\"Oh, okay,\" Kelsey said, relaxing a little. She wasn't her usual sprightly self, having fucked herself to exhaustion just hours before. The long walk had tired her out too. \"You live around here?\" she asked the woman.\n\n\"A camp, on the pond. Just a rustic place. My husband and I, we use it on the weekends.\"\n\n\"Oh, nice,\" Kelsey said. \"He doesn't paddle with you?\"\n\n\"He doesn't anything with me,\" the woman said. \"Drinks his beer, watches his baseball. So...you camped out here?\" she asked, craning her neck to look for any sign of Kelsey's friends. \"I used to come out here when I was younger.\"\n\n\"Really?\" Kelsey asked.\n\n\"Yeah, it's been a party spot forever. My husband gets mad about it now, thinks it should be off limits, but he just forgot what it's like bein' young.\" The woman's kayak had come to a stop, nosed up on the sand right next to the log Kelsey was siting on. \"I can't believe you're naked,\" she said, glancing quickly at Kelsey's big tits again.\n\nKelsey smiled. The woman reached for a thermos down inside her boat, unscrewed the silver lid and poured steaming liquid into it.\n\n\"Is that coffee?\" Kelsey asked, her eyes big and longing.\n\n\"Rough night?\" the woman asked. She took a sip and held the cup out to Kelsey.\n\n\"It was awesome!\" Kelsey said, with a dreamy look in her eyes. \"I mean, some of the sex was rough, but that's good, right?\" She took the cup and swallowed some of the warm java, and moaned like she'd had a small orgasm.\n\n\"How many of you are there,\" the woman asked, looking up the beach again.\n\n\"Nine. We're just fuck buddies. Well, two of 'em are my best friends, but the rest are...last summer we called it the Slut Club.\"\n\n\"Fuck buddies?\" the woman said, shaking her head. \"Is it really that easy these days? I was born way too soon. Is it...all girls?\"\n\n\"Five boys and four girls.\"\n\n\"Five boys?\" the woman said. She looked like she couldn't quite believe Kelsey's story, and yet there she was, a perfect red-haired mermaid, naked on the deserted beach, acting like her presence, and the night of wild sex, was perfectly normal.\n\n\"Thank you,\" Kelsey said as she handed back the empty cup. \"Now I'll have the energy to walk back.\"\n\n\"So where exactly is this Slut Club?\" the woman asked, her eyes still searching the beach for some sign of life.\n\n\"You wanna join us?\" Kelsey asked, her eyes big and bright with the excitement of the thought. \"You know where the willows are? Out near the end?\" she said, pointing toward the haze that obscured the far peninsula. \"It so perfect at sundown. Why don't you come have a drink with us.\" Kelsey's mind was spinning. She'd learned at Tucker's studio how much fun lonely older women could be when they freed their minds, and she knew the boys would love to have fun with her. \"You have to. I'll be mad if you don't.\"\n\nThe woman explained why she couldn't, and started acting uncomfortable. She stowed her thermos and picked up her paddle.\n\n\"Thanks for the coffee,\" Kelsey said as the woman backed the little boat off the sandy creek bank. \"I hope you come see us later. You can just have a drink and meet everybody. What's your name?\"\n\n\"Sharron.\"\n\n\"Bye Sharron. I'm Kelsey.\"\n\nThe kayak disappeared around the bend as quietly as it had appeared. Kelsey soaked in the silence for a moment, and then she heard Sharron's voice and saw the little boat again.\n\n\"Fishermen comin'. You better run. I'll distract 'em if you want.\"\n\n\"Thanks Sharron,\" Kelsey said. She trotted off, along the edge of the wet sand, splashing through the foamy edge of the water.\n\nKelsey slowed after a tenth of a mile. She didn't bother looking back, but she hoped she wouldn't draw attention to her naked friends romping at the end of the peninsula. \n\nSharron had a different journey. It was a long paddle back to the camp, full of thoughts of her youth \u2014 days of drinking, smoking pot, an occasional bit of sex in cars. Nothing, though, even remotely as ambitious as what Kelsey seemed to be in the middle of. Was she even real? Sharron couldn't be sure, but she did feel the pull of Kelsey's hand when she gave her the thermos cup full of coffee. Yes, Sharron told herself, of course she was real. And yet, oh my God, she was so perfect! The hair, the freckles, the blue-eyed smile. And those tits! Mine are just as big, Sharron thought, but wow! Talk about perfection! Those boys must just be...to have a girl like her...wow! What do the other girls look like? And the boys! Five of them!\n\nSharron had to stop paddling numerous times as she crossed the broad pond, just to get a grip on her wildly spinning imagination. She pressed on, the camps on the far shore grew larger, and then she was home, pulling the slender boat out of the water, walking across the scruffy grass to the run-down old camp. Back to reality. Kelsey must have been a crazy mermaid dream. \n\nSharron's husband Andy was a tired man. Tired of living. Tired of loving. A couch jockey who lived for his Yankee games. It was nine in the morning when Sharon got home. He was in his thin flannel bathrobe watching cartoons on the TV. Sharron was full-on horny after daydreaming about Kelsey and the five boys . She put on her sexiest bikini, one she'd given up on years ago, and looked herself over in the mirror. She looked better than she thought she would. The stupid, pain-in-the-ass diet she was on was actually working. She went out to the kitchen and made some pancakes to reward herself, and to try and satisfy some of the hungers that had been gnawing at her for the last hour.\n\nShe and Andy wolfed down the tasty flapjacks, each bite swimming in maple syrup. It tasted heavenly, and Sharron moaned as the buttery sweetness brought back memories of eating food like that all the time. One forkful was so wet with syrup it dripped onto her bosom, and started trickling toward her deep cleavage. She giggled and got Andy's attention, wondering if he'd even noticed she fit into her sexiest bikini again.\n\n\"Lick it off honey,\" she said, aiming her tits at him, thrusting them out a little as her eyes twinkled with excitement.",
        "\"Kinda early, isn't it?\" he said as he got up, taking his plate to the sink. \"What are you wearin' that for? You're not young anymore you know.\" He turned and went to the couch, flopping down in front of the cartoons.\n\nSharron's face went limp. Her shoulders slumped. Fuck the diet, she said to herself. She cleaned up her chest with a napkin as best she could, dished up another pancake and smothered it with syrup.\n\nLater that day, after wearing her bikini all day and catching the eye of the neighbor men more than once, Sharron made a decision.\n\n\"I'm going home tonight,\" she told Andy.\n\n\"Okay honey. You comin' back?\" \n\n\"Yeah. In the morning,\" she said.\n\nIt wasn't that unusual. They lived an hour away from the camp, and they both came and went when they pleased. This time was different though. The sun was getting low in the sky, and Kelsey's siren song was drifting across the water. The coming sunset looked like it might even be the color of her hair. That's what Sharron thought anyway. She'd decided to accept Kelsey's invitation, just for a drink. If it was too weird \u2014 and she was sure it would be, a woman her age mingling with a youthful Slut Club \u2014 she'd just drive home for the night and go back to the camp in the morning.\n\nDriving out the rutted trail to the dunes was slow and contemplative. It'd been years since she'd been all the way out to the willows Kelsey had mentioned. She partied there when she was young, with friends she knew before she met Andy, but nothing very wild. Just car speakers blaring cassette tapes while everyone got stoned. She couldn't remember a single bit of sex out there at the willows.\n\nThe sun had just set when she got there, and she saw the glowing campfire-light flickering up in the trees before she saw the tents. She pulled up alongside Raymond's old Toyota and sat there motionless. She was frozen with stunned surprise. Everyone was naked! Kelsey saw her and ran to her.\n\n\"Sharron!\" she squealed. \"You came!\"\n\nSharron tried to smile, but she was suddenly so nervous she was sure it looked hideously forced.\n\n\"I told everyone about how nice you were,\" Kelsey said. \"We were hoping you'd come.\"\n\n\"Just...one drink...like you said. Okay?\"\n\n\"Sure! You'll stay longer though,\" Kelsey said, her smile sexy as hell. \"You'll see.\"\n\n\"I didn't know you'd all be...don't you wear any clothes?\"\n\n\"Not when we're together. Hey everybody,\" she yelled, \"my friend Sharron's here!\"\n\nKelsey led her by the hand to the blankets spread all around the fire and introduced her to everyone. Everyone but Donny and Sarah that is \u2014 they were on a sleeping bag covered air mattress in the big tent, embroiled in a steamy kiss as a long, slow, girl-on-top fuck continued. The whole thing was wide open for everyone to see.\n\n\"They've been goin' at it for like an hour,\" Kelsey said. \"I think they're in love or somethin'.\"\n\nSharron's body tensed up when she saw them. She felt like she shouldn't look, but nobody acted like it was a big deal. She'd never seen people having sex in real life before. It seemed warmer, in an odd kind of way, than the porn she'd watched. She could almost feel the heat radiating out of the tent.\n\nThe rest of the gang was more languid; the long, wild first night had given way to a relaxed, laid back vibe. Brie was laying back against Tyler, and he was gently caressing her tits, but the others were all just sitting around normally. It would have looked like a casual get-together if they'd been wearing clothes.\n\n\"Sharron came for a drink,\" Kelsey said.\n\n\"I'm on it!\" Josh said, springing up from his cross-legged position. \"What do you want? Beer, hard cider, bourbon...is there any of that wine left?\"\n\n\"No,\" Brie said. \"That didn't last long.\"\n\n\"Hard cider,\" Sharron said, trying to admire Josh's nice cock without him noticing.\n\n\"Excellent choice,\" he said. He rummaged in a cooler, pulled out three bottles and handed one to her. \"I'll leave these two out. I think it's better when it's not so cold.\"\n\n\"See?\" Kelsey said with a nice smile. \"Now you gotta stay for more.\"\n\n\"Oh, you're not staying?\" Josh said disappointedly.\n\nSharron's brow furrowed a little, like she was confused that beautiful naked young people would want her around.\n\n\"You gotta stay,\" he said. \"We've been savin' up our energy all day. Tonight's gonna be epic.\"\n\n\"Oh it is, is it?\" Sharron said, suddenly feeling the imaginary heat again. She took a big sip of cider. \"I used to party here,\" she said to Josh. \"I'm not gonna tell you when.\"\n\n\"That's cool! You used to drive out here?\"\n\n\"Yeah, drive, or come over in boats. It was...so long ago...\"\n\n\"Sharron, age doesn't matter,\" Kelsey said. \"The Slut Club doesn't have any rules. Raymond's in love with my mother, aren't you Ray? She's about your age.\"\n\nRaymond smiled. He was sipping bourbon, and hadn't really lost his buzz from the night before. Unlike his normal persona, he was cross-legged and making no attempt to hide himself. The fire light illuminated his growing cock, the mind-of-its-own thing doubling in size as Sharron watched. She suddenly felt a powerful attraction to the gangly young man.\n\nAustin was the other object of her not so furtive glances. A much more traditionally handsome boy than Raymond, she couldn't quite believe he was sitting ten feet away from her, completely naked. Kelsey saw Sharron looking at him.\n\n\"Austin, what do you think of older women?\" Kelsey asked. Sharron took a quick gulp of her drink.\n\n\"They're hot,\" he said, \"but I've never...\"\n\n\"Really?\" Kelsey said. She sounded thrilled.\n\n\"No. I mean it's just never...happened,\" he said, glancing at Sharron. \n\nNobody knew quite how to act with her there, except for Donny and Sarah, who were lost in love. Sarah had pushed herself up with her hands on Donny's chest \u2014 elbows locked, back arched, swiveling hips driving a deep fuck. Her moans were louder, like she was working toward an orgasm.\n\n\"Sharron, what's the youngest guy you've been with,\" Kelsey asked.\n\n\"You mean how many years younger? Oh, gosh...not very much. Five maybe?\" \n\nShe took another big swig, finishing off the bottle, happy that it had a nice little kick to help her relax. Josh and Austin both reached for another bottle for her. Austin got there first, and stood to deliver it. Sharron was stunned at the beauty of the boy. Muscled, but smooth. So, so smooth. Even his balls were smooth. There didn't seem to be a hair on him, other than the sexy curls on his head.\n\n\"Thank you,\" she said, a bit shakily. The whole situation seemed more and more surreal. \n\n\"Austin was my first,\" Kelsey said with a sublime little smile. \n\n\"Really?\" Sharon said. \"Were you guys dating?\"\n\n\"No, it was a party. Kinda like this. A pool party. I guess that's when the Slut Club started, right Brie?\"\n\n\"Yup. Kelsey turned us all into sluts,\" Brie said. \"You better watch out Sharron,\" she smiled. \"No one escapes the spell she casts.\"\n\nRight on cue Sarah's orgasm bubbled to the surface. It was a quietly beautiful, softly moaning thing, with her head thrown back and Donny's big hands on her tits.\n\n\"Nice Sarah!\" Kelsey quietly praised. \"She's so fuckin' sexy.\"\n\nSharron felt like she was in another world. A world were nothing seemed to matter but good vibes. And sex. Hot, steamy sex. \n\n\"You warm Sharron?\" Kelsey asked, noticing her flushed neck and face. \"We love skin around here. It's up to you though. It's okay if you just wanna sit with us. We love havin' you here.\"\n\nKelsey's words were hypnotic. Sharron was beginning to wonder about the spell Brie mentioned, and the whole mermaid, siren of the sea thing. She downed half the bottle of hard cider in one gulp.\n\nRaymond got up, threw two logs on the fire and poked at if for a while with his stick. Sharron's eyes zeroed in on his cock, still swollen a bit, dangling languidly between his long, slim legs. Kelsey saw her looking again.\n\n\"Cocks are fun, aren't they?\" Kelsey said. \"Watch.\"\n\nShe got up and knelt next to Raymond. By the time her hand wrapped around his cock it was already half sprung to life. He stopped poking the fire when Kelsey swallowed it.\n\n\"Is it that easy?\" Sharon said, her voice throbbing with her pounding heart. \"Just pick one and...\"\n\n\"Yup,\" Kelsey said, stroking Raymond's full length. \"Everybody's everybody's.\"\n\nSharron no more than glanced at Austin and he was on his feet. She nearly froze as he approached her, his cock already rising. She clasped it in her sweaty hand and looked up at the boy. So fucking smooth! How can anybody be so fucking smooth!\n\nHer other hand reached for the smoothness \u2014the side of his waist, then his hip, and then his cute, flexing ass. A stuttering breath left her open mouth. \n\n\"Taste him,\" Kelsey said, watching her new friend get swept away by the magic.\n\nSharron's tongue came out from her suddenly dry mouth, and cradled the underside of Austin's purple tip. The touch sent a jolt through both of them. Her mouth flooded with warm saliva and she engulfed the hot shaft, going from tentative to ravenous in seconds.\n\n\"Yeah! Do him good. He loves that shit,\" Kelsey said. \"Whaddaya think Austin? Your first older woman?\"\n\n\"Fuckin' hot!\" he said. His quivering voice and twitching ass sent shudders through Sharron's overloaded body.\n\n\"The party's started everybody,\" Kelsey proclaimed. \"It's our last night together. Sharron's gonna make it extra special.\"\n\nSharron just about had an orgasm when Kelsey's words hit her and she realized where things were going. She was in for something she'd never even imagined \u2014 a free love orgy under the stars, with a crackling fire adding to the heat. \n\nSuddenly she wanted to be naked. No, it was stronger than that \u2014she needed to be naked, old skin and saggy tits be damned. She wanted to bend over and let Austin ram it home. She wanted to howl at the fucking moon.\n\nThere was so much pent-up inside her. Decades of sexual frustration. Deep, dark frustration, the kind that would break many a woman. It finally broke Sharron, and on that moonless early summer night she let her slut flag fly.\n\nOn her hands and knees \u2014 she used to love the doggie \u2014 Austin plunged her dry depths and brought glorious wetness to the surface. When he handed off to Raymond, the new cock sunk in slick and velvety, so much so he groaned loud enough to get everybody's attention.\n\n\"Fuck yeah!\" Tyler said. \"I'm next buddy.\"\n\nSharron came with a jolt when she heard it. This is not my life, she thought, but I fuckin' love it!\n\n\"Look at you,\" Kelsey said to her as Raymond fucked her down from her lofty orgasm. \"All sexy and naked.\" She joined Sharron's party, playing with her pendulous tits, and then she kissed her.\n\nSharron's mind spun in ten different directions. The mystical mermaid was kissing her, and a big cock was still inside her. Raymond had a second wind and picked up the pace, much to Sharron's delight.\n\n\"Yeah! Do it!\" she said, a little tentatively.\n\nKelsey smiled. She knew the ice was broken, Sharon was loving it, and pretty soon she'd be all in.\n\nKelsey pushed Raymond away and buried her face in Sharron's ass. There was no fuckin' around anymore. Kelsey was all in too.\n\nShe pushed the older woman down, rolling her onto her back. Sharron was close enough to the fire to feel the heat, and the flickering light lit up her body.\n\n\"Wow! You need to do some better sunbathing girl,\" Kelsey said.\n\nSharron was nicely tanned outside her one-peice bathing suit tan-lines, but she had a fresh sunburn from wearing her old bikini that day, giving her otherwise pale belly a red glow. \n\n\"My mom would freak!\" Kelsey said. \"She's a tan-line fanatic.\"\n\nKelsey buried her head in Sharron's pussy, and Sharron giggled. The giggle turned into a laugh. Sharron had discovered the fountain of youth, and its name was Kelsey.\n\nSharron finished off all the hard cider that night, and had some bourbon too. It was a wild son-of-a-bitch of a party. Kelsey had mentioned \u2014 when Sharron had met her at the creek \u2014 that \"rough sex is good, right?\" At the time, Sharron didn't have a reference point to answer that question. But after her night at the willows she did. She loved the shit out of it. Hard fucks; hard finger fucks; three boys at once in all three holes \u2014 yeah, she tried anal, and loved it. There was all kinds of new things, even girls that fucked her harder than any man ever had. It was raw, blissful sex, the way she'd only dreamed of. \n\n\"Yeah! Fuckin' do it!\" she yelled into the flickering light of the willow trees above. \"Yeah!...Yeah!...Yeah!\" she hissed through clenched teeth. And then, as a big, fat, relentless young cock pounded her hard into the sand, her eyes glowed with fiery lust. \"Fuckin' give me that fuckin' cock!\" she growled like a wild woman.\n\n\u2014\n\nShe woke the next morning feeling different. Her head hurt, her pussy hurt, her asshole hurt. Every muscle in her body ached. And she was happier than she'd ever been in her life. As bad as she hurt, she wanted to join the Slut Club. Bad.\n\nKelsey was behind her, warm and soft. They'd fallen asleep in one of the small tents, just the two of them. Sharron tried to remember why. She opened her dry mouth and it tasted of Kelsey. Yes, that was it. The two of them had outlasted the rest, the others tired from the previous night and unable to go the distance. She and Kelsey \u2014 the most perfect sexual creature in the world in Sharron's eyes \u2014 had a tongue and mouth session in the little tent, all alone in the inky black silence. It was perfection after all the hard-fucking orgasms.\n\nSharron eased herself away from the redheaded nymph, and out the door of the tent into the misty dawn. The sound of waves rolling gently on the shore overwhelmed the silence as she gathered her clothes that were scattered on the sand. She dressed and walked to her car. The long, slow drive out the rutted trail seemed like a dream, and Kelsey and the boy's words echoed in her head... \n\n\"Oh my God, your ass is so nice!\"\n\n\"I wanna fuck you again.\" \n\n\"She's so fuckin' hot!\" \n\n\"Fuck yeah!...Oh fuck yeah!...You're gonna make me cum!\"\n\nShe rolled down the car window and listened to the early morning sounds as she drove \u2014 red-winged blackbirds in the cattail choked marsh, and the distant drone of a fisherman's outboard motor. But the echos of mind-blowing sex remained. She hoped they'd stay with her for the rest of her days.\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"I'll miss our talks,\" Kay said, teary-eyed at the bus station.\n\n\"Me too Mom,\" Kelsey said.\n\nThey both new their relationship had grown by leaps and bounds over the course of the three weeks Kelsey'd been home. They hugged each other tight as they waited for the boarding instructions.\n\n\"Tell Tucker I love his nice cock,\" Kay said, quietly in Kelsey's ear.\n\n\"Mom!\" Kelsey exclaimed.\n\n\"What! You love it too!\" Kay said.\n\nKelsey giggled. It was the craziest mother/daughter conversation ever at a bus station. Well, maybe not, Kelsey decided, but it was plenty crazy. Kay giggled too.\n\n\"Have fun at work honey,\" Kay said when the passengers were called.\n\n\"I will Mom,\" Kelsey said. \"Tell daddy I love him.\"\n\n\u2014\n\nBack in the city, Kelsey hailed a cab at the bus station. When she got home she dumped her big duffel bag on the floor of the apartment she'd moved into at the end of the semester.\n\n\"How was your vacation?\" her roommate Hannah asked.\n\nA big smile grew on Kelsey's face before she responded.\n\n\"Fuckin' awesome!\""
    ],
    "authorname": "riverboy",
    "tags": [
        "redhead",
        "orgy",
        "beach",
        "camping",
        "swinging",
        "incest",
        "swimming pool",
        "older man",
        "nudist",
        "older woman"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/tuckers-studio-ch-23"
}