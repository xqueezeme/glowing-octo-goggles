{
    "title": "House of Feathers Ch. 01: Loving Bonds",
    "pages": [
        "\"Are you sure about this?\"\n\nIn response, she just smiled at me. The minx; she knew. \n\nTaking her hand, I led her off the shaded balcony down the three back steps onto the beach, to two tall palm trees growing perhaps three meters apart. The surf on the coral reef 40 meters out from the shore was higher than normal. Her green eyes blinked in the tropical sun.\n\nThe small beach villa suited us well. Simple but very comfortable, it lay on a promontory, the back facing west towards magnificent sunsets each evening and the front onto a small, calm bay with coral sand beaches. The inhabitants of the small town down the coast left us alone, guaranteeing us all but total privacy. The exception was Monday, when a local couple showed up to do a major cleaning, gardening and so forth. They had been the only outside presence in weeks. \n\n\"In or out?\" I wondered out loud. She turned and looked at me, wondering.\n\n\"Out,\" I said. \"You should be able to watch the waves.\"\n\nI let go of her hand and put down the small bag I had been carrying in the other hand. \"Over here, please.\" She smiled and moved between the two trees I indicated. Her tawny body, free of tan lines, cast a small shadow in the overhead sun. \n\nI reached into the bag and brought out four padded leather cuffs. Kneeling, I fastened one on each slender ankle and then, rising, one on each wrist. On an impulse, I wrapped my right arm around her waist and pulled her naked body tight against mine. She leaned into me, arms around my neck, raising her lips eagerly for mine, our tongues embracing inside. She ground her pelvis against my thigh. It went on and on until she moaned slightly and, pulling away, gasped for breath.\n\nI'd had whole weekends with other women less memorable than that one single kiss.\n\nHer eyes were on mine, then shifted to the bag, her question unvoiced but obvious. I had already placed four lengths of paracord on the trees. I saw her eyes run up one of them to where it circled the palm trunk three or four meters up, then flick across to the other, her gaze running down it to the base of the tree where the others lay looped on the white sand.\n\nShe flushed, licked her lips and smiled again.\n\nGently taking her right wrist, I fed one of the dangling lines through a v-cleat on the back of the custom-made leather cuff. Adapted from yachting fixtures, the simple device allowed instant yet rock-solid adjustment of paracord fed through it. I hooked up her left wrist and adjusted the two until she was standing flat-footed, facing the sea, with her arms stretched up like a pagan priestess saluting the sun. \n\nI stepped back, watching her breasts rise and fall. Their nipples were erect. I could see their perfect shadows beneath her on the smooth sand. It was an intensely erotic image.\n\nI ran my hands over them, weighing them in my hands. Half-hard, my manhood shifted heavily, balls rising as my scrotum tingled and crinkled. Her eyes shifted to it from my eyes. She gave another small smile, started to say something, stopped.\n\nIt was I who leaned forward this time as we kissed, my hands running down her flanks to her hips. When I pulled her against me, I could feel my cock, now fully hard, pressed between my stomach and hers.\n\nI knelt behind her and lifted up her bare left foot. Her knee bent as I put her foot down on one of my thighs and started a sensual foot massage. My thumbs pressed into her foot as I rubbed along her sole. She sagged a little, almost purring with pleasure. I made a fist and worked the knuckles into and around her heel and she groaned.\n\n\"You can do that all afternoon,\" she said softly.\n\n\"Other plans,\" I replied, continuing to rub her foot and ankle. I released her and switched to the other foot. After a few minutes, she sighed as the massage ended.\n\n\"Thank you,\" she said softly.\n\n\"My pleasure, dear.\"\n\nI fed paracord through each ankle cuff clamp and tightened the cords until she was standing spread-eagled on the warm, white sand, feet still on the ground, but her arms now tighter, holding more of her weight. I stood up and eyed my beloved captive. \n\nHer firm buttocks slid under my hands and I gently brushed my fingertips across the side hollows and up to the small of her back. Walking around to her front, I placed a finger on either side of her bare labia, then slowly stroked upwards, running up her pubis, ending at the top of a well-trimmed landing strip. She smiled, but her eyes were a bit distant.\n\nI reached up and cupped her breasts - firm as the day we had first shared a bed - and thumbed her nipples. They stiffened still more. I loved those breasts; to me they were the perfect shape and size, with tips just calling out to be tasted and licked and nibbled for hours on end.\n\nSometimes I did. She was amazing.\n\nReaching into the bag again, I brought out a tube of sun lotion. Squeezing some onto my hand, I put it down and began rubbing it into skin too perfect to be allowed to burn, starting with her ears and the nape of her neck and working down to her feet.\n\nI took my time; we had all day. She quivered as my fingers lingered over breasts, belly and bottom. When I finished, I stepped back. She stood in the sun and smiled languidly at me. Behind me, the surf curled and a warm ocean breeze was caressing our skin. A perfect day.\n\nI picked up the bag and moved it to a low bench in front of her. Reaching into it, I brought out the toys, one by one, laying them out in a line. A small bottle of coconut massage oil. An iPad. Ear buds. Two pairs of nipple clamps with dangling thumb-size vibrators. A riding crop, then a soft doeskin flogger. She softly bit her lower lip. A bottle of lube, then a new toy we'd never used before - her eyes widened at the sight of a slim purple butt plug. Lastly, a long, stiff, bald eagle flight feather, found on a canoe trip in northern Canada.\n\nGood planning can make for good sex.\n\nI reached in again and pulled out a ball gag and a soft leather blindfold, the same colour as the cuffs. Her eyes flitted from one to the other and her breathing sped up. I could see a drop of moisture on her thigh.\n\nI paused, then put the ball gag back in the bag. \n\n\"Sure about that?\" she asked with low smile. \"We wouldn't want to alarm the neighbours.\"\n\nWe both knew that we were far away enough from the town that nobody would hear anything, even without surf, so I just smiled back. I liked to hear her moans and cries and she knew that, too.\n\nThe sunblock had had time to settle into her skin, so I reached for the massage oil, already warm in the sun. I poured some onto my palm, rubbed both hands together and repeated my earlier path. This time, I took more time over her more sensitive areas. I made a point of rubbing it in around her puckered rosebud, gently but persistently thumbed her clitoris and slowly worked the oil into her breasts. \n\nHad anybody come by, they would have seen her first attempt to pull free of the restraints, hands straining against her bonds.\n\n\"Don't be like that,\" I whispered into her ear. \"We're only just beginning.\"\n\n\"Don't make me wait too long,\" she whispered back.\n\n\"Honey,\" I replied, \"waiting's what it's all about.\" I continued rubbing the oil over her sleek body until she glistened in the sun. My cock throbbed at the sight. \n\nReaching down, I picked up the blindfold and fastened it around her head. She sucked in her breath, then seemed to stand a little taller, as if daring me to do my worst. My worst? How about my best?\n\nTime to get her ready. \n\nI picked up the doeskin flogger and dragged it across her stomach. Her breath hissed in slightly in surprise and anticipation. I stepped back and waited. We didn't need the ear buds; the surf was providing natural white noise.\n\nI waited a bit and then struck out with the flogger, laying it across her bottom and then continued, pausing from time to time, working my way down to her calves. She shrieked a little, but - as I had expected - didn't scream. The flogger was soft, this wasn't about pain and the lashes were more being dragged across her skin than striking it. Nonetheless, it was waking up nerve endings, getting them ready for more serious activities. \n\nI started on her front, covering every square inch with gentle lashes, stimulating her flawless skin.\n\nShe was breathing heavily, her breasts rising and falling. Sweet dew oozed from between her labia.\n\nI stopped, reached for the first nipple clamp on the bench and fastened it to her right nipple, just tight enough to stay in place. She squirmed and yelped just a little. I repeated it with the other. She squirmed again, but stopped when she felt the vibrators swaying back and forth.\n\nI went to the IPad and turned it on. The setup was the product of hours in my lab and the vibrators could be computer-controlled. I set them for a low, steady vibe and she suddenly smiled when they turned on.\n\nI loved that smile.\n\nI left her there for a moment and lubed up the butt plug. Under its colourful shell lay more than just a motor, for it too was linked to the computer. \n\nSquatting down behind her, I again ran my finger between her cheeks and was delighted to see her pucker pucker still more. She squirmed when the tip of the plug touched her, but I slowly eased and twisted it in. Her legs were quivering when I finished. I gave it a quarter turn and a slight tug and she groaned. Little did she know...\n\nI left it turned off for the time being.\n\nI got up and shifted position. Kneeling before her, I began to tongue her exposed clitoris, which by now was prominent in its excitement. Just the tip of my tongue at first, directly on the precious pearl under its hood, then, gradually, expanding to long, lingering licks the full length of her lips. She tasted of honey, salt, musk.\n\nHer hips started to buck and I quickly backed away.\n\n\"No!\" she cried. \"Don't stop!\"\n\nInstead of replying, I reached for the third and fourth nipple clamps and quickly fastened them onto her dripping labia.\n\n\"What the hell?\" she said, whipping her blinded head back and forth, as if that could relieve the strange new gripping pressure. All four vibrator pendulums started swinging. \n\nI've often thought that it's a pity custom demands the human body be clothed in public. There is a lot of underutilized potential for decorating it - as opposed to merely covering it creatively. Turn me loose and the street scene would be a lot more interesting than the usual astigmatic civic art. But that's just me. \n\nI stepped back and reached for the iPad. I ran the power on all five devices up, then down and watched her eyes close tight with concentration. Occasionally, she tried to shift in her bonds, but got no play in the lines. I experimented with different settings for a few minutes.\n\nOne setting allowed me to turn vibrators in a specific order. I set it for one after the other, full power - one boob, then the other, then one pussy lip, then the other. The butt plug I left on full-time. The 'circle' of stimulation sped around and around her most sensitive areas.\n\nI switched to both breasts, then both labia - back and forth, faster and faster. I stroked my hand down her sides and inside her thighs. I could feel taut muscles straining underneath her perfect skin.\n\nI turned to one last, special setting. It caused each linked device to run independently with constantly varying power and for constantly varying durations. I could even set them to music. I'd tested it in the lab, but had never tried it for real.\n\nThe effect was spectacular.\n\nAt first, it was just a little shimmy to her breasts, as if just one vibrator was going off on low speed. Then she suddenly arched her back, shook, bucked, tried to twist. Her hips rolled, as if responding to an invisible lover.\n\n\"Fuck!\" she cried. \"What are you doing to me?\" I didn't answer.\n\nI left the computer on random for a couple of minutes. Her nostrils were flaring, her nipples prominent. Her knees bent a fraction from time to time, as if trying to escape the stimulation.\n\nIt didn't work. A flush started to grow on her face and shoulders. Her breathing sped up. Her hands formed fists and her toes dug into the sand. She began to moan and gasp.\n\nThere was a quiet period, with her simply standing, then all five instruments must have then kicked in hard together, for she gave a shrill cry and lunged forward and back until stopped by the restraints. \n\nSo close.\n\nShe started panting, quivering, her hips jerking forward and back, went rigid and...\n\n...didn't cum, because I suddenly turned off the machines.\n\nShe sagged, groaning and twisting, trying to get her thighs together. And couldn't. Denied orgasm, she cussed me. She cussed me high and low, she cussed me plain and fancy, she cussed me old and new. She cussed me in three different languages. She cussed me and the trees and the now-silent vibrators. I thought I had a pretty good grasp of profanity, but in her frustration she taught me new words. It didn't go on for long, but it was impressive while it lasted.\n\nShe didn't say her safe word.\n\nI switched all the vibrators on low, waited a couple of minutes until she fell silent and finally picked up the eagle feather. Some North American natives feel they have magic powers. I agreed.\n\nI approached her from the front, silent on the soft white sand. As I watched her gleaming breasts rise and fall with her breathing, my cock throbbed, aching to bury itself in her sweet warmth. Her blindfolded head sagged a little and her long hair moved with the wind. The trees too swayed gently in the breeze and she was being slowly stretched and lowered as they moved.\n\nGently, ever so gently, I ran the very tip of the feather along the inside of her left thigh. She tensed, then her head snapped from side to side, as if she were not entirely sure she had felt something. I repeated the stroke on the sensitive skin of the other leg.\n\nI walked around behind her, reaching out between her outstretched legs, slowly and lightly dragged the edge of the feather back along over her clitoris and vagina and around her stretched anus. She shivered.\n\n\"We didn't say anything about tickling,\" she protested. \n\n\"True.\" I agreed, \"But I'm not trying to make you giggle.\"\n\nI moved the edge of the feather like a razor down the ribs of her right side, then moved around to her front and working around the clamps, stroked first the nipple of one breast, then the other, with the tip. Her arms strained against the bonds. Her proud nipples moved under the swaying vibrators.\n\nFor the next 10 minutes, I touched and stroked and teased, rarely twice in the same spot. She was gasping, so close to orgasm, yet not quite able.\n\nI stopped and dragged the bench in front of her and poured more oil on my cock and between her shaking breasts.\n\nWithout warning, I unclipped the vibrators from her breasts. She yelped and clenched her teeth at the pain of returning circulation. I kissed, then gently rubbed her beautiful globes, softly massaging her nipples to restore circulation. I got up on the bench and holding her breasts together, thrust my rock-hard organ up in between them. \n\nEven in her frustration, she giggled. \"You always like that, don't you?\"\n\nI didn't reply. Instead, I told the IPad to crank the remaining three vibrators up to maximum. As I began thrusting rapidly between her tits, she began to give a series of short cries.\n\nAnd then, shuddering, mewling like a kitten, she came.\n\nAnd came.\n\nAnd came. How I envy women at times like this!\n\nI stopped before I came myself, slowly turned off the vibrators. Raising her head with both hands, I kissed her gently. Her tongue licked the inside of my lips. I slipped off the blindfold and her eyes blinked in the sun. \n\nI went back up into the villa, returning a minute later with a glass of sparkling grape juice. I put it to her lips and she drank gratefully.\n\n\"Thanks,\" she said. \"I needed that. I can't remember ever cumming so hard. What are those things?\"\n\n\"Just some new toys,\" I smiled and kissed her again, a bit more firmly this time. \"I love you,\" I said. She smiled and return and leaned towards me for a gentle kiss.\n\nThe head of my rigid cock brushed her stomach and she looked down at it before looking up at my eyes again.\n\n\"Did you...?\"\n\n\"No.\" I said. \"Not yet.\"\n\nI reached around and slowly unscrewed the butt plug, dropping it onto the ground. I knelt in front of her and gently unclipped the last two vibrators. She hissed as the blood rushed back into her swollen tissue. I leaned forward and tongued her labia gently.\n\n\"God,\" she said. \"You're so damned good to a girl. But it's your turn, now, please.\"\n\nI nodded, stepped back up onto the bench and held my cock in front of her face, its engorged head against her lips. Leaning forward, she eagerly sucked it into her mouth. Handless, she bobbed her head back and forth, sucking hard. Again and again, her tongue flicked along the tip. She shifted to running her tongue around and around the head. Inside her mouth, the head of my dick felt as big as a billiard ball. I was getting very close, fire building in my groin. I could feel her teeth against my shaft as my release built. My balls were like rock.\n\nI stepped back, breathing hard.\n\n\"No?\" she asked.\n\n\"No,\" I said. \"Not that way.\"\n\nI got down, kicked the bench away and slowly thrust my rigid cock inside her dripping sex. She was tall enough that I only had to bend my knees a little, even with her legs spread wide.\n\nLacking the support of a bed or wall to thrust against, I reached around and grasped both of her cheeks and started to slowly move in and out, stopping with my head just inside her each time. She moaned with pleasure and I could feel my anus starting to twitch with pre-orgasm spasms.\n\nI sped up my thrusting, hammering into her with my desire. I could feel her slippery ribbed insides sliding across the rim of my head and groaned myself. Suddenly, I could feel her clench me inside as she shouted her orgasm. With that, I exploded myself - volcanic, white-hot, molten. \n\nAfter a minute, I pulled out of her, released first her feet and then her hands. She slumped against me, utterly spent. I picked her up in my arms and carried her up into the villa and laid her on the king bed. I climbed up next to her and we spooned in a post-orgasm semi-daze, sleeping for a while.\n\n\"I love you,\" I whispered into her ear.\n\n\"And you!\" she said. \"I never know how much fun we could be.\"\n\nSuddenly she whirled, straddling me with my arms pinned against my sides by her strong, flawless thighs. Grinning, she held up the eagle feather before my eyes, then reached behind her and used it to stroke my now-limp cock and balls. Empty as they were, they twitched and grew a little.\n\nShe bent forward and whispered softly into my ear.\n\n\"I love you, dear. But tomorrow, lover, tomorrow, it's my turn.\""
    ],
    "authorname": "TarnishedPenny",
    "tags": [
        "bondage",
        "vibrators",
        "butt plug",
        "tease and denial",
        "feathers",
        "titty fuck",
        "oral",
        "light flogging",
        "outdoors",
        "standing"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/house-of-feathers-ch-01-loving-bonds"
}