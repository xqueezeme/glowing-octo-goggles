{
    "title": "Home for Horny Monsters Ch. 52",
    "pages": [
        "Here it is, the next chapter of HFHM, and just in the nick of time!\n\nIt should go without saying that my plans (much like yours) have been royally fucked for the foreseeable future. I still intend to keep writing as much as I can each month, but with everything closed down and my family now at home during odd hours of the day, my writing schedule has been screwed up like crazy!\n\nAnyway, welcome new reader! This is the 52nd chapter of a fantasy sex epic with plenty of magic, fighting, plot and sexual deviance. It would make the most sense for you to start at the beginning, but hey, you are probably quarantined, so who's gonna stop you?\n\nReturning reader? I missed you! I have gotten a lot of feedback prior to this chapter begging for another scene with this character, and I hope I did it justice. Also, thank you to everybody who has made sure to leave me comments and reviews, I really do read them all and they really do keep me inspired (especially after some of the meaner ones...), so keep it up!\n\nOkay, enough from me, I hope you like this one!\n\nThe Person in Charge\n\nMike was face down on a tall table as Zel and another centaur examined the back of his scalp. He hissed in pain as they checked his wound for any other sources of infection.\n\nAfter his bath with the fairies and Naia, he had eaten a light dinner and gone to bed. In the morning he woke up with a pounding headache that felt like a sinus infection. The back of his scalp was tender and swollen, and that was when he learned that the moisture from his hours long bath had kept his wound from scabbing over properly; it had opened during his sleep and bled all over his pillow. When the wound had tried to close up again, his pillow and hair had gotten caught inside, which triggered a nasty bout of swelling all along his scalp.\n\nThe wound was bad enough that the centaurs had taken him in, and were constantly opening his wound to clean it and apply medicine. Based on the light coming in through the flaps of the yurt, it was almost evening. He could hear music coming from the camp followed by the smell of freshly baked bread that made his mouth water.\n\n\"Okay, we may be in the clear,\" Zel announced. \"I want you to lay there until you clot. I'll be back in an hour.\"\n\n\"But I\u2014\"\n\n\"No arguments.\" He could hear her tail swishing angrily. \"I'm going to make sure you are in the clear before you leave, especially since you refuse to follow directions.\"\n\nHe sighed, and decided not to argue. She had been guilt tripping him ever since his arrival, and not only did his head still hurt, he was bored out of his mind. Zel and her assistant left, and it occurred to him that he should have asked for a snack.\n\nAlone in the dark with his thoughts, he went over his plan for the days ahead. He needed to find a way to cross into the Underworld without simply dying, and felt his best bet would be to speak with Death. Sulyvahn might be willing to explain it to him, but he got the feeling that the dullahan was probably under orders from the queen to keep his mouth shut.\n\nSomeone laughed outside the tent, and Mike shifted to make himself comfortable, careful not to rub the back of his head. Zel had given him a haircut to see the wound better, and now his neck was all itchy.\n\nBetween lying in the dark and doing nothing else, his mind began to wander. He didn't want to take a nap, but he felt like one was coming, and maybe then he could just skip the next fifty or so minutes and go straight to going home.\n\nHe closed his eyes and emptied his mind, then pictured the white sand beach of the Dreamscape. Maybe it wouldn't be so bad to get away to the salty shores of his mind after all and take a small vacation where Zel wasn't there to yell at him.\n\nThe transition was swift, and he found himself on the beach, his eyes gazing along the horizon of his mind. He was getting better at entering the Dreamscape from a waking state, but it was still more common to fall into normal dreams.\n\n\"Ha!\" He stood up and rubbed the back of his head. There was no sign of his wound, so he walked down to the edge of the water and pulled off his shoes, then nonchalantly tossed them over his shoulder where they burst into smoke upon impact with the sand.\n\nThe water felt cool on his feet and he started walking along the shore. Despite walking a considerable distance, anytime he looked up from the waves, the house was sitting right there, watching him. Sometimes he could circle it, other times it followed, but this little beach paradise was still plenty of fun to visit.\n\nOut in the ocean, a cloud dropped from the sky and rolled toward him, over the waves. Curious, he stopped to watch it break apart on the shore and scatter around him, casting the world into shadows. The house disappeared from view, and all he could see was the surf beneath his feet. The waves broke somewhere to his left, and he kept walking.\n\n\"So what's it gonna be this time?\" he asked. \"Your world will burn, mer mer mer.\" This was most likely the shadow come to bother him, and he simply wasn't in the mood to deal with the spirit.\n\nThe fog lifted in front of him, revealing a pier that went out into the ocean.\n\n\"Okay, I'll bite.\" He stepped onto the wooden planks of the pier and walked out into the water. The fog was thick out here, and he could only see a dozen feet in front of his face. \"So when do you think you'll\u2014\"\n\nHe froze in place at the sight of the cage that appeared from the darkness. Inside, a lone figure watched him, her hands wrapped around the bars.\n\n\"Cecilia?\" he asked.\n\nShe nodded, then stretched her arms to him through the bars. He ran to meet her, and they embraced through the metal bars. Was she an illusion? Just a figment of the dream world, appearing to torment him? Or perhaps a memory of some sort to give him comfort?\n\n\"Mike. A Ghr\u00e1 mo Chro\u00ed,\" she said, and his shoulder became wet with her tears. \"How I have longed to see you.\"\n\n\"Is it really you?\" He stepped back to get a look at her. The red stripe in her hair looked a little bigger, and her hair was a couple of inches longer. \"I can't be sure this is real.\"\n\n\"Nor I,\" she told him. \"I have been in this cage for such a long time, but my dreams have become so real. Did you know that? I can have dreams now. Often they are lovely, and sometimes not. I only sleep every few days, and not for very long.\"\n\n\"Oh.\" It couldn't be her, then. Banshees didn't need to sleep. Even so, her presence gave him a sense of peace, and he gladly embraced it, willing the dream to stretch out so they could spend more time together.\n\n\"Please,\" Cecilia begged. \"You mustn't come here, it isn't safe. The queen is planning\u2014\"\n\nA whiff of sulfur tickled his nostrils and his eyes popped open. The Dreamscape shattered apart and he was back on his table. The yurt had filled with the sound of roaring flames, and a dark figure fell from above, landing face down in the dirt next to him.\n\n\"Lily?\" He sat up on the table and looked down at the succubus, doing his best to keep disappointment off his face. Cecilia had seemed so real, even if it was only for a few seconds, that all he wanted to do was go back to sleep.\n\n\"Hey there, Romeo,\" Lily said. She was covered from head to toe in soot, and she stumbled to her feet, her face a mask of aggravation. When she shook her head, ash sprayed out in every direction. When she rubbed her eyes clean, it reminded him briefly of a coal miner.\n\n\"What on earth happened to you?\" he asked.\n\n\"Well, to start, nothing happened to me on Earth.\" She spat dust out of her mouth and then shape changed into Dana. However, she was still covered in soot. \"Oh, for fuck's sake, hold up a second.\"\n\nShe transformed into a little girl, and then into Sofia. The sudden shift in size caused quite a bit of the soot to fall off of her, and she repeated this process a few more times, then noticed a pitcher of water next to the wash basin near Mike's bed. She picked up the pitcher, turned into the little girl, then poured it over her head. As the water fell over her, she transformed into her original form, and most of the soot was now gone.\n\n\"That's much better. I can probably take a dunk in the fountain, if the nymph doesn't...wait, where are we?\" She looked around the yurt in astonishment. \"Please tell me we aren't too far from home.\"\n\n\"I'm with the centaurs. They're treating my head injury.\" He frowned. \"By the way, seeing you turn into a kid freaks me out a little.\"\n\n\"It's how I hunt these days. Sit on a park swing and wait for the pervs to come out of the woodwork. What did you do to your head?\"\n\nHe gave her a brief version of the events that transpired. When finished, he fixed her with a look. \"Wait a sec. How is it that you didn't know about any of this? I thought you were keeping an eye on my dreams.\"\n\n\"Ugh. Change in plans.\" She coiled up her tail and sat on it like a stool. \"The whole purpose of monitoring your dreams was to watch for your shadow buddy. I decided it would be even better to watch the shadow himself, and when I caught him skulking around your subconscious, I went after him.\"\n\n\"So you've been following the shadow this whole time?\" He looked at her with interest.\n\n\"Mmm-hmm. And let me say, it wasn't my idea of a fun date. That piece of shit led me on quite the wild goose chase.\"\n\n\"To where, though? If you've been gone for days, where have you been?\"\n\n\"Ugh, days?\" Lily scowled. \"Damn. I lost track of time trying to pin that fucker down. Remember when he tossed me around so easily in the Dreamscape? He's just as nasty outside of it, a real piece of work. He eventually lured me into a trap and sent me to Hell. I can always teleport straight to my master, which is why I'm here.\" She coughed, and a fair amount of ash came out of her lungs.\n\n\"You were in Hell?\"\n\n\"Only for a few minutes. The trip is always disorienting and the demons running the place don't exactly provide a warm welcome.\" She crossed her arms. \"So anyway, let's talk about this shadow of yours. He seems to be linked to your mind, but I couldn't figure out why, and I remember you first ran into him in that tower on the other side of the wardrobe.\"\n\n\"Yes, that's right.\" The shadow had found him when he was trapped in another world, trying to find his way home.\n\n\"He can jump from the tower to you, which didn't make a lot of sense. While I was tracking him, I discovered that he hangs out somewhere else as well.\"\n\n\"And where would that be?\"\n\nShe lowered her head. \"We demons call it purgatory, which isn't actually a place at all. It's the in-between of practically everywhere, kind of like a crossroads.\"\n\n\"You mean like between here and the Underworld?\" He sat up, his voice rising in excitement.\n\n\"Oh, I see where you're going with this. Yes, technically that's true, but let's ignore your obsession with the screamer for now. Purgatory, or limbo, whatever you want to call it, is primarily accessed by dying and refusing to move on. In this place, spirits have physical form, and your shadow buddy is very powerful there. He passes through it on his way from the tower to your mind.\"\n\n\"He lives in the tower?\"\n\n\"Almost there, Romeo. You see, limbo is a lot like the living world, and you can find places in limbo that existed here. He lives in the purgatory version of that tower, which is far larger and much more impressive.\" She shook her head. \"The tower used to be part of a giant castle, which meant I ran across some stray spirits there that died in some giant war I've never heard of. I was able to talk to a few of them, and once he found out I was digging up intel, that's when he caught me in a devil's trap and sent me to Hell.\"\n\n\"And what did you learn?\"\n\nLily's eyes narrowed, glowing blood red. \"I've often wondered where your friend came from and how he found you. Especially when it came to the Dreamscape. You told me he was able to find you during one of your house visions, right? Well, it turns out there's actually a simple answer that complicates everything and you aren't going to like it.\"\n\nHe frowned. \"I have a feeling anything I learn about this guy is bad news.\"\n\n\"Well buckle up, because I'm about to break it to you. The shadow is a former Caretaker. He's trapped on the other side of the veil, feeding off the energy of all those souls.\"\n\n\"I don't understand, that's imposs\u2014\" he started, but the more he thought about it, the quicker it sank in. There had been hints of other places like his home, and it made sense that other humans must have been involved like he was. But to what purpose?\n\nThe succubus smirked. \"I can actually watch the news sinking in to that broken head of yours. They call him a bunch of different names over there, the dead are so hard to talk to. But the gist of it was that he was in charge of that castle and it was full of magic and strange beings, and he used to be in charge of taking care of the place. There was some kind of battle, and the dead don't really know that they lost, so imagine talking to a bunch of disoriented spirits. Lot of conflicting information, but the final result of this battle was that the shadow somehow avoided moving on to the other side when he died.\"\n\n\"And you can't just have dead Caretakers wandering around,\" he muttered. It explained so much about why it was important to have a banshee to escort the dead, and why the shadow was so eager for a part of Mike's soul. \"Damn, that's scary stuff.\"\n\n\"Oh, you don't know the half of it. None of the souls in his little kingdom can move on. They live in a state of fear, constantly reliving this battle they had, and I was busy trying to fight them off before he caught me in a trap and tossed me into the fires below.\" She shook her head, causing more soot to drift onto the ground. \"It seems like you've been roped into something bigger than you expected.\"\n\nMike laughed. \"Oh man, I've stumbled into a bad situation that's bigger than I understand? Must be a Wednesday, this kind of thing never happens on a Thursday.\"\n\nThe succubus smiled, and stood. \"Well, that's the news I have. I'm going back to the house to wash up. Hell soot doesn't just come off, and I need a good scrubbing, so...\" She blew him a kiss. \"See you in your dreams.\"\n\nHe smiled and watched her go. When she stepped through the door flap, there was a brief cry of alarm when she startled someone, but words were exchanged and he heard nothing more from outside.\n\nEventually Zel came in, checked his wound one last time, and told him to go home and leave it alone. He thanked her for her help and gave her a big hug before departing. She muttered something to him about paying attention from now on, and he begged her for forgiveness, which caused a small smile to break across her face.\n\nOnce outside the yurt, he was a little disappointed to see that Lily hadn't waited for him, but he had plenty of company as the centaurs escorted him home.\n\nOver dinner, he was informed that Tink was still working on restoring power to the house. Apparently the electrical surge had damaged the panel in such a way that she wasn't able to get power to the whole house at once, and she had to wait for some additional materials to arrive before she could rewire some of the rooms that had damaged outlets. The rats were helping her with the work, but it was taking them quite a long time.\n\nBeth said very little to him over dinner, and he couldn't help but notice that Kisa kept watching her with a grin on her face. The cat girl sat at the opposite side of the table and vanished once her food was done. He briefly wondered if he should track her down and see how she was adapting, but figured it might be better to wait until she was ready.\n\nDinner came to an abrupt end when Quetzalli, who had eaten enough food that her belly bulged out, inspected her knife for several moments and stood from her chair. Before anyone could react, she abruptly knelt down and shoved the utensil into the nearest outlet using her considerable strength.\n\nSparks blew across the floor, and Quetzalli's eyes flickered with amusement just before the room was plunged into darkness. Tink shrieked in anger and left to check the panel. Beth quickly escorted the dragon from the room while discussing electrical safety.\n\nWhen he went into the kitchen to drop off his dishes, Mike looked out the window to see Naia, Dana, and Lily at the fountain. Dana sat along the edge in a pair of shorts, her feet in the water and a drone resting next to her. Naia was summoning bubbles up around the succubus, who popped them with her tail while scrubbing herself off. Steam rose from the fountain, and he wondered if Naia had turned it into a giant hot tub.\n\n\"Hmph.\" A disapproving voice came from behind him, and he turned to see Sofia illuminated in the fading light of day. She watched the trio at the fountain before turning toward the kitchen. \"Looks like I'm going to have to wash everything by hand tonight,\" she announced, then turned on the sink. \"Must be nice to just lie around.\"\n\nThere was just enough light to see by, so Mike picked up a nearby towel and started drying the dishes as she washed them.\n\n\"Dinner was good, thank you,\" he told her, almost afraid to break the silence.\n\nShe grunted, then scrubbed at a large pan.\n\n\"Actually, thank you for all the meals you cook. I think I'm starting to put on a little weight, which is saying something. I was always skinny growing up, but now I'm putting on some muscle.\" He patted his belly. \"Maybe someday I'll get to see my six pack.\"\n\n\"Please. We both know that it's the magic.\" She handed him the pan a bit forcefully, which pushed him off balance.\n\n\"I guess. But you keep everybody fed, and I appreciate it.\" He dried the pan before putting it away. \"Hey, I was wondering if you could help me with something tomorrow. I need to look into how to get into the Underworld.\"\n\nThe cyclops groaned and threw her hands in the air. \"Of course you do. Can I expect everyone to drop by the Library after breakfast, then? Guess I should make breakfast easy to clean up after.\"\n\n\"What? No, it's just gonna be me.\" He tossed the towel on the counter. \"I'm grateful that everyone wants to help, but I think I need to do this on my own for now.\"\n\n\"So...it's just going to be you tomorrow?\"\n\n\"Unless Death follows me in, yeah.\"\n\n\"Hmm.\" She turned off the sink and dried her hands. \"I expect you'll be there all day?\"\n\n\"No, just until noon. There's still some repairs to be made, and I need to coordinate with the centaurs. I also need to check in with Quetzalli. I think Beth's had enough of her for a bit. Might do a walk through of the house with Reggie, depending on how the afternoon goes.\"\n\n\"You really are slowing things down, aren't you?\" The light was dim enough that he could just make out her face. \"Not just diving right in?\"\n\n\"No. Things with the queen got out of hand. If I'm going to see her again, I need to be ready for anything, and that means being thorough. That is, if you have time for me.\"\n\nThe lights flickered and came back on, and he saw the small grin on Sofia's face before it vanished.\n\n\"I suppose,\" she told him with a groan. \"I'll see what I can find tonight and get you a headstart tomorrow.\"\n\n\"Thanks,\" he told her, then watched her go.\n\nWhat had that been about?\n\nThe power flickered off and on for the remainder of the night. On his way up to his room, he saw that Dana had positioned herself in front of the locked door at the end of the hallway. The squad of rats was watching her in interest, and were splitting a plate of cheese and fruit between them.\n\nWhen he went to see what Dana was doing, he walked past Yuki's open bedroom door and happened to glance inside. The kitsune was standing in front of a blank canvas. Her tails hung limp behind her, so he knocked.\n\n\"Hey,\" he said when she didn't turn around. \"Can I come in?\"\n\nYuki shrugged and let out a sigh. \"Yeah, sure.\"",
        "\"Something wrong?\" He walked into her room and looked around. He could tell where the room had been repainted, and noticed that a stack of broken canvasses sat in the corner.\n\nShe let out a grunt. \"Yes. No. I don't know. I'm feeling restless is all.\" When she turned around, he saw that she wore a smock covered in different colors of paint. \"Struggling to get some of these done.\"\n\n\"How so?\" He pulled the door shut behind him. \"I noticed you weren't at dinner.\"\n\n\"Not hungry.\" She sighed and sat down on her bed. \"I'm struggling with some things right now.\"\n\n\"Like?\"\n\n\"To start with, your dumb ass nearly getting killed.\" She said this with a slight growl that revealed her teeth. \"And now that you're back, I just know that you're going to get into trouble again.\"\n\n\"Yeah.\" He sat next to her on the bed. \"I'm really sorry I left you behind.\"\n\nHer ears drooped. \"Well, that's just it. Even if I had been with you, could I have made any difference? I honestly don't know. It's hard to put it into words.\"\n\n\"Try.\"\n\n\"For so many years, my only direction was to come home. I was a creature of rage. You know this.\"\n\nHe nodded. Yuki had almost killed him within seconds of their first meeting.\n\n\"Well,\" she continued, \"after coming home, my only thought was to protect this place, and then to protect you. But right now? There's nothing for me to do except prepare. These paintings are a manifestation of my magic and my soul, but now my soul is restless. I've spent so many years fighting that I've forgotten how to hold still, to just live and relax. So while I was angry that you got hurt, now I'm angry that I have nothing to fight.\"\n\n\"I see.\" He threw his arm around her and squeezed. She rested her head against his shoulder, and he lifted his hand to stroke her hair. \"When I was younger, my mom suffered a psychotic break. Growing up, she turned into this hateful, spiteful being that saw fit to torment me whenever she got the chance.\"\n\nThe kitsune nodded. \"I've heard about it.\"\n\n\"Well, after she died, I went through a period of elation. My abuser was dead and I was free. No longer would I get cornered, yelled at, or even smacked around. There wasn't even any guilt on my part, I was finally free of the bitch.\n\n\"After a week or so, something changed. You see, I started hearing her in my head. She was so deeply ingrained into my life that she had left scars, not on my body, but my mind. What should have been a period of happiness and healing only served to throw me further down a hole. People told me I should be happy she was gone and to just move on, but it isn't so simple. I had spent so long living my life in a state of terror that it was easier to be stuck there than it was to climb out.\"\n\n\"So what did you do?\" Yuki asked. She slid her head along his chest so that she was now in his lap, looking up at him. He moved his hand to the spot between her ears and stroked the soft fur there.\n\n\"Probably the hardest thing a person can do. I went to a therapist. Several, in fact. It certainly took me a while to find a good one. It's a hard thing to describe, but just because my problem was gone didn't mean that the past had faded away. I needed someone to guide me through the process of confronting my past and learning to heal from it.\"\n\n\"Did it work?\"\n\nHe shrugged. \"With varying levels of success. Naia did more for me than any therapist could. When she used her magic, I gained a certain degree of confidence I was sorely lacking. All of those little voices in my head that told me I wasn't good enough were drowned out by the part of her she left in me, and I'll always be grateful for it.\"\n\n\"I see.\" She shifted in his lap so that she faced away from him. \"Sometimes, when I'm falling asleep, I see Emily again.\"\n\nMike rubbed Yuki's ears, but said nothing. Yuki and Emily had been romantically involved when his great aunt had succumbed to the shadow, and the kitsune's heart had been broken. It was a betrayal he was personally unfamiliar with, but he could almost feel the heartbreak in her voice.\n\n\"She's her old self,\" Yuki continued. \"From before. And she'll talk to me, but I can never hear what she's saying. I try so hard to listen, to hear what she has to say. Every time I feel like I can hear her words, she changes. It's like someone throwing a sheet over a lamp, and the whole room dims. And now that I can hear her, all I hear is hate in her voice. And then I wake up, and I'm crying, and I hate myself, because I can summon spears of ice, or command Death himself, but I've let this mortal cut me deeper than any blade, and I feel weak.\"\n\n\"Love and compassion are never a sign of weakness,\" Mike said. \"It takes a brave heart to believe in either of these things.\"\n\nShe trembled beneath him, but remained silent. He stroked her hair for a little while longer and continued doing so even when he could tell she had dozed off. Once he was convinced that she was out, he slowly shifted her onto her bed and carefully covered her with a blanket before leaving.\n\nOnce in the hall, he looked over at Dana, who now sat on the floor near the rats with her computer and a notebook.\n\n\"Trying to crack the code?\" he asked.\n\n\"Got nothing better to do,\" she replied.\n\n\"Just make sure you keep it down,\" Mike told her, keeping his voice low. \"Yuki really needs her sleep.\"\n\nDana threw him a thumbs up and he left her behind, her unblinking eyes staring intently at her screen. Several minutes later, he was in his own bed, his eyes on the wall. How many years had he suffered as Yuki did, teetering on the edge of exhaustion only to be startled back to alertness each time his mother yelled at him across time and space? Thinking of his mother, he could hear her calling for him, her voice dripping with venom.\n\n\"Love and compassion,\" he muttered, treating the words as a talisman to guide him safely to the shores of his mind.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nWhen Mike walked into the office the next morning, he saw that Death was busy with the stereoscopes. While the grim reaper muttered something about consent, Mike let himself into the Library.\n\n\"Sofia?\" he called when he noticed she wasn't waiting for him. She hadn't been at breakfast either, the only trace of her presence being the continental style breakfast she had clearly set up for everyone.\n\nCurious, he crossed over to the floating globe that sat in the Library's lobby and waited for a few minutes.\n\nIt wasn't long before the movement of a floating carpet caught his attention and the cyclops descended from above. She wore a long cloak and carried a magic staff that glowed with a pulsating green light.\n\n\"There you are.\" He smiled at her and stepped onto the carpet once it landed. \"Thanks for breakfast, it was good.\"\n\n\"Of course it was.\" She tapped the staff on the carpet and it rose into the air. Invisible hands pressed against him, holding him in place. \"Sorry I wasn't there to greet you. I got up early to try and find the area of the Library that we needed. This place has seen a surge of activity recently, which means books aren't always where I think they are.\"\n\n\"Really? Like what?\" He looked over the edge of the carpet. Down below, he saw no movement.\n\n\"The Library is constantly reorganizing itself.\" Sofia turned her head and the carpet slowed. \"If you could see this place from high enough up above, it would make you think of thousands of giant gears that turn constantly, albeit slowly.\"\n\n\"But why?\"\n\n\"Expansion. Books made in your world all end up here, and at a frightening rate. The Library was built to accommodate this, and the pillars rotate in groups so that works that fit in multiple genres at least face one another. New pillars will often form near primary pillars, and everything has to shuffle about to accommodate it.\"\n\n\"Primary pillars?\" It was just now occurring to him that despite spending plenty of time here, he had no idea how the place worked.\n\n\"Yes. Think of them like the purest form of any particular genre. As the pillar expands, it may blossom outward, like a fractal. The new pillars will break free as a genre is redefined, or even as a sub-genre is formed.\"\n\n\"That's...really cool. How come I've never seen it move?\"\n\nShe tilted her head at him and scowled. \"Your trips here tend to be very goal oriented.\"\n\n\"Can I see one of the pillars that's expanding?\"\n\nSomething like a smile crossed her lips. \"I suppose, if we have time.\"\n\n\"I think I should see it. The Library is just as much a part of the house as anything else.\"\n\n\"Except it isn't part of the house. It's a separate place, remember?\"\n\nHe shook his head. \"I don't see it that way. You're a part of the house, and this place is a part of you. I want to know more.\"\n\nShe looked away from him, her long braid bobbing in the breeze as the carpet accelerated. They were moving fast, and the pillars were moving past him so quickly that he could barely make out the shelves.\n\nThe pillars condensed momentarily, and the carpet swayed between them until they entered a large open area. At its center was a gigantic column that stretched upward into a portion of the roof that had been raised, and all he could see in it was darkness punctuated by the occasional appearance of a book. The column was easily the size of a small skyscraper, but instead of being a perfect circle, it looked more like a weathered gear with smoothed out teeth all along its perimeter.\n\nIt rotated at a slow pace, and the carpet moved alongside it for a better look. In certain places, the bookshelves looked like they were melting out of the walls and forming into organized rows along the surface of the gigantic column, and books fluttered about like tiny birds as they fell from above and drifted to their resting place.\n\n\"Wow,\" he whispered. Up above, he could hear the rustling of pages and slamming of shelves as these objects shifted onto the new pillars. \"What genre is this?\"\n\n\"This pillar is romance.\" She pointed her staff toward one of the landing zones. \"These off-shoots will eventually have some category of their own, and then break away from here to become their own columns, or maybe merge with another category into a bigger column. You don't often see this at the entrance, because those books are the more popular ones that used to get borrowed all the time.\" She appraised the enormous column. \"I'm rather impressed at how many books seem to be written in this category, but there seems to be a quality issue.\"\n\n\"Quality? Like, the stories suck?\"\n\n\"Oh, I have no idea. It would be nice to sit around all day and read them. I'll show you what I mean.\" They had landed, and she led the way to the nearest bookshelf. Several of the books on it looked normal, but she eventually picked one up that was blank except for a title and an author. \"I've seen a bunch like these over the last few years, but have no idea why. No cover art, no synopsis on the back. I've looked inside some of them and they might not even be formatted correctly.\"\n\n\"Let me see.\" He took the book from her and read the title. \"Um...this one is called My Sister the Cuck Queen part seven by...\" He laughed when he saw the author's name. \"Okay, I think I know what's going on.\"\n\n\"Well?\"\n\nHe held the book up for her. \"We can verify when we get home, but I sincerely doubt that somebody actually named their child QueefEater42. This is just some random person's story, probably on the internet somewhere.\"\n\n\"I don't understand.\" She looked up at the row of books above her. \"The Library is only supposed to get in copies of books that exist, not internet dribble.\"\n\n\"I wouldn't automatically assign anything you find on the internet as dribble.\" He set the book down and looked through the shelves and found another one. This one had a picture of a pair of abnormally big breasted women hugging each other, but the picture and title were stretched dramatically across the cover. \"Interesting. This one looks like they didn't load the correct image size.\"\n\n\"You still haven't explained why I am seeing these.\"\n\n\"Well...\" He turned the book over. There was no explanation on the back, but when he opened the first page, he saw that the information page just had a web address. \"How does the Library categorize what's an actual book?\"\n\nShe crossed her arms. \"Anything that gets bound professionally?\"\n\n\"Yeah, well, that's not how things work in the real world anymore.\" He put the book back and looked some more. After digging through a couple and opening several to look inside, he chuckled. \"You see, there's been a huge digital revolution recently. People started selling books that you could read on their devices, and I can tell you for a fact that there are a ton of authors who don't even bother publishing their stories on paper.\"\n\n\"Preposterous. Those wouldn't count as books, then.\"\n\n\"Why not?\" He held up a book with a pair of anthropomorphic animals on the front. \"How does the Library differentiate between what constitutes a book-worthy story? I can guarantee you have published books here that almost nobody has read, but some of these digital ones? Tons of people enjoy them.\"\n\nShe took the book from him and flipped through its pages. \"So you're saying this book might not exist in your world?\"\n\n\"Not on paper. Did you know that people can just pay to have a book published for them? You could write a book of poems and have it printed and mailed to your doorstep in days. Does the Library know that you will only make one copy? Does that book count, or is there some other guideline? Does it have to sell first, or maybe a certain number of people need to read it?\"\n\nSofia pulled a couple more books off the shelf and flipped through them. \"I suppose I don't really know. This place was built a long time ago, and the builders would not have foreseen such a thing. I must admit that my role here is largely ceremonial, other than chasing down potential intruders. Metaphorically, the place has a mind of its own.\"\n\n\"You told me once that the Library brings you copies of books once they are finished. Maybe it can no longer tell the difference, and is bringing these here.\" He took a step back and looked along the shelves. Where he stood, he could see dozens of shelves, and each one was nearly ten feet high. They were all packed full with books of varying quality. \"By the way, we seem to be in a very weird crossover of genres here.\"\n\n\"Mmmhmm.\" Sofia put her book back on the shelf and scowled. \"Do many people write these books? The digital ones?\"\n\n\"Thousands. Millions. I don't know for sure, but it's a lot.\" He walked back toward the carpet. \"Now I kind of wonder what the cutoff is. I imagine that the story has to be complete, right? So you wouldn't have a column of half finished books or something.\"\n\n\"No, unless someone published it. I've seen posthumous works like that.\" She stepped onto the carpet next to him. \"This explains the exponential growth in some of these areas though. Obviously I don't have time to oversee all of the Library's new entries, but this explains several things I have noticed of late.\"\n\n\"Hey, cool. A mystery that was solvable in under ten minutes. And!\" He pointed a finger at himself. \"I didn't have to fuck my way out of it.\"\n\nSofia's cheeks turned bright red and she broke, letting out a laugh. \"I mean, we're still in the romance section. I'm sure you could find something to get you off.\"\n\nIt was his turn to laugh. \"It would have to be a softcover. The edges on the hard ones are far too dangerous. Hey, I just remembered something. Isn't it your job to read everything and catalogue it properly? That's what you told me when we first met.\"\n\nShe looked away from him and sighed. \"It's supposed to be, but the job isn't meant for one person alone. And since I'm the only one here, I figure nobody is going to check up on me.\" The carpet took them away from the romance pillar and moved amongst the other pillars, occasionally swaying to avoid floating racks of books that moved around them.\n\n\"So I'm curious,\" Mike said. \"Why are you the only one here, then?\"\n\nThe cyclops turned to look at him with a frown, then looked away. \"There were more of us, once upon a time.\"\n\n\"What happened?\"\n\n\"It was a long time ago.\" She reached into her robes and pulled out her knife. The blade was only four inches long, but when she gave it a flick, it unfolded into a full length blade. \"I don't know that there's time for the full tale, but I guess I can give you the highlights. You see, this place used to be accessible to many magical beings and civilizations. There was a screening process, of course. This place was the first of its kind, created long before humans came along. Your modern libraries are modeled after it. In fact, the Library of Alexandria was a knock-off of this place, the idea being a place where anybody could travel and find knowledge.\"\n\n\"Didn't that place burn down or something?\" he asked.\n\n\"And that's why there was a screening process. As your kind generated texts, the last thing we wanted was for someone to get in and destroy them. Which, as you know, happens constantly.\" Sofia held up the blade so that he could see her reflection in it. \"When I was young and lived with my clan, my uncle had access to the Library. I came from a family of builders who were isolated on an island, so this was the place to come to see advancements in building. It wasn't just buildings or weapons, my tribe could build almost anything. Their skill was superseded only by the gods in this matter.\"\n\n\"I get the feeling that somebody didn't care for this.\"\n\nShe nodded. \"A group of men came to our island and asked our people to stop. We had largely pulled away from the rest of the world, but some of us were manufacturing weapons that were being used in terrible wars. The gods had long ago moved on, and our knowledge was considered forbidden.\"\n\n\"I'm guessing that your people turned them down?\"\n\n\"Sort of. You see, even we didn't know who was doing this. As a tribe, we agreed that the world of Man was no longer a place for us. But secretly? Weapons were still being built, and we had no idea who the perpetrator was. It wasn't long before the men came back and warned us one final time that they would wipe out the island if it didn't stop. Well, remember what I told you about my people being able to see our own deaths? It was at the hand of men like these, so they were promptly killed for threatening the tribe. Despite their deaths, the visions continued, so we prepared for what we thought would be a bloody war.\"\n\nMike shivered. \"What happened?\"\n\n\"A slaughter.\" She folded the sword back up. \"I was still very young, but easily the size of a full grown man. My unique ability saved me from immediate death, and my uncle took me to his Library portal. We were attacked by the man who carried this blade, and I managed to kill him shortly after he killed my uncle. With the portal open, I fled inside and closed it, never to open it again.\"\n\n\"That's terrible. Does that mean you're the last cyclops?\"\n\nShe shrugged. \"Probably not. There were others. I imagine they may be in a place like Zel's people were, a location separate from your world, or maybe hiding in plain sight. Anyway, the others who lived here. You see, as the world changed, so did this place. The Library took me in as a refugee and allowed me to stay and learn at their feet. However, I was one of the last new librarians. Once Atlantis fell, the Library was only connected to a few places, and nobody ever came to join our ranks again.\"\n\n\"So what happened to the others who were here? Old age, or...?\"\n\n\"You don't age in the Library. I actually had to go on several pilgrimages to reach my current age. A cyclops is essentially immortal, but we do start as children. Over time, accidents occurred, or librarians left. Eternity is a long time to live in one place. Occasionally there would be a violent incursion, but my ability with a blade kept me alive through the worst of them. Others weren't so lucky.\" She tucked the blade back in her belt. \"The good news is that pretty much nobody comes here anymore. However, the bad news is that pretty much nobody comes here anymore. If I were to die, the Library would continue to expand without interference until somebody found it. What happened next would largely be up to them, if they didn't get lost and starve to death first.\"",
        "\"I assume you control the Library with your staff?\"\n\n\"Yes. The staff of the Head Librarian. It allows me to tap into the Library's magic, which is how I am able to find anything in this place.\" The carpet was descending now, and they were landing on a platform near the top of a pillar. \"So this is one of the restricted sections, so I need you to watch your step.\"\n\n\"Why, is it booby-trapped?\"\n\n\"No. There just aren't any safety protocols.\" When they landed, she pointed along the outer edge of the column. \"See how there are no guardrails? Since nobody is supposed to be here, there are no safety protocols. Try not to fall, or I'll be scraping you off the floor for days. Don't ask me how I know.\"\n\n\"Oh.\" He stepped off the carpet and onto the platform. He walked to the edge and looked down.\n\n\"Mike, stop!\" Sofia grabbed his shoulder and pulled him away. \"There's a reason people say never look down! You could trigger vertigo or something.\"\n\n\"Heights don't bother me,\" he said. At least they don't anymore. \"Let's get moving, shall we?\"\n\nShe rolled her eye at him and led him along the narrow walkway, careful to keep one hand on the shelves at all times. Eventually they found an opening to slip through and found themselves moving down a narrow corridor while surrounded by books.\n\n\"Not exactly comfortable, is it?\" Mike noted.\n\n\"Nobody is meant to linger here. Librarians can grab the books they need and just go. However, there are some perks to being the Head Librarian.\" They were at a small break between shelves and she tapped the wood with the head of her staff. A panel slid sideways to reveal a small, circular sitting room with a skylight twenty feet above them.\n\n\"Where does that go?\" Mike asked, pointing up.\n\n\"Nobody knows. Or if they did, they never told me. It's always daytime through those skylights, it provides the best light for reading. Of course, there's a spell to keep the books from fading from exposure, but that's a given.\" She walked to the middle of the room where a circular table waited. A couple of chairs were waiting for them as well as a platter of snacks and a pair of silver goblets.\n\n\"Did you put these here?\" Mike asked as he sat down in one of the chairs. There was a variety of meats and cheeses on the tray, and he licked his lips in anticipation.\n\n\"I did.\" She sat down across from him. \"Consider it a peace offering.\"\n\n\"Frr whff?\" He had already stuffed a giant slice of salami and some cheese into his mouth.\n\nSofia frowned at the table. \"For me. My motives haven't exactly been pure of late, and I'm afraid I have been quite angry with you.\"\n\nHe swallowed his food and shook his head. \"No, you don't need to be sorry. I've been selfish lately, and haven't really been thinking about the others. My heart was in the right place, but that's no excuse. You don't need to be sorry.\"\n\nThe cyclops smirked. \"Are you even sure that's what I'm referring to?\"\n\nHe froze in place, a piece of cheese already on its way to his mouth. \"Isn't it? I figured you were mad because I've been focused on rescuing Cecilia and being reckless. You know, getting lucky at the last second?\"\n\n\"Hmm.\" She tossed a piece of smoked turkey into her mouth and chewed for a bit, then swallowed. \"That's...not quite the truth.\"\n\n\"Enlighten me.\" He set the cheese down.\n\n\"When you first came here, I wasn't necessarily kind to you. You were able to see past my attitude, and we...found a way to get along.\" Her cheeks turned bright red. \"After the incident with the Labyrinth and the Society, I started neglecting my duties in the Library and spending more time in the house.\"\n\nHe nodded. She had become the de facto chef of the house almost right away.\n\n\"Part of that was selfish on my part,\" she said, stacking a few pieces of cheese together and then knocking them down. \"It was nice to be around other people for a change.\"\n\n\"It's kind of a constant state of affairs, these days,\" he agreed. It was hard to find a quiet place in the house without someone watching.\n\n\"Yeah, well...when I saw how worried you were about Cecilia, it triggered something in me that I didn't like.\"\n\n\"Oh?\" This conversation wasn't going anywhere he had suspected.\n\nSofia took a deep breath and let out a sigh. \"I was jealous. Jealous of how much you cared for the banshee and, well, not me.\"\n\nHe tilted his head at her and did his best to examine her statement from every angle. No matter how he looked, it was beyond him why she would feel that way. \"I don't get it.\"\n\n\"Well, part of that is my fault,\" she said, then glared at him. \"The other part is definitely yours.\"\n\nHe fought the urge to be defensive and instead leaned toward. \"Go on.\"\n\n\"You've been ignoring me,\" she told him, her eye cast away from him and toward the floor. \"I cook and clean for everybody because I enjoy their company, don't get me wrong. But between my duties here and helping with the house, I realized you never seemed to care that I was there.\"\n\nShe was right. He had done his best to be polite and thank her for meals, but how long had it been since he had just sat down and spent some time with her? The cyclops had become an important part of the house, but she was still a person.\n\n\"It wasn't until you had a lead on Cecilia that you even came to me for help. I definitely don't feel very appreciated for it, and you completely ignored my advice. Again, I should have said something, but I allowed myself to stew over it. I got so excited last night when I found out that you were coming here by yourself that I realized that I couldn't keep being angry with you whenever we were together.\n\n\"I know that I shouldn't feel the way I do, but I can't help it. I like to think that I'm above petty emotions such as jealousy, but there it is. Not only am I jealous of the others for having your attention, but I'm certainly not very proud of how I feel. By nature, my kind are very proud, so...\"\n\n\"I'm really sorry, Sofia.\" He leaned across the table and took her hand in his own. \"I know now that I've been so caught up in trying to get Cecilia back that I forget I live in a house full of people who deserve to feel important, because they are. I don't have this problem with the others, because, frankly, they are a bit more aggressive about getting what they want from me when they need it, and you should never be afraid to bring these feelings up. I'm just now discovering that some of the others are struggling with their own demons, and I need you to know that you can talk about anything with me, I promise.\"\n\nShe opened her mouth to say something, then closed it. Moments became minutes, and her stoic features became stained with crimson.\n\n\"Is there something else you want to tell me?\" he asked, breaking the silence.\n\n\"Um...\" She shifted in her chair. \"I didn't...so, you...I thought you were going to be mad, so I wasn't planning on saying the other part.\"\n\n\"Hey, go on. I'll listen without interrupting.\" To emphasize his point, he grabbed a few blocks of what looked to be muenster cheese and held them to his lips. \"See? Too busy chewing, just go for it.\" He popped the cheese in and chewed it carefully.\n\nSofia took a deep breath and then released it. \"I can't stop thinking about when you fucked me when I was all tied up, and it keeps messing with me because no matter how much I masturbate, I\u2014shit, are you okay?\"\n\nShe stood up and rushed to his side of the table to slap his back with an enormous palm as he struggled to cough up the cheese he had inhaled upon hearing her statement. He kept coughing once the cheese was out, his throat raw from choking on it.\n\n\"I'm...okay...\" He cleared his throat and grabbed one of the goblets and took a sip. It was a very rich merlot, but it helped almost right away. \"I'm very sorry, I didn't mean to interrupt.\"\n\n\"Well, you did.\" She crossed her arms and looked away from him.\n\n\"Um, yeah, so about what you were saying. Do you want to do it again? I mean, it might require some setup unless you want to use Ratu's shedding room again or something.\"\n\n\"Hmm?\" She looked over her shoulder at him. \"Did you just say that we could do...that?\"\n\n\"Yeah, I did.\" When Sofia had gotten caught in a vine trap, she had stalled for time, getting off on being tied up until he had fucked her while she was suspended from the ceiling. \"After our first time together, I kind of thought it was a one time thing, so never pursued it. But you have to understand that I'm more than happy to do things like that with you. Honestly, it was kind of fun.\"\n\n\"I see.\" She walked to the edge of the room and turned around. \"Are you sure? Like, if I had prepared in advance, we could do something like that...now, maybe?\"\n\n\"I'm happy to do it now, but am on a bit of a schedule. The last thing I want is to rush through it, some things take time.\"\n\n\"About that.\" She turned to one of the shelves nearby and patted on a stack of books. \"I already pulled everything I could find on underworld gateways, on the off chance you agreed. If nothing else, the cheese and wine might put you in the mood for a friendly chat, but this is the best possible outcome.\"\n\n\"You really put a lot of thought into this, didn't you?\" He smiled. It was a nice change seeing the softer side of the cyclops.\n\n\"You have no idea,\" she said, then tapped her staff on the ground. \"Lignum.\" \n\nThe chair shifted beneath him and wooden bands wrapped around his wrists and ankles, pinning him in place. Stunned, he tried to free himself and caused the chair to tip dangerously to one side.\n\n\"Sofia, what's going on?\" he cried as his chair tipped back into position.\n\nShe leaned the staff against the wall and walked toward him. One finger went under his chin and tilted his head up so that he was looking into her face. However, if he shifted his gaze down, he could see the thick valley of her breasts through a gap in her robe.\n\n\"You agreed to this, remember?\" Her voice was full of menace and she ran her finger up his chin and through his hair. \"But I suppose you thought that I would be the one who was restrained, didn't you?\"\n\n\"Um, yeah,\" he admitted. \"You caught me completely off guard, actually.\"\n\n\"Of course I did. It's because I have no intention of harming you.\" She stepped back and pulled off her robe. Beneath, she wore a light blue gown that was cinched in place at her waist, and she sat down on the table and crossed her long legs. \"But seriously, we should begin with some ground rules.\"\n\nHe laughed. It wasn't what he had had in mind, but now that he knew what she was up to, he was game. \"Okay, let's talk. What do you want?\"\n\n\"I'll be brief. I want you helpless, I want to talk shit to you and maybe humiliate you a bit, and just have my way with you.\"\n\n\"That's... fine, I guess, but what do you want from me specifically?\" He wiggled his hands to show that he was rooted in place. \"Oh, and the chair thing was a nice touch. Didn't know this was a thing.\"\n\n\"Yeah, the chair thing took me a bit to figure out. It's one of the defenses I can activate with the staff.\" She smirked. \"What I want from you is for you not to take anything I say personally, maybe grovel a bit. You see, I got off so hard on being helpless last time, and all I can think about is doing the same thing to you. I think part of that is the pride of the cyclops. You make me so wet, Caretaker, and I both love and hate you for it.\"\n\n\"Okay, well, if that's the case, then some limits. Don't bring up my mother, that's a given.\" He scrunched up his face, trying to remember what was said during their last encounter. \"And don't bring up Cecilia. I don't mind you crossing a few lines, but those are sensitive subjects.\"\n\nShe nodded. \"Sounds good. Do you want a safe word?\"\n\nA thrill shot through him. Already, seeing Sofia standing over him was making his senses sharper, and his magic was hungry to take him over. It would be easy to get carried away, but that safety net still needed to be established.\n\nThat's right, lover, Naia said inside his head. The first step requires trust.\n\n\"I'll shout something about overdue books if you've gone too far.\"\n\n\"Hmmph.\" She crossed her legs, giving him a glimpse of her bare thighs as the gown parted. \"Then shall we get started?\"\n\n\"Sip of wine first?\" he asked. She obliged by holding the goblet to his lips and tipping it up. He sucked down as much as he could, relishing the bold flavor of the merlot. \"Yeah, I'm good now.\"\n\nSofia circled the chair, her fingers trailing along his shoulders. \"Look at you, in trouble again. I can't tell if you're incompetent, or just plain stupid.\"\n\n\"I like to think\u2014\" He gasped when she yanked his chair back. He was looking up at her now, her face twisted into an angry mask.\n\n\"Shut the fuck up, filthy fucking human.\" She pushed the chair forward and spun it around to face her. \"Gods, I can't believe I have to keep looking at you. All you do is sit there and whine.\" She was in front of him again, and she straddled his legs, her thick thighs opening her gown to reveal that she wasn't wearing any underwear.\n\nDespite recently drinking wine, Mike was suddenly thirsty again.\n\n\"You really are just a piece of shit,\" Sofia told him, then grabbed the back of his head.\n\n\"No joke, be careful back there,\" he warned her.\n\n\"Shut up!\" She adjusted her grip to avoid his freshly healed injury, then yanked his head back, baring his throat to her. \"Pervy little human, I see the way you look at me. You took advantage of me once, but it's my turn now.\"\n\nUnsure of how to respond, he just grunted.\n\n\"You let any little thing turn you on, don't you.\" She let go of his hair and stepped back. \"Nasty little mortal.\"\n\n\"That's me.\"\n\nShe slapped him across the face, and the sting was shortly replaced with a hot glow. Seeing her standing over him like this had him so hard right now, he was struggling to think.\n\nWhen she unzipped his pants and pulled his cock out, it was already drooling precum all over. She swirled it around on the tips of her fingers and then splayed them apart, creating a web of spooge in her hands.\n\n\"Disgusting,\" she said, then wiped it in his hair. With his cock standing at attention, she lifted up one of her legs and planted her foot on his chest. She was wearing a pair of sandals with silk bands that matched her robes.\n\n\"Take it off,\" she commanded. He did his best to pull the silk into his mouth with his tongue, then bit down and pulled, revealing her bare foot. Her feet were large, easily a size fifteen, but still feminine with arching lines and gold paint on the nails.\n\nWith her foot now resting on his chest, his eyes slid along her magnificently thick thighs to the dark folds of her gown. He could just make out her trimmed pubic hair, and one of her labia drooped lower than the other, curling up at the tip. There was just enough light to see a tiny bead of lubrication dangling from the end of it.\n\nShe pushed against his chest with her foot, causing the chair to slide against the wall until it rested against the nearby shelves. Pausing to scoot the staff farther away from them, she adjusted her gown, pulling it further up.\n\n\"You like this, don't you?\" she asked, then moved her foot down near his cock. \"Being helpless and weak.\"\n\nHe couldn't take his eyes off of her golden toes. She was pressing up against his balls just hard enough that he was a little uncomfortable. However, she spread her toes apart and caught the base of his shaft between her big toe and the next one over. More than capable of encircling his shaft with her massive feet, she squeezed and stroked him.\n\n\"Maybe a little,\" he admitted, letting out a sigh. Sofia was busy staring at his cock, and acted like she hadn't heard him. While pinned in place, it was almost like he had permission to let the world pass him by, if only for a few minutes. Being able to step away from all his cares gave him freedom, and right now, all he could think about was how good her foot felt as she massaged the base of his shaft.\n\n\"Ugh, disgusting.\" She removed her foot and placed it higher, her heel now in his collarbone and her toes pressing against his face. \"Lick them clean.\"\n\nHe hesitated, but only for a moment, then licked the side of her foot. She smirked at him while he tried to move his tongue along her toes, then helped him out by curling her digits down, allowing him to suck her big toe into his mouth.\n\nHer lips parted as she watched him, her cheeks now flushed. He sucked and nibbled on her toes for several minutes before she set her foot back in his lap and pushed it against his cock.\n\n\"Can't even do that right, nasty little man,\" she said, then straddled the chair. She lifted her skirt to reveal her glistening pussy, then took a step forward. She was tall enough to accomplish this feat by standing bow-legged, and she grabbed him by the back of the head and tilted his face toward her. \"Let's have you lick something easier, shall we?\"\n\nShe shoved her muff into his face, and he was grateful for the quick breath of air he took in as she pressed against him. When he opened his mouth and inhaled her musky scent, his tongue darted out to lick her clit. His magic leapt from his tongue to her labia, and she moaned when it zapped her.\n\n\"Ow, you little fucker,\" she grunted, then grabbed his head and pulled him in. He sucked and licked frantically at her as his oxygen depleted, and the cyclops ground her hips against his face, letting out shrill little cries.\n\nMike strained at his bonds, wishing he could grab two handfuls of Sofia's ass, and maybe even allow himself up for air. Spots were appearing in his vision before she yanked him out, his head tilted up at her.\n\n\"Look at you, you're a fucking mess.\" She told him, then shoved his face back in. The room swirled around him as his consciousness fluttered, and then he was back once more, gasping for air.\n\n\"If you do a good job, maybe I'll let you fuck me,\" she said, then pulled him back in again. She kept pulling him up for air, and Mike would groan into her soaking wet pussy when she shoved him back, his cock now leaking copious amounts of precum.\n\nShe yanked his head back again and, while he was gasping for air, spit in his mouth.\n\n\"That's what I think of you, Caretaker,\" she told him as he choked on her saliva. \"Nothing more than a thing to be used.\"\n\nWhen she pulled him back in, he felt his magic twist inside him and then uncoil itself in his chest. As he buried his tongue in her rich, velvety folds, he felt the magic inside of him gather in the back of his throat. It took very little effort to release it, and a sensation similar to eating fizzy candy filled his mouth as the magic leapt up inside of Sofia.\n\nShe gasped and stumbled backward, her hands now running all along her body.\n\n\"What...what did you...\" was all she got out, and she started stroking her pussy with one hand while the other undid the lace at the top of her gown to pull out her bountiful breasts. He saw the magic sparkling around the edges of her eye, and she moaned as if in heat, both of her hands squeezing her large breasts and pinching her giant nipples.\n\nHer eye dilated and she growled at him.\n\nUh oh, he thought.\n\nShe straddled the chair and grabbed his cock, then sank down onto him. The chair groaned under their combined weight as she rode him with an intensity that was slightly terrifying. He buried his face in between her breasts to nibble and suck, grateful for the feeling of a warm, willing pussy around his dick.\n\n\"I fucking hate you, Caretaker,\" she snarled in his ear, then groaned as her orgasm approached.\n\nMike could feel his own magic inside her, bouncing around and wreaking havoc. He sucked on the closest nipple to him and willed the magic to return to his body.\n\nThere was a shift inside of him, and Sofia let out a brief cry, her eye glowing with her future sight. She grunted and looked down at him in disbelief.",
        "\"How did you change the future?\" she asked.\n\nHe mumbled something into her breast, then allowed the magic to flow back into her.\n\n\"Oh, fuck yes!\" she cried, and rode him hard enough that he feared for the chair's existence. Again, as her cries built up, he withdrew the magic and held onto it. It was no different than holding back an orgasm of his own, and he delighted in the pseudo-orgasm she experienced.\n\n\"Maybe you need a better angle?\" he suggested.\n\n\"Don't talk to me, peasant,\" she replied, and he held in a laugh. When she pulled herself off of him, she left behind a puddle of lubrication, the front of his pants now damp with both of their fluids.\n\nSofia pulled the chair away from the wall and spun it so that Mike now faced the shelves. She moved between him and the wall and sat on his lap.\n\n\"You've got a phenomenal ass,\" he told her and meant it. From where he sat, her plump rear filled his lap. Out of habit, he tried to run his hands along her curves, but was stymied by the fact that he was still bound to the chair. He watched in fascination as she held onto the shelves and slid her ass along his lap and trapped his cock between her buttcheeks.\n\n\"You're lucky you get to see it,\" she told him, then moved back and forth, rubbing her body along his dick.\n\n\"C'mon, just a little bit farther,\" he begged, but she was hellbound on fucking with him. It was like a lapdance, her ass pressing against him and then moving away, and she would occasionally lean back, putting all of her body weight onto his hips.\n\nShe finally leaned forward and grabbed his cock from between her legs, then maneuvered it so his glans pressed up against her vulva.\n\n\"Beg me for it,\" she told him.\n\n\"Please, Sofia. Please let me fuck you.\" His magic was boiling inside him, desperate to be released once more.\n\n\"You don't get to say my name,\" she told him. \"You will refer to me by my title as Head Librarian!\"\n\n\"Fuck me, Ms. uh, Head Librarian!\" He couldn't think straight, and she lifted herself up, disconnecting them. His arms and legs now pulsed with erotic energy, and he couldn't take his eyes off of those beautiful swollen labia that dripped just above the head of his cock.\n\n\"I said beg!\" she yelled, then tightened her grip on his shaft.\n\nThe magic gathered up in his cock and blasted out with a hiss and a pop, entering Sofia's body.\n\nHe heard her gasp, and then she forced herself down on him so hard that he heard the chair crack. Using the shelves for support, she rode him this way and growled, occasionally flailing about with her arms and legs. The chair rocked beneath them, and through the haze of heat and sex, he briefly worried that it might break.\n\nThe energy bounced around inside of her and he could see the sparks forming on her skin. \n\nSofia took a deep breath and let out a scream, her arms spreading out along the shelves and knocking books to the floor. As she flailed about, riding the crest of her orgasm, she shoved a stack of books to the side that caused a domino effect. Books toppled over until the last one, a particularly thick tome, tilted to the side and pushed against the librarian's staff.\n\nMike couldn't help but watch as the staff swung left and bounced against the wall of the shelves hard enough that it rolled back toward Sofia. However, it caught the edge of a book as it fell, which pushed it toward the two of them. The cyclops wasn't paying any attention, and when the staff bounced off of her hips, she froze in place.\n\nThe polished wooden shaft came to rest in Mike's outstretched hand. He had been trying to catch it before it hit the floor, just in case the gem up top was fragile, but a sudden rush of energy blew through him. For a moment, he felt his senses expand and fill the room, and he was able to sense each individual book around him. Whole categories of keywords spread out in his mind like magical spreadsheets, and the green gem pulsated with energy as it connected to him.\n\nTime snapped back to normal, and he clenched the staff tightly in his hand, careful not to drop it. He looked at Sofia's hands, clutching the hard, wooden shelves before her, and a wicked idea entered his mind.\n\n\"Ligma.\" After so much experience in the Dreamscape, he had no problems visualizing exactly what he wanted to happen. The staff's magic felt like warmth leaving his body, and as the wooden bands that trapped his wrists folded back into the chair, new ones emerged from the shelves and pinned Sofia's arms in place, forming thick shackles along her forearms..\n\n\"What...how...\" She looked over her shoulder at him, her eye wide in alarm. \"What's happening?\"\n\n\"Oh, I think you know.\" Using his hands, he scooted back from her and pulled his cock free. She was now crouched in front of him, her arms spread-eagle on the shelves. \"I'm just turning the tables on you.\"\n\n\"But I don't understand. The staff is keyed to the Head Librarian, nobody else can use it.\"\n\nOh. He looked at the staff, and then back at the wide ass of the beautiful woman in front of him. It probably had to do with his own magic, but right now, the blood in his body had been designated for something other than thinking.\n\n\"Guess there's a position above Head Librarian,\" he said, then smacked her ass with his free hand. She let out a shout and flinched, her knees buckling slightly. He gave her another slap and moved past her hips to appraise her. She was staring straight ahead, her eye unfocused and her mouth open wide.\n\nHe grabbed her hair and yanked on it, causing her head to tilt back, then leaned in close.\n\n\"Safe word?\" he whispered.\n\n\"O...overdue books,\" she whimpered.\n\nHe was about to move away when he realized he couldn't tell if she was using the safe word or designating it. \"So, wait, do you want to stop, or\u2014\"\n\n\"You're such a dumbass,\" she muttered. \"Can't even do this right, can you? Just give me back the\u2014ow!\" \n\nMike had slid his belt out of its loops and folded it in half before cracking her on the ass. A red line had formed, and he worried that he had taken it too far, but Sofia kept the safe word to herself. Satisfied that he was on the right track, he examined the butt of the staff while walking behind her.\n\n\"Pathetic,\" he told her as he gave her ass a few light slaps with the belt. \"Had me all trussed up like a Christmas ham and I still managed to escape. What was it you told me? Something about my luck and fucking away my problems?\"\n\n\"Fuck you, little ma\u2014ngh!\" The crack of his belt echoed across the room.\n\n\"After all the things you made me do, you think I'm going to let you off easy?\" He set the staff down on the table, then popped a piece of cheese in his mouth and sipped at his wine. \"It's too bad we're so far away from the others, I bet they would laugh at how you look right now.\"\n\nSofia groaned, and a large dribble of fluid splashed on the floor between her legs.\n\n\"I rather like this side of you,\" he told her, then swatted at her hips with the belt. She cried out, then moaned when he penetrated her with his free hand. \"There's a lot less of your mouth to deal with.\"\n\n\"Fuck you,\" she growled.\n\n\"No. Fuck you.\" He had already lined himself up and slid into her with no resistance. She moaned and her hips swiveled as she tried to back herself onto him.\n\nHe placed one hand on her hip for balance and leaned to the side to marvel at her pendulous breasts. Smiling in satisfaction, he reached forward and pinched her nipple. She shrieked, and he smacked her ass again with the belt.\n\n\"This really is the best side of you,\" he told her, then rubbed the welt that had formed. She let out a sigh and he gave her a few hard thrusts that pushed her face into the shelves. \"Well now, that simply won't do, you could hurt yourself.\"\n\nHe grabbed her by the ponytail and pulled her head back just long enough to slip the looped belt over her head and around her neck. He didn't pull hard, it was just enough to keep her head tilted, and the series of gasps and moans told him he was absolutely on the right track.\n\n\"Yeah, that's right, get fucked like the cum dumpster you are.\" He raised his hand and brought it down hard, but twisted away at the last second. Sofia moaned as her future sight gave her the experience of the slap but reality stole it away. He alternated tugging on the belt and slapping her ass, doing his best to change tactics at the last second.\n\nSofia gasped for air that filled her lungs, then shrieked from slaps that never connected. She had rapidly evolved into a panting mess, and he undid the belt and yanked back on her ponytail.\n\n\"The worst part is how much you want it, isn't it?\" he asked, making small pumps with his hips.\n\n\"You're beneath me,\" she growled. \"Pathetic, whiny ass...no!\"\n\nMike had pulled his cock out of her and was casually slapping it on her tailbone. He absolutely admired how bubbly her butt looked in this bent over position, then teased her soaking wet folds with the head of his cock.\n\n\"You can't have it back unless you beg for it,\" he told her, dragging the head of his cock just across her open folds. \"And I don't mean pretty please. I mean actual begging.\"\n\nShe gritted her teeth and forced herself backward, but he stepped away. It was a fun game for a minute as she tried to force herself onto him while he pulled away, but he saw the staff on the table and got a devilish idea.\n\nWhen he stepped away from her, she groaned, but when he came back with the staff, she went quiet. He flipped it over, examined the bottom of it, then stepped back and gave it a casual swing.\n\nTHWACK! The end of the stick caught her squarely across both butt cheeks, and she shrieked, her legs now vibrating beneath her. He swung again, this time much harder, and raised it at the last second. Though he missed, she saw the alternate timeline and let out another howl.\n\n\"I'm not hearing any begging,\" he told her, then playfully swatted her ass again. \"I'm going soft right now, too, and once it's gone, I'll probably leave you here.\"\n\nThis was by far the biggest lie he had told, because he was rock hard and ready to burst. His magic swirled around inside him, desperate to escape. He gave his cock a couple of good pumps and then touched Sofia's asshole with his finger. A spark jumped between them and she hopped forward, muttering something in a language he didn't recognize.\n\n\"Excuse me?\" he asked, then zapped her again. This was even more fun than the staff, because his cock tingled every time he did it.\n\n\"...more...\"\n\n\"What? Can't hear you?\" He zapped her again, then went to smack her ass with the staff. Another idea came to him and he looked at the butt of the staff.\n\n\"Fuck...me...\" she muttered. He teased her pussy with his hands, then transferred the fluid to the staff itself.\n\n\"I'm the Head Librarian now, I deserve some respect,\" he informed her, then smacked her ass with his hand.\n\n\"You're such a bastard,\" she moaned, her cheeks flushed. She looked over her shoulder, her eye glowing with intensity. \"Please, fuck me. Fuck me hard.\"\n\nHe tilted the staff forward and winked at her. \"You forgot to call me sir.\"\n\nWhen he pushed the butt of the staff inside of her, she screamed so loud that his ears rang. Pinned to the wall, she did an amusing hop up and down as he used the staff like a makeshift dildo, careful to keep it from sliding too far in. In the middle of one of her shrieks, she hollered something unintelligible, so he held still to listen in case it was the safe word.\n\n\"Li...ligma,\" she moaned, and the staff lit up. The wooden bands around her hands vanished into the shelves and she spun around, the staff clattering to the ground.\n\nOkay, didn't foresee this happening, Mike thought, and Sofia pounced on him. She easily tackled him to the ground, her pendulous breasts swinging in his face as she forcibly mounted him. With his wrists pinned to the ground, all he could do was lie there as she rode him, her cheeks and chest glowing brightly as if sun burned.\n\n\"Fuck, you, fuck, you, fuck...fuck...\" she gritted her teeth and sat up straight on top of him. The feeling of a bigger, stronger woman on top of him was too much, and his orgasm snuck up on him. When he came, it was like molten fire leaving his body, and the room went dark as he came so hard his vision dimmed.\n\nHis magic coiled around the cyclops and formed into a swirling vortex that looked very similar to a tornado. Her scream was lost to the roaring sound in his ears as the magic carried both of them away on a recurring cycle of bliss, and by the time Sofia collapsed on top of him, he had lost count of how often he had blown his load deep inside of her.\n\nTime passed, but neither of them said a word. Eventually, Sofia sat up and looked down at him, an odd expression on her face. Her long, twisted braid dangled over her shoulder and brushed lightly against his chin.\n\nWhen he opened his mouth to ask what was up, she kissed him. His head swirled with the intensity of her tongue on his, and when she finally let him go, she covered his lips with her finger before he could speak.\n\n\"Shhh,\" she whispered. \"No talking in the Library.\"\n\nHe obeyed.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nMike stepped out of the Library with his books and set them down on the desk. He looked back over his shoulder to see Sofia smirking at him.\n\n\"Coming back with me?\" he asked.\n\n\"No. I've got some research to get done. There are a few things I want to look into. Drop by if you need me. For anything.\" She blinked (which he suspected was a wink) and then pulled on the magic book, causing her to vanish in a flash of light.\n\n\"Augh.\" He rubbed at his eyes, trying to chase away the spots. In the process of blinking rapidly, he felt a strong, bony hand grab his shoulder.\n\n\"Mike Radley,\" Death said, his voice unusually loud. \"I see you have returned from the Library.\"\n\n\"Yeah. Needed to do some research. Found some potential leads, do you mind if I use the desk?\"\n\n\"Not at all, Mike Radley.\" Death picked up his tea and his teapot. \"I am in need of some refreshment. Would you like some tea as well?\"\n\nMike sat down in the chair and looked up at the Grim Reaper. Though his face was made of bone, there was an expectant air about Death, much like an excited child.\n\n\"Yeah, sure. Why the hell not?\"\n\n\"I shall bring an extra cup,\" Death declared and then walked out of the room. Once he was through the doorway, a dark face peered around the corner, green eyes open wide.\n\n\"Oh, hey, Kisa,\" Mike began, but she bolted, and he heard her run across the house and then out the back door. He sighed. The home's newest resident was a bit aloof, but he figured he would get a chance to talk to her eventually. For now, he would get a chance to look through what he had found.\n\nHe flipped through the pages of the books, smiling at the little bookmarks Sofia had put in them so he could go straight to the good parts. Each one had a perfectly drawn eye on it, and he couldn't help but think about how she had felt pressed against him.\n\nEager to avoid explaining an errant erection to the grim reaper, he flipped through the first couple of books. Apparently traveling to the Underworld was a lot like Woodstock; plenty of people went, but everyone had a hard time remembering what had happened there. One of the books had some fairly vivid imagery of a man being torn apart by demons as a result of accidentally opening a portal into Hell by mistake.\n\nThe smell of Earl Grey filled the room as Death walked in, carrying a small tray. He set the tray down on the desk and pulled up a chair across from Mike.\n\n\"What is it you are working on, Mike Radley?\" Death filled his cup and then poured some tea for Mike.\n\n\"Remember when I went to go see the faerie queen?\"\n\n\"Ah yes. I remember it like it was yesterday.\" Death took a long sip of his tea. Steam floated up out of his eye sockets, and the tiny flames inside turned blue. \"Or maybe it was? I lose track of time quite easily.\"\n\n\"Don't you burn your...\" Mike realized that the question was dumb and let it drop. \"How is it?\" he asked instead.\n\n\"Very good, Mike Radley. Out of the many things I have enjoyed on the material plane, I dare say that tea is my favorite.\" Death sipped again. \"I like how it warms me from the inside and fills me with vim and vigor.\"\n\n\"Yeah, sure.\" He pulled his cup toward him and noticed the bowl of sugar cubes on the tray. He added a couple of cubes to his tea and stirred it. \"Well, we didn't get my friend back. However, the queen gave me a task that I can accomplish that will allow me to bring her home.\"\n\n\"Ah, a quest!\" Death leaned back in his chair. \"I have met many an adventurer who has gone on such a thing. Granted, the ones I met had failed. There was much disappointment on their part.\"\n\n\"Yeah, well, my quest is supposedly impossible. I need to travel through the Underworld to get back to the faerie realm. I imagine that won't be a walk in the park either.\"\n\n\"Mmm.\" Death stared at the ceiling, lost in thought. Mike swirled his tea around and gave it a tentative sip. He wasn't a tea person, but figured he may as well learn how to drink it.\n\n\"Yeah, so Sofia and I went through some books in the Library and we hope to find a way to get there.\"\n\n\"Getting to the Underworld is quite easy, Mike Radley.\"\n\nMike rolled his eyes. \"Well, yeah, dying gets you sent there, so I get it.\"\n\nDeath shook his head. \"I am not referring to the act of dying. You need to simply open the appropriate portal.\"\n\n\"Easier said than done.\" Much like the faerie realm, the rats had been unable to make any headway. The Underworld was on another plane of existence, and Reggie had been unable to make any headway on the problem. \"Some of these books make reference to a portal that can be traveled through, but none of them even hint at where to find one.\"\n\n\"Ah, yes. I have met many men and women during such an endeavor.\" The Grim Reaper nodded knowingly, then drank some more tea. \"They, too, suffered some disappointment. At least they got to go there in the end, I suppose.\"\n\nMike laughed. \"Well, I fully intend to come back, so we need a better way. What's frustrating is the Underworld is a pretty broad term, so even if I get there, I need to find my way to the faerie realm without getting lost and ending up somewhere bad.\"\n\n\"Like Hell, Mike Radley?\"\n\n\"Hell would be on the top of my list for places I don't want to go.\" He pulled a piece of paper out of the desk and drew a circle. \"From what I understand, there's a place called Purgatory that kind of acts as a giant lobby for the Underworld.\" He drew a circle on one side and labeled it Earth. \"Now, some places overlap Earth, like Hell or the faerie realm.\" He drew two more circles, making a chain along the edge of Purgatory. \"Now I don't know if Purgatory will get me there, but if I can find a path that avoids anywhere bad, then I should be fine.\"\n\nDeath leaned forward and gazed at Mike's diagram for several seconds. Suddenly, the Grim Reaper stood, nearly spilling his tea. He picked up the piece of paper and held it close to his face.\n\n\"Mike Radley! Do you realize what this means?\" Death lowered the paper in awe, his jaw hanging open.\n\n\"No, what?\" Excited, Mike rose and crossed to the other side to look at the diagram.\n\n\"You have created a map!\" The specter held the paper up triumphantly. \"I have never seen one created before. All it took was a bit of paper, and some ink, and\u2014\"\n\nMike groaned and went back to his chair as Death rambled on excitedly about what had just transpired. While he appreciated the enthusiasm, disappointment was sinking in.\n\nEvery fiber in his being fought him right now, crying out for him to fight his way back to the faerie realm. He knew it was a terrible idea, but knowing that Cecilia was in a cage had put a massive hole in his heart, and it would remain unfilled until he could save her. Scowling, he picked up his tea and took a sip, careful not to burn his lips.",
        "\"\u2014and I suppose you will probably go there through the portal in your backyard.\" Death set the paper down on the desk and picked up the pen. \"Ah, yes. If I draw the gate right here, then I have participated in map making, too!\"\n\n\"Wait, what?\" Mike leaned forward in his chair as Death drew an arched gateway with iron bars. \"Death, that's just the gate in the backyard, it doesn't go anywhere.\"\n\n\"You are wrong, Mike Radley. I may not be knowledgeable in many things, but I certainly recognize a portal to the Underworld when I see it.\" He drew a cartoon skull over the bars. \"I assumed you knew this already, which is why I said getting there was easy. If not for that gate, I would have called your task impossible.\"\n\nStunned, Mike sat with his mouth open. Could Death be right? Was the unassuming gate in the backyard really the answer to his problems?\n\n\"It is very rude to stare, Mike Radley.\" When Death scowled, the temperature in the room dropped dangerously and the twin fireballs in his sockets went from blue to red.\n\n\"I'm not staring, I'm...is this a joke? You're absolutely serious, the gate in the backyard is a portal?\"\n\n\"Mike Radley, if there's one thing you should know about me, it's that I'm always dead serious.\" Death picked up his tea and sipped it with a smug grin. \"Now that is a proper joke.\"\n\n<center>\ud83c\udfe0\ud83d\udc80\ud83c\udfe0</center>\n\nI hope you all really liked that scene, because it was one of the more difficult scenes to write. Sofia scenes require a certain amount of respect in their approach, and I appreciate any good feedback you can offer me (for next time).\n\nThanks to all my beta readers for helping me through this chapter, I am gearing up to start writing the next one in the days ahead. I'm hoping the world calms down a bit in the near future, but my good buddy Death assures me that his sibling is quite the cunt and finds the whole thing very amusing.\n\nAs always, don't forget to rate, review or comment. I love reading them, especially when the struggle is real. I appreciate the Lit community and all that it has done for me and would like to reiterate that, at some point, the story of Mike Radley will come to an end.\n\nAnd when it does, that chapter and all those in between will see these pages.\n\nTake care of yourselves, be kind to each other, and wash your damn hands. Annabelle out."
    ],
    "authorname": "writerannabelle",
    "tags": [
        "no talking in the library",
        "deadpan humor from the grim reaper",
        "bdsm",
        "bondage",
        "cyclops",
        "feet",
        "female domination",
        "male domination",
        "oral",
        "very rough sex"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-52"
}