{
    "title": "Lost Empire Ch. 13",
    "pages": [
        "Derrick's heart had been hardened, the A.I.'s were more alive to him them almost all the humans he'd met were. After losing Lucy and instigating the installation of the new detection system, Derrick felt he was ready to start hunting the other EIG's. Then again he had the nagging thought in the back of his mind that he should hear the message Tempro had for him first. Sighing damn he hated to wait! Though the message he'd already received had made an impact on him, he still wondered who's the voice had been speaking to him. Shaking his head well, he thought we'll know soon enough, it was only a few hours now. Looking out at Tempro again he had to wonder why the ship was almost twice the size of the other EIG's.\n\nComparing, Derrick could see that there were eight engines instead of four; Tempro had confirmed that he had eight energy plants. Though he had many weapons there weren't as many as on the other ships. Looking closer there were those extra set of astral fins that he had no idea what they were. Then there was the mystery of all this who had ordered Tempro to such secrecy? As far as he knew the only one that could do that was the emperor and that was him, as far as he knew he'd issued no orders like that. The longer he thought about it the more that his head began to ache. Soon he thought, we'll have the new detection system up, then let them argue with him about his right to the throne. So deep in his thoughts he was that he didn't hear Mary call his name for a minute.\n\nLooking behind him he nodded, \"Sire, I was saying that we are starting to receive a few answers to your summons.\"\n\n\"Oh? I take it most of them aren't believing I am the next emperor?\" Derrick stated.\n\n\"I am afraid they aren't, as I stated before they are demanding proof before they will begin to accept you. Even then I am afraid that many of the nobles are going to fight you on this.\" Mary said.\n\nNodding Derrick replied, \"That's why I've made major changes to the detection system. I feel our chances will be greatly improved.\"\n\nLooking over the plans Mary started to smile larger, \"Yes from what I can see, you have managed to increase the sensitivity by more than seventy eight percent. I would say this most definitely will increase the probability of finding more of them.\"\n\nDerrick was quiet a moment, then almost in a whisper he said, \"I haven't forgotten about you Mary, I will find at least one more of yours.\" \n\nMary's mouth dropped agape; she'd given up hope of ever seeing any of her children, let alone more than one.\n\nBowing low and still in shock Mary told him, \"Sire you do not have to do anything special for me.\"\n\nDerrick looked at her to make sure she wasn't joking with him the sincere look he saw there, let him know. \"Mary I don't consider this anything special or a favor, I feel it is something I must do. For all that you do for me, yes I realize it is your duty and there are many times you can object under the imperial mandates. I have realized that you truly believe that I am the emperor and are trying with all that you can to help me.\" Mary's eyes were filled with tears, no one had ever taken into consideration what she might want. Then it occurred to her that Derrick had also done this for the EIG's also, she was already reading an eight percent increase in independence in Shelby and she was sure the others would follow soon.\n\n\"Sire, if I may ask?\" Mary started. Derrick nodded so Mary continued. \"I have noticed so many things that you have done for me, Shelby my dau..., contact to you, and the others.\"\n\n\"You are wanting an explanation?\" Derrick asked.\n\n\"Possibly more than that, I am somewhat confused as to why? Why are you doing these things for all of us? We are mere machines just tools that humans can utilize. Though we have all the characteristics of a living being we are still machines.\" Mary replied trying to word it exactly like she wanted it.\n\nSighing for a moment, Derrick didn't notice the other holograms when they appeared to hear what he had to say. Though they had an idea they still wanted to hear it all. \n\n\"I guess I'll have to start a ways back.\" Mary nodded though she had a sizeable amount of information on Derrick there were still a lot of holes in the data.\n\n\"Growing up in abrir oculta providence I was somewhat of an outcast because of my intelligence. I spent many an hour reading, mostly military tactics and battles, plus my grandfather was a source of many..., stories.\" \n\nHere Derrick's eyes filled with tears so many people had considered his grandfather to be a loon, a fanatic filled with wild ideas. The man had been a hero to young Derrick, with his stories of his grandfather's grandfather on a sleek black ship fighting the enemies of the empire. It was what had caused Derrick to enlist after school as an officer. That and the fact that his father and grandfather had both died mysteriously not far from the imperial palace shield.\n\n\"Entering the war I fought for the Republic thinking it was the right thing to do. I was ordered to do things I knew were wrong, things I knew that shouldn't be done.\" Derrick stopped a moment to look at the reading on the installation of the new detection system, hmmm almost done.\n\n\"I fought for quite a few years, then one day my second term was up. I had already decided to leave the service, when I told my commander I was getting out he was surprised, almost as if he was told I WAS going to re-up. Within two hours I was brought up on charges, court-martialed, everything taken from me them I was beaten by twenty men. I was taken to the most desolate area outside of the base, beaten again, then left to die.\" Mary could see the ire rising in Derrick, plus his heart rate was rising as was his pulse.\n\n\"I had managed to conceal a small radio in my pants they had missed, I called my family. I must have passed out because as my mother told me it was five days later when I awoke, I was the Republic's most decorated hero and I was treated like garbage. The only good thing I can say is that I didn't just lay down, I know I broke a few of their noses, I'm sure many still can't breathe right.\"\n\nMary was taking everything in, it was by far a different story than she'd gotten from the records that she'd received.\n\n\"So you want to know why? I was treated like I was beneath them, all the people of the Republic world shouted insults at me as we were going through the streets. They called my mother and grandmother crude and vile names. Though I may be the emperor I still do not trust people, almost ALL people. I trust machines far more than them. I am afraid that I always will, people have turned on me since I can remember. Yes I know Mary, I will be working on it but I have a very strong distrust of all of them.\"\n\nMary's mouth was hanging open she had healed many a mind therefore she knew the signs, surprisingly Derrick showed very few signs of the distress that so many had.\n\n\"I was wondering Sire,\" Mary started, \"Usually when someone comes from battle or war they are usually showing far more signs of distress related to all of it. From what I am seeing you are showing far fewer of the signs than I thought were possible. Especially for the amount of time, that you were in.\"\n\nSmiling a moment Derrick turned from the console to look at Mary. \"Alright Mary, I have a small confession though I know that you may try to deny it... for a time. I know that Shelby is a product of you, your mind as it were.\" \n\nDerrick held up his hand to quiet Mary. \"I gleaned this after quite a while with all the information I took in, it is the only assumption that makes sense. I also know that almost half of the EIG's are Shelby's.\" \n\nAgain he held up a hand to quiet Shelby and Mary. \"It isn't your fault you did all you could to hide it, I am a little bit smarter than we all thought at first. I also know that Tempro is yours Mary,\" Derrick said as he saw Mary smile at Tempro who had a shocked look on his face.\n\n\"I know far more than you think, I just had to have a little time to assemble all the information in order. I...\" \n\nDerrick started when several alarms went off. \"How many Mary?\" Derrick said as he watched several blips approach the Presidents ship.\n\n\"I'm reading a total of four, approaching at a higher velocity than you'd expect a planetary shuttle.\" Mary replied. \"SIRE!\" Mary shouted, \"I am reading four high yield explosive devices on board those objects approaching the president's ship!\"\n\n\"Shelby! Trans-warp! As close as is safely possible!\" Derrick shouted sitting in the command chair.\n\nThe now familiar engine whine sounded, then they were there a second later. Derrick had Shelby grab the President's ship with a beam, then they were gone all within 1 minute. On the planet several of the revolutionary leaders were cursing when they saw the huge ship wink in grab the ship then wink out.\n\nOpening a channel they started to yell at Derrick, that is 'til Derrick came on all the channels. \"I have spared the Republic world so far, because I realize that there are some, though very few, oppressed people still there. Do not make me regret that decision, I have enough of a grudge with the planet and the people now, that I WILL NOT HESITATE to destroy it! Do I make myself clear?!\" \n\nThere was no immediate reply, so Derrick had Mary target the palace, tell them they had one minute to evacuate, then had her level it, it only took two seconds. \"Now then, I expect that I won't have any more incidents?\" This time there were several voices shouting they would not make another move against him and his ships. \n\nLaughing after he disconnected he looked at Mary, \"You think too harsh?\" He asked her.\n\n\"No sire I thought it was a most effective demonstration, plus I think it will help in the cleanup of that planet.\" Mary said as she and Derrick laughed at her joke.\n\nLooking at Shelby now he had to decide what to do with the little creep he sure as hell wasn't going to bring him on board. Hmmm couldn't kill him yet that had to be public when Derrick ascended the throne, damn! Where in the hell was he going to put him? There was always the jail though Derrick knew the man had probably bought almost everyone of law enforcement there was. That's when he thought of the Rangers, though he wasn't all that sure that they'd go along with him on this. \n\nWell, he wouldn't know 'til he tried, \"Mary I need to contact the Rangers, though you haven't received an answer from them yet, I believe that it is time to move forward and bring them on board.\" Derrick told Mary.\n\n\"I also believe that this is a good idea though I think that you should delay for a short time. As I remember you said that you wanted to hear this message first.\" Mary reminded him.\n\nCrap he'd almost forgotten about the message, though why did he feel this way? That he HAD to hear it before he went forward with his plans? Again looking over all the readings Derrick decided to wait.\n\nIt was almost an hour later when Tempro contacted them, \"Sire?\" Tempro asked. \" \"Yes I am...,\" Derrick started then was standing on board Tempro, \"... ready to come aboard.\" Sighing Derrick just shook his head. \n\n\"I apologize sire but I was told to bring you aboard as quickly as possible. I was told that you aren't to leave this room 'til you have heard this message. Are you ready sire?\" Tempro asked.\n\n\"Yes,\" Derrick said as he sat in a chair, looking around it appeared that the entire lay out of the ship was completely different from the others.\n\nAs he sat there looking, a small hologram of an older man came on, \"Hello Derrick.\" the voice said then the hologram smiled. \"Checking out Tempro I see, this is nothing just wait.\"\n\n\"Wait, I've heard your the voice from before, Tempro I thought you said this was a recording.\" Derrick said.\n\n\"It is sire, it is interactive,\" Tempro informed him.\n\nThe voice laughed, \"Well, it is mostly interactive. I do still have a signal to Tempro, just in case. I know you have questions, let's see if you do after I finish ok? Good, now then as I told you earlier you are the emperor, though as you guessed it will take a while to re-establish the empire. You have quite a bit of work to do though you will have help, Mary has already sent the proof that the Rangers required, they are the first to fall in line behind you. I realize that you think Shelby has settled your mind but she didn't, you might say she anchored you. Mary will finish it though I think you will want Shelby there to help.\"\n\n\"Sorry to interrupt but just who in the hell are you? I know you said to wait. You seem so familiar I just can't place you.\" Derrick asked.\n\nLaughing a moment the hologram looked Derrick straight in the eyes, \"I really am surprised you don't recognize your own face.\" Derrick's mouth dropped agape, \"There we go! Finally everything is starting to make a little sense. We know ourselves Derrick, had we left you alone you'd never come to this point, well not for a lot longer. As you may have guessed Tempro is a time ship, though as you will discover in a little while he is a whole lot more.\"\n\nDerrick was still speechless though this was starting to answer a lot of the questions that he had. \"Now then, you have already started on the path toward re-establishing the empire, as I said Tempro is a whole lot more. There were several experimental procedures that were never really implemented, for now there are only two that you need to concern yourself with. Though knowing us and we do, you'll soon be knee deep in the others too.\"\n\n\"So you are me, you left this to get me moving, ok I get all that, even why considering all the paradoxes of time. Why not let me go through this in my time?\" Derrick asked.\n\n\"God I've forgotten just how stubborn and stupid I could be! I had to, had I not then by my time not even half the empire would be back yet. Now pay attention! There are two experiments that you have to complete they are considered dangerous even in my time though you are the reason that we can even think about using them let alone actually trying them. You will need a Queen one day or the line will die with you. \n\nI also know that you trust no woman outside our mother and grandmother. There is an experiment to, they only way I can describe it is creating a mate that is ideal. Though I think you would be more concerned with the A.I. transfer. Ah! I see this got your attention! Good I'll leave you to it. Oh! Yes you'll find more EIG's and you'll find Lucy again though, it will take a bit of time, I am afraid, sorry.\" With that the hologram was gone.\n\nThe short blonde haired hologram of a man appeared, \"Sire I now am to grant you full access to everything.\"\n\nDerrick could only nod as he surveyed everything that he saw, Christ! Most of it Derrick recognized, well over half of it, he'd only dreamed of. The possibilities were endless IF he could get a lot of them going as the older version of himself had said it was almost all experimental. He sat there thinking that his older self was counting on him; hmmm did this actually confirm the fact of the theory that time was not set and could be affected? Interesting Derrick thought very interesting.\n\n\"I am assuming that with as vast a library and computer core, you are equipped to pose possible effects on time when certain events are changed in the past as they relate to the present?\" Derrick asked of Tempro.\n\n\"Why of course sire, I live to serve you, though I have to warn you sire, many major events of the past you cannot change. I am afraid that to change them would also change you, therefore altering you. This I cannot allow as you are as you should be, sire.\" Tempro stated as he bowed low.\n\nDerrick walked around staring at everything in wonder, molecular recombinator, DNA resequencer and splicer, though what caught his attention the most was the cloning apparatus. Derrick was about to walk further into the lab area when he received a call from Mary.\n\n\"Sire we have a wing of the Rangers approaching,\" she told him.\n\n\"All ships full shields! Initiate light screens, arm all weapons, target their engines only, do not fire unless fired upon! Shelby!\" Derrick was almost instantly back on the command deck of Shelby. \n\n\"I want defensive positions, Conner right, Zan left, Tempro hang back, you are to engage only if you have no choice!\" Derrick stated firing off rapid orders.\n\nOn board the lead ship newly commissioned Rear Admiral Joseph Hartwell wasn't too sure about this. To him it didn't matter that he was the only one who had spoken to this man who claimed to be the emperor. He'd seen the capabilities of just one of these ships, at present he'd counted at least two before they vanished.\n\nChrist! One could decimate his wing of sixty ships, with two or more they were dead no doubt about it. Stopping only a few thousand miles away he opened up a channel.\n\nSo Derrick thought they had sent little Joey, might as well start with a friend, least that way he'd know more how the man was thinking. Waiting Derrick laughed imagining the look on Joey's face when Joey saw his old friend and commander.\n\n\"To the man commanding the strangely configured ships,\" sighing he still thought this was a bad idea. \"I have been sent by Ranger command to open communications with you, I am also to swear allegiance to you.\" Derrick could see that the man was nervous, time to up that a bit before the big reveal.\n\nIn a distorted voice Derrick replied, \"I see that you have been promoted since last we spoke.\" Laughing Derrick saw him look up at the cameras. \n\n\"Yes, I can see you, though I cannot accept your pledge. Not like this I can't, what say you come here and we can discuss it?\" Derrick laughed at the surprised look on his face, oh but that was nothing compared to what was about to happen. \"Would that be better for you Little Joey?\"\n\nJoseph Hartwell's face screwed up in to a look of confusion, Little Joey? He hadn't called that since? His mouth dropped open there were only five men alive that had ever dared to call him that!\n\nLooking at the camera he asked, \"Who the hell are you? No one has dared to call me that except...,\" There were several yells and screams when the man vanished, \"... the members of my ...old... unit.\" Joseph Hartwell's mouth dropped agape again staring at the view screen and the scene on board his command ship. Swallowing hard the man was almost afraid to turn around he could feel someone or something behind him.\n\n\"Hello Little Joey, long time no see.\" A voice from the past that he hadn't heard in years, assailed his ears. \n\nSlowly turning Joseph Hartwell peered into the darkened room. \"Commander O'Toma?\" He asked shocked at hearing a voice he thought never to hear again.\n\nLaughing Derrick watched as the man's face went from suspicion, to shock, to just plain old elation. \"I'd say it's good to see you again Little Joey, though at the moment we have a little problem.\" \n\nJoseph Hartwell could see his second in command assuming command, that little ass! Already ordering a strike on obviously far superior ships that would more than guarantee the destruction of the entire wing.\n\nLooking at Derrick with a worried face, Derrick raised his hand to the screen to let him know to proceed. \"Captain Multry!\" They saw the man stop dead in his tracks, \"unless you want to start a war that the Rangers cannot win, I suggest that you stand down. I will be back on board soon.\"\n\n\"Sir, you know the regulations concerning the kidnapping of Ranger personnel!\" The second in command stated.\n\n\"I am fine, as a matter of fact I am here with an old friend, he is obviously working for the new emperor. I'll keep you appraised.\" Shaking his head, Joseph Hartwell turned back to Derrick. \n\n\"So this is where you have been, though I have received reports that you were in a salvage ship.\" Hartwell said. \n\n\"I was for many years, it was a way to forget the hell of the war, and afterwards.\" Derrick said between clinched teeth.",
        "\"We all heard about what had happened, the entire unit was disbanded with all of us separated from the service the next day. They made the mistake of sending the same men after a few of us. I was with Dempsy, and Thomas when they found us, idiots forgot that Dempsy was a martial artist. The first ten went down faster than I've seen in a long time.\"\n\nDerrick was smiling the first real one he'd felt about the whole situation in a long time. \"It would have helped to have Dempsy there, they kicked my ass pretty good, though I didn't go all that quietly,\" Derrick said.\n\nHartwell's eyes opened large, \"That explains why several of them looked like they had been beat up! After that we weren't bothered again, I started to look for you but no one seemed to know where you had gone. I am sorry Commander, had we known, we all would have been there it would have been a lot different.\"\n\nChuckling a moment, Derrick could only imagine the state of the twenty men that had issued his punishment after his men had finished with them. \n\nLooking at a screen a moment Derrick shook his head, \"Excuse me a moment Joseph, Conner?\" The hologram of the young man appeared, \"Target the lead ship, disrupt all engine and weapon functions, sorry Joseph but you're going to need a ride back.\"\n\nThey both watched as a strange yellow beam came from nowhere and struck the lead ship, after shaking a bit, the ship went dark.\n\n\"What did you just do?\" Hartwell cried to Derrick.\n\n\"It's just a nullifier, though as weak as the systems are today, you won't be going anywhere for a while.\" Derrick told Hartwell. \n\n\"Now then about that allegiance you were going to swear.\" Derrick said with a smile.\n\nCatching himself a moment later Hartwell had to remember to close his mouth. \"Uh, yes, I was supposed to deliver this to the man claiming to be the new emperor.\" Hartwell said reaching to pull a paper from a tube at his side. \n\n\"I was chosen to deliver it, since I am the only one to ever talk to the man and come out of it in one piece.\" Looking down Derrick saw him start to panic when he saw that the tube was empty.\n\nChuckling Derrick asked, \"Where exactly did you leave it for safe keeping?\"\n\n\"It's in the safe in my quarters,\" Hartwell stated. \n\nNodding to the hologram of a slender blonde woman, they waited a moment then a rolled parchment appeared on a table next to Derrick. Shelby disappeared leaving Hartwell staring at the empty spot, his mouth again wide open.\n\n\"Joey, close your mouth,\" Derrick said a smile plastered to his face. Nodding Hartwell closed his mouth but still couldn't take his eyes off the spot where Shelby had been.\n\nStill a little in shock Hartwell turned back to Derrick, \"Who in the hell was that gorgeous creature and is she free tonight?\" \n\nThey both heard a giggle then Shelby reappeared, \"I am Shelby but I am afraid I am unable to leave the ship.\"\n\nHartwell looked at Derrick, \"You are obviously the commanding officer on this ship couldn't you let her go? I mean just for tonight? I'm sorry, that is if you aren't involved with her.\"\n\n\"Oh I am in a way,\" Derrick started, laughing then smiling, Derrick explained when Hartwell's face showed the confusion he was feeling. \"You see the reason she can't leave the ship is because she IS the ship.\"\n\nHartwell started to laugh, then he saw that Derrick was dead serious; laughing a little more his shocked face had Shelby giggling. \"Wait, wait, wait, you mean to tell me that, this gorgeous woman IS the ship?! You're serious aren't you?\" \n\nSighing Hartwell should have known it was too good to be true. \"Well 'bout my luck always seem to find the perfect one and she isn't real.\"\n\nDerrick was in shock, there wasn't a Mrs. Hartwell? \"What in the universe is wrong with you? I know things didn't affect you as badly as they did me, I'd have thought you'd have tons of women lined up trying to marry you.\" \n\nShaking his head Derrick started again, \"my god man what did you do join the Rangers as soon as you got out?\"\n\nHartwell turned away for a moment. \"Not all of us had family to fall back on; you and the others were my family. Losing you was a major blow to me and the boys.\" Hartwell said.\n\n\"I'm sorry I haven't kept in touch, 'til I got a handle on everything, I wasn't too good company. Thing is I just got a handle on it a few weeks ago.\" Derrick told him. \"Enough about the past, now again, about this allegiance you are to swear?\" Derrick asked Hartwell.\n\n\"Yes, I am to read this to the man who claims he is the new emperor, so... is he here or do you have to call him? Is he on the other ship I saw?\" Hartwell asked anxious to get this over with.\n\nDerrick smiled, this ought to be good, \"I'll take it,\" Derrick said.\n\n\"I have to read it to the man himself,\" Hartwell said.\n\nSmiling even larger Derrick looked at Shelby, then opened his mouth as the same distorted voice Hartwell had heard before came from the speakers. \"I said I'll take it.\" Hartwell could only stare at his friend opened mouth; there was no way that Derrick O'toma was the emperor!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-13"
}