{
    "title": "The Only Constant is Change Ch. 12",
    "pages": [
        "Author's Note:\n\nWelcome back readers. This is the second chapter in what I think will be a three-chapter arc in Jeremy's life. Thank you so much for continuing to read, and vote, and sometimes comment on my story. It's incredibly rewarding, and I'm sorry I haven't been able to keep churning out chapters as quickly as I'd like. Hopefully, the quality is improving, even if the delivery is slowing down.\n\nAbout the story: This series covers the entirety of a man's life, with gaps thrown in along the way to keep it moving. I set out to see how my protagonist changes over his life as his experiences shape him. If you haven't read earlier chapters, you probably won't recognize some characters or references that are made, so I recommend you begin in chapter 1 and go from there. Most of the chapters are only 4-5 pages long on the screen, so they don't take forever to get through.\n\nOne change from the last chapter. Jeremy's canine companion was supposed to be a basset hound, not a beagle. Similar dogs and coloring, but I always think of beagles as more happy and energetic dogs, while the basset always looks to be very sad. Sorry for the bad imagery. He wasn't a big part of chapter 11, but he has more of a role here, so I wanted to clear that up.\n\nReaders familiar with this series know that some chapters are sex-heavy, and others have no sex in them. This one has an extended sex scene in it. I hope it tickles your fancy.\n\n- MB\n\nAs always, any sexual activity takes place between adults.\n\n*****\n\nJeremy snuggled his head into the soft swell of her breasts. She idly stroked his hair while watching him sleep. He didn't want to wake up, but it was already mid-morning and the sun was filling the room with its warmth and brightness. With a deep breath, he opened his eyes and looked into her face. Seeing that he was awake, she smiled. \"Hey,\" she softly said.\n\n\"Hey,\" he said, as a smile automatically rose to his face.\n\nHe bent his head and began to place small kisses on her breasts. \"Oh no, don't get started with that,\" she said, sliding away from him. She planted a tender kiss on his lips and sadly said, \"I don't have much time, and there are things I need to say to you.\"\n\nA tear leaked from his eye as he sat up and asked, \"Can't we just stay here? I miss you and Joshua so much.\"\n\nAva placed her hand on his cheek and smiled at him warmly. \"I miss you, too, my darling. Joshua does as well. But we both know that can't happen.\" She grabbed his hands and held them tightly. \"I need to tell you something, and I want you to make me a promise. Okay?\"\n\nThrough his tears, Jeremy nodded his assent.\n\n\"Jeremy, you brought more love and joy into my life than I ever dreamed possible. I loved every minute of every day that we were together. But that time is gone now, my love. And while we are gone from you now, you still have a life to live. You have it within you to give yourself completely and to share your love with more than one woman at a time. I saw it, and I loved you for it. Here's the promise I need you to make: find someone who will love you the way that I love you. You can't go on like this, and I don't want you to try. It doesn't mean that you've forgotten or replaced me. If anything, it just means that you're happy, and that's all I've ever wanted for you. Will you promise me that you'll try?\"\n\nIn his grief, his words came out in a strangled whisper. \"There'll never be another you. But I promise I'll look for her. And if I find her, I'll make sure she knows how high the bar was set by my amazing first wife, my first love.\"\n\nShe smiled at his words and said, \"I know you will, Jeremy. You wouldn't be you, if you didn't.\" Then she leaned forward, kissed his lips once again, and said, \"I have to go now.\"\n\nJeremy panicked and grabbed at her hands, pleading with her to stay a little longer. She shook her head sadly, saying, \"It doesn't work like that, sweetheart. I need to go, and you need to live. It's time to wake up.\" Then she stood up and walked a few steps away. She turned to him and said, \"I will always love you. And I will see you again someday.\" Then she blew him a kiss, and like a wisp of smoke, dissipated into nothingness.\n\nOnce again, Baxter was watching him when he woke up. And once again, he had a doleful expression on his face. This morning, though, it seemed to sympathize with Jeremy, saying, \"I know it's hard, but we'll get through this, okay?\"\n\nJeremy reached over and scratched his basset's head and ears, and said, \"Good morning, Bax. Hey, guess what?\" Baxter picked up on the excitement in his master's voice, and his tail thumped in anticipation. \"I saw Ava last night.\" Almost as if he were shocked at hearing that name, Baxter cocked his head expectedly. Jeremy continued, \"She told me a lot of things. But she made me promise to find someone to love. She gave me permission.\"\n\nBaxter wagged his tail in response, but otherwise, had nothing more to say on the matter. Jeremy swung his legs over the side of the bed, then leaned over to pet his canine companion once more. Softly he said, \"I don't know if I'm ready, buddy, but she's right. I've got to try.\" Then he stood up, threw on the pair of shorts and t-shirt he'd been wearing before bed the previous night, and said to Baxter, \"Now, let's go get you something to eat!\"\n\nBaxter's excited scramble off the bed indicated that he thought that was a good idea.\n\n*****\n\nIt had been an interesting week for Jeremy, if for no other reason than that he wasn't used to not having to be at an appointed place at a designated time each day. He'd submitted his resume to Monica on Monday, but he hadn't heard anything back. Of the three grief counselors he'd identified over the previous weekend, only two had been able to get him appointments this week. And he had a date with Erin tonight, Thursday. As he ate his sausage and oatmeal, Jeremy thought about his attempts at grief counseling. His week off was almost at an end, and he wanted to feel like he was in a better place before he headed back.\n\nThe two counselors that Jeremy visited could not have been more different. The first, April Cheung, was a diminutive woman of Chinese descent. She tried, and Jeremy appreciated the effort. But between her dark gray suit over a white silk blouse, and the spacious office with its modern furnishings in dark wood and chrome, he thought it a rather cold environment. He didn't feel any personal warmth from Ms. Cheung as she described her method, and he spent more than a few distracted minutes trying to discern her age. He'd always been fascinated with the subtle aging process of Asian women, how they didn't seem to age substantially for many years and then seemed to burst into old age. He guessed she was probably in her late forties or early fifties, but he wasn't a great judge. At the end of his session, he'd thanked her for her time and didn't make a follow-up appointment.\n\nLater that same day, he'd visited the office of L. Huntington Parker. The contrast could not have been more striking if it was intentional. The first difference was that Hunt was a tall man, lanky without being gangly. Where Ms. Cheung barely made five feet, he was probably 6'4\" or 6'5\". The next thing Jeremy noted was that, while he was clearly pushing seventy years or more, there was still a spark in his eyes to match his rather unkempt appearance. Hunt was probably a few days past his last shave, and more than a few days past his last haircut. He had sandy blonde hair that had streaks of gray in it, but he wore it longer than would be considered \"professional\" for sure. He wore faded blue jeans with a pair of low-top hikers; Jeremy had a pair just like them in his closet at home. His maroon, long-sleeved corduroy shirt was worn with the sleeves rolled and the buttons undone, revealing a faded black concert shirt for a band Jeremy had never heard of.\n\n\"You must be Jeremy,\" he said, extending his hand.\n\nJeremy shook his hand. \"That's me, Mr. Parker.\" His hand swallowed Jeremy's, and it reminded the younger man of Ava's father. That similarity, and the man's obvious warmth, immediately drew Jeremy in and made him feel comfortable.\n\nThe older man chuckled and said, \"Please, call me Hunt. Everyone does.\" Then he guided Jeremy to his office. Unlike the clean, almost sterile environment that Ms. Cheung counseled in, Hunt's office was arranged almost like a hotel suite. Entering the room, Jeremy was greeted with a pair of overstuffed couches and a recliner surrounding a low, oblong shaped coffee table in cherry wood finish. The floor in the office was covered in wide hardwood planks, but the seating area had a large Turkish area rug in rich blues, reds, and yellows. If the entire office was a rectangle, the seating area occupied the foot of an L shape formed by the walls creating a bathroom. Much of the long part of the L was occupied by Hunt's private office, separated from the seating area by white French doors. Through the doors, Jeremy was amused to see that it was a study in organized chaos. Heavy bookcases covered most of the walls that weren't occupied by his desk and associated cabinets. Stacks of papers and books covered most of the horizonal surfaces in the room.\n\nHunt saw where he was looking and apologetically said, \"I've never quite cottoned to good housekeeping. I hire good people to clean out here, but my office is off limits. There, I'm on my own. Coffee?\" He indicated a single-serve brewer on a sideboard. When Jeremy said that he did, Hunt said, \"Help yourself. Mugs are in the left-hand cabinet below. If you need cream or sugar, they're in the drawer, along with spoons.\"\n\nSeeing the look of surprise on Jeremy's face, he laughed and said, \"I'm not here to serve you, Jeremy. I'm here to help you.\" Somehow, that actually made Jeremy like him even more.\n\nAfter they'd each gotten some coffee, Hunt said they should take a seat and get started. \"How about you describe what you're going through?\" he suggested. Jeremy told him about the crash that had claimed the lives of his wife and son, and how he'd been struggling to deal with feelings of anger and sadness, loneliness, and even guilt, for the past year. He mentioned how he'd unknowingly withdrawn from his coworkers, and the other problems that had begun to creep up in his work, culminating in his being ordered to seek therapy.\n\nThroughout his explanation, Hunt sipped his coffee and listened attentively, but he didn't write anything down or ask any clarifying questions. Jeremy was surprised by this and asked him about it.\n\nHunt took a sip of his coffee, and then said, \"Let me tell you a little about how I work, Jeremy. I've been working in grief counseling for a long time. I've worked a lot with first responders, police, and military personnel. What I've found over time is that these are people who are used to making decisions, being in control of themselves and their emotions. They don't like coming to therapy, and they don't like giving up that control. That feels like weakness to them. If I'm taking a bunch of notes and asking a bunch of questions, that takes that control away and makes them feel like I'm not really listening. So, I make it a point to hold off on too many questions until we've had a chance to get to know each other and establish a relationship of trust. Then I will ask you some questions to help guide you along. Does that make sense?\"\n\n\"Sure.\"\n\n\"The other thing you need to know,\" said Hunt, \"is that these sessions are recorded, video and audio. After our session, I'll review the footage and make notes about my observations and see if I can determine the best approach for us to take to get you feeling better. Are you okay with that? I'm the only one who sees them.\"\n\nJeremy thought about it for a second. \"I don't see any reason that would be a problem.\"\n\nHunt cleared his throat and leaned forward. \"Good,\" he said. \"Now, after listening to you, I'd like to give you some observations and make a suggestion or two. First, I want you to understand that all of the emotions you're feeling are valid, normal human responses to loss. Second, while it might be useful for you to talk with me, I think you'll find that it's more important that you talk with someone than it is to talk specifically with me. From what I'm hearing, you're having trouble dealing with the emotions surrounding the loss, not because you had any part to play in. If that's the case,\" he said, looking to Jeremy for confirmation, \"then it might be useful for you to meet in a group setting with others who are going through what you're going through. Have you thought about group therapy?\"\n\nWhen Jeremy shook his head, he continued, \"I facilitate a group on Tuesday evenings in our larger space down the hall. Meetings begin at 6:30, and last until people are ready to leave. My first suggestion is for you to come and observe a session, participate if you want to, and then we can get together and talk about whether you think that's the right approach for you. Does that seem like something you'd be interested in?\"\n\n\"I've never been in this situation before,\" said Jeremy, \"so I'm not sure what I really need. But I want to feel better. I'd already concluded that I needed to find someone to talk to; that realization came when I went on a date last Friday.\"\n\nHunt was a little surprised to hear that. \"You're dating?\"\n\nConfused, Jeremy asked, \"Is that not a good thing?\"\n\n\"No, no, no. Don't misunderstand me. It's a very good thing, as long as you take things slow and are open and honest with your partner. I'm just surprised, because I usually have to push people to get out of their comfort zone and give dating a shot.\"\n\n\"Well, you probably would have had to do that with me, too,\" said Jeremy, \"if my friend and CO hadn't told me that I needed to find someone to talk to. He made a compelling argument, and I took him up on it. It was quite a revelation when I realized how lonely I'd been feeling. So, to answer your question, I think I will come next Tuesday, if that's alright.\"\n\nHunt was very pleased. \"Of course, it's alright, Jeremy. I think maybe you're closer to a better 'new normal' than you think.\"\n\nThey had ended the session then, and Jeremy felt better just from having a plan of attack for his problems.\n\n*****\n\n\"This isn't going to work, is it?\" she asked as they rolled to a stop in front of her townhouse.\n\nJeremy studied her face before responding. He probably should have felt disappointment, but he didn't. Dinner with Erin had been nice, and shooting pool afterwards was a good time as well. As the evening had gone on, though, he'd realized that he wasn't feeling a romantic connection. If he was honest, there were a few things about her that were turning him off, actually.\n\nFirst, while it was nice that she wasn't afraid to speak her mind, she was brash and brazen. He wasn't looking for someone who was a demure wallflower either, but she took it too far, too often. Second, she was pretty enough, but he didn't really find her sexy. And if there was one thing he'd learned from Ava, it was that he could attract a sexy woman if he wanted to. So, he didn't see a reason to complicate his life by hooking up with Erin.\n\nHe shook his head. \"No, I don't think it is.\" He paused and said, \"For what it's worth, I'm sorry.\"\n\n\"Don't be,\" she said. \"I'm flattered that you'd ask me out, but I think we're different people in different places.\"\n\nJeremy agreed. \"You're right. I'm just glad that we figured it out pretty early.\" They sat there in silence for a few minutes, which was uncharacteristic of Erin. He looked over at her and could see that she had something on her mind.\n\n\"Erin? You okay? We still good?\"\n\nShe looked over at him and smiled. \"Hm? Oh, yeah, we're cool. I was just thinking about something.\"\n\n\"What's on your mind?\"\n\nShe undid her seat belt and turned towards him, dragging a knee up on the seat. \"Okay, this is going to sound a little odd. But hear me out, okay?\" He nodded, and she said, \"We may be incompatible romantically, but that doesn't mean that I don't care about you at all. Now, I know you're trying to sort out your feelings about your wife, and you're probably leery of anything serious right now. But, you're also a man, and it's been more than a year, right?\" Again, he nodded, now curious to see where she was going. \"Look, I don't know you very well, Jeremy. But you don't strike me as someone who is casual about intimacy. That's going to make you lean towards making a commitment before you're ready, in my opinion.\"\n\nHe gave it some thought, and he had to admit that she might be onto something. After all, even with their history, his body normally wouldn't have reacted quite so quickly to Monica if he wasn't in the midst of a drought. \"Well, I can't deny that I've been more 'interested' lately than I can remember feeling since Ava died. But you're right, I'm not normally a one-night stand kind of guy either. Still, I can't imagine I'd get so desperate that I'd start a relationship with someone just to get laid.\"\n\nErin shrugged. \"Maybe you wouldn't. But maybe you should just try to live life for a while without the pressure that comes with a relationship. I think you need to have some good old-fashioned, no-strings attached casual sex.\"\n\n\"It's funny. You're the second person who's suggested that to me in the last week. Well,\" he replied, \"even if I admit that you're making some sense, I'm not sure what my options really are. We've both agreed that we're not good for each other, and I'm pretty sure I'm not interested in hitting the ladies' night meat markets.\"\n\nShe grinned and said, \"I have a suggestion, but you'd have to have an open mind. Let's go in and have a beer and talk about it.\"\n\nHe looked at her skeptically. \"Why am I suddenly terrified about what's coming out of your mouth next?\" But he dutifully followed her into her townhome.\n\nOnce they got settled, she asked, \"Do you remember that first date when we talked about the unusual characters I've come across? Well, I kind of fell in with a group of people with a rather non-traditional approach to sexuality when I was in college. I tried a few things that we're not going to talk about, but I heard about quite a bit of stuff. And it always fascinated me. Eventually, I figured out that while I wouldn't have the courage to try most of it, I like to watch.\"\n\nJeremy's eyes raised at that, but when she held up her hand, he resolved to hold his tongue. It was obvious from his expression that he had a question he was dying to ask. After a moment's thought, she realized it was the obvious one. \"You're wondering where you fit into this, aren't you?\"\n\nHe just nodded his head.\n\nErin said, \"I didn't completely leave all that behind in the past. I just have to be more discrete about it. But there's all sorts of groups for just about anyone's tastes out there. I'm wondering if we might be able to arrange things to both our benefits. Let me ask you a question: Would you feel better about anonymous sex if you were fulfilling someone's fantasy?\"\n\n\"I suppose it would depend on what the fantasy would be,\" he said.\n\n\"Well,\" she began, \"did you know that there are a surprising number of women out there who fantasize about sex with a stranger? Not a rape fantasy, although there's plenty of those too. We're talking about women who fantasize about meeting some random guy and simply giving into letting him have his way with her. After it's over, they just go their separate ways. No names, no contact info...nothing. The fantasy is that it's such a great experience that she can't help cherishing the memory.\"\n\nJeremy had to admit that the idea appealed to him at a base level. He'd been willing to spend time with Ava's friends without making a commitment. Was this really that different? The biggest question would be protecting himself from disease. \"It's interesting,\" he said, \"but how do you make the fantasy a reality? I mean, even if it were to happen randomly, you're still taking a chance of catching something. And it's not like women are out there advertising their interest in something like that anyway.\"",
        "Erin shook her head and said, \"Oh, you poor, sheltered, deluded man. Of course, there are women out there advertising it.\" She reached over and pulled out an 'alternative' weekly newspaper. Flipping to the back pages, she showed him all the personal listings of different people wanting all sorts of things. \"See? There's probably someone looking for every taste you might imagine. You just have to know where to look.\"\n\n\"I don't know,\" Jeremy said, shaking his head. \"I almost feel more nervous trying to hook up with someone who's confident enough to post an ad like that. It's a little scary.\"\n\nEven Erin had to chuckle at that. \"You're right, there. All kinds to make up the world and all that. But you don't need to go that route. I happen to know someone who I think would be perfect for you. And the best part is, she likes an audience.\"\n\nThe sparkle in her eye was infectious, and Jeremy sheepishly gave in. \"I know where you work, Perkins. If this goes sideways, I'll find you and make you pay.\" He took a calming breath and said, \"I can't believe I'm even considering this, but...tell me more.\"\n\nAnd she did.\n\nBy the time Jeremy made his way home a little later, they'd made plans to meet at a club attached to a decent hotel quite a distance from anyplace he thought he might encounter a colleague on Saturday evening, just a couple of days away. Erin had assured him that the woman she had in mind was a friend from college. She was clean, attractive, and a professional career woman who just happened to have a fantasy about anonymous sex but had never had the courage to follow through with her fantasy. Promising that Jeremy would be just what her friend wanted, she advised him to go ahead and get a room reserved.\n\nArriving at home afterwards, Jeremy leaned against the back of the door he'd just closed. Baxter noted his arrival by raising his head to look in Jeremy's direction, but quickly laid his head back down as he watched his owner. Jeremy took a few steps over to take a seat next to his canine companion, and then more or less collapsed on the couch. Baxter took the opportunity to lay his head on Jeremy's leg.\n\nJeremy absent-mindedly stroked the dog's head and scratched behind his ears, under his chin, and occasionally down his back. After a few minutes of this, Jeremy looked at his buddy and asked, \"What the hell am I doing, Bax? Am I really going to sleep with a stranger?\"\n\nBaxter rolled over onto his back, wedged alongside Jeremy's thigh and exposing his belly for some rubs. Jeremy chuckled as he obliged the dog. \"Are you saying, 'if it feels good, do it?'\" he asked. Bax thought it was self-evident and didn't make any comment. \"Jeez, Bax. I know you're a hound and everything, but I didn't know you were such a libertine.\" He continued rubbing his dog's belly as he mulled the matter over. What would Ava think? he asked himself. She'd probably be giving me a hard time about even hesitating. Maybe it's not such a bad thing to have a fling with no strings attached. \n\nBy the time he finished convincing himself that he could follow through with the plan he and Erin had come up with, Bax was snoring lightly. Jeremy looked at him and said, \"Good talk, Bax. You made some excellent points tonight. I'm beat, so I'll see you in the morning.\"\n\n*****\n\n\"Hello, Monica. I was beginning to wonder if you'd ever call.\"\n\n\"I'm sorry, Jeremy. Things have been kind of hectic here the last week or so, and Cat and Nils have been tied up in meetings quite a bit of the time. But I was finally able to get in and see them this morning, and they're very excited to meet you. You are, quote, 'Exactly what we're looking for,' end quote.\"\n\nHearing this was an unexpected relief to Jeremy. Even though he still had some things to wrap up with the Navy before he could move on, there was still a nervous excitement that had been growing since his lunch with Monica. As the interval grew, though, he began to wonder if he was a marketable as he thought.\n\n\"That's great,\" he said. \"So, what happens next?\"\n\nMonica said, \"Unfortunately, Nils is taking a long weekend and won't be in the office until Wednesday. Cat can't meet until Tuesday herself. And I know you've got stuff to do with the Navy still. I was thinking we could have a dinner meeting Wednesday evening to meet and discuss the position. Will that work for you?\"\n\nJeremy said, \"My social schedule is fairly open these days. I think I can squeeze in a business meeting.\"\n\n\"I'm sorry, Jeremy. I didn't think...\" Monica began.\n\nHe cut her off. \"No, I'm sorry. That came out harsher than I meant it. I just meant...well, I'm grateful for the opportunity and would very much like to have dinner with you and your colleagues.\"\n\n\"Even so,\" she said, \"I'm sorry.\" He could hear her draw a breath as she shifted direction. \"I'll take care of the reservations and let you know when and where. So, I'll see you Wednesday night?\"\n\n\"I'm looking forward to it,\" he replied.\n\n*****\n\nJeremy had given himself quite a pep talk on the way to the club, so by the time he walked in, his nervousness had largely dissipated. After all, if things didn't work out tonight, there'd be other nights, right? If pressed, he might even admit to feeling slightly excited about the possibilities of the unknown.\n\nRaffinatezza was an art deco themed cocktail lounge that featured live jazz in an elegant atmosphere. The d\u00e9cor featured heavy wood and brass, with doses of red velvet throughout. As he scanned the room. Jeremy was especially impressed by the bar area. The bar top was lit from beneath, the glow emanating from the milk glass to lend just enough light to see in the otherwise subdued lighting. The various bottles of liquor were backlit by a glowing white panel. The bar staff were well-dressed, wearing burgundy jackets over white dress shirts and black bow-ties. Ordinarily more of a beer drinker, Jeremy nevertheless stepped up to the barkeeper and ordered a Blanton's bourbon old-fashioned. As he waited for his drink, Jeremy looked to see if he find Erin and his date(?).\n\nAfter a moment, he spotted the familiar face of his co-conspirator in this endeavor, sitting in one of the half-booths ringing the dance floor. Sipping the cocktail, even a nominal beer-drinker like him could appreciate the fine bourbon. He tipped the barkeeper and began to work his way slowly around the perimeter of the room, so he could get a look at the woman sitting with Erin. Eventually he found a spot across the dance floor from the pair where he could observe them from a safe distance. Neither Erin nor her friend had spotted him, but he could see both were checking around the room occasionally, as if waiting for something.\n\nJeremy watched through a few songs as several men attempted their luck with the women. Erin danced with one guy, but her friend stayed put. She politely declined the offers of all who approached her. Jeremy was curious about this, since he assumed that she didn't know what the man she was supposed to be meeting looked like. She obviously wasn't just in this for a random hookup; she needed some kind of spark to take the next step. Suddenly, Jeremy was a little more nervous about his chances. Still, he had to admit that from he could see, she was worth any effort he could make.\n\nErin was wearing a vintage, sleeveless Oriental cocktail dress in a shade of green that set off her hair and complexion nicely. She'd put her hair up in a loose bun with a pair of black, lacquered chopsticks pinning it. Her strappy black heels accentuated her long, slender lines. And, in Jeremy's opinion, she had nothing on her companion.\n\nBetween songs, as Erin returned from dancing with some guy, the unknown woman excused herself and headed for the ladies' room. Jeremy was absolutely blown away by what he saw. A few inches shorter than her friend, she was significantly curvier than Erin. More in line with his own tastes, she had a Mediterranean complexion, with high cheekbones and light olive skin tone. Her dark auburn-brown hair was swept into a Victorian updo, which accentuated the loose waves and curls, and exposed the graceful sweep of her neck. Before she disappeared from view, Jeremy was able to appreciate the asymmetrical, sleeveless black dress she wore. The backless dress exposed part of a tattoo on the back of her left shoulder, but he was too far away to see what it was.\n\nWhile she was gone, Jeremy considered his approach. She was definitely looking for something, and it wasn't anything that the other guys had given her so far. They'd seemed like good-looking guys, well-dressed, but she hadn't given them the time of day. He puzzled over it for a few more minutes, trying to come up with something that would catch her attention. Then a thought hit him that almost made him laugh with its simplicity. Surely that wasn't really it, was it? But the longer he thought about it, the more it made sense. Lacking other ideas, he decided to give it a shot.\n\nHis opening came just after she returned from the rest room. As Jeremy watched, she sat down and got into a serious discussion with Erin. As they talked, Erin was looking around the room again as if looking for someone. As she scanned, she kept her hand on her friend's arm, like she was holding her in place. Jeremy decided it was time to make his approach.\n\nHe walked circled around to make his approach from behind the strange woman, but Erin's eyes widened as she spied him over her friend's shoulder. He could see she dipped her head and said something to the woman. As confidently as he could, he slid into a vacant spot next to Erin and across from the mystery woman. Two pairs of eyes focused on his. Erin's were twinkling in merriment, while the other's eyes showed a mixture of interest and surprise. Jeremy smiled and said, \"Seven seconds.\"\n\nWhatever cheesy line she'd been expecting, that wasn't it. Her eyes screwed up in confusion. \"Excuse me?\"\n\nHe took calmly took a sip of his drink and said, \"Research says that most people make a judgement about someone in only seven seconds. If I've only got that much time to impress you, I don't think it's fair.\"\n\nHer eyes were showing a little more interest now. She smiled and said, \"Why don't you think it's fair?\"\n\nHe locked eyes with her and said, \"Because I've been watching you for the better of an hour now. I couldn't take my eyes off of you. You didn't have to make a move and you drew me in. I was impressed before I walked over here. I'm more impressed now. The question is, was it a good seven seconds or not?\"\n\nFor just a moment, he thought she was gone while she contemplated her response. Finally, she said, \"Why don't you buy us some drinks and we'll see if we can get you an extension?\"\n\nJeremy nodded and waved for the waitress. He turned back to the ladies and said, \"I'm Jeremy.\"\n\nAfter introducing himself, the ladies exchanged a quick look. Erin nodded slightly and said, \"I'm Erin. And this is my friend, Catherine.\"\n\nCatherine said, \"It's a pleasure to meet you, Jeremy. That was an interesting approach.\"\n\n\"Pardon the clich\u00e9, but the pleasure's all mine,\" he said. \"And as far as the approach goes, I just didn't want to add to the wreckage of guys piling up around here.\" When he saw her look at him in confusion, he chided her, saying, \"Come on. You and I both know you're an astonishingly beautiful woman. I watched you shoot down at least three guys before I came over here. I didn't want to be next.\"\n\nWhen he and Erin had discussed what might happen this evening, they'd agreed that he was to ignore whatever romantic elements of their relationship existed in order to naturally seduce her friend. With that in mind, Jeremy took a chance on the approach that he'd considered earlier. Clearing his throat, he took Catherine's hand and said, \"Here's the thing. I watched those guys hitting on you, and the truth is, I was curious. You're gorgeous, and you probably could have had a decent time with any of them. But you turned them all down. That got me thinking that you're looking for something else right now. So, I'm not going to make the safe play right now.\n\n\"Catherine, I didn't come over here to pour a bunch of words in your ear to tell you how beautiful you are. I'd rather just show you. I have a room in the hotel, and if you're interested, I would love to spend the rest of the night demonstrating every way that I know to make you feel good. No pressure, no strings. Just one night.\"\n\nHe sat back to gauge her reaction. He was pleased to see that there was a little flush to her cheeks, a little sparkle in her eyes. He stood up and slid his hand into his pocket, withdrawing a keycard for his room. He slid the card gently across the table to rest in front of Catherine. Leaning down, he kissed Catherine on the cheek and softly said in her ear, \"I can't wait to taste you.\" Straightening up, he said aloud, \"Ladies.\" Then he turned and walked away without a backwards glance. As he did so, he couldn't help but feel nervous, wondering if he'd handled things right. Either way, the ball was in her court now.\n\nIt was nearly 45 minutes after he'd returned to his room when he heard a soft knock on the door before the electronic lock disengaged. He'd been relaxing in the living area of his suite, watching a little mindless television to try and calm his nerves as he waited to see what happened. He'd planned ahead, bringing a bottle of wine along, which was opened and ready. He still had on his slacks and silk dress shirt, but his coat and shoes were gone. He was hoping that he conveyed a relaxed, confident countenance. Hearing the voices of the ladies softly whispering as they made their way through the door, he stood to greet them.\n\nOnce again, seeing Catherine took his breath away. He was entranced by her eyes, which were an unusually light green, given her complexion. As she stood before him now, he realized that she was every bit as busty as he'd thought, maybe even more so. The straps of her dress made a spider web over her cleavage, leaving a large triangle over the tops of her breasts, centered on the crease where the two met. His mouth watered as he contemplated licking and sucking his way down her body. After a moment, he realized that he'd been staring.\n\nHe tried to cover, saying, \"My god, you're even more gorgeous than I thought.\" Then he took her hand and led her to the couch, with Erin following behind. Holding the bottle up for their approval, he said, \"Wine?\" They nodded, and he poured each a glass before taking a seat beside Catherine. Erin had seated herself in the adjacent chair.\n\nCatherine sipped hers and said, \"Oh, that's nice. You have good taste in wine.\"\n\n\"Thank you,\" he said.\n\nThen she cleared her throat and said, \"Were you serious, in the club? I don't...I'm not usually...this is...\"\n\nHe smiled, pleased that she was at least a little nervous. \"Catherine? Shhh. It's okay. To answer your question, I was absolutely serious. I don't lie, but even if I did, it would never be about something like that to a beautiful woman.\" He slid a little closer to her and lowered his voice, softly saying, \"And even if you were 'like that,' I wouldn't care. All that matters is that you're here with me right now, nothing else.\"\n\nShe blushed slightly at his words. She responded just as softly, asking, \"Is it okay if my friend is here? She kind of wants to watch us.\" She searched his eyes for rejection.\n\nHe smiled, \"It's fine with me, if you're okay with it. I've had an audience before.\" Catherine's eyes sparkled a little when he said that, and he winked, saying, \"I'll try and put on a good show.\"\n\nCatherine took another sip of her wine before setting her cup to the side. She said, \"I'm going to stand over by the window. When you're ready, come unwrap me.\"\n\nJeremy watched her walk away. She took an almost aloof posture adjacent to the window, staring out at the city lights in the distance. He stood to follow her. As he passed Erin, she grabbed his wrist and pulled him gently down to whisper in his ear, \"You're in charge tonight. Make sure she knows it.\" She winked as he released his arm. I wouldn't have it any other way, he thought.\n\nStepping up behind Catherine, he was surprised to feel her tremble slightly against him. He whispered in her ear, \"We don't have to do anything. It's okay. But if you will trust me, I promise I'll make you feel good.\" Catherine didn't say anything, but simply nodded.\n\nHe placed his hands on her shoulders, pulling her body into his. He nuzzled through a few loose locks of hair and caught the scent of her perfume along the side of her neck. Her trembling quickened slightly when he began to place small kisses on her neck, working up to the space just behind her earlobe. With just the tip of his tongue, he flicked the lobe a few times before sucking it gently into this mouth, resulting in a soft groan of appreciation.\n\nAs he continued to softly kiss her neck and shoulders, he began to gently knead her trapezius and shoulder muscles. Under his tender handling, he could feel that she was beginning to relax. He continued at a measured pace, covering the accessible area with his lips and occasionally flicking his tongue out to taste her skin. Meanwhile, his hands roamed along her sides, across her stomach, and eventually reaching up to cup and squeeze her breasts. Under the lightweight dress, he could feel that she was wearing a bustier. Even so, he could feel her hard nubs begging for more attention. Once he'd located her nipples, he squeezed the area between thumb and forefingers; Catherine was certainly appreciative, if her sharply drawn breath was indicative.\n\nAfter a few moments of massaging her tits, Jeremy reached up and untied the straps of her dress, gently tugging the bodice of her dress down to her waist. As he did so, he exposed the lovely black satin and lace bustier that hugged her form and barely contained her breasts. Certainly more than a handful, Jeremy couldn't wait to bare them completely.\n\nJeremy slowly slid the thin straps of her lingerie from her shoulders, again teasing the newly exposed skin with lips and tongue. Pausing a moment to take in the view from behind, he could now see in the soft light that her tattoo was a steampunk version of Harley Quinn, complete with corset and top hat. It was tantalizing to him on a number of levels. No girly flowers or colorful island scenes; this was a woman who was unique, and sexy, and clearly multi-faceted.\n\nCatherine seemed to be enjoying everything that Jeremy was doing. She also seemed to be content to let him move at his pace. Her main contribution thus far had been when she slowly began to grind her ass against his cock.\n\nHe was shocked at how hard he was, given that they'd really just begun. Still, the feel of her ass was driving him wild. Firmly, but without breaking contact, he forced her closer to the window, pressing her hips into the ledge. The action caused her to press her palms to the glass, and he heard her softly say, \"Yes,\" thought it wasn't clear if it was intended for his ears or not. Reaching around her body, Jeremy began to unfasten the hooks of her bustier beginning at the top. He took his time, occasionally stopping to run his hands up her back, even into her hair. He also grabbed her hips and ground himself against her, demonstrating the effect she was having on him.\n\nCatherine was still not especially vocal, but she did issue the occasional soft whimper or moan when he did something she liked or hit an especially sensitive spot.\n\nIt had been more than a year since Jeremy lost Ava, and it had been the longest he'd gone without sex since before they'd been married. The combination of his dry spell, the intoxicating, spicy scent of her perfume, and the feel of her body against his was rapidly testing the limits of his self-control.\n\nOpening the final fastener, Jeremy slid his left hand up to cup her right breast. At the same time, he reached with his right hand to gently grasp her neck and chin. Squeezing her tit, he turned her face towards his. As their lips met, the passion that had building between them exploded. Catherine held tightly to the forearm he wrapped around her body as she began to probe his mouth with her tongue, yielding when he returned the gesture. Their mouths and lips moved in rhythm as they each sought to express their desire to the other. Jeremy continued to squeeze and knead her tit, teasing the nipple until it hardened to a solid knot of tissue.",
        "He was dying to see more of her body. He whispered softly into her ear, \"Hold still.\" Then he knelt to remove her shoes, pulling first one and then the other from her feet. As he stood, he dragged his hands up the outsides of her thighs, gathering the hem of her skirt into his hands as he went. Standing behind her once again, he kissed his way down the column of her spine, taking her dress down simultaneously. He helped her to step out of the pool of fabric and then stood behind her once more. He wrapped his arms around her, luxuriating in the feel of her body against his. Everything about her was intoxicating his senses. He hadn't been this turned on in a long time. He grasped her shoulders and gently turned her to face him. Looking into her eyes, he slid the bustier from her body, leaving her clad only in panties, garter and stockings. Stepping back to get a better look, Jeremy found the woman breathtaking. Her tits were round, a little smaller than Ava's, but not much. Just as he'd felt, her nipples were on the large side, fat but not long, and sat atop cinnamon areolae easily a couple of inches in diameter. She had a flat stomach and athletic body, but she was also soft in a way that always spoke \"woman\" to Jeremy. Her hips swelled in a lovely, graceful curve, and Jeremy rested his hands there as he stepped towards her.\n\nCatherine was lost in the things that Jeremy was doing to her body. When Erin had contacted her with an idea to fulfill their fantasies, Catherine had been skeptical. But, she'd been willing to put her trust in her friend's opinion. When Erin told her the man was gorgeous, Catherine had assumed she was overstating things to entice her into the game. Then Jeremy walked up to them in the club, and it had been all she could do not to stare at him in awe. Knowing what was on offer before her, her panties had begun to moisten. Now that he was here, her fantasy was becoming reality, and it was better than she'd ever dreamed. The press of his hard body against hers, his patient attention to her erogenous zones, the gentle way that he controlled her...it was all so good. But there was also a limit to her own patience.\n\nLooking into her eyes, Jeremy said, \"You're stunning, Catherine. Absolutely breathtaking.\" Catherine would normally have blushed in embarrassment at hearing such compliments. She thought she was pretty, but she wouldn't have gone so far as \"stunning.\" When Jeremy said it, though, seeing the look in his eyes, she took it to heart and it simply stoked the fire she already had burning within her. When he reached up with both hands to cup her cheeks as he leaned in and drew her to his lips, she trembled anew in anticipation, and moaned into his mouth in appreciation. There was a renewed urgency to their kisses, but Catherine wanted more. Breathlessly, between kisses, she said, \"Please...I need you to touch me.\"\n\nShe grasped his right hand and dragged it down to her crotch. She wanted Jeremy to know the effect he had on her. The satin bikini panties that covered her crotch barely had enough fabric to cover her pubic mound. What there was, however, was soaked. As she pressed his fingers to her covered slit, he took pleasure in the damp warmth they encountered. Taking his cue from her, he began to press two fingers between her lips, massaging in a circular pattern. It was exactly what Catherine wanted, and she moaned into his mouth. As her hips began to move in rhythm with his fingers, he moved his other arm around her shoulders as he shifted to the side, clearing space for his hand to slip inside her panties. He was pleased to find that she was completely bare, and as he slipped his middle finger between her lips, her lubrication allowed him to penetrate her easily.\n\nHe began slowly pumping the finger into her, cupping her mound and maintaining pressure on her clit. He could tell she was getting close because her movements were becoming more frantic, and her breathing was getting heavier. \"Please,\" she said, \"don't stop...another finger please.\" When he obliged, she hissed, \"Yesss. Oh god, please don't stop.\"\n\nDuring his time with Ava, and especially when they shared their bed with Taylor, Jeremy had found that he had a dominant streak. More than that, he'd developed a sense of when his partner needed him to be forceful. His wife and their lover had praised him for the way he'd learned to control them in such a loving way. His sense was that Catherine wanted more from him, and as he thought about it, Erin's words came back to him. You're in charge tonight. Make sure she knows it.\n\nHe stopped his movement and withdrew his finger from her pussy. Catherine's eyes had been closed as she rapidly approached her orgasm. The sudden vacancy shocked her. Disoriented, she groaned and gasped, \"No...what're you...so close...\"\n\nJeremy gripped the hair at the back of her head and said, \"Catherine. Look at me.\" When she focused her eyes on his, he asked, \"Do you trust me?\" She was having a hard time focusing on him with the fire between her legs, especially since his firm grip was sending new tingles to her pussy. She swallowed and said, \"Yes, Sir.\"\n\nHer answer surprised him, but also confirmed his suspicion. He knew she could read his desire in his gaze, and he stared into her eyes as he slowly took a firm grasp on her panties. She understood implicitly what was about to happen, and her excitement almost pushed her over the edge. With a quick jerk, Jeremy tore the panties from her body, and Catherine trembled on the verge of an orgasm. He never stopped looking into her eyes as he positioned his middle and ring fingers at her opening. He said to her, \"Tonight, you belong to me. I will make your body sing to the tune I play. Let me worship your body the way that it was meant to be worshipped. Let me be the man who fulfills your fantasies.\" Every word that Jeremy said went from Catherine's ears to her pussy, and it was all she could do not to fall to her knees before him. For the first time, she began to wonder if she could really let him go after tonight.\n\nThe fingers that worked their way slowly into her pussy dragged her attention back to her lover. He maintained his grip on her hair, and as he picked up the tempo of plunging his fingers in and out of her, he brought his forehead to hers, never breaking eye contact. He began to whisper to her, \"Cum for me, Catherine. Give yourself to me. I want you to cum. I know you feel good. Be my good girl and cum for me.\" As he said these words, her eyes began to take on a panicked, fearful look, but she didn't look away. She wanted to be his good girl, she nodded to everything he was saying. Her body was on fire and her knees could barely hold her up. Jeremy could feel her pussy tightening against his fingers and knew she was desperate for release.\n\nJust as she reached the pinnacle, Jeremy released her hair and grabbed her around the shoulders. He began cycling his fingers as quickly as he could, concentrating on her g-spot. \"Cum for me, Catherine,\" he commanded. And it was as if the dam burst. Catherine had never squirted before, but the long buildup, combined with Jeremy's command of her body, resulted in a forceful spray from her pussy. She could no longer control her legs and desperately wrapped her arms around his neck, holding on for dear life. Her orgasm seemed to last forever, and the intensity seemed to grow. As it did, so did the volume of her wails.\n\n\"AaaaaaahhhhhAHHHHHHAHHHHhhh...\"\n\nIn concert with Catherine's wails, Jeremy heard from behind him, \"Oh fuck, oh fuck, oh fuck, uuuughnnnnnNNNNN...\" He'd completely forgotten that Erin was in the room, so focused he'd been on Catherine. He couldn't turn away from his lover completely, but he managed to twist enough to be able to see Erin. She had positioned herself at the far end of the couch so that she could watch the two strangers enjoy each other. At some point, she'd removed her panties and hiked her dress up around her hips. Now, she had one foot on the back of the couch, and the other on the floor. Jeremy could see that she had three fingers buried in her cunt, while she was rubbing his clit with fingers from the other hand. Her eyes were firmly fixed on Jeremy and Catherine.\n\nCatherine's orgasm had tailed off, and Jeremy slowly removed his fingers from her pussy, trying not to jostle her overstimulated center. The movement of his fingers was met with tiny whimpers from Catherine, whose face was still buried in the crook of his neck. As his fingers left her opening, she groaned.\n\nSoftly, barely more than a whisper, she said, \"I've never felt anything like that. You were...\" She trailed off, shaking her head. She gulped a breath and said, \"Can you please take me to the bed? I don't know if I can stand up much longer. My legs are kind of shaky.\"\n\nJeremy helped her to the nearest of the two beds in the room. As he went, he could see that Erin had collapsed in a daze but was still watching the two of them. Her legs were splayed, and he could see a narrow landing strip of red hair leading to her swollen, red pussy. As he lay Catherine down, he went to sit up, but she held onto his neck tightly. In a panicked whisper, she said, \"Please don't go, Sir. Will you hold me? Please?\"\n\nHe recognized the emotional bond that had formed, but he was a little surprised by it nonetheless. It wasn't intentional. He had no intention of leaving her anytime soon, however, so he settled back against the headboard and pulled her to him. Catherine molded her body against his, desiring as much contact as she could get.\n\nAfter several minutes, she timidly said, \"May I please undress you, Sir?\"\n\nJeremy looked down and realized that he was still fully clothed. Silently, he reflected how unusual it was that he hadn't disrobed more fully earlier. His failure to do so had yielded an opportunity for dominance that Catherine had seized.\n\n\"Please undress me, Catherine. You may not touch my cock until I say so.\" She nodded her understanding, and then began to unbutton his shirt. Each button that she unfastened bared another patch of skin that she gently kissed. Eventually, she managed to loosen the shirt enough to pull it over his head. She took her time and neatly draped his shirt over the back of the chair at the room's desk. That surprised Jeremy, but she was obviously more into the submissive role than he'd suspected.\n\nWhen Catherine returned, she took a moment to appreciate the sculpted chest and abs of her lover. After the events that surrounded his and Taylor's abduction, he'd become a regular at the gym. He took a few self-defense classes to learn some techniques for quickly ending a street confrontation, and then backed up that knowledge by forging a new, stronger body. For a time after Ava's death, he'd lost interest in eating but poured himself into the gym. The result was that, while he had lost a little muscle tone, his body fat was in the single digits and he looked better than he ever had. Shaking herself from her reverie, she slowly reached for his belt. He helped her unbuckle it, along with the waist fasteners, and assisted the removal of his pants by lifting his hips off the bed. She repeated her action of carefully draping his pants across the chair. Returning once again, she made short work of his socks, which she playfully tossed away. From the foot of the bed, she began kissing his feet, and legs, working her way up towards the bulge he was sporting. Jeremy had been leaking pre-cum for a while, so his boxer briefs had a sizable wet spot. Catherine licked her lips as she reached to the waistband of his underwear. Her eyes searched his for permission, and when he nodded slightly, she gently drew his underwear down his legs, pausing to carefully lift the band over his head.\n\nAs his cock came into view, Catherine's eyes sparkled. From the couch came a comment of appreciation, \"Nice,\" spoken softly enough that Jeremy wasn't sure Erin meant it for his ears.\n\nNow that his underwear were out of the way, Catherine could see Jeremy's cock, and it took tremendous self-control not to stuff it into her mouth. She could see a drop of shiny pre-cum gathered at his slit, which made her mouth water. She had never been a size queen, but she was captivated by his thickness. In her experience, longer guys actually kind of hurt unless they only used a part of their length; her pussy just wasn't deep enough to take a huge guy. But thicker guys, they stretched her in ways that kept her most sensitive areas tingling for hours. She could barely wait to get Jeremy inside her, but she wanted him to last for a while when he did. And, she wanted him to feel at least some of the pleasure that he'd given her earlier.\n\n\"Sir?\" she asked. \"May I?\" The naughtiness of bowing to his dominance was keeping her fires stoked.\n\nJeremy continued to play the role he thought she needed. \"You need to tell me exactly what you want, girl.\" Catherine shivered. There was something about the way he called her girl that made her tingle. It was different than if he'd called her something more demeaning, like slut or whore. It was a more endearing term. She liked it a lot.\n\nShe dropped her eyes coquettishly and said, \"I want to suck your beautiful cock until you cum and swallow what you give me, Sir.\"\n\nHer version of submission aligned so well with Jeremy's desire, it was a little uncanny. Jeremy didn't want to dominate a woman to prove to himself that he could. He wanted to dominate a woman because she wanted him to, and he felt like she would want him to if he proved that when she did, he would provide her with pleasure. Her request was such a perfect blend of submission and slutty, that if were possible, his cock grew even harder. Already, he felt like he'd been on the edge for a while, and his cock was as big and angry as he could recall.\n\nStill, he thought to tease her just a little bit. \"Are you sure that's what you want?\"\n\nCatherine's eyes were sparkling. He was pushing all her buttons masterfully. \"Yes, Sir. I can't imagine wanting anything more right now.\"\n\n\"Very well, girl. Show me what you want.\"\n\nGiven permission, Catherine suddenly felt she had something to prove. Kneeling between his feet, she leaned forward and nosed the underside of his sack, inhaling his scent. She'd never understood it, but there was a certain aroma that she instinctually interpreted as masculine, and that was exactly what she smelled now. With a light touch, she cupped his balls and began to bathe them with her tongue. She gently sucked one or the other into her mouth, caressing the tender orb with her tongue. This was the time when she felt most powerfully feminine. This beautiful, strong man trusted her with his most sensitive parts, and she submitted to provide him pleasure. It was empowering.\n\nAs she tongued his sack, she held the shaft of his cock lightly in her fingers. Cocks had always fascinated her, how they could be hard as iron, but still velvety smooth and soft and warm. She could see the thick tube on the underside of Jeremy's cock bulging, and she knew he wouldn't take long to shoot. Satisfied that his balls were clean, she began to slowly lick the sides of his cock from root to tip. She didn't look at his face as she did, relying on his body to tell her if she were doing a good job. When it came time to suck him, though, she stared into his eyes as she slid his meat into the heat and wetness of her mouth.\n\nJeremy thought it was one of the sexiest things he'd ever seen, which was saying something, since Ava had been a champion at pleasuring him orally. He groaned his appreciation, and Catherine smiled as best she could around his dick, reveling in the ability to give him pleasure. Her preference was to slide her tongue along the underside of his cock, while dragging her lips along his length with each stroke. She wasn't able to take all of him, but she took most of what remained above her fist as she gripped him at the base. His taste and smell were driving her wild, and she was breathing heavily through her nose as she picked up the pace. Each time she plunged her mouth over him, she groaned in appreciation. The piston action of his cock in her mouth, along with her hand jacking him from below, and the feel of tongue swirling over him, combined in a very short time to take Jeremy over the edge.\n\nHe grabbed a handful of her hair and helped her mouth up and down his cock for a few strokes. He gasped, \"I'm cumming,\" and then held her head in place as a torrent of his juices surged into her mouth. The experience was almost orgasmic for Catherine as well; she swallowed as quickly as she could, but some escaped her mouth. There was just so much. Once Jeremy stopped shooting and released her hair, she immediately began licking and sucking what she had spilled, eager to swallow every drop she could find. Finished, she slid up to lay against his body, one leg thrown over his, seeking complete contact.\n\nShe was slowly running her hand over his stomach and chest and placing small kisses above his nipple on the side nearest. \"Thank you,\" she said, a note of happiness evident in her voice.\n\n\"No,\" he said, leaning down to kiss her head. \"Thank you. You're incredible. I've missed that since...\" he caught himself before he began to reveal personal details. He didn't want to ruin the fantasy for Catherine. After all, that's the reason they were here, right? She wasn't looking for a relationship with him. There was a small degree of disappointment in his heart when he thought that.\n\nCatherine was very nearly to the point of abandoning the fantasy scenario. Jeremy was already the best lover she'd ever had, and they hadn't even had intercourse yet. Again, she began to wonder if she could really let him go in the morning. But she didn't want to pressure him, since they'd more or less come into this with the understanding that it would be a one-time thing. But she couldn't help her curiosity about what he'd almost revealed.\n\nThe two lovers rested there for a few minutes. Jeremy was surprised to glance over and see that Erin had dozed off. Looking at the clock, he was surprised to see that it was nearly 11 pm. He didn't really feel like going to sleep himself, and the feel of Catherine's naked body against his was bringing new life to his cock. She must have been looking at it, because he'd barely begun to stir when he felt her hand grip him gently and begin to jack him into readiness.\n\nJeremy was anxious to fuck her, but he wanted to leave a lasting impression on her. He placed his hand over hers, stopping her movement. Quietly, he said, \"No yet.\" Then he gently pressed her onto her back and moved over to look into her eyes. He cupped her cheek and leaned in, saying, \"You're amazing. And I want you to feel as amazing as you made me feel.\" Then he leaned down and kissed her lips, which she hungrily returned, before he began kissing and sucking his way down her body. When he reached her nipples, they were in a relaxed condition, if a little scrunched from a chill in the room. Jeremy lathered them with his tongue, bringing them to full hardness and eliciting moans of appreciation from his lover. After spending some time appreciating the feel of them in his mouth and teasing them with his tongue, he continued down her body. While he was tracing the contours of her body with his mouth, he was also exploring her thighs and butt with his hand. The combined stimulation meant that when he arrived at his destination, Catherine was once again swollen with desire, fully flowered and wet.\n\nObserving her pussy for the first time, he thought it was one of the more beautiful ones he'd ever seen. She had rather smallish outer lips, and the creases between her lips and the surrounding tissue were fairly shallow. The part of her clit that showed was also on the small side, but her excitement had caused its hood to draw back significantly. All in all, Jeremy thought she was going to be a tight fit.",
        "He kissed all over her mound, sucked on the insides of her thighs, and even licked alongside her slit, driving her excitement further and further in anticipation. Finally, she began to plead with him. \"Please, Sir. Don't make me wait. Let me feel your tongue on my little pussy.\" He took pity on her, giving her a long, slow lick from back to front and finishing with a flick of the tip of his tongue over her clit. Catherine almost came off the bed when he did that. \"Oh, fuuuucck!\" she exclaimed softly. Jeremy smiled to himself, knowing that she was going to enjoy what came next. He hooked his thumbs into the folds of skin surrounding her opening, pulling up and out, exposing the entry to her pussy, along with the tip of her clit. He began flicking his tongue over the inner parts of her outer lips and teasing the edge of her opening at the inner lips. Catherine was alternately gripping the bed cover and biting the heel of her hand as the sensations built up.\n\nHer fluids were sweet and copious, and Jeremy was thoroughly enjoying himself as continued to lick and suckle at her pussy. He was driving her insane with desire, and when he saw that she was on the edge again, he covered the entirety of her clit with his mouth, applying suction and flicking her bean back and forth, up and down, relentlessly. It took less than 30 seconds before Catherine grabbed his head with both hands, planted her feet on the bed and arched her back, and began one of the longest, quietest, most intense orgasms he'd ever seen. He could see the veins in her neck bulging from the intensity, and her body was vibrating as she clenched in ecstasy. Jeremy supported her hips with his hands, elbows braced against the bed. The passage of time in the bedroom is a fluid thing, so when he estimated that her first orgasm lasted 45 seconds, it could have been longer or shorter.\n\nHer second orgasm began almost immediately after the first when he jammed two fingers into her cunt as she was coming down and began to finger fuck her mercilessly, continuing to suck at her clit. By the time that orgasm finished, she was screaming loud enough to wake Erin, though neither of the lovers realized it at the time. As Catherine collapsed, she scrabbled to drag him up her body. \"Please, I need you inside me.\" She positioned his stiff cock at her entrance, rubbing him around to lubricate the tip. \"Please,\" she begged.\n\nJeremy began to slowly press himself into her, but Catherine wasn't ready to wait any longer. \"Don't go slow. I need all of you inside me now.\" He hesitated a second before jamming himself all the way into her in one smooth stroke. All the preparation he'd done earlier meant that her pussy was well-lubricated and open to his invasion. \"Yeeesssss,\" she groaned. He held himself fully within her for a moment to get her acclimated.\n\nShe wrapped her arms around his neck and said, \"Take me, please. Fuck me hard and fast.\" He began to saw in and out of her, slower than she wanted. She was so worked up, that a constant stream of narration was pouring out of her mouth. \"Faster,\" she said. He began to pump harder and faster, and she was giving him all the encouragement he could want. \"That's it,\" she exclaimed, \"Own that pussy. Oh, fuck that's good.\" A few seconds later, \"You're gonna make me cum, you're so fucking thick!\"\n\nTo this point, Jeremy had been in a modified missionary position, locking his hands and elbows over her head and shoulders. As she continued to beg him to go faster and harder, he decided to change positions. He stopped and pulled out long enough to drag her to the foot of the bed. He positioned her hips over one of the corners. He directed his cock back into her cunt, and then draped her knees over his forearms. Being in a standing position gave him more power, while holding her legs up and out opened her pussy up to deep penetration.\n\nCatherine immediately noticed the difference. When he began to slam his cock into her again, she was no longer forming complete phrases, or even intelligible words. She had her hands on her tits, squeezing them and occasionally tugging on her nipples.\n\n\"Fuuuck...\"\n\n\"S'good....\"\n\n\"Unh...unh...unh...\"\n\nJeremy began to punctuate his thrusts with comments of his own. \"Who owns this pussy?\" he asked, slamming into her.\n\n\"You do!\" she wailed.\n\n\"You like this cock in your pussy, don't you, girl?\"\n\n\"Yeess! Don't stop, please don't stop!\"\n\n\"Are you gonna cum for me, girl?\" he asked through gritted teeth. His own orgasm was rapidly approaching.\n\n\"Yes Sir! Don't stop! Fuck me hard!\"\n\nHe began making shorter, but harder thrusts into her, alternating each thrust with phrases intended to push her over the edge.\n\n\"Give it to me, girl!\"\n\n\"I'm gonna fill your pussy up and make it mine!\"\n\n\"Do it!\" she cried. \"Cum inside me! I need it!\"\n\nHe could feel her building up to a mammoth climax. He viciously punctuated each word with a hard thrust. \"Whose...pussy...is...this?\"\n\nWhen Catherine answered, her entire body went rigid, and she screamed loud enough that people floors away knew her answer. \"Yooouuuurrrsss!\"\n\nHer answer triggered something primal in Jeremy, and when he came, he jammed himself as deeply into her as he possibly could, growling as he emptied himself completely within her.\n\n\"That's so fuckin' hot!\" came Erin's input from the sidelines.\n\nOnce he was spent, Jeremy slowly withdrew his softening cock from Catherine's pussy, which caused her to groan in disappointment at his absence. As his head cleared her lips, a little wave of cum, watered down with pussy juices, spilled over her lips and down the crack of her ass. She made no move to stop it, nor to close her legs. With her feet now dangling over the edge of the bed, Catherine didn't seem anxious, or perhaps capable, of moving a muscle. She watched Jeremy with hooded eyes as he went to the restroom. Erin watched him with a mixture of awe and envy on her face. If she'd known he was that good before, she might have pushed for a little time of her own.\n\nWhile he was gone, Catherine was at war with herself. She had never been fucked as good as Jeremy had just done. Part of her was terrified that this would never happen again. Another part of her was scared that if it did, she'd lose herself. She didn't know anything about him, but she really wanted to. She was wrestling with whether to ask him for contact information when he came back with a warm washcloth and cleaned her privates. When he leaned forward and softly kissed her lips, it was such a sweet, thoughtful gesture that Catherine almost teared up. He really was a perfect lover.\n\nIn that realization, she decided that she'd cherish this memory forever as a fantasy fulfilled. If they went beyond tonight and he turned out to be a jerk or something, it would taint something beautiful for her. So, she reluctantly stuck with the original plan.\n\nJeremy was struggling as well. He knew nothing about Catherine except that Erin knew her somehow. She was sexy as could be, and they were certainly compatible in the bedroom. But he also knew that he was still struggling to overcome the loss of his wife and son. In many ways, he was damaged goods. Better for her that she remain free of his drama. He thought she'd enjoyed tonight as much as he had. He'd check in with Erin in a few days to make sure things were still good. He was reticent to let her go, but her decided it was better for everyone if they kept it as-is.\n\nBy the time Jeremy and Catherine had mutually, but independently, determined that they shouldn't pursue anything more than had been intended for the evening, an awkward feeling permeated the air. Jeremy didn't feel right kicking Catherine out the door, but he was afraid of what signal he'd be giving if he asked her to stay. Catherine, on the other hand, knew that if she stayed and slept with him again, she'd want to push for more. Thus, when Jeremy awkwardly suggested that Erin and Catherine share the second bed, she smiled and politely declined.\n\nOnce Catherine and Erin were fully dressed, Catherine went to Jeremy and took his face into her hands. She kissed him sweetly on the lips and said, \"Thank you for making my fantasy come true. It was better than I ever could have dreamed possible.\" Then she and Erin made their way to the door, with Jeremy close behind. Catherine left first, but Erin said she needed to talk to Jeremy. Her friend said she'd wait for her in the lobby.\n\nAfter she left, Erin smiled at Jeremy, and then she softly said, \"That was one of the most amazing things I've ever seen. You were amazing. And I think you made an impression on Catherine.\"\n\nJeremy shyly replied, \"She's something special. I can't help wondering about her, but I'm damaged goods. She's better off without me clogging up her life.\"\n\nErin looked at him sympathetically. \"Jeremy, you have issues to deal with. There's no denying that. But you're also one of the kindest people I've ever met, and clearly, you're a fantastic lover. Do me a favor and stay out of your head too much. You are going to find someone who makes you happy again, and when you do, you're going to make them ecstatic. Don't give up too soon.\" She leaned over and kissed his cheek, and then walked out the door.\n\nAfter she was gone, Jeremy wondered if he'd done the right thing tonight. He was still thinking about it when his eyes closed, and sleep took him.\n\nBaxter did absolutely nothing to make him feel better when he walked in the door after grabbing a drive through breakfast. The same face that often seemed sympathetic when Jeremy was struggling with his sorrow, now seemed to express disappointment in Jeremy's actions.\n\nJeremy rubbed his dog's ears and said, \"Don't give me that look, boy. I told you, Ava wants me to find someone else. She obviously wants me to keep living, right?\"\n\nBaxter wasn't so sure. But he finally relented and licked Jeremy's hand.\n\n\"I knew you'd come around, boy,\" Jeremy said. \"Come on, let's get you fed and me changed, and then we'll hit the park this morning. What do you think?\"\n\nBax was always up for a trip to the park, and the question of Jeremy's moral standing was quickly forgotten.\n\n*****\n\nCapt. Pearson made a point of showing up in unexpected places the first few days of the week after Jeremy came back from his leave. He needed to know if it had made any difference at all, or if Jeremy was still in the danger zone. He was under no illusion that things would be magically corrected in a week, but he was hopeful that a corner had been turned at least.\n\nFrom what he could see, there was a pep in Jeremy's step that had been missing for some time. He even laughed at a joke someone made, something that hadn't happened in far too long. It warmed Harry's heart to see the younger man making progress.\n\nHe was further pleased when Jeremy requested to meet with him in private on Wednesday morning. Harry cleared his schedule; he wanted to have no interferences if possible. When Jeremy arrived, it was clear that something was different about him. The point was made even more clearly when Jeremy began to speak.\n\n\"Captain...Harry, I just wanted to take a moment to thank you for making me take time away. It was a really good thing. I don't think I realized just how far I'd sunk until you told me.\"\n\nHarry smiled. \"It was tearing me up, seeing what was happening to you. I care about you, Jeremy. You're like a son to me. I couldn't stand by and watch you destroy yourself.\"\n\n\"Well, you were right,\" Jeremy replied. \"I needed to talk to someone before it was too late.\"\n\n\"And did you?\"\n\nSheepishly, Jeremy responded, \"That Friday, I took your advice and asked Lt. Perkins out.\"\n\n\"Oh? How did that go?\" asked Harry.\n\nJeremy shook his head ruefully. \"Honestly? That date felt like a disaster.\" He proceeded to relate how he'd broken down over pizza, of all things. \"I think that was a crystallizing moment for me,\" he confessed. \"I knew I was struggling, but I didn't realize how far from alright that I was until that happened.\"\n\nConfused, Harry said, \"If the date was a disaster, why are you feeling better now?\"\n\n\"Oh, that date was a disaster, but we went on another date, which was better. We decided that we're not really compatible, though. But, it actually felt good to be out with a woman again. No, I'm feeling better because I feel like maybe I'm not as out-of-control as things were headed. I've started seeing a grief counselor. I sat in on a group therapy session last night, and it really helped me see that I'm not alone in this.\"\n\n\"Well, I'm glad to hear things are looking up. And Martha will be very pleased. Not as happy as she'll be when you find someone to share your life with, though.\"\n\nJeremy looked uncomfortable. \"I don't think I'm quite ready to start searching for my next wife, Harry.\"\n\nThe Captain waved him off. \"We don't expect you to, don't misunderstand. But Martha and I saw how much you loved Ava and Joshua. You're the kind of man that likes being married. When you get back there, it will hopefully mean that you've healed enough to love again. That's all we're saying.\"\n\n\"There was another thing that I wanted to talk to you about, Harry. All of this time to reflect on my life has reminded me that I had a plan once. It was never my intention to make the military my career. I was going to do enough here to gain some skills and contacts, and then move into the private sector, maybe open my own shop.\"\n\nSome senior officers might have been upset when a junior officer insinuated that he was thinking of resigning his commission. Not Harry, though. The military wasn't for everyone, and even those who were well-suited to the life were not always the best candidates to be \"lifers.\" Secretly, Harry was pleased that Jeremy was considering his future again. From his own experience with grief, he knew that was a bigger step than you'd think.\n\nHe couldn't help but rib the young man, though. \"Don't tell me you're leaving!\" he exclaimed. \"After all I've done for you, this is how you repay me?\"\n\nThe guilt on Jeremy's face was too much and Harry stopped him before he even got started. \"I'm just messing with you Jeremy. This isn't the life for everyone, and as much as I like and respect you, I'm not sure this is the best fit for you now. What're you thinking, if I may be so bold?\"\n\nJeremy visibly relaxed. This was the part of the conversation he'd been dreading the most. \"An old friend of mine from high school contacted me recently. She hadn't heard about Ava and Joshua before, so she wanted to offer her condolences. And she wondered if I might not benefit from a change of scenery. She said it helped her when her marriage fell apart.\n\n\"So, we got together to reconnect, and she told me about the company she works for. She's a deputy legal counsel for a security company called G\u00e5ta Systems. They're out of Norway, but they're trying to get a foothold here in the states. They recently acquired a small cybersecurity company, Gatekeeper Technologies, and they need someone to head up their project team and get them integrated with the rest of the company.\"\n\nHarry rubbed his chin as he thought about it. \"With your training here, and your leadership skills, it sounds like you'd be a great fit.\"\n\n\"Thank you, sir. That's what my friend said.\"\n\n\"So, when do you start?\"\n\n\"Start? I haven't even interviewed yet,\" Jeremy said. \"I'm actually meeting with them this evening for dinner to talk about the position. I'll know more after that, but I just wanted to keep you in the loop. I don't want you to get blindsided by this if I decide to resign my commission.\"\n\nHarry couldn't help but admire Jeremy. He wasn't sure that if the roles were reversed, he'd feel the need to be quite so transparent. But, that was just how Jeremy did things. It was one of the things that Harry had admired the most about the younger man. Clearing his throat, he said, \"Don't worry about us. We'll somehow manage to muddle through. Besides, this sounds like a great opportunity for you. I truly hope it works out. Just keep me in the loop, okay?\"\n\n\"Absolutely, sir.\"\n\nWith that, the two men stood and shook hands. After Jeremy left, Harry couldn't help but hope this opportunity panned out. He thought Jeremy deserved to have some good news for a change. Martha would be pleased too, because it would probably mean Jeremy would remain in the area.\n\n*****\n\n\"How do I look, Bax?\"\n\nBaxter looked at him as if he couldn't believe that he was going to wear that to meet with a prospective employer.\n\n\"What do you know, anyway? A) You're a dog and have no fashion sense. B) This shirt is a dark red that you can't see.\"\n\nBaxter looked quite guilty at having offered his opinion of Jeremy's attire, given the truth of the matter.\n\nJeremy squatted down and rubbed his dog's head. \"It's alright boy. I've been dressing my self for quite a while. I used to ask Ava for her opinion. With her gone, I thought you might be able to help. But that's probably not a good idea.\" Baxter licked his face in agreement.\n\nStanding up, Jeremy took one last look at his reflection. The dark charcoal blazer he'd paired with black dress slacks nicely dressed up the burgundy dress shirt he'd chosen. After much internal debate, he'd decided to forgo the tie, opting for a slightly more casual look for a business dinner. He finished his ensemble with black leather loafers.\n\nHe took a deep breath, and then turned to look at his favorite canine. \"Wish me luck,\" he said.\n\nBaxter actually barked out loud, which was so out of character that Jeremy stopped to comment. \"I appreciate the support, Bax, but you don't need to shout.\"\n\nOf course, Baxter was abashed at the insinuation, and immediately laid his head down to think about his actions.\n\nJeremy chuckled and headed out the door to meet his future.\n\nHe was running about 10 minutes ahead of schedule, which on Jeremy's clock, meant he was running slightly behind. He really preferred arriving at any appointment 15 minutes early, but traffic to the restaurant had been sluggish. Fortunately, for only a small ransom, valet parking was available at the restaurant, and Jeremy was able to drive directly to the door.\n\nStrolling into Fuoco, an Italian grill house, Jeremy was immediately assaulted with mouth-watering aromas of wood-fired grills and the steaks, chops, and seafood that were cooked on them. He had wanted to bring Ava to eat here shortly after it opened last year, but circumstances prevented it.\n\nHe stepped to the hostess and asked for the Tabor party. Monica had said that the reservation would be under the CEO's name. The hostess said that the rest of the party was already seated, which made Jeremy check his phone and watch. Yes, the dinner was scheduled for 6:30 pm, and yes, it was only 6:20 pm now. He assumed they'd decided to arrive early to discuss other business for some reason.\n\nApproaching the secluded booth near the rear of the restaurant, Jeremy could see Monica sitting on the far side, facing towards him. To her left must have been Nils Borsheim. There was a brunette woman seated across them, but he couldn't get a good look at her.\n\nMonica saw his approach and stood to greet him, making room for Nils. Monica was impeccably dressed as usual. She wore a cream-colored, cable-knit wrap sweater over black slacks and pumps. Jeremy would never understand how she could so effortlessly look flawless in so many different fashions. From a distance, Nils appeared to be mid-50s. Impeccably groomed, his silver hair was worn short on the sides and combed back. Above his lip was a thin mustache, also carefully trimmed. His grey-and-black plaid blazer was worn over a black turtleneck sweater and charcoal slacks.\n\nMonica greeted Jeremy as an old friend, despite the professional tenor of the meeting.\n\n\"Jeremy! It's good to see you.\"",
        "Jeremy responded with a kiss to her cheek. \"Thank you for the opportunity,\" he replied.\n\n\"Jeremy, I'd like you to meet Nils Borsheim. Nils is currently serving as the manager in charge of North American Operations for G\u00e5ta Systems.\"\n\nNils extended his hand, saying, \"It's a pleasure, Mr. Halperin. Thank you for meeting with us this evening.\"\n\nShaking his hand, Jeremy said, \"Thank you so much for the opportunity. I'm looking forward to our discussion.\"\n\nJeremy followed Monica's cue, turning to greet the remaining member of their party, as Monica continued making introductions. \"And this lovely lady is the CEO of Gatekeeper Technologies...\"\n\nHe couldn't hear what she was saying over the roar of blood in his ears as his heart rate spiked. His eyes nearly fell out of his head when he saw the woman he was here to meet.\n\n\"Catherine?\" he blurted, confused.\n\n\"...Catherine Tabor,\" finished Monica.\n\nShe looked just as lovely as he remembered. Despite the flush in her face, she said, \"Hello, Jeremy. Call me Cat.\""
    ],
    "authorname": "Minstrel_Blue",
    "tags": [
        "voyeur",
        "anonymous sex",
        "cum swallowing",
        "cunnilingus",
        "female masturbation"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-only-constant-is-change-ch-12"
}