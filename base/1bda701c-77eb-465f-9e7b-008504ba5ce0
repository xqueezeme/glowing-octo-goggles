{
    "title": "Junky Chronicles Ch. 04",
    "pages": [
        "Hey again Litsters!\n\nSo you have all been waiting and I am finally ending the wait. Here is the final leg of Natalie, Devon, Kaz and Ashley's journey! You will notice that my writing style is different from the start of the story and the reason is because I have grown as a writer.\n\nTo the people who will have a comment about grammar, dude get over it! If you are planning on counting the mistakes, please don't read! Or better yet, her is a math problem for you solve:\n\nSolve the equation\n\n5(-3x - 2) - (x - 3) = -4(4x + 5) + 13\n\nHopefully after you find the solution you will be over counting the mistakes!\n\nIdrublood, thanks once again for all the help and being my beat reader! It has an advantage, you read it all before anyone else, LOL. Simplydivine24, I hope I didn't disappoint and that you find the final part satisfactory.\n\nTo my angel, thanks for keeping me sane during the writer's block and being you!\n\nTo everyone else who stuck by me during this journey, thank you! You kept me going when I was ready to give up! Your support means the world to me and I apologize for taking so long, but hopefully you all love it!\n\nHappy Reading!\n\n***********\n\nChapter 30 Present\n\nAshley stirred beneath the sheets and her blue eyes fluttered open, immediately searching for Natalie and smiling when she found her sitting in the window seat.\n\n\"Why are you all the way over there?\" she asked sleepily.\n\nNatalie moved to the bed and sat by Ashley, her fingers running through her blonde hair, \"Megan and Caleb were crying so I went to put them back to sleep and then I just started reminiscing and I guess I lost track of time.\"\n\nAshley pulled Natalie into bed and wrapped her arms and legs around the toned figure, \"get back into bed and cuddle me like you love me.\"\n\nNatalie laughed and wrapped Ashley tightly in her arms, \"is that all I'm good for? Cuddling?\"\n\n\"Hmmm, I can think of many things you are good at. Like that tongue of yours is insanely talented, those fingers are limber and seem to know just which spot to hit every time,\" Ashley mumbled and pulled Natalie in for a kiss.\n\n\"Is that a hint?\" Natalie asked and ran her hand up Ashley's back, around her ribcage and cupped her breast.\n\n\"Jesus, that feels good. Do we have time to finish this before the kids wake up?\" Ashley asked breathlessly.\n\n\"We should, I checked on them twenty minutes ago, but only if you can keep really quiet,\" Natalie pinched her nipple to emphasize her point and elicited a moan from Ashley.\n\nAshley planted her lips on Natalie's in a crushing kiss, her leg wrapping tighter against Natalie and her hips grinding at Natalie's pelvis. Natalie pinned Ashley beneath her and started ripping at her own clothes to get as naked as Ashley was. With some help from her wife they quickly removed the offending items and their mouths pulled together again.\n\nNatalie's hand found Ashley's nipple again and gave a strong tug, causing Ashley's back to arch off of the bed and a moan to escape into Natalie's mouth.\n\n\"Can you keep those moans under control, love?\" Natalie asked, a daring glimmer in her eyes.\n\n\"No promises, but I will try, Tiger,\" Ashley responded breathlessly, her hips gyrating desperately.\n\nNatalie kissed her one last time before moving down her neck, nibbling on the soft flesh there before taking her sensitive earlobe into her mouth. She heard the sharp intake of breath and felt the nails dig into her back, her hand travelled down the taut stomach and found the wet labia. Natalie moaned when she felt how wet her wife was and left the earlobe to nibble on a soft nipple. Ashley's back and hips arched off the bed and a low growl escaped her open lips when she felt the fingers rub her wetness.\n\nHer hands tangled in Natalie's hair while her hips rocked against the exploring fingers. Natalie pushed three fingers into Ashley's wet depths and curved them to find her g-spot, when her fingertips brushed the spongy spot Ashley's hips arched to an uncomfortable angle. The fingers started pumping slowly, teasing the velvety wet flesh surrounding it and rubbing over the spongy area.\n\n\"Fuck, yes, right there,\" Ashley breathed and rocked her hips faster.\n\nShe felt the orgasm build within her, like a wave building speed, height and intensity. Natalie pumped faster, her fingers slamming against the wet folds and felt Ashley's muscles clench her fingers and her body grew rigid. Without warning she stopped and removed her fingers.\n\n\"What the fuck?\" Ashley whined, \"I was so close.\"\n\nWordlessly Natalie got up and removed the strap-on from its hiding place, smiling at Ashley as she stepped into it. She crawled over Ashley's body and positioned the head at her soaking entrance.\n\n\"I want to look into your eyes when I make you cum,\" Natalie whispered and pushed inside.\n\nThe large cock sank away into Ashley, inch by inch disappearing into the wet opening. When her hips touched Ashley's pubic bone she gently started rocking against her, giving Ashley time to get used the large intruder.\n\n\"Fuck that feels good,\" she whispered and bit her lip to avoid moaning, her nails digging into the flesh of Natalie's back.\n\nTheir lips met and Natalie increased the velocity of her rocking hips, slamming the cock into Ashley as she felt the tiny nub rub against her hardened clit. The sounds of ragged breaths and the slurping of Ashley's wet labia filled the room as their hips rocked together and their muscles clenched at the impending orgasm. Small waves started rolling over the women and they increased their pace to get closer to their peaks. Without warning Ashley's body went rigid and her back arched off the bed, Natalie covered the open mouth with her own and swallowed the strangled scream that escaped them. Seeing her lover in the throes of passion pushed her over the edge and her jaw clenched while her hips kept rocking to maximize the orgasm. Wave after wave washed over Ashley until both her and Natalie collapsed, their skin covered in a sheen of perspiration.\n\nThey caught their breaths and Natalie pulled out of Ashley, hearing a sigh of disappointment when the fullness disappeared. She removed the straps and made sure to put the strap-on where the kids wouldn't come across it. When she got back in bed Ashley was already asleep and the moment she felt the warm body get in next to her, she snuggled closer and threw her legs over her wife. Natalie sighed contentedly and closed her eyes, a deep dreamless sleep consuming her within minutes.\n\nChapter 31 1993 - 2001\n\nShe felt violated and sore, tears streaming from the blue eyes as she pulled the blankets tightly around her. Desperately she tried to find comfort in the duvet, the sobs didn't stop but by now she had learned to keep them silent to avoid a beating. Her thoughts were jumbled and for the umpteenth time in her life she wondered if all girls went through this. She had no one to turn to, nowhere to run and there was no one who would listen to her plight of desperation and unhappiness. So she did what she thought all thirteen year old girls did, she kept quiet and persisted, holding out a tiny bit of hope that someday someone would rescue her.\n\nThis had been her life for years now and Ashley didn't know that the life she lived wasn't what life was supposed to be. Every morning she woke up for school, dreading the end of the day which meant she had to return home and every night he would come knock on her door. This Wednesday night was different, he came into her room and started pulling his pants down but this time Ashley let out an ear piercing scream. Her mother had, had enough of this and came running down the hall, deciding to do what she should have done years ago.\n\nShe pulled the large man away from her daughter and he turned around in a rage, his fist connected with her face and her body flew a few feet back. Ashley tried to fight him and keep him away from her mother but her small body was thrown into a wall as he descended upon her mother again. His fists kept connecting with her face and Ashley screamed, blood spattered across the walls and his face as he beat her. The next thing she heard was the door being kicked in and a neighbour knocking her father out cold. He checked on the little girl and then tried to find a pulse on the woman lying on the floor, choking on her own blood.\n\nHis wife came in as the man started CPR and took a hysterical Ashley from the room to wait for the paramedics, but they were too late. All of them were too late, her mother was pronounced dead and she already carried the shame of being raped repeatedly by the man who was supposed to protect her. She barely remembered the test and hospital stay, the next couple of months were a blur. Child Services sent her to Johannesburg where she went to stay with her grandparents who still mourned the loss of their daughter. They tried to help Ashley but the little girl was a mere shell of who she once was. She didn't trust anyone and she was completely withdrawn from the world around her.\n\nHer grandparents had started sending her to therapy not long after the fatal incident and even though she slowly started speaking about what had happened, nothing seemed to heal. Dr. Greenstein looked at her over her glasses and smiled her soft, reassuring smile.\n\n\"So, Ashley, can you remember when this started?\" she asked, trying to give the young girl some comfort.\n\n\"No, not really, I think I was about ten. He was drunk one night and came into my room. I mean he didn't rape me, I don't think. But I remember him taking my clothes off and touching himself while he looked at me. He put his fingers...\" she started sobbing, \"his fingers went inside me and it hurt.\"\n\nThe gentle, elderly woman sat next to her patient and tried to soothe her by gently rubbing her back.\n\n\"He forced me to touch him, I thought that, that was what all girls did. That's what he told me,\" her small body wracked with sobs.\n\n\"It's okay sweetie, he will never hurt you again. He will spend the rest of his life behind bars and in time your wounds will heal,\" she whispered as she held the crying child.\n\n\"I'm scared,\" her voice was muffled by the shirt her face was pressed against.\n\n\"I know you are, but I promise that he will never, ever come near you again.\"\n\nAshley spent most of her sessions crying and the therapist would soothe and reassure her. Months passed and the pattern was repeated three times a week. The rape and molestation had placed a fear of men inside of Ashley and she even had a hard time being with her grandfather. After Dr Greenstein spoke to them they decided that the best course of action would be to send her to an all-girls school and then gently introduce her back to men. They all realized that she would need time to readapt to men and to trust anyone again. What hurt her grandparents' the most was the fact that their daughter knew about this for years before stepping in.\n\nWhen they enrolled Ashley at the school they extensively explained the circumstances and asked the teachers' to keep an eye on the little girl. The story had been headlines and every South African citizen knew about what had happened. The principle had a very soft heart and immediately agreed to enrol the girl.\n\n**********\n\nSchool was never easy for Ashley, she was very introverted and her studies suffered under the constant stress and depression she felt. She was idly doodling in class one day when they announced a new student would be joining their class. That moment the floor ripped from beneath her, because it meant that she would have to share her desk and she had worked so hard to avoid making friends or even having to sit close to anyone.\n\n\"Class this is Jean Holcomb, she just transferred to the school so please make her feel welcome. Jean, please sit next to Ashley,\" the teacher said and Ashley tried hard not to squirm away from the situation.\n\nThe brunette girl slowly walked down to the seat at the back of the classroom and sat down next to the blonde girl. She looked at her new desk partner and saw her shy away from her, almost sinking into the corner.\n\n\"Hi,\" she whispered to the shy girl.\n\n\"Hi,\" Ashley responded never looking up.\n\nThe rest of the class passed in silence, the pupils hardly concentrating on what the teacher said. The bell rang for recess and everyone quickly filed out of the class. Ashley packed her books slowly, trying to avoid bumping into anyone, to her surprise she saw Jean waiting for her.\n\n\"Can I hang out with you? I don't know anyone,\" she said and a blush covered her cheeks.\n\nAshley looked into the warm brown eyes and smiled despite herself, \"I don't do anything during recess. I just eat and read, but I guess you can sit with me if you want.\"\n\n\"Thanks,\" she quickly followed the blonde and dropped her bag next to her new friend's.\n\nThey walked to a large tree, their lunch boxes in hand and sat against the large base of the tree. Silence filled the space between them and Ashley wondered why she agreed to be friends with this girl.\n\n\"It's scary to change schools,\" Jean finally broke the silence, \"it's difficult to fit in and make new friends.\"\n\n\"I wouldn't know, I never make friends,\" Ashley responded and felt the warm blush cover her face.\n\n\"Why?\" Jean asked, shocked by the revelation.\n\n\"Because I don't trust people and I prefer to be alone most of the time.\"\n\n\"Can I be your friend?\"\n\nShe asked it so sincerely that Ashley couldn't help but nod, \"where are you from?\"\n\n\"We just moved from Bloemfontein. My dad got a better job offer here so we had to pack up and move,\" she said in a sad voice.\n\n\"I used to live in Cape Town,\" Ashley felt as though she could finally share a piece of herself with someone who wasn't paid to listen.\n\n\"Why did you move?\" Jean asked in curiosity.\n\n\"I'd rather not talk about it,\" she looked down at her hands.\n\n\"That's okay, I understand. So, since we're friends now, can I come over to your house tomorrow? My parents work all day and I hate being home alone.\"\n\n\"Yeah, I will speak to my gran and ask her.\"\n\nSuddenly a fourteen year old girl forged the first friendship in her life and she couldn't decide whether she was overjoyed or dreaded the decision. She shrugged mentally and decided to take a chance for once in her life, at least her grandmother would be happy that she finally peaked from beneath he shell.\n\nAshley happily jumped into her grandmother's car and smiled, \"I made a friend.\"\n\nThe older women was so shocked and overjoyed by this news that she stalled the car when she tried to pull out of the parking space.\n\n\"That's great!\"\n\n\"Can she come over tomorrow?\" Ashley asked excitedly, finally regaining some of her childlike excitement.\n\n\"Of course she can, I will bake some cookies for you two,\" she navigated the heavy traffic and couldn't wait to share this news with her husband.\n\nThe grandparents watched their granddaughter bustle with restless energy and laughed at the tales the girl started sharing about school. Both relieved to see that there was still hope for the young girl to lead a happy life and both already thanked Jean for breaking the ice and entering her life. Neither could wait to finally meet this young girl and prayed that this was the breakthrough they needed to save Ashley.\n\n**********\n\nJean followed Ashley to her grandmother's car and politely greeted the old woman behind the wheel. She hopped into the backseat with her bags and smiled as she listened to the banter between the old woman and her granddaughter. They arrived at a large house and Ashley bounced up the stairs, almost running to her room while dragging Jean by her hand behind her.\n\n\"This is my room,\" Ashley explained as she entered the room.\n\n\"It's nice,\" Jean dropped her bags and fell onto the bed, her arms stretched above her head.\n\n\"Yeah, I think it's pretty cool.\"\n\n\"So are we going to do homework so we can gossip or watch T.V.?\"\n\n\"We don't have a lot of homework today, so it should be quick.\"\n\nJean moved to make space for Ashley and the girls quickly worked through the homework they had. Ashley's grandmother arrived with a large plate of cookies and fruit juice, smiling broadly when she saw the easy interaction between Ashley and her new friend. Once the girls finished their homework they settled on the couch in front of the T.V. with a large bowl of popcorn and watched cartoons until Jean's mother arrived. The conversations between the girls were easy and both felt comfortable in each other's company.\n\nFour years later Jean and Ashley were still inseparable. One was hardly ever seen without the other and even though Jean had started dating, Ashley's fear of men and mistrust followed her still. It was a Friday night and Jean was spending the weekend with Ashley as was their routine. They were lying side by side on the queen sized bed and Jean was babbling on about her latest boyfriend. Ashley hardly heard a word, her thoughts were instead on Jean and wondering why she felt jealous of the guy who got to kiss the brunette.\n\nShe watched the pouty lips move and wondered what it would feel like to kiss the soft looking lips. After long discussions regarding this with her therapist she come to realize that because of her trauma her attractions to women was natural and might stay with her for the rest of her life. She considered this and realized that she would feel safer dating a women because she found it easier to trust someone of the same sex. Yet, she wondered if she would have been a lesbian had it not been for her father and the constant rape.\n\n\"So, when are you ever going to find a boyfriend?\" Jean asked, cuddling into her friend's side as she always did.\n\n\"I don't think I'll ever date men,\" Ashley smiled sadly.\n\n\"Are you ever going to tell me what happened in your past?\"\n\nAshley had never shared her story with Jean, too ashamed to admit that she had been abused the way she had. But on this particular night she decided, what the fuck, if I can't trust Jean with this then she will never trust anyone. She began to tell her story, tears streaming down her face as she did. Jean quickly took the crying girl in her arms and held her tight. Her own tears streaked her face, wishing that she could take away the pain that her friend felt.\n\n\"So I think I might be a lesbian, because I don't find men attractive and I will never be able to trust them,\" Ashley concluded and held her breath.\n\nJean held the smaller girl tight, suddenly realizing that she wanted to kiss her friend so badly that it hurt. She knew she had to say something to let Ashley know that she didn't mind and that this didn't change anything in their friendship. The words wouldn't come so Jean gently tilted the tear streaked face up and lowered her mouth to the trembling one. When their lips made contact it felt as though their worlds finally shifted into place as their heart raced and their bodies trembled at the soft contact.\n\nAshley moaned at the contact, her tongue running along the smooth lips, begging for entrance and when Jean's mouth opens she slips her inquisitive tongue inside the warm mouth. Jean moaned, her heart beating rapidly as the wetness between her legs grew. She gently laid Ashley down and settled on top of her, her hands running up the blonde's sides. Ashley pulled the athletic body closer, her fingers digging into Jean's back as she tried to increase the contact. Jean broke the kiss and started kissing down the pale neck, her tongue swirling across the smooth skin.\n\nTheir breathing became laboured and when Jean's hands cupped her breasts she felt the fear grip her when she realized where this was going. She pushed Jean away, her blue eyes wide with fear and her throat constricting as she tried to keep from screaming.\n\n\"I'm sorry,\" Jean said desperately, sitting upright and pulling the scared girl into her arms.",
        "\"No, I'm sorry. I'm just not ready for that yet and I don't know if I ever will be,\" Ashley said after a long while, clinging to her friend.\n\n\"That was a really good kiss,\" Jean smiled into the blonde head under her chin.\n\n\"Why did you kiss me?\" Ashley's insecurities were clear in her voice.\n\n\"I think I have wanted to do that for a long time, I just didn't realize it until it happened.\"\n\n\"You didn't have to do that because you felt sorry for me,\" Ashley said defensively.\n\n\"I didn't do it because I felt sorry for you! Did you even hear what I said? I did it because I wanted to, because I have been wondering for so long what it would be like! I don't pity you, because I know how strong you are and now I understand why.\"\n\nAshley started crying and burrowed her face into the soft shirt, \"sorry.\"\n\n\"You have nothing to be sorry for.\"\n\n\"What happens now? You have a boyfriend and I don't know if I want to just be friends anymore,\" Ashley whispered.\n\n\"I don't know, but you are more important to me than anything else. I don't know or understand why I feel this way about you, but I want to fight your demons with you and I don't think I can ever go back to just being friends with you. How about we try that kissing thing again, I promise to keep my hands to myself,\" Jean suggested shyly.\n\nAs an answer Ashley tilted her head up and caught Jean's lips between her own. She desperately wanted to be able to make love to her friend, but her fear and past prevented her from doing so. The soft lips caressing her own quickly cleared her thoughts and she focussed solely on the feel of the soft lips against her own.\n\nChapter Thirty Two 2002\n\nIt had been one year since that first kiss, Ashley and Jean were sharing a university dorm room. Both were busy with their medical degrees and Ashley had still not been able to overcome her fear of physical intimacy, even though she was getting better. She wondered why Jean was still with her, but Jean insisted that she didn't care because she loved Ashley with her whole heart. Ashley was sitting on the familiar couch in Dr Greenstein's office as she pondered this question for the millionth time.\n\n\"It's been a year and I still freak out at the slightest hint of anything physically intimate. I trust Jean with my life and I am scared that she will leave me. But I have made a decision, tonight when we finish classes I'm going to make love to her and I'm going to allow her to touch me in every intimate way possible. I will never cross this bridge and bury my fear of intimacy if I don't step up and just do it.\"\n\n\"I have been working with you for six years now and you have made a lot of progress. I think that if you can take this step you will have fought most of your demons and Jean seems to be constant light that keeps your darkness away. There is no one better to take that big step with than Jean and I believe that you will experience fear, but the important thing is that you relax and allow her to take you one step closer to healing.\"\n\nThey discussed Ashley's decision at length and when Ashley left she felt rejuvenated. She patiently waited for Jean to come to the room, candles burning in the room, soft music playing and a bottle of wine resting in an ice bucket. Jean walked through the door and looked over the room, her brow furrowed in confusion. She watched as Ashley walked to her wearing one of her button shirts and she briefly wondered if Ashley had anything on underneath.\n\n\"Hi,\" Ashley whispered and kissed the gaping mouth.\n\n\"What's all this?\"\n\n\"Tonight, I want you to make love to me, but I need you to be patient and gentle with me.\"\n\nBefore she could answer she felt the soft lips against her own again and let her arms encircle the body of her girlfriend. Their tongues duelled for a long time and their hands roamed over the respective bodies, simply feeling the skin beneath their fingers.\n\n\"Do you want some wine?\" Ashley asked breathlessly.\n\n\"Hmm,\" Jean replied and kissed her one more time.\n\nJean poured the wine and openly stared at the toned legs that were revealed beneath the shirt, feeling her sex contract at the sight. They talked while they enjoyed their wine and Jean ran her hand along Ashley's thigh, gauging her response at the intimate act. Ashley put their glasses down and her mouth hungrily found Jean's, her hands fumbling with the shirt that covered her friend's body. Jean helped her remove the offending item and laid Ashley down. She supported herself on her arms as her mouth sought out the blonde's. Carefully she let her hands roam over the lean body beneath her, slowly working her way to the delectable breasts.\n\nHer hand cupped Ashley's breast and she almost cried in relief when Ashley's back arched off the bed to increase the contact. Jean's heart beat wildly when she realized that this was really going to happen and soon realized that this moment was worth the wait and countless frustrated nights. The two women worked together to remove Jean's pants and underwear before Jean gently started unbuttoning the shirt. Her hands trembled and she worked carefully, as if she was opening a priceless artefact and was afraid of damaging it.\n\nShe looked down and kissed each piece of new skin that was revealed, when all the buttons were undone she gently pushed the shirt to the sides and caught her breath as she laid eyes upon the perky breasts she had been dreaming about for so long.\n\n\"You're beautiful,\" she breathed in a whisper before kissing each nipple.\n\nA moan escaped Ashley's lips and she fought desperately to keep the fear that tried to take over. She focussed on Jean, her soft brown hair and the feel of those soft lips against her skin. The same mantra was repeated in her head, this is love, it's not the abuse you experienced. You can trust Jean, she truly loves you and she stuck this out with you, fighting by your side to expel those demons.\n\nHer fingers tangled in the long hair and she gently pulled her soon-to-be lover down, encouraging her to take the sensitive nipple between her lips. Electricity shot through her spine when the warm, wet mouth encircled her nipple and the gentle pressure of the suckling caused a new wave of wetness to gather between her thighs. Jean was gentle and moved slowly so that she didn't scare her new lover off. She moved at the pace that Ashley set, trying hard to show her that sex could represent love and wasn't normally used for selfish needs against defenceless kids.\n\nAfter giving both breasts equal attention she slowly kissed down her abdomen, her actions slow and deliberate to let Ashley know where she was headed and what her plans were. Once again Ashley fought the fear that threatened to dispel the light and pleasure. Jean felt the body stiffen and instead of moving further she nibbled on the sensitive skin under her lips.\n\n\"I love you, Ash. Are you sure you want this?\"\n\n\"Yes, I just need to convince my brain that you're not doing this to hurt me,\" she whispered in an emotional voice.\n\nJean slowly continued her path and when she reached the landing strip of pubic hair, she spent a long time simply kissing the soft fur and surrounding area. Her intentions were to let Ashley get used to the idea of someone being close to her most private area and tried to convey the love she felt for the blonde woman in every kiss. When the body relaxed she slipped her tongue between the wet labia and got her first taste of the woman she loved. Her tongue moved slowly between the pink folds and she heard a gasp every time her tongue flicked over the sensitive clitoris.\n\nAshley's hips started undulating against her lover's face and Jean took this as a sign that it was safe to continue her exploration of the woman. Her tongue delved into the opening and she heard Ashley moan loudly at the contact. She brought two fingers to the opening and looked into the blue eyes filled with lust, asking permission to enter her. Ashley nodded her consent and Jean slowly slipped the digits inside her lover, her tongue flicking across the hard clit. She felt her orgasm building slowly, like lavea settling in the pit of her stomach ready to erupt at any second. Her breathing was ragged, her moans loud and her hips bucked wildly against the fingers and face of her new lover. Without warning Ashley's body stiffened and a scream caught in her throat as she fell over the edge and experienced her first orgasm.\n\nJean helped her lover ride out the waves of her orgasm and held her close when sthe collapsed exhausted on the bed. Her fingers stroked the naked back and she whispered words of love and adoration to the blonde woman in her arms. A blissful smile crossed Ashley's lips and her heart felt elated when she realized that the chains that held it captive was broken.\n\n\"I love you,\" Ashley whispered and kissed her lover with all of the passion she could muster.\n\nWithout warning Ashley flipped Jean over and started working on chasing away another demon that held her captive. Much to Jean's surprise they made love well into the early morning and she cried tears of joy when she realized that the final wall that separated them had finally been broken down. They clung to each other in the small bed, their limbs a tangled mess as sleep claimed the women.\n\n**********\n\nAshley woke up the next morning, the first feeling was fear gripping her heart. She was scared that she would open her eyes and Jean would be gone or that she would have regrets. But when her blue eyes fluttered open she looked into loving brown eyes and her heart suddenly felt elated.\n\n\"Morning, beautiful,\" Jean whispered.\n\n\"Hey,\" Ashley kissed the soft lips and suddenly became aware of the naked body against her own.\n\n\"How are you feeling today?\"\n\n\"Like I if I don't get more of you right now I might sulk,\" Ashley smiled into the lips against her own and her body started moving against her lover's.\n\n\"Hmmm, no regrets?\" Jean asked uncertainly.\n\n\"I will have if you don't kiss me right now,\" without another word their mouths pressed together and their bodies moved in a slow dance against each other.\n\nThey spent most of the Saturday making love and getting to know each other's bodies. The smell of sex hung in the air as they claimed each other over and over again. Ashley couldn't get enough of Jean and she realized that sex wasn't bad or abusive when you shared it with someone you loved.\n\n\"If we don't eat anytime soon we might die of starvation,\" Jean mumbled breathlessly.\n\n\"Can we order in?\" Ashley asked and moved up her lover's body.\n\n\"No, if we don't get dressed and go eat we will never consume what we order,\" Jean answered quickly, her body was sensitive and she wasn't sure if she could handle anymore.\n\n\"Fine, let's go shower,\" Ashley conceded with a pout.\n\nJean laughed and dragged her lover with her to the dormitory showers where they quickly got into one shower. They didn't make love in the shower but instead lightly touched and confessed their undying love for each other. When the water started running cold, they dressed each other and giggled whenever they fumbled.\n\nAshley was finally able to share all of herself with someone she considered her soul mate and although she still struggled in other friendships and relationships in her life, she felt whole when she was able to look into the warm brown eyes of her lover and see the love within them. Finally she felt like a whole person, like Jean had somehow replaced what her father had taken from her so many years ago.\n\nTheir relationship could not have been going any better and a couple of years later they moved into an apartment together. Both women were very happy when they started on their final year of classes before starting their residencies and neither expected it to be the year that everything would fall apart.\n\nJean met a guy in one of her classes and the two became fast friends, before she knew what was happening however she was falling for him. Her heart was still with Ashley but she constantly questioned her sexuality after meeting Chad. He was the guy she always imagined marrying and she found herself wondering if she had made the right choice in changing her friendship with Ashley. She was faithful and fought against her feelings, but one night she and Chad went drinking while Ashley went to visit her grandmother.\n\nOne thing led to another and before she could stop it or even wanted to stop it, she and Chad were undressing each other. They fell onto the couch and he entered her, their bodies moving together and her moans filling the room. Ashley unlocked the door, happy to be home and have time with Jean when she saw the naked bodies moving together and heard Jean's loud moans echoing off the walls.\n\nShe dropped her keys with a loud clinking noise and her entire body went limp, she fell to her knees and the last thing she saw was the shocked brown eyes look into her hurt blue ones. Ashley fainted and Jean pushed Chad away, pulling a shirt over her head as she rushed to her lover's side. When Ashley came to, she roughly pushed Jean away and scrambled into a corner.\n\n\"GET AWAY FROM ME!\" Ashley screamed.\n\n\"Baby, please, it shouldn't have happened! Please,\" Jean pleaded while Chad looked on worriedly.\n\n\"GET OUT! I NEVER WANT TO SEE YOU AGAIN!\" she moved away from Jean's attempts to touch her and felt the hot tears streak down her face.\n\n\"Let me at least take you to your grandmother's...\"\n\n\"GET THE FUCK OUT!!!!\"\n\nJean looked at the crying woman, her own tears running down her face and realized that she had broken the fragile trust that Ashley had in her. She reluctantly walked to the room they shared and threw some items into an overnight bag. Before she left she looked at Ashley one more time and felt excitement building when Ashley walked to her. A hard slap caught her across her face and her head whipped to the side while she felt the hot stinging build on her cheek.\n\n\"I hate you!\"\n\nAshley walked to the bathroom and Jean walked out of the front door to find Chad waiting for her. She dialled Ashley's grandmother and told her to come to the apartment, she confessed to what she had done and heard the old women tell her that if Jean was still there when she arrived she would wish that she was in a torture chamber rather than dealing with her. Jean walked toward her car, her heart breaking more every step and she wondered what would happen to her now. She realized that her existence was entwined with Ashley and laughed at the irony that the realization came a few minutes too late. For a long time she sat in her car and watched the apartment that was home to her, when she heard the old car pulling up she finally drove away.\n\nChapter Thirty Three 2006\n\nKaz rushed out of bed and hung around the toilet, the contents of her stomach emptying with heavy heaves. Ben emerged and looked at his wife weakly hanging over the toilet seat, he kneeled next to her and rubbed her back.\n\n\"You okay, hon?\" he asked softly.\n\n\"I think I'm pregnant,\" she whispered through a sore throat.\n\nBen felt his excitement building and he nearly did the happy dance, \"that would be amazing!\"\n\n\"Considering we have been trying, I have to agree. I just don't have the energy to celebrate right now.\n\nHe took the hint and helped Kaz to her feet, after she rinsed her mouth he carried her to bed and snuggled up with her. Even though he felt like an unwanted third wheel when it came to Natalie or Devon he loved her more than life itself and he knew that she was trying to step up and be the wife and friend that everyone needed. He looked into the sleepy brown eyes and like always felt at peace. Natalie and Devon had played a big part in his wife's life and he would never ask her to choose, instead he would accept them as the unnatural extra limbs of his wife.\n\nKaz felt a mixture of emotions, she and Ben had been trying for a long time to get pregnant and now it finally happened, but the timing was wrong. Her best friend just lost her wife and unborn child and it would feel like rubbing her face in the loss she was experiencing. She knew that there was nothing she could do about it now and at some point she had to focus on herself. In the bigger context of life she was never going to be truly happy if she put everything and everyone before herself and her marriage. She knew in her heart that Natalie would be happy for her, no matter what, they were all three in the same boat and always tried to put the other's happiness in front of their own.\n\nHer eyes closed and she snuggled deeper into Ben's arms, sleep claiming her tired body and mind. Everything will be fine, it just has to be.\n\n**********\n\n\"You sacrifice everything for Natalie without even giving me a second thought!\" Michelle yelled at Devon when he walked through the door.\n\n\"How about you calm down before we talk about this?\" he said calmly and walked to the kitchen.\n\n\"No, Devon, enough is enough. You let that lesbian and her coloured counter-part run your fucking life! Yeah what she went through is tragic but fuck, life moves on! If you keep sacrificing every for them you will grow old alone! So you need to make a choice, me or them!\"\n\n\"GET OUT!\" Devon hissed between clenched teeth, \"you don't know what you are talking about or the relationship I have shared with them for half of my life. So get out and don't ever return. You should know by now that if someone makes me choose, my choice will always be Nat and Kaz!\"\n\nTears welled in Michelle's eyes and she soon realized that she said the wrong thing, but there was no turning back. She walked into the room and packed some of her clothes, she would return in the week and get the rest. Devon watched her go, his anger bubbling just beneath the surface. Michelle had chosen the wrong moment to confront him, he just returned from hearing the reading of the will but he figured that when they both calmed down enough they could talk it out. He grabbed his keys and drove to Natalie's house, at least there he would find people who understood and cared.\n\n**********\n\nSome weeks later Devon walked into Natalie's house, he was relieved to see Alice's car in the drive way. The house was very quiet and he saw a syringe on the table, at the moment he didn't connect any of it and continued up the stairs. He softly knocked on the door and opened the door, only to feel the hurt and shock colour his insides.\n\nAlice looked at him and the confrontation that followed left everyone in shock. No one could have predicted the downward spiral that they would all find themselves in and the devastating effects that would follow. Natalie disappeared and no one knew where to find her, she also missed Alice's funeral. The only communication they had from her was the phone call that led them to the killers. Devon tried to continue with life, Michelle was gone and he couldn't find Natalie. Instead he tried to support Kaz during her pregnancy and he even went on a few dates with Dani.\n\nThose were the only parts of his life that seemed to be somewhat normal and he knew he was falling hard for the lawyer. They were sitting in a restaurant, staring into each other's eyes when his phone rang.\n\nKaz was in bed, cuddled up to her husband and watching one of her favourite sitcoms on TV when her cell phone started buzzing.\n\n\"Hello?\"\n\n\"Kaz? It's Dr Ashley Simons.\"\n\nKaz immediately sat up and stared ahead, \"what happened?\"\n\n\"Natalie was in a car wreck, but she is stable at the moment. I don't know why she was in Durban, but I happened to be here working with another patient when she came in. I just thought I should inform you.\"\n\n\"We'll be on the next flight.\"\n\nKaz jumped out of bed while shouting the details to Ben and telling him to phone Devon while she threw clothes into a bag. He quickly helped his wife and told her that Devon had also received the same call. Devon had already booked tickets and the plane was leaving in two hours. The four of them met up at the airport and made the trip to Durban. Ashley was waiting for them at the hospital and quickly assured them that Natalie was fine.",
        "Over the next few days they decided to take Natalie to Cape Town and help her heal from the wounds that had been inflicted on her. Ashley arranged for Bianca to go with and when Natalie agreed they all hoped that they would finally get a piece of their normal lives back.\n\nChapter Thirty Four February 2007\n\nNatalie and Ashley pulled away from one another and started walking down the beach on the edge of the water. Both women quickly realized that they missed the close contact they had shared moments before. Ashley was suddenly aware of the feelings that Natalie provoked in her and she immediately shook her head to clear the thoughts. She hadn't let anyone touch her physically or emotionally since Jean and Natalie had too much baggage for her to even consider this a possibility.\n\nUnbeknownst to Ashley, Natalie was having the same thoughts, but she simply chalked it off to Ashley having saved her life three times and technically speaking doing it for a forth time now. Suddenly Megan's words came back to her and she wondered if her beloved wife was referring to Ashley but she didn't think she could ever enter another relationship.\n\nThe women turned around and headed back to the house, Bianca noticed the contemplative looks on their faces and immediately realized that if anything was going to blossom between the two women they were going to need a few nudges. At that moment she decided that she had to work on Ashley because Ashley trusted her and that she could provide the first nudge. She also had to get into contact with Natalie's friends and get them to make Natalie acknowledge what was happening. This was not going to be easy but it could save two brilliant women's lives.\n\nEach woman went about their days and Bianca was happy to see that Natalie had taken to drawing even though most of her drawings reflected Megan and Logan. In these drawings Logan was about three years old and Bianca hoped that this was a way for Natalie to let go of everything she kept bottled up. Ashley sat in the window seat and stared out across the beach, her eyes unfocussed and Bianca knew she was trying to figure something out.\n\n\"You okay?\"\n\n\"Hmm, just thinking,\" Ashley said absent-mindedly.\n\n\"About?\" Bianca sat next to her and looked at the conflicting emotions flashing over the blue eyesd doctor's face.\n\n\"I saved Natalie three times, what are the odds of that happening? And then today on the beach she opened up to me about this dream she had where Megan told her that her time on earth wasn't up and that she was meant for someone else. For the first time in my life I opened up to someone I hardly know and who wasn't paid to listen. She held me while I cried and surprised me with the tenderness she displayed. Then when we got up we were both quiet and walked but I immediately missed her touch,\" Ashley wiped a tear away before continuing, \"I can't be feeling this way about her. You know I haven't let anyone touched me in any way since Jean and I can't be falling for the one woman who is more emotionally damaged than I am.\"\n\nBianca pulled her friend into a hug and held her for a while before speaking, \"would it be so bad to finally trust someone again? She might be damaged, but look at life, who isn't? I believe that she is loyal and trustworthy. There is no way that she will ever do to you what Jean did because she now knows what the value of love is and that losing it is like dying. You have both experienced the same loss in different ways, Ash and I think that if there is anything that could develop between the two of you it could heal both of you.\"\n\n\"I can't take this risk. I can't let her or anyone else touch me and I certainly can't make myself emotionally vulnerable again.\"\n\n\"Sorry to be the one to break it to you, but you have already started letting her in and guess what, she hasn't run yet!\"\n\nAshley tried to come up with more reasons as to why it wasn't a good idea but realized that Bianca had every counter argument and that she was right. Well, that was what Ashley's heart said but her head wasn't so keen on the idea. She came here to help Natalie heal and suddenly she found she was in desperate need of healing herself. With a shocking realization she concluded that she needed healing by Natalie.\n\n\"This can't be happening. She doesn't feel that way about me.\"\n\n\"She does, she just needs time to realize this and figure it out. This gives you time to figure your own feelings out. Just try Ash, you owe yourself that much.\"\n\n\"Yeah, whatever,\" she got up and stalked off to another room to clear her head.\n\nBianca took this time to get in touch with Devon and Kaz. She briefly explained what was happening and asked if they could come over for a weekend to visit. Both were over-protective but soon realized that Ashley could be good for Natalie and agreed to come. Ben and Dani were both excited by the prospect of adding the infamous Dr Simons to their dysfunctional circle.\n\n**********\n\nNatalie was sitting on the beach that Saturday, staring at the waves and trying to figure out why she couldn't get Ashley out of her mind. She wished Megan was there to give her the answers and tell her what she was supposed to do next but no answers came to her. Devon saw the contemplative figure of Natalie on the beach and held Dani's hand as they walked toward her with Ben and Kaz in tow.\n\n\"Is this all you do with your time?\"\n\nNatalie looked around and flew to her feet, jumping into Devon's arms and started to cry. The other three circled the large man and hugged the two intertwined figures.\n\n\"I missed you all so much,\" Natalie sobbed and clung to the group.\n\n\"We are here, Nat,\" Kaz said in a choked up voice.\n\nNatalie stepped back and looked at the four familiar faces, \"I am so sorry for everything. I didn't stop long enough to realize that we all lost Megan and Logan, I didn't think that you were experiencing a loss as big as mine and that you all shared my pain. I... I am sorry, I put you through so much.\"\n\n\"Hey, it's okay, we all learned something and the most important lesson was that nothing and no one can break us apart,\" Kaz said between sobs, clinging to her husband.\n\n\"We are all here, better and stronger than before. It might not be all of us anymore but the ones that matter are here and we will always be,\" Devon added and the three friends clung to each other and cried.\n\n\"So, how's the baby?\" Natalie asked as she wiped her tears.\n\nEveryone took turns to tell their stories and laughed at the antics they missed. Kaz and Ben were expecting a little girl and Devon and Dani got engaged. Natalie shared in the joy of their news and took a deep breath after telling them about the dream she had.\n\n\"I have a problem,\" Natalie said in whisper, staring ahead.\n\n\"You can't still be hesitant to tell us anything after everything that happened,\" Devon gently urged.\n\n\"I think I am starting to feel something for Ashley. But I'm not sure if it's because she saved me so many times or because of who she is. I'm not supposed to be feeling anything for anyone, I just lost my wife and here I am, almost a year later and I can't stop thinking about another women,\" Natalie said and didn't even try to wipe away the tears that were flowing.\n\n\"You just told us about this dream you had and you're questioning this. Megan would want you to be happy again, Nat. We all know and Megan knows that you will never forget her or your son but we all want you to be happy again,\" Kaz said before Devon joined in.\n\n\"We all love Ashley and honestly, she can handle you just as Megan could and you need that. She is amazing, Nat and she can offer you happiness, you just have to decide if you want it. Moving on doesn't mean forgetting, it simply means that you're taking control of your life.\"\n\n\"Face it, there's no doctor in this world who would do anything even remotely close to what Ashley is doing to help you,\" Ben added.\n\n\"We were sitting on the beach the other day and I told her about my dream. She opened up to me about something in her past and when she cried I held her. It felt right and that bothers me because Megan was supposed to be the only thing that ever felt right. I feel guilty and I feel like I'm letting them down when I spend time with Ashley.\"\n\n\"That's natural, we're not saying jump in now, just don't close the door without even considering the possibilities,\" Dani said quietly and smiled at Devon.\n\nThe group spent hours on the beach, talking and then fooling around in the sand and water. There was finally laughter again and this time when they saw the life back in Natalie's eyes they were relieved to know that this time it was because Natalie was truly healing.\n\n**********\n\nAshley watched the interaction between the friends and wondered if she could ever possibly fit into their circle. Would she be able to trust anyone enough again to find something even similar to what the friends seemed to share?\n\n\"Come join us on the beach,\" Kaz said, breaking Ashley musings.\n\n\"No, that's a moment between you guys,\" Ashley responded with a smile, but Kaz heard the underlying sadness.\n\n\"It's a friends moment and we all consider you part of that, so technically speaking you are missing out on a moment that should have been yours as well,\" Kaz took her hand and led her outside.\n\nNatalie looked at Kaz and Ashley approaching and smiled at the large belly that Kaz now had. Her eyes fell on the blonde following closely behind Kaz and she couldn't help but smile at the conflicting emotions that played across the beautiful face. Never could Natalie have imagined that the confident doctor could ever be so secluded and shy around other people.\n\n\"Did you finally get the reclusive Doctor to join us?\" Devon asked and smiled at the blonde.\n\n\"It took some convincing, she doesn't believe that we see her as part of our group,\" Kaz shrugged and stood beside Ben.\n\n\"You are as much part of this group of unstable friends as everyone else is. Well, we won't force you...\" before Natalie could finish, Kaz interrupted.\n\n\"Nat's lying, we will resort to violence and blackmail if we have to.\"\n\nAshley laughed and sat beside Dani on the sand, \"then I better accept it.\"\n\n\"Trust me, you will save yourself a lot of energy if you just agree. Been there, done that and I've got a spare T-shirt if you're interested,\" Dani chimed in.\n\nThe banter continued well into the afternoon and Ashley finally relaxed in the group. Bianca joined them and Ashley realized with a start that she felt as though she belonged for the first time in a long time. Everyone started disappearing to the house and when Natalie looked around she realized it was only her and Ashley left on the beach.\n\n\"It's a beautiful night,\" Natalie whispered into the silence.\n\n\"Yeah it is,\" Ashley shivered and Natalie moved closer to provide her with some warmth.\n\n\"Thank you,\" Natalie said into the ear of the woman between her legs.\n\n\"For what?\" Ashley looked into the blue eyes and couldn't look away.\n\n\"For saving me and for giving me the opportunity to experience some joy again.\"\n\n\"I didn't do anything other than my job,\" Ashley's voice also dropped and their face were mere inches apart.\n\nWithout hesitation or even giving it a thought, Natalie lowered her mouth to Ashley's and felt a gentle warmth spread through her when their lips touched. Ashley arms locked around Natalie's neck after she turned around and pulled the brunette closer to increase the contact. Natalie's tongue slipped between Ashley's lips into the silky warmth and their tongues glided together. Every second they spent kissing felt natural and easy, like a warm glow from the fire after the burning heat had died down. Both women knew that they had both had their burning heat relationships and that a comfortable glow with moments of blazing heat suited them just fine.\n\nThe kiss broke apart and they stared at each other, both waiting for the guilt and regret to get to them, but it didn't come. It was as though the universe was telling them that they had finally taken a step into the right direction. They knew that they still had much to learn about each other but suddenly looked forward to the journey.\n\nChapter Thirty Five May 2007\n\nNatalie had just arrived back in Johannesburg and was happy to finally be regaining some of her normal life. She was going to start work again in the week and things between her and Ashley was going great. Looking around the large house that once held all the happiness and laughter that Natalie could ever need, she broke down. Natalie fell to her knees and sobbed, not only had she lost her entire family in this house, she had also managed to lose Alice under this roof. She knew Alice didn't die here but her destruction had started in this room on that couch.\n\nKaz and Devon watched as Natalie sobbed, this time they didn't try to comfort her because they knew that Natalie had to face her demons head on if she was going to survive. Suddenly the four walls that held so much happiness only held screaming silences and the dreams that had been lost.\n\n\"I never even dreamed that this place could feel so unbelievably empty,\" Natalie whispered in a choked up voice.\n\n\"We lost a lot, Nat and now we all need to pull together to pick up the pieces,\" Devon said and sat on the couch.\n\nKaz sat next to him, \"just remember that we can do anything together,\" Kaz added.\n\n\"How can feel happy and empty at the same time? I mean, being with Ashley makes me happier than I ever thought I would be again. Way happier and yet I have this undeniable underlying emptiness and sadness,\" Natalie looked at the picture of her Megan, tears streaming down her face.\n\n\"You lost a part of yourself and you only just started to try and rebuild that. Just remember that it will never be the same and that you shouldn't question your current relationship based on what you had with Megan,\" Kaz said and disappeared into the kitchen to make coffee.\n\n\"I guess moving on, letting go and rebuilding everything seems like an impossible task to me.\"\n\n\"Think about it this way, Nat. If you were stuck in a cave, your leg was trapped under a boulder and there's no one for miles, what would you do? You have to survive and your only chance of surviving is cutting off the limb that is keeping you trapped. Isn't that the same as losing a part of yourself to survive? Then you get back to civilisation and you have a hard time adapting and getting used to only having a part of you left. Doctors start constructing and building a new limb for you and you know it will never be the same again but it heals that part of you that needed healing. That's what you're doing, Nat, you're rebuilding what you lost and it will never be the same but it could be better or just the same depending on how you choose to deal with it. You can make a new life for yourself and replace that deep hurt and sadness with happiness again, it depends on whether you want to be whole again,\" Devon said and stood next to Natalie as she looked at the sonar of their child.\n\n\"I want to be happy, Dev. In truth, I want to be happy with Ashley, she makes me feel again and there is something in her and about her that makes me want to be strong again and love her regardless. This is going to be so hard,\" she wrapped her arm around the large man and stared at the picture with him.\n\n\"Then you'll be happy, Nat. Just don't give up.\"\n\n**********\n\nAshley walked through the door that night and hugged the gentle woman she had quickly come to love and trust. She wasn't worried about the physical aspect of their relationship because she knew Natalie wasn't ready to truly be touched that way again and Ashley was unsure if she could allow another to touch her way.\n\n\"Hi,\" Natalie whispered and kissed the soft lips.\n\n\"Hmm, hey,\" Ashley leaned against the strong body.\n\n\"I made dinner,\" Natalie announced and led the way to the kitchen.\n\nThey ate together and Ashley told Natalie about the surgeries she performed. Their bodies were close because they craved the contact and simply loved being close to each other. There was a comfort between them that neither could explain but didn't question either, instead they basked in the glow of what they shared. The women cuddled closely on the couch and watched a few sitcoms, during an ad break Ashley turned around and captured Natalie's lips.\n\nTheir lips moved together and their hands gently started to explore while soft moans escaped their lips. Natalie ran her tongue against the soft lips and asked for entrance, the request was quickly accepted and Ashley ran her tongue against Natalie's. A duel between their tongues started and their arms quickly started to pull the body against their own closer, moving against each other.\n\n\"Let's go to bed,\" Ashley whispered breathlessly.\n\nWithout a word Natalie took her hand and led her up the stairs to the guestroom she now occupied. She couldn't bear to sleep in the room where she had once loved Megan. Once inside the room Ashley took charge, she didn't know what came over her but she needed to feel and experience everything Natalie had to offer. Lips came together in a hungry exploration and trembling hands pulled Natalie's shirt over her head. Slowly they undressed each other, almost as if repeatedly asking the other if they're sure about what was about to happen.\n\nThey fell onto the bed, Ashley straddling Natalie as their lips and hands explored the new territory. Soft lips travelled down her neck and kissed across her chest, paying loving attention to the large scar that covered Natalie's heart. Ashley captured a nipple between her lips and was rewarded with a sigh and an arched back. Her lips suckled on the puckered flesh and her tongue lovingly ran across the tip while her hand caressed the other breast.\n\nAshley paid the same attention to both breasts, her mind still asking how she could trust someone with her body so easily after everything she had been through. She nibbled down the taut stomach and kissed over the naked mound, before her tongue touched the soft, wet flesh there the answer hit her. Natalie is just as broken as I am and somehow we're healing each other. That's stronger than any amount of trust.\n\nHer tongue made contact and a loud gasp left the lips of her lover. She took Natalie's lips between her own and suckled gently, the body of the brunette thrashing on the bed at the sensations it created. While she suckled the pink lips her tongue searched for the clit that had peaked from beneath its hood and she fluttered her tongue over the hard nub. Natalie's hips started bucking against the beautiful face, her breathing loud, ragged and strangled while her hands tore at the sheets. Without warning her orgasm tore through her body and the scream caught in her throat as she stopped breathing and her body went rigid. When she relaxed Ashley crawled up her lover's body and kissed the panting woman.\n\nTheir roles were quickly reversed by Natalie who started worshipping the body beneath her. As Natalie kissed her body, Ashley simply marvelled in the feel of their bodies pressed together and her mind simply telling her how right this felt. There was not a moment of fear or hesitation in Ashley as Natalie lay claim to her body. Her body was in ecstasy after Natalie pushed her over the edge numerous times.\n\nAshley settled her head on Natalie's breast and basked in the afterglow of their love making, her finger idly tracing the scar of where she cracked open Natalie's chest to save her life the first time.\n\n\"It's ironic, you cut open my chest to reach my heart and get it to beat again, physically. Tonight you cracked it open again and made it beat emotionally,\" Natalie whispered against the blonde head.\n\nWarm tears ran down Ashley's cheek and kissed the scar that Natalie was referring to, \"it's healing nicely.\"\n\n\"Yeah, it is. In both ways and I only have you to thank for that.\"",
        "Both women felt the emotional shift in their relationship and tried to pull closer to the other. They wanted to be as physically close as they were emotionally and with tangled limbs they fell asleep. Their minds, heart and souls finally at peace after what felt like a long and hard battle.\n\nMegan looked down at the scene and felt her heart both break and rejoice at the love she saw between the women. Even here she still wished she could have been the one for Natalie but was happy to see that the tortured soul was finally finding peace. She rejoiced that Natalie had listened to her because it hurt even more to watch Natalie destroy herself.\n\nChapter Thirty Six March 2008\n\nNatalie was lying on the green grass, her head resting just below the tombstone that read Megan Scott and a rose lay on her chest as she stared at the blue sky above.\n\n\"I wanna tell you a story,\" Natalie began and twirled the rose.\n\n\"So about a year ago I kissed Ashley, I know I have told you this before but I guess I want you to understand. I waited for the guilt and regret to come but it didn't. Those last few weeks of my rehabilitation turned out to be a lot more than I expected. The kiss was nothing like the first one I shared with you, it was spectacular in a different way. After the kiss your words kept running through my mind, you know, when you said that I was the one for you but you weren't for me and I came to the conclusion that the universe was fucked up. I believe what you said now and I think sometimes we take a little detour in our lives. Suddenly we meet this person who just reignites the flame inside us and they become enough for us, they're not our soul mates but they fill that empty spot. Then the universe decides that we can't continue living on just having enough and then that person gets taken away. During that period we meet our soul mates and they play an important role in our healing and we suddenly realize what's happening and take the chance...\" Natalie was quiet for a moment, her thoughts running back to the time when she realized this.\n\n\"What I have with Ashley is nothing like what we had, we don't have the fireworks or the blazing heat. Instead we have this comfortable glow, don't get me wrong, we have enough passion to detonate a nuclear bomb, but nothing happened suddenly. There is this understanding and need we have with each other, a love that will last for the rest of our lives. I also learned that I can't compare one relationship to the other because you are two different people and the relationships are different. In the beginning I still found myself wishing it was you but that stopped when I realized what Ashley and I shared. Sometimes I wish people could write a book that tells you how to survive grief and loss, but each person is different. I don't know if I was supposed to feel guilty for moving on or if I was doing it right. It gets out of control when you start feeling guilty for not feeling guilty and then Kaz and Devon reminds me that you would've wanted me to move on and be happy. I want you to know that I am, happy that is. Back to the story, because of Ashley's past we didn't sleep together for a long time. It's hard for her to trust people and I don't blame her. When we finally slept together it was spectacular. Every time we make love it is different from you and I, but not lacking in any sense of the word...\" Natalie fought the tears that started to spill and let herself feel the loss for a moment.\n\n\"The reason I am here though is because I need to tell you something really difficult. Ashley and I decided to move to Cape Town, we feel like that was the city that brought us together and offered both of us a second chance at life. Now this part is difficult, I'm going to ask her to marry me. I am sorry that I'm leaving you and I promise I will come visit every chance I get. The company Head Quarter is also moving, so Devon and Kaz will be coming with us. I guess this is really goodbye. It doesn't mean I stopped loving you but it's time for me to let go.\"\n\nNatalie got up and dropped the rose onto the grave, she wiped her tears and whispered her last confessions of love to Megan before walking out of the cemetery gates and driving to her old house where everything was packed into boxes. She walked into the room she once shared with Megan and walked through the almost empty space.\n\nNatalie had only kept a few of Megan's belongings and she walked into the closet where Megan had kept everything. She remembered how she broke down in this small space and spent hours with Devon searching for the scrapbook that Megan had made. Her hands ran along the shelves as she remembered how much time Megan had spent in there getting ready for their evenings out. Natalie's hand bumped against something and she stood on her tiptoes to see what it was.\n\nShe pulled the large book down and cried when she realized that it was the scrapbook that Megan had talked about. Settling against the wall she started opening the book and cried harder when she saw the picture of them all in the pool on the day they had met. One of the best days of my life, the day I met you, was inscribed below the picture. She paged through the book and sobbed when she saw all of the happiness that they had shared and suddenly she realized that she couldn't leave. If she left here she would be away from the last bit she had left of Megan and Logan.\n\nDevon looked at the figure sitting against the wall and felt his own tears sting his when he realized what Natalie had found, \"you found it.\"\n\n\"I can't leave Dev. If I leave I leave them behind and I can't do that.\"\n\n\"You'll never leave them behind, Nat. They're in your heart, your soul and your memories. Megan would have wanted this for you and in truth, we all want this for you. You're happy again and you're sharing something beautiful with Ashley, something that inspires the greatest love stories. You and Megan had something similar, but with Ashley there is that something extra. Don't sacrifice that for haunted memories, Nat.\"\n\nShe looked at her friend and smiled at him, he was right and she knew it but this was difficult. This was like skinning her alive and leaving her to feel the burn of the muscles where the skin was torn from. Then she remembered how Ashley feels in her arms and it was like putting ice on her burning flesh and soothing the wounds.\n\n\"I love her, Dev. I went to see Megan today and I told her everything. This has been the hardest thing for me, I lost my one love and I am so afraid of losing Ashley too. I am going to ask Ashley to marry me when we get back in Cape Town,\" Natalie rested her head against the large shoulder and felt the jerk of the body.\n\n\"Are you serious? Oh my God, that is the best news I have heard in a very long time!\" the large man jumped to his feet and pulled Natalie into a bone crushing hug.\n\n\"It's time to make some new memories,\" Natalie said into the broad chest.\n\n\"Can I donate the sperm again? I really want to help you guys have kids.\"\n\n\"Whoa, let's just see if she will marry me first before we start planning a family,\" Natalie said with a laugh and looked at the scrapbook in her hands.\n\nI hope you're happy for me Megan. I don't want to leave you but I need to be able have a life again, baby girl. What we shared was special and you will be immortal in my memory.\n\n**********\n\nThey parked in front of their new house, the same one where Natalie had come for rehabilitation and she and Ashley found each other. They looked at the large structure and slowly got of the car, Devon, Dani, Kaz, Ben and little Jada stood behind them. Natalie picked Ashley up and walked toward the door with a giggling woman in her arms. This moment was important and Natalie wanted to carry Ashley over the threshold of their new home and their new lives.\n\nThe others followed close behind and looked at the fully furnished house, the walls already held their pictures and the memories they had created. Natalie put Ashley down and looked into the blue eyes, they were standing in the middle of their new beginning and Natalie realized there would never be a better time than now. Everyone that she cared about was here and she was about to start a new life with the woman she loved.\n\nShe got onto one knee and fished the ring from her pocket, she looked into the face of her lover and held the tiny jewellery box in her hand, \"I know this is not the most romantic way but this is the perfect time. Ashley, you have healed me in so many ways and I love you with a fierce intensity. Will you marry me?\"\n\nNatalie opened the box and revealed a simple platinum ring with a large blue diamond. Ashley kneeled in front of Natalie and kissed her, mumbling \"yes,\" over and over again. The rest of the group rejoiced and cried when Natalie slid the ring onto the slender finger.\n\n\"Okay, she said yes, so can I be the sperm donor again?\" Devon asked.\n\nAshley pulled away and looked at him, she laughed and cry when she saw the complete acceptance in the faces of the people she had adopted as her family, \"I don't think that would be a problem. As long as it's in a cup and you waited until we got married and settled down.\"\n\nNatalie laughed when Devon did a fist pump and held the woman she loved in her arms. Suddenly her world felt whole again and she was looking forward to the future and finally being able to grab everything she had ever dreamed about. Everyone moved in a circle around the happy couple and hugged them tight.\n\nLife had changed in the past year for all of the friends, Kaz and Ben had a beautiful baby girl, Devon and Dani got married and was expecting their first kid and now Natalie and Ashley was finally starting their lives together. Kaz looked at her friends and realized that they could all finally have their happily ever after's.\n\nChapter Thirty Seven November 2008\n\nIt was a warm sunny day in Cape Town and the house was bustling with guests from all over the country. Some of Ashley's colleagues bustled about and her elderly grandmother was on the lawn in her wheelchair looking over the ocean, a smile on her wrinkled face.\n\n\"Are you okay, ma?\" Ashley asked and stood beside the woman.\n\n\"After everything that life has thrown at us, at you, you're finally taking that leap and finding true happiness. It makes me so happy to be here today and watch you get married. Your mother and grandfather would have been proud to see you today. I am so happy,\" the woman said in a trembling voice.\n\n\"You and grandpa saved me. Natalie helped me put all of the pieces together and I never thought I would experience true happiness after Jean but Natalie showed me that I could.\"\n\nThe two women went inside and Ashley wheeled her grandmother to the room where she was to get dressed. Kaz and Dani helped her get into her dress and all the women smiled when they saw the beauty of the blonde woman. Her white dress was simple and strapless, it hugged her body and flowed easily around her curves. The blonde hair was done up and her blue eyes sparkled, revealing the happiness she felt.\n\nNatalie stood on the beach, away from the aisle and altar where they were to say their vows. She looked across the ocean and smiled, her hands in her pockets.\n\n\"Well, Megan, this is it. I am finally letting go and moving forward. Ashley and I are going to start a family after we get married and I am going to live the life that I had always dreamed of. With this day drawing nearer I kept thinking about you and I wonder what if you were both still alive. But mostly I wonder I wonder what I would have done if had gotten a second chance at life. Would I have saved you or have everything play out as it did? I can't find an answer and I realized that there isn't one. I would never be able to choose between you two because what I have and had with each one of you is special and spectacular in different ways. But I decided to focus on what I have right now and Megan, I have found happiness and if I am to embrace it fully I have to let go of you. I will always remember you but right now I need to take my heart back because there is a woman who is going to walk down that aisle to me and promise her life to me. She has given her whole heart to me and today when I say 'I do', I am going to do the same. Thank you for the life you spent with me and I will always love you but I need to let your ghost rest.\"\n\nThe chairs that were set out on the beach started filling up and Devon walked to Natalie, \"are you ready?\"\n\n\"I am more than ready. I am going to give her my whole heart today and I am going to give her the life she deserves, Dev. Let's go get married!\"\n\nNatalie stood beside the attorney they had asked to marry them, her black suit immaculate and her black shirt crisp. She wore a green tie and was barefoot, they had agreed that everyone would be barefoot at their wedding and she smiled at the few guests that were gathered there. They had agreed to only invite the people who mattered to them and keep the ceremony small. Devon stood beside Natalie, dressed similarly to her and Ben stood beside Devon.\n\nAshley had decided to invite Jean, feeling the need to finally close that chapter of her life. Jean sat in the middle and felt her heart break at the thought of Ashley marrying someone else. Chad and their two daughters sat beside her and she found herself wondering for the millionth time what would have been if she had stayed with Ashley. She heard the wedding march and rose with the other guests, her breath caught in her throat when she saw the raw beauty of Ashley in her wedding dress.\n\nAshley followed behind Jada who threw rose petals in the aisle they walked down and Dani and Kaz followed the bride. They wore green dress and Jada wore the same. Ashley reached her grandmother and hugged her.\n\n\"Who gives away this woman?\" the attorney asked.\n\n\"I do, with the all the happiness and love in the world,\" the elderly woman said in a choked up voice.\n\nNatalie kissed the woman's cheek and took Ashley's hand, they stood in front of the attorney as he spoke about love. They had each agreed to write own vows and before they started Duncan walked down the aisle with the rings. He stood in front of them and waited patiently as the women spoke.\n\n\"Natalie, the way we met was anything but conventional and yet we somehow made it through. We were two broken souls and you had help me heal and I discovered that there was a strong, passionate and unconditional love. I found that love with you and I stand here today, promising my life, my love, my soul and my whole heart to you, for the rest of my life,\" she slipped the silver band around Natalie's finger.\n\n\"Ashley, I have said this to you before, but you once cracked my chest open to get my heart to beat again and repair the damage. That day and two other times, you saved my life and continued fighting to keep me alive. Then one day, on this very beach you cracked my chest open again and repaired my heart emotionally. I still carry the scars from the first time, but you have made that heal too. Today I vow to give you my whole heart and I promise to always make you happy and give you the life you deserve, forever,\" Natalie slipped a similar band onto Ashley's finger.\n\nDuncan walked to his dad and the two women kissed, \"I now pronounce you, life partners.\"\n\nTears spilled over cheeks as Natalie led Ashley toward the house where they're reception was going to be. Everyone danced and made toasts, then Jean approached Ashley and asked her to dance.\n\n\"You seem happy,\" Jean said against the blonde head.\n\n\"I am, Jean. I truly am. I found someone who loves me unconditionally and wants to be with me. It's funny, I never thought I would ever be happy again after you but now I am happier than I ever imagined possible.\"\n\n\"I still love you, Ashley and I wish every day that I didn't do what I did. Don't get me wrong, I love Chad and my girls, but I find myself wishing that it was you I shared it with.\"\n\n\"Stop wishing for that, Jean. I stopped and the only thing I will ever wish for, is that I can make Natalie as happy as she made me. I am over you Jean and you decided that for us, so maybe you need to decide to let go.\"\n\nThe song ended and Ashley walked to her wife. They shared a long kiss and then Devon came up to them, \"we have to leave if you're going to make your flight.\"\n\nThey said their rounds of goodbyes and headed for the airport.\n\n*********\n\nThe plane landed in Mauritius and a car took them to their bungalow on the beach. The driver carried their luggage inside and once he was in the car again Natalie carried Ashley over the threshold of another major step in their lives. Natalie lay her bride down on the bed and they started a slow love making, touching and kissing every inch of skin they could reach.\n\nAshley had thought long and hard as to what she could give Natalie on their wedding night. She came up with the perfect gift but it scared her because this meant a new level of trust for her. Her head was resting on Natalie's chest when she looked at her wife and lover.\n\n\"I want to give you something truly special to me,\" Ashley whispered.\n\nNatalie looked at Ashley with confusion when she got up, her eyes following the naked form as she looked for something in her bag.\n\n\"With everything that happened to me, the rape and molestation, my virginity was taken without me having given it. That also left me with deep rooted problems and tonight I want to offer you something that I physically don't have but emotionally it is still there. With that gift I will also be giving you my ultimate trust,\" Ashley crawled up Natalie's body.\n\nShe showed her the strap-on she had purchased and asked the silent question. Natalie started crying, firstly for the memories this invoked in her and secondly for the trust that her wife was placing in her. This was also a request from Ashley to help her overcome the last of the demons that plagued her. Natalie accepted the gift and stepped into the straps, adjusting them to her body.\n\nShe crawled between her lover's legs, \"are you sure?\"\n\n\"Yes, just be gentle,\" Ashley said and fought the fear that was once again beneath the surface.\n\nShe felt the head of the phallus at her entrance and swallowed hard in attempt to fight the fear. Natalie pushed her hips forward gently, letting the phallus slowly enter her lover. Her eyes were on her lover, trying to gauge her reactions and determining whether Ashley was okay. When she had fully entered her lover she stopped and looked at the beautiful, sweaty face and kissed the soft lips.\n\n\"You okay?\" she whispered.\n\n\"Hmm, you feel good inside me. Just give me a moment,\" Ashley said and fought down the demon that was trying to take over.\n\nNatalie kissed her wife, her lips mashing against the soft ones and her hands running over the smooth skin. She was more than willing to give her lover all the time she needed. They kissed for long minutes before Ashley slowly started moving her hips and signalled Natalie that she was fine to continue. Their bodies moved together slowly, both getting used to the new sensations and the bond that they shared. Ashley arched her back and revelled in the full feeling and the large phallus moving and out of her. Her orgasm built slowly, going higher as she fought down each bit of fear that tried to grip her.\n\nNatalie moved slowly and lovingly, letting her lover know that this wasn't about violence but love and sharing something completely intimate. Ashley's fingers dug into Natalie's back and hips bucked faster and harder against her lover. The sensations became intense and she as she neared her orgasm. Perspiration covered their bodies as they moved together and then Ashley back arched and a loud moan escaped her lips as she experienced her first orgasm during penetration. Her legs locked around Natalie's back and she kept her inside.",
        "No words were said between the lovers, instead they kissed and then Ashley started moving her hips against her lover again. They made love until the early hours of the morning and they collapsed in exhaustion.\n\n**********\n\nThey spent a lot of time on the beach, fooling around in the sand and water. The happy couple played and chased each other, then they would lie on the beach and tan. Their honeymoon had been pure bliss and they started talking about starting their family. After a lot of discussion they had decided that Devon would be their donor because that would make them an even bigger dysfunctional family. The group was very close and they wanted to instil that bond of trust and friendship between their kids too.\n\nChapter Thirty Eight September 2010\n\nAshley was rushed into the hospital by Natalie when her water broke. Fear and anticipation filled the brunette as she watched the doctors prepare her wife for the birth of their daughter. She was quickly shuffled to another room to get into scrubs and then led to her wife's side. Natalie held onto her lover's hand and whispered words of love to her.\n\nThe birth took a couple of hours and Ashley was completely worn out when their daughter was finally part of their world. Natalie took the tiny human into her arms and cried, she settled on the bed next to her wife and both women fussed over their new born.\n\n\"Hi Isabella,\" Ashley whispered to her daughter.\n\nA bush of dark hair covered her head and when she opened her eyes they saw the same expressive blue that both her mothers had.\n\n\"She's so beautiful,\" Natalie whispered.\n\nAn ear piercing shriek came from the tiny body and the nurse said that it was time to feed the crying baby. Natalie watched in amazement as her wife fed their daughter and smiled at the bond that was rapidly building between the two. When they found out that they were expecting a girl they agreed to name her after Ashley's grandmother who had passed months earlier.\n\n**********\n\nThe happy parents quickly settled into a routine and loved every second of parenthood. They took turns in getting up at night when Isabella cried and a year later they decided to add to their little family. Everyone was surprised when they found out that they were expecting twins and rejoiced when they heard it would be a boy and a girl.\n\nThe months passed quickly and soon the women found themselves with a house full of kids and laughter. Their passion was still strong for each other and their family was happy and healthy. Devon and Dani also had two more kids and Ben and Kaz stopped after the second. Christmas was always a joy and filled with mischief when the group got together to celebrate the holidays. Ashley and Natalie's kids knew that Devon was their biological father and that his and Dani's kids were their siblings.\n\nPresent...\n\n\"We have to get up, Devon and Kaz and their broods will be here in an hour,\" Ashley said but clung to Natalie.\n\n\"Do you think they'll mind if we just stay right here?\"\n\n\"No they won't but I'm not so sure how our little rebels will feel about finding their parents naked and writhing against each other.\"\n\n\"That won't be good, I am not ready for the flowers and bees talk. Or the bees and or the flowers and flowers talk either. I mean whatever way they decide to swing one day.\"\n\nThe women dragged themselves out of bed and jumped through the shower before bathing their kids and starting breakfast. Devon and Dani showed up first and the kids immediately disappeared into the backyard to play while the parents talked and cleaned up. Kaz and Ben came and after a quick greeting from their kids they also disappeared.\n\n\"I love how they just disappear when we get here, it gives us a good break,\" Kaz said and poured herself some wine.\n\n\"We kind of asked to be overworked when we started families,\" Devon said and sipped his beer.\n\nThey spent a long time talking and then the two men and Natalie disappeared to watch the kids. It was an eventful afternoon and when everyone left Ashley and Natalie set about getting their rebels ready for bed. Natalie had the twins in the bath and Isabella was helping to wash them. Ashley stood by the door and watched her family, the warmth of happiness and contentment filling her heart. She watched the games and water splashing across the floor.\n\nNatalie laughed with her kids and even though she still thought about Megan, her life was full enough now to have replaced the emptiness that once was there. She thanked whatever God was out there for bringing Ashley and their three kids into her life. After reading bedtime stories the women finally settled in bed and cuddled. They basked in the contentedness they were feeling before falling asleep."
    ],
    "authorname": "SAbitch",
    "tags": [
        "lesbian romance",
        "romance novella",
        "lesbian drama",
        "drama",
        "lesbian love story",
        "soul mate"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/junky-chronicles-ch-04"
}