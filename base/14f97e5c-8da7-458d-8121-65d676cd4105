{
    "title": "Justine Ch. 22",
    "pages": [
        "Zoe's head pounded as she dealt with yet another dignitary wanting to make changes in his accommodations. Not only did he want to change his accommodations, he wanted to change the name on his guest list. With the gala being less than a month away, the calls were coming in more frequently and those making the request were becoming ruder\n\n\"I'm sorry Ambassador Bohannon, but that isn't possible.\" Zoe said in her most reasonable tone of voice.\n\n\"Do you know who I am?\" The vampire screamed at her.\n\n\"I am very aware of who you are.' Zoe replied. \"But the deadline for any changes was last week.\"\n\n\"I want to speak to your superior!\"\n\n\"My superior is the Queen.\" Zoe replied her tone cooling. \"I'm sorry that the guest can't come with you, but I'm sure that you understand the security issues.\"\n\nThe vampire hung up on Zoe a few minutes later vowing to lodge a formal complaint. The next caller was more reasonable and the change they wanted was simple enough.\n\nBy the end of the night, Zoe and Pam had had enough.\n\nTo add to an already stressful situation, the royal wedding was going to take place the night before the gala officially started. Both Zoe and Pam hoped that if there was another gala that it would last no longer than a weekend. \n\nThey knew Justine well enough to know that a one night gala wasn't going to happen. But that was a battle for later. This gala was less than two months away and even after two years to get ready; they were still scrambling to wrap up the loose ends. The calls like the one from Ambassador Bohannon weren't helping.\n\nThe only part of the event that was taken care of was the wedding. All of the issues regarding it had been cleared up. There was no ceremony to prepare as it was already written, no music to choose and no minister to argue with about the length of the ceremony although Justine tried.\n\n\"Two hours?\" she asked when she read through the program. \"Two hours?\"\n\nViolet sat with her hands in her lap and let Justine rant. It would do no good to interrupt her.\n\n\"Half of this shit could be cut out!\"\n\n\"I understand.\" Violet said when Justine had finally stopped for a breath, \"But you must understand, you are our last Queen. There will never be another wedding like this.\"\n\n\"I have no say in this?\" Justine asked.\n\n\"You can add to it; but you can't detract from it.\" Violet said. \"I know that it seems excessive, but each part fulfills a role that cannot be skipped. It would be like baking a cake and not putting it the vanilla; it wouldn't taste right.\"\n\n\"Damn Violet.\" Justine said with resignation in her voice. \"What else do I have to do?\"\n\nViolet took a deep breath and prepared for the next challenge- the wedding dress. \n\n\"You need to try on the wedding dress.\" Violet said softly. \n\n\"What wedding dress? I didn't pick out a dress.\"\n\n\"No you didn't.\" Violet conceded. \"This dress was made centuries ago just for this occasion.\"\n\n\"And I suppose that I have no choice in that either?\" Justine asked dryly.\n\n\"Well actually you do.\" Violet replied. \"There is some leeway in the design of the dress.\"\n\nViolet knew that Justine would hate the dress. She would consider it too gaudy and the truth of it was; Violet agreed with her.\n\n\"Where's the dress?\" Justine asked. She wanted to get it over with so that she could concentrate on the gala.\n\n\"It's in a vault downstairs... would you like to go see it?\"\n\n\"Sure.\" Justine replied. \"Let's make it a party. Call my mom and the others.\"\n\n*******\n\n\"What in the fuck is that?\" Justine asked when she saw the dress.\n\nShe walked around it horrified. \n\n\"Who in their right minds would wear something like that?\" she asked as she looked at the dress.\n\nIt wasn't the color that she objected to. It was a deep red that matched her eyes. It was what appeared to be millions of jewels that covered the dress from neckline to hem. The style of the dress was far from complimentary for someone of her physical build. It was meant for someone small and petite with a perfect figure and not a curvaceous woman with big breasts, hips and ass.\n\n\"I'm not wearing that.\" she said in a tone that brooked no argument. 'It's ugly and every fat roll that I have would show.\"\n\n\"But Justine...\" Violet started to say.\n\n\"Violet I don't give a rat's ass about whose going to be offended. That dress is an offense and I'm not wearing it.\"\n\nViolet looked at Josephine and then Pam for help.\n\n\"Don't look at me.\" Pam said. \"I agree with her.\"\n\n\"Same here.\" Josephine and Zoe said.\n\n\"Excuse me.\" Lottie said quietly, \"Does the creator of the dress still live?\"\n\n\"Emmanuel is the creator and yes he still lives.\" Violet replied. \"Why do you ask?\"\n\n\"If the issue is whether he will be offended or not; maybe he won't be if someone talks to him.\" Lottie replied.\n\n\"Where does he live?\" Justine asked.\n\n\"He lives all over the world.\" Violet replied. \"He's never in one place for long.\"\n\nJustine closed her eyes and then opened them.\n\n\"He's in Canada... he'll be here in a day.\" She said. \"Until then, let's work on the gala.\"\n\nEven after all that they witnessed, all of them; Josephine included were still surprised at what she could do.\n\n********\n\nEmmanuel arrived early the next evening. He was a pleasant looking vampire with dark brown hair and eyes who favored brightly colored clothes.\n\n\"I've been waiting for the summons.\" He told Justine and Quinn. \"In fact, I thought that it would come much sooner than it did. The gala is less than two months away.\"\n\n\"Yes I know.\" Justine replied. \"I just saw the dress yesterday... may I be honest?\"\n\n\"By all means.\" Emmanuel replied.\n\n\"I don't mean to be rude, but that dress... it's not me.\" Justine said.\n\n\"I agree.\" Emmanuel replied. \"You have to remember that I created that dress centuries ago when gaudy was in style. I can see by the way that you are dressed that you have much simpler taste. I can also see that the style is wrong as well. Give me two nights then come see me. I think that you'll be pleased.\"\n\n\"Thank you for understanding.\" Justine said.\n\n\"You are quite welcome my Queen. I also took the liberty of bringing some of my other designs with me. I would be most honored if you accepted any or all of them with my complements.\"\n\nQuinn watched the vampire with interest. He didn't quite trust him. As Justine and Emmanuel talked, Quinn slipped into his mind. The only thing that he saw was that the vampire was attracted to Justine and not as a friend. He understood the attraction, Justine was a beautiful woman; but he didn't like it. He poked around for a few more seconds and deemed Emmanuel for the most part harmless.\n\n\"I also designed some things for you sire.\" Emmanuel said. \"I hope that you will accept them with my complements.\"\n\n\"Thank you.\" Quinn said. \"Where are you staying?\"\n\n\"I have a home not far from here.\" Emmanuel replied. \"But if I stayed here, I could work on the gown nonstop until it is as the Queen desires.\"\n\nQuinn gave Emmanuel a long assessing look before looking at Justine.\n\n\"Of course you can stay here.\" Justine replied as she looked at Emmanuel. \"I'm sure that you noticed the drain on your powers.\"\n\n\"Yes I did.\" Emmanuel replied.\n\n\"You won't regain them until you leave.\" Quinn said watching the vampire's reaction.\n\n\"Oh my... I'll need some of them so that I can work on the dress.\" Emmanuel said.\n\nImmediately he felt a return of some of his powers.\n\n\"The only ones that are restored are those that you need to work on the dress. You won't be able to vanish from one place to the other. The only speed you will have is for working on the dress.\" Justine said.\n\n\"I understand.\" Emmanuel said with a bow of his head. \n\n\"Good.\" Justine said. \"Darren will show you to your room and see to your needs.\"\n\nAfter Emmanuel was gone, Justine turned to Quinn.\n\n\"Did I see the green-eyed monster?\" she teased.\n\n\"No....\"\n\nPam burst in before Quinn could finish his thought.\n\n\"Justine, I've had it!\" She exclaimed. \"I'm tired of dealing with all of the rude assholes who knew when the deadline for making changes was!\"\n\n\"Pam.\" Quinn said, \"What's the problem?\"\n\n\"All of us are getting tired of being yelled at and being treated like shit when we won't give in. When we remind them that the deadline has passed and that the directives came from you...\"\n\n\"Call Auggie.\" Justine said. \"I'll make a statement.\"\n\n\"You will?\" Pam asked.\n\n\"Yes... now call him and let me know when he's ready.\" Justine said.\n\nA few minutes later, Justine and Quinn were sitting in front of a computer monitor talking to Auggie.\n\n\"I want this to be one of those special broadcast things on every station including the radio and internet.\" Justine said.\n\n'You got it.\" Auggie said. \"Can I make a request?\"\n\n\"Don't tell me.\" Quinn said. \"You're getting slammed with emails and phone calls too.\"\n\n\"Yes.\" Auggie replied. \"We can barely manage the website because we're being bombarded for information. We're trying to post daily updates, but as soon as it posts; we're already slammed for the next update.\"\n\n\"I'll address it.\" Justine said. \"How long before we're ready?\"\n\n\"Give me five minutes.\" Auggie replied.\n\nWhile they waited for Auggie, Quinn kissed Justine's cheek.\n\n\"We need to meet with Mikhail and the others when we're done here.\" He said.\n\n\"Yes I know.\" Justine replied. We need to get this security thing nailed down.\"\n\n\"Okay... I'm ready.\" Auggie said. \"Remember to look into the camera. It helps with the transmission.\"\n\nThe light on the camera blinked signaling that Justine could begin.\n\n\"Good evening everyone.\" She started. \"I apologize for interrupting your favorite television and radio shows, but there are issues that need to be addressed. I'll start with the website first. It has come to my attention that the website is being spammed for information even after new postings. I am commanding that this stop. Information is posted on a daily basis and spamming the site will not hurry the next update. So once again, do not email or call for information.\n\nThe next issue is the phone calls that our staff has been receiving. Each invitation contained the dates of the gala, a RSVP card and another card which gave the dates for which changes would no longer be accepted. That date passed two weeks ago and yet our staff is still getting calls demanding that changes be made. Those dates remain firm so do not call asking to make changes.\n\nDo not call asking to speak to me, the king, the Queen Mother or her mate. Our staff is following our directives. I understand that things happen, but I'm sure that you understand the security issues with having a weeklong gala. I want to be clear on something, if anyone and I don't care who you are, shows up with an unauthorized guest; you and the guest will be escorted off the premises. From this moment on, do not call asking for changes. This is my command.\n\nI will let you all return to your programs and I wish you a pleasant evening.\"\n\nThe light on the camera blinked once and went out.\n\n\"Thank you!\" Auggie exclaimed. \"That was perfect!\"\n\n\"Good... that should help.\" Justine replied.\n\n\"Are you ready to meet with the security guys?\" Quinn asked.\n\n********\n\nMikhail, Lorenzo and Maurice sat in the library waiting for Thomas and Edward to show up.\n\n\"Justine, Quinn, Josephine and David are coming too.\" Mikhail said.\n\n\"We're here.\" Quinn said as he and Justine walked in.\n\nA few minutes later, everyone was present.\n\n\"Alright.\" Mikhail said. \"As we all know, the wedding and gala are less than two months away. One of the things that we've been working on is a threat assessment. In other words, we were trying to figure out which of our mates are the most likely to be taken. We know that Justine, Quinn, David and Josephine won't be the direct targets. You would know within seconds where the danger was and would act accordingly.\"\n\n\"They'll try to get to us through one of you.\" David said.\n\n\"If anything were going to happen; yes.\" Mikhail replied. \"But not just us... any of the security people could be used which is why they won't know their assignments until just before their shifts start. They will not be allowed to trade assignments nor will they have the same assignments more than once. The same applies to those who will pose as guests.\n\nAll of us who have security teams are using them and they will each be checked before they start their shift. Maurice has hired Gremlin's clan to assist as well. They will be part of the visible security teams with Gremlin coordinating them. Any questions so far?\"\n\nWhen there were none, he continued.\n\n\"Any children and mates of the security teams will be taken to an undisclosed location which will be warded as well as guarded which leaves the issue of our mates. After exploring all of our options, we finally came up with one that all of us were comfortable with. Our mates must never leave our side. If they need the ladies room to freshen up; one of us must go in with them. We've already been talking with them about the importance of staying close to us and not wandering off.\n\nThere is no indication that there will be trouble; but we need to be prepared. It does help that the wedding and gala will be at the same place instead of in different locations as originally planned. Thank you for that.\" he said looking at Justine.\n\nAs soon as she heard their concerns, she compromised and bought a large parcel of land away from the city. The two hundred acre parcel now had hotels and anything else that would be needed for the gala.\n\n\"I'm going to let Thomas explain what he's doing.\" Mikhail said and sat down.\n\n\"One of the buildings is an infirmary where three doctors and three nurses will be on duty at all times. For us there will be another set of medical staff that will come to our suites if they are needed. The infirmary will be stocked with the antidotes to the most common poisons and a few of the rare ones.\"\n\n\"What if the poison is one that you don't have the antidote for?\" David asked.\n\n\"That isn't a problem.\" Thomas replied. \"All that would be needed would be a drop of a missing ingredient. You see, the base of all of the antidotes is the same.\"\n\n\"Would the medical staff know which one to give or which ingredient to add?\" Josephine asked.\n\n\"Yes... all of the medical staff must have a working knowledge of poisons and their antidotes. I should also mention that the antidotes will also be in the kitchen and in the different food areas.\"\n\nThe meeting continued into the early morning hours and still there were things to work out. There were still too many unknowns. Justine stopped in to see if things had improved for those manning the phones.\n\n\"Thank you!!\" Zoe exclaimed as soon as she saw Justine.\n\nThe calls had trickled to practically nothing and those who called had missed the broadcast.\n\n\"You're welcome and let me know if it starts again.\" Justine replied. \"Do you need anything else?\"\n\n\"No we're good.\" Pam replied. \"We're about to shut down for the day. I can't wait to see what Emmanuel does with your dress.\"\n\n\"Me either.\" Justine said. \"It's got to be better than what it was.\"\n\n\"True, but I think he'll come up with something that you'll like which reminds me, are we invited to the big wedding?\" Pam asked.\n\n\"Of course you are!\" Justine exclaimed. \"Why wouldn't you be?\"\n\n\"I... we didn't want to assume.\" Pam replied.\n\n\"Pam, you are my best friend. We suffered through college and law school together, took the BAR together and became vampires together. Zoe has been here for me from the beginning, so yes all of you are coming to the wedding. I wouldn't have it any other way. Why don't you all get with Emmanuel and have him design your gowns for the wedding? My treat.\"\n\n\"Are you serious?\" Pam asked.\n\n\"I'm serious as a matter of fact; I'll talk to him about designing the dresses for all of you including Regina and Naila.\" Justine said.\n\n\"That would be awesome!\" Pam exclaimed.\n\n\"Good. I'm meeting him tomorrow night you can all come with me.\" Justine said.\n\n\"I'll tell the others.\" Pam said as she stood up and stretched.\n\nJustine went to the office that she shared with Quinn and called Regina.\n\nOver the past two years, Regina and Naila had become two of her closest friends. When she needed a little more normalcy in her life; she always reached out to them.\n\n\"Regina? How are you and my goddaughter? Poor Jon! And how is Naila? She's there with you? Can you put me on speaker phone?\"\n\nJustine looked at a picture of her and Quinn while she waited.\n\n\"Okay, we're good.\" Regina said. \"How are things going?\"\n\nA few minutes later they were laughing at Justine's description of her dress.\n\n\"You are joking aren't you?\" Naila asked.\n\n\"No joke!\" Justine replied. \"I mean it was uglier than the worst thing that you could imagine which leads me to the point of my phone call. Emmanuel, the designer of the dress is here. He's redoing the dress and I thought that he could design your dresses for the wedding.\"\n\nThere was a long pause before Naila or Regina spoke.\n\n\"We're coming to the wedding?\" Regina asked.\n\n\"Why does everyone think that they're not coming?\" Justine asked. \"Of course you're coming! Now, be here tomorrow evening and bring the kids; I want to see them.\"\n\n\"Thank you.\" Regina said. \"We'd be honored to attend your wedding.\"\n\n\"Good and besides, it I have to be uncomfortable in a gown and heels; so do my friends. I'll see you tomorrow evening with the babies.\"\n\nRegina hung up, looked at Naila and smiled.\n\n\"I love weddings!\" she said.\n\n********\n\nIf the Realm had been in an uproar when Justine was found, it was far beyond that now. The place had an entirely different feel to it since Justine made it possible for people to come and go as they wished. Every available room was in use as dressmakers from around the world appeared to make outfits for the wedding and gala. Along with them came the hairdressers and the makeup artists to work with the designers.\n\n********\n\nWilhelmina was long forgotten as the Realm prepared for the festivities. Gabra walked from room to room with a smile on her dark face. She loved the excited chatter and the music that was playing much too loud. Her mate Jian walked beside her with a hand on her back. They were both aware that they made an odd couple if only because of their nationalities; she was from Africa and he was Chinese. \n\nWhen they appeared in the realm after they passed on their reign, they were the topic of hushed discussions. It they noticed, they didn't let on. They took their walks around the grounds speaking to everyone they saw in soft voices. \n\nOne evening someone's curiosity got the better of them.\n\n\"Tell us.\" They said. \"How is it that a woman from Africa meets and mates with a man from China?\"\n\nThe conversations around them stopped.\n\n\"I mean let's think about this.\" The speaker continued. \"You're both over three hundred years old; how in the hell did you find each other?\"\n\nThat was a question that they had asked themselves from the moment they mated and they still had no answer except for one. It was the answer they accepted and no other answer mattered. Jian took Gabra's hand in his, brought it to his lips and kissed it. They had been wondering when someone would ask the question.\n\n\"We do not know.\" Jian said softly. \"We have decided that it was purely the work of the fates and we no longer question it. It is of no consequence to us.\"\n\n\"What do you mean that you don't know?\" \n\nThis time the speaker was Wilhelmina. It was obvious that she didn't believe them.\n\n\"He means exactly what he says.\" Gabra replied her tone cool. \n\nShe hadn't liked Wilhelmina on sight but had kept her counsel. The room remained silent as the two former queens assessed each other. Everyone was surprised when Wilhelmina backed down under Gabra's cool stare.\n\n\"I meant no offense.\" Wilhelmina said with a bow of her head that further astounded everyone. \"I was merely .... Well, never mind; please accept my apologies for my rudeness.\"",
        "Gabra and Jian both accepted; but knew that the apology wasn't sincere. Later they would talk in the privacy of their suite.\n\n\"Lien ren-sweetheart.\" Jian said as he rubbed Gabra's neck. \"She means trouble and she bears watching.\"\n\n\"I know.\" Gabra replied as she turned to face Jian. \"But not yet. We must also watch her mate. His life will be endangered.\"\n\n\"Noted.\" Jian replied. \"We must watch and wait for the Queen of Queens. She is the one who must deal with the traitor.\"\n\n*******\n\n\"Gabra?\" Jian called softly bringing her back from her memories.\n\n\"Yes lien ren?\" Gabra replied.\n\n\"If we are to help the queen we must leave here soon.\" He replied.\n\nGabra stopped walking and looked at him. While they were both Clairvoyant, Jian's gift leaned more to the near distant future while hers was geared to the immediate future. She had learned long ago that whenever Jian spoke; he knew something.\n\n\"What do you know?\" she asked softly.\n\n\"Nothing for certain.\" He replied. \"But I feel that we must go soon.\"\n\n\"Then we shall go.\" Gabra said. \"We will speak to her tonight.\"\n\n\"It will be good to see Thomas and Lottie again.\" Jian said with a smile that lit up his face and made his light brown eyes sparkle.\n\n\"Yes it will.\" Gabra agreed. \"Shall we finish our walk before we send our summons?\"\n\n\"Of course.\" Jian replied taking her hand. \"Let's continue.\"\n\n********\n\nJustine had just finished adding bath oil to the Jacuzzi when the summons came.\n\n\"Got it!\" Quinn called in to her. \n\nA moment later, he called into her.\n\n\"Jussie, you might want to hear this.\"\n\nJustine sighed and shut off the water. No matter how hard they tried to keep business out of the bedroom; sometimes it slipped in.\n\n\"Who is it?\" she asked as she walked into the bedroom.\n\n\"Gabra and her mate Jian.\" Quinn replied. \"They want to speak with us.\"\n\nJustine stood in front of the portal next to Quinn and greeted the couple.\n\n\"Hello! I was expecting to hear from you long before now.\"\n\n\"Yes my queen; but the time wasn't right.\" Gabra replied. \"Please, may I introduce you to my mate Jian?\"\n\nAfter the introductions were made; Gabra explained what they wanted.\n\n\"When you came to the realm to deal with the traitor; we spoke briefly. I told you that I would like to offer my services to you.\"\n\n\"I remember.\" Justine said.\n\n\"As I mentioned a few moments ago, the time wasn't right. Jian and I needed to stay in the realm.\"\n\n\"Why is the time right now?\" Quinn asked.\n\n\"My King, it you will allow me to explain what we offer; it will become clear.\" Gabra said.\n\n\"We're all ears.\" Quinn said as he put an arm around Justine.\n\nGabra nodded her thanks and continued.\n\n\"Jian and I are both clairvoyants. We have other gifts but the clairvoyance is the primary gift. We knew many years ago that Wilhelmina was going to betray the Queen of Queens but we couldn't do anything. It was for you to handle. We also knew that Thomas' life would be in danger so we watched over him as best we could and when the time came; I warned him.\n\nJian's gift is aimed at the near and distant future while mine is the immediate future although our gifts at times overlap. At the moment it is his gift that is at work. I detect no immediate danger but I have learned that when he speaks, it means something.\"\n\n\"Tell us what you know.\" Quinn said to Jian.\n\n\"At this point in time not much other than it is time for us to offer our services. We know that nothing is happening at this moment because Gabra would know. We are aware that you have little reason to trust us and we invite you to search our hearts and minds.\"\n\n\"My Queen.\" Gabra said softly. \"We are at your disposal. Jian and I have both sworn our loyalty to you and yours. We are at your command.\"\n\nThe red flames in Justine's eyes flickered as the green flecks floated lazily between the flames. She looked first at Gabra and then at Jian and nodded. She waited for Quinn to finish his assessment before she spoke again.\n\n\"Come for dinner tonight. I want you to meet my mother and her mate.\"\n\n\"You wish to confirm what you already know to be true.\" Jian said. \"That is wise.\" He added.\n\nA few moments later, the portal closed.\n\n\"What are you thinking?\" Justine asked.\n\n\"I'm not sure.\" Quinn replied. \"But that's the human in me talking. I didn't do a complete assessment because I'm determined to keep as much business out of this room as possible. Having said that, I believe we were going to take a bath weren't we?\"\n\nJustine grinned.\n\n\"I believe we were and then we were going to watch the baseball game in bed.\"\n\n\"We'll see about that.\" Quinn said pulling her against him. \"Maybe I have another game in mind.\" He said as he nuzzled her neck.\n\n\"You've been talking about this game all week.\" Justine said as she reached around and grabbed his ass.\n\n\"Yes... but that's why we have DVR. I can watch the game anytime, but I can't have you whenever I want... well I could; but I don't think that the others would enjoy the show.\" Quinn said.\n\nJustine looked at Quinn. He had always been very sexual; but this was different. It wasn't a bad different, but ....\n\n\"Quinn what's going on?\" \n\n\"Nothing... I just want to spend the day in bed making love with my wife.\" He replied.\n\n\"Quinn...\"\n\n\"Let's just skip the bath and go to bed.\" He urged. \n\nHe nipped her neck hard enough to draw blood. When he began to fed from her, the questions that's she had flew from her head. Whatever it was, he would tell her when he was ready.\n\nQuinn picked Justine up, carried her to the bed and lay on top of her nudging her legs apart with his knees. He looked down at her, the green red flecked flames in his eyes blazing.\n\n\"Jussie... I love you more than I can even begin to tell you.\"\n\n\"I love you too...\" Justine said. She was cut off by Quinn's mouth covering hers. She moaned into his mouth when he slid into her with one thrust.\n\nHe rode her slowly, gently and with a reverence that almost brought her to tears but she knew that nothing was wrong per se. Quinn rode her for almost an hour just keeping her on the brink before he took a nipple into his mouth and bit down. \n\n\"Come for me.\" he murmured against her breast.\n\nJustine bucked against him as if surprised at the orgasm that she knew would come.\n\n\"Come with me.\" she whispered against his head. \"Come...\"\n\nShe didn't have time to complete the thought. Quinn was pounding into her with wild abandon moaning as he bit and sucked on the nipple that he still had in his mouth. The nipple was now sore but the pain added to the pleasure instead of taking away from it. Justine cried out in protest when Quinn released the nipple, but cried out in pleasure when he took the unattended nipple into his mouth and bit down on it.\n\nThe orgasm started in the pit of her stomach and spread throughout the rest of her body. There wasn't a part of her that didn't feel it. The scream came when she felt Quinn grow within her and fill her womb with his essence. She came a second time when Quinn bit down on her breast as he emptied into her.\n\nAfterwards, didn't speak as he held her close. Finally, several minutes later; he spoke.\n\n\"Baby... I'm sorry... I got kind of rough there. Are you alright?\"\n\n\"Don't worry... I liked it.\" Justine replied kissing him. \"Are you ready to talk to me?\"\n\nQuinn hesitated trying to gather his thoughts.\n\n\"I don't know where to start.\" He said. \"I guess the most important thing is that you know that I wouldn't trade being with you for anything. There are times when what I feel for you is so strong that it's frightening... I know that I'm rambling, but bear with me here. Every so often, I think about Lana and her mortality and then I think about our children. Lana won't know her brothers and sisters and that saddens me. Knowing that she's going to get old and die saddens me. Jussie I won't get to know her children, my grandchildren and if there's one thing that I regret about this whole thing; that's it.\"\n\n\"How long have you been worrying over this?\" Justine asked.\n\n\"A while.\" Quinn replied. \"I didn't bring it up because there's nothing that can be done about it.\"\n\n\"Quinn, you once told me that one of your roles as my mate was to bear all things with me no matter what they were. How dare you keep this to yourself! Did you think that I would blow you off? And don't you dare say that you didn't want to add to my stress level. You come before anything or anyone else here.\"\n\n\"Jussie...\"\n\n\"I'm not finished,\" Justine said cutting him off. \"Need I remind you that you work as hard as I do but yet you take care of me? But yet you won't let me do the same for you. I want your word that you'll let me care for you as you care for me.\"\n\n\"I'm sorry and you're right.\" Quinn said. \"You have my word.\" Quinn said quietly. \"Jussie are you sure that I didn't hurt you?\"\n\n\"I'm fine and as I said, I liked it... more than like it, but back to Lana. We don't know what's in her future. For all we know, she could be the mate to a vampire and as far as seeing her and being involved in her life; I'm sure that we can figure something out.\"\n\n\"I would like to go see her; you know spend time with her while we can. I want her to know you. I want her to be proud of her old man.\" Quinn said.\n\n\"I understand.\" Justine said. \"I wish that you had said something sooner.\"\n\n\"I thought that I would be alright seeing her on her birthday and Christmas.\" Quinn replied. \"I didn't want to place them in danger like I did before.\"\n\n\"That wasn't you! That was that son of a bitch Jeremiah Mathers and not only that; you saved them. If you blame yourself for what happened then you'd better blame me too. It was because of me that you became involved with him.\"\n\n\"Jussie...\"\n\n\"No seriously. If we follow your logic; then I'm as much at fault as you are. Now, if you're done playing the blame game; let's concentrate on Lana.\"\n\n\"Jussie... thank you.\" Quinn said kissing her. \"I bet you were a kick ass lawyer.\"\n\n\"I still am.\" She teased. \"As you know, Lana and her family are under our protection. We've already beefed up the security in anticipation of the gala. So the question is spending time with her... you know, we never did find out if we could go out in the sun...\"\n\n\"If we could that would solve more than a few issues.\" Quinn said. \"I vote that we find out as soon as possible.\"\n\n\"Agreed... I wonder about mom and David. I bet if we can be in the sun then so can they.\" Justine replied.\n\nSuddenly, Quinn felt better even as he realized his stupidity in not sharing his concerns with Justine.\n\n\"I know that he gala is two months away and that we're busy....\"\n\n\"I would love to spend time with Lana.\" Justine interrupted.\n\n\"I was thinking about all of them.\" Quinn said.\n\n\"Quinn I have no issues with your ex-wife. In fact, I like her. She was prepared to give herself up for her babies even after she realized what Jeremiah was.\"\n\n\"Baby, you're the best.\" Quinn said in his best Jackie Gleason voice.\n\n\"Okay Ralph.\" Justine said laughing. \"It's daylight; let's find out if we're going to turn into crispy critters.\"\n\nThirty minutes later, Justine, Quinn, David and Josephine were standing by the door that led to the east garden. They were each dressed in long sleeves and pants so that their skin wouldn't be in direct contact with the sun. Maurice was on standby in case someone needed help back into the house.\n\n\"You may feel some tingling.\" He told them. \"That's fine but if it becomes pain then you must come back in. You will probably need to build up a tolerance which will take some time. I would suggest that Quinn and Justine go our first. I agree with her that if they can go out, then you David and Josephine can as well. Whenever you're ready.\"\n\nJustine and Quinn held hands as they looked out into the warm spring sunshine. It had been more than two years since either of them had been in the daylight. In their free hand they each had a pair of specially made sunglasses to protect their eyes.\n\n\"Are we ready to do this?\" Quinn asked giving her hand a squeeze.\n\n\"I'm ready if you are.\" Justine replied.\n\n\"Let's go.\" Quinn replied.\n\n\"Wait!\" Josephine called out. \"Shouldn't you wear hats too?\"\n\nQuinn looked at Justine and smiled. A second later they were wearing Philadelphia Phillies caps.\n\n\"Are we all set?\" Quinn asked.\n\nMaurice moved closer to the door poised to move if he had to. \n\n\"Remember, come back if it burns.\" He reminded them.\n\nStill holding hands, Justine and Quinn took their first step in two years into the sunlight. They both jumped when the initial blast of heat touched their faces.\n\n\"You ok?\" Quinn asked Justine prepared to take her into the house if she said no.\n\n\"I'm good. How about you?\"\n\n\"Me too... I'm going to roll up my shirt sleeves.\"\n\nJosephine and David watched anxiously as Justine and Quinn rolled up their shirt sleeves.\n\n\"Look at that!\" David said. He hadn't realized just how much he had missed the warmth of the sun until he saw Justine and Quinn standing in it.\n\n\"Are you having any pain?\" Maurice asked.\n\n\"A little tingling but it's going away.\" Quinn called back.\n\nAn hour later, the baseball caps were gone as well as the long sleeved shirts.\n\n\"Jussie can you believe this? It feels wonderful! I can work outside and take pictures! I've missed this so much!\"\n\n\"Me too.\" Justine replied as she watched the sunlight play on Quinn's auburn hair. \n\nShe looked back and saw the anxious expression on David's face.\n\n\"Let's go back. It's been longer for David than any of us.\" She said.\n\n\"You're right.\" Quinn agreed. \"But if they can come out, I vote for an outing and I don't care where we go.\"\n\n\"Deal.\" Justine said taking Quinn's hand.\n\nWhen they were inside, she took one look at David's face and knew how badly he wanted to be able to go out in the sun. She closed her eyes and prayed to whoever was listening that he could. She and Quinn watched as her mother and David put on the baseball caps and stood at the door. She Squeezed Quinn's hand as David and Josephine took one step and then another into the sunlight.\n\nThey all moved when David dropped to his knees.\n\n\"He's alright!\" Josephine called back as she knelt beside him and wrapped her arms around him.\n\nDavid was at a loss for words when he realized that he could go out. Tears streamed down his face as he took the baseball cap off and felt the sun on his head. He grabbed Josephine and held her in a death grip as he sobbed tears of joy.\n\nHe pulled back from Josephine and kissed her. \n\n\"I didn't think that I would ever feel the sun again.\" he whispered against her lips. \"I didn't...this is amazing! We can go out for breakfast and lunch! We can go shopping!\" he said crushing her to him.\n\nJosephine clung to David. She like him didn't think that' she would ever see the sun again. Of all of the physical comforts that she had missed, it was going out during the day. She started to laugh as she listened to David talk about all of the things that they could now do.\n\nJosephine looked up when she felt a hand on her shoulder. Justine was smiling down at her.\n\n\"Let's walk back to the gravesite.\" She said and held out her hand.\n\nQuinn offered his hand to David and helped him stand. The two men looked at each other and hugged.\n\nMaurice stayed where he was and watched with a smile on his face. He had suspected that Justine and the others could go out into the sun; but hadn't said anything. In his experience, things happened when they were supposed to. He made a mental note to double check the security surrounding the house. He didn't believe that anyone would be stupid enough to come near the royal quartet; but it never hurt to be cautious.\n\n*******\n\nThe news that the two couples could go out into the daylight circulated around the house like wildfire. As far as Mikhail was concerned, it was a double edged sword. The positive was that if they needed to escape during the day time hours; there wouldn't be a problem. On the other hand, it also presented more of an opportunity for abduction.\n\nMikhail started laughing when he realized what he was thinking. \"The abductors would be the ones needing to be rescued.\" He said out loud and laughed again. The laugher stopped as suddenly as it began when he remembered that while the royal quartet was safe from harm, the reign itself wasn't. It would take the abduction of one child or mate and a traitor would be born.\n\nAs he sat thinking, he had a thought. It was something that Maurice had mentioned months before. He hadn't thought much of it then; but now...\n\nHe jumped out of his chair and paced. Could it work? And would Justine and Quinn agree to it? If they did, it would solve a whole myriad of problems with security not being the least of them. Mikhail snatched the phone off the desk and called Maurice.\n\n\"Maurice... we must talk. How soon can you be here? Yes bring Lorenzo. I'll gather the others. We'll meet you in the library while the women meet with Emmanuel. I prefer not to say over the phone... I will see you soon.\n\nMikhail hung up and felt for the first time that maybe all would be well.\n\n********\n\nEmmanuel looked at the dress. He had removed almost all of the jewels from it leaving enough of the blood red rubies to give the dress a simple but elegant look. The neckline was modified so that it didn't plunge down to the navel, but would show a fair amount of cleavage. He walked around the dress and looked at the back. The back was in the shape of a diamond with the bottom point ending mid back. The original design had the point ending at the crack of the ass.\n\nFortunately, he still had plenty of the material left and had the presence of mind to bring it with him. He added enough material so that while the dress was still form fitting, it wasn't skin tight. He walked back to the front of the dress and looked at the waist line.\n\n\"Perfect.\" He muttered as he looked at the hem. He had wanted Justine to wear heels but she was adamant in her refusal.\n\n\"I couldn't wear the damned things when I was human why do you think that I can wear them now?\"\n\n\"But my Queen, it will put you at eye level with the King. It symbolizes the equality between you that one is not above the other...\"\n\n\"I have no problem with Quinn being taller than me and I sure as hell don't care what other people think about it. I'm only having this circus because I have to. Now don't bring up the damned shoes again or I'll go barefoot!\"\n\nEmmanuel looked at the shoes of which the heel was two and a half inches shorter than the original shoes and hoped that she would fuss too much. The next challenges would be the accessories and head piece. \n\nHe had noticed that the only jewelry she wore was her wedding band. He knew then that the giant ruby that was a part of the wedding ensemble wasn't going to happen. That he could work around but the head piece...\n\nHe walked around the dress again stopping at the back again.\n\n\"Pity.\" He muttered. \"You delectable ass would have been perfect...\"\n\n\"GET YOUR FUCKING MIND OFF MY WIFE'S ASS!\" Emmanuel heard in his head.\n\nEmmanuel dropped to his knees in supplication cursing at his stupidity and arrogance. He should have known better.\n\n\"My... my apologies.\" He stammered but there was no response.\n\nHe let out a sigh of relief. Quinn's warning had been a reminder of the many close calls he had in the past for doing the very same thing. He got to his feet and concentrated on the task at hand. Justine and the women of her court would be arriving soon.  \n\nIt was a dream job if he didn't manage to screw it up by not controlling his thoughts. Until he had gotten the summons from the Queen, he hadn't worked in centuries. His career as a designer would be rejuvenated especially when it got out that he had redone the wedding dress and if the King and Queen wore the clothing that he had given them as a gift.",
        "\"Emmanuel all of these women are mated.\" He told himself. \"Keep your mind and your hands to yourself.\"\n\nTwo hours later, he heard the sound of feminine voices approaching.\n\n*********\n\n\"What are you thinking?\" Quinn asked Mikhail when they were all sitting.\n\n\"When I found out the royal quartet.....\"\n\n\"Royal quartet?\" Quinn asked. \"That's what you call us?\"\n\n\"It's much faster than saying all of your names.\" Mikhail replied. \"But as I was saying, when I found out that you were day walkers, I had two thoughts. The first thought was that it would present more opportunity for abduction. The second thought was that it would be the abductors who would need rescuing. This brings me back to what we all know; the only way the reign will be threatened is if one of our mates or children is taken.\n\nRealistically we all know that even if that happened, the reign would continue; even if there was a fight. The real concern is that any and all of us will do whatever we have to in order to get our mates or children back. I submit to you that that is where the real threat lies. The danger is from within.\"\n\nMikhail paused to let what he said sink in and then he continued.\n\n\"I started thinking about something that Maurice said weeks ago. I didn't think too much of it then, but then this morning; it came back to me. Maurice, you told me how you protected your family by taking blood from each other.\"\n\n\"That's correct.\" Maurice replied seeing where Mikhail was going. \"That way we are always able to find each other no matter where we may be.\"\n\n\"Does that bond work through wards?\" Mikhail asked.\n\n\"Yes.\" Maurice replied. \"It will go through anything. But you must understand that once this bond is created, it cannot be severed.\"\n\n\"How much blood is needed?\" Mikhail asked.\n\n\"Not much.\" Maurice replied. \n\n\"Let me make sure that I understand what we're talking about.\" Thomas said. \"We all exchange blood and that way we can keep track of each other? What's to stop someone from taking advantage of that knowledge?\" he asked.\n\n\"There is an element of trust involved.\" Maurice replied. \"But we weighed the issues and decided that safety was more important. As you know we take the giving of one's word seriously. Each of us gave our word that we would only use the bond in dire emergency.\"\n\n\"How does it work?\" Edward asked.\n\n\"It works the same as the bond with your mate works.\" Maurice replied. \"The difference is that it can break through any ward. Even if the mate can't speak, she can and will be found.\"\n\n\"I don't understand.\" David said. \"I exchanged blood with Josephine, but when she was kidnapped; I couldn't find her.\"\n\n\"That's because you didn't have the blood of St. Germaine in your system.\" Lorenzo replied. \"One drop is all that is needed which means that once a drop of our blood is in your system; you can pass it on to your mates and children.\"\n\n\"The rumor about you being a direct descendent of Comte St. Germaine is true?\" Edward asked fascinated.\n\n\"It is.\" Maurice replied. \"But my question is this... If we do this, do we include the security teams? Their mates are at more risk of being taken than ours. In fact, I think that they are more likely to be abducted than our mates are.\"\n\n\"I disagree.\" Mikhail said, \"And I'll tell you why. None of the security teams are close enough to the royal quartet to be of any use.\"\n\n\"But they could get to us.\" Lorenzo said.\n\nThere was a long silence until David spoke.\n\n\"What if we put all of the mates and children in a place that they couldn't be found?\"\n\n\"We talked about having them scattered throughout the city in warded locations.\" Thomas said. \"But I have a question. How many vampires have the ability to break through wards?\"\n\n\"Not many.\" Maurice replied.\n\n\"But it would only take one.\" Thomas said. \"I don't know, but if it were me; I would assume that the families of the security teams would be kept in the area. So how secure would they really be?\"\n\n\"What do you suggest?\" Mikhail asked.\n\n\"There is a place where they will be safe.\" David said. \"But I also have a question. Maurice, you are also able to ward aren't you?\"\n\n\"I am... why do you ask?\"\n\n\"How likely is it that one vampire would be able to break the wards of two or more other vampires?\"\n\n\"Slim to none especially if the vampires involved build strong wards.\" Maurice replied.\n\n\"I think that we can take the families out of the security teams out of the mix.\" David said. \"The unfortunate thing is that they won't be able to attend the gala.\"\n\n\"We can make amends for that later.\" Quinn said. \"But right now I'm more interested in hearing what you're thinking.\"\n\nThe gray purple flecked flames around David's eyes flashed and then dimmed. \n\n\"I apologize, but I had to be sure that no one was listening.\" He said.\n\n\"Just a moment.\" Maurice said.\n\nA moment later, he gave the go ahead.\n\n\"An uncharted island.\" Mikhail mused after David explained what he was thinking. \"Will Josephine be alright with using her island?\"\n\n\"She won't mind.\" David replied. \"I would also suggest that we keep the location under wraps.\"\n\n\"Even from the security teams?\" Thomas asked.\n\n\"Even from them.\" David replied. \"If we told them that it was on an uncharted island, how long do you think it would be before someone figured out the general vicinity? This is all about secrecy which brings me to my next point. Only two of us other than the royal quartet will know the exact location. If we're taking the families of the security teams out of the mix that means that your mates will be the next target.\"\n\n\"But they will never be alone.\" Thomas said. \"It means that we'll have to be diligent in watching over them.\"\n\n\"Here's something that's to our advantage.\" Quinn said. \"Once anyone enters the grounds with the exception of us and our mates; there will be a drain on their gifts. The security teams will still have their speed, strength and telepathy, but they won't be able to use any of their other gifts. The one thing that we haven't announced is that the guests will lose the use of all of their powers... in effect; they will be human.\n\nIt an emergency arises where their powers are needed, they'll reappear until the emergency is over. Now, here's the thing; they won't be able to use their gifts against any of us or our mates. If we're going to move the mates of the guards to the island, we can make it so that the only telepathy that the guards use is to each other and us.\"\n\nThe room went silent as each vampire processed the plan that was on the table.\n\n\"How will we get everyone to the island?\" Edward asked after several minutes passed. \"Having them gather at one place would be too conspicuous wouldn't it?\"\n\n\"How many are we talking about?\" David asked.\n\n\"Don't include Gremlin's clan.\" Maurice said. \"They take care of their own and no one in their right mind will go anywhere near them.\"\n\n\"What about their children?\" Thomas asked.\n\n\"Their children are taught to be warriors from the time they can walk. Every game that they play is a lesson. If one of them should be taken, God help the abductor.\" Maurice replied.\n\n\"If my calculations are correct, we're looking at five hundred mates and children.\" Mikhail said. \"Can your island handle that many people?\"\n\n\"Easily.\" David replied. \"The issue is going to be housing for all of them.\"\n\n\"We can take care of that.\" Quinn said. \"David, thank you for doing this.\"\n\nDavid shrugged his shoulders.\n\n\"It's the right thing to do, but there's another benefit to this.\" He said. \"The guards will be able to focus on their jobs better if their loved ones are safe.\"\n\nThe meeting broke up a few minutes later. Mikhail felt better about the weeklong gala than he had since he had first heard about it; but it was still going to be a long week.\n\n***********\n\nOne month before the gala\n\n\"Mom are you sure that you and David don't want to do this thing with us?\" Justine asked.\n\n\"We're sure.\" Josephine replied. \"I want to enjoy being the mother of the bride.\"\n\n\"This isn't a wedding.\" Justine lamented. \"It's politics.\"\n\n\"I know, but try to have a little fun with it and remember after that is the gala.\" \n\n\"True... I just feel bad for the ones who can't come.\" Justine replied.\n\n\"They understand and besides, we're having a big party for them after the gala is over.\" Josephine reminded her.\n\n\"Also true.\" Justine conceded.\n\nOnce the plans for keeping the families of the security teams safe were made, the atmosphere at the house relaxed; but only slightly. The meetings regarding the plans were happening on a daily basis. As David said, Josephine had no problem with using the island as a safe place for the families of the security team.\n\n\"We need to make sure that there are plenty of things for them to do.\" she said when David told her about the plan.\n\nShe like Justine felt badly that the group would miss the gala and began to make plans for a special party just for them and their mates. \n\n\"Mom?\"\n\n\"What? Oh sorry... I was just thinking about the party.\" Josephine replied.\n\n\"I was asking where David is.\"\n\n\"He should be in his office. He said something about a conference call.\" Josephine replied. \"You do know that he can go out into the sun because of you don't you?\"\n\nJustine smiled and kissed her mother's cheek.\n\n\"It's because of all of us.\" She replied. \"Each of us brings something unique to this group and that includes Mikhail, Maurice and everyone in this house.\"\n\n\"Well whatever the reason, I'm happy for all of us. I didn't realize how much I missed the sun until that day. Speaking of which, aren't you and Quinn taking Lana and her sister to the zoo?\" Josephine asked.\n\n\"Yes but I want to talk to David before we go. Do you think that he'll mind an interruption?\"\n\n\"I don't think so; if his door is open the conference call is over.\" Josephine replied.\n\n********\n\nJustine decided to take the long way to David's office. It involved going outside and walking all the way around the house. She also knew that she would run into Quinn who was out on the grounds taking pictures. He had decided to restart his business.\n\n\"I think that we need a sense of normalcy.\" He told her. \"Our lives can't just be about running the entire vampire race. I was a landscaper/photographer before we met and there's no reason why I can't go back to it.\"\n\nHe was right Justine realized. She loved being an attorney and missed it. The only real problem she saw was their eyes... or were they a problem? If she could control everything else, why not the color of her eyes? If she could do it then so could the others. She intended to find out after she talked to David.\n\n*********\n\nDavid ended the conference call more than pleased. Now that he could go to his offices at any time of the day, production was on the rise. He met with several managers and laid down the law and then set up a telephone conference. To miss it was an instant dismissal.\n\nHe leaned back in his chair and looked out into the sunshine. He still couldn't believe that he could go out into the sunlight. For the first week after he found out that he could go out, David spent every morning in the garden. For that first week, Josephine let him have that time alone. Now she spent the mornings with him either reading or helping him in the garden.\n\nHe turned toward the door when he heard someone approach and mouthed the word \"open\". He smiled when he saw Justine waiting on the other side.\n\n\"Hey, do you have a few minutes?\" she asked.\n\n\"Of course! Come in.\" David said.\n\nJustine sat in the chair across from the desk and smiled at him.\n\n\"I gather that things are going well?\" she asked.\n\n\"Yes... how are you holding up?\" David asked.\n\n\"I'll be glad when the wedding is over.\" Justine replied. \"I tried to talk mom into another double wedding.\"\n\n\"I know. She told me.\" David replied with a smile. \"But she's right, this is your show.\"\n\n\"That's an interesting choice of words.\" Justine said. \"That's exactly how I see it. It's a big show so that I can kiss ass.\"\n\n\"That depends on your point of view.\" David replied. \"On the face of it, it does look like you're kissing ass, but are you? Or are you building allies? The one thing that I've learned is that no matter how powerful you are; you will always need allies. It is much better to have them commit to you voluntarily then by coercion.\"\n\nJustine thought about what he said.\n\n\"I never thought about it like that.\" she said. \"Thanks. There's something else that I wanted to talk to you about. I was wondering if you would escort me down the aisle for the ceremony.\"\n\n\"Excuse me?\" David asked.\n\n\"I know that we've had our differences but I would like to think that we've become friends.\" Justine said. \"I would like for you to walk me down the aisle not as my father; but as my friend.\"\n\n\"Justine... I would be honored.\" \n\n\"Good and thanks for helping me to see the ceremony in a different light. It helped.\"\n\n\"You welcome and Justine? Thank you.\"\n\nAfter Justine left his office, David sat staring at the chair where she had been sitting. A moment later, he was calling for Josephine.\n\n*********\n\nJustine left David's office and went to her and Quinn's rooms. It was rare that she was in the room alone and it felt odd. She almost called to Quinn but changed her mind. She wanted to be sure that she was right before she said anything.\n\nShe went to the bathroom and looked into the mirror. The flames in her eyes flickered softly as the green flecks moved lazily across her pupils. She stood there watching the soft flickering for several minutes before she closed her eyes.\n\nSlowly she opened them not sure of what she would see. Finally, they were open. \n\n\"Quinn!!! Mom!! David!! Come quick!!\" she screamed telepathically.\n\nBy the time they got there, Justine was beside herself with excitement.\n\n\"Jussie? What's wrong?\" Quinn asked as soon as he arrived.\n\n\"Nothing!! Look at my eyes!\" she exclaimed.\n\nQuinn held her still and looked down at her.\n\n\"Jussie... your eyes... they're brown. How?\" he asked stunned.\n\n\"I'll tell you when mom and David get here.\" She replied.\n\n\"What's the ruckus about?\" Josephine asked when she and David arrived.\n\n\"Mom... look at my eyes.\" Justine said as she stood in front of her.\n\nShe blinked and the red flames and green fleck appeared. She blinked again and they were almost gone. \n\n\"You have to look hard to see the flames and flecks.\" She said. \"You try it.\"\n\nA few minutes later, they were all standing side by side in the bathroom and looking into the mirror. All of them could change the color of their eyes at will.\n\n\"Wow.\" Quinn mused as he changed his eyes to their normal shade of green back to the green flame red flecked ones. \"I guess we don't need to wear the sunglasses anymore.\"\n\n\"But we'd better take them anyway.\" Justine said. \"We'd better get going or we're going to be late.\" She said grabbing his hand.\n\n\"The zoo awaits.\" Quinn said. \"We'll see you guys later.\"\n\n********\n\nJian and Gabra took their evening walk through the indoor garden talking quietly.\n\n\"You have not felt anything.\" Jian stated.\n\n\"No.\" Gabra replied, \"But neither have you.\"\n\n\"I have not.\" Jian replied. \"I do not know whether to be relieved or concerned.\"\n\n\"Perhaps nothing will happen.\" Gabra offered. \"This will not be the first time that you have felt nothing.\"\n\n\"That is true... but something bothers me.\" he replied. \"My spirit is unsettled.\"\n\nGabra stopped walking, looked at Jian and didn't like what she saw. True concern.\n\n\"Tell me what you need from me.\" she said softly as she stepped closer to him and touched his face.\n\n\"I do not know yet.\" He replied. \"When I know; I will tell you but for now let's continue our walk.\"\n\n*********\n\nThe closer the date of the gala got, the more anxious Thomas became. He had received several summonses from his family all of which he ignored. He didn't know how much they knew about what happened with Wilhelmina nor did he really care unless it impacted Lottie and her safety somehow. \n\nHe did know that they knew that he was with Justine and that they were calling to see what favors he could do for them. The thing was, he wanted nothing to do with them. He didn't want Lottie or any children that they might have to meet them. \n\nThomas looked over at Lottie. Being away from the Realm had done wonders for her. The nightmares had all but stopped; she smiled easily and no longer acted like a servant. Deep in his heart Thomas knew that if any of the mates were taken, it would be her. \n\nHe didn't know why he felt that way but he did. His family ....\n\n\"Thomas? Are you ready for dinner?\" Lottie asked\n\n\"I'm ready.\" He replied but his mind was still on his family. It was too much to hope that they wouldn't attend the gala. They would hunt him down until they found him, pretend to be proud of him and then try to use him.\n\nMuch to his disappointment, other than knowing plants; none of his other gifts had manifested. Every so often he thought he felt a twinge or a stirring; but it never lasted. When he was alone, he did everything that he could think of to urge his dormant gifts to life.\n\n\"Patience.\" Edward would caution him time after time.\n\nThomas took Lottie's hand and walked by her side to the dining room. He noted how comfortable she was in talking with Violet, Pam, Zoe and now Gabra. Jian and Gabra were something of an enigma to him. He didn't understand how one couldn't know how they met their mate. He knew that they weren't lying; it just didn't make sense. But then, the fates had done stranger things. \n\nHe blushed when Jian caught him watching them. Jian simply smiled and nodded at him putting him at ease. The two men hadn't talked much since Jian arrived a month ago... it was time to change that.\n\nThe dinner conversation was about the gala. All of the women were more than pleased with their gowns and were looking forward to the final fitting. The men were silent. Each of them, including Thomas was thinking about the safety of their mates.\n\nAs happy as he was to see the light in Lottie's eyes when she talked about the gala, Thomas wanted it to be over with. The feeling that Lottie was going to be the primary target of an abduction scheme wouldn't leave him.\n\nHe looked up again to see Jian watching him. The vampire's soft brown eyes had an intense look about them.\n\n\"Thomas.\" He said softly. \"Would you join me for an after dinner walk?\" \n\nThomas hesitated and then nodded his head. He had the feeling that the Chinese vampire knew something. As he wondered about the walk, he felt slight warmth in the pit of his stomach. It felt a little stronger than before...but then it was gone just as quickly as it came. He closed his eyes in frustration and tried to will the warmth back.\n\nHe felt Lottie's hand on his knee squeezing it gently. She knew that he was trying to wake his gifts before the gala and knew of his feelings of uselessness. It was something that they talked about frequently, but he couldn't shake the feeling of uselessness.\n\n\"But you aren't useless.\" She told him that morning. \"You've prepared all of the antidotes...\"\n\n\"But if something happened to you I couldn't protect you...\"\n\n\"Of course you could and you would.\" Lottie interrupted. \"But Thomas the only one who thinks that you're useless is you.\"\n\nThomas put his hand on top of hers and squeezed it. He had just realized that she was right. He could and would protect her even if it cost him his life. Suddenly, he felt better than he had since they arrived two years ago. He also decided that Edward was right, he needed to relax. If his gifts were meant to manifest early; they would.\n\n*********\n\nAfter dinner, Jian and Thomas walked through the indoor garden. For several minutes, neither of them spoke. Jian was the first to break the silence.\n\n\"You are somewhat of an enigma to me too.\" He said. \"I have heard of your family; but have never had the honor of meeting one of you.\"",
        "\"I don't know how much of an honor it is.\" Thomas replied with a tight smile. \n\n\"You are not like them.\" Jian said. \"You have honor and you are loyal to those that you care about.\"\n\n\"I'm curious about you as well.\" Thomas said. \n\n\"As is everyone.\" Jian replied with a chuckle. \"Even Gabra and I were curious about ourselves. Finally, we decided that how we came to be together didn't matter.\"\n\n\"However it happened, I owe my life to the both of you. \"Had Gabra not warned me...\"\n\n\"It wasn't your time.\" Jian interrupted. \"Every one of us that is here was meant to be here. I don't know for what purpose, the fates don't tell me that; but it is for the good.\"\n\nThe two men walked in silence for a few more minutes. This time it was Thomas who spoke first.\n\n\"Jian... do you know if there's a way to wake my gifts?\"\n\n\"No... but Thomas, sometimes things happen when we least expect them.\"\n\n\"Do you know something?\" Thomas asked.\n\n\"No... that is just experience speaking.\" Jian replied. \"The only thing that I can say is to be prepared for anything and to trust your instincts.\"\n\n\"Jian...\"\n\n\"Thank you for walking with me. We must do it again.\" Jian said and walked away.\n\nThomas watched Jian walk away curious as to what he hadn't been told. He walked for a few more minutes before deciding to let it go. It would do no good to agonize over it. He would find out in due time.\n\n********\n\nTwo weeks before the gala\n\nJian sat straight up in bed, mumbled something and lay down again. Gabra lay next to him watching, waiting and listening. It had been that way for as long as they had been together. Whenever he was dreaming she lay awake. She was like Jian's personal recorder. More often than not, he couldn't remember what he said whereas she remembered everything and forgot nothing.\n\nGabra turned on her side to look at Jian. There were lines of worry etched on his face and she wondered who the worry was for. Suddenly he was awake and looking back at her.\n\n\"Gabra, we must be careful.\" He said softly.\n\n\"You mentioned a name.\" she replied as she smoothed his brow.\n\n\"What was it?\" He asked.\n\n\"Naila.\"\n\nJian frowned.\n\n\"Are you certain? That does not make sense.\"\n\n\"That is the name that you mentioned.\" Gabra replied. \"But I agree with you, it doesn't make sense. Is she in danger?\"\n\n\"No... but...someone is looking for her.\" Jian replied. \n\n\"What of the other mates?\" Gabra asked.\n\n\"They are all in danger.\" Jian replied. \"Thomas believes that Lottie will be the target and I believe he is right, but it will come down to opportunity. He also thinks that the threat will come from his family.\"\n\n\"You do not think so?\" Gabra asked.\n\n\"I believe that it is possible.\" Jian replied.\n\n\"What else do you believe?\" Gabra asked.\n\n\"I believe that Thomas' family is afraid of him. That is why they were never supportive of him. His way with plants is only one of his gifts. They want him on their side.\"\n\n\"Are they thinking of treason?\" Gabra asked.\n\n\"I do not have the answer to that.\" Jian replied. 'If they are not, then they are helping someone who is.\"\n\n\"Do they not understand that even if they are successful that they will not overthrow the queen?\" Gabra asked.\n\n\"I am not so certain that is the objective.\" Jian replied. \"If it were the window of opportunity has passed. Justine and Quinn are fully into their powers. They want something or someone else.\"\n\n\"But why take a mate then?\" Gabra asked. \"In all honesty, I think that Lottie is the key and I think that the Rhys' are behind this. You said so yourself, they're afraid of Thomas. I think that they'll use his mate to keep him in line.\"\n\n\"You may be right.\" Jian conceded. \"Especially since he hasn't come into his powers yet...\"\n\n\"What is it?\" Gabra asked.\n\n\"Something is not right.\" Jian replied. \"Nothing is making sense. Whoever is planning to cause trouble must know that security will be extremely tight.\"\n\n\"Jian you must let it go now.\" Gabra said softly. \"You know as well as I do that we have to wait for further clarification.\"\n\nJian allowed Gabra's soothing touch to calm him. She was right. He had to be patient.\n\n***********\n\nOne week before the gala\n\nJian was becoming concerned. There had been no further clarifications on where or who the danger was coming from. The mates and children of all of the guards were already gone to the secret location and all of those in the house had already exchanged blood. \n\nHe was confident that no one from the inner circle was a threat as no one had even balked at the blood exchange.\n\n\"But that in and of itself means nothing.\" He told himself.\n\nHe had become so anxious that Gabra suggested that he talk to Justine and Quinn about it.\n\n\"What would I say to them? He asked.\n\n\"Tell them of your concern.\" Gabra replied. \"Maybe they know something that we do not.\"\n\nLater that evening before the women went for one of the last fittings before the wedding, Jian approached Justine and Quinn.\n\n\"Something is not right.\" He said without preamble. \"I have not received any thing more since last week.\"\n\nQuinn and Justine looked at each other and then at the concerned Jian.\n\n\"We know.\" Quinn replied. \"Whatever is going to happen has something to do with Lottie and Thomas.\"\n\n\"You cannot tell what it is?\" Jian asked.\n\n\"Treason.\" Justine replied.\n\n\"What does that have to do with Lottie and Thomas?\" Jian asked alarmed. \"Surely you do not believe that they are traitors!\"\n\n\"They have the same potential to be traitors as the rest of us.\" Justine said.\n\n\"But to what end?\" Jian asked. \n\n\"Jian... what has Thomas told you about his family?\" Quinn asked.\n\n\"I know that they are mercenaries and that they don't care who they fight for as long as the price is right. But I don't see how that makes Thomas a traitor.\"\n\n\"It doesn't.\" Justine replied. \"All I was saying is that all of us have that potential. Think about this... Why would Thomas and Lottie be the targets?\" \n\nA flash of understanding crossed Jian's brain. \n\n\"He will be the strongest of all of them.\" He whispered. \"If they have Lottie then they have him.\"\n\n\"Bingo.\" Quinn said.\n\n\"That's treason!\" Jian exclaimed.\n\n\"Yes it is.\" Justine replied. \"Thomas and Lottie are members of this court. They have our blood in them and that makes them a part of us.\"\n\n\"They will make Thomas fight with them.\" Jian replied.\n\n\"They'll try to.\" Quinn said. \"They don't know about the blood exchange. Even if they manage to get Lottie out of here; she'll be found in minutes. They also don't know that their power will be drained.\"\n\n\"In effect, they're walking into a trap.\" Justine said. \"The only question is when they're going to try something.\"\n\n\"It will be near the end of the gala.\" Jian said. \"It will be someone that she trusts who will take her. That is how they will succeed without their gifts.\"\n\n\"Do you know who?\" Justine asked.\n\n\"No... but she must not go with anyone other than Thomas or one of us. I need not tell you what will happen if anything happens to her.\"\n\n\"We know.\" Quinn said. \"His gifts are already trying to waken.\"\n\n\"They want him in their control before that happens.\" Jian said. \"If his gifts wake then it will be too late. Have you spoken to Thomas?\"\n\n\"He's aware.\" Justine replied. \"He also said that he asked you if there was a way to waken his gifts and you told him no. That wasn't exactly the truth was it?\"\n\nJian flinched under Justine's intense stare.\n\n\"It wasn't the entire truth.\" Jian confessed. \n\n\"Why did you lie?\" Justine asked. \n\n\"I didn't lie.' Jian replied. \"I did not tell Thomas everything. Justine, from the beginning you have discovered your gifts on your own and Thomas needed to figure out for himself from where he needed to get his help from. My telling him would not allow you to discover yet another gift nor would it teach Thomas that he has to be able to ask for help. If he had asked me if you could help him wake his powers, I wouldn't have given him a straight answer. I would have sent him to you.\"\n\nJustine began to laugh.\n\n\"You know, you would make one hell of a lawyer. Alright, I see your point. What about Gabra? I know that her gift is aimed to the immediate future, but has she seen or felt anything?\"\n\n\"Not yet.\" Jian replied. \"If she sees anything it may not be until moments before the event.\"\n\n\"The key is going to be in waking Thomas' gifts.\" Quinn said. \"I think that we should do it.\"\n\n\"I agree.\" Justine replied. \"But it needs to be all of us. I'll call mom and David while you get Thomas. We'll meet in the basement.\"\n\n\"No...not there.\" Quinn said. \"We can't take the chance that Manny will overhear.\"\n\n\"You really don't like him do you?\" Justine asked.\n\n\"I don't like anyone who fantasizes about my wife's ass.\" Quinn replied. \"But that's beside the point. The point is that we need secrecy. I don't believe that I'm going to suggest this, but I think that we should use our suites. No one has any excuse to be there unless it's by invitation and I think that it's time to move anyway. This house has met its purpose. All of us that are meant to be a part of this reign are here.\"\n\n\"I was thinking the same thing.\" Justine replied. \"Do you know where you would like to go?\"\n\n\"I would love to go somewhere warm.\" Quinn replied. \"But there's Lana. I don't want to leave when I'm just getting to know her.\"\n\n\"I have an idea but let's take care of Thomas first.\" Justine said. \"I'll meet you in the room.\"\n\n******\n\nThomas wasn't feeling well. His body ached and he felt feverish. Lottie sat helplessly at his side washing his face with a cool washcloth. If he didn't know any better, he would have thought that he was going through the change. \n\n\"Tell me what to do.\" Lottie said.\n\n\"I... I don't know.\" Thomas replied. \n\nIt wasn't until the warmth in his belly began to spread that he understood what was happening and then...it just stopped.\n\n\"NOOO!\" Thomas cried out in frustration as tears ran down his face.\n\nLottie got on the bed with him and held him as he wept. Finally, he settled into an uneasy rest.\n\n*******\n\nQuinn tapped on the door and waited for someone to answer. A few seconds later he heard Lottie's soft footsteps at the door. As soon as he saw her, he knew that something had happened.\n\n\"Lottie what's wrong?\" He asked.\n\n\"It...its Thomas.\" She replied. \"I think that his gifts are trying to wake up but it's too soon.\"\n\n\"Take me to him.\" Quinn replied.\n\nThomas was awake but pale. Quinn could see that he was in distress.\n\n\"Hey Tom, what's happening?\" he asked as he assessed him.\n\n\"I... I think that my gifts are trying to wake up; but there's something holding them back.\"\n\n\"We know and we're going to help you.\" Quinn replied. \"Can you walk?\"\n\n\"Where are we going?\" Lottie asked.\n\n\"To me and Justine's suite.\" Quinn replied. \"David and Josephine are already there. I'll explain later. Thomas, can you walk?\"\n\n\"I can walk.\" Thomas said.\n\nWhen he stood, he wobbled and then righted himself. Quinn reached out to help him; but Thomas pulled away.\n\n\"I can make it.\"\n\nHowever, he didn't refuse Lottie's hand. He seemed to draw strength from her Quinn noticed. His color seemed to improve and some of the pain in his eyes faded away. It confirmed what he and Justine had thought. Lottie was Thomas' anchor.\n\n****** \n\nJustine removed the comforter from the bed while Josephine and David lit candles.\n\n\"Are we set?\" she asked looking at her mother.\n\n\"I think so.\" Josephine replied.\n\nA few minutes later, Quinn came in followed by Lottie and Thomas.\n\n\"Let's get the show on the road.\" Quinn said. \"He's in a lot of pain.\"\n\n\"Lottie... help him to the bed.\" Justine said. \"Everyone else surround the bed.\"\n\nLottie helped Thomas to the bed and then stood by his side holding his hand.\n\n\"Thomas.\" Justine said. \"We're going to waken you gifts... is this what you want?\"\n\n\"Yes.\"\n\n\"There will be no going back; are you sure?\" she asked.\n\n\"I'm sure.\" Thomas replied without hesitation. \"Wait, I want to say something. I swear to use my gifts for the good of the reign. If I should become jaded and evil, I will die immediately.\"\n\n\"Thomas...\" Justine said.\n\n\"No, it has to be this way. I'm ready.\" He said interrupting Justine.\n\nJustine nodded and then gave instructions.\n\n\"Everyone lay hands on him... Quinn you put your hands over his heart, mom put yours on his stomach and David his legs. I've got his head.\n\nWhen everyone was in place, Justine looked at Lottie.\n\n\"Hold his hand. This may hurt.\"\n\nLottie nodded and gave Thomas' hand an encouraging squeeze.\n\nJustine placed her hands on either side of Thomas' head.\n\n\"Do we all agree to wake the gifts of this vampire mage?\" she asked.\n\n\"We do.\" Four voices said in unison.\n\n\"Do we accept that if he should become evil that he will immediately die?\"\n\n\"We do.\" \n\n\"Thomas Rhys, do you consent to the waking of your gifts?\"\n\n\"I do.\" Thomas replied.\n\n\"Do you swear to use your gifts only for good and in the defense of the reign?\"\n\n\"I do.\"\n\n\"Do you accept the penalty of true death if you should break this vow?\"\n\n\"I do.\"\n\n\"Do you understand that if you break this vow and die that your mate will also die?\"\n\nThomas hesitated and looked up at Lottie. When he saw the slight nod of her head; he answered.\n\n\"I do.\"\n\n\"I give you one last chance to change your mind. Do you wish to take it?\"\n\n\"No I do not.\" Thomas replied.\n\n\"So be it.\"\n\n\"Does anyone wish to change their vote on this matter?\"\n\n\"No we do not.\" Four voices said in unison.\n\n\"Thomas Rhys.\" Justine said her voice barely above a whisper. \"I grant permission for your gifts to wake to their full potential. I grant that you will have full command of them from the moment they awaken.\"\n\nAt first nothing happened. Then suddenly, Thomas' body became as stiff as a board as he levitated from the bed. He felt as if his entire body was on fire. The pain was indescribable as it started at each end of his body and met at his stomach where Josephine's hands rested.\n\nHis back arched pushing his stomach into her hands. He opened his mouth and screamed one long scream that seemed as if it never would end. The windows shook as pictures flew off the walls crashing to the floor. Their personal items crashed to the floor after swirling around in the air for several seconds, amazingly; none of them were hit. \n\nThe activity continued for as long as Thomas screamed. When he stopped, everything was suspended. When he screamed again, it was a blood curdling scream that made the hairs on everyone's neck stand up. That scream was repeated four more times before his body went limp and he crashed to the bed.\n\n\"Is he alright?\" Lottie asked worriedly.\n\n\"He's fine.\" Justine assured her. \"He needs to sleep.\"\n\n\"Thank you... he was so worried about everything... he felt so useless.\" Lottie said.\n\n\"You're welcome... Just take good care of him.\" Justine replied.\n\n*********\n\nAnthony Rhys drummed his fingers on the table. When he heard about Thomas' betrayal of Wilhelmina he had been furious. He had ranted and raved for a week.\n\n\"What in the fuck was he thinking?\" he asked anyone who would listen. \"He betrayed his mate!\"\n\nThe bottom line was that he was concerned that their family would lose the respect of the various beings that employed them. But once he calmed down, he realized that he had another concern. Thomas had always been what he considered to be weak. He never talked back and did whatever he was told.\n\nAnthony knew that Thomas was more powerful than he was and it had been crucial that he be kept in line via humiliation and ridicule. Wilhelmina had picked up where he had left off. The question was where did Thomas' backbone come from?\n\nThen he heard about the servant girl and he went on another rant. During his rant he realized that it was Lottie who was responsible for the sudden sure of courage. In retrospect, he should have disposed of the girl as soon as he found out about her. How he would have done that he didn't know; but he would have found a way.\n\nThe thing that concerned him the most was that Thomas would finally realize how powerful he would become and take over the family. Now that he was allied with the queen he was also in a position to get all of them thrown in prison. He weighed his options of which there were few. The bottom line was that he had to regain control of his son. The only way that he could think of to do that was to do the unthinkable... they had to get the girl.\n\nNone of them had planned on going to the gala but Thomas' defection and betrayal had changed that.\n\n\"Shit!\" Anthony cursed. No one had seen Thomas' betrayal coming and it was going to bite them in the ass. The one thing that he was grateful for was that Thomas' gifts wouldn't manifest for another forty-eight years. But that didn't matter, that Thomas was under his control did.\n\nThere were other things to consider as well. Thomas would become emotionally unstable without the girl. That emotional instability would be dangerous to all of them so he had to allow him to see the girl. The unknown factor was the gifts that she had if any.\n\nLetting Thomas go wasn't an option and even if it were; he wouldn't have done it. He needed Thomas. Over the centuries it seemed as if the strength of the family was fading. While people still feared and respected them; the Rhys name was slowly fading. They no longer got the high paying jobs. Those were going to newer and stronger families. In order to get back into the game; they needed Thomas.\n\n\"What are you thinking of doing?\" Marcus, Thomas' older brother asked. \"To try anything at the gala would be suicide.\"\n\n\"I know.\" Anthony replied. \"We have to get her to come to us. If we can do that then we have Thomas. What have you found out about her?\"\n\n\"Not much other than Wilhelmina took her from her family when she was quite young in exchange for a debt.\"\n\n\"Who owed her money?\"\n\n\"Her father.\" Marcus replied. \"When he couldn't repay; Wilhelmina took the girl.\" \n\n\"Where is her family now?\"\n\n\"Wilhelmina killed her mother and a few other family members, but her father still lives.\"\n\n\"Find him and bring him here. Do not allow him to refuse.\"\n\nAfter Marcus left, a smile crossed Anthony's face. Things were looking up.\n\n*******\n\nThomas woke up feeling as though he had been run over. The fever and burning in his stomach were gone, but every muscle in his body ached. He looked around the room and tried to remember where he was.\n\n\"We're in Justine and Quinn's suite.\" Lottie said softly. \"How do you feel?\"\n\n\"I hurt all over... is it done? Did they do it?\" Thomas asked.\n\n\"Yes it's done.\" Lottie replied. \"Justine says that you should be able to use your gifts without training.\"\n\nThomas tried to sit up but fell back. \n\n\"You need to eat. You've been asleep for twenty-four hours.\" Lottie said. \"Stay put and I'll get you something to eat.\"\n\n\"Lottie... wait.\" Thomas said. \"Thank you for trusting me. I swear to you that you won't regret it.\"\n\n\"I know that.\" she replied. \"If I had any doubts I wouldn't have agreed.\"\n\n\"I want to go to our own rooms.\" Thomas said.\n\n\"You're too week.\" Lottie replied. \"And I can't hold you up.\"\n\n\"All I need is your hand... please I want to be in our bed when I make love with you.\"\n\n\"Make love? Thomas you can barely move!\" Lottie said.\n\n\"If you help me I can do it.\" Thomas said.\n\nLottie gave him a dubious look.\n\n\"I'll make a deal with you.\" she said after several seconds. \"You feed first and then we'll try.\"\n\nSeeing that she wasn't going to be swayed, Thomas agreed. \n\n\"I will also need human food.\" He said suddenly.\n\nHe was surprised as Lottie was. He had tried human food in the past and it made him ill.\n\n\"Are you sure?\" She asked.\n\n\"I'm sure... I think that I will need blood and human food for energy.\" Thomas replied\n\nAn hour later, a tray containing fish, boiled potatoes and green beans was sitting in front of him. Now he wasn't so sure about eating it. He took a tentative bite of the potato and waited several seconds before taking another. He still didn't care for the taste but he wasn't gagging either. Next he tried the fish and found that he rather enjoyed the taste. The green beans he spat out pronouncing them disgusting. Lottie took the tray and sat beside him on the bed with a basin just in case things came back up.",
        "To the amazement of both of them, Thomas actually looked better. His skin wasn't as pale and had a warm glow to it.\n\n\"I think that I can walk now.\" He said with a smile that lit up his face.\n\nLottie stood up and held out her hand. Playfully Thomas pulled her on top of him and kissed her. She giggled when he nipped and then sucked her lower lip.\n\n\"Thomas! Not here! This isn't our room.\" She said when he broke the kiss.\n\n\"Then let's go to our room.\" He said as he rose from the bed still holding her in his arms.\n\nLottie squealed as Thomas floated around the room doing a series of loops and dips. Finally, he landed on the floor so gently that there wasn't even a thump.\n\n\"I guess it worked.\" Thomas said happily. \"Now I can pull my weight around here.\"\n\nBefore they left, Thomas put the room back to rights. It looked as though it had never been disturbed. Thomas carried Lottie to their room stripping them before they reached the bed.\n\n\"This is the final step.\" He told her. \"You agreed to mate with Thomas Rhys the vampire but you haven't agreed to mate with Thomas Rhys the mage. Lottie Dunham, will you mate with Thomas Rhys the vampire/mage?\"\n\nLottie didn't have to think about her answer.\n\n\"I would mate with you no matter whom or what you were.\" She replied. Lottie looked into Thomas' dark eyes and understood something. She understood why his family had treated him as they had. It just wasn't because he wasn't like them they wanted to control him. In order for that to happen, they had to have one thing; her.\n\n\"What are you thinking about?\" Thomas asked as he slid into her. \"Tell me what bothers you.\"\n\n\"I.... I can't think right now.\" Lottie replied and then let out a sigh as Thomas kissed her shoulder. She shivered when the tip of his fang grazed the area that he had just kissed and then pierced her skin. Although Maurice and the others had taken blood from her, Thomas wanted to be sure that she was protected by him as well.\n\nHe didn't take much. It was just enough to claim her and so that he could find her anywhere and her him once she drank from him. Thomas had tasted her blood before but now he could have sworn that it tasted sweeter. He resisted the urge to take more; the mating needed to be completed.\n\nSuddenly there was a sense of urgency to complete the mating. He thrusts into her with long hard strokes pulling almost completely out when he withdrew. He listened to Lottie's cries making sure that they were cries of pleasure and not pain. \n\nLottie clawed at his back drawing blood. Instead of hissing in pain, Thomas moaned with pleasure and thrust even harder into her holding her in place.\n\n\"You are ... now ... you are now under my protection!\" he said in a strained voice as he released his seed into her. \"No one can harm you.\"\n\nLottie tensed and then bucked against Thomas. The muscles in her neck stood out as she cried out his name. Before her orgasm had completely waned, Thomas held his wrist out to her. She gave it the briefest of looks, kissed it and then bit.\n\nShe drank until Thomas made her stop but she wanted more.\n\n\"That's enough.\" He said as he gently but firmly pulled his wrist away.\n\nShe lay in his arms feeling more at peace than she could remember. She was just dozing off when she remembered that she hadn't answered Thomas' question.\n\n\"Thomas, do you understand why your family treated you as they did?\"\n\n\"I know.\" He replied, \"And it no longer matters. I am where I want and need to be.\"\n\n\"Will they come to the gala?\"\n\n\"I don't.... yes; they're coming. Lottie, I need you to listen to me\" Thomas said his voice intense. \"They are going to try to take you. I don't know when or how, but you mustn't ever leave my side for any reason. I know that I will find you if they take you, but I don't want you taken at all.\"\n\n\"I understand.\" Lottie said. \"You're different.\" She said kissing his chest.\n\n\"That's because I know that I can protect you and everyone else in this house if I need to.\" Thomas replied.\n\n\"Do you think that your family knows that your gifts have wakened?\" she asked.\n\n\"No and it needs to remain that way.\" Thomas replied. \"My family has committed treason many times over the years and it is time for them to answer for it. Also you will never be safe unless they are dealt with.\"\n\n\"You would imprison your family?\" Lottie asked surprised.\n\n\"If it will keep you and those that I care about safe, then yes I would imprison them. But you forget that I no longer consider them my family. You and the people in this house are my family.\"\n\n\"But what of your mother?\" Lottie asked. \"You said that your father ruled with an iron fist. Is she not a victim? Didn't she try to protect you?\"\n\nThomas hesitated. He hadn't thought of his mother as a victim. While she never spoke against his father about the way he was treated; she always tried to soothe him afterwards.\n\n\"What you say has merit.\" He said. \"I'll speak to Justine about it.\"\n\n********\n\nThe same conversation regarding safety was happening in each suite and at Maurice's house. The gist of the conversations was the same with each male exacting a promise from their mates that they wouldn't wander off.\n\n\"But I thought you said that they want Lottie and Thomas.\" Naila said.\n\n\"They do.\" Lorenzo replied. \"But they will use any of us to meet that goal. It's imperative that you don't wander off away from me.\"\n\n\"But...\"\n\n\"No buts Naila.\" Lorenzo said firmly. \"If I have to compel you to stay close then I will.\"\n\nNaila nodded. She was remembering what happened the last time she didn't do as she promised.\n\n\"I promise.\" She said after a moment. \"After this is over, can we move to our own house? It's not that I don't like living here; but I'm ready to make a home for us.\"\n\n\"We could do that, but Naila you have to understand something; we can't live on the other side of the country. We have to be easily accessible to each other and Justine and Quinn.\"\n\n\"I can deal with that.\" Naila replied. \"And I don't care where we go. I'm just ready to be alone with you.\"\n\n\"I know baby.\" Lorenzo replied kissing her temple. \"Let's get through the gala and then we'll see what happens.\"\n\n*******\n\n\"We're moving aren't we?\" Regina asked when she and Maurice were in bed.\n\n\"I believe so.\" He replied. \"It's time.\"\n\n\"Do you have any idea where? Somewhere where it's warm all year around would be my vote.\"\n\nMaurice chuckled. Regina hated the winter although he and the children didn't mind it.\n\n\"That will depend on Quinn and Justine.\" He replied. \"But I think that Quinn is thinking along the same lines that you are.\"\n\n\"What about his daughter?\" Regina asked. \n\n\"I don't know.\" Maurice said. \"Regina I cannot stress enough how important it is that you always stay within touching distance of me.\"\n\n\"Maurice, I get it.\" Regina replied. \"We've danced this dance before.\"\n\nMaurice blew out a breath. She was right and she had never gone against what he said in regards to the safety of her and the children; but this was more than about them.\n\n\"I know that I sound like a broken record.\" He said. \"But every one of us is having this conversation. This isn't just about you and the children. It's about the safety of many of vampires and beings if they manage to get their hands on Lottie and Thomas.\"\n\n\"I know... I'm sorry; you're just doing what you're good at.\"\n\n\"No apologies are needed.\" Maurice replied. \"It's been a stressful few weeks and we haven't seen nearly enough of each other. I was thinking... Jon has been asking about going to see Mickey Mouse... what you think about a trip to Disneyland?\"\n\n\"I think,\" Regina said as she slid her hand under the blanket, \"that it's a good idea.\"\n\n********\n\nQuinn, Justine, David and Josephine sat in the back yard enjoying a moment of peace and quiet. By mutual consent they all agreed not to talk about the gala or the wedding ceremony. Instead they talked about moving.\n\n\"I'm for someplace that never sees snow.\" Justine said.\n\n\"I'm all for that.\" Quinn replied. \"But as we talked about, there's Lana to consider.\"\n\n\"What are you thinking as far as location?\" David asked. \n\n\"I don't know... Florida?\" Justine asked.\n\n\"Miami is nice.\" Josephine offered.\n\n\"How about... California?\" Justine asked. \"I mean what's not to like? Ocean, warmth, palm trees and if we wanted snow for some unknown reason; it's accessible.\"\n\n\"I like it but what about Lana?\" Quinn asked.\n\n\"What kind of work does your ex-wife's husband do?\" David asked.\n\n\"A little of this and a little of that.\" Quinn replied. \"The economy and the job market haven't been good for them. Right now he's working at a restaurant bussing tables and he works part time as a handyman at Lana's school.\"\n\n\"Does he have any formal education?\" David asked.\n\n\"I think he took a few business courses but didn't finish because of money.\" Quinn replied. \"I offered to help him but he said no. He only agreed to us paying for Lana's schooling because it was directly for her.\"\n\n\"Would he consider relocating?\" David asked.\n\n\"I don't know... why do you ask?\" Quinn asked.\n\n\"Could you arrange a meeting? I can help him without it appearing as if I'm doing him a favor.\" David replied.\n\nOnce again Justine was struck at how kind hearted David could be. It helped that he and Josephine considered the children their grandchildren, but she wondered he was going to convince Jared that he wasn't doing him a favor.\n\n\"I can do that.\" Quinn replied. \"I'll set it up for after the gala is over.\"\n\n\"So.\" Justine said. \"Are we moving to California?\"\n\n\"I think so.\" Quinn replied. \n\n********\n\nEmmanuel watched the royal quartet from the indoor garden. He had a decision to make. He had grown to like all of them especially Justine with her kiss my ass attitude. What he found hard to believe was that no one had picked up on the fact that he wasn't being completely honest. \n\nHe was there to alter the wedding gown, but he was also there to watch and report to the Rhys. The problem was that he had no way of getting information to them even if he had any to give. He had expected to be allowed in on the inner circle and that hadn't happened. \n\nHe asked himself whether he would give the information if he had it and he just didn't know. For the most part, Thomas had remained out of sight and his mate Lottie didn't seem to be anything special. He made a decision, after the final fitting; he was leaving. The summons requesting his skills had been nonstop once word got out that he had designed the royal quartet's attire for the gala as well as the attire of the heads of security and their mates.\n\n\"Treason is punishable by death.\" A soft female voice said from behind him.\n\nEmmanuel turned to see Gabra standing behind him.\n\n\"To answer the question that you just asked yourself, you would have given Rhys the information.\" She said.\n\n\"I don't know what you're babbling about.\" Emmanuel said nervously. \n\nGabra shrugged her shoulders.\n\n\"How did you become involved with the Rhys'?\" She asked. \"What did they promise you in exchange for information?\"\n\n\"I'm no traitor!\" Emmanuel retorted. \"They said that they were concerned about him because he hasn't been answering their summons.\"\n\n\"But yet you agonize over what you should do.\" Gabra mused. \"That tells me that you knew better. The fact that you are planning to disappear before the gala confirms that. But you haven't answered my question, what did they promise you?\"\n\n\"I don't have to talk to you.\" Emmanuel snapped.\n\n\"No, but you do have to talk to me.\" Justine said quietly. \"Did you really think that we didn't know that you were lying? Why do you think that we kept you at arm's length? Didn't it strike you as odd that we never discussed the gala at dinner or whenever you were around?\"\n\nEmmanuel looked at Justine. His heart raced when he saw the flames in her eyes burn a bright red. He imagined that he could feel his skin blister from her gaze alone.\n\n\"Now answer the question, what were you going to get out of telling Rhys about Thomas?\" Justine asked.\n\nWhen he didn't answer, Justine took a step toward him. Emmanuel took a step back and backed into Quinn. He yelped, turned around and began to back away. Finally, he realized that he was trapped between them.\n\nMoments later he was sitting in the very cell that Jeremiah Mathers had occupied cursing the day that he met the Rhys. How he allowed himself to be talked into spying for him, he didn't know. The incredible part was that he wasn't being paid anything.\n\n\"They are Mage.\" Gabra said. \"He tricked you but you had every opportunity to come forward. He has no power here. The fact that you were questioning the wisdom of your decision is proof that you knew that you were wrong. My suggestion to you is this; tell them what you know. It may save you from a term in prison.\"\n\n\"Prison? I didn't do anything!\"\n\n\"You spied on the court of the King and Queen. You were going to give the information to known traitors. Intent is a punishable offense.\"\n\n\"Why are you here and not them?\" Emmanuel asked.\n\n\"I wanted to be the one to present your options. Justine and Quinn will be here to see you in a few moments.\"\n\nShe left Emmanuel alone to think about his options. It wasn't long before he realized that he had none. He wasn't going to prison for anyone especially if he wasn't going to be compensated for it. As soon as they came, he would tell them whatever they wanted to know.\n\n********\n\nWallace Dunham looked around at the opulence of the hotel room where he was staying. He was still sitting in the same spot that he had been sitting since his arrival. He was still peeved that he had been forced to accompany the vampire that sat guard outside of the hotel room. The truth was, he had been too afraid to object too much. He didn't know who these vampires were and maybe if he cooperated; he would be home by the next evening.\n\nAs he looked around the room, he saw a carafe of blood sitting on a table. He licked his lips. It had been months since he had tasted quality human blood. He had been reduced to feeding from the drunks and drug addicts who had the misfortune of having no place to go after dark.\n\nSuddenly he was moving toward the carafe. When he reached it, he didn't bother pouring it into a glass. He picked the carafe, put it to his mouth and drained it dry. He moaned with pleasure as the slightly thickened liquid coated his tongue and ran down his throat.\n\n\"It's been quite some time hasn't it?\" Anthony Rhys said from the doorway.\n\nWallace turned to look at him but didn't respond.\n\n\"My name is Anthony Rhys.\"\n\n\"Anthony Rhys? What do you want with me?\" Wallace asked. \"I don't owe you money.\"\n\n\"No you don't but I believe that we can help each other.\" Anthony replied.\n\nHe snapped his fingers and another carafe of blood appeared.\n\n\"Help each other? How?\" Wallace asked.\n\n'It's simple.\" Anthony replied. \"I want you to go to the gala. If you do, you'll never have to feed from another drunk or drug addict for the rest of eternity.\"\n\n\"I wasn't going to the gala.\" Wallace replied.\n\n\"I'm aware of that.\" Anthony replied. \"But think about it. All you have to do is attend every night and you will never want for anything. You will be under my protection for eternity. I will also settle any debts that you still owe.\"\n\nWallace stared at him. \n\n\"That's all that I have to do?\" Wallace asked.\n\n\"That's it.\" Anthony assured him. \"I'll even provide the clothing that you need.\"\n\n\"Why me?\" Wallace asked.\n\n\"I needed someone specific and you meet that need.\" Anthony replied. \"Do we have an agreement?\"\n\nWallace looked at the carafe of blood and thought about what it would be like not to hide from his creditors. He was being offered another chance to really live and not just exist. Even as he agreed, he felt a twinge of disquiet. He wasn't being told everything. He pushed the feeling aside and drained the second carafe of blood.\n\n\"You will stay here until after the gala.\" Anthony said. \"My tailor will be here later tonight to outfit you for the week.\"\n\nAfter Anthony left, Wallace took a long, hot shower. He threw his clothes into the trash and walked around with a towel around his waist. He knew that he should be asking more questions but the saying \"don't look a gift horse in the mouth\" came to mind. That was followed by the saying \"everything that glitters isn't gold.\"\n\nHe ignored the latter saying and clung to the first. Finally he would be able to stop hiding. He could find his daughter and apologize to her for giving her to Wilhelmina. He knew that Wilhelmina was a cruel woman, but he didn't think that he had a choice in the matter. Then his wife was killed. Word had it that Wilhelmina did it but he didn't believe it. His debt had been paid in full when he gave Lottie to her. When he confronted Wilhelmina about it, she looked him in the face and denied having anything to do with Ruby's death; and he chose to believe her.\n\nA soft tap on the door interrupted his thoughts. It was the tailor with a clothes cart that had several outfits hanging from it. He stepped back and let the vampire in. The feeling of disquiet was back; but worse. He had the feeling that he had just made a deal with the devil.\n\n*********\n\n\"What in the hell were you thinking?\" Quinn yelled at Emmanuel. \"I get that he put a spell on you or whatever, but why didn't you tell us the truth when you got here? That means that you made a conscious choice to commit treason.\"\n\nEmmanuel had no real answer. Quinn was right although that wasn't how he saw it.\n\n\"And he wasn't paying you?\" Quinn asked. \"So why didn't you say anything? You were safe here.\"\n\n\"I have no answer for that.\" Emmanuel replied. \"I was told that Thomas was being held against his will...\"\n\n\"But you saw that he wasn't.\" Quinn broke in. \"Sit down.\" He commanded.\n\nEmmanuel was flung across the cell and landed hard on the cot. He was barely sitting up when he felt Quinn in his head sifting through his memories. He was surprised at the relative gentleness of the search although it was far from comfortable.\n\n\"You're a fucking idiot.\" Quinn said when he pulled out. \n\n\"What's going to happen to me?\" Emmanuel asked.\n\n\"I don't know yet.\" Quinn replied as he vanished.\n\n*********\n\n\"He's guilty of stupidity.\" Quinn told Justine a short while later. \"He doesn't see what he did as treason.\"\n\n\"Are you suggesting that we let him go?\" Justine asked.\n\n\"I think that we could use him.\" Quinn replied. \"He's going to be in contact with a lot of people after he leaves here. Suppose we do a little...compelling of our own?\"\n\n\"You mean make him a spy?\" Justine asked.\n\n\"Sure! Why not?\" Quinn asked. \"He's unassuming and we only knew that he was lying because of who we are. Otherwise we would have spoken freely in front of him.\"\n\nJustine gave the matter some thought.\n\n\"I agree.\" She said. \"But we won't tell him and we'll compel him to forget anything that he may have heard or seen here. As far as he is concerned, he came here to work on my wardrobe and nothing more.\"\n\n\"That sounds like a plan.\" Quinn said as he vanished and appeared behind her.\n\n\"Shall we go talk to our spy?\" she asked.\n\n\"Ummm no, let him simmer a bit.\" Quinn replied as he rubbed his body against hers. \"You have too many clothes on.\" He whispered in her ear.\n\nA moment later he was rubbing his hard cock against her bare skin.\n\n\"I'll never get tired of you or the way you feel.\" He murmured against her neck.\n\n\"I hope not.\" Justine chuckled. \"We're going to be together forever.\"\n\nQuinn kissed her neck, pushed her down so that she was bent at the waist and slowly slid into her. Justine moaned and pushed back against him. This was one of the times where they made love without using their gifts. In many ways it was every bit as satisfying as when they did.\n\nQuinn reached around her and took a breast in each hand his fingers finding her erect nipples. He pinched and rolled them until Justine whimpered for release.",
        "\"Touch yourself baby.\" Quinn panted.\n\nJustine widened her legs, reached town and began to frantically rub her clit. She ground against Quinn as hard as she could.\n\n\"Harder!\" she moaned.\n\nQuinn slammed into her so hard that had he not been holding on to her she would have flown head first into a wall. Justine flexed her vaginal muscles, pinched her clit. She held off on her release until she heard Quinn moan deep in his throat. As soon as she felt him thicken, she squeezed her clit even harder and came just as Quinn released the first spray of his seed inside of her.\n\nAfterwards, Quinn stood her up and turned her so that she faced him. He looked down at her, smiled and then kissed her. Seconds later they were dressed and standing in Emmanuel's cell.\n\nHe was sitting on the cot with a forlorn expression on his face. He stood as soon as he sat them.\n\n\"I'm sorry!\" he said before either of them could speak. \"I was stupid! You were right but surely you know that I am no traitor! My only error was in not telling you what I knew. Please... I throw myself on your mercy. I swear my allegiance to you and yours... please!\" \n\n\"Calm down.\" Justine said firmly.\n\nShe moved so that she was standing in front of him. Justine looked into his eyes and willed him to calm.\n\n\"You now work for us. Anything that you hear regarding treason will be reported to Maurice Delgado, Lorenzo Delgado or Mikhail. You are now under our protection and no harm will come to you. Do you understand?\"\n\n\"Yes my Queen.\"\n\n\"You will also forget anything that you may have inadvertently heard. If asked, you did nothing more than prepare our clothes for the gala. In fact, you won't remember being arrested. Now go, the wedding is in three days. We will meet you in your rooms for the final fitting.\"\n\n\"Yes my Queen.\" Emmanuel said. \n\nJustine and Quinn watched Emmanuel as he was led away by a guard.\n\n\"Well.\" Quinn said. \"I should have told him to stop looking at your ass.\"\n\n\"Will you please let that go?\" Justine said laughing. \"My ass belongs to you now come on; Mikhail wants to go over things again.\n\n*********\n\nJustine looked at the wedding dress and was surprised that she actually liked it. Other than the color, it didn't look like the same dress. She still wished that her mother and David were going through the ceremony with them, but she understood. \n\nIn three hours she would be going through another wedding. She tried to keep in mind what David told her. She wasn't kissing ass but cultivating allies. She wondered how Quinn was holding up. They hadn't seen each other since the evening before. Each of them had things to do that only they could take care of.\n\n\"He did a good job on it didn't he?\" Josephine asked from behind her.\n\n\"I actually like it.\" Justine replied. \"Now if we could only get this thing over with so that we can have some fun...\"\n\nJosephine chuckled and then turned serious.\n\n\"You've made David very happy. Thank you.\"\n\n\"He's a good man.\" Justine replied. \"It was above and beyond the call of duty for him to offer the use of your island. Thank you ...mom, I can see why you love him and I can see why he loves you. I'm glad that both of you are here. What's he got planned for Lana's dad?\"\n\n\"An entry position at one of his companies.\" Josephine replied. \"He'll provide whatever education that he needs and set up a repayment schedule.\"\n\n\"What are your thoughts about Thomas' family?\" Justine asked changing the subject.\n\n\"They'll be here.\" She replied. \"But Thomas is ready.\"\n\n\"He talked to me about his mother.\" Justine said. \"I'll give her a choice to go free or go with her husband.\"\n\n\"Which do you think she'll choose?\" Josephine asked.\n\n\"Her husband.\" Justine replied as she started to head toward the shower and then turned back. \"Have you seen Quinn?\"\n\n\"Yes and he's as anxious for this to be over as you are.\" Josephine replied. \n\n\"How many people are here?\" Justine asked as she peeked through the curtains.\n\n\"The room where the ceremony will be held is already half full. The guests for the gala started arriving an hour ago. So far no major problems have been reported.\"\n\n\"Good.\" Justine said. \"Whatever's going happen isn't going to happen until the end of the week. All of the guards are hyper vigilant but by the end of the week they'll be fatigued.\"\n\n\"But that's when Gremlin's clan steps in isn't it?\"\n\n\"Yes but half of them are already here.\" Justine replied.\n\n\"You need to start getting ready.\" Josephine said. \"Do you need to feed?\"\n\n\"No, I'm good but can you just check on things for me?\"\n\nJustine started to take a shower but opted for a bath. She added bath oil, turned on the radio and got in. she fidgeted around trying to get comfortable. The back of the tub felt rock hard against her back and she wished that Quinn was in the tub with her.\n\nUnable to relax, she got out of the tub and took a shower instead. Josephine was waiting her when she came out along with the same makeup artist that did her makeup for the first wedding ceremony.\n\n\"It's a pleasure to see you again my Queen.\"\n\n\"You too... just remember no clown faces.\" Justine replied as she sat in the chair.\n\n\"I remember.\" He replied. \"I brought Felicity to do your hair this time.\"\n\n\"Yes I know.\" Justine replied. \"The other girl just had a baby.\"\n\n\"How are you doing?\" Quinn asked telepathically.\n\n\"I'm alright and I learned something.\" Justine replied.\n\n\"Oh yeah? What's that?\" Quinn asked.\n\n\"Taking a bath alone isn't any fun.\" Justine replied telepathically. \"I ended up taking a shower.\"\n\nQuinn laughed. \"I'll tell you what. As soon as we get to our room we'll sit in the tub for as long as you like.\"\n\n\"Deal... I just want this part of it over with.\" Justine said.\n\n\"I know you do. So do I.\" Quinn replied. \"But I've decided to look at it as another chance to show the world how much I love you. When I look at it that way, I look forward to it.\"\n\n\"You know what?\" Justine asked still speaking telepathically, \"You're right and I'm holding you to our date in the bathtub. And Quinn, I love you too... thank you.\"\n\n\"I'll see you in an hour.\"\n\n******\n\nAn hour later, Justine was waiting to make her entrance. The room was filled to capacity and camera crews were everywhere broadcasting the event live to every part of the world that had the technology. Josephine stood to her left holding her hand while David stood to her right. \n\nThe red dress shimmered whenever she moved, the rubies catching the light. Small rubies were placed in her hair adding to the shimmering effect. Justine moved her feet; they were already bothered by the three inch heels on her feet. She had already decided that the shoes would be the first to go.\n\n\"You look beautiful.\" David whispered.\n\n\"Thanks and thank you for walking with me.\"\n\nSuddenly everyone was standing. Justine could hear the monotone voice of the officiator from where she stood. She started to complain and then stopped herself. Both Quinn and David were right in how they looked at the event. She closed her eyes and blocked out the music and the murmurings of the guests. She decided to focus on Quinn. Nothing would be possible without him.\n\n\"Josephine, are you ready?\" Mikhail asked.\n\nJustine watched as Mikhail escorted her mother down the red runner. Quinn was already standing next to the officiator looking handsome in his gray tux. Apparently he could choose what he got to wear which irked her. \n\nAs soon as Josephine was seated and Mikhail was sitting next to Zoe, it was time for Justine and David to walk in. The music had stopped and the man standing with Quinn was speaking in a foreign language that Justine actually understood. He was saying the same words over and over.\n\n\"All hail the Queen of Queens... All hail the Queen of Queens...\"\n\nHe said this in the same monotone voice until Justine and David were standing in front of him and then he said something else. Justine let her mind wander only half listening to the man. Finally, he asked David who he was.\n\n\"I am David Sheffield, mate to the Queen Mother, friend to the Queen of Queens and her mate. It is with great honor that I hand her over to our king.\"\n\nThe man droned on for another ten minutes before holding his hand out to Justine and effectively dismissing David.\n\nJustine took the cold clammy hand of the official and looked at Quinn.\n\n\"God Jussie, you're gorgeous!\" Quinn said out loud and earning a dirty look from the official.\n\n\"So are you.\" Justine replied ignoring the official.\n\n\"Excuse me.\" the official snapped, \"But you are not permitted to speak to each other until the ceremony is complete.\"\n\nThe green flames around Quinn's eyes jumped to life as he stared at the official. The room was silent as everyone waited to see what was going to happen. Justine took Quinn's hand and gave it a squeeze. \n\n\"You cannot...\"\n\n\"Don't you dare say that we can't talk.\" Justine growled. \"You have forty --five minutes to get this done.\"\n\n\"You cannot shorten the ceremony!\"\n\n\"She just did.\" Quinn said. \"You've just used five minutes.\"\n\nObviously flustered, the official sputtered as he looked through his book trying to see what he could eliminate.\n\n\"Look.\" Quinn said. \"Say your prayers without all the repetitions, say the prayer of fertility, sing your song, bless everyone and we're done.\"\n\n\"Do you need an official command?\" Justine asked when the official still hadn't started.\n\nMaurice looked over at Mikhail trying not to laugh and then looked at Lorenzo. They had tried to warn the official before the ceremony but he hadn't listened. \n\nMaurice took a quick look around the crowded room and liked what he saw. Justine and Quinn had just established themselves as no bull shit rulers.\n\nDavid put his arm around Josephine, pulled her close and kissed her temple.\n\n\"That's our girl!\" he whispered. \n\nHe considered Justine as a daughter even if she didn't see him as a father figure. He was immensely proud of her. Like Maurice had done, David looked around the room. He had seen the dubious looks that several people had given Justine as they walked by during the processional. He noted with satisfaction that those looks were replaced with looks of respect and surprise.\n\n\"Good girl.\" He muttered under his breath.\n\nExactly forty minutes later, the ceremony was over. The official had gotten over his ire and was smiling. There was something to be said about a shorter service.\n\n\"Everyone rise and acknowledge our Queen of Queens Justine and her mate and King Quinn!\"\n\nAs one, everyone stood and bowed their heads and said the equivalent of the Pledge of Allegiance. Undercover security guards took note of who did not say the pledge, but left them alone. As soon as the ceremony was over, Quinn and Justine vanished to a room set aside for their use.\n\n\"I wish that we had time for a quickie.\" Quinn said as he changed into less formal clothes.\n\n\"Me too but duty calls.\" Justine replied.\n\nA few minutes later, they were greeting their guests. Justine took quick peeks around looking for signs of trouble. Sensing none, she turned her attention back to greeting the guests. All was well for the moment.\n\n*******\n\nWallace Dunham felt uncomfortable in the formal clothes that he was wearing for the first night of the gala. He hadn't dressed up in centuries and wished that he could get rid of the bowtie that felt as if it was choking the life out of him. \n\n\"Stop picking at it!\" Dawn Rhys, Thomas' sister and Wallace's date for the week snapped. \"Do you understand what you're supposed to do?\"\n\n\"I'm just supposed to walk around.\" Wallace replied. \"But I don't understand... why am I being paid so well to just walk around?\"\n\n\"You're also being paid to do as you're told and not to ask questions.\" Dawn retorted. \n\nThe feeling of disquiet was back. Wallace began to wonder what he had gotten himself into; but asked no further questions. He had the feeling that it wouldn't be in his best interest. He reached for the neck of his shirt again and stopped when he saw Dawn glaring at him.\n\nIt was going to be a long week.\n\n*********\n\nThe first four days of the gala flew by. There were a few minor issues and several dignitaries had been asked to leave. Apparently they hadn't believed that the guidelines stated in the invitations would be followed.\n\n\"Ambassador Kenda, you received a copy of the guidelines for the gala with your invitation did you not?\" Maurice asked.\n\n\"This is an outrage! I demand to speak to the Queen!\" Kenda shouted.\n\nMaurice looked at the ambassador unfazed by his anger.\n\n\"The outrage is that a man of your intelligence would do something so stupid as to try to sneak an unauthorized guest into the gala. Not only that... it was a human. The guidelines were very clear about that.\"\n\nMaurice paused to let the vampire defend himself. He hadn't delivered the most damning piece of information yet. While he waited for the ambassador to think of an excuse, he touched Regina's mind with his.\n\n\"I'm fine; I'm with Naila and Lorenzo.\" She sent back.\n\n\"Look here... can't we over look this? It would save me a great deal of embarrassment.\" The ambassador said with a smile. \"It was such a small thing and he is gone isn't he?\"\n\n\"Ambassador, the young human male that you brought with you is a hunter. He was here to gather information.\"\n\n\"You're lying! A hunter hasn't been seen in centuries! He is much too young!\"\n\n\"He confessed under compulsion.\" Maurice replied. \"By bringing him here you endangered all of us. You've especially endangered those of us who don't have the luxury of having security teams to help keep them safe. You're fortunate that he was found before he did any real damage.\"\n\n\"What do you mean?\" He asked nervously.\n\n\"I mean that your young man was caught talking to his contact.\" Maurice replied. \"You're fortunate that you're not in a cell.\"\n\nKenda blinked and then paled. \n\n\"Surely you don't think that I knew what he was? I....\"\n\n\"Had you followed the guidelines we wouldn't be talking would we?\" Maurice asked. \"You have thirty minutes in which to pack after which a guard will escort you off the property. If you are found anywhere near here, you will be arrested. Your thirty minutes begins now.\"\n\n\"Wait... what happened to the young man?\" Kenda asked.\n\n\"He's safe for the moment.\" Maurice replied. \"Twenty-nine minutes.\"\n\nMaurice watched the ambassador rush off and shook his head. There would be no helping Regina undress before bed. The hunter had to be interrogated.\n\nIt turned out that the hunter was new and wanted to make a name for himself. The information that he had gathered was important enough that it could have caused a great deal of trouble for all of them. Thankfully a security team member had stopped to listen and apprehended the man. After finding out who he called, Maurice compelled the man to call the number back and tell them that the information had been incorrect. After the phone call, Maurice compelled the man to give him the names and address of the hunters in the area. \n\n\"It was stupid of you to come here.\" Maurice told the hunter. \"You're lucky that you're still alive. It is well within our rights to kill you.\"\n\nThe hunter's eyes widened; but he didn't say anything. He had to admit that the vampire was right; he shouldn't have come.\n\n\"I don't understand this hatred that you have of us.\" Maurice said. \"The majority of us are law abiding citizens. We have families that we love just as you do. We are doctors, lawyers and many of us struggle to live day to day just as you do. There are those of us who are evil and who make no effort to mainstream. Those we hunt and destroy. They are an enemy to you and to us so why do you come after those who do you no harm? Answer me.\"\n\n\"It's what we are taught.\" The hunter replied. \"We only know that your kind lie, steal, rape and murder.\"\n\n\"Has one of my kind ever hurt you or anyone in your family?\" Maurice asked.\n\n\"No... but...\"\n\n\"But what?\" Maurice interrupted. \"You blindly believe everything that you've been told? You don't have a brain?\"\n\n\"Are you going to kill me?\" The hunter asked in a shaky voice.\n\n\"I could but I won't\" Maurice replied. \"I have a better idea.\"\n\n\"W... what are you going to do to me?\"\n\n\"Silence!\" Maurice said as he looked into the dark brown eyes of the terrified hunter.\n\n\"You will be escorted away from here. You won't remember how you got her or anything about this place. You will remember what I'm about to tell you. Do you understand?\"\n\n\"Yes sir.\"\n\n\"When you leave here, you will go home. You will tell the leader of your group about the rogues and convince him that they are the true enemy. You will suggest to him that he work with us to eliminate this common enemy. When he finally agrees... and this may take some time, you will say one word; oyez which means call to attention. That word is only to be used when you need to reach me. Is that understood?\"\n\n\"I understand.\" The hunter replied.\n\n\"Repeat my instructions.\" Maurice commanded.\n\nSatisfied that the hunter would do as he was told; Maurice had him taken from the premises. He found Mikhail and told him what happened.\n\n\"Good thinking.\" Mikhail replied. \"I'm going to send someone to watch him and the leader.\"\n\nFortunately the other incidents weren't nearly as serious but exceptions couldn't be made. Part of the reason for the gala was so that the reigning Queen could set the tone for her rule. Justine and Quinn had done that nicely. Everyone now knew that they would take no nonsense, but on the other hand; they were seeing a Queen and King who weren't afraid to intermingle with and have a good time with their subjects. \n\nMaurice watched as Quinn talked with vampires who were obviously struggling to survive. Whatever Quinn said to the vampires made them happy. Their toothy grins could be seen from across the room. Justine was handing a drink to a woman who looked to be in her seventies... the age at which she had been turned. \n\nAll and all, things were going well; but three days remained. He watched Gabra and Jian was they walked from table to table sometimes stopping; but most times not. He was beginning to wonder if anything was going to happen but...\n\nHe looked behind him to see Anthony Rhys talking to a group of vampires. The thought that they might get through the gala with no further incidents flew out of the window. Maurice looked around the room to see if he could spot Thomas. When he didn't, he sent out a group telepathic message.\n\n\"Anthony Rhys is here.\"\n\nOne by one he got a response acknowledging the message. \n\n\"Let's go make ourselves known.\" Mikhail said from beside him.\n\n*******\n\nThomas hadn't let his guard down even though Lottie was much more relaxed. He wasn't going to relax until the gala was over and his father was in prison. His arm was around Lottie's waist when he felt her tense.\n\n\"Lottie? What is it?\" He asked looking around.\n\n\"I... I thought that I saw someone that I haven't seen in years... but I must have been mistaken.\"\n\n\"Who was it that you thought you saw?\" Thomas asked.\n\n\"My father... but he would never come to something like this. He would be too embarrassed. Many of his old business associates are here.\"\n\nThe wheels started turning in Thomas' head. \n\n\"Lottie if he tries to get you to go with him; don't. He's working with my father.\"\n\n\"What? Thomas are you sure?\" Lottie asked.\n\n\"Remember we couldn't figure out how they were going to take you.\" He replied. \"The only way would be for you to go with them.\"\n\n\"My father... that's why he's here.\" She whispered. \"He was the one person that we didn't think about.\"\n\nThomas looked around the crowded room looking for his family.\n\n\"They're here.\" He said. \"Maurice just spotted my father. They're waiting you to wander off.\"\n\n\"I won't... I promise.\" Lottie said.\n\n*********\n\nWallace walked around the large building still confused as to why he was there. He ran into a few business associates who while polite; were standoffish. Dawn Rhys was never far from his side, but she never spoke to him unless it was to berate him for something. It was clear that she didn't like him, but then; he didn't like her either.",
        "It was the fourth day of the gala and he was bored. The only thing that was keeping him there was the money. It was late evening when he swore that he saw Lottie. He stared at the spot where he thought he saw her and began to make his way there.\n\n\"Where are you going?\" Dawn asked.\n\n\"I...nowhere.\" Wallace replied still looking at the spot.\n\n\"Then let's keep moving.\" Dawn said and walked away. She knew who he had seen, but now wasn't the time to call him out on the lie. If she did, he would put it together and that would stop them in their tracks.\n\n********\n\nThomas found Lorenzo and Naila standing by an exit watching the crowd. He knew what he needed to do, but he needed to make sure that Lottie was safe. He planned to put an end to his family's activities as soon as possible.\n\n\"Lorenzo, I must take care of some things, may I leave Lottie with you?\"\n\n\"Of course, but are you sure that this is wise?\" Lorenzo asked.\n\n\"I have to take care of this in my own way.\" Thomas replied. \"But I need to know that Lottie is safe. Will you help me?\"\n\n\"Thomas.... Please...this is what he wants.\" Lottie said. \"You'd be walking into a trap.\"\n\n\"I know.\" Thomas replied. \"Then it is no longer a trap is it? I want your word that you'll stay with Lorenzo and Naila. That is the way in which you can help me the most.\"\n\nLottie started to object, but then agreed.\n\n\"Call if you need help.\" Lorenzo said.\n\nThomas looked at him with an intensity that made Lorenzo nervous and glad that he was on their side.\n\n\"Thank you. Just watch after Lottie.\"\n\nLorenzo watched Thomas walk away like a man who knew what he had to do and had the confidence that he would succeed. He looked at Lottie and gave her an encouraging smile before sending a message to Maurice.\n\n\"Thomas is on the move, leave him alone unless he calls for help.... yes... I'll tell them.\"\n\n********\n\nQuinn had just finished a dance with a woman who had insisted on bringing him a plate of food when he received the message from Lorenzo. Justine looked at him and nodded. She had just gotten the same message.\n\n\"Thank you for the dance.\" Quinn said politely. \n\nThe woman tittered and then blushed before she backed away.\n\n\"What's he up to?\" Quinn asked Justine when he reached her.\n\n\"He wants to prove himself.\" Justine replied. \"And I'm fine as long as we're ready to jump in if he needs help.\"\n\n\"Jussie... he isn't going to need it.\" Quinn replied. \"As long as Lottie is safe, he'll be fine.\"\n\n*********\n\n\"Wait here.\" Dawn said as she walked away. \n\nWallace glared at her but did as she asked until he saw Lottie again. He started to leave his place when a voice stopped him.\n\n\"Don't go to her. If you do, they'll take her.\"\n\n\"Who are you?\" Wallace asked as he turned around.\n\n\"Thomas Rhys. Anthony Rhys is my father.\"\n\n\"How do you know Lottie?\" Wallace asked.\n\n\"She's my mate and my father wants her to get to me.\" Thomas explained. \"Stay here and someone will come to guard you.\"\n\n\"What about Lottie?\"\n\n\"She's safe as long as you stay away from her.\" Thomas replied.\n\n\"I need to talk to her...I need to explain...\"\n\n\"Later.\" Thomas interrupted and walked away.\n\nWallace jumped when he felt a hand on his shoulder.\n\n\"My name is John; I've been assigned to watch you.\"\n\n*******\n\nDawn stopped short when she saw Thomas talking to Wallace.\n\n\"Shit!\" she swore and tried to vanish.\n\n\"Your powers don't work here.\" Thomas said with a smile, \"But mine do.\"\n\nDawn's eyes narrowed as she looked into his face.\n\n\"Fuck....\"\n\n\"Watch your language.\" Thomas said softly.\n\n\"You may have your gifts.\" Dawn said, \"But you don't know how to use them, and even if you did; that doesn't change what you are.\"\n\n\"And what would that be?\" Thomas asked as he took Dawn by the arm.\n\n\"Weak and pathetic just like father says you are. \"\n\n\"Oh yes... I had almost forgotten that, but Dawn; who is it that is using a father to gain access to his daughter? Father is brave? Then where is he? Why hasn't he called me out if I am so weak? Why are you here on the front lines? But it doesn't matter... You don't have to explain why you were planning to kidnap of one of the Queen's court members.\"\n\n\"You would turn me in? You would go against your family?\"\n\n\"I disowned you as my family when I realized what you wanted from me.\" Thomas replied his tone icy. \"Lottie and the Queen's court is my family.\"\n\nDawn laughed.\n\n\"You really are stupid! Why do you think that they want you?\" she sneered. \"They want you for the same reason father wants you.\"\n\n\"That's true.\" Thomas replied. \"But here's the difference... they asked and didn't make me feel as though I was worthless. But I understand now. Father wanted me to feel that way so that I would be easier to control. It's why he was so thrilled when I was mated to Wilhelmina... they had plans. He didn't plan on the Queen of Queens appearing nor did he plan on Wilhelmina dying.\"\n\n\"Thomas... I can help you...\"\n\n\"I don't need your help.\" Thomas replied. \n\nHe murmured under his breath and Dawn was gone.\n\n********\n\nJustine spotted Thomas talking to a woman that had to be his sister. Moments later, the woman was gone. She looked to see if anyone had noticed.\n\n\"Well damn!\" she exclaimed. \"Quinn, cover for me\"\n\nSeconds later, Justine was sitting across from Dawn assessing her and not liking what she saw.\n\n\"You like hurting people.\" Justine said. \"You are loyal only to yourself... in fact, you're trying to think of a way not to go to prison for treason even as we speak.\"\n\nDawn looked into Justine's glowing eyes and knew that it would be pointless to try to negotiate with her.\n\n\"You're smart to not to try to bullshit me.\" Justine said. \"I appreciate that. You know, I was prepared to give you victim status, but I won't. You're no more of a victim than the cot that you're sitting on. You liked tormenting Thomas along with your father and brother. You liked torturing the human males that you picked up at the bars... you are one sick bitch. Someone will be here to take you away shortly.\"\n\n\"Where are you sending me?\" Dawn asked.\n\n\"You don't need to know that.\" Justine replied as she stood. \"But you'll never be released. You committed treason the moment you planned to take Lottie and Thomas. They are members of my court. Don't worry, your father and brother will be joining you shortly.\"\n\n*********\n\nThomas found his brother Marcus in the banquet room. He had to laugh in spite of the situation. His brother loved to eat and always had some kind of food nearby. Until recently, Marcus was the only one of them who could eat.\n\n\"Hello Marcus\" Thomas said as he picked up a shrimp canap\u00e9. \"The food is delicious isn't it?\"\n\nMarcus stared as Thomas popped the canap\u00e9 into his mouth, chewed and then swallowed it.\n\n\"Delicious! Have you tried the little meatballs? They're made from a recipe that the Queen Mother got from her mother... what's wrong Marcus? You look ill.\"\n\n\"When did you start eating food?\" Marcus asked.\n\n\"A couple of weeks ago.\" Thomas replied as he reached for one of the meatballs. \"It took some getting used to; but now I can't believe what I was missing. Are you sure that you're alright? You seem nervous.\"\n\n\"I... have you seen Dawn?\" Marcus asked looking around.\n\n\"As a matter of fact I have.\" Thomas replied. \"Marcus, do you know what treason is?\"\n\nMarcus didn't answer; but began to back away from the table.\n\n\"Treason is what you, Dawn, father and mother have committed time and time again. It was only a matter of time before you got caught, but you screwed up.\" Thomas said as he ate another meatball.\n\n\"What are you talking about?\" Marcus asked.\n\n\"You shouldn't have come to the gala.\" Thomas said. \"You committed high treason against the Queen's court.\"\n\n\"I did no such thing!\" Marcus said as he took another step backwards.\n\n\"Do you deny finding Wallace Dunham for father?\"\n\nMarcus didn't reply. He didn't like the look in Thomas' eyes.\n\n\"All of you have committed high treason. Lottie is my mate and you planned to use her to take me. Tell me, did you explain to her father why he was here?\"\n\nMarcus opened his mouth to yell.\n\n\"Shut up Marcus.\" Thomas commanded. \"Go with the guards.\"\n\n********\n\nQuinn was waiting in the cell when Marcus was brought down. Marcus tried to vanish as soon as he saw him.\n\n\"Give it up, you can't vanish.\" Quinn said quietly. \"The only people with their gifts are those in our court so sit your ass down.\"\n\nMarcus sat down on the cot and waited.\n\n\"What in the fuck were you thinking?\" Quinn asked. \"Did you really think that you could walk in here and commit treason? Oh... I know, you didn't know that Thomas and Lottie were one of us. It doesn't matter because we were coming after you anyway. You just saved us the trouble of finding you. Enjoy your last hours of freedom.\"\n\nMarcus watched Quinn vanish and then looked around the cell. He tried to vanish again; but soon gave up.\n\n\"Maybe dad will get away.\" Dawn said from the cell on the opposite side of the room.\n\nMarcus didn't reply. He knew that it was a false hope.\n\n*********\n\nNaila sat with Lottie holding her hand. \n\n\"I'm sure that he'll be fine.\" She assured her.\n\n\"I know... but... I'm still scared.\"\n\n\"We won't allow anything to happen to him.\" Lorenzo assured her.\n\nLottie gave him a grateful smile but still held on to Naila's hand. \n\n\"Naila.\" Lorenzo said softly, \"You're being watched. Do you know him?\"\n\nNaila looked past Lorenzo and looked at the vampire that was staring at her.\n\n\"No... I don't think so.\" She replied. \"He's coming over.\"\n\nLorenzo stood in front of the table and waited for the vampire to approach.\n\n\"Please, I mean no harm to the young lady. It's just that she reminds me of someone that I loved.\" He said with a soft Scottish lilt.\n\n\"Who are you?\" Lorenzo asked.\n\n\"I apologize... I am Blair Camran. As I said, the young lady reminds me of someone from my past.\"\n\n\"Who do I remind you of?\" Naila asked.\n\n\"A very beautiful woman.\" He replied. \"I loved her and still love very much but she was not my mate... I had to let her go.\"\n\nNaila gripped Lorenzo's hand.\n\n\"Was her name Annalisa?\" she asked.\n\n\"Do you know her?\" The vampire asked. \"Is she well?\"\n\n\"She was my grandmother.\" Naila replied. \"She used to tell me about you... not your name...I'm sorry, but she died five years ago.\"\n\nThe vampire's shoulder's slumped s tears formed in his eyes.\n\n\"I loved her.\"\n\n\"I know. I could tell by the way her eyes lit up when she talked about you.\" Naila replied. \"She died thinking about you.\"\n\n\"Please... may I sit? I would like to hear your memories of her.\"\n\nLorenzo nodded his agreement but remained in a defensive position. In a way, he was glad that the vampire showed up. It gave Lottie something else to concentrate on.\n\n********\n\nSomething was wrong.\n\nAnthony looked around for Marcus, Dawn and Wallace. When he didn't find them, he looked for his mate Elizabeth. She hadn't wanted to come; but he had given her no choice in the matter. His anxiety grew as he went from room to room looking for any one of them. He had a moment of panic when he saw both Maurice and Mikhail heading his way; but relaxed when they turned in another direction. Now he wondered about it.\n\nNot having his gifts was a pain in the ass and he actually felt a little sympathy for the humans who had been born without gifts. Finally, he caught sight of Wallace and began to rush over when he realized that he didn't see Dawn. He hoped that she hadn't left Wallace alone so that she could sate her insatiable need for pain and blood. \n\nHe took another step and then stopped when a vampire stepped in front of Wallace. It was obvious that the vampire was a guard. He realized that Dawn must have been caught; but what about Marcus? Even if Marcus was free there was no way that they could get to Lottie. They needed Wallace for that. There was only one thing to do. He had to leave and now. Elizabeth would have to get out on her own.\n\n\"Aren't you having a good time?\" Thomas asked just as Anthony reached the door.\n\nAnthony stopped. The voice belonged to Thomas; but it was different.\n\n\"Thomas! How is it that we're just now seeing each other?\" Anthony asked with false cheerfulness.\n\n\"I don't know father. There are a lot of people here.\" Thomas replied pleasantly.\n\n\"Your brother and sister are here... have you seen them?\" \n\n\"Yes, we've spoken.\" Thomas said. \"I can even tell you where they are.\"\n\nAnthony had a bad feeling, but he asked anyway.\n\n\"Where are they?\"\n\n\"Both of them are locked in a cell downstairs. There's one for you too.\" Thomas replied.\n\n\"You fuck...\"\n\n\"Watch your mouth.\" Thomas said. \"All of you are going away for a very long time. And before you start with the family crap... save it. I don't want to hear it. Before you ask if I'm really going to turn you over to the Queen; damn straight I am.\"\n\n\"I see.\" Anthony said with a smirk. \"Your gifts are active and you think that you're special. You're not. You're the same sniveling little bastard now as you were then. You can be brave now because you've got the Queen and King; but without them you're nothing.\"\n\nThomas let his father talk without interrupting him. It was the same old things that he heard for most of his life, but this time; it didn't hurt.\n\n\"Are you finished?\" Thomas asked. His voiced held a bored quality to it. \"I've heard all of this before... don't you have anything new?\"\n\n\"Cocky little bastard aren't you?\" Anthony asked.\n\n\"No, I finally understand.\" Thomas replied as he took a step toward his father. \"This is all about control. That's why you're here. You brought Lottie's father here to lure her away... very stupid move on your part. What did you think would happen when Wallace realized why you wanted him here? Did you think that he would betray his daughter twice? You need her to control me. It was never about the Queen and King... it was about me and my gifts.\"\n\n\"So brave aren't you?\" Anthony asked smoothly. \"How brave are you where our gifts can be used? Are you brave enough to face me alone?\"\n\nThomas stepped in close to his father and looked into his eyes.\n\n\"I am no longer that timid, frightened child who grew to be a timid and frightened man. That man disappeared when Wilhelmina and then you threatened my mate. Are you ready to do this?\"\n\nAnthony was stunned. He could feel a heat radiating from Thomas that hinted at the power that he held at bay. If he didn't do something; control of the family would fall to Thomas.\n\n\"I have someone following your mother. If you don't come with me, she dies.\"\n\nThomas' dark eyes flashed in anger and then he laughed.\n\n\"No you don't.\" he said. \"Mother is talking with the Queen. She's the only one not going to prison as Justine as given her victim status. She had the option of going with you; but she declined.\"\n\n\"You're lying...\"\n\n\"So father, what would you like to do?\"\n\n********\n\nFather and son faced each other in the field behind where the gala was taking place. Thomas agreed to have Maurice and Mikhail present only if they gave their word not to interfere.\n\n\"If I die then he goes with me.\" Thomas said. \"Just make sure that Lottie is cared for.\"\n\nAnthony's courage had returned now that his gifts were back. He believed that he would have no trouble defeating his son. After all, he had centuries of practice while Thomas was new to his power. Before Thomas could say anything, Anthony threw the first magical punch. His was stunned when Thomas stopped the spell to bind his gifts before it left his hands.\n\n\"Would you like to try again?\" Thomas calmly asked.\n\nAnthony tried several times to get the most powerful of his spells to go through. The last spell he whispered was aimed at Lottie. He had uttered the word just before he threw his last attempt to bind Thomas' powers again. As he had hoped, the whispered word was enough to distract Thomas. \n\nThe spell had almost reached him when Thomas felt himself being shoved aside.\n\nAnthony screamed as the spell flew back at him, hitting him directly in the chest. It was a hit that should have killed him; but yet he lived.\n\n\"Oh no you don't!\" Thomas hissed in his father's face. \"You don't get to die like this. I want your ass to rot in prison.\"\n\nAnthony laughed.\n\n\"You can't stop me now can you? You may be strong...\"\n\nHe stopped talking when he looked at Thomas' eyes and then his hands. He strained to hear what Thomas was saying and then realized that he didn't understand the words. Pains worse than the one the spell had caused made him scream and then sob. A moment later, he was lying on a cot next to the cell Marcus was in.\n\n********\n\nLottie sat at the table with Naila, Lorenzo and Blair listening to the stories about Naila's grandmother. She knew that Thomas was alright and had just begun to relax when her nose began to bleed. Lorenzo was the first to notice.\n\n\"Lottie... your nose.\" Was all he got out before Thomas burst into the room. Without saying a word, he picked Lottie up and took her to their suite.\n\n\"Thomas... what's happening?\" she asked oddly not frightened but more curious.\n\n\"My father sent a spell to you.\" He replied. \"You're only still alive because the spell was severely weakened since it didn't come from one of us. Rest while I get ready to break the spell... Lottie, it's going to hurt.\"\n\n\"But it doesn't have to.\" Justine said from behind him. \"I can put her in a sleep so deep that she won't feel it.\"\n\n\"Your guest...\" Lottie said.\n\n\"Don't worry about them.\" Justine replied. \"Mom and David have things under control. Now close your eyes.\"\n\n********\n\nAnthony opened his eyes to see Quinn, Mikhail and Maurice looking at him.\n\n\"Which of you took the shot for him?\" he asked as she sat up.\n\n\"That would be me.\" Maurice said. \"Is that all you had? If so, no wonder you had to cheat.\"\n\n\"Yes but you no longer have your powers do you?\" Anthony said with a sneer.\n\nSuddenly he was floating off the bed and then dropped. He landed on the cot with a loud thud.\n\n\"Do you mean those powers?\" Maurice asked with a smile.\n\n\"Fuck!!!!\" Anthony yelled as pain ripped through his chest.\n\n\"So...\" Quinn said. \"You're the infamous Anthony Rhys. You don't look like much from here.\"\n\nQuinn paused to give Anthony a chance to respond.\n\n\"Nothing to say? Good then I'll talk.\" Quinn said. \"I'm not going to go through the whole treason thing. I'm sure Marcus and Dawn will fill you in so I'll just skip to the sentencing part. The three of you will never see the light of day... I mean night again. You will never have access to your gifts again. I'm going to give you all your own very special kind of hell and since I'm a gentleman, I'll start with the lady first. \n\nI hear that you like to torture people so here's your punishment... I was thinking of letting you spend eternity with the souls of the ones you tortured, but you'd probably enjoy that. So I took the liberty of peeking into your memories to see what you hated the most. You hate your family... all of them so you will spend an eternity with your brother and father. And to promote bonding... your cells will be right next to each other.\n\nNow... Marcus. You were a little bit harder. You don't hate anyone... not really but you do love your food. The guards told me that you've been eating nonstop since you got here so here's what we're going to do. Food will be available; but it will be in Dawn's cell. You only get it if she gives it to you and judging by the way she's looking at you; that isn't going to happen.\n\nLast, but not least Anthony. \"You could have done so much good with your gifts...well anyway, here's your punishment. As I said, you will never be able to access your gifts again, but you're going to have phantom pains. You're going to feel that little burn in your belly and you'll try to activate your gifts. You'll feel the beginning of them waking, become excited and then...nothing. I know that it doesn't sound so bad, but you won't be able to help yourself. You'll keep trying even though you know the end result. Imagine an eternity of having that frustration. Well you kids have fun... oh wait I almost forgot. You won't be able to commit suicide or kill each other. You won't be able to go insane either.\"",
        "Quinn left the cell followed by Mikhail and Maurice without looking back.\n\n\"Begin now.\" He murmured as he vanished to where Justine and Thomas were working with Lottie.\n\n\"How is she?\" he asked.\n\n\"She'll be fine. She just needs a few days to rest.\" Justine replied. \"Are the traitors taken care of?\n\n\"Yes.\" Quinn replied hugging her.\n\n*********\n\nThe rest of the gala passed without incident. Word of the Rhys' arrest replaced the talk about the wedding ceremony. If there had been any remaining doubt about the capability of the royal quartet, it had been put to rest. All of them, Justine included were happy to see the week end. There was one more party to take care of and then they could move on.\n\nJustine kept Lottie asleep until the day after the gala ended. She wanted to be sure that she was fully recovered. Wallace sat outside of the suite refusing to move until he was sure that Lottie was out of danger. When he found out that she was awake, he was going to leave; but Thomas stopped him.\n\n\"She wants to see you.\"\n\nWallace wiped his hands on his pants and went into the suite. Lottie was sitting up in a chair still pale, but definitely not on death's door. He didn't know what to say to her. \n\n\"Papa come sit with me.\" she said softly.\n\nHe was struck by the lack of anger in her face and in her voice. When he reached her, Lottie took his hand and gave it a squeeze.\n\n\"Lottie... I ... I didn't know... I wouldn't have come.\"\n\n\"I know... Thomas told me everything. Why didn't you tell us that you owed money? We could have helped.\"\n\n\"I... Wilhelmina would only accept you. We had to give you to her or she was going to kill all of us except for you. I was in an impossible position... after your mother and brothers were killed by hunters I didn't care anymore. I had failed in so many ways and here I almost betrayed you again. I am so sorry.\"\n\nLottie wiped the tears from her father's face ignoring her own. He had suffered so much, as much as she had and now she had to tell him how her mother really died. She thought about waiting, but it wouldn't be any easier later.\n\n\"Papa... the hunters didn't kill mama... Wilhelmina did. I wouldn't do as she asked so... she killed mama. I'm sorry! \n\nThomas left the room to give father and daughter time to mourn together. He had already spoken with his mother and made his peace with her. She would be going to one of the homes that Justine owned. Oddly she didn't appear to be upset over the fate of her mate and children. When Thomas asked her about it, he found out that it was as Justine said. She had been a victim of the cruelty of her mate and children. He had kissed her on the cheek and promised to keep in touch. In response to the promise, she just smiled.\n\n***********\n\nJustine sat on the beach and wiggled her toes in the sand. Josephine and David sat with her each with a laptop working on their various projects. Josephine had decided to take refresher courses and to continue the goal of getting her RN. \n\n\"That's what I was working toward when I got taken and I'm going to finish what I started.\"\n\nDavid closed his laptop, gave Josephine a peck on the cheek and ran down the beach to help Quinn, Lana and Sara, Lana's sister build a sand castle. David had been right... the family just needed to know that the help that they were receiving wasn't free or charity. Once they understood that and signed the papers that they had insisted on, they were on board with the move.\n\nJustine leaned back and closed her eyes relishing in the feeling of normalcy. Who knew how long it would last? She decided that it didn't matter. They would take it as it came. For now though, she was Justine Graves O'Dell, wife, stepmother, daughter and lawyer. \n\nIt was all good. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "interracial",
        "vampire"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/justine-ch-22"
}