{
    "title": "New Horizons Ch. 14-18",
    "pages": [
        "Chapter 14\n\n \n\nIf there was one thing Alex would never tire of, it was the energy spilling into every facet of the theater on an opening night.\n\nNights like these made her forget that so many of her days in the office blended together into the mundane.\n\nThe week before opening night was always a nightmare with fire drill after fire drill. There was always some kind of disaster she had to deal with. Like last minute program changes because a silent \"e\" was left off an actor's name, or somehow someone managed to erase half the lighting cues during tech. But by opening night, most of those details had been ironed out.\n\nEven the press had already been dealt with for the most part. There would be a handful of photographers at the opening night party, but this show was celeb-less so there wouldn't be many.\n\nThe reviewers came to the show during the preview performances, so Alex didn't even need to worry about them.\n\nNow, an hour from curtain, everything was set and she had just gotten back to the theater after going home to change. She held a large bouquet of flowers in one hand as she knocked on the door to one of the dressing room's backstage.\n\nCourtney answered the door, with a wide smile on her face, wearing nothing but a simple nude camisole, her hair already done up in pin curls for the wig that would cover them.\n\n\"My Princess Charming, at last,\" she said as she gleefully grabbed the flowers. \"But no quickies before a show,\" she added as she pointed a warning finger at Alex.\n\nShe moved back into her dressing room and Alex followed, rolling her eyes and kicking the door shut with her foot at the same time.\n\n\"That's such a lie. Don't forget we have shared more than one dressing room with each other and I have walked in on more than my fair share of you in pre-show quickie mode.\"\n\nAlex leaned against the counter across from the one Courtney was occupying. Since the cast for this show was so small, Courtney had this dressing room to herself, but it was made for more than one actor so there was a lot of extra counter space and mirrors.\n\nCourtney sat down at the mirror and pulled out her overflowing make-up kit as she looked over at Alex.\n\n\"Is that an offer?\"\n\n\"No. I just came to say, break a leg. Not, fancy a fuck. Sorry, babe.\"\n\nCourtney paused her eyeliner application to give Alex a discerning look through the mirror.\n\n\"Too bad, because you're looking like sex on a stick tonight.\"\n\nAlex suddenly looked down and smoothed out her shirt. When she looked back up, Courtney was still looking at her, but now her eyebrow was raised slightly.\n\n\"And I assume this look isn't for me. How is our little model doing?\"\n\nAlex knew there was no point lying to Courtney and she didn't really want to. Her entire body had been vibrating since her pizza date with Quinn and she was anxious with anticipation of seeing the woman again in almost an hour.\n\nThey hadn't texted since their moment by the stage door, which was fine with Alex. At this point she felt like she might say something she'll regret.\n\nQuinn had a way of making her feel more vulnerable than she was used to and her desire to hear those soft moans come out of the woman's mouth almost paralyzed her from being any kind of productive human being.\n\n\"We kissed,\" she muttered. \"Twice.\"\n\nCourtney spun around on the stool she was sitting on and slapped her hands down on her knees.\n\n\"You kissed? Girl. You need to tell me that before I start on my eyeliner,\" she said as she waved her hand back to her forgotten make-up kit.\n\n\"You get ready. We'll talk about it later.\"\n\nAlex walked over to Courtney and turned her stool around so she was facing the mirror again. She bent down so she was face to face with her friend, staring back at their joined reflection.\n\n\"Watching you perform is one of my favorite things. Break a leg, babe.\"\n\nCourtney smiled at her friend through the mirror as she picked up her eyeliner again.\n\n\"Thanks for the flowers, Blanche. You never forget.\"\n\nAlex gave one last quick nod and left the dressing room area so she could head out to the front of the theater. She was expected to greet major donors and stakeholders since her father wouldn't be there in person.\n\nShe could picture him now sitting in his office with his bottle of scotch in front of him, waiting for the opening curtain to take his first sip. It was a silly ritual that he did for each show, but Alex preferred not having to deal with him anyway.\n\nAlex was schmoozing with a board member she could actually tolerate when she saw Quinn sweep into the lobby of the theater. She had to force herself not to audibly gasp at the sight.\n\nThe brunette was wearing a silver dress that tightened around her middle and flowed out towards the bottom. Up the side of the dress was a slit that came to her thigh and showed off her shapely legs and smooth skin. Her feet were in black strappy heels that complimented the lines of her legs. She reminded Alex of a Russian figure skater, all long legs, pale skin and striking features.\n\nAs warm as Alex felt at that first sight of Quinn, that was how fast her blood ran cold when she spotted the person coming in to stand next to the brunette. Spencer, the woman she last saw ogling Quinn at The Library, was lightly grabbing the corner of Quinn's elbow and laughing about something in her ear.\n\nQuinn laughed back at whatever Spencer had said. Alex was vaguely aware of the board member still talking as she bore her gaze down on the unsuspecting actresses. Excusing herself with as much elegance as she could, she quickly moved over to the two women.\n\nQuinn saw Alex approaching before Spencer did and Alex felt a rush of satisfaction, and maybe arousal too, at the way Quinn's eyes raked over her body like Alex was a glass of water she desperately needed.\n\nAlex silently applauded her choice of outfit for tonight. When Quinn reacted so strongly to the suspenders look, Alex decided to forgo the dress she had picked out for tonight in lieu of a custom-made tux.\n\n\"Good evening ladies,\" Alex said as she leaned in towards Spencer to give her a quick kiss on the cheek.\n\nAs she leaned into Quinn, she reminded herself she couldn't just rip the dress off of her right there so to keep the kiss G-rated and firmly on the cheek.\n\nSomehow her lips seemed to hit the side of Quinn's mouth despite what she had just told herself. Quinn gently squeezed her arm as she leaned back from the peck and Alex gave her a small smile.\n\n\"Hey, Alex. You look amazing,\" Quinn said as her eyes roamed the blonde's body again\u2014apparently Quinn's inner voice was not telling her to be as subtle as Alex's was.\n\nSpencer, the ever the clueless Casanova, didn't seem to notice the tension between the other two women and blurted out, \"I was just telling Quinn here that her dress is gorgeous. She's stunning.\"\n\nSpencer put her hand on Quinn's upper arm when she said it and Alex could see Quinn visibly stiffen.\n\n \n\n\"She certainly is,\" Alex said, not even bothering to look at Spencer when she said it.\n\n\"If you'll excuse us, Spencer, I have a few donors I'd like to introduce Quinn to.\"\n\nWithout even waiting for a response from the other woman, Alex took Quinn's hand in hers and guided her away to the other side of the lobby where the bar sat. Quinn squeezed her hand as they walked away and seemed more than eager to follow.\n\nThe bar area was busy and there wasn't much space at the counter. Alex used the opportunity to pull Quinn into her so they were closer than they would normally be standing somewhere in public.\n\n\"Let me guess, you don't like people touching your things,\" she heard Quinn say low in her ear so only she could hear.\n\nThe low vibration and closeness of Quinn's mouth sent a shiver down her spine. Alex turned her head slightly so she could look into Quinn's eyes, which held a hint of amusement. She looked down at the lips that just a day ago were wrapped around her own before responding.\n\n\"You're not my plaything, Quinn,\" she said seriously.\n\nShe then looked away so she could make eye contact with the bartender. He stopped what he was doing and approached immediately, knowing just who Alex was.\n\n\"But in general, no I don't,\" she added as she accepted the two flutes the bartender handed over.\n\nOnce they had their drinks, Alex motioned for them to move over to the side of the lobby that had fewer people. Alex should have been talking to the donors, directors, and influencers of the crowd, but she found herself drawn to the beautiful woman in silver.\n\n\"You really do look beautiful,\" Alex said quietly to Quinn as they stood in their private corner.\n\nQuinn looked at her and smiled slowly, \"Thank you, Alex.\" She looked over the crowd and took a sip of her drink before she added in a whisper, \"it was for you.\"\n\nThey were both quiet for a moment before Quinn turned to her again. \"You'll have to point Janet out to me before we head to dinner. I have no idea what she looks like.\"\n\nAlex's brow furrowed at the mention of \"we\" and \"dinner\" and \"Janet\". Quinn seemed to notice her confusion, which caused her own brow to furrow.\n\n\"She invited me to dinner at her table tonight...I thought you knew,\" she said.\n\nAlex's brow smoothed out as understanding crossed her features. \"Oh. No. I didn't know she invited you. She doesn't usually invite the artists to her opening night table.\"\n\nQuinn continued to look confused. \"But I'll be happy to have you there. These things get really boring sometimes,\" Alex said as she smiled sincerely at the brunette.\n\n\"Is it weird? That she invited me?\"\n\nAlex had never seen Quinn look so self-conscious, but she also knew Mikey usually handled the business side of things for her. And the truth was she didn't remember Janet ever inviting an actor to the table but the publicist was also a social butterfly and often gravitated towards fame.\n\nQuinn may not be famous, but Alex could see her appeal to someone like Janet who made her living on rising the social ladder. Not that she had to try hard with her kind of family money.\n\n\"Janet likes to make new connections, so not that weird,\" Alex replied as the lights in the lobby started flashing. \"Meet me here after the show and we'll head to the restaurant together.\"\n\n\"Always bossing me around,\" Quinn said as she smiled back.\n\nAlex leaned in so her mouth was close to Quinn's ear and put her hand on the woman's lower back.\n\n\"You haven't seen anything yet, Nemo.\"\n\nShe flashed her a mischievous smile and then turned into the crowd of people making their way to the theater doors. She didn't look back but could feel Quinn's lingering gaze on her.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nEver since her first field trip to see a community theater production of Anything Goes when she was in high school, Quinn had loved the theater. But this show was really making her question that.\n\nBy the final curtain, she thought she deserved an award for Most Likely to Fall Asleep Yet Didn't. She was disappointed she hadn't gotten to see Alex at intermission, but the blonde had told her she was going to the office to make sure everything was set for the party later.\n\nMainly she wanted to see her so she could feast her eyes on Alex in that tuxedo again. If she had thought the suspenders the other day might kill her, she couldn't imagine what her pulse felt like when she saw Alex walking towards her in the lobby earlier.\n\nAlex's outfit choice gave her the perfect distracting fantasies during the boring production she just had to witness. It wasn't that the performers weren't amazing, they were, all of them. But the source material was beyond dry. Quinn couldn't help but worry that if this was the kind of show Horizon was used to producing, her show was going to be a very different detour from that.\n\nAs she came up to the spot she had agreed to meet Alex, she could see the other woman standing there already, scrolling through her phone.\n\nIf it hadn't been for the phone in her hand, Quinn thought Alex looked like an early nineteenth century aristocrat with her regal stance, hand on her hip, and looking like she owned the entire theater and maybe every theater in New York City.\n\nThere was something so feminine about the delicate features of Alex's face and the way her nose was lightly sprinkled with freckles that Quinn could only see if she was close enough.\n\nHer long blonde hair was pulled back into a low side bun tonight, which just helped to showcase smooth skin, shining blue eyes, and a full, entirely too kissable mouth.\n\nStanding there in her tuxedo with an air of such seriousness, confidence and power, she looked untouchable. Quinn couldn't stop herself from thinking that Alex looked like a really hot, more feminine, Mr. Darcy.\n\nAs if Alex could hear Quinn's salacious thoughts, she looked up from her phone and gave the brunette the smile that seemed reserved just for her. She didn't make Quinn walk up to her, striding to the brunette with determined steps and a wolfish smile.\n\n\"Hello again. Ready? We should get there soon so we can head to the party.\"\n\nAlex put out her elbow for Quinn to grab, which she did, feeling like she had the sexiest date to a post-opening dinner that may have ever existed in the world of theater.\n\nChapter 15\n\n\"Tell me more about Janet,\" Quinn said as they crossed the street to the theater.\n\nShe didn't miss the way Alex pulled her closer to her body the moment they were alone on the street.\n\n\"I feel like her name keeps coming up and now she's invited me to dinner, and I don't even know who she is.\"\n\nAlex gave a low chuckle\u2014 the one that made Quinn's knees feel a little less stable than they should.\n\n\"Janet was my mom's best friend. So I've known her, for well, for forever I guess. She's owns the PR agency that we use for all Horizon shows.\"\n\nQuinn scrunched her nose up at that, which made Alex smile before she continued.\n\n\"I know, a publicist, right? I feel the same way in general. But Janet is alright. She was always there for my mom and she seems to have a distaste for my dad. Basically, her husband died when she was in her early 20s and she never remarried. He had a bit of a fortune that he left to her and she calls it her 'play money'. She's a big patron of the arts and one of our main donors. Every opening I ever go to, Janet is usually there.\"\n\n\"I didn't see your father tonight,\" Quinn said. \"I thought he'd be there.\"\n\n\"I haven't known him to ever sit through an opening night. He says its bad luck, the worst luck. He's pretty serious about it. He sits in his office and starts drinking once the opening curtain rises.\"\n\n\"He's had to have seen an opening before though right? What about when you were in shows?\"\n\nAlex slowed their walking since they had arrived at the restaurant. It was a small Italian place that was conveniently right next to the restaurant that would host the post-opening party. She turned to Quinn so she could answer her before they were in the restaurant.\n\n\"He's never seen me perform.\"\n\nQuinn knew firsthand that pity was the worst emotion to show someone who's been through something taxing. But in that moment, all she could do was stop her mouth from hanging open. Her wide eyes had a mind of their own though and she knew she couldn't hide the shock from showing.\n\nA father who had never even saw his daughter in a show? Quinn's parents may not be perfect, but they were always in attendance when she performed growing up. She couldn't fathom a father who's in the arts, just ignoring the talent and passion of his only daughter.\n\n\"Alex, what? He's never seen you perform? But how is that possible?\"\n\nBefore Alex could answer, Quinn heard a high-pitched squeal come from across the street. A woman who looked like she was in her 60s was striding across the street towards them, the numerous bracelets on her arm and neck, making almost as much noise as she was.\n\nQuinn couldn't tell what was dress, what was shawl, and what was some other weird fabric contributing to her outfit.\n\n\"Darlings! I'm so glad you're here. Now, I know that was a bore, but no long faces at my dinner,\" the woman finished as she finally came within feet of them.\n\n\"Janet, always a pleasure,\" Alex said as she leaned into kiss Janet on both cheeks.\n\nQuinn noticed Alex already seemed more at ease with this woman than she'd seen her act with anyone other than Courtney.\n\nJanet made a show of dramatically pushing Alex aside so she could turn her attention on Quinn.\n\n\"And here she is. Our beautiful fashion victim. The one who's going to steal all our hearts soon. Hello, Quinn. You look positively stunning.\"\n\nThis time Janet leaned into Quinn, kissing both her cheeks, and then held the woman's arms so she could make a show of getting a closer look.\n\n\"And you are stunning,\" she added before she looked over to Alex with a small smile.\n\n\"Thank you, Janet. I've heard many things about you, but I'm going to make you guess whether or not they were good,\" Quinn laughed back easily.\n\n\"Cheeky, cheeky,\" Janet replied. \"Let's eat, shall we? That play made me hungrier than an orphan.\"\n\nWith that she left them in a wake of her overpriced perfume and walked into the restaurant to no doubt claim her reservation.\n\nAlex smiled at Quinn when the brunette rose her eyebrows.\n\n\"Yep,\" Alex said. \"That's Janet.\"\n\nShe motioned for Quinn to enter the restaurant in front of her, and Quinn suddenly felt very naked not having Mikey there to buffer for her.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nDinner was more fun and more casual than Quinn expected it to be based on her first impression of Janet. It could also be that she was sitting next to Alex and their thighs were now firmly up against each other's, sending bolts of warmth straight down south.\n\nShe was thrilled to know Alex wanted to maintain as much physical contact as she did tonight. If Janet hadn't been watching the two of them like a hawk all night, she may have even tried to hold Alex's hand under the table.\n\nIt was nice to see Alex relax more than she ever seemed to in the theater and she and Janet had an easy rapport with each other that can only come with years of history.\n\nShe was slightly surprised by how few people there were at the dinner. She had expected a long table with board members and influential theater patrons, but this was far more intimate than that.\n\nAt the table sat Janet, Quinn, Alex, and a board member she was introduced to as Tim Delvin. She recognized him since he was the person talking to Alex when she arrived at the theater earlier.\n\nAlex introduced them when they got to the table and described Tim as her \"favorite\" board member. But Quinn didn't know Alex well enough to know if that was a tactic of schmoozing with big wigs or if it was actually how the woman felt.\n\nIt didn't take long for Quinn to realize Alex must have been sincere. Tim was funny, charming, passionate about theater and while not a good friend of Alex's, it was obvious he was someone she respected a lot.\n\nJanet on the other hand was everything Quinn pictured when she thought of a loud, brash New York publicist. She made every question into a production and even the most mundane statement came out as if she was telling you the biggest secret in the world.\n\nShe peppered Quinn with question after question as if the actress was the most interesting thing she had met in years. Quinn supposed that was a special talent of Janet's. After a while of that though, Quinn was completely sick of talking about herself so she attempted to steer the conversation.\n\n\"Alex tells me you're a long-time family friend. Are you from New York?\"\n\n\"God no. I'm from a very small town in Ohio you've never heard of. I met Alex's mom Peggy when I moved to the city for an internship. Back in the ancient times when the printed press was invented,\" she laughed with an easy air of someone who didn't actually believe she was that old.",
        "\"My mom started Janet's company with her. They were a team until my mom retired,\" Alex said to Quinn. \"They were quite the duo back in the day I hear.\"\n\n\"Quite.\" Janet smiled back, her eyes distant for only a second until she composed herself. \"We even got Alex working there for a time before she decided that PR was the devil.\"\n\n\"You worked for a PR company?\" Quinn asked Alex.\n\n\"Don't look so judgmental dear. It's not as if I said she interned for the Mafia after all,\" Janet said amusedly.\n\n\"Oh no, sorry, I didn't' mean\u2014.\"\n\nAlex held up her hand and stopped Quinn's rambling apology.\n\n\"Don't worry, Quinn. Janet knows exactly how I feel about working for a PR company.\"\n\nJanet scoffed at that. \"My dear. It was hardly slave labor.\"\n\nAlex laughed as the waiter came back to their table with their food.\n\n\"There will always be a tense relationship between the press and those who court them,\" Tim said as he pointed at Janet, \"the artists,\" he pointed to Alex and Quinn, \"and the money,\" he said finally as he pointed to himself. \"And here we are, all having dinner together.\"\n\n\"World peace is imminent,\" Quinn joked back.\n\nTim gave her a dashing smile and soon they all fell into easy conversation about the show, in which Quinn tried her best to be polite.\n\nThis dinner was such a different scene to ones she's had in LA. She craved this kind of real conversation over a meal\u2014 none of her LA friends would have been satisfied simply talking about theater and their favorite authors.\n\nAs she and Tim went back and forth on favorite places to eat in LA, she heard Janet's loud voice boom over the table as she spoke to Alex in what appeared to be a heated debate.\n\n\"How can you claim it's not dear? When is the last time you were in a sold-out house outside of Times Square?\" Janet threw her napkin on the table with flair as if to exemplify her point.\n\n\"What I'm saying, is that theater as a whole is not dead.\" Alex smiled when she noticed Quinn focusing her attention on their little debate. \"I'm saying that the model for success has changed. Music didn't die with the introduction of records, but the format in which people consumed it certainly changed. For the better in most ways.\"\n\n\"And what is our modern advancement for keeping the arts alive? My nieces and nephews knew the word YouTube before they knew Broadway...much to my dismay\", Tim chimed in and placed his hand over his heart as if wounded. The table laughed at his theatrics.\n\n\"It's not one thing,\" Alex argued. \"It's thinking about audiences differently and the ways to reach them. Thinking beyond the old subscription model. It's hard to convince people to buy a whole season of something when they don't know where their next paycheck is coming from. Theater needs to become less elitist and more accessible. It needs to get its head out of the 19<sup>th</sup> century and incorporate the modern technologies humans see in their everyday lives. It needs people like Quinn, who write truly original shows, things that allow us to understand the human experience in a personal way we can't get from TV and film.\"\n\n\"Amen!\" Janet cheered from her seat.\n\n\"Indeed! Your vision is beautiful. If only more theater directors were like you,\" Tim added.\n\n\"Most theater directors are dinosaurs and have never even heard of multimedia theater,\" Alex laughed.\n\n\"Maybe not. But you've already created a model for other theaters to follow. You're very lucky to have ended up with Horizon. Alex is changing the whole theater scene, city wide,\" Janet said.\n\nIt took Quinn a moment to realize the comment had been directed to her. She was still lost in the passion behind Alex's words from before. It was these moments, when she got to see Alex's intense emotions, that she knew her desire for this woman went beyond just the physical.\n\n\"I am. Alex and the team over there have already impressed me so much,\" she replied looking at Alex who kept her eyes down on her plate.\n\n\"We didn't do anything that different than regional performance centers are doing all over the country,\" Alex deflected.\n\nThe conversation went on while Quinn simply sat back and let the other three argue the merits of the way different theaters operated. She was happy to simply watch Alex as she spoke about something she clearly cared so much about. She was so articulate and poised in her opinions and Quinn was happy to just stare at her while she spoke.\n\nAfter their dishes were cleared and they were gathering their coats, Janet pulled Quinn into a surprising hug.\n\n\"I won't be at the party, I loathe those. But please call me if you need anything. Though something tells me you'll be fine,\" she looked over at Alex who was putting on her jacket before she turned back to Quinn and gave her a knowing smile.\n\nQuinn simply smiled back and gave a short nod. She didn't even know what was happening with Alex so it seemed presumptuous that Janet thought she did.\n\nTim came up to her next and gave her a kiss on each cheek. \"I look forward to seeing your show. Front row, opening night,\" he said as he held up his hands in a Boy Scout salute.\n\n\"Thank you, Tim. Maybe we can get coffee sometime.\"\n\nSomething about the man drew her to him and in the back of her head, Quinn felt like maybe Mikey would think the same.\n\nTim gasped in dramatic fashion. \"I haven't been asked out by a woman in years. And I accept whole heartedly,\" he said back, bowing slightly to her.\n\n\"As long as you know I won't put out,\" she winked back.\n\nTim threw his head back and laughed at that, making Quinn smile wide in return.\n\n\"And thank god for that,\" he said.\n\nAnd with that, Janet put her arm through Tim's and whisked him out of the restaurant shouting back to Alex that they needed to talk next week about \"things\". Without answering Janet, Alex turned back to Quinn and gave her a shy smile.\n\n\"Look at you making friends everywhere you go,\" she said.\n\n\"Well I am incredibly charming,\" Quinn said back, looping her own arm into Alex's who guided them to the exit after Janet and Tim.\n\n\"Ms. Collins, your modesty is astounding,\" Alex joked back as she opened the door for them to leave.\n\nAs they exited the restaurant they were met with the cool, crisp air of a New York City October night. Alex pulled Quinn into her tighter as the cold crept into the spaces between them.\n\nQuinn considered asking Alex to forgo the party completely so they could finally be alone. But she knew Alex needed to at least put in an appearance, so she steeled herself to an hour or two of more of pointless banter with people she didn't want to see naked.\n\nBut for now, she'd remain patient. She knew the blonde was well worth the wait and every fiber of her throbbing body knew it too.\n\n\"Let's go to this damn party. So we can leave,\" she said in a low voice that she hoped clued Alex in to where she'd like this night to go.\n\nAlex didn't look at her as she continued walking to the next restaurant, but out of the corner of Quinn's eye, she could see a smile on the woman's face. Tonight held an endless amount of promise.\n\nAs they got close to the party, Quinn could see a large group of people outside waiting to go in. Alex stopped walking as they got closer and pulled Quinn gently so they were behind a bus stop a block from the restaurant.\n\n\"I need to go in alone,\" she said tentatively, looking at Quinn with her brows furrowed. \"It's just that\u2014.\"\n\nQuinn put her hand up to stop Alex from continuing. \"I get it,\" she said and squeezed Alex's upper arm gently. She pointed to herself, \"Artist.\" She then pointed to Alex. \"Theater boss.\"\n\nShe took Alex's hand in hers and smiled shyly. \"Two households, both alike in dignity and all that?\"\n\nAlex laughed at the brunette's reference. \"Well hopefully this isn't quite as tragic as Romeo and Juliet.\"\n\nShe pulled Quinn further into the recess of the bus stop so they were fully shielded from the group around the corner.\n\n\"But I need to say this, Quinn. I'm not ashamed to be seen with you. The thing with my father is...complicated. And one day I'd like to tell you more. But I like you. And I want you. Tonight.\"\n\nAlex was now only a hair from Quinn's lips as she spoke. Her hands had somehow made their way to Quinn's waist without her even noticing. She was far too distracted by the words coming out of the usually stoic woman's mouth.\n\nQuinn was well aware of the connection they had\u2014certainly physical but also becoming much more than that\u2014but she had been pretty convinced Alex would try to fight it for a while longer.\n\n\"If we do this, we can't be open about it,\" Alex continued in a low voice. \"At least not right now. Not until after your opening. For you and for me. I have things riding on this just like you do.\"\n\nIt was hard to think with Alex so close to her, let alone say anything. Quinn tried to sift through her thoughts and everything the blonde was saying to her.\n\n\"Alex, my show is the most important thing in my life right now. I would never do anything to sabotage that, not for any woman.\"\n\nAlex pulled back to look in Quinn's eyes. \"I know that. And I didn't mean to assume you would. I just know my father. And I want to protect this,\" she pointed back and forth between the two of them. \"For as long as I can. Selfishly.\"\n\nQuinn smiled at that and leaned in slowly to give Alex a small kiss on the lips. It wasn't as heated or passionate as some of their past kisses, but it was the most intimate one they had shared. Full of promise and hope for what may come.\n\n\"I have one more request,\" Alex whispered against Quinn's lips.\n\nQuinn smiled into her lips as she spoke. \"A request? How unlike you. Usually you just command.\"\n\nAlex gave her low seductive chuckle and she wrapped a hand behind Quinn's neck, holding her firmly in place so she could stare intently into her eyes.\n\n\"Not for this,\" she said. \"You were right with what you said earlier at the theater. I don't like to share. If we're going to do this, I need to know you won't be with anyone else.\"\n\nJenna had been a very possessive girlfriend taking issue if Quinn so much as wore a top she found too revealing for anyone else's eyes. Not that Quinn was a provocative dresser by any means\u2014quite the opposite compared to her other fashion industry friends\u2014but she had always garnered attention for her looks. And Jenna resented it. She was the movie star after all.\n\nJenna's jealousy was also ironic since she wasn't faithful herself and always had one foot out the door and into her ex-husband's bed.\n\nBut for some reason Alex's request made Quinn's pussy throb in that sudden, electric way only Alex seemed to have the power to do.\n\n\"I only want you,\" she whispered back.\n\nQuinn put her hands through Alex's coat so she was gripping onto her shirt under the jacket and leaned in to take Alex's mouth in a much hungrier kiss than the sweet one she had laid on the woman's lips before. Alex responded with equal hunger, gripping the back of Quinn's head and opening her mouth to take in the brunette's tongue.\n\nQuinn lost track of time as the kiss grew heated. Alex moved the hand not gripping Quinn's neck up the side of her dress, making the actress moan into her mouth.\n\nAlex's fingers were light as they slowly made their way up Quinn's body, stopping right under her left breast. Quinn could feel her body trembling as Alex gently cupped her breast and grazed her thumb along a nipple that instantly hardened under the other woman's touch.\n\nAlex pulled her mouth away from Quinn, who groaned at the sudden loss of contact. Alex didn't move her hand away from Quinn's breast but she did pull Quinn's head back so she could look at her.\n\nQuinn had never seen Alex's eyes so dark. They almost completely lost their blue. They both stared at each other, Alex's chest heaving from the kiss while Quinn tried desperately not to let her knees buckle from the way Alex was touching her.\n\nFinally, Alex moved her hand away from Quinn's breast and up to her lips, lightly touching them with the tips of her fingers.\n\n\"Ms. Collins,\" she smiled gently as she pushed some fallen hair behind Quinn's ear. \"You are something else. I'll see you inside.\"\n\nShe leaned in gently and kissed Quinn on the mouth before pulling back only a fraction from her lips.\n\n\"And I can't wait to taste all of you later.\"\n\nShe gave Quinn one more quick smile and walked towards the now smaller crowd outside the restaurant. Quinn decided to sit at the bus stop for a few minutes before going in\u2014she needed her panties to air out.\n\nChapter 16\n\n \n\nThe only good thing about choosing a play as dull as their fall production was that the party was fairly tame. When they have celebrities on their stage or anything that draws a younger crowd, the parties tend to be a much bigger affair, with more press to deal with and an overall bigger headache for Alex.\n\nBy the time she got to the Death of a Salesman party, the cast was already inside and dancing and the crew from the theater wouldn't be far behind. As she entered the space, she looked around until she spotted her father and Rick speaking to one of the cast members at the bar. She groaned internally as she made her way over to them. She knew she better get this over with now.\n\n\"Rick, the show was wonderful. You should be proud,\" she said as she placed two quick kisses to his cheeks.\n\nShe had her own feelings about the show but ultimately it wasn't Rick's direction of it that bothered her. It was the choice to do that play to begin with. It was exactly the kind of theater she was trying to steer Horizon away from.\n\n\"Thank you, my love. Your opinion always means the world to me,\" he smiled back at her. \"And don't forget to find my husband, he's been asking after you. I think he comes to these parties so he can see you more than to support me,\" he laughed.\n\nLarry and Rick had been together since they were in their 20s, which for a gay couple in the New York theater scene was basically unheard of. Before Larry retired from his position at the Guggenheim, they were quite the cultural power couple in the city.\n\nAlex always had a soft spot for Larry who was soft spoken and often took the back seat in a social situation to his much louder and charming husband. But growing up, when her parents would have big parties with the who's who of the New York arts scene, leaving Alex alone in her room to play by herself, Larry had always found her and made her feel special.\n\nSometimes they would read plays together or he'd simply just talk to her about school. It wasn't until she was older that she realized Larry was a huge introvert and hated those parties too\u2014he would rather talk to an inquisitive child than deal with the syrupy smiles and extravagant stories of New York's elite all trying to top each other.\n\n\"I'll go find him now. I only come to these for him too,\" she smiled back.\n\nAs she grabbed a glass of champagne from a walking server, she turned to her father who was still busy talking to a pretty actress from the show. Hypocrite, she thought.\n\n\"Father.\" She smiled and leaned in to kiss his cheek. \"Nice to see you out of your cave,\" she lied.\n\n\"You missed our photo on the step-and-repeat, Alexandra,\" he replied.\n\nAlex did her best to control the anger she felt bubbling in her stomach at the admonishing tone her father managed to seep into every interaction they had. In his eyes, she had always done something wrong even though he knew very well her presence in a photo was irrelevant to the media.\n\n\"I imagine the press got what they wanted with you and Rick, dad,\" she said back as she looked at the young actress who was suddenly playing with the beads of her dress like they were the most interesting thing she had ever seen.\n\n\"I was having dinner with Janet. If you'll excuse me, I'd like to go find Larry. And it seems you're busy, no?\" She looked at the young actress again before smiling at her father and leaving.\n\nShe knew she'd pay for that public subordinance later, somehow, but right now she couldn't find it in herself to care. The only thing she really wanted was to say hello to the few people who would notice her absence and get a certain sexy brunette into her bed. She mentally checked her father and Rick off that list.\n\nShe went straight for the bar, knowing Larry's usual position was perched on some stool, away from the crowd. And sure enough, as she approached the bar, she was able to spot his fading ginger hair.\n\n\"Mr. Weston, I swear you get younger every year.\"\n\nLarry turned around on the stool he was occupying and gave Alex a warm smile.\n\n\"That's a lie, but you're sweet to say it. How are you Alex?\"\n\nHe moved in for a hug, something that Alex always appreciated about Larry. He never kissed her cheek in the way most New Yorkers in the theater scene seemed to prefer. When Larry saw Alex, he always hugged her.\n\n\"I'm well. How are you? You must be proud of Rick.\"\n\n\"I am, I am. I prefer musicals as you know, but it was good, nonetheless. That Courtney of yours is quite the talent.\"\n\nAlex gave him a smile. Larry had been convinced she would marry Courtney ever since he came to see them in a performance during their NYU days. She didn't have the stomach to explain sexual dynamics and chemistry with him. But she would only ever be Courtney's friend and that's the way both women preferred it.\n\n\"She was amazing. I'll make sure to tell her you said so.\"\n\n\"Well I can see her just over there. And now that I've seen the only person I like in this theater, I can go.\"\n\nHe moved off the stool and put his signature red scarf around his neck. Alex never saw Larry without some kind of silk scarf on.\n\n\"But we should do lunch soon if you're not too busy for an old queen. I would love to hear more about your plans for the future.\"\n\nAs he said it, Alex noticed that he looked over towards where Rick and her father stood. She was going to ask what he meant about her future plans, but he leaned in and gave her another quick hug.\n\n\"Now go. Be young. Enjoy the party,\" he said.\n\n\"Lunch soon would be great. Just call the theater,\" she said to him.\n\n\"I will,\" he said as he turned to leave. Before he did, he turned back with a more serious, thoughtful expression than he had on his face before.\n\n\"Take care of yourself, Alex. Don't let that father of yours bring you down too much.\"\n\nAlex watched Larry go with a slight frown on her face. Larry usually only stayed at these parties for an hour anyway, but that interaction and sudden departure felt odd. She made a mental note to follow-up with him for lunch.\n\nAs she was looking in the direction that Larry just left, she saw Courtney talking to a pretty blonde with springy curls at a cocktail table. She walked up behind her friend and slid an arm around her waist.\n\n\"Courtney Powers, would you sign my program?\" she whispered into her friend's ear.\n\nCourtney squeaked in joy as she turned around to pull Alex into a tight hug. Alex remembered the old high after a show, especially an opening, and wasn't surprised by the joyful laugh that came out of her friend.\n\n\"But really babe,\" Alex said as she hugged the red head back. \"You were amazing.\"\n\n\"Even though the show was a bore?\" Courtney joked as she pulled back from their embrace and smiled fondly at Alex.\n\nTheater was something special they shared\u2014they were each other's harshest critics, biggest cheerleaders and always there to inspire each other in art.\n\n\"Even so,\" Alex winked back. \"You light up every stage and always have.\"\n\nAlex's eyes turned to the blonde waiting patiently at the table to be introduced.\n\n\"Oh! I'm so rude. Alex, this is Paige. Paige, Alex.\" Courtney slid her arm around Paige's waist as she introduced them and Alex could already see the tenderness in her friend's eyes as she looked at the blonde woman.",
        "\"You must be the stage manager,\" Alex said as she extended her hand. \"I've heard great things.\"\n\nPaige took Alex's hand in her own and gave her a firm shake.\n\n\"And you're the best friend. I've heard some good, and some...interesting things about you\",\" she said as she laughed lightly.\n\nAlex could instantly see why her friend was attracted to the petite woman. Paige's big, brown eyes were warm and expressive, cringing cutely at the corners when she smiled. She looked at Courtney like the woman could do no wrong and Alex's heart swelled for her friend. She deserved an honest, open, and committed woman after the things she'd been through with her own family.\n\n\"Anything bad was all a lie. Courtney is just jealous,\" Alex said.\n\n\"Like she's going to believe you. You look like an evil Bond character in that tux,\" Courtney quipped back.\n\n\"On the contrary, honey. I think she looks rather dashing.\" Paige smiled at them both before giving Alex an exaggerated wink.\n\n\"See, I know you're just trying to make me jealous. But I'm sorry to break it to you darling, the apple of her eye just walked through the door.\" Courtney nodded to the front door of the restaurant.\n\nAlex's heart began to beat so fast she could hear the blood rush to her ears. How is it that a woman she just saw, just had pressed up against a bus stop, could still make her heart thud on the spot like that? As Quinn's eyes met hers across the room, she got lost again in their dark orbs.\n\n\"Earth to Alex!\" Courtney said loud enough that it jarred Alex's attention away from Quinn and to her friend who was looking at her with a huge smile on her face. \"I was just saying to Paige here that you have a little bit of a crush. But that seems rather obvious now that she can see the drool coming out of your mouth.\"\n\nAlex almost put her hand up to her mouth to check for actual drool before narrowing her eyes at her friend. She needed this part of the conversation to be over before Quinn made it over to them and she was even more embarrassed.\n\n\"Shut up, Court. She's coming over,\" Alex said in a rush.\n\nCourtney merely laughed at her before turning back to Paige again. \"She's usually a total stoic statue. Not this melting puppy dog you see before you.\"\n\nPaige put her hand gently on Alex's arm, ignoring Courtney. \"Don't worry, Alex. I'm a better wingman than my tactless girlfriend here is.\"\n\nAlex's eyes lit up as she saw the blush creep up Courtney's face. \"Girlfriend, is it?\"\n\nShe asked the question, gladly taking the opportunity to change the subject away from Quinn, who she noted was now cornered near the bar by Rick. Luckily her father wasn't anywhere in the vicinity.\n\n\"Well Paige, if you ever need dirt on your girlfriend, I'm happy to help,\" Alex said, giving Courtney a mischievous smile.\n\n\"Don't you have someone to boss around somewhere?\" Courtney asked with a mock glare.\n\n\"In fact, I do.\"\n\nAlex turned to Paige and took her hand. She gave Courtney a sly smile before bending slightly to kiss Paige's hand gently.\n\n\"It was a pleasure, Paige. Keep this one out of trouble for me.\"\n\nPaige gave her a bright smile before putting her arm around Courtney's shoulder. \"I'm a stage manager. Actors don't worry me. And you should go ask that girl for a dance before she's snatched up.\"\n\nAlex followed Paige's eyes to Quinn who was now surrounded by a handful of admirers, Spencer included. Damn that girl was relentless, Alex thought.\n\nAlex gave Courtney and Paige another smile before leaving the table. She wasn't used to feeling like she was in competition with an entire room, but she shouldn't be surprised. Quinn may not be a movie star, but she was a high-end model with one of the biggest agencies in the world. For an Off-Broadway theater company that just made its audience sit through a play from 1949, Quinn was beyond glamorous.\n\nThis time she didn't need to pull the woman away though. As soon as Quinn saw Alex walking toward them, she said something to the group and started moving towards the blonde.\n\n\"Groupies already?\" Alex asked jokingly as Quinn approached her.\n\nThey didn't touch this time and Alex felt like there was an elastic band of sexual tension forming between their bodies.\n\n\"Just bored actresses.\" Quinn smiled back. \"Are you enjoying yourself?\"\n\n\"Not as much as I'd like to be,\" Alex said back in a low voice. \"And I'm not feeling very patient tonight.\"\n\n\"Hmm, that's too bad. Anything I can do to help that?\"\n\n\"Meet me at my place? I'll leave first.\"\n\nQuinn's intake of breath was answer enough. She looked up at Alex and didn't try to mask the huskiness in her voice.\n\n\"Text me your address.\"\n\nAlex gave her a small smile before moving past her towards the door to the restaurant. Once outside she took out her phone and sent Quinn a quick text.\n\nAlex: 66 west 38<sup>th</sup> street, apt 1701. See you soon.\n\n \n\nBefore she hit send, she quickly added a fish emoji to the end of the text.\n\nShe knew she should stay at the party longer, but she also didn't know how much longer she'd be able to keep her hands-off Quinn and the party was not the place to do that.\n\nMaybe Courtney was right and she was turning in to a \"melting puppy dog\" as she put it. She could deal with that pesky problem later.\n\nFor now, all she could think about was that silver dress on her floor.\n\nChapter 17\n\nQuinn made sure she gave Mark a hug before she escaped the party. Ever since their first night out at The Library, he had become a good friend. He stopped by her rehearsal room the few times she was at the theater and they've even gotten coffee a handful of times near her new apartment.\n\nShe had seen Alex talking to Courtney and some other woman at the party earlier and would have loved to tell Courtney how good she was in the play, but she couldn't find her and was scared of getting cornered again.\n\nBeyond wanting to get to Alex, she wasn't sure how much longer she could hang out at this party with her ruined underwear rubbing against her swollen center.\n\nShe especially didn't want to get cornered by Spencer again. The woman was nice but didn't seem to be picking up on the not-so-subtle hints Quinn was dropping to her that she wasn't interested.\n\nPutting her head down, she quickly made her exit and hailed a cab to Alex's, her body trembling from either nerves or excitement or most likely, both.\n\nAlex's building was nice. In a city as expensive as this one, Quinn couldn't complain about the digs Mikey found for her. It was a lovely apartment. But this\u2014this place was beyond opulent. One of those high-rise luxury apartment buildings you see characters in movies live in but know no normal New Yorker could ever inhabit.\n\nThough given what Alex told Quinn about her family's money, she guessed this was normal for Alex.\n\nStanding outside Alex's beautiful gold door, knowing the inside of the apartment was probably even nicer than the gorgeous marble filled lobby downstairs, her palms began to sweat.\n\nShe wanted Alex like she had never wanted anyone before. But images of Jenna were flashing across her mind. She had wanted her once too. She had trusted her too. And look how that had turned out. Should she really be risking her show for someone who wouldn't even go into a party with her? Where could this actually lead when Alex wouldn't even be seen with her?\n\nEven with her mind racing with every rational thought she could muster, Quinn knew she wasn't walking away from this door.\n\nThe front desk must have given Alex a heads-up that she was there, or maybe she had seen Quinn through the peep hole, standing there like an idiot wondering whether or not she should knock. Really it didn't matter because Alex had opened the door and was standing there looking like a debonair Grace Kelly.\n\nShe was still wearing the tux pants from before, but the jacket and tie were gone and the crisp white shirt was completely unbuttoned, revealing a simple white tank top underneath. She was holding the door open with one hand, a dark drink in the other and exuded such an air of sexual confidence Quinn wasn't able to form words.\n\nWithout speaking Alex moved so that she could hold the door open wider and motioned for Quinn to enter the apartment. They walked down a short hallway and into a huge, open room that had ceiling to floor windows all along the far wall.\n\nIn fact, there was no wall. It was only windows. Quinn couldn't help but move to them so she could look out at the dark city, glittering with lights. Down below them she could faintly see the outline of Bryant Park. It may not be the lakes and mountains she grew up around in the Pacific Northwest, but it was its own form of beautiful.\n\nShe jumped slightly as Alex suddenly spoke beside her, offering her a glass of champagne. She noticed Alex had traded in whatever dark liquor she was drinking for her own glass of bubbly.\n\n\"It's my favorite part of the apartment. I love these windows,\" Alex said in a quiet voice.\n\nQuinn tore her eyes away from the city so she could look at Alex better.\n\n\"Are we celebrating something\"? she asked as she clinked her glass against Alex's offered one.\n\n\"Opening night. You being here. That dress,\" Alex replied as she took her first sip of the champagne.\n\nQuinn followed suit and savored the pop of flavor on her tongue. It was obviously an expensive bottle.\n\n\"And what did you think of the show tonight?\" Alex asked as she moved over to the couch near them and motioned for Quinn to join her.\n\n\"How honest can I be without offending your loyalties?\" Quinn asked as she sat down on the couch, making sure her leg was close enough to touch Alex's.\n\nAlex laughed lightly at that. \"I hope you'll always be very honest with me. Tell me.\"\n\nShe moved her hand so that she was lacing her fingers through Alex's and suddenly the last thing Quinn wanted to talk about was theater.\n\n\"The cast was phenomenal. Courtney stole every scene she was in. Everything about the production was well done and I really liked some of Rick's decisions.\"\n\n\"But?\"\n\n\"But....it was a little dull, I guess. I mean the source material just feels old and tired and I may have pinched myself a few times to keep awake.\"\n\nQuin took a large sip of her champagne as she peered over her glass nervously at Alex. Alex didn't direct the show but she did help with programming. Alex didn't look upset though, instead she gave Quinn a smile and nod.\n\n\"I agree. I don't mind a classic. But I think there needs to be a distinction on choosing classic works that include themes that still ring true in modern society and choosing classic works because it makes us feel somehow sophisticated.\"\n\nShe took a small sip before continuing. \"I didn't have a say in the fall show. It's always Rick's. I don't even think my father cared that much for that choice.\"\n\n\"But he doesn't push back on Rick like he does on you?\" Quinn asked tentatively.\n\nShe wanted so much more out of tonight than to talk about Alex's family. But she also wanted to get to know what was so complicated about her relationship with her dad.\n\nAlex gave a harsh laugh. \"No. Technically they're equals in the hierarchy of the theater. But they're also best friends. And very much part of the old boys club.\"\n\nQuinn desperately wanted to see the fun, seductive version of Alex again so she decided to change the subject away from the one topic she knew would sour the mood\u2014 Simon Anders.\n\n\"I saw Courtney at the party with a woman. Is that her girlfriend?\"\n\nAlex's face softened at the mention of her friend. \"I actually just met Paige tonight. I guess they're officially together. It's really new. But I've never seen Courtney so smitten, so I'm happy for them.\"\n\nQuinn was quiet as she played lightly with Alex's hand, turning over her palm so she could gently place a kiss on it. Alex didn't say anything, but just continued to stare intently at the brunette.\n\n\"Alex, what you said earlier tonight...I like you too. But I'm nervous right now.\"\n\nAlex moved in closer so she could put her arm around Quinn, resting it on the back of the couch.\n\n\"We don't have to do anything tonight. We can just talk,\" she said in an almost whisper.\n\nQuinn turned so she was close enough to smell the champagne on the other woman's breath.\n\n\"I don't want to talk anymore,\" she replied.\n\nAlex moved off the couch and extended her hand to Quinn, smiling gently.\n\n\"Come. I'll show you the rest of the apartment.\"\n\nShe took Quinn's hand in hers and pulled her through a different hallway than the one they originally came down. The apartment was big but not obnoxiously so.\n\nAs they went down the hallway, Alex pointed out two rooms\u2014 one that she had converted into an office and the other that was a guest room. Though, she only pointed to the doors as they passed them and didn't go in.\n\nThe last room at the end of the hallway was the master bedroom and Quinn could feel her heartbeat pick up steam as Alex opened the door and lightly pulled her in. Once in the room, she took both champagne glasses and set them down on a large dresser just to the right of the door.\n\nQuinn only gave the room a quick once over. She was much more interested in the woman who owned it. And it was much like the rest of the apartment\u2014 sophisticated in its sleek, minimal design. Quinn may have even guessed a rich bachelor lived there if she hadn't known. Most of the colors across the apartment were shades of black, white and grey.\n\nQuinn let Alex take the lead knowing that's what the blonde preferred, and she was trembling from anticipation so much that she couldn't think clear enough to do anything else but follow the other woman's lead. Luckily Alex seemed free of nerves and was staring at Quinn with pure, lustful determination.\n\n\"You look so beautiful tonight. I could see everyone's eyes on you,\" she whispered into Quinn's ear as she slowly pushed her against the door.\n\n\"I only cared about your eyes,\" Quinn said back in a breathy voice.\n\nAlex began slowly kissing down Quinn's neck and moving her tongue back up the length of it so she could whisper in Quinn's ear again. She moved her lips right against the lobe, causing Quinn to shut her eyes and suppress a moan that wanted to escape her lips already.\n\n\"I want to make you feel good tonight. I can go as fast or as slow as you want. Just tell me, ok?\"\n\nQuinn nodded slowly, unable to do anything else while Alex's mouth was so close to her ear. She wanted to feel that tongue run down her neck again. She wanted to feel it everywhere.\n\nWhen she didn't audibly respond, Alex moved her head back so she could make eye contact and Quinn acutely felt the sudden loss of heat from the blonde's mouth. Alex gently placed Quinn's hair behind her ear like she did earlier in the night.\n\n\"I'm going to need a verbal answer before I touch you.\"\n\nConsent had never been so sexy to Quinn and she could feel her nerves spike again as she realized she was about to let Alex do anything she wanted. Because in this moment, she was willing to give this incredible woman whatever she needed.\n\n\"You don't need to go slow. I want this, I want you so bad, Alex,\" Quinn finally managed to pant out.\n\nAlex gave her one last smile before she pushed Quinn harder against the wall and took her mouth in a bruising kiss.\n\nThe second their lips touched all hesitation was gone from both women\u2014 the slow, painfully tense energy of their previous encounters was replaced by a tornado of touching, teeth and moans. They both knew that this time, they didn't need to stop.\n\nThere was nothing graceful about this kiss, but the sloppiness, the wetness from their tongues wrestling each other's, was the most erotic thing Quinn had ever experienced. She felt physically hungry for this woman.\n\nAlex's lips took ownership of Quinn's, her tongue forcing Quinn's mouth into quick submission. Alex slowly turned them without breaking the kiss, but she did slow down their mouths as she walked Quinn backwards.\n\nAs they backed up towards Alex's expansive bed, Quinn's legs hit the end of it causing her to fall into a sitting position on the bed and away from Alex's mouth. Quinn couldn't stop the whimper that suddenly came from her at the loss of contact. Not kissing Alex made her feel bare.\n\nWithout breaking eye contact, Alex slowly kneeled in front of Quinn and moved the silver dress slowly up her legs. She lightly kissed the inside of her thighs before looking deeply into Quinn's eyes.\n\nNo longer the image of complete control, Alex's hair was disheveled, her pupils blown and her lips were red and swollen from their make out.\n\nAlex looked up reverently at Quinn, not breaking eye contact as her hands slid up the woman's legs to slowly slide her panties down. She gently helped Quinn lift her legs so she could get the underwear over her heels.\n\n\"These are very wet, sweetheart. Is that for me?\" Alex asked in a low, husky voice. She still had yet to break eye contact.\n\nQuinn didn't dare tear her eyes away from Alex even though she knew how exposed she was sitting there above her without her underwear on.\n\nAgain not trusting her voice but knowing Alex had all the consent she'd need, Quinn took Alex's right hand and moved it up her dress and into the folds of her wet pussy.\n\nAlex finally broke eye contact and leaned her face into the side of Quinn's bare thigh, groaning at the contact. Feeling emboldened by the response she elicited, Quinn moved the same hand Alex just had on her pussy, to her mouth.\n\nShe sucked and swirled her tongue around Alex's fingers, relishing in the erotic moment of tasting herself on the other woman's fingers.\n\nAlex's mouth was slightly open in awe as she watched Quinn lap up her own juices.\n\n\"You are by far the sexiest woman I have ever seen,\" she said as she pulled her fingers slowly out of Quinn's mouth.\n\nQuinn's breathing was heavy and she wasn't sure how long she would be able to hold on to her orgasm once Alex finally touched her.\n\n\"Please, Alex.\"\n\n\"Please, what Quinn?\"\n\nThe smile on the blonde's face showed she knew she had just regained control of the situation with the desperation Quinn couldn't hide from her voice.\n\n\"Please, fuck me. Please.\"\n\nQuinn didn't even care that she was begging at this point. She couldn't remember a time she had been this turned on. In the past with other women, she had always been a little self-conscious that she didn't seem to get as wet as they did. But here in Alex's bed, she was dripping for her.\n\nAlex pulled Quinn forward with surprising strength so her ass was on the edge of the bed. She moved Quinn's legs further apart before pushing the dress more forcibly up her legs, exposing her wet pussy.\n\nQuinn sucked in a breath as she felt Alex's hot mouth suddenly latch itself onto her pussy. No longer teasing her, Alex sank her tongue deep into Quinn's folds and moaned as she got her first taste, causing even more vibrations to roll though the brunette.\n\nQuinn groaned loudly as Alex set an unrelenting rhythm with her tongue against her pussy. Too soon, Quinn could feel her legs start to shake in the familiar lead-up to her orgasm. When Alex moved her skillful tongue higher up Quinn's pussy and began to lick small, tight circles around her clit, Quinn knew she was shouting but couldn't help it.\n\n\"Yes, fuck! Fuck, don't stop. Alex, yes. Babe, that feels so good.\"\n\nShe could feel Alex's own moans reverberate through her pussy as the woman devoured her. Before she knew it, she could feel an earth-shattering orgasm rip through her body, lifting her off the bed as Alex continued to lap at her, pulling out every last strand of her orgasm she could.\n\nFinally, Quinn's clit couldn't handle the attention anymore and she put her hand on the back of Alex's head to still it. Alex gave her one last kiss and gently moved her head so she could press soft kisses all along Quinn's inner thighs and down her legs.",
        "\"You taste delicious, Quinn. Better than I could ever have imagined a woman could taste,\" Alex said softly as she allowed Quinn to catch her breath after the blinding orgasm she just had.\n\nBut not for long. Alex soon pulled Quinn into a standing position and into her arms, supporting her wobbly, just-climaxed body.\n\nWith one smooth hand, she unzipped the back of Quinn's dress and let the rest fall to the ground. She then put Quinn back into a sitting position so she could kneel in front of her again and gently, slowly removed her heels.\n\nQuinn was now fully naked and realized Alex still had on every single piece of clothing she was wearing when she arrived. She ached to see the skin beneath that sexy suit.\n\n\"What about you? I want to see you too.\"\n\nAlex didn't argue, but she also didn't let Quinn do the honors. Instead, she stood before Quinn with the same intense gaze from before and began to slowly take off her clothes for the woman on the bed.\n\nHer panties were the last piece to go and Alex took her time moving them down her long body before gingerly picking them up from the ground and letting them dangle from one finger.\n\n\"Better?\" she asked.\n\nQuinn had to take a moment to drink in the sight before her. Alexandra Anders was nothing short of a goddess. With her long sleek hair falling over her back, Quinn could detect light freckles coating Alex's bare shoulders.\n\nHer breasts were the perfect size with pink nipples that were hard and swollen. Quinn couldn't believe she was going to get to touch something so perfect. Her body was vibrating and she could feel wetness pool on the bed under her.\n\n\"You are so beautiful, Alex,\" she whispered back.\n\n\"Thank you,\" Alex replied back with a small, shy smile.\n\nSeeing a slightly more vulnerable look cross Alex's face made Quinn feel more connected to her. But as fast as it came, the look was gone and was replaced by the same hunger Alex had in her eyes before she went down on Quinn.\n\nAlex slowly moved back to the bed like she was stalking her prey. She only stopped when she was in front of Quinn.\n\n\"Move up the bed, sweetheart.\"\n\nQuinn did as asked, relishing in Alex's use of that term of endearment again. It was clear that talking was one of Alex's forms of foreplay and Quinn couldn't get enough of it.\n\nAs she moved up the bed, Alex did as well until she was above Quinn's body, hovering over her so the only thing touching were their breasts. Quinn could feel her nipples graze the perfect chest above her.\n\nSlowly Alex lowered her body so she was covering Quinn's and pulled her mouth into a passionate kiss. Quinn moaned into the other woman's mouth when she could taste herself still lingering there.\n\nAfter making out like they were teenagers in their parent's house, Alex moved her body up so she could straddle Quinn. Quinn could feel the wetness from Alex's pussy slide against her stomach. She gently took Quinn's hands in each of hers and raised them so they were resting, palm up against the lush pillows on the bed.\n\n\"You can move these hands,\" Alex said. \"But it would make me very happy if you left them there until I make you come again.\"\n\nSuddenly a \"non rule\" became such a sexy thing to Quinn that she wondered what she even really knew about control.\n\nIn that moment she would gladly do anything Alex asked without complaint. Her body vibrated against the woman on top of her, aching for another release.\n\nAlex looked down at her and smiled, clearly enjoying the way Quinn was squirming under her.\n\n\"I didn't get to appreciate you fully before,\" Alex said as she raked her eyes over Quinn's face and down to her breasts, before teasingly grazing her fingers over Quinn's nipples and pulling on them gently.\n\nQuinn's hips pressed off the mattress at the light touch.\n\n\"What would you like me to do?\" Alex asked as she slowly moved her face down to Quinn's breasts, only breaking eye contact as her lips captured a hard nipple in her mouth.\n\nQuinn moaned loudly, pressing her body up so her breast was pushed fully into Alex's mouth. Alex sucked on one, then moved to the next, sloppily kissing and licking until Quinn was a writhing mess under her.\n\n\"Tell me\" Alex panted as she looked up at Quinn and roughly pulled on her right nipple. Quinn gasped as Alex moved to pull the other nipple in her fingers.\n\n\"Tell me,\" she demanded more forcefully this time.\n\n\"I want you inside of me,\" Quinn managed to cry out between gasps. \"Please, Alex. Please.\"\n\nHer chest was heaving now and she could feel sweat start to trickle down the back of her scalp. She wasn't going to last very long with the way Alex was pulling on her nipples and grinding her wet pussy onto Quinn.\n\nAlex brought a hand up to Quinn's mouth and Quinn didn't have to be asked to know what the blonde wanted. They were in sync like years-old lovers, not two women who had only met weeks ago.\n\nWithout any hesitation she wrapped her mouth around Alex's two fingers and swirled her tongue erotically around them, eliciting a low growl from Alex as she watched with hooded eyes.\n\n\"God, you are so sexy,\" Alex breathed out as her fingers left Quinn's mouth with a quiet popping noise.\n\nThe truth was Quinn had never felt sexier than she did in that moment. With Alex's intense blue eyes looking at her like she was some sort of goddess, her fingers glistening with her own saliva, she felt more confidence than she ever had walking down a runway with lights flashing at her and eyes glued to her form.\n\nAlex made her feel like something precious.\n\nShe didn't have time to dwell on what all that meant before Alex was pushing two fingers inside of her and her mind went into some kind of blissful oblivion.\n\nThe louder each of her cries became, the harder Alex thrust back into her. Her body opened for Alex in a way her heart wasn't read to and their bodies rocked together in a fast rhythm that filled her, but not nearly enough.\n\n\"More, Alex,\" she breathed out as she dug her fingernails roughly into the soft flesh of Alex's back causing the blonde to let out her own moan. \"I need more of you.\" She opened her legs further, hoping Alex would understand.\n\nWithout missing a beat, Alex slid her fingers back into Quinn's pussy with three fingers instead of two. She changed her rhythm to a deep thrust, making sure to hit Quinn's clit with her knuckle each time her hand came out slightly.\n\nQuinn let out a slew of expletives and deep moans as she continued to dig her fingers into Alex's back. As she started to feel her orgasm climbing again, Alex moved her mouth down to the blonde's ear so she could coax her into climax.\n\n\"Come for me, sweetheart. I want to hear how good I'm making you feel.\"\n\nAfter two more deep thrusts, Quinn cried out as she felt a second, and even stronger, orgasm rip through her body. She clung to Alex's back until she felt her vision blur and her limbs were too weak to hold herself up.\n\nThe next thing she knew, she had Alex's soft body curled around hers, holding her gently as her breathing returned to a semblance of normalcy. She was pretty sure she didn't pass out, but she also didn't know how they suddenly came to a spooning position.\n\n\"That was\u2014\" Quinn put her hand on her forehead trying to gather her thoughts as every inch of her body continued to pulse under Alex's hands.\n\n\"I mean that was\u2014\". She giggled at her own ineloquence. \"You're amazing,\" she finally breathed out, turning her head to see Alex looking at her lazily, her head resting on one hand and her standard cocky smirk in place.\n\nShe stared at Alex's face for a minute as she let her breathing settle more. \"But we're not done,\" she said finally.\n\nNow recovered from her own release, Quinn was desperate to hear Alex moan from her touch, feel her come undone from her mouth.\n\n\"No, we're not,\" Alex said back in a low voice as she lightly ran her finger up the side of Quinn's naked body and back down.\n\nQuinn couldn't help the goose bumps that appeared suddenly\u2014her body was apparently insatiable for Alex's touch. But this was no longer just about her pleasure. That's not the kind of lover she was and she had been wanting to get her hands on Alex's body for weeks.\n\n\"What do you like?\" Quinn asked in barely a whisper as she pushed her body up so she was facing Alex and mirroring her position with her head resting on her hand.\n\n\"Can I show you?\"\n\nQuinn swallowed hard and nodded slowly, knowing she would do just about anything to make this woman come.\n\n\"Lay back for me, sweetheart,\" Alex said in a quiet voice that, despite her use of the pet name, still reverberated with authority.\n\nQuinn had never been in a relationship where there were strict bedroom roles and she'd never really thought about being a top or a bottom. If her head wasn't clouded with thoughts of the lithe, tight body above her, she probably would have had enough self-awareness to realize her past lovers were all fairly vanilla. But right now, she just knew she felt a rush of arousal every time Alex gently ordered her around. She found the domineering words, the bruising kisses, and the unrelenting attention sexier than anything any other woman had ever done in bed.\n\nAlex moved so she was straddling her again and Quinn could feel the same wetness from before sliding across her. But instead of staying there, the blonde moved her body up so her thighs were on either side of Quinn's head. Alex grabbed the bed post that was now at her eye level and looked down at Quinn's wide eyes.\n\n\"May I?\"\n\nWithout responding Quinn grabbed both of Alex's ass cheeks and pulled her body down to her mouth. The two women's moans wrapped around each other's as Quinn lost herself in the wet folds above her.\n\nShe licked, sucked and flicked her tongue against any spot Alex would give her, but the woman above her was clearly the one driving her own orgasm. Quinn felt gloriously used as Alex moved her body to the rhythm she needed for release.\n\nQuinn could tell Alex was close by the short breaths she was letting out as she squeezed her thighs against Quinn's head. She urged the blonde on by digging her fingers into her ass and increasing the flicks of her tongue against Alex who finally stopped moving her hips and allowed Quinn to finish her off the way she wanted to.\n\nQuinn moved one hand off of Alex's ass so she could sink two fingers deep inside the woman as her mouth continued to make small circles against her clit.\n\n\"Fuck, I'm coming. I'm coming!\" Alex cried out, putting her head against the headboard.\n\nThey both remained still as they each let their bodies relax\u2014 Alex didn't seem to be in any rush as she continued to rest her head against her hands on the headboard and caught her breath.\n\nQuinn simply stayed where she was and put her hands on the blonde's hips. Finally, Alex gently moved off of Quinn and laid back down beside her, casually laying her arm across Quinn's middle.\n\nThe room was silent, their mutual breathing the only noise filling the space. For a minute, they both fell into a comfortable silence as they let their bodies return to earth.\n\nAlex turned her head to Quinn and gave her a shy smile, as if she didn't just ride the woman's still-glistening face.\n\n\"Where did you come from?\" she asked in a whisper.\n\nQuinn laughed softly, bringing one finger up to lazily trace Alex's profile and down her arm. But her arm felt like deadweight and she dropped it as she sighed into her pillow.\n\n\"Sleepy town.\"\n\n\"You came from sleepy town?\" Alex's confused face was so adorable Quinn laughed again into her pillow.\n\n\"No. I'm going to sleepy town right now.\"\n\n\"Oh, you're one of those,\" Alex said in a teasing tone.\n\n\"One of what?\" Quinn asked as she yawned widely.\n\n\"One of those people who passes out after mind blowing sex.\"\n\n\"As long as you agree it was mind blowing.\" Quinn smiled up at Alex and pulled her hand down to kiss the knuckles lightly.\n\n\"I do agree. Now go to sleep.\"\n\nAlex leaned in and kissed Quinn's temple softly as she pulled the sheets up to her chin. Quinn's heavy eyelids closed, the effort of keeping them open too much now.\n\nBut the feeling of Alex wrapping her arms around Quinn's body, caused a smile to reach her face just as sleep took over.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nAlex took one long look at Quinn's sleeping face before she moved off the bed to grab a pair of sweats and a tank top from her dresser.\n\nShe was never one to sleep after sex, but especially right now, her mind was swimming with post-orgasmic thoughts and knew she'd never be able to fall asleep the way Quinn so easily could.\n\nBefore leaving the room, she looked back at the sleeping form in her bed and smiled. Quinn looked so peaceful in that moment and she hoped she had something to do with that.\n\nAfter a quick shower, she quietly moved through her dark apartment and poured herself a drink before settling down on her couch overlooking the city. She didn't bother to turn on any lights, opting instead to allow the diverse mix of city lights to filter into her apartment, casting odd shadows on the wall next to her dining room table.\n\nSitting and analyzing sex after the fact wasn't her usual, preferred activity. Usually she played some kind of game to center herself again and remember that the moment was just that\u2014a moment. But right now, she couldn't bring herself to play a game with her mind racing through so many layers of emotions.\n\nShe couldn't say she regretted what just happened. She probably knew as far back as their first lunch that this is where things would lead. There was something she couldn't stop or even control when she was around Quinn\u2014the sensation to touch her when she was near, in any way, was overwhelming.\n\nAnd she would never regret sex that good. Even now Alex could feel her pussy pulse at the thought of Quinn's perfect body underneath hers, so willing to give her anything Alex asked for. Quinn was so generous and open with her own body and so deliciously skilled with her mouth on Alex's.\n\nBut she also couldn't stop her mind from racing around the obstacle course of challenges she now faced. More than anything she wished she could adopt Courtney's attitude in life and just do what she wants. She was a grown adult after all. She should be able to date who she wants to date.\n\nBut while Courtney was there to witness the downfall with Sloane, she didn't know the full extent of the situation. Due to the legal ramifications, Alex hadn't even told her friend about it fully.\n\nOnly her father, Rick, Janet and the Horizon legal team really knew what happened years back. They're the ones who knew the real extent of that drama and why she was so strict about mixing business with pleasure.\n\nJanet was the only outside party who knew. She was brought in just in case anything leaked out to the media. Though considering how tight the gag order was, that was highly unlikely. Unlikely, but the threat continued to loom over Alex.\n\nShe took a sip of her drink that tasted bitter as it burned its way down her throat. The memories of that time always made her angry, but right now that anger was also mixed with a healthy dose of fear.\n\nIt had never really mattered until now. Alex had sworn off any kind of real intimacy after Sloane. With her father watching over her every move, dating someone seriously within the industry seemed like a bad idea and dating someone outside of it seemed as equally impossible.\n\nIt was really hard to find people outside of the theater world who understood the hours she had to keep. Most women wanted to go out on the weekend, not on Mondays, the day her theater was dark.\n\nSo, she'd made her way by casually dating actresses who knew where she stood on relationships and wouldn't cause her any trouble within her own theater\u2014 partly because she never dated within her own theater.\n\nBut this thing with Quinn changed all that. Not only was she involved with Horizon, she was one of the most well-known artists to come through their doors this season.\n\nAnd maybe if this was just about sex, all of this wouldn't be an issue. But she could feel her own heart being pulled to the sleeping woman in the next room and knew that this wasn't her usual fling. She wanted to go back in there and hold Quinn. Kiss her again. Wake her up so she could once again hear those sexy whimpers come out of her mouth.\n\nPerhaps this line of thinking was a waste anyway. She hadn't even been on an actual date with Quinn yet. Soon Quinn would be in rehearsals and Alex would be getting the Winter gala ready ahead of Quinn's opening. They'd both be so busy that they probably wouldn't even have time to date anyway.\n\nBut the growing tightness in her chest told her what she already knew, even before she went down this dark rabbit hole.\n\nShe was falling for Quinn, and fast.\n\nChapter 18\n\n \n\nThe sun filtering into her room was not the sun she was used to waking up to. This sun was a much brighter, peppier sun that she was familiar with, which could only mean it was much later than she's used to sleeping.\n\nBut as she felt fingers lazily circling the skin at her hip, Alex couldn't bring herself to care about the time. Opening up one eyelid only increased her pleasure as she saw two dark, beautiful eyes staring back at her sleepily.\n\n\"Good morning sleepy head,\" Quinn purred.\n\nHer morning voice was scratchy and adorable.\n\nAlex scoffed lightly into her pillow as she grabbed Quinn's trailing fingers and brought them up to her mouth. She lightly nibbled the ends as Quinn giggled.\n\n\"You, my darling, are the mayor of sleepy town. I'm just a citizen. I seem to remember someone passing out on me last night.\"\n\n\"And I remember someone wearing me out.\"\n\nWith renewed energy Quinn playfully squealed as she jumped up on Alex so she could straddle her body.\n\n\"I've been waiting so patiently for you to wake,\" she pouted dramatically.\n\n\"Oh you poor thing.\"\n\nAlex grabbed Quinn's hips and pushed her own body up into them. She smiled at the gasp Quinn suddenly let out.\n\n\"Did you need something specific sweetheart?\" Alex asked.\n\nShe loved the way Quinn's eyes darkened when she used that particular pet name. She was pretty sure sex with Quinn could never get stale. The woman was so open and so receptive to her every touch and sound.\n\nAlex moved her hands up to cup the breasts now hovering above her. Quinn's body was something she could never tire of seeing. Her breasts were perfectly round and perky and if Alex hadn't had her mouth and hands all over them last night, she might even wonder if they could be that perfect and still be real.\n\nQuinn drove her hips down on Alex's stomach and she could feel the pool of wetness that had already gathered there. Alex couldn't help but smile up at the insatiable woman riding her without any inhibitions.\n\n\"I need you. Inside me. Please, Alex.\"\n\n\"Please what?\" Alex asked.\n\nShe moved her hands down to Quinn's pussy, only pausing when her fingers reached the woman's entrance. Instead of pushing her fingers in like she knew Quinn wanted, she moved her thumbs up to teasingly rub circles around her clit.\n\n\"Please fuck me, babe. Fuck me.\"\n\nQuinn lost all grace and control as she begged and Alex obliged willingly. Pushing two fingers easily into Quinn she began an unrelenting pace. There was no teasing or dirty talk this time. She simply fucked Quinn hard, their heavy breathing becoming one with each other.\n\nAlex could feel Quinn's orgasm before she heard it rip through the other woman, her walls clenching tightly around Alex's fingers.\n\nAlex didn't remove her fingers as Quinn came down from her climax. Once the brunette's breathing had evened out to a steadier rate, she slowly moved her hands from inside her, but she didn't move her body. She softly kissed Quinn's shoulders and pushed the hair off her face as they made eye contact.",
        "\"Good morning,\" Quinn said with a goofy smile. \"That beats coffee.\"\n\n\"I will still need coffee,\" Alex said with a small smile.\n\nQuinn's hair was a disheveled mess, half of it falling over one side of her head. Her lips looked swollen and pink from the night before and her cheeks were as flushed as if she'd been standing outside in the snow.\n\nThe woman was breathtaking and Alex wished more than anything that she could extend this moment past the morning, past this weekend and into something real.\n\nQuinn must have noticed the thick emotion crossing Alex's face because her eyes softened and she cupped the blonde's face in her hand.\n\n\"I wish I knew what was going on in that head, like, most of the time.\"\n\n\"Just coffee,\" Alex whispered back.\n\nShe wasn't ready to discuss any of the things crowding her overactive and overly analytical mind right now. Not after the night they just had and the moment they just shared.\n\n\"Hmm. I don't believe you but I'll let it slide for now. But coffee will have to wait.\"\n\n\"It will?\" Alex quirked her eyebrow mischievously.\n\n\"Now that I know you're a vampire who doesn't need sleep, I feel bad for all the hours we missed.\"\n\nQuinn moved off Alex's lap and gently pushed her back into the mattress.\n\n\"Then you won't be surprised\u2014\". Alex gasped as Quinn dragged her tongue the length of her already wet pussy. \"\u2014when you find out I like to bite.\"\n\nQuinn laughed against Alex's center as her tongue continued to make Alex forget why she ever saw merits in coffee instead of this.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nHours later and more rounds of unbelievable sex, Alex tried her best to get out of the bed without waking Quinn. She looked at the clock on her bedside table as she put on her sweats again and wasn't surprised to see it was early afternoon.\n\nThey seemed to have released some dangerous sex monster inside them both that was never satiated and was always looking for its next orgasmic victim.\n\nAlex would have gladly stayed in bed to feed said monster but her stomach had started growling so loudly she thought it might wake up Quinn. The last thing they had eaten was dinner the previous night and they could both do with sustenance so she decided to venture out. No way could she feed the woman anything she had in her sorry fridge.\n\nGrowing up the way she did, yet stubbornly refusing that lifestyle in her adult years, meant she missed out on some of the basic life lessons other kids must have grown up with. Cooking for herself outside of eggs, sandwiches and basic salads wasn't something she had ever had to do, was ever taught to do, or ever really had any desire or inclination to do.\n\nBagels from her favorite coffee shop downstairs would have to suffice. She quickly scribbled a note for Quinn in case she woke while she was out but based on the way the brunette was sleeping like a log, she didn't think she'd be stirring before she got back.\n\nTwenty minutes later, Alex brought a tray of coffee, orange juice and bagels into the bedroom. She set the tray down on the bed just as Quinn was stirring.\n\n\"I bring food. Drink. Schmear.\"\n\nShe wobbled as she set the tray down and told herself it had nothing to do with the sheet around Quinn that was falling down her chest as she stretched.\n\n\"Ah. My people's food,\" Quinn said as she smiled widely at Alex and picked up one of the cups of coffee.\n\n\"But no lox, of course,\" Alex said.\n\n\"Ew, no lox. Poor little fishies.\"\n\nAlex stared as she watched Quinn dump almost the whole cup of cream into her coffee and more sugar than she'd ever seen in one cup.\n\n\"I gather you like some coffee with your cream and sugar then?\" she asked in a teasing tone as she grabbed her own cup and took a small sip of the plain black liquid.\n\nQuinn bunched the sheet under her breasts and took a gulp of her coffee before she answered.\n\n\"I like it to taste like coffee ice cream. I'm sensitive to bitter stuff.\"\n\n\"It's like coffee for a child.\"\n\nAlex laughed at the offended look on Quinn's scrunched face.\n\n\"Don't be mad. I just brought you the best bagels in New York, aka the world.\"\n\n\"Wait! You told me George's was the best bagel place when I first met you,\" Quinn said as she grabbed a bagel from the plate and began to apply cream cheese on it while starring pointedly at Alex. \"Explain yourself.\"\n\n\"George's is second best. You think I was just going to give up my favorite place to a woman I just met? My favorite place that's in my apartment building I might add.\"\n\nAlex grabbed her own bagel and stretched out as she waited for Quinn to be done with the knife.\n\nQuinn passed the knife to Alex and raised one eyebrow as she took a bite. She hummed as she closed her eyes and chewed. Alex loved the sounds Quinn made when she ate so much that her own bagel stayed hovered in front of her mouth as she watched the woman chew slowly.\n\nQuinn finally opened her eyes and gave Alex a slow, sexy smile.\n\n\"You're right. I would have stalked this place had I known.\"\n\n\"See? I have to be careful of the stage five bagel clingers.\"\n\nAlex watched Quinn as she continued to eat her bagel, a blissful smile crossing her face with every bite. She wasn't used to doing sleep overs. Usually the women she allowed over knew that staying the night wasn't something Alex was comfortable with. But she had an unusual urge to keep Quinn in her bed for as long as she could.\n\nHer phone vibrating on her nightstand brought her out of the moment. She reached over to grab the phone causing her t-shirt to ride up her torso. When she came back into sitting position, Quinn was staring at her with her bagel hanging loosely from her hand.\n\n\"You have a really nice body,\" Quinn whispered as she put the bagel down on the tray and moved her fingers so they slid into the top of Alex's yoga pants.\n\n\"So do you,\" Alex replied quietly, not taking her eyes off Quinn's roaming fingers.\n\nAlex always had a healthy libido, but every touch from Quinn set her body on fire and made her feel like a horny teenage boy. Before she could do anything to satiate said libido, her phone vibrated two more times. She groaned as she picked up her device and saw the name on it.\n\n\"Hold that that, Janet tends to just keep texting if I don't respond.\"\n\nQuinn gave a small laugh and pulled her fingers away, immediately making Alex regret the decision to look at her phone instead of let Quinn finish whatever journey her hands had been on.\n\n\"I understand. My mom is the same way.\"\n\nAlex didn't really know how to respond to that. Janet was like a mom to her, but it wasn't the same. And she was pretty sure her father had never sent a text in his life. Instead of respond, she opened her phone and looked at the three messages Janet sent her.\n\nJanet: No surprise, the review isn't up. Likely waiting for tmw's pub.\n\n \n\nJanet: We'll send over the clips once it's up.\n\n \n\nJanet: Stop by Monday at noon and we'll go over pull quotes. And the details of your feature article with Quinn Collins \n\n \n\nThe wink face she included at the end of her text wasn't necessary, but Alex was expecting some kind of snide remark from Janet ever since the dinner last night.\n\nJanet was way too perceptive for her own good. Or at least for Alex's own good. Alex would need to figure out how to maintain a poker face when Quinn was around. She may not be able to pull one over Janet, but she needed to for whoever the Times sends to interview them.\n\nShe made a mental note to confirm with Janet who would be interviewing them. It needed to be a legit theater writer.\n\n\"Everything okay?\"\n\nAlex looked up to see Quinn watching her stare at her phone.\n\n\"All good. We're still waiting for the Times review to come out for the show last night.\"\n\n\"Are you nervous for it?\"\n\n\"Not really. I hope for Courtney's sake that the review is favorable. But the show is almost sold out already, so really, it's more of a prestige and ego thing. Positive reviews help the reputation of the theater. Janet takes them very personally though. Even though she has no hand in the artistic process. She's just always been kind of like that.\"\n\n\"She's an interesting woman. I'm still surprised to hear you worked for her. You don't seem too keen on the whole PR part of things.\"\n\nAlex laughed. Quinn couldn't be more spot on. But she and Janet had history that went far beyond PR and theater. And Alex would always have respect for the career Janet had built in a very male dominated industry.\n\n\"It wasn't my first choice. I wanted to be in my father's theater but he wanted me to get some work experience first, outside of acting. Because of the hours I needed to be with my mom, it was kind of the perfect situation. Since Janet knew everything that was going on, I could come to work when I could. She was really supportive during that time and only sometimes a pain in my ass.\"\n\n\"She does seem rather intense.\"\n\n\"Understatement. One time in the middle of winter she made me go to Times Square at 4am, during a blizzard I might add, when the papers first got delivered just so she could have the hard copy of a review that was already up online. I've never seen so few people in midtown. I could barely walk there was so much snow. But Janet needed her paper.\"\n\n\"How brave of you,\" Quinn smiled and put her hand to her heart. \"You've really worked the hard jobs.\"\n\n\"Ok, Ms. LA. How many snowstorms have you weathered for work?\"\n\nAlex took a small pillow off the bed and playfully flung it at Quinn who managed to grab it in the air before it hit her.\n\n\"Terrible throw. And I will have you know that I once had to do a Winter Wonderland photo shoot for a power drink brand. On a mountain.\"\n\nAlex put on her best serious face as she responded. \"That does sound horrible. Craft services in a parka. You win.\"\n\n\"As long as I win,\" Quinn smiled back before picking up her bagel again. \"But I never got to be by the craft services table. Or if I was, I was just staring at it wistfully. Which is why now, I eat what I want, when I want.\"\n\nQuinn took an exaggerated bite of her bagel and closed her eyes, humming loudly.\n\nThough Quinn appeared to be joking, Alex knew from her book, show and other things she had said in passing that she had a contentious relationship with food during her modeling years.\n\n<br >\"I imagine it's hard watching what you eat all the time,\" Alex mused.\n\n\"Now I don't think about food that much. Because I don't have to diet for my job like I did. But back then it was always on my mind. There was this little European bakery next to my apartment in LA. I could smell the bread baking from my balcony every morning.\"\n\n\"Ah yes. I remember the bread chapter from your book.\"\n\n\"Exactly. That place drove me crazy. I had an ongoing fantasy of breaking into that bakery and eating anything I always looked at but could never actually eat. I'd literally create a list in my head of the exact order of pastries and cookies I'd eat. Now it seems pathetic. But when you have to be as careful as I was, food becomes an obsession.\n\n\"We always want what we can't have.\"\n\n\"I suppose that's true. I was lucky. My body doesn't gain weight that easily and I'm tall. But other models I've worked with really had to be careful. And it creates a lot of bad habits. It took me forever to quit smoking.\"\n\n\"You smoked?\"\n\n\"It's an appetite suppressant. A lot of models smoke.\"\n\n\"I know a lot of dancers and actors that do too.\"\n\nAlex pushed the breakfast tray closer to Quinn's side of the bed with a grin. \"Well I for one am happy you made the transition to the stage. You can eat two bagels if your heart so desires,\" she said.\n\nQuinn set her half-eaten bagel on the tray and looked up at Alex with a thoughtful expression.\n\n\"You know, I'm actually pretty surprised we even ended up here so fast. I figured it would take at least two more innocent lunch dates before you caved. What changed?\" she asked.\n\nAlex quirked her eyebrow in response. \"Those lunches were anything but innocent. Need I remind you of your red lipstick trick?\"\n\nQuinn feigned offense, swatting Alex's arm playfully. \"That wasn't a trick. I happen to like red. But you didn't answer my question.\"\n\nAlex thought about it before she answered. She wasn't really sure when she decided to give in to the pull she felt for this woman. It probably wasn't just one moment. Every second she had spent with Quinn had slowly melted her resolve to stay away.\n\n\"I'm not sure. You are pretty hard to resist,\" she said quietly, pushing a lock of hair out of Quinn's face and moving it over her shoulder. \"Maybe seeing my dad with his latest twenty something last night made me realize that he doesn't really have a place to judge me.\"\n\nQuinn didn't respond for a moment and Alex grew uncomfortable under the searching gaze being directed her way.\n\n\"When's the last time you had breakfast with a woman? Or is the bagel delivery kind of your thing?\"\n\n\"How can bagels be my thing?\"\n\n\"Bring a woman back, have mind blowing sex and then show her something even better. Holy heaven,\" she finished as she held up one of the uneaten bagels from the tray.\n\n\"Holy heaven?\" Alex couldn't help but roll her eyes at the terrible joke while Quinn giggled to herself. \"But let's get back to the moment you said the bagel is better than the sex.\"\n\n\"Not better, but equally as satisfying,\" Quinn said, still laughing at her ridiculous joke.\n\n\"I may need to up my game in bed then. This information is upsetting,\" Alex said back.\n\nQuinn reached over and pressed her fingertips against Alex's furrowed brow. \"So serious. Last night was amazing. You were amazing. Better than the bagel.\"\n\nAlex gently took Quinn's hand from her brow and moved it so she could lightly kiss her hand.\n\n\"So were you. And no, to answer your question. I don't usually do breakfast.\"\n\n\"Not even with cute bartenders?\"\n\n\"Not even with her.\"\n\n\"I figured there would be more than one bartender. You have quite the reputation around town after all.\"\n\nAlex couldn't tell if this was more sexy banter or if the slight edge to Quinn's voice pointed to something else. But that comment bothered her for some reason. She set Quinn's hand down on the bed so she could sit up a bit.\n\n\"What do you mean?\" she asked.\n\nQuinn looked down at her now empty hand before looking back up to Alex with a question in her eyes.\n\n\"I didn't mean it in a bad way, Alex. It's stupid actually. Mikey had just mentioned something to me before I met you. About you and how many women you've dated. Forget I said that.\"\n\nIt's not as though Quinn was wrong. Alex wasn't obtuse to her reputation in certain circles. But knowing Quinn thought she was promiscuous before they had even met made her feel self-conscious.\n\n\"But you wanted to go out with me anyway. Despite that reputation?\"\n\nAlex tried to keep her tone neutral but could hear an edge to her own words.\n\n\"Of course. It was just gossip, Alex. I'm sorry I even brought it up.\"\n\nQuinn attempted to link their fingers again, but Alex moved back on the bed so she was out of reach. She could feel an irrational response coming but she could do little to stop it at this point.\n\n\"What about you? From what I've heard, you have quite the scandalous reputation in LA.\"\n\nAlex regretted saying it the moment the words left her lips. She regretted it even more when she saw the flash of hurt cross Quinn's face. Intimacy may be hard for her, but making Quinn feel bad was the last thing she wanted to do right now, especially after the night they shared.\n\nQuinn moved to get off the bed and began gathering some of her discarded formal wear from the night before.\n\n\"I should go,\" she said quietly.\n\n\"Quinn. You don't need to go.\"\n\nAlex felt helpless to fix the moment. What had started out as such a fun morning, suddenly turned wrong so fast. She didn't want Quinn to leave like this just because she got defensive over something that was in fact, true.\n\nAlex didn't want Quinn to see her the way the world saw her. But she didn't have to be so defensive with her response.\n\n\"I do. I have a meeting with Mikey.\"\n\n\"But it's Saturday.\"\n\nQuinn sighed as she grabbed her dress off the ground and got on her knees, apparently looking for her underwear.\n\n\"You're not the only one who takes her job seriously. I have rewrites to do. I start rehearsals this week.\"\n\nAlex moved towards her dresser and removed a fresh pair of underwear, leggings and a t-shirt.\n\n\"Here, at least wear these. You don't need to put your dress back on.\"\n\nQuinn gave her a tight smile. \"Thanks,\" she said a little flatly as she moved to the bathroom to change.\n\nWhile Quinn was changing, Alex mentally rehearsed the things she could say to get a smile back on Quinn's face. And possibly even get her out of her own leggings and back in the bed. But when Quinn remerged from the bathroom, looking fresh and gorgeous, Alex lost her resolve. She wasn't even really sure where things went wrong this morning.\n\n\"I'll see you this week at the theater?\" she asked instead.\n\nAlex barely recognized the hesitancy in her own voice. She just needed Quinn to give her something, anything, to indicate that Alex hadn't completely screwed this up.\n\n\"Are we allowed to acknowledge each other at the theater Alex?\" Quinn asked as she moved quickly down the hallway and to the front door.\n\nWhen she got there, she turned back around to face Alex, who had followed. Alex closed her eyes and took a breath before looking at Quinn's direct stare.\n\nShe couldn't really blame Quinn's biting question. She was the one who had set boundaries in the first place. But she hated hearing Quinn's short tone and she wanted nothing more than to see the usual spark in the woman's eyes again.\n\n\"Yes, Quinn. I never said we couldn't talk there.\"\n\n\"As long as it's not in front of your dad.\"\n\nAlex narrowed her eyes slightly. She obviously upset Quinn more than she even realized. Or maybe this had been on Quinn's mind since she first told her that they couldn't see each other.\n\nWhen Alex didn't respond, Quinn continued. \"Alex you seem to have a lot of baggage. Which I can understand. But I don't want to do this if I can't even ask you basic questions about your life. You're so concerned about him and what he thinks. Wouldn't it be freeing not to be under his thumb? Why does everything have to feel so dire?\"\n\nAlex's head was spinning. An hour ago, she was bantering lightly with this sexy woman and now she felt like she was answering for much more than the way she responded to Quinn's comment. It felt like Quinn had been holding that last comment in and only let it out in her frustration.\n\nShe was used to people thinking she only had her position in the theater because of her father. But she had worked so hard to turn that theater into what it now was, she knew it was only because of her that it was thriving. She thought Quinn understood that better. She doesn't want to be \"free\" of the theater. And that means she can't be \"free\" of him.\n\n\"That theater is as much mine as it is his now. I wouldn't expect you to understand. You hardly know me,\" Alex replied.\n\nHer words again came out much harsher than she meant them to, but it also felt like nothing she said was going to fall on receptive ears at this point.\n\nQuinn gave her one last look before she turned to the door and opened it.\n\n\"You're right, I don't. See you around,\" she said without looking back.\n\nAlex didn't move once the door was closed but just continued to stare at it, not really focusing her vision on anything in particular.\n\nAll she could do was stand there and attempt to process what just happened. And the only conclusion she could come to is that she messed up. And she had no idea how to fix it.\n\n<br >She needed Courtney.\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "girlongirl",
        "lesbian",
        "lesbian drama",
        "lesbian romance",
        "lgbt",
        "romance",
        "slow burn",
        "theater"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/new-horizons-ch-14-18"
}