{
    "title": "Midnight Basketball",
    "pages": [
        "\"Get back on the horse. That's my advice. So what if you fell off? It happens all the time.\"\n\n\"I didn't fall off, Kelli, I got bucked off and stomped on!\"\n\n\"Okay, so you got thrown. I'm not saying I know what it would be like to come home and find my husband in bed with my sister, but I can imagine it and the pain that goes with it. But you can't just give up. You're not a quitter, Janna. I know you better than that.\"\n\nUnlike Kelli, Janna Reese wasn't married, but she had come home unexpectedly one day to find her boyfriend in bed with Blake Allen, her former best friend. The sense of betrayal was overwhelming and the hurt beyond description. She'd been so sure he loved her, and she knew she loved him. Then again, she thought Blake was the one person on earth she could trust with absolute certainty in any situation. Even now, just the thought of what she'd seen nearly a year ago still made her sick to her stomach. \n\nAt 25, Janna was the youngest woman ever elected to the city council in Seattle, Washington. In spite of her electoral victory, she'd never felt more alone and it wasn't just because of the loss of her former boyfriend and her best friend. Unlike the rest of the city council members who were all liberal Democrats, Janna was more of a Libertarian who'd run as a moderate Republican and gotten elected last Fall. Her positions on issues created unending conflict with the rest of the council leaving her feeling isolated and alone. \n\nShe was passionate in her point of view and held steadfastly to her principles because to her, honor and integrity were everything. In the world of politics, she'd seen very little of either virtue, and that had served as a large part of the reason she'd run for office in the first place. Since arriving, she'd seen neither honor nor integrity.\n\nFour of the other council members were women and none of them could be called attractive. Matronly or distinguished might possibly apply, but that would be the kindest thing anyone might say about them. In stark contrast, Janna was an incredibly attractive young woman and being so photogenic hadn't hurt her in the election last November. She was 5' 7\" tall and weighed somewhere around 115 pounds. She had dark, shoulder-length hair and bright blue eyes and a smile that could both charm and disarm nearly any man and not a few women. \n\nShe was pleasant, positive, and hopelessly optimistic about the future\u2014except when it came to her own. She knew these feelings were temporary and that she would indeed eventually get back on the proverbial horse and ride again, but for now her outlook was anything but positive. She'd never gone this long without someone in her life and while she could continue to provide for her own um...satisfaction...that simply wasn't much of a substitute for the real thing. \n\nShe vowed that this time she'd find the qualities of honor and integrity in a man before agreeing to a first date let alone getting involved. As each week passed without the real thing, that promise became more challenging, but then all she had to do was envision what she'd seen in her bedroom and her resolve\u2014and patience\u2014were fully back in place.\n\n\"I have a job to do, Kelli. For now that's more than enough. We have so many problems in this city I feel like I don't even know where to start most days.\" Her words were true as there were a ton of issues to deal with. While they were true, they left out what Paul Harvey used to call 'the rest of the story.' She'd love to get back on the proverbial horse but she'd be damned if she'd do so with guy just because he was attractive or even nice. Not this time.\n\nHer executive assistant, an older woman named Kelli Miller, had known Janna for years and knew she was right. The budget was in disarray and due for review, unfunded liabilities in the city's pension plans were threatening to bankrupt the city, they needed more police officers, but public transportation also need help, and the public school system was an outright disaster. There were also never-ending infrastructure projects and a 'go-zillion' other things requiring her attention.\n\nJust once, she wished the solution to a problem\u2014any problem\u2014would just walk into her office. Janna laughed not because something like couldn't happen, but because she was a cold, hard realist who knew the odds against it were astronomically high.\n\nKelli decided to give it a rest\u2014at least for now\u2014and told Janna, \"Don't forget you have the public forum meeting at one o'clock. There's an interesting topic on the agenda called 'The Midnight Basketball Project' that looks interesting. It says it requires no funding. That should make you happy.\" Kelli smiled knowing how Janna felt about citizens pitching some 'great idea' to the council then letting them know how much money they'd need to implement said great idea.\n\nHer morning flew by and she was lucky to get a few bites of turkey sandwich she'd packed and a cup of coffee before the council convened at 1pm. They heard two proposals in the first hour, both of which required money the city just didn't have. Even so, Janna felt certain the council would vote unanimously\u2014less her dissenting vote\u2014to fund them and worry about where the money would come from later. Except that they wouldn't worry at all. They'd just vote to spend the money and not give it a second thought.\n\nNext up was someone named Nathan Walker. \"Oh, right, the midnight basketball guy,\" she reminded herself. \"Someone who's not asking for a handout. This should be interesting,\" she thought cynically as she watched him approach the microphone. \"At least he won't be hard to look at,\" she also said silently to herself. He looked to be around 40, but he was still an exceptionally attractive man made even more so when smiled; something he did often during his short presentation.\n\n\"Thank you giving me a few minutes of your time,\" he began. He spent less than ten minutes outlining what he wanted to do and the only thing he was asking from the city was for some additional eyeballs from the police. \"Just please ask the chief of police to have them to keep on eye on the four courts I'll be refurbishing. Until we can win the confidence of the people who live in these neighborhoods, they won't feel any sense of pride in the courts, and they could very easily be vandalized. So as they patrol the neighborhoods, it's important for them to take a careful look and make sure no one is doing anything to destroy this project before it can grow roots. If we can get this program up and running, I believe we can continue it indefinitely. As I said, I'm providing the initial funding and later on I still won't be asking the city for any financial support. I will however, be asking you to help out by assisting me in holding an occasional fundraiser and perhaps solicit donations.\" He paused then said, \"Of course, only if you feel this is benefitting our community.\"\n\nHe closed by saying, \"I haven't lived here for the last 22 years. I've been very fortunate in my life, and I want to give something back. If we can even keep a few kids out of gangs, off drugs, and on the straight and narrow it'll be well worth it. Sometimes they just need an alternative to the temptations that are out there. Basketball isn't the only answer and it certainly isn't the answer for everyone, but we have to start somewhere and we have to try. Like I said, if we can save even a few kids, it's time and money well spent.\"\n\nThere was a smattering of applause from the handful of people in the room who were either reporters, other people making presentations, or a very small number of interested citizens.\n\nNathan Walker was a 1994 graduate of Auburn High School who'd gone on to graduate from the University of Washington four years later. He then served as an F-18 pilot in the U.S. Marine Corps for nearly 17 years. Because of the glut of officers on active duty after the war in Iraq ended and Afghanistan largely wound down, majors and lieutenant colonels with 15-19 years service were offered early retirement. \n\nMajor Walker loved flying and the Marine Corps, but this opportunity for early retirement was too good to pass up. He had a very good friend he'd served with who flew for a civilian charter airline company and as soon as he learned Nathan was retiring, he set up an interview for him. He'd been hired immediately, trained on the Gulfstream jets he'd be flying, and had already logged over a hundred hours as a co-pilot all within a year of leaving active duty.\n\nWalker had never been married, and until recently had no interest in settling down for two reasons. The first was the constant deployment schedule. After flight school he'd been deployed for seven of his almost seventeen years on active duty and for him at least, that was no way to raise a family. The second was that he was as good looking as they came and he saw no reason to limit his interaction with the fairer sex to just one woman. His only restrictions were: no married women, no enlisted women, and they had to be over 18 and living away from home. Even with those three 'no-nos' in place, he was rarely without female companionship for any length of time with the exception of those very long tours of duty in Muslim countries.\n\nEven now, he'd already enjoyed the company of two cute, younger flight attendants, an attractive young female police officer who'd pulled him over for speeding in his black Corvette (she'd let him off with a warning thanks to his amazing smile and even thanked him for his service before writing her number on the back of the warning citation), and an elementary school teacher he'd run into one evening when he went out for dinner when he hadn't even been looking.\n\n\"Does the council have any questions for me?\" he asked after closing his presentation.\n\n\"I do,\" he heard the youngest member of the group say. \n\nHe smiled at her and waited for her question.\n\n\"You say you won't be asking for funding and yet you plan on refurbishing four different basketball courts. Since this project is called 'midnight basketball' I'm assuming it will take place well...around midnight. I can't say for sure, but from what I know, most of the lights around those courts have been broken and may not even work. So while it's very generous of you to pay for the materials to resurface and repaint the courts, how do you propose to get the lights repaired and working? Surely you can't have that kind of spare change under the seat cushions wherever you live.\"\n\n\"Thank you for your question, councilwoman....\" He couldn't quite make out her name because of the lighting.\n\n\"Reese,\" she said supplying the name.\n\n\"Yes, thank you, Ms. Reese. Through my current job, I was able to meet the chairman of the Seattle power co-op and he assured me that if I follow through and actually refurbish these courts, he'll fund the expense of getting the lighting back up and running on as many courts as we can refinish. The co-op will even install lights if we fix up a court that never had them.\"\n\nThere was murmuring and a few smiles among the other members of the council and even Ms. Reese smiled. \"It appears you've done your homework, Mr. Walker. Please let us know if we can help in any way.\" She paused for effect then added, \"That doesn't involve money.\"\n\nShe got a dirty look from the most liberal member of the council but Janna ignored her the way she did anytime she could, and being ignored annoyed the older African-American woman to no end. She was the senior member of the council and its chairperson and she didn't much care for this young upstart. The fact that she was gorgeous and at least nominally a Republican disgusted her and she made no effort to hide her feelings.\n\nBefore he left, he handed each of them a proposed schedule of work letting them know how he planned to proceed and what he intended to accomplish and by when, along with his contact information.\n\nWalker had the next three days off work and planned to use all of them to get as much done as he possibly could. He got to the first court at 7am in a small truck he'd rented, and began by picking up trash. When the area was functionally clean, he used a gas-powered trimmer to cut any weeds or grass that had grown up around the court. Lastly, he used a leaf blower to get rid of the dust, dirt, and anything else on the court's surface.\n\nHe put those tools away then carried two five-gallon cans of MultiCover\u2122 Acrylic Resurfacer out next to the court then went back to get a long-handled rubber squeegee stick he'd use to evenly spread the coating. Lastly came an old pair of rubber boots to keep from ruining the shoes he was wearing and he was ready to get to work.\n\nSatisfied the surface was clean, he poured out enough of the acrylic resurfacing liquid to cover a small patch of the court then carefully smoothed it out. He did one small area after the other until the entire court was as smooth as glass. Okay, it was as smooth as black asphalt, but it looked incredible. He couldn't wait to see how it would look after painting it green then spray painting a white perimeter around it along with the half-court line, the two keys, and their free-throw lines.\n\nAfter lunch, he finished a second court and did the same thing the following day. He was relieved to see the first two had at least made it through one night without being vandalized or damaged. \n\nThis second day, a couple of teenage boys came over and watched from afar. \"You guys want to help out?\" he asked.\n\n\"What are you doin'?\" one of them asked.\n\nHe explained it to them then said, \"I could use some help. I can't pay you but I'll buy you lunch at any fast food place you want if you do a good job.\"\n\n\"For reals?\" the other kid said.\n\n\"Yep. For reals.\" Walker had some extra poles and rollers as well as boots hoping this very thing might happen. Getting kids to help meant they'd be invested in the project and investment tended to correlate with pride of ownership.\n\nHe showed them how to paint the surface by dipping the heavy-nap rollers into the paint tray then slowly and evenly applying it. \"Just work systematically. One row at a time and overlap like this as you go.\" He showed them how to do that too, then handed them their equipment. \"You guys can take that can of paint and start on the other end and we'll meet in the middle.\"\n\nThe entire court was painted in just over two hours but they had to wait for the paint to dry before they could proceed. \"You guys can help me do another one while this one dries IF your mothers say it's okay. If you don't want to or can't, I'll be back in a couple more hours to make good on the lunch offer. If you stay here, do me a favor, okay? Don't let anyone else walk on the paint until it's dry.\"\n\nThe boys chose to stay, and Walker returned two hours later as promised knowing he still had half of that court left to paint by himself. There were now four other boys there along with the two he'd met. Walker introduced himself and told them it was time to take care of the out of bounds lines, etc. \"Anyone know how to snap a chalk line?\" he asked. No one nodded. \"Okay, watch me.\"\n\nAs he showed them, he folded in some math as he explained parallel and perpendicular lines as well as perimeter vs area as they held his chalk lines and snapped down the string so the lines would be perfectly straight.\n\n\"This shit is dope!\" one of the kids said as a thin, purple line appeared on the green paint when the line was snapped the first time. Walker didn't correct him for using profanity. He wasn't their father and this wasn't a school. But if he could win their trust, then he might just be able to exercise some positive influence over them and offer them a better alternative.\n\nBefore they finished painting the bright white lines, a half dozen other kids had wandered over to see what was going on. When it was done, there was a lot of excited chatter about playing round-ball or who was gonna be the next Lebron James.\n\nWalker called everyone over behind one of the old, beat-up backboards and said, \"I'm fixing up three other courts. If you live here, this one is yours, okay? But it's not done yet. Tomorrow, I'm putting up new backboards, rims, and nets. Oh, and I'll be supplying brand new basketballs. Sorry, you can't keep 'em, but I'll be bringing them when I come out here.\"\n\n\"Da-yum!\" he heard one kid say. Another called out, \"That's tight!\"\n\n\"That's not all. After that, we're turning on these lights again and you can come here and play ball instead of hangin' out with the guys your mothers stay up late worrying about.\"\n\nThere was some nervous laughter as it was obvious these kids knew who he had in mind. \"Life is about choices, right? I'm trying to give you an option here. But if you let other kids\u2014anyone\u2014come in here and ruin what we're building\u2014that's on you. I don't live here. You do. This court is yours and even if you didn't help out, you can still take pride in it.\" \n\nHe looked around and said, \"Now this important, okay? If you see someone stealing a net or getting ready to tag the court (he didn't need to explain that 'tagging' meant graffiti), don't go drawin' on the them.\" He also knew he didn't have to explain that meant pulling out a weapon. \"And you don't beat their...butts.\" More laughter. \"You just let them know this is your court here in your house. Look, if you guys don't take care of it, who will, right? Oh, one more thing. I'm not gonna try and make you like or even trust the cops, but they're keeping an eye on your court, too. So even if you don't like them or trust them, cut them some slack, okay? Or at least try to. Believe it or not, they're on your side. I'm not preaching to you now. I'm not wearing a collar. I'm not your father or your big brother. I'm just a guy trying to give you a choice. What you do with it is up to you.\"\n\nOne of the larger kids said, \"You need any more help?\"\n\n\"Yeah, I do,\" Walker said. \"I'll be back her tomorrow with the backboards. I could use a couple of strong backs. Can you be here early?\"\n\n\"Oh...how early we talkin' 'bout?\" the kid said. Everyone laughed.\n\n\"Eight o'clock,\" Walker said.\n\n\"In the mornin'?\" he asked. \n\n\"Um...yeah. That's 8am or zero eight hundred as we say in the Marine Corps.\"\n\n\"You was a Marine?\" several kids asked.\n\n\"Uh-huh,\" Walker told them.\n\n\"How many people you kill?\" was the question everyone wanted an answer to.\n\nHe'd dropped tons of live ordnance in Iraq and Afghanistan, but that was something he never talked about. All he said was, \"Only the ones who tried to kill my fellow Marines.'\n\nHe got everyone's attention then said, \"Okay, this paint needs to dry so don't let anyone on the court until it does. After that, have it and I'll see you here bright and early tomorrow morning.\"\n\nWalker turned to walk away and one of the boys said, \"Yo? What's your name?\"\n\nHe looked back over his shoulder and said, \"Walker.\" He grabbed the two boys he'd promised lunch to then loaded them and his gear into the rent-a-truck and headed off to a nearby Wendy's. He spent an hour with the kids talking about his life in the Marine Corps and getting to know them then dropped them off back at the court. From there, he drove back to the court he'd gotten half done where he found another group of kids milling around out of idle curiosity. He gave them the same speech, finished the court, then headed home.\n\nHe had a flight at 5pm so he needed to wrap things up by 1pm to give him time to get home, shower, change, and get to the airport.\n\nTo his surprise, the big kid was there along with a half dozen other kids. \"Wuz up, Mr. Walker?\" the big kid said.\n\n\"You! You're up,\" he told him. \"What's your name?\"\n\n\"Jamal.\" Walker did a fist bump with him and asked if he was ready to go to work.\n\nThe metal posts were still in good shape and in less than two hours both new white, metal backboards were up with new orange rims in place. \"Okay, I need a volunteer to put up the new nets,\" he said when it was time.",
        "There were at least two dozen kids hanging around now and hands shot up everywhere. \"Jamal came out here early to help me so he gets one of them,\" Walker said handing him a net. \"And because he did he gets to pick someone to do the other.\"\n\nThere were all kinds of loud calls from other boys when Jamal sheepishly said, \"Keneisha.\" Walker smiled when he saw the pretty young girl come out and take the other net. \"Thank you, Jamal,\" she said coyly.\n\nWalker held the ladder and Jamal went to climb up but Walker stopped him. \"I can't believe you just did that,\" Walker said.\n\n\"Why? What'd I do?\" Jamal asked.\n\nHe looked at Keneisha and said, \"Ladies first.\" There were some jeers and laughter and Jamal immediately got it. He knew Walker was right and he was all too happy to let the cute young lady go first. \"Okay, now you can carry the ladder to the other end\u2014yourself\u2014and hang the other net.\"\n\nEveryone was at center court when Walker said, \"I know I said I wasn't gonna let you keep the balls, but I'm giving you a couple of the cheaper ones today. Guess who's gonna be responsible to me for both of them?\"\n\n\"Jamal!\" came a unified reply.\n\nWalker went over to his pickup, grabbed the new basketballs and pretended to shove them into Jamal's chest. \"Right. These are for all of you, but he's responsible to bring them home and get them back out here. Anyone else who has a ball can bring it out, too, but you're gonna have to figure out how to share the court when it's just you guys out here. Teamwork and cooperation are important so don't ever let me find out anyone's trying to own the court. It doesn't belong to anyone; it belongs to everyone. Got it?\" \n\nThere were a lot of loud replies like, \"Yeah, cool, we got it.\" Walker looked around and said, \"The lights will be back on within a week. Remember, this is your court so take pride in it and don't let anyone disrespect it or you.\"\n\nAs he walked away he smiled again as he heard applause, whistles, and loud cheers. He also heard Jamal saying, \"Ah right. Listen up. This be what we gon' do.\"\n\nThere was a white sedan with government plates next to his rent-a-rig and standing next to it was Councilwoman Reese.\n\n\"I'm impressed, Mr. Walker.\"\n\n\"Ms. Reese. It's good to see you again. I had no idea you were coming or I'd have had the neighborhood band out to give you an official welcome.\"\n\nShe laughed and he couldn't help but notice she was even more beautiful when she smiled. \"The way you're going, I wouldn't put it passed you to have a band the next time I come out here.\"\n\nShe asked where he was in terms of progress and he gave her an update. \"I should have all four done within another three days. Unfortunately, I have a flight this evening or I'd have a second court ready to go today.\"\n\n\"A flight? Business or pleasure?\" she asked not knowing what he did for a living since retiring from active duty.\n\n\"Business,\" he told her which was the truth. \"I'll be back by noon tomorrow and I should have the second court completely done.\" He smiled and said, \"I could use some help if you want to stop by.\"\n\nJanna's schedule was jam packed the entire week, but Walker was so...interesting she said, \"I just might surprise you.\"\n\n\"Then it would be a very pleasant surprise,\" he said as he threw his tools in the back.\n\nJanna smiled back then told him, \"I'm guessing the Marines are out looking for a few good men since you left their ranks.\"\n\nWalker shut the tailgate and said, \"Oh, they still have plenty of them. We have the occasional bad apple, but generally speaking, you won't find a better group of people anywhere on God's green earth. Honor, courage, commitment. Along with integrity, those are the values of the Marine Corps. She stared at him as he walked to front of the pick up. \"Why are you staring at me?\" he asked flashing his ever-present smile.\n\n\"Honor and integrity. I admire those qualities.\"\n\n\"Then you missed your calling,\" he said still smiling.\n\n\"I beg your pardon?\" she asked not sure if she should be offended.\n\n\"Well, if you value those qualities, you should have been a Marine Corps officer. I could easily see you flying on my wing, Ms. Reese. But someone serving in government who values honesty and integrity? Seems kind of oxymoronic to me.\"\n\nShe wanted to be angry with him but she couldn't. She'd already seen too much corruption, bribery, and other things that turned her stomach and she'd only be in office for several months. \"Maybe you should run for office, Mr. Walker,\" she said trying to reclaim the upper hand.\n\n\"No thanks,\" he said as he got in and started the engine. \"Honor and integrity aren't just words to me. They're a way of life.\"\n\nJanna narrowed her eyes and glowered at him, but he just kept smiling. In fact, he refused to take his eyes off of hers until she smiled back. When she finally did, he said, \"You're a very attractive woman, Ms. Reese. You should smile more often.\"\n\n\"Bastard,\" she said quietly as got ready to drive off.\n\n\"I heard that, Ms. Reese!\" he called out as he drove away.\n\nShe got in her own car and started the engine she thought, \"He's a cute bastard, though.\" That thought made her smile and then laugh.\n\nHer schedule didn't permit her to get out to the courts the following day, and she'd mostly forgotten about 'her cute bastard' until that Friday evening. She was home early and watching the six o'clock local news when a report got her attention.\n\n\"We're here with Mr. Nathan Walker, a retired Marine, who's personally renovated four different local basketball courts in our area. This evening, Seattle City Power is turning on the lights at each of these courts for the first time in many years.\"\n\nDifferent cameras panned around at each of the four courts as the reporter explained how this one local resident was making a difference. There were groups of teenage kids, mostly black, playing on the new courts while parents and other adults stood watch on the sidelines. One of them, a young mother said, \"This gives our kids something to hope for. It gives them an alternative to joining a gang or doing drugs. I don't know the man who did all this, I just know he did a good thing.\" She pointed to her 13-year old son whom she said was now spending nearly all of his free time on this particular court.\n\nWhen the camera came back to the reporter, Janna saw Walker standing next to her. \"This is the man right here who made all this happen. What do you want to say to people who tell us one person can't make a difference?\"\n\n\"They're wrong,\" was all he said.\n\nShe looked at the camera and said, \"As you can see, Mr. Walker is a man of few words but not actions.\" She looked at him and said, \"How can people who want to help out get in touch with you, Mr. Walker?\"\n\nHe looked into the camera and said, \"They can get in touch with me through someone who's been very supportive throughout this whole process.\" He smiled then said, \"Councilwoman Reese has been my greatest ally in making this happen. I'm sure if you let her know you'd like to help, she'll be happy to point you in the right direction.\"\n\nJanna was sitting up straight and glaring at her television. \"You bastard!\" she said again out loud to no one. \"No, he did not just wink at me,\" she said when he did just that. \"Oh, I am so gonna kill that man the next time I see him!\"\n\nOn Monday morning, Kelli told Janna good morning then said, \"Your inbox is stuffed with emails from folks who want to help out that handsome young Marine of yours. So is your voicemail.\"\n\n\"My Marine? Are you kidding? And young? Ha! He's almost your age, Kelli!\" Janna realized what she'd just said then quickly apologized. \"Okay, I did not mean that the way it sounded.\"\n\n\"I know,\" she said smiling at her. \"I'm 54 so to me he is young. But I don't care how old he is or you are, that man is fine!\"\n\nJanna made a noise indicating her dismissal of Kelli's comment, but the older woman knew better. \"Oh, before you go into your office, you have a visitor.\"\n\n\"No. Don't tell me. If he's here....\"\n\nJanna turned around and the mayor of Seattle was standing next to her. \"Mr. Mayor. Good morning. What a pleasant surprise,\" she said as she cut her eyes at Kelli for not warning her sooner. \"To what do I owe this visit?\"\n\nHe put a hand on her shoulder and said, \"I'm up for re-election in November, Janna, and I could use a little Republican support. My phone's ringing off the hook over this Mr. Walker guy and you seem to know him quite well.\" Janna tried to explain she didn't know him at all, but the mayor didn't give her a chance to speak.\n\n\"I'm holding a fundraiser on Wednesday. If you can get Mr. Walker to attend, I'll make sure the local press is there and I'll also make sure his project gets funding, and I'll even cut you in on the proceeds for your re-election bid.\"\n\n\"Mr. Mayor, I just got elected and....\"\n\n\"So give him a call and see if you can make this happen. Wednesday, my residence, 7pm. He can be your plus one.\"\n\n\"I...I hadn't intended on going, Mr. Mayor. I already made....\"\n\n\"It's informal but wear a nice dress, okay? We'll see you both then,\" he said as he reached for her hand and shook it on his way out.\n\nKelli saw him leave and stepped into her young boss's office. \"Let me guess. He's got you going to some event with Mr. Walker sometime soon. Am I right?\"\n\nJanna sat down and shook her head in disbelief. \"Yes. This Wednesday. He's my...plus one...and I don't even know his phone number.\"\n\n\"It's on the flyer he gave you, Janna. I'll go get it for you. Unless you'd like me to ask him out for you.\"\n\nJanna glared at Kelli before realizing she was doing a lot of that lately. \"Ask him out? This is not a date, Kelli. It's...business so ahead and give him a call.\" She thought about for a second then said, \"No, I can't ask you to do my dirty work for me. Just give me his number and I'll call him myself.\"\n\nShe came back with the flyer and said, \"This time, when you get back on the horse, hold on tight.\" Kelli smiled in that way that made Janna crazy, but she couldn't help smiling back. She sat there and stared at the number for several minutes as though she had nothing else to do.\n\n\"Ah, shit,\" she said as she dialed the number.\n\nHe saw 'City of Seattle' as he swiped 'accept call'. \"Hello councilwoman,\" he said much too cheerfully.\n\n\"What? Are you clairvoyant, too?\" she said, the disbelief showing in her voice.\n\n\"No, just observant,\" he quipped. \"How may I help you?\"\n\nShe took a deep breath making sure he couldn't hear her long, loud exhale before explaining why she was calling.\n\n\"So...you're asking me out?\" he said thoroughly enjoying this.\n\n\"Um...no, I'm...asking you to...help me out,\" she said thinking she'd won the word-play battle.\n\n\"I don't understand. Are you telling me you don't want to go out with me? Have I done something to offend you or am I really that unattractive to you?\" he said with mock seriousness.\n\n\"Please don't make me beg, Mr. Walker. Please?\"\n\n\"Hmmm. That sounded pretty close to begging, Ms. Reese.\" He smiled knowing she'd be able to tell.\n\n\"Oh, you're just loving this, aren't you?\" she said.\n\n\"I kinda am,\" he told her truthfully.\n\nThe was silence before she said, \"Okay, you win. Will you please go to this fundraiser with me? I really am begging now so I hope you're satisfied.\"\n\n\"Almost,\" he told her. \"Just one other thing.\"\n\n\"You're not afraid to push your luck, are you Mr. Walker?\"\n\n\"Luck? Me? Nah. We make our own luck, Ms. Reese. And it's you who just got lucky. After all, I'm not the one who's begging.\"\n\nShe made another sound indicating anger even though she wasn't. \"Okay, you got me. What else? What do I have to do in return for you suffering through one of these mind-numbingly boring events?\"\n\n\"You have to go out with me. On a real date.\"\n\n\"What? I beg your pardon? I don't even know you!\"\n\n\"That's the purpose of a first date, Ms. Reese. Well, in our case, it'll actually be a second date because we're going out\u2014together\u2014on Wednesday.\"\n\n\"Bastard,\" she said again quietly.\n\n\"Ahh! There you go again with the endearments and we haven't even had our first date yet. I see a real future for us, Ms. Reese.\"\n\nThere was another pause before he heard, \"Goodbye, Mr. Walker.\" He was going to hang up then heard her say in a much softer tone, \"And thank you.\"\n\n\"Your welcome. And my name is Nathan.\"\n\n\"Thank you...Nathan. I'm Janna,\" she said almost sweetly before hanging up.\n\nNathan made it a point to spend several hours a day at various times at one or two of 'his' courts every day he possibly could. He occasionally played with the guys, but his primary focus was on setting a good example and teaching whatever lesson he could whenever an opportunity presented itself.\n\n\"Hey, come on! Don't throw that on the court. Put in the trash can, okay?\" What he loved the most was when other kids started telling their friends the things he was trying to instill in them. The kid who threw the empty water bottle down picked it up and put in the trash can.\n\nTo a lesser degree he enjoyed the fact that everyone now knew him. \"Yo, Mr. Walker!\" was a favorite greeting. He made it a point to learn as many names as he could and find out who was related, who was friends with whom, who the potential leaders were, and just as importantly who the potential or known bad guys were. He knew they were always lurking aware Walker was competing with them for their 'souls.'\n\nOn Wednesday, he was playing some pickup with a couple of kids and around 4:00, told them he had to leave. \"Got a hot date tonight, guys.\"\n\n\"Ah 'ight, Mr. Walker!\" one of them said. \"She gonna get some tonight, right?\"\n\nWalker never got angry with the kids. In this case he said, \"She's a really nice lady, so it's not like that. It's just dinner. It's not always about...gettin' some...okay? Treat women with respect and they'll respect you back.\"\n\nSome quick dapping told him they got it. Lesson learned.\n\nHe hadn't worn his uniform since he retired, but he'd received an email from the mayor's office asking him if he'd mind doing so. He kept his hair short, but not Marine Corps short and had no intention of ever doing so again. So while it was way too long for the Corps, he could easily pass for any other branch of the service. Not that he wanted to; he just realized it wasn't that important and no one but a Marine would notice anyway. Even so, he stopped and got it trimmed just to soothe his conscience. \"Honor and integrity,\" he said as he got out of the chair looking at what was very close to a regulation Marine Corps haircut. \n\nThe dinner wasn't a formal occasion so he chose not to wear his evening dress uniform. Instead, he pulled out his dress blues which were still neatly pressed and put them on for the first time in nearly two years. The last time had been for the Marine Corps Ball the November before last. \n\nHe not only still fit in it, it still looked perfect. There were four rows of three ribbons each with a 13th in the top center of the stack. Above them were a set of gold naval aviator's wings with one anchor signifying a pilot. Those with two were back seaters or NFOs which stood for Naval Flight Officer. In the F-18D, they were called WSO's or wizzos for Weapons Systems Officers.\n\nHe looked at the gold oak leaves on his collar and knew nearly all of his friends who'd stayed on active duty were now wearing silver having made lieutenant colonel. One more year and he'd have been promoted, too, but Walker had made his decision and still believed it was the right one for him. \n\nHe strapped on his patent leather Sam Browne belt and was satisfied with the look. Then again, who wouldn't be? Walker had never worn it in the US that he wasn't hit on multiple times\u2014even when he had a date with him. It really was a chick magnet. \"Any guy gets hit on wearing this uniform,\" he knew from experience.\n\nHe picked up his white barracks cover with the gold 'scrambled eggs' on the black visor and laughed as he wondered how many people would refer to it as a 'hat' before the night was through. Marines wore covers, not hats, and Marine officers had what was called a quatrefoil embroidered into their dress blue and green uniform barracks covers popularly know as 'saucer caps' by their Army counterparts.\n\nHe wasn't at all concerned when he saw news vans from two of the three local stations, KOMO and KIRO television, as he pulled up as this was the mayor's residence. He started to get concerned when a valet met him, welcomed him by name, and camera crews began approaching. As he walked toward the residence, he got very concerned when he saw the mayor and Janna walking down the front steps and heading his way. Within seconds, he was surrounded by cameras, reporters, and politicians.\n\n\"Major Walker, is it true you and Councilwoman Reese are dating? Is there any truth to those rumors? Major Walker, we've heard you spent several thousand dollars of your own money on refurbishing these courts. Care to comment?\"\n\nThe mayor stepped in and came to his rescue saying, \"Okay, okay. Everyone, please! Major Walker is here tonight as an invited guest and a distinguished member of our community. Please give him some space so we can get inside where it's cooler.\"\n\nUnable to get to him, Walker heard another reporter ask Janna, \"Councilwoman? Is it true you and the major are dating?\"\n\n\"You'll have to ask Major Walker,\" she said with a smile as they strode up the steps and into the house.\n\nAs they walked in Nathan turned to her and said, \"Really? They have to ask me?\" \n\nThere was that smile again and as she looked at him for the first time in that uniform she felt...well, she felt...something. Something she hadn't felt since she'd been thrown off the horse.\n\n\"You look...very handsome,\" she said unaware she was still staring.\n\nThe mayor stepped in and saved him yet again. \"If Councilwoman Reese gets too flirty, just let me know, okay, Major?\" he said winking at him.\n\n\"Flirty? I beg your pardon?\" Janna said indignantly as she turned to stare down the mayor.\n\nHe bent over toward Nathan and said, \"Uh-oh. Looks like I struck a nerve.\" He slapped him on the arm and said, \"Enjoy yourself but the price of admission is a couple of photos with yours truly before you leave, okay?\"\n\n\"Will do,\" Nathan said aware that Janna was still staring at him.\n\n\"I was not flirting,\" she repeated hoping maybe Nathan would buy what she was selling.\n\n\"Uh-huh. Of course you weren't,\" he said as he offered her his arm.\n\nShe glared again before finally slipping her arm in his. \"Bastard,\" she said quietly unable to keep from smiling.\n\n\"Yeah, yeah. You know you want me,\" he said without looking at her. Both of them had bright smiles on their faces as they walked into the party. Janna elbowed him sharply in the ribs but never stopped smiling. \"Bitch,\" he said quietly back. He didn't look but he did hear her laugh.\n\n\"Can I get you something to drink?\" he asked.\n\n\"Yes, please. White wine.\"\n\n\"You look great, by the way,\" he told her and she did. Janna was wearing a beautiful white dress that was modest yet showed off enough of her very shapely legs to catch Nathan's eye. She'd had her hair styled and was wearing it swept up adding to the her elegant, sophisticated look. He wasn't aware she'd also had a makeover. He only knew she looked incredible.\n\n\"Oh, thank you,\" she said as though she wasn't dying to hear him say something that let her know he'd noticed. As a public servant she wasn't exactly well off and shouldn't have spent the nearly $500 she'd laid out for the dress, shoes, and new bag. But the way he'd just looked at her and the way he'd just smiled made her glad she had.\n\nHe returned with two glasses and handed one to her. \"What shall we drink to?\" she asked.\n\n\"How about to 'midnight basketball'?\" he suggested.\n\nJanna smiled brightly and said, \"I'll drink to that!\"\n",
        "Several people came over wanting to be introduced, not to the councilwoman, but to the dashing Marine in the dress-blue uniform. Janna dutifully played her part and cordially introduced Nathan to each one of them. She tried not to laugh when the mayor's wife, who'd already had one too many, essentially made a pass at him letting him know she um...really admired Marines...as she ran her hand up and down the sleeve of his uniform.\n\n\"That was...uncomfortable,\" Nathan said when she left.\n\n\"I don't think they've slept together for years,\" Janna whispered. \"Oops. Did I just say that?\"\n\nNathan laughed and said, \"You know, you really do look great, Janna.\"\n\nShe thanked him again before he said, \"Look, I know I kind of coerced you into a follow-on date with me, but I didn't even bother to ask if you're seeing someone. If you are then....\"\n\n\"I'm not,\" she said much too quickly and regretted being so transparent. \"Seeing anyone, that is.\"\n\n\"Oh, okay. I just needed to be sure.\"\n\n\"Honor and integrity, right?\" she said smiling at him. \n\nBefore he could answer, they heard the mayor calling for everyone's attention. \"Ladies and gentleman? Thank you all for coming tonight.\" After some perfunctory remarks he said, \"I'd like to welcome our distinguished guest, the founder of the midnight basketball program, retired-Marine Major Nathan Walker.\"\n\nThere was a long, loud burst of applause which made Nathan very uncomfortable. He nodded his head and waved weakly at the smiling faces staring at him.\n\n\"I'm hoping Major Walker is a fellow Democrat, but considering who he's here with tonight, I'm afraid to ask.\" There was some polite laughter before he continued his remarks and letting people know when dinner would be served.\n\n\"Well, that wasn't so bad, was it?\" Janna asked.\n\n\"If that's all there is to it, then no, it wasn't so bad.\" He looked at her in a way that needed no words before adding, \"In fact, it seems more than worth it.\"\n\nJanna hadn't blushed since high school and she managed not to but she had felt the blood begin to flow to her cheeks before it somehow mercifully stopped. \n\nShe looked back at Nathan and said, \"This may be the first and only fundraiser I've ever enjoyed attending.\"\n\nHe offered her his arm again and escorted her to their seats where their name cards written in beautiful calligraphy on them had been placed.\n\n\"So tell me, what is it you do, Nathan? You said you were leaving town on business, what kind of business might that be?\"\n\n\"I fly for Pacific Northwest Charter Airlines,\" he told her.\n\n\"The private company?\" she asked. She knew it was an upscale airline that flew Gulfstream jets out of Boeing Airfield.\n\n\"That's the one,\" he said with a smile.\n\nShe leaned over and said, \"Just remember I agreed to go out with you when I thought you were a lowly, poor, ex-Marine.\"\n\nWalker smiled and said, \"Point taken. Now please let me make one.\"\n\n\"Please do,\" she said taking a sip of her wine.\n\n\"There aren't a lot of things we Marines get touchy about. Calling us soldiers is one of them. Referring to our covers....\" he pointed to his on the chair next to him, \"as 'hats' is another, and calling us 'ex' Marines is yet one more. You see, while there may be ex-wives, there are no ex-Marines, only Marines or former Marines, depending on whom you ask.\"\n\n\"Oh, I see,\" she said. \"I stand corrected.\"\n\n\"You're actually sitting, but I'll let you slide.\"\n\nShe smiled at him then whispered, \"Bastard!\"\n\nHe smiled back and said, \"Bitch!\"\n\nJanna nearly spewed her wine when he did. \"I better stop. I'm getting silly,\" she said setting her glass down. \"I have a reputation to maintain, you know.\"\n\nHe leaned over and said, \"Then what are you doing here with me?\"\n\nShe laughed even harder and pushed him playfully. \"Stop!\" she told him. \"I'm serious!\"\n\n\"I'll stop if you'll kiss me,\" he said quietly out of nowhere.\n\nHer eyes opened wide as she looked at him like he was from outer space. \"Are you kidding me? We're out in public at the mayor's home, no less. Get serious!\"\n\nHe kept smiling and said, \"I am. Serious, that is.\"\n\nHer eyes were fixed on his and he could tell she wanted to. \"Chicken,\" he said. \"Bowk, bowk, boowk,\" he said very quietly while still smiling. \n\nHe saw her look quickly to her left then her right then lean over and kiss him as quickly as she could. The unmistakeable sound of cameras with power winders taking multiple shots hit Janna like a bolt of lightning as she quickly jerked back. \"Oh, my God!\" she said immediately aware of what just happened.\n\nBefore she could speak, Nathan said, \"Let's give 'em somethin' to talk about,\" and pulled her close and really kissed her. Her eyes bugged out as cameras clicked and wound. There were hushed whispers then quiet laughter followed by a burst of applause that filled the room.\n\nWhen he finally let her go, she looked like she was in shock. Nathan was smiling and waving politely to the crowd. \"They're all looking at us, honey,\" he said.\n\nJanna turned and to her horror saw everyone in the room staring at them. At...her.\n\n\"I'm SO gonna kill you,\" she whispered as she smiled and waved slightly. \"You're a dead man walking,\" she said as the noise quieted down.\n\n\"Um, sorry but...I'm sitting,\" he corrected her. \"In case you hadn't noticed.\"\n\nHe saw her mouth the word 'bastard' again and said, \"If you don't tame that potty mouth of yours I'm going to kiss you again right here, right now. And this time it'll be a kiss people will talk about for....\"\n\n\"Okay. Okay. I'll be nice,\" she said. He looked at her and smiled before she smiled back then said, \"Bastard!\"\n\n\"I think I like you, councilwoman,\" he told her as the first course was set in front of them.\n\n\"Well, you better enjoy this dinner, major, because it's going to be your last meal.\" She thanked the person who placed her salad then said, \"You know our picture's going to be in the paper tomorrow, right?\"\n\n\"You sound upset,\" he said pretending not to understand.\n\n\"Ugh! You're impossible,\" she said shaking her head before taking a first bite.\n\n\"Me? Nah, I'm easy,\" he said matter of factly.\n\nHe saw her look at him...like that...so he held up a hand and told her, \"Don't say it.\" She turned away they turned back and got another hand. \"Don't even think about it.\"\n\n\"Oh, I'm thinking about it, all right,\" she told him. \"And it's true, you know.\"\n\n\"You know you don't mean that,\" he said patronizingly.\n\n\"You are so dead,\" she told him again.\n\n\"I can do this all night,\" he told her.\n\n\"Do what?\" she asked not sure she wanted to know the answer.\n\n\"No, not that,\" he said which got her to turn her head back toward him. \"Well actually yes, that. I'm actually quite good at...that.\" He saw her pick up a butter knife and dangle it. \"You're not related to Lorena Bobbitt, are you?\" he asked not sure if she'd even heard of the woman who lopped her husband's penis with a knife.\n\n\"Keep talking and you'll find out,\" she told him.\n\n\"What I meant was I can play this little game all night long. Marines spend countless hours deployed to faraway places where they have to fill their time with something.\"\n\n\"So you make asses out of yourselves all day long?\" she quipped.\n\n\"Touch\u00e9! The lady knows how to play, too. Very nice.\" He saw her smile begrudgingly then told her, \"No, it's now definite. I really do like you, councilwoman.\"\n\nThey gave up on the silliness for the rest of the evening and talked about the kinds of things people discuss on first dates. Where they grew up, what their families are like, going to school, first loves, favorite movies, and the like. Janna even shared the grisly details of what she fondly called 'the betrayal.' \n\nAll in all, Walker liked had to admit he really did like her. In fact, he liked her...a lot...and his gut told him she felt the same way.\n\nAfter dinner and the obligatory photo op with the mayor, Nathan was free to leave and asked Janna if she'd like to go outside for a while. They talked on the front porch for another hour when Nathan noticed it was almost midnight. \"Unfortunately, I have to leave. Crew rest is mandatory and I need to be in bed by 2am. If I don't leave now....\"\n\n\"I understand,\" she told him. \"I had a really nice time, Nathan.\"\n\n\"Yeah, me too,\" he told her sincerely. \"Listen, I really do want to see you again, Janna.\"\n\n\"I'd like that...a lot,\" she told him.\n\n\"Can I call you?\" he asked.\n\nHe didn't have his phone with him as there was nowhere to put it except in his socks as pockets on Marine uniforms were strictly decorative, not functional. She gave her number to him then asked, \"You won't forget it, will you?\"\n\nHe pointed to his head and said, \"Got a mind like a steel trap, Martha.\"\n\nHis silliness was just one more thing she liked about him. \"Just checking. At your advanced age, anything is possible.\"\n\nHe raised his hands and placed them behind her upper arms and said, \"That's true. For example, I could lean down and kiss you again right now.\"\n\n\"I don't believe that's possible,\" she said as her eyes met his.\n\n\"A doubter, eh? Are you from Missouri or something?\" he asked very seriously.\n\n\"No. Seattle girl. Born and raised.\"\n\n\"Then I'll just have to make a believer out of you,\" he said as he bent down and kissed her.\n\nThere was no surprise this time and no further silliness. It was a soft, romantic, very pleasant first kiss.\n\nWhen it ended she said, \"Wow. You were right. I...do believe.\"\n\n\"Good night, Councilwoman Reese,\" he said after standing up straight and smiling at her again.\n\n\"Goodnight, Major Walker,\" she replied as her hand slipped out of his.\n\n\"I'll call you,\" he said as he walked away.\n\nAs she watched him she realized her heart was pounding so hard it felt like she could hear it. \"What just happened?\" she said out loud. Answering her own question she said, \"I believe I just got back on the horse.\"\n\nThe following evening her phone rang and her heart skipped a beat when she saw the name. \"Good evening, major,\" she said trying not to sound too anxious. \"Where might you be this fine summer evening?\"\n\n\"I'm in Alaska,\" he told her. \"Anchorage, specifically. One of our customers owns a brokerage firm in the city, and he flies up about once a quarter to check on things. How's life in Seattle?\"\n\n\"Busy,\" she told him. \"I don't suppose you saw the morning paper.\"\n\n\"No, afraid not,\" he said smiling knowing where this was going. \"Tell me about it.\"\n\nShe explained how they were on the front of the Seattle Times social page as the hottest new couple in Seattle. \"You'll be pleased to know 99% of the article was about you and your project.\"\n\n\"As it should be,\" he told her trying not to laugh. There was a pause and he said, \"You're dying to call me a bastard again, aren't you?\"\n\n\"Am I really that transparent?\" she said unable to keep from smiling.\n\n\"Transparent? I don't think you're transparent. I'd say you're more...translucent.\"\n\n\"Bastard,\" she whispered then laughed. \"So when are you flying back?\"\n\n\"Tomorrow morning and then I'm off for a couple of days. I was thinking maybe we could have dinner together.\"\n\nJanna paused for a moment then said, \"I was trying to think of something witty to say, but this time I'll just say 'yes.' How's that for transparency.\"\n\n\"Translucency,\" he corrected her. \"No, seriously, it sounds really nice. Is tomorrow night okay?\"\n\n\"Um, let me just check my schedule and see if I can possibly squeeze you in somewhere,\" she teased pretending to look. Before he could reply she said, \"Oh, great! It looks like I have an opening. I'll pencil you in for 8 o'clock. Will that work for you?\"\n\n\"Hmmm. No, sorry. It needs to be a little earlier. I already have reservations for 7pm and I'm afraid they can't be changed. Will that work for you?\" \n\n\"Bast....\" She tried not to laugh then said, \"Seven is perfect. Do you know where I live?\"\n\n\"If I said 'yes' would you think I was stalking you?\" he joked.\n\n\"Are you?\" she asked sweetly.\n\n\"Maybe just a little,\" he told her.\n\nShe gave him her address then asked how formal to dress.\n\n\"Burger King is pretty relaxed so....\"\n\n\"Bastard!\" she said laughing harder than ever.\n\n\"I'll be wearing a jacket a tie. Does that help?\"\n\n\"It does,\" she said. \"I'm actually picturing you like that right now, as a matter of fact.\"\n\n\"I'm flattered. I think.\"\n\nThere was silence for a few moments before Janna spoke. \"You should be. That's how I meant it.\"\n\nHe told her goodbye and that he looked forward to seeing her. She hung up the phone and realized that for the first time...no, the second time...since 'the betrayal' she felt happy. The first time was at the fundraiser on Wednesday.\n\n\"Good morning, Kelli!\" Janna said cheerfully the following morning.\n\n\"Well, well, well. Someone's in a very good mood this morning! Would this have anything to do with a handsome, young ex-Marine named Nathan Walker?\"\n\nJanna thought about telling telling Kelli there were no 'ex-Marines' but instead said, \"Is it that obvious?\"\n\nKelli laughed and said, \"You can be very transparent sometimes.\"\n\nJanna smiled and as she went into her office told Kelli, \"I prefer to think of myself as translucent.\" \n\nKelli had never seen her like this before. She was happy, pleasant, and had a smile glued to her face all morning. When Janna told her she was leaving for lunch Kelli asked, \"So when's the big date?\"\n\nJanna set her purse down and said, \"Tonight!\"\n\n\"Ooooh! Tell me all about it!\" Kelli said wanting to know details.\n\n\"All I know is he's wearing a coat and tie and picking me up at seven this evening to take me to dinner.\"\n\nKelli seemed disappointed at the paucity of information but still wished her a good time. She could see Janna wanted to say something and encourage to do so.\n\n\"Am I making another mistake?\" she asked.\n\n\"How so?\" Kelli wanted to know.\n\n\"Well, I know he's young to you, but he's gotta be close to 40 years old. How does that even make sense?\"\n\n\"As I recall, your last boyfriend\u2014sorry for mentioning him\u2014was your age.\" She didn't say anything for a second then added, \"How did that work out?\"\n\n\"Yeah, no kidding,\" Janna said in agreement. \"But he's a lot older, Kelli.\"\n\n\"Okay, that's an undeniable fact. But aren't other qualities just as important? And just between you and me, that man is gorgeous!\"\n\nJanna couldn't argue on the looks. And she'd promised herself she'd never even go on a date with a man who didn't stand for certain values; values she'd named before meeting Nathan Walker. Values he mentioned on their first um...non-date/get together. Honor and integrity.\n\n\"Besides, it's just dinner, Janna. It's not like he's whisking you off to Rome or Paris for the weekend. If the age difference turns out to be too much, what have you lost? But if it isn't an issue and you really like him and if he really likes you....\"\n\n\"Kelli, Kelli, Kelli. You always offer such good advice.\"\n\n\"Don't take offense, councilwoman, but you're like a daughter to me.\"\n\nJanna knew Kelli had always wanted a daughter. She had two sons whom she loved very much, but she'd wanted a girl for as long as she could remember. Janna didn't bring that sore subject up, she just thanked Kelli for her friendship before going to lunch.\n\nHer afternoon was one dry, boring meeting after another. The hours seemed like days until it was finally 5 o'clock and Janna was able to leave. She'd just have time to get ready by seven but she'd need to hurry.\n\n\"Good luck and have fun!\" Kelli wished her on the way out.\n\nJanna had been saving a beautiful high-waisted dress for just the right occasion and tonight was perfect. It was a dark blue from the waist down and mostly white on top with the blue color accenting the V-shaped neckline. It was elegant, dressy, and yet not pretentious. Her only regret was that it fell to just above her knee rather than a few inches higher. Then again, she was a member of the city council so....\n\nShe quickly showered, re-did her makeup, then got dressed before using a curling iron to set her hair with a soft, gentle wave. She put on a triple strand of gray pearls and matching earrings which, along with a pair of navy-colored heels and a simple silver watch, proved to be the perfect complement to complete her look. She took a quick glance at herself in the full-length mirror, and hoped Nathan would like it as much as she did.\n\n\"Nathan!\" she thought as she heard the doorbell ring her back to reality. She glanced at her watch at it was exactly 7pm. She valued punctuality very highly, but this one time she wished for an extra five minutes as she hurried to the door.\n\nShe stopped, took a deep breath to compose herself, then smiled and opened the door.\n\nWhen she saw him, she forgot about everything she'd been thinking. He looked so amazing her mind went blank. He'd been dashingly handsome in his uniform, but tonight he looked like something off the cover of GQ magazine.\n\n\"Hi,\" he said. \"Are you gonna ask me in or should I knock again?\"\n\n\"Oh. Oh, my goodness. I'm so sorry. Yes, please come in,\" she said once she realized she'd been standing there just gawking at him. She closed the door and told herself it was just dinner.\n\n\"Wow, you look sensational,\" he told her as she recalled how big a deal this dress had been to her just moments ago.\n\n\"Oh, thank you,\" she replied. \"You look pretty sensational yourself.\"\n\nNathan laughed and said, \"I've been told I clean up pretty nicely for a dumb Jarhead.\"\n\n\"Then you were told the truth. Would you like a drink?\" she asked.\n\n\"I would but we kind of need to run,\" he told her. \"Can't be late, remember?\"\n\n\"Oh, right! You have reservations. Um...okay, I guess we should get going then.\" Janna grabbed her purse and told him she was ready.\n\nWhen he opened the door of his Corvette for her she thanked him then said, \"Now why am I not surprised you drive a car like this?\"\n\nHe closed her door, went around and got in and started it up. \"What can I say? I don't get to pull seven Gs anymore and this is about as close as I can get these days.\"\n\n\"Yeah, I don't imagine your passengers would appreciate the kind of turns you made in your...what plane did you fly?\" she asked unable to remember.\n\n\"The F-18C and D.\"\n\n\"What's the difference?\" she asked.\n\n\"The D-model is a two seater meaning there's another guy in the seat behind me.\"\n\n\"Is he a pilot, too?\" she asked having no idea.\n\n\"No, he's not. But he could be a 'she' these days, too,\" he told her as they pulled out onto the main road and headed for Interstate 5, before explaining what a wizzo did.\n\n\"So where is this mysterious place with the reservations you're taking me to?\" she asked as she was glued to the seat when he accelerated from 35 to 75 in what felt like maybe a second.\n\n\"It's not far from here,\" he told her as he changed lanes.\n\n\"I'm glad to see you use your turn signals,\" she told him. \"That's one of my pet peeves.\"\n\n\"Mine, too,\" he said with a smile.\n\nIn less than three minutes, he was exiting toward the King County International Airport which was known locally as Boeing Field.\n\n\"I didn't know they had a restaurant at the airport,\" she said as a way of letting him know this didn't make any sense.\n\n\"They don't,\" he said. \"Not unless you count the cafeteria in the terminal as a restaurant.\"\n\nHe pulled up to a gate and the guard waved him on through. \"Evening, Nathan!\" the armed guard said as he went by.\n\n\"Hey, Jeff! Working swing shift today?\"\n\n\"Yes, indeed. Two more then back to days.\" He looked in and saw Janna then said, \"You're not kidding. She really is beautiful.\" He tipped his hat and said, \"Evening, ma'am.\"\n\nNathan drove on through then pulled out onto the tarmac and Janna said, \"Okay, I'm getting a little freaked out here. I don't see a restaurant and if you go any further, we're going to be out on the runway. What's going on?\"\n\nHe pulled the 'Vette up next to a Bentley and shut off the engine. He jumped out, ran around and opened her door. \"Come on, we need to hurry.\"",
        "She let him help her stand up then said, \"I'm not going one step further until you tell me what's going on.\"\n\nHe pointed to the Gulfstream 450 behind him and said, \"I'm taking you to dinner.\"\n\nHe reached out for her hand as he shut her door. She handed it to him and he basically pulled her along. \"Nathan! Slow down!\"\n\nThe engines were running and the noise was deafening as they walked up the ladder then got very quiet as they stepped inside. \n\nJanna took a quick look around and saw an older couple turn and wave them up. \"Come on, I want to introduce you to someone.\"\n\nNathan still had hold of her hand and she had no real choice but to follow.\n\n\"Hello, kids!\" the older man said. He stood up and shook Nathan's hand then extended it to Janna. \n\n\"Councilwoman Reese! It's so good to finally meet you. I'm Rod Sanborn.\" He stepped aside so his wife could stand then introduced her. \"This is my beautiful wife of 37 years, Francine.\" \n\nShe shook Janna's hand and said, \"Now I see why Nathan talks about you all the time. That is a lovely dress, by the way.\"\n\nJanna thanked her then waited for Nathan to explain what was going on. \n\n\"Rod owns the company and he and his lovely wife are flying to Denver for dinner and they invited us to join them.\"\n\n\"Well, let's be clear,\" Rod said. \"We're just flying to Denver and back but not landing. Dinner is on the jet. We invited you to join us, but we know Nathan wants you all to himself so you have your own private area right over there,\" he told her pointing to two gorgeous leather seats with a table that was set with fine linen, real silverware, and crystal stemware. There was a male steward with a linen napkin draped over his forearm waiting for them. \"So go ahead and get seated and we'll be blasting off here as soon as you're ready. Enjoy yourselves, okay?\"\n\nThe outside door closed and the moment they were strapped in the luxury jet taxied onto the runway, turned around, and without a second's hesitation began it's takeoff.\n\n\"No waiting for air traffic control in one of these babies,\" Nathan said as the Gulfstream smoothly lifted off seconds later.\n\n\"I'm...speechless,\" Janna said.\n\n\"Good,\" Nathan quipped. \"Maybe you won't call me a bastard tonight.\"\n\nShe looked around at the luxurious cabin and couldn't help but be impressed. \n\n\"Wow,\" was all she said.\n\nThey were at 35,000 feet in short order and the steward asked if they'd like champagne.\n\n\"That sounds wonderful,\" Janna said as he poured for her and then Nathan.\n\n\"Cheers!\" he said before they touched glasses and took a first sip.\n\nDuring dinner, an amazing meal with kobe beef as the entree, Nathan and Janna set aside their usual banter and really got to know one another. \n\nShe learned Nathan had a servant's heart and along with serving his country, he'd nearly always been involved in some form of giving. He was a Big Brother, spent time at both hospitals visiting children and nursing homes chatting with the elderly, and volunteered with Habitat for Humanity when time permitted.\n\n\"I'm not a religious person, Janna, and I don't believe one needs to be to have a giving heart. We only have a short time on earth and believing this life is all we have motivates me to make every day count. I'm just hoping there will be someone to come talk to me when I'm 90 years old laying in a nursing home all alone.\" He watched her reaction to see if he might have possibly offended her as he didn't know how religious she might be.\n\n\"That pretty much sums up my outlook on life, too. I don't have the financial resources to give a lot of money to charity, but I have do have time and a willing heart. I have to say though, I'm already seriously questioning whether or not government service is the best venue to give back, but I've at least thrown my hat into the service ring.\"\n\nNathan asked if she'd like some more champagne before continuing. \"I admire you for serving in any capacity, Janna. Far too many people claim they care about others, but the only thing they actually do is vote for candidates they think will vote to spend more of our money. The sad thing is the money gets spent and nothing ever changes. We've spent over twenty-two trillion dollars in the so-called war on poverty and the poverty rate is within two percent of where it was 50 years when LBJ declared war.\"\n\n\"It's sad, isn't it? Too many people equate spending money with helping. The same is true with education. We pour hundreds of billions of dollars into the educational system and yet we still have thousands of failing schools all across the country. If you don't change the culture underpinning the families who live in those school zones, no amount of money will solve the problem.\"\n\n\"I'm tempted to say something like, 'So young and yet so wise' but that would violate one of my beliefs,\" Nathan told her.\n\n\"Do tell,\" Janna said taking a sip of the delicious champagne.\n\n\"Wisdom comes not from experience but rather from the ability to apply life lessons extracted from experience. One can be 70 years old and a fool while someone can be 25 and wise beyond their years.\"\n\n\"Did you choose 25 as a random number or did you look on-line to see how old I am?\" she said with a smile.\n\n\"It was random but that would have been my guess. That said, I do know better than to ask a woman her age. It's a no-win proposition for any man.\"\n\nJanna laughed and said, \"But that's not true for us woman. So...just how...young are you, Nathan Walker?\"\n\n\"Oh, boy. I guess it's a good thing we're at 35,000 feet or you might bail out after I tell you.\" He saw her smile at him before he said, \"I just turned 40.\" He added quickly, \"Last month. So I'm a really young 40.\" \n\n\"You don't look it,\" she said truthfully. She took another sip then said, \"I'm going to blame this on the champagne, but I'm still going to ask. Have you ever been married?\"\n\n\"That one's easy. No.\"\n\n\"I was hoping to get a little more information, but I did at least get an answer,\" she said smiling sweetly at him. \"Okay, let me try this. Are you interested in settling down someday?\"\n\nNathan took a sip of his own then said, \"I am. I'm actually very interested.\" He set the glass down and sat up straight then leaned toward her slightly. \"When I was flying Hornets\u2014F-18s\u2014I loved being a fighter jock and well, I also loved...playing around.\"\n\n\"Oh, so you're a player. Good to know.\"\n\nNathan smiled again then said, \"If I ever was a player, the key word is 'was.' Since retiring from active duty and flying these things, I don't see myself like that anymore.\"\n\n\"Oh? How do you see yourself these days,\" she asked.\n\nHe looked down for a moment then looked back up and right at her. \"Lonely,\" he said. \"Not in some sad, pathetic, woe-is-me kind of way. It's just that my previous lifestyle doesn't work for me anymore. It doesn't work because it can't...I don't know...fill me up. My soul, that is.\" He saw her raise an eyebrow so he explained. \"I don't mean in some religious sense. I mean that part of us that needs companionship and love based on loyalty and commitment. I'm finally ready to commit and when I do, my loyalty is guaranteed for life.\"\n\n\"On your honor?\" she teased throwing in the other quality the both valued so much.\n\nNathan knew that question was rhetorical and didn't bother answering. \"How about you, Janna Reese? Is there a husband and family somewhere in your future?\"\n\n\"I hope so,\" she said sincerely. \"I'm not in your league, I'm sure, when it comes to 'player' status, but I've sewn my share of wild oats. I guess I kind of assumed I'd wait until I was at least 30 before settling down, but my parents were my age when they married and they're still very much in love. So...yeah, if I met the right guy, I think I could be persuaded to tie the knot ahead of schedule.\"\n\n\"Good. Then there's hope,\" he said flashing her that great smile that hit her where it...didn't hurt.\n\n\"There's always hope, Nathan,\" she said smiling the same way back at him. \"But don't confuse hope with the wanton dreaming.\" He scowled at her in a playful way as she stood and said, \"I need to powder my nose.\"\n\nHe watched her walk to the restroom and thought to himself, \"Marine, you've got it bad for this one.\"\n\nAfter taking care of business, Janna was washing her hands and looked at herself in the mirror. \"Take a deep breath. This is just dinner.\" She grabbed a fresh towel to dry her hands then said, \"An amazing, totally romantic dinner with the best-looking guy you've ever been out with. A guy who's ready to settle down. A guy who....\"\n\nWhen she went back to her plush leather seat, Rod was sitting it talking to Nathan. \"Oh, here she is!\" Rod said as he stood up and relinquished it to her.\n\nJanna thanked him then sat back down before Rod spoke to her.\n\n\"I'm afraid I have some potentially bad news. The good news is it isn't serious. The bad news is we have a problem.\"\n\nJanna was thinking that with that kind of double speak at his command, Mr. Sanborn should run for elected office. \"What kind of problem?\" she asked.\n\n\"It's technical in nature but in a nutshell we have an issue with avionics. It isn't serious in the sense it'll cause us to fall out of the sky.\" He looked at Janna for a reaction but didn't get one. \"The bad news is it's going to take our techs in Denver several hours to get it fixed. I can send you home on another Gulfstream if you like. Or I can put you up at the best hotel in Denver for the night and you can get back to Seattle tomorrow morning.\"\n\n\"Is the other jet already scheduled to fly to Seattle tonight?\" Janna asked.\n\n\"No, but I promised Nathan I'd have you guys back as soon as possible and waiting for up to six hours is breaking that promise. I have another jet there and you're welcome to it.\"\n\n\"I have no idea what that would cost, Mr. Sanborn, but it has to be more than a city councilwoman makes in a year and spending that kind of money seems senseless, in my humble opinion.\"\n\n\"A promise is a promise, young lady. But you're right, it would be very expensive.\" He looked at Nathan then said, \"Beautiful, smart, and practical. I think you got yourself a keeper here, Nathan.\"\n\nHe smiled and said, \"I'm not even sure she'd even be willing to have me yet, Rod, let alone agree to be kept.\" \n\n\"I guess someone would have to let it be known he'd be interested in...having me.\" She immediately realized how that sounded fully understanding the implications of that phrase. \"Innuendo aside, I suppose from there we could potentially discuss the keeping part.\" She looked up at Rod and said, \"If I agreed to keep him, wouldn't that make him a...kept man?\"\n\nRod howled with laughter and told Nathan, \"Don't let this one get away! I'll have a car and driver waiting for you when we land. He'll take you to the Magnolia and pick you tomorrow morning.\" He looked at Janna then said, \"Separate rooms, of course.\" \n\nThey chatted the rest of the time until they landed and just as Rod had said, there was a black limousine waiting for them and within two minutes of stopping the plane, they were on their way to the hotel.\n\nTheir rooms were reserved and waiting for them when they arrived and the concierge let Janna know there was something for her in her room which was adjacent to Nathan's. \n\n\"Would you mind coming in with me just to see what this 'thing' might be?\" she asked as she opened her door.\n\n\"Of course not,\" he said. The lights came on automatically and she could see in the middle of the very large suite, a huge bouquet of red roses along with a garment bag next to it.\n\n\"This is interesting,\" she said as she opened the card.\n\n\"Janna, since this is our fault, I wanted to make sure you had a change of clothes for the morning. I guessed you to be a size 4 and hope this will be adequate. Rod and I are very sorry for the inconvenience. The flowers are no substitute for not getting you home tonight, but I hope you enjoy them. With our sincerest apologies and fondest regards, Francine and Rod\"\n\nShe unzipped the bag and saw a merlot-colored designer dress by Rickie Freeman. It was a metallic jacquard fit & flare dress that cost as much as she'd spent for everything combined for the mayor's dinner. \n\n\"You missed these,\" Nathan said pointing to a pair of heels and a matching bag as well as a bra and panty set along with a black slip. \n\n\"Oh, my goodness,\" Janna said after she saw who made the designer shoes and handbag. \"These are insanely expensive!\"\n\n\"Compared to the cost of flying a Gulfstream back to Seattle, this is pennies on the dollar, I assure you,\" Nathan told her.\n\n\"True but still....\"\n\n\"Look at the bright side. You're going to be stunningly gorgeous for the flight home tomorrow and I'll be...wearing the same underwear,\" Nathan quipped.\n\nJanna laughed because there was always some truth to anything humorous. \"How do you know there aren't new clothes...and underwear...in your room.\"\n\n\"I'll bet you a nightcap there aren't,\" he said challenging her to come look.\n\n\"You're on,\" she said. She carefully replaced the dress then hung it up on the way out.\n\nNathan's room was identical to hers except there were no flowers or garment bad. \n\n\"Ha! Looks like someone owes me a drink,\" Janna said.\n\n\"Bitch!\" he said pretending to be angry.\n\n\"You're just angry because I won,\" she told him as they heard a knock at the door.\n\n\"Are you expecting someone?\" he asked Janna.\n\n\"Other than my boyfriend? Nope.\"\n\nNathan opened the door and saw a young man holding a small bag. \"Mr. Walker? This is for you, sir.\"\n\nHe thanked the kid, handed him ten bucks, then closed the door. He walked over to Janna then dumped the contents onto the expensive coffee table in front of the leather sofa. Both of them laughed when they saw three separate three-packs of socks, tee-shirts and underwear.\n\n\"Looks like I'll only be wearing the same shirt and pants,\" he said. \"Oh, and I believe you owe me a drink.\"\n\n\"Wait just a minute!\" Janna said. \"You can't possibly tell me that Hanes underwear equates to an entire designer outfit.\"\n\n\"Clothes are clothes. Pay up,\" Nathan said. He was standing directly in front of her and smiling at him.\n\n\"Bastard,\" she said as her eyes locked on his.\n\nHe reached out for her hands and said, \"I can't tell you how beautiful you are, Janna.\"\n\nHe moved closer to her without breaking eye contact as she quietly replied, \"You can't?\"\n\nHe shook his head then put his hands on her shoulders before saying, \"I can't.\" He brushed back her hair and said, \"At this point, words fail me. All I can think of is something that sounds cliche but it's so true.\" Her eyes darted back and forth between his as he said, \"You take my breath away.\"\n\nHer heart was racing again as he leaned down to kiss her. Her eyes closed at the same time his did just as their lips met. She raised her arms and slid them around his neck as he pulled her closer. This kiss was longer and more passionate than the one after the fundraiser and it was most certainly more private.\n\n\"We could skip the drink,\" she said as their lips parted.\n\n\"Yes, we could,\" he agreed. \"And...you could stay here with me...if you'll have me.\"\n\n\"I'd love you to have me,\" she whispered. \"Having me is the first step to keeping me, right?\"\n\n\"I love the way that sounds,\" he whispered back.\n\n\"Then yes, I'll stay,\" she said as she pulled him down for another kiss.\n\nWere it possible to read the other's thoughts, both of them would have learned they were equally thrilled with the bare, naked truth soon standing in front of them. Nathan and Janna had hard, tight bodies that were well cared for making the exploration of them a genuine pleasure.\n\nIt was just after midnight when they fell asleep in one another's arms, Janna's body carrying a large load of Nathan's DNA inside it. He was as skilled a lover as he was handsome and Janna knew before he entered her that she'd fallen for him.\n\nNathan saw a hundred pretty faces from the past vanish from his memory as he looked into her eyes before making love to her. In his heart of hearts he wanted nothing more than to see this one uniquely beautiful face every day for the rest of his life. She was passionate in her lovemaking and enjoyed every aspect of it from deep kissing to the giving and receiving of oral pleasure to sex itself. Janna was easy to make love to and Walker found himself aware that she was also easy to love.\n\nIt was around 5am when he felt her arm around him. \"You awake?\" he said to her.\n\n\"Uh-huh,\" she told him quietly as she ran her hand across his chest.\n\n\"Was I snoring?\" he asked as he rolled over to look at her.\n\n\"Uh-uh,\" she told him as his eyes met hers. It was very dark in the room and they could just see one another's eyes and the outline of the other's face.\n\n\"What is it?\" he asked with genuine concern. \"Did you have a bad dream or something.\"\n\n\"No. Nothing like that,\" she said as she ran her hand through his short, dark hair.\n\n\"Have you been awake the whole time?\" he asked her ever-so quietly.\n\n\"Uh-huh,\" she told him again. She snuggled closer then said, \"I was afraid if I fell asleep I'd wake up and this would all be just a dream.\"\n\n\"It's not, you know,\" he told her as he brushed her hair back from her face. \"Although from my perspective it feels a lot like a dream.\" He kissed then said, \"A very happy, very pleasant dream.\"\n\nJanna put her arm on top around him and held him as tightly as she could. She didn't speak. She just lay there holding on for dear life.\n\n\"What's going on?\" he asked her.\n\n\"I don't know,\" she told him rather than answer him truthfully.\n\n\"Really?\" he asked sensing something was...different. \"Are you telling me the whole truth, councilwoman?\"\n\nShe relaxed her hold on him somewhat then said, \"After my last um...relationship...I promised myself I'd never fall for anyone I couldn't trust completely.\"\n\n\"That sounds pretty smart,\" he told her as he played with her hair. \"Is there more to this I should know about?\"\n\n\"Just that I...trust you completely, Nathan.\"\n\n\"Trust is important,\" he told her. \"It comes when you believe the other person has integrity.\" He kissed her softly then said, \"You have integrity, Janna, and I...trust you, too.\"\n\n\"Enough to trust me with....\" Her voice trailed off as she lost her courage to say what she was feeling.\n\nNathan came to her rescue and finished the sentence. \"With my love?\"\n\n\"Yes,\" she said so quietly he could barely hear her.\n\n\"Are you saying that if I gave it to you, you'd give me yours in return?\"\n\n\"Yes,\" she managed to say again.\n\n\"Would you want me to...keep you and your love forever?\"\n\nNathan felt a hot tear splash on his arm that was under her pretty face. \n\n\"I've only told one woman I love her in my life,\" he said to her as he wiped the corners of her eyes.\" \n\n\"Lucky girl,\" she said.\n\n\"Well, she's not exactly a girl,\" he told her. \"To me, her name is Mom.\"\n\nJanna managed a weak laugh. \"But I've never been in love before,\" he quickly added.\n\n\"Before?\" she asked her heart pounding again inside her chest. She reached for his hand and curled it tightly just above her breast.\n\n\"Before you,\" he said softly. He gently pulled his hand away and laid it on her cheek. \"I'm in love with you, Janna Reese.\"\n\nHearing the words she'd dreamed of hearing since he first kissed her, she told him, \"I'm in love with you too, Nathan Walker,\" as she pulled him on top of her. \"Make love to me again. Please?\" she asked almost pleading.\n\n\"My pleasure,\" he said as he began to grow hard. He began moving down to devote his attention to her perky, B-cup breasts when she said, \"Uh-uh. I just want you inside me. That's all I need this time. Is that okay?\"\n\nHe moved back up and told her, \"Anything you want is okay,\" before slowly entering her very wet pussy. \n\nJanna sighed and moaned as he filled her. She pushed back and ground against him as hard as she could while pulling his body to her. She not only needed him inside of her, she felt some kind of desperate desire to meld with him; to somehow literally become one knowing that couldn't happen but needing to try. ",
        "When he came inside of her again she exploded in a massive orgasm followed by a sea of emotions. That flood carried away all of the hurt from the betrayal and ushered in a new era of love and trust with a man who valued honor and integrity as much as her. She finally fell asleep happier than she'd ever been before.\n\nWhen they arrived at the charter airport, they walked back up the ramp onto the Gulfstream 450 where Rod and Francine welcomed them back on board. He couldn't help but notice they were holding hands but not like they'd done before. \"Is it just me or did this little breakdown of ours provide some kind of romantic spark for you kids?\" Rod asked in his folksy kind of way.\n\n\"Something like that,\" Nathan said as Janna smiled at him.\n\n\"Thank you for the beautiful dress...no, outfit, Francine,\" she told Rod's wife.\n\n\"It suits you, dear,\" she told her. She looked at Nathan then back at Janna and said, \"So does the handsome young man holding hands with you.\"\n\nShe smiled back then glanced briefly at Nathan before saying to Francine, \"Yeah, I might just keep this one.\"\n\n\"Hot damn!\" Rod said. \"This calls for a celebration!\"\n\n\"It's nine o'clock in the morning, Rod,\" Nathan pointed out.\n\n\"Hell, it's five o'clock somewhere!\" he hollered out as he called for more champagne.\n\n\"Champagne breakfast anyone?\" Nathan said to Janna.\n\n\"As long as it involves you and me, I'm in,\" she told him.\n\nThe new couple dated exclusively for the next two months before Nathan surprised Janna with another flight. This time it was to Las Vegas where he proposed to her in front of the fountains at the Bellagio Hotel where they were staying. Janna managed not to cry when he asked her, but her hands were shaking so hard the ring fell and nearly ended up in the water. Nathan carefully picked it up and succesfully placed in on her finger before kissing her and telling her how happy she made him.\n\nJanna's mother adored Nathan and was beyond thrilled to be able to help her daughter plan the wedding of her dreams and Nathan loved how they both took care to involve his mother, as well. \n\nThe following Spring, the were married in a small chapel with all of their closest friends and family members in attendance. At least a dozen of Nathan's best buddies from active duty were there and they all wore their dress blues and formed a sword arch for the happy new couple following their wedding.\n\nThey flew back to Denver, courtesy of Rod and Francine, for their honeymoon, and when they returned, Janna finished out the remainder of her two-year term on the city council. She chose not to run for re-election knowing she was pregnant with their first child and couldn't wait to be a mother as well as the wife of the most wonderful man she'd ever known.\n\nNathan spent as much time as he could on the courts doing his best to shape the youth of America as they enjoyed the alternative of Midnight Basketball to the hard of life of gangs and drugs that had claimed so many of the kids they'd grown up with."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/midnight-basketball"
}