{
    "title": "Time Rider Ch. 06",
    "pages": [
        "Disclaimer: All characters portrayed engaging in sexual activity are 18 years of age or older. Actual historical figures or living people represented appear strictly for context and humour; I lay no claim to them. If you had trouble following the plots of Pulp Fiction or Four Rooms because of the back-and-forth timelines, just turn around and leave now, as this fic will make you butthurt. As always, critiques and reviews all welcome; illiterate flames will be snickered at. Enjoy!\n\n Chapter VI- It's Your Own Fault You Snooped!\n\nMark didn't speak for several seconds, trying his best to not gape at Roxy. She'd always been somewhat suspicious of him when he did just about anything, but the fact that she'd done actual research this time was something new. She had played her hand, and he was cornered. But still, he found himself not sure what to say.\n\n\"Well, c'mon, you little trouser snake,\" moving away from the door and sauntering toward him. She could tell she'd caught him dead to rights about something, but now she needed to find out what it was. \"Y'might as well 'fess up, because I somehow doubt you want mom and dad to know what you're up to.\"\n\nThe mere thought brought a shiver to Mark and left a cold sweat on his brow. He swallowed, trying not to panic. Roxy had less mercy in a sibling confrontation than Mike Tyson had in the ring. He thought of the number of times she'd beaten his ass for tattling on her when they were younger, and how she'd always get some brutal form of revenge he was unlikely to forget.\n\nAnd he dreaded the thought of how she could screw this up for him.\n\n\"I'm almost not wanting to find out, at least for a while, because watching your mind flop around in panic is kinda fun,\" she said, smirking as she stopped in front of him and leaned forward. \"But I need to make a decision about whether the 'rents oughta know, so let's speed this up, okay?\"\n\nShe then turned and sat on the edge of his bed, leaning back on her hands, one leg crossed over the other as she looked at him pointedly. \"Spill it, little brother.\"\n\nHis mind raced. What could he tell her? She'd caught him in a flat-out lie that he had acquired his Falernian wine from a Ren Faire, and had no doubt pieced together that his other recent exotic acquisitions were likewise not from where he'd claimed. So what were her suspicions?\n\nShe no doubt was assuming, quite reasonably, that he was involved in some illicit activity that gave him access to these things, or gave him the money to buy them. In either case, if it had been legal, the little spore would have been bragging about it to their folks, and instead, he'd lied to them all. So it was something illegal.\n\nThis was gonna be good, she thought. Having him squirm on a hook like this was almost giving her a tingle.\n\nMark took a deep breath, not exactly sure what was about to leave his mouth. But he had to say something. If he kept stalling and wasting her time, he wouldn't put it by Roxy to call their parents up and make them a part of the conversation. Any good will and credit he'd gained with them over the last few months would be down the toilet instantly, no questions asked.\n\nIt was now or never.\n\n\"I... I own a time machine,\" he finally said, deflating and sighing. \"I found it before school got out and figured out how to use it. It's called a Holmes Field Device, because Ashley Holmes, the younger brother of Sherlock, invented it. Anyway, I can use it to visit various eras, and that's how I've come across things like the Falernian wine. I... I actually have been to ancient Rome, and bought some to bring back. I can even show you where it's buried.\"\n\nRoxy stared at her brother dumbly. He kept talking, despite his fear.\n\n\"I've... I've been to Seventeenth-century France, Imperial Rome, and a few other places on short hops. I trade things we think nothing of for currency specific to the era I wanna visit. Those spices? The ones that were so good? From Crete during the Minoan Era, although I didn't really stick around, it just got recommended to me.\"\n\nRoxy kept looking at him steadily.\n\n\"I don't even know how it works, it's just a platform with a frame that's all dials and numbers and lights,\" he confessed, shrugging. \"But it takes me not just through time, but it kinda goes against the rotation of the earth, so if I know coordinates, I can go to the places as well. Y'know, like longitude and latitude on dials, and shit. It's kinda difficult, really.\"\n\nThe air hung heavy between them as Mark sighed again, apparently done talking. Roxy stared at him for several more seconds before getting up off the bed and walking slowly forward until she was standing over him. Mark looked up at his sister, while she gazed down at him, expressionless.\n\nThen her hand went back behind her head as if she was going to strike him. Mark squeezed his eyes shut, awaiting the inevitable Roxy slap.\n\n\"You little brat,\" she hissed through clenched teeth, her hand still raised. \"D'you really think anyone is that stupid?!\"\n\nMark opened one eye warily, glancing up at her. Roxy was almost shaking in restraint as she glared down at her younger brother. Why was she holding back?\n\n\"I oughta knock your teeth out for treating me like an idiot,\" she growled, still wrestling with her fury. \"Worse, I oughta call mom and dad up here and let them in on this bullshit of yours. Dad works for a forensics department, after all; I'm sure he can get to the bottom of this!\"\n\nTheir dad did work for a forensics department, didn't he?\n\n\"So 'fess up, or you know what happens next!\" she said in a dire voice.\n\n\"Nope,\" Mark said now, folding his arms. \"Not gonna happen.\"\n\nHis sudden change in tone and demeanour gave Roxy pause. She blinked. \"What?\"\n\n\"I said, no, Rox,\" he repeated, standing up now and forcing her to move back. \"Maybe I'm tired of being bullied by you, every time you've got a bee up your ass about something. If you were doing better in your courses, you wouldn't have time to worry about this bullshit; you're just looking for something to take the pressure off you.\"\n\nRoxy's eyes blazed and her nostrils flared, but Mark held up a hand. \"Y'might not wanna do that, Ronda Rousey.\"\n\n\"Whyzzat?\" she managed to say through clenched teeth.\n\n\"Well,\" Mark said, walking around her and over to his bed, \"because you wouldn't want mom and dad to find out about this...\"\n\nMark reached under his pillow and pulled out a small plastic bag, in which was sitting a colourful glass pipe. \"Look familiar?\"\n\nRoxy's eyes went wide, and she stopped dead. \"How...\"\n\n\"Does it matter?\" Mark replied simply.\n\n\"It's... it not mine!\" she said hastily, going pale.\n\n\"Oh, I would hope not,\" Mark said, shrugging. \"But dad would be able to tell for sure in no time, right? He works for a forensics lab, after all.\"\n\n\"I don't keep it here, that should be at Danni's house!\" Roxy protested, still losing the colour in her face. \"How the fuck did you get that?! You fucking criminal! I'll-\"\n\n\"You'll what?\" he asked, dangling the bag. \"Tell mom and dad? Go ask Danni how I got it? What possible scenario here could work out in your favour, Rox?\"\n\n\"It's... it's legal!\" Roxy huffed, getting desperate.\n\n\"Like mom and dad are gonna care!\" Mark laughed. \"Even if it is legal, you know damn well they'll assume it's one of the reasons your grades are taking a dive, and you'll be in such a world of hurt that any wrong I've done will look like a walk through a rose garden in comparison.\"\n\nRoxy said nothing, she just glared at him.\n\n\"Well? What's it gonna be, sis?\" he queried, looking at the little rainbow pipe. \"Nice choice of bag, by the way, you can't smell a thing.\"\n\nRoxy's glare was nothing short of venomous. \"What do you want?\"\n\n\"Simple,\" Mark answered, shrugging. \"Leave me the fuck alone, and mind your own damn business for a change. Live your life, not like I care if you do this shit. But quit trying to make my life miserable.\"\n\n\"If I do, you gonna give that back to me?\" she asked, eying him, and then the baggie he held.\n\n\"Not yet,\" he said, shaking his head. \"I'll keep it for a little bit as insurance.\"\n\n\"Give it to me!\" she snarled, surging forward, her fist raised.\n\n\"Uh-uh!\" Mark said, holding up a finger. \"Come any closer and I bellow. Guess who comes upstairs instantly?\"\n\nRoxy stopped dead in her tracks, her whole body trembling with the effort of restraining herself.\n\n\"Why is fucking me over such a big deal for you, Rox?\" Mark asked, genuinely curious. \"Is your life really so incomplete if I'm a little happy?\"\n\nRoxy put down her fist and took a deep breath, her eyes closed. When she opened them, she was obviously in control, but she gave him a look that would wilt a rock.\n\n\"Okay, little brother,\" she said quietly. \"You've got a deal. I won't breathe a word of this to anyone. But just so you know, if the opportunity to expose whatever shit you're up to does present itself, you're going down like a two-dollar hooker.\"\n\n\"I don't know what that's like,\" Mark replied, shrugging. \"I'll assume you're the expert here.\"\n\n\"Very funny,\" she sneered as she turned and walked rather stiffly toward the door. \"And in the meantime, I'm gonna go and have a word with my dear friend Danni about how the Hell my bowl came to be in your possession...\"\n\nRoxy stomped out of his room, trying to not slam the door behind her. Once he heard her heading down the stairs, Mark sank onto the corner of his bed and exhaled loudly, another shiver running up his spine. He suddenly had to pee.\n\nHad he really told Roxy the truth? He hadn't planned to, but he didn't exactly know what he planned to tell her, either. Now that he thought of it, telling her the truth was even more ridiculous than any appreciable lie he could have come up with, wasn't it? Of course she wouldn't believe him about a time machine, and she was quite reasonable not to. Just because it was true didn't mean she was committing an error in judgment.\n\nBut now what? He had no idea how long her coerced 'promise' would hold her. She was really hot under the collar, and Roxy didn't take losing well at the best of times. He'd just have to be careful, he supposed. More so.\n\nHe sighed and looked down at her little weed pipe, still in its baggie. In a moment of panic, when Roxy had been standing over him and threatening to slug him across the jaw, he'd made an instant decision- taking a lesson from his playbook with Becky- and resolved that he would get into Danni's house and filch the pipe, because he knew Roxy kept it there. He'd heard her talking over the phone about it with Danni at various points, and never really thought anything of it. Until now.\n\nHe was familiar with Danni's house, since she'd been best friends with Roxy since they were little. When the two families were having dinner together, the girls had often dragged Mark upstairs and dressed him in girl's clothes and put makeup on him, like he was a doll for their tea parties. He also knew that Danni's parents didn't care if she smoked, because he'd heard Roxy lament this fact over the phone, wishing her parents were that cool.\n\nHe squeezed his eyes shut, trying to do the math of all this in his head. It would take Roxy thirty minutes to reach Danni's house in her car, to ask what the Hell had happened. But Danni would protest, insisting she'd never betray her friend and give Mark the pipe. Then she'd prove it by showing Roxy it was exactly where it was supposed to be, which was taped inside to the top of her underwear drawer.\n\nOnly it wouldn't be there.\n\nUnless Mark went back to Danni's place and stashed it again, before the girls got up to her room. And then got out again. That'd really fuck with Roxy's head, and make Danni think Rox had gone insane.\n\nIt took eight minutes for Mark to fire up and prime the Holmes Field Device, which was sitting in a corner in the basement that no one ever used. It was dead space, and as safe as any place else could be that wasn't Becky's basement. Eight minutes to prime it and program in the coordinates and the time. Like, literally a minute after he'd apparently gotten the pipe out of there to begin with.\n\nWhat?\n\nHis mind was almost spinning at the logic flips. He had to return the pipe before he actually stole it? When did he steal it if he hadn't done it before returning it? And did that mean he had to steal it twice?\n\nHe could account, apparently, for Danni not being in her room the first time, because he'd seemingly gotten away with it. If he landed a minute or so after he had burgled her, he would have the time he needed, he hoped, before she came back from wherever she was.\n\nReturn it... steal it later, when no one is looking, then return it... I think. \n\nHe heard the distinct sound of Roxy's Mustang roaring away down the road angrily. He somehow doubted that he had thirty minutes.\n\nWhat if he miscalculated and got caught? The obvious issues aside, how did he explain the Holmes Field Device?\n\nCould he explain it? People in this era thought time travel was fanciful sci-fi, after all. What happened then?\n\nHe dropped the baggie on the bed, clasped his face in his hands and groaned, the number of calculations he needed to do making his head hurt. He really needed to stop pulling his solutions out of his ass, he was going to give himself a time-hemorrhoid.\n\nTime was wasting...\n\n***\n\n\"Wow, Mark,\" Becky mused as she sat in her lounger, sipping at the Falernian wine. Her bottles were almost gone, and they'd soon have to go back to their secret place in the woods and get more. It had been a rather involved operation, getting the giant vats aged a certain number of years back in the Roman era, then transporting them into the present and burying them again, so that they had a large stock of perfectly aged wine. \"You sure like to play with fire, don't you?\"\n\n\"Tell me about it,\" he said wearily, as he sat on the couch, long pull drink from his own wine glass. \"Can't believe it went off without a hitch.\"\n\n\"You were near death that first night with me,\" Becky said rather somberly, concerned about the stress on her student's face. \"And that only required one trip on your part, and my belief in myself. This little circus, however, I'll be amazed if your time cops don't show up to lecture you again. You'd deserve it.\"\n\n\"I felt trapped, okay?\" he said, trying to keep the exasperation out f his voice. He knew Becky was right, and he didn't want to snap at her. It had just really worn him out. He'd lost track of when he was supposed to be there, and how often. He'd eventually concluded that dumb luck had saved him from criminal charges, not to mention any other headaches. \"I just... when telling her the truth didn't make her go away, I jumped into my playbook, which at this time, consists of what I did with you.\"\n\n\"What would you have done, exactly, if she'd believed you about the Holmes Field Device?\" Becky queried, looking at him with interest.\n\nHe considered and gave a halfhearted shrug. \"I guess I knew she wouldn't, because if I told Roxy I was a guy, she'd yank my pants down to make sure. But to answer your question, I... I dunno. I was just really outta options.\"\n\n\"I know you know this, Mark, but we obviously have to find ways for you to be even more careful,\" she said in a gentle tone. \"You haven't timelocked yourself yet, but I wouldn't be surprised if you came really close there.\"\n\n\"No shit,\" he muttered, scowling at his glass. \"Sorry, just stressed.\"\n\n\"Oh, poor baby,\" Becky cooed, getting out of her seat and coming over to sit down next to Mark. She pulled him into lean on her and then rested his face between her opulent breasts, knowing exactly the effect this would have on him. \"Just relax, it's all fine now.\"\n\nMark sighed and nuzzled into her breasts, relaxing a little. His teacher's scent and her glorious softness had a calming effect on his frazzled nerves. \"Gawd, we should go on vacation in some remote time for a year or so. I could use it.\"\n\nBecky giggled, stroking her fingers through her student's dark hair. \"If only we could.\"\n\n\"Well, why couldn't we?\" Mark reasoned, still nuzzling and refusing to leave his nest. \"We've got a time machine, don't we?\"\n\n\"Mark, a two-week vacation is one thing, but longer stretches are problematic.\"\n\n\"Why?\"\n\nBecky sighed and put down her wine, opting to just hold him while he nuzzled her boobs. It wasn't like she didn't enjoy the sensation, after all. She knew that Mark, even though he was at least as experienced a time traveller as she was at this point, was still an eighteen-year-old boy, who had failed her Physics course. He just wasn't good at this stuff yet. But he took her with him readily, and she would have all the patience in the world until he caught up.\n\nIf he ever did.\n\n\"Mark, let's say you and I did indeed go on vacation for a year, somewhere in the timestream,\" she began, still stroking his wavy, dark hair. \"And let's say we left tonight.\"\n\n\"Sounds good, I'm in,\" Mark replied in a muffled tone.\n\nShe smirked and continued. \"And we come back after a year, to, say, an hour after we left, no one would notice, right?\"\n\n\"That's the beauty of it,\" he agreed, nodding in her boobs.\n\n\"But we'd notice,\" she pointed out. We'd be a whole year older than when we left. When you got back, everyone would be trying to celebrate your nineteenth birthday, when, in reality, you're twenty. And you're the only one aside from me who knows it. Thanks to my captivity in the Louvre, I'm already a month older than our calendar indicates, so my birthday is technically inaccurate.\"\n\nHe paused as he considered what she was saying.\n\n\"And let's say, God forbid, that the time machine broke down somewhere in the past,\" she said, her voice taking on a serious tone. \"Neither of us knows how to fix it, and there's absolutely no guarantee that we'd be able to find someone who could. What if it took the two of us five years to repair it, against all odds? We'd arrive back, an hour after we left, if we could, and everyone would notice we were magically five years older. I'd be thirty, you'd be twenty-three. We'd both look somewhat older, undoubtedly. How would we account for that?\"\n\nMark said nothing, just listening.\n\n\"The only alternative would be to arrive five years in the future, to make up the difference, but then we've been AWOL with no explanation for five years,\" she continued. \"Sure, maybe you can say you joined the merchant marines without a moment's notice, but what would I say?\"\n\nShe took his chin gently and turned his head to look up into her blue eyes.\n\n\"We can't mess with the timestream and people's lives like that,\" she said quietly, almost sadly. \"We're not from an era where time travel is the norm and people know what to expect.\"\n\n\"You sure know how to take the fun out of time travel, Becks,\" he sighed, shaking his head. She giggled and cradled him in her bosom again, knowing he didn't mean it.\n\n\"Silly,\" she cooed, jiggling her breasts against his face a little. \"You know better than anyone how much fun I can be in the timestream.\"\n\n\"Yeah, that's true,\" Mark admitted, smiling and turning over on his back to look up at her while he lay in her lap. She was wearing black yoga pants, and a tight tank top and gave her impressive bust lots of breathing room. \"But I really could use a little time away, to be honest. This nonsense stressed me out.\"\n\n\"I'm sure it did, and hopefully you'll start thinking about these things ahead of time,\" she agreed, poking him in the nose. \"In terms of what we could do, I have been giving the matter some thought.\"\n\nMark raised an eyebrow. Becky never had bad ideas. Not compared to his, in any event. \"I'm all ears.\"\n\n\"Hardly,\" Becky giggled, reaching her hand down to gently cup his crotch beneath his jeans. \"Let me explain first. You're not the only one with a predicament, although mine isn't necessarily self-inflicted.\"",
        "\"Still listening,\" Mark said dryly, noticing the cheerful jibe.\n\n\"It's difficult, being separated by three months the way we are,\" Becky said, caressing his cheek. \"You, the Mark lying in my lap, you're from my upcoming summer. Me, I'm still waiting for the school year to finish. And three times a week, I see you in my classroom, and have to remind myself that the you sitting in that desk is not only still a minor, still, but has absolutely no idea about any of this.\"\n\nMark said nothing, considering.\n\n\"And I have to constantly be on guard, making sure I'm not sitting behind my desk, gazing at you dreamily in an off moment, or reminding myself not to sext you from the bathroom.\"\n\n\"Damn, now I kinda wish you had,\" Mark mused, making her snicker.\n\n\"Silly. What I'm saying, is that I think in the very near future, we'll need to not see each other for three months, as agonizing as that sounds, so that I can catch up with you.\"\n\nMark screwed up his face as he thought about that. \"That does sound sucky.\"\n\n\"Oh, it won't be for you,\" Becky pointed out. \"You get to hop on your time machine and return to three months from now, just like you always do every time we meet up. You won't even notice the difference. But you've also very tacitly avoided my future self for now, haven't you?\"\n\nHe nodded. \"Yeah, you said to. Not that hard; it's a big city, and you told me where you tend to be at any given time, so it isn't much of a challenge.\"\n\n\"Well, I want to catch up,\" Becky said firmly. \"I want us to be on the same relative time frame, so that we don't need to worry about twists and so on, where things can go wrong. And if that means not seeing this you for three months,\" she whispered, placing her hand gently on his crotch, \"and no time travelling for me because you've got the Holmes Field Device, then I'll manage. But it needs fixing, Mark.\"\n\n\"Okay, done,\" Mark agreed, nodding. \"But you mentioned something fun, which hasn't come up yet in this presentation so far.\"\n\n\"Well,\" Becky began again. \"I was thinking that we really should go and get Nanu and bring her forward with us. \"It's not fair to leave her in that villa by herself. She doesn't really know how to look after herself, after all.\"\n\n\"But we can keep visiting her,\" Mark pointed out. \"She doesn't understand time travel, she'd hardly notice.\"\n\n\"If we keep coming back to the same point in time to visit her, or at least within the same period frequently, it's true that little or no time will have passed for her,\" Becky said. \"But we have our own lives, and goodness only knows when we'll have the time to pop out to Imperial Rome again. Years might pass for us before we can see her. How would we explain how much older we look to her?\"\n\n\"That again,\" Mark sighed, resenting the mathematical drudgery of time travel. \"Yeah, that would freak her out. And as far as she's concerned, I'm still your slave, and she is too.\"\n\n\"It's a notion I'll have to disabuse her of, once we bring her back here,\" Becky confirmed. \"But I was thinking we'd have some fun when we go back and get her, and then she could stay with me. I'd spend our three months apart teaching her about our time and world, and when you meet us, we'd all be caught up together. Sound good?\"\n\n\"Well, I can't imagine it not being fun if you're around,\" Mark replied, grinning and sitting up, feeling considerably better after this talk with his teacher. \"What're we gonna use to get the funds?\"\n\n\"Well,\" Becky said, making a cute show of thinking. \"I've actually checked with that chroniques dealer? The one over on Adelaide that we were directed to?\"\n\n\"You've been busy!\" Mark laughed, putting his arm around her shoulder.\n\n\"I like to be prepared,\" she purred, snuggling into his side. \"Anyway, I told him about my complete collection of Monchhichi minis that I inherited from my older cousin when I was young. Never did anything with 'em, because they just took up shelf space. But he's willing to give me a lot of money for them, apparently they're huge in the thirty-third century.\"\n\n\"Well, of course they are,\" Mark said, rolling his eyes. \"I... what the Hell are they, anyway? Never heard of 'em.\"\n\n\"Oh, just collectible figurines from Japan in the Seventies, they look like cute little lolicon monkeys, along with a plushie toyline and several cartoons,\" she explained, waiving dismissively. \"I couldn't care less about them, and if they make some person happy thirteen hundred years in the future, great. I'm getting lots of money for 'em.\"\n\n\"Okay,\" Mark agreed, shrugging. \"I was gonna sell my dad's Rock 'Em Sock 'Em Robots or Micronauts if we needed the geld. I'd probably get a good price on those, too.\"\n\n\"You will,\" she confirmed. \"But my lolicon monkeys are worth more, so we'll use them. So, we'll go see Nanu, tell her what's really up, have a lot of fun, spread my money around, and then bring her back. Sound good? I think two weeks of solid sucking and fucking should make you forget your woes.\"\n\n\"I can hardly wait,\" Mark declared.\n\n\"Why wait at all, big boy?\" she purred again, as she undid his fly and bent her head down while fishing his cock out of his pants.\n\n***\n\nNanu sighed as she sat on the solium, kicking her legs back and forth slowly as she looked at the mosaic on the floor. It had been over a week now since she had seen anybody, let alone her mistress. As gorgeous as her surroundings were, this expansive villa hidden in the distant hills outside of mighty Rome, she was decidedly lonely. She'd never really spent any appreciable time by herself before Lady Aurora had purchased her from the Flavians.\n\nDespite her mistress' unwelcome absence, she found herself smiling as she thought of her. Lovely, lovely Lady Aurora Horatia- tall, with long, golden blonde hair, sparkling blue eyes, sensuous lips that were always parted to show her white teeth and radiant smile...\n\nHer thoughts turned to the lady's other parts now, and she blushed. She thought of her mistress' lovely neck, supple shoulders, her large, perky bust, trim waist and glorious, tight ass. Nanu felt warm as she pictured Lady Aurora's pussy, which she kept smooth and clean- so unusual for a Roman patrician woman. She had long, strong dancer's legs, just like Nanu. She remembered how captivated she'd been while she watched Lady Aurora dance at the orgy.\n\nBonosus...\n\nLady Aurora's principal slave, and her lover. Dark, wavy hair, and deep brown eyes... he was unnaturally tall, at least to Nanu, with an athletic build, broad shoulders, and a small waist that was hard to the touch... and his cock was huge. It had felt like it was tearing Nanu apart when she rode on it with wild abandon.\n\nShe came out of her reverie and looked around again, sighing forlornly. The villa was beautiful, with plastered walls covered in colourful frescoes, mosaic floors, indoor bathing chambers and toilets, beautiful gardens, a stream just behind the building, and all the delicious food she could eat. She had all the creature comforts any slave could ever want, but it was still quiet and lonely for her.\n\nShe looked down at herself, using her fingers to pull slightly at the material of the top of the dress she wore. It was a spare garment, made of quality linen, one of several Lady Aurora had bought for Nanu from the Flavius family. Of course, the slave girl was thrilled beyond words to wear such a thing, and in all ways, she saw her ownership by Lady Aurora as a turning point in her life, the beginning of something wonderful beyond words. She and Bonosus were the luckiest slaves to ever live.\n\nBut not if she was so very alone.\n\nNanu, born into poverty in the tiny settlement of Akhmim in Egypt, the youngest of twelve children. Sold into slavery to the Flavians at a tender age to help feed her family, she'd lived a hard life, doing the most menial of tasks for the wealthy Roman family at their home in Tepihu, far up the Nile.\n\nBut then they discovered she could dance, and dance well. She was sent to the principal Flavian household in distant Rome, a place she'd only ever heard of, and could never imagine. She danced for the patriarch and his wife, and they agreed to keep her on, as long as her legs held out. So Nanu danced relentlessly, determined to never return to the misery she'd known before.\n\nWithin a year, she was the leader of the dancing girls the Flavians owned, and whatever jealousies the other girls might have held were quickly cast aside. Nanu understood that if she treated them all equally, she was more likely to prosper, rather than looking after only herself at their expense. She was lovers with all of them, and it wasn't long before she was fucking the lord and lady as well. Her position was as secure as a slave's could be under such circumstances.\n\nTrue, she was still punished, quite often for things beyond her control. But the Flavians were not overly harsh with her, having her flogged with short, thin reed brooms, to avoid scarring her. It hurt, and she cried, but she inevitably recovered, usually to be fucked by Master Flavius as she soon as she could walk.\n\nShe left the chair and walked over to a small table, on which sat a highly polished silver mirror. She picked it up and looked at herself, pursing her lips, assessing her features. She'd always concluded that she was at least somewhat attractive, since men (and women) always wanted to fuck her. She was aware that being a highly trained dancer gave her a desirable physique for a slave, and her strong, taut muscles kept her pussy tight. Her breasts were not overly large, but were pronounced from her torso, and jiggled when she danced or ran. She thought they swayed nicely when she walked.\n\nShe had the creamy bronze skin of the people of the Black Lands, children of the pharaohs. Her thick hair was a glossy blue-black, and she kept it trimmed to just past her jaw, in the manner of women in her country. Her eyes were a warm hazel, with tawny flecks many of the other dancing girls described as bewitching and seductive. If only she could-\n\n\"Well now, if it isn't everyone's favourite dancing slave,\" quipped a lyrical voice from nearby. Nanu's head snapped around and she cried out in delight as she espied Lady Aurora standing in the door nearby, with Bonusus just behind, looming over her and grinning. Nanu had been so wrapped up in looking at her reflection and feeling sorry for herself that she hadn't even heard them approach.\n\n\"MISTRESS!\" the Egyptian girl called out as she darted across the room and threw herself into Lady Aurora's waiting arms. \"MAGISTRA!!! HOW I HAVE MISSED YOU!!!\"\n\n\"We've missed you too, Nanu,\" Becky said softly, hugging the shorter girl and kissing the top of her head while Nanu burst into tears. \"I'm sorry we were away for so long.\"\n\n\"It felt like forever, mistress, I won't lie,\" Nanu said, choking back her sobs before pressing her mouth to Becky's and kissing her fiercely. Becky returned the kiss gladly, and the women greeted one another with tangling tongues and wandering hands for nearly a minute before they needed to breathe. Nanu looked up at Becky now, her eyes still wide and wet with emotion. \"May I... may I say hello to Bonosus, mistress?\"\n\n\"I'm pretty sure he's counting on it,\" Becky said, stepping aside and giggling as Nanu flung herself against Mark, kissing him feverishly, but with her hands predictably snaking down his frame and under his tunic to fondle his cock. \"Goodness, girl, did those toys I left get no love from you in my absence?\"\n\n \"Oh, mistress, they got loved day and night,\" Nanu replied, turning to look at Becky since she was being addressed. \"But I do not need to tell you that it is hardly the same as the real thing, as to have a real lover. And I am sorry if it makes me sound deficient, but... I am not good at being alone. I am not at all used to it.\"\n\n \"Oh, I'm sorry, darling,\" Becky said as Mark picked Nanu up in his arms and carried her back into the room. Nanu had her arms around his neck, and seemed to be in absolute heaven, now that the two most important people in her life had returned. \"But we're back now, and we have no intention of leaving you behind again.\"\n\nNanu looked curious. \"Won't leave me behind again... are we going somewhere, mistress? Are we to leave the villa?\"\n\n\"It will take some explaining, I promise you that,\" Becky answered, nodding. \"But first, I think the three of us should fuck one another stupid all over the villa, don't you?\"\n\nNanu's face lit up at her mistress' suggestion and she nodded eagerly. \"Yes, mistress! I want to fuck you both until I cannot see or walk straight!\"\n\nBecky made a grand gesture with her hand, taking in the whole villa. \"Then you may pick where we fuck, my love. Anywhere, as much as you please. We await your pleasure.\"\n\n Nanu looked around in almost breathless excitement as Mark put her down. She didn't know where to begin, only that she wanted to fuck Mistress Aurora and Bonosus in every single area of the villa. She'd been so glum that she barely noticed how horny she was. Now the rampant feelings of lust washed over her, and her pussy was shamefully wet. She grabbed Becky's hand and pulled her excitedly along through the house.\n\n\"This way!\" she exclaimed, her eyes wide with anticipation. \"I want us to bathe and fuck!\"\n\nBecky and Mark laughed as they followed the Egyptian girl into the small antechamber in front of the sudatorium, which Mark and Becky would normally identify as a sauna. They were amazed at the speed with which Nanu had not only removed her own clothes, but also undressed the two of them. Clearly she was in great need and had no intention of waiting. She had apparently lit the fire to heat the small room earlier in the day, for her own use, and now all she had to do was scrub the three of them down before bringing them inside. With a small sponge and rough linen cloths, she did this quickly.\n\nShe then brought them into the sweat room, which was filled with steam already. Rocks in the little containment chamber over the brazier heated water and caused the steam, while small pouches of herbs hung over the rocks, and wine dripped through them to sizzle and evaporate, giving the steam a heady, aromatic quality that often left guests somewhat drunk.\n\nThe three now stretched out on the wooden benches that lined the wall, sighing and relaxing for a moment before Nanu's eagerness overtook her. She crawled on top of Becky and kissed her deeply, squirming her body down into her mistress' while they fondled one another. Mark watched on lazily, knowing that the day was young, and it was best that he conserve his strength. Keeping up with Nanu's libido was no small task, not to mention Becky's once she got going.\n\nIt wasn't long before the two girls were locked in a slippery, trembling sixty-nine, moaning as they lapped at one another's slits and fingered each other's puckered knots. Nanu came so hard she almost shrieked inside Becky's pussy, while the blonde goddess shuddered and speared her tongue deep inside her lover as she came, glazing Nanu's face with her cum.\n\nBoth girls seemed almost to become puddles, sighing languidly as they lay together, bodies shining with sweat. Through the haze of steam, Mark could see them kissing one another's pussies gently, and the look on Nanu's face could only be described as rapture, mixed with a sense of relief and contentment. She was so happy her mistress had come back to her.\n\nBut Nanu recovered quickly, turning her head to look at her fellow 'slave', whom she knew as Bonosus. Mark was lying on his side on the bench he occupied, idly stroking his cock. Nanu had already focused on his manhood like an arrow, and managed to extricate herself from Becky without disturbing her mistress' bliss, and crawled across the tile floor on all fours, her hazel eyes glinting.\n\nWithout waiting, she knelt next to him, moved Mark's hand aside, and took his member into her grip. She began stroking slowly and gently, before leaning in to kiss the swelling tool lovingly. She swirled her tongue around the head, then up and down the hardening shaft several times, her hand following her tongue. Then she popped her mouth around the head and slowly pushed down, humming as she moved wetly down his length. Mark sighed in pleasure and began running his hand through her raven hair.\n\nBecky now watched, caressing her creamy pussy as she gazed over at the lovers. Mark was half on his back, half on his side, while Nanu was kneeling on the floor, bent over and bobbing up and down on his stiff cock. Her tiny hand made a gentle twisting motion on the smooth skin of his shaft, following her warm, wet mouth. Becky smiled, knowing how great it was to give her student head, since she'd done it countless times herself now. Things would be so much easier for them all when she finally caught up with him in the timeline.\n\nMark stroked down Nanu's back and reached her ass, giving one of the tight, perk cheeks a squeeze before nudging her. Nanu took the hint readily and stood up, clambering over Mark's face and looking down his body. The bench wouldn't have been big enough for Mark and Becky to do what was now happening, but Nanu was considerably smaller than Becky, and somehow managed. She leaned down his body, crying out suddenly as Mark pulled her ass cheeks apart and slid his tongue around her gooey pussy. She trembled and squirmed for several moments before composing herself and returning to the task of sucking on his cock hungrily. He was at full mast now, and Nanu's tiny hand could hardly fit around the girth of his shaft. Amazingly, though, she could take his manhood all the way inside her mouth, and down her throat readily. Becky's slave was as gifted as she was shameless, clearly.\n\nNanu grunted as Mark slid one of his fingers inside her ass. Mark had larger hands than most people from her home era, and his finger was larger than some dicks she'd had back there before. Or at least, it certainly felt that way at the moment. She accepted the intrusion willingly, squirming back against his hand, and squeezing her tight tunnel around it while he massaged her pussy and clit with her tongue. She let out little moans, still bobbing up and down while giving Becky a sidelong look with heavily lidded, glazed eyes.\n\nDetermined to not be left out, Becky slowly rose from her bench and wiggled over across the small area. She observed the setting with a critical eye for several moments, working out the logistics of how to best fit into this carnal puzzle. Just like she could not readily engage in a sixty-nine with Mark on these relatively (to them) narrow benches, she could not straddle him and fuck him to proper effect either.\n\nThe answer presented itself quickly. She eased Nanu up into a sitting position over Mark's face, and if the slave girl was disappointed in having to relinquish that delicious cock, the feeling quickly gave way to yelps of delight as she sank her pussy even further down onto Mark's tongue, squirming and grinding lustily.\n\nBecky pumped and stroked Mark's cock steadily for several seconds, making sure he would stay hard. He was lying down the length of the bench, his tool ramrod-erect for her. She then stood and moved over his midsection, facing out into the tiny chamber. She bent her knees and reached under, steadying his throbbing member while she guided it to her pussylips. One she had him in place, she slowly sat down, sighing as he pushed up inside her steaming depths. Her ass come to rest on his hips, while she sat sideways on him, pinned to his cock. She closed her eyes and just savoured the sensation for several seconds, her fingers flexing against his stomach and his knee, respectively.",
        "She finally opened her blue eyes and turned her head to smile at Nanu, who was moving up and down slowly on Mark's tireless tongue. Becky leaned in toward the slave, who immediately moved her torso forward to meet Becky. They kissed over Mark's long form, tongues tangling while Becky began to move up and down slowly, loving the feel of this unique position with him deep inside her.\n\nThe threesome slowly squirmed and undulated against one another, time lost within the confines of the tiny, steaming chamber. The dim, amber light of the fire beneath the heated stones was their only illumination, but in this misty, ethereal sitting, it was utter perfection. The scent of spiced wine mingled with the aromas of bodies making love. Becky could taste the wine in Nanu's sweat as she drew her tongue along the girl's collarbone and over her breasts.\n\n\"I think it's about time for you to fuck Nanu and cum in her, Mark,\" Becky panted after several minutes of churning up and down on his thick rod. She was massaging and groping her breasts, or Nanu's as she rode. The Egyptian girl had reached forward and was massaging her mistress' pussy dutifully as well. \"It's been a few weeks for her, and you just filled me up this morning.\"\n\n\"Relatively speaking,\" Mark quipped from beneath Nanu's writhing hips. \"You sit on the bench and spread 'em, Becks, and she can kneel and lick you. I'll get behind her.\"\n\nBecky had no problem with this plan, and quickly coaxed Nanu off Mark's face, to kneel on the floor in front of her. Nanu's eyes widened with delight as Becky smiled and parted her legs, before reaching down with two fingers to spread her thick netherlips wide, exposing her glistening inner pink to the slave girl. Nanu practically dived in, and Becky grunted and almost jumped, clasping the girl's head suddenly, her feet leaving the floor.\n\n\"Nnnnnnnn, fuuuuuuck!\" she wheezed as Nanu began lapping at her like she was eating her last meal before she died. Her fingers gripped Nanu's black hair while she began grinding her womanhood against the girl's face desperately. Nanu licked cunt like nobody's business.\n\nMark, meanwhile, had positioned himself behind Nanu, and lined his cock up with her dripping slit, holding her by the ass cheeks. Nanu trembled while he slid his cockhead up and down her slippery lips, and against her tingling clit, making her squeak and whimper into Becky's pussy. He braced her for only the briefest of moments before sliding inside her without any warning, sinking in to the hilt. The Egyptian slave-girl wailed in ecstasy as he forced her wide, pinning her to him.\n\nMark began fucking Nanu with a steady, strong pace, and she yelped into her mistress' pussy with each thrust, even while lapping at her pink slit hungrily. Her face was shining with sweat, and Becky's wetness, her tongue thick with the cloying sweetness of the blonde woman. Nanu's head was spinning in delight. Surely this was the heavenly afterlife?\n\nBecky almost curled up on herself, her fingernails threatening to leave grooves in Nanu's scalp as she shook uncontrollably and came, barely able to keep herself from screeching. She slathered Nanu's face in her essence, her entire body tingling with fire. Nanu shuddered and writhed, wailing as she came, her pussy tightening around Mark's cock fiendishly. As if on cue, Mark arched his back, gritted his teeth and growled, pumping all his cum inside Nanu, thrusting strongly.\n\nThe trio rocked and writhed in depraved unison for close to a minute before Mark leaned forward on Nanu's back, breathing heavily. Becky sighed in exhaustion, sinking down on the bench, her cunt pressing into Nanu's face. The slave girl, pinned in place between her mistress and her fellow slave, simply held still, surrounded by warm, slick flesh and gently caressing fingers. She could still feel Bonosus throbbing deep inside her, and her mistress' pussy oozed against her mouth. She felt so blessed and safe like this...\n\nBut then she looked up from between Becky's legs, her own glinting with eagerness. \"Come! I know where we need to fuck next!\"\n\nAnd with that, the Egyptian girl extricated herself from between them and wiggled quickly out of the room. Mark groaned and sagged forward between Becky's breasts, and she held onto him wearily.\n\n\"Now I know why we can't leave her for weeks on end,\" he mumbled in her cleavage. \"Because we won't survive the backlog of fucking we need to do...\"\n\n***\n\nNanu was sitting in the chair, her expression one of bewilderment. She seemed to have forgotten the goblet of wine in her hand, and she sat with her arms and legs tucked in close to her body. Clearly, she was confused and feeling uncertain about what she was hearing.\n\n\"You're... mistress, you're not a Roman at all?\" she asked quietly as she stared at Becky. They were sitting in the atrium of the villa, and it was a quiet evening. Birds sang, and a gentle breeze caressed their faces and the nearby blossoms as it dipped over the villa and into the central opening.\n\nBecky shook her head, knowing that this was going to take a lot of patience on her and Mark's part- and even more on Nanu's. Everything she was in the process of telling the girl would sound completely preposterous, even more so than Mark's explanation to his sister the day before.\n\n\"No, Nanu, I'm not a Roman of any sort,\" the blonde woman confessed, trying to smile. \"And my name is not Aurora Horatia. My name is Rebecca.\"\n\n\"Rebekah?\" Nanu queried, making a wry face. \"That is a Hebrew name.\"\n\nShe looked Becky up and down skeptically. \"You don't look like a Hebrew.\"\n\nThe slave girl looked at Mark. \"And your name is not Bonosus, and you're not a Roman either?\"\n\nHe shook his head. \"Nope. I'm Mark. And Becks is actually my teacher.\"\n\nNanu squeezed her eyes shut for several seconds and when she finally opened them, they were filled with worry. \"Are... are you going to kill me?\"\n\nDespite herself, Becky burst into giggle fits at the question. Nanu looked confused, and then slightly irked at the response from her 'mistress'. She thought it was a perfectly reasonable question, under these circumstances. She folded her arms, crossed her legs, and looked off at the sky over the far wall, annoyed.\n\n\"I'm sorry, Nanu,\" Becky said finally reining herself in. \"I wasn't laughing at you, I mean it. It just wasn't what I expected to hear at all, and we both love you too much to ever consider killing you. Hell, I'm not sure we could if we tried.\"\n\n\"Well I don't know what to believe,\" sniffed the younger girl. \"You've bought me, and taken me away from a comfortable, if not happy life, and nearly gotten me killed at least once, and then there was that... thing... that you two ride around on...\"\n\n\"The Holmes Field Device,\" Becky said, nodding. \"It doesn't just take us where we want to go, it allows us to travel through time, which is why we are here at all.\"\n\nNanu shook her head, indicating that she had no idea what Becky meant. The teacher leaned forward slightly, smiling. They weren't sitting that far apart, but she had allowed for a small amount of distance between them, so that Nanu didn't feel trapped or pressured if she took all this poorly. To be honest, she was taking it surprisingly well, even if she wasn't buying all of it.\n\n\"Nanu, I apologize for asking simple questions, but please bear with me...\" she said quietly, noticing that even if she was listening, Nanu was now staring at Becky's cleavage, framed between her arms while she sat forward. Mark was staring too. Some thing would never change. \"You understand the concepts of yesterday, today and tomorrow, yes?\"\n\nNanu nodded slowly. \"Yes, mistress.\"\n\n\"Do you ever wish you could visit days that have gone by?\" Becky asked. \"Like maybe go back and visit your childhood, or meet some member of your family who was lost years ago? Or even see the Sphinx getting built?\"\n\nThe girl looked confused again. \"Suh-finx?\"\n\nBecky looked at Mark, hoping for some help. He still had the chip that let him speak Egyptian in his head. He pondered the issue for a moment before the tiny computer in his noggin gave him the answer. He looked at Nanu and smiled. \"Horemakhet.\"\n\nNanu's eyes went wide. To see the Horus of the Western Horizon being built by the gods...\n\nShe shook her head. \"What you say is impossible!\"\n\nBecky smiled now, not blaming Nunu for her disbelief. \"Nanu, a long time ago, people would have thought that chariots were impossible, that mastering fire and steel were impossible. But you know they're not just possible, you know that these things are fact.\"\n\n Nanu nodded, willing to listen to her beloved mistress, who apparently wasn't her mistress. But she listened.\n\n\"Mark and I come from many, many tomorrows away, a time many years from now. That device that we travel on, it allows us to do it.\"\n\nThe Egyptian girl screwed up her face, trying to understand. She thought she'd heard outlandish things in her life before, but this was so far beyond her conceptions and experience that it sounded like a ridiculous fable her grandmother would tell her. But she had stepped on the wondrous device, and it had taken them somewhere far away from Rome in the blink of an eye, and back. She could not deny this had happened, even if she didn't understand it.\n\nWhich brought up a big question for her.\n\n\"Why do you do this?\" she queried, looking at each of them.\n\nMark shrugged. \"It's fun to move through time and do things.\"\n\n Another skeptical look from Nanu. \"You think it's fun to have the gladiators of Rome try to kill you?\"\n\nMark faltered slightly. \"I... well, no, not that part.\"\n\nBecky giggled. \"No, Nanu, that part is unplanned. Mark and I like to travel to different times, to see important events, and to fuck there.\"\n\nNanu tilted her head curiously at the statement. \"What it so important about fucking in these places?\"\n\nBecky considered her answer. \"There's nothing important about it, you're right. But it's still fun. We love to do these things, because almost no one else can. And hopefully it's exciting but not dangerous. If we didn't do this, we never would have met you, and we wouldn't be fucking you now. And we both wouldn't be crazy about you.\"\n\n Nanu's stomach was in her feet as she thought about what her mis- ... what Rebekah was saying. She was horrified by the thought now that she might never have met them, they she might not have been bought, or living here, in freedom, and getting fucked to her little heart's content.\n\n\"But if you are not... not from today...\" she murmured, trying to formulate her thoughts around these strange concepts. \"Then you will keep leaving me. You might come back, but you will keep leaving.\"\n\nBecky could see the tears welling in Nanu's eyes, and she rose from her chair and moved to sit with the smaller girl, cradling her into her bosom as Nanu tried not to cry.\n\n\"Oh, Nanu, I'm sorry,\" she cooed. \"I didn't realize how hard it was for you to be alone.\"\n\n\"I've never been alone,\" sniffled the raven-haired girl, wrapping her arms around Becky's waist tightly, unwilling to let go. \"My whole life, I've never been alone for so much as a day, never mind a week. It was terrifying. I'm a slave, you know.\"\n\nBecky caressed her fingers through Nanu's hair and kissed the top of her said. \"I understand now. And I am sorry. But Mark and I wanted to talk to you about that, actually.\"\n\nNanu choked back a sob and looked up at Becky, ready to hear what she had to say.\n\n\"Mark and I want to bring you with us,\" Becky explained, using a thumb to wipe some tears from Nanu's cheek. \"Come back to our time, and perhaps take you with us on our adventures.\"\n\nNanu's eyes went wide. \"L... leave Rome?\"\n\nBecky shrugged. \"Is there anyone left for you to care about?\"\n\n\"Well, no.\" Nanu admitted.\n\n\"And as I've already told you, Mark and I are crazy about you, so since we cannot stay here in Rome with you, maybe you should come with us, Becky continued. \"I love having you around.\"\n\nNanu's face lit up at Becky's words, but then a cloud passed over her face as things occurred to her. \"But I... know nothing about this place you are from. How would I live?\"\n\n\"Well I would teach you, of course,\" Becky replied, smiling. \"And it'll probably be terrifying at first, since you will see things you cannot even imagine, but Mark and I will protect you and help you learn.\"\n\n\"I... would stay with you?\" Nanu asked in a voice begging for assurance.\n\nBecky nodded.\n\n\"You won't leave me alone?\"\n\nThe blonde woman smiled. \"Well, I might have to step out the door once in a while to go and get food, or go to my job, but I won't leave you alone for days at a time, I promise.\"\n\nNanu returned to hugging Becky, looking off at the far wall across the atrium. Her heart was pounding in her chest as she thought about what she should do...\n\nDid she take these two up on their weird offer?\n\nDid she just ask to stay here at the villa, and take her chances about when they could visit?\n\nDid she ask to be sent back to the Flavius household?\n\nEvery option terrified her.\n\nShe finally looked up at Becky again and drew a deep breath. \"Can we... fuck some more, while I think about it?\"\n\nBecky and Mark both laughed and nodded their assent. It was the most Nanu thing Nanu had ever said.\n\n***\n\nPredictably, Nanu, after much fucking and pondering, had decided to take Mark and Becky up on their offer. Delighted, Becky had declared that they would be doing some shopping first, heading into Rome to get things she wanted. Nanu was always happy to visit the city, she was always enthralled by the sights and sounds around her.\n\n\"But I... I must point out something,\" she confessed, looking uneasy. \"I know you keep saying that I need not be your slave anymore, but it is not safe for me to walk around freely, Mistress, no matter what you tell me. If you say you don't own me, I am still a slave to them. They'll put me in chains and have me on the auction block again in no time, but probably not before they do awful things to me.\"\n\n \"She has a point, Becks,\" Mark started, shrugging as he fastened his tunic in place. \"We may know slavery is immoral, but Rome doesn't give a shit. As far as they're concerned, you're still a patrician woman, and we're still your slaves.\"\n\n\"Which brings up another troublesome fact,\" Becky sighed, building on Mark's premise. \"You're the most hated individual in Rome. You defiled a Vestal Virgin...\"\n\n\"Pervert,\" Nanu said in a low voice, nudging Mark.\n\n\"You made a mockery of the legal system, and turned the Colosseum into a sexual freak show. I wouldn't be surprised if every soldier in Rome had orders to skewer you on sight.\"\n\n \"Hey, I'm not the one who dropped a giant canvas sail on the emperor's head and wiggled my tits at seventy thousand people, you know!\" Mark protested.\n\n\"Well, that part was fun,\" Becky mused, smirking, lapsing into English for a moment. \"So what do we do? I want to go shopping, but without getting you killed.\"\n\n\"Yeah, you've got a point there,\" Mark allowed, looking at the ground as he pondered the issue. Nanu looked back and forth between them as they spoke in their unintelligible gibberish. \"Well, we either need a disguise for me, so I don't look like Bonosus anymore, or we need to jump back a few days to before we arrived, and before anyone would know us.\"\n\n\"More of your time twists,\" Becky chided, holding up a finger. \"Didn't you learn?\"\n\n\"I know what you mean, but I kinda think we did that,\" Mark replied. \"Don't you remember how you said people were waving at you like they knew you already, and you thought that was weird? That maybe they'd mistaken you for someone else? It's kinda unlikely that they are mistaking you for anyone, Becks. You're as tall as most of the men, and you're like a living embodiment of Venus to them, with blonde hair.\"\n\n\"I'm afraid you may be right,\" Becky sighed, not liking the hypothesis, but forced to admit it was probably accurate. \"So we go back maybe a week before we first arrived, do our shopping, and split?\"\n\nMark turned and looked at Nanu now. \"Nanu, have you been into the city of Rome any time in the last week before you met us? Or anyone from the Flavius household?\"\n\n\"Ooh, good catch, Mark,\" Becky mentioned, nodding. \"Can't have her running into herself by accident, no matter how unlikely.\"\n\nNanu considered for a moment and then shook her head. \"No, before you arrived, it had been more than a month, I think. Master Flavius resented paying the prices they wanted in the city, he usually made us shop in Lavinium, it was cheaper.\"\n\nMark shrugged. \"We could probably do your shopping and find some fun, Becks. Then we'll plan our next move. Sound good?\"\n\nBecky removed her outfit, letting pool around her feet before sitting down in a low chair. She held out her arms, beckoning for Nanu to join her. The Egyptian girl shed her clothing, and then went to sit naked in her blonde lover's lap, their lovely breasts squashing together. They kissed for some moments before Becky smiled at Nanu.\n\n\"I want to buy you some outfits, Nanu, outfits like I wear. Would you like to dress and look like mistress?\"\n\nIt seemed as though Nanu might faint. Becky was also pretty sure she felt the girl getting wet. She giggled and kissed Nanu's nose. \"I'll take that as a yes.\"\n\n***\n\nRome...\n\nThe litter glided through the crowded street, with people dutifully making way for it; whomever was inside was clearly important. The four dark-skinned slaves bearing it on their shoulders walked along silently, seemingly not bothered by the weight within. The litter itself was simple in design, but ornate in appearance, the canopy held aloft on carved poles, and much of it decorated with gold leaf or edging. Diaphanous curtains on all sides obscured the women within.\n\nBecky and Nanu lay on their sides, facing in toward one another. Nanu was wearing a beautiful stola, just like Becky, and she gazed down at her raiment in wonder, running a hand delicately over the fabric. Becky smiled as she watched the Egyptian girl while reaching into a bowl between them and putting a grape in her mouth.\n\n\"Mistress, this is wonderful,\" Nanu whispered, knowing to not refer to Becky as her mistress too loudly. \"I've never felt anything like this in my life, except on someone else.\"\n\n\"Well, it's yours, and yours alone, so enjoy it,\" Becky said cheerfully, enjoying Nanu's elation. She put another grape between her teeth and smiled slyly. Nanu leaned in and took the grape between her own teeth, their lips touching. As Nanu masticated on the grape, Becky opened the gauze-like drapes in the back if the litter and called out gently. \"How we doing back there, Mark?\"\n\n\"Oh, just fine, thanks so very much for asking,\" muttered the student-slave, who trudged along behind the litter, carrying several handbags made of linen and animal skins, filled with shopping goods. His hands and shoulders ached. How the Hell could Becky purchase so much shit in an era that didn't have electronics? \"How much farther we got?\"\n\n\"Not too much longer, I think,\" mused the blonde teacher casually. She wasn't too worried about Mark having to carry stuff, he'd been through worse recently. She'd bought outfits and jewelry, pretty house furnishings, and other curios to take home. She considered what she'd need to buy for Nanu upon their return. Clothes aside, she would somehow need to procure ID for her, some sorts of medical records, and so forth.",
        "How did she get any of that done?\n\n\"Will I like my new life, mistress?\" Nanu asked, eating another grape. \"I am sure I will love living with you, but...\"\n\nBecky smiled and caressed her face lovingly. \"It will be very, very different, Nanu. And at times it will seem frightening. But there are so many things I cannot wait to show you.\"\n\n \"Then I will wait and trust you,\" the Egyptian girl said softly, giving herself over to her mistress' care fully in her mind. \"Because I believe you when you say you love me and want the best for me.\"\n\nNanu was silent for some time, as if deep in thought.\n\n\"What's on your mind, darling?\" Becky asked, curious.\n\nNanu sighed. \"I just miss my family. I have not seen them since I was young. And I dreamed of returning to them one day.\"\n\nBecky smiled. \"Oh, you want to be a free woman, of course.\"\n\n\"It is a nice dream,\" Nanu admitted. \"I dreamed of returning to them free of my chains, wearing fine clothes, and heaped with wealth. I think every slave wishes it were so.\"\n\n\"Well, we could go visit them,\" Becky suggested after a moment of thought. \"Would you like that?\"\n\nNanu blushed. \"On your wondrous device. Oh, mistress, what would I tell them? What would I have to show them? I am still a slave, and they sold me along time ago. They have no doubt forgotten me.\"\n\nBecky shrugged. \"Possibly. So, do you want to go? It can be on our way, if you like. Anywhere on earth is technically on our way with that machine.\"\n\nThe Egyptian girl giggled. \"If you say so, mistress.\"\n\n\"We'll discuss what to do about it when we're done here in Rome,\" Becky assured her, smiling. \"I've always wanted to visit a Roman bath, not to mention a few other locations...\"\n\n***\n\nThe Baths of Trajan...\n\nBecky marvelled as she looked around, sitting naked on the stone chair with a small cushion under her butt. Behind her, a young girl massaged her shoulders and relaxed her muscles before she began pouring water over Becky's body, washing the massage oils off her flawless skin. She then wiped down the tall, blonde woman with linen and took her hand to help her stand up, and then step down into the heated pool in front of her.\n\n\"Is there anything else I can do for you, mistress?\" the girl asked. Becky shook her head lazily and waved her away, but whispered for the girl to find her later, so that Becky could give her some money. The girl nodded and hurried off.\n\nShe sighed and settled into the water, relaxing, her neck and head resting on the small cushion she'd brought. The water was hot, and there were not many visitors in the place just yet. They seemed to have picked a good time for a quiet visit. She looked around, noting that men and women conversed casually as they sat in the water, some of them getting rather intimate. Good.\n\nHistory had a lot of conflicting reports about Roman bath houses, and whether they allowed women at all, had segregated rooms for them to bathe in, or just kept the social setting as normal as possible. Clearly, it was a question of when one visited Rome.\n\nSo what did that say about history books? Why weren't temporal travellers writing more of them? Accurate history reports would no doubt make life a lot easier. Maybe the convention was that people from the future weren't allowed to enlighten previous eras about things archaeology hadn't uncovered yet, to avoid time twists.\n\nShe glanced over at Nanu, who was sitting in a stone chair next to her, receiving a massage from a young girl, and clearly enjoying it. She kept whispering to the girl, who giggled as she massaged her exotic visitor.\n\nThen the girl poured water over Nanu, cleaning her off, and rubbing her down with linen, asking if there was anything else she might do for her. Nanu had a sly smile on her face and a glint in her eye as she made to answer.\n\n\"Nanu, would you join me, please?\" Becky interrupted.\n\nNanu and the girl both looked over at her, but then the Egyptian girl shrugged and dismissed her attendant. She clambered down into the hot water next to Becky and snuggled into her, sighing contentedly.\n\n\"You wished to see me, Aurora?\" she asked, remembering to address Becky as an equal in these circumstances, for her own safety.\n\n\"Well, I'm always wishing to see you, Nanu, but I thought I had better break up what was about to happen with you and that girl,\" Becky replied, putting an arm around her beloved friend.\n\nNanu looked at her curiously. \"She did not please you? I saw you send away your girl after her offer, I noticed. Were they not attractive?\"\n\nBecky knew she had to explain this to Nanu carefully, and that it would take time. She'd be patient and indulgent. \"It's not that they weren't attractive, Nanu, it's just that... the time Mark and I come from, one does not have those sorts of interactions and relations with young people under a certain age. It is considered immoral, and even criminal.\"\n\nNanu considered. \"That is strange to me. I had sex frequently when I was younger, and I mostly enjoyed it. True, my brother Bata abused my sister and I, but our age changed nothing about that.\"\n\n\"I know, my love,\" Becky assured her, caressing her shoulder and looking at the ceiling.\n\nNanu continued her reasoning. \"Besides, those girls, they're slaves, like me. They have no rights, including to their bodies. If it's legal, how can it be immoral?\"\n\n Becky smiled, knowing that educating Nanu in modern ethics was going to be at least as tough as teaching her what the heck time travel was. She'd take all the time Nanu needed. \"The time and place Mark and I come from, children and young people are protected from adults using them for sexual purposes. It is a great ethical point in our society.\"\n\nNanu made a wry face as she glanced at Becky. \"But... adults are better at sex than younger people. Adults always made me cum harder than my age-mates. Why would I settle for less, even if I had a choice?\"\n\nBecky closed her eyes, trying to answer succinctly and with reasonable fact, not just to blurt out 'because that's the way it is!'. After all, Nanu wasn't intruding on her world and lifestyle, was she? How could Becky explain that a society Nanu had no way of imagining was convinced that her own era was corrupt and simply wrong about sexuality?\n\n\"And besides,\" Nanu reasoned, as if reading her mind. \"You're here in my time, yes? Shouldn't you be beholden to my society's strictures?\"\n\nBecky couldn't readily argue that point. She also had to admit, there were no doubt countless temporal travellers who went back in time specifically to take advantage of such ethics and codes of conduct, barred in their own era. She'd read about people from Germany in the Seventies and Eighties, mostly men, who would flay to southern Asia to legally have sex with young people or even children. They were called 'bumsenbombers', and eventually outlawed, but it was no doubt a lot harder to manage in the time stream.\n\nBecky looked around, wondering how many of the people sharing the bath house with them were time travellers and she didn't know it. These were the fabled Baths of Trajan, at the height of the Roman Empire. She and Mark couldn't be the only visitors in the place, could they?\n\nShe remembered back to the two French girls she and Mark had fucked in the Sun King's France.\n\nThere was no point in trying to impose her own morals on Nanu or anyone else while they were here. Forget 'shouldn't', Becky didn't even know if she could, since she might timelock herself. What then?\n\nShe would simply have to follow her own moral code, and hope she was a good influence on Nanu.\n\n\"Let's come to an agreement, then,\" the blonde woman suggested. \"As long as we're here, the less I know about what you do, the better, okay?\"\n\nNanu nodded, looking up at her.\n\n\"And when we get back to my time, I'll make sure you're prepared for our moral strictures, okay?\"\n\nNanu nodded again.\n\nBecky waited, looking down at the Egyptian girl before finally raising an eye. \"Well? Aren't you going to go chase her down?\"\n\n\"You're so silly, mistress,\" Nanu purred in a whisper, so that only Becky could hear her. \"I already told you, adults are so much better at fucking. Why would I want a scrap like that when I can have you?\"\n\n\"Quite possibly the most sensible and morally upright thing I've ever heard you say, Nanu!\" Becky giggled as she pulled the smaller woman into her lap for a kiss.\n\n***\n\nBehind the Atrium Vestae...\n\nMark kept his head down as he carried a large sack of ground wheat on his back while walking through the back entrance or the ornate building. He was bringing up the rear of a conga-line of slaves who were shuttling supplies into the storage rooms of the house where the priestesses lived, and the two soldiers guarding the entrance took no notice of him.\n\nMark wondered if he had a masochistic streak to him, since he was doing something absolutely insane, coming into the domicile of the Vestal Virgins, but he wanted to test a theory. A week ago, his personal time, he'd been convicted of disgracing one of the goddess Vesta's sacred virgins, and condemned to death fighting in the Colosseum. He'd survived, miraculously, but he also hankered for revenge, for a slight Rome hadn't even technically committed against him yet.\n\nBecause the incident itself wasn't even supposed to occur until next week, local time.\n\nSo if he knew he didn't get in trouble until next week, for unknowingly fucking a Vestal virgin, then he couldn't get in trouble and executed for doing it this week, right?\n\nFollowing that logic, and since he wasn't allowed into the Baths with Nanu and Becky because he was dressed as a slave, he'd gone off to find his own amusement. Not surprisingly, he wanted to stick it to Imperial Rome, so he intended to try and fuck another Vestal. Take that, Rome! Knowingly committing a crime before I didn't even know I'm doing it!\n\nRight?\n\nHe dumped off his heavy sack in the storage room, and then began walking with the other slaves back toward the doors, bringing up the rear. At the last moment, he peeled off from the group and hid around a corner, making sure no one had noticed. Once he was sure, he began skulking around, making sure that he wasn't spied.\n\nHe'd had some earnest conversations with Domitia before leaving her in Dabana, now a priestess of Nanaya, rather than Vesta. Between their heated fucking sessions, he'd found out about her life as a virgin of Vesta, and her house. She described the expansive facility in detail, and Mark felt confident in his knowledge of the layout. He'd need it to pull this off.\n\nHe found some stairs that were seldom used, according to Domitia, and crept up form the basement level to the uppermost floor, where the virgins were housed. He reached under his arm and pressed his hand against the tiny patch in his armpit, which was pumping pheromones into his system. He was reasonably confident it was working, since he felt warmer than normal.\n\nIt might have been nerves about potentially getting caught and executed, but then he reminded himself that he couldn't possibly get executed, because he hadn't committed next week's crime yet. So if anything went wrong, it was probably going to be some timelock he hadn't accounted for, and he'd get his ass clockhammered into the horizon.\n\nWelp, too late now.\n\nHe reached the upper floor and slipped around a corner, noticing that the doors to each the personal chambers had names on them. Domitia had told him that the virgins spent a lot of time undisturbed in personal reflection when they were not performing their public duties to Rome, and they treasured their alone time.\n\nHe also remembered her talking and giggling about the personalities of each of her fellow Virgins- from the stern and dutiful Concordia, who was about as much fun as a sack of wet dog hair, to the joyous and secretly impious Aemilia, Marcia, and Licinia, all of whom whispered about their desires when no one was around. Like Domitia (until next week), they were all virgins, but knew one another very well, and yearned to indulge their desires.\n\nA small wooden plaque on one door contained the name Aemilia. Bingo!\n\nHe looked around to make sure no one had seen him, and then slipped inside the chambers, closing the door. He looked around at the sumptuous chamber, which he realized was a dressing room. He moved through it quickly, noting another room and darted inside.\n\nThe bedroom. The bed and furnishings were simple and white, but soft and comfortable.\n\nVoices...\n\nMark panicked and dashed into another room, finding out it was the bathing chamber. A large, white marble basin dominated the space, along with a small stone chair in the corner, with the hole in the middle. He looked around worriedly, and noticed several long linens hanging on pegs along the wall. Without another thought, he hurried over and hid behind them. He hoped.\n\nHe now heard women talking, discussing various duties and even some giggling. Then the door to the room opened and closed. Someone was in the room with him now. He remained as still and quiet as possible, wondering what would actually happen if he was discovered.\n\nDid temporal constraints mean he couldn't be discovered? God, he hoped so. Why was he always thinking with his dick?\n\nHe heard a sigh, and then someone entered the bathing chamber. The linens he was hiding behind concealed him (he hoped), but he could see between the long lengths of fabric to view quite a bit of the room. It wasn't long before he spied a young woman with honey-blonde hair and fair skin walking around. Unaware of his presence, she shed her ritual stola, revealing her body. It was pale and attractive, with small but pert breasts, and a cute behind. He watched as she undid the seven braids in her hair, remembering that this hairstyle was one of the hallmarks of the Vestals.\n\nShe walked over to the stone seat and sat down, sighing loudly as she peed. Mark could see her from the front now, and she did indeed seem to have a mischievous glint in her eye. Once she had finished, she stood and walked over to her marble bath, moaning in relief as she slipped into the steaming water, which came up to the level of her breasts.\n\nThe problem was, she was facing him now, keeping him stuck in place behind these damn linens. What the Hell was he supposed to do?\n\nThe girl, whom he assumed was Aemilia, used her hands to cover her body in water, taking time to pour it over her breasts, giggling as she caressed them occasionally. After some time, she also hummed as she reached down and began playing with herself. He stayed rooted to the spot in fascination as he watched her.\n\nHer head was craned back against the edge of her basin and she sighed blissfully as she fingered her pussy. Mark willed himself not to get hard. A few minutes later, she shivered and sighed again, obviously cumming. Her head fell forward, and she murmured to herself. Mark couldn't quite make out what she was saying.\n\nThen her head came up and her face gazed in his direction. He remained as still as possible, but slowly, her head tilted to one side in curiosity as she observed something.\n\nWas she smirking?\n\n\"I can see your feet, you know...\" she called out quietly.\n\nMark felt a cold chill, but also was strangely assured that she didn't begin screaming. If anything, she sounded vaguely amused. He didn't come out, but he pushed one of his hands through the linens and waved at her.\n\n\"Silly,\" she giggled, still smirking. \"You might as well come out, because all I have to do is scream if I want help. I'm not afraid of anyone stupid enough to break into the personal chambers of a devotee of the goddess.\"\n\nMark took a deep breath and walked out from beneath the linens, stopping and looking down at her, blushing at getting caught. She looked up him curiously, although she was still clearly amused, and made no attempt to cover her nudity.\n\n\"You're a slave,\" she remarked, noting his attire. \"What compelled you to hide in my room?\"\n\nWhat was the point in lying?\n\n\"I was hoping to fuck a Vestal,\" he confessed, shrugging and turning his palms to her in a gesture of honesty. \"That's the simple truth.\"\n\nShe raised an eyebrow. \"That's brazen of you. You know we're all virgins on purpose, right? We took a sacred vow.\"\n\nMark shrugged again. \"Everyone has needs and urges, even sacred virgins.\"\n\nAemelia giggled. \"I suppose that's true. But why would- excuse me, I don't know your name, slave.\"\n\n\"Bonosus.\"\n\n\"Well, then, Bonosus,\" she intoned, setting her arm on the edge of the basin and then resting her head against two fingers while she observed him, more than a little intrigued. \"What makes you think a sacred virgin of mighty Rome would want to fuck a slave, if she were indeed subject to such base desires as you describe?\"\n\n\"Well, you wouldn't need to take a vow if you weren't subject to them, would you?\" he reasoned. \"And as to why...\"\n\nHe slowly slipped off his ragged tunic, leaving him naked. Aemelia's eyes widened slightly as his cock came into view.\n\n\"Woof,\" she muttered to herself as she fixated on his limp member. \"Your father, is he Bacchus, or a satyr? Because only a god or a creature of sin should be lavished with a prong like that.\"\n\n\"Interested?\" he asked, smirking back at her. \"Because if you're not, maybe Marcia or Licinia would be willing to make use of me if you're not-\"\n\n\"Hold on, now,\" the blonde interrupted in a quiet but calm voice, holding up her hand. \"I didn't say that. All I asked was what you had to offer that a sacred virgin would be willing to compromise her vows for. And that thing makes up for a lot of sacred vows...\"\n\nShe rose slowly, the water cascading down her body. Not surprisingly, as a sacred virgin, her pussy was unshaved, but her wet hairs were rather light and sparse, the same colour as her honey hair.\n\n\"Um, you're eighteen, right?\" Mark asked, wondering for a moment.\n\nAemelia gave him a wry look, her hands moving up to her breasts. \"I am. A little more, in fact. Is that a problem? Am I too old for you to want to fuck me?\"\n\n\"No, I'm perfectly okay with you being eighteen,\" he assured her. \"Kinda counting on it, in fact.\"\n\n\"Well, that is good to hear,\" she said, allowing her hands to fall away from her breasts and exposing herself again. She seemed strangely shameless, which was no doubt quite a trick to hide in these environs. \"It'd be one thing for me to reject you, but it would be unthinkable for me to be rejected by a mere slave. And if you were indeed intent on someone younger, I would have to summon Lucia or Domi-\"\n\n\"Nope, I'm intent on you, if you're willing,\" Mark said firmly, smiling as she watched his member swelling slowly. He wasn't getting hard, but he was getting aroused, and it had the desired effect on his potential partner. Aemelia bit her lip as she watched his cock grow.\n\n\"Normally, I just pleasure myself in the bathing basin, since it is easy to hide,\" she said as she stepped out of the water and walked over toward the linens he was standing in front of, drawing close to him and smiling rather saucily. \"But to be fucked in the bathing basin would create too much noise, I fear. No, base slave, if you intend to have your way with me, it must be quick and dirty, and allow me to conceal any evidence after. You do not want to know what happens to a sacred virgin who has broken her vows of chastity.\"",
        "\"I can only imagine,\" Mark said as he took one of the linens hanging on a peg and knelt down on one knee, beginning to dry her off. She seemed amused by his attentiveness, and put one foot on his thigh, allowing him to continue. \"So, what, I should probably fuck you somewhere in here, since it's farthest from the door and least chance to be heard, right?\"\n\nAemelia nodded and pointed at the bed. \"But you cannot have me on my bed either, slave, as there will be evidence of my activities. No, I fear you will simply have to push me up against a wall and fuck me, like a common whore.\"\n\n\"Probably all we have time for,\" he pointed out, leering as he stood, towering over her and pulling her body to his and beginning to fondle her. She closed her eyes and sighed as he groped her breast and ran his other hand down her back to caress her ass.\n\n\"Gnnnn, my first man,\" she whispered, not at all flinching from his touch. If anything, she parted her legs slightly, which she reached down to stroke his hardening cock with one hand. \"Not only breaking my vows to my goddess, but the sheer indignity of losing my chastity to a lowly slave...\"\n\nHe could tell she was getting really turned on. His hand found her pussy and he slipped two fingers inside, making Aemelia moan. She was already very wet, and he couldn't find a hymen, so he would have no problem fucking her.\n\n\"You are feeling around... for my chastity,\" she breathed, opening her hazel eyes and looking up at him while he fingered her. \"It was broken many years ago, while I was riding atop of a horse to a ceremony. It was determined to be an accident, and not a symbol of the goddess' disfavour, so I was permitted to continue serving her. Now, my chaste cunt will serve you, slave. You may fuck me. But first...\"\n\nShe pulled away from him and went over to the far wall, then took hold of a small wooden peg and tapped on the wall three times in a certain rhythm, then three more. She put the peg down and then walked back to him, her eyes glinting with excitement.\n\n\"You may fuck me against the wall right there, slave...\" she whispered breathily, clearly getting eager. She stopped in front of him and waited for something. Then he heard three faint taps in a certain rhythm, which seemed to come from the wall she'd just tapped on. Without any further hesitation, she led him over to the wall she'd indicated and bent forward, exposing her ass to him while steadying herself against the wall.\n\nMark didn't wait, but simply placed his hands on her ass cheeks while standing behind her. He teased his hard cock against her wet slit before sliding the head inside. He felt her stiffen, her back arching, and then she was murmuring to herself.\n\n\"I am disgraced... I am disgraced...\"\n\nMark smiled evilly and pushed deep inside her with one long, slow stroke. Aemelia shuddered and choked, fighting the urge to cry out as he violated her. She hissed as he bottomed out in her, pushing back on her hands to take him in further. She was silent now, just trembling as she felt his cock pinning her to him. Mark then began to stroke back and forth slowly, letting her adjust to the sensation. She was indeed tight, and he was inclined to believe her claim that she was still a virgin, even if she had no hymen.\n\n\"Bonosus...\" she said in a quiet voice somewhere between a gasp and a whisper. She pushed back against him again, starting to grind her ass in circles, reveling in the sensation of a man deep inside her, committing such an extreme blasphemy against Mother Rome.\n\nThe two were thinking the same thing: Fuck Mother Rome.\n\nMark started moving faster, knowing they didn't have a lot of time. His hips began smacking against her ass, and he watched as his cock glistened, sliding back and forth in her slippery pussy.\n\n\"Gnnn, less noise, less noise!\" she rasped, waving almost frantically with one hand, her eyes squeezed shut. \"Do you want us to both be executed?!\"\n\nMark kept pumping back and forth strongly, but refrained from slamming against her. He was still more than deep enough to send her into convulsions, though, and the priestess hissed lustily, looking back at him with glazed hazel eyes.\n\n\"Make me cum,\" she panted, working herself against him rather inexpertly, but with amazing enthusiasm. \"Disgrace my body, my temple, with your cum, slave!\"\n\nMark moved faster, and felt her pussy rippling and contracting around him greedily, indicating she was not far off from orgasm. His hands pulled her ass cheeks apart, stretching her and she bit her knuckle and keened. Covered in sweat, her arm flashed out to the side, pointing at the linens hanging next to them.\n\n\"A linen!\" she gasped, her breath catching in her throat. \"Give me a linen before I scream!\"\n\nMark reached out and grabbed one of the long linen swaths off a peg and handed it to Aemelia, who hastily shoved as much as she could into her mouth, right before her body contorted and was wracked by orgasm. She screamed in ecstasy, the linen muffling the otherwise piercing sound magnificently. Her pussy clutched his cock fiendishly, and Mark stifled a loud groan as he began to cum deep inside her.\n\nThey ground and squirmed against one another heatedly as he filled her with his pearly essence, and he could feel her cum slathering his thighs. Finally, she sagged, leaning against the wall to keep herself up while removing the linen from her mouth so she could breathe heavily. Some moments later, she eased herself forward, off his throbbing cock, gasping as it popped out of her. She turned around, leaning back against the wall and pulled Mark to her, pressing her mouth against his and kissing him deeply. She may have been a virgin, but she certainly knew how to kiss.\n\nThen again, if it was just her and a few other young women living here, that was probably to be expected.\n\n\"This, slave,\" she whispered breathily, looking up into his eyes while she reached down and massaged his sticky, still oozing cock. \"This has now been in the most sacred of cunts, a sacred temple, defiled by your base desires. Do you know what an honour you've had?\"\n\n\"I can guess,\" Mark replied, using his body to pin her to the wall and pushing back inside her again. Aemelia shuddered and groaned, going up on her toes and clasping him. \"You glad I defiled your temple?\"\n\n\"Yes, but we need to get you out of here,\" she managed to say, gently pushing him back so that he fell out of her. She knelt and kisses his member while picking up the linen she'd stuffed into her mouth, and cleaned him off with it. She then hurried over to the pegs on another wall and slipped on a simple white robe, tying it shut. She was flushed, but obviously jubilant. She helped him get back into his slave tunic.\n\n\"Well, I can strike that off my bucket list,\" Mark mused to himself in English, smirking.\n\n\"What did you say?\" Aemelia asked, looking up at him as she tied the cord around his waist.\n\n\"Oh, I was just thinking that at least I can count on you to not brag about this,\" he said somewhat hastily. \"Probably not many people you wanna tell.\"\n\n\"True, there's really only Licinia and Marcia I would tell, because they are like-minded to myself. I would tell Domitia, since I suspect she has at least as licentious a heart as any of us, but dare not, because she is impulsive, and not prone to subtlety.\"\n\n\"No shit...\" Mark muttered as she finished helping him dress. \"So now what? How do we get me out of here?\"\n\n\"There's a secret passage you can use at the end of this hallway. It'll take you down to the basement level again, and out though a garden. Be vigilant, but you should be safe. Take a sack of supplies out into the streets, so that it looks like you're on an errand. It'll help you avoid scrutiny.\"\n\nShe led him through her apartment and opened the door to poke her head out into the hall, looking both ways. She then took his hand and pulled him out, hurrying down to the end of the hall and then pointing at a large plaster lavabo that dominated the wall. He used his fingers to pry it open like a door, which led into a dark stairwell.\n\nHe was about to step into the stairwell when she took him by the hem of his tunic and pulled him back to her, kissing him deeply and passionately for several seconds before pushing him back through the aperture and then closing the door behind him.\n\nAemelia leaned back against the ornate plaster lavabo and sighed, looking at the ceiling. She laid and hand on her breast, stood up, straightened her robe out, and then walked down the hall, attempting to look dignified. Thankfully, servants and the priestess' minders rarely came to this floor except at designated hours. She stopped in front of the door of the apartment next to hers, which had a plaque that read 'Licinia' and rapped on the door softly.\n\nThe door opened and she was pulled inside by her wrist. The door had barely closed before she and another, younger priestess were kissing one another feverishly, hands wandering over each other's bodies.\n\n\"Thank you for letting me watch,\" Licinia murmured as her tongue tangled with Aemelia's. \"I am so jealous that you got to fuck first, even if it was just a slave. But what a cock he had on him.\"\n\n\"I know, and it was everything we had hoped it would be, sister,\" Aemelia breathed, breaking the kiss and pulling her sister-priestess' bedchamber robe off. \"If only it could have lasted longer. But for now...\"\n\nShe shed her own robe and leaned back against the wall, tilting her hips forward and using two fingers to spread her thick pussylips wide. \"You need to suck his cum out of my cunt while you can...\"\n\n***\n\nMark's back was getting slightly sore from carting around sacks in order to get places without being stopped and questioned. He humped several cords of wood into the rear entrance of the Trajan Baths, sighing heavily as he dumped them down near other piles meant to heat the pools, and then went in search of Becky and Nanu.\n\nHe heard them before he saw them, not surprisingly; he followed the telltale noises toward a smaller, more private bath chamber away from the main rooms. He paused in the door of the room, grinning and leaning against the entranceway while he just watched.\n\nIn the shallow water, Becky and Nanu were sitting facing into one another, legs scissored and pussies pressed together. They panted and moaned as they slithered and ground against each other, resting back on one hand in the cool water, and gripping each other's arms with the second.\n\nThey strained against one another, backs arching and their behinds out of the water, eyes squeezed shut and teeth clenched. They both keened loudly before the dam broke. Sighing and moaning shamelessly, they squirmed and writhed, bathing each other's pussy in frothy cum. They girl-fucked one another hard, cumming for a long period before finally relaxing and settling into a squishy embrace, breasts and pussies pressed together as they kissed lovingly.\n\nMark finally came into the room, noticing that two young attendants were waiting in corners, linens ready. He shed his tunic and stepped down into the shallow pool, joining them. Becky broke the kiss to smile at him lewdly.\n\n\"Well, hey, handsome,\" she purred, reaching over to stroke his cock, noticing it was recently used. \"What did you get up to while Nanu and I were enjoying ourselves?\"\n\nHe was kneeling next to them, rotating his neck. \"Might've used our loop to get revenge on the city for trying to kill me next week,\" he mentioned. \"Found a certain temple, might've fucked a priestess...\"\n\nBecky shook her head. \"I swear, you're terrible at time theory, unless it involves doing something heinous, Mark. You are a menace.\"\n\n\"Yeah, but you love it,\" he pointed out, grinning and reaching into caress one of her breasts, his other hand fondling Nanu's. \"Admit it.\"\n\n\"I admit to nothing, young man,\" she purred, loving how his hand felt on her while she continued to stroke his member. \"Nanu asked if we could visit her family, see if they're okay. She hasn't seen them for a decade now.\"\n\n\"I'm all right with that,\" Mark answered, shrugging. \"We should give 'em money, too, improve their lot in life. Sounds like Egyptian peasants in the Roman era don't have a lot goin' for 'em.\"\n\nBecky smiled slyly. \"Now that you mention it...\"\n\n***\n\nAkhmim, in a corner of the former Lower Kingdom...\n\nIt was the time of year where the mighty Iteru was to have overflowed its banks and then receded, leaving the land gloriously fertile, and ready for the people to grow their crops and sell their goods to the merchants in the cities. But this year, the great god Hap'i had withheld his bounty, and the river had barely breached its banks. The land was dry, and crops scarce. People had been bringing muddy water from the edges of the river in buckets in a desperate attempt to fertilize their fields.\n\nKiya sighed glumly as she tilled a shallow trench in the woefully dry soil on their farm. A wind blew across the field, and she was depressed to see that it carried reddish dust with it. She was the youngest remaining child, and she did the least skilled work as a result. She despaired of ever being married, since her parents could not afford to lose her.\n\nYears ago, they had sold their youngest daughter, in the hopes of getting enough money to improve the farm, with new tools and maybe some irrigation equipment, but they'd been had, and the materials and tools they'd bought were junk. It had cost them all the money they'd made in selling their child, and now they had less than ever. They barely subsisted even in the bountiful years, and during droughts like this, it could be deadly. Other farms were empty, due to death or abandonment.\n\nShe stopped for a moment and leaned on the rickety hoe she was using, squeezing her eyes shut and stifling a sob. She missed her little sister. Yes, Nanu had only been a year younger than her, but she'd been a joy in Kiya's young life, and they were very close to one another. Kiya loved little Nanu, and then one day, she was gone.\n\nAs she opened her eyes and looked out over the dusty field at the long, thin rows of trenches, she wondered if Hap'i was punishing them for selling her little sister. Kiya wouldn't have blamed the god; she remembered being angry too, and she hadn't talked to her parents for days. Her older siblings, especially Aneksi and Joba, her eldest sister and brother, had loudly declared that it was a good thing to do, since it was one less mouth to feed, and Nanu had been useless for chores anyway.\n\nShe was six years old when we sold her! Kiya thought angrily to herself as she glared at the barren field. What did you think she was going to be able to do?!\n\nShe heard a horn call and looked down at the distant river dully- she could see an ornate boat sailing downstream, being punted by dark-skinned Nubian slaves, the huffer standing at the bow waving for less important ships to move aside.\n\nNobles, she grumbled to herself sourly. Probably on their way to Memphis to eat splendid food, and meet with their Roman friends.\n\nSplendid food. She'd almost forgotten what anything other than bread or little bits of fish tasted like. And the drought made even bread scarce, while fish were dangerous to try to catch, because of the hippos and crocodiles that crowded the river. In years like this, the crocodile demons were especially aggressive.\n\nMovement caught her eye, and she saw a palanquin coming up the banks on the small, dusty road. It wasn't even a road, really, so much as a failed ditch that had been meant for irrigation of the nearby farms. Slaves carried the palanquin on their shoulders, and diaphanous curtains concealed who sat within. A tall, light-skinned slave walking with a tall stick led the way. Just behind him came a woman riding a mule, a cloak wrapped around her upper body to protect her from the dusty wind.\n\nThey seemed to be coming this way.\n\nWhy are they headed this way? Kiya wondered with a frown. What could they possibly want here in dusty little Akhmim?\n\nShe stood up and began walking toward the palanquin as it drew closer, her hoe held casually in her right hand: unthreatening, but ready in case their intentions were malign. She could see now that the male slave leading the way was rugged and handsome, with brown hair and deep eyes. Behind him, she woman on the horse, whom she assumed was still a slave, seemed rather pretty beneath her swathes of dark grey linen and fabrics.\n\nWere her eyes... blue?\n\nShe glanced over at her ramshackle house that she, her siblings, her parents and grandparents lived in. No one else seemed to have noticed yet, or were too far away to see. Clearly this would be up to Kiya for now. So how should she react?\n\nShe played it safe and got down on both knees, bowing her head and looking at the reddish-brown ground beneath her. It was hot on her knees. She hoped this wouldn't take long, for she had to get back to the trenches, so that the other could pour their meagre water and begin to plant seeds.\n\nKiya waited quietly.\n\n\"I always did like seeing you on your knees, Ki...\" she heard a sweet, girly voice say.\n\nHer head flicked up and she looked at the source of the voice- she could see a beautiful face leaning out between the curtains of the palanquin and smirking at her. Kiya's eyes widened and her jaw opened as the young woman slid down out of the palanquin and began walking toward her. She was wearing shimmering white clothes that hugged her lovely figure, and her hazel eyes danced in excitement. She was wearing gleaming gold jewelry, adorned with lapis and other gems.\n\nShe was radiant, like a goddess.\n\n\"N... Nanu?\" Kiya asked in a tiny, incredulous voice.\n\nThe vision of her long-lost sister nodded, still smiling.\n\n\"NANU!!!\" shrieked the older girl, dropping the hoe and launching herself forward into a crushing hug with her sister. She'd burst into tears by the time she reached Nanu, and the younger sister was crying as well while they embraced.\n\nMark and Becky looked on, smiling as the sisters were reunited, crying together. True, Nanu's sister (the one named Kiya, they assumed) was getting dust all over Nanu's immaculate clothing, but it didn't matter. There were plenty of new outfits for her anyway.\n\nKiya began planting tear-wet kisses all over Nanu's face, almost as if they were a method of making sure she was real. The weeping Nanu returned the kisses. Mark's head began tilting slowly on an angle as he watched, because the kisses were becoming slower, and seemingly more meaningful and... affectionate.\n\n\"Well, now...\" Becky said as she watched intently. \"Hellooooo, ancient Egypt.\"\n\nNanu and Kiya were now absorbed in a very deep kiss, holding one another tight. Mark could see their tongues rolling around the insides of their cheeks. The whimpers of crying had given way to muffled moans while their hands wandered up each other's backs and came to rest on their ass cheeks. Still they kissed one another almost hungrily.\n\nMark leaned in closer to Becky and whispered to her. \"I get the feeling they really missed each other.\"\n\n The sisters finally broke the kiss, more for needing oxygen than any other consideration. They pressed their foreheads together, panting heavily as they stared into one another's eyes. Their lips were still glistening from the kiss they'd shared. Nearly a minute had passed before Kiya pulled her head back and looked at her little sister in renewed wonderment.\n\n\"Nanu...\" she managed to say. \"How... what are you...\"",
        "\"Do you like it?\" chimed Nanu, stepping back just far enough to do a twirl and display her raiment. The gold she wore on her neck, arms and ankles tinkled almost musically. \"I have lots more.\"\n\n\"We... mom and dad sold you...\" Kiya said, still gaping. \"They... they sold you as a slave. What miracle of the gods is this?\"\n\n\"Oh, the best kind,\" the younger girl quipped, giggling. \"But I don't wanna explain this ten times, so why don't you get everyone over here? I'll have my slaves set up a shelter for us all to sit under.\"\n\nKiya will still bordering on confused, but she nodded and turned to race back toward the hut, calling out loudly for people. Nanu watched her for a few moments before turning to look at Mark and Becky and smiling.\n\n\"You two sure missed each other,\" Mark observed, grinning, while Becky fanned herself.\n\nNanu gave Mark a snarky look and stuck out her tongue. \"We were best friends, Kiya and I, we only had each other, really. And then I was gone for ten years. Is it really so surprising that we can pick up where we left off?\" \n\n\"Nah, just some culture shock is all,\" Mark chuckled as he laid down the packs he was carrying and then began unslinging others from the side of the mule Becky sat on, and the palanquin. \"Shall I set up the shelter, your majesty?\"\n\nNanu giggled. \"I could get used to that. Please!\"\n\nThe porters placed the palanquin on the ground, and began helping Mark set up the shelter. Along with their pay, they'd been promised good food and wine, so they were more than willing to put in great effort. Mere minutes had passed before a shelter was set up on sturdy poles, with curtains that could be fastened to the sides to keep out the dust and wind. Nanu crawled back inside the palanquin while Becky waited just outside.\n\nBefore long, a group of people was approaching, being led by an eager Kiya. She kept badgering everyone to hurry up, and several seemed more than a little annoyed at her harrying them. They were of various ages, and all dressed similarly to Kiya, in the common wear of Egypt's teeming peasantry. Becky glanced subtly to the side, to look at Nanu. The young Egyptian woman was staring at the approaching throng, her eyes glassy, and she bit her lip to keep from crying. She didn't want to be crying when her family saw her again.\n\nBecky drew the curtains closed to give her some time to compose herself. She then stood and waited patiently while everyone approached. They were a rough lot, clearly hardened by a life of toil on one of the endless farms that lined the Nile. There were young men and women, some children who belonged to what she assumed were couples, and some elders labouring to bring up the rear.\n\nThe crowd stopped near the shelter, and looked at the visitors silently. Becky nodded to them all said then spoke in a clear voice. \"Do any of you speak the tongue of Rome?\"\n\nSilence and blank stares greeted her. Unimpressed, she turned and called back. \"Mark, none of them speak Latin, I need you.\"\n\n\"Not the last time I'll ever hear you say that,\" he chuckled as he joined her. She gave him a sour look and swatted his arm. He ignored the assault and called out to everyone. \"Has Kiya told you what we're doing here?\"\n\nMany of the people shook their heads, but still didn't say anything. Mark gave Becky a sidelong glance, and the blonde woman went back to the palanquin, knelt, and pulled aside the curtain. She helped an elegant woman in white out of the vehicle, and she walked forward, holding a gauzy white veil over her head to conceal her features. She approached the group, and an older man finally pushed to the front and addressed her humbly.\n\n\"How can this humble family serve you, mistress?\" he asked.\n\nNanu now pulled the veil over her head, letting them take a good look at her. Kiya looked like she was almost ready to burst. Several faces remained blank for quite some time, but others began to express shock as recognition set in.\n\n\"Nanu?\" asked the man in a quavering voice.\n\n\"Yeah, it's me, dad,\" she said, her eyes shining again. \"I'm home for a visit.\"\n\n\"NANU!\" an older woman blurted as she forced her way through the crowd and dashed forward. Nanu quit trying not to cry as she embraced her mother for the first time in more than a decade. Becky pressed her fingers to her lips as she watched and tried not to tear up. Mark just grinned.\n\n\"Mommy,\" Nanu choked as she held the other woman tight. \"I've missed you so much!\"\n\n\"How is this possible?\" her father asked, sinking to his knees. \"We... I had to sell you, to those Romans, in order to make enough money to-\"\n\n\"The Flavians in Clysma, yes,\" Nanu affirmed, looking over her mother's shoulder and nodding while the elder woman wept. \"And they sent me to Rome, once they discovered I could dance.\"\n\n\"You always were a good little dancer!\" Kiya gushed, almost bouncing up and down on the spot. Many of the other members of the family were drawing closer now, still gazing in wonder.\n\nHer father seemed to be going pale and trembling, though. \"Are... are you sent back as a glorious spirit, to punish me for selling my beautiful daughter? Have mercy on me, I-\"\n\n\"Dad, stop being so dramatic,\" Nanu almost complained as she let go of her mother and walked toward him. She hauled him to his feet and placed her tiny hands in his, letting him feel them. \"See? I'm still flesh and blood, not a stupid spirit. I'm not a Flavian slave anymore, either. I'm wealthy and I have my own slaves.\"\n\n They all looked at Mark and Becky now. Becky pulled down the fabric around her head, and many of them gasped as her golden blonde hair and sea-blue eyes came into full view. They'd never seen anyone like her before. These were Nanu's slaves?\n\nHer father shook his head slowly. \"I still do not understand. How did this happen?\"\n\n\"Who cares?\" someone groused from the back of the crowd in a gruff, male voice. Nanu knew it right away, and looked up sourly. The crowd parted to let the speaker come forward.\n\nIt was her eldest brother, Bata, and he was the second eldest of the siblings after Meritites, Nanu's big sister. He'd always been something of a bully toward her. More than something, actually. Nanu and Kiya both had unpleasant memories of the older boy.\n\n\"We sold you for money, and what good did it do us?\" the young man sneered, moving forward now. Nanu took half a step back, clearly intimidated. \"The tools we bought were shit, and we're struggling harder than ever. You can't even be sold without fucking things up for your fa-\"\n\n Mark had lunged in and slammed his fist across Bata's jaw, sending him spinning to the ground. Everyone except Becky gasped, and one sister cried out in fright. Mark stood over the downed boy, glowering at him. Bata was holding his jaw, his eyes wide in shock. He could taste blood.\n\n\"Got anything else to say about my mistress, shitbag?\" Mark challenged.\n\nBata glared at Mark before his gaze flicked over to the axe he'd dropped when he got punched.\n\n\"Oh, please try that, I dare you,\", Mark growled, unmoved by the perceived threat. \"I'll shove that axe handle so far up your ass that you'll have splinters in your tongue for a month.\"\n\nBata looked away, unable to endure Mark's glare. The younger man stepped back and let Nanu's brother get to his feet. Bata grabbed a woman by the wrist and stomped off, dragging her behind. Several of Nanu's siblings sighed and were visibly relieved. Mark then stepped back and let Nanu take over again.\n\nThe Egyptian girl, still a little rattled, took a deep breath, composing herself. She then spoke to her family again. \"I'm sorry. I thought I'd never see you again. I thought I'd die, far from home, never to return. I... I want to make sure that mom and dad never have to do anything like that again for our family's survival.\"\n\nNanu brought her mother back to the family and helped her father stand. They were murmuring to one another and hugged, while people began crying. Several men and women watched on, some passively, some with curiosity. Mark assumed these were spouses who had married into the family since Nanu's departure some ten years ago.\n\nNanu was hugging her oldest sister, Meritites, and sharing kisses with her, although not quite as affectionate as those she'd shared with Kiya. She then hugged and kissed her other siblings- Djoser, Ameny, Khafra, Nefer, Tiaa, Horemheb, Jobra, Anpu, and Senet.\n\nJeebus, Becky thought, trying not to frown as she looked at the mother, whose name was apparently Pypuy. Twelve kids? How did her uterus not just fall right out?\n\n Nanu's father, Akhom, still seemed overwhelmed, but maybe that was understandable. He had, after all, clearly made an agonizing decision and it seemed to be revisiting him, even if the circumstances were joyous for everyone else. Nanu had explained to Mark and Becky that selling children into slavery in order for a poor family to survive was not uncommon in Egypt, but clearly it was still painful for all involved.\n\nFinally, the greetings ended, and Nanu, with her eyes still glistening, smiled at her family. \"Let's eat, I brought lots of food.\"\n\nThe shelter Mark and the slaves had erected was large enough to conceal everyone from the sun. They ate bread, figs, fish, and wine. Kiya excused herself and ran back to the house. Even Nanu's father seemed to have adjusted and was now enjoying himself. More than anything, though, there were endless questions.\n\n\"I got lucky,\" Nanu said simply. \"I know it seems impossible, but look at me. What more proof do you need? I am wealthy now, and not a slave. I came home to let you know, and also to give you money, so that you no longer need to struggle. You will live very comfortably. You could probably even retire from the farm and move into a town or city if you wanted to.\"\n\n\"You're not coming with us?\" her sister Tiaa asked, looking rather upset. \"We just got you back, and you've been gone so long.\"\n\nNanu looked down at the ground, going silent, wondering what to say. She felt very torn. Here she was, back with the family she'd missed her entire life, and giving them money, but beyond that, she had nothing to back it up- Mistress Aurora and Bonosus, or whatever their real names happened to be, were not her slaves. She had no talents that made her a patrician. She could barely read.\n\nShe'd come here, so secure in her plan to see her family, alleviate any suffering they were enduring, and then go off on this grand adventure with her new beloved associates. They'd even told her she might be able to see her family again.\n\nBut now, in this dingy but so comforting environment...\n\nShe looked up and saw Kiya approaching again, carrying something in her arms. Everyone let her through, and she knelt next to Nanu, smiling. Nanu's eyes went wide.\n\nKiya gently passed her the baby. It couldn't have been more than a year old.\n\n\"Her name is Nanu,\" Kiya said softly, her brown eyes shining. \"Named after the little sister I thought I'd lost forever.\"\n\nNanu looked up and her eyes were glassy with wonder. \"Who is her father?\"\n\nKiya smiled sadly. \"The river took him earlier this year, during Akhet. I'm sorry you never met him.\"\n\n\"She's beautiful,\" Nanu murmured, caressing the tiny cheek with her thumb, and feeling her heart thrum in her chest. \"So beautiful.\"\n\n\"There's all the time in the world now, for you to raise her and love her,\" her sister said, putting a hand on Nanu's arm. \"I know you'll love her as much as I do. We can raise her together, just like we always talked about when we were younger. And I... what's wrong, Nanu?\"\n\nTears were now streaming down the younger girl's face as she tried to keep from bursting out crying. Becky found herself trying not to cry as well, even if she didn't understand the language.\n\n\"I'm... I'm sorry, Kiya,\" she managed to say, while her sister's eyes teared up, knowing what was coming. \"I can't stay, I now have a different life I must get back to. And it's not here in Akhmim, or even Keme itself.\"\n\n\"I understand,\" Kiya rasped, her eyes red as she tried to hold it together. She loved Nanu so much. \"Can't take us with you?\"\n\n\"No, I can't,\" Nanu said sadly, shaking her head slowly as she squeezed her eyes shut, crystalline tears falling onto the linen the baby in her arms was wrapped in. \"I don't know how that would work.\"\n\n\"Will we ever see you again?\" her sister Ameny almost pleaded.\n\n\"I want to say yes,\" Nanu replied, her eyes still closed. \"But even visiting now was very difficult to arrange. But I promise you, I will try. And if I ever find a way to take you all away from here, then I will. And we'll all live in splendour together forever.\"\n\nMost of the girls were crying at this point, and even a few of her brothers were sniffling. Her mother and father just knelt quietly, looking very forlorn and lost. Nanu handed the baby back to Kiya and hugged her parents tight.\n\n\"But even if I can't be here, I'm still looking after you, like I promised,\" she said in an earnest tone. She glanced over at Mark, who nodded and rose, using two of the porters to unfasten sacks from the mule and also the palanquin. When he brought them over, he laid them in front of Nanu, who opened them to display the contents. Her family members gaped in awe.\n\nMore gold coins than they could have imagined glittered within.\n\n\"You'll need to be quiet for some time about where it all came from, and not just spread it around, but this'll give even my niece's great-grandchildren a very comfy life if you're not stupid with it,\" she announced, running her hands through the coinage so they could hear the sound of it. \"Like I said, you could become the wealthiest farmers in the region, or become traders in a nearby city. As long as you look after one another, always. Even Bata.\"\n\n\"Don't worry about Bata, sis,\" grunted the second eldest brother, Anpu, looking at Meritites and smiling. She reached over and squeezed his hand. \"We'll make Bata behave.\"\n\n \"I know,\" sniffled Nanu, smiling and wiping at her eye. She'd always liked her big brother Anpu. He wasn't a jerk like Bata. \"Just protect my sisters, Anpu, and my niece.\"\n\nHe nodded, looking proud, since she'd assigned him this task.\n\n\"Do you really need to leave already, Tahemet?\" Djoser asked, calling Nanu by her childhood nickname of 'Queenie'. When they'd all been younger, Nanu, as the youngest, usually got the short end of the stick about everything. So she made up for it by having an active pretend life, where she was a queen, regal and worshipped by all. Meri, the eldest, had given her the nickname, but not in a mocking way, even if Bata used it as such.\n\nNanu considered. Mark turned around and whispered to the porters. \"Stay with us another night, and we'll triple your pay and give you all the remaining food.\" The men nodded readily. Nanu wanted to ask Mark and Becky, but they were supposed to be her slaves for this visit, so she couldn't be asking them. The decision was hers.\n\nShe opened her eyes and smiled. \"I'll stay until tomorrow.\"\n\nEveryone seemed relieved at her proclamation, and they continued eating and drinking merrily. Becky had to admit, they were taking this all in good stride. Then again, when all your deities had bird or reptile heads, there probably wasn't a lot you couldn't take on faith anyway.\n\nMark now conversed with the family (with Nanu's permission), about how Nanu had come into wealth and escaped slavery, not to mention acquiring two exceptional specimens such as himself and Becky for slaves. Mark did something he was becoming distressingly good at and lied. It saved Nanu the hassle, which was just as well, since she spent much of her time holding Kiya's baby and talking quietly with her sister. Clearly they'd been attached at the hip when they were younger, and there was much about one another they were keen to rediscover. Watching them subtly touch each other and hold hands, thumbs gently caressing, brought a smile to Becky's face.\n\nShe resolved to make sure Nanu got to see her family again.\n\n***\n\nThe day had worn on, and Nanu had to remind everyone repeatedly that there was no immediate need to get back to toiling over the barren landscape, since she had come with plenty of money. Evening was upon them, and the family began returning to the dwelling that served as their home. Mark added treated skins around the shelter, converting it into a tent, while Nanu begged Kiya to stay with her for the night, to which the older sister agreed readily. Last of all, she hugged her father and mother, promising to see them in the morning. They took little Nanu with them, leaving Mark, Becky, Nanu, and Kiya alone in the tent. The porters had returned to the boat and would sleep there.\n\nOnce the flaps were all fastened shut, Nanu and Kiya had almost attacked one another, kissing feverishly, and tearing one another's clothes off. Alex smiled and watched while they took their own clothes off. They lay on a blanket together on their sides, with Mark spooning her. He caressed and fondled her gently while she squirmed her ass back against him and they watched the sisters, small sturdy covered lamps in the corners providing dim illumination.\n\nNaked and wrapped up in a tangle of writhing limbs, Nanu and Kiya were continuing to kiss hungrily, moaning the entire time. Hands wandered over forms they hadn't touched in over ten years, and those had probably changed considerably in the interim. They murmured and whispered to one another through the kissing, words Mark didn't try all that hard to make out. Let them have their fun.\n\n\"Mmmmm, there you are,\" Becky purred as she felt Mark get nice and hard while watching the show. She reached behind herself and took hold of his hard cock, guiding it to her pussy. She teased it up and down the slippery netherlips before letting Mark press home, and sinking deep inside her. They both moaned with relief at the coupling.\n\nMark kissed Becky's neck and fondled her opulent breasts as he began pushing his cock in and out of her slowly. They slowly made love while watching the sisters just to their side rediscover one another, after over a decade apart. Becky smiled as Nanu kissed Kiya deeply, expressing her innermost longings and desires. The younger sister lay on top of the older one, holding one another tight and kissing, their nubile bodies squirming together.\n\n\"I love watching family reunions,\" Becky sighed quietly as she flexed her fingers on Mark's hip while he slid in and out of her, still massaging her opulent breasts. \"Look at them, Mark, they're so in love, and so happy to see one another.\"\n\n\"It's certainly a feel good moment,\" he agreed, loving how she flexed her pussy muscles around him as he pushed him himself back and forth. \"Mind you, just about everything involving you is, I find.\"\n\nBecky smiled and reached up to caress his cheek before turning her face to kiss him. While they were engaged in a tongue-lock, Nanu began kissing and nibbling her way slowly down Kiya's soft, responsive body, thrilling to hear the murmurs and whimpers of her sister again. She kissed her tan breasts, swirling her tongue around the hard brown nipple, before biting and tugging on it, then giggling.\n\n\"You can't imagine how long I've yearned to see you with tits, Ki,\" she said quietly, smirking up at the older girl. \"They're everything I've ever hoped for and dreamed of.\"",
        "\"Just wait until you see my cunt, then,\" Kiya replied, shivering beneath her sister's kisses. How she'd missed them! \"And let me see if yours has become everything I've ever dreamed of.\"\n\nNanu nodded and then wiggled around until her hips were over Kiya's face. In the dim light, the older sister could see the tempting slit, glistening with arousal and shaved curiously smooth. It must have been how they did things in distant Rome, of which her little sister was now apparently queen or some such thing. Without a moment's hesitation, she craned her head up and began kissing, sending shudders through Nanu and making her moan.\n\nThe sisters kissed and lapped at one another, lovers reunited after agonizing years apart. They fell into it naturally, remembering what the other loved and craved, even if their bodies had changed in the interim. Nanu sighed in bliss at the taste of her sister, cloying and sweet on her tongue. She felt Kiya go rigid as one of her fingers slipped inside her slit.\n\nThey rolled slowly onto their sides, legs locked around each other's head as they sucked on one another's pussy hungrily, lost in mutual pleasure. Mark and Becky kept watching, undulating and squirming as quietly as they could, letting the sisters rediscover their lost love.\n\nNanu and Kiya were moaning into one another's pussies now, little gasps escaping them. They could see Nanu's ass cheeks clenching and pushing forward against her sister's face, even while Kiya slithered her tongue around inside her. They were both trembling and sweating now, bodies shining in the dim, flickering orange light inside the tent.\n\n\"Ooh, here we go,\" Becky whispered, her hand reaching back to rest on Mark's neck and help keep her braced against him. \"Let's see how long this has been pent up...\"\n\nBoth sisters were shaking now, but still lapping and sucking on each other relentlessly, squeaking and whimpering as they tried to hold out. But their lust would not be denied, and they both keened and strained, finally cumming. Mark and Becky watched in fascinated delight as Nanu bathed her sister's face in her glistening cum, and heard her moaning as Kiya reciprocated.\n\nBecky shivered and pressed her ass back against Mark, hard, sighing as she began to cum as well. Mark pressed forward with his hips, pushing his cock as far inside her as he could, pumping his cum deep into her greedy pussy. They squirmed and ground against each other, with Mark biting Becky's neck and her fingers running through his hair.\n\n\"Mmmmmm, Mark...\" she cooed, nuzzling against him, loving the feel of his molten cum inside her. \"You have no idea how good this feels.\"\n\n\"If it's one tenth as good as that, then pretty damn incredible,\" Mark said, nodding at Nanu and Kiya, who were still kissing one another's pussies, murmuring quietly and caressing.\n\nNanu disengaged her mouth from Kiya's womanhood and turned around again, lying on top of her sister as they began kissing again, tasting themselves on each other's lips. Kiya moved her right leg and Nanu her left, shifting around until their gooey pussies were squashed together, which they both obviously found immensely comforting.\n\nThey ended their kiss, and Nanu looked over at Mark and Becky dreamily, her face shining with cum. \"I would like to let Kiya taste you both...\"\n\nMark and Becky nodded, remembering that they were still pretending Nanu was noble and they were mere slaves. Mark slowly pulled his cock out of Becky and rolled onto his back. He pulled his teacher on top of him, facing up, with his cock poking up between her legs. The sisters crawled over, with Kiya looking rather hesitant, but trusting her little sister. She gazed at Mark's erect member and Becky's slit in wonder.\n\n\"He's huge,\" she breathed, unconsciously licking her lips. \"You're lucky to have such a big cock at your disposal whenever you like, Nanu.\"\n\n\"Don't I know it,\" giggled the younger sister, taking hold of Mark's tool and holding it up for Kiya, while she began kissing Becky's pussy, shivering as she tasted Mark's cum dribbling out of her mistress. \"You'll love the taste of this cunt, too.\"\n\nKiya began experimenting with kissing Mark's cock, which was glistening with his and Becky's mingled cum. The Egyptian girl seemed intimidated by its size initially, but remembered that Nanu clearly loved it, so there must be nothing to fear. Her hand joined Nanu's around the base of the shaft and soon she was sliding her tongue up and down his length, much like Nanu was doing to Becky's sweet slit.\n\nThe sisters paused to kiss, tongues tangling as they shared the cum they'd both lapped up, humming contentedly into one another's mouth. To watch them, Mark would have sworn they'd done this before. They both stroked his shaft, while Nanu caressed Becky's pussy.\n\nThe two girls pressed their foreheads together, giggling at some secret between them. Nanu looked at Becky and Mark warmly. \"We should sleep, my family will not leave us alone for long. And I want my sister to try fucking you both before we must leave.\"\n\n\"I do not want you to go,\" Kiya sighed. \"I just got you back, Tahamet, it breaks my heart that you intend to leave again. Couldn't... couldn't you and your servants stay with us? You could even lead our family, since you are the one with the wealth. We could live wherever we wanted. I wanted to raise my daughter with you, my other half, missing for so long.\"\n\nNanu's eyes glistened as she looked over at Mark and Becky. The blonde woman smiled lovingly. \"Nanu,\" she said gently in Latin, which Kiya didn't speak. \"This is your decision. If you want to stay with your sister and your family, Mark and I will understand. We'll leave the money with you, and even come and visit you when we can.\"\n\nThe tear on her cheek was proof of how torn the young woman was by this decision. And it was one she had to make alone, possibly for the first time in her entire life. It had to be terrible for her. Finally, she hung her head for several moments, and when she looked back up, she was smiling.\n\n\"Ki, I must go back to my life,\", she sighed, her mind made up. \"Trust me, I really want to stay, or to take you with me, especially you and little Nanu, but it must be this way. I can promise to visit, and that will have to do.\"\n\n\"I understand,\" the older sister choked, nodding as her eyes welled over with tears. \"I do. It's just hard. I'm so glad that you're alive and happy. It means so much to me. If the price is sending you away again, I can endure it. For you. For us. You know how in love with you I am.\"\n\n\"Same as I am with you,\" Nanu said, her voice cracking and tears flowing. \"Just remember that I'll keep my promise and visit whenever I can.\"\n\nThe sisters grappled onto one another and began kissing feverishly, lying on their sides while their hands wandered freely. Mark chuckled and allowed Becky to clamber off him. She went to lie on the far side, spooning into Nanu and making sure she stayed pressed to her sister. Mark, meanwhile, spooned into Kiya, holding her in place against Nanu, while the two girls continued kissing and whimpering into one another's mouths. The two time travellers reached across and rested a hand on each other, smiling and relaxing, waiting for the Egyptian girls to nod off, their lips still pressed together in a forever-kiss.\n\nIt was a long-overdue night of safety and contentment for the two.\n\n***\n\nIt was just dawn now, and Kiya looked like she was going into convulsions as she rocked up and down on top of Mark's cock. It was far the largest she'd ever had inside her, and it felt like it was splitting her open, like a wedge split wood. She could feel crackling and popping in her hips. How did Nanu, who was even smaller than her, endure it?\n\nBecky was kneeling right behind Kiya over Mark's thighs, pressed into the smaller girl and smiling wickedly while she molested her breasts. Meanwhile, Nanu was kneeling over Mark's mouth, letting him lash her pussy with his tongue, while she faced into her older sister, loving the look on Kiya's face as she was almost fucked in half.\n\nKiya squirmed and writhed, gasping like she was being choked, her eyes rolling up into her head. It wasn't long before her pussy clenched Mark ferociously, and Nanu had to lean forward and kiss her sister before Kiya shrieked in unreal ecstasy and woke up the entire family over a over three hundred meh-ta away.\n\nMark ground into Nanu's pussy as he arched his hips, pushing up somehow deeper inside Kiya and then cumming, filling her so profusely that she was once again shaking like she was having a seizure. The squishy noises of his cum bubbling out of her filled the tiny tent. Nanu shivered and came on his mouth seconds later.\n\nBecky hauled the nearly unconscious Kiya off of Mark's pole, while Nanu leaned down and sucked it clean quickly. She then moved forward quickly to lie between her sister's legs, sucking Mark's cum out of her pussy with a fiendish eagerness. Becky crawled over to join Mark and they watched the sisters quietly. Nanu finished draining Kiya of cum, finally, and crawled over her, nestling down onto her body. Not surprisingly, they were kissing again.\n\n\"Jeez, you ever seen too people more in love?\" he mused, smirking as he lazily caressed her breasts while she sat in front of him.\n\n\"I ain't complaining about the show,\" Becky replied, nodding and grazing her fingernails along his forearm. \"She must really believe in our promise to her if she's willing to leave her sister and niece behind to come with us. I feel slightly bad about it.\"\n\nMark shrugged. \"She wouldn't have even had this choice without us, Becks,\" he pointed out. \"Clearly our offer means a lot to her. 'sides, she knows she can always visit them now, just like we promised. And if the Holmes Field Device won't bring her forward, we can leave her here with them, right?\"\n\n\"I guess that's true,\" Becky agreed, nodding and just watching.\n\n***\n\n\"What is that language they speak to one another when they don't want anyone to understand them?\" Kiya asked in a whisper, looking just past her sister's shoulder at Mark and Becky suspiciously.\n\n\"I don't even know,\" Nanu confessed. \"I've never heard it before. Anywhere.\"\n\nKiya gazed up into her younger sister's eyes, giving her a skeptical look. \"They're not your slaves, are they? There's no damn way two people as magnificent as that are slaves to anybody, forget a dopey little slut of a girl from Akhmim.\"\n\nNanu sighed. \"Fine, you got me,\" she whispered, pretending to kiss her sister's ear, while Kiya squirmed and held her close. They made a show of grinding their pussies together, giving Mark and Becky something to look at. \"They're not my slaves. I was hers, for a little bit. But what they really are is adventurers, from very far away. And they're taking me with them, to share their adventures. Not as a slave, but as one of them.\"\n\nKiya assessed what her sister was saying for some time, trying to parse it out. It sounded absurd, but then, so was Nanu being here at all, dressed in fine raiment that even the pharaohs would envy, with lots of gold at her disposal, and healthy and whole. It seemed a miracle.\n\nWere these two actually gods? If they were, what could Kiya do about it?\n\n\"Are you sure it's safe, my little love?\" she asked, caressing her sister's cheek gently. \"I would die if you-\"\n\n\"No dying,\" Nanu whispered firmly, her lips touching Kiya's as she spoke. \"My beautiful niece needs her mommy.\"\n\n\"And what about her other mommy?\" Kiya asked somewhat petulantly.\n\n\"You will see me again, Kiya,\" Nanu said, her hazel eyes locked with Kiya's darker brown ones. \"Now that my life has come to this, I can make that promise. If it hadn't been for these two, I would have been lost to you forever.\"\n\nKiya bit her lip as she tried not to cry. The sister continued squirming their gooey pussies together, finally pressing as hard as they could into one another and sighing as they climaxed. They shuddered and collapsed into a sweaty tangle of limbs and cum.\n\n\"Just keep my secret from everyone,\" Nanu whispered as she kept kissing her sister lovingly. \"Keep my secret and I'll put you in charge of all the money.\"\n\n\"Mmmm, you got a deal, you little slut...\" Kiya moaned into her sister's mouth.\n\n***\n\nIt was an emotional parting, certainly, but Nanu handled it surprisingly well. She spent loving moments with everyone in her family, even Bata, who seemed to have thought better of his ways, and begged her forgiveness, which she readily gave. His abuses of her were forgotten. She cried with her mother and father, explaining that she really did have to go, but that Kiya would be in charge of the money and would take good care of them all.\n\nShe wept while she said goodbye to her niece, her namesake, and the tiny girl seemed to understand. Nanu promised to visit again soon, to see her grow into a beautiful young woman. Lastly, she said goodbye to Kiya, the two of them crying as they kissed and hugged one another, with Kiya struggling to refrain from begging her little sister not to leave. She'd have to have faith that Nanu would keep her word.\n\nNanu took her sister by the hands, sniffling as she looked into her eyes. \"Another boat is coming, Ki. It'll take you and Anpu to Alexandria, where there's a bank that'll set you up and look after the funds. Then you can set up wherever you, mom and dad decide, and bring the family there. Shouldn't take more than a few months. Just make sure they have enough food to last that long.\"\n\nKiya nodded. \"I will. I can't believe this. Maybe you're going off somewhere with pale-skinned gods, but I believe you when you say you're coming back. I love you, Tahamet.\"\n\n\"I love you too, Ki...\" Nanu murmured, kissing her one more time and then turning away. She was wearing a new set of radiant clothes, another veil protecting her lovely face from the sandy winds. With Becky, Mark, and the Nubians in tow, she walked back to the palanquin and stepped inside, lying down on the cushions. Her family couldn't see her, but she could see them through her tears as she was lifted and carried away. Once they'd descended the banks and were heading onto the barge, she allowed herself to cry.\n\nOne of the curtains opened and Becky looked in, smiling kindly. She stroked the younger girl's black hair soothingly.\n\n\"That took so much strength, darling,\" she cooed, taking Nanu by the chin with a finger and looking into her bleary eyes. \"Are you sure this is the right decision for you?\"\n\nNanu swallowed. \"I... I love my family, mistress, and would lay down my life for them. But even more importantly, I can look after them now. And that is because of you and Bono- I mean, M-ark. And I... it sounds silly, but...\"\n\n\"Go on, beautiful,\" Becky said softly. \"You know you can tell me anything.\"\n\n\"I...\" Nanu faltered. \"It sounds stupid, but you and M-ark have my devotion, as much as my family does, mistress. I am in love with you both. How could I not be?\"\n\nBecky bit her lip, willing herself not to tear up. \"We love you too, Nanu. Never doubt it. And we'll make sure you visit your family as often as we can safely manage it. Mark and I promise.\"\n\n \"I believe you, mistress,\" the Egyptian girl said, her eyes shining as she gazed into Becky's divine face. \"I believe everything you say...\"\n\n***\n\nIn the darkness of the basement, a glowing field appeared, along with tiny, blinking lights of red and blue neon that twirled about in abstract patterns. Inside the glowing field, the Holmes Field Device appeared, with three passengers on the platform. A strange, quantum humming sound filled the enclosed space.\n\nThe device and passengers, fully materialized, waited quietly for a few seconds, and then Mark began powering down the consoles. Becky smiled and took Nanu by the hand.\n\n\"Welcome to my home, sweetheart,\" she said quietly.\n\nNanu's expression was a bemused one as she looked around the dim room. \"It... is much smaller and darker than I expected, mistress.\"\n\n\"Well, I... no,\" Becky faltered while Mark chuckled behind her, still powering down the consoles. \"This is just my basement, Nanu, it isn't where I live. My house where I really live is above us, upstairs.\"\n\n\"Oh,\" Nanu mused, considering and nodding. \"This is good to hear. I was almost feeling cheated.\"\n\n\"This is where Mark comes in and out with his device, since it is open enough to hold it,\" Becky explained, shooting Mark a sour look for laughing and not helping her. He'd even told Nanu a joke in Egyptian earlier, a language Becky didn't understand. She'd make him pay. \"I wouldn't want it upstairs in the middle of my house, not to mention it's a secret, so no one will ever see it down here.\"\n\n\"Why must it be a secret, mistress?\" Nanu queried.\n\n\"Because even in the age Mark and I come from, this age, it is not a known technology,\" she tried to explain. \"People would be quite frightened by it. And if they weren't frightened, they would try to abuse it for their own ends.\"\n\n\"But isn't that what you and M-ark do?\" Nanu pointed out. More snickers from Mark.\n\nBecky closed her eyes for a moment. How could this be so difficult compared to the math and calculations of operating the Holmes Field Device? \"I... Mark and I are not trying to harm people when we travel like this, we merely want to experience things. Many people would use it as a weapon.\"\n\n\"Yes,\" Nanu said, nodding decisively. \"If I knew how to control this god-device, I would crush all the enemies of the Black Land with it and overthrow even mighty Rome. My family's name would be one of power and fear!\"\n\n\"Incredible, she's ruling the universe, and she hasn't even stepped off the platform yet,\" Becky said dryly while Mark continued laughing. \"It's a good thing Mark's taking it with him, obviously, to spare the time stream your dreadful wrath.\"\n\nNanu tilted her head. \"Where is M-ark going with the god-device?\"\n\nBecky clasped her hands together in front of her mouth as she tried to figure out how to explain this to Nanu. Mark just shook his head. \"Look, Becks, you may have three months to explain this to her, but I'd better get back, or you're never gonna catch up with me.\"\n\n\"I know,\" Becky sighed forlornly. The next three months were gonna suck. At least she'd be busy with Nanu. \"Fine, just put my souvenirs on the floor here, and then you'd best go, or I'll be tearing your clothes off and keeping you.\"\n\n\"You got it, teach,\" Mark said cheerfully, unloading the linen and skin bags of items his teacher had brought back for herself. A few minutes later, he joined them standing off to the side of the device, taking Becky by the hands and smiling down into her eyes.\n\n\"Gonna miss me?\" he asked, smirking.\n\n\"You know damn well I will, you insufferable man,\" she answered, poking his nose while Nanu watched. \"Worst part is that you won't even notice the time lapse, you jerk.\"\n\n\"I'll find a way to make it up to you, I promise,\" he said softly, pulling her against him and putting his strong arms around her. She melted into him and they kissed deeply.\n\n\"Mmmmm, you'd better, mister...\" she purred as she lost herself in the last kiss she'd get from Mark for three months. She pulled back from him and wiped at a corner of her mouth, taking a deep breath. \"Now go, before I rape you.\"",
        "Mark turned to Nanu and pulled her into a kiss too, although one not quite as deep or passionate as he'd shared with Becky, if only because he really needed to get out of there. Every moment he spent here and now meant she had to wait even longer to see him again.\n\nHe ended the kiss and the two girls watched as the young man stepped onto the platform and began fiddling with dials and buttons. The whirring, humming and weird lights began again, indicating that the Holmes Field Device was almost ready to do its thing.\n\n\"See you in July, Becks!\" Mark called out to them, smiling and waving as he and the contraption faded from view. Silence and darkness were all that remained. The girls said nothing for several seconds before Becky sighed and then turned to smile at Nanu.\n\n\"It's really late, my love,\" she said, taking her new housemate's hand. \"What say we get some sleep, and then tomorrow, I'll show you your new world?\"\n\n\"As long as I'm sleeping with you, mistress, I will wait for anything...\" Nanu said readily as she committed herself to this new world and new future.\n\n***\n\nAnother basement, seconds later...\n\nThe quiet darkness was suddenly disrupted by a strange glow, and a hum, along with blinking neon lights that seemed to spin around a perimeter. The Holmes Field Device appeared, and Mark sighed heavily as he shut it off. He slumped down onto a small stool in a nearby corner, thankful his parents and his sister pretty much never came down here. Mom didn't like the clutter, Roxy was afraid of the spiders, and his dad never wanted to be seen leaving the basement in case his mom decided she needed something dug out. Out of sight, out of mind.\n\nHe looked at the little multicoloured weed pipe he was holding in his hand, still contained in a small baggie. It didn't matter that his fingerprints were on it, since he'd shown it to Roxy. Not like she was gonna tell their parents, right?\n\nBut still, this was getting complicated. His initial trip over to Danni's house had apparently not been as smooth as hoped, and he just found out now. And now he had to jump back in time to hide the pipe under his chair in order to show to Roxy, and then get it back into Danni's room unnoticed.\n\nRight?\n\nBecky had been correct, these twists were getting harder and harder to manage. He'd very nearly been caught at Danni's, and it was only dumb luck that saved him. But he couldn't rely on that now. He shook his head and took a deep breath, preparing to jump back to before the confrontation with Roxy, before he'd gone into his room.\n\nMaybe during dinner? What time had dinner been? Thank God his parents and Roxy were out right now. How many more times did he have to try to correct this little gaffe? And how?\n\nHe got up wearily and assumed his place atop the platform of the Holmes Field Device. He fired it up and in a drone of noise and particle states he could never understand, he faded from view.\n\nSeconds later, he showed up again, hurrying off the platform and placing several small Renaissance plaster gargoyles onto the floor away from the device. He then activated it and faded out again.\n\nMere moments had passed before he reappeared, sweating as he held a load of brightly coloured Tang Dynasty women's clothing, tossing it aside. He looked really frazzled as he punched in more coordinates and blinked out of the basement.\n\nWhen he appeared again, he was sputtering and cursing as he pulled on a tough leather leash, trying to coax a llama off the platform. The creature grunted and spit in his face. Mark swore at it but then scrambled back on the platform and winked out of view.\n\nThe Holmes Field Device glowed into existence and mariachi music blared through the basement. Several men in sequined black outfits were playing El Jarabe Tapat\u00edo and calling out joyously as Mark, who was wearing a ridiculously large sombrero, shoved them all off the platform, practically in tears from the stress he was under. He stood still and gazed in bewilderment at the Mexicans crammed into his basement, playing as if nothing had happened, while the stupid llama bobbed its head back and forth, enjoying the music. Unable to deal with this, Mark staggered onto the platform and faded out again.\n\n\"RUN!!!\" he shouted in terror as he blinked back into the present, bolting off the Holmes Field Device and climbing up onto a tall, rickety shelf while an enraged velociraptor screeched hatefully and leaped at him, trying to tear his innards out with its fiendish claws. The Mariachi band's playing was replaced with cries of panic, everyone trying to escape the demon predator.\n\n\"AY YI-YI-YI-YI-YI!!!\" shrieked one man as he ran about aimlessly, as if only suddenly aware of the basement he was trapped within. Instruments and sombreros were flying about in the darkness, along with growls, hisses, and the sound of fabric tearing.\n\nThe llama just spat contemptuously at everyone within range.\n\nAnd Mark swore that very night that he'd never cause another time twist ever again. Ever.\n\nAll the best with that promise, Mark. You're going to need it. \n\n***\n\nAuthor's Notes: Whew, close call with Roxy, eh? Mark's finding out the hard way that time twists hurt worse than a nipple cripple from his sister. If only he listened to his sexy Physics teacher more often...\n\nLots to set up in this chapter, because the next story arc will feature Becky teaching Nanu about her new world and reality, while they catch up with Mark three months in the future. Like our cute and brainy teacher pointed out, he won't even notice the passage of time. The day after this chapter ends, he will simply hike out to her place, ring the doorbell, and proceed as if nothing was amiss.\n\nOn the other hand, Becky and Nanu have had to do without Mark without three months, and will no doubt ravage him when the time arrives. Looking forward to writing that.\n\nNanu learning about the 21<sup>st</sup> century will be entertaining, certainly. Not only will she be exposed to technologies she can't even begin to fathom, but she will be confronted by laws and morals that likely will make no damn sense to her. How can that not be entertaining?\n\nFor you zoilists out there, calm down about the bathing houses being not segregated in this chapter. There were indeed periods in Roman history where women not only had their own chambers in public bath houses, but even were known to mingle with the men in the main rooms. And yes, depravity sometimes ensued. Rome, like any society, had more liberal, and more conservative periods. The reign of Trajan was relatively liberal.\n\nAnd there are extensive records of Vestal Virgins who broke their vows. Calm down, I didn't make it up.\n\nI don't wanna say any more, because I love surprises. In the meantime, I've got a chapter of Expecting to post, so I'd better get to it. I'm so very behind in my publishing schedule.\n\nKeep your stick on the ice!\n\n- Administration"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "alcohol",
        "group sex",
        "humour",
        "incest",
        "lesbian",
        "references to drug use",
        "threesome",
        "time travel"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/time-rider-ch-06"
}