{
    "title": "The Choosing Ch. 10",
    "pages": [
        "I awoke to Hatha's face hovering over me. As soon as I saw her frowning brow I cried out and reached up, pulling her face down to me. \"You're alive. You're alive.\"\n\nShe laughed, peeling my hands from her neck and pulling back to avoid the kisses I peppered across her face. \"Settle Mistress.\"\n\nI was so glad she was alive. I had not even let myself hope it could be so. As the Captain had taken me from the burning encampment I was certain that all were lost. Hatha. Askel. My Sister. Suddenly remembered my sister, I jerked out of Hatha's arms. \"Leia?\" I asked, searching Hatha's face for signs of some awful truth..\n\n\"She is alive\u2014and still completely undeserving of her sister's affection. Before you ask, Askel is also alive. He is the one who rode out to find Roth and Nadar.\"\n\nI heard the hint of approval in Hatha's tone. \"Changed your mind on letting him live forever in pain have you Hatha?\"\n\nShe made a hurrumph sound as an answer.\n\n\"How long have I been out?\"\n\n\"Only a night Mistress.\"\n\nOne more night gone. One day closer to the full moon.\n\nI started to sit up but the pain in my tether mark pulled me down. I gasped. The world swam before me, tinged blood red as agony pulsed from that wretched mark.\n\n\"Mistress?\"\n\n\"The Tether...\" I croaked out, rolling into a fetal position.\n\n\"What's wrong with her?\" Through the fog of pain I heard Nadar's voice.\n\n\"It is the tether Prince Nadar, the time draws near and it is growing stronger.\" Hatha stroked a palm over my sweating brow and murmured soothing sounds of comfort.\n\n\"Can you ease her pain?\"\n\n\"I have some archbark tea brewing that will dull the ache. The tether ceremony will have to be next night. The moon comes. It will not be denied. Archbark is all we can offer her until the tether mark is bonded.\"\n\n\"Bonded? Can she make the choice in this pain? She needs to be aware to agree to the tether.\"\n\n\"It will not be this way always; the pain will come and go Prince. This is just a bad attack right now. Sit with her, while I get the tea.\"\n\nI moaned at the loss of Hatha's hand until I felt the soothing touch of Nadar. Just the fleeting contact of his finger was enough to pause the pain. I grabbed his hand and plastered it to my cheek. With him holding my face I was able to sit.\n\n\"That's better?\" he asked.\n\nI nodded. He went to shift his hand but I held it tight. \"Please. Keep touching me.\"\n\nHe hesitated and I feared for a moment he might leave me. His silver rimmed eyes flickered with an emotion I could not place, until he finally dipped his head in a slight nod. Still holding his hand to my face I pulled myself up to sit.\n\n\"Talia.\"\n\nTalia he called me. Not Chosen. Not Mistress. He was one of the few who still used my name. I loved to hear it resonate in his rich deep tone. I closed my eyes and nestled into his palm in pleasure, a purr vibrating in my throat.\n\n\"Please stay,\" I spoke the words into his heel of his hand, \"It's better with you.\"\n\n\"Why didn't you tell me of the tether?\" He sounded so serious. So earnest. I couldn't believe that he would ask me such a thing. I squared my shoulders pulling his hand from my face and holding it to my chest. \"What would you have done about it?\" I returned in anger.\n\n\"I don't know.\"\n\nHis answer was exactly what I expected from him. A nothing answer. He offered only questions, never solutions. Never anything solid or real, just whispers of cryptic emotion that I could not decipher.\n\n\"Exactly. You don't know. You don't know what you want.\" I pulled away. I still kept hold of his hand, afraid that if I let go the rolling pain would return.\n\nNadar leaned into me, his angel brow furrowed. \"What do you want?\"\n\nI shook my head and half laughed half sobbed. \"What I want is of no matter now Nadar. It is down to what I can accept. That's all.\"\n\n\"So you'll tether to my father.\" It was not a question, more a resigned statement of fact.\n\nI had come to the same resigned conclusion. I had yet to speak the words and I could not yet say them aloud, especially to him. I did not answer. We sat hand in hand until Hatha arrived with the tea.\n\nSurprise flashed in her eyes at the sight of us entwined but she said nothing, just handed me the steaming tea. Nadar let go of my hand as I took the cup. \"Now you have ease I will go,\" he said as he moved to his feet.\n\nWhen he had gone from the cabin the pain returned. Pulsing a painful beat at the base of my head and marching through my body. I clutched the archbark tea, gulping it down, seeking some relief. My hand shook, splashing the hot tea over my hands. Hatha took the cup from me and held it to my lips to sip, murmuring her soothing sounds of comfort as she did.\n\nThe warmth of the tea seeped through me, dampening the beat of pain. I sighed when it had eased enough for me to push the cup away and sink back onto the pillowed pallet.\n\n\"We need to dress you Mistress. The Dark Prince wishes to see you.\"\n\n\"To discuss the tether.\"\n\nThere was pity in her eyes. I looked away from it as she answered, \"Yes Mistress to discuss the tether.\"\n\nI watched the spit and glow of the logs in the nearby hearth. \"Is there any other way Hatha?\"\n\nShe sighed. I did not have to see her to know the picture her face would make. \"You have choices.\"\n\nI turned back to her, \"Choices? What choices? Askel the weak, Malchard the insane or painful death? I am not foolish enough to believe I will be even allowed those choices. My only choice will be that of Roth's hand.\"\n\n\"Prince Nadar....\"\n\nI cut her off with a raised hand and a bark of laughter. \"Nadar? He does not want me. He wants a duplication of his perfect mother. I cannot live up to her faultless memory.\"\n\nHatha grabbed my hand and pulled it into her, cradling it against her body. \"I think you're wrong Mistress. Nadar is the only one who wants you. The only one who does not want something from you.\"\n\n\"It matters not what he wants Hatha, he will do nothing about it.\"\n\nShe started to speak but I pulled my hand from her grasp and waved her away. \"Help me dress now. I wish to get this over with.\"\n\nShe inclined her head and gave me a sorrow tinged smile. \"As you wish Mistress.\"\n\nAs I wish? I laughed but did not explain myself to Hatha. Nothing was as I wished. Nothing.\n\n* * * *\n\nWe were in a small village. It seemed disused. I saw no villagers about, only those in Roth's service. Hatha answered my question before I could even ask. \"The Dark Prince had the villagers moved for their safety. Lord Malchard's forces have been through here.\" She nodded towards a burnt out house.\n\n\"Malchard is close?\" I felt a stab of fear at the thought. My hand went to the tether mark.\n\n\"The Dark Prince has us well protected until after the full moon.\"\n\nIt was then that I noticed the Master Guard that flanked us as we walked. They were so quiet that I had not noticed them. Four Dark Masters clothed in black leather armor.\n\nRoth was waiting for me in the town tavern. It was dark and smelt as all taverns did, of sweat, old ale and smoke. Roth was seated at a long scarred table with the two Generals I had met at the War Council, standing at his back were Nadar and Valco. I flinched at the sight of Valco, stepping back to the door. Hatha held me back. \"He does not blame you for his sister's death Mistress. He grieves but knows you were not at fault.\"\n\nI felt little assurance at her words, too often had I been attacked for things that were not my fault. I would give Valco a wide berth and I hoped that he would do the same to me. He met my eyes as I came to the table. Pain flashed through his dark gaze and he looked away.\n\n\"Master?\" I spoke quietly. I had not seen him since the battle.\n\nRoth looked up at me with eyes black and hard. \"My Chosen. Please.\" He waved a hand. \"Be seated.\"\n\nI followed his instruction without question. He raised a brow at me and I knew he was marveling at my easy acquiescence. It was the first time I had not questioned his orders.\n\n\"The Sarran has explained the tether,\" he said and it was then that I noticed Askel too sat at the table beside the two Generals. He shot me a bashful grin and I smiled in return.\n\nI waited for Roth to chastise me for not confessing the tether. To my surprise he did not, instead saying, \"The moon comes tomorrow night. We have the ceremony ready to conduct. You must decide who you will tether with.\"\n\n\"What?\"\n\n\"The Vessel requires a tether. You have two choices. The Sarran here.\" He waved a hand down the table at Askel. \"Or myself. Who will you tether to?\"\n\nI had never thought I would have an option. \"You will not force me?\"\n\n\"The Sarran and I\u2014as well as my son\u2014have had much discussion. The conclusion is that while you must tether the choice whom is in your hands.\"\n\nI looked behind me to Hatha. She shrugged as if to say she too was astounded and had no answers for me.\n\n\"Sire...I'm....I cannot...\"\n\n\"She needs time to think,\" Nadar broke into my stutter.\n\n\"Time is a luxury we do not have my son.\"\n\nMy mind swirled. The plans I had made dissolved by his words. I had thought there would be no choice. That I would be made to tether to Roth. I had accepted it as the only outcome, hoping merely to negotiate terms for the freedom of the Sarran with my submission.\n\nThe archbark had worn off. The tether, feeling the strength of the men surrounding me, beat out a harsh plea to be bonded. My flesh burned, I was sure the mark had seared through my skin, melding to the bone. I gripped the back of my neck pushing into the pain. I couldn't think. I needed to think.\n\n\"Chosen, make your choice.\"\n\nMy choice. What was it? What was the right deicision?\n\nAskel or Roth.\n\nTwo choices. Both could secure the freedom of the Sarran, halt the onslaught of Malchard and Beatrix. While I held both in some esteem, I trusted neither. There was one, only one that I did trust.\n\nI looked pleadingly at Nadar.\n\nWould he offer?\n\nThere was no offer but he did act. He came around the table and pulled me to my feet, clasping me to his chest. He placed his hand over mine on the tether mark. The cool touch of his skin eased the burning ache.\n\n\"Do not pressure her Father. She needs time to think without your questions.\"\n\nHe kept me pressed against his chest. Lifting me with ease, he hooked a hand beneath my buttocks and pulled my legs around him. I did not look back as he took me from the darkness of the tavern out into the daylight.\n\nI gripped him, my fingers digging into his shoulders. \"Don't let me go. Please don't let me go.\"\n\n\"Never. I'll never let you go.\"\n\nI sank into the comfort of his touch, of his smell, rubbing my head on his chest like a cat seeking a mark. I wanted to be covered in his smell\u2014marked from head to foot with his scent.\n\nWhen shadow fell over my head I knew we had entered a building of some kind. I raised my head to look. It was a stone cottage, not unlike the one I shared with Hatha. A fire was crackling in the hearth and a large pallet of rugs and pillows were piled in front.\n\nHe laid me gently on the pallet. He sat beside me, not speaking just stroking my face. I took his hand in mine and brought it to my lips. He let out a hiss as I flicked my tongue on his fingertip, tasting his skin.\n\n\"I had vowed,\" he said in deep timbre, \"vowed to stay away. Let you make your choice. But you touch me and all my promises, all my will disappears.\" His lips dipped to mine as he spoke, the last word disappearing into my open mouth. His tongue followed. One touch and I was lost in a moan that seemed to issue from my very soul\u2014a yearning plea for connection that he met with a deep, almost brutal kiss.\n\nHis hands went to my bodice, pulling at the clasps to free my breasts. I wore no chemise, there had been none to wear. The clothes I wore were borrowed from what little the villagers had left behind.\n\nAs my breasts spilled from the tight bodice he sighed and lowered his mouth to my nipple. I arched into him, bowing my back to offer him more. He took it. Sucking the whole areole into his mouth with a deep, nearly painful pull.\n\nI felt the sharp point of his teeth scrape at the soft skin and I knew that his fangs had come down. He pulled back, his mouth open, the white points of his fangs descending over his bottom lip.\n\nI came up on my elbows. \"Don't go,\" I whispered in a plea, \"Please don't go.\"\n\nI saw his hesitation. I felt it rip through me, my heart tearing open at the thought that he would leave me wanting and confused once again. His eyes had gone black, the silver rim making them seem as if they held the power of a lunar eclipse. He closed his eyes. I did too. I waited. Waited, preparing for him to disappoint me once again.\n\nInstead of disappointment there came the shock of his mouth once more on mine. The sharp point of his fangs scraping at the plump seam of my lips. I opened my mouth in shock and his tongue entered, plundering mine.\n\nSkin. I needed his skin on mine. I ripped at his clothes. Pulling at his shirt and breeches. I shoved my hand under the tight leather of his pants. My skin finally making contact with the cock I craved. I wrapped my hand around the shaft, warm velvet skin stretched tight over pulsing muscle.\n\nHe wanted me as I wanted him. I held the evidence in my hand.\n\nI stroked his member, squeezing the head and then sliding tight down the hard shaft. He groaned against my mouth and pressed into my hips. Trapping my hand between our bodies. Unable to stroke I flexed my fingers, rolling them around his hardness.\n\n\"Talia. Talia,\" he pleaded. To stop or to continue?\n\nI slid my hand free. I did not want to force him to this. I wanted him to take me. Take me as I was.\n\nI shifted back on the pallet, sliding free of his body. I stood on shaking legs to stand above him. With his dark eyes on me I slowly stripped, slipping out of my remaining clothes. Naked, I stood before him, in silent challenge, legs wide and shoulders back.\n\nTake me, I pleaded with my eyes.\n\nWant me. Want me enough to break your vows and slide inside my body without regret.\n\nMy heart pounded. Hot lust sank between my legs to throb in time with each beat. He came up on his knees. His cock had come free of his breeches it bobbed as he moved forward.\n\nI felt equal parts relief and regret as his mouth came to the apex of my thighs. As his tongue lapped at the syrup of my slit I ached for his cock. I ached not to be an altar for his mouth but to be the receptacle of his seed. I wanted his release pushed deep, deep inside me more than my next breath.\n\nI did not pull away, my treacherous sex too wanting to deny the stroke of his tongue. I ground against him, lifting a leg to mount his mouth. His hand cupped my thigh, opening me wider for his mouth, his teeth.... Oh, his teeth. His fangs grazed my clitoris in a razor sharp bite of pain that pushed me into orgasm. My sex contracted, gushing into his mouth. He opened wide, taking my cum like it was life giving blood.\n\nMy legs gave way, knees buckling at the pleasure. I sank down to the rugs beneath my feet. He guided me gently to sit on my knees. Chest heaving and mind spinning I rocked on my knees, watching him. His mouth was slick with the issue of my release, his lips red and swollen, the white of his fangs standing out in stark relief.\n\nI looked down to the plum head of his cock straining up out of the open placket of his breeches. Would he finish what he had begun?\n\nWould he take me?\n\nI would not ask. I would not beg even though every fiber of my being urged me to do so. My heart, my soul, the blood pounding in the veins cried out take me, take me, take me, please take me.\n\nAs if he heard my cry Nadar lunged forward, pushing me back to the rug with a thump. There was no gentle in his eyes, no vows, no restraint, just brutal raw need.\n\nI let it consume me. I spread my legs in welcome of his fiery need. He did not even remove his breeches, just thrust his hips forward and pushed inside me in an aggressive plunge that made me cry out in shock.\n\nThe cry did not stop him. He pushed on, his hips colliding with a force that cracked our bones together. He filled me, the brutal length of his cock pounding hard, stretching me to painful fullness. I sank into the pleasure of the pain with each thrust. With an inhuman speed his hips moved, over and over, driving me to a peak that I had never before felt. Magic swirled around us. Above his shoulder I saw it. Symbols in glittering light.\n\nBlack, silver and red.\n\nVandarran and Sarran.\n\nPowerful magic from two powerful races. They converged into one symbol that hung above us pulsing light onto our bodies.\n\nI tasted the magic on his skin. Sweet and potent. The spell that he pounded into me connected with my soul. He too needed to taste it. In my blood.\n\n\"Bite. Bite me,\" I cried out.\n\nHis fangs sank into my shoulder. Shredding the skin as he ground his jaw down hard. Pain. Sweet pain rocked through me as he sucked down the magic of my blood.\n\nWe came together. His seed surging in me as my sex clamped around his shaft. He continued to feed from my shoulder as his cock pulsed within my sheath. The sucks slowed to a gentle lap of his tongue as the thrust of his hips eventually stilled.\n\nWith a press of his lips to the wound his fangs had made he slid from my body and rolled to lay beside me. He did not speak as I coated my finger in the blood slicked on his swollen lips and drew on his chest the symbol that had hung above our bodies. He slipped his hands between my legs, dipping his fingers in our mingled release, I watched, barely breathing as he brought his wet fingers up and drew the same symbol above my breasts.\n\nOur eyes locked.\n\nI braced myself for rejection. For regrets. Instead came a soft kiss as he leaned in to taste my mouth.\n\n\"Once more,\" he murmured against my lips.\n\n\"Once more,\" I repeated and rolled to my back, opening my legs to him.\n\n* * * *\n\nIt was Hatha who found us, naked and spent on the rugs beside the dying embers of the hearth. After two 'once mores' we had fallen into a deep sleep, my head resting on his chest, lulled by the steady rhythm of his heart.\n\nI don't know how long she had been standing above us but she looked quite amused as she toed my bare butt and said, \"Get up.\"\n\nI rolled to my back and stretched out. \"Why?\"\n\n\"You need to eat. You need to prepare for the tethering.\"\n\nNadar was now awake. He pulled the rug up to cover himself in an act of modesty that made Hatha laugh out loud. \"I've seen that many a time my Prince. There is no need to hide.\n\nI held up my hands for Hatha to help me up. She gave a disgruntled sigh and took the offered hands levering me to me feet. I smiled and reached in to press a kiss to her lips when I was upright.\n\nHer eyes came to rest upon the bruise of the bit at my shoulder. I brought my hand up to feel the mark. It did not hurt. If anything it glowed, the sensation of touch so good I pressed into it for a deeper hit of the feeling.\n\nAs I removed my fingers from the pleasure of the bite mark I realized pleasure was all I felt. Nothing more.\n\nNo pain from the tether mark. No feeling at all from it.\n\n\"Hatha,\" I said, turning around to face my back to her, \"I cannot feel the tether.\"\n\nHer cool fingers came to the base of my neck, to the centre of the tether tattoo.\n\n\"Remarkable,\" she murmured.\n\n\"What? What's remarkable,\" Nadar asked. He stood beside me, a rug tied loosely at his hips.\n\n\"The tether is closed,\" Hatha said.\n\nI spun around to face her. \"Closed?\"\n\n\"It is no longer open Mistress. It is no longer seeking a bond.\"\n\n\"Because it's found one?\" I asked, flicking my eyes over to look at a shocked Nadar.\n\n\"No, because the spell has been defused.\"\n\n\"Defused?\" Nadar repeated.\n\n\"Broken.\" Hatha took a step back, shaking her head in wonder.",
        "\"How? How could it be broken?\" I feared the joy that bubbled within me. I could not risk believing that something so remarkable had occurred.\n\n\"The Prince,\" Hatha said staring at Nadar. \"He is Sarran and Vandarran. A mix of both worlds. He was the antidote. The tether forces a bond with only one, but you gave it two.\"\n\nI understood at once what the magic that hung above us had been. I grinned. Stepping towards Nadar I held out my arms to embrace him in joy. He stepped back, his face closed and guarded. \"You're free Mistress Vessel.\"\n\nMistress Vessel? What happened to Talia? What did he mean?\n\nHe turned away from me, to Hatha. \"The Vessel is free. Pure of choice as she should be. You can return her to her people. We will give you safe passage and the protection of the house of Roth.\"\n\nReturn me? He'd sent me free and his first thought was to let me go? Make me go?\n\nJoy sank into sorrow at the painful truth of his words.\n\nAlone. I was once more unloved and alone.\n\n- - - - - - - -\n\nOne more chapter to go! Thanks to all of you who've stuck around for the ride. Especially those of you who took the time to comment. I do so love your thoughts.\n\nBe sweet,\n\nDarcy\n\nxx"
    ],
    "authorname": "darcysweet",
    "tags": [
        "horror novella"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-10"
}