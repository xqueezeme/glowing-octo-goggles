{
    "title": "Possessing Bella Ch. 14",
    "pages": [
        "Authors Note: This is a chapter in this series primarily based in BDSM practises. If that is not to your tastes please stop reading and find one of the other wonderful stories on this site more suited to your kink. Thank you once again to everyone who leaves comments and feedback on my writing, it is much appreciated. Thank you very much to Aisielynn who graciously offered to edit this chapter for me I am sure you will notice the big improvement. ~ellie\n\n*\n\nStephen's farewell, when he left, had been short and devoid of any sentiment at all. While enjoying the protection of the home in which she dwelt, it was to one man she was handed to and who she had obeyed without question all week. Arek had treated her as little more than a maid and a trophy piece to be shown off during the gatherings on the deck or in the banquet hall. For the most part, it seemed he just liked to watch her.\n\nIt seemed no matter where she went during the week Arek was close by, watching. Whether that be her chores or dancing lessons out near the river. Her small chest had been moved from the kennels to Arek's room. She spent her nights chained by an ankle cuff to the foot of his bed as she slept on a small pallet several inches off the cold stone floor. \n\nBella bathed him and laundered his clothes. She fetched and served him his food and drink. She always felt his off-handed lack of any emotional response to her, and it confused her. On one hand, he seemed so caring, looking after and protecting her from any unwanted advances yet as long as she continued to serve and dance he treated her as no more than a show pony. She was praised when she performed well and given treats, like a sip of Ka-la-na. If she had ever disappointed she got a swift formal rebuke, \"Do it again but this time do it properly, girl,\" but nothing more. \n\nFalling in easily with the routines of the household, Bella happily took on extra chores to fill her days. Arek left to ride the grounds after breakfast each morning leaving her in the care of Thalia and Nyx to do her chores and the tasks she had asked her to do. More than not he returned hastily to watch her. In the afternoons, he would accompany her to dance lessons with Nyx and Elena. Then in the evenings, she would kneel beside him on the deck and wait to be summoned to dance or given to offer service to the men of Gor.\n\nThe graceful movements she had to think about so carefully when she had first arrived became second nature to her as she flowed through her daily routines and counted the days until Stephen's return. It was not at all like she had thought it would be here. She wondered if that was because of the limitations Stephen had put on her by collaring her and giving her into Arak's protection in his absence.\n\nThursday evening as they settled to their respective mattresses, Arek's voice sounded in the darkness, \"Steelheart returns this weekend.\"\n\n\"Yes Master, Sunday I believe but only for the one night he said,\" Bella gave as much information as she knew. It was more of a statement than a question, and she had answered only because of the inflection in his voice.\n\n\"Tomorrow you will ride with me. I will inform Thalia,\" Arak's voice sounded thoughtful now, but hearing him turn in his bed as if ending the conversation Bella offered nothing more than a whispered assent.\n\n\"Yes, Master.\"\n\nThe following morning after breakfast they rode out, following the stream to an artificial beach upon the shore of a small dam. Bella's breath was taken away by the sheer size and beauty of the place as they came out of the surrounding rainforest. \n\n\"This place is amazing,\" her voice carried the awestruck shock she felt. \n\n\"It should be,\" Arak chuckled. \"It has taken long enough to create with a little help from my friends.\"\n\n\"You made this?\" Bella forgot her place as he picked her up and pulled her from the back of the horse, still looking around in wonder.\n\n\"It's a long story but simply put, yes,\" Arak nodded, pride showing in his tone. \"Come sit with me, girl,\" he led the horse to a shaded section where medium sized boulders had been placed under overhanging palm trees.\n\nCalling her girl had brought her back to where she was and who she was with rapidly. She followed no more than two paces behind him, and when he took a seat on a rock, she cleared a patch in the grainy sand and knelt beside him. He reached out and petted her hair as he did when praising her for her dancing or serving abilities during the evening. They stayed like that as a long silence grew between them. Arak cleared his throat more than once as if about to speak but seemingly changed his mind. Standing and walking towards the horse, Arak retrieved a water skin taking a long draft before returning to her and offering the same.\n\n\"Thank you, Master,\" Bella smiled. \"It's going to be a hot day,\" she looked up toward where the sun hung perhaps midway on its morning journey.\n\nArak frowned then looked at her intently. \"For today, let us drop the Gorean personas and speak plainly and truthfully. I find you remarkably interesting, which is not something I say often and would like you to speak to me as yourself while we are here on this beach.\"\n\nTaken aback, Bella's mouth dropped open momentarily but she caught herself and nodded, \"As you wish, Master.\" She was unsure what this would mean to a Gorean man but what choice did she have really out here in the wilderness.\n\n\"I know who you are, Bella Biancotti. I also know that the death of your Master was a tragic loss for many people. I did not know him that well. Aside of the occasional casual meeting at the club when I was in town visiting Mike, I didn't know him at all,\" he admitted. \"I also know that being here is little more than a learning experience for you and that collar on your neck is merely a required prop for your education here.\" He scrutinised her to see her reaction to his words.\n\n\"That is all truth,\" Bella said quietly. \"Had anyone asked me I would have been forthcoming, but girls are not asked much here except to serve or dance.\" She took a breath and went on, \"I did not ask for this collar. While I gratefully accepted it and the protection it affords me, I would have just as happily worn that of a house slave or the collar of a man I was given here for my two week stay. I believe the concern was for my freedom after the event that precipitated the collaring and name change.\" Arak continued to scrutinise her, saying nothing.\n\n\"I do not want you to misunderstand my words. I care for Sir Stephen very much and may at some point in the future beg him to return this collar to my neck. That time is not now though as I have made commitments to others that I will not put aside or break. That's not the girl that I am or the girl I wish to be seen as,\" she said with conviction. \n\n\"That is very admirable. Tell me about these commitments,\" He seemed genuinely curious. Bella took her time and explained how she had become Mel's and her naivety when it came to the lifestyle. She explained the training he had originally set up for her. How she had asked those friends of Mel to allow her to explore and learn as he had wanted within their various lifestyles, making her more able to appreciate what it was she wanted from it herself.\n\n\"You are an intelligent girl. That is a trait I hold highly, unlike my brethren here,\" Arek admitted. \"I enjoy the sentiments of Gor. There is no place for weakness within it. Even the beauty and grace of the slaves masks an inner strength designed to endure. The girls without the mental ability to think on their feet do not last long here no matter how beautiful and sensuous they are.\" He paused seeming to study her again.\n\n\"Mike says you are a business woman when you are not learning about the lifestyle,\" he tilted his head as if trying to see that in her.\n\n\"It is true that Mel left me a great deal of his company when he died as he did with his club though to a much lesser extent. In both cases, my guardians manage my shares and vote on my behalf when I am not there or have no knowledge of the issues at hand. Within the company, I have begun to set up my own small retail business which I am enjoying building with a little help from my friends,\" she smiled quoting him from earlier.\n\n\"Tell me of these guardians,\" he asked and took a package of cookies from the saddle bag before coming to sit with her again. He offered her one and made sure the water skin was within reach. \n\n\"I have two, one who looks after the business side of my inheritance and helps me understand more about the business world. The other,\" she smiled thinking of Rob, \"is like an indulgent father figure who offers me guidance in all areas of my life, protects me and loves me. I am very lucky to have them both.\" She considered her words for a moment.\n\n\"It sometimes feels that all of Mel's inner circle are my guardians though, ready to swoop down and grab me should I put a foot wrong. It can be a bit claustrophobic at times. I look forward to the freedom of coming to places like this because it allows me to step away from that for a little while,\" she chewed her lip and looked up at him. \"It's my own doing of course, after the trauma of... the accident; I was a basket case and needed that sort of looking after.\" Bella sighed at the admission.\n\nArak had taken the time to read about the accident and the fact that she had been trapped in a bullet-ridden car with two dying men. He would have been surprised if she wasn't traumatised to some degree but he said nothing about that time in her life. He knew next to nothing about the girl before him and he wanted to know who she was now, not what she had been.\n\n\"I don't worry much about the past except to acknowledge that it shapes who we are now. It is the now that I am interested in, girl,\" he said rather sternly. \"I wish to know why you are here, what motivates you to this lifestyle. If you are just a very good actor or if you have a genuinely submissive soul.\"\n\nBella once again spoke at length. She detailed her naivety and how her time with Sire had taught her about her likes and dislikes as well as her limitations. More importantly the rules of safe, sane and consensual sex he had lectured her about. She spoke about how Hunter had shown her that even though she was broken she was not beyond repair and she wanted that deep love built on an unassailable sense of trust and admiration in her life again. Finally, she spoke of Stephen and the multi-faceted layers in his personality. He had made her realise that she could never find that love by experiencing these two week play dates, that it was something that needed to be built over time. \n\n\"And now you are here experiencing the beauty and barbarity of Gor,\" Arak finished for her. \"What have you learned so far in your time here?\" He leaned forward as he spoke. She was highly astute in her observations and her lessons learned, and he wondered how she had interpreted this world for herself. \n\n\"I have found that I need a voice or at least someone who will listen to my voice when I have something to say other than, Yes, Master or how may I serve you Master. Even if it's only in the quiet of the night or times that we are alone. I like having my voice heard and being allowed choices,\" she chewed her lip wondering if she had just insulted him when he laughed long and hard.\n\n\"I struggle with that too, sometimes,\" he continued to laugh good-naturedly. \"I often wonder what goes on inside your head when you chew your lip like that. It seems so much more than a nervous habit.\" Bella giggled self-consciously and stopped chewing her lip. \"Tell me what you were thinking just then?\" Arak asked gently.\n\n\"That I have told you my story so far. I do not know enough about you to know if my last words would have offended you,\" she said quietly and again he laughed long and loud.\n\n\"I am not like the men you are used to associating with, girl. I'm a landscaper,\" he held out his callous rough hands. \"I admit I have a degree as an architect, but it was always landscaping that appealed to me rather than the buildings. Once I worked that out, I went back to school part-time and did horticulture, became an apprentice with a mason and made friends with a few of the trades who showed me the basics of plumbing and carpentry. That way I could build the things I wanted as I wanted.\" He turned to look at her and smiled widely.\n\n\"This,\" he patted the rough granite he sat on, \"is what I love though. Natural rock and stone make a landscape. They change the mood of a place just by putting them in a water feature or polishing them up a bit. I aspire to real old school stone masonry but at best I am a hack,\" he said self-deprecatingly. \n\n\"You should go and visit Sir Stephen's castle. They are restoring the stone work there, and it looks almost perfect,\" Bella enthused. \n\n\"Lives in a castle, does he?\" Arak said in a mocking tone and shook his head. \"I might just have to check that out.\" He stood once again. \"Let's swim and then you can begin flirting with me properly, who knows, now that I know that collar holds little value here, you may even get a reaction from me,\" he smirked and began pulling off his shirt.\n\nOnce more Bella marvelled at his bodybuilder's physique, realising now that his work was probably the reason for it if he was lugging around huge granite boulders. Unabashed, he stripped to the skin and held out his hand for her to join him. Standing, she shed her camisk easily and squealed as he picked her up and ran towards the chilly water. \n\nSwimming out to the centre, Arak pulled himself up on a submerged rock. \"In the dry season you can see this rock standing up like a pedestal in the centre of the dam,\" he announced. \"Come,\" he pulled her up onto the smooth and slightly slippery surface. \"Its polished surface creates a myriad of patterns when the sun hits the water beneath it. You will return when it is visible, we have had far too much rain lately to see it properly.\" She watched as Arak dove from the pedestal and began to float on his back a small distance away.\n\nUnsure if it was the challenge he put forth or her own vanity that drove her, Bella decided to play the flirting game. She had been playing it all week in the evenings with her dances to see if she could get a reaction from the usually distant Arak. She slipped down into the water, soaking her hair and climbed back up on to the pedestal getting carefully to her feet. Arak splashed some water at her, and she smiled sweetly and put a finger to her lips, humming a sweet little melody.\n\nRotating her hips in small slow circles, she reached up gathering her hair and twisting it as her arms rose sinuously above her head, draining the water from her hair down over her body. She arched back slightly balancing precariously on the polished stone beneath her feet and pulled the twisted rope of her hair forward tilting her head back enjoying the small drops of water that squeezed from its length.\n\nLetting go of her hair, she followed the droplets over the curves of her shoulders and down over her breasts cupping them and pushing them up before running her thumbs over the excited pointed nipples. Her humming continued to drive her hips as her hands moved slowly down and over them accentuating the movement before momentarily dipping between her soft thighs and brushing the dina mark she bore to mark her slavery in Gor. \n\nShe let her knees buckle and she slowly lowered to kneel widely exposing the dina mark and fluttering her hands away like the wings of a butterfly, exposing herself to the man so eagerly watching her. She leaned forward scooping the water from the dam up in large double handfuls to wash down over her body, the small hum continuing throughout. \n\nFeeling better balanced, she arched backwards and took her breasts in her hands again, massaging them roughly as her hips rocked to the unheard rhythm of her melody. The sun warmed her body just as the water cooled it, and she heard Arak swim closer as she danced and displayed herself for his enjoyment.\n\nHer hips thrust forward then as she wantonly showed her heat, glistening between her legs, leaning all the way back until her hair became filled with water again. Kneeling up, the water ran down over shoulders to pool in the cups of her hands under her breasts teasing the nipple that had warmed again under the sun's summer rays. She risked a peek at him as her hips rocked towards his floating form, and she smiled seeing his own eyes glued to her.\n\nBella slid her hand down over her belly her, humming interrupted momentarily by a seductive purr as she let a hand trail between her legs and over the soft glistening lips of her cunt. She stared at Arak and in a move that even surprised her she licked her lips slowly making them glisten as equally as her lower lips. She pulled her hands down to her knees realising she was becoming too carried away.\n\nArak edged closer to the pedestal and growled with a husky voice, \"What of Steelheart when you dance so lewdly for another man?\"\n\n\"He gave me to your keeping and instructed me to serve you in all ways, regardless of his feelings of ownership,\" Bella panted truthfully. She raised her hands once again to the glistening lips of her cunt, letting a finger slide between them to tickle at her clit. She could feel the sweetness of his desire washing over her and embolden continued. \"I have wondered why you were never moved to touch me this way.\" \n\nIt was then that she felt his hand on her inner thigh urging her legs wider. She looked up and gazed into his eyes purring, \"How may this girl serve you today, Master?\"\n\nArek pulled her from the pedestal where the depth of the water would not hinder him and dragged her a short distance back to the shore. He pushed her to her back in the shade on the discarded palm fronds of the trees that swayed in the gentle breeze and dove between her legs, seeking the source of her heat. His rough calloused hands gripped her thighs as he held them widely and split the lips of her cunt with his tongue.\n\nHe ate her wildly using not only his tongue, but his teeth on her clit, sending jolts of white hot pain lancing into her brain and causing her to cry out. After what seemed like an age in which she came so close to ecstasy but he never let her quite go over the edge, he stood up and grabbed a water skin and threw it at her.\n\n\"Clean my cock and then I will give you the fucking you deserve,\" he growled. \n\nBella uncorked the water and sank to her knees before him with a whimpering, \"Yes Master,\" that held all of her pent up need and heat. She splashed the water over his cock liberally and then began to kiss and lick any fine granules away spitting them to the sand beside her. Having cleaned his cock and sucked his balls thoroughly, she felt his hand tangle into her hair and dropped the water skin.\n\n\"Fuck,\" he gave her little chance to get used to his size as he thrust further and further until she held him all, and he pulled her head tightly to his pelvis choking her momentarily. When he pulled her away, she gulped at the fresh air but kept her mouth open wanting more. \"You really are a masochistic little slut aren't you?\" He thrust into her wide open mouth again. \"I saw Steelheart fuck you as you were all trussed up like a pig ready for the spit.\"\n\nA small spark in Bella's brain registered his words with shock, but she had little time to take them in as he used her mouth roughly. He gripped her hair hard making her squeal loudly around his cock. \"Fuck!\" he roared at the empty artificial beach and painted her tongue with his cum.\n\nOnce recovered, they swam again and ate a pre-packaged lunch from the kitchen. Although he had said, they would drop the affectations of being Gorean for the day she still knelt and obeyed his every command, and he kept his alpha personality intact. Even without all of the fanfare and trappings of the Gor lifestyle it was who they truly were at heart. They talked a great deal about their day to day lives. Bella enjoyed his curiousity about her as much as his lack of knowledge about Mel and the men who surrounded her daily on all sides, protecting her from the world at large. It felt strange to not have that cloud of the past year hanging over her.",
        "They stayed on the beach until the sun touched the water turning it from blue to muted gold. He had used her well during the course of the day, fucking each of her holes and revelling in the compact tight little body she gave up willingly to his wants and needs. The ride home was uncomfortable for Bella after such use, and she winced as he pushed their mount into a gallop on the return journey, making him chuckle in a self-satisfied way.\n\n\"When we return,\" he murmured close to her ear, \"Things will be much as they have been. People here jockey for power and renown and I must remain unassailable. Most men here would not care because you are a slave and slaves are meant to be used often and by many. Having said that, fucking you could be seen by those with their own agendas as a weakness to exploit and a show of disrespect while you wear another man's collar if he is not here to offer you to me himself. He publicly asked me to take you under my protection, nothing more than that. The other men do not know of this arrangement you have to gain experience here under false pretences.\"\n\n\"I understand, Master,\" Bella said quietly. \"I will not speak of it.\" She chewed her lip wondering if she should have been so honest and forthcoming with Arak that morning. The world she lived in was a complicated place, and her mind drifted to Stephen and his acceptance that she would serve others during her time here. Perhaps he had thought with the restrictions he had placed on her that it would not occur, and guilt nagged at her. She had flirted willingly. She had wanted what this man offered her despite her feelings for Stephen. Was she truly such a slut, she wondered. She fell into a troubled silence as they rode towards the mammoth home of Master Kolton.\n\n*****\n\nThat evening and the following day Bella settled back into the daily grind of service to the Gorean home in which she dwelled. Dancing and service, chores and sleeping on the small but soft mattress at the foot of Arak's bed. The only concession afforded to her after their time at the beach being a deep and powerful goodnight kiss which left her trembling and guiltily wanting more. \n\nHer dreams though were filled with Stephen. She seemed to be always dancing just out his reach as if something stood between them keeping them apart. When she woke, she would acknowledge it was this experience and the ones she was yet to undertake that would keep them separated for some time to come. She found herself watching Arak more critically. He did not live the Gorean lifestyle in his day to day world. He was a dominant there, but there was more to him then all of this. He worked hard. He enjoyed life. He didn't appear to have the arrogance or ego that so many of the dominants she knew had. He puzzled her in some ways, and she wished once again for some time alone to talk with him.\n\nThe first night they had arrived Stephen had told her that the walls had ears in this house. She never broached anything aside of the strict formalities that ruled the world of the Gorean slave girl while in the house to which she was bound. It would seem there was an underlying distrust between the brotherhood of these men.\n\n\"Come, girl,\" Arak said in a harsher than usual tone once he had dressed. They breakfasted separately as was usual, and Bella began her chores. It was close to the midday meal when Stephen arrived in the kitchen with a wide smile. Dressed in black leather and looking like a dark god-like creature to Bella, she squealed with delight, scaring the girl who peeled potatoes beside her.\n\nShe wanted nothing more than to run into his arms and beg his kiss, but instead remembering her place she took a deep breath and glided slowly over to where he stood. \"It is so good to see you, Master, welcome back,\" Bella beamed. Still grinning, Stephen picked her up and held her tightly before kissing her.\n\n\"I have missed you more than I can say, little one,\" his deep bass cocooned her with his words. He carried her from the kitchen back through the long corridor and up to his room. Closing the door, he kissed her hard pinning her to the wall with her feet still raised off the ground. \"It is a shame we will not have more time, to indulge my demonstration of how much I missed you,\" Stephen gave a half smile and kissed her again pressing his erection against her. \"You will be leaving this place today; you are needed back at home,\" Bella's eyes widened and felt a feeling of dread settle in the pit of her tummy.\n\n\"Dorothea?\" She whispered unable to voice the whole question.\n\n\"Dorothea is quite well and will be waiting for us when we return,\" Stephen murmured. \"Could you trust me that this news is better heard at home amongst friends?\" He saw her panicked face and the way she gnawed at her lip told him that she was thinking the worst possible things and sighed carrying her over to sit on the bed with her in his lap. \"Vince is dead,\" he said bluntly, knowing no other way to tell her, but in this manner. \n\n\"No,\" Bella shook her head. \"I saw him only a week or two ago. He was fine. I forgave him...\" her mind raced with the other, not so charitable things she had said to him. She felt sick and light headed, the room began to spin around her as she whispered, \"How?\"\n\n\"We're not sure yet,\" Stephen said pulling her close as she paled and became unsteady on his lap. \"You are one of the strongest women I know, Bella. You can face this. We will all be there for you.\"\n\n\"Jenny! Oh, god! What about Jenny?\" Bella gasped as tears began to run down her face. Suddenly she blinked and her head came up to look at him. \"I can't leave. I made a commitment. I promised. Kolton made me promise. I can't leave,\" there was an air of desperation in her voice. \n\n\"Mark is downstairs filling both Mike and Kolton in on what has occurred,\" Stephen said gently. \n\n\"I have to thank everyone. They have all been so kind, so good to me here,\" her voice still held panic as her mind raced. \"My chest, it's in Arak's room,\" she saw the look that flashed momentarily, so she added, \"beside the pallet I slept on at the foot of his bed.\"\n\n\"Slow down, little one, take some time,\" Stephen tried to hold her tightly to him.\n\n\"If I stay here I will think too much, and I need to do this, please let me go and thank my new friends,\" she looked up at him with teary eyes. \"You are right. I need to go home, I don't want to embarrass myself by losing it here in front of these people. Let me do what needs doing, I promise I will sit and think and take it all in when we leave this place.\" She wiped her face and sat up straighter looking him in the eye. \"I will be okay,\" she said and gave a half smile. \"Please let me do this.\"\n\n\"I will take you down to Nyx. You will stay with a friend at all times, someone who knows you well. You will not run away to be by yourself,\" Stephen said and regretted his reference to her past flight from any emotional situation. \n\n\"Yes, Sir Stephen,\" she whispered acknowledging that she could not escape her past or who she was no matter how much time passed.\n\n\"Really, Steelheart? You punish her as soon as you arrive when she has done nothing but brought honour to your name,\" Arak accused as they ran into him in the corridor after leaving the room.\n\n\"I have not touched the girl,\" Stephen muttered indignantly, \"She cried for her own reasons.\" Arak looked dubious. \"It is none of your concern, she leaves today.\"\n\n\"Are you okay, girl?\" Arak's dubiousness had turned to surprise, but his voice was harsh thinking that she was being punished for their day on the beach.\n\n\"One of my...\" her voice caught as she went to say friend. She had withheld that friendship from Vince after she had forgiven him. \"Someone close to me has died. I am sad that I couldn't put things right before he... left us... Master Arak.\" She barely remembered to put his title in place at the end of her sentence but it was all she could do to keep herself from falling apart.\n\n\"Oh shit. I am so sorry,\" Arak said breaking character momentarily. \n\n\"I was coming to find you, so it's good you are here,\" she gave a lop-sided smile. \"Thank you, Master Arak, for your time and patience and instruction. You have made my time here as near to perfection as I could have hoped. I am only sorry that we did not have more opportunities to visit the beach and know each other better. Our talks that day were interesting, and I had a lot more questions for if the opportunity arose again to speak with you plainly. Alas, it's not to be but maybe we will see each other again someday. \"\n\n\"I would enjoy that very much, sweet girl,\" Arak smiled. \"You're a lucky man, Steelheart. She could have been one of the best and brightest here in this world.\"\n\n\"In any world,\" Stephen agreed but there was an edge to his voice. \"Thank you for protecting her so well in my absence.\"\n\n\"I can honestly say that it has been my pleasure, an absolute highlight for me. I will miss the beauty and grace of your girl during the last week of the enclave,\" Arak said seriously.\n\nBella continued on through the home finding those that had made her stay here so wonderful. Thalia, Talibah, Elena and Nyx even though she knew she would see her again. Each cried with dismay in their farewells and eventually she found herself in the office of Kolton with Mike and Mark Millar.\n\n\"I am sympathetic to what has befallen a member of your family, girl, and therefore release you from your commitment to us. You have far exceeded my expectations and I would extend to you the opportunity to return if you like, at some future time,\" Kolton said in his strong voice. \n\n\"Thank you, Master Kolton. I appreciate you allowing this girl the shelter of your home,\" Bella said equally formally.\n\n\"You are welcome. Go then and attend to the sad business at hand,\" his voice softened slightly, and he gave a rare small smile.\n\nThe three men left with Bella and went out to the helipad. Mark and Stephen helped Bella in, wrapping a thick cloak about her shoulders. Mike did not board, he said he would return in time for the funeral. Bella accepted her chest from Arak, then they were airborne and once again she had to face another crisis in her small world. When would it ever end? She felt like she had lived a lifetime of sadness in less than a year and her half full glass, suddenly looked half empty again. \n\nSilent tears began to course down her face, and she felt Stephen's hand take hers reassuringly. It was Stephen, big strong protective Stephen who she thought she might even love, but at that moment she couldn't bear to be touched. Looking at him apologetically she pulled her hand away covering her face and the large sob that issued from her mouth. \"Had she done this by spurning Vince's friendship?\" Bella asked herself remembering his face and his pleading voice that day when the police took him away. Her actions made her cry all the more because she could never make peace with him now.\n\n*****\n\nBella had stood by the graveside between her parents. They had seen Vince grow up as a part of his extended family and after the loss of Mel they were in disbelief that someone with such a bright future could have taken his own life. The picture panned out as the reporter spoke, and Bella wondered, if she had to do it all again, if she could accept Vince's friendship for the sake of her parents and Jenny. \n\n\"I don't care what the gossip mongers say, he was a good boy who loved his father,\" Joe had stormed angrily away from any television showing the story on the news. They had taken the news worse than her, Bella thought, because there was still a small piece of her that blamed him for Mel's death. She had forgiven him, and she had meant it but the wound inflicted when she lost Mel was so deep that she doubted she would have ever fully made peace with Vince and accepted his friendship. Perhaps she reasoned his wound from his part in the events leading up to that dreadful day were too deep to heal properly, and his guilt consumed him. \n\nBella had flown from the Gorean enclave to Jenny's home where she had met Rob and Kurt and changed into sensible clothes in which to go home to her parents. She had remained long after the funeral, spending time with her parents and attending the reading of his will in which she had been named. \n\nJenny's mother who had arrived and all but ignored her daughter spat outrage at the lawyers and everyone else in that room as his wishes were read. She vowed to contest the will and gain back what rightfully belong to her family. In truth, had she asked, Bella would have gladly given her what she wanted. As the beneficiary of all but a few token gestures to friends and some charitable organizations, Bella was the sole beneficiary of most of his legacy such as it was. Stunned into silence by the woman's vitriol, Bella had said nothing as arguments and angry words raged around her.\n\n\"First the father and now the son, your brazen slut,\" the woman pointed her finger at Bella in accusation. \n\n\"All you had to do was ask, and I would have given you what you wished,\" Bella said sadly. \"Now that you have insulted not only me but also my friends and family, Vince's friends and family, and blackened his memory you can go fuck yourself.\" Bella smiled sweetly, turned and left the room not believing she had spoken to the old woman like that, but she continued walking, making it to her father's car before she began crying again.\n\nShe heard footsteps on the gravel behind her and without turning around, she said, \"I know I shouldn't have reacted like that. Please don't make me go back in there and apologise.\"\n\n\"I wish I had said that,\" Jenny's soft voice said from behind her, making Bella turn around with a look of astonishment. \"Let her waste her time contesting the will. She won't win and it will give her something to do instead of trying to find me a new husband despite knowing that I am a lesbian and that is the last thing I want.\"\n\n\"Jenny, I am sorry. I never expected... I mean I just...\" Bella couldn't find the words.\n\n\"He was my son. Misguided and flawed but my son and I loved him dearly. He told me you forgave him; you know. I thought he would be alright after that. He seemed so much better. Thank you for that but I think he had some demon's he just couldn't escape. He loved you like a little sister. It hurt him to see you with his father. It blinded him to what his grandather was plotting in the end,\" she gave a rueful smile and shrugged, \"If a mother cannot make excuses for her boy who can.\"\n\n\"I am so sorry,\" Bella sobbed, \"This is all my fault!\"\n\n\"Stop that this moment,\" Jenny commanded. \"I know you loved him but Mel was a true bastard. He did what he wanted when he wanted and damned the consequences. That attitude was as much a part of his success as it was his downfall, and the rest of us are left to pick up the pieces.\" She wasn't angry or even bitter, she just stated the facts in an unemotional way. \"I am sure once you were in his sights he gave you little choice either.\"\n\n\"I loved him,\" Bella said simply. \n\n\"We all did in our own way, even Vince. All of this, Vince and what happened, it's Mel's fault not yours, and I bear a lot of the blame for his death and your suffering but we must move on. Promise me, no matter what, you will take the gifts given to you and use them to have a glorious life. They loved you and wanted that for you.\"\n\n\"I will, I promise,\" Bella said softly touched by her honesty and support.\n\n\"Good then I can move on as well. I wanted you to know from me that I would be selling this place,\" Jenny smiled sadly. \"Jess and I are going to travel for a bit, do some volunteer work in third world countries and see everything we can see.\" Bella wasn't sure how to react, and she looked blankly at Jenny. \"I need to move on from the ghosts now, start a new life, away from here and her,\" she looked back towards the house where several people stood watching them. \"I think its time for you to leave it all behind too now, don't you?\" Bella frowned as she took in the words. How could she possibly do that and keep her friends and career intact? \n\n\"It's almost December and what better time to let things go. I am planning a huge New Year's Party to say goodbye to old friends and new. Come, and we can start the New Year with a pact to move on and live life to the fullest. I would like you there to decide if you want anything of Mel's from the house before it sells.\"\n\n\"I just, I don't know if...\" Bella stammered.\n\n\"You let me know, your mum and dad will be there so even if you can call by. I know we don't exactly live in call by territory here but see what you can do, you have a company helicopter after all,\" she laughed and hugged Bella again. \"It will all be alright you know. Everything will work out just the way the old bastard would have wanted it once he was gone.\" Jenny started to cry then her bravado finally crumbling. \"I blame myself for this and I need to know you will live an amazing life.\"\n\n\"It's no one's fault, it's just a huge case of bad communication,\" Bella had meant to joke lightly but began to cry with her. They were soon surrounded by friends who had become concerned. Bella let herself be guided into the car and driven home. As Managing director of the company Kurt had been present at the reading of the will but had not remained afterwards instead returning to the city in the company helicopter. \n\nAfter ensuring that she was safe and secure with her parents, Stephen too had left the day after the funeral to attend to some urgent business. Having time to herself and no computer or briefcase to keep her occupied, Bella had spent a great deal of time in her childhood tree just thinking about the last year and all that had happened. \n\nAfter the reading of the will, she sat in that tree until sunset, marvelling at the beauty of it until her father came to get her for dinner. She smiled and climbed down hugging her father, \"I think I am ready to move on,\" she smiled and then laughed as his eyebrow rose in a questioning manner. \"I'll tell you about it over dinner,\" she continued to laugh.\n\nThe small family sat down to eat, and Bella's good humour remained as she dug into her a wonderful fettuccine dish that she had grown up with and loved. It was comfort food, her mother always knew what she needed, and it filled her with warmth that had begun once she had really thought about her conversation with Jenny.\n\n\"This is so good, did you change the recipe?\" Bella asked around a fork full of food. \n\n\"Don't talk with your mouth full, Bella,\" her mother admonished her but smiled as she watched her daughter enjoying the food. \"It is the same as it has always been,\" she laughed.\n\n\"Come on Bella, stop flattering your mother and explain what this moving on is about,\" Joe joined in the good humour.\n\n\"When Jenny and I talked after I was so rude, she said some things that were hard to hear,\" Bella began.\n\n\"That wasn't rude you should have heard what you mother said to that woman after most people had raced after you,\" Joe chuckled. \"I didn't need to say a thing.\"\n\n\"Mother!\" Bella gasped.\n\n\"Nobody can talk about my baby girl like that and expect me to say silent,\" she said indignantly. \"Your father was there as your lawyer; he couldn't speak but I had no such worries, let me tell you,\" she threw her napkin on the table and huffed indignantly.\n\n\"I never got the chance!\" Joe defended himself. \"She was the most beautiful, powerful she-wolf protecting her cub and I was very proud.\" He reached out and took Rosie's hand, while she blushed and smiled sheepishly.\n\n\"I am so lucky to have you as my parents. I don't think I ever really understood just what remarkable people you are until today. I love you both so much,\" Bella said and took their free hands. \"Never once did I feel like you put your career or your friends or anything before me, if anything I felt smothered but I realise I was a bit of a lost lamb and may have needed that,\" she gave them a lop-sided smile.",
        "\"What a good girl we have raised, hey Joe?\" Rosie clucked. \"She finally appreciates us.\"\n\n\"She was always a good girl, even when she wasn't,\" Joe laughed.\n\n\"I have so many people who love and care for me, Stephen and Kurt and Rob and some you probably haven't even heard about yet,\" Bella rushed on. \"I think I like your idea of a house warming party where you can come to my house and cook for everyone. I will even give you a helper for cooking that you can train to do things just the way you like,\" she grinned thinking Jake would love the idea. \"Dad you could choose a wine or drinks or whatever and tend bar, you're so good at that. What do you think would you like to help me host my first grown up party and meet my friends properly?\"\n\n\"Three hours ago you couldn't stop crying. Now you want to host a party?\" Rosie's face showed concern.\n\n\"I have spent the best part of this year crying and shying away from the world. It took Jenny to point out that this isn't the life the people I cried over wanted me to have. I need to move on and start living. Not just going through the motions and pretending to live. I have done the ground work. I have started a career, I have a beautiful home or it will be in a week or two when I finish decorating it and most importantly of all I have so many people who care about me and want me to be happy, not sad all the time.\"\n\n\"I barely saw Vince in the last six years. His death affected me, how could it not but it is also tinged with a feeling of regret and anger. What he gave me in the will was a wonderful gift but I don't deserve it. The old biddy can have what she wants if it means we never have to hear from her again. Everything but the company stock that is. I won't let her have any part of Mel,\" her voice turned hard. She turned to Joe, \"I trust you to look after all of that and do what's right. I don't want to deal with it, I want to move on and I want to be happy again.\"\n\n\"You think the party will help you do this?\" Joe asked seriously.\n\n\"It would be a good start. Prove that I am not broken beyond repair,\" she said with less excitement as she took in her parents' concerned faces.\n\n\"Then I say yes. I would very much like to meet your friends. As long as your mother has help with the cooking and doesn't spend all night in the kitchen,\" Joe squeezes Rosie's hand, \"You know how I love to dance with your mother.\"\n\n\"May I invite two friends, who will help with the party, up here to meet you?\" Bella asked her mother who hadn't agreed yet.\n\n\"Your friends are always welcome in my home, Bella,\" Rosie smiled indulgently. \"I don't think I need help cooking though,\" she frowned.\n\n\"I promise if he doesn't win you over, you can be stuck in the kitchen and deal with Dad's grumbling all night,\" Bella giggled and began to make plans with her parents.\n\n*****\n\nJake had oozed charm from the moment he arrived with flowers for Rosie and a special bottle of homemade baby mozzarellas as well as a one of her father's favourite wines. Best of all for Bella he had brought Dorothea with him. As this was going to be a trial run, he had invited Stephen and Kurt and Dianne up the following night for dinner and to escort the beautiful Bella home on Sunday as per her request.\n\n\"Hey gorgeous,\" Jake picked up Bella and spun her around making her laugh. \"You're looking fabulous, must be this magical food of Rosie's kitchen everyone keeps telling me about.\" He chuckled and winked at Joe. \"I hear a few young guns have tried to steal your wife away without success. Never fear, I'll get the job done,\" he then swung to Rosie, \"I am your slave, take me where you will oh goddess of the kitchen.\"\n\nGiggling like a schoolgirl Rosie blushed and, taking her gifts with her, led him into the kitchen as Joe groaned loudly and rolled his eyes. \"Why must your friends always flirt with my wife, Bella,\" he shook his head. \n\n\"That's okay, Dad. I brought a friend for you too,\" Bella beamed and Dorothea laughed. \n\n\"I'm not quite in the same league as those young studs, but there's something to be said for experience,\" she continued to laugh.\n\n\"Ah well, while that cat's away we mice can play,\" he took her hand and kissed it. \"Experience and beauty I am honoured.\" He said smoothly.\n\n\"Perhaps not quite yet, there is a large amount of groceries in that car. You will find with Jake that enough is never enough,\" she continued to laugh. Bella was amazed by the amount of bags they had in the car. It took the three of them several trips before it was all in the kitchen, and Rosie looked at it all startled.\n\n\"The way I see it, I have access to this kitchen goddess for...\" he checked his watch. \"Damn too late for lunch today?\" He waited for the affirmative nod then spoke again, \"Two dinners, two lunches and two breakfasts and I intend to make the most of it so I didn't want any excuses about not having the right ingredients even though I might have missed something.\" He considered the pile, \"Did you want a duck?\"\n\n\"I'll make you duck, cheeky boy,\" Rosie aimed a cloth at his head and he dutifully ducked making them all laugh.\n\n\"No worries, I bought one just in case,\" he grinned as another dishtowel flew past his head.\n\n\"I'm getting out of the line of fire,\" Joe laughed and exited quickly followed by Bella and Dorothea.\n\n\"You do look wonderful,\" Dorothea said as they walked outside. \"You seem genuinely happy. I had thought Jake was bringing me here because you had retreated inside yourself again.\"\n\n\"Just the opposite in fact, I feel better than I have in a long time. You know, I think I can make it work and have the best of both worlds if I am careful about choosing my friends and lovers.\"\n\n\"It's always been that way,\" she smiled. \n\n\"Not for me it hasn't,\" Bella shook her head. \"With Mel it was a twenty-four hour a day position, no real normalcy, not that we had a chance to test that. Even with Stephen, when we went shopping there was always an expectation that I would do as I was told not as I wanted. Rob spoils me and lets me skate on a few things, but I do not delude myself that he would order me back into the cage if I stepped out of line at home or the club. Even Kurt has disciplined me or had Stephen do it for him when I stepped over that invisible line at work. I have always felt so boxed in, suffocated,\" Bella explained. \"Even by you and the girls to some degree,\" she admitted sadly.\n\n\"You were unwell for so long we all just did our best to look after you how we knew best,\" Dorothea could see her point and knew that it was a fairly sheltered life she endured.\n\n\"I think I could love Stephen; he makes me feel,\" she chewed her lip, \"Precious and special and desired.\" \n\n\"I hear a but in there...\" Dorothea said cautiously. She loved Stephen as she had loved Mel and did not want to see him hurt.\n\n\"He's so intense. Once I commit to him, the exploration is over. It will be all his way all the time. He has said he will not share or entertain any more training once that occurs, and I am not sure I am ready for that even though I know I want that sort of commitment. I know I am not making sense,\" she shook her head slightly. \"I feel like I am coming out of the gloom now. I can see so many possibilities for a future and well I don't know if I am ready to settle down into a life as lady of the manor, yet. Just swapping one cage for another\"\n\n\"Stephen has asked you to give up the training schedule?\" Dorothea was stunned. \n\n\"No, he said he would wait patiently and that he would not like to see me break any commitments I had made. He would not respect that in any submissive,\" Bella went back to chewing her lip.\n\n\"Then why are you fretting?\" Dorothea laughed. \"After this funeral and the time it will take to sort out the legalities you will have to push the rest of your training into next year. That will give you time to date the men you have come to know and like as well as Stephen, let Jake throw his hat into the ring if you are looking for someone to make you laugh. The times you have stood up to Kurt and Rob and even Stephen for that matter and told them what you want, have they ever denied you?\"\n\n\"No, but I feel... beholden to the ideal that Mel created around me,\" Bella admitted.\n\n\"I think you hold yourself to that ideal more than anyone else ever did,\" Dorothea nodded. \"Find out who is on the training list. Jack definitely will be but did anyone else offer from the stake holder's meeting? If you don't know, ask Stephen. I would bet he has it memorised and is counting the days,\" she grinned. \n\n\"That's just it. Is it fair to make him wait for a maybe?\" Bella asked.\n\n\"When I last saw you I believed you were falling in love with our handsome Sir Stephen. Has Vince's death changed you so much that those feelings have faded?\" Dorothea looked at her as they walked under her favourite climbing tree.\n\n\"I have spent so much time sitting up in this tree in my lifetime, it's my go to place if I need to think,\" she smiled sadly. \"I don't have anywhere like this at home or work.\" She shrugged, she was stalling and Dorothea knew it. \"If anything, Stephen and I are closer, more intimate. I know he can give me what I need, what I want.\"\n\n\"There is still a but in there...\" Dorothea looked at her critically. \n\n\"He's Sir Stephen! He has money and power and prestige and a towering reputation like Mel. What if something, I mean what if...\" she chewed her lip as she struggled. \"What if I just wanted a regular man, say a landscaper or a tradesman, who wasn't in the spotlight and open to attacks from others.\" Dorothea looked up in surprise. This wasn't what she had expected. \n\n\"Landscaper sounds pretty specific, have you met one?\" Dorothea pushed not wanting to touch on her fear of losing Stephen the way she had Mel and his son just yet.\n\n\"Yes, in Gor, not that I know him that well, but I might like the opportunity maybe,\" Bella said unsure of herself.\n\n\"Say you got to know this landscaper better, fell in love with him and found out that he had a dark past that kept coming back to haunt him and put him in danger?\"\n\n\"Is that true? Do you know him?\" Bella asked in a rush.\n\n\"Sweet girl you haven't even told me his name how would I know that?\" Dorothea laughed. \"Bad things happen in everyone's life. Admittedly, you have had a very bad time in the last year but if you want us all to believe you are strong and able to manage your own life now, you can't let those shadows cloud your judgement. Stephen has no enemies. He is a fine upstanding man known for his fairness and his strict moral code, nothing untoward will happen to him any more than a landscaper or a banker or a beach bum for that matter.\"\n\n\"It was only a mention of him anyway. I will not see him again most likely. His name was Arak,\" Bella said softly. \"I might have liked to get to know him though,\" she tilted her head and chewed her lip.\n\nDorothea knew Arak. He was a friend to Mike Millar and came to the club occasionally. He was hardly just a landscaper. He was an architect, designer, sculptor and horticulturalist as well as having an engineering degree of some kind. He was in high demand, but Dorothea said nothing wondering if Stephen knew that to smother this girl right now would mean losing her. She needed to spread her wings. She was so young and new to their lifestyle that she needed to explore it. It would be so easy to call her a spoilt brat but the reality was she was a caged bird who was doing her best to make that cage bigger without having to fight for every centimetre.\n\n\"You don't have to do anything you don't want to. Living up to your commitments is a good thing but don't get dragged down by them either. You are rich enough and powerful enough to tell everyone what to do, except maybe Rob, who owns more of the company and club than you do,\" She laughed. \"Go climb your tree and think about that, you don't have to stay in that box they created for you. I am going to go and flirt with your father and see if it's cocktail hour yet.\"\n\n*****\n\nThe weekend was wonderful. Bella was amazed at the amount of food that came out of her mother's kitchen for breakfast and lunch and during the afternoon as the other three guests arrived. Kurt and Jake vied for Rosie's attention and she giggled throughout the afternoon as everyone complimented her skill in the kitchen and called Jake a talentless hack. Rosie assured them he was a wonderful apprentice, making even the stoic Stephen laugh loudly.\n\nStephen was affectionate throughout the afternoon, and Bella enjoyed basking in the warmth of his attention as the small group laughed and joked all through the evening and in the case of the men on into the morning hours. Dianne went to bed early, apologising for her lack of stamina as she wished them all goodnight. To the high-spirited jeers of their friends Kurt walked her up to their room promising to return shortly.\n\n\"Sir Stephen could I call on your chivalry to take this old lady for a walk in the fresh air before Rosie brings any other tasty morsels out of her kitchen.,\" Dorothea asked.\n\n\"Of course, my lady,\" he smiled and stood excusing himself from the table.\n\n\"I'll help you clean up mum,\" Bella suggested, \"I don't know that Jake and Dad have had even a minute to talk in the last twenty-four hours. You have been keeping him all to yourself in that kitchen.\" She stood and gathered the detritus from the three-course meal they had just consumed.\n\n\"Thank you, baby,\" Rosie smiled, \"There isn't much to do in there though, Jake is a very clean cook. He likes his workspaces clear,\" she rose and began to clear the table with Bella. \"It's nice having your friends here, I think I believe you are happy now. When is Dianne's baby due?\"\n\n\"What?\" Bella spun around and faced her mother.\n\n\"Oh, you can't hide things from me. She's fussy with some food and eating large amounts of others. She has a small belly and the way Kurt is fawning over her like she is a fragile china doll all tells me I am right. So you can at least let me know when to knit some booties for the baby shower.\"\n\n\"She hasn't said anything Mum,\" Bella looked up at the ceiling wondering if it could be true. \"I know she has been seeing a doctor recently maybe she is just unwell.\"\n\n\"Oh, Bella you make me laugh sometimes. Here you are a woman yet you know so very little of women's things,\" she laughed, the wine having made her giddy and talkative. \"It's okay, baby. I will ask Kurt when he comes back down,\" she winked and hugged her daughter who had begun to chew her lip for the first time that evening.\n\n\"Mother I don't think you should, I mean if they haven't told anyone,\" Bella said, \"There may be a reason.\"\n\n\"I am an old woman. I can get away with asking these questions,\" Rosie grinned.\n\n\"We manly men are going out to the garage. To smoke cigars and tinker with greasy engine parts,\" Jake announced in a deeper than usual voice as he carried the last of the wine glasses back into the kitchen. He kissed Rosie's cheek, \"Thank you for a wonderful day my kitchen goddess.\" He then turned to Bella, \"Thank you for finally inviting me to meet your mother. I love you, little one.\" He kissed her forehead and walked back out toward the dining room.\n\n\"Well, that's them gone for the night,\" Rosie shrugged. \"Feel like an old movie with your Mother after we finish here? Maybe Dorothea can join us.\"\n\n\"That would be great,\" Bella smiled lovingly at her mother.\n\n\"Thank you, Sir Stephen,\" Dorothea curtsied as he brought her into the other ladies.\n\n\"No, it is I who should thank you, I believe I needed that walk to clear my head more than you did,\" he smiled. \"Thank you for the most wondrous meal, Rosie,\" he bent low to kiss her cheek. \"Sleep well if I do not see you again tonight, Bella,\" he bent and lightly kissed her lips before walking from the kitchen to join the men.\n\n\"Go and kiss him properly,\" Rosie shooed Bella after Stephen. Stunned by the command she went after him.\n\n\"Stephen,\" Bella called as she left the kitchen door. He turned and walked back towards her, meeting her in the shadow of the house with a questioning look. \"Umm, Mum sent me to kiss you goodnight properly,\" she blushed.\n\n\"You were always a good girl growing up weren't you?\" Stephen chuckled and took her in his arms. \n\n\"Not always,\" she admitted\n\nThis kiss was deep and passionate, and she felt the familiar buzz of electric butterflies tingling in her body as he broke the kiss and stared into her eyes. \"I have missed you greatly this week. I am glad we had this chance to unwind here before going back to the real world.\" He held her to him thinking about Dorothea's cautioning words, \"If you love something set it free and if it returns to you than it is yours.\" He would take back the Gorean collar and the commitment it signified, but he was determined to remain a constant dominant figure in Bella's life, reminding her of his love and future intentions."
    ],
    "authorname": "xelliebabex",
    "tags": [
        "gor",
        "slave",
        "master",
        "dance"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/possessing-bella-ch-14"
}