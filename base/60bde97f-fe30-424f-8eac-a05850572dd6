{
    "title": "Roommates Ch. 04",
    "pages": [
        "Craig awoke to the sound of giggling above him. The sun shone through the dorm room windows directly onto his face. He squinted as he slowly opened his eyes and saw two shadowy figures standing before him. \n\n\"Wakey wakey, Craigy boy!\" Brittany called out. Standing next to her, Leah stood with hands on her hips. The girls were each wearing white tank tops and nothing else but panties.\n\nCraig slowly sat up on the futon and put his hands on his head. It was pounding. Leah held out a big bottle of SmartWater for him which he happily gulped down half of. \n\n\"How do you feel?\" she asked.\n\n\"Like I got hit by a truck,\" said Craig as he leaned forward, elbows resting on his knees, staring at the floor. He slowly raised his head up to see the girls were wearing just panties and tank tops. He quickly peered into the other room to see where Steven was, but his bed was empty. \n\n\"Away game,\" said Brittany as she took a seat next to Craig and crossed her legs. \"Remember? He left a couple hours ago. You were out cold, huh?\"\n\nCraig shook his head. \"I haven't drank that much in years.\"\n\nLeah looked at Brittany and laughed. \"You had like four beers!\" she said as she sat down opposite them in a chair. She crossed her gorgeous legs. Her toes were painted black. \n\n\"I know. I'm not a drinker, really.\" Craig glanced down at his crotch to make sure nothing was showing. He was in boxers and a t-shirt. His jeans were piled up next to the futon. \n\n\"You can't hide it, huh?\" Leah asked.\n\n\"Hmm?\" Craig looked up, squinting at her. \n\n\"Your penis. It's really stuffed in there.\"\n\nCraig looked down to see his cock was running down one of the boxer shorts legs. He tugged at the shorts to make a little more room, but it didn't have much of an effect. He quickly remembered he and Leah's hookup from last night. Visions of her mouth wrapped around his dick sent a jolt to his crotch. Leah chuckled as she watched him squirm a bit.\n\n\"Last night was crazy,\" Brittany asked as she too watched him try and make room for his penis. \"I guess I wasn't being super covert over here, huh?\"\n\n\"Oh Steven! Oh God, Steven, you feel so good!\" Leah mimicked Brittany, playfully. \"You should talk!\" Brittany teased back. \"You two up there on Craig's bed.\"\n\nLeah nodded as she turned to Craig smiling. \"We had some fun, didn't we, Craig?\"\n\nCraig didn't answer. He smiled and nodded as she chugged more water. His head was pounding. \n\n\"What'd you think of it?\" Brittany asked Leah, as if Craig wasn't even sitting there. \n\n\"I think he's a world record holder,\" Leah said, turning to Craig in the process. \"I'm serious, you're hung like a horse. Have you ever seen one bigger than yours?\"\n\nCraig grew more and more uncomfortable as the conversation progressed. Not only was he blindsided by the girls waking him up in just his boxers, but they were half naked and he was hungover. He'd been awake no more than five minutes. It was all just too much.\n\n\"Umm, no. No I don't really... I don't ever see other guys like that,\" he stammered as he chugged more water. \n\n\"I've seen my fair share of naked guys and you, my friend. You're exceptional,\" Leah said as she bounced her foot in the air making no attempt at being discreet in staring at his crotch. \n\n\"So I must know. Was there a lot?\" Brittany asked. \n\nLeah nodded. \"Yes. Oh my goodness gracious, yes. It, like, sprayed the back of my throat!\"\n\nBoth girls keeled over laughing. Even Craig managed to chuckle. \n\nBrittany laughed so hard she had to bend over and clutch her stomach. \"Oh my God you guys! Craig, you have, like, so much! And once it gets started... whoa boy, watch out!\"\n\nCraig blushed as the girls continued to make reference after reference to his manhood and ejaculation abilities. He crossed his hands between his legs in an effort to hide his growing morning bulge. \n\n\"I still see you!!\" Leah teased in a sing-song voice. \"Come out, come out, wherever you are!\"\n\n\"Yeah Craig, can we see it again? I wanna see it in its normal state. Ya know, before it gets all veiny and mad at everyone.\" The girls cracked up again. They were getting a kick out of each other this morning.\n\n\"Umm.. I'm not sure I should do that, right? I mean, you and Steven-\"\n\n\"Oh, don't be silly. We're just having fun. I promise it's not bad. Please??\" Brittany dashed her beautiful eyes in Craig's direction. She knew he thought she was cute and was trying to coax him into exposing himself again. As Craig looked in her direction, he was reminded of how she had made him feel over the past few weeks. He missed her after a night of being ignored, for the most part. \n\n\"You're not gonna laugh at me, right?\" Craig said as he held his thumbs under his waistband. \n\n\"Oh my God, never. We'd probably cry before we laughed at that thing,\" Leah said as she leaned forward to get the best view. Craig took a deep breath before peeling his boxers off. He pulled them down to his ankles and leaned back on the futon. His cock was resting directly in front, on top of his balls. \n\n\"Look at that freakin' thing!\" Leah said. \"It's bigger than most guys when they have a boner!\"\n\n\"Really?\" asked Craig, genuinely surprised.\n\n\"I'm serious! It's gotta be six or seven inches and you're not even hard!\" Leah said.\n\n\"You're definitely bigger than Steven when he's soft. He's probably only a couple inches I'd say. He's a grower. You're a shower.\"\n\n\"Craig's both. He shows and he grows,\" said Leah laughing at her silly joke.\n\nBoth of the girls openly stared at Craig's penis for the next several minutes, mostly trading exclamations of surprise with each other. \n\n\"What happens if you get a random erection in class or something? Where do you even go with it?\" Leah asked, genuinely curious.\n\nCraig looked down at his cock which happened to be starting to harden. \"Umm... I kind of just lean forward and put my hands in my lap. I can hide it pretty good that way.\"\n\n\"Oh sure, just hide a nine and a half inch rod in your pants. No big deal, right?\" The girls laughed. This time Craig joined them in laughing. It really was a humorous scene. \n\nBrittany stared at Craig's dick and noticed it was moving slightly. \"Are you getting hard right now?\" she asked, looking up at him. \n\n\"He is! Look!\" Leah said, jumping to her feet and joining them on the futon. Both girls sat on either side of Craig as they watched his penis rapidly expand and widen on its way to a full erection. There was nothing Craig could do but watch. \n\n\"Soldier at attention!\" Brittany said as she fake saluted his cock. She then casually reached over and held it by the base. She gave it a gentle squeeze. \"How on Earth did you get this in your mouth last night?\"\n\n\"I only got half!\" Leah said. Craig smirked at her. \n\n\"What?\" she said. \"I did!\"\n\nCraig smiled and shook his head. \"It wasn't half. I'm sorry.\"\n\nLeah frowned. \"Well, it was almost half!\" \n\nCraig laughed again. \"Sure. Almost,\" he said, conceding. \n\n\"How do you have sex? Where does this go?\" Brittany asked as she began to sensually stroke his cock without asking permission. \n\n\"Yeah and what about condoms? Do they even fit you?\" Leah added as she slid even closer to Craig. All eyes were on his penis. \n\n\"The couple times I've done it, I didn't use condoms,\" said Craig.\n\nLeah slapped him on the arm. \"Craig! You're bad! You need to be safe!\" \n\n\"I have an idea!\" Brittany then unexpectedly ran into the other room. Seeing an opportunity, Leah took over stroking Craig with both hands. \"It's very warm,\" she commented as she pulled on his cock. \n\nBrittany returned holding up a condom package in her hand. \"These are what Steven uses! He's big so maybe they'll fit. Let's see!\"\n\n\"You want me to put on a condom?\" Craig asked, confused. Leah continued to stroke him. \n\n\"No,\" Brittany answered as she ripped open the wrapper. \"I am,\" she said with a devilish smile. She then held the condom at the tip of his penis as Leah steadied it at the base. \"Jesus. I'm not sure about this, guys,\" she said as she pulled the latex ring apart wide enough to slide over his bloated head. \n\n\"Is it gonna rip?\" Leah asked anxiously.\n\n\"I think it's juuust gonna make it.\" Brittany slid the condom down Craig's cock. He didn't know what to say as he watched with delight while Brittany eagerly slipped on the condom. \n\nShe paused halfway down. It was becoming blatantly obvious the condom was not going to fit. \n\nLeah cracked up laughing as she covered her mouth with her hand. \"Little snug there buddy?\" she asked with amusement. \n\n\"I think I need the bigger kind,\" said Craig. \n\n\"This is it. Holy crap guys this is as far as it's gonna go.\" Brittany leaned back and examined her work. The condom was stretched to the max, barely making it halfway down Craig's thick shaft. \n\n\"Whoa. Steven wears these no problem. I knew you were bigger but this is insane, Craig! Your dick is so fat! Look at that!\"\n\n\"I'm so impressed, Craig. What's it like to have such a mesmerizing penis between your legs?\" Leah asked as she sexily removed her tank top. \n\n\"It's kinda great,\" Craig said, trying to play it cool. Leah tossed her tank top aside, revealing her large breasts in a black bra. \"Can you hand me that?\" she asked Brittany pointing towards a bottle of hand lotion on the table. \n\n\"I don't even want to know why you guys have this,\" Brittany joked, handing Leah the bottle. Leah promptly squirted some lotion on her breasts, making sure to rub it in her cleavage. \n\nBrittany stroked Craig as they watched Leah lather herself up. He was hard as a rock and bursting under the tight condom. \"You know where she's gonna go with this?\" she asked Craig. He shrugged as he watched her stroking his cock.\n\nLeah kneeled in front of Craig, separating his legs to make room. \"Let me see this thing,\" she said as she took over control of the young man. \"I've got a nice and smooth spot for him.\"\n\nLeah placed his cock between her tits, slowly rocking back and forth. Craig was so big, he had more than enough room between her breasts as his penis tip jabbed her below the chin. \n\nHe moaned softly. Leah turned to Brittany and smiled as they collectively realized Craig was enjoying himself. \"How's this feel?\" \n\nCraig nodded and closed his eyes. \"It feels really good.\" \n\n\"I used to do this to my ex boyfriend. Except he didn't stab me in the chin!\" \n\nBrittany giggled. \"Right?! He's so big...\" \n\nLeah held each of her big breasts in her hands while interlocking her fingers. This created a sort of tunnel as Craig's dick grazed across her tits on one side and fingers on top. \n\nBrittany helped by squirting more lotion generously all over Leah's tits. \"I love your boobs,\" Brittany said as she watched.\n\n\"Oh c'mon. Coming from the girl who's boobs could win an award!\"\n\nBrittany smiled. \"I'm not too sure on that one, but thank you.\"\n\nCraig took the opportunity to glance at Brittany's amazing tits, nestled in her bra and tight tank top. She allowed it to happen and watched him looking mesmerized. \n\n\"Are you gonna finish already, Craig?\"\n\n\"I think so,\" he said as his voice trembled. \n\n\"Do we need to take the condom off?!\" Leah said, alarmed as she continued to bounce up and down. \"Is that gonna hold it all?\"\n\nBrittany eagerly looked down at Craig's cock sandwiched between Leah's breasts. She quickly glanced up at his face shortly before he came. He winced as if he was lifting heavy furniture. \"Ohhh fuck!\" he said as he used his hands to push his butt up off the couch. \"I'm gonna cum now!\"\n\nBoth girls watched as Craig's cock flexed and the condom quickly expanded with thick, white cream. The reservoir tip ballooned with the pressure of the cum blasts firing out from his cock. Leah kept stroking it using her boobs as she watched in astonishment. An endless supply of cream filled the condom. \n\n\"Look at that,\" said Brittany softly. She had her hand over Craig's, squeezing gently. \"Does that feel good?\"\n\n\"Fuck yes,\" said Craig. \"Oh my God this feels so good.\" He grunted with pleasure. \n\nAfter a few final bursts, Craig sat back on the couch, panting excessively. Sweat formed at his temple. His cock was still hard, hovering over his belly, moving slightly with each breath. It was comical how much cum had collected in the tip of the condom and it looked like it was about to burst. \n\nLeah reached out with her finger and carefully poked at the cum-filled tip. \"It looks like it's gonna burst!\" she giggled.\n\n\"Watch out! Don't pop it, Leah!\" Brittany warned as she too cracked up laughing. \n\n\"Are these designed to hold that much?\" Leah asked, looking up at Craig.\n\n\"I don't think so. I doubt it,\" he responded. He too laughed at the size of the cum reservoir hanging off the tip, threatening to burst open. \n\n\"A condom boob job,\" said Leah while she still stared at Craig. \"First time for everything huh? Here, let's get this thing off you.\" Leah carefully stretched out the ring at the bottom of the condom. Craig winced. \n\n\"Oo! I'm sorry. Are you ok?\"\n\n\"Yeah, it's just...ahh... it's a little tight that's all.\"\n\n\"A little? That's a good one,\" joked Brittany. \n\nLeah resumed, this time being more careful as she pulled the condom off his shaft. \"You may want to stand up for this part,\" she said as she tapped his thigh. Craig obediently stood up as she carefully peeled the rest of the condom off. She held it to see. Everyone, including Craig, stared in amazement at the cum collected at the bottom. \n\n\"This is enough to impregnate the entire dorm building!\" Leah, joked. \"Seriously you guys look at this!\"\n\n\"Oh my goodness. It's really white too!\"\n\n\"He tastes like pineapples. Well, at least he did last night,\" said Leah as she continued to hold the condom up. \n\n\"Can I try?\" Brittany asked as she raised her hand as if in class. \n\n\"Knock yourself out,\" said Leah as she handed her the condom. Craig could not believe his eyes. His penis, although half hard, twitched as he witnessed the girls' fascination with his ejaculate. \n\n\"It's so heavy!\" Brittany giggled as she held the condom up. She first hesitantly smelled its contents. \"Smells like cleaning supplies,\" she joked. \"Actually your cum smells exactly like Steven's.\"\n\nEveryone had a good laugh at that. Next, Brittany picked up one end of the condom and tilted it ever so slightly towards her mouth. At first, a very small amount rolled down the inside towards her mouth. She allowed it to make contact with her tongue before lowering it back down. She looked at the others as she licked her lips. She then made an exaggerated swallowing motion. \"Definitely pineapples,\" she giggled. \n\n\"Right?\" Leah asked, excitedly. \n\nTo everyone's surprise, Brittany raised the condom back up to her mouth and poured even more in. She swallowed again and then opened her mouth to show them that it was gone. Leah and Craig stared with their mouths wide open. \n\n\"What?!\" Brittany said with a smile. \"He tastes good and I wanted a little more!\"\n\n\"That was hot,\" said Leah who looked up at Craig. \"How'd you like that?\"\n\n\"I think he did. Look!\" Brittany pointed to Craig whose cock was already hardening again. \"He just came a second ago and look at this thing!\"\n\n\"I don't know what to say guys. This is all a first for me.\"\n\nBrittany lovingly rubbed his shoulder. \"Aww. I think you'll get used to it, Craigy,\" she said as she winked at him. \n\n-------------------\n\nThe morning was typical of most Saturdays on campus. Lazy, quiet, and peaceful. Craig and the girls hung out on the couch watching TV, chatting about this and that. The only thing that reminded everyone that this was not indeed like any other Saturday was the fact that Craig remained naked the entire time. Based on the request of the girls. \n\nTo their amusement, he obliged. Conversation occurred, laughter took place, and good company was had by all. All the while as Craig's soft yet substantial penis remained on full display. Craig had never been comfortable being naked. He always locked the door when using the bathroom. Even when he was home alone. He never used changing rooms at malls. His annual physical exam often gave him much anxiety leading up to the portion when the doctor had to look at his privates. \n\nTo say he was uncomfortable being naked all morning with the girls would be an understatement. The strange condom boob job seemed like a distant memory at this point as his post-orgasm clarity reminded him how shy he really was. \n\nLeah and Brittany did their best to make him feel comfortable. After all, their wish of a naked Craig all day wouldn't stay true if he wasn't up for it. As they chatted about various topics, one or the other would gently play with his penis from time to time. At one point, Brittany told a whole story, unrelated to Craig, as she held his penis in her hand. Almost like it was her own. \n\n\"You've been so good, Craig. I'm truly speechless with how awesome you've embraced this dynamic,\" Leah said as she sat across from Craig.\n\n\"Yes, definitely. Is it weird being naked around us?\" Brittany asked.\n\n\"I'll be honest. Yes. I've never done anything like this,\" Craig said as he blushed, looking down at his cock. \n\n\"And he's so soft. It's like he's sleeping after last night and this morning. He was a real champ, huh?\" Brittany picked his penis up for the seemingly hundredth time that day. \"It looks so nice like this. I like him when he's not all pulsing and angry.\"\n\n\"Ready to fire at us!\" Leah joked. The girls giggled together much to Craig's enjoyment.\n\n\"Seriously, it's so pretty. I never told Steven this, but his dick is not pretty. It's kinda weird looking actually,\" Brittany said looking over at Leah. She continued to hold on to Craig's dick.\n\n\"How so?\" asked Leah. \n\n\"It's long, but skinny. Like a pencil. I don't tell him that though. I don't want him to feel self-conscious. Especially when things like this right here exist in the world.\"\n\nLeah turned her attention to Craig's gradually hardening cock in Brittany's hands. \"It sure is pretty, you're right. It's like a work of art.\"\n\n\"Like one of your sculptures!\" Brittany joked.\n\nLeah paused. She thought of something. \"Wait,\" she said as she stood up and walked over to the others. She knelt down in front of Craig and parted his legs. Craig's heart raced, wondering what she was going to do. \n\nLeah took his cock in her hand as Brittany removed hers. She examined it first from the side, then underneath. She felt his balls in her hand, running her fingers through the loose and hairy skin. \n\n\"What?\" Brittany asked, puzzled. \n\n\"My sculpture. I need my next subject idea. I think this penis is it!\"\n\n\"Really? You'd sculpt his dick?\" Brittany asked, stunned. \n\n\"I mean, you even said it. He does have a pretty penis. I could call it the perfect penis or something like that!\" Leah was so excited she started stroking Craig's stiffening cock. She bit her lower lip as she watched him expand. \"What do you think Craig?\"\n\nCraig was taken aback at the offer. He wasn't expecting to have to make the decision so quickly. \"You serious?\" he asked. \n\nLeah nodded emphatically. \"I can get my supplies now. All I would need to do is make a mold of your cock and then I can create my sculpture based on that. It's really quite simple!\"\n\nCraig was stunned. He turned to Brittany who joyfully awaited his response. \"Umm. Sure? I guess?\" Craig said with obvious apprehension. \n\n\"Yay!\" Leah jumped up and started getting dressed. \"I'll be right back,\" she said as she opened the door. But she suddenly stopped and turned back to them. She lowered her voice. \"Oh and don't cum while I'm gone. I see how hard you are. You need to stay like that. Ok, see ya!\"\n\nBrittany laughed. \"She's a piece of work, huh?\"\n\n\"You could say that again,\" said Craig. \n\nBrittany stared at his penis. \"You're hard again. Look. Your penis is, like, pulsing right now.\"\n\n\"I think I need to go again,\" Craig said, for the first time speaking boldly and honestly.",
        "Brittany laughed. \"Uh-uh-uh!\" she teased him by wagging her finger at him. \"Leah said no orgasms. Sorry sir!\" Craig sighed and shifted uncomfortably on the futon. He kept his hands by his side despite sporting a firm erection. \n\n\"So you said you've had sex before, right?\"\n\nHe nodded. \n\n\"What was it like? Did the girls you were with have trouble with your size?\"\n\nCraig had to think about his answer. \"Hmm. Well, one time I was kinda drunk and we were in the woods. I don't really remember all that well. The other time she asked if we could stop halfway through. She said it was painful.\"\n\n\"Well, I'm not surprised by that! Look at the damn thing. It's humongous!\"\n\nCraig refrained from holding his cock for fear of ejaculating and instead stared down at it along with Brittany. \"I know,\" he conceded. \"It's not normal.\"\n\n\"I'm sorry if all this puts you in an uncomfortable position. I realize you're Steven's roommate. To be honest, I didn't expect any of this to happen like it did. But I really enjoy it. You're really a great person, Craig.\"\n\n\"Thanks. I... I think you really are too,\" said Craig.\n\n\"Do you think anything else about me?\" Brittany asked in a sexier tone as she knelt on the futon, facing Craig. \n\n\"What do you mean?\" Craig asked, confused.\n\nBrittany frowned, disappointed Craig was so naive. \"Do you think I'm pretty Craig,\" she asked in more a statement tone than a question. \n\n\"I think you're one of the most beautiful girls I've ever seen.\" Craig's confidence was growing the more time he spent with Brittany. Plus the fact that he was completely exposed with an aching hard-on that she consistently got more obsessed with. \n\n\"You're so sweet. I think you're kinda cute too. Not to mention you have the world's most glorious penis!\"\n\nCraig looked at her stunned.\n\n\"Oops sorry!\" she corrected herself. \"And balls!\" \n\nBrittany reached over and clasped her hand around it by the base. \"Look, it's too wide for my fingers to touch. I have small hands, I know, but still! Gosh, you're really hard right now!\"\n\n\"I'm trying not to cum again,\" Craig said, frustrated. \n\n\"You can cum after the sculpture thing with Leah. In the meantime, I have a question for you.\"\n\n\"Yes?\"\n\n\"Do you want to see my vagina?\" Brittany asked, releasing his cock and sitting back on her legs. \n\nCraig looked like he just saw a ghost. His mouth dropped open. \"Do I... do you... Do I want to see what?\"\n\n\"My vagina. My pussy. My snatch. Do you want to see it? Because I wanna show you right now.\"\n\n\"I would very much like that,\" Craig said. His penis felt like it would fall off he was so turned on.\n\nBrittany smiled and clapped her hands as she stood up in front of Craig. \"Do you like my panties?\" she asked as she tucked her thumbs under her waistband and did a little bit of a strip dance. Craig nodded. \n\nShe then lowered her panties and let them slide down her legs leaving nothing but her neatly trimmed pussy behind. With her index and middle fingers, she spread it open ever so slightly for Craig to see. The bright pink inside was briefly visible for him before she closed it again. She was teasing him. \"Did you see that?\" she asked. \n\nCraig was visibly shaken. He couldn't believe what was happening. His cock throbbed as he stared at the perfect v-shape created by Brittany's gorgeous patch of bush above her vagina. \"Y-y-yes I did,\" he managed to respond. \n\n\"Do you want to see more?\" Brittany whispered. Craig didn't respond. He stared at her crotch. She leaned forward and raised his head up by his chin. \"Do you?\" she asked. \n\n\"I do.\"\n\n\"You do what?\"\n\n\"I want to see more,\" he stammered.\n\nShe quickly obliged. She licked her fingers and then spread her labia open again, granting Craig an unobstructed view of her creaming pussy. She then started to massage her clit in little circles. \n\n\"Mmmmmm,\" she moaned softly. \"This feels good.\" She tucked her hair behind her ear while leaning forward and watching herself masturbate. She was so turned on by letting Craig watch her, she felt she may cum easily. \"Fuck,\" she said as her fingers continued to rub her clit. \n\nCraig was stuck, frozen in time, staring at this beautiful girl masturbating in front of him. His cock was iron, leaking precum, trembling. Begging to be touched. \n\nBrittany then progressed, inserting two fingers one knuckle deep inside. At first, she just alternated her two fingers back and forth. It felt good. She then pushed them deeper inside and felt her wetness. \"Oh God,\" she whined. \"Fuck. I love doing this.\"\n\nAs Craig stared, mesmerized, Brittany glanced at his cock. A clear stream of precum dripped out the tip, down the shaft, and onto his big balls below. \"You're so fucking big and hard,\" she said. \"God you make me want to cum so bad right now.\"\n\n\"Oh God! Fuck!\" Brittany said, loud enough that people in the dorm might hear. She didn't care. She stared at his throbbing, leaking cock as she shoved three fingers in and out of her. With one hand supporting her body weight on her thigh, the other did the work bringing her to an aggressively powerful orgasm. \n\n\"Oh my God, Craig. Oh my God, I'm cumming. I'm gonna cum right now!\"\n\nBrittany froze in place, three fingers planted deeply, unmoving. She shot her head back, closed her eyes, and made an o-shape with her mouth. Her legs were spread. She stood high on her tippy toes.\n\n\"Ahhhhhhh!\" she exhaled as she came. Her fingers resumed as her orgasm consumed her. \"Ohh fuck!\"\n\nCraig clutched the futon cushions. His knuckles were white with restraint. In no other moment in his nineteen years of life had he wanted to touch his cock so badly. It pulsed and throbbed violently. He wanted nothing more than to cum right then and there. \n\nBut only one of them was to have an orgasm. As Brittany's started to subside, she began to inhale and exhale deeply. She pulled her fingers out slowly. Holding her hand up for Craig to see. She moved her fingers around to show how moist they were. She then collapsed on the futon next to him, legs spread apart with her hand covering her vagina. She smiled warmly up at Craig. Her face was flush red. \"That was amazing,\" she said.\n\nCraig was visibly shaken, having just witnessed one of the most arousing and sexy scenes in his entire existence. He was left completely debilitated. Unable to speak, unable to move. But most frustrating of all, unable to please himself. \n\n\"Did you just have an orgasm?\" he asked. \n\n\"What gave it away?\" Brittany asked, teasingly. \n\nJust then, the door swung open. \"Helloo!\" Leah called out as she made her way into the room where the other two were. Brittany made zero attempt at covering up. She wanted to be seen. \n\n\"Ummm, what??!\" said Leah as she set her things down and stared at Brittany, legs spread but pussy covered. Craig's dick was still exposed, however, and was harder than ever. \"What did I miss?!\"\n\n\"An orgasm,\" Brittany said proudly. \"You missed a pretty big orgasm.\"\n\nLeah looked at Craig's cock, puzzled. \"I told you not to! But you're still hard?\"\n\n\"Not him, silly. Me. I had to get one out... so I did. I put on a little show for Craigy boy here.\"\n\nLeah laughed. \"You're crazy. I can't even take it. I love it.\" \n\nBrittany looked down and playfully patted her vagina, revealing it for Leah in doing so. \"I love it too,\" she said.\n\n\"Ok, so Craig. Come on over here. You need to put your guy into the molding solution. I already mixed it and everything.\"\n\nCraig reluctantly stood up, careful not to 'wake the beast' so to speak. He felt like he could cum any second. Leah, hands on her hips, took notice of Craig's extra hesitant moves. Brittany giggled from her position as she watched the skinny little guy with a massive cock walk over to Leah.\n\n\"It's like a fake penis or something,\" Brittany joked. \"Look at him and then look at this thing sticking out from him. It's not real.\"\n\n\"Are you ok there buddy?\" Leah asked, still puzzled. \"You gonna be good with this?\"\n\nCraig now stood next to Leah. He looked down at his penis. \"I'm just really hard. I don't want anything to happen.\"\n\n\"Like cum? You can cum. But not until we mold you,\" Leah said as she casually placed the bucket on the coffee table and took a hair dryer out from her bag. After she plugged the hair dryer in, she stopped and looked at Craig. \"While we're young maybe?\"\n\n\"Huh?\" Craig asked.\n\n\"Stick your dick in the bucket, Craig,\" Brittany instructed with great amusement. \n\n\"Oh, umm. Sure, ok.\"\n\nCraig awkwardly and carefully supported his body weight on the coffee table while he dipped his cock into the bucket. He was pleased to find out the formula was a little cold. If it were warm and wet, he'd have certainly cum instantly. Inch by inch he lowered himself down into the bucket. The sticky gooey substance encapsulated his nine and a half inch cock. Once he reached the base, he stopped and looked up. \"Good?\"\n\n\"The balls too, sweetheart.\"\n\nBrittany giggled. \n\nCraig used his hand to hoist his balls up over the edge of the bucket rim and into the substance. There was just enough room for them to slide into the solution. Brittany could not contain her laughter as she watched Craig awkwardly leaning over the bucket. His pale, skinny butt shining in the light from the window. \"This is a great blackmail opportunity, guys!\" she joked. \"I should go get my phone.\" She herself remained naked from the waist down, but her legs were crossed. \n\n\"Ok, that's good right there. Now I need to use the blow dryer to solidify the solution.\"\n\n\"Solidify?\" Craig asked in horror, looking up at Leah.\n\n\"Relax, Craig. It won't stick to your penis. It's just to make an accurate mold. This won't take long.\" She then aimed the blow dryer into the bucket and waved it around, making sure to get all of the contents. \n\nCraig grew more and more uncomfortable as he waited for it to dry. He was using his upper arm strength more in this position than he had probably in years.\n\nBrittany stood up and walked over to join the others. She made no attempt at hiding her crotch as she positioned herself next to him. \"You ok, Craigy?\" \n\nHe glanced at her vagina first, then up at her face. \"I've been better,\" he said. Both girls cracked up at that. \"We're almost done,\" said Leah, reassuringly. \n\nAfter a couple final shots from the blow dryer, Leah gauged the solution with her two fingers. \"We're done! Ok, ok, now slowly, and I mean slowly, start to pull your dick out. No sudden movements now.\"\n\nCraig did as he was told and gradually removed himself from the solution. Remarkably, his cock and balls came out completely clean save for a few specks here and there. The three of them peered down into the bucket to examine the imprint left behind.\n\n\"It literally looks like a groundhog burrowed through there,\" said Brittany as everyone nodded in agreement. \n\n\"That's a big hole, alright,\" added Leah. \"Ooo, Craig, I'm sorry. You probably need to cum now, yes?\"\n\n\"Yes please,\" said Craig, desperate for release. He went to grab his penis, but Leah stopped him. \"Not you, us. Why don't you sit down on the futon just like this morning.\"\n\nAs Craig sat down, both Leah and Brittany removed their shirts. Then, to Craig's surprise, they each took off their bras revealing four large, round, perfectly full breasts for him to feast his eyes on. And that he did as he stared and nearly drooled. \n\n\"I think he likes them,\" Leah said as she knelt down in front of Craig. Brittany did the same. Craig couldn't decide who to look at as they were both stunningly gorgeous. Brittany reached for his cock and placed two hands on it. She was slow and tentative about it, as if she was handling a bomb about to detonate. \n\n\"I get his balls!\" Leah said as she leaned forward and took one in her warm and wet mouth. She swirled her tongue around the big orb before popping it out and doing the same for its twin. \n\nBrittany began to slowly stroke from the base to the tip. \"How does this feel?\"\n\n\"I'm gonna cum,\" said Craig. \n\nBrittany laughed. Poor Craig had to cum so bad he lasted no more than a few seconds. She pulled her hands away and lifted her tits up. Leah quickly followed. They both sat back on their feet, holding their boobs up, giggling.\n\nCraig angled his cock toward the waiting girls, but not before he shot a thick, white blast over their heads and onto the chair behind them. It landed with a splat. Leah turned around to see. As she turned back she was met with another blast directly on her face. \"Ahhh!\" she screamed. \"Craig!\"\n\n\"Oh fuck,\" Craig said as he pointed his cock down a bit more. \"Fuck. Sorry. Fuck.\" \n\nHe continued to cum, blasting each set of tits as best he could. The girls laughed and laughed while he came. Craig used two hands to stroke his cock as endless creamy loads landed on the ladies. \"Mmmmmmm God!\" he belted out in pure ecstasy. \n\n\"I'm covered!\" Brittany said as she held her boobs up watching more and more cum land on them. \"Me too!\" Leah said as Brittany looked over. \n\nCraig wasn't done. He moaned and groaned as he stood up to finish jerking off onto the girls. They were ecstatic with his sudden aggressiveness and eagerly looked up as more cum poured onto their tits. Craig squeezed his balls with one hand and stroked with the other, making sure to get the final drops out. \n\nSpent and out of breath, Craig looked down at the girls. They were covered in his cum. Giggling with each other as they inspected the mess all over their respective breasts. Some of it was dripping down Leah's face from the very first blast. \n\nCraig's cock had finally begun to shrink after what seemed like hours of torment. He was sweating, panting, and shaking from his orgasm. \n\n\"That was fucking amazing,\" said Leah. \"That was really, really hot.\"\n\nBrittany carefully walked into the other room to get a towel while Craig sat back down. His cock was softened and hung off the edge of the futon. \"You had a lot huh? Was it because we built you up?\" Leah asked as she still held her boobs up. If she dropped them, cum would pour out all over the floor. \n\n\"Yeah that and...\"\n\n\"Brittany masturbating?\" Leah asked, filling in the blanks for Craig. He nodded in agreement. \n\nBrittany returned with Steven's towel. She had already cleared off herself and helped Leah next. As she scooped cum off Leah's breasts and face, Craig couldn't help but notice how odd it was that she was using Steven's towel to wipe his cum off. \n\n\"Well, Craig you look like you need a nap,\" said Brittany as she rolled up the towel and tossed it in Steven's hamper. Craig watched in awe as she got dressed and Leah collected her things including the molding bucket. \n\n\"See you later on? We should hang out tonight,\" Brittany said. \n\n\"Yeah Craig. Come to our dorm tonight! I promise it'll be fun.\"\n\n\"Umm, ok, sure,\" said Craig. He wanted nothing more than to continue to have fun with these girls.\n\nAs they let themselves out, Craig collapsed on the futon. Still naked, he mindlessly played with his penis. A nap did sound good right about now. Completely naked, he drifted off to sleep that afternoon thinking about what the night would bring."
    ],
    "authorname": "BrazenHorse",
    "tags": [
        "cfnm",
        "big cock",
        "big dick",
        "handjob",
        "condom",
        "tittyfuck",
        "big tits",
        "masturbation",
        "blowjob",
        "fingering"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/roommates-ch-04-4"
}