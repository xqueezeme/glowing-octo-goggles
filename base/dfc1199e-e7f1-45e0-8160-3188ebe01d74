{
    "title": "Brad's Road Trip Ch. 21",
    "pages": [
        "What was I doing 9 and a half years ago, you ask? Well.. I had just gotten married and graduated college, I was moving halfway across the country to start a new job, and... oh yeah. I started writing this series. And now, here it is \u2013 the last chapter of Brad's Road Trip. Huge credit to my editor, AnInsatiableReader, not just for this chapter but for all of them, dating back to Chapter 5. There's a joke about how people want to eat sausage, but no one wants to see how it's made \u2013 trust me, if you saw the first drafts I've sent to her over the years, you'd quit reading altogether. Also, thanks to my beta reader, samuraisan, not only for beta reading these last two chapters, but keeping me sane.\n\n***************\n\nI woke on my back and felt a warm, wet sensation on my earlobe, with fingertips brushing lightly across my chest. I opened my eyes to find Kelly lying next to me, gloriously naked in the morning sunlight. She trailed kisses from my ear down to my shoulder, and her fingers made slow circles, moving closer and closer to my crotch with every pass. My left arm was stretched out behind her, and it just took a slight movement to put it on her lower back.\n\n\"This is real, right?\" she asked, looking up at me with her big brown doe eyes. \"We're not dreaming?\"\n\n\"My dreams have never been this amazing,\" I said, moving my right arm across my body to stroke her hip. \"So yeah, it's real.\"\n\nHer hand reached down and rubbed my cock, already mostly hard from a combination of normal morning wood and the attention she'd been giving me even as I slept. When it was at full salute, she swung her left leg across me and climbed on top. We both groaned as I slid deep inside her once more.\n\nWe weren't fucking or simply having sex. Even making love wasn't a strong enough term for it. There was nothing aggressive or overtly desperate about our motions \u2013 she slowly rocked herself back and forth on me, and I occasionally lifted my hips up to give her a different angle. We kissed pretty much the entire time, and when our lips needed a break, we were content just to stare into each other's eyes. My gaze was so intense that she blushed and looked down at one point.\n\n\"The way you look at me...\" she said, trailing off. She went another minute or two before finishing. \"It just turns me into jelly.\"\n\nWe came together a few moments later, moaning into each other's mouths. I wrapped her up tight and held her against my chest as she spasmed around me. The sights and sounds of this beautiful woman cumming were almost enough to make me cum again.\n\nAfter a few minutes of post-orgasmic bliss, she shifted her weight to the side, and I reluctantly loosened my grip so she could roll off. She nestled into my chest again, and we lay there in silence for a few moments.\n\n\"So my sophomore year of high school, my family decided to take in an exchange student,\" she said. \"Her name was Alyssa, and she grew up in Melbourne, Australia. She was extremely smart, plenty attractive, and she got along well with everyone, but that was just how she acted at school. When she came home she was moody, withdrawn and borderline depressed.\"\n\nI ran my fingertips along her shoulder and arm as she spoke.\n\n\"It didn't take us long to figure out she was homesick,\" she continued. \"We looked up recipes online and tried to make her authentic Australian food, and she always thanked my mom for the effort, but it didn't seem to make it better. We asked her about her hobbies, but she lived near the ocean and almost all of them related to being on the beach and in the water, and that's difficult up here in Idaho.\"\n\n\"I took Spanish in high school, and my teacher gave me the idea of learning to speak with an Australian accent. Alyssa talked to her parents a few times a week, but my teacher thought if she heard it from me every day, she might feel a little more at home. My dad and I watched Crocodile Dundee like seven times, and I practiced for a couple weeks before I tried it out on her.\"\n\nShe snickered against my chest.\n\n\"I was fucking awful at first,\" she laughed. \"I was so bad that she couldn't help but laugh at me, but it was one of the first times I'd seen her happy at the house, so I kept trying. Eventually she started helping me, and the better I got at it, the better friends we became. We started talking to each other in the Australian accent at school, or when we went to the mall together.\"\n\n\"She went home the next summer, and my family flew over with her. Obviously, everybody there has the accent, so I got to hear a million examples of what it was supposed to sound like. I was doing it really well, but not quite perfect, so she and I worked on it some more for the two weeks I was there. Before we left, we spent four or five hours with her friends on the beach, and she didn't tell anyone I was American until it was time to leave. They were all stunned. They'd talked to Americans before, but none of them had the accent down the way I did.\"\n\n\"She's still one of my best friends, and I miss her terribly. We keep in touch to this day, mostly on e-mail, but we mix in the occasional phone call. When I decided I was going to disguise my voice and come down and meet you, I called her immediately. We spent a few hours on the phone practicing, making sure I hadn't lost my touch.\"\n\n\"Well, I don't have a ton of experience talking to native Australians,\" I said. \"But you had me fooled. I never questioned it.\"\n\nShe slipped back into her Australian accent for effect. \"It was so hard to stay in character all day. You found a hundred sensitive spots on my body, with your kisses and your massage, most of which I didn't even know I had. Every time I moaned, I had to remember to use the accent.\"\n\n\"I love your voice,\" I said. \"Both of them, really.\"\n\n\"It'll be like two different women. Sometimes I'll be Nicole,\" she said using the accent, then switched to her normal voice to finish, \"and sometimes, I'll be Kelly.\"\n\n\"No,\" I countered. \"Kelly, you are the perfect woman for me. Just the way you are. When I saw you that day, I realized immediately that if I could build a woman from scratch, customizing every detail to my liking, you were it. The only thing that threw me off was the accent.\"\n\nShe stayed quiet, so I kept going.\n\n\"Kelly, Nicole was great. I fell for her. I fell for her so hard I was legitimately worried how I was going to tell you about her. Now I know why. But you heard what I said at the end of that night, baby. I love my girlfriend, Kelly, and that's you, right down to the voice that's been driving me wild for the past few weeks. I don't want you to be anyone else.\"\n\n\"Oh my God,\" she said, burying her face in my chest as the waterworks started. \"I love you too, Brad. I know we just met two days ago, and we've been talking for just a couple weeks, but I'm so hopelessly head over heels for you.\"\n\nEven though I knew they were happy tears, it caused me actual physical pain to see and hear her crying. Luckily, I had a solution.\n\n\"Kiss me, beautiful,\" I said, lightly tugging on her hair to get her to look up. She offered me her lips and I claimed them greedily for a few minutes before she lay back down on my chest.\n\n\"So, that's the how,\" she said. \"I'm guessing you want to know the why now, huh?\"\n\n\"I do,\" I said. \"But not yet.\"\n\nA quick glance at my phone \u2013 and another glimpse at Kelly's pussy \u2013 told me it was a little after 9 in the morning. I rolled out from under her and off the bed, then offered my hand to pull her to feet. She looked at me strangely, asking a question without speaking.\n\n\"I've spent a lot of time in hotels over the past few weeks, Kelly,\" I said. \"At the risk of sounding crude, I've fucked a lot of girls in hotel rooms over the past few weeks. Hotels are temporary, places you stay for the night when you plan on leaving. Kelly, I'm not going anywhere anytime soon. This isn't temporary. I want to see where you live, and sometime soon, I want to bring you to my house in Pocatello. It's time to start christening the places I'm going to be spending time with you.\"\n\nShe blushed again. \"I'd love that,\" she said, \"but your parents booked this room for tonight, too.\"\n\n\"That's ok,\" I said. \"We'll come back here later. We never used the tub, and I seem to remember a certain woman cumming extremely hard when I told her about having sex on a balcony, so that's on my agenda, too. But I want to see your house first. So let's go to your apartment, get comfortable, and then you can explain everything to me.\"\n\n\"That sounds wonderful,\" she said. \"Let me go clean up a little first, though. I'm sure most of last night is all over the bed by now, but you just came another gallon inside me.\"\n\n\"Yeah,\" I said. \"Speaking of that...\"\n\n\"No, no,\" she said, seeing where I was going without me having to spell it out. \"I love Tyler, but I don't want him to have a brother or sister for a long, long time. I've been on the pill since two months after he was born.\"\n\n\"Ok, good,\" I said. \"I guess I should have asked beforehand, but there really wasn't an opportunity.\"\n\n\"I knew there wouldn't be, Brad,\" she replied, going into the bathroom but leaving the door slightly cracked so we could talk. \"And I knew \u2013 well, hoped, anyway \u2013 that you'd be cumming in me multiple times.\"\n\n\"I'm seeing now that all of this was planned out really well,\" I said. \"I did my part, too. I got tested once last week in Indiana, and again yesterday. I have a doctor's note certifying that I'm clean in my car.\"\n\n\"I trust you,\" she said, giggling from behind the door. \"No documentation necessary, though I appreciate you doing it.\"\n\nShe finally emerged and we got dressed, hung the housekeeping sign on the doorknob, and left the hotel. I drove her to her car, and then I followed her across town. She stopped at a bagel shop on the way to order a quick breakfast before leading me to her apartment. \n\n\"I ate mine on the way,\" she said, handing me a sack as we walked up the stairs to the second floor. I had my overnight bag in hand \u2013 I hadn't brushed my teeth since I left my house, and while she hadn't complained, my breath had to be awful by now.\n\n\"So you're gonna watch me eat?\" I asked.\n\n\"No,\" she said, unlocking her door. \"I'm going to go slip into something a little more comfortable while you eat. I should be ready for you about the time you finish.\"\n\nShe led me to the kitchen table before disappearing down the hallway. I unwrapped the sesame bagel she'd bought for me, smeared the packet of cream cheese all over it, and munched on it as I wandered around. It wasn't a huge place, but it was tastefully decorated. There were pictures of a boy I assumed was Tyler everywhere, along with other family members. I could pick her mom out easily \u2013 if that was a glimpse of what Kelly would look like in her 40s, someone was going to be a very, very happy man. I felt no nerves or shame in hoping that would be me.\n\nShe had two bins of toys tucked against a wall in the living room, containing most of the usual little boy gear \u2013 Hot Wheels cars, GI joes, electronic learning toys, and the fire truck that had tipped me off to Tyler's existence in the first place. Down the hall, one of the bedroom doors was open, so I peeked in. It was Tyler's, complete with a crib, a dresser and even more toys. Everything was neat and tidy, suggesting that Kelly had cleaned up since he'd been here.\n\nI finished off the bagel and returned to the kitchen to get a glass of water. After that, I grabbed my toothbrush out of my bag and fixed that particular problem. I'd just packed it away when I heard her voice down the hallway.\n\n\"Oh, Brad?\" she called out in a sing-song voice. \"I have something to show you.\"\n\nThis time, the other bedroom door was slightly ajar, so I walked down the hall and pushed it open. \n\n\"Oh my God,\" I blurted out, suddenly bolted in place and unable to move. Kelly sat sidesaddle in a lounge chair in the corner, wearing the purple bustier I'd bought for her. She'd pulled her hair back in a ponytail, and had put on just a tiny bit of makeup for effect. Her legs were crossed and draped over the chair arm, showing off the tan thigh-high silk stockings I'd also purchased. A pair of purple lace panties, another of my gifts, completed the ensemble.\n\n\"You like?\" she giggled. I couldn't answer her. Ellie had looked incredible in this outfit \u2013 Kelly looked about 37 times better. I opened my mouth again and tried to speak, but nothing came out. Instead, I just walked over and dropped to my knees in front of her.\n\n\"Normally I would have gone all out, with garters and porn star makeup and everything,\" she said. \"I'll do that for you soon, but I was impatient.\"\n\nI shook my head, about all I was capable of in response. I gently lifted her right foot, placed it on my chest and kissed across the tips of her toes.\n\n\"Ooh,\" she half-moaned, half-giggled. I rubbed my face against her silk-covered arch, drawing another moan. \"I guess that means you like my feet.\"\n\n\"All of you,\" I stammered. I kissed up and down both side of her foot, licking her toes through the material and gently nibbling on her Achilles tendon.\n\n\"I thought that massage the other day was heaven,\" she moaned again. \"I think this is going to be so much better.\"\n\nFinally, my brain caught up with the rest of my body and engaged my vocal cords for something other than a wordy grunt.\n\n\"Here's what we're going to do,\" I said, running my hands up her shins to her knees then tracing my way back to her heels. \"I'm going to worship your sensational body the best way I know how. I'm gonna use my fingers, my palms, my lips, my tongue, my cock, and whatever else I can find to show you, in intimate detail, just how perfect your body is to me. These stockings and this bustier look spectacular on you, but in a little while, I'm going to find out how much better they look in a pile over there in the corner. We'll start in this chair, but we won't stay here. I'll move you wherever I want you next.\"\n\nShe shuddered. I remembered how much she enjoyed me taking charge during our phone calls, and really, that was me anyway. I was just going to have to get used to her dazzling me into stunned silence sometimes.\n\n\"Jesus, Brad,\" she breathed. \"You're about to make me cum with just your words.\"\n\n\"No, I'm not,\" I said. \"Not yet, anyway.\"\n\n\"And what am I going to be doing while you explore me?\"\n\n\"Two things,\" I said, sucking her big toe into my mouth briefly before letting go. Silk doesn't taste very good, but I could taste her skin beneath, and she was exquisite. \"One: you're going to sit here, or lay on the bed, or stand against the wall, or bend over the vanity, and enjoy it. Two: you're going to tell me everything. You're going to start with why you decided to jump the gun and meet me in Colorado, and why you didn't tell me. After that, you're going to give me a detailed play-by-play of what went on in your brain all throughout that day. I know how I felt, and you do too, basically. But I don't know what you were thinking or feeling, and more than almost anything else in the world right now, I want to.\"\n\nShe drew in a deep breath, and it wasn't just because I ran both my thumbs up the middle of her arch as I massaged her foot. \n\n\"Okay,\" she said, exhaling.\n\n\"Before you start, I want you to know something,\" I said. She just blinked, waiting for me to continue. \"Nothing you say is going to change the way I feel about you. Like I said, I want to know why, and I want to know what you were thinking and feeling, because I want to get to know your mind as well as your body. But it's not going to change this; it's not going to change us. You're the most beautiful woman I've ever seen, inside and out, and I'm not just saying that. I've had a lifetime of experiences over the past two weeks, and kneeling in front of you right now, I realize I was a gigantic idiot for not just flying home the first day we talked. You're so much better in person than you were over the phone, and you were fucking incredible over the phone.\"\n\nShe was staring straight through into my soul again, so I knew she knew I wasn't lying.\n\n\"So just relax, enjoy what I do to you, and tell me everything,\" I said. \"There's no wrong answer, as long as it's the truth.\"\n\nWith that, I buried myself in my work \u2013 if you could call memorizing every inch of the most perfect body ever created \"work.\" I slowly dragged my tongue down her arch past her heel, across her Achilles tendon and then up the underside of her leg. The muscle tone in her calves was incredible, even through the silk. I didn't stop until I reached the top of the stockings, just a few inches from her pussy. I could smell her arousal and see the telltale dark patch on her panties, but I had all day to get there.\n\nIt wasn't until I hooked the top of her stocking in my teeth and started dragging it off her leg that she started talking.\n\n\"The past two and a half weeks have been just amazing, Brad,\" she said. \"I woke up every day thinking about you, and I went to bed every night and dreamed about you. Without realizing it, I started to build my world around you \u2013 the things we'd do together when you got back, the experiences we'd have, and the place you'd have in my life. After I told you about Tyler, and you told me Will is actually your stepdad and that you would have no problem doing that eventually, I opened up even more of my life to you. I told my mom and aunts and uncles about you. I told Robin and Sarah about you, in great detail. They both want a crack at you if we don't work out, by the way.\"\n\n\"Not interested,\" I said, pausing to nip at the tendons behind her knee. \"Besides, I think we're working out just fine.\"\n\n\"I told them we would,\" she said. \"But I also told them I might let them have a crack at you anyway.\"\n\nThat got my attention, and I looked up her for a second. She was grinning as she shrugged her shoulders slightly.\n\n\"I said might,\" she said. \"I have no idea how any of this is going to work, but as long as we're together, we can figure it out.\"\n\nI nodded and went back to undressing her with my teeth. \n\n\"I actually spent a whole hour telling Tyler all about you. He knows that 'Brad' is my 'boyfriend.' And a few days ago, I realized that I was building an entire universe around us, and I had no earthly idea if I would feel that way once we met in person. So...\"\n\nShe trailed off because I finally tugged her stocking off, leaving her right leg and foot completely bare. I attacked her foot with my mouth, sucking each of her toes into my mouth and licking up and down her arch again, this time without any barriers. I lifted one hand and did the classic 'keep going' motion with my fingers.\n\n\"I couldn't wait any more, Brad,\" she said, moaning when I moved up and gently nipped at her calf muscles. \"You had plans, but I didn't. I looked it up and saw that the festival in Colorado was only a 6- or 7-hour drive. I immediately called your mom and got the time off.\"\n\n\"So what you're saying is, my mom is a traitor,\" I said, mostly to her upper calf. \n\nShe giggled. \"Sort of. I didn't tell her I was keeping it a secret from you.\"\n\n\"And you did that, why?\" I asked the question but gave her no time to answer it, digging my tongue into the soft tissue behind her knee. She squirmed and wriggled, trying to get away but to no avail. Eventually I moved to the top of her leg and up her thigh, giving her the ability to continue.\n\n\"Two reasons,\" she said. \"First, I didn't want to get in the way of you enjoying the last stop on your trip. I know now that you would have really, really enjoyed the last day with me, but what about Friday? That was the day you finally took care of Sara, and got her friend as a bonus. I was driving down that day.\"\n\nI remembered. I'd made her cum so hard she had to pull over.\n\n\"So, when you pulled off the road at the Craters of the Moon exit... that was just made up?\" I asked.",
        "\"No,\" she said. \"You blew my mind that morning, Brad. I really did have to pull over, and it really was that exit. But when I got back on the road, I didn't go to Craters. I kept going down I-15. If you'd known I was coming, you would have stopped everything else and just waited on me.\"\n\n\"You're right. Ok, I get that,\" I said. \"The other reason?\"\n\n\"I really, really like you, Brad, and even if there were no sparks and we didn't click, you're still a really good guy who obviously has no trouble with women,\" she said. \"I figured if I met you and what we had on the phone didn't exist in person, I'd just find a way to wiggle out of meeting you when you got up here. I'd know the real reason, but as far as you'd ever know, I'd have just gotten cold feet and wouldn't go through with it.\"\n\nI stopped for a second. \"You think that would have made it better?\" I asked, a touch of anger finding its way into my voice. \"You think it would be better for me to never know what might have been than to go through with meeting you, find out we didn't click, and then move on, maybe even as friends?\"\n\nHer eyes were a little wide at the venom in my words. \"When you put it that way, no. No, I don't. God, that sounds awful.\"\n\n\"Why, then?\"\n\nShe sighed. \"I just know how severely disappointed I would have been. I would have spent the next few years thinking that if it didn't even click with you, then the perfect man for me must not exist. And I thought I could save you from that.\"\n\nI pondered that for a minute. \"When you put it that way,\" I said, echoing her words with a smile. \"I'd rather know than not know, good or bad. About that, and about anything else that may ever pop up. But I understand. You were just trying to protect me.\" \n\nShe visibly relaxed and smiled down at me. I licked from the top of her thigh, across the thin purple strap of her panties, until I reached the bottom of the purple corset. She had to be dripping by now, but if I'd checked, I'm sure it would have derailed my plans for the rest of her body, so I resisted the urge to look. I finally put her right leg down and lifted her left leg up.\n\n\"It wouldn't have worked, by the way,\" I said, giving her still-stockinged left foot the same treatment as I'd given its partner. \"Even before we met, you'd have needed the Idaho National Guard to keep me from meeting you. I know where you work, and a bouquet of daisies would have pried your schedule out of my mom.\"\n\n\"I wasn't thinking clearly, Brad,\" she said, letting loose a deep, relaxing sigh as I rubbed her foot across my jaw. \"I should have told you I was coming and convinced you to keep going with Sara until I showed up.\"\n\n\"That probably wouldn't have worked either,\" I said. \"Anyway, keep going. I'm certainly going to.\"\n\nI gave her left foot the same attention I'd given her right, and she enjoyed it just as much.\n\n\"So I got a hotel in Grand Junction on Friday night, spent most of Saturday morning building up my courage and finally drove out to the festival after lunchtime. I wandered around for an hour or two looking for you, with no clue what I was going to do or say when I found you. I was overanalyzing it the whole time, going back and forth about whether I should call you and tell you I was there, or whether I should even be there at all. It was hot and muggy and miserable, so I got in line for ice cream. It was a long line and gave me even more time to think. At first, I thought maybe you'd decided to spend the day after with Sara, too, or maybe you'd met some new girl and were trying to give me one last story time before you came home, and I felt kind of like an idiot, coming down there to meet you when you were already with someone else.\"\n\nI had already worked my way up her leg, and was now traveling back toward her foot, with the left stocking now between my teeth.\n\n\"But I didn't actually make a decision until I realized something I should have thought about right away,\" she said. She waited until I finished removing her stocking and started sucking on her toes before continuing. \"It simply wasn't fair to you for me to know that was our first meeting, but for you to still be in the dark. No matter what else was in my brain, I couldn't get past that.\"\n\nI just nodded and continued to make love to her foot and ankle.\n\n\"So I decided I couldn't go through with it, and I had to get out of there. I'd go to my car and think it through, and I'd either call you and tell you I was there, or I'd just drive home and wait patiently like you were going to do. So I turned around to leave, and... there was this brick wall behind me, and I hit it and wiped out.\"\n\nIt was my turn to laugh now.\n\n\"Brad, I swear... when I realized it was you, I almost fainted,\" she said. \"To finally see you in the flesh, see that you were everything I thought you would be and so much more... and then to see you looking at me the same way, it was hard to stand up straight. I could have stared forever. I think if that guy hadn't reminded us we were in line, I might have.\"\n\nI made my way up her left leg, again stopping when I reached the bottom of her bustier. I scooped her up from the chair and stood her up, with her back against the wall next to bed. I knelt again and licked the exposed flesh of her lower stomach, and when I ran out of real estate, I moved my fingers underneath the material and rubbed her stomach.\n\n\"So, the decision had been made for me, and I had to go through with it. I thought about telling you right then, but in some weird way, I thought it might break the spell, and I've never, ever felt that way before. I honestly felt drunk.\"\n\nI remembered the feeling.\n\n\"I had no idea how hard it would be,\" she said. \"Not just maintaining the accent throughout the day, though that was plenty difficult. But you joked about football, and I had to act like I didn't know much about it. Then later you were talking about country music, and of course, I know plenty about it because I listen to it here. But I had to answer how an Australian would answer. Thank God Alyssa and I talk about it sometimes \u2013 she told me the whole thing about Keith Urban a while ago, and I just repeated it word for word.\"\n\nI so badly wanted to remove the bustier and devour her, but I took a deep breath and reminded myself to stay patient. I ran my hands up over the lingerie until I reached the top, where a generous amount of cleavage spilled out. I couldn't resist, and I buried my face in her valley, licking, sucking and nibbling every inch of skin I could reach.\n\nShe gasped at the intensity of my actions and thrust her fingers in my hair to hold me in position.\n\n\"Keep going,\" I muttered into the upper part of her breasts.\n\n\"You're distracting me,\" she complained.\n\n\"It's gonna get worse,\" I said. \"Better get used to it.\"\n\n\"Ok,\" she sighed. \"So even though things were so intense and sexually charged, I felt so comfortable with you. The ice cream thing was just the most natural thing in the world. And then when you did it back, I saw how playful and compatible we could be even when we weren't dealing with sex. And then we kissed, and I couldn't think anymore.\"\n\nI reluctantly left the valley between her breasts and moved across her collar bone and onto her left shoulder. I kissed my way down her bicep and forearm until I reached her hand, where I sucked each individual finger into my mouth.\n\n\"You know, the second-closest I came to breaking character and telling you everything was when you pulled out your phone,\" she said. \"When I saw your background picture, I almost blurted out 'So, that's what my pussy looks like, huh?' Somehow I bit my tongue.\"\n\n\"Was so embarrassed,\" I said, pausing between her index and middle finger. \"I thought I'd blown the whole thing.\"\n\n\"I knew that,\" she said. \"Of course, I wasn't upset at all, but a stranger probably would have been, so I did my best to put you at ease. I wasn't expecting it, but it actually helped us get the girlfriend issue out of the way, too. I knew as intense as things were with us, you were going to tell me about... well, about me... at some point. That gave me the chance to tell you I had a boyfriend, too.\"\n\n\"Mm hmm,\" I said. I jumped across her body to her right arm, starting at her fingers and working my way up.\n\n\"When we wandered around the festival after that, it just felt so right,\" she said. \"I felt like I'd known you forever, like we could talk about anything for hours. When you told me about the road trip, it was a little difficult to act dumb and ask follow-up questions I already knew the answers to, but I managed. I felt so bad about lying to you about being a student in California, but it was just one more fib during a day full of them, so I just made up something believable.\"\n\nI was back on her shoulder and started kissing across her collar bone to her neck. I moved her hair out of the way so I could cover her neck with kisses, and she paused while I worshipped.\n\n\"And then that massage...\" she said. As if sticking to a script, I picked her up again, this time depositing her face down on the bed.\n\n\"You were saying?\" I asked. I started at her ankles, but unlike before, I didn't linger. I massaged her legs quickly but thoroughly, then tugged her panties off, revealing her gorgeous ass to me. \n\n\"First, I loved feeling my way all over your body. You've spent a lot of time talking about mine, but I think I'm lusting over your body as much as you are mine.\"\n\n\"Doubtful, but go on.\"\n\n\"You put in work to look that good, Brad, and I love it. You're sculpted and fit without being overly muscular, and you're not hard to look at, either.\"\n\n\"Thank you,\" I said. I grasped one cheek in either hand, earning a deep, throaty moan from Kelly. I spent the next few minutes massaging her ass, switching between vigorous kneading and gentle rubbing. My fingers occasionally swept up onto her lower back, getting an even better look at her butterfly tattoo now that she was naked below the waist.\n\n\"But then when you started in on me... I never knew a full-body massage where my clothes stayed on could be so damn sexy,\" she said, groaning as I dug my fingers into her glutes. \"The way you were exploring every inch of me... that you could get away with, anyway... I could tell you were trying to memorize me, like you'd have to sculpt me out of clay later. You paid attention to my responses, which were mostly just body language, and gave me more of what I really liked. You damn near made me cum just from the massage.\"\n\n\"Your body is incredible, Kelly,\" I said. \"Every inch.\"\n\n\"I can tell,\" she replied. \"I knew right then that that's how every woman's body should be worshipped by their man, and I felt so lucky to have found you.\"\n\nAs she spoke, I worked on the laces at the back of her bustier, finally finishing and peeling the lingerie off. As promised, it joined her stockings and panties in a pile near the chair. She was finally naked, and I quickly joined her before crawling back onto the bed. I lowered myself on top of her, nestling my cock between her ass cheeks as my hands swept up her back.\n\n\"Ooh,\" she moaned. \"You want something, baby?\"\n\n\"More than you fucking know,\" I said, nearly growling into her ear. \"But not yet. You have more to tell me.\"\n\n\"I do,\" she agreed. \"After you left to get food, those dumbass guys came over. They were hitting on me, doing their best to get me to go back to their chairs, promising they would take care of me after the show. I told them I had a boyfriend who was taking care of me right now, and thanks but no thanks, but they wouldn't leave. When I saw your friends walk over, I was both relieved and a little scared.\"\n\nI let my cock brush against her pussy lips again and again, teasing her mercilessly before moving it back between her cheeks. \n\n\"Your buddy scared them off, then made sure I was who he thought I was. You told me Chad was a little sweet on Janine, and they both looked like Marines, so I was pretty sure that's who they were, but I wasn't 100 percent sure until they introduced themselves and fed me their made-up stories about you drinking beer. You came back a little after that.\" \n\nI forced my hands under her body, grabbing one boob in each hand and squeezing as I plastered myself to her back.\n\n\"When you started feeling me up at the end of the Trace Adkins show, good Lord, I was about ready to throw you down right there in the grass and fuck you silly, until someone with a badge showed up and hauled us both off to jail. And when you took my hand and led me to the tent, and started kissing me all over... I was in heaven.\"\n\nI released her tits and scooted my body down the bed, until my face was level with her ass. I started at her lower back and dragged my tongue south, passing over her tight, pink rosebud before I ran out of room.\n\n\"Oh, shit,\" she moaned. \"That's so kinky, but... God, I love it.\"\n\nFinally, I couldn't resist her anymore. I lifted her by the hips until she was on all fours, then lay down on my back, my legs hanging off the foot of the bed as her pussy hovered over my face. I smacked her ass lightly, and she dropped her pelvis down, sitting down hard on my mouth. \n\n\"Fuck, your tongue,\" she moaned. I'd plunged it as deep into her dripping pussy as I could, drawing out as much of her sweet nectar as possible. I'd eaten more than my share of pussy over the past few years, but hers was hands-down the best I'd ever tasted. I couldn't get enough. Somehow, though, I managed to pull myself away for a minute. \n\n\"Keep going,\" I said, \"or I'll stop.\"\n\n\"Ohh, you bastard,\" she groaned, but I could hear the smile in her voice. \"I told myself when I decided to play the Australian role that no matter how tempted I was, I wouldn't have sex with you. I wanted to save something for our meeting here. But after an hour of such passion, and we hardly even took our clothes off? I was blind with lust, and I wanted nothing more in the whole fucking world than to have you inside me.\"\n\nI started again, this time sweeping my tongue across her engorged lips before I went back for more juice. I was going to wait to make her cum until she finished all of it, but in that instant I wanted nothing more than to see her cum while she writhed and squirmed on my face. So I pushed a finger up into her pussy and flicked the tip of my tongue rapidly across her clit. Her thighs tightened around my cheeks as her orgasm hit.\n\n\"Oh FUCK!\" she shouted, her fists pounding against her headboard as she spasmed. I dug my fingers into her soft, pliable ass cheeks to hold her in place as she writhed and wriggled around. Eventually I felt her body sag forward, and I slid out from under her and pulled her tight against me.\n\n\"Just calm down,\" I said, gently stroking her upper back as her chest rapidly rose and fell against mine. \"Finish talking whenever you're ready.\"\n\nShe breathed heavily for another few moments. \"That was amazing,\" she finally said. \n\n\"Thank you,\" I said. \"I've wanted to taste you since that first night on the phone. I've had a couple tastes now, but I don't think I'll ever get enough.\"\n\n\"God, I hope not,\" she said. \"I haven't had a chance to taste you yet, though. I know I went down on you in the car last night, but I want you to cum in my mouth.\" \n\nShe started moving down my body, but I looped a hand under her shoulder and held her up.\n\n\"Not so fast,\" I said. \"I believe you have more to tell me.\"\n\nHer eyes fell to the bed for just a moment.\n\n\"Right,\" she said, with a resigned sigh. I was intrigued by her reaction, wondering what exactly she had to tell me that would cause her to act like that. \"Like I said, I wanted you inside me so fucking badly, and I couldn't help myself anymore. So I asked you.\"\n\nI remembered. I'd been able to push what I'd thought was an impending catastrophe to the back of my mind and just enjoy making out with her in the tent, but when she'd asked me to have sex with her, it felt like an elephant was sitting on my chest. \n\n\"The look on your face broke my heart,\" she said. \"It wasn't until that moment that I realized how conflicted you were. I knew we connected in a big, big way, but I guess I still thought Nicole was just another chapter in your road trip book. We'd have a good time, you'd have some fond memories and then come back to me, like you had every other night. But when you hesitated, I saw how different this was for you. And it made me love you so much more than I already did, because I knew how intense things were between you and Nicole, but in the heat of the moment, you worried about Kelly. You didn't want to hurt me.\"\n\n\"Think about it Kelly,\" I said. \"If I had had that kind of connection with another girl... Sara and I had a past history, but let's say it was Liz, Sara's best friend. What if she and I connected that way, that deep, intense, emotional connection that was apparent the moment you and I looked at each other? And then we'd spent the rest of the day getting to know each other, and I'd made love with her that night. Because make no mistake, honey \u2013 if I'd given in and had sex with 'Nicole,' that's what it would have been. If I'd done all that with Liz, and you somehow found out about it later, would you have been upset? Would you have felt betrayed?\"\n\n\"Yeah, I guess I would have,\" she said. \"You'd just been with so many women on your trip, and I'm sure at least a few of them were more than purely casual. Hell, I know a couple of them were \u2013 I still text with Jenny and Ellie, the girls from Indiana. Yeah, I knew that 'Nicole' would probably be the one road trip girl that would stick with you the most, but I still thought you'd be willing to go one more time. When you weren't, well... I was just suddenly filled with an overwhelming sense of contentment. I was pretty damn sure before, but that was the moment I knew I'd be yours for as long as you wanted me. I could wait one more day, and it turned into two.\"\n\nI recalled what I thought I'd heard right as I was falling asleep that night. It could have just as easily been a random sound floating on a breeze, but I could have sworn I'd heard her say 'I can wait' just before I slipped off.\n\n\"Anyway, I woke up a couple hours later, and I knew there would be no easy solution. If I stayed Nicole, things would be really awkward, and if I told you the truth, you'd be pissed that I hadn't the night before. So I got up and left quietly.\"\n\n\"Not before you pulled your panties off, though, huh?\"\n\nShe blushed. \"Yeah... I looked at you sleeping there, and my juices were flowing again instantly. I got a naughty thought, and I followed through.\"\n\n\"Why didn't you just tell me, right then?\" I asked. \"The night before, when I told you I loved my girlfriend \u2013 you \u2013 why didn't you tell me?\"\n\n\"I almost did,\" she said. \"Remember what I said before, when I saw my pussy on your phone? That that was the second-closest I came to breaking character? Well, that was the closest. I almost broke down and told you, just so we could both have what we wanted. I should have, I know that now. But for one, I still wanted to surprise you. I didn't want to tell you what I looked like, or show you pictures, for the whole trip, because I wanted to save that for when we met. If I had just blurted it out then, I thought keeping the picture from you this whole time would have been pointless.\"\n\nI growled. \"So you withheld the truth from me, knowing it would have both made me feel worlds better and given you exactly what you wanted, because you wanted to keep up with a game I never wanted to play for just one more day?\"\n\n\"Yeah,\" she said. \"It sounds stupid now, but there were other reasons. I wasn't sure how to drop the whole Nicole act, and like I said before, I was really, really worried about breaking the spell. Like, if I told you I wasn't really Nicole \u2013 who you were very, very into \u2013 maybe it would have somehow cheapened Kelly for you. Like maybe you wanted us both, but you wanted me to be who I've been all along, and you wanted Nicole to be something different.\"",
        "I looked at her in bewilderment.\n\n\"I know, it doesn't make a lot of sense,\" she said. \"I mean, I guess I knew at my core that if you knew we were the same person, you'd be thrilled, but those were the thoughts in my head. Really, all of them were just excuses.\"\n\n\"Excuses for what?\"\n\n\"Excuses I used to avoid finding out how angry you'd be when I told you,\" she said, staring down at the bed, her face flushed in shame. \"I was really, really afraid of your reaction.\"\n\nI tilted her head toward me. \"Kelly... I know I've told you about some fights I've been in, and some battles I've had to go through. But did you really think I'd hurt you?\"\n\nHer eyes flamed up impressively for a few moments.\n\n\"No!\" she shouted. \"I don't think you'd ever hurt me.\"\n\n\"Then what were you afraid of?\"\n\n\"That you'd break up with me.\"\n\nWait. What?\n\n\"Why would you be worried about that?\"\n\n\"Brad, I never showed you my picture, and I didn't tell you about Tyler right away,\" she said. \"Those weren't lies \u2013 those were just things I didn't tell you immediately. I had to tell so many lies to pull this off, and I know how you are about honesty... I thought it might be a dealbreaker, even as heated as things were between us. I guess at some point I decided to take the coward's way out and put it off to deal with later, once you got here.\"\n\nI sat up, tossing her off me onto the bed in the process. I stood up and paced between her bed and the dresser. I didn't anger easily \u2013 I'd had my issues with that early in high school, and my parents had been aggressive about taking care of them. But right now, I wanted to scream.\n\n\"I ripped myself up, Kelly,\" I said. \"From the moment I met you on Saturday afternoon, all the way through until we met last night. More than two days, I was tearing myself apart at the seams, worried about what I was going to tell you. There were only two scenarios in my mind, Kelly \u2013 the one where you and I clicked amazingly but you were so pissed about me falling for another girl that you told me to fuck off, and the one where you and I didn't click and I had no way of reaching Nicole. My mind wouldn't let me think about any of the possible positive outcomes. For two fucking days!\"\n\nI was about to continue my rant, but something made me peel my eyes away from the hole I'd been glaring through the wall and look at her. Her cheeks were puffy with tears I hadn't noticed until now, and she looked about as miserable as I felt. That took all the wind out of my sails \u2013 I felt like someone had just punched me in the gut. When she noticed I was looking at her, she jumped in.\n\n\"I'm so, so sorry,\" she managed between sobs. \"Please, Brad, please don't leave. It was stupid and immature of me. I feel fucking awful. But\u2014\"\n\nShe stopped to cry for another moment. I softened my tone. \n\n\"But what, Kelly?\"\n\n\"I know you didn't know who I was,\" she said. \"But I did. I knew things were going to work out. I knew we would meet here and we'd pick up right where we left off in Colorado. I had no idea just how upset you were, but I knew that whatever you were going through, it would all be over the moment you saw me again. Please believe me \u2013 I never wanted to hurt you. I thought we'd meet Sunday night, and it would be over.\"\n\nI was no longer angry \u2013 more just very upset and frustrated. Still, the anger management lessons from my teenage years came roaring back to me, and I took a deep breath. I went to my happy place \u2013 in my case, a few rows behind home plate at Turner Field in Atlanta, watching the Braves celebrate after a World Series win over the evil fucking empire known as the New York Yankees. I could hear the roar of the crowd around me, taste the peanuts I'd just eaten, and see the confetti as it fell on the field and all around me in the stands.\n\nI looked to my left, and Kelly stood next to me, as elated as I was and screaming at the top of her lungs. She caught me looking and leaned over and planted a huge kiss on my lips, slipping in only a little bit of tongue because she couldn't wait to get back to cheering.\n\nThe little happy-place vision spoke to me \u2013 even with everything she just told me, Kelly was still by my side in all my dreams and fantasies.\n\nI shifted back to the real world and blinked. Kelly sat on the edge of the bed, still in tears and looking at me, waiting for any kind of response.\n\nShe was fucking beautiful.\n\nYeah, she'd fucked with me a bit. I'd had a rough couple of days because of what she'd neglected to tell me. But as I looked at her, trying like hell not to glare, I knew her heart was in the right place. \n\nI walked over to her and pulled her up by the arm, roughly pushing her against the wall. I attacked her mouth with mine violently, knowing I'd probably bruise her lips a little bit. She kissed me back as passionately as she could, without knowing exactly what I was thinking.\n\n\"I love you, Kelly,\" I said. \"I was right before, when I said that no matter what you told me, it wouldn't change anything. I don't like it. I understand that you knew it would be a happy ending, but I didn't. The past 12 hours have been fantastic, but the two days before that were just that awful. But I love you, and it's going to take a lot more than that to chase me off.\"\n\nShe kissed me, and I let her for a moment before tugging on her ponytail and forcing her back. I leaned forward and bit her earlobe before growling into her ear.\n\n\"But now, you get punished,\" I snarled. She moaned loudly, and when I pulled back, she stared back at me with more hunger and lust than I'd ever seen from her, which was saying something after the past few hours.\n\nI took her by the arm again and spun her around, and I smacked her right ass cheek before her chest even touched the wall. I'd connected right on the sweet spot, and it made a noise like a gunshot.\n\n\"Mmmmmmmmmmmm,\" she muttered. \"Harder, please.\"\n\nI obliged, coming down on her left ass cheek with more force, but still holding back considerably. It wasn't nearly as hard as I'd spanked Beth that night on the beach in Charleston, but it had the desired result.\n\n\"Oww!\" she shouted. There was still plenty of heat and desire behind it, but it was definitely more pain than pleasure. \"Fuck, that hurt!\"\n\nOK, so now I knew her limit, and I wouldn't push past it. She didn't have to know that just yet, though.\n\n\"Good,\" I growled back. \"Thinking I was going to have to crush the woman of my damned dreams hurt, too, Kelly. Remember that.\"\n\n\"I'm sorry,\" she moaned. \"Ooh!!\"\n\nI leveled the same type of smack on her right cheek, which was already a little red from my first slap. I went back to her left, dialing back the intensity just a tiny bit more and earning a whimper.\n\n\"You've been bad, Kelly,\" I spat out. I wrapped my arms around her waist in a reverse bear hug and lifted her up, carrying her over to her vanity table. I deposited her in front of it and quickly bent her over the edge of table, exposing her ass to me. The cheeks were red and raw, even after just two swats each, and I wasn't finished with them. I'd definitely have to rub a fair amount of lotion into them later, and even still, I knew it would hurt her to sit for a while.\n\n\"You saw a picture of me the first day we talked; I still don't have a picture of your face,\" I said, swatting her right cheek. Compared to the first couple, it was a love tap, but it still made her shriek. \"You didn't tell me about your son until a few days ago.\" A smack on the left. \"You didn't have my permission, but you went out and fucked some other guy's brains out.\" I was only mildly jealous about that, and not the slightest bit angry, but it fit into the conversation, so I put it there. One more for the right. \"You told me you were with family all day Friday and couldn't talk, but you lied.\" Back to the left. \"You told me you had to work a double shift on Saturday, but you LIED!\" A double shot this time, one on each cheek. \"You lied about family stuff on Sunday, and you got my parents to lie for you about your little trip.\" Again, one shot on each side.\n\n\"But worst of all, you knew how badly my brain would be fucked up, and you still didn't tell me the truth,\" I shouted. She'd said she didn't think I would be affected quite as badly as I was, and I believed her. Still, she got another swat on each cheek. \"You've been a naughty, deceptive, conniving, manipulative little wench of a girlfriend, Kelly, and for that, you get this.\"\n\nMy cock had been doing its steel bar imitation since I'd seen her in her lingerie, and now I plunged into her sopping pussy from behind, bottoming out in a single stroke.\n\n\"FUUUUCK!!\" she shouted, gripping the edge of the table and shaking it hard enough for some of the makeup to tumble to the ground.\n\nI reached up and grabbed a handful of her hair, yanking her head up, forcing her to look in the mirror.\n\n\"You're going to watch,\" I bellowed, pulling completely out and shoving all the way back in repeatedly. \"It's not enough that you feel how much you fucked with my head. I want you to see it, and later, I'm going to make you taste it. Everything's fine, but I'm going to get my pound of flesh.\"\n\nFor emphasis, I sank my fingertips into her red, raw ass cheek, forcing her to draw a sharp breath. Her eyes flashed a raging fire at me in the mirror \u2013 she was enjoying this, as much if not more than anything else we'd done so far. I had wondered a bit if this might be too much for her, so I was glad to see she could enjoy a little rough play to go with all my newfound sensitivity.\n\nI fucked her hard for another five minutes, using long, deep single strokes, slamming my hips against her ass with each thrust. She did a pretty decent job of maintaining eye contact with me, using the mirror the whole time, but when I switched over to faster, more shallow strokes, her head started to drop.\n\n\"How many fingers am I holding up, Kelly?\" I asked, flashing four fingers at the mirror. Before she could lift her head up, I put my hand down. \"You didn't see, did you? Because you stopped watching me.\"\n\nI slapped her ass lightly four times, two on each cheek.\n\n\"Fuck,\" she grimaced when the last one landed. \"You're tearing me up.\"\n\n\"That's the idea,\" I said, but I resolved to stop spanking her \u2013 I'd done enough to her ass, and while I was still fairly upset at her for lying to me, I wasn't nearly as mad as her ass would suggest. \"I told you that a few days ago. The first time would be soft, slow and sensual \u2013 and that was actually the first few times. But the second time, I was going to fuck you until you passed out, and that was just for withholding your picture and not telling me about Tyler sooner. Now that all this other stuff has happened...\"\n\nI trailed off, letting my actions finish the sentence for me. I pulled out completely, and she sagged against the table. I lowered her onto the floor on her stomach, then laid on top of her and shoved my cock back in from behind. I couldn't get as much of my cock into her this way, but I was creating more friction against different nerve endings, and it drove her crazy.\n\n\"Fuck,\" she muttered again. \"Pressure... on my clit... almost too much.\"\n\n\"Yeah?\" I asked. \"You gonna cum for me?\"\n\n\"Can I?\" she rasped.\n\n\"Always,\" I said. \"Over and over. Don't stop cumming until we're asleep.\"\n\nHalfway through my words, I felt her body tense up like a wooden board. Her pussy almost forced my cock out when she clenched up, but I managed to keep two or three inches inside her. A couple of smaller tremors followed before she finally relaxed enough to let me keep going. We stayed in that position for a few more minutes, with her lying flat on her stomach and me propped up on my arms in a pushup pose on top of her, but my biceps and shoulders were starting to ache.\n\n\"On your knees,\" I commanded. She didn't have enough energy to get up on all fours, but she managed to pull her knees up under her enough that I could kneel behind and slip back inside. The new angle let me bottom out inside her once again.\n\nKelly's pussy \u2013 hell, her entire body \u2013 was heavenly. It was warm and wet, soft and slippery, tighter than almost anyone I'd ever been with, yet resilient enough that I didn't feel like I was hurting her when I fucked her hard. I was bound and determined not to cum until I was finished with her, but if I hadn't cum multiple times since we'd officially met, I wouldn't have been able to help myself. \n\nI used her body for another half an hour. She had more than her fair share of orgasms \u2013 I'd guess another two or three, at least \u2013 but I wasn't specifically focused on her pleasure like I normally would have been. I was more interested in how she responded to the different things I did to her. She loved it when I reached underneath and toyed with her nipples, and she went crazy when I pulled her hair. I swatted the backs of her thighs a few times, and while she didn't respond the way she did when I spanked her ass, she still seemed to enjoy it. I reached back and tickled her feet while fucking her once, and while she didn't stop me \u2013 she was being punished, after all \u2013 I could tell she didn't care for that at all. \n\nFinally, I couldn't take much more, so I rolled her onto her back and draped her legs over my shoulders. I fucked in and out of her as hard as I could for a few more glorious minutes, fighting with myself the entire time, trying to hold out as long as possible.\n\nShe sensed that I was getting close to giving in.\n\n\"Are you going to come for me Brad?\" she asked, her voice adopting a meek and demure tone. That wasn't who she was normally \u2013 after a hundred hours on the phone, if I knew nothing else, I knew how she was when one of us was about to cum \u2013 but it fit the situation. \n\n\"Mm hmm,\" was all I could manage.\n\n\"I love feeling your cum flood my pussy,\" she said. \"Do you want to do that now? Do you want to make my pussy all sloppy and messy with your cum?\"\n\nI just shook my head. I knew what I wanted, but I didn't have the breath or the brain power to put it into words. She was going to have to guess.\n\n\"No? You want to cum in my mouth? I can take you down my throat, let you fire all the yummy cum directly into my belly?\"\n\n\"Nuh uh,\" I grunted. I was about to have to just give her a demonstration of exactly what I wanted, but she figured it out.\n\n\"Ohhh,\" she said. Her fingers were rubbing her clit, trying to work herself up to one more orgasm. I knew she was trying to time it with mine, so I tried to delay just a bit longer.\n\n\"I know what you want,\" she moaned. \"You want to cum on my stomach, on my tits, on my face, on my arms, on my legs... you want to cum all over me, don't you? You want to mark your territory.\"\n\nI might have smiled. That was exactly what I wanted, but she articulated it better than I could have even if I wasn't temporarily lust-struck. \n\n\"Well, I'm already yours, Brad,\" she said. \"You claimed this prize a long time ago. But I want it, too. I want to feel your hot, sticky cum all over me. I want it dripping off my skin, all over my nipples, tangling up my hair... give it to me.\"\n\nHer fingers had the desired effect, and I felt her pussy clamp down again as she came. I wrenched myself loose anyway, kneeling between her outstretched legs as they fell from my shoulders. With a huge bellow, I unleashed torrent after torrent of cum. The first shot landed just south of her lips on her chin, with a few more streaks landing on, between and just beneath her breasts. A lot of it landed on her stomach, and I directed the last few dribbles directly onto her engorged clit and the fingers that were still playing with it.\n\nWith my balls drained, I suddenly lost the ability to balance myself, and I tumbled into a heap next to her. We both lay on the floor for the next little while, gasping for oxygen and struggling to get our bodies back under control. \n\nI got there first. Kelly was still shivering and sporadically spasming when I pulled her close, my arm laying in a pool of my own cum just underneath her breasts. I couldn't have cared less.\n\n\"That was...\" she couldn't finish the statement. I felt a slight hitch in her chest every few seconds.\n\n\"Yes,\" I agreed. \"It was the best I've ever had, too. Just barely edged out what we did this morning at the hotel, which just barely beat out what we did last night.\"\n\nShe looked up at me. The tears were still in her eyes, but there was a bright, gleaming fire burning behind them.\n\n\"You really mean that?\" she asked.\n\n\"Absolutely,\" I said. \"I'm guessing that's going to continue. The next time will somehow top this one, and the time after that will be even better.\"\n\n\"If that's the case, you might kill me,\" she said. \"If I didn't have a son to think about, I might be okay with that.\"\n\nWe laughed together quietly.\n\n\"I need you to hear something,\" I said finally. She looked deep into my eyes. \"I could have kept my feelings a secret, Kelly. I could have taken you into the bathroom, bent you over the sink and pounded you as hard as I fucking could, spanking your ass until you can't sit for a month, not giving a shit whether you got off or whether you even enjoyed it.\"\n\nShe moaned at my words.\n\n\"I could have fucked you hard for an hour, came all over your face, and then made you wait in bed while I took a shower before coming out and telling you I still love you, even though I already knew that. You wouldn't have known, and while I'm sure you still would have enjoyed yourself, you'd have been worrying for the past hour. And that's just fucking wrong.\"\n\nShe started to talk, but I cut her off with a kiss.\n\n\"No more, okay?\" I said. \"I like surprises as much as anyone else, Kelly. But with things like this, you can't do this again. I'll never be anything other than honest with you. You have to promise me the same from now on.\"\n\n\"I promise, Brad,\" she said. \"This was really, really stupid of me. Thank God it didn't cost me more than it did. Now I need you to promise me something \u2013 promise me you'll let me make it up to you.\"\n\nI kissed her flushed, sweaty cheek. \"I think that's what you just did,\" I laughed. \"But if you have something else you want to throw in, be my guest.\"\n\n\"You're telling me,\" she said, her eyes rolling back in her head just a little. \"I mean, seriously, if that's what I'm going to get every time I withhold information...\"\n\nShe trailed off, and I laughed with her, knowing she was mostly joking.\n\n\"No, next time, I'm tying you to the bed wearing four layers of clothing except on your feet, your stomach, and under your arms. And I'm going to tickle you until you pass out.\"\n\n\"Brad!!\" she yelled. \"That's ruthless!\"\n\n\"And it would fit the crime.\"\n\n\"That would be way, way worse,\" she said. \"Although, I will confess, at the beginning I was a little scared. You spanked me pretty hard the first couple of times.\"\n\nI wasn't going to apologize \u2013 this was going to be an equal partnership, but sexually, it was clear that I was more dominant and her a touch more submissive, so anything I did in the bedroom that she didn't absolutely hate, I wouldn't say sorry for. \n\n\"I could have done it even harder, but I could tell I'd reached your limit, at least for now,\" I said. \"You know you can always tell me to stop, Kel.\"\n\n\"That's the thing,\" she said. \"Sometimes I might tell you to stop, and I might say no, but I don't really mean it.\"\n\n\"Then we'll come up with some other safe word later, ok?\" I said softly, attempting to soothe her by lightly running my fingers through her hair. \"For now, let's fix the problem.\"\n\nI grabbed a hand towel from her bathroom and tossed it to her, so she could clean up. Meanwhile, I ran her a bath, using some lavender-scented bubble bath she had sitting on the sink. I helped her into the water before taking my place behind her. It was a tight fit, trying to squeeze two of us into a normal-sized tub, but we made it work. My left leg hung over the side, and my right leg sat atop hers on the ledge next to the wall.",
        "We didn't say much, just letting the steaming hot bath water soak in. I lazily massaged her tits, while she gently squeezed my thigh. I moved my hand between her legs and found that she already had one of hers there, so together we brought her to one last, long, languid orgasm. She laid her head back against my shoulder and dozed off.\n\nIt took me about 10 minutes to wriggle myself out from behind her, but once free, I made sure she wouldn't slip under the water and returned to the bedroom, laying out three huge, fluffy towels on the bed. I collected her still-sleeping form from the tub and laid her across the towels, using the excess towel space to dry her off. I rolled her over and did the same for her backside, then I picked up a bottle of lavender-scented lotion I'd grabbed from the bathroom.\n\nI spent probably 10 minutes lovingly and tenderly rubbing the lotion into her bright red ass cheeks, using as gentle a touch as I could. She'd definitely be sore when she woke up, but hopefully this would accelerate the skin's natural healing process. It didn't hurt that I got to massage the most perfect ass ever created, and I made a mental note to do this for her at least two or three times a week. \n\nShe was still out like a light when I finished, so I curled up behind her and joined her.\n\n*******\n\n\"Your dad knew nothing,\" my mom said, tossing a tortilla chip at him. \"I can't trust him to keep a secret from his son.\"\n\n\"That's because I'm a good parent,\" he said, grabbing it off the table and cramming it in his mouth. \"You should be ashamed that as his mother, you can keep a secret from him.\"\n\n\"No argument from me,\" I agreed, tipping back the Diet Coke I was drinking. Everyone else gathered around the table on my parents' back deck \u2013 my parents, Tommy, my dad's best friend J.B. and his wife Laurel \u2013 was drinking beer or something harder, but I was refraining. Only my dad and I knew why.\n\n\"I did it for a good reason,\" my mom argued. \n\n\"Yeah,\" my dad quipped. \"Defrauding your son.\"\n\nThat got a laugh out of everyone.\n\n\"That's not entirely true though, dad,\" I said. \"You knew where I was going when I left Monday night, and you knew what was waiting for me. He kept that secret from me pretty well.\"\n\n\"Only because I was standing right next to him, threatening bodily harm with my eyes if he said anything,\" she said. \"To be fair, though, I didn't actually know she wasn't going to tell you she was going to Colorado, Brad. I knew she was going and got her the time off, but I assumed her next call was to tell you she wanted to meet you there.\"\n\nI just shook my head. My dad took over.\n\n\"I didn't know she'd gone to Colorado to meet you until after you went to bed Sunday night,\" he said. \"When you and I were chatting, I could tell something was wrong, so I asked your mom later that night, after we did our best to wake you up.\"\n\n\"TMI!\" Laurel shouted, throwing another chip at my dad.\n\n\"Not at all,\" Tommy chimed in. \"Please continue, Will.\"\n\nMy parents knew Tommy thought my mom was hot \u2013 they'd overheard him telling me as much back in high school. Tommy was harmless, and my dad agreed with him anyway, so it was more or less a running joke between the four of us.\n\n\"You will not,\" my mom said, putting her foot down. I wasn't sure my dad was going to offer up any further details anyway, but my mom's statement made the decision for him.\n\n\"Anyway,\" my dad said. \"She told me Kelly had gone down there to meet you, and that it had gone really well. I disagreed... like I said, something seemed wrong, and if things had gone well, you'd have been gushing about her. That's when she told me that all you knew was you had met someone very special, but you didn't know who she was yet. And I was told if I said anything, I wouldn't even be allowed to sleep on the couch.\"\n\n\"So you only lied to me all day Monday,\" I said. \"That hardly gets you a pass.\"\n\n\"It doesn't,\" he agreed. \"But I tried to make it up to you. The hotel was my idea.\"\n\nI thought about the various ways we'd defiled room 812 at the Shenandoah Inn.\n\n\"Well, thanks for that at least,\" I said. \"And you, mom? When did you find out?\"\n\n\"She called me Sunday morning, around 10 a.m.,\" she said sheepishly. \"She was still on the road, and she told me how amazing you were. I wasn't sure she was actually talking about my son, but she insisted. I told her we were throwing you a surprise welcome-home party, and that I was sure you'd tell me all about it then, and that's when she blindsided me. Up until then, I thought you were a willing participant in all this. She told me she'd screwed up by not telling you, but that she'd make it right when you got back.\"\n\n\"Wow,\" I said. \"So when I pulled into the driveway, and all during the barbecue, you knew,\" I said. She nodded. \"And you decided not to tell me.\"\n\n\"She begged me, Brad,\" she said. \"I told her I didn't like keeping secrets from you, but she convinced me that it was her screw-up, her secret to tell. She's such a wonderful girl, with a beautiful heart... I just couldn't say no.\"\n\nI had to agree with her there. I was sure I'd find myself unable to say no to Kelly many, many times in the future.\n\n\"But I tried,\" she said. \"I suggested that she come to the barbecue and just do it there. She appreciated the invite, but she wanted to do it in private.\"\n\n\"I'm sure she did,\" Tommy chimed in. I hadn't gone into detail, but I'd given him a basic outline of how things had gone when I finally met her Monday night.\n\n\"Anyway, she asked for another couple days off, and I gave them to her,\" my mom concluded. \"I told her you'd be pretty mad when you found out.\"\n\n\"I was,\" I agreed. \"We took care of it though.\"\n\n\"Yeah, I bet you took care of it,\" J.B. said, earning a round of laughs. He generally was the quietest one of the bunch, but he made every word count. \"Can she walk properly yet?\"\n\nThe smug look on my face was all I planned in response, but someone else answered with words.\n\n\"I can walk, yes,\" she said. \"Sitting down is another story altogether. But that's enough of that.\"\n\nI understood when Kelly walked around the corner, holding one person's hand with another three trailing behind them. It was hot outside, and she was dressed for it, wearing just a light blue halter top and pale yellow shorts. \n\n\"Hey, honey,\" I said, getting up and walking over to her quickly. She held a bottle of wine in her other hand, and I handed it off to my dad. I wasn't sure how much I could get away with considering the people she'd brought with her, so I gave her a simple peck on the lips.\n\nIt had been two days since she explained everything to me, and we'd spent all but the past 10 hours together. I'd finally left her apartment this morning, a few minutes before she headed off to work. \n\n\"Hey, baby,\" she replied. Her kiss lingered a little longer than mine had. When we pulled apart, she motioned to the three people standing behind her.\n\n\"Brad, this is my mom, Catalina,\" she said, and an older, more mature version of Kelly stepped forward to shake my hand. She looked even better than she did in her pictures.\n\n\"I've heard a lot about you,\" she said with a twinkle in her eye. \"All good, of course.\"\n\n\"All of it?\" I asked. \"I doubt that.\"\n\nHer eyes twinkled. \"Well, most of it,\" she said.\n\n\"And this is my aunt Nicole and uncle Shane, my dad's sister and her husband.\"\n\n\"Ah,\" I said, shaking hands with them as well. \"So, this is the woman partially to blame for all the craziness of the past few days.\"\n\nNicole didn't look that much older than Kelly, maybe late 20s or early 30s. My comment confused both her and her husband.\n\n\"Shush, Brad,\" Catalina said, making me wonder just how much Kelly had told her mom about what had transpired. \n\n\"And this,\" Kelly said, drawing my attention back to her then redirecting it lower, \"is Tyler.\"\n\nThe little brown-haired boy looked up at me with a shy smile before quickly ducking behind his mother's leg. When I took a step toward him, he moved behind Kelly's other leg and grabbed his grandma's hand.\n\n\"Hi, Tyler,\" I said, crouching down to get to his eye level. \"Can you give me five?\"\n\nKelly had warned me that he might be shy, but she'd told me he couldn't resist giving anyone who asked a high five. As promised, he stepped forward and dutifully slapped my hand before retreating back to Fort Legs.\n\n\"Aww, you're a little shy, but that's okay,\" I said. \"I'm willing to bribe my way into your good graces.\"\n\nI walked back over to the table, and Kelly and Tyler trailed behind me as the others made introductions amongst themselves.\n\n\"Let's see what Brad brought for you, huh?\" Kelly said.\n\n\"Well, I have a couple things,\" I said. I reached under the chair I'd been sitting on and pulled out a toy police car, about a foot long with all the bells and whistles, as if Kelly needed another noise-making toy at her apartment.\n\n\"Car!\" Tyler shouted, clearly excited to see something he was familiar with. \"Mine?\" he asked, looking at Kelly for confirmation.\n\n\"Yeah, it's for you,\" I said as she nodded at him. \"But I have something else you might like first.\"\n\nI reached across the table and grabbed a cupcake off a large platter, sliding it to the edge of the table closest to Tyler.\n\n\"Ooh, cake cake!\" he exclaimed. He didn't wait for permission this time \u2013 he grabbed it off the table and took a big bite of the chocolate icing.\n\n\"That's a man who's got his priorities straight,\" Laurel said.\n\n\"Yeah, you don't get between that boy and food, unless you're willing to lose a limb,\" his great-uncle Shane said. \n\n\"Makes sense,\" I said. \"Let other kids learn numbers and do the ABCs. If all the adults disappear tomorrow, you can count to three, but I'll be over here with the food.\"\n\nEveryone laughed at that.\n\nMy mom invited Catalina inside to help her cook up some chicken carbonara for the night's dinner. It was Kelly's mom's recipe, which Kelly had given to my mom so she'd have all the ingredients ready. I figured they'd become fast friends. The rest of the adults chatted together amiably except for Kelly and I, who were standing off to the side watching Tyler play.\n\n\"Why are you just drinking a Coke, Brad?\" she asked me.\n\n\"Because I'm gonna be around this little guy for a long time, I think,\" I said, reaching down to show him a button he hadn't pushed yet. \"Eventually, when he's more comfortable with me, I'll be okay having a few when he's around, but for now I don't want my judgment impaired, and I don't want him associating me with the smell of alcohol. My dad did the same thing for my sister and me when he first met my mom, and that's a pretty good script to follow.\"\n\nKelly looked at me with joy in her eyes. She blinked back a few tears before saying a quiet, \"Thank you.\" I kissed her on the forehead, and we both looked down at the adorable little toddler.\n\n\"Do you like your car?\" Kelly asked her son.\n\n\"Yeah, my car!\" he exclaimed.\n\n\"Can you say, 'Thank you, Brad?'\" she asked.\n\n\"Tank ooh, Bad!\" he said, and even the adults at the other table laughed at that.\n\n\"He just met you and he knows you already,\" Tommy said, ambling over from the other table and taking a seat near us.\n\n\"Oh, there's only one person here who knows how truly bad I can be,\" I said, lightly rubbing my palm over Kelly's tender ass cheeks. She shivered slightly in response. We'd learned the hard way that Kelly's skin was a little more sensitive than usual, so while I'd definitely done worse in the past, what I'd done to her the other day was probably the most I would ever do \u2013 and that was perfectly OK with me. I'd rubbed her down with lotion three or four times since the rough session, but she was still sore. \n\nTommy grinned and opened his mouth to say something, but he thought better of it. \"So what are your plans now?\" he asked. \"You guys gonna keep burning holes in I-15 for a few months?\"\n\nKelly looked over at me. \"We've talked about it some. My lease expires in two months, so we might move in together.\"\n\n\"Down here in Pocatello or up in the Falls?\" he asked.\n\n\"We haven't gotten that far yet, Tommy,\" I said, hoping he'd catch my subtle hint. I didn't want this to turn into an interrogation. \"Hell, I need to see how she'll handle me vegging out in front of the TV watching football on Sunday afternoons before I can even commit to moving in with her.\"\n\nIt was a joke between her and me \u2013 we knew wanted to be together, but we'd idly wondered what little quirks we'd discover about each other, both before and after we moved in.\n\n\"As long as you don't expect me to bring you a beer all afternoon,\" she chided me. \"Because I'll be doing the same thing!\"\n\n\"Dude...\" Tommy said, trailing off.\n\n\"I know,\" I said. \"The perfect woman, right?\"\n\nKelly blushed, and I pulled her closer to me. Tyler ran his car across both of our feet as the siren blared.\n\n\"Speaking of football, Brad,\" he said. \"I scored us some tickets to the Broncos game in Week 3, when they host the Cowboys. Last week in September I think.\"\n\n\"How many tickets?\" I asked, looking at Kelly. Her dad used to take her to Broncos games, and I remembered telling her we'd go down to Denver for a game soon.\n\n\"Well, a client I fly for sometimes has season tickets but he's out of town that week,\" he said. \"I only asked for two, but I can probably get another one. I do so love being the third wheel.\"\n\n\"Why not get two more?\" Kelly asked. \n\n\"Yeah, I guess I can probably find someone to go with me,\" he said. I hadn't really thought of it until now, but Collette was not here with him, nor had he mentioned her at all. Maybe she just had somewhere else to be, I thought, but maybe what we'd talked about on the plane on Monday had stuck with him, and he'd decided to look for what he really wanted in a woman.\n\nAnd I happened to know a really hot, thick waitress in the Denver area that was exactly Tommy's type.\n\n\"We flying or driving?\" I asked.\n\n\"Man, you know I fly for the job so much, when I'm doing something for fun, I'd prefer to get in the car and drive.\"\n\nI looked at Kelly, and she was already looking straight back at me. Our eyes flashed together as we spoke in unison.\n\n\"Road trip!\"\n\n*******\n\nSome of the people reading this were probably in elementary school when I started writing this series. A lot of you just picked it up within the last few years, and a precious few have been there since the beginning. I know of at least two readers who've died without getting able to finish what I started nearly a decade ago. No matter which category you're in, thanks for reading. Your votes, comments and private feedback have been invaluable to me throughout the years, and are a big reason why I finally saw this through and finished it. Please feel free to share your thoughts now that it's done, either on this particular chapter or the series as a whole.\n\nI'm not done writing, though in the future, I won't publish a multi-part series like this until the entire story is written. Too much waiting for the readers, and too much pressure for me to write something I might not be inspired to write simply because people are waiting. So I'll have something new at some point \u2013 it just might not be soon.\n\nAs you might already know, all my characters live in the same universe. The other two stories I've posted contain characters from Road Trip. I have maybe 10 stories at various stages of completion on my computer, and all of them have characters that first appeared here in Road Trip, some as the stars, and some as just supporting characters. If I ever get everything written, you'll likely see a 'what happened after Brad' story for just about every major character featured throughout the road trip. You'll also see more of Brad and Kelly someday. If you have any ideas on who you'd like to see more of first, let me know.\n\nThanks for going on the journey with me!"
    ],
    "authorname": "SpotInTheSand",
    "tags": [
        "brad",
        "kelly",
        "road trip",
        "final",
        "finale",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/brads-road-trip-ch-21"
}