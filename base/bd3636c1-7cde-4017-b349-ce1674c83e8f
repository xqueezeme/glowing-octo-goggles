{
    "title": "My First Sybian",
    "pages": [
        "This is a true story about me, riding my first sybian... \n\nHi, I'm Barbara, a 28-year old Dutch girl. I work in an international law firm in Amsterdam but occasionally I write reviews in Dutch about adult pay-sites. \n\nI don't have a steady relationship, but I'm very open when it comes to life, and I do enjoy sleeping with men. Although people at work know I'm sexually active and very open, I try to keep work and business separate. I have been posing occasionally as a lingerie model. I have what you might call a classic build: blond curly hair, 5 inch 7 (1m74), 119 pounds (56kg), and 35C, 24, 35. \n\nMy editor wanted to know if I could do a story about interesting toys. Not just the everyday girl toys like vibrators or dildos or love eggs, but \"something special.\" He told me to just let my imagination flow... \n\nI really didn't have to think long. A few years ago, a former boyfriend told me his ex-girlfriend once rode a sybian in his presence. He told me he had never seen a girl or woman in such ecstasy, and that his girlfriend had a screaming orgasm, all the while begging for more. At that point, I didn't even know what a sybian was; when I finally found out, the idea of riding one stuck fast in my mind. The idea of being penetrated, of being totally dominated, by a machine relentlessly fucking me hard and deep was a major turn-on. I told my editor that's what I wanted to do- ride a sybian. He agreed immediately; riding one would be my assignment. So much for method-acting! By the end of the day all I could think about was riding this machine that was built for only that one purpose make me come over and over again... \n\nMarlies, a colleague of mine, said she would arrange things. She put an ad on the Dutch web site and asked if there was a woman or couple living in Holland that owned a sybian, and would they allow me to write about the experience of riding on it. Na\u00efve me- I thought I would ride my first fuck machine in private, certainly not in someone elses house, and absolutely not in the presence of another woman or even a couple! But as things came together, it became obvious that it would not be that way, and that there was no backing out. A week from then, on Friday, September 12th, I would ride my first sybian! \n\nMarlies had made an appointment with John and Elizabeth in Utrecht for 6 pm, and it was about half an hour away from my house. I really had no idea what to expect, if John would be at home, or if there would be enough privacy for me to enjoy my first ride on this fuck machine. I know I can be pretty loud when I climax and didn't want to be embarrassed if someone heard my moans and cries of ecstasy. All I knew was that Elizabeth was 36 and Marlies told me she was really nice on the phone. \n\nThat night I didn't catch much sleep at all. My thoughts were wrapped around what was soon going to happen. I was emotionally and sexually excited, and more than a little frustrated as I felt my juices flowing, but decided I didn't want to touch myself. I wanted to hold back all of my passion for the big day. I had a strange erotic dream about a woman fondling my breasts and licking me between my legs. A rather strange dream, really, because I hadn't been with a woman since I experimented with a girlfriend in high school. \n\nThose dreams had haunted me all night and into the predawn hours. Next morning when I was taking off my baby dolls, my bikini bottoms were sopping wet. My clitoris had poked its head out of its thin sheath and my pussy lips were already swollen thick and had flushed to a dark pink. Even my nipples were erect and a dark chocolate brown. As I took a shower I got control of my erotic fantasies and focused on things I needed to do at work as I shaved a few stray blonde hairs from the small patch around my sex. I got dressed in a fine pair of silk panties which displayed more than half of my firm ass cheeks; I looked sexy, but not too sexy. My ass and breasts have always been my biggest assets and, even at 7:00 in the morning when I looked in the mirror I felt already incredibly sexy and hot. I still had to work that day, but my mind would drift off to the evening. I was sexually aroused all day, waiting for what to come. By the end of the first hour it had totally taken over my concentration. On my lunch break I debated whether I should go into the woman's rest room and masturbate myself to a climax. I was so excited I knew I would come quickly, but I decide not to do. Waiting, I rationalized to the over-stimulated erotic part of my brain, heightens the desire. Even then, my pussy was keeping my panties wet, and my little pubic mound glistened. Then it was quitting time- finally the weekend! I took the short drive to Utrecht, stopped at a nice house near the city's center, got out of my car and ring the doorbell. \n\nElizabeth was, indeed, nice, but she was also beautiful, with long curly black hair and a slim but curvaceous figure. She immediately made me feel at home. We talked a bit, small talk, and then to the purpose of my visit. She took my hand and guided me to the veranda, and there I saw the naked sybian, fully exposed on the carpet. The veranda was open all around, very light and airy, with the early evening sunlight poring in and a spectacular view of their garden. \n\nThis was something I did not expect. I expected a more private environment, not a place where I have a view on the surrounding. Elizabeth assured me however that this is a private place and no one can see in or notice anything, and that she will leave me alone. I had a few doubts and didn't exactly know what to do, but the machine, all chrome and black reflecting sunlight in little shards, quelled my fears. Elizabeth explained all the functions of the sybian- the speeds, setting, the workings in general- then left me alone. \n\nI kicked off my shoes and slipped out of my narrow jeans, then pulled my tank top over my head, unsnap my bra and slide it off my shoulders. My firm breasts were exposed to the sunlight, my rock-hard nipples poking out like little chocolate kisses. At first I didn't want to be all naked- I don't know why. A bit shy I guess, so I put on my white tank top again and then slowly pushed my panties down my thighs, over my calves, and onto the floor. Just as it had been the entire day day, the crotch was wet and sticky, smelling of sex. I was all naked now, except for my tank top. My tits felt very heavy. I fondled them and pulled at my nipples, pinching them as I always do when I start to play with myself. I stroked the erection pointing up from pubic place of the sybian. He was soft and yet firm, every inch of him mimicking manhood in nature, from the shape of the head, to the veins on the curved shaft, to the testicular sack. He was nothing like the hardness of glass or plastic. He even felt warm from the sun. Instinctively, I went on my knees, opened my mouth and start to lick and suck him. I don't know why, but it felt like something I had to- he's was gonna be my lover, after all. I was very wet, my thick musky juices flowing like honey down the inside of my thighs. I lowered myself onto him, swollen pussy lips stretching to welcome his firm manhood deep into my body. I moaned as he penetrated me, eyes closed, thighs tense and quiver, the muscles tightening around the 5\" thickness of him. His full length finally impales me, the bulbous head and slick shaft filling my vagina with electric ecstasy. This feels good, I thought through the clouds of lust, in fact, it feels better than good. This is what I needed! \n\nThe yellow gold and crimson reds of sunlight were all around now. Sunbeams danced warmly on my almost naked body and I started to rock myself on his rigid member. The device was still turned off, yet this, just this, felt good already. I played with my naked breasts and pushed my clit down against \"the flipper,\" a device at the base of his pubic plate specially built for clitoral stimulation. I shivered when it began to tease my clit to full erection. I knew this was gonna be some wild ride. \n\nI was very comfortable but I wanted more. I had been longing for an orgasm since I knew this was my assignment, and it had been too long since a man had fucked my pussy. I took the remote and put in on 10. He began to vibrate, immediately stimulating my swollen pussy on the inside and blazing that familiar fire of a pending orgasm into my loins. I closed my eyes- it seems like such a natural thing to do, rocking this sybian, feeling the gentle rotation deep inside my pussy. Seconds later, I completely lose control as the tension from the last few days explodes in a blinding flash behind my eyes. I couldn't help but moan and cry out in lust, all this within half a minute after impaling myself on the sybian. It was a screaming orgasm, uncontrolled, animal in nature. I normally am pretty loud when I come, but this time I was almost embarrassed by the loud cries I made. It was really no surprise as Elizabeth quickly entered with a worried look on her face and asked if everything was ok. Then she became a bit ashamed when she suddenly realized that it was just a woman that had come loudly and intensely, an expression of her passion. \"Oh my, Barbara,\" she said, \"did you need it that much?\" And I could only nod as the waves continued to sweep through my body. She kept looking at me and told me I'm really beautiful. I just thanked her. \n\nMeanwhile, the sybian kept doing its work, the pleasure, warmth and lust once again overwhelming. I began bucking against the rock-hard cock deep inside me. I don't mind anymore that Elizabeth is in the same room, not even when she takes my underwear, smells me and says that it is so wet. This woman knew just what to say to me and I couldn't help but getting excited from her watching me while I rubbed my clit over the vibrating nub. \n\nI start to moan uncontrollably and let my hands under my tanktop and start fondling my breasts and nipples. \"Take of your top, Barbara, show me how beautiful you are, show me your tits,\" Liesbeth \"demands\" and I put off my top and start to pull my nipples and fondle my breasts that feel very heavy now... \n\n\"Ride it,\" Elizabeth urges, licking her lips as she edges the vibration up a notch. \"Come on, Barbara, ride it good!\" and I felt the firmness between my legs come alive, humming its way into my flesh, somehow making me tremble in its grip. That ridged pole shoved up into me was turning relentlessly, rubbing up against some deep place that I didn't even know existed. My clit feels swollen, huge, and the wetness between my legs forming a thick pool. I started to moan uncontrollably, my hands wandering from my clit, up my ribcage, fingertips fondling my breasts and nipples, swelled plump, seeming to get longer as I come close to another orgasm. \"I'm gonna come, I'm gonna come again,\" I growl at her, and now I also touch my ass, pushing a finger deep in my wet and open asshole, as I always do when I'm losing control. Elizabeth whispers, \"Go on girl, come for me.\" I screamed even harder as I pinched my nipples hard between my thumb and forefinger. \n\n\"Nowwwwwwwww!\" I howled, jerking and bucking on top of the machine, mashing my whole pussy down against it as if my womanhood could merge with the chrome and plastic fuck machine somehow. Gasping, moaning, I pulled myself off the pulsing torrent between my thighs. Panting, staring at the still-sticky, rotating cock, I shuddered and shuddered, an aftershock. I finally got off the sybian. This is too much for me, I murmured, and lay myself back in the folds of a black leather couch. \"Please, do you mind?\" she asks politely, \"let me.\" Without waiting for my response, Elizabeth lowered herself on the sybian, still drowned with my juices. Somehow this excites me very much. Elizabeth rides the tool, but at a much higher pace than me, while she keeps on looking at me, as she stimulates her pussy with her fingers. I've never seen a woman bringing herself to a climax from this close and she looks like a Greek goddess, with her black curly hair and perky tits... I smelled her feminity and saw her clear thick juices flowing down her thighs. I touched myself again, and when I saw her looking at me, I opened my legs for her to enjoy the view of my most intimate parts; as Elizabeth saw the pink pedals of my womanhood open for her, she couldn't take it anymore and orgasmed hard on the sybian. \n\n\"I want it again, I want it again,\" I murmured under my breath while I continued to rub myself in her presence. \"I think you need this, Barbara,\" Elizabeth said as she replaced the single erection with another piece, a mutant piece with two cocks, just next to one another. Both have the same size as the single. Elizabeth must have seen that I also touched my other hole while masturbating myself and must have put one and one together.... I'm a bit embarrassed but my lust overcame me. I lower myself onto one of the erections... it's really no problem, I'm still very open and wet... It was Elizabeth who was in charge as she turned on the machine and the fucking began... again! \n\nThe other erection was now pressing against me, against my buttocks, and I was slippery and wet there too... I felt it probing its way in, gently but firmly opening my anus. The fucking in my pussy got me very aroused and I rocked backward, pushing my body up, which allowed the other intruder finds its way in my tiny hole from behind... and if felt! so! good! \n\nAs I said before, I'm very sensitive in my other hole and all barriers were away now as I started to beg and scream for more and pushed my ass to the back to feel the bulbous cock move deeper. I'm being ass fucked. It was the first time being filled up by two fully erect cocks and man, it felt good. I bucked and screamed at Elizabeth to push more buttons, to make it feel more... more... more... I have never been fucked by two man at the same time... but now I know I just have to try it! \n\nMeantime, Elizabeth was masturbating again with her legs wide open and I had a splendid view of her wide open pussy, still dripping juices from the sybian attack it had just endured. \n\nI was completely filled and started to shake and tremble. I forgot everything around me. My world was just the feeling of those two cocks deep inside me, fucking me harder and harder until my body experienced a complete sensory overload and satisfaction it had never experienced before. This relentless machines fucks my ass and pussy as no man has ever done before. \n\n\"Oh fuck, oh yes, oh fuck my ass, fuck me, fuck me, oh what... what... is this?\" I heard myself say and then I realized from where it was that I was coming. I had my first g-spot orgasm and I felt my body stiffening... \"Ohhhhh yes yes yes!\" I moaned, as I came, squirting, juices flowing out as my head went back, my pussy and asshole making wet noises, my orgasm, hitting me like thunderbolts... tears went down my eyes and face as I came over and over again. At the same time also Elizabeth started to scream and also she climaxed with the same type of animal noises. \n\n... \n\nHalf an hour later, her husband John came home and met two ladies with faces flushed in passion while having a coffee, both of them still sitting in their bra and panties around the kitchen table. Elizabeth told him about our experiences. John was constantly looking at my breasts, still firm from my recent fucking and with the erect nipples taut against the thin cloth. It felt very normal to be watched by him, and then the natural happened. \n\nElizabeth opened John's fly and started to suck on his fully erect manhood, her eyes and face a cool calm while looking at me. Meanwhile John was still looking with lust at my body. I removed my bra and began fondling my breasts and nipples, enjoying the effect it obviously had on him. As he watched me tease my nipples, I told him to come in the mouth of his lovely wife and one minute later, he shot his thick load down Elizabeth's beautiful neck. \n\nThis is about it, my first sybian ride experience and my first g-spot orgasm. The sybian has brought sex to an entire new level for me, so three days later I bought myself a sybian... I don't know what the sybian will bring for me. But I want to share it with you... \n\nBarbara, just a dutch girl "
    ],
    "authorname": "Barbaraallsybian",
    "tags": [
        "amsterdam",
        "lingerie",
        "anal",
        "ass",
        "screaming orgasm",
        "lesbian",
        "sybian",
        "seduction",
        "g-spot"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/my-first-sybian"
}