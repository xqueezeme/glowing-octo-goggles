{
    "title": "The Never Series Pt. 04",
    "pages": [
        "This is Part Four of a four-part story. \n\nShe had less experience than he'd hoped \u2013 actually, no experience at all with this particular type of case. On the other hand, when Charley recommended her, he hadn't mentioned her best qualifications, so he was unprepared to have met such a pretty lawyer. \n\nHis brain told him to ignore that. Beauty, he'd come to believe, was a Siren's song that too often portended disaster, and after his humiliating experience with Caroline, part of him had sworn off romance entirely. He hadn't touched a woman since his unceremonious departure from her mansion five months earlier. \n\nHe was only 51 years old, but his mind had resigned itself to the bleak prospect of spending the rest of his life alone. One part of him was certain that no good could come from trusting another woman, especially if she was beautiful. Of course, another part of him completely disagreed. \n\nAnd there was no denying it \u2013 she certainly was stunning. That made him wonder why Charley hadn't mentioned that salient fact. Then again, Charley's reticence made sense, since they were first-cousins, so Charley obviously didn't think of her in the same way that he and, he presumed, most other warm-blooded males did. His first thought when she introduced herself to him in the lobby of her firm's San Jose law offices was that, though he might not win his case, with her by his side, he would surely go down with a smile on his face. \n\nHe didn't really know much about civil litigation. He had taken two law classes in graduate school \u2013 both in Education Law \u2013 but the case law and precedent he'd studied didn't have any relevance at all to intellectual property theft. \n\nGrad school was a long time ago, but he remembered discussing Plessy v. Ferguson and Brown v. Board of Education, and several other notable cases, and he'd written papers on Tinker v. Des Moines and Everson v. Board of Education. \n\nBut all of those cases, even the ones that weren't ostensibly about education, essentially dealt with civil rights issues that had implications for schools, but had nothing whatsoever to do with plagiarism. In his experiences working in high schools, plagiarism usually involved a not-too-bright, sophomore English student copying his entire Julius Caesar essay word-for-word from SparkNotes! \n\nStill, as he stared at the young attorney seated across the desk from him, none of that mattered. Besides her sultry blonde looks and spectacular curves, he was also encouraged by what Paige Jordan, Esq. was saying. Even without having read his story, she felt his was an open and shut case. She said that she couldn't see how either a judge or a jury wouldn't find for him, since the entire case would revolve around that email. She also felt that, based upon the facts, Caroline and her publishing company would likely settle long before the case went to trial. \n\nBut he didn't have a copyright, he pointed out. Didn't that mean he was screwed? \"No, contrary to what you might think, that may not matter all that much\", she answered. \"I would, however, encourage you to consider copyrighting in the future as a way to protect yourself, but as long as you've created something yourself out of whole cloth, you have the property rights to that creation. The only issue is whether you can prove you are the creator, not someone else.\" \n\nAnd that was what made his case so strong, she said. Not only was there was an electronic record of him sending Caroline the story, but he had read somewhere once that if he emailed himself a copy of a story, that would help to establish the date when he was claiming the rights to it, so he had taken the precaution of emailing all of his stories to himself once they were finished. \n\nHis own computer could be examined to verify that he had sent those emails, and his files could be analyzed to prove that they had been created before that email to Caroline. If Caroline could not produce any evidence of files that pre-dated his, he would essentially have proven his case. \n\nOn top of that, if there was a strong resemblance between the writing style in some of his other stories and The Awful Grace of God and no real similarities between that story and the rest of Caroline's work, Paige felt that he could prove by a preponderance of evidence that he was its author and Caroline was not. \n\nIt was certainly true that Caroline had changed some things \u2013 mostly trimming his more explicit scenes \u2013 but as near as he could tell that had been done to conform to the commercial strictures of romance writing and to hew the story slightly more closely to her own clearly established style. \n\nBut she'd lifted the entire plot, characters, and about 70 percent of his text, and when it came to that text, there was little doubt about it \u2013 it didn't really sound anything at all like Caroline's work. And so, the first sentence of that review in The Los Angeles Times helped his case \u2013 \"Nothing in Caroline Cole's past work could have prepared readers for the quantum leap forward she has taken with The Awful Grace of God.\" \n\nWhile she spoke, he tried to listen attentively \u2013 she was talking about Caroline's publishing company, and how the first step was to file a preliminary injunction against it to stop the book's publication \u2013 but the truth was he was more consumed by the lilting rise and fall of her voice than her words, and even more by the lovely mouthpiece from which those words sprang. \n\nPaige Jordan was 32 years old and held a law degree from Princeton. She'd passed the bar in California seven years earlier and had been practicing with Intellectual Property Law Group ever since. \n\nBecause their offices were in San Jose, most of the cases she'd handled in her time with the firm dealt with copyright infringement involving the high-tech products and processes of Silicon Valley companies. Neither she nor anyone else in the firm had handled a plagiarism case. \n\nYet, it only took her five minutes to convince him that didn't matter. For one thing, she was clearly an accomplished attorney, and even without experience handling plagiarism, she could recite off the top of her head enough relevant case law about intellectual property theft to prove that she would be a formidable opponent in any courtroom. \n\nBut there was something else that also appealed to him. From the beginning, he sensed that she was on his side and genuinely upset by how Caroline and Tanya had treated him. True, she was Charley's cousin, and Charley was his best friend in AG and had set up the meeting, so maybe she felt a greater sense of empathy for him than for other potential clients. \n\nBut whatever the reason, he sensed she would do all that she could to advocate for him. It was an imprecise means of gauging an attorney's qualifications, but having a lawyer who really appreciated how badly he'd been victimized gave him confidence that he was making the right decision in hiring her. \n\nStill, it was impossible not to admit, there was something a lot more convincing \u2013 she was absolutely gorgeous, and no matter how esoteric and even boring the legal conversation became at times, he simply couldn't take his eyes off her. He may have sworn off women, but it didn't hurt to look, did it? \n\nAt first glance, he gauged that she was about 5'7.\" She had long, straight, grayish-blond, nearly silver hair, highlighted ombr\u00e9 style, but her darker roots and brown eyes led him to conclude that she was more likely a natural brunette. Her pewter locks fell in shimmering waves, almost to her tight ass. \n\nShe had a tiny, feminine nose that turned up just a bit at the tip; high, wide cheekbones; thin, pink lips; a cute dimple on her left cheek; smallish, almost elf-like ears; arching dark eyebrows; and a thin, tapered face with a delicate chin. Her complexion was flawless, with that perfect mix of china-doll skin tone balanced against a healthy, California beach tan. \n\nOn this particular day, she wore a conservative, maroon, business jacket, with a navy blue skirt, and loose-fitting, white, silk blouse over a white, lace camisole, while her long, slender legs and small feet were encased in black, nylon stockings, accented by low, black heels. \n\nBut despite her conservative attire, there was no concealing her sex appeal. She had left the top two buttons of her blouse open, exposing the top of her camisole, and from it spilled several delicious inches of cleavage. \n\nHer skirt, which was neither overly short, nor tight, could not obscure the curve of her hips, and when \u2013 15 minutes into their conference \u2013 she removed her jacket, he was able to fully appreciate her impossibly slender waist and taut stomach. By the looks of things, her hourglass figure sported classic, bombshell measurements: 36-24-36. \n\nAnd there were other clues that suggested something more about the deceptively staid and solemn barrister in whose 17<sup>th</sup> story office he now anxiously sat. Besides her traditionally pierced earlobes from which dangled matching, gold chains, she also had a dermal piercing in her left cheek \u2013 right in the valley of her dimple \u2013 a diamond stud that sparkled as if to announce her libidinous intentions. And on her right wrist she wore at least a half dozen gold-plated bangles that jangled each time she seductively ran her fingers through her soft, shimmering locks. \n\nBut even more than all of the visual hints, there was something about the way she responded physically when, after she'd asked, he began describing his relationship with Caroline Cole, especially their passionate weekend reunion and, in particular, Tanya Calvert's voyeuristic interest in their al fresco afternoon delight. \n\nEven though he described as discreetly as he could the events that had occurred five months earlier at Caroline's house and, the next day, in her swimming pool, Paige seemed visibly stimulated by the story, and several minutes into it, he noticed that, while she took notes, her left hand had unconsciously and almost inconspicuously slipped from her desktop and come to rest in her lap. He couldn't be sure, but he thought he actually saw her body twitching almost imperceptibly on several occasions as he told his salacious tale. \n\nThe meeting ended with him signing a representation agreement to hire Paige for a contingency fee, the terms of which were typical for civil litigation cases \u2013 her firm would be entitled to one-third of any damages he was awarded. She also pointed out that IP theft was a criminal matter, and depending upon the actions and reactions of the defendants to the briefs she would file on his behalf, they could refer the matter to the District Attorney's Office. \n\nHe left her copies of Caroline's book and his own version of the story, and she asked him to send her any other information about the case he thought relevant. She promised that an independent computer expert would be contacting him soon to examine his computer to authenticate the dates the story had been composed and saved and when emails had been sent. \n\nThey shook hands professionally, and she smiled warmly as they said their goodbyes. He rode the elevator back to the ground floor, wandered into the parking lot and the midday warmth, and jumped into his Accord for the three-hour drive back down the Central Coast. \n\nThe computer expert called a few days later, a couple days in advance of his arrival. He ended up spending over three hours examining his laptop and desktop computers. The IT guy originally wanted to take the desktop with him, but because he didn't have to work that day and could stay at the house with him, the IT expert arranged to do all three hours of forensic work at his desk in his living room. \n\nThe day after that, Paige Jordan called. She was preparing the preliminary injunction against Caroline's publishing company and read the key parts to him to make sure everything was correctly stated as near as he could remember it. She also wanted to know if there were any other details that he wanted mentioned in the text of the injunction. There was something in the back of his mind that he had wondered about and thought might be relevant, but Paige's voice distracted him, and he couldn't remember what it was. \n\nWithin a week, the injunction was filed in the Federal District Court in the Central District of California. Since the publisher was headquartered in New York, but had offices in L.A., and he was a resident of California, Paige recommended that they file the lawsuit in Federal, rather than State court, due to the issue of diversity of citizenship. \n\nUnfortunately, the Federal Courthouse for the Central District is located in L.A., and he wondered out loud whether that might give Caroline, Tanya et al. a home court advantage. Paige didn't see that as an issue. She believed that once his story was laid bare, it didn't matter where the court was located. \n\nA date for the hearing to determine whether the preliminary injunction should be granted was scheduled six weeks later. The day before the hearing, Paige drove down from San Jose to meet with him in preparation for that critical court appearance in Los Angeles. She said they might as well drive to L.A. together. She even offered up her rental car and volunteered to handle the driving duties. \n\nShe called him when she got to town and informed him that she was staying at a nearby resort overlooking the ocean. She asked if he might be able to come over and then surprised him by inviting him to have an early dinner with her. She said that it was her treat \u2013 considering he was about to make her a whole lot of money. Besides she said, it would be a working meal \u2013 they could discuss the case over dinner and drinks. \n\nHe was slow to respond. On the one hand, he was nervous about anything that even remotely suggested a \"date.\" And, besides, if it was a date, it seemed to him that he should be inviting her out, not the other way around. \n\nBut he hastily decided that he really had no credible chance with Paige anyway, considering the disparity in their ages, social class, and places of residence, and so, why not take advantage of the opportunity to spend a few hours with a beautiful woman? If nothing else, he would get a nice meal and a few drinks out of the deal. Still, in the back of his mind he half hoped that maybe, just maybe, something more might be in the offing. After a half minute of hesitation, he agreed. \n\nSince she didn't know the area, she asked him to pick a nice restaurant. His first thought was a seafood place near her hotel that had a large room offering a particularly scenic vista from which to watch the sunset over the Pacific. Las Brisas was popular with locals and tourists alike, but it also had a great wine list and was considered an ideal spot for a romantic meal. There were a few other good possibilities, each having its own attributes, depending upon the goal. \n\nBut what was that goal? It was hard to know how to approach the evening, so he wasn't quite sure what type of ambience he was looking for. Should he opt for a quiet bistro or a louder, busier full restaurant? He decided they'd have more privacy in a louder, bigger place, and more dining options as well. Should he select a place based on the quality of the food and service or the quality of the setting? He decided it was best to balance those two interests. \n\nMost importantly, was the dinner a business meeting or a date? He really didn't know, but he figured his surest bet was to play it safe \u2013 to pick a place that covered any eventuality. And so, Las Brisas seemed best suited to fit any bill. He made a reservation for a window table at 6:00 \u2013 just before sunset. He offered to drive. \n\nAs he was getting ready, he was nervous. He didn't really know where the evening might lead, and that left him wondering about the appropriate way to dress. He assumed it was more of a business dinner and figured he should dress in much the same way he had when he'd visited Paige's office \u2013 casual: a pair of chinos, dress shirt, and dress shoes. \n\nOn the other hand, Las Brisas was a nice restaurant, so maybe he should dress up just a little bit more. He decided to wear a sports jacket, another patterned dress shirt, but a pair of black jeans so as not to appear too dressy. He figured that, like the restaurant, his attire covered all the bases. \n\nBut then, he stopped by her hotel to pick her up, and when she opened the door of her 4<sup>th</sup> floor suite, he very nearly collapsed from astonishment. Paige Jordan was dressed to the nines \u2013 evening dress, stockings, heels \u2013 her hair balanced precariously atop her head in an up-'do, and all of it, augmented by a pearl necklace and matching earrings and bracelet! Business dinner? No fucking way! Women didn't dress like that to go to business diners. \n\nAnd despite his palpable enjoyment at seeing Paige's tits bubbling out of her red, metallic, strapless, Dolce &amp; Gabbana mini sheath dress whose clingy fabric hugged her tiny waist and curvy hips, he had to assume that the dress, stockings, heels, and makeup were worn to send an unequivocal message. More importantly, he assumed himself to be the intended recipient of that message. \n\nHe couldn't help but be reminded of another conversation he'd had about seven months earlier when he'd been equally surprised to find himself ill-prepared for an evening with another pretty woman wearing a revealing dress. That little episode was a prelude to catastrophe, a catastrophe that was the reason he was standing outside of Paige Jordan's hotel suite at that very moment. Could this one end just as badly or even worse? \n\n\"Wow! You look amazing!\" he gushed with genuine appreciation, \"but I think I'm seriously underdressed! Maybe I should go back home and change. I think we still have time. Do you think I should? I don't want attract attention being the slob that's accompanying the pretty woman in the gorgeous dress!\" \n\n\"Aren't you the charmer?\" She said, kissing his cheek. \"But I don't know what you're you talking about \u2013 you look very nice.\" \n\n\"Not as nice as you do!\" \n\n\"Oh, come on!\" She smiled serenely. \"Would you like to come in for a while? I've a got a bottle of Chardonnay chilled if you'd like a pre-dinner drink.\" She took a step back to bid him inside, and he followed her beckoning motion and entered the large suite. \n\n\"Well, the place we're going sometimes has long waits, even if you have a reservation, so I would recommend we get there as soon as possible. But if you don't mind, I do need to use your bathroom. By the way, beautiful suite! You've got an incredible view of the ocean!\" he said, nodding with a smile to the large, west-facing patio window through which a particularly beautiful sunset glowed. \n\n\"It is nice, isn't it? And all of it courtesy of Solon &amp; Blake Publishing! Or at least, it will be! All right, the bathroom is to your right. When you're done, we can go.\" \n\nHe nodded his thanks and ducked into the bathroom. When he emerged a minute or so later, she was checking her phone. He asked cheerfully, \"Well, you ready?\" \n\n\"Sure\", she answered with a smile, putting her phone back in her purse. \n\nHe opened the door for her, led her down the hallway to the elevator, then out the south entrance and into the parking lot to his sedan. He opened the passenger door for her, and she shimmied her way into the front seat as demurely as possible considering the length of her dress. Then, he closed her door, and walked around to the drivers' side. \n\nLas Brisas was only about a half mile south on the west side of the frontage road that overlooked the 101. They pulled into the parking lot, and he was a little surprised that they had no trouble finding a spot. It was, of course, the off-season. Once inside, a slender, handsome ma\u00eetre d' with a British accent greeted them with deference, \"Good evening, sir, madam. Welcome to Las Brisas. May I help you?\" ",
        "\"Good evening\", he answered politely, \"I guess we're a little early, but we have reservation for two for 6:00; it should be under Conway.\" \n\n\"Ah, yes, Mr. and Mrs. Conway\", he said looking at his guest list. They smiled at each other, slightly embarrassed, but neither said anything. \"I have a table for two next to the window. Would you like to follow me?\" \n\nThey entered the large dining room, which, despite being a Wednesday night, was only about three-quarters full. As he followed Paige, he noted both the swish of her clingy dress that shifted seductively across her shapely hips, as well as the envious stares of practically every male over the age of 12 in the place. \n\nThey took their seats, and as he was handing each a menu, the ma\u00eetre d' remarked with a smile, \"Best table in the house! Your server will be with you straightaway. Enjoy your meal!\" \n\nBefore opening her menu, she reached for the wine list. \"You have some excellent wineries in this area. Is there something you'd recommend?\" \n\n\"You really can't go wrong with most of them, but there are a few places around that I think stand out. What are you thinking about?\" \n\n\"Well, I like Chardonnays.\" She looked back at the wine list, and couple seconds later she asked, \"Talley... Is Talley a good winery? It looks like it's from around here. Is it?\" \n\n\"It is, it's just down the road, and it's excellent. They make a number of great Chardonnays. It might be a little pricey, but I really like their 'Rosemary's Vineyard Chard.' Of course, I don't know whether that's on the menu or not.\" \n\nShe went back to the menu and ran her finger down the list until it came to stop about a third of the way down the page. \"Wow, here it is! Alright, that sounds like a plan! 'Rosemary's Vineyard' it is!\" \n\nA couple seconds later, an overly polite and extremely enthusiastic, young, male waiter dressed in black trousers, white shirt and skinny, black tie, arrived with a pitcher of water and filled each of their glasses. Then, he asked if they were interested in anything from the bar, and when Paige shook her head yes, he proceeded to take their wine order. \n\nHe complimented her on her selection, and returned several minutes later with the bottle. He deftly opened it and gave Paige a sample pour. She shook her head with pointed affirmation, responding, \"Delicious \u2013 great suggestion, Chris!\" He poured them each a glass. \n\nTen minutes later, he returned to take their dinner orders. They both decided on salads, and then Paige ordered the Crab Encrusted Mahi Mahi, while he chose the Blackened Diver Scallops &amp; Shrimp. \n\nAs they sipped their wine, they settled into casual conversation. \"Well, I read your story\", Paige said, staring him down with her dark eyes. \"Then, I read Caroline's book.\" \n\nThis was not breaking news \u2013 he assumed she'd read them both, she had to \u2013 but he was still just a little embarrassed. His story was pretty explicit, and he didn't really know her, so he'd already anticipated that discussing it was going to be a bit disconcerting. \n\n\"Besides the fact that it is absolutely obvious that she stole the entire story from you, your version is much, much better.\" \n\n\"I'm glad you think that, but...\" he paused, \"...are we going to be able to prove she stole it?\" \n\n\"I've got the computer analysis back from my expert. You spent a long time writing that story, didn't you?\" \n\n\"I did... maybe six months, if my memory serves me.\" \n\n\"Let's see...\" She pulled out her phone, and began to check some notes she'd made on it. \"You created the Word document on October 2, 2016, at 8:48 a.m. on your desktop computer Then, you revised that Word document every day, without exception, for at least the next 90 days, and then again sporadically over the next three months. The final version of the story is dated March 19, 2017, at which time you copied it to your laptop and an external hard drive, and emailed it to yourself. You sent that email at 7:36 a.m. on that day.\" \n\nShe took a drink and continued. \"By the way, you're an early riser, aren't you? The records also show that during most of those days that you worked on the story between 6:00 and 9:00 a.m. You emailed it to Caroline Cole on June 15, 2017, at 8:18 a.m. If Caroline can't prove that she had a version of the story that existed before March 19, 2017, she had to have taken her version from the one you emailed her on June 15<sup>th</sup>.\" \n\n\"Wow, I didn't realize you can decipher all of that from looking at a computer!\" \n\n\"You can, and surprisingly, you can learn a lot more than that! Are you absolutely sure that you never shared the story with anyone other than Caroline before June 15<sup>th</sup>? \n\n\"Yes, I'm sure. She was only the second person in this world to read that story, and Tanya would have been the third person. You're the fourth, and that's it! No one else that I know of has ever read anything that I've written, well, except for all those people that bought Caroline's book!\" \n\n\"And you're the first?\" \n\n\"Me, myself, and I.\" \n\n\"Then, I don't see how we can't win. The vast majority of the text is taken nearly verbatim. Most of the changes that were made were actually redactions from your original.\" \n\n\"Yeah, all of the love scenes!\" \n\nShe smiled wryly. \"There were some other tiny changes. She switched the name of one minor character, and, as near as I can tell, revised some of the language in the scene involving the car accident. Other than that, she stole it wholesale from you. There is simply no way for her to deny that.\" \n\nHis shoulders slumped in almost painful recollection. \"I still can't believe she did it \u2013 Caroline of all people. And I have to admit, it still fucking hurts!\" \n\n\"Of course it does! And that's why, when we actually get around to filing the civil lawsuit, we'll be asking for compensatory damages that include mental anguish, in addition to lost income. If the judge grants our preliminary injunction, I'll file the lawsuit tomorrow.\" \n\n\"So, what kind of money are we talking about?\" \n\n\"Well, that's the main thing I wanted to discuss with you, but presuming that the judge grants our injunction, and I can't see any reason he wouldn't, I think we should ask for a minimum of five million.\" \n\n\"Are you kidding me? Five million? How did you come up with that number?\" \n\n\"Well, have you checked on the sales of the book?\" \n\n\"God, no! Why would I do that?\" \n\n\"Why wouldn't you do it?\" \n\n\"Because it would make me sick to my stomach to know, that's why?\" \n\n\"Okay, well, consider this \u2013 now, I'm not saying we're comparing apples to apples here, but do you know how many copies of 50 Shades of Grey have been sold?\" \n\n\"Please don't compare my stuff to that piece of trash.\" \n\n\"I know, I know, but 'that piece of trash' has sold upwards of 135 million copies worldwide! Between hardcover and paperback and before marketing and distribution overhead, that's a conservative $1 billion in revenue! And that's not counting the movie rights!\" \n\n\"Holy shit!\" \n\n\"Yeah, holy shit is right! When I checked the day before yesterday, sales of Caroline's book were in the 150,000 range. Before we have a chance to stop the sale and pull the books from the shelves, they'll probably be another 25,000 sold. At $22 a pop, for hardcover, that's nearly $4 million right there! And we have to consider secondary and tertiary sales as well, plus, as I said, mental anguish at the indignity of having your lover, who you trusted to offer you feedback on your work, be the one to actually steal it from you! I suggest we ask for $5 million with the expectation that they'll counter with a smaller number, and then the negotiations can really begin.\" \n\n\"Well, for a guy who has a worldwide audience of exactly three, that's an awful lot of money!\" \n\n\"You don't have an audience of three; you have an audience of, at minimum, 150,000 people! Those are your fans paying good money for your book! Don't you dare sell yourself short, and, most importantly, don't you dare do it in the courtroom tomorrow!\" \n\n\"I'm not going to say a damn thing in the courtroom tomorrow, not unless I absolutely have to.\" \n\n\"So... are you good with five million?\" \n\n\"Like I said, I'm not saying a damn thing. My attorney speaks on my behalf, and if my attorney recommends five million dollars, I'm not about to question that number!\" \n\n\"That's what I like to hear!\" Just as the words left her lips, the waiter arrived with their salads. \n\n\"Arugula and pears for the lovely lady and a wedge salad for the gentleman\", he said in a hilariously over-the-top tone. \"Would either of you care for some fresh, ground pepper?\" \n\n\"Yes, please, for me\", Paige answered. When he was done with Paige's, the waiter turned to him, and he nodded. He shook his head after two solid twists of the pepper mill. \n\n\"Enjoy your salads\", the young man said, and quickly retreated toward the kitchen. They both undid their napkins and placed them in their laps, and each took a bite of salad. \n\nWhen he finished chewing and swallowing, he asked, \"So, what did you really think about the story? And I don't mean how it compared to Caroline's book \u2013 I mean, do you think it stands up? Is it any good? I'd really appreciate some feedback.\" \n\n\"Are you kidding? I thought it was amazing!\" She smiled, offered him a congratulatory toast, and returned to her salad. \n\n\"Well, thanks! I'm grateful for that.\" He smiled back weakly and took another bite. He was really fishing for more feedback, but he thought he would come off as desperate if he asked her to clarify, so he remained quiet. His restraint was rewarded. \n\n\"I appreciated that it was really well written and very stylish and all, but, I have to say...\" she started shaking her head in amazement. \"I don't know all that much about literary stuff, so, even though I knew you had all sorts of things going on, that's not really what caught my attention.\" \n\n\"I was in the office when I started it, and once I got 15 or 20 pages into it, I just had to stop! I mean, I was afraid I was going to start friggin' myself right there in my office chair! I had to take it home and read the rest of it alone in bed. Honestly, that was hottest story I've ever read in my life! I slept like a baby that night!\" \n\nHe started blushing like a teenage girl, but try as he might, he couldn't come up with a single, commonplace rejoinder in response. \"Anyway, I thought you'd like to know how turned on I got reading your work!\" she continued. \n\n\"I don't know what to say, \"he responded in a shallow voice. The reddish pink of his face complemented the clouds spread like frosting across the ocean's horizon. \n\n\"I can't believe you're self-conscious about this! Why does it embarrass you that your story got me all hot and bothered?\" \n\n\"I guess because you're my attorney, and...\" He stopped. He couldn't finish his thought. \n\n\"And what?\" She was grinning slyly as she ran a manicured index finger in a circular motion over the rim of her wine glass. \n\n\"And you're a very beautiful woman.\" He said it flatly, without emotion. \n\n\"Obviously, Caroline read the story, too, and you told me that she was very pretty. Why didn't it embarrass you to have her read it?\" \n\nHe paused to consider the question. \"I guess because she's a romance writer, and writers sort of understand each other when it comes to the whole titillation thing. But, I think, more importantly than that, it was because we already had a history together, so...\" \n\n\"You mean, you'd already slept together.\" \n\n\"Yes.\" \n\nShe smiled. \"Okay, I won't tease you anymore. I can see you don't want to talk about it.\" \n\n\"Well, I just don't know you that well. So, yeah, I'm kinda embarrassed.\" \n\n\"Okay, I'll change the subject. I do have another question, though, about the story \u2013 a serious question. Where did you get the title? It seems like such a... I don't know... such a heavy title. And I get that his lover, the one who dies in the beginning is named Grace and all, but even though it's really poetic, it just strikes me as such a serious, somber title for a love story that revolves around sex.\" \n\nHe smiled. \"It's from Aeschylus.\" \n\n\"What? What's Eskillus?\" \n\n\"Aeschylus was a writer.\" He smiled again and took another bite, taking a good while to chew before he continued. It made him feel a lot more at ease to actually talk about writing, rather than about a young woman's masturbatory fantasies. \n\n\"He was an Ancient Greek poet and playwright. That line was from a tragedy called Oresteia, written in, like, the 5<sup>th</sup> Century B.C. or something. The section of the play that that line is taken from \u2013 I think Agamemnon is the character that's speaking \u2013 whatever, but the line, it's just totally amazing, and I always thought it was about the most poetic thing ever written. I think I can come close to reciting it. I believe it goes...\" \n\nHe spoke slowly, carefully, rhythmically, \"Even in our sleep, pain, which cannot forget, falls drop by drop upon the heart until, in our own despair, against our will, comes wisdom through the awful grace of God.\" He paused. \"I just thought that line expressed something truly profound about how people are able to move forward after having been devastated by even the most horribly tragic events. That was really the point of the whole story.\" \n\nPaige smiled warmly as a rosy-red rush of blood began to spread across the tops of her breasts, and up her chest, neck, and face. \"That's incredibly beautiful!\" \n\nHe smiled and shook his head in agreement but didn't say anything. He was thinking. The conversation reminded him of something, and he was trying to remember what it was. \n\nShe stared into his eyes. Then, seemingly fearful that he could read her thoughts, she looked away \u2013 out the window \u2013 to the red, rubber ball, dropping, like a pill, into the Pacific. \n\n\"Oh, yeah!\" he said suddenly. \"I just remembered! You asked me if there was anything else that could be added to the injunction to help prove that the story is mine, right?\" \n\nThe moment passed as quickly as it arrived \u2013 her torrent of emotion replaced by the invisible grinding of intellectual cogs. Her composure regained, she asked, \"Yes, what is it?\" \n\n\"Well, I don't know whether or not this might help with the injunction, probably not, or even if you would get a chance to use it at all. And, of course, it could backfire, because that quotation from Aeschylus, it's pretty famous, but I wonder whether or not Caroline knows the title's origin. If she doesn't know where the title of her own story comes from, wouldn't that prove she didn't write it?\" \n\nShe just stared for a moment without saying anything, an expression of amazement slowly washed over her beautiful face. \"Wow! I think you've just hit upon something really important! You're right, it won't help us tomorrow, but if the injunction goes forward, I will almost certainly have the opportunity to depose Caroline. That's going to be my very last question \u2013 'Where did you get the title, Ms. Cole?' She might be able to answer it, but even if she can, I don't see how that hurts our case at all. On the other hand, if she can't answer it, that's a clincher!\" \n\n\"She is a writer. She could very well know Aeschylus. Knowing her, she probably does.\" \n\n\"If she does, she does, but her knowing doesn't help her case, as much as her not knowing hurts it. She could have looked it up, just like anybody could have. I was going to do that, but then I thought I'd just ask you about it instead.\" \n\nAs she finished speaking, their waiter arrived with their entrees. For the next twenty minutes, they consumed themselves with their food and wine, peppering their meal with polite conversation about quality of the seafood and the beautiful view of the ocean. Every minute or so, they would catch each other staring out the window as they watched the light reflected by the sky and water grow dimmer and dimmer. \n\nWhen they had finished, Paige asked if he wanted something else \u2013 dessert or an after-dinner drink. \"No, thank you, I'm good for now.\" When the waiter returned to ask the very same question, she politely requested the check. \n\n\"Would you consider joining me back in my room? I have that other bottle of wine I need to get rid of. It's nowhere near as good as this...\" she said, raising the last swallow of Chardonnay to her lips, \"...but...\" She trailed off sheepishly, pulling her credit card from her purse. \n\nHe looked at her and smiled. This was, he instantly recognized, a decisive moment, but he knew his answer well before he offered it. \"Sure, but remember we've got that awful drive tomorrow morning. What time do you think we should leave?\" \n\n\"We're scheduled in court at 1:00 p.m. I don't see why we need to leave any earlier than 8:00. That should give us plenty of time, don't you think?\" \n\n\"Yeah, we should be fine. I get up well before then anyway. I'll be ready anytime you come to pick me up.\" \n\nShe didn't say anything for a long time, just stared at him with a blank, emotionless gaze. \"That's right\"; she said, finally, \"That's when you do all your writing, isn't it?\" \n\nThe waiter returned with the check, and Paige didn't bother to look at it, just handed him her card. He nodded, saying, \"Thank you, I'll be right back.\" \n\n\"Well, I do a lot of it then. I've always been kind of an early riser. You sort of have to be if you're a school principal.\" \n\n\"I suppose, but early riser or not, it's only 7:25 now. Surely, you can stay up and entertain me for a little while, can't you? If you don't, that means I have to work, and, as much as I need to get your complaint finished, I really don't feel like it tonight.\" \n\n\"Sure, no problem, though I don't know how entertaining I am. I guess I'm a pretty boring guy these days! It's the price of getting old!\" He smiled at his half joke. \n\nJust then the waiter returned with the little, black folder, placing it on the edge of the table near her. \"Thank you so very much. I hope you two enjoy the rest of your evening!\" \n\n\"I hope so, too!\" Paige responded with a sly grin. \"Thank you!\" She added up the tip, signed for the meal and put the card and 2<sup>nd</sup> receipt in her purse. Turning to him, she asked, \"Well, are you ready?\" \n\n\"I am. Thank you very much for the wonderful meal, but the next time, will you let me buy?\" \n\n\"Don't deceive yourself\", she smiled, \"I didn't buy. This meal was courtesy of Caroline and the publishing company, and I have a sneaking suspicion that they'll be buying us both quite a few meals for quite a long time!\" \n\nHe smiled, nodded, then stood up, and she followed suit. They walked out, Paige's shapely hips leading him like a beacon toward the front entrance, while a number of the same faces that had followed them in, followed them out again. \n\nThey retraced their steps from earlier in the evening, and he opened the passenger door for her. Then, he walked around and got in the driver's side. Within no more than two minutes, they pulled back into the parking lot of Paige's plush resort. \n\nThis time he followed her into the east entrance, up the elevator, and then right down the hallway to Suite 423 on the left just before the corridor made a 90\u00b0 turn to the right. She opened the door with her key card and stepped inside. Just as he closed the door behind them, Paige turned, and wrapping her arms around his neck, she planted a long, romantic kiss on his lips! \n\nHe resisted the urge to put his hands on her slender waist; still, he went with the flow and returned the passion being offered. Within seconds, their tongues were darting and diving in each other's mouth, and Paige began to mewl softly. After perhaps a minute, he broke the kiss. \"Paige, are you sure? Should we be doing this? I mean, couldn't you get into trouble for violating ethics?\" ",
        "She continued to hold him around the neck, and stared him down with the most serious look he'd ever seen from her. \"No, I don't think I can get into trouble! You see, I've got an ironclad defense.\" She grinned seductively, slyly. \n\nNow, he put his arms around her tiny waist and held her. He could feel the elastic material of her dress in his hands, and the tactile sensation was exhilarating. He could smell her perfume, and the fragrance was intoxicating. The blood surged to his groin. He smiled. He was beginning to understand her, and he knew this explanation would be a good one. \"What's that?\" \n\n\"Well, the professional ethics provisions of both the American Bar Association and the California State Bar do prohibit attorneys from engaging in sexual relations with their clients. However,\" she said, clearly quoting some text, \"both have 'an exception for ongoing consensual sexual relationships that predated the initiation of the lawyer-client relationship.'\" She stared at him with a huge grin painted on her lovely face. \n\n\"You've lost me counselor, how could a sexual relationship between us have predated our lawyer-client relationship?\" \n\n\"By definition, a sexual relationship is described by the bar as 'any interaction between consenting adults that results in or is intended to result in sexual orgasm or pleasure.' You made me cum twice before we signed the representation agreement! Therefore, I believe that we had an 'ongoing consensual sexual relationship that predated the initiation of the lawyer-client relationship.'\" \n\nHe was more confused than he was embarrassed. \"I made you cum? When? Other than shaking hands with you in your office, tonight is the first time that I've ever touched you.\" \n\n\"You told me your story about fucking Caroline in college, and then that night in her mansion in L.A. and I came! Then, you told me another story about the next day when you fucked her in her pool while her girlfriend watched, and I came a second time! Right there in my office while I sat behind my desk! And clearly, we signed the representation agreement after that!\" \n\nHe smiled. \"You are a sly one, Ms. Jordan! But even as little as I know about the law, I don't see how that constitutes an 'ongoing consensual sexual relationship.' How was my role in your... ah... 'pleasure' consensual?\" He was now enjoying the back and forth of this little t\u00eate-\u00e0-t\u00eate, grinning broadly in anticipation of her explanation. \n\n\"Did I force you to tell me that story about your relationship with Ms. Cole, Mr. Conway? Did I in any way pressure you into telling me what happened between you?\" \n\n\"No, you did not.\" \n\n\"Then, the conversation between us was a 'consensual' conversation was it not, Mr. Conway?\" \n\n\"The conversation was consensual. However, I don't believe your, ah... orgasms were consensual I did nothing to cause your orgasms!\" \n\n\"I beg to differ, Mr. Conway. You willingly engaged in conversation with me. That makes the conversation consensual, and the conversation resulted in my orgasms. I would not have orgasmed were it not for your stories. Ergo, you were consensually involved in causing my orgasms, and that means we had an 'ongoing consensual sexual relationship that predated our attorney-client relationship!'\" \n\n\"And how was our sexual relationship 'ongoing?'\" \n\n\"You made me cum twice! Ergo, the relationship did not involve a single sexual incident! Multiple incidents connote 'ongoing!'\" \n\nHe laughed out loud. \"You know, I'm not going to try to debate you, because if I try, I'll lose for sure! But I'm being serious now: don't you think this is potentially dangerous, really dangerous, at least at this time? Certainly for you, but probably for both of us. What if your firm finds out? You could get fired, and what about me? What if Solon &amp; Blake's attorney finds out that we're involved? Wouldn't that make my claim appear weaker?\" \n\n\"Look Chris, I might as well be honest. I was physically attracted to you when I first met you. You have that sexy, older man vibe going on that I find totally cool, and I've always been drawn to older men. More than that, Charley told me that you were a really good guy, and when I heard your story, I felt so badly for you. But I also grew to really respect how you handled yourself in the wake of all of the shit you've been through \u2013 which, I have to say, seems to have been absolutely fucking horrible. When you explained everything to me, you were so dignified and tactful in spite of everything, and so I found your disposition and temperament to be a real turn-on, too.\" \n\n\"But then, I read your writing, and, quite frankly, that was it! I'm convinced that it's impossible to write something as sensual as your story without being an intensely passionate man. And that's what did it! I was serious about what I said at dinner. I was so aroused after I started reading that I had to leave work early and go home! I think I came five or six times that night! After that, I just had to try to win you!\" \n\n\"Try to win me? You think you had to try? Jesus!\" He shook his head in disbelief. \"Look, Paige, let me be honest. You're way out of my league. You're the most gorgeous woman I've ever known, and, believe me, I'm incredibly honored that you'd even consider being with me. But I don't want to fuck up your life, at least not now! I've already fucked up mine, and I couldn't bear to be responsible for letting you destroy yours.\" A look of regret spread across her face. \n\n\"Look, can't we just wait to see what happens in the next few weeks? Once things are settled, if you haven't come to your senses and you still want me, then we'll go for it. God knows, I want you, too, want you more than I've wanted anyone, but let's not fuck up a good thing by charging into this too fast. We've got time.\" \n\nShe stared into his eyes with a look that was equal parts desire, disappointment, and acceptance. She shook her head timidly, but said nothing. He put his hand behind her neck and drew her face to his. The kiss was sensual and sincere, but it did not linger, and when he broke it, he turned and opening the door, said kindly. \"Good night, Paige. Thank you for a wonderful evening. I'll see you tomorrow morning.\" \n\nHe drove back home, and after undressing, he grabbed his laptop and sat in bed for several hours writing. He had a lot of ideas to get down. Then, he powered down his computer, went to the bathroom to wash his face and brush his teeth, returned to his bed, climbed in, and turned off the light. He lie in bed for some time imagining, touching himself \u2013 his cock, semi-engorged and extremely sensitive \u2013 but he did not masturbate. He fell asleep with his hand inside his boxer shorts. \n\nWhen he awoke the next morning, it was still dark. He used the bathroom, then made his way to the kitchen and ate a bowl of cereal, while he read the news on his laptop. When he finished, he went for a walk. He watched the sunrise as he hiked the greenbelt he had accessed from the west side of his neighborhood. \n\nWhen he returned home, he climbed into the shower, then shaved and brushed his teeth, before getting dressed. At about 7:30, he decided he'd better call. He just wanted to make sure that the plans had not been altered by his impulsive actions the night before. He located the recent calls in his phone, and return dialed Paige. \n\nShe sounded cheerful enough when she answered, but he knew he'd changed the dynamics between them irrevocably with his premature exit the night before. \"Okay, I'll come pick you up. How long will it take me to get there?\" \n\n\"No more than 10 minutes. Should I give you directions?\" \n\n\"No, just your address \u2013 the rental car has GPS, so I'll follow it.\" \n\n\"Okay, it's *** *** Dr. It's on the east side of town.\" \n\n\"Got it! I'll be there in about 20 minutes.\" \n\nHe loaded his laptop and hard drive into his computer satchel. He wasn't sure that it was necessary to bring those items, but since the theft of his story had involved that hardware, he thought it couldn't hurt to have it with him. Then, he used the bathroom again, and grabbed a couple of bottles of filtered tap water he had chilling in the refrigerator. A few minutes later, Paige pulled into his driveway in a Toyota Camry. \n\nHe waited. He didn't know whether she would come to the door or not, but he was still a little nervous about seeing her again, so he stayed where he was. \n\nShe emerged from the blue sedan after several seconds wearing sunglasses and a subdued and professional business suit, stockings and low heels. Her hair was down, and there were no visible signs of any jewelry. In short, despite being undeniable pretty, she looked nothing like the woman he'd gone to dinner with. She looked around, gauging her surroundings, as she approached. \n\nShe rang the front bell, and he smiled broadly as he answered the door. \"Good morning, Paige! Thanks for picking me up. Do you want to come inside, or are you ready to go? I just need to grab a couple of things, if you're ready.\" \n\nShe smiled, \"Nice place, Chris!\" She stepped across the threshold and kissed him on the cheek as she stepped past him, looking up and around the cathedral ceiling of the living room with surprise and wonder. \"Here, I thought you were living under a bridge or in some low-income housing unit or something! You know, after your divorce and all. This is a beautiful home!\" \n\nHe was a little embarrassed. He wondered where she had gotten the idea that he was somehow destitute. He had been a school administrator for almost 20 years, and it wasn't as if he didn't make money doing that job. \n\n\"I have less than a year and a half of mortgage payments left, and then I'll own the thing outright! It was about the only thing Susan didn't want in the divorce agreement. She never liked the place anyway, so it's appropriate that in about 500 days, I'll have the deed and the title to myself.\" \n\n\"Really? You've lived here that long?\" \n\n\"Twenty-nine years come the end of the summer! I remember when we bought the place. It had just been built. For some reason, I never thought I'd live to see the day when it was paid off, and I was only 23 years old and a newly-married man fresh out of college at the time.\" \n\n\"That's great, Chris. Most people never weather a 30-year mortgage anymore. Either they pay it off early or they sell long before that. I know it wasn't always that way, but it sure seems to be these days.\" \n\n\"Your right; my parents' generation was very different. Once they were married, most people lived in the same home for the rest of their lives. I'm just happy I was able to hang on to this place. My goal is to be able to leave it to my kids. Then maybe they can buy their own houses with the money.\" \n\nShe nodded. \"Well, I have a good feeling about today, and I think your luck is just about to turn. Anyway, I'd love to have you show me around, but I should probably use your bathroom, and then we better hit the road. It's 7:55.\" \n\n\"Okay, it's right there, around the corner\", he said nodding. \"In the meantime, I'll grab my things.\" \n\nTwo minutes later, they were navigating the steep driveway on which the Camry was parked. He threw his bag in the back seat and climbed in the passenger side, just as Paige was opening the driver's door. Five minutes later, they merged onto the 101 headed south. \n\nHe knew the conversation would eventually work its way around to the elephant in the room, or in this case, the car. They made small talk for a couple of minutes, but before they'd even reached Nipomo, Paige was out with it, \"By the way, I spent last night thinking about what you were saying, and I think you were right. It makes a lot of sense to be cautious.\" She paused. \n\n\"I think after today we're going to see the publisher and Caroline and her people move very quickly to rectify the situation. Big corporations like Solon &amp; Blake don't like their names in the news, especially if they're connected to lawsuits. I really think they'll want to settle this thing as quickly as possible. Then...\" She stopped. The rest of the conversation was still too fraught with uncertainty for her to continue her thought. \n\nHe ignored the unspoken, and responded instead to what she'd just said. \"That would be nice. I just don't understand why it happened in the first place. Don't the corporate people do any vetting, any investigation at all before they publish something? I can't see why they would take a chance like that?\" \n\n\"My guess is that they just trust the writers that they've worked with in the past, and once one of those writers who's been with them for a long time brings something to them, they don't investigate at all. Besides, the majority of people that are victims of intellectual property theft never do anything about it! So, they probably didn't anticipate being sued. What you're doing is actually pretty rare.\" \n\n\"You're probably right about the corporate suits, but the thing is... the story doesn't sound anything at all like anything else she's ever written! Didn't anybody notice that?\" He was quiet for a just a moment, and when Paige didn't say anything else, his pent up rage exploded, \"I just know that fucking Tanya had to be behind it! I just don't trust that woman! There is nothing that I wouldn't put past her.\" \n\n\"I understand your anger and frustration, but remember, if the judge approves our preliminary injunction today, I'll file the actual lawsuit this afternoon. I finished it last night after you left, so it's ready to go. And that's when I think we'll start to see some action.\" He didn't respond, just sat there in silence, the strength of his momentary outburst spent. \n\n\"Chris?\" she continued quietly, carefully. \"I want to talk about last night. I want to clarify something.\" \n\n\"Okay...\" He was nervous, but he, too, thought it was a good idea for them to lay their cards on the table. \n\n\"You didn't say 'no' last night, am I right? You just said 'wait.' Did I understand that correctly?\" \n\n\"You did. I've been doing some thinking, too, Paige. I'm still trying to figure out why someone as drop-dead gorgeous as you would be interested in an old fart like me! Still, I'd be out of my mind not to want to find out. Once this thing gets settled, I would love to start seeing you \u2013 dating you, that is. I'm hoping I'll be able to afford to take you someplace nice.\" \n\nShe giggled. \"...start 'seeing' me! You old farts talk funny!\" \n\nHe laughed. \"'Seeing' means a lot of different things; how do you know I didn't mean it absolutely literally?\" \n\n\"Well, when your eyes are ready, you just let me know!\" \n\n\"My eyes are ready right now; I'm not sure my heart is! Do you know what to do in case of cardiac arrest?\" \n\n\"Don't worry about me! I've dated plenty of older men, and I haven't killed one yet!\" \n\n\"'Plenty of older men'? And here I thought I was special!\" \n\n\"You are special; you write great dirty stories!\" \n\n\"Wow! Well, I look forward to having those words inscribed on my tombstone!\" \n\nShe giggled for the longest time. She had a difficult time composing herself. When she finally did, he stared at her until she turned to look at him. \"You really are incredibly beautiful, do you know that? I'm a lucky guy \u2013 I've got the best looking attorney in the entire State of California!\" She smiled beatifically. \n\n\"And by the way, thanks for understanding about last night. I know it was awkward and unpleasant, but I think we'll both be glad we waited.\" She didn't say anything, but she smiled again and shook her head with gratitude. It made him happy. He was afraid that maybe he'd ruined his chances, but instead he felt like he was on even solider ground than he had been the night before. \n\nAfter that, they settled into the long ride, talking about the countryside they were driving through. He pointed out some of the towns and roads that dotted the oak-covered hillsides and vineyards. Their conversation was easy and free-flowing. They had a lot in common, and by the time they reached downtown Los Angeles, their relationship was based on more than just lust. They were quickly becoming friends. \n\nThey made excellent time, arriving at the Federal Courthouse just a little bit after 11:00. They still had almost two hours to kill before their court appearance. He suggested they walk over to the mall across the street from the courthouse to get a bite to eat. There had to be a fair number of choices of places to choose from there, he reasoned. \n\nThey found a little deli that served sandwiches, salads, and soups, and ate their lunches outside near a large fountain. They took their time eating, enjoying the warmth of Southern California's late winter weather. He tried to pay, but Paige insisted that her firm would expect her to submit per diem expenditures, and that it would eventually become part of court and litigation costs that would be decided as a part of any settlement. \n\nAbout 12:30, they started walking back to the courthouse, and when they arrived, they sat on a bench in the lobby outside the courtroom waiting for the court to reopen its doors after the lunch break. While Paige was checking her phone, he briefly opened his laptop to re-read some of the text he'd written the night before. \n\nHe briefly peeked over the top of his computer screen, and suddenly, a deathlike chill swept through his entire body. Not more than 30 feet away, a tall, slender, older gentleman in a gray suit sat down next to a woman whose presence caused his skin to crawl. From her perch on the bench on the other side of the corridor, Tanya Calvert leered at him with an impertinent smirk! \n\nWithin seconds, a bailiff emerged from the courtroom, opening and then unlocking the massive oaken doors and propping the right one open. Paige nonchalantly turned to him, and said cheerily, \"Well, should we go in?\" \n\n\"No, let's wait just a moment\", he answered quietly, tension and anxiety gripping his face. \n\nShe immediately recognized the change. \"Chris, what's wrong?\" She whispered it in a barely audible voice, and the moment the words left her pink, perfect lips, Tanya and the older man stood, and turning their backs to them, strode purposefully into the courtroom. \n\nHe put his hand over his mouth and, looking down and whispering in an even quieter voice, turned to her and said, \"That's Tanya.\" \n\nShe put a soft, warm hand on his shoulder and spoke calmly and confidently, \"Okay, just calm down. There's nothing to worry about. Let's just gather up our things, and in a couple minutes we'll go in. We'll sit on the left side of the room until the bailiff calls our case. Just don't look at her, okay.\" \n\nHe took a deep breath, as he watched Tanya's shapely ass disappear inside the big door. His heart was all but beating its way out of his chest, but he continued his deep breathing, until he could no longer hear its thumping roar. He powered down his laptop, and when it shut down, he put it back inside his computer satchel, and turning to Paige said, \"Okay, I'm ready.\" \n\nThey stood, and he swung his satchel over his shoulder. Paige reached for her briefcase, and the two walked side-by-side into the courtroom. They sat near the bar in the second row near the swinging gate directly behind the plaintiff's table and chairs. Several other people shuffled into the courtroom and sat behind them. A court stenographer entered and took her place to the left of the judge's bench. \n\nWithin two or three minutes, the bailiff also entered and striding in front of the bench, announced in a commanding voice, \"All rise. The Federal Court of the Central District of California is now in session, the Honorable Judge Stephen Bullock presiding. Everyone remain standing until the judge enters and is seated.\" ",
        "A pallid, bald, stocky man in his 60s emerged from his chambers wearing his black robe and, with a noticeable limp in his gait and without looking at either party, took his seat behind the huge bench. The bailiff continued, \"You may be seated. In the matter of Conway vs. Solon &amp; Blake Publishing et al., plaintiff, defendants, and counsel, please come forward.\" \n\nBoth parties stood and entered the well to take their seats, he and Paige on the left and the older man and Tanya on the right. Judge Bullock turned toward them and said in a gravelly voice, \"This court will now hear arguments on whether I shall grant a preliminary injunction filed on behalf of Christopher Conway against Solon &amp; Blake Publishing and others. Ms. Jordan, if you are ready, please proceed.\" \n\nPaige stood up and, facing the bench, began speaking in a clear and confident voice, \"Your honor, my client is asking the court to stop the publication of a book published under the name Caroline Cole. Ms. Cole, along with her publisher and Solon &amp; Blake Publishing Company are the defendants in this case.\" \n\n\"My client alleges that the book The Awful Grace of God is not the work of Ms. Cole, but is, in fact, his work, and that Ms. Cole and her publisher have violated his intellectual property rights through the publication of the novel. In the first step in our pursuit of my client's intellectual property rights, we are asking the court to compel the defendants to immediately cease publication of the novel and to pull copies of it from bookstores and online book distributors worldwide.\" \n\nBullock turned to Tanya and the gentleman who sat to her left and in a gruff voice said, \"Mr. Alexander, what say you?\" \n\nThe skinny, vaguely handsome attorney rose and in an annoyingly high-pitched voice began speaking. \"Your honor, my client has published 49 novels written by Caroline Cole over a period of nearly 20 years. Ms. Cole owns the copyrights to all of those works. Never before has the authenticity of Ms. Cole's writing been questioned, and my client holds that there is simply no evidence to suggest that this novel is any different from the previous four dozen texts. We ask that you decline to grant the plaintiff's petition on the grounds that there is no supporting evidence that Mr. Conway has the property rights to The Awful Grace of God.\" \n\n\"Mr. Alexander, is Ms. Cole in the courtroom with you today?\" \n\n\"No, your honor, Ms. Cole is not present. However, her personal publisher Ms. Tanya Calvert is here representing Solon &amp; Blake. She has also been named in this suit.\" \n\n\"Ms. Jordan, I have read your petition. However, what can you tell the court at this time about Mr. Conway's claim of property rights?\" \n\n\"Your honor, my client first met Ms. Cole (at that time known as Caroline Seale) when they attended Central Michigan University together in the mid-1980s. They had a brief relationship at that time. Then, approximately seven months ago, Mr. Conway became aware of Ms. Cole's writing career, and as an old friend who lived only a couple hundred miles away, he decided to contact her to re-establish their friendship.\" \n\n\"Mr. Conway had himself been writing for approximately a year and a half at that time, and as he had not shown his work to anyone else, he sought out Ms. Cole's advice on the viability of his writing. Ms. Cole invited him to her home in Beverly Hills on the weekend of June 14<sup>th</sup> and 15<sup>th</sup> of last year, and Mr. Conway provided hard copies of two of his stories to her on June 14<sup>th</sup>, the day he arrived there. One of those two stories was titled The Awful Grace of God.\" \n\n\"Ms. Cole did not read the stories until the next day, June 15<sup>th</sup>, at which time she informed my client that his writing was of stellar quality and was deserving of publication. She further informed him that she would arrange for him to talk to Ms. Calvert about the possibility that his work might be published by Solon &amp; Blake, or perhaps another publisher. At that time...\" \n\n\"Excuse me, Ms. Jordan, I have two questions. First, does Mr. Conway have a copyright to the novel in question, The Awful Grace of God?\" \n\n\"No, your honor, he does not.\" \n\n\"Why not?\" \n\n\"Your honor, my client is an amateur writer, but I think we might agree, he's a very talented writer nonetheless. As I said, he had not shown his writing to anyone else prior to June of last year, and as I also mentioned, he sought out Ms. Cole's advice on whether his work showed enough merit that he should continue writing and perhaps should send his work on to publishers.\" \n\n\"By June 15<sup>th</sup> of 2017, he had not yet copyrighted his work because Ms. Cole was the only person other than himself to have read that work. She not only gave him an enthusiast assessment of this particular story, as well as the second story he asked her to read, but she subsequently gave that first story The Awful Grace of God to Ms. Calvert, hoping to find out whether she might agree that it was worth publishing.\" \n\n\"I see. However, your contention that Ms. Cole gave the story to Ms. Calvert has not yet been established, so I would ask that you refrain from making that statement as if it is fact.\" The judge turned and looking straight at him said sternly, \"Mr. Conway, this court would be able to find in your favor quite easily if you had copyrighted your story. I strongly suggest that in the future, you copyright all your work.\" \n\n\"Yes, your honor\", he answered meekly. \"I fully intend to do that.\" \n\n\"Now, Ms. Jordan, for my second question: what was the nature of the relationship between Mr. Conway and Ms. Cole prior to and during the weekend of June 14<sup>th</sup> and 15<sup>th</sup> of 2017?\" \n\nPaige looked at him, and he nodded at her. She responded somewhat sheepishly, \"Mr. Conway and Ms. Cole were lovers.\" \n\n\"I see. I'll withhold comment on that revelation until after I have heard the rest of your story. Please continue, Ms. Jordan.\" \n\n\"Thank you, your honor, I was just about to say that though Mr. Conway did not have a copyright to this story and to his other stories, when he completed a story, he emailed each to himself to date stamp his rights to the story as the time of each email transmission.\" \n\nJudge Bullock sat up straight in his chair when he heard that and, looking directly at him, he interrupted again, \"Mr. Conway, short of an actual copyright, you were very wise to have sent those emails. Continue Ms. Jordan.\" \n\n\"As I was saying, Mr. Conway emailed The Awful Grace of God to himself at 7:36 a.m. on the morning of March 19, 2017, nearly three full months before he met Ms. Cole at her home on June 14, 2017. I commissioned an independent computer expert, whose qualifications we've submitted to the court, to examine Mr. Conway's computer hardware, both a desktop and a laptop computer, as well as an external hard drive.\" \n\n\"As you can see, I submitted the report of Mr. Lee Allen Sarkisian of Palo Alto, California, as Exhibit A in my injunction, along with his qualifications. I should mention, Mr. Sarkisian has testified in other court settings. His statement on his finding is as follows, and I am quoting directly from it.\" \n\n\"Mr. Conway's desktop computer revealed that the file titled 'The Awful Grace of God' was initially created as a Word document on October 2, 2016, at 8:48 a.m. Mr. Conway made changes to that file for 91 straight days after October 2<sup>nd</sup>, and then periodically afterward between roughly January 2, 2017, and the final date of March 19, 2017, after which he made no further revisions.\" \n\n\"Mr. Conway emailed the story to himself on that day, and also copied the file held on the desktop computer to his laptop computer and an external hard drive. Then, on June 8, 2017, he sent an email communication to Ms. Cole, and she returned an email to him three days later on June 11, 2017.\" \n\n\"Mr. Conway then sent Ms. Cole a second email on June 15, 2017, at 8:18 a.m. That email contained an attachment of the Word document 'The Awful Grace of God.' Your honor, that is the extent of what I wanted to read from Mr. Sarkisian's statement, though the whole statement is available for the court's perusal in Exhibit A.\" \n\nShe paused and then continued, \"The same day that Mr. Conway emailed the story to Ms. Cole he met Ms. Calvert who, we contend, must have received the story by email from Ms. Cole. We...\" \n\n\"Wait! You've done it again, Ms. Jordan. What do you mean, 'we contend?' How do you know what Ms. Cole did or did not do?\" \n\n\"Your honor, Ms. Calvert came over to Ms. Cole's home sometime around noon on June 15<sup>th</sup>, and she told Mr. Conway that she had read his story The Awful Grace of God prior to her arrival. We can only conclude that in order for her to have read the story by the time of her arrival at noon, it had to have been emailed to her sometime between 8:18 a.m. and roughly 11:00 a.m. that day. If she did, in fact, read the story, she had to have had some time to do so before her arrival, at which time she herself informed my client that she had read the story. Also, prior to Ms. Calvert's arrival, Ms. Cole told Mr. Conway that she emailed the story to Ms. Alexander.\" \n\n\"I see. This contention has not been established as fact, but this is critical to this case, and the court will seek to find out whether your 'contention' is, in fact, true. Continue.\" \n\n\"Shortly after Ms. Calvert's arrival, Mr. Conway left Ms. Cole's residence abruptly. He took the hard copies of the two stories that he had brought to Ms. Cole with him when he left. This included the hard copy of The Awful Grace of God. However, Ms. Cole still had possession of the electronic version of the story in the email that Mr. Conway sent to her.\" \n\n\"Why?\" \n\nPaige looked perplexed. She paused before answering. \"Why what, your honor?\" \n\n\"Why did Mr. Conway leave Ms. Cole's home abruptly?\" \n\n\"Your honor, Mr. Conway became extremely upset.\" \n\n\"Upset with whom?\" \n\n\"He was particularly upset with Ms. Calvert, but also with Ms. Cole. The reason he was angry was because Ms. Calvert informed him that she would help him to be published, but only if he...\" she paused before continuing, \"... only if he had sexual relations with her. When he informed Ms. Cole of Ms. Calvert's statement, she didn't believe him.\" \n\nBullock's eyes opened wide with astonishment. \"Ms. Calvert, is this true?\" \n\n\"No, your honor, I never said that.\" \n\n\"Whether you did or did not is not germane to the court in this matter, but I would point out to you that it is germane to future litigation involving the intellectual property rights to The Awful Grace of God. Continue, Ms. Jordan.\" \n\n\"Thank you, your honor. Roughly three months after the incident at Ms. Cole's home, Mr. Conway was reading The Los Angeles Times when he discovered that Ms. Cole had published a new novel titled The Awful Grace of God. The newspaper published a review of the book.\" \n\n\"I suspect the court can understand how Mr. Conway felt when he read that review, as he discovered that Solon &amp; Blake had published his story under Ms. Cole's name. Ms. Cole submitted a claim of copyrights to the story on July 2, 2017, approximately three weeks after she'd received the story from my client.\" \n\n\"If you read only the first handful of pages of the two stories, I think the court can agree they are the same story. Furthermore, none of Ms. Cole's previous work sounds anything like this most recent novel. Since my client can date stamp his claim to the story on March 19, 2017, and Ms. Cole made a claim to do so on July 2<sup>nd</sup> of the same year, we believe there is substantial evidence to prove that Mr. Conway's claim predates Ms. Cole's.\" \n\n\"Furthermore, I submit to you, your honor, that it is not just our opinion, but the opinion of the author of that L.A. Times review, one James Williamson, that the book published by Solon &amp; Blake sounds nothing like Ms. Cole's previous work, and that opinion is succinctly stated in the very first sentence of Mr. Williamson's review from which I quote now: Nothing in Caroline Cole's past work could have prepared readers for the quantum leap forward she has taken with 'The Awful Grace of God.'\" \n\n\"That statement does not prove that Ms. Cole did not write the published novel, Ms. Jordan, though it does seem to suggest that The Awful Grace of God is quite different from her earlier work. However, I have read the first 10 pages of both stories, and there is little doubt that they are the same. Now, how much of Mr. Conway's work does the plaintiff contend has been plagiarized in the published novel?\" \n\n\"Your honor, though significant sections of Mr. Conway's story were left out of the published version, what was published, with tiny modifications, has been taken nearly verbatim from Mr. Conway's text. We believe that about 70% of his text was stolen from him.\" \n\n\"Why only 70%? Why not 100%, Ms. Jordan?\" \n\n\"We believe it is because Ms. Cole's reputation had already been established as a romance writer, and the text that was omitted from the published novel, we believe, was too... explicit for her to publish under her name.\" \n\n\"Explicit? Please explain what you mean by that, Ms. Jordan.\" \n\n\"Your honor, the scenes that were omitted from my client's work described sexual intercourse between characters. We do not know why, but Ms. Cole did not include those explicitly sexual scenes in the published version. We suspect that the book could not have been marketed as a romance if it contained such explicit scenes.\" \n\n\"I see.\" \n\n\"Your honor, we further believe that the examples of Mr. Conway's work that we included in the injunction as Exhibit B and Exhibit C show clear stylistic similarities to his version of The Awful Grace of God, while Exhibit D and Exhibit E, copies of other Caroline Cole novels show few stylistic similarities to Exhibit F, the novel published by the defendant under the title The Awful Grace of God, which was supposedly written by Caroline Cole.\" \n\n\"Finally, your honor, it is our contention that the ultimate burden of proof in this preliminary injunction is the responsibility of the defendants. We believe that unless the defendants can produce evidence that Ms. Cole possessed any version of the published novel The Awful Grace of God dated prior to March 19, 2017, the story The Awful Grace of God is the intellectual property of Mr. Conway, not Ms. Cole.\" \n\n\"Ms. Jordan, I would remind you that it is not my task to determine the intellectual property rights to the novel today, but rather whether there is enough evidence to grant your injunction. However, you are correct in that the burden of proof falls to the defendants. Well, Mr. Alexander, do you have any evidence that Ms. Cole, Ms. Calvert, or anyone at Solon &amp; Blake Publishing had a version of the story that is date stamped before March 19, 2017?\" \n\n\"Your honor, we believe this is highly irregular! My client has the copyright to The Awful Grace of God.\" \n\n\"Mr. Alexander, it matters naught whether the plaintiff's evidence is regular or irregular, or whether your client has a copyright. If that copyright was obtained illegally, it has no legitimacy. Now, I asked you a question: do you have any evidence that the defendants possessed a version of this story prior to March 19, 2017? It's a rather simple question, Mr. Alexander. Either you have evidence of a version or you do not.\" \n\nAlexander did not respond, but turned to Tanya and began to whisper something to her. Judge Bullock stared at them both. The longer he waited for a response to his question, the more visibly annoyed he became. Finally, his voice boomed, \"Ms. Calvert, you worked directly with Ms. Cole in developing the final versions of her novels, is that correct?\" \n\n\"Yes, your honor, we've worked closely together for roughly the last 5 years. She does have an editor, but most of the manuscripts that become her books have undergone extensive review by myself prior to them being sent off to the editor. Then, we review the manuscripts multiple times again before publication.\" \n\n\"Did you use that same process prior to the publication of The Awful Grace of God? \n\n\"Yes, your honor, we did.\" \n\n\"Then, do you have some evidence of electronic copies of the story that were passed back and forth between you and Ms. Cole and/or her editor prior to publication?\" \n\n\"Yes, your honor, I'm sure we do.\" \n\n\"You're sure you do? What kind of an answer is that? Mr. Alexander, you received the plaintiff's written injunction the same day that I did, which was January 16<sup>th</sup> of this year. Today is March 9<sup>th</sup>. You and your client have had over seven weeks to read and digest the claims that the plaintiff is making in this preliminary injunction. You had a chance to gather evidence that would refute those claims. If you did not bring evidence with you today that can explicitly refute the plaintiff's claims, I have no choice but to grant the plaintiff's petition to the court to force your client to stop publication of The Awful Grace of God! What say you two?\" \n\n\"Your honor, I apologize\", Tanya began sheepishly, \"but I think this is simply a case of jealousy and revenge on the part of Mr. Conway. Ms. Cole simply didn't want to continue her sexual relationship with Mr. Conway, and he became angry because of that. I think that's why he stormed out of her house and why he initiated this lawsuit.\" \n\n\"Oh really!\" Bullock exploded. \"I'm sorry, Ms. Calvert, but I don't give a rat's behind why you think Mr. Conway initiated this lawsuit! All I care about is the evidence that is before me, and if you don't produce some soon, I am prepared to rule in favor of the plaintiff!\" \n\n\"Your honor, I was with Ms. Cole when we first discussed this story, even before her first draft. I told her that her concept for the story, a story about someone who lost a person with whom he was deeply in love, and then had to piece his life together again through another relationship that proved to be even more passionate than the first \u2013 that was a story that her fans would fall in love with!\" \n\n\"I was even there with her when Caroline came up with the title. She said she thought she had a great name for the story, and when she told me, I agreed that it was very poetic, and that it would make an excellent title for her novel. I was aware of Ms. Cole's work throughout the creation of this story, and I'm sorry that I don't have the proof of that right now, but if you give us just a little time, I'm sure that we can prove that Ms. Cole wrote The Awful Grace of God.\" \n\nHe nearly jumped out of his shoes! He and Paige whispered excitedly between themselves, but they were as surprised as everyone else in the courtroom when Judge Bullock's booming voice nearly nailed Tanya to the wall, \"You claim the title is original, that Ms. Cole came up with it?\" \n\n\"Yes, she told me she did. I mean... she... she told me the title and we talked... and...\" Tanya looked like she'd just swallowed a foot long cock. \n\n\"Excuse me, your honor, could I say something?\" He thought his voice sounded weak and ineffectual. \n\n\"Yes, Mr. Conway, I would love to hear what you have to say about this subject!\" \n\nHe spoke extremely slowly and as carefully as he could. \"Your honor, the title The Awful Grace of God is not an original title.\" He paused. \"It comes from Aeschylus, the Greek poet and playwright \u2013 from his play Oresteia. The line is from one of Agamemnon's speeches.\" ",
        "\"Even in our sleep, pain, which cannot forget, falls drop by drop upon the heart until, in our own despair, against our will, comes wisdom through the awful grace of God. That's where I got the title \u2013 from Aeschylus.\" \n\n\"Of course, you did, Mr. Conway. And since you know that speech you probably also remember the night that Bobby Kennedy recited the very same words that you just did. Do you remember that, Mr. Conway?\" \n\n\"I do, your honor\", he answered with a broad grin. \"It was the night that Martin Luther King Jr. was assassinated. I think it was in Indianapolis, which was the only major city in America, I believe, that didn't erupt in violence after Dr. King's assassination. Most people credit Kennedy for having prevented a riot that night.\" \n\n\"You, Mr. Conway, are obviously not only a writer of distinction, but an excellent student of American history! I hereby grant the plaintiff's preliminary injunction! Mr. Alexander, I will be issuing a court order requiring Solon &amp; Blake to stop publication immediately! Ms. Jordan, I am going to assume that you would now like to submit a civil lawsuit against the defendants?\" \n\n\"I would, your honor! I have the paperwork all prepared. Should I give it to you now?\" \n\n\"Yes, you may, Ms. Jordan. I am pleased that at least one attorney in this room is not going to waste any more of this court's time.\" A smiling Paige approached the bench, and handed Bullock a manila folder. \n\nHe nodded and turned, \"Mr. Alexander, I would suggest that you and your clients settle this matter as soon as possible, because if you don't, you will not serve those clients very well! This matter is now closed!\" The crack of his gavel shocked everyone back to reality as Bullock rose and limped out, handing Paige's envelope to the bailiff on the way to his chambers. \n\nHe turned to Paige, who had just returned to his side, and both of them, beaming joyfully, hugged each other. The bailiff rifled through the papers and stepped toward the defense table, handing Alexander a copy of Paige's paperwork. He put it into his briefcase without looking at it. Meanwhile, Tanya stared with seething anger at the two of them. \n\nHe was reminded of the first moment he saw her, standing with arms on her hips, watching him fuck. He disliked her in that moment, and he found it particularly appropriate that his initial impression of her \u2013 and the Hollywood scene that she seemed more than willing to champion \u2013 had proven so accurate. \n\nDespite their intelligence, awareness, and interest in art and culture, Tanya's crowd always seemed to miss something critical. She had just proven his point with her pathetically ignorant lie, a lie that had demonstrated beyond \"a shadow of a doubt\" \u2013 a standard far more rigorous than required by civil litigation \u2013 that his story had been plagiarized and she was behind it. \n\nPaige too gathered up her things, put them inside and then closed her briefcase. As they walked out of the courtroom side-by-side, the teasing began. \"I thought you weren't going to say a thing? That was some pretty fancy lawyerin' for someone whose attorney does all the talking for him!\" \n\nHe grinned. \"Well, that was pretty easy. She sort of teed it up for me!\" After they walked out of the building, down the steps, and began the trek to the parking structure, he looked behind him. Walking two dozen yards back just out of earshot were Mr. Alexander and Tanya. \n\nThe two stopped walking. Alexander was talking on the phone, waving his arms animatedly. He did not look happy. Tanya continued glaring at the two of them, so he turned his back to her and speaking in a low voice, asked, \"So, how long do you think it will take for Solon &amp; Blake to call?\" \n\n\"I expect it will be before I get you home! Hey, should we wait around for a few hours before leaving town? We could go have a celebratory drink if you'd like! Maybe stick around for dinner. There are some great restaurants in town.\" \n\n\"No, let's get the hell out of this godforsaken place as soon as we can. I'm sorry, Paige, but I hate this fucking city! If we leave now, traffic won't be too bad. If we wait even an hour, we're stuck here for a while. I'd rather celebrate at home, anyway.\" \n\n\"You're right. Let's just take off. If they call, they call. The car has Bluetooth; I've already synced my phone to it.\" They found the rental car in the parking garage, and a few minutes later they were back on the Northbound 101. \n\nSomewhere just east of Ventura, Paige's phone rang. She hit the Bluetooth button on the car's dashboard. \"Hello. This is Paige Jordan, Intellectual Property Law Group, how can I help you?\" \n\n\"Ms. Jordan\", a familiar, high-pitched voice squeaked from the car's speakers, \"this is Randall Alexander, representing Solon &amp; Blake Publishing. Do you have some time to talk?\" \n\n\"I've got all the time in the world, Mr. Alexander! What would you like to talk about \u2013 the weather? It's warm for March, don't you think? You're Irish aren't you, what are your plans for St. Patrick's Day?\" She turned to him, a teasing smile beaming from her lovely face. \n\nAlexander's voice revealed he was in no mood for joking, \"My clients would like to settle the matter with Mr. Conway. Solon &amp; Blake has come to the conclusion that we were misled in this matter by Ms. Calvert and Ms. Cole. We are willing to make Mr. Conway a settlement offer.\" \n\n\"Does that mean that you're rejecting the $5 million figure that we proposed in the lawsuit?\" \n\n\"Well, yes. It's true that we would like to offer Mr. Conway a slightly smaller monetary settlement. However, the company is also willing to employ him... as a writer. We'd like to publish his book.\" He looked at her with astonishment. \n\n\"Really? That's an interesting offer, Mr. Alexander, and one I can't say I was exactly prepared to hear. Can you give me some more of the specifics about what you're proposing?\" \n\n\"Yes, I would be happy to do so, Ms. Jordan. Solon &amp; Blake Publishing is willing to surrender any and all revenues (minus publishing and marketing costs) that it has accrued through the publication of The Awful Grace of God to Mr. Conway. Of course, that would come after we've pulled all of the copies of the novel from stores, etc.\" \n\n\"We estimate that amount of money to be approximately $3 million dollars at the present time, though it could go up, depending upon how quickly we are able to effectuate the recall. I would point out, Ms. Jordan, this is far more money than a writer would normally receive.\" His eyes nearly popped out of his head. \n\nPaige was stone-faced. \"Of course, it's more money, Mr. Alexander! Did you think that I had forgotten that you owe my client not only Ms. Cole's, Ms. Calvert's, but the entire company's profits from his book? Please don't try to convince me that you're doing us a favor!\" \n\n\"Be that as it may, Ms. Jordan, the intent of this settlement is to compensate Mr. Conway for both lost income, as well as any personal injuries that resulted from our company's unfortunate actions.\" \n\n\"Then, in addition to that, we would like to offer Mr. Conway, a publishing contract to distribute his version of The Awful Grace of God, with an option to publish other works that Mr. Conway has produced. Solon &amp; Blake would pay to market and promote Mr. Conway's work, and he would receive a percentage of any future profits, like any other writer we employ. Any future publications would, of course, require a separate contract.\" \n\n\"In essence, Ms. Jordan, we are trying to develop a contractual arrangement with Mr. Conway that imagines a scenario in which we, in effect, are the original publishers of Mr. Conway's book. We're offering him the same percentage of any future revenues that we previously offered Ms. Cole, which is seven percent, in addition to our commitment to the three million plus. We think this is quite generous considering that Mr. Conway has never before been published.\" They looked at each other with wide eyes. \n\n\"That is certainly true, though you probably don't owe any other unpublished authors somewhere between three and five million, now do you, Mr. Alexander? What about artistic freedom? Are you proposing that Mr. Conway cut all of the sections of his story that were redacted from Ms. Cole's stolen version?\" \n\nShe continued. \"I would point out that Mr. Conway's writing doesn't really fit into the same category as Ms. Cole's more commercially viable style. What kind of artistic control can my client expect to maintain should agree to work with Solon &amp; Blake?\" \n\n\"Ms. Jordan, Solon &amp; Blake would almost certainly use one of its many subsidiaries to publish and distribute Mr. Conway's book. Those subsidiaries often market books that appeal to, shall we say, more adventurous audiences than Ms. Cole's.\" \n\n\"We think one of those smaller publishing entities will be perfect for Mr. Conway's work. However, publishing is always a negotiated business, and though we are willing to offer Mr. Conway pretty wide latitude on artistic decisions, we would still want to retain some control. So, ultimately, final publishing decisions would have to be negotiated.\" \n\n\"All right; can you send me a written summary of the proposal, Mr. Alexander? Then, of course, I will have to speak to Mr. Conway. Can I get back to you perhaps tomorrow after we've had a chance to look over the proposal?\" \n\n\"Yes, of course. I have your business email and fax number, Ms. Jordan; can I send the proposal to one or the other?\" \n\n\"Fax would probably be better, for now.\" \n\n\"Okay, that's fine. I will have it to you within the hour. Oh, and Ms. Jordan, a couple of other things. We would, of course, be asking that in exchange for the settlement, Mr. Conway would drop his lawsuit against my clients, and we'll need to add a confidentiality clause as well. Both, as you well know, are pretty standard in out-of-court settlements. And one final thing, we would insist that you and Mr. Conway would agree not to refer the matter for criminal prosecution. We'd like to put this behind us.\" \n\n\"Mr. Alexander, while both my client and I could agree to refrain from making a criminal referral, the cat is, so to speak, out of the bag, is it not? Judge Bullock could himself refer the matter to a prosecutor. If he did so, we would have no control over such action.\" \n\n\"We understand that, Ms. Jordan. We would be taking our chances with Judge Bullock, but we are prepared to agree that Mr. Conway has any and all property rights to The Awful Grace of God, and we are simply asking that, in light of our agreement to compensate Mr. Conway for those rights, you would not refer Ms. Cole, Ms. Calvert, or Solon &amp; Blake for criminal prosecution.\" \n\n\"Okay, I understand, and yes, we can agree to that. I do have one final question though, Mr. Alexander. I don't know if you will be able to answer this or not. What will be the relationship between Solon &amp; Blake and Ms. Cole moving forward?\" \n\n\"Ms. Cole is no longer under contract with Solon &amp; Blake. That is about all I can tell you, Ms. Jordan.\" \n\n\"I see. Well, I look forward to reading your proposal, Mr. Alexander. Thank you. I will more than likely be getting back to you tomorrow with a response.\" \n\n\"Excellent. Thank you, Ms. Jordan. Goodbye.\" \n\n\"Goodbye, Mr. Alexander.\" Paige clicked the Bluetooth button on the dashboard again, and then stared at him. \"Well, you heard everything he said; what do you think?\" \n\n\"Shit! I certainly never expected this! It's far more money than I could ever have hoped for, and more than I thought I'd make in my entire life, but still, that's less important to me than an opportunity to be published! After what they did, I'm pretty skeptical about the company, even though it's a major publishing house, but I think I'd be a fool to say no. What do you think?\" \n\n\"I think we have a good reason to celebrate tonight!\" \n\n\"Yeah, I guess.\" \n\n\"What about Caroline; what did you think about that? They dropped her like a bag of garbage.\" \n\n\"Yeah, I feel kind of bad about that, kind of guilty, to be honest with you.\" \n\n\"Why would you feel guilty?\" \n\n\"Because the lawsuit is going to ruin her, that's why! I'm the reason she got fired and the reason, she'll probably never publish again!\" \n\n\"No you're not. She's the reason she got fired, she and Tanya. Jesus Christ, Chris, she stole your goddamn story so she could profit from it! How can you forgive her for that?\" \n\n\"I can't forgive her, but I didn't think it would come to this. It's like, instead of her stealing from me, I stole her career from her, stole her place with her publisher.\" \n\n\"You can't think that way! If you do, then all the people who stand up for themselves, for what is rightfully theirs... they're the ones who are to blame for all of the world's problems, and not the cheats and the charlatans? That's not only unfair; it's absurd and ridiculous!\" \n\n\"I know! I know!\" He shook his head, fully aware of and embarrassed by the Catholic guilt that had reared its ugly head to disrupt what should have been a celebration. \n\nThis wasn't the first time that he'd done this to himself. Even after Susan left him for another man, he kept blaming himself for not being more emotionally attentive to her. Nothing anyone had every personally done to him, no matter how despicable, exempted him from his own self-doubt. In this case, he figured he was at least partially to blame, because he was always to blame. \n\nThey had reached the coast again, and predictably in the late afternoon of a warm, late winter's day, the temperature had cooled. On their left, the deep blue swells of the Pacific gave way to stone-washed, white stripes as its surf crashed against ever-shifting strands of narrow sand beaches, while to their right, winter's scrub-covered mountains, draped in lush green cloaks of tall grasses and swathed in the brilliant golden-yellow of wild mustard, tumbled into the highway. \n\nIt struck him that the only thing that was keeping the mountains from falling into the sea was the twin ribbons of the 101 and the Amtrak rails that hugged their shoulder. It also struck him that if, at that very moment, the mountains should tumble into the sea, no one would ever find them! They would be washed out to a massive, watery grave. \n\nThey traveled on silently. He was lost in his own illogical musings, and Paige, sensing that it was better to let him sort things out for himself, as opposed to trying to reason with him, left him to his own peculiar devices. They had just begun passing Carpinteria when his phone rang. As he was not thinking particularly clearly at the moment, he answered it without looking to see the source of the call. \"Hello.\" \n\n\"Chris, this is Caroline. Please don't hang up! I really need to talk to you!\" \n\nHe didn't know what to do or what to say. \"I don't think I'm allowed to talk to you! For god's sakes, I have a lawsuit against you, Caroline! We shouldn't be talking to each other! It's a bad idea... for both of us!\" He gave Paige a look. \n\n\"Chris, I know! I know you're suing me. You have every right to sue me! And I know I'm not supposed to talk to you, but, Chris, I'm the reason why they've decided to settle this thing with you. I talked them into it. And that's just it, that's what I really need to tell you! I want to tell you the truth! Now! Please! Please, Chris!\" \n\n\"Caroline, just wait a moment! Just wait!\" He put his hand over his phone and with nervous dread on his handsome face, turned to Paige, \"What do I do? She wants to tell me something about the case.\" \n\n\"Set your phone to Bluetooth. I'll turn the Bluetooth off on mine. Tell her that I'm here, but you will only speak to her if I can listen in on the call. I'm going to record it. After what Alexander said, I doubt that we need a recorded confession, but try to get her to admit what she did! It might help with our negotiations!\" \n\nHe stared, dumbfounded, but nodded his head, and removing his hand from his phone, raised it to his face again. \"Caroline, I'm in a car headed back home, and I'm with my attorney, who has told me that I can speak to you, but only if she can listen in. I'm going to set my phone to Bluetooth so she can hear, is that okay?\" \n\n\"Sure, I don't give a shit. Tell her that I don't care. I just need to tell you the truth.\" \n\n\"Okay, hang on just a second.\" Paige was already switching the Bluetooth setting on her phone to off. Then, she turned her phone's audio recorder on. When she was done, she nodded at him, and he turned his own Bluetooth setting to on. After a half minute or so, he had synced his phone to the car's Bluetooth receiver and speaker system. \"Okay\", he said, setting his phone down in the console between the two front seats, \"can you hear me?\" \n\n\"Yes, I hear you just fine.\" \n\n\"Okay, well, the ball's in your court, Caroline. You called me. What the hell do you have to say for yourself?\" \n\n\"I'm sorry! I'm so, so sorry! But, Chris, you've got to understand, I didn't want this to happen. I didn't mean for any of this to happen!\" \n\n\"That's an interesting perspective, Caroline! You steal my story; put your name on it, and then have the audacity to tell me that you didn't want that to happen! That's hilarious! If it didn't hurt so much, I would be laughing my ass off right now!\" \n\n\"Chris, look, I went along with it. I admit that! Obviously, I went along with it. I let her do it; let her put my name on it! It's not an excuse, I know, I know, but I was just so upset that you wouldn't talk to me, you wouldn't return my emails, my texts, my phone calls. I was just so upset that I let her talk me into it. That's what I wanted to tell you!\" \n\n\"You let who talk you into what?\" \n\n\"Tanya, for god sakes! Tanya did it! She did all of it! She had your story after I emailed it to her; she edited it; she submitted it to Solon &amp; Blake. It was all her idea! It was done before I even knew what had happened.\" \n\n\"Sure, I should have stopped it, but when I found out what she'd done, I panicked. I was mad at you, and I panicked, and instead of stopping it, I let it go. I let her go ahead with it, and for that, I am so, so incredibly sorry and embarrassed and... and... and, I'm done, Chris. I'm done. I... I... just don't want you to hate me anymore! I wanted you; that's all! I just wanted you, and I wanted so badly for you not to give up on me.\" \n\n\"I realize now how despicable Tanya has been, and that you were right about her all along! I have nothing to do with her anymore. Nobody has anything to do with her anymore. The company fired her, right after they fired me, right after I told them the whole story! I want you to know that, Chris. And I know I should never have trusted her. I know I should never have believed her.\" \n\n\"And yet, that's exactly what you did! You trusted her; you believed her, instead of me! How do you think that makes me feel, Caroline? You trusted that... that...\" He wanted to be honest, to call Tanya out for exactly who she was, but, knowing he was being recorded, a kernel of self-restraint somewhere deep inside stopped him. \n\n\"You trusted that woman over me! Somebody you'd known for almost 30 years! Somebody you'd shared yourself with intimately. And now, where are you? You've lost your job, you've lost your career, and you've lost... you've lost... Fuck! And all because of her!\" \n\nHe was crying, but he continued in a quaking voice, \"And believe me, Caroline, I take no pleasure or satisfaction in that! None! If you think it makes me feel any better to watch you crash and burn, then you never knew who I was in the first place!\" ",
        "\"I know that! I do know you! How could anybody read your stories and not know you? Your goodness, your decency, it just spills off the page, Chris! And that's, that's what makes what I did so, so much worse! I was deceitful and dishonest and cruel to someone who deserved nothing but my kindness and honesty and compassion.\" \n\n\"Forgive me if that strikes me as crocodile tears, Caroline!\" \n\n\"I know! I know!\" \n\n\"You know, Caroline, it's neither here nor there, but I'm just curious \u2013 The Awful Grace of God, do you know where I got the title?\" \n\n\"Of course, Aeschylus! It's a great title, Chris! It's especially poignant if you know the whole speech, because that speech really conveys the theme of your story. I was going to compliment you on the title that night when you first showed me the manuscript, but I wanted to see how you used it, how you developed it. And then when I found out the next morning, I couldn't stop crying!\" \n\n\"Yeah, again, crocodile tears, Caroline, crocodile tears.\" \n\n\"Chris, look, I can't ever forgive myself for what I did, so I sure as hell don't expect you to forgive me! I... I just... I just don't want you to hate me. That's all! Just tell me you don't hate me!\" \n\n\"I don't hate you, Caroline! I pity you! I feel sorry for you! But I don't hate you! I just can't ever trust you again! So, thank you for telling me the truth! I guess it sort of makes me feel better to know that it wasn't your idea, but, let's face it, that doesn't change a goddamn thing, now does it?\" \n\nHer voice, steeped in despair and hopelessness, faltered in resignation, \"No, I guess it doesn't. Goodbye, Chris. I'm sorry! I truly am sorry!\" \n\n\"Me too, Caroline, me too!\" He paused, and then hit the Bluetooth button on the dashboard to end the call. \n\nWhen he looked up, he couldn't stop the tears. He tried to wipe them away with the sleeve of shirt, but they kept coming. After a while, he figured there was no point in trying to hide them from Paige, so he let them spilled down his cheeks until they disappeared into his beard, then trickled off his chin and onto the front of his shirt. \n\n\"I'm sorry, Chris! I'm so sorry!\" She put her delicate hand on his heaving shoulder. She didn't say anything more for a long time. She let him suffer in peace until they'd passed Santa Barbara and the 101 had turned north through the mountain tunnel at Gaviota. \n\nOnce they emerged from the darkness into the brilliant light of the late afternoon, she tried to get him to talk, to open up. \"Chris, can I ask you a question. If this is a bad time and you don't want to talk about it now, I understand.\" \n\n\"No, I'm sorry, Paige. I'm being a selfish, petulant child.\" \n\n\"No, you're not. You're being human, and no one should ever have to apologize for being human. You lost someone, and that hurts. I understand that. Don't apologize for the pain. Remember it 'cannot forget.'\" \n\nHe smiled. \"Thanks. That makes... Just... thanks.\" He smiled again. \"What do you want to know?\" \n\n\"Well, Tom Knox is one of my colleagues at Intellectual Property Law Group. Tom's a good guy. I was thinking... if you agree to this... and only if you agree to this... I was thinking maybe I could hand the case off to Tom. At this point, it's really just a matter of crossing the t's and dotting the i's. Honestly, this recording could probably get us another million, but I think I already know that you won't want to use it.\" \n\nHe stared at her. He knew where she was going. He wondered whether or not he should make her explain it all. \"No, I never cared about money anyway, and I'm too old to start caring now. Delete the recording.\" \n\n\"Okay.\" \n\n\"What about your portion of the settlement? You did all the work.\" \n\n\"I don't really care about the money, either.\" \n\n\"You wouldn't ask \u2013 what's his name \u2013 Tom? You wouldn't ask Tom to share some of it with you?\" \n\n\"He'll offer, knowing him, he'll offer most of it, but that would just complicate matters. Besides, there are still a number of simple things that need to be settled. I think he should ask for a structured settlement; then you'll be set for the rest of your life. Maybe set up payments for the next 5 or 10 years. They'll be some significant paperwork for him to complete, though it's easy work. Plus, the firm gets half of the money, regardless of whose name is attached to the case.\" \n\n\"That's still a half million dollars before taxes and everything else. That's a lot of cash.\" \n\n\"You know, Chris, I've learned a lot from this case, and sometimes... what you learn is worth more than what you earn.\" \n\nHe smiled. \"You're a poet, and you don't even know it!\" \n\nShe laughed. Then, she paused and waited a long time before continuing, \"You know, she's right, don't you?\" \n\n\"Who's right?\" \n\n\"Caroline. She's right about you.\" \n\n\"Caroline was right about a lot of things, but that doesn't matter anymore.\" \n\n\"I think it does matter. At least, it matters to me.\" She waited. She was trying to decide exactly what she wanted to say. \"Chris, despite all of the horrible things that happen in this world, sometimes a little good comes out of tragedy. You got fucked over, but now, in legal jargon, you'll be 'made whole.'\" \n\n\"A poet would phrase that differently... how did he put it?\" She spoke slowly, trying to remember all of the words: \"Even in our sleep, pain, which cannot forget, falls drop by drop upon the heart until, in our own despair, against our will, comes wisdom through the awful grace of God.\" She laughed. You know, I'll never forget that!\" \n\nHe smiled. \"Shit, you're almost obnoxious enough to be an English major now!\" \n\nThey both laughed for a long time, but when their chuckles slowed and finally ceased, she waited again, trying to finish her thoughts. \"No, I don't think it's obnoxious. Wisdom is the reward for transcending despair. I know you've learned a lot from everything that's happened to you, and I'd like to think I've learned some things, too.\" \n\n\"I've gained enough wisdom to know when something worth pursuing presents itself to me. You're worth it... worth pursuing, and so, even though it's 'against my will', if I need to be, I can be patient. Of course, I'd rather not be patient.\" She paused, staring at him intently. \"Chris, can I ask Tom to take over your case? I promise you, you'll be in very capable hands.\" \n\nHe smiled with embarrassment. \"Would that ease your ethical qualms, counselor?\" \n\nShe smiled and shook her head. \"Yes, it would! It definitely would!\" \n\n\"Then, I guess, it would be okay for you to call, Tom.\" \n\n\"Good!\" A flush of warmth bathed her face. \"When we get back, I'll do that right away. I'll have him email me a new representation agreement.\" She waited. \"Oh, there's one other thing \u2013 can I ask your opinion about something, Chris?\" \n\n\"Sure. I don't know if my opinions are worth anything, but I do know they cost me nothing.\" \n\n\"Well, I have the suite in Shell Beach booked for tonight, and I'd like it if you'd stay there, or if you prefer, maybe I could stay at your place. What do you think?\" \n\n\"I don't know \u2013 my place in suburbia or that lavish suite in the creepy resort under the bridge! That's a tough call!\" \n\n\"I have a bottle of Chardonnay! Does that tip the scales, at all?\" She smiled hopefully. \n\nHe chuckled. \"Sure, it does! How the hell else am I going to fall asleep under a bridge! Look, I'm willing to lower myself to your standards on one condition \u2013 tonight, I buy dinner, and I get to pick the place!\" \n\n\"You're going to be a very wealthy man. I would expect nothing less!\" \n\nAs they drove on, the sun was just beginning to settle in the west. Just before 5:00, they arrived at his house. He wanted to grab a change of clothes and his shaving kit. \"Do you still have time to make your call to work?\" \n\n\"Sure, Tom's usually there until at least 6:00. Besides, I have his cell.\" \n\n\"Okay, in the meantime, I'll pack some things and then make reservations for dinner.\" \n\n\"I look forward to that!\" She stepped closer and, running her hand against the side of his leg, she kissed him. 10 minutes later they drove back to the hotel. \n\nIt was a Thursday, but they got into The Attic right away. The place was on the busiest street downtown, in a second story loft, overlooking the famous pier. He'd never eaten there, but he'd heard great things about the place. It specialized in seafood, but had a fair number of steak entrees thrown in for good measure. It was small and romantic, and they had a table next to the fireplace. Every table in the small room was afforded a stunning view of the ocean, and that night's sunset was especially spectacular. \n\nPaige wore another evening dress. It was quite a bit less revealing than the tight, red, little number she'd worn the night before, but, he thought to himself, she would look good in a burlap sack, and the classic \"little black dress\" she chose was more than enticing. \n\nDuring the car ride downtown, and throughout dinner and the ride back to her hotel, they held hands, and both found plenty of reasons to touch and caress each other, though they did so discriminately. \n\nAs they'd both eaten seafood the night before, they each ordered a steak and salad, along with a bottle of wine. They shared a dessert and each had an after-dinner drink. When they got back to Paige's hotel, they were both slightly tipsy. \n\nThey entered the room, and the scene from the night before was replayed almost identically. Paige turned and kissed him passionately. They held the kiss for several minutes. An electric passion coursed through their bodies, as he embraced her about her slender waist. After several minutes, Paige broke the kiss and surprised him with an odd question, \"You brought your swimsuit like I suggested, didn't you?\" \n\n\"I did, but I thought you brought me back here for something other than a nighttime dip in the pool!\" \n\n\"I have other plans. I admit that, but...\" She broke off her explanation with a wry smile. \n\n\"But what? That sounds a little fishy, counselor!\" He answered, his arms still wrapped tightly about her slender waist. \n\n\"Stop calling me that!\" she answered sarcastically, a blush of embarrassment reddening her face. \"I'm not your lawyer anymore!\" \n\n\"Maybe not, but it doesn't take a lawyer to figure out that you're planning some kind of impropriety! I can sense something either illegal or immoral bubbling like a caldron inside that skull of yours!\" \n\nShe grinned. \"Is that why you fired me, Mr. Conway, fears of impropriety? Just remember, I'm not the person who writes the dirty stories!\" \n\n\"What do my stories have to do with anything?\" \n\n\"Well, you told me a story once, about you and some woman in a swimming pool, and I thought maybe we could sort of... I don't know... act it out... out there!\" She nodded with a grin to the sliding patio doors, from which he could see the empty hotel pool, twinkling under patio lights. \n\n\"You truly are wicked, aren't you? If I recall correctly, that story involved voyeurism! Is that what you're shooting for? Do you have somebody up in one of these rooms waiting with a camera? Are you trying to blackmail me or something? Maybe you're a double agent!\" \n\n\"We'll be clothed. Not like you and that other skank! Besides, I just bought a new bikini that I'd like to try on for size!\" \n\n\"I have a funny feeling it might be a little small on you!\" \n\n\"Most of my bikinis are! Do you think your heart can handle that?\" \n\n\"I doubt it! But like I said this morning, I'd be out of my mind not to want to find out!\" \n\n\"Then, let's go for it! It's early and the pool and Jacuzzi are open until 10:00. There's nobody out there now; we'll have plenty of privacy!\" \n\n\"Of course, there's nobody out there. It's March 9<sup>th</sup> and about 48\u00b0 outside!\" \n\n\"They're heated. The guy from the front desk said they keep the pool at 84\u00b0 and the Jacuzzi at 102\u00b0. Besides, if you get cold, you've got someone to warm you up! Let's enjoy them for a little while; then we can come back here and... relax. I'll change in the bathroom; you use the room.\" \n\n\"Okay.\" She smiled and kissed him again, running a soft hand across his cheek after breaking the kiss. She found her suitcase and located her things, then slipped into the bathroom quietly. He grabbed his overnight bag and pulled his swim trunks and flip flops from it. \n\nHe unbuttoned his shirt, took off his shoes and socks, then unbuckled his belt and slipped off his jeans and underwear. He quickly slipped on his suit and the pair of flip flops and stood awkwardly in front of the mirror, examining his body and wondering what a beautiful woman almost 20 years younger than he could possibly see in him. \n\nIt was true that he kept himself in good shape. He usually either hiked or walked four or five miles a day, and he had started using an inversion table that his daughters had given him for Christmas a couple of years ago. He religiously did 100 stomach crunches a day, and used it to stretch and do push-ups as well. But he was in his 50s now. His hair and beard had started to gray, and he thought he looked a little too skinny and less muscular than he had when he was younger. \n\nIn short, he was convinced he was beginning the slow descent toward old age, which wouldn't have been that much of an issue if he was exposing his 51 year-old body to a woman that was either Susan or Caroline's age. \n\nBut Paige was in her early 30s, and as far as he was concerned, women that age pretty much had perfect bodies. They'd left behind their adolescent scrawniness and the awkwardness of having one body part or another mature before the others did. Yet, their facial features, and especially their breasts, stomachs, asses, and thighs hadn't yet been overwhelmed by gravity, nor had their skin lost its tone and luster, which was something that seemed to assault most women once they reached their late 40s.  \n\nHe tried to imagine what his eyes were about to see, and he knew it was going to be spectacular. He didn't think he was overly self-conscious, but while he waited, those images kept popping into his head, and they left him feeling a little anxious. \n\nAnd then the bathroom door opened, and he realized that all of his imaginings had sorely underestimated Paige's magnificence! She was wearing some kind of silver, mesh swim dress with tassels that dangled to her mid-thighs. He assumed that it was supposed to cover, or at least obscure, her bikini-clad body, but if that was its mission, it was failing miserably. \n\nHer two-piece bikini glowed, almost like neon, beneath it. It was sort of hard to describe: the back of the top was sort of a darkish, polka-dotted material, but the cups of the bra top \u2013 what little there was of them \u2013 along with the skimpy bikini bottoms featured this pink, black, and purplish pattern. The suit hugged every curve, like it was painted directly onto her skin. As he suspected, there was very little of her body left to imagine. It was pretty much all right there on full display. \n\nShe still wore the black-strapped heels that she'd worn to dinner, and as she twirled around on them to show off her outfit from every angle, he could see a number of sexy piercings. Just above the tops of each of her long, impossibly slender legs at the point where they gave way to her full, round, ass cheeks, she had two dermal piercings that were identical to the one she sported on the left cheek. As she danced before him, they twinkled like stars, the tassels swaying back and forth in an undulating rhythm in front of them. Her navel also sported a barbell piercing that had a little, decorative, gold chain hanging from it. \n\nShe had donned several of the gold-plated bangles that she'd worn that day in her office when he first met her, and in addition to them, she wore gold chain earrings and a matching gold necklace that sported several dozen threads of chain of varying lengths, the longest of which disappeared into cleavage that simply took his breath away. \n\nWhile she pranced about doing her little striptease dance moves, she would occasionally open her mouth in a faux, orgasmic \"O\", and then intermittently slip a finger into that \"O\" and close her perfect lips around it. Then, she'd smile sexily, or put her hand into her hair, or turn her head to the side to effect a variety of \"cheesecake\" poses. \n\nAlmost immediately, he started getting hard, and he figured he'd better say something before it became too obvious. \"Paige, I'm serious, if you don't stop that, we're not going to be able to go out to the pool!\" \n\n\"And you said my suit was too small! Seems to me, you're the one that needed to buy a size bigger!\" she teased. \"Okay, I'll stop!\" She gave him a quick peck. \"There are towels down on the pool deck. We shouldn't need anything else, unless you want to bring that bottle of wine.\" \n\n\"No, they won't let us take a bottle down there. Besides, I'm feeling no pain. If you want, maybe we can drink it when we come back. That is, unless, you've got something else planned! Do you have the key?\" \n\n\"Yeah, I do, but... Come on, stop talking; let's go!\" \n\n\"I'm ready.\" \n\nThey went out the door and down the elevator, turned left, and took the short hallway out to the pool area. The air was cold \u2013 it couldn't have been even 50\u00b0 at the time \u2013 and a slight breeze off the ocean made it feel even colder than that. They grabbed a couple of towels and headed straight for the Jacuzzi, which, like the pool, was an Infinity model. \n\nIt was made of black granite and had three raised sides on which people could sit, while the side facing the ocean was just an inch or so below water level allowing the water in the tub on that side to spill over the edge until it was recycled through the tub's jets. \n\nPaige removed her swim dress and heels, and he took off his flip flops. They left them on one of the granite ledges right next to the tub's controls. He pressed the button to turn on the jets, and as powerful pulses of water bubbled forcefully to the surface, they took their seats in the corner of the tub with only their shoulders and heads exposed to the cold night air. \n\nPaige closed her eyes and lay back against him, relaxing in the hot water. \"Hmmm, this feels nice.\" They lay there like that for 10 minutes or so, until unexpectedly she turned to him, and in her whiniest, little girl voice said, \"I'm kinda cold; I need you to warm me up!\" \n\nShe scooted onto his lap, with her back to him, and he slid deeper into the tub to accommodate her, and, putting his arms around her, nuzzled his face into her neck. A minute later, they were kissing ardently, and his hands, still obscured by the water, found her big breasts. He began squeezing the underside of them with the palms of his hands over the top of her meager bikini cups. \"Hmmm, that's nice. That feels so nice!\" she cooed quietly in his ear. \n\nHe sensed a sudden swelling in his loins, and realized he was already growing hard. But that was only the beginning. When the round curve of Paige's taut ass began a slow, sensual grind atop him, his shaft grew painfully erect. \n\nFeeling his thickness sandwiched between the globes of her ass cheeks, she reached for his engorged helmet, which was poking provocatively against the slender strip of fabric that covered her pussy. Using just her fingertips, she reached into the water and began to caress the ridge around his mushroom head through his trunks. \"Oh, fuck.\" His groan was loud enough that, had anyone else been anywhere on the pool deck, they would undoubtedly have heard him. \n\n\"Paige...\" He was about to say something else, but then a long, low groan issued from deep inside his throat, \"Uuuuuggggghhhhh! Jesus that feels good! Ooohhh, my god! Do you... Fuck! Do you... Do you... gggrrrhhh... I think maybe we should head back up to the room!\" ",
        "She slipped off him and dropped to her knees in front of him, chest-deep in the water, turning around to face him in a single motion. The tops of her perfect tits glistened with water, and as she slithered forward, she pressed them against the insides of his thighs. Before he could say anything, she slid her hands inside his trunks, undid the drawstring, and pulled out his stiff cock. Then, pulling down her bikini top, she slipped his shaft underneath it, between her tits, and cupping her hands around her globes began to move up and down. He could see her large, round, pink areolas peeking out of the water on every upstroke. \"Paige, no! Please! Don't! Not here!\" \n\nHe said it much louder than he intended to, and grinning mischievously, she lifted her index finger before her sexy, pink lips, admonishing him with a whispered \"Sssssshhhhhh!\" \n\nShe smiled again and quickly pulled her top back up to cover her breasts; then she pushed the waves of her long, silver hair off her shoulders and behind her. He thought she was preparing to comply with his request, but then an even more devilish mien swept her lovely face. Suddenly, she grasped the underside of his ass, raised his haunches just above water level, and her head swooped down until her lips engulfed the head of his shaft. \n\n\"Jesus, Paige, no!\" He jerked in response, trying to pull back, so as not to force himself deeper into her, but his sudden movement accomplished the opposite, and at least half of his length disappeared into her warm, wet mouth. He quickly grasped her as gently as possible by the shoulders, and slowly lifted her head off him. \"Whoa! Christ, Paige! Okay, it's time to go back upstairs! I can't take it anymore!\" \n\nShe got a sort of fake, hurt look on her face \u2013 like a child whose sad expression is supposed to induce compassion \u2013 and pouted sarcastically, \"And here I was just starting to warm up!\" \n\nHe smiled at her. As much as her over-the-top shamelessness disturbed and even sort of angered him, he could never be mad at her. It was all a part of the tease, he knew that, but he really had been afraid that he was going to blow his load right there in the Jacuzzi and had he not stopped her, he was pretty sure that would have happened sooner rather than later. \n\nHer face grew serious. \"Okay, you're probably right. Let's go back to the room.\" \n\n\"I might have to wait for a while; I'm not decent right now\", he said as he tucked himself back into his swimming trunks and tied the drawstring. \n\n\"Just put your towel around you, silly!\" She said standing up and drying herself off with one of the towels. Then, she wrapped it carefully around her, concealing her body from her breasts to her mid-thighs. \n\n\"Yeah, I don't think that will help too much! The last thing I want is to get caught in the elevator with a big bulge under my towel.\" \n\n\"Oh, come on. We won't see anyone.\" \n\n\"How do you know?\" he asked acerbically, as he climbed out of the tub and wrapped the other towel around his waist. Paige picked up her swim dress and put her heels back on, and he slipped into his flip flops. \n\nHe reached down uncomfortably and turned off the jets to the Jacuzzi. He was still stiff, and bending was uncomfortable. They walked back inside hand-in-hand. When they reached the elevator, a young couple in their early 20s was just turning the corner of the hallway, approaching the elevators from the other direction. \n\nPaige stepped in front of him, and pressed the \"Up\" button. Her towel covered her mid-section, and though it was tucked and wrapped about her swimsuit top as carefully as possible, exposing only the straps of her bikini, her shapely figure was hardly concealed. \n\nThey both smiled, and the young guy nodded at him with a knowing expression. It was one of those looks that said, quite unambiguously, \"Good goin', brother!\" \n\n\"How was the pool?\" his painfully slender, brunette girlfriend asked. \n\n\"We never made it to the pool, but the Jacuzzi was wonderful! Still, it got a little too cold out there after a while\", Paige answered, just as the elevator doors opened. An older couple emerged and stared at all four of them suspiciously as they walked wordlessly passed. \n\nHe stepped in first and scurried to the corner nearest the control buttons. Paige followed and stood in front of him, while the young couple entered the other corner of the elevator. \"What floor?\" Paige asked politely. \n\n\"Three\", the young guy answered. She pressed both buttons. He was checking out Paige in profile, doing little to disguise his leering stare. The elevator closed, and it began rising, moving far too slowly to suit him. He looked down, and the lump in his towel seemed impossible not to notice. He began to blush as his embarrassment and the warmth inside the enclosed space overtook him. \n\nWhen they reached the third floor, the doors opened, and the woman exited first, admonishing her boyfriend, who seemed to linger just a little too long, \"Come on, Grayson, they're waiting for us!\" \n\n\"Have a good night!\" Grayson said, still ogling Paige as he stepped out. \n\n\"You, too!\" she answered pleasantly. Another couple arrived just as the door was about to close, but did not enter. Apparently, they were headed down. The door shut, and the elevator rose again. When it opened, the hallway was clear. \n\nA giggling Paige found the room key that she'd tucked into the pocket of her swim dress, and they hustled the last 50 feet to the suite. \"Yeah, we won't see anyone, huh?\" he said, shaking his head and grinning. Paige swiped the plastic through the key slot. \n\nStill giggling, she answered, \"Oh, no one saw anything!\" \n\n\"Really? That kid seemed to have gotten a pretty good eyeful of you!\" Just as they entered the suite and closed the door behind them, she turned again and kissed him, reaching down to cup her hand over his now softening bulge. \n\n\"Good, there still some life left in this! I'm going to rinse off in the bathroom, okay? Why don't you open the bottle and pour us each a glass of wine?\" She grabbed her makeup bag and disappeared into the room. A few seconds later, he heard the shower come on. \n\nHe took the time to close the curtains covering the patio door, then removed his towel, and pulled off his wet suit. He wrapped the towel about him again, and then found the bottle of Chardonnay in the small refrigerator under the entertainment console. \n\nHe looked around, and sitting on the room's desk was a tray with glasses, an ice bucket, and a corkscrew/bottle opener. He opened the bottle, poured two glasses, then recorked it and put it back in the refrigerator. He sat down on the sofa to read a little from the glossy, tourist magazine that he'd found on the room's desk, while he sipped the Chardonnay. \n\nShe took a lot longer than he thought she would \u2013 at least 10, maybe 15 minutes. He finished one article about fishing boat rentals in Morro Bay, as well as a glass of wine. He poured himself a second glass of wine, and then read another longer article about a professional theater company from down in Santa Maria, whose plays he'd seen on a couple of occasions. \n\nHe thought maybe she was washing her hair, but a minute or so after he heard the shower shut off, Paige, with a fresh towel wrapped snuggly around her torso, emerged from the bathroom. Her hair wasn't wet. She smiled at him. \"Do you want to rinse off, too?\" \n\n\"Yeah, I probably should. Here's your wine.\" He handed her the glass. \n\n\"Thanks\", she said, kissing him. \"Okay, don't take too long. I'll be waiting for you in bed!\" \n\nCarrying his wet suit, he stepped into the spacious bathroom and closed the door. He dropped the towel on the floor, and hung his suit over the glass door of the shower next to Caroline's bikini. He turned the water on and climbed into the shower. \n\nThe water was already warm, and it felt good, especially when he let it spray over his cock and balls. The warm water excited his cock, and as he soaped up, he couldn't help but stroke it a few times. Just as Paige had done, he made sure not to get his hair wet. \n\nAfter he'd washed and rinsed his body thoroughly twice over, he turned off the faucets. He climbed out onto the bath mat and used one of the clean bath towels to dry off. Then, he hung that towel back up and opened the bathroom door and stepped out naked. \n\nHe looked down at himself as he stood before the mirror in the outer bathroom. His cock, though it was only semi-hard, looked gigantic. It hung down between his legs like a thick sausage, and his shaved balls looked like overripe fruit, hanging nearly to the tip of his cock. They ached. He hadn't cum in a long time, and he suspected that when he did, there were sure to be some serious fireworks. \n\nPaige had left her tube of toothpaste on the countertop, and he figured that she must have just brushed her teeth. His overnight bag, containing his own toothpaste and brush, was on the desk on the other side of the room, so he squirted just a tiny bit of paste onto his finger, and rinsed out his mouth with it. \n\nIt was nearly dark in the suite. Paige had turned off all of the lights except two decorative wall sconces on either side of the King-sized bed. When he turned off the interior bathroom light, their soft, faintness infused the room with a romantic aura. \n\nHe stepped around the corner. Since his eyes hadn't yet adjusted to the darkness, he could just barely make out Paige in the middle of the bed, the covers obscuring most of her supine form. He could vaguely detect the distinctive aroma of wine. \n\nDespite the darkness, he could see the dim light twinkling in her eyes and reflecting off the necklace balanced across her chest, with the longer gold chains of its middle dangling down onto the bedsheet that just barely covered her big breasts. He could also see two slender, dark straps clinging to her willowy shoulders. She had dressed up for him! \n\nHe walked around to the other side of the bed. He could see a little bit better now in the dimness, but when he pulled back the bed covers as far as they would go, he was completely unprepared for the erotically-charged sight of the woman that was about to give herself up to him. \n\nHe climbed onto the bed and reached for her. He put his arm on her taut stomach and began caressing it with the palm of his hand, slowly, softly, delicately. As he explored further, he felt the sensation of a heavy, somewhat stiff fabric covering both Paige's breasts and her pubic region. \"I see you dressed up for me!\" he said, smiling in the faint light. \n\n\"I did.\" She purred softly, \"I thought you might enjoy some lingerie!\" She paused again and then sighed enticingly, \"I got it for you!\" \n\nHe leaned in and kissed her tiny ears, and then down her neck to her soft shoulders. His hand roamed across the textured fabric of her outfit, and he found her big breasts held tightly by snug, tight-fitting cups. He stroked them lightly, finding the warm, soft skin that bubbled out of the tops of each. \"Thank you. I appreciate that. I like it when a woman dresses up for me.\" \n\nHe pushed himself up on his knees and elbows, and, without touching her, leaned in for a kiss. Paige brought her soft hands to his face and stroked his beard gently, tenderly between them. Her lips found his. He could taste a strange, tart mixture of mint and wine in her soft, wet mouth. The kiss was delicate and affectionate, both a prelude and proposal, and even more than either, a promise of abundant and unrestrained passion. \n\n\"I've been thinking about this moment for a long time, Chris! Ever since the day I first met you! That was only two months ago, but it seems like a lot longer than that! It seems like a lifetime ago, now. When you told me, we had to wait, god, that just about killed me!\" \n\nHe laughed. \"I've come to believe that you perceive the passage of time entirely differently depending upon your age. When I was a kid, I always thought that time crawled at a snail's pace. You know, most little kids, no matter how much they like it, can't stand waiting until 3:00 to get out of school. I swear, from 2:30 until 3:00 p.m. seems to last about two hours, right?\" She giggled. \n\n\"I remember when I was 16. My parents told me that I had to wait until I had a job before I could get my driver's license, and that seemed like I was being condemned to an eternity without wheels! A month later I had my license, and then I thought, shit, that wasn't so bad! \n\nOr, there was another time, senior year. There was this girl I wanted to date, and I remember I saved up my money and asked her out to a nice restaurant and a movie for our first date, and afterward in the car, she told me that I couldn't kiss her until the second date! And that seemed like the cruelest thing anyone had ever done to me! A week later, I'd got a lot more than a kiss!\" \n\n\"You charmed the pants off her, huh?\" she asked, giggling. \n\n\"No, I bought her another expensive meal and took her to another movie! Actually I don't remember exactly what happened, but all of sudden I remember that the delay somehow seemed absolutely meaningless.\" \n\n\"And I think back to when I was first married, and we had just had children, and at that time, the pace of life seemed like it was just about right \u2013 not too fast, not too slow \u2013 perfect. \n\n\"Now, when one of my daughters comes to visit and says she'll stay for the weekend, I end up complaining about how little time that is. Now, time moves way too fast for me.\" \n\nSo, anyway, I think my perceptions of time have been totally determined by where I'm at in my life \u2013 first things went too slowly. Later, things were just right. Now, everything happens far too quickly!\" \n\n\"What are you trying to say, Chris?\" she asked with a suspicious grin. \n\n\"I'm not really saying anything. Just that you're a lot younger than I am, so to me, it seems like that day in your office was yesterday.\" \n\nShe paused, shook her head, and then asked, \"What were you thinking when you first met me, Chris?\" \n\n\"Wow, that's a loaded question! This is sure to get me into trouble!\" He laughed. \n\n\"Depends what you say!\" \n\nHe took a deep breath. \"Okay, well... I remember thinking \u2013 when Charley recommended this woman, he didn't mention how pretty she was! He told me that she was some kind of whiz kid lawyer, and how she worked for this great law firm in this beautiful office building up in San Jose, but he didn't say a damn thing about her looks, and I remember thinking \u2013 why is that? And then I went, oh yeah, he's her cousin. He doesn't think of her the way I do, the way other men do!\" \n\n\"Really, that was your first impression? Not, god, she really knows her stuff? Or, I'm so gonna win this case?\" She laughed sarcastically. \n\n\"See \u2013 just exactly what I thought \u2013 no matter what I said, I was going to be in trouble!\" He chuckled. \"But you're right, I did think all those things \u2013 how knowledgeable you were, and all that \u2013 but before I thought those things, I thought, goddamn, that woman is really beautiful! She's drop-dead gorgeous! Too bad she'll never be interested in me!\" \n\n\"Now why would you think that?\" \n\n\"Because I'm old, and you're not! Because you're beautiful, and I'm not!\" \n\n\"You're not that old! You certainly don't look your age. And you are handsome! Besides, I told you before \u2013 I've always liked older men.\" \n\n\"Why?\" \n\n\"Older men know how treat women, and... She waited. \"...you're much better at making love!\" \n\n\"Are you prepared to test that theory, counselor?\" He didn't wait for her answer. He kissed her gently, but with great passion. \n\nAfter 15, maybe 20 seconds, she pulled her lips away from his. Their mouths were no more than perhaps an inch apart. He could feel the moist warmth of her breath on his face. \n\nAs if a fuse had been lit, she grasped him by the shoulders and pulling him toward her, she suddenly rolled to her side until they had reversed places, and she was on top of him on the edge of the bed. She bent low to give him a kiss, and then she began nibbling her way down his neck, shoulders, and chest, until finally she was on her knees between his legs. \n\nHer right hand wrapped itself around his semi-engorged shaft, while her left hand found his sagging scrotum. She gently pulled, drawing him to her. He arched his back, and as he did, she guided his cock into her waiting mouth. \n\nThe sensation was intense \u2013 her warm, wet lips slid most of the way up his length, and on the backstroke her talented tongue darted and swirled around his head. He let out a barely audible, but still conspicuous moan, \"Ooooohhhhh!\" \n\nPaige continued, repeating the sequence. She went slowly, each time taking more of his shaft, and then on each retreat, spending more and more time working her tongue in a clockwise circle around his helmet. He began growing steadily in size, and after only a couple of minutes, he'd achieved his full, rock-hard length. Suddenly, her other hand left his balls, and he saw her reach between her own legs. \n\nHe was ready for her, but first, he wanted a taste. \"Would you mind changing places?\" She lifted her soft mouth from his shaft, and smiled, \"I'd think I might like that!\" She crawled up his body, until they kissed again, and this time, he pulled her to him, and commenced the same gentle, rolling turn she'd performed, in the opposite direction until he was again on top. He pushed himself up and back, so that he was kneeling before her altar. \n\nHe could see much better now. Paige's spectacular body was laid out spread-eagle on the mattress, her big tits accented by a tiny, tight-fitting, black and gold-metallic bustier whose bottom ended about two inches above her pierced belly button, her magnificent tits scarcely contained by its cups. A matching G-string was barely wide enough to shield her pussy from his view, while simultaneously her left hand was moving frantically under its shiny, gold fabric. Her feet were encased in her black strapped high heels. \"Oh god!\" he exclaimed involuntarily. \n\nHe backed up to the foot of the bed and lay down prostrate between her outstretched legs. She was moaning softly now, and he could see two of her bent fingers moving up and down under those tiny panties. When he got closer, he saw that her thumb and index finger were sticking out of one side of the skinny strip of gold, while her pinkie finger poked out the other side. \n\n\"Let me help you\", he said quietly, reaching for the narrow panels of black lace on the sides of Paige's G-string. She didn't respond. She was too busy. He stretched the fabric farther around her hips, and then, pulled them toward him, under her butt and down her long, slender legs, until he reached one of her heels. He pulled it off that foot and then the other and tossed it carelessly to the floor. \n\nShe continued frigging herself furiously with her middle and ring fingers. Now, just a foot away from his face, he could smell her pungent sex and see the glistening, wet arousal leaking from her excited pussy. \n\nShe seemed to understand his intentions, and just as he leaned in, she slipped her fingers out of her gaping hole to offer him access. Those fingers, wet with her juices, were right there in front of him, so before she could move, he wrapped his lips around them, all the way to her knuckles, and licked them clean! The appetizer only further piqued his hunger, so he slid his arms under her ass, and pulling her hips to him, he buried his face in her bare mound. \n\nHe started slowly, alternating between running his tongue the length of her gaping slit and sucking gently on her button. She reached for his head with her right hand and began running her fingers through his hair in gentle caresses. \"Aaaaaggggghhhhh! Oh, that feels nice! So nice!\" \n\nAt the same time, she pulled her legs back and began churning her hips in a clockwise rotation, grinding herself against his closely cropped face. Her left arm reached for her big breasts, and she pulled her right tit from her bustier and began tweaking her nipple between her thumb and index finger. ",
        "He pulled back momentarily to soak in the scene. With her legs pulled back he could see the glint of those two dermal piercings twinkling on her tight buttocks. Her nipple, hard and pointy, protruded from a large, dark pink areola as she rolled it between her thumb and finger. Her sex was wide open and leaking copious amounts of juice. \n\nHer pubic mound was totally bare, and she looked to have had a wax job within the past few days. A fine, dark stubble had returned. Her luxuriously puffy outer mounds gave way to beautiful, but unusual inner lips that coiled and twisted around her gash, and even in the indistinct light, he could see the bright pink of her inner pussy. \n\nShe had a long, slender clitoral hood, and after the work of his mouth and lips, an unusually large, mushroom-shaped pearl protruded luridly from that elongated jacket. It was the biggest clit he'd ever seen. \n\n\"Don't stop, please!\" she pleaded, her right hand aggressively pulling his head back to her sex, \"You're gonna make me cum!\" He went back to work, sucking and licking that nearly marble-sized clit. \n\nWith his left arm, he held the backs of both of her upper thighs so that her legs and her black heels pointed, like arrows, to the ceiling. Then, he brought his right hand to her gaping hole and, turning his palm upward, inserted two fingers slowly. \"Oohh, fuck!\" she whimpered. \n\nSlowly, carefully, he started moving his fingers, and they slipped smoothly in and out of her. Bending them slightly, he began to explore her vagina, until he found the bulb-shaped roughness of her G-spot a couple of inches inside the anterior wall of her slick pussy. \n\nHe began massaging that walnut-sized gland with just the tips of his fingers while his tongue simultaneously darted and danced over her pink marble, and she quickly lost control, \"Yes, yes, yes, yes! Don't... don't stop! Don't you fucking stop!\" \n\nTen seconds later, her legs started convulsing, and her hand gripped, then violently yanked and twisted him by his hair. She started chaotically kicking the air as powerful spasms rocked her frame. She squealed her passion in a voice that aimed at a whisper, but overshot its mark by many decibels, \"Ugh, ugh, ugh! Aaaaaggggghhhhh! I'm cumming! I'm cumming!\" \n\nThe reverberations rolled through her in seismic waves that radiated outward from her pussy, consuming every centimeter of her stunning body. They lasted a long time, perhaps 40 seconds, and when she her grip on that fistful of hair loosened, the face he lifted from her sex was a gaudy mess, literally dripping with her slippery secretions. \n\nShe lay there panting, seemingly exhausted, and in a world all her own. He sat up on his knees and looked down on her \u2013 her eyes closed, an expression of shock, almost pain, decorating her beautiful countenance, and a dewy mist coating her chest, neck and face. She was bathed in sticky juices from her lower stomach to her upper thighs. \n\nHe was actually a little worried about her \u2013 he'd never seen a woman experience such a ferocious climax. \"Paige, are you okay? I didn't hurt you, did I?\" \n\nIt took her several seconds, but when her eyes reopened, a smile spread slowly, like the sunrise, across her exquisite face, and she reached for him. \n\n\"Are you for real? Are you actually for real? Come here, you beautiful man, come here and kiss me! Jesus Christ, what did you do to me?\" she asked breathlessly, pulling him on top of her. \"I'm still shaking!\" \n\nHe lay upon her, propped up on his elbows so that he did not absolutely crush her, while his erection, pinned between his pubic bone and her damp stomach, throbbed as if begging for attention. She kissed him, ardently, wrapping her arms firmly around his neck, pulling him even more tightly to her, and then she must have felt it \u2013 how could she not? \n\nShe released her hold on him, so he could shift a little of his weight to his knees to afford them some space. Then, she reached down and gripped his shaft. \"Oh, what have we here? I'm sorry, sweetheart; I've neglected you, haven't I?\" \n\n\"No, I wouldn't call it neglect. You were just a little pre-occupied is all!\" he smiled. \n\n\"Scoot up here, and let me worry about you. Would you like me to take you in my mouth, baby?\" He slid forward and straddled her torso. \n\n\"If you did, I wouldn't argue!\" he smiled, and she pushed him backward. He was still on his knees, but he was leaning back supporting his weight with his hands on the mattress behind him. Seven, thick inches of engorged cock protruded out in front of him at a 45\u00b0 angle. Paige looked around and found a pillow to prop under her head. Then, he straightened up, holding his stiff erection before her, his balls wedged in the valley between her big breasts. \n\n\"Oohh, Jesus!\" he groaned, as she resumed the work of her mouth and her hands. She grasped him around the base of his shaft with one hand and wrapped her soft lips and tongue around his glans. Then, with the other hand, she reached for his balls, which she began to softly knead and caress. \n\nHe tried to remain still, but the sensations were too strong, and before he realized what he was doing, he was rocking forward and backward, thrusting himself deeper and deeper into Paige's willing throat. \n\nShe gagged three or four times, and that made him feel bad. He didn't want to be selfish, and he considered that hurting his lover in an effort to pleasure himself simply wasn't acceptable. Unexpectedly he stopped and withdrew himself from her mouth. \n\n\"What's wrong?\" she asked. \n\n\"I don't want to hurt you. Maybe, I could...\" \n\n\"It's okay. You're just a little bigger than what I'm used to.\" \n\n\"I've got another idea. Maybe... I mean, you're breasts are... really magnificent, especially in that lingerie. Would you mind, if I...?\" \n\nShe smiled. \"You can say it, I don't mind. You wanna tit-fuck me?\" She giggled. \"I'd like that! I'd like it... I'd like it if you'd tit-fuck me. Guys seem to like my tits... I want to make you cum that way! I want to make you cum hard, really hard! Just like you did to me!\" \n\nShe pulled her other huge tit out of its gold cup and tucked the cups under her breasts. That pushed them out and away from her chest and made them look even sexier. He loved it when women pulled their tits out of their lingerie, and he loved when they left their lingerie on during lovemaking. \n\nHe found the scene incredibly exciting. Her tits were amazing, big, soft, natural breasts, with dark pink areolas the size of silver dollars. Her nipples were fat and hard, and stuck out almost an inch from those big, round, pink rings. They were magnificent tits, and even before he'd touched them he knew that once he was thrusting between them, he would have little trouble cumming. That truth made him second guess himself. \n\n\"I don't know. Maybe this is a bad idea. I mean, this is our first time, and all... Are you sure this is okay?\" \n\nHe knew he was a lot older than Paige, and that the rules governing sexual relations had changed over time. It wasn't that he was some kind of prude, but the first time with a woman that he liked, he believed, was a delicate situation. He grew up thinking that how a man behaved in bed with a new love interest during their first time together was certain to play a big role in whether or not there was a second time, much less a lifetime of intimacy. In his first at bat, he always tried to play things cautiously. He was more interested in winning the long game than the first inning. \n\nApparently, Paige had a different view. \"Come on, relax. You'll enjoy this!\" She pulled the pillow out from under her head and lay back on the mattress. Then, she brought both of her hands to the sides her spectacular tits and pushed them together, making a tunnel out of her huge boobs. She smiled at him seductively. A thought seemed to come to mind, and she reached out with her left hand, and finding something on the nightstand, she handed it to him. \"Here, use this. It will feel so much nicer!\" \n\nHe looked down at the small, plastic bottle in his hand. It was a bottle of lube. He chuckled to himself. Paige, it seemed, had come prepared for just about everything. \n\nHe squirted a little into his hand, stroked himself a couple of times, spreading it around especially over his engorged head. Then, he moved back just a few inches, so that he was aligned with the bottom of his target and pushed his length into the fleshy cavern between Paige's perfect tits. \"Oohh, fuck! That feels good!\" he groaned. After only a single stroke, he was already so sensitive that he knew he wouldn't last very long. He stopped again. \n\n\"Of course, it feels good! You need to cum, don't you? I'll bet it's been a long time, hasn't it, baby?\" \n\n\"It has, but I don't want to cum too soon. I wanted to make love to you. That's sort of a thing with me. I think I should cum when we're making love. I guess that's sort of old-fashioned, huh?\" \n\n\"No, it's not old-fashioned, but look, sweetheart, you need this. Especially tonight! And we've got the entire evening! I don't have to be back in the office until late tomorrow afternoon, and you said you don't work until tomorrow night. Don't hold back. I want you cum for me. Then, we'll take our time. After you've cum, we'll make slow, passionate love, okay?\" \n\nStill, he didn't move. He knew once he started, he wouldn't be able to stop. \"But, I'm afraid... I don't want to...\" He was too embarrassed to say the words, but he sensed that Paige knew exactly what he was thinking, knew that despite his reservations, he really would enjoy blowing his load on her. \n\n\"Sweetheart, look, I want you to! I want you to cum hard for me... on me... You can cum on my face... I like that! And do you know what else? I like to talk to men when I'm in bed with them. I like to talk dirty! You like it when I talk to you like this, don't you? This turns you on, doesn't it?\" \n\nShe didn't wait for an answer. \"So, I want you to start moving, and I'm gonna say dirty, sexy things to you. I'm going to get you so hot that you're gonna blow the biggest, fattest load you've ever blown... all over my pretty face, okay?\" \n\nHe'd been with liberated women before, but never with one that was so blunt, much less so kind and sensitive, so selfless and generous. \"Okay.\" He smiled and started again, moving slowly, tentatively. The sensation was really intense, and the scene before him had already excited him beyond belief. Then, Paige turned things up a notch. \n\n\"Come on, baby, fuck my big boobs hard with your fat cock! Thrust between these big, luscious tits! Oh, that feels good, doesn't it? Oh it's so tight, and your head, it's so big! You can see it as you fuck me, can't you? Oh, it looks so thick and engorged! Every time you thrust between my tits, I can see the big, fat ridge around you cockhead poking out of the top of my big, full breasts!\" \n\nAs she continued pushing those unbelievable tits together, she somehow managed to begin caressing her long, pink nipples between her thumbs and index fingers. \"Here, let me tweak my nipples, while you fuck me! God, you sink right into the valley between my tits. Oh, god, look at the veins on your cock! I've never seen a cock so hard!\" \n\nHe started moaning uncontrollably, \"Oh, oh, oh! Oh, fuck! Oh, Jesus! Oh, my god!\" Even though he tried to go slowly, he felt his rhythm growing a little faster with each plunge. \n\nAs he quickened his assault, Paige kept up her dirty encouragement, \"Ooohhh! Look at it now! Ooohhh, you're starting to leak! Ooohhh, god! I can see your pre-cum! Ooohhh, baby, you're gonna shoot so much! I can't wait to taste it!\" \n\nHe was delivering his thrusts faster and faster, and he was groaning non-stop now in one long, uninterrupted moan, \"Oooooooooooooooooooooohhhhhhhhhhhhhhhhhhhhhh!\" Paige continued cheerleading, \"I want it on my face! Come on, baby, give me your hot, creamy load!\" \n\nWithin seconds, he felt himself slid over the precipice. An intense surge began building deep inside his balls. He continued thrusting between Paige's soft, supple tit flesh. \n\nHe hadn't really thought much about it, but his na\u00efve assumption was that when he ejaculated, his spurts would shoot harmlessly in the valley between her breasts and, at worst, some of it might hit her neck. Despite what she'd invited him to do, during their first time together, he couldn't see defiling and debasing her. He didn't want to do that, certainly not to a woman with whom he was falling in love. \n\nBut he made the mistake of announcing his climax, \"Oh, god, here it comes! Fuck, I'm cumming!\" And when he did, Paige released her hold on her magnificent tits, and reaching for his shaft, grasped him around the base with one hand, while her other hand found the underside of his pulsing scrotum. Before he knew what had happened, she'd raised the angle of his missile launcher to 45\u00b0. \n\n\"Uuuuuggggghhhhh!\" he grunted as his first powerful rope exploded, striking her just above right eyebrow, leaving a trail from there across the bridge of her nose to just under her left eye. \"Uuuuuggggghhhhh! Uuuuuggggghhhhh! Uuuuuggggghhhhh!\" She leaned forward to direct the next two spurts of thick, white spunk over her right cheek and chin, while the third one shot directly into her open mouth. \n\nShe must have thought his cumshot was expended after those four major explosions, because she stuck out her tongue as if to begin licking the sensitive underside of his glans. But then, the next three ejaculations surprised them both with his most voluminous spurts. \"Fuck! Uuuuuggggghhhhh! Fuck!\" Three eruptions exploded in rapid succession and struck the flat of her tongue with the audible, \"splat\" pause, \"splat\" pause, \"splat\" of squirting jism. From there his seed dripped down crudely onto her neck and tits in three gargantuan rivers that coated her gold necklace in a gooey glaze. \n\nAnd still he wasn't done! Paige continued kneading his aching balls with one hand, milking a dozen more throbbing spasms from his erection, while she stroked his length with her other hand. \n\nNow, his milky cum wasn't shooting so much as it was dripping and dribbling, leaking like a faucet that needed repair. The majority of it coated her chin and neck. When she'd finally coaxed the last few drops from him, she was sporting a thick, glossy, white beard from her chin, down her neck, to the tops of her tits! \n\nShe let go, and his softening shaft fell into the valley between her big mounds. It was still so sensitive that he was afraid to touch it. She stared up at him, and extending her tongue as far as she could, she ran it in a wide circle around her lips to sweep as much sperm as she could into her mouth. \n\nHer lips closed, and she swallowed. \"Mmmm! Delicious!\" she said mischievously, and looking down squealed with astonishment, \"Holy shit, baby! I've never seen so much! And you think you're too old! I don't know any young guys that can match this kind of output!\" \n\nHe looked down at her. His face showed both shame and fear. \"Jesus, Paige! I'm sorry! I don't think I should have done that. Not our first time together!\" \n\n\"Why?\" \n\n\"Because I like you! 'Cause I want to keep doing this! Because I'm falling for you!\" \n\nShe smiled sweetly, despite the lurid mess upon her face, and asked matter-of-factly, \"You've never cum on a woman's face before?\" \n\nHe was still embarrassed, but his answer was honest, \"No, I have, but usually later, after I've been with her a couple times. There are exceptions, but I don't want to talk about that!\" \n\nShe tilted her head in curiosity, but let the matter go. \"Don't worry! You didn't scare me off! Quite the opposite! I'm not gonna let you get away! Listen, if you're so intent upon chivalry, there's a towel on the night stand! Would you mind handing it to me?\" She smiled, and he climbed off her and retrieved the towel. She used it to whip his cum from her face, neck, and breasts. \n\nWhen she was done, he took it from her and tossed it cavalierly to the floor and lay down on his side next to her. He brought her face to his for a long, sensual kiss. They touched each other delicately, tenderly, just as they had done earlier. \n\nWhen their lips parted, he whispered a question, \"So... I told you what I thought when I first met you. How about you? What did you think of me when we met?\" \n\nShe smiled. He could tell she wanted to talk, that their unabashed sexuality had popped the cork on a bottle whose contents needed emptying. She spoke in a quiet, breathless voice, their faces only an inch or so apart. \n\n\"There was something about you that I was immediately attracted to, you know, like the clich\u00e9, at first sight. In the beginning, I couldn't put my finger on it. It was something so subtle and so understated, even elusive, that I didn't understand it at first. I don't think I would ever have understood it just from seeing you and talking to you. But your story! Wow! That story said it all! It confirmed to me what it was that so attracted me to you.\" \n\n\"What was it?\" The question was asked quietly and lovingly in a voice almost as tiny and soft as hers. He himself didn't know the answer, and he wanted to know. \n\n\"It was a gift \u2013 a gift of love and honor and respect. And it was a special gift, because it was uniquely masculine and reserved only for women \u2013 not any particular woman, certainly not just for me, but for all women.\" \n\nHe was fascinated, and he listened intently. \"And in it, there was a promise, and that promise said that should a woman offer herself to you, you would forever shower her with your love. And that would not end. Not as long as she loved you in return. And if she continued to love you, your love for her would be infinite, endless. And so, love, offered freely and reciprocally, would make both of you whole and complete \u2013 sort of the classic yin yang.\" \n\nHe kissed her again. It was brief, and it wasn't a kiss of passion or desire. It was in no way sexual. It was a kiss of understanding. \"Paige!\" he said abruptly, shaking his head. He said it with sincere surprise and amazement. \n\n\"I doubt that I've ever articulated what you're saying. I don't think I've ever said it in so many words, either written or spoken, not to anyone else, not even my wife. But I've felt it \u2013 I've definitely felt precisely what you're saying! And I've always felt it! As long as I can remember!\" \n\n\"As long as I have been attracted to women, I've felt that way, and, you're right, I've felt that way about women in general. I always figured \u2013 if I thought about women in that way \u2013 I might be lucky enough to find one who might feel the same way about me. All I ever really wanted was one woman who was satisfied with my love.\" \n\nShe smiled, and then in her most serious, most lawyerly voice, she slowly finished her explanation. \"Chris, in civil litigation, it's the job of a plaintiff's attorney to try to help his client to be 'made whole.' That's the legal language we use; it is quite literally the legal doctrine upon which all civil lawsuits are based.\" \n\n\"If someone has defrauded you, or failed to repay you, or has cheated you in any way, you sue on the assumption that a court judgement or settlement will allow you to regain whatever was wrongfully taken from you so that you return to the conditions in which you existed before the defendant's actions. That's what it means to be 'made whole.''' \n\nShe held his face again in her soft, tender hands, and in the dimness, she stared with a ferocious intensity into the deep, dark blue of his eyes. \"And that's the way it should be between a man and a woman, or, for that matter, any two people who love each other. Whatever one lacks on his or her own, his lover should supply that to him or her, and vice versa. Love is exactly like civil litigation \u2013 the goal is to be 'made whole.'\" ",
        "\"And so when I read your story, I figured out that your gift was the thing that could make me whole, and that's when I knew that you were worth it, that you were worth the trouble and the effort, and, if it came down to it, the time, as well.\" \n\n\"It helps that you're attractive, and that you're talented, yet still humble; that you have a wonderful sense of humor; that you're kind and generous, and all that; but my needs, like yours, are really simple. I came to realize that all you wanted was to truly love a woman, and that's all I want from a man. I don't need anything else.\" \n\nHe reached for her, and she for him, and for the next half hour, they did not speak. Instead, they touched and kissed and held each other lovingly, as if they were young and innocent, and everything that just happened between them had dissolved into infinite nothingness in the dark room. \n\nAnd then they made love, slowly, languidly, until well into the wee hours of the morning. First, he lay behind her, spooning her, and he made her cum again. Then, he took her from behind, and she came that way, as well. She rode him for a long, long time, and she came twice, grinding herself on his thickness, leaning as far forward as she could so she could kiss him while she rubbed her clit back and forth against his pubic bone. Finally, he took her in the missionary position and, just as she came for the sixth time that night, he exploded deep inside her. They fell asleep in each other's arms. \n\nWhen they awoke late that morning, they got cleaned up, and she checked out of the hotel suite. They drove back to his home and called Tom Knox. It was good timing, Tom said \u2013 he'd just gotten off the phone with Alexander. He told Alexander that based upon the agreement that had been faxed to Intellectual Property Law Group, his client was prepared to accept Solon &amp; Blake's offer. \n\nTom and Alexander also discussed a five-year, structured settlement, and Alexander was amenable to that. He would receive monthly payments and continue to collect interest on the portion of the settlement that remained unpaid, right through to the last payment. As soon as he and Tom signed the settlement papers, he would receive the first payment. A payment of $100,000 would be made even before the final dollar amount of the settlement was determined. \n\nAlexander also promised that a publisher would be in contact with him very soon to discuss the republication of The Awful Grace of God. Alexander said he wanted to get his book on the shelves as soon as possible. Just before he hung up, Tom told him excitedly, \"Chris, by Tuesday or Wednesday of next week, you're going to be a rich man! Congratulations!\" \n\nWhen they got off the phone, Paige and he held each other. Both of them cried, and the tears that fell upon each other's shoulders were both tears of joy and sadness. Paige needed to leave soon, and she was having a hard time saying goodbye. \n\n\"Chris, why don't you come with me?\" she asked expectantly. \"You can stay at my place.\" \n\n\"I'd like to, but I can't\", he answered. \n\n\"Why not? You'll kill two birds with one stone. Get the agreement signed, so the money starts flowing, and we can be together. Come on, there's no reason not to.\" \n\n\"Yes, there is. You forget; I have a job. I have to work tonight.\" \n\nThat's when she really started crying, \"Chris, you're going to be a millionaire\", she sobbed. \"Why do you need a job as a bartender?\" \n\n\"I don't need it, and I'll probably eventually quit, but tonight they need me, and I'm not quitting until I give them notice. It just wouldn't be right. I won't do that to them. Besides, Charley is the one who would suffer, and I'm not gonna fuck Charley over. Remember, if it wasn't for him, I'd never have met you!\" \n\nShe was still sobbing, but she smiled through her tears, \"I should have known you'd say that! That's the kind of person you are.\" \n\n\"Look, Paige. I've already decided; I'm not even close to through with you!\" He kissed her again, hard, decisively. \"And as soon as I get everything figured out, we can be together all the time. But until then, we're only three hours apart. I've got to work tonight, but I'm off the rest of the weekend. Maybe tomorrow you should drive back down and spend it with me? What do you think? You've been here for two days, and you've never even talked to Charley! I think he'd really like to see you! Besides, we've got some big news to share with him!\" \n\nShe smiled and nodded her head, \"That you're gonna be a rich, famous author?\" \n\n\"Fuck no! Charley could care less about that! I think he'd be far more interested in the new guy his cousin is 'seeing'! I've heard he's kind of an old fart, but...!\" he smiled. \n\n\"Yeah, but at least he shows up for work!\" She kissed him. Her lips tasted like salt. \n\nEpilogue \n\nPaige was right, he thought. He had been \"made whole.\" But it wasn't $3.27 million, nor was it the publication of The Awful Grace of God, its follow-up, or even the handful of awards he'd received that accounted for his newfound wholeness. \n\nIt was true that in the four months since its republication, the book had already surpassed Caroline's sales numbers in roughly the same period of time. Part of the reason for that was the press generated by the news story that Solon &amp; Blake had first tried to suppress, but had later embraced \u2013 the story of a popular author who had stolen the work of an unknown and unpublished nobody. \n\nAfter the news story gained some traction, and Solon &amp; Blake realized that they could make more money marketing the plagiarism story than covering it up, people became really interested in reading his \"original\" novel. Its \"untamed explicitness\" \u2013 as The Los Angeles Times described it \u2013 also helped sell it. \n\nAnd with the attention of the press, The Awful Grace of God had managed to receive several awards. Of the awards that he'd won, most were from small publications that didn't have tremendous influence and so his acclaim should rightly have been taken with something of a grain of salt, but he had been nominated for the PEN Hemingway Award, and though he didn't win it, that was a huge honor. \n\nAll of the attention was nice, and so was the decision to publish his volume of short stories \u2013 The Never Series and Other Tragedies. That title story was certainly ironic, since he had actually used the word \"never\" countless times in that first month after he'd discovered Caroline's treachery. \n\nHe had not only written off any possibility that love and romance would ever find a place in his life again, but he had promised himself he would never write another happy ending. Happy endings, he kept reminding himself, were for chumps \u2013 and whether yours came via a sleazy masseuse or the unrealistic and fantastical resolution of a story mattered naught. \n\nBut if happy endings were so unrealistic and fantastical, how could anyone explain his fate? Hadn't what happened to him proven once and for all that sometimes things turn out the way that people really want them to and not the other way around? Hadn't he learned that blanket assessments of reality were almost certainly not real at all? \n\nAnd that was precisely it. The most important thing he'd learned \u2013 and Paige was right about that as well: both of them had learned so much \u2013 was that it was as absurd to say \"never again\" as it was to say \"ever again.\" The greatest irony of all was that the title The Never Series was clearly a sardonic riff on Caroline Cole's The Ever Series. \n\nHe almost regretted that, because he was done being angry and disappointed with Caroline. In fact, he'd come to acknowledge that if it wasn't for Caroline and Tanya, a whole lot of really wonderful things wouldn't have happened to him \u2013 he wouldn't have been published; he wouldn't have gained so much attention for having been the victim of a blatant and reprehensible crime; he wouldn't have won the settlement with Solon &amp; Blake. And most importantly, he wouldn't have met Paige! \n\nAnd, of course, that was what had really proven Paige's prescience and wisdom. There was no question that she was the reason he'd been \"made whole\", and all the money and awards in the world seemed pathetically paltry by comparison. \n\nIn the course of a single year, he'd gone from being a lonely divorcee who fancied himself a serious writer, even though he was penniless, unread, and unpublished to being \"a New York Times Bestselling author.\" More fucking irony! \n\nHe'd paid off the mortgage on his house in AG more than a year early with his very first settlement payment, and he'd turned around and sold that house for a cool $800,000. He'd taken that money and started two trust funds, one for each of his daughters. \n\nHe'd quit his job at Fig Hill, a couple months after signing the settlement papers and moved in with Paige in her home in Morgan Hill, where he had his own study where he could read and write to his heart's content. When he wasn't writing, and she wasn't working, they explored the hiking trails in the region, finding new and beautiful places to fall in love. Few people he'd ever known led as satisfying a life as he was leading. \n\nAnd other people, people he'd known for a long time, acknowledged that satisfaction. Friends he hadn't seen or talked to for months and even years came to visit, overjoyed in his born-again success. Even Susan called to say that she was happy for him, though she tactlessly admitted that she wished she'd waited to get remarried until after he'd come into all that money! \n\nAnd his daughters \u2013 who he'd worried out loud might find his romance with Paige to be nothing more than a desperate attempt to address a transparently obvious mid-life crisis \u2013 absolutely loved her, especially his oldest, Maddie. He found that remarkable, considering that Maddie was only a handful of years younger than Paige. And after Maddie passed the bar \u2013 guess who helped her find an associate position at Intellectual Property Law Group? Both daughters also loved his books, though they both said, it was really hard to read the sex scenes! \n\nSo, after Paige had won their love, approval, and support, he'd proposed to her, and even though she never actually said yes \u2013 she was crying too hard through her smiles to do anything other than nod like a crazed bobblehead, dripping tears of joy on the ring he'd slipped on her slender finger \u2013 they'd already set the date, and she'd found her dress. \n\nNo, he'd been made whole, alright, and the court didn't have a damn thing to do with it."
    ],
    "authorname": "stfloyd56",
    "tags": [
        "beautiful busty lawyer",
        "civil litigation",
        "preliminary injunction",
        "settlement",
        "may-december romance",
        "fellatio",
        "cunnilingus",
        "tit-fuck",
        "facial cumshot",
        "happy ending"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-never-series-pt-04"
}