{
    "title": "Assassins MC Pt. 07",
    "pages": [
        "This is a work of fiction. Unless otherwise showed, all the names, characters, businesses, places, events, and incidents in this story are the product of the author's imagination or used fictitiously. Any resemblance to actual persons, living or dead, or actual events is purely coincidental.\n\nPart 7: Tattoos and Shopping are Fun\n\nI attended classes and had a test in chemistry that I forgot to study for. It's not like I've had a lot of time to study. It occurred to me I had my chemistry tutor, and I would use her for some help; I just hope I didn't fail it. I ran into Julie at lunch, and when she saw me coming, she jumped up and give me a big hug and kiss. This drew some eyes our way, but considering it was High School and you see guys and girls kissing all the time, the attention was short-lived. I let it go. I didn't see the need to contain her excitement for me, and I loved it. It was ok if it didn't draw too much attention.\n\n\"Rich, I'm glad to see you.\" Julie said as she sat down. \"I missed you so much. All I could think about was seeing you at lunch. I could barely concentrate on my classes. Did you miss me? What did you think about this morning?\"\n\nI had to stop her there. I explained to her in a low voice that we could not discuss any business in public. She looked embarrassed and apologized immediately. I told her it was ok.\n\n\"I missed you too, Julie.\" I replied, \"I'm also distracted, so much so that I forgot to study for a test. I have been thinking about you a lot. I had a great time last night, and you were my highlight.\"\n\nI was being vague in case anyone overhead us, but Julie knew what I was saying. She smiled big and said, \"You damn right, mister! You're lucky to have me. Just make sure you keep me. You never know when someone may come along and want a piece!\"\n\n\"Julie, you don't have to worry about that!\" I answered playfully. \"I'm holding on to you with everything that I have!\"\n\nI had not seen this side of her before. She was always nice, and we had a good time, but this Julie was confident and playful; I loved it. I loved to see her cheerful, and it was like I lifted an enormous weight from her. It's funny to think that being put under the control of another person and owned by a motorcycle club would elicit this response. I knew she loved me, and part of her happiness was surely that, but I don't think it accounted for all of it. There was something else there.\n\nThe rest of the day seemed longer than the 2 hours it took. When I finally heard the bell for dismissal, I hurried out to the car where Julie was already standing. We kissed, climbed in the car, and drove over to pick up her mother.\n\n\"Julie, you were downright ecstatic at lunch.\" I mentioned. \"I've never seen you that confident except last night. I guess you're ok with all the changes.\"\n\n\"Oh my gosh Rich, am I ever.\" She replied. \"You helped us get from under that asshole, so I never have to see him again. You don't know what damage he caused to us. Mom was the one getting abused from the beginning, but I knew what was happening. I was almost 15 when it started. I didn't catch on at first, thinking Mom just had a boyfriend. Then I started noticing him over a lot, then with some of his friends. They never purposely did anything in front of me, but they would make comments like, \"I can't wait until you're 18,\" and \"You're going to make a beautiful woman.\" You know, things like that. They would always stare at me when I was in the room. It just made me feel uncomfortable. That's when I started wearing baggy clothes and becoming withdrawn. I didn't want to be around any boys. Then the girls stopped hanging out with me because I was dressing like that. I just withdrew and spent years by myself.\"\n\nJulie continued, \"After a while, I noticed my mother dress differently, and she was gone a lot more. She started wearing slutty clothes, and when she came home, she would be disheveled and sometimes crying. She would never tell me what happened, but I knew something was wrong. One time I spied on them when they were in my Mom's room and saw them having sex with her. She had a vacant look in her eyes, like she was a million miles away. They caught me and made me watch. My mother was crying, begging them to get me out, but they just laughed. After that they didn't hide it, often abusing my mother right out in the open. I would always run to my room, but sometimes they made me stay. They never touched me, but I still felt dirty.\"\n\n\"My mother became a shell of the woman she was.\" Julie explained, looking sad, \"Her confidence was gone, her self-esteem shattered, and she was despondent all the time. She still did her best to take care of me, making sure I had everything I needed, but I didn't have the one thing I wanted: my Mom. I felt I was all alone. Nicole was there, but my mother wasn't. She was just going through the motions. She just had little left to give me.\"\n\n\"Then I turned 18 and my life became a living hell.\" Julie was becoming angry as she continued. \"Bob, her boss; I hate that name! Bob, he came over and they threw me an 18<sup>th</sup> birthday party. They had cake and presents, like, what the hell. They made Mom serve us in a French maid's outfit with nothing underneath, and it showed everything she had. They made me open my presents, which comprised many sex toys and restraints. I didn't know what half the stuff was. Then Bob announced he was going to unwrap his present; me.\"\n\nJulie started straight ahead with a look of disgust as she continued. \"The other men grabbed me and held me up, then Bob came over and undressed me. When I was naked, he put cuffs on me and secured my hands behind my back. He put a gag in my mouth and pushed me down on the floor. During all of this, Mom was forced to suck each man's dick while they watched me get prepared. Once I was on the floor, Bob undressed and climbed on top of me. He put some lubricant on his dick and just pushed right inside me. I was a virgin, and it hurt like hell. I started screaming behind the gag and crying as he fucked me. I could hear my mother crying and screaming also, and they made her watch. When Bob finished with me, each man came over and fucked me. It went on like that for the rest of the night.\"\n\nJulie sighed, paused for a few seconds, then continued. \"After that, I was included in the fun and games when they would come over. They didn't make me wear the slutty clothes like my Mom, they said they were too expensive, and I wasn't sexy enough for anything like that. They treated me like trash, and I felt like trash. My mother would still go out, thank goodness I never had to, but afterward, they would come over and fuck me. Bob made me suck him off when I came home from school, often taking me back and fucking me in front of my mother, then making her clean his dick and lick me clean as well.\"\n\n\"They would make us 69 each other for their entertainment, whipping whoever was on top until we pretend to climax.\" Julie explained, \"They all applauded, and the one who climaxed first would get the honor of sucking their dicks. The loser would get tied up and spanked, then hogtied and left on the floor while the winner got fucked by all the men. The loser, still tied up, would have to clean their cocks. When the men recovered, they would all fuck the loser in the ass as punishment for losing. Mom 'lost' all the time to protect me from as much as she could. I wanted to kill all of them. If I ever see them again, I probably will!\"\n\nJulie looked over at me and continued, \"When we moved, the abuse continued, but that's when I met you. You were the one bright spot in my life. When I was with you, I could forget all the shit, if even for just a little while. I looked forward to seeing you each day and would daydream that you would ride in and rescue us from our nightmare. And you know what, you did! I still can't believe it.\"\n\nJulie was smiling, and the light came back into her eyes. \"I wasn't sure what to think at first when you three walked through the door and told us you owned us. I didn't know if you would be the same person who I was dating, but you've become so much more. You didn't see my mother last night after we left. She was positively beaming. She was so happy and smiling so big that I thought her face was going to break. She kept telling me everything would be ok. She was gushing over you, saying how she was happy that I had found you. She didn't want to make it weird between us, but she admitted to having a crush on you, too. But the thing that sold me was I had my Mom back. We went home, put on some music, and sang and danced for a short while. We hadn't done that since I was 14, before all the abuse started. Afterward, we both broke down crying, but it was a good cry. I think all the years of shit were breaking loose and falling off us. We have you to thank for that, and I will never forget.\"\n\nI was feeling a little embarrassed. Was I responsible for all of that? Sure, I saved them from that asshole Bob, but what she's telling me eclipsed that. They were looking at me as someone bigger than I was. I wasn't a hero; I was just an 18 years old 'kid' that barely knew his ass from a hole in the ground. I was sure I would screw up sometimes, disappoint them, and when it happened, would their view of me be shattered?\n\n\"Julie, every time you tell me more of your and Mom's abuse it gets worse.\" I replied, shaking my head, trying to grasp the amount of abuse the two women received. \"Man, I am so, so sorry you were subjected to that. I just want you to know I love you. You must understand, though, I'm just a normal person. I'm trying to do my best as I figure out how I'm supposed to act, what I'm supposed to do. It may not look like it, but I have my insecurities and doubts. I don't want to let any of you down. That would kill me if I did, yet I'm afraid that I will fail eventually in something. What will you think of me then?\"\n\n\"Rich, I'm not worried about you failing us,\" Julie answered. \"That it bothers you and causes you to worry tells me we are in excellent hands. You don't have to go through this alone. You have me for one, but I'm sure Beth and my mom will stand right behind you. And as you said, you would protect us with your life. I will do the same. I will let no one mess with you, I promise you that. I am subservient to you, sure, and I'll do what you tell me, but know that I'm here to take care of you as well. You are my responsibility just as much as I am yours. This is a two-way street.\"\n\nI didn't think of it that way. I was only considering my responsibility for protecting and caring for the women. It was also in their interest to care for and protect me. I was standing between them and who knows what or who if something happened to me. I know what Beth was subject to when my father died, being used by Benjamin and Roger. I was determined not to let that happen to them. I'm sure they would take care of me to prevent that as well. And I hoped they would do it because they cared for me.\n\n\"Thank you, Julie. That makes me feel better.\" I admitted, \"I never looked at it like that. I was just looking at it like I had to take care of you, not the other way around. I said last night I saw us as one extensive family. We are a family, aren't we?\"\n\n\"Yes Rich, we are.\" Julie answered, smiling when she did. \"It's only been one day, but I feel like a family when all of us are together.\"\n\nWe drove the rest of the way to pick up Nicole, Julie, holding my hand while we drove. When we arrived at the building, Nicole was sitting in the lobby, waiting for us. She handed me two bags with the cash. Susan, during the day, had changed the cash into small bills, none larger than a $50. She said it would make it easier to spend. After a quick trip to drop the cash, all except $1000, at home, we drove to the tattoo parlor.\n\nWhen we stepped through the door, Reuben greeted us. He was looking like he did before, a quintessential biker. The women didn't know how to act. They stepped back behind me a bit, as if using me as a shield. I kind of liked that.\n\n\"Rich, it's good to see you. How's that ink doing? You've been putting on the ointment I gave you, right? So, these must be the new ladies. Nice to meet you. I'm Reuben, and I'll be your artist this afternoon. Follow me, please.\"\n\nWe followed Reuben back to the chairs. I thought he was going to stop, but he kept going. He walked past a divider to another door. That door had a keypad next to it. He placed a security card on it, it beeped, and he typed in a code. The door unlatched. He opened, and we stepped into what appeared to be a hospital exam room with 2 chairs that reclined back. Each chair had a pair of stirrups, and when we were all inside Reuben said, \"ok ladies, please remove your clothes and sit down in the chairs.\"\n\nJulie and Nicole both looked at each other, then at me. I gave them a look to reassure them and let them know I wanted them to listen to Reuben, and they undressed. Reuben told them to put their clothes and belongings in the cubbies next to the door along the wall, and when they were each naked, they carefully sat down. The leather must have been cold, as each woman yelped and jumped a bit. Reuben announced to no one in particular as he smiled. \"I need to remember to warm those up or get some heated chairs. I get that reaction from everyone that sits down.\"\n\nFrom the far side of the room, from behind a divider, stepped a woman. She was wearing a lab coat that extended down to her knees, and under that, she wore a pair of jeans and a t-shirt. She must have been in her 60s, white hair that fell to her shoulders, clipped back so it stayed out of her face. She was attractive for her age.\n\n\"Hush Reuben, you know you like it when young women jump when they sit down,\" she said. \"You'll have to excuse my husband, ladies, he's always like that. My name is June and I'll be helping with your tattoos and chip today. It's nice to finally meet you, Rich. I was very fond of your father. We lost a great man when he died. You look an awful lot like him, handsome just like he was.\"\n\nJune explained to the ladies what would happen, and I think they relaxed when they saw there was another woman in the room. June told them where the tattoo would be placed on the inner thigh up next to their vagina. This was to ensure it wouldn't accidentally be displayed, and if other human traffickers ever picked them up, it was in a position it couldn't be missed. It would mark them as Assassin property, and if they ever found themselves in trouble, it was their get out of jail free card.\n\nShe explained the tattoos couldn't be faked because each one had a serial number in it that would only show under black light. They would check anyone who impersonated an Assassin sister for that number, and each number was individual to each woman. They would also be chipped, with one injected above the right shoulder blade. This was to make it more difficult to remove by themselves, and that chip also carried identification. It would have the contact information for their guardian. The women said they understood, and the artists went to work.\n\nI sat there and watched while the tattoos were applied and chips inserted. Their tattoos were much smaller than mine, about the size of a 50-cent piece. It was large enough that if they had their legs opened it couldn't be missed, but otherwise it would be hidden.\n\nIt took them about two hours to finish the tattoos, quite fast for what was applied. Reuben and June must have applied many of these to get them done that fast. The chips took less than a minute, and when they were done Reuben came over and explained how they worked. Some bioelectric currents that run in the body powered the chips; I didn't understand it. The company's researchers discovered how to harness this. The chips would automatically connect to any cell signal or piggyback on Bluetooth and send their locations to a proprietary app. Every guardian would have each of his women programmed into his app. The company had a central database that tracked each woman, and each guardian had access to his women. The Assassins, first falling behind in tech, were making up for lost time quickly.\n\nReuben grabbed my cell phone and broke it into pieces. What the hell, man! He explained to me that my old cell was not safe. He handed me an unbranded cell phone that had an operating system I didn't recognize. It was neither android nor apple. He explained the cell phone was only made for Assassin members, and the operating system was designed by the company and could not be hacked. Reuben programmed in Julie and Nicole's chips, then went and pulled a file from behind the divider. He returned and showed me how the app worked. It showed three dots on a map of the city, and two were located with me and showed my location, with the third across town.\n\n\"What's this other dot over here, Reuben?\" I asked, watching the screen.\n\n\"That's Beth. She looks like she's on her way home.\" He answered.\n\nI watched as the dot slowly moved along the road toward our house. I zoomed in as far as I could. It got down to individual houses, large enough that I could tell what part of the house someone was in. This was some amazing tech. I watched as the dot moved quickly down the street; the map updating when it reached the border of the screen.\n\nHe went over the other apps. There was a GPS, message app, and other assorted things. It had a calculator. Good, they set me up for math class! I checked my contacts and also included were a lot of names I didn't recognize.\n\n\"Who are these people?\" I inquired.\n\n\"They are all the other Assassin club members,\" Reuben answered, pointing at the screen. \"I'm in there, right there.\"\n\n\"You now have their numbers, and they have yours,\" Reuben explained. \"If you see a name come up with a superimposed A, that's a club member. You will want to answer that. This is the only way we communicate. The signal is constantly being scrambled, not allowing anyone to intercept it. You can talk freely over the phone and be assured it's secure.\"\n\nHe picked up his phone, called me, and sure enough, his name popped up on the screen with a large red A in the background. Pretty cool.\n\n\"If a scam call comes in, or a robot caller, just hit this button.\" Reuben pointed at the screen as he explained. \"That will send that caller's information back to the company and they will send out an attack that will scramble their phone lines. You will shut down an entire call center with that button and wipe their computers. Please use it. I hate those calls. We do that so no one has a record of these numbers.\"\n\nI thanked him. By this time, the ladies were dressed and waiting for me to finish. June told the ladies goodbye and gave them instructions to care for their tattoo. Reuben walked us to the front door. I thanked him again, told him I would see him in a few days, and we left. We drove off to go pick up Beth and do some shopping.\n\nI called ahead and had her meet us out front. I wanted to get this evening started. We first drove to the mall, and our first stop was the lingerie store. I wanted to make sure that Julie had some good panties and bras and told Beth and Nicole that if they needed anything, to pick some out. I would learn in the future not to give that much leeway to women shopping; it would only cost me money! I was one of just a few men in there, and I'm sure I was looking out of place. While the ladies were looking around, I was trying to do the same, but no matter what I was looking at, I felt like a pervert, and it didn't help that I was only 18. I'm sure the workers and some of the other women thought I was just in there to get my jollies looking at underwear.\n\nNicole noticed my awkwardness and came over. She took me over to the dressing rooms and asked if they had a chair. The lady behind the register pulled one from the back and Nicole sat me down in it, facing the stalls. \"Now Rich, just sit there. You need to show some confidence, like you belong here. We will try on some various items and lingerie and we want your opinion. By the time we are done, all the other women here will be jealous and all the men will wish they were you. Just watch.\"",
        "I sat there, not sure where I should be looking. Thankfully, the women returned with a handful of items and entered the stalls, side by side. Occasionally, a door would open and one of them would model something. First, it was Beth. She opened the door and had on a sheer teddy. It left little to the imagination, and it looked sexy as hell. She did a little twirl and awaited my approval. I gave a thumbs up and she closed the door. Next was Julie. She had on a matching pair of bra and panties. These were pink, with the bra pushing her breasts together and her panties barely covering her vagina. When she turned around, I couldn't tell she was wearing anything at all except for a thin waistband. I also approved of that. She jumped up and down a few times and clapped, then closed the door. Next was Nicole. She was wearing a red corset that had openings for her breasts. It came to just above her vagina and cinched her waist, exaggerating her already hourglass figure. I think my tongue was hanging out. All I could do was shake my head up and down. She laughed, blew me a kiss, then closed the door.\n\nThis show went on, with each woman trying on multiple outfits by the time we were done. The other women in the store either looked appalled or couldn't stop staring at me, trying to figure out who I was. Some men had gathered around behind me, also enjoying the show. It didn't seem to bother the ladies much, and they enjoyed the attention. When they finished, they all stepped out, grabbed me by the arms, and escorted me to the cashier. The men all had their eyes on the ladies, and the other women in the store had their eyes on me. I paid for our purchases and we left. On the way out, with a lady on both arms and Beth in back, every man smiled at me, and a few of the women did too. Nicole was right!\n\nWe next went to the leather store. I had each try on corsets. I wanted to capture the look I saw on Susan and Penny when I was over at their place the other day, and each woman bought one. I also saw some high heel boots on display that were 3 inches in height and came up to their thighs. I laced them from the toe to the top. I had the ladies try them on and they all looked hot wearing them. I bought each a pair. In the back of the store, I spotted leather collars and bought 3. I wasn't sure how they would react to the collars, but no one complained. We paid for our purchases and headed out the door.\n\nI next took the ladies to the clothing store. The same as the lingerie store, I told them to pick out a few outfits that both looked sexy and professional at the same time. I told Julie to pick out 5. Beth and Nicole each owned a few outfits, but Julie owned none. They sat me down outside the changing stalls and a repeat took place, just this time with less skin. After trying some on, switching out a few I didn't like, we finally finished. We paid and out the door we went. I must have spent about $800, not bad considering, and I caught some sales. That left some money for dinner.\n\nI asked the ladies where they wanted to eat, and they all said the Dessert Emporium. It wasn't anything fancy, but I found out they were all fans of desserts, so off we went. We took the purchases out to the car and returned to the mall where the restaurant was located. We had to wait for about 15 minutes for a table. As we stood there, I felt like the king of the world, escorted by three beautiful women. I'm sure people saw us as a boy out with his girlfriend and their mothers, and I didn't mind. Once we were seated, we ordered our drinks, put in our food orders, and the ladies continued talking.\n\nNicole spoke up. \"Well, Beth, that was interesting today. We went to visit Reuben. Did you have to go through that?\"\n\n\"Not right away,\" Beth answered. \"All that stuff came after I was already in. I had to get everything done eventually, but that was years later.\"\n\nThey were talking in vague terms. Each of us understood, but no one else that overheard us would.\n\nBeth asked, \"Nicole, how did indoctrination go?\"\n\n\"It was long and boring.\" Nicole responded. \"I took tests all day. There are some things I'll discuss with Rich later, but I am all tested out. I will return tomorrow for more, but I think I'll get into some classroom time. That's what Susan was saying.\"\n\n\"That's good,\" Beth replied, then turned to Julie. \"Julie, when do you start yours?\"\n\n\"I was told I needed to come by tomorrow after school.\" Julie answered. \"It should take me about 2 hours each day, but I'll be there all day on Saturday. That's going to suck!\"\n\nI was just listening to the ladies. This was becoming more normal for them. Julie was talking about it like she had to attend extra classes for school. Neither woman showed any worry or concern. I hoped they didn't run into anything that would cause them to doubt their decision. Shortly afterward, our food came. We all ate, including dessert, and when we were finished, I paid the bill, and we drove to my house.\n\nWhen we walked in, I instructed the ladies to put on their corsets, boots, and collars. They went back to the master bedroom and changed. When they walked out, my eyes almost popped out of my skull. All three women were in identical corsets. They came up to just below their breasts, but it was high enough to push them up. The bottoms came to their waists, and their boots came to mid-thigh. This gave the vision of their bodies covered in black leather, except their breasts and about 12 inches from the bottom of the corset to the top of the boots, perfectly framing their vaginas and drawing all attention right to the bare skin. Each lady wore a black leather collar, about two inches in width. It was small enough to not cause discomfort, but wide enough to make them keep their heads straighter. Each woman had her hair teased out a bit, and they looked like three tigers that were intent on devouring me. I didn't know whether to be turned on or scared. I think a little of both.\n\nThey all walked in front of me, kneeled, and placed their hands on their heads. They looked up at me, waiting for me to say something. \"Damn! That has got to be the sexiest sight I have ever seen in one room. All three of you are gorgeous. This will be your wardrobe at home. You will only wear this unless I tell you otherwise. Tell me what you think.\"\n\nBeth was the first to speak up. \"I think you just turned us into walking sex. I have never felt so hot and so exposed in my life. These outfits look sexy, especially on Julie and Nicole; I can barely keep my eyes off them. I love the boots. I've worn nothing like these in my life. They make me feel sexy, yet powerful at the same time.\"\n\n\"I know what you mean, and don't put yourself down, Beth.\" Nicole added, \"you are also looking hot in that. I also like the boots. They just give me confidence, but the collar makes me feel submissive. Wearing this I'm just feeling turned on.\"\n\nJulie chimed in, \"I wasn't sure what I would feel about this, but I love it. I love all of it. I enjoy looking sexy for you, Rich, and I love it when you look at me like that. I like the feel of the collar. It reminds me you're in control, and to be honest, I like that feeling. I've spent way too many years lost, like I had no one. I'm sorry, Mom, I know you did everything you could, but I just felt so alone. Rich, you make me feel so wanted. That you are telling me what to do makes me feel safe, like I can give everything to you and remove all the worries from myself, knowing you're looking out for me, watching me all the time. To me, this feels like I'm wrapped, love.\"\n\n\"I'm sorry, baby.\" Nicole told Julie, suddenly looking sad, \"I also felt alone. I was adrift in a sea of misery for so long. I had you, but you were just a kid. I spent years feeling no one would ever love me again, no one would protect me. I had given up hope, then we were saved. I know it's only been a day, and I know we will have some issues to overcome, but I am so happy right now. Wearing this I should feel ashamed, but I'm not. I just feel loved, like Julie.\"\n\n\"I had a long talk with Rich this morning and told him about my past,\" Beth added. \"Since Brian died, I too felt alone. I had Rich, but it wasn't the same. I'm not equating my troubles with what you two went through. That was horrible, and you should hold your heads up proudly for surviving that. I'm glad I'm not alone anymore. Rich slept with me last night and it was the best I've felt since I lost my husband.\"\n\n\"Rich slept with you!\" Nicole interrupted. \"When do I get my turn? I haven't had a man in bed in years!\"\n\n\"Hold on Mom, I'm his girlfriend.\" Julie fired back, \"I haven't slept with him yet!\"\n\n\"Calm down, ladies,\" I said. \"You will all get to sleep with me. We are spending the night here together.\"\n\nAll the women smiled and looked at each other. Julie gave her mother a look as if to say, 'See, he is sleeping with me.\" Nicole laughed when she saw her daughter. Beth just looked at me and smiled.\n\n\"Ok Nicole, you only had one orgasm last night. Come here, you get to start.\"\n\nShe got up and walked over to me. I had her undress me, which she did with enthusiasm. When she removed my underwear, she pushed me back in my chair and immediately got down on her knees and started sucking my dick. When I was hard, she climbed on my lap, facing me, straddled my legs, and mounted. Like her daughter, she took her time, also grimacing on her way down. When she got to the bottom, she said, \"Damn, Rich. You feel amazing. I don't think I've ever had a dick this wide. I can feel you in my throat!\"\n\nThe other ladies laughed, and Julie replied, \"See Mom, I told you it would fill you up. You said there was no way.\"'\n\n\"Well darling, I'm happy to say I was wrong!\" Nicole replied, pleased her daughter was correct, and smiled.\n\nShe fucked me, slowly at first, then picking up speed when she was confident that I would not hurt her. Julie was good, but her mother could give her some lessons. She had a strength in her vagina that was squeezing my dick like a vice. It felt amazing with her riding up and down on me. I reached up and grabbed her breasts. She was enjoying the stimulation and rode faster. I looked down and watched her vagina ride my cock, first down, devouring all 8 inches, then rising to the top just to make the return trip. I looked back at her boots; they were sexy as hell kneeling next to my legs. I wanted this feeling to last forever, but my dick had other things in mind. She yelled out, \"Cum in me, Rich!\"\n\nI thought, like mother, like daughter, then I exploded. When she felt this she let go, climaxing, and waves of orgasm rocked her. She tensed up, and I thought she was going to rip my dick off. She kept tensing, pulling out every bit of sperm that she could. If I didn't know she was on the pill, I would swear she was trying to get pregnant. Eventually, the orgasm faded, and she relaxed. When my attention returned to Beth and Julie, I noticed they were also busy. Julie was behind Beth with her hand, reached around and playing with Beth's pussy. Beth had her right hand behind her head, pulling Julie's face down. Julie was kissing Beth's neck, sucking on it while she continued to finger her. I saw Beth tense up, and I knew she was having an orgasm.\n\nNicole got up and returned to the floor in her resting position, and I called over Julie. Julie climbed into my lap and slowly started trying to get my dick hard. While she did that, I pulled her close and kissed her. I reached down and started fingering her clit. She rubbed herself on my hand and tried to ride my arm up to my elbow. She was ready to go! My dick finally got hard after about 5 minutes, and when it did, she climbed on top. She had an easier time getting it in tonight and looked like she was proud of herself. She looked back and said, \"Watch this Mom, bet you can't do this!\"\n\nShe leaned back. So far that I had to use both hands to hold her up so she wouldn't fall. She was on my dick and bending it backward. When it bent to where I thought I would have to lean up, she pushed her hips forward, then pulled back. She took her legs out from under her. I saw her do it, and I still don't know how she did it; that woman is flexible. She lifted her legs and draped her feet over my shoulders, her legs on either side of my head. I had a clear shot right down to her vagina, and I could see my dick going in and out clearly. She placed her hands on the chair arms for stability and used them to lift herself slightly, riding my dick back and forth. I couldn't do anything but sit there; all my strength was used to keep her from falling. The result was she was doing all the work, and I got to sit there and enjoy the show. She looked me in the eye and winked, breaking out into a big smile before she closed her eyes again and redoubled her efforts.\n\nI looked back at Nicole and Beth and they were wide-eyed, watching Julie work. Both were kneeling with their hands on their heads, not moving. After a few minutes of this, I could tell Julie was close. She called out, \"I'm Cumming Rich!\"\n\nThat sent me over the top. I came for the second time tonight. I don't know what Julie calls that position, but it was incredible. Just when I think her mother has more skills, Julie came up with something that surpassed her. I was hoping this rivalry would continue since I would be the real winner! When Julie was spent, she returned to the floor and gave her mother a smirk. Nicole just smiled and nodded in approval at her daughter. I didn't know if I had a third in me, but I was going to try. After talking to the ladies for 10 minutes I had regained feeling and it was getting hard again.\n\n\"Ok Beth, it's your turn.\" I told her.\n\nBeth turned white. Fucking me was crossing the last line. Sucking my dick was one thing, and some would not even consider that sex. Intercourse, however, could not be mistaken.\n\n\"I don't know Rich,\" Beth said, nervously. \"That may be too much. Couldn't I just suck your dick for you?\"\n\n\"Beth, I've just been fucked twice, both amazingly, I may add. This isn't for me; this is for you. When was the last time you orgasmed from a real dick?\"\n\n\"Not since your father.\" She answered.\n\n\"Then get that sexy ass over here and take a seat.\" I ordered.\n\nBeth hesitated. Nicole spoke up. \"Go ahead Beth, it's amazing. You're going to love it!\"\n\nJullie added, \"Yeah Beth, you need this. You won't regret it.\"\n\nBeth hesitated and said, \"It just feels wrong. I've slept with his father and raised him.\"\n\nNicole looked at Julie, and without speaking a word, both stood. They grabbed Beth under her arms and pulled her up. They walked Beth over to me and stood in front of my chair. Nicole started kissing Beth and massaging her vagina, and Julie leaned over the chair arm and started sucking my dick. Once it was hard, Julie pulled back and lifted my cock up. Nicole guided Beth forward until she was straddling me, all the while continuing to kiss her, lowered her down, and Julie guided me into my Beth's opening. When her pussy met me, she opened her eyes wide for a split second, then closed them again. She had a look of concentration while Nicole lowered her down. I had become familiar with that expression, as all three women wore it when I entered them for the first time.\n\nAfter Beth hit bottom, Nicole and Julie stepped back, kneeled back down, and resumed their position. Beth's eyes opened, and we made eye contact. Without saying a word, I wrapped both arms around her waist and lifted her. I slowly lowered her back down and lifted her again. I repeated this motion slowly for about a minute, all the while looking Beth directly in the eyes and never losing contact. She was looking into my eyes, but I could tell she was concentrating on her vagina; she had that faraway look. After a minute had passed, she reached up and put her arms around my neck. She slowly started working with me, lifting herself and lowering back down. The rhythm slowly sped up over the next two minutes until she started riding me with intensity. Her grip on my neck got tighter, and she closed her eyes.\n\nShe kept fucking me harder when she said, \"Oh Rich, Oh my God! You feel so good. Fuck me harder, harder!\"\n\nI obliged her. I picked her up and brought her down. She responded by moaning, and each time I would pull her down hard, the moaning got louder until she was almost yelling. She called out, \"My God, I'm Cumming, I'm Cumming! Oh my God!\"\n\nAnd she tensed and stopped. She went perfectly still. She stayed like that long enough for me to worry about her when she suddenly cried out in pleasure. \"Oh yes, yes, yes. Oh my God, yes. Oh.\"\n\nThat's when I felt the waves rock her compact frame. They started down low and worked their way upward, finally erupting out of her shoulders, causing her head to be thrown back. I thought she might cause herself whiplash, but it was sexy to watch. That's when I came for the third time tonight. When she tensed up, it was like her pussy was grabbing my dick and squeezing. Beth continued to orgasm for well over a minute. She just kept jerking backward every time a wave rippled through her body. When they all subsided, she went limp in my arms, my shrinking dick still inside her.\n\nNicole and Julie, who had been watching the entire episode, smiled and got up. They came over, stood on either side of the chair, and picked Beth up off my lap. I stood up, scooped Beth up in my arms, and carried her back to the room. I carefully placed her in bed, cleaned her up, and went to clean myself up. By this time Julie and Nicole had wiped themselves down and returned, carefully undressing Beth. All the while Beth laid there, eyes closed, breathing peacefully, with a smile on her face. When she was undressed, Julie and Nicole followed suit.\n\nI set the alarm and laid down in the middle of the bed. To my right side was Beth, who had rolled up to lie next to me. On my left was Nicole, who had done the same. I had my arms behind each woman, wrapping around their shoulders and holding them close. I was wondering where Julie was going to sleep, but she already figured it out. She climbed right on top of me, kissed me, and laid her head on my chest. They covered me in a blanket of women and never felt more satisfied in my life. I kissed both Nicole and Beth on the forehead, closed my eyes, and fell asleep."
    ],
    "authorname": "AssassinWolf",
    "tags": [
        "exhibitionist",
        "orgasm",
        "reluc",
        "reluctance",
        "shopping"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/assassins-mc-pt-07"
}