{
    "title": "The Pleasure Cruise Ch. 04",
    "pages": [
        "This is chapter four in what will now officially be a five-part series. Chapter four is a 50-50 split between the Exhibitionist and the Erotic Couplings categories. I'm posting it in the former because the latter seems to me to be mostly for \"none of the above\" stories and there are definite exhibitionist elements in this chapter, but exhibitionism is not the focus, so be forewarned: if you're looking for a story where a room full of people go streaking, this isn't it. \n\nRavenna933 edited this story (as she has done since the beginning). She also contributed some helpful ideas and suggestions that improved the story immensely. Nellskitchen also gave the story a read-through and provided valuable feedback.\n\n*\n\nMy phone's alarm woke me with a start the next morning of my Eastern Caribbean cruise. The sleeping woman beside me swore, elbowing me hard in the ribs.\n\n\"Why the fuck is an alarm going off?\" Lauren mumbled testily.\n\nI silenced my phone. \"I've got breakfast plans with Danielle.\"\n\n\"I'm going to sleep for another month,\" Lauren said wearily. \"My head is pounding. Please be quiet.\"\n\nShe rolled over sulkily as I noticed multiple notifications on my shipboard messaging app. I quickly read them in chronological order, the first from Oliver around 2 AM:\n\nThanks for inviting us tonight, dude. Allison is an awesome girl. I owe you one for getting me laid tonight, so here's payback: Hannah kept talking the whole way back to the cabin about wanting to fuck you. When we finally got her into bed, she passed out right away, but you can use that information however you see fit. \n\nOliver wouldn't have known about Hannah and I flirting earlier in the evening, but I still appreciated him letting me know about a potential lead. He was a good guy, and I liked him, even though we had nothing in common and I didn't usually hang out with jocks.\n\nI'd suspected he and Allison were going to fuck each other when I saw them leave the bachelorette party in each other's arms the night before, but I still smiled at reading the confirmation. The attraction in Allison's facial expression on first seeing him was obvious. Seeing them practically get it on in front of us in our cabin was also an unmistakeable sign of where the night was going, but clearly, he was into her too. I quickly messaged him back a happy acknowledgement and thank you for the intelligence, and then moved on.\n\nThe next message was from Allison and was sent at almost the same time as Oliver's message:\n\nI wanted to say thank you to you, and I'm sending this separately to Lauren, for everything you did for me last night. I've been sulking my way through this cruise, and last night, I actually had fun showing my sister that I'm not still a child. I think I forgot somehow going into this that there were going to be two thousand other people onboard. You two reminded me that I could make my own fun if I didn't want to hang out with those bitches. I'm going to be way more fun these last two days on board, and not just because I have a cute boy to hang out with. Remind me to thank you in person for introducing me to Oliver. Hope the three of us, or four of us, can see each other again sometime. \n\nI sent her back a quick message thanking her in return for allowing us to intrude on their party, and then expressing happiness that she'd met someone she liked.\n\nThe last message was from Lena, and had been sent some twenty minutes ago:\n\nHey there, stranger. Just wanted to say thank you for last night. It was the best first date sex I've EVER had in my life. I'm laying here reliving it in my mind after waking up, and it's gotten me all hot and bothered again... Brianna's asleep still, and I'm debating if I should take my vibrator into the shower. Just thought you should know.\n\nI grinned and my cock sprung to life to thoughts of Lena laying there achingly aroused in bed in her cabin five decks down and to the rear, thinking about me. The messages continued, with the next one ten minutes later:\n\nI guess you're still asleep. I'm so wet right now. I need to go take care of it. I'll say your name when I cum.\n\nI quickly wrote back a message to her:\n\nJust saw your message and it's gotten me hard laying here. It came in ten minutes ago, so I'd guess you're there right now... I bet you look so beautiful and so hot leaning against the wall in that shower trying not to make too much noise. Thinking about you too. Thanks for last night, stranger.\n\nI waited for a few moments to see if a response would come, but nothing was forthcoming, so I forced myself quietly out of bed, erection pointing the way as I headed for the shower. Lena's scent was still present on me, and I smiled at the memories from last night before turning the shower on.\n\nLast night had been the first night in months that I'd felt like my old self again. Sure, being on the prowl was fun, and good sex was never a bad thing, but what really made it feel right was being back together for real with my best friend. Lauren and I had played wingman for each other before over the years, though never to the balls-to-the-wall extent that she'd stood up for me last night.\n\nI didn't have anyone else in my life that knew me like she did, understood me like she did, or was committed to making me happy like she was. She'd picked up right away that something was wrong with me from the first day, even when I hadn't known it myself. She'd spent the next few days setting aside her own needs and doing whatever it took, selflessly, to make me whole again. She'd been sad and depressed when I first saw her, and I knew she still was, but she'd set that aside to care for me. I was touched by that.\n\nI was also very worried about her. I'd seen Lauren up and down before, but never to the extent that she was now. The energetic, outgoing highs of the past few days had corresponded with some terrible lows when we were on our own in the cabin. I perceived that she was fighting a battle inside herself with something, though what it could be, I had no idea. I didn't know how, but I was determined that somehow, in the two days we had left at sea before we parted again, that I would figure out how to break through and help her get back to herself. If I didn't get a chance to fuck Lena again, or Danielle at all, or Hannah, or anyone else, I didn't care. Lauren's mental health was now my top priority.\n\nJust then, the door opened with a bang, and Lauren burst in, headed for the toilet, and vomited profusely. I immediately reached out of the shower, holding back her hair as she was sick, then rubbed her naked back as she curled up on the floor.\n\n\"Are you okay?\" I asked, more as a courtesy than out of not knowing.\n\n\"I must be seasick,\" she answered.\n\n\"We're in a harbour,\" I pointed out. \"The sea's dead calm and it's not raining anymore.\"\n\n\"Fine.\" She rolled onto her back, spread-eagled on the floor, shielding her eyes from the overhead light. \"I'm hung over. I haven't been hung over like this since I was a teenager.\"\n\n\"You overdid it last night,\" I observed.\n\n\"Probably. Not like anyone cares.\"\n\n\"I care.\" I shut off the shower, grabbing a towel and stepping out of the shower into the bathroom.\n\n\"I like the view,\" she said, breaking into a silly grin staring up at my penis hanging limply over her head.\n\nI ignored her, filling a bathroom glass with water. \"Sit up, get some hydration in you.\"\n\nShe sat up carefully, legs still spread, and gingerly drank. I realized as I knelt between her legs in front of her that I could see her inner vulva in detail, soft pink folds peeking out between her cleft, her clit hidden by its hood. Despite our years of extreme closeness, I'd never seen her most intimate area in such detail before. I tried not to stare, but I still felt somehow like any of the last remaining barriers between us, whether physical or emotional, were starting to crumble.\n\nLauren drained the glass of water and asked for a refill, which I provided. She then finally, with my help, made it back to her feet, and leaned on me as I led her back to bed, tucking her in. I sat on the bed beside her.\n\n\"Should I be worried about you, Ms. Kovalenko?\" I asked.\n\n\"No. I'm just hung over,\" she insisted.\n\n\"We're going to dock in Amber Cove soon. What's the plan for today?\"\n\n\"Shit,\" she swore. \"We were going to do a hike. I know how much you love hiking. It's apparently nice. But I don't think I have that in me today. I'm really sorry, Sean.\"\n\n\"It's okay, I don't need to go, we can just hang out here,\" I volunteered.\n\n\"Bullshit,\" she spat back. \"You're going hiking. Ask Danielle if she wants to join you when you go to breakfast.\"\n\nI checked my watch. \"I'm already missing breakfast. You're more important.\"\n\n\"Get the fuck up there, Sean!\" Lauren spat back angrily. \"I'm fine. Really. I'll lie here until I feel better and then go lay on the beach for the day. Get your hiking boots on. I booked a taxi at the port. All you need to know is you're looking for a taxi to the Telef\u00e9rico. I'm not going to be the reason you miss something amazing.\"\n\n\"I...\"\n\n\"Don't make me feel any worse than I already do, Sean. Please. I'm a big girl. This was going to be the highlight of the cruise for you,\" Lauren pleaded. \"I need you to go, for me if not for yourself. I can't handle feeling guilty about this.\"\n\nMy phone suddenly vibrated in my pocket. Are you up here? I don't see you. It was Danielle.\n\nI made up my mind. Be right there, I wrote back.\n\n\"Okay. I trust you. I'm going for breakfast with Danielle. Are you sure you'll be okay?\" I was still worried.\n\n\"Cross my heart and hope to die.\"\n\n\"Okay. I love you. I'm trusting you to tell me in the next few minutes if you change your mind.\"\n\n\"I will.\" She rolled over, facing away from me.\n\n\"Feel better.\"\n\nI quickly pulled on my hiking boots, field pants, a loose-fitting work shirt, and a wide-brimmed hat along with my sunglasses, waved goodbye to Lauren's back, and headed up to the Lido.\n\nI grabbed coffee and breakfast and then found Emily and Danielle together, seated by a window, already well into their breakfasts. The view out the window was spectacular, a hilly, rugged, green landscape overlooking a tiny cruise terminal. I didn't even know what country we were in, apart from that it was a Spanish-speaking one based on Lauren's use of the word Telef\u00e9rico, which I didn't know.\n\n\"Good morning, ladies,\" I began.\n\nDanielle smiled her dazzling smile. \"Good morning, Sean.\"\n\nEmily nodded. Her attention was preoccupied by an enormous cherry turnover.\n\n\"I apologize for being late. Lauren's got a bit of seasickness.\"\n\n\"No worries,\" Emily said. \"I hope she's okay. I can check in on her later, if you think that would be a good idea.\"\n\n\"I think she'd appreciate that,\" I approved.\n\nAn awkward silence fell over the table.\n\n\"How are things with you two?\" I began.\n\nEmily and Danielle exchanged a knowing glance. \"We're good,\" Danielle finally began. \"There's a lot of ground to cover. I don't want to do it in such a public place.\"\n\n\"Me neither,\" Emily said. \"But we're still best friends. Nothing's ever going to change that.\" She took Danielle's hand and held it up in her own for emphasis.\n\n\"I'll look forward to hearing the story,\" I said. \"What did you get up to in Grand Turk?\"\n\n\"Let's say that's part of the story,\" Danielle said. \"I'll fill you in today when we get some time. How about you?\"\n\n\"We went snorkelling,\" I said. I proceeded to share the vague outline of our day, telling about snorkelling in Grand Turk and helping Allison cheat at the bachelorette party, but leaving out my sleeping with Lena and Oliver's sleeping with Allison. I knew Emily had liked Oliver, and I didn't want to ruin his potential chances with her by saying too much.\n\n\"Sounds like a great day,\" Danielle finally commented once I'd finished.\n\n\"It was,\" I agreed. \"I'd been so stressed out with work stuff lately. I needed this holiday. I'm feeling so much more like myself, and it was great to get up to no good last night.\"\n\n\"I'm happy for you,\" she said, eying me. I momentarily lost myself in her deep, soulful brown eyes, burrowing into me with empathy and trust. I suddenly felt guilty for railing a former sorority girl less than eight hours previously, then I caught myself, mentally reminding myself that both these girls were already in relationships with other guys. We didn't owe each other anything.\n\n\"So, what are you and Lauren doing today?\" Emily asked.\n\n\"We were supposed to go hiking somewhere. All I know is to go get a taxi to the Telef\u00e9rico, and then go from there.\" I gestured at my hiking clothes. \"But Lauren's gotten sick and can't come. Do you want to come with me?\" I asked Danielle. I then turned to Emily. \"With your permission first. I'm not taking her away from you if you have other plans.\"\n\n\"You have my permission,\" Emily smiled. \"This is actually perfect. Danielle's the outdoors person out of the two of us, and she was complaining last night that we hadn't seen anything except beaches and ocean on this cruise. Go hiking. I'd love another beach day.\"\n\n\"Will you be okay by yourself?\" Danielle asked.\n\n\"I won't be by myself,\" Emily insisted. \"We've made lots of friends this week. I'll find someone to hang out with.\"\n\n\"Okay, let's do it,\" Danielle said, smiling. \"Let's go for a hike.\"\n\nWe finished breakfast, then headed down to the girls' cabin so Danielle could change into hiking gear. As she changed in the bathroom and Emily puttered around the room, I pulled out my phone, which had been buzzing over breakfast.\n\nGod, I needed that. I just had two orgasms in the shower thinking about fucking you, stranger, Lena wrote. I can't wait to do it again for real.\n\nSuddenly feeling guilty again, I closed the app, grateful for the fact that it wouldn't work today away from the shipboard wifi.\n\nDanielle emerged from the bathroom moments later, wearing well-loved hiking boots, black leggings, a baby blue spandex workout shirt, and a Cincinnati Reds ballcap. She had a Camelbak water-carrying backpack on, its telltale hose sticking out and clipped to her shoulder strap. There were oversize sunglasses hanging from her shirt's neckline.\n\n\"Camelbak is full, since I don't know if we can drink the water in the Dominican. I'm so glad I'm going to have a reason to have brought all this gear,\" she said happily.\n\n\"If you're not going to be a Blue Jays fan, I'm glad you're at least a fan of a terrible NL team,\" I responded.\n\nDanielle made a face. \"You're one to talk, Toronto. It's not like you've won anything recently either.\"\n\n\"I was in the stands for Jose Bautista's bat flip in 2015,\" I volunteered. \"When was the last time the Reds did anything memorable?\n\nDanielle sighed. \"One of these years, the Reds will win the World Series when I'm alive to see it.\"\n\nI thought back to watching the 1990 World Series with my Dad when I was a kid, remembering how dominant Jose Rijo was for the Reds that year en route to a championship, and I forced myself to put thoughts of our age difference out of my mind.\n\nWe left the room and made our way down through the ship to the gangway, then disembarked down onto the dock in a new country. A large sign welcomed us to Amber Cove, Dominican Republic.\n\n\"Lauren booked the whole trip,\" I admitted. \"I didn't even know what country this was.\"\n\n\"Amber Cove is just a cruise port,\" Danielle said as we walked through a familiar mix of duty-free shops, souvenir shops, and an excursion desk. \"The cruise lines want you to only spend your money with them, so the ships tend to dock in the middle of nowhere to a gated community where everything you see is owned by the same company that owns the ship.\"\n\n\"I thought this was your first cruise,\" I remembered.\n\n\"It is, but I really try to be an ethical tourist,\" she responded. \"I researched all this before we left. I'm trying to make sure money I spend on the cruise goes into the hands of local people as much as possible.\"\n\n\"That's admirable,\" I said, genuinely impressed.\n\n\"Thanks,\" she said, as we neared the fence separating the cruise terminal from a highway. A motley collection of cabdrivers and local tour operators were parked outside, waiting for clients, and a big sign sat just before the exit, essentially telling us that the cruise line could not guarantee our safety if we left their clutches.\n\n\"The nearest town is Puerto Plata,\" Danielle said, looking at a map on her phone. \"We're on the north coast of the island, and the town's a few miles down the road.\"\n\nWe found the cab with a driver holding a \"Lauren\" sign, and Danielle, speaking Spanish, asked the driver to take us to the Telef\u00e9rico. I looked at her, impressed. \"I didn't know you spoke Spanish.\"\n\n\"I don't, not really,\" she responded. \"Just what I learned in school.\"\n\n\"We learn French in Canada,\" I pointed out. \"I never had the chance to learn any Spanish. Do you know what a Telef\u00e9rico is?\"\n\n\"Cable car.\" Danielle grinned.\n\n\"I don't know what that is in French, but I'd guess it's similar,\" I said. \"Sounds cool!\"\n\nIt took us about fifteen minutes on treacherous highways to reach the outskirts of Puerto Plata. I considered myself a good driver. I'd driven in right-hand and left-hand drive countries. But the Dominican was the first country I'd been to where people appeared to drive on both. The lanes were mere suggestions to the locals, cars weaved through traffic with reckless abandon, and more than once on the short journey, I worried for our safety. I was very glad to reach the cable car station in one piece.\n\nThe Puerto Plata Telef\u00e9rico was anchored by a low, 1940's-looking building surrounded by tall trees. Overhead, a cable car line stretched up to the top of a lush, verdant mountain, which a nearby sign told me was called Mount Isabel de Torres. While I couldn't pick out much of the Spanish, I gathered that the mountain was 2,600 feet above sea level, which, as I reminded myself, was only a short distance away.\n\nWe went in the building, bought tickets, and then joined a short line for the cable car. We were lucky to have arrived when we did, because within five minutes of our arrival, the official cruise bus pulled up out front, and shortly the building was lined up out the door.\n\nI exchanged a triumphant glance with Danielle. \"Nice work, us,\" I observed.\n\nWe made small talk, mostly about our terrible respective baseball teams, as we waited for our turn. The crowd in line was mostly English-speaking Americans from the cruise line, and whatever conversation we were going to have, Danielle clearly wanted to have it privately.\n\nIt took about twenty minutes for it to be our turn, but soon we were whisked into the cable car. The cars were small, and I suddenly realized why the line was so slow-moving down at the foot of the mountain, as they only held about twenty people apiece. Then, we lurched into movement and lifted off into the sky.\n\nI'd never been in a helicopter, but that was all I could think of as we shot into the air. The view of the surrounding palm trees and bushes quickly changed as we rose, and soon we could see the outskirts of Puerto Plata, and then, as we blasted still higher, the entirety of the city to our right and the Carnival Liberty docked on the horizon to our left. I looked over at Danielle, whose face was a mixture of enchantment and fear, and put my arm around her waist. She purred happily and burrowed into my shoulder.\n\nWe finally reached the top after five or six minutes, stepping out into a green landscape that was noticeably cooler. It was a gorgeous sunny day, and there had been Caribbean heat at the foot of the mountain, but the summit was cool, breezy and pleasant. We stood for a few moments, taking in the view, then oriented ourselves with a map at the gift shop. There were several miles of hiking trails criss-crossing the summit of the mountain and leading to the next mountain over in the chain, ranging on a scale from wheelchair-accessible to challenging.",
        "Danielle and I picked a medium-range trail that looped from where we were standing back to the cable car depot. The map said that it was 2.3 miles over hilly, occasionally challenging terrain, and that it eventually looped back to the same gift shop and visitor's centre where we were standing. There were few people out, despite the beautiful day, and I was grateful we were about to have some privacy to talk.\n\nTwo minutes out from the parking lot, we were in another world. Tall trees towered overhead, making a canopy that put us into constant shade. The forest was alive with birdsong, and small lizards kept bounding across our path. The hiking trail was undulating and well-marked but rough -- a challenge enough to guarantee us a good workout and keep away the casuals, but not enough of one that we risked injury or getting in over our heads.\n\n\"This is beautiful!,\" I exclaimed. \"Totally worth coming here. This is the best thing I've seen on the trip so far.\"\n\n\"Me too!\" Danielle gushed. \"I've never seen a real rainforest before. I've always wanted to. Did you ever see that movie Ferngully?\" \n\n\"Years and years ago,\" I remembered. \"It was one of my sister's favourites when we were kids.\"\n\n\"I loved that movie so much when I was a little girl,\" she said wistfully. \"It's so cool to finally be in a tropical forest for real.\"\n\nWe hiked for a few minutes before I finally asked the question. \"So, what happened with you and Emily?\"\n\n\"It's a long story,\" Danielle responded as we hiked.\n\n\"We have time.\"\n\n\"I know.\" She stopped, thinking. \"I'm just trying to figure out where to begin.\"\n\n\"Wherever you like\" I suggested.\n\n\"Sure.\" She took a deep breath, then motioned to start walking. \"You saw me at breakfast yesterday. I hadn't slept much. I was too worked up from everything I was feeling. I went down to the cabin afterwards, and Emily was awake. She knew right away that something was wrong with me. I've never been able to keep secrets from her.\n\n\"She started grilling me, asking if I was okay, what happened last night with you. She thought maybe it was something that happened between you and me. I was trying to keep it together, but finally I broke down and I told her that I knew she'd slept with Lauren last night. She denied it at first, but in a way that I knew she was lying. She got shaky and defensive. So, I told her that you and I had walked in on them when they were sleeping together, and she got really quiet.\n\n\"She asked me what I was going to do about it, and I said nothing. It wasn't my secret to reveal, and I wouldn't ever do that to her anyway. I needed her to know I knew, so we didn't have that hanging between us. I told her that I wasn't going to judge her. I just was surprised, and I asked her if she wanted to talk about anything.\"\n\n\"I'm guessing she did?\" I asked.\n\n\"Hours, Sean. We didn't even make it to the beach until after lunch.\" Danielle smiled. \"But it was really, really good.\" She paused, thinking. \"Have I told you that Emily's Dad is the mayor of our town?\"\n\n\"No, never,\" I answered, surprised.\n\n\"Her Dad's been in office since she was in diapers, and her whole family is obsessed with their public image. He's a 'family values' kind of politician, though he cheats on her mom like crazy. Her Mom's a huge bitch behind closed doors. They're a dysfunctional family, but Emily's never known anything else as normal. It's a small town, and people gossip, so she's always had an image to keep up because of her Dad's career. I've always thought that image was the real her, because she was so good at appearing to be what people expected her to be. Yesterday, she told me it was all an act.\"\n\n\"What does that mean for your friendship?\" I asked. \"That has to have you questioning things.\"\n\n\"For right now, nothing changes,\" she responded. \"I still love her and she's still my best friend. I don't hold it against her if she couldn't show me who she really was. I don't believe she was keeping things from me on purpose; I think she's never let anyone see that part of her. Do you remember the yearning that I told you I was feeling to see what else is out there?\"\n\n\"Of course.\"\n\n\"Emily's had that too, but the difference is that I've got parents and sisters that I know will support me in any decision I make. Emily's on her own. Her entire family's biggest concern isn't her happiness or well-being. It's their image, and how the voters will perceive them.\"\n\n\"That's hard. I kind of feel sorry for her.\" I hit a steep rise in the path ahead, and clambered up, then turned back to help Danielle up.\n\n\"I do too,\" Danielle agreed as she took my hand to climb the ridge. \"I knew some of this about her, like the image stuff, and the pressure she's under. She's talked to me in the past about how hard it is to be a member of the famous Farrugia family. I get it. I just didn't realize how much she had buried, and how it's actually affected her deep down.\"\n\n\"I guess, then, the question is, who is the real Emily?\" I asked. \"I suppose that's something she has to figure out for herself. But it has to be really good for her to know she can talk to you about it.\"\n\n\"I told her that. Emily told me yesterday she's known that she's liked girls since she started puberty. She's bisexual, and she admitted that to herself way back then, even though she's never officially come out,\" Danielle continued. \"That doesn't bother me, of course. I want her to be true to herself. But for a small-town family values mayor, having a 'gay' daughter would be unacceptable, and that's now the town would see it. So, when she was first crushing on a girl years ago, she decided to never let it out or act on it. And she never has, until Lauren decided to seduce her.\"\n\n\"Lauren's good at that,\" I interjected. \"She picked up on her being into girls from dinner on the first night.\"\n\n\"That's interesting, because I'd never picked up on it,\" Danielle mused. \"Can I break Emily's confidence to tell you something that I promised not to tell anyone?\"\n\n\"You can if you need to, and of course I'll keep it secret, but don't take that step lightly,\" I advised.\n\n\"I wouldn't. I need to talk this through for me.\" Danielle took a few moments to collect herself. \"Emily's done some wild things in the past that I never knew about. I'm not going to tell you all the examples, but she's not entirely the good girl I always thought she was. The only thing I'll reveal specifically is that Lauren wasn't the first person she's cheated on Milos with. Their relationship really seemed perfect, so it's shocking to me.\"\n\n\"Are you sure you're not just seeing the relationship she wants you to see?\" I asked.\n\n\"I had that thought,\" Danielle mused, \"and I don't think so. He's the most kind, empathetic, attentive guy. He's quiet and thoughtful and that balances out her personality well. They really do fit together. More importantly, she still thinks he's wonderful too. She told me a lot of other stuff I'm not going to get into about how her family's image affected her growing up, but Milos really seems to be her rock. He's always encouraged her to seek her own path and to not let their influence define her now that she's not living at home anymore.\"\n\n\"He sounds like a good guy.\"\n\n\"He really is. She doesn't want him to find out about what she did last night, and I don't mind keeping that secret. That's not my place to get involved. But she's going to come out to him as bisexual when she gets home, and they'll have a talk about seeing where that leads. I don't know if she'll ever confess what happened with Lauren, but that's not up to me. At a minimum, even if she never acts on her bisexuality again, she at least wants to stand up and be counted as a member of that community. She doesn't want to be scared by her family anymore. She wants to stand up and be Emily, for Emily's sake.\"\n\n\"This really sounds like it went well.\" I smiled at her. \"You must be proud of her.\"\n\n\"It did, and I am. You also should know that Emily wants to sleep with Lauren again before we split up.\"\n\n\"I'm sure Lauren would do it, but why does Emily want that?\" I asked.\n\n\"Because, I think, she feels like if this turns into the one and only lesbian experience she's ever going to get, she's going to make the most of it, and from what she told me about how the sex itself was, I think she was so overwhelmed that she doesn't feel like she got the full experience she's been fantasizing about forever. Plus, there's not really a difference at this point between Milos finding out she cheated on him with a girl, and him finding out she cheated on him with the same girl twice. It's not like that's going to be the difference between him forgiving her and dumping her. What's done is already done.\"\n\n\"I guess that makes sense. Is Emily okay?\"\n\n\"She is. More okay than I've ever seen her, actually.\" Danielle thought for a bit. \"Yesterday she finally showed her real self to someone, and it went well. I think it was a positive experience for her to see that the world is going to accept her for whom she really is.\"\n\n\"Has Milos seen the real Emily?\"\n\n\"That I don't know.\" Danielle thought for a minute. \"The answer to that question probably is what's going to determine if they have a future together.\"\n\nJust then, the forest canopy broke open for a moment, and some lovely natural morning light illuminated the trees. \"The lighting is perfect here. We need to get a picture of us. We haven't taken one yet,\" I insisted.\n\n\"That's a good idea,\" Danielle smiled. I put my arm around her, and she leaned in happily, smiling as I took a selfie. \"You'll have to send that to me when we're back on wifi.\"\n\n\"Of course.\" We began walking again. \"How are you feeling about all this?\"\n\nDanielle took another deep breath. \"I'm having a quarter-life crisis, I guess you'd call it. I figured out a couple of days ago, with you, that my relationship with my boyfriend that I used to think was forever actually wasn't meant to be. Yesterday, I found out that my relationship with my best friend also wasn't what I always thought it was. That's a lot to take in in such a short timespan.\"\n\n\"I can imagine it would be,\" I sympathized. \"Did you ask her what she really thought about your boyfriend?\"\n\n\"I did, yesterday,\" she responded. \"She said that she's never thought Andre and I were perfect for each other. She said the same thing you did -- we're too similar personalities and he doesn't challenge me. She was just always scared to say anything, because I seemed so happy with him.\"\n\n\"That has to help you feel secure in your decision to break up with him,\" I pointed out.\n\n\"It does. I'm not looking forward, at all, to actually breaking up with him. He's a good guy, and I still care a lot about him, and breaking his heart is going to be hard. But I know I have to do it. He's not what I want for the rest of my life. I don't have any idea what I do want, but I know it's not a future with him. Do you want to know what it was that made me decide that?\" Danielle eyed me as she walked.\n\n\"What was it?\"\n\n\"It was the fact that when you said what you did in that hot tub, and I had the thought of breaking up with him, the first emotion I felt was relief.\" Danielle picked up her pace, as though trying to outrun the turmoil in her head. \"I felt relieved that I had a reason to break up with him. I felt relieved I had the chance to start figuring me out, on my own. I haven't been single since I was 16. I need to be again, to figure out who I am as an adult.\n\n\"The good girl thing might have been an act for Emily, but I really was that girl, Sean. I've never acted out or gotten in trouble. I never had a rebellious phase. I was a teacher's pet in school. I've always done what's expected of me. I started having doubts about where I was in life a few months ago, but this week it's suddenly exploded. I really believed that she and I were the same, so to find out what she has beneath the surface is a little frightening, because it's making me start to wonder about what I have beneath the surface. I'm starting to realize that I've never looked, and it bothers me so much to think that maybe I don't know who I really am.\"\n\n\"Is it that you never looked inside, or never let out what was there?\" I pushed.\n\n\"I never looked.\" Danielle turned to keep walking. \"Even now this is hard for me to talk about, but as an example, when we played that 'Last Time You' game a couple of days ago, I said I never really watched porn. That's true; the only time I've ever seen it is at a sleepover with a bunch of girls where one of them put it on. I'm wondering if the reason is because I was too scared to look. Good girls don't look at porn, and I'm a good girl, therefore I don't look. How would I know if I liked something if I never even tried it?\n\n\"I don't know if I have any kinks. I don't know what I might be into. I like sex; I like it a lot. But I've never explored any deeper than that, and I'm starting to really get the craving to do that. I need to figure myself out better than I have before, and I need to do that on my own. I want to figure out my sexuality. I someday want to settle down with a man, but not until I have a better idea who I am first.\n\n\"I already am thinking of myself as a single woman. I have been since yesterday after Emily and I talked. I felt so guilty about spying on Miguel and Alejandra, and I felt so guilty about messing around with you afterwards. It was almost crippling how much shame and guilt I felt about it. I wasn't myself in that game we played with Lauren and Liam and Oliver. I was so quiet and embarrassed even being there. This morning, I woke up feeling like a single girl, and feeling like I wanted to get out there and figure out what that means for me. I'm done feeling guilty.\"\n\n\"That's awesome to hear,\" I beamed at her. \"What does Emily think about you taking that journey?\"\n\n\"She's really proud of me. She's encouraging me to take whatever next steps I think I should take. She wants to be a part of my journey of self-discovery. She's a great person and a great friend, and I wish I'd figured this out four years ago. I'd go back to university and do that way differently, for one thing.\"\n\n\"Like what?\"\n\n\"I'd be more of a... slut.\" Danielle blushed, choking over the unfamiliar word. \"I need to know if sex gets better than what I've had before. I want to know what it's like to feel someone else inside me. I've only ever had one dick, and only ever seen three, two of which were this week. And you and Miguel are both so much bigger than Andre.\"\n\n\"Miguel's a lot bigger than I am,\" I pointed out.\n\n\"Yeah, but you're a lot bigger than Andre,\" she responded.\n\nI satisfied myself with a smug grin.\n\n\"Oh, stop.\" Danielle noticed my expression and rolled her eyes. \"Andre always was big enough for me.\"\n\n\"From everything you've told me, he does seem like a good guy,\" I observed.\n\n\"He is. He'll make some lucky girl a wonderful husband someday, just not me.\" Danielle stopped, grabbing the hose from her Camelbak backpack and taking a drink of water, then offering it to me. \"Emily thinks I should fuck you,\" she said nonchalantly.\n\nI nearly spat out the water in my mouth. \"I always liked Emily.\"\n\n\"Uh huh.\" Danielle said drily.\n\n\"I agree with her, but why does she think that? I'm curious.\"\n\n\"I'll get to that in a minute, but I'll tell you a story first. When Emily and I finally got out onto the beach in Grand Turk mid-afternoon, we found some cute boys and spent most of the afternoon flirting with them. I felt liberated and free doing that. I'd never been able to really flirt with strange boys without feeling guilty about it before. But it was awesome. I got all wound up in a way I never let myself get before. I really wanted to have sex. I thought about doing it on the beach, right there, in front of all those people. Deep down, I didn't want to actually have sex on the beach and get arrested. But thinking about it was really hot.\"\n\n\"That makes sense,\" I said. \"You don't have to act on a thought just because you find it arousing.\"\n\n\"Obviously,\" she responded. \"But I was turned on from it, and in the early evening I decided I was really looking forward to seeing you at dinner last night. I was going to flirt with you, and make you hard under the table, and then take you back to our room after dessert and fuck you.\"\n\nI became instantly aroused, my cock jumping in my underwear. \"I'm sorry I missed that,\" I said lamely.\n\n\"I'm glad you did,\" she responded. \"Partway through dinner I got cold feet. I started wondering if I was being too forward, too fast. Like I got overwhelmed, and the old conservative me tried to take back over. I couldn't figure out if wanting something meant having to have it, or if it was enough for me to fantasize about it. When you didn't come to dinner, I realized that I didn't have to make a decision that night about whether or not we were going to have sex, and that felt like such a big relief. I was worried I was jumping into things too quickly, so having the decision taken away from me for the night took the pressure off.\n\n\"Emily and I actually did go out for a while after dinner last night to blow off steam, and I was hoping not to see you. I wasn't trying to avoid you. I just wanted to go to bed on my own and make sure I felt the same way about you, and about me, in the morning.\"\n\n\"And do you?\" I asked with a smile.\n\nDanielle blushed. \"You know I do. You know as well as anyone that feelings don't change just because of the voice in your head telling you you're not supposed to be feeling them. I just was glad to have the chance to figure some stuff out first. Emily and I got drunk in the dance club last night. You said you hated dancing, so I figured we'd be safe there. I made out with some random girl on the dance floor. We both went to bed with a major buzz on, both from the liquor and the flirting. It was a fun night.\"\n\n\"Are you into girls too?\" I asked.\n\n\"After having made out with one, I can say 'no' for sure,\" she responded, grinning. \"But I'm glad to have found out the answer. The old me never would have let myself come close to asking the question.\"\n\n\"Do you feel like you're casting off being repressed a little bit?\"\n\nDanielle thought for a long time. \"I never thought of myself as repressed,\" she finally answered. \"I still don't. I love sex. I think I'm pretty adventurous in bed. I've never had a problem trying new things. I know how to get myself off, and I have a pretty rich fantasy life. I just...\" she trailed off.\n\n\"You were perfectly happy playing in your own backyard until you realized there was a bigger world on the other side of the fence?\" I suggested.\n\nDanielle nodded. \"I swear, you missed your calling as a therapist. That's it exactly. I'm ready to see what else is out there.\"\n\n\"So why does Emily think you should fuck me?\" I circled back.\n\n\"Because she knows how badly I want to.\" Danielle winked at me. \"Because she thinks I should get a vacation rebound out of my system before we go home. And because you're the best candidate I've met on the cruise so far.\"\n\n\"So far.\" I teased. \"I'll take that as a compliment.\"\n\n\"You should,\" she responded shyly. \"Before the cruise is over, we're definitely going to get together.\"\n\n\"I completely agree,\" I said, smiling at her as she avoided my gaze.\n\nWe walked in silence, holding hands, for another few minutes. Just then, we reached a clearing in the dense forest. I'd been hoping for a view at some point on the mountaintop hike, but the lush tropical greenery blocked out any possibility of a view from the summit of the mountain. A sign in Spanish and English let us know we were at the halfway point of the trail. A small bench gave us a place to stop for a water break. We'd seen no signs of other people since leaving the trailhead.\n\nOnce we'd watered, Danielle turned to face me. \"So that was my day. Any questions?\"",
        "\"Just one,\" I responded, putting my arm around her shoulders. \"Can I kiss you now?\"\n\n\"I thought you'd never ask,\" she smiled.\n\nShe leaned her head back, looking up at me, then closed her eyes as I slowly leaned into her, softly and gently brushing my lips against hers, then slightly firmer, with a little more pressure and intensity. Danielle let out a soft whimper as I pulled back.\n\n\"Wow,\" she breathed.\n\nI leaned in again and kissed her, still taking my time, slowly and gently, softly. We sat on the bench together making out for several minutes as the intensity gradually picked up, our mouths opening and tongues exploring each other. Danielle's hands were antsy, moving up and down my body, like she was trying to take me in through as many senses as possible. I kept one arm around her and used the other to gently touch her body, mostly her thigh and shoulder, roaming back and forth between the two places, occasionally hinting at touching her breast but never actually doing it.\n\nFinally, Danielle groaned in frustration and took me by the hand, forcibly dragging it onto her right breast. She held my hand in place there as I kissed her, pressing my fingertips into the slightly firm spot where her nipple was. Danielle's sports bra was too anchored in place to slide a hand under it, but I still enjoyed feeling her heart rate increase and the intensity of her kissing build as I massaged her chest. I noticed her roaming hands growing bolder, occasionally brushing against the hard spot between my legs so gently that it could have been an accident, but often enough that she was clearly doing it with some intent.\n\nI was just thinking about starting to explore Danielle's inner thighs when I heard voices on the trail. Danielle clearly heard them too, as she instantly pulled out of the kiss, burying her head on my shoulder. Soon after, a Spanish-speaking family broke through into the clearing, waving to us as they arrived.\n\n\"Hola!\" I said, trying to be friendly, as Danielle blushed.\n\n\"Shall we get a move on?\" I asked.\n\n\"I need a few minutes to regain my composure,\" she responded, still out of breath. \"Where did you learn to kiss like that?\"\n\n\"A gentleman never tells,\" I teased. I turned to face her as she shot me a dirty look. Her fair complexion was flushed, and her nipples were clearly straining against the restriction of her sports bra.\n\n\"I have one regret so far on this cruise,\" Danielle continued.\n\n\"What's that?\" I asked.\n\n\"I mentioned that I wasn't myself during the game of 'Last Time You', and I regret not enjoying it more. I've never done anything like that. I was so embarrassed the whole time, plus I'd already cum twice that day, so I wasn't really that turned on. I liked seeing you and the other boys so obviously hard in your underwear, but I was so wrapped up in my own head and I was too worried about what was going to happen if I lost my bra or panties, and what people would think of my body. I didn't realize until I was thinking about it yesterday that that was my first chance to be a new Danielle, and I already feel like I blew it a little.\"\n\nI hugged her closer as we sat together. \"I can understand that. Do you want to try to do something like that again?\"\n\n\"I'd like to, if it works out,\" she responded. \"I felt safe in that room with you guys. I felt like I could trust everyone, more or less. I'd need to feel that safe again to be comfortable. I don't want to do something like that with Liam and Oliver again, because I think after flirting with them for a couple of days already, they'd have expectations about what would happen after that I wouldn't want to live up to. But yeah, if there's another opportunity, somehow, I'd like to try to do it better.\"\n\n\"I'll see if we come up with any ideas when we get back to the ship,\" I offered. \"If you want, we can try and involve Emily and Lauren too.\"\n\n\"Thanks, Sean, and we'll see how it goes.\" Danielle leaned in and kissed me again.\n\n\"Should we get moving again?\" I asked, gesturing at another group of hikers that had just appeared. Our privacy appeared to be gone.\n\n\"Sounds good.\" We stood and started to walk, then Danielle stopped me, leaning in and whispering in my ear. \"One advantage of being a man is that erections go away. Wet panties stay wet. It's gross.\" She made a face.\n\n\"You could take them off,\" I pointed out.\n\nDanielle's expression showed surprise. \"I could...\" she started, clearly considering it. \"I don't think I'm going to. There's nowhere to change here. But it's not a bad idea. It's another thing the old Danielle never would have done.\"\n\nWe started hiking the second half of the trail, quickly disappearing into thick underbrush. The second half of the trail was far more rugged and mostly uphill. The brush was thicker, closing us in to the point we had to walk in single file. I had a lovely view of Danielle's rear end straining against her leggings as she hiked in front of me.\n\n\"It's been so nice to meet you on this trip, Sean Corcoran,\" she suddenly said, turning around to face me. \"You've been really helpful to me, and I need to thank you for that. I'm glad we met each other. I don't think I've asked you, is everything okay with you? Do you need to talk about anything? I'm happy to be there for you too, in the way you have been for me.\"\n\n\"I'm worried about Lauren,\" I answered immediately.\n\n\"I'm not surprised, if this isn't normal for her. She seems...\" Danielle cut herself off.\n\n\"She seems what?\" I asked.\n\n\"It's not my place to offer an unsolicited opinion on someone I've just met,\" Danielle said quickly.\n\n\"Then I'm asking for your opinion,\" I smiled.\n\n\"She seems sort of unstable,\" Danielle started, seemingly unsure of how much to say. \"I can see why you'd be worried.\"\n\n\"I'm not going to betray her confidence, but I could use a second opinion,\" I said. \"She wouldn't admit to being depressed, but I think that's what it is.\"\n\n\"I can see how you'd think that.\"\n\n\"She's always been a bit wild, and she's always been closed-off, but since we got on board, she's been wilder than I've seen her before, and she's also had a few moments where she's been more emotional than I've ever seen her.\" I briefly recounted Lauren's behaviour over the past few days, leaving out anything too personal but still giving her a snapshot.\n\n\"Is there a chance she's pregnant?\" Danielle asked when I finished.\n\n\"I doubt it,\" I answered. \"She was in a long-term relationship that was monogamous and long-distance for the last six months, and she hasn't had sex with a man in ages. Plus, she hates children, so it's not like she would have gone the artificial route.\"\n\n\"Then what do you think?\" Danielle continued.\n\n\"I honestly don't know. I think she's dealing with some major life issue, but what it is, I couldn't tell you.\" I shrugged. \"I'm worried about her, but my pushing on her makes her shut down. I learned a long, long time ago that she handles her problems on her own most of the time. The best way to be there for her is to let her figure out on her own when she needs you.\"\n\n\"Good plan. I'm sure she'll come to you when she's ready.\"\n\n\"I hope so.\" I shrugged.\n\nDanielle stopped again. \"The trail is really starting to close in on us, are you sure this is the way back?\"\n\nI pointed to a blaze painted on a nearby tree. \"I'm sure. But I doubt any of the families we saw earlier are coming this way. It was pretty obvious when we set out again that this section of the trail was going to be more rugged.\"\n\n\"I had the same thought.\" Danielle's brown eyes suddenly flashed with mischief. \"Can I try something else the old Danielle never would have done?\"\n\n\"Be my guest.\"\n\nDanielle quickly looked around to make sure the coast was clear, then, in one smooth motion, pulled up her hiking shirt and sports bra, revealing her breasts to the jungle. It was the first time I'd seen them, and I drank in the sight. She had large B's or small C's, slightly gumdrop-shaped, dotted with occasional moles, pearlescent white compared with the bronzed tan covering the rest of her chest. Her nipples were average-sized, dark red, perfectly proportioned, and clearly erect. A sheen of sweat made her skin glow in the diffuse jungle light.\n\n\"You're beautiful,\" I admired.\n\nDanielle smiled. \"Thank you.\" She quickly pulled her shirt down again, adjusting her sports bra back to full support and smoothing out her top.\n\nI leaned in to kiss her again, but she stopped me, putting one finger on my lips. \"Not now, Sean. This is a big enough step already, and I have an idea what that look on your face means.\"\n\nShe turned and continued along the path, setting a strong pace. I kept up, and the two of us finished the trail in the next forty minutes or so, talking little as we hiked in single file.\n\nWhen we finally reached the parking lot again, we discovered that the crowd of people from the bottom of the cable car were now on top of the mountain, and so we decided, after shooting a few more pictures, to head down early so as not to miss the ship. The wait for a cable car was long, and we kept up the small talk, admiring the view down the mountain of the green vegetation, the city laying two thousand feet below, and the Caribbean Sea beyond.\n\nIt was well past lunch time by the time we made it down the mountain, and with both of us famished and our Camelbak mostly dry, we decided to get a cab into the city to find a late lunch.\n\nPuerto Plata was a beautiful city, one of the oldest in the new world, made up of Spanish colonial-style buildings surrounding a natural harbour overlooked by an ancient fort. Danielle's rudimentary Spanish led the cabbie to take us to the Parque Central, a square bustling with merchants and street life dominated by a Catholic cathedral.\n\nWe wandered the city for a few minutes, dodging pushy street merchants and overweight tourists before finding a restaurant that looked reasonably local. We were seated and ordered two bottles of Presidente beer and grilled local fish over rice before finally settling down to keep talking.\n\n\"It's nice to get some privacy,\" Danielle observed, gesturing to the mostly empty restaurant. There were a few other tables occupied, but they were all full of local workmen and families speaking Spanish, and none were paying us attention.\n\n\"So, what happened up there?\" I asked.\n\nDanielle blushed. \"I can't believe I'm about to say this to you. I've never told this to anyone.\"\n\nI sat silently, waiting, then took her by the hand.\n\nShe smiled. \"I must trust you. You know how I said up there I didn't know what turned me on?\"\n\nI nodded.\n\n\"That's sort of true, but also... I do have some idea.\" She paused, taking a long drag on her beer. \"I mentioned I don't watch porn, and that's true, I don't. But I've been into erotic stories and romance novels since I was a teenager. I've always gotten off on the written word, and I've always gravitated to one genre.\"\n\nI paused, waiting. \"Which one?\" I asked finally.\n\nDanielle's face grew even redder. \"I got the period talk and the 'don't get pregnant' talk when I was younger, but there was never any talk about sex as something fun or enjoyable. I don't feel like I can talk to my parents or my sisters about it either. I think because I grew up in an atmosphere where sex wasn't talked about, and where women's sexuality was supposed to be hidden away, I've always been drawn to stories about exhibitionist women. I like the idea of danger, and I like the idea of being on display, or showing myself off. If I'm reading Literotica, I usually start with the exhibitionist category, and most of my sexual fantasies dating back as long as I can remember are about being in public or being watched.\"\n\n\"That makes sense,\" I said. \"I think kinks are a form of eroticized fears, and if you grew up feeling like you had to be hidden, then being on display turning you on makes total sense.\"\n\n\"Watching Miguel and Alejandra the other day was the first time I've ever seen anything sexual happening as an observer rather than as a participant,\" she continued. \"It turned me on watching them, but it turned me on even more thinking about us trading places with them. Like, I wanted to be the girl down on the beach having sex with you, and to have them be the ones secretly watching us. That also scares the crap out of me, and I'm not ready to think about actually doing anything like that. But I like the idea of taking some baby steps.\n\n\"Flashing you up there was spur of the moment. I didn't think about it beforehand, so I couldn't have time to overthink it. All I did was act. I knew you hadn't seen my tits yet, and I wanted you to see them, and thinking about showing them to you outside in the jungle turned me on. So, I did it.\"\n\n\"I'm proud of you.\"\n\n\"Thanks,\" she mumbled. \"Overthinking things I want has always been the enemy. If I have time to talk myself out of doing something, I usually can. I'm trying to be better at just doing things.\"\n\n\"I think you've been doing a good job of being spontaneous so far,\" I said truthfully.\n\n\"It's your turn now, though. Tell me what turns you on, or what category of story or porn you like, so I can feel less embarrassed about what I just told you.\" She stared at her shoes.\n\nI cleared my throat. \"I guess I'm into voyeurism too. I was turned on watching Miguel and Alejandra just like you were, but I wasn't putting myself down there. I was watching them, but I was just as turned on watching you watching them. The look on your face was so intense.\"\n\nDanielle was still unable to meet my eye, but her expression betrayed a little smirk.\n\n\"I'd never deliberately spy on someone,\" I continued, \"but if it falls into my lap, I'm happy to watch. I get turned on hearing sex in adjoining hotel rooms, and any man gets a thrill to see unexpected cleavage or a nipple popping out of a bikini top. But I also am pretty flexible. I've had girlfriends who were into BDSM, and even though I'm not into that, I've enjoyed watching them being so into it, and participating in doing things they would enjoy. I'm more submissive in that sense -- I like doing what makes my partners happy, and it turns me on turning them on.\"\n\n\"Will you help me explore over the next day and a half?\" Danielle asked. \"Would that turn you on?\"\n\n\"I'd love to,\" I said, \"though I've heard that if you're in a public space on a cruise ship, you've got a CCTV watching you somewhere.\"\n\n\"I've heard that too,\" Danielle agreed. \"I'm not okay with wandering around nude when I'll be on video. But between our two imaginations, we should be able to think of something.\" She smiled, a knowing glint in her brown eyes, as our food arrived.\n\nThe rest of our visit to Puerto Plata was uneventful. We wandered around the old city, taking pictures and sightseeing, then went for a long, romantic walk on the Malec\u00f3n, the stone walking trail on the harbourfront. As we walked, I felt my heart stirring as I held her hand. It had been so long since I'd had feelings for anyone, and yet this vibrant, beautiful, intelligent woman was charming me with her innocence and her openness. I had met her as she was in the process of growing up and becoming a new person, and I was enjoying seeing her start to discover herself.\n\nWe eventually ran out of places to walk, and as the sun sank lower in the western sky, we took a taxi back to the ship, making it back on board with minutes to spare before the Carnival Liberty weighed anchor, sounded its whistle, and began making steam towards the open ocean. Puerto Plata was our final port of call, and we now had the rest of today and a full day tomorrow at sea before making landfall and disembarking in Fort Lauderdale.\n\nAs Danielle and I made our way through the ship, we noticed people already dressed up in evening wear -- it was clearly the second formal night of the cruise.\n\n\"Do you want to come back to my cabin?\" I asked her, leadingly.\n\n\"Yes,\" she answered, \"but I'm also hot and sweaty and in desperate need of a shower, and I want to have a chance to do my hair and makeup. Let's meet up in an hour or so, and we can have dinner and enjoy formal night together before...\" she trailed off, blushing.\n\n\"Before I fuck your brains out?\" I asked with a wink.\n\n\"Yeah,\" she sputtered. \"I'd like that.\"\n\nShe kissed me one final time, then we parted ways at the ship's elevator as we went to our respective cabins.\n\nI entered our cabin to find it empty. The maid had been in to make up the bed, and our room was tidy. I noticed Lauren's green and yellow bikini hanging in the shower, and I touched it to confirm it was damp, which at least meant she'd gotten up and done something with her day. Shrugging, I quickly stripped, then climbed into the shower, soaping up and rinsing the day's sweat and grime off me.\n\nAs I washed myself, the sight and feel of Danielle's firm breasts came back to my mind, and my cock, anticipating where my mind was going, erupted into an erection. I tried to ignore it at first, knowing I had to save my strength for Danielle later, but the boner wouldn't go away. I started stroking it a little, just relieving some pressure, wondering how on earth I was going to be able to last until tonight. I was getting really turned on in a hurry.\n\nJust then the bathroom door burst open. \"Oh, hey Sean!\" Lauren exclaimed as I released my dick, startled. I saw her figure hoist itself onto the bathroom counter and regard me through the translucent shower curtain. She suddenly paused. \"Are you hard? Were you jerking off?\"\n\n\"I was trying not to,\" I said, embarrassed.\n\n\"Ha!\" Lauren cackled. \"We're finally even.\"\n\n\"What are you talking about?\" I snapped.\n\n\"You know...\" Lauren trailed off. \"The first year we lived together?\"\n\n\"What?\"\n\nLauren's voice grew quiet. \"You walked in on me flicking the bean on the couch?\"\n\n\"I did?\" I said, shocked.\n\n\"You don't remember? I couldn't look you in the eye for a week.\"\n\nI wracked my brain. \"I honestly don't remember ever doing that.\"\n\n\"Huh. Maybe I was more of a ninja than I realized. I yanked my hand out of my pyjamas as soon as I heard you, but I was positive you knew what I was doing.\"\n\n\"Well, I'm not surprised neither of us ever caught each other before, because this habit of barging in on the other in the shower seems to be a relatively new thing for us.\" I said testily.\n\nThe Lauren-shaped blob I could see through the shower curtain said nothing. \"You're right, Sean. I apologize. I shouldn't have walked in on you,\" she finally said.\n\nShe stood up and left. Fuck. \n\nI quickly exited the shower, wrapping a towel around myself as I went into the cabin, finding Lauren laying on the bed, her back to me. \"It's okay,\" I reassured.\n\n\"It's not,\" she argued. \"You're right, I shouldn't have walked in without knocking.\"\n\n\"I was embarrassed in the moment, but I really don't mind,\" I promised her. \"We've lost so many other barriers this week that what's one more? I just feel like I'd be more comfortable if I understood why things are different now between us.\"\n\nLauren rolled over, facing me. \"I don't know why they are either. But doesn't this feel right to you?\"\n\n\"Actually, yeah, kind of,\" I admitted. \"We're not a couple, but I've been enjoying how intimate we've been this week.\"\n\n\"I've been enjoying it too,\" she smiled, reaching up and hugging me. \"I like being close to a person again, and I like that it's you.\"\n\nShe smiled again, dazzling, disarming, apologetic. \"So, I'm guessing you and Danielle didn't fuck, or else you wouldn't have needed to jerk off.\"\n\n\"Not yet.\"\n\n\"Not yet implies you expect to,\" Lauren observed.\n\n\"You're correct.\" I grinned.\n\nI lay back on the bed and told Lauren the story of the day, leaving out some of the personal details but sharing everything else, including that we were planning to get it on after formal night. When I finished, Lauren high fived me. \"Good work, Sean.\"",
        "\"I really like her,\" I said.\n\n\"But you do recognize that you're leaving tomorrow, and this is just fun, right?\" Lauren suddenly looked concerned. \"You know that she has a boyfriend and, in spite of what she's told you, she may wind up back in his arms afterwards like nothing has changed?\"\n\n\"Yeah...\" I sighed.\n\n\"You also recognize that you broke up with your last girlfriend because she was too young, and now you're seeming like you're crushing on someone even younger?\" Lauren's eyes pierced into me, and I couldn't meet her gaze.\n\n\"Yeah...\"\n\n\"Sean, don't be an idiot.\" She rolled her eyes. \"Go fuck that pretty brunette all over the ship tonight, just recognize there's an end date coming tomorrow.\"\n\nI was annoyed, but Lauren was right. Of course she was. \"I just was enjoying feeling like I really liked someone again after so long,\" I finally said after a long pause.\n\n\"I'm sure you are. It's good for you. She's an excellent rebound for you, and you're an excellent rebound for her,\" Lauren agreed. \"But you have to recognize that it's not ever going to be more than that.\"\n\n\"You're right. Thanks,\" I said reluctantly. Getting slapped in the face with reality was a bit of a kick in the teeth, so I changed the subject. \"How was your day?\"\n\n\"Really, really quiet,\" she answered. \"I slept until about noon, then went down by myself to the beach and lay in the sun all afternoon. I had a swim at one point. It's been relaxing, and I think I needed the time to myself.\"\n\n\"So, you didn't see Emily?\" I asked.\n\n\"Nope.\"\n\n\"Huh.\"\n\n\"Why?\" Lauren eyed me.\n\n\"Danielle mentioned Emily wants to fuck you again, and this time she's going to fuck you properly. She told Danielle that if this is the only opportunity she's ever going to get to have sex with a woman, she has a few more things to cross off her bucket list.\" I shot her a knowing look.\n\nLauren's eyebrow raised. \"How very interesting. Thanks for the heads-up.\"\n\n\"Do you want to?\" I asked.\n\nShe shrugged. \"I probably will.\"\n\n\"Not what I asked,\" I pointed out.\n\nShe shrugged again. \"I'm craving a man. But if it's the best option I have, I'm sure I'll take her up on it. She was actually pretty good for a first timer. I'm a little curious as to what her version of 'doing it properly' means.\"\n\n\"Are you still horny?\" I asked.\n\n\"Yes, but not as much as I was last night and this morning,\" she admitted. \"Orgasms are a good hangover cure. Just cum 'til you feel better.\"\n\n\"Are you still sad?\"\n\nShe paused. \"I'm not ready to talk about it yet.\"\n\n\"We only have one day left together after this,\" I pointed out.\n\nLauren looked me in the eye. \"I know I need to deal with whatever this is. I promise you that I will talk about it with you tomorrow, before we get off the ship, and I give you my permission to push me to talk if I try to fight you off.\"\n\nI raised my eyebrows in surprise. \"You've never said that to me before.\"\n\n\"I'm scared, Sean.\" She suddenly looked vulnerable again. \"I don't know what this is, but I'm going to figure it out before my security blanket goes back to Toronto.\"\n\nI rolled in and hugged her, tightly, her arms wrapped around me, and held it for several minutes.\n\n\"Thanks,\" she finally said, leaning in and kissing me on the cheek. \"I love you so much.\"\n\n\"I love you too.\"\n\nWe lay cuddled together for another fifteen minutes or so, my towel eventually rolling off me and leaving me nude. Lauren was still obviously vulnerable, and my cock somehow behaved itself, staying soft. For the first time on the cruise, my nudity didn't seem to faze or arouse Lauren at all, and she barely glanced between my legs.\n\nAt long last we got up and started to dress for formal night. I put on the second of two suits I'd brought, a black-tie tuxedo I'd bought as the best man in a wedding years ago. Lauren put on a slinky black cocktail dress. We'd gone loud and flashy for formal night one, and we'd planned to go classy for night two. She put on a plain pearl necklace with restrained makeup, and she combed and twirled her hair up into an old-time Hollywood hairdo. We looked amazing, and we posed for a few pictures with each other before heading out into the ship.\n\nWe'd no sooner found our way into the common areas than my phone went off. Do you and Lauren want to join us for a drink before dinner? came the message from Danielle.\n\nI checked with Lauren, then texted back Sure.\n\nMeet us in our cabin, we're almost ready to go out.\n\nWe headed down to deck 3, knocked, and were quickly let in. Emily was sitting at the mirrored desk, applying makeup. A purple formal dress was unzipped around her, covering her but still giving a glimpse of her flesh-toned bra underneath. \"Danielle's in the bathroom,\" she began. She turned, put her glasses on, and for the first time, noticed what we were wearing. \"Damn, you two look good,\" she said admiringly.\n\n\"I want to see!\" came Danielle's voice from the bathroom. \"Sean, you can come in, I'm decent.\"\n\nI opened the door to the bathroom to see Danielle primping her hair. She was wearing a sparkly sequined short pencil dress in navy blue that hugged every curve of her body.\n\n\"You look stunning,\" I began.\n\nShe smiled, turned to face me, and her jaw dropped as she stared, unblinking. \"My goodness,\" she finally squeaked. \"You look so hot in that suit. I don't know how I'm going to make it to the end of the night.\"\n\n\"We don't have to,\" I volunteered.\n\n\"Trust me, I know,\" she retorted. \"But it'll be better the longer we wait.\" She motioned at me to close the bathroom door. \"I have something to show you.\"\n\nI closed the door, and Danielle quickly lifted and then lowered her skirt, showing me, for only a split second, that she wasn't wearing panties.\n\n\"OK. That's hot.\"\n\n\"I'm so turned on already,\" she agreed. \"I've never done anything like this. But I want to go out in public, to go to dinner, without underwear. It's so bad, and I've never been a bad girl before.\"\n\n\"I like you as a bad girl.\"\n\n\"I like me as a bad girl too.\"\n\nI reached my hand around to the small of her back, pulling her close into me, and I felt her body tense as we stared, briefly, into each other's eyes. For a moment, the world disappeared, and I was only conscious of Danielle's hot breath on my face, her heart pounding against my chest, her flushed face locked onto mine, nervously biting her bottom lip.\n\n\"Can we have sex? Like right now?\" she asked rhetorically.\n\n\"I wish,\" I breathed.\n\nI reached down between her legs, locking eyes on her, as I slowly let my fingertips trace up her inner thigh. She sucked in her breath as I grew closer, then slowly, gently, I stroked the tip of my middle finger up her sopping wet opening, just briefly making contact with her clit before withdrawing my finger, taking it to my mouth and licking her taste off. She let out a soft whimper and shuddered.\n\n\"You taste so good. I'm going to come back to that later,\" I promised.\n\nDanielle groaned, pulling me back close to her, pressing her boiling mound into my leg, as though struggling to relieve even the smallest amount of tension. I felt my cock harden and press into her leg in return, and we stood awkwardly for a moment, gently humping like frightened middle-schoolers at a school dance, before we straightened ourselves out.\n\n\"Later,\" I breathed.\n\nDanielle nodded, then turned and finished her hair. Shortly we exited the bathroom to see Lauren and Emily tenderly making out on the bed.\n\n\"Finally,\" Lauren grumbled, tapping her watch as Emily smirked.\n\n\"I guess there's no point in hiding, is there?\" I asked, pulling Danielle close to me.\n\n\"Let's have a double date night.\" Emily beamed as she started putting her shoes on.\n\nThe four of us went out into the ship, going up on deck to the adults-only section, where we ordered drinks and lay, the four of us, in a big, comfortable day bed, shielded by a partial roof from prying eyes on the ship's deck. There was enough room if we squished together, and I enjoyed feeling the soft bodies of two girls on either side of me as we cuddled together. The evening was cooling off, with the sun low in the sky ahead of us as the ship headed west-northwest back to Florida at what seemed to me to be the fastest speed we'd yet travelled. The sea was calm, though, and only the salt air and gentle rocking of the ship confirmed we were moving with any pace.\n\n\"I bet you could have sex in one of these without getting caught,\" Emily observed. \"The roof means you can't really see anything from behind us. We have total privacy unless someone comes around to see us.\"\n\n\"That sounds fun,\" Danielle said. She shifted her position so that her legs were slightly open. \"It's a good thing there's only open sea ahead of us, otherwise the whole world would be getting a great view of my cooch right now.\"\n\nLauren sat up unashamedly to try to look, which caused Danielle to giggle and clamp her legs shut.\n\n\"You really went commando like you were talking about?\" Emily asked her friend.\n\nDanielle blushed and nodded.\n\n\"I never thought you'd have the courage. I'm so proud of you.\" Emily reached across me to hug her friend, causing me to be squished under her tiny frame. Her breasts momentarily smushed into my face, and her leg inadvertently fell between mine, pressing up against my semi-erect bulge.\n\n\"Sean, do you have a boner?\" she asked rhetorically as she rolled off me.\n\nDanielle reached down and checked, copping a feel gratuitously, which made my cock twitch. \"I'd say so,\" she confirmed.\n\n\"Lauren, is Emily's pussy wet?\" I asked in return, sweetly.\n\nLauren immediately attacked, with Emily shrieking and giggling as she attempted to fight Lauren's hands off. Danielle and I exchanged a knowing glance and then got in on the act, each of us pinning down one of Emily's arms so that Lauren could slide her hand between Emily's kicking legs.\n\n\"I don't know if she was before, but she certainly is now,\" Lauren finally reported smugly, holding up two glistening fingers.\n\n\"This is so dangerous,\" Emily sputtered, out of breath.\n\n\"If dinner didn't start in ten minutes, I'd be tempted to say we should go back to our cabin and continue this with a little more privacy,\" Lauren interjected. \"But I haven't eaten anything all day and I'm so hungry, and I don't think I have the strength to fuck on an empty stomach. Plus, there's leg of lamb and chocolate melting cake for dinner. Two of my all-time favourites.\"\n\n\"Should we head down there?\" I asked.\n\n\"Probably.\"\n\nWith some reluctance, we headed down to the dining room. Dinner was both delicious and exquisite torture. Alejandra kept up the conversation more-or-less single-handedly as the four of us devoured our dinners in silence, as though willing time to speed up. I kept a hand on Danielle's thigh or knee for most of the meal, letting my fingertips wander on her bare leg and quietly exploring around the hem of her dress as she squirmed, unable to focus or sit still. I couldn't see what Lauren and Emily were up to on the other side of the table, but judging by the look on Emily's face and the occasional startled yelps that kept erupting out of her, it was clearly nothing G-rated. Alejandra was oblivious, but I saw Miguel watching the four of us from time to time, and at one point I caught his eye and he winked at me.\n\nFinally, at long last, dinner broke up, and four wild-eyed, horny people eyed each other in the stairwell.\n\n\"Who's going to which cabin?\" I asked.\n\n\"We'll go to ours,\" Emily responded. \"We already did it in your guys' room.\"\n\n\"Works for me,\" Danielle said.\n\nWe walked, quickly, up the stairs to our deck, quickly made our way to our cabin, and then fell into the door as Danielle attacked me, kissing me, leaping into my arms, wrapping her legs around me as I grabbed her bum to support her, carrying her to the bed and gently dropping her. She spread her legs wide, revealing her smooth vulva to me in detail for the first time, a simple porcelain-white slit, waxed smooth, that contrasted with her tanned legs. She had a hint of dark pink inner labia temptingly peeking out, and the hood of her clit looked swollen.\n\nI was tempted just to ravage her in place, but remembering what she'd said earlier, I turned instead, gesturing to the balcony door. \"Care for some air?\" I asked.\n\nDanielle stood up, unzipping her dress, then letting it fall to the floor. She had a nude-coloured strapless bra on underneath, which she also quickly removed, leaving only her sapphire pendant on. She was a sight for sore eyes as I stared at her nude body in its entirety for the first time. She was a deep bronzed colour from four days in the sun, apart from her blindingly white bikini areas. Her hair was still styled to perfection. Her breasts were just as inviting as they'd been earlier in the day, with her nipples painfully erect, and her vulva was now just a simple hairless crease, hiding its secrets as she stood before me. Her face was on the verge of losing control, wild-eyed lust obvious in her face.\n\nI held the door open for her as she stepped out onto the balcony into the warm Caribbean night. The air was thick with salt, churned up by the ship's wake far below.\n\n\"How's this?\" I asked.\n\n\"I'm terrified,\" she answered, \"and I'm so turned on.\"\n\nI reached around her from behind, pulling her close, and held her as she stared out at the dark ocean. The cabins around ours were all dark, and with our balcony light off, I was sure no one would be able to see us. The only noise was the roar of the ocean passing below us as the ship cut its way through the dark sea.\n\nMy erection roared back in a hurry as I pressed my crotch against her butt, and she started grinding against me as she stood. I leaned over and started kissing her neck from behind, eliciting a moan from her as she held my head with her hand, pressing my lips tighter to her sensitive skin. My hands explored her body, roaming over her hips, her stomach, her breasts.\n\nI soon reached down to her core from behind, collecting wetness and then plunging inside of her. She was so wet that she accepted my fingers with no resistance, and so warm that it felt hot even contrasting to the sticky warm night air. She moaned again, louder, and I started gently rubbing her g-spot with my thumb, feeling her boiling soft centre squeezing me.\n\n\"You're so wet,\" I observed.\n\n\"I've been so wet all vacation long,\" she admitted. \"Ever since I met you... you do things to me.\"\n\n\"I've wanted to fuck you since I first met you,\" I agreed. \"I've been thinking about it since the hot tub.\"\n\n\"I wish we could have had sex there,\" she breathed. \"Even with the cameras, if you'd tried to fuck me there, I would have done it. I wouldn't have been able to hold back. I haven't stopped thinking about it since...\"\n\n\"Me too.\"\n\n\"I want you to fuck me on this balcony,\" she ordered breathlessly.\n\nShe turned and frantically pulled my suit jacket off, then my tie, and started unbuttoning my shirt, quickly and hungrily. She finally got my dress shirt off, then leaned back, admiring my body for a moment, then suddenly got an odd look on her face and stopped.\n\n\"What?\" I asked her.\n\n\"What are those marks on your back?\" she asked. She was looking at my reflection in the cabin window.\n\n\"Huh?\" I looked at my back in the mirrored window, and for the first time I noticed the scratch marks Lena had left there the night before.\n\n\"Are those scratches?\" she asked.\n\n\"Uhhhh,\" I said intelligently.\n\n\"Those weren't there the other day. I'd have noticed. Have you slept with another girl on this cruise?\" she asked.\n\n\"Um... yeah.\" I admitted. \"I have.\"\n\nDanielle's face fell. \"Am I just another conquest to you?\"\n\n\"No, it's not like that...\"\n\n\"You don't owe me an answer or an explanation,\" she interrupted. \"You're a single man, you can do whatever and whomever you want. And I've still got a boyfriend, technically, out of the two of us, it's me that shouldn't be here naked on this balcony. But I really thought we had a connection that meant more than just a random hookup.\" She turned and headed back into the cabin, grabbing her dress and starting to put it back on.\n\n\"I thought we did too!\" I exclaimed. \"I really like you.\"\n\n\"You picked an odd way to show it. Zip me up.\" I did so, and she adjusted her dress back to a presentable state. \"I don't think I want to do this anymore.\"\n\n\"Danielle, please...\" I began.\n\n\"I'm not mad. I'm just disappointed. I had really wanted this. Goodbye, Sean.\" She shot me a last, sad look, and then left the room.\n\n\"Fuck!\" I shouted, throwing myself to the bed. I was angry at myself, angry at the situation, and still too aggressively horny to think straight. I pulled my cock out, freeing my erection and starting to stroke it. Meanwhile, I opened the messages app on my phone for the first time since meeting up with the girls earlier.\n\nI re-read Lena's last message from the morning telling me about her shower self-love session, and once again pictured her tiny body grinding on her vibrator in the shower that morning. I quickly sent back I couldn't respond to this until now, but I've been thinking about it all day. You interested in round two?\n\nI waited a few minutes as I jerked off, thinking about Danielle, but there was no response, and no read receipt forthcoming. I looked down the list of messages, and I noticed there was another one from someone not in my contacts list. I opened it up to see a message waiting from Hannah from several hours ago: Hey Sean, I stole your contact info from Allison's phone while she was in the shower. Lena told me you're apparently a great fuck. I'm still interested in finding out for myself. If you want to see how a real Alpha Delta Pi girl fucks, hit me up.\n\nI sighed, briefly weighed my options, and decided. I replied I'm interested. I knew I'd feel like a cad afterwards; but I'd deal with those feelings later. For now, I just wanted to get laid.\n\nThe response came back right away: I'm in the dance club. Come find me!\n\nI got up, reluctantly packing my erection away, put my clothes back on, then headed down to the ship's disco.\n\nThe disco was everything I imagined it would be -- far too loud, pulsating with light and energy, full of drunk people dancing. I instantly felt out of place. I spotted Hannah right away in the mob of people, wearing a black cocktail dress so short that it would have been illegal to wear in public in some countries. Her red hair was tied back and glowing in the disco lights. She was dancing with Andie and Olivia, and clearly fending off attention from a guy dancing nearby with a look on his face I knew well.\n\n\"Hi Sean!\" she erupted as she saw me, waving frantically for me to come join them, and hugging me as I got close. \"You look amazing! I love the tux!\"\n\n\"Thanks!\" I yelled back. \"You look amazing too!\"\n\n\"Thanks!\" She turned to face the other two girls. \"I don't think you've met Andie and Olivia!\"\n\n\"I did last night!\" I shouted, but I still shook both their hands.\n\n\"It's too loud to talk, just dance with me!\" Hannah took me by the hands, pulling me back out on the floor.\n\nI've never been a good dancer, and I avoided dance clubs at all costs when I was of the age where my friends still wanted to go there, but my cock was making decisions for me by that point in the evening, and all I wanted was easy sex. I'd be disappointed about Danielle later, but I was still too wound up for now, and so I terribly danced my heart out, trying not to feel self-conscious, letting Hannah lead and mostly aiming not to be noticed.\n\nHannah, for her part, was also slightly awkward on the dance floor, generally moving slightly ahead or behind the rhythm. She was ignoring the other guy and focusing on me so studiously that he eventually gave up and moved on to another girl. She was again clearly not wearing a bra, and her breasts bouncing freely in her dress was a beautiful sight in the pulsing disco light. I kept touching her, trying to flirt, which she allowed, but didn't reciprocate, and after a while I gave up on flirting and just danced.",
        "At long last, the girls decided they needed a break, and the four of us spilled out into the corridor.\n\n\"Lena gave a pretty glowing review of your prowess last night,\" Olivia opened, smiling.\n\n\"A gentleman doesn't kiss and tell,\" I responded, \"but I'm glad she was happy.\"\n\n\"She was more than happy,\" Olivia added. \"She was practically glowing.\"\n\n\"And I'm next in line, bitch, so back off,\" Hannah interjected, only half-joking.\n\nOlivia giggled. \"You can have him tonight as long as the bride doesn't say no. She's got first pick, right?\"\n\n\"You can have him,\" Andie said dismissively, shooting me a withering look and turning to walk away. \"Come on, Olivia.\"\n\nOlivia flashed me a sympathetic glance as the two women disappeared.\n\n\"She's just jealous,\" Hannah said as soon as the girls were out of earshot. \"Her fianc\u00e9 Connor is such a tool. I don't think she's been laid properly in a long time.\"\n\n\"I wouldn't have fucked her anyway, in spite of her and Olivia talking about me like an inflatable sex doll,\" I said, both mildly offended and amused.\n\nHannah grinned. \"Would you fuck Olivia?\"\n\n\"Is that a trick question?\"\n\n\"Relax, Sean.\" She smiled disarmingly. \"Sorority girls share their boys sometimes. It's no big deal.\"\n\n\"I don't know her well enough to comment,\" I said. \"She's pretty. But just now was the first time I'd ever spoken to her.\"\n\nHannah shrugged. \"Fair enough.\"\n\n\"I'm sure Olivia isn't hurting for male companionship on this cruise, if that's what she's after,\" I added.\n\n\"She's not,\" Hannah confirmed. \"And I can understand why you wouldn't want to fuck the version of Andie that you've met; her bridezilla syndrome has been getting on all our nerves.\"\n\n\"She seemed pretty into that long-haired guy the other night,\" I remembered.\n\n\"He was all talk and no follow-through,\" Hannah revealed. \"It was a big disappointment for her. She'd had high hopes.\"\n\n\"Isn't that cheating?\" I asked rhetorically.\n\n\"Meh.\" Hannah shrugged. \"Allison couldn't shut up about the hot guy she hooked up with last night. We saw them together, and he's way out of her league. He's gorgeous, and Allison... well, she told me she told you about her issues with her sister. Lena and Olivia had good sex last night too, one of which you damn well know about. You stud.\" She grinned. \"Andie had a major disappointment. I heard that guy lasted less than a minute. She's just feeling jealous, since she's the bride and thinks she deserves the best of everything. And she's always had a bit of a princess complex.\"\n\n\"Isn't it a little weird being at a bachelorette party where the bride's trying to cheat on her fianc\u00e9?\" I asked.\n\n\"I hope they break up,\" Hannah responded honestly. \"Besides, I'm not her Mom.\"\n\n\"Fair enough.\"\n\nAn awkward silence descended between us.\n\n\"She never used to be like this,\" Hannah added, almost apologetically. \"She used to be a lot of fun. But now she's marrying a man she doesn't love for his money, and having money's changing her. I miss the old Andie.\"\n\n\"I'm not getting involved,\" I said, \"but I've gotten to know three of you girls so far and I've liked all of you. At a minimum she has great taste in friends.\"\n\n\"That she does!\" beamed Hannah.\n\n\"So... can I buy you another drink?\" I asked hopefully.\n\n\"We can just go back to my cabin if you'd rather,\" she answered.\n\n\"I'd rather.\" I smiled and took her hand as she led me down the stairs to a familiar section of the second deck, one door over from the room where I'd been last night. Hannah slid her keycard into the lock, and we walked in to see Oliver, bare-assed, laying into a naked Allison with the stamina and power of a varsity athlete as she rested her ankles on his shoulders.\n\n\"Don't you knock?\" Allison shrieked, covering herself with a pillow. I took a quick mental snapshot. Lauren had been right; she did have nice tits.\n\n\"Hey, Sean,\" Oliver deadpanned.\n\n\"Hey, Oliver,\" I responded.\n\nWe quickly apologized and retreated, slamming the door behind us as Hannah burst out laughing. \"Whoops. I wasn't expecting to have this problem when I agreed to share rooms with Allison. But I'm happy for her.\"\n\n\"Me too.\"\n\nWe paused for a moment.\n\n\"So... my room?\" I asked.\n\n\"Why not?\"\n\nWe quickly headed to the elevators, taking them up to deck seven. I checked my phone for messages from Lauren, but there were none, and our room remained unchanged from the way we'd left it a few hours before.\n\nI wasn't sure what to expect. While I was still horny, the feeling had abated a little bit, as unlike the night before, there had been zero sexual tension between Hannah and myself. Last night she'd been drunk and obviously into me; tonight, she was sober and seemed relatively blas\u00e9 about the idea of hooking up. But all that changed as soon as we got into the room.\n\nThe door had no sooner closed behind us that Hannah stopped me, pushed me against a wall, and dropped to her knees, unzipping my fly and pulling my cock out. It was starting to get angry from being constantly called upon without the chance to release, and I reached full erection in her hand within seconds.\n\n\"Damn, Lena was right,\" Hannah said approvingly.\n\n\"About what?\"\n\n\"She said you had a really nice cock. Very girthy.\" The redhead took a breath and took me in her mouth.\n\nHannah's blowjob skills were off the charts. She started slowly, licking from my balls to the tip and back with the firm tip of her tongue, teasing me, knowing exactly where it felt good. She kept on making eye contact, her green eyes devouring me as I disappeared between her lips. In time, as my cock was starting to cry out for more attention, she took more of me in her mouth, adding a hand to gently stroke me as she licked and sucked on my head. She seemed to have a sixth sense for what I was wanting her to do next, and she kept giving almost, but not quite, what I wanted. The tease was exquisite.\n\n\"Holy crap...\" I moaned.\n\nShe cooed with pleasure as she kept going, fluttering her tongue against the underside of my head, then pulling back and stroking me for a bit, then going deep throat for a second or two, then back to teasing.\n\nIt didn't take me long to feel like I was on the edge of an absolutely epic orgasm. \"I'm going to cum soon if you don't slow down,\" I warned her.\n\n\"Isn't that the point?\" she responded. \"You'll return the favour, right?\"\n\n\"Of course I will!\" I'd have promised her my stock options and Christmas bonus at that point, all I wanted was to cum in her mouth.\n\nShe stopped. \"You will what?\"\n\n\"I'll eat you out!\"\n\n\"Tell me what you'll do to my poor horny pussy. She needs to know she's in good hands with you.\" Hannah was totally in control now, stroking me gently to keep the tension up but not enough to get me off. I was putty in her hands, and she knew it.\n\n\"Ugh! I'll start down low, licking around the opening, up and down your labia...\"\n\n\"Uh-huh...\"\n\n\"I won't go near your clit until you're begging me for it!\"\n\n\"Good boy.\" She started stroking me a little firmer. \"Too many men just dive right in. I like being teased.\" She went back with her mouth again, blowing me hard and fast for about seven seconds, then stopping again. \"What next?\"\n\n\"God, you're evil!\" I exclaimed.\n\n\"Maaaaaaaaaaybe.\" She grinned. \"Don't you want to cum, big boy?\"\n\n\"So badly!\"\n\n\"I said tell. Me. What. Next.\" She bored into me with her green eyes as my cock rested against her freckled cheek.\n\n\"I'd slide two fingers inside you!\"\n\n\"Uh-huh...\" Lick.\n\n\"I'd rub your g-spot while I was licking the outside!\"\n\n\"Uh-huh...\" Lick lick.\n\n\"Two fingers in a come here motion!\"\n\n\"I like it when guys do that.\" Lick lick lick.\n\n\"I'd finally start flicking circles on the hood of your clit with my tongue while I fingered you!\"\n\n\"That would definitely make me cum,\" she confirmed. \"Okay, give me your sperm.\"\n\nShe deep-throated me again, nearly swallowing me and stroking around the remaining base of my cock. The sensation was almost too intense to bear, but she held me right on the good side of that line before finally sending me over the edge. I groaned and my knees buckled as I splattered my cum to the back of her throat as she held onto me, refusing to release me as I rode through the strongest orgasm I could remember having in years, wave after wave of powerful contractions. When it finally ended, I collapsed to the floor, completely and utterly spent as Hannah stood up, towering over me. I could see purple panties up her short dress.\n\n\"And that's how Alpha Delta Pi girls give head. Now, did I do that better than Lena did?\"\n\nI whimpered on the ground and nodded, brain still not fully functioning.\n\n\"I'll give you a minute. When you're ready, my pussy's not going to eat itself.\"\n\nI saw her walk to the bed, stripping off her dress and then lowering her panties. She lay down, and while I couldn't see her well from where I was laying, it looked like she was starting herself off without me. I could see lazy, repetitive movements from her hand reflected in the shadows on the ceiling.\n\nCome on, Sean. Get it together. Return the favour.\n\nI forced myself to my feet, and saw Hannah laying in my bed, legs open, smirking at me. She was thin -- on the verge of being too thin -- pale head to toe, creamy alabaster skin sunburned red in places, freckled from head to toe. Her face and chest were flushed. She had a red landing strip -- the carpet clearly matched the drapes -- and erect nipples so pale as to nearly be invisible. She'd let her full hair down from how it had been tied up on the dance floor, and it curled luxuriantly from her head nearly down to her breasts. Her middle finger on her right hand was rubbing circles between her legs, slowly and without any urgency.\n\n\"That was the best blowjob I think I've ever had,\" I began.\n\n\"I know.\" She grinned. \"I'm not the best at many things, but I give fucking great head.\" She regarded me expectantly. \"Now get your fucking suit off and show me you're not all talk.\"\n\nI quickly stripped nude as Hannah watched eagerly, then I motioned for her to come to the edge of the bed, the same position Lauren had been in two nights previously as I watched Emily eating her out. I momentarily had a sense of d\u00e9j\u00e0 vu, and quickly checked under the bed -- nope, no Lauren, only suitcases. I then focused my attention on Hannah's vagina.\n\nHers was a pretty one, neat and compact, pale pink inner labia so small as to nearly disappear inside of her. Her clit was tiny, one of the smallest I'd ever seen, and barely visible as a pinprick beneath its hood. She was wet already, very wet, radiating heat from between her legs, and I began with a slow, languorous lick beginning at the bottom of her vaginal opening, and slowly moving up the hole towards her clit, inching ever closer, then detouring away, trying my very best to torture her.\n\nWith my orgasm already over and my penis feeling like I'd be satisfied for another decade to come, I felt no urgency, and I really took my time with Hannah. She was a quiet lover, but as I licked and tongued and fingered her, I learned how to recognize her signals -- an intake of breath, a sharp exhale, a rocking of her hips to try to move closer to where she wanted me. I alternated between denying her what she wanted and giving it to her, trying to prolong the buildup for as long as I could. Her tiny, delicate clit was barely recognizable, just a tiny firm spot under the tip of my tongue, most easily recognizable from the way she gasped every time I grew near it. I tried to avoid it as much as I could. Occasionally I made eye contact with her as her green eyes watched me work, but for the most part her eyes remained closed, lost in her pleasure, her hands tweaking and playing with her nipples or gripping the bed for support.\n\nI could tell she was starting to get closer when her vaginal opening started to intermittently contract around my fingers, and I took that cue to pull back.\n\n\"How have I been doing?\" I asked innocently.\n\nShe sat up with a start, suddenly jolted out of her fantasies. \"Don't you fucking dare use my own tricks against me!\" she spat out furiously.\n\n\"I don't know what you're talking about.\" I fully disengaged from her vagina, looking up at her.\n\n\"Get back down there!\" she ordered, gesturing and trying to push my head back between her legs.\n\n\"How badly do you want me to?\" I asked, resisting.\n\n\"Fuck you, Sean.\" She slid her hand down between her legs, seeking her clit, but I swatted it away.\n\n\"That's the wrong answer.\" I stared her in the eye for a moment, then, without looking, idly tapped her clit directly, once, up under its hood, causing her to shriek and jump involuntarily.\n\n\"Aaaaaaaaaaargh! Just make me cum, okay?\"\n\n\"What's the magic word?\" I was enjoying the revenge.\n\n\"Make me fucking cum, please!\" Hannah was growing desperate as her hips started rocking against me, trying to find any stimulation she could get.\n\n\"OK, but only because you asked so nicely.\" I gently shoved her back down to the bed and dove back between her legs, and I started fingering her firmly and quickly as I lapped as fast as I could on the hood of her clit. Her hands grabbed the back of my head, holding me between her legs. For the first time, she started really moaning audibly, her body tensed, and then the contractions started, six, seven, eight intense, rapid-fire pulses on my fingertips, firm enough to be nearly uncomfortable. At last she finally exhaled, and I felt all the tension leaving her body as she turned to jelly.\n\nI climbed onto the bed, pulling her into me, feeling heat and sweat glowing from her bare skin. She lay there breathing hard for a few moments, then sat up. \"Not bad, Sean.\"\n\n\"Not bad?\"\n\n\"A solid six out of ten.\" She grinned.\n\nI raised an eyebrow.\n\n\"Fine! Lena was right. You're very good at eating pussy. Are you happy?\" She rolled her eyes.\n\n\"Very happy. Do you want to have sex?\" I asked, not at all sure if I'd be able to follow through on the offer.\n\n\"I'm good. One really good orgasm is usually enough for me. We'll have sex tomorrow.\" She started to dress. \"I'm not much of a cuddler, and I'd rather sleep in my own cabin if it's all the same with you.\"\n\n\"I've got a roommate coming back tonight anyway, I assume, so that's fine with me,\" I agreed.\n\nI watched her pull her purple panties back on, then I zipped her back into her dress. She headed for the door as I followed, nude.\n\n\"Thanks for a lovely evening,\" she said quietly and without feeling.\n\n\"You too.\" I leaned in and kissed her, for the first time, quick and gentle before she pulled back.\n\n\"Good night.\"\n\n\"Good night.\"\n\nWith that, she was gone. I went back to my phone and checked, but there were no messages. Lena still hadn't seen the message I'd sent her hours before. Lauren and Emily had been gone for hours as well, and I was starting to wonder if I'd see her again that night. I was worn out from an epic orgasm, and starting to feel the regret creep in -- I'd been rejected by the one girl on the ship I had really wanted to be with because I'd slept with another girl, and I'd dealt with that rejection by sleeping with a different other girl. God, I'm such an asshole.\n\nI collapsed into bed, killed the light and covered myself, feeling depressed. I'd hoped to spend tonight sleeping in this bed with Danielle. I'd slept alone for many years, and I was used to it, but tonight was the first night in ages that I really missed feeling another person lying beside me. I hoped Lauren was having a good night, and I thought about texting her, but ultimately, I resigned myself to a night alone. I lay awake for a long time, staring at the ceiling, feeling the ship rocking, and eventually fell asleep. Tomorrow would be our last day on board, a full day at sea, and I hoped it would end better than today had ended."
    ],
    "authorname": "thatsbogus",
    "tags": [
        "bachelorette",
        "blowjob",
        "brunette",
        "cruise",
        "cunnilingus",
        "dominican",
        "exhibitionist",
        "good girl",
        "hiking",
        "redhead"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-pleasure-cruise-ch-04"
}