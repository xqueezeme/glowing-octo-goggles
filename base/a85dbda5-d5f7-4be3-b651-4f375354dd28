{
    "title": "Imperfections",
    "pages": [
        "This is a work of fiction. Names, characters, places and incidents are either products of the author's imagination or are used fictitiously. Any resemblance to actual events, locales or persons is entirely coincidental.\n\n*****\n\n\"So what brings you clear out here to Golden?\" he asked, eying the Massachusetts plate on the front of my Tempest with an expression of mild suspicion. He turned the key in the front door and motioned me in.\n\n\"Well, I'm actually a Colorado native,\" I replied. \"I just finished my engineering degree at MIT, but I'm going to be starting my masters at the School of Mines this fall.\" I noted that this seemed to satisfy him, but didn't pay it too much mind. I was too busy checking out the \"furnished two-bedroom house\" the stooped old man was showing me.\n\nThe word \"house\" might have been a bit grandiose for this particular dwelling. It was in the old part of town and was more of a cottage in actuality, but it appeared to be nicely maintained on the outside and the stoop had a decent view of the huge monogrammed \"M\" up on Mount Zion.\n\nThe interior was a mixed bag. Most prospective renters would have wanted the more modern wall-to-wall carpeting, but I loved the old, worn oak floors. The living room featured a fireplace and sturdy built-in bookshelves that filled an entire wall, a great feature for a bookworm like me. The bathroom had been recently remodeled with neutral colors and the tub/shower unit had sliding glass doors. There was even a massaging showerhead, likely left by a previous renter.\n\nOn the other hand, it was obvious that the kitchen hadn't been updated in a quarter century. By this time, in the summer of 1985, even Avocado Green and Harvest Gold had mostly been replaced by Almond and White, but these particular appliances still soldiered on in 50's vintage turquoise.\n\nOne of the bedrooms was laughably small, useful as an office at best, but the living room and other bedroom were reasonably large. The furniture was about what you would expect in a rental, but didn't look too bad. All things considered, the cottage met my specifications just fine.\n\nExcept for one thing.\n\nHe probably caught my frown. \"I guess you noticed that there aren't any beds,\" he said, perhaps a bit defensively.\n\n\"Well, yeah. The ad did say 'furnished'.\"\n\n\"Well, over the years I've found that beds get trashed more often than the rest of the furniture. It was costing me a lot of money. I don't supply beds anymore, but I lowered the rent some to make up for it.\"\n\nI decided that it was just as well. I'd had a run-in with bedbugs back east and it might be a good thing to be able to pick out my own sleep surface this time.\n\n\"I guess I could get my own,\" I allowed.\n\nHe nodded slowly. \"I usually try to rent to mature folks. You sounded older over the phone. You're not the kind of kid that throws wild parties are you?\"\n\nI could tell by the look in his eye that he'd be a hard one to fool. It was a reasonable question though. During my undergrad days, I'd lost my share of a deposit, plus some, when a couple of my apartment roommates hosted a blowout that got a bit out of hand. I'd been at work on a late shift when it happened, but had gotten stuck with the consequences nonetheless.\n\n\"No sir,\" I replied, meeting his eyes, \"I'm also starting a full-time job with a local engineering firm. With classes and work, I'll be lucky to find time to sleep.\"\n\nHe just nodded, but I could tell he'd decided I might make an acceptable tenant. \"Well, what do you think?\"\n\n\"The ad said $450 a month?\" That was serious money, but a fraction of what a place like this would have cost me back in the Boston area.\n\n\"Yup, with gas and electric included, and furnished as is. You can add up to two other people to the lease for an extra $50 each.\"\n\nI nodded.\n\n\"A month,\" he added, rather unnecessarily.\n\n\"I think it's going to be just me, but I'll keep that in mind,\" I said.\n\nI'd kept myself going all through my undergraduate years by promising myself that as soon as I graduated, I'd live in an actual house for the first time in my life. Renting this one just for myself was a guilty luxury I could now afford, if only barely. My job was entry-level and my scholarship modest, but if I was reasonably smart with my expenses I could swing it. Even if it had been just to myself, a promise is a promise.\n\n\"Okay, I'd like to take it, Mr. Cabrini. I've got a list of references if you need them.\" He gave me an approving look. The fact that I'd offered them without his asking had evidently impressed him.\n\n\"Oh, you seem trustworthy enough. It's yours.\"\n\n\"Great. I guess I'd better start looking for a bed, then.\"\n\nHe nodded. \"You'll probably want to do that before you return your U-Haul. That'd be a lot easier than strapping it to the roof of your car.\"\n\n\"That's good advice, sir. When can I move in?\"\n\n\"The minute you sign this contract,\" he said, pulling a multipage document out of his battered leather folder, \"and pay first month's rent. And the $300 deposit.\"\n\n\"Do you take cash?\" I asked, reaching for my wallet. It was most of the money I had left, but I'd budgeted for this.\n\n\"I guess I'll be leaving the keys here with you,\" he said with a yellowed smile.\n\nIt took me about a half hour to unload the trailer that had been attached to the back of my beater Pontiac since I'd left for Golden. Mr. Cabrini's advice about using it to bring home a bed made sense, but I was exhausted from three days of driving, sleeping fitfully in the back seat each night to save money, and then most of a day of apartment hunting. I guiltily decided to just lie down on the couch for a few minutes, knowing that it might end up being a lot longer.\n\nI needn't have worried. The springs in the couch were so broken down that the central support dug hard into my side. I got back to my feet and looked around. The wood floors were complemented by linoleum in the bathroom and kitchen. The couch cushions were permanently attached, so I couldn't put them on the floor. There wasn't a reasonably soft horizontal surface in the house. I didn't want to blow any more of my limited funds on a night in a motel, so unless I wanted to sleep on a hard floor, or in my car for a fourth night in a row, I needed to buy a bed tonight.\n\nI was due to start work in a couple of days, but my first paycheck wouldn't be until the end of the month. After shelling out for the cottage, my funds were severely limited and I had no line of credit. I was going to have to do this on a shoestring budget, so used was the word of the day.\n\nThe classified offerings in the Golden Transcript were thin. Three of the beds had been sold and the two I looked at were of highly questionable hygiene standards. There was only one ad left. \"Used waterbed $150.\" It struck me that at least with one of those, you'd never have to worry about blood sucking vermin living in the mattress. I'd never owned a waterbed, and this one seemed kind of expensive compared to others I'd seen in the past, but it was after dinnertime now and I was running out of options. I called the number from a pay phone.\n\n\"Hello?\" The female voice that answered sounded young and smoothly melodic, which reminded me of a grim statistic. The male to female ratio at the Colorado School of Mines was about five to one, much worse than even MIT.\n\n\"Uh, yeah,\" I said, starting out awkwardly as usual. \"I'm calling about the waterbed for sale?\"\n\n\"Sure. It's a king-size with a bookcase headboard and twelve-drawer pedestal. It's in really good shape, too.\"\n\nOnly then did it occur to me that there was another consideration. The whole goal of buying a bed this afternoon was to have something to sleep on tonight, but it was unlikely that I could drain, disassemble, move, reassemble, fill and warm up a waterbed in the amount of time I had left.\n\n\"Is it set up?\"\n\n\"Yup, and it's filled at the moment so you can check it out, but I'm going to have to drain it in the morning because I'm moving tomorrow. I really need to sell it because I can't take it with me.\"\n\n\"Well, here's the problem,\" I said. \"I was hoping to get a bed set up in my new place tonight and I've heard that draining a waterbed can take hours.\"\n\n\"Not a problem. I live up on the third floor, so if we ran the hose out the window and down to the storm drain it would siphon out in like twenty minutes, especially since I have a hose. The rest of the disassembly would take less than a half an hour and I'd even help you load it up.\"\n\nAsk around and probably not one person in fifty could tell you what diameters garden hoses come in, much less that a three-quarter inch is relatively big. This girl also knew that a siphon works progressively better as it has more drop. As a certified engineering geek, I was intrigued.\n\n\"I suppose that might work,\" I allowed, but there was still the setup and fill, not to mention that this thing would be huge. While my larger bedroom had plenty of space for it, I really didn't see the need.\n\nThen there was the price. That kind of money would get me into a brand new standard full bed, albeit at very basic quality, and I already owned full-size bedding.\n\nEverything about this deal was wrong and I knew I should just forget it, but logic had now been relegated to the back seat. I just really wanted to meet this girl. I tried not to think about the likelihood that she'd be three hundred pounds and/or married. Instead I reasoned that since she was up against a deadline, I could probably talk her way down from her asking price and get her to throw in whatever bedding it had. After all, the bed would fit in my room and if I didn't manage to get it set up quickly enough, I could still throw enough clothes down on the floor to survive another night.\n\n\"Where and when can I see it?\" She gave me the address, saying that she'd be able to show it to me in about an hour if I wanted to swing by. I agreed immediately, hoping I didn't sound overeager.\n\n\"What kind of vehicle do you have?\" she asked. \"With all the drawer units, the bed's pretty bulky.\"\n\n\"I've still got my U-Haul. That shouldn't be a problem.\"\n\n\"Great. Where did you move from, if you don't mind my asking?\"\n\n\"The Boston area. I'm starting a new job at RJS Composites on Monday.\"\n\n\"Really? I've heard that's a pretty cutting-edge kind of place. What do you do?\"\n\n\"I'm an aerospace engineer,\" I said, not mentioning that I was entry-level and still sopping wet behind the ears.\n\n\"Cool,\" she said, like she meant it. \"I'll look forward to meeting you.\"\n\n\"Likewise.\" I hung up the phone smiling.\n\nWith an hour to kill, I headed back to my new place to get cleaned up a little. I'd taken a sponge bath in a rest area bathroom stall and washed my hair in the sink that morning, but hadn't had a real shower and a good shave in days. Now was the time, because like they say, you only get one chance to make a first impression.\n\nWhen I arrived at the address she'd given me, I found an upscale apartment complex of maybe half a dozen buildings. I parked in the central lot and went looking for her apartment. Naturally it was in the one furthest away. As I went up the outside stairs, I noted that they were narrow and the landings were unusually tight. Poor work on the part of the architect, I figured, and it would make getting the bed down to the trailer a real pain. No wonder she was having trouble selling it.\n\nThe rumble of distant thunder called my attention to the dark clouds coming over the mountains, announcing the imminent arrival of an evening storm. These were a near daily occurrence along the front range of the Rockies in late summer, but today's edition looked particularly ominous. This whole deal was looking worse by the minute.\n\nI knocked, now certain that I'd be meeting a fat hausfrau, but when she opened the door I found myself face-to-face with a tall, young brunette in a halter sundress. She had dark eyes, flawless olive skin, glossy hair pulled back in some sort of fancy style, and a distinctive, yet somehow very attractive, Roman nose.\n\n\"Hi, I'm Alan,\" I said, surprised at myself for not stumbling over my words for once. \"I called about the waterbed.\"\n\n\"I'm Rachel,\" she said. \"Nice to meet you, Alan. Come on in.\" She closed the door behind me, then led the way. I noted that other than several tall stacks of moving boxes on the kitchen tile, the apartment was cleared out to the bare walls. It appeared to be ready for the next tenant to move in.\n\n\"I've got all the windows open because I cleaned the carpets today and I need them to finish drying out,\" she said, evidently in apology for the steady stream of air blowing in through the back windows and out the front. \"They cut me some slack on my move out date in return, but I still have to be out by the end of the day tomorrow.\" The breeze felt good at the moment, but I could smell the building storm on it.\n\nAs I followed her down the hall, I observed that Rachel was slim and athletic, with just enough curves to her body to give her a nicely feminine look. I liked the way her open-backed dress displayed the glowing smoothness of her skin and the lithe movements of her hips as she walked.\n\nI reminded myself that I was here for a waterbed, not a date, and that Rachel was way, way out of my league, but I was still nursing the faint hope that my love life would improve following my undergrad years.\n\nI'd attended college on an extremely tight budget, working full time to supplement my small scholarship. It's not easy to get out and party or do much dating when you share a two-bedroom apartment with three other guys and deliver pizza six nights a week. That was my excuse and I was sticking to it.\n\nThe waterbed sat alone in her otherwise empty room. \"Go ahead and take your time looking it over,\" she said. Then, conversationally, \"I'm a senior at Mines and I'll be sharing a room to save money at my new place. I won't have space for this thing.\"\n\nThen the tone of her voice saddened and I glanced over to see that she was frowning. \"In fact, I'm going to be stuck on a top bunk in a really nasty basement apartment with five other girls.\"\n\nThat had to suck. It sounded like my undergrad experience. While I'd personally liked most of my many roommates, I was a basically private person and hoped I wouldn't ever have to live in such close proximity to a bunch of other guys again.\n\nI looked the bed over. When I'd seen waterbeds in the stores, they'd been consistently at the bottom end of the craftsmanship scale, often closer to rough carpentry than furniture, but this bed was impressive. The rails were made of an extremely high-quality hardwood and fit neatly into turned corner posts. The drawers were faced with the same wood, had clean dovetail joints and rode on ball-bearing glides. The doors in the tall bookcase headboard had the newfangled European hidden hinges, and the bed positively glowed with a light cherry stain done to a much higher standard than the spray-on finishes typical of the genre. The side rails were thickly padded and covered in real leather instead of vinyl, and the bed was made up with a set of royal blue sheets and pillowcases in what felt like a very high thread count. The whole thing was topped with a colorful sunset-themed comforter. It was an exceptional package.\n\n\"The bedding comes with it and I replaced the heater last year,\" she said. \"The hose with the fill and drain kit is in one of the drawers, along with an extra set of sheets. The whole thing comes apart with just a Torx wrench and there's one of those in there too.\"\n\n\"This is really fantastic workmanship,\" I said, impressed that she knew what a Torx wrench was. I'd already decided that I wouldn't dare insult her by trying to talk her down from her asking price. This thing was easily worth triple that. \"I can't imagine a company putting this much attention to detail into a waterbed and making any money at it.\"\n\nHer face took on a wistful expression. \"My father owned a custom cabinetry shop for a while and he made this for my twelfth birthday, but there comes a time when you just have to let go.\"\n\nWow, sentimental value. Now I felt really guilty about buying it at such a low price, but then reasoned that if I didn't, someone else would. \"He obviously put some love into it,\" I said.\n\n\"That he did.\"\n\nI gave the mattress an experimental push. It didn't feel like I'd expected.\n\n\"The original mattress sprung a leak two years ago,\" Rachel explained, probably seeing the surprised look on my face, \"so I had an excuse to get one of the new zero-motion ones. Go ahead. Lie down and check it out.\"\n\nI felt a little self-conscious lying down on the bed of a girl I'd just met, but I kicked off my sandals and gently worked my way over the rail. I still expected waves, despite what she'd just told me, but it felt more like I was lying down in a layer of oozing mud, conforming perfectly, yet not moving much once I was in position.\n\n\"Wow, it really is zero motion.\"\n\nRachel nodded. \"They say it's great if there's more than one person, because you don't jostle your partner when you get in and out of bed.\"\n\nIt seemed possible to me that Rachel was probing a little to see if I was attached. \"They say?\" I teased, maybe probing a little myself.\n\n\"You tell me,\" she said with a prim smile, walking around to the other side of the bed and laying down next to me. Well, not really next to me. It was a king-size after all, so there was still a lot of space between us.\n\n\"I'll bet you hardly felt that,\" she said.\n\nI looked over at her. \"Very nice.\"\n\nAs soon as the words were out of my mouth, I realized that they could be taken in a number of different ways. If she decided to treat them as a compliment of her excellent supine form, though, that was fine with me.\n\nRachel just nodded. I would have guessed that she would get up again right away, but I could easily understand why she didn't. The clouds had moved in over the last couple of minutes, and with the suddenly cooler breeze coming in the window, the warmth from the heated mattress felt really good.\n\nRachel sighed in evident relaxation and closed her eyes. Maybe she was just hamming it up to help get the bed sold, but I used the opportunity to check her out some more.\n\nShe really was lovely. I liked the way her breasts flattened only slightly when she was on her back. They weren't overly large, but they rode quite high and proud on her chest. It might just have been the result of the breeze, but I could see her nipples standing up hard under the light floral fabric of her dress. It was obvious that she wasn't wearing a bra and, while I hadn't ever been a fan of the braless look, with breasts like hers I had zero objections.\n\nHer face wasn't what you would call \"cute\" in the modern sense, but it had that undeniable classic beauty that I'd liked immediately. I'd already witnessed that it really lit up when she smiled, and she seemed to smile a lot.\n\nIt was then that the inevitable rain started. Since her apartment was on the top floor, we could hear the pitter patter on the roof. Seemingly within seconds it went from sprinkle to drizzle, then to hard and steady.\n\nRachel opened her eyes, looking past the foot of the bed and out the window. \"Since the parking lot is miles from here, there's no way you'll be leaving without getting drenched.\"\n\n\"Well then, I hate to impose, but would you mind if I holed up here, just until it stops?\" That was a bit daring for me, but somehow, with Rachel, it just felt natural.\n\n\"Not an issue. This is a rare night off for me and I was going to spend the evening right here, reading a book. I'd offer you a chair and refreshments while you wait, but...\"\n\n\"This is a lot more comfortable anyway.\"",
        "\"It sure is.\" She stayed right where she was. Happily, she didn't seem to be in any hurry to sell the bed.\n\n\"So Rachel,\" I said, \"I'm going to be working on my post-grad at Mines, but I've been in this town less than twelve hours. What can you tell me about it?\"\n\nSo she spoke about Golden, its small-town feel, its mining history, where the good shopping was (she knew the best places for guy's clothing too) and where to find the best hiking trails. She raved about the tours she'd taken at the National Renewable Energy Lab, the Coors Brewery (free samples!) and the National Earthquake Information Center, which was right on campus. Rachel was positively giddy about the cool technology she'd seen. I liked that in a pretty girl.\n\nWhile it continued to rain, we talked for an hour or so about our respective college experiences. She was working on a double major in physics and mathematics, and hadn't yet decided whether she was going to teach or go into industry. She'd grown up in Oklahoma, but had fallen in love with the mountains and really wanted to stay in Colorado after graduation.\n\nRachel had lived in the dorms as a freshman, then shared this two-bedroom apartment with a female friend of hers for the last two years. A recent setback in her stock portfolio, though, had left her with a serious shortage of financial resources.\n\n\"My mom funded our college accounts with an inheritance from my grandfather,\" Rachel explained. \"It really wasn't all that much, but I managed to get a really big scholarship and my account was going to be enough to pay the rest. Since it tanked, though, I've had to wait a lot more tables and cut my expenses to the bone.\n\n\"My family has no money to spare and I really don't want to take out any loans. I'm going to use up the rest of my principal by the time I graduate this spring, but if I'm careful, I can get there.\"\n\nShe had a tight budget in college? I could sympathize, and I too hated the idea of student loans.\n\nRachel admitted to being something of a homebody and that she hated parties and the bar scene. \"I have friends, but I also like my alone time,\" she said. \"Why would I want to get drunk and try to scream over loud music if I could sit home in a comfy chair with a good book?\"\n\nThat kind of attitude was way out of the norm in the college sphere, but she said it as if it was the most obvious thing in the world. And to me, it was. Most of the weight in my U-Haul had been boxes of books, now sitting on my living room floor, patiently waiting to be placed into those built-in bookshelves.\n\nI told her about my four years at MIT; the amazing instructors, the intense academics, and the competition from the vast array of top students from all over the world. We'd done an awesome team robotics project during my senior year with the sponsorship of a major manufacturer. I'm sure I was quite animated about it, engineering being my passion, but Rachel was right there with me, swapping stories about her instructors, fellow students and the incredibly competitive environment at the School of Mines. I realized quickly that she was, at the very least, my match academically, and probably a lot smarter too.\n\n\"I guess I'm just kind of a nerd at heart,\" she admitted.\n\nI'd never met such a gorgeous nerd. If I'd been a little braver and self-assured, I'd have told her so. \"There's no 'kind of' in my case,\" I told her instead. \"I'm hardcore.\"\n\nEmboldened by her admissions, I told her about how I'd been so incredibly busy that I'd had very little time for socializing. Then, not being very bright, I admitted that I'd been more comfortable that way, having a plausible excuse for not being more social, and that I hadn't even had a date in three years.\n\nWhen that last bit left my mouth, I mentally kicked myself, figuring that I'd just blown it. What kind of moron tells a beautiful woman that he's that big a loser?\n\n\"You don't seem all that shy around me,\" she pointed out, not seeming to judge me for it. I heaved an inward sigh of relief.\n\n\"Well, somehow you just seem different, Rachel. Maybe I just picked up that you're a shy person too.\"\n\nShe nodded her head contemplatively. \"Yeah, maybe that's why I feel so relaxed around you.\"\n\nWe lapsed into silence for a while, just listening to the rain on the roof and savoring that comfortable feeling.\n\nThe rain finally eased up. \"So where in Oklahoma was your dad's cabinet shop,\" I asked, avoiding talking about the bed. Once money exchanged hands I'd have felt duty bound to start the process of taking it down and moving it. I was enjoying Rachel's company way too much for it to end so soon. She didn't appear to be in any hurry either.\n\n\"Oklahoma City,\" she said. \"He loved doing fine woodwork, but he barely made enough money to support the family.\"\n\n\"Is that why he quit?\"\n\nShe paused for a long moment and I had a sudden premonition that I'd really put my foot in it. \"No. He died of a heart attack just before I turned thirteen.\" The tone of her voice wasn't reproachful, but I still felt like a thoughtless idiot.\n\n\"I'm so sorry, Rachel,\" I said, rolling up on my side to be able to face her. \"That must have been rough.\"\n\nShe turned toward me as well. We were close to each other now and I loved the look of her face on the pillow next to mine.\n\n\"Really, Alan, it's okay. I hate to make a big deal of it since it was so long ago. My mom thought he was crazy, crafting this big bed for a twelve-year-old, but I was always his favorite. I think he knew he didn't have long and wanted to give me something I could keep with me. I'd bet he was imagining me in this bed with my husband and a whole gob of kids sandwiched between us, just like it was in our family when I was a kid. I'm sure he would have liked that.\"\n\nWow, that was a powerful image, but an agreeable one. \"Rachel, are you sure you want to sell it? I don't know if I'm heartless enough to take away something that means so much to you.\"\n\n\"No, Alan, don't get me wrong. I understand why he made it for me, but it's the memory of the thoughtfulness and love he put into it that means the most to me, not the physical object itself. If he were still alive, I'm sure he'd tell me to sell it if it would help me to graduate.\"\n\n\"Well, I suppose...\"\n\n\"Look, Alan, it's just a bed. Wood, vinyl, cotton, a little metal. I'd heave the thing out the window if it would give me back a single minute with my dad.\"\n\nI nodded. I completely understood that, but hearing her express her feelings for her father somehow made me willing to share something that I hadn't talked about in a very long time.\n\n\"I lost my dad too. He went to prison when I was an infant and he died there about six months later. After that it was just my mom and me.\"\n\n\"Wow. That must have been tough, not even having a memory of your father.\"\n\n\"Actually, it was good that he wasn't in our lives after that.\"\n\nRachel paused for a long moment, obviously considering the implications of that statement. She evidently decided not to ask me why, and that was just fine by me.\n\n\"So if it was just the two of you,\" she said instead, \"I'd bet you and your mom are really close. There were five of us girls and I was the tomboy, so I didn't get a whole lot of my mom's attention.\"\n\nI nodded. \"My mom was everything to me, but when I was fifteen and had just gotten my learner's permit, we were out for a drive and I got us into a wreck. She was killed.\" I barely got that out without my voice breaking.\n\n\"Oh my God!\" Rachel exclaimed. \"That must have been horrible!\" Her deeply stricken look made me feel like a real jerk for having laid it on her.\n\n\"Look, Rachel, I'm sorry. It's not something I normally go around telling people.\"\n\n\"No, really, it's okay. I'm honored that you were willing to share it with me.\" She looked so sad. \"How did you survive a loss like that?\"\n\n\"It took me several years to get past the worst of it, but I don't think I'll ever truly forgive myself. The other guy was drunk and he ran a red light, but still I can't help thinking that if I'd been paying closer attention, maybe I could have done something to-\"\n\n\"Don't even talk like that!\" Rachel interrupted, surprising me with the forcefulness of her response. \"The same thing could have happened to anyone. It wasn't your fault.\"\n\nIn the years after the accident, I'd lost track of how many people had told me exactly that. Yes, of course it was true, but it never seemed to make any difference. I'd been the one behind the wheel and I could never shake the nagging guilt in the back of my mind that I should have been able to do something to stop it.\n\nFor all that, the proclamation of my innocence from Rachel's lips made me feel better somehow. \"Thank you, Rachel. Hearing that from you helps.\"\n\nShe smiled. \"Well, if I can be of any-\"\n\nBANG!\n\nA bolt of lightning struck so near that the enormous peal of thunder seemed to explode at exactly the same instant as the brilliant flash. It momentarily lit up the room like broad daylight and the sound literally shook the building. Rachel's reaction was immediate and extreme. She screamed, threw herself into my arms and buried her face in my chest. Both the lightning and her reaction caught me completely by surprise.\n\nI wasn't sure what to do, so I just went with it. \"Rachel, it's okay,\" I murmured as soothingly as I could, gently stroking the bare skin of her back. Then, as if to put the lie to my words, another bolt struck almost as close. The lights flickered, then the power went out, leaving the room only dimly lit by the heavily overcast late afternoon light coming through the single window. Rachel pushed into me even tighter, causing me to roll onto my back with most of her length on top of me. It seemed obvious that she had a big issue with lightning.\n\nI kept murmuring words of comfort, and as the next few bolts seemed to draw further away, her trembling eventually eased. I wasn't in a rush, though, so I continued to hold her. I certainly didn't mind, and figured that she'd eventually recover her composure. That's not what happened, though.\n\nJust when it seemed that she'd turned the corner, her trembling turned to tears and she began to sob, seemingly inconsolably, against my chest. Her face was turned down and away from me so I couldn't get a read on what was going on with her, but I got the definite impression that this was about a lot more than a thunderstorm.\n\nThis situation was not at all what I'd imagined when I'd shown up at her door. Here I was, lying on a bed in a bare room while a girl I'd just met sobbed on my chest. I noted to myself that I should really have been weirded out, but strangely it just felt right that we should be here like this.\n\n\"It's okay, Rachel,\" I murmured at last, \"the worst of the storm has passed.\"\n\n\"I know,\" she whispered. She lifted her head and looked at me. I noted that Rachel was one of those rare and lucky women who look even more beautiful when they cry. She started to get up off of me, but I let her know with just a slight press of my hand that she was okay where she was. She settled back down.\n\n\"Alan, I am so, so sorry I threw myself on you like this. I must have really freaked you out.\"\n\n\"Well, I suppose most people don't have quite that strong a reaction to thunder.\"\n\n\"Yeah, I really don't like it, but given a moment's warning I'm normally able to put on a braver face. That one came out of nowhere, though.\"\n\n\"Then I'm glad I was here to help you through it.\"\n\nRachel lifted her head to face me, then smiled. \"You're my knight in shining armor. Thank you.\"\n\n\"It was my pleasure. Look, I don't mean to pry, but I got the impression that there was more going on with you than just fear of a storm.\"\n\nShe nodded. \"I was only scared for a minute, but then the way you were holding me brought back memories of how my dad used to comfort me whenever there was a bad storm. My sisters laughed at my fear, but he understood.\" She laid her head down on me again. \"I miss him so much, but I hadn't cried over him in a long time.\"\n\nIt had been many years since I'd held and comforted another human being, and it felt good to have been there for her when she needed someone. \"It sounds like he was a great father.\"\n\n\"He really was, but you know, there's something you do when you hold me that he never did.\"\n\n\"Really? What's that?\"\n\n\"Pop a big boner against my hip.\"\n\nHer words took a moment to sink in, then, \"Oh shit! I'm so sorry. I didn't mean to-\" I stopped yammering when Rachel gently pressed her lips to mine.\n\nHer kiss was definitely a surprise, but a very pleasant one, and after a mere moment's hesitation, I began to kiss her back. Her lips were soft and warm and I would have been happy to continue indefinitely, but she gently pulled away after just a few seconds.\n\n\"Now that I have your attention, Alan, let me tell you that I like that reaction from a man when I'm lying on top of him.\" There was a twinkle in her eye.\n\nHer words emboldened me. \"I'd like to think it says I have excellent taste.\"\n\n\"Well yes, yes you do,\" she said, \"but you're not the only one here who's sporting an involuntary physical reaction due to the extreme, yet quite welcome, proximity of an attractive member of the opposite sex.\"\n\nI liked her nerd-talk. \"Yeah, I noticed that earlier,\" I said, taking a risk by reaching up with the back of my finger and lightly brushing an erect nipple through the fabric of her dress. I couldn't remember ever being so forward with a woman before.\n\nPreviously, I would have assumed that a girl who would allow me to touch her so intimately this quickly was probably a bit too loose with her morals for my admittedly old-fashioned tastes. Then again, with Rachel it just felt natural. In any case, I reminded myself, I shouldn't be critical of the girl for getting frolicsome if I was doing exactly the same thing.\n\nI looked at her to see if she was really okay with my touching her, but her face had a faraway look on it, like she was making some kind of important decision. Then the look was gone, replaced by a plainly determined expression. Something had happened with her in that moment.\n\n\"There's stuff in your way,\" she said. \"Here, let me help.\" She reached to the nape of her neck and undid the straps holding up the top of her dress.\n\nThe undoubtedly eager look on my face probably disguised it, but I was starting to worry. I'd been comfortable with Rachel when we were just flirting, but now that things were turning serious I was starting to wonder what she'd do when she found out the ugly truth about me. That had never gone well in the past, but I selfishly didn't want to stop just yet. If there were even a tiny possibility that this could work out, I'd take that chance and let the chips fall where they may.\n\nTo my pleasure, she sat up, straddling me, and I delighted in the feel of my erection pressing against her crotch under her dress. She was holding her forearm across her chest, keeping her dress up even as the straps fell down from her bare, flawless shoulders. I tried to be patient as, with an unaccountably serious expression, she moved her arm lower and lower. First, the upper surfaces of her incredibly proud breasts were exposed, then the tops of her perfectly-sized areolas. Finally, her swollen nipples and shapely undersides came into view. They were even more breathtaking than I'd supposed.\n\n\"Oh Rachel,\" I murmured quietly, \"you're so beautiful.\" I slowly and tentatively reached up to touch them.\n\n\"Wait,\" she said. I put my hands back down, carefully hiding my disappointment. \"Before we go any further, there's something else you should see.\"\n\nWithout further ceremony, she let her dress fall down the rest of the way to her hips, revealing what she'd been so nervous about.\n\nRachel had a massive port wine stain, starting just under her right breast and continuing down into her panty line in a rough shape reminiscent of a crescent moon. It wasn't one of those light, salmon-colored stains; it was the real deal. Deep red to the point of being almost purple. I had never seen a birthmark that large, and showing up on a body that was so otherwise flawless, it came as something of a shock.\n\nI guessed then why she had stopped me from touching her. She wouldn't want us to be too invested in each other if this was going to be an issue for me. And she plainly expected that it would be.\n\nI looked up into her face. There was an incredible vulnerability there. She was nervously biting her lip and her expression spoke of a nearly palpable uncertainty. Rachel was holding herself out for inspection and awaiting a decision on whether she was acceptable to me.\n\nIn response, I reached up again. She didn't stop me this time as I put my hands on her bare sides and lowered her down to me.\n\nWhen my lips first touched her chest, it wasn't on one of her perfect breasts; it was just underneath, at the very top of her mark. I felt her shiver as I kissed her there, wetting my lips as if to melt and taste the stain.\n\n\"Oh my God,\" she murmured.\n\nI continued to kiss her with wet lips and used my hands to guide her above me so that I followed the border between her blotchy red and flawless olive skin. The birthmark wasn't just a discoloration; it had a rough and fibrous texture to it. I followed the boundary line down the front of her chest until I arrived at her navel. It was neatly bisected by the stain and Rachel gasped as my tongue wiggled inside for a moment, then continued to move south. I kept on kissing, tonguing and loving her body until I reached the top of her pink satin panties.\n\nBy now she'd mostly crawled out of her dress. I guided her to roll off of me and onto her back. Without asking permission, I began to slowly slide her panties down and continued to follow the stain border across her lower abdomen. Her stomach, gloriously flat and toned, quivered as I met her pubic hair.\n\nRachel hadn't shaved there, that not being the custom of the day, but she was very neatly trimmed. She began to moan as I kissed nearer and nearer to her center, so without breaking my lip lock, I pulled her dress and panties down around her knees. She made no protest as I slid them off and tossed them over the foot of the bed. She lay naked beneath me.\n\nEven in the dim light, I could see that the border of her birthmark went nearly perfectly down between her nether lips. I kissed her lightly there, barely touching her. Rachel moaned softly in frustration, obviously wanting more, but that wasn't what I was doing, not now.\n\nI followed the edge of her birthmark onto her right thigh, a place where the stain wouldn't be covered by even a one-piece swimsuit. Then I lifted her knees onto her chest so that I could follow it as it went underneath her.\n\nIt was now that I finally looked back up to her face. I could see a trace of embarrassment there from being so totally exposed to me. There was also some passion and excitement from being touched in such an intimate area, but if she was still apprehensive about my acceptance of her, I couldn't detect it. Good, that was just what I'd hoped for.\n\nIt was also very obvious that her body was reacting to what I was doing, as I spotted a small rivulet of her juices winding its way down her taint. It was on my way, so I licked it off as I went by, to the accompaniment of Rachel's gasp.\n\nThe stain ran about four inches down her thigh, then up again to cover the lower quarter of her otherwise flawless butt cheeks before writhing up her other thigh. I let her legs back down and kept kissing, slowly moving back up into her bikini line and then completing the circuit up and across her chest. As I finished, I placed my hand right across the fattest part of the stain before lying down on my side, facing her, kissing her lips gently and sharing with her the now faint taste of her arousal.",
        "\"So tell me,\" I murmured, \"was it Monet or Rembrandt who did your artwork. It's beautiful.\"\n\n\"I'm afraid that bit was slapped on by a stork.\"\n\n\"Well, my compliments to the sea bird. I happen to like it.\"\n\n\"Then you'd be the first,\" she said, getting more serious now.\n\nI nodded, acknowledging the change in mood. \"I imagine some people might find it a bit disconcerting at first.\"\n\nRachel sighed. \"Guys hit on me a lot during my first semester here, but my mom taught me a little self-respect. I wasn't going to be used like a Kleenex. I only dated guys who seemed to be willing to really get to know me as a person before getting too physical, but they invariably cooled things off when they saw my birthmark, even when I warned them ahead of time.\n\n\"I haven't accepted a date since my freshman year, but it's been a moot point. Word of my affliction spread all through my circle and the guys haven't wanted to be anything more than just friends ever since. They seem to think it's a contagious disease.\"\n\n\"Damn shallow of them,\" I told her, \"and they have no clue what they're missing.\"\n\nRachel looked through me with a thousand-yard stare. \"I suppose if I'd been a little more desperate, I could have gone out with guys I wasn't attracted to or caught a guy when he was too drunk or horny to care. If a girl wants it bad enough, she can always lower her standards and find a guy who's hard up enough to put up with about anything.\"\n\n\"Someone like me, maybe?\"\n\nI knew immediately that I shouldn't have said that, but with my luck in the dating pool, my self-esteem wasn't the best.\n\nShe gave me a reproving look. \"Don't even think that, Alan. My being naked with you isn't settling at all. Just so you know, when you called I was still wearing the tank top and cutoffs I cleaned these carpets in. Normally I'd have been fine wearing those to show the bed, but I liked the sound of your voice and your obvious intelligence so much that I showered, shaved my legs and pits, trimmed my bush and even wore a dress without a bra. I hardly ever go without a bra. I got all gussied up, hoping that you'd be cute and somehow, miraculously, accepting of me. I don't often bother to get my hopes up anymore, but there was just something about your voice...\"\n\n\"I liked the sound of your voice too. It was what brought me here.\"\n\nShe nodded. \"So when you showed up at the door, my heart kind of sank, because-\"\n\nHuh? \"I have that effect on women,\" I interrupted with a forced smile, hoping to be light and flippant, but why had she said something as hurtful as that?\n\nShe saw right through my smile and her face took on a stricken look. She quickly reached out and put her hand on my shoulder. \"No, no, please let me finish, Alan. See, every really handsome guy I dated had this sense of entitlement, like any girl he deigned to go out with had to be perfect. It was like these guys were so good looking that they could afford to casually discard any woman that somehow didn't measure up. So when I saw you, I figured I was out of luck, because you're so damn gorgeous.\"\n\nMy immediate reaction was that she was blowing sunshine up my ass, but her expression said she was in dead earnest.\n\n\"Seriously? I mean, okay, I guess I'm not an ogre, but 'so damn gorgeous'? No way.\"\n\n\"Oh yes you are,\" she insisted. \"What are you, like six-two? Broad shoulders, narrow waist and hips, muscle all over you, a clear, handsome face, and that amazing mane of dark, curly hair? Yup, gorgeous I tell you.\"\n\nI honestly hadn't given much thought to my personal appearance in years. I'd been too busy trying to survive college and I hadn't been dating anyway. My hair was a bit long because I saved money by only getting it cut every six months. I'd run and lifted for fun and health, not for my looks. Inside, I still thought of myself as that gangling, pimply nerd with the unruly mop on his head.\n\n\"You're the gorgeous one here, Rachel. All of you, from head to toe.\" She really was. This unselfconsciously nude angel lying next to me, port wine stain and all, was the most beautiful thing I'd ever seen.\n\nShe shook her head, evidently not willing to take my acceptance of her at face value any more than I was willing to accept her assessment of me.\n\n\"I decided to take a risk and show you my birthmark because you were so understanding when I freaked out over the storm,\" she said, \"but I still steeled myself to having you back off once you saw it. The acceptance you showed me with your lips may have been the most beautiful thing anyone has done for me since I was a kid. Why are you such a saint?\"\n\nIt was time. \"I wish I could tell you that it's because I'm a saint, but I'm not.\"\n\n\"Then what is it? Why doesn't my disfigurement send you packing like all the other guys?\"\n\nIn answer to her question, I got up on my knees, facing her. She looked up at me with a puzzled expression.\n\n\"Rachel, this is why.\" I pulled my T-shirt over my head, but kept it in my hand, knowing she'd want me to put it right back on. Her eyes went wide.\n\n\"Wow,\" she murmured, getting up onto her knees and facing me, her eyes riveted to my chest. \"Is this why your dad went to prison?\"\n\nI nodded. \"I was just five months old and my mom was at work. He evidently got fed up with my crying while he was pressing his shirt. No one bought his story that the iron 'just fell' on me.\"\n\n\"Can I touch it?\"\n\nYou could have knocked me over with a feather. She wanted to do what?\n\n\"Uh, you're the first girl who's ever asked to do that, but sure, if you really want to.\"\n\nShe reached out and ran her fingers across my maimed chest. Her touch was gentle, though in the place where she touched me I didn't really have much feeling. She looked up at me and shook her head. \"How could anyone do this to a child, much less an infant?\"\n\n\"A lot of people were asking that. The story made the front page of both Denver papers and there were enough death threats against my dad that he didn't even attempt to make bail. They held him in solitary for his own safety, but he was diagnosed with a malignant brain tumor right before the trial was going to start. It was an extremely aggressive cancer and he lived less than a month after that.\"\n\nI showed her the small burn scars on the insides of my wrists where my tiny hands had evidently tried to push the iron away.\n\n\"So do you think it was the tumor that made him do this?\" she asked, her voice almost a whisper.\n\nI nodded. \"I have to tell myself that or I'd be scared to death that I could hurt my own kids someday. My mom wouldn't talk about it much. I think she was waiting until I was an adult to fill me in, so I may never know. She was a wonderful person, though, and a good judge of character. I'm certain she wouldn't have married him if she'd seen any signs that he would one day do such a thing.\"\n\nRachel was still exploring my chest with light touches of her fingers. \"It looks like they did a lot of work on it.\"\n\nI nodded. \"Most of the burn was third-degree and they had to do quite a few grafts. Fortunately, I was only old enough to remember the last couple of operations. They say they could do some cosmetic work to improve the look of the whole thing, but until now I haven't had good enough health insurance.\"\n\nThe scar on my chest and stomach had grown along with me. It was now probably five times the size of the Hamilton Beach that had inflicted it.\n\nRachel leaned in closer. I felt her wet tongue on me and flinched involuntarily. \"At least he left you a nipple,\" she giggled.\n\nI was nearly floored by the fact that she could be playful while looking at my hideous chest, but I was more than ready to stop talking about what my father had done to me.\n\nShe sucked my nipple into her mouth for a moment. As she swirled her tongue around it, I was amazed at the intensity of the sensation there.\n\n\"You're wearing too much clothing,\" she eventually murmured. \"You mind if I do the honors?\"\n\n\"Mind? I'd be delighted.\"\n\nRachel undid my shorts. Sliding them down to my knees, she could more clearly see the bulge in my briefs.\n\n\"Methinks someone's enjoying this,\" she said. Without further ceremony, she slid them down. \"Oh my! I think I'm going to enjoy this.\" She took my swinging member in her hand.\n\nI lifted one knee at a time and slid my shorts and boxers off, throwing the wad over the foot of the bed to make a pile with hers. Then I finally completed the action that I'd started when she'd lowered the top of her dress for me. While she carefully ran her hands up and down the length of my growing erection, I took her breasts into my hands.\n\nI'd had occasion to handle the bare breasts of maybe half a dozen women in my life, but Rachel's were a revelation. They were so smooth, so firm. I'd thought they looked sensational, but they felt even better. Her skin tone was completely even, probably from never having been out in the sun in a bikini, and her nipples were hard and proud. She moaned as I ran my thumbs across them, teasing, then caressing.\n\nIt felt good to touch and be touched, but there was something I wanted even more. I took Rachel in my arms and began to kiss her for real. Her hands came out from between us and she wrapped her arms around me, clinging tightly as our tongues dueled. I was out of practice, but soon regained my confidence.\n\nI reveled in the feel of her nude body pressed to mine. She felt just perfect, and I again marveled at how a trip to look at a used waterbed had quickly turned into this. It was vanishingly improbable, but still very, very right.\n\n\"Oh my God, this is so good,\" Rachel murmured into my mouth. \"I never thought I'd find you.\"\n\nA very enlightening statement, but those were my sentiments exactly. Her hands were roaming all over my back and shoulders. I groaned and felt myself harden further in response. My shaft was soon pressing hard up against Rachel's crotch.\n\n\"It feels like someone's getting excited,\" she murmured, moving her hips just enough that the flat of my member slotted between her lips. I could feel the sudden reduction in friction as her moisture bathed me. \"Here, move onto your back and I'll help you with that,\" she murmured.\n\nIt wasn't easy, forcing myself to release her from my arms, but I did.\n\nRachel guided me to spread my legs, then knelt between them and began to massage the inside of my thighs, starting down near my knees. I'd kind of expected her to go right to work on my member, but even in my state of extreme horniness, I knew this would be better.\n\nUnfortunately, she was touching me just a little too softly. Despite my best efforts to hold still, I flinched.\n\n\"Are you okay?\"\n\n\"Not your fault. It's just that I'm congenitally ticklish.\"\n\nShe gave me an evil grin. \"I'll have to keep that in mind, Alan, but for now I think I know how to get around that.\" She started right where she'd left off, just using a little more pressure. The feel of her hands on me went from tickle to magic.\n\n\"Is that better?\"\n\n\"Yeah. You've got all evening to stop doing that.\"\n\n\"Good, because we've got all evening.\"\n\nRachel's hands seemed to gain confidence from my reassurance and she slowly began working her way inward. Her hands were soft and warm and the unprecedented sight of such a beautiful girl working to give me pleasure was mind blowing.\n\nI loved the way she looked at my body with obvious desire. I loved her long stately neck, her narrow waist, the way her breasts bobbed ever so slightly as she moved, and her long, soft fingers where they touched me.\n\nSlowly her hands moved closer and closer, the pleasure and anticipation now so intense that I could hardly breathe. Rachel sighed with pleasure of her own as she cupped my balls, gently probing and caressing. \"Does that feel okay?\" she asked softly, looking up into my eyes. \"I like playing with them.\"\n\n\"It feels wonderful, Rachel,\" I murmured.\n\nHer ministrations to my nut sack felt like an equal measure of clinical exploration and loving massage, but it was all good. I was more than willing to wait until she moved on to the more erogenous area just above, but I didn't have to wait for long.\n\nStill cupping my balls in one hand, Rachel reached up with the other and gently swirled a big, slick droplet of precum around my cockhead. The sensation was so intense that... Oh no, not already! \"Uh, Rachel? I'm gonna...\"\n\n\"Now?\"\n\nI nodded with both urgency and embarrassment. She had barely even touched me there but, like a complete noob, I was about to blow my wad all over her bed! I started to reach down, thinking that I could direct it onto my stomach and not make such a mess. Instead, and to my utter amazement, Rachel grabbed me in both hands and popped her mouth over the head just as I erupted.\n\nI groaned as I shot rope after rope into her mouth. Her eyes grew wide and I realized that this might have been a first for her. She gamely hung in there, though.\n\nI wasn't looking forward to having to explain myself, but the sensation of her mouth on me was so unbelievable that I tried to just live in the moment. I rubbed the smooth, soft skin of her shoulders as my issue petered out.\n\nEventually I was done and Rachel sat up. With a little sideways flick of her head, she swallowed.\n\n\"Rachel, I'm so, so sorry,\" I said, shamefaced. \"I really wanted to last a lot longer than that.\"\n\nAs with the last time I'd tried to apologize to her, she instead stretched out across me and kissed me. Even in my post-coital state, I responded with vigor.\n\nAll thoughts of apologies were pushed to the side now and I began to run my hands over every part of her body that was within my reach. Again I marveled at the supple smoothness of her skin. Her buttocks were firm, hard and shapely, her back nicely muscled, but emphatically feminine. How could it be possible that I was here with a woman like this?\n\nRachel reached back and released her hair. It fell in a lustrous curtain around us, creating a dark, cozy space for our ever-increasing hunger.\n\nI felt Rachel begin to grind herself against me, wanting more now. I knew it wouldn't be long until I was ready to go again, but I wasn't there yet, so, wrapping an arm around her incredibly slim waist, I rolled us over without ever breaking off our kiss. She spread her legs and began to rub against me again. She needed more, and I knew just what I was going to do for her.\n\nI broke away from her lips and slowly kissed along the fine line of her jaw, up and toward her ear. She was still trying to move her hips against me, so I raised mine out of her reach. She moaned at the loss and at her need, but I told myself that it wasn't really need so much as it was extreme want. She'd get what she needed, in spades, but she was going to have to be patient.\n\nI nibbled at her earlobe for a moment and she gave up on trying to grind herself against me, instead reaching down to touch herself. I gently took her wrist and laid her arm back at her side.\n\n\"Patience,\" I whispered in her ear. \"Just trust me.\" To my delight, she groaned but did as I asked.\n\nI lifted myself on my hands and knees so that my mouth was the only physical contact between us. Then I began to slowly kiss and nibble my way down the side of her neck, and then to the finely sculpted hollow at the base of her throat. She was silent now, but I could feel that her entire being was focused on the feeling of my lips and tongue on her, just as I intended.\n\nI kissed along her delicate collarbone and then down her side, just skirting the outside of her breast, then kissed along the well-defined border where the underside met her chest. As I circled up between, I could tell that Rachel figured I was going to slowly spiral inward, so instead, I surprised her by sucking her nipple straight into my mouth and biting down gently.\n\nRachel gasped and her hands flew up from her side and cradled my head, mashing my face to her. I took as much of her into my mouth as I could and sucked hard. She began to shake, and I realized that incredibly (and to no small pride on my part), Rachel was having a mild orgasm, just from my suckling.\n\nI continued until she seemed to have recovered some, then did the same to the other breast. Rachel stayed in control this time, even putting her hands back down at her sides, but I sensed that she was now good and ready for me to head south to warmer and more humid climes. I started to do just that, but at my own pace.\n\nOn this trip I went right down the middle, across incredibly smooth, soft skin and rough, angry stain until I met her dark forest again. This time I skirted around her birthmark and across the front of her hip, pausing at my favorite spot on the whole female body, that perfect place right on top of the hipbone. Rachel's was not bony or pronounced, just barely and delightfully defined, and I worshiped at its glorious altar for a moment before heading down her thigh.\n\nShe moaned and squirmed in frustration as I went past her center and almost to her knee, but then I went to the inside and started back up. I could both see and scent her excitement as I kissed up her inner thigh, and she responded by opening her legs almost obscenely wide as I approached.\n\nRachel's smooth lip was engorged and nearly as red as her rough one, and I treated them equally, turning my head and lipping them both in turn. Her breathing was labored now as her anticipation grew, but after being as purposefully deliberate as I'd been, I wasn't going to rush things now. Her hands finally flew up from her sides and just brushed against my hair, but then she caught herself and laid them back down. I was so proud of her.\n\nLittle by little, I worked my lips and then my tongue a little deeper as I slowly went back and forth on her like a harmonica. My tongue again tasted her sweet moisture as I penetrated her inner lips. Rachel moaned a mix of passion and frustration.\n\nShe wasn't the only one suffering though. My erection was back and almost painfully hard. My baser instincts were screaming at me to just scoot up there and get with the program, but I knew that in the long run, this would be better for both of us.\n\nI began to massage her inner thighs with my hands, gradually moving them inwards toward her center. Rachel was gasping now, so close, yet not there yet, desperate for what she so urgently wanted and needed. I was almost ready to do that, but first I used my fingers to hold her lips open to me and plunged my tongue as far as I could into her sweet depths. She cried out as I went inside.\n\nRachel was a marvelous contrast in feel and flavor. Her nectar tasted like ambrosia and her stained flesh was rough against my lips. Her hips bucked and her legs writhed aimlessly as I probed her.\n\nThere was no use at this point torturing her any further, though, so I moved just slightly north and took her engorged, and fortunately unaffected, clit into my mouth and began to work it hard with my tongue. I slid a finger into her slick center, feeling how incredibly wet and tight she was, and began to move it in and out.\n\nRachel erupted in a fury of sound and motion. \"OH GOD!\" she screamed as she came, in a voice that was probably heard in the parking lot through the open window. I held her thrashing hips down with my free arm as I diddled her furiously, sucking hard on her clit and not letting up on her as she climaxed.\n\nMy efforts, and her patience, paid off as wave after wave of orgasmic ecstasy washed over her. That was what this whole build-up had been for, and it had worked out just the way I'd hoped. I'd never seen a woman come with such utter abandon and it was an absolutely glorious feeling knowing that I'd done this for her, but now I was going to reap some of the dividends myself.",
        "At the height of what I figured would be the last climax her body could withstand, I removed my mouth from her and maneuvered myself into position. I gripped my shaft and rubbed it in her sopping lips for lubrication, then began to push myself forward. I gave a good shove and had just popped my head inside her heavenly opening when I felt her hands gripping my hips and holding me from going any further.\n\n\"Wait,\" she managed to gasp, still in the grip of her orgasm.\n\nI stopped and pulled out immediately, now worried that I had done something wrong. \"Are you okay?\"\n\nShe nodded, then pulled me down beside her.\n\nI knew she still needed physical contact at this point, so I squeezed up tight against her, cupping her maidenhood in my hand and gently massaging her, bringing her down slowly and gently. Her lips met mine and we kissed deeply until her body finally cleared enough of the endorphin overload to allow her to relax in my arms. She seemed very content as our kisses slowed.\n\n\"Ah,\" she finally murmured, lying back on her pillow. \"Thank you, Alan. That was amazing.\"\n\nI wasn't quite as relaxed, though, still wondering what had happened when I'd tried to enter her. Suddenly, it occurred to me why she'd stopped me.\n\n\"I'm sorry I rushed things, Rachel. We didn't even talk about birth control, did we?\"\n\nRachel gave me a smile, which I found very comforting.\n\n\"I'm not on the pill, if that's what you're wondering, but I'm in a non-fertile part of my cycle.\"\n\nI'd read up on natural birth control at some point and had learned that it could be just as effective -- if not always as spontaneous -- as the pill if used correctly. Rachel was obviously a very bright girl, so I was willing to trust that we had no worries there.\n\n\"Should I be wearing a condom? I mean, with all the stuff out there, you must be worried that...\"\n\nShe shook her head. \"Since neither of us has been active in years, I'm not particularly concerned about that.\"\n\nShe rolled onto her side, facing me, and took my member in her hand. \"I'm sorry if I made you think you were doing something wrong, Alan. You were correctly reading the signals that said I wanted to. And I really do...\"\n\n\"But?\"\n\n\"Alan, the issue is your size. A girl doesn't just swallow a pole like yours without some adjustment, especially if she's still a virgin.\"\n\nI nearly gasped. \"You're a virgin?\"\n\nShe'd told me that none of the college guys had accepted her, but somehow I'd figured that somewhere along the way it must have happened. How could a twenty-one-year-old woman who was as drop dead gorgeous as this one be a virgin?\n\n\"Wow, this is your first time?\" I asked, kind of repeating myself. She gave me a patient smile and nodded. \"Do you really want to do this, Rachel? I mean, we don't have to if you-\"\n\nFor the third time, she stopped my babbling with a kiss. \"Alan, I'm not leaving this bed a virgin if you'll have me. We just have to take it slow and be careful.\"\n\nIf I would have her? Duh! But... \"I love the sound of that, but, uh, you said something about my size?\" It hadn't sounded at all derogatory, but we guys tend to be sensitive about that kind of thing.\n\nShe nodded. \"That something is the fact that yours is among the biggest I've ever seen.\"\n\nI couldn't tell if she was being serious or just trying to stroke my male ego. I'd always assumed that I was relatively normal in that department. Then again, due to my embarrassment over my scar, I'd avoided locker rooms at all costs and didn't have that point of reference. I'd seen a few porn films on Super 8 and VHS in college, but I figured that I wasn't really that much bigger than most of those guys.\n\n\"Well, Rachel, seeing as how your sample size is so small, that really doesn't mean a whole lot.\"\n\nHer blush came back with a vengeance and it became blazingly obvious to me that there was a lot more to this than met the eye.\n\n\"Rachel, just how many dicks have you seen?\"\n\nShe pursed her lips and shook her head. She obviously didn't want to go there, but I was dying to know.\n\n\"Come on Rachel. You're a virgin, yet you seem to think that you're some kind of authority on the subject. What's the number?\"\n\nFinally she let her breath out, giving in. \"Oh God, this is embarrassing,\" she said in a whisper. \"Two hundred and seventy-three.\"\n\n\"Live? In person?\"\n\nShe nodded, shamefacedly.\n\n\"And you know the exact number?\"\n\n\"I kept track in my journal.\"\n\n\"Um, I'm kind of confused here.\"\n\n\"It's not what you think, Alan.\"\n\n\"What, you used to work in a urologist's office?\"\n\n\"No, they were all here, in my apartment. See, my roommate was a bit of a... I mean, she liked to... Oh hell, I love Michelle and she's a great friend, but she's a total slut. She brought a new guy here every couple of days and her major kink was having me watch. Not participate, mind you, just watch.\"\n\n\"Holy shit, that is kinky. Did you like that?\" I tried to keep my tone non-judgmental.\n\nHer embarrassment was obvious, but she resolutely owned up to it. \"Hey, girls get horny too, and it was the only game in town for me. After letting her talk me into it the first few times, I really enjoyed her little shows after that.\"\n\n\"Didn't it bother the guys, having you sitting there, watching and judging their every move?\"\n\n\"Not at all, because they never knew.\n\n\"Huh?\"\n\n\"See, our rooms share a bath. When she brought a guy home she'd make out with him on the couch for a while before bringing him to her room. That gave me enough time to slip into the dark bathroom and leave the door open a crack. With the light on in Michelle's room, he couldn't see me watching.\"\n\nI had to be honest. \"Rachel, would you consider me a pervert if I said the mental image of you watching your roommate having sex turns me on?\"\n\n\"Yes,\" she said, \"I'd consider you a pervert.\" Then with a grin, \"but I'm an even bigger pervert myself. While they were doing it, I'd be masturbating like crazy.\"\n\nTalk about an image, and I was thrilled that she was comfortable enough with me to admit to it. \"You know, Rachel, the thought of you diddling yourself really turns me on too.\"\n\n\"Perv. What you just did for me was ten times better than that, though.\"\n\n\"I rather enjoyed it myself.\"\n\nShe sighed. \"So anyway, that's how I know you're much better endowed than the average guy. I would have thought that along the way at least one of your girlfriends would have mentioned this to you.\"\n\nI paused, and then decided since we were being all honest here, I'd better tell the brutal truth. \"I haven't had any girlfriends,\" I managed.\n\n\"Surely you've...\"\n\nI shook my head.\n\nHer eyes grew wide. \"Alan, are you a virgin too?\"\n\nGulp! \"Of course not, I lost my cherry a long time ago.\"\n\nShe gave me a dubious look. \"How long ago, exactly?\"\n\n\"About four minutes.\" I wasn't sure just how much penetration was required to lose your virginity, but for that one glorious, shining moment, I'd been at least a little bit inside the most beautiful girl in the world.\n\nRachel rolled up on her elbow and, now looking more serious, rubbed her hand significantly across her birthmark, then lightly across my scar. She looked at me and pursed her lips. \"These things have really held us back, huh?\"\n\nI nodded. Rachel's soothing presence seemed to have a way of changing my perspective, so I told her about how it had been. \"After getting rejected the first couple times when high school girls saw me without my shirt, I just kind of pulled back into myself. I guess my fear of rejection teamed up with my natural shyness. I've just found it easier to avoid getting into situations where I'd have had to face that kind of rejection again.\"\n\nRachel was expressionless for a while, but then she nodded her head. \"That's amazingly close to what's been going on with me. It's a lot easier to play the \"too busy\" or \"hard-to-get\" games than it is to face another look of revulsion.\"\n\n\"Understanding their reaction doesn't make it any easier,\" I said. \"Rejection hurts.\"\n\nRachel kissed me. \"Yeah, but you didn't reject me.\"\n\n\"And you didn't hesitate to touch me, even for a second. That means more to me than you'll ever know.\"\n\n\"Oh, I know all right,\" she said, getting a slow nod from me, \"but there is one other thing that I'd love to know.\" She was giving me that mischievous grin again.\n\n\"What's that?\"\n\n\"How did a guy who's still a virgin know exactly how to make me climax like that? I mean, I witnessed hundreds of guys go down on Michelle, but none of them could work your kind of magic. I swear I nearly had a stroke from what you did to me.\"\n\n\"Hmm, that's a \"how can you have seen so many cocks if the guys all run screaming\" kind of a question, isn't it?\"\n\n\"Precisely.\"\n\n\"My story may be even more embarrassing than yours.\"\n\n\"Then I definitely need to hear it.\" Rachel laid her soft, perfect cheek down on my mutilated chest. I caressed her back and ran my fingers through her long, thick hair.\n\nI took a deep breath. I'd never told anyone before, and this story could still get me hurt. The unknowingly aggrieved party lived less than a thirty-minute drive away, in the suburbs of Denver.\n\n\"When I was in my senior year of high school,\" I began, \"there was this woman who lived next door to my foster family. She was in her mid-thirties, but still reasonably attractive to a lonely boy of barely eighteen. Her husband was a long-haul trucker who was often gone for weeks at a stretch. She talked me into coming over to her place one time and then seduced me. She wouldn't allow intercourse because she considered that cheating, but she taught me how to do everything else she liked.\n\n\"All during that school year, I would slip over there almost every day when he was gone. She was a massage therapist by trade and taught me that too. She liked to go out on the private deck and have me undress her, slather her in oil and give her hour-long massages in the sun, then take her inside and make love to her with my hands and mouth until she was totally spent. And she had some serious stamina.\"\n\nRachel's face held an intense expression as she prepared her reply. I was half expecting her to yell at me that what I'd done was disgusting and how she never wanted to hear anything about it again. Instead, she spoke in a hopeful whisper. \"You're good at massage?\"\n\nI shrugged. \"I've been told I am, but it's been four years and I'm out of practice.\"\n\nShe didn't have to ask. I could see it in her eyes. \"Here,\" I said, \"roll onto your front.\"\n\nShe did and I straddled her hips. \"I've never had a massage,\" she said.\n\n\"Then I guess I don't need to worry about being judged on the finer parts of my technique.\"\n\nWe had no lubrication, so I just used gentle pressure from my thumbs, fingers and palms on the nape of her neck, shoulders and upper back. I knew from experience just where and how to manipulate her muscle fibers to get the best results. Rachel didn't have to say a word. Her rapidly relaxing body told me everything I needed to know. I just continued my tale as I worked.\n\n\"Nora said her husband only liked blowjobs and straight intercourse, so I became her primary source for everything else. She wasn't at all shy about telling me her preferred movements, pace, pressures, and locations. All of it. She was sexually jaded and admitted to me that she'd spent most of her twenties as a high-priced call girl, but I got to where I could make her scream every time.\"\n\n\"You sure as hell made me scream,\" Rachel murmured, \"and you're the devil incarnate with your hands. I may have to look her up and thank her for this massage.\"\n\nI chuckled. \"I'm sure she'd be thrilled, but I think I'm enjoying this at least as much as you are.\"\n\n\"Oh, I doubt that,\" she sighed, but I had no doubts myself. Her body was the very definition of exquisite. I made my way down her back, working out kinks she'd never known she had. Then I did a deep tissue massage of the nicely toned muscles of her upper butt cheeks, being gentle, but firm. Rachel nearly purred.\n\n\"Nora's husband was six-foot-two, two-fifty, and he'd been in the Special Forces,\" I said. \"I nearly got caught a couple of times when he came home unexpectedly. I still have nightmares about the time we didn't hear him until he hit the top of the stairs.\"\n\n\"Now that sounds like a fun story. Do tell.\"\n\n\"Uh, Rachel, I don't know how much of this you want to hear. Nora had us doing some weird stuff.\"\n\n\"Even better. I wanna know if she was as kinky as Michelle.\"\n\n\"Well, okay then. We were near the end of a marathon Saturday session. I'd given her a long massage out on the deck, then brought her off maybe five separate times in four different rooms. I'd used everything from my tongue and fingers, to a cucumber in the kitchen and a shampoo bottle in the bathroom. She was all about getting pounded that day and the rougher the better. Finally she was just about dead from sexual exhaustion. She told me that I'd reduced her privates to lumpy oatmeal, but she was still enjoying watching me masturbate both of us at the same time on her bed. I was very gingerly sliding a vibrator in and out of her while I stroked myself. She always loved it when I came on her.\"\n\n\"That's quite the mental picture.\"\n\n\"You have no idea. This time she got there just ahead of me and was in the middle of a climax when her husband called out her name as he came down the hall.\"\n\n\"Oh shit! What did you do?\"\n\nBy now I had worked my way down past Rachel's beautifully smooth and rounded bottom. With just my soft touch for guidance, she spread her thighs and I knelt between them, massaging each of them in turn. I was purposely staying clear of her privates at this point, trying to keep my massage mostly nonsexual. At least as nonsexual as it could be with my soldier standing at rigid attention.\n\n\"Well, I left the vibrator buzzing away inside her, went over the far side of the bed and underneath on sheer instinct. From a false alarm a couple of weeks before, I knew there was just enough room for me to fit under there, lying flat on my stomach. Fortunately, my pants and shoes were in the guest room where he was unlikely to go. On the other hand, he'd arrived just at that moment when I'd already gone so far that I couldn't stop myself from coming.\"\n\n\"And?\" Rachel was engrossed.\n\n\"Well, Nora found herself in one hell of a predicament. She was going to have to pretend that she had been fantasizing about him. She had to convince him that she had tied her own ankles tightly to the bedposts, had covered herself in mango-scented massage oil, and had started masturbating with a thick, ten-inch vibrator. I didn't expect him to buy it for a second.\"\n\nI'd gotten down to Rachel's calves. Their smooth and shapely appearance had fooled me. There was some serious muscle there. \"You must be a runner,\" I said, working with appropriate pressure for her advanced development.\n\n\"I'm not a marathoner, but I did run a sub-40 10k this summer,\" she said proudly.\n\n\"Wow, that's quick,\" I said in genuine admiration. My personal best was just over 38 minutes.\n\nI had Rachel roll over on her back and, starting at the top again, gave her the top-of-the-line job, only breaking proper massage etiquette for a minute to pay proper homage to those amazing breasts. She didn't seem to mind in the least, but when I resumed my downward trek, she couldn't contain her curiosity anymore.\n\n\"Come on, Alan. I'm dying to know. What happened next?\"\n\n\"Well, I didn't think we had a chance in hell when Earl walked in. From under the bed I could see his lower legs as he just stood there in the doorway. I'd bet his jaw was down to his knees. Meanwhile I was shaking with fear, but shooting my load into the carpet.\"\n\nRachel had to giggle at that one. \"Ewww!\"\n\n\"Yeah, it was nasty, and I didn't think he'd buy her explanation, but she never had to say a word. When he saw her like that, his pants dropped around his boots. Earl must have already been thinking about what he was going to do with her when he pulled up, because the bed started bouncing about five seconds after that.\n\n\"I stayed under there, laying still in my puddle of cum, while they went on for hours, just like she'd said they always did when he came home from a long haul. It sucked having to listen to him doing to her what I'd obsessed about, but I got some jollies out of the fact that he screwed her hard four times that night after I'd already made her too sore to walk. She was a trooper, though, and must have faked a dozen orgasms.\"\n\n\"Oh my God,\" Rachel said, covering her crotch with her hand in belated sympathy (and looking quite fetching while doing so). \"I'm in pain just hearing about it, but in my book, she had it coming.\"\n\n\"Yeah, she was nearly bleeding by the time he got done with her. Worse, at least as far as I was concerned, she couldn't come up with a plausible reason to get him to leave the bedroom after they finally got done, and she'd told me that he still slept with one eye open from his time in Vietnam. I had to wait until he was in the shower the next morning before I could make my escape. I couldn't allow myself to fall asleep that night because I snore occasionally. When I got home, my foster parents read me the riot act when I couldn't account for my whereabouts.\"\n\nI finished Rachel's massage with firm manipulations of her feet and toes, then laid down on my back next to her, taking her hand in mine. Our fingers intertwined perfectly the very first time. She started brushing her thumb lightly over mine, but quickly remembered before I could even flinch and bore down just a little harder. That was much better.\n\n\"So what did you get out of the deal?\" she asked.\n\n\"She'd usually give me a quick hand job at the end, but I always had to leave my shirt on. The sight of my scarring disgusted her.\"\n\n\"I think you were being used.\"\n\n\"Yeah, I was her boy toy for sure, but it was more action than I was getting anywhere else. And it wasn't just her, either.\"\n\n\"Huh?\"\n\n\"Yeah, after she had me trained, she'd occasionally have a couple of her girlfriends come over, saying that I was a professional masseuse she'd hired. Things always 'got out of hand' and they'd end up naked, getting my best sexual massages. I got quite a few hand jobs in the process, but it was always in a group setting and Nora wouldn't let it go any further than that.\"\n\n\"Since you were a 'professional,' did you get paid?\"\n\n\"No, but I considered it a fair trade at the time. I was getting to run my hands all over a bunch of naked women and learning in the process about how different women respond to different techniques. I was in heaven. Besides, how many teenage boys get brought off by a woman who used to command $1500 a night for her services?\"\n\n\"Okay, I guess that's not bad duty for a high school guy,\" she allowed.\n\n\"But I'm not in high school anymore. I'd rather be here, just holding your hand, than have Nora provide me the special services she reserved for her best clients.\"\n\nRachel paid me the compliment of not laughing at that. \"I don't think there's anywhere else I'd rather be myself,\" she said in a quiet and sincere voice.\n\nNeither of us felt like doing anything for a while. It was good to just be there together in her amazingly comfortable bed. The sun had gone down now and the only illumination in the room was from a streetlight outside the window. The rain had picked up again, but the heat from the mattress was keeping us warm.\n\n\"So where do we go from here, Rachel?\" I finally asked.\n\n\"Anywhere you like, as far as I'm concerned. A massage like the one you just gave me buys you a lot.\"\n\n\"Hmm, I'll have to keep that in mind, but seriously, this has all been so sudden. I always figured my first time would be with someone I'd gotten to know really well.\"",
        "\"Me too, but on the other hand, I feel like I'm more in tune with you than with any guy I've ever met, just from spending the last couple of hours with you.\" She gave my hand a gentle squeeze, which I quickly returned.\n\n\"I feel exactly the same way. Being with you is almost infinitely exciting, yet very relaxing.\"\n\n\"Relaxing yes, but with just a bit of underlying sexual tension. I'm lying with a man for the first time, after all, yet I'm still a virgin.\"\n\n\"I suppose we could take care of that little issue, but let's think about it for a minute. I don't think we should be too hasty,\" I said, totally deadpan.\n\nI've been accused of having a sense of humor that's a little too subtle. It's gotten me in trouble a time or two, but I wasn't fooling Rachel for even a second. Her response was to roll over the top of me and begin to rub her still sopping nether lips up and down on my now partially deflated member. It surged back to full tumescence almost instantaneously.\n\n\"I totally agree with you Alan. I don't think we should rush into anything.\" Her voice sounded like she was serious about waiting, but her actions emphatically said otherwise. Any ability or desire to joke about waiting evaporated into the ether. There was only one thing I wanted.\n\n\"Rachel, will you make love with me?\"\n\nHer response was to kiss me hard. Her need was urgent and deep and I thrust my tongue into her mouth as we were again enveloped in her hair curtain. She reached down and took a hold of my straining member, bringing me to her entrance. Selfishly, I was glad she wasn't going to torture me with anticipation like I'd done to her.\n\n\"Is this okay?\" she murmured.\n\nI could only nod, suddenly unable to come up with any clever quips. I was nearly overcome by the anticipation of what we were about to do.\n\nRachel began to push down on me, but was so amazingly tight that I didn't immediately enter her. She used more pressure, but still I remained stubbornly outside. I realized that in my earlier eagerness, I hadn't been conscious of just how much force I'd used. No wonder she'd wanted a break in the action. I was now perfectly willing to let her be the one to guide the way.\n\nEventually, I felt the head of my straining manhood squeeze inside her. She moaned.\n\n\"Are you okay?\" I asked. \"I don't want to hurt you.\"\n\n\"It's a stretch, but a really wonderful kind of stretch. Be patient and I promise we'll get there.\" I busied myself by tonguing and suckling her wonderful nipples and kneading her luscious butt cheeks. Despite the intensity of what was happening inside her, she cooed with pleasure.\n\nLittle by little, I was drawn into her warm, slick depths. I was glad that I had come once already because otherwise I would never have been able to enter her like this without losing it. Finally, I felt her pubes press into mine. I was completely sheathed within her.\n\n\"Oh my God,\" Rachel murmured. \"We're a perfect fit. I would never have dreamed I could take all of you inside me, or that my first time would be with a man as wonderful as you.\" There were tears in her eyes, so I drew her down to me and kissed their saltiness away. Instinctively, and almost imperceptibly, she began to move her hips to the ancient rhythm.\n\n\"I don't think we're virgins anymore,\" she whispered to me.\n\n\"Virginity was way overrated,\" I whispered back. I was amazed that I had somehow retained the ability to piece together a coherent sentence under these circumstances. Every young man tries to imagine what it will feel like when he enters a woman for the first time, but none of my fantasies could have done justice to what I was feeling now.\n\nRachel sat straight up on me and raised herself until I was barely inside her, then slowly slid back down as I witnessed the miracle of my body moving deeply into hers. Then she did it again and then, gloriously, again and again.\n\nI began to experimentally thrust upward as she came down. \"Mmm,\" she murmured, approving. Gradually, our tempo increased and our bodies synchronized, moving together in perfect harmony on each stroke. I began to gently massage her engorged clitoris with the pad of my thumb and was rewarded by her positive reaction. \"Oh yeah, just like that!\" she moaned.\n\nI was in heaven now. While I hadn't quite given up on the idea of ever being intimate with a woman, never in my wildest dreams would I have imagined making love to someone like Rachel. It was almost more than my heart and mind could wrap themselves around.\n\nEven as involved as I was, I jumped a little as another brilliant flash of light burst into the room from outside. The afterimage of Rachel's glorious nude body, silhouetted in the window, seemed to be burned into my retinas, but the storm didn't seem to bother her this time.\n\nThe wind's intensity had increased to near gale levels. Moisture laden air rushed through the room and down the hall as Rachel's bedroom curtains flapped wildly. Under normal circumstances I'd have leapt up to close the windows to keep the storm at bay, but now it just felt like fate that nature's tumult should accompany our lovemaking.\n\nSuddenly, the sound of the rain on the roof became nearly deafening as it turned to hail. Rolling thunder shook the building as lightning flashed. Through it all, Rachel seemed oblivious to anything but the love we were making.\n\nBy now I was thrusting up hard into her and Rachel was slamming down in return. I could feel our perspiration as her thighs became slick against my hips. From experience, I recognized the signs of her approaching climax. Soon, she was there.\n\nRachel pressed down against me while I ground my hips up against her, still buried to the hilt. This time she was nearly silent, but another flash of lightning showed her eyes to be clenched shut as her face wore the mask of ecstasy. I was prouder at that moment than I'd ever been in my life for the ability to give this awesome woman such pleasure.\n\nEventually, Rachel collapsed onto my chest. I gently massaged her back as she returned to Earth.\n\n\"Was it good for you?\" she finally managed, her whisper barely audible above the pounding on the roof.\n\nI didn't even consider a smart-ass remark. \"It was the most amazing thing I've ever experienced,\" I told her honestly.\n\n\"Did you come?\"\n\n\"No, but that's okay,\" I said. That had been so amazing, even without shooting my wad, that it could be considered the highlight of my life.\n\n\"You bet it's okay,\" she said, \"because I want you to be on top now.\"\n\nTaking that as my cue, I again rolled us over, my still hard-as-a-rock erection staying warm and safe inside her. I began to thrust a little as her ankles wrapped around the back of my thighs. The motion was unfamiliar, yet instinctive.\n\n\"Like this?\" I asked.\n\n\"Yeah, like that. Just more of it.\"\n\nI began to stroke harder and faster, gaining confidence with each plunge.\n\n\"Oh yeah, that's it,\" she said.\n\nSoon our pace surpassed even what we had done before. I stayed up on my elbows to keep my weight off her. Even in the darkness, I could tell that her next orgasm wouldn't be long in coming. Her long hair was spilled out over the pillow and she began to moan in time with my thrusts.\n\nI could feel that I wasn't going to last long at this rate and didn't want to come alone. I experimentally changed the angle of my entry into her and rubbed my pubes against hers on each stroke, hoping to give her maximum stimulation. It appeared to be just what she needed, because she arched her back and cried out in climax.\n\nI automatically slowed.\n\n\"No,\" she gasped. \"Keep going! More! More!\"\n\nI happily complied and as her climax built, she started meeting my thrusts by rocking her hips back and forth. This was just finally too much for me and I plunged steeply down the slope of inevitability.\n\n\"I'm gonna come,\" I moaned.\n\nThen Rachel surprised me by reaching back and lightly rubbing her finger across my anus, completely overloading my already strained self-control.\n\nThe forbidden pleasure drove the peak of my sensations into the stratosphere as I climaxed. Jet after jet of my issue raced down my shaft and splashed into the deepest part of her being as we both shook with our release. Our lips met and we kissed deeply and frantically as the sensory overload took us. I'd never imagined that lovemaking would be this good.\n\nEventually, though, we came back down from our high. I would have happily stayed inside her forever, but inevitably I softened and was expelled. I laid down on my back next to her and she rolled up on her side to drape an arm and leg over me, sighing and resting her head on my chest.\n\nWe stayed like that for several minutes as the storm outside tracked off to the east and the air in the room finally became relatively still. We could hear the distant wail of emergency sirens, but we were totally relaxed together. The room was now cold as well as dark, but we welcomed the brisk air on our damp, steaming bodies.\n\nEventually though, we began to feel the chill. A worried look came over Rachel's face and she crawled down to look over the foot of the bed. \"Uh oh,\" she said. \"All of our clothes were under the window and they look like they got pretty wet from the rain blowing in.\"\n\n\"Well then I guess we'll have to keep each other warm under the covers until they dry,\" I suggested helpfully, pulling the top sheet and comforter back so we could slide in. The bed was delightfully warm around our now chilled skin.\n\n\"Ahh,\" she murmured, spooning in against the front of me. \"I think I like this kind of thing.\"\n\n\"Me too,\" I said, cupping her breast. We snuggled in agreeable silence, basking in the glow.\n\n\"So I guess I should make you an offer for this bed,\" I eventually said.\n\n\"Offer?\" she exclaimed with mock outrage in her voice. \"Like hell you say. This bed now has sentimental value to you too. I'm getting full price!\" She rolled to face me and then, with malice aforethought, began to tickle my ribs.\n\n\"Okay, okay,\" I gasped, squirming and then grabbing her wrists out of sheer self-preservation. That had been a completely unethical negotiating tactic. \"I'll give you your asking price on one condition.\"\n\n\"Which is?\"\n\n\"It's too late to set it up at my place this evening, so I'm obviously going to need to sleep in my new bed here tonight.\" I was doing my best to be assertive and presume that we were now an ongoing thing, but despite my outwardly confident demeanor, I was dying from the tension inside. Yes, the last couple of hours had been complete magic, but was this a one-time deal?\n\n\"Well, I suppose I could pull some blankets out of my boxes and take the floor in the living room,\" she said with a sly tone in her voice.\n\n\"No good. I can't sleep alone in a strange place.\"\n\n\"So I'm to keep you company in this bed all night?\"\n\n\"Yup.\"\n\n\"You want me to sell my precious virtue and reputation for a mere $150?\"\n\n\"Every last shred.\"\n\n\"Hmm, you drive a hard bargain.\"\n\n\"I could throw some more sex into the deal, if it helps.\"\n\n\"So I might have more of those screaming, eye-popping, stroke-inducing, sheet-clenching orgasms?\"\n\n\"Previous experience is, as they say, no guarantee of future results, but I suppose it's possible.\"\n\n\"Okay,\" she said with a cute little giggle, \"but on two conditions of my own.\"\n\n\"Name them,\" I said, deciding it was now safe to let go of her wrists. I was also feeling better about the chances that our relationship was no flash-in-the-pan.\n\n\"I want first right of refusal if ever you want to sell this thing.\"\n\n\"Done. And the next?\"\n\n\"I still love this bed, maybe more now than ever since I just lost my cherry on it, so I want visitation rights.\"\n\nI could see that a trace of the fear I'd felt was now mirrored in her eyes. She wasn't quite sure I wanted to keep seeing her after this night was over. Of course she was being as patently ridiculous as I had been moments before. I couldn't imagine life without her now.\n\n\"You can visit your bed any time you like as far as I'm concerned.\" She tried to hide it, but I saw the relief. \"In fact,\" I continued, \"I'm absolutely convinced that after all these years, your bed would miss you if you ever slept anywhere else. I'd hate to see that happen.\" I knew what I wanted and, for once, was going to just ask for it.\n\n\"That's a deal,\" she said without hesitation, sealing it with a kiss.\n\nIt was just after lunchtime the next day when I maneuvered my Pontiac to the curb in front of the cottage. The old man was up on the porch, just putting a chainsaw back in its case after cutting up a large limb that had evidently fallen in the front lawn during the storm. The house itself didn't look any the worse for wear.\n\n\"Good afternoon, sir,\" I called to him as I got out.\n\n\"Howdy, Alan,\" he said in return. \"Did you find a bed?\"\n\n\"I sure did.\" The trailer did indeed contain my new waterbed, but it was also stuffed to the gills with cardboard boxes. \"Oh, and I found a roommate after all.\"\n\nI walked back toward the rusty blue Corolla that had followed me here. Rachel met me halfway, grinning. We walked up to the door, hand in hand, fingers perfectly interlaced. She squealed, though, when I let go of her hand and scooped her up into my arms.\n\nMr. Cabrini didn't even blink. He whipped out his big key ring and opened the door for us. I thanked him, then carried her over the threshold.\n\n\"That's gonna be an extra fifty bucks,\" he said, deadpan. \"A month.\"\n\nI think Rachel's father would indeed have liked knowing what happened as the years and decades went by, in the bed he'd so lovingly made for us.\n\nThe End\n\n \n\n \n\nIf you've enjoyed this story, please do me a quick favor by giving it a rating. Or better yet, leave a comment. Us writers live for that kind of stuff.\n\n \n\nThanks!\n\nMichael\n\n \n"
    ],
    "authorname": "Michael_Butterfield",
    "tags": [
        "brunette",
        "college",
        "virgin",
        "waterbed"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/imperfections-2"
}