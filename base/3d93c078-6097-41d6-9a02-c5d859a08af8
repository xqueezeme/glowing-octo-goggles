{
    "title": "Quinn",
    "pages": [
        "Divorce is strange. Two people can go from the height of emotional and physical intimacy to barely speaking. Ana and I had been married for seven years, together for nine, and that's what happened to us. Things just suddenly ground to a halt, and the only thing left to do was walk away.\n\nWell, \"suddenly\" isn't quite fair. We'd always had differences, but what couple doesn't? Our lives just took us in a direction that magnified some of our smaller differences. We also kept growing as individuals. Who knows everything about themselves (or is honest about it) when they're only twenty-one?\n\nThe short version of the whole thing is this: the future we pictured together from the vantage of our early twenties began to shift separately in each of our minds, each unique version drifting farther and farther apart. She wanted three kids and a pile of dogs, and I wanted just her and a quiet home (and maybe eventually one kid). When we couldn't overlay our visions any longer, we started to fight. It only took a few months before we realized what we had to do.\n\nWe didn't own a house, we had no kids or pets, and our only joint property was one overstuffed sectional we'd financed. I moved out, and I let her keep the furniture.\n\nAnd so, there I was, heartbroken over a marriage that had ceased to exist months, maybe even years, before our divorce. For the first time since I was twenty-one, I was also a single man back on the market. Although I truly was still grieving, there was an undeniable thrill knowing I'd get to discover another person all over again.\n\nOne other thing was different this time around, too: I'd come out to Ana a year and a half ago as bi. It was something I'd known for a while, but had to take time to admit (even to myself). She was supportive, and we even tried pegging once, but I don't think she was ever totally comfortable with it. (It was only that one time she agreed to peg me.)\n\nSix weeks after the divorce, I still felt like I was settling into my new life. I got into a better routine of working out and running, got back to earnest work on my novel, and started catching up with friends I hadn't seen for a while. I felt healthy for the first time in a long time. I also felt incredibly horny.\n\nI decided to share my bi identity (which I'd previously shared only with Ana) with my friend Brannon. Brannon was gay.\n\n\"You're bi?!\" he said, almost spitting out his beer. \"Since when?\"\n\nIt was a Thursday night. We were catching up over drinks at a gay bar downtown \u2014 Brannon's pick.\n\n\"I mean, probably forever?\" I said. \"But I only really put that label on it and embraced it last year.\"\n\n\"Did Ana give you a hall pass?\" he said. He loosened his tie, and then his eyebrows jumped up. \"Is this why you two divorced?\"\n\n\"Jesus, no,\" I said. \"I didn't want a hall pass.\"\n\n\"Well, shit,\" Brannon said. The crowd at the bar was bigger than I'd expected, even for a weeknight, and the dancefloor was relatively full. \"Are you going to get out there and fuck some guy tonight?\"\n\nI'd asked Brannon out for drinks because I was hoping maybe he knew someone he could set me up with. Sure, he was attractive and I'm pretty sure he'd be a great lay (said the gay virgin), but I didn't think I wanted to jeopardize our friendship with sex (even though I'd imagined what that sex might be like).\n\n\"I wanted to ask you,\" I said, \"if you knew some guy who'd be interested in a hook-up.\" Wow. Just having the words out there was a thrill in itself. \"I need someone you can vouch for. I want to mess around and explore this side of myself, but I don't know how far I can go yet. I wouldn't be comfortable with a total stranger.\"\n\nBrannon took a sip of beer and narrowed his eyes. \"I'll fuck you right here.\"\n\nAfter I started thinking of myself as bi last year, it became a lot easier to appreciate an attractive man, and Brannon was definitely one of them \u2014 and my type. Dark hair, well groomed, fit, intelligent, funny, a sharp dresser, polite \u2014 and I could go on.\n\n\"I'm flattered,\" I told him, faking annoyance. Then earnestly, \"I don't want to ruin our friendship, dude. What if it got weird?\"\n\n\"What if I gave you the best orgasm of your life? We couldn't be friends after that?\"\n\n\"I'm not trying to hurt your feelings,\" I said, laughing a little. Brannon was pushing back, but I could tell he was understanding. \"I told you I'm buying tonight, right?\"\n\n\"Why do you think I want to get you off?\"\n\n\"Okay, really,\" I said, \"Do you know someone?\"\n\nHe made an exaggerated sigh. \"Of course I do,\" he said. \"Have I ever told you about my friend Quinn?\"\n\nI shook my head.\n\nBrannon said, \"He's handsome, clean-cut, keeps himself in good shape, about your height and build, and from what I've heard is a pretty passionate lover.\" He finished his beer. \"I have not had the pleasure, but I hear he's well-endowed. He also just exited a two-year relationship. He might be interested.\" Brannon held up a finger as if to say, but wait!, and gave a knowing nod. He pulled up something on his phone and then showed me a picture. Yeah, this Quinn was a catch. Attractive, great smile, looked confident but not arrogant, and was wearing a polo shirt in the picture with the collar not popped.\n\nInstantly I felt flushed, and my legs started to tremble. I'd fantasized about a man-on-man encounter and never thought it would happen. Here I was about to ask my friend to make it happen.\n\nMy mouth was a little dry when I said, \"Could you give him my number?\"\n\nBrannon laughed. \"You cunt,\" he said. Then another exaggerated sigh. \"Fine.\"\n\nHe composed a text message and read it back: \"Interested in taking a gay virgin? I've got a clean bi friend who's looking to fool around. Freshly divorced! Here's his number.\" He looked up at me. \"Good?\"\n\n\"Great,\" I said.\n\n\"Good,\" he said. \"I'm attaching a photo, too.\" He sent it and put his phone down. I moved my hand over my phone in my pocket, hoping Quinn would reach out quickly. I was already starting to feel hard just thinking about what it could be like.\n\n\"Man,\" Brannon said, \"You must be horny. You look like a cartoon wolf right now.\"\n\n\"Ana and I stopped having sex like six months ago,\" I said. \"Yeah, I'm a bit wound up.\"\n\n\"And THAT must be why you divorced,\" he said.\n\nI didn't correct him, but I said thanks for the connection with Quinn, regardless of what happened. Brannon and I each ordered another beer, and we talked about his new condo, how he was still enjoying being a bachelor, and work.\n\nTwenty minutes after the message he sent, my phone buzzed.\n\n\"Is that him?\" Brannon said. He made a show of putting his eyebrows up and down and took a big gulp of beer. \"This might be our last drink then, huh?\"\n\nThe text said, Hi, this is Quinn. Sounds like Brannon made an introduction? A friend of his is a friend of mine. :-)\n\nI smiled at Brannon and wrote a text to Quinn: I'm way out of my league here, but would you like to become even better friends?\n\nI didn't send it yet. I looked up at Brannon, read it back, and asked, \"Does he have a favorite drink?\"\n\n\"I think he's a bourbon guy,\" Brannon said.\n\nI nodded and added to the end of the text: I've got a bottle of good bourbon. Maybe you'd like to come over and we can get to know each other?\n\nThen I sent it.\n\n\"That's a good message,\" Brannon said. He finished his beer. Looking serious for a second, he reached across the table and put his hand on mine. \"I trust Quinn,\" he said. \"Don't worry about asking him to slow down if things don't feel right for you.\"\n\nI'd fantasized enough times about fucking a man. I was confident I wasn't backing out now. Still, the sentiment was sweet. \"Thanks, man,\" I said.\n\nI paid the bill and got another text. Quinn said, I only live two blocks away. Come over and I'll buzz you in.\n\nI shared it with Brannon.\n\n\"Booty call,\" he said. \"Get some.\"\n\nI thanked him for the connection and we parted ways. He said he had some more nightlife left in him before he headed home, so he stayed at the bar.\n\nOn the street, the cool night air was invigorating, like a splash of cold water. My legs were shaky from the anticipation, my cock already semi-hard. A longtime fantasy was maybe about to become reality.\n\nLuckily for me, this part of Tacoma had a good number of bustling businesses. I popped into a dingy corner market, bought the best bourbon they had (which wasn't saying much), and walked to Quinn's building. I buzzed his apartment.\n\n\"Hi,\" I said. \"I've got the bourbon.\"\n\n\"You know the password,\" he said. His voice was warm and strong. You could hear the devilish grin in it. The lobby door beeped and unlocked.\n\nI took the elevator to the fourth floor and knocked softly on his apartment door. He opened it four seconds later. He was wearing a white button-up shirt with a loosened tie, gray suspenders, and charcoal slacks. He gave me a lopsided grin.\n\n\"Nice to meet you,\" he said. \"Would you like to come in?\"\n\nHe held the door open for me and I drifted in, feeling like my feet were moving of their own will. He was even more attractive in person. I gave Quinn the bottle of bourbon.\n\n\"This is perfect,\" he said. \"I just finished my last bottle of this stuff the other night.\"\n\nHe took my jacket and led me in. It was a decent size for a downtown apartment and was surprisingly well decorated for a single man's place. He had warm lighting, tasteful art on the walls, and coordinating furniture. Lots of white and light-brown wood with modern cuts. It was clean and tidy, except for a stack of three cardboard boxes near the entrance to the hall.\n\nQuinn saw me looking. \"I just moved in recently,\" he said. \"Almost finished unpacking.\"\n\n\"This is a nice place,\" I said. \"I walk by this building at least once a week. I've always wondered what it was like.\"\n\nQuinn took two short glasses out of his freezer and poured the bourbon straight for us. He handed me one.\n\n\"Were you working late?\" I asked, gesturing at his clothes. It was after seven now.\n\n\"Sort of,\" he said, smiling again. \"I was at a party that work threw. Successful project completion. Then I got that text from Brannon. It's been a good day.\" He took a sip of his bourbon. His eyes scanned me from top to bottom. I was wearing a pair of professional slacks that I thought made my ass look great, and just a run of the mill button-up shirt with the sleeves rolled up. \"What was it you were looking for tonight?\"\n\nShould I go into detail about all the specific acts I'd been thinking about? Or just tell him I'm exploring? I was nervous, but I reminded myself to play it cool. \"A good time and a couple drinks,\" I said.\n\nHe gave me that lopsided grin again. \"I think we can manage that.\"\n\nFor the next twenty or so minutes, we just talked. We stood by his kitchen bar counter, sipping the bourbon, getting to know each other. He talked about his relationship that just ended and how he'd made mistakes, and that the loss was a wake-up call. I told him about my divorce and how I felt much the same way.\n\n\"Sometimes you outgrow a relationship,\" he said, \"and that's no one's fault. You don't know everything when you're young and getting started, right? But it'd be foolish to keep working on a relationship if you've come to see it's no longer the right fit. You have to let that person go.\"\n\nI thought of Ana, how I still loved her and how she was a great person, but that our relationship had turned into a square peg trying to fit into a round hole. Ending it was the right choice.\n\nQuinn set his drink down. He stepped toward me, put a hand on the small of my back, and kissed my mouth. His touch was firm, but not forceful. I felt his pelvis push into mine and jumped a little, feeling the bulge in his trousers press against the bulge in mine. My hand that wasn't holding a bourbon came to rest between his shoulder blades.\n\nIt took me a few seconds to recover, but then I started kissing back. His stubble tickled my lip, but his lips were like any woman's lips I'd ever kissed: warm, wet, soft. It wasn't long before our slick tongues were pushing against each other, sliding and rubbing. My cock stiffened, and I could feel it pressing against what must have been his considerable package.\n\nHe broke the kiss, took my drink, and set it on the counter.\n\n\"Would you like to take this to the bedroom?\" he said. That half-smile again.\n\nAll I could manage was, \"Yeah.\"\n\nHe took me down the hall and said, \"I'm on the end.\" We passed another bedroom, dark, with other unpacked boxes. A roommate?\n\nWho cared?\n\nQuinn flipped on the lights in his room. A large bed with ivory-colored bedding stood right in the middle of everything. He led me to it and kissed me again. His hands explored my back, my ass, and the back of my head. I followed suit and cupped both his ass cheeks. They were much firmer than I was expecting.\n\n\"Is it all right if I make your first time special?\" he said.\n\nBreathlessly, I said, \"Yes.\"\n\nHe pushed me back onto the bed. \"Take off all your clothes.\"\n\nI was used to directing the activities in the bedroom, so being commanded to strip was unbelievably hot. I slowly unbuttoned my shirt and my pants, then removed both and let them fall to the floor. I pulled my undershirt over my head, peeled off my socks, and finally slipped out of my boxers. Sliding them over my ass, exposing my bare hole to him, gave me a jolt of insane pleasure. Quinn watched studiously. I sat up on the edge of his bed, making sure I was sitting up straight. I kept my knees apart so he had a full view of my cock, which was standing straight up and throbbing. Tremors of nervous anticipation shook me.\n\n\"Incredible,\" Quinn said. He closed the distance and kissed me on the mouth again, and then I felt his hand around my shaft. He tugged me gently. I stood up to meet him, and he held on.\n\nStanding there completely naked, making out with this gorgeous, fully-clothed man, having my cock pulled \u2014 it felt unbelievably good. How did I wait so long to try this?\n\nHe broke our kiss and let go of my dick. \"Get on the bed,\" Quinn said, \"and show me your ass.\"\n\nI did as I was told. I knelt on the edge of the bed, my back straight and my feet dangling over the side, and looked at Quinn over my shoulder.\n\nHe approached methodically, put his hands on my hips, and we kissed again. Then both his hands rubbed across my chest, my stomach, up my neck. My dick hurt it was so hard. One of his hands wrapped around my hot shaft again.\n\n\"Oh my god,\" I said.\n\n\"Is that good?\" he said. He bit my earlobe, kissed my neck. The arm that wasn't pumping my cock clutched my chest. He stuck his tongue into my mouth. I moaned.\n\n\"You're beautiful,\" he said, and that's when I realized he had me charmed. I wanted every inch of Quinn, and I wanted him to use me. Anything he asked for, I'd do.\n\nHe took his hand off my dick, then wrapped it around my balls and the base of my shaft. All my meat was in his grip, and he squeezed tenderly, kneading me. His other hand stroked the front of me again, all the way up to my chin. He tilted my head back and kissed my throat. My dick ached.\n\nHe said, \"Bend over. Put your ass up in the air like your ex-wife would've.\"\n\nI was so aroused. He took his hands off me, slowly, and I leaned forward, coming down on the bed on my elbows, my ass cheeks spreading. I could feel the air of the room on my puckered asshole. I arched my back as best I could to give Quinn the best possible angle.\n\nAna never displayed herself like this, but I wasn't going to tell Quinn that.\n\nHe puts his hands on my hips again and thrust against me. I could feel the soft fabric of his pants and the cold metal of his belt buckle against my ass. He squeezed my hips and held me tightly. I could feel his hard dick in his pants, like the broad side of a sausage pressing against my ass crack.\n\nQuinn pulled away, and before my eyes could focus on what he was doing, I felt his hot lips press against my asshole.\n\nIt took my breath away. He was firm but gentle, lapping at it, doing exactly what I'd hoped someone would do to my ass one day. Ana had let me eat her ass a few times during our marriage, but she was never interested in reciprocating.\n\nThen Quinn pushed his tongue in, probing and pressing. I knew it couldn't be deep, but still it felt amazing. He took his hands off my hips, laid an arm across my lower back, and then I felt his other hand return to my cock. I balled up his bedspread in my fists and grunted. \"God that's good,\" I said.\n\nHe kept at it for another minute, then broke away and kissed down my taint, across my balls, and began licking the length of my shaft. Lying here like this, all my most sensitive areas exposed to and being teased by him, was like no sexual experience I'd ever had, including when Ana pegged me. Quinn clearly knew his way around.\n\nWith his hand that was reaching around, he pushed my cock backwards and took the tip in his mouth. I was already aching from the intensity of my erection; feeling it bend farther and then his mouth taking it was the most pleasurable discomfort I've ever had. He slurped up as many inches as he could with the angle while sliding a finger into my asshole. I really worried I was going to cum right then and there.\n\nAs if sensing it, he let me slip out of his mouth, my heavy dick springing forward into his waiting hand. \"We can't get you too excited now.\" He used that hand to keep my cock in place, laid his tongue flat against my shaft, twanged my frenulum like a guitar string, and teased my cock head and the bottom of my slit with his tip. I could've screamed.\n\nHe ran his tongue back up my dick, over my balls, and into my asshole.\n\n\"I've never had anything this good before,\" I moaned into his bedspread.\n\n\"Just wait,\" he said. \"It gets better.\"\n\nI was panting. I felt him break away and heard him begin to undress. I couldn't look up yet. Then his hand was on my hip, rolling me over, and this gorgeous man with just a little chest hair and a great, muscular figure was lying down on top of me. We started kissing again. I threw my arms around him, running my fingers over his chiseled back and down to his firm ass. I didn't get to see his dick, but I could feel something hot and stiff rubbing my prick.\n\nI broke away from his kiss. \"Let me see it,\" I said.\n\nQuinn smiled and shifted to his elbow. Finally I could see his dick, this monster pressing against mine. I'm pretty confident in my length and thickness, but Quinn had me beat. He started grinding his cock on mine. I'd experimented with rubbing a lifelike dildo against my cock before, which felt great \u2014 but this pleasure was on another planet. His glans kept peeking out of his foreskin and running into my belly.\n\nI'd never sucked a dick before, but I was sure going to suck this one.\n\n\"I want to taste it,\" I said.\n\nQuinn smiled. Without a word, he turned around, brought his knees to my face, and straddled my head. I didn't know what he was doing, but I put my hands on his sides and rubbed, then cupped his ass cheeks and kissed the back of his thighs. Was I about to eat a man's ass? My dick got even harder.\n\nThen Quinn tipped forward. His dick started pressing against my chest and his ass cheeks spread to reveal a perfect, only slightly hairy asshole. He grabbed my dick and put it back in his mouth. Holy shit, I was sixty-nining a man.\n\nI didn't know where to start, but I quickly decided it had to be that beautiful cock. I reached around him and found a grip. My first time touching another man's dick and it was this beautiful rod. I couldn't believe it. I pushed it toward my mouth, opened wide, and drew it in with my tongue.\n\nFilling my mouth with his hot flesh was unbelievable. The supple foreskin, a bead of precum, his slick head. He had to be at least nine inches long. I tried to take as much as I could in and didn't even make it halfway. I put my hands on his ass and tried to suck my way up higher, to even more, but I kept hitting the back of my throat. I didn't think I was going to gag, but my eyes watered.",
        "I started going up and down on the shaft, rhythmically sliding my tongue back and forth. His taste was salty, potent, and not even a little unpleasant. I'd let him fuck my face all day. I ran my hands over the mounds of his ass cheeks, dragging my fingertips through his crack and over the crinkle of his hole. I breathed in his spicy musk mixed with my hot saliva. His smell drove me crazy. I wanted to keep my face here forever.\n\nHe was burying my cock down his throat, and I began to lose focus. Neither of us could talk with our mouthfuls.\n\nHe lifted his mouth off my shaft, and there was an audible slap when my cock hit my belly. I kept sucking him and moaned into his cock. He started teasing my balls with his tongue, which made me spread my legs. I wanted him to have a clear path back to my asshole.\n\nSure enough, he put one hand behind my right knee and pulled my leg up, then repeated the process with the other leg. I was on my back, a man's dick impaling my mouth, and now my legs were in the air with my ass was on full display, and this man began probing my asshole with his tongue again. He was holding himself up on the bed like he was doing a pushup, and his arms ran behind my knees, pinning me in place.\n\nHe could pin me anywhere, anytime. I was his. Then he slid two fingers into my asshole.\n\nI had to take his dick out of my mouth and breathe. \"Fuck me,\" I said. \"That's so good.\"\n\n\"Are you sure you've never sucked a cock before?\" Quinn said, panting. \"You're amazing.\"\n\n\"Please,\" I said. \"Please fuck my ass.\" I couldn't wait. I needed it.\n\nQuinn unstraddled my face and hopped off the bed. He took a bottle of lube from inside his nightstand. I pushed myself to the edge of the bed and let my ass hang over, giving him a good angle while standing. I threw my legs back and held them with my elbows. My erection throbbed against my stomach. I was his.\n\nThe biggest thing I'd ever put in my ass was a girthy, eight-inch dildo. I couldn't wait to try something bigger. Quinn rubbed the lube onto his length, then lubed my shaft, too.\n\n\"Are you ready?\" he said.\n\nI nodded, breathlessly.\n\nHe rubbed some lube on my asshole, then pressed the tip of his rod against it. I felt pressure as he began to push, and then my hole slowly parted. His cock started to slide in. Quinn drilled me slowly, one of his hands on the back of my thigh, the other guiding his dick. He pushed maybe another two inches and let me adjust.\n\n\"Oh god,\" I said. \"It's so good.\"\n\nHe smiled, pushed a little more, and then the pressure dissipated as he slipped past my sphincter. God, he was in, and god, what a difference a good lube made.\n\nHe wrapped a hand around my shaft and pumped me, rubbing his thumb across my cock head. \"Deeper?\" he said.\n\nI moaned and nodded. He pulled out half of what he'd inserted, then pushed back in. The loss followed by the bigger gain and the collision with my prostate was profound. I dropped my head onto the bed and said, \"Holy fuck.\"\n\nHe pulled back again and then buried the rest. I felt his groin hit my ass, I felt him pulsing inside me. He pumped my dick slowly again.\n\nI looked up. Quinn smiled and started fucking my ass slowly. Even though he was the biggest thing I'd ever had in my ass, there wasn't even the tiniest pain. It might've been the most intense pleasure I'd ever felt.\n\nAfter a minute, he grabbed my hips and sped up.\n\n\"Did you ever put your big cock up your ex-wife's ass?\" Quinn said. I nodded \u2014 it had happened once. \"Do you think she enjoyed it this much?\" I shook my head \u2014 that's why it only happened once.\n\nHe was pounding me now, and it felt so good. I closed my eyes and moaned. Then, with no warning, he pulled out. I looked to see why, and he was climbing on to the bed. We kissed again, me putting a hand on the back of his head so I could taste him again. Our slick dicks rubbed together, jolting me. He reached down and used one hand to bring them together and jerk both our shafts. I shook again.\n\nHe took his hand off us and did that push-up position over me again. We were still making out, and I wrapped my legs around him. It was an instinctual move, one I'd never made before but one I didn't have to think about. It just felt right. And I didn't have to say anything more: he guided his cock back into my ass.\n\nThis is what I'd dreamed of about being bi: the role reversal. Here I was with this perfectly useful cock, ready to penetrate, but instead what I wanted was to BE penetrated, to play the feminine side to someone else's masculine side. I wanted to use and explore every part of my body. My cock throbbed and rubbed against Quinn's stomach while he pounded me. It throbbed and I hoped that I'd get a chance to fuck Quinn as hard as he was fucking me now.\n\nHe kept it up for a few blissful minutes, and then he slowed down. He lowered himself down onto me, and I kept my legs wrapped around him. I put my arms around him as tightly as I could. We kissed tenderly, pressing as much of ourselves to the other as possible. My prick and my balls ached from the pleasure and the pressing.\n\nI reluctantly broke our kiss. \"Will you take me from behind?\" I said.\n\nHe smiled. \"Of course.\"\n\nHe slowly rose and carefully glided himself out of my ass. I started to feel cool without his warmth, but I knew that wouldn't last long. I turned over and got onto my knees, meaning to move toward the head of the bed, but he moved behind me as soon as I was up, spooning me. He ran his hands over my body again, from my thighs up to my neck. We fit together perfectly.\n\nI reached between my legs and found his dick, but instead of sticking it in my ass, I brought it through so I could straddle it and feel it against me. He was so long that even from behind me, his cockhead started peeking out from underneath my scrotum. I ran my hand over his cock and my balls. Then one of his hands was on mine and his other pumped my cock.\n\n\"Are you ready for more?\" he whispered into my ear.\n\n\"Yes,\" I moaned.\n\nHe pulled back from our spoon, angled his cock into my ass, and pushed. Of course it slipped back in, and the new angle was even better. He put his hands on my hips and squeezed. He buried himself in my ass and held me there.\n\n\"You two sure got acquainted quickly,\" Brannon said. He stood in the doorway, arms crossed over his chest, smiling.\n\nI was in too much sexual ecstasy to be shocked, plus the bourbon had worn away any remaining inhibitions. I guess now I knew who Quinn's roommate was.\n\nQuinn cupped my balls and stroked my shaft. \"Thanks for the connection,\" he said to Brannon.\n\nWith all the not-so-subtle hints at the bar, I wondered if Brannon had picked Quinn for me so he'd have this opportunity \u2014 to see us and maybe even join us. I'd wanted to avoid sex with Brannon just because we were friends, but I didn't have the same resolve when I was buzzed and already getting wonderfully fucked.\n\n\"So,\" I said. \"You want to join us?\"\n\nBrannon smiled and started to undress. I put my hands on the headboard and pushed my ass into Quinn, who received the signal loud and clear and resumed plowing me.\n\n\"I was trying not to fuck my roommate,\" Quinn said. \"I guess I should be happy I lasted this long.\"\n\n\"Just a few weeks?\" Brannon said. I looked over my shoulder and saw him getting onto the bed. His dick wasn't as big as Quinn's, but it was still considerable. He was on his knees behind me, came shoulder to shoulder with Quinn, and they started to kiss. Quinn fucked me harder.\n\nI pushed back from the headboard, lowering my head and arching my back. I closed my eyes and couldn't count the number of hands rubbing my back. The ecstasy was limitless.\n\n\"I want both your dicks,\" I said. \"I want both your dicks.\"\n\nQuinn slowed down. \"How do you want us?\" he said.\n\nI pulled my ass slowly off his dick. I turned around to two beautiful men, both stroking their dicks. To Brannon, I said, \"Sixty-nine me.\" To Quinn, I said, \"Cum in my ass.\" I moved my ass to the end of the bed, threw my legs back, and then started reaching for Brannon's cut dick.\n\nHis face lit up. He moved to me, lifted a leg over my head, and straddled my face like Quinn had. He didn't hesitate: he had my dick in his mouth as quickly as he could reach it. I took his thick rod in my hand and opened wide. His silky-smooth head was different than Quinn's, a little wider and a little stouter, and, without the foreskin, I got to focus more on the rim of his glans. He tasted fresh and soapy, like he'd just washed. His smell was just as intoxicating as Quinn's.\n\nTo be sixty-nining a man again was euphoric \u2014 and then Quinn's dick slid back into my ass.\n\nThe feeling of a man pinning me to the bed, his mouth working my dick, my mouth stuffed full of his hot, thick cock, while another man rammed his shaft in my ass was the most fulfilling (pun not intended) moment of my sexual history. I wanted to suck and fuck like this until I died.\n\nBrannon was doing an amazing job on my rod, and I could feel an orgasm building. I thought it'd be weird, but it wasn't \u2014 I wanted to explode down his throat.\n\n\"I'm going to fucking cum,\" Quinn said, and I could feel his rod thicken even more.\n\nI moaned in pleasure, unable to speak with Brannon's cock jammed down my throat. This was perfection.\n\nI threw both my hands onto Brannon's ass cheeks, forced as much of his dick into my mouth as possible, felt Quinn pumping my ass furiously, heard him howl, and then I came. Wave after wave of pleasure rolled through me, pulsing from my orgasm and from every time Quinn hit my prostate. I dumped what could've been gallons into Brannon's mouth. I tasted his precum and smelled his soapy ass and all I wanted was more.\n\nQuinn held himself in me, recovering from his orgasm. Brannon rolled off me and let my slightly less hard dick slide out of his mouth. We were all panting.\n\n\"Brannon,\" I said. \"Do you want to come in my mouth or in my ass?\"\n\nHe beamed. \"Your mouth,\" he said, with hardly a thought.\n\nI centered myself on Quinn's bed and motioned Brannon to me. He straddled my head again, but reversed from our sixty-nine. His ass was over my chest, his balls rested on my neck, and he held his cock in his hand, right over my chin. I lifted my head and kissed his balls, licked his shaft. God I wanted him so badly.\n\n\"Fuck my face like this,\" I said. \"Gently.\"\n\nBrannon was in disbelief. He started to lean forward, like he was going to go down on all fours, and guided his rod into my yearning mouth. Then he did go down on all fours, like he was doing a form of missionary on my mouth. It was so hot to see his groin above my face, his dick disappearing into my mouth. I wrapped my arms around him and hugged his back, rubbed down to his ass. Then he started gliding in and out of my mouth. I sucked greedily. I didn't want to give up an inch.\n\nQuinn, who I'd lost sight of, starting stroking my re-hardening dick.\n\nI clutched Brannon even harder, sucking up his shaft, feeling him punch the back of my throat. My eyes watered and I had to be intentional about each breath I took.\n\nThen something else incredible happened: Quinn straddled me and swallowed my dick with his asshole.\n\nI moaned, even harder than before. I was sucking my second dick of the night and fucking my first ever male ass. I couldn't believe I was hard again. My next orgasm was going to kill me.\n\nI kept sucking Brannon, but I moved my hands to Quinn as he brought himself up and down on my dick. The feeling of his ass was warmer than a vagina, even a little tighter, and maybe slicker with our lube. I loved feeling the hair on his legs, his dick slapping my belly when he came down. I wanted to savor every detail that made this different from fucking a woman.\n\nI put my hands back on Brannon and stroked his back and his ass. I couldn't see, but I felt one of Quinn's hands on mine. He took my hand and dribbled something in it.\n\nLube.\n\nI found Brannon's asshole and began pushing a finger in. His reaction was immediate: his dick got even stiffer, his thrusts more urgent. I slurped his dick and craved his hot sticky load.\n\nI worked a second finger into his ass and pressed as far as I could with the angle.\n\nI didn't think it was possible, but I was already feeling a second orgasm building. My free hand found Quinn's thigh, which I used to leverage myself deeper inside him. His cock slapped my belly with every thrust.\n\nThe taste in my mouth suddenly got saltier \u2014 Brannon's orgasm was arriving. I moaned around the meat that was pummeling me. I jabbed my two fingers deeper into Brannon's hole. I thrusted my swelling rod furiously into Quinn's ass. It was absolute bliss.\n\nBrannon grunted as the first jet of his hot cum flooded my mouth, and then it just kept coming, blast after blast. My rocket took off, too, and I went rigid as my second orgasm rocked me. I felt my achingly engorged cock spray a fresh load deep in Quinn's ass. His steel pipe of a dick just kept slapping my stomach with every thrust.\n\nAfter a moment, we all just came to a stop. Quinn and Brannon were panting, and once Brannon pulled his dick out of my mouth, I was, too.\n\nI was getting ready to swallow Brannon's load when he started kissing me, probing my mouth for his seed. I put a hand on the back of his head and held him on so we could share every drop.\n\nAfter a moment, Brannon and I finally broke the kiss. We collapsed onto the bed, catching our breath, and Quinn joined us. The two of them looked as exhausted \u2014 but just as satisfied \u2014 as I felt. No one said anything for a few minutes.\n\nQuinn broke the silence. \"Wash up,\" he said. \"I'll get our drinks.\"\n\nA few minutes after that, we all got back into Quinn's bed. We stayed close and pulled a blanket over our lower halves. I was in the middle. We sipped our bourbons and stroked each other.\n\n\"What did you think?\" Brannon said, smirking. \"Would you do it again?\"\n\n\"I don't know how I waited so long,\" I said. \"I'd fuck ass over pussy any day.\"\n\nThey both laughed.\n\nI turned toward Quinn, intentionally brushing my bare ass against Brannon's dick, which I could feel was semi-hard. Brannon put a hand on my hip.\n\nI sipped my bourbon and said to Quinn, \"Did you know he was going to come home in the middle of things?\"\n\n\"I didn't know for sure,\" he said. \"But Brannon's got a reputation.\"\n\nI laughed this time. Rather than pivoting back to face him, I looked over my shoulder. \"Wouldn't I know if you were a manwhore?\" I pushed my ass back into his dick. I couldn't believe it, but I still felt horny.\n\n\"Now that we've fucked,\" Brannon said, \"you're a member of an elite group. You'll get to learn all kinds of new things.\" He put a hand on my hip, pulling me closer, and kissed my mouth. His dick felt fully hard now, pressing into my back.\n\nI put my hand under the covers and arched my leg up, offering my ass to him. I took Brannon's dick in my hand and moved it from my back to between my ass cheeks. I felt the top side of his shaft press against the outside of my hole.\n\nHe gave a little thrust against me. \"Are you ready for another round?\" he said, sounding surprised. It couldn't have been more than twenty minutes since he and I climaxed.\n\nI gyrated against him as slowly as I could. \"Yeah,\" I said, \"I need more.\"\n\nQuinn took all our drinks and set them on the nightstand. Brannon found the lube and rubbed it onto his shaft. He shifted slightly, moving toward the foot of the bed, and then I felt his cockhead push against my asshole. He knew what he was doing, and I was already loosened up, so he slid right back in.\n\nI moaned. It was as good as the first time with Quinn. God, I thought, men who never allow themselves to be fucked in the ass are missing one of male sexuality's greatest pleasures.\n\nQuinn started kissing my mouth while Brannon kissed my neck, my shoulders. He buried his rod in my ass and kept his tempo slow. I arched my back toward him as much as I could. The pleasure for me was incredible, more of that role-reversal feeling again, like I was getting to be the feminine to his masculine. Penetrate me, use me, take me. I started running my hands over Quinn, and he brought his body closer. One of his hands brought our cocks together, and he pumped our shafts as one.\n\nI couldn't remember the last time I'd had three orgasms in one day. I didn't think it was possible with as much as I'd already shot, but my aching dick was hard as a rock again. Tomorrow it'd feel like punishment, but tonight was all pleasure.\n\n\"Cum in my ass, Brannon,\" I said, then went back to kissing Quinn. It all still felt surreal, fucking one of my best friends and a man who would've been a complete stranger just a few hours ago. But the hot, thick shaft sliding in and out of my willing asshole reminded me it was deliciously real.\n\nBeing sandwiched between these two men was the peak of pleasure. Our mixing heat, sweat, musk, and cum. It felt like I really could cum a third time.\n\nQuinn, still pumping our dicks, started to breathe more sharply. His hand sped up. I put the one hand I could use on the small of his back, right above his ass cheeks, and pulled him slightly closer. \"Yeah,\" he whispered near my face.\n\nBrannon squeezed my hip more forcefully, and I knew we were all close.\n\nQuinn grunted first, his white spunk splattering across our close stomachs and the bed, and then Brannon started going deeper, harder. He grunted and forced himself all the way into me, and then my painfully engorged dick started its final build.\n\nI came last, impaled on Brannon's cock, sinfully rubbing on Quinn's, and my load was watery, almost nonexistent, but it took my breath away.\n\nWe all fell motionless again and just panted. Brannon's dick slowly relaxed inside me. I felt myself wilting out of Quinn's grip.\n\nWhen I could finally talk again, I said, \"I sure hope you guys are going to let me sleep here tonight.\"\n\nIt was funny, and the perfect way to transition out of such maddeningly good sex. We were all exhausted. Quinn showed me to his bathroom and got me a clean towel. While I showered, he said he and Brannon would change the sheets. Then they'd shower, and we could all sleep together.\n\nAll I could think about in the shower was how this had been like no Thursday night I'd ever had. I was supposed to be at work tomorrow morning, but I was beginning to think that wouldn't happen. Not because I anticipated being unable to work, but because I wanted to keep my schedule open in case we could all have sex again tomorrow.\n\nWhat a change this was. Just a few months ago I was withering away in a sexless marriage, and here I was, taking a leap with my new sexuality. Wouldn't Ana be surprised to know my first lay after our divorce was two gorgeous men?\n\nBut it didn't matter what she thought. She wasn't my life anymore. I was moving forward, discovering myself, and finding for the first time in years that I was truly happy."
    ],
    "authorname": "pnw_writer_85",
    "tags": [
        "bi",
        "anal",
        "threesome",
        "first time",
        "sixty-nine",
        "fellatio",
        "gay",
        "feminine",
        "masculine",
        "role reversal"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/quinn-3"
}