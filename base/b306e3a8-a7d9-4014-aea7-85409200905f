{
    "title": "Army Brat Ch. 02",
    "pages": [
        "Note: Wow, I received many emails to keep this story going. So here goes. Please read \"Army Brat\" first to catch up. The sex picks up which will make some of you happier. All characters are at least 18 years old. All rights reserved.\n\n*\n\n\"Are you OK?\" Danny's mother asked after Ellen and he walked back into the restaurant and sat across from her. \n\n\"Yes Ma'am,\" Danny answered not making eye contact with her or Dr. Brand. \"Just hungry.\" \n\nAllan changed the mood. \"I bet you can't wait to play ball again.\" \n\nDanny held Ellen's hand beneath the table. \"I don't think I've ever gone this long without playing baseball.\" \n\n\"He doesn't love anything more than baseball,\" Ellen grinned. \"Right honey?\" \n\nDanny was about to say yes but Ellen squeezed his hand very hard. He laughed. \"I do love to eat.\" Again she squeezed it but then started rubbing her thumb over the top of it. It didn't take very long before he felt himself getting excited. \n\nAcross the table the same thing was going on. Allan had grabbed Janet's hand when she returned from the door and had not let it go. \n\n\"Oh, I forgot to tell you that I received an email from Captain Elliott.\" \n\nDanny sat up. \"Really? What did he say?\" \n\n\"Good news. He is being transferred to the States and will be stationed less than an hour away. He might even live around here.\" \n\n\"Was he a friend?\" Allan asked feeling left out of the conversation. \n\n\"Yes, we've known him and his family for a long time. Danny and his daughter Lisa were inseparable.\" \n\nAgain Ellen squeezed his hand again. He coughed. \"We were just friends. She is a great softball player.\" He looked at her and saw the stare back at him. \n\n\"That's great,\" Allan smiled. He saw the look from Ellen and knew that his daughter was falling hard for Danny. \"Maybe we can all go out to dinner some time.\" Now he was the one who got the stare from his daughter. \n\nLuckily the food came and they all dropped hands and settled in for the delicious meal. After desert the parents ordered coffee and Ellen and Danny left to stroll down the river walk. \n\nAs soon as the restaurant door closed Ellen asked, \"Are you sure you are just friends?\" \n\n\"Yes, our dads worked together and we've known each other since we were eight years old.\" \n\n\"Does she think of you only as a friend?\" Ellen wouldn't let it die. \n\n\"Yes, I mean..I think so. We've never..\" He stopped. And then she stopped him from walking. \n\n\"Tell me,\" she said. \"I want to know everything before she gets here.\" \n\n\"It's nothing.\" He turned to walk again but she pulled him back. \"Ok, we were at a party and everyone started pairing off. Lisa and I were the only two left.\" \n\n\"What did you do?\" \n\n\"Not much...I mean we were only like fifteen.\" \n\n\"Tell me,\" Ellen said firmly. \n\n\"We kissed.......and that's it.\" \n\n\"How many times?\" \n\n\"I don't know,\" he said. \"It was nothing.\" \n\nEllen turned and he turned with her. They walked together down the dim lit walk until the restaurant was only a speck behind them. Ellen saw the walkway heading away from the main walk and pulled him that way. \"This way.\" \n\nDanny followed not sure where they were going. She made another turn and headed down some stairs to a boat dock. About eight boats were tied up in slips. \"Over there.\" \n\nDanny was being dragged along but stopped when she started stepping up onto the fourth boat. \"I'm not going on there.\" \n\nShe laughed and pulled him around to the side. \"Look at the name of the boat.\" \n\n\"ELLEN MARIA\" He read. \"Is that your middle name? Is this your boat?\" \n\n\"My dad's boat. My mother's name is Maria.\" She stopped talking and moved up onto the boat. After searching for a key behind some canvas she opened a small door leading downward. \"Come on.\" \n\nDanny hopped up onto the deck and ducked his head to prevent hitting the low lying doorway. He saw a light go on ahead of him and then saw Ellen waiting for him. \n\n\"Nice.\" He looked around at the neatly packaged room. On one side was a small kitchen and table and the other side had a long bench seat. As he turned to look at the rest she moved up behind him and pressed her softness into his backside. Her hands moved around his front and upward until she covered his chest. \n\n\"We are finally alone,\" she whispered. Her fingers caressed and massaged his chest until she found his hard nipples. She rubbed and pushed them with her thumbs. \n\n\"Can I do that to you?\" He joked expecting her to smack him but she remained quiet. He felt her hands and body move away and when he turned he saw her facing away. \"I....uh...was..kidding.\" \n\n\"I'm not,\" she whispered. Thirty seconds went by before she felt his hands on her waist and then his hardness pressing into her rear. Again he hesitated until he got the nerve to slide his fingers over her arms at her sides until they met between her navel and chest. \n\n\"Ellen,\" he whispered feeling her soft buns against his hard-on. \"You are so beautiful.\" \n\nShe giggled and wiggled her butt against him. \"So you are speaking English now.\" She was enjoying being the aggressor for the first time. \"Are you going to touch me or not?\" \n\nDanny had touched some girls back in Germany at his 18th birthday party but this was not just some girl. She was the one who he went to bed thinking about and the same one he woke up having dreamed about. His trembling fingers moved upward until his thumbs pressed into her softness. His shyness disappeared causing his hands to dash upward until they cupped and squeezed them. \n\n\"Easy,\" she whispered realizing that he really didn't know how to touch a woman. After letting him explore and caress she turned facing him causing his hands to drop. \"You don't have to stop.\" \n\n\"Good,\" he grinned. His fingers moved up until they found her nipples. He teased them until she moaned and moved her mouth to his. \n\n***** \n\nAllan and Janet held hands while they finished their coffees and then he paid the bill. \"We never said when we will meet back here,\" she said as they walked outside. \n\nHe looked at his watch. \"I'm sure they will be back here by eleven. We have forty minutes.\" \n\n\"For what?\" She smiled feeling like a teenager again. \n\n\"I think you know,\" he grinned. They moved quickly down the walk with her almost running to keep up with him. \n\n\"Where are.....we going?\" She panted. \n\n\"You'll see.\" Five minutes later they stood on the dock behind his boat. \"Shit.\" \n\n\"What's wrong?\" \n\n\"They beat us here. The light is on.\" \n\n\"Is this your boat?\" She glanced at the name. \n\n\"My ex-wife's name is Maria.\" \n\nShe was wondering if he would talk about her. \"You haven't removed her name.\" \n\n\"What should we do about the kids?\" He asked knowing that they were alone. \n\n\"After meeting your daughter and knowing my son I don't think we have anything to worry about.\" \n\nHe realized that she was right. \"Why don't we take a walk and I'll tell you all about Maria?\"\n\n*****\n\n\"Oh Danny,\" she moaned feeling his light and feathery touches on her mounds. Todd had been so rough with her. Her tongue moved to find his as her hands moved down to cup and squeezed his hard buttocks. Both were too shy and cautious about touching down the front sides. \n\n\"Let's lie down,\" she whispered. She moved onto the bench seat making sure to keep her dress down. She smiled as he slid in next to her and pressed his body again into hers. He started to lean forward but she stopped him. \"I want us to go slow.\" \n\n\"Ok,\" he said somewhat relieved because he was as inexperienced as she was. \n\n\"But, I don't want to go slow,\" she whispered. Her lips moved over and nibbled on his dangling earlobe. \n\n\"We...we..should..go slow,\" he gasped as her thigh pressed into and rubbed against his hard-on. He cupped her right breast again and felt the bra under it moving downward. As he fondled it he managed to push the bra down until only the thin silk dress was between his fingers and the rigid tip. As she rubbed against his cock he pressed into her covered pussy. \n\n\"Oh God!\" She cried. Never had she gotten this close with Todd. \"Danny...there is something I have to tell you.\" \n\nHis leg and fingers stopped rubbing. \"What?\" \n\n\"I've never.......never you know.\" \n\n\"Good,\" he whispered. Again his leg and fingers moved until she pushed him back. \n\n\"Well?\" \n\nHe laughed. \"I haven't either.\" \n\n\"Good.\" \n\n*****\n\n\"Maria and I dated since the ninth grade. She practically lived at my house and I did the same at hers. Everyone said that we should get married after college and we didn't let them down. On the surface we were very happy and did everything together. I guess it was when she was pregnant with Ellen that we both knew that the only thing missing in our marriage was love.\" \n\n\"What happened?\" Janet asked as they walked slowly along. \n\n\"We both knew it but neither of us wanted to say it. She wanted to start her career in medicine as well but having a child would be in her way. But again she never told me and I was happy in the loveless marriage. At least I thought I was.\" \n\n\"I'm so sorry.\" \n\nAllan stopped and pulled Janet close. \"As Ellen grew up Maria spent most of her time with her. She was a soccer and dance team mom and we never really had any time alone together. It was just after Ellen's fifteenth birthday that we found a \"Dear Family\" letter on the kitchen table.\" \n\n\"Poor Ellen. She had a loss as great as the one Danny had.\" \n\n\"Maybe even worse,\" Allan said. \"Ellen lost her mother thinking it was her fault and then the hatred started. I've tried so many times to get the two of them together but both have firmly refused.\" He leaned over and kissed her forehead. \n\n\"Do you still see her?\" \n\n\"No, she moved away and except for Ellen's annual birthday card we never hear from her. She wanted her career and I guess she got it.\" \n\n\"I guess we've both had a rough time,\" she whispered. Her eyes moved up to his until he kissed her and then they closed. As they walked slowly back towards the restaurant they heard the running footsteps and laughter behind them. \n\n\"We will meet you old folks back at the restaurant,\" Ellen laughed as they ran by. \n\nAllan laughed too. \"This is the happiest I've seen her in a long time.\" \n\n\"Danny too.\" \n\n***** \n\nIt was even stranger as Allan and Ellen dropped Danny and his mother off. Both couples wanted to part with a meaningful kiss. \n\nAfter the car stopped in the driveway they all looked at each other. \n\nFinally it was Ellen who spoke up. \"OK, if we are going to do this then we have to have some rules. Dad, you can take Mrs. Upton to the door and into the house. Danny and I will stay here.\" \n\n\"I'm starting to really like you,\" Janet smiled. She moved out of the car and guided Allan inside the house. \n\n\"Am I going to see you tomorrow night?\" Ellen asked as she moved closer. \n\n\"Are you asking me out on a date?\" He joked. She smacked his good arm. \"OK...yes. What do you want to do?\" \n\n\"The same as you but we have to keep it slow,\" she grinned. \"So, how about a movie?\" \n\n\"Sounds good,\" he said as he pulled her soft lips again to his. \n\n*****\n\nAllan and Janet began kissing and touching as soon as the door closed. She reached and stroked his covered penis while he reached down under her dress to discover her thigh high stockings and bare thighs. \n\n\"It's been so long,\" she moaned when his fingers hooked under her damp panties and into her moist slit. \"I want you so much.\" \n\n\"Would you like to take a boat ride tomorrow afternoon?\" \n\nHer legs opened wider feeling his middle finger deep into her moist and hot oven. \"Will we be alone?\" \n\n\"Yes, with no one around for miles.\" \n\n\"Yes, but now you have to stop. Danny can't come in here and find your finger under his mother's panties.\" \n\nHe reluctantly pulled it out. \"I have something better for tomorrow.\" \n\n\"I know,\" she giggled. Her fingers let him go. \"What are you going to do about that?\" \n\nAllan looked at his bulge. \"It's dark.\" \n\nThey kissed one more time and then he opened the door and looked out at the dark car. \"What do I do now?\" \n\n\"This is too strange,\" she giggled. She turned and flashed the front porch lights on and off and few times. A minute later Danny moved out of the car and passed Allan on the way to the house. Neither saw the huge tents in their slacks. \n\nDanny hurried inside and turned slightly to hide his excitement while Allan slipped quickly into the car. \n\n*****\n\nAs soon as they entered the house Ellen received a phone call. She opened her phone expecting to see Danny's number but saw Button's instead. \"Next time you might as well come with us.\" \n\n\"Can I?\" Buttons laughed. \"Hurry and tell me about it.\" \n\nEllen glanced over at her father who was whistling. \"Wait until I get to my room.\" She looked over at her dad. \"Good night Daddy.\" \n\n\"Good night baby.\" \n\nEllen dashed up the stairs and into her room. After closing the door she plopped on her bed. \"Tonight was the first.\" \n\n\"YOU DID IT?\" \n\n\"Not that,\" Ellen laughed. \n\n\"Well what?\" \n\n\"I came,\" she whispered. \n\n\"OH MY GOD! WHAT DID IT FEEL LIKE?\" \n\n\"It was unbelievable,\" she gushed. \"Like my whole body was on fire but it was a good fire and then....it was like I exploded into tiny pieces.\" \n\n\"I'm jealous,\" Buttons said. \"Was he like touching and kissing your...\" \n\nEllen laughed. \"No, we didn't go that far. We just rubbed our legs against each other.\" \n\n\"Did you scream?\" \n\n\"Not at first. I think I was just gasping for air. But when it happened I think I almost blew Danny off the bench.\" \n\nNothing was said for about ten seconds. \"He's the one isn't he?\" \n\n\"I think so...I don't know. I mean after my mother just walked out I've never thought that love existed. I mean how could someone who said she loved me every day just leave like that?\" \n\nButtons could hear the hurt in her voice like so many times before when she talked about her mother. \"That's different. The way you are feeling about Danny is different.\" \n\nEllen wiped the tear that had fallen from her left eye. \"I think I stayed with Todd because I didn't love him and if he left me then it wouldn't matter. I'm scared now being with Danny.\" \n\n\"It's not the same,\" Buttons said again. \n\nEllen heard the call waiting buzz on her phone. \"I think he is calling me. I'll talk to you tomorrow.\" \n\n\"Hi,\" she said softly not wanting him to hear her sadness. \"I miss you.\" \n\nHe grinned. \"I saw you twenty minutes ago.\" \n\n\"Much too long,\" she grinned. \"Are you in bed?\" \n\n\"Yes, and I'm thinking about you.\" \n\n\"Tonight was my first time.\" \n\n\"Huh?\" \n\nShe sighed. \"It's not fair. Men experience it a lot sooner than women do.\" \n\n\"Huh?\" \n\n\"You don't have an idea what I'm talking about do you?\" \n\n\"No, first time doing what?\" \n\nShe gave up. \"Before I say good night I want you to promise me something.\" \n\n\"Sure,\" he said still confused. \n\n\"Promise me that if you ever want to break up with me that you won't just leave me a note.\" \n\n\"Right now I feel like I'll never want to break up with you,\" he whispered. \n\n\"Promise me.\" \n\n\"I promise.\" \n\n\"Good night Danny.\" \n\n\"Good night El..........len.\" \n\n***** \n\n\"So what are Danny and you doing tonight?\" Allan asked his daughter who had been dancing around and smiling all morning. \n\n\"Going to the movies,\" she answered. \"How about you and Mrs. Upton?\" \n\n\"We are going out on the boat later today.\" \n\nEllen sat down next to him at the kitchen table. \"Dad, do I need to talk to you...you know about...\" \n\nHe laughed. \"I'm a doctor remember?\" \n\n\"Oh yeah,\" she giggled. She realized this was the happiest she had ever seen him. \"I really like Mrs. Upton. She's really nice.\" \n\n\"I told you that you two would get a along. She told me that she liked you too. I do notice that Danny and you are getting along really well.\" \n\nShe blushed. \"Yes I know but..\" \n\nHe knew it was her mother. \"Ellen the thing with your mother is different. I'm sure that she loved you then and still loves you. She made the choice to go after her career and now feels that she can't return into your life.\" \n\nEllen felt the tears about to flow again but took a deep breath. \"I have you and I don't need her.\" She stood and walked out of the room. \n\nAllan knew that she was still hurting but didn't have any idea how to make it better. He did know that Danny was a step in the right direction. \n\n*****\n\n\"Now behave yourself,\" Danny joked with his mom as they waited for Allan to come and pick her up. \"Do you have your bathing suit?\" \n\n\"Yes, it's in the bag.\" \n\n\"Make sure you wear it and don't go skinny dipping.\" \n\n\"You are growing up too quickly. And, while we are talking about it you better control yourself around Ellen. You both are full of hormones and...\" \n\nDanny glanced out the window and saw Dr. Brand's car pull up. \"HEY THERE HE IS!\" \n\nHe came to the door and saw Danny. \"Hi is your mother ready?\" \n\n\"She went to make a pit stop,\" Danny grinned. \"So what time do you intend to bring my mother home?\" \n\nAllan laughed. \"This is very weird. Well, we will head out to sea around 4PM and it should take about four hours before we head back. I'd say we should be back here around 9PM. And, when do you intend to bring my daughter home?\" \n\n\"Around the same time.\" \n\n\"Well, we might have some coffee or something here,\" Allan said setting up some time alone later in her house. \n\n\"Uh yeah...we might listen to music for a while at your house.\" \n\nJanet stood back behind the corner holding back the laughter as the two guys set it up to spend private time with their dates. She walked around. \"Are you two finished?\" \n\nAllan laughed. \"You heard every word.\" \n\n\"Yep,\" she grinned as she took his hand and kissed Danny's cheek. \n\n*****\n\n\"You can come over a little early,\" Ellen told Danny when he called. \n\n\"But we will be alone in your house.\" \n\n\"I promise not to attack you,\" she giggled. \n\n\"Thanks.\" \n\nAfter they hung up Ellen moved into the shower and thought of him as she slowly soaped her young body. Her body still tingled from her climax the night before and it scared her because she knew that being alone with him now would be harder. She thought about how she had jerked off Todd a few times in his car but it was dark and she really couldn't see it that well. After rinsing off she dried her body and hair and put on her sexiest underwear and a short skirt and spaghetti strap blouse with built-in cups. \n\nIt was 5:00PM when Danny rang the doorbell. \n\n\"Is this early enough?\" \n\n\"Yes, we have a few hours before the movie.\" She moved back to let him in and after the door closed they stood nervously looking at each other. \n\n\"This is the first time my father has allowed me to be alone with a boy at home.\" \n\n\"I guess I should feel honored.\" He wanted to pull her into him but he leaned back against the wall. \n\n\"Would you like a tour of the house?\" \n\n\"Sure.\" She held out her hand and after he took it they walked down the hall swinging their arms. \"Great room, dining room, and kitchen,\" she said moving along. She turned at the base of the stairs. \"The bedrooms are upstairs.\" Both turned and looked before she pulled his hand. \n\n\"The first two rooms are spare bedrooms,\" she said walking him into them and looking around. The next room he saw her name on the door. \n\n\"So do you have your name on the door so you can remember which one is yours?\" He joked. \n\n\"HEY!\" She gasped before smacking his bad arm. \"Oh I'm sorry.\" \n\n\"Actually my arm feels as good as new.\" He put it around her waist and walked into her bedroom. \n\nHe saw the numerous stuffed animals on her bed and a few posters of cute movie stars on her wall. \"So when you are lying in bed do you think about them or about me?\" \n\n\"I'm not sure,\" she grinned. \"Let me try it and I'll let you know.\" She crawled up onto the bed not worried that he could see the pink panties under her skirt. As she turned and plopped onto her back between the big teddy bear and the monkey she closed her eyes. \"Umm...who do I think about?\" Danny moved closer and felt guilty looking at the tiny pink triangle between her thighs under the raised skirt. It was the first time he had see her bare legs and knew that he would soon be rock hard. ",
        "\"Am I thinking of Justin Timberlake?\" She asked out loud before turning and hugging the teddy bear. She put it down and turned to hug the monkey. \"Or Danny Upton?\" \n\n\"Hey are you calling me a monkey?\" He asked as he jumped onto the bed on his knees next to her and tried to pull the monkey from her hands. They both laughed as she jerked the monkey away which caused his body to fall down onto hers. All hands were on the monkey over her head when they stopped laughing and started kissing. The monkey tumbled off the bed onto the floor while her hands moved around his shoulders to pull his face and lips tighter. \n\n\"Oh God,\" Danny thought feeling her bare legs open around and curl around his hips. He felt his hard-on pressing into her panty-covered pussy as their tongues twisted and tasted. Their bodies naturally started moving together. Less than a minute later he realized that he was about to cum. \"WHOA!\" \n\nEllen too was getting close to climaxing again. She felt his body stop moving. \"What's wrong?\" \n\n\"Whew,\" he said leaning back and looking at his hard bulge and the pink panties which showed her damp spot. \"I...uh...don't want to...you know...mess up my pants.\" \n\nEllen too looked at the raised tent. \"Can you reach those tissues?\" \n\nDanny saw the box of tissues on her night table and leaned across to grab them. He held the box as she pushed him over onto his back next to her. When she reached for the snap on his jeans he realized what she was going to do. He closed his eyes and felt the pants open up and then heard the zipper being lowered. \n\n\"Oh my God,\" she gasped when she pulled his thick long pink penis out into the open. Her tiny fingers tried to wrap around it but only made it about half-way. \"No warts,\" she giggled softly. \n\n\"What?\" \n\n\"Buttons said that you probably have a wart on your penis,\" she chuckled. Her fingers touched around and around. \n\n\"Why would she say something like that?\" \n\n\"I'll tell you later,\" she smiled as she stroked some more. \n\n\"WAIT! You said you would tell me where Buttons got her name.\" \n\nEllen didn't let go of his pink tower as she moved up onto her knees next to him. \n\n\"OK, you see when all of us girls were growing up and our breasts were forming Annie, that's her real name, didn't actually develop any. So one night during a sleep over she removed her shirt showing her flat chest she said \"all I have are buttons\". \n\n\"That's mean,\" Danny grinned. \"Maybe I should check out your buttons.\" His left hand lifted and gently cupped her left breast. \n\nShe giggled. \"They are more than just buttons.\" \n\n\"I'm glad,\" he smiled. \n\nShe looked at the red knob above her stroking fingers. \"And I'm glad there is no wart.\" \n\nDanny watched as she explored his manhood. \"I don't think I'm going to last very long.\" \n\n\"Why? Did I make you too excited?\" She teased. Her whole hand cupped the huge crown and rubbed and gathered his pre-cum. Now well lubricated, she started to really jerk him off. \n\n\"Oh God Ellen,\" he groaned. \n\nShe giggled and slowed down. Her fingers moved to the base and then lower to cup and squeezed his balls. \n\n\"Easy,\" he said remembering that she had told him the same thing when he touched her breast. \n\n\"Sorry,\" she smiled as she moved her head downward to see better. \"It's the first time I've seen one.\" \n\n\"So you never with Todd...\" \n\n\"I did a few times but it was dark,\" she said not wanting to keep any secrets. She moved back to his cock and started stroking again. \n\n\"I touched Lisa's breasts,\" he confessed. She squeezed his cock harder. \"OUCH!\" \n\n\"You told me that you just kissed.\" She stared at him. \n\n\"I know...I should have told you. It was at my 18th birthday party. \" \n\n\"No more secrets,\" she smiled while stroking faster. \"Do you want to cum?\" \n\n\"Yes........oh God.........yes.\" \n\n\"Get the tissues ready,\" she giggled. Her fingers moved with a purpose until he grunted and jammed the pile of tissues in his hand over the red tip. \n\n\"Move the tissues back. I want to see it,\" she said. \n\n\"AHHH!\" He cried when the first load of cum shot from his cannon. She continued stroking for the next four loads.\n\n\"That is amazing,\" she giggled as he wiped and cleaned off the tip. \n\nDanny held the soaked wad of tissues. \"What should I do with this?' \n\n\"There's a waste basket in my bathroom,\" she smiled. \n\nDanny pushed his spent penis back into his boxers and pants and stood up by the bed. She watched as he snapped his jeans and zipped up before walking into her bathroom. When Danny walked back she had the teddy bear between her legs and her pink panties in her hand. \n\n\"Am I being replaced?\" He laughed. \n\nEllen tossed the panties on the night table and smiled when he moved next to her again on the bed. \"No, he is just keeping it warm for you.\" \n\nDanny grabbed the teddy bear's arm and pulled while he looked down at her lower body. He saw the blonde pubic mound first and then the thin pink line of her pussy under the sparsely spread corn silk hairs. \"God.\" \n\n\"You never touched Lisa here right?\" She asked as she rubbed down over her moisture-filled lips. \n\n\"Naa....no,\" he managed to answer. \"Can I..touch it?\" \n\nShe giggled. \"If you don't, I'm going to have to kill you.\" \n\nEllen pulled her fingers away and felt him lightly touching and exploring a vagina for the first time. She felt him pushing into her lips to find her opening. \"I'm a virgin remember?\" \n\n\"Sorry,\" he said feeling stupid. He rubbed around and when he touched the mass of flesh near the top she moaned. It didn't take a genius to keep touching it. \n\n\"Ummm...yes right there,\" she said taking his middle finger and pressing into her favorite spot. \n\n\"Did Todd...you know?\" \n\n\"No and I don't ever want to say his name again while we are in bed.\" \n\n\"I won't,\" he said as he rubbed and felt her getting wetter. \"Why are you getting wet?\" \n\nEllen giggled. \"You need to talk to your mother. Or, since my Dad is a doctor you can talk to him.\" \n\nDanny kept rubbing. \"Yeah, like hey Dr. Brand...would you teach me about sex so I can really get your daughter off?\" \n\nEllen started laughing but then stopped when his touches were getting to her. \"Oh God Danny...it feels so....Ohhhh.\" \n\n\"You're so wet,\" he whispered. \n\nShe was panting. \"I'm...wet...so when you put it...in...it will be well lubricated.\" \n\n\"Now?\" He stopped touching. \n\n\"No, not now but someday when we are ready to do it,\" she said as she pulled his lips to hers. He resumed his touches and soon her body was once again about to explode. She moved her lips to his ear, \"I'm going to cum.....don't stop...almost...almost...NOW!\" \n\nDanny watched her face all crunch up and then her mouth open for the scream. It was the same reaction last night on the boat. \n\nEllen returned to earth and turned to hug him into her. She lightly kissed his lips and moved her face to his neck. \n\nDanny smiled and rubbed her back while they just held each other for almost ten minutes without talking. He hadn't planned it but it just slipped out, \"Ellen..I think I'm falling in love with you.\" \n\nEllen remained motionless for over a minute. Danny didn't expect the reaction she was giving him. \"I shouldn't have said it. I mean we've only known each other for a short time and...\" \n\n\"Don't love me,\" she said before pushing him back and moving off the bed. She dashed into the bathroom trying to hold back the tears. \n\n\"Shit,\" he said smacking himself on his forehead. \"You big dummy. She doesn't love you.\" Danny sat up and moved to the bathroom door. He could hear her crying. \"Ellen...I'm sorry. I shouldn't have said what I said.\" \n\nHe heard her stop crying and a few seconds later saw the door knob turning. He moved back as she walked out and hugged him. \n\n\"I don't know why I said it,\" he whispered hoping that she wasn't mad at him. \n\n\"It's about time to head to the movies,\" was all she said as she moved to the night table and picked up her panties. 'Would you turn around?\" \n\n\"Sorry,\" he said again. \n\nEllen pulled up her damp panties and walked up behind him. She hugged into his back. \"It's all about my mother,\" she whispered. \n\n\"Do you want to talk about her?\" \n\n\"Yes but not now.\" She turned him around and lightly kissed him. \"Maybe you can tell me about your dad at the same time.\" \n\n\"I can try,\" he said knowing that he had never really been able to discuss it with anyone. \n\n\"Let's go to the movie.\" \n\n*****\n\nJanet stood back as Allan released the boat from the dock. He moved quickly to the small bridge and steered the 30 foot boat out into the river. \"We have a twenty minute ride to the ocean. Come up and keep me company.\" \n\nJanet moved up the small set of stairs and stood next to him looking at the beautiful scenery and other boats. She felt his hand move around her waist and then his face lean towards hers. Their lips came together and parted. \n\nMore kissing erupted and even some touches down to her butt on the way out to the gulf. By the time they were mostly out of sight from the main land both were already hot and really bothered. He turned off the motors and moved down to set the anchor. When he turned around she was smiling. \n\n\"Do you want to go for a swim?\" \n\n\"Maybe later,\" she said taking deeper breaths. \n\nAllan moved to the small door leaning downstairs. \"After you.\" \n\nOnce inside she checked everything out. \"This is nice.\" \n\nHe moved to the soft bench seat and pulled on a strap causing it to slide out until a bed appeared. \"In case we want to take a nap.\" \n\n\"I'm not sleepy,\" she giggled. She moved into his arms and offered him her lips and her body. \n\n*****\n\nThe movie had been out a while so it wasn't very crowded. He led her to the back row and both sat as they waited to see if anyone else would come their way. Finally when the room became dark and no one was coming their way he pulled her lips to his. Neither saw the coming attractions or the first ten minutes of the movie. \n\nFinally Ellen came up for air. \"The movie started and we should watch some of it in case they ask us what is it about.\" \n\n\"You watch,\" he grinned. As she looked forward he kissed and licked her neck and ear. \n\n\"That's not fair,\" she whispered. She managed to keep her eyes on the screen until his mouth moved down over her chest to the top of her top. Not even Todd had kissed her nipples. \"Danny.\" \n\nHe smiled before pulling the left cup down and away from her wonderful perfectly formed breast and light pink tip. He had never kissed a nipple before so it was trial and error. But in this case there was no error. \n\n\"Danny,\" she whispered again. She had never imagined how wonderful someone sucking on her nipple would be. She didn't think it would get any better until his left hand moved to her knee and then swiftly under her skirt. \"Danny.\" \n\nNeither of them knew that another couple had joined them in the back row and could see Danny's lips on her hard nip. Both were in their own private world especially when his index finger pulled her panties allowing his middle finger to once again find and play with her clitty. \n\n\"Oh you learn fast,\" she gasped as her legs opened wider and wider. \n\nA loud explosion on the movie caused Danny to lift his head and look. He saw the other couple near them and quickly pulled up her blouse before removing his fingers from her sex. \n\n\"Please,\" she begged. \n\n\"We have company,\" he whispered. \n\n\"Shit,\" she said as he moved back to his seat. They watched the movie wishing that they were still back in her bed. \n\n*****\n\n\"I'm nervous,\" Janet said after removing her shirt and pushing down her shorts. She stood in her new Victoria Secrets boy shorts panties and semi-cup white lace bra. \n\n\"It's been a while for me too,\" he said removing his shorts and shirt. He sat on the edge of the bed and reached over to pull down her panties. His eyes followed the lacy waistband over her neatly trimmed brown bush and the completely shaven lips. \n\nJanet reached back and pulled off her bra and tossed it on the floor. Her hands cupped his head when it moved forward enabling his lips to kiss her navel and then lower into her soft pubic mound. When his tongue dashed into her dripping slit she moaned. \n\n\"Allan...I'm too weak to stand.\" \n\nHe grinned and stood while she moved onto her back and parted her legs. He pushed off his boxers and saw her smile. As he started to move back down and continue the oral assault she grabbed his arm and pulled his face down to hers. She guided him between her legs and aimed his thick cock into her need. \"I've thought about this moment for so long.\" \n\n\"Me too,\" he whispered pushing the crown into her tightness. \n\n\"It's been so long,\" she said feeling the tears about to flow. \n\nAllan pushed four more inches inside and heard her soft cries. \"Are you OK?\" \n\n\"Yes,\" she laughed. \"It feels so good.\" \n\nAllan sighed and lowered the remainder into her depths. Her bare legs wrapped around his hips and she held on as he slowly fucked her. \n\n\"Oh give it to me,\" she begged. \"Harder...give me more!\" \n\nAllan gritted his teeth and did his best to keep calm. His head dipped to suckle her right nipple while his hips moved forcefully but not enough to hurt her. \n\nJanet thought of her ex-husband for a second but quickly erased her mind feeling her man's cock pushing in and out over and over. \n\n\"Janet...I'm getting...close,\" he said hoping that she was as ready. \n\n\"Me too Allan........NOW!\" \n\n\"AH.......AH.......AH.......AH......AH!\" She screamed each time he bottomed out. \"I'M CUMING!\" \n\n\"OHHHH!\" He yelled when his hot spunk filled her deep void. \n\n*****\n\n\"I think I've had enough of this movie,\" Ellen said still excited from having her nipple sucked on. \n\nHe grinned as they stood and moved down the dark steps. They hurried to his car and as soon as their doors closed their lips met. They frenched for a minute and then she pushed his head down over her chin to her neck. He knew what she wanted. \"So do you want me to kiss your button again?\" \n\n\"It's more than a button,\" she laughed. \n\nThey heard someone laughing causing Danny to lift up. \"We should go to your house.\" \n\nFifteen minutes later after slightly exceeding the speed limit they pulled up to Ellen's house. \"Beat you inside.\" \n\nDanny raced to catch her and finally did after she opened the door. They crashed down onto the hard wood floor and immediately locked their arms and legs. \n\nDanny found himself on the bottom and her sitting across his waist. Both grinned as she grabbed the bottom of her blouse and with one quick motion pulled it up and off. \n\nHe was frozen not able to more or even blink. They were more than magnificent. It was like seeing the Grand Canyon for the first time. \"Jesus.\" \n\n\"Are you going to call them buttons again?\" \n\nHe shook his head. \"Never.\" \n\n\"You can touch them if you want.\" She felt his hard-on pressing up against her butt. \n\n\"Don't squeeze too hard,\" he thought as he softly touched them. \n\nShe giggled. \"They won't break.\" He lightly closed his hand and she moaned. \"Ohhh.\" \n\nHe toyed with her big buttons and caressed the softness before she leaned over putting her hands next to his head. He saw her upper body dropping and leaned up slightly to capture and again suckle her hard cherry tip. \n\n\"Danny...we are going too...fast.\" \n\nHe pulled his mouth back. \"Do you want to stop?\" \n\n\"No!\" She pulled his hot lips and tongue back while offering the other orb. \n\nBack and forth he moved giving both a lot of attention until they heard the doorbell. \"OH GOD GET UP!\" He cried not wanting to be caught sucking on Dr. Brand's daughter's titties. He helped her find and put on her blouse as the door bell rang again. \n\n\"Are you ready?\" She asked as she tip-toed to the door and peeked out. \"Shit.\" \n\n\"What? Who is it?\" \n\n\"It's my Grandma.\" \n\nEllen turned and saw that he was still hard. \"Pull your shirt out.\" \n\nDanny did as she said and covered the front of his pants the best he could. \"Ok.\" \n\nEllen opened the door. \"Grandma.\" \n\n\"Hi baby,\" Shirley Brand smiled. She pulled her in for a hug until she saw Danny standing behind her. \"Who is this?' \n\n\"Grandma this is my boyfriend Danny.\" \n\n\"Hello young man,\" Shirley said looking serious. \"Are you two here alone? Where is your father?\" \n\nDanny looked at Ellen for help. \n\n\"He is actually out on a date,\" Ellen smiled. \"Can you believe it?\" \n\n\"Well I hope he does a better job than the last time. Who is this hussy he is out with now?\" \n\n\"Uh..she's not a hussy,\" Ellen said not sure what a hussy was. \"Her name is Janet and...\" \n\n\"She's my mother,\" Danny finished getting upset with the older grey-haired woman. \n\nShirley smiled and walked ahead of them into the house. \"This is getting good. So my son is dating your boyfriend's mother. So if they marry you will be dating your brother. I need a drink.\" \n\nEllen took Danny's hand while the woman headed to the wet bar and pulled out a bottle of whiskey. \"Don't let her get to you. She likes to get under people's skin.\" \n\n\"What are you doing here?\" Ellen asked. \n\nShe took a big gulp of straight whiskey. \"Can't I just come and see my son and granddaughter? Why do I need another reason?\" \n\n\"Grandma.\" \n\n\"Oh ok, when is your father getting home? I need to talk to both of you.\" \n\n\"Oh God! You're not sick are you?\" Ellen moved over to hug her but she pushed her away. \n\n\"Hell no. I feel great.\" She looked at Danny and smiled. \"You know you really found a cute one.\" \n\nDanny blushed. \"Thank you Ma'am.\" \n\n\"Where is your father? Are your parent's divorced too?\" \n\nEllen gasped and looked at Danny. \"Grandma...it's none of your business.\" She saw the hurt look on Danny's face as he turned and walked out the front door. \n\n\"His father is dead.\" \n\n\"Shit...I did it again,\" Shirley said as she sat on the bar stool. \n\nEllen caught him about half-way down the block. \"Danny wait!\" \n\n\"I'm ok,\" he said before turning and facing her. \"She's right. If our parents get married I'll be your step brother.\" \n\n\"I don't care,\" she said feeling the tears about to flow again. She grabbed his arm but he pulled back and took off walking away.\n\n\"Danny..\" she said too softly for him to hear her. \"I love you too.\" \n\n***** \n\nAllan and Janet made love once more on the boat and didn't get their swim suits wet. They made it back at nine and he dropped her off. \"I should go and check on the kids. Even though we trust them you know how teenagers are.\" \n\n\"I feel like a teenager again,\" Janet said as they hugged at her front door. \"I loved our day together.\" \n\n\"It's going to be tough seeing you every day and not being able to kiss and touch you,\" he whispered. They kissed one more time and he took off for home. When he pulled into his driveway he saw Danny's car and another car he recognized. \"Oh shit.\" \n\n\"Grandma is inside,\" Ellen said to him when he walked up to her sitting on the front steps. \n\nHe could see that she had been crying. \"What's going on?\" \n\n\"Grandma's big mouth caused Danny to take off down the street.\" \n\n\"Do you want me to go and get him?\" \n\n\"He'll be back. She asked about his father.\" \n\nHe leaned over and hugged her. \"If I'm not out in five minutes call the cops.\" \n\nAllan moved into the house and saw his mom sitting at the bar facing away. \n\n\"Hello Allan.\" \n\n\"You did it again Mom,\" he said. \"I thought you stopped drinking.\" \n\n\"First one I've had this week,\" she said turning and facing her oldest son. \"How are the young ones?\" \n\n\"Well she's crying and he's missing. Are you happy now?\" \n\n\"I'm sorry about that but I had to see you.\" \n\nHe moved next to her. \"What's wrong?\" \n\n\"I'm ok but I had a visitor a few days ago and thought that you two needed to know about it.\" He knew right away. \"Maria.\" \n\n\"She's moving back to town Allan.\" \n\n\"Ah shit,\" he cursed. \"I hoped that she stayed away until Ellen went off to college. Why is she moving back now?\" ",
        "\"She wants to see Ellen before she goes away to college and maybe spend some time to get to know her again.\" \n\nEllen leaned against the wall in the hallway with her sad face turning to anger. She heard enough. \n\n\"I NEVER WANT TO SEE HER AGAIN!\" \n\nShirley and Allen turned quickly. \"Ellen you don't have to.\" He said. \n\n\"I HATE HER!\" \n\nAllan watched his daughter run up the stairs and heard her door slam. \n\nShirley took another drink. \"That went over well.\" \n\nDanny turned around and was on his way back when he saw Dr. Brand's car pull into the driveway. He moved to house and saw Ellen move inside. As he walked to the entrance he heard her screaming. \n\n\"What's wrong?\" He asked Dr. Brand who was standing at the foot of the stairs looking up. \n\n\"You might want to go home. I don't think you can help right now.\" \n\nDanny looked at the older lady who held up her whiskey glass and smiled. He frowned and turned to walk outside. Outside he called Ellen's cell phone but she didn't answer. \n\n*****\n\nThirty minutes later. \n\n\"GO AWAY!\" She yelled to whoever was tapping on her door. \n\n\"Ellen it's me,\" Buttons said. The small girl stood by the door until it cracked open. \n\n\"Is it just you?\" \n\n\"Yes.\" \n\nEllen let her in and immediately closed the door behind her. \"Did my daddy call you?\" \n\n\"No Danny did.\" \n\nEllen moved and lay back on her bed. \"Things are so messed up. Everything was going so great and then...then...\" \n\n\"What happened?\" \n\n\"My mother is moving back to town and wants to get to know me again.\" \n\n\"No way.\" \n\nEllen nodded. \"Is Danny ok? My grandmother asked him about his father and then made a comment that we could be brother and sister if our parents hook up.\" \n\n\"He's just worried about you.\" \n\n\"He told me that he thinks he's falling in love with me,\" Ellen sighed. \"I should be the happiest person alive and all it does is make me scared.\" \n\n\"Things will work out,\" Buttons said as she leaned over and hugged her best friend. \n\n\"Oh, I uh...I told Danny where you got your name from.\" \n\n\"WHAT! Now you pissed me off girl!\" Buttons jumped on top of her and pretended to smack at her head. When Ellen stopped laughing Buttons moved away. They both looked up at the ceiling. \n\n\"So are you going to see her?\" \n\n\"No...I mean I don't think I can without yelling and screaming at her.\" \n\nButtons again turned and hugged her bud. \n\n*****\n\nJanet saw that Danny was upset about something. She heard him call someone and over heard him say that Ellen was upset. After he hung up she moved into the living room next to him. \"What's going on?\" \n\nDanny sighed. \"Ellen's grandmother came and asked about dad and then commented that if you marry Dr. Brand that we would be brother and sister.\" \n\n\"Sorry baby,\" she said sitting next to him and rubbing his head. \"I thought it would be easier to move away from Germany and the Army.\" \n\n\"Are you going to marry Dr. Brand?\" \n\n\"I'm not planning on it,\" she said. \"And if it even comes up you will have to give your permission first.\" \n\n\"Good,\" he smiled. \"It's been a long day. I'm going to bed.\" \n\n\"I love you baby.\" \n\n\"I love you too mom.\" \n\nDanny was brushing his teeth when he heard his cell phone ring. He saw Ellen's caller ID. \"Hi.\" \n\n\"It's me Buttons.\" \n\n\"Is she OK?\" \n\n\"Not really but she wanted me to call and make sure you are alright.\" \n\n\"Can I talk to her?\" \n\n\"She's in the shower. She found out from her grandmother that her mother is moving back to town and wants to see her again.\" \n\n\"Oh no.\" \n\n\"I know,\" Buttons said not hearing the bathroom door open or Ellen's footsteps. A wet hand took the phone from her. \n\n\"I'm sorry about what happened. My grandmother is really a nice person most of the time.\" \n\n\"I'm OK,\" he said. \"Are you?\" \n\n\"No, did you tell him?\" Ellen looked and saw her friend nod. \n\n\"I wish I could be with you,\" he said. \"When you are sad I'm sad.\" \n\nShe smiled. \"I'll see you on Monday. My grandma, dad and I have some talking to do tomorrow.\" \n\n\"Good night.\" \n\n\"Good night,\" she responded. After hearing the click she whispered. \"I love you too.\" \n\n*****\n\nAfter his mom gave him Maria's phone number the next morning Allan called before Ellen woke up. \n\n\"Hello?\" \n\n\"Maria it's me.\" \n\n\"I wondered how long it would take you. How are you?\" \n\n\"Please don't ask that,\" he said trying to stay calm. \n\n\"Will you tell me how Ellen is?\" \n\n\"How do you think she is? Her mother who she loved so much leaves her and only sends a birthday card.\" \n\n\"I need to see her Allan. I have to try and explain.\" \n\n\"Can I hear it too?\" he asked. \"You walked out on me too.\" \n\nThere was a few seconds of silence. \"We both knew that we were not in love. I couldn't live another minute like that.\" \n\n\"But Ellen..\" \n\n\"I know that I screwed up months after missing her so much. But I couldn't return and face her after what I did. I did it for selfish reasons and hope to god that she can forgive me.\" \n\n\"I don't think she wants to. When Mother told her last night she became as mad as I've ever seen her. I advise you to stay away.\" \n\n\"I can't,\" Maria said with tears rolling down her cheeks. \"I can't.\" \n\nAllan hung up and sat down. Old memories came up both happy and sad. \n\nIt was later that morning that Janet received a call from Allan who invited Danny and her to dinner. \"Don't worry my mother will be nice,\" he said looking at her sitting innocently across the table. \n\nDinner was quite nice and Shirley put in an extra effort to cook and serve a great meal. She saw Danny outside alone and walked up to him. \n\n\"Danny, I'm sorry about what I said yesterday. Sometimes my mouth works before my mind does.\" \n\n\"It's OK. I'm just having a hard time coping without my father around so when someone mentions him it hurts.\" \n\n\"You know my son has always wanted a son. I'm not saying that he could ever come close to filling your dad's shoes but I'm proud to say that he is a pretty nice guy.\" \n\n\"I know and he makes my mom happy.\" \n\n\"And she does the same for him. Can I ask you a favor?\" \n\n\"Sure.\" \n\n\"Would you call me grandma? I really don't like to be called Mrs. Brand?\" \n\n\"Sure Grandma,\" he grinned as he turned and hugged her. He glanced back at the house and saw Ellen smiling in the window. \n\n*****\n\nThe next week went by fairly quickly. Allan released Danny a few days early and the coach made him take it easy in practice. \n\n\"Well you have the choice of playing second or third,\" Coach Wright said to him after practice. \n\n\"As much as I was happy playing my father's position I'd rather play second.\" \n\n\"I was hoping you would say that. Also, I need to talk to you about what's going to happen when the rest of the world discovers that Josh Upton's kid is playing baseball.\" \n\n\"I don't understand.\" \n\nDanny your father is a national hero. There probably hasn't been that great an act of patriotism in the US since...since I can't remember. The media will grab onto this story and not stop until you turn into as good a baseball player as your dad was.\" \n\nDanny smiled. \"My dad would be proud if I turned out to be as good as he was.\" \n\n\"Yeah any dad would be proud to have you as a son.\" \n\n\"Thanks coach for warning me but I think I can handle it now.\" \n\n\"A friend of mine who is a big league scout will be here in a few days to watch you during our first scrimmage. You don't have to talk to him if you don't want to.\" \n\n\"I'd like to meet anyone who is a friend of yours,\" Danny grinned. \"I've got to meet someone. Can we talk more tomorrow?\" \n\nThe coach turned and saw Ellen standing by the backstop. He laughed. \"Sure.\" \n\n\"Hi,\" she smiled as he walked up to kiss her. \"What was that all about?\" \n\n\"He said that the media will go nuts when they find out about me. You know being Josh Upton's son and all.\" \n\n\"Was your dad famous?\" \n\n\"We need to talk,\" he said. \"Why don't we call our parents and tell them not to expect us for dinner?\" \n\nAn hour later they sat on the Ellen Maria eating Chinese take-out. \"I'll go first,\" she said. She put down the food and spent the next five minutes telling him how her mother just left one day. \"And, now she wants to meet me again. I don't want to meet her.\" \n\n\"Maybe you should. I mean it's all built up inside of you and it bothers you a lot. Maybe you need to let it out even if it means telling her how much she hurt you and how much you hate her.\" \n\n\"I'm not sure if I can look at her again. She hurt me Danny. She hurt me a lot.\" \n\n\"I know.\" He put down his chopsticks and hugged her. \"I'll be there for you.\" \n\nShe smiled and kissed him lightly. \"Tell me about your father.\" \n\nDanny sighed and sat back. \"My dad was my life. I can't remember anytime that he was angry with me. I never even thought that he would go away from my life like he did. We were a team. No one can understand what we had. We could look into each others eyes and know what the other one was thinking. I was him and he was me.\" Danny stopped feeling himself getting choked up. \n\n\"They took him from me Ellen. My life stopped when his did. I refused to accept that he was dead until I saw the coffin covered with the flag.\" Danny's eyes opened up as she patted his back. \n\n\"It's ok,\" she said wiping her eyes. \"Tell me everything.\" \n\n\"I quit after that. I didn't play baseball, hang with my friends, or even watch TV. I stayed in my room thinking about him and how much I missed him. It was months before I surfaced again. That's when Lisa came in.\" \n\nHe quickly turned and looked at her. \"She made me realize that life continues to go on and that my family and my friends still loved me and wanted me back.\" \n\n\"I'm glad she brought you back,\" Ellen whispered. \"If she didn't I wouldn't be in love like I am now.\" \n\nDanny wiped his eyes and turned. \n\n\"I love you Danny. More than I could ever imagine loving anyone.\" \n\n\"Ellen.\" \n\nShe smiled as her lips moved to his. As they kissed tears fell from both sets of eyes. They both knew that the love they had for each other would get them through what lay ahead. \n\n*****\n\nDanny and the rest of the team were surprised at the huge turnout for just a scrimmage game. The other team was the current state champs and had one of the biggest and fastest pitchers in the state. The Panther's had Jimmy Thompson who was also considered a top prospect pitching and Corey Storm who was being looked at by a few scouts. \n\nMatt sat in the dugout as the two teams warmed up. \"Danny come here a second.\" \n\nDanny ran over and saw the man on the bench. \"Yes sir?\" \n\n\"Danny this is Jim Reynolds. He's the guy I told you about.\" \n\n\"Hello,\" Danny grinned. \"I hope you didn't waste your time coming here.\" \n\n\"I'm sure my time is not wasted,\" Matt grinned. \"How is the arm?\" \n\n\"Better that before,\" Danny answered. \"I've been working out with a physical therapist and she has made it even stronger.\" \n\n\"That's great,\" Jim grinned. \"Just relax and play your game.\" \n\n\"Thank you sir. Nice to meet you.\" \n\nJim sat down. \"His dad was the same way. Never said anything bad and always was nice to everyone.\" \n\nDanny took the field and looked up into the bleachers at his mom sitting next to Dr. Brand. Next to him were Grandma Shirley, Ellen and Buttons. Corey moved next to him at second base as they played the National Anthem. After it was over Corey looked out at the opposing bullpen where the big right hander was throwing. \"He likes to come inside with the fast ball and work the outside of the plate with his curve. But with lefthanders he only throws the hard stuff.\" \n\n\"I'll be ready,\" Danny grinned. \n\nJimmy struck the first batter out in three pitches and walked the second batter. The next batter was a lefty so Danny moved into the hole between second and first. After a few fouls Danny saw the ball flying off the bat over the pitchers mound. He took off like a shot and saw Corey coming the other way. \n\nSince they had not played together Corey wasn't sure if Danny would cover second so he figured he would have to throw to first. He snagged the ball on the run and saw Danny's hand out. With a quick toss they exchanged the ball. \n\nDanny had only done it once but he remembered it. He grabbed the ball from Corey barehanded and with two large steps touched second base while turning completely around in mid-air to fire the ball to first. His throw beat the runner by a half-step. \n\n\"Holy shit,\" Jim gasped as he quickly stood up in the stands behind the dugout. He picked up his phone and called Yankee Stadium. \n\nThe fans were silent at first still trying to believe what they had just seen. It was Janet who stood up and shouted, \"That's my BOY!\" Suddenly the whole Panther bleachers stood and yelled. \n\n\"Where did you learn that?\" Corey asked as they ran back to the dugout. \n\n\"Learn what?\" Danny asked. \n\nTwo other scouts were in the stands watching Corey, Jimmy and the other team's pitcher Brad Givens. They picked up their programs and searched for the second baseman's name. \n\n\"Who the fuck is Danny Upton?\" the one scout asked the other one. \n\n\"I got a feeling that we are about to find out.\" \n\n*****\n\n\"Daddy do you know that Danny's father was a really good baseball player?\" \n\n\"Yeah baby he was one of my favorite players.\" He held her hand knowing that all of their lives were going to change once the newspapers find out about Danny. \n\nDanny was up third with Corey behind him. Brad Given's struck out the first two Panthers on called third strikes so when Danny walked up he smiled at the big right hander. The pitcher didn't smile back. \n\n\"Get a single Danny!\" Buttons screamed. \n\nEllen smacked her arm. \"Not a single. A HIT!\" \n\n\"Aren't they the same?\" Buttons asked. \n\n\"Yes but we want a bigger hit like a home run.\" \n\n\"HIT A HOME RUN DANNY!\" \n\nDanny took the first pitch which was a 90 mile an hour fast ball down the middle. \"STEE...RIKE!\" The ump yelled. \n\n\"Did you see that one?\" The smart-ass chubby catcher asked. \n\nDanny kept his focus like his father taught him. \"Watch the ball hit the bat,\" he thought. He knew that he would be coming in again with some heat so he dug in and readied himself. \n\nThe catcher put up his mitt to catch the hard fast one but it didn't make it there. The stadium rang from the crack of the ball on Danny's bat. He went with the ball coming down the middle and drove it back over the pitcher's head. \n\nEllen followed the ball out over second base and lost it in the sun. She saw the centerfielder heading back to the wall. \"OH GOD! GO OUT!\" \n\nDanny thought it was out as he rounded first base but saw the tall player jump high over the fence. The white ball fell onto the glove but Danny didn't slow down. \n\n\"He dropped it,\" Coach Wright said standing up. \"Shit, he's going to third!\" \n\nDanny headed to third and saw the third base coach waving him around. He didn't miss a step as the third base became history. He saw the catcher blocking the plate and saw the catcher reach up high to snag the ball. He slid as the catcher was coming down and managed to hook his left foot around the catcher's foot. \n\n\"SAFE!\" The umpire screamed. \n\nYEAH!\" Grandma Shirley screamed. \"Kick their asses Danny!\" \n\n\"Ma sit down,\" Allan said looking around. \n\n\"He just hit a ball 350 feet and scored an inside of the park home run,\" Jim said into his cell phone. \"I think I just found Jeter's replacement.\" \n\nDanny ran back to the dugout and smacked high fives with his teammates. He hugged the coach and looked out the third base line at a person leaning against the fence. \"Shit.\" \n\nTodd Jenkins stood looking back at him. Todd smiled and gave him thumbs up. \n\nCorey was up next and lined out to the left fielder. For the rest of the game the two pitchers dug in and managed to keep the score the same. Danny got a single in the fifth inning but was stranded on second after stealing the base. It was the top of the last inning with a player on third and one out when the batter hit a soft fly ball down the right field line. It looked like it was going to drop in until Danny dove and caught it before it hit the ground. \n\nThe runner on third raced back to the bag and tagged up. He took off as Danny jumped and turned. The ball was a perfect strike to the catcher who turned and smiled as the runner slid into his mitt. Again the fans went wild and Corey smacked Danny on the back as he ran back to his position. \n\nJimmy struck out the last batter and the team ran in to congratulate him for pitching a shutout. But the hitting star of the game was Danny with two hits, a walk and an inside-the-park home run. After a talk from the coach Danny headed to the group of fans and family behind the dug out. Ellen jumped into his arms as Janet waited her turn. Ellen whispered in his ear and then he did the same to her. \n\nDanny moved to his mother and she whispered as well. \"I love you too baby.\" \n\n\"Me too Ma.\" Danny hugged Buttons and shook Dr. Brand's hand. They all turned and headed towards the parking lot when Dr. Brand and Ellen stopped suddenly. \n\n\"What the hell?\" Allan gasped. \n\n\"What's she doing here?\" Ellen stared. \n\n\"Who is it?\" Janet whispered to Buttons. \n\n\"It's Ellen's mom.\"\n\nA very young blonde-haired boy stood next to her holding her hand. \n\n*****\n\nThe End of Chapter Two. \n\n*****\n\nEnding note: I've received so many positive emails for this story that it motivates me to keep writing. Well, Danny and Ellen are in love but both are still troubled from losing a parent. Todd is still hanging around and now Ellen's mother returns. Lisa is about to enter the story and who is that little boy? Again please send me your thoughts and don't forget to vote. "
    ],
    "authorname": "Slickman",
    "tags": [
        "baseball",
        "army",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/army-brat-ch-02"
}