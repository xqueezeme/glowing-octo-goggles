{
    "title": "Helen Wakes Alex for Sex",
    "pages": [
        "Hi, this is Lucy. With Helen and Alex, I am recreating some of the most intimate moments in my sex life, with younger lovers. I remember waking up to this gorgeous muscular man and his incredible body. I was a little intimidated by the size of his penis and just how tall he was, lying in my bed. If I'm honest, I could have been more like Helen, but I've never forgotten this particular moment in time...love and enjoy x.\n\nI had slept very well, my dreams had been filled with sexy images of Alex and his gorgeous body. His naked, muscular and athletic form after I had blindfolded him, drowned out all other thoughts. And then, of course, memories of his strong, veiny erection sliding deliciously down my throat. I am so happy that I can do that for him, it was something I had learned to do as a younger athlete, being able to control my breathing and defeat the annoying urge to gag at the slightest touch to my throat.\n\nI was also an emotional wreck though, after creating what for me was a deeply erotic and intimate evening of passion.\n\nI had danced completely naked for Alex, concluding that after all the sex we had already enjoyed, after showing him that I could take nine and half inches of his gorgeous thick cock past my tonsils, that he probably liked my older womanly body. Me, with my long, albeit grey hair and my pleasingly long slim legs, I think I have read his feelings just right.\n\nMy womb and cervix ached though, after being gloriously fucked by his huge cock. I can still feel him driving that solid shaft so fucking deep into me, lying face down, pressed against the arm of my armchair, with his soft pubic hair hard against my anus, spreading my bottom wide so that he could bury his cock and his sperm inside my helpless vagina.\n\nHis orgasm had been loud and masculine, it had actually shocked me how hard I had made him come. I felt the vibration of his guttural shouts all through me, the sensation of being taken so confidently and lovingly was intimate and erotic. To have had my vagina completely owned by a young man made me feel so happy and contented, that even the ache of being so deeply fucked did not matter. After all, not all sixty-year-old women get the chance to experience an athletic twenty-four-year-old guy wanting to fuck them all night with a huge, thick, veiny, sexy penis. Yes, I woke up very contented indeed.\n\nI did wince though, as I remembered hiding a tape measure to settle once and for all, the dimensions of my lover. It was designed to create a little moment of lovely, giggly intimacy and I'm pleased to say, it succeeded. As I gently drew back the covers on my bed this morning, I was reminded just how big my gorgeous Alex really is. He is over six feet tall and even with a sleepy semi-erect cock, his shaft length still reaches over his belly button. He looks so gorgeous asleep, his muscular stomach and strong chest, his toned body warm and firm to my touch. His trimmed pubic hair framing his long, thick shaft, his wide mushroom head and two, very suckable, heavy balls.\n\nI quietly stepped into my bathroom and after quickly letting down my hair from the tight bun I had set the night before, I grabbed the little bottle of cherry flavoured lube that I had used so successfully last night. My hair was pretty wild after being so tightly tamed. I really hoped that Alex would like to see my long grey hair flowing over his young body.\n\nI tiptoed back to him and climbed back on to our bed, kneeling next to him, making sure to keep my legs spread apart, so that he would be able to see my wet and aroused vagina when he opened his eyes. I slowly and quietly squeezed the sweet-smelling lube on to my fingers and applied it liberally to my small boobs and over my clitoris, which already felt hot and throbbing with anticipation, having been treated to the sight of his gorgeous cock in the early morning light.\n\nMy hands were now very slippery, so I let them rest on Alex's body, slowly working their way down from his chest, to my intended target. My fingers slid slowly either side of his veiny shaft, and I cupped his clean-shaven balls. I was now so turned on and in the moment, that I did not see him open his eyes and take in the sight of my bare body. I heard his quiet, husky voice as he slowly woke up with my hands beginning to make love with his nude body.\n\n\"What a beautiful view to wake up to in the morning.\"\n\nHe slowly moved his head to reach across and kiss my willing and waiting vagina, so I gently moved my leg to spread a little wider so that he could reach me. My clitoris, already slippery from the little lube I had added now felt the wetness of his eager tongue. The sensation was incredible and I felt myself involuntarily rocking my hips over his young face, pushing my vagina on to his wet mouth.\n\nAlex was already keenly enjoying my wetness and sensing my hands on his body, so he opened his legs a little for me. My slippery hand moved up along his long shaft and grasped his swollen glans. My hand looked tiny wrapped around his big cock, but I pulled back his foreskin and started to rhythmically move my fingers up and down, squeezing and releasing his hard shaft and wide head. His was a real monster of a penis, and at least for now, it was all mine to enjoy.\n\n\"Do you like what I'm doing with you, my darling?\"\n\n\"Fuck yes! Don't stop Helen. Please don't stop. I love your hands on me.\"\n\nI was certainly liking what he was doing to me. I could look down and see my little lips spread across his face, his mouth buried deep in my little vagina.\n\n\"Do I taste good for you Alex? Do you like the feel of my little wet cunt?\"\n\nI did not get a reply, but I felt his tongue push deeper into me, making me jump in pleasure. I guess that was my answer. At the same time, his free hand moved around to my bottom cheeks and he spread them with his strong fingers. The gentlest stroking of my anus drove me crazy. I felt my hips pushing down hard on his face, opening up a little more so that he could slide his fingers in more deeply. I was a little dry inside my bottom, but I had two very slippery hands and a naughty idea. I lifted my bottom off his fingers and made sure he could see me slip two of my wet fingers easily inside my anus. I let them slide in and out, making a sexy slurping sound as I played with my bum, just for him.\n\nI knew it was having the desired effect, since my other hand was still pleasuring his shaft and I felt it thicken and stiffen at the same time as he let out a powerful, sexy sigh.\n\n\"Fucking hell, you are so hot Helen. Your tiny little bum is beautiful.\"\n\nI now realised that I quite liked the sensation of anal play and that I had also wasted many sexual years not doing this more. With Alex, it felt natural, normal and still intimately special. The naughty language I used, turned me on just as much as him, and I felt so close and connected with my lover.\n\nThe effect that seeing me finger my bottom had had on his penis was just perfect. It was bone-hard and its length made my mouth water. A tiny bend upwards made it perfect for pleasuring my body. As I pulled my fingers out of my bottom, I felt his hand grip mine and he guided them into his mouth, where he licked every bit of wetness from my fingers. He pushed my fingers deep into his mouth, sucking them and it made me shout out in ticklish pleasure. Then, he guided my hand back to my bottom and encouraged me to continue.\n\nI had unconsciously gripped his cock harder and was now moving up and down it with a firm grip on the thick shaft. This alone was making my vagina soaking wet, but now Alex had eased my finger back into my bottom, along with one of his own and we were both gently exploring my anus together. His mouth found my heaven again and was eagerly drinking me in, bringing me slowly to what was sure to be a shattering orgasm.\n\nI was rocking my hips over his mouth, which also helped our fingers move in and out of my bottom. I was somewhere I had never been before and I was loving the freedom of sexual exploration and deep intimacy with Alex. I had been so self-conscious of my grey hair and greying pubic region, but Alex loved it all, and his long thick shaft in my hand was testament to his desire for me. His mouth was buried deep in my body, he could full well see my grey hair and yet he was still eagerly lapping up my desire for him. That was the last time I felt self conscious naked next to Alex.\n\nI wanted him to enjoy my attention and I actually wanted to orgasm looking into his beautiful eyes, so I slowly slid our fingers out of my bottom, letting Alex once again lick my fingers and run his tongue deliciously over my anus. I slowly closed his legs and straddled him, my vagina hovering over his cock. I made sure it was pressed along his body and lowered my vagina lips on to his burning hot shaft. I gently rocked to and fro, his cock sliding along my wet, open labia. His length meant that even if I moved as much as I could, there was plenty of gorgeous, veiny cock left to stroke in my hand. I sat back, rocking in firm, sexy, rhythmic movements, caressing his cock with my vagina lips and stroking the tip with a free hand.\n\nI quickly added a little more lube to my fingers and made a show of rubbing it over my tiny, flat boobs, letting Alex get a full view of them. The intimacy made my nipples hard and I felt them firm under my fingers. After having my bottom so intimately attended, I felt the naughty Helen come back to the front again. This was also probably due to the amazing manhood pressed hard against my already aroused clitoris. I was massaging my boobs, squeezing my nipples and caressing them between my fingers.\n\n\"Do you like my little titties, Alex? Do you want to feel my tiny bare boobs on your huge, thick cock, my darling?\" Alex was reaching for my breasts, but I just kept out of range, kissing his hand instead. My own hand around his shaft squeezed and caressed it. I was totally loving the feel of his erection in my power.\n\n\"You want to hard fuck my little cunt, don't you baby? You want to ravage me again, take my little helpless cunt and drive that cock deep in me? Hmm, but I want to feel that hot, thick shaft fuck my boobs. I want your hard big cock to fuck...my...boobs.\"\n\nI leaned forwards and kissed him deeply for the first time this morning. I could taste both of us on his lips and I loved the sensation of his tongue exploring my mouth just as it had done my vagina. He whispered in my ear and it sent a shiver down my spine.\n\n\"You are the sexiest woman that I've ever seen, Helen. Let me feel your hair all over me, gorgeous girl. Let me fuck your sexy boobs. I adore you.\"\n\nI felt so completely body confident, the exact opposite of the last few years fretting about my unattractive and ageing body. Here was Alex, a man with the very pick of beautiful young women's bodies, choosing to make love with me. No possible deception here, his granite-hard penis was hard up against my clitoris and taking me to cock heaven.\n\nI kissed my way down his chest, licking his hard nipples and sucking each of his muscles as I went down. I wanted to devour his cock there and then, but held back, for now. I reached out and took each of his hands in my own as I lay across his body, his weight taking mine. I liked the sensation of sliding over him.\n\nOnce my boobs were directly over his cock, I let go of him and used my hands to squeeze my boobs against his shaft. I slipped and slid them all over his erection and he was loving it. His hips bucked and his balls slid up to meet my nipples. I squeezed them on to the tip of his cock and circled around, making sure he was looking at my boobs making love to his penis. I slapped that huge shaft against my tiny mounds and rolled it over my whole chest. I pushed them both together and his shaft could fuck both my pink nipples at the same time.\n\nThen I pushed all of my long hair over his abdomen, allowing it to fall over him and tickle his body. I could feel the pleasure building in his cock as I moved over it. His hands now gripped my hair, his fingers slowly running through it, then grabbing a firm handful and tugging it gently and then caressing it to the very tips, which were now damp with perspiration. I had never before done this; I had covered up my grey hair when any hint of attraction was felt with a man. Here I was, abandoned to the passion, naked, vulnerable, lovemaking and fucking all at the same time.\n\nI could feel Alex trying to work my head towards his cock. Of course, I was teasing him, letting my mouth slip over him, kissing his cock as I moved along his body, licking him along his length as I moved my boobs over it. I wanted him right at the point of orgasm first. I wanted to know that my boobs were sexy enough to make him want to come on them.\n\nI gripped his cock with both hands now and slid myself so that my boobs hung over his erection.\n\n\"Grab my hair baby, hold it up so you can see my bare boobs.\" Alex scooped up my hair and gripped my head gently but firmly with both hands.\n\n\"Fuck this is so hot, Helen.\"\n\nI already loved the sensation of bringing a man to orgasm with my hands. I'd never had a penis of this size and it was a lot of movement to go up and down his shaft whilst keeping the sensation pleasurable. Then I placed the tip near my mouth and let it brush against my lips and tongue, letting it fall inside then out, keeping it wet and lubricated. I moved so that I was across him and his cock could touch my boobs and his balls caress them as well when I moved down his shaft. I could sense his orgasm was near. I kept my eyes locked on to his.\n\n\"Look at what your girl is doing with you. Fucking her tiny boobs with your beautiful hard cock. Sucking your tip into her little mouth. She wants to feel you come hard on her face, feel your sperm splash on her tongue.\"\n\nSince I had moved across him, he was able to lift one hand to reach me. He slipped a hand on to my foot, caressing it before sliding along my thighs, spreading them apart, before easing between my legs to find my already aroused clitoris swollen and yearning for orgasm. His other hand still gripped my hair tightly as his pleasure built. I was slipping his soaking wet tip across my mouth and face, taking it inside and licking his beautiful glans with pleasure.\n\nHere was Alex, one hand buried in my soaking wet vagina and the other holding my head on to his hard erection. Here was I, adoring the sensation of a man at the verge of coming on my face. Coming because of the sight of my tiny little boobs. Coming because I was taking his monster cock into my mouth.\n\nAlex's fingers on my clitoris just made me want to scream in pleasure and spread my legs for him. I made sure that I moved so he could see all of my wet, dripping vagina, revealing the pleasure he was giving me. I could see my pleasingly flat stomach suck in as my orgasm took hold. It started from my spine and raced straight through my clitoris sending it from a throbbing pink mound to a quivering, shaking mountain of orgasmic pleasure. I came hard and cried out his name in worship of his lovemaking. Alex's erection was still filling my mouth. The vibration of my orgasmic cries sent him over the edge as well. I wanted him to look me in the eyes as he came hard over my mouth and face. I wanted him to focus on his cock taking his much older lover.\n\nI waited until I was certain he was coming, until I could feel the first jet of delicious sperm pulse through the base of his enormous cock. Alex's deep, visceral cries of orgasm took hold of him, he shouted my name loud as it consumed his body. I let his orgasm flow into my mouth, splashing hot semen on my tongue and tonsils. I quickly pulled his pulsating shaft out and over my wet face, his thick uncontrollable streams covering my nose in hot, fresh young sperm. He came hard on me in delicious waves of heavy, deep, pulsing semen. Creamy white sperm shooting from his gorgeous swollen head. As it splashed onto my face, I could see Alex gasp with pleasure, his chest and abdomen heaving in ecstasy. It dripped off my face, over my boobs and some then slid off my hard nipple. It was a perfect moment.\n\nAs his orgasm subsided and my own climax softened, he could take in the vision of his lover. I now had his thick come all over me. My face was smeared in sticky semen, my mouth had been plastered and the force of his orgasm had sent his hot come up and out of my nose. I had his sperm dripping from my nostril. It splashed on my hair, some sliding down the long locks resting on his balls and I had thick sticky drops in puddles on my chest. I had Alex's thick semen dripping from both my nipples. I was a happy sticky mess and I made sure that Alex looked at me the whole time, especially my soaking and dripping boobs. He knew that I had done this just for him, to pleasure him and as I looked at his beautiful young face, I realised that I was in love.\n\nI licked the little bit of fresh come that stuck to his cock and shaft, keeping it in my mouth along with the first hard stream of sperm. I moved to sit across his chest, straddling him so that my hot and wet, post-orgasm vagina rested on his bare chest. Still with his sperm in my mouth, I licked my lips showing him that I was tasting his semen. I rubbed all the come that was on my boobs into my skin, leaving my nipples dripping with thick sexy semen. I smeared it all over my face.\n\nMy body was sticky and his come was quickly drying into my skin. I lifted my body slightly so that he could see his come-soaked lover and let the gorgeous stream of sperm, that I held in my mouth, drip on to my vagina. As it slid over my matted and soaked pubic hair, tickling my sensitive clitoris, I lifted Alex's hand to my vagina and with his thumb helped him work it inside me. His fingers were hot and slippery and he could see that my sperm lubricated clitoris was aching to come again for him. If he was quick, I would be able to come a second time. I was so turned on by his body and his lovemaking.\n\nHis touch became more energetic and with happy pleasure felt the sparks begin deep in my body. I could hear myself moaning loudly as he played with me. My head was near exploding and I could feel my hair flowing over my shoulders as I rocked on his clever fingers.\n\nI gripped his wrist as my orgasm came. On the point of my climax, he slid under me so that my clitoris was planted on his mouth. He drank my soaking vagina, tasting my orgasm and his sperm mixed together from our shared sex. My clitoris now throbbing to a gentler wave of pleasure, but no less shattering. I cried out in pleasure, deep and powerful waves of desire. My young lover's mouth buried deep in my sixty-year-old vagina, after enjoying every advantage that a huge, young, virile and eager cock can offer.\n\nI went to move from him, but he held me on to his body, looking straight into my eyes. There I now was, still covered in thick young sperm, and still drips of his thick come falling from my bare boobs and having just orgasmed hard and deep into his mouth. A second shattering climax of our gorgeous lovemaking.\n\nAlex gently kissed my entire vagina. Each of my labia received his intense, loving attention. He sucked each one into his mouth and savoured the feel and the taste of my body. He licked around my clitoris and swallowed. He kissed each of my fiery-red bottom cheeks with a deep, loving suck as he moved out from under me.\n\nHe was now behind me, we were both kneeling when a soft hand gently pressed my head into the pillow, a firm confident hand lifting my bottom into the air, so that he could clearly see my deliciously fucked vagina that he had just made love with.\n\nI felt his still swollen tip gently caressing my vagina and it easily spread my lips apart and around it. I wanted to open my legs for him. My womb and cervix ached though, but right now I really wanted him. We were both soaking wet and the sensation was electric. I went to move my hands to touch him, but he gently placed them back on the bed. I felt him grip his cock and begin to slide his hands along his shaft, pleasuring himself whilst his tip teased my slippery vagina.",
        "He nudged an inch or two inside me and then out again, his tip was soaking wet and I could see him enjoying the view of his enormous manhood, searching for my helpless womb. He let his hands slide up towards his thick mushroom head now buried in me, as he worked his hands on his cock. His fingers were now bouncing off my bottom as he moved on his erection, sending a shock wave through my body. He slid out of my vagina and I felt the touch of his wet mouth firmly on my anus.\n\nHis gorgeous tongue probed inside me, circling my anus and licking the walls of my bottom. When he was satisfied that I was wet enough, he kissed my back and slowly penetrated me. He continued to work his cock with his hands, slow and then fast. He pushed into me about six inches, past my muscles and into my smooth rectum. Receiving no protest from me, he began to deep fuck my asshole. His hands spread my cheeks wide, I knew I was on show for him.\n\nMy womb was sore from the previous evening's incredible lovemaking and he sensed this was not going to be a marathon fuck in my asshole. I felt him squeeze his cock so that it swelled to its full width and then he slid the last few inches all the way inside me, his balls squashed against my clitoris. He then gently pushed me forwards so that I was flat on my stomach, my head still in the pillow, taking his huge manhood deep in me.\n\n\"I've wanted to fuck your asshole since I left you. Your beautiful cunt is the tightest I've ever felt, but this gorgeous, perfect, smooth bottom is the sexiest feeling ever. I want you so much Helen. I want to come so much in you, just like this.\"\n\n\"Yes Alex. Give me more of your thick sperm. Fuck me deep in my asshole. I belong to you my darling.\"\n\nHe then pressed his erection deep into me. The sensation of him stretching my rectum made me shake with intense pleasure. I really wanted to spread my legs wide to take him, but I knew that would be painful as he was so big, he was already squeezing my poor pummelled uterus with his enormous erection. He then held me down by my hips and thrust his cock deep and hard in to me. It made me scream and cry out in pain and pleasure. It was dirty, visceral sex between two lovers who trusted one another.\n\nAlex held his cock deep in me, his shaft consumed by my rectum for a few more seconds. I then felt his lovely body convulse and his orgasm overcame him.\n\n\"Take my fucking come in your tiny asshole, you fucking gorgeous girl Helen. You fucking beautiful woman.\"\n\nI reached for his body and took the full force of his orgasm as he drove his cock deep into my asshole and held it there. After four deep thrusts and four gorgeous spurts of hot come, he kissed my back and caressed my arms. He buried his face in my hair and held his lover tight.\n\n\"You are the most amazing lover, Helen. I adore you. Every inch of your perfection drives me insane.\"\n\nI just lay there, breathless, feeling the warm, young, virile sperm move through my rectum. As he lay back, panting, his big cock glistening with wet come, we interlocked our feet. He lovingly stroked my legs with his warm fingers and it was sexy and sensual. It was reassuring after he had just ravaged and roughly fucked my anus, just like I wanted. My uterus was aching, but I loved it all.\n\n\"I fucking love you Helen. There, I've said it. It's true.\"\n\nI just lay there and smiled to myself. Under my breath I replied so that he could not hear.\n\n\"I fucking love you too Alex.\""
    ],
    "authorname": "LucyDrees",
    "tags": [
        "anal sex",
        "mature",
        "oral creampie",
        "deepthroat",
        "rough sex",
        "older woman",
        "younger guy",
        "blowjob",
        "big cock",
        "cum covered"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/helen-wakes-alex-for-sex"
}