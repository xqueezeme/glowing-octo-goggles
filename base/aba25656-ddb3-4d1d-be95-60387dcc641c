{
    "title": "Sex Dungeon",
    "pages": [
        "All characters are 18 years old or older. I am struggling with part nine of Mr. Robinson. So in the meantime I have written this one shot for your consumption. It is nestled in the Shawverse but is a standalone and so doesn't greatly impact any major story arcs. I hope you enjoy it. If you have any suggestions for this story or any others feel free to contact me. If you like this or hate it let me know. I hope to finish off the Robinson stories soon and finish off the Evil Bitch line and then onto Iron Bitch. Please vote and comment.\n\n*****\n\nDire Diagnosis:\n\nLife isn't fair. It makes no promises and grants no guarantees. Bad things happen to good people and all that crap. I was diagnosed with cancer at the tender young age of 22. It came on without warning and was a death sentence. Even with aggressive treatment there was little chance of remission. They say there are stages of grief and at the end you find acceptance. I skipped a few steps and I guess I had my grandfather to thank for that. He was a no-nonsense sort of fellow and laid down the facts of life early on in my life. That was shortly after I buried my parents and older sister. They had died in a car crash and blind luck had kept me home that day. So it was my gnarly old grandfather that raised me these last twelve years. If I wanted something I worked for it. So he figured I could beat my diagnosis with sheer willpower alone. He was wrong.\n\nI didn't moan and bitch. What was the point of that? I just made a list and decided to see how many things on it I could do before I died. It wasn't a long list but it was all I had really. The first thing on the agenda was to do as much travelling as I could before I got too sick to do that. I was glad I had done that at the onset. It was mainly hopping buses and trains to see the east and west coast since I had grown up in the Midwest. I had never seen the ocean before. My research took me to a small city south of Boston called Arkham. It was well known for its scenic points as well as the corporate headquarters of Numenor Incorporated. I had sent them a request to tour the plant while I was in Arkham but never expected a reply. So when a gleaming black stretch limo pulled up in front of the bed and breakfast I was staying at I was confused. The door opened and a gorgeous Japanese woman approached me and bowed low.\n\n\"You are Trevor Kent,\" she asked and I could only nod. \"Very good, my employer would like to extend an invitation to view our facilities and have dinner with him this evening.\" \n\nWhen I tried to tell her I didn't have the proper clothing for such an event she assured me all would be provided. I climbed into the back of the limo and stared out at the city as she drove me to Numenor Headquarters. I felt like I had just won the golden ticket and was about to meet the tech version of Willie Wonka. It was a short drive but when I saw the gated facility I knew we had arrived. I was taken to the front door where I was scanned so that any clothing I might need could be provided at a moment's notice. I was greeted by none other than Kat Shaw, Nick's sister. I tried not to stare but she was even more attractive than Akira the Asian driver.\n\n\"I want to apologize,\" I said. \"I don't mean to stare but I've never met anyone as beautiful as you before.\"\n\n\"And I thought this was going to be a dull visit,\" she said taking my arm. \"Do you charm all the ladies so easily Trevor? Is it okay if I call you Trevor?\"\n\n\"You can whistle and call me Spot if you want to Ms. Shaw.\" I replied.\n\n\"It's Kat since we are on a first name basis.\" She said and let out a little whistle. \"Just practicing...\"\n\nShe gave me a tour of the first floor and I had to stop twice. The fatigue was getting worse and I tired easier as the disease progressed. Kat did her best to hide her concern but I saw it etched on her lovely features. They had a wheelchair on standby and I had to use it for the tour of the factory floor. There were several production lines and all of it was fully automated. Nick greeted me at command central and offered me a light snack to help strengthen me for the last part of my visit. We took an elevator to the top of the building where I could look out over the town of Arkham and in the distance the ocean.\n\n\"Trevor,\" Nick addressed me in his cultured tenor. \"I need your help.\"\n\n\"My help,\" I replied confused. \"How can I help you?\"\n\n\"I have a pet project. It involves a fully immersive digital environment. You could call it virtual reality but it is far more than that. Its purpose is for long term space flight. While we can chemically induce comas to reduce cargo space for such things as food and other supplies we need a way of keeping the mind active and healthy. So with the help of several A.I.s we have created worlds for the crew to use as entertainment and mental health. The problem is we don't know the effect of long term immersion on a living mind.\"\n\n\"I am a perfect candidate then. I only have a few months at most and you could monitor me to see how I do. I volunteer. The fatigue is just the beginning. It is only going to get worse for me and if I can help out with the space program that is more than I could ever hope for. When do we start?\"\n\nNick and Kat smiled at my enthusiasm. I signed the wavers and called my grandfather. I told him that I had been selected for a study that could help future astronauts. He was so damn proud. Akira returned to help me dress for the dinner with the Shaws and even tied my tie for me. I managed to walk to the elevator and arrive on my own power. I sat next to Kat and met her mother and the other partners of Numenor Incorporated. I learned that there would be other volunteers in the program. There were several worlds and themes that I could choose from. Kat recommended one called Project 13. Nick narrowed his eyes but left it a bit of a mystery.\n\nUnfortunately at the end of meal I was too weak to walk and I was taken to my room via wheelchair. The lovely Akira pushed me and told me how proud she was of my volunteering. I was glad to be chosen. My life had been so normal up till now. She told me as she helped me into my night clothes that if I did pick Project 13 I would never have to worry about dull in that particular world. She helped me into bed but instead of leaving she pulled up a chair and stayed with me until I fell asleep. I awoke the next day feeling well rested but still a bit below par. Kat was sitting in the chair that Akira had pulled up and she was just waking up herself.\n\n\"Morning Trevor,\" she said yawning. \"Did you sleep well?\"\n\n\"Yes I did,\" I replied. \"You didn't have to watch over me.\"\n\n\"I didn't have to but I wanted to,\" she said with a twinkle in her eye. \"You are our honored guest after all.\"\n\n\"I've never been... I mean... thank you,\" I stammered.\n\n\"I must look a mess,\" she said getting to her feet. \"Feel up to breakfast in bed. I can answer any questions you might have before they come to get you prepped.\"\n\nI managed to sit up as a well-dressed maid wheeled in a cart laden with all sorts of food. I fixed my plate as Kat went over the preliminaries. There would be an implantation at the base of my skull which would create the brain/machine interface. Once that was done I would have feeding tubes and other medical necessities attached. After that I would be plugged into the system and I would be on my own. I could choose any program to interact with. If I got tired of one I could exit it and begin another. I asked her about Project 13 but she just smiled and told me I'd have to discover that on my own. \n\nAfter breakfast I was wheeled to a clean room and I was prepped for a minor surgery. I didn't feel any discomfort at all. I was taught how to interact with my cybernetic familiar as the technician called it. The implant housed a cutting edge A.I. that would aid me on my quests and answer any questions I had in and out of game play. I was eager to see how real these worlds were that Nick and the others had created. I was poked and prodded so they could feed me intravenously and monitor my vitals while I was under. The last injection was a mild sedative to help transition me into the digital environment. I yawned a few times and then dropped off to a deep slumber.\n\nI awoke in the white hallway. It served as the jumping off point to the various worlds. I brought up my hand and a menu screen appeared in front of me. There was a complete listing of the programs and at the very bottom was Project 13. A part of me wanted to try out one of the other realms but Kat had put the bug in my brain so I selected it. There was a sense of movement and I hovered in a velvety red pillar of light. I raised my hand and a character creation menu appeared. \n\n\"Male, Female or Other,\" a sensuous female voice asked.\n\n\"Other... how can you be other,\" I asked.\n\n\"This realm allows for a Futanari option,\" the voice explained. \"I will display for your understanding.\"\n\nA shapely female figure appeared and was sporting a world class erection between 'her' legs. I had an instant understanding of what kind of game this was. I touched the figure and looked at it from several angles. I was tempted since it really was the best of both worlds.\n\n\"You can change your mind later on if you wish,\" the voice said.\n\n\"Oh what the hell,\" I said grinning from ear to ear. \"I'll give the um... what did you call it?\"\n\n\"Futanari or Futa for short,\" the voice giggled. \"A wise choice, now you need to select your race. There are several to choose from. Each race has a perk as well as a hindrance. You can play as a human which is widely accepted in all the realms of Erogenia. The downside is that their endurance is lower compared to other races. The next race is surface elf. They have a very high charisma and a good endurance but aren't well liked by orcs or goblins. You can play as a dark elf. They have a good charisma, good endurance as well as an above average dexterity. Sadly, they are feared and mistrusted by humans and surface elves. The orcs are a fun race to play. They have a high endurance but a low charisma. They are feared by surface elves and only tolerated by humans. The last race is the cat folk. They possess a good endurance, dexterity and charisma. But they are hunted as sex slaves by most of the other races.\"\n\n\"Sex slaves,\" I said and the voice purred in my ear.\n\n\"It is widely known that the most gifted lovers in all the realm are the cats,\" she said practically moaning now. \"Here is what the average Futa cat folk looks like.\"\n\nMy jaw dropped. She was stunning and barely fit into her armor if you could actually call it armor. Playing a cat folk would be a challenge. Oh why not, it sounded like fun. The next screen was a list of merits and flaws. I had a total of ten points to spend. I asked what were the benefits of taking merits and flaws? The interface told me that certain merits opened up exclusive classes. I liked the sound of that. I saw that there was one merit that actually cost ten points.\n\n\"Why is backstab so damn expensive?\"\n\n\"It allows you to begin the game as an assassin of sorts,\" she said.\n\n\"I prefer to play a mix of stealth and magic,\" I told her.\n\n\"Well then take backstab and I'll tell you all about the Anal Assassin,\" she giggled. \"The Anal Assassin is the only class that allows you to collect marks by targeting their backside.\"\n\n\"Marks...\" I said and she continued.\n\n\"The goal of the game is to sleep with as many people as you can. When your partner orgasms you 'collect' them. You build a harem of willing partners that allow you to level up and gain special abilities. If you manage to back stab a partner they are collected with a bonus. To gain access to shadow magic you need to collect mages.\"\n\n\"Oh I am going to like this game,\" I said. \"Anything else I need to know?\"\n\n\"If you collect monsters you earn gold and mana increases. But beware of the undead they can steal partners and can drain your endurance faster than any other monster.\"\n\nI chose back stab and created my Anal Assassin. I finished my character off by fine tuning her appearance until I was satisfied. I decided on a white tiger pattern to make her more appealing and unusual. I had enough to buy light armor and a hooded cloak. I didn't need to advertise right away who and what I was. I looked over my avatar one last time before entering the game. The world went dark and I awoke in the woods. I didn't expect everything to look so real. I could smell the pine trees and feel the wind on my skin. This was amazing! I looked myself over and it took me a few minutes to get used to the feminine curves. I wonder if I got experience for masturbating. I brought up the map feature and saw that I wasn't too far from the small town of Hung's Hollow. I pulled up my hood and quietly headed in that direction.\n\nThe forest seemed quiet at first but my keen hearing picked up someone in distress. I didn't go rushing in until I got a look at the situation. I snuck up to a clearing and my jaw nearly dropped when I saw the woman being attacked by some sort of plant with tentacles. What the hell is that? An information screen appeared and it had a basic description of an Ero Plant. It uses it tentacles to pull unsuspecting victims off their feet before mercilessly raping them. The only known weak spot of the Ero Plant was its bulbous sack near the base of the monster. My only weapon was a dagger. I could try and throw it but if I missed I would be as helpless as the she-elf. I walked around the perimeter of the clearing to see if I could find any other weaknesses. I saw something disturbing the grass and squinted, there hiding beneath the blades of grass were a circle of thin tentacles. I bet that's how it finds its prey. You go walking in and step on one of those and whoosh you are plant food.\n\nI looked up at the naked she-elf inverted and grasped by the ankles. She was writhing around as a third tentacle violated her ass. It was hard to judge her height but she was quite attractive with long silky blond hair and a womanly figure. I liked her pale nipples that appeared painfully distended. It appeared that her pubic hair had been trimmed in some sort of runic pattern. My familiar showed me a variety of common pussy runes. The one she bore meant that she was the oldest daughter. The elf girl was moaning now as the plant began pushed her towards one hell of a climax. Damn it, I drew my dagger and moved as carefully as I could. It didn't help that the damn tentacles kept squirming all over the forest's floor. I was almost within stabbing range when the she elf let loose a monstrous cry as she climaxed. I moved without thinking and threw myself forward and stabbed that wicked fucker in its sack. The plant shuddered and died. I caught the girl as she fell. We ended up on our backs in the clearing. She clung to me and thanked me for my aid.\n\n\"You saved me,\" she pronounced as she checked out my ample cleavage. \"My, what a womanly figure you possess... so round... so enticing and so... damn is that all you?\" She asked staring at my generous erection.\n\n\"Sorry, but your beauty inspired me,\" I said as she licked her lips.\n\n\"I do owe you a reward,\" she purred. \"...Mayhap a loving blowjob to remember me by?\"\n\n\"How can I possibly refuse,\" I growled as the elf dropped to her knees to examine my member better.\n\n\"Truly a cock of heroic proportions,\" she said taking me in hand. \"So firm and so thick... I shalt honor you with a kiss.\"\n\nShe gave my cock a hesitant lick and seemed to find the taste satisfactory. Soon the head was in her mouth and her tongue was working its elfish magic upon me. I trembled under her eager worship. I gripped yon she elf by her golden locks and began fucking her face. Apparently she had the merit of no gag reflex as she took my entire length between her pouty lips with ease. Before I could blow my load she came up for air and begged me to take away the foul memories of the devil plant. I eagerly agreed and positioned the fair maiden on her hands and knees. I teased her precious pussy lips with the length of my magic rod as I pulled her rosy ass cheeks apart. I saw her puckered anus had been violated by the Ero Plant and decided to start there. I pulled back and parked the head of my cock at the entrance to her underworld. She looked over her shoulder in surprise as I plunged into her inner darkness.\n\n\"Foul deed foul Futa,\" she cried. \"Thou hast pierced my ass to its core... I am not that kind of elf... UNNNN... I am a good girl... NNNNNN... oh god, don't stop... UNNNNN... fuck my ass you evil bitch you! Drive that wicked cock harder... harder I tell thee... oh shit that feels amazing... wait until I tell my sisters about this!\"\n\n\"You are so damn tight she-elf,\" I growled as I pummeled her from behind. \"I have grown a taste for your kind.\"\n\n\"I bet you say that to all the girls,\" she purred. \"Faster damn you... oh yeah that's it baby... I'm almost there... I can feel you growing inside of me. Pump thy cock milk into my ass and I will be thine.\"\n\nI came so hard I nearly passed out. The poor elf did faint and as I caught my breath a new menu appeared. Did I wish to claim the elven cleric for my harem? I added her to my followers and realized that I hadn't named my character. I had been in such a rush to start I had left it blank. I thought about something stealthy but simple. I settled on Shadow Oak. We snuggled and restored the lost stamina we had both lost. I would have to remember that. The elf woke up and a gold icon appeared above her head. The menu informed me that she had a side quest if I chose to accept it. \n\n\"What can I do for you?\" I asked and she frowned.\n\n\"I have lost my way,\" she replied. \"Will you help me home and perhaps one of my sisters will reward you.\"\n\n\"I accept,\" I said and the icon disappeared. \"Looks like you live on the far side of Hung's Hollow.\" I told her as my map popped up showing a flashing point just beyond the town.\n\n\"You better be careful,\" she warned. \"Cat folk are hunted in the hollow. You could end up with a collar around that delicate neck of yours.\"\n\n\"We will avoid the town for now. Let's get going.\"\n\nSo we took an indirect route to the hollow and veered east before reaching the road. It took longer and it was nearly nightfall before we reached the she-elf's cabin. A plume of smoke was rising from the chimney and she seemed quite excited about getting home. She took me by the hand and opened the front door. Inside the cabin was her entire family. Her parents were fixing dinner while her three sisters were seated around a table sewing. Everyone stopped what they were doing and rushed us seeing that their darling daughter had returned home safe and sound.\n\n\"What happened young lady,\" her mother asked in a stern voice.\n\n\"I was gathering wild flowers when a devil plant attacked.\" She replied her cheeks turning crimson. \"But I was rescued by brave Shadow Oak who agreed to see me home.\"\n\n\"Thank you for saving my daughter,\" mom said and a melody played indicating my side quest was complete. \"Please stay the night and break your fast with us.\"\n\n\"That would be lovely,\" I said lowering my hood.\n\n\"A cat folk,\" dad said his eyes widening in lust.\n\n\"Father, remember yourself... she is a guest and besides she is a Futa... so hands off...\" the daughter explained.\n\nThe father grumbled and returned to his task. I was introduced to her sisters who forgot about their sewing and asked me what it was like. I shrugged and asked what it was like to be a girl. They just giggled and begged me to tell the tale of how I had bested the devil plant. I went into how I had snuck up and saw their sister handing upside-down. How I had moved as fast as I could but she had been ravaged by the foul plant.\n\n\"Did it fuck her,\" one sister asked.\n\n\"Yes it did,\" I replied and they blushed.\n\n\"Did it rape her,\" another sister asked.",
        "\"It violated her completely,\" I said and the sisters bit their lower lips quite lewdly now. \"I managed to avoid the tentacles and slay the beast.\"\n\n\"Hurray,\" cried the last sister. \"Our hero...\"\n\n\"Did my daughter thank you properly,\" mother asked.\n\n\"Um... she gave me a splendid blowjob,\" I said unsure of what I was supposed to say.\n\n\"That's my girl,\" mother said proudly. \"I taught her all she knows. No one sucks cock like our family.\"\n\n\"You must be very proud,\" I said trying not to laugh.\n\n\"Oh I am,\" she replied. \"You know I earned my Masters in Fellatio at the University. I taught until I retired and married this handsome gent here. I expect my daughters to score high marks when they are old enough to attend.\"\n\nWe ate our meal and I was surprised at how good it tasted. I offered to help with the dishes but mother would have none of it. She directed the three sisters to show me where I would be sleeping. It was only when she called them by name that I realized they were triplets, identical triplets. I didn't want to be racist and say that all elves look alike. They took me by the hand and guided me upstairs. Their bedroom was huge and the bed was of an equally large measure. It had to fit four elf maids after all. The triplets offered to run me a bath and I accepted. Shara, the oldest of the three, conjured a silver bathtub. Tara, the middle sister, called up nice hot water from thin air. Lara, the youngest, began helping me out of my clothes. Once naked I stepped into the bath and let out a healthy purr as I lay in the bath. Shara offered to scrub my legs. Tara offered to wash my arms. Lara simply sat close and scratched me behind my ears. Despite my attempt to hide it the head of my cock popped up for all to see.\n\n\"Ooh it's so cute,\" Shara said licking her lips.\n\n\"MMM it looks very tasty,\" Tara moaned her hand brushing my left breast.\n\n\"Can I kiss your cock,\" Lara asked eager to progress things.\n\n\"Since you asked so nice,\" I told the youngest.\n\n\"I get to ride it first,\" Shara demanded as the eldest.\n\n\"I get to ride it second,\" Tara stated tweaking my nipple.\n\n\"MMMMMMM,\" Lara moaned as she took me between her lips.\n\n\"Oh shit,\" I whimpered as Lara climbed into the tub so she could take more down her eager little throat.\n\nI lifted my hips up so that most of my erection was above the water line. Shara was naked and offering me her pussy for kissing. Tara was stroking the shaft of my cock. Lara just kept bobbing her head up and down like a good little cocksucker. I licked Shara's wet pussy slowly to enjoy the tantalizing flavor it offered. I didn't miss her pussy rune that marked her first of three. Tara was squeezing me as she stroked my length. Lara was ready to swallow my first load. I was panting as my orgasm hit me like a ton of bricks. The youngest sister gulped down my cock milk and even licked me clean. The bath forgotten I was helped out of the tub, dried off and the four of us moved to the center of the bed. I saw that my endurance meter was recharging at a much faster rate than last time. My familiar explained to me that since I had a cleric in my harem health and stamina recuperated at double the normal rate. Which meant...\n\n\"It's hard again already,\" Shara squealed in delight. \"Move over this cock is mine!\"\n\nShara straddled me and pulled her labia apart so I could see the head of my dick slide into her. Tara took her position over my face and poor little Lara just waited patiently. I lapped at Tara's sweet nectar as her cock hungry sister rode me nice and slow. I saw that Tara's designation was second of three and Lara was third of three. I barely heard mother come up and comment at how good her girls were behaving. I felt Shara's pussy tighten around me as her orgasm grew near. I began to thrust my hips upward and a second squeal escaped Shara's lips that night but not the last. I drove her headlong over the edge and she nearly fainted as she came. Lara took Tara's spot as the middle sister mounted me. She started off fast as she faced away from me and drove her hips up and down with abandon. Lara's sweet pussy tasted the best of all. She ground her tight little cunt against my face as her sister galloped to the finish line in record time. Tara fainted just as her sister had in the woods, poor thing.\n\n\"I'm going to make you cum,\" Lara said as she got on all fours and offered her body to me.\n\n\"I'm going to make you scream,\" I said as I knelt behind her and eased my cock into her virgin ass.\n\n\"Wait... that's the wrong... UNNNNN...never mind...\"\n\nI fucked her ass slowly with leisurely thrusts of my hips. Tara and Shara watched intently as I took their sister's anal virginity. My familiar informed me that if I got the other two I'd earn an achievement, the Triplet Trifecta. I wanted that award. I built up speed as my orgasm grew near. Poor Lara just ground her ass against me in surrender. I fired my load deep in the youngest sister's butt and added her to my harem. I eased out of her and she just smiled blissfully. Shara was next. As my endurance refilled I grabbed her by the ankle and drug her near. I got my hands on her ass cheeks and pulled them apart. I began tonguing her puckered sphincter and watched her resistance fade into nothing.\n\n\"It's hard again,\" Tara whispered in astonishment.\n\n\"Oh god my ass,\" Shara groaned as I slid inside of her.\n\n\"Fuck that is tight,\" I moaned as my erection sunk deep.\n\n\"How does it feel Shara?\" Tara asked as I began moving.\n\n\"NNNNNN nice,\" she said her body shuddering. \"So big... so thick... I never guessed I'd like it.\"\n\n\"You're next sweetie,\" I said to Tara as I shagged her sister.\n\nI savored Shara's ass. It was velvety tight and squeezed me as I took my pleasure from her. I cupped her glorious elven tits with their pale nipples and played with them as I began thrusting harder into her. She was grunting in time with my hips and soon we were both on the edge. Tara tried dashing off at the last second but I caught her by the wrist and held on. I cried out as I sprayed Shara's insides and almost lost my grip on Tara.\n\n\"Do whatever you want,\" she whimpered. \"I was saving my ass for my wedding night.\"\n\n\"How romantic,\" I told her as I pulled out of her sister and kissed Tara to quiet her down.\n\nShe melted under the kiss and soon was pressing her body to mine. Shara and Lara licked my cock clean and had it ready for Tara in no time at all. Here comes the trifecta I thought as I put dear Tara on her back and pulled her ass cheeks apart.\n\n\"Beg me for it,\" I demanded.\n\n\"What...\" she asked not understanding.\n\n\"Beg me to fuck your tight little ass,\" I repeated.\n\n\"NNNNNN...\" she stammered feeling the head of my cock pressing against her asshole. \"Oh god... fuck my ass please... don't leave me out... I need you in my ass...\" she begged and I rewarded her. \"Yes... I can feel it filling me up... so good... more... deeper... that's it...\"\n\nI lifted up her legs by the ankle and began moving. Shara knelt on one side and Lara on the other. They watched intently as I took Tara's anal virginity. I built up speed for my last orgasm of the night. Tara clawed at the bedding as the pleasure filled her. She was gasping and panting as my cock swelled inside of her. The slapping of our bodies as they met filled the room. Tara cried out as she came and her ass clenched around me pushing me over the edge. I howled as my cock milk pulsed inside of her. Kym, the sister I had rescued in the forest, walked in at that very moment.\n\n\"Did I miss anything?\" She asked and I looked over my shoulder and smiled.\n\n\"A little bit,\" I said as I eased out of Tara. \n\nMy menu popped open and I had a few announcements. There at the top was my Triplet Trifecta award. Below that was a message saying that I had reached level three. If I knew fucking triplets would level me up so fast I'd do it more often. The last announcement was another achievement. I got to select a racial bonus. I had to choose between a prehensile tail or a second cock.\n\n\"Wait what... either a prehensile tail or having two dicks,\" I said aloud.\n\n\"Oh two cocks definitely,\" Shara said her body shaking.\n\n\"Yes...yes... two most definitely,\" Tara whimpered still recovering.\n\n\"Hmmm... what does the tail give you,\" Lara asked.\n\n\"It says an extra action, while the two cocks give me a bonus to my back stab...\" I said.\n\n\"Do you really have to think about this,\" Kym said smiling.\n\nThey were right, why was I hesitating. I touched the icon for the double dick attack. I had all four sisters in my harem and a second achievement message appeared. It was called 'all in the family'. If I nailed mom I'd get a bonus to incestuous ambushes. I cleaned up and left the bedroom. I told the sisters to remain in the bedroom and get some rest. With four of them under my sway my endurance regenerated amazingly fast. Shara was my best addition since she was a fledgling mage and allowed me access to shadow magic. All I had to do was earn enough coin to buy spells. I sat at the top of the steps and listened. I could hear mom moving around in the kitchen but there was so sign of dad. I crept down slowly and looked around. The living room was empty and it was obvious after a quick search that I had mom to myself.\n\nI snuck up behind her eager to add her to my harem. I pressed close as I cupped her tits. She cried out at first but when her naked ass brushed against my two erections she stopped. She reached back with one of her soapy hands and stroked one cock and then the other. She let out a gasp of surprise. I told her what I wanted and her body began to shake. I pushed her shoulders down bending her over the sink.\n\n\"Tell me how much you want me,\" I asked.\n\n\"As much as I ever wanted anything in my entire life,\" she stammered.\n\n\"If I make you cum will you suck me off afterwards?\" I asked as I lined up the heads of my dicks.\n\n\"Gladly... yes... UNNNNNN... oh goddess yes...\" she moaned as I entered her. \"Anackire bless me...\"\n\nI began to push slowly and she cried out to her goddess over and over. The pleasure never ceased to amaze me. I was in a game but it felt so real. I could feel her pussy and ass take me in and swallow me up. I waited until she nodded to begin fucking her. Damn, I could actually feel both cocks as they slid in and out of her holes. I pounded her hard but slow. She was shaking and telling me how close she was. I built up speed and she screamed as she climaxed. I ground against her as her endurance bar slowly refilled. I touched her icon in my menu and added her to my harem. I grinned as I earned my next achievement. It was the best one yet. Now anytime I approached a mother and daughter I gained a seduction bonus. Mom, once she had recovered, dropped to her knees and used her advanced oral skills on both my erections. She had me close to climaxing at an alarming rate. I howled as I came and she managed to fit both cocks into her mouth and drink me dry.\n\n\"Oh damn that was amazing,\" I said praising her.\n\n\"I am glad you enjoyed my humble skills Master,\" she purred.\n\n\"Who is Anackire?\" I asked as my endurance bar refilled.\n\n\"She is the nine-fold goddess of chaos and magic. She favors woman with the secret arts of love and shadows. I can introduce you to her priestess in town. She may teach you for a price.\"\n\nMy second side quest icon appeared over her head. My menu bar opened and asked if I wanted to accept this quest. I agreed and then a second message appeared. Was I willing to pay the price to accept this quest? I wondered what the price was. I asked mom but she didn't react. I shrugged and agreed to pay her price. She smiled up at me and told me what her price was marriage. We were to be married at the temple of Anackire and thus killing two birds with one cock... err two cocks. Elara, my soon to be wife, tossed her soon to be exes clothing out the window. I moved in that night to the joy of my stepdaughters. \n\nFirst Dungeon Crawl:\n\nI earned a ton of experience points that first night. I had no idea I could level up just from sleeping with my harem. So with five of them providing a bonus to my ever improving endurance it was a night I would never forget. I closed my eyes to sleep and everything went black as the setting changed. When I opened my eyes it was morning. I was in the middle of a huge bed. The she-elves were on either side of me with Elara on my left and Kym to my right. The triplets were next to them. We all awoke and began our day with a group shower and then a meal. I was given new clothes that bore the family colors of Elara's clan the Star Blades. I looked good in green and gold. Once we were married one of my biggest flaws would be greatly reduced. It was unlikely anyone would dare to try and enslave me as a married Futa. The political backlash would create chaos and a shit storm of angry elves would appear at the slaver's doorstep.\n\n\"I am ready to go to the temple,\" I said to Elara.\n\n\"You must first gather three flowers from the woods and take them to a pool sacred to Anackire. You must drop the blooms into the pool and the entrance to the temple will be revealed. Anackire is a secret goddess and her power hidden from the eyes of the unworthy. We will be waiting for you there.\"\n\nI checked my menu and found pictures of the three flowers as well as a map showing where the pool was located. To protect myself I was given a silver short sword that bore the sigil of the Star Blades. I set out eager to explore more of this wonderful realm. I slipped into the woods behind our house. I had a mental image of the three flowers I needed to enter the temple. I crept quietly in an ever expanding fan pattern to clear out the area closest to the house. I was about to take a break when I spotted a group of diminutive creatures. I stopped and dropped down to see who and what they were. I counted twelve of them and they looked like stunted dark skinned goblins but I was wrong. They were kobolds and according to my familiar it was a rape squad. On their own kobolds weren't a threat to anyone. So they traveled in packs so they could swarm unsuspecting woman so they could gang up on them. I remained still as they passed.\n\n\"Hey you,\" a soft voice called to me from the right deeper in the woods.\n\n\"Me,\" I asked and the feminine voice replied.\n\n\"Yes you, you can hide with me,\" she squeaked.\n\nI saw just a hint of movement and I crept over to her hiding place. She was panting and covered in sweat. Had the kobold rape gang been hunting her? I moved behind the petite Halfling and sat down. She was on her hands and knees watching the movement of the kobolds. I couldn't help but notice the fine nice round ass that was brushing against my groin now. She told me not to move and that the kobolds were still searching for her. The more she moved the harder I got. I adjusted my position and knelt behind her now. \n\n\"You want to look too,\" she asked.\n\n\"Um sure,\" I whispered in her ear. \"You smell incredible.\"\n\n\"Thank you,\" she giggled. \"I accidently spilled my mother's perfume on me this morning. It gets people all twitterpated. UNNNNN are those your hands on my breasts? Oh my... if you keep that up I'm going to get all wet. Wait, those are my panties... NNNNNN don't pinch my nipples so hard... oh my is that your...\"\n\n\"I'm a Futa,\" I moaned in her ear as I teased her pussy with the length of my top cock. \"I can't help myself.\"\n\n\"It's okay... it's all my fault... damn perfume... oh god yes slide it inside of me... be gentle this is my first time... wait... is that another... praise the goddess... you have two of them!\"\n\nWe watched the kobolds as I fucked her pussy and teased her ass with my thumb. Her name was Rose Moonsong and I was her first. Soon we had a great rhythm going as the kobolds set up camp and ready to eat their meal. I shot my load into Rose and we switched positions. I laid on my side watching the kobolds while she went down on me. For a virgin she really knew how to suck dick.\n\n\"My older sister Iris taught me all about Futas,\" she said between alternating from one cock to the other. \"She dated one for two years. You are a lot bigger than he was. I admit it. I used to watch them do it. He had two cocks as well. I always wanted to feel that. It looked so intense. Will you fuck me like that please?\"\n\n\"Yes, but you have to ride me... show me how much you want it,\" I grunted as she double fisted my cocks.\n\n\"Of course,\" she giggled. \"I understand. You want to watch your cocks moving in and out of me. I was told Futa were very voyeuristic. Is that true?\"\n\n\"Yep,\" I grunted as I got ready to shoot my loads. \"You better not waste my cock milk Rose.\"\n\nShe shook her head and opened her mouth wide and barely got both tips between her lips. I bit my lip to keep from screaming. God damn kobolds, why are they still here? As I kept watch I was rolled onto my back and Rose took charge. I felt both her hands on me as she guided my cocks into both her holes. I looked up as she began moving. She had stripped off her clothes and I cupped her tits forgetting about the kobolds. I licked and tasted them as the petite Halfling rode me nice and slow.\n\n\"So big,\" she said a little too loud now.\n\n\"Hush, they will hear you,\" I whispered and she laughed. \"What's so funny?\"\n\n\"You are silly Futa,\" she said. \"You were completely fooled by my illusion.\"\n\n\"Oh you little slut,\" I said as she drove her hips down harder now.\n\n\"Give me your cock milk,\" she growled. \"I need it. I can't live without your cocks now.\"\n\nI bit her nipples and that pushed Rose into a kind of sexual frenzy. She was slamming her hips down now as hard as she could. Then she turned the tables and began pinching and twisting my nipples. I was still getting used to my sensitive girl parts. I lost control and pumped cum into both her holes with enough force to elicit a scream on my part. She hugged me tight and my menu window opened with an offer to collect Rose. I accepted and she disappeared before my eyes. I looked at my inventory and saw that one of the flowers I needed was now filled. I laughed when I realized what she was and that there were two other blooms to pick.\n\nI dressed and headed off to find the next flower. Now that I knew what I was looking for I felt success would come easily. I was careful to move as quietly as I could. I was far too close to the town to let down my guard. I feared ending up as some sicko's sex slave. Maybe I should have just chosen the dark elf race instead. My familiar informed me that only the Futas were able to gain the double dick attack. Well I guess I had picked the right race after all. I took a break after an hour of hunting for the next flower. I ate the snack that the girls had fixed for me. I had taken up a secluded spot at the lip for a bowl shaped portion of the woods. As I ate I looked around and that's when I spotted the stone outcropping to my right. It was lower down but heavily concealed by scrub and a patch of ancient trees. That looked like an ideal spot to search next.\n\nI finished my meal and looked for a route to the rocks. I had to climb up and then come at the outcrop from above. It was cleverly hidden and if I hadn't seen it from the side I would never had seen it otherwise. What I had thought was a natural stone formation was in fact the ruined remains of an ancient building. Most of the dome had collapsed but there was still a portion intact and it was this part that got my full attention. There were three of them surrounding her. It was ironic that I was just thinking about dark elves. The three males had a female stripped and chained to a black stone altar. They were chanting as they stroked their cocks. If I was lucky I could take out one of them with a sneak attack but then the other two would be on me. So how was I going to free her and claim the ebony bloom? I went through my inventory and saw the clothing that Elara had given to me. I wonder if the Star Blades had any connection to the dark elves. My familiar shared a bit of local lore with me.",
        "\"There is a fierce rivalry between the dark elves and the Star Blade tribe. While the dark elves make formidable mages they are not equal to the fighting prowess of the surface elves.\"\n\nI giggled as I took the clothing from my inventory and put it on. I pulled the hood of my cloak up and drew my silver sword. I found a spot to reveal myself to the dark elves. I cried out and brandished my blade. The three looked up and saw the sun flash off my weapon and let go of their cocks and beat a hasty retreat. I waited until I was sure they were gone to descend and claim my prize. I freed the woman. She was so weak I had to carry her out to a safe location before I could speak with her. I kept a look out but the trio seemed to have fled all the way back to their underground realm. The woman moaned as she regained consciousness.\n\n\"Hey, are you okay,\" I asked and she nodded as she slowly sat up.\n\n\"Don't hurt me,\" she begged as she saw what I was wearing.\n\n\"I saved you,\" I told her as I pulled down the hood.\n\n\"A cat folk, why would you save me,\" she asked.\n\n\"I think that you are hiding something I need,\" I said and she smiled.\n\n\"You are a follower of the dark one,\" she whispered. \"Say her name and I will give you what you seek.\"\n\n\"Anackire,\" I said in low voice.\n\nThe dark elf clapped her hands together and then gestured producing a dark bloom. I received it and it appeared in my inventory. The she elf began to get to her feet when she saw my frown. She sat back down and asked why I was sad. I told her how I had gotten the first flower. She looked confused until I put all of my clothing into my inventory. When she saw my dual erections she gasped and understood.\n\n\"Oh you thought I was the bud you sought,\" she moaned. \"Do you still wish to pluck me?\"\n\nI leaned close and kissed her. She kissed me back and took me into her arms. I learned later how aggressive the dark elves can be especially the females. That is why it took three males to subdue her. I relented to her hunger and let her take charge. She was a fierce lover and was dominant throughout our encounter. I lay panting and sweating beneath her fiery passion. She took me three times before her endurance reached zero. I checked my inventory only to discover she wasn't in my harem. I had to take her not the other way around. I drew on the others to recuperate. I rolled the dark elf onto her belly and slid into her from behind. She fought like a wild cat now. I fucked her as hard and fast as I could. Her fighting slowly stopped and then she was strangely compliant.\n\n\"Fine, fuck me you Futa bitch,\" she growled.\n\n\"Shut up cunt,\" I replied as I flexed my cocks inside of her. \"Take that you cock hungry slut!\"\n\n\"NNNNNN, I am... oh god I am a cock hungry,\" she cried out. \"Give it to me... fill my ass and pussy with your man juice.\"\n\nI grabbed her by the hair and that's when she broke completely. I used it like a rein and worked her into a gallop. The sound of our love play echoed over the entire woods. Her scream as she climaxed pierced the air and she vanished revealing the third and final flower I required. I never expected that kind of twist in this quest. I dressed and brought my map window up. I had a long way to go before I reached the pool. The dark elf had alerted most of the woods to my presence. I was going to have to be doubly careful if I was going to reach the pool. I changed into my old clothes so that at least the three dark elves wouldn't recognize me. \n\nI moved as quietly as I could but was still getting used to the new body mechanics, namely breasts. It felt so weird to me and I stopped in a secluded niche to see if there was anything in my inventory that might help. To be honest the constant swaying and the rubbing of my nipples against the shirt were driving me crazy. I found a roll of bandages under my healing items and used them to good use. I wrapped up my jugs and put my shirt back on. Now I could focus on my environment instead of my poor sensitive nipples. A little later on I saw a bright blue patch ahead of me and carefully approached. I could smell the scent of urine and realized that the bright blue patch was in fact where someone took a piss. That meant that someone was nearby and I should be extra cautious. \n\nI was just topping a hill when I saw the flash of sunlight on a piece of metal. I froze and stared at it. My heart began to pump in my chest and my muscles began to tense as if I was getting ready to attack. Oh dear god it was a hunter's version of a red laser dot. I turned away and got ahold of myself. I now knew there was at least one bad guy in the area. I moved in a circular pattern away from the tree where the piece of metal hung. I wanted another angle on that tree to see where they were positioned. I found a good spot and waited. I remained motionless and found it was easy for me to stay still without muscles cramping or going asleep. The hunter was not quite as patient. They moved and I caught a profile of their head and saw the prominent fangs. It was an orc. I couldn't tell their sex but I decided it was time to turn the tables on them. I popped my claws and easily climbed a tree nearby. If my plan worked I would use the branch as a springboard and launch myself at them from the side and take them out. Before I did that though I wanted to make sure they were alone. So once more I waited patiently for someone else to reveal themselves. Someone, actually something arrived and it too was hunting the orc. It must have found where they took a piss and tracked them to the tree. The lizard was huge, at least twice the size of a full grown horse and smelt of sulfur something fierce. It was a dark green with red and yellow markings along its back and flanks. The head was reminiscent of a komodo dragon and made me glad I was up in a tree and nowhere near that vicious maw it possessed. It stalked straight up to the orc's tree and as I watched it sprayed some sort of liquid on the base of the tree from its mouth and one spark later the tree was engulfed in flames. \n\nThe orc cried out in pain and surprise. I watched as she leapt from her branch and shoulder rolled away from the blazing tree and the beast that had nearly roasted her alive. I changed out my weapon without thinking. I had the silver sword in my hands and timed my leap with perfection. I launched my body into the air and took aim at the spot just behind the skull of the beast. It would be more vulnerable there I hoped. I hit my mark and with my entire body weight behind it the sword nearly decapitated the thing. It dropped lifeless beneath me and with a jubilant tone vanished in a cloud of pixels. There were items left behind which I added to my inventory before checking on the wounded orc. She was barely conscious and huddled in a fetal position on the ground.\n\n\"I won't hurt you,\" I said as I searched my inventory for anything that might heal her.\n\n\"You... you killed it,\" she whimpered. \"...with one shot... who are you?\"\n\n\"I am Shadow Oak, but my friends call me Shadow,\" I said in introduction.\n\nThe only thing I had to heal her with was my saliva. Apparently cat folk can lick their own wounds or those of others for a minor restoration of hit points. Her health bar was in the yellow so I told her what I had to do. I helped her out of her armor and discovered the worst of the burns were on her back side and her lower back. I smiled as I brought my face to her lower back and began to lick. She shivered at first and then moaned as the anesthetic effect of my saliva started to work. As I worked my way down her moans got louder and more insistent. Once I had licked her ass cheeks and the back of her thighs the she-orc insisted on moving to a more mutually pleasurable position.\n\n\"Two... you have two cocks,\" she gasped. \"Oh I am going to be in heaven.\"\n\nAs I licked her soaked slit she went down on me and stroked my other erection eagerly. I found her sensitive clit and teased her to an ear splitting climax. Once more I was worried my position might be compromised but no one came or interrupted our little love fest. The she-orc, who went by the moniker of Black Thorn, was now straddling my erections and eager for the next stage of pleasure.\n\n\"Let me do it,\" she begged. \"Please let me fuck you.\"\n\n\"How can I possibly say no,\" I replied as she impaled herself completely.\n\n\"Oh god... my pussy... my ass... nnnnnn... let me be your companion please,\" she groveled as she rode me. \"I will be your protector.\"\n\n\"I don't understand,\" I said until I looked closer at her health bar. She wasn't an A.I. she was another player. \"I didn't realize... oh damn... you are squeezing me like crazy...\"\n\n\"You won't find a more skilled or eager lover than me Shadow. What do you say?\"\n\n\"Let's see how this all works out,\" I said and she agreed.\n\nThorn rode me like a mad woman. She wasn't like any of the other females in the game. She did things that made my toes curl in record time. I was panting and ready to burst when she changed things up and slowed down. She let me catch my breath and then rode me hard only to slow down again. She did this a few times until we crossed the point of no return. When I finally did climax I nearly passed out. Thorn lay next to me and asked me how long I had been in this world. I told her even as I claimed a new level and a new achievement, one of your own. She had just cracked fifth level and had finished her quest, to find and seduce a cat folk. She was laughing when she told me she had also gotten an achievement of her own.\n\n\"I... just got 'double dicked'. It's a pretty rare one according to my familiar.\" She said as she wiped tears from her eyes.\n\n\"A she-orc huh,\" I said and she nodded.\n\n\"I wanted a strong female role to play,\" she confessed. \"A Futa Cat Folk... I have to say that is far more interesting than mine.\"\n\n\"I tend towards the unusual,\" I said. \"Besides what guy hasn't fantasized about having tits.\"\n\n\"MMMM speaking of tits,\" she purred. \"Let's unwrap these babies and have a taste shall we.\"\n\n\"Wait... unnnn... stop...\"\n\nIt was nightfall before we zeroed out our endurance meters. I was impressed with her stamina and she adored my cocks. It was a match made in virtual reality. We ate dinner and I told her I still had a quest to finish. She once again offered to be my body guard. I took her up on her offer and we agreed to head out at first light. We slept in the trees for fear of another of those damn fire breathing lizards showing up. Well that and her thunderous cries when she climaxed might have drawn any number of wandering monsters near our camp. I didn't sleep much. I was still a little wary of her for now. I did close my eyes long enough to recharge my meters though. Dawn came faster than expected but then again this was just a digital landscape. Though it felt, smelled and tasted very real to me.\n\nI brought up my map and we headed out after a light breakfast. Thorn was eager to blaze a trail but I insisted on stealth. So while it took us longer we were able to ambush several monsters and a few hunting parties along our way to the pool. When we did reach the pool I didn't know if she could follow me or not. She understood and agreed to guard it until I returned. I retrieved the three blooms and dropped them onto the surface of the water. They rippled and once the last flower struck a metallic tone sounded and a voice called out to us.\n\n\"If you would enter the temple you must come sky clad or not at all.\"\n\n\"I guess we are going naked then,\" I said.\n\n\"I just got a side quest,\" she said with a smile. \"Do you mind?\"\n\n\"No, the more the merrier,\" I told her and we deselected all of our equipment.\n\nI dove in first and Thorn followed after. We could only swim down several feet when something strange happened. The water rose up out of the pool in a glittering column with us trapped inside of it. A scintillating light engulfed me and I cried out as I fell into yet another pool. This one was quite warm and soothing. Thorn came up sputtering but unharmed. It was a hot spring and there to greet us two hooded acolytes of Anackire. They dried us off and offered us robes of our own. One of the priestesses touched a finger to her lips for our silence before leading us into the sanctum of the goddess. The cavernous chamber was so large I couldn't see the roof and even our bare feet sent echoes announcing our presence. The two acolytes took Thorn to the side of the chamber as the scene unfolded.\n\n\"You are called Shadow Oak,\" the disembodied voice whispered.\n\n\"I am,\" I said.\n\n\"You are a bold one,\" the voice replied. \"No male has attempted entering my service for a thousand years. I wonder what it is you hope to gain.\"\n\n\"You are the goddess of chaos and magic. I thought that would be obvious.\"\n\n\"Speak plainly to me,\" she purred in my ear.\n\n\"I want... to please you. I want power as well.\"\n\n\"Clever Cat,\" she said as the sound of running water began. \"You choose your words with wisdom. You wisely put my needs ahead of your own.\"\n\n\"As it should be,\" I said as fog rolled out from the center of the chamber and the sound of water became louder now. \"How can I endear myself Anackire?\"\n\n\"Bold Cat,\" she hissed. \"You speak my name in my house. So what does Anackire desire?\"\n\nThe fog thinned and a wall of crystal could be seen. It was thick enough to obscure details but thin enough to reveal the very feminine figure behind it. I could see as she pressed her breasts against the crystal and they flattened revealing her dark nipples and areoles. She moved, no she danced away from the wall and vanished. Once more she pressed her body against the crystal but this time it was her very firm very round bottom. What a tease I thought to myself. The wall split in half and I saw the waterfall beyond and from its roaring waters came the goddess incarnate. My jaw dropped open seeing her perfection made manifest. Her features changed as she moved. One moment she was elven, another she was orc and another human. Her skin and body took on those characteristics as well but always mixed and matched. She sported a cat folk tail now with the ebony skin of the dark elves. She was completely mercurial but always female. \n\n\"I am Anackire,\" she said her voice booming in the chamber. \"I am Chaos.\"\n\nI caught movement in the corner of my vision as the acolytes and Thorn dropped to their knees. I stood there enraptured by her seemingly endless beauty. I was riveted to the spot as aroused as I had ever been. My erections were painful from the hunger to touch her. She danced and as she danced she seemed to grow limbs, arms specifically. It was like a Hindu goddess dancing for me and me alone. I tried to count her arms to take my mind off of her body but failed completely. Nine, she had nine arms now and each hand was making a different gesture. Was that her secret? Were the gestures the key to her power and her magic?\n\n\"I am Anackire,\" she purred as she moved behind me. \"I am Power Incarnate.\"\n\nI found that I could move again. My hunger had reached its limit and could no longer be denied. If she was going to burn me to ash then let me earn her ire by touching her. I spun around and her back was to me. I stepped up and slid my arm around her waist. I pulled her to me. I took in her scent and dared to kiss her long elegant neck.\n\n\"Burn me goddess but my desire for you can't be denied,\" I growled as my erection slid beneath her divine sex. \"I cannot do otherwise but love you.\"\n\n\"Then be burned Shadow Oak,\" she moaned. \"Kiss my lips and face the wrath of heaven.\"\n\nI took her in my arms and turned her to face me. I looked into her ever-changing eyes and then leaned close and let our lips touch. She was warm as any woman but the contact was electric. I gasped as I felt her power enter me. I closed my eyes and our kiss deepened. I did love her. My whole being felt a connection. If I were to die at this moment I would be at peace. She pressed her body to me and more of her power flowed into me. I imagined my health bar turning white and burning out. She broke our kiss to ask me one last time.\n\n\"Would you turn back,\" Anackire growled in my ear. \"Would you deny me anything?\"\n\n\"I belong to you,\" I said.\n\n\"I accept your sacrifice,\" she whispered as she hopped up and impaled herself on my erections. \"YESSS!\"\n\nI cried out as the pleasure gripped me. I took her hips in my grasp and began to lift and drop her. She was goddess no more just a woman that I would make howl for me. I wanted only to hear her cries of release as she climaxed for me. I stabbed my hips upward as I lowered her down. While I appeared to be in control I quickly learned that she could keep me on the edge of bliss indefinitely and never let me climax. I didn't care. I kept making love to her even as my body shook at being so close and yet denied. The chamber shook when her first orgasm struck. I could die happy now. But she wasn't done.\n\n\"Down Shadow Oak,\" she moaned. \"Take me from behind... Take me like a whore...\"\n\nI bent my knees and her feet touched the floor. We disengaged but only for a short time. Soon she was bent over at the waist facing away from me. I slid back into her and did as she commanded. I fucked her like a whore. I dared to grab her ethereal mane and slam my cocks into her over and over again. I was in perfect agony as my body remained in that perpetual moment just before release. Anackire slammed her hips back against me and drove me as deep as I could go. I reached with my free hand and mauled her breast. I cupped it and squeezed it and even dared to give her nipple a savage twist for good measure. I knew I was going to perish so I wanted to do it all. Her second climax was so great she nearly pushed me out as her pussy and ass clenched around me.\n\n\"Take me like a lover... a wife...\" she commanded.\n\nI stopped and eased out of her. We lay on the temple floor with her beneath me. I gently slid back into her and kissed her as we made love. I kissed my way down her neck to her breasts and loved them as I drove my cocks into her in a nice slow pace. There was hurry now. She had come twice for me. I was panting the entire time and soon she was whimpering and crying out.\n\n\"I am going to cum,\" Anackire cried. \"I am so close Shadow... just a little...\"\n\nHer back arched and she came for the third and last time. I was still stuck in limbo. She shoved me onto my back and took my cocks in her hands. She licked the tip of one as she stroked the shaft of another. Soon all nine hands were working on me and two pairs of lips licked and sucked me. My eyes closed as I reached a new level of pleasure and with a howl that echoed everywhere I finally came. The goddess drank from me and I did black out. I opened my eyes and found myself in a massive stone bed. The mattress felt like I was on top of a cloud. The covers were warm and comforting.\n\n\"So this is the afterlife,\" I whispered.\n\n\"Silly Futa,\" Elara said. \"If she wanted you dead, trust me you wouldn't be here with me husband.\"\n\n\"Husband...\" I said trying that word on for size. \"Wife... where are we then?\"\n\n\"In the Sanctum Sanctorum, the holy of holies,\" she purred as she snuggled close. \"I am the high priestess of Anackire. I am the secret maiden. She will at times take over my body when it suits her. She was very pleased with your performance. She has done something she has never done before.\"\n\n\"What is that?\" I asked as Elara kissed my neck.\n\n\"She has granted you the nine hands,\" she purred as her kisses moved lower and lower.\n\n\"UNNNN that tickles,\" I moaned as she suckled one of my nipples. \"What are the nine hands?\"\n\n\"Well,\" she giggled as she took both of my cocks in her hands. \"When you are strong enough she will reveal one of her secrets to you. The gesture allows you to create a magical effect. You are hard already. I am amazed after how draining she can be.\"",
        "\"I am glad she approved of us,\" I purred as Elara's head disappeared beneath the covers. \"Wedding night,\" I whimpered as she sucked me off.\n\n\"MMMMHMMMM,\" she moaned and the love play began in earnest.\n\nNine days and nine nights we barely left the bed. It was part wedding ceremony and also a way of the goddess consecrating her new lover. I never knew when she would manifest but when she did things were amazing. After the ninth night my menu appeared informing me that I had completed the Quest for Anackire and a new quest had begun. It was to be my first official dungeon crawl. Elara, Thorn and I had to clean out the creatures that had invaded the lower part of the temple. I was level six now and had the title of Holy Assassin. I picked my new perk, prehensile tail so that I could enhance my dexterity to the next level. If I was going to clear out the lower levels of the temple I would need every edge I could muster. I was about to get up and prepare for the dungeon crawl but Elara rolled on top of me and laid her hand on my stomach. When I looked up I saw that it was the goddess, Anakire, looking down at me.\n\n\"It is time to learn the first sign. You have pleased me much over the last nine days. Watch, learn and remember as I instruct you.\"\n\nShe brought one of her nine hands forward and she made a gesture. She brought her thumb up so that it touched her middle and ring finger, her index and pinkie were extended outward. The goddess left her and Elara fell into a swoon. It was always a drain taking on that mantle. I let her sleep so she could recuperate. I left our bed and went to the temple pools to take a nice long bath. As I walked down the steps I stopped and looked behind me. I was sporting a long white tail with black stripes. I wiggled it and it felt so weird. Just like my breasts it was going to take some getting used to. I was greeted by the priestesses who took care of the day to day running of the temple and its secretive acolytes. One of them saw my new tail and clapped her hands together.\n\n\"Congratulations Shadow, you are now a true cat folk. How can I be of service to you?\"\n\n\"Are the pools free? I'd love to take a nice long bath.\"\n\n\"Yes, one of the hot springs is free. Do you need anyone to wash your back for you? This is one of my free hours.\"\n\n\"Um... if you want...\" I replied. \"I would be grateful.\"\n\n\"NO... I mean you are the champion of the Nine Fold Lady. It is my honor to help any way I can.\"\n\nShe led me to the pools. I watched the dark elf's ass wiggle as she walked ahead of me. My stamina was nearly at heroic proportions thanks to Elara and her family. That meant that my libido was also on a par with much higher characters. I sat next to the free pool on a stool of white marble. The dark skinned priestess, Anariel by name, produced a bucket of hot water, soap and a soft brush. She dumped the hot water over me four times. Once I was wet she lathered up the brush and went to work. She lifted up my limbs and scrubbed them clean. She was humming an airy tune as she worked. Anariel skipped the brush and used her breasts to wash my back.\n\n\"How is that Shadow? Do you like my breasts?\"\n\n\"I didn't realize I deserved such treatment. I am truly blessed.\"\n\n\"Indeed,\" she giggled as she stared as my dual erections. \"Blessed like no one I've ever seen.\"\n\n\"Do you have time to share my bath?\"\n\nAnariel tore off her robes and leapt into the pool. I used her bucket to rinse off the soap before I joined her in the pool. I pulled the dark elf to me and she surrendered to my hunger. I ran my hands over her ebony skin and noticed her silvery-white pubic hair. I guess the carpet did match the drapes. The priestess kissed me and clung close. Our breasts rubbed against each other and that was another thing I hadn't acclimated to. The tiny jolts of pleasure as our nipples ground together lit me up and had me painfully hard. I whispered in her ear and she nodded. I lifted her up and placed her ass on the edge of the pool. I had developed a technique for guiding my twin cocks into their respective destinations. The dark elf's back arched as I slid into her. Suddenly I had an audience as the other bathers turned their attention to us. One of them was a familiar she-orc I had saved in the forest above. She watched intently as I began making love to the priestess. I never got tired of making new friends. She begged me to go faster and I granted her wish.\n\n\"Champion... um Champion... are you fucking my acolyte?\"\n\n\"Um... as a matter of fact I am,\" I said before looking up. \"Oh hell... you are a cat folk too. I am sorry... I mean... she said it was her hour off.\"\n\n\"Well I suppose it is but there are rules here Champion. You must follow the chain of command.\"\n\n\"I'm not sure I understand,\" I said as she began to remove her robe.\n\n\"It means, you fuck me before you fuck my underling. Now make her cum and take responsibility for your actions.\"\n\nThe cat folk moved behind me and pressed her tits against my back. She watched my cocks slide in and out of her underling. She moaned in my ear even as the dark elf's body began to shake. I built up speed and as her meter flashed I slammed my cocks home sending her over the edge.\n\n\"Wait... you have orgasm meters?\"\n\n\"Only heroes of high enough level can see those. Congratulations hero you have earned two achievements.\"\n\n\"I'll be damned,\" I said as the two icons hovered over the dark elf's head. \"I earned Yin and Yang as well as Tapping into the Power. What does that even mean?\"\n\n\"Yin and Yang means you have bedded a light and dark elf. If you sleep with one of each at the same time you get the epic level achievement the Tao of Elf.\" The cat folk explained as I eased out of the elf. \"Tapping into the Power means you have slept with one of Anackire's priestesses. Once you please me you can earn the next level of that achievement Tapping into Chaos.\"\n\nI told the dark elf to stay close. I was eager to earn that epic achievement. Being Champion had interesting perks. I'd never been with another cat folk before. This time I took my time and explored every inch of her body. The dark elf gave me hints and I discovered licking the priestess's asshole pushed her hunger into overdrive. I teased her until she was begging me to finish her off. I finally agreed and she bent over the edge of the pool. I stood behind her, grabbed her tail and slid into her. Apparently grabbing a cat folk's tail is akin to proposing marriage. Luckily I was already married. I moved slowly and she popped her claws and threatened to disembowel me if I didn't move faster.\n\n\"You are used to getting your own way aren't you?\" I asked and she nodded. \"Fine, take this... and this...\"\n\nSoon she was howling as her meter reached its critical stage. I was on the edge so I tried to sync our meters for a mutual climax. My familiar walked me through it on the fly. Once we established the right rhythm she belonged to me. I hammered her hard and eyed her meter critically. She screamed as she climaxed and I was a heartbeat behind her. Our audience clapped as I claimed my achievements. One was Tapping into Chaos while the other was Your Own Kind. I was racking up achievements left and right. This was awesome! As I rested I pulled up my menu and looked at my achievements and how many I had to capture. Jeez there must be two hundred, I had a long way to go. I drifted to the middle of the pool and relaxed. I could finally enjoy my bath not that fucking the two priestesses wasn't a blast. \n\n\"Nice show you put on Shadow,\" the she-orc said as she slipped into my pool. \"Don't worry I just want to talk. You got a ton of achievements in no time at all. Do you mind comparing?\"\n\n\"Nah,\" I said pulling up my achievement screen as she did the same.\n\n\"You got the triplet trifecta... no way... how the hell did you manage that?\"\n\n\"Identical she-elves... well now they are my stepdaughters. Mom is the high priestess here. What the heck is four for the score?\"\n\n\"Now that story requires food, drink and plenty of elbow room.\" She said and I laughed.\n\n\"It can wait until after my bath I suppose. Oh hey one of your thingies is flashing.\"\n\n\"Sweet... can I ask a favor?\" She asked licking her lips. \"Can I suck you off twice... I mean you know.\"\n\n\"Well you'll owe me one,\" I said and she nodded eagerly. \"After... what is the next meal?\"\n\n\"Lunch...\"\n\nWe got out and shared a meal together. As I ate she regaled me with her story about her favorite achievement so far. She was wandering in a nearby dessert and was ambushed by four serpent men. They had her tied up and gagged in no time at all. I saw the expression she made when she remembered it. She bit her lip and then continued. The snakes took her to a hidden pyramid. There she was stripped, whipped and tied to a sacrificial altar. One of the serpent men was the acting high priest and was about the cut her heart out of her body. She did the only she could. \n\n\"I made them an offer they couldn't refuse. I became their willing sex slave. The key word in that was willing.\"\n\nThey were so excited they all ganged up on her at the same time. I laughed as she finished with wearing them out and sneaking away leaving them sleeping in the pyramid. She opened her inventory and produced a huge ruby. It was her reward she had borrowed from the pyramid on her way out. I laughed again and then I saw her expression change. She frowned and fought back the tears. She opened a new window and a few moments later a window popped up in front of me. It read, 'will you be my heir'. I accepted and sadness welled up in me. I took her into my arms and held her as we cried. I had been having such a good time I forgot we were dying. I stroked her hair and after a while she was able to calm down. \n\n\"What can I do?\" I asked my voice almost breaking.\n\n\"I've never done a dungeon crawl... but I...\" she began but I cut her off and pulled up the details on the temple quest.\n\n\"We need three more to have any chance of surviving. I got this.\"\n\nI sent a message to my entire harem minus Elara since she was resting. I needed them now. The air filled with flashes as the appeared singly and in small groups. The number arriving clearly outnumbered who should have arrived by a factor of three. They were fully armed and ready for a fight. I swallowed hard as Elara strode down the steps holding her staff of office and wearing her chromatic robes. The assembled group dropped to one knee.\n\n\"Our Champion has called for arms to aid him. Who among you will brave the terrors beneath?\"\n\n\"We serve the Champion, the Champion serves the Lady and the Lady is the Goddess!\" They all chanted.\n\n\"Why have you called them Champion?\" Elara said her eyes brimming with pride.\n\n\"I need you to fulfill a dying heroes last request. I need you to make this happen for her not for me. Will you follow her banner so we may cleanse the taint from our temple?\"\n\n\"We shall,\" they replied in one voice.\n\n\"The Goddess approves Champion. Show no mercy and spare none from your ire.\" Elara said as she smote the floor with the butt of her staff.\n\nI hate teleportation. Thorn and I armored up. When I checked my inventory I had new armor to try on. It was called chaos armor and was a lot better than the leather I had begun with. I enabled that as well as something called an umbra blade. I closed my inventory and chuckled when I saw my new armor. My entire form was wrapped in a swirling mass of darkness. Thorn was wearing shimmering chainmail, a heavy helm and sporting a wicked curved blade. I scouted ahead and it wasn't long before I found a large group of female ogres. I was glad for the backup. I pulled up my info screen and read up on ogres. They are family orientated and organized into clans. The males are responsible for finding and conquering caves and other places to live. It is the female's role to protect those dwellings. The key to defeating a group of ogres, which is called a snatch of ogres, is to challenge and defeat the alpha. \n\nArmed with this information I decided to observe and see who was giving the orders. I spotted her quickly enough. She was the tallest of the lot and sporting a navy blue Mohawk. I asked my familiar what would happen if I managed to get a back stab on the leader. She replied that the entire tribe would be at my beck and call. I smiled and returned to the group. I told them what was ahead and my plan. Thorn thought it was a great idea and so the others set up camp as well as look outs so that nothing snuck in while I was gone. I returned to my perch and waited. My tail swished and wagged as I patiently waited out the ogres to go to sleep. Her ass is mine I thought as they settled down for a meal. The lead ogress was called Iron Tits. She wasn't unattractive as far as monsters go. She was close to nine feet and was generously gifted in the tits and ass department. Her skin was the color of dark jade and her eyes glowed a bright green. They ate their meal as they exchanged stories of conquest and love play.\n\n\"I miss them,\" one of the younger ogresses said.\n\n\"You miss his cock,\" Iron Tits remarked. \"So, do I daughter.\"\n\nDaughter... did she just say daughter? Ooh I could get lucky and bag both of these wenches! I felt my cocks harden at the thought of nailing them at the same time. But first I had to get a back stab on Iron Tits. They began to yawn and I noticed the razor sharp teeth these bitches were sporting. To my utter surprise they didn't set up any guards. They just undressed, climbed into their make shift huts and went to sleep. What the hell was going on? Why were they being so lazy? Maybe it was because this was their cave. No one in their right mind would attack a cave full of twenty ogresses in it, no one but me that is. Once I was sure the camp was asleep I made my move. I pulled up the hood of my cloak and made my way to the leader's hut. I went slow and stayed close to the ground. I reached the entrance without being seen and heard lewd sounds coming from within.\n\n\"Oh god Iron Wood I miss you so much,\" Iron Tits moaned as she touched herself.\n\nI snuck inside and saw the green skinned giant on her back and fingering her pussy like mad. She had her knees pulled up and off to the side. She was completely vulnerable. I watched and waited. Once she climaxed she would be open for my back stab. Her hands would fall to the side and when she caught her breath I would strike. Come on bitch, I thought urging her on. Come for me you filthy little slut. The ogress rolled onto her side and then onto her knees. She was rocking her body now as her climax crashed down on her. She cried out and I could hear the others chuckle. I crept up right behind her. Her body was still shaking when her hands dropped away. My cocks were out and eager for action. I lined them up without actually touching her and then thrust as hard as I could. A slivery icon appeared above Iron Tits head indicating I had received a critical strike. She yelped in surprise as her pussy and ass were filled at the same time.\n\n\"Who dares... UNNNN... oh god... so damn big... so thick...\" she grunted as I moved my hips. \"Fuck me... oh by the Great Horned One fuck me...\"\n\nI grabbed her ass cheeks and hammered her in nice long strokes. It was only that we were intimate that I saw her stamina bar. Oh shit I never thought about that. She had more stamina than I did. Oh crap this could go sideways real quick. \n\n\"The sign,\" whispered Anackire. \"Use my sign.\"\n\n\"Here goes nothing,\" I said and made the cryptic gesture. I watched in astonishment as a shadowy cock took form and began fucking Iron Tits' mouth.\n\n\"MMMMM...\" she whimpered as the shadow cock went deeper and deeper until she was deep-throating it.\n\nI took it nice and slow. I watched her stamina bar drop. I laughed when I realized this was a kind of boss battle. I was going to make this bitch mine. I thrust harder but maintained the same pace. Her stamina dropped faster now. I alternated my speed, force and depth. I grinned when her bar was half way empty and I was still at two thirds. Iron Tits began squeezing her pussy muscles around me and I gritted my teeth as my bar dropped a bit faster now. I was able to sync our orgasm meters now and we were in for the final stretch. Both of our stamina bars were dropping lower but she was going to bottom out before I did. I heard someone moving outside and looked over my shoulder as Iron Tits' daughter stepped inside.\n\n\"Mother I... who are you... what are you?\"\n\n\"I am a demon sent by the Great One,\" I said off the top of my head. \"I have come for your mother and you little ogress.\"\n\n\"I'm not little,\" she growled in challenge as she tore off her fur top and leather skirt. \"See, I am a full grown ogress demon spawn.\"\n\n\"A virgin no doubt,\" I said as I continued to fuck her mother. \"Stand over there so I can pleasure your mother and see you at the same time.\"\n\n\"Yes demon,\" the girl said and moved to the back of the hut. \"You have two... she is always so lucky.\"\n\n\"Sit in the chair girl, yes like that, now place a leg over each arm of the chair. Oh yes that will do nicely.\"\n\n\"I feel so exposed,\" she said but did as she was told. \"You want me to touch myself don't you? Are all demons so perverted? You have to fuck my mother while you watch me diddle myself.\"\n\n\"Since you offered so kindly be a dear and masturbate for me.\" I moaned as I got close to my orgasm.\n\n\"Very well, I've never had an audience before,\" she moaned as she went to work. \"Look demon I am so wet already. Are you going to fuck me too?\"\n\n\"Once I get dear old mom off you're next.\"\n\nI looked at Iron Tits' stamina and she was nearly done. I picked up speed and our orgasm meters began flashing in time with one another. Iron Tits was rocking her hips now. She was thrusting back to meet my hips. The meters turned white and I shot my load into the ogress. She howled as she came forcing the shadow cock to disappear. She knelt there before me defeated. Instead of disappearing in a shower of pixels my menu opened. Did I wish to add her to my harem? Hell yes, I accepted and now had a hoard of ogresses to command. I pulled out of Iron Tits and knelt there recuperating. Meanwhile the daughter was crying out as her orgasm built and built. My stamina meter filled up faster than ever. I had bagged a boss and then I thought about it. Why would I need a troop of ogresses? There must be something damn powerful down here. I stood up, hopped up onto the arms of the chair and ordered the daughter to lick me clean. She wasn't very skilled but she made up for it with enthusiasm.\n\n\"Are you ready for a pounding little one,\" I asked and she nodded vigorously. \"Good, now I am going to stand in front of your chair and you are going to scoot until that fine ass of yours is right on the edge.\"\n\n\"Yes demon,\" she said licking her lips. \"I've never been... I mean... oh just fuck me already.\"\n\nI hopped down and she was in position. Iron Tits was just recovering when she saw me slide into her daughter's holes. I was balls deep when the achievement award popped up, green day. As I began moving Iron Tits actually moved next to her daughter so she could watch and encourage her. I moved nice and slow since it was her first time with a quote demon. Mom's eyes were locked on my cocks and she shivered remembering how they had felt inside of her.\n\n\"So lucky,\" Iron Tits murmured to her child. \"Demons are notoriously fickle when it comes to who they bed. Count yourself blessed Jasmine, we both have finally shared something.\"\n\nJasmine was too far gone to respond. Her eyes were closed and she was grunting as her orgasm bar flashed. She was ready to cum already that was fast. The bar suddenly split in two and they both turned white at the same time. Jasmine had just experienced a multiple orgasm. She earned her own achievement, double your fun. I pulled out of Jasmine and started giving out orders even as I added her to my collection. I was ready to blow my load and nothing would be better than shooting a load in both of them. I had mom on her back with her little girl laying on top of her. I knelt between them and eased a cock into each of their slits. They both gasped as I began to move. I noticed that Iron Tits' stamina bar was much lower now. I hoped that didn't interfere with her fighting skills. ",
        "\"When a boss is bested her stamina bar is lowered to allow for easier play time,\" my familiar whispered in my ear as I fucked mother and daughter. \"If you all three climax at the same time you'll get a reward.\"\n\n\"Consider it done,\" I moaned as I slowed down and paced myself.\n\nI wanted that reward. I watched all three of our bars and with a hard drive of my hips synced us up. Now it was just a matter of time. I built up speed slowly but soon we were all crying out as a massive orgasm loomed over us. I pounded them as hard as I could and a moment later the hut lit up as all three orgasm meters blazed white hot. I leaned against Jasmine's ass as I recuperated.\n\n\"I am conquered,\" Iron Tits moaned.\n\n\"I am bested,\" Jasmine whimpered.\n\n\"The curse is broken,\" the Goddess whispered in my ear. \"You have restored them to me my Champion.\"\n\nThere was another blast of light and the ogresses were gone and in their place two surface elves. I got to my feet and walked outside. The other women were stepping out of their huts and were restored to their original states. It was an equal smattering of all the races. I didn't miss the fact that they all wore the robes of Anackire. Mother and daughter joined the others and rejoiced that the curse had been broken. I wonder what the hell happened to bring this about in the first place. It was Ulaniel, formerly Iron Tits, that explained the events surrounding the curse.\n\n\"It was my daughter's fault. She stole a sacred text from the library. In her desire to learn the arts of shadow she crossed a line. The high priestess and the temple guards showed up to arrest her. It was the fear of her punishment that caused the schism in our sisterhood. Those loyal to me took sides and we were all punished for it. As a reminder of our sin Jasmine was allowed to keep the tome.\"\n\nJasmine held out the iron girded book. It pulsed with energy and I took it from her. My intentions were to return the book but that was not to be. My wife and the others arrived to see me accepting the book. As I started to hand it to her the goddess took over. I saw the change in her features as well as her demeanor. I lowered my head but I felt her hand on my chin as she lifted it up and kissed me. The collective of priestesses gasped in surprise. Such open signs of affection were unheard of. I waited for the goddess to break the kiss because I sure as hell wasn't. It seemed to last forever but she did relent and end it. I was panting and rock hard. No mortal woman could ever affect me like that.\n\n\"We are very pleased Champion. I do not rule Chaos alone and my brethren are well disposed by your actions. You have broken my curse and restored the sisterhood. Now you must pass judgment upon Jasmine. What shall it be?\"\n\n\"What sort of punishment are we talking about?\"\n\n\"We are of Chaos and so her sin must be atoned in some random fashion. So what say you Shadow? What will become of her?\"\n\n\"Well if it were me,\" I said and then whispered in Anackire's lovely ear.\n\n\"Truly you are a worthy Champion. I will now pass down your wisdom upon her.\"\n\nThere was no flash, no rolling thunder, it was a moment before anyone noticed the change. Jasmine was no longer a surface elf she had been transformed into a cat folk. Her features were recognizable but the rest was altered to fit her new race, even the tail. We watched as she lifted up her hands and realized what had happened. I was surprised when she laughed and hugged me tight. I was confused but my wife explained all.\n\n\"Her original punishment was death. That is why the sisters rebelled. They didn't wish to see one so young perish for an impulsive action. You spared her life. She belongs to you now, here is her collar. The book also is yours to read and master the arts of Umbramancy, shadow magic. Well done husband, you make me so proud.\"\n\n\"I... slave...\" I muttered as I examined the collar.\n\n\"Please Master,\" Jasmine said as she fell to her knees. \"Do not cast me out... I will serve you well and most agreeably. My body belongs to you now.\"\n\n\"As the goddess demands,\" I said as I placed the collar around her neck. It sealed with an audible 'click'. Jasmine dropped to her knees and brushed her head against my hand. I instinctively scratched her behind the ear. \"Well this is a surprise. So I can learn shadow magic now well that will have to wait until we clear this place out. All of you are needed I believe so prepare yourselves while I scout out ahead and get my head back in the game.\"\n\nI wasn't really comfortable about owning someone. I moved alone until I realized that Jasmine was following silently behind me. She was serious about serving me. We crept forward and found the next large cave devoid of life that didn't mean it was empty. The floor of the cave was littered with dead bodies. They were a huge blend of goblins, ogres and kobolds. I guess they numbered nearly a hundred all told. I had played enough games that this smelled of a trap. We went back and found the only other way blocked by some kind of mystical barrier. So the only way forward was the cave of corpses. We returned and I told the others what we had found.\n\n\"I agree husband it is mostly likely a trap. What do we do?\"\n\n\"We trigger it once we are ready,\" I said. \"I think I have a plan.\"\n\nOnce the spell slingers and I had hammered out details we were ready to take on the hoard. I led the priestesses into battle. The trap was triggered by one of the younger less experienced clerics. She cried out in surprise when one of the kobolds grabbed her by the ankle. I was in full combat mode. The rest of the hoard rose up moments later. The mages in our crew waited for my signal. I picked out the biggest meanest son of a bitch and struck. The ogre towered over me and was armed with an oversized meat cleaver. He was slow but then so were most tanks. I took a run at him and he turned to face me. I sprinted at him and at the last second dove between his legs and used the umbral blade to slice off his junk. His howl of pain was the signal. \n\nThe blast of magical energy lashed out from the perimeter towards the center. The effect was instantaneous and a little comical. The spell that the mages cast in concert caused premature ejaculation on any male in the cave and that included me. The floor of the cave was a mess but it eliminated all the low level threats instantly. If someone's stamina drops to zero in a hostile environment they are effectively dead. The firework like display of exploding kobolds and goblins was beautiful in a way. That left only the twelve ogres. While they were diminished it wasn't a substantial blow to them. My stamina regenerated at a frightening speed and I was soon back on my feet. I was in the middle of the ogre pack in what could be called a target rich environment. Jasmine was close but per my orders was playing strictly defensively. \n\nThorn appeared with a bloody blade in her grasp and was a whirling dervish of pain and death. The ogres were soon bunched up between the clerics on one side and the mages on the other. A high pitched whistled sounded the second magical salvo but this one was a directed elemental attack, specifically fire. The barrage of fiery spheres hit the ogres and turned them to ash. The battle was over very quickly. While the girls rejoiced I began looking around for the other shoe to drop. Jasmine cried out when she saw the thing detach itself from the ceiling.\n\n\"DRAGON!\"\n\n\"I knew this was going too easy. Formation Gemini,\" I screamed as the thing stretched out its wings and launched itself into the air. \"A dragon as a boss... this is a little over kill isn't it?\"\n\n\"The treasure must be worth it,\" Thorn said as she tightened her grip on her weapon.\n\n\"It's all yours sweetie,\" I told her and a single tear slid down her cheek.\n\n\"Just have to live long enough to reach it.\"\n\nI wondered at that moment if she meant her character or her personally that made this battle all the more important. We had to take down the dragon and quickly. I felt like that was unlikely to happen. It was Elara and her clerics that stepped up to the plate. They began chanting a spell together and by the time the dragon had banked and was ready to burn us to a crisp with its breath weapon the spell hit it. She tumbled out of the sky and struck the ground not ten feet from me. The spell had forced the dragon into a humanoid form. That didn't make her any less lethal just manageable. Jasmine saved me from certain death. She used her knowledge of the shadow magic and cast a sphere of darkness. It encompassed the dragon and me in an instant. While her stamina was off the charts a critical back stab could reduce her stamina and control enough to tip the balance. One of the perks of being a chaos champion is the ability to see in the dark. The dragon still had a whole array of other senses to alert her to my position. So I had to move quickly and decisively if I was to surprise the bitch. I moved in a slow spiral towards her but she was already tracking me. To my surprise Jasmine conjured shadow images of me and that did throw off the dragon. She was looking all around her now as she was slowly surrounded. \n\n\"You can't face me one on one and live,\" the dragon roared. \"I am too much for an army how do you expect to live.\"\n\nI could make out her features now. She was quite lovely with her sapphire skin and snow white hair. She had an amazing figure and legs that went all the way up to an equally stupendous ass. She was right I couldn't take her on alone but that wasn't my plan. The crucial moment was reached. I stood face to face with the most powerful opponent I would likely ever encounter and I smiled. We were close enough for her to see my expression. She panicked and spun around. She lashed out at the shadow image dispersing it while I struck. A brilliant sphere of light shone over the dragon's head indicating a critical hit. She was impaled on both of my cocks as I lifted her off her feet and took control.\n\n\"Foul Futa, thou has sealed thy fate,\" she moaned as I began fucking her. \"Rape is beneath thee.\"\n\n\"Nope,\" I growled as she clenched her internal muscles. \"I will do whatever it takes for my friend to end you.\"\n\n\"UNNNN... you will fail,\" the dragon chided. \"I am immortal... I am unbreakable... UNNNN so thick...\"\n\nI watched my stamina bar drop like a rock. But my wife and her clerics were there to sustain me. They chanted spells to replenish my stamina as I raped the dragon. It was a battle of wills. Thorn waited for the moment when the dragon would be vulnerable to her blade. The darkness fell away and there I was standing there in front of everyone with the dragon skewered on my cocks. The mages fired off the occasional spell that dropped the dragon's stamina noticeably.\n\n\"Damn mages,\" the dragon grunted. \"If they make me anymore sensitive I am going to explode. I know just the thing.\"\n\n\"I don't think so bitch,\" I growled as I made the sign that Anackire had taught me. \"Suck on this.\"\n\nThe shadow cock slid between her lips and kept her from whatever she was about to do. That sent her into a rage as she squeezed me even tighter than before. Thorn watched the dragon's stamina closely. When it reached the middle of the yellow spectrum it would be weak enough for a sword strike. I accessed the dragon's orgasm meter and she was close. I wonder if it were enough to drop her down into the yellow. I took a gamble and synced with her and decided to sacrifice myself so that Thorn could have her moment in the sun even if I wasn't there to see it. I threw caution to the wind and began hammering away at the dragon for all I was worth. The energy in the room suddenly changed and I felt the presence of the goddess. I smiled at her as I continued to wear down the dragon.\n\n\"Stop... you can't... UNNNN I can't think straight... damn you... I can't end like this!\"\n\n\"For what it's worth you are the second most intense partner I have ever had.\"\n\n\"Second... only second...\" she growled struggling against me uselessly. \"Who was the first?\"\n\n\"Her,\" I said looking at Anackire.\n\nThe dragon was transfixed by the gaze of the goddess. She stopped struggling and moments later my cum splashed her insides and her own climax was triggered. The shadow magic failed around her mouth and her roar echoed off the walls of the cave. The dragon stood erect with her head aimed at the ceiling. Thorn struck from the shadows and her blade decapitated the beast. She shattered into a million pixels and showered us with scintillating shards. We as a team had defeated a freaking dragon! I watched the experience point counter spin down to zero as everyone got their allotment of rewards. \n\n\"Congratulations hero you have reached tenth level!\" A disembodied voice spoke from the heavens.\n\nI checked my inventory and found a new set of dragon scale armor. Thorn had earned a dragon slaying sword. Now that I was tenth level I could use a second chaos mark. The goddess revealed her secrets to me and showed me doppelganger. It allowed me to create a perfect copy of myself in all respects. The copy would follow any order without question. She told me that the I could create up to three of them at much higher levels. I turned to share this with Thorn but she had collapsed onto the floor of the cave. I dropped down and took her into my arms. She smiled up at me as the life slowly left her. I could see that she had so much to say but there was no time. I kissed her and she kissed back until she sent her last breath into my mouth. I felt her body fade into nothingness. I blinked back the tears and saw the stone beneath me bore her name and the title of heroine. A sudden sense of mortality struck me and I found of all people the goddess Anackire holding me as I wept.\n\n\"I got you... It's going to be okay Trevor...\"\n\nShe used my actual name. Suddenly the concept of goddess and her true identity made perfect sense. It was Kat and she had been popping into the game. It made sense that she takes on the mantle of a goddess. She kissed away my tears and we sat on that cold stone floor in a simple but tender embrace. I got my emotions under control eventually. The collective sisterhood helped me to my feet and we returned triumphant to the temple above. There was singing and dancing and a dedication of the slaying of the dragon to Thorn. She would be a legend for those that came after us. I wondered about the astronauts and their long cold sleep between worlds. How would they react to our adventures and our stories? How many plaques like this would decorate these virtual worlds? I guess most of all I was curious what my memorial would say, foul futa or maybe champion of chaos or perhaps some title yet unearned. \n\nMy name is Trevor Kent and I am dying. I am more determined now than ever to leave a mark that will outlast me and burn as bright as the stars in the heavens."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "nonhuman",
        "anal",
        "role playing",
        "harem",
        "fantasy"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/sex-dungeon"
}