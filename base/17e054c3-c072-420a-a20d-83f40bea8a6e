{
    "title": "A D.Va, the Faire & a Waffle Ch. 02",
    "pages": [
        "Thank you for stopping by and checking out my story. It's the second story in this series. \n\nThe game Overwatch figures into this tale, and although I usually try to avoid pinning my stories down to a specific time, this particular story is set around September to December 2017, and by the time it got published, some of the characters, abilities and powers have already changed, but the meta is correct for the period in which this takes place. \n\nPlease remember to vote and send me a message or leave a comment! \n\n************************ \n\n\"So what do you do when you're not on the road?\" Tempest asked casually before screaming into the headset, \"Holy fucking shit, Hanzo! What the fuck are you doing? Someone call Bryan and tell him to get his ass into the game so we don't have to pick up a rando for our sixth!\" \n\nOf course, the other member of their group wasn't in the voice chat, even though they were playing at a level when most of the players used a headset. Thanks to the girls, Max was now a mid-to-high gold rank, although he readily admitted to being carried most of the time. \n\n\"He and Emily were going to the PostSecret show tonight,\" Terra reminded her sister in her usual calm voice. \"Their Roadhog and Soldier are taking the point.\" \n\n\"Well, fuck!\" Tempest swore. \"They've been pretty serious lately.\" \n\n\"Only for the last three years,\" Serafina snorted. \"I've got my ult.\" \n\n\"Me, too,\" Terra added. \n\n\"Get 'em!\" \n\nMax's headphones began to squawk. \n\n\"Fire at will!\" \n\n\"Activating self-destruct sequence!\" \n\nAngry yelling in Japanese. \n\nWith the other team wiped out and relegated to the spawn room, Max and the sisters (plus the Hanzo freeloader) waited for the timer to count down before it declared them the winner on the Volskya map. \n\nThe cards came up showing Serafina (as Zarya), Terra (as D.Va), Brooke (as Mercy) and the other team's Tracer. Four people voted for Tracer. Five people voted for Mercy and her four person rez, which also happened to be the Play of the Game. Hanzo dropped out of the game before it got to the XP screen. \n\n\"I'm done for tonight,\" Terra announced before breaking out of the group. \"Good night, Max.\" \n\n\"Good night, girls.\" That was the signal for the sisters to leave Tempest and her boyfriend to themselves. \n\nThey two stayed in a group, but didn't drop out of the game so they could use the voice chat. \n\n\"So what are you going to do with yourself for the next three weeks?\" Tempest asked. \n\nMax was back home in Kentucky after his stint in Columbus. \"Update the curriculum. Conference calls about the next patch; all the usual crap.\" \n\n\"Then what?\" \n\n\"I'm not sure. I could go to Buffalo\u2014\" \n\n\"Better now than in February.\" \n\n\"Yeah, no shit.\" Hanging out with the girls did not improve his vocabulary, and he had even learned some extra creative profanity from them. \"They also need a quick refresher course for a school in Tampa for part of November.\" \n\n\"That would be a change.\" \n\n\"Yeah, those are nice, since it's only two weeks at a pop instead of the full four.\" \n\n\"What are you doing the last weekend in October?\" \n\n\"If I don't take the Buffalo job, I'll be here.\" \n\n\"Don't take the Buffalo job,\" Tempest told him. They had been trying to find time in their schedules to get together. For all of her impulsiveness, Tempest made no apologies or excuses about putting school first. As near as Max could tell, she and her sisters were smarter than about 95 percent of the population, and if they wanted, they would probably end up running the world. \n\nBut that meant during the semester, she couldn't do much traveling, especially considering that she had already taken two long weekends for her sister's bachelorette party and their visit to the ren faire. \n\n\"Why not?\" At NC State, she was about an 8 hour drive away, and that made for a long round trip, unless he wanted to fly. \n\n\"Do you have a few minutes to Facetime? \n\n\"Sure.\" \n\n\"Okay. I'll call you in a second.\" Tempest dropped out of the voice chat and logged out of the game. Max did the same. \n\nA few seconds later his iPad buzzed. He pressed \"accept\" for the Facetime video call. Tempest's image popped up on the screen. \n\nHer hair was pulled back into a loose pony tail. She wore a faded t-shirt with what looked like the logo of the Star League on it. \n\n\"Hey, beautiful,\" Max couldn't help himself but smile \n\n\"Hey, handsome.\" Tempest blushed at the compliment. \"Are you busy the weekend before Halloween?\" \n\n\"Not if I don't go to Buffalo.\" \n\n\"Come down to Asheville,\" she said. \"There is no one in North Carolina that takes Halloween as seriously as my family does. It's just ahead of May the Fourth, but after Christmas and Thanksgiving.\" \n\n\"Do you really want to be slumming with a guy like me?\" \n\n\"Max, I let you inside me,\" Tempest giggled. \"Besides, my dad will think you're a step up from the last guy I dated. You can carry on an intelligent conversation and you don't day drink.\" \n\n\"Are you sure?\" \n\n\"I'm pretty sure you don't day drink. My mom told my sisters if you didn't come down, they were to drive up there and kidnap you.\" \n\n\"Your family sounds dangerous.\" \n\n\"Remember that,\" she laughed. \"Brooke started calling you 'Loverboy' and so now everyone wants to see what the fuss is about. And um . . . my sister Gabi is getting married that weekend and I, uh . . . I need a date.\" \n\n\"You what?\" \n\n\"I need a date for her wedding . . . and I, um, don't want to scare you off . . . 'cause this is kind of sudden . . . but I'd like for you to come down and meet my family.\" \n\nIt took Max a second to process what she was asking. \"Talk about trial by fire.\" \n\n\"Think of it this way: All the attention will be on Gabi, so you can fly under the radar.\" Tempest looked genuinely nervous, a far cry from the confident, aggressive woman he first met. \"And, ah . . . my family is already taking bets on whether I can get you to show up or not.\" \n\n\"Who has money on me?\" \n\n\"Brooke and Sera say you're in. Gwen is betting against. Dad says you're fifty-fifty. Mom thinks you're coming. She's already made up a table card for you. No one else has put money down yet.\" \n\n\"I could be cumming.\" \n\n\"We'd both better be cumming, Loverboy . . . Before and after the wedding.\" \n\n\"I'd hate to disappoint your mom.\" \n\n\"Remember that. She runs the house. Oh, and since this is a Halloween-themed wedding, you have to wear a costume. That you didn't buy at a store.\" \n\nIf it weren't 10:30 at night, Max would have texted his boss right there to opt out of the Buffalo job. \n\n\"Okay, I'll be down for Halloween weekend.\" \n\nTempest shifted and made a false start. It seemed to Max that she may have rehearsed what she wanted to say, but suddenly went blank. \"There's something else you need to know . . . about my family. We're not a typical family. You know how I've got six sisters and a brother? Well, I've also got three moms.\" \n\nMax couldn't help it, but his jaw dropped open. \n\n\"Dad and my moms got married . . .um, to each other . . . about twenty years ago. It's not normal, I know, but it's all the family we've known. If you think it's strange, I understand.\" \n\nAt a loss for words, Max took a second to formulate a coherent response. \"It's not regular, but if it's okay for your family, then it's not my place to judge.\" \n\nShe breathed a visible sigh of relief. \n\n\"If you want to come down for the wedding, our house will be a zoo, but you can stay with us . . . I mean, with me.\" \n\n\"Will your parents be okay with that?\" \n\nTempest chuckled nervously. \"Yes, they will be. Our family is pretty open-minded about stuff like that. And they won't let you pay for a hotel.\" \n\n\"Okay,\" was the only word Max could manage to say for a moment. \"Will your dad threaten to kill me or anything?\" \n\n\"Dad? No,\" she snickered. \"He's too laid back to be intimidating like that. The one you have to watch out for is Gabi . . . but it's her wedding day, so she'll be too busy being bridezilla to worry about you. You might get some side-eye from my brother, but he'll like you.\" \n\n\"As long as you want me to be there, I'd be delighted to be your date, my lady.\" \n\n\"I can't wait.\" \n\nThey stared at each other through the screen for a few more moments. \n\n\"I guess I need to let you go. Good night, Tempest.\" \n\n\"Good night, Max.\" \n\nIt seemed like she was about to say something more, but instead she winked and blew him a kiss before reaching for the screen, which went dark. \n\nA couple of minutes later, his phone buzzed. \n\ni'm going to be blind by the time Halloween gets here. xxoo -T. \n\n************* \n\nMax followed the GPS as he got off I-40 at one of the Asheville exits. \n\n\"Hey, Siri. Call Tempest,\" he called out loud. The satellite radio shut off as the Bluetooth took over. \n\n\"Hello?\" \n\n\"Hey, beautiful,\" he said into the overhead microphone. \"I just got off the interstate.\" \n\n\"Okay, good. You're about 10 minutes out.\" \n\n\"Do you need me to pick anything up?\" \n\n\"I don't think so. When you get here, come down the driveway and park on the lawn. You'll see a row of cars off to the right. Just park anywhere you can find space.\" \n\n\"Okay, I will.\" \n\n\"See you in a few.\" \n\nThe connection dropped and he turned into an upscale wooded subdivision in the North Carolina mountains. There were a few twists and turns, but the roads were in good shape. All of the houses were on large lots and set back from the street. It was out of town, but not way out in the boonies. \n\nTheir mailbox was marked with white balloons. He turned in and drove the hundred yards of the driveway. \n\nMax's jaw dropped when he saw the size of Tempest's family's house. It was a brick fa\u00e7ade McMansion, built in the mid 90s back before the housing bubble. A single round turret rose from one corner flying the flags of the United States, the Rebel Alliance and House Stark. He knew there was an addition, and there was also a guest house around the back. \n\nThere were people buzzing around outside, and sure enough, there were cars parked all over the place. Max pulled in next to a minivan with Florida plates on it. \n\nHe got out and was immediately greeted by a friendly chocolate lab that barked excitedly. He stuck his hand out, allowing the dog to sniff and lick his palm. \n\nA teenage girl appeared quickly, following the dog. \"Hershey, come here!\" \n\nThe dog left Max and nuzzled up to the girl, who put a leash on his collar. \n\n\"Sorry about that,\" she apologised. \"He's been cooped up in a car all day.\" \n\n\"I know the feeling.\" \n\n\"I'm Marshalena. I'm Gabi's cousin.\" Throughout the weekend everyone introduced themselves to Max in terms of their relationship to either the bride or the groom. \n\n\"It's nice to meet you. I'm Max.\" He reached out to gently shake her hand. Tempest had briefed him on her family, but they were a large extended clan, and he hadn't even tried to learn all of the cousins's names. \"I'm here with Tempest.\" \n\n\"It's nice to meet you, too.\" \n\nAfter getting a reusable grocery bag out of his trunk, they headed towards the big house, Hershey leading the way and checking everything out. \n\nTempest and two other woman came out to greet them. The three were buxom sandy-blond spitting images of one another. The oldest was clearly their mother; she was fit with laugh lines around her eyes, round hips and a wide smile. The other was the eldest sibling in the family. Her hair was cut into a short military bob, while both Tempest and her mother wore theirs down past their shoulders. \n\n\"Did you have any trouble finding it?\" Tempest asked, giving him a quick hug and kiss. \n\n\"Nope, the GPS found it right away.\" \n\n\"Good. Max this is my mom, Melinda, and my sister Kaylee.\" \n\n\"It's nice to meet you.\" He got friendly hugs from each. \"We've heard so much about you.\" \n\n\"All good things,\" Kaylee assured him with a wink. \n\n\"I see you've met Marsha,\" Melinda said. \"She's the first of about twenty cousins you'll meet this week.\" \n\n\"There will be a quiz on Sunday,\" Marshalena giggled, before taking the dog inside. \n\n\"Do you want the grand tour first?\" \n\n\"Mommy says she wants to meet Max as soon as he gets here.\" Kaylee took Max by his free arm. He looked over at Tempest helplessly. She shrugged, but her eyes danced with laughter. \n\nThey went into the house. People were milling about; parents were towing suitcases, kids were chasing one another, a couple of dogs were getting to know one another. It was barely contained bedlam. But to Max, it also looked like the choreographed dance of a large family that was used to being together. \n\nBrooke and Serafina waved as they passed through. Both were carrying Nerf guns and appeared to be looking for someone. \n\n\"Take it outside!\" Melinda used her \"mom\" voice; it wasn't harsh or scolding, but she meant business. \n\nThey wound their way through the foyer and back to the kitchen. Several people looked curiously at Max, but it seemed like Kaylee was on a mission, and no one stopped to introduce themselves. At least not then. \n\n\"Mommy!\" Kaylee called from the doorway. \n\nA short, dark-haired woman set her knife down on the cutting board and wiped her hands off on a dish towel. She came over to greet Max with a big smile and a hug. \"You must be Max!\" \n\n\"This is our mom, Leah.\" Tempest looked on expectantly, probably judging his reactions to her family. \n\n\"Welcome to our home, Max!,\" Leah stepped back to give him the once-over. \"Go get your Momma, Tempest. And find your dad!\" \n\n\"He and Uncle Geoff went to get more beer.\" Tempest called back as she scampered off, leaving Max with two of her mothers and a sister. \"And some hookers.\" \n\nMax couldn't tell if she was joking or not, but Leah snorted, waving off her daughter's humor. \n\n\"Did you have a good drive up?\" \n\n\"Yes, ma'am, it\u2014\" \n\n\"Oh, stop that!\" Melinda scolded him playfully. \"The only person who gets called 'ma'am' around here is Kaylee, and then only when she's in uniform!\" \n\n\"The quads said he was polite,\" Kaylee reminded her parents. \n\n\"Polite is good,\" Leah gave him a friendly pat on the arm. \"But we're informal around here.\" \n\n\"Is this him?\" a new voice asked. She looked to be a little younger than Melinda and Leah, with long red hair that was pulled back in a loose pony tail. \"Hi, I'm Katie, the other mom.\" \n\n\"It's nice to meet you.\" \n\nLike the others, she gave him a friendly hug. Max could tell the mothers were sizing him up. All three were prime MILF material. Melinda was buxom like her daughter. Katie was lithe, with a firm bubble butt, and Leah was somewhere in between, with a thick rear end, a skinny waist and toned, muscular thighs. All were pretty, and none looked close to fifty, which is how about how old Tempest told them they were. \n\nMax reached into his grocery bag and drew out an offering of goodwill. \"I thought you all might like some Kentucky wine.\" \n\nThere were four bottles, all from a winery near his parents's house; a chardonnay, a zinfandel, a merlot and a cabernet. The women gave him approving smiles. \n\n\"So I understand you met the girls on the way to a ren faire?\" Leah asked conversationally. \"The one up in Dayton?\" \n\n\"Yes, ma\u2014 . . . uh, yes.\" \n\n\"We've been to that one before, right?\" \n\n\"It's been a while, but yes,\" Melinda confirmed. \"You got the trebuchet that shoots marshmallows there.\" \n\nThey made more small talk. Max tried not to stare, or ask probing questions of three women in a plural marriage, but he was mostly playing defense. They weren't intrusive, although he also got the sense that they may run a credit check on him later. \n\n\"Mom, Aunt Pam wants to know where to put her kids.\" Tempest came back into the room, carrying an enormous LARP warhammer and a Nerf Nemesis with a hopper full of foam balls in it. She looked over at Max and shrugged. \"Our cousins thought they could get the drop on us.\" \n\n\"They can go in Gwen's room for the next couple of days. I hope you cleaned their clocks,\" Leah took the battery-operated Nerf blaster from her daughter, and gave Max a wink before heading out the door to the back deck. \"Excuse me.\" \n\n\"Welcome to the madhouse,\" Katie grinned, and picked up the knife and resumed cutting the vegetables Leah had left. \n\n\"So did Tempest give you any jobs this weekend?\" Melinda went to the fridge to help make dinner. \"Kaylee, why don't you get Max something to drink.\" \n\n\"I don't need anything right now, thanks.\" \n\n\"Take it,\" Tempest urged him. \"This is the only visit you get where they'll wait on you hand and foot. Then you're on your own to fend for yourself.\" \n\n\"Then it's your job,\" Kaylee snickered at her younger sister. \"What do you want? Coke, beer, water, milk; whatever you want, we've probably got.\" \n\n\"Um, pop, please. Anything but diet.\" \n\n\"Pop?\" Melinda laughed as Kaylee dug into the fridge for the first small bottle of cola she could fine, which happened to be Pepsi. \"We don't hear that much around here. We'll break you of your Kentucky slang soon enough.\" \n\nMax chuckled, then went back to answering the original question. \"Tempest just told me there is a rehearsal dinner on Friday and the wedding on Saturday. I don't have to drive home until Monday.\" \n\n\"Well, we're happy you came to stay with us. If you need anything, just ask us or one of the girls.\" \n\n\"Let's go get your stuff,\" Tempest said. She took one hand, while he reached for his drink with the other. \n\n\"Don't get any funny ideas while you're staying under our roof, young man,\" Melinda sounded stern, but she gave him a playful smirk anyway. \n\n\"Mom!\" Tempest flushed with embarrassment. \n\n\"Make sure you introduce Max to your dad when he gets back!\" her mom called as they went back out to his car. \n\nMax had a small travel suitcase, a hanging garment bag and a longsword in its sheath. They went back in the house and Tempest started introducing him to the extended family. No one seemed to think it odd that he was carrying a prop sword (And\u00faril, Flame of the West, to anyone who noticed) around. \n\nMax didn't remember many names, but he noticed there was a fair amount of diversity in the family; white, black, Asian, Latino, straight, gay and everything in between. Everyone milled about and mixed as family. \n\nTheir house was enormous. In the main house, there was a formal dining room, a living room, enormous kitchen, two master suites and four other bedrooms on two levels plus Melinda's home office, with a full finished basement that held a large game room and a home theater. An addition was built right before Tempest and her three sisters were born which had four more bedrooms, another play room, plus an art studio for Leah and Katie's home office. \n\nThere was also another guest house behind the main house which had a four car garage and woodworking shop on the lower level, plus a full kitchen, two more furnished bedrooms, and Tempest's father's man cave on the upper level. \n\nAll of the extended family who was staying for the wedding had assigned rooms, but still some folks were staying in hotels, probably to avoid all of the bustle and noise. \n\nTempest led Max to the room she had grown up in. It was in the addition at the end of the hallaway at the furthest point away from the main house. She shared a bathroom with Brooke and was across the hall from Serafina and Terra. \n\nHe stood in the door for a moment, just taking in the life his girlfriend led. \n\nThere was a queen-size Japanese style canopy bed in the middle of the room with a matching furniture suite. Where other teenagers might have posters of boybands or something like that on the walls, Tempest's room was decked out in Star Wars, Harry Potter and Battlestar Galactica, with a smattering of A Song of Ice and Fire. Parts of costumes and props were strewn in the spare spaces, including a disassembled lightsaber, a metal replica of Ice, the sword of Lord Eddard Stark, and a gorgeous kimono on a full-body mannequin stand. ",
        "Tempest pulled him into her room and shut the door behind him. \n\nBefore he could stop her, she had dropped to her knees and was unbuckling his jeans and tugging at the zipper. \n\n\"What are you\u2014\" \n\n\"Shut up, Max.\" \n\nHis cock was hardening rapidly in her hand. Max's eyes rolled back in his head when she took him in her mouth. \n\nIt wasn't slow and sensual. Tempest seemed to be going for broke from the beginning. \n\nShe worked him back and forth between her lips. He had to steady himself by leaning back against the door frame. \n\nUnable to move, Max clenched his teeth to keep from crying out at her oral assault. \n\nHer tongue worked the underside of his cock as she cupped his balls in her hand. \n\nTempest's head bobbed up and down on his cock. He knew from their weekend together that her oral skills were unmatched, but she wasn't being seductive or taking her time. \n\nShe was hungry for him. \n\nMax's toes started to tingle. A shiver ran the length of is body. \n\n\"I'm . . . fuck!\" he gasped. \n\nHis cock exploded in Tempest's mouth. Her lips sealed around the head of his cock as it pulsed. She swallowed every bit. \n\nWhen he was done, he struggled for breath. \n\nTempest smiled up at him mischieviously. She gave the tip of his cock a quick kiss. Then she tucked him back in his boxers, zipped up his jeans and buckled his belt. \n\n\"You are yummy,\" she whispered in his ear. Max feebly pulled her close to him. \n\nThey kissed tenderly. Her body pressed against his. \n\n\"Whatever you want, you can do,\" she said softly. \"Fuck me, eat me . . . anything you want. I'm all yours . . . Just not in front of any of the kids.\" \n\nMax's head still spun, unable to fully process what had just happened or what she was telling him. \n\nIt took him a minute for his heart rate to come down. Tempest stepped back from his embrace and went over to her desk. She drew out an envelope. \n\n\"I got my test results back last week,\" she handed it to him. He didn't bother to open it; if she were going through the trouble of getting checked out at a clinic, he trusted her word. \"All clear, and I haven't been with anyone else.\" \n\n\"Same here,\" Max breathed. \"Mine is in the outer pocket of the suitcase.\" \n\nTempest didn't bother to look. It seemed she trusted him, too. She returned to his arms. \"Good, because tonight, I'm going to have you bareback, Max. We're going to fuck. All. Night. I don't care if we wake my sisters or half my family. But you're going to make me scream and I'd better be walking funny at Gabi's wedding on Saturday.\" \n\n\"I guess we've got two days to make that happen.\" \n\n************* \n\nMax quietly slipped out of the bed and went into the bathroom to relieve himself. Tempest lay curled up under the comforter, even though it wasn't actually cold. \n\nShe looked so beautiful in the soft morning light that shone in from behind the curtains. He brushed the hair out of her face, then kissed her gently on the cheek. \n\nWithout a sound, he dressed and went out into the hallway, closing the door behind him. \n\nThe house was quiet. A few people were up, but they kept their voices down to avoid waking anyone who was sleeping on one of the couches, futons or air mattresses. \n\nFor the most part, the adults were billeted in the bedrooms and the kids were sharing the common rooms, like it was one big sleepover. Most of the wedding party and some of the grandparents were staying at the Grove Park Inn, where the ceremony and reception were being held. \n\nKatie and her sister Pam were in the kitchen, prepping a large breakfast for everyone in the house. Each gave Max a familial hug. \n\nIt looked like they were mixing up pancakes. Packages of bacon and sausage lay on the counter along with pre-made canned biscuits and a couple of boxes of hashed browns. In addition to the large cooktop, they had set out some electric skillets so they could cook for more people. \n\nHe retrieved a bottle of cherry Pepsi out of the fridge and was headed back upstairs when Terra waved him over. \n\nShe sat at the dining room table, with her laptop, a tablet and a calculus textbook in front of her, while nursing a cup of hot tea. \n\n\"Sera is in my room with me while my cousins are here,\" Terra answered Max's unasked question. \n\n\"Can I get you anything?\" he asked. \n\n\"No, thank you,\" she replied. He took a seat next to her. \"Thank you for coming up this weekend. It means a lot to Tempest.\" \n\n\"I'm happy to be here.\" \n\n\"Mom thinks you're a serial killer,\" she said. \n\n\"She what?\" \n\n\"Mom\u2014Melinda\u2014says you're too nice to be anything but either a sociopath or the perfect guy for Tempest.\" Terra put her tablet down. Of the four of sisters, she was the most level-headed and calm, although Tempest had told him when Terra got hot, he needed to find a place to hide and hunker down for a long, long time. \n\n\"What do you think?\" \n\n\"I think you've treated her better than any guy she's met.\" \n\nMax snorted. \"Maybe she's been looking in the wrong places.\" \n\n\"That would be my sister,\" Terra rolled her eyes. \"She's been chasing boys all her life. You're a man. I'm glad she met you.\" \n\n\"I'm happy she jumped out of the elevator.\" Max took a drink of his Pepsi. \"But I'm not sure that she really wants me.\" \n\n\"Why not?\" \n\n\"You guys are all nineteen years old. I'm not that much older than you, but I'm out of college and working. You're supposed to be young and wild and all that.\" \n\n\"She's had her share of wild,\" Terra's eyes got dark for a moment. \"She needs someone who treats her well, and you do.\" \n\nTerra didn't elaborate. Max didn't ask. \n\n\"I spend seven months year on the road,\" he sighed. \"She deserves someone who will be with her all the time.\" \n\nThey sat at the table for a moment in silence. \n\n\"If you tell her I told you this, I will deny it until the day I die,\" Terra warned. Her voice was so soft, he could barely hear her. \"Of the people in this family, she is the smartest. As in rocket scientist smart. She actually got into Cornell, but wouldn't go without the rest of us, even though we begged her to.\" \n\nMax's eyebrow shot up. \n\n\"But she has a history of really bad decisions when it comes to guys,\" the young woman continued. \"No one knows why she lets them treat her like shit, but she does. Last year, she met a guy who turned out to be physically abusive. He tried to isolate her from us. Gabi, Sera and a couple of guys in our dorm finally had to go get her. We haven't told our dad or brother because they'd have killed him. But after that, we talked our parents into renting a house for us so she'd be away from assholes like him.\" \n\nMax's jaw fell open. \n\n\"Aside from not being a date rapist when you had the chance,\" Terra reached out and put her hand over his. He didn't realise he was shaking. \"We've all noticed that over the last two months, you've never asked her for pictures of her tits or tried to do any stupid shit like that. At first, she didn't think you liked her, because everyone else who has ever paid any attention to her is fixated on her boobs. Hell, Brooke took her phone one night when she got drunk was going to send you some naked pictures of herself.\" \n\nHe started to say something, but couldn't find the words. \n\n\"At some point, she's going to throw a paranoid tantrum on you. She's going to think you're too good to be true, and that you're going to leave her for someone else. Eventually, she'll get over it, but that goes back to baggage that predates you.\" Terra stopped for a second to choose her next words carefully. \"You two have known each other for less than two months. If you don't want to be with her, that's fine, and we understand. Tempest might not, but the rest of us do. All I ask . . . as her sister . . . and your friend . . . is if you're not serious about her, please walk away before she sets herself up to be hurt.\" \n\n\"I would never hurt her,\" Max said softly. \n\n\"I know you won't,\" Terra replied sympathetically. \n\n\"Anyway, I'm glad you came to visit us this weekend. And this conversation never happened.\" \n\n\"What conversation?\" \n\nBoth smiled at their shared understanding. \n\nAs he got up to leave, Terra shot a quick glance towards the kitchen. She raised her voice a little and winked at Max. \"Oh, and our moms are ready to eat you right up. Don't let them talk you into eloping with Tempest after this weekend. You're too young to settle down with someone you met in a hotel elevator.\" \n\n\"I heard that, Terra Danielle!\" Katie called playfully. \n\nMax only smiled. As he got up, he squeezed Terra's hand, then left her to her homework. \n\nBack in the bedroom, Tempest had shifted slightly. Max set his drink on the nightstand and slipped underneath the covers. In her sleep, Tempest pressed back against him. Wrapping her in a protective embrace, Max fell back asleep to the sounds of her rhythmic breathing. \n\n************* \n\n\"Is there anything you need me to do?\" Max sat on the back deck with Tempest's father and brother watching the family mill around in the yard. A Nerf war was raging on one side of the house; anyone holding a blaster was fair game. A couple of the extended family's dogs were in the middle of a wiffle ball game on the other side. \n\n\"I don't think so,\" her dad replied. Some of the groom's family had arrived early afternoon on Friday and were getting settled in. Most everyone was going over to the wedding rehearsal later that evening. \"I figure if we're needed, someone will let us know. Otherwise, I say we keep our heads down and mouths shut.\" \n\n\"Always a good plan,\" Max nodded. \n\nTempest's dad was friendly and informal. For most of the girls's lives, he had been a stay-at-home parent, shuttling the kids where ever it was they needed to go. His wives all had careers; Melinda was an English professor at UNC Asheville, Leah ran a gallery and studio which showcased local artists, and Katie was a veterinarian. Now that they were empty nesters, they spent a lot of time traveling and enjoying not having their lives run by their childrens's schedules. \n\nHer brother Bryan was quiet, but like his sisters and parents, very smart. After getting his engineering degree from Duke, he went to work for a defense contractor doing something involving lasers and targeting systems; Max wasn't quite sure what and didn't ask for any further explanation. \n\nBryan's girlfriend, Emily, had also come in for the wedding. She was off with the girls doing whatever it was that they needed to do. She and Bryan had been an item for a couple of years, and was accepted as part of the family. \n\nEmily was a pretty Asian woman with long hair and glasses. She graduated from Duke in three years and was half way to her MBA. Max only had a couple of opportunities to talk to her, but she was fun and gregarious, almost the exact opposite of Bryan. \n\nHe talked with her family for a little bit about work and sports. The girls and their mothers were off at the hotel setting up. \n\nMax didn't quite know what to expect when he agreed to come to the wedding. Tempest's family was inquisitive and only moderately prying. He introduced himself to the aunts and uncles and cousins, and was lucky to remember half of their names, but everyone was both friendly and welcoming. \n\n\"Are you coming to the rehearsal dinner?\" Tempest asked. The girls made an appearance after lunch time and were buzzing around the house. \n\n\"I can,\" Max answered. \"I don't have anything to do, so if it's an imposition or will cost extra, I'm okay with skipping it.\" \n\nTempest's father snorted. \"One extra plate at the rehearsal dinner is nothing compared to what this thing is costing. Stormy, when you get married, how about I just give you some cash to elope and you can make a down payment on a house?\" \n\n\"Daddy!\" she blushed. \"I'm not getting married any time soon.\" \n\nMax could tell her dad was ready with a flippant reply, but instead he just smiled and took a sip of his beer. \n\nThe rest of the afternoon passed quickly. Max went to the dinner. He ended up sitting with Katie's sister, Pam, and her husband, Clive, during the actual rehearsal. Their four year old granddaughter was the ring-bearer. One of the groom's nieces was the flower girl. \n\n\"We're glad you came down for the wedding,\" she told Max. \n\n\"I come from a small family, so this is nice. Everyone is very friendly.\" \n\n\"It's probably overwhelming; there are eight grandparents on our side alone.\" Pam was a redhead, like her sister. She looked over at the new in-laws, who seemed nice enough, but were kind of withdrawn. And probably shell-shocked. \"I don't know what his family thinks of all this.\" \n\n\"What about you guys? Was it strange when you found out your sister was going into a . . . plural marriage? Did I get that right?\" \n\n\"When they started out, we thought Tempest's dad and Katie were dating, but it turned out he was with Melinda, and Katie and Leah were together,\" Pam frowned. \"My dad came around pretty quick, but Mom flipped her shit. She wouldn't talk to Katie for years. I got an earful from Mom for bringing a black guy home, but she eventually got over it. I never thought she'd hold the grudge against Katie for so long just for loving another woman. Anyway, when the four of them moved up here, they went from being two couples to the gang. Kaylee was born first, then Bryan. They adopted Gabi and Gwen from an orphanage in Vietnam about a year after they had Bryan. The quads came along two years after that.\" \n\n\"We always knew something was different about them.\" Clive and Pam met while they were in college. He was a construction contractor and she taught elementary school. \"Even when we only knew about Katie and Leah. They were four best friends before they got serious about each other.\" \n\n\"What about the quads?\" Max asked. \"Are they as inseparable as they seem?\" \n\n\"Yes . . . and no. I know; not helpful,\" Pam smirked. \"They each have their own interests and talents. But I think if you left them to their own devices, they'd spend the rest of their lives living within fifty miles of each other. I also think Tempest and\u2014\" \n\n\"Dinner's ready!\" someone called from the stage. Pam winked and shot him a we'll-talk-later look. \n\nTempest and Brooke found Max right as the bar opened. They went through the buffet line and returned to the table. \n\n\"I hope Aunt Pam didn't go too rough on you.\" \n\n\"She was fine,\" Max said with a smile. Truly, he didn't mind getting to know Tempest's family. \"Your family has all been very nice.\" \n\nThe rest of the dinner passed uneventfully. The bride and groom introduced their families and gave gifts to the wedding party. \n\nTempest rode back to the house in Max's car along with Brooke and their cousin Marshalena. \n\nThe family was gathered around the firepit in the back yard. In their upscale subdivision, the house was far enough away from the nearest neighbours that they could make a little noise without drawing any complaints. Theirs was the first house in the area, and they owned several of the adjoining wooded lots with no intention of selling or letting anyone encroach on their sanctuary, even though they had apparently had several very lucrative offers. \n\nA couple of the cousins were playing guitars. Some of the kids were in the hottub. The rest of the family milled around on the deck and in the yard. There was an abundance of food and drink and company. The Nerf war had been replaced by flashlight tag since no one wanted to be hunting around in the dark picking up darts. \n\n\"It's nice to see you when it's not three in the morning!\" Gabrielle gave him a warm hug. \"This is the groom, Kristopher, and my sister, Gwendollyn.\" \n\nUnlike Gabi, who was a petite Asian woman, Kris was tall, with Nordic blond hair and the body of a rugby player. Tempest said he was an administrator at the hospital where Gabi was doing her residency. \n\nTempest previously told Max that Gwendollyn and Gabrielle were identical twins, but he didn't see the resemblance until they were standing next to each other. Both were slim and athletic. Where Gabi wore her dark hair in a short pixie cut with frosted tips, Gwen's hair was a glorious jet-black mane that hung down past her waist. Gwen had glasses, and Gabi's arms and shoulders were covered in exquisite tattoos. \n\nSeeing them together, they carried themselves with the same confidence and had many of the same mannerisms. \n\n\"Yes, this meeting is much nicer than our last,\" Max smiled. \n\n\"Thank you for coming down for the wedding,\" Kris gave him a familial bro-hug. \n\n\"Where's Amy?\" Gabi asked. \n\n\"She's around somewhere,\" Gwendollyn took her turn to give Max a hug. \"I'll introduce her if I can pry her away from Aunt Mimi.\" \n\n\"They're getting married next year,\" Tempest answered the question Max was too polite to ask. \n\n\"We're having the small wedding. My sister is the one who wanted the production. I just want to be on a quiet beach somewhere.\" Gwen gave Max a sly wink. \"You'll have to come down for it.\" \n\n\"I'll see what I can do.\" \n\nGabi snorted. \"I told Tempest if you two break up, we're getting rid of her and keeping you. We need another brother to balance out all the estrogen in this house.\" \n\nTempest stuck her tongue out at her sister, then hooked Max by the arm and pulled him towards the deck. \n\n\"All of my family loves you,\" she said dreamily. \n\n\"They've only known me for two days,\" Max laughed. \"I'm sure they'll get tired of me when they find out how boring I am or that I'm a terrible shot with a Nerf gun. Your family has been very good to me.\" \n\n\"They like that you're not an asshole. And you know the difference between 'there', 'they're' and 'their',\" Tempest stopped and pulled Max into a tight embrace. They kissed eagerly, but not for long, lest they draw too much attention from a family that had no problem calling people out for excessive PDA. She lifted herself up on her toes and whispered in his ear. \"Let's go inside and fuck while everyone's outside.\" \n\nMax's pulse raced. \"Your bed. Naked. I'll be there in five minutes.\" \n\n\"I'll be waiting.\" \n\nTempest bounded off, pausing only to scoop up one of the young cousins, flip him over and give him a good tickling before heading into the house. Max waited a couple of minutes, trying not to be obvious that they were sneaking off for some nookie. \n\nIn the kitchen, Max ran into Melinda, who was directing traffic in the kitchen. They say that you can tell how a woman will look in twenty years by seeing her mother. If that was the case, Max would still find Tempest attractive for many decades to come. She caught him checking her out, but only smiled knowingly. \n\n\"Tempest hasn't been this happy in a long time,\" she told him. \"The girls all say good things about you.\" \n\n\"I just do what I can,\" he shrugged. \n\n\"Then you're doing very well. I don't know where Tempest went\u2014\" which was surely a lie \"\u2014but she came through here a few minutes ago.\" \n\n\"I'll go find her.\" \n\n\"I'm sure you will,\" Melinda gave him a conspiratorial grin. Max blushed. There was no sliding anything by his girlfriend's mom. \"Can you do me a favour first? Go up to my office and get my iPad off the desk, please.\" \n\n\"Sure thing,\" he hated to get sidetracked from his tryst with Tempest, but he wasn't about to turn down a request from Melinda. \n\nHe bounded up the steps, and started peeking into rooms, looking for Melinda's study. He passed two bedrooms, and then felt someone tug at his arm. \n\nSurprised, he found himself face to face with Tempest. She put her finger to her lips, signaling him to be quiet. She pulled him into her mom's office and quietly shut the door. \n\nShe bent over the desk and flipped up her skirt. Her panties had disappeared. \n\n\"Do it!\" she hissed through clenched teeth. \n\nMax pulled at his belt and zipper. His khakis fell around his ankles. In only a couple of strokes, his cock was hard. \n\nHe filled her up with one swift push. Tempest moaned. ",
        "Grasping her wide, soft hips, Max pulled back until he was almost out of her and thrust in again. \n\nTempest braced herself against the desk and pressed back against each of his strokes. \n\nThe room was filled with the sound of his hips slapping against her ass. She was valiantly trying not to scream. \n\nMax pounded away at her, doing his damnedest not to cum quickly. \n\n\"Cum in me,\" Tempest whispered. \"Just fuck me. Fuck the shit out of me, Max.\" \n\nHis fingers dug into her skin, leaving red marks on her backside. \n\n\"I'm going to cum,\" Max grunted. \n\n\"Do it! Cum all over my pussy!\" \n\nThat set him off. He thrust into her one final time and felt his cock explode inside her. \n\nHe fell forward, still grasping on to Tempest's hips. He steadied himself against her until the room stopped spinning. \n\nTempest propped herself up on the desk and leaned back into his arms, holding him inside her. \n\nHis cock, still semi-hard, slipped from her sex. Tempest turned and pulled his boxers and pants up. She buttoned his khakis and fixed his belt. \n\n\"Thank you,\" she bit his earlobe gently. \"Go tell Mom you couldn't find her iPad.\" \n\n\"She told\u2014?\" \n\n\"Yes,\" Tempest winked. \"Then go back out to the party. I'll be down in a minute. And turn left when you go out of this room and use the back stairs.\" \n\n\"Why?\" \n\n\"I'll tell you later.\" \n\nThe blood was still pounding through his veins, as he quietly opened the door and went back towards the kitchen. \n\n\"Did you find my iPad?\" Melinda asked curiously. \n\nMax felt like everyone in the room was staring at him, even though they probably weren't. \n\n\"Um, no, it wasn't up there.\" \n\n\"That's a shame,\" Tempest's mom snickered. Max's was dimly aware that his girlfriend's mother had set him up to bang out a quickie with her daughter. \"I must have left it somewhere else. If you see it, bring it to me, please.\" \n\n\"Okay,\" was all he could mumble before heading back out to the deck, in search of a drink. \n\nTempest arrived a few minutes later, her face still flush. She kissed him gently on the cheek and sat down in the chair next to him. \n\nThe party was winding down, as the families with young kids started to turn in. The adults were still up, talking and catching up as people do when extended families gather, and the teenagers retreated into the basement for movies and games. \n\n\"Gabrielle said they were headed back down to the Grove Park Inn,\" Tempest said. \"I think they're going to be drinking all night.\" \n\n\"I heard them talking about that earlier. You should go with them,\" Max took her hand. \n\n\"Why don't you come down with us?\" \n\n\"I got the impression that it was a girls-only party,\" he said. \n\n\"I hate to leave you here all alone,\" Tempest frowned. \n\n\"She's your sister,\" Max pointed out. \"I'll be fine and I'll come down first thing tomorrow morning.\" \n\n\"I think Kris and the groomsmen are having their own party. You could go hang with them.\" \n\n\"I'm not in the wedding; I'm just a plus one.\" \n\n\"Yeah, but you're my plus one.\" \n\n\"And I plan on being your plus one at Gwen's wedding.\" \n\nTempest blushed, and got doe-eyed. \"I'm about to strip you naked and fuck you right here.\" \n\n\"Not in front of your parents.\" Max smiled. \"Now go get your stuff and go spend the night with your sisters. It's the last night you will all be single.\" \n\nShe looked torn for a second. He could see the gears turning in her head. She finally got up, leaned over and gave Max a kiss on the cheek. \n\n\"Thank you, Max.\" \n\n\"I'll be thinking about you all night. In your bed.\" \n\n\"You're an evil man, Max. Don't go blind. And don't leave a mess.\" \n\n************* \n\nTempest pressed her cheek against Max's. They danced slowly as the wedding wound down. \n\n\"I thought I might have to keep my sisters away from you,\" she whispered in his ear. Max was acutely aware of her breasts that were pressed against him. \"But I think I should be more` worried about my mothers. Your charms are working on them.\" \n\n\"Leah was getting kind of handsy,\" Max said with a grin. He wasn't at the point where he felt comfortable calling Tempest's parents \"Dad\", \"Mom\", \"Mommy\" or \"Momma\", so he used their first names. \"I guess it's a good thing I didn't go 'traditional' for the wedding. It may have been the wine, though.\" \n\n\"She's not your type, though, is she? No, Max, you like tits. You like Mom . . . and Kaylee.\" \n\n\"I like you, sweetheart.\" \n\n\"You remember that,\" Tempest said with a laugh, although he could tell there was some underlying insecurity in her voice. \n\nMax pulled her close to him. He looked into her eyes. \"I like your tits.\" \n\nShe smiled back at him gently, apparently satisfied that she was the sole object of his affections. \n\nThe wedding went off without a hitch. The ceremony was promptly at 12:30 and followed by a reception that ran all afternoon and into the evening. \n\nGabrielle's wedding party was huge; Gwen was the maid of honor, with the other five sisters plus two other girls as bridesmaids. Tempest's brother was one of the groomsmen, along with Kristopher's two brothers and five of his friends from college. \n\nThe ceremony was outside, on a scenic terrace overlooking the Blue Ridge Mountains. The Grove Park Inn was the perfect venue. For the right price, of course. \n\nThere were almost three hundred guests; mostly of them were family plus close family friends. Food and company were plentiful. As the afternoon turned into evening, some people left, but for others, the party was just starting. \n\nTerra and Serafina were each other's dates for the wedding. Terra was seeing a guy at school, but he was in the NC State marching band, and they had a home football game that weekend. Serafina's relationship status was somewhat nebulous, although Max had alternately heard she was seeing a guy and a girl. Maybe both. \n\nAccompanying Brooke was a guy she dated in high school with whom she had an on-again/off-again relationship. He still lived in Asheville and was a part time student at the university while working full time at his father's garage. Max got the feeling that the other sisters didn't actively dislike him, but nor did they think he was going to permanently be in the picture. \n\nA buffet dinner was served. More music and dancing. \n\nFor the ceremony, the women in the wedding party all wore traditional Vietnamese \u00e1o d\u00e0i which were simply adorned with embroidered flowers and coloured in red, yellow, green or blue, depending on the wearer's Hogwarts House. The bride's dress was an elegant white and the most elaborate, with a dragon and phoenix intertwined among woven metallic gold threads. \n\nEach of the sisters and their mothers wore a pendant displaying twelve gemstones that represented their family: one sapphire, three emeralds, seven rubies and one amethyst. \n\nThe men in the wedding party wore understated tuxedos with ties and vests that matched the dress of their corresponding bridesmaid. \n\nTempest's dad was in costume as (older) Han Solo with her moms all as Princess Leia: Melinda in the white medal ceremony dress, Leah in the red Bespin dress and Katie in the blue Resistance dress. Much to Max's disappointment, none wore the metal bikini, although there was no doubt in his mind that each of them had one hidden away somewhere. He knew there was one in Tempest's closet. \n\nMost of the guests were also dressed up, knowing the bride's family's proclivity for costumes. The majority were store-bought Halloween costumes, although some were hand-made with great care and expense. \n\nStar Wars, Game of Thrones/A Song of Ice and Fire, Marvel and Disney princesses were all represented in the crowd. \n\nMax wore his kilt and sporran along with his newly-purchased Prince Charlie jacket and vest he'd bought just for the wedding. A matching Black Watch tartan fly plaid hung over his shoulder with a dragon brooch, and he wore his ren faire buckle boots in lieu of the traditional hose, flashes and ghillie brogues. His sword from Middle-Earth hung from his sword belt, and he carried a sgian-dubh in his boot. \n\nHe wasn't the only one armed; there were a smattering of swords, prop blasters, lightsabers and a bat'leth throughout the room. \n\nThe groom's immediate family opted for regular formal wedding attire, although some of the extended family were in costume, including a pair of cousins who stood near the back in inflatable T-rexes. \n\nBy dinner time, most of guests and wedding party had changed out of their costumes into more comfortable attire, except for the Green Ranger who was tearing up the dance floor. \n\nTempest was wearing her Overwatch concept Mei costume that she had also worn at Dragon Con. A spaghetti-strap halter-top barely contained her breasts, and the yoga pants showed off her full hips, and thick, meaty thighs. She left her cryogenic tank and endothermic blaster on the table for most of the night, but put it on for pictures. \n\nShe had a white lab coat that covered up much of her exposed skin. Max had to concentrate in order to maintain eye contact, but her jeweled pendant kept drawing his eyes down into her cleavage. It seemed that she was showing off just for him. \n\n\"Don't change, hot stuff,\" she told him privately part way through the afternoon. \"You are so fucking hot in the kilt.\" \n\nHe shed the jacket and sword belt after another guest kept knocking into the sheathed sword while doing the Electric Slide. Max made a point of dancing with each of Tempest's mothers, as well as all of the sisters. \n\n\"Do you want to stay here tonight?\" Tempest yawned. Between the long day and the champagne, she was getting a little drowsy. Technically, she was too young to be drinking, but there was an open bar and enough adults who were willing to get the college age kids drinks. Especially since they knew no one would be driving. Plus there was a ton of booze in the wing of the hotel the wedding party had taken over. \"We may have to share a room with one of my sisters.\" \n\n\"I thought we'd go back to your house tonight,\" Max kissed her gently. \"I've only got two more nights to fuck your brains out in your bed.\" \n\n\"Then why are we still here?\" \n\nThe bride and groom had already departed for the honeymoon suite. There was really no reason they needed to stay any longer. \n\nTempest stopped long enough to let one of her mothers know that they were leaving, gloat to her sisters that she was going to get lucky, and then went into one of the side rooms to get her things while Max called for a Lyft on his phone. \n\nThey got into a Cadillac SUV. The driver kept eyeing Tempest's cleavage in the rear-view mirror. \n\nThe ride back to her house took about twenty minutes, and despite his best efforts, Max's window between \"frisky\" and \"asleep\" closed as they were getting off I-40 West. \n\nMax pulled her close and held her for the remainder of the drive. \n\nWhen they pulled up to the house, Max coaxed Tempest to her feet, then gathered her bag and his sword belt. He walked her inside and up to her bedroom. Most of the families had left the wedding earlier and the young kids were down in bed. The older kids were setting up in the basement home theater and getting ready for a Star Wars marathon. \n\nHe changed Tempest into an oversized T-shirt and lay her down in the middle of her bed. \n\nBrushing the hair out of her face, he kissed her gently on the cheek before changing himself. \n\nAs he cuddled up to Tempest, just before falling asleep, he thought he heard her whisper, \"I love you, Max.\" \n\n************* \n\nWhen he awoke, Max was alone under the covers. \n\nDim light shone in from behind the curtains. He glanced over at the clock. It was just after seven. \n\nHe stumbled out of bed and into the bathroom. Tempest sat on the toilet, slumped against the wall, sound asleep. \n\nThe make-up on her face was smudged. Her hair a mess. Hungover. \n\nMax still thought she looked beautiful. He lifted her into his arms and carried her back to bed, leaving her leggings in a heap on the floor. \n\nMax went downstairs and got himself something to drink, then returned to the bedroom. The house was eerily quiet except for a couple of people ratting around. Propping a pillow against the headboard, Max sat back and played around on his iPad for a little while. \n\nAfter an hour, Tempest stirred. She reached out for Max, groping blindly. He took her hand in his and kissed her fingertips. Tempest smiled contentedly to herself. \n\n\"Good morning, sleepyhead,\" he said softly. \n\n\"I'm sorry for passing out on you last night,\" she flushed with embarrassment. \n\n\"That's twice, sweetheart,\" he said with a smile. \"You're giving me a complex.\" \n\n\"How can I make it up to you?\" \n\n\"I can think of a few ways.\" \n\n\"I like the sound of that.\" Tempest yawned and stretched, causing her back to pop in a couple of places. She reached over trying to grab Max's rear end. \n\nTo her dismay, he wiggled free of her grasp and slipped out of the bed. \n\n\"Kris and Gabi invited us to breakfast this morning.\" He flashed a chain of text messages on his phone. He had turned the ringers off for both of them. \n\n\"When?\" Tempest sighed. \n\n\"At nine-thirty. Let's get a shower and then we can drive down to meet them.\" \n\nWithout waiting for her, Max went into the bathroom and started the shower. Since Tempest and Brooke shared the bathroom, there were two sinks, a bathtub and separate stand-up shower, and the commode was separated by a door. There was a window that gave a spectacular view of the Blue Ridge Mountains which was high enough that it obstructed anyone trying to see into the shower or tub. \n\nBrooke had stayed overnight at the Grove Park Inn, and a quick glance through door showed the bed was empty, so they didn't have to worry about anyone walking in on them. \n\nTempest staggered into the bathroom, and Max immediately pressed her up against the door frame. \n\n\"Oh,\" she gasped as Max pinned her arms above her head. He cupped one of her breasts with one hand while holding her wrists with the other. She put up token resistance, but seemed content to let him take charge. \n\n\"Naked. Now.\" Max released her and stepped back. \n\nEagerly, Tempest shed her t-shirt and sports bra. Max admired her ample curves. He also noted her eagerness to obey his instructions. \n\nShe stepped into his arms and they kissed again. Tempest tugged at his clothes, tossing them to the floor. She was moving at half speed. \n\nThe room started to steam up from the shower, even with the ventilation fan running. \n\nTheir naked bodies pressed together. His hands cupped her voluptuous backside. \n\nMax's cock was hardening as close as it was to Tempest's neatly-trimmed sex. \n\nHe opened the door to the shower and the stepped in, the warm water washing over them both. There was a single showerhead that hung down from the ceiling, and a set of full body water jets embedded in the walls. \n\nHer hands never left his body. He couldn't stop himself from cupping her ass, her breasts or the slick mound of her pussy. \n\nTempest's usual aggression was gone. Instead, she was passive and reacted to Max's advances as opposed to being the instigator. Maybe it was the hangover. Or maybe she simply trusted Max. \n\n\"How much time do we have?\" she asked. \n\n\"Forever,\" Max blurted out before he could stop himself. She smiled dreamily and pulled him in for a deep, sloppy kiss under the water. \"Maybe an hour.\" \n\nThey made out under the shower for a good long time. They didn't paw at one another or do anything more than kiss and hold one another. \n\n\"Um, are we going to use up all the hot water?\" \n\n\"No, we've got plenty of hot water,\" Tempest giggled. \"Dad installed tankless hot water heaters in the house. I think we have four total.\" \n\n\"Is that overkill?\" \n\n\"You don't know my father,\" she laughed softly, trying valiantly not to do anything too loud or make any sudden movements. \"He used to do a bunch of construction and contracting work in college, so when they built this place, it's all over-engineered and has backup systems on top of backup systems. We have solar panels on the roof, natural gas generators and the entire house is built up to the Florida hurricane codes, even though a storm that strong will never hit us here.\" \n\n\"He sounds like someone who likes to be prepared for anything.\" \n\n\"He just wants to take care of his family.\" Tempest settled into Max's arms. Her head rested on his shoulder. \n\n\"It sounds like I'm going to have to try really hard to live up to the expectations he's set.\" \n\n\"I think you're doing just fine.\" \n\nThey kissed again. There was a part of Max that wanted to take her right there, but he stopped himself. For the moment. \n\nMax pulled back and turned Tempest around. He reached for the shampoo. She purred with delight as he began to lather up her hair. \n\n\"Okay, I'm yours,\" she breathed. \n\nAfter a good long while, she rinsed off. They took turns washing one another. \n\nStill they stayed under the water, savouring the warmth of the other's touch. \n\n\"Make me hard,\" he whispered in her ear. \n\nTempest was eager to comply, the effects of her hangover lessening in the steam. \n\nIt only took a couple of strokes for Max to go from flaccid to fully erect. \n\n\"Do you want me to suck you or fuck you?\" she asked softly. \n\nMax didn't respond. \n\n\"I love it when you look at me like that.\" Tempest leaned back against the tile, her chest sticking out. \n\nHis gaze tinged with lust, Max pulled her to him. She tilted her head back and closed her eyes. Max hungrily kissed her. \n\nShe let out a surprised yelp when he pulled back and spun her around. Pulling her hips back to him, Max pushed his cock forward. \n\nTempest's reached between them, and she guided him into her pussy. \n\nThe water cascaded over them. She braced herself against the wall as Max pounded into her from behind. \n\n\"Touch yourself,\" he grunted. Tempest spread her legs as Max's fingers dug into her hips. \n\nHer fingers brushed his balls as she diddled herself with one hand, using the other to steady herself against the wall. \n\nMax reached around and cupped her pendulous breasts, her nipples rock hard under the water. \n\n\"Fuck me!\" she wailed. \n\nRelentlessly, Max continued to thrust into her sex. \n\nWith one hard stroke, Max pushed her forward so she was pressed against the wall, her breasts mashed flat against the cool tile. \n\nHis lips went to the back of her neck. His teeth raked her sensitive skin. \n\nHe sucked hard on the nape as he held his cock inside her. She pushed back, taking him as far inside her as he would go. \n\nShe squirmed around, but he held her against the wall with is cock deep inside her and his lips locked on to her neck. \n\nTempest's pussy spasmed around him. \n\n\"I'm cumming!\" she cried out. \"Cum with me!\" \n\nIt all Max could do to keep from shooting off inside her. She trembled as the orgasm wracked her body. \n\nHe stood there, impaling her on his cock. Holding her under the water as she rode out the cum. \n\nBoth of them gasping for breath, neither moved for a long time. \n\n\"Damn, you're good,\" she breathed. \n\n\"So are you,\" he whispered in her ear. He brushed her hair out of the way, taking a moment to look at the mark he left on the back of her neck. \n\nSmiling to himself, Max let his cock slip out of her sex. He reached over and shut the water off and opened the shower door. \n\nTempest's legs were still wobbly, so Max helped her out of the shower. They dried one another off, their touch lingering on the other's body. She put her hair up in a towel. \n\nMax maneuvered her back into the bedroom, then picked her up and set her on the bed. He threw their towels to the floor and pushed her back. \n\nThe look in her eyes was a little shocked. A little lust. Max straddled her chest, his still-hard cock between her breasts. \n\n\"You didn't cum?\" she asked. ",
        "\"I'm about to.\" Max squeezed her breasts together around his cock, and started to thrust forward. \n\nTempest arched her back to meet his thrusts. \n\nTheir eyes met. He pinched her nipples. \n\nAfter being so close in the shower, he wasn't going to last very long, but that wasn't the point. \n\nMax leaned forward. He had to let go of her breasts and lean on the headboard to hold himself up. \n\nWithout missing a beat, Tempest began to knead her breasts around his cock. \n\n\"Suck,\" he gasped, pushing himself forward into her mouth. \n\nObediently, Tempest took his head in between her lips. \n\nAfter a couple of thrusts, Max returned to fucking her tits. \n\nHe alternated between her mouth and her breasts, until finally he couldn't take it anymore. \n\nJust as he felt his toes start tingle, Max pulled back from Tempest's eager mouth. \n\nThe first jet of cum shot out and hit her in the neck. He settled on her chest as she pushed her breasts together, trying to contain his jizz from spraying all over her. \n\nMax clenched his teeth as his cock pulsed, wrapped in the heavenly confines of her tits. \n\nHe counted to eleven as his cock flared, and saw a dribble of cum make its way down from between her breasts towards her throat. \n\nFalling on to the bed next to Tempest, Max tried to catch his breath. \n\nGlancing over, he saw his girlfriend rubbing his cum into her chest. \n\nTheir eyes met. \n\n\"That was hot,\" she breathed. \n\n\"You're hot,\" he managed to smile. \n\n\"You planned that.\" It wasn't a question. \n\nMax only grinned mischievously. \"I just want to be with you all day.\" \n\nJust then, her phone buzzed. Her text tone was Mercy's German accent, changed just for Halloween. \"My servants never die!\" \n\n\"Goddammit, Brooke, what the fuck do you want?\" Tempest sighed. She blew him a kiss, then reached for her phone on the nightstand. \n\n\"At least she waited until we were done.\" \n\n\"She's sent eight texts this morning. 'Aunt Pam says you've been in the shower for the last half hour',\" Tempest read the text messages out loud. \" 'Did you slip and fall?' 'What the eff are you doing?' 'Answer your goddam phone.' 'Breakfast is in an hour.' 'If you get pregnant, Mom will kill you.' 'Bring me some pads'.\" \n\nTempest giggled before she read the last one. \n\n\" 'If Max has tied you to the bed, tell him to bring some pads down for me when he comes to breakfast'.\" \n\n\"I should have you give her a box of tampons in front of everyone at breakfast.\" Tempest tapped out a reply on her phone. She set it down and sat up slowly. \n\nMax lay back and watched her start to dress, admiring her form in the soft morning light. \n\nAfter a couple of minutes, she went into the bathroom and started up her blow dryer. He went to his suitcase and drew out a pair of nice khakis and a polo shirt. \n\nThe hair dryer stopped. \n\n\"Goddmmit, Max, what the fuck did you do to my neck?\" Tempest stormed (slowly) out of the bathroom, more shocked than angry. \n\nMax took her in his arms as she pounced on him. She made a bee-line for his collarbone, but he pulled her way. Luckily, she still wasn't moving at full speed. \n\n\"Oh, no, mister!\" she laughed. \"You can't leave a hickey the size of Montana on my neck and get away with it.\" \n\nHe held her at bay until she relented. \n\n\"I told you; I want to be with you all day.\" Pressing her back into the bed, Max pinned her arms above her head and kissed her deeply. \"You're mine now, Tempest. And I want the world to know it.\" \n\n\"I am yours,\" she replied, the fight leaving her body. \"I will be yours for a long as you'll have me.\" \n\nMax kissed her again. \n\n\"But you're still an evil fucking man for leaving a load of cum and a hickey on me. What if my parents see it? Shit, I'm going to have to wear my hair down and put a ton of perfume on to cover up the smell of your spunk!\" \n\n\"Don't you dare!\" Max laughed. \"Besides, it's on the back of your neck not the side. No one will see it unless they're looking. And you're the only one who can smell the cum\u2014\" \n\n\"Because I'm covered in it!\" \n\n\"Now get dressed. We're going to be late.\" \n\nShe protested a little more, but they managed to get their clothes on. A couple of times, Max had to evade her attempts to suck on his neck or face, but he was moving at full speed, and she was at maybe three-quarters. \n\nSome of the family was getting packed up to get on the road. Cold pastries, bagels, donuts, and cereal were waiting for anyone who wanted something to eat. Most everyone in the house was headed out for breakfast with the family. Some were leaving from the Grove Park Inn. Others were staying for a little while longer. \n\nThe grandparents and some people were going to be around for a couple of extra days. Like Max, the quads were heading out on Monday. \n\nHolding hands, Max walked Tempest out to his car and opened the door for her. She stopped to kiss him before getting in. \n\n\"Why are you so good to me?\" \n\n\"Because you deserve to be treated like a queen.\" \n\nShe blushed. \"If you weren't evil, I'd fuck you senseless right here.\" \n\n\"We're going to be late.\" He gave her a playful swat across the backside, then got in and started the car. \n\nMax rested his hand absently on her thigh. Her fingers intertwined with his as they drove off. \n\n\"So what was the deal the other night? Upstairs by your mom's office?\" \n\n\"What do you mean?\" \n\n\"You told me to be quiet and go back down away from the bathroom.\" \n\n\"Oh, that,\" Tempest giggled. She paused for a second, looking for the right words. \"My Momma was giving Uncle Geoff a blowjob in the bathroom.\" \n\n\"Your uncle?!?!\" \n\n\"Well, not a real uncle. Just a family friend. It's a, um . . . secret in our family. Most of the extended family doesn't know,\" Tempest chewed on her lip, probably wondering if she had already told Max too much. \"Geoff and Mimi . . . Yesmine . . . they were dressed as Gomez and Morticia at the wedding. Dad and Mommy went to high school with them, and as near as we can figure out, our parents have been swinging with them for years. Our families are really close, so we call them Uncle Geoff and Aunt Mimi.\" \n\n\"Wow,\" Max breathed. The woman dressed as Morticia Addams was a complete knockout. Her husband was a good Gomez, but she was as close to perfection as any woman Max had ever seen. \n\n\"Yeah, she's stacked. She dressed up as Jessica Rabbit at a Halloween party two years ago that almost caused a riot,\" Tempest said. \"I think she toned it down for the wedding to keep attention on the bride. Anyway, our parents have never admitted to anything, but they do a lot of stuff together and we've grown up with them and their kids. Tiffany was one of the Hufflepuffs in Gabi's wedding party. She's not really our cousin, but she may as well be.\" \n\nNothing that went on in Tempest's family should have surprised him anymore. \n\n\"So they were getting busy in the bathroom?\" \n\n\"They were trying to be sneaky. I don't think they were actually doing it; just a quick blowie.\" \n\n\"So no one else knows?\" \n\n\"A few people do. Just not everyone. Assume anyone you talk to doesn't.\" \n\n\"Got it.\" \n\n\"Thanks, Max. That's probably not something my parents want the world to know about.\" \n\n\"Your secret is safe with me,\" he said just as they pulled into the parking lot. \n\nThey ran into Melinda in the lobby. With Tempest on one arm, he offered the other to Melinda, who took it graciously. They walked towards the dining room, where the wedding party had reserved one of the private rooms for the Grove Park Inn's breakfast buffet. \n\nThe entire wedding party was there, as were most of the immediate family. \n\nMax and Tempest sat at one of the big tables amidst her siblings. The other quads had accepted him as a fact in Tempest's life, and it seemed her family did as well. \n\nGabrielle and Kristopher were seated in the middle of the table, with his parents on one side, Leah's parents on the other, and Gwen and Amy across from them. The rest of the family mingled together. Many of the twentysomethings were obviously impaired, and if they hadn't been expected to be there, probably would have still been in bed. \n\nMost everyone was nursing a cup of coffee, although it seemed a couple of people were three deep into the mimosas already. \n\n\"When are we going to see you again, Max?\" Melinda asked. \n\n\"And don't say Gwen's wedding!\" Serafina called from across the table. \n\nTempest blushed. It seemed Max's grace period was up. \n\n\"Whenever you will have me,\" he replied tactfully. Tempest shot her sisters a warning glare that was basically devoid of any real threat. \n\nMax fielded a few softball questions about what he did for a living and his upbringing. All in all, they were pretty gentle. Maybe it was everyone being hungover. \n\nOnly a few of those present actually ate a decent breakfast. Most of them just nibbled. \n\n\"Thank you for coming down for the weekend,\" Melinda patted him on the hand when Tempest got up to go to the omelet station. \n\n\"I had a really good time.\" \n\n\"I hope she's as good for you as you are for her.\" \n\n\"That she is,\" Max smiled. \n\n\"Sera is quiet and introspective. Brooke is the most outgoing and gregarious. Terra is the artist and the dreamer.\" Melinda looked over at her daughter, who was waiting for her breakfast. She spoke quietly, not in a hushed voice, but soft enough that they could have a private conversation even though they were out in public. \"Tempest was always the most headstrong of the four. She's like her Momma . . . Katie. She a firecracker. Quick to anger. Quick to laugh. Quick to cry. Quick to forgive. She plays hard. Loves hard.\" \n\nMelinda paused for a moment. \n\n\"It gets her in trouble sometimes. Stormy always wants to see the best in people, and things don't always work out that way.\" A flash of sadness crossed Melinda's eyes. \"She likes you, Max. Maybe more than she should.\" \n\n\"I like her, too.\" \n\n\"I know you do. And I know you'll treat her well. The girls say you do, and they're a better judge of character than Tempest is sometimes.\" Melinda looked Max in the eyes and smiled. \"Just don't piss them off. Especially Gabi. She'll make your life unpleasant.\" \n\nIt didn't sound like a threat or a warning. Just the simple statement of fact. \n\n\"I get the feeling Gabrielle would make sure no one ever found my body.\" \n\nThey both snickered as Tempest sat down with her omelet and gave them a quizzical look, but neither volunteered any more. \n\nAfter breakfast, Max was drafted into packing up all of the family's things from the wedding. It took a couple of hours because most of the young, able-bodied people were running at about sixty percent, or they left right after brunch to head back home. \n\nEverything was loaded into trucks and minivans, then unloaded back at the house. \n\nBy mid-afternoon, everyone who was left sat around catching up. The bride and groom weren't leaving for their honeymoon until the middle of the week. Most of the grandparents were staying for a few days, and the groom's parents were getting settled in one of the spare bedrooms. \n\nFour football games were on in the basement and Max found himself drawn into an Overwatch team on the consoles. \n\nCompared to the previous nights, dinner was a low-key affair, consisting of leftovers from the earlier meals and the wedding. \n\nBrooke sat with Max out by the fire pit, waiting for the fixin's for s'mores to arrive. \"Are you leaving in the morning, too?\" \n\n\"Probably whenever you guys head out,\" Max frowned. He looked over at Tempest, who was chatting with Leah, Gwen and her dad. \n\n\"Then why are you still here?\" \n\n\"What?\" he shot her a puzzled look. \n\n\"Why are you still hanging out with the rest of our lame family? You should be up in her room, fucking like rabbits.\" \n\nMax blushed. \n\n\"The windows are pretty much soundproof. We won't hear you. Just make sure she pees after you do it so she doesn't get a urinary tract infection.\" \n\n\"Learn that one the hard way?\" \n\n\"Yup; you'd think with a sister in med school, I'd listen to someone. It sucks.\" \n\nBrooke laughed at Max's discomfort loud enough to draw curious looks. He stood suddenly and gave his girlfriend's sister a wink. \n\nWalking over in full view of her family, Max scooped Tempest up in his arms, despite her protestations. Her resistance was mostly for show, and she planted a kiss on him when they got to the door. \n\nWithout a word, he carried her inside, much to the amusement of her sisters and apparent delight of her extended family. \n\n************* \n\n\"I think you broke my pussy.\" \n\n\"I can kiss it and make it better.\" Max rolled off of Tempest and fell into the sheets next to her. \n\n\"Isn't that how this started?\" Tempest looked over at Max and smiled. Their bodies were covered in sweat. The room reeked of sex. \"No one has ever fucked me until I went dry.\" \n\n\"If I could move, I'd high-five myself.\" Max wrapped his fingers around Tempest's as she reach out for him. \"What happened? You were a swamp down there earlier.\" \n\n\"That was two hours ago.\" \n\n\"What time is it now?\" \n\n\"Almost eleven.\" \n\n\"We've been at it for four hours?\" The candles on the nightstand were almost burned down to the bases. \n\n\"Yeah, Loverboy. You've been busy.\" With great effort, she rolled over and snuggled up to him. \n\n\"I've been busy? I think you've been on top for most of the night.\" \n\n\"Um . . . until you wanted to do it doggy\u2014\" \n\n\"I wanted to do doggy? You were barking!\" \n\n\"Only because you told me that was the only way I was going to get it from behind!\" \n\n\"That was hot.\" \n\n\"That was fucking awesome.\" Tempest and Max pressed their bodies together, spent. \"I can't believe you're still hard.\" \n\n\"Not for long, sweetheart. I think Mr. Happy needs to take a breather.\" \n\n\"You're getting old, Max.\" \n\n\"Hey, you're the one who went dry. Just get me some lube and I'll make you scream again.\" \n\n\"You're all talk, mister.\" Tempest pressed her body against him. In truth, both were content just to hold one another. \"We need a shower.\" \n\n\"We need to change the sheets.\" \n\n\"I could get the lube and you can do me up the butt first.\" \n\n\"I'm not tired of your other hole yet,\" Max felt his cock wake up a little at the mention of butt sex with Tempest. \"We'll save that for next time.\" \n\n\"When you tie me down and fuck me.\" \n\n\"When it's just you and me. Without your family or your sisters around. Or nosy neighbours. When one of us doesn't have to leave in the morning.\" \n\n\"I could finish you off in my mouth. Again. Or between my tits. I hate to leave you hanging.\" \n\n\"Even if you could get me to orgasm, I don't think you'll get any more out of Mr. Happy.\" \n\n\"What happened to it all?\" Tempest blinked her eyes innocently. \n\n\"Well, sweetheart, it's either stuffed up your pretty little pussy, in that lovely mouth of yours, or all over your chest.\" \n\nTempest started to say something else, but she stopped herself. Lifting herself up, she looked Max in the eyes. He brushed her hair out of her face. \n\n\"Do you really have to go home tomorrow?\" she whispered. \n\n\"I can't stay here,\" Max pulled her in to his welcoming embrace. \"And you have to go back to school. \n\n\"Are you going back on the road? If you're working remotely, you could stay with me at school.\" \n\n\"You should probably ask your sisters before you invite me to crash with you. Besides, school comes first.\" \n\n\"You have to promise me you won't meet some floozy and run off with her.\" \n\n\"I already fell for one girl in a hotel elevator. I don't think my chances of meeting another one are very good.\" \n\n\"You never know, Max.\" \n\n\"I've been doing this job for two years. I'd never gotten a date with anyone on the road before you crashed my breakfast.\" \n\n\"I'll send Gabi and Bryan after anyone who tries to steal you away from me.\" \n\n\"I'm sure you will.\" \n\nThey cuddled for a little while longer. Neither wanted to let the other go. \n\n\"Can I ask you something?\" Max said after a few minutes. \n\n\"Of course,\" she replied dreamily. \n\n\"A couple of times, you've told me I can do anything I want to you.\" \n\n\"Yes, Max. Anything you want.\" \n\n\"And you make it sound like you want me to . . . um, just take you. And that you like being . . . I don't want to use the word 'controlled' but . . .\" \n\n\"Dominated.\" Tempest said finally. \"I want you to fuck me. I want you to be in control.\" \n\n\"Why?\" It took him a couple of seconds to find the right words. \"It seems like you're very aggressive other times.\" \n\n\"I know what I want . . . and when I want something\u2014or someone\u2014I go after them.\" She ran her fingertips over his chest. \"But other times . . . I guess I just like . . . I like it when you take me. I like it that you just have to have me, and you throw me down and you fuck me.\" \n\n\"I don't want to hurt you or anything.\" \n\n\"I know you don't, Max. And that's why I like being with you.\" It was her turn to pause to think. \"I know you won't take advantage of me . . . or try to take over my life, or do anything bad to me. I trust you enough to give myself to you, and that you won't take anything from me.\" \n\n\"I've never done anything like that before. Like 'kinky' before,\" Max blushed. \n\n\"That's okay, baby, I'll show you.\" \n\n\"You're a horny little minx.\" \n\n\"I'm your horny little minx.\" \n\n\"How kinky do you want me to be?\" he asked, a little bit uncomfortable. \n\n\"As much as you're comfortable with.\" She stopped for a moment and propped herself up on a pillow next to him. Taking his hands in hers, she kissed his fingers gently. \"A few years ago, I was maybe twelve or thirteen. For some reason, I got up in the middle of the night and went downstairs to get a drink out of the kitchen. I heard noises in my parents's room and the light was on, so I went to look.\" \n\nTempest's eyes became distant. \n\n\"Their bedroom door was cracked open, and I heard my Mommy\u2014Leah\u2014begging and crying. My dad was yelling at her and I heard him slap her a couple of times. He was yelling at my other moms, too.\" \n\nShe stopped to take a deep breath. \n\n\"Our family has always been pretty open about sex. We all got 'the talk' when we were in middle school. My parents were never afraid to show affection to one another, and while they aren't nudists or anything like that, they have taught us never to be ashamed of ourselves or our bodies. But that night . . . that night, I had never heard my dad angry at my moms or ever seen him raise his hand to any of us.\" \n\nMax gave her hand a supportive squeeze. \n\n\"That night scared the shit of out of me. I dropped the cup I had in the hallway and they heard me. They stopped what they were doing and got dressed right then. Mommy carried me up to bed and stayed with me through the night. I was crying. She was crying. I thought Daddy was hurting her.\" \n\nHer hands trembling, it took Tempest a second before she could continue. \n\n\"The next day, I stayed home from school and we had a talk, just me and Mommy. She told me that Daddy would never hurt her, even though it seemed like it. That they liked to do things a little rough, but it was always out of love. We talked about a bunch of things. I think Kaylee had caught them doing something like that before, because she called me from college later that afternoon and we talked, too.\" \n\nMax didn't dare interrupt her, and we waited for her to go on. \n\n\"I never talked about that to my sisters, although Dad and my moms did ask to see if I was okay. We talked some more about it when I got older . . . and got curious.\" \n\n\"So did you learn anything?\" he dared to ask. \n\nShe smiled mischievously. \"I learned that there are all sorts of kinky sex out there . . . and my parents are into some of them. And I'd like to try some things out . . . with you.\" \n\n\"Are you sure?\" \n\n\"I've never been so sure in my life.\" Tempest caressed Max's cheek. \"I think about that night a lot. At first I thought my dad was really angry . . . but he wasn't . . . he was playing . . . acting . . . because Mommy wanted him to be rough with her. He was doing what she wanted him to do out of love. He wasn't striking her out of anger, or trying to injure or hurt her.\" ",
        "\"And you want me to . . .\" \n\n\"I want to give myself to you,\" she said softly. \"I want you to give yourself to me . . . I want for . . . us . . . to learn together.\" \n\n\"I . . . I would like that,\" Max said softly. \"I don't know what to do, but I'll try.\" \n\n\"Do or do not, Max. There is no try.\" \n\nBoth of them groaned at her Star Wars humour, although he shouldn't have expected anything less. \n\nThey fell into a bundle of tickling and laughter before rolling out of the bed and into the shower. \n\nWith the warm water cascading over them, Max pulled Tempest close. Their bodies pressed together. He cupped her rear end in his hands. Her fingertips ran over his shoulders and down his arms. \n\n\"Tempest? Can I scare the shit out of you?\" he asked. \n\n\"Not if I do it first,\" she breathed. \n\nTempest closed her eyes and smiled contentedly. Max savoured the feel of her body. \n\n\"I love you,\" they said in unplanned unison. \n\nForty-five minutes later, they emerged into the steam-filled bathroom, scrubbed clean, even knowing they were going to get dirty again. \n\nThey fell into the bed, opened up a brand new tube of lube and made love on more time before falling asleep in each others's arms. \n\n************* \n\nTempest was snuggled up to Max, drooling on his shoulder. \n\nHe brushed the hair out of her face. The air was a little cool and they were burrowed under the blankets and comforter. \n\nSoft morning light peeked in from behind the blinds. \n\nMax caressed her cheek. Tempest smiled in her sleep. \n\n\"You are so beautiful,\" he whispered. \"I want to love you so much. I don't want to leave. I want to wake up with you every day.\" \n\nLeaning in, Max kissed her forehead, then wiggled out from underneath his lover. \n\nWith only the light from his cell phone, Max hunted around for some clothes, then went downstairs towards the kitchen. \n\nLeah was setting things out on the counter to get a head start on breakfast. The bride and groom had spent one more night at the Grove Park Inn, but most everyone else who hadn't headed home on Sunday was staying at the enormous house. \n\nSerafina and a couple of the cousins were digging through the pantry and prepping for breakfast. \n\n\"Good morning, Loverboy,\" Leah said with a wink. \n\nMax's face flushed. \"Can I help with anything?\" \n\nIn response, Leah brushed up against him and spoke so only he could hear. \"Just take care of my daughter.\" \n\n\"I will,\" he promised softly. \n\nTempest's mother smiled back. \n\n\"Are you driving home with us?\" Sera asked. \"It's only four hours up I-40.\" \n\n\"Yeah, but I live four hours in the other direction,\" Max lamented. \n\n\"She said you could work remotely.\" \n\n\"I don't want to impose.\" \n\n\"Our house is big enough,\" Serafina snorted. \"Dad got it on a foreclosure and only paid about a third of what it's worth. \n\n\"You're making excuses.\" Leah saw through his hemming and hawing and went to work on the pancake batter. \n\nMax pulled out a stool and sat down at the counter. \n\n\"I know I'm not much older than her, but I don't know why she'd be interested in me,\" Max frowned. \n\n\"Because you treat her well,\" Leah said. \n\n\"And apparently you're amazing in the sack,\" Serafina grinned, making Max blush uncontrollably. \n\n\"It helps you have a job and a car of your own,\" Leah added. She glanced up at the clock on the wall. \"And it's almost eight and you can carry on an intelligent conversation with adults.\" \n\nMax sat there for a second. Tempest's mother wasn't joking. She reached over and squeezed his hand. \"Breakfast will be ready in half an hour.\" \n\nHe went back to the bedroom. Tempest was wrapped up under the covers. The door to the bathroom was closed and he heard the shower running. \n\nShe stirred when he closed the door. \n\n\"Where have you been?\" she yawned. \n\n\"Getting ready for breakfast.\" Max leaned over and kissed her gently. \n\n\"I wish we could stay like this forever.\" Tempest snuggled up to Max. He took her in his arms and pulled the covers close around them \n\n\"Don't you have class this afternoon?\" \n\n\"Damn, you know how to kill a mood,\" she pouted. \n\nMax brushed the hair out of her face. \"You're the smart one of us. I need you to start building medical nanobots or whatever is going to win you the Nobel Prize. I just teach people how to use a fancy computer system.\" \n\nShe snorted. \n\n\"Will you come visit me at school?\" \n\nHe paused for a moment. \"I guess . . . I'll have to see when I'm working next . . .\" \n\n\"Max, sweetheart,\" Tempest began sweetly. Then her voice hardened. \"Cut the horseshit. Why are you trying to talk yourself into breaking up with me?\" \n\nHe looked away. Sheepishly. Ashamed. She was right. \n\n\"You're way out of my league.\" His voice was a whisper. \"You're smart. You're beautiful. Your family is rich. I work too much and I have too much left to pay on my student loans.\" \n\nThey lay in each others's arms in silence. \n\n\"I can't provide the life you deserve,\" he said softly. \n\n\"You don't have to provide anything.\" She took his hand. Their fingers intertwined. \"My parents have made it clear that once I'm out of undergrad, I'm on my own. They gave me and my sisters opportunities, but only I am responsible for making a life for myself. I don't need you or them to do anything for me. I just need you to love me.\" \n\n\"We'd have to do the long distance thing.\" \n\n\"Then we'll do the long distance thing.\" \n\n\"We've only known each other for a couple of months.\" \n\n\"You told me you love me already.\" \n\n\"I'm not going to win this one, am I?\" \n\n\"You're never going to win an argument with me, Max.\" Tempest sat up and pulled him close. \"We can make 'us' work, Max. We just have to want it.\" \n\n\"I want 'us',\" he whispered. \"More than anything in the world.\" \n\n\"Good, because so do I.\" Her lips pressed against his desperately. He reached for her, but she surprised him by pulling away. Tempest turned around and giggled. His hands caressed her soft rear end. \"Now send me to breakfast with a pussy full of cum.\""
    ],
    "authorname": "HLD",
    "tags": [
        "tempest and max",
        "overwatch",
        "wedding",
        "quadruplets",
        "quickie",
        "costumes and cosplay"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/a-d-va-the-faire-and-a-waffle-ch-02"
}