{
    "title": "Rebecca's Mature Feet",
    "pages": [
        "My friend Chris and I were both 24 and just finishing college. Just at the beginning of the summer we had planned to take a trip in to the city to visit a venue that was hosting a club night for a benefit. This was all organised by a bunch of student friends and although the idea of going out for a night out into the city was a pain in the ass, I felt obligated to attend with Chris because I was there as support; he was besotted with Carly, one of the organisers and he hoped his attendance would ingratiate him into her favour.\n\nThe main gripe we had about the city was the struggle to get transport home at late hours. Cabs were an option but our \"Hicksville\" town was a fair bit out and the price would have been extortionate. Public transport was not available after 11pm. At Chris's suggestion, one option available to us was to stay over at his aunts (literally two minutes from the venue). He called her and it was arranged, just like that.\n\nRebecca was divorced and living on her own in a two bedroom apartment. Her daughter, Chris' cousin Louise (23), had moved out and was attending college in a different state. I had never met Rebecca before but Chris assured me that she was friendly, easy going, and could be good fun.\n\nThe week before the event, Chris received a notification and an invite to an informal interview for a place on a sought-after course he wanted to attend. This turned out to be a fortunate coincidence for it was on the day after the event and it wasn't too early in the morning and also it was less than two blocks from his aunts place. The plan was for him to attend the interview and I chill about the city while he was in there and then we both kick about in the afternoon before getting the train back.\n\nFast forward to the day of the event, Chris and myself made it into the city for early afternoon. We hung around various spots and had a couple of beers before heading towards his aunt's place. On the way he playfully warned me that she could be a bit quirky with a good sense of humour and that I wasn't to be too uptight about it. Personally speaking, it didn't bother me, I had a tendency to warm to people like that. What he didn't warn me about was how stunning she was. I was expecting to see a frumpish middle-aged woman who'd probably let herself go a little because she was living on her own, but nothing could be further than the truth. What stepped forward to hug, greet and welcome me into her home was an extremely attractive fifty-year-old woman that smelled absolutely divine. She came in close for the hug as she introduced herself and pressed two generous breasts into my chest.\n\n\"Welcome Andrew, it's so nice to meet you!\"\n\nI could sense the quirkiness in her voice straight away.\n\n\"Thanks for letting us stay Rebecca.\" Chris said throwing his bag on the floor in the hallway.\n\n\"Yes thank you very much Ms Henderson...\"\n\nI felt my hand being squeezed before I could finish, \"Rebecca! Andrew, please call me Rebecca.\"\n\nI mumbled thank you again, this time feeling a little more shy as she looked me dead in the eye. It was never my strong point, eye contact. She looked very young for her age and she had a youthful radiance about her. Her eyes were pale, wide and engaging and she had one of those loveable faces that when angry would somehow seem friendly. She wore her brown hair shoulder-lenght and it just brushed the bottom of her neck, which was exposed because of her soft blue V-neck pullover. I got the feeling that she was reading me just as I was reading her and I fought the impulse to look down at her breasts at that moment. She turned to walk into the apartment and after her heels clacked across the wooden floor for a few steps, she leaned against a wall and raised her feet one at a time, to pull them off. From behind, her above-the-knee navy skirt showed off her shapely ass and I felt myself rising to a semi from just looking at her nude-coloured pantyhose legs and feet.\n\n\"What would you guys like? Coffees, maybe a beer?\" She asked, not looking at either of us as she opened the fridge. We opted for the beers and had a pleasant couple of hours talking with her. She was drinking beer too and although there was a lot of to and fro family talk with her and Chris, she made a point of including me in the conversation and politely enquired about my family and my education, and how things were at home etc. She sat at an angle to me with her legs outstretched on a recliner and from my position my eyes were continuously drawn to her stretching and wiggling feet. She was hot as hell and oozed sensuality.\n\nI wasn't sure if I was imagining it, but at one point I could almost swear that she caught me looking because her feet became more active and she kept extending one foot outwards as if pointing at something with her big toe. She then began turning her foot sideways so that the worn sole of her pantyhose was visible to me. I was always a leg man and never had given much attention to feet but the sight of Rebecca's twisting and wiggling in front of me was stirring something up in my loins.\n\nThe conversation got round to Chris's interview the following morning.\n\n\"What time do you need to be up for?\" Rebecca asked.\n\n\"Well, it's at 10.30,\" Chris said, adding, \"so if I got up for nine and left at half-ish? It's only two blocks around the corner but I'd like to get there at least a half an hour early.\"\n\n\"And what about you Andrew?\" She asked turning to me.\n\nChris told her the basic plan we had laid out about me hanging around the city for a bit while he was at the interview.\n\n\"How longs it going to be?\" She asked.\n\n\"Hmmm, I think they're doing two segments and if I'm lucky enough to to get through to the second one there may be an induction, so it could be two hours.\"\n\n\"Well that makes no sense at all.\" Rebecca said, adding,\n\n\"There's no need for Andrew to get up early and walk around the city like a hobo while you're tied up in the interview. There's no problem with him lying-in, here.\"\n\n\"We didn't want to put you out.\" Chris said.\n\n\"Now you're being a jerk.\" Rebecca snapped back, feigning a playful sigh.\n\nSo that was it, all this was decided right in front of me without any input from me whatsoever.\n\nI sat there silent, though trying to show I was attentive, Rebecca sensed this immediately.\n\n\"Sorry Andrew, no one asked. Are you ok with this?\" She giggled as she said it.\n\nI just nodded and said great, thanks.\n\n\"Dont worry, I don't bite!\"\n\nWe drank a couple of more beers and after showering and changing we were ready to leave for the event at around eight pm.\n\n\"I'll probably be in bed by the time you guys get in so have a great night you two, and guys, there's plenty more beer and snacks in the fridge if you guys want, ok?\"\n\nLater on, as it turned out, the night appeared to be a moderate success for Chris. He managed to get to speak to Carly for an extended periods and he was confident that he laid some positive groundwork for a potential hook-up.\n\nWhen we got back to Rebecca's we didn't bother with beer; Chris was on a romantic high and the forthcoming interview was also occupying his focus. We decided to call it a day. Chris had his cousin Louise's bedroom and Rebecca had made me up a makeshift duvet bed on the settee where she had been sitting earlier.\n\nAfter brushing my teeth, and in t-shirt and shorts, I slid under the duvet, slightly exhausted. I turned my head trying to get a more comfortable position on the pillow, and then I saw it. Above my head, on the back cushion of the settee, was a pair of crumpled pantyhose. I immediately felt my heart racing, visions and thoughts were flittering through my mind. Only a few hours ago, these were encasing the sweaty office feet and long legs of Rebecca. I couldnt resist. I reached and pulled them down to my nose, trying to obscure it under the duvet, should anybody come out for a glass of water or anything. I gently pulled to extend the foot of the nylon and closed it around my nostrils, I inhaled deeply.\n\nThe sheer sweaty musk of her working day feet overpowered me as my hardened dick burst through the opening in my shorts. There was a starchy hardness to parts of the sole and toes, where sweat had collected and hardened. Feeling more brave, I moistened part of the toe with my tongue and groaned as the bitterness of foot grime engulfed my saliva. The tip of my knob was becoming more excited and wet, I pulled my shorts back over it, any more excitement and I was likely to lose control and ejaculate. It was best to stop now, I thought, but just before I did, I uncrumpled a bit more and brought the gusset to my nose. The sensation and smells of Rebecca's pussy completely overpowered me, I was lost in the moment and in danger of destroying her duvet. It was time to stop.\n\nBefore I knew it, I woke up the next morning with Rebecca standing looking over me with a coffee in one hand and her pantyhose in the other. She had an expression of puzzlement on her face.\n\n\"Oh Andrew, I am so, so sorry. I can't apologise enough. I'm so embarrassed. It appears I left my dirty pantyhose on the back of the settee and they've somehow fallen down onto your face during the night. The smell must have been terrible, I'm so, so sorry. You poor thing.\"\n\nTrying to cover my own embarrassment, I mumbled that it was ok, thinking that I might have gotten away with it.\n\n\"Ok? Are you sure? It was so, so wrong of me to not clean up after myself, especially when there's a guest.\" She said.\n\nOnce again I quietly said it was ok.\n\n\"Ok? I find that amazing that you weren't bothered by the smell.\"\n\nShe slid her arm into one of the legs and wiggled her fingers into the toe section. She brought it to her nose and sniffed; she jerked her head back.\n\n\"Oh Andrew... I think you may need to see a doctor if you couldn't smell them! I was in a steaming hot office for the whole day yesterday and my poor feet got no air at all. It's all pure sweat! Are you sure you couldn't smell that?\"\n\nI lay there motionless as she placed her pantyhose covered hand on my nose.\n\n\"Take a sniff, are you sure you're ot getting anything?\"\n\nI'm not sure if she could notice my hard-on under the duvet but I meekly sniffed her hand.\n\n\"Sniff harder Andrew!\"\n\nI did.\n\n\"Can you get it now?\" She asked.\n\nI didn't speak, I just nodded for yes.\n\n\"Keep sniffing. Does it smell sweaty and dirty?\"\n\nI nodded again.\n\n\"And do you like that Andrew? Be honest!\"\n\nI nodded and also let out a pleasurable whimper.\n\nThen to my absolute shock, her fingers parted my lips and slid into my mouth.\n\n\"Suck!\"\n\nI began sucking slowly. The full taste of sweat overwhelmed my mouth. I began to lick her fingers furiously.\n\n\"Ooooh... I like that Andrew. Maybe I should put them back on, would you like that?\"\n\nI nodded once again and she withdrew her fingers.\n\nI stayed lying on the settee as she backed away from it and I noticed that she was wearing tight black yoga pants which she began to peel off slowly.\n\n\"Feel free to stroke your cock as you watch me, but don't over do it and come!\" She said in a commanding tone.\n\nI dropped my hand to release my hardened knob from the twisted shorts that choked my groin from the twisting and turning during the night.\n\nShe watched me intently as she slid her black thong down her legs. I could see that her pussy was partially shaven, but nicely trimmed, and her thighs were taut as if they were familiar to a work out or two. I could tell that she enjoyed watching me stroke my cock under the duvet as she pulled her pantyhose on. She was slow and graceful in her movements and I had to stop playing with myself when she stood up to straighten the hose on her legs, it was a sight of perfection. She brought her arms up above her head and in the same motion had removed her top revealing a black lace bra that held two firm mature breasts. I was amazed to see that when she released the catch on her bra, her breasts stayed alert and she had large erect nipples that pointed upwards.\n\n\"I'd like you to get up off the settee and then kneel on the floor in front of me Andrew.\"\n\nAs I did she sat down and raised her legs and rested her feet on my shoulders. I felt a foot brush up and down along my cheek before the toes were placed under my nose.\n\n\"Sniff deeply Andrew.\"\n\nI began and the intoxicating mixture of sweat and leather took over once more. I couldn't get enough. She twisted and arched her foot into every possible angle and scrunched her toes around my nose so that the underside blocked my nostrils and held them there. Thats where the hardened sweat had dried into them and where it stunk the most. She changed from foot to foot and did this all with a bemused look of contentment on her face. She prised my lips apart with her big toe and tried to fit all her toes into my mouth.\n\n\"Saturate my toes Andrew, suck as much sweat as you can gather from them and swirl it around in your mouth before swallowing. I licked and sucked and could feel the dried sweat coming off them. She moaned in pleasure and I noticed her hand drop to her pussy and slide down inside the waistband.\n\nI could not believe how horny I was for her sweaty and smelly feet. As she stroked her pussy, I licked her soles, her ankles, I sucked on her heels and bit gently on the balls of her feet.\n\nShe suddenly withdrew her feet.\n\n\"We have to be mindful of the fact that Chris might only be an hour.\"\n\nShe then opened her legs wider, revealing a wet patch on her gusset. Putting her hand on the back of my head she drew me into it and thrust her pussy to my face. I circled my tongue around the patch as she gasped loudly and the pressed my damp mouth into it.\n\n\"Hold on!\"\n\nShe whimpered as she said it and half-standing lifted her hips from the seat.\n\n\"Quick, pull them down!\"\n\nI grasped at the waistband of her pantyhose and peeled them down to her knees. She eventually pulled them from her feet and opened her legs again offering me an excited wet pussy to lick. She became louder as I darted my finger in and out while I licked her clit for a good solid 15 minutes.\n\n\"Suck my tits.\" She commanded, as she brought my chin up to her huge nipple.\n\nThis drove her wild, as I moistened them with my tongue and began sucking. They seemed to be getting harder and harder as I sucked.\n\nEverything seemed in a rush now because we were conscious of time. Rebecca swung back into a laying position and guided my head once again to her, now soaking pussy. She positioned me over her mouth and the sensation of her tongue on my hot knob was almost too much to bear. I stretched my neck and reached my tongue to her asshole and managed to enter a little bit. This made her jump a little but I think she liked it.\n\nMy knob was hyper-sensitive and I was doing my very best not to come so I felt a little relieved when she prompted me to turn round.\n\n\"Now fuck me!\" She said sternly and she took hold of my dick as I turned and guided it into her pussy. Straight away, I almost felt a little jolt of electricity shoot up my spine as I felt her muscle close around my knob. I began thrusting gently and her hips began to reciprocate in a likewise motion. With each thrust she cooed as if she had no control over it anymore. She then raised her fingers and stuck them in my mouth.\n\n\"Moisten them for me.\"\n\nI licked and smothered them in saliva and then she brought her hand down to her nipples and tweaked them. This drove her wild. I carried on trying to maintain pace in the normal missionary position. This seemed to suit her, she carried on cooing and making loud gasps of pleasure. Just when I felt that she was getting near, I brought her legs up so that her feet were on my face. As I began sucking her toes and licking the soft skin in between them, her thrusts became harder. Not long after, she let out a stifled scream and squeezed her legs hard around my chest as she pumped hard into my groin.\n\nShe caressed her hand along my cheek while she regained her breath. I pulled out.\n\n\"You don't have to.\" She said.\n\nI told her it was ok and started jerking my self.\n\n\"Lie back.\"\n\nI did as she said and felt her lips close around my knob again, which now felt on fire. I reached for her feet and she brought them to me. As the sour sweaty taste filled my mouth again, I licked and sucked every conceivable part of her foot before she tickled the tip of my knob with her tongue and made me come like I had never come before.\n\nExhausted, I flopped down beside her and exhaled. She rolled around to face me and stared into my eyes without saying anything. She had a contented smile.\n\n\"Thank you Andrew. As you can tell, it's been a while.\"\n\n\"I couldn't tell.\" I replied.\n\n\"You're a sweet guy.\"\n\nWe both agreed that we should move and get cleaned up in case Chris came back early. It was good timing, for 15 minutes after I got out of the shower, Chris arrived back.\n\nWe spent another hour there with Rebecca and at every opportune moment within that hour, she would touch me or make a cheeky eye contact and wink when Chris wasn't looking. As we were leaving, Rebecca hugged Chris and did the usual family catch-up reminder stuff for him to to pass on when he got home.\n\nThen she turned to me.\n\n\"It was lovely to meet you Andrew,\" she said as she reached forward to hug me. Chris' phone had rang and he had turned to walk away down the stairs to answer it. As he did I felt her hand slip into my jacket pocket.\n\n\"Here's my pantyhose, sniff them and think of me tonight when you jerk-off, bring them back to me next week and you might be rewarded.\"\n\nShe checked to see if Chris had gone all the way down the stairs before giving me a long sensual kiss and gently squeezing my balls through my jeans. She licked all around my lips with her tongue and winked at me.\n\nI squeezed her butt cheek and walked away with a pressing hard-on.\n\nI think I had just fallen in love with my friends aunt."
    ],
    "authorname": "FantasyFlame",
    "tags": [
        "foot fetish",
        "pantyhose",
        "mature",
        "worship",
        "aunt",
        "nylons",
        "tights"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/rebeccas-mature-feet"
}