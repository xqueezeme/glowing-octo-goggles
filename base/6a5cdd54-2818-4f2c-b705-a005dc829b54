{
    "title": "Transformations - The Farm Ch. 06",
    "pages": [
        "Hello, everyone, this is the final chapter of Transformations: The Farm. We hope you enjoy it, and, as always, comments are welcome! \n\n***** \n\nEven with their enhanced strength, it took Lisa, Jason, Rebecca, and Mary to carry Alex downstairs. \n\nAt some point, he had mercifully passed out. \n\nGwen was holding a chair cushion tight against his groin trying to stop the bleeding. \n\nDemona was a general, barking orders. \n\nBelynda was carrying the demon at arm's length, holding the woman by the throat six feet off the ground. \"Puta loca! Por que? What did he do to you? Ignorant puta!\" \n\nThe demon was unconscious, the result of a bone jarring blow from Belynda's right fist. \n\nEveryone had seemed frozen when Alex's blood began to spurt - everyone but Belynda who seemed to fly through the air to deliver the knock out blow to the demon. \n\nIn the basement, they put Alex on a table. \n\nThis time, there was no order to clear the surgical area - Demona was too focused. \n\n\"Arterial bleed. I need the laser cauterizer...\" \n\nKaren put it in her hand before she could finish the sentence. \n\n\"That's my girl.\" The penlike device buzzed in her hand and a green beam lanced out. \n\nAlex's skin sizzled and blackened. \n\nDemona smiled. \"Got it! Insta-Heal...\" \n\nAgain, Karen handed it to her before she could finish asking. \"You might not be a doctor yet, but fuck if you aren't a great nurse.\" \n\nKaren smiled but never stopped moving. \"I'll get the mini-MRI - you're going to want to check out the vascular system, right?\" \n\nDemona laughed as she sprayed the Insta-Heal. \"Damn, I'm starting to feel obsolete.\" \n\nKaren brought over a hand held unit. \n\nGwen was panting beside the operating table. Her eyes narrowed and she looked at the demon. \n\nThe tiny woman was beginning to wake up. \n\nBelynda held her in a full Nelson. \n\nGwen gritted her teeth. \"Pain.\" \n\nDemona jumped. \"Hey, none of that! Not in my goddamned surgery - you want to play White Witch mind tricks fine, but I draw the line at torture!\" \n\n\"Stay out of this,\" Gwen grumbled as she stalked toward the demon. \"Pain!\" \n\nThe floor shook. \n\nEveryone in the room still technically human: Mikaela, Hailey, Fat Guy, Bicycle Guy, Kim, and Lorraine - all fell to their knees and clutched their heads. \n\nThe hucows in the barn went rigid. \n\nOutside New York City, Constance froze in the middle of doing a filling. \n\nIn Manhattan, Maria Marapova stumbled and almost fell. \n\nAt Stallion's Adult Video, Sugar Tits awoke from a sound sleep. \"Gwen,\" Sugar whispered. \"Stop! You have to stop!\" \n\nBack at the farm, Lisa threw her arms around Gwen. \"Gwen! Honey, please! You'll kill her! Please, can't you see? All the humans are in pain! You have to stop!\" She hugged Gwen close and sobbed. \"Stop, please stop...\" \n\nGwen's eyes opened wide. \"I... what? Oh, my God.\" \n\n\"Don't ever do that again, Gwen. Please, never again,\" Lisa whispered in her ear and cried. \n\nThe humans in the room collapsed. \n\nGwen shook her head and pointed at the demon. \n\nThe little woman just stared at her. \n\nAnd smiled. \n\n*** \n\nGwen stared in the cage at the demon. \n\nThey had taken her to the sub-basement and stripped her. Then they had locked her in the cage where they had kept the cheerleaders. \n\nThe diminutive woman had climbed the bars and hung by her fingers from the roof bars. She was mumbling to herself and staring at Gwen with crazy eyes. \n\n\"What the fuck is she?\" Lisa asked. \n\nThey had all come down to the sub-basement, leaving Demona and Karen to look after Alex. \n\nDespite the now repaired severed artery, he was going to be okay. \n\nThe woman in the cage was completely immune to White Witch mental powers. Jason's mental gifts didn't work either. \n\nGwen sighed. \"The pheromones make her horny, other than that? Nothing works. I've run into immunes before, but nothing like this.\" \n\nLorraine wandered up to Gwen - ever since they had come downstairs, Lorraine and Kim had become increasingly catatonic. The mind control from earlier was wearing off. \n\nLorraine blinked and stared at the woman in the cage. \"How long since your meds?\" \n\nGwen and Lisa both stared at Lorraine. \n\nThe demon giggled. \"Fuck off, slut.\" \n\n\"She's a paranoid schizophrenic. Probably on some powerful meds - which she hasn't had for at least twenty-four hours. She's had a psychotic break,\" Lorraine said in a tired voice. \n\n\"Fuck you! Stop telling my secrets you daughter lovin' freak!\" The demon hissed. \n\nLorraine wobbled on her feet. \"Wait... wait... what did I do? Why did I...\" \n\n\"Lorraine, what do you do for a living?\" Lisa asked. \n\n\"Huh? Psychiatrist. I'm a psychiatrist. Why am I down here?\" Lorraine whispered. \n\nGwen reached out and touched Lorraine's temple. \"Sleep.\" \n\nLorraine collapsed in her arms and Gwen lowered her to the floor. \n\n\"Mom! What did you do to...\" Kim cried out. \n\nGwen pointed at her without looking at her. \"You too... sleep.\" \n\nKim collapsed on the floor beside her mother. \n\n\"Schizophrenic?\" Gwen said. \n\n\"Certified nut case,\" the demon grumbled. \"Did I bite it off? I wanted to eat it. I'm fucking hungry.\" She burst into laughter. \"Eat a dick, Lita... Eat a dick!\" \n\n\"The Church would have us kill her immediately,\" Demona said behind them. \n\nGwen spun around. \"Is Alex okay?\" \n\n\"Is Alex okay? Still got a dick?\" The demon cackled from the cage, mocking Gwen. \n\n\"Shut the fuck up, or I swear to God I'll tear your goddamned eyes out!\" Gwen screamed. \n\nThe demon laughed and went back to climbing the cage bars. \n\n\"Yes,\" Demona said. \"Alex is fine. He'll be back to pile driving pussy by this evening.\" \n\nDemona held up a purse. \"Went up and found this in my van.\" She opened the purse and pulled out a wallet. She opened it. \"Loony Tunes here's real name is Lita Price, 24, from Jersey. Slutz-Net pulled up her psych report - just like sleeping mommy said: Paranoid Schizophrenic with bouts of Psychosis. Completely controlled if she takes her meds.\" She held up a bottle of pills. \"Bottle is full. She's been off them for a while.\" \n\n\"I was fine till you fuckers kidnapped me,\" Lita said. She had hooked her slim legs in the roof bars and hung upside down. \n\nGwen smiled. \"Whatever she is, she's immune to mind control. The Church mandates the lobotomizer...\" \n\n\"Or, we can brain fuck her the old fashioned way: let Slutz-Net stick it's needles in her brain and cure her psychosis. As the only medical authority in the building, I say Slutz-Net.\" \n\n\"Overruled,\" Gwen said coldly. \n\n\"Look, 'White Bitch', you hold a hell of sway, but I'm the goddamned doctor here. Get your head out of your cute ass and use it for something other than a butt plug.\" \n\nGwen whirled. \n\nBut, the shorter doctor stood her ground. \"By Christ, I gave an oath to do no harm. Now, I've bent that fucking rule a lot over the last few years, but I'm fucked if I'll turn that little hellspawn into an imbecile just because you're feeling bitchy.\" \n\n\"I'll do it myself,\" Gwen said through gritted teeth. \n\n\"No, you won't,\" Alex said. He stumbled naked in the doors from the stairs. \n\nDemona threw her hands in the air. \"Jesus! Nobody fucking listens to me! Get your ass back in bed!\" \n\nAlex leaned against the door jamb. \"I'm okay.\" \n\nRebecca was standing behind him, steadying him. \n\nGwen ran to him and hugged him tight. \n\n\"Shh, it's okay now. I'm fine.\" \n\nGwen sobbed and held on, shaking her head. \"She hurt you. She has to suffer.\" \n\n\"No,\" Alex said. \"I mean it, Gwen. She's human, she's scared, and she's obviously sick...\" \n\n\"Paranoid Schizophrenic with bouts of Psychosis,\" Demona added. \n\n\"Yeah... what she said,\" Alex said. \n\n\"Hey! You fuckers better do that 'lobsterization' or whatever you called it,\" Lita yelled as she dropped to the floor of the cell. \"'Cause if I get out of this fucking cage? I'll kill every one of you motherfuckers!\" \n\nGwen spun and growled, \"Oh, she's fucking dead!\" \n\nAlex put his arm around her waist and pulled her back. \"No. Shh. Stop. We're not hurting her. That's all there is to it.\" He kissed the side of Gwen's neck. \"Don't make me pull rank.\" \n\n\"You're not the boss of me,\" Gwen whispered. \n\n\"No,\" Alex whispered. \"But, just this once? Let's pretend I am.\" \n\nGwen slumped back against him. \n\nAlex looked at Belynda. \"Can you get her out of there and put her on a table?\" \n\nBelynda cracked her knuckles. \"With fucking pleasure.\" \n\n\"No!\" Jason said and grabbed her hand. \"That woman is dangerous. I'm not letting Belynda get anywhere near her.\" \n\nBelynda looked at him in astonishment for a moment. Then she burst out laughing. \"Papi, I really appreciate your concern, and I love you for it - but I could dribble that muppet like a basketball if I wanted.\" \n\n\"I'm not going to let you get hurt...\" \n\nA soft 'Pfft!' sound came from near the cage. \n\nEveryone turned and looked. \n\nDemona was holding a small gun with a little CO2 tank on the side. \n\nIn the cage, Lita looked down at her left boob - there was a small dart sticking in it just above her nipple. She blinked. \"You fucking bitch,\" she said and then fell unconscious on the cell floor. \n\nDemona blew imaginary smoke from the barrel of the tranquilizer gun. She looked around and smiled. \"What? You forgetting it was little me who abducted her in the first place?\" \n\n*** \n\nKim opened her eyes. \n\nThe rubber nurse was smiling at her. \"How are you feeling, sweetie?\" \n\n\"Mmmph,\" Kim groaned. The red rubber ball gag was back in her mouth. \n\nThen she screamed. \n\nShe was strapped spread eagle on an X shaped frame suspended a couple of feet in the air. She was vertical. \n\nSomething was inside her. \n\nShe looked down. \n\nA thick pink dildo mounted on a robotic arm was sticking a few inches inside her pussy. It vibrated and moved slowly in and out, in and out. \n\nShe struggled against the bonds, but all she managed to do was work the dildo deeper inside her. \n\nShe didn't recognize the room - it was obviously another part of the sub-basement she hadn't seen. \n\nThere was a soft whir, whir, whir sound coming from somewhere nearby. \n\nShe turned her head slightly and saw where it was coming from. \n\nThere were three booths along the back wall. \n\nA woman was in each gray box. The first booth held a fortyish brunette with a dark tan. The second, a twenty-something platinum blonde, and the third a twenty-something brunette with tattoos. \n\nThe women all had enormous breasts. \n\nBreast pumps were attached to their nipples, and a steady flow of white milk was flowing into the pumps - the source of the whirring sound. \n\n\"Don't mind them,\" Nurse Karen said as she worked on a tablet. \"Early victims of the hucow formula - see it was supposed to be temporary, but the original formula was permanent for some people. Because of their genetics. Dr. Demona figured out the problem and fixed the formula, so it doesn't happen anymore. But, these poor things will be hucows forever - that is unless the doctor can figure out a cure. She just might. She's brilliant.\" \n\nKaren put down the tablet and smiled. \"Now, just to let you know what's going to happen to you?\" She rubbed Kim's hair. \"We're waiting on your mom to finish her conditioning - Gwen says Lorraine is going to be your mistress. Which is kind of sweet in a sick, twisted sort of way.\" \n\nKim felt a wave of revulsion - memories of what they had done on the floor upstairs came flooding back. She wanted to throw up. \n\n\"So, we have to wait until your mom comes in to find out how your other mods are going to go - I mean there's going to be some breast augmentation. You're practically flat chested and, man, does the Church like boobs.\" She hefted her own melons. \"I have to admit: I love these funbags.\" She looked back at the tablet. \"Other than that, there'll be slutifier to make you nice and horny - trust me, it's an experience. I could fuck a football team right now.\" \n\nKim cried behind the gag. \n\nKaren rolled her eyes. \"Oh, come on. It's fun. I'm serious. You think it's going to be terrible being a total slut, but it really isn't. Kind of liberating. And, then, of course, either Gwen or Lisa is going to do your brain mods. Hard to tell what your mom is going to want for you, but I think you can expect to be doing a lot more of that taboo show you put on upstairs - totally hot, by the way.\" \n\nKim screamed anew. \n\n*** \n\nLorraine wasn't sure when she actually woke up. Consciousness returned in phases. \n\nThe smell of the coffee helped. \n\nShe looked up to see Gwen sitting across the kitchen table from her. \"Go ahead. Drink it. You could use the caffeine.\" \n\nLorraine looked around the farmhouse kitchen. \"Where...\" Her eyes grew wide. \"My God! Where's Kim?\" \n\n\"Safe. Downstairs. There's a very competent nurse with her.\" Gwen smiled. \n\nLorraine looked down at the steaming cup of coffee. She hesitated. \n\n\"Oh, for goodness sake, why does everyone believe I'm going to drug them? I don't have to drug people - well, most people anyway. Drink.\" \n\nLorraine picked up the cup and took a sip. It warmed her. She hadn't realized how cold she was. \n\n\"Was that the first time you had group sex?\" Gwen asked. \n\n\"Yes. I...\" Her eyes grew wide. Alex, Jason, Rebecca - she had made love to all of them! And... \n\nLorraine almost dropped the cup. \"No. Oh, no... Oh, Jesus, what did I do?\" \n\n\"Relax, Doctor.\" \n\n\"But.. I... Oh, God, I can never look at Kim again.\" \n\n\"Don't be silly. Of course you can. She belongs to you. Literally. I'm giving her to you as a present.\" \n\n\"You're... what!?\" \n\n\"Your daughter doesn't have the intellect to be professional caste - in the New World Order, everyone will have their place. Kim's place will be on her back pleasuring anyone who wants her.\" \n\n\"How dare you! My daughter is not going to be some common whore!\" Lorraine almost threw her coffee in Gwen's face. \n\n\"Temper temper, Doctor. You see the 'whore' label as something to be ashamed of. It isn't. Technically, I'm whore caste myself. Though, as a mind controller, I enjoy certain privileges your daughter will never share. She simply lacks the intelligence to be anything more than a slut,\" Gwen said without malice or sarcasm. \"You on the other hand - I've discussed your case with my superiors. They are very interested in what you can bring to the table, Doctor.\" \n\n\"What I can bring to the table? Who the fuck are you people?\" \n\nGwen smiled and explained. \n\n*** \n\nAfter a great deal of coaxing, Alex had agreed to be sedated. Demona needed him to rest. He lay on his back sleeping on an operating table. \n\nBeside him, Lita was strapped to table two. \n\nDemona rubbed her long, stringy hair. \"Poor thing. You don't even take care of yourself.\" She looked up at the ceiling. \"Slutz-Net?\" \n\n\"Online,\" the disembodied voice answered. \n\n\"Subject Lita - begin brain conditioning. Alleviate the Schizophrenia and eliminate Psychotic behavior - leave her intact as much as possible beyond that.\" \n\n\"Acknowledged.\" \n\nCeiling tiles slid open above the operating table. \n\nTwo robotic arms descended, each with long thin golden needles mounted in gun-like devices. \n\nThe arms moved in a blur of motion. \n\nFat Guy and Bicycle Man were shackled together on the floor and they cried out behind their gags - the robot arms were driving the golden needles into Lita's skull with a crunching sound, buzzing, and then withdrawing them at lightning speed. \n\nDemona looked down at their terrified expressions. \"Take it easy - we're curing her mental illnesses. It looks a lot worse than it is.\" \n\nA third arm dropped down and placed a virtual reality headset on Lita's face. \n\n\"There. She'll cook for awhile.\" Demona looked down at the two men and winked. \"I'll deal with you two later.\" \n\nRebecca was watching nearby. \n\nDemona walked over and took her hand. \"Your turn, babe.\" \n\n\"Huh?\" Rebecca looked confused. \"I'm already one of you.\" \n\nDemona led her toward table three. \"Yes, well, I have a little something for you. Something the brainiacs down in Havana dreamed up... and then fucked up, and then I fixed.\" \n\n\"Uhh,\" she looked around nervously. \"Where's Gwen?\" \n\nDemona laughed. \"Doing a brain fuck. Relax, I'm not giving you two extra tits or anything. Have a seat.\" \n\n\"I really think I should talk to my wife first.\" \n\n\"Dang, you pussy whipped slut - do you only do what Gwen says?\" \n\n\"Well, no, it's just...\" She let herself be put on the table. \n\n\"She knows what I'm going to do. Trust me, you'll love it.\" \n\nThe IV went in Rebecca's arm before she even knew what was happening. \"I... wait... Demona... I don't want...\" \n\nDemona rubbed the woman's forehead. \"Hey, we have to do this. Gwen and the Church have plans for you. Sometimes we have to do things we don't like - not often, but sometimes. Trust me, this won't hurt and you're going to love the affect.\" \n\nRebecca gasped as the straps went around her wrists and ankles. \"Wait! Why are you...\" Her voice trailed off as the Propofol hit her vein. \n\n*** \n\n\"Well,\" Gwen asked Lorraine in the kitchen. \"What do you think?\" \n\nLorraine stared straight ahead. \"I... I can't do this.\" \n\n\"Yes. You can, and you will.\" \n\n\"She's my daughter!\" Lorraine cried. \n\n\"Think about what her life is going to be, Lorraine. Mediocrity followed by servitude. If you could see the street in Havana right now, Lorraine, you'd be thanking me for letting you save her.\" \n\n\"As my sex slave! How is that saving her, for fuck's sake!?\" \n\n\"Street Whores are seven feet tall in their heels. J cup breasts. They walk the street eighteen hours a day, fucking anyone who wants them. They carry bottles of Cunt Clean, so they can douche out their twats between johns. That will be her life, every day, forever - not just a few years, a thousand years, maybe a million. Covered in pornographic tattoos - advertising their specialties.\" Gwen leaned across the table. \"Versus being your property. You can take care of her, watch over her. You'll choose who she fucks - you can save her.\" \n\n\"You're...\" \n\n\"Monsters? Yes, I know,\" Gwen said and rolled her eyes. \"You know how many times I have this conversation, Lorraine?\" \n\nLorraine slumped forward with her arms stretched out on the table. \n\nGwen held her hands. \n\nShe didn't pull away. \n\nGwen smiled. \"You see, don't you? If it wasn't for Kim, you'd accept my offer, wouldn't you?\" \n\nLorraine closed her eyes and drew in a deep breath. \"Yes. Goddamn you. But, that's my choice - you aren't giving Kim a choice.\" \n\n\"No. You have that. You're dozens of IQ points smarter than she is, and you know it.\" \n\nLorraine pursed her lips. \"What about my other children?\" \n\nGwen leaned back. \"They will be left alone - the Church only takes adults. Until they are eighteen, they will be safe. Protected, even. They are preparing boarding schools in the Swiss Alps - the last generation of humans will be educated there until they are of age.\" \n\n\"And then what?\" \n\nGwen shrugged. \"Some will be free to decide. Others will not have a choice. It will depend on them.\" \n\n\"I want guarantees. I want my other children to be, what is it? Professional caste?\" \n\nGwen raised an eyebrow. \"Bargaining? Really? I've extended a courtesy to you thus far, but you want more?\" \n\n\"Yes. You want me to go along willingly? I want all my children to be with me.\" \n\nGwen smiled. \"As slaves?\" \n\nLorraine swallowed. \"Yes. At least I can protect them.\" \n\nGwen leaned back and steepled her fingers. \"They would have to remain with their father and away from you until they are of age.\" \n\n\"Fine.\" \n\nGwen licked her lips. \"You do understand, I can make you accept my original offer - I don't have to agree to this.\" \n\n\"Yes, you do. You want me to choose this. I don't know why you want it to be my choice, but you do. So, that's my bargain. Otherwise, just rip open my brain or whatever you do.\" ",
        "Gwen leaned forward and grinned. \"You will willingly do the Church's work? No questions, no hesitation? No matter how evil the request?\" \n\nLorraine blinked. \"Yes.\" \n\n\"Alright, Lorraine. After you and Kim are processed and she is bound to you, you're going to a new life. Your name will be Dr. Lorraine Love...\" \n\n\"Doctor Love? My name is going to be 'Doctor Love'?\" \n\nGwen laughed. \"Yes. You're going to teach courses on Human Sexuality at Ithaca College. And, you're going to maintain your own practice on the side. We're going to put you in a house - a mansion really. You'll be next door to Stacie Fuchs - another tasty MILF we recently created. Together, you are going to corrupt suburbia. You're going to create infidelity, break up homes, turn innocents into willing sex slaves.\" \n\nLorraine closed her eyes and swallowed. \"And, my children will be given to me to decide their fate when they're eighteen, not the Church?\" \n\n\"Yes. They will be yours.\" \n\n\"I'll do it,\" Lorraine said with a trembling voice. \n\nGwen smiled. \"I'm going to reach inside your mind now...\" \n\n\"I told you I'd do it! I don't need you to do that!\" Lorraine cried. \n\n\"Lorraine, I'm simply going to turn off your morality - you'll still be you. Just a sociopath.\" \n\n\"I don't need you to do that.\" \n\n\"Yes, you do. Trust me. You're going to love this,\" Gwen whispered. \n\nLorraine's head fell forward, almost striking the table. \n\n\"Calling Dr. Love?\" Gwen laughed. \n\nLorraine's mind cleared. She felt so much better! Actually, she felt fucking incredible. She leaned back in her chair and licked her lips. \"Mmm, wow, I could get used to this.\" She looked longingly at Gwen's big breasts in their white latex sheath. \"So, do I get big tits like those?\" \n\nGwen laughed. \"Not quite this size. But, you're going to be very impressive.\" \n\n*** \n\nMary watched Demona perform some sort of eye surgery on Rebecca. It didn't take long - most of it was done with a contraption she fit over the sleeping woman's face. She finished by removing the device and applying bandages over Rebecca's eyes. \n\n\"Change her eye color?\" Mary asked when Demona stepped close by. \n\n\"HIPAA laws, babe. I can't tell you shit.\" Demona began scrubbing her hands in the sink. \n\n\"Oh. Sorry...\" \n\nDemona burst out laughing. \"A joke, honey. Fuck HIPAA, fuck the law. She needed some mods for her new job at the network - I'll explain them when she wakes up. Now, as for you? Pick a table.\" \n\n\"Me!? My mod is hanging between my thighs right now...\" \n\n\"Yeah, I know. But, you haven't read the user's manual.\" Demona said as she knelt by Fat Guy. She began undoing his shackles. \"On your feet, tubby.\" \n\nThe man whined behind his gag. \n\n\"Yeah, yeah, whatever. I read the full Church report on you - living in your parents' basement at your age? You're more turned on than scared.\" She heaved and pulled him to his feet. \"Go on, run away if you want.\" \n\nFat Guy stood and looked from side to side, blinking. \n\n\"Thought not. Most action you've had in your entire life?\" She winked at Mary. \"Dudes are so easy. Long as they smell pussy, they'll sell their soul. You pick a table yet?\" \n\nMary shrugged and started to sit on a table next to Rebecca's. \n\n\"Not you. Him.\" She shoved Fat Guy toward the table. \"Strip him and strap him down.\" \n\nFat Guy looked up at Mary with a panicked look. \n\nMary smiled. \"Sorry. Look, everything they do makes you feel awesome in the end. Just go with it.\" \n\nShe knelt down and undid his pants. She yanked them down along with his underwear. \n\nHis small dick was hiding in his thick pubes. \n\nShe stood up and pulled his t-shirt over his head. \n\nHe looked miserable. \n\nMary shook her head. \"So, you're fat? So what? Nobody cares. Nobody is staring. We're all in the same boat. I got a summer sausage hanging down in front of my quim.\" She leaned him back gently and strapped him down. \n\nShe rubbed his hair out of his eyes. \"Okay, he's ready.\" \n\nDemona stepped in front of her and smiled up into her face. \"Wow, they made you tall. Open up.\" \n\n\"Huh?\" \n\n\"Mouth. Open,\" Demona said. \n\nMary opened her mouth. \n\n\"You use whitening strips?\" \n\n\"Uhh, sometimes,\" Mary mumbled around Demona's fingers in her mouth. \n\n\"They're bright. That's some pretty teeth.\" She pressed the gums in front of Mary's canines. \"Feel that?\" \n\nMary frowned. It felt like there was two lumps under her gums there. \"What the fuck?\" \n\nDemona pulled her fingers out of Mary's mouth. \"Futanari Formula 1 - Futa cum turns girls into futanari, turns boys into bimbo girls.\" She picked up a thin probe and turned back to Mary. \"Futanari Formula 2, which you got - Futa cum doesn't cause a transformation. But...\" She gently probed the lumps on Mary's gums. \"Okay, I want you to imagine you're pushing your canines out of your mouth - like if you had little pneumatic pumps up there that could cause them to slide down.\" \n\nMary thought about it. Nothing happened. \n\n\"Try again. Really concentrate. Like you wanna just shoot those pearly whites right out of your mouth.\" She pressed with the probe. \n\nSomething moved in Mary's mouth! \n\nShe squeaked a little in surprise. \n\nDemona laughed and clapped. \"Oh, baby, look at those fangs!\" She reached behind her and picked up a small mirror. \n\nMary looked at her reflection in disbelief: two pearly white fangs about an inch long had slid out over her canines. \"Vampire!? You made me a vampire!?\" \n\nDemona giggled. \"No, vampire's suck, you blow, honey. Venom. Futanari venom. You bite a girl with these beauties? She turns into a hot Formula 2 Futanari slut just like you.\" \n\nMary turned her face to the side, looking at the fangs in profile. \n\nDemona ran her finger up Fat Guy's naked thigh. \n\n\"Care to guess what happens to a guy you inject?\" \n\nFat Guy went wide-eyed. He screamed behind the gag. \n\nDemona stepped back. \n\nMary looked down at the guy on the table. \"Oh, I couldn't - he's terrified.\" \n\n\"Oh, yeah? Look at his mini-cock.\" \n\nScreaming and thrashing he might be, but he was also hard. \n\nMary laughed. \"Oh, shit.\" \n\n\"Go on. He'll adapt.\" \n\nMary leaned over him. She could taste something slightly bitter dripping from her fangs. Now she was getting turned on. She felt like a predator stalking prey. \"Where? Does it matter?\" \n\nDemona stroked the back of Mary's neck. \"Anywhere you like. It's a retro-virus. It'll burn through him like a wild fire. Go on.\" \n\nMary giggled. She reached out and lifted his smallish sack. She rubbed the skin under his balls with her nail. \"Even here.\" \n\nDemona nodded. \"Sure. I mean, he's going to need to get used to having his crotch penetrated. Might as well start with your fangs.\" \n\nMary was breathing hard. She made herself stop. \"Will it hurt him?\" \n\nDemona rolled her eyes. \"Try it and find out.\" \n\nMary licked her dripping fangs. She pushed her mouth between his chubby thighs and bit down on the skin between his balls and ass. Her teeth slid into his skin. \n\nFat Guy screamed. \n\nMary could feel something throbbing and pumping under her upper lip. \n\nMy venom! Mary thought. I'm filling him with my venom. \n\nHer pussy spasmed and her Futa cock began to rise. \n\nFat Guy stopped screaming behind the gag. \n\nInstead, he was moaning. \n\nMary felt muscles contract in his groin, and suddenly warm cum was sliding down his dick onto her cheek. \n\nHe liked it! Jesus, it made him cum! \n\nDemona rubbed Mary's hair as she stroked Fat Guy's softening cock. \"Mmm, already shrinking.\" \n\n*** \n\nA couple of hours later, Rebecca woke up and opened her eyes to darkness. She screamed. \n\n\"No! No! Honey! It's the bandages!\" Demona said from somewhere in the darkness. \n\n\"Blind! I'm blind!\" \n\n\"No, honey. I promise. It's the bandages. Just hang on. The healing was instant, but I didn't want your eyes to get any light until they had recovered from the trauma.\" Demona whispered. \n\nRebecca felt adhesive pulling from her eyebrows. \n\nBright light streamed in as the left bandage was removed. \n\n\"Close your eyes,\" Demona whispered. \n\nRebecca closed them and felt the right bandage lift from her eye. \n\n\"Okay, slowly now. Nice and slow. Open them.\" \n\nThe light wasn't so blinding now. \n\nShe breathed out a sigh of relief. She could see the basement ceiling above her. \"Scared the shit out of me.\" She blinked. \"What did you do to my eyes?\" \n\nDemona stood back. \"Wow. Those look amazing!\" \n\n\"Huh?\" \n\nDemona held a mirror in front of her. \n\nRebecca gasped. Pale blue eyes stared back at her. \"Fuck.\" \n\n\"Sorry, I couldn't get your original eye color. They have to be blue. Turns out the blue light frequency influences the dorsolateral prefrontal cortex and the insula...\" \n\n\"Huh?\" \n\n\"The dorsolateral...where the brain is changed during hypnosis - never mind the jargon.\" \n\nRebecca turned her head slightly. The blue irises of her eyes were... moving. \"Is that... are they supposed to move like that?\" \n\n\"Yes. Keep watching.\" \n\nThey were changing color subtley, going from a light, almost glowing blue white to a deeper ocean blue and back again. \"Oh... wow. Umm, they're pretty and all, but...\" \n\n\"You might say: hypnotic?\" Demona asked and hugged her. \n\nRebecca bit her lower lip. \"Yeah, I guess.\" \n\nDemona was giggling like a schoolgirl. She unstrapped Rebecca from the table. \"We need a human. Who's still human?\" She turned around and around looking the room over. \n\nRebecca looked at the naked Fat Guy on the next table. His hair was falling out and he was moaning. \n\nHis cock was gone! It had disappeared in his mass of pubic hair which was falling off in wisps. \n\n\"No, not him... her, I mean,\" Demona said. \"Ah-ha!\" She dragged Rebecca to where Bicycle Guy was sitting on the floor. \n\nHe looked up in terror. \n\nShe pointed at him and looked at Rebecca. \"Him. Do your thing!\" \n\n\"My thing?\" \n\nDemona sighed. \"Just stare into his eyes for a few seconds.\" \n\nRebecca let herself be lowered to her knees by Demona in front of the terrified man. \n\nHe looked at her wide-eyed. \n\nRebecca stared into his eyes. \n\nHis pupils relaxed and dilated. His lids lowered slightly. \n\n\"Now what?\" Rebecca asked. \n\n\"Tell him to do something. Quack like a duck. Sing. Cross his eyes. Anything.\" \n\n\"Uhh...\" \n\n\"Make him lose control of his body. Piss himself. Fart, I don't know.\" \n\nRebecca stared into his eyes. \"Get hard. Get hard for me.\" \n\nHe moaned, his bicycle shorts tenting and becoming far too small. \n\nRebecca laughed as the shorts distended. \n\nDemona was practically dancing with glee beside her. \n\nRebecca grinned with mischief. \"Mmm, nice. Now... cum.\" \n\nHis eyes rolled back in his head and his muscles went taut. A dark stain spread out from the bulge in his shorts. \n\nRebecca patted his cheek. \"Good boy!\" She stood up. \n\nDemona grabbed her and hugged her. \"Cool, huh?\" \n\n\"I can hypnotize people. Holy shit!\" Rebecca laughed. \n\n\"Yeah, you can. Anybody who looks into your eyes... even on TV.\" Demona arched an eyebrow and winked. \n\nRebecca hissed in a breath. \"You mean, if I'm on TV, say as a news anchor, and I tell people to do something...\" \n\n\"They'll do whatever you tell them. And, they'll think it was their idea.\" \n\n*** \n\nThe basement surgery grew quiet after a while. Demona and the others headed upstairs. \n\nFat Guy, who now looked more like an overweight shemale was moaning softly in her sleep. \n\nBicycle Man was passed out on the floor in his shackles. \n\nAlex slept soundly. \n\n\"Hello? Anybody? Is anybody here?\" a small voice asked. \n\nAlex's eyes fluttered open in the dark room. Monitors beeped nearby, recording heartbeat and blood pressure. The ceiling glowed in green, blue, and red from the LED displays by each operating table. \n\nHe sighed and closed his eyes again. \n\n\"Please? Please somebody. I'm scared.\" \n\nAlex snapped awake. It was a woman's voice, small and sobbing somewhere in the darkness. \n\nHe rolled onto his feet. \n\nThe demon woman was strapped to a nearby table. She was the source of the small, sweet voice. \n\nThe virtual reality headset had been removed. \n\nThe golden needles on the robot arms had withdrawn back into the ceiling. \n\nTears were streaming down her face. \n\n\"Lita? What's wrong?\" Alex asked as his feet touched the floor. \n\nThe diminutive woman squeaked in fear. \"No, no, no... please don't hurt me.\" \n\nThis is some kind of trick, Alex thought. She was trying to lure him close - probably to rip his throat out with her teeth if she could. \n\nHe stood over her. \n\nHer eyes looked terrified. \n\nWater suddenly poured off the bed onto the floor - she had pissed herself. \n\nNobody is that good an actress, Alex thought. \"Hey, hey, it's okay, Lita. Nobody is going to hurt you...\" \n\n\"Whoremasters don't hurt women. They never hurt women. The woman on the video said so! Please don't hurt me,\" Lita pleaded. \n\nIf she bites me, I'm going to feel like a fucking moron, Alex thought. \"The woman on the video they made you watch told you the truth. Cum Slut Cathy doesn't lie. Neither do I. I won't hurt you, I promise.\" \n\nLita sniffled and looked at him with bloodshot eyes. \"O... Okay.\" Her head was held in place with a leather strap. \n\nAlex reached to undo it. He hesitated. \"Lita, if I undo some of these? You promise you won't try to hurt me?\" \n\nShe swallowed. \"No! I won't. Please...\" \n\nAlex unbuckled the strap around her forehead. \n\n\"Thank you,\" she whispered. \n\nHe reached out and stroked her forehead. \n\nShe shivered at his touch, but she didn't pull away. \n\n\"I'm whore caste,\" she whispered. \"I'll obey you, I promise.\" \n\nAlex smiled. \"Shh, come on now. We can worry about all that later. How do you feel?\" \n\n\"Scared.\" \n\n\"Don't be.\" \n\n\"Not just of you and this place. I feel different. My head... I don't hear,\" her voice dropped to a whisper. \"I don't hear the voices anymore.\" \n\nAlex nodded. \"SlutzNet, status of subject Lita?\" \n\nA voice came from the ceiling. \"Subject Lita has normal brain function. Breast augmentation to G cup complete. Gluteus expanded to within 20% symmetry with breasts. Waist circumference now 43 centimeters burlesque proportion. Thighs lengthened by three centimeters. Calves lengthened by two centimeters. Permanent makeup injected under skin. Gag reflex removed. Womb opened for access. Sterilized. Libido amped up 75%. Mental conditioning complete, knowledge of all advanced sexual techniques. Whore caste designation: Girlfriend Experience Whore. Extra features...\" \n\n\"Stop,\" Alex said. \"Is subject Lita a danger to herself or others?\" \n\n\"Define danger.\" \n\nAlex rolled his eyes. \"Is she going to try to bite my dick off again?\" \n\n\"No! I won't! I promise!\" Lita cried. \n\n\"Subject Lita is incapable of physical violence against human or transformed.\" \n\nAlex smiled. \"Poor thing. No wonder you're scared.\" \n\n\"Girlfriend Experience Whore?\" Lita asked. \n\n\"You know what that is, right?\" \n\nShe nodded. \"That means I stay at the airport in Havana until a john gets off a plane and requests the Girlfriend Experience. Then they wipe my mind, make me think I came with him on the plane. Make me think I'm his girlfriend, and he uses me however he wants until he's ready to go back home. Then he turns me back in and they wipe my brain again until the next customer.\" \n\nAlex nodded. He hated that one. The look on the girl's face when the guy she thinks she's known forever, the guy she's in love with, just drops her off at the airport like somebody dropping off their rental car. \n\nIt was goddamned cruel - those few minutes when the girl realizes everything she knows is a lie... even if the mind wipe removes the anguish she experiences? Even if the girl forgets? The whoremaster never forgets it. \n\nAlex began undoing her straps. \n\n\"I don't want to be one of those, Alex,\" she whispered. \n\nAlex smiled weakly. \"I'm sorry, honey. I don't like it either.\" \n\nHe helped her sit up. \n\nHer stringy hair was gone. It was now a long, wavy mane of chestnut brown hair. \n\nShe threw herself off the table and wrapped herself around his neck. \n\nFuck! She got me again! Goddamn it! Alex was more angry at himself than her. He braced himself for the feel of her teeth sinking into his throat. \n\nBut, though her lips touched his skin, her teeth did not. \n\nShe held on and shook, sobbing in misery against his neck. \"Please don't let them do that to me, Alex! Please! I'll do anything. I'll be good to you. I'll be better than good.\" \n\nHer sobs turned into wails as she held on tight. \n\nAlex put his arm around her and held her close. \"Lita. I can't do anything about that. The Church decides. It won't be so bad,\" he lied. \n\n\"I can't go through that. I just can't.\" \n\nHe rocked her in his big arms. \"When you get to Havana, a whoremaster will claim you. Whoever takes you, they'll care of you. You'll see...\" \n\n\"I'm sorry I hurt you. Please don't send me there!\" \n\nShe was broken. SlutzNet had undone her illness, but it had robbed her of her spirit at the same time. \n\nShe needed someone to keep her safe so that the fiery Lita could come back - just without the psychosis. \n\n\"Fuck. Well, shit.\" He stood up and carried her. \n\n\"Where are we going?\" She mumbled against his neck. \n\n\"First? Shower. As cute as you are, I'm not into pee...\" \n\n\"I'm sorry!\" She cried against his shoulder. \n\n\"Stop it. Stop apologizing. You got scared and you peed. From now on, anything scares you? You come to me.\" \n\n\"Okay,\" she whispered. Then she leaned back away from him. \"Wait. What are you saying?\" \n\n\"You're mine... well, we're each other's... I'm claiming you.\" \n\nShe burst into fresh tears. \n\n\"Stop that. I mean it. I'm not attracted to weakness. And, I don't want you to be either. Not even in yourself. Your wives are fierce - one of them is downright terrifying. You better find some spine or Gwen will eat you alive.\" \n\nShe nodded and hugged him tight. \"Just tell me it's going to be okay.\" \n\nHe laughed. \"It'll be fine... till Gwen finds out. And, then...\" \n\n*** \n\nLorraine Love looked at her naked body in the bedroom mirror. She looked five years younger. Her skin was flawless. The G cup breasts were firm - they barely moved when she walked. \n\nShe had a heart shaped ass just as firm, and an hourglass figure that would drive men insane. \n\nSo what if she had to be an evil slut doing the Church's bidding? She was into kinky shit now. \n\nAll kinds of kinky shit. She smiled and rubbed her thick clit and hairless pussy. \n\nShe held up her wet fingers and licked her juices. Sweet! Almost as good as Kim's. \n\nShe smiled and felt a tremor go through her privates. \n\nBeing evil and perverted was kind of fucking fun. \n\nFrom her Psychiatric background, she knew this was the complete liberation of her id and the suppression of that annoying super ego. What she wanted, she would take. From now on, her pleasure, her needs were priority one. \n\n\"That's right,\" the White Witch, Gwen said behind her. \n\nShe smiled at the woman's reflection at winked. \"Naughty being in my mind like that.\" \n\n\"Oh, I like it inside you,\" Gwen said. She ran a hand up the inside of Lorraine's thigh from behind. She cupped her sex. \"So wet.\" \n\n\"I'm going to stay that way? Right?\" \n\n\"Always ready to fuck. That's us,\" Gwen laughed. She rubbed Lorraine's clit. \n\nThe Psychiatrist gasped. \n\n\"Mmm, definitely Dr. Love. That's a perfect name for you.\" Gwen turned her around and kissed her. She raised her hand from Lorraine's pussy and eased a middle finger into her ass. \n\n\"Unnh... God, never thought that could feel so good.\" \n\nGwen smiled at her. \"Just think what it's going to be like with Alex's cock in your pussy and Jason fucking this tight little butt?\" \n\n\"Oh, God, can I?\" \n\n\"Of course. They're both very into you.\" \n",
        "\"You don't mind?\" \n\nGwen laughed. \"Don't be silly. I get off on things like that. You will too.\" She licked Lorraine's lips. \"Would you mind if I do nasty things to Kim at the same time?\" \n\nLorraine laughed. \"Knock yourself out. I'd love to watch her in action.\" \n\n\"Good answer. I think you're ready.\" \n\n\"Ready?\" \n\n\"To head downstairs and supervise your daughter's transformation.\" \n\n*** \n\nAlex held Lita's hand and led her to the sub-basement. The room was empty, but he could see light coming from the back room. \n\nHe opened the door. \n\nLorraine's daughter, Kim, was hanging from an X shaped bondage cross near the middle of the room. \n\nA thick, pink dildo was pistoning in and out of her soaked snatch. \n\nThe girl regarded them with an exhausted look. \n\nNurse Karen was checking the suction on one of the permanent hucows. She adjusted the milker on the platinum blonde's massive left breast. The woman moaned softly as milk filled the clear suction cup and then drained into the tank below. \n\nKaren turned and smiled. \"Feeling better?\" She saw Lita and froze, her eyes growing wide. \n\nLita likewise was staring in awe at everything around her, holding tight to Alex's huge hand. \n\nKaren stepped sideways and picked up a syringe. \n\nEven from across the room, Alex could tell it was filled with Knock Out. \n\nHe shook his head. \"It's okay. Lita is much better now.\" \n\n\"I... I want to go back,\" Lita whispered. Her eyes were locked on the blonde who moaned behind her ball gag on the St. Andrew's Cross. \n\nAlex leaned down. \"Brave. Fierce. If you can't be that, I don't want you.\" His face was stern, but his voice was not. \n\n\"Yes, Master,\" she whispered. \n\nAlex eyed her curiously. Somewhere along the line, SlutzNet must have made her a submissive - perhaps to aid in curing her maladies. He could live with her devotion, so long as she was capable of self-motivation. \n\nSlaves were tedious. He didn't want one. \n\nBut, there was something endearing about the way she clung to him, as if she was afraid she would be swept away by a stray breeze if she didn't. \n\nHe led her to a metal frame set in the concrete near the hucow cabinets. \n\n\"Do you trust me?\" Alex asked her. He knelt down, putting himself on eye level with her. \n\n\"Yes, Master.\" \n\nNo hesitation, and was there a tiny glint in her eye? At least she wasn't crying and she made eye contact. \n\nThere was a small tray beside the frame. He held up a padded shackle. \"Give me your arm.\" \n\nShe eyed the shackle warily. \n\nAlex was patient. \"A couple of hours ago, you would have wrestled me for this. And, if you could, you would have used it like brass knuckles and beaten me half to death. I don't want the violence to return, but I want the balls to come back. Do you understand?\" \n\n\"Yes, Master.\" \n\n\"Alex. I'm Alex, not Master. You can choose to obey me if you want, I'll love you either way, but I don't require you to bow down. I'm going to be your husband, not your owner. Yeah, some whoremasters rule over their coven - I don't. I don't want women to worship me. I want love, not respect nor fear.\" \n\nShe looked at him and blinked. \"Love? You're going to love me?\" \n\nHe turned his head to the side and tried to read something in her expression. \"Don't you understand this? When we're joined, it's not just you being bound to me. It works both ways. Forever.\" \n\nA slight smile crossed her lips. \"I... I guess I didn't realize it would be actual love.\" \n\nHe caressed her long brown hair. \"I will love you, just like I love Gwen and Heather and Rebecca. You'll be in love with me and you'll be in love with them the same as they will be in love with you. Real love. You'll be happy when they're near and miss them when they are not. You will not be a slave Lita. Not to me, not to them, not to anyone. We have our duties that we have to perform, all of us, but we are not slaves.\" \n\nHer eyes welled with tears. \n\nAlex wiped the tears away. \n\nShe frowned. \"Well. If you're my husband... why are you chaining me?\" \n\nThere it was. Defiance. Finally a spark of the old Lita. \"Because I want to.\" \n\n\"And, what if I don't want to be put in bondage?\" \n\n\"Don't you?\" \n\nHer proud look faltered. She reached out and took the shackle from his hand. \n\nShe put it on her wrist and closed it with a click. \"Like this?\" \n\n\"Yes.\" He handed her the next. \n\nShe clicked it on the other slim wrist. \n\n\"Ankles.\" He handed her another. \n\nShe took it and then turned her back. \n\nShe bent over at the waist. Slowly. \n\nThat was on purpose. Alex smiled, admiring her heart shaped ass. He cupped her buttock as she clicked the left ankle restraint in place. \n\nHe knelt lower to the floor and handed her the last restraint. \n\nShe had a lusty look in her eyes. \n\nShe clicked the last one in place, and Alex pulled her up in an embrace. \n\nHe kissed her. \n\nShe moaned into his mouth, opening wide to accept his tongue which probed at her throat. \n\nWith no gag reflex, she swallowed it. \n\nHis hands kneaded her buttocks as he fucked her throat with his tongue. \n\nShe was dripping wet when he lowered her to the floor. \n\nThe frame had steel hooks that closed on loops on the restraints. \n\nHer ankles were locked with her legs wide apart. \n\nAlex bent her forward and pulled her arms back. \n\nHer heavy tits hung down along with her long, flowing hair. \n\nThe position of her arms made her arch her back, exposing her taut ass deliciously. \n\nThe wrist restraints locked in place on either side of her ass. \n\nLita was breathing heavy. \n\n\"Let the restraints hold you. Rest your weight on them. That's why they're padded,\" Alex said. \n\n\"Yes, Mas... Alex. Yes, Alex.\" \n\nHe knelt in front of her and kissed her. \"It's about trust. You understand?\" \n\n\"Yes.\" \n\n\"I will not hurt you. I won't let anyone else hurt you either.\" \n\nShe smiled and nodded. \n\nHe stood up. \"Speaking of trust.\" He held the base of his cock. It started to rise. \n\nLita's eyes grew wide and she gasped. \n\n\"The last time you had this in your mouth...\" \n\n\"I'm sorry! I'm so sorry.\" She opened her mouth and licked the head of his cock. \n\nAlex smiled seeing the astonishment on her face. She hadn't been transformed yet. He would handle that personally in a few minutes - so his precum was driving her insane with lust. \n\nHe hoped that 'insane with lust' wouldn't turn into just 'insane'. \n\nHe rubbed her hair as she kissed and suckled the head. \"Open.\" \n\n\"I... it's so big,\" she whispered. Her lips were glistening and slick with precum. \n\n\"You're made for me. Trust me.\" He took her lower jaw in his hand and massaged gently. \"Open.\" \n\nShe looked in his eyes and slowly opened her mouth. Her eyes grew wide as her jaws opened further and further. \n\n\"The muscles and ligaments loosen when I need your mouth. My precum triggers it. The same way your pussy will dilate when my juices mix with yours.\" \n\nHer eyes drifted down as her mouth opened wide enough to accept him. \n\nHe slid in and she angled her head to open her throat for him. \n\n\"That's right.\" He slid deep inside and felt her throat contracting around him. \"Breathe when I pull back then hold it when I push in.\" \n\nShe moaned sending waves of pleasure through Alex. \n\n*** \n\nGwen led Lorraine downstairs. The hot MILF was wearing a semi-transparent purple bodysuit that showed off her ample curves. \n\n\"I want her tits even bigger than mine.\" \n\n\"Whatever you want, Lorraine. You own your daughter. She's your toy to use however you want.\" Gwen smiled - the MILF was almost hyperventilating. \n\n\"She'll be happy, won't she? Like I am?\" \n\n\"Yes, Lorraine. She's more like you than you think. She's just more repressed. You'll take care of that.\" \n\nLorraine smiled. \"Oh, yes. Definitely.\" \n\nGwen laughed. Lorraine's evil side was coming to the surface slowly. Pretty soon, she would be 90% dominatrix bitch. \n\nShe turned on the basement lights. \n\nThen she frowned. \n\nAlex wasn't there. \n\n\"I guess he woke...\" She didn't finish the sentence. \n\nThe demon was gone as well. \n\n*** \n\nLita moaned as Alex began rubbing her cunt from behind. \n\nAlex had pulled out of her throat, dripping from her spit. He could have cum then - the woman had excellent technique. \n\nBut, it didn't seem right to him to take a wife's throat instead of her pussy. \n\n\"So wet. Lita, is this what you want? This is the last time you can change your mind. Once I cum inside you, it is very difficult to undo the binding. Sometimes impossible.\" \n\nShe turned her head frantically and looked back at him. \"You'd undo it!? Why!? Why would you do that!?\" \n\n\"No, no, sweetheart... I had to. We made a man into a whoremaster in Ithaca, and he needed a harem. Even then, I had to have special permission, and it almost didn't work.\" He stroked the small of her back. \"I will not unbind you unless you ask me to.\" \n\nShe lowered her head and turned back around. \"I wouldn't do that. I want you. I really do, Alex.\" \n\nAlex smiled. \n\nHer pussy lips were dark and full, opened and glistening from arousal. He crouched down and kissed them, running his tongue along the outside of her puffy outer lips. \n\n\"Unnh,\" she whispered. \n\nHer juices were light and delicate but plentiful. \n\nHe spread her open with his thumbs and lube began to drip down. \n\nHe caught it with his tongue, and then pushed his tongue deep inside her warm depths. \n\n\"Oh, God... I love this,\" she whispered. \"I like being chained like this. I was afraid, but now I'm not.\" \n\nAlex laughed and tongued her clit. \n\nShe shuddered and moved her hips in a circle, unable to control her desire to have more of his lips and tongue. \n\nAlex closed his lips on her pussy and sucked her tender lips into his mouth. \n\n\"Ahh! Nobody ever did that...\" \n\nAlex pulled back and licked her firmly from clit to perineum and back. \"What?\" \n\nShe giggled. \"Not exactly an extrovert before.\" \n\nAlex laughed. \n\n\"Guys wanted to fuck me, but... nobody wanted to do much else... to the crazy girl.\" She was undulating her hips, rubbing herself against his exploring tongue. \n\nHe gripped her thighs, forcing her to be still as he tongue fucked her in long, deep strokes. With each penetration, his tongue rubbed across her clit. \n\nShe moaned and cried. Soon she was screaming. \n\nAlex held her tight as her orgasm came on like a storm, her hole closing spasmodically on his invading tongue. \n\nFinally, she went slack in her restraints. \n\nHe stood up. \n\nHe grasped his cock by the base and rubbed the thick head against her pussy. \n\n\"Oh! Yes! Please, I want to. I want to now.\" \n\n\"Want to what?\" \n\n\"I want... Oh, God... I want you to...\" \n\nHe reached out with his left hand and pulled her long hair, causing her head to rise. \"Say it. We don't play games. We're not coy.\" \n\n\"Fuck me! Fuck me! Cum inside me. I want to be yours.\" \n\nAlex slid balls deep into her at once - her mods made it possible. \n\nWithout the opened and lengthened canal, it would have killed her. \n\nShe screamed. \"Big! Big!\" She fell into mumbling incoherently and jerking her hips wildly trying to take even more of him. \n\n\"Shh. Be still now. We have hours. Relax,\" He whispered as he massaged the small of her back. \n\n\"No. Absolutely not.\" \n\nAlex turned to find Gwen standing behind him. \n\nShe was glaring at him, hands clenched in fists. \n\nHe smiled. \"She's hard to resist...\" \n\n\"Try harder! I will not spend eternity with this...\" \n\nAlex slowly withdrew from Lita. \n\nThe little brunette cried out. \n\n\"Shh. Just a minute. I'm not stopping.\" He turned and touched Gwen's cheek. \"Let's talk.\" \n\n*** \n\nLorraine returned to the basement above. Gwen's reaction to seeing Alex balls deep in the demon woman told her things might get ugly. \n\nBesides, Kim looked to be asleep with that mechanical dildo fucking her. \n\nShe could only imagine what was going through her daughter's mind - nasty, filthy things she hoped. \n\nThe past few hours had been a real life changer for Lorraine. \n\nGood was bad and bad was now good. Actually, bad was fucking wonderful. \n\nDark thoughts poured through her mind. \n\nSelling Kim on the street. Pimping her to older men. Sharing her in orgies. Making her dress like a slut - like her very own Slut Barbie. \n\nThat was her plan: she was going to have the doctor and her assistant turn her oldest daughter into a living sex toy. \n\nShe leaned against the basement wall and pushed her hand under the waistband of her running suit. \n\nHer pussy was wet and swollen. \n\nShe needed to fuck. \n\nShe needed to pervert. \n\nHer drive was near manic, her thoughts like a torrent of explicit kinky desires. \n\n\"I know that feeling pretty well.\" \n\nThe tall blonde woman with the buzz cut was smiling at her. \n\n\"Mary, right?\" She never stopped masturbating. \n\nThe woman walked toward her, hips undulating in the short skirt. \"The first night they took me? I fucked my own son. I helped turn my husband into a sissy transsexual. I even went to an adult store and turned an innocent girl into a wanton slut... on her wedding night. And, I made her husband watch.\" \n\nLorraine was breathing hard. She swallowed as she stared at Mary's short skirt. The front was lifting - her shemale cock was becoming erect. She tore her eyes away from the rapidly rising cock. \"Is it always like this? So strong? So bad you just want to fuck anyone in sight? Do the most vile, wicked things?\" \n\nMary smiled. \"For you? It might be. I had angst and regrets - but, Lisa was the one who changed me, and the poor girl was just learning. Gwen fixed everything.\" She raised her skirt and turned to the side displaying her long, hard, thick veined cock. \"She makes everything better.\" \n\nLorraine stepped forward and wrapped her hand around the throbbing cock. \"What's it like? Being a shemale? I'll bet it feels wonderful. When you fuck someone. God... it must.\" \n\nMary cupped Lorraine's big breasts - they were almost identical to her own big orbs. \"It does. Women just sort of open for it. Poor little Hailey wanted more than she could take in her tight little pussy.\" \n\nLorraine stared at the cock in her hand. She began to stroke it. Precum poured from the tip. Lorraine's hand motion made the shaft slick with it. \"I won't be able to take it all either... they haven't changed me inside yet.\" \n\nShe slid her hand farther down and fingered Mary's wet pussy. \n\nMary sighed. \"Mmm, that feels amazing. Push your fingers in?\" \n\nOn the next down stroke, Lorraine slid two fingers up Mary's cunt and then withdrew on the up stroke. \"Like this?\" \n\n\"Unnh... God, yes.\" \n\nLorraine laughed. \"All new skills to learn.\" \n\nMary laughed with her. \"Oh, you're doing wonderfully.\" \n\n\"You're a girl they turned into an almost boy, not the other way around?\" \n\n\"Futanari, honey... Oh, harder, please... Japanese word. It means a girl who has a cock instead of a clit.\" \n\n\"Fuck, you are so wet.\" \n\nMary put her hands in Lorraine's hair and kissed her. \"You make me wet.\" She licked Lorraine's full, red lips. \"And, hard.\" \n\nLorraine laughed. \"I think I'd like one of these.\" She gripped Mary's cock harder. \n\nMary smiled. \"I can give you one. Just like mine. If I bite you? I have venom. You'll grow a nice big cock, just like mine.\" \n\nLorraine's eyes narrowed in lust. \"Really?\" \n\nMary nodded and nodded her head toward the Fat Guy's bed. \"If I bite a man, he turns into a bimbo - at least that's what Demona said when I bit that guy.\" \n\nLorraine stared at the shape on the table. It definitely had tits and a fat ass, but mostly he looked like an overweight tranny. \n\nMary spun Lorraine around and pressed her against the wall. \n\n\"Ooo,\" Lorraine groaned. Mary's hard cock was pressed into her running suit crotch. \n\nShe felt Mary's teeth on her neck. \"You want this? Want to be my Futanari lover, Lorraine? Want me to give you a hard, thick cock to fuck your daughter with?\" \n\nLorraine shivered. \"Fuck! God...\" The thought turned her on. \n\n\"Just say yes, and I'll do it. One little nip.\" She rubbed her fangs along the side of Lorraine's neck. \n\nLorraine moaned and laughed. \"Maybe. Not yet. I need to think...\" \n\nMary kissed her neck. \"Just remember, the offer is good anytime.\" \n\n\"Ooo... well... while I'm thinking it over?\" She turned around and drew Mary closer. Lorraine reached down and pushed the crotch of her running suit down. \"How about you give me a demonstration of that thing in action?\" \n\nMary kissed her and slid her higher up the wall. \n\nLorraine drew in a breath as she felt the long futa cock pushing at her exposed pussy. \n\nIt slid up and in as far as it would go in her tight cunt. \n\n\"Mmm, yes! God, so fucking big.\" She covered Mary's face with kisses as the Futanari began to fuck her against the wall. \n\n*** \n\nNurse Karen was talking in soothing tones to Lita as the frustrated woman sobbed. \n\nAlex led Gwen to the other side of the room. \n\n\"Not her, Alex. Anyone but her.\" \n\nHe smiled at her and squeezed her hand. \"I know things didn't start out well.\" \n\n\"She almost killed you!\" \n\n\"And, how many times have you told initiates that humans can't be blamed for trying to protect themselves?\" \n\nGwen's eyes flashed with anger. \"That wasn't self defense - it was an insane bloodlust...\" \n\n\"Which is gone now.\" \n\n\"You think it is. How do you know?\" \n\n\"SlutzNet...\" \n\n\"...is a computer. It doesn't know. It's making an educated guess based on available data. It can't read her mind.\" \n\n\"Neither can you,\" Alex said, smiling gently. \n\n\"No, and that's the point! We don't know anything about her! Except that a few hours ago she was a homicidal maniac!\" \n\n\"I don't think she is. If you had seen how she was when she woke up on the table...\" \n\n\"She isn't one of us!\" \n\nAlex frowned. \"So. It's okay for us to add to the coven, so long as it's your idea?\" \n\nGwen looked shocked. \"What? No...\" \n\nAlex smiled. He stroked her blonde hair out of her eyes. \"Do you remember when Heather came here? That spirit, that personality? Beautiful, inside and out. We had to have her - I felt it the same as you. I couldn't bring myself to take her, but you did. You saved her from my short sightedness.\" \n\nGwen teared up a little. \n\n\"And, Rebecca? I knew when I saw her - she belonged with us. I didn't fight you when you thought it was your idea alone. It hasn't even been a day, but neither of us can imagine life without her. I know I can't. Could you?\" \n\n\"No, but...\" \n\n\"And, Akimi Maru? You made her just this morning. And, you and I both know that as soon as she is back in our arms we are never, never going to let her go.\" \n\n\"But, Alex...\" \n\n\"And, then there's you. I was dead inside before you, Gwen. When I went to Havana and the Church said, take this gift and be a whoremaster? You think I wanted that? No. I took it because, goddamn it, Gwen. I was at the end of my rope.\" He looked down at his feet. \"My wife's death... Gwen... I just wanted to die. If I hadn't accepted their offer, I might have ended myself.\" \n\nGwen was sobbing. \n\n\"Even becoming this,\" he looked down at himself. \"It didn't matter. It didn't help.\" He wiped the tears from her eyes. \"And, then you show up on my front porch in that sensible skirt with those WatchTower pamphlets and your kooky religion... I knew, Gwen. I just knew I had to be with you.\" \n\nShe looked up at him, lip trembling. \n\n\"You.Changed.Everything.\" He kissed her wet cheek. \"I gave you a choice, and you chose me.\" He shook his head. \"I've not looked back since. You are my life, Gwen Kincaid. You trusted me then. Trust me now.\" \n\nShe leaned against him, all the fight drained from her. She sighed. \"She is adorable,\" she said finally. \n\nAlex laughed and hugged her tight. \"Yeah, I have to admit, there was a very beautiful woman hiding under that psychotic weirdness.\" \n\nGwen laughed and sniffled. \"I swear, though, if this is an act and she hurts one of us? I'll fucking end her.\" ",
        "Alex nodded. \"I know.\" \n\n*** \n\n\"Wow,\" Demona said from the bottom step as she watched Mary pin Lorraine to the wall with her big futa cock. She walked up behind Mary and stroked her firm ass as she fucked Lorraine. \"Like that MILF pussy, huh?\" \n\n\"F... Fuck... she's so hot, Demona.\" \n\n\"I'll say,\" Demona said. She leaned up and sucked Lorraine's nipple into her mouth. She suckled it - no Ambrosia yet. That would have to wait till she was complete. \n\nLorraine moaned and cried. She was rubbing Mary's short hair with her right hand while she drew Demona closer to her with her left. \n\nDemona pulled back with a lick. \"Yeah, that's right, Mary. Give it to her hard.\" \n\nMary's face was a mask of concentration. \n\nDemona reached down between the futa's legs and grasped the base of her cock as she fucked. \n\nStill being human, Lorraine could only take so much of her big cock. \n\nDemona took a small bottle of pills out of her pocket. \n\nShe opened it and dropped a single brown pill into her hand before replacing the cap. \n\n\"Do you want to be completely irresistible to Mary here, Lorraine?\" \n\n\"She is,\" Mary breathed as she nuzzled into Lorraine's neck. \n\n\"Oh, I can make it completely impossible for Mary to control herself. Would you Iike that, Lorraine? Do you want to see Mary go insane with lust?\" \n\nLorraine smiled behind sleepy eyes. \"Yes. Fuck yes!\" \n\nMary only groaned and fucked Lorraine harder. \n\n\"Open wide.\" She held the pill to Lorraine's mouth. \n\nLorraine smiled and opened up. \n\nDemona dropped the pill on her tongue. \"Now swallow.\" \n\nLorraine swallowed it down. \n\nDemona took a few steps back. \"Remember I told you there were more instructions for that new dick, Mary?\" \n\n\"Hunh? Yeah...\" \n\nDemona laughed. \"You have this little biological quirk. Your libido goes into overdrive when a woman ovulates. Pumps up all your hormones.\" \n\nMary stopped her pummeling of Lorraine's snatch. \n\nThe blonde in her arms began to whine. \n\n\"That little pill I gave your MILF lover causes her to ovulate almost instantly. Her body is giving off pheromones to tell any man who can smell her that she's fertile...\" \n\nMary's eyes grew wide. Her pupils dilated. \n\n\"Oh, yeah. That's right, Mary... don't fight it.\" \n\nMary was breathing hard. \n\n\"Mary?\" Lorraine asked. \n\nMary lowered her to the floor. \"Smell so... good. Lorraine. I really need to...\" \n\nLorraine blinked. \"Anything you want. You can do anything you want...\" \n\nMary spun her around and began peeling down Lorraine's running suit. \n\n\"Ooo,\" Lorraine cooed as she suit was pulled down to her ankles. \n\nShe started to turn back around, but Mary forced her down on the floor. \n\nMary pushed her face to the tile and crouched behind her. \n\nLorraine gasped as Mary licked and sucked her pussy. \"Oh, Mary, yes!\" \n\nMary's eyes were growing more and more wild with lust. Her skin flushed and her hard cock grew even harder. \n\nDemona knelt beside them. \"Take her, Mary. Fuck her.\" \n\nMary smiled and slid her futa cock deep inside the MILF's pussy. \n\nDemona whispered as Mary fucked. \"Your cum is incredibly potent. If a woman ovulates, you can impregnate her. Don't you want to do that, Mary? You want to breed her, go on say it.\" \n\n\"I want to breed you, Lorraine. I want a fuck a baby into you.\" \n\n\"What? No! Mary, I can't.\" \n\n\"Oh, you can,\" Demona laughed. \"And, you will... only it won't be a baby.\" \n\nMary grunted. \"What will it... be?\" \n\n\"A clone. A fully formed adult clone of our little MILF here.\" Demona rubbed Lorraine's hair. \"She'll have a twin, Mary.\" \n\n\"Fuck yeah!\" Mary growled. \n\n\"No! I don't want...\" \n\n\"Shut up, slut! I'm breeding your whore pussy right... now!\" Mary laughed. \n\nMary thrust hard and stopped, her back arched. \n\n\"Aiggh!\" Lorraine cried out as she felt Mary's cock throb deep inside her. \n\n*** \n\nLita braced herself as Alex's cock wedged into her pussy. She was stretching, but it wasn't painful. \n\nMore like terrifying. \n\nBut, the horrible loneliness was leaving her. \n\nLita had always been alone, but, until the machine did whatever it did to her, she hadn't cared. She disliked people, hated them really. They bothered her. She always felt like they were looking at her, judging her. \n\nOn really bad days, she felt like they were conspiring against her. \n\nAll the drugs did was make her not care. \n\nEverything was different now. \n\nThe loneliness that had dominated her life was now like a lead weight on her, pressing her down. \n\nWhen she awoke on the operating table, her fear hadn't been of the situation she was in, it wasn't the dark room. \n\nIt was the knowledge that she was still alone. \n\nShe called out to the empty room in terror that she was alone. \n\nBut, she hadn't been. \n\nLita smiled. \n\nShe had hated Alex earlier, and she could still feel that emotion. She couldn't understand it - he was wonderful and he was warm and he really cared for her. \n\nAlex meant she wouldn't be alone. \n\n\"Arch your back a little more,\" Gwen whispered. \n\nLita did as she was told, though in truth she couldn't move much in the bondage frame. \n\nGwen didn't hate her, and Lita was thankful for that. \n\nBut, the beautiful woman wouldn't touch her. She was actively avoiding Lita's smiles and her gaze. \n\nA few hours ago, this wouldn't have bothered Lita in the slightest. \n\nNow, it made her feel horrible. \n\n\"My fault,\" she whispered. \"Stupid schizo.\" \n\nGwen looked down at her. The expression wasn't warm, but it wasn't hatred either. \"What did you say?\" \n\nLita burst into tears. \"You hate me. I know you do...\" \n\nGwen jerked as if she had been slapped. \n\nLita sniffled. \"Alex. It's okay. I'll go to Havana. She doesn't want me.\" \n\nGwen knelt beside her. \"Your act isn't working on me.\" \n\n\"I'm not...\" \n\n\"Maybe. Maybe not. I don't hate you. I don't trust you, but I don't hate you.\" \n\nAlex pulled gently out of her. \n\n\"No,\" Gwen said as she looked up. \"Don't stop.\" She turned back to Lita as Alex's firm hands squeezed Lita's waist. \"If this is an act...\" \n\n\"It's not an act,\" Lita whined. \n\n\"Lita, if you ever hurt Alex or Rebecca or Heather? If you hurt anyone in this coven, I'll kill you. So, if you're playing us? You're better off as a whore in Havana... trust me.\" \n\nLita shook her head and sobbed. \"I won't! I can't! I don't want to be alone, Gwen. I want to be with you and Alex and the others. Please?\" \n\nThe buxom blonde moved quickly, her expression changing from cold stare to smiling lust. \n\nLita jumped when Gwen kissed her. \n\nThe surprise wore off quickly. She moaned into the kiss as Gwen's tongue probed her mouth. \n\nGwen's hands explored her body: her neck, her breasts, her tummy. She reached down and fondled Lita's clit as Alex pushed inside her once again. \n\nGwen broke the kiss and smiled at her, fingers still massaging Lita's clit. Gwen laughed. \"You're so little. I'll bet he feels like he's in your chest.\" \n\nLita nodded. \"So full, Gwen.\" \n\nGwen stared into her eyes. \"Fuck her, Alex. You were right. She's ours.\" \n\nHe began slow, long strokes into Lita's quivering body. \"Ooo,\" she moaned. \"What's it going to feel like? When he cums? Is it instant?\" \n\nGwen nodded. \"Yes. You'll be completely in love with him... and me.\" \n\n\"I want... that. Want it! Never had it... Before.\" The rhythm of the massive cock combined with Gwen's masterful clit massage was driving Lita close to the edge. \n\nGwen frowned. \"Never? You've never been in love?\" \n\n\"N... no...\" \n\nGwen shook her head. \"I've been selfish. I'm sorry.\" \n\n\"What? No! You... oh, God, it feels so good, Gwen.\" It was so hard to think. Her life was about feeling now. \n\nGwen laughed. \"Yes. And, it's going to feel even better.\" She slid under Lita and pulled herself between the brunette's legs. \n\n\"What are you...\" \n\nFireworks. Gwen began suckling Lita's clit as Alex fucked her harder and harder. \n\nThe orgasm began in Lita's toes and roared through her like a wild fire. \n\n\"God, she's cumming!\" Alex groaned. \n\nHer pussy felt as long as her giant lover's cock, and every inch of it was contracting and pulsating. \n\n\"I'm...\" Alex stammered and then he was pumping into her. \n\nA second orgasm ripped through Lita, this one a hundred times harder than the first - the strongest in her entire life. \n\nHer body convulsed in the bondage frame. She felt like she might break the shackles. \n\nAlex's cum surged into her body, into her very soul. \n\nLita Price, who had been broken and then mended, felt a warmth spread through her. She screamed and laughed and cried and shook. Arms encircled her - Alex had pulled out of her at some point. \n\nHer bonds were gone and she was lying in his arms - no, their arms! Gwen had wrapped her body around her and Alex held them both in a tight embrace on the floor. \n\nSweet words were whispered in her ears: Beloved. Love. Ours now. Always. Never alone. Everything before was a dream. You're awake now. \n\nHer eyes fluttered open. \"I love you,\" she whispered and smiled. Her eyes closed. \n\nLita Price, now Lita Price-Kincaid fell asleep in her wife and husband's arms. \n\n*** \n\nIn the basement above, Mary lay on her back on an operating table, her cock lying flaccid across her flat stomach. \n\nShe smiled lazily at Lorraine who stood looking at herself in the mirror on the back wall. \n\nShe stared at her abs. \"You... were kidding, right?\" \n\nDemona walked to her side and placed her hand on the space between Lorraine's navel and her pubic bone. \"No. Right now, Mary's cum has caused two of the eggs you released to merge into a zygote with both of your X chromosomes - your genetic clone. Lorraine 2.0 is rapidly dividing in your womb.\" \n\nLorraine blanched. \"How rapidly?\" \n\nDemona hugged her. \"Calm down. Come on and sit down.\" \n\nLorraine let herself be led to an empty table. \n\n\"You'll give 'birth' sometime before morning.\" \n\n\"Jesus!\" \n\n\"Relax. It will weigh less than a pound. It's going to come out in its amniotic sack attached to you with the umbilical cord. You'll go to sleep after that - your body is going to conserve its energy since you'll be feeding Lorraine 2.0 from your own body. By midnight tomorrow night, there'll be two of you. She'll be an exact clone - well, without your modifications. She'll look exactly like the old you. One of the White Witches will transfer your thoughts to the new Lorraine, and she'll basically be able to replace the old you.\" \n\n\"Why in God's name would you do something like that?\" Lorraine stammered. \n\n\"First, because I can. Honestly, I run pretty much open loop - science without boundaries. I sleep about an hour a night and my brain works on multiple projects at once - seriously, I figured out a new way of synthesizing hemoglobin while I was sitting here talking to you,\" Demona said. \n\n\"Second? You're a doctor. I didn't know that when I nabbed you, sorry. We're more subtle with professional caste normally. Problem is, you've been abducted - people are going to be looking for you and Kim within twelve hours. It'll make the national news. The Church doesn't like publicity, and they've got a serious hard on to have you twisting people's minds at Ithaca College as Dr. Love. So, we need another you to go home and be wife and mommy. That way you can go upstate and start turning college kids into fuck toys.\" \n\nLorraine stared at Demona. \"So this new me gets to go be a wife to my husband and a mother to my kids?\" \n\nDemona nodded. \"Leaving you totally free... to be as evil as you want.\" \n\nLorraine slowly smiled. \"Wait. What about Kim?\" \n\nDemona laughed. \"You need to go down and supervise her mods. And, then?\" She handed Lorraine the bottle of ovulation pills. \"Have Mary fuck a clone into her too.\" \n\n*** \n\nGwen lay back in Alex's arms on the floor. She held Lita as she slept. She smiled up at Alex. \"That's four out of twelve for your harem, whoremaster.\" \n\n\"Five if you count Akimi,\" Alex whispered and kissed her hair. \n\n\"I can't wait. When the Church takes over and all this hiding is over? It's going to be wonderful - all of us together and in love.\" \n\nAlex frowned and nodded. \n\n\"What?\" Gwen asked. \n\nAlex shrugged. \"It's nothing. Just, the Church...\" \n\nGwen snuggled closer. \"You don't like them?\" \n\n\"I don't like their methods. I don't like the way they hurt people. There's a lot I don't like.\" \n\n\"The end justifies the means.\" \n\n\"Does it?\" Alex asked. \"I'm not so sure. Don't tell me you don't have doubts.\" \n\n\"Now that you mention it...\" \n\n\"What the fuck!?\" Demona asked as she entered the room. She stood and stared at the threesome on the floor. \n\nGwen laughed. \"We buried the hatchet.\" She rubbed a lock of Lita's hair out of her sleeping face. \"The hatchet being Alex's cock in our new bride's pussy.\" \n\n\"Yeah, I can see...\" Demona's mouth dropped open. \"Wait, bride!? Alex... did you claim her?\" \n\nAlex laughed. \"You and SlutzNet made her irresistible, what can I say?\" \n\n\"Shit.\" Demona wrung her hands. \n\n\"Relax,\" Gwen said. \"She's cured.\" \n\nDemona laughed. \"Mentally, yeah.\" \n\nGwen stared at her. \"What's going on?\" \n\n\"You're holding my Typhoid Lita.\" \n\n*** \n\n\"Goddamn it, Demona!\" Alex spat. \n\n\"I don't answer to you,\" Demona said with a wave of her hand. \n\n\"No,\" Gwen said. \"But, you might have warned us.\" \n\n\"Well, excuse me for not thinking you planned on bonding yourselves to my test subject!\" \n\n\"What the fuck is 'Bimbo Flu' anyway?\" Alex grumbled. \n\nLita was still asleep in Gwen's arms. \n\n\"An experiment. Terror weapon,\" Demona said. \"Lita here carries a retro-virus spread by her vaginal secretions. If a human female goes down on her, she's infected. Within ten minutes, they'll have \"Bimbo Brain' - vastly lowered IQ, super enhanced sex drive, loosened morals. Within two hours, lips and breasts swell - tits will get to at least a G cup, some larger. And, they're also carriers of the retro-virus.\" \n\n\"Can it hurt us?\" Alex asked. \n\n\"No, only normals. We're immune. And, Lita is only a carrier. She'll act perfectly normal.\" \n\n\"What about men? What does it do to them?\" Gwen asked. \n\n\"Two phases - first comes Satyr mode. Penis becomes larger, sex drive goes through the roof. They'll fuck anything that moves - and they'll infect anyone they fuck,\" Demona said. \"After a week, they enter phase two: Bimbo mode. They transition to female and become a bimbo - I can stop that from happening with an antiviral I developed, but, without it, they'll transition irreversibly to female.\" \n\nGwen rolled her eyes. \"A little warning next time before you use our home as a testing ground?\" \n\n\"Look, I'm sorry, but, in my defense, I really didn't think you two were going to get all domestic with her. I can get her started on anti-virals to stop her from being a carrier.\" \n\n\"Why?\" Alex asked. \n\n\"Huh?\" Demona said. \n\n\"Why cure her? I don't care if she turns normals into bimbos... fuck, I don't care if she turns them into werewolves,\" Alex said as he stroked Lita's hair. \n\nGwen laughed. \"Might be fun.\" \n\n*** \n\nKim came to as the ball gag was removed from her mouth. She opened her eyes to see her mother smiling at her. \n\nOnly, it wasn't her mother at all. \n\nHer mother, Lorraine, had always been beautiful, but the woman who smiled at her was gorgeous. She looked ten years younger. \n\nAnd, her breasts, emphasized by a skintight purple running suit were more than twice the size they were before. \n\n\"Go ahead. Look. You like them don't you?\" Lorraine said. Her makeup was perfect, her lips ruby red and glistening. \n\n\"Mom? Mom, get me down, please?\" Kim whispered. \n\nLorraine looked down and licked her lips. \"I'll bet that big dildo feels good going out of your slutty little pussy, doesn't it?\" \n\n\"Mom!? Please don't...\" \n\nLorraine reached down and pinched Kim's swollen, sensitive clit. \n\nKim screamed and Lorraine laughed. \n\n\"Don't what? Don't talk to you like you're a whore? You are a whore, Kim.\" She leaned close and licked Kim's lips. \"Don't you remember eating my pussy? Remember how good it tasted. How much you begged me to tongue fuck your little pussy at the same time?\" \n\nKim burst into tears. She wanted to throw up. All the memories of them on the floor in the living room above came flooding back. \"They... made me! That woman in white, she made me do things! She made us do things, Mom!\" \n\nLorraine laughed. She reached up and pinched Kim's left nipple with a long, manicured crimson nail, drawing another scream from her daughter. \"I'll let you in on a little secret, you muff diving little cunt - it didn't take much to get me to explore our relationship.\" \n\nKim sobbed and shook her head. \n\n\"Oh, yes, darling. I'm a psychiatrist and you would think I of all people would no better than to suppress my emotions. To deny my needs?\" She leaned over and nibbled the side of Kim's neck. \"No more of that bullshit. I want you. You belong to me... officially now. The Church has given you to me as a fuck toy.\" \n\nKim cried out and threw her head back. \"The Church!? What fucking sadistic church would condone this? You're my mother!\" \n\n\"I'm a woman. A professional woman of use to the Church. You, on the other hand, are just a piece of ass. Your only value is for sex. Sorry, darling, but you're meat to be fucked.\" \n\nNurse Karen appeared over Lorraine's shoulder. \"I tried to explain things to her. She's a little dim, isn't she?\" \n\n\"Fuck you!\" Kim screamed and she twisted and jerked in the bonds to no avail. \n\n\"Her modifications...\" Karen began. \n\n\"No! Mom! No! Don't let them...\" \n\nLorraine clamped her hand over Kim's mouth. \"Silence! When your betters are talking, you keep your whore mouth shut!\" \n\nKaren laughed. \"As I was saying, her modifications have already begun.\" \n\nKim's eyes went wide. What modifications? Oh, God! \n\nKaren continued. \"We've given her the slutifier; however, we have left one of her ovaries intact for the... other thing?\" \n\nLorraine smiled and nodded. \"Yes, but you'll sterilize her completely afterward? I'm certainly not going to ever be a grandmother. Given what a whore she is, she'll get knocked up by the first hard dick that cums in her.\" \n\n\"Oh, not to worry. We'll freeze the other ovary sometime tomorrow night.\" \n\n\"No, no... Isn't it possible to apply slutifier to the second ovary as well?\" \n\nKaren laughed a little. \"Are you sure? She'll be a complete whore. She'll fuck anything that moves with that much.\" \n\nKim screamed behind Lorraine's hand. \n\n\"Good! I want her a total slut. Now, let's talk boobs.\" \n\n\"G cups? I mean it will be a stretch, she's so flat chested.\" \n\n\"No, I'm thinking more along the lines of the one's the Street Whores have - J cups?\" \n\nKim's shook her head and sobbed. Those breasts on her thin body? \n\nNurse Karen gasped. \"Oh, no, Lorraine! The IQ loss from that much Titty Grow will be devastating.\" \n\n\"So? She won't need brains with boobs like that. Let's face it, she was never going to be a brain surgeon. She was either going to be some man's little wifey or a Stripper / Whore. I say go for it. Dumb the little slut down for me, Karen?\" \n\n\"Mmm,\" Karen moaned. \"She will be hot with tits like that. You're her mistress, and she needs to be whatever you desire.\" She drew a huge syringe full of Titty Grow into a wide barreled syringe. \"Oh, wait! Demona can do this with implants - she wouldn't have to be stupid.\" \n\nLorraine grasped her daughter's small tits and squeezed. \"No need to bother her. I think she'll be much more interesting as a ditzy blonde.\" \n\n*** \n\nLita awoke comfortable and warm in Gwen's embrace. Somehow, they had ended up in the basement above where she had been transformed. She looked down at her big, pillowy bosom and marveled. \n\nShe had always been a nice handful, but now she was a handful for a giant. \n\nShe smiled. Her giant. Alex. She teared up at the thought of him. ",
        "Her breasts were now a heavy G cup with no sag. She looked like a fetish model with her cinched in waist and full hips. Her stomach was washboard flat. \n\nOf course, she felt tiny clutched against Gwen's mountainous boobs. She snuggled closer, loving the warmth, the security. \n\nThe love. \n\n\"Good morning, sweetheart,\" Gwen whispered and nuzzled her hair. \n\n\"Is it morning?\" Lita whispered back. \n\n\"Not for several more hours. How do you feel?\" \n\n\"Happy. So very happy.\" She turned a little so she could look up into Gwen's big eyes. \"The voices are gone, and it's not like with my meds. Those made me feel lethargic and dull. The voices are just gone now.\" \n\n\"Good. And the anger?\" \n\n\"Gone too. I'm not afraid anymore. I'm not having the paranoid thoughts - it all seems so silly now.\" She heard moaning nearby. \n\nAlex and Demona were helping a woman to stand up from an operating table. She was thick with long black hair and dark skin. Her breasts and ass were plump and round. \n\nShe gasped when she realized she was looking at the Fat Guy who had been abducted along with her! \n\nHe batted his big blue eyes dully. \n\n\"Sit back down,\" Alex ordered. \n\nHe... well, she, did as she was told. \n\n\"Spread your legs,\" Alex said. \n\nShe parted her thick thighs revealing a hairless pussy with dark lips and a prominent clit. She was dripping with lube. \n\n\"That's amazing,\" Lita whispered. \n\nGwen smiled and nodded. \"He'll be much happier as a girl. Poor thing was terribly lonely - that's not going to be a problem anymore. She'll see a lot of action. Thick girls are in demand.\" \n\nAlex took his fingertips and opened the woman's pussy lips. A thick blob of lube slid out of her little hole and onto the floor. \"A hymen!?\" Alex asked. \n\nDemona shrugged. \"Kick in those X chromosomes and let them reform the body? You get a cherry on top... or down below... you know what I mean.\" \n\nAlex reached down lower and fingered her little pucker. \"Nice tight ass.\" \n\nThe woman moaned and began rocking her hips. \n\n\"Nice and sensitive, too. She'll definitely like back door and front door action.\" \n\nAlex pulled his finger out of her ass and held it to her lips. \"Suck.\" \n\nShe went down on the digit like a pro, taking his entire thick finger into her mouth. \n\n\"She'll make a good cocksucker too.\" \n\n\"They both will,\" Demona laughed as she rubbed the thick woman's tummy. \n\n\"Huh?\" Alex asked. \n\n\"I'm in a preggo slut mood tonight. She has enough extra body mass to grow her own clone. She'll give birth in a few hours along with our Mother / Daughter team.\" \n\n\"Damn, Demona. Twins?\" \n\n\"Well, this one won't be as thick. But, you'll definitely think they were sisters.\" \n\n\"What's my name?\" The woman asked. \n\n\"You don't have one yet,\" Alex said. \"It's okay. We're shipping you down to Havana in a day or so. A whoremaster will claim you and name you then.\" \n\nLita whispered to Gwen. \"Doesn't he remember his name?\" \n\nGwen shook her head. \"She, Alex. Show a little sensitivity. No. Sometimes we blank their memories to make it easier for them to transition... unless we're feeling playful. It's a lot of fun to watch a man suddenly have to deal with hormones.\" \n\nLita giggled. For some reason, she was very turned on thinking about tormenting someone. \"So, you could blank him?\" \n\n\"Yes,\" Gwen said. \n\n\"But, you couldn't use your powers on me?\" Lita asked. \n\n\"No. Sometimes, not often mind you, humans are immune to mind control. Epileptics, people with brain damage - anything making you non typical...\" \n\n\"Like schizophrenia?\" \n\n\"Yes. Exactly. But, physical manipulation like SlutzNet performed can have the same affect as my mental powers.\" \n\n\"I wish... I could have felt you inside my head.\" \n\nGwen smiled and kissed her. \"I do too. But, honey, listen, you must never tell anyone you were immune, okay?\" \n\n\"Why?\" \n\n\"The Church is very afraid of immunes. Some of the religious caste, the mother superiors and the bishops, have mind control powers. Nothing like a White Witch, nowhere near as powerful, but powerful enough. And, they can control the transformed to a degree - something I can't do. They're terrified of a resistant population. So, never speak of it, okay?\" \n\n\"But, I'm okay now. I'm transformed. I'm on their side.\" \n\n\"I know, but the Church is nothing if not sticklers for their own laws. They might demand you be lobotomized.\" \n\n\"Oh... shit.\" \n\nGwen smiled. \"It's okay. We're not going to say a word, and neither is Demona. You're safe. You will always be safe with us, Lita.\" \n\nAlex grabbed the shemale's ankles and lifted them onto his shoulders. \"If she's going to give birth in a few hours, might as well break this cherry.\" \n\nDemona laughed as Alex rubbed his thick cock head against the woman's spreading pussy lips. \"Hang on, babe, you're about to get the ride of your life.\" \n\nThe woman stiffened on the table. \n\nAlex laughed. \"Shh, relax. You don't want this thing in the fucking way.\" \n\n\"Ooo!\" She squealed as Alex eased gently forward. A trickle of blood ran down her thighs and Alex pulled out gently. \n\nDemona nudged him out of the way. She spread the woman's pussy open and sprayed Insta-Heal inside. \"Nice break, Stud. Now fuck her.\" \n\nShe stepped aside and Alex slid back inside. \n\nThe woman threw her head back and moaned as Alex slid six inches deep. \n\nDemona smiled. \"Damn, look at her eyes. Welcome to womanhood, doll.\" \n\nShe smiled weakly and then cried out as Alex began a slow, shallow fuck. \n\nLita's finger trailed down her flat tummy to her hairless pussy. Her thoughts were so foreign! She was in love with Alex and yet totally turned on to watch him fuck another woman! \n\nGwen's hand slid over her own and took over. \"Let me.\" \n\nLita laughed and nuzzled her wife. \n\nGwen gently slid two fingers over Lita's clit and into her pussy. She matched her rhythm to Alex's fucking motions. \n\n\"So hot,\" Lita moaned never taking her eyes off the straining hard muscles of Alex's ass as he stroked in and out. \n\n*** \n\nIn the barn, Diane awoke to see Regina looking at her. \"You're beautiful when you sleep.\" \n\nDiane sighed. \"I drool.\" \n\n\"Don't we all,\" Regina laughed. \n\n\"Is it dawn yet?\" Diane was losing track of time inside the orgy room. Wake up and fuck. Snooze. Get milked. Shower. Eat. Fuck. Snooze. Get milked. Shower. Eat. Rinse and repeat. Not that it wasn't relaxing and pleasurable, it was. Especially when she kept waking up to Regina and/or Chas making love to her. She felt renewed, refreshed. \n\n\"No, still dark out.\" She smiled and stroked Diane's cheek. \"My vacation is over at dawn.\" \n\nDiane felt panicked. \"What!? No, you're leaving?\" \n\nShe smiled and nodded. \"I know. Timing sucks. But, I have a mini-empire to run. Skullduggery to attend to.\" \n\nDiane sighed. \"What am I going to do when you're gone?\" \n\nRegina laughed. \"Well, fuck, of course. It's a vacation, isn't it?\" \n\n\"But, I love you, Regina. I don't want...\" \n\n\"Of course you want! Don't be silly. This is a new way of living. We don't own each other. Not yet anyway.\" \n\n\"But...\" \n\n\"What about Chas?\" \n\nDiane stopped. Well, she had a point. \"Yes, but, we shared him together.\" \n\n\"Darling,\" Regina whispered as she stroked Diane's hair. \"We're going to share many, many people. And, we're going to enjoy lovers separately. But, in the end, we will find our way back to one another.\" \n\nDiane sighed. \"What if I...\" \n\n\"Fall in love with someone else? Please do! Do you think falling in love is a bad thing? It isn't. It doesn't mean you won't love me. It means you'll love them too. Maybe we'll even love them together.\" \n\nDiane just stared into her eyes. \"What on earth have I gotten myself into?\" \n\nShe smiled and pulled her close. \"Freedom, darling. For some of us. The first freedom humanity has ever known.\" \n\nDiane cried against her lover's breasts. \n\n*** \n\nAlex was pounding away at the woman's pussy. Her pregnant belly was swelling - it was now at least three inches wider than when he had started. \n\nLita watched in amazement and lust as Gwen brought her off again with her magic fingers. \n\nShe had tried to reciprocate but Gwen had simply laughed and whispered, \"No. It's your wedding night. This is for you.\" \n\nSo Lita came and watched, came and watched. Alex could literally go for hours. \n\nThe woman writhed and moaned on the table as he took her over the edge again and again. \n\nAbruptly, he rolled her onto her side, her ankles firmly in the grip of his left hand. \n\nHe pounded into her, her legs held together, maximizing the friction for the whoremaster. \n\nHe glanced over his muscled shoulder. \"Get her ready,\" he grunted with a smile. \n\nLita cried out in surprise as Gwen laughed. Her arms went under Lita's and Gwens legs curled over hers. Using her arms and legs, Gwen held her firmly spread eagled, her pussy raised and exposed. \n\nLita almost cheered when Alex pulled his cock out of the moaning slut on the table. \n\nHe dove between Lita's outstretched legs and thrust, sending his cock straight into Lita's pussy, burying to the hilt in her depths. \n\n\"God! Oh, God, yes!\" Lita screamed as Alex fucked her like mad and, beneath her, Gwen kissed her neck. \n\nThe giant groaned and strained and filled her with cum. \n\nShe laughed and kissed him, mumbling incoherently and contentedly as her husband filled her to overflowing. \n\n*** \n\n\"What you're telling me is: I'm sick?\" Lita said. She had fallen back to sleep with Alex and Gwen until sunup. Gwen had given her a black leather miniskirt and matching bustier to wear along with patent leather pumps - the fashion statement in the Kincaid household was slut. \n\nShe had smiled to herself at that thought. She was Lita Price-Kincaid, wife to Alex, and Gwen, and Heather, and Rebecca, and soon to Akimi. And, part of her job was to look hot and fuckable. \n\nThat had made her feel wonderful and loved and sexy as fuck. \n\nNow, she felt like the world was caving in around her. The doctor had just told her she had a disease. \n\n\"You're not sick, Lita,\" Demona corrected. \"You're a carrier for a virus, that's all.\" \n\n\"Did I make Alex sick? What about Gwen?\" \n\n\"No, baby, they can't get sick - I had to infect you before you were transformed so the virus could take hold. The transformed can't catch human viruses. You're a carrier because I specially altered your system to make you one.\" \n\nLita tried to digest the message. \"This bimbo flu? It's very contagious?\" \n\n\"Oh, yeah. Any contact with your vaginal secretions will infect a human. If a guy fucks you or goes down on you, hell even if they finger you, they're infected. Same goes for women. The effects are very quick - women exhibit bimbo behavior in minutes, men become hyper sexual just as fast. They in turn spread the virus. You could pretty much take down an entire city block in an hour. Maybe most of a town in a day.\" \n\n\"Okay... I'll just make love with my husband and wives.\" \n\nGwen squeezed her hand. \"No, honey, you misunderstand: we want you to spread it.\" \n\n\"Huh?\" \n\n\"Yeah, sweetie. We have plans for New York - every major city actually,\" Demona said. \"You're part of the battle plan.\" \n\nGwen smiled at her. \"It's what we do, my love.\" \n\n\"Does it hurt them?\" Lita asked. \n\nDemona laughed. \"You took a bite out of a guy's dick, but now you want to know if you might hurt somebody?\" \n\nLita turned beet red. \"I'm not like that anymore.\" \n\n\"No, you're not,\" Gwen said. \"It doesn't hurt them, does it, Demona?\" \n\n\"No, not at all. They just become hyper-sexual. Girls grow big boobs and get a little dumb and slutty, guys become even bigger dicks - both literally and figuratively. It's just a guaranteed orgy initiator. Nobody is going to complain, they'll be too busy getting off.\" \n\nLita thought about it for a moment. \"I guess that's not so bad.\" \n\nDemona bit her lower lip. \"Well, um, there is the problem with guys.\" \n\n\"What problem?\" \n\n\"Well, the effect on them only lasts for about a week. Without anti-viral treatment, they undergo a... spontaneous sex change. Basically, they turn into fuckable little bimbos. That's a little painful. I mean, you know, body reabsorbing cock and balls and all... and the whole vagina forming thing.\" \n\n\"Oh... fuck,\" Lita said. \n\n\"Hey, you know I'm a confirmed lesbian and I say the fewer swinging dicks in this world the better,\" Demona said with a grin. \n\nLita swallowed hard and looked squeamish. \"Okay. I'll do it.\" \n\nGwen smiled. \"Demona and I have setup a little test for you.\" \n\n*** \n\nKim had passed out during the injections at some point. She was unsure how long she had been out. \n\nActually, she was unsure of a lot. Everything seemed hazy. \n\nOne thing that wasn't hazy was the sight of her mother furiously rubbing her own clit through the thin running suit. She was staring at Kim in unashamed lust. \n\nKaren stood beside her. \"God... she is hot.\" \n\nKim looked down. Her view was blocked by the enormous breasts. This was the source of her haze and stupor - the twin peaks of tit flesh now a part of her body. \n\nWorse, they were only D cups. Soon they would be J cups. \n\nWould she even be able to think at that point? Would she be little more than an animal? \n\n\"Goddamn you, you fucking bimbo whore!\" Kim screamed in her mother's face. \n\nLorraine's eyes flashed with anger. \n\nKim cowered in her bonds, sure that this monster who had taken over her mother's body was about to slap her. \n\n\"You ungrateful little cunt!\" Lorraine spat. \"After all Nurse Karen and I have done for you? Any strip club in the country would bend over backward to hire your bimbo ass. Not to mention the fact you are going to be a famous pornstar.\" \n\n\"God, Mom, you're insane! Don't you see they've turned you into a monster?\" \n\n\"Enough! Open your mouth one more time and I'll fist your ass.\" \n\nKim's eyes bulged. She had no doubt this monster meant exactly what she said. \n\nLorraine smiled malevolently. \"You know, Karen, I think somebody needs an attitude adjustment. You wouldn't happen to have a stool here, would you?\" \n\nKaren smiled and winked. \"I think we do.\" \n\n\"What are you going to do?\" Kim whined. \n\n\"Something you've needed for a long time, you little bitch!\" \n\nWarmth spread up from Kim's tortured pussy - the dildo was still sliding in and out of her tired hole. \n\nTurned on?! I'm turned on?! How can this be happening? \n\nBut, she was. \n\nKaren returned with a small, round stool. \n\nTogether, she and Lorraine unstrapped her from the cross and dragged her off the still thrusting dildo. \n\nShe tried to fight, but her arms and legs were too fatigued from hanging on the cross. \n\nInstead, she bit at her mother and twisted in their grip. \n\nKaren just laughed at her. \n\nHer mother sat down on the stool. \"Across my knees, please, Karen.\" \n\nKaren laughed and pushed Kim's naked body onto Lorraine's lap. She was facedown, her ass high in the air. \n\n\"No! Stop! Mom, what are you doing!?\" Kim whined. \n\nSlap! Lorraine brought her hand down and slapped both cheeks of Kim's ass. \n\n\"Ow! No! Don't!\" Kim cried. \n\nLorraine only laughed and spanked her again, harder this time. \"Give me a hand here?\" \n\n\"With pleasure,\" Karen said as she knelt behind Kim's reddening ass. \n\nAfter Lorraine's next blow, Karen added a slap of her own. \n\n\"Aiggh! No! Please... stop!\" Kim writhed and moaned as the women setup a rhythm. \n\nThe spanks were harder now, touching not only her ass but her moist pussy as well. \n\nKim sobbed uncontrollably, all the fight drained from her as her mother dominated and disciplined her. \n\n\"Mom, please... don't...\" \n\n\"Quiet! Every time you open that cocksucking mouth I'll add a hundred more,\" Lorraine laughed and brought her hand down again. \n\nSlap. The burn. Slap. It hurt. Slap. Her skin was on fire. Slap. Wet. Slap. So wet. \n\nKim felt dizzy. Her boobs felt so heavy. They jiggled each time Mommy and Karen slapped her. \n\n\"Ooo.\" She spread her legs a little. The next slap hit her wet cunny. Kim arched her back. \n\n\"Mommy... please... feel so strange... don't...\" Kim moaned. She felt like the world was spinning away beneath her. \n\n\"I told you! Each time you talk a hundred more...\" \n\n\"Mommy, please... don't... stop...\" Her voice came out higher than normal. \n\n\"What!?\" \n\n\"Ooo, I'm cumming! Please don't stop, Mommy!\" Kim whined and ground her hips. What had she been worried about before? She wasn't sure now. \n\n\"What the fuck?\" Lorraine whispered. \n\nSomething came out of Kim... back there. \n\n\"I think she squirted, Lorraine,\" Karen laughed. \n\n\"Fuck! My hand's wet!\" \n\n\"So is mine,\" Karen said. \n\nLorraine stopped spanking. \"Did you cum from being spanked?\" \n\n\"Yes, Mommy, I came hard,\" Kim mumbled. She felt confused, but she felt sooo good! \n\n\"Do you like what I'm doing to you now, honey?\" Lorraine asked. \n\n\"Ooo, yes! I love spanking!\" She turned her head and smiled at her mother. \n\nLorraine smiled triumphantly. She reached down and squeezed Kim's big right breast. \"Looks like that Titty Grow finally took care of that brain of yours.\" \n\nKim giggled. \"My boobies got real big!\" \n\n\"Stand up,\" Lorraine ordered. \n\nKim stood up slowly. She felt taller and so top heavy! She wobbled on her feet. \n\nNurse Karen caught her before she could fall. \n\n\"Jesus, look at her hair!\" Lorraine laughed. \n\nKaren turned her so she could see the mirror. Her formerly light blonde hair was now a deep, trailer park yellow. \n\nKim giggled. \"Pretty!\" \n\n*** \n\nDrew Lawrence, Bicycle Man, paced back and forth in the small iron cell in the basement. His clothes had been taken, leaving him naked. The constant parade of nudity outside the cage was keeping him semi-erect, but he had decided he no longer gave a damn if anybody was looking. \n\nHe had always considered himself well above average at eight inches, but the men here were much better endowed. Even the weird shemale woman they called Mary was at least a half foot longer. \n\nHe looked at the poor bastard across the room: the fat guy who had been abducted along with Drew and the others. He was now a buxom woman, and apparently nine months pregnant. She held her immense stomach and moaned from the operating table as the doctor or whatever she was put her feet in gynecological stirrups and examined her. \n\n\"Hi,\" Lita said. \n\nDrew staggered back against the cell wall. No one had spoken to him in hours. \n\nLita smiled up at him. She was barely five foot two but she had changed remarkably since the van ride. Her eyes, which had been dark and sunken were now big and bright. Her lips were full and red, hair long and brown and lustrous. Her breasts looked huge on her little frame with a cinched in waist and full, round hips. \n\nShe was wearing a leather miniskirt and bustier with heels. \n\nShe smiled at him. \n\nHis cock rose. \"Are you okay?\" Drew whispered. \n\nShe nodded. \"I'm great. Much better. We were wrong about them.\" \n\n\"They abducted us,\" Drew said. Why was he having so much trouble taking his eyes off her perfect breasts? He was fully erect! \n\nLita smiled and looked at his crotch through the bars of the cage. She licked her lips adding more gloss to her already shining red lips. \"I know they took us against our will, but they fixed me, Drew. They made me better in every way.\"  \n\nDrew closed his eyes and tried to look away, but his body had other ideas. He walked toward the bars. \n\nLita smiled knowingly. \"Like my pheromones? They're very powerful - that's what the doctor said. She said I would be irresistable to most men. Is that true, Drew?\" \n\n\"You're... beautiful.\" He felt drool forming at the corner of his mouth. A little voice in his head was trying to tell him something was wrong. But, nothing really mattered other than the fact that this absolutely beautiful woman was opening the cell door. \n\nShe stepped inside, enticingly close. \"Drew? Would you hold me? It's really been frightening for me. I need a man to hold me, Drew.\" ",
        "He practically scooped her up, drawing her leather clad breasts against his chest. \n\nShe hooked a leg around his waist. \n\nGod, he could feel the heat and wetness of her pussy against his cock. \n\nShe winked and slid slowly down his body. \n\nHe smiled. She was going to suck him. \n\nAt that point, the self-preservation circuits in his brain finally overrode the sex circuits. \n\n\"No!\" He pulled her to her feet. \n\nShe blinked those huge eyes at him. \"Why? What's wrong?\" \n\n\"You... you bit that giant guy...\" \n\nLita giggled. \"Oh, of course! You're afraid of me. I understand.\" \n\nHe pulled her closer again. \n\nShe put her hands on his shoulders and looked up into his eyes. \"I don't bite anymore, Drew. But, that's okay.\" She pulled him down and he complied, dropping to his knees in front of her. She slowly raised the hem of the miniskirt, exposing her shaved pussy. \"Could you go down on me, though? I really like it now. It makes me feel sooo good, Drew.\" \n\nHe leaned forward and kissed her little wet clit and then slid his tongue along her pussy lips, letting the tip curl up into her warm depths. \n\n\"Ooo, yeah, just like that, Drew. You're so good! Lick up all my girl cream. It really turns me on when guys do that,\" she whispered as she rubbed his hair. \n\nDrew was completely lost in giving Lita oral. He didn't notice the doctor standing just outside the cell door taking notes on her tablet. Nor did he notice the blonde in white latex who stood a few feet outside the cell smiling and nodding at Lita. \n\nAll that mattered was the tiny sex goddess and her pussy. \n\n\"Drew? Can you fuck me? I need you sooo bad,\" she said. \n\nDrew leaned back and looked up at her. \n\nShe turned showing off her heart shaped ass. \n\nLita leaned forward and grasped the bars of the cage, arching her back and spreading her legs. \n\nDrew stood up and put the head of his cock against her pussy. If he had ever been this hard, he couldn't remember it. \"Wait. Condom. Do you want me to...\" \n\n\"No! Drew! I want you. I want to feel you inside me. Filling me, Drew. I crave it now. Something they did to me... Oh, Drew, I need it sooo bad!\" Her back was turned, so he couldn't see her triumphant smile as he pushed deep inside her. \n\nHe had to be careful with most girls, but ironically the petite brunette had the longest vaginal canal he had ever been inside. She was tight, incredibly tight, but he was balls deep and still hadn't pushed against her cervix. \n\n\"Yeah, Drew, oh fuck me!\" \n\nHe began to thrust, still afraid he might hit her cervix and cause her pain. \n\n\"Harder, Drew. More! I want more!\" \n\nHe grabbed her waist and pulled her back against him as he fucked her. \n\nHer juices were literally dripping on the cell floor as they moved together. \n\n\"Lita... I'm not going to be able to hold back...\" \n\n\"Cum! Cum inside me!\" \n\nHe went rigid as he pumped inside her. \"Jesus... oh, Jesus!\" \n\nHer body seemed to milk him, muscles deep inside her grasping and constricting as she joined him in orgasm. \n\nHe held her tight against him as the throbbing subsided. \n\nShe was laughing as he slid out of her, his cum pouring out in thick streams on the floor. \n\nHe collapsed against the wall behind him. \n\nShe turned and pulled her short skirt down, cum still dripping down her thighs. \"How was that?\" \n\n\"Huh? Amazing...\" \n\n\"I wasn't talking to you, Drew,\" she giggled. \n\n\"You were perfect, darling,\" Gwen said. \n\nLita skipped out the cell door and closed it behind her. She threw her arms around Gwen and nuzzled her bosom. \n\n\"How was he?\" Gwen asked as she stroked the girl's hair. \n\n\"Small. And fast. Did I do it, though?\" She asked. \n\nDrew blinked and shook his head. Wait. Small? \n\n\"Yes, you did,\" the doctor said. \"His body temperature is already elevating.\" \n\nLita giggled harder. \"It was fun! You were right, Gwen. I really liked doing that to him.\" \n\n\"What are you talking about?\" Drew mumbled. His skin felt flushed and, it seemed impossible, but he was getting another erection. \n\n\"My name is Dr. Demona,\" the doctor said. \"Lita just infected you with an STD. You must already be feeling the effects?\" \n\nDrew blinked. \"What!? An STD!? What the fuck?\" \n\n\"We call it Bimbo Flu. You're now a carrier in remission. That wood you're getting? That's going to be almost constant. You're going through a second puberty. Expect to grow another three inches in the next day or so - not in height... in length.\" \n\nDrew stared down at his dick. It was rock hard and dripping, and fuck if it didn't look bigger! \n\n\"Balls are going to get a bit beefier as well. Now, you're going to want to fuck constantly - don't fight it. Your pheromones are going to draw human women to you like flies, just enjoy the ride. But, you need to practice some abstinence with any woman you give a shit about.\" \n\n\"Why?\" He asked, but he was already afraid he knew the answer. \n\n\"Any woman you fuck, orally, anally, vaginally? Hell, if you even piss on them, they get the 'flu'. Within a few minutes, their IQ drops, their inhibitions go bye-bye, sex drive goes into overdrive. Within two hours? Playboy tits. Three hours? Bimbo tits... big ones. The kind you have to go to eastern Europe or South America to have installed.\" \n\n\"Oh, my God,\" Drew grumbled. His balls were on fire and he felt like he might blow his load without even touching his cock. \n\n\"The changes are permanent. To tell you the truth, they're cute as buttons. Dumb as rocks, but fun to play with.\" Demona knelt outside the bars. \"Now, you get to walk around with a porn star dick and fuck anything that moves. But...\" \n\n\"But?!\" \n\n\"But, you need an injection of anti-viral once per week. You'll be Joe stud as long as you're getting your juice, but if you miss it? That bimbo flu stops being dormant inside you - you get the full bimbo treatment, right down to a cute pink pussy and a cotton candy brain. Understand?\" \n\n\"For fuck's sake!\" Drew groaned. They were insane! \n\nShe handed a smartphone through the bars along with a black credit card. \n\n\"What're those for?\" Drew gave up on propriety. He needed relief. He began jacking off. \n\n\"The phone is for taking pictures of your victims - you need to infect seven women per week. Shouldn't be a problem, just stand still long enough and they'll come to you. You take their picture and send it to the number provided. Miss your quota? No shot. Try to go to the police or the government or the newspapers? No shot. Be a good boy and fuck all the girl's senseless... literally... and I'll make sure you get your juice. Got it?\" \n\n\"This is blackmail!\" \n\n\"Sure is. If you'd prefer to have Gwen over there mind fuck you, just ask. But, trust me, blackmail will be easier for you. The credit card is for you to live off of. Don't lose it. Pay for everything with it - the Church takes care of its own. Seriously, this is a great deal.\" \n\n\"You've ruined my life!\" \n\nDemona shrugged. \"I didn't tell you to fuck her. Now, some advice: take the train into Manhattan to troll for sluts. Don't shit where you eat. In other words, no infecting girls in your hometown. Hunt in the city. That way you'll stay clear of five oh. Which, by the way, if you're caught - although for the life of me I don't know what they would charge you with. But, if you're locked up? Game over. Church won't come for you. You just won't get your juice and you'll go bimbo... in jail... won't be pleasant. So, don't get caught.\" \n\nDrew gasped and shot a huge load on the floor of the cell. \n\n\"God, men are disgusting,\" Demona grumbled. \"Anyway. Remember this part: Stallion's Adult Video west of Ithaca on the Interstate. That's where you come for your shots. Got it?\" \n\nDrew nodded. \"You're a doctor. How can you sleep at night?\" \n\n\"Me? I sleep like a baby in a room full of hot chicks and a whoremaster with a dick as big as your forearm.\" She stood up and opened the cell door. \"Out you scoot.\" \n\nHe looked at the door in confusion. \n\nDemona rolled her eyes. \"You can go. Vamoose. Make like a tree and leave. Get the fuck out.\" \n\n\"How do I get back home!?\" \n\nDemona stared at his hands. \"Phone. Credit card. Call an Uber, dumbass.\" \n\n*** \n\nKaren sat on the spanking stool and watched as Lorraine and Kim lay on the floor and scissored, rubbing their pussies together. \n\nThe younger woman had cum over and over. \n\nLorraine smiled at her daughter knowingly as she ground against her pussy. \"See. I know best, don't I?\" \n\n\"Oh, yes, Mommy! I love you!\" \n\nLorraine stopped scissoring her and kissed her cunny before standing up. \"Karen brought you an outfit.\" \n\nKim got gracefully to her feet, her thin legs hoisting her overinflated upper body upright. \n\nHer smile seemed to be painted on. Lorraine and Karen had pulled her trailer trash blonde hair into pigtails. They had completed the look with big steel rings in her nipples. \n\nShe looked at the outfit and giggled. \"I can't wear that. I'll look silly!\" \n\nLorraine winked at her holding up the little tartan miniskirt and half shirt. \"Why what's wrong with it?\" \n\n\"That skirt is so short it'll show my ass... and where are the panties?\" \n\n\"Oh, no more panties for you. You're too juicy for panties. And, of course people will see your ass - don't you want boys to fuck you?\" \n\n\"Of course! Totes! But, I might get arrested.\" \n\n\"Well, cops need to fuck too, honey. Here. Put it on.\" \n\nShe took the skirt and stepped into it, drawing it up her long, supple legs. \n\nKaren was trying hard not to stare. The girl was pure sex. \n\n\"How's this?\" She danced around on her tiptoes. Her round ass cheeks bounced under the hem. \n\nLorraine laughed. \"Priceless. Here, now the shirt.\" \n\nThe blouse was tiny in comparison to her huge boobs. \"Let me guess: no bra? Mother?!\" \n\nLorraine rolled her eyes. \"Now, how will they be able to see your pretty nipple rings if you're wearing a thick bra?\" \n\nKim shrugged. \"I guess so.\" The thin fabric barely held her generous upper assets in place, and the steel rings showed through. \n\nLorraine handed her white stockings, and the girl pulled them up her long legs. They ended just below the hem of the skirt. \n\n\"Mmm, I like these,\" Kim whispered. \n\n\"And, finally,\" Lorraine handed her a pair of white patent leather stiletto heels. \n\n\"Yay!\" She put them on her feet and danced around the room. \n\n\"Wow,\" Karen whispered. \"I think we've created a monster.\" \n\n\"Monster slut,\" Lorraine whispered back as she watched her daughter dance - a study in bimbo perfection. \n\n\"My goodness, what a change!\" Mary said. She was leaning against the stairwell doorframe naked. \n\nKim blushed a little and gave her a shy look. Her eyes lingered on the futa's thick cock that dangled near her knees. \"Hi,\" she breathed. \n\nMary crossed the room. She took Kim's hand and spun her around on the heels. \"I have to say, she's astounding, Lorraine.\" \n\n\"She is a wonderful fuck toy, aren't you, dear?\" Lorraine said. \n\n\"Thank you, Mommy,\" Kim giggled. \n\n\"Dumb, just the way a bimbo is supposed to be.\" \n\n\"Thank you, Mary,\" Kim said. She didn't appear to take it as an insult. \n\nLorraine picked up the bottle of pills Demona had given her. \"Kim, honey, I have some medicine for you to take.\" \n\nShe blinked her big eyes. \"What is it?\" \n\n\"It's a special pill to make you ovulate - do you remember what that means?\" \n\nKim appeared to think for a second. Then she smiled. \"Yes!\" \n\n\"Well, you see, Mary here wants to make you pregnant.\" \n\nKim's eyes grew wide. \"I... that scares me...\" \n\n\"Now, now. She's already made me pregnant. Can't you see how my tummy has swollen?\" Lorraine turned sideways and showed her baby bump. \n\nKim gasped. \n\n\"I'm going to have a baby in a few hours... only, it's actually going to be a clone of me. Fully grown and it's going to have all my memories. A twin.\" \n\nKim looked confused. \"Why?\" \n\n\"Because somebody has to go back and live with Daddy and your brothers and sister. Obviously, we can't do that, now can we?\" \n\n\"No... I wouldn't want to go back.\" \n\n\"That's right, but we need to keep them from suspecting we've moved on to new lives. So our clones will take our place. You see?\" \n\n\"Umm, I guess. I'm still scared.\" \n\nMary smiled and caressed her face. \"Don't be. I'll be very gentle when I make love to you. And, the doctor says the baby will be super tiny when you have it. It'll grow outside your body instead. By tomorrow there'll be another you.\" \n\nKaren walked around behind her and nuzzled her neck. \"That's right. I read all about it. It'll be super easy.\" \n\n\"Oh... Okay... I guess.\" \n\nLorraine held the pill to Kim's lips. \n\nThe girl opened her mouth and let the pill fall on her tongue. \n\nMary looked at her hungrily. \n\nShe swallowed it down. \n\nMary smiled. \n\n*** \n\n\"That's right, honey, push!\" Demona said as she held the pregnant woman's hand. \"Crazy day, huh? You lose your cock and balls and now you're five centimeters dilated.\" \n\nThe woman screamed again and squeezed Demona's hand hard. Her eyes were rolled back in her head. \n\n\"How much longer?\" Gwen asked. \n\n\"How the fuck should I know? This is the first clone I've delivered.\" \n\nGwen's eyes grew wide. \"What!?\" \n\n\"Oh, yeah, she's the first. All we did before this was SlutzNet computer simulations - don't worry, everything's going fine.\" \n\nThe woman screamed again. \n\n\"Push hard!\" Demona yelled. \n\n\"Jesus, how much pain is she in? Can't you give her something?\" Gwen grumbled. \n\nDemona looked at her with a confused look. \"Pain?\" \n\n\"Oh, my God,\" Lisa said as she arrived at the basement landing. \n\n\"Hey, super vixen, welcome to my OB/GYN unit,\" Demona laughed. \n\nLisa stood beside Gwen. \"Okay, if I had any reservations about being sterilized, they are gone now. I never want to have that happen to me... ever.\" \n\nDemona looked from one of them to the other. \"What the fuck are you two talking about?\" \n\nThe woman on the table convulsed and screamed. \n\nDemona dropped down between her thighs. \"Yeah, there we go! Six centimeters. Baby, you're a machine.\" \n\nGwen took Lisa's hand. \"Let's get out of here. Now.\" \n\nGwen practically dragged her to the steps. \n\n\"You mean you're going to miss the miracle of perverse clone birth?\" \n\n'You're goddamned right we are,\" Gwen said as she ran ahead of Lisa up the stairs. \n\n*** \n\nIn the sub-basement, Kim was bent over an operating table. She gripped the padded edge, digging her long bimbo nails into the vinyl. \n\n\"Goddamn whore! Take it all, you cunt!\" Mary screamed. \n\nKim had taken the little brown pill and, a minute later, she started feeling warm and her tummy tingled. \n\nThen Mary went nuts. \n\nIt was totes hot, but a teensy bit scary as the muscular woman had bent Kim over the table and shoved her thick cock deep in Kim's tight pussy. She had bumped Kim's 'kervix'... 'dervix'? She wasn't sure of the word. It hurt like a motherfucker, though! \n\nMom had saved her, making the big futanari slow down and not fuck her so hard. \n\nMom was the best! \n\nAfter Kim had gotten used to having the big dick inside her, it started feeling reeaall good. She started rotating her hips and lunging back to meet the thrusts. That's when Mom had used her fingers and held Kim's pussy lips open so Mary could get nice and deep! \n\n\"God, she's so fucking tight!\" Mary growled. \n\n\"Mmm, hmm,\" Lorraine laughed. \"You're going to fill her little cunt full of futa cum, aren't you, Mary?\" \n\n\"Fuck yes! I'm going to knock your slut daughter up, you perverted bitch!\" \n\nKim giggled. It was funny to hear them talk dirty. Not only was all the attention totes wonderful, she was really, really happy to be making Mary and Mom happy. \n\nMaking people happy was like, her whole reason for living now. \n\n\"Feel good, baby?\" Lorraine asked as she pulled Kim's little pussy lips even wider. \n\n\"Ooo, yes! It's so big and it feels so good! Please make a clone baby in me, Mary?\" \n\n\"Such a fucking whore,\" Mary grunted as she pounded Kim even harder. \n\n\"Yes, I am. I wanna be a pregnant fucking whore, too!\" \n\nLorraine laughed. \"Karen, if I give her another ovulation pill, do you think she might have twins?\" \n\nKaren was masturbating on a stool nearby. \"Maybe, but her body couldn't support both.\" \n\n\"Fuck, it'd be amazing to have another one,\" Lorraine grumbled. \"Then we could take one with us and the little slut would have a twin to strip with.\" \n\n\"Mmm, I'd totes love that!\" Kim giggled. \n\n\"God, I need to fucking cum!\" Mary cried. \n\n\"Go on, Mary, give it to her. Knock the little slut up. I want that tight little belly all swollen,\" Lorraine said. She leaned down and tongued Kim's asshole as Mary plunged in and out of her wet pussy. \n\n\"Aiggh!\" Mary screamed. She jerked Kim back against her cock and held her there. \n\n\"Oh! Mommy! She's cumming in me. Wow, so much cummy in my cunny.\" \n\n\"Take it all you whore,\" Lorraine laughed. \n\n*** \n\n\"That was intense,\" Gwen said as she walked hand in hand with Lisa into the field behind the farmhouse. \n\n\"Just out of curiosity, does Demona ever stop coming up with perverse things to do to humans?\" \n\nGwen laughed. \"Not so far. She's very committed to the 'Mad Scientist' image.\" She abruptly stopped and dragged Lisa down into the long grass. \n\n\"Hey!\" Lisa giggled. She landed on top of Gwen. The blonde leaned up and kissed her. \n\nGwen caressed her long black hair. \"A few days ago, you were pretty upset. How are you now?\" \n\nLisa laughed. \"Not upset. Happy. Excited.\" She shook her head. \"And, fucking evil. I mean dark evil. I want to do things, Gwen. Some of them are...\" \n\n\"Frightening?\" \n\nLisa nodded. \"They don't even seem like people any more.\" \n\nGwen nodded and turned a lock of black hair in her fingers. \"I know. That's something we have to fight. All the time. Yes, we use them and do unspeakable things to them, but we have to try to hold on to our humanity. Just a little. Try to make sure that what we do, even if it's truly awful, will end in their happiness.\" \n\n\"What doesn't destroy them will make them... weirder?\" \n\nGwen smiled. \"More or less. We're goddesses now, Lisa. I want to think that we can still have a human outlook, but I don't think we can. Not really. Call it, absolute power corrupting absolutely if you want. The rules just no longer apply to us - we're completely alien to what we were.\" She poked Lisa's dangling medallion. \"Question is: Can you live with what you are now?\" \n\nA slow smile spread across Lisa's lips. \"Yeah, I think I can. I love it. I frighten myself, but, God, I love it.\" She kissed Gwen. \"Every bit of it.\" \n\nGwen smiled up at her. \"Do you love me, Lisa?\" \n\nLisa's eyes grew wide. \"I... wow... I didn't even think about that before.\" She turned her head to the side and gazed into Gwen's eyes. \"Yes, Gwen, I love you. I don't even know when...\" \n\n\"How about Sugar Tits?\" \n\nLisa smiled. \"I love Sugar. And, Constance too.\" She sat up. \"Oh, my God. I love Alex and Demona...\" \n\nGwen nodded and smiled. \"That's our gift, Lisa. We love them. All the transformed. We love them, unconditionally.\" \n\n\"And, Sister Asmodea... I love her too.\" \n\nGwen looked away. \"Not too much, Lisa. Don't love her too much.\" \n\nLisa gently turned Gwen's face toward hers. \"What's wrong?\" \n\n\"The Church, they aren't like us, Lisa. They love us, yes, but they love themselves more. They believe they are the hand of Morpheus, destined to rule over us. Destined to rule over the entire world. We are their minions, not their equals. And, the humans? They would destroy them if necessary.\" \n\nLisa shook her head. \"No. Gwen, we're supposed to save the humans, we're not supposed to... kill them? That's not what Morpheus wants! It can't be.\" \n\nGwen sat up and held her close. \"No, it isn't Lisa. We are his hand, and we are here to save the humans, from themselves... and, if need be? From the Church.\" \n\nLisa looked startled. \"What are you saying?\" "
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "bimbofication",
        "body modification",
        "breast growth",
        "clone",
        "mother daughter",
        "pregnancy",
        "romance",
        "scifi",
        "seduction",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-the-farm-ch-06"
}