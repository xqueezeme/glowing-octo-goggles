{
    "title": "Traveler",
    "pages": [
        "\"Then tell her to go to the police...charge me with rape, go ahead!\" he yelled. Al was out of his chair and flinging his arms in the air, he was so angry. \"Dawn, I never touched her. I can't believe you'd think I'd do something like that!\"\n\n\"Why would she lie?\" Dawn yelled back. Now she was out of her seat as well. She marched right up and stared him in the eye. \"Huh, tell me, Al, why would she lie?\"\n\n\"I don't know, babe, but she is, I swear it. Call her; tell her to come on over. Let her accuse me to my face.\"\n\n\"Al, she doesn't want to be anywhere around you and I can't blame her.\"\n\n\"I can't believe you're actually buying into this crap. Dawn, we've known each other for three years. Do you really believe I'd force myself on someone; especially your roommate? Come on, I love you. I want to marry you. How stupid would I have to be to do something like that.\"\n\n\"I don't know, Al, but she has bruises on her wrists from where you held her down. She said she thought you'd been drinking. You came over looking for me and when you saw I wasn't here you forced yourself on her.\"\n\n\"Dawn, I didn't do it! Please, get that through your head. I did not force myself on Shannon or anyone else. God, this is a fucking nightmare! Did she tell this to anyone else or just you?\"\n\n\"I...I don't know. I think Tom and Betty know about it. I'm not sure about Roy and Janet.\"\n\n\"Great, if she told Betty it'll be all over the campus by Monday. I won't be able to show my face anywhere. I'm going to see a lawyer. Friend or no friend, Dawn, I'm going to sue that bitch.\"\n\n\"I'd think twice about that, Al. If you force her hand she might have to go to the police. You could wind up in prison.\"\n\n\"Oh I doubt very much she'd go to the police. You see it's against the law to file a false police report and it takes more than just her word to convict me of rape, especially since I didn't do it. She'd be the one in trouble.\"\n\n\"Al...she has a witness.\"\n\n\"What? Who?\" This just kept getting worse and worse. He couldn't understand how there could be a witness to something that never happened. This had to be a set-up, a conspiracy of some kind.\n\n\"I'm not going to tell you. I...I don't trust you anymore, Al. I'm not sure what you're capable of. Someone saw you. That's all I'm going to say.\"\n\n\"Oh this is ridiculous. When\u2014when was this supposed to happen?\"\n\n\"Al, let's just drop it. I...\"\n\n\"Drop it? I can't drop something like this, Dawn. I'll be damned if I'm going to stand around while someone labels me a rapist.\" His heart was pounding. His nerves felt like someone had raked over them with a cheese grater. He tried to calm himself down for a second. \"Come on, honey, who is this so-called witness?\"\n\nDawn's eyes glistened from unspent tears. She had loved him with all her heart, now she wondered if she knew him at all. \"Al, I...I think under the circumstances we should stop seeing each other.\" \n\nIt was as if she'd reached into his chest and ripped his heart out with her bare hand. How could she profess to love him and not know he wasn't capable of such of thing? Hell, he never even told off-color jokes in mixed company. It pretty much took the fight right out of him.\n\nThere was no mistaking the look on his face, it was pain, not the physical kind, the emotional kind, more pain than Dawn could ever remember seeing in anyone. She wiped away some tears that broke free and ran down her lovely cheeks. She loved him so much, or at least she loved the man she thought he was. Seeing his suffering had her head spinning with doubt and uncertainties. She didn't want to believe it and for a split second, questioned her friend's word-but only for a split second. The problem was she'd known Shannon a lot longer than Al and there was no reason in the world for her to lie. They were roommates, best friends; if anyone knew how she felt about him it was Shannon. She would never intentionally hurt her with a lie like that. That left only one other alternative... \n\n\"I see,\" he said. \"So you've already tried, convicted, and sentenced me. I can't believe this. An hour ago I was just thinking how lucky I was. I had good friends, a four point grade average, a bright future, but most of all...what was most important was the mutual love I felt with the woman I intended to marry. And with one lie from someone I'm not even supposed to confront, it's all gone. Well, I suppose I should consider myself lucky. I might not have learned how little you really care for me until after we were married.\"\n\nThat was it; the end of a three year romance that both Dawn and Al had been sure would lead to marriage, kids, a white picket fence, and growing old together. Without saying another word, he walked out. \n\nWith so much anger clouding his brain, he had no idea where he was going. Outside her door he turned toward the campus and let his feet follow the sidewalk. For the first hundred yards he prayed he'd hear Dawn's voice begging him to come back but it didn't happen. All he heard were the leather souls of his shoes on the pavement.\n\nHer apartment was only five blocks from the college; they were the most secluded and desolate five blocks he'd ever walked. By the time he found himself at the front gate of the campus he knew it was definitely over between them. Obviously she believed that lying bitch over him. That was unforgivable.\n\nAcross the street from the campus was a park with weathered green benches that needed sanding and repainting. It was a good thing there was no traffic because Al's mind was so preoccupied he didn't even look before crossing. His legs seemed to give out on him as he started to sit and he almost fell onto the uncomfortable wooden structure. \n\nHis surroundings were nonexistent. He was totally focused on the lie Shannon had told and couldn't understand how anyone could believe such a thing about him, let alone Dawn. He wondered what his future held for him. It was a no-brainer that word would spread throughout the small college. If Dawn believed it there was no reason to think others wouldn't as well. What about after graduation; would this terrible lie follow him into the workforce? \n\nHe needed to get away-go home for a while where he could think and talk things over with his parents; although they were never very supportive of him. He never seemed to measure up in their eyes...especially his dad's. Still...\n\nHe needed someplace to go and he couldn't think of anywhere else. Al pulled out his phone and tapped the picture taken at his parent's twentieth anniversary party.\n\nHe heard his mother's voice as she picked up the house phone. \"Hello.\"\n\n\"Hi, mom; it's me.\"\n\n\"Hi honey; this is a surprise. You don't usually call on a Saturday. Don't you usually spend Saturday's with Dawn and your friends?\"\n\n\"Yeah, well, not today,\" he lamented.\n\n\"What's the matter? You sound a little down. Is everything okay?\"\n\n\"Ah,\" he said, taking a deep breath. \"Not really. You're not going to believe this. A girlfriend of Dawn's is accusing me of forcing myself on her. I...\"\n\n\"What!\" she shrieked. \"You didn't, did you?\"\n\n\"Mom, how can you even ask me that?\" Just then he heard his dad's reaction to his mother's question. \n\n\"Didn't do what? What's he done now? Here give me the phone...Al, this is your father. What did you do?\"\n\n\"Dad, I didn't do anything. A girl on campus has accused me of forcing myself on her but...\"\n\n\"Forcing yourself; you mean raping her? What the hell is wrong with you? I raised you better than...\"\n\nThat was it, he'd had enough abuse. It was the last straw. \"You know what, screw you too,\" he yelled before disconnecting. That was it, the preverbal piece of straw. Throughout his entire life he could never figure out what he needed to do to measure up in his father's eyes. He couldn't remember a single time in his entire life when his dad stood by him. He recalled an instance in the fourth grade when he got into a fight on the school playground. The teacher even told his dad the other kid had started the fight\u2014that I was just defending myself, he remembered. \"But dad didn't care,\" he mumbled aloud. \"I got punished anyway. Well, fuck him\u2014fuck them all.\" \n\nA little earlier he'd never been hurt by anyone like he'd been hurt by the woman he loved. Since then the hurt had turned into anger, now it was metastasizing into something else again...bitterness! He'd spent his whole life trying to be the best person he could be and what had it gotten him; parents who couldn't care less whether he lived or died and a girlfriend who thought he was capable of rape. \n\nHe stood; \"Fuck'em all,\" he yelled as he threw his phone as far as he could. He turned his back while it was still sailing through the air. He didn't care where it landed. There was no one he wanted to talk to anyway.\n\nNever in his life had Al ever felt so lonely or so depressed. It was as if he was dangling above a dark, bottomless canyon just wondering when the rope would snap. He needed to get away; he needed to get his feet on firm ground again, if that wasn't possible by going home then somewhere else, he didn't much care where. \n\nHe looked at his watch. It was only four-thirty. If he hurried he still had time to get to the bank before they closed. He jogged across the campus grounds to his dormitory. Terry, his roommate was sitting in the hall outside the door, plunking on his guitar. He said nothing but just nodded his head as Al quickly stepped past him on his way into their room. A moment later Al came back out with his twenty-one speed road bike over his shoulder.\n\nTerry looked up from his fretboard. \"Hey, man, where you going?\"\n\n\"Out,\" he answered. He never looked back. If he had, he'd have seen the evil sneer on his roommate's face. \n\nOnce outside again, Al hopped on his bike and took off for the mile long trip to the nearest branch of his bank. He had been banking there since he started college more than three years earlier. In addition to a small checking account, he had a secret savings account he started when he met Dawn. It was going to be a surprise so he could buy her a nice engagement ring. There was a little over thirty-one hundred dollars in it. That plus the hundred and fifty he had in the checking would hold him for a little while. He closed out both accounts and said goodbye to the tellers before leaving.\n\nHe unlocked his bike and let out a deep sigh as he placed his left foot in the toe strap and pushed off swinging his right leg over the seat and catching the other pedal at its highest point. A ghostly sense of death haunted his wake, the death of those he was leaving behind, not physically of course, but in his mind.\n\nAl had been on the road for half an hour by the time Terry had showered and was on his way to Dawn's apartment. She came to the door when she heard his knock.\n\n\"Oh, Terry; come on in. I thought it might have been Al.\"\n\n\"Naw, he took off on his bike a little while ago. He didn't look like he was in a very good mood so I figured you guys must have had it out. I thought I'd come over and see if there's anything I can do.\"\n\nDawn had never cared for Terry that much. His parents had big money and he always seemed a little arrogant, but since he witnessed Al leaving the apartment after attacking her roommate...well, he seemed to be a kindred spirit of a kind. \n\n\"That's sweet, Terry; thank you. I don't really think there's much you can do. Shannon will be back in a little while. She didn't want to be here when Al came over.\"\n\n\"Yeah, I can understand that. It's still hard to believe he'd do something like that. You think you know someone...\"\n\n\"Yeah, I'm still having a hard time with it. He's always been such a gentleman. Hell, when we first met I had to practically throw myself at him before he'd make a move. It...it's just not like him.\" \n\n\"Unfortunately, we can't just look into someone's heart and see what's actually in there. I know it's hard now but you really should consider yourself lucky that you found out when you did.\n\n\"Listen, you need some cheering up. Why don't you jump in the shower. When Shannon gets here I'll take you both out for a nice dinner. Maybe we can even squeeze in a little dancing somewhere, what do you say?\"\n\n\"I don't think so, Terry. It's a great offer but I'm really not in the mood. Maybe Shannon would like to go.\"\n\nBefore Terry could put up a fight, Shannon came through the door. \n\n\"Go where?\" she asked. \n\n\"I was just telling Dawn I'd like to take you two out to dinner tonight. She and Al just had it out and she's feeling pretty bad. I thought it might cheer her up.\"\n\n\"Hell yeah,\" Shannon jovially remarked. \n\nDawn thought her friend seemed awful cheery for someone who had been raped not twenty hours prior. \"How can you be in such a happy mood?\"\n\n\"Look, it isn't like I'm a virgin. Yes, the bastard raped me but I'm not going to let it ruin my life. I do feel sorry for you though. What happened anyway? Are you going to continue seeing him? Because if you are...\"\n\n\"No,\" said Dawn, cutting off her friend. \"We split up. He...he took off.\"\n\n\"Good,\" commented Shannon. \"I would be worried about you being out with him. Maybe he's bi-polar or something but I wouldn't trust him anymore, that's for sure.\" She saw a tear break free and run down her friend's cheek. \"Ah, I'm sorry, Dawn. I shouldn't have said anything. Come on; let's let money bags here take us both out to dinner. It'll take your mind off things for a while.\"\n\n\"Come on, Dawn,\" Terry said, joining in. \"We'll go anywhere you want to go.\"\n\n\"I don't know. I'm really not in the mood.\"\n\nShe looked at Shannon who was making a pouty face like she always did when she wanted Dawn to do something with her. \"Oh, okay,\" she said, giving in with a sigh. \"Some place nice though. I don't want to take a chance on running into Al somewhere. I just couldn't handle it right now.\"\n\n\"How about the Chez' Paul.\"\n\n\"Oh, Terry, I didn't mean that nice. I just don't want to go to Denny's or Applebee's. Besides, I doubt if we could even get in Chez' Paul on a Saturday night. It's by reservation only. You'd never get one this late.\"\n\nWithout saying another word, Terry pulled out his cell phone, thumbed through the menu, and tapped on one of the contacts. \"Yes, is Gene there, please? Tell him it's Terry Belshaw.\" He stared at Dawn with a smirk for minute while waiting. \"Gene, hey old buddy; yeah, doing good, how about you? Listen, I need a table for three tonight. Yeah...say an hour or so...thanks, old buddy.\" He broke the connection and looked up at Dawn with a big smile. \"Done; you've got forty-five minutes to get ready.\"\n\nShe had to admit\u2014THAT was impressive! \"Alright, I guess I can't say no now can I? I'm not even sure what I'll wear to a place like that.\"\n\n\"Come on,\" Shannon said. \"You get your shower and I'll pick out something for us to wear. Hurry up.\" \n\nThe girls went into the bedroom while Terry went to the fridge and took one of Al's favorite beers. He lounged back on the couch while waiting.\n\nDawn stepped in the shower. Being alone was not good. All she could think about was Al. She still couldn't understand it. The sound of the shower covered the sound of her crying. The warm cascading water may have washed away her tears, but it did nothing for the pain in her heart. By the time she wrapped a towel around her and stepped into the bedroom, Shannon had their clothes lying on the bed. \n\n\"Are you wearing that little cocktail dress?\"\n\n\"No, that's for you. I'm wearing this,\" she replied, holding up a white blouse and small, red skirt.\"\n\n\"Shannon, I can't wear that dress. It's too short. It's four inches above my knees.\"\n\n\"So, it isn't like you don't have the legs for it.\"\n\n\"It...it doesn't feel appropriate. I just broke up with the man I was going to marry.\"\n\n\"All the more reason,\" commented Shannon. \"What's that they say about getting right back up on the horse? Speaking of which...I understand Terry is pretty well hung.\"\n\n\"Shannon...\"\n\n\"I'm just saying,\" she said in a melodic speaking voice and with a big grin. \"Come on, we don't have time to debate it. Put the damn dress on and let's go. It isn't often we get invited to the Chez' Paul.\"\n\nReluctantly, Dawn adorned the short, black dress. She had to admit, she looked HOT. \n\n\"Damn!\" was all Terry could articulate as they presented themselves. \"I am going to be the envy of every guy in that place.\"\n\nBetween Terry and Shannon they were able to keep Dawn's mind off of her break up for most of the evening. It was Shannon mostly. It wasn't the first time she had to cheer her friend up like that. She knew what buttons to push and she could always make her laugh. \n\nTerry was at least tolerable, although every now and then the specter of conceit would peek out from his charm. It turned out that his dad had gotten him a membership at the local country club. That's where he met Gene, the restaurant's manager.\n\nIt must be nice to be so rich, thought Dawn; which brought up a question. \"Terry, with your dad's money you could go to college just about anywhere. What are you doing living in the dorm at a small college like Governor's State?\"\n\n\"It's my dad's alma mater,\" he replied. \"The dorm is his idea too. He wants me to have the full experience of college life,\" he chuckled. \"He wasn't always rich. He made his fortune after going into business and credited the education he got here, so...\"\n\n\"He wants the same for you,\" Dawn said, anticipating what he was going to say.\n\n\"Yup,\" he said with a smile. \"I wanted to go to Northwestern and hang out with all the future movie stars but it wasn't in the cards so here I am.\" \n\nOnce again, as he said that, Dawn saw a sliver of that pretentiousness she didn't like. Just the inflection in his voice; it was almost like he wanted to finish his statement by saying, 'so here I am with all you peons.' \n\n\"What about you girls, someone said you've known each other for a long time.\"\n\nShannon didn't speak up so Dawn answered. \"Yeah, we met in the fifth grade and been BFF's ever since.\"\n\n\"How come you have an apartment and don't live in the dorm?\"\n\nAgain, Dawn fielded the question. \"They couldn't guaranty we'd be able to live together so we looked around for a cheapo apartment. We really lucked out with that place. Mrs. Cooper, the landlady is very nice. After retiring, her husband built the apartment over the garage for extra income. He suffered a stroke a couple years ago so we don't see him much anymore but she's still pretty active.\"\n\nDawn was ready to go back home after dinner but her escorts wouldn't hear of it. Instead they took her to a bar that had live music. She did do some dancing, mostly with Shannon but she also danced a few with Terry and even a couple other guys. They didn't make it back to the apartment until almost one in the morning. Terry tried to kiss her good night but she turned her cheek so he took what he could get.\n\nThe next morning Shannon was making coffee when Dawn sat down at the kitchen table feeling a little worse for wear. \n\nShannon took one look at her and laughed. \"Don't tell me you can't take it anymore? You look like hell there, girlfriend.\"\n\n\"Thanks, I love you too,\" she snickered back. \n\nShannon took a couple of cups down from the cupboard and filed them both. She set them on the table then took Dawn's creamer from the fridge and put it down next to her coffee.\n\n\"Thanks,\" Dawn weakly acknowledged. \n\n\"Terry's pretty nice isn't he. Hey, Brian and I are going to the movies next Saturday night. Why don't we double date? We haven't done that in a while.\"\n\n\"I don't think so, Shannon. I'm not really crazy about Terry.\"\n\n\"What? Are you nuts, girl? He's good looking, smart, and his dad has more money than God; not to mention he's crazy about you. Jesus, what's not to like?\"\n\n\"I don't know, it's...I guess it's his attitude. He comes off like he thinks he's better than everybody else sometimes.\"",
        "\"Oh, yeah, I forgot, he's honest too,\" Shannon quipped. \n\nDawn just looked at her. \n\n\"Okay, okay, so he's a little full of himself sometimes, big deal. You can overlook that once he starts buying you expensive jewelry.\" Dawn didn't say anything and Shannon knew her well enough to know conceited people turned her off. \"Okay, the least you can do is give the guy a shot.\"\n\nShe wasn't convinced. \"I don't know...\"\n\n\"Well at least think about it.\"\n\n\"Yeah, okay, I'll think about it,\" Dawn promised. \n\nThe rest of the day was pretty quiet. Shannon left the apartment for a little while and didn't say where she was going but she was only gone a couple hours. No more was said about her and Al although she couldn't keep him from invading her thoughts from time to time. \n\nWhen Monday rolled around, Dawn found herself very conflicted. She and Al shared a class together. It was a two o'clock class on nonfiction literature. She'd never tell Shannon but in spite of what he'd done, she missed him. She certainly didn't want another confrontation, especially in public, but she did want to see him\u2014just to make sure he was alright. \n\nThe problem was he wasn't there. That concerned her. Rarely did Al ever miss a class. Maybe he didn't come because he knew she'd be there? Well, she was convinced he'd show up sooner or later. He wouldn't risk failing a class just because she was in it. Luckily, she had her part-time waitressing job to go to later that night. For the first hour of her shift she'd glance toward the door every time it opened to see if it was him but he never showed.\n\nLater that night she had a hard time getting to sleep. Every time she closed her eyes she'd see the pain screaming from behind his eyes when she told him she was breaking things off. \n\nTuesday was a carbon copy of Monday, he wasn't in class nor did he show at the restaurant that evening. When she didn't see him in class again on Wednesday she was really getting concerned. She thought about calling Terry, after all they were still roommates. She had resisted calling him earlier because she didn't want Shannon to know she was still worried about Al after what he did but after four days she had to check on him.\n\n\"Hi, Terry, it's Dawn.\"\n\n\"Hi, Dawn,\" he answered, elated that she called. \"Hey, I saw Shannon; she said something about double dating on Saturday. I guess we're all going to the sh...\"\n\n\"Terry, I haven't made up my mind yet but that's not why I'm calling. Al hasn't been in class all week. Is he sick or something?\"\n\nHe was a little ticked that she wasn't calling to confirm their double date and even more ticked that she was asking about Al. He wanted to give her a little time to get over the guy so he wasn't pressuring her but after talking to Shannon he thought everything was all set for Saturday. \"Dawn, I haven't seen Al since he took off on his bike last Saturday,\" he said, trying to keep the anger out of his voice. \n\nDawn hadn't even considered he hadn't returned since then. She was speechless while her brain was processing what he'd just said. Finally it registered. \"You mean you haven't seen him at all since then?\"\n\n\"Nope, now what about Saturday night; are we going or...\" Suddenly he was talking to a dead line. \n\nAgain, she remembered the look of heart break and anger on Al's face as he left her apartment and wondered what other emotions he may have been experiencing; emotions that she couldn't read. For a moment her thoughts were frozen with fear. Finally reason worked its way through the fog. His parents...of course, she thought. He went home. That was the logical conclusion. \n\n\"Dawn, break's over,\" she heard the restaurant manager call.\n\n\"Yeah, I know. I need another five minutes,\" she answered. \"I just have to make one more call.\" She hurriedly scrolled through her contacts. \"Hello, Mrs. McCain?\"\n\n\"Yes, who is this please?\"\n\n\"Mrs. McCain, this is Dawn Spencer. How are you?\"\n\n\"Oh, Dawn; it's nice to hear from you. How are you?\"\n\n\"Ah, I'm okay. Listen, I just wanted to check and make sure Al is okay.\"\n\n\"Al? Isn't he there with you?\"\n\n\"No, we, ah...we had a falling out a few days ago and I haven't seen him since. I...I thought maybe he went home.\"\n\n\"No, dear, we haven't seen him. He did call last week. Does this have anything to do with some girl saying he attacked her?\"\n\nDawn was trying to hold it together but was getting more frantic by the minute. \"Yeah, Mrs. McCain. Did he say anything when you talked to him; where he was going or anything like that?\"\n\n\"No, I'm sorry, Dawn. We didn't talk long. His father got on the phone and started to yell at him and Al hung up on him. I wanted to call him back but Ralph wouldn't let me. He says he made his bed, he can lie in it.\"\n\nWow, Dawn thought; it certainly didn't sound like he got a lot of support from his folks. She wondered if there was a reason. Had he done something like this in the past? She had to ask. \"Mrs. McCain, I've only known Al for three years. Has he ever attacked anyone before?\"\n\n\"Oh no, never,\" she stated. \"Al's always been a good boy. His father's just always been kind of hard on him. You don't really think he attacked that girl, do you?\"\n\n\"Ah, I...I don't know what to think, Mrs. McCain.\" She was in silent thought again for a few seconds then wondered... Mrs. McCain, is he really not there or did he just tell you to say that if I called. If he did, just say yes.\"\n\n\"No, I'm sorry, Dawn but he's not here, honest. When you see him though, ask him to call me when his dad's not home. I know my boy. He'd never attack anyone so I'd like to find out what this is all about.\"\n\n\"I will Mrs. McCain. I'll tell him as soon as I see him.\"\n\nSuddenly Dawn felt like she was breaking out in a cold sweat. Where could he be? Al never spoke much about his parents. She'd only met them a couple of times and they were short visits. Now she understood why. She thanked his mom then decided there was only one more person to call.\n\n\"Dawn!\"\n\n\"Yeah, just a minute,\" she snapped back at her boss. She hit the call button.\n\n\"Hola.\"\n\nWhat the hell? A Spanish speaking woman just answered Al's phone. Now she was confused. \"Ah, hello; who is this?\"\n\n\"Who is this?\" the woman responded with a heavy Spanish accent.\n\n\"I am Al's girlfriend,\" she snarled. \"Now who the hell are you?\"\n\nSuddenly the woman sounded frightened. \"I...I did nothing wrong.\"\n\nDawn was getting exasperated. \"I didn't say you did. I'm calling for Al McCain. Please put him on the phone.\"\n\n\"I...I'm sorry; I know no one named Al.\"\n\n\"Then how the hell did you get his phone?\" Her voice went up several decibels.\n\n\"My son, he found it in the park,\" she replied. \n\n\"Dawn, if you don't get your ass out here right now I'm sending you home for the night,\" yelled her angry boss.\n\nShe was now bewildered and confused. She hung up because she couldn't think of any more questions to ask the woman. It didn't make sense. How could someone just find his phone like that? Where the hell was he?\n\n\"Dawn...\" Her boss went to the break room to retrieve her but stopped when he saw she was white a sheet. \"Ar...are you feeling okay? You don't look good.\"\n\nHer eyes were listless as she looked up at him. \"Ah, I...I have to go,\" she said in a voice that matched her eyes. \n\nShe was normally a good employee, a hard worker, and reliable. Obviously something was wrong so he told her to let him know if there was anything he could do and let her go for the night. Dawn was so preoccupied she didn't even think to thank him. \n\nThere was one more possibility. From Monday through Thursdays, Al worked as a bartender at Plato's Place. She hated to spend the money on a cab but she had no choice. She nervously waited outside the restaurant until it came. \n\nShe was happy to see the owner behind the bar when she walked in. She'd met him a couple of times when she was in there with Al. He seemed like a nice guy. \n\n\"Hi, Steve...\"\n\n\"Hey...Dawn, right?\" He didn't wait for her to answer. He had his own questions. \"Hey, where's that lazy boyfriend of yours? Is he sick?\"\n\nHer heart sunk. \"You mean he hasn't been in?\"\n\n\"No; I haven't seen him since Friday night. Is he okay?\"\n\n\"You mean Thursday night. He stays home and studies on Friday nights.\"\n\n\"No, I mean Friday night. My other bartender's wife was having a baby. Al came over to fill in for him.\"\n\n\"A...are you sure that was Friday night\u2014last Friday night?\"\n\n\"Last Friday night, yeah, of course I'm sure. The place was hopping. We worked shoulder to shoulder all night.\"\n\n\"What time did he come in?\" she asked with a frantic voice.\n\n\"Eight o'clock, just like always; eight to two.\"\n\nDawn's legs felt weak and she sat heavily on a barstool. She lied, she told herself. Her best friend lied to her. Why? Why would she do something like that? She started to tear up. Finally Steve's voice broke through her cerebral daze.\n\n\"Dawn...are you okay?\"\n\n\"Ah, oh Steve, I've done a terrible thing. I...I share an apartment with my girlfriend. Al always stays home on Fridays to study. It's about the only time he gets all week so I usually leave him alone and go to the library. Last Friday night my girlfriend said he came over to the apartment and molested her.\"\n\n\"What? Al? That's ridiculous; he'd never do anything like that.\"\n\n\"Your right, Steve, and that's exactly what I should have said. Instead I believe her. I got home about nine-thirty. My girlfriend was there and it looked like she'd been crying. She said Al had come by about eight and forced himself on her when he found out she was alone. There was another guy there who said he saw Al leaving the apartment about eight-thirty. He said it looked like he was angry so he knocked to see if everything was okay. That's when he found my girlfriend with her blouse ripped and almost in shock. \n\n\"I broke up with him and now he's disappeared. No one's seen him, his parents don't know where he is, and some Spanish woman said she found his phone in the park. I'm really worried, Steve. You don't think he'd hurt himself do you?\"\n\nSteve couldn't decide whether he was pissed at her or felt sorry for her. He knew how much Al loved her. Hell, she was the only thing he ever talked about. He could only imagine how devastated Al must have been. He tried not to sound incriminating. \"I don't know, Dawn. I hope not. You should call the police and report him missing.\" He didn't want to tell her but if Al didn't have his phone on him, maybe he didn't have his wallet either. He could be a John Doe in the morgue.\n\n\"Yeah,\" she answered, still in a daze. \"That's a good idea. I'll do it right now.\" She pulled out her phone before realizing she didn't have the cop's number. \"Do you think they'll get mad if I call nine-one-one?\"\n\n\"Yeah, that's for emergencies only. Here,\" he said looking at one of several phone numbers taped to the wall behind the bar. \"The number's eight three six, nine one one two.\"\n\nSteve listened in for several minutes while Dawn gave all the information to the cop on the other end of the phone. She told him her worries about Al possibly hurting himself and of the Spanish woman who now had his phone. The whole time she spoke, more and more tears were starting to flow and her voice was getting weaker. Toward the end of the conversation, the cop gave Dawn an email address for sending in a picture of Al from her phone. Steve prayed they didn't ask her to go and identify a body when she was all done. He sighed with relief when she hung up.\n\n\"What'd they say?\"\n\n\"They're going to send his description and photo out to all the patrol cars and hospitals in the area. They're also going to contact that Spanish woman and see if they can get any more out of her. He said they'll take his phone from her and put it into evidence just in case of foul play. Oh Steve, I'm so scared.\"\n\n\"You did about all you can do, Dawn; that and pray, I guess. Here,\" he said, handing her a napkin to dry her eyes. \"Can I get you a glass of water?\"\n\nShe just nodded while she wiped the napkin over her eyes several times. \"Why, Steve,\" she questioned as he laid the glass down on the bar in front of her. \"I've known Shannon since we were kids. She knew I was in love with Al. Why would she lie to me like that? Why would she want to hurt me like that?\"\n\nThe anger he felt earlier had pretty much subsided; only the sympathy remained. \"I don't know, Dawn. Maybe she was jealous. It happens; sometimes people are jealous of someone else but it takes years to show itself. That's the only thing I can think of. Either that or she got really pissed at either you or Al for some reason. Did you have a fight or anything?\"\n\n\"No,\" she sniffled.\n\nSteve set several more napkins in front of her.\n\n\"We never fight and if she and Al would have gotten into it for some reason he'd have said something. God, Steve, what am I going to do if something's happened to him. I'll never forgive myself,\" she sobbed. \n\n\"Dawn, you were lied to. You can't blame yourself.\"\n\nShe stayed another half an hour while Steve tried to convince her it wasn't her fault. It was after ten by the time he put her in a cab and slipped the driver a twenty to take her home. She knew Shannon would be at the apartment when she got there. \n\nShannon hadn't been home long. She'd just gotten out of the shower and was putting her robe on when Dawn walked in. Shannon saw her red, puffy eyes and the tracks where tears streaked her cheeks. \"Dawn, what's...\"\n\nShe never even saw it coming. The open hand blow was so hard that it spun Shannon's head around and knocked her across the bed. The attack was so sudden she was scared to death as she felt the side of her face with her hand. She looked into the raging face of her long-time friend with fear. \n\n\"WHY DID YOU LIE TO ME? WHY, WHY WOULD YOU DO THAT TO ME?\" Dawn screamed while leaning over her former best friend. She burst out in tears again as she sat on the bed and threw her face in her hands. \n\nStill shocked, it took Shannon a minute to get her voice back. \"I...I didn't...\"\n\n\"STOP LYING!\" Dawn shouted. \"Al was at work all night Friday night. He was there with his boss serving drinks at the same time you said he raped you!\"\n\nOh shit, Shannon cursed at herself. The jig was up. She never thought about getting caught in her lie. Al always spent Friday nights in his dorm room alone. Shit, shit, shit. \n\nThe side of her face felt like it was on fire. Before saying anything, she was going to get up and get something out of the freezer to put on it. Maybe she could come up with some kind of back up lie in the meantime.\n\n***\n\nAl was surprised at how much real estate he'd been able to put between him and his problems. Between his anger, adrenaline, and his life-long love of biking, he was already in Ohio. \n\nHe could have been a lot further if he'd had a course mapped out or even knew where he was going. He stayed off the main highways and just kept following county roads. East, that was the general direction but that was as far as his route was planned. \n\nIf he had been thinking at all he'd have thrown some clothes in his back pack before he took off. Talk about roughing it; he didn't stop Saturday night until two in the morning, not even to eat. Then he grabbed a couple winks on a park bench in Indiana somewhere. He was going to stop and buy some clothes on Sunday but just kept going. He didn't actually stop until Monday when he saw a Target in some small town in Ohio. By then he was smelling pretty rank and making himself sick. He was embarrassed going into the store like that but then he thought, hell\u2014it's not like I'm ever going to see any of these people again. So, he stuck out his chin and went in to buy a couple shirts, a pair of slacks, some underwear and socks, a backpack and a small nylon pup tent. The pretty, young lady behind the register wrinkled her nose when he stepped up to pay.\n\nIt was early evening when he stepped out of the store. He'd already spent two nights in a row sleeping under the stars so he thought he'd treat himself to a shower and an actual bed for the night. He asked around for the cheapest motel in town...and found it; forty-five dollars a night and the cockroaches were free. \n\nThere was a coin operated laundromat only a couple blocks away so he took a shower then changed into clean clothes before washing the dirty ones. He felt like a new man by the time he stopped into a little diner for some supper. \n\nThe place didn't look that much different than where Dawn worked. Try as he did to not think about her, it was his first thought as soon as he walked in the door. He wondered what she was doing. Did she even know he left? Did she care? Probably not\u2014not if she believed that bitch she lived with and she obviously did. His mind blocked out everything else around him as he drifted back to that last conversation. \n\nShe said there was a witness? This was obviously some kind of a conspiracy against him but by who...and why? He wasn't aware of having any enemies. He still wondered about Dawn\u2014was she in on it or was she a victim? \n\nSoon regret was squeezing its way between the anger and pain. Maybe I shouldn't have left, he questioned himself. I guess I could always go back\u2014try to get to the bottom of this\u2014see if I can find out who has it in for me. I could start with Shannon, but how would I get her to tell the truth? I couldn't threaten her physically, that would only make me look more guilty. \n\nDamn, he wondered, was this just some stupid elaborate plot between Shannon and Dawn to dump me? But why would she go to those extremes?\n\nHe had finished eating by the time he realized it just didn't matter. Nothing mattered anymore. All his life he had tried to be someone he was proud of. To find out even his own parents thought him capable of such a horrendous act was more than heart breaking, it tortured his very soul. \n\nNo, there was no going back. What for? If living his life the way he had didn't convince those he loved, no amount of denial or proof was going to assure them of his innocence. No, he was alone. In the past he'd always hated being alone, now he'd embrace it. At least when the hurt finally goes away he won't have anyone else to hurt him again.\n\nThat night, in spite of the tormented thoughts swirling around in his brutalized brain, Al was still tired enough to be able to fall asleep. \n\nWaking up in an actual bed for the first time in several days was nice. Al threw the sheet from his naked torso and swung his legs over the side, planting his feet on the cheap carpeting. He raised his head and the first thing that caught his eye was the checkout card on the back of the door. That's when everything from the last several days came into focus. Being careful not to flash anyone, he stood off to the side and pulled the drapes back three or four inches to peek outside. He knew he was in Ohio but that was as far as it went. From what he could see, it wasn't anywhere he wanted to stay.\n\nAfter a nice long shower, Al made his way to the little diner again for a good, hearty breakfast. He wasn't sure how long he'd be on the road before eating again. On the way out of town he stopped at a Convenient store for a few Granola bars and to fill his water bottle then was back on his way. The sun had moved from in front of him, over his head, and was at his back by the time he stopped again.\n\nDuring the day he had passed right through a couple more small towns but he was getting hungry so this one he would stop in. As he walked into the first diner he came to he wondered if they were all going to remind him of the one Dawn worked in. \n\nHe could run from the people but he couldn't run from his thoughts and memories. They'd been his constant companion since he left. At times the little voice in his head whispered notions of reconciliation and finding a way to work things out. Other times that same voice screamed in his ear with anger, pain, and rage, I don't need them, it would exclaim, fuck'em! ",
        "***\n\nShannon and Dawn got nothing resolved on Wednesday night. Shannon's jaw hurt too much to talk and Dawn was too upset to listen anyway. They were both crying when they went to bed that night. \n\nShannon knew she had screwed up badly. Her intentions were good, at least that's what she told herself but she never thought about the consequences of being caught. With all the years they'd known each other, seldom did they ever disagree. But this was serious. She could lose her best friend over this. \n\nShe had an early class on Thursday. Dawn was still sleeping on the couch when she left so she wrote a quick note and put it next to the coffee pot where she knew Dawn would see it.\n\nDawn, I'm so sorry. I'll confess to both you and Al this evening. I honestly thought I was doing you a favor but I see now my intentions were misguided. I'll see both of you this afternoon, after school.\n\nShannon\n\nDawn was so emotionally drained she didn't wake up until after nine. She had a ten o'clock class so she had to get going. By the time she got out of the shower there was no time for breakfast. She left the apartment without seeing the note.\n\nAs she approached the college she noticed two squad cars in the park. She glanced around and saw four officers combing the grounds. She thought back to the Spanish woman saying she found Al's phone in the park and put two and two together. She looked at her cell phone for the time. She only had seven minutes before class started. Screw it, she told herself. Talking to the cops was more important than her class. \n\nShe approached the nearest cop. \"E...Excuse me, are you looking for Allen McCain?\"\n\n\"Yes, ma'am,\" he answered, looking up. \"Do you have any information on his whereabouts?\"\n\n\"No, I...I'm his girlfriend. I'm the one who called. I'm so worried about him. Have you found out anything yet?\"\n\n\"I'm afraid not. Can you tell me anymore? Did you have a fight or anything like that?\"\n\nThe officer from the previous night hadn't asked a lot of questions; only enough to fill the missing person's report out. She was so ashamed for accusing Al of something he didn't do, she really hated to answer the officer's question but she wasn't going to hold anything back.\n\n\"I'm afraid it was more than a fight. My best friend accused him of raping her. Just last night she admitted she lied about the whole thing.\"\n\nSergeant Rawlings stood there staring at her for a few seconds. \"That's a hell of a thing to falsely accuse someone of. Of course you believed the girlfriend,\" he said, reproachfully. \n\nThe accusatory tone in his voice did nothing to relieve her guilt. She slowly nodded her head without any attempt of an excuse.\n\n\"When was this?\"\n\n\"Saturday afternoon, about four o'clock,\" she told him. \"He...he left my apartment and went back to his dorm room to get his bike. No one's seen him since. I called his mom...\"\n\n\"Yeah, we talked to them. They don't seem to be as worried about him as you are; not the father anyway.\"\n\n\"Yeah, Al never talked about his dad too much. I don't think they got along very well.\"\n\n\"Well, to be honest, it sounds like he just took off. I doubt if any foul play was involved in his disappearance. To be falsely accused of something like that, especially by somebody you care about, I'm sure was distressing for him. He'll most likely take a week or so to cool off then come back.\"\n\n\"God, I hope you're right. I've got to tell him how sorry I am,\" she said while starting to tear up again. \"Even if he never forgives me, I at least have to tell him.\"\n\nAs she left the park, heading into the campus, a young officer approached his superior, Sergeant Rawlings. \"Wow, Sarge, who was that? Damn, what a cutie.\"\n\n\"The missing guy's girlfriend,\" he answered. \"And you can get those thoughts right out of your head,\" he admonished. \"You know better than to even think about starting a relationship with someone involved in a case. If we find any evidence of foul play she could very well become a suspect. Besides, I don't really think she's in the market for a new boyfriend right now. She's shouldering a lot of guilt concerning the one that's missing.\"\n\nDawn looked at the time again. She was already fifteen minutes late. Screw it, she told herself. She was planning a trip to the administration offices after the class so she decided to blow-off the period altogether and go over there instead.\n\nShe had three more classes that day so she ate in the cafeteria and spent the rest of the day on campus. On her way home she looked over to the park but the cops were gone.\n\nWhen she had to use her key she knew Shannon wasn't home yet but she wouldn't be far behind. She walked from the door directly into the bedroom. About twenty minutes later she heard the front door open and close.\n\n\"Dawn?\"\n\n\"In here,\" she answered. \n\nShannon started talking even before reaching the bedroom. \"Dawn, I'm so sor...\" She stopped dead in her tracks as she rounded the corner. \"What are you doing?\"\n\n\"What's it look like, I'm packing.\"\n\n\"Why?\"\n\n\"Why? You got to be kidding,\" she said with anger building up again. \"You purposely lied to break us up. I love him, Shannon. We were planning to get married. Now...\"\n\n\"You still can,\" cried Shannon is a panicky voice. \"I lied, I admit it. Is...is he here? I said I'd apologize to both of you. Did you see the note I left? Please, call him. Ask him to come over. I'll tell you why I li...\"\n\n\"He's GONE, Shannon. He walked out of here last Saturday and nobody's seen him since; not his parents, not Steve at the bar, nobody! I'm praying he hasn't done something stupid.\"\n\nThis was news to Shannon. Now she was getting scared. \"What do you mean something stu...\"\n\n\"KILLED HIMSELF,\" she screamed as tears flooded her eyes. \"Get it now?\" she shrieked, looking her former friend in the face. \"Because of your lies he may have killed himself.\" As worried as she'd been, she never verbalized her fears until that moment. Hearing the words spoken out loud had her stomach doing flip-flops. She stopped packing and sat on the bed. She took in a series of gasps without letting them out again until she exhaled with a hideous scream that immediately mutated into bottomless sobs.\n\nIt was the second time in twelve hours that Shannon had been shocked into bemused silence. Dawn's words rolled around in her head like a ball bearing in a pinball machine. Her eyes were frozen open and stared straight ahead as she unconsciously sat on the bed next to Dawn. Without even realizing it, tears consumed her empty glare and trickled down her face. \n\n\"You...you don't know that for sure, right? I...I mean...they haven't found any evidence or anything, have they?\"\n\nDawn sat, trying to get some control over her emotions. For a minute she couldn't speak, couldn't hardly breathe. She wiped the fresh tears from her face with the palm of her hand. \"No, nothing yet,\" she finally chocked out. \"I don't understand how you could do that to me.\"\n\n\"I thought I was doing you a favor. Te...\"\n\n\"A favor!\"\n\n\"Yeah, it was Terry's idea. He offered me two thousand dollars if I could break you and Al up. In case you haven't notice, the guy's head over heels in love with you. He said he's been in love with you since you guys met. He tried to tell you a couple of times but you were so ga, ga over Al you never paid any attention to him.\"\n\n\"Terry? He got you to lie? That son of a bitch. Shannon, I never paid any attention to him because I don't like him. I've told you that.\"\n\n\"Yeah, I know but I thought if you gave him a chance you might learn to like him. He said he could give you way more than Al could even think of. He told me how he wanted to shower you with gifts, jewelry, a new car; he said he would be taking over his dad's company after graduation and you'd live in a mansion with servants. \n\n\"I just wanted what was best for you, Dawn, honest.\"\n\nDawn just shook her head in disbelief. \"Shannon, if money is that important to you then YOU marry the asshole. I don't care what your motivations were; you ended our friendship. Al was a sweet, sensitive man who never hurt anyone and you may have gotten him killed with your lies.\"\n\n\"Dawn, please\u2014I'm so sorry. Don't move out. Where are you going to go? I'll help you look for Al. I...I can't believe he'd really hurt himself. He's got to be around somewhere. He's too level headed to do something like that.\" \n\n\"You didn't see the look on his face when he left here,\" she snapped. It was a look she'd never forget. Every time she closed her eyes she could see the disappointment and hurt in his face. \n\n\"I stopped in at administration building today and asked about dorm rooms. They had a couple left so I took one,\" she said, answering Shannon's question. Now she just wanted to finish packing and get out as soon as possible. \n\nThe sound of Dawn closing the door behind her that night, was probably the most lonesome sound Shannon every heard.\n\n***\n\nIf nothing else, Al was developing a renewed appreciation for the country. Some of the scenery he'd seen was downright inspiring. Someday, he thought, after I settle down somewhere, I'm going to have to write a book about riding a bike across the Midwest. \n\nHe had to think but deduced it was Friday. He'd been on the road for almost a week and was somewhere in Pennsylvania. The night before, he grabbed a bite to eat then decided to keep going instead of spending another night in a motel. It was after one in the morning when he happened on a pretty little spot next to a small river. The ground was flat, the grass was soft, and there wasn't a soul around so he used his tent for the first time and drifted off to the sound of the babbling water. \n\nEach night it seemed thoughts of Dawn occupied less and less of his time before falling asleep. Slowly but surely, the hurt and anger was getting pushed further back into his subconscious. What was still there; however, and just as ferocious, was the bitterness. He wasn't sure that would ever go away and it scared him. He could feel how it was changing him. He was already starting to look at the world with scorn and contempt. He couldn't remember the last time he smiled and that wasn't like him at all. He wondered if he'd ever be able to have fun again, laugh again, or simply enjoy life again. \n\nAl was up early the following day. He had a troubled sleep and decided to push on as soon as the birds started singing at first light. He'd been on the road only a couple hours when he came upon a truck stop. The place was a home away from home for weary travelers. He grabbed a big breakfast and used the free shower in the men's room. With a full stomach and clean clothes, he noted his location by the red dot on the big map stretched across the wall. \n\nA twinge of loneliness had him thinking about going back-but then what was the point, he asked himself. All his life he tried to do the right thing. He got in several fights while defending someone from being bullied, he never said anything behind someone's back he wouldn't say to their face, and he tried to treat others with respect unless they proved themselves unworthy...and what did it get him? He refilled his water bottle, checked the air in his tires then was off again, all the time pointed east. \n\n***\n\nDawn woke up on Saturday morning like she had for the last several mornings\u2014with a silent prayer that Al was alright. She worked the early shift on weekends, seven to three. If the girls got there early and came in through the back the manager would give them free breakfast so Dawn always set her alarm for five o'clock.\n\nEven before taking a shower, she called the police department to see if there had been any new developments in the case. She could tell by the cop's voice they were getting tired of being pestered. He told her they had her number and would notify her if there was anything new. She hung up with a sigh of frustration. \n\nOn the way out she saw a flyer taped to the inside of the door. It was a missing person's poster with the picture of Al that she had sent the cops. It gave his description, the last time and place he was seen, and a contact number. \n\nShe was happy to see someone was actually doing something but it was also another reminder of what she had done to him. She hadn't cried in a few days but the poster made her tear up again. \n\nAfter wiping her eyes, Dawn got an idea and wondered if whoever posted the flyer was still on the grounds. She went in search and found the young lady on the other side of the campus. She asked for a couple of posters for the restaurant where she worked. The manager gave her permission to tape one to main entrance and another one on the counter next to the register. It gave her a small sense of accomplishment. Even though seeing his face every time she rang up a customer's check would be hard, it was a small price to pay for the chance of someone seeing him.\n\nSunday, as Dawn rolled over to turn off the alarm she noticed with a pang of jealousy that her new roommate's bed was empty again. Carolyn was a party girl and had about five guys dangling from the string on her little finger so she seldom slept in her own bed. Immediately, she remembered not long ago when she'd wake up in Al's arms. It almost became a habit now; whenever he entered her thoughts she'd say a little prayer and try to send him a message telepathically, 'please be well, my love. I'm so sorry.' She knew it was silly but it was all she had.\n\nGroggily, she rolled out of bed and was getting ready to take a shower when Carolyn came breezing in. \"Hi, up already?\"\n\n\"Yeah, I've got to get to work. I won't be back till about four.\" With the way she felt, Carolyn's flashy smile and bubbly personality was downright irritating. No one had the right to be so free of guilt. \n\n\"Something's going on in back of the campus,\" Carolyn commented. \"There's a bunch of cops down by the lake.\"\n\nOf course anything having to do with cops piqued Dawn's interest. There was a small lake behind the campus. It was nice. There was no swimming or fishing allowed but it was picturesque, lined with trees, and quiet. A lot of the students would stake out a shady spot and study to the dainty splashing sounds of the tiny waves hitting the shore. Many times she and Al would lay out on the grass and just talk.\n\n\"Cops?\" What are they doing out there?\"\n\n\"I don't know. I think they might be looking for somebody. I hope nobody drowned. There's a bunch of them standing around, another one in a boat, and I think I saw a couple of diver's in the water but to tell you the truth, I still had some sleep in my eyes so I'm not sure.\"\n\nNO! Dawn's thought's immediately turned to Al again. He wouldn't\u2014if he was going to kill himself he'd never do it that way. He loved the water too much. She hurriedly took her shower and got dressed. There was a small crowd of onlookers by the time she got there. She saw a cop who looked like he was in charge and anxiously rushed over to where he was standing.\n\n\"Does this have anything to do with Allen McCain?\" She felt tears again and wiped them away as the cop turned his head toward her to speak. She prayed he wasn't going to tell her they'd found his body.\n\n\"Who are you?\" he asked.\n\n\"Dawn Spencer,\" she explained. \"I'm his girlfriend.\"\n\n\"Oh yeah,\" he remarked sarcastically while nodding his head. \"You're the one who calls into the station ten times a day.\" \n\nShe didn't appreciate his demeanor. \"I don't call ten times a day,\" she snidely answered back. \"I'm worried about him. You guys were supposed to let me know if you heard anything. So much for that,\" she said, gesturing to what was going on. \"It is him you're looking for, isn't it.\"\n\n\"Yeah,\" he said with a little nicer tone in his voice. \"We got a call last night from someone who saw his picture on a flyer and thought they saw him standing and just staring at the lake like he was considering going for a swim.\"\n\n\"He'd never do that,\" she said. \"Al loves the water too much. If he was goi...\" she had to catch her breath. \"If he was going to hurt himself he'd never pick water to do it. He was a champion swimmer in high school. He won state. He was also great on a diving board. No, I know him. He'd never do it this way.\"\n\nDawn didn't know if the cop knew the whole story but he sneered when she said she knew Al. She could almost hear him thinking, yeah, right; you knew him so well you falsely accused him of raping your girlfriend.\n\n\"Well, you don't mind if we look anyway, do you?\" was the smart ass remark from the man in blue. \n\n\"Knock yourself out,\" she answered back in just as snotty a tone of voice. She glanced at her phone. If she was going to get her free breakfast she had to go. She wanted to flip off the cop as she left but decided it probably wasn't a smart thing to do, not if she wanted them to keep looking for Al.\n\nOn the way to work, Dawn thought about it more; was it possible Al would have purposely drowned himself? Maybe she should have stuck around to make sure they didn't find him...no, there was no way he'd do that. Of that, she was sure\u2014of course she still called the police station during her break and confirmed no body was found.\n\nLater that evening she was alone once again when her cell rang. She saw Mrs. McCain on the display and anxiously hit the connect button. \"Hi, Mrs. McCain, have you heard from him?\"\n\n\"Oh, Dawn,\" she replied with a small gasp. \"No, we haven't heard a word. I was calling to see if you'd seen him. I'm getting worried.\"\n\nBefore Dawn had a chance to speak, she heard Al's dad in the background. \n\n\"For crying out loud, Darlene,\" she heard him yell. \"Stop your worrying. The kid's got no money, no car-how far can he get? He'll show up as soon as he gets hungry.\"\n\nShe heard Mrs. McCain sniffling into the phone and wondered how she could live with a man like that.\n\n\"Dawn,\" she spoke quietly. \"Will you call me if you see him, please?\"\n\n\"I will, Mrs. McCain, and you too, okay? If you see him you'll let me know?\"\n\n\"Absolutely,\" she replied. \n\nWith that the two worried women disconnected. Later that night, when she went to bed she remembered how worried his mother sounded over the phone and it kept her up most the night.\n\n***\n\nAmazing, thought Al, after almost two weeks he'd actually made it all the way to the east coast. An East wind rustled through the brightly colored elms and with it the scent of briny ocean waters. The sun, now at his back, undauntedly glowed from the sign announcing the town of Stonington, Connecticut... established 1662. \n\nHe'd been to Florida and New York a few times but he always wanted to see New England. As he got further into town the houses and shops were just as he imagined them; quaint, two story colonial wooden structures, mostly painted white. Of course there were some exceptions in the color range and a few were almost completely devoured by dark green ivy climbing to the second story windows, but as he stood, straddling his bike and taking it all in, he thought if he tried hard enough he may be able to see Paul Revere galloping his horse down the narrow streets, crying out a warning of red coated invaders. He smiled at the thought and could almost hear the pounding hoofs echoing up from the cobble stone.\n\nWith a small push off, he navigated the unfamiliar streets until he found one that took him down to the bay. It was packed with boats; big ones, little ones, pleasure boats, speed boats, sail boats, and commercial fishing boats. White seagulls almost blotted out the blue sky and their restless calls competed with the serenity of the ocean waves slapping at the pilings of the wooden pier. \n\nHis first thought was he wished Dawn was there to enjoy it with him. He closed his eyes and chastised himself with a sigh. He was determined to not let in anymore thoughts of her or anyone else back home. He wasn't going to let them spoil this for him. ",
        "He looked around and saw a paved walkway leading to a couple benches in a little park-like area with a great view of the harbor. It looked like the perfect place to just sit and enjoy the splendor. With his eyes closed, he concentrated on letting his senses soak up the soothing atmosphere. With the warm sun at his back, the wind gently caressing his face, and the rhythmic lullaby of the tide, Al was truly at peace for the first time since leaving. \n\nThere's only one explanation that makes any sense...DAMN IT, he silently cursed, I wasn't going to think about it. He sighed and shook his head in self-recrimination. Oh well, he thought, I think I at least have it figured out. Dawn was in on it. She wanted to break up and thought I'd piss and moan and wouldn't leave her alone otherwise so she thought up that bull shit about Shannon. That's why she didn't want me to confront her and why she wouldn't tell me the name of the so called witness. There never was a witness and I'll bet Shannon never had any marks on her wrists or anywhere else. Hell, I wonder if she even knew I was supposed to have raped her. Yeah, I'm sure she did, he told himself after more consideration. \n\nAl sat there a little longer trying to find a hole in his theory but couldn't. It was the only thing that made any sense to him. That has to be it, he told himself. \n\nNow that Al felt he had figured out the mystery, what to do about it? Over the last two weeks he knew he'd have to go back eventually. The little bit of money he had on him wasn't going to last forever. \n\nThen again...maybe he could find a job? At least one that would keep him going until the end of the school year. Dawn was due to graduate. He could go back and resume his studies the following year. Yeah, it would put him back a year but at least he wouldn't be running into her on campus. \n\nAl had actually thought about trying to get all the way up the coast to Maine but was now rethinking it. He wasn't a bad bartender. Surely there must be someplace between here and Maine that could use him. Maybe he could even find a day job and bartend at night? That way he could save up and go back to school with some money in his pocket. \n\nAl was feeling better than he had in a while. He'd solved the mystery of why his girlfriend would accuse him of rape and had some tentative plans for the immediate future. Yeah, he wasn't what you'd call feeling good, but he was feeling 'relieved.' \n\nSomething else he was feeling was hungry. Listening to his stomach growl, he realized he hadn't had anything to eat since early morning. He remembered going passed a little diner on his way through town. It didn't look like the other small diners he'd been in. It had some of that New England charm he'd seen in movies. The wooden structure was very rustic and looked like it had weathered its share battering seas. The tables in the back were all filled but the counter had a couple of empty stools. One of them would suit him just fine. \n\nThere were two waitresses behind the counter. One was about sixty with graying hair and about forty pounds of extra weight. The other was maybe thirty-five with a much better body. Her hair was sandy blond which went well with her pretty blue eyes. She was heading his way with a menu in hand.\n\n\"Can I get you something to drink?\" she asked as she laid the menu down in front of him.\n\n\"Coffee, please,\" he replied with a smile. \n\nShe reached behind her for the pot, turned over the up side down cup in front of him, and started to pour. \"Chicago?\"\n\nIt surprised him so much he thought he surely had heard her wrong. \"I'm sorry, what?\"\n\n\"I was asking if you're from Chicago.\"\n\nHe couldn't believe his ears. How the hell could she possibly know that, he asked himself? He took a quick inventory as to what about his appearance would give him away but couldn't come up with a thing. He finally had to ask. \"How did you know I'm from Chicago?\"\n\n\"The long vowel sound when you said coffee,\" she answered with a grin. \"We get people from all over in here so I started studying dialects a while ago. I'm getting pretty good. I get about seventy percent of them right,\" she said while pouring his coffee. \"Yours was easy. You have a strong Chicago accent.\"\n\n\"That's amazing,\" he said, \"truly impressive.\" \n\nShe took his compliment with a smile and walked away to give him time to study the menu. She went around the room filling cups with black gold but kept an eye on Al and returned when it looked like he was ready to order. \n\nFor the last two weeks the only decisions Al had to worry about was whether to take this road or that road. Now his mind was preoccupied with decisions. The one he was struggling with at that moment was whether to stay for a while or start heading north. In any event, he at least needed a room for the night.\n\nHe had finished his meal and was nursing the last of his coffee when his waitress came over offering him another cup. According to the little plate pinned to her uniform, her name was Amelia.\n\nAl set his cup back down on the counter so she could refill it. \"Thank you,\" he said. \"Hey, Amelia; know anywhere I can spend the night that's cheap?\"\n\n\"Not really. We're still in the tourist season. Even the cheap motels aren't cheap this time of year.\" She started to walk away then stopped and turned back to face the counter again. \"Hey, Jack,\" she raised her voice enough so the guy sitting at a table in the back of the room could hear her. \"Does Coral have that room fixed up to rent yet?\"\n\nEvidently, not wanting to carry on a conversation across the room, the weathered skin, white haired man stood and ambled over. \"What's the matter, Amelia, your old man finally toss you out of the house?\"\n\n\"He better never try,\" she responded with a chuckle. \"No, this young man is looking for a cheap place to stay.\"\n\nHe looked at Al. \"How long you plan on staying? My daughter's a painter, you know-pictures. She has a room we're fixing up in the back of her art gallery in town. It's not quite done though. The plumbing still has to be hooked up in bathroom but I can get to that in a couple of days or so. In the meantime you'd be able to use the washroom in the studio.\"\n\nNow that Al had a chance to see the guy up close he was intrigued. The man looked like he'd probably lived there all his life. His leather looking skin was deeply tanned and his rolled up shirt sleeves revealed powerful forearms. There were still some blond patches of hair mingling with the white and Al could see more than a life-time of experience behind the man's piercing blue eyes. The not too neatly trimmed beard that covered half his rugged, weather-beaten face made him look like he'd just stepped off the page of an Ernest Hemingway novel. \n\n\"Ah, well I'm not sure yet, definitely tonight and possibly another two or three,\" he responded to the man's question.\n\nThe older man squinted one eye. \"Oh, I'm pretty sure she wants to rent it out by the month, or at least the week.\"\n\n\"Jack, you said yourself it's not even done yet,\" interjected Amelia. \"You think Coral will turn down good money?\"\n\n\"You're right; it's not up to me. She's the one with the room. She might be willing to do it, at least until we get the bathroom hooked up.\" He reached in his back pocket and took out his wallet. He pulled out a business card and offered it in Al's direction. \"Here's her card,\" he said. \"Give her a call. All you can do is ask.\" \n\nBefore he could say thanks, the man turned and walked back to his table. Al looked at the card, East Wind Gallery. He glanced up at Amelia. \"Is it far? I don't have a phone, I'll have to ride my bike.\"\n\n\"What kind of bike you got?\"\n\n\"It's a Shimano twenty-one speed.\"\n\nShe looked confused for a second. \"Twenty-one speed...you mean it's a bicycle bike? I thought you meant a motorcycle. You didn't ride all the way here from Chicago on a bicycle?\"\n\n\"Yup,\" he said with a smile and a sense of pride.\"\n\nAmelia just shook her head in disbelief. \"Coral's place is right in town. It's six or seven blocks from here. This is High Street out in front here,\" she said while pointing out the front window. \"Make a right, go up to Main and make another right. It's about three or four blocks down.\"\n\nHe thanked Amelia for her help before leaving. He saw the gallery was open so he went inside. Almost immediately a blond woman, who looked to be in her late twenties or early thirties, approached and asked if she could help him. \n\n\"Yeah, ah, I'm looking for Coral Erikson.\"\n\n\"That's me.\"\n\n\"Ah, I saw your dad in the little restaurant down the street. He gave me your card and said you might be interested renting me a room for a night or two.\"\n\n\"It's not even done yet,\" she remarked. \n\n\"Yeah, he mentioned the plumbing wasn't done in the bathroom yet, but said I could use the one in the gallery. That would be okay with me. I'm actually on my way to Maine but I really like it here and thought I might stay for a couple of days. Ah, I'm kind of on a shoestring budget so when I asked the waitress if she knew of a place that didn't cost too much, she and your dad directed me here.\"\n\nShe was studying him while he talked. He seemed like a nice enough young man. Financially, she could use all the help she could get. They got a lot of tourist during the summer but a lot of them were men who came for the fishing; they didn't bother buying art. She made up her mind.\n\n\"How about fifty bucks a night\u2014sound fair?\"\n\n\"Yeah, that's fine,\" he said, digging out his wallet. He was pretty sure he was going to stay at least one more day so he handed her a hundred dollars. \n\nShe showed him where the washroom was on their way through the back room and into a small, three room apartment. The little kitchenette had a refrigerator, small stove, and a coffee maker. The living room was just big enough for the recliner in the corner and a loveseat. A flat screen TV hung on the opposite wall. The bedroom had a dresser and a full size bed, and the place had its own entrance. After sharing a dorm room for the past several months, it felt like a palace and was more than adequate for Al's needs. It was the first night he went to sleep without thinking of Dawn.\n\nThe following morning, Al awoke to find the term, \"sleepy little New England town,\" was a misnomer. It was barely light out when he heard noises coming from the gallery on the other side of the wall. He sat up on the side of the bed and rubbed the sleep from his eyes. Shit, he thought. He had a coffee maker but no coffee. He was just zipping up his pants when he heard a knock from the door that led into the gallery.\n\n\"You up?\" asked Coral.\n\n\"Ah, yeah; just a minute.\"\n\n\"I have coffee out here if you're interested.\"\n\n\"Yeah, I'll say. I'll be right out.\" Al threw on his socks and shoes but had to make a quick pit stop in the washroom first. She had his coffee already poured for him as he joined her.\n\n\"Sleep okay?\"\n\n\"Yeah\u2014like a log.\"\n\n\"The mattress is brand new. You're the first person to sleep on it.\"\n\n\"I'm honored,\" he said with a smile. \n\nThere was small lull so Al said the first thing that came to mind. \"Is your dad retired?\"\n\n\"Dad? No, he'll never retire,\" she scoffed. \"What made you think he was retired?\"\n\n\"Ah, I don't know. I guess just way he was sitting in the restaurant. He kind of looked like he had all the time in the world.\"\n\n\"Yeah, well, sitting in Joe's Galley isn't his idea. He owns a fishing trawler, an old one. He actually inherited it from my grandfather. A few days ago the wench motor burned out. It's so old, parts aren't that readily available. He ordered them but they won't be in for a couple more days yet. So\u2014now he's sitting in Joe's Galley with nothing to do but wait. It's killing him.\"\n\nShe took a drink of coffee then continued. \"I wish he would retire. He can't even keep a crew anymore but he's so damn stubborn...\"\n\n\"Why is that?\" Al asked. \"Why can't he keep a crew?\"\n\n\"Everyone else has moved into the twenty-first century. The others invested in new equipment...new boats, but not my pops. He's an, 'if it was good enough for my daddy it's good enough for me,' kind of guy.\"\n\n\"I see,\" Al acknowledged. \"Do you and him get along?\" After asking the question he felt embarrassed. It was no business of his. He was just curious because of the bad relationship between him and his dad. He was about to apologize for the question but she had no problem answering it.\n\n\"Oh yeah; in spite of his bull headedness I love him with all my heart. Dad's been my hero since I could remember. My mom passed away about ten years ago. He took it really hard. If it wasn't for fishing and that old boat, I don't know what he'd have done.\"\n\nAl was sorry to hear about her mother but at the same time, felt a small twinge of jealousy. He wondered what it would be like to have a dad he could look up to. \n\n\"So,\" she asked with sigh, \"what about you? Where're you from?\"\n\n\"The Chicago area,\" he replied. \"Born and raised.\"\n\n\"What are you doing in Stonington?\"\n\n\"Ah...\" The question, simple as it was, caught him off guard. He didn't think it was a good idea to tell the good looking woman from whom he was renting, that he was accused of rape back home. \"I needed a break\u2014some new scenery, that's all. I've always wanted to see New England and thought this was as good a time as any.\"\n\nThere was something in his answer that just didn't sit right with Coral. It was kind of evasive and he appeared to be slightly nervous. It made her a little suspicious. She talked to her dad the night before and learned of his mode of travel.\n\n\"Sooo...you decided to just up and ride your bike from Chicago to Connecticut?\"\n\nAl detected a wariness in her voice and tried to act as natural as he could. \"Yeah, pretty much,\" he said with a smile. \"I love to ride.\"\n\n\"Did you have a job in Chicago?\"\n\n\"Yeah, I worked nights as a bartender. Which reminds me, you don't know of any places around here that might be looking for one, do you?\"\n\n\"Oh? You thinking of staying longer than tonight?\"\n\n\"Ah, well, if the room is still available after tonight.\"\n\n\"Yeah, but I'll have to get dad to finish the bathroom for you if you're going to stay longer. I'm sure you'd like to take a shower at some point,\" she said with a smile. \n\n\"Yeah, that would be nice,\" he said, returning her smile. \"I'm fairly handy myself. I can give him a hand if he'd like.\"\n\n\"I'm sure he'd appreciate that,\" she replied. \"As far as anyone looking for a bartender, I really don't know any places off hand. The bars around here can be pretty rough at night. I pretty much stay away from joints like that.\"\n\nAfter a little more conversation, Al asked her to name the best places to get a good breakfast. She told him, breakfast, lunch, or dinner, the best place in town was where he was the night before, Joe's Galley. \n\nAfter a hearty helping of eggs and sausage, Al decided to do some exploring. He hopped atop his padded seat and took off along the coast. He was fascinated by the powerful whitecaps smashing into the jagged, rocky shoreline. It was a whole lot different than the calming, rolling waves he'd seen ebbing and flowing along the sand in Florida. \n\nSeagulls were everywhere, screaming and screeching as they glided effortlessly through the air on white feathered wings, sometimes just hovering in place as they'd catch an updraft. \n\nTry as he did to forget about her, Al couldn't help but wish his girl was beside him as he discovered new sights with every mile. \n\nAl didn't realize how hungry he was until he was pulling back into town so without stopping at his rented pad, he made a bee-line for Joe's Galley. \n\n\"Hey, traveler.\"\n\nHe smiled. \"Hi, Amelia, what's on the menu tonight?\"\n\n\"Not me,\" she quipped. \n\nAs he sat down at the counter he noticed Jack Erikson sitting at the back table with two other guys. They appeared to be arguing.\n\n\"What's going on?\" he quietly asked, indicating the men with a nod of his head. \n\n\"Jack's having trouble with his crew again,\" she answered in a hushed voice while turning over his cup. \n\nAl turned around toward the counter for a sip of his freshly poured coffee but kept one eye on the brewing trouble.\n\n\"Listen, old man, I ought a take you out back and...\"\n\nAl jumped from his stool and headed to Jack's aid. His back was already turned to Amelia who grabbed for him across the counter in an effort to stop him, but it was too late. She knew Jack could handle both guys with no problem but the kid could get hurt in the melee. \n\nAl, showing no fear, charged up to the table. \"Everything alright here, Jack?\"\n\nBy then the two trouble makers had pushed their chairs back and were menacingly standing over their seated captain. The one with the big mouth was about six-one, maybe six-two, about two hundred and thirty pounds and looked tough as nails. The other guy was shorter and a little pudgy but still didn't look like a push over. Al immediately realized he'd bitten off more than he could chew but he wasn't about to back down. \n\nLoud mouth turned toward Al with an amused look on his face and gave out a derisive laugh, then turned back to Jack. \"Never mind, old man,\" he snarled. \"We quit.\" He looked over at his buddy. \"Come on, Jocko, let's get out of here.\" \n\nAl watched with relief as they left.\n\n\"Don't ever do that again,\" Jack growled. \"Eric there would have cut you up for fish bait before you knew what was happening. I can fight my own battles.\"\n\nAl could just never win for losing. Every fucking time he tried to do something nice he got it thrown back in his face. \"You're welcome,\" he grumbled, then walked back to the counter.\n\nAmelia also let out a sigh of relief. \"Don't let it bother you, Traveler. Jack would have held his own easily with those two but he got scared for you when you went charging in like that.\"\n\n\"I was just trying to help. It was two against one. I was just trying to even the odds, that's all.\"\n\n\"I know,\" she replied sympathetically. \n\nAl had just started on his perch dinner when Jack walked up to the register to pay his bill. He handed Amelia a twenty then looked over. \"You got more guts than brains, kid.\"\n\n\"Yeah, well it won't happen again. You can be sure of that.\"\n\n\"You know how to clean fish?\"\n\nThe question seemed so far out there Al wasn't sure he even heard him right. \"What?\"\n\n\"I asked if you knew how to clean fish. It ain't a hard question. Yes or no.\"\n\n\"Well...yeah, I can clean fish. What...\"\n\n\"Good; I'll have my boat fixed by day after tomorrow. Meet me on the dock at four-thirty.\"\n\n\"Ah, I'm sorry, you lost me.\"\n\n\"Coral says you need a job. Abby and I need another man for the crew. I'm giving you a job,\" he said, then turned and walked out before Al even had a chance to think it over.\n\nHe looked up at Amelia. \"Who's Abby?\"\n\n\"That's the name of his boat.\"\n\n\"I see...so...I have a job on a fishing boat?\"\n\nAmelia just shrugged her shoulders and laughed.\n\n***\n\nAs the weeks went by, Dawn was losing hope. Every day since realizing he was gone, she woke up praying she would hear from him and every night she'd go to bed praying the next day would be the day. As time passed with no word, however, the feeling that she'd never see him again grew. \n\nThe wind had torn some of the posters that were hanging up and no one paid attention to the ones that were left anyway. The cops were getting more and more impatient with her daily calls so she cut them back to weekly. People's interest, or maybe it was hope, was starting to wane. \n\nThe only thing that wasn't fading with time was her guilt. There was no way she'd ever forgive herself for believing Shannon over Al. Her conscience kept telling her she failed him\u2014him and herself. It was a test...a test of her love and her faith in him and she failed miserably. She was desperate to somehow get word to him; if she could just tell him how sorry she was. ",
        "Graduation was only a week away. What about his things? If his room wasn't cleared the college would probably toss his stuff out. She hadn't talked to his parents in a while. Maybe it was a good time.\n\nDawn held her breath in hopes Mrs. McCain would answer instead of Al's dad.\n\n\"Hello.\" Every time the phone rung, Darlene McCain prayed it was her son. She was disappointed but hopeful when she heard Dawn's voice.\n\n\"Hi, Mrs. McCain, how are you doing?\"\n\n\"Dawn, have you heard anything?\" \n\n\"No, I'm sorry, not a word.\" She could literally hear the hope escape the mother's soul. \"I...I was wondering if you were going to come down and get the stuff from his room. I'm sure he'll want it when he comes back and I'm afraid the college will throw it out when they clean the dorms for next year.\"\n\n\"Oh...I...I hadn't even thought of it. Yes, we should go down there and get it for him. I'll have to talk to Ralph. When would we have to be there?\"\n\n\"Well, the semester is over a week from Friday. My parents will be down that Saturday for graduation. I don't know how long before the college starts cleaning things out. You should probably call them.\"\n\n\"Yes, that's a good idea, I will.\" \n\nDawn could hear the woman starting to cry again. She couldn't imagine how hard it was going to be for them to pick up Al's stuff and take it home without him. \n\n\"Don't cry, Mrs. McCain, he'll be back, I know it.\"\n\n\"I pray you're right, Dawn.\"\n\nShe thought the same thing as she hung up.\n\nOn the last day of school she went into the police station again. She told everyone who would listen that she was going home and wanted to make sure they had her cell number and her home number in case they heard anything. She got the impression they were happy to see her go. \n\nCommencement was bitter sweet. She had worked hard for her teaching degree but during the ceremony all she could think about were all the plans she and Al had made. They had decided to wait another year before getting married. They wanted some time to get jobs and put some money aside. They were going to wait a couple more years before having kids...three of them...two girls and boy...she had it all planned out.\n\nAfter the service everyone went back to the changing rooms. \n\n\"Dawn\u2014Dawn, please talk to me. I'm sorry. I'm really sorry. I thought I was doing you a favor, honest,\" implored Shannon. \n\nThe two former best friends had been seated only four spaces apart during the graduation ceremony. Shannon had been trying to catch her eye the whole time but Dawn completely ignored her. Now that Dawn was somewhat of a captive audience she was going to make another plea.\n\n\"Doing me a favor? Yeah, right; the money had nothing to do with it, right?\"\n\n\"I admit I didn't turn it down but...\"\n\n\"Shannon, you robbed me of my happiness and a future with the man I love. I told you before I don't ever want to see you or talk to you again. Now leave me alone,\" were her last words as she pushed by and headed out into the hall to find her family. She heard Shannon start to cry as she was leaving. \n\nThe following day Dawn was busy at her graduation party. The house was full of well-wishers consisting of family, friends, and neighbors. She tried to have a good time but as useless as she knew it was, Dawn found herself scanning the crowd in a hopeful daydream that her Al would surprise her. Of course it wasn't to be. \n\nHer folks, of course, knew of the situation. She had confessed the whole thing once she learned the truth. They both expressed shock that Shannon would do such a thing. They also supported their daughter. They told her it wasn't her fault and they were confident that Al was just fine. Of course Dawn was never completely convinced of that. Even if he came back and told her to go to hell, it would be better than not knowing if he was alright. \n\nShe had already started her job search during her last few months in school. She sent out tons of r\u00e9sum\u00e9s to local authorities and had several interviews lined up over the following month. It helped to keep her mind off Al and focused on starting her career. \n\nThree weeks after coming home she was feeling pretty good about her chances for a second grade teacher's position that was opening. She was leaving the interview with a smile when she realized she was only a couple miles from Al's parents. She hadn't talked to his mother since that call the week before graduation and wondered if she'd be home. Hopefully his dad would be at work.\n\nA smile stretched across Dawn's face when Mrs. McCain came to the door. \"Hi, Dawn,\" she said with genuine appreciation, \"it's so good to see you,\" she said and she hugged her. \"Come on in.\"\n\nAs she stepped inside, Dawn lost her smile.\n\n\"Look, honey, it's Dawn.\"\n\nWithout even looking up from the newspaper he was reading, Ralph McCain acknowledged her presence with a grunt before taking a swig of his beer.\n\nDarlene saw Dawn's smile disappear. \"Ralph is working nights this month. He doesn't do it often but the night shift pays better so he works it whenever he can,\" she explained. \n\n\"We can sit in the Kitchen, Dawn. Would you like some coffee?\"\n\n\"Yeah, that'd be great, thank you.\"\n\nAs Darlene started to pour the coffee they both started to speak at the same time. \n\n\"I don't...\"\n\nBoth women stopped talking and smile at each other. \"I'm sorry. Go ahead, Dawn, what were you going to say?\"\n\n\"I was just going to ask if you've heard anything?\"\n\n\"Yeah, that's what I was going to ask you. No, I haven't heard a word.\" She lowered her voice to a whisper. \"I called the police down there yesterday but they said there was nothing new.\" \n\n\"Did you get down there to pick up Al's stuff?\"\n\n\"No, Ralph wouldn't make the drive.\"\n\nNow Dawn lowered her voice. \"Why is he like that? Al thinks his dad hates him. Why is he such a hard-ass?\"\n\n\"It's just the way he is,\" she sadly stated.\n\nDawn didn't stay long, about twenty minutes. It was nice to spend time with someone she knew, loved Al as well. Al told her he knew his mother loved him; it was just that she was scared of his dad so whenever Ralph would start in on him, she'd just back off and let it happen. He told Dawn it would have been nice if she'd taken his side just once and stood up for him, but he couldn't think of a single time when she did.\n\nTwo weeks later, Dawn got the call she was hoping for\u2014she got the job as the second grade teacher at Jefferson grade school. It was the happiest she'd been in a very long time but she missed being able to share the good news with the man she loved. A week before school started, she had to go to teacher's orientation. There she met the other teachers she'd be working with. Bradley Stone was also a new teacher. He was about the same age as Dawn and had wavy black hair and blue eyes. As soon as he saw her he made it a point to introduce himself. She knew instantly that he was interested but her conscience still prevented her from socializing with the male population...not as long as there was still a chance that Al would come back to her.\n\n***\n\nAl, or Traveler, as everyone was now calling him, learned quickly. For the first few months he did nothing but clean fish below deck but eventually Jack let him start working the wench. It was a tough life, not to mention dangerous, but Traveler liked it. He was getting stronger and more confident within himself. He packed on twenty pounds of muscle and grew a beard. \n\nJack was becoming more of a father figure than a boss...the father he never had. After a full day's catch, they'd sit for hours in Joe's Galley and talk. He loved listening to Jack regale him with stories of the high seas and growing up in a small fishing village. At that time Jack's dad was the king of the fisherman, sometimes pulling in twice the catch of the other boats. \"Ah, but that was a long time ago,\" he'd say with a downhearted demeanor.\n\nIn as much as Al had accepted his new life he couldn't keep his mind from sometimes drifting back to the girl he left behind in Illinois. Time, he thought, would eventually heal the wound in his heart-but that time was slow in coming.\n\nSometimes, after being out on the water for two or three days straight, he'd come home to his tiny apartment so beat he wouldn't even get undressed before flopping down on the bed. Thing was\u2014that's when he'd close his eyes and see her face smiling down on him. The fatigue made him vulnerable to the loneliness and he'd remember how their love for one another filled every day with joy and a sense of purpose. His new life offered neither. \n\nAs the months passed the skies turned gray and the cold, damp air wrapped itself around the village proclaiming the imminent arrival of old man winter. Being from Chicago where life goes on twelve months a year, Al was shocked to see people boarding up their businesses. \n\nJack clued him in. \"Things get pretty rough around here in the winter. Sometimes ice in the bay gets so thick we have to wait for the Coast Guard to break it up for us before we can go out. Some of the fish hibernate to warmer climates. That pretty much limits our catch to flounder and cod. \n\n\"This is a fishing village, Traveler. It thrives when the fishing is good and suffers when it's not. The fishing is never good in the winter so a lot of the businesses close up and head for warmer pastures. They'll be back along about mid-March.\"\n\nWhen winter did hit, Al was embarrassed. The Midwest was known for its harsh winters but never in all his born days had he experience that kind of cold. It cut like a knife right through the warmest of coats and penetrated everything down to the bone. \n\nOne night he came home after two cold days and nights on the water. He was shivering so bad he couldn't stop. Coral, who was reorganizing some things in the gallery, heard him come in and knocked to see if he could give her a hand moving a couple of the bigger items into the back room. As soon as she saw him she forgot about the items. She had seen enough cases of hypothermia to recognize the symptoms. \n\n\"Get those clothes off and get into bed,\" she ordered. \"I'll make you some hot chocolate.\" \n\nStaring at her, he appeared to be frozen in place.\n\n\"Go!\" she demanded. \n\nAl's extremities were stiff and he was having a hard time of it. He had only managed to strip down to his waist and was sitting on the bed trying to get his shoes off when she came in with his hot chocolate. She handed it to him.\n\n\"Here, drink this,\" she ordered while kneeling at his feet. She gently removed his shoes and socks then moved upward, unzipped his pants and unbuckled his belt. \"Lift up your butt,\" she commanded. He was wearing long underwear so he wasn't too worried until she started pulling them off too.\n\nHe was still shivering and couldn't talk without stuttering. \"Ah, C...C...Coral, I d...d...don't have anything o...on under there.\"\n\n\"I'm not a virgin, Traveler. I don't think you have anything I haven't seen before,\" she said as she pulled his long-johns down to his ankles. \"Sit down,\" she told him. \n\nHe sat down on the bed while she pulled the thermal underwear off and threw it in the corner. At least he was spared the embarrassment of getting an erection; he was too cold for that. \n\n\"Okay, get under the covers,\" she told him while pulling the covers up and over him. \"I'll make you another cup of hot chocolate.\"\n\nHe still hadn't completely stopped quivering, even after the second cup. \n\n\"Move over,\" Coral said. She turned out the lights, stripped nude, and crawled in bed with him. Al had no idea what she was doing. He was too damn cold to have sex. \"Turn and face the wall,\" she quietly told him. When he had his back to her she snuggled up and spooned him. \"You need body heat,\" she said.\n\nIt was the first time in many months he'd felt the warmth of a soft feminine body. The pressure of her silky smooth breasts against his frozen flesh was like heaven. Within minutes they were both sound asleep.\n\nIt was light out the next time Al opened his eyes. The first thing he realized was that he was no longer shivering. That's when he remembered the night before. He quietly looked over his shoulder to see if she was still in bed with him and was disappointed to see he was all alone. He rolled over on his back with a sigh. That's when he smelled the coffee. He scooted over so he could sit on the mattress and peak around the corner. \n\n\"Well, good morning, sleepy head.\"\n\nCoral was sitting at the kitchen counter sipping from her cup. \"After last night, I wasn't about to wake you up at four in the morning so I let you sleep. Dad will just have to do without you today,\" she said.\n\nAl looked over at his thermal underwear. They were in the corner and he'd have to cross by the doorway to get them, giving Coral an eyeful. Ah, his pants were right next to the bed. I guess I go commando for a little bit he thought. With the trousers as his only means of protecting his modesty, he wandered out and poured himself a cup of java. \n\n\"I don't think your dad went anywhere without me today. We had engine trouble yesterday. We barely got her back into port. We thought we were going to need the Coast Guard to tow us in for a while,\" he told Coral. \n\n\"Again? Damn it, if it's not one thing it's another with that old rust bucket. I swear that boat is going to be the death of him.\"\n\n\"Hey, don't talk about Abby like that. She a fine old girl,\" Al said, defending his home away from home.\n\n\"Oh no, not you too. You're starting to sound just like dad.\"\n\nAl just grinned and took another sip of coffee. Coral looked like she had something on her mind. She studied his face for a minute or so before speaking. \n\n\"How come you don't have a girlfriend yet, Traveler? You've been here what-eight, nine months and I've never seen you with anyone. I know for a fact that there are girls your age in this town. A few of them are very pretty. I'd say you were gay but I haven't seen you with any guys either, what's the deal?\"\n\n\"I'm not gay,\" he told her. \"I'm just not in the market right now.\"\n\n\"I see; sounds more to me like you've had your heart stomped on. Evidently, it's still painful to talk about, so I'm guessing that's why you're still here and not back in Chicago by now.\" \n\n\"Trying to get rid of me, Coral?\"\n\nShe chuckled. \"No, not at all, in fact, I'm thinking of making you a proposal.\"\n\n\"A proposal? Like what?\"\n\n\"Ever hear the term, friends with benefits?\"\n\n\"Of course.\" He looked at her expecting her to continue but she just stared back at him. He finally caught on. \"You mean you... you and me?\"\n\n\"Does that scare you?\"\n\n\"No, it doesn't scare me, it's...well, I...\"\n\n\"I know-I'm too old for you. I'm thirty-three and you're what...twenty-one?\"\n\n\"Actually, I was twenty-two last month, but...\"\n\n\"You were? Why didn't you say something? I would have made you a cake or something. Did dad know?\"\n\n\"No...listen, Coral, you're not too old, but I always kind of figured someone who looks like you could have her pick of the guys around here, why me?\"\n\n\"Convenience, I don't even have to leave the gallery,\" she chuckled.\n\n\"Oh...\"\n\n\"I'm kidding, Traveler...about the convenience thing, not about the benefits part. Look, I've lived here all my life. Believe me when I say the number of potential mates is very limited. Even though it'd be just sex with no strings, I like you, you're a nice person. That makes it all the better. That and from what I saw last night, you're adequately equipped,\" she teased. \n\n\"What about your dad? He's liable to wait until we're a couple miles out then throw me overboard.\"\n\n\"Traveler, first, I'm a big girl. Dad's known that for a long time. Who I do or don't have sex with is none of his business and he would never presume that it is. Also, he likes you. I'm sure if he did have a say-so in my sex life, he'd rather I slept with someone he liked than someone he didn't,\" she said with a smile.\n\nFor a fleeting moment, Al felt he'd be cheating on Dawn if he took Coral up on her offer, but that thought didn't last long. He chastised himself for even having such a thought. She not only dumped him but she did it with a lie that could negatively affect his whole life. Screw her. \n\n\"Ah, well, if you're sure I won't be hanging from the yardarm of your dad's boat,\" he said.\n\n\"Traveler, dad's boat doesn't have a yardarm.\"\n\n\"Figure of speech,\" he chuckled. \"So, ah...when would you want to start...you know...\"\n\n\"Having sex?\"\n\n\"Yeah, that.\"\n\n\"Do you think you can wait until tonight?\" she replied. \"You really should rest up from last night.\" \n\nIn the meantime Al helped her with moving things around in the gallery. For supper they went out to celebrate their new friendship.\n\nWhen they came back, both Al and Coral were surprised with how nervous they were. It had been almost two years since she'd had a boyfriend. Al, of course, hadn't been with anyone but Dawn for about the same length of time. \n\nAl was going to start out with a nice kiss. He put his hand behind her head and gently pulled while he moved closer. Coral pulled her head back and put her hand against his chest, putting a halt to his approach. \n\nShe looked at him like he'd lost his mind. \"What are you doing?\"\n\n\"I...I was going to kiss you.\"\n\n\"No kissing.\"\n\n\"No kissing?\"\n\n\"No. We're not going to be lovers. We're not going to make love or have some romantic relationship. This is sex, Traveler; pure and simple. To put it crudely, we're going to fuck each other into oblivion, but that's it. I'm not looking for a boyfriend, I'm looking to get laid-got it?\"\n\n\"Ah, yeah, I guess.\" \n\n\"Good, now get those clothes off because I'm getting horny as hell standing here.\" \n\nThey both started removing their clothes. They were both almost naked when Coral had a question. \"Have you ever gone down on a woman before?\"\n\n\"Yeah, all the time,\" he answered enthusiastically. \n\n\"Hot damn,\" Coral cheered. \n\nBeing more interested with watching her undress than actually getting his own clothes off, Coral was already naked and watching as Al fumbled with the button on his trousers. \"Oh for crying out loud,\" she commented with exasperation, \"here,\" she said, dropping to her knees and deftly undoing the stubborn fastener. She continued on to the zipper then pulled pants and underpants down to his ankles in one rhythmic motion.\n\nAl's cock nearly leaped from the cotton fabric. \"Oh,\" Coral cooed, \"it looks a lot bigger than the last time I saw it.\" \n\nAnxious to get started, she jumped on the bed, spread her legs wide apart and bent her knees while Al kicked out of the last remnants of his own clothing. From the smile across her face there was no mistaking what she was waiting for. \n\nAl nestled down between her legs and felt both hands on his head, encouraging him. He really didn't need it. He never had a problem savoring those womanly charms. As if it was a lollypop, he licked from her moist hole to her clit. Upon its discovery, he coaxed the little love bead out from its protective hood and sucked it into his mouth where he rolled it around with his tongue. She almost scared him with her response. \n\n\"Oh, God,\" she screamed. \"Oh, my God, yes...damn that feels fantastic. Oh, God!\"\n\nHer body was already writhing in ecstasy. \"Oh fuck!\" she cried. Al hadn't even gotten started and she was already telling him to put it in. Of course he obliged and it wasn't long before Coral had her second orgasm, this time while digging her nails into his skin. \n\nHe backed off a little to allow her to catch her breath. \"Damn,\" she said between gasps, \"I...I'm not usually this quick on the trigger but I've been anticipating this for a while now and you've already surpassed my expectations.\"\n\nAl's smile couldn't possibly have been any broader. \"You don't hear me complaining, do you.\"\n\n\"I know, but I'd like to hold off long enough for you to get yours.\" ",
        "He lowered his head and lightly bit her nipple. \"Oh God,\" she screamed again. \"Okay, big boy, let's go again.\"\n\nShe came two more times before Al. Then it was Coral who let him rest before wrapping her mouth around his semi-hard cock and bringing it to full mast again. \n\nIt was no-holds-barred sex and it lasted until three in the morning, at which point they both fell asleep in a pool of sweat and wet spots. \n\nThe next day a member of the crew saw the scratch marks on his back when Al removed his shirt in the sweltering heat. \"Hey, it looks like Traveler's got a girlfriend,\" he yelled. Al looked up to the wheel house to see if Captain Jack heard him. Jack was staring at him with a knowing grin but said nothing.\n\n*** \n\nHE'S ALIVE!\n\nDawn was staring at the text on her phone. It could only be referring to one person but she had no idea who sent it. There was no name, just a number she didn't recognize.\n\nWho is this?\n\nThere was a two or three minute lull before Dawn got a response. \n\nShannon\n\nHer eyeballs were almost seared by simply looking at the name. She wanted so much to disconnect but if she really did know something about Al...\"\n\nPlease watch the video. It went viral and is all over Facebook. It's him, Dawn. I know it's Al.\n\nDawn excitedly tapped on the link. It showed a man saving a dog from drowning but it was too small on her phone to really see anything. She raced to her laptop and did a google search. There it was; the fourth one down on YouTube. She brought her face as close to the screen as she could in an attempt to see better. \n\nBlocking out any and all distractions around her, Dawn's eyes scrutinized the screen as she watched someone's cell phone video. There was a large group of people on one side of a bridge. They were all leaning over the guardrail, yelling and pointing down into the fast moving water flowing beneath them. Dawn's eyes followed the steel support girders down and saw a wet and tired dog clinging to one of the cement encased pilings. She could see the poor critter struggling against the current that threatened to take it out to sea. \n\nSuddenly someone from the crowd was throwing a leg over the rail. Carefully, he searched with his foot until he found some support then inched his way along the bridge's understructure. He worked his way over to the piling then started to shinny down to the crying canine. \n\nWhile gripping the slippery girder with one hand, he reached down to grab the dog by his neck but the furry creature slipped. The crowd cried out in terror as the animal was caught in the tide. Unable to turn around, the man braced his feet against the support and launched himself into a perfect back dive. Already several yards downstream as he broke the surface, the young man swam with all his might to catch up to the drowning pup. The animal's head had just slipped under the water as the man reached out and grabbed it. With the large mass of fur safely tucked under one arm, he swam to the shoreline using the other. \n\nA crying young boy ran to them as man and dog climbed out of the raging water and onto dry land. The crowd's paladin laid the beast in the grass and fell down beside it to gather his strength. The boy, obviously the dog's companion, went into hysterics when he saw his furry friend was not breathing. Another man stepped up and started CPR on the animal. The video concentrated on the action taking place. The entire group of people yelled out in triumph as the dog started to breathe again. By the time the camera phone swung back for a better view of the man who miraculously saved the animal, he was gone.\n\nDawn never got a good look at him. If she didn't see him that clearly, Shannon couldn't either. The man in the video was stockier than Al and he had a beard. Did Shannon know something else; something that wasn't apparent in the video?\n\nShe hated the thought of talking with that woman but if it meant finding Al she'd talk with the devil himself. She looked up the number from the text and dialed. A cold chill went up her back when she heard Shannon's voice again.\n\n\"What makes you think that's Al? That guy's heavier than Al and he had a beard.\"\n\n\"Dawn, it's been three years since he disappeared. He could have easily put on some weight and grown that beard. Did you see the dive? Dawn, it was a perfect back dive, just like Al used to do. Watch it again. Watch how he arches his back and reaches out with his arms. I watched it over and over about twenty times. I'm telling you, it's him.\"\n\n\"Okay, let's say it is him, now what? I checked, it doesn't say who shot the video or even where it was shot. I...I don't know if he'd talk to me again but just knowing he's alive would...\"\n\nShe stopped talking and Shannon could hear her former friend starting to cry. \"Dawn, now don't get mad again but when I saw that I called the only person I knew could help...Terry.\"\n\n\"Terry!\" she screamed. \"After all this time, you two are still at it?\"\n\n\"No, no, Dawn, let me finish. I called him because he has money. I shamed him into hiring a private eye. He found out who shot the video. I've got her name and phone number. She lives on the east coast in...hold on,\" she said as she ran to her desk for the information. \"Stonington, Connecticut. I was going to call her but I thought maybe you'd like to do that.\"\n\nDawn had never given up hope. She was desperate, so even if this was a long shot... \"Yeah, I'll call her right now. What's the number?\"\n\nShannon gave the information to Dawn then asked if it made them friends again. If the information panned out, it was a possibility but she left it at that. \n\nAs soon as she hung up with Shannon, she called the number. It sounded like an elderly woman. Dawn introduced herself and confirmed the woman shot the video. She asked if she knew the name of the guy who saved the dog.\n\n\"I don't know his real name,\" she answered. \"He's one of the commercial fishermen. People call him Traveler.\"\n\n\"Can you tell me how long he's lived there,\" Dawn asked.\n\n\"Oh, I don't know, a few years I guess. You might want to talk to Amelia over at Joe's Galley. I know he hangs out there sometimes.\"\n\n\"Joe's Galley? Is that a bar or something?\"\n\n\"It's a restaurant,\" she said. \n\nDawn thanked her and pulled up the restaurant's website. There she found the phone number. Amelia answered but wasn't quite as forthcoming with information as the other woman was. She wanted to know what business Dawn had with Traveler. \n\nWhen Dawn told her what happened three years earlier, Amelia was sympathetic but couldn't give her Al's phone number if she wanted to; she didn't know it. What she did do was give her Coral's. As soon as Dawn hung up she made the third call. \n\n\"East Wind Gallery.\"\n\n\"Hello, I'm looking for Coral Erikson.\"\n\n\"This is she. How can I help you?\"\n\n\"Ms. Erikson, my name is Dawn Spencer. I'm looking for someone. His name is Al McCain. He disappeared three years ago without a trace. I...I think he might be living there. Somebody told me he's known by Traveler. Can you help me?\"\n\nEven over the phone, Coral could hear the desperation in the woman's voice. Was this the woman who squashed Al's heart? \"Ms. Spencer, what makes you think Traveler is your missing person?\"\n\n\"It's a long story,\" she explained. \"I saw a video of him saving a dog. Al was on his high school and college diving teams. When that guy in the video does that back dive he looks just like Al looked when he was in competition. Please, do you know him? The woman at the restaurant gave me your number and said I should call you.\"\n\nCoral didn't know what to do. The woman over the phone sounded so distressed but she wasn't about to give her information without checking with Al. \"You...you say he disappeared?\"\n\n\"Yes,\" as Dawn thought back to that awful day she started to cry as she spoke. \"We...we were engaged, then something horrible happened. Poor Al was devastated. He...he took off and no one's seen him since, not even his parents. Oh please...just...just tell me if it's him. Tell me he's alive...please,\" she sobbed over the phone.\n\nAll this was very disturbing for Coral. Of course she knew the woman was talking about Traveler but disappearing without even letting his own folks know he was okay? That seemed so out of character for the guy she knew. \n\n\"Look, ah, Ms. Spencer, I don't know if Traveler is the person you're looking for or not.\" She could hear Dawn crying and hated to lie to her but she didn't know what else to do. \"I will try to get word to him and see if he will call you. That's about all I can do.\"\n\n\"Okay,\" she responded. \"I...I understand. I...I'll also understand if he doesn't want to talk to me but please have him call his mother. I've kept in touch with her over the years and I just found out his dad has cancer. He's in the hospital and doesn't have much longer.\"\n\n\"Yes, yes of course. I promise you, if Traveler is the person you're looking for, I'll make sure he calls his mother.\"\n\n\"Thank you,\" Dawn sniffled. \"And...and if you do see him, please tell him I know the truth and I'm so sorry for not believing him.\"\n\n\"I will,\" Coral confirmed. She wrote down the phone numbers before they said their goodbyes and hung up. Al was out on the boat with her dad and she didn't expect them back until the following night. That gave her more than twenty-four hours for her disappointment in Al to turn into anger. When he came home the next evening, she was waiting for him. When he saw her he smiled, thinking he was going to get laid.\n\n\"What in the world would possess you to disappear and let your parents wonder if you were alive or dead for three years?\"\n\nHe lost the smile and stopped in his tracks. \"Who told you that?\"\n\n\"Your former fianc\u00e9.\"\n\n\"Dawn? How the hell did you happen to talk to her? Is she here?\"\n\n\"No, she's not here but apparently she's been searching for you all this time. Somebody shot a video of your heroics last month. It's all over the internet. She said she recognized you by your back dive.\"\n\nAl saw there was fresh coffee made so he walked over and poured himself a cup, then sat down. \n\n\"How could you do that; just leave your folks hanging like that?\"\n\n\"Coral, you have a great relationship with Jack so you probably wouldn't understand but my parents never loved me. Hell, they never even liked me, especially my dad. You know, in my whole life I can't ever remember him smiling at me\u2014not once.\"\n\nShe sat down next to him and laid her hand on top of his. \"Maybe it felt like they didn't love you sometimes, Traveler, but I'm sure they do.\" She took a breath. \"Which brings me to some bad news; you're...you're dad has cancer. He...he doesn't have much longer to live. I promised Dawn you'd call your mom.\"\n\nAl sighed. He felt very little for his father but he knew his mother loved the man.\n\n\"You can use the phone in the gallery.\"\n\nAl never did get a phone. He didn't see any reason for one. Everyone he wanted to talk to was in town, within walking distance. \"What-now?\"\n\n\"Yes, now. Chicago is an hour behind of us. It's only eight o'clock there. I'm sure your mother is still up.\"\n\nAl sat there thinking it over.\n\n\"You're not getting any sex until you call her, buster,\" she flatly stated. \"Oh\u2014you should call Dawn too. She wanted me to give you a message. She said she was sorry and she now knows the truth.\" \n\n\"Yeah, well she should have known it then. I'll call mom but I'm not calling her.\"\n\n\"Okay, okay\u2014I won't make you call her but I want you to call your mom right now.\"\n\n\"Alright.\" With that, Al wandered into Coral's office and made the call. He didn't even get a chance to say hi. As soon as she heard his voice she broke out bawling.\n\n\"Mom...mom...\" he gave up and just let her cry for a couple minutes. When he heard her starting to calm down he tried again. \"Are you alright, mom?\"\n\n\"Oh, son, I...it's so good to hear from you. I've been so worried. Where are you?\"\n\n\"I'm in New England, mom.\"\n\n\"New England? Oh, Al, can you come home? I need you. Ralph has cancer. He's not doing good, son. Please, can you come home?\"\n\nAl sighed. He knew before making the call he'd probably wind up going back home for a little while. \"Maybe for a few days, mom, but just for a visit. This is my home now. I have a job, a place to live; I've made new friends...\"\n\n\"Okay,\" she said in a voice that was barely audible. \n\n\"But, mom, if I go out there it'll only be for you and dad. Don't go calling Dawn or anyone else.\"\n\n\"Oh, but honey, Dawn has been so worried about you.\"\n\n\"I don't care, mom; no one, not Dawn, not anyone.\"\n\n\"Okay,\" she muttered. \n\nBefore hanging up, his mom told him she spends every day at the hospital and gave him the information so he could join her in his dad's room. Two days later he had to take a deep breath before walking into the hospital, back to his old life, even if only for a little while. \n\nOutside of having sex with Coral three or four times a week, his new life didn't offer much in the way of real happiness but at least he didn't have to put up with all the pain, humiliation, and disappointment from the people who supposedly loved him.\n\nEven though they knew he was coming, neither his dad nor mom recognized him right away as he walked in the room. \"Al,\" she finally shrieked as she jumped up from her chair and ran over to give him with a big hug. It was probably the most affection she'd ever shown him. After they broke the embrace, he walked over to his dad's bedside. If Al had passed him in the street he doubted he'd have recognized him. The disease had caused the imposing and intimidating man that Al had known, to shrivel up into a little old man before his time. \n\nEven his voice was weak. \"You've grown up,\" he told Al.\n\n\"It was bound to happen sooner or later,\" he replied.\n\n\"Ar...are you here to stay?\"\n\n\"No, I have to get back. I'll stay a couple days but that's it.\"\n\nIt was one of the few times he saw his dad look sad and not angry. \n\n\"Can you sit down? I...I've got something I have to tell you.\"\n\n\"Ralph...please don't.\"\n\nAl looked over at his mother who appeared worried. \n\n\"Please, Ralph...\" she begged.\n\n\"He has to know,\" responded his dad. \"He has to know why. I need to apologize.\" He looked up at Al. \"You'd better take a seat. You're going to want to be sitting for this.\"\n\nAl took a chair from the corner and pulled it up next to the bed alongside his mother and waited.\n\n\"I'm not your dad.\"\n\nAt first he thought his dad was disowning him but that didn't tie in with the apology he was supposed to be getting. What the hell was he talking about? Before he could ask, his dad continued...\n\n\"About a year after your mother and I were married she had an affair with an old boyfriend. He was the one who got her pregnant, not me.\"\n\nAl was finding it hard to process his dad's words. \"I...I don't understand...\"\n\n\"What's to understand? Your mother had an affair with another man and he got her pregnant. It's not that complicated,\" he stated. \"I didn't even know it until a couple years later. We had been trying for another child but nothing happened. I finally went in for some tests and found out I couldn't have kids. I confronted your mother and eventually got her to confess.\"\n\nAt first Al thought this was some kind of new cruelty his dad had thought up, but his mother was crying. When he stopped and thought about it, he knew he was being told the truth.\n\n\"I was so mad if I could have found that guy I think I would have killed him but by the time I found out, the asshole had moved out west somewhere. I was going to divorce your mother but then I thought of a worse punishment\u2014you. She loved the living hell out of you and it infuriated me. I knew by punishing you I'd be punishing her. Every time I yelled or cut you down she would cringe. She knew why I did it but she could never say anything. Oh it was great revenge. Every time I'd criticize and berate you I'd look at her and just dare her to say something. Watching the pain in her face was the only pleasure I had in life.\"\n\nAl sat there just stunned. Like a jigsaw puzzle, all the pieces fell together; all the times that bastard made him feel inferior and inadequate, all the times he looked to his mother for support and never got it\u2014it all made sense now. \n\nHe looked at his weeping mother. \"So who is my real dad?\"\n\nShe took a tissue from her purse and wiped her eyes. She took a deep breath and stiffened her back. \"His name was Conrad Lipp. He was my high school sweetheart. It...it was kind of ironic. I never had intercourse with him in high school because I was terrified of getting pregnant, but I always wondered what it would be like. \n\n\"I ran into him after Ralph and I had been married. He was working for a company with offices all over and he was trying to get transferred. He always wanted to live out west and he had been told of a couple spots that would soon be open. He was sure he was going to get one or the other. I knew if I was ever going to have sex with him I had to make my move. When I asked him to get a motel room after one of our lunches he didn't hesitate.\"\n\nAl had to chuckle to himself. This was just too much. \"Where is he now?\"\n\n\"He died three years ago from liver cancer.\"\n\nThat was news to her husband. \"You kept in touch...behind my back; you kept in touch with him all that time?\"\n\n\"No, Ralph. I haven't talked to him since he moved. His sister still lives here though. I ran into her last year and she told me.\"\n\n\"Did he know about me?\" Al asked.\n\n\"No. In fact I didn't know myself until your dad took those tests. Connie got his transfer about two months after we'd slept together. We had one last lunch, just to say goodbye. I wasn't showing yet and didn't mention I was expecting. I didn't see the need. He and I had only slept together that one time so I really thought Ralph was your father. That was the last time I saw him.\"\n\nExcept for the beeping of the heart monitor, the air became silent. Everyone was in deep thought and didn't even hear the rapid footsteps in the hall getting louder. Suddenly a disturbance caught everyone's attention. \n\nOut of breath, her chest heaved from heavy breathing. She held onto the door jamb for support. \n\nAl looked over at this mother; so much for not telling Dawn he was there...except that she looked as surprised as he was. \n\nDawn studied him. He looked different. It wasn't until he surly greeted her by name that she dared believe it was really him. She was feeling light headed. Her legs felt like rubber and her eyes began to roll back into her head. Al leaped from the chair and grabber her just before her head hit the hard floor. A male nurse saw what happened from the hallway and helped Al get her over to a small couch along the wall. He asked Al if she was sick, did she need a doctor? Al told him he was pretty sure it was just excitement because they hadn't seen each other in a while and thought she'd be fine. The concerned nurse left but said he'd check back in a few minutes to make sure she was okay. \n\nAl looked back at his mother. \"You just had to tell her I was here, didn't you.\"\n\nShe shook her head. \"No\u2014no, I didn't call her, honest.\"\n\n\"Then how...\" \n\nHe stopped when he heard her coming around. He was bending over her when she opened her eyes and stared into his face. She had to make sure she wasn't dreaming. She reached up and touched his cheek. \"It's...it's really you.\"\n\nAl straightened up. This was all becoming overwhelming. First he finds out his mother was a slut and his dad is not his read dad. Then she betrays him by calling the one person in the world he never wanted to see again...and then lies about it. He walked over and sat back down in the chair to think.\n\nDawn struggled a little to sit up then took a couple of deep breaths to get her heart pumping again. She looked at him staring down at the floor. \"Al, I'm sorry, I'm so sorry. Shannon lied to me. I'm so sorry I believed her and not you.\"",
        "\"Me too,\" he mumbled.\n\nShe was disappointed with his reply, but then what did she expect; that he'd welcome her with open arms? She knew better, or at least she should have. \n\n\"Dawn, how did you know I was here?\" He had to see if his mother was lying to him again. He was so ready to simply wash his hands of her and everyone else in Chicago.\n\n\"Shannon,\" she answered.\n\n\"Shannon! Ah yes, your best friend. The bitch I was supposed to have raped. How the hell did she know?\"\n\n\"I assume she works here. She was studying for her nurse's certificate, remember? She wanted to go on and get her BSN. She texted me just a little while ago, saying she saw you getting into the elevator. She stopped by the desk where you got your visitor's pass and asked what room you were going to.\"\n\nHe stayed silent.\n\n\"And she's not my best friend, not any more. When I found out that she lied to me I told her I never wanted to see or talk to her again.\"\n\n\"Obviously, that didn't last,\" he remarked.\n\n\"Yes it did\u2014but she was the one who found you. She saw that video of you saving the dog and recognized you. She texted it to me but when it came, the display said the sender was unknown. I probably wouldn't have opened it if I knew it was from her. It was the first time we'd communicated at all in three years.\"\n\nThis was a different story than the one he had concocted in his head. \"Are you sure all the rape crap wasn't something you and her dreamt up just to get rid of me?\"\n\nOh God, she wondered if that's what he had been thinking all this time. The thought was painful and she almost moaned out her answer. \"No, no, no, Al. Why would I ever want to get rid of you? God, you're the best thing that ever happened to me.\"\n\nHe finally looked over at her. There were tears streaking her cheeks and a distraught expression on her beautiful face. Now that the shock of seeing him was wearing off, she was getting her wits about her again. \"Al, I...I don't want to take you away from your dad, but is there any way you could spare me a few minutes before you go back?\"\n\n\"No time like the present,\" he said as he abruptly stood. He was still floored from learning he was the bastard son of someone he'd never even met. He had to get out of there. \"We can go down to the cafeteria. You're buying.\"\n\nHe was already out the door before a shocked Dawn hurried to catch up with him. Neither said a word until they got their coffees and took a seat by a window.\n\n\"I...I appreciate you giving me some time. I know you must be worried about your dad so I'll keep it brief.\"\n\nAl didn't even acknowledge what she said. He just sat there staring into his coffee like it was a black hole devouring his thoughts. Dawn assumed his attitude was aimed at her. \"Look, Al, I just wanted you to know, what you said in there...about me trying to get rid of you...that...\"\n\n\"Huh,\" he suddenly brought his head up and looked at her. \"I'm sorry, what'd you say?\"\n\n\"Al, are you alright? I know you're mad at me and I don't blame you at all, but-well, you're acting kind of strange.\"\n\n\"Yeah, well... You know why my dad's treated me like shit all my life?\" He didn't wait for her to respond. \"Because he's not really my dad. A year after he and my mother were married, she had an affair with an old boyfriend who knocked her up.\" He saw Dawn's eyes widen with surprise. \"Yeah, can you imagine that? That man in the bed up there has been treating me like crap all this time to punish her,\" he said while shaking his head. \"God, talk about a screwed up, dysfunctional family. You've got to go some to beat mine,\" he sneered. \n\nSeeing him in so much pain again only refreshed in her mind the pain she caused him years earlier. She couldn't do anything about his parents but she'd give anything to be able to right the wrong she did him. \n\n\"Al...I...I don't know what to say. That's horrible.\"\n\n\"Looking back, maybe I should have guessed it was something like that. I always tried to be the best kid I could be yet nothing was ever good enough for him. He never hit me but the verbal abuse was unrelenting.\" He looked at his ex-girlfriend sitting across the table, with sad eyes. \"That's why your accusation hit me so hard. For once in my life I thought I had found someone who had faith in me\u2014who actually knew me for the person I was. Ha,\" he chuckled, \"silly me.\"\n\nHis words cut like a knife. She tried holding back the water works. \"Al, she had been my best friend since we were kids. She knew how much I loved you and I couldn't imagine her purposely wanting to hurt me like that. It didn't make sense,\" she said. \n\n\"So what happened anyway? Did she confess? How'd you find out she was lying?\"\n\n\"Your boss at the bar, he told me you were working that night. When I found that out I confronted Shannon and she admitted the whole thing.\"\n\n\"Did she tell you why? What did I ever do to her?\"\n\n\"Nothing, Al. You never did anything to her. It was all Terry Belshaw's idea. As fast as you left our apartment that day, he was right there to take me out to dinner. Shannon told me he was in love with me and paid her to break us up. He told her he could give me all the things you never could. She said she thought she was doing me a favor.\"\n\nAl had to laugh. \"So did you marry him then; live in a big mansion with servants catering to your every need?\"\n\nIt was the first time she'd ever seen any meanness in Al. His question was hurtful and insulting and he knew it. \"No, Al, I didn't marry Terry. The last time I saw him or Shannon was at graduation.\"\n\nWhat a day it'd been. First he learns about his dad and mom and then finds out that his friend was in love with his girl and conspired against him in college. Evidently there wasn't a soul in the world he could trust...except for Jack. \n\n\"Well,\" he responded apathetically, \"it doesn't make any difference now, does it. It's all over and done with.\"\n\nDawn was trying in vain to control the tears as a couple broke free and trickled down her face. She wiped them away. \"Don't...don't you have any feelings left for me at all?\"\n\nHe stared at her for a few seconds. \"Yeah, anger\u2014anger and hurt, sometimes even rage. You were my one hope for some happiness. I had dreams of you and me living out our lives together, dedicated to each other, raising kids, spoiling our grand kids, the whole nine yards, and you yanked it right out from under me. I don't give a damn what Shannon told you. You should have known I could never do anything so monstrous.\" \n\nA moment later he abruptly stood up. \"I've got to get going.\"\n\n\"How long will you be in town?\" she pleaded. \n\n\"I was planning to stay two or three days but I don't see any reason to stick around now. If I can change my flight, I'll leave tomorrow,\" he replied. \"Thanks for the coffee.\"\n\nThat night there were so many things whirling around in his head, Al found sleep to be unattainable. After leaving Dawn he left the hospital without going back up to the room. He was pretty sure he was going back to Stonington the next day but he wasn't sure if he wanted to stop by the hospital before he left. He had a strong urge just to get on a plane and never look back.\n\nThere was one problem with that. Al knew he'd regret it. Even after three years of living with the anger and bitterness, deep down he was still a nice guy, he really didn't want to add regret to the mixed emotions he already felt. On top of that, seeing Dawn again stirred feeling he thought he'd lost. What he wanted to do and what he could live with doing, were two different things. \n\nRalph's confession was actually cathartic in a way. At least it answered the question, why; why wasn't he ever good enough, why could he never do anything right in the eyes of his dad? He now realized he had nothing to do with his dad's attitude. \n\nAnd as for his mother, hell, if it wasn't for her cheating he wouldn't even be there. As disgusting and repulsive as he found the act, he couldn't argue with the end result. The sun was coming up by the time he'd made some decisions.\n\nThe next day he called the airlines from his motel room but he couldn't get a flight back home until later that night. He took a nice long, hot shower before going out for breakfast. He was no hurry. He had a lot of time to kill. It was almost noon by the time he got to the hospital. His folks were surprised to see him. \n\n\"We...we didn't think we'd ever see you again,\" his mother whimpered. \n\n\"Yeah, well...\" he took a deep breath. \"I hadn't planned on coming back but last night I realized that if I go through life hating, that makes me like you,\" he said, looking at the frail man in the bed. \"And I don't want to be like you.\"\n\nRalph had taken a turn for the worse during the night and could barely talk. His brain was still functioning though. He could still understand. Al could see it in his eyes; eyes that, for the first time that Al could remember, had tears leaking from them. \n\n\"I forgive you, both of you,\" he said, looking from one to the other.\n\nHis mother broke out in sobs as Ralph closed his eyes and weakly nodded his head in gratitude. Al tried comforting his mother for a little while before saying his goodbyes. He was waiting at the elevators when he saw a bunch of nurses rush into the room. He hurried down the hall and stood in the doorway as he watched while the medical team worked in vain trying to revive the only man he ever knew as his father. \n\nIn spite of the torture and pain she suffered at the hands of Ralph's cruelty, Al could see the anguish in the face of his grief-stricken mother. He put his arm around her and led her out of the room. \n\nSo much for leaving tonight, he thought. Regardless of what she did, she was his mother and there was no way he could leave her until he knew she was settled and would be alright. Later that night he called Coral and explained the situation. He asked her to tell her dad he wouldn't be back for several days. She told him her dad would understand and he should stay as long as he felt the need. With that off his shoulders, he called the airlines and cancelled his reservation.\n\nOver the next couple days he helped his mother buy two cemetery plots and make arrangements with one of the funeral homes. As visiting hours started, Al was surprised to see the man actually had friends. When Dawn walked in they were both surprised to see each other. After hugging and giving them both her condolences, she waited for a moment when Al was alone.\n\n\"I'm surprised to see you here. You were pretty angry when I saw you last and you said you were going home.\"\n\n\"Yeah, well, I had my ticket, but when I saw mom after he died I knew I had to stick around for a few days\u2014long enough to get her settled in.\"\n\n\"Do...ah,\" she looked down, knowing he was going to reject her, \"do you think we could go out to dinner some night?\"\n\n\"Why?\"\n\nA little aggravated at his dismissive tone, hers had an edge to it. \"Because not a day has gone by that I haven't thought of you, wondered if you were okay and cried over what I did to you. In spite of being asked out numerous times, I've not had a single date since then. I couldn't without knowing what happened to you, and because I still love you and pray that somehow you can forgive me.\"\n\nHer short but fiery diatribe was impassioned and took him a little by surprise. As hard as he fought against it, he couldn't help a slight smile in reaction to what she had said. \"You're joking, right? No dates in three years? No way.\"\n\n\"No, I'm not joking. There's a teacher at school\u2014we eat lunch together but every time he's asked me out I've turn him down. It...it would've been like cheating on you. I just couldn't do it, Al, at least not until I knew you were okay.\"\n\n\"Let me think about it,\" he said. \"Maybe after the funeral.\"\n\nShe found a card in the lobby and wrote down her number. She gave it to Al with a last ditch plea then gave his mother her sympathies one last time before leaving. \n\nAfter three days, Dawn had just about given up when her phone rang. He picked a burger joint they used to go to when they were still in high school. \n\n\"Last of the big time spenders,\" she joked as she sat down in the booth. He told her he picked it because the place was full of good memories. She had to agree. It was actually the site of their very first kiss. \n\n\"How's your mother doing?\"\n\n\"About as good as can be expected, I guess. How the hell she can grieve like that for someone who tortured her for so long is beyond me,\" he said with a little anger in his voice. \n\n\"I guess love does funny things to people,\" replied Dawn. \n\n\"Huh,\" he chuckled derisively. \"Yeah.\"\n\nAs soon as the waitress left after taking their order, Al had a question. Since the funeral he'd been hung up on something she said. \n\n\"Were you BS-ing me when you said you haven't had a single date in all this time?\"\n\nIt seemed like as good a time as any to counter with the question she'd been afraid to ask. \"No, it's the truth. What about you, Al, ar...are you married?\"\n\n\"No, I'm not married, or engaged, or anything like that. Honestly, I do have a friend with benefits relationship. She's older than I am. She's...\"\n\n\"Coral?\" she asked.\n\nHe was shocked at first, but then he remembered they had talked over the phone. He confirmed her guess with a nod.\n\n\"She sounds like a nice person,\" Dawn commented with a touch of sadness. \"Are you in love with her?\"\n\n\"I'm fond of her, very fond actually, but no, I'm not in love with her. Not like I was with you,\" he admitted.\n\n\"Is...is there any of that love left, Al?\" \n\nHe wondered the same thing. \"I don't know, Dawn. You broke my heart. Even with all the crap from my folks, I don't think I've ever been hurt so badly. Besides, I have a new life, now. I have a job, friends, a place to live...\"\n\n\"Where are you working?\"\n\n\"I work on a fishing trawler with Coral's dad. He's quite a guy.\"\n\n\"You mean like a fishing boat?\"\n\n\"Yeah, exactly.\"\n\nIt hadn't registered before then but she did remember someone telling her he worked as a commercial fisherman. \"What about your art? Al, you're a graphic artist. It's what you've wanted to do since you were a kid. You were only a few months away from your bachelor's degree.\"\n\n\"I left everything behind me, Dawn.\"\n\n\"Oh, Al,\" she moaned with moist eyes. \"Please don't turn your back on everything you worked for\u2014everything you love.\"\n\n\"Dawn, are you sure you still have feelings for me or are you just feeling guilty, or maybe feeling sorry for me?\"\n\n\"No, that's not it. Al, I've loved you since the first time we met. Yes, I know\u2014I let you down-I let that lying bitch put doubts in my head but I never stopped loving you, never.\" \n\n\"You could have fooled me,\" he remarked. \"I believe your exact words were, 'I think under the circumstances we should stop seeing each other.'\"\n\nShe wasn't surprised that he remembered what she said, word for word, she also remembered. \"And as painful as it was to say that, I can't even image how painful it was to hear,\" she sadly replied. \"Sometimes we hurt the ones we love, Al. That doesn't mean we stopped loving them.\" \n\nThey dropped the conversation there because their food came; a big juicy burger, greasy fries, and a malt-it was almost like old times. \n\n\"Jesus,\" she said with a smile. \"I haven't eaten here in years. To tell you the truth I was a little disappointed when you said to meet here. I was hoping for a place a little more romantic, but you're right, this place holds a lot of great memories.\"\n\nHe just looked up and smiled. His mind was preoccupied with some of the other things she'd said. Maybe he'd do a little fishing of a different sort. \"So tell me, now that you know I'm okay, is that teacher going to get lucky?\"\n\nShe seemed to be thinking about her answer as she poked a fork at her fries. \"Probably not,\" she finally responded.\n\n\"Why not? Not your type?\"\n\n\"No, it's not that. I...ah...\" she let out a small sigh. \"I guess I just haven't forgiven myself yet.\"\n\n\"It's been three years, Dawn. Let it go.\"\n\nShe laid her fork down and looked up at him with salty droplets of regret. \"How am I supposed to let it go, Al? We should be married by now. We should have a child with another on the way. We should be saving for a house and building a future together. I ruined all that. How do I let that go?\"\n\nShe scooted out from the booth. \"Maybe this wasn't such a good idea after-all,\" she said. She stepped over and gave him a kiss on the cheek. \"I'm so sorry, Al. I do love you and always will.\"\n\nThe neon sign in the window partially blocked his view but he watched as she got in her car, wiped the tears from her eyes, then drove off. He sat there for a minute, wondering if that would be his last memory of her. He looked down at his plate and decided he was no longer hungry either. \n\nHe spent two more days in town to make sure his mother would be okay. To his surprise, Ralph had a life insurance policy that would allow her to stay in the home and not have any financial worries as long as she didn't go on any crazy spending sprees. \n\nHe was standing by the front door with his suitcase in hand. His mom gave him the biggest hug he could ever remember. \"We've all let you down, haven't we, son; every one of us. I don't blame you for wanting to leave and start a new life somewhere else but please don't forget about us, honey. Let me know how you're doing from time to time, please.\"\n\n\"I will, mom,\" he replied, putting the suitcase down and returning her hug. With that, he was out the door. He had forty-five minutes to sit around O'Hare before his flight boarded\u2014forty-five minutes to go over the last ten days in his head. It was a lot to think about, not to mention the stirred up emotions he was feeling. For a second he hesitated when they called his flight number. \n\nHe watched out the window as the ground quickly fell away and the industrial complex of Elk Grove disappeared into the distance. Only the drone of the jet engines remained to accompany his thoughts.\n\n***\n\n\"So did you see him?\"\n\nThe sound of her former friend's voice was like fingernails scraping across a chalkboard. \"Yes, I saw him.\"\n\n\"I knew it was him as soon as I saw him in the hall. So\u2014are you two getting back together?\"\n\n\"Shannon, what's makes you think something like that is even possible? He has a completely different life where's he's living. He's no longer interested in me nor is he ever coming back to Chicago.\"\n\nShannon was truly sorry to hear that. When she saw him in the hospital she had fantasies of the three of them becoming friends again. She missed the good times she and Dawn shared together for all those years. When she looked back at what she'd done she couldn't believe she had been so immature as to think she was doing her friend a favor. She was afraid to be honest with herself. If she was she'd have to admit to the jealousy she felt over her friend being so in love. She'd have to admit that it played a part in her decision to go along with Belshaw's plan. Shannon was having a tough time with the realization of what she'd done and her true motives for doing it. If there was some way she could rekindle the friendship maybe she could somehow make up for it, but that didn't seem likely. She knew the answer before asking the question but she still had to ask. \"You, ah think we could have coffee together sometime?\"\n\n\"I don't think so,\" Dawn flatly replied. \"I don't think I could face you without trying to strangle you, Shannon. Not that I wasn't stupid for allowing it to happen, but you ruined my life. I doubt I'll ever find again, what I lost with Al.\" Just hearing herself say the words was almost unbearable. \"Please don't call anymore,\" she wept before hanging up.\n\nShannon never felt worse than she did at that moment. Somehow, with all the mystery surrounding Al's disappearance, she always had hope that he would come back and things would still work out somehow. Now it appeared those hopes were dashed forever.",
        "The following day, as usual, Dawn sat with Brad eating lunch in the teacher's lounge. Undaunted by rejection, he had been asking her out once or twice a week for as long as she could recall. She remembered Al telling her to move on. Maybe he was right, maybe it was time. She had to give up on the notion of her and him living happily ever after. His visit made it obvious that it wasn't going to happen. \n\nShe'd been thinking all morning that if Brad asked for a date she would consider it as fate and say yes this time, but it wasn't to be. Instead they talked mostly about a student they shared, that and a new book he was reading. Lunch time ended without Brad's request for a date. It was probably just a well, she thought. Her moment of weakness had passed. She actually felt relieved while walking back to her classroom. She just wasn't ready yet. \n\n***\n\n\"Sorry to hear about your dad, Traveler.\" That was about all Al heard when he got back; Coral was the first, Amelia was next, then Jack and a host of others including the guys he worked with. It was like hitting a raw nerve every time someone said it but he was determined to keep his current life separate from the one he left in Chicago so he never said more than thank you. \n\nIt didn't take him long to get right back in the routine of things. The winch had been replaced so he joined Jack and the crew as they took Abby out the day after he had returned. Jack told him to prepare for a two or three day run. Normally, when they were out for that long their down time would be passed below deck, playing cards, but Al spent most of the time on deck listening to the gulls and feeling the sea air in his face. \n\nHe did love it out there but was it enough? Jack watched him from the wheelhouse as Al struggled with his emotions. \n\nThey'd been back in port for two days when Jack saw him walk into Joe's Galley for lunch. \"Hey, Traveler, come on over and have a seat.\"\n\n\"What'll you have?\" Amelia yelled out from behind the counter as he headed for Jack's table.\n\n\"Burger and coffee,\" he responded.\n\n\"Coming right up.\"\n\n\"How's it going, captain,\" he said while sitting across the table from Jack. Amelia came over with his coffee. He thanked her, took a sip, then looked over at his friend and boss. \"Everything okay? I figured we'd be out there again by now.\"\n\n\"Yeah, everything's fine. We've been shorthanded with you gone and I've been working the crew pretty hard. I figured they were due a few days off, that's all.\" \n\n\"I see. I really appreciate you giving me the time off. I'm sorry it turned out to be so long.\"\n\n\"No problem,\" he acknowledged. \"How about you? Everything okay? You seemed preoccupied out there. You know it can be a dangerous profession. You've got to pay attention to what you're doing or people can get hurt. I'm not the only one who noticed, either. A couple of the guys mentioned it to me when we pulled into port.\"\n\nAl started to apologize but the captain wasn't looking for apologies. He wanted to know what had his young friend so torn up. He got Al talking and once he started he didn't stop. For the first time since the false accusation, he told his story. His soliloquy was not without emotion. Jack sat and listened while the boy poured his heart out. The wiser, older man could hear the pain in his voice and saw the anger in his eyes.\n\nAfter forty-five minutes, Al was finally talked out. Jack sat back in his chair and stared for a moment at the young man he had grown to think of as a son. \"What are your plans, now?\"\n\n\"Plans? I don't know other than going out on Abby with you.\"\n\n\"Traveler, fishing is a way of life for me. I was born into it. It's all I know\u2014but that's not you.\"\n\n\"Jack, I'm as good as any of the other guys out there,\" he said defensively. \n\n\"Better. You learned quick and you're the best hand I've got, but it's not in your blood. Close your eyes and picture the perfect life you've always wanted.\"\n\nAl didn't have to close his eyes. He only had to remember how things were with Dawn before that ill-fated day. He was looking into his half empty cup of coffee when Jack saw a slight smile.\n\n\"I'll lay you eight to five you didn't picture yourself fishing for the rest of your life.\"\n\nAl slowly shook his head. \"I just don't know how I could do it, Jack. There's so much pain back there.\"\n\n\"Well, it won't work if you can't forgive her, that's for sure. From what you've told me, it wasn't simply the fact that she didn't believe you.\"\n\nAl looked up like he was about to challenge Jack's statement.\n\n\"Yeah, I know;\" Jack said before he could speak, \"it was certainly what caused the hurt but I think it goes deeper than that. After the way you'd been treated by your parents your whole life, Dawn was the one person who was supposed to love you unconditionally. You put all your eggs in her basket. That's putting a whole lot of pressure on a person, Traveler. In your eyes, she was perfect and you left no room for her to be anything but. When she showed she was human it was hurtful\u2014maybe more than it should have been.\"\n\n\"Jack, we'd known each other for three years. We were going to get married. We made plans.\"\n\n\"I'm not saying you shouldn't have hurt. Hell, it had to feel like she stuck you in the heart with a harpoon, but it wasn't something she'd done out of meanness or some malicious act.\" He stopped talking for a moment when Amelia came over to fill their cups, then picked up where he left off.\n\n\"You really think three years is long enough to know everything about a person?\" He didn't wait for an answer. \"You've known Coral for three years; did you know she once killed a man?\"\n\nAl looked up in disbelief.\n\n\"Yeah. He was a local trouble maker. He'd had several run-ins with the law around here. She was in the back room late one night taking inventory; the same room you're now renting. She was still using it as a storeroom back then. She heard him break the glass in the front entrance. When she looked out she saw his arm reaching in and unlocking the door. She ran into her office and grabbed the gun I'd given her from the desk drawer. By the time she looked up, he was standing in the doorway. He rushed her but she was quicker. She got him three times in the chest.\"\n\n\"I...I didn't even know she had a gun. She's never said anything.\" Al was staggered by what he'd just heard. He was still shaking his head in disbelief. \"God, I can't imagine how horrible that must have been for her.\"\n\n\"Nah, not really, she never even thought twice about it.\"\n\n\"What?\"\n\n\"It never happened,\" Jack said. \"Are you kidding? We're talking about my daughter here. She wouldn't kill a cockroach. Hell, when a family of mice decided to take up residence in the gallery a few years ago, she made me go out and buy mouse traps that wouldn't hurt the little critters. You've known Coral for three years yet you believed something that was completely and totally out of character for her because it came from a trusted source, me. You never even gave a thought to the possibility of me lying to you.\" \n\nJack was absolutely right. He fell for it hook, line, and sinker, but... \"But it's different when you love someone, Jack.\"\n\n\"Look, I'm not saying she didn't do you wrong. I'm just trying to show you people make mistakes. It's human nature.\"\n\n\"So you think I should go back?\"\n\n\"I think you should take all the hurt and anger, stick it in Davey Jones locker, and sit down with a clear head to figure out what's best for you,\" Jack replied. \"I know you still love her. I can see it in your eyes when you talk about her. \n\n\"Listen, I'm going out tomorrow morning. We'll be gone two or three days but I'm not taking you with me-not this time. I want you to take the time to get your head on straight. If, when I get back, you tell me this is the life you want to live then I'll teach you everything I know and everything I've forgotten. I'll turn you into the best commercial fisherman on the east coast, but you've got to be sure, son. You can't have doubts.\"\n\n\"What would you do, Jack?\"\n\n\"What I would do has no bearing on your situation, Traveler, but I'll tell you this, not a day has gone by that I don't miss Coral's mother. When she passed she took a part of me with her\u2014the best part. It's been ten years and there are still nights where I have to drink until I pass out to stop the pain. That's no way to live, my boy. It certainly wasn't of my choosing and I'd hate to see you condemned to a similar fate...especially when you do have a choice.\n\n\"Lunch is on me,\" he said as he gulped his last little bit of coffee. \"Take the next few days and consider your options, Traveler. I'll back whatever decision you make.\"\n\nHe left Al sitting there as he walked up to the register and paid the bill before leaving. \n\nThe next morning the sun had been up for almost an hour before Coral got to the shop. Other than making coffee, she didn't have a lot to do before opening the doors. She became a little worried when she thought she heard a noise from inside Traveler's apartment. She tiptoed to the connecting door and put her ear against it. There was most definitely somebody in there but it didn't sound like they were tearing anything up. She gently knocked and was a little startled when he opened the door.\n\n\"Traveler, I thought you'd be out with dad. What's the matter? Are you sick?\"\n\n\"No, he told me to stay home this trip and get my head out of my ass,\" he responded with a small smile. \"Come on in. Coffee's already made.\"\n\n\"Ah, yeah, I guess\u2014only for a few minutes though.\"\n\nThey sat opposite each other at the little counter he used as a kitchen table.\n\n\"So tell me, why does my dad think you've got your head up your ass,\" she questioned with smile.\n\n\"I guess I was a little slow on the uptake during our last run.\"\n\n\"I see; still thinking about your trip back to Chicago? Anything you'd like to talk about?\" Coral probed.\n\nHe chuckled. \"Your dad asked the same thing, yesterday. I pretty much told him everything. I don't think I could go through it again. Besides, it would take longer than a few minutes. Let's just say it was pretty emotional for me and answered some big questions.\"\n\n\"Well-now you have my interest piqued,\" she said. \"I didn't mean to put you off. I'm here if you want to elaborate.\"\n\nHe gave her the Reader's Digest version. It still took three cups of coffee, and two interruptions, one for her to open the gallery and a second when a customer came in, but she returned each time so Al could finish the story. \n\n\"Wow, I see now why you hesitated to even go back there,\" she told him. \"So\u2014thinking about going back?\"\n\n\"I don't know. I haven't made up my mind yet. What do you think?\"\n\n\"I think you should at least give it a try. If it doesn't work out, dad will always welcome you back with open arms.\"\n\n\"What about you?\" he asked.\n\n\"Me? Sure, me too. Oh, you mean the sex? Traveler, don't ever pass up love for sex. I can't say I wouldn't miss you but I wouldn't expect you to stick around just to get laid, not with the love of your life waiting for you in Chicago.\"\n\nJust then they heard the little bell over the front door of the shop. \"I have to get back to work,\" Coral said. She stood and gave him a peck on the lips. \"You have to do what's right for you, Traveler. Talk to you later.\"\n\nHe got one more opinion from Amelia when he went down to Joe's Galley for lunch. She didn't know much about his situation but she'd heard some of the conversation with Jack and she could tell something was bothering him. She more or less gave him the same advice, he had to follow his heart.\n\nThat night he used the office phone to call his mom and see how she was doing. They talked for almost an hour. It was the first time they could hold a conversation without constant interruptions from Ralph. It was probably the most pleasurable talk he'd ever had with her. \n\nLater he tossed and turned but there was no way he was going to fall asleep. He had way too much on his mind and couldn't turn it off. It was about two in the morning when he decided to go for a ride. He hopped on his Shimano and took off for parts unknown. He just needed to ride. \n\nThe sun still had an hour before it would peek its head above the edge of the earth and silhouette the various fishing vessels setting out for day on the water. After a solitary, moonlit ride up and down the coast, Al found himself sitting on the same bench where he first came to rest on the day he'd arrived. The night air had cleared his mind some. For hours he weighed the possibilities against the probabilities, the realities against his dreams, his hurt and pain against his love.\n\nAl had a lump in his throat and fought back tears as he said his goodbyes. They were his extended family. Up to that point he hadn't realized how much they meant to him, but Jack was right, he didn't want to live the rest of his life wondering, 'what if.' If there was still a chance of living his dream with Dawn he had to take it. If it didn't work out, he'd be back. \n\nUp until the time he actually stepped into the plane, Al wasn't sure if he could go through with it, so he didn't call anyone to let them know of his return. His mother almost had a heart attack when she answered the door and found him standing there with his suitcases in hand.\n\n\"Hi, mom,\" he said with a smile. \n\nOnce she had gotten over the initial shock, she was more than happy to offer her son his old room back; at least until he could get an apartment. He smiled when he checked it out. It was exactly the same as when he left. \n\nHe wanted a few days to relax and get settled in before calling Dawn. He used the time to check into what it would take to resume his studies and get his bachelor's in graphic design. He found an accredited, on-line college with summer classes that allowed him to sign up and start almost immediately. There would be some review but he would almost be able to pick up right where he left off. \n\nHis mother always had her own car so she intended to sell Ralph's Lincoln after he died, but she hadn't gotten around to it. It was still in the garage so she gave it to Al. He hadn't even thought of his driver's license in years. When he checked and saw it was about to expire he went to get it renewed; piece of cake. \n\nSo far things were going great...now for Dawn. If there was one thing that convinced him to give things another try, it was the stunt that Jack pulled at Joe's Galley. In seconds he believed Coral had shot a man. If Jack hadn't come clean so quickly, how long would he have gone on believing it? That and Jack's disclosure of the pain he still felt at the loss of his wife, forced him to see things from a different angle. \n\nStill...he wasn't about to just jump in with both feet. He was going to take it slow. He still had her number from when she gave it to him at the funeral. He planned to call her that evening and ask her out for coffee, then maybe a few dates. If, after a while, they were still dating and mutually agreed, they'd become exclusive. Yup, slow and easy was the plan. \n\nWhile driving back home from the DMV with his brand new driver's license he passed a school and recognized the name. It was the grade school where Dawn taught. On a whim he pulled around to the parking lot. He knew what her car looked like from the restaurant where he'd seen her last. Sure enough, there it was. He glanced at the clock in his car. It was a couple minutes past three o'clock. He knew she'd soon be leaving the building. He smiled as he decided to surprise her. He walked over and leaned against her car with his arms folded and a big grin across his face. \n\nWhen he saw her coming out the door his heart dropped. She was in the company of a very good looking man. They laughed and were obviously at ease with each other as he possessively guided her along by the elbow. Al remembered Dawn telling him about someone who was interested in her. Was he too late? He was having second thoughts about ambushing her like that. She hadn't seen him yet. There was still time to skulk away and find out if she was involved but just before he was about to make his get-away he heard a shriek...\n\n\"AL!\" She stopped dead in her tracks and just stared. \n\n\"Surprise,\" he said with a sheepish grin.\n\n\"Wha...what are doing here?\"\n\n\"I've decided to come back to Chicago and finish my degree.\"\n\nFor a second he wondered if she was going to faint again. Then, to the dismay of her companion, Dawn ran to him, threw her arms around Al's neck and kissed him hard. Three years of hurt and anger seemed to wash away with the feel of her body pressed against his. He wrapped her in his arms and returned the kiss. So much for taking it slow.\n\nWhen she realized what she was doing, Dawn broke the kiss and stepped back. \"I...I'm sorry,\" she apologized. \"I shouldn't have done that, it's...I...I'm sorry. I just couldn't help myself.\" \n\nBefore he could answer, she remembered Brad standing behind her. She turned to him. \"Oh, I'm sorry, Brad. This is...\"\n\n\"Al...yes, I figured that out,\" he said, cutting her off. \"The famous Al,\" he said, sticking his arm out to shake.\n\n\"Famous?\" Al questioned while taking his hand. \n\n\"She has a video on her phone of you saving a dog from drowning. I've seen it six thousand, three hundred, and twenty nine times,\" he joked.\n\n\"Oh, you have not,\" Dawn said, playfully slapping him on the arm. \n\nAl caught the interaction. It looked like there was chemistry, or at least a relaxed familiarity between them. Was this a serious rival? Had he already captured her heart? Al wasn't sure what he should do and was looking to Dawn for a cue of some kind.\n\n\"Well, I was just coming back from the DMV when I saw the school and thought I'd surprise you,\" he told her. \"I'd better be getting back.\" He started to turn toward his own car when he felt her touch his arm.\n\n\"Al, do...do think we could have coffee sometime?\" \n\nAl turned back and saw Brad over her shoulder. There was no mistaking the look on his face. He obviously knew the situation and was praying Al would turn her down. He was going to be disappointed. \"Sure,\" he responded. \"In fact, I know it's short notice, but if you don't have plans tomorrow night, how about dinner?\" \n\nAs she quickly and enthusiastically accepted, Brad knew he'd been kidding himself. She was never going to give herself to him. Her heart, body, and soul belonged to the man standing in front of her. \n\nDawn had to concentrate hard to get through the following day. She hadn't gotten much sleep and not knowing what Al's plans were yet had her in turmoil. When Al picked her up at her apartment later that night she had no idea how to act. She was more nervous than she remembered being on her very first date. He took her to a nice place this time. She'd waited as long as she could. Their waiter had just walked away with their order.\n\n\"Al,\" she anxiously started, \"I...I'm trying to figure out what's going on. The last time we talked you made it pretty clear you had your life in that little town on the coast and you had no intentions of every coming back...and yet here you are.\"\n\n\"Stonington.\"\n\n\"Huh?\"\n\n\"The name of the little town, it's Stonington,\" he said. \"When I got back there I had a lot on my mind-all that about Ralph not being my dad...you; it was a lot to think about. Jack, the captain of the boat I worked on, noticed I wasn't quite myself. We had a talk and...well he kind of convinced me I should see what my life would be like back here. He said if things didn't work out I always had a job waiting for me back there.\"\n\nIt wasn't quite what she was hoping for but it was a start...maybe. She took a deep breath. \"And what about me, Al. Do I figure into your life back here? I have to know. I have to know if there's still a chance for us.\" At that point the world stopped while she waited for his answer.\n\n\"I'm not making any promises, Dawn, but I'd like to give it a try.\"",
        "Instantly, her eyes watered. She grabbed the linen napkin and wiped away the tears that had already streaked her cheeks. \n\nWith all the happy times and love they'd experienced as a couple before, it was in that moment that Al realized how much she loved him and how he loved her back. He reached across the small table and helped wipe away a track of moisture from her face.\n\n\"What about that Brad guy?\" he asked. \"You know he has the hots for you. You looked pretty cozy coming out of the school.\"\n\n\"He's the guy I told you about before. We have lunch together, that's it. He's a nice guy and we talk but we're just friends, Al. We've never even been on a date.\"\n\n\"Okay\u2014just checking. I know he doesn't feel that way. I could see it in his face. I wouldn't doubt if he makes a play for you now. He probably figured he had plenty of time before, but now that I'm back...well, don't be surprised if he gets more aggressive.\"\n\n\"I doubt that'll happen, Al. He didn't even show up for lunch today. Believe me, if he makes any kind of romantic overtures toward me I'll shut him down immediately. I screwed up once, I'm not about to do it again.\"\n\nAs it turned out, Brad was smart enough and cared about her enough to be happy for her. They remained friends and still ate together but he never asked her out again and finally met someone who cared as much for him as he did for her.\n\nAl and Dawn dated for several months until the lease on her apartment was up. They took the next step and rented another place together. A few months after that, Al received his bachelor's degree. It was time.\n\nIt had been just shy of a year since he'd moved back to Chicago. After a cold, snowing Midwest winter, people were finally roaming around with no coats again. It wasn't a gigantic diamond but it was the most beautiful thing Dawn had ever seen in her life. When he actually spoke the words he was shocked that she had one condition...\n\n\"I get to pick where we honeymoon,\" she said with a big smile. \n\n\"Ah, yeah, sure; just, well we'll have to make sure we can afford it. I mean...\"\n\n\"I want to go to Stonington,\" she said.\n\nNot so she noticed but inwardly he was able to breathe again. He was afraid she was talking about the south of France or something. He could smile again. \"Really? Why there?\"\n\n\"I want to meet everyone. I want to meet Coral and Jack and Amelia. I want to eat in Joe's Galley. I want to buy a painting from Coral. I know you love it there. I want to experience it, Al. I want to share with you.\"\n\nWhen Al called Coral to let them know he was bringing his wife she told him to leave the accommodations up to them. Jack and his crew along with some of the gang from Joe's Galley all pitched in and got the newlyweds a beautiful room in the most exclusive bed and breakfast in the area as a wedding present. It sat on the rocky bluffs, overlooking the Atlantic, just a mile north of town. \n\nJust like Al, Dawn immediately fell in love with the place and the people treated her like family. Within two days she regarded Jack as her second father and Coral as the sister she never had. Never could Dawn remember having so much fun crammed into a week; of course a good part of that fun was being able to share it with the man she loved. \n\nIt was their last night. Al held her hand as they walked up the sandy coastline, listening to the pounding surf and watching moonbeams dance along the top of the waves. They found a dry spot of beach and sat down to take it all in. Dawn gazed into the warm night and could swear the man in the moon was looking down on them and smiling. Al put his arm around her as she pressed her body to his and laid her head on his shoulder.\n\nIt was a totally different world than Chicago. \n\n\"You're going to have to make a lot of money,\" she whispered. \n\nAl chuckled. \"That's the plan.\"\n\n\"I want a summer home out here, honey, three bedrooms so there's enough room for the kids.\" \n\n\"The kids? Plural? How many, exactly?\"\n\n\"Of course, kids. Three,\" she answered. \"The girls can share a room but our son will need one of his own.\" \n\nAl didn't say anything; he just let his mind wander. He could almost see them jumping around and laughing as they played in the surf.\n\n\"We'll have to start making babies pretty soon,\" she continued. \"I want them to know their grandpa Jack and aunt Coral. When do you think I'd be able to go off the birth control?\"\n\n\"When was the last time you took a pill?\"\n\n\"This morning,\" she replied.\n\n\"How about if you make it your last one?\"\n\nShe pulled her head from his shoulder and looked him in the eye. \"Really?\"\n\n\"Really,\" he chuckled.\n\nHer eyes sparkled with excitement. \"Then I think we should get back to our room and start practicing immediately.\"\n\nThey had another half a mile to walk so they took the time to enjoy the pounding surf on their way back. When they returned to their room, it was as if the air had been charged with romance. They made love hundreds of times in the past to express their love for one another, but the thought of making a baby added a dimension neither had experienced before. They had already committed to each other at the altar. Now they were committing to bringing another life into the world; a life for which they would be responsible, a life they would raise and nurture with all the love they possessed. \n\nAl took his new wife in his arms as they kissed. Seductively Dawn started unbuttoning his shirt one button at a time. He responded by opening her blouse, undoing the front clasp of her dainty bra, and covering her chest with light kisses. Slowly, they each removed the other's clothing. \n\nAs many times as he'd seen her naked, she'd never looked lovelier than she did at that moment. With almost no effort at all, he picked her up in his arms and gently laid her across the king size bed. \"I love you so much,\" he whispered in her ear before tenderly touching his lips to hers. \n\nAs Al worked his kisses around her neck and continued south, Dawn basked in euphoric dreams of the reality she thought would never come to be. She cried out as her husband's tongue massaged her love button and within minutes, reached a crescendo of erotic pleasures. \n\nAl would have loved to continue his oral tribute but the skin was stretched so tightly over his cock that he was in pain. He moved up and hovered above his beautiful bride. With excitement, she reached between them, took his steal rod, and guided it into its moist, warm home. Slowly Al started to rock up and back, sometimes teasing her by holding himself just inside of her before pushing it all the way in. He held off as long as he could. When Dawn knew he was about to cum, she reached up, wrapped her arms around his neck, pulled him down to her breasts, and held on tight while they both erupted in volcanic passions. It was only the beginning of a magical evening neither would ever forget.\n\nThe next day everyone, including Jack, had tears in their eyes while saying goodbye. \n\n\"We'll be back,\" Dawn told everyone. \"Al has promised to make enough money to buy a summer home out here and I'm holding him to it.\" \n\nEpilogue; \n\nIt took ten years but Al did fulfill his promise and made enough money to buy a three bedroom summer home just outside of town. By that time their three kids, Evangeline, Brianna, and Tyler were old enough to enjoy the ocean breezes, not to mention Grandpa Jack's stories of life on the high seas. \n\nOver the course of their lives, as it is with everyone, the McCain family saw its highs and lows. By the time Dawn retired after thirty years of teaching, all three parents had passed on. Captain Jack also left his trawler behind as he approached the heavenly gates. After decades of loving, nurturing, and guiding, their kids had become prosperous adults with families of their own. \n\nAfter talking it over with the family, Al and Dawn decided to sell the home in Chicago and live out the rest of their days listening to the surf pounding against the rocky shores of New England. \n\nThe End."
    ],
    "authorname": "laptopwriter",
    "tags": [
        "fishing trawler",
        "bike",
        "chicago",
        "new england"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/traveler-1"
}