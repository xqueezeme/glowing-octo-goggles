{
    "title": "Operation: Mailgirl Ch. 02",
    "pages": [
        "Author's Note: As I mentioned in the note to the first chapter, I intend for my Mailgirl tale to be more graphic than ones previously authored. This chapter has the Mailgirl hallmarks of public nudity, exhibitionism and voyeurism, but it also has elements of Non-Consent/Reluctance as well as an explicit sexual encounter. Please consider this your disclaimer if that is not what you are looking for.\n\n***** \n\nClaire had never been a heavy sleeper, but that night she barely slept at all. The events of the previous day had affected her more deeply than she had originally thought they would, and her active mind kept her up most of the night. By 4 AM the next morning, she was already up and getting ready for her second day at Mizutomo Tower, even though her shift didn't actually start for another three hours. \n\nShe had been rattled by the appearance of Sixteen and Mansfield at the end of her day; it didn't take a super spy to figure out that there was something untoward happening. Claire had headed back to her hotel room right after and tried using the resources she had to research whatever she could about where Mansfield could have taken Sixteen, but there was virtually nothing she could find with the level of access she had. She could have appealed to Grimes to allow her to access more restricted information, but there was no way he would have permitted that, not when he needed her focused on the bigger picture at hand. Frustrating as it was, Claire was virtually powerless to do anything for Sixteen and could only hope that the girl was all right.\n\nMansfield was something else entirely. She had dug up everything she could find on him: he was a career businessman who had been born into money, but instead of squandering it like most trust fund babies, he had taken over his family's businesses and increased their profits tenfold. The conglomerates he owned were diverse and far reaching; he had business on almost every continent in the world. He had also spent quite a bit of time in Japan, right when the Mailgirl phenomenon had started and had been involved with it almost from the start. This explained his brazen and careless attitude towards mailgirls. The fact that he had taken Sixteen and likely another mailgirl into his limousine at the end of the workday only cemented Claire's suspicions about him: he was powerful and used to getting his way, no matter what the cost or consequences. \n\nShe laid her outfit for the day on the bed, her normal routine for field assignments. As she reached her hand out to grab the towel hanging just outside the bathroom door, she paused in place, Mistress Henckel's words echoing in her head: All mailgirls are to shower as part of their pre-shift preparation. No exceptions. \n\nClaire felt an involuntary shiver travel up her spine as she stood, examining herself in the mirror hung on the door. She was clad in only an oversized raglan, her preferred sleepwear. Her eyes looked a little puffy due to the relatively short amount of sleep she'd gotten and her blonde hair was disheveled; not only couldn't she sleep, she had also tossed and turned a fair bit. Normally she'd take a brisk shower to wake herself up, but she also had a mandatory one awaiting her once she arrived at Mizutomo Tower. She mulled it over in her head for a few moments before reaching down to pull the shirt over her head, exposing her naked body underneath. She'd likely need a third, maybe even a fourth one before the day was over, so what could her normal morning shower hurt?\n\nBut even as she stepped into the shower and turned on the faucet, she knew that things were quickly becoming a lot less normal by the minute. Nothing about her assignment up until this point could be considered normal, and she knew it had the potential to get much, much worse rather than the other way around. Danger was part of the job working in the clandestine intelligence community, but very few assignments would have left her as exposed as she was in this particular one. And as that realization crossed her mind, she became very acutely aware of something else she had found out during her previous day as a mailgirl: being naked in a public setting had made her wetter than she had been in a long time.\n\nBeing an attractive woman in her mid-twenties, Claire had had her fair share of sexual experiences. She had lost her virginity to her high school boyfriend in their senior year, and had a few more partners during her time in college. The sex had been good and enjoyable, but for the most part, she considered herself fairly mainstream in terms of kinkiness, as the wildest thing from her sex life was the one and only time she had tried anal during her freshman year. \n\nWhich made the fact that Claire had gotten actively aroused during her first day as a mailgirl all the more puzzling to her. The degradation and lewd treatment from the clothed employees at Mizutomo Tower had been even more humiliating than she had expected. As she had hustled from job to job alongside Sixteen, their sweaty, naked breasts bouncing with every step of their bare feet, she had convinced herself that she was surviving the day on sheer will and determination. \n\nAnd then Morten Mansfield had stuck his finger inside of her pussy with almost no resistance at all. \n\nClaire shuddered as she relived the memory of his assault into her most intimate of orifices. It had been unexpected and uninvited, yet the fact that her pussy had all but welcomed his intruding digit caused her to briefly question her own sanity. Did this stuff excite her? Did she really become aroused at the prospect of being molested by a short, balding and completely lecherous businessman?\n\nAs the water dripped from her body, her right hand slid down the flat of her stomach and between her legs, her fingers sliding easily inside of her achingly wet pussy and providing Claire with the answer to her self-posed questions. A moan escaped her lips and reverberated around the bathroom even as she finger-fucked herself with her middle and ring fingers, her palm grinding hard against her mound and brushing up against her clit with every inward stroke. She bit her lip, bracing herself against the cold tile wall, spreading her legs further apart as she continued to masturbate furiously. Her left hand traveled up to twist a sensitive nipple, the slight jolt of pain sending satisfying shivers down her spine.\n\nThe sensible, logical part of her mind screamed at her to cease, to stop giving into the twisted and perverse idea that she got off on the treatment she had received the previous day. It was a fight that she wanted her rational self to win, but any notion of that was quickly lost as she felt the orgasm that had been building up explode throughout her body. She felt her pussy spasm and tighten around her fingers, a new rush of wetness coating them as she withdrew from her aching orifice. She convulsed involuntarily as the pleasurable sensations hit her brain and turned her legs into jelly. \"F-f-f-fuuck,\", she groaned, leaning her head back against the wall of the shower as she rode the last waves of her orgasm out. \n\nDiscipline finally took over, despite the fact she could have easily gotten off again; with some effort she raised herself into a standing position and finished her shower. Grabbing her towel from the rack nearby, she pulled the curtain aside and stepped out into the hazy bathroom. The mirror had fogged up from the steam, so she wiped it clear with her towel before patting herself dry. Something she saw in the mirror gave her pause, however. \n\nThe black \"20\" traced on her left hip had degraded in legibility somewhat, but was still easily readable against her skin. She traced a finger over it, idly debating whether to scrub it off in earnest. She decided against it, however. After all, Mistress Henckel would only write it on her again once she arrived at Mizutomo Tower. For the next few days, it would be the only way most people knew who she was. \n\nBefore she could stop herself, her hand had moved inward again, swiftly finding her clit with practiced ease. \n\n*****\n\nThe elevator doors slid open and Claire stepped out onto the third floor of Mizutomo Tower, colloquially known as the \"Atrium\". She hadn't seen it her first day thanks to Mistress Henckel taking her through the service lift, but now that she had her own badge, she was expected to pass through this section of the building to access the rest of the Tower just like all its other employees. \n\nThe Atrium was a wide, expansive concourse level bearing many similarities to floors she'd seen in other office buildings. It was designed as a central traffic hub, as the many elevator banks on the far end linked the many floors of the tower together. There were concession stands flanking the main thoroughfare, and although Claire was very much tempted to grab a cup of coffee, it would only work against her during her day.\n\nShe found herself looking around to see if there were any naked women running around, even though she knew that mailgirls only serviced floors Four and above in Mizutomo Tower. This was by design; the lobby and lower three floors were designated retail and commercial space. She recalled these facts from the packet she'd received upon starting her assignment; it was tangentially useful information, though she still wasn't sure why the building designers hadn't included elevators which bypassed the Atrium and instead forced all traffic through it.\n\nSomeone brushed past her roughly, bumping forcefully into her right shoulder, nearly causing her to lose her balance. She looked around and spotted a bespectacled, slightly overweight young man in a business suit moving briskly towards an open staircase to the right of the elevator banks. He looked back at her and shouted \"Sorry!\" before bounding up the steps.\n\n\"The way he's moving, you'd think he was late for an important meeting or something.\"\n\nClaire looked to her left. The derisive comment had come from a smartly-dressed businesswoman, who was watching the man with a disgusted look. \"He's not?\" Claire ventured.\n\n\"Nope.\" The businesswoman pointed forward. \"Though I'm sure it's important to him.\"\n\nClaire looked in the indicated direction, following the young man as he climbed up the stairs, which led him not to the next floor, but rather to what appeared to be some sort of pedestrian bridge spanning the width of the Atrium. Gathered in the center of the bridge was a group of people, almost all of them men, from what she could see. They all seemed keenly interested in the windows in front of the bridge; standing room at the railings looked like it was at a premium. \n\n\"What are they all up there for?\" Claire asked, even as her mind tried to work out the answer. \n\nThe other woman chuckled, the sound dripping with sarcasm and absolutely devoid of actual amusement. \"Feeding time at the zoo.\" At Claire's curious and confused look, she elaborated. \"They're all looking into the locker room for those mailgirls. One-way glass gets them a peek at all those sluts fingerbanging themselves into oblivion.\"\n\n\"Oh.\" It was all Claire could offer in response without giving away her actual reaction of shock. She had seen the locker room on her first day, but it had barely been a blur in her memories due to the entirety of what had happened to her yesterday. \"They like watching the mailgirls shower?\" \n\n\"Shower, touch themselves, get whipped by that dominatrix madam of theirs. All part and parcel of the Mailgirl experience.\" The businesswoman looked incredibly unimpressed with the entire notion. \n\nClaire ventured a look upwards as they passed underneath the bridge on the way to the elevators; sure enough, the glass windows opposite the railings were clear enough to show the locker room with about a half dozen mailgirls walking around, most of them already naked and the few that weren't were working on disrobing. Almost all of the men at the railing had their smartphones out, snapping pictures and videos of the sights, some of them leaning far over the railing to try and get the closest view. \n\n\"Pathetic, the lot of them,\" the businesswoman said, shaking her head. \n\n\"Yeah... really,\" Claire agreed even as she reached down to draw the ID badge, which she'd been issued the previous day and was hanging from her blouse into her handbag. The ID badge which not only bore her assumed name, but also her assigned Mailgirl number of \"20\" as well as a full body shot of her, completely naked. \n\n*****\n\nThe digital clock just above the door of the Mailgirl locker room read \"6:58\" as Twenty passed through. She had arrived with plenty of time to spare before her shift started at 8 AM sharp, a cushion which was precious and valuable given the mandatory pre-shift inspection by Mistress Henckel at 7:45 AM. \n\nThe locker room itself was basically a long corridor spanning the entire width of the fourth floor. Twenty had entered from the right side, which meant Mistress Henckel's desk was on the opposite side of the room. The row of open, doorless lockers stretched all along the wall to her right; on the left hand side were showers, toilets and sitting benches. The left side wall was one long mirror, and given her morning encounter, Twenty was fairly sure that she knew what was on the opposite side.\n\nThere were forty total lockers, each numbered sequentially. Being Mailgirl Number Twenty, she naturally had the one right in the middle of the room. There weren't forty total mailgirls (Thirty-One was the highest numbered), but she had no doubt that they would be adding more in the weeks and months to come. She had simply lucked into the next available number.\n\nTwenty did a quick scan of the half dozen other women in the room; most were naked already and the few who weren't were quickly remedying that. Five was a lithe, statuesque blonde (much like Twenty herself) who worked the night shift; she was conversing with Twelve as they both walked towards the showers. They passed by svelte brunette Twenty-Six, who was by herself on one of the long benches, her back pressed against the polished metal, long legs up in the air as she fingered herself with reckless abandon, as if she were in the privacy of her own bedroom rather than an open locker room at the heart of a busy office building.\n\nOpen and public masturbation was one of the many things that had surprised Twenty on her first day as a mailgirl, and seeing it again on her second wasn't any easier. Mistress Henckel hadn't commented on it directly, but she also hadn't explicitly prohibited it, which led Twenty to believe that it was tolerated among the small mailgirl community. And although it shocked her to her very core on first glance, Twenty had to grudgingly admit that allowing the mailgirls to sate their desires in the locker room was a blessed allowance as much as a shrewd business decision, especially now that she was aware of just how much all the other employees in the building were able to see. The mailgirls could relieve themselves after a long day of running between offices completely in the nude, and the employees who watched them got free shows of naked, attractive young women pleasuring themselves.\n\nTo her credit, Twenty-Six was playing her part perfectly. Her face and chest were flushed red, and her skin shone with sweat as she writhed and moaned, oblivious to almost everything except the frantic movement of her hand between her legs. She had ample C-cup breasts with large, perky nipples; her free hand was firmly clamped around one, squeezing and kneading the soft flesh in time with her very audible gasps. In the relative quiet of the locker room, the unmistakable sounds of her fingers entering and exiting her soaked pussy at a frenzied pace served as a complement to the throaty moans escaping her lips. No doubt the onlookers behind the one-way glass were enjoying the show almost as much as she seemed to enjoy giving it. \n\nTwenty eyed tall, willowy Fifteen next to short and petite Seventeen, both girls disrobing at their lockers; they would be on the same shift as she was. Conspicuously empty, however, was the locker between them, the one belonging to Sixteen. She knew that Sixteen was assigned to train her for the week, so the brunette's absence coupled with what she had seen yesterday after work only caused Twenty to worry more. \n\nShe set her handbag down in her locker before taking a few steps towards Fifteen and Seventeen, her fingers already working on undoing the buttons at the front of her blouse. \"Hey, have you seen Sixteen?\" \n\nFifteen straightened up to look at Twenty, having just removed her panties from around her ankles; she stood with only her bra on. \"No, she hasn't been in yet,\" she replied, reaching behind her back with and unclasping the last garment she wore, her D-cup sized breasts spilling into view moments later. \"Haven't seen her since the end of the day yesterday.\"\n\nSeventeen cast a glance at Twenty and was about to say something when an ear-splitting scream of pleasure from Twenty-Six briefly silenced the entire room. They all looked over to where the brunette lay on the bench, her entire body limp and sagging save for her left hand, which still worked back and forth between her legs diligently. \"Yeah, I think she was called away when she finished her shift,\" Seventeen offered after a moment of relative silence. \"Not sure where, but she didn't take any of her things.\"\n\nSure enough, Twenty spotted the neatly folded clothes still laying on the small shelves in Sixteen's locker. On the topmost one, a pair of diamond stud earrings and a small silver necklace sat. \"Is it like her to leave like this?\" she asked, folding her own blouse neatly and setting it aside before reaching for the zipper at the side of her skirt. \n\n\"It isn't the first time she's done this,\" Fifteen stated, pulling off her own earrings. \"Last week she left her things twice during the week. Came back the day after saying she had taken sick.\"\n\nThis took Twenty aback slightly. \"She seemed fine yesterday when she was showing me around. Didn't look like she was feeling under the weather.\"\n\n\"It's not like her to lie about that sort of thing either,\" Seventeen added, grabbing a towel from her locker. \"She's been here longer than I have and I've been here almost two years. Always been punctual and rarely misses a day. Just been within the past few months that we've noticed things like this happening.\"\n\n\"She's supposed to be training you today, right?\" Fifteen asked Twenty.\n\nThe blonde nodded, her mind already trying to process the information her fellow mailgirls had just told her. \"For the rest of the week, as Mistress Henckel said,\" she replied, hooking her thumbs through the sides of her panties and sliding them down her legs. \n\n\"I'm sure if she doesn't show up, Mistress Henckel will assign you a new partner, so I wouldn't worry too much about it,\" Seventeen said.\n\n\"Yeah, I'm sure she will,\" Twenty agreed with a nod, though her thoughts were still preoccupied with what had happened to her partner from the previous day. \"Thanks.\"\n\n\"I'd actually spend more time worrying about passing muster down there,\" Fifteen intoned with a glance down towards Twenty's groin before starting towards the showers.\n\nTwenty caught the veiled nuance in Fifteen's voice, but had to look down before she fully understood what the other mailgirl had meant. Despite having shaven her pussy the previous day, a few stray strands of pubic hair had grown back on her mound, evident enough for a casual observer like Fifteen to notice. And if Fifteen had seen them, there was little chance that they would escape Mistress Henckel's detection. Twenty finished folding her clothes and placing them in her locker before reaching for the small two-blade shaving razor and tube of shaving gel on the top shelf, along with the white terrycloth towel folded up next to the black Lycra armband which housed her MMU. ",
        "Only when she had turned to follow the rest of her nude colleagues to the showers did Twenty realize that she would need to shave herself in front of the mirrors on the opposite side of the room. The same mirrors that were most definitely one-way windows into the mailgirl locker room. She froze in place for a few moments, her mind seemingly unwilling to commit her body to such degradation. \n\nTwenty had always been a driven individual in all aspects of her life, especially in regards to her professional career. That commitment was being sorely tested at the moment, however. Spending one day running around an office building in the nude had been more than enough, but now she had to shave herself in front of what was likely a gaggle of horny, voyeuristic businessmen on the other side of the mirrors. And that was just the start of her day. \n\nPart of her wanted to just drop everything, gather up her clothes and run out the door, never to return. It would be career suicide, but at least she could keep what was left of her dignity. But even as she mulled it over in her head, she felt herself take the first few tentative steps toward the showers. For all her self-doubt and shame in what she was doing, Twenty knew that her stubborn refusal to fail would get the best of her. She had willingly volunteered for the operation, knowing full well what it entailed. And once committed to something, she knew she had to see it through.\n\nAs another of Twenty-Six's lustful exultations pierced the air, Twenty was reminded that there was a part of her that found the entire experience perversely exciting. How else could she explain how wet she had been the previous day, as well as her early morning masturbation session? The former she could attribute to simply \"playing the part\", but it in no way accounted for the latter, which was entirely self-serving. It was this notion that worried her, but she could ill afford to focus on her own self-discovery, not with so much on the line.\n\nShe approached an empty shower stall and placed her towel and shaving items on the bench in front of it. All the showers were open, with no dividers between each stall. The showerheads themselves were suspended vertically from the ceiling, almost giving the impression that the mailgirls were showering in the rain. Twenty suspected that this was likely done for that very reason.\n\nTwisting the silver knob on the wall, she took a step back into the cold stream of water that poured from above, her body shivering involuntarily as the liquid splashed over her skin. There was only one temperature for bathing, and that was ice cold. It served the dual purpose of cooling the mailgirls down after their runs and causing their nipples to stand at attention; Twenty's had already been hard and the water only served to make them even harder. \n\nShe was acutely aware of how she looked, thanks to the mirrored wall in front of her. Having it as a one-way window was a way to give the mailgirls an illusion of privacy, and Twenty suspected that it helped some of them rationalize their jobs. But they all knew that they were being watched; a mailgirl had no privacy while working at Mizutomo Tower. The wall was merely another way of reminding them of that. \n\nHaving showered already that morning, Twenty didn't plan on lingering for too long. She lathered up, running her hands over the curves of her body, from her full breasts, then down to her flat stomach, then lower to her long legs. She felt goosebumps underneath her fingertips from the temperature of the water as she tilted her head backwards to let the stream cascade over her naked form, rinsing the suds away. She had noted that some other mailgirls liked to play up their showers for the audience behind the glass; she knew Five was a few stalls down, ass towards the wall and bent over at the waist. The thought of emulating her colleague sent a shiver up her spine that had nothing to do with the cold water.\n\nFully rinsed, she shut the shower off and took a step back, reaching for the towel on the bench. The small piece of cloth was nowhere near the size of a full bath towel, so Twenty had to use every stitch of it to get herself dry; she suspected that this was likely yet another way to humiliate the mailgirls. As she rubbed the towel over her full breasts, she reflected on just how effective this particular tactic was. Grabbing the rest of her items, she made her way over to a free seat in front of the mirrored wall. \n\nThe locker room was devoid of any other mirrors, forcing the mailgirls to use the wall as their sole source of reflection. For some reason, Mistress Henckel had allowed Twenty to ready herself on her own the previous day; she had done it in the relative safety and privacy of Henckel's office. Now, she would have no such comfort or privacy. The thought caused a shiver to run up her spine.\n\nShe took a seat on the bench, her ass quivering at the touch of cold metal against her skin. Placing her things next to her, she willed herself to look forward at the mirror. In it, she saw only herself, naked and bare. Her still-damp hair framed her face, her delicate features pensive and tense. Her round breasts rose and fell in rhythm with her breathing, which was shallow and a little hurried. She had naturally assumed a traditional pose upon taking her seat, with her long legs joined together at the knees and drawn off to one side. She had the faintest of tan lines around her breasts and pelvic areas. For the briefest of moments she sat there, knowing that behind her reflection stood a gaggle of men, jostling with each other to get the closest look at her unclothed body and waiting for her to show them even more. \n\nShe closed her eyes. In her mind she could see the young businessman who had brushed past her merely half an hour earlier, his boyish face contorted into a leer, lips curled into a lascivious grin as his eyes darted back and forth, searching for her exposed flesh. She also saw the businesswoman, with that haughty and judging stare. Both faces looked upon her, eagerly drinking in as much of her body as they could. \n\nTwenty drew a deep breath and opened her eyes again. Gone were the faces, replaced again by her own reflection. Just get through this. You still have everything to prove, and you've only been here a day. Gritting her teeth, she swung her knees forward to face the mirror, then slowly parted her legs, exposing her silky inner thighs and warm, wet pussy. \n\nReaching for the towel again, she rubbed it between her legs, attempting to get some sort of exfoliation going before she shaved. The cloth rubbed up against her clit, causing involuntary shivers to run through her body. Biting her lip to fight the sensations, she put the cloth aside and grabbed the gel canister. She emptied a decent amount onto her fingertips, then slid it over the faint hairs on her mound and around the sides of her outer lips. Taking the razor up, she touched it gingerly to her skin and began shaving.\n\nIt was something she'd done countless times before, given her background in collegiate swimming. But she had never done it before for an audience, and certainly not one as public as the entire third floor of a major corporate office building. A week ago, it would have been unthinkable to be doing something like this; yet here she was, shaving her pussy while dozens upon dozens of men watched her from behind a glass barrier.\n\nLetting out an involuntary sigh as she drew the last stroke across her skin, she wiped herself down with the towel, then spread her legs a bit wider to make sure she got every bit of hair. Her pussy glistened under the harsh fluorescent light, her delicate pink folds slightly puffy from the friction and warmth. She scooted her backside forward an inch or two to examine her asshole; Mistress Henckel had insisted on bleaching it clean and she had no choice in the matter. It had burned exquisitely; she had never thought such pain would befall that particular part of her anatomy, not even the one time she had adventurously tried anal in college. However, Sixteen had told her the consequences for not following the hairless policy of the mailgirls, and Twenty had no desire to experience those firsthand. \n\n\"Giving everyone out there a show?\" \n\nThe comment startled Twenty to the point she almost dropped her towel, but she recovered her senses long enough to hold on. Turning her head to look upwards at the speaker, she saw the tanned, trim form of Mailgirl Seven's naked body. \n\nSeven was the only redhead among the Mizutomo Tower mailgirls and had been one of the original ten recruits to the program. She was on the short side at five foot three, but her body was well proportioned and suited to running. Her firm C-cup breasts fit her frame nicely and she had a pleasant face, which currently wore an amused expression. \n\n\"I don't think I have a choice,\" Twenty replied with a resigned sigh. \n\n\"Isn't that the truth,\" Seven agreed, inspecting herself in the mirror. \"It's only your second day, you'll get used to it.\"\n\nTwenty wasn't sure it was something she wanted to get used to, but she didn't voice that to her colleague. She ran her hand one last time over her pussy; she was pleased at the smooth touch, but slightly perturbed at the wetness some of her fingers came away with after dipping slightly between the folds of her labia. \"You're on the day shift too?\" she asked Seven.\n\nSeven nodded; she was bending over to stretch out, her back now to the mirror. \"Yeah. Mistress Henckel has assigned me to shadow you today.\"\n\nThis caused Twenty to stop short. \"She has? I mean... I thought I was assigned to shadow Sixteen for the week.\"\n\nThe other mailgirl seemed nonplussed; she was more focused on stretching her arms above her head, defining the muscles in her back. \"I don't think Sixteen will be in today. And Mistress Henckel seems to think you need guidance; guess you're training went well enough yesterday.\"\n\nTwenty arched a brow, regarding the redhead with a dubious look. \"I wouldn't say it went 'well', per se,\" she admitted. \"I don't think I even know all the positions yet. And I'm not nearly as familiar with the layout of the building as I'd like to be.\"\n\n\"Oh don't worry, you'll still have me, I'll make sure we get to where we need to be on time,\" Seven assured Twenty. \"You'll be taken off probationary status; just means that you're fully searchable to the company for requests, rather than being tied to one of us.\" She favored the blonde with a small smile, one which only seemed half-real. \"Guess this means for today you're truly one of us. Welcome to the club.\"\n\n\"Thanks,\" Twenty said, unable to keep the hesitance and uncertainty from her voice over the information she'd just received. The whole thing felt off and she couldn't help feeling like there was something behind the scenes. \"Is Mistress Henckel here already? I didn't see her come in.\"\n\n\"Yeah, she's here, just hasn't come down for morning inspections yet. Pulled me aside to let me know what was happening today.\" Seven finished stretching and settled her hands on her hips, her fingers lightly brushing the freshly-inscribed \"7\" on her skin. \n\n\"Did she happen to say why Sixteen might not be in?\" Twenty inquired, her mind racing to figure out the reasons. \n\n\"No, and I didn't think to ask. Didn't really want to get the whip for being too curious, you know?\" Seven tilted her head to stare at Twenty. \"Why so interested?\"\n\nTwenty briefly thought about telling Seven what she'd seen the previous day with Mansfield leading Seven and what appeared to be another mailgirl into a waiting limousine. She decided against it, something about the redhead's almost cavalier attitude rubbed her the wrong way. \"No, I was just wondering. It'll be good to work with you today.\"\n\nSeven looked like she was about to say something in response when a chime went off; the clock on the wall displayed \"7:30\". Fifteen minutes until mandatory morning inspection; it would be the only warning the mailgirls would get before Mistress Henckel came down. \"Well, here's to having a good day,\" she said with another half smile before heading off to her locker. \n\n\"Yeah, hope so,\" Twenty responded with more enthusiasm than she felt, watching Seven's bare backside as the redhead walked away. Despite the fact that she was completely naked in the middle of a room along with a dozen other nude women, Twenty was still a CIA-trained agent; her training as well as her instincts told her something was seriously amiss. Her encounter with Mansfield the previous day along with Sixteen's absence didn't feel above board in the slightest. And while she wanted nothing more to throw her clothes back on and start asking pointed questions, she knew to do so would likely cause a lot more problems than it would solve. So there was little else she could do except serve her shift as a naked mailgirl, keeping her eyes and ears open for any clues. \n\n*****\n\nThe morning passed uneventfully. On its face, the task of a Mailgirl was fairly straightforward: deliver interoffice correspondence. It was the addition of the enforced nudity as well as the promise of timely service that made the job unlike anything Twenty had ever done before. During her run with Sixteen the previous day, they had been able to complete most of their assignments within the ascribed time frame, but there had been a few instances when they had been late. Twenty had noticed the MMU on Sixteen's arm flash red when that happened. The younger girl had explained that she had received a demerit: a mark against her record. Accumulate enough of them and punishment would be meted out. Sixteen hadn't been forthcoming on what the punishment was, but Twenty had a few ideas. \n\nTwenty had been a collegiate athlete and her agency training kept her in good physical condition, so the constant running came easily enough to her. However, running around naked in a crowded office building wasn't quite the same as exercising in the gym. For one, her large D-cup breasts were usually encased in a sports bra when she ran, however in her Mailgirl uniform, they bounced freely with each step she took, meaning she could only move so fast before it became painful. That, coupled with the fact that some of her jobs could literally be dozens of floors apart meant she was more than likely to accrue her fair share of demerits based on time and statistics alone. And unlike yesterday when Sixteen had been her trainer and primary mailgirl in their partnership, Twenty was the lead in her pairing with Seven. Meaning she would receive the demerits to her MMU should they be late to any assigned task.\n\nIt was around two o'clock in the afternoon when they stepped into an elevator bound for the upper floors of the Tower. They had just finished a premium rush job which had taken them through several departments carrying crates full of documents. As Twenty assumed the 'Feet' position near the back wall of the elevator, she noted how much her arms ached. She was also breathing a little heavier than usual, and there was a fairly noticeable sheen of perspiration covering her body. She chanced a glance downward; sure enough, a rivulet of sweat was making its way down her collarbone into the valley between her breasts. Straightening up, she noticed Seven was in a similar state; her redheaded colleague's naked form glistened in the harsh fluorescent light. As the elevator made its ascent, the only sounds beyond the low mechanical humming were the breaths Twenty and Seven were drawing in and out. \n\nMailgirl code stated that all naked couriers were to keep themselves as clean as possible, and most of them were able to meet that standard during the course of their daily duties. They were allowed a lunch break, which all of them used to shower and eat their rations for the day. Most mailgirls also took at least a few minutes to relieve themselves, both in the biological sense and in the sexual sense. Twenty and Seven had walked into the locker room to the sounds of no less than three mailgirls pleasuring themselves in the shower stalls, their cries reverberating off the tile and glass. The nature of their work brought out the exhibitionist in all of them, and even though it was only her second day on the job, Twenty couldn't help but see the benefit in allowing the girls a modicum of relief. She herself had resisted, opting only to shower and eat during her break, but she couldn't suppress the stirrings in between her legs as she watched her naked coworkers bring themselves to orgasm around her. \n\nThat had been an hour ago, before she and Seven had taken on their latest job which had left them sweating and in need of another shower. However, before they could find a respite, they had been summoned to another job on the seventy-fifth floor of the Tower. Both stunk of sweat and pussy, a smell that Twenty was swiftly becoming accustomed to, but they had no choice but to head straight for their next assignment or risk receiving demerits. Any other floor, they might have had the opportunity to sneak down to the locker room for a quick rinse, but as Seven told it, when a summons came down from the seventy-fifth floor, it was to be heeded immediately. \n\nTwenty was curious as to why calls from that floor were so important, but she thought better of asking her current partner. Seven was a consummate mailgirl and did her job well, explaining different aspects of the job to Twenty as they encountered them during the course of their day. However, she was unwilling to divulge any more information than was absolutely necessary, a fact which frustrated Twenty. Every pointed question about Sixteen or Mansfield fell on deaf ears and brought about an immediate change in topic. Seven's uncooperative nature didn't surprise Twenty, but it annoy her. \n\nThe elevator slowed as it approached the twenty-fifth floor. Twenty felt herself involuntarily tense up, but suppressed it as best she could and kept her body rigid in the 'Feet' position as the doors opened. Four men in business suits entered, their eyes appraising the two naked women almost immediately. \n\nTwenty did her best to stay at attention, even as she felt the gazes of the men raking over her bare body. Despite having been ogled for almost two full days, something about being gawked at by fully clothed men in close proximity was still incredibly foreign. \n\nAnd, as evidenced by the dampness of her pussy, strangely arousing.\n\nAs the newest mailgirl in Mizutomo Tower, Twenty always drew the attention of the male employees upon first sight; in addition to being unfamiliar to them, she was easily one of the most physically attractive specimens in the program. She hadn't come from the ranks of the female staff who worked clothed in the Tower, so none of them had any idea what she looked like clothed, and she knew that a majority of them preferred it that way. \n\nThe elevator doors closed and it began its ascent anew. The space inside was large enough to accommodate up to fifteen people, but all four of the men chose to stand right in front of both Seven and Twenty. None of them said anything at first, instead spending the initial few seconds brazenly staring at the mailgirls' naked bodies. \n\nAt last, one of the men broke the silence. \"Twenty, I don't think I've seen you here before. Are you new?\"\n\nTwenty had been staring at the ground next to one of their polished shoes, and she resisted the urge to raise her head and meet her questioner in the eyes. \"Yes, sir. My first day was yesterday.\"\n\n\"Mm, you are going to fit right in here, I can see that,\" the second man chimed in, blowing a low whistle as he leaned in for a closer look at her face. \n\n\"Got something right here I'd like to fit in her,\" the third man proclaimed, grabbing the front of his pants with a laugh and eliciting chuckles of agreement from his colleagues. ",
        "Out of the corner of her eye, Twenty could see Seven roll her eyes in bemusement. Sexual contact of any kind with mailgirls was prohibited at Mizutomo Tower, but employees were free to impose as much verbal abuse and harassment as they wanted. Twenty estimated that in the one and a half days she'd been working there, no less than twelve men had told her that they wanted to fuck her, one for every hour of her employment. Just that morning, a particularly bold product manager had described in obscene detail just what he would do to each of her holes if given the opportunity. In any other work environment, she would have had him reprimanded and disciplined, possibly even terminated. But at Mizutomo Tower, all she could do was nod and say, \"Thank you, sir.\"\n\nThe fourth man, who had been alternating his gaze between Seven's breasts and Twenty's, finally spoke up. \"What are your sizes?\" he asked. \n\nSeven stood a little straighter, pushing her chest out as much as she could. \"These are 34Cs, sir,\" she responded, with a brief glance at his face.\n\nFor the longest time, Twenty had been self-conscious about her breasts. They had grown in when she was fourteen and in the ninth grade. Dealing with having such a large chest at a young age proved harrowing, and for a time she considered them getting reduced because of all the attention they drew. In the end, she'd decided against it and was pleased with her decision. They were natural and they were hers. And despite herself, she found a small sense of pride even as she endured the humiliation of being a mailgirl. \"They're 32Ds, sir,\" she informed the man who asked, her voice quiet but firm. \n\nThe first man let out a low whistle, his eyes still locked on Twenty's rack. The third man, clearly the most forward and instigatory of the group, took a step towards her, to where he was close enough that she could smell both his cheap cologne and the sweat clinging to his brow. Despite the running air conditioning in the elevator, Twenty quickly became aware of just how hot it had become. Both Twenty and Seven's bodies were naked and sweating, but more importantly, their pussies were soaked from arousal. And everyone in that tight enclosed space could smell it. \n\nTwenty had always taken pride in her hygiene, but working as a mailgirl had literally stripped her of almost every method of keeping herself fresh. Between perspiring from being on the move the whole day and the lubrication her pussy produced upon becoming aroused, the two showers she had taken earlier in the day might as well have counted for naught. \n\n\"You know, we could give you demerits for the state of your... uniforms,\" the third man said, his face inches from Twenty's, an evil glint in his eyes. \"What do you say to that?\"\n\nIt wasn't the first time Twenty had been threatened in her professional life; being a woman in her chosen field meant that threats were an unfortunate part of the package. However, this situation was decidedly different from the offices at Langley. She resisted turning her eyes up at the man and instead looked over at Seven for guidance.\n\nThe other mailgirl seemed less worried than Twenty with the situation, but she did meet the blonde's gaze for the briefest of moments. \"If you deem it necessary, sir...\"\n\nTwenty recalled Sixteen telling her the threshold for accrued demerits before punitive action was seven. It seemed like an arbitrary number, and Twenty hadn't questioned it. She had, however asked Sixteen what the punishment for reaching that number was; the other mailgirl was less forthcoming with that information. Mistress Henckel had made reference to it in passing, stating that when it came time, Twenty would find out for herself just what seven demerits entailed. During her brief time at Mizutomo Tower, her MMU had recorded three demerits, all for delivery-time related issues. Sixteen, as the training mailgirl, had received the same amount, but Twenty was unsure how many the brunette had started with...\n\nA dark realization formed in her head, and she had to physically restrain herself from gasping. What if what she had witnessed yesterday was the result of Sixteen receiving a seventh demerit? Was she responsible for Sixteen's disappearance? The thought made her sick to her stomach and she involuntarily reached a hand back to press against the wall of the elevator to steady herself. Her training took over and helped her suppress sudden nausea, but as she cleared her head she realized that the four men in front of her could each give her a demerit and bring her to seven total. \n\nThe second man had noticed her discomfort as well as the number displayed on her MMU. \"Wouldn't look good for you on your second day on the job to get your seventh demerit, would it Twenty?\" Before she could respond, he looked over at Seven. \"How many do you have?\"\n\n\"One, sir,\" Seven responded, her voice cracking slightly. \n\n\"Might have a deal we can make here, then,\" the third man said, moving back towards the elevator panel. The floor indicator had just flicked to \"56\" when he slapped the red \"EMERGENCY STOP\" button. The elevator shuddered, then jolted to a stop. A low, keening beeping noise started up, reverberating throughout the small space. \"We've got about two minutes.\"\n\nThe second man pulled a handkerchief from his suit pocket and tossed it on top of the small surveillance camera in the corner of the elevator before turning back to the two naked mailgirls. \"If the two of you don't want to get demerits, you'll do exactly what we say, capisce?\"\n\nTwenty had caught herself observing their actions, but as the second man spoke she averted her eyes down to the floor again. She feared what would happen next, but she honestly did not see a way out of whatever the men were going to do to them. \"Y-yes, sir...\" she replied, hearing Seven utter similar consent. \n\n\"And not a fucking word of this to anyone,\" the third man warned, the venom dripping from his voice. \"Got it?\"\n\nDespite the alarm bells ringing in her head, Twenty forced herself to grind out another \"Yes, sir\" with Seven echoing her moments after.\n\nThe second man nodded, seemingly satisfied with the mailgirls' responses. \"Good. Twenty, take a step forward and lock your hands behind your head. And close your eyes.\"\n\nTrembling, Twenty did as she was told even as she heard the first and fourth man instruct Seven to turn and face the wall. She had barely gotten her fingers laced together at the nape of her neck when she felt the first pair of hands grab her breasts. This caused her to jump slightly in surprise and she had to bite her bottom lip to keep still and quiet. She felt the hands knead and fondle her breasts, and despite herself, she felt her nipples stiffen up even further at the attention. Whichever man was squeezing them noticed, because the next thing she felt was a tug and a twist on her left nipple, sending shocks of pain through her chest. \n\n\"These are so soft and natural, damn.\" That was the voice of the second man, identifying himself as the one groping her breasts. \n\n\"Pretty sure that's a requirement for these bimbos,\" replied the voice of the third man. Both of them were still in front of her as far as she could tell, and she wondered with trepidation where the third man's hands were. \n\nHer concerns were answered moments later when she felt two large fingers glide over her well-lubricated labia, then push themselves into her drenched pussy with a wet squelch. She gasped, her body involuntarily drawing away from the intruding digits. \n\n\"Hey, no moving,\" the third man growled, his fingers sliding deeper into her vaginal orifice. \"Hell, you should be thanking us. We're gonna help you get off.\"\n\nDespite the man's clumsy attempts to fingerfuck her, there was some truth to his words, as she felt the walls of her pussy contract around his fingers in response to his thrusting them in and out of her. As his goal was not to help with her own pleasure, but rather satisfy his own perverted desires, she wasn't going to reach orgasm, no matter how wet she currently was. The only thing she could do was endure the assault.\n\nHer Agency training had prepared her to withstand a variety of hostage situations. Some were almost extreme in methodology, and she had the remnants of bruises and scars as souvenirs. Yet none of them had gone to the extreme that she was currently experiencing. The rational part of her mind screamed at her to fight back, to stop the abuse and hurt these men who were violating her body. Two days ago, if a man had laid a hand on her, she would have broken the offending limb three different ways. Yet here she was, standing naked in an elevator with her eyes closed as a pair of strangers used her body for their pleasure. \n\nTwenty was fairly certain that what they were doing was illegal under the rules set forth for mailgirls, but given her experiences from the previous day, she had the feeling that things like this happened more often than not and simply went unreported, or worse yet, ignored. Grimes had assured her that her time at Mizutomo Tower would be safe and controlled, but this wasn't the first time an assignment had deviated from his promises. She told herself if it wasn't such an important operation, she could have pulled out of it completely and told Grimes and the Agency to shove it. But for now, she was committed and she had to see it through.\n\nBesides, this was easier than admitting to herself that she found being a naked mailgirl in a building full of lustful, ogling men arousing on a basic, carnal level. \n\nAn electronic buzzing noise snapped her out of her thoughts and back to the present. The hands on her body paused as a voice filled the elevator, seemingly coming from the overhead speakers.\n\n\"Elevator Eleven, this is Maintenance, is everything all right in there? We show you stuck.\" \n\n\"Ah, yes, we accidentally hit the emergency stop button, no worries,\" the fourth man's voice answered. \"Couldn't figure out how to get it moving at first, but I think we're all good now.\"\n\n\"Gotcha. For some reason, the camera doesn't seem to be working, so we just wanted to be verify your status.\" \n\nTwenty wondered if anyone actually took the time to review the surveillance footage; they would have seen the handkerchief placed over the camera lens. In the end it wouldn't have mattered, however, as it was the mailgirls' word against four male employees with no definitive visual proof of what they had done. Sure, the cover-up of the camera would look completely suspicious, but it had done its job. \n\nThe fingers in her pussy finally stopped their thrusting and she felt the third man withdraw his drenched hand. She wondered what he would do to clean up; she had her answer when she felt him wipe her juices off on the skin of her hip. The man working on her breasts gave her stiff nipples one final tug before stepping away. \n\n\"Back to 'Feet' position, the both of you.\" \n\nTwenty obliged, but she refrained from opening her eyes as she had not been given permission to do so. Her pussy ached from the abuse she had just suffered; the man had not been gentle. For all his thrusting in and out of her, he had left her clit unattended, denying her from even coming close to release. \n\nShe felt the elevator hum to life again as it began its ascent anew. She heard nothing from either the men or her fellow mailgirl and was sorely tempted to open her eyes, but she kept them closed even as the elevator slowed again. She heard the doors open and felt the slight breeze of the air waft over her bare skin, causing her to shiver involuntarily. A few seconds passed before she heard the doors close again, and the elevator begin to rise. \n\nIt was still quiet, and Twenty's curiosity got the better of her. \"Sir? May I open my eyes?\"\n\nThere was no response.\n\nThis confused her. \"Seven?\" \n\nNothing but the subdued humming of the elevator answered her back. \n\nTwenty finally opened her eyes to see that she was alone. The men were gone, having disembarked on the previous stop, but Seven was supposed to come with her. Her coworker's absence was alarming, but as she watched the floor numbers tick closer to \"75\", she knew that there was nothing she could do about it. She checked her MMU to see that the red number indicating how many demerits she had accrued was now up to four; the men hadn't added any additional demerits, but she had received one for being late to her current job. The brief encounter in the elevator had added extra minutes onto an already tight time window, and if she was going to make it without further marks, she would have to hurry.\n\n*****\n\n\"You're late, Twenty.\"\n\nTwenty had barely gotten into the Knees position in the cavernous office when her summoner had spoken from behind the desk at the far end of the room. His voice was familiar, but she couldn't quite place it and his chair was turned away from her. \"I-I'm sorry, sir.\"\n\n\"Care to explain why?\"\n\nShe briefly entertained the idea of telling him the truth. The latest assault had left her rattled, but she knew she wasn't likely to find a sympathetic ear among the male employees at Mizutomo Tower. \"My last assignment ran over, sir. I apologize again for being tardy.\"\n\nThe man was silent for a few moments. \"Wasn't elevator trouble, was it?\" \n\nA bead of sweat slid down her temple before dropping onto a heaving breast. What was with this line of questioning? Twenty thought to herself, wiping perspiration from her face with the back of her hand. She hadn't taken any time to compose herself before arriving to her destination, but now she wished she had. She was likely to get a demerit either way, but at least she could have tried to clean herself up. As it was, she was covered in sweat, her hair was clumsily tousled and her pussy was soaked. \"It did get hung up for a minute or two as I was ascending, sir.\"\n\n\"Is that so? Well, then I think it is hardly fair to charge you for something that was out of your control, don't you think?\"\n\nSomething about the whole exchange rubbed Twenty the wrong way, but she could do little except offer a puzzled \"Sir?\" in reply. \n\nThe chair finally swiveled around. \"Do you agree?\" Cash asked again, revealing himself as the speaker. \n\n\"Y-yes,\" Twenty stammered, slightly taken aback. Had he remembered her from the previous day? And if so, did he summon her specifically?\n\nCash chuckled as he stood up. He was dressed in an expensive looking suit that fit his tall frame well, which only served to remind Twenty even further that she wasn't wearing anything at all. She knew to avert her gaze, but even so, she could track his movements with her peripheral vision as he walked towards her. He had a little swagger in his gait that spoke to a well-cultivated self-assuredness. Despite herself, she realized that she was not only evaluating him as a potential threat, but as a man as well. \n\n\"I thought you might,\" he said, coming to a stop just in front of her while she tried very hard to focus on a spot on the carpet behind him. \"Do you know why I summoned you here?\"\n\n\"You need to have something couriered, sir?\" she asked, acutely aware of how hard her heart was pounding in her chest.\n\n\"Not quite. If I did, I'd have one of the other mailgirls in the area do it, not one coming from over forty stories down.\" He crouched down, putting him almost at eye level with Twenty. \"No, I summoned you here because I think we can help each other, Twenty. Or should I say, Agent Claire Holliday?\"\n\nShe felt as if she'd been struck by lightning at his use of her real name. Abandoning protocol, she jerked her head up to meet his gaze, a look of startled incredulity crossing her delicate features. \"W-what? How?\"\n\nHe grinned at her and shrugged. \"You're not the only agency running an op in this building.\"\n\nThe reality of it hit her like a ton of bricks. \"I can't believe... it can't be. Who are you with? NSA? DHS? Why are you here?\"\n\nCash raised his hand to forestall any further queries. \"We'll get to that, Agent Holliday. Just know that we've been here longer than you have.\" He allowed himself a glance down at her naked body. \"Gotta say though, never thought the CIA would have the stones to send one of their own as a mailgirl.\"\n\nTwenty was acutely aware that she was completely nude in front of someone who appeared to be a fellow federal agent and the paradoxical urge to cover herself almost overrode her discipline. Instead, she balled her fists behind her back. \"How do I know I can trust you?\" \n\nHe sighed, reaching into his pocket and producing a golden badge. \"Satisfied?\"\n\nShe'd seen enough badges in her career to know that the gold Federal Bureau of Investigation insignia he carried was legitimate. \"You're Bureau. What's the play here?\"\n\nCash stood up, towering over her. \"After what you saw yesterday, you can probably venture a guess.\"\n\nIt clicked in her head after a couple of seconds. \"Mansfield,\" she breathed. \"You're going after him. Human trafficking?\" \n\nHe nodded. \"Something like that. Damn near untraceable though. Great at covering up his tracks and we've run into a wall. That is, until you came along.\"\n\nTwenty blinked, then grimaced as realized the potential implications. \"You want him to take me? Like they took Sixteen?\"\n\n\"Too risky. Besides, don't think the Agency would take it real well if we jeopardized you. We've got something else in mind.\" He took a step back, his eyes fixed on her exposed breasts. \"Will definitely make use of your assets.\"\n\nShe bit back the retort that threatened to escape her lips. \"What do you need me to do?\"\n\n\"We have to impede part of his operation. Going after one of the weaker links in his scheme and getting them to flip for us will be key. To do that, we need leverage.\"\n\nTwenty knew how to read between the lines. \"You need blackmail,\" she reasoned. \"Jesus.\"\n\n\"You can say no, if you want,\" Cash offered with a shrug. \"But by the time we get close enough to Mansfield to take him down, Sixteen might already be lost forever.\"\n\nGoddammit, she swore to herself. Cash was playing dirty and that didn't sit well with her, but she didn't see any other alternative. \"How does this help me?\"\n\n\"I've seen the intel on your op. Let's just say that whatever you're getting into in the Emirate will make what's going on here look like a walk in the park. Better start getting used to really stepping out of your comfort zone.\"\n\nShe allowed herself a small, exasperated sigh. Running into another undercover investigation was the last thing she expected to happen, but she had been given a chance make something of it. And it wasn't like her to waste those. \"When do we start?\"\n\n\"Just so happens we have an opportunity at this very moment. You happen to be just the type for one of Mansfield's accountants. Give us leverage on him.\" \n\n\"Won't I get demerits for this? I still have a couple of hours left in my shift.\"\n\n\"The beauty of my cover is that I have an executive-level supply of credits,\" Cash informed her. \n\nTwenty swallowed hard. \"How far do I have to go?\"\n\nCash favored her with a wry expression. \"You know the rules regarding Mailgirls. Play the part. Compromise him. The more, the better. And don't worry, I'll be watching and making sure things don't get too out of control.\"\n\nShe was sure that wasn't the only reason he was going to be watching. \"And you'll be recording all of this?\"\n\n\"Don't worry. Whatever's recorded is only to be used as leverage on our target. Black boxed as soon as we get what we need.\" \n\nThe lengths she had to go through to advance her career. \"Fine. There isn't much time. Let's get this done.\"\n\n*****\n\nTwenty didn't like being used. \n\nThroughout her career, she had always fought an uphill battle against being marginalized and passed over. She had known this going into it, and had always sought to prove her doubters wrong with her work ethic and drive to succeed. But if there was one thing she despised, it was being treated like her appearance was her only valuable asset. She had never refused an assignment where her looks were clearly being used, but it still ate at her. ",
        "So being asked to use her very naked body as bait to trap a potential source of information marked a new low in her professional life. But as she writhed against the polished wooden conference table on all fours, ass up in the air as she drove two fingers in and out of her pussy, she found that, for a few fleeting moments, she almost didn't mind. \n\nThe door to the small, darkened conference room creaked open behind her, and Twenty forced herself to slow her masturbating long enough to crane her head back. \"Ohhh...\" she moaned softly, half in arousal, half in surprise.\n\nStanding there with a wide-eyed expression was the young businessman who had bumped past her that very morning. Cash had told her his name was Wendell. Wendell Ross. His rounded face flushed a deep crimson as his eyes went wide at the spectacle before him. Twenty was perched on the table in front of him in all her naked glory, her shaven pussy glistening pinkly in the dim light as she pleasured herself. \n\nAs masturbation wasn't allowed when a mailgirl was on duty, Twenty was in a compromising position in more ways than one. It had been Cash's idea, however, to give their quarry a sense of being in control, which is why he had Twenty set the bait in such a fashion. It was up to her to flip the odds in their favor.\n\nWith a bit of reluctance, she extracted her fingers from inside of herself and twisted herself around, her ample bosom coming into view as she slid off the table and onto the floor. Her hand was still coated in her juices, so she wiped the wetness off as best as she could onto her thigh as she adopted the Knees position. \"I-I'm sorry, sir,\" she said with a shuddering breath, casting her eyes down at his feet. \"I thought this room was empty...\"\n\nWendell pushed his thick-rimmed glasses up onto the bridge of his nose, his eyes still drinking in every inch of Twenty's sculpted body. \"You-you're not supposed to be in here,\" he stammered. \"You're not supposed to be doing that.\" \n\n\"I know, but I just couldn't help myself, sir. I had to get off otherwise I was going to go crazy.\" Twenty reflected just how there was more than just a little bit of truth to that statement. \"Please don't give me a demerit, I can't afford another one, sir.\"\n\n\"I have to, company rules.\" Wendell's words were matter-of-fact, but his tone was slightly lacking in conviction. \n\nIt was this Twenty had to seize. She craned her head upward and met his gaze, another direct violation of mailgirl code. She could see the perspiration starting to form on his brow and the red flush in the skin of his face. \"Please, sir,\" she pleaded again. \"I'll do anything...\"\n\n\"Anything?\" Wendell echoed, fists clenching and opening as he debated with himself. \n\nShe tipped her chin up slightly and thrust her ample chest out a bit further, her nipples standing to attention. \"Yes, anything,\" she confirmed, biting her lower lip. \"The camera in this room is out, so I thought I would have some time...\"\n\nWendell looked up at the small, dormant surveillance camera in the corner of the small conference room. Sure enough, the small red light which indicated recording was off. \"You've done this before, Twenty?\" he asked as he stepped toward the camera to orient the lens away from the center of the room; clearly he still somewhat paranoid. \n\n\"Just once, sir,\" she lied. Truth was, Cash had set up the room; while the small camera was off, there were at least two other cameras hidden, recording their actions. He hadn't shown Twenty where they were, lest she look directly at them on accident and tip off their quarry. \n\n\"You know that's also against the rules,\" Wendell said, tossing his satchel onto the ground as he reached behind him to lock the door to the conference room, his first outward indications he was becoming more comfortable with the situation. \"You couldn't wait until your break?\"\n\nShe shook her head. \"I needed it, sir.\" Again, not that far from the truth as her pussy ached between her legs. \n\nHe stepped toward her tentatively, almost as if he expected someone to jump out of the shadows and catch him in a darkened conference room with a kneeling, naked and obviously aroused mailgirl. \"You've only been here very recently,\" he stated. \"I know most of the mailgirls by number and I definitely would have remembered you.\"\n\n\"This is my second day here, sir,\" Twenty admitted, still looking up at him. He was being cautious and she knew there wasn't a lot of time to do what was needed. \"I've heard what happens to mailgirls who go over the demerit limit and I-I don't want that.\" \n\nWendell came to a stop in front of her, his crotch mere inches from her face. He was trembling, and she could clearly see the outline of his erection through the thin material. \"Well Twenty, as I have a meeting in fifteen minutes, you have ten of those to convince me not to give you demerits.\"\n\nTwenty inhaled deeply, mentally steeling herself for what was to come next. Unclasping her hands from behind her back, she reached up to undo his belt buckle and unzip the front of his pants. Reaching inside, her fingers found the hard shaft of his cock which she guided through the hole in his boxers and out into the open. It wasn't the largest she'd ever seen or handled, but it also wasn't the smallest. Stroking his meat with both hands, she leaned her head forward, darting her tongue out to lick the engorged tip. \n\nHe groaned loudly, his hips thrusting slightly forward as ripples of pleasure coursed through his body. \"Yeah... fucking do it...\"\n\nDipping her head even further, she wrapped her lips around the head of his cock and sucked hard, her tongue teasing and probing the sensitive slit in the middle. Her efforts were rewarded as she tasted the first bit of pre-cum leaking from the tip, so she guided more and more of him into her mouth until his entire shaft was buried to the hilt. Hearing him grunt again in pleasure, she pushed away from him, his cock slipping out of her mouth, coated in her saliva. She caught her breath, looking up at his face for direction.\n\nHis only answer was to thrust his hips forward, his member pushing past her parted lips again. She gripped the base of his slick cock with one hand and moved it back and forth as she suckled on the head, her tongue swirling around the sensitive skin. Her free hand snaked down her body, tweaking a sweaty nipple before running down her stomach to between her legs. She slid a pair of fingers into her soaked pussy, her palm grazing over her throbbing clit and causing her to moan in pleasure.\n\nThe rational part of her mind screamed at her to stop what she was doing, to cease letting her body be used for what was basically blackmail pornography at this point. Surely Cash had enough footage to nail Wendell into doing what they needed him to do. But even as her mind raced, her body continued of its own accord, her mouth greedily sucking Wendell's cock and her fingers sliding in and out of her well-lubricated sex. \n\nShe felt a hand at the back of her head pull her mouth away for a second time, so she looked up at him again, her lips and chin dripping with a mixture of saliva and pre-cum. \"Sir?\" she asked quietly, her voice husky from the blowjob.\n\n\"I wanna fuck you,\" Wendell breathed, pointing at the conference room table. \"Get over there and lie down. Spread your legs.\"\n\nTwo days ago, the entire situation she was in would have been unthinkable. Yet here she was, ready to let a complete stranger fuck her. \"Yes, sir.\" Rising from the floor and walking over to the table, she sat near the edge and leaned backward while spreading her long legs, completely exposing her shaven sex to him. \n\nHe stepped toward her, his cock jutting out from his pants. \"God Twenty, you have a beautiful pussy,\" he whispered as he positioned himself between her legs, teasing the head of his cock against her soft pink outer lips.\n\nTwenty shuddered in anticipation, but managed a \"Thank you, sir,\" before he plunged his cock into her waiting pussy and started thrusting in earnest. She felt every inch of his cock as he fucked her, her slick pussy walls clinging to his hardened shaft. \"Oh God, yes...\" she whispered under her breath, pleasurable, erotic sensations coursing through her body.\n\nShe felt Wendell's mouth on her left breast, the feel of his teeth on her nipple sending electric shocks of pain through her nerves. His breath was hot against her skin as she felt his hands slide down to grip her ass, squeezing and kneading the tender flesh as he continued to pound his hard cock deeper and deeper into her sopping wet hole. Each thrust brought her closer to her own orgasm, his member filling her pussy far better than her fingers had. \n\nWendell's breaths grew ragged and labored against her breasts and she knew he was close to his release. She tried to wrap her legs around his waist to help him penetrate her, but he slowed and took a step back, his cock sliding wetly out of her snatch. She looked up at him in slight confusion. \n\n\"Turn around,\" he ordered, wiping perspiration from his brow. \"Spread yourself open.\" \n\nTwenty nodded as she ascertained his meaning. Sliding her ass off the edge of the table, she twisted her body around, pressing her ample breasts against the sweat-stained wood surface while simultaneously positioning her legs apart. Reaching back, she pulled her asscheeks apart, readying her aching pussy to receive his throbbing cock.\n\nShe didn't have to wait long, feeling him tease the slippery folds of her labia with the tip for a few moments before finding the entrance to her wet tunnel. His hands grabbed either side of her sweaty hips, fingers kneading her flesh as he speared his cock deep into her pussy again, causing both of them to groan in ecstasy. The sounds of their frenzied fucking echoed in the small room, and she found herself clinging to the table for dear life as his thrusts increased in both frequency and strength, driving her body into the table.\n\nJust as she was about to crest over her first orgasm, Twenty felt Wendell slow his pace ever so slightly. Her pussy ached for release, her slick vaginal walls pulsing around his stiff cock, but as he slowed, it became apparent to her that he was delaying his own climax with no regard for her pleasure. As if to drive the point home, she felt his fingers around her neck, lifting her torso off the table. His breath was hot against her ear a moment later, coming in short, ragged gasps as he continued to fuck her from behind. His other hand snaked around her body to her chest, grabbing one of her tits and squeezing it roughly each time he plowed himself into her. \n\nTwenty's previous sexual experiences had never been this rough, yet she found herself responding to the pain and discomfort, moving her hips in time with his to allow his cock the deepest amount of penetration into her. She wasn't sure if it was because she actually enjoyed being manhandled while being fucked, or if she just wanted to reach that long-awaited orgasm as quickly as possible. Not that either of those really mattered, as her body was completely at Wendell's pleasure.\n\nAbruptly, he pulled away again, his cock sliding out of her as he stepped back. \"On the floor,\" he ordered tersely. \"Hands and knees.\"\n\nAfter getting fucked on the hard wooden table, Twenty was almost grateful as she complied; the floor of the conference room was carpeted. Wendell followed her down almost immediately, his hard cock finding her wet opening again and plunging deep into her tight pussy. She could tell right away that he was getting ready to cum; his rhythm was hurried as he hammered himself in and out of her, causing her to cry out with each thrust.\n\nShe glanced behind her, looking through her sweaty, matted hair up at the man fucking her. He had adopted a squatting position, knees to either side of her bent as he continued his assault on her sex. At this angle, each thrust drove her into the ground as his cock reached further and further into her pussy. Her hand darted between her legs, her fingers finding her clit and rubbing it fiercely, hastening the arrival of her own orgasm. \n\n\"F-f-f-f-f-f-f-fuuuuuuuuucckkkk!\"\n\nShe felt his body tense up and his fingernails dig into her ass as he came, his cock ejecting spurt after spurt of hot cum into her pussy. For Twenty, this was the first time she had let anyone cum inside her, and the sensations were enough to drive her over the edge, the walls of her pussy spasming around his cock as he continued to fill her with his ejaculate.\n\nHer body was still pulsing from her orgasm when she felt Wendell pull out of her, his cock slipping out of her with a wet squelch. Almost immediately, cum started to dribble out of her well-fucked hole, sliding over her quivering labia before dropping to the floor. Somehow finding her senses, she made an attempt to pull herself up, but stopped when she felt his hand on her ass again.\n\n\"No,\" he rasped. \"Stay down like that.\"\n\n\"Y-yes, sir,\" she managed, her own voice hoarse. She realized why he had commanded her to stay down when she felt his softening shaft glide across the damp skin of her backside; he was wiping his cum and her juices off his cock and onto her ass. \n\nShe heard the sound of his belt buckle clasping, then of him rising to his feet. \"No demerits for you, Twently,\" he said. \"But you tell no one of this, understand?\"\n\n\"Yes, sir. Thank you, sir.\" \n\n\"Good.\" \n\nThe sound of the conference room door opening and closing finally let her know that he had left, and only then did she lower the rest of her body to the floor. The respite was fleeting, however, as the door opened and closed yet again. \n\n\"Holliday, are you all right?\"\n\nCash's voice pierced through the fog in Twenty's brain. Pushing herself upright, she rolled her naked body over to face him. \"Mmfh,\" she murmured.\n\nHe was crouched in front of her, his eyes locked to hers for once. \"Are you hurt?\" \n\nShe shook her head despite the aches in her chest, elbow and knees that said otherwise. \"No, I'm fine. Did you get what you needed?\"\n\n\"And more,\" he replied, pulling a handkerchief from his pocket and holding it out to her. \"Here.\"\n\nShe took it and stared at it stupidly. \"What am I supposed to do with this?\"\n\nThis got a chuckle out of Cash. \"Well, it might not do much, but I'm sure you'll want to take care of that, at least.\" His gaze dropped to below her waist. \n\nAs if on cue, another wad of cum pushed its way past her pussy lips, sliding down and coating her asshole. Twenty groaned and swiped the cloth between her legs. \"Thanks,\" she managed. \"What happens now?\"\n\n\"Well, we've taken the first step in compromising Mansfield and his operation,\" he answered, observing her as she attempted to clean herself up. \"Wendell was the first cog that needed to be turned. There are others.\"\n\nShe looked up at him. \"Others?\" she echoed warily.\n\nHe shrugged. \"Well, you're already in this deep, pardon the pun.\"\n\n\"You don't mean...\"\n\n\"Only if you're willing, of course. Otherwise you can go back to running around naked in this office building until they ship you out. But I'm counting on you to know to do the right thing.\"\n\nThis almost got a laugh out of Twenty. \"After this, I don't even know what 'the right thing' is anymore.\"\n\nTo be continued..."
    ],
    "authorname": "Nynah",
    "tags": [
        "mailgirl",
        "office",
        "humiliation",
        "cmnf",
        "naked",
        "reluctance",
        "public nudity",
        "public sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/operation-mailgirl-ch-02"
}