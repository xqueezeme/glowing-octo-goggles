{
    "title": "Moonlight Shadow Ch. 04",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 18 - The Murder Weapon\n\n9:45am, Wednesday, April 11th. Detective Jerome Davis and I walked into I-1, where May Cialis was sitting with her lawyer, H.J. Lynch of Chase, Lynch & Berry, P.C. I gently set down the clear evidence bag in front of her. Her eyes flashed recognition for a second, then like the well-trained agent she was, she recovered quickly.\n\n\"May Cialis,\" I said, handing her lawyer a document, \"this is a warrant for your arrest, charging you with the first degree murder of your husband James Cialis, a human being. You have the right to remain silent----\"\n\n\"I know the God-damn rights!\" May shouted angrily.\n\n\"She is not revoking her rights by saying that.\" snarled Lynch. \"She's reacting in frustration to your abusive harassment...\"\n\n\"Spare me your shit, Lynch.\" I said wearily. I then sat down, as did Jerome. \"Let me paint the picture for you. We earlier found a Sig Sauer 229 pistol in .40 S&W caliber. That weapon can also hold a barrel for a 357 SIG caliber chamber and barrel.\"\n\n(Trivia bit: Unlike the .357 Magnum having a period (.) before the number, the 357 SIG caliber round does not have that period. I don't know whyyyy.)\n\n\"As I'm sure you know,\" I said, 'The 357 SIG is a .40 S&W cartridge necked down to hold a nine millimeter, or .355 caliber, bullet. The 357 SIG is more powerful than the 9mmP. The State Crime Lab has confirmed this morning that this 357 SIG barrel in this evidence bag was dropped into your Sig Sauer 229 pistol, Mrs. Cialis, and the cartridges in the bag along with the barrel match the bullets recovered from your husband's body... perfectly... in every way. And your prints are on the pistol as well as the electrical outlet behind which you hid this barrel and ammunition.\"\n\n\"Totally circumstantial!\" yelled Lynch.\n\n\"Most cases are, Mr. Lynch, most cases are.\" I said. \"Mrs. Cialis, juries have convicted people on far, far less than what we have on you right now.\"\n\n\"I need to confer with my attorney.\" said May Cialis.\n\n\"No doubt about that.\" I said. \"Take all the time you need. We'll come get you when it's time for the arraignment.\" With that, Jerome and I got up and left.\n\n* * * * * * * * * * * * * * *\n\n\"Wow, I totally missed that!\" pouted Joanne Warner as we talked in MCD. \"I should've realized the possibility of a 357 SIG!\"\n\n\"You're great with hunting rifles, Joanne.\" I said. \"But we all learned something from this one. I finally realized it when Captain Ross and Davis were not agreeing with J.R. about how far from James Cialis his murderer must've been. And the computers failed to 'think' about the possibility of the 357 SIG round, as well. But Jerome figured it out, and told me this morning before the coffee klatch.\"\n\n\"So when you kept talking about finding the murder weapon,\" said Cindy, \"you meant the 357 SIG barrel.\"\n\n\"Yes.\" I said. \"I was hoping May didn't get rid of it, but hid it somewhere. She got a little carried away with herself on that one, as well as the silly business of the footprints going the other way.\"\n\nJust then ADA Ted Mason came into the room. \"Commander, do you have a minute?\"\n\n* * * * * * * * * * * * * * *\n\nMason, Cindy, and Jerome sat in my office, Cindy on the sofa. I sat in my 'Command Chair', and was very grateful for the lumbar support.\n\n\"We've got her cold, sir.\" said Cindy. \"No need to compromise on anything.\"\n\nMason said \"What about her accomplice in the murder?\"\n\n\"Why do you assume there is one, Ted?\" I asked.\n\n\"Someone had to make those footprints, if it wasn't James himself.\" Mason said.\n\n\"Jerome?\" I said.\n\n\"Mr. Mason, said Jerome, \"May Cialis made the prints herself. After shooting her husband, who fell forward, she bent his knees so that his feet were in the air, and she secured them some way so that his socks didn't get muddy. Then she put on his shoes and made the walk, stepping onto a towel she'd laid down at the other end. Then she came back and put his shoes back on his own feet.\" Cindy arched her eyebrows at me; she was impressed by Jerome's explanation.\n\n\"And you can prove that?\" asked Mason skeptically.\n\n\"I think so.\" I said. \"The stride of the person leaving the prints corresponds pretty well to May's when she walks normally. She's a magician like her husband, and has been creating illusions like these for some time. And Ted, we don't have to prove this aspect of the case all that strongly; it's a sideshow, a distraction. All you have to show the Jury is that she did it to distract us, and that just compounds the case against her. It shows her intent.\"\n\n\"The problem I have,\" said Mason, \"is that the Defense is going to attempt to say May had to have an accomplice to pull off that trick, and they they'll say the other person murdered James, and then there's reasonable doubt. How do we squelch that?\"\n\n\"You spoon-feed the Jury the case.\" I said. \"Her prints, and only her prints, are on the gun that committed the crime. It's her gun. It's her husband that was killed.\"\n\n\"And the motive?\" asked Mason. I looked at Jerome.\n\n\"Sorry, sir, I haven't gotten that far yet.\" admitted Davis. I gave him a brief nod.\n\n\"I'll fill in that blank, then.\" I said. \"One of the oldest motives in the world. Love triangle. She wanted to be free of James to be with another man, so she killed her husband.\"\n\n\"And you're right back to introducing another person who could've done it, for those same reasons... her lover.\" said Mason.\n\n\"You seem hell-bent on not accepting that May murdered her husband.\" I said, having noted that Mason did not even ask about who the lover was, nor what that situation was about.\n\n\"I'm just pointing out the obstacles we need to overcome to keep from wasting the taxpayers' money, and getting her an acquittal based on reasonable doubt.\" replied Mason. \"We nip that in the bud by getting her to throw her accomplice under the bus, maybe by taking off the death penalty in exchange for her cooperation.\"\n\n\"Once again, Mr. Mason,\" I asked, \"why do you believe there is an accomplice that helped in this murder? What evidence do you have that there is an accomplice?\"\n\n\"You just said there was a love triangle here.\" replied Mason. It was not a good try. What he was trying was my patience.\n\n\"I didn't say the lover helped in the crime.\" I retorted. That seemed to deflate Mason's balloon some.\n\n\"All right.\" said Mason. \"After her hearing, I want to lead the questioning of her. Yeah, her lawyer will have to answer for her, but we'll get to the truth, and can make a deal and get the other person involved... and I do believe there is an accomplice, here.\"\n\nCindy got up from the sofa and came over and patted Mason on the shoulder. \"Ted,\" she said, as if advising her best friend, \"you have a huge opportunity here, while Paulina is on leave running for D.A., to become a really outstanding ADA yourself, maybe have career opportunities for more and better things. I can assure you that the easiest and best path to your success is to follow what that man on the other side of that desk says and does. I am a Police Captain and Davis is a full Detective because we trusted and followed Commander Troy.\"\n\n\"She's right, you know.\" I said simply. Mason looked anything but amused. I was making observations and deductions.\n\n\"All right.\" said Mason. \"Let me try it another way. Yes, you have the gun and the fingerprints, but Lynch will have reasonable doubt. How do we get beyond a reasonable doubt?\"\n\n\"I suspect that will be easier than you're expecting.\" I said.\n\nPart 19 - Landing The Fish\n\nMay Cialis's arraignment for murder was conducted at 1:00pm. She waived her right to a preliminary hearing, was denied bail, and was bound over. She was brought back to Headquarters.\n\nWhile we were waiting, Cindy brought in some Subway sandwiches, and she, Jerome, and I ate them as we talked about the case in my office.\n\n\"Let me ask this.\" Cindy said. \"How do you know May didn't have help? Ted actually made a couple of good points, there.\"\n\n\"It's a fine point,\" I said, \"but I don't think she had help at the crime scene or in murdering her husband. Did her lover... CIA Agent 'Warspear'... know about it? Likely. But did he actually participate? Probably not directly, unless he was a lookout, or lured James to the Park, or was simply present but didn't help. Would May put herself that much into Mr. Warspear's power? Not likely, but with everything else they've been doing, this isn't much more.\"\n\n\"You'd better be prepared to tell us what they've been doing.\" said Cindy. \"Tease me like that, and I won't wait until the Police Boxing Matches to beat you down silly.\" Jerome chuckled.\n\n\"That will be the day.\" I replied levelly. Jerome chuckled some more.\n\n\"No, I'm not going to hold back from you.\" I said. \"Let's recall those last two assignments of the Cialises, the ones that were shut down with no arrests made. I did a little bit of research with the help of the 'Friends of the Iron Crowbar', and discovered that what happened in those two cases was that instead of investigating that bank officer and the Israelis, May and Warspear conspired to play a dangerous game.\"\n\n\"What they did,\" I continued, \"was to get the goods on their prey, then attempt to blackmail them. Well, Warspear did the blackmailing, but it was May that was feeding him the info he needed to do it. The bank official in Charlotte may have gone to the FBI about it, and what's more, he may have been a minion of the so-called 'Big Boys'. So they pull him out, and James and May were sent to Florida.\"\n\n\"Then May and Warspear went after the Israeli company.\" I went on. \"I suspect they had friends at high levels that wanted them to do that. But then the Israeli Government began pushing back, and threatening to make a public and international incident of it. So again, the whole operation was shut down, and the Cialises sent here... to find the Guardians of Justice.\"\n\n\"So why is Warspear here?\" asked Cindy? \"They trying to get something on BOW Enterprises?\" That was astute of Cindy, I thought to myself.\n\n\"I don't think so,\" I said, \"though I did warn Todd and his security people to be on watch for Warspear after I learned about his presence here. Anyway, let's come back to the murder, and the motive for it. James Cialis comes to the location where he is murdered, and pretty much stands where he was shot. My contention is that the only way he'd do that would be if it was his wife, and his wife alone, that was at the scene with him. Maybe she asked him to pose for a picture for his magic act portfolio, but instead of shooting him with a camera, she whipped out her pistol and shot him with that. It was fast, rapid-fire, and he fell where he stood. Then she very quickly did the footprints thing, then got out of there. If Warspear was there, James probably didn't see him.\"\n\n\"Make sense, sir,\" said Jerome, \"but it'll have to be spoon-fed to the Jury... and I get the idea that Ted Mason is not interested in doing that.\"\n\n\"Ahhhh, you noticed that, did you?\" I said. Cindy was also nodding. \"Yes, I get the idea that Mason wants to ingratiate himself with Krasney, who would prefer to not have any controversial cases while he's running for re-election. Yes, I am really, really worried about how much interest Mason is going to put into this case.\"\n\n* * * * * * * * * * * * * * *\n\nAt 2:00pm, Wednesday, April 11th, I walked into Interrogation-1 with ADA Ted Mason. May Cialis was at the table, and her hands were handcuffed to the ring embedded in the table. Officer Lydia Green was the Uniformed presence. Cindy, Chief Moynahan, Jerome Davis, and Teddy Parker were in the anteroom, watching through the one-way glass.\n\nJust to make a point, I read May Cialis her rights from the card yet again. She willed herself to show no reaction. \"Okay, Mrs. Cialis,\" I said, \"the picture for you here is very, very bleak. Due to the aggravating circumstances, I'm going to encourage the D.A.'s Office to ask for the Death Penalty. And let me be clear that I will never give up habeas corpus. I will never allow the Feds to take custody of you until your murder trial is over.\"\n\n\"And your point is?\" asked H.J. Lynch.\n\n\"My point is that you need to give your client some very good legal advice.\" I said. \"She's taken the Fifth, so I can't ask her to give up her right to silence and explain what happened. I can't ask her to give me any reason at all to take the Death Penalty off the table.\"\n\nH.J. Lynch finally played his card and said what he'd been wanting to all along: \"I would like for you to allow my client to discuss a 'hypothetical' situation, not abrogating her Fifth Amendment rights, and then perhaps I can discuss with both of you how to move forward.\"\n\n\"No.\" I said. \"No deal. No hypotheticals. If she speaks, she's giving up her Fifth Amendment rights.\"\n\n\"Now hold on, Commander.\" said Ted Mason, irritating me. \"We should at least hear what she's going to say.\"\n\n\"If she wants to say something, Mr. Mason,\" I replied, \"she should waive her right to silence and tell us what happened. I'm not creating any loopholes for her here, and neither should you. You wouldn't want to embarrass your boss while he's running for re-election, now would you?\"\n\nThat last comment had a galvanizing effect on Mason. His eyes flashed fire for a second, then he realized that he was trapped: as T-Square liked to say, the Iron Crowbar don't play.\n\n\"Mr. Mason,\" said H.J. Lynch, trying to take advantage of the situation, \"why don't you and I talk about this situation, away from in here.\"\n\n\"Yes, let's.\" said Mason. \"But Commander Troy will have to be there. D.A. Krasney has suggested he take part in all conversations.\" I don't know if that were true or not, but Mason was realizing he was overmatched on both sides, and was realizing maybe he needed me there...\n\n* * * * * * * * * * * * * * *\n\nWe went into the Main Conference Room, where Chief Moynahan also joined us at my invitation. I wanted a reliable witness to the conversation in the room.\n\n\"All right,\" said Lynch, \"this is in no way a confession of my client's guilt, but she has information that will show she is innocent of these charges, and can give you the truly guilty person. In exchange for full immunity, of course.\"\n\n\"Stop wasting the Police Chief's time with this bullshit.\" I said quietly and levelly. \"Your client is guilty as sin. Her gun was the one used. Her fingerprints are all over it, and no one else's are. We've got that, we've got the ballistics.\"\n\n\"And the motive?\" snarled Lynch. \"What are you going to tell the Jury was the motive?\"\n\n\"Does it matter?\" I asked. \"We've got enough---\"\n\n\"A wife killing her husband, or a husband killing his wife, is usually a crime of passion and is all too common.\" said Ted Mason. \"The Jury is going to understand that, and in the light of the evidence against your client, they're going to convict.\" I was really wishing Mason would shut up... then realized that he and Lynch may have already talked. Was Mason guiding Lynch into knowing about the lover? I asked myself. One way to find out.\n\n\"Lay your cards on the table, Mr. Lynch.\" I said. \"I am already bored with you. If you want anything at all for your client, you better give me a reason to even continue to listen to you.\"\n\nLynch looked daggers at me, then said \"Okay, then. I don't think you have a solid case. There is plenty of reasonable doubt here. Mr. Mason here just said that this was a crime of passion. So, who is my client's lover? And maybe he was the one involved? You should be wanting to ascertain that before attempting to railroad my client on a flimsy case.\"\n\n\"How do you know the lover is a 'he'?\" I asked, just to fuck with both Lynch and Mason. They both almost shit in their pants over that. I brought them back to the lure. \"I digress on that point. Though I'm touched by your concern for our case, Mr. Lynch, the real issue is that May was the actor in this one. She's the one that shot her husband six times, then tried to pull off a magic trick illusion of the footprints, then hid the barrel of her gun through which the fatal bullets traveled. Mr. Lynch, your client has nothing to offer me in exchange for even taking Death off the table.\"\n\n\"What do you say to that, Mr. Mason?\" asked Lynch. \"You gonna let this cop push you around? Or are you going to do your job for the District Attorney's office and work with us to get to the truth?\"\n\n\"Is Commander Troy right, Mr. Lynch?\" replied Mason. \"Do you really have nothing to offer us?\" Lynch looked exasperated.\n\n\"Why are you doing this, Troy?\" the legal beagle snarled at me.\n\n\"I think you know the answer already.\" I replied. \n\n\"I've got to go back to my office for a few minutes.\" said Lynch. \"We can resume this when I get back.\" With that, he exited the room and went down the hall towards the front door.\n\n\"I need to make some phone calls, myself.\" said Mason. I guided him to Della Harlow's old office, whereupon he shut the door to make his phone calls. I followed the Chief to his office.\n\n\"Think they're talking to each other privately?\" asked the Chief.\n\n\"Oh, of course.\" I replied. \"But I think Lynch is calling someone else. I won't be shocked to see Nathan Masterson back in our Headquarters, and soon. And Mason is calling Krasney for guidance. I won't be surprised to see Krasney himself come in... and soon.\"\n\nPart 20 - Upping the Ante\n\n\"Sir,\" said Sergeant Morton as he and Patrolman Johnson came to my office, escorted by Captain Teresa Croyle, \"we have something about that guy whose picture you sent everyone.\"\n\n\"Sir,\" said Teresa, \"they brought this up the chain of command. I thought it best if they tell you directly.\"\n\n\"Good.\" I said. \"Okay guys, whaddya got?\"\n\n\"This guy asked Johnson and Patrolman Smith for directions to Point Hollow this morning.\" said Morton. \"They didn't recognize him at at the moment, then Johnson thought about it and reviewed the photo.\"\n\n\"He'd changed his appearance from the photo, sir.\" said Johnson. \"Pencil mustache and goatee, and had slicked his hair back, so it didn't look like the full head of hair in the photo.\"\n\n\"But you saw through it.\" I said. \"That's a good thing. Your powers of observation are increasing. So he asked about Point Hollow?\"\n\n\"Yes sir.\" said Johnson. \"That's a red flag for us, of course, so we asked why he wanted to go there. He said he was doing research into paranormal activities, and Point Hollow is known as a haunted site.\"\n\n\"No doubt about that.\" I said drily. \"Did you ask for an ID?\"\n\n\"Yes sir.\" said Johnson. \"Florida drivers license, name of Paul Smith, from Boynton Beach. I called Dispatch to run it, and it came up valid and clean.\"\n\n\"Yes, it would.\" I said. \"Did you tell him where Point Hollow was?\"\n\n\"Yes sir.\" said Johnson. \"He'd find out anyway, and we told him that Police patrolled that area regularly. He seemed unfazed by that.\"\n\n\"Okay, then.\" I said. \"Thanks for bringing this up, and so quickly. You guys can go. Captain, stay here a moment.\"\n\nAfter they left, Teresa said \"I've already told Precinct 1 to step up patrols to Point Hollow. But I don't think this guy is going to ask Police Officers for directions to the place, then go try to do something like a drug deal there.\"",
        "I was halfway in a reverie. \"No, probably not. Very curious, though.\" I then snapped out of it, looked up at Teresa, and said \"Captain, call Fire Lieutenant Easley. He's been working with the Bomb Squad lately. For some reason, the guy thinks that having a Medal of Valor means he has to do the dangerous tasks.\"\n\n\"Can't imagine why he'd think that.\" Teresa said sardonically. \"Especially in this County.\"\n\n\"Must be rowdy Police Captains setting a bad example for him.\" I retorted. \"Seriously, ask him to prepare a bomb disposal unit, just in case. We have some explosives in evidence, but I suspect some of the plastique walked away before last Thursday's firefight at MLK Park.\"\n\n\"Yes sir.\" said Teresa. \"Oh, one more thing. I heard from Otis's mom, Beatrice. Seems KXTC had a huge meeting on why their ratings are down and advertisers are pulling out. A survey taken suggested that the advertisers are not happy with the Media's treatment of you, sir.\"\n\nI couldn't help but smile. \"Money talks,\" I said, \"bullshit runs the marathon. Okay, thanks for that info. Go call Easley.\" Teresa scooted out the door.\n\n* * * * * * * * * * * * * * *\n\nThings happened faster than I expected. It was only a half hour after Lynch left that D.A. Krasney came into Headquarters... along with Nathan Masterson of Gresham & Mason, P.C. (no relation to Ted Mason, I understand). They went to the Chief's office, but he stymied that move by calling me into his office.\n\n\"We have a situation with this Cialis case.\" said Krasney as I walked in. \"The Feds are asking us to extradite her to their custody. Any problem with that?\"\n\n\"Not only 'yes', but 'hell yes!'.\" I said. \"We are not giving up custody of May Cialis until this murder case is resolved... likely by the Jury's verdict in her trial. And don't try to end run me, Krasney; Judge Folsom has already been told, and has made it clear to his subordinate judges, that no extradition is to take place.\"\n\n\"Why not let them have her?\" asked Krasney. \"Take her off our hands, save the taxpayers some money...\"\n\n\"It's called 'murder in the first degree', Mr. Krasney.\" I said. \"Even Mr. Masterson here knows what that is. I am not letting that murderer get away with it by getting into Federal custody, then getting released at the request of the CIA Director.\"\n\n\"We'll just take this to Federal Court.\" said Masterson.\n\n\"Which has no jurisdiction over murder cases.\" I replied. \"And if they did try to let her be extradited, she stays in my jails until the appeals are done with.\"\n\nKrasney looked resigned as he said to Masterson. \"It's not going to happen, Masterson. So are you May Cialis's counsel now?\"\n\n\"Yes, I've taken back over the case.\" said Masterson. \"And I want to talk to my client.\"\n\n\"Fine.\" I said. \"Make sure you give her good legal advice... like how she's facing the death penalty, and how I'm gunning to have her put on the table at Jacksonville State Prison and put to death by lethal injection if and when she's convicted of murdering her husband. Also make sure she understands that any stories of her boyfriend making her do it won't work too well with the competent juries of this County.\"\n\nMasterson looked displeased, but the Duty Desk Sergeant, called in by the Chief, was already there to escort him to I-1 to talk to his client.\n\n\"You're going to push this, aren't you?\" asked Krasney.\n\n\"You know something, Mr. Kraaaaaasney?\" drawled the Chief. \"If you'd allow the Iron Crowbar to do his job, you'll probably have this woman confessing to her crimes, and you'd save the taxpayers a lot of money that way. Why are you trying so hard to cut a deal with a woman who has nothing to give us?\"\n\n\"Mason believes she had an accomplice.\" said Krasney. \"He fears 'reasonable doubt' issues, and, frankly, so do I.\"\n\n\"You've been living in fear for years, Krasney.\" I said, then added brutally: \"Which is why you're not going to be D.A. after the Election in November. Right now, you're wasting my time. Let's go get May Cialis's confession, so you can move on to things that don't scare you so much. If you'll excuse me, Chief...\" With that, I walked to the door and out. Krasney was tall and long-legged, but had to hustle to keep up with me as I strode down the hall...\n\n* * * * * * * * * * * * * * *\n\n\"My client wishes to make a statement,\" said Masterson, \"which will implicate the true criminal in the murder of her husband. She will also give you much more information about him, and about certain er, Federal cases which might be of value to you and to the FBI. In exchange, she'll be given full immunity for any part she played in her husband's murder, and you'll allow her to be extradited to Federal custody.\"\n\nI couldn't help it; I just began laughing.\n\n\"Come on, Masterson.\" said Krasney, who was sitting next to me. \"You know we can't accept that. I'm not giving her unconditional immunity until I know it's worth it. And you've gotta convince Commander Troy more than me.\"\n\n\"Hypothetical, then?\" asked Masterson.\n\n\"No.\" I said sourly. \"No loopholes.\"\n\n\"Even if her information might be of value to you in saving your wife's life?\" asked Masterson, peering at me. May was looking hard at me, also.\n\nSo that was their trump card, I thought to myself. They're trying to get her off by giving me information they think I don't know.\n\nStupid to bluff the Iron Crowbar when one is holding an empty hand, I thought to myself. Very stupid, indeed.\n\n\"No.\" I said. \"No hypotheticals. No loopholes. I know what happened at the crime scene; there is nothing you can give me that will change the truth of that.\"\n\n\"Did you not hear me?\" gasped Masterson. \"This woman is offering you information that can save your wife's life!\"\n\n\"Then you should be telling me that information, if my wife is in danger.\" I said. \"You are under obligation to do so as an Officer of the Court.\"\n\n\"I don't know the information.\" said Masterson. \"Only my client does.\"\n\n\"Mr. Krasney,\" I said, \"you look thirsty. Why don't you go get a Coca-Cola, and maybe talk to the Chief about how you got re-elected by getting a conviction of May Cialis...\"\n\n\"All right.\" Krasney said, not to happy about it, but also knowing that this just went above his pay grade.\n\n\"And ask Captain Ross to shut off the microphones, so that only Mrs. Cialis and her lawyer will hear what I have to say.\" I said. Krasney waved as he left the room; I knew Cindy would shut off the microphones herself upon hearing me say that.\n\nI turned on May. \"Let me be crystal clear, Mrs. Cialis.\" I said. \"Threatening my wife will not get you immunity. It will not get you the chance to give a false hypothetical statement. It will not get you any deal at all. If you know something, I suggest you tell your lawyer, who can then tell me.\"\n\n\"You're willing to let your wife be in danger, rather than hear a hypothetical that in no way harms your case?\" asked Masterson. I did not even look at him; I bored into May Cialis.\n\n\"Perhaps, Mrs. Cialis,\" I said quietly but with great menace in my voice, \"you have heard of what happened to Sergei Molotov?\" May's eyes flashed for a second; she knew.\n\n\"Yes, your masters in the CIA sent my wife on a suicide mission; they fully expected her to die, to not return from it. I had other ideas. I am the one who changed their suppositions. I saved her and wiped out Molotov. Mr. Putin was very happy with me for doing that. My children were even happier when their mother came home.\"\n\n\"Mrs. Cialis,\" I said, \"if I could do that, then do you really think I'm going to let your lover, Agent Warspear, try to take revenge on my wife for outing him and busting him? No, ma'am, I'm going to put a crowbar upside his head.\" May couldn't help it; she smirked as if she expected me to lose that contest.\n\n\"And I'll go further, Mrs. Cialis.\" I said. \"When I do bust 'Paul Smith', or whatever name he's going by now, I'm going to have only one deal to put on the table... and he's going to get dibs on it. You've taken the Fifth, so I'm not allowed to tell you that your only hope... your only hope... to get death off the table, is to sing like the proverbial canary.\"\n\nI got up. \"Mr. Masterson,\" I said, \"I advise you to advise your client very, very well.\" And with that, I left I-1 and came back into the anteroom.\n\nPart 21 - Research Studies\n\nThe young stud grasped the beautiful blonde's hips and pulled her into him as his huge cock sank balls-deep into her, followed by the loud *smack!* of the round globes of her firm asscheeks smashing into his taut, muscular groin. He began pumping into her, driving forward with long, hard thrusts as the beautiful girl moaned and gasped in pleasure.\n\nThey were in the little bedroom next to Dr. Laura Fredricson's office. The good doctor was monitoring their progress from the little watching chamber next door. If this room seemed as small as a closet, it's because it was meant to be a closet, but now had a table-desk with instruments and videorecording Laura barely had room for her long, shapely legs as she sat in the chair at the desk.\n\n\"Oh yes! Fuck me!\" gasped the hot blonde as the young stud slammed into her again and again. He was hoping he could become part of the unofficial 'Sigma Epsilon Chi' or S-E-X Fraternity on campus, and Dr. Fredricson had promised to give him a good recommendation if he 'performed' well. And the fringe benefit, of course, was that he got to fuck this drop-dead gorgeous woman.\n\nThe woman was in her early 20s and was a high-class escort in the area. She aspired to get into porn, and Dr. Fredricson had promised her a 'great reference with a great contact' if she helped Laura's research.\n\nBoth young people were fucking hard. The college-aged boy was obviously enjoying the sex as he pistoned his huge meat in and out of the woman. It was harder to tell if the woman was enjoying her young stud's cock driving deep inside her again and again, but she was moaning as if she was.\n\nThe woman began sinking to the bed, and the young man followed her down, still plowing his cock in and out of her tight furrow. The angle and tightness of her cunt channel brought increased pleasure to him, and he felt the cum beginning to boil in his big balls.\n\n\"Oh yeah... here it comes, baby... oh yeah... UHHH!!\" the stud groaned as he sank down into the woman and began firing huge spurts of thick jism deep into the blonde's well-fucked pussy. With several vigorous thrusts he emptied his balls, the pleasure of his release washing over him as he collapsed onto the woman in a hot, sweaty heap.\n\n* * * * * * * * * * * * * * *\n\nAfter they got dressed, Laura interviewed them together in the little bedroom.\n\n\"Yeah, he was pretty good.\" said the woman, responding to Laura's question. \"He's young, but his technique is good. It has to be, with a big cock like that.\" Everyone chuckled a bit at that.\n\n\"Oh, she's awesome.\" said the young man. \"I usually have to be careful with girls with my size, but she took it like a pro, handled it... and me... really well.\"\n\n\"Okay,\" said Laura to the young man, \"I'm going to have you come out for some individual questions, then I'll come back for you.\" she said to the girl.\n\nIn the main office, Laura asked the guy a few questions about the girl handling his size, about how she was relative to other women, etc., then dismissed him. Then she brought the woman out.\n\n\"Okay, between us.\" Laura said. \"How was he?\"\n\n\"He was... okay.\" said the woman, and not enthusiastically. \"I think I taught him a lot about technique in just that one session. In some ways, being so big means he doesn't work on the little things about pleasing a woman, and I'd guess most of the girls he's been with either are inexperienced themselves, or were too busy trying to accommodate his size.\"\n\n\"Good points.\" Laura said. \"Okay, let me call in my contact.\" She called in Callie. The woman was stunned to see one of the hottest porn stars, who also owned a porn company, come into the room. Callie talked to the woman, they exchanged business cards, then the woman left.\n\n\"Think she'll be a good porn star?\" asked Callie as Laura sat down at her desk and Callie took the chair on the other side of the desk.\n\n\"She'd be okay,\" said Laura, \"but probably pretty run-of-the-mill. Not a lot of energy, there.\"\n\nCallie nodded. \"True. So, what research are you doing on her and that young stud she was banging?\"\n\nLaura said \"I watch their interactions during their sex. Then I ask them to talk about their experience and each other while they're together. Then I talk to them separately to see if they say the same things. The guys usually do, but the woman very often are far more critical in private. This will tie in to some research that Dr. Anthony Foster is doing. He's our relatively new Assistant Professor of Psychology, and he's doing human interactive behavior research. He's studying, as are many psychology professors, how truthful people are in various situations.\"\n\n\"Cool!\" said Callie. \"I'd tell him to interview my porn stars, but they'd probably blow up his research. Those people lie like dogs in the shade if it'll make them a buck.\"\n\nLaura smiled. \"Okay, so what are you finding these days?\"\n\n\"Nothing new on the Cialises or 'Warspear'.\" said Callie. \"That Audi that was found burning on the Bypass last night was the same one that had been watching us. So it looks like 'Warspear' has new and different transportation, and we don't know what it is.\"\n\n\"That sucks.\" said Laura. \"Look, you and Cindy be careful out there. Really be on the lookout for anything or anyone out of the ordinary.\"\n\n\"I was about to tell you the same thing.\" Callie said with a grin. \"It's you that Cindy and Don thinks he's after. Don tries to pretend he's not worried about you, but Cindy knows that he is.\"\n\n\"Yes,\" said Laura, \"it's very hard on him when he thinks there's a threat to his family. He still won't talk about that Christmas Eve when Carole was abducted, even when I try to get him to. He just said that it worked out, that Teresa rose to meet her destiny... but he won't talk about the attack on Carole or her grandmother. Typical alpha-male, but what can one do?\"\n\n\"And if you can't get him to talk about it, no one can.\" said Callie.\n\n* * * * * * * * * * * * * * *\n\n5:30pm, Wednesday, April 11th. \n\nCallie left the Psychology Building, peering around warily. Seeing no cars that weren't supposed to be there, she began walking to her BMW, which was parked near Laura's Mercedes. She gave Laura's car a thorough look before moving to her own. She glanced into her vehicle's windows, but saw nothing out of place.\n\nPulling out, she went along the long parking lot/road behind the various buildings until it became a normal street that joined other roads on the University Campus. She made her way north to one of the roads that emptied onto University Avenue. She was looking at the northbound traffic coming from her left, as she was going to turn right.\n\n*CLICK!*\n\nShe barely had time to realize that her doors had been unlocked when she then realized that the right rear door was being opened and a man was getting inside. As she turned, she found herself looking into the business end of a powerful handgun.\n\n\"Please don't do anything stupid, Ms. Carrington.\" said a man in his thirties with a full head of dark hair and a handsome face. It was Agent 'Warspear'.\n\n\"Aw, shit.\" Callie said, sounding more annoyed than anything else.\n\n\"Just do as I say, and nobody gets hurt, as the cliche goes.\" said Warspear. \"Keep your hands on the wheel. I don't know if you have any of those silent alarms, but it would be best for Captain Ross's health that you don't attempt to try anything, anything at all. Now... turn right, just like you were going to...\"\n\nPart 22 - Troy Family Values, Yet Again\n\n8:30pm, Wednesday, April 11th.\n\nTeresa and Cindy were sitting on the outside patio of the Cop Bar, sharing a pitcher of beer and a huge plate of beef nachos as they waited for others to join them. Well, it had been a huge plate of nachos. More than half the plate had been consumed, and the rest was destined to meet the same fate.\n\n\"So how are things going, planning for the wedding?\" Cindy asked.\n\nTeresa barked a laugh but shook her head at the same time. \"BOW Enterprises is handling virtually all of it. I'd just as soon go to the Justice of the Peace and just exchange vows and be done with it. But for Todd, it's an important event for his business, and for him as a semi-public persona. I understand that, so I just back out of the way and let Mariko-san do all the work.\"\n\n\"You're the bride. It's your wedding.\" Cindy said. \"Don't let them make you do anything you don't want to do.\"\n\n\"Oh, don't worry about that!\" Teresa said with some warmth. \"They know better. Todd knows better. I've made sure that the parts of the ceremony I want are going to happen.\"\n\n\"The Honor Guard is already practicing a sword arch for the wedding party to walk through.\" Cindy said. \"So... who is going to give you away? Or are you just going to come down the aisle alone?\"\n\n\"I'm sure they'll figure something out.\" Teresa said cryptically, causing Cindy to peer at her for a moment. Then she moved on.\n\n\"So,\" said Cindy, \"are you happy with your husband-in-perspective?\" That was a term used in England in the Victorian age.\n\n\"Yeah.\" Teresa said, a slight smile forming on her face. \"Todd is... well, he's young, but he's very mature for his age. I think having all the kids around had a lot to do with that, but Todd always was patient with me in my moods, and always supportive of me. He and I started out just being 'friends with benefits', despite our difference in ages, but then we just realized that we were in love, and getting married was the right thing to do.\"\n\n\"So how do you compare Todd to Don?\" asked Cindy. \"Think Don was like Todd when Don was that young?\"\n\n\"No.\" said Teresa. \"Don's mom said that Don wasn't all that outgoing in high school, not flamboyant, though he had what she called 'quiet' confidence, and an 'understated' leadership potential. He was good Army Officer material, from what I understand. Todd was flamboyant, outgoing, chasing girls, and catching them because they let him. Todd did have something of a mean streak; he was pretty abusive towards his younger brother Ned. And Todd has that magnetic leadership that causes people to want to follow him.\"\n\n\"Don has tremendous insight and intuition about crime, and human actions and interactions.\" Teresa continued. \"Analytical skills from his mom. Todd has his blood father's business intuition, and some insight abilities inherited from his mom and grandmother. Don's mother told me that it's kind of like the days of old calculators: they had scientific calculators and business calculators. They worked exactly the same, as the math behind both is exactly the same. But people applied those same buttons to different tasks. And in that light, Don's mom always thought that Don could never be a business CEO like Todd... Don's too straightforward honest and doesn't have the people skills Todd does. But Todd could never be a Police leader, much less the Iron Crowbar.\"\n\n\"That makes sense.\" Cindy said. \"They have some similarities and some differences, and are applying their skills where they most need to be applied.\" Then Cindy got a crafty grin on her face as she said: \"And just like his Uncle Don, Todd went after that older woman in his life.\" That earned her something of a 'look' from Teresa, but Teresa knew Cindy was teasing her.\n\n\"You're just a young whippersnapper compared to Don and me. But yes, Uncle Don did very well in the wife department.\" said Teresa. \"And so did Todd, for that matter.\" she added importantly. Cindy laughed out loud.\n\n\"I have no illusions that Todd is going to be sexually faithful.\" said Teresa. \"I'm not really interested in anyone else, but our marital arrangement is a lot like Don and Laura's otherwise. What about you and Callie?\"",
        "\"Kinda the same.\" Cindy said, looking at her wristwatch. \"I'm engaged to a porn star, after all. Some morals and example we're setting for our Police Force, eh?\"\n\n\"Yeah.\" said Teresa. \"That is something that's worrying me. Della Harlow has no problem at all attacking Chief Griswold through Commander Troy, as if Commander Troy is the one running. What's going to happen when it comes out that they have an open marriage?\"\n\n\"You know,\" Cindy said, \"For a while I was deathly afraid it would become known to the Police Force that I'm a lesbian. I thought it was destroy my career. And in a past time, it would have. But Don ripped through that like a katana through bamboo, and then I found out that Chief Griswold was supportive of me as a Police Officer and the rest didn't matter to him. And after that... I felt a freedom I'd never felt before. A freedom to be me, to achieve what I wanted despite what others thought...\"\n\n\"In fairness,\" Teresa said, \"you had helping hands. And as an example: blacks in the 1960s achieved great liberation and strides for equality. And while MLK Jr. was huge in that, even more huge was President John F. Kennedy and Attorney General Bobby Kennedy. They provided the backing of the power of the Federal Government. And you and I are where we are because of the Power of the Crowbar backing us up all the way.\"\n\nCindy nodded. \"That's true, and I am nothing but grateful to Don for all he's done for me... including introducing me, so to speak, to my blood father.\"\n\n\"And freeing me from mine.\" Teresa said. That got her another look from her platinum blonde friend. Then Cindy looked at her wristwatch again.\n\n\"Something wrong?\" Teresa asked.\n\n\"No.\" Cindy said. \"Well... Callie was supposed to be here half an hour ago. I know she and Laura have been working some serious overtime lately, but she'd usually text me. Maybe I should call her.\"\n\n\"Give her a few more minutes.\" Teresa suggested. \"Don's late getting here, too.\"\u2028\n\n\"And speaking of Don,\" Cindy said, \"the Kennedy brothers were assassinated. I hope Don and Chief Griswold don't have that happen to them.\"\n\nTeresa said \"Don and I talked about that after he went to Dallas for that football game, and sent us that picture of the Texas School Book Depository. (Author's note: 'Hampered In His Plans', Ch. 01.) \"Don thinks President Kennedy was assassinated because he was going to take us off the Federal Reserve system and kick the Federal Reserve Bank to the kerb.\"\n\n\"Wouldn't surprise me.\" said Cindy. \"I always believed the CIA was behind it, because President Kennedy didn't sent the air support for the Bay of Pigs invasion. Did Don say anything about Robert Kennedy?\"\n\n\"Not really.\" Teresa said. \"He said Sirhan Sirhan may have been subjected to some kind of hypnosis, brainwashing. Not that Don would know anything about that.\"\n\n\"How he beat that, I still don't understand.\" said Cindy, remembering those horrific days. (Author's note: 'Dream Weaver'.)\n\n\"Beat what?\" I asked as I came up. \"Sorry I'm late. Masterson's fucking with us. Told me that he was close to getting May Cialis to make a statement, then he said it was a false alarm. Crying 'wolf', that guy is. He's pissing me off, but not as much as Krasney is pissing me off---\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\n\"It's Callie!\" Cindy cried out, considerable relief in her voice as she fished out her personal iPhone. \"Hey, baby...\"\n\n\"Cindy,\" Callie said on the other side, \"just don't say anything and listen...\"\n\n\"What's going on?\" Cindy asked.\n\n\"JUST LISTEN!\" Callie shouted into the phone. \"Just don't talk and let me talk. I need you to come to Point Hollow.\"\n\n\"Why?\" Cindy said.\n\n\"For the love of God, Cindy, just don't talk, don't ask questions!\" Callie said harshly, almost desperately, and Cindy began to sense as well as hear the fear in Callie's voice. \"Just come to Point Hollow. Please! Come alone, don't tell anyone you're coming. And Cindy... take the back roads. There's an accident on the Bypass. See you when you get here.\"\n\nWith that, the phone line went dead. As Cindy stood up to put the iPhone back in her pocket, I saw the look on her ruggedly pretty face: a look of fear.\n\n\"Cindy?\" I asked. \"What is it?\"\n\n\"I... I've got to go.\" said Cindy. \"I'll talk to y'all later.\" With that, she rushed for the door, and a moment later I saw her tearing out of the parking lot in her Police SUV.\n\n\"What was that about?\" Teresa asked, totally stunned by her friend's actions.\n\n\"I dunno, but she didn't feel the need to call the Police about it.\" I quipped. \"Well, she's not getting away that fast----\"\n\n*BRING!* *BRING!* *BRING!* *BRING!*\n\nIt was my personal iPhone, and it was my wife calling.\n\n\"Hello, dear.\" I said. \"Whassup?\"\n\n\"Don!\" Laura said almost too loudly. \"Have you seen Callie lately?\"\n\n\"Er, no.\" I said. Then I made the connection. \"And Cindy just tore out of here. I'll start checking and call you back. And Laura... Point Hollow.\"\n\n\"Gotcha.\" Laura said, then disconnected.\n\n\"Point Hollow?\" Teresa asked.\n\n\"Yeah.\" I said. \"Call Headquarters. Get someone to trace Cindy's SUV locator. Dollar to doughnuts she's going to Point Hollow. Also...\" Teresa nodded as I gave her more instructions.\n\n* * * * * * * * * * * * * * *\n\nCindy was driving up the road to Point Hollow at a fast rate of speed, willing herself to hold on in spite of the fear she was feeling. The words Callie had spoken, about the 'accident on the Bypass', were codewords that Callie was in very serious danger, and couldn't speak openly on the phone.\n\nShe pulled over to the side of the road as she neared Point Hollow, and put on her outer armor to augment her inner armor. Then she drove on up the road.\n\nThe gate to the Point Hollow property was open. It wasn't supposed to be, unless Police patrols were on the property, and she saw no Police cruisers ahead of her. She drove up the driveway.\n\nA couple of street lamps had been installed along the road and driveway, bathing the forbidding two-story house and front lawn in their bluish light. There were no lights on inside the house. There was no one in the front yard, and she couldn't see into the blackness of the copse of old trees. She felt the foreboding she always felt at this place. Don was right, she thought to herself; this place was possessed by the Damned.\n\n\"Callie!\" she called out. No response. She began walking into the yard, then thought she heard something at the treeline. \n\n\"I'm over here.\" said Callie's voice. Walking towards it, she saw Callie step out from behind the nearest tree to the yard.\n\n\"Don't come any closer.\" Callie said. Cindy's eyes widened as she saw that Callie was wearing a leather vest. Squares of explosive plastique were attached and wired, and the blinkenlights of the detonator shone brightly where the vest was fastened together. It was a suicide vest, and Cindy's fianc\u00e9e was wearing it...\n\nTo be continued.\n\nWhat will happen next? How can Callie be saved? The exciting conclusion follows..."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "big cock",
        "hot blonde",
        "mystery",
        "drama",
        "crime drama",
        "police drama",
        "iron crowbar"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/moonlight-shadow-ch-04"
}