{
    "title": "M Club Ch. 04",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\nLisa waited in Denby's basement, wondering what was taking her friend so long. The obvious answer was that Den was just making out with her boyfriend now that they had a moment alone together. That was fair. But a small part of Lisa was afraid that this had all been one giant mistake and would create tension or jealousy that could destroy Denby and Sean's relationship, or her own friendship with Den.\n\nFor all that anxiety, though, Lisa still felt like she was floating on a cloud. Despite a lack of dating or relationship experience, she still harbored an active sexual imagination. Most of those fantasies incorporated exhibitionism. She liked to imagine being the only naked woman in a room full of guys or even mixed gender. She imagined being so confident that everyone would accept her, even be jealous of her confidence. Sometimes in those fantasies, she'd become the center of sexual attention. Other times, there was nothing sexual at all.\n\nTonight, somehow, her fantasies had intersected with the real world when she teased Sean about his masturbating for Denby. Every little detail of those episodes Den shared had distilled into a rampant fantasy about seeing Sean and showing off herself to him. When she'd asked him to perform for them and he'd counter-demanded that they do likewise for him...it had almost been too perfect to be true. The real perfection had been Denby's agreement and participation.\n\nNow that she'd lived out a fantasy, she was hooked. She still couldn't see herself showing off for just anyone. But Sean and Denby - they were safe. Once wasn't enough. Once had only been enough to confirm that her fantasies were well-founded. Waiting for Monday afternoon would be the longest two days of her life.\n\nThe basement door opened and closed, with Denby soon appearing. She looked flushed and her nipples were clearly poking through the thin tank top. Lisa never had any particular attraction to other girls, but she had to admit to herself that she had both liked being seen by her friend and watching in turn. Denby was pretty with a body meant to be admired.\n\n\"Everything still okay?\" she asked.\n\n\"Wonderful,\" Denby said. \"Thanks to my naughty, naughty friend.\"\n\nLisa rolled her eyes, but smiled. \"I didn't hear any complaints.\"\n\n\"No, we both had fun.\"\n\n\"And, really, I never expected my teasing to go anywhere.\"\n\n\"But you hoped it would.\"\n\nLisa blushed a little. \"Maybe a little.\"\n\nDenby punched her playfully on the shoulder. \"It's okay. After everything I told you about Sean jerking off for me, I can't blame you for wanting to see. I was just a little surprised at how eager you were to get naked for him.\"\n\nLisa sat on the couch as Denby took the other end.\n\n\"Like I said earlier, I figured it was only fair. And, well, showing off was something of a fantasy for me.\"\n\nDenby cocked an eyebrow. \"Oh really? Do tell.\"\n\nLisa felt the heat rise further in her, but after what they'd been through tonight, it seemed only fair to open up more fully to her best friend.\n\n\"You already know I like Sean. He's cute and nice and you're super lucky.\"\n\nDenby nodded but said nothing.\n\nLisa pressed on, letting it all pour out. \"And I'm super happy for you two being together. If he wasn't with you, well, maybe I'd be interested. But you are and that's that. Doesn't mean I can't be a little jealous and have a little imagination.\"\n\nDenby's eyes widened. \"Holy shit! You've been fantasizing over Sean?\"\n\nLisa buried her face in her hands. At least she could tell her friend was messing with her rather than angry.\n\n\"I know. I can't help it. And is it crazy that I feel like I'm cheating with him behind your back, even though it's all in my head?\"\n\nDenby chuckled. \"Don't worry about it. I don't blame you. Actually, I...\"\n\nLisa looked up at her friend who was clearly deep in thought. \"You what?\"\n\nDenby shook her head and blushed, finally taking a turn at looking uncomfortable. \n\n\"I kinda like knowing you fantasize about Sean. I can't explain why. It's just...I don't know. Maybe it makes me more comfortable that I'm not making a mistake with him. Because, if you didn't like him, then I'd be worried about what I was missing.\"\n\nLisa perked up. It made sense, in a way.\n\nDenby said, \"And, maybe even more weird, I liked watching you two look at each other when...\"\n\n\"Playing?\"\n\n\"Yeah, that. I liked seeing you open up - maybe a bit too literally! - with him. And I like that he likes you, since then I don't feel so bad about trying to split my time between my two favorite people.\"\n\nDenby stood and walked toward the basement's bathroom.\n\n\"Does that mean you want all three of us hanging out together more?\" Lisa liked the idea on one level, but she still didn't want to be that third wheel getting in the way of her friend's relationship.\n\nDenby left the door open a crack to answer while she went about her business. \"If you don't mind, sure.\"\n\n\"And you think Sean would be okay with that?\"\n\n\"If he gets to see you naked, I can't imagine him complaining.\"\n\nLisa sighed, even though Denby wouldn't notice. \"I meant my getting in the way of you two. Alone time. Private conversations, making out, that sort of thing.\"\n\n\"I'll make sure he gets his private time, still,\" she said. The toilet flushed and the sink ran for a moment before she returned to the room. \"But maybe we don't have to be quite as private, either.\"\n\nLisa wasn't quite sure what to make of that as she rose to take her turn in the bathroom. Did Denby mean that maybe the two of them would just make out in front of her? Any time or just as part of their little masturbation sessions? She was conflicted in her thoughts on how that would work.\n\nAfter finishing in the bathroom, Lisa found the basement's light turned off. The television was still on, muted, providing enough light by which to make her way to the hide-a-bed that Denby had pulled out and covered in blankets. Denby's own bed was too small, so they usually shared this one for their sleepovers.\n\nLisa peeled off her yoga pants and slipped under the blankets, turning to face \n\nDenby. \"I'm fine with you two making out. But I'm not sure how much I want to see unless it's something like we did tonight. No offense. Just, seems like it's intruding.\"\n\nDenby bit her bottom lip. \"That's fair. I guess I was just thinking more of what we were doing tonight. Things like that.\"\n\nLisa sensed there might have been a little more to it than that, but she didn't press.\n\n\"Watching each other get off like tonight, that I'm definitely down for,\" she said.\n\n\"Good.\"\n\nThey sat in silence for a little, staring at the television without really watching it. \n\n\"I've never been so turned on as I was when we all were going at it,\" Lisa said. Just reliving the events in her mind was getting her turned on. She wasn't sure she'd actually lost that edge.\n\n\"Me either,\" Denby said, practically sighing.\n\nAfter another bit of silence, Lisa said, \"Are you still...wound up?\"\n\nDenby turned to face Lisa. \"What do you think? I'm the one who didn't finish.\"\n\nLisa had forgotten and had the decency to look guilty. \"Sorry, yeah. You could go get your vibe. I wouldn't mind.\"\n\nDenby shook her head. \"No, don't need the parents wondering what's up. Would be just my luck that one of them would bump into me in the hall and I'd have nowhere to hide it.\"\n\n\"Yeah, that'd be awkward.\" Lisa chuckled.\n\n\"It's okay. I got a bit of relief. I'll live. Why? You still wound up?\"\n\nLisa sighed. \"Yeah.\" Before tonight, she'd have been mortified to admit that to her best friend, especially while laying side by side in bed together. Now, not only was she admitting it, she wanted nothing more than to reach down between her legs.\n\n\"You wanna?\"\n\n\"Wanna what?\" Lisa asked, though she was pretty certain she already knew.\n\n\"Personal relief?\" Denby clearly was a little embarrassed bringing it up, even after this evening. It was still very fresh ground for the both of them.\n\n\"Masturbate?\" Lisa added, smiling.\n\n\"Fiddle?\"\n\n\"Wank?\"\n\n\"Isn't that more of a guy thing?\" \n\nLisa giggled. \"Sure, maybe. Whatever. If it works, it works.\"\n\nDenby's phone chimed from the end table beside the bed, startling both girls, but inciting another round of giggles. She reached over for it and flipped through the screen.\n\n\"Just Sean, saying he's home and reminding me how much fun he had tonight.\"\n\nLisa slid over so she could see, her body pressed up against her friend's. \"Should we tell him we were about to play again?\"\n\n\"Oh, we should! It'd drive him nuts.\" Denby quickly fired off the return text.\n\nSean immediately replied - Without me?? No fair! What else do you two do together that I don't know about?\n\nDenby wrote a quick reply and had Lisa agree before sending it - Wouldn't you like to know. ::wink::\n\nSean - I need details!\n\nLisa had an idea. \"Tell him we could use some inspiration.\"\n\nDenby snickered and wrote - Lisa wants a picture of your junk to use.\n\n\"Thanks, dork,\" Lisa said, sighing.\n\nSean's reply came quickly - Oh really? I might need a little inspiration of my own to make sure it's a good one.\n\n\"That boy sure knows how to play hardball,\" Lisa said.\n\nDenby said, \"No shit. What should we send him? Pic of your tits?\"\n\nLisa was a little nervous about putting herself out there. She liked Sean looking at her, but she didn't want him sharing her with his friends or anyone else.\n\n\"How about both of us?\" Lisa said. \"But no faces. Just to be safe.\"\n\n\"Okay,\" Denby said, pulling her shirt up. Lisa did likewise and they snuggled even closer together until one of her breasts pressed into Denby's smaller, perky one. Denby framed the selfie to cut them off at the chin and snapped it. \"Good for you?\"\n\nLisa found herself turned on by the experience - her first topless picture, with her friend, and intended for a boy's self-gratification. If she had her own boyfriend, she could see things like this quickly getting out of hand. \"Good.\"\n\nDenby sent it and the response came within moments - Smokin! Give me a minute.\n\n\"God, I can't believe we're doing this,\" Denby said, making no effort to pull her shirt back down or to separate herself from Lisa's close contact.\n\n\"We seem to be saying that a lot, tonight.\"\n\n\"Uh huh. You're a bad influence.\"\n\n\"Me?\" Lisa took a chance and just pulled her night shirt all the way off and dropped it on the floor beside her pants.\n\nDenby eyed her up - all of her. \"Yeah, you.\"\n\nLisa shrugged and smiled before nestling back up to her friend. \"Just in case he asks for more.\"\n\n\"Wanna send him a shot of your cooch while you're at it?\" \n\nLisa wasn't sure if Denby was joking or serious. \"Maybe next time.\"\n\nDenby's phone chimed and they eagerly watched as the attached photo resolved itself. It was a nice close-up of Sean's fully-engorged cock with his hand wrapped around the base. Lisa licked her lips. Ordinarily, a picture of a guy's cock by itself didn't do much for her. Knowing whose it was and that it was inspired by and intended for them, though, gave it that magical edge.\n\n\"Very nice,\" she said. \"I can work with that.\"\n\n\"I'll bet you can,\" Denby said while composing a quick reply - Thanks, babe! Lisa's gonna wear her fingers out now.\n\n\"Thanks,\" Lisa said, laying on the sarcasm. Her hand had wandered down to her panties, though, whether Denby knew it yet or not.\n\nSean replied - Just her?\n\nDenby - I'm replying one-handed. Now stop interrupting.\n\nSean - Send pics!\n\n\"Such a good boy,\" Lisa said, ogling the picture now that Denby had opened the image back up. \"So obedient.\"\n\nDenby agreed. \"That might come in handy one day.\"\n\nLisa's hand reached underneath her panties and she let her fingers glide across her slit, getting good and slick. She had a knack for getting very wet when aroused, and this was just piling on top of their earlier adventures. Unlike some girls, she had no problem getting her hands fully involved in her masturbation - working inside to stimulate her g-spot or to pretend a guy was buried deep within. Often a couple fingers would be doing that while the other hand was attacking her clit.\n\n\"Just make yourself comfortable there, Lisa.\" Denby was messing with her, since Lisa could tell her friend also had a hand down around her crotch. She glanced over and saw \n\nDenby working a hard nipple between the fingers of the other hand.\n\n\"Oh, I am,\" she said. \"I noticed you like working your nips. Sensitive?\"\n\nDenby, eyes closed, moaned softly. \"Uh huh. Very.\"\n\n\"Lucky. Mine are a little, but nothing like down below.\"\n\n\"You've never had a guy play with them, right?\"\n\nLisa had been forthcoming about her lack of experience, and this wasn't something she'd withheld. \"Nope, never.\"\n\n\"Maybe you'll change your mind. I swear, when Sean sucks them, it goes straight to my pussy. With a little practice, I wonder if he might be able to get me off all the way just by doing that.\"\n\nLisa watched Denby's fingers in fascination. The girl's nipples were larger than her own and looked oh so suckable. She surprised herself with that thought.\n\n\"Yours are so pretty,\" she said, her voice soft. \"I can see why he likes doing it.\"\n\nDenby opened her eyes, looking at Lisa. \"So are yours. And I'm always jealous of your tits. Sean couldn't take his eyes off them. Probably imagining titty fucking you or something I'm not exactly equipped for.\"\n\nLisa hadn't thought of that until Den planted the idea. It only added fuel to the fantasies.\n\n\"Bigger doesn't mean better. But I hope you're right.\"\n\nDenby's hands froze. \"About Sean wanting to titty fuck you?\"\n\n\"No! About them feeling better when getting sucked.\" She had stopped her own masturbating out of fear she'd angered Denby.\n\n\"Oh, right.\" \n\nDenby started playing with herself again and Lisa did likewise, turning her attention back to the picture of Sean's cock on the phone which was now propped up on the blanket between them. She wondered just what it would feel like to have that long shaft sliding between her breasts, unsure if it would go off at any moment.\n\n\"Can you suck your own?\"\n\nLisa shook her head to clear her other train of thought. \"What, my nipples?\"\n\n\"Yeah. I know some better endowed women can.\" Denby's attention had turned to Lisa's breasts which were full enough to have spread out to either side of her chest.\n\nBlushing slightly, Lisa said, \"I can reach the nipples with my tongue, barely. Not enough to suck them. Always seemed a bit too awkward to get much out of it, so I don't bother.\"\n\nThey masturbated in near silence for a little bit after that. The phone's screen blacked out from inaction a couple times before Denby finally just left it. Lisa could feel herself getting closer to a climax, but it was a much slower build than earlier. Den seemed to be going at it a little bit harder than earlier.\n\n\"Do you want to see what it feels like?\" \n\nDenby had broken the silence without breaking stride in her own motions. Lisa couldn't believe her friend was offering what she thought she was offering. They'd never done anything remotely like that before, nor had Lisa ever even entertained the notion. She was so turned on at the moment, however, she found herself seriously considering it. Her pulse quickened at the very thought.\n\n\"What? You offering to lend me Sean's mouth?\" Lisa felt a little joke was safe ground until she knew what her friend was actually thinking.\n\n\"Maybe I will,\" Denby said. \"But I was thinking more about now. I could. If you wanted. I hope that's not too weird, since that's not really my thing.\"\n\n\"Yeah, me either.\"\n\n\"Sorry, I don't know why I said anything.\"\n\nLisa could hear the mortified embarrassment in her friend's voice. She'd stepped way outside her comfort zone as a gesture of friendship.\n\n\"Yes,\" Lisa said. \"I'd like it.\"\n\nDenby stopped masturbating and Lisa slowed down. Their eyes met. Somehow, some way, Lisa felt they understand one another perfectly in that moment. This wasn't about some lesbian or bisexual relationship, but just about being a little bit more open and experiencing something new.\n\n\"You're not just saying that?\" Denby sounded very unsure of herself, yet had a sincere look in her eye. \n\nLisa laid her head back, still watching her friend. \"Do it,\" she said, her voice softer than the words. \"If you don't, I won't be able to fall asleep wondering what I'd missed.\"\n\nIt was surreal, yet Lisa could barely contain her excitement. Sure, she'd envisioned the first time lips made contact with her breasts they would be a boy's, but that little detail wasn't going to get in the way of the sensations coursing through her. With eyes closed, she shoved her panties off her hips and let her hands get back to business.\n\nThe first contact with her breast was by hand, not lips. Denby's touch was tentative, delicate, as if she was afraid to be too rough.\n\n\"It won't bite,\" Lisa said, swallowing her impatience. \"Just do to me what you like.\"\n\nDenby's hand became more assertive, cupping and feeling the fullness of Lisa's breast. Soon after, she began rubbing her thumb over the nipple, sending waves of pleasant tingles that drew out a soft moan. For as many times as Lisa had done that to herself, it was certainly more intense having it done by someone else.\n\n\"Someone likes,\" Denby said, purring.\n\n\"Yeah.\"\n\nLisa could feel Denby's shifting on the mattress, followed moments later by the tickle of long hairs teasing across the bare skin of her shoulder. Warm breath blanketed her breast. Lisa cracked her eyes just in time to see her friend's tongue flick out and make contact with the tip of her nipple. It didn't feel hugely different than the fingers, yet seeing it made the act feel immensely more intimate.\n\nThen the tentative flick of Denby's tongue became a broad lick with the full flat surface. That got Lisa's attention, causing her to suck in her breath sharply. She closed her eyes again and let herself focus solely on the combined physical sensations of nipple stimulation and fingers between her legs.\n\nDenby continued to alternate between quick, light licks and slow, heavy ones. Occasionally she'd run her tongue around the erect tip of the nipple. Everything felt good to Lisa and she was just a little jealous that Denby had been getting such attention from Sean recently. She could see him in her imagination - the top of his short, sandy hair as she looked down while it was his tongue playing with her girls.\n\nLisa felt Denby disengage and was about to voice her disappointment when her friend's mouth returned to her nipple, completely engulfing it with her lips and then gently sucking it in further.\n\n\"Oh, fuck,\" Lisa muttered.\n\nDenby's mouth was too full to reply. Instead, she sucked a little bit harder and flicked her tongue across the tip. Lisa thrust out her chest, eager for more, while her hands became a flurry across her clit.\n\nTime became a blur and little existed except the inevitable orgasm on the horizon that raced toward Lisa. Denby sucked and licked, while massaging Lisa's other breast with a hand. At some point she leaned further across to use her mouth on the other side. Lisa's heavy breathing became a quick, frantic pant interspersed with moans, and then her body exploded with the most powerful orgasm of her young life.\n\nLisa's eyes had been closed throughout the climax and for a good minute afterward as her body reacquainted itself with what normal felt like. She finally cracked her eyes and found Denby still leaning over her, a huge grin across her face as she looked down.\n\n\"You're so cute when you cum,\" Den said with a wink.",
        "Lisa was already too hot and flushed to be further embarrassed. \"Thanks. And, thanks. I can see why you like letting Sean do that now.\"\n\nDenby gave Lisa a quick peck on the cheek before rolling over back on her side of the mattress. \"And it makes him so happy to play with them. Works out rather nicely.\"\n\nLisa rolled onto her side to face her friend. Denby's tank top at some point had fallen back down over her breasts, but there was no hiding the perkiness of those nipples. Lisa wondered what it would be like to touch them like Den had done for her. Was her friend expecting reciprocation?\n\n\"Did you like it?\" Lisa ventured.\n\nDenby bit her lip and might have blushed a bit - difficult to tell in the dim light of the television. \"Yeah, it was kinda fun. Weird, but okay. I liked how you reacted most.\"\n\n\"Fuck,\" Lisa said. \"I just realized something.\"\n\n\"What?\"\n\n\"I've had two tonight and you still haven't had any. I'm a shitty friend.\"\n\nDenby rolled her eyes. \"Geez, it's not a competition. I'm just a good host.\"\n\n\"And a better friend.\"\n\n\"They don't call us BFF's for nothing.\" Denby blew her a kiss and Lisa responded in kind.\n\nLisa gathered herself together. \"So, uh, you want me to...\" She glanced down at Denby's headlights.\n\n\"If you want to, I'll let you,\" she said. \"But only if you want to. I offered because you'd never experienced it before. I have.\"\n\nDid she really want to? Lisa thought about it, since it was pretty clear Denby wasn't expecting anything. Before tonight, she'd have never considered it. Now, she felt herself leaning the other way.\n\n\"This stays between just us?\" Lisa said. \"I'm not quite sure I'm ready for Sean to start getting any ideas.\"\n\n\"Lips sealed. That goes for what I did to you, too.\"\n\n\"Deal.\"\n\nLisa could feel her heart beating a hundred miles an hour. She was nervous and excited in an entirely different way from that of masturbating in front of Den and Sean, or in letting Den play with her tits. This was still pushing new boundaries, but it was also about pleasing someone else - something Lisa had no experience with.\n\nDenby, without getting up from where she lay, pulled her tank top up and over her head, setting it aside. The bedsheet barely reached her midriff, leaving those modest, perky breasts fully exposed. Lisa liked her own for their size, but appreciated how Denby's were firm enough to retain some of their shape even while she laid on her back. And those nipples - thick as Lisa's thumb and with much greater contrast from the surrounding pale flesh.\n\nLisa, in pushing herself upright, realized her panties were still halfway down her thighs from where she'd shoved them during the height of her self-pleasuring. The most non-sexual-we're-just-friends gesture probably would have been to pull them up. With as wet as she still was, though, she didn't really want to get them soaked any further. She shoved them down past the knees and then squirmed them the rest of the way off with her feet.\n\nDenby seemed oblivious, having made herself comfortable on her back and closed her eyes. Maybe she, like Lisa, was picturing Sean as the one pampering her breasts. Or she just liked to have her eyes closed.\n\nFighting down her last reservations, Lisa reached out and placed a hand on one of Denby's breasts. It was indeed firmer than her own, but still soft and yielding to the touch. She squeezed and massaged gently, getting a sense for its shape and feel. Lisa couldn't tell if her friend was masturbating under the sheets, but her hands had moved down to that general vicinity.\n\nPulling her red hair over one shoulder to keep it out of the way, Lisa bent forward to Denby's breast and tentatively stretched out with her tongue until it made contact with the tip of the nipple. Denby sighed and smiled. Lisa licked again, this time with greater contact. There was nothing particularly magical about the feeling of having a hard nipple in her mouth, but Lisa was enamored with the sounds of pleasure it drew out of her friend.\n\nTrying to replicate what had felt good when on the receiving end, Lisa soon had her mouth wrapped fully around Den's areola. She sucked the firm tissue further in and Denby's entire body bucked in response. A subtle, fast-paced shaking in the mattress told Lisa that her friend was almost certainly busy with her fingers now. It made her happy in ways she couldn't yet describe to know she was both giving pleasure to her friend and that Den was comfortable enough with it to participate. This was more than just experimenting - there was a definite sexual edge here that they would have to come to terms with later.\n\nLisa alternated between Denby's breasts, lavishing attention on both nipples with her tongue while her hand played with the other. Denby's breathing began labored and then became shallow and desperate.\n\n\"Fuck, fuck, fuck.\" Denby's mantra was somewhere between pleading and ecstatic. To Lisa, it was encouragement.\n\nDen's orgasm came while her nipple was still in Lisa's mouth, with tongue flicking madly across the hard nub. It was clear that Denby was doing everything in her power to keep it quiet, though the moans and whimpers still came through. Her body arched underneath Lisa through the climax until finally collapsing in a heap.\n\nLisa fought back an urge to kiss Denby full on the lips. That's what lovers would have done at this point, yet that's not what they were. Or weren't going to admit it. Lisa wanted more, though, and was surprised at the feelings within herself that had broken through tonight. Were they real or just a fiction triggered by the immense rush of hormones? Could they even be separated? Questions for another time, perhaps.\n\n\"I guess I can still get off with just my fingers,\" Denby finally said. \"And some help.\"\n\n\"You're welcome.\" Lisa sat back, enjoying the view of her friend's glistening bare chest. \"How do I compare with Sean?\"\n\n\"Don't tell him, but that might have been better.\"\n\n\"Really?\" Lisa liked the sound of that.\n\n\"Or maybe it was because I was playing with myself at the same time. Which I haven't done with him yet. God, I can't believe we did this.\"\n\nLisa settled back on the mattress, but let the back of her hand brush up alongside Denby's arm.\n\n\"Me either,\" she said, \"but I'm glad we did.\"\n\n\"No one freaking out? No one turned off guys forever?\"\n\n\"No and no.\" Lisa liked that Den had a sense of humor about it. That would help keep things from getting weird.\n\nDenby patted around the blankets for a moment until finally finding her phone. The message light was blinking and she turned on the screen.\n\n\"Message from Sean,\" she said, opening it.\n\n\"I didn't even hear it chime,\" Lisa said, only slightly surprised.\n\n\"Looks like he enjoyed the picture,\" Den said, holding it up for Lisa to see. Sean had sent a picture, this time of his half-deflated cock and a puddle of semen on his bare stomach.\n\n\"Nice,\" she said. \"I suppose you should tell him that his inspiration worked, too.\"\n\nDenby fired off a text and they waited a couple minutes for a reply that didn't come. \"Guess he must have nodded off waiting. How typical.\"\n\n\"Boys.\" Lisa chuckled.\n\n\"I do know one thing,\" Denby said. \"Monday afternoon is going to be amazing.\"\n\nLisa couldn't agree more."
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "bicurious",
        "lesbian",
        "masturbation",
        "nipple sucking",
        "sleepover",
        "girls",
        "teen",
        "first time",
        "club",
        "party"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-04"
}