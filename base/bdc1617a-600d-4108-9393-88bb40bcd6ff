{
    "title": "The Twelve Zenati Pt. 16",
    "pages": [
        "Authors note: Hello everyone. I am grateful to David who is back onboard proofreading for me again and thank you once again to Kate for being my second set of eyes. I hope you continue to enjoy this series. ~ellie. \n\n*****\n\n\"Fuck! She's gone?\" Noah asked, incredulously. \"Gone where? How?\"\n\n\"No one knows. No one saw anything. We're tracking down the night nurses, but they didn't report anything until this morning when they went to do the handover and couldn't find her,\" Gideon informed him.\n\n\"I saw her around two this morning, before the Battaglia arrived,\" Noah said. \"Did anyone see her after that?\" His stomach was beginning to churn, and he felt a cool sweat break out on his forehead.\n\n\"There is security everywhere around the hospital, especially on that ward. She can't have just walked out. You know her better than anyone. How would she have left and where would she go?\" Gideon asked, noticing how pale his brother was turning before his eyes.\n\n\"Did she have her stuff? Did the nurses give her back her personal effects?\" Noah asked, trying to work out how a woman with no phone, no wallet, no car and no friends outside of the family could just disappear into thin air. Except that she did have friends. Friends he and his family knew little about. \"Did anyone have eyes on Greg last night?\"\n\n\"Yes, and still do,\" Gideon nodded. \"He was home on the plantation.\"\n\nThey joined the search, scouring the hospital from top to bottom, locating Marcella's personal belongings at the administration station of the emergency department where they had been held overnight so that she would stay under doctor's orders.\n\n\"Fuck!\" Noah cursed an hour later and pulled his phone from his pocket, reading the text that popped up on his phone. \n\n\"Dominic 8:37 am: Thank you, for everything. I couldn't stay. Tell her I will keep my promise.\"\n\n\"What the fuck?\" Noah furrowed his brow and practically ran through the hospital, making his way to Dominic's room, thinking the worst. His eyes were wild, and he was panting for breath when he got to the room, closely followed by Gideon, but Dominic was resting peacefully, with Emma sitting beside him holding his hand and smiling softly. \"What the fuck?\" he said again, as he shook his head, glancing back down at the phone he held, clutched tightly in his hand.\n\n\"What's going on?\" Emma asked, looking up in alarm.\n\n\"Dom, he sent me a text like two minutes ago. I thought he was... leaving us,\" Noah said, confusion and relief warring in his mind. He held up the phone, as if to prove he wasn't going crazy.\n\n\"No, he didn't. I've been right here for the last half an hour,\" Emma said, confused by the statement.\n\n\"Where's his phone?\" Gideon asked in a gentle voice, not wanting to alarm anyone further. \n\n\"In the top drawer, I guess,\" Emma shrugged but stood to check the drawers on the nightstand. She frowned, not finding it and checked the other drawer and then the small cupboard. \"I can't find his phone anywhere. Maybe X has it. I'll give him a call.\"\n\n\"It's okay. We'll just get Zanto to track it and find it. Is anything else missing, like his wallet or watch, or anything at all?\" Gideon asked as Noah left the room to call Zanto and get him to track the phone. It was obvious to them both that this was how Marcella had managed to get away from the hospital, but not how she as able to leave without security knowing. If someone were asleep on the job, Gideon believed that Noah would lose his shit entirely. As if he hadn't already. \"I'll call X and let him know what's going on. You look after Dom. We need him back to full strength, the sooner, the better. Sorry about this, you don't need the added drama...\" he smiled apologetically and stepped out of the room to answer his phone, which had begun to vibrate.\n\n\"Gen, anything?\" he asked. as he moved toward where Noah stood. \"Yeah, he's losing his shit as we speak. I got him for now. Hang on...\" He pulled the phone away slightly and answered his brother's inquiring look. \"Gen says her apartment looks untouched, not that any of us had ever been in there to know what it looked like. I'll get Viv to go take a look.\"\n\n\"She won't have risked going there,\" Noah mumbled, and pressed his own phone back to his ear. \"Palmerston Police station? Seriously?\" He frowned. \"That's on the way to Wak Wak. I'll give the guys watching the pilot a call. Yeah, try it, if you think it will work. The phone is here in administration, I'll get it sent over to you.\" Noah ended the call.\n\n\"Dom's phone and wallet are at Palmerston Police Station. A woman matching Marcella's description handed them in not long ago and disappeared,\" Noah said woodenly, knowing the chances of finding her now, if she didn't want to be found, were slim. Especially as he had other responsibilities to worry about right now. His whole family had done their best to protect her, and she still chose to leave. He just had to accept that she didn't feel any sort of pull on the bond between them and let her go. Easier said than done, but that was the way it was working out this time. There would be no happily ever after for him, and it was all his own fault. Drawing a deep breath, he walked back into the room to join Dominic and Emma.\n\n\"The good news is that we found your phone and wallet. The bad news is someone will have to drive out to Palmerston to pick them up,\" he chuckled.\n\n\"What are they doing out at Palmerston?\" Emma asked, confused by the information. \n\n\"That's where the thief dropped them off, I am guessing. She sent me an apology from your phone, which is why I rushed in here before. I thought Dom was telling me goodbye, instead of Marcella.\" Noah admitted, sadly.\n\n\"She's gone?\" Emma gasped.\n\n\"Yeah, disappeared in the middle of the night like a regular thief, with Dom's wallet and phone.\" Noah tried not to let the hurt and anger he felt flow into his voice. She had been so ungrateful for all they had done for her to protect her and her sister, and she had just turned her back on them all, so easily. \n\n\"She'll be back,\" Emma said with certainty. \n\n\"She will or she won't. Nothing anyone else does or says seems to make one iota of difference to that reckless woman,\" he said, more harshly than he meant to. His stomach rolled, and he needed to stop thinking about her. \"So, Dom, found your voice yet?\"\n\nDominic sagged and let out a breath. He knew what he wanted to say but he just couldn't form the words he needed, and truthfully, he wasn't even sure who Marcella was. Memory loss and some loss of motor function were to be expected after his surgery, but it bothered him even more than he had expected. He had questions and things he wanted and needed to say. He just couldn't make the words come out. Yet, he lectured himself. He would, soon enough, and they would all want him to shut up again. Right now, however, he wanted nothing more than to say something comforting to his cousin, so he reached out his hand and touched his arm. The jolt that went through him was almost instantaneous. It was like he could hear Noah's thoughts and feel how sick Marcella's leaving made him feel. By the look in Noah's eyes, he could hear his thoughts as well.\n\n\"Can you... hear me? Like Imelda? In your head?\" Dominic pushed his stilted thoughts toward Noah, gripping his arm tightly.\n\n\"Yeah, but how?\" Noah asked, not quite believing what was happening.\n\n\"Fucked if I know... But thanks... fucking God! Need to talk. Can't make sounds. I need you to... tell Emma exactly,\" Dominic instructed, and when Noah nodded, said, \"You and I... are like fireworks... and symphonies... exploding in... the sky.\" \n\n\"Em, this is going to sound crazy, but Dominic wanted me to say, 'You and I, are like fireworks and symphonies exploding in the sky.'\" He barely got the last word out when Emma gasped and threw herself onto the bed, clutching Dominic to her and kissing him.\n\n\"Well, shit, I'll be careful how I use those words in the future,\" Noah said out loud with a chuckle.\n\n\"That's the first line from our song, it's a sad song, but we love it,\" she grinned. \"He's going to be okay, isn't he? I mean, if you can hear him, or whatever it is you oracles do together, he's going to be okay, right?\"\n\n\"Yes, he is going to be perfectly fine, and he is filling my head with more curse words than I have heard him use in his entire life. Does he swear that much at home?\" Noah threw a scandalised look at Dominic.\n\n\"You have no idea,\" she rolled her eyes and laughed even more. \"Tell him...\"\n\n\"He can hear you, he's just taking a little while to get talking again,\" Noah said, holding up his hands. \"Don't drag me into your twisted three-sided triangular love affair. We'd be a square then, and no one wants that!\"\n\n\"Oh, I don't know. I could kiss you right now for just saying that one sentence,\" Emma laughed happily. \"If you'd managed to sing it to me, I might have insisted.\" She laughed all the more as Noah pulled a face, and then scooted his chair closer to the bed, so that he could keep the physical bond with his cousin intact without Dom having to stretch.\n\n*****\n\n\"What do you mean, he said he didn't care?\" Gideon growled at Genesis.\n\n\"Just what I said. Noah isn't pale any more. He ate lunch with Emma and Dom and kept it down. Then when I told him about the information Vivienne found, he shrugged and said he didn't care and that I should handle it,\" Genesis explained. \"It's like he just shut that part of his brain off and couldn't care less if we find her dead or alive.\"\n\n\"That's bullshit, and you know it. Noah would care about anyone he considers a friend, especially her,\" Gideon argued.\n\n\"Go ask him yourself. I'm not lying. He honestly didn't want to know what you and Vivienne found out,\" Genesis shrugged. \"To tell you the truth, if he doesn't care, then why are we killing ourselves for someone who continually throws everything we have done for her back our faces? She hates me, judges her sister, and even uses your own wife's generosity and love against her.\" \n\n\"You ever think that's because no one ever loved her enough to do those things for her, just because they care? No one ever gave her a reason to trust their motives? Fuck Gen, you know what she went through now, and you blame her for her lack of trust?\" Gideon asked incredulously.\n\n\"What? What did she go through that Olivia hasn't been through worse?\" Genesis asked belligerently, taken aback by his brother's vehemence.\n\n\"You haven't read the report that Vivienne got from the doctor in Perth that I sent you, have you?\" Gideon asked, stunned by the fact. \"I didn't just send it for the fun of it, or to keep you in the loop. It involves Olivia too, you fucking dropkick. Read the fucking report!\" He stormed off down the hall, barely registering Genesis's words that followed him, as he went in search of Noah.\n\n\"Olivia already told me everything. I don't need your report,\" Genesis's words finally caught up to Gideon, who wheeled around on his brother, his face a storm of emotion.\n\n\"Read. The. Fucking. Report!\" Gideon glowered at him. \"Then see if you still want to argue with me.\" Once again, Gideon turned and stormed off. He remembered Vivienne's tear-filled eyes as she begged him to help her friend, showing him the report that she had written from information that she had gotten, that morning, in a confidential file. The report was ostensibly on Olivia, whose files Vivienne could request as her doctor, but it also detailed vital information about Marcella's role in her life and the family dynamic, and it sickened Gideon to remember some of those details. The fact that Marcella Gambaro could come across as such a reasonable, well-adjusted woman, albeit with a bad temper, instead of a basket-case rocking in the corner defied logic for Gideon. Vivienne hadn't needed to beg him. He would do what was needed to find the woman and help her now.\n\n\"You fucking asshole,\" Gideon ground out, after he stormed into Dominic's room and grabbed his brother by the shirt front. \"You don't care what happens to that girl!\" he roared, and threw a stunned Noah back into the nearby chair and pointed at him. \"There are reasons why she doesn't trust anyone, but she trusted you, or at least she tried to, and you fucking crushed that little bit of hope she had. Congratu-fucking-lations! You win! You're the biggest fucking asshole I know!\" Then he turned and left without another word. He blocked out the calling of his name and stormed toward the elevators, catching one as it was closing.\n\n\"Hold the lift!\" Noah's voice rang out, but Gideon felt only anger as he turned to see Noah striding purposefully toward him, his own face set in an angry scowl. Thankfully, the doors closed before Noah was close enough to stop it. Gideon needed to do things his way for once, instead of being a good and loyal soldier to the commanders of his family. He picked up his phone as he strode to the exit of the hospital. \"Papa...\" he said as Armando answered his phone immediately. \"Shit is about to hit the fan, and I need your help. Can you get hold of that Imelda woman?\" he asked. Then he gave his father sketchy details as he headed to his car.\n\nWhen he arrived at the recruitment facility, where his father spent most of his time, he had calmed down to the point of being rational again and realised that this was probably not the best place for the meeting of minds that he had wanted, but it was too late now. His father hastily exited the building and jogged around to the passenger side, before Gideon could exit the car.\n\n\"They're waiting for us. Let's go,\" Armando said as he closed the door. \"You can fill in the rest of the details on the way. Noah called, looking for you. He was angrier than I have heard him in a very long time, so you'd better tell me the full story,\" Armando growled. It had been a long time since his sons hadn't been a tight unit, looking out for each other, and he knew there was more to the story than what he had heard from Noah, who had said practically nothing aside from the fact that Gideon had lost his mind.\n\n\"Good! At least he cares about something,\" Gideon sighed. \"Yesterday, that old woman, Imelda, told him point blank that Marcella was his curse breaker, and he spent the day moping about and looking sick because Apollo came in, claiming he was her fianc\u00e9 and he had already put her in the friend zone when, apparently, she offered more in the beginning. Then this morning, when we found out that she had left the hospital without telling anyone, he ran around like a lunatic, trying to find her, and looking even sicker than he did the last time she went missing. Then he suddenly gives up, says he doesn't care what she does or where she goes. Won't even read the report I sent him, which Vivienne sat up all night transcribing from the other doctors' notes, to make it more generalised than the actual report, which she couldn't share.\"\n\n\"And you're mad at him for giving up on a girl who constantly pushes him, and any help she is offered, away?\" Armando tried to clarify, while putting it in Noah's perspective. \"She could have gone to him, to you, me, or Vivienne... anyone of us, and we would have helped her. Instead, she left, alone, without a word again.\"\n\n\"Do you think that she trusts anyone associated with the Tables anymore? Vivienne said she started looking into the sister's background again because Marcella looked petrified when she found out the Battaglia were arriving last night. She probably thought we were going to hand her over to them again.\" Gideon tried to explain it the way Vivienne had explained it to him.\n\n\"We wouldn't have allowed that to happen,\" Armando argued. \"What do you mean 'again'?\"\n\n\"You'd think her family wouldn't have allowed that to happen, either,\" Gideon said, making his point. \"She has fewer reasons to trust us. Everything good in her life she has had to get and fight for, on her own, no help from anyone. When she went to live with her aunt, she put herself through law school, she worked three jobs, and saved enough money to help Olivia escape the family. Olivia claims that Marcella sent her away, and Marcella feels guilt for all that happened to Olivia after she left. I think that is why she is so determined to fight for Olivia's rights now, or Vivienne does.\"\n\n\"You're losing me here. Start at the beginning,\" Armando instructed, genuinely curious now.\n\n\"Last night, I stayed at the hospital, as you know, to deal with the fall-out from Apollo Martino, and to support Xavier and Dominic,\" Gideon said. \"Junie took Emma and Vivienne home with her, or so I thought, but Vivienne had her drop her back at our place. You see, she hadn't really looked in any great depth at the records sent from Perth. She'd had Olivia sign some sort of legal waiver to have all her medical records sent, because Vivienne would be her doctor, along with Hector. She'd assumed that all of the trauma Olivia was dealing with was solely because of what had occurred during her time with Remington Royce. And she was right, to a degree.\"\n\n\"Go on...\" Armando said, his voice calmer, realising that this would be a longer story than he had originally thought.\n\n\"Olivia, along with her sisters, had to see a psychologist when it was discovered that Marcella had been sent to the Battaglia for her trial underage and with dubious reasons. The whole family came under investigation. Upon confirmation from the family doctor that nothing untoward had ever happened to any of the girls, or their mother, the investigation was dropped and the father got a slap on the wrist for sending her before she was eighteen. They dropped it despite concerns from the psychologist, who had started doing her own investigation and continued it after Nunzio severed any further contact between the psychologist and the family. The notes made in the file show that the abuse started being documented several years before, when a teacher who was concerned about the amount of time Marcella had off school for mystery illnesses and accidents, and how that affected her academic achievements,\" Gideon began. \n\n\"It was covered up again by a clean bill of health from the family doctor?\" Armando asked. It wouldn't be the first time such things had happened. When he was a child, it was far too common for children of the Tables to be home-schooled, and corporal punishment was the norm.\n\n\"You got it. Then the second time Marcella was sent to the Battaglia, it was under an assumed name. The investigation that followed that debacle intensified, and the net for gathering information widened. There is an interview with Olivia, and the psychologist from that time, where she talks about Marcella, and it was linked to these other documents from the investigation. From what it says, Olivia was never abused or molested because either Marcella continually took the blame for Olivia's mistakes or Olivia pushed the blame onto her. Marcella would often be beaten to the point of requiring medical treatment, where she would be taken to the family doctor. That doctor would sedate her to treat her, and then keep her sedated for days at a time while he molested her. He started giving her contraceptive injections without her knowledge, and when she started skipping her period, her father assumed that she was pregnant to some boy at school and beat her all the more, in an attempt to end the pregnancy,\" he said disgustedly.\n\n\"The doctor relayed that she wasn't pregnant but, in fact, on contraception, saying it was at her request. Her father decided to send her to the Battaglia facility where she could learn how to be a good woman and not the wicked girl she had grown into, always in trouble and causing problems. One of the impartial investigators, who had been brought in because the Battaglia were involved in the investigation themselves, was the Farnese man that Jessa, the eldest sister, ended up marrying. All of the notes and records on Jessa have disappeared, unsurprisingly. What happened after that is what we have all been told by Marcus and Francesco over the last twenty-four hours,\" Gideon finally finished and let out a sigh.",
        "\"It's no wonder she doesn't like Genesis being all caveman with Olivia, then,\" Armando nodded. \"What's the deal with Noah?\"\n\n\"He's being a mother-fucking prick,\" Gideon raged before he could stop himself. \"Sorry,\" he mumbled, remembering who he was speaking to. \"Do you want to tell me where we are going? I am assuming that I am heading in the right direction.\"\n\n\"Yeah, head to Madrina's. They'll be there by the time we arrive,\" Armando confirmed. He stayed silent for a long time thinking, and when they pulled into the driveway before the brightly coloured house and strange garden with its teapot tree he turned to Gideon and asked, \"So you believe she is his curse breaker?\"\n\n\"Not a doubt in my mind. If Noah doesn't pull his head out of his ass, however, he's going to be one lonely bitter old man,\" Gideon said sadly, and got out of the car to greet his Madrina, who hung out of the upstairs window, calling down to him with her usual caustic greeting.\n\n\"Ah, you finally remember I am alive, do you, cheeky boy?\" she cackled.\n\n\"At the end of the world, there will be cockroaches and you. You will outlive us all, old woman!\" Gideon responded jovially, despite his mood. He loved this woman like a second mother. One who had never let him down. \n\n\"Armando, you hear how your boy speaks to me?\" she sang out with a smile and cackled all the more as Armando lightly swatted Gideon across the back of the head.\n\n\"Respect your elders, even if they are as old as dirt,\" he chuckled.\n\n*****\n\n\"You're home!\" Olivia gasped and ran through the living area to greet Genesis. \"I didn't expect you back so early!\" She jumped up, wrapping her arms around his neck as he caught her and carried her through to the living room, kissing her briefly before placing her back on her feet and stepping away. He had read the report, and it had disturbed him, not only because of what it said about Marcella's abuse, but because of what it implied about the childhood of the woman he loved.\n\n\"Yes, I'm home,\" he smiled gently. \"Come and sit down. We need to talk about something.\"\n\n\"What's wrong?\" she asked uncertainly, not liking the small distance he had put between them.\n\n\"Maybe nothing, maybe something you can help me with. I'm not sure yet,\" Genesis frowned, trying to work out how to start this conversation. \"How young were you when Marcella started telling you the stories about the frogs and the king and queen?\" he asked.\n\n\"Very little. She always told them when Mama and Papa were arguing, mostly,\" she shrugged.\n\n\"Did your father hurt your mother when they are argued?\" he pressed.\n\n\"Sometimes,\" she frowned. \"I don't remember. Can't we talk about something else?\" She moved closer to him on the couch, but Genesis put up his hand to stop her from touching him, knowing that she was seeking to distract him by his insatiable desire for her.\n\n\"No, I need to know this, now. How old were you when your father started hurting you, little one?\" Genesis asked.\n\n\"He never hurt me. Marcella... she... hid me from him, told me the stories so that I would stay quiet.\" Olivia looked away, covering the partial truth she told. She didn't like these questions and she just wanted to retreat, like she used to, so she moved to put that small distance between them again.\n\n\"She hid you?\" Genesis asked.\n\n\"Me and Jessa,\" Olivia nodded. \n\n\"She didn't hide from him?\" Genesis asked, carefully.\n\n\"Someone had to take the punishment, and it was her own fault for getting between him and Mama. I was too little, and Jessa was too scared to stop him,\" Olivia whispered, not meeting his eyes. \"Once he punished her, he wouldn't be mad anymore, and we didn't have to hide. He never touched me, I promise. I wouldn't lie about that, not to you. I won't lie to you, ever. You have my word.\"\n\n\"I know, little one, and I will never lie to you either. I need to know if some of the things I have been told are true, and I need you to tell me how you were mean to Marcella. What did you do, exactly, that made you not want to face her when she came here to help you?\" Genesis rubbed at his temples, wanting her to tell him that it wasn't true, or that it had been exaggerated out of proportion.\n\n\"I was just trying to stop her from leaving us there,\" she whispered. \"If she had run away after the first time, when Papa beat her so badly that she had to stay overnight at Zio's clinic, who would have looked after us? I... I... blamed her for something bad that I did, and he hurt her so that she couldn't go anywhere, but then the Zio kept her longer and longer at the clinic, because it took her longer to get better, and Papa got mad at him then. It was better than him being mad at us. The last time, when I accidentally broke a vase that Nana had given him and blamed her, he sent her away, and we were on our own anyway.\" Olivia's voice was little more than a breath now as tears glistened in her eyes. \n\n\"You purposely made your father angry with Marcella?\" Genesis whispered, keeping his voice low to match hers, automatically.\n\n\"You don't understand. She would have left us there, all alone with him. When he sent her away there were no more stories, there was no buffer to hide behind. Jessa and I hid in our rooms, mostly, and only came out at mealtimes,\" she admitted. \"When Marcella came back, Papa went away for a little while and it was good. Mama let me have friends and go shopping on my own. Marcella started visiting our Aunt and talking about going to college after school. Papa would never let her do that, so I knew she was planning on leaving us again, and what if he came back?\" Olivia looked up, and tears tracked down her cheeks now.\n\n\"He did come back, and she stayed, despite her plans?\" Genesis continued to push her to face it all and confirm what the report had said.\n\n\"When he came back, he was different, calmer. He started to teach me how to sail, and buy me presents. He ignored Marcella and Jessa, for the most part, and I thought that maybe it would be better if she left, because she just seemed to annoy him. He was constantly checking on everything she did. He was always watching her when he thought no one else was watching. She didn't like me spending so much time with him, or sailing with him, and I thought she was jealous. I told him she was running away and...\" her voice choked off. \"Because I was the one who was jealous. He just pretended with me, to show the watchers that he was a doting father, but he constantly sought out Marcella. He checked on everything she did.\"\n\n\"You think he sent her away again because of what you said,\" he surmised, and she nodded. That much wasn't true, according to the report, but it can't have helped Marcella's situation.\n\n\"When she came back, Apollo came with her and helped her move in with our Aunt, once Papa agreed to the arrangement. Jessa got married just after that, and then it was just me there with Mama and Papa. I didn't want to be there alone, and Marcella tried to get me to go to Jessa in Adelaide. I said that if she gave me some money then I would go. I would sail there, so Papa couldn't get me back, because he wouldn't know where I was. I said Kevin would sail with me so that I would be safe, and that I loved him and trusted him,\" she snuffled. \"But I lied. I didn't want to go to Adelaide. Kevin wanted to sail up to Broome, and I thought that I loved him and that he loved me so... you know the rest.\"\n\nThere was so much wrong with this story that Genesis couldn't even take it all in. The details she had left out that he had read in the report, but everything she said confirmed those things and more. He watched as she pulled her knees up to her chest and hugged them, forming a small Olivia-sized ball on the couch beside him, surrounded by the guilt she had been avoiding for so long. Leaning over, he picked her up and drew her onto his lap. \n\n\"We all do what we need to do to survive,\" he said, quietly. \"You were just a little girl, and you couldn't have known what was really going on when she was at the clinic, or sent away.\" He soothed her by rubbing her back, understanding that her reticence to embrace Marcella was bound up in so many childhood memories. He held her and rubbed her back more, ensuring that she knew he loved her, no matter what she had done in her past.\n\n\"Why?\" she hiccupped. \"Why did you have to know, now?\"\n\n\"Marcella is gone. She left the hospital in the middle of the night, and no one can find her,\" Genesis said carefully. He watched her expression for any sort of recognition that this might have been expected.\n\n\"She probably went to find Apollo, to find out what really happened yesterday, and why people think he pushed her,\" Olivia said.\n\n\"Apollo and the delegation from the Battaglia left early this morning. They are already back in Canberra,\" he explained, and briefly wondered if anyone had checked whether Marcella had left with them.\n\n\"No! Apollo is from Sydney,\" Olivia argued. \"Marcella would never go back to Canberra,\" she said, with certainty.\n\n\"We would never have let them take her back with them, if she didn't want to go,\" he reassured her.\n\n\"That never stopped anyone before,\" Olivia said in a soft voice. \"She wouldn't have stayed if she thought she was in trouble and being sent there again. You've all been pretty mad at her lately, especially Noah,\" she said, as if that made perfect sense. \"That's probably why she ran away. She won't ever let anyone send her there again.\"\n\n\"Fuck!\" Genesis swore. \"She had to know we would never do that. We wouldn't send anyone away just because they did something, or even a few things, we didn't like. Besides, she found your boat, even though we didn't like the way she went about it.\" He was about to ask why she would think that he, or anyone in his family, would do that, and he remembered Gideon's words. It was no wonder she didn't trust them. The people who were supposed to love and protect her hadn't, why the hell would she believe they would? The penny finally dropped, and he felt bad about the way he had spoken to Gideon and had let Noah put up his walls to protect himself from the chaos that followed her everywhere.\n\n\"Thank you,\" Genesis said, dropping a kiss on the top of Olivia's head. \"You've helped me understand her better, and that will help us find her before she gets in any real trouble, okay?\" \n\n\"You're leaving again?\" Olivia asked, turning her teary eyes up to him.\n\n\"The sooner we find her and make sure she is safe, the sooner I'll be home. Do you want me to call Vivienne to come and talk to you about everything you just told me?\" he asked, sympathetically. \"Or we can talk more about it tonight, when I get home. Nothing you have said has made me love you any less. If anything, I just love you all the more for finally being honest with me about Marcella,\" he smiled softly and kissed her. \"I'm sorry, but I have to go. We need to find her before Noah loses his mind again. He cares about her more than he admits, you know. He'd be out looking for you if you disappeared and I was losing my mind,\" he said, knowing that his brother would leave no stone unturned for him.\n\n*****\n\nNoah fumed silently. Every single nerve cell in his body told him to go after Marcella. The fact was, however, that he was scared of what he might do to her when he found her this time. He'd practised restraint with her for so long. He had convinced himself that the attraction between them was just a fleeting chemical thing, that his one destined woman was just around the corner. He had told himself that she was a complication that he didn't need in his life, so he had always kept that barrier between them, fed by anger and disdain for her reckless and badly thought out plans. He had cared when she did such stupid things, of course he did, but he would care if his sister or any of the women he knew well acted with the same disregard for the risks they were talking. \n\nThe fact that he now knew that she was his, his one, the woman who could, if she so chose, make his life complete made the darker side of his nature want to take her and lock her in a room and make her submit to him in every way. An image of her asleep last night in the room across the hall, looking small and fragile in the big bed, came to mind. Had she only been pretending to sleep? Had she heard what he said to her? If she had, how could she leave? He'd all but declared himself to her. He'd also berated her for her reckless behaviour. He sighed audibly. His thoughts chased each other around in his mind as he sat beside Dominic, pretending not to care where she was or what she was doing. The truth was that he was scared of what he might do to her when he found her this time, and he kept that carefully hidden behind that disregard. There was only so much of her risky and reckless behaviour that he could take before he broke and did something they both regretted.\n\n\"Sounds like she's never had anyone care about what she did or whether she got hurt before,\" Dominic said softly along the bond they shared. \"You should read the report Gideon sent you. It explains why she might believe that.\"\n\n\"You read it?\" Noah asked.\n\n\"No, that's what Gideon told you, remember? He was pretty vocal about his disgust for your present behaviour,\" Dominic chuckled. \"You can pretend all you like with your brothers and the others, but I'm in your head. Maybe you shouldn't be scared of what you might do. Maybe you should just do it, because it might be what she needs to finally realise that someone cares, really cares, that she is safe.\"\n\n\"You honestly think locking that girl in a room and beating some sense into her is what she needs?\" Noah shook his head. \"By the sounds of it, that's all anyone has ever done to her. I don't want to be yet another sadistic man in a long line of them.\"\n\n\"Not quite,\" Dominic said calmly in the face of Noah's cacophony of confused emotions. \"Painful pleasures, blended with tenderness and true caring actions and emotions, are quite a different thing to beatings doled out as punishments, even if they do include forced erotic highs. It's the tenderness of a loving relationship that makes the difference between sex as a tool to get what you want and sex as an emotional bond.\"\n\n\"I can't trust myself with her right now. I am beyond angry that she has done this again. If they found her right now then it is better that I am not there to do, or say, anything the family, or I, might regret,\" he said sadly. \"Better they think I'm the asshole. Besides, you're supposed to be practising using your words and voice to talk to that woman who has sat here all day, holding your hand.\" Dominic groaned and turned to face a worried-looking Emma.\n\n\"He's not the asshole,\" Dominic said softly to Emma.\n\n\"I know that,\" she laughed and turned to face him. \"We all know that, Noah. Of all of us, I am more likely to be named the biggest asshole in this family before you. Gideon was just trying to shock you into action, and it didn't work. He'll be back with another trick because that how he is. He gets things done by swings and roundabouts. He pushes and goads people in the direction he wants them to go, usually with humour, rather than anger. Anger and harsh words are usually Genesis' go-to. He's harsh with the truth, because he expects the same perfectionism from others that he has. You fall between them both. You're all smoke and mirrors; the same expectations are there but...\"\n\n\"He hides his true agenda and self to some degree, until it has to be revealed,\" Dominic added in a stilted voice.\n\n\"Exactly,\" Emma nodded, and Noah had the feeling that this was not the first time the couple had had this conversation.\n\n\"Well, if you two are going to talk about me, instead of to me, I think I'll take a walk.\" Noah rolled his eyes, not denying what they said. He wasn't even sure his brothers really knew him well anymore. \"I'll go and let X know you miss his ass.\" Noah winked at them both. He was done brooding. It was time to deal with the fallout of Apollo's banishment from Darwin and the other subsequent fallout. Even if they couldn't locate Marcella, they still had to deal with the incident between the Tables men.\n\nNoah shoved his hands into his pockets, walked to the end of the corridor and veered off to the room his family had taken over as a base of operations yesterday. He paused and stepped into a small waiting room in the corridor and brought up the report Gideon had sent him. His eyes scanned over the document, and he felt physically ill. They had all misjudged and misunderstood her attitude to some of the expectations they had of her and her sister. He closed his eyes and clenched his fists. More than ever, he just wanted to take her and put her somewhere safe, until he could make her trust him enough to do what he asked and not put herself in harm's way. \n\nWhen he walked into what they had dubbed the war room, it was Zanto that he saw huddled over the computer before the monitor, while Xavier spoke in hushed tones on the phone to someone. Curious, Noah moved around the desk to see what held all of Zanto's attention, before looking up at Xavier and raising an eyebrow.\n\n\"Dante Donati,\" Xavier mouthed the name in explanation, before moving away to continue the conversation. \n\n\"Bingo!\" Zanto exclaimed. \"That's an awesome program CJ. Thanks for sharing, man!\"\n\n\"You got her?\" CJ asked through the weblink.\n\n\"We know where she is staying, so it will only be a matter of time. Let me get someone over there,\" Zanto said, his fingers flying over the keys. \"If you're right about the alias, it will only be a few minutes.\"\n\n\"Don't pick her up straight away,\" Noah interrupted. \"Put watchers on her from a distance. The fact that she is still in the city, when she would know we would all be searching for her, means that she has something important to do. Let's see what it is,\" he said, furrowing his brows.\n\n\"What are you talking about?\" Zanto shook his head. \n\n\"Marcella? You found her?\" Noah asked, suddenly unsure if what he assumed and what was happening were the same thing.\n\n\"CJ Donati does a daily scan for names associated with Nikita Mariskov and derivations of that,\" Zanto said, distractedly, as he scanned the various views the camera afforded him. \"That was the alias Veronica Donati used after she murdered the guard and fled the Battaglia complex.\n\n\"Marcella was associated with Nik?\" Noah asked in confusion. He knew that she had been at the compound in Canberra at the same time but not that they were associated in any way.\n\n\"Not unless she is using an alias. When they hacked into all of Veronica's accounts and personal devices, there were four names she had in her contacts under her assumed name. No one had ever been able to locate the women on that contact list. There were only a few emails in a network of sorts, but it all disappeared once Veronica Donati died. Until today, when one popped up in Darwin. Hence the Donati presence now, in our war room,\" Zanto explained distractedly. \n\n\"It could be Marcella. She was in Canberra at the same time as Nik,\" he admitted. It was too much of a coincidence that Marcella ran away from them on the day this woman pops up on the radar, for the first time ever. Noah watched the monitor as Zanto hacked into the surveillance cameras within the StarCity Casino complex.\n\n\"It's no good sending anyone in at the moment, because we don't even know what she looks like,\" Zanto said frustratedly, not even sure what he was looking for as he flicked through the surveillance cameras. \n\n\"It's too much of a coincidence. Get someone to show the concierge Marcella's photo, and use the alias. See if they recognise her or know where she is,\" Noah suggested.\n\nZanto looked at Xavier, who nodded in confirmation, and his fingers sped across the keyboard again, giving new orders to those who were closing in on her location.\n\n\"Just send in the one guy. We don't want to spook her. If it is Marcella using an alias, the Donati family have nothing to worry about. Besides, this is probably our best chance to find out who is helping her and from whom she is getting her information about the Suebi. I still don't fully believe the story that she gave us about finding the boat, even if the evidence says otherwise,\" Noah explained.",
        "\"If it is her, are you sure that you want her hanging out there like bait, just so we can find her source?\" Xavier asked, sceptically.\n\n\"If we've got eyes on her, she will be perfectly safe,\" Noah said, though his voice didn't sound as confident as his words hoped to convey. \"Just tell the men to cover all the exits and not go in until we confirm, one way or the other,\" Noah commanded, his every instinct telling him that this was Marcella they were looking for on the monitors.\n\n\"Okay. Do it,\" Xavier agreed. \"Let's confirm whether it's her or not first, He's the Oracle and chances are he's right.\" Xavier gave Noah a small grin, showing that he understood it was more than just speculation for Noah.\n\n\"Yeah,\" Noah reluctantly answered his phone, keeping his eyes trained on the screen that now showed a multi-view of the cameras from the various common areas of the StarCity Casino.\n\n\"Hey, about that report,\" Genesis said tentatively. \"Did you read it?\"\n\n\"No,\" Noah bit out in frustration, deliberately lying to his brother because he didn't know how to deal with the emotions it brought up in him yet. He wasn't ready to talk about it yet, and he had far bigger issues to deal with right then.\n\n\"Look, I know you're fucking pissed off at the world right now, but just listen for a second. I read it and spoke to Olivia. If Marcella heard you say that the Battaglia were coming, she would have run, and no one could have stopped her. It wasn't you or us that she was running from. Can you understand that? She's scared, Noah. She's running because she is scared of them taking her again, not to shit all over what we have done, or were doing for her, but to survive the only way she knows how. On her own. She doesn't trust anyone else. The people she should have been able to trust let her down consistently. Her parents, her friends, her teachers, her family doctor, even her sisters.\" He sighed, having to admit that about Olivia. \n\n\"Her doctor?\" Noah frowned as he spoke.\n\n\"Read the report. Fuck, even I feel guilty for not looking into why Olivia is determined to keep away from Marcella, unless someone else is there as a buffer. I even encouraged it, but it was never Marcella's fault, and I took her attitude toward our relationship as a personal insult, instead of trying to understand her. I was wrong,\" Genesis admitted.\n\n\"You? You were wrong?\" Noah gave a mirthless chuckle. He was stunned by his little brother's admission. \"Fine, I'll read it when I get a minute. I have to go, something's come up, and it's all hands-on-deck here. See if you can find Gideon and calm him down. He looked like he was going to murder someone earlier, possibly me,\" Noah suggested and closed his phone, ending the call.\n\nA photo had flashed up on the screen from the watchman sent in to speak to the concierge. The woman looked younger than Marcella. Where Marcella always looked stylish in expensive designer clothes and high heels to add to her diminutive height, this young woman wore no makeup, her hair surrounded her head and shoulders in a messy riot of curls and she wore a tight tank top and shorts so short that you could see the cheeks of her ass at the bottom hem of them. To top it all off, she wore Chucks. Marcella never wore flat shoes, and even though the photo didn't show her face, Noah sighed, believing his instincts had let him down for the first time in his life.\n\nA second photo came through from the front view, but her wild curls obscured her face, and she wore sunglasses. The clothes she wore, however, should have been proof enough for him. Marcella would never wear something so casual and revealing. She rarely showed that much skin. He was about to admit it wasn't her when a third photo popped up with a full-frontal view. She wasn't looking at the camera but, with her sunglasses pushed up on her head clearing the unruly hair from her face and exposing her eyes, Noah sucked in a breath and stared at the woman he thought he could fall in love with. It was her and she was hiding in plain sight.\n\n\"No way that's her,\" Zanto murmured incredulously, enlarging the photo to see the face better. \"I mean, look at her!\"\n\n\"It's her,\" Noah confirmed in an incredulous whisper, and she looked so fucking hot dressed up as a typical tourist on holiday that he felt his cock twitch at the sight of her. She was a gorgeous, sophisticated woman at any time, and his attraction to her had always been obvious, but to see her like this, her hair riotous, her face imperfect, her sexy little body on display in the skimpy clothes, made him want to grab her and give her the fuck she so obviously needed. Or maybe it was the fuck he needed, when he saw her like that, casual and relaxed looking. He drew a deep breath, considering his next step now that they had found her.\n\n*****\n\n\"Okay, we are all here now,\" Gideon grumbled and embraced his wife, who had walked in with Genesis. He was beyond frustrated but he needed answers, and this was the only way he could think of to get them. He had thought that having his father with him would carry more weight with Madrina and the Tatar woman, Imelda, but he had been wrong.\n\n\"Why are we all here?\" Genesis asked, frowning, his frustration looming as large as his brother's, if not larger, because of the guilt he felt at not following through properly on his investigation of Olivia's past beyond Remington Royce and the Suebi who threatened their world at the moment. \n\n\"I want to find out what Imelda said to Noah yesterday, and why Marcella left without a word to anyone after promising to stay,\" Gideon growled, his mood from earlier that morning not having dissipated yet. \"I want to know if Imelda knows where Marcella is right now!\"\n\n\"There are several reasons why you are all here, and yet Noah is not,\" Imelda said softly. She spoke softly on purpose, so that those around her would quieten to listen properly. \"Firstly, the information Vivienne has shared, which was not hers to share with you, will do irreparable harm to the one relationship Marcella valued with the people in this room, should she discover the betrayal. It is you, Vivienne, who will suffer the most, if Noah does not convince her to trust him in time to stop was has been put in place,\" she sympathetically chastised Vivienne. \n\n\"Vivienne only did what she did because she loves that woman like a sister. She did what she thought was right!\" Gideon defended his wife. \"How could we have known the extent of her...\"\n\n\"The extent of her what?\" Imelda asked when Gideon paused to find the right words. \"She has dealt with the abuse in her past better than most women in similar situations could possibly hope to deal with such trauma. She has found a resilience within that allowed her to overcome a great deal, and become independent. She is not a masochist looking to be beaten out of some sense of not being lovable, or worthy enough to be loved by anyone, as many women like her become. Nor is she so detached from those around her that she doesn't care about the world or the people in it. She fights for women like herself in her career, and every day, in every opportunity she gets. Tell me, the extent of her what... and why should it matter now, Gideon?\"\n\n\"The extent of the abuse in her past,\" Gideon finished lamely. \n\n\"Why should that matter?\" Imelda repeated herself. \"It doesn't affect adversely how she interacts with you or your loved ones. If anything, your knowledge of it has only affected the way you now interact with her. Something, I assume, she wanted to avoid, by not telling you anything about it,\" Imelda shrugged. \"It is her story, and you have no right to judge her, right or wrong, for it now. You should judge a person on their current actions alone, for they tell a far better and more believable story of who they are than a past shrouded in misery and distrust,\" Imelda said in the same soft tones.\n\n\"In that case, currently, her actions and words have been nothing but argumentative and belligerent. She doesn't seem to get along with anyone, aside from Vivienne,\" Genesis pointed out.\n\n\"I see. So this woman, who gives up her career, and defies a directive from her parents to ignore the fact that her sister may have been found alive, to ensure that she is actually alive and safe from the people who would harm her, is condemned because she is suspicious and distrustful of men who live by Table law, laws which destroyed her early life,\" Imelda asked, in a non-threatening way.\n\n\"We couldn't have known that!\" Genesis argued.\n\n\"Olivia did, but she chose not to speak of it, despite the tension you hid from her, and the fact that you all allowed her to act like a spoilt child and treat her sister badly,\" Imelda responded gently.\n\n\"Olivia had been through a dreadful trauma of her own,\" Genesis snapped angrily.\n\n\"I am sure Marcella understood that, which is why she stayed for her sister, despite the fact that she placed herself in harm's way the moment that she traded on her family name, which she had, for all intents and purposes, abandoned, so she was no longer subject to family law,\" Imelda said. \"Fear often comes out as aggression when one doesn't know how or where to channel it. The moment she put herself at the mercy of family law again, however, both her father and Apollo began to make plans for her future.\" She held up her hands before they could defend themselves again. \"You can't have known that though, even with all of your reports. You could have only known that part of her story by being her friend, and allowing her to see more than another family with archaic laws and another man trying to control her sister.\"\n\n\"Fine, I'll admit I ignored the signs that something was wrong because I was distracted by what I needed to do to bring Olivia back to the land of the living,\" Genesis sighed. \"I can't change that, but I can do better now that I understand. Do you know where she went when she left the hospital?\"\n\n\"Noah has found her, with the help of those who love him enough not to judge him when he stops to lick his wounds,\" she eyed Gideon sternly. \"Now we wait and do not interfere with what he must do,\" Imelda said, tightly. \n\n\"Like hell!\" Gideon shouted. \"We're his brothers, we're the ones that love him. We're the ones who should be helping him.\"\n\n\"Yet you are here, after telling him how disgusted you were by his need to take some time to understand all that had happened to her the evening before? Perhaps supporting him and asking him why he needed some time might have been more productive, but again, that fell to those who love him without judgement,\" Imelda pointed out. \"The very people that have helped him find her today, because they all support each other, instead of seeking their own answers elsewhere.\"\n\n\"That's unfair. I called my family together to help him,\" Gideon's voice rose with his emotions as he felt attacked.\n\n\"Yet you did not bring him, or suggest we meet at the hospital. where he could be part of the solution?\" she asked calmly. \"Perhaps the idea was not yours alone, but another's, who does not understand the dynamics between you and your brothers before two of you found your loves?\"\n\n\"Vivienne had only the best of intentions. She loves Marcella,\" Gideon boomed, coming to his feet, his deep voice made loud by his roiling emotions.\n\n\"Sit down,\" Armando roared over the top of him and, as Gideon sat down, he sighed. \"I understand why you wanted to meet here, rather than somewhere more public, lady.\" He bowed his head in genuine respect to Imelda. \"Madrina, I am sorry that we have brought this into your home. Perhaps you and the other ladies might enjoy some tea while I speak with my sons?\" He watched quietly as the ladies went into the kitchen.\n\n\"You know that I've never had to worry about Noah. He's always been the one who bailed you two out of trouble, not the other way around,\" Armando chuckled. \"Gideon, your heart has always been too soft and easily hurt. You are so quick to anger but just as quick to forgive and forget. That has been a godsend for your mother at times,\" he admitted. \"You are also quick to diffuse emotional situations with humour and diplomacy. So to see you like this tells me that finding your love has made you even more susceptible to those emotions that lie so close to the surface. You are influenced far too heavily by that love, but you will learn to manage it in time. Take a breath and step back from the situation. Separate yourself from Vivienne's emotions and you will see that Noah deserved better from you this morning, if you don't already.\"\n\n\"And you,\" Armando shook his head at his youngest son. \"You walk around as if you don't need approval from anyone. You never have. Mr Independence, you did it your way whether it was the right way or not. You obsessed about the causes you cared about, and the woman you love is no different, but that obsession has made you selfish and blind to the cares and struggles of your brothers and cousins.\" Armando paused, but neither of the two brothers spoke as they took the rebuke from their father. \n\n\"It is not your fault, and no one would blame you outright for your lack of tolerance and understanding. We have all been there. When you find your mate, your love, it's a wonderful experience that makes you want to forget everything else and just be with them. But to Marcella, the two women that she cares about are buying into family law hook, line and sinker, without knowing how they can be destroyed by it as easily as they can be loved, by the demands of our family,\" Armando continued his lecture.\n\n\"I get that she doesn't trust us and I get why. I called this meeting to get Imelda to find Marcella. I don't want her out there on her own, thinking we don't care or that we would send her away with Apollo or the Battaglia, just because she didn't always do things the way we would have liked,\" Gideon argued.\n\n\"You both need to step back and let Noah work his way through this. Would you have stood by as Noah took over the care and decision-making for Olivia in the beginning, when she wouldn't talk? Would you have let him go to the Papillo on your behalf when Vivienne fled, Gideon? He was there for both of you as soon as you asked for help, when you discovered the reality of your curse breakers. He never took over or judged you for the way you handled claiming that love for yourself. Now it's your turn to wait until he asks for your help. I assume that's why we are here, rather than where Noah and perhaps Marcella are right now. So that we don't interfere any further and destroy what small chance he has to make this right again,\" Armando said sadly.\n\n\"She said Noah found Marcella already,\" Gideon pointed out. \"So, everything can go back to normal now. Anthony told the Battaglia to discipline Apollo as they saw fit, once he faced a panel armed with the witness statements. There is no threat to her, anymore.\"\n\n\"You didn't listen to Imelda properly, my son. You missed the point entirely. Noah found Marcella with the help of people who love him enough not to judge him for his choices. In fact, they look to him to make those decisions, instead of telling him how to feel and act,\" Armando reminded Gideon, who felt the sting of the verbal slap he had been given. \"Did you realise that the moment Noah shared his concerns with Xavier yesterday, when he heard of the accident, they went into action, not for him or on his behalf, but with him? Noah had questions, and Xavier helped him find the answers. Have either of you even taken the time to just listen to what Noah needed or wanted to do?\"\n\n\"I did, but he was in denial,\" Gideon blustered. \n\n\"Because he isn't sure and things are changing for him rapidly. He is so busy trying to be all things to all other people that he hasn't listened to his own heart about what he wants and needs, so he quite plainly would be confused about the assumptions you were making without listening to him. What did he say when you confronted him? Was it absolute denial or confusion?\"\n\nGideon thought about this. His father was right. Noah had said that Imelda had confused him with the conversation at the hospital that morning. He'd told Gideon that directly when he had dropped Apollo off at the hotel. It was just a dreadful day for his brother, he could see that now, in hind sight. Then to have Marcella leave without a word to anyone, when they had been defending her, and banishing Apollo from their city, would have gutted him. Regardless of her reasons why. Gideon scrubbed his hands over his face. \n\nNoah was so supportive of everyone. He had a quiet ease, and just his presence could be a calming influence at times. Even as the Oracle, he had just slotted into a role that was difficult to fill, while the man everyone loved underwent surgery and treatment. It was true he'd let Vivienne's near hysteria affect him when she had found out that Marcella had left without a word. He had needed to find her, not for Noah's sake, but for Vivienne's, and he had, in some ways, blamed Noah for not being as invested in finding her as he was. It was a bitter pill to swallow that he had been the asshole this morning, not Noah. He looked at Genesis, who sat silently beside him, looking as if he was thinking the exact same thing.\n\n*****\n\nIt was a difficult conversation to be having, but Noah had insisted on including Dominic because he knew how invested he already was in the situation, and being left out would make him feel his illness all the more keenly. Dominic struggled to get the words out so that Xavier could hear him, while his thoughts projected at a much faster rate in Noah's mind. The brothers, though, seemed to have their own telepathic connection, and Xavier could often finish Dominic's thoughts for him as they discussed Noah's plan. \n\nThe fact that Marcella hadn't left town gave him hope, and a plan had formed in his mind to win her trust and bring her back to the family, voluntarily. She'd driven herself out to Palmerston, after renting a car under an alias that she had obviously used in the past, judging by the fake ID and credit cards she had under that name. But after driving that far from the centre of town, she had turned around and come back, and Noah thought he knew why. His plan now would be to play on that assumption and negotiate with her, while attempting to win her trust. He just needed Xavier and Dominic on board with his plan. \n\n\"And what if she says no?\" Xavier said, after they had considered Noah's initial sketchy plan.\n\n\"Then plan B goes into effect and we let the watchmen do their thing, but I'm hoping she will take my proposal. I can be pretty persuasive when I try.\" Noah gave a small smile, born of the tiny spark of hope he felt. \"If she were staying just to be close to Olivia, she wouldn't be hiding out under an alias. I'm positive that she is close to finding some evidence to back up Olivia's story of events, and she won't leave until she gets it. Her text this morning said to tell her she would keep her promise. The promises she made were to Olivia.\"\n\n\"The AFP will be looking for her as well, and possibly the remnants of the Suebi, if that is who she is going up against to find the information she wants. She's playing a dangerous game, and it will be hard to keep her under the radar of everyone who is looking for her. We found her easily enough.\" Xavier spoke with the occasional word and gesture of agreement from Dominic. \n\n\"Did we though? If Dante hadn't called because CJ found an anomaly in his daily scan, would we have found her? Look at the picture and tell me honestly if you would have guessed it was her at first glance?\" Noah argued.\n\n\"True,\" Dominic said. \"I think your plan has more chance of success than dragging her back here and putting her under house arrest until she tells us what we need to know, given her background.\" \n\n\"Dom's getting tired, and talking this around in circles won't change the situation. Can you keep the watchmen at a distance, and let me try to help her do whatever it is that is keeping her here, and then we can bring her in and make sure she understands that she is safe with us? She won't feel safe if we drag her back kicking and screaming, and she isn't safe doing this alone. Let me try it my way, for a couple of weeks at most,\" Noah said calmly, although now that he had a plan, he was desperate to get started and was trying to temper that desperation so it didn't come out in his voice. \"I need your help. Do this for me, please,\" he finally said, quietly.",
        "\"We were always going to help you, dumb-ass,\" Xavier chuckled. \"That was a given.\"\n\n\"The puzzle master over there was just trying to work out all the logistics and ways to improve your plan,\" Dominic said stiltedly, teasing his brother. Twenty-four hours after the surgery and Dominic was recovering quickly. He was still unbalanced on his feet, but he was able to get up and walk to the bathroom with assistance, and his speech patterns were improving. The fact that Noah and Xavier had included him in this conversation went a long way to feed his determination to get out of hospital and back into his daily life as soon as possible. The tumour had been small and non-aggressive, and his prognosis was good. There was no reason that he couldn't step back into his role within the family as soon as he felt up to it. That would allow Noah the freedom he needed to pursue this woman, in what had to be the only approach that had a chance of success.\n\n\"Thanks.\" Noah sighed with relief and shook his head. \"You couldn't have just said that earlier, instead of continuing to pull the plan apart?\"\n\n\"You have to pull things apart and put them back together to see how they work, and if improvements can be made,\" Xavier waved his hands. \"Go do your thing before she realises we've found her and I'll take care of the rest. Papa is in the hospital, Dom can get him here in less than a minute. I reckon that by the time you get to StarCity you won't even see a hint of the watchers.\"\n\n\"Not fully gone, just pared down and pulled right back,\" he confirmed.\n\n\"Trust us, we got you, Noah.\" Dominic landed a large paw on his shoulder and squeezed. \"Just like you've always had our backs.\"\n\n\"Thanks,\" he said and stood. \"Gonna go do my thing then.\" He chuckled nervously and caught himself. He didn't get nervous. He always knew exactly what he wanted and how to get it, and that allowed him to have supreme confidence in everything he did. Except when it came to this reckless, unpredictable woman. He strode purposely down the hall, making himself keep his pace even and slow. Not that he was walking slowly, but it felt slow when he wanted to break into a jog, or even a run, to get to his car and start his preparations. \n\nNoah thought about what he would need, as he continued this slow pace to elevator and down through the car park. He had stops to make first, but they should only take a few extra minutes. He gunned the engine of his car and squealed out of the car park, with a feeling of satisfaction at the sound. He had a plan and it was going to work, or he would kill himself trying.\n\nThanks to a call from Xavier, by the time he got to their Table's base of operations Quinto had started gathering all the things that he might need for Noah to choose from, and gave quick explanations for each. He considered each and knew that he would need to make extra stops to those he had planned, but to make this work the way he wanted, he didn't really have a choice. \n\nIt took him almost two hours to gather everything he needed, go home, change and pack a bag, and then make his way to StarCity. Pulling into the valet parking, he grabbed his duffle bag from the boot, leaving his other luggage behind as he handed over his keys. Like Marcella's alias, Stevie West, Noah had disguised himself in casual touristy clothes and sunglasses. He chuckled, wondering if the lack of a suit would make him seem as different to her as she had to him, when he had seen her on the camera.\n\n\"Mr Valente is waiting for you at the concierge desk, Mr North,\" the valet said respectfully, and then disappeared into the car and drove away, before Noah could respond. His mouth curved into a slight smile. Xavier had been as busy as he had been, it seemed. It was strange, he thought, walking through the big doors, that it was not his brothers who had set all of this up for him, but they had their own issues to deal with where Marcella was concerned, and would have wanted to be more involved, rather than allowing him the space to do what he needed. Guilt needled at him for a moment, but he strengthened his resolve to try to make this idiotic plan work and approached the concierge desk. \n\n\"Ah, Mr North, so good to have you with us at last. We have your room, which adjoins that of your fianc\u00e9, all ready for you. The reservation and booking have all been taken care of by our mutual friend. If you would like to follow me, I will show you the way. Miss West is resting in her room this afternoon, should you be looking for her.\n\n\"Thank you, Mr Valente. Your hospitality is most appreciated,\" Noah said. as equally formally as the concierge.\n\nGlancing down at the small envelope-like card he had been given, Noah flipped it open with his thumb and noted the key to his room, and the one beside it, and allowed another ghost of a smile to curl his lip. So far so good. He stole himself against what he would now have to do, and the fight that was coming his way. As he opened the door to his room, the concierge showed him around, making sure that he pointed out the adjoining door and how to unlock it, explaining that it would need to be unlocked on both sides for him to access the room that way. He also explained several other specific features of the room, with a grin, before wishing him well. \n\nDuring the quick tour, the adjoining door had been silently unlocked, so that it would only take him unlocking it from the other side to be able to access the things that he had no doubt he would need. Still, he hoped he wouldn't need anything to convince her to work with him, not against him, this time. No time like the present, he thought, and, placing a few items in the large pockets low on his cargo shorts, he stepped out of his room and walked the half a dozen steps to Marcella's room. Bracing himself, he took a deep breath, and using his key, he swiped and quickly opened the door, stepping into the room and leaning back against it to make sure it closed. Her head swung around from where she had been reading on the couch and her eyes widened at the sight of him.\n\n\"Hello, Stevie,\" he purred in a deep voice, then grinned, and realising that she was momentarily frozen in shock or fear, he approached her. Her deer-in-headlights moment was just that, a moment, and she was up and running toward the balcony, not bothering to say a word. He had guessed this move, and he cut her off, gathering her in his arms with her back to his chest. \"Not even a hello when I've gone to so much trouble to find you and make sure that you're safe?\" he asked. It was the truth, but for some reason, he couldn't help the teasing tone in his voice. \n\n\"Let me go, Noah!\" she hissed, and when his arms tightened at her continuing flailing, she spoke again. \"Why are you here? What do you want from me?\" she spat, still struggling against him, albeit only a token gesture, once she realised that he was not letting go and was far too strong for her to win in a physical battle against him. \n\n\"I needed to know you're safe and well,\" he said calmly. \"You left the hospital with a severe concussion on a hot and humid day. I was concerned that you might not be looking after yourself properly. Have you been drinking enough water, Stevie?\" The concern in his voice was real as he spoke quietly into her ear and breathed in the scent of skin and hair. \"By the way, I like the new look you have. Are you planning on keeping it? It takes years off your age. Did they card you when you booked a room, Stevie?\"\n\n\"I can look after myself,\" Marcella spat. \"You can stop calling me Stevie. How did you find me?\" She sounded resigned now, as she accepted that she had been found, even with her full alias package in play. \n\n\"By chance, actually. I was looking for someone else when I saw you here. I almost didn't recognise you. This is quite the disguise. I think I could like getting to know Stevie better,\" he chuckled, and audibly breathed her in. It wasn't a lie. They had been looking for Stevie West, they just didn't know it was Marcella. \"I'm sure that every other red-blooded male who saw you by the pool today thought the same thing,\" he teased.\n\n\"Who else is here?\" she asked, and he noticed that her voice had turned breathy. He was unsure if she was trying to play him, though.\n\n\"No one. We tried to do the right thing and look after you, keep you safe. Anthony banished Apollo and sent the Battaglia men packing. Did you know that? No, because you didn't bother to stick around to find out that you can trust us to look after the people we care about.\" His voice deepened to a growl, despite himself. He didn't want to do this yet. He didn't want to have this fight so soon, but his rage bubbled up in him. \"We aren't the enemy here Marcella. we never have been.\"\n\n\"So, what do you want then?\" She tried to gently wriggle from the arms that banded around her body, holding her tightly against his hard body.\n\n\"I want to talk to you, and I want you to listen for a change. No one else is coming, no one knows I am here. I told them that I needed to take off for the afternoon, after the drama last night and searching for you all morning. They don't know I found you. They are all looking outside of the city and covering the transport routes,\" he lied easily. It was his first real lie to her. It was a necessary lie, but he didn't like doing it. \"I'm afraid finding you has become a high priority because of the involvement from other Tables in your accident.\"\n\n\"Who were you looking for, here?\" she asked, and when he stayed silent, she prodded. \"When you found me, you said you were looking for someone else.\"\n\n\"Someone who could help me with something I need to get done, it's a personal matter,\" Noah said evasively. He had been prepared for this and had an answer for her, but he wasn't sure he wanted to lie any more than he already had. That would defeat his whole purpose for his plan to get her to trust him. \"Will you stop trying to run for a few minutes and talk to me, or do I need to tie you to a chair to make that happen?\" he asked.\n\n\"Do I have a choice?\" she hissed, though she sounded calmer to him than she had been moments ago. \n\n\"Yes, we can sit comfortably on the couch and talk like reasonable people, or I can tie you to a chair and talk until you have heard me properly, instead of assuming that you know me and what I want,\" he grumbled, close to her ear. \n\n\"Fine, I'll talk,\" she practically barked at him abruptly and tilted her head away from his mouth, his warm breath and crooning soft voice confusing her as she squirmed for freedom in his arms again. \"Just put me down. I don't have anywhere else to go now, anyway.\" \n\nNoah relaxed his arms, running his hands down her arms until he captured one wrist, still not entirely trusting her. Then he pulled her toward the couch and sat, not letting go of her wrist, even when she tried to pull it from his grasp.\n\n\"I think we need to build trust, don't you?\" he asked, tightening his grip on her wrist as she yanked it away, trying to dislodge his hold on her. \"The offer to tie you to a chair still stands, if you dislike my touch so much.\" He smirked at her.\n\n\"I bet you'd like that, wouldn't you? Having me all tied up and at your mercy.\" The anger in her voice had dissipated, and she looked up at him with hooded eyes as her voice turned into a husky purr. \"I bet you'd like to punish me for running away, too. Tell me, Noah, what's your weapon of choice?\" she purred, moving closer while using the hypnotically sexy voice. \"Do you like to tie women up and use a crop or cane? Or are you more of flogger and whip man? Do you make them call you Master while you punish them for their crimes?\" Her lips were just centimetres from his now. He was more than a little aroused by her display, and he considered letting her kiss him briefly, but instead chuckled, making her blink those hooded eyes wide as she stared in disbelief at him.\n\n\"Sounds like that's what you want, Stevie,\" he continued to chuckle. His grip tightened around her wrist until he saw her wince. \"But you will have to do better than that to distract me. I just want to talk to you and make you an offer. Whether you take it or not is up to you, but at this point, it is probably the best offer that you will get from someone who is in a position to help you deal with the problems you are facing.\n\n\"Fine, talk.\" She threw herself back into the couch petulantly, making him chuckle all the more. He really did like this Stevie persona she had going on. \n\n\"Okay, then here's how I see it and you can correct me if I am wrong,\" he began. \"You don't want to go back to Perth yet for two reasons. First, you haven't finished what you set out to do for Olivia and secondly, because, in order to come up here and receive our goodwill to help your sister, you had to reclaim your family name, and everything that came along with it, including Apollo Martino. That's why you asked me to pretend to be dating you in the beginning, so your father wouldn't tell him you had taken your name back. True?\" He paused so she could argue the facts if she wanted.\n\n\"Close enough.\" She waved her hand, as if she didn't care that he understood her motivations. Then, to Noah's surprise, she began to talk and explain a few things. \"Although I had concerns about my mother, and what my father might do to her if I didn't do as he asked and come home after identifying Olivia as a fraud.\" She added in a resigned voice. \"I didn't even consider Apollo. We'd moved on, or so I thought. We still saw each other on our birthdays, or at least spoke, but that's it. We were friends who had shared a close bond once. He doesn't want to marry me. It was probably just some weird alpha-male way of trying to protect me.\"\n\n\"I think you're wrong about that, but while you stay in Darwin, you won't have to deal with him,\" Noah said. \"Anthony has banished him, and he will face a panel at the Battaglia with the evidence we sent them. You may not believe that he would hurt you, but from the other witness statements, not just Val and Fab, he looked angry, and he threw your arm up as he let it go, pushing you further than you might have gone otherwise.\"\n\n\"I guess that could have happened,\" she said. \"I never believed Apollo would just straight up push me in front of a car, but an accident like that, where he didn't mean to do it, or even realise how far I would stumble,\" she shrugged. \"Maybe, but it was an accident. I still don't believe he did it on purpose, no matter what else he did to get banished.\" She didn't believe he would be banished for accidentally pushing her.\n\n\"Okay, back to the first reason you're here. Olivia. I know you well enough now to realise you stayed in the city because you have something going on and you need to be here. You're biding your time until you can pull it off, and had hoped to hide out here for a few days. True?\" He paused again to let her speak, hoping she would continue to be as open with him as she had been about Apollo.\n\n\"Why do you even care what I do? Why can't you just leave me alone and let me do what I have to do for my sister?\" She reefed her hand from his grip, and he quickly captured the other wrist, pulling her closer, so that she tumbled into his lap, looking furious and ready to fight like a wild cat. He grabbed the other wrist, holding her arms by her sides, before she could hit him.\n\n\"Well, that answers that question,\" he said. \"But I need you to listen to me. I haven't even made my offer yet!\" He tried to keep his voice calm, but it was hard with her struggling against him and looking and smelling as unbelievably sexy as she did right then. How had he gone so long without touching her? How had he turned her down that first night, when she had offered more?\"\n\nHe couldn't get her to stop fighting him, and it became harder and harder to control his own impulses. In the end, he leaned over her and kissed her, brutally mashing his lips against hers. She stilled her movements, stunned by the force with which he kissed her. Feeling her soften against him, Noah took that moment to let go of one of her wrists and stroke her jaw while he ran the tip of his tongue over the seam of her lips, trying to coax them apart. Noah felt Marcella tense as her senses came back to her, and he sat back up, regathering her free wrist in his hand.\n\n\"Are you ready to listen to me now, or should I get the chair?\" he asked with a smile. Then Marcella did something completely unexpected. She sat up and kissed him back, this time deepening the kiss on her terms. Noah retained his grip on her wrists, pulling them behind her back so her body melded flush against his as she kissed him. \"Fuck!\" he whispered as she leaned back, breaking the kiss.\n\n\"Not yet, finish what you need to say to me, and then we'll see,\" she said haughtily with a smug grin, flexing her wrists to test his grip on her, and his determination to have this conversation. \"Maybe it's you who will be tied to a chair,\" she challenged, fully prepared to use any means to get what she wanted from this conversation.\n\n\"Let the games begin,\" he chuckled. \n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "escape",
        "runaway",
        "brothers",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-16"
}