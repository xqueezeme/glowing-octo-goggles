{
    "title": "A Slave to the Servants Ch. 35",
    "pages": [
        "Hello Lit!\n\nMany thanks for all the well wishing! My little girl is happy and healthy. She was born 9 lbs 15 oz and 21 inches, I breed 'em big!\n\nMany thanks to Steve150177 for his tireless efforts to make the story shine! I am very grateful for the time he puts into this.\n\nI am WAY behind reading comments and feedback. Infants are time consuming, it seems, but I'll get the hang of it! I love knowing what you all have to say - good or bad.\n\nI anticipate the next chapter will be out July 11 or July 12.\n\nThanks to everyone and please remember to vote and comment!\n\nChapter 35\n\nThe day dragged on and I felt more and more excited as the time passed. I could feel my connection to my family getting stronger. Still there was a...reservation resonating though the bond. Something had the men feeling uncomfortable as they neared home. Their happiness was tempered by this hidden concern.\n\nI knew the discomfort wasn't a serious injury to one of them. I could begin to detect each of their individual thoughts and none were gravely injured. Even Jonathan's signal felt strong and healthy. Bane's arm had been cut, but stitching was holding the wound closed. Christof had a shallow gash on his head, it had bled a great deal, but needed nothing other than pressure. Neither injury was life threatening, just annoying to them. In the flurry of the infirmary, I just couldn't concentrate on whatever was bothering them.\n\nThe men in the main cave had quickly cleared the foreign invaders out of our living spaces. It was a relief not to have to worry about that anymore, but I felt a new anxiety I could not place. Something was wrong and my family went back on alert, although all looked calm here. It was disconcerting.\n\nWe still had our guard at the door, but they were more relaxed. When Thom arrived with his family I hoped it was good news. It wasn't.\n\nThe announcement brought tears to my eyes.\n\n\"Gunth and his Brothers have gone to rest forever with The Great Harmonious Spirit,\" Thom announced as he entered. \"They were attacked in the tunnels beneath the mountains. The aliens have found our hidden passages and they were lying in wait. This means our men cannot progress further without danger. They are trapped.\"\n\nMy hand flew over my mouth and a sob escaped my throat. Gunth would have done anything to protect his campmates. I had no doubt he had faced the aliens head on and never regretted doing it. He and his family had been unfailingly loyal to this world.\n\nThom continued to name the killed and injured. It was an impressively long list considering how few had been lost in the main battle. The snipers in the tunnels were doing more damage than the open war had done. The men in the tunnels were trapped. They couldn't move above ground in the mountains, because the women's field prevented travel by men above ground in the mountains.\n\n\"Turn off the shield!\" Kana yelled suddenly. \"Asper, you can access the control through the technology here. That shield is getting the men killed! It is not protecting them. We are allowing their deaths to happen!\"\n\nThe women in the hall argued furiously around us, beaded and unbeaded. Even the badly injured managed to speak up and call out their opinions. This was a serious step for the women. That shield had been in place for generations, turning it off was unprecedented.\n\nA large woman without beads raised her head from her warm stone. She looked around at all of us before demanding access to a pad, NOW!\n\nThe force field in the mountains that had for so long trapped men in the compounds was turned off. Asper had accessed the system that controlled the shield. She had the codes and the authority to remove it. In fact, it appeared she had the authority to remove it from most of the world.\n\nI watched the woman in awe as she lay her head back down and rested. The men had talked about her quietly when she was brought here. After her Sisters were killed, it appeared she had single-handedly killed off a squadron of fifty aliens before she was incapacitated. The invaders had almost killed her before our men arrived.\n\nAsper was the toughest woman they'd ever seen. She was massive and her wing span looked huge, even folded. The powerful presence she exuded was almost palpable. If this world had a queen, it appeared she was right here. Hopefully, that was a good thing.\n\nI felt relief move through my bond the moment the field was turned off. The men were connected to one another and they knew it was gone. I saw a flash of light in my mind as the men shot out the roof of their tunnel and resumed their journey above ground.\n\nRose and I worked through the rest of the day and part of the night. I was more than willing to keep working, but my body would not cooperate. When a stumble took me to my knees in front of Aryn, he demanded I lay down. Working to exhaustion could damage my baby. It was a good argument and I listened.\n\nThe men had a small alcove at the back of the healing room. When Thom had ordered I stay in here, they'd put several mats back there for me. The warm stones were needed for the wounded. They'd created a comfortable place for me to sleep, so I went there and slept.\n\nThe next day was more of what we'd already experienced. The organized alien attack was splintered and scattered. Our camp had been cleared of invaders, but I stayed safely in the healing room, from there I heard the reports. There was fighting here and fighting there, but it had lost the grand scale. This appeared to be the clean up.\n\nMy family got closer and closer. They were holding something back from me, but I couldn't tell what it was. Something had upset them and they didn't want to let me know what it was, yet. I thought perhaps it was Gunth's death that had them anxious, so I didn't push the issue.\n\nI felt the moment my family entered our camp. The elation was like nothing I'd experienced before. I bolted from the healing room and ran as well as I could for the transport storage area.\n\nThe sight before me had me standing in awe.\n\nThere were hundreds of transports, loaded full of men, being directed to land. I saw men dressed like shopkeepers and Warriors from the compounds. Other men appeared to be wearing what the men in the mountains wore. They had brought everyone back here.\n\n\"They brought the whole world to this camp?!\" I heard Rose say beside me.\n\nShe sounded as shocked as I felt.\n\n\"Not the whole world,\" a man laughed beside us. \"We took who we could, other camps have done the same thing. No one is left at the compounds or in the mountains. We had to split the men up between several different camps. Some of these men are from the Barnas compound, some from the Caras, and some rescued from the T'aran Mountains. The compounds and the mountains are not safe and our resources are here. The women's ships are defending the ore in the mountains, but we will defend our cousins.\"\n\n\"As we teach them,\" the man's Brother said watching with us, \"we will teach them freedom and The Great Harmonious Spirit.\"\n\nAll around us were murmured promises. It was time these other men understood. They had been kept in the dark for much too long.\n\nI didn't dare move and stood still watching the carefully organized landing. I felt my family and knew they were there. In the mass of men, I just wasn't sure where they were.\n\nOnce the transports were settled the men all waited for instructions. A wave caught my eye at the far wall and I saw Christof's face beaming at me. I ran for him without another thought.\n\nMy men looked tired and dirty. Christof's left temple was bound where he had been injured. Still I couldn't stop myself from wrapping my arms around him. He hugged my shoulders tight. A hand drifted down to greet the offspring still in my belly as he smiled at me.\n\n\"We have missed you, wife,\" he said softly before handing me off to Damien.\n\nTears were running down my face as I passed my hands over Damien's shoulders and felt the tense muscles of his back. His face was rough with stubble and I could smell several days worth of sweat on him. Getting here safely had been a harrowing journey.\n\n\"I promised you,\" he whispered in my ear as he held me tight. \"We all did, but we aren't sure...\"\n\nI backed away and looked at him. He was unsure. Over his shoulder Evan looked even more unsure. They didn't know how I would react and they didn't want me to panic. They'd been told stress was not good for the baby I carried, but I had to know.\n\nThe women had implants and controlled the men. They had used the implants to erase our little boys' memories of their mountain birth. It wouldn't do to have them remember their female breeders and a time when the mountains were a safe place.\n\nDamien moved and I saw the sight I had waited many moons for. Little Jonathan, standing to just above my knee. My baby was dirty and his clothing scuffed, but he was unharmed. Jonathan stood with four other boys and they looked so very confused.\n\nInstinctively, I reached for my son and he backed away, as did his Brothers. They looked nervously from Evan to Damien as though seeking reassurance. My heart broke as I drew my hand back.\n\n\"This is family,\" Evan said gently. \"We told you about this. This is not a slave and you can touch her. You know this human Jonathan; she is your female breeder.\"\n\nBig, blue eyes looked like they were trying hard to trust what Evan told him. He looked back at me and I saw the ambivalence he was feeling. His Brothers reached out to touch him in comfort. This was unsettling to them.\n\n\"He feels me,\" I said softly, \"but he doesn't know why.\"\n\nEvan stepped past Damien and wrapped his arms around me. He spoke softly into my hair. Had Evan been human his voice would have been breaking.\n\n\"Just as he feels me, but he doesn't know why he does. He can't understand what we are telling him. He can't remember. It upsets him and therefore them.\"\n\nI buried my face in Evan's neck for a moment and breathed in his familiar scent. My body shook with silent sobs as I mourned for my boy, for our boy. All the love and care we had showed him had been callously wiped away. We didn't even exist to our own baby.\n\n\"We exist,\" Evan said tightening his hold, \"he is ours to care for again. He is not lost to us.\"\n\nKein spoke from behind me and I felt his hands on my hips.\n\n\"He will learn and he will remember,\" Kein promised. \"It has not been too long.\"\n\nI wiggled from Evan's arms and threw myself into Kein's embrace. He was right. Jonathan was home now and we would remind him. Softly, I kissed Kein before greeting Bane. The big man was gentle as he held me and I brushed my lips against his skin. I was so glad to see all of them.\n\nWiping my eyes I looked back over at Jonathan's family. Evan knelt on one knee beside them and explained what a hug and a kiss were. He told the boys that was how humans greeted others they cared for.\n\nI realized I'd never been introduced to Jonathan's family. Aiden I recognized, he was taller than the rest and I felt sure that trend would continue. The other children I'd only seen the day Nu-reeh had sold them.\n\n\"Mycah is the lead Brother,\" Damien said pointing out one of the boys.\n\nMycah was taller than Jonathan, but not as tall as Aiden. He had golden brown hair cut short on his head. He watched me with very wary eyes.\n\nNiah and Rees were the other two children. Niah was darkly striped like Aiden and quite lanky, but Rees almost had a ruddy complexion. Looking at Rees' height, I realized it was closer to Jonathan's short stature. I imagined the second boy had some human blood in his line somewhere. It would explain the coloration and his smaller size.\n\nI wiped the tears from my eyes and smiled at my men and my boys. Suddenly a familiar sight caught my blurry eyes. I grabbed Bane's left hand and looked at the small metal band on his left ring finger.\n\n\"What did you do?\" I asked touching the metal.\n\nIt wasn't shiny metal, but I saw a symbol etched into it. My symbol was on it. Kein had the same metal band on. They all did.\n\n\"We were bored in the tunnels,\" Evan explained touching his. \"We made these to show everyone we are yours. Some men have many mates, but that is not what we want. We only wish to mate with you. These bands tell everyone that.\"\n\n\"They aren't slave bands,\" Christof said. \"You thought about these; they are wedd-ing rings.\"\n\nI looked from one of them to the next and couldn't get over the surprise. I wasn't sure how they'd done this. Their memories told me. Men in the tunnels worked repairing metal weapons as they waited. Damien and his Brothers had asked to be taught the procedure and quietly made these with the same technology and scraps when they weren't doing other things.\n\n\"My Brothers and I talked,\" Damien shrugged, \"we wish to let everyone know you are our mate, our only mate. This seemed a good way.\"\n\nUsually both parties in a marriage or mating would wear rings. I felt a little left out.\n\n\"I also only want you and your Brothers,\" I told Damien firmly. If they were wearing rings, I wanted one too.\n\n\"We made you one,\" Christof said sheepishly. \"It is not a slave band and you can take it off if you no longer wish to be our mate.\"\n\nDamien took my left hand and slid the cool metal over my finger. The ring fit perfectly. It was etched with Damien's family symbol and each man's number.\n\nI kissed each of them again in thanks. This was a very sweet gesture. In the middle of a war they'd been thinking of me.\n\nThe little ones watched us but they appeared slightly shell shocked.\n\n\"Have they slept and eaten?\" I asked Damien. \"They don't look...\"\n\nI let the sentiment hang, but the men understood. The little boys were stressed and they did not appear well. Life in the compound was based on pattern and repetition. Being trapped in the middle of a war and then transported a world away was too much, too quickly.\n\nDamien took control and picked up his bag. The rest of the men did the same and the boys copied the men. Each boy had a small satchel of things. From what my family knew I understood it was a few things they'd grabbed before they were rescued from the compound.\n\n\"We will take our things back to our room,\" Damien said briskly. \"We have responsibilities today. There are Child Keepers we can leave them with until our job is completed. The little ones stay with us when we are not working. They are ours to protect.\"\n\nI looked longingly at Jonathan and wanted to be the one to take care of him, but that wasn't a good idea. The boys were not sure of me and needed to be left somewhere they felt safe. The family mind settled and I knew we would slowly remind Jonathan, but it wouldn't happen this instant. At this moment he'd be better off with Child Keepers and the other children.\n\nA low sound like a horn cut through the air and everyone turned toward the center of the room. Men carried what were obviously the wrapped remains of our fallen men and women into the camp. We all stood still as the procession moved into the main area.\n\nI watched the bodies pass and noted how different they all looked. The wrappings had obviously been hastily scavenged and were a variety of colors and fabrics. On the outside of each one was a family name and number.\n\nIt surprised me to see a family I knew carrying a body with their family symbol. The four men walked quietly with the remains of their Brother held proudly above them. Their grief was obvious, but I was shocked that they'd survived the loss.\n\n\"It is The Great Spirit,\" Damien murmured very softly. \"We are not alone when we have our friends and cousins. They are part of us and keep us strong. We are not alone on this world.\"\n\nMen could survive losing family, they just had to have the protection of The Great Harmonious Spirit. I watched closely and noted many men carrying their deceased Brothers. They were not dying like I would have expected. The men in the camp were made much more powerful by The Spirit.\n\nI saw Gunth's five family members being carried in. The wrapped bodies were held proudly aloft. There was a charge that went through all of us as our fallen leaders went by. A sob caught in my throat and I started to tear. Gunth's family had been made up of great men and I would miss them.\n\nMy family was surprised at my reaction. Gunth was not dead in the simplistic way I thought of it. Gunth was part of The Great Harmonious Spirit now.\n\nGunth and his family had spent their lives dedicated to the ways of The Great Harmonious Spirit. They'd taught countless men the meaning and importance of it. Once their bodies were consecrated back into the pool of Paterian fire they would finally be a physical part of it. Gunth had lost nothing and neither had we. His whole family was alive and well in all of us who followed The Spirit.\n\nThe men looked serene as they watched their fallen comrades go by. These men and women were not lost to us. They were merely in the place where there was no pain or fighting, only peace.\n\nIt was the Paterian equivalent of heaven and I had to smile. The concept brought closure to the beings here. I couldn't imagine how isolated the men must have felt on the compound when they were denied that. The Great Harmonious Spirit certainly gave them a sense of completeness.\n\nThe stream of bodies continued, many of the large women toted on transports, and I wondered where they were going.\n\n\"The thing the women dip their wings into, the lava,\" Kein said softly. \"We are delivered back to our planet.\"\n\nThe lava took the Paterians back to their source. As the bodies sunk into the strange substance it got hotter. Women had studied the lava or Paterian fire and knew the bodies literally melted deep beneath the surface of the planet. After a time the body was no longer separate from the fire.\n\nThe idea of burial beneath the dirt was quite foreign here. At the compound dead men had just disappeared, but this is what had always happened. All Paterians were always delivered back to their planet the same way.\n\nI was saddened that Gunth got no headstone or remembrance. Damien quirked a brow at my memories. A plaque on the wall wouldn't be a bad thing. He would ask the Administrators to consider that.\n\nWe stood for a very long time watching the dead pass by. Even the boys stood stoically watching the procession. Everyone seemed to understand the respect that was due those that had given their lives for the rest of us.\n\nOnce the last body was gone I saw Thom striding toward us. He looked purposeful and his eyes were on me.\n\n\"Ciara,\" he called once he was close, \"you have done a great deal for the Healers, but your skills are needed elsewhere.\"\n\nI was stunned by his mannerism, he was acting quite official.\n\nDamien wasn't surprised. Thom and his family wanted Administrative duties. He was probably \"filling in\" to prove his family a suitable replacement for Gunth and his Brothers. I nodded in understanding and agreed politely to do whatever would help the camp. Thom had been good to me and I wanted him to succeed.\n\n\"The men brought back many former slaves,\" Thom said lowering his voice. \"They are scared and they do not understand. We need you and Rose to help us with them.\"\n\nI wanted to stay with my family and get to know my little boy again, but I understood Thom's urgency. The former slaves were probably terrified and confused. At least Rose and I had some knowledge about what was going on when we were freed. These poor women would be completely lost.\n\n\"We'll see you at the evening meal,\" Damien promised as I turned to him, a nod and a smile to all my family and I was gone.\n\nThe transport area was busy as I followed Thom through it after we picked up Rose. Men from the camp greeted Rose and me, but the other men just stared. Our mannerisms weren't that of slaves anymore and we wore swords just like they did. Many murmured as they noted the guns we also carried. The men had seen the destruction those weapons could do. The new weapons gave Rose and me immense power. It must have been confusing.",
        "I did note that every family from the camp seemed to have one or two families that followed them. My assumption was that the men's education had been delegated to different families. Everyone was going to help.\n\nThe freed slaves were in a state when I reached them. Perhaps sixty confused women trembled on several transports. I could see all the different species of \"slaves\" I knew about and two others. The men had managed to wrap them all in some sort of warm clothing, so I knew they'd tried to keep them comfortable. The women still shivered in fear.\n\nThe men with them seemed frustrated and exasperated. They were trying to coax them off and the freed slaves wouldn't move.\n\n\"Friends,\" I called out to them, \"look at me.\"\n\nEvery set of eyes raised to me and I saw the shock in their faces.\n\n\"My name is Ciara, I was a slave like you. The men from these mountains have freed you. You are not slaves here. No one is going to hurt you. We will never allow you to be enslaved again.\"\n\nThe men that had been with them all disappeared quickly by bounding into the main camp, which irritated me. They had obviously been annoyed with babysitting these women, but Rose and I would need help. Two of us couldn't tend to them by ourselves; it would take forever.\n\nThe freed slaves needed to be calmed down before we went anywhere. I tried to relax them by explaining what had happened and where they were now. It didn't seem that I was making much progress.\n\nMy efforts were cut off when a large Paterian woman landed beside me and another behind me. Several of the freed slaves screamed and I saw the terror in their faces. I was irritated with the women until I turned and looked at them. I'd never been so glad to see Hannah and Ra in my life.\n\n\"Baby Girl!\" I cried throwing my arms around Hannah's waist. \"I'm so glad to see you! I worried about you both.\"\n\nHannah looked worse for the wear. Her arms were cut up and she had a deep, healing gash on her side. The smooth, human looking skin on her face was scratched and marked. None of it appeared life threatening, though. Ra stood behind her and I looked her over as well.\n\n\"Your birth Sister, Kennedy, how is she?\" I asked anxiously. \"Her Sisters, were they hurt?\"\n\n\"They fared better than us, Mama,\" Ra snorted.\n\n\"Kennedy and her Sisters are thinkers, Mama,\" Hannah said grinning. \"We thought we'd have to defend our campmate men. Kennedy knew more about their weapons and thought differently. Ra and I took a beating before we learned to trust the men.\"\n\nI couldn't stop touching Hannah and evaluating her wounds. She laughed at my concern.\n\n\"Mama, we love you and we just wanted to check in. You don't need to worry for us. Kennedy and her Sisters will check in soon. They took a patrol on a wider loop. I told her I'd see you and let you know we were all well.\"\n\nI smiled with relief at her and saw one of the former slaves step cautiously toward us.\n\n\"This is your...child?\" the woman asked hesitantly.\n\n\"My oldest and her Sister, yes, this is my child,\" I responded gently, but proudly. Hannah and Ra were a lot to take in.\n\n\"I had a boy,\" the woman said as a tear dropped from her eye. \"He was taken from me. I have not seen him in four turns of the moon. I do not know if he survived...this.\"\n\nI felt horrible for the woman and didn't know what to say. Her boy could be anywhere, dead or alive. My heart ached for her loss. I should have known Hannah would know what to do.\n\n\"Can you tell us the name you gave him?\" Hannah asked quietly.\n\nThe woman looked terrified of my child, but Hannah was asking about her son. She refused to cower away.\n\n\"Branden, Mistress,\" the woman told us.\n\nRa had a communication pad strapped to her waist. She pulled it loose and started to slide her fingers over the face of it.\n\n\"What name did the slavers call you?\" she asked the woman.\n\n\"Hema, Mistress,\" the woman answered wrapping her arms around herself.\n\nThe other former slaves watched the interaction with interest. As Ra did whatever she was doing Hannah spoke to Hema. My daughter's calm, patient tone distracted from her terrifying visage. She asked Hema, the former slave, not to address Paterian women as Mistress now that she was in the camp. She was free and needed to act like a free woman.\n\n\"I am Hannah, born in the T'aran Mountains. This is Ra, my Sister, born in the T'scan Mountains. You are free now and you do not have to be called by the name the slavers gave you. Your free name is yours to use. We will call you whatever name you choose. When free people meet we introduce ourselves the way I just did. Can you tell me your name and where you are from?\"\n\nThe woman's body literally shook and I knew it was a combination of excitement and fear. What we were telling her seemed too incredible. She was not a weak person, though.\n\n\"I am Molly O'Donnell from Dublin, Ireland,\" she said proudly.\n\nRa looked up from her work and smiled at Molly.\n\n\"He's not far from here and he's well, Molly,\" she said lowering the pad she had been working on. \"One of the other boys in his family was bred by a free man. Those men took them from the compound and they are caring for the young family now. Give us time and we will talk to the Administrators about moving you to their camp or moving those men and the boys here. You will be reunited with your child if you wish to be.\"\n\nThere was a moving picture on the pad and Molly walked right up to Ra to look at it. She covered her mouth and looked at the communicator.\n\n\"Their images were recorded when they entered the other camp a day ago,\" Ra told her. \"I know it is not a close picture, but the all the boys in his family appear well. I can narrow the focus a little on this screen, but not much. I see no injuries on any of them.\"\n\nMolly trembled as she watched her boy enter the other camp. I knew how she felt. She probably thought she'd never see him again.\n\n\"He won't know you anymore, Molly,\" I said sadly looking at the monitor with her. \"When you get to him he'll have to relearn you. The women of the mountains, the ones that kept the men, they had a way of wiping out the children's memories. My own boy doesn't know me.\"\n\nHannah sighed and laid a hand on my arm. \"Mama, you mustn't let that upset you. The hold the slaving women have on the men can be broken. Jonathan will remember and you fretting about it won't do any good. He and his Brothers are tired and very stressed right now. Let them sleep and feel safe in the camp. The truth will come back to them.\"\n\nI smiled at my oldest. Getting upset would lead to disorder and now was not the time for that. We had to deal with the issues at hand.\n\nShaking myself out of my gloomy thoughts before they led to depression, I remembered that I was suddenly in charge of all these women and I had no idea what to do with them.\n\n\"Thom left us with them,\" I said motioning to the freed slaves, \"but he didn't give us any instructions.\"\n\nHannah shook her head and Ra laughed. \"The men are in large part still responding to the Great Harmonious Spirit,\" Ra said. \"They forget we don't interact that way. While the men are this way you have to remind them to tell you what they want. Be very direct with them and they will answer you. They will all expect that you already know what their plan is.\"\n\nI was about to explain that did me no good now when a group of men approached us. Ratru and his Brothers, along with several other families walked up and looked expectantly at me.\n\n\"Are you here to help us?\" I asked plainly.\n\nThe men seemed stunned by the question and Ratru answered. Of course, they were here to help. They were surprised I had not known they were coming to assist.\n\nOur day was planned in detail already. First, we'd be going to get the freed women clothing from the shop and anywhere else we could find clothes that fit them. Next, we would be taking them to the Administrators to remove those horrid bands and explain things. Rooms had been assigned to them and a guard would be posted to protect them from their former owners. There was an organized plan and the men couldn't understand how I wasn't already aware of it.\n\nAfter all, this had been decided many day cycles in advance.\n\nWith a sigh, I encouraged the girls off the transports. I had the shock of my life when one girl pulled away from me and bowed her head. It took a moment to recognize her, Vesa.\n\nVesa held her right arm close to her body and slid away from me. I heard a mumbled comment from her mouth. It was repeated instructions not to touch Ciara, not to look at Ciara, and not to approach Ciara. My old nemesis appeared like a broken shell of the brave girl she'd been.\n\n\"What did they do to you?\" I asked sadly as I watched her.\n\nHer friends stayed with her and refused to look at me. When I caught one girl's eyes the terror was undeniable. Whoever had done this had made sure these girls would never interact with me again.\n\n\"There are no owners here to hurt you,\" Rose said softly stepping forward. \"You can talk to us without fear. It will be okay...\"\n\nRose tried to approach and they backed off the other side of the transport. Vesa stumbled off and let out a soft cry as she looked up. I got a good look at her face and saw the glazed look in her eyes and the sweat on her face. She was pale and trembling, but different from the rest.\n\n\"She's hurt,\" I told Rose simply. \"Something happened and she's been injured.\"\n\nIt took us only a short time to figure it out. Molly had to be the one to talk to her, though. Vesa's arm was broken and had been for days. The wall of the room she'd been in had been hit with a beam while she'd been standing near it.\n\nThe Keepers didn't notice the injury when they moved the girls. Things had been too frantic and confused. The free men didn't know enough about humans to recognize it, because she refused to speak to them. Vesa had just been holding her arm and suffering as they traveled.\n\nThe rest of the day was an awful mess. Taking Vesa to our Healers resulted in her having a full blown panic attack. They fixed her arm, but her reaction sent the other girls into a tizzy. Just as we got them calmed down, Reed and Hassar came and took their slave bands.\n\nThe removal of the horrid slave bands was a disaster. The bands had ensured protection in a dangerous and uncertain world. All the women displayed some level of terror when they were removed. They screamed, begged, and cried; several even tried to run from us. I was sorely tempted to ask Hassar for calming cream for the women, but I knew that would not be acceptable. All we could do was offer them support as we tried to reassure them.\n\nI could see why their prior guardians on the transport had disappeared so quickly.\n\nA few girls started to understand as the day wore on. Molly embraced her freedom and started to help us. A couple began to recognize that the Paterians surrounding them had no desire to control or hurt them. It was just a very slow process.\n\nRatru and his Brothers, as well as the other men left with us, were unfailingly polite and friendly. They encouraged healthy behavior and started to get some minimal response. It helped even more when one girl's prior owners attempted to approach her. They wanted her back. My campmates literally formed a wall between them and the object of their desire. Freed slaves were not at anyone's mercy in the camp.\n\nStill every little moment seemed to be a drama. The midday meal had been a trial in and of itself. Food was brought to where we were and everyone got a plate and a cup. The girls cried when we asked them to feed themselves. I realized many had refused food and drink on the way here.\n\nThey were terrified that we'd give them poisoned food or somehow make them sick. Some thought it was a test by the men who had bought them. Only their owners would know what they could eat. All of them were sure of that. A simple midday meal took forever.\n\nA few times when things seemed quiet for a moment, I would touch the ring on my finger and think of my family. My men and my boys were here in the camp and safe. Despite the stress it was the best day I'd had in a long time.\n\nWhen I saw several young beaded Paterian women arrive in the early evening, I was surprised. We had the girls sequestered in a secluded room with its own set of lacquered pots. They'd be safe here and we could start to sort out what they wanted to do. Those of us that had dealt with them all day were just exhausted, but I hadn't been sure when reinforcements would arrive.\n\nIt had never struck me how dependent slaves were made to feel. The girls were uncomfortable doing anything for themselves. They were used to being absolutely controlled and cared for.\n\n\"We take the next shift,\" one of the beaded women announced as she strode in. She introduced herself as Yahn of the T'aran Mountains and gave us a fanged smile.\n\nI looked back at my charges and then at the Paterian women being sent to tend them. These new faces would terrify the freed slaves. Chewing on my lip I looked back at the beaded woman who had spoken.\n\n\"They are very scared,\" I said hesitantly. \"They've always been told women would hurt them. This may frighten them too much.\"\n\nYahn didn't seem put off by my statement and looked at the girls now staring at her.\n\n\"I owe these females the truth, Ciara,\" she explained. \"In the past, it was my line of breeders that encouraged the horrible slave trade on this world. We have come to understand how wrong we were. Let me help make this right.\"\n\nMolly was the one who decided me. \"Go, Ciara,\" she said calmly, \"we see how far along you are with child. You should rest for a while. It isn't good to be on your feet so much. You and Rose have been good to us all day, so have these men. We don't wish to be a burden.\"\n\nA few other girls murmured assent and I had to capitulate. I really needed to rest. My feet hurt and my stomach felt crampy. The stress of the last several days had been difficult.\n\n\"Tomorrow, come here after your morning meal, if you will relieve my Sisters and me?\" Yahn asked and I nodded.\n\nThe woman's head quirked at my response and Rose told her, yes, we would be here. Rose explained nodding and the woman seemed interested in the Earth tradition. She asked if one day we could talk more. Yahn and her Sisters would like to learn more about Earth.\n\nRose and I wearily made our way down the hall. The men that had been helping us seemed ecstatic to leave. They bounded down the hall intent on getting anywhere else.\n\nMy connection to my family was strong now that they were home. I'd felt them peripherally all day, they'd been busy outside running a search for invaders and doing some hunting for the camp. Now they were hungry and frankly so was I.\n\nThe halls of the camp were alive with men. It was easy to tell free men from men in the compound just by their actions as we walked by. Our campmates greeted us and we welcomed them home. The men the women had been keeping in the compounds and mountains seemed amazed by us and just stared.\n\nThe dining hall was absolutely chaotic. There was at least three times the number of men in the camp and they all had to eat. I saw families sitting in the main hall by the fire pits on the ground eating. The tables inside were very crowded. The line for food was enormous. The frustration with all of it evaporated when I saw my little boy standing with his family.\n\nDamien and his Brothers were still dirty and scuffed, but the boys looked liked they'd been scrubbed clean. They each seemed to have a fresh outfit on and their hair was brushed. I assumed the Child Keepers had done that and I was grateful to them. Poor little Jonathan had looked quite unkempt when I'd seen him first. I'd never admit to my men that the Child Keepers were certainly superior with children. I kept that thought to myself.\n\n\"You had a difficult day, wife,\" Kein said as I approached.\n\n\"It's better now,\" I smiled, kissing a cleaner spot on his cheek.\n\nI met each of my husbands with affection and a gentle kiss. It had been so long and I had missed them dearly. Once I was done I looked longingly down at Jonathan and his little family. How I'd love to kiss each of them hello. My desire resonated through Damien and his Brothers before I could reign it in.\n\nBane's eyebrow rose and Evan knelt by the boys. He explained about kissing again and told them that was how I greeted family. Mycah's family was mine, too, so I'd be greeting them that way.\n\n\"Oh, no,\" I countered waving a hand at Evan, \"I don't want to upset them...\"\n\nWhat I really didn't want was to reach for Jonathan and have him back away again. That simple act had cut me deeply. I couldn't stand for it to happen again.\n\nBane crossed his arms and smirked at me. I heard his thoughts loud and clear. It wasn't something he could say outside the family, because it was too rude. He'd called me a 'shopkeeper'. All those days in Armant's shop had taken my backbone. Kein punched his arm hard as a reprimand for the nasty comment.\n\nMy eyes narrowed at Bane for a moment before I leaned over Mycah. I brushed my lips against his cheek and told him I was glad he was here. Each little boy got the same contact and different bit of spoken love.\n\nJonathan went last and I saw him watch me closely. It took every fiber of my being not to grab him and hold tight. Instead I placed a simple kiss on his cheek as I stroked his hair.\n\n\"I'm glad you're home. I've missed you,\" I said simply before backing away.\n\nMy hands were shaking and I clasped them in front of me to stop them. Bane smiled at me as Evan led the boys toward the line for the food. He thought a little encouragement in the family wasn't necessarily a bad thing.\n\n\"You did good,\" Damien reassured me.\n\nI wondered how the cooks were feeding everyone. This crowd was much larger than we were used to. Quietly I expressed my concern to Damien as we made it to the rapidly emptying bowls of the buffet.\n\n\"Things will be lean for a while,\" Damien shrugged, loading up Mycah's plate with a normal helping. \"We will only take just what we need. There will be enough and none of us will starve.\"\n\nI watched Damien put food on his own plate in an extremely conservative manner. All my men did that. They fed the boys well and took just enough to sustain their own strength. I frowned at them and found the answer quite shocking.\n\nGrowing boys had to eat or they would be stunted, especially young ones. Grown men could go without excess for quite some time . My family would not be harmed, they would just be uncomfortable. The boys would be hurt if they weren't cared for correctly. Children had to be protected at all costs.\n\nAs my men gave me their opinion on children, I was surprised. I had not realized they had been talking to the men who were male breeders with children in the camp. They had been training themselves for the day Jonathan and his family returned. Their knowledge about the boys' needs was not an accident.\n\nWhen I'd seen the little boys all clean and well dressed I'd assumed it was the Child Keepers in the camp that had fixed them up. It had not been. Damien and his Brothers had put water in the pot in our rooms. They had wiped the boys down and found fresh clothes before delivering them to the Child Keepers.\n\nI put some food on my plate and shook my head. Even being bonded to them there were things about them I didn't know. I couldn't rely on the bond and forget to communicate with them, that was obvious.\n\n\"Ciara,\" Kein said in an almost scolding tone, \"you are a free woman and I respect you, but that isn't enough of an evening meal for a woman carrying my offspring. Grown men can afford to take less. You are not like us right now.\"",
        "Like the men I'd taken just a few things, enough to take the edge off of my hunger. My serving was quite small.\n\n\"They're right, Ciara,\" Rose intoned from several bodies behind us, \"we've missed too many meals these last days. It isn't good to starve yourself. The little one will suffer, especially this close to her birth.\"\n\nI took a normal share and felt embarrassed doing so. The rest of the adults in the hall were obviously rationing. I could have kicked myself for getting pregnant. It really wasn't a great time for it.\n\nDamien's opinion on the matter was gruff. The pregnancy had not been planned as it should have been, but an alien invasion was not a foreseeable circumstance. There was no way any of us could have known this attack would happen. There was no reason for shame. My men agreed and I felt my embarrassment fade. We had done this but it wasn't like we had done it intentionally.\n\nThe next thought almost made me laugh.\n\nNext time we'd plan the pregnancy and get permission first. If this was Kein's child, Bane wanted one next. As soon as I was healthy enough for it anyway.\n\nI looked at my family around me and saw the thoughts in their eyes. They liked their big family. Seeing Hannah and Kennedy made them puff with pride. Aryn and his Brothers made them happy. Jonathan and his Brothers were their joy. More family with the woman they loved would make them very satisfied men.\n\n\"Not until I'm healthy enough and these guys have to be older,\" I said grabbing Bane's chin and meeting his eyes. I couldn't quite withhold the smile.\n\nThe big man beamed at me in return. Next time the child was his, he was ecstatic. He'd wait as long as I wanted.\n\nA group of men finished at their table just as we left the line. They cleared their plates and wished us a good meal. Damien reciprocated for us and we settled down to eat.\n\nMycah's family was quiet at first. They watched everything and everyone in the hall, looking this way and that way. The curiosity seemed to be building in them and then Jonathan couldn't take it anymore.\n\n\"Why are there only two humans eating in here? Why is my female breeder human? Where do humans come from? Why does she look different? Why don't you call her 'it'? Why were we at the compound and not here?\" burst out of his mouth suddenly and he looked quite ashamed.\n\nMycah looked at Jonathan harshly, but Christof spoke gently. Apparently, little boys were discouraged from asking questions. The lead Brother was tasked with controlling his family and not letting them \"lose control\", as the Child Keepers in the compound had called it. Christof wouldn't let that sort of training prevail.\n\n\"Questions and curiosity are important here,\" he told the boys gently. \"You should be able to learn about everything around you.\"\n\nThe boys turned to look back and forth between Evan and Damien. They felt a connection to Evan, but Damien was the lead Brother. This was an important decision as far as they were concerned. Christof's opinion had to be confirmed by Damien.\n\n\"Christof is right,\" Damien said solemnly. \"Learn about everything.\"\n\nEvan nodded in agreement and seconded Damien's opinion, questions were healthy.\n\nWith that out of the way Christof explained as simply as he could about humans and where we came from. I was hesitant for him to explain slavery to them, but he didn't falter. Damien's family had bought me as a slave and then realized that was evil. I'd been freed and decided to stay with the family on my own.\n\nOnce Christof was done speaking the boys seemed to be mulling over it all. They sat and ate in silence and we did the same. My men ate slowly savoring the little food on their plates and the company of our children. A little hunger was a very acceptable price to pay to have the family together.\n\nAfter the meal we walked through the crowds and made our way back to the place we stayed. The boys followed Damien and me obediently and the rest of the family walked behind them. Our young charges were watching everything and everyone around us. It relieved me that our rooms were off the main thoroughfare. I'd worry less about the little ones wandering off to explore. I knew they were curious children.\n\nMen passed us heading for the transport storage area. They were armed and looked ready to fight.\n\n\"Night patrols,\" Damien explained, \"we have young ones to watch at night. We will take day patrols. Those men are watching freed adults.\"\n\nWe turned off the main hall and walked into the complex of rooms where we stayed. It was usually quiet here with just a few men lounging around the central fire pit in front of all the rooms. Today it was crowded with men. Almost everyone had at least one family that were sharing their lodgings with them. They all became silent as they watched us enter.\n\n\"There are no slaves here,\" Mund announced loudly to the assembled crowd. \"Damien's mate is with him and his Brothers by choice. We respect her and she respects us. This is a free female creature.\"\n\nThe men from the mountains and the men from the compounds seemed confused.\n\nDamien took the lead and spoke to the men. He talked about innate rights to freedom and how wrong slavery was. The authoritative voice settled the crowd and they listened intently. When he wanted to, Damien could be quite commanding. I wondered to myself how long it would be before he wanted to be an Administrator.\n\nChairs were spaced around and lowered myself into one. Mycah's little family looked at the men and then looked at me. I saw their gazes dart all over the place. They were curious.\n\n\"Those are our rooms,\" I pointed them out. \"You can go in there and look around. As long as you stay by us, you can look around out here, also.\"\n\nFive heads turned to Evan in synchrony. Damien was busy talking and they needed to know if what I'd said was true.\n\n\"Mama is family and you can listen to her,\" Evan said firmly. \"Go look around, but stay close.\"\n\nThe boys were gone in a flash to inspect our dwelling. As Damien talked, I sat with Christof and we watched the boys reemerge from our rooms. Mycah's family started to check out the community room. They found a pile of small rocks along the far wall and began to play with them.\n\n\"What are they doing?\" I asked quietly as they sat the rocks in very specific places on the floor or cracked them together in the air.\n\nKein walked over to stand by the boys and he knew exactly what they were doing. They were making sounds as they moved the rocks around. He recognized the noises they made. The boys were remembering the battle and recreating what they'd seen. They were playing it out with the rocks.\n\nI looked at Christof and he smiled. Evidently we needed to find them some toys. I appreciated their good imaginations, but children needed things to play with. For now they were perfectly well entertained though.\n\nIt didn't take long for me sitting in a comfortable spot to get sleepy. It became a battle to keep my eyes open and watch Jonathan. I nearly nodded off in my chair and Evan shook my shoulder.\n\n\"Go to bed if you wish to,\" he said with a lopsided grin, \"we will join you later. We do not need to sleep yet and we will watch our sons.\"\n\nI returned his smile and pushed myself up. Damien was still talking to a group of men about slavery and freedom. As I passed him I touched his arm and smiled. He returned the look and continued with his conversation.\n\nAs I left the room I heard several men comment that it was odd that I was going to the bed room on my own. They'd never seen a human decide when it needed to sleep or be left to go somewhere alone. None of them were sure how I knew I needed to rest. This new way of thinking was going to be a change for all of them.\n\nI made sure the fire pit in the main room had enough fuel for the night. I didn't bother to light any of the torches. The men would not need them when they came to bed and I would soon be asleep. We'd be warm and comfortable in the space here.\n\nIn the quiet of the bedroom I slipped out of my day clothes and into my nighttime dress. It was a sleeveless linen shift that laced up the front and went to my knees. Smiling to myself I crawled into bed and lay on my side. It wasn't a moment before I fell quickly into my dreams.\n\nThe connection with my family was stronger now that they were here. In the periphery of my mind I heard their conversations and felt their emotions. It was a very soothing presence. When my men came into our rooms I felt the cool water they used to wipe the dirt from their bodies. In the morning they planned to go to the bathing pool, for tonight they would just clean up here.\n\nWe weren't sure the children could swim and the bathing pool would be busy tonight. It was safer to take the young ones in the early morning when we knew there would be less activity there. For now, the males all just got changed into their nighttime shifts and got ready to rest.\n\nDamien and his Brothers lay down, but left a space on one side of the bed for our young charges. During the trip here Mycah's family had slept fitfully, clinging to one another. They hadn't used much room at all, even in their sleep they'd been anxious. The little boys crawled into their assigned spot and huddled together. Opening my eyes blearily I reached out to touch Evan in front of me and looked at our boys across the bed. I wanted to comfort them, but I didn't know what they needed.\n\n\"They need to feel safe,\" Kein said quietly from behind me. \"This is a lot of change for them. Rest now, wife, take care of yourself. The boys will relax with time.\"\n\nI assumed he was right. It was the same thing Hannah had said and it made sense. The boys had been trapped in the middle of a war and then whisked away to a new world. This was a big adjustment. We would just continue to provide a safe, stable home for them. I prayed they'd come around.\n\nMy eyes shut and I sighed. I would have been nice to sit and talk around our fire, but we had so many responsibilities now. My little boy would never get to know me if we were always doing something. I longed for a quiet day to spend with him. Perhaps then....I fell back to sleep thinking how wonderful it would be when everything calmed down again.\n\nIt was the middle of the night when I had the strong urge to wake up and stay still. The commands in my mind weren't fearful, just insistent. Breathe like I was asleep and don't move.\n\nMycah's family was awake and I sensed them sitting around me on the bed. The men had woken when the children did, but they wanted to see what the boys wanted. Like well trained soldiers my husbands had continued to breathe slowly and deeply, simulating sleep.\n\nSomeone's fingers touched my arm and I fought the desire to flinch. The boys must still think I was asleep because I felt all of them touching my arm. They stroked it and then pinched the skin of my upper arm. It took great fortitude not to move as they explored.\n\n\"Feels like us,\" I heard Niah say in a voice I'm sure he thought was a whisper. \"You were right, Jonathan. You knew what Mama would feel like...\"\n\nDamien and his Brothers were glad the boys felt comfortable enough to explore, but they also felt some humor at their lack of stealth. The little ones had woken each other noisily and then walked across the bed to surround me. Damien knew we'd have a time teaching them to hunt quietly. It certainly wasn't something they would do instinctively.\n\nWarm breath was on my cheek a moment before a kiss was pressed in the same place.\n\n\"I did it!\" Mycah said triumphantly.\n\nEach of the children pressed a kiss against my cheek. Jonathan went last and I felt him linger. Somewhere in my boy's memory was kissing. He knew what this was and he'd done it before. He repeated the gesture several times.\n\n\"Do you remember...?\" he asked his Brothers in that same stage whisper Niah had used.\n\nAiden did. He sat behind my head and I felt him fiddling with my hair as he leaned down and pressed kisses to my temple. He remembered the gentle affection and the soft feel beneath his fingers. This was all so familiar to the two of them.\n\nI felt the wet swipe of a tongue on my cheek and jaw. Jonathan was tasting. He did it over and over again before I felt him move away. Barely peeking, I saw him hovering over Evan's supine form. He licked his male breeder several times and then looked back at his Brothers.\n\nThey sat in silence for several heartbeats and we waited to see what they'd do next.\n\nJonathan stepped over Evan's head and knelt next to Damien. He tasted the big man's chin and then continued around the bed. My little boy tasted all of us until he came to sit pensively by Evan's side. Jonathan reached out and tentatively touched Evan's long hair. The sensitive locks were so much like his own, he must have recognized that.\n\nDamien and his Brothers just continued to breathe evenly. The little family needed to do this experiment when they felt we weren't watching. This was the perfect time for it. We'd let them take as long as they needed. Finally, they reached a decision.\n\n\"We're okay here. I remember them. This really is family,\" Jonathan announced in that loud whisper and the little boys all murmured agreement.\n\n\"We will trust them, if you are sure, Brother,\" Mycah said with authority.\n\nThat familiarity they'd felt to us was a good thing. Apparently they'd decided to accept it. I almost smiled as I heard them relax. The tension they'd held in their little bodies had been palpable.\n\nMycah's family was yawning and stretching. Feet passed in front of me as two boys headed back to their original spot. Behind me someone stumbled over Aiden as they made their way past and hands dug into my hair. Aiden stretched out behind my head and wrapped the softness in his fingers. Glancing over I saw Jonathan curled up next to his father sucking on Evan's fingers.\n\n\"It's cold,\" I heard Niah complain.\n\nHe groused that he wanted his Brothers to come sleep with them. Mycah and Rees were also whining, they wanted to be closer. My men had had enough of being kept awake at night. It was time for sleeping.\n\nBane pulled Rees over his chest and cocooned him between himself and Kein. Niah followed his Brother and fitted himself in the crook of Bane's big arm beside Rees. Damien did the same thing with Mycah and the lead Brother snuggled between Evan and Damien, using Damien as a pillow as he yawned. My husbands tucked the boys in and I felt contentment spread around the bed.\n\nReaching out a hand I stroked Jonathan lovingly. He was sleepy and calm. I kept a hand on him and he didn't mind at all. In fact he seemed to relax further into the touch.\n\nMy men cradled the small family that had finally accepted them. For too long we had felt the separation of our family as an acute pain. We had our daughters returned to us, but our our sons had been lost. This night was the final step toward putting the family back together. We all felt right for the first time in a long time. The love in the room was throbbing round and round through the bonds that linked us.\n\nThe boys fell asleep almost instantly. They liked being surrounded by family. This new family was big and strong. Once they determined we were good, they fell into an almost instant deep sleep. Hearing Aiden snore behind me I knew they hadn't slept well in days.\n\nI smiled at Evan in the dark and saw the flash of white as he smiled back. They were our boys again. We had nothing to worry about. I fell back to sleep feeling more loved than I'd ever imagined a person could feel.\n\n************************\n\n\"I like it here,\" I heard Jonathan whisper and I opened my eyes.\n\nEvan was propped on his side talking to our son. It was near moonset and Evan had woken when Jonathan did. Now they lay side by side talking in the early morning.\n\n\"We didn't like the compound,\" Jonathan said with conviction. \"My Brothers and I knew there were more in the family and not just us. We didn't like the Keepers and we felt lonely....\"\n\n\"We missed you all, too,\" Evan told him, as he stroked his boy's hair. \"You are family and we wanted to be close to you. I promise we won't let anyone take you all again.\"\n\nAs they lay next to one another and talked, I knew what Evan was doing. He was reestablishing the connection we'd worked so hard to cultivate with our son. Jonathan said he remembered us and he loved us. It was all coming back.\n\nThe rest of the little ones were waking up, probably at Jonathan's mental prodding. I felt Aiden behind me stretching and snuggling in my hair. Jonathan's attention turned and was on his Brother immediately.\n\nIn a flash I was smothered under Jonathan's writhing form as he attacked Aiden. I pushed Jonathan up and over and he continued to wrestle with his Brother behind my head. I tugged my hair free and sat up to watch the boys.\n\nOnce Aiden was excited and awake, Niah and Rees were their next targets. The boys pounced on Kein and Bane, intent on getting to their Brothers that lay nestled between the two men. Rees was the hardest to wake up and he didn't rouse until Mycah crawled over Bane to get to him.\n\nThe boys tumbled and played on the bed until Damien clapped his hands.\n\n\"We go to swim and bathe, boys,\" he said in a commanding tone, \"put on your clothing!\"\n\nThey were up in a flash. Watching the boys try to dress themselves was somewhat amusing. They were too young to get it completely right. They put their shirts on inside out and used each other's boots. At the compound the Keepers would have assisted them, for the first time in a long time I was able to help my boy. It was a wonderful feeling!\n\nBefore we left for the pool, Evan spent a moment untangling my hair. I sat on a chair and let him work behind me. Aiden had made a terrible mess of the back, as he had always done before.\n\n\"Where is Halil?\" Aiden asked crawling up on my lap with absolute familiarity. \"Where is Rynal?\"\n\nThe other little boys looked up from what they were doing and started to ask similar questions. It sounded like they were all asking for their breeders.\n\n\"Halil went to The Great Harmonious Spirit,\" I told Aiden gently, \"and we will have to find Rynal.\"\n\nThe rest of the boys asked only for one name and I assumed they only knew their female breeders. Damien promised we would find them and the boys seemed somewhat satisfied with that answer.\n\nThe halls were mostly dark and quiet as we made our way to the bathing hall. It was still early. Mycah's family walked with us and they were all questions this morning. We answered everything and encouraged them to look around.\n\n\"The camp is new to your family,\" Evan told them. \"You should pay attention to everything as we pass.\"\n\nThat was all the permission Mycah and his Brothers needed. They bounded down the hall and peered into the unlit fire pits. Nosy boys stuck their heads in different doorways to see what was in each room.\n\nIt was like watching five parts to a magnet. The boys would separate and see five different things. A moment later they would be back in a group talking rapidly about what they'd seen. In the blink of an eye, they'd be off exploring again. It was not behavior I'd seen on the monitors from the compound, but then the Keepers had never encouraged curiosity.\n\n\"I am jealous,\" Christof said watching them.\n\nWe were encouraging their inquisitiveness and wonder, and not stifling them. Christof would have liked to have grown up with this freedom.\n\n\"And I am sorry, Brother,\" Damien told him solemnly.\n\nIt had been his job to control Christof. He'd had to limit Christof's nature, so the family could succeed.\n\n\"We did what we had to, Brother,\" Christof told him. \"This is much better, though.\"\n\nInside the bathing hall were many men with small children. Evidently everyone had the same idea. It would be easier to watch the little ones with fewer grown men here. We got the boys undressed and guided them toward the pool.",
        "Jonathan dove in the moment he was near the edge and Aiden followed. The other three Brothers had never learned to swim and yelled for their family to come back. They didn't like that they couldn't follow.\n\n\"Don't be upset,\" Bane soothed picking up Rees and Mycah. \"We'll all bathe and then we'll teach you to swim.\"\n\nDamien carried Niah in and we found a shallow area by the steps. Jonathan and Aiden showed up with shiny rocks they'd found on the bottom. They had gotten one for each of their Brothers. The gifts didn't totally soothe the hurt feelings of being left, but it helped.\n\nWe scrubbed ourselves and the boys in the warm, swirling water. Pretty soon we were all clean, our charges weren't worried about that, though. Mycah's family wanted to learn how to swim.\n\nI figured we'd be late for the morning meal at this rate, but the boys loved the swimming lesson. Jonathan and Aiden had quickly disappeared to explore the pool as Evan taught their Brothers how to move in the water. The little boys were desperate to follow their Brothers.\n\nMy method of swimming was not the same as what the men did. There wasn't much I could teach them on this front. I pulled myself up the steps and dried my body by the fires. It seemed like a good idea to get dressed so I could help Mycah's family when they got out.\n\nSeveral families had little boys and they were getting them re-clothed after their bath. It was funny to watch the other men battle with the little ones as they did up their outfits. Stubborn children were used to doing this themselves, even if they did it wrong. Male children in the Child Keepers rarely got the undivided attention they were all getting now.\n\nThe love and affection from their caregivers would allow them to form strong bonds. The Keepers were always kept too busy to really pay attention to one family. This type of attention was normal in the camp and created strong communal relationships. I was glad to see it happening so quickly.\n\nJonathan and Aiden were all over the water exploring. I'd see them pop up for air as they examined the contents of our bathing pool. The two boys had no fear as they explored the water. This was fun and liberating. They seemed to be having a grand time.\n\nEvan felt Jonathan, he always had. My family was aware of their offspring, but except the one time he tried to bond with them, Jonathan had not seemed overly conscious of his male breeder. As I sat and watched my family, I realized that had changed. Suddenly I felt Jonathan projecting powerfully to Evan. It wasn't something I wanted to feel, though. It was a call to arms.\n\nBefore I could stand on my feet every man in the hall moved as one. Little boys were literally thrown from the pool and caught by men that were standing around me. Short knives were grabbed from the clothing laying around and tossed into the pool. Men's arms darted out of the water and grabbed the weapons in perfect synchrony.\n\nI'd never been this close to the men when they were grabbed by The Great Harmonious Spirit before. The raw power of it silenced the scream that I wanted to let out. There was no fear in this room, only determination. Our quiet morning had become a battle and we would win.\n\nIt was like slow motion as the huge black shape rose out of the water near the edge of the light. I couldn't see into the darkness that well, but the men could. The snake like alien writhed and coiled. It's jaws were wrapped around something small and pale and I did scream.\n\nJonathan's body was caught in the creature's teeth. I saw Aiden biting frantically at the creature's neck trying to make it let go. That wasn't what forced the alien's actions, though.\n\nDamien's family swarmed around the thing taking out chunks of its flesh. The razor sharp secondary teeth my men carried were not just for show. My family was joined by several other families of men and together they tore the creature to pieces.\n\nMore men rushed into the bathing room from outside. Mund's family led the charge with Basin's right behind. They roared a mighty war cry as one being and the walls resounded with it. They were being called and commanded by The Great Spirit. The men's power was in their numbers and their absolute cooperation, we certainly had that here.\n\nThe pool had to be searched and the danger neutralized. The new men stripped and plunged into the water intent on finding the invaders hiding in this space. Other men stood between the little boys and the water, weapons drawn and ready.\n\nThe men in the pool had torn the first creature to pieces in the water. There were other aliens hiding and they were treated the same way. The Paterian men attacked them the way a school of piranas would have. The aliens fought back viciously, intent of maintaining this entrance to our living space.\n\nI didn't feel any panic from my family, despite the great risk. The Great Harmonious Spirit was in control and there was only order to their thoughts. Still, I couldn't quite tell what had happened to my baby boy.\n\nMycah and his two Brothers had been tossed out of the pool before Damien and his Brothers went after Jonathan. The little boys were standing and staring at the water. Their teeth were down, but they weren't frantic. The Great Spirit had them and they were doing what it commanded.\n\nThe men found many snake creatures hiding. I watched in horror as they tore them apart in the water. We had literally been on top of them, but they had been waiting for something. Realizing I stood defenseless, I pulled my gun out and trained it on the water.\n\nEvan appeared suddenly at the steps, he leapt out of the water with our two boys. He placed them on their feet behind his armed campmates and disappeared back into the pool. I wasn't spared a glance as he returned to the hunt.\n\nI turned and looked down to see Jonathan and Aiden panting. They were bloodied and had jagged bite marks on their upper bodies. What really got my attention was what was hanging out of their mouths. Both the children had taken a chunk out of the alien. Their mouths were full of bloody, dripping alien flesh.\n\n\"Spit that out!\" I ordered, unsure if the nasty alien fluids were harmful to us.\n\nBoth boys complied and grinned up at me with their teeth down. They were Paterian children alright. Wicked, fierce boys whose instinct to fight could not be denied.\n\nI was grateful neither child appeared too badly hurt. They were standing and breathing, for which I was thankful, but I didn't have time to fully examine them. We were currently at ground zero for the alien invasion and we all needed to be alert. I turned my attention back to the bath just as a long black shape shot out of the water toward us.\n\nIt wasn't a Paterian male and I didn't hesitate. I knew how these things moved. I shot my gun and tore the thing in half, right where the arms met the body. The alien dropped down into two parts and made a sickening splat as it hit the floor in pieces. The men didn't spare it a second glance as they stayed vigilant for more invaders.\n\nThe water in the normally calm pool roiled as the men fought beneath the surface. In my mind's eye I saw the plan the men were following. Once the pool was cleared we needed to find what access point the aliens were using. They must be swimming in where the water entered and we needed to defend that entrance. Right now, it was imperative that the children be moved to a safer place, as soon as possible.\n\nDamien was out of the water suddenly, followed by the rest of my family. I saw the vicious predators they could be as they moved. Dark stripes covered trained and toned muscle, the men looked as dangerous as I'd ever seen them.\n\nOther men, powerful like Damien and his Brothers, leapt from the water. None of the men bothered to dress, but they picked up their swords and guns. The Paterians made a wall around the children, reinforcing the guard we had been left with. It was time to get the small and weak away from the fighting.\n\nThe guard moved as a single unit and the children were herded along. Mycah's family needed no prodding to move with the group, but most of the other children were confused. The men moved without speaking. If you weren't part of The Great Harmonious Spirit, there was no direction.\n\n\"Ciara,\" Bane growled, as we moved down the hall away from the bathing pool, \"if it isn't Paterian, kill it.\"\n\n\"Follow the men down the hall away from here,\" I called to the confused children.\n\nThe several families of children surrounded by men made their way quickly down the hall. We walked toward the large room used for healing, which was also near where the children were usually Kept. We were met by a group of guards that took the uninjured young toward the children's area. Mycah's family was herded inside the infirmary and my men left us with the large contingent of well armed guards at the door.\n\nJonathan and his family headed for an empty warm stone and scrambled up on it. They sat quiet and attentive, just like most of the other men in the hall. It was easy to see who The Great Harmonious Spirit commanded and who it didn't. I wondered why some and not others as I made my way over to my boys. There was no time to worry about the other men, though.\n\nMycah's family surrounded Jonathan and Aiden. I grabbed a pail of water and fresh cloth. Rose met me at the slab with her own pail and cloth.\n\n\"Oh, Ciara...\" she said softly looking down at the boys' bleeding bodies.\n\nMycah's family looked up at her and then at me, before their attention was back on the doorway. What was happening outside had most of their focus.\n\n\"We just need to clean them up so the Healers can help them,\" I said trying to sound calm.\n\nRose and I cleaned the wounds on both boys. The teeth marks were deep in some places and Jonathan had some uneven tears that were bleeding profusely. Our charges didn't flinch or whine as we worked. Mycah's family watched us and didn't interfere. When the Healers approached I wasn't surprised when the boys accepted the poking and prodding without any complaint.\n\nThen, I focused on my men and felt the order to their thoughts. The Great Harmonious Spirit that gripped them had them exploring the underground tunnels the water took. Rue's family had developed a way to breathe air under the water and my men were using them. They swam deep into the underground streams looking for the aliens. The organized search was very effective.\n\nMy family was close now and although I was not invited to participate in The Great Harmonious Spirit, I could witness it. My men were intimately connected to other men they knew well and trusted. For instance, I could sense Mund's and Basin's families deeply. Tyle's family was tightly bound into that original coil and so was Mycah's family. I felt Stayne and his Brothers fighting alongside Arnold's family. Those connections branched out and I felt other men, which led to bonds with still more men. It was like an enormous spiderweb of relationships.\n\nThis was what Thom had been talking about when he'd originally talked to us about The Great Harmonious Spirit. The men connected to other men they trusted. That's why little Jonathan had been able to call for help underwater. He'd used his love for his father and had initiated The Great Harmonious Spirit.\n\nI felt a personal sense of relief it was Rhane and his Brothers helping my boy. These Healers were old and well respected. I knew they would not miss anything.\n\nThe Healer's worked quickly and efficiently cauterizing bleeding and examining the wounds. Every little cut was checked very thoroughly. Several of the more jagged bite marks received a stitch or two. My little ones did not fight the Healers.\n\nJonathan looked up at them and suddenly grew his secondary teeth, which surprised me. I looked at his wicked smile and gasped. He'd broken a tooth.\n\nThe Healers just used a device to grab the damaged tooth and pull it out quickly. That must have hurt because all the little Brothers touched Jonathan for a moment. The Healers used another device to stop the bleeding. I just hoped that tooth would grow back.\n\nRhane and his Brother applied healing salve and wrapped both Aiden's and Jonathan's wounds in clean cloths. The boys accepted the wraps and then lay back on the slab. The rest of Mycah's family lay down so they were all touching. Their eyes drifted shut and they stayed like that, seemingly asleep. Think about this, is it clothes or cloths?\n\n\"What is going on?\" I asked quietly, looking up at Rhane as he packed up his tools.\n\nThe Healers were part of The Great Harmonious Spirit and they found my confusion unfathomable. It took them a moment to answer.\n\n\"Injured males must rest so they can heal. These boys will rest until the next meal and then we will check them. You stay here and watch them, Ciara,\" Rhane told me before he moved away with his family.\n\nI looked at Rose and she smiled wanly back.\n\n\"That sounded reassuring,\" she said taking my pail and cleaning towel. \"I know you must be worried, but they seem fine.\"\n\n\"FINE?!\" a woman roared behind us.\n\nThe men in the hall that were being commanded by The Great Harmonious Spirit barely spared her a glance. Rose and I both jumped nearly a foot in the air hearing her outburst.\n\n\"They are not fine!\" the woman raved. \"They are children that were attacked by an ALIEN! This is not a safe place for the men! They will be killed here!\"\n\nI couldn't help but let out a sharp, coarse laugh at her outrage.\n\n\"The MOMENT my boy saw the danger he reached out for his male breeder for help,\" I responded angrily. \"My family reached out to the camp. These boys were never safer. There is always danger, but you took away the men's ability to defend themselves on those compounds. They can't connect to The Great Harmonious Spirit when you keep them divided and isolated. The men have to have love and trust to survive.\"\n\nThe woman on the slab had a vicious wound across her neck. She still looked at me angrily and growled.\n\n\"We put them there for their safety! They are not safe here! You are nothing more than a slave and will never understand!\" she spat out.\n\n\"What doesn't she understand?\" Kana asked walking up from behind us.\n\nShe gently shooed Rose and told her to go help the Healers. I spared my friend a confused look as Kana settled on the edge of my son's warm stone. She pushed me around the rock so I rested behind her. I didn't really feel we needed protection, but my family and I were going to get it.\n\nRose moved away, but continued to watch as Kana spoke.\n\n\"Perhaps you should explain the whole story to her,\" Kana continued. \"Tell the human how we tricked the men onto the compounds. Explain to her how we made sure the different ages never bonded. Tell her why we did all that. It was never for their safety and you know that. It was so we could sell the ore off the planet! The men are powerful when The Great Harmonious Spirit has them. They can even defy us. These aliens will never survive here.\"\n\nThe room was silent after Kana spoke and I saw the rage in the eyes of the woman she had been speaking with.\n\n\"How DARE YOU...\" the woman started to say and Kana laughed.\n\n\"They know,\" Kana said blithely, \"the men here know because their women are honest with them. You should be honest with yourself about our motivations and reasons. Arguing that these injured males are reason to undo the salvation of this world is foolish indeed.\"\n\nA young family that had been standing along a near wall approached us slowly. Just looking at them I knew they were young Warriors rescued from a compound. They were not bonded to the camp and they were not grabbed by The Great Harmonious Spirit. They looked very suspicious of all of this.\n\n\"Why would we be put on the compound instead of living here?\" the lead Brother asked Kana with a slightly defensive posture. \"We have never heard this.\"\n\nThe boys looked nervous talking to females and I could tell they were ready to bolt away if Kana attacked. They must be brave men to do what they were doing now. Kana just settled herself more firmly on Jonathan's stone and started to speak with them.\n\nThe woman with the neck wound attempted to get up, most likely to fight, but she couldn't. Her wound was too bad and prevented too much movement. Tyle and his family further limited her by pushing her back down.\n\n\"Movement will injure you, cousin,\" Tyle said in a commanding tone. \"We will not lose good women to this battle when we can help it. Stay still until you heal.\"\n\nThe woman wanted to fight Kana, but she was no match for men under The Great Harmonious Spirit's control. Several families approached quickly and literally bound her body to the table with stike rope. She would be calm and rest, whether she wanted to or not.\n\nKana watched the men bind the other woman impassively before continuing her conversation.\n\n\"Many generations ago we realized the ore on this planet was valuable to other races. It fuels the portals that allow them to cross between worlds,\" she explained.\n\nMany older boys and men from the compound, left here for their safety, slowly surrounded her to listen.\n\n\"Men of this world did not like the idea of letting the ore leave our world. They fought the idea fiercely and called it wrong,\" she announced to the assembly.\n\n\"Why?\" one of the young men asked, inching closer with his family.\n\nI crawled on the slab beside Kana and looked to her to continue. I didn't know either.\n\n\"The ore is us,\" she said and her audience gasped in confusion. \"The ore is in our very make up. When we are delivered back to the Paterian fire the ore accumulates. As our physical form sinks deep into the fire we become our integral parts and the planet has us back. The ore the women mine from the mountains is our physical presence on this planet. Without us, there is no ore.\"\n\nThe men and boys were still not understanding, but I did and found the revelation shocking.\n\n\"The ore is part of the matrix in our bones and muscles,\" Kana's Sister with one wing said. \"Each of us has a little ore stored within us. The ore is the power that shapes us and connects us to each other and our world.\"\n\nBoth women took very non threatening postures and it seemed to encourage the men to ask questions. It took time but I watched the men from the compound and mountains slowly start to comprehend. They'd never thought about what literally composed their physical selves.\n\nAs I sat and considered it seemed the ore was comparable to Earth's coal and oil. It wasn't the same, not by a long shot, but it was similar.\n\nWomen all around us were paying attention to the conversation. I heard the shift of a large body behind me and looked back to see Asper watching the interaction intently. She did not speak or interrupt the proceeding, but I noted how pensive she appeared. I wondered what was going through her mind and whose side she would take in this argument. For now, she seemed to be holding her counsel.\n\nJonathan and his Brothers slept, as they had been commanded to do. I stroked their foreheads and watched them breathe. They seemed well and unperturbed, so my attention shifted back to the conversation.\n\nKana was talking about how the men were kept divided because, while one family was no match for the women, many men under The Great Harmonious Spirit could challenge any number of women. In fact, even the power of the women's venom could be overcome by the sheer force of numbers. When the men joined they became strong in many, many ways. In order to sell the ore, the women tricked the men onto the compounds and then slowly eroded their communal bond.\n\n\"We had thought once we were a rich planet we would free the men, but it never happened,\" Kana said sadly. \"I don't even know why we continue this way. It was soon evident there is nothing we needed from other planets. We hoard the riches, but they have no value to us....\"",
        "I shook my head and stroked Mycah's arm as he slept. He sighed and his fingers found my skirt. Little fingers gripped the fabric tightly, reinforcing his bond to his extended family.\n\n\"What good is wealth when you have to give up your children?\" I asked sadly.\n\n\"That is the truth,\" the woman with one wing said watching me. I looked up at her and she smiled as she introduced herself to me.\n\n\"Rysell from the T'yonin Mountains,\" she said formally.\n\n\"Ciara, from Earth,\" I replied with a grin.\n\nI was very glad to see these women coming to our way of thinking.\n\n\"They need protection!\" the woman with the neck wound spit out from her bound position. \"You should be protecting them now! They need you to go fight for them!\"\n\nKana and her Sister weren't perturbed.\n\n\"My Sister and I are good teachers,\" Rysell said calmly from her spot on the floor. \"The Administrators from the camp asked us to provide what the men they left in this hall needed. We have cousins that are physically protecting this room from the outside. If things changed, our jobs would change.\"\n\n\"Doubtful the camp would need us to protect them from the aliens,\" Kana mused watching the door. \"The real danger here seems to be you, cousin. You cannot stay locked in the old ways.\"\n\nBeyond the males questioning the Paterian women, I noted the former slaves and felt that I had shirked my duty. They stood as a group. They had been listening to Kana talk, also. Abram's family and several other cooks stood with them, diligently surrounding them. The healthy, young Paterian females left with them last night were probably assisting the men outside.\n\nThe former slaves seemed to be a touch better than they had been the day before. Many of them were looking around and several were attempting to talk to their guardians. Speaking to men under the control of The Great Harmonious Spirit was a difficult endeavor, though. I wanted to tell them that.\n\nI caught Molly's eye as I sat staring at the women. She looked around and then confidently crossed the room. She watched Kana and Rysell warily, but they just smiled at her and introduced themselves. Molly responded, but her voice was still small and unsure. It would take time for her to feel comfortable.\n\n\"Come sit with me,\" I offered patting the slab beside me.\n\nMolly hesitated before she sat with me. The old training was hard to break. Humans knelt on Pateria, we didn't sit.\n\nWe watched as Kana and Rysell moved away, saying they were worried their discussion was causing unnecessary disruption to those receiving healing. An area was cleared on the far side of the infirmary for Kana and Rysell to continue the men's education.\n\n\"One of these is your boy?\" Molly asked quietly.\n\nI stroked Jonathan's head and smiled at her. \"My brave little boy, Jonathan, and his Brother Aiden found the aliens hiding in our bathing pool. It attacked them, but they fought back. They have some bites and scratches, but the Healers said they just needed rest.\"\n\n\"Branden liked to fight, too,\" Molly smiled. \"He was so active I feared for him sometimes.\"\n\nI laughed and remembered Jonathan's early days and his obsession with our pool.\n\nMolly and I sat and talked as the boys slept. She wanted to stay on this planet with her boy, but she wasn't sure how it would be possible. Other than the men who had owned her, she had no one to help her. We just mulled it over between the two of us as Mycah's family continued to slumber.\n\n\"It was the drink,\" a high voice intoned suddenly from beside us. \"You could have just told us it was the drink that kept us from carrying their children.\"\n\nI wanted to roll my eyes and curse out loud. Vesa and her friends stood less than five paces away. They wore borrowed clothing from the camp, but they still managed to look haughty. Vesa had managed to be just as annoying as she always had been.\n\nIf I hadn't been so irritated with her very presence I might have been impressed with her ability to pull it off. Less than a day ago Vesa had been a broken mess. Thanks to our Healers, she stood in all her usual glory, despite the ragged, mismatched attire. The rebound was actually quite stunning.\n\n\"I'll tell you anything you want to know, now,\" I said forcing a polite smile. \"I was a slave and so were you back then. There were things I just couldn't say.\"\n\nVesa almost ignored what I said as her eyes raked over my body. \"Not like I'd want to be breeding with them anyhow,\" she said. \"You can't seem to stop...\"\n\nThe woman's tone was aggressive and so was her stance. I got the impression she wanted to hurt me for whatever reason. This was a place of healing and rest, though. I sought to defuse the situation promptly.\n\n\"My children are very important to my family and me,\" I said as calmly as I could. \"We enjoy being surrounded by our offspring.\"\n\nVesa snorted and her friends did, too. She took a step toward me and felt myself tense as she spoke. \"They say you STAYED with your slavers. How ridiculous is that?! You must have no sense of self-respect. You are an insult to the freedom we've had returned!\"\n\nThere was no use arguing with her. In fact, there wasn't even a point to it. We just did not get along with one another and probably never would. I didn't even validate her comment with a response. I was currently in no position to fight and that's what had happened last time.\n\n\"So, will you be taking the portals back home to Earth?\" I asked instead trying to ease any potential conflict. \"I was told that was an option.\"\n\n\"Perhaps,\" she sneered and looked derisively around the room.\n\nEvidently this whole place was beneath her. I really felt like introducing her to Rue and his Brothers. They'd probably get along wonderfully.\n\n\"Come on, girls,\" Vesa said to her comrades suddenly, \"let's not spend anymore time here.\"\n\nMolly and I sat and watched them retreat. Molly raised her eyebrow as she turned back to me.\n\n\"Nasty,\" she said simply.\n\nI patted my large stomach and grinned. \"Last time we disagreed I broke her nose, but I don't think I'm in any shape to be playing games like that now.\"\n\nMolly agreed and laid a hand on my belly.\n\n\"You are very large, Ciara,\" she commented with a slight tinge of worry. \"I hope this won't be a difficult birth for you.\"\n\nMolly was right and I'd forgotten about it with everything else going on. My pregnant belly had gotten massive. It was bigger than even it had been when I carried Kennedy to term.\n\nTyle's voice calling my name broke me out of my thoughts as he and his Brothers approached quickly. Immediately, Aryn's hand was touching my shoulder as he placed the other on my belly. He looked into my eyes as though seeking an answer to a question.\n\n\"Is there a problem with our cousin you carry?\" he asked finally. \"Is there an issue with that former slave that just walked away? You look concerned.\"\n\n\"My baby is big is all,\" I said as his Brothers surrounded us. \"The human and I have had...a confrontation before. We just don't get along. There is nothing to worry about.\"\n\nTyle's family relaxed a little at the statement and looked at Molly and me.\n\n\"We saw your faces while the other girl was talking to you. Neither of you looked pleased and Ciara had her hand on her gun. We have all been watching you. Is that human dangerous?\" Tyle asked quietly.\n\nI was surprised to find I had a hand laying over my weapon. It had been an automatic response and had evidently alarmed the men in the hall. The Great Harmonious Spirit had them very alert right now.\n\nVesa and her friends were standing and talking, but every man around them seemed to be watching them closely. If those former slaves were somehow dangerous the men would be ready. However, I didn't want to see Vesa and her friends beaten to death just because I didn't like them.\n\n\"We don't get along, Aryn,\" I pleaded, trying to relax my features. \"She's just an unpleasant human is all.\"\n\nTyle's family looked at me and then at Vesa. I'd laid a hand on my weapon. Their instincts told them I wouldn't do that unless I felt threatened and the camp protected it's own. This situation had to be resolved quickly.\n\n\"She's nasty,\" I said directing the comment to Molly, \"not dangerous, just mean. We fought before, but I doubt she'd do that now. She's just out of sorts now. I don't like her and she dislikes me. She's hard to get along with.\"\n\nMolly spoke softly and wouldn't meet Tyle's eyes, but she agreed with me.\n\n\"That girl is all talk. She doesn't feel confident enough here to attack anyone. For her it is all about looks and she is trying to look like she understands. None of us have been able to tolerate her attitude,\" Molly said while staring at the stone at her feet.\n\nTyle's family was hardly sensitive to human needs, but it was obvious Molly was frightened of them. Had they not been surrounding us, I'm sure she would have attempted to run away.\n\n\"Relax, human,\" Tyle soothed in a low voice, \"I am Tyle rescued from the Caras compound. My Brothers and I will not harm you. Ciara is mate bonded family to my Brother's male breeder. We are not like the men you knew from the compound. We know that slavery is wrong. My family and I will not cause you any pain or harm.\"\n\nTyle's Brothers all introduced themselves and encouraged Molly to look at them. She did slowly and the boys seemed pleased. They encouraged her progress with gentle words.\n\n\"It's been very stressful,\" Molly said softly. \"The girls I am with are so agitated and there are so many men here...\"\n\n\"Good men,\" Tyle reassured, \"these men from the camp will not harm you. We will teach the men from the mountains and compounds. This is not a place you should have fear. If it is too bad, you can leave. Our women will arrange portals. They have promised this. You are not trapped here.\"\n\nMolly looked cautiously at Tyle as she spoke. I saw her flinch with every other word, but she was determined to overcome her fear.\n\n\"I have a child on this world,\" she told the Brothers. \"I don't want to leave him. There are no offspring from me on Earth. I shall...I must find a way to live here.\"\n\nThe young men looked at Molly for a moment as though having a deep internal conversation. Knowing The Great Spirit it could have been a much larger conversation than even I guessed.\n\n\"Stay with us then,\" Tyle announced and his Brothers all smiled. \"We will share our lodgings with you and since we stay near Ciara's family, you can be near Ciara. My Brothers and I will help you learn freedom as you prepare to meet your male offspring again.\"\n\nMolly's mouth fell open and mine did, too. She stumbled over a few words, but couldn't seem to decide what to say. I saw her hand drift over the closure to the pants she wore and I understood suddenly what she feared they wanted from her.\n\n\"Female humans are used to be being used for sex on this planet,\" I said bluntly, there was really no other way when talking to men controlled by The Great Harmonious Spirit. \"Molly might think you want to have sex with her.\"\n\nTyle frowned and looked back and forth between us. \"We are not old enough to breed, yet. My Brothers and I will not be of age for at least two more turns of the sun. Rhane and his family have discussed it with us. Beside that, you know we would not force sex with anyone, Ciara. Our family creates honorable men.\"\n\n\"She was a slave used for sex and breeding, Tyle,\" I reminded him gently, as I laid a hand on his arm. \"You have to be very clear about what your intentions are.\"\n\nThe young men seemed to accept the answer. All they wanted was to help Molly learn to be free on Pateria. No one shared their lodgings with them right now and she was welcome to join them. They could give her a safe, quiet home. Tyle's family had a strong sense of duty when it came to anyone in the camp.\n\n\"You could have a job,\" Aryn offered hopefully. \"We are training with the Healers. It is well known humans are good Healers. Would you like to learn with us or perhaps teach us some of what you know?\"\n\nI had to grin at the sentiment. The reputation Rose and I had unwittingly earned humans would hopefully help other former slaves. Having a job did make you feel like part of the camp.\n\nMolly smiled and sat a little straighter. \"I was a Healer or at least a Healer's assistant on Earth,\" she said quietly. \"I was what we called a nurse. I used to love my job.\"\n\nTyle's family was thrilled and demanded that Molly come with them. They were all Healer's assistants now. There was much to be done here and they could use more help.\n\n\"The former slaves?\" I asked looking over at the women that still stood as a group, \"I was supposed to watch them...\"\n\n\"Others care for them, now,\" Tyle told me decisively. \"You, now, have this family to watch. We will care for the former slaves. The camp will share the chore.\"\n\nMolly followed the young family as they made their rounds and I was left with my sleeping boys."
    ],
    "authorname": "DoctorWolf",
    "tags": [
        "science fiction",
        "sci-fi",
        "science fiction novella",
        "drama",
        "alien11111",
        "outer space",
        "action adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-slave-to-the-servants-ch-35"
}