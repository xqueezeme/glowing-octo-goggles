{
    "title": "Body Swap Ch. 02",
    "pages": [
        "It is important to read Part One before reading this story. Part One offers exposition and clarity that will make this story, Part Two, more understandable. This story has a lot less 'story' and a lot more sex. The premise is that two step-siblings swap lives and are forced to live with each other's bodies, including their genitals. Enjoy! \n\n*******************\n\nThe sound of a garbage truck banging a dumpster pulled me from my sleep. Recognizing that I was still in my step-sister's body, I grumbled. Shelby slept beside me. It was dark outside; we slept through the afternoon and half of the morning. In big, red letters, the clock on the nightstand declared that it was 4:30 in the morning. \n\nI turned on the nightstand lamp. I sat on the edge of the bed looked around the room. I studied the evidence that remained from our sexual act only hours before; the wadded cum rag on the floor; my pussy and thighs, which were sticky because of my squirting; the damp spot on the sheets; the fragrance of ejaculation in the air. Seeing the verification of our dirty encounter divided my mind. Partly, I felt disgusted, unable to shake the what-the-fuck-did-we-do mentality. Contrarily, I was also intrigued and even ready for more.\n\nThe fascination of being in my sister's body had still not left my mind. I stood in front of the mirror once more to admire the new body I had assumed. I treasured the C-cup breasts fastened to my chest and the hairless pussy that replaced my hairy cock. My smooth legs and flat stomach were remarkably attractive, in addition to my curvy butt and my hourglass hips. I had stared for several moments before I snapped out of my lustful trance. \n\nI walked back to the bed. Shelby lay on her side; her cock was soft for the first time I had seen her in my body. Also, I spent a few seconds admiring her body, the body I had ownership of until the night before. When I finished staring, I tapped Shelby on the shoulder, \"wake up.\" She opened her eyes and sat up. She groaned and rolled her eyes. I wasn't sure why. She was either upset that she was still in my body or she was reminded of our naughty behavior from earlier. \n\n\"You're still me,\" I said. \n\n\"I noticed,\" she replied. \n\n\"Let's take a shower,\" I suggested. \n\n\"Together?\" she asked. \n\n\"Why not?\" I responded as she stood up. \n\nShe followed me into the bathroom. Our shower was too small for two people to use at one time, but our bathtub was large enough to entertain both of us. It was oblong and shaped like an oval. As Shelby began to draw the warm water, she asked, \"how are we going to fix this?\"\n\n\"I don't know,\" I answered. \"It's not like there's a precedence for this.\"\n\nShe replied, \"well, I hope we figure it out soon.\"\n\nWithout any warning, she walked to me and grabbed my pussy. The unexpected move surprised me and caused me to jolt backward. \"I'm just checking something,\" she said. I moved closer and let her touch me again. She ran her fingers above my pussy. \"You need to shave,\" she decided. \n\nI took my hand and examined myself. My pussy wasn't as smooth as it was before; small bristles were beginning to grow. \"Okay,\" I agreed, \"but I don't know what I'm doing.\" Shelby motioned me to sit on the side of the tub. I sat on the edge with my ass facing the water and my feet on the tile floor. She sprayed a handful of shaving cream onto her hand and then applied it to the skin around my pussy. The cream was cool and refreshing. \n\n\"Do you shave every day?\" I asked casually. She responded, \"usually, because it grows pretty fast and I don't like the bristles.\" \n\nShelby grabbed her razor then sat on the floor. \"Ooh,\" she yelped. \n\n\"What's wrong,\" I asked. She said smiling, \"my balls are hanging down and touching the floor. The floor is cold.\" I grinned. Her flaccid cock loosely pointed toward the floor. She applied the razor to my skin and delicately glided it back and forth, careful not to make any mistakes, occasionally rinsing it with the water of the tub. I noticed that her cock began to move. Slowly, it increased in length and width and was rising like a cannon. She glanced down at her cock, now semi-erect, which was pointing forward toward the bath. \n\n\"I figured that would happen,\" she joked. I smiled again. As she continued to shave my pussy, her cock continued to rise. Now fully erect, it pointed toward the ceiling. \n\nWhen she finished shaving me, she told me to sit in the tub. I unhurriedly slid myself into the hot water lest I burn myself. I sat at the back of the tub facing the spout; Shelby climbed into the other end facing me. She handed me the razor and the cream. \"Here, you have to shave your own armpits and your own legs. You should be able to figure that out.\" \n\nI took the razor and cream from her and sprayed some on my hands, then lathered the to-be-shaven parts of my body. When I finished shaving, my legs were as smooth as a filled balloon. I felt my pussy, which was equally as smooth. Next, she handed me the shampoo, with which I washed my hair. Lastly, I washed my body with soap. Running my hands across my stomach, my breasts, my butt, and my pussy started to turn me on. \n\n\"Are we going to talk about the elephant in the room?\" I asked Shelby. She stared at me but didn't respond. \n\n\"About yesterday afternoon,\" I nudged. \n\n\"We don't need to,\" she replied. \n\n\"Okay,\" I said. Perhaps I misunderstood her speaking. I reached forward to grab her still-erect cock. \"No,\" she interrupted. \"Not now.\" \n\n\"Oh,\" I said. \n\n\"We can't do that too often. It's gross. I know the situation we're in is weird and all, but we don't want to overly sexualize each other.\" \n\nI nodded. When we finished our bath, we dried off and dressed ourselves. By the time Shelby had her clothes on, her cock was soft again. \n\nThe rest of the day went similarly to the day before, except I didn't masturbate in the gym bathrooms. We went out separate ways and tried our best to cope with the struggles of being in the body of the opposite gender. Like the day before, I spent most of the day thinking about girls and sex, and I was wet for the entire day. \n\nWhen we returned home, we walked into the house together. It had only been a day and one half since we had switched bodies, but the relationship between Shelby and me had already strengthened. We were friendlier with each other; we relied heavily on one another. \n\nWe retreated to Shelby's room. We started winding down. We took off our shoes and socks, put down our bags, and relaxed. Shelby turned on the TV. I sat on the floor in front of the TV. I was horny, but I kept that to myself. I wasn't sure whether or not to talk to Shelby about my needing to orgasm. I could feel myself getting wetter because I couldn't stop thinking of touching myself. But, she had resisted earlier. \n\nAfter fifteen minutes of an internal battle inside of my mind, I finally said, \"Shelby, I'm horny, and I need to...you know...But, I can do it by myself if you want me to.\" \n\nShe pondered the thought for a few seconds. \"I was thinking I needed to do the same,\" she responded. I was mostly elated by her answer. \n\n\"Do you want to do it together?\" I asked shyly. She didn't answer. \n\nShe walked over and sat next to me on the floor. \"Do you know what is making me the horniest?\" She asked. I shook my head. \"Seeing me. I don't know how to say it, but seeing me makes me horny. Since you're me, you're making me horny.\" \n\nI grinned. She paused and said nothing more. Slowly, she leaned forward and kissed me on the lips; then she pulled away. I leaned forward and kissed her back. She pushed me backward so that I was laying on my back. She climbed on top of me and kissed me more. She pressed her hips against mine. I could feel her erection through her pants, and I felt myself getting wetter. \n\nShe began to undress me, and she kissed me between the removal of every article of clothing. She leaned me forward and pulled off my shirt and tossed it aside. She unstrapped my bra and discarded it. She slid my pants and my panties to my ankles, and I kicked them off with my feet. My panties had a wet spot in their center. \n\nNext, we swapped positions. Shelby lay on her back, and I pulled off her shirt. I sat on her hips like a horse, still able to feel the bulge through her pants against my pussy. I leaned forward to kiss her. My breasts hung downward and touched her chest when I bent over. I sat back up and tickled her cock beneath the fabric of her jeans. Then I unbuttoned her pants, kissed her again, then unzipped her pants. I stretched her legs out straight and ripped the clothing from her body. \n\nHer cock made a tent in her boxer shorts. Like the jeans, I quickly yanked the underwear off of her body. Her cock stood straight up like a soldier at attention, but it also manifested a sense of freedom since it was now able to bounce and move in any direction. I cupped my hand around her big ballsack, which sagged low. I gripped my hands around the stiff cock. It was warm and thick, and it begged me to be touched. I cautiously licked the back of the cockhead; Shelby exhaled. I wasn't sure if I could handle the taste of a cock, but when I realized that it wasn't too terribly bad, I crammed it into my mouth. I moved the cock in and out of my mouth. I was only able to fit half of the thing in my throat. Otherwise, I would have gagged. \n\nShelby gave a soft moan and then pulled my head away from her crotch. She stood up and tapped the bed, summoning me to lay down like a dog. I climbed onto the bed and lay on my back. Shelby lay on her stomach, placing her head at my hips. With her index finger, she caressed and teased the outside of my pussy, which, at this point, was more soaked than it had been the night before. \n\nHer teasing made me even wetter and eager to start the real sexual activity. She grabbed my knees and spread them as far apart as they would go. She grabbed her cock and slid it into my wet pussy. I gasped. The initial thrust of her 7-inch cock inside of me sent a flood of pleasure throughout my entire body. She leaned forward and played with my boobs. Her cock rested immobile inside of me. She kissed me again and tangled our legs together. Then she slowly began to withdraw her cock from my pussy. When she pulled the cockhead back to the point where it was almost outside of my pussy, she shoved it back in. Another rush of pleasure resounded through my body - from my head to my toes. \n\nShe slid her cock backward again, then pushed it forward. She repeated this back-and-forth motion; while her cock occupied my pussy, her mouth continued to kiss me. She lay on top of me so that her stomach was on top of my stomach, and that her chest was on my breasts. She reached her arms under mine and placed them under my head. With every thrust of her hips, an indescribable torrent of gratification took my body captive. She quickened her thrusts. Every time she crammed her cock to the back of my pussy, I whimpered. At first, these groans were nothing more than a hollow breath of air with no vocalization, but as Shelby kept pumping her cock in and out of me, my moans became louder and longer. \n\nThe feeling of a cock inside of me was unrivaled. It felt like the cock was pushing the walls of my pussy to the side as it came through. My heart rhythm was accelerating, and every breath I drew became deeper and stronger and was followed by a vocalized moan. Shelby quickened her movements again. She rested her head on my shoulder. I felt her hot breaths crawling down my back. My arms were wrapped around her back, and I could feel her perspiring. The longer she spent fucking me, the closer together her breaths became. \n\nShelby was now ramming her cock in and out of me as quickly as she possibly could. Her balls were clapping against my skin, and every movement of her cock made a slopping sound with the juices from my pussy. My breasts bounced every time she pushed forward. By this point, my heart pounded like a drum and my veins struggled to contain blood that traveled faster than a rocket. \n\nFinally, my body prepared for orgasm: my breasts rose and sank swiftly with every inhale and exhale respectively. My skin was blanketed with goosebumps and sweat. I tightened my grip on Shelby and almost dug my nails into her back. My legs lost control and were attempting to flail in whichever direction they were free to move. I moaned frequently and loudly. Suddenly, the gratifying feeling in my pelvic area burst like a bomb, shattering every nerve and muscle in my body. \n\nI screamed, but Shelby kept fucking me. The brilliant flood of pleasure dispersed in ripples. Each time a ripple surged through my body, my head jerked forward, and my hips sank into the bed; with every ripple, my muscles tightened. My pussy released a small volume of squirt every time it contracted. Shelby kept fucking me, and the pleasure only slightly diminished after the initial thunder of my cumming. \n\nI lay shivering after the stupefying stun of an almighty orgasm, but Shelby was still moving. At last, she drew a gigantic breath and started whimpering. Her hands clenched around my hair, and I could feel her heart thumping through her chest. I felt her cumming inside of me. The squishing sound of my pussy juices now became considerably louder after the introduction of her cum. I felt some of it ooze out and slide downward into my ass crack and onto the bedsheets. I opened my eyes and looked at her face. Her mouth was wide open, and her eyes were closed so tightly that it looked painful. \n\nSuddenly, the excitement of Shelby's cumming sent me over the precipice again. The captivating waves of pleasure regained their control over my body. I screamed again, this time louder and longer. I couldn't tell if I squirted more or if the wetness I felt was Shelby's cum. I squirmed, twisted, and wiggled so much that Shelby's cock slipped from the inside of me. She tried to grab my pussy, but I pushed her back. The pleasure was too much for me to handle. \n\nShelby crept backward and waited until I stopped cumming. This was the longest orgasm I had ever experienced in my life. It seemed like its captivation lasted for an eternity, but 30 or 40 seconds is probably an accurate guess. \n\nI lay looking downward toward Shelby. My breasts continued to rise and fall quickly with every breath I took. I remained speechless attempting to catch my breath. I looked at Shelby, and she smiled at back at me. I giggled. \n\nGradually, my heart rhythm diminished, and the time between each of my breaths increased. Our sex left my body weak, and I struggled to pull myself up to sit on my butt. I looked at my pussy. It was covered in a mixture of my cum and Shelby's cum. Shelby's cock was shiny and glossy from the same combination, and the bed sheets were stained.\n\nShelby crawled beside me lay down to my left. I grabbed a blue towel from the floor and started cleaning myself off. I attempted to wipe the cum from inside of my pussy and around my pussy. To no avail, I pressed the towel onto the bed to remove the stains from the sheets. Then I handed the towel to Shelby. She wiped her cock and her pubes, then threw the towel on the floor. The towel was blue covered in specks of white. \n\nWe lay next to each other and fell asleep. \n\nWhen I woke up, I looked to my left to see if Shelby was still beside me. She wasn't! I was on the left side of the bed. Quickly, I jumped up and turned on the lights. On the bed lay a large-breasted blonde. I looked in the mirror and saw a handsome boy with an attractive cock. \n\nI was back in my body. \"Wake up, Shelby,\" I shouted. She opened her eyes and looked at me. Her countenance expressed glee when she saw me, in a male's body, standing before her. She grabbed her breasts and pussy to verify that she was indeed back in her own body."
    ],
    "authorname": "horny2233",
    "tags": [
        "body swap",
        "body swapping",
        "swap",
        "swapping"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/body-swap-ch-02"
}