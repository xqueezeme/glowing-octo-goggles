{
    "title": "Between the Bars Pt. 06",
    "pages": [
        "Chapter 26\n\nMy dick was already hard when I woke up curled around Daniel with his warm bare ass shoved against me. I didn't have to open my eyes to know where I was or what was going on because even in my sleep, he was there. I snuggled against his back while he slept heavily, facing the concrete block wall on his side with his arm thrown over the pillow as the darkness lightened into dark gray shadows. I didn't want to wake him when he was finally peaceful. His sleep was very troubled, at least until I woke him up from a shallow doze with my mouth wrapped around his dick.\n\nJust thinking about last night made me shake all over. My face flushed and I buried it in the naked pillow although there was nobody to hide from but myself. Last night, after we'd talked and then slept a bit, his flesh was so hot under the blankets with the darkness pressing down on us. We stroked and licked and groped, all hands and mouths and sweaty skin, sloppy uncoordinated kisses, clashing teeth and seeking tongues. Daniel's hands came down to squeeze my ass and I suddenly froze as the sensation of his hands sent wild tingles through me and I wanted... My heart thumped madly in my mouth. I couldn't tell him, I couldn't ask. I wanted it, I ached for it, but I didn't know how to put my need into words. I couldn't. I just trembled under his touch and stared into the dark where I could see the faint gleam of his eyes.\n\nI didn't have to ask.\n\nI don't know how he knew, but he did. \n\nAt first, I worried. When he rolled me over and pushed me to my knees. The bed might squeak and pound the wall. What if someone wakes up, what if Charlotte or Paul or the kids hear the sharp sound of hand on flesh? Charlotte will know even if the kids have no idea what they're hearing. She would know and tell Paul and they'll talk about me, discuss the situation. That I let Daniel spank me, that I moaned with pleasure from it. What will they think? Of me?\n\nBut then he'd stripped the pillowcase off and wrapped it around my wrists, snug but not tight, and pushed my hands over my head so my fingers curled around the edge of the mattress and I stopped thinking. Thinking about things wasn't my responsibility anymore. No thoughts, no decisions, no shame, just floating. Delirious. Quivering in a non-thinking sexual cloud just surrounded by danieldanieldaniel and nothing else, his voice in my ear telling me everything he's doing while his hands give such lovely stinging attention to my ass. Then fucks me hard on my knees from behind and when I cum, and then cum again, it's not the end, just another moment in a series of moments that blow my fucking mind. \n\nThe orgasm didn't matter that much because it started happening in my mind the minute he started this and didn't stop until I fell asleep groggy and exhausted and aching in a damp pile tangled in Daniel's arms and legs. He slept too, barely moving at all. \n\nI used to think I was an accomplished top. In the lifting gray shadow, I stared at his peaceful shape while he slept, thinking about what he'd told me last night. I wasn't really listening in my cloud but apparently, it sank in anyway. That bottoms actually have more control. Something about giving up control making me more powerful. Making him responsible for me, always aware of my feelings and my pleasure. I loved that he was doing that for me but I'd sure as hell never done it for anyone before him. I thought I was a good top because everyone got off, but it was really about me. I didn't know how to be a good top because I'd never had one. Daniel said that the first night at the farmhouse and he was right. He knew.\n\nNow he was teaching me the way Ray taught him. It had to be Ray. Strong but loving. You don't learn that on your own. He'd started showing it to me when he was handcuffed to the chair. Maybe somewhere along the line, somebody has shown Matt.\n\nMatt. Fuck. I rubbed my nose and my lips against Daniel's neck. Matt stopped entering my mind years ago, except in random thoughts. When I was in graduate school, he tried to contact me through my grandparents but I deliberately lost his number. I didn't have anything to say to him, not even \"fuck off.\"\n\n\"Hey.\" \n\nDaniel looked over his shoulder and smiled at me, that incredibly sexy sleepy smile, his ass shifted against my crotch and everything else was just gone. I pulled him backward and pushed my tongue in his mouth. I didn't care about morning breath. Just a little more time, steal a few more minutes. My hands wandered over his body memorizing every hard curve and every inch of skin, while he closed his eyes and panted, rubbing against my touch like a cat. My cock slid between the muscular cheeks of his ass. \n\nI snaked my hand around his hip, stroked his shaft and caressed his balls. He purred in his throat. I pushed him to his stomach and licked down his back. He caught the edge of the mattress. For a second, I paused and just stared at all that naked male perfection, his shoulders and arms and back, lean and smooth and rippling with muscle, spread out like a feast for me to devour. Then, I raked my fingertips from his hands all the way down his arms, over his shoulders and back, down over the shallow dips of hard muscle to his round, sweet ass cheeks. My dick leaked a slippery trail over his right thigh. \n\nMy tongue gravitated toward that place that always drew me, the valley at the top of his crack, drawing his ass cheeks apart to breathe on his tender pucker. It was too dark for me to see his hole; it was just a shadow between his pale cheeks. He shivered and buried his face in the pillow. \n\nI found his hole with my tongue and circled it delicately, sucking at it lightly and breathing in the light cinnamon scent while his hips jerked. I loved watching him flinch and shudder and rub his cock against the mattress. I loved watching him mouth the pillow to keep from making a sound. The rising sun gave me more light to see him by, see how he moved and responded as I slowly tongue-fucked him. Making him feel good was suddenly my everything. \n\nHe pushed his ass back into my face and I buried my tongue in his tight hole. I felt it flex, wanting more, telling me what he wanted. A touch of lube and I slid two fingers inside him, and he lifted his ass with a little moan he couldn't bite back. \n\n\"Want to make you feel so good,\" I told him. He whimpered in response and I smiled, licking the underside of his balls while I slid my fingers in and out. \"Does it feel good?\" I breathed on his hole.\n\n\"Yes.\" Daniel drew his knees under him and arched his back, face still buried in the pillow. For some reason, that made me tremble with excitement, knowing he couldn't make a sound or everyone would hear. His hole twitched around my fingers, fluttering, coaxing. On my knees, I quickly got ready and then I pushed him over to his back. I wanted to see his face. His legs slipped around my waist, pulling me into him. He caught my neck and dragged me down to kiss him. We both sighed with such relief I slid into him and stopped.\n\nWe stared at each other as I slowly started to thrust. God oh god, my dick demanded to fuck him hard and fast but I held back, letting him set the pace. I watched his face, his reactions, felt his body. When I relaxed and stopped thinking about the tingling knot of pressure building inside my balls, I felt him and I could feel exactly what he needed, it was like slipping out of my own body into his and it was fucking ecstasy. \n\nHe smiled up at my wide startled eyes, caught my mouth and kissed me and pulled me into him harder and I was lost. I angled my thrusts upward and twisted my hips, fucking giddy, intent, shaking, watching him as he threw his head back and bit his lip as my thrusts hit his prostate. I slid my hand over his scalp and rubbed it in between thrusts and Daniel started making this low, growling whimper in his throat. Around my dick, the muscles of his tight ass began to clench in hard spasms. \n\nI looked at his face just in time to see his surprise. The whimper broke free of his throat and spilled out his lips the moment he grabbed my biceps in a hard grip. He writhed as his dick erupted and shot his hot cum between us, without either one of us touching it. I kept hitting his prostate but much more gently, staring down at him in wonder, the way his face got flushed and the way the muscles of his ass throbbed around my dick and it felt so fucking good I couldn't stand it. A deep tingling ache quivered through me and I dropped my head and locked my open mouth over his. With starbursts popping behind my eyes, I moaned and gasped into his mouth while he watched me cum with silent delight. Finally, I fell forward onto his sticky chest and he held me as we both broke into giddy laughter, and his hands went all over my back and my ass, kneading and squeezing, reassuring and greedy.\n\n\"Jesus Christ, Rylan. What did you do?\" \n\n\"Let's see... rimmed you, then fucked the hell out of you?\"\n\n\"Yeah. That's it.\" He laughed softly and then got very still. \"We need to get up, you know,\" he whispered as if not saying it aloud would lessen the blow. I pulled out and rolled over onto my back beside him. My stomach clenched with anxiety and fear as the reality of what faced us crashed down on me all over again.\n\n\"I know.\"\n\nHiding in my aunt's basement, in this bed, wasn't going to make it go away. His hand wrapped around mine and gave it a hard squeeze before he slid out of bed and padded naked to the bathroom. We showered and dressed in silence, with the grayness outside the small basement windows lifting relentlessly into daylight. As I stripped the cum-stained sheets off the bed, I caught sight of Daniel near the door, loading his gun with deft fingers, and I stopped and stared at him, my stomach tying in knots. Yeah, somewhere in the time we'd spent in the farmhouse I'd forgotten the hard, ass-kicking cop side of him and seeing it so blatantly knocked the wind out of me. It reminded me how much about him I didn't know and that scared me, but I knew he needed it because that was what would keep him alive. He slid the gun into the back of his jeans and buttoned the flannel shirt over it.\n\nHe saw me looking. \"Know how to use one?\"\n\nI nodded. My grandpa taught me everything about guns when I was still in elementary school. \n\nTrying so hard not to worry, not to choke with fear for him. It wouldn't help. I had to be calm and focused so I could watch his back, since that was all I could do to help him. He didn't want me involved, but he needed my eyes and my mind's ability to see clearly, even if it took time. Like Charlotte said, he might not know it yet, but he needed me. He needed me and I wasn't going to fail him.\n\nUpstairs, Charlotte was already in the kitchen with a full pot of coffee and plates of breakfast while Paul sat quietly at the table eating. The kids were obviously still in bed. A sliver of sun pierced the edge of the field and flooded the landscape with sharp icy glitter and long, indigo shadows. I shook my head doubtfully when she pointed to a plate of eggs, bacon and toast, hand on my stomach.\n\n\"I don't think I can.\"\n\n\"You need to eat,\" Charlotte said much more gently than usual. I could see the anxiety in her eyes even though she tried to hide it. \"Please, Ry. Who knows when you'll get another chance.\"\n\n\"She's right,\" Daniel added. Despite the urgency to get on the road, he nodded at me encouragingly and we sat down to eat. Nobody spoke. My food made a lump in my throat. When Daniel put his fork down, I jumped.\n\n\"Be careful.\" Charlotte put her hand on his shoulder. \n\n\"I will.\" He hugged her suddenly. \"Thank you.\"\n\nShe kissed his cheek and pulled away, turning to me. Smiling through the worry. \"Hey, Squirrel Bait. Don't do anything stupid, okay?\"\n\n\"You know me,\" I shrugged.\n\nShe put her hands on my shoulders. \"That's what I'm worried about.\" We tried to smile but then she was hugging me hard, whispering in my ear. \"Please be careful, Ry. Don't want you hurt. Take care of him, Daniel.\"\n\n\"I will,\" Daniel answered. Paul was standing now, handing Daniel the keys to the Subaru Outback we'd be driving to Chicago. \n\n\"If something happens and we can help, call.\" Paul looked Daniel straight in the eyes and I loved my aunt's husband so much right then. I'd never known anyone so straightforward and honest, willing to do anything to help if it was the right thing to do. These two were risking a lot for us. If things went bad, it could come down on them, but it didn't matter to them because that was just the way people did things around here. I could tell Daniel was a little overcome by all this, he struggled for something appropriate to say, but finally, Paul just reached out and shook his hand and told him to go.\n\n\"Don't be a hero. Stick to your plan, and take care of Ry for us.\"\n\nWe headed out the door then, before things got emotional, throwing our few things into the backseat. The car was filled with gas and hopefully it would be enough to get us all the way there. The plan was to stick to the back roads, and not to stop unless we absolutely couldn't help it, which should put us at Kat's place before noon. The scenery on the state highways from here to Chicago was mostly endless fields and barns, with the occasional pig farm you could smell miles away. The few small towns we'd encounter would be easy enough to avoid. There was a map in the glove compartment but I knew the way. Anytime I'd gone on a trip to the big city with my grandpa, we always took the back roads because of his irrational hatred of interstates. There might be some state cops here and there, but if anyone just happened to run Paul's plates, nothing suspicious would turn up. A lot could go wrong, but there was nothing else we could do. We had to try it.\n\n****\n\n \nChapter 27\n\n\"So many fucking cops. Are there always this many cops?\" \n\nThe closer we got to Chicago it seemed like police cars were everywhere and every time I saw one my heart jumped straight into my mouth and my stomach churned. I was at the wheel now because I knew the roads from my years at Northwestern. My knuckles were white and my eyes constantly checked the rearview mirror.\n\n\"They're always there,\" Daniel answered calmly. \"But you only notice them when you're doing something illegal.\"\n\n\"Oh, like speeding, or aiding and abetting a fugitive?\"\n\nHe shot me a look. \"Ray used to do that,\" he finally said. \"Made jokes about things when he got scared.\" He kept looking at me thoughtfully. \"It's funny. You remind me of him sometimes.\"\n\nMy ego didn't like him saying the word \"scared,\" but I was, and fear makes me snappy. \"I can see how you'd get me confused with a big Puerto Rican cop.\" \n\n\"It's not that,\" he ignored my smart-ass comment. \"You're nothing like him but there are just times when I see things about him in you. Like your sense of humor, and your bravery.\"\n\n\"Brave? Daniel, I'm scared as hell.\" I laughed nervously.\n\n\"So am I. Only idiots have no fear. When I first joined vice, Ray was on the team for my first raid. I put on this macho act that I wasn't scared of anything, and I remember him telling me it was bullshit. That brave people do their jobs despite being afraid. The adrenaline fear creates keeps you alert and cautious. If you lose that, you lose your edge and somebody could die.\"\n\n\"I must be pretty brave then after all.\" I managed a laugh.\n\n\"You are.\" \n\nHe smiled at me and once again, did that thing where he kept looking at me, long enough for me to lift an eyebrow and say, \"What?\"\n\n\"Nothing.\" Shrugging, he looked away out the windshield. \"Ray would like you, I think.\"\n\nI thought I knew what that meant and my heart actually skipped a beat. It sounds ridiculous, but it felt like it was about to jump out of my chest. Just a little more time. We just have to finish this. When it was finished, we could move on. Although, I wasn't sure what we were moving on to, and I wasn't going to think about it until I had to. Right now, I couldn't dwell on the fact that Daniel lived in Tallahassee and I lived in Atlanta, and that my life would bore him to death. All that was on hold.\n\n\"You know where we're going, right?\"\n\nThis time I shot him the look. \"I get you where you need to go, don't I?\" I asked, making him remember how I got him out of St. Louis to the relative safety of the farmhouse. The reference wasn't lost on him. He nodded and answered softly.\n\n\"I trust you.\"\n\nFor a moment, I flew. For a cop in a dangerous situation, trusting the wrong person could be fatal, and the fact that he put his trust in me meant everything. As I took the city streets toward Wicker Park where my friend Kat lived, we were silent but I couldn't stop a silly grin from creeping over my face from time to time, even if it was out of place right now. Daniel sat next to me, quiet with his own thoughts, and I kept stealing glances at him. He caught my eyes and smiled and slid his hand over onto my thigh, a gentle and reassuring pressure. \n\nAccording to the numbers on the buildings, Kat lived just up the block. I swallowed the panic that rose up in my throat and looked over at Daniel. He looked a bit pale himself but he lightly squeezed my thigh and we traded a shaky smile. \n\nThe only parking was on the street in front of Kat's building. It was freezing, as Chicago in December usually is, so at least everyone else was wrapped up in bulky coats and hats, with sunglasses over their eyes, and we didn't stand out with our cold weather gear that protected us from recognition just as much as the elements. Even so, with our pictures on the news there was still a chance someone might get a good look at us. Every cop in the city was on alert. Logically, I knew they had no reason to be watching Kat, but that didn't stop my gut from lurching.\n\nWhen we got out of the car and walked through the icy chunks of old snow onto the sidewalk up to the door, I had the panicky feeling that Daniel was out in the open and exposed like a hunted rabbit. Fuck. I wanted to grab his arm, put myself between him and the world, but I didn't want anyone to look our way for any reason, and even here in Wicker Park, people might stare. I just wanted him safe. My heart was banging against my chest when we slid into the cold little lobby and pushed Kat's buzzer.\n\n\"Rylan, get the fuck in here!\"\n\nThe door burst open, someone grabbed me and I had an armful of a foul-mouthed little whirlwind with butch-cut black hair, dragging me into the hallway with one hand while latching onto Daniel's coat with the other fist, talking and talking.\n\n\"Been glued to the news all morning, just knew I'd see you on CNN in the back of a state patrol car. Made it okay, no trouble, no roadblocks or car-to-car searches on the interstate?\"\n\n\"Yeah, we stuck to the back roads and it was fine,\" I assured her. I laughed apologetically over to Daniel who looked both bewildered and amused. \"This is my friend Kat.\"\n\n\"Kat Grissom with the Sun-Times.\" She stuck out her hand to him as she swung her apartment door open, checking him out with her blue eyes that saw everything all at once. \"And you're Detective Daniel Braden.\"\n\n\"Pleased to meet you, ma'am.\" He shook her hand. That Southern charm of his was innate and effortless and even Kat, hard-assed cynical Chicagoan that she was, melted a bit even as she lifted an eyebrow skeptically. \n\n\"Uh-huh. Come on in, guys, just throw your things over there in that chair. I want to go over some of the facts with you. I've got my editor clued in and we're ready and waiting. As soon as you furnish us with proof, we're ready to proceed.\" \n\nShe stood by talking while we put down the few things we'd brought and stripped off all the cold-weather gear. The relief of simply making it here without anything happening made my knees feel a little shaky and Daniel had been waiting at least an hour to go to the bathroom. He slid his gun out of his waistband - he'd moved it from the back to the side while we were in the car, so he wouldn't be sitting on it - and tucked it into his bag before he disappeared down the hallway Kat pointed him. ",
        "Kat fed us gourmet-shop chicken fettuccine she had stashed in the fridge. I wasn't truly hungry so I just picked at it, but Daniel ate his dutifully. Something he learned to do in the Army, eat whenever he could. Perched on the edge of a stool while we ate at the kitchen island, Kat got us up to speed.\n\n\"I'm supposed to meet Scott Wyman tonight outside the precinct so we can talk about the case. I thought I'd bring him back here, where you two will be waiting, and you can talk to him, Daniel, and convince him to get into the Chicago PD network and download your video files to my system, and I'll send them to the server at the Times for safekeeping. Once it's there, I can break that part of the story and you'll be instantly proven innocent in front of the world.\" She grinned. The Pulitzer Prize was probably dancing through her head. \n\n\"What if Wyman doesn't want to be convinced?\" I asked. She blinked at me like she hadn't even thought of that when it seemed obvious to me. \"You can't just break his fingers and force him.\"\n\n\"I can,\" Daniel said under his breath. He grinned at me, and at Kat who was looking worried, wondering if her plan had holes in it. \"Don't worry. Once I talk to him, he'll do it. I'm very persuasive. And while he's here, he can tell me where he's keeping the rest of the evidence in the case against Adkins, and I can take him with me to pick it up, just in case he tries to fuck me over again.\"\n\nThough he was just as matter-of-fact as always, I sensed a hard edge in his words. I also didn't fail to notice that he was using \"I\" and \"me\" again; it was back to being a solo effort. I knew it was only because he wanted to protect me, but if he thought I was just going to let him push me aside, he had another thing coming.\n\nWe talked over a few things while we ate and Kat typed a few notes on her laptop on the counter next to her. Her apartment, though pleasant and airy, was small and I couldn't help feeling claustrophobic. For once, I was the one pacing restlessly, while Daniel sat still at the center island carefully reviewing Kat's notes. When the door buzzer went off, though, we both jumped out of our skins.\n\nDaniel was instantly on his feet, hand darting behind him for the handle of his gun before he realized it wasn't there. \"Who's that?\" \n\n\"Don't worry,\" she told us, going for the intercom. \"That's just Alex Stanbury, a colleague from the Times. We can trust him.\" She pushed the button and said \"Alex?\" into the intercom. A male voice answered \"Yup.\"\n\n\"Why'd you call him over here?\" Daniel was still jumpy and displeased.\n\nShe paused before buzzing Alex in. \"Because when I go to meet Wyman, it wouldn't be smart to go alone, and neither one of you can get that close to the station. I called him for backup, and he's also very good with computers in case we need help with Wyman.\"\n\nSuspicion still lingered in Daniel's eyed but he knew Kat was thinking straight and he nodded his head. She hit the buzzer and a few minutes later, heavy footsteps came up the hallway. Kat opened the door and let in a big, round young man with a sweet face somewhere in the scruffy beard and wool cap. He smiled shyly and shook our hands when Kat introduced us all. Along with the teddy-bear cuddliness, there was a definite gay vibe in the way he looked at Daniel when he thought nobody noticed.\n\nThe minute Alex sat down at his laptop, his awkwardness disappeared. In just a few seconds, he was working with Daniel to get past the Tampa PD's intranet security codes. He didn't even need the USB. His fingers flew over the keyboard and when I saw Daniel turn and look at him with something approaching awe over a brilliant point he'd made, I actually felt a stab of jealousy. Fuck, I hadn't been jealous in so long I didn't even think I felt it anymore. I didn't like it and I squelched it immediately, so he would never suspect. I trusted Daniel and I wouldn't put the burden of being responsible for my feelings on him. Soon enough, I had myself almost convinced I'd never felt it at all. Nope, not me.\n\nThere was no way I could keep up with the technical aspects of the conversation between Alex and Daniel, even as Alex patiently explained everything in layman's terms. Kat was talking at great length into her cell phone, gesturing as she paced around the apartment, so I used her desktop computer to log into my own email. There were quite a few frantic and worried messages from friends who'd seen me on the news, and about a dozen each from my editor Nick and Lauren, my agent, but I couldn't answer them. The words blurred as I read fear and despair from Josie and Drew and Lauren. Bringing my dear friends such worry broke my heart. But if someone was watching them, waiting for me to make contact, an ISP address could be logged and lead to my whereabouts, and Daniel's, and all this would be for nothing. \n\n****\n\n \nChapter 28\n\n\"I hope you're not planning on doing anything...-\"\n\n\"Stupid?\" Daniel supplied when I stopped to consider my words. \n\n\"I was going to say risky. But stupid works.\" I nodded and he laughed slightly. \n\n\"Don't worry, Ry. I didn't come all this way to fuck up now.\" \n\nHe stared out the windshield into the dark, lit by streetlights and the bright circles of slow oncoming headlights, squinting in concentration. In the front seat, Alex was at the wheel of Kat's SUV. The tinted side windows protected Daniel and I from being seen while we sat here waiting for Kat to arrive in Alex's car with Scott Wyman. Night had fallen and we were parked on a side street about a mile from the station house where Wyman had just gotten off his shift. Daniel thought this was a better, safer plan than sending Kat and Alex to bring him back to the apartment; he felt like less would go wrong if he were there himself. At first, he tried to get me to stay at the apartment, but when I pointed out he might need extra backup if Wyman freaked out, he couldn't argue with my logic. \n\n\"I think this is them,\" Alex mumbled softly. \n\nI tensed up and expected Daniel to do the same, but he didn't. When I glanced over at him, he was casual and relaxed with no sign of nervousness. Just a cold gleam in his eyes that reflected in the headlights. He leaned back into the corner of the seat, staying out of the light, while we watched Alex's car stop of the other side of the street. Kat and a guy who had to be Scott Wyman crossed the snow-scraped street and came closer to the car. Wyman looked confused and skeptical, arguing with Kat as she opened the passenger side front door, right in front of me.\n\nAs he got in, he was protesting and then Kat slammed the door behind him. Alex hit the locks and Wyman's face dawned with alarmed realization, eyes flickering around, demanding what the hell was happening as the vehicle moved away from the curb. At the same time, Daniel sat up out of the shadow.\n\n\"Hey Scott,\" he said in a low, even voice. His gun was nowhere in sight, but I knew it could be in his hand in an instant. Wyman gasped and stared at Daniel with his mouth hanging open; and then I watched a huge grin spread over his face.\n\n\"Fuck. Danny. It's you. With this manhunt and what I heard about St. Louis, I didn't know what to think.\"\n\n\"I'll bet,\" Daniel said evenly. \n\n\"What in the hell happened, man?\" Wyman went on seemingly oblivious to Daniel's demeanor. Odd, very odd. \"They said you evaded capture but you were headed there to help them. Did somebody set you up?\"\n\n\"You tell me, Scott.\"\n\nThe way the man's eyes flew open was almost comical. He was average looking, nothing special, not like Daniel. Just a solid-looking guy in khakis and a parka who probably had a wife and kids and a picket fence.\n\n\"You don't think I had anything to do with...\" When he finally looked in Daniel's eyes in the dim light of the streetlights passing by, he started shaking his head adamantly. \"I didn't, Danny, I swear. I didn't know anything about a set-up, the orders came down from the captain and I was just...\"\n\n\"Just following orders,\" Daniel finished with a slight sneer. \"Did you have the orders checked out? Did you follow up with them and then double check just in case, or did you just leave me out in the fucking cold? Yeah, I thought so.\"\n\n\"But the captain came in my office with an FBI agent and told me exactly what I told you, I didn't have any idea it wasn't legit.\"\n\n\"So your captain's in on it too.\"\n\nWyman's eyes bugged out. \"Never noticed anything off before.\"\n\n\"We both know that's no guarantee.\" He growled, and I knew his thoughts were on Olmos, his own captain, the one person he thought he could trust.\n\n\"No, but you believe me, don't you Danny? That I didn't turn on you? You know I wouldn't do that, right?\"\n\nDaniel sighed wearily. Something about the way this guy was behaving, like an eager, slobbering puppy rolling over to the alpha male, the way he kept calling him Danny, rubbed me the wrong way. He made my skin crawl, so I was surprised when Daniel finally made a face.\n\n\"Yeah,\" Daniel said grudgingly. \"It wasn't intentional but it was still sloppy and it almost got me killed. You can get my trust back by getting past intranet security on the CPD network and downloading my video feed.\"\n\n\"I can do that, no problem.\" Scott nodded eagerly.\n\n\"And as soon as we're done with that, you're going to take me to the rest of the evidence so I can finish this.\"\n\nScott's agreement was a little slower this time but Daniel seemed to accept it at face value. Honestly, I couldn't believe it. My instincts were all going against trusting this guy, but I told myself that Daniel knew him better than I did. They were in the Gulf together. I trusted Daniel's gut, but that didn't mean I wasn't watching Scott Wyman's every move. I wasn't taking my eyes off him for a second.\n\nAfter introducing me to Scott without any explanation of who I was - he hardly needed it with my face all over the news - Daniel spent the rest of the trip back to Kat's telling him an abbreviated version of the events that got us here. When we pulled up in front of Kat's building, I followed along in silence behind Scott, Daniel and Alex as they all discussed the security within the police department's internal network. Yeah, Daniel had it all under control, and I wanted to be relieved. I really did. \n\n\nKat had beaten us back to her apartment and was waiting. In Kat's living room in front of Alex's laptop, Scott remotely accessed the Chicago Police Department's files where he had encoded and stored Daniel's video feed. Everything went smoothly though I could tell by the tension across Daniel's shoulders that he was expecting trouble after what happened to him in the Tallahassee network. With a USB cable, Alex directed it to Kat's computer, remotely hooked up to the Sun-Times' server. Daniel called me over from the couch where I was scribbling in my notebook to keep my mind off my unease.\n\n\"Rylan, watch.\"\n\nThey were huddled around a small box on the screen. I had to squint because it was dark, grainy and hard to see but when the action started happening on the screen, it was unmistakable. I wedged myself against Daniel's warm body and he leaned against me. My heart banged in my chest as we both stared at the tiny images. \n\nI was seeing exactly what he saw that night, seeing through his eyes.\n\nA door leading into a house. The camera shook with Daniel's steps and I could see his hands in the bottom edge, opening the screen door with gun drawn. Another cop with him, walking close. I could see bits and pieces of his body but not his face. Frowning, Alex turned up the volume but when nothing came out, he let out a growl and turned pleadingly apologetic eyes up to Daniel.\n\n\"Shit. The audio feed dropped.\"\n\n\"No matter.\" Daniel shook his head without looking away from the screen. He was grim, but calm. I had to force myself look away from him, back at the screen. I didn't want to look. I knew what was going to happen.\n\nThrough the door and down a cluttered hallway. Crappy house like you always see on Cops with a filthy floor. Dim shapes in room with a couch, men in police uniforms. Their faces are grainy but recognizable, for someone who knew them. I heard Kat make a little sound in her throat and I tensed because I knew what was coming. The man, the big cop on the other side of the room, talks to Daniel, his mouth moving silently, and the other cops in the room fidget around nervously, pacing and peering through the shabby blinds like they're waiting for someone. \n\nThe cop on the screen suddenly smiles right at Daniel. This is Sgt. Adkins. There is a scuffle as the officer he came in with knocks around Daniel. The camera jumps and jerks wildly then finally stops close to the floor. Daniel must be on his knees at this point and the periphery of the camera catches the toes of other officer's boots on either side, standing behind Daniel holding him down on the floor. One of the other officers, alert now, comes forward and then appears back in the camera's eye with a gun in his hand, which he hands over to Adkins. Daniel's gun. I just know it. They took Daniel's gun and now he's on his knees, unarmed and helpless. He's standing here right next to me unharmed and whole, but I still feel an overwhelming sick fear and my knees get weak. I want to look away but I can't. I stare at the tiny blurry image on the screen, we all stare as Adkins lifts the gun and points it at Daniel. Smiles and pulls the trigger.\n\nA giant, soundless jolt; something drops onto the floor next to Daniel but beyond the camera's reach. After a moment of confusion, the camera turns and there is a leg, lying on the floor. A body and a river of dark blood. Officer McKee, the one who walked in with Daniel, the one who disarmed him and pushed him to the floor, shot with Daniel's gun. I know he dies. \n\nThe camera can't show us if he was killed instantly or if he's in a pool of blood, in agony. Adkins doesn't even look at him. He just stares at Daniel and grins while the blood seeps closer to where Daniel is motionless on the floor. At Adkins' command, another cop comes forward and drags Daniel to his feet from behind and pushes him face-first against the wall so that all the camera sees is the stained wallpaper. \n\nAnd then the camera jolts, the picture turns to static, and goes black.\n\nThere was a brief silence in the room, broken by Daniel.\n\n\"There's your proof,\" he muttered.\n\nI started to grab his arm but he moved away from me. I let him go but I looked him in the eyes to make sure he knew that I never doubted it, ever.\n\n\"What happened when the camera stopped?\" Kat demanded. \"How did you get out of there?\"\n\n\"One of Adkins' men grabbed me and pushed me against the wall. When he did, the camera came loose. He spotted it and ripped it off me and smashed it.\" Daniel shrugged. \"I figured I was already dead by then. Adkins shot McKee with my gun because he wanted everyone to think I was the dirty cop, that I had killed McKee and he was the big hero for bringing me down, to prove to IAD that he couldn't be touched. He was going to arrest me and make sure I was sent to death row. When they found the wire he was about to beat the hell out of me, just to get his point across before he took me in. With so many witnesses from the force, nobody would've believed me.\"\n\nWhen I saw him that day in the caf\u00e9, he wasn't bruised and beaten. My mind went back and spun through our first meeting. He looked a little tired, but he didn't show signs of the terrible ordeal he'd been through. It awed me, how this all seemed routine to him.\n\n\"But then...?\" Kat prompted gently after she'd given him a moment. \n\n\"But then whoever owned the house came home. Or a rival gang or something. I don't know what happened. Thugs were everywhere and shots were fired and I saw a chance to get the fuck out there in the confusion, so I did. When something like that happens, you don't question it. I didn't stop to analyze the situation, I just slipped out the front door though the gunfire and blood and I was gone. I drove around for a while to make sure I wasn't being followed, and then I headed to my safe house. You know the rest from there, I think.\"\n\nThe rest was that he ditched his vehicle, caught a Greyhound to Atlanta and hooked up with me. He could've died. If Adkins had had ten more seconds, Daniel would be dead. My legs turned to water and I had to sit down.\n\n\"That's amazing,\" Alex mumbled from over at the computer. His eyes worshipped Daniel shyly before he looked away blushing. \n\nDaniel shook his head dismissively. \"Nah. Just my job.\"\n\n\"Now that your story has been verified I'm going to put this on the wire,\" Kat said, going back to her hardened reporter persona. \"It won't take long for it to be up on all the news sites,\" meaning soon, Daniel's innocence would be indisputable. He couldn't be arrested for murder and the police, FBI and ATF would have to move in on this investigation and take over. The relief was staggering.\n\n\"Okay Scott,\" Daniel turned to him as Kat disconnected cables and slid into her chair and Alex typed on his laptop. \"Now where's my evidence?\"\n\n\"Um, see... the thing is, I don't... exactly know.\"\n\n\"You don't know?\" Daniel repeated after being speechless for a moment, while Scott squirmed under his ice-cold glare.\n\n\"Yeah. Well, when this shit all started to come down with you, I got nervous. I knew they'd figure out that you had a copy of all your evidence, and I knew they'd trace it back to me at some point. I didn't want it nearby in case they started watching me, so I hid it.\"\n\n\"And you don't know where?\" Daniel was having a hard time staying calm. It was a rare and unnerving sight, seeing his jaw muscles tense as he struggled not to explode. He started to pace before his excess energy couldn't be contained.\n\n\"I... Not exactly. See, I put it in a geocache.\"\n\n\"A what?\"\n\n\"A geocache,\" Alex spoke up in his usual shy mumble. \"It's a sport, or a game... People put items into a container and post the GPS coordinates on this website forum... and then when someone finds it, they log it.\"\n\n\"Right,\" Scott nodded. \"And I left instructions with the container asking whoever found it to move it to another set of coordinates. It's not lost...I know it's in the Chicago area. All I have to do to find it would be to decode all the coordinates and then track it on a GPS.\"\n\n\"That's all, huh? I can't fucking believe you put evidence in a major nation-wide criminal case into a fucking game, Scott. What the fuck were you thinking?\" Daniel remained calm but only just barely.\n\n\"Hey, back off, man. I told you I got nervous and I have a family, remember?\"\n\nThat headed Daniel off. I saw his little intake of breath and his eyes dropped to the floor. I knew he was thinking about Ray. He'd already lost his own family to this. That was enough.\n\n\"Okay. Okay. Let's just find this goddamn container of yours before somebody else does.\"\n\n\"No problem.\" Scott pulled a chair up next to Alex, who was already on the official Global Geocaching website. Daniel watched them, and so did I at first. But the long day of strain and anxiety had me totally drained so I sank down on the couch to keep an eye on Scott. Before I knew it, my eyes were so heavy, I thought I might just close them for a few minutes.\n\n*****\n\n \nChapter 29\n\nI woke up sleepy and confused. Daniel was half-reclining next to me in the corner of the big sectional couch, slowly running his fingers through my hair. It was dark except for the glow of Alex's computer on the other side of the room, where he was still hunched over the screen pecking steadily at the keys. \n\n\"Did you find it?\" I asked in a voice that turned out much more sleepy and plaintive that I'd meant it to. Daniel smiled.\n\n\"Almost,\" he answered softly. I noticed that across from us, on the other side of the sectional, Scott was restless lump. Kat must've gone to bed.",
        "\"What time is it?\" I put my head in his lap. The denim of his jeans was soft against my cheek, warmed through by his skin. His fingers tugged gently at my hair. I was starting to get a little turned on but I tried to ignore the shivers. Not exactly the right time.\n\n\"Almost four. Scott had gotten those coordinates encrypted, and he didn't know the code. Alex had to break it. He's getting it all worked out now.\"\n\n\"I should get up so we can go when he's finished.\" I started to sit up but Daniel caught my arm.\n\n\"We're not going yet, we're going to wait till morning.\" \n\n\"Oh.\" \n\nI was content to lay my head back down on his lap and close my eyes while his fingertips brushed my scalp. I was torn between sleep and the tingles slowly gathering in my belly and spreading down into my balls. I knew he was doing it on purpose. My dick started to rise despite Alex sitting just couple of yards away, and Scott sleeping nearby. I sucked in a breath and Daniel laughed softly. His touch became deliberately slow and sensual and when I looked up at him, he was gazing down at me intently, eyes crinkled in the corners. He teased me with his fingertips, raking through my hair and over all those sensitive spots on my neck and shoulders that he knew so well. I nuzzled his thigh and reached up to stroke the faded denim in little circles with my palm. Of course, it crept up from his thigh to his crotch and I smiled even wider, eyes still closed, when I felt him getting hard. Alex was probably looking but I didn't care. All I cared about was the faint but distinct throbbing of his erection pulsing under the pads of my fingers.\n\nMy head hit the couch cushion as Daniel suddenly stood up, dumping me off his lap. He grabbed my hand and pulled me with him through the doorway into the small, warm bathroom. Alex stared over his shoulder at us. The door clicked shut and Daniel flipped on a small light above the sink with one hand as he turned me around to face him. I loved seeing that smile when he dropped his chin to kiss me. The light in his eyes made my knees weak. He wrapped his arms around me, surrounding me, kissing me, tasting my mouth. His tongue traced patterns on the roof of my mouth and I sucked at it greedily, clinging to his neck. I pressed my hips forward into his and the friction of my cock against his made me moan with pleasure.\n\n\"Shhh.\" He grinned and whispered against my lips. \"We always seem to end up in the bathroom.\"\n\n\"Yeah. In someone else's house, where we can't make a sound.\"\n\nI didn't mean to sound pouty but I did, and he ran his hand through my hair with a gentle touch. \"When this is all over, Rylan, I promise we'll spend time together, somewhere that it's just us.\"\n\n\"Can it have electricity this time?\" I pretended to complain as I pulled his lips to mine. I loved kissing him when he was laughing. I loved the softness of his lower lip when I drew it between mine and nibbled. I loved our noses smashing together as we stared into each others' eyes. I loved the little kisses he trailed down my chin, over my jaw, on my nose and forehead and eyelids. \n\nHands, skimming down my chest, teasing my nipples through my shirt just the way I liked it. His hands and his lips were slow and tender, instead of demanding. I reached up and ran my hand all over his head and felt him shiver in response. Without saying the words, I tried to put all my love into my answering touches and kisses so he would feel it surrounding him. He brushed his lips and tongue down my neck to that little spot on my collarbone and I felt my knees start to go out from underneath me. \n\nWith a smirk, Daniel eased me back against the sink, so that it was supporting my weight. Then he locked his eyes on mine and started to sink to his knees. I instinctively gripped the edge of the sink and struggled not to throw my head back. I wanted to watch him.\n\nI watched him run his hands down my chest and over my belly and down my thighs in one smooth stroke that left me trembling. I watched him nuzzle the hard ridge of my cock through my pants, and lick at my balls. I watched him grin up at me devilishly as he popped the button on my pants and drew down the straining zipper.\n\nMy cock sprang right into his face and he licked the length before wrapping his lips around the head and then I was totally lost in his warmth. We never broke our stare as he sucked my cock slowly with his hands on my thighs. Warm tingles shot up through my belly until I felt them in my fingers and toes and all I could see were his eyes through a haze of yellow sunbursts. He'd somehow unzipped his pants with one hand and he was stroking himself while he sucked me off, looking up into my eyes, and I was fucking lost. The intensity of the sight got me off so hard I bit my lip and scratched at the sink while I shot into his mouth and he never looked away as he swallowed my cum steadily. I caught the back of his neck and trembled through my aftershocks, the world tumbling and spinning like a dryer around me, and his eyes went back and he moaned softly around my deflating cock as he spurted into his hand and onto my pant leg. Then he was laughing and wrapping his arms around me, back on his feet, kissing me with his sweet juicy mouth.\n\n\"Fuck, you taste good,\" I whispered. I closed my eyes and tried not to tremble like a leaf. God, his taste, his scent, the way he kissed me just...\n\n\"No, that's you.\" He laughed. I sagged against him, laughing weakly. I was in a warm little cloud now and somehow without my noticing, Daniel had gotten me tucked in and zipped up and back onto the couch with his arm wrapped around me and everything was hazy. The last thing I was aware of, dimly, was his voice telling me to get some sleep.\n\n***\n\n\"Shit!\"\n\nWhen I sat up and it was gray morning and Daniel and Scott were nowhere to be found, I knew exactly what they'd done. Alex was snoozing in the recliner and I got right in his face and shook him.\n\n\"Where the fuck are they?\"\n\n\"Wha-huh?\" He started awake with a snort and stared at me blearily, trying to make sense of what was happening.\n\n\"Daniel and Scott. They're gone.\"\n\n\"Yeah.\" He nodded, eager to be of help when he'd finally shaken off the sleep. \"Daniel wanted you to stay here, he said you were safer here. He and Scott went to go locate the geocache.\"\n\nThat son of a bitch. He'd dragged me into the bathroom to give me a blowjob so I'd crash out and he could get up and leave me behind. \"Motherfucker,\" I swore softly. \"Get up and take me to him, Alex.\"\n\n\"But, it's okay, Scott's with him...\"\n\n\"I don't trust Scott. Dammit, Alex. You know where they are, I know you do.\"\n\n\"But he just didn't want anything to happen to you,\" Alex protested, even as he lurched to his feet and started fumbling for his shoes. \n\n\"Well, I don't want anything to happen to him. And you don't either, do you, Alex.\"\n\nHe blushed because I'd noticed his little glances and the way he got flustered when Daniel looked his way. Hell, he'd only sat up the whole night helping Daniel when he'd just met the man a few hours ago. How the fuck could I miss it? It only mirrored exactly how I felt.\n\n\"No, I... just let me go tell Kat,\" he practically whimpered. As he disappeared down the hall, I frantically went through Daniel's bag, searching for his gun. Please let him have it with him. My heart was racing madly and my stomach turned nauseating flips. When I found the gun, I felt my gut drop out from under me. Why did he leave the apartment without it? Wherever Daniel was with that piece of shit Scott, he was unarmed and I had to get to him. \n\nThe gun was kept loaded, but without a round in the chamber. With a ch-chunk, I slid a bullet home and put the gun into the pocket of my parka, where it would be easily accessible. I just had this weird feeling I could barely put into words that Daniel might need it. Alex grabbed his coat and keys, affected by my urgency, and it was only a minute before we were down at the curb getting into his freezing cold car, breaths hanging in the air.\n\n\"Where are they?\" \n\n\"Busse Lake. It's a nature preserve about a half-hour from here.\"\n\n\"I know where it is. Is this - whatever it is - hidden, or is it in plain view, or what?\"\n\n\"Hard to say. They're usually well hidden, but not buried; of course, the snow makes it all different. With all this snow cover, even when they locate the exact GPS coordinates they might still have to dig for it,\" Alex explained as he cranked the car and pulled out.\n\n\"How the fuck did he get a GPS?\"\n\n\"Oh... uh, my cell phone has one,\" Alex mumbled guiltily. His tires clunked over piles of frozen, dirty sludge. I couldn't believe he gave Daniel his cell phone so he could ditch me and go off on this damn fool treasure hunt. I wanted to ask him if he was fucking crazy, but I managed to stay silent. He'd thought he was helping Daniel; no doubt, he'd thought of me as the nagging, overprotective boyfriend. Shit! I still couldn't believe Daniel trusted Scott, especially after Scott set him up once. No matter how he tried to deny it and act innocent, I was positive Scott had something to do with the incident in St. Louis and I believed he was leading Daniel into a trap now, unarmed and helpless...\n\n\"Shit. Can't you drive any faster?\" I demanded between my teeth.\n\nHe hit the accelerator. I'd long since lost track of what day it was, but I assumed it was a weekend since the roads were clear of usual morning rush-hour traffic. The delay was unbearable. Panic clawed at me, leaving ragged edges. The sun crept up somewhere behind the dark bank of clouds with slow and dreadful sameness. Alex wasn't any more interested in speaking than I was. I didn't trust Scott, but I trusted Alex. Despite the paranoia that Daniel managed to pass on to me, I had from the very first moment and I was grateful for his silent presence.\n\nThe open gates of the Ned Brown Preserve were just ahead. I felt myself getting lightheaded, my body's reaction to adrenaline, but I refused to give into the looming panic. Instead of alert and cautious like Daniel said, adrenaline had a tendency to make me fuzzy and unfocused. \"Do you know where to look?\" I asked Alex sharply.\n\n\"The general area, yeah.\" He headed down the narrow, winding paved roads, following the arrows that pointed to Busse Lake. The snow here was thick and still white and fresh, coating the barren ground and the dark skeleton trees. My eyes scanned around constantly, marking everything in sharp detail. My heart gave a mighty jump into my throat when I spotted Charlotte's green Subaru parked at a pullover, and next to it, a Chicago police cruiser.\n\nToo late. \"Where?\" I barked, grabbing the door handle.\n\n\"That way.\" Alex pointed toward the trail that opened to my left with a sign showing the way to the lake. I jumped out of the car before it completely stopped moving and as soon as my feet touched the snow, I was running, my feet crunching on the frozen snow. The gun was a burning weight in my pocket. Soon, Alex's heavy footfalls ran to catch up with me. \n\nCouldn't see through the thick trees. As I ran, I started to hear muffled voices. I recognized Daniel's and my heart, already racing, nearly stopped. Instinctively, I reached into my coat pocket and drew Daniel's gun, solid and cold to the touch, but reassuring. If I could just get it to him in time, he could protect himself...\n\nA shot. Loud, muffled pop, then another and another. A shout, a scream and I burst into the clearing just as Daniel stumbled and fell into the snow. Scott was a short distance away on the left, standing over a uniformed officer lying on the ground, whose gun fell just as Scott crumpled from the shot. \n\nDaniel lay in the middle of the clearing, and a man was about ten feet from him. Adkins. I recognized his handsome but chillingly vacant face from the video. He bent over and picked up a green ammunition case. No question this was the geocache, the box containing the evidence. He lifted his gun and pointed straight at Daniel lying helpless on the ground, clearly alive but not moving. His eyes flicked to me as I appeared from the mouth of the trail and that distraction gave me just enough time to raise my own gun and aim deliberately. No confusion, no fear, just cold rage. He hurt Daniel. Never fire at someone unless you plan to kill them, my grandfather taught me. Calmly, I pulled the trigger for one deafening shot and Adkins fell to the ground without a sound, a look of surprise frozen on his face. \n\nI ran to Daniel. In the moment of firing, I was completely peaceful and clear, but seeing Daniel lying in the snow with dark blood wetting his parka and starting to drip into the snow was enough to send panic through my veins like ice water. Pushing it back fiercely, I lifted Daniel's head into my arms. His eyes flickered open onto my face.\n\n\"You came,\" he said. His eyes were shockingly blue against the white snow, where a dark stain of blood was starting to spread from his shoulder, soaking through his coat.\n\n\"Of course, I did. Always.\" I cradled him against me. His breathing was shallow but not labored and despite the large amount of blood, when I lay him across my knees and opened his jacket, the wound was in his shoulder and not in his chest. Relief almost made me vomit. \"You're okay, Daniel. You're okay. We're going to get an ambulance.\" I knew Alex was behind us, checking on Scott and the other officer. I knew he'd get a cell phone and call for help.\n\n\"Did you kill him?\" Daniel asked rather blearily, as if he were very tired. He was lucid, but the bleeding had to be stopped soon. The exit wound was larger and bleeding far more than the entry wound. My fingers found the hole in the back of his shoulder and gently applied pressure to slow the blood flow. Help would be here soon. It had to be.\n\n\"Adkins? No. He'll live. I wanted to kill him because he hurt you, and I could have.\" I had to stop and take a deep breath. I'd aimed directly for the throat; this caliber of bullet at this short a range would have killed him, but at the last second I veered the barrel of the gun slightly and I shot him in the side. \"But I missed on purpose because I didn't want to let him off easy. I want him to pay. You will get justice for Ray, I swear it.\"\n\nDaniel smiled faintly. His face was turning sickeningly pale against the blood-spattered snow. Alex came up and hovered over us, a look of horror dawning when he stared down at Daniel.\n\n\"Scott's dead,\" he said softly. Carefully, he set the ammunition case down next to us.\n\n\"They were always going to kill him,\" Daniel mumbled. \"Because he saw the evidence. Only let him live this long to show them where it was. Thought he could bargain, use it to buy his life... always was fucked in the head...\"\n\n\"Daniel, shhh.\" I held him closer to my warmth. Alex mutely sank to his knees facing me and wrapped his arms around Daniel and me, adding the heat of his big body to mine to keep Daniel warm. In the distance, coming closer, we heard sirens. They couldn't have gotten here this fast from any call Alex made, it had to be a backup call made by the patrol car before this went down. They were damn sure of themselves. Backup would have come upon the scene and found two dead perps, the fugitive cop Daniel and his accomplice Scott, gunned down by the two heroic officers. That would have been the story on the news. The cover-up would've made certain of it, but thanks to Kat and Alex, the truth would be told, complete with proof. Everything, all of it was going to come crashing down. Daniel had accomplished his mission and I hoped with all my heart that it would bring him the peace he needed.\n\nThe paramedics and the police arrived there at the same time. I felt myself being pulled off Daniel. Rough hands held me from behind and voices were talking to me but I barely noticed, they were next to Daniel checking his wounds and loading him onto a stretcher. Kat was there suddenly with a coat over her pajamas, she somehow managed to be everywhere. Dimly, I saw Alex and Kat talking to the cop who held the ammunition case, explaining. I knew Kat would make everything all right so I didn't think about that. I really couldn't care less about the evidence anyway, Daniel was the only thing that mattered, and everyone was talking at once while I stared at the paramedics loading Daniel into the back of an ambulance, his wrist handcuffed to the metal of the gurney. Face so pale, eyes closed. Wet with blood. \n\n\"Did he force you to help him, or was it of your own free will?\" \n\nThe voice dawned on me, shaking me out of my haze. \"Voluntary. He didn't force me to do anything. I love him.\"\n\n\"Then you're under arrest for aiding and abetting a fugitive, fleeing arrest....\" Cold metal handcuffs clicked around my wrists. Wait a minute, this wasn't right, but I couldn't speak, I couldn't do anything. The voice kept talking, listing charges and reading me my Miranda rights but the creeping panic couldn't be kept at bay anymore and when I found myself in the back of a squad car everything went blurry as the monster finally swallowed me.\n\n****"
    ],
    "authorname": "carsonshepherd",
    "tags": [
        "undercover cop",
        "fugitive",
        "handcuffs",
        "spanking",
        "blow jobs",
        "anal sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/between-the-bars-pt-06"
}