{
    "title": "The Extremely Full Monty Ch. 01",
    "pages": [
        "I was standing completely naked on stage, well, except for shoes and a hat. The hat covered the goods, but now I had to turn my bare butt to the audience. What would all my friends think? \n\nMy mind raced and suddenly I remembered what my wife always said. \"Robbie, you need to start your stories at the beginning. You always begin in the middle, and no one knows what you're talking about.\"\n\nSo, I'll try to make some sense. I'm not quite sure where the beginning is, but I definitely know the ending. It is with the woman I want to spend the rest of my life with.\n\nSo let me try to put this tale in some order. \n\nI'd always enjoyed the theater. At Dartmouth I was part of the theater group, appearing in many productions. Never a lead, I usually was a reliable minor character or crowd fill-in. Having a decent voice, I always made the chorus. So, after graduating, starting a career and settling down, I became active in our local theater. \n\nA number of years ago, the community rallied to preserve an old vaudeville theatre from the wrecking ball. We raised money to buy, refurbish and establish it with a modest endowment that could keep most of the wolves from the door. About ten years ago, we hired a professional manager, and she began producing a mixture of plays that brought in the audiences to put our theater on sound financial footing. She would throw in the occasional drama or avant-garde play, but our bread and butter were musical comedies.\n\nI volunteered to serve on the board, and then slowly became involved in many of the productions. The closest I came to a starring role was being the Narrator for Dicken's A Christmas Carol. Otherwise, I was a bit player or helped with stage management, something I enjoyed.\n\nHow I came to be standing naked on stage in front of 900 people had its roots in a discussion with Sarah, our executive director. She invited me to lunch at an upscale deli next to the theater.\n\n\"Robbie, we need a real AIS,\" she said.\n\n\"AIS?\"\n\n\"Yeah, asses in seats,\" she replied grinning. \"Our spring shows didn't bring in the revenues we expected. If we don't have a boffo production this summer, we're looking at a deficit.\"\n\nI nodded and nibbled on my pastrami sandwich. Tin Pan Alley had the best pastrami in the state, and they charged accordingly for it.\n\n\"So, I'm putting up The Full Monty.\"\n\nMy eyes widened as I tried to swallow the bite in my mouth.\n\n\"Sarah, don't you think that's a bit on the wild side for us. I mean there's nudity in it.\"\n\n\"Just male nudity,\" she said as if that made all the difference in the world.\n\n\"Still,\" I argued, \"we're known as a family-friendly venue. I think some of our patrons might be upset.\"\n\n\"Robbie, I spoke with Debbie Callahan, you know her, she manages the Capital City Theatre.\"\n\nI nodded.\n\n\"Well, they put on The Full Monty two years ago and had three sold out weekends. I mean every freaking seat in the place. And, they hiked the ticket price five bucks across the board. Made a killing.\"\n\nI quickly computed what that would mean to us and understood that Sarah made an excellent economic point.\n\n\"But, what about the shock of the Palladium doing it?\"\n\n\"Look, we'll promote it with a caution. Let everyone know up front that the show contains nudity. That will warn parents not to take their kids, plus it will draw in people who normally wouldn't be caught dead in our house. Just imagine all the ladies' book clubs reserving whole sections of the theater.\" We both laughed. \n\n\"Ok, you're making sense. Why are you pitching me?\"\n\n\"For two reasons,\" she replied. \"One, everyone on the board respects you. You're a smart guy, and you've been around since the beginning.\"\n\n\"Oh, you mean I'm old,\" I said with a smile.\n\n\"Hell, Robbie, you aren't old, it's just you are one of the leaders who have kept us going all these years. Really, the board listens to you. If you said putting up The Full Monty was the right thing to do, they'd go along.\"\n\nWithout falling into an overblown sense of self-worth, I knew she was right. I was the most senior member of the board in terms of years of service. The other members knew I always kept what was best for our theater in the forefront. If I supported Sarah, I knew the rest of the board would give it serious consideration.\n\n\"Ok, what's the second reason you're treating me to this delicious and expensive hot pastrami?\"\n\nSarah gave me a sly smile.\n\n\"Oh, I'm paying for lunch?\"\n\n\"Tight budget you know,\" she said.\n\nWe both laughed. I always paid for our meals together.\n\n\"So, what else is in that devious mind? I can see the wheels turning and that usually frightens me.\"\n\nSarah took a long sip from her iced tea. \n\nShe turned her wide, blue eyes to me, flashed her warmest and engaging smile and said, \"I want you in the show.\"\n\nIf this were a sit-com this would be the part where I spit my drink all over the table. Instead, I choked on my sandwich. I coughed up a hunk of pastrami and discreetly hid it in my napkin.\n\n\"What?\"\n\n\"You've seen the movie, right?\"\n\n\"Yes, it's been a while, but I have.\"\n\n\"Remember the Tom Wilkinson character, Gerald?\"\n\n\"Vaguely.\"\n\n\"Well, he's one of the guys and he's bit older than the rest.\"\n\n\"Ah, back to me being nearly senile.\"\n\n\"You know that rhymes with 'penile'\" Sarah said with a laugh. I shook my head, and stared at her.\n\n\"Robbie, you'd be great for the role. I mean here you are, a pillar of the community, and you'd be willing to do a turn in the buff. God, it will make casting the rest of the show a snap. Plus, you know you don't really show the 'full Monty'. You keep that part covered with a hat. You do get so show your sweet butt, though.\"\n\nI thought my butt was probably at least a decade past sweet. I continue to exercise, and try to keep some muscle tone, but no one would confuse my ass with that of a twenty or thirty year old.\n\n\"Flattery may get you somewhere, Sarah, but I'm not sure that it will get me naked on the stage.\"\n\n\"Oh, come on, it'll be a hoot. I know you love acting. Let yourself go, Robbie.\"\n\n\"I don't know.\"\n\n\"Do it, Robbie. Just say yes.\"\n\nI looked at Sarah. She was an attractive woman, but what made her most appealing was her sincerity. She made you believe in whatever she was saying. \n\n\"So, is Jonathon directing?\"\n\nSarah looked away for the first time since we sat down.\n\n\"Actually, he's taking this summer to direct a couple shows on the Cape.\"\n\n\"So, who's directing?\"\n\nSarah refocused on me. \"I am.\"\n\nI experienced a quick flash of anxiety knowing she would be seeing me naked\u2014if I agreed. I understood that the audience would only see butts, but in rehearsals, all would be revealed. I've known Sarah for years. When Sarah was married, she and her husband would socialize with me and Connie, my wife. Her daughter and mine were best friends all through high school. Katie was at our house as much as she was at home. I convinced the board to hire Sarah to be our executive director. I wasn't sure how it would be standing naked in front of her. I'm sure she'd be professional, but still I wasn't sure I could be. \n\nWhat if I got excited? God, that would be embarrassing. I had long admired Sarah's looks. She's younger than I am, around mid-forties. She has wild black hair that is naturally both curly and unruly. On the short side, she still maintains a trim figure. Her pale complexion and brilliant blue eyes teamed with her dark hair cause people to stare. They are not disappointed after the first shock wears off, Sarah has a beauty that goes deep and grows as you get to know her.\n\n\"Sarah, I don't know.\"\n\n\"Look, Robbie, I thought this through. We're friends. I love you and everything you've done for me. Maybe it might be a little awkward at first, but I know we can handle it. Besides, you'll just be one of a half-dozen naked guys.\"\n\nI realized that I would be standing around bare-assed with other men. I was not hung up on size, well no more than any other man. I knew from years working out at the Y that I had nothing to be ashamed of. Still, I worried that there would be a lot of judging going on, even if everyone was claiming to be professional. I didn't want to be identified as the runt of the litter. Funny, I was thinking that I didn't want Sarah to find me lacking in that category.\n\n\"I always knew you were a charmer, Sarah. I never fully realized you could literally charm the clothes off a person.\"\n\n\"You'll do it?\n\n\"Yes, I'll do it.\" To myself, I acknowledged I harbored a secret thrill with exhibitionism. \n\n---\n\nI remember the first time Connie and I went to a nude beach. After we had our second daughter we needed a break. When she was a year old, we convinced Connie's mother to take both girls for a long weekend, and jumped on a plane to Miami. Leaving snowy New England behind, we looked forward to four days of sun, relaxation and undisturbed sex. With two little ones demanding so much time and attention, our love life was suffering. \n\nAfter checking into our hotel, we changed into swim suits, and headed to the pool. We left temperatures in the twenties to bask in the sun of an afternoon of eighty-four. Sipping an adult beverage, we couldn't stop smiling. The pool was getting crowded, and a young woman strolled by. She eyed the empty lounge next to us, and asked if we'd mind if she took it. \n\nWe assured her it was fine. Connie watched as she spread her towel, and stretched out. I tried to be inconspicuous, but couldn't help but admire her fit figure. She was long and lean with blond hair fashioned into a braid. A visor and dark wrap-around glasses added to her beach bunny appeal. She wore a small two-piece that showcased her tight abs and tighter butt. Her breasts filled out her top, but were not large. She looked to be a few years younger than our thirty-two years.\n\nConnie caught me checking out the woman and smiled. I knew I was busted and shrugged. The three of us relaxed, and let the sun bake tension out of our bodies. After about a half-hour, the woman turned on her stomach. She undid her top and tried to spread lotion on her back.\n\n\"Want a hand?\" asked Connie.\n\n\"Would you? I'd love it.\" Connie knelt beside her and covered her back with sun screen. I noticed the woman did not have any tan lines. \n\n\"Legs too?\" Connie asked.\n\n\"If you wouldn't mind. If I tried, I probably flash your husband.\"\n\nConnie rubbed lotion on the long legs. \"Don't think he'd complain,\" Connie said. \"You have a beautiful figure. You must work hard at keeping in shape.\"\n\n\"Have to,\" the woman said. \"I'm a professional beach volleyball player. Wouldn't do to have fat bouncing around on the sand. My sponsors would prefer I keep the men interested.\"\n\n\"Are you here for a tournament?\" Connie asked as she finished applying the sun screen.\n\n\"Actually, just finished one. My partner headed home to see her husband and kids. We're off until next week. Thought I'd catch up on sleep, and chill out for a bit. \n\nRising up on one elbow, she covered her breast with a hand and said, \"I'm Janice Brown. Pleased to meet you.\"\n\n\"Connie and Robbie Carswell,\" said Connie. She went on to describe our situation, and that this was our first get away since our children were born.\n\n\"Stoking the fires?\" the woman said.\n\n\"Breathing some life into the embers,' Connie replied. \"Our lives are fulfilling, but not exciting. Getting away should help. We only have to concentrate on relaxing, and the most taxing decision is what to have for dinner.\"\n\n\"Not leaving time for sex?\"\n\nConnie laughed. \"Always time for that. Well, there used to be. I think we're looking forward to alone time.\"\n\n\"There's a great seafood restaurant within walking distance from the hotel. You ought to try it.\"\n\n\"Thanks, we will. Join us?\"\n\n\"Wouldn't want to disturb your alone time.\"\n\n\"Don't think we'll be having sex at the table,\" said Connie. \"Of course, you never know.\"\n\nThe two women laughed. \"In that case, I'll risk it. Let me make reservations. Shall we say around 7?\"\n\n\"Deal,\" said Connie. We spent the rest of the afternoon taking dips, ordering umbrella drinks, and getting to know each other better. When we met Janice in the lobby, she was wearing a long, colorful sundress that exposed all of her shoulders. She had undone her braid to allow her blond hair to flow in thick waves past her shoulders. Even with just wearing sandals, she was as tall as I, at around six feet two.\n\nConnie gave her a hug, and told her how good she looked. \"Do you get used to people staring at you all the time?\"\n\n\"Mostly it makes me think I must have toilet paper stuck to my shoe,\" said Janice. She had a nice way of not taking herself too seriously. We walked to the restaurant, and were seated at a window table.\n\n\"This is perfect. We can see all the sailboats and enjoy an ocean view.\"\n\nThe waiter came over and addressed Janice. \"Is everything to your liking, Ms. Brown?\"\n\n\"Yes, thank you. Shall we start with a bottle of wine?\" When we agreed, Janice ordered something.\n\n\"Take it they know you here, Janice?\" I asked.\n\n\"I'm local talent,\" said Janice. \"Some treat me like a celeb. It's embarrassing, but does get me a nice table along with great service. And, please call me Jan.\" The wine arrived and we began a splendid dinner.\n\nAs we were all sharing a decadent chocolate cake for dessert, Janice asked if we really wanted some excitement.\n\n\"That's why we're here,\" Connie answered obviously feeling the effects of the two bottles of wine we shared.\n\n\"So, tomorrow want to try something a little different?\" said Jan.\n\n\"Sure, what?\" said Connie.\n\n\"Instead of the pool, we'll go to the beach.\"\n\n\"Sounds like fun, but to be honest we've been to beaches before,\" said Connie. \n\n\"Were they nude beaches?\" said Jan with a smile.\n\n\"Come to think of it, they weren't,\" Connie answered.\n\n\"Game?\" asked Jan.\n\n\"You bet,\" said Connie. I suppose I didn't have a say. If I did, I think I would have suggested we head there now. \n\nWalking back to the hotel, I had my arms around two beautiful women, and was thinking of how both would look naked on the beach. After saving good night in the elevator, we practically ran to our room. The door had just closed when I was pulling Connie's shirt over her head.\n\n\"Looks like someone is eager,\" she said as she ran her hand along my erection straining at my zipper.\n\n\"I've been looking forward to this since we made our reservations.\" I unzipped her skirt and shimmied it and her panties to the floor. I knelt and kissed her trimmed, soft bush. I was rewarded with the scent that always made me happy. As I ran my tongue along her slit, Connie doffed her bra and tossed it aside.\n\n\"Fuck me, Mr. Carswell.\"\n\n\"I intend to do so, Mrs. Carswell, and do so thoroughly.\"\n\nConnie backed onto the bed and pulled down the covers as I stripped. She took my erection in her hand, and pulled it to her mouth. Connie did things with her tongue that made me happy that someone invented oral sex. When I couldn't stand it any longer, I eased her onto her back and hovered above her. \"Is Mrs. Carswell ready to be fucked?\"\n\n\"Indeed, sir, she is.\"\n\nI entered in one, long push accompanied by little squeals from my wife. \"God, Robbie, I've missed this so much.\"\n\n\"Well, then I better get to work and refresh your memory completely.\" It didn't take long for us to reacquaint ourselves with what makes us both happy during love-making. When we reached our climaxes within a minute of each other, we held hands and looked at the ceiling.\n\n\"That was wonderful,\" Connie said.\n\n\"Makes me wonder how we let ourselves get into a rut that pushes sex aside,\" I said.\n\n\"You were exceptional tonight,\" she said. \"Maybe thinking about seeing Jan naked helped add a little oomph.\"\n\n\"You are all I need for oomph.\"\n\n\"Thanks, but you can't tell me that you don't find the idea of being nude with her exciting.\"\n\nI tried to will my dick to remain still as imagined flashes of a long, lean body invaded my mind.\n\n\"I guess I'm more worried that being naked with two beautiful women will result in something that may not meet the decency standards on the beach.\"\n\nConnie stroked my dick to hardness. \"In that case, we'll just celebrate the ability of a man to show his appreciation in such a remarkable fashion.\"\n\n\"I think I have a way to show appreciation to a woman who is right here.\"\n\nConnie pulled on my erection. \"And what's that?\"\n\n\"I believe it begins with an invitation to climb aboard.\" Connie sat up and threw a leg over me. As she lowered herself onto me, she asked if this is what I had in mind? As my hands played with her full breasts, I assured her it was. While making love for the second time that night, I wondered what Connie meant when she said that \"we'll just celebrate\". Was she including Jan in the proposed celebration? I had to admit those thoughts inspired me to give my wife another most satisfactory round of screwing. \n\nJan called our room around nine in the morning. We agreed to meet at eleven to go to the beach. In the meantime, we ordered room service breakfast and challenged ourselves to make love before it arrived. We succeeded, but only barely. After breakfast, we took a leisurely shower together that resulted in a long slow blow job from Connie. As we pulled on our suits I hoped the work out I had this morning with Connie would prevent any unwarranted risings on the beach. We met Jan by the pool, and she led us in the direction of the beach.\n\n\"It's not a bad walk,\" she said. \"Give us some exercise along the way. Haulover Beach has a textile and a clothing-optional section. Even in the optional section, you're not required to go nude. I don't want you to feel you have to do something that makes you uncomfortable.\"\n\n\"We're both looking forward to being naked on the beach,\" said Connie. \"Right, Robbie?\"\n\n\"Sure.\"\n\n\"Do I detect a doubt?\" asked Jan.\n\n\"He's afraid he'll get a hard-on,\" said Connie. \n\n\"Don't worry about it,\" said Jan. \"Happens all the time. Just be cool and try not to be too obvious. I hear they do go away\u2014eventually.\"\n\n\"Sometimes they need a bit of work to go away,\" said Connie. \n\n\"Are we talking about recent experience,\" said Jan.\n\n\"Is an hour ago considered recent,\" Connie replied.\n\n\"Good for you girl.\"\n\nConnie laughed and said, \"Plus, it was the second time this morning, and that doesn't count the BJ I gave him in the shower.\"\n\nI couldn't believe Connie was discussing our sex life in such an open way with a woman we'd just met. I was red with embarrassment.\n\n\"Good work, Robbie. Glad to know that some men can please their women.\"\n\n\"Actually, it's singular,\" said Connie. \"Woman, not women.\"\n\n\"Of course,\" said Jan. \"But one can always hope.\"\n\nThe two women giggled. We turned down onto the beach with Jan leading us in the direction of the clothing-optional section. We approached the signs warning that we might encounter naked people beyond this sign. My stomach tightened as we crossed the imaginary line.\n\nJan continued on until she found a spot that was not too crowded. We spread out our towels. Jan stood facing us and smiled. She pulled her shirt over her head, revealing her small, firm breasts. As I suspected, there were no tan lines. Her nipples were puffy and the tips looked stiff. She undid her shorts and pushed them and her bikini panties to the sand. She was smooth between her legs. I had never seen a woman who took all her hair off. It allowed me to see her sex lips, which were tight with no inner parts showing.\n\nConnie smiled and started pulling her clothing off. In a few seconds she, too, was naked. She was about six inches shorter than Jan and after two children had wider hips and a thicker middle. She kept her dark bush trimmed and her lips were thick with inner ones peeking out. I found her to be my ideal vision of a woman. Her breasts had increased a cup size and several inches after our last child. Looking at the two, I would always choose my wife, but Jan was incredibly sexy. ",
        "Jan turned and bent to put her sandals at the corners of the towel to keep it in place. I saw her firm round butt and her vagina. I was fighting to keep from getting hard, but feared it was a losing battle.\n\nConnie told me to get undressed. I got rid of my clothes quickly with the intention to fall onto my stomach as soon as possible, I had just pulled off my shorts when Jan turned back around.\n\nShe smiled as she ran her eyes up and down my body. \"Lucky girl, Connie. Lucky girl.\"\n\nConnie agreed. I sat down and rolled onto my stomach just as my erection blossomed. I hoped I would not have to stay in this position all day.\n\n\"Do each other's backs?\" asked Jan. Connie agreed and began to rub lotion all over Jan. When she got to her butt, she didn't hesitate. She cupped the two buns and said, \"I used to have an ass like this. Kids seemed to have made things spread out a bit.\"\n\n\"Your butt is great, Connie. Everything about you is beautiful.\" When it came time for Jan to apply sun screen to Connie, she also stopped with her hands on my wife's rear. \n\n\"These are fab,\" Jan said. \"I bet Robbie loves holding on to them when things get going.\"\n\nConnie shook her butt and said, \"I do seem to recall something like that.\" Jan gave her a little love tap on each cheek. She then finished covering Connie's legs.\n\nConnie stretched out on her stomach and sighed as she let the warm sun envelop her bare skin.\n\n\"What about Robbie?\" asked Jan.\n\n\"Would you mind?\" Connie said. \"I don't think I can move. This feels so good.\"\n\nJan knelt next to me. Her hands moved over my shoulders and back, coating them with lotion. When she got to my butt, she massaged each cheek and gave them a couple gentle slaps. \n\n\"Nice butt,\" she said.\n\nAfter she finished my legs, she joined Connie and me in taking in the sun. After a while, the heat was getting to all of us. Jan suggested a swim. I was back to normal, and hoped my dick would stay that way.\n\nWe jogged to the water. The beach was more crowded now than when we arrived. I saw nude bodies of all ages, sizes and colors. It made me feel a little less conspicuous. Jan held our hands as we rushed into the waves. The water was pleasant compared to what we usually experienced in New England. We played in the waves, and had fun trying to body surf.\n\nAs we walked back to our towels, I let the women go ahead. I admired the two different examples of women's posteriors. Thank god I would not have to choose, since I felt it would be a difficult choice. This time we laid on our backs. Both the good and bad part of this was we each could apply our own sun screen.\n\nI was in the middle. I think I must have dozed off. I was awoken when I felt something cold touching my balls. I opened my eyes to see Connie holding a diet cola can between my legs.\n\n\"That's not a nice way to wake up a person,\" I said. Connie and Jan laughed. \n\n\"It was just too tempting,\" Connie said. Jan took her tee shirt and softly dried my nut sack. I made a sound.\n\n\"Robbie, I was just telling Connie that you have one of the most handsome cocks I've ever seen. It's not that it's huge, although it's certainly big enough, but it is perfectly proportional. Long, thick and accompanied by a set of balls that hang just right.\" As she spoke she continued to touch my balls through her shirt. The double effect of her words and her actions produced a predictable result.\n\n\"Ah, that's what I've been waiting to see,\" said Jan. \"Connie, you are so lucky to be able to play with this whenever you want.\"\n\n\"Unfortunately, it's not whenever I want these days at home. That's why this trip is so important.\" Connie reached out, and ran her hand up and down my erection.\n\n\"Now, I'm totally jealous,\" said Jan.\n\n\"No need to be,\" said Connie.\n\n\"You don't mind?\" Jan asked.\n\n\"If it's all right with Robbie, I can't see the harm. It's no more than a touch. I'm not into sharing everything.\"\n\n\"Robbie?\" asked Jan.\n\n\"Uh, well, I guess...\"\n\n\"Oh, go on,\" said Connie. \"If it were a no, he'd have said so.\"\n\nJan took my erection between her long fingers. She ran her hand up and down, cuddled my sac, then stroked my erection.\n\n\"Don't you just love hard dicks, Connie? I mean they go from soft to this. It's almost a miracle. Then if a man knows how to use it, well, that's what sex is all about.\"\n\n\"Robbie knows how to use it,\" said Connie. \"You'll have to take my word on that.\"\n\n\"Sadly, I will.\" Jan stroked me a few more times. \"Gotta stop now or I may get carried away.\"\n\nI was so enrapt with what the women were doing that I forgot we were in public. When I heard giggles, I turned my head to see a group of three teen aged girls. They seemed to be enjoying the show. A pretty brunette caught my eye and waved. Her friend blew me a kiss and they all giggled again.\n\n\"I think we're being watched,\" I said.\n\nJan slipped her hand on my balls. \"You mean the girls next to us. They've been glued to your dick for a while. No harm done.\"\n\n\"If you don't stop touching me, there will be harm. I am very close to the edge.\"\n\nJan removed her hand. \"Thanks, guys, that was nice. My problem is I am so freaking wet and horny I could scream. I'm tempted to take care of business right here, but if someone recognizes me that could be the end of sponsorships.\"\n\n\"I understand and I know the feeling,\" said Connie. \"Maybe we should head back to the hotel so we can attend to our needs.\"\n\n\"Good idea,\" agreed Jan. We dressed quickly and hurried back to the hotel. In the elevator, Jan made a proposal.\n\n\"Look, I imagine you guys are not into swinging. I'm not, either. I am also not into three-ways, and certainly not into getting involved in a marriage. But I am hyper-turned on. I wonder if there were a way we could do something together that would be fun, but not damage any relationships.\"\n\nConnie and I exchanged a look. \"Like what?\" asked Connie.\n\n\"Like maybe I could watch. Well, watch and get myself off.\"\n\n\"We've never done anything like that,\" said Connie.\n\n\"Neither have I,\" said Jan. \"It just sorta popped in my head. Probably a stupid idea.\"\n\n\"I wouldn't call it stupid,\" said Connie.\n\n\"What would you call it?\" asked Jan.\n\n\"Exciting.\"\n\n\"Really?\" Jan said.\n\n\"What do you think, Robbie?\" my wife asked me.\n\n\"Connie, I want to make love with you so bad right now, I wouldn't care if we did it on the front lawn of the hotel.\"\n\n\"I get that,\" she said. \"But would you think it would be sexy to have Jan watch us?\"\n\nI looked from one woman to the other. \"Can we watch her get herself off?\"\n\n\"Definitely,\" said Connie.\n\n\"Yeah, I think that'd be sexy.\"\n\nWe opted for our room. When we entered, it took mere seconds before the three of us were naked. My erection was harder than I can ever remember. Connie pulled the covers down and the three of us moved onto the bed.\n\n\"How do we start?\" asked Connie.\n\n\"No clue,\" said Jan. \"What do you guys usually do?\"\n\n\"Robbie goes down on me.\"\n\n\"So, start there.\" Connie smiled, and I dropped my head into her lap.\n\nThe second my tongue hit her clit, she cried out. Connie never came that quickly before. I was going to pull away, but her hands held me in place. \"More,\" she said.\n\nI began to work my tongue over every inch of her pussy, clit and even driving it deep inside. I could hear Jan making sounds, and assumed she was playing with herself.\n\n\"Jan,\" Connie said. \"Suck him.\"\n\nI stopped moving my tongue, but Connie told me to keep going. I felt a mouth close around my erection, and almost lost it. As Jan moved me inside her mouth, I tried to concentrate on my task.\n\n\"Jan, that is so sexy watching you with Robbie in your mouth. Don't let him cum, though. He needs to fuck me.\"\n\nJan murmured. All my senses were on overdrive and I was rapidly approaching a climax. I pulled away. Jan stopped sucking me, and moved away.\n\n\"Put him in me,\" said Connie. I knelt before my wife and let another woman take hold of my dick. She guided me to Connie's opening. I looked down to see Jan spread my wife's labia and bring my tip to her opening. I could not hold back and pushed all the way in.\n\n\"Fuck, yes,\" Connie said. Jan moved to rest her back on the headboard. Spreading her legs, she used the fingers of one hand tease her clit while two fingers on her other hand pumped in and out. Her moans were accompanied by the squishing sounds from both her masturbation and my dick moving in and out of my wife. I looked at Connie to find she, too, was fixated on Jan's masturbation. We watched and we screwed. It didn't take either of us very long before we were at the edge.\n\n\"We're ready,\" said Connie, fighting for breath.\n\n\"Can one of you touch me,\" Jan said.\n\nI reached out and took a breast in my hand. \"No, not there.\"\n\nI locked eyes with Connie, and she nodded. I moved my hand to Jan's clit. I rubbed the hard button while she continued to thrust in and out with her fingers.\n\n\"Inside, please,\" she said, and pulled her fingers free.\n\nTrying to keep my rhythm going with Connie, I pushed a finger into her vagina. Jan grabbed my wrist and urged me to pump. As I moved my finger in and out of Jan's pussy, I rammed my dick in and out of my wife. I could hold on no longer and started coming.\n\n\"Let me see,\" said Jan. I pulled out and continued to shoot on my wife's stomach. At practically the same moment both women began to orgasm. Jan grabbed my dick and help milk the last few drops. I fell along side of Connie. All three of us were sweat-drenched and exhausted. Jan moved and licked the remains of my climax from Connie's skin. She then moved up and kissed Connie softly. \n\n\"Thanks,\" she said.\n\n\"It was our pleasure, too,\" said Connie. Within minutes the three of us were asleep in our bed.\n\nOver the next day, we had one more session with the three of us. I tasted Jan for a short while, she sucked me one more time. Connie then told me to make Jan come with my mouth. I ate her until she cried out. When she recovered she blew me, taking every last drop down. After we all recovered, Jan said she wanted a reminder. Connie got her phone and we stood in front of the full length mirror to take a number of selfies. I had one, then two hands on my cock. I was hard again for the last few pics. Jan said she trusted us not to show them in public, since it would damage her career. We made a promise as Connie sent them to Jan's phone. \n\nConnie and I made love twice while Jan watched and masturbated. The next day, Jan had to leave. The final day for Connie and me was spent in bed. We tried every position we could imagine. In the end we said how much we loved being with each other and, yet, how much we missed Jan's presence.\n\nReturning to New Hampshire meant resumption of our less than spontaneous love-making. We did make a pact to take at least one weekend a month where the kids would go to a grandparent's, and we would devote every second to pleasure. We kept in touch with Jan, watched some of her matches, but never again saw her. She invited us to her wedding, but we could not make the date work. \n\nThat Miami weekend was the apex of our sexual adventures and the greatest thrill I ever had in terms of exhibitionism. Now I was going to be naked in public once more.\n\n--- \n\nIn spite of my adventure in Miami and being on a nude beach, I was apprehensive about this play. Thinking about standing nude on a stage did send a pleasant electrical current through my veins. Of course, it was accompanied by something that felt like shards of glass flowing through them as well. I imagined that Sarah would handle everything in a profession way.\n\nOnce I made my commitment to be in the show, Sarah screamed causing every head in the restaurant to turn in our direction. She came over to give me a big hug and kiss.\n\n\"Thank you, thank you. The board can't possibly say no now.\"\n\n\"Son-of-a-bitch,\" I thought. She's way better at manipulation than I ever gave her credit for. The board would not want to go against my recommendation and they would think that since I was to be in it, they had to approve the production.\n\nSo, yes, the board went along with it. Yes, the board looked at me in a funny way when Sarah announced I had agreed to act in it. And, yes, I had second, third and fourth thoughts about doing it. The only saving grace was that the rehearsals were still three weeks away. Sarah was going to New York to cast the leads. We always tried to have two or three Equity actors in our shows. I wondered how the casting would be done. Would the guys have to show the \"Monty\" to be cast?\n\nThe best way I know to relieve anxiety is to keep busy. I immersed myself in my business. I run a one-person consulting business doing fundraising for non-profits. Being the beneficiary of substantial family resources, I could lead a comfortable life without working. But, I also wanted to be useful and feel as I'm contributing to society. So, I got into fundraising. Having grown up with a lot of the prospects whom my clients would be approaching for donations was a big help. I knew I had an excellent reputation and was never short of clients looking for help with annual appeals, capital campaigns and board development.\n\nI was finishing a feasibility report for a health care client contemplating a ten million dollar drive, when my office phone rang. I suppose I'm one of the few people left with a land line, but I've had the number for so long and all my clients know it, so I just have kept it.\n\n\"Carswell Associates,\" I said.\n\n\"Mr. Carswell?\"\n\n\"Yes, who's this?\"\n\n\"Kathleen Robinson. Am I catching you at a bad time?\"\n\nI had met Kathleen Robinson a couple weeks ago at a rubber chicken dinner for a conservation group. She worked for the community foundation in our state. Having just been hired a few weeks prior to that dinner, she was still meeting people. We chatted, and I offered to meet with her to try to give her the lay of the land. When I first saw her at the cocktail hour before the dinner, I thought she was both attractive and intelligent. Tall with an erect posture, she wore designer glasses with dark frames that set off her light brown hair.\n\n\"Not really, what's up?\"\n\n\"I was wondering if we could get together as we discussed.\"\n\n\"Sure. I'd be happy to sit down with you. When?\"\n\n\"Well, I have a meeting with the local board of the regional foundation in town today at noon. I should be finished by four. Could I buy you a cup of coffee?\"\n\nMy schedule was clear for the afternoon.\n\n\"No,\" I said. \n\n\"Oh. Sorry,\" Kathleen replied with a hint of disappointment.\n\nI added. \"But, how about we meet at four-thirty at The Union, and I'll buy you a beer?\"\n\nShe laughed. \"That's a much better deal. Thanks, Mr. Carswell.\"\n\n\"Kathleen.\"\n\n\"Yes?\"\n\n\"If you call me Mr. Carswell one more time, I'll never speak with you again. My name's Robbie.\"\n\nShe actually giggled. \"Thanks, Robbie. See you at four-thirty.\"\n\nMy office was in a section of a large loft apartment I owned in one of the old mill buildings in town. My family's foundation owned the rest of the building, so I also kept an eye on the other tenants. They were a mixed bag of start-up hi-tech firms and struggling artists. We offered low rents and served as an incubator for the techies and a safe haven for the artists. A couple of the tech firms were beginning to take off and wanted to rent more space in the building to branch out from the incubator. Our plan was that the tech firms would pay enough rent to eventually keep the building affordable for the artists.\n\nI had recently moved into the loft. I could easily walk to most downtown bars and restaurants. I headed out around four-fifteen and was sitting at one of the outdoor tables at The Union by four-thirty.\n\nI was sipping an ice water waiting for Kathleen. I checked my phone to see it was now four-forty. I was going to call to see if she were delayed when I realized I only had her office number at the community foundation. I didn't have her cell number. Another five minutes passed before a shadow blocked the warm afternoon sun. I looked up from checking my email to see Kathleen standing there.\n\n\"Hi,\" I said standing and extending my hand.\n\n\"Sorry,\" she said, slightly out of breath, and shook my hand. She sat and told me how the board meeting just wouldn't end. \"Then, I had to find a parking space. I practically ran the last three blocks.\"\n\n\"No, problem,\" I assured her. \n\nI motioned for our waitress, Holly, and she took our orders. They had a locally-brewed summer ale on tap and we both opted for a tall glass of it.\n\n\"Thanks, Mr...\"\n\nI shot her a glance.\n\n\"Robbie. I appreciate you taking the time.\"\n\n\"Happy to do so, Kathleen. I can imagine it takes a while to get the feel of a new location. Tell me, where were you before here?\"\n\nKathleen filled me in on her background. She had been working at a similar foundation in Colorado for ten years. Her father recently passed away, and her mother was all alone. She wanted to be closer than two thousand miles. She moved to our state when she applied and got the job with the foundation. \n\n\"Mom lives in Connecticut. So, I can visit on weekends. It only takes a couple hours to get there.\"\n\n\"Is that where you grew up?\"\n\n\"Yes. My parents, well, now my Mom, lives in the same house where my sister and I were raised. It's way too big for her, but she insists she wants to stay. She's quite a determined woman.\"\n\n\"How about college?\"\n\n\"Didn't stray too far from home,\" she said.\n\n\"Yale?\"\n\nShe nodded. \"Sounds more impressive than it is.\"\n\n\"I doubt it,\" I said. \"You seem quite bright.\"\n\nI was surprised at the blush coloring her cheeks.\n\n\"And, after Yale?\"\n\n\"Well, I worked on the street. I mean, Wall Street, I didn't mean...\"\n\n\"I didn't think you were admitting to a background in the call girl business.\"\n\nWe laughed as Holly arrived with our beers.\n\n\"Cheers!\" I offered.\n\n\"Cheers!\" she replied.\n\n\"Didn't stay in finance?\"\n\n\"God, it was so boring,\" she said. \"I mean the money was insane, but at the end of the day I felt I helped no one except some rich people who already had more money than they ever could spend.\"\n\nShe looked at me and colored again. If she were worth her salt, she would have done some digging into my background. I could easily be categorized as one of those \"rich people.\" Kathleen was clearly uncomfortable thinking she just made a major faux pas.\n\n\"So, helping hands stained green with loot was not your cup of tea?\" \n\n\"I didn't mean it that way, Robbie. I wanted to feel like I was making a difference.\"\n\n\"I can understand that.\"\n\n\"I bet you can.\"\n\nI must have given her a strange look.\n\n\"Ok, so I did a little checking up on you.\"\n\n\"Oh?\"\n\n\"No, it wasn't anything formal. You know Barbara, the woman I'm replacing.\"\n\nI nodded. Barbara Adams was from a four-generation local family who were among the original mill owners in town. She was born knowing everyone of influence in the state. I could see trying to fill her shoes would be a huge challenge.\n\n\"Well, she just loves you. Sings your praises and told me I just had to meet with you. She said you could give me the insight into the people I need to meet. She filled me in on all the charitable work you do, how your fundraising counseling has helped so many of the state's non-profits, and that you like to get involved in good projects.\"\n\n\"And that's all you told you?\"\n\nKathleen fidgeted with her drink and looked down. She shrugged and took a sip.\n\n\"Kathleen, it's all right. I imagine everyone knows my story.\"\n\n\"I'm sorry, Robbie. I didn't mean to intrude into your privacy. And I certainly did not want to bring up any painful memories.\"\n\nThe intrusion was not a problem. Barbara knew well the extent of my family's resources. My family went as far back as hers in the community. And like the Adams, the Carswells had owned a couple mills, a large tract of timber land in the north, and had started the largest bank in the state. We had divested of the mills, except for the one where I lived, and forests, and were still the largest shareholders in the bank, although it had gone through several iterations and now was owned by a Scottish financial conglomerate. Beyond that, my family had invested in many other regional businesses and industries. My sister and I managed the family portfolio.",
        "The painful memories alluded to the fact that my wife passed away three years ago. She was probably better known and definitely better liked than I ever was. As I tend toward introversion, she was always all out there. She made friends crossing the street. A singer, drum player, painter, knitter, and a dozen other things meant she was with lots of people. Connie was everyone's favorite.\n\nI never minded being in her shadow. Where I operated mostly behind the scenes and worked with the leaders of companies, boards and government, Connie was bounding through life casting a huge shadow and making lots of waves. I hardly left a wake behind me, but knew I was effective in what I did.\n\nAfter listening to her complaining for a week about not feeling well, I insisted she see her doctor. He ran tests and was non-committal. He did recommend she go to Boston for more tests. Both of us knew that was not a good omen. Before we left Boston on that dark, cold day in February, Connie was told that she had pancreatic cancer. By the time we arrived back at our house, Connie had been on the phone with our two girls, and insisted that they meet us that evening. With more courage than I could ever imagine, she gave them the straight story. Amidst all our tears, Connie told them we all had to begin preparing for life after her.\n\nWe were in denial, but she was determined that there would be no pity parties. She was relentless for the next four weeks. Then her sickness took over. The last two weeks of her life were miserable, but she tried her best to support me and the girls. \n\nIt was now over three years. I had sold the house and moved to the loft. Mindy was living in Boston, and working for a publishing house. Gigi had moved to the Denver area, and was managing the ski business in one of the major resorts. They both offered to stay with me, but I insisted they had to get on with their own lives.\n\nI surprised myself when I felt a tear run down my cheek. I dried it with my napkin.\n\n\"Sorry about that, Kathleen.\"\n\n\"No, Robbie. It's ok. I still do that when I think of my dad.\"\n\nShe patted the back of my hand. We had really just met, but that simple gesture meant more to me than she would ever know.\n\n\"Anyway,\" I said, \"we need a plan to make Kathleen Robinson the most recognized name in the state.\"\n\nShe beamed and we ordered a second beer.\n\nWe were going through a list of people she needed to meet and she was taking notes on a small paper pad with a soft leather cover. I was strangely impressed that she used this \"old fashioned\" method as opposed to tapping into a tablet.\n\n\"Hi, Mr. C.\"\n\nI looked up to see Katie and couple of her friends. \n\nI stood and hugged her. She was as much a daughter to me as was Mindy. I recognized her friends as part of the crew that used to hang around our house.\n\nI introduced them to Kathleen.\n\n\"Hey, I heard the big news,\" said Katie.\n\n\"Oh,\" was my sparkling comeback.\n\n\"Yeah, mom was like all Robbie this and Robbie that. You made her day.\"\n\n\"Well, your mom is hard to say no to.\"\n\n\"Tell me,\" she said. \"What's even cooler is we'll be working together.\"\n\n\"How so?\"\n\n\"Didn't she tell you? I'm working at the theater for the summer. I'm going to be stage manager for the production. Plus, scenery designer and probably janitor. You know we try to stretch the budget.\"\n\n\"Uh, well, great.\"\n\n\"Gotta run. Nice to meet you Ms. Robinson.\" In a second the three young women were off to wherever young women go.\n\n\"Nice young woman,\" said Kathleen.\n\nI explained how I knew her and her mother, Sarah.\n\n\"I heard about the theater. Everyone says there are always great shows. What's the one she's talking about?\"\n\nI paused and then said softly, \"The Full Monty.\"\n\nKathleen's eyes widened. \n\n\"A bit racy for a community theater,\" she said.\n\nI explained the rationale behind the decision, and how we planned to market it. Kathleen nodded as I spoke. As I finished, she said, \"What did Katie mean you'll be working together. Are you directing it or something?\"\n\nThere was no easy way to explain what I was facing.\n\n\"No, I'm going to be in the cast.\" Kathleen sat still. I'm sure it was an unintended reflex, but her eyes darted down and then back up.\n\n\"Well, that could be...\"\n\nAs she struggled to find the correct word, I said, \"Embarrassing.\"\n\nShe laughed and shook her head. \"I was thinking more like 'interesting.\"\n\n\"For whom?'\n\n\"For you and the audience,\" she said. I noticed her blush. I told her I doubted that. I only hoped people wouldn't run screaming from the theater. I changed the subject back to helping Kathleen make contacts and she continued to make notes. We sat at the outside table until it was almost six. I offered to buy her dinner, but she had agreed to meet a friend in a nearby town.\n\n\"Kathleen, would you mind giving me your cell number?\"\n\n\"No problem,\" she said. \"Why?\"\n\n\"I was going to call you earlier to see if maybe we miscommunicated and realized I only had the number for the foundation. If it makes you uncomfortable, then it's not a big deal.\"\n\n\"I don't mind, Robbie. I'd be happy, and you can definitely call me any time.\" She seemed to realize how that last statement might sound.\n\n\"I mean, you know, if you wanted to see me.\"\n\nShe now was visibly shaken. \"I mean not \"see me\" see me. Not that that would be a bad thing, but I didn't mean...\"\n\n\"Kathleen, I know what you mean.\" I slipped her my card that had both my land and cell numbers. She gave me hers, and wrote her cell number on the back.\n\nKathleen had told me she lived in town and commuted to the capital, where the foundation was located. I knew from her description where her apartment was. She did not mention a husband, boyfriend, girlfriend or roommate. I told her she should feel free to call my cell at any time. \"You never know when you might run into a mouse or bat.\"\n\n\"You could handle a bat?\"\n\n\"Probably not,\" I said, \"but we could freak out together.\"\n\nWe both laughed.\n\nWe stood and shook hands again. I felt like she was considering hugging me, but neither of us made a move. We locked eyes for a moment. I let myself acknowledge how attractive she is. Her blue eyes were clear behind her dark-framed glasses.\n\n\"Nice to get to know you a little better,\" I said.\n\n\"Me, too. Thanks, Robbie.\" \n\nAs she walked back down the sidewalk, I watched her skirt swirl around her legs, revealing shapely calves. She was tall with a nice figure. Her light brown hair bounced softly with her strides. It was cut well, but in a conservative fashion. I agreed it was a good look for a woman working with wealthy people. Not so sexy that women would wonder why she was meeting with their husbands, but attractive enough to get men to agree to meet with her.\n\nI told myself to come back to reality. She had to be at least twenty years younger than me. Well, maybe a little less. But, what difference did it make. I certainly was not looking to get back into dating, and she would never be interested in a person my age.\n\nThe next day I received a text from Kathleen thanking me for taking the time to meet her. I replied it was my pleasure and maybe we could catch up in a couple weeks to see how she was doing. As I hit send, I wondered if that were the only reason I proposed meeting her again.\n\nI immediately received a reply saying she'd enjoy getting together. She also said she looked forward to meeting again. She added a PS that said she was looking forward to the show this summer and added a smiley face emoticon. At least that encounter would not happen for a while. I looked at my calendar and was calculating the days before rehearsals started. My phone rang and I found a familiar voice on the line. It was Karen Crawford.\n\nAs Sarah had predicted, when the board of the theater agreed to let her put on The Full Monty, there was a lot of discussion about it. When Sarah announced that I was going to be in the cast, I received more than a few curious stares. In the end we all agreed we needed the revenue and if we properly cautioned people, there should be not problems with the nudity. After the meeting, Karen, one of my wife's best friends and a fellow board member, stopped to talk with me.\n\n\"Robbie, I think this is the right decision and I am in full support. I don't think we'll get any blowback, especially if we handle the pre-publicity.\" Karen operated her own public relations firm in town and I valued her opinion.\n\n\"And, I must say,\" she continued, \"That I admire you for being willing to do the play. Please take this the right way, but Connie would be so proud of you. She always felt that she was sometimes too much for you.\"\n\n\"Karen, Connie was perfect for me. If it weren't for her, I'd most likely end up a hermit somewhere. I partly said yes because she would have loved the idea of me getting up there and mooning the entire community.\"\n\nWe shared a laugh. \"Well, Robbie, I for one am going to get my tickets early. I think I can vouch for our book club that we will all be there.\"\n\nI think that was meant to be supportive. What it translated into was that I was going to be standing nude in front of my wife's best friends, who are women I have known for twenty years. I began to have serious doubts about this decision. God, Sarah was right on target about the damn book clubs.\n\nKaren was calling to tell me that she had met with the publisher of the local daily paper and the news director of the television station. She explained why we were putting on the show and that although it was adult-themed, it would be professionally done. She reported that they both were supportive, and would help get the word out that this show was not for children. I thanked her. She rang off with a cheery promise to be there for the show. Great, I thought.\n\n*** \n\nIt seemed like only seconds before we were in rehearsals. This isn't Broadway, and we don't have months to get a show ready. Usually two weeks is about all the time allowed from first read-through to opening night. Sarah had secured two excellent equity actors from New York who could dance their asses off to be our leads. Our regular music director put together a small ensemble for the show. For rehearsals she would accompany us on piano. We would have one run through with the ensemble and the full dress rehearsal with them as well.\n\nSarah addressed the nudity on our first day together.\n\n\"Guys, listen up. You are going to be nude on stage. Of course, you'll have a hat and shoes, but your dear, sweet buns will be front and center. So, just get over worrying about that. For most of our rehearsals, you will wear something. As we get close to opening night, you will have to do the nude parts, well, in the nude. So, that means as we work on the final blocking, lighting, choreography and other details, you will be on stage naked. Get your minds around it now.\"\n\nSarah addressed us men, since there were only a few supporting female roles. She treated us maturely. Although I had resigned myself to the nudity, I was a bit uncomfortable during Sarah's talk since her daughter, Katie, was sitting among us. If anything made me nervous, it was having my daughter's best friend see me naked. \n\n\"Now, to the other thing we need to discuss. Erections!\"\n\nMuffled laughter echoed in the theater. \"I know these things happen; I used to be married.\" More polite laughter, she added, \"I didn't see erections as often as I would have liked, though.\" More laughter. I looked at Katie and she just smiled and shook her head. I imagine she was accustomed to Sarah's tendency to speak her mind.\n\n\"That's why I want at least three complete run-throughs, including dress rehearsal, with you guys naked. Let's get the nerves out of the way. If you get hard during a real performance, please hide it the best way you can. We've warned people in advance that there would be male nudity. We don't want to abuse the board's tolerance of what the audience will see. If you need to step off stage, then do so discreetly.\"\n\nWe all nodded our approval. I'm sure I was like every other man in the cast, and prayed it would not be me who got excited.\n\nAfter Sarah's little talk, she distributed the scripts and said we should meet individually with Katie to discuss wardrobe. When it was my turn, I sat across a card table from her in a corner of the stage.\n\n\"Hey, Mr. C,\" she said.\n\n\"Hey, yourself. Summer going good?\" Katie was going to go to grad school in the fall. She had taken a year off after college and traveled extensively in Europe. \n\n\"Yeah, having fun. I'm looking forward to this show.\" Our eyes locked and then we both laughed.\n\n\"I mean because it's a great show and the audience loves it.\"\n\n\"Katie, I know this may be a little embarrassing for both of us.\"\n\nShe giggled and said, \"Probably more for you than me. Mr. C. Like I've seen naked guys before. I can admit to even seeing an erection or two, and know what they're used for. But don't tell Mom. Besides it's really just payback.\"\n\n\"Payback?\"\n\n\"Remember 'Summer Fun'?\" \n\nI recalled the original show we did a few years ago. It took place on the beach and dealt with a series of romances that revolved around the shore. Katie was one of the actors. At the time she was a high school senior. She had to do a quick change from a bikini into street clothes. There was no time to go downstairs to the dressing rooms, so she and another girl had to do it in the wings. I was stage managing the play.\n\nWe had a lot of discussion where the girls could change. They had to go to skin and we wanted to give them as much privacy as possible. Backstage was always a madhouse with props being shuffled around and actors moving into position. The backstage area in addition to being crowded was small and afforded no private areas. It was decided the least public place was next to me.\n\nThe first dress rehearsal found Katie and Marnie running off stage. They pulled their bikinis off and tossed them to me as I held their clothes. Katie looked at me as she stood naked.\n\n\"It's all right, Mr. C. They're just tits.\"\n\nActually it was a lot more than her tits. I could see everything on her and Marnie. I did not stare, but it was impossible not to notice their nudity. By the end of the run, I was more interested in making sure they hit their next cue than looking at their young, nude bodies\u2014well, almost more interested. On the last night, when she and Marnie pulled off their bras, I almost fainted.\n\nThey each had painted their boobs with a tiny smiley face and a \"Thanks, Mr. C.\" Katie hugged me and said they couldn't have done this if it were anyone else. Marnie, who was twenty-one, also gave me a hug. \n\nSitting across from Katie, I smiled and said, \"Payback sure is a bitch.\"\n\nShe then took my sizes and did some measurements. I hoped I didn't disappoint her mother, and have an erection in front of Katie. It was probably best if I never even thought about such an act in case it made me more prone to get excited. Katie was a younger version of her mother. Dark curly hair, vibrant eyes and a trim figure resulted in heads turning wherever she went. She also inherited her mother's outgoing personality. If she weren't like another daughter to me, I probably would admit that she turned me on.\n\nThe first week was spent running lines, doing the main blocking, and trying to get us non-pros to knock out a couple dance steps without falling over. Sarah was always pushing us, but also told us we were coming along.\n\nI found myself busy during the days with my business. I had almost forgotten about Kathleen when I received an email from her. She wondered if we could meet for another beer. I countered with a late dinner after one of our few remaining rehearsals. That worked for her since she had an early evening appointment with a potential donor on that same night. I told her to meet me at the theater around the time our rehearsals usually ended.\n\nThat rehearsal was to be our last before we were to go into our \"nude\" mode. I was still nervous about the whole thing, but we were too far down the road to even consider backing out. I also had a lot of work to get through for clients. The days were flying by and I couldn't dwell on my burgeoning unease about going nude in public.\n\nThe night of our last clothed rehearsal had us gathered on stage for notes from Sarah. \"Guys, I've got a change to go over with you. I have to go out of town tomorrow and won't be back so I'm cancelling rehearsal. It's a personal thing, and I can't move it. So, tonight we will do a full run-through. This means we may run a little late, but I hope not too late.\"\n\nThe silence from the cast meant we understood that tonight would be our first time stripping in the play.\n\n\"I know this is not what you expected tonight, but if we don't get through this now, it will only leave one run-through and dress rehearsal. I don't think it leaves us enough time to get used to being nude.\"\n\nWe all headed downstairs to change into our costumes. The first act went smoothly and Sarah only had to stop us a couple times. There is one scene where a woman in the play is interviewing prospective dancers. She's seated at a table and Andy, the actor, is standing facing her with his back to the audience. She tells him to show her and he drops his pants and underwear. This will be the first nude butt the audience will see. In rehearsals up to this point, the actor wore a speedo under his underwear. Tonight he faced Irene and totally exposed himself to her. The script implies that the actor is supremely well hung, and Irene is supposed to act accordingly as she moves her head up and down, ogling the thing in front of her. When Andy's clothes hit the floor, Irene paused, moved her head slowly up and down, and forgot her line.\n\nWe all broke up. She was embarrassed, he was embarrassed and the rest of us were howling.\n\n\"Hey, give me a freaking break,\" Irene called out. \"You try to remember a line with this staring you in the face.\" I was standing next to Katie in the wings. He turned in our direction and she gasped. The young man was quite well hung.\n\n\"Holy shit,\" she said. \"That's amazing.\"\n\n\"Don't let it set unreasonable expectations about the rest of us,\" I offered. She jabbed me in the ribs. \n\n\"No sweat, Mr. C. I'm sure you can hold your own.\" The double meaning of her words struck both us and we got the giggles. She finally calmed down, and said I knew what she meant. I again looked at the actor and thought if they all looked like that I would be the object of the next round of laughs.\n\nWe were now at the climax. All the dancers were on stage and going through our routine. We had shed our shirts and now were about to pull off our specially tailored trousers. They were held together with Velcro and could be jerked off in one motion. Turning our backs to the house, we rid ourselves of the last vestige of modesty. Next came our G-strings with Velcro to hold the waist band together.\n\nWe covered our privates with our hats and turned toward the house and danced some more. At the final moment we were to pull our hats away as the stage lights immediately went off. We would be silhouetted from back with bright lighting, but the audience could not see our private parts.\n\nWe got to that point and pulled our hats away. The lights stayed on. The rest of the cast, crew and Sarah stared at six fully nude men. There was an uncanny silence in the theater. Our music director had stopped playing when we removed our hats.\n\nFinally Sarah started clapping. One by one, the other cast members and crew joined in. Soon, we were greeted by both applause and cat calls. We all relaxed and took a couple bows.\n\nSarah came on stage to talk with us. At first we held our hats in front, but after a minute realized there was nothing left to hide and put our hats on our heads. Sarah explained that it was obvious that she and the lighting director need to do some work. As she was speaking, I turned toward Katie. She was grinning from ear to ear and gave me an exaggerated wink. I could only imagine the text she would be sending my daughter later.",
        "Sarah gave us some notes and wanted us to run through the final dance sequence again. She told us she would just leave the lights on for now. She repositioned us and moved us into certain positions. I don't know about the rest of the men, but her hand touching my naked body was beginning to have an effect. She put her hand on our butts to get them all at the same angle.\n\nWe did the dance and pulled our hats away. Well, all of us except Jonas, who was next to me.\n\n\"Everything all right, Jonas?\" Sarah asked.\n\nHe just smiled, and let his hand move from the brim of his hat. The hat stayed in place. \n\nIt took all of us a couple seconds to realize what was holding up his hat. One by one we began to laugh. Sarah stood in front with her hands on her hips, and just shook her head. Jonas started laughing and that proved too much for the status quo. His hat bounced off and onto the floor. His erection was the center of attention. The lighting director was having fun and suddenly a bright spot hit Jonas' erection. He got into it and shook his hips back and forth making the long shaft flip from side to side. \n\nI could not even sneak a peek at Katie. To my dismay my own equipment continued to react. After having the attractive Sarah so close to me, feeling her hands on my nude body and seeing Jonas erect, I acknowledged I was not the only guy turned on. I looked around and saw that two other guys were now fully erect, and three were on their way. I took a deep breath to no avail. I was hard as a rock. This time I did glance Katie's way. She had her hand over her mouth, and kept shaking her head in disbelief.\n\n\"Okay, guys, get it out of your system now. We can't have this happening when we open. Take five and walk it off, or whatever. Remember no matter how bad you need relief, stagehand does not imply what you think it does.\"\n\nThat cracked everyone up and I began to let myself calm down. All the men were chuckling and trying to act casual while sporting hard-ons, and walking around the stage. I took a quick inspection as inconspicuously as possible. I determine that I was in the top half of the class. Andy was by far and away at the top. His was so long and thick that it did not stand up as much as it stood out and hung down a bit. Jonas, the first to become erect, was around my size and both of ours pointed to the lights. Since he was twenty-five years younger than I am, I felt some pride in that I was not letting older guys down\u2014literally.\n\nAfter about ten minutes, we all had returned at least to close to normal. I know I was still a little heavier than usual, but it was not hard. We did three more run throughs until Sarah was satisfied. She called it a night and told us to be back on Wednesday for the second full rehearsal. Dress was scheduled for Thursday and Friday was opening. Sarah had invited the board of directors, major sponsors and friends to attend the dress rehearsal. That meant Karen and my late wife's friends would be in the audience. I hoped the lights would be working that night.\n\nDownstairs we got dressed and put away our costumes. I ran into Katie putting props back in their proper places as I came back on stage.\n\n\"Katie, I am so embarrassed...\"\n\n\"Chill, Mr. C.,\" she said. \"God, you were really good. I know you're not a trained dancer, but you are the best of the amateurs. Plus, you have a nice bod.\"\n\nI smiled. \"And, don't worry,\" she said. \"I won't tell Mindy about the boner you pulled on stage.\"\n\nI opened my mouth to say something, but she laughed and kissed my cheek. She spun around and went to talk with the prop master.\n\nSarah was sitting in the orchestra scribbling notes and looked up. She smiled.\n\n\"Yeah,\" I said. \"A big freaking mess. Sorry.\"\n\nShe let her eyes drop to my crotch. \"Big? Yes! A mess? Let's say that I'm hoping this was a once in a lifetime occasion of mass erections.\"\n\nAfter a pause, she added, \"On stage, anyway.\" She blushed. I didn't know what to say. \n\n\"So, we'll see you on Wednesday. Sorry about tomorrow. It's my ex's new wife's father. He passed away and I feel I should go to the wake to take Katie. Tom wants to see her. By the way, your friend said she'd wait in the lobby.\"\n\n\"Friend?'\n\n\"Yeah, Kathleen something.\"\n\n\"She was here!?\"\n\n\"Said you told her to meet you at the theater and you were going out to eat. Is she like a new interest?\"\n\nMy mind was a jumble of thoughts. Could Kathleen have just seen that rehearsal with me and the others running around with erections? God, I hope not. And, did I detect just a hint of jealousy from Sarah?\n\n\"Uh, just a new friend. I'm helping her learn more about the community and its people.\"\n\n\"Well, I'd say she's off to a good start.\" She returned to her notes.\n\nI walked out to find Kathleen looking at old show posters in the lobby.\n\n\"Hey, Kathleen,\" I called. She turned and waved.\n\n\"Hope I didn't keep you waiting. Been here long?\" She turned beet red. I think I got my answer.\n\n\"Oh, sorry about that. It was not supposed to be a, uh, actual run through. Usually we wear bathing suits.\"\n\n\"Sorta noticed you didn't tonight,\" she said. She was still red, but cracked a smile.\n\n\"Now, I am totally mortified. The only way to get beyond this is that I should make you ...\"\n\nKatie walked by and interrupted us.\n\n\"Hi,\" Kathleen said, \"It's Katie, right?\"\n\n\"Yeah. Oh, you're Ms. Robinson. Nice to see you again. Did you catch the rehearsal?\"\n\n\"Only the end,\" said Kathleen.\n\n\"Well, that was the best part,\" said Katie, \"Guess that's a new twist on standing ovations.\" She grinned and walked out of the lobby.\n\nKathleen couldn't contain herself. Although she covered her mouth with her hand, her body shook. I just waited.\n\nAfter she gained control, she said, \"And, what is it that you think I should have to do to get beyond this? Is it some sort of evening the score thing?\" I detected a slight edge in her voice. Then, it hit me. She probably thought I was inferring she should have to somehow let me see her in such a disadvantaged state.\n\n\"Oh, no. I would never... I mean, God, of course, not. I just meant that you should let me buy you dinner. It's the least I can do for subjecting you to such a display.\"\n\nKathleen's face lit up. \"Robbie, you are a dear. Let's go, I'm starving. And, just to set the record straight. I don't think I've suffered any permanent damage. As a matter of fact, I rather enjoyed the show.\"\n\nWe walked to a nearby downtown restaurant. Over a drink, we talked about some other people I thought Kathleen should meet. I offered to make a few calls, and that she could take the initiative with others, and feel free to use my name as an introduction. After we ordered our dinners and were served our second drink, the conversation turned from business.\n\nKathleen seemed more relaxed and open in talking about herself. Maybe seeing me naked and erect felt that she could be more forthcoming. I had asked her about her move from Colorado.\n\n\"I had just gotten divorced,\" she said. \"I wanted a fresh start, somewhere away from all our friends. They were mostly Manuel's friends to begin with. He is a native Denverite. So, I covered two needs by moving here. It is so far from Denver in both distance and attitude that I can make a clean break. And, as I told you, it puts me closer to mom. By the way, I sorta invited her to come up this weekend. I purchased tickets to the show. Will that bother you?\"\n\n\"You mean your mom is going to be looking at my butt?\" I said with a smile.\n\n\"Yep and I bet she'll like it. She's really cool.\"\n\n\"Sure, what the hell? Everyone else will be seeing me. I just pray the lights work.\"\n\n\"If not, she'd enjoy that even more. I did.\" We lifted our glasses in a mock toast.\n\n\"How long were you married, if you don't mind the question?\"\n\n\"Not at all,\" Kathleen said. \"It was almost eight years. We met at a gallery opening. Manny is a painter, people not houses.\"\n\n\"Is he good?\"\n\n\"Very. He has exhibits all over the west. Ironically, I mean after seeing this rehearsal, I bet more people have seen me nude than will see you.\"\n\nI looked puzzled.\n\n\"I was Manuel's favorite model,\" she added and looked away. \"I've never told anyone back here about that.\" \n\n\"And, so it shall remain our secret.\" She looked up and I could see the gratitude in her eyes. \"I don't even know why I said that.\"\n\n\"I feel honored that you are comfortable enough with me to do so.\"\n\n\"Robbie, how old are you?\"\n\nThe suddenness of the question took me aback. I am not sensitive about my age, but I usually don't bring it up.\n\n\"I'll be fifty-six next month.\"\n\n\"I'm thirty-eight,\" Kathleen said.\n\n\"Wow, I wouldn't have put you within five years of that.\"\n\n\"I hope you mean in a younger direction,\" she responded with a grin.\n\n\"Absolutely.\"\n\n\"Thanks. You're too kind. It's in the genes. Mom looks like she's at least ten years younger than she is. She's sixty-three.\"\n\n\"I look forward to meeting her. Tell her not to judge me by the sorry, sagging butt she'll have to put up with.\"\n\n\"Oh, it's none of that, Robbie. You're in fantastic shape.\"\n\n\"For a guy my age, you mean.\"\n\nShe touched my hand. \"For any age. I mean it.\"\n\nOur dinners arrived and I navigated our conversation back to neutral grounds. I tried to put aside images of a nude Kathleen modeling for her ex. I was not successful as the second erection of the evening made an obscene tent in my pants. I hoped it would go away before I had to stand up.\n\nWhile waiting for coffee, Kathleen excused herself to use the facilities. I took that time to subtly rearrange myself. I was dismayed that the damned thing would not go away. It was no help to watch Kathleen walk back to our table. She wore a soft cotton top and a floral skirt. The top hugged her figure and her breasts moved with each step. The skirt also swayed with the action of her hips. She made eyes turn as she crossed the floor.\n\nOur waiter served us coffee and put out a small dish of chocolate truffles, since we had begged off dessert. Kathleen moaned as she tasted the rich, soft delicacy. A smudge clung to the corner of her mouth. I used my own tongue to try to indicate she had something on her. She licked the wrong side. Without thinking I reached across and used my thumb to wipe the dark spot away. As I touched her lip, Kathleen sharply drew in a breath.\n\n\"Sorry,\" I said.\n\n\"It's all right. I don't know why I reacted. Guess I'm not used to being touched.\" Once more she reddened and cast her eyes down.\n\n\"So, no one at home to make sure you don't have chocolate on your mouth?\"\n\nHer eyes rose and locked into mine. \"No. I have to take care of things by myself.\" The double entendre made the air between us become charged. Fortunately the waiter came by with the bill and broke the tension.\n\nStanding outside the restaurant Kathleen thanked me for dinner and all the additional names. She said her car was just around the corner, and that I needn't walk her to it. We said good-bye and this time Kathleen moved to me. I opened my arms and we hugged. It was a friendly hug, with only our shoulders and cheek touching. I could smell her light perfume and some citrus scent from her hair. Her cheek was smooth and soft.\n\n\"Is this okay,\" she asked.\n\n\"Well, it's the third time we've met, so I guess we can hug on the third...\" I almost said date, but quickly changed it to \"...get together.\"\n\n\"Well, let's get together again, then,\" said Kathleen. \"Mom will be up this weekend and we'll go to the Saturday evening performance.\"\n\n\"Drinks after?\" I suggested.\n\n\"Sure. Mom would want to meet you.\"\n\nI figured another hug would be pushing it and we walked off in our separate directions. The memory of how good she smelled lingered as I neared my car. I cautioned myself to get a grip and she was too young for me. Was eighteen years too big of a difference? I silently chided myself for even entertaining such a ridiculous notion. I realized that her mother was closer in age to me. Maybe Kathleen was trying to fix me up with her mom. Great, I thought.\n\nThursday night's run through went much better. Only one of the guys became erect. And that was partly due to the fact that Katie was standing next to him and trying to fix the satin band on his hat. As she went to hold his hat against his body to be sure the satin didn't fall off, she accidently let her hand brush against his flaccid dick. The next thing we saw was his tip pointing to the balcony. Katie was embarrassed to near tears, and shoved his hat back at him and ran off stage. The problem righted itself and the rehearsal concluded without further incident.\n\nSarah reminded us to be at the theater early to prepare for our dress rehearsal and that there would be at least half a house present. I sought out Katie as we broke for the evening. She was fussing with costumes in the green room.\n\n\"Hey,\" I called out.\n\nShe turned and I could see the shame in her eyes. Without a word she ran and fell into my arms.\n\n\"I am such a fucking jerk,\" she sobbed into my chest.\n\n\"It's okay, Katie. Come on, don't fret.\" I patted her back.\n\n\"Mr. C, I like totally humiliated myself. I can't show my face out there again. God, I like copped a feel of Isaac. And, then I ran away like a demented little girl.\"\n\n\"Honey, it was an accident. It was bound to happen with a bunch of naked guys running around. Isaac was not upset so don't beat yourself off...Shit, I mean up.\"\n\nKatie snapped her head up and looked at me. By my sheepish face she knew I did not intend the slip. She cracked up. I joined her and the two of us stood in the room laughing our asses off.\n\n\"Mr. C, you are the coolest. Thanks.\"\n\n\"You mean \"coolest\" for an old fart,\" I added.\n\n\"No, for anyone. And, Mom thinks so too.\"\n\n\"Your mom would say that about any guy willing to take his clothes off for her.\" God, that came out all wrong, too.\n\nKatie stared at me. \"You are talking about this play, right?\"\n\n\"Yes, I am. And, since I've stuck my foot in my mouth twice, I'm going to quit while I'm still so far behind.\"\n\n\"Good idea, Mr. C. But, she does think you are really cool, clothed or naked. And, so do I.\"\n\nShe hugged me and went back to sorting costumes. I looked at her bent over and remembered how she looked naked during that summer play. I chided myself and then a vision of her mother entered my mind. Although I had never seen Sarah without her clothes, in my mind she was naked and stood next to her daughter. Two perfect bodies flooded my imagination. I turned away before Katie could see the bulge in my trousers.\n\nThursday appeared all too suddenly. I awoke early and felt the pound of lead in my stomach. Tonight I would be naked on stage in front of friends and colleagues. I wondered if it were too late to get a butt tuck or Botox injection to tighten everything up. Then I realized that with all the young men surrounding me, my rear would not be the one people wanted to gaze at.\n\nAround noon I forced myself to have a bowl of soup, but even that had me worried it wouldn't stay down. Is this how actresses must feel before they do a nude scene? I had a new appreciation for what it takes to get naked on screen. Funny, I did enjoy my times being naked on the beach. I decided that my anxiety came from stripping down in my hometown, where unlike a nude beach, naked bodies were not the norm. Also, having people like Karen and Katie seeing me added to my discomfort. \n\nI got to the theater early and did my make-up. As I finished putting on my costume for the opening scene, Katie came in.\n\n\"All set, Mr. C?\"\n\n\"I'd be lying if I didn't say I was more than a little nervous.\"\n\n\"You'll do great,\" she said. \"And, as a special surprise, I invited Mindy to come tonight.\" My heart stopped. My daughter was going to see her old man dancing naked on the stage.\n\nMy face must have scared Katie. \"Mr. C, just kidding. Chill. You look like you were going to pop a blood vessel.\"\n\nI didn't know if I wanted to strangle or hug her. Needless to say my anxiety quotient was now off the charts. Soon the downstairs was a madhouse of cast and crew scrambling to get ready. Sarah appeared and quieted us down.\n\n\"I just want to say that all of you have been fantastic. You are ready. Break a leg. Go out there and have a ball.\" She paused and looked at the guys. \"But just don't show them your balls.\"\n\nThat cracked us up and cut through the tension. A few minutes later, Katie was calling for \"places.\" The curtain rose and I knew that Sarah should have no fears about inadvertent exposures. My testicles were pulled up tight with fear, practically retreating inside my body.\n\nThe show was going great. When Jonas exposed himself to Irene, the audience gasped as they saw his naked butt. For her part, Irene brought the house down with her long, slow and highly exaggerated look at his front. She went as far as having to push her jaw shut with her hand as her head tilted up and down. The laughter went on and she continued to milk it for all it was worth.\n\nThe second act was going as well as the first. Before I knew it, we were at the finale. We all were putting in extra effort for our dance routine. When we whipped off our pants and underwear, there was a huge gasp from the audience, followed by a few whistles as we turned our bare butts to the audience.\n\nWe finished with a flourish and, thank god, the lighting worked. We stood totally exposed to the audience, but not allowing them to see anything. The ensemble struck a note and we covered ourselves as the lights came up. We did a bow and then turned and bowed again, this time mooning the audience. The roar of approval gave us all a thrill.\n\nDown came the curtain and Sarah joined us on stage. Any semblance of modesty had long vanished. She walked behind us and gave us each a smack on our butts.\n\n\"You guys were fantastic. I have just a couple little notes that we can cover before we open tomorrow night. I love you, guys. Now, go get dressed.\" She looked at each of us and said, \"I hate when I have to say that.\"\n\nWe laughed and started for the stairs. Katie was in the wings. I caught her eye and she ran up and hugged me. It took a second for it to sink in that I was still naked and my dick was pushed against her thigh.\n\n\"Uh, great show, Mr. C.\"\n\n\"Thanks, Katie. You're terrific and make it all go so smoothly.\" I kissed her cheek, and then determined that I was now bordering on inappropriate behavior. I broke free and went downstairs before I really reacted. She gave me a love smack on my bare butt and added a smile a yard wide. \n\nThere was a reception for the invited guests in the lounge off the back of the theater. As cast members walked in, we were greeted with applause and shouts. I took a beer from one of the wait staff and swallowed half of it in one long pull.\n\nKaren drew near and held up her hand. I joined mine in a high five. \n\n\"Wonderful, Robbie. Really, what a fun night. I think we will be SRO for the entire run.\"\n\n\"Great, just what I need more people seeing my ass.\"\n\n\"It's worth seeing,\" she said and grinned.\n\n\"You are such a liar,\" I replied.\n\n\"Not really, Robbie. You looked fab. I wish Harry was in half as good shape as you are. Connie always said you had nice buns.\"\n\n\"She probably said I was a 'tight ass' and was right.\"\n\nKaren put her hand on my forearm and leaned in to kiss my cheek. \"Actually, she also said you had a beautiful cock.\"\n\nMy look must have told her I couldn't believe what she just said. \"Don't freak out, Robbie. We were best friends and shared just about everything. Also, I know about your Miami adventure.\"\n\nThis time my face must have registered total shock. \"Connie told you about that?\"\n\n\"Not only told me\u2014and I mean in great detail\u2014but showed me the pics. She was right. You have a beautiful cock. I was hoping to get a glimpse in real life tonight. So, now, I have to find that damn lighting tech and give him hell. He messed up the best part at the end.\"",
        "After my third beer, I was happy that I would be walking back to my loft.\n\nAs the crowd thinned out, Sarah was wrapping up with Katie. She saw me and came over, carrying two fresh beers. Handing me one, she raised hers in a toast. We touched rims and drank.\n\n\"So, what are we toasting?\"\n\n\"To a fantastic start, a great cast, a fun show, and a guy who made it all possible. Thanks, Robbie. I mean it when I say without you this would not have happened.\"\n\n\"Be careful what you say,' I said. \"There may be a mad crowd ready to run you out of town for making them look at my butt.\"\n\n\"Doubt it,\" she replied after a sip. \"And, I am definitely not among that crowd. I could watch it over and over again.\"\n\n\"How many of those have you had?\" I said motioning to the bottle in her hands.\n\n\"Enough to be brave enough to say you are one of the best looking guys I know, and look even better without clothes.\"\n\n\"Now, I know you're drunk.\" \n\nSarah held my gaze. \"Yeah, maybe.\"\n\nI helped her close up the building. We stood outside in the warm night air.\n\n\"Need a ride?\" I asked.\n\n\"Katie's coming to pick me up. I just called her.\"\n\n\"Well, see you tomorrow. Let's hope the opening goes as well as tonight.\"\n\n\"It will,\" she said. She looked at me, hesitated and then stood on her toes to kiss my lips.\n\n\"Good-night, Robbie.\" She turned and headed to the corner just as Katie made the turn. I walked home trying to figure out what that last kiss meant. By the lump in my pants, I knew for me it was more than just an innocent gesture. I thought that Sarah was probably a little drunk and wouldn't even remember it. I knew I would not forget it.\n\nOpening night was a smash. Word had gotten out and we were Standing Room Only. We had to take three curtain calls. Although we had done the mooning as a joke in our dress rehearsal, the audience would not let us go until we repeated the performance for them. It seemed it would now be an essential part of the show. With this crowd, not only were there whistles as we showed our butts for the bow, but a good number of catcalls and shouts of \"nice ass\" coming from the close to one-thousand patrons.\n\nI was exhausted after the performance and slipped out the stage door. I was home and in my bed in fifteen minutes. I slept soundly and didn't wake until after nine on Saturday morning. I showered and walked to the local diner for a mega-calorie breakfast. It was my one indulgence each week.\n\nI sat on the cracked red vinyl swivel seats at the formica counter. Angel, my regular waitress, had a mug of coffee waiting before I could say a word. \n\n\"Usual?\" she asked. I nodded and she put in the order for two poached eggs, sausage patty, hash browns and rye toast. As I waited, Carol, the other waitress came over.\n\n\"Robbie, is it true you flashed that sweet butt of yours last night?\"\n\nAngel stopped taking an order and listened for an answer.\n\n\"I guess news travels fast,\" I said.\n\n\"When it contains news about six hunky guys showing their butts in public, you can be sure it goes at lightning speed.\"\n\nNow the other patrons, plus the busboy were keyed in.\n\n\"Yeah, we opened the Full Monty at the Palladium last night. And I must caution you that it does contain rear male nudity. So, you may not want to attend.\"\n\nAngel cocked her hip and said loud enough for the entire diner to hear. \"Honey, if you're telling me that you're on the stage flashing that behind that always looks so good in those jeans, then I dare anyone to try to stop me from getting a front row seat.\"\n\nShe winked and basked in the approving laughter from everyone there. The normal din of conversation, rattling dishes and waitresses calling out orders returned and I enjoyed my breakfast in relative peace.\n\nI stopped on the way back to the loft to pick up the New York Times and a copy of our local paper. I didn't expect the paper to have a review, but was in for a surprise. It seems that the arts reporter attended the dress rehearsal and wrote a review for the Saturday edition.\n\nIt was a rather glowing report and made the point it felt more like a Boston production rather than local theater. I guess that being in New Hampshire we shouldn't expect a comparison to New York. The reporter, a woman, said that it was also novel to have well-known local citizens appearing naked in the show. To my dismay, they mentioned me by name and ran a head and shoulders shot that had been kicking around for a while. Thank god they didn't use something from the show.\n\nI arrived at the loft to see my land line blinking with missed calls. I had left my cell in the bedroom. I checked and saw I had ten missed calls and twelve texts. I clicked on the texts and saw that they were a mix of friends and family. Yep, my two daughters texted me and said they were proud and wanted to encourage me.\n\nThe last text was from Kathleen. She wrote, \"break a leg. mom and I will b there tonite. told her to expect a great show. she wants to see butts. (lol)\"\n\nMaybe Kathleen really was trying to fix me up with her mother. I did some work around the loft, took a nap, had a light supper and was in the dressing room at 6:30. I thought I would be less nervous tonight since we had our opening. I kept seeing Kathleen's face in my mind, and relapsed into a semi-panic state. When Katie called for places, I steadied my nerves and went upstairs.\n\nTonight's crowd was even more raucous than Friday's. They carried on for close to two minutes at the Irene and Isaac scene. I had to hand it to both of them as they improvised and brought down the house. Isaac swiveled his hips and Irene's head followed the motion indicating she was watching a big dick swing around.\n\nAs we neared the finale, you could feel the tension building. From the wings I took a peek at the house and could see the line of standees at the back of the theater. Somewhere in that darkness were Kathleen and her mother. I rationalized that Kathleen had already seen everything I have to offer, so I just should get on with it.\n\nAs our pants fell to the floor the audience exploded. All the guys were pumped by the response and we let it fly. I was sorely tempted to throw my hat away I was so filled with adrenaline. Of course, I didn't. I did do some extra butt squeezes that drew more than a few laughs.\n\nAs we hit the last pose and the lights went down, I was almost giddy with elation. The audience was standing and shouting. When we mooned them, a roar shook the building. We had worked out a new move that even Sarah didn't know about. As we turned back toward the audience, I put my hat over Jonas, who was next to me, and he put his over my privates. The others did the same. The audience loved it. We made our way off stage in this way and as each person reached the wings, he'd lift his hat and wave it at the audience. I was confident no one in the audience could see our fronts, but it was a tease.\n\nAs the curtain dropped, Sarah called us all back on stage. We were laughing and joking with each other. She looked at each of us and shook her head. \n\n\"You know how I hate deviations from what I've staged,\" she said with hands on hips. \"But, that was fucking awesome. We're keeping it in. Now go wiggle those dicks in front of someone else for a change.\"\n\nKatie was in the wings collecting hats as we exited. \n\n\"Another great show, Mr. C. I liked the butt squeezes.\" As I stepped past her, she slapped my ass for a second time. I turned. She was blushing and grinning. \"I've wanted to do that since the first slap I gave you. Sorry, just had to see for myself. Awesome butt, Mr. C.\" She gave it another slap and let her hand rest on my cheek for a couple seconds, moving lightly over my skin. I tightened my cheeks and she rubbed her hand back and forth. I quickly headed down the stairs as she stared at my erection. \n\nSarah was coming up the stairs and she certainly did not miss it. \n\n\"Are you really that happy to see me?\" she quipped. We turned so we could pass. Her hand touched my erection and she sighed. \"Don't keep tempting me with that thing, Robbie. A woman can only take so much.\" She ran her finger up my shaft and softly cupped my head. \"Of course, I think I could take all of this.\" She pivoted and ran up the rest of the stairs. \n\nWalking into the dressing room I received a ton of shit from the rest of the cast. Even Irene did her customary take while assessing my hard on. I dressed quickly and hurried out to catch up with Kathleen. I saw her and an attractive woman in the lobby.\n\nShe gave me a full hug again and introduced me to her mother, Virginia. \"What, no hugs for an old broad?\" I took her into my arms and dipped her slightly. She howled and I kissed her on the lips.\n\n\"Kathleen said you were easy on the eyes, but I never expected all this. Plus, your butt is much better than she described.\" I glanced at Kathleen who was now scarlet. I wondered if she also described the aroused state of my dick.\n\n\"And, she told me she was bringing her mother, not her sexy sister,\" I said in return.\n\nVirginia grinned even wider, and slipped her arm through mine. \"You are a charmer, Robbie. Now you get to ply us with liquor.\"\n\nI offered my other arm to Kathleen and she took it. The three of us walked into the night. After an hour of drinking and fun conversation, I called a cab for the ladies and sent them on their way. I walked back to my loft with a mind filled with mixed images and thoughts. I was still shocked at Sarah's actions. The remembered feeling of her hand on my dick sent a little shiver up my spine. Her not so veiled statement about wanting me inside her had my heart pounding. I next pictured Kathleen's pretty face and wondered how I should interpret her mother's statement that said Kathleen thought I was hot. I had not been with a woman in over three years and now two attractive females were giving me fits\u2014well make that three if I counted Virginia. Then I remembered Katie's hand on my rear and how she let it rest there. The look in her eyes was far from innocent as she eyed my erection.\n\nI was woken the next morning by my cell phone. I saw it was Kathleen.\n\n\"Hi!\"\n\n\"Robbie, good morning. I hope I didn't wake you.\"\n\n\"You did, but it is always so good to hear your voice.\"\n\n\"Oh, well, sorry. I mean about waking you. Uh, Mom and I are going to brunch and wondered if you wanted to join us?\"\n\n\"Sure. Where?\"\n\n\"We got a table at the Falls Inn. Could you make it in a half hour?\"\n\n\"No problem. See you there?\"\n\n\"Right. We'll look for you.\"\n\nI showered, shaved and dressed. The restaurant was just far enough away for me to take my car. I kept two vehicles in the garage part of my loft. Today I opted for my old Aston Martin DB5. The top was already down and I enjoyed the morning sun as I headed to the Falls Inn.\n\nKathleen and Virginia were at a table overlooking the falls. Kathleen stood as I approached. I sensed she wanted a hug and obliged her. Her body felt soft and strong against mine. I sat next to Virginia and leaned in to kiss her cheek.\n\n\"Sleep well, ladies?\"\n\n\"With pleasant dreams, to boot,\" said Virginia. We all smiled.\n\nOver brunch I discovered that Virginia was a funny, bright and adventurous woman. I could easily see the resemblance between mother and daughter. Like Kathleen, Virginia was tall and slim. Her skin was smooth while her blue eyes showed as much sparkle as her daughter's. She kept her silver hair short and I thought she was both attractive and sexy. We fell into an easy conversation, each of us sharing parts of our lives. Since Virginia's husband died, she had continued her passion for adventure and now had traveled to over twenty countries. She enjoyed hiking and photography, and still drove herself around. The conversation shifted to cars and she perked up when I described my Aston Martin.\n\n\"You know that was one of the most expensive cars when it was first introduced,\" Virginia said.\n\n\"You know about British cars?\"\n\nKathleen rolled her eyes. \"Mom used to tear around town in her MGB. All of the other mothers would just shake their heads when she pulled up at soccer practice to drop me off.\"\n\n\"Well, how'd you like a ride?\" I asked Virginia.\n\n\"Robbie, the proper question is how would I like to drive it?\"\n\nI looked to see if she were joking, but Virginia kept a straight face. I turned to Kathleen and she just shrugged.\n\n\"Well, let's get the bill and get the hell out of here. Kathleen, I take it you can get home on your own. If Virginia and I aren't back in a day or two, just check the airport to see if we headed to Paris.\" \n\nOutside, Kathleen watched us climb into my car. Virginia was as limber as a forty-year old, and slid easily behind the wheel. She hiked her skirt up revealing a length of firm thigh and put her hand out for the key. I buckled up, handed her the key and said a silent prayer. When the engine came to life, Virginia let out a whoop. \"This is going to be fun.\"\n\nWith a wave to her daughter, she let out the clutch and we were off. I directed her around the traffic circle, and pointed to a road that took a back route to the next small town. I immediately relaxed as Virginia ran through the gears as smooth as silk. She cornered, downshifted, and made the car behave as an extension of her hands and feet. \n\nAfter taking a particularly sharp bend and snapping the tail back in line, she shouted, \"This is fucking fantastic.\" I turned to look at her and she smiled. \"Pardon my language, but I couldn't fucking help it.\"\n\nWe both laughed out loud. We passed through a couple towns, and I asked if she'd like an ice cream. After her enthusiastic agreement, I guided her to a small dairy farm that operated a road side stand. She parked in the shade of a maple tree. I went around to help her out. I don't care how young you are, a woman exiting a low-slung sports car always is in risk of showing more than is considered decent. Virginia's skirt was now high on her thighs. She put one leg out and I took her hand. As she pushed off to stand, I was treated to a clear view of her white underpants. They were high cut and not the \"granny panties\" I thought a woman of her age would be wearing.\n\n\"I hope you enjoyed that, Robbie,\" she said as she straightened her skirt. \n\n\"Are you talking about the ride? Then, yes I did. If you are referring to anything else, I have to plead the fifth.\"\n\nShe took my hand and we walked to the stand. With cones in hand we sought out a picnic bench in the shade. We spent some quiet moments enjoying our rich treats. Virginia finished her Rum Raisin and wiped her mouth with a paper napkin.\n\n\"So, are you going to take Kathleen to bed?\"\n\n\"What?\"\n\n\"You heard me, Robbie. I know she would like that. I see how you look at her, and I think you want to do so. Take it from an old lady, time gets away from you. Don't put off things, go for them.\"\n\n\"Virginia, Kathleen and I just really met. We've only been out in social situations. I assure you that I was being professional.\"\n\n\"Robbie, cut the bullshit. Do you think Kathleen is pretty?\"\n\n\"Honestly, Virginia, she is beautiful.\"\n\n\"Now, we're getting somewhere. So, here's the thing. I believe the two of you should give it a go. She's not been with a man since she and Manny divorced. That's over three years. How she doesn't go crazy, I'll never understand. I heard about your situation and I am sorry for your loss. You're still a young man. Have you had sex since your wife died?\"\n\n\"Jesus, Virginia, why don't you be direct?\"\n\n\"One of the benefits of passing sixty, you can say whatever the hell you want. So, have you been getting any?\"\n\n\"No.\"\n\n\"Perfect. Take my daughter and give her a time she won't ever forget. From how she described your equipment, I don't think that will be a problem.\"\n\nI smiled as I thought about Kathleen describing my erection to her mother. I was pleased to find out that Kathleen found it worthy of discussion.\n\n\"I really have to think about this,\" I said.\n\n\"God, Robbie, that fruit is ripe for the picking. Besides, if you don't bed Kathleen, then how about we follow through on that escape to Paris. I get really horny when I travel.\"\n\nI looked at this wonderful woman and knew she was not totally kidding. I let myself imagine what it would be like taking her into my arms. I had a sense I would be learning a lot of things.\n\n\"Virginia, how about this? I'll think about it. If it doesn't work out, I'll give you a call.\"\n\n\"Don't wait too long, kiddo,\" she said. \"There may be someone taking your spot. Tick tock, Robbie, tick tock.\"\n\nI wasn't sure if Virginia meant taking my spot with Kathleen or with Virginia. In either case, I could envision a long line at both of their doors.\n\nVirginia drove back to Kathleen's apartment. She lived in a small house attached to a larger apartment building. She was sitting on her porch reading the paper.\n\n\"Ah, guess I can stop checking the flights to Paris,\" she said with a smile.\n\n\"Yeah, I don't think Robbie could handle it.\" Kathleen shook her head. I had the feeling she found her mother quite challenging. I declined the offer to stay for dinner and made my good-byes. Virginia whispered in my ear as I hugged her, \"Tick tock.\"\n\n(Now the stage is set for what could be a challenging choice for Robbie. We know he meets the woman of his dreams, but is it Kathleen, Virginia, Sarah or even Katie. Maybe he'll meet someone else. The next chapter will begin to unfold the story of what happens after you show the Extremely Full Monty.)\n\n\u2003\n\n \n"
    ],
    "authorname": "orie",
    "tags": [
        "voyeur",
        "nudity",
        "public",
        "stage"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-extremely-full-monty-ch-01"
}