{
    "title": "Female Sexual Response: Subject 326",
    "pages": [
        "The Study\n\nWhen I was a college student, every undergraduate Psychology major had to volunteer to be a subject in a research project for a graduate student or one of the professors who was trying to publish his findings in some academic journal. It was a requirement for graduation.\n\nAs I was nearing the middle of my senior year, I realized that I was low on research credits, and I was also low on funds. I frantically scanned the research postings, looking for something that would be easy and not very time consuming. I was juggling two jobs and a full course load. I didn't have a lot of extra time to spare. The descriptions didn't tell you very much, they didn't want their subjects to be tainted with prior knowledge or bias that would skew the results. But one study captured my attention.\n\n\"Female Sexual Response\"\n\n100 credits and $500 for participation in a month long study. Subjects will be given a medical exam, and be required to wear monitoring equipment every day for one hour and come to weekly appointments lasting 1 hour each. Phone interview required for qualification.\n\nI scanned the rest of the studies, but I kept going back to the Female Sexual Response study. I could feel the dampness in my panties as I reread the description. It sounded interesting, and very exciting. I took one of the cards and put it in my backpack as I walked home to my dorm room. It would all be anonymous. All of these studies were always anonymous.\n\nI called the number and answered a few questions to see if I qualified. Was I sexually active, did I have normal cycles, my height and weight. With excitement, and some fear, I qualified and an appointment for the medical exam was made for the next day. \n\nI couldn't think straight as I anxiously awaited 3:00. It would probably be just a regular ob/gyn exam. They would strap some heart monitors on me and... \n\nAnd what? My heart raced as I thought of all the possibilities.\n\nThe Exam\n\nI arrived and was handed a clipboard by the receptionist with pages I needed to fill out. I was the only one in the waiting area and I took a seat closest to the door, in case I wanted to make a fast escape. They were normal questions that a doctor asks before the first appointment. Family history, any medical problems, etc. I turned the sheet over and noticed the questions were more detailed. It was a good thing they didn't ask for my name. Do you masturbate. Yes. How often? Daily. Have you ever experienced mutlitple orgasms? Yes. How many orgasms have you had today? Two. Have you ever had an orgasm with a partner? Yes. Are your orgasms strongest when you masturbate or when you are with a partner? Masturbate. Do you know the location of your g-spot? Yes. Which of the following do you fantasize about when masturbating?\n\nAnother girl walked in just then and I looked up briefly. She was handed a clipboard and sat down in the corner. I thought I recognized her, but I wasn't sure. She was tall and thin and was wearing a tight white tank top and jeans. I didn't get a good look at her face because I quickly looked down when she sat down to concentrate on my questionnaire.\n\nWhat do I fantasize about when I'm masturbating? Wow, I realized I had to check almost everything on the list. Bondage, lesbians, group sex, voyeurism, exhibitionism, rape, almost everything else. How old were you when you experienced your first orgasm? Twelve. Do you enjoy pornographic movies? Yes. I squirmed in my seat as I filled out the rest of the paperwork. Just thinking about it was getting me aroused. I looked up, embarrassed. I noticed the other girl was still filling out the standard medical questions on the first page. She had no idea what was coming. She flipped over the page and I watched her out of the corner of my eye as her eyes scanned through the questions. I noticed her nipples were now hard and straining against her top. It excited me to know that she was excited as well. She reached up and discreetly brushed her hand against her nipple, getting them harder. I wanted to touch my own but wasn't as brave.\n\nI finished filling the rest of the paperwork and walked towards the receptionist. She smiled at me, \"No. You keep your paperwork. It's all confidential. Give it to the doctor when you go in for your exam.\" She handed me a card with a number on it. We'll call you when it's your turn. I returned to my seat and I could feel the eyes of the other girl watching me as I returned to my seat. I wondered if she could see my hard nipples through my shirt, and as I sat down, with dismay I realized she could.\n\nJust then another girl entered the room from a different door. She was dressed in a hospital gown and she looked like she had been running on a treadmill. Her face was covered in a slight sheen and she was breathing heavily. Her hair had a wild unkempt look and she bit her lip as she walked unsteadily into the room and she quickly sat down in the nearest seat. She wrapped the gown around her tightly and crossed her arms in front of her but she was restless. She would sit still for a few moments, and then squirm in her seat. She looked up and when we made eye contact, I was a little taken aback by the look in her eyes. There was a hunger or a desperation mixed with something else. Despair. I considered leaving but then they called my number.\n\nI slowly rose and walked towards the pretty nurse, afraid to make eye contact as she took the clipboard from me.\n\nShe silently led me down a hall into a room that looked like a doctor's exam room. She handed me a gown and told me to disrobe. She left and I stood there, my heart racing, wondering if I should back out now. But I knew I would regret it if I did. I would lie awake at night, wondering about all the exciting things they would have done to me as I quietly fingered myself next to my sleeping roommate. I undressed. As I slid my panties off, I noticed how wet they were. I quickly put on the robe and looked around the room to see if I could find some Kleenex or paper towels to wipe away the proof of my excitement. There was a knock on the door.\n\n\"Uh, come in?\" I said tentatively.\n\nTwo young women entered the room, dressed in white lab coats and carrying clipboards. They were beautiful. Too beautiful. Would they be doing things to me?\n\n\"Hi #326. Thank you for participating in this study. Please come with us. I glanced at my clothes that were neatly folded on a chair. They saw my hesitation and told me to leave everything there, explaining something to me about outside bias based on the clothes I had chosen to wear, etc.\n\nI clutched the gown tightly around me and I was led into a larger room that looked like another exam room, but it had a lot more monitors and machines. Things were beeping and wires were trailing along the ground. \n\n\"The doctor will be in momentarily, but first we'll be doing an initial medical exam,\" one of them said, instructing me to get on the table. \n\nThey checked my blood pressure, my reflexes. They verified my height and my weight. I started to relax a bit.\n\n\"We're going to do a breast exam now. If you can take off your robe and lie back on the table here.\"\n\nI lay back and stared up at the ceiling as I lay exposed. I could feel my nipples automatically harden. She got a bottle from a table and squirted some warm clear gel onto my breasts and started to rub it in, startling me. \"This will help once the monitors are put in place,\" she explained, although I had no idea what she was talking about. She started on the edges of my breast, moving in ever smaller circles towards the center.\n\n\"Do you do self breast exams?\"\n\n\"Yes,\" I whispered as she pinched my nipple, sending a shock through my core.\n\nShe moved on to the other breast, expertly rubbing in small circles as I tried to keep my breathing even. The breast exams I'd had were nothing like this. Those were clinical and cold. The anticipation of what would happen later sent a tingle through me with every touch. When she reached the middle of my breast, she paused and I drew my breath in, trying to prepare myself for that delicious pinch. As I felt the bolt of lightning course through her fingers into my nipple, I let my breath out, slowly trying to relax. Trying to stop the wetness that was increasing between my thighs.\n\n\"Okay, everything looks normal.\" She smiled at me. I could only nod.\n\nThey started hooking me up to all the machines. Monitors that would check my heart rate, brain wave activity, my oxygen levels and my breathing. They asked me to move down further on the table and put my feet in the stirrups. The monitors showed that my heart rate increased as I lay prone and open. This would be it. Something was going to happen to me down there. Where my secret petals flowered.\n\n\"We're going to do a routine pap smear now.\" They inserted a speculum inside me and stretched me open. I felt an uncomfortable ache as they gathered samples from my cervix and placed them in a vial. The monitor showed that my heart rate was slowing down as my initial excitement faded. This was very clinical. I started to relax, although the speculum was still holding me open for all of them to see.\n\nThe door opened and a young man walked in. A beautiful, handsome man. Too handsome. \"How are you? I'm Dr. Matthias,\" he said as he picked up the forms I had filled out. I could see his eyes move back and forth as he read the answers I had filled out. This stranger was reading about my sexual habits. About my fantasies. It was unnerving, and yet, so very exhilarating.\n\n\"The orgasms you had today, were they through intercourse, oral manipulation or masturbation?\"\n\nI swallowed. \"Masturbation,\" I said softly. Mortified.\n\n\"By what method?\"\n\n\"Excuse me?\"\n\n\"Vibrator? Manual stimulation?\"\n\n\"Vibrator.\"\n\nAn assistant jotted some notes down as he glanced up to look between my legs. \"Check the pH on that fluid. We need to know if she's ovulating or if that's arousal fluid.\" I felt myself blush. A hand slipped between my legs as she swabbed the opening of my vagina.\n\n\"It's arousal fluid,\" she said. I closed my eyes, fully embarrassed.\n\n\"Okay, let's have a look here.\" The doctor pulled up a stool and put his face between my thighs. He started touching me with his gloved hands, as if I was a speciman. Which I was, really. \"Outer labia are normal. Inner labia, normal pink and moist with an average amount of arousal fluid. Internal shows no evidence of injury.\" He removed the speculum, leaving me feeling empty. \"Caliper please.\" The assistant handed him one of the tools from the table.\n\n\"Clitoris is normal, currently measuring 55.\" He ran a finger up and down my clitoris, making me gasp. I wasn't expecting that. He rubbed it a few more times and I had a hard time just lying there. My breathing was coming in quick little gasps. He finally stopped. \"After 10 seconds of manual stimulation, it is now measuring 58 and has emerged from the clitoral hood.\" The assistant wrote all of this down.\n\n\"Subject 326?\" Was he talking to me? I looked down to see his face between my thighs. \"At various times, I will ask you to rate your state of arousal. A 10 means you are in the middle of an orgasm, and 1 means you're not aroused at all. Do you understand the ratings?\" I slowly nodded and put my head back down. Middle of an orgasm? Would I be manipulated into having an orgasm here? In front of everyone?\n\n\"What is your state of arousal at the moment?\"\n\nI had to think. \"Four\" I managed to get out.\n\n\"Okay, let's start.\" They brought down a monitor in front of my head. Words appeared on the screen. \"You will see a series of images. Your monitors will check your state of arousal. It is important that you not move at all until this portion of the study is completed.\"\n\nOne after another, I was shown images of sex. There were scenes of intimacy, and brutality, and close-ups of women and men in the middle of their orgasms, their faces grimaced in pleasure. Images of every kind of sex and every position. I could feel the familiar itch rising inside me as I watched these scenes unfold in front of me. If I had been alone, I would have touched myself, thrusting my hips into my hand for some relief. But I couldn't. They were watching me. Then the images stopped and the monitor retracted back towards the ceiling.\n\n\"What is your state of arousal?\"\n\n\"Five.\"\n\n\"Clitoris is now measuring 62.\"\n\n\"Okay, turn on the visual monitor please.\"\n\nI turned to see a different television screen next to the table light up with the image of my pussy, dripping wet and filling the whole screen. I couldn't look at it.\n\n\"Subject 326, it is very important that you lie very still during the rest of the exam. Otherwise we won't be able to get the proper measurements that we need. If you feel at any point that you are unable to lie still, we can offer you restraints. Otherwise, we won't be able to continue.\"\n\nAn assistant smiled down at me. \"Are you comfortable?\"\n\nI nodded.\n\n\"Okay, let's start with the breast stimulation.\"\n\nTwo suction cups were placed on my nipples and I was curious to see what would happen.\n\n\"Subject is ready doctor.\"\n\n\"Okay, 3, 2, 1,\" he counted down.\n\nThe suction devices started licking and slurping away at my nipples, they felt like two hot mouths eagerly sucking and bringing me to the edge. It took everything I had to not cry out. Then suddenly, they stopped.\n\n\"Would you like the restraints? Remember you can't move. We need to gather at least five minutes of data.\"\n\nI nodded, my breath escaping in heavy gasps. It was so hard to keep control of myself. Not being able to move or cry out was torture. They wrapped soft straps around my thighs, around my belly, my arms and my ankles. \n\n\"Subject was restrained at 2.35 seconds.\" An assistant jotted this down. \"Shall we continue?\"\n\nI nodded and held my breath, waiting for the pleasure to begin again. \"3, 2, 1.\"\n\nThe expert mouths began sucking and licking again. A mechanical tongue twirled around my nipples in slow then fast circles. I was breathing in fast and shallow bursts, not wanting to moan or cry out. The mouths just went on forever, swirling and sucking. I wanted to rub my clitoris or push the mouths away, but the restraints were holding me down. Then finally they stopped.\n\nI could hear my heavy breathing, and all the monitors were bleeping like mad.\n\n\"Subject 326, what is your state of arousal?\"\n\n\"Six?\" I said, softly.\n\n\"Clitoris is now measuring at 67.\"\n\n\"Very good. Okay, let's move on.\"\n\nI lay there, taking in deep breaths, willing the machines to slow down their beeping. They were taunting me, letting me know how excited I was to be touched like that in front of strangers.\n\n\"Subject 326, I'm going to insert something into your vagina now. It won't hurt, although it may be a little uncomfortable at first. Remember we need at least five minutes of data.\" I felt something slide inside me, and then it began to fill me. Was it getting larger?\n\n\"Subject is ready, doctor.\"\n\n\"Okay, 3,2,1.\"\n\nWhatever was inside me started fucking me. It pistoned in and out rhythmically. I wanted to move with it's rhythm, meeting it's thrusts but the restraints prevented me. I could just lay there as I was fucked. The rhythm increased, and then I felt it. Something inside me was stimulating my g-spot and I couldn't help crying out. It was bringing me closer, oh so much closer, but I needed something on my clitoris to take me over the edge. Or my breasts. I just lay there, taking it. My hands gripping the sides of the table, unable to contain the moans that escaped my lips. It went on forever. And then it stopped. They removed whatever had been inside me and I felt disappointed and somewhat relieved.\n\n\"What is your state of arousal?\"\n\n\"Seven or eight.\" I gasped.\n\nA hand brushed against my clitoris, making me jump.\n\n\"Clitoris is now measuring 73.\"\n\n\"And add that subject started vocalizing at 2 minutes, 42 seconds.\" I cringed.\n\n\"Now for the clitoral stimulation.\" The monitors bleeped excitedly.\n\n\"Subject 326, it is imperative that you not reach orgasm during this next part of the study.\" He handed me a black cylinder with a red button at the end. \"When you feel that you are about to achieve climax, you need to stop by pushing this button. Do you understand?\"\n\nI nodded as something made out of a thick piece of rubber was placed on top of my pubic bone. Expert hands rubbed and molded it and I felt something spread my lips and rest just on top of my clitoris. \n\n\"Subject is ready.\"\n\nI held my breath, anxious for what was to come.\n\n\"Okay, 3, 2, 1.\"\n\nA vibration started, slowly at first. Then it circled around and concentrated on my little bud. Then the whole pad started vibrating. It alternated like this, the vibrations increasing with every circle. Then, it felt like a million tongues were lapping at my clitoris. I gasped and cried out as the tongues teased and sucked my clitoris into their eager mechanical mouths. I wanted to push it away but I couldn't. I closed my eyes, gripping the button as I came closer and closer, unable to stop the moans that escaped my lips. Then I had to push the button. It was too much.\n\n\"Subject stopped at 1:48.\"\n\nI was practically hyperventilating.\n\n\"What is your state of arousal?\"\n\n\"Nine,\" I hissed.\n\n\"When your arousal is back to an eight. You may continue. But please stop before you reach your orgasm. Otherwise you will be disqualified.\"\n\nContinue? They wanted me to continue? I looked at their faces. They were all watching me. Taking notes, and watching me. Waiting for me to tease myself until what? Would they let me reach my climax? Would I want to come? In front of all of them? My mind was screaming no. The monitors and my body were all saying yes, yes, yes! I took a few more deep breaths as the monitors slowed down. I felt myself come down and I wanted to push the button to start it again, but I was scared of letting go in front of them. Exposing myself in front of them. But I knew I wanted to feel that delicious release.\n\nI took a deep breath and pressed the button, as the hum started again. I could feel myself going higher and higher and I closed my eyes. Just allowing myself to feel it. I could feel the familiar waves coming closer. I wanted it to come closer. I wanted to touch it. Feel it wash over me. I pressed the button again. And it stopped. I kept my eyes closed as my breaths came in quick gasps.\n\n\"Subject stopped at :58 seconds.\"\n\nI knew they were all watching me. I knew they were all waiting for me. I kept my eyes closed, trying to pretend they weren't there. I listened to the beeps, coming slower and slower as I tried to relax. I took a deep breath and pressed the button again.\n\nI let out a long deep moan that surprised me as the assault started again. The wonderful delicious attack on my clitoris. I could only hear the low animal cries that came from the center of my being. I couldn't handle this. I stopped.\n\n\"Subject stopped at :32\"\n\nI wasn't sure I could continue. I was so close. Just a few more seconds and I would be there. I tried to slow down my breathing. Just one slight touch and I would be coming. I wanted to come, I needed to come, but I wasn't sure I'd be able to press the button in time before I was overcome by the pleasure. And I wasn't sure I wanted them to witness such a desperate loss of control.\n\nI opened my eyes and opened my mouth to say something, but I didn't know what to say. They all looked down at me, waiting for me.\n\n\"Would you say that an orgasm is inevitable at this time?\"\n\nI nodded.\n\n\"Would you be able to attempt it just one more time?\"\n\nI hesitated.\n\n\"At this point, we haven't collected enough pre-orgasmic data. If you can't continue, our session will end here and you won't be able to take part in the rest of the study. And I'm afraid you won't receive the credits or the payment.\"\n\n\"I... I think I can go one more time.\"",
        "They all smiled at me, as they waited for me to continue.\n\nI took a deep breath and pressed the button. It was right there. It was so close I could almost taste it's sweet nectar. The mechanical tongue swirled my sensitive clitoris. I had to stop.\n\n\"Subject stopped at :08\"\n\n\"Okay, let's let her rest before we continue. Let us know when your arousal is back to a seven or an eight.\"\n\nI closed my eyes, gripping the table as the button was taken from me. I could feel my clitoris pulsating in time to the beep of the heart monitor. They left the clitoral stimulator on me, which was a good thing. I would have climaxed just by them removing it. I needed a release so badly it hurt. I wanted to reach my hands and caress my nipples, but I reminded myself, I needed to come down. I took even deep breaths, trying to think of something else.\n\n\"Okay, I'm at an eight.\"\n\n\"Wonderful. Okay, this is the final part of your exam today.\"\n\nThey placed the breast stimulator back on my nipples, and they reinserted the phallus in my vagina. My body reacted to the anticipation of what I was about to feel. I knew I would finally be taken over the edge. In front of these strangers, as they watched me. I would be manipulated to come as they watched my face contort, listened to the sounds I made and jotted notes in their notebooks. They removed my restraints.\n\n\"For the next ten minutes, you are free to move in any way you like. Everything will be on and cannot turn off until the end of the ten minutes. The monitors will all gather the information we need at this point.\" \n\nTen minutes? Would I be able to handle ten minutes? I only needed ten seconds.\n\n\"Subject is ready.\"\n\n\"3, 2, 1.\"\n\nIt felt like there were a hundred mouths on me. All sucking and licking at my most sensitive parts. I was so close already, I could feel it. But I couldn't let myself release. I knew they were watching me. Waiting for it. The vibrations increased as the mechanical mouths carried me to the precipice and I teetered on the edge, trying to hold back. And then I let myself fall. I cried out as I arched my back, feeling myself as I flew through the air, the machines fucking and sucking me in earnest. I rode wave after wave of my orgasm, which didn't want to stop. It continued on and on, taking me higher than I thought possible.\n\n\"Subject has reached orgasm,\" I heard someone say. \"Time 2:13\"\n\nI slowly came back to earth and noticed the vibrations had slowed. My sensitive nipples weren't being sucked anymore. The pistoning had stopped. I took a breath. And then it started again. My nipples were sucked into eager mouths, the oral assault on my clitoris began again as my g-spot was being rubbed. I was fucked again and again. It was too much. I cried out and I knew I would be having another orgasm.\n\nI climaxed again. \"Subject has reached orgasm number 2. Time 3:01\"\n\nI came again and again. Four, five, six. I could hear them announcing my orgasms one after another. My body was on fire. I couldn't handle it anymore. I needed it to stop, and yet I wanted it to continue. Forever.\n\nAnd then it finally slowed down and stopped as I lay there. Covered in sweat. I was afraid to open my eyes. My breaths were shallow and I started crying as they slowly removed everything and I felt even more exposed. More vulnerable.\n\n\"Clitoris is measuring 82.\" I lay there just listening to my breathing, steadily slowing.\n\n\"Subject 326?\"\n\nI opened my eyes, but I was still unable to meet their eyes.\n\n\"Please put on your gown and come with me.\" I knew I was being led back out into the waiting room. I knew everyone there would be staring at me. I hoped that girl was gone, but I knew she was still there, waiting her turn. From the distance I thought I heard moaning, or it may have just been a door opening. They told me to wait until they came for me to get fitted for the home monitoring device.\n\nI nodded. I sat down in the first chair I saw, my legs were shaking. My clitoris was still pulsating and I knew that it wouldn't take much for me to have another orgasm. I could probably have one right here in about two seconds. I squeezed my legs together, completely understanding the look of hunger in the girl I'd seen when I was waiting for my turn. The girl in the white tank top was staring at me, her clipboard on the chair next to her. Every now and then I saw her hand slowly raise up and I knew she was rubbing her nipples again. Another girl was in the room now and I could tell that she was filling out the questions on the first page, completely oblivious to what was going to happen to her.\n\nThe door opened and my heart jumped. \"Subject 327?\"\n\nWhat number was I? I saw the girl in the white tank top get up and follow her out of the room. I was surprised how aroused I felt, knowing that I knew what would be happening to her and she didn't.\n\nThe other door opened and my number was called. With relief, I noted it wasn't one of the two assistants that had witnessed my degradation, but it was the first nurse who had waited outside while I disrobed. At least she hadn't witnessed my humiliation, but I knew she was aware of what I had gone through. I wondered if she had watched, or if she had gone through it herself. I got up slowly and followed her, feeling my juices trickling down my leg and followed her into the exam room where my clothes were still neatly folded. I could hear faint screaming coming from down the hall and I got wet, thinking of the other girl, experiencing mind blowing pleasure, the same pleasure I had just experienced. What was being done to her right now, I wondered. I blushed as I realized everyone had probably heard my screams.\n\n\"Thank you for participating in our study.\" I just nodded. \"I'm going to explain how the rest of the study will work.\" She opened a box.\n\n\"Your monitor is custom made to fit you. They have an advanced microchip inserted which has been programmed with the data that has been collected earlier. They consist of a bra with a front closure and underwear,\" she held up the bra, demonstrating how the hook in the front worked and I recognized the same suction cups that would surround my nipples. The rubber panty looked normal until she showed me the inside, which had a large flexible phallus.\n\n\"When you put it on, make sure the phallus is inserted into your vagina, and the clitoral stimulators are flush against your vulva. You are required to wear this for a minimum of one hour each day, but you can wear it for more if you want. In fact, the more you wear it, the more data we can gather. Internal sensors will verify that you have complied. On day 7, do not wear it until 30 minutes before your appointment. You are required to come back with your monitor on so we can gather the data collected. You are to abstain from sexual activity for the first week. No intercourse, no masturbation allowed. If you do not follow all of the directions, you will be considered an incomplete subject and you won't receive your credits or compensation. Any questions?\n\nI wanted to ask how the device would know but I just shook my head.\n\n\"In case you were wondering, the microchip will instantly register any differences in pH, or blood flow to the clitoral region, or even microscopic tissue damage that occurs during intercourse and masturbation. Your earlier session recorded your pre-orgasmic and post-orgasmic levels so it will pick it up.\"\n\nI nodded. Confused, but I wasn't going to attempt to speak.\n\n\"Okay, let's make sure it fits.\" She lifted the gown off my shoulders and let it drop to the floor, grazing my nipples as it fell. I wasn't expecting this. I thought perhaps she would leave the box with me and I would be able to put it on at home. But she slipped my arms through the straps and clasped it in the front. \n\nI gasped as she inserted her fingers into the cups and started rubbing her fingers over both of my nipples as I stood there helplessly. \"The nipples have to be fully erect in order to fit properly in the suction cups,\" she explained as she continued fondling my nipples. I couldn't help it as a moan escaped my lips and more of my fluid dripped down my leg. \"Maybe a little gel will help,\" she said. She unclasped the bra leaving it hanging open and got out a bottle squeezing some more of the clear gel onto her fingers before attacking my nipples again. It was too much. They were already sensitive and I couldn't imagine they weren't hard enough now. She pinched them and I let out a cry which I hoped sounded like pain, but we both knew it was more from pleasure. I closed my eyes, willing my nipples to harden so she would stop this assault. I allowed myself to give in to the pleasure. I held out my hand to steady myself, reaching blindly for the exam table, but grazing fabric instead.\n\n\"Would you like to lie down?\" she asked me. I opened my eyes, embarrassed as I realized that I had probably touched her breasts. \"Sometimes it helps the subjects to relax.\"\n\nI nodded and lay down on the table. She squirted more of the lubricating gel on my exposed breasts and continued fondling them. I closed my eyes and just gave in to the feeling, allowing the moans to come freely. I really couldn't imagine that they weren't hard enough yet. \"There we go,\" she said, \"It helps to give in to it.\" I allowed myself to feel the pleasure, not caring that I was in an exam room being fondled by a stranger, a beautiful stranger who had great hands. I didn't even realize that I had reached my hand between my legs and was rubbing my clitoris, until she firmly removed my hand. \n\n\"No masturbation, remember?\" I flushed from embarrassment. Would I have openly masturbated in front of her if she had allowed it? I hadn't even realized that I had reached down to touch myself.\n\n\"We're going to have to try something else,\" she said as she wiped the gel from my breasts. \"Just close your eyes and relax.\"\n\nI obeyed. I closed my eyes and I felt her hands on my breasts. Suddenly it felt like there was an actual mouth on my nipple. My eyes shot open and there she was, licking and sucking my nipple. I groaned with pleasure as she expertly nibbled, her tongue swirling and teasing. I raised my hips and gripped the table with my hands as my moans got louder. \"Please, stop,\" I whispered, knowing that I didn't want her to stop. She moved to the other nipple as her hands continued assaulting the other wet nipple. She was torturing me as I writhed under her expert mouth.\n\n\"Good,\" she said. \"Now they're ready.\" She clasped the bra, enclosing my breasts and fitting my sensitive nipples inside the suction cups. Strangely, I felt more disappointed than embarrassed as I lay there breathless.\n\n\"Let's see if the panty fits,\" she said. As I lay there, she raised one of my legs and fit my foot through one hole, then the other. \"Raise your hips,\" she commanded and she raised the panty up. The phallus poked my clitoris and I gasped. It was still very sensitive and after the assault on my breasts, even more so.\n\n\"You want to make sure you're fully lubricated.\" She reached a hand down and caressed my open lips as I arched my back, a moan escaping my lips. \"We obviously don't have a problem with that.\" She smiled and I looked away.\n\nShe instructed me to get off the table and stand up so she could fit the phallus in my vagina. It slipped in easily and I was disappointed that I could hardly feel it. She adjusted it around and I felt something slip into place over my clitoris. \"You want to make sure it pops in for maximum clitoral stimulation,\" she explained. \"Is it comfortable?\" she asked. \n\nI nodded. \"Okay, I'm going to turn it on now. After today, it will turn on automatically once it detects the right level of body temperature. That's why it's so important that your nipples are fully erect so the sensors in the bra can pick it up.\"\n\nI nodded again.\n\n\"Perhaps you should lie back down,\" she said and I obeyed, not knowing what was going to happen. But I had my suspicions when I saw the glint in her eyes as she smiled. \"Just enjoy it.\"\n\nI lay back down on the table and suddenly, it came to life and it was just like earlier. The suction cups expertly licked and sucked my nipples, the phallus enlarged and stretched me beyond what I had ever experienced and began a rhythmic fucking, lovingly caressing my g-spot over and over. And there was a constant vibration over my clitoris. I cried out as I was being assaulted again. I saw some movement and saw that she was standing close with one hand under her shirt as she watched me. She slid her other hand inside her skirt and by the movement of her hand, I knew she was pleasuring herself. The sight of her pushed me over the edge. I screamed out and held onto the table so I wouldn't fall off as my orgasm overtook me. I arched my back, wanting more, wanting to feel more if that was even possible.\n\nI felt a hand on my leg and I looked at her and noticed she had stripped out of her clothes. She had squirted some of the lubricating gel onto her breasts which gleamed and she openly fondled herself as my second orgams overtook me. Then three, four, five. She had her fingers inside her, pushing her towards her own peak.\n\nThen it slowly came to a stop, the vibrations slowed, the fucking stopped, leaving me panting on the table. I closed my eyes and wept as I lay there, unable to move.\n\n\"I have some questions to ask you,\" she said.\n\nI opened my eyes and saw she was fully dressed. Had I imagined it? Was I going crazy?\n\n\"How many orgasms did you have?\"\n\n\"I don't-- I don't know.\"\n\n\"If you had to guess,\" she said, holding her clipboard and waiting professionally for my answer.\n\n\"I think-- I think-- um... eight?\"\n\n\"Did you feel any pain at all?\"\n\nI shook my head. From down the hall I could hear screaming. \"Please, make it stop!\" I heard.\n\n\"What were you fantasizing about most while you were experiencing this?\"\n\nI blushed. I couldn't answer that. But I couldn't think of a lie. I couldn't even think straight to say nothing, which is what I should have said.\n\n\"You,\" I whispered, as the screaming continued down the hall.\n\n\"Could you be more specific?\" she asked.\n\n\"You were masturbating while you were watching me,\" I replied quietly, unable to look at her.\n\n\"And how was I masturbating?\" she probed.\n\n\"You were naked and you were fondling your breasts while you were playing with yourself,\" I whispered. She wrote all of this down on her clipboard.\n\n\"Okay, do you have any questions before you go?\" she asked.\n\nI shook my head, as the screaming increased in speed and volume. \"Ahhhh!!!! No!!!! Please!!!!\" Then I heard rhythmic grunts that increased in tempo, I knew someone was close. A loud scream pierced the air, followed by whimpering. I knew how she felt.\n\nShe smiled warmly at me and said I could take my time getting dressed now. \"See you next week!\" she said as she walked out. I lay there, unable to move. I was sore everywhere. I slowly sat up and swung my legs over the side of the table. I unclasped the bra but my nipples were stuck to the suction cups. I had to work them free. I dropped it into the box. I removed the panties which were slick from my juices and added them to the box. I could smell my sex everywhere. I reached for my clothes and slowly got dressed. My legs were so shaky, I wasn't sure I would be able to walk.\n\nI debated whether I should quit. But I knew I was in too deep now. As I opened the door, I walked out and almost bumped into the girl who had been wearing the white tank top being escorted by the nurse who had just left me. The girl had her gown wrapped tightly around her, as if it could somehow protect her secret. \"Please contact us if you have any questions,\" she said warmly as we passed. The other girl didn't look up, and I knew she was the one who I had heard earlier.\n\nWeek 1\n\nI left and walked out in the open. I felt like I was a completely different person. I carried my box, my treasure, looking forward to trying it in the privacy of my dorm room. I took the elevator upstairs, still unable to meet anyone's eyes. I entered my empty room, relieved that my roommate was gone. I opened the box and took out the monitor. I almost put it on right then and there, but we had been instructed to start wearing it tomorrow.\n\nWhen it was finally time, I had to wait until after work. I came back to my room, knowing my roommate wouldn't be there. I first put on the bra, positioning the suction cups onto my nipples, making sure they were hard enough. I stripped off the rest of my clothes and put on the panties. The phallus fit inside me perfectly. I pressed the front, making sure the clitoral stimulators were on the right spot. And then I waited. Nothing. I looked inside the box to see how I turn this thing on. There was a small piece of paper.\n\n\"The monitor will turn on and off automatically, depending on your heart rate, level of arousal fluid detected and the measurement of your clitoris.\" Oh yes, I remembered now. She had said it would turn on automatically. So I had to wear it and wait. I walked around a little. Still nothing. I heard a key enter the door and realized my roommate was home. I hurriedly put on my robe and sat down on my bed, pretending I had been reading a book.\n\nSuddenly, it came to life. Slowly at first.\n\n\"Hey,\" she said as she entered.\n\n\"Hi,\" I answered.\n\nIt started sucking my nipples, a mechanical tongue swirling deliciously, carrying me higher. I realized that I was breathing erratically. My roommate was too busy to notice. She picked up the phone and called her boyfriend. I was now stuck here with her for probably another hour or two while she talked -- their conversations never lasted shorter than that. The phallus came to life and it was fucking me, gently. I heard myself grunt with each thrust. And then it started it's assault on my g-spot as the vibrations on my clitoris started. I was terrified that I would have an orgasm right there in front of my roommate. I wasn't sure I'd be able to stop from crying out. I could walk out into the hallway, go into the bathroom. But then I'd be stuck there for an hour, my whimpers echoing through the stalls. I couldn't take this thing off for one hour and I was just wearing my robe. I had to sit here on my bed while my body betrayed me.\n\nEverything moved faster and faster. My head was swirling. I wanted to push all of these people away. All of the tongues and fingers that were bringing me such pleasure, but I couldn't. I moved closer and closer to the edge. Just as I was about to reach the pinnacle, it stopped. I lay there, panting. I couldn't move. I was afraid to move. I was afraid that if I did, it would start again. I looked at the clock. It had only been 15 minutes since I'd put this on. I had to endure another 45 minutes. I could hear my roommate talking softly on the phone, deep in conversation. She hadn't noticed me. I realized that having her in the room was exciting me. Knowing that I couldn't cry out, or grind my hips, I was actually enjoying it more as I fought to control my animal urges.\n\nI shifted slightly. Nothing happened. I propped up my pillow. Nothing happened. I started to calm down. My arousal level was now at an eight. An orgasm was no longer imminent.\n\n\"I love you, bye.\" My roommate hung up her phone, just as it started up again.\n\nNo! my brain screamed.\n\nMy roommate sat at her desk and opened her backpack, preparing to do some homework, oblivious to the sweet torture that I was enduring. I bit my lip to stop from crying out. It felt so good. Too good. It was too much. Once again, I was brought to the edge, teetering. Waiting for that delicious moment when I would be taken over. And then it stopped.\n\nI slowly realized what was happening. It would do this for the next hour. Starting and stopping as it detected an imminent climax. Taking me so close and then pulling me back. Teasing me over and over. And then I remembered what the nurse had said. No masturbation for a week. Would I be allowed to come at the end of this torturous hour? And then it started again. I couldn't handle it anymore. I wanted to stop right then and there. Screw the research. But then I wouldn't be able to collect on the $500. That would mean that I had endured a humiliating hour having multiple orgasms in front of strangers for nothing. As I remembered the mind blowing orgasms I'd had earlier, I almost came. But this damn thing wouldn't let me. It stopped again. I lost count how many times it started and stopped, until finally, my orgasm was inevitable. Just a slight movement and I would be there.",
        "I realized my roommate was watching me. \"Are you all right?\"\n\n\"Fine,\" I managed to say. \"I'm fine.\"\n\nShe gave me a strange look before returning to her homework.\n\nMy orgasm retreated and I sat there, waiting for it. My clitoris was throbbing. I was so close. But it wouldn't turn on again. I kept the suit on for a few more hours. Hoping it would turn on again, finally pushing me over to the point of no return. I kept it on even after my roommate left. But, it was going to deny me. Finally, I just had to take it off and I couldn't masturbate to relieve myself. I put everything back in the box and turned off the light and went to bed. It took everything I had not to touch myself. I ground my hips into my pillow but it wasn't enough. I cried until I fell asleep.\n\nThe next day, I was going to make sure that I would be alone when I wore the monitor. I checked my roommates schedule and I had a good three hour stretch in the morning when I would be alone. I knew I wouldn't be going to my classes that day.\n\nI took the monitor out of the box and first put on the panties. I tweaked my nipples a little before putting on the bra. I was sure that today it wouldn't deny me. I was already so close. Even if it tried to deny me, I was sure that I would be able to trick it somehow by keeping my breathing slow. And without my roommate around, I would be able to thrust and grind my hips, helping it along.\n\nI lay there in bed, waiting for it to turn on. I thought about that girl in the tank top who had so innoceently brushed her nipple while filling out the questionnaire. How many orgasms had she had? As I pictured what she looked like in the middle of an orgasm, it came to life. Slowly at first. I savored it this time. Letting it mouth my nipples, as the mechanical tongue swirled and sucked it. Then the familiar pistoning began. It was different today. More urgent. I found myself grunting with every thrust as it violently fucked me. It would have been painful had it not been for the delicious thrumming on my clitoris. I lay there, moaning and waiting. I turned over on my belly propped up on a pillow, fantasizing that I was being fucked from behind. The vibrations on my clitoris became more intense in this position as I thrust my hips into the pillow. I was getting close. My cries became louder as I muffled them into my comforter. It felt so good. I was almost there. Higher and higher. I was going to come.\n\nAnd then it stopped. I cursed into my pillow. I ground my hips into the pillow but the hard rubber prevented any feeling from penetrating onto my clitoris.\n\nI couldn't wait to take this thing off me now. It was driving me crazy. I looked at the clock. I had 45 more minutes to go. I stood up. Maybe it would be less intense if I walked around. I was going to go insane. The device started up again and I realized it wasn't as intense when I stood up. I tried walking. Whoa. That was too much. That felt too good. I stood still and held onto my desk for support as I was being fondled and molested. I knew that if I thought about something else, my need to orgasm wouldn't be as intense. I could will myself not to get as aroused. But my body betrayed me. I bent over my desk, and cried out in insane pleasure as my breasts pressed down into the hard wood. The sucking feeling increased and I had to get up.\n\nAfter being taken to the edge and teased back again for the next hour, I finally had to take it off. I wanted to take a shower, clean my body of all of these feelings. I put on my robe and walked to the communal shower. At this time of day, no one would be in there. Almost everyone was in class. I entered the bathroom, and heard the sound of a shower running. I didn't know who it was. I stepped into the shower and turned the water on and tried to ignore what my body was saying. Then I heard moaning. Yes, someone was moaning in the shower. I recognized the familiar aching sound of pleasure. I squeezed my legs together. I didn't care about the study anymore. How would they know if I had masturbated? I leaned against the wall as I rubbed my nipples. It wouldn't take long. I needed this so badly. I heard another loud moan and realized that it had come from my lips. I noticed that the other shower wasn't running anymore. I hoped the bathroom was empty. I heard something drop, and realized that I wasn't alone. I stayed in the shower for as long as possible, until I knew for sure that whoever had been in there would be gone.\n\nWhen I thought it was safe, I turned off the water and realized that I had forgotten my towel. I would just have to step into my robe, dripping wet and dry off in my room. I opened the curtain and stepped across to the hooks and grabbed my robe. And I saw her. The girl in the tank top from the study. She was the one who had been in the shower. I didn't even know she lived in my dorm. She had probably heard the moan. She recognized me and then sheepishly looked away. I quickly put on my robe and headed towards the door.\n\nIn the safety of my room, I sat on my bed. This was going to be the longest week of my life. How was I going to be able to do this for another five days? That night, my roommate never came home. She spent half the time at her boyfriend's apartment. I lay awake at night, tortured. Wanting to bring out my favorite vibrator, but knowing I couldn't. The sensors seemed pretty sophisticated. I wasn't sure how it worked but I didn't want to risk being disqualified. I wasn't sure how I would be able to prevent the microscopic tissue damage that it would undoubtedly detect. The vibrator was definitely out of the question, I knew I would damage something if I brought it out since I knew I wouldn't be able to stop. It was like a drug. I knew I wouldn't be able to have just one. I wouldn't be able to stop until I had fully satiated myself, five, sometimes eight or nine orgasms later. And I couldn't stop thinking about that girl in the tanktop. Had she heard my moaning? I couldn't help picturing herself pleasuring herself in the shower. Was she breaking the rules or was she just as frustrated as I was? I finally went to sleep dreaming of her watching me come.\n\nIn the morning, I knew I had to go to class. Then I had to go to work. Then I had to meet my study group that night. When would I have time to wear the monitor? I looked at the clock. I would have to wear it to class. It took 30 minutes to walk to campus, if I put it on now, I would fulfill the one hour requirement walking to class, and then I would be able to take it off right before class started. I put it on and got dressed over it. It hadn't turned on yet. Maybe it wouldn't turn on until I had reached a certain level of arousal. I grabbed my backpack and tried to think about anything that wouldn't set me off. As I rode down in the elevator, I was happy that it hadn't turned on yet. Already 15 minutes had passed.\n\nI started walking, and still nothing, although the phallus inside me was starting to excite me a little. And then without warning, it started. I cursed under my breath. I had to slow down my pace as I walked. At one point, I actually had to stop under a tree and hold onto the trunk as I was being fucked, out here in the open with people walking by. I looked around but it didn't seem like anyone was watching me. The torture on my nipples was driving me insane as the phallus pumped inside me, almost angrily. Harder and faster while the wet tongues attacked my clitoris. I was so close. So close. And then it stopped. I took a few breaths and kept walking. As I took a step, the clitoral stimulators rubbed against my clitoris and I came. As it hit me, I turned around to hold onto the tree for support. I stood there clutching the tree as wave after wave crashed over me. It was so delicious. I knew if someone was watching me, they would come up to me, ask me if I was allright. But I didn't care. I had figured out a way to trick the monitor. I had four more orgasms walking to class that day, although it took me an hour to get there.\n\nWeekly Exam #1\n\nFinally on day 7, I knew I had to go back. I wasn't able to achieve any more orgasms that week. It was almost as if the sensors had sensed that it had taken me too close and it was holding back on me. Thirty minutes before the appointment, I was to put on the monitor and wear it to the lab. I wasn't sure how I felt about going back. A part of me dreaded it, and another part of me was excited, curious about what might happen.\n\nI put on the monitor and it immediately sprang to life. I arrived at the lab in a state of high arousal. It had taken me almost to the edge, but not as intensely as the previous days. My orgasm wasn't imminent, but it was close. I entered the waiting room and was surprised to see a room full of girls. I sat down in one of the only empty chairs. I had more questionnaires to fill out. Did I achieve orgasm while wearing the monitor? Yes. Was I alone when I had an orgasm? No. Did you enjoy wearing the monitor? Hmm. That was a tough one. I decided to answer Yes. \n\nAs I was answering the questions, the vibrating started again. I sat there silently, as it became more and more intense. I heard moaning and looked up. A girl across from me was moving her hips back and forth in her chair. I realized she was having an orgasm. In front of all of us. A thrill went through me. When I had reached an orgasm in public, no one knew what was happening. But we all watched her, knowing what was happening to her. The vibrating on my clitoris intensified and a moan escaped my lips. I knew there were eyes on me. And then it stopped. I was relieved. Maybe it wouldn't happen to me.\n\n\"Number 320?\"\n\nThe girl who had just had an orgasm stood up and with shaky steps walked out. I looked back down at my questionnaire and tried to answer a few more questions when the sucking started at my nipples.\n\nOut of the corner of my eye, I saw the girl next to me grip her chair with her hands. She threw her head back and I knew. She was coming. She didn't cry out or moan, but her breathing came out in short little gasps.\n\n\"Number 321?\"\n\nNo one moved.\n\n\"Number 321?\"\n\nSlowly, the girl next to me got up and walked out. A few more girls walked in and sat down. I looked up and briefly caught the eye of the girl who had been wearing the tank top and we both looked away, embarrassed.\n\nThe tongues started lapping away at my clitoris as the pounding intensified. What number was I? I think I was 326.\n\nAnother girl cried out as she took in quick little breaths, clutching her clipboard to her chest. I couldn't help watching. I noticed we were all watching. It seemed to intensify the fucking I was receiving. I was getting closer. So much closer. I was taking little short breaths. Would this be it? Would this be the one? And then it stopped.\n\n\"Number 322?\"\n\nThree more girls had their orgasms and left. And three more times I was taken to the edge and left stranded.\n\nAnd then I knew, I was next.\n\nI waited for it to come. I wanted it. Yet, I dreaded it. The fucking started as a mechanical finger swirled around my g-spot. There were more mouths on my breasts and my clitoris. Sucking, pulling. Biting. I cried out. It was actually biting me now. I knew every eye was on me. It was getting faster. I gripped the chair, determined not to cry out or move my hips. Determined not to show them how good this felt. I knew they were all watching me. Their eyes were all intently looking at my face, waiting for the moment to come. Waiting for me to reach my peak. I tried to hold it off. I tried. But then it all came crashing down. I found myself moving with the waves. I heard myself crying out. For a moment I didn't care as the pleasure flowed over me like water. And then I came back to earth. I knew they were all watching me. I couldn't look up.\n\n\"Number 326?\"\n\nSlowly I got up and walked out. I was led to the examination room. I wasn't prepared for what I saw. There were around twenty doctors sitting around the exam table with their clipboards. Dr. Mattias asked me to disrobe in front of all of them. And I complied, turning my back to them. They asked me to take the monitor off and lay back on the table. I did, handing it to one of the assistants and she plugged in the data on a computer screen.\n\n\"She wore it for an average of 1.74 hours per day. She achieved 5 orgasms while wearing it. All on day 3.\"\n\n\"And how did you like it?\" Dr. Mattias asked me.\n\n\"Excuse me?\"\n\n\"You wrote down that you enjoy wearing it?\"\n\nI nodded.\n\n\"Can you tell us why?\"\n\nI blushed. \"It makes the orgasms more intense.\"\n\n\"Tell us how you achieved orgasm on day 3.\"\n\nI was mortified. Talking about this in front of all of them. \"I was walking.\"\n\nThe doctors all murmured and jotted down notes on their clipboards.\n\n\"Did the monitor let you achieve orgasm after that?\"\n\nI shook my head.\n\n\"The sensors recalibrated itself properly then.\"\n\n\"Were you in public when you achieved orgasm?\"\n\n\"Yes.\"\n\n\"Was it more exciting for you being in public?\"\n\n\"Yes,\" I whispered.\n\n\"Did it excite you seeing the other girls orgasm in the waiting room?\"\n\n\"Yes,\" I whispered.\n\n\"Do you like it when people watch you orgasm?\"\n\nI hesitated. I couldn't answer so I just nodded, lowering my head in shame.\n\n\"Okay, let's see how much your numbers have changed this past week.\" They strapped on the breast and clitoris stimulators and inserted the phallus as I looked up, I saw that they were all watching me, intensely. \n\n\"It'll be the same as before, except we'll need to gather 15 minutes of data.\"\n\nI wasn't sure I'd be able to handle 15 minutes. 10 minutes had been torturous. I was already sensitive from the orgasm I'd received in the lobby so I knew it wouldn't take me long.\n\n\"Subject is ready.\" The doctor nodded and counted down as they all waited quietly, waiting for me to put on a show.\n\nThe first one came quickly in short bursts.\n\n\"Subject has achieved orgasm number 1. Time 1:27.\"\n\nI tried to catch my breath as I waited for the next one.\n\n\"Subject has reached orgasm number 2. Time 2:15.\"\n\nThey came one on top of another. The sweet torture wouldn't end. It wouldn't stop. I opened my eyes and I saw all of them, they were all masturbating while I lay here. Their breasts were exposed, some of the women were kneeling in front of the men, their heads bobbing up and down, one women was completely naked, another woman suckling her breasts while a man had his head between her legs. A woman was bent over a chair as she was being fucked from behind. Their moans commingled with mine.\n\nFinally, it stopped and I was told to get dressed and go home until next week. I looked over and saw everyone was dressed, they were all jotting notes or talking quietly to their neighbor. I was going crazy, I thought. That's when I noticed the video camera. They were taping me. More people would be watching, witnessing my degradation.\n\nI couldn't get out of there fast enough. My legs felt weak and I was breathless. But now I knew I had to have more. I needed it. I was now addicted. "
    ],
    "authorname": "kianareeves",
    "tags": [
        "exhibitionism",
        "lesbian",
        "humiliation",
        "forced orgasms"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/female-sexual-response-subject-326"
}