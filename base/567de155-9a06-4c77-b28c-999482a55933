{
    "title": "Twin Cities Tryst Ch. 05",
    "pages": [
        "Disclaimer: Bork bork bork. I don't feel like writing out the full disclaimer. Anyone portrayed fucking or having sexy-time is 18 or older. There you go. \n\nChapter 4- Delicious Depravity \n\nFew things are as intoxicating as staring into the eyes of the person you love as you share a climax with them. This was my conclusion as I shivered and came deep inside Janie, my eyes locked with hers while she lay beneath me. Her pussy tightened wetly around my cock, receiving my offering greedily as I pumped my essence into her. Her fingers gripped my back, body stiffening and arching beneath mine in rapture. The sigh she let out was one of utter bliss, and her blue eyes were crystalline and shone with love. \n\nI relaxed on top of her, pressing my lips to hers and kissing her deeply. She moaned into my mouth, her legs still wrapped around my waist and keeping me inside her. Janie gently squeezed herself around me, reveling in what was essentially a new-found skill for her, massaging a cock with her innermost muscles. She loved how she could feel me pulsing inside her, and how her own heartbeat thumped in time with it. \n\n\"Mmmmmm,\" she purred through the kiss, finally smiling up at me. \"Love me?\" \n\n\"Yes.\" I replied, smiling and nodding. \n\n\"Marry me?\" \n\n\"No question.\" \n\n\"Always cum in me?\" \n\nBy way of response, I leaned up on my arms and pushed a little deeper inside her, making her shudder and groan. Her fingers dug into my back again and she exhaled and smiled wickedly. \"It's all mine, that cum. My greedy little pussy loves it.\" \n\n\"I'm happy to feed her all she can handle.\" I said, sliding in and out slowly, making her hum contentedly. We kissed again for some time, having just woken up some minutes before. Janie had immediately pulled me on top of her, letting me feel that her pussy was already sticky and waiting for me. Instantly hard, I simply slid inside her and we made love until we came together. \n\n\"I'm so in love with you,\" she sighed. \"Pity you can't have a cheat clause in a lesbian contract.\" \n\n\"You're rules, not mine,\" I chuckled. \"As a straight man, I'm allowed to fuck all the lesbians I want.\" \n\n\"Wow, same here,\" she giggled. \"Who knew?\" \n\nWe laughed and rolled around together on our giant, plush bed, caressing one another as we fucked slowly. We weren't trying to cum again, but simply craved the oneness our lovemaking entailed. I pushed back and forth inside her while she lay on top of me, loving the sensation of my cock passing in and out of her tight, slippery entrance. We could hear the sounds below, wet, sticky and utterly divine. \n\nShe smiled at me serenely. \"Troll Hannah time?\" \n\n\"When is it not?\" I replied cheerfully, handing Janie her cellphone while I took mine. We each took pictures and video, sending several clips on Snapchat to Hannah and Les, making sure that she knew she'd lost the bet. I sent a clip of Janie lying beneath, caressing and fondling her breasts me while I knelt between her legs, pushing my still-erect cock in and out of her. She took a video of me braced over her, panning down our bodies until she stopped on our hips, holding steady while recording my cock making a sawing motion as it plunged in and out of her. \n\nThen I recorded her sucking on my cock, holding it by the base while bobbing up and down, occasionally looking at the camera and winking. We had about four videos each that we sent off via Snapchat, laughing and eagerly awaiting Hannah's response. Within three minutes, I had a test message from her. \n\n\"You can fucking quit doing that any time now!\" \n\nAnd then a text from Les. \"Keep it up! This is fucking great! She has to swallow, so make sure you keep sending proof!\" \n\n\"She's not going to want you as a roomie when you get back, you're making her life a living Hell.\" Janie laughed. \n\n\"She'll survive,\" I replied, shrugging. \"She eats too many carbs and doesn't get enough protein anyway. And she'd miss the rent money too much in any event, I pay for a lot more than our agreement calls for. Besides, lots of people would be happy to have me as a roomie.\" \n\n\"I know,\" she said quietly, her eyes somewhat distant. \"I... I really wish I was able to be one of them.\" \n\nI nodded. \"We'd be perfect together in a lot of ways, too many, in fact. We'd fall desperately in love, for real, and that'd really complicate things.\" \n\n\"Not what I want to hear right now,\" she sighed. \"Let's just forget that little hiccup for the time being, shall we?\" \n\nI smiled and nodded. \"I'm having too good a time being madly in love with you to remember it, you have my word.\" \n\n\"The way it should be,\" she sighed contentedly. \"Jacuzzi, shower and breakfast?\" \n\n\"As my beloved wishes...\" I said, leaning down and kissing her again. \n\n*** \n\nWe walked had-in-hand down the street, basking in the warm morning sun. It was barely nine o'clock and we still had the whole day in front of us. We'd discussed options, such as calling the spa for a massage session in our room, visiting clubs we hadn't been to yet, maybe more hookah or finding places to misbehave in public. Janie giggled excitedly at the thought of the last prospect. \n\n\"I'm sure we could find a parkette or something to fuck in,\" she mused, swinging our hands back and forth as we walked. \"Ooh, how about the Lyndale Park Rose Gardens?\" \n\n\"I've heard of it,\" I replied. \"We could pack a picnic and spend the afternoon there, find a place to make love, if you're feeling adventurous.\" \n\n\"God, I'd love to be fucked by you surrounded by flowers,\" she breathed, squeezing my hand. \"They're already open, we could go before the crowds get there.\" \n\nWe were passing by a small artisan cheese and pastries shoppe, so I detoured us inside and we began looking for our picnic comestibles- cheeses, prosciutto, grapes, edible flowers and wine, they even had picnic blankets and baskets to choose from. I made the purchases and we started our sojourn to Lyndale Gardens. A bus trip took us to Lake Harriet, a very picturesque area beyond the downtown core of Minneapolis. Janie knew her way around, seemingly, so I simply followed, holding her hand. \n\nTwenty-five hectares of blossoming goodness awaited us. We strolled casually through the gardens, just content with one another's company. Our conversation was light and cheerful, of little substance, punctuated by confessions of love and the occasional kiss. We looked at the flowers and made our way across the grass to the shade of a tree, where we laid out the blanket and sat down. I brought out the wine and comestibles while Janie laid on her back and gazed up at the low-hanging boughs above. \n\n\"I'm so looking forward to this,\" she breathed, tracing a hand gently over her bust. \"We're gonna be so naughty and fuck in this public garden.\" \n\n\"Nope,\" I corrected, pouring wine into a small, plastic wine glass for her. She turned her head to look at me in confusion. \"We're going to make love in this public garden. I want this particular moment to be all about love.\" \n\n\"That sounds a million times better,\" she sighed, smiling at me warmly. \"Which is pretty hard to do, given how much I was looking forward to just fucking.\" \n\nI handed her the glass and we toasted to one another and drank. I refilled her glass and we drank again. We had plenty of time and two more bottles. The first one was polished off in short order. Janie giggled and laid back again, looking around.  \n\n\"We're good and concealed here,\" she mused. \"And it's still early, so it's unlikely anyone will see us. I'm not too interested in getting busted. Would kinda crimp the rest of our plans for the week.\" \n\n\"No argument there,\" I agreed. \"So, food before or after I ravish you?\" \n\n\"After,\" Janie answered readily. \"Only thing I want you to taste on my tongue is the wine.\" \n\n\"As my beloved wishes,\" I said as I laid on my side next to her. I drew her in by the waist and she melted into me, our mouths meeting for a deep, loving kiss. Indeed, I could taste the wine on her lips, her tongue and in her sweet breath. I fondled her gently and we moved against one another for several minutes, oblivious to anyone who might have walked by and perhaps seen us. \n\nBut she was right, it was early yet, and she seemed to think this part of the garden was private enough to warrant our activities and remained undisturbed. We'd barely seen anyone in the more common traffic areas as we came through. She broke the kiss and gazed into my eyes while caressing my cheek. \n\n\"So how daring are we feeling?\" she asked in a soft voice. \"Should we just make love, or do you want to lick me into a quivering mess and I'll suck you to the edge of reason before you get inside me?\" \n\n\"I'm good with the latter,\" I said, returning her caress. \"If you're feeling daring, then I say we go for it.\" \n\n\"Good thing I didn't wear any panties beneath this dress, then,\" she said slyly as she reached down and pulled the hem of her skirt up to reveal her smooth, beautiful pussy. Indeed, she had gone commando for our little expedition. \"I guess you can get us started?\" \n\nWithout another word, I nodded my head and slid down her body, kissing her exposed waist and belly before reaching her womanhood. She was trembling and trying not to moan as I kissed around her, teasing and watching her get wetter and wetter. Squirming, she reached down and pulled her lips wide, exposing herself to me. I took the hint and pressed my mouth against her mons in a deep kiss. She sighed as loudly as she dared, shuddering around me. My tongue snaked out and began massaging her clit and thick, slippery netherlips before pushing inside. \n\n\"God, Michael...\" she sighed in utter bliss, her legs writhing around me as I lay between them. \"You know how to make sure I'm totally in love with you...\" \n\nMy response was to slip a finger inside her and stroke her spot while my tongue slithered around her clit, making her shuddering and squirm even more. My finger pushed in and out slowly, feeling her squeeze me. My tongue delighted in the taste of Janie's arousal. She played with her breasts through her dress, squeezing them and massaging them in circles. \n\n\"Okay,\" she breathed finally, her voice thick with desire. \"Okay, we need to switch or I'm gonna screech and cum. Please, give me your dick...\" \n\nI pulled my mouth away from her pussy and moved around to her side so that my hips were in her face. She undid my belt and my pants, pulling them down and exposing my already hard cock. Janie wasted no time in taking hold of it and pushing her mouth down onto it, the shaft sliding down her throat. She almost choked at first, her lust getting the better of her, but she adjusted and calmed down, holding my hips as she bobbed back and forth slowly. \n\nMy face was still in front of her pussy and I caressed it gently, letting her concentrate on pleasuring me. I loved the wet heat of her mouth, feeling her tongue flutter against my hardness. She moaned around me, reveling in the feel of me inside her mouth, throbbing with desire for her. The fingers of her free hand flexed against my hip as she held herself to me. \n\nShe finally pulled her mouth off me and breathed heavily, her hand pumping along my shaft as she tried to control herself. \"Come and make love to me now,\" she breathed. \"Lie on top of me and make love to me, Michael.\" \n\n\"You want me on top?\" I asked as I pulled myself around and she turned onto her back, spreading her legs wantonly for me. \n\nShe nodded. \"I love the intimacy of it, how close I feel to you. That and I think it's the easiest way to keep a low profile, literally, from prying eyes.\" \n\nI nestled between her legs and she wiggled around a bit until the head of my cock pressed to her pussylips. She drew in a deep breath as I pushed inside her with one fluid motion and then bit her lip, her whole body trembling. I remained still once I was inside her, letting her adjust to the feel of me. Her eyes closed for several seconds and when she finally opened them, she smiled at me. \n\n\"Can you believe we're making love in public?\" she asked quietly, hooking her legs behind my thighs and beginning to undulate against me. \"Your cock is deep inside me and we're in public.\" \n\n\"I'm definitely in my happy place.\" I agreed, pushing in and out of her slowly, her fingers kneading my back. I kissed her and she moaned into my mouth, happy to be muffled so she could make some noise. Once again, we were lost in our own little world, oblivious to anyone who might have come by. I wouldn't have noticed until I got tasered. \n\n\"Mmmmm, I love you so much,\" she whispered, looking into my eyes. \"I never want this moment to end.\" \n\n\"Me either,\" I breathed, loving the wet, slippery vise of her pussy around me. \"Only better moment will be when I cum in you. That perfect moment.\" \n\nWe kissed again, moving slowly against one another, determined to take our time despite the danger of being discovered. To be honest, other people were the furthest thing from my mind at that moment. My hands were hooked under her shoulders as I fucked her. Still looking into my eyes, Janie pulled down one corner of the top of her dress, exposing a milky-white breast expectantly. I latched onto it with my tongue, swirling it around the nipple and the moaned in delight. I bit gently and she shuddered and gasped. \n\n\"God, you're gonna make me cum so hard...\" she murmured as she writhed beneath me. \"You always make me cum so hard. I love you so much.\" \n\nI didn't respond, I just tugged up on the nipple gently, making her whimper. I released it, letting her breast snap and jiggle back into place and eliciting another gasp. She wrapped her legs around me tight in response, drawing me in still deeper and keeping me there while she rocked beneath me. She was squeezing around me, delighting in her newfound ability to drive me wild. \n\nHer pussy was getting wetter and wetter, the noises we were making together sloppy and audible to us both. Her skin was warm, now a flushed pink colour and sweat was damp on her brow. She was shivering as she breathed, trying not to pant. My own body was heating up as I pushed myself inside her, knowing that we were both coming close to the point of no return. \n\n\"Wanna draw it out or shall we cum?\" I asked quietly, looking directly into her eyes. She shook her head and squeezed me tight. \n\n\"Just cum in me,\" she sighed, pushing her hips up. \"It's time to cum together, Michael...\" \n\nI nodded and kept thrusting inside her, still rhythmically, but stronger, deeper and with purpose. We were both panting now, determined to share that moment of utter rapture. Her fingernails were digging into my back as she crushed herself to me, gyrating her hips for all she was worth. Her teeth clenched as she fought back the wail of pleasure she wanted to let out. \n\nI arched my back and grunted as the dam burst. My hips juddered and she grappled onto me, muttering obscenely under her breath, willing herself not to scream. Her pussy gripped me savagely as I came, pumping deep into her gooey chamber. We kissed fiercely, tongues plunging as our hips thrust in desperation. \n\nWe collapsed together, chests heaving, sweat covering us now. My cock throbbed inside her and I could feel her pulsing around me. My heart pounded in my chest, tingling pleasure still blossoming through my core. Janie was holding onto my tightly, her face buried in my shoulder. She was trembling and I thought she was almost whimpering, although why I couldn't say. \n\nWhen she finally looked at me, her eyes were glistening. A single tear was running down her cheek as she smiled at me. \n\n\"Don't worry,\" she said in a tiny voice. \"Tears of joy, I promise you. I just love the feel of your cum in me, you know?\" \n\n\"I'm quite partial to it myself,\" I said before kissing her again. A long, rapturous kiss where we both lost track of time. We finally ended the kiss and I smiled and rubbed my nose against hers in gentle circles. \"That and I'm so in love with you.\" \n\n\"Feeling's mutual,\" she sighed gently. \"Giving you up, letting you go home, gonna be one of the hardest things I've ever done.\" \n\n\"Yeah, I'm gonna hate leaving,\" I agreed. \"But let's not think about that for now, okay?\" \n\n\"Okay,\" she said readily, nodding. \"How about letting me suck your dick again so I can taste our cum all mingled together?\" \n\nI nodded and slowly pulled out of her, making us both moan and shiver. I rolled onto my back and she snuggled down onto my thigh, her head over my cock. She took gentle hold of my sticky shaft, glistening with our mixed essence. She giggled at the sight of my cockhead, still oozing cum. She slid her tongue along the top of it, humming as she tasted us. Then she put the head between her lips and pushed down my length, taking me inside her mouth again. \n\nHeaven. It's true, she wasn't the most skilled oral lover I'd ever had, but she was my Janie and it thrilled me beyond words to feel her sucking my cock, licking our cum off my warm skin. I was still hard and showed no signs of this situation changing as she continued. \n\n\"Mmmm, we taste so good together,\" she moaned around me. \"I love the taste of my own cum, but with yours, it's incredible.\" \n\nI let her bob up and down slowly, just contenting herself with her work. There could've been a cop and a minister standing right next to me and I wouldn't have cared, as long as they let her finish the job. \n\nEventually she did and she crawled up my body slowly and snuggled into me, sighing in contentment. She rubbed her cheek against my chest, her eyes closed. I put my arms on her and just held her to me. It was almost dizzying to think that this was still the beginning of our day. How would we top this? Then again, if anyone could, it was Janie and myself. \n\n\"Guess we'd better cover up and have some of this food we brought, hm?\" she murmured finally. She pulled up my pants and fastened my belt before smoothing out her skirt and pulling some panties and a light pad out of the little purse she was carrying. \n\n\"Probably not a good idea to walk around with your cum trickling down my leg, is it?\" she quipped, winking at me. \"Although I probably wouldn't mind, since it marks me as yours. And speaking of that, Michael...\" \n\nShe moved in close to me, her lips inches from mine. \n\n\"I would love it if you'd leave some sort of mark on me,\" she whispered, secret and loving words meant only for me. \"I know it won't last forever, but to have that mark for just a little while, to be yours...\" \n\nI nodded and told her we'd take care of that. Before she could say anything, I gently pushed her onto her back and moved on top of her to pin her down. She seemed confused at first, going so far as to part her legs, as if expecting me to fuck her again. But then she shuddered and went ridgid as I pushed my head in and bit her neck, taking the skin between my teeth and clamping down. She let out a series of short gasps, trembling and with her eyes wide as she stared at the tree above us. \n\nI held her firmly, gradually increasing the pressure of my bite. She swallowed and almost whimpered, but put her arms around my back, keeping me close. Pinned beneath me, there was little she could do except wait for me to finish claiming her. Her fingers were gripping my skin as she held on. \n\nI finally released my skin from between my teeth and she almost melted in relief, but was still trembling. There were tears in the corner of her eyes as she smiled at me. \n\n\"Must be the good pain I hear girls talk about occasionally,\" she said softly. She sat up and took out her phone, turning on the camera so she could see what I'd done. There was indeed a sizeable ring of bruised teeth marks on her neck and it wouldn't go anywhere any time soon. She sniffled and wiped at her eyes before looking at me and smiling. \"I love it. You marked me as yours.\" \n\nI shrugged and smiled. \"Well, it was that or pee on you.\" ",
        "She rolled her eyes and shook her head in amusement. \"Maybe back at the hotel, killer. Let's eat while enjoy the sting of this mark.\" \n\nAnother bottle of wine, along with cheese, prosciutto, grapes and small bits of bread followed. Soon the food was gone and we had to wash it all down with the third bottle of wine. We'd been taking random pictures and videos the entire trip, not just to troll Hannah with, but also for memories. We filmed ourselves whispering words of love to one another, lips barely touching as we spoke. Janie was good and buzzed by the time we finished the food and wine, so we laid down for a while longer, just cuddling and kissing gently. \n\n\"God, I am so in love with you,\" she sighed, stroking a finger over my chest. \"I'd almost giving up my having no kids rule if it meant I could marry you and be yours forever.\" \n\nI smiled and held her close. \"I know, I'm totally in love with you too. It's either a good thing or a bad thing that we have a few key differences that would ultimately make us incompatible.\" \n\n\"Hmmm,\" she mused, still snuggling me. \"Like me being a lesbian?\" \n\n\"No, that works in our favour,\" I replied. \"You love girls and would happily share them with me and I'd share them with you. You're insistent I've got the only dick you're interested in, so that's a plus for me.\" \n\n\"Good to know I'm doing my part.\" Janie giggled. \"So what are the hurdles?\" \n\n\"Well, you don't want kids, no matter how much you love me,\" I said. \"It wouldn't be fair to make you unhappy. And I've always wanted a family. I was meant to be a dad, then a granddad and a patriarch of a large clan.\" \n\n\"Yeah, you really are,\" she agreed. \"What else?\" \n\n\"Well, in spite of my capacity for sin, I'm actually a very devout Anglican and you're an atheist,\" I continued. \"I'd want to raise a family of faith and butting heads with you seems awkward.\" \n\n\"Hm, true,\" she admitted. \"Any other reasons?\" \n\n\"I'm Canadian and you're a Yank,\" I pointed out. \"I'm not gonna be down here forever and it would be selfish to ask you to leave everything behind and come live with me back home.\" \n\n\"Oh, I think I'd manage,\" she cooed, lifting her head and looking into my eyes while she booped my nose. \"It's my understanding that Toronto's gay population is as large as San Fran's and LA's, so I'd have a tribe to back me up while I was married to you.\" \n\nWe kissed some more and she smiled at me lop-sidedly. \"I'm kinda blitzed, we'd better let me walk this off. Shall we pack up? If we stay put much longer, I'm gonna want to fuck again.\" \n\n\"I already want to,\" I chuckled. \"But we shouldn't press our luck, not here in the same location. We'll find somewhere else to get our naughty on.\" \n\nWe straightened ourselves out, packed up the picnic kit and began walking, hand-in-hand, of course, through the various gardens. I took endless numbers of pictures of my beautiful friend surrounded by flowers or sitting on the ornate stone fountain. And of course, various naughty pictures to send to Hannah, like Janie lifting the hem of her skirt to expose her panties or flashing her breasts. \n\nNot surprisingly, we were both horny again before long and looking for somewhere to fuck. We snuck into the women's washrooms and occupied a stall. Janie removed her panties and sat down while I stood in front of her and let her suck my cock until I was rock hard again. Then we switched positions so I was sitting on the seat and Janie was in my lap, her arms around my shoulders and looking into my eyes as she sank down onto me, humming in pleasure. \n\nWe kissed and fondled one another while she squirmed on my lap. I massaged and pulled on her ass cheeks, making her moan as I stretched her. But then someone came into the bathroom and we froze. Whoever she was, she went into the stall next to us to do her business. We sat perfectly still at first, and I could feel Janie's heart thundering against me. The woman began to pee loudly and was humming some song to herself. Figuring we had enough ambient noise to cover us, Janie resumed moving up and down on my lap, taking my cock deep inside herself. \n\nWe were doing fine for several seconds, but then Janie pushed down a little too hard and she sucked in her breath and moaned. It was perfectly obvious what kind of a moan it was, and the woman in the next stall giggled. \n\n\"Well, somebody's enjoying themselves...\" she quipped, continuing to pee. \n\n\"Nnnn, sorry about that,\" Janie breathed, continuing to undulate on me. \"When you get the itch, sometimes you have to scratch.\" \n\n\"I guess that's true,\" the woman said, finally finishing peeing. But then she didn't get up or finish, she seemed to just sit there. Was she listening to us? Then there was some rustling and we heard some quiet breathing. Janie and I looked at one another and then she began moving up and down again. Then the woman let out sort of a low, breathy sigh. \n\nDamn, she was masturbating alongside us, because she thought Janie was. \n\nI ignored her and went back to fucking my lover, making sure that she was thoroughly distracted. Janie sighed again, pressing her breasts against my chest. I could feel her squeezing my cock as she rode, her fingers flexing on my shoulders. She was breathing through her nose to try and keep from moaning, but it was still fairly obvious what she was doing at this point. \n\nThe woman in the next stall moaned again and we heard her shift around some more, probably getting more comfortable. She let out an \"Uh!\" sound as she pleasured herself. The walls of these cubicles were low, so we couldn't see her, but the shadow she cast indicated she was moving around slightly. \n\n\"Nnnn, that's good,\" she murmured, possibly to herself but also possibly to Janie. \"Isn't it, dearie?\" \n\n\"Uh-huh,\" Janie panted, moving up and down, trembling now, her ass flexing at the top of her movement. \"Really good...\" \n\n\"Hope you don't mind me cumming, you just got me in the mood to take care of myself.\" \n\n\"s'fine,\" Janie managed to say, pressing her forehead to mine. \"Jus' doing my thing...\" \n\nJanie and I fucked while the woman in the next stall became louder. No idea how old she was, based on her voice, but calling someone 'dearie' meant she was probably middle-aged. Janie's wet pussy was now making audible squishing and sucking noises as it greedily swallowed my cock. I was pretty certain that the woman could hear them, unless she was deaf. Her own noises became louder, which seemed to be turning Janie on. She gripped me tighter and rode up and down harder. Her panting was becoming moaning and she wasn't trying to stop it anymore. \n\n\"Yes,\" she gasped, arching her back as she pressed down on me. \"Ohhhh, yesyesyes, fuck!\" \n\n\"It's gonna be a good one for me too, dear,\" moaned our next-door stall mate. \"It's gonna be very good...\" \n\nI could feel that wonderful tingle building inside me and Janie and I were staring into one another's eyes, our tongues sliding out of our mouths to tangle together as we drew closer to orgasm. Next to us, the unseen woman was letting out little, rapid pants as she frigged herself. It wouldn't be long before she busted too. \n\nJanie pushed down as hard as she could and flexed her ass, gripping me tight while she squeaked. The pressure sent me over the edge and I began to cum, doing everything I could to stay silent while she writhed on me, providing cover noise and moaning as loud as she dared while she came. Next to us, the woman let out a long sigh and we could hear her shoes sliding across the floor as her legs stretched out. Rapid skin-on-wet-skin noises came from her stall. She was cumming now too. \n\nMy lover finally relaxed, settling down onto and breathing slowly and deeply. We could hear the same noises from the next stall, our unseen partner recovering. Janie kissed me quietly and lovingly, caressing me as she enjoyed the feel of my cum deep inside her. \n\n\"Well now, that was certainly an unexpected treat,\" sighed the woman. \"Guess I should thank you for a really good idea...\" \n\nSeconds later, we saw a delicate hand, sticky and glistening, reach under the wall of our stall. \n\n\"Anonymous bliss sisters?\" she asked. \n\nJanie looked down at the proffered hand, considering it for a moment. She then slowly lifted herself off my cock and reached a hand down, cupping her gooey pussy with it. She squirmed and flexed for several seconds while smirking at me, then settled back onto my lap and leaned down to the side, clasping the woman's hand in hers. \n\n\"Bliss sisters...\" she replied. \n\nThe woman squeezed her sticky, cum-filled hand for several seconds before withdrawing hers back into her own stall. There was a distinct pause, with no noise at all as she realized Janie's hand had guy cum on it. Then she was standing up and putting her clothes back on hurriedly before dashing out of the stall. We heard the faucets run, hands being washed frantically and then her shoes click-clacked out of the washroom in a rush. \n\nJanie giggled and pressed her forehead to mine again. \"Am I a bad person?\" she asked. \n\n\"I don't think so,\" I replied, kissing her nose. \"Totally something I would have done.\" \n\n\"So then I'm just impressionable young girl and you're a bad influence,\" she concluded, squirming her pussy against my softening cock. \"I might've known.\" \n\n\"Sure, blame the Canadian,\" I sighed, trying to sound put upon. \"I love you anyway, squirt.\" \n\n\"Mmmmm, I love you too, you dirty old man...\" she whispered as she kissed me. We switched spots so she could pee again before cleaning one another up and then exiting the washroom. No one seemed to be waiting to arrest us, which was a plus in my books. We walked around the various gardens, content to be together and discussing our plans for the rest of the day. \n\n\"If you don't mind, I'd really love to see if that dancer Annie is around for some fun,\" she mused. \"Later tonight. And I'd love to get another massage, even if it doesn't lead to sex again.\" \n\n\"I'd be down with that,\" I said agreeably. \"Shall we return to our digs? Pretty sure our handler is missing us by now.\" \n\nShe giggled and nodded, so we made our way back through the gardens at a casual stroll and caught the bus back into the downtown core. We were soon at our hotel and kissing one another as we rode up in the elevator. The door opened and Erika was standing there staring at us. \n\n\"Oh, well, now,\" she said, smirking. \"I thought you two must have been up to no good somewhere out there when I knocked on your door and got no response. I hope you don't mind, I dropped off three more bottles of bubbly and a big jar of pickle brine in your room. And I must say, you keep it remarkably well, for such a den of iniquity.\" \n\n\"Can't freak out the locals,\" I replied, grinning and pinching Janie's butt, making her jump and squeak. \"But thank you for the champagne, we'll no doubt put it to good use.\" \n\n\"Big plans for the rest of your day?\" she asked as she walked us back to our room. \n\n\"Hopefully,\" Janie replied as we went inside. \"We're gonna try and get a massage here in our rooms and then we're gonna have some fun with a girl we met last night at a club.\" \n\n\"Land sakes,\" she said, leaning back against the desk and fanning herself. \"You two are certainly making the most of your time here. The last time we had this much depravity in the hotel, I think Poison was staying here.\" \n\n\"Poison?\" Janie queried, thinking. \"Isn't that some sort of dinosaur 80's hair band?\" \n\nErika looked at me and I shrugged. \"I'm just fucking her, I'm not here to culture her.\" \n\n\"Says the man who loves the Bay City Rollers.\" Janie almost sneered, making Erika giggle. \n\n\"I suppose I'd best make my exit, before I'm exposed to further proclivities,\" she announced, heading for the door. \"Have a lovely afternoon and evening, you two, and call me if you need me.\" \n\nAlone again, Janie and I stripped and collapsed in the bed, kissing one another deeply and hungrily. We almost ended up fucking again, but managed somehow to refrain, remembering that we wanted massages. Janie called over to the spa to ask if Grace and Lyndsey were available for a room visit. Informed that they were, Janie arranged for them to visit in one hour. She hung up the phone and rolled onto her back, stretching and sighing. \n\n\"Mmmmm, this is gonna be so much fun,\" she purred as I caressed her body gently. \"If it's okay with Grace and Lyndsey, we'll have to send pics of them with us to Hannah, just to make her extra bonkers.\" \n\n\"I love your evil little mind.\" I said as I pulled her to me and kissed her. \n\n*** \n\nWe mostly just rested until we heard a knock at the door, with Lyndsey announcing it was her and Grace. Not bothering to get dressed, Janie trotted up to the door and opened it, allowing the girls in. They both giggled upon seeing her naked and she led them into our room, both carrying some bags with their massage essentials in them. I stood and said hello, giving Grace a hug, since we had already been on biblical terms. Lyndsey hugged me too, but only after staring at my cock for a few seconds. \n\n\"So, we got told you were interested in some massages,\" Grace began as she pulled some oils and small towels out of her satchel. \"What did you two have in mind?\" \n\nJanie looked at me and I smiled at them. \"Massages, definitely, and of course, you'll be paid for your time and services. If you're both amenable to other activities, certainly Janie and I would enjoy it.\" \n\nThe two girls looked at one another and then smiled at us. \"We've booked for an hour, so even if we can't full-on party with you like we did yesterday, we'll still make sure you really enjoy your massages, okay?\" \n\nJanie and I both nodded and they led us to the bed, which was certainly big enough for my lover and I to lie side-by-side and still have room for our guests to work on us. Janie and I laid on our stomachs while Lyndsey and Grace stood on either side of the bed, pulling off their clothes. They were soon naked and mounted us, sitting on our behinds. \n\nI relaxed as Grace began rubbing oil into my back, slowly and firmly. Next to me, I heard Janie moan as Lyndsey did the same to her. I most track of time, simply melting into a puddle while the Asian girl massaged me sensually. She often leaned down and used her breasts to caress me, from my neck all the way down to my lower back. It felt heavenly. \n\nLazily, I opened one eye and looked over at Janie, who was almost comatose as Lyndsey used her breasts on her client, mirroring what Grace was doing to me. Grace then turned around and parted my legs, sitting over my upper back and massaging my ass before slowly trailing down my body. Lyndsey did the same to Janie, but I heard Janie moan as Lyndsey gently caressed and massaged her puckered knot and her pussy from above. \n\nAs Grace moved down my legs, she squirmed herself over my ass and was soon sitting on my upper thighs, her pussy pressed against my hamstrings. She bent my knees and massaged my shins and calves, squirming her breasts around them, even as she kissed at my ankles and heels. She'd given me a good case of temporal distortion, because after what felt only like minutes, it was time for me to turn over. I did as requested, noticing Janie do the same. Grace settled back down onto my quadriceps, just below my swollen cock. She smiled at me while she slathered more oil onto her hands and then proceeded to massage it into me. She covered my shoulders and torso before massaging my abdomen and then cupped my member in both hands, giving it long, slow strokes until I was hard. \n\nI tilted my head to see Janie trying not to squirm and writhe beneath Lyndsey's touch, the brunette squeezing and massaging my partner's breasts while kneeling over her pussy. Then my attention was brought back to Grace, who was sitting on my shins as she massaged my quads, occasionally reaching up and stroking my cock. My hand found Janie's and clasped it. She squeezed back, moaning in pleasure. \n\nGrace smiled wickedly at me and slithered forward, until her wet pussy was right at my erect cock. She pressed her lips against it before reaching down and taking firm hold. She teased it up and down her slippery netherlips, against her clit and then pressing it flat against my belly. She squirmed her lips along its length, sighing as she rested her palms on my chest. \n\nJanie shuddered and moaned loudly as Lyndsey's fingers worked themselves inside her, exploring her tight, wet tunnel. My lover squirmed her hips and panted, her eyes closed. Grace, meanwhile, had moved down my body again and I could feel her hot breath on my cock. I closed my eyes and savoured the feeling of her warm, wet mouth taking in my pulsing head and then slowly sliding down my shaft. \n\nGrace skillfully sucked on my cock while Lyndsey fingered Janie's pussy and kissed her clit. We kept hold of one another's hands, caressing and massaging fingers as pleasure flooded through us. Janie's hips were already churning and I could tell she wasn't going to last much longer. Grace was bobbing up and down steadily, looking up at me while she did so. Her tiny hand followed her mouth up and down my length. My heels hooked into her flanks and she went faster, knowing she had me close to the edge. \n\nJanie cried out and pressed her pussy desperately against Lyndsey's fingers and face, cumming hard. I groaned and pushed my hips up while Grace sank her mouth down, swallowing my pumping cum. Janie turned her upper body to me and I did the same. We kissed one another deeply as the girls made us cum, our tongues wrestling between our mouths. \n\nEven after our bodies relaxed, we kept kissing. I could still feel Grace's mouth around me, but then she pulled it off slowly. Lyndsey gently leaned across Janie's body and wrapped her lips around the head of my cock while Grace held the throbbing shaft, tasting my cum. Still, Janie and I were kissing ardently. \n\n\"Mmmm, you two have it real bad for one another, don't you?\" Grace asked, smiling slyly and making Janie laugh and end the kiss to nod. \n\n\"Yeah, you might say that,\" she murmured. \"Guess it's kinda obvious, hm?\" \n\n\"Have to be blind not to see it,\" Grace agreed, toying my cock against her pussy again before sliding off me. Janie and I broke our kiss and slowly sat up, rotating our necks and smiling at our guests. \"How are you two feeling now?\" \n\n\"Utter bliss,\" Janie purred, caressing her breasts and smiling. \"A girl could get used to that kind of pampering, believe me.\" \n\n\"Special customers like you deserve pampering,\" Lyndsey said sweetly, caressing Janie's leg. \"Always a pleasure to work on people who genuinely appreciate it.\" \n\n\"No argument from me.\" I said as I slipped off the bed, excusing myself for a moment. Grace and Lyndsey were now kneeling on either side of Janie, gently fondling and caressing her in my absence. Upon my well-timed return from the other room, the two girls were slipping back into their clothes, leaving Janie lying on the bed, looking very relaxed and content. \n\n\"So I've added the massage charges to our hotel room bill, but this is for you two, as a thank-you.\" I said quietly as I took them hands and passed them each a hundred-dollar bill. Jane blushed and Lyndsey slightly raised an eyebrow and I smiled to assure them. \"Believe me, you'd have received a big tip even if we'd stuck to straight-up massage. I just want you to know how much we appreciate your personal attention.\" \n\nThat put their minds at ease and they both hugged me and gave me a kiss on the cheek before I walked them to the door and let them out. Once they were gone, I returned to the bed and crawled down next to Janie, who snuggled into me. \n\n\"I'm so glad you took my hand when you did,\" she murmured. \"I'm not sure, but I might've gotten a little jealous of Grace if you hadn't.\" \n\n\"Holding your hand was what I wanted to do right then,\" I said easily, kissing her forehead. \"Yes, Grace was sucking my cock, but she's a means to an end, one I was sharing with you. Holding your hand and kissing you was the most natural thing in the world.\" ",
        "\"God, I love you,\" she breathed, pressing herself to me, like pieces of a puzzle melding together. \"I so desperately want to be married to you.\" \n\nWe kissed, caressed and fondled each other for some time, before finally agreeing to shower and use the jacuzzi. We managed to keep our hands mostly off one another in the shower, but Janie was firmly planted in my lap by the time we were in the tub together. Each of us had an open bottle of champagne and was drinking it directly, no thought given to the propriety of glasses. Given how much champagne we were going through, who had time for them? \n\n\"Mmmm, remember when you scared the bejeezus out of me by sticking the up of the champagne bottle up my cunt?\" she breathed as she squirmed on my lap and before taking another swig from her bottle. We had six more back in the living room and another two beside us. Janie giggled as I began recording myself pouring champagne over her tits and letting it trickle down her body. She shuddered as I slid my tongue along her skin and over her nipples to clean it up. \n\n\"Gnnn, we are so decadent...\" she moaned, clasping my head while I sucked on her nipple. \"Can't begin to imagine who we'd have to be in order to prove more depraved than this.\" \n\n\"Just wait until Annie the stripper joins us tonight,\" I said before biting her nipple and making her shudder. \"Pretty sure that'll kick our rating up a notch.\" \n\n\"Ooh, that's right, I'd better message her,\" Janie cooed, putting down her bottle and reaching for her phone. She began texting someone while I continued to lick and suck champagne off her skin. A few minutes later, her phone buzzed and Janie beamed happily at the content of the message. \n\n\"She said she can join us after she finishes her homework,\" she giggled excitedly. \"We're baaaad.\" \n\n\"Given that I'm more than twice her age, yeah, probably,\" I agreed, not caring one whit about age disparity. \"I guess we should eat and rest for when she gets here, we've both cum a few times today. And while that means it'll be easy to last longer, it'd be nice to be able to cum if she's amenable to it.\" \n\n\"I imagine she will be, daddy,\" Janie quipped, winking at me. \"We'll show her the time of her life.\" \n\n\"That's my baby girl.\" I said as I pulled her in for a kiss. \n\n*** \n\nA nearby burger joint provided supper and we stopped in at Sex World again, greeted by one of the attendees who remembered us from our previous visit. Still convinced we were father and daughter, he asked how he could help us. Janie made a show of blushing and said we were having a dancer come to our hotel room to play and she wanted to find a good strap-on to fuck her with. The guy's eyes almost rolled into his head and he finally called over a female attendant to help us, rather than go himself. Once Janie had iterated her desire, the girl led us over to the section in question. \n\n\"Damn, daddy,\" she said, squeezing my arm as she perused the selection. \"Which one do you think Annie'll like?\" \n\n\"She looks like a tough girl, kitten,\" I said plainly. \"So maybe you should go big or go home.\" \n\nThe largest one was a titan monstrosity called 'The Destroyer', and while my cock is an impressive size by any standard, it was a stunted sapling compared to this thing. It was easily fifteen inches long and stupidly wide, it reminded me of a fire hydrant fixed to a harness. \n\n\"That might be a little much.\" Janie said, grimacing. \n\n\"Yeah, probably,\" our guide agreed. \"You see that sort of thing in gonzo porn, but the people who usually buy it are pregnant women who are close to thirty-nine weeks and use it to gauge their vaginal opening and hopefully make the birth a little easier.\" \n\n\"Well, we're not trying to knock her up, either,\" Janie mused. \"Let's see what else...\" \n\nShe finally decided on one, flesh-coloured and veined, of appreciable length and girth, and just short of being completely hard. She also picked up a double dildo, which she seemed thrilled by. Some small bottles of massage oil made their way into the basket and finally we were done. We made our purchases and then made our way back to the hotel, where we began the preparations for our guest. \n\n\"You just relax, I'll make sure the drinks are ready,\" I said as I made her sit in the comfortable lounge chair and watch. She was wearing a plush robe, with only a lacey bra and skimpy lace panties beneath. She squirmed about while she watched, clearly impatient. \"A little excited, are we?\" I teased. \n\n\"Yeah, and it's another ninety minutes before she gets here.\" Janie almost whined. \"I may explode before then.\" \n\n\"Tell you what,\" I said, turning away from the liquor supply. \"Get naked and go stand against the glass in the window. I'm gonna get between your legs and lick you until you cum. Sound good?\" \n\n\"Stand in the window?\" she almost exclaimed, but still standing up and beginning to undo her robe all the same. \"What if someone sees me?\" \n\n\"We're at least seventeen floors up,\" I pointed out. \"Unlikely, even from the stadium nearby. And we were fucking in the gardens earlier, weren't we? Minor miracle we didn't get busted there.\" \n\n\"Okay, perfectly true,\" she agreed, shedding her robe and underthings, now completely naked. She strode over to the window and clambered up into it, standing unashamedly above the city in the altogether. She bent forward, resting her hands on the window, her ass now exquisitely displayed to me. \"So, you're gonna feast on my pussy til I cum in the window?\" \n\n\"That's the plan.\" I said, moving in and sitting on the window sill now, beneath her with her shapely legs on either side of me. I tilted my head up and slid my tongue along her wet slit, making Janie sigh and shiver. She leaned forward against the window, oblivious now to anyone who might be watching below. \n\n\"Ohhh, Jesus, that's good,\" she whispered, squirming her hips over me and bending her knees slightly to settle onto my face. I held onto her thighs gently to give her a little support and continued lapping at her slowly, taking my time and letting her warm up. \"You know how to get me going, Michael.\" \n\n\"I would hope so by now,\" I mumbled into her slick womanhood. \"Been at this pretty much constantly for five days now.\" \n\n\"Gnnnnn, time definitely not wasted,\" she breathed, shuddering as I pushed my tongue inside her. One hand rested on the window while the other now clasped the back of my head, steadying me. I swirled my tongue around inside her, making letters and odd patterns and causing her to gasp. \"Make me cum so I can be patient for our playmate to get here.\" \n\nI happily obliged. I would have loved to be able to see if anyone was looking up and seeing the hot blonde standing naked in a window all those stories up, but I was rather busy bringing her to orgasm. I paused, though, remembering something. Janie protested with a whine as I pulled away, but I quickly returned with my phone, setting it to record us and holding it close for a wonderful gonzo shot of me licking her pink pussy. She whimpered and moaned above me, her fingers clenching in my hair. I occasionally panned the camera up her body, getting a good video of her reactions to my licking. \n\n\"I need to fuck, Michael,\" she gasped. \"Gnnnnn, I wanna fuck so much!\" \n\nI didn't want to be in her just yet, since I was trying to conserve my strength for the depravity to come, but I had an idea. I slid out from beneath her again and retrieved an empty champagne bottle from the table. Before she knew what I was up to, I had teased her pussylips open with it and began sliding it inside her. \n\n\"Oh, God,\" she groaned, shuddering as she was penetrated. \"It feels... are you using a champagne bottle?\" \n\nI smiled evilly as I kept recording, showing her pussy swallowing it up to where the thick neck glass flared out to the body. \"Were you expecting one of your new toys? I thought we'd save those to be christened when Annie gets here.\" \n\n\"Whatever, just fuck me...\" she panted, sinking down to her knees before turning around to sit on the window sill and leaning back against the reinforced glass. \"Ohhhhh, fuckfuckfuck...\" \n\nI sat beside her and slid the bottleneck in and out of her slit, which was blooming open in her need. Janie panted and squirmed her hips, her eyes closed and body covered in sweat. I was slow and deliberate in my fucking of her, drawing it out to make sure she wouldn't exhaust herself. We'd shower right after to get the sweat off us and be fresh for our playdate. \n\nJanie's hands joined mine on the body of the champagne bottle and before long I let go, allowing her to take over fucking herself while I moved around her, filming this exquisite display from every angle. She moaned in shameless pleasure while pushing the green-tinted neck in and out, the glass glistening with her desire. \n\nI could tell she was really getting into it, because both her hands were now gripping the bottom of the bottle and shoving it into her while her hips squirmed and pumped. She was panting loudly and her whole body trembled while her head flopped from side to side. \n\nAnd then she came, pushing forward with her hips and arching her back. It was a long, needful push where she let out an extended groan as she orgasmed before flopping down in the window, seeming almost boneless. If it weren't for the rise and fall of her chest, I'd almost think she'd expired. \n\nHer hands fell away from the bottle and her legs were splayed wide. The green bottle tilted down and started to slip out of her, but I caught it before it hit the carpeted floor. I set it aside and kept filming her, laying still, her head slumped down and her eyes closed as if she was asleep. Her chest rose and fell slowly, her lips moving ever so slightly. I panned my camera down to her gooey pussy and used a finger to caress it gently, delighting in seeing a sticky, resinous strand of her cum pull away with it. I put the finger to her lips and she kissed it before sucking on it gently. \n\nFinally, her eyes opened and she smiled at me. \"Get that all on video?\" \n\nI nodded. \n\n\"God, if anyone ever hacks our phones, we'll be all over the net in no time,\" she sighed, slowly sitting up and stretching. \"But, God, did I need that. I guess you should take me to the shower, since I'm such a sweaty, dirty girl now.\" \n\nAnd that's what I did, lifting her and bringing her to our shower, where I cleaned her off thoroughly, taking time to kiss and hug her and tell her how much I loved her. We had half an hour before our guest arrived, so I made sure everything was ready while Janie lounged on our bed, giggling and musing about what we'd do with Annie. \n\nTwenty minutes later, her phone bipped and she squeaked excitedly to tell me that Annie was almost here. I thought it best we go down to the lobby to meet her, so Janie slipped on her plush robe and some slippers, making sure that it was obvious she was naked underneath and showing just enough cleavage to let Annie know she was expected. I slipped on my robe and we went downstairs. The concierge didn't even blink at seeing us wandering about in robes, so I'm assuming this was a normal event for them. \n\nAnnie came through the sliding doors, her red hair hanging down her back and her green eyes glinting with amusement upon seeing us. She was dressed reasonably conservatively, wearing jeans and a t-shirt, along with sandals. She had a backpack over her shoulder. Janie skipped up and hugged her before they stared for a moment into one another's eyes and then shared a kiss. It didn't last too long, since we were in the hotel lobby, but long enough to make them both shiver. Janie then brought her new plaything back to me and I hugged her as well, noticing that she pushed her crotch into mine as I did so. \n\n\"No underwear on either of you,\" she said quietly, smirking. \"Love it. Tonight's gonna be so amazing.\" \n\nWe led her back to the elevator and got inside, one girl standing on either side of me. But then they melted into one another while pressing against me, kissing and feeling one another up. Clearly there was no need to ease into this and get to know one another. I could see their tongues tangling between them and it really turned me on. One of Janie's hands brought Annie's down and they both groped my cock as they kissed all the way up to our floor. They'd barely finished by the time the door opened. \n\n\"Ooh, twentieth floor, swank,\" the redhead mused as we got out. \"You two don't hold back, do you?\" \n\n\"Nothing but the best for my little girl,\" I said, pulling Janie to me and kissing the top of her head and making her giggle. \"She deserves it.\" \n\n\"Such a good daddy,\" our guest said as I opened the door to our suite and allowed the girls to walk in, hand-in-hand. \"Make yourself comfy, my dear.\" \n\n\"No problem,\" Annie remarked, looking around, noticing the jacuzzi inside out bathroom and the oversized shower stall. \"Dayum, we really are gonna need all night, it's a good thing I don't work tomorrow.\" \n\nShe turned to smile at us as well stood in the main room by the bed now. \"So, having said that, lemme just get a few things out of the way, okay?\" \n\nJanie nodded. \n\n\"Good,\" Annie said. \"First, you're decent folk, I can tell. So I don't need to ask you not to kill me and eat me. Not the flesh off my bones, anyway.\" \n\n\"Thank God, because I'm looking forward to eating you.\" Janie stated, making Annie smirk. \n\n\"Second, I know a lot of people think that because I'm a dancer that I'm also a hooker, and yes, I've done a few things for money on rare occasions, but not tonight- you two really turned me on and I'm here to fuck. I want us to party and fuck until we can't fuck anymore. I'll dance and we can do just about anything, which brings me to my third point... no lasting marks, okay? I can see the mark on your daughter's neck and while it really turns me on, I can't dance with one. Red marks and maybe some scratches, bite marks on my titties that fade, fine. But nothing I have to explain to management, okay?\" \n\nJanie nodded and Annie slung her backpack off her shoulder. \"Okay, everyone 'fess up- any STD's? Because that's a deal-breaker.\" \n\n\"Nope.\" I replied while Janie shook her head. \n\n\"Good, I brought condoms, but I prefer not to use them if I don't have to,\" Annie said. \"They get in the way of a good time, y'know? And yes, I'm on a birth-control shot, so you don't need to worry there.\" \n\n\"Good, I love letting daddy cum in me and it's awkward if someone else needs a condom during sex,\" Janie purred, coming over to Annie and caressing her shoulders. \"We're going to fuck and fuck and fuck.\" \n\n\"That sounds so good.\" Annie breathed, dropping her backpack and allowing Janie to pull her into her arms and begin kissing again. I smiled and went to make some drinks while the girls made out, moaning into one another's mouths. I returned with two champagne flutes, each with a shot of absinthe and topped with champagne. Annie took it and smelled it. \n\n\"God, that smells amazing, but strong,\" she mused as she examined the contents of her glass. \"What is it?\" \n\n\"Death In The Afternoon,\" I replied, getting my glass. \"Absinthe and champagne, a drink invented by Earnest Hemmingway.\" \n\n\"Ugh, that shiticker,\" our guest muttered. \"I just had to read The Sun Also Rises in my senior lit class this semester. Dreary shit, hope the drink is happier than he was.\" \n\nJanie giggled and threaded her arm around Annie's. They then tilted their glasses and drank down the libation while I drained mine. Annie finished hers and wheezed. \"Fuck...\" she rasped. \"I'll have another, but much more an' it'll knock me on my ass. I'll be out cold and then you'll be stuck raping me.\" \n\n\"That sounds kinky.\" Janie giggled. \n\n\"Eh, not the first time,\" Annie said, shrugging. \"And you can't rape the willing.\" \n\n\"Mmmm, do you have your outfit with you?\" Janie asked, slipping off her robe to reveal her naked glory. Annie looked at her longingly and nodded. \"Good, I'll put mine on too and we can do a show for daddy, okay?\" \n\n\"That sounds fucking amazing,\" Annie remarked. \"Let's change in the bathroom and then we'll make him wild.\" \n\nJanie giddily gathered up her outfit and then went into the bathroom with Annie. They left the door open so that I knew they weren't staring without me. I poured some more drinks for us and sat in the plush, comfy chair, waiting. \n\n\"Daddy?\" Janie called out from the bathroom. \"Find some stripper music?\" \n\n\"Current stripper music or real stripper music?\" I called back. I heard Janie sigh and Annie snicker. \n\n\"Real stripper music is good, daddy!\" the redhead called out. \"We'll let you know when.\" \n\nMaybe two minutes later, I heard Annie call out that they were ready. I hit play on my phone, which began blaring the song 'Girls Girls Girls' by Motley Crue. They shimmied out of the bathroom, hand-in-hand, both wearing abbreviated schoolgirl outfits, with Annie's being red and Janie's blue. Annie's eyes glinted with amusement while Janie's shone with excitement. \n\nThey stood in front of me and ground and gyrated together, sometimes hiking up the back of their tiny, pleated skirts and squirming their ass cheeks together. They both wore the white blouses, knotted at their midriffs and with the buttons undone above that, revealing the plaid bras that matched their skirts. They'd turn around and press their boobs together, smirking at me while they did it. \n\nThe song ended and then 'Cherry Pie' by Warrant came on. Annie really got into this song, gyrating salaciously and groping Janie constantly. My lover returned the favour and before long, they had lost their blouses and bras. Now they were squirming their tits together slowly as they swayed to the music before Annie knelt and stripped off Janie's white thong from beneath her skirt. She put it between her teeth and leaned it to give it to me. I took it with my teeth while Janie leaned behind her playmate and pulled her black thong off. I would feel Janie's wet arousal on her thong, smell it and even taste it as it pressed to my tongue. \n\nThey were back-to-back in front of my chair, holding hands and squirming their asses together slowly while looking at me. I could tell Janie was in absolute heaven. I know she loved me and loved fucking me, but she was in her element now, because she really was a lesbian. I was just the guy she would make an exception for. \n\nAnnie looked at my lap and smirked. \"Wouldn't do to get that pretty robe all messy, would it?\" she purred as she led Janie over and they both knelt in front of me. Janie undid my robe while Annie slid it off. I allowed them to pull me forward slightly and then remove the robe, which Annie tossed aside with a sassy wink before starring at my lap. \n\n\"I'd say he's enjoying himself,\" she giggled, looking at my hard-on. \"Daddy's little girl should get the first taste.\" \n\nJanie nodded and leaned in to kiss my cock gently, holding it by the base and then pressing her lips up and down its length. Annie leaned in to watch, her hand caressing Janie's ass and occasionally massaging her wet slit, making my lover moan. Finally, she pushed her mouth down onto my member, taking in what she could and then bobbing up and down slowly. The redhead watched with a wicked smile, her hand caressing my thigh. \n\nJanie pulled up finally and smiled at Annie, still holding the base of my cock. The redhead moved in and snickered as Janie teased her by bopping her in the face with my dick. Then she slid her tongue up and down my shaft, before kissing the head while Janie held me still. She slipped her lips over my pulsing cockhead and then swirled her tongue around it, humming as she did so. \n\nJanie's eyes widened in awe and delight as Annie slowly pushed her mouth down on my cock, until her lips touched Janie's hand and my root. She was younger than Janie, seven or eight years so, but she sucked cock like she'd been doing it her whole life. And maybe she had, who was I to judge? I sure wasn't complaining and whoever taught her deserved a thank-you card at the very least. ",
        "Annie began moving slowly up and down, my shaft glistening with the wetness of her mouth. Her tongue massaged the throbbing vein on the underside of my cock as she sucked on me. Janie watched in rapt fascination. Janie had removed her hand and was now the one caressing Annie's ass under her short red skirt. \n\nI watched the scene below me in utter delight, making sure I didn't allow myself over the edge to cum. That was definitely not in the plan yet. Annie pulled her mouth off of me and gently guided Janie's head in. They both slid their tongues up my shaft, making me moan, their tongues meeting and tangling around my cockhead. I gently placed my hands on the back of their heads, letting them know how much I was enjoying this. \n\n\"You get to fuck daddy first, since you're our plaything tonight,\" Janie breathed as she stopped to kiss Annie, her blue eyes glinting with lust. \"But I'm willing to bet he wants to see us go down on one another first, right daddy?\" \n\nI nodded and she giggled with excitement as she took Annie by the hand and led her over to the bed. I moved the chair closer, to the edge of the bed and watched as they fell into a tangle, kissing one another and groping feverishly. They were still wearing their skirts and long white socks but that was it. Their breasts squashed together while they swallowed one another's tongues greedily. I casually stroked my raging erection while I watched them. \n\nAnnie was on top and slowly made her was down Janie's body, stopping to kiss, lick and suck on her tits. Janie squirmed and groaned, her fingers tangling in the redhead's hair. Annie bit and tugged on one of her nipples, making Janie gasp and whimper. She dancer gave me a sidelong look at winked while she continued gently biting the pink bud. Before Janie exploded, Annie released the nipple and started kissing her way down, over Janie's undulating belly and finally arriving at her skirt. She lifted it and we both gazed at Janie's glistening pussy in desire. A couple of teasing kisses were all she could manage before she pressed her mouth against the slick mound and snaked her tongue inside, causing Janie to groan loudly and shamelessly. \n\nI watched as the redhead tongue-fucked Janie, who wrapped her legs around Annie's shoulders, writhing and shivering, her breath coming in pants. \n\n\"Gnnnnnn, her tongue's so deep in me, daddy...\" Janie keened, her back arching. Annie kept up her relentless assault, her lips pressed so hard to Janie's pussy that I could see none of her tongue. She moved her head side-to-side slowly and hummed, almost sending Janie into convulsions. My beautiful girl shuddered and made several incoherent noises before cumming, loudly and profusely. No doubt she could be heard in the hall, but none of us cared. \n\nAnnie finally pulled her face away, panting heavily, her eyes glazed. Her face was glistening with Janie's cum as she tried to catch her breath. Janie finally stopped writhing and lay still, her lovely breasts heaving up and down as she basked in the glow of her orgasm. Finally, she opened her eyes, smiling. Annie sidled forward until her hips were over Janie's, their skirts concealing their wet pussies from view. She reached forward and gently squeezed Janie's breasts. \n\n\"My turn to taste you...\" my lover said softly. \n\nAnnie nodded and moved Janie around so that her head was near the edge of the bed and facing me. Annie now wiggled her way up Janie's body, pausing over her tits. She lifted her skirt and squirmed her sticky pussy against them, shivering as Janie's hard nipples brushed her clit. Finally, she moved forward, her slippery snatch now mere inches over Janie's mouth. She giggled as she teased Janie, moving her pussy away as Janie craned her head up to lap at it. Janie's fingers were flexing and squeezing Annie's thighs and she almost whined, wanting desperately to taste the redhead. \n\nAnnie settled down onto her lover's face finally, sighing in pleasure as Janie buried her tongue inside her womanhood. This was something I knew Janie was a Jedi at and before long, she had Annie writhing and whimpering, struggling to keep the hem of her skirt up so I could see. She almost doubled over as Janie lashed her pussy mercilessly. Both their bodies were shining with sweat from their erotic exertions. \n\nShe came hard and she came loud, dropping the hem of her skirt and using both hands to crush Janie's face into her pussy while she bucked madly. Her tits jiggled about and tears were almost streaming from her eyes. Then her breath caught in her throat and she reared backward, her spine arched while her eyes goggled up at the ceiling. \n\nAnnie collapsed off to the side, almost curled up into a ball, shaking like a leaf while she held her pussy. Janie was staring blankly at the ceiling, her face glazed with Annie's cum. I watched with a smirk of amusement, since neither seemed able to move. \n\n\"Darn, did I miss out?\" I asked casually. \n\n\"No, no...\" Annie said wearily, still curled up in a ball. \"Just... gimme a sec here. Nobody's ever got me off quite that hard before by sucking my cunt.\" \n\nSlowly, they both pushed themselves up to a sitting position, still breathing heavily. Then, as if by instinct, they both moved forward into one another, scissoring their legs and pulling one another close, breasts squashed together as they wrapped their arms around one another and kissed, slowly and sensually. I knew their pussies were pressed together, even if I couldn't see it because of the skirts. \n\n\"Mmmmm,\" Janie mumbled through the kiss before smiling wickedly at Annie. \"Let's girl-fuck for daddy, he loves it and it makes him wild.\" \n\nAnnie nodded and leaned back on her hands while Janie did the same. They kept looking into one another's eyes as they began to squirm their hips together, the wonderful sight once against teasingly hidden from view. But they could both feel it, clearly, because they moaned in pleasure. \n\n\"Gnnnnn, I love this,\" Janie murmured as she undulated her hips, her long blonde hair flowing behind her. \"I love fucking girls, but I love it when daddy watches and then fucks me after too.\" \n\n\"It's really hot...\" Annie agreed, her pale skin pink with desire. \"Can't wait for him... to fuck us together...\" \n\nThey pushed against one another harder, still leaning back on their hands. They were both panting as they fucked, a glorious sight to watch. I swear, even a gay man would have been turned on by this. \n\n\"Lean forward, daddy,\" Janie breathed, looking at me while she churned her hips. \"We can lift our skirts and show you.\" \n\nClose as I was to the bed, all I had to do was indeed lean forward and was in an almost perfect view to look down between them. Trembling hands reached down and pulled the hems up to sit back on their lower stomachs and I was rewarded with an exquisite view- their smooth pussies squirmed together wetly, lips slithering and mingling, and clits kissing. Both girls gasped and moaned, while my cock grew harder than ever. \n\nThe sounds. The sounds of pussies fucking one another is the most intoxicating thing on the planet to me. The wet, slippery squishing sounds, like nothing else anywhere. And in the background, the panting and moaning of girls in heat. Truly pervert heaven for me. I could listen to those sounds for hours on a loop. \n\nJanie leaned in and pulled Annie to her and they kissed feverishly, arms wrapped around one another for support while their hips ground together. I couldn't see their pussies, but watching them kiss was incredible- they barely knew each other but were so into one another. I'm glad Janie made her exception for me, but watching her in her natural element, being her true self, was truly a gift. \n\nThey broke the kiss, panting as they pressed their foreheads together, eyes locked. Tits squished as they squirmed and writhed, glistening with sweat. \n\n\"Daddy's turn,\" Janie breathed. \"I hope you like getting fucked senseless.\" \n\nAnnie nodded, biting her lip. \"I'm so looking forward to this.\" \n\nThey managed to disentangle from one another and they slid off the bed to stand on either side of me. Janie put a hand on my shoulder to indicate I should stay put while Annie moved to straddle me. I took her gently by the waist while Janie knelt down and put her hand around my cock. She guided Annie down until my throbbing head was touching her dripping slit. The redhead shuddered as Janie teased my head along her lips for several seconds before she started to sink down. \n\nI split her lips and then penetrated, making her groan. She was a petite girl compared to Janie, and she shuddered as gravity took over. My cock pushed up inside her steadily and her slender frame shook. Annie whimpered but kept going, loving every second of it. \n\n\"Oh, fuck!\" she sighed as she bottomed out on me, her pussylips now against the base of my manhood. \"Fuck, that's so good...\" \n\n\"Mmmm,\" Janie murmured, leaning in to kiss and nibble on Annie's ass cheek. \"It gets better, you'll love it.\" \n\n\"Gonna fucking die,\" the dancer wheezed as she began pushing up and down slowly, her arms around my neck. \"Gnnnnn, fuck!\" \n\n\"Is she tight, daddy?\" Janie purred, looking up at me and winking. \"Did we pick a good one?\" \n\n\"A great one, babygirl,\" I moaned, reveling in how tight Annie was. She'd doubtless had cocks in her before, but she was no slouch and squeezed me expertly with each stroke. \"I can't wait to fuck her with you.\" \n\n\"Gnnnnn, oh Jesus,\" rasped Annie, her eyes fluttering open. \"You're both gonna fuck me? That really will kill me. Oh, God, yessssss...\" \n\nJanie smirked evilly and came up to kiss Annie, gripping her red hair and pulling on it to crane her neck back while she did. Annie shuddered and whimpered helplessly, pinned as she was on my cock. Kissing Janie, her fucking motion became a squirming, grinding one on my lap, still flexing her pussy muscles around me. \n\nJanie moved back to the bed and pulled out the strap-on she'd bought earlier from the bag she'd placed beside our bed. She put it on deftly, clearly something she'd done before, and smeared lube all over it before turning to face us, kneeling with her hands on her hips. \n\n\"So, Annie, how do you want this?\" asked, her voice sassy. \"Do you want me in your ass and my daddy still in your cunt or maybe switch it up?\" \n\n\"Gnnnnnn, unfair question at the moment!\" the young redhead said in a ragged voice as she churned on me. \"I can't fucking think!\" \n\n\"Lie down, babygirl,\" I said to Janie, deciding to take charge of this little affair. \"I'll lay her down on you and once you're inside, I'll get back in her again.\" \n\n\"Uh-huh!\" Annie agreed, nodding hastily. \n\nJanie nodded and laid on her back. Keeping hold of the slight redhead, I slowly stood, taking her with me, my hands on her ass cheeks. She sank father than ever down onto me and groaned so loudly I was certain people on other floors could hear her. Certainly they would in the hallways outside our door. I moved her onto the bed and pulled out of her, making her hiss as her pussy closed. I made her kneel on all fours over Janie while facing down her body, pushing my cock through her lips and into her mouth. She moaned and sucked hungrily, like my member was the last thing she'd ever have in her mouth in this lifetime. Janie, meanwhile, caressed her ass and smeared lube all over her puckered little knot, gently easing one, then two fingers into the redhead's ass, prepping her and making her groan around my cock. \n\nAnnie was shaking in need by the time Janie and I moved her over the strap-on, facing down Janie's body. Janie found the mark and gently pushed inside, to the sound of a 'pop' and Annie gasping. She sank down slowly, letting out a guttural sound as Janie took her ass. Once she was fully in, we allowed the redhead to adjust, almost wheezing from the fullness in her behind. \n\n\"Fuck, I'm so glad I don't work tomorrow,\" she mewled, her eyes closed and a tear running down her cheek. \"This'd be such a great way to die.\" \n\nShe managed to control herself and began moving up and down slowly on Janie, sighing in pleasure. Janie smiled and caressed her pert ass cheeks and lower back, while Annie fondled her breasts, pinching and pulling on her nipples. \n\n\"Mmmmmm, and we still need to get your daddy in here,\" she purred, opening her eyes and smiling at me wickedly. \"Got another open slot in the playground, you know.\" \n\nJanie nodded and reached up to gently ease Annie down onto her. The redhead was now facing up, but her knees were still bent under her, as if she was kneeling. She was gasping as her ass tightened around Janie's strap-on, which was deep inside her now. Without missing a beat, I clambered onto the bed and moved over the two girls. \n\nAnnie's eyes were wide as I slid my cockhead up and down her slit before pushing inside her pussy in one long, deliberate stroke. She drew in a deep, ragged breath at the penetration, completely pinned and helpless between Janie and myself. I smiled down at her evilly, loving the feel of her pussy at this angle and in this position. Annie seemed totally paralysed, unable to do anything. I could barely hear her breathing now. \n\nJanie took hold of her hips and began pushing up and down slowly. Annie shuddered, her eyes still wide. \n\n\"I can feel you moving inside her.\" I said as I began fucking the redhead again. Her fingers gripped my arms tightly and the look in her eyes was either unreal pleasure or the fear of being ripped apart from the inside. \n\nAnnie eventually composed herself and began breathing, heavily but steadily. She tilted her head forward and looked into my eyes, her own glazed with lust. Her forehead pressed to mine as she clenched her teeth and tried to squirm, still nailed to us both. Damn, this girl could fuck. \n\nThe three of us undulated and moved rhythmically together. Annie's breasts pressed to my chest as I leaned over her. Her fingernails were digging into the side of my biceps as she hissed, doing her best to squeeze me. She had to feel like a ripe fruit that was about to break open. \n\n\"Your daddy's cock is throbbing in me,\" she panted, her face shining from her exertions. \"He's gonna cum in me.\" \n\n\"Uhhhhhhn,\" Jane moaned, reaching up and groping Annie's breasts from below. \"I can't wait to lick and suck his cum out of you...\" \n\nI was indeed feeling that wonderful, liquid heat building inside me. Janie and I felt no need to prolong this fucking, since we had Annie in what must have been an excruciating position, even if she was lost in pleasure as well. I intended to make her cum, and cum hard. After that, I would cum inside her, as we'd all agreed. \n\nJanie and Annie were both breathing heavily now. The strap-on Janie had bought for herself had a clit stimulator on it, and apparently it was having the desired effect, because she was also flushed pink and trembling, which meant she was going to cum, as I now knew well. \n\nAnnie keened and seized up, straining between us. Her pussy clenched me furiously and with a wail of unreal delight she began to cum. I pushed myself deeper inside her and held myself in place, feeling her squeeze around me. Then I slid back and forth rapidly, shuddering as my cum started to pump deep in her. Her neck arched and it was only an act of iron will that she didn't screech in response. Janie shook and sighed below her seconds later, indicating that she was cumming as well. \n\nOnce my cum has stopped flowing so freely, I pushed myself up to a kneeling position between their spread legs, looking down at my cock, still buried in the redhead. It looked like it was about to split her wide open and glistened with her wetness. I slowly withdrew from her, making her shudder, taking a moment to tap the head of my still-oozing member against her clit, eliciting another whimper. \n\n\"Easy now,\" I said in a gentle voice as I took hold of her lip form and eased her up into a kneeling position over Janie, to whom she was still pinned, the strap-on deep inside her ass. \"I'm going to slowly pull you forward so that Janie can get out of your ass, okay?\" \n\nAnnie nodded, trying to steady her breathing and putting her arms around my shoulders to hold onto me. Janie remained motionless as I pulled on our lover slowly, sliding the fake cock out of her tight ass. \n\n\"You should see it,\" Janie breathed gazing in wonder. \"The dildo is pulling on her ass, like it doesn't want to let go.\" \n\n\"Gnnnn, I don't want it to...\" Annie murmured, tightening her grip on me. She yelped as the rubbery cock popped out of her and sagged against me as if she had no bones in her body. Janie moved backward and began quietly removed the strap-on while I gently laid Annie down. Then we moved around her body so that I was near her head and Janie was by her legs. \n\nI knelt by her head, pushing my glistening cock to her lips and she moaned quietly and took me into her mouth, sucking slowly and swirling her tongue around, tasting our mingled cum. Janie, meanwhile, coaxed her weary legs open and moved in to kiss her pussy, sliding her tongue inside to taste us, as she'd stated earlier. She hummed in pleasure, looking up at me and smiling. \n\n\"Mmmm, you taste good together,\" she purred. \"I wanna go pussy-to-pussy with her again so daddy's cum gets inside me from hers.\" \n\nAlmost in a daze, Annie nodded her assent, but I wasn't exactly sure if she was non-compos mentis at this point. It didn't really matter, since everything we did was pretty much a given. I pulled out of her mouth and we eased her up once again, keeping her kneeling while Janie squirmed in down below, scissoring their legs. Annie sighed as she felt her pussy squash against Janie's. \n\n\"Now to just coax it out...\" Janie breathed, reaching down to spread her netherlips wide. I could see the tiny hole into her, black against the glistening reddish-pink around it. Annie reached down to do the same while I held her steady, using two fingers to spread her thick lips wide. Janie then used her free hand and worked two fingers gently into Annie, making her moan. She used the fingers like a scoop, pulling all the slimy cum she could find down out of Annie and dribbling it into her own pussy below. I watched in rapt fascination. \n\nJanie hummed in pleasure as she coaxed out of the cum and used her fingers to push it down inside herself. Annie watched, smiling tiredly. It wasn't long before Janie's little cum-mining endeavour ended and I laid Annie down on top of her. They wrapped their arms around one another and kissed deeply. Janie then surprised me by reaching over to take hold of my cock and pulling me over to them. I pressed it between their mouths and they kissed it and sucked on it together. By now, Annie was barely moving. \n\n\"You look pretty shagged, Annie,\" I mused. \"I hope we don't need to put you in a taxi like this.\" \n\nShe shook her head wearily. \"Unless you object, I'll stay here with you two for the night. We can do more when we all wake up?\" \n\n\"That sounds perfect,\" Janie purred. \"We've still got the shower and the jacuzzi to violate with you.\" \n\nAnnie moaned her agreement and we laid her aside on the bed, where she curled up and promptly fell asleep. Janie and I laid together, kissing, fondling and whispering to one another about how in love we were. She stroked my cock until he was hard enough to penetrate her and she sighed in pleasure as we were joined. \n\n\"God, I love you, Michael,\" she whispered, looking deep into my eyes while I pushed myself in and out of her. I was in no danger of cumming again, not yet, but I was more than willing to give her another climax. \"I'm so in love with you.\" \n\n\"I love you too, babygirl.\" I whispered back, kissing her. She shivered through a few small, gentle orgasms over the next couple of minutes, exactly what she wanted. She smirked at me wickedly. \n\n\"A few last pics and vids for Hannah?\" she asked. We took some videos of us kissing and me sliding my cock in and out of her gooey pussy and then we took some videos of Annie, sleeping buck naked next to us, her body on display. We figured she wouldn't mind. ",
        "\"Mmmmmm, making her pay is the icing on the cake for this week, you know?\" my lover said as she caressed my back while I resumed fucking her gently. \"I mean, it's wonderful beyond all belief as it is, but it's that little touch extra that makes it that much sweeter.\" \n\n\"That's the price you pay for not believing in us, I guess.\" I said gently as I lay beside her and looked deep into her eyes, while caressing her cheek. Janie's smile was getting lazier and more dreamy and finally she had drifted off into sleep. I lay silently for several minutes, thinking about how much I loved her and how rapidly this week was passing by. \n\nAnd how that didn't suit me one damn bit. \n\n*** \n\nAuthor's Notes: A sex-heavy chapter, even for TCT. If that's not your jam, you know where the metaphysical door is. Of all my stories, this one is probably the most about wall-to-wall sex, simply because that's really what the week had been about RL- endless amounts of depraved behaviour. I got laid like Mothra's egg and that's the way we liked it. \n\nWe're nearly done shooting season one of the show I'm working on, so once they go on hiatus before we began season two, I'm looking forward to plenty of time to write, both these stories here on Lit, my novels I am working on, and some non-erotic works I'm posting for fun elsewhere. Not much else to report, My Naughty Neighbour is up next- Lynn and I are back home, so the challenge will be finding ways to express how we've fallen in love without getting caught, right? \n\nKeep your stick on the ice! \n\nManagement"
    ],
    "authorname": "BiscuitHammer",
    "tags": [
        "romance",
        "public sex",
        "threesome",
        "lesbian",
        "humour",
        "toys"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/twin-cities-tryst-ch-05"
}