{
    "title": "Daniel Ch. 04: Proctor, Tattoos",
    "pages": [
        "Daniel Ch. 04: student, Proctor, tattoos\n\nDaniel's control, seduction skills claims a newbie.\n\nWARNING: This new story continues the series of a new character, Daniel. Here in involves scenes of graphic sex including reluctance, seduction, cunnilingus, anal and incest. If that is not what you are looking for don't read on. All sexual acts depicted in the story are committed by female adults over eighteen years old, no underage scenarios is intended nor implied.\n\nMy name is Daniel Johnson. I have my PhD in English Literature and have accepted a short term assignment at an extremely private female boarding school in New England. \n\nIn my previous story you can read were I fucked a girl on the train and a woman from the hotel bar. The girl turned out to be the Dean's over eighteen year old daughter and the woman turned out she was the Dean's wife. I fucked them both one night in my school quarters but was caught by that Dean. At his age he gave me permission to have sex with both his wife and daughter to ease demands on him. Situations changed and he offered me a full time assignment starting after New Years. \n\nI am teaching a generic course on the Gothic Period and an Independent Study for seniors. Both require the girls be eighteen or over. The Dean's daughter Penelope is now my cock slut and her four senior class coven members passed my sexual interview and are now in my Independent Study. All of these senior level girls are over eighteen, some in their twenties. Everywhere on their sweet young female bodies belongs to me. I am the 'evil Uncle' of those erotic Gothic novels. \n\nI had a quiet day but was subjected to special meal treatment by the senior Hospitality students as they practiced waitressing and serving and plating my breakfast and lunch. That Hospitality program was for seniors only requiring each girl to be over eighteen because of the safety requirements in the kitchens. The bold ones leaned in for their kiss as apparently I had started a trend and expectations. I saw there were some very shy seniors in the program so I wiggled my finger to call them in next to me. \n\nI chatted them up showing interest in their progress and their plans. Although they were all at least eighteen some shifted nervously from foot to foot as that rugged man spoke to them. Many of these girls had spent all four years at this private school and had very sheltered lives. Each one got a soft lingering kiss on their cheek and rushed off blushing and smiling happy that they got their reward from the 'Ruddy Chieftain' another nickname I'd been assigned by the upper class girls.\n\nA number of the Proctors were smiling as I gave attention to their wards. A few of the Proctors younger than I moved slowly towards me and struck up a conversation. They reminded me about the Faculty Winter Dance next week, Saturday, and asked if I was going. \n\n\"If I go I'd have to go stag. It just would not be fair to ask one of you fine ladies to the exclusion of another. So you all will just have to wait and see,\" I said smiling. \n\nFor the next Friday night class I printed off five excerpts from the erotic Gothic literature 'Fanny Hill' (1748) by John Cleland. When class started I checked with the five young women on their progress of the required essay for 'Frankenstein' by Mary Shelley. They all said they were really enjoying the novel especially since it was written by a woman. \n\nThe senior class women then took turns reading from 'Memoirs of a Woman of Pleasure', or as it is known as, 'Fanny Hill'. It is considered the first original English prose pornography, and the first pornography to use the form of the novel. It is one of the most prosecuted and banned book in history. Fanny describes her adventures which include a public orgy, an elaborately orchestrated bogus sale of her \"virginity\" and a sado-masochistic session involving mutual flagellation with birch-rods.\n\nI watched the girls sneak their hand under their school skirt and begin to play with their pussy. The air became heavy with the strong scent of female pussy causing my cock to harden. After the section of the novel describing the use of birch-rods I told Tsumugi to strip and lay her back on the now famous ottoman. I told her to make herself cum while we all watched.\n\nTsumugi stripped off her school uniform without hesitation. She is in her twenties and of that slight oriental build. She has small but pleasing breasts with dark aureoles and dark full nipples. Her pussy is covered in her dark black shiny hair and her mons hair was trimmed like an arrow pointing to her slit. She spread her legs wide and the coral gash of her pussy shone from her dripping pussy juices.\n\nWithout embarrassment she brought her hands to her wet pussy. Two slender fingers moved between her wet labia gathering her own moistness. They disappeared up her vagina. She moaned her enjoyment of filling her pussy. Her other hand pulled on her nipples then slowly worked down to her clit. Now the class watched as two fingers fucked her pussy and two fingers stroked her clit.\n\n\"Who wants to volunteer to suck those hard nipples?\" I asked. Betty and Aoife moved to either side of the ottoman and took a fat nipple and sucked them. Tsumugi growled and her fingers sped up. \"Veronica, would you like to suck a clit?\" I asked. \"Yes Sir, I'd like that a lot,\" she whispered as she moved between Tsumugi's wide open thighs.\n\n\"On your hands and knees Veronica. Penelope come here and help Veronica cum,\" I ordered as Master of these young women. Their future husbands and lovers would thank me if it was possible for that knowledge to ever come out.\n\nPenelope sat behind Veronica and slowly inserted two fingers into her pussy and started thrusting and rubbing her clit. Veronica started panting and pushing her ass back at Penelope's fingers. Veronica leaned forward and started kissing Tsumugi's pussy lips and licking wet fingers moving in and out of her pussy. Veronica latched onto Tsumugi's pea sized clit and sucked and licked. The other girls pulled on Tsumugi's nipples and sucked on the flesh of her tits.\n\nTsumugi's fingers moved rapidly in her pussy then she screamed out her orgasm. Her fingers were flying in and out of her pussy and female cum was spraying out from her splayed open pussy lips. Veronica was drinking that honey as fast as she could until she screamed off Penelope's pointed fingers. She screamed and her entire body thrashed on Tsumugi's groin as she was swept away by a powerful orgasm. She moaned and thrashed and soaked Penelope's hand and face with her own cum. \n\nPenelope pulled her fingers out of Veronica and offered them to me to clean. I sucked them clean and waited for Veronica and Tsumugi to calm down. I asked the girls to stay where they were sitting and helped Tsumugi to turn over onto her tummy. When she did I asked Betty and Aoife to sit in the front of the ottoman and hold Tsumugi arms forward.\n\nI had taken a walk into town and in the hardware store they had a fly swatter with a large leather pad. During the summer this area has large biting black flies so the store had a few large swatters still on the shelf. I now had one in my hand. \"Penelope and Veronica what is the full measure of the discipline?\" I asked in a commanding voice. \"Twelve lashes, Master,\" they answered. \"Count for poor Tsumugi.\"\n\nI had perfected the swing with the fly swatter so only the large pad made contact. I did not want the attached wooden rod to strike the soft ass flesh of my senior level students. So I swung the rod and the leather pad 'Smacked' on Tsumugi's ass making that 'crack' a whip makes. She screamed and the girls in unison spoke, \"One.\" \"Two\" fell on the other ass cheek turning that ass cheek red. The rectangle shape of the swatter covered most of her tiny ass. Tsumugi screamed over and over as the count went higher until she just moaned until her punishment was over. The floor besides my ottoman was soaked with Tsumugi's pussy juices.\n\n\"Ladies your ass will taste the flogger or the swatter before this Independent Study is complete. You will also be fucked with my fat cock and drink my copious thick cum. Now girls flip Tsumugi over again and pull her pussy lips open,\" I ordered and Betty and Aoife obeyed. Veronica took hold of my long cock and rubbed it up and down Tsumugi wet pussy lips.\n\nWhen Veronica thought my cock was sufficiently wet she placed it against the vestibule of Tsumugi's vagina. The girls pulled Tsumugi's legs up bending them onto her small tits. That opened wide that oriental pussy so Veronica pushed my cock forward and side to side until my cockhead breached Tsumugi's tight opening. Tsumugi sat up suddenly and looked crazy into my eyes. She humped her own pussy on my cock until the head and two inches was captured by her warm wet oven. She then fell back on the ottoman and cursed in Japanese.\n\nI pulled back to the crown of my cock and pushed three more inches into Tsumugi tight pussy. When I pulled back her external pussy lips rode out on my cock. When I reversed direction they followed my dick back in. I could see the hood of Tsumugi's clit rubbing that sensitive swollen pea.\n\nTsumugi sat up again and pulled my ass forward until my fat cockhead reached the full depth of her pussy. She moaned and fell back onto the cushion. I looked down at her and I could see the outline of my fat cock pushing up on her abdomen. I pulled back to my cockhead still in her vagina and the bulge diminished. I pushed back in and her abdomen rose again. Poor Tsumugi's abdomen was taking the brunt of my large long cock. I decided to go easy and give her a soft slow fuck.\n\nI started a slow rhythm pulling back to my fat cockhead and pushing in until my cockhead tapped her cervix. Each time I went deep I rubbed Tsumugi's clit bump. Her vagina would pulse on my cock. On their own Betty and Aoife started sucking on Tsumugi's nipples. They used their tight lips to pull out those hardened bumps.\n\nSoftly I heard Tsumugi murmur, \"Hayaku Susumimasu, Go Faster,\" so I went faster. My cock was too long to go balls deep into her tiny pussy so I held back about two inches. My cock was going faster and her pussy was getting wetter. My thumb moved across her clit faster and harder. She started breathing heavier so I picked up the pace of my thrusting and rubbing. Suddenly her vagina grabbed my cockshaft. \n\nShe screamed out, \"Oh fuck I'm cumming, I'm cumming, I'm cumming,\" then she trailed off again cursing in Japanese. Her frenzied shaking made my cock reach the tipping point. I was concerned in my lust I'd drive my cock balls deep so I pulled out. I stroked my cock and exploded all over her chest. I painted one tit with globs of white thick cum then aimed at the other coating her dark nipple.\n\nBetty and Aoife moved their lips over Tsumugi's protruding dark nipples and sucked up my hot thick cum. With a mouthful of my warm pudding they turned to Veronica and Penelope then started a daisy chain of kisses passing my cum around the circle. I moved around to Tsumugi face and laid my cock across her lips. Her tongue came out and licked along the underside of my cock.\n\nHer lips cleaned my cock of cum and pussy juices. She turned her head and let my cockhead enter her warm mouth. Her tongue washed my knob as she sucked out the last of my cum. The girls bent over and licked Tsumugi's tits and hard nipples getting the last of the white pudding. The kissing started again and tongues came out to softly lick their partner's cum covered lips. They just eased back and they all started laughing softly.\n\nAs if in a ritual each girl knelt down and licked Tsumugi pussy. She moaned each time a girl tongue ran up between her pussy lips and flicked her clit. I had a feeling they did that ritual each time the coven got together and a different girl was the main attraction.\n\nI again gave each of the girls a small glass of wine to rinse the taste of my sweet cum from their lovely mouths then kissed each of them deeply. I asked them politely to get dressed and walk together back to the dorm. I watched five young women redress fitting their breasts back into their bra and pulling up their panties to cover their sweet young pussy. It was both exciting and sad. They teased me and called me a perve as they pulled up their skirts to smooth their blouse and I starred at their now panty covered pussy.\n\nI laughed and I said I'd call the Proctor that they were on their way. Annie stayed on the line and asked me if I was free for dinner this night. Since it was Friday night I accepted. I knew what she really wanted and felt honored to pleasure as many women that took the effort to ask.\n\nOnce the girls left I called my daughters reminding them I'd be home for the Winter Holidays. I then showered off the scent of young pussy and dressed for my dinner invitation. I threw on my North Face Junction Insulated Jacket in Dark Gray as the weather had turned quite cold. I walked across campus to the apartments and knocked on Annie's door.\n\nShe opened the door and was dressed quite well. The warmth of her heat greeted me as well as the scent of dinner and Annie herself. She was older than I, perhaps about fifty or fifty five. Assessing her she had a matronly figure, large breasts, full waist and wide hips. Her blouse was shear and behind it was a blue bra made of shear lace. Her dark aureoles and nipples were quite visible as her chest rose and fell with her anticipated breathing. She finished off her outfit with a skirt the style of the school but in a solid dark blue. She had dark brown loafers on into which she wore white ankle socks with tiny red hearts.\n\nShe took my inspection with a wry smile then invited me in. She took my coat and hung it on the door. We made small talk until she directed me to sit at the table. She served quite a nice meal with a good wine and a smashing dessert. She served more of the wine which she drank most of as we stared at each other not speaking. She cleared away all of dinner then came and stood beside me. \n\nShe ran her hand through my long red hair and ended her warm hand against my neck and messaged it. She flinched slightly when I put my hand on her leg under her skirt. But she turned to face me and spread her legs wide. My hand crept slowly up her inner thigh until my fingers touched her moistness coming down. I slid further up her inner thigh riding her wetness. My fingers touched curls then found their way between her sodden nether lips. She had no panties on.\n\n\"Annie, I will not make love to you. You will strip for me then lay your naked mature breasts upon that table and push your ass back towards me. I will fuck you as you lie upon this very kitchen table. I will fill your mature cunt with my fat cock and fuck you until you cum all over your floor. Then holding back my cum I shall fill your ass with my long fat cock. I will fill your ass with my cock over and over until I shoot my thick white hot cum down into your ass. I shall then pull out and watch it drip out of your hole. You will suck my cock clean then I shall dress and walk out.\"\n\n\"Now if that is not what you are willing to accept remove my hand and I shall leave and we shall never speak of this again.\"\n\nWith my hand still within her pussy lips and my thumb rubbing her clit Annie began unbuttoning her blouse. One by one they became undone revealing her blue bra and dark nipples. She hissed when my thumb went hard across her swollen clit. She pulled the open blouse out of her skirt and dropped it on the kitchen floor. She reached behind her and undid the several clips of her bra and it also fell to the floor. Her mature fat breasts tumbled out and settled on her chest, mostly flat with very little slope. Her aureoles where large and her nipples dark and firm from her excitement. \n\nShe reached behind her and I heard the zipper go down and her skirt fell onto my arm. I pulled my fingers away from her pussy and lowered my arm and the skirt fell to the floor. Her pussy was covered by black and gray curly hair in a triangular mat that although looked washed had not been trimmed in some time. She closed her legs and stepped out of her skirt and kicked off her shoes keep her socks on. She bent over and settled her breasts on the table cloth. She looked at me then slowly closed her eyes.\n\n\"Do as you promised, Mr. Johnson. Take your own pleasure with this old body. If I ask you to stop or scream do not stop until you have ejaculated within me. I have been lonely for too long having lost my husband a few years ago. Without shame I will take what you do to me and try to experience my own pleasure. Now please start,\" Annie said begging in her voice.\n\n\"Come back here Annie and undress me. Unveil the long fat cock that will ravage you and leave you spent,\" I ordered her.\n\nAnnie stood and turned towards me. She went directly to my belt and zipper. She knelt and I could smell her strong scent emanating from her mature pussy. She had outer full pussy lips that hung down as she opened her thighs. She removed my shoes and lowered my pants and boxers and helped me out of them. My hard fat cock pointed directly at her lips. \n\n\"Do it Annie. Take my cock in your mouth and suck my fat cockhead. Suck out and taste my pre-cum. Get an idea of what will fill your ass.\"\n\nI watched as Annie opened her mouth and her lips slid down my cockhead stopping once she went past the crown. Her tongue circled my cockhead and settled on my cockknot. She licked that sensitive knot causing pre-cum to leak out onto her tongue. Her lips slid down my shaft until she gagged then she moved back to my head. She went down and up several times taking more cock each time then she took in a deep breath.\n\nHer wet lips slid down my cock until my mushroom reached the back of her mouth. She moved her mouth side to side as my cockhead breached her throat. My cockhead went into her throat as her lips slid down and kissed the base of my fat cock. She held my cock deep into her throat as her tongue licked the underside of my cockshaft. She sucked me tightly as she sucked up my shaft and popped off my cock. She looked up into my eyes and licked my cockhead gathering my leaking pre-cum.\n\n\"My husband was much older than I and loved when I sucked his cock. I loved doing it getting better and better as the years went on. I could take his cock fully down my throat and he loved giving me his dose down into my tummy. At the end he begged me to suck his cock knowing his heart was weak. We knew the doctors didn't give him much longer to live without a transplant.\"\n\n\"He told me that night that he was ready to die and wanted to pass having sex with the wife he had loved for all these years. He rode his cock filling my mouth. He moaned and pumped his cum across my tongue and down my throat. He died with his last thick pulse of cum filling my mouth. I did not weep for him for he died a happy man. I have been lonely ever since then.\" \n\n\"Now Daniel your cock is much bigger than my husband's was. But you can see I took all your cock down into my throat. I'd suck you off and drink your cum but I want you to fuck me, fuck me hard and deep. I wanna lie in bed tonight with my cunt and ass throbbing from a good fuck.\"\n\nShe then stood and returned to the kitchen table and bent over her mature hanger tits flattening against the cloth. She turned her face towards me with longing and desire in her eyes. I walked behind her and she reached back and pulled her floppy ass cheeks apart. \"Either hole first Daniel, I don't care. I just have to feel real flesh inside me once again.\"\n\nMy cockhead found its way through the gray and black forest hiding her moist grotto. It gathered her wetness from between her outer pussy lips. My cockhead moved within her moistness and the opening to her cave appeared. I pushed in easily and she swallowed my cockhead into her warm wet oven. Because of her age my cock slid easily down into her pussy until I pushed against her cervix. I pulled back wetting my cockshaft as I went and pushed back again against the bottom of her pussy.",
        "\"Oh fuck, Daniel my cunt is full of your cock. I feel so full. I can feel all your thick cock and your cockhead against my cervix. There is pain but there is overwhelming pleasure. Pleasure remembered and pleasure now felt. Fuck me Daniel. Fuck this old cunt. Fill it over and over again with your strong man-cock until I scream from the pleasure,\" Annie growled and pushed her ass backwards and moaned as my cock pushed hard against the bottom of her cunt.\n\nI pulled back then slapped my swinging balls against her thighs as I went back in deep. Annie let out a short squeal and quickly let out another as I went in deep again. She let go of her ass and reached under her muffin top to find her clit with her fingers. Her clit now rubbed across her palm as I drove her belly against the table filling her cunt. Her fingers rubbed each side of my cock as it slid deep over and over.\n\nAs best it could her pussy tightened on my cock and she began to breathe heavily. Her head came off the table and looked up. Her mouth was making the silent scream as her nether nerve endings exploded in pleasure. She grabbed a cloth napkin from the table and shoved it into her mouth. I heard her scream of release muffled by the napkin she was biting. My thighs got soaked by woman cum as she thrashed through a huge orgasm. Warm pussy juice sprayed straight down and soaked her floor.\n\nI did not ease up but pounded her cunt causing another powerful climax to follow the first. She screamed into that cloth again and her pussy sprayed me and the floor once more. I grabbed her flabby hips and pulled back and somehow all eight inch found purchase in her old warm and wet oven. Once I filled her cunt her entire body started shaking against me and on the table. It was as if a pussy dam broke as hot fragrant fluids poured out of her now making a big puddle on the floor.\n\nHer ass twerked against the base of my cock causing my cockhead to rub hard against her cervix. The base of my cock rubbed her clit causing shockwaves throughout her groin. She moaned and squealed into her napkin until I pulled out of her pussy. Her elasticity was gone and my fat cock left a big \"O\" at the doorway to her vagina. Her wet fat outer pussy lips were coated in her own cum.\n\nI took my soaked cock and placed its head against her anus. It wanted to deny me but again her age allowed my lubed cockhead to breach her analring. Like a butt-plug her assring gripped behind my corona allowing my entire cockhead into her dark tunnel. She moaned and a spray of pussy juice wet my heavy balls.\n\nI pushed forward and pulled back and soon my cock was buried in her ass. Annie pulled out the wet napkin. \"Oh fuck you Daniel. You'll ruin my ass for a week. I can feel it stretching to take all your fat cock. My rectum is opening to take all that cock. Let me fucking rest when it's all in!\" she moaned. With one small push my balls slapped her thighs and I was down deep.\n\nAnnie breathed deeply but it was she who started moving on my cock. She pushed me back to give her room then slowly fucked her ass on my cock. I pulled back a bit and soon she was riding a good six inches of my cock stopping at the swollen mushroom of my cockhead. \n\n\"Oh fuck Daniel this is so dirty and so nasty but I love your fat cock in my ass. You must tell your special students to be more quiet when they talk about your big cock fucking their pussy or being down their ass. I knew you would fuck my ass so I cleaned it extra special. Now fill it with your cum. I want it to leak out all night as I Iie in my lonely bed. Now fuck my ass!\" she growled holding the wet table napkin.\n\nI took the napkin from her and held it under my cock against the opening of her pussy. I thrust into her ass rapidly and she shook on the table soaking the napkin with her hot pussy juices. I moved the napkin to her lips and pushed just a corner into her mouth. Annie moaned as she tasted herself.\n\nI pushed her hips against the edge of the table then pounded my lap against her ass driving my cock balls deep each time. Her mushy ass collapsed each time I pounded it allowing my cock to go extra deep. Her pussy juice continued to leak out down her thighs and drip onto the kitchen floor. My cockknot rode her ass tube against the backside of her pussy. From her squeals of pleasure I must be rubbing near her g-pad.\n\nI slapped her ass and watched the jello wobble back and forth. Annie would grunt, \"Fuck,\" each time I slapped her ass and I did it over and over. Suddenly Annie screamed and shoved the napkin back fully into her mouth and pulsed her ass on my cock as she thrashed through a powerful anal orgasm. Her pussy ejected hot woman cum all over my thighs to splash back against her ass and up onto her back. Her table cloth was soaked from her hot juices.\n\nThat was just too much for me. I fell on Annie's ass and back and started thrusting deep as my cockhead swelled and ejected a bolt of cum. I saw stars in my eyes as salvo after salvo of thick cum shot down into her ass to disappear in her bowels. Glob after thick glob shot down her ass. I pulled out and shot several hot globs of cum on her back and ass crack.\n\nI grabbed her gray and black hair and pulled her off the table and pumped my cock and painted her face with cum. She finally opened her mouth and spit out the napkin and I squeezed two final fat globs of cum onto her tongue. She closed her mouth and made a big show of swallowing. I pushed my now slightly softening cock into her mouth and she sucked and licked me clean. \n\nShe took my cock down into her throat and swallowed around my cockhead. That became too tender and I pulled out. Annie took a deep breath of air that she had been denied with my cock down her throat. I let go of her hair and she fell naked to the floor to lie in the puddle of her own pussy juices and female cum.\n\nI poured a glass of wine and sat in the kitchen chair and drank it down. My breathing slowed so I dressed and slipped into my shoes. I put my winter coat on and stopped at the door. \"Thanks for dinner, the wine and dessert Annie. If you'd like to do this again sometime drop me an email and I'll check my schedule. I know my secret with the senior girls is safe because I just took some pixs of you lying in your own cum on your kitchen floor. My special app recorded your begging for my cock so I would hate for all that to leak out. See you in the caf\u00e9,\" I said happily and closed the door.\n\nI walked to my quarters in the brisk night air and knew I could have Annie anytime it was convenient to me. I had a good night's sleep and a quiet Sunday grading papers and watching New England hockey and football.\n\nMy regular class went great on Monday but a Proctor brought a student to my office for discipline. It was a minor infraction so I asked the Proctor to stay. She told me the girl was one of her senior STEM students. I told the young girl to stand by my desk. She was blubbering and sniffling snot back up her nose so I gave her a tissue. I asked her name and how old she was. \"My name is Marie and I just turned eighteen in October Sir.\"\n\nMarie was one of those geeky brainyacks with large glasses and no regards for makeup. I told her that her infraction required her to be disciplined. She started blubbering again so in a strong voice I ordered her to bend over onto my desk. She let out a howl but slowly turned and bent over my desk. \n\nI went and got the 'oar' as the students called the large paddle. While Marie was bent over the desk I made her tell me the rule she broke. Sobbing she told me the truth and did not try to blame it off on another.\n\nI told her the punishment was three swats and she had to count them. She sobbed, \"OK. I'm sorry Mr. Johnson. I'll behave next time.\"\n\n\"OK, let's begin,\" I said loudly. \"Pull up your skirt Marie and uncover your ass,\" I ordered her. \n\nWhimpering she slowly pulled her skirt up onto her back. Then unexpected she pulled her white granny panties down off the bump of her ass. I winked at the Proctor and recognized her as the one that asked me about the Faculty Winter Dance. She watched as the paddle swatted the young woman's bare ass. \"One,\" Marie sobbed as the 'oar' turned her ass cheek red. Then, \"Two.\" Then, \"Three,\" she said sobbing.\n\nI pulled her panties back up to cover her red ass and gave it a gentle pat. I pulled her school skirt down then helped her stand upright. I took off her glasses then wiped her tears with a tissue. I told her to go to Veronica and tell her I wanted her to give you a makeover. \"You can be a very beautiful young women with a little help Marie. And for god's sake during Winter Break buy yourself some new glasses.\" I then leaned in and gave her a soft kiss on her quivering lips and told her to behave.\n\nI took out my wallet and handed Ellen my charge card. \"Ellen take Marie into town tomorrow and get her some pretty under-things. I want her to come back every day for the rest of this week and show me her new panties.\" \n\nI leaned in close to Ellen and whispered into her ear, \"And buy yourself something really risqu\u00e9 to wear under your Winter Dance dress. I'm sure you will want to show me how naughty you can be Ellen, yes very naughty,\" then I bit her neck under her ear. I felt her tremble. \n\nI turned back to Marie and she had put her hand to where I kissed her and was blushing deep red. She rushed into my arms and gave me a strong hug bushing her young breasts against me. She leaned back then in a rush of bravery kissed my lips awkwardly but with enthusiasm then raced out the door happy as can be. \"You see, Ellen, a little bit of love after discipline goes a long way to rebuilding a person's sense of self-worth. Works every time,\" I said looking deeply into her eyes.\n\nVery softly she said, \"You'll have to show me that soon, yes someday soon,\" as she absentmindedly rubbed the back of her skirt across her ass. \"I'll send Marie to your office tomorrow and she can return your card and show you what we decided on. You'll have to wait until the dance to see my pretty things.\" Ellen spun quickly and the tops of her thigh-highs peaked out as she walked away.\n\nLater that day I reminded Jonathan that he had agreed to allow me to mark his wife and daughter as my possession. On Tuesday we four drove several towns over and went to a tattoo and piercing parlor. I had called the establishment and requested a female artist. When we arrived Olivia greeted me warmly. She had long, ass length, black hair and she was dressed Goth. Her arms had various Celtic and occult tattoos and it was obvious her nipples where pierced as they pushed out against her top. \n\nAs a single proprietor she locked the front door put up the closed sign then led us to a back room. Jonathan and I took a seat and I told Portia and Penelope to strip naked. Olivia took in a soft breath as both women without hesitation removed all their clothing. They both wore only a loose blouse and a skirt, no panties, no bra. Their female fragrance filled the small room. I told Olivia I wanted a \"D\" tattooed at the top their ass crack and another just above the mons of their vulva. \"I want to see my mark of ownership each time I am fucking them,\" I instructed Olivia.\n\nOlivia looked at me with wide eyes and turned it into a wide smile. She set a pink towel down on the guest tattooing chair and Portia sat first, her back to her. Olivia cleaned the fleshy area where her ass cheeks merged into her lower back then showed me on paper a few stylized \"D\"s from which I chose one. Olivia began her work on Portia's ass as Jonathan's wife moaned as the needle bit into her flesh but sat as still as possible. \n\nI could see the pink towel turn dark under Portia as her pussy juices leaked out. Olivia added hearts and flowers around the \"D\" and after about a half hour she was done. She took a picture with my phone and showed Portia who was breathing heavily.\n\nOlivia covered the tattoo with a bandage and held the wet pink towel against Portia's pussy as she moved her to a low bench to lie down. She put down another pink towel and directed Penelope to sit. Olivia began her work on Penelope's ass. Penelope moaned loudly and we watched her cum pour from her pussy and soak the towel. Olivia leaned forward and licked the sweat forming on Penelope's back.\n\nPenelope's \"D\" tattoo was soon done. She got Portia to stand and helped Penelope to lie down holding the soaked towel against her pussy. She had Portia sit facing her now and disinfected the area of her mons to receive that tattoo. Olivia lowered the chair until Portia was almost lying back with her thighs spread wide open. Her pink gash was dripping fragrant pussy juices that filled the small back room.\n\nOlivia turned and looked at me seeking permission. I nodded assent and she leaned forward and licked Portia's pussy for several minutes. Olivia reached up and pulled on Portia's hard pointed nipples until she came screaming out curses. Olivia drank in the older woman's nectar then patted that leaking pussy with the pink towel and wiped her chin on another. \n\nOlivia brought the tattoo machine to Portia's pussy and began. Portia's nipples got rock hard again as the needle bit into the soft skin of her mons. Another area of the pink towel became soaked. Olivia leaned her working hand against and between Portia's wet pussy lips. I watched her rubbing the prominent clit as the decorative \"D\" was applied to that mons. When she changed colors Olivia licked the side of her hand tasting Portia once again. That tattoo was soon done and Olivia took another picture with my phone and showed Portia.\n\nPortia looked at Jonathan and said softly, \"I am your wife Jonathan but I now belong to Daniel. You may borrow my cunt or my mouth or my ass but they belong to Daniel. These tattoos are his mark of ownership.\"\n\nOlivia turned and looked at me lost in her own deep thoughts. She looked down my body and stopped at the swell of my long fat cock pushing out my trouser leg. She looked up at my hypnotic blue eyes and licked her dry lips. She turned back and applied a bandage to that pussy tattoo and had Penelope change places with her mother. I walked closer to watch Olivia work on Penelope's pussy.\n\nWhen the black inked needle bit into Penelope's flesh she screamed and strong pulses of pussy juice arced out and soaked Olivia's top. The juices molded Olivia's tits to her top. Her pierced nipples pushed out long and hard. She followed my eyes to her nips and smiled brightly again. She leaned in and kissed Penelope's pussy licking up her thick sap. Olivia then placed another pink towel within the wet grotto of Penelope and went back to her work.\n\nPenelope as I have come to realize really gets off on pain and pleasure. The new towel was soaked with pussy juices by the time Olivia finished. Olivia took paper towels and dried up the area she needed to apply the bandage. She swapped out the two women again.\n\nShe had Portia sit facing her as she disinfected her nipples. I chose a bar with small amethysts on the ends to pierce Portia's nipples. Portia hissed first as her nipple was pulled out then as each needle passed under her nipple and the bar inserted. The amethyst cap was then screwed on to complete the piercing. Sweat was forming between Portia's mature breasts so Olivia leaned in and licked the moisture. We helped Portia to a chair and then moved Penelope into position.\n\nI turned to Jonathan and asked him to choose a ring to his liking to pierce his daughter's nipples. When he stood to look in the case his cock was hard pushing out his pant leg. He chose quarter sized loops that had ruby balls on each end and then stood close to his daughter. Olivia took pincers and pulled out Penelope's hard nipple and asked Jonathan to hold them.\n\nShe pushed the needle under the hard aureole as Penelope moaned. The ring was pushed through and a ruby ball applied to close the loop. The procedure was repeated on the right nipple with Jonathan pulling out his daughter's hard nipple. Penelope sat there panting then Jonathan leaned in and kissed his daughter deeply.\n\n\"Daddy, I am your daughter but I now belong to Daniel. You may borrow my cunt or my mouth or my ass but they belong to Daniel. These tattoos and nipple rings are his mark of ownership. He may release me for marriage but he shall always own me.\"\n\nThe women were helped back into their skirts and loose fitting blouses. I paid Olivia twice what she quoted me and she pulled me into a deep kiss. I could still taste the pussy juice of my women on her lips. She held my fat cock on my pants and handed me her card. She said that was her private cell number on the back and I should call her soon. \"I'd love to be owned by your cock Sir, everywhere in my body,\" she said then kissed me again.\n\nWe drove back to campus to Jonathan's house and I kissed the women goodbye and shook Jonathan's hands. I told him that I considered him to be a very close friend and he smiled brightly. The women would be off limits except for blowjobs until the bandages were changed and my new ownership tattoo's and nipple piercings healed.\n\nIt was now Wednesday and I had my regular upper-class. All students had to be eighteen or over to take my elective. We were reading one of those strong male character and defenseless female character Gothic novels. I was watching for reactions from my class. The passage was a bit risqu\u00e9. There was one particular eighteen plus senior up front that was not in my Independent Study special class.\n\nWe were reading a seduction passage and I saw Savannah had her hand under her skirt. That was a real rule breaker. Each teacher has a \"Yellow Card\" and when given to a student requires them to meet with that teacher in their office before the end of day. I got one out of my desk and worked my way to the back then beside Savannah on the side of the offending hand.\n\nI tapped her right arm and her hand shot out from under her skirt and she squeaked. I placed the 'Yellow Card' in her hand wet from her own juices and walked away. The class 'hooted' and 'woood' as I returned to my desk. They knew a 'Yellow Card' required a trip up the 'Three Stairs' and discipline. I watched her for the rest of class as she stayed beet red and kept her face hidden behind her strawberry blonde hair. At the end of class she stood in front of my desk and tried to say something in her defense.\n\n\"My office; end of day. You're dismissed,\" was all I said shutting her down.\n\nIt was about an hour before dinner when there came a timid knock. I yelled, \"Come in,\" and Marie walked in smiling brightly. \"I have my new panties on and Veronica applied makeup for me this morning. I look totally different Mr. Johnson. I feel more confident today and also I feel sexy in my new underwear. I've never felt this way in my eighteen years. I felt awkward around boys and kept to myself. Would you like to see my new panties Sir?\" she asked.\n\nI motioned for her to stand by my desk. She walked to in front of me and slowly raised her school skirt. Silky red and pink panties appeared. \"Would you like to touch them Sir?\" she said quietly.\n\nI brought my fingers to her gusset and moved them back and forth. Marie moaned and opened her thighs to give more access to my fingers. \"They feel wet Marie. Are you excited?\" I asked as I massaged her pussy lips above the silk and rubbed her little bump at the top of her slit.\n\n\"Oh Sir you're making me feel funny down there. Veronica asked to touch me there after doing my makeup. I'd never let anyone touch me there but she gave me butterflies in my tummy as her fingers touched me softly. I'm getting the same feelings from you too Mr. Johnson, Sir. Veronica even kissed me there over my panties. It shocked me but I loved it, Sir,\" Marie whispered as she leaned into my fingers.\n\n\"May I kiss you there also Marie,\" I asked. \"Oh Sir, I think that would be really naughty,\" she said frightened.",
        "\"Pull your panties down to your shoes and sit on my desk Marie,\" I ordered.\n\nShe stood there for several seconds then bit the skirt hem and pushed her panties down to her black-and-whites. I told her to flip her skirt back and sit her naked ass on my desk. She slowly gave up the fight and did as she was told. I rolled my desk chair forward then slowly kissed up her trembling thighs. \n\nShe had her hands hiding her dark curly haired pussy as she breathed heavily. I took her hand and ran her fingers through her own pussy lips. Her juices were flowing now and her fragrance excited my nostrils. When her two long fingers were wet with her nectar I put them in my mouth and sucked them clean. \n\nI wet her fingers again and told her to clean them. She slowly brought them to her lips and licked. I wet her fingers between her own pussy lips several times until she took them into her mouth and sucked them. I kissed up her trembling thighs and leaned forward and licked between her wet pussy lips. To push away her resistance I took her tiny clit between my lips and sucked.\n\nMarie took in a deep breath and moaned. \"Oh, Mr. Johnson, that is so naughty. My mommy told me to never touch down there except in the bath or shower, especially after my flow. But you're causing feeling on my coochie; very strange new feeling. You really want to lick me there? Isn't it naughty Sir?\" she whispered as she pulled my face in against her.\n\nI licked between her wet pussy lips. I sucked on her young labia licking just inside the vestibule of her vagina. The bulbs of her clitoral organ were just inside her vagina on either side and my tongue massaged them. Her warm juices were leaking out and I was sucking them down. My tongue and lips were bringing new feeling to Marie as her clit swelled in my mouth.\n\nMarie started moaning then her thighs crushed each side of my head. She pushed her ass up off my desk and crushed her clit against my lips. \"Oh my gosh, Mr. Johnson Sir!\" she screamed and came on my face. Her groin trembled on my face as she screamed and moaned leaking her pussy juices into my mouth and onto my desk.\n\nI brought her to two more orgasms until she pulled my long red hair and I released her clit. Marie panted trying to calm herself. She pulled me up then drew me in and kissed me deeply. Overnight she discovered how to kiss and kiss deeply offering me her tongue. She had to taste herself on my lips and mustache as she licked my face.\n\n\"I see you learned how to kiss Marie.\" She blushed and said Veronica had taught her how, \"And she made me get wet down there,\" she said with a shy laugh. \n\n\"Well be on your way little one but make sure you come by tomorrow with a new pair of panties to show me,\" I said laughing as I pulled her red and pink silk panties up her wet thighs. I held the gusset against her wet pussy as she settled the hems around her waist and across her ass. \"Ask your Proctor if you can have a sleepover with Veronica tonight. I'm sure she could teach you a few more things about your tender young body,\" I said laughing.\n\nMarie kissed me deeply over and over then slowly broke contact. She gave me many tiny kisses all over my face then took a step back. \"Do you really have a big fat cock as the senior girls say you do?\" she said blushing. \n\nI stood and moved her hand onto my cock that had stiffened and rode down my pantleg. She took in a deep breath and slowly moved her hand up and down the shaft. She looked into my blue eyes deeply and brought her other hand to her lips and hissed in a deep breath. \n\n\"Oh my gosh Mr. Johnson. I've never touched a cock before. Are all cocks this big? Does my daddy and older brother have such a big cock?\" she asked surprised.\n\n\"No Marie, not all men have such a long fat cock as I do. I guess I am blessed with such a nice one. If you think about it over Winter Break and want to please me come see me once the next term starts up again. You could also go outside your comfort zone and ask your older brother to show you his. He might also let you help him cum,\" I laughed.\n\n\"Oh Mr. Johnson you're so naughty. I'm so embarrassed thinking about my brother's cock. My panties are getting wet again Sir. You are so naughty making me think about new things. I better get out of here or I'll beg to see and touch your man cock,\" Marie laughed then kissed me deeply as she rubbed her mons on my fat cock as she hugged me tightly. \n\nShe pecked my lips one last time then almost skipped out of my office. She stopped at the door and ran back giving me my charge card. \"The young woman in the lingerie store said she would like to meet the man who bought me and Miss Ellen such pretty things,\" she laughed. Marie turned and stopped at my door and lifted her skirt showing me her pantied ass and shook her tush. \"That is a changed young woman,\" I thought. \"Her older brother had better watch out.\"\n\nI heard her singing walking down the stairs. \"Oh, hello Savannah! Are you in trouble? You better watch out. Mr. Johnson is in the mood to do some spanking, ha, ha, ha, ha!\" Marie laughed and her singing faded away.\n\nSavannah walked in sobbing. \"Turn off the water works and come sit on my desk facing me,\" I growled.\n\nShe tried to dry her tears on her blouse sleeve so I gave her a Kleenex. She hopped up on my desk and demurely settled her skirt down her thighs. Her chest was going a mile a minute giving me a good inkling of her perhaps B-cup breasts.\n\n\"Do you wanna tell me what you think you were doing during my class?\" \"No Sir,\" she replied.\n\n\"The governors of this school take following the rules and regulation quite seriously. Do you know that particular infraction you performed in my class carries the full discipline - twelve lashes with the flogger on your bare ass?\"\n\n\"Oh god no Mr. Johnson I couldn't take it,\" she said sobbing again.\n\n\"I will lower the punishment to just three if you tell me the truth about what you were thinking that caused you to drift off and forget were you were.\" \n\nSavannah started sobbing deeply. \"Savannah you either submit to the punishment or you will be expelled. I'm giving you a way out because I am the Master of Discipline.\"\n\n\"Ok Sir, I'll tell you. I was dreaming about the strong cousin seducing the heroine.\" \"And why was that?\" I grilled her. \"Because I was seduced.\" \"By whom Savannah?\" \"Oh no Sir I can't tell you that. It's just too embarrassing,\" she sobbed again.\n\n\"Are you a virgin Savannah?\" Quietly she answered, \"No Sir, not anymore.\" \n\n\"Who took your virginity?\" \"My, my older cousin, Sean,\" she sobbed. \n\n\"Did he force himself on you? Did he hurt you?\" \n\n\"Oh no Sir. Although I never expected it he was very gentle,\" Savannah said almost smiling. \n\n\"He seduced me slowly causing feelings throughout my body that made me lose control of my actions. He then wanted what I had never given away.\" \n\n\"Did he do things to you you never experienced before?\" \n\n\"Yes Sir. He did things down there. At first I thought it was nasty but then I exploded with pleasure. My body had feelings, out of control feelings that I'd never felt before in my eighteen years as a young girl. Then I let him take me, take his pleasure with my body. It all made me feel special. Like the heroine in today's excerpt I was swept away,\" Savannah said breathing out a long huff.\n\nShe was unaware of her surroundings again and had her hands between her legs and was slowly moving her palm upon her mons. She was reliving the experience as she answered my questions. Very softly I wove my web of seduction. I knew she would succumb. \n\n\"Savannah you can avoid all punishment if you tell me the full story. It says here in your records you wish to be a writer. Step outside yourself and tell me the full story, full details, full feelings. Knowing from what you have experienced is how you become a writer and weave your story and engage your readers. After you tell me your story I want you to go back to your dorm and rewrite your story as if you were the heroine of a Gothic novel. I will give you an A-plus for the course if you email me the story before the end of term.\"\n\nSavannah looked at me and let out a deep cleansing breath and started her story. \"I went to Boston for the funeral of my rich uncle. I was already eighteen put not experienced. I never had a boy friend. My religious parents kept me very sheltered. Sending me to this school for these four years was all part of their control. Back at my uncle's large estate I met my twenty one year old cousin. Sean was handsome as all hell, wavy dark hair, a touch of a beard, a strong manly shape.\" \n\n\"After the wake we went out to the portico for some fresh air. We were all alone. The air was fresh with a sweet scent carried on the breeze. He turned me towards him with a strong grip on my arms and pulled me against him and kissed me. He kissed me hard and deep and sweet. I tried to resist but he held me and devoured my mouth with his. When my breath failed he kissed me again holding me tight against him.\"\n\nI pulled Savannah off the desk and moved against her. I pulled her long strawberry blonde hair down and her face went up. Her eyes were huge with fright put she licked her dry lips. \"Like this?\" I asked then took her mouth with mine. She tried to lean away put I pushed her against me with my hand behind her head. I kissed her for some time not letting her get a breath. I released her lips and she took a deep breath. I slipped my tongue onto hers and kissed her deep and hard again for some time. I felt her go slack as she gave into me. \"Go on,\" I whispered staying my hard body against her softness feeling her young breasts against me.\n\n\"He took my breath away and then he grabbed my ass and pulled me against his hips. I could feel his hard penis pushing against my thigh. The portico had been set up with chairs and tables and a lounger. He lifted me onto the lounger and flipped up my dress.\" \n\nI rubbed my fat hard cock against her mons and reached down and grabbed her ass and squeezed hard. Savannah moaned as I lifted her and she wrapped her legs tight around me. My cock was against her pussy separated by layers of clothing. I carried her to the ottoman setting her down and flipped her school skirt up onto her belly. She wore pretty pink panties which already showed a stain from her moistness. Her young fragrance was very sweet. \"Proceed,\" I said staring at her panties and the moistness leaking past her thigh hems.\n\nSavannah laid on the ottoman her face towards the ceiling. She didn't have to meet my eyes as she moved to cover her panty covered vulva. But when I pushed her hands away she moaned and gave up laying her arms next to her bare thighs. \n\n\"My cousin pulled my panties down and buried his face in my pussy. I realize now that Sean really knew his way around a girl's pussy. He licked and sucked my kitten giving me pleasures I never knew existed. I had three overwhelming orgasms and I soaked his face over and over before he stopped.\"\n\nI knelt between her young over eighteen years soft thighs and pulled the gusset of her panties to one side and her coral gash was displayed in all its wetness. Her pussy lips were covered in soft blonde curls. \"Like this baby girl?\" I said as I licked the length between her labia.\n\nMy lips captured her clit and I sucked it until it filled with blood. Her pebble pulled out from its hood and I licked around it in a circle. Savannah moaned and pushed her pussy against my face and released a fountain of sweet juices. \"Oh fuck,\" she moaned as she came that quickly. Not letting her recover I pushed my two long fingers into her pussy and curled them forward onto her g-pad.\n\nHer clit and g-spot received all my attention as she screamed and sprayed my face as she shook through her second climax. I sucked the opening of her vagina drinking in her sweet juices. She was wetting her ass and the back of her skirt as her honey dripped down. I wet my thumb in that lube and placed it against her anus. I massaged it gently as I took her clit between my lips again.\n\nMy long fingers were now moving back and forth in her pussy and pulling on her g-spot. I quickened my licking and thrusting and felt her pussy clamp down on my fingers. I added my other two fingers and pushed them into her pussy and she moaned and started shaking on my hand. I nipped her pussy lips and pushed my thumb up her ass and sucked her clit hard.\n\n\"Oh FUCK Mr. Johnson I'm cumming, I'm fucking cumming!\" she screamed as she poured hot woman cum all over my fingers and my chin. I licked beside my fingers sucking in her swollen labia and taking tiny bites. My thumb was deep up her ass feeling her pulse as pussy juice flowed out. I tried to drink it all.\n\nIn a raspy breath Savannah continued. \"Before I could catch my breath or calm down he picked me up and put his hands on my bare ass and pulled my dress out of the way as he laid me back on the table. My ass felt the warmth of the table from the sun as he pulled me so my head hung off the end. He dropped his pants and put the first cock I had ever seen against my lips. I licked his dripping cock and tasted my first pre-cum.\" \n\n\"My mouth slowly opened and a fat cockhead slipped between my lips. His hot cock slid across my tongue and tapped the back of my throat. I gagged a bit so Sean slowly fucked my mouth tapping my throat lightly to try to get me use to it. He pulled out then dropped his heavy shaved balls on my lips. He told me to lick them and try to suck each one into my mouth.\"\n\n\"Each of his sacks was given special treatment by my lips and tongue. I never had done anything like I was doing then. He then leaned forward and my tongue ran across his taint and asshole. I thought it was nasty but I did it. I was doing things I'd never done before and I was losing all my control.\"\n\n\"Sean pulled his cock back again and pushed a big blob of pre-cum on my tongue. When his taste flooded my mouth I swear I came again. I got so wet 'down there' I felt like I had peed. But it wasn't that it was a liquid with a special scent and I liked it. I could feel my hot juices wetting my pussy lips and inner thighs and even down between my ass cheeks. He used my mouth to fully harden his cock then moved between my legs and ran his cockhead up and down between my soaking wet hot pussy lips.\"\n\nI picked Savannah up and carried her to my desk. I unzipped her skirt and let it drop to the floor. I pulled her panties down and off. I laid her on my desk bare assed and moved her head to the edge. She turned to watch me as I unbuckled my belt and unzipped and dropped my pants and boxers. She took in a deep breath when she saw the size of my rising cock. I pulled her by her arms until her head hung over the desk. I supported the back of her head as I pushed the underside of my cock along her wet lips.\n\nHer tongue licked along my shaft from balls to cockhead. I let her head droop and put the crown of my cock against her lips. Her tongue cleaned my cockhead of dripping pre-cum. She kissed my slit and sucked softly and more pre-cum bathed her tongue. \n\n\"Take as much as you can, Precious,\" I whispered as I pushed my cock against her lips and her mouth opened wide. She tried working her lips side to side to open her mouth like a snake and finally she captured my entire cockhead into that warm wet cave. She wet my cockshaft with her tongue and took a few more inches until my cockhead tapped the back of her mouth.\n\nSavannah coughed a bit but then let me move my fat cock back and forth across her lips and into her mouth. She was sucking hard on my cock and I was giving her dose after dose of pre-cum. I pulled out and helped her sit upright on my desk with her legs over the side. I kissed her softly and she kissed me back. I started unbuttoning her white school shirt.\n\nSavannah continued. \"I sat up and put my hand on his chest and softly told him I was still a virgin. He stared at me then asked me if I wanted him to stop. I told him to keep going but please go slowly and easily. He rubbed my clit with his thumb and I felt myself let down some warm pussy juice. He used it to lube his cockhead and he slowly pushed against my vaginal opening. I took in a deep breath then let it out and his cockhead popped into the doorway of my pussy.\"\n\nI removed her blouse and her bra and Savannah now sat naked on my desk. I put my cock between us and picked her up as she wrapped her legs around my back. I carried her into my bedroom as the underside of my cock rubbed her swollen clit. With each bounce she moaned from her clit being massaged. I gently lowered her to my bed and knelt between her thighs. Her wet pussy rubbed up and down the underside of my cock getting it and my balls wet with her warm juices.\n\nSavannah let out a long soft breath from the continuous excitement against her pussy. \"He paused then told me it would be better if he just pushed his cock in and got my hymen out of the way. He pulled back and pushed in quickly and I grimaced as my virginity was torn away. He had filled my pussy with half his long cock and waited. I nodded so he began to move in and out of me. His cock was pulling on my clit and then rubbed somewhere inside me that excited me over the edge and I came again. His fat cock got all the way inside my pussy and slid in and out over and over. He reached up and grabbed my boobs and twisted my nipples.\" \n\nI took my cock in my hand and ran it through Savannah's wet pussy lips. I rode my cockhead across her now fat clit until she gripped my arms. I placed my cockhead at the door to her vagina and pushed. She grimaced but pushed against me also. My four fingers in her pussy and her trio of orgasms had softened her tightness and my cockhead breached her vagina. She took several deep breaths then looked at me.\n\n\"I knew I would have to be disciplined for my offence Mr. Johnson but did not expect to be seduced. I'm not a slut like some of the seniors at this school Mr. Daniel, Sir. Sean has been the only male inside me. I heard the rumors from the other girls that you had a huge cock. They said it made them sore for days and that you cum and cum. I'm not on protection Sir. I took a chance with Sean because I was swept away. I will let you fuck my pussy but please don't cum in me,\" she said as a few tears rolled down her cheek.\n\nI moved my cock slowly back and forth within Savannah's young tight pussy feeding her a half inch at a time until I reached the end of her tunnel. I reached up and started playing with her young breasts. Firm B-cup breasts and hard nipples were just recently eighteen years old. I moved back and forth in a warm tunnel kept wet by her dripping pussy juices.\n\nSavannah sighed and continued. \"I came on his cock one more time and Sean started moaning. He kept saying he was ready to cum and I begged him not to go off inside me. He pulled out and ran his hand up and down his cock and his hot cum sprayed on my pussy. Shot after hot shot of his cum painted my pussy hair and wet pussy lips. I dropped off the table and took his red cockhead in my mouth and several more cum pulses filled my mouth. And yes I came again from his taste and sprayed the floor with my hot pussy juice. I'll always have that memory of losing my virginity Sir.\" \n\n\"Well cum on my cock Savannah and we will find a way for you to make me cum,\" I said then leaned down and kissed her deeply. She put her arms around my neck and kissed me back hard. While she held me tight I moved my long fat cock in and out her pussy. My fat cock and her tight pussy caused my movement to pull on her clit going both ways. She also moaned when my cock filled her pussy and tapped her cervix.\n\nI put my thumb on her clit and rubbed it around and around that peanut. I picked up the speed of filling her pussy and rubbing her clit. She sat up pushing her sweaty breasts against my chest and she shook as she crashed through another climax. I kept my cock in deep as her entire vagina pulsed gripping me over and over. She kissed me hissing her breath against my mouth. She screamed and dropped to my bed as her body shook. My cock was tight in her pussy but girl cum still managed to wet my balls.",
        "I stroked her tits and leaned down and sucked her hard nipples. I lay on those breasts and rolled us over. I let Savannah breathe until she got it under control. I lifted her off my cock and set her pussy back down on the underside of my cock as it was now squeezed on my abs. I grabbed her young ass cheeks and started moving her pussy up and down along my long cock. Her cameltoe riding on my cock kept it wet and lubed.\n\nI pulled her forward until I felt her swollen clit rubbing on my own cockknot. Mother Nature gave both males and females that pleasure knot and I made sure both Savannah and I felt the maximum pleasure. Savannah sat up and started riding her clit barely a half inch back and forth. I reached up and pulled on her nipples as she hissed from the pain and the pleasure.\n\n\"Oh fuck Mr. Daniel I'm cumming. This is so much pleasure I'm losing control. Oh fuck, here it is, here it is, Here It Is! I'm Cumming!\" she screamed and hot female cum poured out of her pussy as she shook on my cock. She was right on my cockknot and when she lost the strength of her thighs she crushed my cock between us. As she shook through her climax she pushed me over the edge. I pulled her down and cum blast after cum blast landed between her hanging tits.\n\nI painted my hot thick white cum between us as I continued to move her wet pussy on my cock. After six or seven pulses of cum I hugged her tits tightly against my chest. Savannah sat on my lap until her knees gave out. She stretched her legs backwards and now lay totally upon my body. My hands drifted down her back then my fingers rode the crack of her ass. On purpose I massaged her darkstar with several fingers and she nuzzled her face into my neck and bit me.\n\n\"I felt your thumb in my ass before. I allowed it because I was cumming out of control. But be careful back there. I said I wasn't a slut and you don't have my permission,\" she whispered against my ear then bit my neck. \n\n\"I don't have your story yet so I could still toss you across my desk and flog your ass!\" I growled and slapped her ass quickly three times.\n\n\"Oh FUCK that hurt Mr. Johnson!\" she yelled against me.\n\n\"I'm sure it did Savannah but the question is will you let me warm your ass across my desk before the term ends just for the pain and pleasure?\"\n\nSavannah didn't answer me but I felt my cock get wet with a release of pussy juices. I massaged her ass cheeks and once more ran my fingers across her anus. She didn't bite so I pushed softly against her darkstar but for now I did not enter. I rolled her to the side and pulling her hair into a ponytail I moved her face to my cock and told her to lick me clean.\n\nAfter some time I felt her tongue lick along my cockshaft and around my cockhead. Tenderly she cleaned my cum off my cock, my balls and my chest. She then turned and hung her breasts over my face and softly told me to lick them clean. I've tasted my own cum so had no issue with licking her breasts and sucking on her young nipples. After my enjoyment was done I slid out of bed.\n\nI picked her up and carried her into the bathroom. I wrapped her hair in a towel and we entered the waterfall shower. I was beside myself in soaping her tight young soft body. Her tits, ass and pussy got my special attention. She got over her shyness of holding my long fat cock and soaping it up. She did shyly ask me how long and how fat it is.\n\n\"It's eight inches long and about eight inches around at its thickest.\" \n\n\"Oh my! I had all of that cock up my poor pussy. Everyone is gonna know I got fucked on your big cock by the way I'm gonna be walking,\" she said laughing.\n\nWe kept to just a shower and I wrapped her in a big towel and carried her back to my bedroom. I went about gathering her clothes and brought them to my room. Savannah sat on a chair facing a mirror combing her long hair. I looked at her sweet young ass then watched her breasts move about in the mirror and was taken away by her beauty. She saw me looking at her in the mirror. She turned and asked me, \"What?\"\n\n\"You're so young and so beautiful so I was making a memory. I'm already jealous of the man or woman that will get to enjoy your body and your intellect. You're gonna drive me crazy as we finish out the term now that I have seen the treasures hiding behind your school uniform. I'm just making a memory of your beauty,\" I said letting out a soft breath.\n\nSavannah stood and walked naked to me. She kissed me softly. \"You're a sweet, sweet man Daniel. I think I'll act up in your class. Maybe I'll forget to wear panties. You can give me your 'Yellow Card' and I'll be forced to endure your discipline,\" she said laughing and kissed me again.\n\n\"Savannah, I want you to sign up for my Independent Study starting in January. I must see and experience your beautiful body again and again. You can tell Penelope that I said it was ok to talk to her about what is expected from my supplicants. Please think it over. I think it will be good for you to come out of your shell.\"\n\n\"Your supplicant, Mr. Daniel, Sir? I'll think about it,\" she said sweetly as she ran her slender finger along my cheek.\n\nI then had to sadly watch as Savannah dressed and covered up that beautiful body. Those firm young breasts went back into her bra and her fragrant pussy was hidden by her school skirt. We kissed for some time at my door which I unlocked and she slipped out. I didn't want to deal with any students after all I enjoyed with Savannah. I walked to my desk and her pink fragrant panties were left there as a gift. I brought them to my face and inhaled her fragrance. I dressed and walked into town and had a quiet lonely dinner. \n\nThe college waitresses now know me and flirt with me. They let me get fresh with them every so often allowing my hand to run up the back of their thighs on their stockings under their uniforms. The bold ones let me grab an ass cheek every now and then. I didn't mind leaving large tips and they didn't mind taking them. \n\nBut tonight was different. Emma is a junior at the local college in her early twenties. She took liberties while serving me. Her stocking thighs rubbed my pants leg and she hung her cleavage near my face as she plated my meal. At the end when she brought my check she said she had her own place nearby and was clocking out after my service. I told her that was nice and to enjoy her night off.\n\n\"Would you please come back to my place Mr. Daniel? It's just across the square and we can walk there,\" she asked hopefully. \n\n\"Are you sure Emma?\" I asked. \"I will pleasure you but then use your young body in ways you may have never experienced. I will dominate you and you will give yourself to me any way I wish. Is that what you want? To be fucked hard and left alone on your cum soaked bed?\"\n\nShe took in a deep breath not expecting that reply and put her hand on the table to support her knees that had gone weak. \"Yes Sir,\" she whispered. \"I have watched you come in here flirting with the girls with your rugged manly looks. I have fantasized about you taking me and doing things to me. My panties are soaking wet right now just hoping you will do those things, forcing me to obey and opening my body and my mind to your control.\"\n\nI put my money down on the table giving her a huge tip. I looked up into her green eyes and told her I would be waiting for her on a bench on the square. Then I walked out. It was a brisk winter night but I was dressed for the temperature. I sat on the bench and soon Emma came running across the square. She took my hand when I stood and we walked to her apartment not speaking.\n\nEmma had an apartment above a hardware store in the square which was closed for the night. I walked behind her up the stairs but her winter coat hid her ass. At the landing she put her key in the door then turned to me and kissed me. She deepened the kiss giving me her tongue as she moaned. \n\n\"I've wanted to do that since the first time you came into the restaurant. I looked into your deep blue eyes and knew deep within me I would give myself to you if ever the chance came by. My panties get soaked just watching you and fantasizing that you would one night take me. I'm twenty one and have had sex with a few boys at the college but I don't know if it's a daddy or older man thing but I want to pleasure you with my young body. I'm frightened but willing to let you use me for your own pleasure,\" Emma said breathing heavily then turned the key and opened the door.\n\nShe had a one bedroom apartment kept nicely clean and decorated. I saw she had a sturdy kitchen table and my mind went down that path. Emma hung her coat on the door hook and did the same with mine. She walked into a small sitting area and turned around and faced me.\n\nEmma was nicely shaped with long red hair that she was now untying from a bun and running her fingers through. She started unbuttoning her black waitress uniform and it dropped to her feet. She had a red silk and lace bra and panty set. She reached behind her and undid the clasp of her bra and it fell to the floor. Emma had nice firm softball sized breasts with dark pink silver dollar sized aureoles and cherry red firm thumb sized nipples.\n\nHer excited breathing made her young firm breasts rise and fall. She pushed her panties down and her red carpet covered her pussy lips and mons but was neatly trimmed. I told her to turn around and bend over to take off her panties. I told her to keep her black thigh-high stockings on.\n\nEmma smiled kicking her uniform off her shoes then turned and bent from the waist. Her firm ass presented itself to my lustful eyes. She untied and removed her shoes and slipped one foot out of her panties. She spread her thighs wide and her wet pussy lips filled the space between her firm thighs. Her darkstar winked at me as her fragrance filled her small room. She slipped her second stocking covered foot out from her panties and held them waiting for me to instruct her.\n\nI told her to lay her breasts on the kitchen table and spread her legs wide. Without delay Emma laid her chest on the table holding her panties in her hand. I unbuckled my pants pulling my belt out of the loops. I folded it in half then snapped the leather together causing a loud 'snap'. Emma moaned and her ass moved back and forth. When I walked up beside her I could see and smell her dripping pussy. \n\n\"Do you want what I am about to do to your ass Emma? Do you give yourself willingly to my desires?\" I growled.\n\n\"Yes Master,\" was all she said quietly.\n\n\"Put your panties in your mouth to muffle the screams you will make,\" I ordered her. I wondered once again were this bent in my personality had materialized from. I had been a gentle family man, loving and treating my wife with love and grace. I was a college professor that never had lustful thoughts about his students or his daughters. But now I was about to disciple Emma's ass and my cock could not have been harder.\n\nI saw Emma push her panties into her mouth and bite down on them. I actually could see her pussy juices leaking out from her open lips to run down her inner thighs and wet the tops of her stockings.\n\nWithout a warning I pulled my folded belt back and swatted Emma's ass. Her head came off the table as she screamed into her panties. I waited until she returned her face to the table and moved to the other side of her. \"Swat\" sounded from the belt as it turned her other ass cheek a bright red. She screamed again holding tight to the edges of the table. Her thighs began to shimmy as her muscles contracted and released.\n\nSince she had taken two hard whacks with my belt I eased up the strength of my swings and gave her ten more, the full disciple. Her upper and lower ass and the backs of her thighs above the stocking tops turned bright red. I made numbers eleven and twelve hard again and poor Emma pissed her own floor. She then rubbed herself against the table edge and screamed as she came. Now pussy juices sprayed out of her cunt wetting the floor behind her. Her entire body shook through her strong climax.\n\nI pulled out a kitchen chair on the side that Emma was facing and slowly pulled her panties from her mouth. I tossed them into the urine and girl cum puddle on the kitchen floor. I moved her long red hair off her sweaty forehead and told her she was 'A Good Girl'. She moaned and lifted her cheek onto my palm and then kissed it.\n\n\"I'm gonna fuck your naughty cunt, Emma, with my long fat cock as you lie on this table. No soft bed for you, slut. Feel your tits and pussy slid on this table as I slap your painful ass with my hips as I drive my fat cock deep into your cunt,\" I said as I stood and started to undress. When I was naked I pulled her face to the edge of the table and ordered her to suck my cock.\n\nHer wet tongue cleaned my cockhead of my dripping pre-cum and licked my cockknot. Her lips covered my crown then opened as I pushed my cockhead into her wet mouth. She choked when I tapped the back of her throat. She spit saliva all over my cockhead as she gagged.\n\n\"Do you feel the size of my cock Emma? It is gonna destroy your cunt seeking its own pleasure. I will have no concern for your moaning and weeping until I fill your cunt with my hot thick cum. I'm gonna thrust hard down the depths of your cunt trying to push my fat cockhead into your womb. You will hurt for days afterwards. But your discipline will not be to just your cunt as after you suck my cock of my cum and your thick pussy juices I will break your ass open and fill it with more hot cum. No begging will prevent this from happening Emma,\" I growled as I slapped her ass several times.\n\nI picked up her soaking wet panties and pushed them back into her mouth. She tried to move her mouth to prevent me so I slapped her ass until she gave up. She let out a deep breath and opened her mouth wide. Her cum juices and urine soaked panties covered her tongue as she closed her mouth tightly in shame.\n\nI took my cock in my hand and ran it up and down between her dripping pussy lips and tapped her anus with my cockhead. She moaned when I did that last part so I purposely pushed my pointed crown against her analring. It tried to prevent me but slowly opened. I held my cockhead there for a minute feeling her anus pulse on my cock. I moved down sliding my hard cock through her pussy lips until it found the entrance to her vagina.\n\nI have no need to fully dominate a female sexually so I let the vestibule of her vagina greet my cockhead. I pushed easily and her doorway opened slowly and let my cockhead enter. Emma moaned and shimmied her pussy against my cock letting her warm juices coat the head. She on her own pushed back and took two more inches of cock into her stretched pussy. She breathed rapidly through her nose, her mouth being filled with soiled panties.\n\nI pulled her long red hair down her back and pushed two more inches of my fat cock into her warm playroom. She moaned when I pulled back to my fat cockhead and pushed six inches down her cunt. She pushed back and my cockhead tapped her cervix making her moan. \n\nShe pulled her panties out of her mouth. \"Fuck me Daniel, fuck me hard and deep. Make me cum on your long fat cock. Dominate my cunt Sir. Fuck your slut Master!\"\n\nI started thrusting hard and deep into her wet oven for several minutes. Her tight pussy walls gripped me in a vice and her ass and thighs started shaking. She screamed and pushed her ass back and took all eight inches into her cunt and screamed again. I pulled out quickly and her pussy sprayed arc after arc of pussy juice that hit my cock and balls then fell to the kitchen floor.\n\nMy cockhead found her wide open pussy and pushed her pussy lips and swollen clit back in along with my fat cockshaft. I jackhammered her pussy giving her all eight inches with my fat cockhead jamming against her cervix. She screamed through another orgasm even pushing her hot juices out along my cockshaft. I went over the edge and shot my hot thick cum against her womb.\n\nI pulled back went deep and blasted another load of cum into her cunt. Five, six, seven blasts of my cum filled the bottom of her pussy coating her cervix. I pumped my cock on each blast pushing my cum with my cockhead into her womb. Emma moaned each time I went deep. In one final push I went balls deep and lay on her sweaty back.\n\nEmma moved to ease the discomfort of my long fat cock but actually rubbed my cockhead with her cervix. She growled from the pain but I felt new warm pussy juices bathe my hanging balls. I pulled her hair to the side and bit the back of her neck leaving teeth marks.\n\nI pulled my spent cock out of her pussy and watched the big \"O\" of her pussy wink as it tried to close. I slapped her ass several times making her groan as her clit rubbed the table edge. I walked to the fridge and took a water bottle then sat on her sofa. \n\nI watched Emma trembling through climax aftershocks as she lay on the table for a long time. She lifted her head and looked around until she saw me sitting on the sofa and let out a long breath. I watched my cum dribble out of her pussy and drop to the wet kitchen floor.\n\n\"Come here Emma on your hands and knees and clean my cock with your wet tongue and mouth. Clean my balls of your own cum and get my cock hard again. I'm gonna push my long fat cock down your ass and fill it with more cum,\" I spoke with a strong voice.\n\nShe moaned and dropped to the floor. Her hands and knees walked through her own urine and cum juices. She knelt between my legs and put her hands behind her back. Emma leaned forward and took my cockhead between her lips and slid down my cockshaft until it hit the back of her throat. She had more than half my cock in her warm wet mouth.\n\nShe sucked up and off my crown then licked up and down the sides. She pushed the underside of my cock against my abs with her forehead and started licking my balls. She carefully sucked one nut into her mouth cleaning and massaging it with her tongue. The fire in my gonads began to flame. She released that nut and did the same to its twin. Her tongue swirled across my filling nuts causing my cock to rise again. Emma released my ball sack then licked under them wetting my taint. \n\nShe sucked along the bottom of my cock stopping on my cockknot. Her lips and tongue drove me to sexual heights as she abused that sensitive bump. I pulled her hair hard and she moved her lips onto my cockhead and sucked it into her mouth. She rode her lips, wet tongue and warm mouth up and down my cock pulling my blood into it making it rock hard.\n\nI pushed her forehead back and stood. I walked into her small kitchen opening her cabinets until I found a jar of honey. I pulled her up by her flaming red hair and pushed her face down across the arm of her stuffed chair. I pulled her right leg up onto the padded back and moved her left leg onto the floor. Emma was now spread eagled on her chair with her ass pointed at the ceiling and her large tits crushed into the seat.\n\nI grabbed several dish towels and pushed them under her pussy as I anticipated she was gonna juice all over the arm of the chair. I opened the honey jar and dripped some directly on her anus. She whimpered but then moaned deeply as I leaned over and started rimming her asshole. I pointed my long tongue and pushed through her analring. It opened to let my tongue enter then move in and out her back door.\n\nWhen I pulled my tongue back there was a small opening into which I dropped some more honey. I went back looking through her kitchen drawers and she did have one of those old handheld teak citrus reamers. I brought it back to the chair then started working it against her pussy lips. Slowly her pussy produced more fragrant lube and the reamer became coated and breached into her pussy.\n\nEmma moaned as the old wooden reamer entered her pussy and stopped at the handle. I worked what was now a wooden dildo in and out her wet stretched pussy pulling on her clit each way. She screamed as she came on her new toy and soaked the kitchen towels under her pussy lips. As she breathed heavily I dripped more honey on her anus then onto my dickhead.",
        "I pushed the hard crown of my cock against her honey coated anus and her door started to open. Slowly it opened to the size of a nickel, then a quarter, then a fifty cent piece then a silver dollar. Then her analring gave way and opened letting my cockhead enter her heated dark oven. Emma moaned and tried to more her ass away from my invading cock but I held her down with her legs spread wide apart.\n\n\"Oh Mr. Daniel Sir you're killing my ass. I can feel your cock just inside me. It's painful Sir. Oooohhh nooooo,\" she moaned as I pushed more inches into her ass. I dripped more honey on my cockshaft and it slid down to rim her anus. I pulled back to my corona then pushed more cock into her ass. I did that over and over slowly adding more cock until my balls kissed her ass cheeks. I could feel the rows of the reamer in her pussy rubbing along my cock.\n\n\"There Emma you took all my long fat cock down into your ass. What a good girl you are. Your Master has claimed your ass as a warm oven to massage his cock and to receive his hot thick cum. Now be a good girl and shimmy your ass side to side and back and forth to pleasure my cock in your ass,\" I ordered her. \n\nAs she moved I knew her clit was rubbing against the rough towels and the wooden dildo was massaging the insides of her pussy. I pulled my cock back to my cockhead then pushed down filling her ass again. Emma hissed but began to push her ass back on my cock. Each time I went deep her clit rubbed on the towels and my thighs and hanging balls pushed against the handle of the teak citrus reamer causing pain and pleasure to her pussy.\n\nI took up a faster speed and Emma was huffing as her own pleasure was building. I could feel my nuts getting painted with her pussy juice as she pulsed it out from between her red covered nether lips. I felt movement and Emma was pulling on the nipples of her tits groaning loudly. She was rocking her hips rubbing her swollen clit around on the towels.\n\n\"Agh, agh, agh, agh, ooooooo fffuuuccckk I'm cumming!\" Emma screamed.\n\nI fell onto her ass forcing my cock into the deepest part of her rectum and blasted salvo after salvo of the last of my cum for the night. I didn't count the swelling and ejaculating in the warm oven of her ass. Her ass shook through her climax sucking the cum out of my dickhead. I rode my dick back and forth experiencing extreme pleasure with each thrust.\n\nEmma let out a long hiss of a breath then went silent with shallow breathing. I slowly slid my softening cock out of her ass and wiped it on her cum soaked towel. I carefully removed the old style handheld teak citrus reamer and dropped in into her sink. I then walked naked into her bedroom and pulled down the covers.\n\nI went back to the chair and lifted the dead weight that was Emma. I put the towels between her legs and ass cheeks like a diaper and carried her into her bedroom and lay her carefully on her sheets then covered her with her blankets. I came back and left a glass of water and two Aleve on her nightstand.\n\nI dressed and left the bathroom light on should Emma need to get up in the middle of the night. I hoped she didn't have the breakfast shift at the diner. I left her a note that I'd like to see her after Winter Break. I looked through my wallet and left her several hundred dollars beside the note. \"I realize Emma that if you are attending college on your own and waitressing you will appreciate my financial support. Don't demean yourself thinking I'm paying you for sex. It pleases me to care for you and thank you for your gifts.\"\n\nThere is no fucking a woman in all her holes then leaving her high and dry. If she wants to be my submissive I have to give her an additional opportunity. I walked out locking her front door behind me. \n\nI went back to my quarters and went to turn in. When I pulled back my bedding Savannah's scent wafted throughout my room. I slept deeply with the sweet memory of her body running through my dreams."
    ],
    "authorname": "ZachDocEight",
    "tags": [
        "anal",
        "flogging",
        "girl on girl",
        "incest",
        "mature",
        "panties",
        "piercing",
        "reluctance",
        "seduction",
        "tattoo"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/daniel-ch-04-proctor-tattoos"
}