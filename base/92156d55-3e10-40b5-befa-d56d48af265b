{
    "title": "Changes Ch. 06",
    "pages": [
        "Thank you for your patience. This one took me longer that I expected and was so hard to write! Do let me know what you think. Always makes my day when I come back and see a few comments and mails. I hope you like it. \n\n*****\n\nIt was a night of fitful sleep. They were both acutely aware of each other's bodies. Heather was awakened by Vanessa's ministrations on more than one occasion. Soft, roving hands, hot breath in her ear. She even heard Vanessa call her name in that deep, titillating voice. The feel of Vanessa's breasts against her back, her bare legs, even her toes against the skin of her calf was impossible to ignore. \n\nThe night was punctuated by soft sighs, sharp intakes of breath and moans. One time Heather turned and found her face buried in Vanessa's neck. She was overwhelmed by her smell and couldn't help the tiny moan that escaped her. She buried further, pulling Vanessa closer. Vanessa stirred awake, shivering at the hot breath on her neck. She turned her head, seeking out Heather's lips in her sleep haze. They kissed again, this time in the dark, both half asleep, moaning into each other. \n\nHeather vaguely remembered her hand exploring Vanessa's body over her clothes, feeling the curve of her breasts under her fingers, the puckered, defiant nipple trapped between her fingers. She remembered grazing her thumb over Vanessa's nipple, making her jerk in her sleep. The weight of another's breast as it filled her hand was enough to make her moan again. \n\nThe next time Heather woke was early morning. She hadn't slept well and her head felt awful. Memories from last night were fresh and she felt a tingle when she dwelt on them. She looked over and Vanessa was curled up next to her. God how she wanted to hold her, to feel her close. She was beautiful, sleeping so peacefully. Heather reached out and brushed her hand against Vanessa's cheek. They'd kissed last night. It was unlike any kiss she'd had before. It was all so soft, so gentle, so arousing. Her smell, oh, it drove her crazy. It must be a mix of her shampoo, lotion and just Vanessa. It was so pronounced in the crook of her neck, she just wanted to bury herself there. Heather felt a surge of emotion. It wasn't sadness. It was frustration, confusion and the pretty woman asleep by her side. Whatever it may be, she couldn't stop the tears that came. She cried silently, trying not to sniffle so as to not wake Vanessa up. \n\n\"Heather? Why are you crying?\" Vanessa was awake in an instant. \"C'mere.\" She drew a very compliant Heather in. \"Shhh, honey, what's wrong?\"\n\nAll Heather could manage were a few more sobs as she clung to Vanessa.\n\n\"Shit. I'm sorry. Heather...\" Vanessa tried to get her to look up but Heather wouldn't budge from the crook of Vanessa's neck. \"Heather, I'm sorry. I'm sorry about last night. I shouldn't have...fuck. I messed up. I shouldn't have pushed, I...\"\n\nVanessa was struggling with her words when a blotchy faced Heather extricated herself and looked right at Vanessa. Her eyes were teary but full of fire. It shocked Vanessa so much that she stopped her attempt at an apology.\n\n\"Are you really sorry?\" Heather shot at Vanessa. \"Are you sorry that we kissed? That you touched me the way you did? Are you?\"\n\nVanessa was looking at her in stunned silence, so Heather continued. \"Because there's no way in hell that I am. And it scares the life out of me. And if you're sorry that it happened, I should go. I wouldn't want to\"\n\nHeather saw the flash in Vanessa's eyes and the look of pain on her face made her stop her tirade. \n\n\"You're nuts, you know that?\" Vanessa said in a soft voice, squeezing Heather. She then sat up, putting distance between them. \"I'm not sorry, Heather. For anything that happened last night.\" She rubbed her eyes and sighed before continuing. \"You were crying and I thought...I thought I'd...why were you crying?\"\n\nDespite Vanessa's calm tone, Heather was still on edge and it didn't take her a second to respond. \"Because I'm hungover and I slept like shit and I'm confused and you're so beautiful when you're sleeping and all I want is,\" She took a fortifying breath. \"All I want is to do this.\" She moved forward and claimed Vanessa's lips, taking her by surprise. She leaned in further, trapping Vanessa against the headboard as she continued to kiss her. Vanessa's hands came to rest on Heather's waist as she opened herself to her. Heather drew a moan from Vanessa as she sucked her bottom lip into her mouth, nipping the side with her teeth, her tongue tracing it before dipping into her mouth. \n\nVanessa's hand found its way to the back of Heather's head, fingers entangling in her hair, as she deepened the kiss. The other hand caressed her hip, lightly squeezing her sides. \n\nHeather was out of breath when she broke the kiss. She looked at Vanessa before saying, \"Plus, I'm horny as hell from last night. And the night before that.\" This drew a chuckle from Vanessa who pulled her into a hug. \n\n\"So that's what's making you all cranky, eh?\"\n\n\"Among other things,\" Heather replied, her voice muffled against Vanessa's neck.\n\nThey lay like that for a minute before Vanessa said, \"Jules will be up soon. Let's freshen up and get breakfast going. We'll talk after that, alright?\"\n\nHeather nodded against Vanessa's neck, but made no attempt to move. \n\nVanessa laughed. \"Move it lazy bum. I really need to pee now!\"\n\nHeather gave Vanessa a quick kiss on her neck before sitting up, allowing Vanessa to scamper off to the bathroom. \n\n-\n\nVanessa and Heather were downstairs sipping their coffee when Jules made her way down, rubbing her eyes. \n\n\"Good morning honey,\" Vanessa bent to give Jules a hug and a peck on the nose. \"How do you feel? Slept alright?\"\n\n\"G'morning mum. I feel alright.\" She then walk up to Heather and gave her a hug. \"Good morning Heather.\"\n\n\"Morning Jules,\" Heather replied as she hugged Jules back.\n\n\"Hungry?\" Vanessa asked, ruffling her hair and got a vigorous nod of approval in response. \"How about eggs and toast?\" This was answered with another vigorous nod. \n\nVanessa laughed before adding, \"She doesn't like words first thing in the morning.\" She then turned to Heather. \"What about you? Alright with eggs and toast?\"\n\nHeather looked at Jules, then at Vanessa before vigorously nodding her head which earned her a giggle from Jules and a ruffle on the head from Vanessa. \n\nWhile Vanessa prepared breakfast, Jules told Heather about her plans for the day.\n\n\"I'm going swimming today. I had to miss it last week because I was sick. \n\n\"The weather is perfect for a swim! Where do you go?\"\n\n\"To Rebecca's house. They have a heated pool. I'm learning the butterfly stroke.\"\n\n\"That's great! Are you getting good?\"\n\n\"Yes! Not as good as Rebecca though. She gets to practice so much more because she has a pool at home. But I'm getting better.\"\n\nHeather smiled before saying, \"That's alright honey, once a week is quite good. You also have karate and other extra-curriculars I'm sure.\"\n\n\"Yea, but wouldn't it be amazing to have a pool at home? That's why I suggested building a moat around my fort. But mum wouldn't have it.\"\n\nHeather laughed. \"How big is this fort going to be exactly?\"\n\n\"Giant!\" Jules said, spreading her arms out energetically. \"But mum said no moat,\" she added with a frown.\n\nHeather laughed again. \"That's alright Jules. Having a pool is nice, but it's important to count your blessings. You have a gorgeous wisteria tree in your garden. Bet Rebecca doesn't have that.\"\n\nJules giggled. \"It's not a tree, it's a vine.\"\n\n\"Really?\"\n\n\"Yea, it's been pruned and trained to stand like a tree. But it's a vine.\"\n\n\"Just a technicality, Jules,\" Vanessa said, walking in with two plates. \"Now c'mon, help me out. Orange juice is on the counter.\"\n\n\"But mum! It's important to know.\"\n\n\"Yes honey, it's always important to know. I'm sorry,\" she said, giving her a peck on the cheek and pulling her into a bear hug. \"Now will you help me with the orange juice, please?\" she asked with a smile.\n\n\"Yes mum, but you have to let me go first!\" Jules said, exasperated, trying to squirm out of Vanessa's grip. Vanessa chuckled as she let go of Jules who scampered off in a second.\n\n\"It's so heartwarming to see you both,\" Heather said with a soft sigh. \n\n\"Ever thought of having one?\" \n\n\"God no! I can barely take care of myself.\"\n\nJules returned with a jug of orange juice before Vanessa could respond.\n\n\"Mum, I have swimming at Rebecca's at 11.\"\n\n\"Yes love. Am I dropping you?\"\n\n\"I'll ask the girls if one of them can pick me up. I'll let you know.\"\n\n\"And should we go through the assignment for Ms. Martin's class before that?\" Vanessa asked, taking a sip of orange juice.\n\n\"Yes please! It's due on Tuesday.\"\n\n\"Alright honey. We'll do that after breakfast.\"\n\nHeather observed them as she quietly ate. What a lovely bond they shared. She suddenly felt like an outsider between mother and daughter. They were a family, a very close one at that. She wondered what it was like when they all lived together with Joe. Her thoughts were interrupted when a warm hand covered hers. She looked up Vanessa was looking at her through narrow eyes.\n\n\"Where'd you go?\"\n\n\"Oh sorry, just lost in thought,\" Heather replied, instantly aware of Vanessa's hand over hers. She gave Vanessa's hand a little squeeze which earned her a smile, one of those heartbreaking ones. \n\n\"Eat up!\" she said softly, \"Your eggs are getting cold,\" Vanessa said and Heather complied, shoveling a heap of eggs into her mouth.\n\nHeather found out that weekend mornings were spent going over school work and due assignments. Vanessa made notes of things she needed to do over the week. This week's to dos included buying supplies for a craft project and picking up a gift for a birthday party on Wednesday. She then called Joe so Jules could talk to him.\n\nVanessa's interaction with him was friendly but brief before she handed over the phone to Jules. While Jules was on the phone Heather and Vanessa cleaned up.\n\n\"How's your hangover?\" Vanessa asked.\n\n\"Oh, it's barely there. Thanks for breakfast,\" Heather said, playfully bumping into Vanessa.\n\nVanessa looked up from rinsing the dishes, \"Anytime, honey.\" She then added, \"How about I run you a bath? I'm going to spend some time going over her assignment with Jules. You could soak and relax in the time being.\"\n\n\"Oh that sounds lovely,\" Heather said giving her a grateful look. \n\nIn the next five minutes they were in Vanessa's bathroom, chatting away casually waiting for the tub to fill. \n\n\"Which bubble bath do you want? Orange Blossom or Lilly and Jasmin?\"\n\n\"Orange please,\" Heather said watching Vanessa fix her a bath. Her movements were unhurried, almost languorous. Like she took great pleasure in this process. It had Heather transfixed.\n\nVanessa looked at the expression on Heather's face as she followed her movements. She cocked an eyebrow and suppressed a smile that threatened the corners of her mouth. \"This is my guilty pleasure. I absolutely love a bath. It's the only extraordinarily expensive thing in this house.\" She then showed a wide eyed Heather the controls for the jets and the temperature settings. This time she couldn't contain the chuckle and gave Heather a chaste kiss on the cheek. \"You're going to feel like a new person after this.\"\n\nHeather nodded, enjoying the closeness of Vanessa's body.\n\n\"I'll come check on you once Jules leaves. And after that we'll talk. Okay?\"\n\nHeather nodded again, not looking at Vanessa.\n\nVanessa maintained their closeness as she placed a finger under Heather's chin and tilted her head up gently. \"Look at me honey.\" Vanessa's eyes had the same fire from last night, although it seemed like she had it more under control now, in the light of day. \"Enjoy your bath Heather,\" she said before swooping in and kissing her on the corner of her mouth followed by a more insistent, but brief one on her lips. \"I'll be back soon,\" she said before letting go and walking out, leaving Heather feeling oddly empty. \n\nBefore she was gone, Vanessa returned with a fluffy towel. Heather hadn't moved at all.\n\n\"Got you a towel,\" she said softly, getting Heather's attention. \"You haven't moved,\" she added just as softly, stepping in close to her. And then more aggressively, \"Need help, is it? Can't get undressed on your own?\"\n\nHeather's eyes shot up. \"What? I...no!\"\n\nVanessa chuckled, \"Then what you waiting for?\"\n\n\"I...nothing,\" Heather said, dejectedly. \"I'll get in now.\"\n\nVanessa nodded, her expression gentle. \"Stop thinking. Let yourself relax honey.\" She moved into Heather's line of sight and lifted her chin with her fingers again. \"It's going to be alright. I promise.\" \n\nOn her way out she called back jokingly, \"I better not find you standing there when I come back.\"\n\n-\n\nThe warm water felt lovely against her skin. She lay back and took a deep breath, her hands playing with the bubbles as she started to relax. The orange smelt so good. God she could be like this forever. There was so much room in the tub! Two people could use it easily. Her mind immediately thought of Vanessa in the tub with her and she shuddered. The effect Vanessa had on her was bizarre to say the least. She had been so turned on last night. The stickiness between her legs and the smell that greeted her when she'd taken her shorts off to pee had been blatant reminders. Even now her pussy throbbed. Instinctively her fingers parted her lips and rubbed against her clit, making her hiss. Her fingers, drew circles, gradually increasing the pressure. She pulled one leg up and lay the other down on its side, giving herself more room. Her other hand reached for her left nipple and an involuntary moan escaped her. The sound seemed to break the spell and she froze. God, what was she thinking? She was in Vanessa's tub. Vanessa and her daughter were just a room away. What had gotten into her?\n\nHeather decided she'd had enough of soaking. She drained the tub and showered, rinsing her hair, willing herself to get a grip. After drying off, she wrapped the towel around herself and tip toed out the bathroom. \n\nVanessa was sitting on the bed, her elbows resting on her thighs, her feet impatiently tapping the floor. She looked up when she heard Heather, making Heather stop dead in her tracks. \n\n\"How was your bath?\" she asked in a deep voice.\n\n\"I...good, uh, it was wonderful.\" She stood there, looking at Vanessa. \"What are you doing here?\"\n\n\"Jules left. And I couldn't take my mind off of you in the bath.\"\n\n\"Oh.\"\n\nVanessa stood up and took a step towards her. The look in her eyes was so intense that Heather backed up against the wall, holding onto her towel where it was tucked in. Before she knew it she was trapped against the wall with Vanessa's body barely an inch from hers. Her towel, her only protection.\n\n\"I couldn't stop thinking about you in the bath,\" she breathed. \"Tell me, did you touch yourself?\"\n\nHeather couldn't respond, she couldn't even tear her gaze away from Vanessa's smoldering eyes. Her lips were parted and Vanessa made the most of it. There was nothing gentle about the kiss. It was demanding, insistent and Heather let her have her way. Vanessa held Heather's hands and pinned them over her head before she attacked Heather's neck, still wet from her shower. \n\n\"Unh, Vanessa..\" Heather couldn't stop the sounds escaping her as Vanessa plundered, kissed and even bit down on the tender flesh.\n\n\"Tell me, Heather. Did you touch yourself while in the bath?\" Vanessa whispered in her ear.\n\nHeather nodded, her body squirming against Vanessa's.\n\n\"I need to hear it. Tell me.\"\n\nHeather moaned and Vanessa sucked in her earlobe. \"I did. I touched myself in your bathtub,\" she managed to breath out. \n\nVanessa growled into her ear, pressing her body flush against Heather's. \"How was it? Was it good?\" She ground herself against Heather's body, sending her into a frenzied panic.\n\nRealizing that maybe she was taking this too far, she fought to control herself. \"Stop me! Stop me please. Before I rip this towel off of you.\" She released Heather's hands as she said this, her eyes betraying the effort that it took to rein herself before she buried herself in Heather's neck.\n\n\"I can't,\" Heather said in a soft voice. \"I can't.\" She wrapped her freed hands around Vanessa's waist, holding her. They stood there for what seemed like a very long time. Both composing themselves, catching their breaths. \n\nVanessa made to pull away first, but Heather wouldn't let her go. \"Don't,\" she said. \"Not yet.\" Finally Vanessa had to coax her. \"You should put on some clothes, honey. You're going to catch a cold.\" \n\nHeather was surprised that the towel had stayed on through all this. She also noticed that Vanessa's t-shirt was wet in places because of her wet hair. \n\n\"I got you all wet,\" Heather said, pointing at her clothes.\n\nVanessa cocked a brow, \"In more ways than one, honey,\" she said with a serious expression. \n\nIt took Heather a second to realize what she meant and it made her blush crimson. \n\n\"I'm going downstairs before I... meet me there once you're ready.\"\n\n\"No, don't.\"\n\n\"What?\"\n\n\"Just, just look the other way and I'll change.\"\n\nVanessa chuckled. \"Alright. But why?\" she asked, turning to face the other side.\n\n\"Because I can't be alone right now,\" Heather said, slipping on a pair of fresh panties, shorts and the racer back she'd carried to wear to the gym.\n\n\"Alright. I'm here.\" Vanessa said just as Heather snuggled up to her from behind, wrapping her arms around her midsection. Vanessa gasped, before saying, \"You better have clothes on, because we need to talk.\"\n\nHeather giggled, \"I do. But can I hold you like this while we talk?\"\n\nShe felt Vanessa's chuckle more that heard it. \"Quit being a silly monkey,\" she said as she turned around and pulled her in for a hug. \"Sit,\" she instructed, before taking a seat next to her on the bed. \n\nThey sat in silence before getting into what they both knew would be a difficult and fateful conversation. Both cherished and valued each other enough to give up on any hope, dream or desire that would come in the way of their friendship. It was Vanessa who spoke first and it was obvious that she had given some thought to what she was saying.\n\n\"Heather, more than anything, you're my friend. It is the most important thing to me in what we have. Everything else comes second. But, I can't deny that I'm ridiculously attracted to you. But, please know that it stands for nothing if it's something you don't want, or if it's something that makes you uncomfortable. I promise you it won't come between our friendship or our work relationship. You hear me?\"\n\nHeather nodded, hugging her knees. \n\nVanessa continued. \"I want you to be honest with me. We will have the boundaries you choose to set. I will never do anything to make you uncomfortable ever again. And...\" she took a deep breath before continuing. \"I'm sorry I've pushed you. Last night and today. I should have stopped myself, but I...you're so\"\n\nHeather was quick to interrupt. \"Vanessa, you don't have to apologize. I could have stopped you at any time. It wasn't all you.\"\n\nVanessa nodded, acknowledging what Heather was saying. \n\nVanessa had mad her position clear, in such few words that too. Heather wasn't sure how to express herself and not sound all over the place. \n\n\"Go on Heather, just say what you think.\"\n\nHeather sighed. \"I'm scared, Vanessa. It's all so new. And it, and it doesn't feel weird, or awkward. Shouldn't it? I think it should feel odd. You're a, a woman. You're so gentle. No one's been like this with me before. It should feel, I don't know... different. Why does it feel so, so natural?\" She looked up at Vanessa and shook her head before adding, \"God, you're so beautiful. It scares me.\" She reached out and tucked a stray strand behind Vanessa's ear. ",
        "Heather looked away before continuing. \"I feel it. I want it too. At least I think I do. But...\"she shook her head, \"But what if I change my mind afterwards? It would ruin everything.\"\n\nVanessa looked at her, her eyes blazing. \"You want it?\"\n\n\"I... Last night, it was intense. Even when we were half asleep Vanessa. I, we touched\"\n\n\"I know, I remember parts of it,\" Vanessa interrupted. \n\n\"And I was so turned on. I can only conclude I want it.\"\n\nVanessa nodded. \n\n\"You know what the problem is? It's that I care so much about you. I am terrified that if I... we act on this, it'll blow up and we won't be friends anymore.\"\n\n\"Why would it blow up?\" Vanessa asked softly.\n\nHeather looked at her with sad eyes, \"I've never been with, you know, with a woman before. What if I don't like it? What if I change my mind later?\"\n\n\"Can't that happen in any relationship? Even a straight one?\"\n\n\"It can, but people rarely remain friends afterwards.\"\n\nVanessa reach out and squeezed Heather's hand in acknowledgement.\n\n\"I need to find out. I need to know what I want. I can't have a platonic equation with you, not after last night. And I can't just go along with the pace of what's happening here. Not without risking ruining our friendship.\" She looked up at Vanessa with teary eyes, \"Will you be patient with me? Will you help me figure out what I want? \n\nVanessa nodded, still holding Heather's hand in hers.\n\n\"And if at some point I want to stop, will you promise, to try... I know it's a lot to ask,\" she said, her voice faltering. \"Will you promise to try to be okay with that? Will you try to be my friend?\"\n\n\"Yes, I promise,\" Vanessa said, her eyes brimming before she pulled Heather into another hug. \"I promise, I'll be patient. And I'll never stop being there, even if you change your mind at some point.\"\n\nHeather clung on, sobbing onto Vanessa's shoulders, \"God I feel so guilty. It's like I'm using you to, I don't know... to find myself.\"\n\n\"Everyone finds themselves through life experiences. The only difference is that here you're doing it consciously. That's brave. No?\"\n\n\"But, what about you? What if I hurt you?\"\n\n\"Oh Heather, do you not see my vested interest in this? I'm not exactly being a martyr you know.\"\n\nHeather frowned, \"What vested interest?\"\n\n\"You! You, Heather. It's my chance to be with you innit?\" she said, wiping a silent tear. Then she laughed, \"You can be such a twit sometimes.\" \n\n\"It is. My god, that's crazy. You could be like my girlfriend? My boss girlfriend?\" she said scrunching up her face, trying to wrap her mind around it.\n\nVanessa chuckled, \"Let's get to that when we get to that okay? For now, let's focus on being friends and see where it goes?\"\n\n\"So we're officially friends now,\" Heather giggled.\n\nVanessa laughed, relaxing against the back of the bed and pulling Heather with her. \"Officially, yes,\" she said as Heather lay down on her side, resting her head on Vanessa's shoulder nook. \"But we're the kind of friends who like to hold each other, and touch each other.\" Vanessa's hand came to rest on the small of her back, just above the swell of her ass. She continued in a soft, hoarse voice, \"The kind of friends who sometimes kiss and have dirty, squelchy dreams about each other.\"\n\nAn inadvertent sound escaped Heather's lips. \"I like the word squelchy.\"\n\n\"You do? What about the sound? Do you like the sound too?\"\n\nHeather tilted her head up, seeking out Vanessa's eyes. \"Yes,\" she replied, breathily and she felt herself blush.\n\n\"Did you make squelchy sounds when you touched yourself in the tub?\" she asked in a whisper. When Heather didn't answer, she continued. \"You know what sound I like? The little sound that you make when I do or say something you find sexy. The sound that originates somewhere here,\" Vanessa said, brushing the thumb of her free hand across the front of Heather's neck. She then traced along Heather's chin and jaw, finally resting her thumb on her lower lip, her other hand firmly in place on the small of Heather's back.\n\nHeather kissed her thumb, a small peck at first and then she parted her lips just a bit, wetting the pad of the thumb with her second kiss before grazing it with her teeth. Vanessa hissed, but didn't withdraw her thumb.\n\n\"Do you want to know what sound I like?\" Heather asked, swiping her tongue across the sensitive pad. \n\nVanessa hissed again. \"Besides the squelch? Which one?\"\n\n\"It drives me crazy when you do that growl. I don't know where it originates, but it's definitely deeper than here,\" she said, gently placing her hand on Vanessa's neck, her thumb caressing the soft skin on the front, while her other four fingers grazed the back of her neck, making her shiver. \n\n\"Growl? What growl?\" Vanessa said in a hoarse voice. \"I don't growl,\" she added with mock indignation. \n\n\"Yes, Vanessa... you do. It's sexy as hell. I think it comes from deeper, somewhere here maybe,\" she said, moving her hand lower, her fingers now splayed over her collar bones and the sensitive hollow at the base of her neck. They danced a tortuous dance, tantalizing the sensitive skin. Vanessa broke out into goose bumps and Heather notices her nipples hardening, poking out through the thin material of her t-shirt. \n\n\"What do you think? Maybe deeper?\" she said, her mouth dry as she moved her hand lower until it rested between her breasts, her fore finger and little finger resting gently on the inside swell of her breasts while her thumb curled around on the underside of her right breast. She could feel Vanessa's hammering heart and her puckered nipples were impossible to ignore. \n\nHeather tilted her head up, meeting Vanessa's gaze. \"What,\" she cleared her parched throat. \"What do you think? About right?\" \n\nVanessa was breathing hard. Heather's head, resting on Vanessa's shoulder rising and falling with every breath. She kissed Vanessa on her jaw, enjoying every bit of the reaction she was getting from her.\n\n\"I don't know what you're talking about,\" Vanessa said in a whisper. \"I don't growl.\"\n\n\"Oh really? You sure about that?\" Heather teased, her eyes challenging. \n\n\"I...\" Vanessa's hand curled into a fist against her lower back, crumpling her t-shirt, her knuckles grazing Heather's skin just above the waistband of her shorts. Involuntarily, Heather's hips undulated, her pubic bone moving against Vanessa's hip, sending a zing which she felt somewhere deep in her lower belly and the tips of her toes. \n\n\"Ahh, fuck,\" she exclaimed, her face contorting at the unexpected pleasure. She instinctively grasped Vanessa's right breast, her thumb grazing her rigid nipple, before rolling it between her two fingers, making Vanessa's body jerk. Her eyes found Vanessa's and she said, \"Kiss me, now.\"\n\nVanessa growled before claiming Heather's lips as she turned over onto her side, her hand moving from Heather's lower back to her hair, where it buried itself, allowing her to deepen the kiss. She plundered Heather's mouth and Heather matched her intensity but let Vanessa lead. They moaned into each other, hands frantically exploring, kneading, squeezing, tugging; glad for any skin to hold on to through the intense kiss. They finally broke apart, breathing hard, foreheads resting together, each moving in for soft kisses while they calmed down. \n\nHeather smiled into Vanessa's mouth as they shared another tender kiss. \"Now you know what I meant?\"\n\n\"What?\" Vanessa said dreamily. \n\n\"Made you growl, didn't I?\"\n\nThe corner of Vanessa's mouth curled up, \"What are you talking about. I just kissed you. Don't know anything about growling,\" she said in mock seriousness, reaching in for another little kiss. \n\n\"Oi! You growled! Just before you kissed me!\" She saw Vanessa's face as she struggled not to laugh. \"You're taking the mickey out of me aren't ya?\" she asked, with narrow eyes.\n\n\"I really don't know what you're talking about,\" Vanessa continued to tease. \"You'll just have to show me again, I suppose.\"\n\nHeather scowled. \"Next time I'm recording you.\"\n\nVanessa cocked her eyebrows, \"Whatever rocks your boat, honey.\"\n\n\"What? No! I didn't mean it like that!\" she said in all seriousness before Vanessa burst out laughing. And then, \"You're mean, Ms. Bridge.\"\n\n\"Aww c'mon, I was just teasing. I love that you make me growl,\" Vanessa said, tipping Heather's chin up and stealing another kiss. \"But, you didn't answer my question.\"\n\n\"What question?\"\n\n\"About you making squelchy sounds in the tub,\" Vanessa said, boring her eyes into Heather. \n\n\"I..\" Heather averted her eyes, embarrassed. \"I didn't get that far,\" she said, softly. \n\n\"What do you mean?\"\n\nHeather took a deep breath before answering. \"I didn't, you know, I didn't go all the way.\"\n\n\"You didn't make yourself cum? Why?\"\n\nHeather moaned an embarrassed moan, hiding her face. \"You're very inquisitive, you know.\"\n\nVanessa chuckled, \"Where do you think Jules gets it from? But hey, tell me. Why?\"\n\n\"I couldn't. Not in your tub. Not with you and Jules right next door. It just, it seemed wrong.\"\n\n\"Oh honey! Next time, don't let it stop you. Just think about what I'd do if I was there with you. Or, better still, just give me a shout. I bet I could help.\" And then looking at the shocked expression on Heather's face, she added, \"You know, as a friend.\" \n\nThey were quiet for a minute before they both burst out laughing; Heather at failing to hide her embarrassment and Vanessa at Heather's plight and they just couldn't seem to stop! They were like two teenagers having a giggling fit when Vanessa's phone rang. \n\n\"Hey honey,\" Vanessa said, failing to stifle a laugh.\n\n\"Oh, nothing. Just sharing a laugh with Heather,\" she said, taking a deep breath to control the fit.\n\n\"Sure Jules. I'll be there soon,\" she said, hanging up.\n\nShe gave Heather a peck on the cheek. \"I haven't laughed like that in years!\" she said. \n\n\"Neither have I.\" \n\n\"Wanna come with me to pick up Jules?\"\n\n\"Sure!\"\n\n\"Great, let me get changed and we'll go.\"\n\n\"You're alright, you don't need to change,\" Heather said casually.\n\n\"Oh, I need to change. I'm sticky in places I'd rather not be,\" Vanessa said, with a smile.\n\n\"No fair. I am too. But I don't have another set of knickers.\"\n\n\"It's a lesson for next time eh?\" Vanessa said, walking towards the bathroom. \"Carry extra knickers,\" she waggled her eyebrows playfully before shutting the bathroom door.\n\nShe was out in a minute, having changed into comfy looking tracks and they headed out. \n\n\"What about we order a pizza for lunch?\"\n\nHeather laughed, \"You lured me here with promises to go to the gym and now you're feeding me pizza? You're a bad friend.\"\n\nVanessa chuckled, \"I am, aren't I?\"\n\nHeather playfully bumped into Vanessa, before moving towards the passenger seat, \"You're the worst,\" she said, buckling her seat-belt, ready to go.\n\n*****\n\nThis chapter ends where Heather and Vanessa's journey together begins. Thank you so much for giving your time to their journey so far. I will have the next chapter to you soon!"
    ],
    "authorname": "Akshi",
    "tags": [
        "boss",
        "first time",
        "romance",
        "bisexual",
        "friend"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/changes-ch-06-3"
}