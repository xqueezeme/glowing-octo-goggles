{
    "title": "Shy Guys Make Good Boys Pt. 01",
    "pages": [
        "Author's Note: This should be interesting.\n\nContent warning: Femdom and romance. I hope you have fun and enjoy.\n\nRyan\n\nI was misbehaving when I met the goddess.\n\nIt happened at a Christmas party and normally, I hated events. I didn't really, er, people. I was there for my job, though, and I'd figured out a way to misbehave at these kinds of things, my social coping mechanism, if you will.\n\nIt's not my fault. For this specific Christmas party, my boss, Nathan Faulkenberry, decided he just wanted me to be quiet in general and the setup was honestly just handed to me. \"We'll keep dad from bothering you at all, Ryan.\" That's what he said because it was his dad who was the nightmare Faulkenberry and the CEO of the pharmaceutical company where I worked as a lead data scientist. This particular time, Nathan looked bloody pleased with himself. \"It's the best idea I've had for one of these damned things yet.\" And that's when he'd pointed at the piano.\n\nHe'd laughed when my face lit up. \"Okay, that is brilliant.\" Piano! Why hadn't I thought of that for one of these holiday parties?\n\n\"I would like you to know that you are the first person of the night to appreciate my genius out loud. It is pretty good, though, huh?\"\n\n\"Your dad won't even talk to me if I'm playing!\"\n\nThe senior Nathan was the horrible one. He was a nightmare for someone like me to be in the room with. The younger Nathan grinned playfully with our conspiracy. \"He won't. He thinks you play like a goddamned Christmas angel. He'll let you keep playing quietly to yourself until he leaves and then you're safe.\"\n\n\"Safe.\" I laughed at the look on Nathan's face, when I had a feeling he was having just as much fun with this as I was. The truth was I was good with numbers, extraordinarily so. That's not a self bragging thing, really. It's just that I love playing with them so damned much. They're so much fun, all the time. My favorites were back in Calculus when Trig was involved in integral problems. Every time was a puzzle and the best part about it was that all you had to do was change one number, a single number, and the entire puzzle changed. It was like buying a whole new Rubik's cube! One number and it was an entire different puzzle and it was free and I got to be graded on this?\n\nBest things ever. Numbers were my thing. It took me ages to realize I was a rare breed of person to feel the way I did about them and the other truth about that was I could probably have a less stressful job if I wanted one. But I'd met Nathan in college and when he'd gotten signed on as a director at the company where his dad was CEO, he'd demanded I come with him. I'd been kind of bemused about it, to be honest. People sometimes wonder about parts of my life, like my job interview. Nathan had been the one to come over to my apartment at the time. \"You're wearing this suit.\"\n\nHe'd shoved me to my bathroom to make me dress and slapped my hand when I'd gone to get a tie, choosing one for me so that I briefly wondered if I wasn't a pet number puppy of some kind. It'd been terrifying when I got to that interview, too.\n\nAnyway, he kept me in an office and made me play with numbers all damn day, while keeping his dad away from me at events where I absolutely had to be seen at, like Hall's Christmas party. \"Wait. I can play whatever? Do I need to say hi to anyone?\"\n\nNathan was already turned around. \"Anything you like, kid, and no. Not a one.\"\n\nI sat at the piano, biting my lip while I thought about it. It made me glance around me for a moment, left by myself, and I took in my surroundings. It was a selective guest list, one that was filled with senators and hosted by Dr. Hall and his wife at their mansion. A massive Christmas tree stood in the corner of the room, one of several, and I was wearing a suit and tie. I was behaving, off to myself. See what I mean?\n\nIt was handed to me.\n\nBecause my social anxiety secret involved how I didn't really want to keep behaving. And I believe it was Charles Manson who said the mind was endless. Obviously, that's someone insane enough to believe, you know?\n\nI smiled and let my mind wander to my other job, my best kept secret, placing my hands to the keys, my pulse getting louder in my ears with a kind of twisted excitement when I thought of that other job. See, for my first job, I played with numbers for Nathan's company. But for my second job, I played with words... for my BDSM romance novels.\n\nDon't ask me how. It wasn't an intentional thing when it started and sometimes it still messed with me. See, it gets weirder. I didn't write any of my own proclivities, although I certainly had them. I wrote strictly male Dom and female sub romances, using a writing style where I switched back and forth between two main characters. Honestly? I'd started writing one day to try to get some of my own fantasies out of my head, but my fantasies of male submission made me... uncomfortable. So I'd switched from that to using a female pen name and to writing strictly two perspectives that weren't my own.\n\nIt was fascinating to do it. It worked, you see, somehow. Even if I didn't know female pleasure as well as a male's - for obvious reasons - I could focus on the emotion of submission, as I craved to have it. I hadn't even gotten to submit in the ways I fantasized about, but I knew enough just from the fantasies alone, for instance. I knew what it was like to crave to feel leather tight around my throat while someone else held the leash. I knew what it was like to want to be on my knees, looking up at someone who looked down on me with dominance. I knew what it was like to be afraid of those desires, too, when I wanted so badly to chase them, but didn't really feel all that comfortable about doing so. If we're all honest with ourselves, guys aren't... really supposed to want that part of it. Guys are supposed to be the top in life and in bed, or at least that's what it's always felt like to me. So I could focus on that area for my submissive perspectives, even if they were female.\n\nAnd the tops? Oh, those were the most fun. I didn't have a dominant bone in my body, but I could focus on what it was like to be a visual creature, when most males were visual.\n\nI made it all romantic, though, because romance made people happy. And... Well, I liked making people happy.\n\nBut the best part was the places I'd discovered I liked to write. It was when I was surrounded by people. Things like brainstorming when I was playing the piano, for instance, or writing on a phone app when I was at the coffee shop. I really liked the coffee shop. People came and went and I quietly wrote lurid, filthy fetishes on my phone while no one knew. It felt kind of like my own mischievous form of silent exhibitionism, when I was way too shy to do the real thing.\n\nFor the moment, I was on a circus themed story and my thoughts turned to it. I finished the song I was on, forgetting which one, and went on to Mozart, briefly considering, Mozart? Really? You hate Mozart. And then I threw the thought aside and went back to scene possibilities. I liked the thought of orgasm denial for the females in my BDSM stories, mainly because I liked the thought of being denied in my own fantasies.\n\nIt made me smile a little wickedly, thinking of being in a cock cage, of a Mistress standing over me while I was blindfolded, of her stroking my hair. Good boy. I think you'll find this will help you focus on my pleasure, instead of yours. She'd stroke my balls, though, gentle caresses that would make my cock strain uncomfortably against the cage to show me how it worked and felt.\n\nOf course, writing my own stories was much like transposing music. I smiled down at the piano keys, feeling that mischief again when I thought about it, switching the song when Mozart was just so boring. I switched to a transposition of Soundgarden for piano instead, considering the switch up in my story's perspectives.\n\nThe guy would stand over the girl and I had to consider the visual perspective in order to relate to it. As a male, when I considered kneeling, it was merely with my back straight and my face turned upward to beg. But if I imagined a female kneeling... The male top would emphasize having her thrust her tits out for his viewing pleasure, but from her perspective, I couldn't be that crude. Her perspective was where the romance would gentle how rough some of the sex would be from his perspective. Of course, the guy parts would need their own version of romance. If I just focused on his visual part, then he'd come across as an asshole, so he had to have heart.\n\nI always struggled with describing the heart of a Dom and had to get creative, had to think of how to bridge the gap between his thinking of her tits thrust out as visually pleasing to his lovingly stroking her hair. I imagined having control over someone would be intrinsically part of it. As a people pleaser, I might not have understood, fully, the dominance side, but I could empathize. It was something of a superpower.\n\nYeah, this Dom specifically would definitely be about the control and he'd love on his little submissive when she showed him trust. That thought made me smile. Good girl. Show me your pussy. That seemed right. Hot, too, with that humiliation feel. Submission struck me as more visual with a female submissive sometimes, as a general rule. The logic, for me, came from the fact that I enjoyed watching pain play videos but only when they involved a female submissive, which messed with me in some ways. See, I liked the thought of being flogged, for instance, but, well, I had a conflict of interest. I know it will sound strange and maybe it's just a \"me\" type of problem, but I couldn't visually get into videos where a male was being flogged. It just didn't strike me as graceful, if that makes sense.\n\nAt the same time, though... I definitely wasn't identifying with the top in the video when I watched those. So, for writing... Spread your pussy wider so that I can strap it, sweetheart.\n\nThat made me smile and I glanced around me at the different people on Hall's guest list, in suit and ties all of them. How upstanding. I bit my lip, working to hide a smile, when that made me feel dirtier.\n\nI had different fantasies for myself. Transposing was sometimes an imperfect art, though, and sometimes I worried that I didn't do a good enough job to make my readers happy. Some of the stories were free, but some of them were ones I sold and I worried about not being worth it. Hell, even with the free ones, I worried about not being worth their time.\n\nI paused at the end of the song, lost in my playful form of exhibitionism. Bad boy. That made me grin while I considered what song should come next.\n\nThat's when she spoke beside me. Venus. The goddess. She found me when I was being bad.\n\n\"That was beautiful,\" she said softly.\n\nHer voice. Hell, it was forward and downright sensual. I looked up at her and for a moment, my world seemed to stand still when everything felt like it was as it should be.\n\nShe was small, but she stood over me, and her head was raised in confidence. She wore this long sleeved, high necked black dress and it seemed perfectly whole and right that she did. Her hair was this ornately styled frame of dark curls, pulled back in pins so that it looked like a crown. I think her stature only made everything all the worse, when such a small size didn't seem to fit on someone who stood out so much, on someone who had that much presence. Because, oh, she did. For me, she dominated that room without so much as batting an eye, although even if she had to, those gorgeous doe eyelashes would have been flawless as the rest of her when she did. The swell of her breasts was something that made me swallow, although they were enough to taunt any man.\n\nOf course, it truly got me when I looked down and saw the knee high, high heeled boots she wore. Game over. Her dress ended somewhere above her knees and gave the perfect visual of those boots when my gaze went to where it usually went to. Down.\n\nI had spent my life trying to ignore my subservient behaviors, but she... Oh, she defeated me just by standing in front of me. All those years of trying fell away.\n\nYou see, I didn't want to be without those small submissive behaviors when they came with the visual of those boots of hers. I only managed to raise my eyes to look up at her when I answered from the fear of daring to be rude to her. \"Thank you.\"\n\nI didn't quite manage to control my voice enough and it made me flush. It was one moment where I lost control of that desire that I had worked my entire life to keep hidden, even in my pen name and writing, where I buried that side of me that made me uncomfortable and denied it every desire. Just a moment, but it was enough that it came through my voice to make me burn in humiliation, when it was so... damned servile.\n\nShe paused over me, tilting her head, and her expression was unreadable save for a small quirk of her lips in a secret little smile that made my stomach knot up. Oh, man, if I could take that one moment back?\n\nI never fucking would.\n\n--------\n\nSonya\n\nA friend of mine named Courtney got into these conversations with me where we had what we called Dominatrix philosophy arguments. In one of these, we argued about whether or not compatibly kinky people could find each other. Sort of like a \"gaydar\", but for kink. We knew it was a thing, you see, because kinky radar wasn't a new concept, but we argued over how exact it could be. Would a submissively inclined person find a dominating person to fulfill their relationship needs if those needs burned hot enough? We had both been in our fair share of D/s relationships, both as Dommes, and we talked through those experiences endlessly together.\n\nSee, I was on the side of the fence that thought the answer was sometimes. Some people kept desires buried forever without ever truly indulging them was my way of thinking. Courtney was on the side of things that thought a submissive man would generally find a dominating female in some capacity. Her side was that he craved guidance and in some way he would find a way to get that, even if it was a small way like having a wife who planned social events, for instance. At the end of all of these conversations, I would sometimes wonder how much of me was a masochist, when Courtney was both a kink friendly psychologist and someone with professional Dominatrix experience. I had the latter, but zero interest in the former.\n\nBut it was Ryan Garner who would end up changing my mind on that topic. Because my entire relationship with him was nothing but a series of failures and my attempts at control.\n\nSee, here's what made it all the worse. Courtney was a sadist, but she was also secretly the romantic between the two of us. Me? I didn't allow myself to indulge in those romantic thoughts. I had an eternal fear that being a female meant I was somehow more emotional, by natural order, than a man and I hated the thought of that making me a lesser Dominant in some way, of emotion dictating my actions instead of control.\n\nI kept my heart and those romantic notions in a stranglehold. I kept religious control and Ryan Garner managed to thwart every attempt of my keeping control of things, even from the very beginning.\n\nBecause... Oh, man. The way his voice turned so very submissive with that \"thank you\". It made me stop and smile, considering him. It also led my thoughts into oh, so wayward, filthy places. You're a good boy, aren't you?\n\nI had been drawn to him even before that though, with the way he had been so lost in his thoughts and music. Whatever he was thinking of seemed to infect his fingers with a form of devious magic because the music he made was something that would make Lucifer himself envious. That wasn't even getting started in the way he looked, wasn't accounting for that adorable baby face of his that looked like the Way of the Gun actor, Ryan Phillippe. Except he was cleaner in appearance than that. He had this dark hair that was in as standard of a short haircut as possible, and that was tousled slightly where he had recently run his hand through his hair.\n\nOh, and that slight figure of his? Mmmm. Oh, this is just unfair, you. You even look like a good boy.\n\nI nodded to the piano, trying to make my voice soothing. He was obviously an introvert and I didn't want to make him uncomfortable when I was already encroaching. It was just that, well, I was rather enjoying the way his eyes were lowered to my boots. Once upon a time, I had started my kink forays in submitting, although I was always a brat when I did submit. I had gone exclusively to dominating when I'd realized how many guys craved to have a safe Dominatrix to bow to and how many of them felt strange about wishing for that. It pissed me off that they felt the stigma they did and couldn't find someone safe to explore with. I could do it.\n\nSo I did.\n\nBut, well, he brought out the Dominatrix in my heart just with the way he lowered his gaze. \"Do you mind if I-?\"\n\nHe lifted his eyes and he looked startled, but it warmed my heart with how he also looked pleased. \"Not at all. Do you play?\"\n\nI smiled, thinking that those years of piano lessons were finally coming useful for the first time in my life when I wanted to connect with him in some way. In my experience, a connection made someone more comfortable, enough so that even the shyest person could talk. \"Not much, but I did learn a few.\" I winked and started, as luck would have it, with another Soundgarden song.\n\nHis eyes lit up with the opening notes and he placed his hands lower on the keys before he started a counter melody to the same song, a variation of the version I knew. It made me grin with how the two versions somehow twined together. \"This one is one of my favorites,\" he said softly.\n\nGood boy. I smiled at him in a lighter kind of approval. In every day occurrences, I didn't like being a condescending bitch, but when I was around shyer guys who clearly didn't like the lead in anything, I'd discovered that they often enjoyed that kind of approval. It made them feel more secure, which was understandable when social anxiety was a close cry to social submissiveness. Incidentally, this wasn't a feature exclusive to any gender identity, as far as I could tell.\n\n\"A good choice. What other favorites do you have?\"\n\nOf course... My wayward thoughts were not helping with my efforts of not being a condescending bitch, goddammit. Christ, you are way too cute for your own good. And don't give me that sweetheart look, you flirt.\n\nThe sane part of my brain was ready to try to pull me back in line with just as much snark. You know he's probably not into the things you are, right? It was true, but damn it, a girl could dream.\n\n\"Besides everything else by Soundgarden?\" He paused, then grinned with a spark of mischief that made me want to narrow my eyes in my own form of flirting. \"Everything by Alice in Chains.\"\n\nJesus God, have I mentioned that smile? He was so. freaking. cute. I loved that dark hair of his, too, and I had always had a weakness for a guy with a cute baby face. His was all the better with how he was clean shaven and that was another thing. Whenever I took male submissives for a longer term relationship, I enjoyed rules like making them shave for me. The external logic of things like that was so I could humiliate them. The internal logic that I kept just to me? It always struck me as such bullshit that guys weren't allowed to experience the heavenly sensation that was shaving their legs and putting on something silky. I gave them a reason to do it, which was, \"Mistress told me to\". Hey, I didn't mind being the fucking bad guy that gave a guy that excuse.",
        "\"A friend of mine always likes to ask why Alice was in chains.\" I said it teasingly, feeling all the more flirty. How dare he make me react like this. Maybe he'd be a little more fearful if he had a cock cage and a leash connected to it.\n\nSwear to God, my words didn't even actually sink in until after the fact, when I realized I'd just been quoting Courtney again. The angel piano player beside me looked down with a faint little blush that made me pause, his mischief all the deeper with those words and his voice was still shy, still soft spoken, but he said, \"One thing is for sure. I'm guessing Alice knows why.\"\n\nThe only hint of anything at all in the statement was the slightest undercurrent to his voice. It was just enough to make me think, In my experience, Alice always for damn sure knows why, wicked thing. And worse, I was horny off of this one interaction. It wasn't that kind of arousal that's purely physical either, but that kind that starts in your mind and feels like it pumps through your blood instead. Sure, it ends somewhere around your sex, but it doesn't start there. It starts with images of a guy you just met wearing a studded, good boy collar, of how he'd look when he was leash trained.\n\n\"I feel like you're probably right.\" Don't make it awkward. The shy ones aren't keen on awkward. Arguably, no one was keen on awkward. I held out my hand for him, smoothing the moment over nice and easy. After deciding to be a Dominatrix, there'd been this cool side effect. See, here's the thing. You have to be able to read people pretty damned well if you want to learn how to top. Reading a room, picking up on those nuances of nervous habits that people have, that kind of thing. I'd gotten stunningly good at it, too. \"Sonya.\"\n\nHe paused, glancing at me, and that's when he swallowed a little nervously, in a way that made me feel pretty damned good, if I'm being honest. \"I'm Ryan.\" His answer was so soft and he lowered his eyes again in that way that made my blood race, that way that made me think, You're definitely a good fucking boy.\n\nWhich was immediately followed with the thought, I need to get out of here. I need to get out of here and then use a vibrator for a round or two until I think straight.\n\nBut I couldn't resist one last indulgence. Of course, I didn't leave immediately. I asked him who he worked for, and the answer turned out to be Nathan Faulkenberry's pharmaceutical company. And that was an answer that made me smile happily, with the thought that at least he had someone like Nathan looking out for him. But it was torture, watching him, when he would look down, even his eyes so submissive. He bowed his head in this way that was so damned cute and made a girl feel all the more protective.\n\nSo, I did something a little bad. It wasn't horrible or anything, but it was still the kind of thing that made me question myself later when I knew my own reasoning behind the action and that reasoning wasn't innocent.\n\nIt was when we stood from the piano together, with him following my lead, and his eyes were more alive with humor after talking a little bit. I felt a little proud, actually, of how he'd gotten over some of that anxiety so well when that definitely wasn't an easy thing to do.\n\nAnyway, it was when I was looking up at him that it sank in just how much I liked him. Of course, it was Courtney who had a running joke that it was bad luck for guys if I decided that I enjoyed them. It only became more pronounced with how much I enjoyed how he was taller than me. It wasn't anything new for me when I was a small statured person, even with my heels, but it was something that turned me on, the thought of a male submissive being bigger... and making him bow to kiss my boots anyway. Mmm.\n\nThere just wasn't anything like the kinky joy of that.\n\nI was getting ready to say goodbye to him... and I dropped my car keys instead, in a gesture that wasn't innocent with someone that submissive in behavior.\n\nBecause, of course he knelt down to get them and he didn't even think about it. People don't think about those little actions in my experience, not when they're kneejerk reactions. He just lowered down and picked up the keys, the action placing him right over my boots for a moment.\n\nOf course, that was when it caught up to him. His eyes traveled up and lifted to mine for one moment, just a second, but it was enough to give me that rush of dominant satisfaction, especially when he swallowed, when he seemed just as affected by this as I was. And it was a moment to make me realize he was as affected as I was.\n\nIt felt like it was over all too soon when he stood back up and I had to give myself a bloody reality check, reminding myself that it was one thing for a guy to be into a domineering female and another altogether to be into the kinds of things I liked. \"I'm klutzy sometimes,\" I said with a small smile, trying like hell to rein in whatever hormones were giving me this much fucking trouble.\n\n\"I promise it's not noticeable.\" His voice had a hoarse quality to it that made me smile wider, but I didn't want that to come across as making fun of him when it was far from that.\n\nSo I touched his cheek and he froze, his eyes wide on mine. \"You're too kind. And thank you, love.\" The action would be a lot better and more effective with latex, to be honest, but it was still enough to give me the fun of his shock. I couldn't keep from a grin and then gave him a soft kiss on his jaw.\n\nYou need... to get the hell out of here, girl, seriously. That time, I finally listened. I waved goodbye and that was the end of Hall's Christmas party for me.\n\nIt gave me a little bit of regret when I left though, the thought that I wouldn't get to see him again. But the truth was I really didn't think he'd like me all that much. The other truth was that it was hard enough to say goodbye that first time and I didn't think I'd stay away from him if given another chance. If he showed half of an interest in learning the ropes, then he'd end up in a good boy collar with an emotionally unavailable Dominatrix holding a riding crop beneath his chin to teach him to meet my eyes when he begged.\n\nYeah, and then you'd fuck up the poor guy's sensibilities with the rest of what you'd do.\n\nOi vei. I did what any girl would do. I called a girlfriend. I called Courtney and asked her what she was getting into that night, in the hopes that it was something that could make me think again.\n\nOf course, I didn't tell her what was really on my mind, even if she was someone who would definitely get it. The thing was I was too much of a closed off person and too uncomfortable with showing a sense of weakness. When you grow up in a quiet household and have to be the one who sticks up for people who would rather stay content in pacifism, you learn that opening up to anyone isn't what you should go with. It's vulnerability.\n\nI didn't allow myself that kind of vulnerability. So I kept even him to myself, instead asking her what she was up to that night.\n\n--------\n\nRyan\n\nDo you know, for that first bit, I wished I'd run into her again? It never once occurred to me that I should have been hoping for the opposite if I wanted to keep my freedom and it was a few weeks before I would see her again.\n\nI was writing my heart out, too, but here was why. See, I went to write more of my male Dom and female sub romance stories and I couldn't do it initially. I couldn't suppress the desires that I'd been suppressing for years. They wouldn't stay down and leave me alone after running into her.\n\nThe goddess. Holy hell. When I'd bowed to get her keys and realized the action placed me right over her knee high boots, it had been like finding myself lightning struck. It wasn't just those, either, oh no. No, see that would have been a little easier to deal with, but this was much more than just that. It was the way she was so small and held her head so high, as if she deserved to wear a crown. It was the way her eyes were reserved, keeping some part of herself back, even while she controlled the conversation. And she had done that. She had asked about me in such a calm voice that it commanded an answer.\n\nAnd then the real killer part? When I'd knelt and looked up at her, there'd been this scent of her, the hot, thick, arousing scent that was purely feminine.\n\nJesus, it was two weeks later and it still got to me. It made me shiver anytime I thought of it and then sent shocks of discomfort down my spine with the images she inspired for me. I'd first realized these kinds of desires back in college when one of my girlfriends had gotten drunk and frisky one night. She'd shoved me back across the bed and been aggressive in the best kind of way. Sometimes before I'd felt this sense of insecurity when having sex, a kind where I wondered if what I was doing was what the girl at the time might like at that moment. Some girls liked being worked up and teased, being edged for instance. Others didn't. And sometimes it changed from night to night.\n\nShe hadn't let me wonder that night. No, she'd sat on my face and pulled my hair, looking down at me to say things like, \"Work your tongue harder.\" And I'd discovered a whole host of new fetishes I wasn't entirely okay with.\n\nSo I'd been writing to escape it, except I couldn't escape and I ended up writing more on those stories I never shared with anyone. I had to get some of it out of me just so I could put the atmosphere in my usual romances. If I didn't get it out of me, those other romances that were a proxy to write these desires felt too hollow and didn't come out correctly. Don't think about her. No, don't think about how she was a goddess I'd love to bow to, one who looked every bit like she'd let me know exactly how many fingers to use to pleasure her, in great detail so that my world spiraled into lust.\n\nI opened the writing app on my phone in the coffee shop I sat at, looking around for a moment with that twisted, wicked little thrill I got to be around people and to lose myself in images. I had been writing on those other fantasies the night before and maybe my muse would let me write one of my proxy stories.\n\nThank God, I was on a female submissive part. That seemed safer than the male parts at the moment. I swallowed, thinking, and then finally went with something that was close to me at the moment.\n\nThe truth was, it had always made me uncomfortable. It had always made me wonder what the hell was wrong with me, that I might need to be guided, especially when it came to fucking, of all things. Females in today's day and age? Damn it, we were supposed to be strong and independent, right? It wasn't supposed to be like this.\n\nWe definitely weren't supposed to be fantasizing about a patriarchal over-the-knee spanking... were we? And yet... I lay back in my bed, my sun dress riding up, feeling wicked. My thong was sheer as could be and when I pressed my fingers to my clit, I shuddered after the thoughts that he'd inspired after just one conversation. The hot scent of sex made me feel slightly like a narcissist, when it smelled goddamned amazing, even if it was the scent of my own arousal. When I stroked farther down, my pussy spread open all too readily, slick from nothing but fantasies that I was losing control of.\n\nHow bad could it be? Just to try it, if given the chance? But of course I already had the answer to that.\n\nThe worst that would happen would be that I liked it. A lot.\n\nAnd yet, my body didn't really much care about those thoughts. I moaned with the sensation of hot slickness beneath the mesh fabric of the thong, stroking myself harder, imagining my pussy splayed open after he got done with me, when it would be humiliating for him to know how horny I was for him.\n\nIn my mind, all I could think of was my new muse and how her pussy might look with her pleasure. Would she let me touch? Or would she tease instead, making me watch while she stroked herself open like the girl in my story? Maybe she'd chain me just far enough away from her while she did that last one that I just barely couldn't reach and then she'd demand I begged to get to taste her. I'd do that, too. Jesus, if she was in front of me, her lips flowering open when she stroked a finger up her core, when that finger came away drenched and the scent filled my nostrils?\n\nOh, yeah, I'd beg.\n\nI stroked a thumb over my lips, glancing up when I took a drink of coffee, and couldn't keep from smiling with that sensation of playful mischief. The other people in the coffee shop were just going about their own days. A few college students sat silently on their laptops, doing a paper maybe.\n\nI shifted and hid an outright grin, then went back to the story, thinking of other images.\n\nAt first when I stroked a hand up to squeeze my breast, it was this soft touch, but then all I could think of was how deliciously rough he might be. So I squeezed harder and couldn't hold back the moan to the thought. I swallowed and shifted my hand upwards to my throat, curling it there without squeezing. All I was thinking of was how he'd brought up collars, how one might feel, but the action made me think of both how a collar would feel and how his hand would feel.\n\nRough. I moaned again at that thought, when even his kiss had a touch of roughness to it. The twisted thing? My discomfort was something that was, well, kind of exciting in its own way.\n\nAnd wasn't that the truth? Jesus, I'd masturbated furiously after meeting her and the discomfort and humiliating thoughts only made it all the more exciting.\n\nThere was something about the self shame that made me thrill, that made me feel like the orgasm was going to be harder than ever. I stroked my fingers all the faster, furiously so, and couldn't keep back the fantasy anymore, of being grabbed and forced forward, of his hand slapping down in a strict blow.\n\n\"From here on out, you have to blame the fates for whatever happens.\" I jumped at the sound of her voice - misbehaving, again - and then went still when I looked up at her, went even more still when my eyes lowered again... down to another set of her boots.\n\n\"I'm sure Clotho would attempt a disagreement, but unsure that she would win,\" I said quietly, in a kneejerk response that I was actually rather proud of.\n\nSonya laughed above me, still standing, and it was a light, playful kind of laughter. The sensation of looking up to her felt more than right, too, frighteningly so. Jesus, my mind just kind of quit working when I so much as looked at her that way. Or, rather, it kept working, but thought of things I really wasn't sure how to process. \"See, this just isn't fair, when you're cute and charming.\"\n\n\"Oh, no, now I've set a precedent and can only fail from here.\"\n\nShe laughed all the lighter and then glanced down at her purse. \"Damn it. Here, this is my card. Will you do me a favor and get a Mocha with an espresso double shot? I left something with a friend and it won't take me a moment.\"\n\n\"Of course.\" She had this way of so casually asking, in such a confident voice, that it made me stand up and place my phone on the table without so much as considering. It was only afterwards, when I took her card, and she looked up at me, that it sent these strange shivers through my body. There was a kind of disconnect to suddenly looking down at her, to realizing I was larger than she was and then to seeing the cool, speculative look in her eyes. It was something in her smile, maybe, in the way it was slightly hidden again.\n\nI took her card and went to order for her while she left for a moment, and didn't even notice when she came back in. When I turned around, though, she was already sitting at the table I had been sitting at, her legs crossed casually and she watched me with that small smile again, that one that sent a kind of frisson down my spine. So small. So delicate.\n\nSo dangerous. I didn't know what made me think that last one, but God, I liked the thought of it. She had her hair in a braid and that braid was twisted in a coil. There was something arousing about meeting her eyes and then lowering my gaze while I took her the coffee she wanted.\n\nThere was something even worse about the way she touched my hand, so calmly and with such confidence. \"Thank you, Ryan.\"\n\n\"Of course.\" I felt winded, breathless. The goddess.\n\nShe leaned forward when I sat down. \"Sorry about being intrusive. I was with some other friends, but to be honest, they're talking about this romance author they're in love with and seemed content to keep to themselves. Arguably, the stuff is pretty well written for the content they're reading.\"\n\nI had that thrill of misbehaving again. \"Pesky romance authors.\"\n\n\"True story. They're a bit of an odd group anyway and she apparently writes this series and some of them post for free. I don't know.\"\n\n\"Well, yeah, it's like crack. The first hit is always free.\"\n\nWhere was all this charm coming from? I didn't know what it was about her, if it was just that I felt comfortable around her after we had talked before, when I so rarely felt comfortable around anyone. Whatever it was, I was glad for it, especially when it made her laugh so readily and that laugh was gorgeous. Hell, all of her was gorgeous.\n\nSonya. The name of a goddess. She had this exoticism to her face, in the eyes specifically, and her curves were... Wow and then, of course, don't get me started on her boots. My brain short circuited again. \"But maybe less dangerous than that, too.\"\n\nI laughed. \"It depends, sometimes.\"\n\nHer eyes danced with humor, but that was when one of her friends found her in the coffee shop. Sonya watched the door open behind me, drinking her coffee so casually. I didn't think I would ever forget the image, when she was so at ease. Because her friend came up to her, another female who wasn't anything like Sonya. No, this one had far more emotion in her face than did my goddess, and her eyes had a familiar nature about them, one that made me shiver, made me pause. The world turned surreal for a moment and I didn't hear all of what her friend said because the first part made me wonder what series of events led me to her hand.\n\nBecause it started with, \"Mistress Sonya, we're done talking about Kara Rhys, I promise. Kate left, but I still have a little while. Do you want-\" And my pulse pounded in my ears.\n\nMistress Sonya. Her eyes stayed on mine for a long moment to gauge my reaction, her lips curving upwards playfully. How many ways were there to take that title? I tried to think of any except the immediate one that came to my mind, after years of suppressed fantasies, but couldn't think past that. Sonya looked away to answer her friend and her voice had a quality of stricture to it. \"Go on to the book store and look without me for a moment, little pet. I'll be right there.\"\n\nLittle pet. God, it just got worse. Her friend grinned and waved back at Sonya, who stayed just as calm as ever when she nodded in answer. Her eyes went back to mine, while I wondered what world I had found myself in, how I'd managed to play off years of kinky writing from perspectives that weren't my own and somehow found myself drawn to a real life scenario where I couldn't fake very well at all. People had been wondering so much as my gender for a long time in writing.\n\nHow did I end up sitting across from her in real life? Later, I'd have to think of the philosophy in that, how it was almost poetic that people could hide behind pens, but not when forced face to face with desires that we tried to run from.\n\nSonya broke the quiet first, so easily too. \"Well, that wasn't anything how I planned for any of this to go.\" And yet, she seemed so unruffled by that fact. Her eyes were still so light with playfulness and her voice was still so calm. I had the stray thought that it was a quality I needed to add to my male Dom in a scene, that he would be able to easily go with a spontaneous curve ball. I couldn't. \"Ryan?\" Her voice was quite gentle and I lowered my eyes to her coffee cup.",
        "\"Yes?\" Mistress Sonya...\n\n\"Would you like to go on a date with me?\"\n\nI shuddered. I could really use a Severin right about now. Except... The ending of that fucking book was shit. I hated that book. I swallowed, lifting my eyes to her, wondering at the surreal pins and needles sensation that crawled up my arms. \"Yes, please.\"\n\nShe leaned forward, her smile growing, and that's when she hammered the nails in the coffin. \"Good boy.\" Her voice was a purr of pure sin.\n\nI flushed with a kind of painfully aroused warmth, so much of it that it made me a little bit afraid of where this might go. Because I had a feeling that once it started, I wasn't going to touch the brakes and the truth was that I had fantasies, but didn't quite know enough to say where I'd stop if she was the one who started. My desires... Let's just say that sometimes I would get done writing these days, after having been so inspired by her, and I'd swallow in fear at those writings that I didn't share with people, the ones with male submission.\n\nOf course, it had to get worse, too, when my mind decided we were going to be a little suicidal, as well. I opened my mouth and all I could think of was that I had to talk about something else for a thought, when I was feeling a little wild. \"Do you think they'd be disappointed if they knew Kara Rhys was a guy who leaned to the S side of things?\"\n\nSonya froze and then she glanced at my phone where I'd sat it after she'd caught me writing. Her smile widened thoughtfully. \"Perhaps Clotho and I should have a few words together. You're right, by the way, to doubt that she would win. Ryan, would you like to come to the bookstore with me, if you aren't doing anything?\"\n\nYou should say no to that. \"Yes, please.\" Oh God, you weren't thinking of what Kara Rhys writes or of what you just admitted to, were you?\n\n\"Come on. Let's talk about how a date might go between us while I watch after one of my kittens.\"\n\nUm. Do you know what you're doing?\n\n\"Okay.\"\n\n\"Good boy.\"\n\nI definitely didn't know what I was doing. I did feel a little like I could wag a tail, though, if I had one.\n\n--------\n\nSonya\n\nHear me out.\n\n.... Hang on, I'll think of a defense. Just as soon as I get past how freaking cute he was when he got my coffee. His dark hair was tousled again. It was tousled again. That evidence of his nervous habit combined with whatever he was doing when I first saw him? Oh, my God, and now it was only better when I had a rather strong suspicion of what he was doing after what he'd revealed. Because that was another thing. It was that same look he'd had when he'd been playing the piano, that same look that made me wonder what such a good boy would be getting up to in his free time, what world he might be lost in.\n\nOf course, once I realized that I had no idea exactly how good of a boy he was, I couldn't help but be all the more interested.\n\nStill, though, calling him one out loud was unfair, okay? It was unfair of me. But oh, my God, he really was. He gave me this adorable pause and glance when he realized I was already back and sitting at his table and when he'd come back, it'd been just as goddamned cute. He didn't hand my coffee to me, either. He sat it carefully on the table and his eyes had darted up to me, in one of those cues that were truly, obviously submissive, the one where a guy is trying to please you. It was one of those moments and vibes I'd learned to pick up on really well in my professional Domme forays.\n\nThose godawful thoughts had gotten their hold again, with the mental response of, Yes, you're very good and you need a cute collar to go with how good you are. And in my head, I was thinking of perfect collars for him. It couldn't be something too plain, no, not when he had just that perfect amount of playfulness dancing in his eyes. It had to be a pretty collar, but with just the right amount of leather badass appearance.\n\nBad Sonya. Very bad Sonya. He is not your Doberman.\n\n... Oh, but don't you want to think of him in a leash and a muzzle?\n\nDamn it, no, stop that. Even while I berated myself, I had a mental image of making him wear a neoprene puppy hood, red and black in color, and of how his eyes would get wide in humiliation. Of course, he'd need a cock cage too, while he was learning to focus on pleasing me instead of thinking of his own pleasure.\n\nI tried like hell to get back in control of all those thoughts, when I was far too endeared to him. Bad boy, this isn't good for your health.\n\nBecause, well, I had a decision to make and it wasn't helping that those last words of his made my mind kick into happy overdrive. Kara Rhys, the romance and BDSM female author who wrote exclusively male domination and female submission. And apparently was the most entertaining lie I'd ever discovered in my life.\n\nIt was just too perfect, all of it. I'd read some of his stuff, too, when Courtney and I had been going through top BDSM authors together, on one of our porn sprees.\n\nI sifted through the memories, thinking while I watched Ryan walk beside me in the bookstore. Millie waved when she saw me and I nodded to let her keep looking all she liked, when I needed to figure out what to do with the guy at my side, trying like hell to keep some of my own desires in check, to keep my control. I'd genuinely just been trying to ask him on a date.\n\n\"So, Kara Rhys?\"... Probably not the topic I should have kept pursuing.\n\nHe'd been looking through some of the shelves, toying with a necklace he wore, and he paused at my question, blushing furiously. \"Y-yeah.\"\n\nI smiled when his eyes had both that shy nervousness, but also that coy mischief again. \"I'm impressed. Some of that isn't light stuff.\"\n\n\"Christ, you read it, too.\"\n\nThat made me laugh and then I held my hands up. \"Only a little bit. And zero judgment. If I was reading it then, well, I'm a pervert too.\" I winked and his flush deepened. Male Doms and female submissives, indeed. By his own admission, he didn't even bat for either of those teams, if you feel what I mean. \"This is definitely an invasive question, so 'fuck off, Sonya' is a viable response, by the way, but is that what you were thinking of when you were playing the piano at Hall's?\"\n\nHe flushed, but his grin was wicked and I couldn't keep from a rush of joy at the thought. \"It's my social anxiety secret,\" he finally replied. God, he was blood red, but it was like he couldn't help but chase that anxiety thrill, either.\n\nYou aren't feeling pure things yourself, love. Right. Too far. Damn it, I was the controlled one. I hated the thought of my emotions ruling me when all my life I'd been told that females were the more emotional of the species. It made me rebel them when I had that thought again, that it might make me lesser than a Dom in some way. I changed the topic into safer territories. \"Everyone needs one of those. Along with running their hand through their hair.\" He paused in the act of doing just that, then shifted on his feet instead, stopping the action.\n\nYou want to know something else that was wildly getting to me about him? This was a guy who was a data scientist for a pharmaceuticals company. I wasn't too sure on how much he made working for Nathan and I didn't really care because that wasn't my point. The thing is, I knew it was logically probable that he made more than I did and here's why that got to me.\n\nSee, he was wearing blue jeans, tennis shoes, a loose Cowboy Bebop t-shirt, and a Star Wars pendant.\n\nIt was the kind of thing to make me smile curiously with the thought that this was a guy who did not fully live on a place called Earth. No, no, see, this was a guy who was smashing the social rules like Harley Quinn with a freaking hammer and he had zero idea that he was doing so. And that? That was a breath of fresh freaking air from the people who normally attended an event like Hall's Christmas party.\n\nAnd he wrote BDSM romance as a side hobby. Why not? It made me smile. I opened my mouth to try to bring up literally any other topic that would be safer waters than the one I'd initially chosen. There was no one else to blame for that first part, but I intended to get back to just dating talk.\n\nAnd then Millie happened again. It was already purely an accident that I ended up on a date with Millie that day. She was feeling antsy and she used me to make her world feel steady, so it was one of those light relationships where we both knew it was for sex therapy. That morning I'd made her wear cat ears and a butt plug tail, so that she could crawl at my knees while I held her leash, flogged her, and made her eat me out before she was allowed to cum from the flogger.\n\nShe was right as rain by the time we reached the book store, but she had a strange form of aftercare that she preferred. Namely, she had to ask permission for things until she found her way back to reality and away from her subspace. She was holding a book when she came back to me and I knew she was mostly back to normal when she gave me this wicked grin with a wink. \"Mistress, may I?\"\n\nOut of the corner of my eye, Ryan turned still where he watched, his eyes immediately flicking to the ground, and heat flooded through me, obliterating every last one of those intentions to get back to safer conversation. \"Yes, you may. Now stop being ridiculous and go.\" But I ruffled her hair so that she laughed before she found her way away from me. Ryan jumped when I turned back to him and touched his shoulder.\n\n\"Do they always call you that?\"\n\nHis eyes were wide and it made me smile, feeling wicked with the slight amount of breathlessness he had. \"Yes. Once we've both established that we want them to.\" He shifted again and I bit my lip. God, I liked him and there are some silent cues that a girl would have to be blind to miss. \"Do you want to call me that? It's okay by me either way if you want that kind of date or just to go to a movie.\"\n\nIt was like one last ditch pathetic effort when the sexual attraction there was a blatant cry against it. You want to know how I am sure I wasn't crazy in thinking that? Because Ryan was quiet at first, but then, even with the amount of shyness he obviously had, his eyes lowered to my boots. He swallowed, and then, \"Yes, please, I want to call you that.\"\n\nThere was definitely a nervousness in that answer, definitely something that made me smile with the thoughts of him having that thundering heart sensation that came with deciding to accept an offer you really wanted, the kind that also kind of freaked you out. I couldn't keep from flirting a little bit. \"You don't sound overly sure.\" I smiled, trying to keep my touch on his shoulder to something publicly acceptable when all I really wanted to do was play with him right fucking there. He was so warm and I was having way too much thrill. Don't endear a Dominatrix's heart like that, bad boy. God, I really wanted to keep him.\n\nShut up, horny Sonya. You're still trying to get to know him better.\n\n\"Why don't you try saying it and see if you even like it?\"\n\nMy heart was going crazy in that wicked fun way. His eyes flicked to mine and he shifted back, but that only gave me thoughts that were all the worse. See, here's the thing about the shy ones, the submissive and sensitive types. There's a lot of Dommes who start out and still have this strange mindset of waiting for a guy to approach them. I think the confusion comes from thoughts of a professional Dominatrix, in the sense that someone usually does approach them to hire them, right?\n\nYeah, well, rule number one about when you're flirting with those shy and submissive types with those kinds of thoughts in mind is that they're, just to reiterate it, shy and bloody submissive. They're not going to do the approaching and expecting them to has always felt like shy person abuse to me.\n\nStill, though, you have to walk that line. You have to be careful. Don't be a bully or an asshole. You don't want to cross over into that bullshit, so you have to open a door, you have to leave it open, and you have to give them an excuse to go through it. That's another thing. If they can, in some way, blame themselves for having desire? They will.\n\nBut, still, they have to go through it.\n\nI gave him my most playful stare, lifting an eyebrow and tilting my head. His eyes went back to my boots and he went through the door. \"Yes, please, Mistress.\"\n\nAnd then he made a low sound that would always stay with me, one of those sounds that made me smile with the thought of, Sweet. I might have quit the professional thing, but I can still read some things. \"Good boy. Hold my hand.\"\n\nHe didn't even think of it in that moment. He just gently clasped my hand in his and it was only after the fact that he looked down and stared at where he held to me, so that I smiled. That's right. Nice to be free of the anxiety, huh? It really was, too. That had been something I did like about submitting. You could just obey someone and feel good about it without having ten stress fueled, precursor thoughts on whether or not it was what would please them. \"Ryan?\"\n\n\"Y-yeah?\"\n\n\"Let's message each other for it. If you change your mind, you can let me know and that's okay. We'll talk before we even decide when the date is, alright?\"\n\nHe looked back down and nodded. \"Yes, Mistress.\"\n\nThat answer made me pretty damn sure I'd lost the battle in trying to keep this vanilla.\n\n\"For now...\" I grinned. \"Do me a favor. Don't tell anyone who Kara Rhys is. Believe it or not, I know a few people into your stuff and it's... Oh my God, this is the best thing ever.\"\n\nHis return smile was shy in a very mischievous way and I laughed with a victory of teasing a good boy out of his anxiety for a moment. \"It is kind of fun, playing pretend all the time. Heheh. And I get paid for it.\"\n\nEven then, even after I eventually said goodbye to him that day, though, I thought about how none of that went as planned, but hey, maybe with the distance of messaging about it, he would be less shy and I could do some damage control. You know, keep it light, that kind of thing. Just because we'd both outed ourselves as perverts didn't mean that the relationship had to be centered around that. There's all kinds of people who indulge and then go back to an everyday relationship. I used to be a professional Domme, sure, but this was my first real approach to a male S type that wasn't a transaction. I wasn't entirely sure how this would go, but I had the hopes that maybe there could be some backtracking involved.\n\nWant to take a guess at how that plan turned out? I'll give you a hint. Mick Jagger couldn't have been in a band with a better bloody name.\n\n--------\n\nRyan\n\nEvidently, if you suppress a lot of desires for a long time, tease them with small amounts of release like writing kinks that are gender reversed, and then have them confront you all at once with a single invitation, it makes you suicidal. That's all I could come up with.\n\nIt had all gone to hell when she gave me that command to hold her hand. And I'd done it. I'd done it without even thinking too much about it. And here's why that's amazing. Do you know that sensation of excitement that you get when you go to hold someone's hand for the first time, that feeling of butterflies fluttering through your stomach when you look at a girl's hand and the moment feels perfect? See, that's my favorite way to describe that moment in writing.\n\nBecause I don't know that moment. Oh, I know all about the words and descriptors for it, but do you know what it feels like for me? It's the worst level of \"holy hell\" anxiety. Seriously, it's horrible. What if I'm reading those signs wrong? What if I make it awkward? What if I'm not supposed to? It makes it worse that my mind literally never shuts up and is pretty imaginative, so it can go through about a hundred \"what if\" possibilities and then the moment is over and, well, it's always disappointing then.\n\nBut she told me to hold her hand. And I just did it. You never realized how loud that anxiety could be until you were given a moment where it finally wasn't there. She told me to do it, I obeyed, and it felt right. It made me happy with the thought that I'd done what would please her.\n\nIt went from there.\n\nEvery conversation with Sonya only buried my coffin all the deeper. It was kind of amazing, if I looked at it from an outside perspective. See, Sonya had this quality of being open, soothing, and inviting.\n\nShe didn't rush her invitation to go on a date with her, she didn't pressure. No, none of that. The only person I had to blame was myself.\n\nIt started with the first conversation, too, the first one. She asked me how I was, asked me how I felt about telling her I'd like her to show me more about domination and submission. She was polite and perfect, a kind goddess. God, she would be. It would have been so much easier if she had scared me enough to make me run, too easy.\n\nAnd then she asked me how I wanted to go about our date. What I mean is, it sounds like you have interests in my domination side and I obviously do. Would you prefer that to have a prominence in dating right out of the gate? Some people do. I mean it genuinely as an open ended question. Any answer would be fine.\n\nI thought she shouldn't ask me that. And it turned out I was right. You want to know my answer?\n\nI would like whatever would please you.\n\nWhich was an answer in itself, goddammit. She teased me playfully for it. But of course, when you're such a good boy.\n\nAnd that. Every time she gave me those two words made me feel all the more ensnared, even while it made me feel a little messed up. I didn't want her to stop at those two words. Hell, I didn't want her to make it easy to earn those two words in some ways. I felt like maybe it would feel all the better if she made it difficult for me to obey her, if it was something a little more intensive than being told to hold her hand.\n\nThe second time was another conversation a few days later and that was another thing. She carefully kept our messages spaced apart and calm and she carefully gave me time to consider, to think of these answers in case I wanted to add anything or tell her anything else I could think of. Wise of her, really. I was one of those people who would have an argument and then think of nine other points after the fact when it didn't matter. Sonya made it clear that she did still think it mattered after the fact.\n\nYou've shown interest in my life. May I ask what sort of fantasies your own interests revolve around? You told me more about how you started writing, for instance. For me, I'll be honest, I'm not playful with guys. It's a little unfair actually, when I'm softer on the females who come to me for their submission needs. I'm not a sadist, but I'm not... nearly so kind to male submissives.\n\nThat made me shudder, but then all of this made me shiver. She brought up quickly how versed I was in some of these ideas, which made me smile when I considered how many nights I had spent reading erotica when watching what I liked outright made me feel too uncomfortable. And of course, she already knew I wrote these things. She'd been shocked to learn that I had never experienced the sensation of submission, when she thought I wrote it so well, something that made me pleased. I confessed how, in the end, my reading so much of it in my insecurity was what made me go down the route of being an erotica and romance author, after having daydreamed. Combine it with the poeticism I had locked inside of my head, along with just the right amount of self shame and, well, it truly went perfectly together.\n\nBut, she also noted, you do sometimes seem, ah, innocently versed, we'll say, when talking outright. Shy, is what I'm trying to say. Would you be willing to tell me how some of those shy fantasies go?",
        "You know, in hindsight, I really should have pieced together that her best friend was a kink friendly psychologist.\n\nI remember staring at the message for a few minutes, remember typing out the reply, I'm not sure I can tell you that, and then remember imagining her face when I'd knelt to pick up her keys, the way she'd looked down at me with that calm look, a hint of excitement in her eyes. I deleted that message.\n\nAnd wrote a real one. Want some of the phrases? Male chastity, leashes, training, behavioral modification.\n\nAfter that, I'd had to masturbate with the thoughts it gave me of what she might do to me, of what someone like her might make me do in the realm of \"behavioral modification\". I'd come back to her answer, feeling like a teenager with butterflies in his stomach when he got the attention of his crush.\n\nIt'd been an emoji in the first message, one that made me grin, one that made me feel like I was on cloud nine, when it was an emoji that implied being horny. Oh, but look at you. You did do your homework and you're hitting on all of my own favorites.\n\nThat made me... insecure. So soon after the images of her looking down on me while I could smell her heat in that position, I'd be lying if I said it didn't make me insecure. See, the truth?\n\nNow that I was talking to her about these things, it was driving my fantasies into a violent fury, and the end result was tethered in her. I wanted to please her. Even then, I already really wanted that. She'd just told me to hold her hand and I hadn't agonized over it.\n\nIt made me insecure to think of her having different kinky desires than I might have. I know it damn well doesn't make sense, but there it was. And I knew I wasn't a guy who was fully in touch with his emotions or whatever, but I did fancy the thought that maybe I had some kind of self awareness. Whatever self awareness was there even said that the reaction didn't make sense.\n\nBut it was there anyway. I scrubbed a hand through my hair and stared at my phone, thinking. And then I answered. I want your desires more than mine and... that concerns me in some ways. Those aren't all the fantasies but I can't deal with the rest at the moment. I want to tell them to you. It's just that right now, I'll be honest and say I haven't done anything like this, but I've wanted to. Badly. And I can't think past it very well.\n\nToo much? God, I was supposed to be a writer in my spare time. Some writer I was. I couldn't words correctly to save my life when I was staring into the possibility of all my darkest dreams, the same ones that plagued me so badly they'd kept me single for a few years now.\n\nHell, they'd kept me damn near chaste lately. The humiliating truth? I couldn't escape how submissive I was. The worst part about that? I didn't even fully know how submissive I was but however much was there was something ingrained, something that affected me even in my most vanilla relationship attempts. \"Where would you like to eat, honey?\" \"Wherever you would like, love.\" \"What would you like for Christmas?\" \"I would like whatever is less stressful for you, baby.\" I craved to please my partners. In every way and that included in bed. It was why I'd first started to read erotica that involved being told what to do, if I'm honest.\n\nThere were a few commands I couldn't follow though. \"Ryan... what if I wanted you to be rougher?\"\n\nI remember trying to, with a girlfriend who wanted me to try to choke her, but I wasn't sure what I was doing, and it didn't feel right. It'd messed with me, the thoughts that I couldn't please her like that, when that was something physically important to me.\n\nRyan... what if you're just crazy? That's how my thoughts went. It wasn't really a far cry either. A few friends of mine that knew about my Pop! Vinyl collecting addiction definitely thought that and, I mean, there were all the people who thought I was batshit over my love of Calculus and Statistics. I hadn't crossed into John Nash's A Beautiful Mind territory and that was something, though.\n\nI moaned into a hand, a sensation of dread starting in my stomach when I thought of Sonya. What was the worst that could happen? I didn't want to think about that too hard.\n\nBecause the worst that could happen was that I'd find the most fulfillment when she showed me a few things about real submission... and then would never be able to go back to vanilla at all when I knew another option was there for me. I was already having a hard time in my relationships when I wasn't what I felt a guy should be. I wasn't assertive, wasn't decisive. I hadn't even chosen my own suit for my job interview. Part of me sometimes wished I was gay in any capacity, but that had been an experimental no go back in college.\n\nShe kept going, so gently, so soothing about having me confess to my goddess. It got worse when I started to think of those moments in that manner, when they gave me kinky visualizations of kneeling at her altar while she was crowned, sitting high in her throne, the small statured image of female confidence. I imagined her makeup being what it was at the Christmas party for those thoughts, too, when she'd worn something both classy and elegant. I knew from our messages and her social media that she was my age, 28, and she looked like she could be a pinup model, with her high cheekbones. She used her makeup to add emphasis to her features, something that made me shudder in desire.\n\nAnd those boots. The thought of those boots definitely made me confess more. She asked me things I wasn't into. Tell me the hard no things and behave yourself when you've been such a good boy so far. Don't withhold from me because you want to please me so bad. If name calling isn't a turn on, for instance, then tell the truth.\n\nName calling. I shuddered with more rampant fantasies. No, name calling is... good. It's good. Uncomfortably good. The sissy thing is a hard no for me, though. I was only sending a text but it was one that made me blush harder than I'd ever blushed in my life. Scat. Anything illegal. That's all I can think of though. But it might be due to ignorance.\n\nShe could tell when something bothered me, too. I don't know how she was that good at reading people, but she knew, even if it was over text and she didn't have my inflection. See, I knew she could tell because she rewarded me. Good boy. I know that wasn't easy. She sent me a devil emoji.\n\nAlong with a picture of her heeled boots that day, where her legs were crossed in an office chair. Well, one thing I know for sure already. You enjoy these.\n\nIt had taken me a moment to collect my scattered thoughts enough to adequately flirt back, to tell her those were my favorite ones yet and how much I really did love every last pair she wore. She'd teased me back. Even your compliments are already submissive, you good boy. All you lack is a little training.\n\nBack and forth. Jesus, I buried myself. I couldn't even get much writing done at all anymore because when I went to write, my characters would be filled with too much of my insecure projections, too much of all the emotions I couldn't face. The writing was terrible and I had to rewrite five times before I got any of it correct, thinking that the readers who liked my stories were awesome and I didn't want them unhappy or displeased with me. I didn't like making people unhappy even in that capacity. Full circle. Fear chased fear and it infected my pen. Fortunately, it didn't touch on my day job.\n\nNumbers were always wonderful that way. Their science never cared much about emotion one way or another. My story characters might have had to wait for a little while to tell me their story when my muse was a bit confused, but my spreadsheets remained quite organized.\n\nEventually, though, Sonya decided she tired of the distance. After talking, would you like our date night to have a scene where I show you more?\n\nOh, no. I was resigned by that moment. This was happening and I couldn't goddamned stop myself. I'm sorry if this is an infuriating response. I trailed my thumb around the edge of the phone, thinking of past girlfriends who would all think it was definitely an infuriating response. I would prefer your decision, Sonya.\n\nMy heart thundered in fear that I might displease her with some of these behaviors... and then it leapt when she answered. You're too much of a good boy for your own good. I'll have you know that I told a friend that I had an interest in a guy and she said, \"Poor thing,\" on your behalf. I think she'd really pity you if she knew how bad it really is, baby. I would love to make the decisions, little boy toy.\n\nI'm just not sure how much you'll enjoy it when I do. Friday. Six. I'll send you the address.\n\nI was grinning, elated. She hadn't been infuriated or displeased! God, all that terror and all that thundering nervousness of answering those questions but she hadn't been irritated with my nonsense. It made me feel like I could wag a tail again.\n\nAnd then the dread sank in. The rest of her words. One of her friends pitied me and she'd outright said that she was not nearly as nice to male subs as she was to female ones.\n\nRyan. Are you sure about this?\n\nI stared at my phone where I hadn't even been able to effectively write some of this out of my system recently and the grin faded... and I moaned again instead.\n\nWhy was I like this?\n\n--------\n\nSonya messaged me the morning of Friday and took mercy on me, while I still had thoughts of my orgasm from masturbating the night before, where I imagined how this might go, where I imagined her perfect pink lips and sinfully confident purr while she whispered, \"naughty boy toy\". And I was grateful for it when I would have been a mass of social anxiety when I started to realize what I was doing. For instance, if she'd left me to me, I would have gotten home from work to get dressed and stopped in a panic when I realized I hadn't considered what to wear to dinner with a Dominatrix after years of fantasies, stories, and freaking self denial.\n\nSonya flawlessly kept me in the subdued state of her \"good boy\", messaging me to say, I have certain preferences for my male subs and since I would like to talk about it more with you, I'd also like you to try some of those preferences. Wear the jeans you had on at the coffee shop, please, and a black collared shirt or a black v-neck. Tennis shoes, as well. It sets a tone when I would like it to be a more casual date.\n\nJust the text for my clothes made me think, Uh oh. Because it sent hot arousal flooding through me, along with a deep appreciation for Sonya, that she would be so considerate and give me these kinds of commands. And, of course, that thought made me shift in my seat at work, in discomfort as to how much gratitude I felt for her, goddess that she was.\n\nEven so, I was second guessing all of this when I reached her door, when I held a present for her. It wasn't a date kind of present or anything like that. It was more of my thanks that she had spoken with me about things that no one else ever had, that she had made me realize I might not be so alone, but standing at her door, a lot of insecurities overwhelmed me again for a moment. What was I doing? She was stunning and I was a bloody data scientist with all the presence of Bruce Banner and a lot of issues dealing with desires I couldn't face.\n\nShe had obviously faced them. She had obviously walked all over those desires and made them heel to her whims, something that made me smile to think about.\n\nI froze when her door opened, when she caught me, and then stayed frozen with the sight of her.\n\nHer eyes sparkled with wicked teasing at having found me like an idiot outside her door, but even better? She had dispensed with her suede boots and her classy work attire. She had her hair in a high, strict ponytail, long and straight down her back where her chin was lifted as always and she wore a tight fitting strappy halter dress, one that was sinfully short. Her hands were clad in latex, elbow length gloves.\n\nAnd her knee high boots were leather ones, shining so that my mouth watered. \"I briefly considered starting with our dinner date first. You'll have to forgive me a brief moment of selfishness, little boy toy, but all those conversations made me excited, too.\n\n\"And I thought you could use a bit of incentive to persuade you to stay.\" She stood to the side, her smile that of my personal demoness, her stature still that of feminine royalty. \"Won't you talk with me, Ryan?\"\n\nShe claimed she wasn't a sadist and I abruptly prayed to god that was true. If it wasn't, I felt like I might have been in real trouble.\n\nI felt like I'd have had to learn to suffer really quickly if that was her pleasure. I couldn't keep from taking her hand, even while I wondered if I wasn't crazy. Christ, I had told her I had fantasies of my own chastity... and she had those, too.\n\nSonya laughed lightly at whatever my face must have looked like when she closed the door behind me. \"Of course, I think I might have overdone it a bit. That look on your face has a way of making a girl feel all the more confident, love. And what's this?\" Her touch was discreet when she trailed a latex covered finger up the back of my hand where I held her present.\n\nRight. Gift. Thank God, gift. It was something else to think of, something to pull me back to reality. Jesus, I was an introvert but I thought I'd gotten over these awkward moments years ago. \"Oh. It's a present.\" I paused, gathering my thoughts for the correct words. \"Just as a thank you, I mean, for having talked with me about...\" I couldn't finish the rest of the sentence.\n\nShe took mercy on me and gently touched my wrist while I tried to think through the hard on she gave me with that sleek latex stroke. \"You're very welcome and too sweet by half, good boy. But don't think presents will make me go easier on you.\" My eyes shot to hers with a fear that it might come across like that, but she was only teasing. Instead of the concern, white hot arousal spiked through me when the threat registered. It did distract me from the shyness when she opened the gift bag and lifted out her present.\n\nFor a moment, she blinked, but then I got an expression from Sonya, one I would learn to enjoy more than sunshine. It was a rare expression, you see, although I wouldn't realize it until later. Sonya, as I had already started to pick up on, was a reserved person. She was always distantly polite and she read her audience well, giving them what she realized they needed for a response. For the first time, I got something that wasn't any of that. It was a full grin across her face, rather than her flirtatious smiles that were as much to soothe me as they were an expression of her pleasure.\n\nIt made her look younger and the gift spoke as much about her. During her bookstore proposal, my anxiety had been at a high, which meant I had been hyper aware of her. So when she'd paused in front of one of the bookstore's snowy fox stuffed animals, it was something that had stood out for me. She had trailed her fingers through its fur and gone on because of course the Mistress Sonya wouldn't buy something like that for herself. Her laughter made me grin, but she raised her eyes to mine with a spark of mischief, setting the little fox on her entryway table. \"Wicked boy toy. Come here.\"\n\nI laughed all the harder, broken from fear for the moment with how pleased she was, when she grabbed me by my hair, tugging me alongside her, and her smaller stature ensured I had to bow my head for her to better hold me, but the playfulness of the gesture soothed over all the self loathing I'd been having an issue with. Combined with her happiness, it was intoxicating.\n\nAnd then I saw the hard backed chair in the middle of the floor and paused so that she pushed me forward with a wicked smile and I ended up falling back in the seat, heart suddenly going haywire. \"Sit down so we can talk, baby.\"\n\nIt turned out that repressed desire had a powerful amount of control, especially when I looked up at Sonya and realized I might have seen the soft side of her for a moment, but she would make sure I remembered the Dominatrix more. Her eyes glittered with intent and she didn't really give me much of a choice. She was smaller than me, yes, but she was sure in her motions where I was so insecure in my own desires.\n\nIt was about the time I saw the riding crop, the cuffs, and the blindfold that everything really started to sink in. The sensation only intensified when she watched my expression with a wicked gaze of her own. \"Tell me the safewords you chose again, Ryan.\"\n\nJust talking. My mouth was dry with the realization that I had finally found myself in a scenario where I would need a safeword, where I would be discussing this at all.\n\nThe goddess, Sonya. People always asked how things ended up the way they did. To hear her tell the answer was something fascinating for me later, when my own perspective was nothing like what she would reveal. For me, the truth was that she was that good and that careful. She soothed with a touch of latex pleasure, a kind of Novocain that numbed even me so well I would be willing to sit in that chair. \"Red and yellow,\" I managed.\n\n\"Good boy.\"\n\nI moaned and lifted when she stroked a latex clad hand up my cheek, waves of heat crashing through my abdomen, ones that were filled with images of kneeling to get her keys when I'd been misbehaving. It turned out that I knew a lot based on reading and writing.\n\nAnd yet, I was somehow totally innocent to the sensations of what it would be like. I had to misbehave in front of a goddess to learn and I was a blank slate for her to work with.\n\n--------\n\n\"You were also a good boy for me with the safety rules I gave you, yes? Someone knows where you are right now and when you'll call them?\"\n\nI stared down at her hands where they so delicately wrapped my wrists in leather cuffs. It was a strange thing, that I had looked up these images and even actually had watched a video or two when I felt really bold... or drunk. So I knew what they looked like. But the sight of them on my wrists specifically made me shiver in a bit of shock. \"Y-yes.\"\n\n\"First, let me fix your manners. It's 'mistress' to you when you bow. Be a good boy and try again for me, won't you?\"\n\nMy eyes snapped to hers and the flush at my neck burned hotter. My voice sounded so very far away when I answered her. \"Yes, Mistress.\" Was it just me or did the world somehow seem slowed all of a sudden? My mind took in every small detail even while my thoughts went far too fast. The rush through my ears felt like the crescendo to the guitar intro in Dire Straits' Money for Nothing. I exhaled with that word of her title still tingling on my lips, but Sonya smiled in approval.\n\n\"Good boy. That was pretty. Respectful, too. You'll find I can be at least a little kinder to respectful boys. Now, show me your phone. Prove it to me that you sent the message with the address.\"\n\nI flexed a hand in the cuff - they feel a little badass - and the action seemed surreal, but I lifted my phone for her with the message to a friend of mine. She met my eyes so easily, with all that security, and I was the one who looked away first, my eyes lowering back to her boots, so that she chuckled and scratched behind my ear, as if I were a dog. Her touch was just as delicate when she checked my phone. \"Good boy,\" she whispered, kissing my knuckles. \"Always be safe for Mistress.\"\n\nJesus. I shuddered, but my voice escaped me on its own again. \"Yes, Mistress.\"\n\nI was so hard that it was painful and she hadn't so much as sexually touched me. It didn't get any easier from there either, when she twisted my wrists behind me by the cuffs, chaining them together behind the chair. \"I'll be kind and leave your ankles free for now, so long as you keep them at the chair legs like so.\" She fixed me so that I was spread slightly, although not overly wide, not uncomfortably, but definitely enough for just a little bit of vulnerability. What was worse was how methodical and calm she was, how she stroked my hair back after she got a collar. Her voice was breathy at my temple, when she gently kissed me. \"A few basics, for some atmosphere. Besides, a man in a thick, leather collar just does something for me. It feels like having leashed violence under my fingertips.\"",
        "I couldn't keep from exhaling in need, when she had my head tilted back and was standing behind me to fit the collar to me, so that I was looking up at her. Her eyes glowed with pleasure and she fixed the collar nice and tight, making it clear that it wasn't going anywhere until she was done with her boy toy. Just talking.\n\nFuck me, I kind of wanted every conversation to come like this. \"Talk with me, baby. How does it feel?\"\n\nBut there was a smile in her voice after that moan, when she knew the answer perfectly well. \"Good.\" My voice was hoarse. \"It feels... it feels so good.\"\n\nShe laughed above me. \"You did mention a favorite fetish of mine. Leash training, when... well.\" She crooked a graceful finger through my collar's ring and I lifted in the chair, arching against the cuffs that held me her prisoner and the end result was a desperate breath with the fire it gave me.\n\n\"Yes, Mistress.\"\n\nI never wanted to stop saying those words.\n\n\"Of course, there are other places to put... leashes.\" Her hand was the gentlest, most teasing press when she trailed it down my chest, her other hand cupped beneath my chin, right over the collar. My pulse thundered like a drum in my ears, so loud, after we'd talked about my being open to sexual touch for the first time we tried this, and then she kept stroking that hand down, down...\n\nI jolted when she reached my cock, when her touch was expert, just enough to be a tease, and holy hell, was that animal growl from me? For a moment, I was terrified I was going to embarrass myself right in her hand, when I'd never been so fucking hard in my life. My vision went hazy with that touch of hers.\n\nBut then she just delicately withdrew, laughing low in my ear. \"Like connecting one to the chastity cage I have for your cock, once we get to know each other a little better.\"\n\nWhat else did you answer to that? \"Yes, Mistress.\"\n\nHer laughter turned slightly louder. \"Good boy toy. But you had other fantasies you wanted to mention, too.\"\n\nMy insecurity was no longer louder than the roar of intensifying lust. It'd been a joke to think I'd keep the rest of those fantasies from her. \"Y-yes, Mistress.\"\n\nShe stroked my hair again and I couldn't keep from leaning back to that touch, from enjoying it when it was so approving and soft. Her gloved hands felt sleek and I closed my eyes briefly before I met her gaze, praying to a goddess that she would be nice to me.\n\nI didn't think I could say either of those safewords to stop her if she wasn't. It made me ache, how wonderful it felt to have her look down at me with that kind of approval and security. \"Still so nervous, aren't you? Let's see if we can help you with that. I'm not usually too partial to blinding my male submissives when most of them are just so... visual. But let's turn out the lights for you for a moment.\"\n\n\"N-no, please?\"\n\nSonya turned and her eyes were cutting. It was the most subtle change after I couldn't help but beg with the thought of being denied the sight of her when she was exquisite to look at. What was horrible about it was how she didn't glare. She didn't so much as make any sign of violence with her displeasure. That gaze was merely glacial and I shuddered when she lifted the riding crop along with the blindfold. \"You will learn that is a dangerous word for you. It would be easier if you stopped using it, love.\"\n\nI hated the thought of displeasing her, but I didn't realize how awful it was until right then. She didn't have to punish me to make the thought sink in. No, it was enough that she was the first person who made me feel not so alone, the first person to somehow get me to confess to her. \"Yes, Mistress.\" I lifted my head when she raised the blindfold and it helped that the last thing I saw was her smile of approval again. \"I'm sorry.\" It was fearful, pathetic actually.\n\nHer hand was gentle when she fixed the blindfold and she stroked my hair again delicately. It was an action that made me think I had an unrealized hair petting fetish. \"Poor little boy toy. How long have you had your fantasies, Ryan?\"\n\nThe crop scattered my thoughts when her voice came from in front of me and I felt the small slapper of leather trailed up my cheek and down my jaw. I shifted, shuddering again in the chair, and the shock of pleasure I had from the sensation was enough to make me answer honestly. \"Since seeing Olivia Newton-John step on a cigarette and place a red high heel up to John Travolta's chest.\"\n\nThe crop paused its stroking and she laughed above me, a full sound of her pleasure that made me smile, then breathlessly laugh along with her, when it gave me so much relief to have regained her happiness. \"I suppose that is a good place to start, at that. A while, then.\" Now that I was 28? Yeah, it'd been a while. \"All that time and no one to train such a good boy? That's just wrong, really.\" God, she was going to be the death of me. My lips parted when she tapped the crop to them and she took advantage of that fact, slipping the leather between them. \"Suck.\" I moaned when I did it, then moaned louder when she cupped my jaw and thrust the crop harder... in a fucking motion. She leaned closer to me, kissing my cheek, and her breath was warm when she finished her words. \"And good boys learn how to use their tongues and mouths just so well with training. I think you'll find a cock cage makes you learn amazingly quickly how Mistress likes it most.\"\n\nI whined with the removal of the crop, only to gasp eagerly when she lifted my chin with it instead, pacing around to stand behind me so that my head met her navel, using the handle of the crop and holding it at either end. Her motions had turned harsher and it made me shudder with the scent of her behind me, when I could smell her arousal, that same hot, sultry scent from the first night I'd met her. I thought I'd kill for more of that scent. As it was, I merely lifted, straining in my cuffs, enjoying the choking crop when she held me back.\n\nIt made me outright growl into her mouth when she pressed her lips to mine. I tried to touch her... and then hissed when I couldn't, when she held me at mercy and it was only reiterated all the more for me. Her kiss wasn't a kind one, either. She didn't let me doubt for a moment who was in control of who, not when she thrust her tongue like that between my lips, as assertive as I wasn't.\n\n\"That's it.\" Oh, and her voice when she started to be more exacting and more rough? I pant a little, starved for more of her. The goddess. \"Let go for me and let me have you.\" When she reached down my jeans again to rub my cock, I gasped with the slack on the crop at my throat, then pant with the gentle pressure she used to stroke me. \"That's what submission involves, pretty boy. All you need to worry about right now, for instance, is whether or not I'm going to make you cum in your jeans so I can enjoy the sight of the mess there for the rest of the night.\"\n\nI couldn't keep from a thrash of ecstasy. She was relentless... until she knew it seemed close to too much and withdrew for a moment again, her laughter in my ear. \"Maybe if you're a really good boy for me and answer my questions, I'll show you what the cock cage feels like while we eat, so you can get used to how it cradles you under your clothes. I think you'll enjoy it. Well, sometimes, at any rate.\"\n\n\"Mistress...\" The collar around my throat already felt cradling, as she put it, so much so that I craved to keep it on for her. \"Mistress, please.\"\n\n\"I'll give you another chance, since you beg so prettily. Tell me one more fantasy, Ryan? We'll work to the ones that make you so uncomfortable together, boy toy.\" I bit my lip, then shifted in torment when she nipped at my ear, my goddess interrogator when I hadn't confessed my pen name or any of these desires to anyone else. \"Telling fantasies to someone like me is a good way to have them come true, love.\"\n\nThat's what I was afraid of. I struggled my cuffs a little when she stroked around my thighs and couldn't keep from saying it when I was that worked up. It was painful being that way, on her edge. \"Cum swallowing.\"\n\nHer hand paused where she had it so gentle in my hair again and I bowed my head, shuddering, shaking. \"I take it you don't mean mine, baby.\"\n\n\"No.\" The word was a moan of dread when she held me under so much control that I would say the fucking words out loud.\n\n\"Good boy.\"\n\n\"Oh, Jesus, please!\" I was shaking again, with her touch. It took everything I had to hold back orgasm when she went back to stroking me over my jeans and I really didn't want her to go through with that threat of making me finish so it showed through the fabric. But I was so goddamn close to breaking. All it would take was the wrong motion from her and my control would shred apart so that I spritzed hot cum in humiliating bursts.\n\nSonya was laughing again, evidently in high spirits from my display. \"God, I love a man who will beg, baby.\" Her whispered, feral words were hot sin at my ear and I shuddered. \"I'm proud of you and good boys get rewards, after all.\"\n\nShe pulled away and tugged the blindfold off, so that my eyes zeroed in on her as soon as my sight was given back to me. She looked more beautiful than ever and I swallowed when the visual gave me her... without that dress she'd been wearing. She'd tugged it off and now she wore only tight, skimpy lingerie with her gloves and boots. Her eyes had a fire in them, instead of the eternal calm from before, and I lifted to her with the thought that Mistress was beautiful in her desire, more gorgeous than ever. Her skin had a flush with the heat of her and when she stepped closer to me, it made me shudder with the way the heels made her gait seem predatory, dangerous.\n\n\"I want to see you masturbate for me, instead.\" That made me blush even while it made me throb. She was quick about undoing my cuffs and she gestured to the floor in front of her. \"Here. Kneel.\"\n\nI couldn't think straight enough for any part of my mind to come up with a protest anymore. I merely knelt, obediently, looking up at her in supplication. \"Please, Mistress.\"\n\nThe arousal was white hot, almost painful, and a lot of it had to do with the shock. I had known it turned me on, sure, but this? This was wild. I groaned when she stepped close to me, so close, when she grasped me by my hair and tugged my face to her pussy, where there was only a thong between my face and the taste of that perfect fucking scent. \"Unzip your jeans and stroke your cock, Ryan.\"\n\nMy nose skimmed her pussy over the thinnest fabric. My blood thundered in my ears. I closed my eyes and inhaled more, dying a little when I obeyed her, spreading my knees and freeing myself. The flush of my neck was as hot as the lust made me, but I couldn't find it in me to care.\n\nShe tilted my face a little further. \"Suck.\" It was the softest command and by that time, it was barely audible over that thunder in my ears. I sucked, whimpering happily when I did, and Sonya tapped my back with the crop so that I shuddered. \"Ah, ah. Lighter, baby. You'll find Mistress enjoys being teased. I'll want both of us to last.\" That made me slow my own strokes on my cock when I wasn't sure how much longer I could hold off and it was immediately evident that Mistress noticed with how she chuckled above me. \"Charming little boy toy, aren't you? That's it. Christ, you're good with your tongue.\" Hot pleasure of a different kind flooded me and I gently curled my free arm up her thigh, still stroking myself in even motions, tormenting myself for her pleasure. Mistress' hand turned gentle in my hair and she lightly eased my face in a back and forth motion so that my tongue teased and lapped around her clit. \"I'll teach you to beg to taste me, baby.\" Her voice was a low threat over me and I shuddered, the world close to blasting apart from under me. \"I'll break you until you crave pussy over orgasms and I'll teach you how to use that tongue of yours while you spend hours eating me like a good little boy toy. They'll be your favorite nights with me.\"\n\nHours. I had to stop stroking myself entirely for a moment with the thought of being so filled with this heavenly scent. She purred over me when I swirled my tongue, slowly to better tease her. I stroked my free hand down the back of her knees, thrilling to how soft her skin was in contrast to the shining leather boots she wore. \"Jesus, that's good...\" Every sound of her delight was my drug in this strangest mental world where the words \"good boy\" were fucking bliss. \"A little harder. Don't cum yet.\" The crop stroked my cheek again and I moaned against the fabric over her clit, laving it. She was drenched behind her thong, so much so that my tongue trailed the outline of her pussy's lips easily and I moaned louder. \"Such an eager boy. God, it's going to be so good training you.\"\n\nI wanted that more than life. I wanted her to pet me all over and make me bow like this to her heart's content. I wanted to buy her more and more gifts so that I could see her gorgeous smile.\n\n\"Harder.\" Thank God. I thought it might actually kill me, the effort to hold off any longer, and I had the prayer that her orgasm might come with permission for my own. I laved her greedily and she chuckled, the sound a little breathless. \"Naughty boy. After I train you a little better, your pleasure won't be tied into these things at all.\" I moaned at that when I realized she knew why I was so eager. God, she'd gotten me to tell her things I'd never thought to tell anyone... and I didn't care. I whimpered with the thought of the cock cage waiting for me. \"Harder.\" Please, fuck, yes. I could barely stroke myself at all anymore.\n\nI gasped against her when she abruptly grabbed my hair in both hands and forced me to her, riding my face viciously, taking her pleasure from me as she wanted it, and her voice was a low snap when she said, \"Cum for me.\" I growled with the force of it, with the way it made me breathe in frantic pulls of air that were filled with the scent of her. It was fucking earth shattering, the kind of orgasm that made my legs shake.\n\nBut it was the end of it that did me in. She finally allowed me to pull away from her and I bowed my head, staring down at the drops of cum on the floor, dazed. Sonya delicately went back to stroking my hair, while I marveled at this sensation, this feeling. I was...\n\nNumb. Calm. Validated.\n\nI had gotten her off and there was zero doubt that it was the way she had wanted to get off when she had been so secure in her touch, in demanding I do what she liked. It was this sensation of having done something really fucking well and knowing, for sure, that I had done it well. But it was more than that, too. I nuzzled her palm when she caressed my cheek, closing my eyes in a kind of reverence. I had an image of a wolf fighting against a bigger wolf so hard and for a long time until it finally lost and went still, until it turned almost serene and waited.\n\nSubmitting. Surrendering.\n\nSo this is what it feels like. It was peaceful, in the most exciting way as odd as it sounds, like being told to hold her hand and not having to question it.\n\n\"Ryan.\" Her voice was soft above me and I opened my eyes, shuddering at the memory of the shape of her pussy against my mouth. She had felt perfect. I didn't know it then, but she would keep all those threats she'd made and a lot of others besides, when she made sure her pussy was the altar I'd learn to kneel and worship at. And her boots? I couldn't raise my eyes from the sight of them, from the cum at her feet. \"Have you ever tasted yourself before?\"\n\nI moaned, then whispered, \"No, Mistress.\"\n\n\"Good boy for being honest.\" It felt cold when she walked away, when she went to a closet and got a box along with a wash cloth, wetting the latter. I jumped when she knelt to me, undoing my jeans the rest of the way and gently bathing my cock. \"And you obeyed me when I said to intimately shave. Easy.\" She said the last when I shuddered, when I had the thought of what came next. \"I'm not going to make you lick your mess up this time, baby. But, well.\" I leaned back obediently, watching her when she pressed me. She was delicate when she met my gaze, cleaning up my mess with a wicked glance that made me blush before she opened the box she had brought to me, letting me see the cock cage she had before she deftly fit it to me.\n\nI exhaled with the sight of it, with the way the metal bars seemed so deceptively innocuous, feeling far away from my body in some way. It felt heavier than I would have expected, somehow, and my Mistress was not done with her threats. \"You might be eating my pussy again later with how horny the thought made me, though, just to be clear on my intentions.\" With the cock cage? I whimpered, thinking of that scent of hers and how I thought it might kill me if she had me do that. \"We'll ease into things together and we'll talk with each other. For right now, for instance, I'm holding onto the keys to your pretty new cage while we have our date. Depending on how it goes, maybe I'll let you take my gifts home with you, if I'm feeling like a very kind Mistress. Maybe I'll even allow you your collar to play with.\"\n\nIt was strange. Everything felt surreal and I was still so far gone in this mental place that fascinated me. It was so dark in one way, in how it was almost suffocating, drowning. But then there was another side, one that made me feel like I was drifting or flying, one that intensified in pleasure when I stared at the cock cage with the knowledge that she would control the pleasure I felt. She could make this into that darkness or she could make me fly at a whim and it sent shockwaves of thrill and heat through me. I shifted when Mistress helped me fix my jeans again. The sensation of her cock cage struck me as well, when it wasn't painful or anything like that. A little uncomfortable, maybe.\n\nIt felt like that word she'd already used, the one that was perfect for the collar, like being cradled, actually. My balls were cupped with a ring and the end of my cock was nice and enclosed in the metal plating of the cage. The rest of it was smaller bars, however, and she'd sized me perfectly after our conversations.\n\nI stared down to where it was hidden, obediently staying still when my Mistress calmly said over me, \"Stay kneeling. I'm going to change into something more fitting of a date, love.\"\n\n\"Yes, Mistress.\" The words felt right on the most animal level. I stayed kneeling like a good boy, staring down at my hands in my lap.\n\nWhat was the worst that could happen? It turned out I hadn't anticipated the reality of the worst that could happen. I'd written it out in a dozen different ways, but the reality of it was something that made me swallow. Because the worst was that I would find the fulfillment of my nature in bowing... and would never find my way back from it again, that I would find myself thrall to a Mistress I had been intending to date.\n\n--------\n\nSonya\n\nIt had been a toss up, honestly, deciding whether to play with him first or have a date with him first. On the one hand, he was an anxious type of person and I thought it might torment him to have a date while knowing, especially after all of my careful messaging conversations with him, that sex and submission waited afterwards. Even if I would have only lightly played if that were the case, would have kept it to restraints and a collar, he wouldn't have known what to expect.\n\nOn the other hand, if I did it before the date, I had to contend with what ended up happening that night. Subspace.\n\nI anticipated it. The problem was - as another moment in a series of them to thwart every last one of my intentions - that I didn't anticipate nearly the strength in which it affected my new little boy toy.\n\nRyan was still and waiting where I had commanded him, staring down at his lap. His hands rested on his knees and he sat up straight, with a naturally beautiful form. It impressed me, actually, with how he clearly wasn't fully comfortable with some of this. And yet... he was brave for me. And he was gorgeous. Of course, I wouldn't tell him that last thought. No, I would call him a good boy and scratch his hair until he nuzzled me in that way he had done.",
        "\"Ryan.\" I used the voice I considered to be my more nurturing voice. For him and his aftercare, it struck me as the best with the mood he seemed to have for the moment. At first sight, I actually had concerns about his subdrop.\n\nBut then he looked up and I reconsidered, smiling thoughtfully. How serene he looked. How peaceful and calm. He made a low sound when his eyes fell on me and I reevaluated my ideas, pacing to him so I could touch his hair again. Touch, it seemed, was incredibly effective for my good boy. He lifted his chin as soon as I did, raising for more of my stroking. \"And what does that look mean, good boy? Be honest with Mistress.\"\n\nMy voice was teasing and it succeeded in pulling a smile from him, but then his eyes turned more serious and timid. \"I was thinking that you look wonderful, Mistress.\" He paused, blushing, and I realized that my new dating interest was going to give me problems. He was far too cute for his own good and, as Courtney would say, it didn't help him out with me.\n\nThe truth? I enjoyed the feeling of a Dominatrix with her submissive for more reasons than just the sexual. I could keep the control in that relationship when I disliked too much emotion in myself. The hard truth was that the more endeared I felt towards him, the tighter I would hold his submissive leash. It wasn't a cruelty thing, nothing like that.\n\nIt was my own shortcoming, mostly, but also partially due to how aroused it made me to see a man on his knees, degrading himself in emasculating ways for my pleasure.\n\nNaughty boy. Do you want to end up in my chains? You might want to stop flirting so hard with me if you don't. Otherwise I would work towards seeing those gorgeous wide eyes in that adorable baby face every day, waiting for my next command, towards hearing that soft voice beg me permission to taste his Mistress.\n\n\"I was thinking that I adored your dress and boots, but that your jeans fit you well.\"\n\nI stared down at my blue jeans, smiling. \"You're too kind, baby.\" And for a moment, I hesitated, but then... I don't know what it was. I think it was how completely he submitted. The atmosphere was intense, so intense that even I, for all my fear of being lost in emotion and how it would make me naturally weaker than a Dom, had trouble trying to work up the willpower to leave the atmosphere with him. When he remained kneeling in such ready subservience and with the knowledge of the cock cage he wore holding him chaste and under my key, I...\n\nI didn't want to leave that atmosphere for a date. I wanted more emphasis on the domination and submission aspect of our relationship. Right out of the gate. It was unfair to him and I both and I quickly made mental contingency plans to place us both in a date scenario that wouldn't be so fraught with this.\n\nHe shuddered. \"I want to tell you more. But I'm worried it will sound incredibly desperate right now.\"\n\nI paused and tightened my hand in his hair, feeling energized with the low, sexual growl that escaped him to how rough the motion was. \"Naughty boy. Let's get something clear. Tell me to your heart's content and if it's authentic, I'll enjoy it, little boy toy, just like I'll enjoy your begging when you think it's desperate.\"\n\nHe blinked and his eyes were so very glazed in such a delightful way. You call him naughty. You're supposed to be behaving, Mistress Sonya. \"It's more than that,\" he finally breathed after my prompting. \"Mistress, your hair looked sexy and strict with your leather, but it looks just as wonderful with the jeans and shirt you've chosen. I admire that.\"\n\nWicked little boy. That balking at drinking your cum is the first thing we'll get rid of. I'll train you to enjoy the taste until you're my slutty little toy for it. Jesus, I had never felt so fucking... dangerous before. It was this sense of carnal possession that didn't bid well for him.\n\nSee, I had always been the caring Domme, the one who dispensed with my fetishes when they were incredibly demanding. I had always been the loving Sonya, the careful one. But with him? I'm not sure I'm explaining well, but he made me want to indulge in all those demands. He even brought a delicate sense of sadism and dark fire in my blood. With how he was driving me, he would be a whimpering little toy, oh yes, and he would be so well trained that he wouldn't so much as beg when I commanded him to make me orgasm while he wore his cock cage, while he remained chaste when I owned his keys.\n\nChrist, all he did was give you a compliment. \"I'm sorry, baby. You caught me a bit off guard.\" He grinned in mischief and I felt myself fall to that dark temptation a little more. \"Don't give me that playful, mischievous look,\" I said, shaking his hair, but of course that only made him giggle. \"Especially not after a compliment so good as that. It's a dangerous thing to get to a Dominatrix's heart these ways.\" I didn't want to say the words. I wanted to let him keep taunting me until I broke, until I made him into a little toy slut, until he begged me every morning to kneel and taste me, until he thought of it as worshipping his goddess.\n\nMmm. Oh, I liked these thoughts far too much.\n\n\"Mistress... At the moment, I think your form of dangerous sounds amazing.\"\n\nI burst into laughter. \"Boy toy, you're misbehaving. I'm supposed to be giving you after care and bringing us both down to earth. Maybe a session of having your cock and balls flogged would make you reconsider being a little submissive tease to Mistress.\"\n\nBecause how dare he be such a tease with that flirting mischief.\n\nHe paused and gave me a sly smile that only made things all the worse. \"Maybe you should try, Mistress.\"\n\nI growled down at him. \"Wicked fucking thing. No. Bad boy. You want that? You ask for it. Let's get that clear right now. I do not condone male or female brats and it's probably the one fucking thing I'm not sexist about. My plan for tonight is to have a date.\"\n\nHis eyes went wide and it was an indicator to how deep in submission he was, at least for me. I think it struck me that maybe flirting would have been a way for him to find his way back from that magical, oftentimes intense, headspace. Would have been. As it was? He stared up at me with that stricken gaze and then bowed his head and caressed my ankle. \"Mistress, I'm sorry. Please, I didn't mean to harm your date.\" He glanced up at me in such a fearful manner that it made me pause in a brief arousal, when it abruptly fascinated me how small I was physically and how submissive he was emotionally.\n\nYou're feeling too much. I turned my thoughts to something more logically inclined again, considering how to go about our date, for instance. I still had to finish making dinner, which would only take twenty minutes or so when I had prepped everything, but something felt wrong about sitting together at my table, when we both seemed trapped in an atmosphere. I really wanted to make him bow at my feet and eat from a dog bowl, but my conscience wouldn't just let me do that, either. It made me glance at my coffee table thoughtfully, made me think of how to go about having him near while I finished cooking.\n\nHe was the one who solidified an idea I had. His eyes followed mine to the coffee table, where my chess board was, and he tentatively asked, \"Do you play?\"\n\nI smiled down at him. \"Yes, as it happens. Would you like to play in here while we eat?\"\n\nHis eyes lit up in a way that made me smile, with how clearly he would definitely like that. It gave me my answers. \"I'll take that as a rather definitive yes. Stand up and come on, love. I need to finish the food and you can help me.\"\n\nThere was a thrilling sensation to seeing him stand up, while still so clearly in his submissive headspace, when it forced him to look down at me, even with my boots. There was something so subtle about a guy in submission, at least to me and in certain ways. Like right then. Even if he was bigger than me and he was obviously stronger than me, his eyes went to my feet and he had this cast in his features, of waiting respect. He stroked my hand when I placed it in his, leading him.\n\nPulling a submissive from their headspace was always something that struck me as such a delicate thing. I had experienced some deeper subspace moments before and the memories stayed with me, so that I always felt like I could never be careful enough. Ryan was a new level of it, as it would turn out. He was so atmospherically trapped that I gave him careful commands in what to do to help me and his own ambience infected me so well that it felt natural to give those kinds of commands, like a dual natured conditioning.\n\nBut it was when we sat down at the chess board that I had hopes he might be able to pull out of his subspace. Where it had seemed strange to sit together, it felt rather enjoyable to curl up on the floor at the coffee table together. With chess in the mix, I hoped the logic of the gameplay would give him a different form of thinking.\n\nRemember how I said my relationship with him was nothing but a series of fantastic failures? Just keep that in mind.\n\nThe interesting thing about it, though, made itself quickly apparent. I had retreated in forms of logic to get away from my own emotions when I thought I had too many. Ryan... Ryan didn't let me stay behind my armor. He took the most logical game in the world and he lulled me with it.\n\nAt first, it was quiet enough. I went with a queen's side opening, freed my bishop, moved my knight, positioned my queen. For a moment, we traded turns quietly.\n\nAnd then I saw a few openings to more freedom. I went with a queenside castling move and Ryan sat up straight, his eyes going wide so that I couldn't help but grin in delight. See, within a few moves, it was apparent that Ryan enjoyed chess. A smile broke across his face, slowly, and I couldn't help but feel thrills. \"It's always a joy getting to see someone's face when they realize they're playing someone who loves this game as much as they do,\" I said.\n\nHe broke into happy laughter while I watched my armor start to fall apart. Bad boy. Bad Sonya. Bad both of us.\n\nDamn that baby face. He looked far too delightful with my collar on his throat, especially when he laughed happily after he lost. Okay, logic wasn't working.\n\nMaybe space would give us both a little more perspective.\n\nWant to take a guess at how that turned out when I'd charmed him with a chess game? Go on. Say the quote about insanity and people who try the same thing over again. I'm daring you.\n\n--------\n\nI made us both take a week, but I gave him a way to open conversation with me as well, with the cock cage and his collar. Before he left me, I gave him the cage and the key to it and told him there was one rule. He could wear it when he liked, however long he liked, but he had to tell me when he decided to take it on or off.\n\nIt made me smile, the look of fear he briefly got. That's it, you're going to let me know exactly how much you love or hate it. Which was true, but there was a little more to it, too. He was quiet, reserved. During our chess game, for instance, he'd had an air of shy serenity.\n\nI hoped that giving him a command for when to message would open the doorway for his comfort. This logic, as it turned out, worked a little too goddamn well.\n\nHe didn't message me as early as I thought he would after he left me. It was actually sometime in the dead of night that my phone went off and I woke up grinning with the realization that the poor guy tried sleeping with it. And then it made me aroused with the thought of abrupt pain waking him from his sleep, of him giving one of those whimpers that made my blood race in that wicked way. It made me wish I'd been there with him, keeping the keys instead, so that I could stroke his hair back and coo in his ear to let the pain wash over him and do its job until he was a good boy again. I'd kiss his neck in a tease to make it worse and tell him there was nothing he could do about it when I had the key... Jesus, the fantasy had been intense enough that I'd bitten my sheet, stroking my clit in gentle circles so that it amped me up and up, slowly, until my world turned to bliss with the memory of his expression when I pulled his head back with the crop.\n\nThe weekend was a series of sporadic messages, but it was the weekdays that got... interesting. He messaged me Monday morning, you see, and I was suddenly energized while I was getting ready to work. Bad boy, you're being wicked. I had to grin with the thoughts of him wearing it to work, trying these things out, of how I now knew some of the places where he liked to write his erotica, when he liked to feel naughty in his own quiet way. I teased him, taunting that it was his little secret. Of course, there'd been other messages I'd sent him. Wear tight boxers, though.\n\nI started to smile every time I looked at the phone, thinking that he was both messaging me a fair bit... but not quite the times I was expecting or nearly as much as I would have expected.\n\nEven after what we'd talked about and even after the nature our date had taken, though, the messages were timid, ones that always started with \"Mistress?\" If I'd wanted to go back to some kind of vanilla dating, I should have asked him for conversations where he called me by my name. I've always looked back and thought that there was no one to blame but me. The truth was that it wasn't just the sex, once again.\n\nIt warmed my heart, especially when he apologized for seeming too needy every now and again.\n\nRyan, love, I'm coming dangerously close to keeping you.\n\nBecause he was apologizing, respectfully, for the very qualities I adored in him. He would ask my permission with the cock cage, even if I'd already given it. Most of the times he messaged me were close together, where he'd tell me he was taking it off and then, quite quickly, tell me he put it back on, though, something that made me grin every time. And, like most introverts, he was indeed more open in text than in speaking.\n\nI thought about you, Mistress.\n\nThat one always made me smile. Oh, yeah? And what made you think of me?\n\nThere were a number of things. I was reading a story :P, he would say, or, There was this artwork on one of the new Adventures in the Forgotten Realms cards. And he would send me a picture of the artwork or send me a link to the erotica.\n\nI took the openings to flirt, unable to quite resist when it felt so good and everything he sent was so very flattering. For instance, my answer with the erotica? Be careful, little boy toy, flirting so hard and complimenting a Dominatrix so well. Although, I must clarify that if you ever call me 'Ma'am,' I'll beat you and it won't be in the good way.\n\nI just laughed out loud at work, Mistress.\n\nThat made me grin in my own work office and I had to focus on getting back to my job. The only thing that was keeping me on my tasks, with thoughts of him in the background, was the fact that I was an R&D manager and if I didn't, a lot of very shy scientists would be without an adequate safeguard between them and other departments.\n\nIt was a week later before I finally caved. I thought it was enough time for him to have some space, for him to consider how he felt about the submission aspect of things. I spoke with him about that through that week as well, thinking I could guess a few answers. For instance, I didn't think I had to wonder if he enjoyed the sexual aspect of submission. I did clarify that we would talk about other options if it wasn't to his liking, however.\n\nThese were light conversations, though. The real one came when I finally did cave and called him.\n\n--------\n\nFirst, I messaged him and asked him what he was doing. When he said he was at home, I called.\n\n\"Mistress?\"\n\nHis voice was soft, a little shocked, and with a kind of shy fear to it. It made me smile. \"Good evening, love. Have a good day?\"\n\nHe seemed to become a little more confident with the question, as if he was adjusting to the idea that I was calling him instead of messaging him. \"Yes, thank you. Did you?\"\n\nIt had been terrible, actually. My day had started with my opening a supervisor's door after reading an email and the conversation had started with my standing in front of his desk, boots shoulder width apart, and saying, \"Hi, yeah, what the actual fuck is this?\" I didn't mind when emails and notices affected me, but I preferred to not overwork my engineers. It didn't help that the supervisor in question was a weasel faced motherfucker that bullied the shy, quiet types that worked for me, but couldn't look in my fucking eyes like a man. I'd been, ah, a bit fiery.\n\nAnd then I'd felt bad about it, stopping by a liquor store and staring at shelves, wondering which bottle said, I'm sorry I acted like a cunt, even if you're a twat. I could have been classier about it, though.\n\nUgh. I kept thinking that one day I would get used to being an outspoken female. But I couldn't get the voice of my conservative family out of my head and it always gave me problems at times. Sonya, please. Our family doesn't do confrontation. Don't draw the attention. Keep your head down, Sonya, and stay proper. Any girl with too many opinions can tell you that we're generally about as insecure as everyone else, even if we can hide it better.\n\nThat day had been one of those rougher days. But I didn't find it in me to confess that to him. Part of it was because I didn't share those things with people, when I'd learned that I got enough criticism from people like my family and I would not give them the satisfaction of knowing that they affected my days or moods as well. I would not make sound or complaint about what made my days bad, and I especially could not do so to a submissive man who was trusting me to safely show him kinks and to care for his psyche and wellbeing when he likely had insecurities of his own.\n\nWhen he left me, I intended for him to be in better shape and with more knowledge than when he had met me. It was fundamentally important to me and burdening him with my feelings or problems felt like something that would be an obstacle to that.\n\nBut the other, scarier reason? The sound of his shy, sweet voice had already succeeded in making me forget all of the things that had made me feel so bad. I shoved the emotions he gave me into a mental box labeled, Later. \"It was productive, little boy toy, thank you for asking.\"\n\nHe paused and then softly, in a breathy voice, with just the right amount of fear, answered, \"I love it when you call me that.\"\n\nI paused, smiling, thinking he must be in a frisky mood to confess that. \"I'm glad to hear it when it will be fitting if you decide to keep going down this relationship path with me. That's what I wanted to talk with you about. But first, have you been a good boy? Be honest, Ryan. Did you message me every time?\"\n\nNow he was definitely antsy when he answered. It was delicious, with just a thrilling amount of fear to amp the arousal for both of us. \"Yes, Mistress.\"\n\nI blinked. His voice was so fearful and respectful that... I believed him. Without doubt or seeing his eyes, I believed him. Before that answer, I had thought, for sure, that he had forgotten to press send, maybe, or been a little too shy and embarrassed about his desire a moment or two. I sat straight in my bed, having dressed in a tiny pair of pink jogging shorts, the kind I would only wear while alone, along with a tighter tank top. \"Ryan, you didn't message me all that often.\"\n\n\"Forgive me, Mistress. I- I was worried about bothering you if I wasn't...\" His voice shook. \"If I wasn't taking the cage off or putting it on.\"\n\n\"That wasn't my point. For future reference, however, I like hearing from you and getting to know you. If you're bothering me, I will tell you. We'll get to that in a moment, though, along with a few other things. For now, tell me this. What did you take your cock cage off for?\""
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "femdom",
        "msub",
        "submissive",
        "male submissive",
        "humiliation",
        "female dominant",
        "mistress",
        "cock cage",
        "fetish"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/shy-guys-make-good-boys-pt-01"
}