{
    "title": "The Proposition",
    "pages": [
        "\"May I join you?\" \n\nI looked up from my book, slightly surprised. I had come to the coffee shop-slash-bookstore during my lunch hour for a brief respite from the stress of the office, and I hadn't anticipated being interrupted. Glancing around, I saw that there were plenty of empty seats around.\n\nThe look on his face indicated that he had something he wanted to say, and my natural curiosity took over. It had been a while since a stranger had tried to chat me up in a bookstore. I inclined my head for him to sit.\n\nHe pulled out the chair across from me and sat down, a very deliberate motion. Something in the way he moved indicated a self-awareness that was immediately hypnotic. He didn't put his coffee cup down; he placed it upon the table.\n\n\"I apologize for interrupting your reading,\" he said. \n\n\"No problem,\" I replied, sliding the bookmark into the binding and closing the cover. \"It was a rather dull part anyway,\" I lied.\n\n\"I doubt that,\" he said, smirking. \"You seemed pretty engrossed.\" His voice was smooth, calm, low but in a register that didn't feel threatening. His diction was clear as if he had practiced how to speak for years. I couldn't place the accent; American? There were a lot of foreigners in London so it didn't surprise me.\n\nI paused for a moment, considering my response. I decided to go for coy. \"Then why did you interrupt me,\" I said, reaching for my tea.\n\nHe cocked his head to one side. \"Because I have a proposition for you,\" he said. \n\nDirect and to the point, I thought. I looked him over once again \u2013 he wasn't gorgeous, rather average actually. He was handsome, but his features weren't striking. Brown hair, brown eyes, slightly taller than average. Nevertheless he had a confidence and self-awareness (have I said that already?) that was magnetic. There was a dance in his voice that bordered somewhere in between playful and sexual. This was a man who didn't want for ego.\n\n\"A proposition,\" I repeated. \"I see.\" I didn't, of course. I was ready to brush him off and tell him I wasn't interested when he took my pause as a cadence for his own marching rhythm.\n\n\"Yes, a proposition. I know you have no idea who I am but I assure you I'm quite harmless.\"\n\n\"How disappointing,\" I said, continuing to play my coyness. \n\nHe smiled now. \"Well,\" he said, glancing down momentarily and then looking up again directly into my eyes. \"Mostly harmless.\" He took a sip of his coffee.\n\n\"What kind of proposition?\" I asked. \"Is it indecent?\"\n\n\"Depends on how you look at it,\" he shrugged. He was so casual about it. This confused me, as it looked as if he had no vested interest whatsoever in whether I agreed or disagreed to what he had to say. My curiosity surged. How did he know I was going to respond like this? How did he know I wasn't going to just tell him to fuck off?\n\nHe continued, \"I won't insult your intelligence by pretending to be offering something I'm not,\" he said, his eyes still locked on mine. His smile was still there, though he was more direct and serious now. His eyes seemed so deep, and I could see that he was being honest.\n\n\"I want you to help me fulfill someone's fantasy,\" he said. \n\n\"I don't...\" I began.\n\nHe raised a hand to prevent the conversation from getting over-excited. \"I want you to feel completely comfortable to say no if you don't like what I have to offer,\" he said. He didn't rush his words, instead he was calm and his voice was very soft. He seemed very nonchalant about the situation; if not me then he would find someone else to help him.\n\nI took another sip of tea. \"I'm listening,\" I said, my voice betraying my cautiousness. The coyness was all gone now.  I should tell him to go away, I thought. \n\nHe took another sip of coffee and then paused. This wasn't a pause of someone trying to get up the courage, it was a pause of him trying to size me up. \n\n\"This fantasy involves another woman.\" He took a sip. I did the same. \"Should I continue?\"\n\nThe question took me by surprise. The ball was in my court. It was clear he was talking about sex, and sex with another woman, but how did he know I liked women too? I was bisexual, sure, but how could he have known that? Was I really that easy to read to a stranger?\n\n\"Go on,\" I said, trying to regain my sense of carefree and coyness but not sure if I succeeded.\n\nHe nodded. \"She hasn't had sex with a woman in a long time,\" he said, and for a moment I wondered if I had missed the beginning of his sentence. She? Who? I realized it didn't matter. \"She has been craving the softness of a woman's body and I know that you are her type.\"\n\nWell, that explained why he singled me out. It still didn't explain how he knew I wouldn't slap him.\n\n\"Her type?\" I said. \"Straight?\"\n\nHe smiled now. \"You're not straight.\" He said it as a statement of fact, as if he had known me all my life and was correcting me as if I had said that two plus two equals five.\n\nHe took another sip. \"In fact,\" he said, \"I'm willing to bet she's your type too.\" \n\nNow I was insulted. How dare this man \u2013 whom I've never bet before \u2013 sit down and tell me what type of woman I was interested in? How could he be so presumptuous?\n\n\"I hope you'll forgive me for being so direct,\" he said, stealing my thunder. He looked up from his coffee mug at me again. \"As I said I don't want to insult your intelligence by pretending to play a game with you.\"\n\nOkay, that makes sense, I thought. But how did you know?\n\n\"I'm talking about a one-off, one-time only. She has been fantasizing about this for a long time and hasn't been with a woman in at least a couple of years. She has a very specific fantasy and if it's something that you are uncomfortable with I would completely understand. All you have to do is tell me and I will leave you to your book in peace.\"\n\nI didn't even know what the fantasy was. I glanced down at the book, some cheesy bodice-ripper that portrayed fictional characters with more exciting sex lives than my real one. \n\n\"What's her fantasy?\" I asked, looking back at him.\n\nHe leaned back slightly in the chair, taking his coffee cup into his hands and holding it in his lap. He smiled again, but his voice remained calm and collected, each word enunciated with precision. This was a man in control and I was beginning to feel myself drawn to help him help this woman. He knows this. How did he know this?\n\n\"She wants to have a woman tied up and offered to her to do with as she pleases.\" He watched my reaction, but I kept my face unresponsive. He continued as if he were reading from a newspaper advert, \"She's extremely visual, and so she likes to watch as well. In particular, she wants to watch me have sex with someone else at the same time that she is.\"\n\nI slowly started nodding in understanding. So he did want to fuck me after all. The look on his face, though, was passive. His eyes didn't flicker, gave no indication that he was after me for himself. Again, I got the distinct impression that if it wasn't me he'd find some other candidate to fulfill her fantasies.\n\n\"What do I get out of this proposition?\" I asked.\n\nHe raised an eyebrow. \"Great sex,\" he said. The look on his face had changed, almost as if he was surprised I hadn't figured it out for myself. Suddenly I felt he was disappointed in me, and for some reason I felt my heart flutter in panic. Oh no, I thought to myself. He thinks I'm asking for money!.\n\n\"No,\" I said, just a little bit too quickly and earnestly. \"I didn't mean... I mean...\"\n\nHe was looking at me quietly, pondering something. He breathed in through his nose and checked himself, as if trying to choose his tone carefully. He smiled wanly, trying to put me back at ease (had I ever been at ease?). \"If I wanted a prostitute, this would have been much easier to set up. But the fantasy wouldn't be fulfilled if someone wasn't their of her own volition.\"\n\nVolition. Nobody uses words like \"volition\" in casual conversation. I could only nod.\n\n\"There are rules, however,\" he said. Somewhere in the back of my mind I marveled at the audacity of this man, asking me to help him fulfill a fantasy and then mandating rules to me. My curiosity was peaked, however, and I nodded for him to continue.\n\n\"First, there is no pain involved, for anyone. That means no biting, no slapping, nothing.\" His tone was deadly serious, and for some strange reason the fact that he put this first made me feel much more trusting of this man whose name I still didn't know.\n\n\"Good,\" I said. \"I'm in complete agreement with that.\" \n\nMy eyes widened involuntarily as I suddenly realized I had unwittingly agreed to his proposal. What am I doing?\n\n\"Second, you can say anything you like, but you cannot ask any questions whatsoever. None.\" He looked at me carefully, gauging my reaction. \n\nMy mind reeled, how many questions do I ask during sex? Normal questions, like \"do you like this,\" or \"can I do that,\" or...\n\n\"That means,\" he said, disrupting my train of thought, \"that you cannot ask her name, anything about her, anything about what you can do to her. If you want to do something, you can just do it. This is part of what she wants.\"\n\nI nodded again, dimly aware that my end of the conversation was woefully left wanting.\n\n\"Third, you will be tied up when she arrives in the room. You will be presented to her spread open and ready, naked as the day you were born. Eventually you will be released to touch her too, but not until she is ready for that. I will decide when that is.\"\n\nI squirmed in the hard wooden coffeeshop seat. My imagination was starting to run away with me. I suddenly wanted this to happen very much. This man's calm demeanor had me hooked. If the place was empty I might have jumped him there and then. He knew this about me. Before he ever said anything he knew this. How did he know this?\n\nHe drained the rest of his coffee and placed the mug gently on the table. He looked down at it and then back at me. \"There is one more thing that you might object to. And if you do, that's okay.\"\n\nI subconsciously leaned forward in my chair. \"What is it?\" I croaked, my throat dry despite the hot tea.\n\n\"She will not talk to you at all,\" he said. \"She will only direct her comments and questions to me. I hope you understand that her fantasy is to have a woman to play with, she doesn't want a relationship and she isn't looking for a connection with you. It's not personal, it's just part of the fantasy. If this objectifies you or makes you feel uncomfortable, I completely understand.\"\n\nI sat and pondered this. To be sure, this went against everything I felt that a balanced sexual relationship should be. It meant voluntarily putting myself in a position where I was being objectified, used. This woman would use me for my body, for my sex, for my mouth. It wasn't me as a person, it wasn't me at all. I was a stranger, sex with a stranger...\n\n\"So, let me get this straight,\" I said, adjusting myself in the seat once more. \"I can say anything I like as long as it's not a question.\"\n\n\"Yes,\" he said, nodding. \"To me or to her.\"\n\n\"She will not say anything at all to me, either a statement or a question.\"\n\n\"Yes,\" he said. Again the precise enunciation.\n\n\"And no one is going to inflict pain on anyone.\"\n\n\"Absolutely not,\" he said. He was adamant. \n\nI considered all of this some more. Slowly I felt my head nodding before I was ready for it to do so. \"So, when do you want to do this?\" Did he know I would agree to this? How did he know?\n\n\"Tonight,\" he said, reaching into his pocket for a pad and pen. He wrote down something on the paper and ripped it out of the pad, handing it to me. It was the address and room number of a bed and breakfast in the centre of the city. \"She will be arriving at 8, so it would be best for you to arrive at 7 so that we can prepare for her.\"\n\nHe put the pad and pen away as I stared at the address. I looked back up at him and he was smiling warmly. At that moment I knew that I would do it. His smile wasn't lewd or cruel, in fact it seemed quite grateful. I felt like not only would I be helping someone out with their fantasy but I was in for a real treat tonight. I was tempted to ask him if he wanted to go back to the bed and breakfast now for a quick shag beforehand - who cares if the office missed me?\n\n\"Well,\" he said, smoothly. \"I think I've taken up enough of your lunch break, and I have some errands and business to take care of before this evening.\"\n\nHe stood, and I started gathering my things as well. I stood up, and he leaned in for a kiss on the cheek. He's used to being in England I thought. He didn't try to shake my hand like most Americans who just got here would. The very thought of it seemed ridiculously out of place after the conversation we just had. \n\nHe turned and left the coffee shop and I suddenly realized I had no idea what his name was.\n\nThe rest of the day was a complete waste of time. My productivity was complete shite and even though I tried as hard as I could, I simply couldn't get the conversation out of my head. His voice, smooth and placid, echoed in my head. She was going to use me, use me for her pleasure. She was going to taste me, probably have me lick her. Did she have hair? Was she shaved? What would she look like?\n\nMy mind wandered through all of the possibilities of what could happen. Would she try to put something in my ass? Would I be okay with it if she did? Did she have long nails? Despite what the pornos show, nails can hurt!\n\nAround 3 o'clock I couldn't take it any more and ran to the woman's bathroom. Locking the stall I reached into my pants and found myself absolutely dripping. I listened carefully to make sure there was no other breathing or other sounds, and then rubbed my pussy furiously until I came. My hand came away drenched from my own body's arousal and I found that instead of taking the edge off, as I had expected, it only whetted my appetite for more.\n\nI skived off early to my flat, jumped in the bath and started doing some quick calculations for how long it would take to get there by tube. If I wasn't there on time then the whole fantasy could be ruined for her. The fact that I didn't know who \"her\" was or even her name excited me. This was anonymous sex, which I had never had before and had toyed with the fantasy as well. \n\nI took a quick look at my closet for the appropriate clothes to wear and then realized after about five minutes of indecision that I was going to be naked anyway. I found some perfume that had driven some other women crazy in the past and dashed some across my breasts and pussy, and then dabbed some along my neck. \n\nTaking a look at myself in the mirror before getting dressed, I tried to imagine what she would see when she came into the room. I spread my arms out as if I were tied up to the bed, and spread my legs so that my entire body looked like Da Vinci's Vitruvian Man, minus the penis. My brown hair hung down loosely astride my breasts, matching the sliver of pubic hair that I carefully sculpted with my razor in the bath.\n\nAvoiding the temptation to masturbate again, I got dressed and headed out the door. \n\nArriving at the Bed and Breakfast I strode up to the room like a woman with a purpose. Along the way my nerves had started to wear thin at the edges but my excitement and arousal more than made up for it. The room wasn't hard to find, and I knocked on the door. \n\nAfter a moment the door swung open and he stood there, wearing the same slacks and shirt as he had before. I wasn't sure what I had expected him to be wearing, but I thought he might have prepared for tonight as I had. \n\n\"You're late,\" he said, but he was smiling.\n\n\"The tube...\" I began, but he dismissed my protest with a small gesture.\n\n\"It's no matter,\" he said, closing the door behind me. \"As you can see I'm running a little behind as well. We still have plenty of time.\"\n\nHe showed me into the cozy little suite which had a small sitting room attached to the bedroom. On the small table next to the chair was a bottle of chilled wine and a glass. He uncorked the bottle and poured me a glass.\n\nAs I took the glass I said, \"You never had any doubt that I would come, did you?\"\n\nHe smiled, and considered his response. \"Well,\" he said, \"sometimes we can afford to allow ourselves to trust some people.\"\n\nI took a sip. It was excellent wine. \"Aren't you going to have any?\"\n\n\"Not right now, maybe later,\" he said, turning and walking into the bedroom. He began unbuttoning his shirt. \"First I want to get myself ready. As I said, I'm running a little behind and want to shower.\"\n\nHe started taking off his shirt and I could see that despite having an average build, he had incredibly muscular shoulders and arms. He wasn't an Adonis by any means, but he was definitely a good looking man. \n\nHe stopped what he was doing and came over to me, took the glass and put it down. \"You'll have that back in a moment,\" he said.\n\nHe began undoing my coat and I allowed my purse to fall to the floor. The coat came with it and the next-to-nothing I had underneath came as something of a shock to him. \n\n\"Oh my,\" he said, grinning. It was the broadest smile I had seen from him.\n\nThe coat fell down and revealed my thigh-high hose and suspenders, without any panties to encumber access to my pussy. \"I love garters,\" he said, and it took me a second to register the American name for them. \n\nHe placed his hand between my legs and slid his finger inside my wet pussy lips. \"I'd say you've been looking forward to this,\" he said, his grin locked in place. \n\nThe man had just fingered me, hadn't ever kissed me, hadn't told me his name, and here I was offering myself to him and wanting him to do more. My nipples ached from my arousal at the situation.\n\n\"I bet I could slide my cock inside you to the hilt on the first thrust,\" he said softly, sliding his hand back and forth and making my knees weak. My mouth felt suddenly very dry, and I placed my hands on his shoulders for balance. As I felt his skin slide across my own I marveled at how well he seemed to know me.\n\nHe withdrew his hand from my pussy and placed the finger in his mouth, looking into my eyes. \"Oh,\" he said with a slight moan. \"You taste very good. She'll like you.\"\n\nWith that he turned away and moved into the bathroom and started the shower running. \"Make yourself comfortable,\" he called from the bathroom. I moved into the bedroom with my wine glass and sat on the bed. I looked at it and noticed that there were neckties on all four of the posts. This was really going to happen.\n\nI heard him say something but I couldn't hear. \"I'm sorry,\" I called back. \"What did you say?\"\n\nHe emerged from the bathroom, naked, his cock semi-erect. It was a beautiful, circumcised head that seemed to beckon to me, and I felt a familiar craving in my jaw as I wanted to take it in between my lips. \n\nHe didn't seem to know he was naked, for all the lack of modesty he displayed. \"I said, can you come more than once or do you need to rest for a while afterwards?\"\n\n\"Oh!\" I said. \"Um, no, I can come often I guess.\"\n\nHe smiled. \"That's nice,\" he said, and returned to the shower. \n\nI stood up from the bed and followed him into the bathroom. The shower stall was a glass door and I watched him as he soaped up his body. As he turned around I saw with amazement that he had the most muscular legs and his ass was tight and round. He was saying something to me but I was lost in my desire to touch him.\n\nTaking a sip from my glass I glanced up to see him looking at me. He was grinning like the Cheshire Cat and said, \"It's a good thing you can come more than once, otherwise you may be done before she gets here.\"\n\nI was confused as to what he meant, but then he looked down between my legs where I had been playing with myself without even realizing it, sliding my fingers across my lips in a slow tease. ",
        "He dried himself off and started walking towards me. His cock was fully erect now, and bobbing with each step. I backed out of the bathroom and he took the B&B's bathrobe off a hook and wrapped it around himself, but didn't cinch the tie. His cock stood out between the two sides of the robe, perfectly framed. \n\n\"Finish your wine,\" he said. It wasn't a command, more of a suggestion, but I looked at him with a curious glance. \"You can't drink it when you're tied up,\" he explained.\n\nThis was true. I moved over to the bed and finished the wine. He looked me up and down and said, \"I like the garters. I think she had wanted you completely naked but you look so damn gorgeous I don't think she'll mind.\"\n\nI moved to the centre of the bed and lay out, spread eagle, the memory of my mirror pose flashing through my head. He pulled the tie toward my hand and secured it, tying it to my wrist, then repeated with the other side.\n\nNow, I've been tied up before. Let's face it, most people can't tie knots to save their lives, and most of the time I had to pretend that I was caught in order to maintain the illusion that I couldn't get out. But this guy knew what he was doing. His knots were expert: not only could I not get out of them even if I tried but he managed to do them in such a way that they were extremely comfortable and didn't cut off my circulation. I was impressed.\n\nMy legs and feet were next, and soon I was exposed. I couldn't move, pressed into the mattress from the ties holding me down. I looked down between my breasts, my breasts, my nipples reaching high into the air begging for attention. A slow drip of wetness seeped down my pussy onto my ass before falling to the sheets. An assembly line of lovers could have taken me at that moment and I would have loved every moment of it.\n\nHe stood at the edge of the bed, his cock aiming directly at my pussy (at least it seemed that way in my imagination). I imagined him coming from where he stood, thick ropes of come landing on my pussy in fiery streams. \n\nHe shed the robe and stood before me. He knelt on the foot of the bed and started crawling up to me. \n\nMy God, he's going to fuck me now. Thank God! my mind screamed. \n\n\"Do you remember the rules?\" he asked me.\n\nI nodded.\n\n\"What are they?\" Closer.\n\n\"First, no pain.\" I found it difficult to say the words. I could smell his clean body now, the cologne he wore (when did he put that on? I didn't see it).\n\n\"That's right,\" he said, placing his hands on either side of my body. I looked down and saw his erection aiming straight at my hole. Yes, dammit, put it in me! \"That means no biting, nibbling, scratching, or leaving any marks of any kind.\"\n\nI nodded. \"Second,\" I said, feeling the heat from his body hovering over mine now, \"I can say anything I want but cannot ask any questions.\"\n\n\"Correct,\" he said, like a schoolmaster. \"If you ask even one single question, just one, I'll call everything off. That means,\" he said, as the tip of his cock touched my clit as it bobbed, sending me writhing in frustration, \"you will have to leave immediately. You don't want to leave, do you?\"\n\n\"No-o...\" I moaned. God, I wanted him to fuck me. Why wouldn't he fuck me? Please, just fuck me!\n\n\"And what's the third rule?\" he asked, leaning so close I could feel his breath along the swell of my breast.\n\n\"Third...\" my mind drew a blank. What was the third?\n\n\"Third,\" he said, patiently, \"you will be tied up, open and ready for her to do with as she pleases. You are hers tonight and are to do everything in your power to give her pleasure.\"\n\n\"Yes,\" I agreed. I would have agreed to anything. Just stick that cock in me dammit!\n\n\"Oh, I almost forgot,\" he said, silkily. \"You wanted to know what was in it for you.\"\n\nWith that, he thrust his cock balls deep into my pussy. One drive and he hit home, I screamed in ecstasy. I don't remember a time feeling so full and taken at once. \n\nHe rested inside me, but I felt his beautiful head throbbing inside my tight pussy walls. \"This is what's in it for you. Is that acceptable?\"\n\nI opened and closed my mouth like a fish, unable to speak. The joy of being filled had left me rigid and tense. As quickly as he had entered me, he withdrew. I strained against my bonds in desperation.\n\n\"No-o!\" I cried. I could actually feel tears welling up. I was ready to beg to be fucked again. Please, just one more, just like that. Just once more. Okay, twice more. Please, put it back in!\n\nHe crawled up and straddled my face, his cock wet with my juices and tantalizingly close to my face. \"Clean me off before she gets here. I want her to think she's getting you first, and it wouldn't do for her to taste you on me, would it?\"\n\nI didn't answer, but reached up as far as my restraints would allow to take him in my mouth. I sucked his cock, tasting myself over him. He pressed himself forward, sliding himself in between my lips, and I lapped my tongue around his shaft. Each movement brought with it my own flavour, turning me on. I was surprised at my own, easy decline into being a slut for his cock. His cock jumped across my tongue as I flicked the head and ridge, sending an electric bolt straight down my throat and seemed to explode out my pussy. \n\nThere was a knock on the door, and he climbed off my chest. I felt empty, as if his withdrawal left me with a loss. I knew there would be more, much more, but I wanted it now. \n\nHe put on his robe, tying it around the waist. The raging hard-on bulged the fabric outward, hiding nothing. He opened the door, and then allowed her to come in.\n\nShe was stunningly beautiful. Blonde hair, shoulder length. She had the high cheekbones of an eastern European. Polish? Perhaps. Czech? Maybe. Her eyes moved from him to me tied on the bed and I saw them widen in surprise.\n\n\"She's beautiful!\" she exclaimed to him. Her accent was indistinguishable, but the soft musical lilt struck my ear like a melody. I felt my pussy quiver with anticipation as I knew eventually I would have those lips pressed against me.\n\n\"I told you so,\" he said, calmly.\n\nHe uncinched the tie and let the robe fall open. His erection pointed at her, and she looked down at it. She took it gingerly in her hand, and then started stroking him, turning her heart-shaped face up to look into his eyes, seeking some sort of approval. \n\n\"Let's tease her,\" he said. \"Let's show her what you can do.\"\n\nHe took her by the hand and led her over to the side of the bed, standing right next to me. She sank to her knees, still in her tight blue jeans and wearing her dark grey overcoat. She wrapped her lips around his gorgeous cock and began to suck. I watched her deep throat him, take him farther than I could have done tied up. I felt a longing to do the same, a desperate will to show him that I could do the same thing and started making excuses in my mind for why I couldn't go as far as she could.\n\nIt occurred to me that she could take him deeper than I did, all the way to the base, and she must have tasted my pussy on his cock. That cock, which had been just in my mouth, and before that in my pussy, she was tasting it. The raunchiness of it struck me and I squirmed on the bed. My mouth watered.\n\n\"She is for you,\" he said to her, not really looking at me. \"You know what you want to do.\"\n\nShe looked up at him, then at me, and back at him, nodding. She stood up and moved to the foot of the bed. She started undressing, looking at my eyes the entire time. I watched her as she began to disrobe, slowly. \n\nStanding in front of me and staring directly at me, I could see her beautiful face more clearly. This woman was stunning, gorgeous. He was right \u2013 she was definitely my type. A cute button nose and almond-shaped eyes, pink lips and the hint of a Mona Lisa smirk. \n\nThe coat fell to the floor revealing flawless white skin that disappeared into well-formed breasts hidden beneath a pink camisole-type top with black fringe. She traced her own neck with her fingers, stroking down her chest and reaching inside to caress a nipple, still hidden from view.\n\nShe turned around and faced the other direction, and unbuckled her belt, then slowly slid the jeans down around her hips, revealing her ass. Her strip tease was wickedly, agonizingly slow, and I couldn't tell if she was prolonging things for her or for me. Either way, my desperate wanting only grew.\n\nThe jeans slid down her thighs, revealing a white thong and two beautiful globes. I wanted to bury my face between them, licking her, smelling her, tasting her. I couldn't help it, I started trying to squeeze my thighs together for some release but the restraints keeping my legs open only frustrated me. Damn his knots!\n\nShe lifted the blouse off her torso and turned to face me. She had a tight tummy and I looked at the indented line of muscle reaching from her breasts down t her pelvis, and she continued to caress her nipple with one hand, slipping her other hand down between her legs.\n\n\"What are you going to do first,\" he asked. His voice was hypnotic, and I wanted to turn to look at him but I couldn't take my eyes away from her. \n\nShe smiled. \"I'm going to touch her.\" My skin tingled. \n\nPlacing her delicate fingers along my toes, she began to trace the instep of my stockinged foot. It ticked but with a sexual charge. She put her other hand on my other leg, just above the ankle, and climbed onto the bed. She used my legs as leverage, holding me down, and the sudden pressure made me moan. \n\nI suddenly remembered the rules, knew that I could say anything as long as I didn't ask any questions. I didn't know what to say, though. \"Yes, touch me,\" I whispered. Lame, I know, but it was the only thing I could think of.\n\nShe smiled at me, and slid her hands up my calves to my thighs. She kept them just at the elastic at the top, tracing her fingers along the separation between fabric and skin. \n\n\"What else are you going to do?\" he asked her. \n\n\"I'm going to taste her,\" she said. \n\nThis time the words came out freely. \"Yes, taste me! Please! Don't make me wait!\" I could barely breathe, my excitement was overpowering.\n\nHer smile broke out to show gleaming, straight teeth. \"I'm going to stick my tongue inside her,\" she told him. \"And I'm going to make her come all over my face.\"\n\nWhy was she talking to him? Why wasn't she talking to me? It dawned on me what he had said at the coffee shop. I was her plaything, her toy. I was merely there for her pleasure. I was \u2013 \n\nHer palm pressed against my mons and pushed down, and I moaned a loud breath, completely forgetting what I was thinking. \n\n\"Yes, for fuck's sake!\" I growled, my back arching. \"Make me come! Lick my pussy!\"\n\nShe leaned in and breathed my aroma, closing her eyes the way an expert diner would savour a well-prepared dish. She stuck her tongue out a little but didn't touch me, and I felt her position herself so that her hands were placed on my inner thighs. Never before had I ever felt so exposed, so ready to be used.\n\nShe was looking at my pussy, soaked and aroused, and if it weren't for the fixated look of fascination and lust on her face I would have taken the hesitation for rejection. \"I haven't had this in so long,\" she said to no one in particular. She closed her eyes and planted her entire mouth on my pussy. \n\nI screamed. An long incoherent moan, babble, rambling line of sounds and words emerged from my mouth but I had no idea what they were. I struggled against my ties in pure ecstasy but it was no use \u2013 I could not move more than a few inches in any direction. \n\nHer tongue worked its magic, her hands never leaving my thighs. She reached her fingers inwards and pulled my labia apart to get clearer access to my clit and hole, sticking her tongue inside me as far as she could.\n\n\"Oh, inside... inside...\" was all I could manage. Her tongue swirled with impressive force against my entrance and then returned to my clit. I peered between my breasts and could only see her closed eyes \u2013 or maybe they were open but just looking down at my pussy, I couldn't tell \u2013 and the soft motion of her head as she drove my pussy into orgasmic heights.\n\nShe pulled back, and I saw glistening wetness around her mouth, her chin coated with my juices. Her eyes stayed locked on mine, watching my horror at her stopping. \"I want her to kiss me before I make her come,\" she told him. She was looking at me, but I could tell she was talking to him.\n\nShe crawled over me and straddled my thigh with her pussy. The sensitive skin of my legs instantly told me that she had no hair. Smooth flesh pressed against my thigh and I felt her own body start to open up, the warmth undeniable.\n\nShe leaned in to kiss me and I once again tasted myself, but this time with the added bonus of her soft, feminine, delicate lips. Kissing a woman is so unlike kissing a man, so much more... I don't know. Just... more.\n\nShe kissed me deeply, her tongue exploring my mouth and lips, playfully catching my lower lip in between hers. My thigh responded as best as it could to her grinding motion by pushing upwards, but my restraints prevented me from getting the leverage I needed. Even so, the heat began to increase and then I felt the unmistakable feeling of her wetness seeping onto my skin, starting a slow trickle down the inside of my thigh.\n\nHer breathing alternated between shallow and deep, hard and slow, controlled and raspy. She was getting almost as turned on as I was. She started rocking her hips back and forth along my thigh, increasing the pace as she kissed. Her breasts slid against mine, and I could feel the hard diamond-like buds colliding with my own. \n\nHer pelvis rested against my own as she thrust herself against my thigh but it wasn't enough to get me off. I broke the kiss and forgot that I was there for her benefit. I needed to come, and I needed to come now.\n\n\"Suck me off,\" I cried. \"Let me come...\" The pleading in my voice was clear. I was desperate.\n\n\"I've decided I'm going to come on her leg first,\" she told him, her face just inches from my own. \n\nShe leaned in and kissed me harder and started riding her pussy along my thigh muscle, her ass clenching over and over as she brought herself closer. Each thrust was accompanied by a slightly louder moan, a grunt. She kept her mouth locked on mine but her eyes remained squeezed shut as she used my body as a masturbation tool. She started coming hard and I felt her hands grab my breasts tightly as she let the waves of pleasure hit her.\n\nShe was breathing through her nose as her lips clasped on top of mine. Her eyes pinched shut, she emitted a muffled scream into my mouth. Before she fully came down from her orgasm she slid down my body and attacked my pussy.\n\nInserting two fingers deep inside of me I felt the bulk of her hand slide up to my opening as far as they would go. Her mouth locked onto my clit and I felt her tongue ravaging me. My orgasm crashed down upon me in waves, and my body wanted to curl up into a fetal position, locking her face between my thighs and riding out the pleasure.\n\nTied down as I was, though, I couldn't get away, and it soon became too sensitive. I tried to tell her to get away, but she wouldn't stop, and I only vaguely was aware of him leaving my side to step behind her.\n\nMy eyes shot wide open as the sensitivity became too great. I needed her to stop. \"No... no! Stop... Sensitive,\" I tried to explain. But she wouldn't stop. She wouldn't let up. Her mouth started pressing against my pussy in a rhythmic fashion and I saw he had stepped behind her and was fucking her from behind. I could only imagine what kind of relationship they had that they could share these kinds of fantasies with each other, and some twisted part of my brain was envious.\n\nAnother orgasm was looming, and each pounding hammer-like thrust of him into her pussy caused a chain reaction into my own pussy. The sensitivity blossomed back into another onslaught, and I rode another wave of come into her mouth. \n\n\"Twice,\" I said, not knowing if I said it in my head or actually said it out loud. But at that moment she lifted up and started to climb on top of me again. She turned around so that her pussy hovered directly over my face, and there was no doubt what she wanted me to do.\n\n\"She's going to eat me out now,\" she told him. It was a curious thing to say, I thought. But by saying it I felt another surge inside my belly. I realized I liked hearing her tell me what was going to happen. I wanted that soft voice to keep talking.\n\nApparently so did he. \"Go on,\" he said. I couldn't see him, only a vague movement at the foot of the bed let me know he was there.\n\n\"I want to watch you fuck her as she eats me out. I want her to make me come and you come at the same time.\"\n\nI smiled to myself at that. A chance to make two people come at the same time? I'd never tried that before. I felt his hands begin to untie my legs and the freedom seemed unnatural at first. My arms were still wide open but now I could bend my knees. \n\nI felt strong hands on my hips lift me up and a pillow inserted under my ass. \"I'm going to hold her open for your cock and I want you to fuck her,\" she said.\n\nSure enough, her hands slid down my torso and in between my legs. The sensation was so erotic I wanted her to do it again and again. Instead, though, she pulled my labia apart again, this time to give his cock access to me. My ass lifted off the bed gave him better leverage and I felt the cockhead rest against me. \n\nShe shifted her weight and suddenly her pussy was pressing against my mouth. She had reached behind her and was holding my hair, keeping me in place. She wasn't pulling it, more running her fingers through it, but she used me as leverage for rocking her hips back and forth.\n\nThis was a new experience for me, and I found it hard to concentrate. It was a twisted form of 69, almost as I needed to stay focused on her pussy while his cock probed me. As he fucked me, she rubbed my clit. I didn't know if she intended to make me come or not but it wasn't helping me bring her to orgasm.\n\n\"She has such a beautiful pussy,\" I heard her say. With her thighs around my head it came out as a muffled whisper but I could still make out the words.\n\nHer rubbing kept shooting ripples through my internal muscles, which he must have felt. With my ass off the bed and holding myself apart with my legs, I could feel my thighs start to tremble. His hands came down around my hips and he used them to guide his cock into me harder and deeper.\n\nHe settled into a rhythm and I could use that to allow myself to focus on her clit. I couldn't use my hands, tied as they were, but I lapped at her clit and pussy the best I could.\n\nWhile I didn't have the leverage, she did, and she used her hand to guide my head to the places where she wanted me to lick and suck. She was using me to make her come and I loved it. \n\nShe rocked her hips back and forth across my face, and I started to hear her hum and moan again. I knew she was going to be close.\n\n\"Almost there,\" she was telling him. \"I'm almost there. Don't come yet.\"\n\nHer breathing was difficult. The words came out with great effort. Each breath once again came with a grunt or a grown. \"Almost. There. I want. To see. You come.\" \n\nHer thighs started shaking and I knew she was going to flood my face with an orgasm soon. At that moment I had never wanted anything more in my life than to be covered by both of their come at the same time. \n\n\"Oh, now!\" she cried out, and I heard him shout in orgasm as well. I felt his cockhead expand inside my pussy and the jets of hot fluid enter my body. He withdrew from me after a second and I felt her lurch forward, taking him in her mouth to drain him completely. \n\nNow that I could see a little better, I saw his face staring upwards, sweat pouring down his face, pure lust and release spreading across his features. She must have been one hell of an expert blowjob artist, as he started to stroke her hair gently, looking down at her with a peaceful expression. ",
        "Part of me wanted him to fuck me some more, and part of me was aware that I would be sore if he did. Caught between those two desires the decision was made for me as he climbed off the bed and came over to release my ties.\n\n\"Why don't you take a shower,\" he told her. \"I'll help her.\"\n\nShe must have nodded her agreement and climbed off me and moved over to the bathroom. She turned in profile to look at me, and once again I was stunned by her beauty. I wondered if I would ever have the opportunity to be with a woman so beautiful and talented again.\n\nThe water started running and he untied my arms. I started to get up, when he gently pushed me back onto the bed. \n\n\"Thank you,\" he said, climbing on top of me. His cock was still mostly hard, and he slipped it into my pussy. \"You were fantastic.\" \n\nI was about to ask him what he was doing when I remembered the \"no questions rule,\" and took him deep into my body.\n\nHe moved against me, sliding in and out of my lubricated body, holding me in his arms. I wrapped my legs around him and stretched my arms by running them up and down his body, pulling him tighter into me. I curled up my legs around his waist, giving him easier access to penetrate me deeper.\n\nHis lovemaking was more gentle, far more delicate than I ever would have imagined. He kissed me, and even though his face wasn't as smooth as hers, the kisses were more tender and with more personal feeling behind them. \n\nI found my sexual passion melt into a more comfortable groove, and I undulated my hips against him, rubbing my clit against the base of his cock. He shifted his weight slightly so that the head started rubbing against my g-spot, and the orgasm which had been building before picked up where it had left off. \n\nHe started stroking my hair, then running the back of his hands against my breasts, then taking each nipple in turn into his mouth. He flicked his tongue across my nipples and I felt my body respond against his. \n\nOur fucking was just how I liked it. Extremely long, deep strokes, with a steady rhythm that I could use to build my orgasm. I was going to come, and come from a very deep place and he was allowing me to use the rhythm to do it. \n\n\"Oh fuck, oh fuck,\" I heard myself say, but it was a distant, hollow voice.\n\nI knew the orgasm was coming and I thought I was prepared for it but when it did it still came as a surprise. I clenched my entire body around him, and this time I could hold on for dear life. I wrapped my arms around his neck and my legs around his waist and just held on through my orgasm. He waited, patiently, holding onto me and the only thing that moved was his pounding heartbeat and the twitching of his cock inside my pussy.\n\nI collapsed back on the bed and he kissed me, sweetly, and we heard the water turn off.\n\n\"Looks like it's your turn. You look like you could use a shower,\" he grinned. I could only nod.\n\nI untangled myself from him and lamented his withdrawal once more. He was still rock hard, and I felt bad that I hadn't made him come again, but he waved it off as he saw where I was looking. \"It's okay,\" he said. \n\nI slid my legs over the side of the bed and tried to stand, only to find that I nearly fell over as my legs fought to relearn how to work. I managed to catch myself and stay upright, but wobbled terribly as I moved towards the bathroom. \n\nWe met in the door, her nude form, freshly clean, stopping abruptly next to mine. She had an elegance to her that was mesmerizing, and I wished I could ask her who she was. She smiled at me, and ran her hands down my chest, feeling my nipples with her thumbs and resting her hands delicately on my hips. A little taller than I was, she leaned down and kissed me on the lips, then slid past me into the bedroom.\n\nAs I took a shower I flashed back to what had just happened, marveling at it all. Such an adventure would probably never happen in my lifetime and I wanted to remember this day as clearly as I could. I soaped up my body and felt sexier than I ever had in my entire life, and thought about jumping out of the shower and joining them for another round.\n\nI realized that if I did that, though, I would risk jeopardizing her fantasy, and I didn't want to do that. It would be best to leave on a high note, I decided.\n\nAfter I finished the shower and dried off, I emerged back into the bedroom to see her fucking him, riding him in a reverse cowboy. I watched for a moment and had a momentary second guess about leaving, but decided that I really should go and leave these two lovers to finish her fantasy however they saw fit. I lingered just a bit longer than I probably should have, mesmerized by her beautiful face turned upwards in pleasure. I had felt that cock and I knew what she must be experiencing.\n\nNot having brought much clothing to begin with, it didn't take me long to gather my things. As I left I blew her a kiss from the door. She smiled and pursed her lips into a kiss in return.\n\nThe next day I returned to the same coffee shop. In the back of my mind I suppose I had hoped that he would enter the shop again and offer me another proposition. The previous night had been, in short, the most intense and electrifying sexual experience of my life and I found myself craving for a repeat performance. \n\nMy mind was torn as I replayed our first meeting in my head, \n\nThe book in my hand stayed open to the same page for the entire hour, as every time the door to the coffee shop opened I looked up in expectation and eagerness. He never showed up, however, and soon I had to disappointingly begin to gather my things. \n\nI reached underneath the table for my purse when I felt a light hand touch my arm. I jumped slightly and looked up into the pretty blue eyes of the blonde girl from the previous night. \n\nI couldn't prevent the huge grin from spreading across my face, and leapt up and gave her a kiss on both cheeks in greeting. She started to slide into the chair opposite and I returned to my seat as well. \n\n\"Last night as amazing,\" she gushed. \"You are so beautiful, exactly as he said you'd be.\"\n\nThe blush spread across my cheeks before I could protest. \"You are too,\" I said. The grin remained plastered across my face.\n\nNow it was her turn to blush. She looked away briefly and then brought her eyes back to meet mine. \"Thank you,\" she said, her eastern European accent hanging softly in the air. \"I hope that it was everything you hoped for.\"\n\n\"Excuse me?\" I asked. I wasn't sure what she meant. \n\n\"Last night,\" she said, nodding her head in enthusiasm. \"I hope that I helped your fantasy.\"\n\n\"My... fantasy?\" I stuttered a little. \n\nThe smile on her face started to fade. \"Yes,\" she said, looking somewhat confused. \"Your boyfriend said that you had a fantasy that you wanted to have fulfilled.\"\n\n\"My boyfriend...\" I left my voice trail off.\n\n\"Yes,\" she said. \"I met him yesterday afternoon in a book store and he said he had a proposition for me, that there were some rules...\" "
    ],
    "authorname": "drscar",
    "tags": [
        "bondage",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-proposition-4"
}