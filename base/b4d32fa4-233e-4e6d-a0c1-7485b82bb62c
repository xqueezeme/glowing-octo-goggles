{
    "title": "Fitting In Pt. 01",
    "pages": [
        "Anyone portrayed as having sex is 18 or older\n\n \n\nThis story is similar to thousands of others in the Romance category and yet different from anything I've read so far, although there may be older stories I haven't read. It involves two young people with abnormal conditions that are not painful physically, but they certainly cause emotional distress and the ridicule of ignorant people. \n\n \n\nThe boy and girl in the story have a condition known as Vitiligo, which is *depigmented skin*, sometimes called blotchy skin, where portions of skin are lighter or darker than others, it occurs in all races, it's most notable as white splotches on darker skin and almost a purple tinge on light colored skin. It is generally attributed to thyroid issues and caused by the immune system destroying melanocytes, the pigment that determines our skin, hair, and eye color. \n\n \n\nThe purpose of this story is to illustrate that people who look different, and face issues you or I may not endure, in the end want what everyone else wants, to fall in love and be happy. It's based on an actual couple in the small town my sister lives in, they have different jobs and names, I used their marriage as a launching pad. If you don't like soppy sloppy romance stories that express heartfelt love with a happy ending may I suggest you skip this one. \n\n \n\nFitting In\n\nSitting in the back of the police cruiser in cuffs I watched through the window as officers spoke with my girlfriend Brook and the business owner. The ambulance was just pulling away with Terrence Brookmire headed for the ER, in spite of how bloody his face was I honestly didn't think I'd hurt him that badly. Something snapped inside me, all my life he and his ilk made fun of and picked at me, I was not going to stand by and have them attack Brook as well. For the first time in either of our lives Brook and I had someone who cared for us beyond family, someone who waited for our call, someone who always smiled when we met, someone who wanted to share their life with another who looked like us.\n\nI have what is commonly called *blotchy skin*, a condition wherein the pigmentation of my skin is not the same throughout, there are what appear to be purple blotches throughout my body. It wouldn't be so bad if it was only beneath my clothes or on my hands, mine was also on a part of my face and neck. Kids can be cruel little bastards, most of the time I was made fun of, it would go like this, \"Hey Frank -- snickers and laughter -- followed with , *two-tone paint job* at that point the guffaws, ridicule and snide remarks would take over.\n\nI avoided most of the physical abuse because of my size. Being a farm boy I was fairly muscular even in grade school, as I grew older I was not only strong, I was tall as well. Instead of lashing out I retreated into myself, I did well in school but was never on the honor roll, I was too embarrassed to ever be in sports, all I wanted at the end of every day was to be left alone. Most days I sat at the very back of the school bus so I could be alone, we lived in a small community so I had some acquaintances but no real friends, thus my life consisted of chores, a bus ride to school, another day being made fun of, a bus ride home, more chores, homework, some TV and bed.\n\nWhen I graduated from high school I had no desire for college, in my mind it would be no more teasing and ridicule. I know it's supposed to be against the law to discriminate concerning employment, but it was plain as day when it came to an interview that no one was willing to hire a freak like me. As soon as I was 18 I enrolled in a CDL class and acquired my license, if nothing else I could work the farm with pa over the summer and drive truck for the grain farmers in the fall. I'd been turned down by everyone in town when dad told me he'd spoken with the owner of the feed mill, they were looking for a driver who didn't mind odd hours to deliver feed throughout a two county radius.\n\nIt became a dream job for me, I was hired on, rode for a month with the driver who was leaving and from that point forward I was basically on my own, I would leave the mill at five in the morning, get back around four, load in the next day's orders and head home by six. There were days I finished earlier if there were fewer deliveries, it was perfect for me, I was by myself most of the time, farmers didn't care what I looked like as long as the feed was there on time and I was polite, there was the occasional remark but nothing like the cruelty kids at school had put me through. Dad had switched to beef so there was no longer the morning and evening milking to do, by then my younger brother was old enough to cover the chores I once did.\n\nI'd been doing feed deliveries about two years, as an adult the verbal abuse and ridicule became almost non-existent except when I would run into kids I'd gone to school with, Terrence being the worst. He was going to state college an hour away, but was home often enough that he made my life miserable if I saw him, he was smart enough to not taunt me physically, it was more like shouts across a parking lot, or his favorite, at the bowling alley or a diner. Knowing I'm generally non-confrontational he would use those places where lots of people were gathered to be the worst.\n\nThe first time I saw Brook I had stopped at the grocery store on the way home to grab a few things for mom, she was two cash registers over making it difficult to see what she looked like considering her back was to me most of the time. Since I was looking at her from the back what interested me most was that she had a white streak in her otherwise solid black hair, then as she turned my heart raced and I caught my breath. A black girl, we didn't see many black people in our farm community, although that wasn't what I found so interesting, what was so interesting is that she had lighter parts of skin on her face and hands, she was like me. In my eyes she was the prettiest girl I had ever seen.\n\nShe no more than thanked the people she'd checked out than she turned to the next customer and continued her job, I determined I wanted to go through her line the next time I was at the store, which happened to be about two weeks later. Fortunately, she was on the twenty items or less lane and I had less than a dozen, there were two ahead of me, so I took the time to look at her without appearing to be a pervert.\n\nShe had beautiful facial features, high cheek bones, gorgeous eyes, delicately shaped chin, and perfect lips, they were full and pronounced, covered with what appeared to be a soft red lip gloss. I thought she might be five seven or eight, even though the store smock covered her upper body it was obvious she wasn't flat chested, not overly large either, her breasts appeared to be the perfect size for her body. From what was visible there were splotches of lighter skin on her upper cheek leading slightly into the temple area on one side, and on her hands, the rest of her was covered.\n\nBy the time I was in front of her she looked up, smiled, ask how my day had been and proceeded to run my items through. If she was shocked by my appearance she didn't show it, then again why would she be, she continued to chat as she bagged, ending with a thank you and please come again. With plastic bags hanging on my fingers I walked to the truck stupefied, she showed no shock or discomfort, she smiled an honest smile, her voice was like honey, why had I never seen her before? Bringing her up at supper I discovered she was the daughter of the new credit union manager, they had moved from a more populated area partly because their daughter was not well received where they had lived.\n\nI had an account at that very credit union, the next time I deposited my paycheck I chose to go inside instead of the drive through. Her dad was a big man, not very tall but big around and it didn't look like much of it was fat, his head was shaved bald and he wore gold rimmed glasses, he looked not only intelligent but distinguished as well. Over the next few months, I always looked to see which register Brook was on when I entered the store, then standing in line as long as it took just to talk with her again.\n\nIt never dawned on me to look at her nametag, through bits and pieces of conversation while checking out I learned that her name was Brook, she was nineteen and had moved with her folks, that her mom taught German at the high school and she had a younger sister. She never showed any apprehension toward me, always smiling, always friendly, always seemingly eager to greet me. I was anything but knowledgeable about dating, one evening after dishes mom was in her sewing room, I meandered in and sat, having those *mom* extra sensory abilities she stopped, spun, and asked,\n\n\"What's up Frank? How can I help you?\"\n\nI asked if she'd ever seen the colored girl at the store, that I sort of liked her and did she think if I asked her out that she would accept.\n\nMother smiled, \"First off hon I think she'd probably rather be called black than colored, yes I've seen her, in fact she's checked my groceries several times, she seems very sweet. As for whether she'd go out with you, ask her, then you'll know.\"\n\nI got very serious, \"Mom, is this thing with my skin hereditary? I wouldn't want to pass it along to my kids.\"\n\n\"No Frank it isn't hereditary, she has the same skin condition you have. Does it really matter though Frank, if you're looking past her anomaly maybe she's looking past yours as well, in the end it isn't what we look like because that all changes with time, what counts is what's in the heart. I will caution you though, if she goes out with you be prepared to defend her honor, you know very well that there are people in this town so narrow minded they can't see beyond their nose.\"\n\nHaving taken my mother's advice to heart I stopped at the store for something I didn't really need just so I could walk through her line. It was quarter to five, I asked her what time she was through for the day, she told me seven but the next day she'd be off at five.\n\n\"What did you have in mind Frank?\"\n\nI was nervous as a cat on a hot tin roof, \"I ... um... I was wondering if I might get you a coffee?\"\n\nShe shooed me on through, \"Wait by the wall for a minute while I take care of these people.\"\n\nTwo customers later she motioned to me with her finger, \"You'll have to ask my dad if it's alright, if he says it's okay, I'll have coffee with you.\"\n\nI nodded as I smiled and left. I explained my dilemma to mother and dad at the supper table. Dad sat back, \"Guess you'd better ask her dad then. Can't miss him, he's the only black guy at the credit union.\"\n\nThree days later I was back in town early enough that I could get to the credit union before they closed, when I asked the lady at the counter if I could see the president she acted like a snotty wench asking why I needed to see him. He's a busy man.\n\n\"It's a personal question, will you see if he's available, please?\"\n\nIt was Dorah Benkins, she'd been two grades above me and was nearly as bad as Terrence, giving me an annoying glance, she walked to the office, spoke with Mr. Ellory, walked back and told me no. No reason, no explanation, simply no. At home I explained what had happened, mother gave me a stern look.\n\n\"So that's it, you're going to give up?\"\n\n\"Well what am I supposed to do? Dorah said he won't talk with me.\"\n\nDad sat back, \"I met him, seems like a nice man, I'm betting this is more Dorah's doing than his, she's a real piece of work that one, just like her old man. Credit union closes at five, wait in the parking lot and see if he'll talk with you. What do you have to lose?\"\n\nThe next day I waited in the parking lot as personnel walked out, I didn't see Mr. Ellory, his office light was still on, so I waited. Approximately fifteen minutes later he walked out and headed for his car, I got out of the truck and walked slowly toward him as he glanced my way several times.\n\n\"Mr. Ellory may I speak with you a minute?\"\n\nWe were about five feet apart and I stopped. He replied, \"You'll need to stop in during regular hours and make an appointment, I don't do any business after office hours.\"\n\n\"It isn't about banking sir, it's about your daughter Brook.\"\n\nThat definitely got his attention. \"What about my daughter, and who are you?\"\n\n\"My name is Frank sir and I'd like to take your daughter for coffee with your permission.\"\n\nHe studied me for what seemed hours when in reality it was less than a minute before he spoke.\n\n\"Come over here in the light boy. What's wrong with your skin? Oh, never mind, you and Brook have the same condition.\"\n\nHe looked me up and down, \"What kind of job do you have that you're dusty and dirty? And what makes you think my daughter wants to have coffee with you?\"\n\n\"I drive truck for the feed mill, leave at five in the morning and get back to town most days late afternoon or early evening. About coffee, I already asked her, she told me I had to talk with you.\"\n\n\"Weren't you in yesterday? Why didn't you talk with me then instead of in the parking lot where it's dark?\"\n\n\"Dorah said you wouldn't see me.\"\n\nHe looked pissed, \"Oh she did, did she? Maybe it's time to have another talk with her, she's not very nice to my daughter either. Tell you what, Frank is it? I'll tell her it's okay, I'm warning you though, you hurt my baby and I'll hurt you.\"\n\nI drove home with a smile on my face and a lump in my throat, if she accepted it would be my first date ever. It was the next Monday before I was in the store again, as I checked out she told me she was off at five and if I still wanted to take her to coffee to pick her up at seven then handed me a piece of paper with her address. I smiled, nodded and told her I'd see her at seven, as I walking out the door I heard Tiffany Banks say to one of the other girls, \"Yeah, she's going out with two tone, they'll make a great pair.\"\n\nI stopped, turned, and was going to put that bitch in her place, Brook had heard it and when she caught my eye she shook her head and motioned for me to go. I could see the hurt in her eye's and it tore me apart, I knew what she was going through, I had experienced it all my life, I wanted to smash Tiffany's face in, to alter her looks forever to see how she enjoyed being taunted and teased mercilessly.\n\nI arrived promptly at seven, met the rest of her family, told her folks I'd have her home by ten, her dad corrected that with *nine*, Brook countered with *nine thirty* took my arm and led me out the door. I opened the door for her, we talked as I drove, she began the conversation,\n\n\"Don't worry about him, he barks a lot but he seldom bites. He's overly protective of me, I was teased and taunted a lot where we lived before, we moved here partly because of my skin condition. How about you, were you teased?\"\n\nI said nothing at first, only nodded. \"Yes, I was and still am, I'm usually called *two tone* and whatever other cruel thing they can think of. I've kept my cool most of the time, I only got expelled once for fighting, we both should have gotten expelled for five days but Phillips daddy was on the school board and made sure all he got was detention for a week.\"\n\nWe talked and laughed and had a good time for the better part of two hours, only a few times did we get stares or hear comments, just loud enough for us to hear but not loud enough to cause attention to themselves and their narrow ways. I walked her to the door at nine twenty, as we stood on the steps saying goodnight the front door opened and her dad more or less blurted it was time to come in. She looked at him and stated emphatically.\n\n\"Go back in the house dad, I'll be in when I'm done thanking Frank for a nice evening.\"\n\nFrom the open door I heard a woman's voice proclaim loudly, \"Leave those kids alone, get back in here and shut the door.\"\n\nWhich he did. We didn't kiss, instead giving each other a light hug, the scent of her perfume and the essence of her hair seeped into my soul, my nostrils were seared with her fragrance. On the way home I thought about her a lot, she wasn't buxom, having never seen an adult bare breast I had no idea about cup sizes, she was average height, lovely hourglass figure and a beautiful face. Had she not had pigmentation issues I was sure she'd have guys lining up to date her, well, too bad for them, I could see past that and if things worked out, I was gonna make her my girl.\n\nFriday night we drove the twenty miles to Union City for a movie, went through a fast food drive-thru then sat in the parking lot eating, we'd both been insulted and stared at so many times it was as though this behavior was normal. Later when I walked her to the door she put her hand at the side of my neck, kissed me softly and said thank you just as her dad turned on the outside light and opened the door. As I walked away, I heard her say,\n\n\"In the house daddy, this has to end. MAMA.\"\n\nWhich brings us to why I'm in the back of a police car cuffed. The bowling alley is a hangout place for teens on weekends, it also has the best pizza in town. Brook and I were enjoying our pizza minding our own business when who walked in but Terrence with Dorah of all people. Everyone in our class had known Dorah was quick to spread her legs, she was generally referred to as butter legs because they spread so easily. I figured Terrence must have been awfully hard up for pussy if he had taken her out, things would have been just fine if they had simply gone their way, but no, that wasn't to be.\n\nWalking to our table it was Dorah who spoke, \"Would you look at this Terry, ever seen anything more pathetic?\"\n\nTerrence chimed in, \"We got a two-tone white and a two-tone black, can it get any worse.\"\n\nI bristled as I pushed my chair back, Terrence should have kept his mouth shut after I stood and told him to walk away. He didn't.\n\nInstead he was stupid enough to speak, \"Take a seat Frank, don't make me whip your ass in front of your little black and white girl here.\"\n\nI'm not a fighter, I don't know any of those oriental martial arts things, but I do watch a lot of MMA. He pushed me into my chair, as I rose again he slapped the side of my head like you would a child. What came to mind was the many times I'd seen an MMA guy use an elbow to strike their opponent when they were close enough, we weren't a foot apart as I quickly raised my arm and nailed him in the side of the head with my right elbow. It dazed him enough that I was able to punch him in the ribs, as he doubled I slammed his face into my knee and watched as he dropped to the floor, blood was spurting everywhere.\n\nThe owner knew there would be trouble the moment Terrence stopped at our table and had called the cops who burst into the place as Terrence hit the floor, since he was the only one covered in blood, they cuffed me. As one officer led me away the other began asking questions, I saw Brook exit as I looked through the window of the cruiser, she stopped next to the door and mouthed *it's okay*. Five minutes later I was being taken from the car, the cuffs removed and told to follow them to the cop shop. After we gave our statements along with a half dozen other's we were told to go our way.\n\nOn the way to her house I was surprised when she put her hand on top of mine, at the front door she kissed me and stood back.\n\n\"Frank, nobody has ever stood up for me like you did tonight. Thank you, if you'd like to take me out again, I would love that.\"\n\nAt that time her dad jerked the door open and was about to speak when Brook looked him in the eye with a pissed expression on her face.\n\n\"Close that damned door father, turn out that light and never do this to me again.\"\n\nI wasn't sure what to expect until I saw her mom's hand land on his shoulder and jerk him inside.",
        "\"Get in this house Jerome, stop treating her like she's twelve.\" Followed by the click of the door latch.\n\nIt was a chilly night, instead of shivering on the porch she suggested we talk in the truck, with the heater on it was comfy and pleasant, we talked some about the night, was she okay, was I okay, did she think I had over reacted? Small talk like that until it was time for her to go in, looking at me I knew there was a question coming.\n\n\"Have you ever had a girlfriend Frank?\"\n\nI shook my head, \"Have you ever had a boyfriend?\"\n\nShe shook her head, \"You're the first boy to ever ask me out, when we kissed it was my first, I'd like to be your girlfriend, but I don't know how.\"\n\n\"I never kissed a girl before I kissed you, and I want to be your boyfriend but I'm like you, I have no idea what I'm supposed to do.\"\n\nShe was looking out the windshield, then looked at me, \"Well ..... I know I like to be with you, I know I like to kiss you, we might be inexperienced but we aren't dumb, why don't we start there and see where things lead us. Are you alright with that?\"\n\nIt was my turn, \"Can I hold your hand then? Can I kiss you goodnight when we go out? Can I tell people you're my girl? Is your dad going to allow this?\"\n\n\"Yes, yes, yes and yes, if you're my boyfriend you'd better hold my hand and kiss me goodnight. Don't worry about my dad, moms excited for us both and she'll reign him in. Like I said, he growls a lot, what you need to do right now is walk me to the door and kiss me like I'm your girlfriend and not just a date.\"\n\nI had no idea what that meant, I kissed her like I'd seen my dad do with mother hundreds of times, soft, long and with affection. Breaking she went *phew*, I took that as a positive sign and did it again. By the third kiss she had her arms around my neck, I could feel her breasts pushing into my chest, then we stopped, she said goodnight and walked into the house. I was glad she'd walked inside so quickly, my cock was stiff as a board and peeking out the top of my underwear. Mom was waiting up and asked what had taken place at the bowling alley, she'd had the scanner on when the call went out, once I'd explained everything we parted for bed.\n\nBrook and I were dating two or three times a week, we endured some negativism from others but nothing we couldn't easily ignore. Terrence tried to lodge a civil suit against me, the judge threw it out telling him not to waste the courts time with frivolous lawsuits. We had reached the stage where our make out sessions were beginning to steam the windows, we were at an impasse, lying across my lap in their den one evening she asked me point blank.\n\n\"Frank, why haven't you ever tried to touch me ... you know, romantically?\"\n\n\"I was afraid you would be mad at me and I didn't want to lose you as my girlfriend.\"\n\n\"Have you ever wanted to touch me? I mean, am I sexy?\"\n\nI could feel my dick beginning to grow and was scared as hell she would feel it as well. \"Yes, I want to, you're the hottest girl I've ever known.\"\n\nAs I was talking I slid my hand up her side and cupped her breast through her top, I played ever so lightly, having never felt a breast before I wasn't sure what to do or if I would hurt her.\n\nShe put her hand on mine, drew it to her face and kissed the back of it, \"Not here Frank, not in the house, next time we're making out. Okay?\"\n\nMy heart was pounding a mile a minute, she said *next time we're making out*, oh my gosh, she was going to let me feel her breast the next time we made out. Being a Wednesday knowing we had plans to go out Friday night I reveled in the thought that in two days I might see and feel my first adult bare breast. What if she let me kiss and suck them, oh geez, my cock is hard as a bowling pin, please Lord let her go to the toilet or something. As though God had heard my silent prayer she sat up, told me she was going potty and she'd be right back.\n\nWhat a relief it was to adjust my aching dick, at least now it wasn't bunched in my underwear sideways causing great discomfort. As she sat next to me and snuggled into my side after using the bathroom I was thinking I'd dodged the bullet when she looked up at me with her piercing green eyes.\n\n\"Did I do that to you?\" She asked, quickly shifting her eyes down then back into my gaze.\n\nI wasn't going to respond but did, \"Yes, I'm sorry, I should be able to control myself better. I'll try not to let it happen again.\"\n\nShe was smirking, \"Just how are you going to do that, isn't that what's supposed to happen when guys get excited? You said you think I'm hot, if you didn't get like this then I would think you aren't telling me the truth.\"\n\nIt was about that time her dad flipped on the obnoxiously bright overhead light hoping to catch us at something, we'd been kissing with her sideways to me, arms around my neck and her left leg over the top of mine. Though we'd had the table lamp on, when the overhead light came on we were both startled as we looked up.\n\nBrook was on her feet yelling *MAMA* as loud as she could over and over, by the third yell her mother was through the door standing in front of him, I cringed, I'd seen that look on my mom's face before and it never ended well for dad.\n\n\"Jerome get your black ass out of this room and leave these kids alone, it's shit like this that drives them to the backseat of a car and unwanted babies. We raised her right, now move your ass.\"\n\nBrook's mouth was hanging wide open as she looked my way, I had a goofy grin on my face thinking, yup, she's as mean as my mom, only an insane man would want to go up against a woman when they're that pissed. I pulled Brook back to my side holding her gently.\n\nHer voice squeaked as she spoke, \"Hold crap, I have never seen mom tear dad a new one like that, I have a feeling daddy will let us be from now on. I mean, we don't need to be breaking all the rules, but at the same time we weren't doing anything wrong. Wow, where did that come from? I've never seen mom so upset with him.\"\n\nAs she walked me to the front door Alice stepped out of the kitchen and wagged her finger for us to follow. With hands on her hips she stared a moment before speaking.\n\n\"Brook, I've never spoken to your father like that before and I hope never have to do it again, I did it because if I don't put a stop to his anxieties he'll smother you and drive Frank away. What I need from you two is to be respectful of him and smart in your relationship, it's only natural that you will want to be more involved physically, just don't be stupid. If at all possible stay virgins, if you can't, at least take precautions, that isn't me giving you permission to go off in the corner and have sex, I'm telling you to be smart and dear God don't rush things.\"\n\nWith her pep talk over she hugged the two of us together and said goodnight. Brook walked with me to the truck and sat inside saying nothing for a few minutes.\n\n\"Mom's right, we need to be careful and not let our love be centered around sex, no one has ever shown me an ounce of interest before Frank, I want to give myself to you, I want us to be intimate, but I also want us to be smart. Mother told me passion will creep up without you ever realizing it until you're naked and lost in the throes of intimacy. I meant what I said in the den, I want you to touch me, I want to feel your strong hands on my bare skin, but I don't want to have to worry that if I say stop you won't. Do you understand what I'm saying?\"\n\n\"Yes Brook, I do. I would never force or hurt you in any way, I'm like you, no one has ever seen me as anything but a freak except family and you. I don't want to lose you, I want to be with you, I'll go at whatever pace you decide, I won't do anything to make you mistrust me.\"\n\nTelling me to walk her to the door she held my arm tight to her body, I could feel her firm little breast pressed tightly against my arm, at the door she snuggled into my body, arms around my neck, her warm soft lips on mine. With both hands on my chest looking into my eyes she whispered.\n\n\"I'm really falling for you Frank, please don't break my heart.\"\n\nShe spun, opened the door, sent me an air kiss and closed the door. Driving home I could think of nothing else but her telling me I could touch her breast, at the same time I needed to take heed to what her mom had said. We needed to be smart and not let our hormones run wild, I wanted her to trust me implicitly, in order to do that I was going to have to adhere to her wishes as much as possible. Thursday was a long day for me, we texted as I ate my lunch alongside the road and again when I got home just after seven.\n\nBrook: Wow you really had a long day, were you far from town?\n\nMe: Yup, all the way at the far end of the county and because it was the last stop, I nearly didn't have enough of the feed he'd ordered. I'll hafta let the mill know I should take extra if he orders more.\n\nBrook: I missed you, wish you could come over for my nightly kisses but I know you're tired. Get some rest baby, I'll see you tomorrow night at six. Oh ... mom says hi.\n\nFriday was a welcome change from the past few weeks, all local runs with lower than average feed orders, I would be done by four if all went right. Getting out of the shower ma asked if I was eating with them, I explained Brook and I were going for supper together, but thanks for asking. As I left the bedroom toward the kitchen mother patted the couch next to her, she had something to say and I was going to listen.\n\n\"You really like this girl don't you Frank. Just remember she's your first love and sometimes we go head over heels with somebody because they pay us attention. I'm not in disagreement with you, I'm saying make sure she's the one before you give her your heart.\"\n\nI sat back against the cushion, took her hand and sighed, \"She's the one mom, I know it inside and I think she feels the same way. I know we have different skin color but that doesn't matter to either of us, if we don't care why should it matter to anyone else?\"\n\n\"You're right Frank, I wasn't challenging, I was being a mom wanting to make sure my baby boy was okay. Frank .... (long pause) you kids are being careful aren't you? I think you know what I mean.\"\n\n\"Geez ma, you sound like her mom. We haven't even gotten past first base, but yes, if it goes further we'll make sure we're protected.\"\n\nI had no intention of telling her we planned to go to second base that night. Walking Brook to the truck I knew something wasn't right, I kept my mouth shut until we parked in the lot of Don's Diner, we were both in the mood for chicken fried steak and he had the best around. I couldn't take it any longer.\n\n\"Brook, have I done something wrong? Please, tell me, the silence is killing me.\"\n\n\"It's not you Frank, it's me. I feel like some kind of tease, I told you we'd make out tonight but I can't, I started my period today and I feel lousy. I'm about four days early, mom says being early is just an inconvenience, being late is psychological torture. I assured her there was no reason to be late, but you know how mothers are. I know I built you up and got you excited, I'm so sorry Frank, please don't be angry.\"\n\nMy mind was pondering her statement, why would I be angry? She didn't control her bodily functions when it came to ovulation, hell, even I knew that, I needed to put her mind at rest. As I opened her door I put my arms around her as she slid out.\n\n\"I'm not angry Brook, why would I be angry? Can I still kiss you goodnight though?\"\n\nWiggling her slender body against me I sensed a change in her misdemeanor, \"Thank you, you're so sweet, and yes, we'll kiss, if my tummy feels better after we eat we might pick up where we left off the other night.\"\n\nMy dick went from Meekers limp leaker to Frank's flagpole in milli-seconds, I had everything I could do to keep it from showing, that God for longer coats. Walking across the parking lot I was all smiles, maybe, just maybe I might get to feel her bare breast after all, my heart was pounding like a sledgehammer breaking rock. Sitting next to me in a booth instead of across from me at a table as we normally did she put her hand on my thigh.\n\nLeaning close and looking up at me she smiled, no, it was more like a smirk, \"I like that I have such an effect on you, you make me feel wanted.\"\n\nWhat the hell???? \"How did you know, I tried to stop it but I can't when I'm with you. I'm sorry.\"\n\nShe continued to coo softly, \"If I didn't do that to you I would worry, I'm flattered that you have an erection, it tells me I light your fire as my mom would say. Let's order and see where the night goes.\"\n\nLeaving Don's I prepared to turn left toward her house when she grabbed the steering wheel. I quickly braked and looked at her.\n\n\"Take me to Sheep Crossing Road\" was all she said. I knew where it was and that while it had once been commonly used it was now nothing more than a gravel road barely traveled, and certainly not at night.\n\nIt had at one time been where all the kids parked, now they just rented a cheap motel room or went down by the dam not caring if they were seen or not. I knew there was a side road that dropped about fifteen feet into an opening, driving the truck down the old rutted road I turned into what was years ago a stone quarry. Circling around so I was faced out I shut off the engine and gazed as the moonlight softly caressed her ebony skin, lips so kissable, a face that could launch a thousand ships, and her beckoning smile.\n\nFlipping the console up we scooted to the center of the bench seat embracing as we did, our lips finding one another, her body gently molding into mine, our kisses were soft at first, full of passion for each other. Our kissing continued to intensify until we were practically devouring the others mouth, our tongues battling back and forth, in a move of boldness I slid my hand up to cup her breast. To my great surprise she pushed into my hand and made a whimpering noise into my mouth, emboldened I gently squeezed and explored, having never felt a girls boobs I had no idea if I would hurt her or not.\n\nPulling back she took my face in her hands, \"It's okay, you can squeeze a little more, make them yours Frank, don't forget the nipples, that's one of my most sensitive areas.\"\n\nI was feeling her through the blouse as we necked, her body squirming into my hand, suddenly she pushed back.\n\n\"Take my blouse off Frank, I want you to see my body before this goes any further.\"\n\nI did as I was told taking my time with each button, with it completely undone she shrugged it off her shoulders and sat back. With the moonlight on her entire upper body I could see the white splotches of skin were expansive across her stomach and chest extending under her bra, without knowing why I reached my hand to her and slowly began to trace the pattern from her waist to the top of her chest softly running my fingers over the bra cups. Once again, in a moment of not knowing why, I put my hand at the back of her neck, pulled her lips to mine and kissed her passionately.\n\n\"I've never seen anything so beautiful in my life, Brook your perfect.\"\n\n\"So, it doesn't gross you out? My lower body is similar around the pelvic area, I'm so self-conscious of how I look compared to others.\"\n\n\"I have nothing on you, my body is as riddled with splotches of color as yours is, mom says it isn't hereditary so if we got married and had babies they wouldn't necessarily have the same pigmentation problems. Gross, no not gross, the exact opposite.\"\n\nReaching behind she unclipped her plain cotton light blue bra and slid it off her body, my heart nearly stopped, I know my breathing did as I gazed upon the most perfect pair of breasts I had ever seen in any publication. There were streaks of white that flowed through them which only added to their enticement in my opinion. I reached out asking permission with my eyes, she nodded and leaned in for kisses as my calloused hand felt the bare skin of her breast, I molded it, I pulled it out slightly, not forgetting what she'd told me my fingers found the nipples. Pinching them a little bit, rolling them, making them seem as hard as the gravel the truck was sitting on.\n\nThey were so soft and warm, firm and yet delicate as they fit into my hand with a smidge left over. I wanted to kiss and suck them but was afraid to advance beyond where I was, with another move of boldness I broke our kiss and put my lips on her right nipple. She purred lightly as I sucked and ran my tongue over as much flesh as possible, holding my mouth to her chest she gasp and pulled me away.\n\n\"Frank, this is as far as we can go, you know that don't you? I'm dirty down there and I don't want you to touch me in that place tonight.\"\n\nI didn't answer, I simply went back to manipulating her tits with my mouth and hands, I knew nothing about female orgasms at that point but I was pretty sure she'd had one when her body tensed, quivered and she let out a soft uh, uh, uh before she went limp in my arms. Lifting my face from her breasts I looked into her eyes.\n\n\"Does it feel good Brook, I mean did you like it?\" She nodded. \"I know you don't want me to touch you inside your pants, but can I touch you outside your jeans?\"\n\nAfter what seemed an eternity she nodded. I didn't make a promotion of it, I gently slid my hand between her thighs and cupped her sex, her body pushed into mine as I felt her pussy while we kissed. I didn't move my hand around, something told me to leave it there, to just touch her body through the jeans. It was already ten twenty, I suggested we should get her home before papa bear started calling.\n\n\"Let him call all he likes, I shut my phone off when we left Don's. You're right though, we should go. Did I disappoint you Frank? Before we go, I want to open your shirt, will that be okay?\"\n\nMy chest and stomach areas looked similar to hers with splotches in other places, she did the same with me as I'd done to her, tracing the areas with a finger. She reached for her bra asking me to clip it for her, then put on her blouse tucking it into her jeans as she normally did. We looked no worse for wear than normal, we didn't think anyone would be suspicious of how we looked, little did we know that passion has a way of showing in your demeanor as well.\n\nI went in the house with her since all the lights were on, her younger sister and mom were on the couch watching something, when her mom turned to look at us it was obvious the gears were turning. We tried being as nonchalant and cool as possible but I think we failed because as Brook kissed me at the door I heard her mom tell her sister to go to bed, she needed to talk with Brook about something.\n\nLying in bed wondering what her mom had meant my phone pinged just after midnight.\n\nBrook: Mom knew something was up, she pressed me until I told her I'd let you touch my breasts and nothing more. I didn't dare tell her you sucked my nipples and felt between my legs although I think she knew.\n\nMe: Holy cow, was she mad at me? Will I ever get to see you again? Oh crap, did I ruin it?\"\n\nBrook: You ruined nothing, I got the *be careful* speech again and then she suggested maybe I should start on the pill if we were going to explore.\n\nMe: The pill, really? So we can still go out?\n\nBrook: I didn't have the heart to tell her I started on the pill over a month ago. I knew we wouldn't be able to hold off forever. We can still go out and cuddle and kiss and feel and explore. By the way, tonight was no fair, you still had all your clothes on and I didn't get to touch you.\n\nMe: Really, you want to touch me?\n\nBrook: Yes I want to touch you, I loved how you put your hand on me and didn't try anything more. Maybe from now on I can sit in the middle so you can put your hand on my *you know* when we're driving and nobody else can see us.",
        "Me: Oh Brook, I would love that, your body was so warm and soft, I wanted to touch you all night long.\n\nBrook: That time will come baby, for now we need to sleep. Say, I have tomorrow off, can we do something?\n\nMe: Do you fish?\n\nBrook: Love it, can we go fishing and have a picnic?\n\nMe: Pick you up at eight. Hugs and kisses.\n\nI have no idea how long I lay in the dark, my mind wouldn't stop, last I looked at the clock it was after one. Surprisingly I was wide awake at six thirty, I grabbed a bag of ice from the freezer to dump in the cooler, grabbed some Dr Pepper and lemonade from my personal stock, cleared it with ma to take the rest of the fried chicken leftovers, tossed a bag of chips in a tote along with some plasticware, napkins and other assorted goodies. With the fishing gear in the back I headed for Ross's bait shop to get shiners and night crawlers, as I pulled up in front of Brooks she was sitting on the steps with her mom.\n\nWalking to each other we three met mid-way, Brook didn't hesitate a second to stand on tip toes and give me a good morning kiss. As we were trying to leave her mother continued to lean into the window admonishing us to be careful around the water, make sure we put on sunscreen and a host of other mother/child bullshit we already knew by heart. With Mrs. Ellory still leaning in the open window Brook whispered, \"drive\" as I leaned forward looking past Brook I thanked her mother and slowly pulled away. Geez, that woman could talk as much as my mom, it must be something in the official mom book that causes them to do that.\n\nWe had a wonderful time fishing, I knew of a place underneath what used to be an old covered bridge that was no longer in use, because the road was so seldom traveled, none of the city slicker people knew my special spot existed. We caught Bluegill, Crappies, Sunfish and a few Perch, all in all a nice mess of filets when we were done, I put them in zip-loks icing them in the cooler while we snacked on our picnic lunch.\n\nBy mid-afternoon I suggested we might leave since we'd reached our quota, she had other plans, she wanted to lay in the shade on the grassy bank under the bridge and make out. Who was I to argue, by the time an hour had gone by we were both stripped to the waist and grinding our pelvis together with our pants on. Feeling bold I asked if I could touch her like I had last night.\n\nHer answer made me stop breathing, \"Only if I can touch you too.\"\n\nSliding my hand slowly over her tummy headed south she pushed up and opened her legs a little more than last night. I also felt her tiny hand dance across the front of my jeans, then stop and softly wrap her hand around as much as the tautness of my jeans would allow. Oh my God, I thought I was going to cum on the spot, through some divine nature it didn't happen, as I cupped her she simply held her hand on the bulge in my pants.\n\n\"Frank, open my jeans and put your hand on top of my mound, but not in my panties. I want to open your jeans and touch you like you touch me.\"\n\nAs the old Spanish guy who years ago had worked for dad would have said, \"Sont of a Beech\", we were headed into unknown waters. I unsnapped my jeans, she quickly unzipped them and slid her hand over the top of my underwear holding onto as much of me as her hand would allow. I was trying to maintain sanity long enuf to open her jeans and do the same to her, with her jeans open my hand ascended southward, the feel of her delicate panties made me stop a moment and look, red shiny ones. I could feel the little bulge where the pubic hair pushed out against her panties, it made me groan.\n\nAs Brook began to instinctively stroke my cock I had to stop her. \"Please don't Brook, if you continue I'm going to explode.\"\n\n\"Is that what you say when you cum? Explode?\" I nodded. \"Can I watch, I've read about it but never seen anything like that. Can I? If I wasn't having my period I would let you touch inside my panties.\"\n\nI commented, \"At least pull my underwear down and grab a paper towel so it doesn't go all over the place.\"\n\n\"Oh my, I've never seen a live penis before, I mean on a man, it's so thick and long. Why does the top look almost purple?\"\n\n\"It's called the head and mine looks bigger because I'm cut, it looks purple because all the blood flow in my abdomen is concentrated on my dick, I mean penis.\"\n\nShe giggled softly, \"I like dick, we can call it a dick? Maybe I should give it a nickname. Mom doesn't think we know but she calls dads *the rod of correction*. Whenever she talks like that we know they're gonna have sex. Do I just rub up and down?\"\n\n\"Spit in your hand and combine it with the shiny stuff coming out so it isn't dry. Yes, like that, and when I'm ready to cum put the towel over the end enough that it isn't all over us.\"\n\n\"How will I know?\"\n\nI laughed to myself before I spoke, \"Oh, you'll know. Believe me you'll know.\"\n\nLying back with my right arm outstretched she snuggled into my side while her tiny right hand worked it's magic up and down my aching cock, I wouldn't last long with her doing it but I didn't care, she wanted to see me cum, by golly I had a load waiting to satisfy her curiosity. I was leaking precum like a dripping faucet, she figured out she could slide her hand over the tip and then down again to keep me lubricated. I was groaning and breathing in gasps as my body stiffened, I heard her let out a little squeal.\n\n\"It's coming isn't it Frank, it's going to shoot out isn't it.\"\n\nI hissed a yes and raised my hips off the blanket as pulse after pulse of hot, thick, deep white semen shot into the air, she was so mesmerized she had forgotten to cover me, it was all over my chest and stomach, the first was so powerful it shot past my ear landing almost in her hair. Her hand was covered in semen as she gently stroked, I had to put my hand on hers, I was so damned sensitive it almost hurt. When I finally caught my breath and looked down at her she was smiles from ear to ear, her little cum covered hand still wrapped around my rapidly softening dick but not moving.\n\n\"Did I do good Frank? It looked like I did but then I've never done that before. Wow, you really had a lot of stuff didn't you, is it always like that? I mean that much?\"\n\n\"Yeah, most of the time, I might have had a little more today because you were doing it.\"\n\nShe chuckled, \"No wonder women get pregnant so easy, what vagina could combat a load like that?\"\n\nReaching for the roll of paper towels I asked, \"Since you're going to call mine a dick, can I call yours a pussy?\"\n\nLeaning on an elbow wiping her hands and then my body she giggled that schoolgirl giggle again and said half embarrassed like, \"A pussy and dick it is then.\"\n\nPutting ourselves back together she was adjusting her panties when I looked at her and smiled.\n\n\"What, what are you smiling about?\"\n\nI was smiling so hard I nearly couldn't speak, \"I like your hair, in your panties, I like that.\"\n\n\"You don't want me to shave then?\"\n\n\"Nope, I want you to look like a woman and not a little girl.\"\n\nIt was late afternoon and time to head home as rain clouds rolled in. I took in a large zip-lok with several different filets for her dad, he was whooping and hollering with excitement, he was as ignorant of our shenanigans as could be, not her mom. She gave us both the once over and then the evil eye only moms possess. Pointing to the living room she said softly.\n\n\"You two, now.\"\n\nBrook and I sat together with our legs touching, hands folded in our laps, heads hung low and waiting for the tongue lashing we expected to come our way. We felt embarrassed and ashamed at having been discovered so easily. Alice cleared her throat getting our attention and then spoke.\n\n\"You two smell like sex, Jerome may have only smelled fish, but I smell semen. I know Brook is having her period so there was no intercourse, but something by God happened. Frank, look at me. What went on between you two?\"\n\nI sat searching for words trying to formulate a coherent answer when Brook suddenly spoke.\n\n\"It was me mom, I wanted to see his .... um .... you know, and things kind of happened from there.\"\n\nGrinning Alice asked, \"Do you mean his penis, it's okay to talk like adults, all of us are at this point, if your sister was home we'd be having this conversation elsewhere. So, you're telling me you gave him a hand job, is that right?\"\n\nI think both of us were caught off guard by her mother's statement, Brook only nodded her head.\n\n\"That settles it young lady, Monday you call and make an appointment to get on the pill. You don't need to be screwing like bunny rabbits but it's bound to happen, I remember those days when your father and I couldn't keep our hands off each other.\"\n\nWith a scrunched face Brook went, \"Ewww, gross, I don't need to hear this.\"\n\nAlice was laughing as Jerome walked into the room wondering what we had been talking about, with Alice staring at us she smiled and said, \"We were talking about how exciting their fishing excursion had been, I think they caught a little more than they had anticipated.\"\n\nJerome said, \"I'm hungry, what's for dinner?\"\n\nHer mom wasted no time answering, \"Nothing with lots of love, Frank's going home to clean up and then we're taking them to Smitty's Bar for burgers and fries. Frank, I expect you back here within the hour, now get a going.\"\n\nA quick kiss from Brook and I was sailing home, I showered, changed and was pulling into their drive in less than fifty minutes. At the bar I ordered a beer, after checking my license she asked what kind, I looked at Jerome and asked if they would like something as well, my treat. She ordered a white wine, him a specialty beer and I ordered a Dr Pepper for Brook. When the waitress walked away her dad spoke up.\n\n\"I didn't know you were twenty one Frank. When did that happen?\"\n\n\"Three months ago sir.\"\n\n\"Okay, let's settle this right away Frank, call me Jerome and not sir, we know you aren't being disrespectful if you use our first name.\"\n\nOut of habit I mumbled, \"Yes sir.\" For which I got a dirty look and smirk combined. We cleared out of the bar just after eight, Brooks house has a three-sided wrap around porch with a two-seater porch swing to the right of the front door. She and I sat enjoying the night air watching the fireflies put on a show, our feet gently rocking the swing back and forth ever so lightly, holding hands, kissing a little, no petting, just enjoying being together. Jerome came out a half hour or so later and sat on the steps, Alice was right behind him.\n\nShe settled next to him and asked, \"Whatcha doin babe? I thought we were gonna watch that documentary together.\"\n\n\"Oh, I just thought I'd sit out here with the kids a while.\"\n\nShe chuckled, \"We need to leave these kids alone, have you forgotten what we were like at 21?\"\n\n\"No and that's exactly why I'm out here.\"\n\nAlice stood pulling him up, \"In the house with me you wooly old bear, Brook, in at eleven, church in the morning.\"\n\nAs busy and exciting as our day had been, heading home at eleven sounded good to me. Sunday afternoon we spent a few hours together, had a malt at Tommie's and called it a day. The days turned into weeks, the weeks into months and before we knew it the holiday season was upon us, our make out sessions hadn't gone beyond where we already were, I did eventually get my hand inside her panties marveling at the heat of her sex and the muskiness of her arousal. Touching her bush I found it to be silky and very soft, like the hair on her head, it looked nothing like the pictures I'd seen in the past.\n\nWhen I asked why it wasn't tight and curly like the pictures I'd seen she explained, \"My great grandparents emigrated from Egypt to the states right after the second world war, though both had a dark hue to their skin each had dark wavy hair. Their daughter, my grandma, married a black man, that's the biggest reason my mom has sort of a lighter color skin than a lot of blacks do, she's mixed race. Though mom also married a black man all of us girls have been blessed with soft curly hair, now you know why my bush is so *silky* as you call it.\"\n\nWe hadn't done a hand job since the fishing excursion, I also hadn't ever masturbated her, we played and explored a lot but somehow that was enough, we liked being together whether it was making out or just hanging out. One of her favorite games was to crawl over the top of me and feed her dangling tits into my mouth, what a turn on to see those pointed nipples hanging down, the areola's scrunched tight as though there were little bubbles under the skin. As she would lower a nipple into my mouth we would both groan.\n\nWe joined my folks for Thanksgiving and then another meal that evening at her house, I was so full I was miserable. Brook and mother got along great, with my closest sibling thirteen years older than me I was the last one still at home, mom said it felt good to have a young woman in the house after so many years since the others had left home. My older brother and sister lived over fifteen hundred miles from us, it was seldom they came home anymore. Brook was appreciative of how accepting they were of her, not only was she a different race but also having the same skin condition I did.\n\nBecause it was Black Friday weekend Brook was scheduled to work Saturday along with everyone else, all check outs were to be manned all day. I used the opportunity to call at her house, I had something I needed to talk with her folks about.\n\nSitting at the kitchen table with their full attention I began, \"I know this may seem old fashioned to you, but I would like your permission and blessings to ask for Brooks hand in marriage. I want to do it for Christmas, but I want your blessings.\"\n\nSitting in silence they stared at me, tears flowing liberally down Alice's cheeks, I could see a tear welling up in Jerome's eye's, he looked down quickly. Turning his face to Alice he spoke softly.\n\n\"Well mother, are we ready to let one of our little girls leave the nest?\"\n\nDrying her eyes she smiled looking at me, then Jerome, \"If it's Frank marrying Brook then the answer is yes, I haven't seen love like theirs since you and I tripped the light fandango oh so many years ago. Any idea when you might marry Frank?\"\n\n\"I need to ask her first, she might not say yes, but hopefully she will and then we'll decide together when we want to tie the knot.\"\n\nI no more than had the words out of my mouth when Jerome blurted, \"She'll say yes, no worries there.\"\n\n\"I have a favor to ask you Mrs. Ellory, can you find out what her ring size is? I want everything to be perfect when I pop the question.\"\n\nTwo days later when I was there for supper and Brook was in the bathroom Alice told me the ring size, that she preferred yellow gold and she didn't like big gawdy rings. With that info at hand I found my way to Bergstroms Jewelry, picked out the ring set I thought she'd like and ordered it. Telling my folks about my plans caused as much excitement in our household as it was in Brooks, even though she wasn't privy to the information she knew something was going on behind her back. Sitting in the driveway with the truck running and the heat on after a date we were cuddled together when she confided in me.\n\n\"Somethings up with mom and dad, they're planning something big for Christmas, maybe I'm getting a car, I've been hinting that I need one for a while. There's too much excitement for it to be like a normal Christmas, even Tracy can't figure it out. Oh, did you know she has a boyfriend? She's the one getting the third degree from dad now instead of me.\"\n\nI had to suppress the chuckle wanting to escape, it was so close and yet so far away, and it seemed as though she had no idea, this was going to be fun. As mom was prone to say, \"The things dreams are made of.\"\n\nI picked up the rings the week before Christmas, Mr. Bergstrom gave me a discount because I paid in cash and threw in free ring cleaning once a year for the next five, in my eyes I'd hit the jackpot. As is prone to happen in the colder climes it was raining lightly when I left the mill five days before Christmas.\n\nThe temperature was still in the mid-thirties so traction wasn't much of an issue, by late morning the temps had dropped enough that the roads were icing in low spots, with just less than fifteen tons of truck on ten tires I was barely crawling at times. My priority wasn't reaching the farms on time, in my mind the priority was getting all the deliveries done and that beast of a truck home without incident.\n\nThe first text from Brook pinged just before lunch wondering if I was okay and was I going to quit early with the freezing rain. I answered her at the next stop telling her I needed to continue on until my deliveries were through. My phone immediately lit up, Brook was calling, I pushed the accept button and said hi.\n\n\"Frank, baby, why are you risking your life, come home honey I want to know your safe. Even if you aren't with me at least I'll know you aren't in this storm, the store is going to close early today at six o'clock, that's how bad it's gotten. Come home baby, Please.\"\n\n\"Sweetheart I can't, I only have four more deliveries and all of them are counting on this feed to get them through the holidays. The only one I'm concerned about is the Olson place, they're another twenty-six miles north of here, if I go slow I should be okay with all this weight, I'll go slow, promise.\"\n\n\"Frank I'm worried, I've only just found you, I don't want to lose you to some stupid ice storm. Be careful baby, please be careful, and make sure your phone is on so I can get ahold of you.\"\n\nAfter squeezing a few kisses through the phone I headed for the Kucaba farm, an older Czech family farm with two brothers still running it, I had also formulated in my mind I would do the other two deliveries before I headed north to the Olson's. That way I could stay on the main highway all the way home, hopefully the county trucks would be sanding and salting by then. When I swung the boom back into its cradle at Olson's I looked at my watch, 9:21, if the roads were halfway decent I could make it home by midnight.\n\nLeaving Olson's headed toward the small community of Morse my worst nightmare materialized, it began to snow, nothing worse than trying to drive on snow over ice. There is only one convenience store in Morse that sells diesel, using my credit card I topped off the tank, grabbed some drinks, two packaged sandwiches, some candy bars for quick energy, a bag of chips and one of those all purpose cell chargers you see at gas stations. Whether I would need them or not I had no idea, but it made sense to be prepared in case I did.\n\nI called Brook, \"Hi babe, I'm just getting ready to leave Morse, if the roads are passable I should be home around midnight. I topped off the tank, grabbed some food and drinks and I'm set if I do happen to get stranded along the way.\"\n\n\"Morse? My gosh Frank, you'll never get home, it's snowing hard here and they're talking about closing County DD until it can be plowed and salted, Dad has the scanner on and the last he heard they weren't going to send the trucks out until they were sure the worst has passed. I just knew something like this was going to happen, will you be okay?\"\n\n\"I'll be okay Brook, I have food and water, a cell charger, over a hundred gallons of diesel and a comfy warm truck. If the roads might be closed on your end, I think I'll stop just above Princeton at that lookout point, I'll be off the main road but still visible if the county trucks come by. I'll hunker down for the night and try to get some shut eye in the passenger seat.\"\n\nI could hear the fear in her voice, \"You make sure to text me when you stop for the night. I know I don't say this enough but, I love you.\"",
        "\"Love you too darlin, I need to get back on the road while I can, I'll text when I stop.\"\n\nPart two is finished and ready to be submitted.\n\n \n"
    ],
    "authorname": "R410a",
    "tags": [
        "romance",
        "romantic",
        "love",
        "attraction",
        "virginity"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/fitting-in-pt-01"
}