{
    "title": "Chemistry Between Nerds and Sluts Ch. 02",
    "pages": [
        "After hanging up with Kendall, Stef felt better about her plan and giving Cole a blowjob to get him to agree to be her lab partner in advanced chem. She put the thoughts out of her head as she puttered around the house, helped her mom with some chores, did some laundry, and reading a short story for senior English lit. class. She was just about to start getting ready for her date with Cole when Michelle called. \n\n\"Hey, when are you getting together with Cole?\" Michelle asked, after the initial hellos.\n\n\"Tonight. We're going for ice cream then I'm doing the deed,\" Stef said, again troubled all of a sudden by how casual that sounded.\n\n\"Tonight, huh? I still have to arrange things with Mark. Maybe I'll give him a call and set it up for tonight too. After all, a nerd like him probably doesn't have a date for tonight,\" Michelle stated. \"I can catch up with Ben then later in the evening.\" \n\n\"Good idea. Best to get this over with,\" Stef said.\n\nShe didn't tell Michelle what Kendall had said about the guys wanting more in the future. She didn't want Michelle backing out and destroying the whole deal.\n\n\"Yeah, maybe we can meet up at the ice cream parlor,\" Michelle stated.\n\n\"Good deal. That way we can plan things out better for the labs.\"\n\n\"Yeah, I'll call you back if I get him,\" Michelle said.\n\nThey talked a little longer then hung up. Stef decided to call Cole to make sure of the time. He answered on the second ring.\n\n\"Hello, Stef,\" Cole said.\n\nStef sensed real anticipation in his voice. Maybe Kendall was right and he was consumed by the prospect of getting his first blowjob and not thinking about her as a slut at all.  \n\n\"Hi, Cole. What time are we getting together?\"\n\n\"How about I pick you up at seven?\" Cole asked.\n\n\"That's fine,\" Stef said. \"I'll be ready.\"\n\n\"Okay,\" Cole replied.\n\n\"See ya then,\" Stef said, and they hung up.\n\nStephanie showered, did her hair, allowing it to hang straight down, and put her make-up on. She put an elastic hair ring in her purse for later. She liked having her hair in a pony tail when she gave head. It kept her hair out of her face and free of sticky cum. The guys seemed to like watching it sway when she bobbed and holding onto it. She had forgotten one the night before with Chris but remembered now. She struggled with what to wear. This was not like a real date with Jordan or Chris where she dressed sexy to appeal to them. This was more like an informal date, so she dressed a bit more conservatively. \n\nStef ate a lite dinner with her family, before the ice cream, and was ready when Cole arrived. He barely made it to the door and said a familiar hello to Stephanie's folks like he had years ago as a boy many times, then they were leaving. Stef felt awkward not knowing how her parents were taking her so-called date with Cole. She didn't allow them to talk together much in fear they might expect her to be dating Cole now.  \n\nCole was definitely nervous too. He talked nearly non-stop until they got to the ice cream parlor. He was funny though and had Stef smiling and laughing as he brought up recollections from their past. Her cell rang just before they entered the ice cream parlor. It was Michelle.\n\n\"Stef, we're hooking up tonight too and will meet you guys there,\" Michelle said. \"Wait up for us. God, this is awkward.\"\n\n\"Okay, we'll see ya soon. Hurry up,\" Stef said, and hung up.\n\n\"Who was that?\" Cole asked, appearing mildly nervous, as if she might desert him at the last minute for a better date.\n\n\"It was Michelle. She and Mark are going to meet us here in a little while,\" Stef said.\n\n\"Oh, good,\" Cole claimed, not as nervously this time.\n\nThey entered the store and waited in the line. They discussed the different flavors of ice cream and which ones they liked best. This ice cream parlor was affiliated with a large local dairy and had great ice cream. They both ordered cones and Cole paid over Stef's protests that she contribute. They took seats at an empty table. As they ate their ice cream, Cole again started in talking about some of their exploits from the past. They talked about sledding together, ice skating, different sports, and playing army. Stef found herself laughing constantly. \n\nThe two of them finished their ice cream and were still deep into lively conversation when Mark and Michelle arrived. After hellos, Cole excused himself to go to the restroom and Stephanie watched as Michelle and Mark picked out ice cream and ordered. It gave Stef time to think by herself. She was surprised, but had to admit she was having a good time. She had expected this to be a bore and conclude quickly after the deed. But instead, she found herself enjoying the evening so far. Michelle and Mark joined her shortly at the table just as Cole reappeared. \n\n\"Thanks for waiting for us,\" Mark said nervously.\n\n\"No problem,\" Stef answered.\n\n\"Yeah, thanks for letting us join you guys,\" Michelle said, and she gave Stephanie a secret wink of appreciation. \n\nStephanie began to think this was going to be a chore playing den mother to the three of them, to keep everyone happy through their little arrangement as lab partners. But Cole was already making conversation with Michelle and Mark and she had to listen back in to pick up the dialogue and join in. They had a good time talking about school and a surprising array of common things that had them all laughing. Stef found herself shocked at how good Cole was at conversation, making people laugh, and keeping them involved in the discussion. \n\nAfter they had sat there for nearly two hours, and the conversation naturally lessened, it began to be obvious no one wanted to make the first move on the real reason they were getting together. Finally Stef took the lead and suggested they go for a walk in the park near her and Cole's houses, the same park they had met at on their bikes. It was where she had planned to take him anyway and figured two couples could do it there just as easily as one. They all agreed and parted only to drive to Cole's house. \n\nWhen they arrived moments apart, they parked the cars and walked down the block to the entrance to the park. They walked and talked until they got to the park bench where Cole and Stef had first met to discuss this whole plan. Everyone seemed to look at Stef at once and she felt her stomach do a somersault as she observed them all looking at her. \n\n\"What?\" Stef said.\n\n\"What's the plan?\" Michelle asked anxiously.\n\nStef started to say, \"I don't know...,\" when Cole spoke.\n\n\"How about you guys go that way and Stef and I down here,\" he said, pointing to the two forks in the path just after the bench. \n\nOne of the paths Stef and he knew led down by the small man-made lake and the other was a bike trail through the woods. It was dark now and only the moonlight lit the trails. \n\n\"There are benches along both paths every so often,\" Cole added. \n\n\"Yeah, we can meet back here in an hour if you like,\" Stef added. \n\n\"Sounds like a plan,\" Michelle said, and she and Mark moved off down the path Cole had indicated. \n\nHe had chosen the one that led by the lake for Stephanie and himself so they started walking down the path. It was darker in the trees when out of the open fields and Stef grabbed his arm in both of her hands.\n\n\"It always made me nervous as kids when we were here after dark,\" Stef confessed.\n\n\"I knew it,\" Cole stated.\n\n\"You did?\"\n\n\"Yeah, I could tell when you were nervous because you got really quiet.\"\n\n\"I did?\"\n\n\"Oh, yeah, but you were cute even back then,\" Cole said.\n\n\"You thought I was cute even when we were little?\" Stef asked.\n\n\"Oh, definitely. You have always been cute,\" Cole claimed, with a big smile.\n\nThat smile she remembered so well from their youth. It was a warm and pleasant smile and she held tighter to his arm. \n\n\"I always felt safer with you here,\" Stef said.\n\n\"Is that why you held onto me like you are now, so I wouldn't run away?\"\n\n\"I guess so,\" Stef agreed with a smile.\n\nThey walked through the forest area and reached the small lake. It was a beautiful setting at night and no one else was around. The lake was deep in the park, away from any houses, and a path ringed the lake with benches spaced evenly apart. They started walking down the right side of the lake. After a while Stef could make out a bench ahead. The moment of truth was close at hand and she was suddenly more nervous than she had ever been with a guy. She could not explain it. It confused her immensely. Sex was something she normally enjoyed and took quite casually. Her nervousness grew as they neared the bench. \n\nAs they closed the short distance to the bench, Stef tensed even more. Her arms around his subconsciously gripped him in a near blood-stopping tourniquet. Cole pulled up short of the bench. Stef looked up into his face and for the first time in a long time saw how handsome he really was. \n\n\"Stef...we don't have to do this. We can keep walking if you want to or just go back. I'll even tell those guys we did it if you want me to,\" Cole explained.\n\n\"But, Cole, we had a deal. I need to fulfill my part of it,\" Stef said.\n\n\"No, you don't! We can walk away now and forget about it,\" Cole said, but Stef could see the strain in his face. \n\nHe was obviously twisted and torn by this whole thing as she was. His mind was conflicted between the desire for her, his first blowjob, and his belief he shouldn't be forcing this upon her. \n\n\"Cole, I can't back down on our deal,\" Stef said.\n\n\"But you really don't want to,\" Cole stated, which shocked Stephanie.\n\n\"How do you know?\"\n\n\"Because you're squeezing my arm like you're being led to the gallows,\" Cole explained.\n\n\"I am?\"\n\n\"Yes.\"\n\n\"Well, I'm just a bit nervous is all. I can go through with this,\" Stef said.\n\n\"Yeah, but you don't want to,\" Cole stated.\n\n\"What makes you say that?\" Stef asked.\n\n\"It's written all over your face.\"\n\nStef looked at him and then pulled him to the bench. She pulled his hands down to make him sit and she did too beside him. They looked into each other's eyes in the dim moonlight. \n\n\"Cole, you're making this harder for me. I admit to being a bit nervous because we're such old friends but I was prepared to do it for you and I still am. Please let me do it for you,\" Stef pleaded.\n\n\"Geez, Stef, I don't know...\"\n\n\"Leave it to me,\" Stef said, as she slid off the bench and knelt on the grass before him. \n\n\"But this isn't right...\"\n\nStephanie's hands reached for his belt. She pulled the end free of his pant loops and started to open it. He grabbed her hands and looked deep into her eyes.\n\n\"It doesn't have to be this...\"\n\n\"Shhh! Lean back,\" Stef said, pushing him back on the bench as she used the other hand to open his belt. \n\nA new confidence consumed her. She realized she wanted to do this for him now in the worst way. She wanted to please him more than anything. Her hands popped the button on his jeans and pulled his zipper down. As she worked she suddenly realized how large the bulge was in his jeans was. She had never bothered to check him out before and even now figured he was just looking large because he must already be hard. As her hands worked his pants down, he helped her by lifting up. His package continued to look impressively large but also didn't look hard yet either. Her fingers curved into the top waistband of his white underwear and pulled out and down. Stef nearly gasped as his flaccid cock came into view. It was immense. The biggest soft cock she had ever seen.\n\n\"Oh, my god, Cole,\" Stef gasped.\n\n\"What?\" Cole queried with obvious worry. \"What's wrong?\"\n\n\"Nothing,\" Stef said, looking at him. \"It's just that it looks so big.\"\n\n\"It is?\"\n\n\"You can't tell me you didn't know that you have a big one?\"\n\n\"Well, sort of. I mean I see other guys in gym...well, I mean...\"\n\n\"Oh, my,\" Stef said, running her finger lightly along the soft skin of the shaft. \n\nThe head was curved under his balls from having been confined in his briefs. Stef could not see the whole thing but it began to uncurl as she touched it. With continued light rubbing the head popped out from under his balls as the shaft began to stiffen. Stef stared at it in the dim moonlight. It was enough light to see pretty good this close up. Her experienced penis measuring mind started to size him up. \n\n\"You look like six inches soft,\" Stef said excitedly. \"Have you ever measured it?\"\n\n\"Well...I'm not entirely...\"\n\n\"Come on! Every guy measures it at one time or another. What's it hard?\" Stef asked.\n\n\"Over eight,\" Cole finally admitted, pride beginning to show in his voice.\n\n\"Oh, wow!\" Stef said, watching it expand. It was thick too.\n\nStef slid her hand under the now exposed head and lifted the lengthening appendage up as if aiding it to stiffen. The touch of her hand alone made Cole moan and blood rushed into his penile tissues. As she held the impressive cock with her right hand, her index finger on her left hand moved lightly over the exposed glans. He was circumcised and the head was expanding to significant proportions. His shaft was soon stiff and poking straight away from his body. It was indeed the biggest she had ever seen in person and held. It was every bit of eight inches as he had said, and thick too. \n\nStef looked up into Cole's eyes. He was hungrily looking down at her. She could read the intense desire in his face. Her finger rubbed over his little slit in the head and felt a wetness from his secretions of pre-cum. She smeared the sticky lubricant over the head of his cock. The big cock seemed to expand even more as it grew stiff as wood. \n\n\"Oh, god! You have a beautiful, fantastic dick,\" Stef said.\n\n\"Thanks,\" Cole hissed, between closed teeth. Her hands were driving him crazy. \n\n\"I hope I can get a lot of this into my mouth,\" Stef confessed.\n\n\"Is it too big?\" Cole said a bit nervously.\n\n\"We'll see,\" Stef said positively, not wanting him to feel worried at all.\n\nStef looked up into Cole's face one more time before she started. His face was etched with desire and interest in her next move. She found herself wanting to please him more than any boy she had been with before. It didn't hurt either that his cock looked downright delicious and she couldn't wait to taste him. \n\nStef looked down at the head of his cock as she descended upon it. She kissed the large head getting another small taste of pre-cum and a little shudder from Cole. She knew, being his first time, he probably wouldn't last long. Her tongue snaked out and flicked over the head drawing moans from Cole. Stef kissed and licked down one side of his cock to the base. Her hands played with his cock and balls as she used her mouth on him. She pushed his cock up towards his chest to lick the underside and heft his ball sack in her small hand. His balls were the biggest she had ever seen or felt. \n\nShe sucked and licked the underside of his cock and could feel Cole trembling. She left his dick alone for a minute to play with his balls. Stef lifted them to her mouth and licked them, wetting them with her saliva. Then she took each into her mouth bringing groans from Cole. She could barely fit each ball in her mouth. She had to stretch her mouth wide to fit over each nut. When she had sucked on both balls for a while, she shifted back to licking her way up his cock. \n\nCole thought his head was going to come off. Masturbation had never come close to the intensity of the feelings he was now getting from Stephanie's mouth and hands. It probably would have felt better with any girl doing this to him but the fact that it was Stephanie, whom he cared for greatly, was driving him nuts. He could feel his orgasm rising and the need to cum was intense. \n\nStef paid attention to Cole's reactions. As she got back to the head, she could see pre-cum running down the side. She could feel the extreme stiffness of his rod and his balls were tightening too. His cock was impressive and made her smile to herself. As she glanced up she saw Cole with his head back and eyes closed, enjoying the pleasure she was producing in his big organ. She licked the pre-cum off his head, tasting the bland secretion, and heard him gasp with pleasure. She continued to glance up as she took the head suddenly into her mouth. It was a tight fit too. \n\nCole felt Stef take his cockhead into her warm wet mouth and he nearly jumped out of his skin. The pressure in his balls reached a near boiling point. He sat up slightly and reached down for Stef's hands.\n\n\"I'm going to cum already,\" he said, concerned she didn't realize. \n\n\"I know,\" Stef said.\n\n\"You better watch out,\" Cole explained.\n\n\"Go ahead,\" Stef told him.\n\n\"But it's going to...\"\n\n\"Cole, I've done this before. I know what to expect,\" Stef claimed.\n\n\"Okay, but I warn...oh, fuck,\" Cole said, as Stef took his cockhead back in her mouth.\n\nStef smiled to herself. She could not remember ever hearing him curse before. As soon as she started sucking, he growled deeply. Her fingers massaged his tight nutsack.  She could feel his whole body stiffen beneath her. His cock pulsed deliciously in her mouth. Stef felt her own pussy pulse and wetness dampened her panties. Sucking cock sometimes got her off and this was one of those times. She moaned with the sweet bliss as she knowingly felt the big cockhead expand. \n\n\"Oh, damn!\" Cole croaked. \"Stef, I'm going to...\"\n\nIt was too late if he expected her to remove her mouth, which of course she had no intention of doing. She longed to taste his cum and swallow him into her body. The first jet of hot cum blasted into her mouth with surprising force. Cole had one hand gripping the arm of the bench as tightly as he could. The other was squeezing the wrist of Stephanie's left hand as it kneaded his balls for all their cum. The spurts of cum seemed to last forever. Stef collected her reward and wondered if he had saved himself for her. The flow from his nuts into her mouth was huge. Possibly the biggest she had ever been given. Her mouth filled to near overflowing and she had to slip off the cockhead to just the tip to make more room.\n\nFinally the pulses changed to dribbles and then the dribbles subsided. Stef's tongue then teased the end of the head as Cole lessened his grip on her arm. She could feel him relax some and his cock lost some of its extreme hardness. Her teasing tongue became too much for his super sensitized cockhead and he groaned almost painfully. Stef sensed his discomfort and pulled back. She looked up at his serene face with his still closed eyes and she swallowed the massive load in her mouth in one big gulp. She decided he tasted sweet. 'Maybe he liked pineapple juice,' she mused, as she had convinced Chris and Jordan to drink the juice now.  \n\nStef glanced back down at the big cock in her hands and noticed a lone drop of cum oozing from the little slit. She leaned down and licked it off. Cole finally opened his eyes and looked down. Stephanie leaned back and looked up at him with a smile on her face. Her hands though stayed on him and tenderly played with the big, still semi-hard dick.\n\n\"Oh, god, Stef,\" Cole gasped. \n\n\"Did you like that?\" Stef asked with a grin.\n\n\"Oh, wow! That was amazing,\" Cole croaked, still catching his breath. \n\n\"Glad you liked it.\"\n\n\"Oh, my. You're incredible!\"\n\n\"Thanks but I think you just enjoyed it so much because it was your first time,\" Stef stated.\n\n\"No, you're sensational!\" Cole said.\n\n\"Well, I try to please,\" Stef offered, appreciative of his praise.\n\n\"You do! That was the most fantastic feeling in the world,\" Cole exclaimed.\n\n\"Well, you have a nice dick to work with,\" Stephanie said, looking back down at the impressive phallus still in her hands, which was still mostly hard. \n\n\"You think so?\"\n\n\"Oh, yeah. I like it,\" Stef confirmed.\n\n\"You do?\"\n\n\"Absolutely! You have a beautiful big dick,\" Stef claimed.\n\n\"Thanks,\" Cole said, obviously pleased she liked his cock.",
        "\"These are nice and big too,\" Stef said, using her fingers to knead his relaxed ballsack.\n\n\"Oh, that feels so good when you do that,\" Cole moaned.\n\n\"You like me to play with your balls?\" Stef asked.\n\n\"Anything you do feels good,\" Cole agreed.\n\nStef glanced down at his cock and could tell it was recovering fast. The blowjob had only last about ten minutes, though it seemed longer especially to Cole. Stef was not anxious to just see things end so quickly. She'd had a mini-orgasm sucking him but her pussy was wet and ready for much more action. She wanted to play with him more but didn't want to come off as too aggressive. The deal had only been a blowjob but suddenly she wanted it to be even more. Even take his virginity. 'Should she try for it tonight,' she tried to decide. \n\n\"What?\" Cole asked, reading the depth of thought in her face.\n\n\"I was just watching you get hard again,\" Stephanie said. \"I bet if I kept this up you would be ready to go again, huh?\"\n\n\"Yeah, but you already did enough,\" Cole said, remembering the original deal too.\n\n\"I know. But it won't be right to leave you still horny,\" Stef tried to reason, as much for herself as him. \n\n\"But, we said we would meet Mark and Michelle in an hour,\" Cole remembered.\n\nStephanie thought about that then reached for her purse. She produced her cell and hit the speed dial for Michelle's cell. Michelle answered after a few rings.\n\n\"Stef, what? It's not an hour yet.\"\n\n\"I know,\" Stef said, smiling to herself. \"I just wanted to tell Mark and you not to wait for us.\"\n\n\"Okay, fine. Things going good?\" Michelle asked, with amusement in her voice.\n\n\"Yes, definitely,\" Stef answered.\n\n\"Us too,\" Michelle said. \"I'll call you tomorrow.\"\n\n\"Okay, good,\" Stef said, hanging up the phone. \"They won't wait for us now.\"\n\n\"Great,\" Cole said.\n\nStef had subconsciously wrapped her hand around his cock while she had talked to Michelle and found herself stroking him to stiffness when she dropped the phone back into her purse. Cole moaned lightly as her hand jerked his cock. He was watching her intently as she stroked him. She gave him a smile then looked down and concentrated on the huge dick in her hand. She brought her other hand to his balls and tickled the underside of the sack making him groan more.\n\nStef played with him pondering what to do next. One side of her wanted to strip off her clothes and impale her aching pussy on his beautiful cock. The other side said the more prudent thing to do was just suck him off again. She loved giving head and the thought of sucking him some more appealed to her but the ache in her sex was powerful too. She decided to just suck it a little first and leaned down and took the head into her mouth again.\n\nCole gasped at the exquisite feeling of her warm moist mouth on his cockhead. The first time she had barely had him in her mouth before he came. She wanted this time to see how much she could take of his big cock. Stef sucked on the head a little making him moan. She then pushed more of the big cock into her mouth. She only managed a few inches before the head wedged into the back of her mouth at the entrance to her throat. Deepthroating Cole would indeed be a challenge. \n\nStef pushed hard down and the cockhead moved slightly but otherwise held fast at the entrance to her throat making her gag slightly. She had learned to control her gag reflex through practice but this big cock would be the biggest she ever tried to take. Instead she backed off and started bobbing up and down on it. She pushed it hard into the back of her mouth each time trying to get used to his girth. Cole was starting to tremble from the exquisite treatment to his dick. \n\n\"Oh, god, Steffie!\"\n\nStef backed off his cock and looked up at him, \"What did you call me?\"\n\n\"Oh, sorry. I called you Steffie.\"\n\n\"No, it's okay. It's just that no one other than my dad has called me that in a long time.\"\n\n\"Sorry, I won't...\n\n\"No, it's okay. Sometime about having you call me that seems right,\" she confessed.\n\nCole had called her Steffie when they were kids. It had lasted up until junior high when she insisted all her friends call her Stef or Stephanie. She thought at the time that Steffie was for little girls but now having Cole call her that again, just seemed right. \n\nStef looked longingly at the big cock again. It was rock hard and pre-cum seeped from the little slit as she watched. She licked it off. His balls felt like rocks and she knew he might cum fairly soon if she went back to bobbing on his cock again and working him with her hands. Her pussy ached though something fierce. She couldn't get out of her mind the desire to do more with Cole's cock than just suck it. The deal had been just a blowjob. She was already working on number two but her own pent up sexual need begged for more and to be satisfied. Nothing short of cramming this beautiful big cock in her dripping wet pussy would do.\n\n\"Cole, you want me to just keep going until you cum?\"\n\n\"What...what do you mean? You want to stop?\"\n\n\"No, silly. I'll suck you off again if you want but is there anything else I can do for you?\"\n\n\"I don't understand? What do you mean?\"\n\n'For a smart guy, he was acting awful dumb,' she thought.\n\n\"I don't know. I just thought you might want to do something else,\" she said.\n\nCole's mind was reeling a million miles an hour. What was she getting at? He never conceived of the fact she might want to fuck him. That had never been part of the bargain and he had never even considered it a remote possibility, as much as he would have in a heartbeat given her his virginity. He felt sure she had no way of knowing it, or sharing the same thoughts, but the date so far had been a wet dream come true for him. He had no thoughts of pushing her to do something that he felt only he might want. \n\n\"Stef?\"\n\n\"What?\"\n\n\"Could I...I mean, would it be possible for me to...ah...\"\n\n\"What?\"\n\n\"Could I see your breasts?\"\n\nShe smiled at him and had to nearly bite her lip to keep from laughing. Here she was ready to strip off her clothes and jump his bones and he was just innocently asking to see her tits. 'How cute,' she thought. \n\n\"Sure,\" she said, leaning back to unbutton her blouse.\n\n\"Could I do it?\" Cole asked urgently, sitting up on the bench and leaning forward.\n\n\"Of course.\"\n\nCole's hands moved slowly and with a nervous edge to her buttons. She had gotten the first two on top undone before he stopped her. The next one was right between her breasts. His hands trembled as the backs of his fingers touched the swell of her mounds between her tits as he undid the button. When undone, the fabric of her blouse parted and gave him his first glimpse of the top of her white lacy bra beneath. Stef watched Cole's face and smiled because he seemed to have trouble swallowing as each new button came undone. She felt like a special present for him being unwrapped for the first time. Finally he had them all undone. Stef helped him pulled the blouse from her skirt. She let him push it off her shoulders. His fingers touching her skin sent electric charges through his body. His eyes feasted on her upper body like a starving man at a royal banquet. His eyes drank in the sight of her in her white lacy bra.\n\n\"The clasp is in the back. You want me to undo it or would you?\"\n\n\"Can I?\" he asked.\n\n\"Okay.\"\n\nStef leaned forward and put her pretty head on his shoulder. As her gorgeous brown hair hung down beautifully across his shirt, she realized she had forgotten to put her hair in a ponytail like she had planned. Her talented fingers curled around his stone hard cock again making him groan. The smell of her perfume and her closeness nearly made him cum on the spot from just her tender touch. \n\n\"It has two hooks. Can you see to get it?\" Stef asked, her soft breath in his ear driving him crazy as well.\n\n\"I think so,\" Cole said, fumbling with the two clasps but eventually getting one and then realizing how they worked, easily undid the second. \n\nStef sat back again, the bra loose now but still covering her breasts. She reached up and popped the straps off her shoulders. As the straps slipped down her arms the bra started to come away from her body. Cole watched with complete awe in his eyes as more and more of her breasts became visible. \n\n\"Oh, fuck,\" he groaned, making Stef smile again. \n\nWhen the bra was completely off and hanging on her lower arms, she took it off and set it on the bench beside him with her blouse. Cole's eyes were glued to her breasts. They were not huge but they were beautiful handfuls with the most wondrous nipples he had ever seen. They were deep pink, about the size of silver dollars, and with slightly puffy aureoles. The nipples themselves, when erect as they were now, stuck out about half an inch. They were the first real live tits Cole had ever seen but they were better in his mind that thousands from magazines. When he said nothing but just stared, Stef had to say something.\n\n\"They're not a big as Michelle's.\"\n\n\"They fabulous,\" Cole gasped.\n\n\"Really, you think so?\"\n\n\"They're absolutely gorgeous, Stef,\" Cole exclaimed.\n\n\"Thanks, but they're a bit too small.\"\n\n\"No, they're not. They are magnificent!\"\n\n\"Most guys like my nipples,\" Stef said.\n\n\"God, they're beautiful, Stef.\"\n\n\"Thanks. You can touch them if you like,\" Stephanie said to encourage him.\n\nCole didn't have to be asked twice. His hands slowly moved to below each breast and then up to touch the roundness of the firm mounds below each distended nipple. The softness of her pear shaped tits was like nothing he had ever felt before. His hands caressed the soft but firm tissue with amazement. Then his fingers moved up over her aureoles to touch the stiff nipples. His touch was tender and exciting. It made Stef moan too along with Cole.\n\n\"Geez, Stef! They're unbelievably beautiful.\"\n\n\"Would you like to kiss them?\" Stephanie asked, hoping he would agree. \n\n\"Oh, god, would I,\" Cole responded and leaned forward.\n\nCole kissed each nipple in turn then without being told started licking one. Stephanie's hand went to the back of his head and held him to her breast. Cole sucked on a nipple bring a low moan from Stef's mouth. She encouraged him to move between them which he did. His passionate attention to her breasts had a further affect on her already aching pussy. She could tell her panties were probably soaked in the crotch from her desire.\n\nStef couldn't take it anymore. She didn't care how bold or slutty it made her look now. She eased Cole back on the bench, lifted her short shirt and sat in his lap on the bench so her tits were still at his face. Her legs were on the bench on either side of his. It looked like a move to just allow her to sit with her tits still in easy reach for him, but in reality it positioned his rock hard cock up against her panty clad cunt. She pulled his head back to her breasts for more licking and sucking of her sensitive nipples.\n\n\"Oh, god. That feels so good, Cole,\" Stef gasped.\n\nHe just moaned into the breast flesh and nipple in his mouth. Stef started almost unnoticed at first sliding upward and back. The action pushed his hard cock firmly into and over the cleft of her cunt. Each move back and forth rubbed the underside of his dick into her moist, thinly covered sex. The feeling to both was electric. After a while, Stef eased Cole back off her tits.\n\n\"Cole...would you like to...ahh...be inside me?\"\n\n\"You mean it?\"\n\n\"We don't have to if you don't want to. I'll understand if you want to remain a...\"\n\n\"How can we, Steffie? I didn't bring a condom.\"\n\n\"We don't need one. I'm on the pill,\" Stef explained.\n\n\"Oh, god,\" Cole groaned.\n\n\"You want to?\"\n\n\"Yes...yes! Oh, god!\n\nStef sat up on her knees and pulled her panties to the side. She positioned herself over his big stiff cock and nestled it into her cunt. They stared into each other's eyes as she slowly sank down. Her wet cunt was ready for penetration but the size of his organ stretched her unbelievably wide. The big cockhead hesitated at her entrance before stretching her open enough to sink in an inch or two.\n\n\"Oh, geez! You're big,\" Stef gasped.\n\n\"Too big. Does it hurt?\"\n\n\"No...no, just let me go slow until I get used to it.\"\n\n\"Okay.\"\n\nShe eased herself onto him, delicious inch by inch. She had never had a cock inside her this big and it made her feel like she was sitting on a pole. Her pussy lips stretched taut around the fat cock as she descended down. Cole felt like his cock was being forced into a warm moist velvety vise.\n\n\"Oh, god. You feel so huge inside me,\" Stephanie croaked.\n\n\"Geez, Steffie. It feels incredible,\" Cole gasped.\n\n\"God. Fuck me with your big cock, Cole. Oh, damn,\" Stef moaned.\n\nShe lowered further taking his cock deep inside her. She rested momentarily when her pussy was stuffed full of Cole's cockmeat. When she finally lifted off a bit, it felt like her pussy lips were being pulled away from her body. As she settled back down on him, she once again felt impaled on a stick. A few more movements up and down and her cunt started to ease and her wetness began to make the strokes easier. Stef started to ride up and down on him.\n\nCole was consumed by the blissful feelings to his dick. He didn't know how much more of this he could take. This was like a dream come true. He was fucking for the first time and it was Steffie, the girl of those dreams. His brain was on overload. His balls were already churning with need for release. He wouldn't last much longer. \n\n\"Oh, god, Steffie! I can't take much more,\" Cole gasped in ecstasy. \n\n\"I'll stop for a minute. That should help,\" Stef said.\n\n\"I don't know. You feel so good.\"\n\n\"You too. I love how your big cock feels inside me.\"\n\n\"You're so beautiful, Steffie!\" Cole exclaimed.\n\nShe looked down at him in the moonlight. His face was a mixture of ecstasy and desire. She took his head in her hands bringing his face up to look at her. Stef then leaned down and kissed him for the very first time. It was a sweet short kiss and they immediate followed it with another deeper kiss. Her tongue invaded his mouth, seeking his tongue. They kissed passionately until Stef finally pulled back. Looking in his eyes again she moved forward and pushed a distended nipple to his mouth. He gladly sucked it in making her moan. She held his head to her heaving breast as he nursed on her tender nipple. His arms wrapped around her waist, holding her slender body tightly to him.\n\n\"Wow, Cole. That feels so good when you suck on my tit.\"\n\n\"I love them,\" Cole said, nuzzling his face into her soft mound.\n\n\"You okay now? Can I go again?\" Stef asked.\n\n\"Yeah,\" Cole said, as the blissful edge had waned slightly.\n\n\"Here we go, Stef groaned beginning to move.\n\nShe went slowly at first but couldn't hold back for long as her own needs were too much. In moments she was bouncing up and down on him like a bucking bronco. Cole groaned constantly and as he tried to continue to suck her breasts, the sounds he made added extra pleasure to her tits. Stef could feel her orgasm racing towards its peak and by the sounds of it, Cole was close too.\n\n\"Oh, god, Steffie! I'm going to cum,\" Cole shouted.\n\n\"Cum in me, Cole. Cum deep inside me...pleaseeee...\" \n\n\"Shit...I'm going to shoot...nowww...\"\n\n\"Do it! Plant your seed in my pussy,\" Stef yelled.\n\n\"Oh, fuck,\" Cole growled and bucked up into her one last time.\n\nStef felt his cock expand to huge proportions inside her, triggering her own climax. Just as her orgasm started, the first hot blast of his cum painted the inside of her womb with warmth. \n\n\"Oh, shit,\" Stef called out as exquisite shockwaves of ecstasy radiated out from her tightly stretched cunt. \n\n\"Steffie,\" Cole growled.\n\n\"So good. So good...,\" Stef gasped.\n\nCole's cock hosed cum deep inside her for what seemed like forever. They rode their simultaneous orgasms out together. Both could feel the wetness escaping her as Stef's stuffed cunt coughed up much of the sperm being pumped into her. It soaked Cole's balls and formed a large wet spot on the park bench. \n\nFinally their orgasms waned and Stef collapsed against him on the bench spent. Their heaving chests pressed together and they could feel each other's hearts beating. The coolness of the evening had prevented them from sweating too much but they still radiated heat as they clung together. They stayed like that until their breath returned. \n\nEventually, Stef pulled back and looked down at Cole. The strain of passion and ecstasy she had seen before was gone and had been replaced by a tired but satisfied one. She smiled at him and he returned the smile.\n\n\"You were magnificent for your first time,\" Stef said kissing him quickly. \n\n\"I was?\" Cole said, but he was smiling with pride.\n\n\"Oh, god yes. Most guys would never be able to last to get their girl off the first time like you did,\" Stef complimented him.\n\n\"Thanks, but you were the one that stopped just in time before,\" Cole offered.\n\nStef could feel his cock, which was still up inside her begin to slip out as it finally went soft enough. She felt like her pussy was gapping open and cool air was rushing in. She backed off his lap, suddenly realizing how cramped and sore her legs felt from the hard bench. She tried to look down in the dim light to see if she had bruised her legs. \n\n\"What's the matter?\" Cole asked. \n\n\"Nothing. My legs are just a bit sore from the bench is all.\"\n\n\"Not the most comfortable place to do it, huh.\"\n\n\"No. My knees are sore from kneeling on the boards.\"\n\n\"Sorry about that,\" Cole said.\n\n\"Oh, it's okay. I'll be fine,\" Stef said, as she fixed her panties and reached for her bra. \n\n\"Damn,\" Cole said with a broad smile.\n\n\"What?\" Stef asked.\n\n\"I'm just sorry to see you covering those beauties up,\" he said, pointing to her tits.\n\n\"You are, huh,\" Stef laughed back.\n\n\"You bet,\" Cole laughed.\n\nStef put her bra and blouse on and started buttoning up the buttons. She watched Cole as he stood and pulled up his underwear and pants. \n\n\"Damn,\" Stef said.\n\n\"What?\" Cole said this time. \n\n\"Just sorry to see you covering him up,\" Stef said, and she laughed aloud. \n\n\"He only comes out again when those do,\" Cole said, joking and pointing to her tits.\n\n\"Well, you just might have a deal there,\" Stef responded.\n\n\"Really,\" Cole shot back, thinking this meant another chance.\n\nStef laughed, \"We better get going, Cole.\"\n\n\"Huh? Okay.\"\n\nThey started walking back down the path and she once again took hold of his arm. They walked silently for much of the trip back to her house, enjoying the nice night. As they passed by Cole's they noticed Mark's car was gone, meaning Mark and Michelle had left already. As they approached Stef's house, she tugged lightly on his arm. \n\n\"Cole. I had a wonderful time.\"\n\n\"You did?\"\n\n\"Yes, thank you.\"\n\n\"I'm the one that should probably be thanking you,\" Cole explained.\n\n\"You don't have to. I enjoyed being with you tonight,\" Stef offered.\n\n\"Steffie?\"\n\n\"What?\"\n\n\"Nothing. Just have a great night,\" Cole said.\n\nStef knew he had wanted to say more but let it go. He walked her to the door. It was nearly midnight and that was her curfew anyway. Stef turned to him on the porch landing and kissed him a bit longer than one might normally after a first date. \n\n\"See ya, Cole,\" Stef said, opening the door.\n\n\"Bye, Steffie.\"\n\nEnd of Chapter II "
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgins",
        "blowjobs"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/chemistry-between-nerds-and-sluts-ch-02"
}