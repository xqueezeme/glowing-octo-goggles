{
    "title": "The Twelve Zenati Pt. 11",
    "pages": [
        "Authors note: Hello everyone. Unfortunately, I haven't been as well as I would have hoped by now and the treatment has worn me down so I am a bit slower writing than usual. While I will continue to get chapters out as fast as possible, please excuse any future tardiness especially over the busy holiday season. I hope you continue to enjoy this series of the Tables. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n*****\n\n\"Don't get me wrong, Viv. I couldn't be happier for you and Gideon. I have never seen two people better for each other than you two. It's so obvious how much he loves you. But I worry that Olivia has just transferred whatever Stockholm Syndrome she had going on with Royce onto Genesis and what they have isn't love. Not the real love that you have.\" Marcella tried to explain why she was still not one hundred percent in favour of the relationship between the two.\n\n\"You couldn't be more wrong,\" Vivienne said, without accusation. \"I can see how you would be sceptical. I just want you to try and see it from a different point of view.\" \n\n\"What point of view? Those men are rich, handsome and powerful. That alone makes them kryptonite to most women. They take what they want, use who they want and never have to face any consequences or people telling them what they really think. I'm not about to sit back and let my sister be railroaded into a relationship, and probably marriage, that she can't possibly be ready for. Not so soon after everything Royce did to her. I'm sorry, Viv, I can't just smile and pretend I am happy that they are planning a future together, once all this crap Olivia got herself into is sorted out.\"\n\n\"I think you're too harsh, based on your own experiences. Genesis has never hurt Olivia maliciously nor threatened her unduly. He is nothing like Royce. He loves her and is doing everything in his power to keep her safe, especially now. You couldn't possibly give her the security she needs right now, and you would be putting Oscar and Nathanael in harm's way again, if you asked them to intervene. You have to let it go, and stop threatening them both by bringing the other table into it. Something like that would only hurt you in the end because...\"\n\n\"Because of what? Misogynistic men stick together?\" Marcella accused. \"Well, I am not some weak little woman who has always toed the family line, and I refuse to just sit back and let this happen before Olivia has had the chance to heal properly.\"\n\n\"She is much stronger than you think,\" Vivienne chided, feeling like she was fighting a losing battle with her friend. She knew enough about the sisters' early life to understand why Marcella had such a sceptical view of men from the Twelve Tables. Even though that power and influence had barely touched their father, he had acted as if it did, and lived his life adhering to traditional laws long since lightened by the actual leaders of the Tabled families. She worried that Marcella was continuing to push them all away, including Noah, who had done nothing but act as her personal servant more or less since she had arrived in Darwin. Perhaps it was time for a reality check. \n\n\"She seems stronger, but what she's been through... You can't tell me that hasn't messed her up way more than she lets on,\" Marcella said, with certainty in her voice.\n\n\"Olivia is an adult, Marcie. She doesn't need anyone's permission to live her life the way she chooses,\" Vivienne said, as she tried once again to make her friend understand that she was on the verge of alienating everyone who wanted nothing more than to be her friend and support her.\n\n\"You mean my permission, right? I am just trying to protect her,\" Marcella snapped irritably.\n\n\"Marcie, I need you to just listen to me. Promise me you won't interrupt or say anything for a good five minutes after I have finished speaking. Just listen properly for once, instead of getting all fired up and defensive. Okay?\" Vivienne asked.\n\n\"Fine,\" Marcella replied and slumped back in her chair and folded her arms, making Vivienne sigh heavily.\n\n\"Unfold your arms and stop treating me like the enemy. I am trying to be a good friend here, despite you making that difficult at the moment,\" Vivienne instructed as she watched while Marcella complied. \"Now take five deep breaths in through the nose, out through the mouth and relax, so you can take in what I am about to tell you, instead of only hearing what you want to hear.\"\n\n\"I don't...\" Marcella started, but stopped as Vivienne held up her hand.\n\n\"Now then. Olivia is an adult, you can't argue that. She had been examined by independent specialists provided by the government through the AFP, and they have concluded that Olivia is sound of mind and body. She is able to compartmentalise what happened with Remington Royce and deal with it as the need arises. She is probably coping better with what happened to her, and what will happen in court, than the rest of us,\" Vivienne gave a soft smile. \"If you tried to take her home against her will, it would be kidnapping, as you have no grounds, legal or medical, to do it. Genesis knows the threat is empty and has put up with you making it for Olivia's sake. He wants the connection to her family left open for her, but his patience is not endless, and very soon you could find yourself without the benefit of his kindness and generosity, if you keep comparing him to Royce,\" Vivienne warned.\n\nMarcella stared at her friend, her jaw working as she held back the arguments she wanted to make in her own defence. She would be taking her sister home for her own good, not kidnapping her!\n\n\"I can see what you're thinking, Marcie, and I am the expert you would need to back your stance that she is unable to make those life decisions competently. Not only would I disagree with you, but I would argue down any expert you found to say otherwise, not because I want to hurt you but because Olivia would hate you for you to do that to her. You need to stop treating her like a kid and realise that she is an adult, with possibly more life experience than you. She is able to make her own decisions and, if you can't accept them, then perhaps this isn't the place for you,\" Vivienne said. Her tone was soft, but the words, she knew, were harsh.\n\nMarcella gasped. She couldn't believe Vivienne had said that to her. There was no way she was going home and leaving her sister here with these people and their misogynistic values. Olivia could be anything she wanted. She didn't need to stay at home and have a heap of babies, just to please some stupid antiquated family law. Despite her anger at the words, she remained quiet, trying to breathe deeply, as Vivienne continued.\n\n\"Marcella, you are one formidable woman. You have had to fight for everything you wanted in your life, and I get that. I understand it, and I applaud the person you have become, so strong and self-assured and independent, but you have taken it too far. It has made you ungrateful and surly to the very people who want nothing more than to help you and be your friend,\" she sighed. \"You have a beautiful apartment on the beach, a car to use at will and a credit card expense account to do with as you wish. Yet the very men, who have done nothing but look after both you and sister like family since you arrived, are being treated with suspicion and doubt as if they are the enemy, in some way. They aren't, Marcie. They aren't your father, and this is not his Table. You are treating those men the way their mother treated me at the restaurant. You assume without knowing, or bothering to get to know.\"\n\nMarcie recoiled as if Vivienne had slapped her physically, and she was glad of the silence at that moment because she had no words for what Vivienne was accusing her of.\n\n\"The saddest thing is that you don't even realise what you're doing. Noah is so sweet that he has let you treat him like a servant for weeks. He teases and jokes with you about it, but one day you will push that man too hard, just as you are pushing Genesis too hard at the moment. You will lose the generosity they give so willingly and find yourself locked out of both the hospital and the court proceedings. Olivia asked Noah to represent her, before you try to argue the point. You are only co-counsel because Noah allows it at the moment, and trust me, Genesis is not happy about you being involved at all, while you are threatening them all the time and treating him like the enemy. He doesn't deserve it, Marcie, and you know it. Somewhere deep down inside, you know you are being unfair.\" Vivienne sat back to let her words sink in.\n\n\"Fine,\" Marcella said, finding it hard to keep the anger from her voice. If they didn't help her, she would do what needed to be done, herself. To hell with them all. She was going to ensure Olivia had nothing to worry about in her future, and wouldn't be dependent on any man to look after her. She could play nice if she had to. She could, at least, keep the peace until she had accomplished what she needed to do. \n\n\"Fine?\" Vivienne questioned.\n\n\"Yes, fine. I can play nice and, as you pointed out, I have no rights when it comes to my own flesh and blood. So, I have to play the game,\" Marcella shrugged. Like it or not, Vivienne, the one person she truly thought of as a friend in this town, was now a Zenati, and she had just chosen her side. Her thoughts strayed to Noah. She had thought of him as a friend in the beginning, or at least someone she could be friends with, but she knew he was one of them, a man of the Tables who would try to keep her in her place. No, he wasn't her friend, he was... Whatever he was, she was glad they hadn't acted on their earlier attraction and flirting.\n\n\"Marcie, it's not like that. They aren't the enemy here. Why can't you see that?\" Vivienne despaired of ever making Marcie see that she didn't have to fight the world to get what she wanted, for both her sister and herself. \"You're so strong and loyal to those you care about. I love you like a sister already. You don't have to fight the Zenati. They only want what's best for Olivia and all of us.\"\n\n\"I agreed with you already. I promise I will be so nice to everyone that they will want the bitch back,\" she laughed lightly, seeing the concern on Vivienne's face. \"Come on, lady, you promised to show me a world of wonder today and, so far, all you have done is hold a mirror up to my inner bitch.\" Marcella changed the topic swiftly, not wanting to talk about it anymore. She had to change her plans now. She would have to be more circumspect in her dealings with the people she was tracking down to tell her about the holdings of Royce, but she could do it.\n\nVivienne was right about one thing. She was strong, intelligent and she could do anything she set her mind to, including saving her sister from a miserable life, like their mother had to endure. She just needed more time and, if she had to put on her happy face and play nice for a few weeks, she would swallow that bitter pill and play the game. She'd done far worse to get what she wanted before.\n\n*****\n\n\"What's up with you and Dom?\" Gideon asked, as Noah and his cousin walked in from the meeting they had gone to with the Tatar. \"You're always together lately, and going off to meetings with the Tat's.\"\n\n\"Still working on Olivia's case. Something's not adding up and I think this Imelda knows more than she's sharing,\" Noah frowned. \"I seem to be connected somehow to Imelda, like she puts thoughts in my head, which drive me insane until I work them out,\" he admitted.\n\n\"She's messing with your head?\" Gideon asked, sounding worried. He knew the Tatar had special powers and he didn't like the idea of his brother's thoughts being messed with.\n\n\"Not exactly, more like jogging my memory when it needs to be jogged, or making me more aware of what someone is doing. It's like having a bullshit detector, but it's not so easy to get to the truth,\" Noah tried to explain. \"I can't describe it exactly, but I'm not in any trouble or danger. I just have a lot on my mind, so to speak.\"\n\n\"The girls are spending the afternoon with Madrina. You still okay to meet us there for dinner?\" Gideon asked, seeing the fatigue show on Noah's face.\n\n\"Yeah, I'm good,\" Noah nodded, breathing a sigh of relief. He wasn't sure he could have handled dealing with Marcella's attitude this afternoon. She was such a contradiction of strengths and values that he was never quite sure what she was going to do or say next. She was head-strong, wilful and stubborn to the point of stupidity at times but then there was the funny, intelligent, self-assured woman who was fun to be around and whom he quite liked. It was the \"don't tell me what to do\" attitude he had to constantly manoeuvre around that was exhausting. She couldn't ever seem to accept that there might be someone who could do a task better than her, and she stubbornly gripped the reins of any investigation they were undertaking, even though he had to do all the work, because her way of bulldozing people was never going to get them what they needed.\n\n\"Look, just giving you a heads up.\" Gideon turned his body, so he was facing away from the room and the desk where Genesis sat with Tullo. \"Viv's decided she needs to have a talk with Marcie about her attitude problem when it comes to Gen and Olivia, today. She mightn't be in the best mood when we see them tonight.\"\n\n\"When is she ever in the best mood lately?\" Noah chortled. \"It's okay. I'll handle it for you. Don't worry about it.\"\n\nMaybe he should take Dom's advice and just seduce Marcella, after all. Her attitude could be partially due to frustration. It wasn't like she had any dating opportunities here, especially as they always seemed to be paired together for group dinners and such. He'd turned her down once, after their first dinner with Vivienne and Gideon, and she had never again attempted to go there with him. Even the flirting they engaged in occasionally seemed restrained compared to the first days they had known each other. Maybe he hadn't extricated himself from that situation as cleanly as he thought he had. \n\nWith the afternoon suddenly free, he decided to go see his father. He would take over from him one day, running their human resources division. In truth, he was looking forward to it, especially now, after the recent revelations from Dom and the Tatar. He picked up his phone and called his father, before checking in with Gen and agreeing to meet him and the others at Madrina's house for dinner.\n\nThe drive to their recruitment and training facility on the outskirts of the city was reasonably short, with the traffic flowing freely, and he stepped from the car, taking in a large breath of air. Since turning sixteen, he had spent a lot of time here with his father and the dominants who worked for him. It was why he had gone into law, like his father. If he could have chosen his spot on the new table, this would have been it, but there had always been the possibility that it would go to one of his cousins. They were born to lead the table after all. It came as a surprise that both he and Gideon had been given high ranking roles to fill, and though he could see that they were the obvious choice, it was still rare for cousins to be promoted over the brothers of the Chair and Oracle. \n\nHe felt that there was something more going on with the new table, but he just couldn't put his finger on what exactly, even with his newly discovered gifts. He wanted to ask his father but couldn't find the right words to express himself adequately. There was a lot going on for him and, more than anything this afternoon, he wanted to lose himself in one of the trainee Kept. It always helped to clear his head and release the tension, when he indulged in that type of hedonistic power play. In fact, the last girl he had seen here should be ready for some assessment of her capabilities. She had been new at the time but very eager to learn the protocols of serving a Master. He smiled as he pulled into the car park, feeling a renewal of his energy already.\n\n\"Papa,\" Noah greeted his father, who was waiting for him when he arrived. \n\n\"It's been too long. Understandably so, but you should make an effort, now more than ever, to be here and bond with the staff. There's a lot of trust in this operation, and it needs to flow both ways,\" Armando lectured his son half-heartedly. He knew Noah had the respect and trust of all but the newest recruits. \n\n\"I thought I might jump in and do some assessment this afternoon,\" Noah said easily, as they walked further into the facility together. \"Now that Gen and Gid have their relationships sorted, I should have a lot more time to come in and help with the running of the day to day things here. So you can head back out to the property and mother.\" \n\n\"I won't be heading back for a few weeks yet. Your mother has yet to admit her wrongdoing where your brother and his wife are concerned, and I am too weak against her charms to not forgive her, despite that fact, if I return too soon,\" he smiled sadly, admitting that his wife held his heart completely. \n\n\"Did she say why she did it?\" Noah asked, curiously. His mother was what could be termed a difficult woman, even at the best of times. Selfish and indulged, she was prone to meanness for seemingly no reason, especially where his father was concerned.\n\n\"Do you believe in the curse, like your brothers now?\" Armando asked.\n\n\"It's hard to refute the proof, despite not experiencing it myself,\" Noah admitted.\n\n\"Your mother has always sought to prove beyond a shadow of a doubt that I love her, not because of the curse, but because of who she is. She tests me both in private and in public, pushing me to prove that I love her completely because of what I feel for her, not because some curse makes me feel that way. It is a losing battle; how does one prove the difference when the love is there regardless, all wrapped inside us?\" He sighed. \"As you boys came along, she gave you all biblical names to try to thwart the curse. Now that you are all older and seeking your mates, your curse breakers, she feels that she has to prove there is no curse. She believes that, if it was the curse forcing Gideon to love Vivienne, or in her mind proving it forced me to love her, then she has to admit she didn't capture my heart with her beauty and love for me alone.\" \n\n\"The curse makes her think your love is a lie?\" Noah asked, trying to understand.\n\n\"Something like that. To your mother, it means I love her, not for her, but because a curse forces me to,\" Armando tried to explain. \n\n\"Same thing from what I can see. Viv is exactly the type of girl Gideon would have gone after, regardless. They fit each other perfectly. I think the same about Gen and Olivia, more and more as she heals. I don't think the curse could build relationships where there was no attraction or common ground, to begin with,\" Noah argued reasonably. \n\n\"Yes, but it has always been her way to prove that the curse is not real. Even to the point of hurting the woman destined to be Gideon's wife.\" Armando shook his head sadly. \"And what of you and the sister? Nothing happening there?\" \n\n\"Nothing at all, aside of a physical attraction that I haven't acted on, because Dom initially told me that my curse breaker wasn't far away. That was before though. I don't think I will get mine now,\" he gave a soft chuckle. \"It seems I have some oracle powers and that seems to eradicate the curse, according to Dom, who never got any of the symptoms Xavier experienced, but fell in love with Emma all on his own, because it was meant to be that way.\"\n\n\"What does that mean exactly, oracle powers?\" Armando eyed his son. He would need to talk to his brother about this revelation.\n\n\"Honestly, it's all a bit confusing. I've been meeting with Dom and Imelda from the Tatar about it, but my thoughts are all jumbled. I thought working out some of the tension this afternoon might help to give me a clearer head,\" he suggested, looking for his father's approval of the idea.",
        "\"There are worse ways to clear your head than focusing on the willing service of a beautiful woman... or man,\" Armando grinned. \"Let's check who's available for an assessment of their training this afternoon.\"\n\n\"I was hoping Matija was still here,\" Noah suggested, not hiding his preference for the petite brunette from his father.\n\n\"You might be in luck,\" Armando chuckled and led the way to his office to call the Dominant who oversaw her training. He knew of his son's preference for the girl and had kept a close eye on her training. He was considering offering her a contract to serve here as a mentor and be available to his son and senior staff, though it wouldn't look good for the next High Lord to be playing favourites amongst the girls. Once the recent events, that kept them from their work, were dealt with, he would discuss the idea with Noah.\n\n*****\n\nThe car pulled up outside a house painted in a riot of different colours. The garden was full of things that truly shouldn't be there, and just as Vivienne had told her, Olivia saw the teapot tree standing larger than life in the front garden. She bounded out of the car to take in the multilevel house she had heard so much about. All the different coloured sections, with different shaped windows, seemed somehow right, even in its wrongness. \n\n\"Gideon says that this house and his Madrina remind him that not everything in the world has to make sense to work. That which is beautiful to one man is merely interesting to another,\" Vivienne said, enjoying the look of wonder on Olivia's face and refusing to acknowledge the frown and disapproval that, once again, painted Marcella's features. \n\n\"Follow the yellow brick road,\" she grinned, and linking arms with both of her friends, she led them through the strange garden surrounding the fantastical house. She laughed, as Marcella had to duck under a low hanging teapot that hung from the old tree in the centre of the yard. As always it seemed to be flowering teapots from every branch in various shapes and sizes, and she smiled.\n\n\"My beautiful girl!\" an old woman exclaimed, making Vivienne look up at the house. \"You finally come back, and without my cheeky boy forcing you this time!\"\n\n\"I brought some friends for you to meet,\" Vivienne called back. \"Gideon is forcing his brothers to come to visit you later. You will have a full house before you know it,\" she laughed. \n\n\"Come on then. and introduce me to your friends and we shall see whether to have tea or not,\" Madrina said, then slammed the window shut without another word and disappeared from view. Then Vivienne guided her two friends up the stairs, with the two bodyguards trailing along behind them.\n\n\"My beautiful girl,\" Madrina exclaimed again, as the door flew open and she embraced Vivienne in an all-consuming hug that had her friends each dropping the arm they held at her side.\n\n\"You are beautiful, so beautiful and such a welcome sight!\" Madrina grinned and took her arm, linking it with her own as they walked into the house. \"The wedding was beautiful, and soon we will have babies to lavish our love on, yes?\"\n\n\"I am enjoying getting to know my husband firstly. You may have to wait a little longer for babies.\" Vivienne gave a soft laugh.\n\n\"I will enjoy meeting your friends for now, then.\" Madrina lifted an enquiring eyebrow and turned to gaze at the sisters, as they stood just behind Vivienne, having followed them into the house.\n\n\"This is Oliva and Marcella,\" Vivienne smiled widely. \"They are good friends of mine,\" she stated, not mentioning Olivia's relationship with Genesis.\n\n\"Sisters.\" Madrina tilted her head, studying the two women. \"Ah, you brought me the lost lamb,\" she cackled drawing Olivia into a fierce embrace. \"Such a pretty girl. How is the wound on your side?\" she asked, releasing Olivia with the enquiry. \n\n\"It is almost healed, although Genesis is very cautious about letting me do too much and hinder the healing process,\" Olivia said, guardedly.\n\n\"As he should be. Tell me, is the brace I made for you helpful?\" Madrina gave Olivia a knowing smile. \n\n\"Very much,\" Olivia replied, as she blushed under that smile. \"I didn't realise you had made it. Thank you so much.\"\n\n\"Of course, pretty girl. Those boys are like my own, and I would never deny them anything that is within my means to give,\" she said, before turning back to Vivienne. \"I am sorry Tatianna wasn't more welcoming toward you, but she fights her own demons within this family. That is a conversation for another time, however. Tea everyone?\"\n\nVivienne stood open-mouthed as the little old woman went about the business of making tea. She found it hard to process what had just occurred and how she could change directions so abruptly. She wanted to ask more, but instead decided that wasn't a conversation to have in front of the hot-tempered Marcella, who was still livid by her new mother-in-law's treatment of her. \n\n\"I'd like to hear that conversation,\" Marcella sneered. \"That woman was awful. Not even just awful, she was cruel! I'm surprised Vivienne returned to Gideon at all after that, let alone married him without resolving that problem.\"\n\n\"The problem is hers, not Gideon's,\" Vivienne said gently. \"Despite her words, he didn't know what she had done. He had planned to be a buffer between us at dinner that night. It was she that tried to scare me away, and I, we,\" she said pointedly, \"played right into her hands and let her win round one. I, however, took control of the game, and nothing she says can affect me or how I feel about Gideon now. If I am honest, it never could. I think I fell in love with him the moment we met.\"\n\n\"Their mother was mean to you?\" Olivia asked in a small voice. Vivienne was amazing. If Genesis' mother didn't like her, what chance did Olivia have of being accepted as part of this family, despite what Genesis wanted. The thought that his mother would judge her and realise she was broken and had betrayed the Tables, and that Genesis would be forced to end their relationship terrified her. She felt sick inside at the idea.\n\n\"You need not worry, little lamb.\" Madrina reached over and patted Olivia's hand where it lay on the bench. \"My beautiful girl here taught Tatianna a lesson she won't soon forget about interfering in her sons' lives. Not only was she barred from the ceremony but her husband did not attend either, to ensure her punishment was complete. Luckily for Armando, he has two other sons to have big wedding feasts that he can preside over, like the doting father he is.\"\n\nOlivia fell silent. She belonged to Genesis now, body and soul. She loved him and felt sure that he loved her, but they had never talked about a commitment beyond that. Never marriage. Would his family be even more disappointed by the fact that their youngest son had no intention of marrying? She stifled a sigh as her worried thoughts flew through her head. She looked up to find Madrina watching her, as if waiting for a response, and couldn't find the words to express her thoughts.\n\n\"I am glad that his brothers and my friends were able to come,\" Vivienne grinned. \"It was all so spur of the moment. I didn't give anyone much notice, and members of my own family didn't make it either,\" she admitted.\n\n\"Noah doesn't seem the settling down type,\" Marcella shrugged. \"Genesis might, in time, but not in the near future with everything else that's going on. Armando may have to wait a while yet, unless Sera is seeing anyone seriously.\"\n\n\"No one measures up to her brothers in Sera's mind,\" Madrina cackled. \"She too had no inkling of her mother's agenda on that day.\"\n\n\"She still let it happen, without saying a word,\" Marcella said in hard tones.\n\n\"Every family has their flaws, do they not?\" Madrina asked pointedly, knowing more about the sisters than she let on. She had a gift far beyond what she let on to anyone else, and she had spent a little time with Noah recently, as he became accustomed to his own gifts. She considered the young woman across from him and knew that she would walk a difficult and dangerous road before she accepted who she truly was and the future path her life would take.\n\nMarcella stared at the woman for a few moments but said nothing. She had promised Vivienne that she would play nice and she had almost let herself break that promise within a few hours of making it. She took a deep breath and let it out slowly, determined to be the sweetheart she had promised her friend she could be.\n\n\"This is such an unusual house. Did you design it yourself?\" Marcella asked Madrina as they took their tea and went to sit in the comfortable couches nearby.\n\n\"Much like Vivienne, I had a man who proposed the day he met me,\" she chuckled. \"I gave him impossible tasks to prove that he truly loved me and meant it. One of them was this house,\" she said fondly. \"He was the greatest love of my life, and I miss him each and every day. Once you have had your tea, I will give you the tour, and Vivienne can try on the dress I have made for her as a wedding gift.\"\n\n\"The other dress you made for her was amazing,\" Olivia said without reservation.\n\n\"I'm glad you think so. Perhaps we can find something for you too, little lamb,\" she grinned, with a twinkle in her eye. \"And you,\" she spoke to Marcella without giving her a nickname. \"I am sure my boys will dress in those stuffy suits they always wear for dinner.\"\n\n\"Really? You would have something that might fit me?\" Olivia asked.\n\n\"Of course,\" Madrina cackled. \"I have been expecting your visit since Genesis asked me to create the brace for you and gave me your measurements.\"\n\n\"That's handy then, but I doubt you were expecting me as well,\" Marcella said with a smile, showing she was not concerned. \"Luckily, I always look fabulous, so it won't matter if I stay as I am for dinner.\" She winked at Vivienne, who grinned back at her, glad to see a glimmer of the humour she had always admired in her friend.\n\n\"Oh, I'm sure we can find you some little thing to wear,\" Madrina said with a knowing look and immediately changed the conversation again to whether Vivienne and Gideon were contemplating buying a home of their own. There was a tentative knock at the door before Vivienne could answer and Madrina looked at her with serious eyes. \"Your guest is right on time,\" she said, then asked, \"Are you sure about this?\"\n\n\"Marcella, don't judge me, okay? I wanted to tell you but I... This is something I need to do, okay?\" Vivienne said nervously, causing her friend to frown in confusion. \"It hurt Gideon a lot, not having his parents at the wedding, and I don't want to be the cause of the rift any more and it's better for Olivia if she meets Tatianna with both of us here and Genesis on his way. It's not an ambush. I invited her here today, and I meant to tell you. I just couldn't find the words, and I was scared of how you would react. You've been so... well, it's done now, and I need you to be my friend more than ever.\"\n\nMarcella was stunned. She opened and closed her mouth several times to speak, to rage at her friend, but nothing came out, as if she had her words stolen from her. For the first time in weeks, she stopped and thought about what Vivienne had just said. If she were a better friend, a better sister, they wouldn't be so scared to tell her things. She was used to having to be the bitch and fight for what she wanted. She had lost sight of the fact that she wanted her sister back and her friendship with Vivienne to grow. She hadn't meant to scare them or intimidate them. She had every intention of scaring and intimidating Tatianna if she behaved so badly again, though. \n\nShe went to sit protectively beside Olivia and took her hand, offering support as Olivia began to understand what was happening and withdrew into her shell. She watched as Vivienne stood nervously and went with Madrina to answer the door and invite Tatianna back into her life, their lives. \n\n*****\n\nGrateful that his father hadn't pushed him further about his newly-discovered abilities and what that could mean for him and his future, Noah stepped into the large room that served as his private space within the recruitment and training complex. He did not use it often, preferring to use the facility training rooms along with the other Dominants who worked for his family in the human resources department, which taught the traditions and laws of his family. He had wanted them to know that he had the skills and knowledge to take over from his father and that he would be held accountable to the same code of ethics he and his father held them to.\n\nToday, however, he just wanted to lose himself and leave the concerns he had for his brothers, their loves and the infuriatingly demanding Marcella outside the door. He was so over babysitting Marcella, but he knew that as soon as he left her to her own devices, she would bring another world of trouble their way. The fact that he admired her feisty, no bullshit, take no prisoners stance when confronted by roadblocks or people who would stand in her way was beside the point. She drove him crazy, often and seemingly without even trying. She had a knack for finding trouble, but she also had a knack for asking the right questions, to get answers he didn't even realise were there or that he needed.\n\nHe went to the armoire and shed his dark suit before dressing in the soft, comfortable work-out pants that were his preference here. He had no need to intimidate with leather and chains, as some Doms did. The men and women who served him knew he held power in their exchange, the rest was just window dressing. This change of clothes and persona was like a ritual for him. In his lawyer's suit, he was the unruffled, urbane, go to guy for his family and friends. Always there to help in whatever capacity was needed, even babysitting potential threats and troublemakers, like Marcella.\n\nShe'd crept into his thoughts again, and he shook his head. He needed this session more than he realised and acknowledged he had denied himself for far too long, as he had dealt with one crisis after another since the attack on the mothers of their Table and the discovery of Olivia Gambaro within the Suebi clan. Clearly, the woman had driven him insane if he were thinking about her here in his personal domain, the last place a woman like her would ever consent to be, though the idea of forcing her submission to him held some appeal. There was nothing quite like the rush of subduing such strong, ballsy women and making them see how freely giving up the constant control they fought for could be. He knew first-hand how it felt. He'd started learning his craft as a submissive, but as he had matured, he knew it wasn't the role for him.\n\n\"Enter,\" Noah commanded at the soft tap on his door. He watched as the petite brunette slipped silently into the room and padded to its centre before kneeling in the perfect pose, waiting for him to command her. He stalked toward where she knelt, feeling his arousal grow. \"Remove the camisk and display,\" he instructed, watching her intently as she rose gracefully and pulled the soft satiny material from her body before standing, legs shoulder-width apart and her hands behind her neck, the fingers interlocked.\n\nShe was as beautiful as he remembered. At barely one hundred and sixty centimetres he towered over her, giving him that immediate sense of power. Her long dark hair hung loosely from a high ponytail, exposing her long neck, shoulders and back. His eyes dropped to her breasts, larger than usual for a girl with such a petite frame. They were well rounded, with high pink nipples that made them seem perky and begging for his attention. He reached out and gently brushed a thumb over one pink bud, smiling at her intake of breath. His eyes trailed lower to the tapered waist and the flare of her hips before taking in the well-manicured strip of pubic hair. He was pleased that her trainer had not insisted on her being shaved bare. Her legs were well shaped and muscled, as if she trained hard in the gym to sculpt her already-perfect little body to higher perfection.\n\n\"Do you know who I am?\" Noah asked in a low rumble as he circled her, his fingers gliding lightly over her skin, appreciating her softness and the swell of her curves.\n\n\"Yes, Master, and it is my honour to serve you again,\" Matija said in a sweet melodic voice, keeping her eyes downcast.\n\n\"So willing to bend to my will when you know I will cause you pain, along with the pleasure I offer,\" he murmured huskily into her ear as he stood behind her. He felt the tremble in her small body before she answered.\n\n\"Yes, Master. I understand what it is to serve you, and I come here willingly,\" she said, the trace of a smile curling at her lip as she spoke. \n\n\"Perfect,\" he whispered and trailed his hands lightly up her sides and over her ribcage. He took the braided leather straps he had prepared from the nearby bench and bound her hands together before lifting them above her head to secure them to the hook that hung from the ceiling in the centre of the room. His preferred starting position in this room. Using the remote, he adjusted the tension until she stood precariously on her toes. Her body lengthened, fully on display and accessible to him.\n\nMatija had felt her back protest for a moment as Noah pulled her to her toes, her shoulders aching slightly as she breathed to relax and take the stretching strain of being hung by her hands. He kept pulling until she felt as if she was in ballet class, perched on the tips of her toes. She was stretched, and as painful as it was, her elongated body felt oddly sensual and alive. Her every sense heightened to the man behind her, and she was aware of every movement, every sound that he made. He moved to stand again where she could see him and stepped back, studying her. It unnerved her a little as she peeked up and saw the look on his face, part hunger and part... something feral that she couldn't name.\n\nNoah had thought Matija a desirable woman before, but hanging from the hook like this, she was a goddess who tempted every fibre of his dominant soul. Her fit, athletic body was stretched taut, hollowing her tiny waist that flared into her suggestive, womanly hips, tight ass and runner's legs. Her toes were only skimming the rich wood floor, and the strain only made her legs look more perfect. Her firm, fleshy ass cheeks were tight with the strain, and they made Noah want to run his hands over her and spank her until her reddened skin glowed with heat and pain. Her breasts stretched and pulled high on her chest, making them simply stunning to his eyes. Her hard breathing made her breasts wobble enticingly, and the hard, distended pink buds of her nipples seemed to be pleading for his attention, even more so now, and he was about to give into that silent invitation and give them the attention they deserved. \n\nAs the Master, the son of her Lord stood in front of her, looking deep into her eyes, Matija felt as though he could see her very soul and she couldn't hide from him. All of her desires, perversions and fantasies were there for him to see, and appreciate why she had chosen this life and to serve men like him. The heat in his eyes told her that he was going to make those desires and fantasies a reality. The fire in his eyes filled her with the desire to serve him, no matter what he asked of her, but also a belief and trust in him that he would never push her beyond her limits, not that she had many. This man was all power and dominance, and she could feel her insides melting under his thoughtful gaze.\n\nIt was at that moment, bound, stretched and hanging from the ceiling, that she knew she was where she was meant to be, here with him. Bound as she was, she knew she didn't have a choice; but she knew she would've given herself to him anyway, just feeling the aura that radiated from him. His deep, penetrating eyes and hard-lined mouth told her that he would leave no desire unexplored. All her life Matija had longed for a man like Noah. The man that would uncover and explore her deepest needs like no other Dominant before him. She quivered inside with both fear and anticipation of what this night with him would bring, and why it felt so different here with him than with the other trainers. ",
        "\"I can feel that you want me to conquer you. You are intelligent, strong, and most certainly beautiful, yet you choose this life. A life of service. It takes a strong woman to face her darkest desires and put her body in the hands of her lover.\" Noah stepped in so close that she could feel the heat emanating from his chest. Her face had a hungry look as she felt the hairs of his chest provoking her nipples. He smiled cruelly at her then, knowing he would test that strength and resolve tonight.\n\nHis fingers once again lightly caressed her tightly-stretched skin, roaming over her hips, belly and breasts. Her skin seemed more sensitive now, and each light caress elicited soft noises of arousal. He smiled as she pushed with her toes, trying to lean into his caresses, to make contact harder, more tactile but he continued to tease her, building her desire. Noah's tongue came out and licked her lips, but when she reached for more, he pulled away. He gently kissed his way across her cheek until he nibbled at her ear. As he leaned in, the hairs on his chest continued to maddeningly caress her nipples and breasts. \n\n\"I expect you have learned much since our last encounter, so tonight I will be your lover, your Master, and your teacher, as I discover all the dark desires you have kept hidden from the world and even from yourself. Tonight, I will train you to take pleasure from the dark desire within me and please me with it. I will fuck you, possess you and find my own pleasure in you, as we explore what it is you want and need from this life of service,\" his deep, gravelly voice whispered into her ear, with each word sending pulsating heat within her.\n\nNoah moved back half a step, leaving her mind spinning and her body throbbing. He went over to a cabinet to retrieve some equipment, including assorted toys and a riding crop. Matija looked at the equipment with anxious butterflies in her stomach. There was fear inside her, but that only seemed to make her cravings for what he promised to bring her that much stronger. His hand stretched out to weave through her hair at the back of her head. It was chillingly sensuous to have his hand meandering through her long silky hair, and she pushed her face into his arm, acknowledging the luxurious feel. In the span of a heartbeat, his hand closed in a fist, pulling her hair and knotting it behind her head. She felt his raw masculinity controlling her as he bent her head back. Only then did his lips descend on hers in a hard kiss. \n\nHe felt her tongue battle with his, and he groaned deeply as she whimpered and strained, pushing on her toes, stretching towards him to deepen the kiss. His fingers swept over her tightly-stretched belly to her swollen breasts, finding and tweaking her nipples, just to hear the sounds she would make. He kept her distracted by the kiss as he pulled the clamps from his pocket. With no time to prepare herself, her eyes widened, and she emitted a squeal of shocked pain into the kiss when the first clamp bit harshly into the sensitive pink skin of the swollen bud. Her body arched away from him automatically, but his hand tightened its hold in her hair, stilling her movements as he broke the kiss, letting her breathe through the pain as he gave her little time or warning before the second clamp bit down harshly into her flesh.\n\nHer painful scream echoed through the room, and Noah groaned in pleasure, looking into her glassy, tear-filled eyes. Matija gasped as she tried to breathe through the pain, but it seemed as though every nerve in her body was crying out in pain and shock at his swift movements. Pleased with her response, he ran his middle two fingers through her swollen pussy lips and deep inside her. He curled his fingers into her G-spot and began to fuck her with them, while rubbing her clit. The pained look on Matija's face vanished as a wanton need exploded up through her body. Her feet came off the floor as she went from pain to heightened pleasure, with her belly spasming against him as she savoured the waves of pleasure.\n\nHer legs were swinging and twitching wildly. With her arms knotting, they took the strain of holding her body. Noah had taken her from agony to ecstasy so quickly that he could see that her mind was splintering. His manipulation of her G-spot and clit created the tidal wave he had wanted from her, and he watched her intently as her body buckled and broke, jerking awkwardly as she began to beg for release, crying out into the large room with a ferocity that surprised him. Then he pulled her head back sharply and growled at her just as ferociously.\n\n\"No!\" He growled the one word loudly. An abrupt command that stilled Matija's movements and made her sob as she struggled against the storm inside her. He watched her eyes cloud as she tried to hold back the wave he had purposely built to overwhelm her. He smiled a cruel smile, enjoying the ultimate power of that moment, watching as the girl he held did all she could to still her raging emotions as he continued to manipulate her body. Her begging sounded like a sweet song filled with anguish, pain and tears, and his cock swelled even further, watching her fight a losing war with herself.\n\nMatija was being buffeted between pain and absolute pleasure. Her body reacted with juddering spasms, and her mind couldn't grasp the intoxicating waves that threatened to overwhelm her. She continued to beg, beg to cum, beg for a reprieve, beg for mercy, and she knew, in the end, she would lose this battle. She was incapable of resisting the pull his hands made on her body, and he knew it. Pain and pleasure merged, creating an explosion more powerful than any drug, and all thought disappeared from her mind. All she could do was float on the waves of sensation that raced through her quaking body. Even the drug she had almost overdosed on so many months ago had never given her a high like this and she knew that this man, and men like him, were now her drug of choice.\n\n\"Naughty girl,\" Noah crooned, and gave her a cruel smile as she began to come down from the high she had been on, her body barely supporting her as Noah supported her position until her eyes refocused. \"There are consequences for disobeying me,\" he rumbled. Though he didn't need a reason to punish her, it was all part of the game they played in this place. She slumped from the chains, and taking pity on her, he lowered the chain slightly so she could stand flat-footed and take the strain from her arms and shoulders. Unhooking her hands, he led her to a frame and secured her to it; arms and legs wide. He had massaged her arms and shoulders as he secured her, to ensure that he did no real, long-lasting harm. \n\nHer hair had come loose, and it tangled around her shoulders and down her back in long dark waves. It was startling to Noah, as he turned from the counter with the flogger in his hand, to see a vision of Marcella bound to the cross, her face obscured by the curtain of dark hair. He hissed a breath in confusion and shook his head, unsettled by the thought, before approaching Matija and tilting her head up to look at him by gripping the long strands and pulling them back from her face. He kissed her deeply then, in both relief and displeasure at his own thoughts. Once his unease settled, he stepped back and began to flog the Kept, Matija, as he reminded himself of her station and name in the silence of his mind, with the soft suede instrument, colouring her skin a rosy pink and eliciting soft cries of torment.\n\nNoah noted that Matija was obviously having a hard time catching her breath with the constant buffeting between pain and pleasure. Her chest heaved, trying to fill her lungs with air, but it also made her breasts sway invitingly. He discarded the flogger and picked up the riding crop, intending to finally give her breasts the attention they deserved. He flicked at the clamps, knowing she had worn them long enough, and not wanting to truly harm her, he expertly rained blows on the milky, soft flesh of her breast before dislodging first one and then the other, using his hands and mouth to soothe the delectable pink buds. The girl truly was delicious, and he felt her drift away in a fog of pleasure and pain again, her body vibrating into harder spasms as he held it.\n\nShe was deep in subspace when he finally released her and placed her on the edge of a bench, her thighs wide, her wet, overworked pussy welcoming. He loomed over her, holding her face and commanding her to focus on him now. Her eyes cleared as she looked at him. Still, lust filled and heated, none-the-less they took him in as he hovered over her. He watched as she gasped, and those expressive eyes widened as he finally rammed inside her, ready to slake his own need with her body.\n\nNoah had wiped all thoughts from his mind, except thoughts of the oh-so willing girl below him and needed to wipe her mind the same way. His touches, kisses, lashes and caresses dominated her thoughts as he focused his attention on where it needed to be. He was a Master, fully in control, unable to lose himself in the act lest the face that haunted him earlier return.\n\nShe was helpless before him. With her body stretched taut across the bench, he controlled her mentally, emotionally and physically. Her body was riddled with red stripes from neck to knees, and her skin glistened with perspiration. Her muscles rippled and strained beneath her skin, glorifying the possession of her body and the mind that drove it. Her chest heaved with the exertion, and she'd given up trying to speak but instead only moaned and whimpered with the joy of being fucked into insanity by a Master, albeit not her own.\n\nNoah watched her face glow with passion and acknowledged that, at that moment, as with most women, she was truly breathtaking. Her true beauty came to the surface, and the real passionate Matija revealed herself at the moment before she climaxed for a final time. Her luminous eyes were sending a message, and it was, 'I'm yours, do as you will.' Noah kissed her hard, his hands caressed her heated and inflamed flesh as he strove for his own climax now. He pushed Matija back into subspace as he played her body like an instrument, adding to her pain-filled pleasure with his hands and mouth. He gauged her carefully, and only when he was ready did he let her fall over the edge into oblivion, her contracting pussy milking at his cock as he joined her in the blissful explosion of orgasm. He took long moments to recover before going through the process of caring for Matija and ensuring her well-being, before sending her to the infirmary to be watched over as she rested.\n\n\"Thank you for your service today,\" Noah smiled and kissed her lightly and affectionately on the head, giving her a genuine smile.\n\n\"Thank you for allowing me to serve you. The honour was truly mine,\" she said quietly in response and left him then.\n\n*****\n\nNoah had felt relaxed after his time with Matija, and had indulged in a sauna and massage before meeting with his father again. It was during that meeting that the tension started creeping back into his body. He felt like there were hidden agendas and forces at work wherever he turned, and he wasn't sure how to start to unravel the feeling that things were happening unseen around him. He could only glimpse the edges of them. He drew a deep breath as he pulled up into the driveway at Madrina's house and looked up at the oddly-comforting and comical fa\u00e7ade of the colourful structure.\n\nAlmost immediately he saw the two hulking shapes that guarded the house. One at the front door and the other coming from the side, as if he had just walked a circuit of the house to ensure its security. On hearing of Olivia's story, the Battaglia had sent two of their recruits, who had been offered lucrative contracts to take up their positions. The man and woman were both very serious-looking, and Noah knew that he wouldn't like to be on the wrong side of a fight with either of them. They were unobtrusive, however. So much so that at the clinic Noah rarely even noticed they were there, as they blended in even more so than the watchmen, but they never took their attention from the girl they were to guard.\n\n\"Ah, here comes trouble,\" Madrina announced from an upstairs window.\n\n\"Whatever they have told you, I'm innocent, as usual!\" Noah called back with a wide smile. He wondered briefly if she had run all the way upstairs just to greet him as she normally did, from that upstairs window. \"You always think the worst of me, and all I do is bring a little joy into your grouchy, old life,\" he chuckled.\n\n\"That just tells me there is more for them to say!\" she cackled back at him. \"You better come in and confess before I hear it from someone else.\" \n\n\"I've done nothing!\" he complained but opened the door and let himself into the familiar warmth of the house in which he had done most of his growing up , immediately missing the pipe tobacco smell that used to linger from his Godfather, so long ago. He walked toward the masculine voices of his brothers that he could hear in the cosy sitting room next to the kitchen and raised an eyebrow, not seeing any of the girls.\n\n\"Madrina is playing dress-up with some live dolls,\" Genesis grumbled. \n\n\"This should be interesting,\" Noah chuckled. \"Lucky it's just me here to ogle the women you love, or there really could be trouble tonight.\"\n\n\"Ogle away, it's me she married,\" Gideon said with supreme confidence. \"My wife is a one-man woman, and I like it that way.\"\n\n\"Your wife has a name, you remember,\" Noah teased his brother, hoping he would get over having to remind everyone that Vivienne was his wife sooner rather than later.\n\n\"Thank you, Noah,\" Vivienne said, sweeping into the room in a pale blue figure-hugging dress to kiss Gideon softly. \"But my husband can call me wife as much as he likes and I will never tire of hearing it.\"\n\n\"Good grief,\" he groaned. \"Gen, promise me you won't ever get that mushy.\"\n\n\"No can do, brother. Especially if she looks as good as Vivienne when she comes down those stairs,\" Genesis admitted.\n\n\"You two are so far gone that you don't even hear yourselves anymore,\" Noah grumbled and rolled his eyes, but turned as Marcella appeared in the room to a long whistle from Gideon, who immediately turned and kissed Vivienne to show he was just being appreciative of the friend and had no interest beyond that. Noah turned and took in the vision that was Marcella. Large bands of red material wound around her body as if binding it tightly and holding it in all the right places. He felt no heart attack or twisting of the gut, but his cock stiffened as she turned to acknowledge the compliment from Gideon, her hair swaying along her back and covering her rear in a curtain, as Matija's had earlier this afternoon. \n\n\"That's some dress,\" Genesis acknowledged. \"You look good in red,\" he complimented her.\n\n\"Thanks. It's not something I would normally wear but that old lady makes it very hard to say no to her,\" she gave a half laugh of defeat. \"Especially when your friends side with her.\" She gave Vivienne a pointed look.\n\n\"You should wear dresses like that more often,\" Gideon chuckled and gave Noah a side-long look, making him reel in his scattered thoughts. \n\n\"I agree. Red's definitely your colour,\" Noah said, in what he hoped was a normal tone of voice, as he tried to bring his body to heel. He'd only just released all of the tension he had been feeling that afternoon, and he hated that his body would betray him, now of all times, so he took a seat on one of the couches and surreptitiously crossed his legs. Thankfully, Olivia had followed Marcella downstairs, and all eyes and comments turned to her as she practically skipped across the room to Genesis.\n\n\"Fuck me!\" Genesis hissed, looking at the green corseted dress with hungry eyes, before pulling Olivia into his lap.\n\n\"Not in front of your family,\" Olivia whispered and giggled as a voice came from the stairway behind them.\n\n\"I heard that, you little devil!\" Madrina scolded Genesis for his language.\n\n\"What did you expect when she is dressed like that?\" Genesis returned. \"You're lucky I didn't just pick her up and disappear upstairs,\" he teased, not embarrassed at all by his reaction to the sexiness of the dress Olivia wore, or how it affected him. \"You knew what you doing, old woman, don't deny it,\" he challenged her, and he gave a sidelong glance at Noah, who, he noticed, was far from immune to the way Marcella looked tonight. Madrina knew them all far too well.\n\n\"I might have considered you in my choice for your little one,\" she chuckled.\n\n\"I thought you invited us all here for dinner?\" Gideon asked, glancing at the pristine kitchen where the usual pots and pans failed to be seen on the stove top.\n\n\"Such a cheeky boy! I didn't say I would be cooking it,\" she cackled. \"Vivienne invited a friend of mine, and they are bringing the last member of our party with her.\"\n\n\"You invited a friend here?\" Gideon frowned at his wife.\n\n\"Friend might be a stretch but yes,\" she admitted. \"I'm sorry,\" she said looking at each of the brothers in turn, \"I just, I... needed to...\" Marcella moved to her side and smiled reassuringly. \n\n\"You did the right thing. Even I can see that now,\" Marcella said softly. \"They will too, once you explain why you did it.\"\n\n\"What's going on?\" Genesis asked abruptly, his whole body tensing as he realised something had happened while he hadn't been here to protect Olivia, and he had no control of the current situation.\n\n\"I met your mother today,\" Olivia said quietly and shrunk as each brother spun to face her and Genesis swore loudly.\n\n\"Fuck! What the hell were you thinking, putting Olivia in that kind of position?\" he demanded of Vivienne, making Gideon bristle, but it was Marcella who stepped in front of her friend, blocking her from Genesis' rage as Olivia put a hand on his shoulder.\n\n\"She thought that I would like to meet her here, with a friend who understood how scary it was and would not let her talk to me the way she did to Vivienne, the first time they met,\" Olivia said. \"Vivienne feels awful that Gideon didn't have his parents at their wedding and was trying to make it right again. It had nothing to do with me, or you or anyone else. Just them,\" she said simply. \"She doesn't want to be the reason your family is not getting along.\"\n\n\"Well, that was one way to tell them,\" Marcella said and sat back down as she saw Genesis relax under Olivia's hand and soft words.\n\n\"You should have told me. I would have been here,\" Gideon growled quietly.\n\n\"I would never have hurt her that way again,\" Tatianna said from the edge of the room. She had entered so quietly that no one had noticed her until she spoke. Far from the beautiful, spoilt and entitled princess that she had always appeared as in the past, her sons were shocked by her haggard appearance. She still wore the beautiful clothes, her make-up was flawless, but she had dramatically lost weight and the make-up barely hid the dark circles of blue under her eyes. \"It cost me everything, my vendetta against that curse. I lost everyone that I loved for proof I never needed, not really.\"\n\nMarcella swallowed hard and glanced at the three men as they took in the shadow of their mother who had suffered greatly from her greatest mistake. She had pushed her husband too hard to prove that she was his choice, not a trick of the curse, and he had chosen to walk away from her, rather than be forced to endure all her petty games because of her doubts. It was only when he wouldn't take her calls the following morning, when she deigned to forgive him for sending her home and endured watching her son's wedding in the Papillo home rather than her own, that she realised that Armando had always had the choice to love her or ignore her. She realised that finally, after forty years of being pushed, he had finally given in and given her the proof she needed and stopped loving her absolutely, no matter what she did to hurt him. The problem was that she couldn't live without him, without her sons, without her family. ",
        "\"I'm sorry,\" she said stiltedly, as if stifling a sob. \"I'm so sorry for everything.\" She had a lifetime of game-playing with her sons and husband to apologise for, and she had no idea where to start except here, with these three young women who had captured her sons' hearts and offered her an olive branch and a chance to make things right.\n\n\"You're only sorry because you lost this round with Papa,\" Genesis said through gritted teeth. \"Excuse us if we don't believe you truly mean it this time, any more than the last apology you made.\"\n\n\"I deserve that,\" Tatianna admitted. \"I will prove to you that I mean it over time. No more games. I will be a better mother, a better person, if you'll let me.\" \n\n\"Shit!\" Noah hissed as he heard a scuffle and his father's voice outside. \"I'll go,\" he blew out a breath. \"You might want to send the girls upstairs for a while. He sounds pissed.\"\n\n\"It's my fault, I'll stay,\" Vivienne said, with a tremor in her voice. This had gone badly. She didn't regret what she had done to try and rebuild bridges, but she should have thought it through better, perhaps. At the very least, she knew she shouldn't have put Madrina in the middle of an awkward situation.\n\nGideon said nothing but wrapped his arms around his wife and squeezed her. She always meant well, and she had done this for him. He had thought that he had hidden the fact that he hated not having his parents at his wedding better, but she had known. He knew that, even though she went about things in the wrong way much of the time, she did what she did with a pure heart and good intentions, unlike his mother, who was now reaping the benefits of what she had done to them all for so many years.\n\n\"What the hell is going on here?\" Armando raged before he even entered the room. He turned to look at his wife and stopped in his tracks, noting her haggard appearance, the weight loss and the obvious dark circles beneath her make-up. She had suffered far more than he had thought possible, and his heart broke that he had done that to the woman he loved.\n\n\"It was me,\" Vivienne said clearly and came to her feet to meet his challenge. \"Family is so important, and it was me that caused the problems, running away and not trusting what I had with Gideon. It was all my fault, so I just wanted to make things right.\"\n\n\"None of it was your fault,\" Tatianna said softly, a catch in her voice as she looked away from the man she adored and who had always loved her absolutely, until she had caused this rift in the family. \"None of this is your fault, Vivienne, and I am so sorry that you felt that way. They all know who is to blame here. and it is not you.\" She stopped short of admitting her guilt out loud, but they all knew she was admitting it without voicing the words.\n\n\"Where's Sera?\" Madrina asked with a frown. \"She went to get you and food.\"\n\n\"Isaac was bringing her. I wasn't about to wait for food when I heard what was happening,\" Armando growled, still staring at his wife's worn-down appearance.\n\n\"So that's thirteen for dinner. I hope we ordered enough,\" Madrina laughed. \"Come on, you lazy boys, help me set the table outside and open some wine for dinner,\" she commanded, as if they were still teenagers.\n\n\"I'll help,\" Marcella offered, wanting to get out of the firing line now that Armando was here, radiating rage and disappointment in equal measure. \"Come on, Viv, we can organise plates and napkins.\" She encouraged her friend to move, seeing Genesis helping Olivia to stand and follow him to the outdoor patio off the kitchen area.\n\nSera and Isaac arrived not long after, carrying boxes and boxes of pizza from a small Italian restaurant and dropping them on the tables out the back. Half of the food had gone before Tatianna and Armando joined them. Even though the brothers were still wary of their mother and the conversation seemed strained whenever she tried to join in, everyone did their best to act as normally as possible. Isaac stayed, choosing a chair close to Marcella and engaging her in conversation about Perth and how long she intended to stay in Darwin. \n\n\"Noah, doesn't Marcella look just like M...\" Isaac began to ask before Noah cut him off.\n\n\"Completely different, trust me on that,\" he chuckled and shook his head, willing his cousin not to say anything more about Matija here with the girls present. He didn't think being compared to a prize Kept would impress Marcella in the slightest. He glanced at his father, who hadn't missed the conversation and raised an eyebrow at his son in question. What that question was Noah wasn't sure exactly, but he knew his father wouldn't let it go easily.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "family",
        "dominant",
        "submissive",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-11"
}