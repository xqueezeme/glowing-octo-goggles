{
    "title": "Boss Nanny Ch. 21",
    "pages": [
        "Seamus took a deep breath as Matt came to him. His closeness was welcoming but did little to calm the anxiousness coursing through his veins.\n\nMatt cupped his face, then ran his hands down until they were on his chest. The touch was infinitely better than the close proximity. Matt waited until Seamus looked at him before he spoke. \"What's not good?\"\n\n\"Mike is suing me.\"\n\n\"Suing you? What the fuck for?\"\n\nSeamus pulled out a chair and dropped into it. \"Honestly, I don't fucking know. Defamations?\"\n\n\"Defamation? It's not like you've plastered it on a billboard, you've only talked about it with a few people close to you.\" Matt defended. \"He stole from you.\"\n\n\"Well, that is to be determined, I guess.\"\n\nMatt pulled out the chair next to Seamus. He positioned himself so Seamus was between his legs. The gesture was oddly comforting. \"Any other update?\"\n\n\"They finished the investigation. We can move forward with charges.\" Seamus looked as dejected as he felt, and his tone only highlighted that.\n\n\"That's the news we've been waiting for, so why don't you seem thrilled about it?\"\n\n\"Because he's smart. Is the fact he's suing me first going to have a negative impact on the charges we want to file against him? I can't help but worry that things are about to crash and burn.\"\n\n\"Things have already crashed and burned. Now we have to clean up. I'm not saying it's going to be easy, but we have to try.\"\n\nSeamus rubbed his face. He knew Matt was right, but Mike's lawsuit had thrown him for a loop. There might not be substance to the lawsuit, but that didn't soften the blow.\n\n\"Thank you.\" He leaned forward and kissed Matt. Sweet Matt. \"I'm going to say goodnight to Aidan.\"\n\nAidan was sleeping peacefully on his back, with his arms out to the side. He had a handful of moose surrounding him, making Seamus smile. He fixed a few of the stuffies, then gently ran his fingers through Aidan's hair. Seamus hadn't lied when he told Matt that he would give everything up if it meant keeping Matt and Aidan. At the same time, he wanted to make sure that both of these men had everything they could ever want. He wanted to provide a future for them.\n\n\"I don't know what's going to happen,\" he whispered to the sweet sleeping boy. \"But I will never let you down.\"\n\n****\n\nFor weeks, the manilla envelope floated from the table to the counter. Seamus hadn't opened it but he damn well knew what was in it. The findings from the investigation and the charges filed against him, courtesy of Mike. The lawyer had briefed him. It was in her hands, and he trusted her completely. She had it under control.\n\nIt was driving Matt crazy. His boyfriend eyed it almost every day. The accountant in him wanted to lay the paperwork out and comb through it page by page. He also was desperate to compare their findings to his own.\n\n\"Can we please go through it tonight? I know Sharon told you what's happening, but don't you want to know the details? Wouldn't that make you feel better?\"\n\nMatt was sitting on the couch with his back to Seamus. Seamus snaked his arm around Matt's neck and pulled him in. Matt's impatience was hilarious and Seamus couldn't help but laugh. \"I have no desire to read through that garbage. I know what I need to know. But I already told you, you're welcome to it as long as I'm not around.\"\n\n\"I just don't get why you're so against reading it,\" he pouted.\n\n\"Because it could be months or a year before anything happens. In the end, it's quite possible it won't be in my favor. It's going to play out if I know the details or not, so I'd rather not. It's too depressing.\"\n\nMatt looked over his shoulder at Seamus. He didn't understand how Seamus was handling the situation. For some reason it disappointed and annoyed him. \"You're really just going to roll over?\"\n\n\"I'm not rolling over. I'm waiting it out. Like I said before, if you want to know what's there, go for it. I just don't feel a pressing need to know right now.\"\n\nMatt pursed his lips while he figured out what he wanted to say. In the end, he turned around. Seamus leaned his cheek against Matt's head and ran his thumb against Matt's arm. No matter how annoyed Matt was, Seamus was going to focus on keeping things as normal as possible. Whatever was going on with Mike didn't define his life.\n\nMatt and Aidan defined his life. So that's what he was going to put his effort into. ****\n\nSeamus ripped open the package and laughed. It was so stupid and trivial, but it made him happy anyway. He held the toddler sweatshirt up and showed Aidan. \"How do you feel about playing hooky today? Good. Because you definitely have to come to work now. You have to show everyone who the real boss is.\"\n\nAidan didn't really care, but he prodded his way to Seamus and humored him by being Seamus's dress up doll. It's what they did. Seamus bought the clothes. Aidan wore the clothes. He stood diligently while Seamus pulled the sweatshirt over his head until he was all straightened out. When he was done, he smiled. It was a simple grey hoodie with the word BOSS across the front. It described Aidan so well.\n\nDressed for the day, the two men ditched daycare and ran errands instead. Seamus didn't need to stop by Dough Guppies, Cavaliers, the dealerships, or Coffee|Bar but he did. It was easy to make an excuse to show Aidan off and it never hurt to meet with the managers face-to-face. He wanted them to feel supported. He also wanted them to know he was paying attention. He couldn't handle a repeat performance of what happened with Mike.\n\nAidan got a lot of attention, which he and Seamus ate up. Boss Man and 'Lil Boss Man. While at the cafe, Kase let Aidan help a customer. After ordering, the couple handed lil boss the cash. Oh, he's so cute. \n\nInstead of putting it in the till, Aidan ran off with the twenty in his hand. Half the cafe was chasing after him like they were on a football field, which only made it more fun...for everyone. Seamus caught it on video and sent it to his friends. Jay was the first to reply.\n\nYesss. That's my lil man!! \n\nKase made two loelife's drink-of-the-week. It was a Gingerbread latte. Right up Matt's alley.\n\nSeamus tried not to stop by the office too often. He didn't want to distract Matt or make him feel pressured. When Seamus wasn't there, Matt was confident and quick to make decisions, good decisions, smart decisions. When Seamus was there, Matt got flustered and second guessed himself.\n\nIt was late afternoon. Matt was at the desk with his fingers in his hair. A sure sign he was overwhelmed. He had a month left of school and then the rest of the team was joining him. There was much to do between now and then.\n\nMatt looked up. Seamus's breath caught. It always did. Earnest blue eyes. Always shocked that Seamus was there, yet undeniably happy to see him.\n\nThen Matt smirked. Trying and failing not to laugh. \"Boss huh? You're creating a monster.\" \"Whatever, he's cute as hell and you know it.\"\n\n\"Sure,\" Matt nodded jokingly. \"Until he starts acting like he's the boss.\"\n\nAidan was well past that point. They both knew it. The little guy wiggled out of Seamus's arms and went to Matt. His boyfriend was not fooled. Aidan still very much favored Seamus. No, Aidan wanted something else.\n\nHe crawled up on Matt's lap and instantly started pounding away on the keyboard. Like father, like son Seamus thought with a slow smile. He watched as Matt panicked, quickly locking the keyboard so Potato Fingers couldn't cause any damage. Watching Aidan was like watching a really tiny hacker at work. His hands were so fast and his focus was so intense. For about a minute. Then he crawled off Matt's lap and went on his merry way.\n\nSeamus took a seat across from Matt. \"How's work today?\"\n\n\"Good, I've just been\u2014\" Matt chewed his lip as he messed with the computer, making sure Aidan hadn't done anything too damaging. Then he exited out of the program and looked at Seamus. \"I've been cleaning up accounts and getting things ready for the team to start.\"\n\n\"Are you excited?\"\n\n\"Yeah, it will definitely be a good change, but I'll miss Roberta. She's so smart and amazing at this. She can do the work of five people.\"\n\n\"But isn't the point that one person isn't doing the work of five people?\"\n\n\"Totally, I didn't mean it like that. I just meant that she's smart and efficient. I can't hold a candle to that workhorse.\"\n\nSeamus didn't argue, not because he didn't want to but because it was pointless. Matt could be a little self-depreciating at times. He had a hard time seeing how truly smart and amazing he was. Matt didn't mean to do it. He wasn't looking for compliments or anything. It was just a terrible habit.\n\n\"I was thinking that after graduation you and I could go on a little break. Nothing crazy. Maybe fly to Seattle and stay on Orcas Island?\"\n\nMatt melted into his chair. \"God, a break would be amazing. I'd have to see if Dad would take off work to watch Aidan, but I'm down.\"\n\n\"Actually,\" Seamus grinned nervously. He wasn't sure how the next sentence would be received. If not well, then they'd definitely call Brad, but... \"I talked to Jay. He was actually thinking maybe he could take Aidan for a week? He lives in Seattle, and it would be your first time away from Aidan for more than a weekend. It might be nice to have him close by.\"\n\nMatt didn't look totally appalled, but he didn't look eager, either. \"That seems like a long time to be with someone you're not familiar with.\"\n\n\"Kids are resilient and, who knows, it might be good for Aidan. Lord knows he could stand to have his immediate circle stretched. If you 're uncomfortable, that's fine, but you'll have to break the news to Jay. He knows it's not official or anything but he wants it to happen so bad.\"\n\n\"Are you kidding me! You want me to say no to that giant puppy dog? It was hard enough watching him pout around when Loren wasn't paying attention to him. How do you expect me to tell him he can't watch Aidan?\" Matt flopped back dramatically, making Seamus laugh. \"Fine. Jay can watch him. Aidan loves him anyway.\"\n\n****\n\nThe next month went by quickly. There were no updates from his lawyer so Seamus continued like normal. He did what he could to help Matt while he finished his classes, got ready to graduate, and worked for Seamus. It wasn't a hardship. Seamus loved watching Matt grow and flourish, and he really loved spending time with Aidan.\n\nBrad came down for graduation. Seamus forgot how long and boring those ceremonies were. When it was finally over, they found Matt. He was excited but exhausted.\n\n\"Had I known what bullshit the ceremony would be, I would have skipped it completely. That took forever!\"\n\nThey took a hundred photos of Matt in his gown before heading off. They had a small party at Cavaliers. Matt's friends back home couldn't make it. Seamus saw the look of disappointment on Matt's face and it broke his heart. However, the board members surprised them by showing up unannounced. This is why Seamus loved them. They might live in different areas, but they were always there for each other. Jay even brought a surprise guest.\n\nLoren Patrick.\n\nAfter the championship game where Matt and Loren had hung out a bit, Matt wasn't quite as star-struck. That didn't mean he wasn't relishing the attention of bring Loe to the Coffee|Bar and showing him the drink of the week.\n\nLoren was impressed and flattered. \"When I started doing drinks, I never thought this would be a thing,\" he said as he ran his finger over the sign. \"And the blueberry latte? That's an impressive feat since you have to\u2014\"\n\n\"Use fresh blueberries, boil them down, extract the flavor?\" Hilary cut in. She was the one who had done several large batches in order to have enough blueberries to cover the orders. \"It wasn't easy.\"\n\nEveryone stayed in town for two days before going their separate ways. Before leaving, Jay picked up Aidan and tickled him. \"See you in two days!\"\n\nMatt was standing next to Loren, who was watching Jay and Aidan with feared affection. \"You have my permission to use Aidan as content.\"\n\nLoren jerked his head at Matt. \"Wha\u2014\"\n\n\"I'm just saying,\" Matt smirked. \"You might not be able to help yourself. He's pretty cute.\"\n\nEven Seamus wasn't sure who he was referring to; Jay or Aidan. Maybe both. Together they could be potent.\n\n****\n\nThe week away was great. Seamus rented a house that overlooked the ocean. The weather was what you'd expect for June on the Pacific NW. Windy and not super warm. No temptation to do anything but relax on the deck, eat, and have sex. All things they did in spades. They also toured the island and talked a lot about things they wanted to do. Including adding to the family. Which had Seamus in cold sweats. It was a topic he thought about all the time, one he'd brought up. Matt knew where he stood, but they still hadn't had a proper conversation about it.\n\nThey watched the waves crash. The water was choppy and dangerous looking. They definitely weren't in an area that would be good for swimming.\n\nSeamus brought the beer to his lips and took a long pull. He was anxious, but he had to do it. \"Aidan will be two in less than two weeks.\"\n\n\"Don't remind me,\" Matt groaned. \"Now I get why Mom was always saying sappy stuff. As much as I want Aidan to be a little more independent, I'm sad to see him growing up.\"\n\nSeamus picked at the label of his bottle casually. He was so casual. You could not get more casual. \"I think it's a good time to start the conversation of growing our family. Depending on the route we take, it could take a while. We don't want Aidan to be too old.\" He quickly...but super casually, took another drink. His mouth was dry from the insanely casual conversation. Which got worse when Matt didn't answer.\n\nAfter an eternity of watching the ocean and trying not to freak out as he waited for Matt, Seamus finally looked up.\n\nMatt was smirking. \"How bad are you sweating right now?\"\n\n\"Not at all,\" he lied. He definitely had fresh anxiety inducing pit stains.\n\n\"You're totally freaking out right now, don't lie.\"\n\nSeamus shook his head but couldn't look at Matt.\n\n\"You want a baby,\" Matt teased.\n\nSeamus rolled his eyes. \"Of course I want a baby. You know this. But we haven't talked about it.\"\n\nMatt got up and walked to Seamus. As Matt set to straddle Seamus's hips, Seamus stretched out to accommodate his sexy-as-hell boyfriend.\n\nSitting comfortably, Matt patted Seamus's chest and smiled deviously. \"Seeing how you haven't managed to knock me up yet, how do you want to do it? Adoption? Surrogacy? Ugh\u2014 alien pod clone incubators?\" Matt paused, unsure if there were other ways.\n\nSeamus smiled, happy that Matt wasn't running away from the idea. \"I'm not opposed to adoption, but I'd like to pursue surrogacy first.\"\n\n\"A little Seamus baby?\"\n\n\"Or a little Matt baby,\" he countered.\n\nMatt made a face, a very depreciating face. \"We have Aidan. That's kind of a little Matt. If we do surrogacy, I want a little Seamus. If we go another round later on down the road, I can do the dirty work.\"\n\nSeamus breathed out. He really expected this conversation to be met with more resistance. \"I can work with that.\"\n\n\"When are you thinking you want to start?\"\n\n\"Is this a trap?\" Seamus asked with a laugh. \"Because we can cut this vacation short and leave now. Seattle has a great reproductive clinic.\"\n\nMatt laughed, then leaned forward and gently kissed Seamus. It was a I really love you kind of kiss. \"I'm not in that big of a hurry. Isn't it kind of expensive?\"\n\nSeamus nodded. He'd done a lot of research and had a pretty good idea of how much it would cost. \"It is, but we can afford it\u2014\"\n\n\"You can afford it,\" Matt corrected.\n\n\"We. We can afford it. But it could take a while. We have to pick an egg donor, do contracts, wait for her to cycle, complete the egg retrieval, then create embryos. We also have to find the right surrogate, do more contracts, and then wait while she does IVF. There's a good chance it won't happen in the first round. It could be two years before we're pregnant. Maybe more.\"\n\n\"Two years?!\" Matt about fell off Seamus's lap. \"Why didn't you tell me it could take so long? We should leave now!\" Matt tried to get up, jokingly but Seamus was still quick to pull him back.\n\nHis reaction made Seamus feel better. Calmer. There was no hesitation or fear. His reaction made Seamus feel like it was the natural next step. Besides marriage. Honestly, Seamus was a little more worried about that. But if they were going to move forward with a baby, then why wouldn't they be married?\n\n\"Are you going to love little Seamus more than Aidan? Because Aidan won't like that.\"\n\nSeamus cupped Matt's face and made sure he was watching as Seamus shook his head. \"Absolutely not.\"\n\n****\n\nComing back, Aidan was a whole new kid, kind of. Spending eight days away from Matt and Seamus, even though he'd been spoiled rotten in ways that neither of them could fully comprehend, had given the little guy a whole new outlook on life. He learned to appreciate the finer things in life. AKA Matt. Okay, maybe it wasn't that profound, but Aidan was marginally less clingy to Seamus afterward. And that alone was a pretty big deal.\n\nThe new team started working. Seamus made it a point to stay away from the office so Matt could establish his role as finance manager. A title that disappointed Seamus, but he also understood that Matt wanted to earn a higher title the right way.\n\nMatt came home happy. That was all that mattered to Seamus.\n\nThen things changed.\n\nMike added several more lawsuits. He claimed he was dehumanized, that he was forced to do more work than had been negotiated and without proper compensation, and that he was unable to take breaks or lunches as required by law.\n\nIf that wasn't enough, Gale and Robert Jacobson joined in. Years after the fact, they were contesting the will. They also had a lawsuit claiming they were entitled to the businesses because it was their money that funded the start up.\n\nIt was all overwhelming. Even if the cases weren't strong, Seamus had heard of cases winning with less.\n\nSeamus was on the brink of losing everything.\n\nMatt and Kase drove Hilary to Atlanta. They were gone for five days. When they got back, Matt started working late. He had an entire team now. There was no reason that he'd need to work late. In fact, he could get off early if he wanted. But there he was, working late. Some nights he didn't get home until after Aidan was down for the night.\n\nIt wasn't a big deal.\n\nExcept it made little sense. He never stayed late before when it was just him and Roberta. Now there are three additional full-time employees and Matt was pulling ten-hour days? Seamus wasn't about to question him, but it was itching something fierce just under his skin. With all the craziness, he needed to trust Matt.\n\n****\n\n\"I think Matt's cheating on me.\"\n\nThe line was silent. Seamus checked his phone. Still connected. Then the laughing started.\n\n\"Bro, you need to calm down. I know Kelly was a double douche bag but Matt is a different breed. He's good.\"\n\n\"He's been working late. When I ask him about it, he says he has a lot to do. But he's weird about it. He's definitely hiding something.\"\n\n\"Have you told him how you feel?\"\n\n\"No, because I don't want to offend him.\"\n\n\"Then show up at work when he's there late. Preface it by bringing him coffee or dinner. If he's working, then you'll know he's been telling the truth. If he's not...then\u2014\"\n\n\"Okay,\" he sighed. \"Might as well rip the Band-Aid off.\"\n\nHe gave Matt another week before he finally decided to 'swing by'. Seamus was desperate for things to be good, but he had to know the truth.\n\nIt was Thursday. Matt texted he was working extra late. Seamus didn't want to bring Aidan along in case the outcome was no good, so he found a sitter. The mom of a girl in Aidan's daycare. He needed to socialize anyway; Seamus reasoned.",
        "He grabbed Sonic on the way. Then sat in the parking lot while the food got cold. Five minutes later, he started the SUV to go back home. The whole thing was ridiculous.\n\nBut\u2014he was already there, right? Why not pop in?\n\nSeamus snatched the bag from the passenger's seat and got out of the car before he could change his mind again. His heart was racing as he marched to the office. Please be working, please be working, please be working; he pleaded.\n\nHe had his key out and ready to go, though he was torn between opening the door slowly and giving Matt a heads up and unlocking it quickly so there was no chance to hide.\n\nThe key slid in and turned the lock. Even if he wanted to go slow, it all happened so fast. Then it halted to a stop.\n\nMatt was at his desk with another man. A man who wasn't an employee. They were sitting close. Really, really close. Matt looked up when Seamus shut the door, surprised written on his face. \"What are you doing here?\"\n\nSeamus held up the bag of food as he stared at the guy sitting next to Matt. Who was he and why was here so late? \n\nSeamus stood frozen. He couldn't move. He was trying not to jump to conclusions but he couldn't think of a valid reason Matt would be at the office this late with someone who didn't work for him. Finally, he found his voice. \"I thought you might be hungry.\"\n\n\"Umm.\" Matt scratched his face awkwardly. \"Thank you.\"\n\nIt was so uncomfortable that Seamus couldn't bring himself to take the food to Matt's desk. He just stood on the other side of the room like an outsider as Matt spoke quickly and quietly to his invited guest. The guy nodded, said something in return, then shuffled some papers into an envelope, and stood up. He grabbed his jacket and passed Seamus with a nod before disappearing.\n\n\"I wasn't expecting you to stop by,\" Matt said as he turned his focus to Seamus. \"You should've called.\"\n\n\"I thought I'd surprise you. Surprise,\" he deadpanned. It was hard to joke when he was living his worst nightmare. Seamus took a few steps towards Matt and tossed the food, watching as it landed and slid across the desk.\n\nMatt's face pinched in confusion. \"What's going on? You're upset.\"\n\n\"Who was that?\" he pointed toward the door where the guy had just left.\n\n\"Christopher.\"\n\n\"Who is he?\" he asked slowly.\n\nThere was a beat of silence before Matt slumped his shoulders and leaned back in the chair. He closed his eyes and ran his fingers through his hair. \"It's not what you think.\"\n\n\"What do I think?\"\n\n\"That Chris and I\u2014\"\n\nSeamus crossed his arms. \"And you're not?\"\n\n\"Sit down, Seamus. We need to talk.\" He waited for Seamus to sit down across from him, then leaned forward with his elbows on the desk. \"Since I started working here, I've been digging through everything. I didn't know what I could find that no one else had, but I couldn't help myself. You were the one who said it was okay to go through the findings from the investigation.\n\nWell, I did, and something about it made me want to look deeper. The thing is, we were all looking in the past. I started looking at the present. Actually, I was working on accounts payable when I noticed it. There were several invoices from different companies, all going to the same post office box. I pulled all the records and noticed several things that rubbed me the wrong way. I went to the managers and inquired about the services. The car dealership doesn't receive 300 boxes of car detailing kits every month from this brand, Dough Guppies own their cars outright courtesy of the dealership, so why are they making car payments? The answer: They're not. Each business has one vendor that doesn't make sense, and all those payments are going to the same place. I needed more info so I talked to one of my classmates. His brother works for the local post office and was able to check out the owner of the PO box. I didn't recognize the name but I added it to the file. The guy from the post office gave me Ed's name. He works at the courthouse and was able to investigate a little deeper into the businesses. There's so much I don't know, but I'm pretty sure the vendors are siphoning money from you. And by vendors, I mean Kelly's parents.\"\n\n\"Kelly's parents?\" Seamus asked, completely shocked. \"How?\"\n\n\"Mike, I suppose.\"\n\n\"This just keeps getting worse.\"\n\n\"It does,\" Matt agreed. \"But honestly, I think this could be good. I don't think they tried hard to cover their tracks because Mike was behind it. Ed gave me the name of Christopher, who was the guy here tonight. He's FBI.\"\n\n\"FBI?\" Seamus perked up. This was big. \"Why didn't you say anything? Why didn't I know any of this?\"\n\n\"You didn't even want to open the manilla envelope, Seamus. And honestly, until tonight I wasn't sure where any of this would go.\"\n\n\"Until tonight? What does that mean? Where's it going now?\"\n\n\"Christopher can't tell me much but I'm pretty sure there's already an open investigation into Kelly's parents.\"\n\n\"What does this mean?\" Seamus was too afraid to assume anything. Not with the way things were going. Not with the number of lawsuits against him. He couldn't afford to be hopeful.\n\nMatt smiled. \"It means the FBI is taking over.\"\n\nHope suddenly became a reality.\n\n \n"
    ],
    "authorname": "Mrsgnomie",
    "tags": [
        "gay",
        "boss",
        "romance",
        "college"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/boss-nanny-ch-21"
}