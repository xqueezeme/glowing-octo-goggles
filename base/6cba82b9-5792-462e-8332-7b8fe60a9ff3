{
    "title": "My Voyage of Submission Ch. 20",
    "pages": [
        "In this chapter, the crew meets Lynn's two children, Richard and Alexandra, and Richard's wife, Marnie. Behavior is observed which is troubling to Beth in that Marnie seems determined to cuckold her husband. Action is taken. This chapter contains, oral, anal, lesbian, group and public sex, including a train. No STD's or COVID-19 exists in this fantasy. My thanks once again to JohnnyGalt for his editorial expertise in making this a better product.\n\n<p align=\"center\">Ch 20 - Lynn's Children</p>\n\nAt 0310, I was awakened by the change in engine sounds as the ship slowed to enter Oslo Fjord. I decided to get up and watch awhile as Fatima brought us in. I put on some clothes remaining as quiet as I could so as not to disturb anyone, though Belle woke up when I slid past her on the bed. I kissed her lightly and told her to go back to sleep. I made my way up to the bridge. Oz had the helm and Fatima was calling out commands while Bj\u00f6rn watched the progress of the ship on the plotting table. Yasmine was standing beside him listening to the commands issued and listening to the translation in her ears. Bj\u00f6rn had his arm around her and he'd occasionally bend down and give her a kiss.\n\nYasmine appeared to be content. She was smiling and snuggled up against him. At one point, he sent her to the galley for coffee. She returned, gave the other crew cups and poured their coffee, then snuggled under his arm again. Fatima was confident in her orders, not hesitant at all. She'd lost all of the slave mannerisms she'd had when she first came aboard, her guidance under Bj\u00f6rn and as Mistress to Pierre having added a world of assurance in herself. I watched for an hour.\n\nBefore going back to bed, I told Fatima I was so proud of her and how much she'd accomplished so far. She shot me a smile so bright and beautiful, it made my heart sing.\n\nI stripped and crawled back into bed, as content as I'd ever been.\n\n******\n\nWe all got up at seven. Master fucked all of our asses, finishing in Francesca before we showered and went to breakfast in the crew's mess. We sat at a table with Hannah and Angelique. Bj\u00f6rn and Fatima were still on the bridge. At some point, Yasmine came down for more coffee and some food to bring up to the crew on the bridge. While she was there, I asked Hannah to ask Yasmine how she was doing, if she was happy.\n\nHannah asked in French and Yasmine answered in the same language.\n\n\"She said she feels good, very happy.\"\n\n\"Ask her if she's been punished yet?\"\n\nHannah asked and reported that Bj\u00f6rn had punished her; he made her stand in the corner naked where everyone could watch her.\n\n\"Has she had sex yet?\"\n\nYasmine reported when she was fed and both Bj\u00f6rn and Lynn had licked her to orgasms. They were very nice orgasms.\n\n\"It sounds as if Bj\u00f6rn is taking it easy on her,\" Miranda said.\n\n\"Could you please ask her if we could check the wounds Jean-Paul left on her back?\"\n\nEveryone was wearing clothes due to the chill of the weather, so I hadn't seen her injuries since before we left London.\n\nHannah asked her and Yasmine turned and showed us her back. She still had evidence of the severe caning she'd received, including scabs still on some of the worst of the wounds.\n\n\"I approve of his handling. Yasmine still needs to be handled gently. Any physical punishment at this point would be torture,\" I said. \"Merci, Yasmine.\" I motioned for her to lower her shirt. \"Ask her if she needs help carrying the food up to the bridge?\"\n\nHannah made the request and Yasmine nodded with a quick \"Merci.\"\n\nI helped her load several plates onto two trays and carry them up to the bridge. The watch had changed except for Fatima and Bj\u00f6rn. Thomas now had the helm and the lookout watches were all different. They'd change again at 0800. I helped her pass out the food and quietly thanked Bj\u00f6rn for going easy on Yasmine at this time.\n\n\"Have to. She's not ready for more.\"\n\n\"She said the only sex she's had has been oral sex you and Lynn have given her, sir. I understand the impulse, but she does want to serve. It's part of her submission. She needs to serve you as well. What you can do to make it easier for her is let her mount you. Let her proceed at her own pace, but she'll want to be of service to you. Let her. You can still be kind and expect sex. One of the reasons she wanted submission is for sex. She said it was the only way to limit the sex she wanted was letting a Master be in charge of it, but it's still something she wants.\"\n\n\"I'll take it under advisement.\"\n\n\"Thank you, sir.\"\n\nI returned to the mess. Since Henry and James weren't on duty at the moment, I asked if I could speak to them right after breakfast before muster.\n\n\"Is anything wrong?\" Henry asked.\n\n\"Not really, but there's something I'd like you both to consider.\"\n\n\"Can we talk about it now?\"\n\n\"I'd prefer to have a little privacy. It concerns the babies.\"\n\n\"Beth, you can't leave us hanging like this,\" James said. \"What about the babies?\"\n\n\"Fine. Come out into the hall.\" We stepped out of the mess. \"I hadn't really thought of this before now, but your children are going to be half siblings. They'll have the same father. It might not make any difference in the long run, but it may mean something if there's any medical problems down the line. They may have genetic similarities. You might want to stay in close contact, at least through the first several years of the children's lives. If something does crop up, it might affect both of them.\"\n\n\"Okay. I can see where that might be helpful. I tend to think James and I will remain pretty close. We have a lot in common now, right buddy?\"\n\n\"Yeah. I can't see us losing touch. I think it would be good for Ateefah and Maahnoor as well. They understand each other in a way we don't.\"\n\n\"That shows a lot of insight, James. You're definitely growing up a lot on this cruise, both of you.\"\n\nWe returned to the mess to finish breakfast. At morning muster, I got Oz for Sailor of the Day. Not surprising since I saw him working on the bridge last night. I offered him the same deal Mac got. Take my survey and fuck me for SOD, then I'd suck him to another for the survey. He took it. I also added Frankfurter and Jerome to my survey list. I missed Fatima bringing us in to the pier because I was still sucking Jerry's cock extracting his creamy goodness.\n\nWhen we departed my room I checked the status boards in Master's cabin. He had meetings this afternoon and the day after tomorrow, moved there so we could go shopping tomorrow. Lynn's children were coming in this afternoon, Tuesday the thirteenth, Delphine on Friday. The wedding was scheduled for Saturday. Master, Bj\u00f6rn, and Edgar were going to the National Theater on Thursday night with their dates.\n\n\"Edgar and Fatima won't be having as much privacy as they might like if four other people are going on their date,\" I pointed out.\n\n\"They won't be sitting with us. I got them loge seating. They won't quite have the privacy to fuck, but they should have enough for almost anything else.\"\n\n\"Who's going to pick up Lynn's children from the airport?\"\n\n\"Lynn, Bj\u00f6rn, Yasmine, Manuel and four security guys. From the airport, they're going to meet some of Bj\u00f6rn's family to discuss aspects of the wedding. What have you got going on this afternoon?\"\n\n\"Since you're going to be busy, I thought my three sister slaves and I could enjoy some playtime since we have your permission to cum. I was thinking some double penetrations for all was in order.\"\n\nMaster laughed. \"Try to save some energy for me later.\"\n\n\"I won't promise anything, but you know us. We're all pretty much sluts now.\"\n\nHe laughed and we went to lunch, meeting up with my sister slaves in the mess. When I told them what I thought we could do this afternoon, they were as enthusiastic as I was. It wasn't often we could have unrestricted sex.\n\nWhile Master dressed for his meeting, we went into his playroom to pick out what we wanted to use this afternoon. Miranda grabbed two strapless vibrators, but I pointed out that one charge wasn't going to be enough for four of us to get well fucked, so she grabbed two more. We also grabbed a couple double headed dildos for some tribbing and a few other toys.\n\nAfter Master left, we took over the bed where we spent the next four and half hours having some serious fun. We started with Miranda. Francesca and I did the double penetration while we all laid on our sides, me in her cunt so I could face her and kiss. Belle could only move around the loose tangle on the bed and lovingly stroke various and sundry parts of all of us, greatly enhancing the pleasure we got. After Miranda got her turn, it was Francesca's. While I took her ass, Belle her cunt and Miranda did the stroking and touching, although she was fairly exhausted by the time we'd finished with her. Belle was the next to go, with Miranda fucking her ass and Francesca her cunt while I did the touching. Since neither Miranda's or Francesca's asses were busy at the moment, I used small hand held vibrators on their spasming assholes. Oh, boy, did they have a good time. It was finally my turn and Miranda fucked my cunt and Belle my ass while Francesca did the fourth man honors.\n\nBy the time it was time for tribbing, we'd all had more than a dozen orgasms. Miranda and I started tribbing first, the double headed dildos in each of us as we rubbed our cunts together. Francesca tribbed with her slave. We switched again after twenty minutes and Francesca and I were going while Belle and Miranda fucked each other. I finished with Belle which is what I was doing when Master returned from his meetings. By this time, each of us had cum many, many times. If you've ever smelled a whorehouse, you might have an idea of what Master walked in on.\n\nThe bed was wrecked, sheets with cum stains all over them and torn out in tasteful tangles as we'd thrashed around. Since I usually kept a close eye on Master's cock, I saw him get an erection as he watched. Despite his hardness, he shook his head and went to enter notes from his meetings as we continued fucking.\n\nI finished with Belle and said, \"Before we change the sheets, Master, would you like to add your own cum stains to the nice mural we've got going?\"\n\nMaster laughed and stood up. Seeing he was going to join us, I jumped up to help him undress. When he was naked, I led him to the bed.\n\n\"Why don't you start with your pregnant wife, sir, and if you've got any more left afterward, you can fuck someone else.\"\n\nHe fucked Miranda doggy style and the entire time he did, I nibbled on his nuggets until he grunted and flooded Miranda's cunt with his seed. I took care of his cock while Belle lapped at the cum dripping from Miranda's well fucked pussy. I kept sucking him until he had another hard on. He used it to fuck Francesca and Belle, alternating between them, fucking until they orgasmed, then switching. He lasted a good long time before Francesca got another load of cum. This time, Belle took care of our Master while I addressed Francesca's saturated cunt. We changed the sheets when we finished.\n\nIt was time for dinner and and it was served in the dining room, Master feeding Miranda. She squirmed in his lap as he fondled hell out of her. He gave her permission to cum every time. Did he not want to punish her anymore now that she was pregnant. Of course, punishment didn't have to consist of corporal punishment. Perhaps he really would miss her once she was gone and being kind as a consequence.\n\nHannah confirmed for us the police would have a gate at the end of our pier restricting access to it and that our bodyguards could go armed, but Norway asked that the police be notified anytime someone left the ship with weapons. She handed Edgar ID tags she said the bodyguards should wear when they left so the police wouldn't arrest them if they noticed a concealed weapon.\n\n\"It's better than nothing,\" Edgar said.\n\n\"Has anyone heard from Lynn?\" I asked. \"Did her family make it okay?\"\n\n\"The plane arrived on time,\" Hannah said. \"I haven't heard anything since they told us they were waiting for them to clear customs.\"\n\n\"They were meeting with Bj\u00f6rn's sister,\" Master said. \"Family business might be more important now.\"\n\nAfter dinner, Master still had work to do. He needed to finish entering notes from today and plan for his meetings Thursday as he'd be busy tomorrow. He said to give him until ten, then we could rejoin him in bed. The women took the opportunity to have the lower spa declared a man free zone so we could mingle openly with the freed slaves. The chill outside air made the spa even lovelier to soak in. I took the time to tell Ateefah and Maahnoor the same thing I told their husbands.\n\n\"One of the things you both need to consider that we haven't talked about so far, is your children are going to be half-siblings, having the same father. It might be important to remain in contact as the children grow up. Not only might they like to know they have a brother or sister out there, but if a medical issue runs in the family, if it's discovered in one, it might affect the other as well.\"\n\n\"What should we tell them about their father?\" Ateefah asked. \"Do we tell them what happened to us?\"\n\n\"I'd tell them that he did nothing more than put them in your bellies, and the men who married you are the important fathers in their lives because they chose you and chose to be their father. As to whether you tell them about your slavery, I'd say Maahnoor will have to tell them at some point, simply because of the brand. Some day, your child might see it and want to know why you have one. The tattoo Ateefah has may need to be explained as well, but you could have a tattoo removed. It depends upon whether you allow your pubic hair to grow to cover it. I don't think you would ever say what your slavery consisted of. Merely say that you were forced to do things that were so bad, it's difficult for you to speak of it.\"\n\nThey nodded thoughtfully. \"Thank you.\"\n\nAround nine, Lynn and the others came back. Lynn was hysterical and nothing either Bj\u00f6rn or Manuel tried to tell her was calming her down in the slightest. Since they had to pass the spa, we became aware of the commotion.\n\n\"What's going on?\" Miranda asked.\n\n\"We took them to their hotel and were talking to Herdis about the wedding as we ate supper there after introductions were made, and about a half hour into the supper and the discussions, Bj\u00f6rn kissed Yasmine,\" Lynn said. \"It was fairly innocent as those things go. She didn't speak enough English to really understand what was going on and he was just calming her. We really hadn't explained much of anything about Yasmine and Manuel yet, about their status and relationship to us. I think Alexandra assumed they were just some of the wedding party. Anyway, Alexa saw the kiss and asked why I was marrying a man who would openly kiss another woman in front of me? Hadn't I had enough infidelity with their father? I told her Yasmine was his slave. 'What do you mean, his slave?' she asked. I said, 'His submissive. I have some too. That's who Manuel is to me, plus I have a woman as well.' Without another word, she rushed out of the restaurant. She's not answering her phone, calls or texts. She's not answering her door if she's gone back to her room. I don't know if she's wandering around the streets, or even if she's going to attend the wedding?\n\n\"We explained more about the situation to Richard and Marnie and while they still have questions, at least they're speaking to me. I can't talk to Alexa at all because we can't reach her and don't know where she is?\"\n\n\"Does she know anyone or have anywhere else to go in Oslo\" I asked.\n\n\"Not that I know of,\" Lynn said. \"Richard said he'd call me if he heard from her, but she's not responding to him either.\"\n\n\"If she has no where else to go, she'll have to show up at her room eventually,\" I said. I got out of the spa and put on one of the warm robes Master kept by the spa. \"Bj\u00f6rn, I need to borrow Yasmine, and Fatima, I'll need Fatima's assistance to translate for Yasmine. Bj\u00f6rn, tell Yasmine to obey Fatima until she gets back to the ship. Also, ask Edgar to meet me in Master's cabin.\"\n\nFatima got out of the water to join me and with Yasmine and Lynn, we went to Master's cabin. He looked up from his work and I told him I needed to leave the ship and go to The Thief to talk to Alexandra and why. I started dressing as I sent Fatima to put on clothes, telling her to return when she was dressed. Edgar arrived. He hadn't been one of the security people sent with Lynn and Bj\u00f6rn to the airport, so he needed to be filled in as well.\"\n\nLynn was explaining more of what happened and that she had no clue where Alexa was. Master was rightfully concerned as well. Oslo was a nice, safe city as cities went, but it wasn't without its dangers either.\n\n\"Are you sure she's at The Thief?\" Master asked. \"Perhaps we need to send out search partiies.\"\n\n\"If she isn't now, she will be soon. She's been up for hours, just had a long flight and is probably suffering from jet lag. She's in a city she doesn't know after dark. I suspect she's in her room and refusing contact, but we'll figure it out. If I can't get a response from her, we'll notify the police, but for now, just get me there.\" I looked at the map of Oslo on one of Master's screens. \"Where is The Thief?\"\n\nMaster pointed it out. It was on a little island in the harbor connected by one road bridge and a foot bridge to the city proper.\n\n\"Edgar, in addition to however many people you need to send with me, could we station a man on both those bridges to keep an eye out for a young woman by herself. Perhaps Lynn could send them a picture of Alexandra.\"\n\n\"Aye, we'll take six then, four with you and two for the bridges. Send me a text with her photo on it, Lynn, and I'll ensure the lads get it.\"\n\n\"Since it might take a while, send six fresh men, not the ones who went to the airport. Lynn, I'll need Alexa's phone number. I'm only going to go with Yasmine and Fatima. I'm fairly confident she'll speak to a couple women. Lynn, this is one of the reasons you might have wanted to tell your family what was going on ahead of time. Slave was probably not the best word to use when telling Alexa about your situation. I know it's what we use around each other, but it doesn't have good connotations in a public who's not familiar with the other aspects of the word. Submissive was better, but you'd already said 'slave', so she quit listening to what you were trying to say. You can continue trying to contact her. Send a text saying someone is coming to explain what's going on, then if she wants to go home, we'll send her back.\"\n\nEdgar made arrangements with Palmer, Buck, Ethan, Jake, Shed, and himself to go. He told Ethan to bring a tender round the back in ten minutes. Fatima came back dressed for Oslo in October. Yasmine was already dressed. Lynn reiterated Bj\u00f6rn's orders to Yasmine to obey Fatima's instructions until she returned to the ship, Fatima translating to Arabic. Master told me to be careful and I said I would. Edgar went to gear up and in ten minutes, everyone met at the back of the ship. He gave everyone the security badges they had to carry if they were armed. We loaded up on the tender and made our way over to the island where The Thief hotel was located. Ethan and Jake tied the boat off and went to the bridges while the rest of us made our way to Alexandra's room.\n\nI knocked on Alexa's door. No answer. I knocked again, saying, \"Alexandra, if you're there, open up. I need to talk to you. It's important you know what's going on.\"\n\n\"Go away. I don't want to talk to anyone.\"\n\nAh, progress. She was there.\n\n\"You need to talk whether you want to or not.\"\n\n\"Fuck you. I don't have to do shit.\"\n\nMouthy bitch. I saw the peephole in the door. \"Look out of the peephole,\" I said. I waited a few seconds then started taking off my clothes, until I was bare ass naked.",
        "\"What the fuck are you doing?\"\n\n\"I'm going to stand out here naked until hotel security comes up here. Then I'm going to tell them you have my clothes and you won't let me in to get them. I figure they'll let me in long enough to see if my clothes are in there, but you will end up speaking to me.\"\n\nI handed Ethan my clothes and told him to watch the stairs and elevator. I'd call him when I needed the clothes. He grinned and left with the other three guys.\n\nAlexa cracked the door but she still had the security bolt on it. \"You're fucking crazy.\"\n\n\"Let me in and we can talk.\"\n\n\"Why should I talk to you?\"\n\n\"Because you only think you know what's going on and you don't know fuck all about anything. Fatima, tell Yasmine to remove her clothes.\"\n\nFatima gave the order and Yasmine removed her clothes, obeying. \"Tell Yasmine to turn around and show Alexandra her back.\"\n\nAs soon as Fatima gave the order, Yasmine turned and Alexa gasped. The scars were still quite dramatic.\n\n\"Did Bj\u00f6rn give those scars to her?\"\n\n\"No, he's trying to save her from more scars like that. As I said, you don't know shit, so open the door and we'll explain what's happened.\"\n\nAlexandra closed the door to slip the security lock and she let us in. We ducked inside and I pointed out the brand on Yasmine's buttocks before telling Fatima to return her clothes and tell her to put them on. I had both of them sit on the bed.\n\n\"Do you know why I've got four security guards with me and why Lynn and Bj\u00f6rn had four to pick you and Richard up at the airport?\"\n\n\"Mom said there'd been an attack on Congresswoman Ward's car in France.\"\n\n\"Yes, and we think they were trying to take female slaves, including the Congresswoman, although she might have been ransomed instead.\"\n\n\"Then why does Bj\u00f6rn have a slave himself? And why does mother say she has slaves as well.\"\n\n\"Slave was a poor choice of words by your mother. Submissive would have been a better choice. Before we continue this discussion, could you please text your mother and let her know you're okay. She's worried sick,\" I said. I waited until she sent the text. \"If it's all the same to you, I'll put my clothes back on, because I'd like Richard and Marnie to hear the rest of this discussion as well, but I'll leave my clothes off if I have to.\"\n\nShe nodded and I called Edgar and told him he could bring my clothes and recall Ethan and Jake. He knocked few seconds later and I opened the door to let him in. He handed me my clothes and when I was dressed, I asked Alexa to call Richard and Marnie to come over for the explanation. She did so without further argument.\n\nAs soon as they arrived, I started to explain everything.\n\n\"I'm a doctoral candidate writing my thesis on submission. In the process of studying submission, I discovered I was one. I joined this cruise as a submissive to learn more about it. I've also learned there is a certain percentage of the population who are naturally submissive and Dominant. In fact, I've developed a survey which helps me determine Dominant and submissive tendencies in someone. You've probably seen evidence of this yourself, though not to the extent I'm one. You have charismatic leaders who seem to be able to get anyone to do anything, and people who will willingly do whatever anyone else asks them to do. By Dominance and submission, I'm referring to things akin to BDSM as touched on in the book and movie, Fifty Shades of Gray.\n\n\"It was after I was chosen for the position, I met your mother. When I met her, she was very unhappy and depressed. My Master was extremely busy getting ready for the cruise. Your mother was dining in the hotel restaurant and saw me eating alone. She noticed my 'choker',\" I pointed to my collar,\" and made comment on it. I told her it wasn't a choker, it was a collar and I now belonged to a man for a year as his submissive. She was intrigued and asked more about it. She read my slave agreement. After reading it, she asked if I'd let her spank me and have sex with her if my Master permitted. I checked with Master and he agreed she could. This is how I discovered your mother was a Dominant, though she's since taken my survey and she's actually highly dominant and naturally so, without any training or experience at all.\n\n\"She was invited to go along because Master couldn't always take me places. During the course of the cruise, our nurse, Sherry, a former Navy Nurse, determined she was submissive. She was engaged to be married to our former Navy Corpsman and Physician's Assistant, Manuel, the man with your mother today. He is also somewhat submissive himself and could not be Sherry's Dominant, but he didn't want Sherry submitting to a man due to their relationship. Your mother became the Dominant to both of them. Sherry was willing to break off her engagement she wanted to submit to someone so much. This was before Lynn became engaged to Bj\u00f6rn, or even really started dating him, so her Dominant/submissive relationships were already established before her engagement.\n\n\"As I'm sure you knew, your mother's marriage wasn't particularly pleasant, involving lots of infidelity before your father left her for another woman. She is now amazingly happy and energized by her new life. She didn't expect to fall in love with Bj\u00f6rn and figured she was just around for the duration of the cruise. Bj\u00f6rn was also previously married, but his wife didn't enjoy the isolation engendered by his being an officer in the Norwegian Navy and left him. When they decided to marry, they felt traditional marriages hadn't worked for either of them before, so were willing to try something different. Bj\u00f6rn didn't mind if his fianc\u00e9e had two submissives having sex with her in addition to himself, even if he couldn't have sex with them himself due to the agreement they'd reached with Lynn which prohibited sex with other males. He knew about it and knew she would have less reason to be upset if they were apart from each other, nor did it restrict the sex he had with her. They often have sex with your mother together.\n\n\"That brings us to the next point. During this voyage, we've run across and freed several actual involuntary slaves. Fatima, sitting on the bed there was the first. She was captured by a North African warlord named Mahmoud, who is apparently a major human trafficker. When he captures women, he trains them as sex slaves. Four weeks if they're not virgins, and six if they are, then he brands them with a hot iron and sells them all over the world. Fatima wasn't a virgin, so she was sold after four weeks of training in Venezuela to a man who lived in Suriname. He regularly beat her to get an erection. Her back is as scarred as Yasmine's, although the scars aren't as fresh. Yasmine was the last one we freed who is still with us. She was taken in Tunisia, trained to be sexually pleasing for six weeks, her virginity saved for her first owner. He was a bit of a sadist and ensured she was beaten and raped frequently, often by more people than just himself. Those scars on her back are from him.\n\n\"However, their involuntary slavery isn't who they are underneath. Fatima is actually a Dominant, and after it was determined she had shed the trappings of her actual slavery, actually took a submissive for herself, our chef, Pierre.\n\n\"Yasmine, even though she never chose her involuntary slavery herself, is actually a submissive. Despite being freed, she wanted to have a Master, someone who was kinder and gentler than her previous bastard of an owner. Yasmine was afraid that if she didn't have the control of a Dominant who would govern her, she'd eventually resort to prostitution or find some other cruel bastard to submit to.\n\n\"Bj\u00f6rn was the only clearly Dominant male on our ship other than my Master, who already has four submissives. He could not give Yasmine the attention and emotional support she would need as a freed slave. I spoke to Bj\u00f6rn about accepting Yasmine as his submissive because I knew he would be kind and understanding, giving her what she wanted without cruelty. After speaking to Lynn about it, he accepted her submission. Your mother realized having two submissives herself she was having sex with, denying Bj\u00f6rn the same would be hypocritical, so she readily agreed he should accept her.\n\n\"Theirs is an unconventional relationship, I agree, by your usual standards, but it's a very loving and emotionally strong one. There is no jealousy; no one is sneaking around each other's back hiding what they're doing as happened in Lynn's previous marriage. In a sense, both Lynn and Bj\u00f6rn are helping three other people live their true natures in a loving and caring way. Bj\u00f6rn is protecting Yasmine from something much worse. You may think it's all whack and crazy as hell, maybe even perverted, but I can assure you, as weird as it might seem, it's a very loving and beautiful relationship and I consider everyone on board to be like my family.\n\n\"Edgar here is the one who saved your mother and me and a few others when we were attacked in France. Buck over there is another, as Bj\u00f6rn was helpful in keeping us calm. If you spend a few days around us without making judgments, you'll see what I mean. You may not approve of polyamorous relationships, but don't judge your mother by what you think you know, judge her by what you see as you interact with her day to day.\"\n\n\"So you've had sex with my mother?\" Alexandra asked.\n\n\"I've had sex with everyone aboard at one point or another except Yasmine. She was just cleared to have sex with others before Bj\u00f6rn accepted her submission. I have sex with whoever my Master wants me to have sex with if they want sex with me.\"\n\n\"Can I ask Yasmine if she's voluntary?\" Alexa asked.\n\n\"If you speak French or Arabic. She doesn't speak English yet. Fatima can ask her in Arabic, if you'll trust her interpretation. I'll tell you now that since they have a shared, very horrific experience together, Fatima would never agree to Yasmine being used as a submissive if she weren't wholly in agreement. In fact, another released slave named Sahar, would kill Bj\u00f6rn if Yasmine was mistreated. She has a pathological hatred of slavers and human traffickers. She refuses to ever again have sex with a man after her slavery, though I doubt she is naturally a lesbian.\"\n\n\"I speak French,\" Marnie said. \"I can ask her.\"\n\n\"Go ahead.\"\n\n\"Yasmine, avez vous, volontairement soumis \u00e0 un homme nomm\u00e9 Bj\u00f6rn comme son esclave?\"\n\n\"Oui, c'est mon ma\u00eetre.\"\n\n\"Il te va bien?\"\n\n\"Tres bien.\"\n\n\"Tu l'aimes?\"\n\n\"Je le connais \u00e0 peine, mais c'est mon ma\u00eetre.\"\n\nMarnie said, \"She says she voluntarily submitted to Bj\u00f6rn as a slave, that he's very good to her. When asked if she loved him, she said she barely knows him, but he is her master.\"\n\n\"I know you saw Bj\u00f6rn kiss Yasmine which is what upset you initially,\" I said, \"but Yasmine needs a lot of positive affection to make up for what was done to her. Your mother understands this and if your mother doesn't care, why should you? Give them the benefit of the doubt for now. Can we pick you up tomorrow for your dress fitting? If you watch them for a couple days and you think you see a problem, discuss it like an adult. Don't run off, scaring your mother half to death. We've seen enough young vulnerable women who were taken as slaves, it scared her what could happen to you.\"\n\n\"Come on, Alexa. Don't be a butthead,\" Richard said. \"I know it's strange, but Mom is a hell of a lot happier now than she was back in May. She's glowing. Different strokes, right?\"\n\n\"For what it's worth,\" Edgar said, \"Even though it's not what I ever expected in a permanent relationship, despite Fatima having a male submissive she's having sex with, we're about to go on our first date with an eye to something more.\"\n\nFatima smiled up at him. Alexandra caught the look.\n\n\"Fine, pick me up. What time?\"\n\n\"Edgar?\" I asked.\n\n\"We've two limos coming here at ten. We'll be bringing both tenders over with everyone going out. Expect lunch and lots of shopping during the day. Eight security guys for that many going out, plus some of Smitty's guys on standby.\"\n\n\"Can we come to the ship?\" Richard asked.\n\n\"Yes, but you have to come by boat. Even though we're at the pier, for security reasons, we haven't put a gangway down and there's a couple police manning a barricade at the base of the pier. The attack on the Congresswoman's car has got us all on edge. While we have our suspicions, we don't know squat. The people who might have known were murdered and the others were just hired criminals.\"\n\n\"I'll see you at ten then,\" I said. \"I'm the maid of honor, plus I have some other shopping I want to do.\"\n\n\"When do I get to meet your Master?\"\n\n\"Tomorrow. He's paying for everything. He's walking your mother down the aisle.\"\n\n\"Isn't Joshua married to the congresswoman?\"\n\n\"Yes, and she's also his submissive, my sister slave. Obviously, that needs to remain secret to protect her career. Please don't hurt her by exposing this information.\"\n\n\"Wow!\" Richard said. \"I can't believe my mother is a bi-sexual Dominant and I'm going to meet a Congressional submissive.\"\n\n\"Life takes some strange turns. We'll see you tomorrow. You might want to tell your Mom you'll see her tomorrow at ten. Thanks for listening to me. We can go now, Edgar.\"\n\nWe left the three of them in the room in a somewhat dumbfounded condition.\n\n******\n\nLynn was waiting in Master's cabin, ecstatic, when we got back. My three sister slaves were naked. It didn't make any difference if Lynn saw us nude. \"What did you do? What did you say? How did you get her to talk to you?\" Lynn asked\n\n\"She popped her clothes off in the hallway and said she was going to stay there until hotel security came and tell them Alexa had her clothes in the room and wouldn't give them back. She figured they'd let her in considering her starkers condition,\" Edgar said. \"Damndest thing I ever saw. Alexandra finally let the three women in, and Beth eventually got her clothes back so she could speak to all of them.\"\n\nMaster laughed. \"You don't have a shred of modesty left, do you?\"\n\n\"I might still have a shred, but it isn't much anymore, sir,\" I agreed. \"They know Miranda is also your sub and you're my Master. I expect they'll want to spend some time on the ship at some point in the next few days. They'll call for transportation.\"\n\n\"We're not expecting a problem from that are we?\"\n\n\"I don't think so, sir. At this point, they just want to know more, to try to understand what's going on with their Mom. It's all new to them. They'll be ready to go at ten tomorrow.\"\n\n\"Sweetie, the next time your Master lets you, you can have Sherry and Manuel both for anything you want to do for two hours.\"\n\n\"Thank you Mistress Lynn.\"\n\nFor the first time in a couple days, Master thoroughly fucked me. Even better, he allowed me to cum.\n\n******\n\nI got Sahar for Sailor of the Day at muster the next morning. She'd completed the skyscraper scenario. No one else had done it even as a team of two. I gave her a super orgasm, again wishing she could talk about what had happened to her, but knowing she wouldn't. As we got ready to leave, Hannah said I had a package at the corporate office in Oslo.\n\n\"Do you want to pick it up or have it messengered here?\"\n\n\"Messenger it. I'm pretty sure I know what it is. I ordered something for the freed women in London and had it sent here. We wouldn't want to open it in the limo. It would be too embarrassing.\"\n\nMaster smiled and stroked my cheek.\n\nEach of the limos could hold ten people in back and two in the front. With every one of the freed slaves but Yasmine going, plus eight bodyguards, and Lynn's three, we needed every seat of them. We took both tenders over to The Thief, landing in two separated places on the island, then walking to where the Limos were parked in front of the hotel. Ethan drove our limousine with Al riding shotgun, Thomas and Jake in the back. There was Master, Miranda, me, Lynn, Bj\u00f6rn, Alexandra, Richard, and Marnie in our limo.\n\nDriving the second one was Edgar, Buck in the shotgun seat, Henry and James in the back for security with passengers Fatima, Farah, Maahnoor, Ateefah, Sahar, Sherry, Francesca and Belle. Sahar was also secondary security. Edgar was taking a chance; she was armed and carrying her ID tag, but he told her she could only shoot if someone was shooting at her. The reason I say secondary is Edgar expected her to shop too.\n\nThere were two more SUV's with four of Smitty's guys apiece in them at some distance away, but close enough they could get there within ten minutes.\n\nWe were going to the Storo Storsenter Mall outside the city center, one of the largest malls in Oslo, which is where Herdis had ordered the wedding dress and bridesmaids gowns. There was a men's tuxedo shop next door for renting or buying clothes for the men. The groomsmen had already picked their tuxedos up, but Bj\u00f6rn, Master and Edgar had to get theirs. Master owned a tuxedo, but it didn't match the other wedding party tuxes so he was renting one. He was buying one for Edgar to attend the National Theater. There was also a lingerie and maternity clothing store in the mall as well as other shops and quite a few restaurants.\n\nWhen Alexandra, Richard and Marnie got into our limousine, Lynn introduced us to them.\n\n\"Alex, Marnie, Richard, this is my employer, Joshua Greenbriar, the owner of the ship we're sailing on, his wife, the Honorable Representative Miranda Ward-Greenbriar, my other submissive, Sherry, who's one of the bridesmaids. The two security guys in the back with us are Thomas and Jake. The rest you met yesterday. Our driver is named Ethan and the other one up front is Al. Everyone, this is my eldest child, Richard Farber and his wife, Marnie, and my youngest, Alexandra.\n\n\"Beth said that you were submissive, Ms. Ward. Is that true?\" Richard asked.\n\n\"It's true. Joshua is my Master as well as my husband. Because of politics, we don't advertise that fact. My collar looks more like a necklace than the one Beth wears, but I have a piercing on my vagina, with a little gold plaque hanging from it proclaiming I'm owned by Joshua.\"\n\n\"You don't mind sharing your husband with three other women?\" Marnie asked.\n\n\"If I'm being honest, I feel like he's being shared with me. He asked Beth to marry him. Beth refused saying I was a better match for Joshua as a wife. I would have had to give up being his submissive if anyone else were married to him. She recognized the only way I could remain his is if he married me. As to it being three other women, I share with more than that. I have no control over who Master has sex with. He has control of mine. Other women have shared his bed, mostly when I'm back in Washington.\"\n\n\"Don't you get jealous?\" Marnie asked.\n\n\"No, not at all. Perhaps it's part of my submissive nature, but I feel I'm there for him, not the other way around.\"\n\n\"Is that fair that he gets to have sex with other people while you're in Washington and you don't?\" Alexa asked.\n\n\"I have sex with other people. It's at his direction, but when I became a submissive, I developed a very high sex drive. I would be miserable if I weren't allowed to have sex while I was apart. He sees to it I have sex every day. Before becoming married, I was lucky to have sex once every six months. It was almost impossible to arrange to have sex when I was a single woman from a conservative state. The Republican Party wants us to espouse family values, despite the fact half of them are sleeping around with other people; aides, interns, lobbyists, prostitutes. I made the effort to be chaste, mostly because it was a pain in the ass not to be, but I can't say I was really happy. It even affected my sister, who didn't feel she could come out as a woman loving bisexual because of me. She dated men to put on a front, but liked women. Master arranges sex for me so I can be happy. My physical trainer, gardener and maid are all his employees.\"",
        "\"You don't strike me as submissive,\" Richard said.\n\n\"With anyone other than my Master, I wouldn't be. Otherwise anyone could come up to me and demand I fuck, or sign some damn House bill, or become corrupt and take their money.\"\n\n\"Being submissive is not the same as being wishy-washy or a pushover,\" I said. \"Prior to my submission, I considered myself independent, self-motivated, ambitious, even stubborn. Except for or in spite of my submission, I'm still all of those things. I still want to finish my degree, get a job, progress in my field. I don't want to live off Master. I didn't want a sugar Daddy to take care of me. I don't let other people push me or the people I love around.\n\n\"There's a reason I came to your door last night when you had difficulties with your mother. I care deeply for her and don't want harm to come to her, even from her family or friends. I feel very committed to those people who deserve my commitment. That includes my Master, who I love very much, and my sister slaves. Everyone on board that ship feels like family to me. Everyone of the women we've freed are like my sisters. I bleed for what they went through. They didn't choose what happened to them the way I chose my life.\n\n\"I think to some extent, and I don't mean this in a blanket way, submissives are partially driven by a sense of service. Sherry is a nurse, Manuel was a combat medic, I want to be a psychologist to help people, Miranda is a representative of the people. I also know a former Army Ranger who's currently a firefighter, and a former seminary student. I know of a police officer, a lawyer, a housewife. One person I interviewed was in submission to a husband and wife both. She slept at the foot of their bed in case either of them needed her. And submission is no reflection on masculinity. Submissives aren't necessarily sissies, though they could be. That's not to say Dominants can't be motivated by service either. Master has done some marvelous things which make me very proud of him.\" He hugged me and I turned and smiled at him. \"In some ways, our bond is perhaps more powerful than marriage is. In return for Miranda surrendering her will to Master, he in turn has to see to her needs as well. He provides for her by proxy what he can't provide himself. She still has sex at his direction, but she has sex.\n\n\"Every one of the submissives is having more sex now than they ever did before they became submissive. Miranda told you how often she was having sex. I was a normal student. I'd had seven sexual partners in high school through graduate school before my submission, only four of whom I slept with. I'd never had sex with a woman, hadn't considered it before. But as much sex as I'm having and enjoying now, sex isn't what defines my relationship. It's a wonderful byproduct of my service to Master. All my sex is at his direction and he can give it, or withhold it. I can't masturbate without his permission. I used to masturbate much more frequently before I became submissive. I don't need it as much, granted, because I get other kinds of sex more, but since I became submissive, the only times I've masturbated is for the pleasure of people watching me.\"\n\n\"You mean you'd masturbate in front of everyone?\" Marnie asked.\n\n\"If told to, I would lick your cunt right now if you and Richard allowed it. Your bodies are still your own. I won't rape you on command. Anything else my Master allows me to do, I do. I mentioned the survey I developed which helps me determine if a person has submissive or Dominant traits. I have standing instructions to provide oral sex to anyone who takes it if they want it. If you take it, the offer extends to you. You can decline or accept as you choose, but the offer stands until Master withdraws it. You don't have plans to withdraw it, do you, Master?\"\n\n\"No plans,\" Master replied, smiling.\n\nJake said, \"And no one on the ship gives better oral sex than Beth. It will change your life.\"\n\n\"Amen,\" Miranda said.\n\nI smiled at them.\n\n\"What exactly does my Mother do for you, Joshua?\" Alexandra asked.\n\n\"You mean beside keeping my Captain happy?\" Master laughed. \"As you might expect, being married to a congresswoman, almost anything I do would reflect on her. So if I were to say, snap a leash on Beth, and lead her around the mall today, that might cause serious eyebrow raising in Washington. But if I have Lynn lead her around the mall, I might be totally ignored. I get to enjoy the spectacle and any consternation it causes, without any repercussions falling on Miranda. No one can do the same to Miranda, which is why it's nice to have more than one.\"\n\n\"You'd seriously lead someone else around on a leash?\" Marnie asked.\n\n\"Not me, Lynn. Or you, perhaps.\"\n\n\"Me?\"\n\nMaster pulled a leash out of his briefcase. \"Why not you?\" He looked at Alex. \"Or you,\" At Richard. \"Or you. I do have three submissives other than my wife, who can''t be leashed for any reason in public. It would be easier if one person did not lead all three as they may have to go in different directions.\" He pulled out two more leashes. \"Our bodyguards have to guard bodies and keep their hands free. I can't have them fiddling with leashes. Lynn has a number of items to purchase today. I can't have her and a submissive trying to head in two different directions. Nothing would get done. You're the best choices, really.\"\n\n\"What would I say to anyone if they said something?\" Marnie asked. Interesting, not saying she wouldn't do it, but how it would work if she did.\n\n\"Since most people might speak to you in Norwegian, you might not have to say anything. If they do speak English, I guess you could say the truth. The woman on the other end of the leash is a submissive who becomes very sexually aroused at being led around on a leash. Or something simple, like she lost a bet.\"\n\n\"Is that true?\" Marnie asked me.\n\n\"Which part?\" I knew, but I wanted her to say it.\n\n\"That you'd be sexually aroused being on a leash?\"\n\n\"Very true. If I were wearing underwear, they'd be damp. I don't wear any. I frequently feel my arousal dripping down my legs instead. Since Miranda has something dangling between her legs, I'm sure she can too. When our voyage first started in the summer, I was always naked on the ship. I always had a leash with me. If I needed to go anywhere, like the crew's mess to eat, someone had to take me on my leash. I could stop anyone, ask them to take me where I needed to go, and their reward for interrupting what they were doing, was to caress my naked body for a minute. Often, that was enough to stimulate me to orgasm. Punishments were conducted in front of the crew. Often sex was too when I was awarded to someone for a good job. Over fifty percent of my orgasms probably occurred in public, with someone or many someones watching. It was embarrassing, humiliating, but still very arousing.\n\n\"As we've acquired the freed slaves, we've had to tone down the public behavior. As they were frequently mistreated in the same way we volunteered to be treated, we didn't want them to feel compelled to do the same things, to go naked, be punished, to have sex with anyone. We moved the lewd activities behind closed doors. It's less arousing to do it that way. With the colder weather, we can't be nude anyway, but when we go to the tropics again, we may be able to. All of our freed slaves now realize what the submissives do has nothing to do with them. They're free to do what they want without consequence. They won't be beaten or harmed anymore. About the only restriction placed on the crew is they can't ask any of the freed slaves for sex. They might still find it psychologically difficult to refuse. Fatima, even though she's now operating the ship and has a submissive of her own, had to ask Edgar on a date. Edgar still wasn't allowed to ask her.\"\n\nThey were all silent. Master handed Alexa a leash. \"You seemed to have bonded somewhat with Beth last night. Why don't you supervise Beth today? Francesca is fairly tall, so we'll need someone taller leading her. Richard why don't you take her?\" He handed him a leash. \"That leaves Belle for you, Marnie. Both Francesca and Belle are in the other car, but we'll park together. Snap your leashes on them and lead them into the Mall. Follow Bj\u00f6rn. He knows where we're going.\"\n\nThe three of them looked at each other, but they didn't refuse. It's possible, it still hadn't hit them yet they'd be leading another person around a large urban mall on a leash. It would.\n\nMaster had one more trick to play. He pulled three Lushes from his briefcase. He handed one to me and told me to insert it and turn it on. I pulled up my skirt in front of everyone and put it inside me and pushed the button on the tail which allowed it to operate. He handed Alexa the remote for mine.\n\n\"This is the remote for the vibrator she just put in her pussy. Feel free to play with it as we're shopping. It's actually quite amusing to watch Beth squirm when you turn it on unexpectedly.\"\n\nMaster handed the other two to Richard and Marnie with their remotes. He leaned back, the picture of calm and cool. \"After you've leashed your submissive, tell them to insert this and turn it on, then have fun today.\"\n\nI jumped when Alexa turned it on. Turning to her, I saw her smiling. I smiled back. She turned if off. No point in killing the batteries before we got to the mall.\n\nI kissed my Master. \"Do I need permission to cum, sir?\"\n\nHe asked Alexa. \"Would you like control over her orgasms, Alexa?\"\n\n\"What do you mean?\"\n\n\"I can either give Beth blanket permission to cum every time she needs to, or I can give you control. She would need to ask for your permission when she needs to orgasm. If you don't give her permission, and she cums anyway, she'll be punished later. Ten swats for each time she disobeyed.\"\n\nNo point in not educating Lynn's children on what she did all the time.\n\n\"I'd like to control them.\"\n\n\"Very well. Beth, ask Alexandra's permission if you need to climax. Obey her in this one matter. Safety and security takes precedence. Do what your bodyguard is telling you over Alexa.\"\n\n\"Yes, Master. I'll do my best to obey.\"\n\nHe kissed me. \"I know you will.\"\n\n******\n\nWhen we arrived at the mall and Francesca and Belle had donned both their leashes and Lushes, we went straight to the wedding shop for gown fittings. Lynn had chosen a floor length, off the shoulder dress with a snow white bodice, but there were gold threads running through the bottom portion of the dress which made it shimmer as she walked. The bridesmaids' dresses were almost the opposite. They were sleeveless, just with a gold bodice, but below the waist was pure white. They'd had good sizes when they made the dresses. There was very little in the way of adjustments which needed to be made. We could pick them up tomorrow. Master paid to have them delivered instead.\n\nI could try it on without removing my leash, so Alexa left my leash on. She also gave me my first orgasm during my fitting. My seamstress didn't know why I was so fidgety until I asked Alexandra's permission to cum. Thankfully, Alexa did give me permission and I shivered through a most delightful climax, much to my fitter's amusement.\n\n\"You're not wearing the leash during the ceremony are you,\" she asked. She spoke English well.\n\n\"That's not up to me,\" I replied.\n\n\"How about the orgasms?\"\n\n\"Also, not up to me. That will probably be up to the bride. It's her ceremony.\"\n\nShe had a big smile on her face through the balance of my fitting.\n\nAll of our freed slaves except Fatima had never been to a mall before. The sheer number of stores and the wide variety of items in them was like magic to them. They kept wanting to explore and they often had to be turned back into the store by our two guards at the doors when they started to wander out. Master told them we'd walk around after our shopping was done.\n\nFrom the dress shop, we went for lunch at one of the many restaurants. We managed to get three eight seat tables together, but four of the bodyguards had to remain alert, so they had to eat in shifts. I think the eight burly rough looking guys around us kept a lot of people from asking about the three women being taken about on leashes, but one of the waitresses finally asked Alexandra why she had me on a leash.\n\n\"It makes her horny,\" Alexa replied. She had my Lush on when she was asked the question and just after she answered, I had to ask permission to cum.\n\n\"You have my permission to orgasm,\" Alexa said. The waitress watched in awe as I had a nice moaning climax right in front of her.\n\nSahar, who was also sitting at our table beside me was amused by my orgasm. She'd seen me have lots of them, but never so publicly. She kissed me as I spasmed, surprising both the waitress and Alexa. It made Alexa want to try as well, so she kept the Lush running and as I climaxed again, she kissed me, capturing my moans on her lips.\n\n\"Does that feel good?\" Alexa murmured against my ear.\n\n\"Wonderful. I'll need to use a napkin for more than wiping my face.\"\n\nAlexandra laughed. \"This is more fun than I imagined it could be.\"\n\nMy sister slaves had orgasms too. The signs were subtle; no one screamed in ecstasy, but they were present if you knew what to look for. I did. I'd made each of them cum enough to recognize their pleasure.\n\nAfter lunch, we went to the maternity shop. Maahnoor and Ateefah both got ten outfits, five for their present condition up through about seven months, five more for the last couple months. James and Henderson had permission to help them find maternity clothes. They didn't know about dressing rooms and Ateefah started removing her shirt to try something on, James stopped her and pointed out the dressing room. They brought several outfits into the dressing room and James had a big smile when he came out after more time than I would have thought to try the outfits on.\n\nAteefah whispered something to Maahnoor, and soon she was dragging Henry into one of the dressing rooms with some clothes. His smile when they emerged was just as big.\n\n\"Did they just have sex in the dressing room?\"Alexa asked when Henderson came out.\n\n\"I'd guess only a blow job. There's not that much room in one.\"\n\n\"Have you ever done that?\"\n\n\"Not yet.\"\n\nMiranda also purchased some maternity clothes, just a couple which played with Norwegian designs which she probably couldn't find in the States but she liked. The next store we went to offered clothes for men and women. All the ladies but Maahnoor and Ateefah were shopping. Lynn told Richard and Marnie to pick out something they liked for the wedding; she'd pay for it. She told Alexa to pick out something for school. Since Alexa refused to unleash me, we picked out several items together and went into one of the dressing rooms. The clerk monitoring the rooms raised her eyebrows when one person led another in on a leash, but didn't speak seeing Jake keeping an eye on us.\n\nI'd picked out one outfit which had a long sleeve white shirt with floral embroidery on the bodice, which went with a jumper that was essentially open on the front to display the shirt embroidery. It had shoulder pieces forming the arms with embroidered stitching on the side hems to complement the shirt and a wide belt with matching colors. I also picked another jumper which was designed to be worn with a plain white blouse. All the decorative stitching was on the jumper bodice which was split to below the breasts. It didn't flop open, but if worn without the blouse, would show a lot of side boob. The other dress I picked out was floor length, black, white and gold in a bold geometric design on the bodice, and what looked like small swaths of black fabric sewn over the skirt portion looking almost like feathers. The bodice had a deep wide cut which wouldn't allow for a bra and would expose a nice portion of breast, nearly to my nipples. I also got some matching wool shawls to wear with the clothes if it was cold outside.\n\nAlexa picked out some traditional Scandinavian sweaters, a dress like my second one and a couple blouses. She quickly noted in the dressing room I hadn't been lying about doing without underclothes. She saw the pink tail of the Lush descending out of my shaved cunt. While I kept the blouses that went with the the two jumpers, I tried them both on without. The first jumper essentially put my tits on a platter and pushed them together.\n\n\"Master will like this,\" I said. My nipples were spiky little buttons on my boobs.\n\n\"Would you ever wear them in public?\" Alexa asked.\n\n\"Any place I wouldn't be arrested,\" I said.\n\n\"I'm going to make you cum and I'm not going to give you permission.\"\n\n\"Okay,\" I said. I knew it was going to happen some time today. At least I was being warned.\n\nAlexandra turned it on and watched as my arousal notched up and up. Eventually, she took my nipples in her fingers and pinched them lightly. It was all the extra stimulation I needed and I orgasmed for her. She pushed me up against the wall, still cupping my breasts and kissed me hard as I spasmed in her arms.\n\nWhen it was over, she stepped back.\n\n\"Is today the first time you've ever kissed a girl?\" I asked.\n\n\"Like that, yes. The rest were all friend kisses, pecks really. Nothing like that. I want you to lick me to an orgasm.\"\n\n\"You'll need Master's permission. He didn't grant you full control over me, just my orgasms.\"\n\nShe nodded. \"Will he give it?\"\n\n\"He might ask your mother first, but if she has no objection, he probably will.\"\n\n\"In the store, like the guys got?\"\n\n\"Likely.\"\n\nShe tied the handle of my leash to one of the clothing hooks. \"Wait here.\"\n\n\"Can I try on another of my outfits?\"\n\n\"No, I want your tits bare.\"\n\n\"Okay.\"\n\nShe left the door to the dressing room open so I stood there quietly. Jake got a thrill out of watching me, bare tits and all, calmly wait for Alexa to return. She came back, closed the door and removed her clothes. \"Kneel. Lick me to an orgasm.\"\n\n\"Are you prepared to scream?\" I asked.\n\n\"I won't scream,\" she said.\n\n\"If you say so.\"\n\nI made her scream. The sales clerk opened the door to see if someone was being murdered. Instead, she saw my face buried between Alexandra's thighs and hastily shut the door again. I could hear Jake laughing in the background. I continued lapping at her cunt until she had two more, both without screaming. Her hands never left my head until I stood up.\n\n\"Do you have some tissues in your purse?\" I asked.\n\nShe looked at my face, drenched in her juices and nodded breathlessly. She reached in and pulled out a packet of tissues. I used four to wipe my face.\n\nIt took her close to two minutes before she could dress, and even then I helped steady her. I tried on my next two outfits, liking both of them. She also liked her clothes, so I purchased everything. Master and Lynn could fight it out if he had a problem with it.\n\nAs I paid, I thanked the sales clerk for not making a fuss when she caught us in the dressing room. \"Could you do that to me?\" She asked. \"Make me scream like that?\"\n\n\"Probably. A lot of the women I pleasure keep a pillow handy in case the urge to scream overcomes them. Alexa didn't have a pillow.\"\n\n\"You've made me wet.\"\n\n\"Welcome to the club.\"\n\nShe smiled while bagging up our purchases. She handed me a business card with her personal number on the back. \"If you have time during your trip.\" Her name was Lisbet, like the book and Movie, 'Girl with the Dragon Tattoo'.\n\n\"We'll have to see.\"\n\n\"Thank you for the show. It's the best day of work I've had in months.\"\n\n\"You're welcome. Remember, Alexa, you were part of the show.\" Reminding her someone had seen her having sex.\n\nAlex blushed so prettily, I had to kiss her. Master, Lynn and Bj\u00f6rn were all grinning broadly when we made our way to them. I showed Master the Sales Clerks card.\n\n\"She wondered if we'd be in Oslo long enough to make better acquaintance, Master. She was intrigued by the show.\"",
        "\"Would you like to see her again?\"\n\n\"It might be fun sir. She saw me eating out Alexandra.\"\n\n\"Perhaps you could invite her to the wedding or the reception afterward. Maybe you could make her scream at Lynn's reception.\"\n\n\"Perhaps I could, Master. Should I ask her now?\"\n\n\"Why not?\"\n\nI went back to Lisbet and asked her if she wanted to attend a wedding and reception on Saturday at Uranienborg Kirke on Saturday. \"I'm a bridesmaid during the ceremony, but I'd have some time to spend with you at the reception.\"\n\n\"Your current girlfriend wouldn't care?\"\n\n\"She's not my girlfriend. She was placed in charge of me for the trip to the mall. I don't have a girlfriend in the sense you mean it.\"\n\n\"I'm scheduled to work, but another clerk owes me a favor. I'll check with her and let you know.\" I gave her my phone number and told her to text me.\n\nWhen I got back, Lynn was talking to Alexa. \"I don't have to ask if you enjoyed yourself, do I, Alexa?\" Lynn said. \"Don't feel bad. She made me scream like that too.\"\n\nAlexa blushed again, knowing her mother heard her scream in orgasm.\n\nMarnie and Richard joined us with Francesca and Belle still on their leashes.\n\n\"What was that God awful noise?\" Richard asked. \"It sounded like someone was getting their throat ripped out. Francesca said it was a woman having an orgasm.\"\n\n\"It was,\" Lynn said. \"Do you have what you want? I'll pay for it.\"\n\nThey handed their things to Lynn, Belle and Francesca handing theirs to Master. He held onto them until everyone had brought their purchases.\n\n\"What about your things?\" Lynn asked Alexa.\n\n\"I paid for them, Mistress. Don't worry about it. I got some lovely things, Master. I'm sure you'll enjoy them.\"\n\n\"As much as Alexa did?\"\n\n\"Probably, sir.\" I smiled at him.\n\nWe had one last stop to make before we left, a lingerie store. All of the women were intrigued at some of the things on display.\n\n\"Western women actually wear such things?\" Ateefah asked, fingering a diaphanous peignoir.\n\n\"Yes, to be more alluring to our men and entice them to have sex,\" Miranda said.\n\n\"You don't need to entice your man,\" Sahar said. \"He fucks you all the time.\n\n\"Nudity works too, but sometimes the tease works, the flash of flesh as opposed to putting it all out there. Perhaps I will need to entice more when I get big and fat.\"\n\n\"Why would you get big and fat?\" Marnie asked.\n\n\"It's too early to announce it publicly, but Master and I should be having a child in a little more than eight months.\"\n\n\"Are you sure it's his?\" Marnie asked.\n\n\"Reasonably. He was the only one to have sex with me without a condom since I went off birth control.\"\n\n\"While she was trying, she was the only one to get Master's sperm,\" I said, \"no matter who he had sex with. It would have happened in Paris if our calculations are correct.\"\n\nI found several items I wanted to purchase, including something on a mannequin which was nothing more than a variety of straps crisscrossing the body in a very alluring way. I didn't feel I needed to try it on because it was designed for everyone; merely adjusting the tightness of the straps. It was by a company called Couture de Nuit. The Stella in fuchsia, the Alexa in black and the Agnes, also in black looked as though they'd highlight all my curves without limiting Master's access to any of my holes. I thought they'd do well for a good rogering or two. There was also underwear so tiny, it was nothing much more than a gusset. It was possible it wouldn't even cover my clit, though I didn't try them on either. They weren't that expensive. I bought a half dozen in assorted colors, some matching the Couture items. They did cover my holes, but could easily be shoved aside if pressed for time.\n\nAlex made me cum again as I was paying for them, refusing to give me permission to cum when I asked. She did say she'd like to see me in them later.\n\n\"Perhaps a fashion show,\" I said.\n\n\"That would be lovely.\"\n\nWe were done at the mall and a decision was made to eat at the hotel. The Thief had a highly recommended restaurant. We were led back to the limousines where Francesca and Belle had to surrender their Lushes and leashes as they were in the other car. Master took mine as well, except for the Lush. He let Alexandra continue to play with me on the way back. I had two more orgasms on the drive, neither one of them with her permission.\n\n\"How many total is that\" Master asked after the last one.\n\n\"Seven total, four without permission, Master.\"\n\nHe nodded. \"Are you going to punish her, Alexandra?\"\n\n\"What! Me?\"\n\n\"You were the one who she disobeyed. If you're not going to give her permission, she should suffer the consequences at your hand.\"\n\nLynn handed her a hairbrush. \"Use this, otherwise you'll hurt your hand. If she says Venus, you need to stop. You'll start exceeding her limits. No more than forty.\"\n\nRichard and Marnie watched in amazement as I pulled my skirt up over my naked buttocks and laid over Alex's lap and his young sister applied the hairbrush to my bare bottom. Alexandra hadn't said to because she didn't know, but I counted for her and thanked her for each one. It was a good stiff spanking. Not the worst I'd ever had, but not the easiest either. Her mother had also learned quickly how to punish a slave. When she finished my ass was burning, but bearable. I remained where I was for the moment since I didn't want to sit on it.\n\n\"What are these faded scars here? Did you give her these?\"\n\n\"I gave her two, unfortunately, the most faded. Farah was being beaten with a sting ray barb. It tore up her back. I wanted to get it away from the man who had it. I used it on Beth, with her permission, twice, assuming he wouldn't sell it to me unless he knew I'd use it. As lightly as I tried to strike her, they still broke her skin. I paid over a thousand dollars for it and allowed Farah to throw it away. The other five she received from a man in a club with a cane. He wasn't allowed to break skin according to the rules of the club. Edgar broke both of his arms and he was later arrested because he'd participated in the rape and beating of Yasmine.\"\n\n\"What happened to the first guy who struck Farah?\" Marnie asked.\n\n\"I don't know. I never saw him again.\"\n\n\"How did you get Farah?\" Richard asked.\n\n\"She was standing along the side of a road in Buenos Aires with a cloth bag over her head. One of my men found her.\"\n\nI knew the man was dead and had a good guess of who killed him, but I'd never speak of it. One of three men, though they never discussed it either. He deserved to die.\n\nMy buttocks had improved to the point I could sit on them again. I got up from Alexandra's lap and sat beside Master again, laying my head on his chest.\n\n\"Mistress, I have a question for you. Which of your children gave you the most problems growing up?\" I asked.\n\n\"Richard was always rather well behaved. Alexandra gave me the most problems. I attributed it to second child syndrome with perhaps a bit of rebellion thrown in because of her father's infidelity. She learned of it when she was around twelve or thirteen. She was the one who told me. I don't know how many before, but there were others after. I stayed with him because of the children, but I think Alexa blamed me for staying with him, more than she blamed him for being a skirt chaser. He left me anyway when Alexa graduated from high school. I should have left him before, but you know I had no job skills. I'd married him straight out of high school and never worked. One of the reasons I was so sad when you met me and why I thank you so much for helping me. Why do you ask?\"\n\n\"Just curious. No particular reason.\"\n\nMaster hugged me. He knew I had a reason, but not why and he wouldn't ask until later. Perhaps he suspected himself. Actually, he proved he knew when he asked Alexa if she planned on taking my survey.\n\n\"I was thinking about it,\" Alexa said.\n\n\"Were you planning on accepting the post survey benefit?\"\n\n\"It crossed my mind.\"\n\nIt had done more than crossed her mind if her reaction in the dressing room was any indication. She wanted me to do her again.\n\n\"Richard, Marnie, do you think you'd take the survey?\" Master asked.\n\n\"I could see taking the survey,\" Richard said. \"I doubt we'll do the reward thing.\"\n\n\"Why not?\" Marnie said, proving herself to be the more sexually adventurous.\n\n\"We're married. Hell, just married. Now you want to have sex with someone else?\"\n\n\"It's not real sex. It's just oral sex,\" Marnie said. \"And if we both do it, it's not cheating, is it?\"\n\n\"You sound like Bill Clinton,\" Master said. \"'I did not have sex with that woman'. I think oral sex is real sex, though it's less threatening to me than 'real sex'. Intercourse has always been more taboo. I was always more comfortable letting my submissives have oral sex than any other kind.\"\n\n\"But you still do it,\" Alexa said. \"Why?\"\n\n\"There's the masculinity threatening part of it. They'll fall in love with someone else if they have better sex with them than me. It's more emotional. For instance, if I was married, my wife could have a child with someone else other than me. Oral sex doesn't present that problem.\"\n\n\"Yet you took that risk?\" Marnie said.\n\n\"Minimal risk, but yes, I took it. Part of the reason I could is I know sex is not the defining aspect of my relationships. I'm not worried if they find a better lover, that they'll leave me for someone else. That would threaten me because I love them dearly. But they're committed to me in ways unrelated to sex. Theoretically, if they find a better lover, they can still have sex with them because I can let them have sex with them. They get all the sex they want.\n\n\"Another part of it is Beth. She is so giving of herself and giving pleasure to others. She's not threatened by my having sex with anyone else. She wants me to have good sexual experiences no matter who I have them with, the best I can. With her as an example, I feel like a real prick if I try to withhold anything from anyone. If she has insecurities about her relationship with me, she hides them so well, they're invisible. If I asked for the moon, she'd try to give it to me. The others follow her example. Everyone on board the ship has become better, more caring and giving, more compassionate lovers.\n\n\"There's not a person on the ship who doesn't thank me for deciding to bring her on this cruise. Compared to that, what's a little sex on the side. As to what Marnie said, yes, I think oral sex is real sex, but if you're not hiding it from one another and doing anything behind someone's back, I don't think it's cheating. Lynn and Bj\u00f6rn are comfortable with the fact they each have submissives the other person is having sex with, and they're okay with it. But for most people, it is still threatening to your relationship. You have to be confident in the love you have for one another. That what you're doing isn't going to fundamentally affect your relationship, so cheating or not, it's not something to be taken lightly. At your age, I would have had a problem with having sex with someone else. I was not as confident then as I am now.\"\n\n\"Did either of you see the movie 'Indecent Proposal' with Demi Moore, Robert Redford and Woody Harrelson?\" I asked.\n\nBoth of them had seen it. \"Despite their love for one another, it caused problems. Woody couldn't get past the fact that Demi had sex with another man, despite both of them agreeing to it. The very thought Demi might have had more pleasure with Robert than she had with him threw Woody for a loop so bad, it devoured him and he couldn't recover before they divorced. I'm not concerned about the same thing, and part of it is my submissive nature. If Miranda can give Master more pleasure, more power to her. I'll just try to get better. As long as he's willing to maintain his relationship with me, what he does with other people is irrelevant. Sex with other people for me is irrelevant. I wouldn't be having it if he didn't allow it. If he wants me to stop, I will. He always has that control. He can take it away at any time and it won't matter because he's my Master.\"\n\nWe arrived back at The Thief and we gathered our packages and sent the limousines away. Alexandra offered to let us use her room to store all of our packages until after supper. Since we had about two dozen bags from all of our purchases, we were happy to take her up on the offer. Supper was an even bigger problem as they didn't have sufficient tables adjacent to each other for us to all sit together. So Master rented out one of the conference rooms and they set it up for us. Several tables were put up, two waitresses came to wait on us. Our bodyguards sat between the rest of us and the only door into the room. It allowed them to eat normally as opposed to some being on watch all the time.\n\nOur freed slaves had dined with us enough times, they understood all the nuances of eating out. Master ordered four bottles of wine. None of the guards partook, nor did the Muslim woman, not even Sahar since she considered herself on guard duty. As Miranda was now pregnant, she also skipped the alcohol. The waitresses had taken our orders and we were waiting for the food to arrive.\n\n\"Joshua, might I ask a favor of you?\" Alexa said.\n\n\"What might that be?\"\n\n\"Could you let Beth stay with me in my room tonight?\"\n\n\"Alexa, do you want to have sex with a woman?\" Richard asked. \"I thought you liked guys.\"\n\n\"I think I still like guys, but that scream you heard in the store today; that was me. Beth licked me to an orgasm in the dressing room.\"\n\nRichard and Marnie looked at each other in surprise.\n\nSahar laughed. \"I'm not surprised. Beth is the best cunt licker on ship. Best cock sucker too if all these men don't lie.\n\n\"We don't lie,\" Edgar said. \"The one thing I might regret about dating Fatima is having to give Beth up.\"\n\n\"Silly boy,\" Fatima laughed. \"If you had to give up Beth, so would I. I'm willing to consider a compromise where neither one of us has to give up Beth.\"\n\n\"My kind of girl,\" Ethan said. \"Are you sure you want to date that ugly mug when you can date me instead?\"\n\n\"I kind of like his ugly mug. I think I'm good.\"\n\nEdgar blew Fatima a kiss. \"Thanks, sweetheart,\" a la Humphrey Bogart.\n\n\"In answer to your question, Alexa,\" Master said, \"I can't adequately protect Beth here at the hotel. If your mother is willing, you, and only you, Alexa, can forgo the rest of your stay here tonight and come to the ship. You will sleep in Beth's cabin, but she won't sleep with you every night. She's losing three of her sister slaves on Sunday and needs to spend time with them before they go. If you're truly interested in sex with women, all of them are nearly as accomplished as Beth is and you can join in reindeer games with them, but they also need time alone. Richard and Marnie can come and spend the day on the ship tomorrow, but I won't have a room for them, so they'll need to return here tomorrow night. In my absence, your mother is in charge of all my slaves. Her word is law as far as I'm concerned.\n\n\"In the alternative, you're all welcome to come tomorrow and spend the day and I'll give you sufficient time to spend with Beth. I have to work tomorrow and I'm attending the National Theater tomorrow night. You will then return here tomorrow night. There are a couple provisos you need to be aware of. Number one, Beth is no longer your toy to play with. You have no control over her orgasms nor any punishments. Her orgasms now revert back to me and they will be limited in number. She can't have sex with you past that number, so use them wisely. The second proviso is don't expect anything to change. No matter how good she makes you feel, don't fall in love with her. Go back home on Sunday and enjoy the rest of your life. She won't be your girlfriend, no matter how much you want it. She's everyone's girlfriend. You just heard two people who are interested in each other make an agreement to continue allowing Beth in their life. If you think she could be, you're mistaken, and you don't understand the depth of her submission.\n\n\"Beth has already had another girl fall in love with her in the last month and she'll be joining us on Friday as my personal assistant's slave. Beth's an extremely lovable person, but I can't carry all the people who fall in love with her. That's it for my ship. I don't want any more extras unless it's to rescue someone.\n\n\"The third proviso is that if you want to enjoy sex with men, you may ask any of the men to join you except the ones who are married. You can't ask for sex with any of the freed slaves, no exceptions. They have to ask you if they're interested, but you must refuse sex with any married ones, the pregnant ones, and report they asked to Beth. It might be a sign of PTSD or their slave conditioning cropping up and she needs to know. You may confer with your mother or other family members before you make a decision.\"\n\nNo conferring. She said, \"I'll come tonight.\"\n\n\"Do you agree to my conditions?\"\n\n\"Yes.\"\n\n\"Are you on birth control?\"\n\n\"Yes, an IUD.\"\n\n\"Do you approve Lynn?\"\n\n\"That's fine. She's a big girl now. She can figure it out for herself.\"\n\n******\n\nAs soon as we got back to Master's cabin, we had a fashion show. I showed my Master and sister slaves the things I'd purchased. They all liked the clothes I'd gotten at the clothing store, but the items I bought at the lingerie store were definite winners. The jumpers I wore without the blouses, though I showed them to him. I knew he'd appreciate them more without. He called me to the couch and thumbed my nipples with the first one that left them perched on top of the jumper.\n\nI wore one of the tiny g-strings with one of the play suits. As expected, it barely covered my clit, the base of my hood was slightly visible. I told him I had four other pair in assorted colors just like it.\n\nWhen I tried on one of the other ones without the g-strings, Master fucked me hard, driving into my cunt robustly. I barely had time to squeak out a 'permission to cum', sir, and receive it before I climaxed. I orgasmed twice more before Master let loose his load, leaving a massive clean up job for Francesca.\n\n\"I heartily approve of your clothing choices. Those are all lovely, Beth.\"\n\nI was cleaning his cock at the time, so I only smiled and nodded.\n\nMaster let me spend the night with Alexa in my bed. Before doing anything else, I had her take the survey. Then I proved to her the first time she climaxed on my tongue wasn't an accident, though this time, she'd prepared, my pillow ready to absorb her screams. The next three were over as quickly as the first.\n\nShe was panting, wrung out, her cum all over my face. \"Do you want me to lick you?\"\n\n\"Only if you want to,\" I moved up where I could nibble her nipples some more. \"It's my job to give you pleasure, not the other way around.\" I wrapped my lips around a puckered bundle of nerves and sucked her nipple while flicking the top. She moaned again.\n\n\"They feel so sensitive,\" she panted. \"Are you wet?\"\n\nI paused my ministrations. \"I'm always wet. I need to be ready to fuck at a moments notice.\"\n\n\"What do you taste like?\"\n\n\"Have you never tasted yourself?\"\n\n\"Do all women taste the same?\"\n\n\"No. We all taste different, though similar.\"\n\n\"I'd like to taste you.\"\n\n\"From the source, or from your finger?\"\n\n\"From my finger first.\"\n\nI moved up and kissed Alex, spreading my legs for her. I felt her hand slide down my abs, over my mound and two fingers finding my slick folds. I felt first one finger, then two insert itself into my sopping pussy.\n\n\"You are wet.\" Self evident, so I said nothing.\n\nShe explored for a few seconds, then withdrew her fingers, bringing them up to her lips and inserting them into her mouth.\n\n\"Well?\" I asked.\n\n\"You taste delicious, like tart and tangy at the same time.\"\n\n\"You're welcome to taste more.\"",
        "\"Sit on my face.\"\n\nI smiled at her. She slid down the bunk to give me more room and I swung a leg over her torso and slowly brought my cunt to her lips. I looked down at her, a slightly taller, thinner version of her mother; red hair, green eyes, oval face. Her tongue extended from her mouth and tentatively licked my open flower. Pleased, she licked more, tasting more, tasting my hole, the source of my nectar, wriggling her tongue inside of me.\n\nShe slowly licked me to an orgasm, learning as she went, then a second, and a third, each coming more easily than the last until her face was a mirror of my own, girl cum smeared from nose to chin. After the third, I moved off her chest and face, letting her breathe easier. I lay beside her and we kissed and I let my fingers give her another as we did, her body arching against mine as she orgasmed again.\n\nShe was panting.\n\n\"Am I a lesbian now?\"\n\n\"I'm not even sure you're a bisexual yet. At the moment, it's nothing more than giving and taking pleasure from another person. I think what defines you, if anything does, is the emotional connection you feel to people. If you see yourself being able to fall in love and marry a man, I'd say you're heterosexual. If only a woman, then you're a lesbian. If either, a bisexual. I'd describe myself as a male leaning bisexual. I love my sister slaves, I love having sex with them. I don't think I'd marry one, although the love is there, but I want cock. I love to feel a cock inside my cunt or my ass. Strap-ons only work to a point. Until they invent one that moves and molds and flexes and swells like a cock and shoots hot semen into me, I want a cock. I'd only marry a man, and at the moment, only my Master, though he's taken.\"\n\n\"You gave him up.\"\n\n\"What did I give up?\"\n\n\"Marriage.\"\n\n\"Marriage was unimportant. Even though Miranda is married to Master, on Sunday, she goes back to the US, while I stay here with him. She goes back to programmed sex with people she doesn't love, while I stay here and have sex with him. I can still have his babies. What exactly have I given up.?\"\n\n\"His wealth, security.\"\n\n\"I don't think much of people who marry for money. I want to work in my field and help people. I don't want his money. It's fun. It allows me to do more, but it's not necessary. What was necessary was his mastery, his Dominance, and I haven't given up one scintilla of that. If I'm pleasing to him, I'll have what money I need.\" I kissed her, her mouth opening to mine and our tongues entangling. \"Again?\" I questioned softly.\n\n\"Please.\"\n\nShe forgot to have her pillow handy and screamed again before biting her fist to choke it off. Then we slept.\n\n******\n\nI kissed Alexandra awake in the morning. \"Time to get up. I need to fuck my Master before he leaves for the day. Then I'll be awarded to someone at morning muster, plus I have more surveys to give and cocks to suck. I'll get further instructions from Master.\"\n\nAlexa put on a big t-shirt and we joined the others in Master's cabin. Master's cock was hard and he was fucking Belle's ass. From the gapping of the other two asses, he'd recently been in each of them as well. I got on my hands and knees beside her, kissing Belle as Master slammed into her bottom until she orgasmed. He moved to me and in a single thrust, entered me to the hilt. Alexandra finally got to see me at my submissive best, taking his lovely cock up my bum and begging to be fucked, begging to cum, (denied), trying to hold out as long as I could, then spasming over his hard dick as I finally surrendered to my lust. My contractions as I climaxed finally did him in and I felt his warm spray bathe my rectum with his seed.\n\nMiranda was waiting with a warm washcloth when he pulled from me. She lovingly washed his prick, then kissed him, before washing the cum leaking from my ass.\n\n\"Hannah received a call from Richard and Marnie. They're coming at ten. Ensure they're shown around the ship and give them anything they need to make their visit enjoyable.\"\n\n\"Of course, sir,\" Miranda spoke for all of us. \"May I assume we still get unlimited orgasms with each other?\"\n\n\"As long as it doesn't interfere with other business. The crew is looking forward to muster. All four of you won't be with us much longer. Soon, it will only be Beth for their morning reward. Good morning, Alexa. I presume you had a wonderful night.\"\n\nAlexa had been staring at Master's cock, so recently removed from my bottom and still half hard, even hanging limply. His question jerked her attention back.\n\n\"Yes, a wonderful night. You're so big.\"\n\n\"Excuse me.\"\n\n\"You're so big. Your cock is the biggest one I've ever seen.\"\n\nWe laughed. \"His isn't the biggest cock on the ship, but it is a magnificent beast, isn't it,\" Francesca said. \"It fills us up very nicely.\"\n\n\"How could anyone be bigger? Where the hell would it go?\"\n\n\"I've never had one so big it all didn't fit inside me,\" I said. \"Everything on the inside is squishy and soft and can get pushed around to make room.\"\n\n\"Ooh, Ooh,\" Belle said. \"You know what we need to do tonight? We talked about it before. We need a male strip contest. Get everyone who wants to strip to strip for all the women who want to watch. I think that would be loads of fun. Then Alexa can see a wide variety of dicks.\"\n\n\"Well, I'm going to the theater with Master tonight, but it could be with the winner getting a blow job from Beth,\" Miranda said. \"Better yet, an hours fucking.\"\n\n\"Hell, let the first, second and third place runner ups all get fucked for forty-five, thirty, and fifteen minutes, but they get to choose who they want. It doesn't have to be me. But the contest can't be for the largest cock,\" I said. \"It has to be for the best show. Whoever gives the best show by vocal acclimation wins. Master can we? Can we be awarded as prizes and cum as much as we want for an hour? We'll take several enemas so they have their choice of holes.\"\n\n\"Fine, but the security people for the ship and the theater won't be able to participate.\"\n\n\"Nonsense, sir,\" Miranda said, \"The guys on the security detail are dropping us off at the theater and we'll be there for three hours. It's only a couple blocks away. They can come back and do their routines. The ones standing watch on the ship can be relieved to do their routines. The prize could be awarded after they get off watch. Everyone who wants to go could get a shot.\"\n\n\"I see how that could work. Fine. You've got my permission.\"\n\n\"You want in on this, Alexa?\" I asked. \"Not to watch, you can do that anyway, but to be one of the prizes? Since Miranda won't be here, we might need a fourth.\"\n\n\"You mean have sex with someone as a prize?\"\n\n\"That's exactly what I mean. All of the men who've been on the ship since the voyage started are pretty good lovers. The newer guys are catching on. You might get to fuck a bigger cock than Master's.\"\n\n\"I've never had anal sex before.\"\n\n\"You don't have to have anal sex. We'll just plug your ass and declare it to be off limits.\"\n\n\"I'll do it.\"\n\n\"Do me a favor, Alexandra,\" Master said. \"Tell your mother what you plan on doing. She said you were old enough to make your own decisions, but tell her anyway.\"\n\n\"I will.\"\n\n\"Let's shower and eat before muster. We'll announce the strip show then.\"\n\n\"Yes, sir,\" the slaves said.\n\nI left Master's larger shower to him and the others. I took Alexa to mine and we washed each other and ended up fingering each other to orgasms while kissing under the salt water shower, using fresh only to rinse.\n\nLynn was already eating with Bj\u00f6rn, Sherry, Manuel, and Yasmine. Lynn was feeding Sherry and Yasmine was squirming on Bj\u00f6rn's lap. Lynn looked up when we entered and said, \"Alexa, you do realize the whole ship heard you scream last night?\"\n\nAlexa blushed, knowing how many people had heard her orgasm. \"Mother, they're going to have a contest tonight while you're at the theater. I wanted you to know I intend being one of the prizes. They're going to announce it at muster.\"\n\nLynn looked her daughter up and down. \"Be careful. Life aboard this ship is very intoxicating. You're still young. Don't get sucked in too deeply.\"\n\n\"I won't.\"\n\n\"We'll see.\"\n\nMaster fed me this morning, and again, Alexa witnessed the depth of my submission. I squirmed on his lap as he fingered me under my skirt, cumming twice more without his permission. I was earning myself a stiff punishment even before muster.\n\n******\n\nAt muster, Master announced a male strip tease contest to be held tonight. Any of the men who wanted to participate would be allowed to participate. If they were standing watch, they'd be relieved long enough to do their show. They should pick out their own music and clothing. The women who wished to vote on the best strip tease could all watch the contest. The person winning the contest could pick Beth, Francesca, Belle, or Lynn's daughter, Alexandra, as their sexual partner for an hour or less, depending on their ranking. Master had Alexa raise her hand so they knew who it was. First runner up got second pick of the women for forty-five minutes, second runner-up got third choice for thirty, and fourth place got whoever was left for fifteen minutes.\n\nThere was quite a bit of buzz after that announcement. Suddenly Darla said, \"If you do a decent enough job stripping, the rest of you fuckers will probably find yourself with a bed companion too. I'll be pretty juiced after the lot of you strip. Might even have to take two or three of you to bed.\"\n\nHer announcement made the contest even more desirable so all the men who weren't going to be at the theater tonight quickly signed up, except for James and Henry. Sahar had no desire to watch men strip, so she offered to stand watch for anyone else who was participating. All the women, even Hannah and Angelique and the freed slaves wanted to see a strip show. None of them had ever seen anyone strip before. The only ones who didn't sign up were the married ones.\n\nThe daily drawing was held and I got Manny for his reward, plus I still needed to give the survey to Palmer, so I asked both of them to wait after the muster. Ateefah and Maahnoor came up to me after muster and asked to speak to me privately. I nodded and we stepped away so they could speak.\n\n\"Would it violate our marriage to watch other men strip off their clothes?\" Maahnoor asked.\n\n\"That's up to the people involved in the marriage,\" I said. \"You need to talk to your husbands. It is not uncommon for women in western society to attend such shows, and normally, they might not be upset if you went, but they might have a problem with you going. You have already strayed once, and James is nervous Ateefah might do the same. Men know that women are often aroused by such shows and when they come home from the show, often want to have sex, which can be good for them. Sometimes, the women get too excited and touch one of the strippers inappropriately for a married woman. That would be bad for both your marriages. I would suggest you talk to your husbands, make such promises and reassurances as you can, and if they tell me you can watch, I'll let you attend. They have to tell me. I won't trust your word if you say they said it was okay. I want to know you discussed it with them.\"\n\n\"We will talk to them,\" Maahnoor said before they left.\n\nI went back to Palmer and Manny. \"Boys, Palmer still needs to take his survey and get his reward for doing that. Manny you won any hole you want to orgasm. If you folks aren't particularly shy, I can do Manny while Palmer is taking his survey and then do Palmer, or if you're feeling real adventurous, you can spit roast me after Palmer takes his survey. I'll warn you Palmer, I can't do as good a job sucking your cock while I'm spit roasted because it doesn't allow for doing all the things to make you crazy with lust. It's just another blow job, but you might enjoy it anyway and I'm sure you can earn another BJ in the future, so what do you want to do?\"\n\n\"I wouldn't mind doing the spit roast,\" Manny said. \"I've never done anything like that before, but that blow job was out of this world so I'll defer to what Palmer wants.\n\n\"I can do the spit roast now,\" Palmer said. \"The other guys say they get frequent opportunities for a blow job. Hell, theoretically I have a chance for another one tonight.\"\n\n\"Do either of you care if Lynn's daughter watches. She might as well see what she's in for tonight. She's never done anything like this either.\"\n\n\"No, that's fine,\" Palmer said.\n\n\"I'll round her up and see if she wants to watch. Wait beside Master's door. I'll be right there.\"\n\nThey left and I found Alexa talking to her mother. \"Excuse me, Mistress. I wanted to ask Alexa if she wished to watch me get spit roasted.\"\n\n\"What does that mean?\" Alexa asked.\n\n\"It means getting fucked at one end and sucking cock at the other end,\" Lynn said.\n\n\"Have you ever been spit roasted, Mother?\"\n\n\"One of the nice things about having two cocks at my disposal is some of the more esoteric sexual acts at my disposal. I've not only been spit roasted, I've been airtight. Bj\u00f6rn in my pussy, Sherry with a vibrating strapless in my ass and Manuel in my mouth. What a rush.\"\n\n\"Holy Smokes, Mom. Have you ever changed!\"\n\n\"I decided if I was going to do this, I was going to make the best of it. My firstmarriage sucked. This one is going to way better.\"\n\n\"We'd better hurry. I want to be done before your brother gets here.\"\n\nI rejoined the two men with Alexa in tow. It was as close as either one of them had been to her and they eyed her appreciatively. Master and Hannah had already left and I led them through his cabin. The other three slaves were taking care of whoever won them for sailor of the day. We didn't use Master's bed for such activities.\n\nI led them to my room and had Alexa sit in my desk chair. I had both men sit on my bunk and handed Palmer an iPad and had him start the survey. I took off my clothes, waiting naked for Palmer to finish. I started stripping Manny. He had a good sized cock, slightly larger than Master, but not quite as large as Shed and Mac. Alexa was watching his black snake start growing as I undressed him and shivered.\n\nStroking him lightly as we waited for Palmer to finish, I made sure he was ready to fuck me. It took about twenty-five minutes for Palmer to finish and Manny's mast was rock hard, and almost nine inches long. Alexa couldn't take her eyes off of it. Palmer's dick was hard too, watching little old naked me stroking Manny. I helped Palmer with his clothes and bent over to take him in my mouth and giving Manny my crotch.\n\nI turned to look behind me. \"If you're going to fuck my ass, lubricate it in my cunt first,\" then I sucked Palmer to the bottom of my throat, inhaling his cock.\n\nManny slid his big dick in my cunt. He started a nice slow fuck. I love slow fucks. I moaned deep in my throat, tickling the crown of Palmer's prick. From then on, I ignored the fucking Manny gave me, though I climaxed three times, concentrating instead on the dick in my mouth. I did the best I could with it, taking my time, really only able to work his cock and balls and not all the other areas I knew were pleasure points. Manny's cock thrusting into me was keeping me nailed pretty good to that one spot, my feet spread and braced to withstand his strong plunges. He never did take my ass, but when I felt the first swelling of his shaft to empty his balls, I took Palmer over the top, growling as he grabbed my head and spurted his heavy cream down my throat.\n\nSure Palmer's cock was clean, I dropped to my knees to clean Manny's, thick with my cum as well as his. Happy with my performance and sure they were satisfied with mine, I thanked them for taking my survey and working hard for Master and walked them out of the room. I came back to get dressed again.\n\n\"That was so fucking hot,\" Alexandra said. \"That big black cock stroking in and out of your white bald pussy. I almost orgasmed from watching. Can you lick me again?\"\n\nI looked at my watch. \"I can give you fifteen minutes, but no longer. Just pull your panties down.\"\n\nShe pulled them down, sat on my bunk and spread her legs, a look of lust in her eyes. I gave her three, none of them as good as last night's, but she was so horny, they didn't need to be. I got up, showered quickly, making sure to get most of Manny's cum out of my cunt, then dressed to meet the rest of Alexandra's family.\n\nMy sister slaves joined me in greeting them, all of us done with our other activities. We gave them a tour of the ship, starting on the top deck, showing them the salon and massage parlor, upper spa, currently in use by Angelique and J\u00eengyi, both topless, just soaking, though mostly under the water. We introduced them to Lynn's kids.\n\nMarnie said to Angelique \"I feel I know you from somewhere.\"\n\n\"She's a model. If you follow fashion, you may have seen her in some magazines,\" Miranda said.\n\n\"Of course. You were in Elle from a couple months ago. You're gorgeous.\"\n\n\"Thank you.\"\n\nNext up was the game room and bar up top. A couple off-watch guys were there shooting pool. We went down a deck showing them the bridge, where they were amazed by the lack of anything ship like, more Star Trek than Star Trek was. We knocked on the Captain's cabin, where Lynn was often found, though no one was there today. The rest of that deck was guest cabins, all in use by the extra people we had picked up, except for Lynn's. We knocked on Lynn's door and she opened it. Manuel was bent over, naked, steely hard prick, with a red ass, and Lynn had a paddle in her hand.\n\nSeeing who it was, she threw a towel over Manuel hiding his erection, telling him to stay there for the rest of his punishment.\n\n\"What is he being punished for?\" Richard asked.\n\n\"For cumming before he was given permission,\" Lynn said. \"He was supposed to wait for my orgasm. I'll see you all at lunch in the dining room. I need to finish this first.\"\n\n\"She knew we were coming aboard now,\" Richard said, when Lynn closed the door. \"Why would she be doing that now?\"\n\n\"If I were going to guess,\" I said, \"it's because it was more humiliating for Manuel to have you see him punished. It helps reinforce his submission. We used to do public punishments of all the naked slaves on the helicopter deck so everyone could witness their punishments after the morning muster. Since we've recovered so many freed slaves, we haven't felt we could continue public punishments so they didn't have to witness things which might bring up their own feelings of shame and disgust. You still like to have an audience sometimes and people you barely know is always worse than people you know who are used to seeing it. Probably why his cock was so hard even though he'd orgasmed.\"\n\nNext up, Master's cabin, which we'd straightened up that morning, then the playroom. That widened their eyes. They could grasp the purpose of about half of it. Some things they might have had to work out more.\n\n\"Have all of you been punished in here,\" Marnie said, her eyes gleaming.\n\n\"Every slave spends some time in here at one point or another,\" Miranda said.\n\n\"The freed slaves hate this room,\" I said. \"It reminds them of things they'd like to forget. They get the shakes every time they have to go through it, even the ones who've been freed the longest. I think Fatima has had Pierre in here once, and it was only for instruction on how not to hurt him when he's punished.\"\n\n\"What about you?\" Richard asked. \"Do you hate this room?\"\n\n\"Not really,\" Francesca said. \"I sometimes feel like I should, but I've had some great orgasms here. Punishments are just part of our service, like fucking and sucking. You get used to it. That's not to say I look forward to coming in here, but I don't hate it either.\"\n\n\"Speaking of fucking and sucking,\" Marnie said, \"how did you like your night with Beth, Alexa?\"",
        "Alexa blushed. \"She made me scream again. Mom told me this morning at breakfast, she heard me, said the whole ship heard me. As embarrassing as that was, it's the best sex I ever had.\"\n\n\"Wow, best sex ever. Impressive,\" Marnie said. \"I think we need to take that survey, Richard. It seems to be the ticket to paradise.\"\n\n\"I'll take the survey, but we shouldn't do the oral sex. It's not right to me.\"\n\n\"Best sex ever, Richard. Aren't you curious?\"\n\n\"Of course, I'm curious. I'm curious about what happens after I die, too. Doesn't mean I'm in a hurry to kick the bucket.\"\n\n\"Whatever.\"\n\nInteresting dynamic between the two. Usually, the man is the more sexually adventurous of a couple. More likely to engage in cheating, push for new sexual positions, role playing. Marnie seemed to be driving right now.\n\nWe showed them the dining room, the rear spa, the bar, the sun deck, though there wasn't much sun and the helicopter was occupying the space where the chairs and lounges normally went. Next came the 1 deck, where sick bay, the crew's mess and galley were located, along with most of the crew quarters. The galley crew was busy working on lunch, five people working on food prep, Reggie and Pierre directing.\n\nLast, we showed them the 2 deck, engine room, gym, gun range. Almost a dozen well ripped people were working out in the gym, eight guys, and three women, Roberta, Kelly and Sahar. Sahar was sweaty as if she'd run ten miles, but was on the range again, going through what looked like a big warehouse. There were boxes and clutter everywhere and you never knew where someone was going to jump out. I saw her take a wound, but she didn't die while we were down there.\n\nHenderson was lifting weights. He called me over when he saw me.\n\n\"What can I do for you Henry?\"\n\n\"Maahnoor wanted to go to the strip show. Is that going to be a problem? Is she going off the rails again?\"\n\n\"I don't know, Henry. I'm always suspicious when there's a behavior change, but it could be nothing more than curiosity and a chance to bond with the other girls, all of whom seem to be going except Sahar. Let me ask you this. How do you feel about her wanting to go? Do you have a problem with her going?\n\n\"I guess I'm worried she might be thinking I'm not enough for her again, like the first time.\"\n\nHow's your sex life going at the moment? Are you having frequent, regular sex?\"\n\n\"Usually twice a day.\"\n\n\"Are you doing pretty much any kind of sex now? Anything she's been reluctant to do or wants to do that's different?\"\n\n\"Well, we're doing anal and oral now, after you talked to them in their last group. You left it up to them what kind of sex they wanted to engage in and they had to decide for themselves if it was right or wrong. I think she decided it was okay to do it, like she's either going to hell or not and figures she'll enjoy her time on earth. She's not freaking out about doing any of those things. James says Ateefah is the same. They're both matter-of-fact about pretty much all sex now.\"\n\n\"She isn't sucking your cock after you've fucked her ass is she?\"\n\n\"No. She's using a washcloth for cleaning up. I haven't seen anything I recognize as freaky. I mean a lot of women don't want to do anal, but a lot do. Same with oral. It seems normal now.\"\n\n\"If she wants to watch the men strip, how would she feel about you being one of the strippers and having the other women watch you?\"\n\n\"I don't know.\"\n\n\"I think it would be good to know. If she wants to watch men stripping, how would she feel about you stripping for other women? Or, you watching a bunch of other women strip? Both should be equally wrong in her eyes. It would be like her having to watch you fuck someone after she messed up. She was ready to do it to get you back, but how would she feel now you seem to have patched things up?\n\n\"Ateefah wanted me to teach her how to suck James cock, but she didn't want me teaching her on him, and his was the cock she needed to swallow and he's generously endowed. I asked her how she thought James would feel if she practiced her cock sucking on another person? She realized he'd hate that, so because she doesn't want me to demonstrate on James, she hasn't had any lessons. It was faulty thinking on her part. It was okay for her to practice on another male, but not for another female to show her on her husband. You need to know if Maahnoor is having faulty thinking of her own. It should be okay for you to strip if it's okay for her to watch. You can tell her you'll refuse to accept a prize if you should happen to win, but is she willing to watch you bare it all for the other women. If she's not, then she shouldn't go. That's my thinking on the subject. Also, if some of the single women get a little wild and handsy, she can't. She's married and she has to respect that or she doesn't respect you. The same goes for you. You can't let anyone get handsy with you. It works both ways.\n\n\"I do think that her asking you is a good sign. She's not going behind your back. Talk it over some more and see how she feels about those things, then you can decide together.\"\n\n\"Yeah, sure. Thanks.\"\n\nI moved back to the others and Marnie asked, \"What strip show was that man talking about?\"\n\n\"Some of the men are putting on a judged strip show contest tonight. The women on the ship will be judging who does the best job of stripping, and the winners will get a prize.\"\n\n\"Sounds like fun,\" Marnie said. \"Maybe you should participate, Richard. You have some pretty good dance moves. What are the prizes?\"\n\n\"One hour of sex, forty-five minutes of sex, thirty minutes of sex and fifteen minutes of sex with their choice of one of four volunteers,\" Belle said. \"Beth, Francesca, myself and Alexa.\"\n\n\"Alexandra, you're going to fuck some stranger,\" Richard said. \"Have you talked to Mom about this?\"\n\n\"I told her this morning.\"\n\n\"Maybe I should sign up to be a prize,\" Marnie said. \"That sounds hot.\"\n\n\"No fucking way,\" Richard said. \"You're married. My sister is single. I don't think she should do it either, but at least she's single.\"\n\n\"Well if you're going to be dancing...\"\n\n\"I haven't said I'm dancing, and I definitely don't think I should if sex with another person is involved. How would you feel if I won sex with another person?\"\n\n\"At least we'd know you were hot.\"\n\n\"I already feel hot. I don't need someone telling me I'm hot. And what if I won sex with my sister?\"\n\n\"Then refuse to have sex with her. You don't have to accept the prize. Geez. Don't you think it would be fun to have sex with someone else?\"\n\n\"I don't need sex with someone else. I'm perfectly satisfied to have sex with you.\"\n\n\"It wouldn't be equal anyway,\" I said. \"The prizes will definitely get fucked. There's only about a one in seven or eight chance one of the dancers will win a prize depending on how many strip. It's not fair to Richard. You wouldn't necessarily both be having sex with someone else if he lost. I think it's a terrible idea to suggest.\"\n\n\"See that. Beth thinks it's a terrible idea. I do too. No fucking way.\"\n\nMarnie pouted. Things were not going well in Whoville. Something was off.\n\n\"Let's go take those surveys then, before lunch,\" she said, throwing a smile back on her face.\n\n\"Okay,\" Richard said, clearly glad to see Marnie wouldn't continue pouting.\n\nI wondered if she'd continue to insist on the oral sex afterward and if Richard wouldn't succumb to her pressure they both do it. What should I do? What if Marnie wanted to and Richard didn't? I was under no obligation to comply with something that would affect someone's marriage. If Marnie wanted it, but Richard didn't, I could refuse to do either, but what if they both accepted. I could foresee problems even if both of them agreed. This was not an equal scenario. I needed to talk to Lynn.\n\n\"I need to do something first,\" I said. \"Miranda, could you take them both back to Master's quarters to wait for me. I won't be but ten minutes.\"\n\nI ran back to Lynn's quarters. When I knocked, she yelled to come in and was still with Manuel, though he was fucking her this time.\n\n\"Don't cum until I do, keep pumping,\" she warned him. \"What do you need Beth?\"\n\n\"Mistress, I think there's a real possibility Marnie might cuckold your son this trip.\"\n\n\"Stop, Manuel.\" He stopped and she got up and put on a robe.\n\n\"What makes you say that?\"\n\n\"Marnie wanted Richard to join the contest tonight and she wanted to be one of the prizes for the winners. She's also pushing for him to accept my oral services for taking the survey. Richard is resistant to doing any of those things but she keeps pushing, and his resistance starts to crumble the more she pushes. I think she's the more sexually adventurous of the two and more Dominant. I think Richard is on the submissive side, but I don't know how much as they haven't taken the surveys yet. I believe she's going to push until she gets what she wants, and she'll probably fuck whoever in front of him. He strikes me as a less submissive Gaston and you saw what happened to him.\"\n\n\"Do you think he'd be happy as a submissive? The rest of you are pretty happy as submissives. Would it be right of me to deny him what Manuel and Sherry enjoy?\"\n\n\"I'm not certain because he hasn't taken the survey, ma'am. This is all instinct at the moment. He is fighting it, but it may be because he feels he'd disappoint his family, or he may not be as submissive as he looks, but keeps giving in to someone much more Dominant than himself. You might want to talk to him yourself and ask him what he wants and if he'd be happy. If you think he would be, you could give him your blessing to do what would make him happy, no matter what anyone else thinks. I'm about to give him the survey and I'll see if he defers to Marnie regarding the oral sex, but I think if he does, he'll eventually give in to the contest tonight. I'll let you know his results with his permission.\"\n\n\"Thank you for thinking to tell me. Manuel, would you like to compete in the contest tonight? I didn't ask you.\"\n\n\"If your daughter and daughter-in-law are prizes, would you want me to, Mistress?\"\n\n\"You're a wonderful lover, Manuel. Why wouldn't I want my family to enjoy the best.\"\n\n\"I'll speak to Sherry about it Mistress, but with your permission, I'd like to compete.\"\n\n\"Fine with me. Let me know how Richard scores and I'll speak to him at lunch.\"\n\n\"Yes, Mistress.\"\n\nI left and ran back to Master's cabin where Marnie and Richard waited with the others.\n\n\"You might want to take Alexandra up to the upper deck spa until lunch,\" I said. \"I don't know if she brought a suit since she was coming to Norway in October.\"\n\n\"Would you like to go soak for awhile, Alex. It feels quite good,\" Belle said.\n\n\"Sounds fun.\"\n\n\"Richard, Alexa, would it be okay with you if I share the results of your survey with your Mother? Not the answers to individual questions, but your overall personality traits?\"\n\nNeither of them expressed a problem, so I could tell Lynn if anything popped out at me.\n\n\"May I speak to others about your results, Marnie?\"\n\n\"Sure, no problem.\"\n\nI took both of them to my quarters and handed each of them an iPad and explained how to take it. Marnie finished in 25, Richard in 30 minutes.\n\n\"Those are some pretty strange questions,\" Richard said.\n\n\"I am studying submission and Dominance. We do some pretty strange things by all accounts.\"\n\n\"I suppose.\"\n\n\"Richard, I'd like to have the oral sex,\" Marnie said. Surprise, not.\n\n\"Why?\"\n\n\"You know how much I like oral sex. If everyone says Beth is the best, I think I should check it out. Maybe you could pick up some pointers for when you give me oral sex. Maybe I could pick up some pointers too, for giving you better blow jobs.\"\n\n\"You almost never give me a blow job; why do you need pointers?\"\n\n\"All the more reason to accept one of Beth's. The best blow job ever. Baby, you know I'd suck you more if sperm tasted even the slightest bit better, but it's so slimy and salty. Even if I don't give you one often, wouldn't you like the ones I do give you to be better? Go ahead, you go first. I don't mind if you get a nice orgasm out of it.\"\n\nSo Marnie expects frequent oral sex, but doesn't reciprocate. Even if Master wasn't required to do so, he often licked us to an orgasm, even doing so when his own cum was in us. This was definitely an unbalanced relationship. I was wondering if I even needed to enter the results.\n\nRichard sighed and said, \"Fine. I'll do it.\"\n\n\"Are you sure this is what you both want?\" I asked. \"You don't get to put the genie back in the bottle once you let him out.\"\n\n\"What do you mean?\" Marnie said.\n\n\"What if Richard loves better blow jobs so much he expects you to give him one more often? Will you give him more oral sex?\"\n\n\"Yeah. What if I want more and better oral sex?\" Richard asked, jumping on the bandwagon.\n\n\"Don't you love me?\"\n\n\"Of course I love you.\"\n\n\"You know how much I hate the taste of sperm. You'd make me taste it all the time?\"\n\n\"Not all the time, just more often.\"\n\n\"We'll see.\"\n\nEffectively, she was saying, no, and while she might not enjoy the taste of cum, I didn't think that was the reason she didn't give him oral sex. She'd save it for when she wanted something from him or to 'prove' to him how much she loved him, but in small doses so he never expected much from her, while she could continue expecting a lot from him. The only way to stop emotional blackmail was not to submit to it in the first place, but if he was submissive, maybe he secretly enjoyed the games she played with him.\n\n\"Do you agree, Richard? You want me to give you oral sex, and then give Marnie oral sex?\" I asked. Let's get specific on his agreement.\n\n\"I'll play along.\"\n\n\"Yes or no, please. You're a married couple so I want you to be specific.\"\n\n\"Yes.\"\n\n\"Take off your clothes,\" I said.\n\n\"Why do I have to take off all my clothes?\"\n\n\"Because to give you the best blow job possible, I need to have access to all of your erogenous zones and they're not all in your crotch.\" I was determined to give Richard the best fellatio he'd ever had, not only because he was Lynn's son, but deserved it by my estimation. Master took better care of his slaves than Marnie did of her husband.\n\nHe reluctantly removed his clothes and I helped him, Marnie watching with a slight smile. She'd gotten her way again. His cock wasn't the largest I'd ever seen, but it wasn't the smallest either, perhaps six, six and a half inches long, circumcised, a plump head but somewhat thin shaft. He'd be easy to deep throat. I took twenty-five minutes to give him his orgasm and when he did, he was groaning loudly, his back was arched off the bunk and his hands were gripping my hair and jamming his cock as deep in my throat as he could go, and he positively flooded my mouth with cum, as if he hadn't cum in a week.\n\nI swallowed every drop of cum, and it wasn't bad, though I only tasted the last couple, weak squirts, the rest having bypassed all my taste buds. When he finally stopped pulsing, I leaned back and asked, \"Was it the best?\"\n\n\"Incredible,\" he panted. \"I can't believe how good it was. I'm actually glad I let you do it. Were you taking notes, Marnie?\"\n\nShe looked a little pissed, but didn't say anything. Given how she pushed for this, she couldn't really.\n\n\"I'm glad you liked it,\" I said. \"You can get dressed now. I'll get started on Marnie. You'll need to remove your clothes too.\"\n\nShe hastily removed her clothes. Marnie was about three inches shorter than me, about 5-5, a true blonde, blue eyed, curvy with D cup breasts, and a plump, somewhat soft, butt. She trimmed, but didn't shave her pubes, the blonde hair not as hairy looking as say Darla, her slit still visible. I decided to give Marnie a good, but not great orgasm. Maybe ten minutes and she wouldn't scream, but it might be the best unless a lesbian had licked her before. I'd pretend to do some of what I'd done to Richard, search out her erogenous zones, but then paid less attention to them when I sent her over the top. My best orgasms were saved for those who needed them the most.\n\nShe got her orgasm, and although she moaned a lot, she didn't scream or carry on the way Richard did. She looked disappointed, which is what I was going for.\n\n\"It was good, but I expected more somehow, you know, hearing how you made Alexa scream. Richard's looked better.\"\n\n\"I imagine Richard hasn't had sex recently. When's the last time you climaxed?\" I asked.\n\n\"This morning.\"\n\n\"When's the last time you climaxed, Richard?\"\n\n\"Before we left New York.\"\n\n\"Perhaps they just needed it more since it was so long since they orgasmed,\" I said. Damn straight he got the better one.\n\nMarnie pouted. \"I suppose.\"\n\n\"You're done now. You only get one. Go ahead and get dressed. I have some other things I need to do.\"\n\nI ushered them out of Master's cabin and went to enter all the results in my database and applied the matrix to the answers. As expected, Richard was submissive. More submissive than Pierre and Manuel, less I suspected than Gaston, at least until I had more evidence. Marnie fell into the Switch sphere. Since Richard was more submissive, she was acting Dominant, but I could easily see her bending the knee to someone who didn't accept her bullshit. It wouldn't be Richard. Nor did she know how to behave as a Dominant given her lack of exposure to it and lack of training. Instead of taking charge and ordering compliance, she wheedled her way to get what she wanted, probably why she tested in Switch territory. If she was going to Dominate, she needed to learn how to play her role and pay more attention to her sub. Alexa was more Dominant than Marnie was. Not quite as much as Lynn, but her exposure was also limited. She might be more Dominant with time. I suspect their respective personalities made Richard the easier child the raise and Alexa the tougher one. There would have been more resistance to her mother's direction and orders.\n\nI wondered if Lynn's husband had been either a submissive acting Dominant because he supposed it was society's role for him to be the man of the family, which would have grated on Lynn, or another Dominant, butting heads with his wife. On the other hand, Bj\u00f6rn was Dominant and Lynn and he got along well, but they also knew their roles better and Lynn had someone else to be Dominant to, so she could relax out of that role with Bj\u00f6rn. So many questions. I had a few minutes to speak with Lynn, so went to her quarters before lunch.\n\nI knocked and Lynn opened the door. She was dressing for lunch and invited me in while she finished.\n\n\"What can you tell me?\" Lynn asked.\n\n\"All of them told me I could share the information with others. Alexa is Dominant, Mistress, not too much so at present, but she's young and hasn't been exposed to it before now. I suspect, if she spent much time on this ship, she'd ripen to an excellent Dominant given the examples she'd see every day. I suspect that's why she was the more difficult child to raise. Above a certain age, she'd want to fight every stricture, order, command, or rule you attempted to set.\n\n\"As I expected, Richard is submissive, more so than either Pierre or Manuel. He caved on the oral sex issue. I gave him the very best orgasm I could because I don't like the way Marnie is treating him, though it's not all her fault because she doesn't know what the hell she's doing either. I gave her a crappier one. She's not commanding, she's wheedling and whining, trying to get what she wants by playing sexual games. She apparently makes Richard give her lots of oral sex, but doesn't do the same for him claiming she doesn't like the taste of cum and if he loved her, he wouldn't make her give him blow jobs.\n\n\"I don't believe Richard is as submissive as Gaston, but I didn't test Gaston. Marnie lies in the area of a Switch, perhaps a little more submissive than Dominant, but because Richard is so much more submissive, she's in charge of their relationship, but doing a piss poor job of it. You could probably make her your sub, as perhaps could any other Dominant on the ship with the possible exception of Fatima, simply because she's so little removed from her own slavery. If she got resistance, she might give up trying, especially from a female. A year from now, I expect her to be a much stronger Dominant. Being in control of the ship at times is strengthening and supporting her Dominant side.",
        "\"I think Richard would be happier if Marnie were better at it, although they might both do better if both were submissive to another Dominant like Sherry and Manuel. She asks his opinion as if she wants it, but then ignores his decisions or wishes when he provides them. He doesn't know what to do; be stronger and back his decision or opinion, or cave when she applies pressure on him. It probably makes him miserable, but he doesn't know how to get out of it. That's my opinion, Mistress.\"\n\n\"I trust your opinion. What should I say to Richard?\"\n\n\"Ask him what he wants, Mistress. Would he be happier if Marnie just took control and made all the decisions? Tell him it doesn't matter what the rest of the world thinks if this is what he wants. You'll love and support him no matter what he wants to do. If this is what he wants, you'll speak to Marnie and see if she can be a better partner for him if he wishes to submit to what she wants. Right now, she's just confusing him, but his life and marriage could be better if she didn't confuse him anymore.\n\n\"If that's what he wants, then have a heart to heart with Marnie. First, prove to her she's almost as submissive as Richard is, and if she's not careful, someone's going to come along and put her in a collar. I think that will shake her, and give you some latitude to teach her what she needs to do to be a better Dominant to your son. There may be a little pain along the way. I really do think she'll end up fucking someone else on this trip and I don't know how Richard will take that. It might be part of what you'll talk to him about. If it happened, would he be upset, or relieved. At least he'd know. Right now, she's planning on fucking someone else and he doesn't know it's going to happen. That's what she's hoping by encouraging him to join the contest and saying she wants to be a prize. She knows she'll get fucked and thinks he won't due to the odds.\n\n\"I think we could make his surrender a little more palatable for Richard. Don't tell him, but I'll encourage all the women to vote no lower than third for Richard, secretly of course. He may not end up in third, but he'd likely be one of the winners, so he ends up with someone. I could speak to the men participating and ask them to choose any of the other women first, so Marnie is the last one chosen. That means, she'll get knocked down a peg and fucked the least and will feel less attractive and less in charge. It would be righteous if Richard ended up fucking the little tart himself. Perhaps, since she's so adamantly opposed to sucking Richard's cock, the person who wins her could insist she suck his, perhaps even anal sex. This might tap into her submissive side.\"\n\n\"Thank you, Beth. I appreciate you doing this. I'll speak to Richard first, but I think I'd like you there to soften Marnie up if that's what Richard wants to do. If he doesn't, I don't know what he needs to do to add more spine.\"\n\n\"I don't either, Mistress. My belief is if he doesn't decide to submit to her, they'll be divorced within the year. He might as well do it now. That might not be a terrible tragedy if it's done before they have children. If he could find a real strong Mistress, he might do fine. If Mistress Layton didn't have three, she'd probably take him.\"\n\n\"We'd better head to lunch.\"\n\n\"Yes, Mistress.\"\n\n******\n\nLynn sat with Bj\u00f6rn and they had some whispered conversations. She looked at her son. He really did seem confused. I could hear Marnie working on him to sign up for the contest and let her be a prize. He kept saying it was wrong, and to him it was, if he was the man in the family, but he wasn't. It was wrong of Marnie to be doing it this way though. Acting like it was his decision if they did it, but refusing to accept it when he said he wasn't interested, and just exerting more pressure on him to change his mind, so it would be him giving his wife permission to fuck someone else.\n\nAlexa was sitting next to me and taking it all in as well. \"She's acting like a bitch,\" she whispered, not understanding the dynamics, but knowing it was wrong.\n\n\"Your mother will talk to him after lunch. It will get straightened out.\"\n\n\"She should talk to Marnie instead of Richard. He's not doing anything wrong.\"\n\n\"No, he's not, but he is confused. Trust me. She'll speak to Marnie when it's time. She might speak to you as well.\"\n\n\"Why me? I haven't done anything.\"\n\n\"You haven't but she might have some good advice for you.\"\n\n\"What kind of advice?\"\n\n\"You'll know when you talk to her. By the way, you should know you'll probably be the first one chosen tonight. If Marnie gets added to the prize pool, you'll get 75 minutes of primo fucking.\"\n\n\"Why me. I'm probably the least accomplished fucker on board. I'm certainly the youngest.\"\n\n\"Fresh meat. Men like fresh meat and young pussy. Most of them have fucked all of us and the newest have fucked at least one of us. No one knows much of anything about you, except you're young, pretty, and fresh. You're the only ginger on board other than your mother, and she doesn't fuck anyone but Bj\u00f6rn and other slaves. You'll be gone on Sunday and they can go back to fucking anyone else. Don't imagine for a second almost every man aboard wouldn't like to shove his cock in that tight, red haired cunt of yours.\"\n\n\"Which ones wouldn't?\"\n\n\"I suspect Bj\u00f6rn because of his relationship to your mother, and your brother, because it's illegal. Manuel was given permission to fuck you if he won. He asked Lynn if he could because he knew you were one of the prizes. Your mother said he was a good lover and if you were going to get fucked, it should be by someone good.\"\n\n\"She said that?\"\n\n\"She accepts you're a grown woman now and capable of making your own decisions. She realizes her own life has taken some unusual twists and she's not going to stand in the way of you finding out what's out there.\"\n\n\"Wow. She and I used to fight about everything.\"\n\n\"There's a reason for that.\"\n\n\"What is it?\"\n\n\"I'll let your mother tell you.\"\n\nAfter lunch, Lynn asked Richard to join her in the Captain's cabin. Bj\u00f6rn, Manuel and Sherry joined them. At least Marnie couldn't pull her little games on him while he was gone. Marnie asked if she could use the spa on the top deck or play some pool. Since I expected to go with her to speak with Lynn later, I joined her. Roberta and Sahar were both soaking naked after a hard workout. I could see bruises from their hand-to-hand combat lessons. Marnie and I both stripped off our clothes and joined them.\n\nSahar and Roberta were aroused by the battle and kissing and stroking some under the water. With air this cool, no one wanted to sit on the edge of the spa for oral sex, or drown if they tried the alternative. Both of them climaxed once before sitting back and just letting the warmth and bubbles wash the pain away. I leaned over and kissed Roberta and then whispered in her ear, \"Play along with me a little, would you?\" I then kissed her again to hide her nod, then leaned back.\n\n\"So Marnie, had you ever been with a girl before today?\" I asked.\n\n\"No. I guess I thought it would be better, you being a woman yourself, that you'd know your way around a woman's body better.\"\n\nSahar and Roberta looked at each other.\n\n\"You didn't like Beth's cunt licking?\" Sahar asked, amazed.\n\n\"It was nice. I mean it was better than my husband's, but like maybe five or ten percent better, not scream my head off, out of this world better. The way everyone described sex with her, I thought I'd find God in one of her orgasms.\"\n\nJust what I was hoping for, a little better than Richard.\n\n\"Maybe Richard is that good,\" I said.\n\n\"He's not bad. He gets enough practice,\" Marnie said. \"He usually gets me off two, three times a day.\"\n\nAnd I was sure he might get off two or three times a week in recompense, maybe less. Great trade off. The only reason Master didn't get off as much as I did, was because it was physically impossible. It wasn't from lack of trying. Lynn might get off more than Manuel, but Manuel was cumming several times a day in his fianc\u00e9e and his Mistress. Men weren't made for more than that.\n\n\"You know, if you want to be a prize tonight, you have to expect to get fucked in any one of your holes,\" I said. \"It's the guys choice.\"\n\n\"Not just vaginal sex?\"\n\n\"Oh, no. The men all expect a three hole slut. And once they cum in you, you have to clean them off afterward. Even if they cum in your ass, you're expected to suck them clean.\"\n\n\"You're joking?\"\n\n\"No, not joking at all. If someone fucks me in the ass, I'll be sucking them afterward. We don't do it every time, but it happens quite frequently, isn't that right, Roberta?\"\n\n\"That's right. I've seen it a couple times myself. Of course I don't see all of Beth's fucking, so I couldn't say how many times she's done it, but quite often.\"\n\n\"Have you seen it?\" Marnie asked Sahar.\n\n\"I never watch her fuck men. I have no interest in it. Don't give a shit about men. That's why I'm on watch tonight. Don't care if men take off their clothes. I'd be happy to see a show of women stripping.\"\n\n\"You don't have to sign up to be a prize tonight,\" I said, \"if you don't think you're up to it. Of course, if you sign up, we'll have to add another category. The fourth place runner up will get fifteen minutes, the third place runner up gets thirty, the second runner up gets forty-five, second place gets an hour and the winner will get seventy-five minutes. If any of these guys get you for forty-five or more minutes, they'll probably fuck all three of your holes before they're done. Little oral action to get them started, then a good hard cunt fucking. Suck them clean to get them hard again, ream your ass and suck them to a final orgasm. All the guys are much better lovers, aren't they, Roberta?\"\n\n\"Hell, yes, much better. Have you seen the cocks on Shed and Manny? God, those fuckers pack some heat.\"\n\n\"Mac too. Just did Manny this morning. Thank God he didn't put that salami in my ass. He'd have wrecked me for a week. Maybe you'll get lucky and only get picked for fifteen or thirty minutes. They'll be lucky to use two holes in that amount of time. Maybe your ass will be spared.\"\n\nThere was a call on the loudspeaker. \"Marnie Farber, Beth Wilson, please come to the Captain's cabin.\"\n\n\"Gotta run gals. It's been fun. Talk to you later,\" I said, getting out of the pool. \"Let's go, Marnie.\"\n\n\"Why's the Captain want to see me?\"\n\n\"Don't know, don't care. Probably not a good idea to keep him waiting.\"\n\nI was dried and dressed before Marnie. I kissed Roberta again. \"Thanks, I have a favor to ask, I'll call you later,\" I whispered. Another kiss and I was gone, hauling Marnie with me.\n\nWhen we reached the cabin and knocked, Bj\u00f6rn let us in. Lynn, Manuel and Sherry were all there, dressed. Both Manuel and Sherry were in the Display position when I arrived, modified so there hands were behind their backs instead of their heads, so I adopted the same position until I knew what was going to happen. Bj\u00f6rn stood in front of his door, the only exit out.\n\n\"What the fuck are you doing to my son, you cunt,\" Lynn said.\n\n\"I'm not doing anything to Richard,\" Marnie protested.\n\n\"Bullshit! You're trying to make a cuckold out of him. How many other men were you planning to fuck this trip? How many other men have you fucked before?\"\n\n\"I haven't fucked anyone else but him.\"\n\n\"But you plan on doing it now, don't you, you slut.\"\n\n\"Not at all.\" Lynn just stared at her, tapping her foot. \"Well, maybe tonight I would have had sex with someone else, but he could too. It's up to him. I won't do it unless he says he wants to.\"\n\nLynn pulled out one of her whips she used on Manuel and Sherry. \"You know what I think, you cunt slut. I think you're a lying piece of trash. You say it's up to him, but when he says no, you keep on him, pestering him constantly, trying to get him to change his mind. A devious cunt like you thinks as long as he gives you permission, you can fuck anyone you want. So you'll badger hell out of him and withhold your sexual favors until he gives you permission, isn't that right, slut?\"\n\nMarnie started shaking, but kept her mouth shut. She was thinking if she told the truth, she might find out what getting whipped felt like and if she lied, she might feel it too, so she shut up.\n\n\"Answer me, bitch. You're chosen as a prize, you're sure to get a good fucking and with my son's permission, you conniving slut, and maybe, maybe, he's got a one in eight chance of winning someone else. You get to fuck around without any repercussions to yourself, maybe not even watching Richard getting to fuck another woman. You can fuck right in front of him and say, 'hey, he agreed to this'. Then, the dam broken, you think you can fuck a couple more studs. Isn't that one of the reasons people go to weddings, to fuck around? Answer me, slut!\"\n\nShe still didn't speak, her eyes on the whip.\n\n\"Why my son married you, I have no fucking clue. You disgust me. Strip, NOW.\"\n\nManuel, Sherry and I all removed our clothes hastily. A Mistress says strip with a whip in her hand, you strip.\n\nMarnie stood still shaking, not moving except to shudder.\n\n\"Do you think you're better than these other slave bitches!\" Lynn shouted. \"If you don't have your clothes off in fifteen seconds, I'm going to whip your cunt so hard it will hurt to piss for a week.\"\n\nMarnie shed her clothes so fast she could have broken a record. I swear it didn't take seven seconds for her to remove shoes, socks, shirt, pants, bra and panties. Then she stood with both her hands clutched over her cunt.\n\n\"Please don't hurt me.\"\n\n\"That depends. You're going to be a prize tonight, just like you wanted, but it will be as a three hole slut slave. I'm going to write in magic marker on your ass to fuck here, and have arrows pointing to your tight little asshole, and fuck here on your face with an arrow pointing to your lying, bitch mouth, and another arrow pointing to your cunt, saying 'Ignore this slut cunt'. But you're going to need to be trained as a three hole slut slave. Get on your hands and knees and pull your ass cheeks apart for me so I can put a fucking big ass plug in you skanky ass so some of these big cocked fuckers can shove it up there. What are you waiting for, Christmas? Get on your damn knees now.\"\n\nMarnie whimpered and got on her hands and knees, then pulled her ass cheeks apart.\n\n\"Manuel, hand me that big two inch plug, please.\"\n\n\"Yes, Mistress.\" Manuel proceeded to look for the plug.\n\n\"You lying cunt, did you hear what Manuel called me. You're going to call me the same thing from now on. Every time you see me from now until you die, you will address me as Mistress Farber. Do you have any question about how you should address me. I will address you as Lying Skank Slut. Answer me!\"\n\n\"Yes, Mistress Farber.\"\n\n\"Good. Have you found the plug yet?\"\n\n\"I'm sorry, Mistress. I could only find a two and a half inch plug and it has a tail on it. I think the two inch is in Sherry's ass.\"\n\n\"Fine, we'll use that. A half inch can't be that much of a difference can it?\"\n\n\"It's much bigger, Mistress. It will hurt substantially more.\"\n\n\"I'll give you a choice, Lying Skank Slut, do you want me to pull the two inch plug out of Sherry's ass and have you lick it clean so I can stick it in yours, or do you want the two and a half inch plug with the tail.\"\n\n\"The two and a half inch plug with the tail, Mistress Farber, please.\"\n\nOh, Lynn was so good. I bowed to her brilliance.\n\nLynn lubed the plug up real good, and stretched out Marnie's tight little anal ring real well with two, then three fingers, before shoving the plug in her rectum. Marnie groaned when it went in. She now had a tail sticking out of her ass.\n\n\"Now, since Richard said this lying bitch princess rarely sucked his cock, she's going to need lots of cock sucking practice before the show tonight. Bj\u00f6rn, we'll let her start with you because I love you so much, honey. Happy Wedding present.\"\n\n\"Thank you, love. Don't mind if I do.\"\n\nBj\u00f6rn remained where he was, so Marnie would have to move to him. When she tried to stand up, Lynn smacked her ass with her hand and told her to crawl. Marnie crawled to Bj\u00f6rn and stopped in front of him. He didn't move.\n\n\"It's not his job to give you his cock, Lying Skank Slut. It's your job to lovingly remove it from his pants. You will suck on his dick, getting as much of it down as you can, and when he cums, you will swallow every drop. I will whip your ass once for every drop that doesn't go down your gullet. Are we clear?\"\n\n\"Yes, Mistress Farber.\" She knelt up and unzipped his pants, removing his cock. She gingerly took it in her mouth and started sucking. She hadn't gotten much practice on Richard, she would need a lot more.\n\n\"Beth, could you do me a favor, honey?\"\n\n\"Anything you wish, Mistress.\"\n\nShe handed me a Hitachi wand. \"Lying Skank Bitch wanted to turn my son into a cuckold by getting him to agree to her fucking by someone else. I want you to edge her until she begs to be fucked. She won't have received Richard's permission for any of it. Any problem?\"\n\n\"No, Mistress. No problem at all.\"\n\nAs she sucked on Bj\u00f6rn's cock, I edged hell out of her. She sucked him dry once, and was well on her way to draining him again when she'd had enough.\n\n\"Someone, please fuck me. Let me cum, Mistress Farber.\"\n\n\"Manuel, you want to take Lying Skank Slut's other hole and give her some relief?\"\n\n\"With pleasure, Mistress.\"\n\nThe second he slammed his cock in her cunt, Marnie shivered in climax. She climaxed three more times before Bj\u00f6rn exploded another load in her mouth.\n\n\"Beth, did Lying Skank Slut lick anyone's cunt today?\"\n\n\"Not to my knowledge, Mistress. She said her reward from me was her first time with a woman\"\n\n\"That's a pitiful excuse of a slave who doesn't know how to lick another slave's cunt. Sherry, why don't you let Lying Skank Slut lick your cunt while Beth edges her again until Bj\u00f6rn is ready to fuck her.\"\n\n\"Yes, Mistress, thank you. May I have permission to cum?\" She was already positioning herself in front of Marnie.\n\n\"Cum all you want. I want her face drenched in girl cum. It will be awhile before Bj\u00f6rn is ready to fuck again anyway.\"\n\nMarnie lapped Sherry's cunt for over a half hour, all the while I edged her. She was begging to be fucked again after fifteen minutes, but Bj\u00f6rn wasn't yet ready, so Marnie suffered. She pleaded to cum, by any means necessary. Everyone ignored her. Sherry grabbed her hair and told her to quit begging and keep licking, she was a pitiful excuse of a slave.\n\nBj\u00f6rn was finally ready again. Just like with Manuel, she orgasmed the second he plowed into her dripping wet pussy. Every time she quit licking Sherry while Bj\u00f6rn fucked her, Sherry yanked on her hair and told her to pay attention to what she was doing. Bj\u00f6rn was able to fuck her a long time and Marnie was cumming like crazy the whole time. Finally, Bj\u00f6rn orgasmed, pumping another load of cum into Marnie's frothy, furry cunt. Bj\u00f6rn took Sherry's place so Marnie could lick the cum off Bj\u00f6rn's cock and balls. Marnie herself wasn't cleaned up after either of the two times she was fucked, so cum was now running down her legs.\n\n\"Stand up, Lying Skank Slut. You've now violated your marriage vows twice without Richard's permission by begging to be fucked, proving you're the disgusting slut whore I thought you were.\" Marnie stood and put a hand up to wipe at Sherry's fluids coating her face from nose to chin and cheek to cheek. \"Put your hands down, bitch! How will everyone know what a disgusting piece of lying whore you are without the evidence on your face. The rest of you can get dressed, but Lying Skanky Slut will remain naked.\"\n\nMarnie quickly dropped her hand. Lynn put a collar around her neck and padlocked it on. She attached a leash to her collar and handed the end to me. The other slaves dressed.",
        "\"This slut will take a lot of work to make her a proper slave. Please take Lying Skank Slut around the ship. Every time she meets anyone, man or woman, she's to drop to her knees and ask whoever if they'd like to pay to be sucked or licked to an orgasm. When they ask how much it costs, she's to say two bits. If they pay a quarter for her services, they may purchase them. If they ask how much to fuck her, it's fifty cents. Her cunt doesn't get cleaned no matter how many men cum in it. It might get so disgusting they only want to use her mouth. I want the evidence of her whorish behavior to dry on her skanky cunt. If she climaxes while fucked, since there won't be a Dominant to give her permission, she's to receive ten swats with your hand.\n\n\"She's not to clean her face until I give permission. While she's performing her whore duties, edge her with this vibrator.\" She handed me a battery powered wand similar to the Hitachi. \"She's not to have permission to cum until she can deep throat a cock as big as her husbands. When she finally deep throats one that large, she's to beg to suck Richard to an orgasm. He doesn't have to pay since he's her husband. When he orgasms, he's to pull out and spray his load all over her face. She's to thank him for the gift of cum on her face, where it will stay until it's time for dinner. Then, she may shower and dress in something that shows her slave tits. Manuel, I'm giving you this paddle.\" She handed him a large, broad, leather wrapped paddle. \"Every time she neglects to get on her knees and ask someone she meets if they'll pay for her oral services, smack her ass until she does.\"\n\n\"Of course, Mistress. Your wish is my command.\"\n\n\"Do you understand what you're to do for the next several hours, Lying Skank Slut?\"\n\n\"Yes, Mistress Farber. It's quite cold outside without clothing. May I be permitted to wear something to keep me warm?\"\n\n\"Not unless the temperature drops below fifty, then Beth will find you something sufficiently slutty for a whore like you. You might want to start down in the gym, there's usually a large number of people there who you can service. The faster you learn to deep throat and beg for your husbands cum on your face, the sooner you'll be done. Now get your lying ass out of my sight.\"\n\n\"Yes, Mistress Farber.\"\n\nShe scurried out of the Captain's cabin and I led her down towards the gym. On the way, we met one of the new guys, Jerry, former Army Ranger and one of several blacks on the crew.\n\n\"What do we have here?\" Jerry asked, seeing the naked girl on a leash.\n\n\"A two bit whore,\" I replied. \"Don't you have something to say, Lying Skank Slut?\"\n\nShe looked up at the imposing black man and dropped to her knees.\n\n\"Would you be willing to pay me for my cock sucking services, sir?\"\n\n\"How much?\"\n\n\"Two bits.\"\n\nHe laughed. \"You weren't lying about the price then,\" he said to me. \"Sure, I can afford a quarter for a blow job. Who do I pay?\"\n\n\"That would be me,\" I said. \"As you can see, she has no pockets to keep her funds in.\"\n\nHe handed me a quarter and pulled out his cock. It looked slightly smaller than Master's. I suspect it was the first black cock she'd ever seen unless she'd watched porno. She gingerly wrapped her hand around it and lifted it to her lips. Her mouth opened and she started to accept the head. Finally, she started bobbing up and down on the top two inches of his eight inch prick. I started edging her pussy again.\n\n\"Can she take it any deeper?\" Jerome asked.\n\n\"Not yet. That's why she only costs two bits. She has to keep doing this until she can swallow one whole, so why don't you check back with her in an hour and see if you notice any improvement. She has to swallow every drop of your cum.\"\n\nGetting used to sucking on a total stranger's cock, Marnie grabbed hold of his hips and tried forcing more of his cock down her throat. This couldn't end for her until she did. When she reached her gag reflex, she started choking and had to back off. Occasionally, she'd give it another college try, but never got more than four fat inches into her mouth. I wasn't going to give her any tips until she'd sucked quite a few more.\n\nAfter ten minutes of her slobbering over his knob, he grunted and expelled a heavy load into her mouth. She frantically swallowed trying to get every drop.\n\n\"Worst blow job I ever had. No wonder it was only two bits.\" He walked off leaving her on her knees.\n\nShe stood up and we continued to Master's cabin. Even though it wasn't yet below fifty, there was a stiff breeze and I could see goose bumps on Marnies naked flesh. I thought I'd give her a small shawl to help keep her somewhat warm. It wouldn't cover anything important. Miranda and Francesca were on the bed having sex when we arrived. They were surprised to see Marnie in a collar and leash with a tail stuck in her ass, not knowing what had occurred thus far.\n\nI dropped her leash and went to Master's closet where I kept the few clothes I was allowed to wear. Before I found it, I heard a loud smack. I stuck my head out and saw Marnie getting onto her knees.\n\n\"Would you be willing to pay for my cunt licking services,\" she whimpered, rubbing her ass.\n\n\"How much?\" Francesca asked, Miranda's cum on her face. \"I've got a pretty good cunt licker right now in Congresswoman Ward.\"\n\n\"Two bits.\"\n\n\"Why so cheap?\"\n\n\"I'm not very good.\"\n\n\"So you need to get better do you. Who's cum is on your face now?\"\n\n\"Sherry's.\"\n\n\"Sure, I'll contribute to your education fund.\" She scooted to the edge of the bed and spread her legs.\n\n\"You should probably pay in advance,\" I said. \"You may not feel she's worth it when she's done.\"\n\nFrancesca laughed and got a quarter out of her purse. She gave it to Marnie and sat down again. Marnie began licking. I began edging. Marnie began moaning.\n\n\"She's better than I thought she'd be.\"\n\n\"Sherry tried to keep her focused on her cunt licking while Bj\u00f6rn was fucking her skanky cunt,\" I said.\n\n\"If she's worth two bits, I'll pay a quarter,\" Miranda said, getting money out of her purse and sitting beside Francesca.\n\nThey kissed and fondled each others breasts as Marnie worked her magic. It took her maybe five minutes for Francesca and seven for Miranda, but they'd been engaged in sex before we came in and continued playing during, so I wasn't surprised. Before we left, I handed her the small shawl and she looked gratefully at me. I took the money she'd earned and put it in my pocket with the first quarter.\n\nWe made it all the way down to the gym this time and there were quite a few people down there working out, both men and women, some boxing, some on the bags, some on the machines, some lifting weights, some on the gun range. They all stopped what they were doing when Marnie entered the gym naked and on a leash with a tail stuck in her ass. The new guys hadn't really been around when seeing naked slaves moving about the ship was a common occurrence. The guys who'd been around since the beginning, hadn't seen much of it since we started freeing involuntary slaves.\n\nMarnie walked up to the first one she saw, Oz, dropped to her knees and offered to suck his cock for money.\n\n\"Is this someone we can accept sex from,\" he asked me. \"I don't want to step on anyone's toes like Andy.\"\n\n\"No, this whore was hoping to get fucked. She has no skills though, so her Mistress is trying to improve them.\"\n\n\"How much, whore?\"\n\n\"Two bits, sir.\"\n\n\"Hell, at that price, I'll buy your services for everyone in the gym.\" He started counting the bodies working out. \"Is it the same price for the women?\"\n\n\"Yes, sir.\"\n\n\"How much to fuck you?\" Shed asked. \"You probably can't swallow my cock anyway.\"\n\n\"Fifty cents, sir,\" Marnie said.\n\n\"She gets punished if she comes though,\" I told Shed. \"Ten swats for each orgasm.\"\n\n\"You're going to have a very red ass when I'm done with you.\"\n\n\"How many of you boys want to fuck her?\" Oz asked.\n\nSix guys raised their hand. \"Let's see, six fucks is three dollars, four blow jobs is another buck. Are all you ladies in for an orgasm?\"\n\nKelly, J\u00ecngyi and Sahar all said they were in. \"Another seventy-five cents for them. Here's four dollars, seventy-five cents. If you're sufficiently pleasing, I'll tip you another quarter for an even five. Who wants to start?\"\n\n\"If she's going to be sucking and fucking, there's no reason she can't take two at a time,\" Chaney said. \"I've seen Shed's cock, I say he and Manny go last, or she won't be able to feel anyone else fucking her. Other than that, I don't care if I'm first through fourth. I don't mind taking sloppy seconds or more.\"\n\n\"Well, since I'm paying, I'm going to go first.\"\n\nOf course, Chaney wouldn't. Oz started with her face and Fermin shoved into her cunt. Since I'd edged her several times this morning, she was on a hair trigger and climaxed right away, especially with the plug crammed into her backside, since she'd never been so full in her life.\n\n\"That's ten swats,\" I warned her. \"Remember that every time you need to cum and try to hold out better.\"\n\nMarnie shivered. She managed to hold out the rest of Fermin's fucking, both of the men cumming at roughly the same time, sending more cum down her gullet and into her sopping pussy. Since it was a natural break, I spanked her ass ten times. I went fairly easy on her. For one thing I wasn't a Dominant.\n\nKelly took Oz's place on her mouth and Buck took her cunt. Marnie climaxed after a couple minutes of Buck's fucking. I warned her that was another ten and Marnie groaned into Kelly's cunt. Buck climaxed a few minutes before Kelly did, and Chaney lined up next.\n\nWhen Chaney pushed in, he pushed a quarter cup of white cream out of her. \"What a nice, hot, creamy cunt she has,\" Chaney said. \"What's this whore's name anyway?\"\n\n\"You can call her Lying Skank Slut,\" Manuel said.\n\n\"Isn't this Lynn's daughter-in-law?\" Jake whispered to me, next in line for Marnie's mouth.\n\n\"Yes, she is,\" I told him, \"but she wasn't being nice to her husband. It's being corrected now.\"\n\n\"By having her fuck who knows how many people?\"\n\n\"She was planning on fucking other people anyway, hoping to get her husband to agree to it. The choice has been taken out of Richard's hands for a good reason. Don't worry about it. You're not hurting Richard at all. His mother had a talk with him first. He's a little like Dominique's husband, Gaston.\"\n\n\"Oh, wow.\"\n\nKelly finally orgasmed and Jake took her place. He was a little bit larger than Richard.\n\n\"Jake is only a little bit bigger than Richard, Lying Skank Slut,\" I said. \"If you can get most of his cock into your throat, you might be able to get all of Richard down.\"\n\n\"Force me,\" Marnie moaned. \"Face fuck me, jam your dick down my throat.\"\n\n\"Don't asphyxiate her,\" I warned Jake as he shoved his prick into her mouth. He started face fucking her trying to get more and more of his cock down her throat. Every time she started gagging, he eased up.\n\nChaney had finished, adding more cum to her swampy pussy. I gave her the additional ten spanks she'd earned by cumming on Buck's cock, and Mac took Chaney's place at her pussy. \"Can this skanks cunt be wiped off. She's leaking cum everywhere.\"\n\n\"Her Mistress wants to leave it there so everyone knows what a whore she is,\" Manuel said. \"Sorry.\"\n\n\"Oh well; I could have signed up to go first.\" He pushed in through the huge cream pie in her pussy, pushing bunches of it out to run down her leg.\n\nMac was among the larger cocks on the ship and Marnie squealed over Jake's face fucking when he pushed into her well fucked pussy, orgasming when he hit bottom. \"Ten more,\" I warned, and Marnie moaned, her bottom already red.\n\nDespite Jake's attempts to get all of his dick down her throat, Marnie only got five and a half inches down, better but no cigar. He added his cum to the amount Marnie had swallowed already. She choked down the massive load he was swamping her mouth with. Sahar took his place.\n\n\"You complained Beth is not a good cunt licker,\" she scoffed. \"You're not half as good as she is on a poor day. Everyone licks cunt better than you do. What kind of a slave are you? Do better. Ignore your fucking and pay attention to my cunt, girl.\"\n\nSahar was the only one who hadn't called her a slut or whore and I could see Marnie trying, but she'd been sensitized to fucking all afternoon and she was struggling not to cum again. It left her concentration in too many places at once. Mac got energetic and really started plowing her pussy. Marnie orgasmed again, moaning even before I told her she was up to twenty. She didn't finish off Sahar until I started in on her spanking.\n\n\"Beth licks cunt better even when she's being spanked, girl. Pay attention. Your ass will be back to normal in an hour or two. Those are love taps.\"\n\nManny was the next one to line up on her pussy. I considered Manny one of the four largest cocks on the ship, along with James, Mac and Shedrick. Marnie gasped when he split her pubic lips and shoved inside her well fucked sheath. He easily bottomed out she was so full of cum and Marnie climaxed again after a couple thrusts. Sahar finally got her orgasm.\n\n\"You need proper cunt licking training,\" Sahar said as she adjusted her clothing.\n\nJ\u00ecngyi replaced her. I noticed that J\u00ecngyi was still keeping herself shaved as she had ever since the Nyotaimori. It was handy for clean up after sex.\n\nManny ramped up his fucking, fucking her like a piston, several drops of cum squeezing out of her pussy with each pump. He was ramming her so hard she couldn't hang onto J\u00ecngyi's slim hips. She moaned as she felt another explosive orgasm building up inside, trying to suppress it to save her sore ass. She failed. Manny had to cum before she could continue licking J\u00ecngyi. After Manny pulled out, I gave Marnie twenty more swats. They'd been spaced out nicely by the fucking, so her ass cheeks weren't too bad, but they were definitely red, approaching tomatoes. She yipped with each of the last five swats.\n\nShed squeezed into cum drenched cunt, the last of the men who'd paid to fuck her cunt. He went the opposite of Manny, going nice and slow. I love a nice slow fucking and so did Marnie, especially on someone as thick as Shed. While he fucked her slow, he played with her clit fast and she orgasmed two times on his thick prick before she was able to get J\u00ecngyi off. Frankfurter took her place.\n\nMarnie had been on her hands and knees for ninety minutes. Despite her kneeling on a mat, her knees were sore. Her mouth was sore, her throat sore, her pussy sore. But Shed was relentless.\n\n\"This is another good sized cock to practice on,\" I said when Frankfurter thrust into her gasping lips. \"Get him all down and you can suck your husband off.\"\n\n\"Face fuck me,\" Marnie panted, getting close to another orgasm.\n\nFrankfurter did his best to get all of his prick down her, but she still had an inch to go before Frankfurter spasmed, shooting his goo. Shed was still fucking her nice and slow, and without anyone else in her face, she could enjoy every second of his non-stop fucking. She climaxed three more times before his finished hosing her cunt with another gigantic load of cum.\n\nCum had run all the way down to her knees in thick white rivulets. Her tail was coated in more of it, dangling between her legs when someone wasn't holding it up for her fucking. Her face was a disaster. The only place not to have girl cum on it was around her eyes and forehead. All in all, she looked a righteous mess. She'd cum five more times on Shed's cock and diddling fingers and she knew she had fifty more swats to go. As much to save my hand as her ass, I told her I'd do half now and half in fifteen minutes before we went looking for more johns for her to fuck and suck.\n\nShe nodded wearily. I gave her twenty-five more. A couple more people came down before I finished. Jerry had come back for seconds and brought Palmer with him. They both gave me a quarter. Marnie groaned.\n\n\"Give us a moment guys,\" I said. \"She needs to get off her knees for a few. She'll be ready in ten minutes, okay?\"\n\n\"No problem,\" Jerry said. \"Is she getting better?\"\n\n\"She might be able to take Palmer, but you might be trickier,\" I replied.\n\nI helped her to her feet and we started walking around. \"How are you doing?\"\n\n\"I'm so tired and sore.\"\n\n\"I'm sure you are, especially not being used to it, would you like to know how to swallow a cock?\"\n\n\"You can teach me?\"\n\n\"I've taught others.\"\n\n\"What do I need to do?\"\n\n\"The gag reflex is partially suppressed by swallowing. It's like taking a bite of a thick, juicy steak. You can swallow it without gagging, right?\"\n\n\"Yes.\"\n\n\"As soon as you feel the urge to gag, start swallowing and keep swallowing. Not only are you suppressing the urge to gag, you're also helping to get that cock down your throat. Breathe through your nose as much as you can, come up for air when it's not enough or the cock is too far down your throat for even nose breathing to help. Get back on it as soon as you get a couple good lungfuls of air. It will get easier and easier every time you do it. We'll start out with Palmer, the white guy. He has the smaller prick and should be easier to get down. After we see how you do with him, you can do Jerry again. I guarantee if you get Jerry all the way down, your husband will be a snap.\"\n\n\"Why didn't you tell me this before?\"\n\n\"Because you hadn't earned the knowledge yet. You weren't a very nice person to a nice young man. Pleasant enough to everyone else, I suppose, but pretty shitty to the person you should be nicest to, your husband. You deserved this. Everything Lynn said was true. You wanted to make Richard a cuckold and you were trying to make him complicit in his own humiliation. It's not right.\"\n\n\"But he's a cuckold now. I've fucked eight other men today.\"\n\n\"But he didn't agree to it. You begged for it. You're the slutty whore. He didn't give you permission to be a slutty whore, you chose that yourself. I'm sure you'll learn more about what's going on later. This isn't over yet.\"\n\nShe nodded thoughtfully. We gave it another three minutes walking, then returned to the waiting two. Half the people had left, having other things to do. Some people were still exercising, not having completed their workouts. Sahar was back on the gun range. Palmer and Jerry were waiting with Manuel by the pool of cum on the mat.\n\n\"Palmer, let's start with you since you haven't had a blow job yet. Lie down on the mat about three feet away from that puddle of cum. Lying Skank Slut wants to try something different.\"\n\nPalmer did what I suggested, even pulling his half hard dick from his pants when he was on his back.\n\n\"He's not even fully erect yet. That should make it easier. Try to get as much of him down as you can before he's entirely erect. Remember, swallow when you start to gag and keep swallowing.\"\n\nMarnie nodded and got on her knees between Palmer's legs. She swooped in on his cock and started sucking furiously, trying desperately to get him all down before he grew. She did get him down, and even after he started swelling, was able to keep dropping all the way down over his cock, taking every inch in her throat. As I told her, it became easier and easier, the more she did it, automatically swallowing almost before she reached the point of gagging. It only took five minutes and she was swallowing another load of semen, her seventh of the day. She was trying to get her breath back when she finished, having to hold her breath a few times.\n\n\"I did it,\" Marnie said, grinning.\n\n\"The next one is harder, but the principles remain the same. Nice and easy, just like the last one except Jerry is a little longer and a little wider.\"\n\nJerry lay down in the same spot. I watched Marnie get started on him until she had all of his cock in her throat and was sliding rather easily up and down his shaft. When I saw that, I grabbed a couple of the towels and cleaned up the mess we'd left behind, Manuel helping me and smiling. We wiped down all the cum and sweat on the mat while Marnie finished the blow job. It wasn't the best one she'd ever give someone, but it was a lot better than the one Jerry, or anyone else, had earlier. Despite having cum earlier, Jerry surrendered his sack full of seed to Marnie's voraciously sucking mouth within ten minutes.",
        "\"What did you think, Jerry? Any improvement?\"\n\n\"Worlds of improvement,\" Jerry agreed.\n\nI whispered to Manuel as Jerry left. \"Do you know where Richard will be right now?\"\n\n\"He'll be in Mistress' room, Beth, waiting for us.\"\n\n\"Makes it easy, doesn't it.\"\n\n\"Yes, it does. Others will be there as well.\"\n\n\"Mistress put a lot of thought into this plan.\" I raised my voice. \"Get your ass in gear, Lying Skank Slut. I need to give you the rest of your spanking, then we need to find Richard. I want you to bend over the the power lift bench.\"\n\nShe meekly did as I requested and I laid the last twenty-five on pretty hard. I think my hand was hurting almost as bad as her ass was. I put the leash on Marnie's collar and we went to Lynn's cabin, ignoring everyone else we met along the way. I knocked and Lynn told us to enter. Richard was sitting on a chair. He looked at Marnie. She looked like what she'd done. Whored herself for two bits a pop. Alexa, Sherry and Lynn were sitting on the bed, holding hands.\n\n\"How many men did you fuck, Marnie?\" Richard asked.\n\n\"Eight.\"\n\n\"How many did you suck?\"\n\n\"Five, but I did two of them twice.\"\n\n\"How many women did you lick to orgasm?\"\n\n\"Six, Richard.\"\n\n\"Look at yourself. Your face is covered with cum. Your cunt is encrusted with both fresh and dry sperm. You've got a tail sticking out of your red ass, you're naked and in a fucking collar and a leash. You're a fucking whore, a fucking two bit skanky ass, lying, piece of shit whore.\"\n\nMarnie looked down at the deck and started crying, real tears, not crocodile. She looked up.\n\n\"I know, Richard. I'm sorry. I've been treating you like shit. I'm begging you to forgive me and let me suck your cock. You can cum in my mouth. I'll swallow it. Please Richard. I don't know what Mistress Farber will do to me if you won't let me suck your cock.\"\n\n\"Just like the other five men? You're going to suck me just like the other five men you sucked this afternoon?\"\n\n\"No, Richard. I'm going to suck you better than any of the other men. You'll get the best blow job I can give. I'll lick your balls. You'll cum so hard. Please, Richard. Let me make it up to you.\"\n\n\"Go ahead. Suck it. If you suck it half as well as Beth did this morning, I'll forgive you. If you don't, I never want to see you again.\"\n\nShe looked at the rest of us, who were waiting to see what she'd do. \"Go ahead, Marnie,\" I said. \"You should know what to do by now. Give Richard the very best blow job you can.\"\n\nShe dropped to her knees and crawled across the floor to her husband. She undid his belt, unzipped his fly and lowered his pants to the floor. She almost started sucking his cock, but stopped. She removed his shoes and socks, then pulled his pants off and folded them neatly. She pushed his legs apart and began to copy what I'd done this morning. She didn't do it perfectly, because she didn't know what she was doing, or why, but she spent time duplicating every move, every kiss, every lick I'd used on Richard. After she'd spent ten minutes doing the build up, she lowered her mouth over his shaft, and cupping his sack, bobbed up and down his stiff pole.\n\nIt was, I thought, a very credible effort. She even noticed when he was about to cum and leaning back, stroked his cock the last couple caresses needed to get him to shoot his cum all over her face. His hips weren't as far off the chair as I'd brought them. He wasn't groaning quite as loud, but he left a righteous mess on her face. She'd promised to swallow, so she scooped it off her face with her fingers and shoveled it into her mouth and swallowed. It looked like she'd missed some that dripped off her chin and onto her breasts and the floor, but she scooped those few drops as well and licked it off her fingers.\n\n\"Was it enough, Richard? Will you forgive me?\"\n\n\"I'll forgive you, Marnie.\"\n\nLynn stood up and clapped her hands to get everyone's attention. \"Children, listen up. Beth's survey she gave you helps determine whether or not you have a Dominant or submissive personality. Richard, through no fault or error of yours, you are submissive; possibly the most submissive man on this ship at the moment. Alexandra, you are Dominant, whether you know it or not. In all probability, now you've been exposed to it, you might find it coming out of you more and more. Beth has speculated that it might be part of the reason you and I struggled so much when you were growing up. Marnie, do you have any fucking idea what you are?\"\n\n\"Aren't I submissive, Mistress Farber?\"\n\n\"You're submissive to me and probably most other Dominants, but you aren't submissive in the sense Richard is submissive. Do you know what a Switch is?\"\n\n\"No, Mistress Farber.\"\n\n\"A Switch is someone who goes from Dominant to submissive and back. When exposed to someone like Richard, who's naturally meek and seeking approval, your Dominance comes out. Because you'd never been exposed to Dominance and submission, you didn't know what to do or how to behave. Instead of just ordering Richard to do what you wanted, you'd play mind games with him. Part of this is you were both raised with a certain set of societal expectations. Richard thought he should be the man of the family, the breadwinner, the decision maker, but he is ill equipped to handle those roles. It's not in his nature. This is not a negative reflection on him. It does not make him less than what he thinks he should be.\n\n\"As you've seen yourselves, Sherry is a very capable and intelligent nurse, Manuel is a former Navy Corpsman combat medic and Physician's Assistant. Representative Ward is a highly respected member of the US House of Representatives. There's nothing wrong with being submissive. Some people are and some aren't, like being born a man or a woman. I love Richard and don't think less of him because this is true.\n\n\"A switch is someone who's Dominant toward more submissive people and submissive to more Dominant people. You may have a preferred role, but you can go either way. Beth believes you tend to lie on the submissive side of the Switch category. When you should have told Richard what you wanted and your expectations, you gave him a false choice, saying it was his decision if something were to happen, but then continued pressuring him to do what you wanted in the first place, leaving an illusion of choice and making him feel he was responsible if he agreed to let you fuck someone else, when he had no choice at all. Here's what's going to happen, and I'm telling you this as your Mistress. I've already proved to you, you'll do whatever I tell you to do because I'm the most Dominant person in this room.\n\n\"I spent quite some time with Richard discussing what he wanted out of his life and marriage to you. I would have supported whatever he wanted for himself. He has decided he'd prefer to be your submissive. He'll surrender his will to you much as Manuel and Sherry have to me and Beth and Miranda to their Master, Joshua. But you don't know Jack Shit about being either one. I've showed you what being a submissive is like. Now you need to learn how to be properly Dominant. I don't have time to teach you in the time we have left together. I have too much wedding planning to do before Saturday. Joshua is going to train you, just as he trained me when I started down this path. But, there are certain rules you will comply with as my slave, because that is what you remain. You will be mine as much as Richard is yours.\n\n\"Number one, you may take other lovers in the future; your right as the Dominant in this relationship. You won't ask Richard for permission. You'll tell him what's happening, but they will never be anyone who will embarrass or humiliate Richard, like his boss or coworkers, or his friends, or any asshole who wants to shove his face in his submission. You'll need to be discrete and careful. He may watch you fuck other men if he wishes, but you won't force him to watch. In return, you will give him permission to fuck other women once a month, someone who you choose for him. They don't have to be models, but they won't be bag ladies you find on the streets, either. He will try to protect your reputation as you protect his. Number Two, starting tomorrow, you will surrender your mouth, your cunt and your ass to him every day. Just because you're getting the sex you want is no reason to deny him the sex he wants and needs. You can fuck him more than three times a day, but you'll never fuck him less. I don't care if you have a headache, menstrual cramps or what your issues are. If you're not in the hospital, you will fuck him. Richard's sex drive will likely increase as a result of his submission as it has all the other slaves on board and he'll have no difficulty fucking you three times a day.\n\n\"Number three, if you decide to have children, the child will be Richard's. You won't fuck any other person and make Richard raise another man's child. Any child will be DNA tested to ensure it's Richard's. If you have a child with anyone else, I will make your life a living hell. I'll make sure some sadistic bastard who loves beating his submissives will be your next Dominant. Number four, Richard will have two safe words, White and Black. If he uses White, you are to use that as a clue something is wrong, and fix it. If he is forced to use Black, see Rule number three for what will happen to you. Number five, you will never punish Richard in any way that leaves permanent marks or scars on his body, or is visible to anyone at his place of employment or in any way causes him public shame or embarrassment. His submission is between you and him and not him and the entire rest of the world. This includes sissifying him in any way, such as making him visibly wear women's clothes. You can decide what he wears under his business suits, but you can't make him wear a dress to his job. He may remove his own collar at work or anyplace which would cause undue harm to his reputation. The same with any other slave jewelry and tattoos. If you have a question about whether something can be allowed, you'll speak to me first.\n\n\"Number six, since Alexa is Dominant, more Dominant than you, she will be my surrogate as I'll be out of the country much of the next seven to eight months. As such, she will also be undergoing Dominant training with Joshua tomorrow along with you. She will make periodic visits to your home to ensure my conditions regarding Richard are being met and he's being treated with the same love and respect I give my own slaves. When she comes over, she's in charge. You will provide her with sexual gratification the same as you would any other Dominant. I don't expect to have sex with you in respect for my son, but I could, and I might also make you have sex with my other slaves and husband again, or anyone else I fucking want.\n\n\"Today was a taste of what it might be like to be my slave on a daily basis, but I assure you, it would be worse. In line with what I'm saying, you will be one of the prizes for the stripping contest tonight, as you originally planned, but instead of your plan of fucking one lucky winner, you'll be fucking seven. Richard will take your anal virginity first, then the fifth through tenth place finishers will be fucking you in the ass, in order of cock size from smallest to largest. They will fuck you in public, in front of everyone else there. This is to remind you that I own all three holes on your body, and to open you up for regular and frequent anal sex. After each person fucks your ass, you will clean his cock for him as if he fucked your cunt. Beth will show you what you need to do to prepare. Richard said you are an anal virgin as far as he knows, so each of them will fuck you gently enough to start. Manuel will be monitoring your treatment tonight for me, and will stop it if he feels it's medically advisory. Do you have any questions whatsoever about what your life is going to be like?\"\n\n\"No, Mistress Farber.\"\n\n\"I don't expect you to remember every detail of this conversation. You'll be given copies of the appropriate agreements so you can review and memorize them at your leisure. I suggest the plane ride back to the States as a starting point. I'm changing your name from Lying Skank Slut to simply Slut. You're a disgusting mess, Slut. You may use Manuel and Sherry's shower to clean up and put on clothes again. Sherry brought them from the Captain's cabin. Don't bother with your bra and panties. You won't wear them again on this ship.\n\n\"Joshua, Miranda, Fatima, Edgar, and the Captain and I are dining separately tonight, waited on by Pierre. After which we'll be leaving to attend the National Theater. After you dine tonight in the Dining Room with other senior staff members, Beth will prepare you for your ass fucking. Leave your plug in until then. The tail portion can be removed. Sherry will remove the tail before you shower. You'll return to your hotel tonight to get as much sleep as you can, but I expect you to be waiting at the front door to be picked up at 8 AM tomorrow morning for your training to begin. Failure to be on time will result in punishment. Alexa, you can stay here tonight, but you can't spend the night with Beth. She needs to spend time with her sister slaves. Find someone else to fuck or sleep alone.\"\n\n\"Yes, Mother.\"\n\n\"Now get the fuck out so I can get ready for my night out.\"\n\n\"Yes, Mistress,\" multiple slaves answered, only Alexa not speaking, but her eyes were alight.\n\n******"
    ],
    "authorname": "Thors_Fist",
    "tags": [
        "oral sex",
        "anal sex",
        "lesbian sex",
        "group sex",
        "public sex",
        "train",
        "marnie",
        "richard",
        "alexandra",
        "oslo"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/my-voyage-of-submission-ch-20"
}