{
    "title": "Politics & Prejudice Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 7 - The Widow Athena Jones (continued) \n\nPreviously, in the Iron Crowbar series... (specifically, 'Sting of the Scorpion, Ch. 5')...\n\n\"BINGO!\" yelled out Mrs. Parker in the Fellowship Hall of the Catholic Church. The other old ladies groaned.\n\n\"Well,\" said one old woman, getting up, \"I must be off. It's getting late. Thank you for such a lovely evening, Father Francisco.\"\n\n\"Ah, my pleasure, madam.\" said Father Francisco, smiling benignly. \"I hope we'll be seeing you next Wednesday night.\"\n\n\"I do, too.\" said the old woman. \"Goodnight ladies. I'll see you at the Community Center. Goodnight Mrs. Boddiker.\" she said, touching her friend's shoulder on her way out. Among the chorus of salutations, Mrs. Boddiker said goodnight to her and promptly went back to her bingo cards.\n\nOnce out of the Fellowship Hall and beyond the eyes of anyone, the old woman scurried up the passageway towards the back of the building. If caught, she'd say she was looking for a restroom. She was not caught.\n\nExiting by a back door, she moved past the living quarters of the priests that were at the back of the Church grounds. The gate was open and she moved along the sidewalk, almost to the street. She stopped in the darkness and listened intently, watching along the street for any sign of anyone watching her.\n\nSeeing none, she stepped out onto the sidewalk of the street and walked as swiftly as she was able in a westerly direction. She turned between two buildings, stopping and waiting to see if she was being watched or followed. She then went up that alleyway and between buildings, in what would've been called mews in the days of horses and carriages.\n\nComing out on another street, she repeated this pattern until she was just south of Courthouse Square. Entering a door that led to a small apartment upstairs above the shops, she let herself in with her key. Closing the door and locking it, she flicked on the light switch, which turned on one lamp on the chair-side table... and saw the woman sitting in the chair, waiting for her.\n\n\"Oh my heavens!\" the old woman said. \"You startled me. And why are you here, at this hour?\"\n\n\"Why, I came to see you.\" said Captain Cindy Ross of the Town & County Police, getting up out of the chair. \"The Widow Athena Jones, I presume?\"\n\n* * * * *\n\nPhyllis Troy took off her shawl and wig. \"Yes, it's me. I am the Widow Athena Jones.\"\n\n\"Why are you doing this?\" Cindy asked. Phyllis sat down in the other chair, motioning for Cindy to sit back down, as well.\n\n\"Cindy, my son is in great danger. Incredible danger. What he is doing is noble, is valiant, but he cannot do this alone. He needs help if he is going to win against this Shadow Man.\"\n\n\"Do you know who he is?\" Cindy asked.\n\n\"Yes.\" Phyllis said. \"And it would shock you if I told you.\"\n\n\"So what's with the 'Athena Jones' thing?\" asked Cindy. \"Why the disguise?\"\n\n\"Oh, he would know who I am by sight.\" Phyllis said. \"But my estranged daughter's ability at disguises was inherited. I am also good at them. But I cannot do it alone against this foul beast of man, either. So I've enlisted help.\"\n\n\"Ohhh... all the Senior Citizens.\" Cindy said, suddenly seeing the light.\n\n\"Yes, your intuition serves you well.\" Phyllis said. \"The only thing I must ask you is that you never reveal this to Don. If he finds out, so be it, and I'll step up and take the blame. But the Shadow Man must never find out... I fear what he would do. Not to me, but to others...\n\n* * * * * * * * * * * * * * *\n\nBack in present time, Thursday May 19th, in my office...\n\nMy mother's eyes were twinkling as she stared right back at me, not giving an inch.\n\n\"So, Mom.\" I said. \"Why don't you tell me what I already know half of, fill in the blanks, yes?\"\n\n\"We are trying to keep you alive, son.\" my mother said. \"I have lost my husband. My daughter is a rogue smuggler and testimony to my disastrous raising of her, as well as her rejection of the Scriptures. You are all I have left, and while your work to take down the Consultant of Crime is noble, it won't do me any good if I have to bury you for your efforts.\"\n\nI finally sat back down. \"And having the Senior Citizens of this County be your watch patrol?\" I asked.\n\n\"Oh come on, son.\" my mother said. \"They're old. They only have Death to look forward to. They haven't had so much fun in their lives, and they know they're doing something important. They knew and know the risks, and were willing to keep watch against this foul bastard. And they want to clean this County up of the filth infesting it as much as you do, if not more.\"\n\n\"And it was them blowing the whistles that night I was confronting Bryce... because you thought the Consultant had the drop on me.\" I said.\n\n\"He did have the drop on you, son.\" said my mother. \"You expose yourself much too freely. I very much fear whatever your 'hair-brained scheme' is to take the Consultant down.\"\n\n\"Don't worry about that.\" I said. \"And speaking of hair-brained schemes... \" I was shaking my head. \"Fortunately, Cindy recognized the smell of the explosives and got you all out in time.\"\n\n\"Yes, she was very brilliant and decisive in that.\" said Phyllis. I looked over at Cindy.\n\n\"How long have you known?\" she asked. Nice deflection, there, I thought to myself.\n\n\"For a long time.\" I said. I reached over to my bookshelf, and pulled out the Sherlock Holmes Canon that had been put on my desk, the 'they set fire to our rooms last night' passage highlighted. \n\n\"Let's see here...\" I said, turning through the early pages of the tome. \"Hmmm... 'The Sign of Four'... ah, 'Detective Athelny Jones'. Interesting name, there, don't you think?\" My mother's eyes twinkled even more as she grinned.\n\nI was not grinning as I continued: \"And of course... 'Athena' is a Goddess, and she's the 'Pallas Athene' of the Trojan Temple where Cassandra was raped by Ajax, all parts of the story of the Trojan War... a war which is being newly waged against us Troys by the Consultant of Crime, as this painting and matchstick Trojan Horse attests to. I assume you looked at the capsule inside, Mom?\"\n\nMy mother nodded. \"Yes, I did. I had to know. Anyway, you caught on to my disguise. I should have known... you never asked what I was doing all these days and nights for all these months.\" she said with perfect 20/20 hindsight.\n\n\"But it was Captain Ross who did find you.\" I said, then looked at Cindy and said darkly: \"Went to visit her, you did. Told your boss, you did not.\"\n\n\"No I didn't. I kept the secret.\" Cindy said, with both defiance and pride in her voice. \"Her plan was dangerous, but if it helped keep you alive and able to beat the son of a bitch, it was worth doing.\"\n\nJust then Helena buzzed me. \"Sir, there are twelve senior citizens out here who want to speak with you.\"\n\n\"Your defense team is here to rescue you from me.\" I said. \"Helena, please escort them to Classroom 'J'. I'll be right down.\" I got up. \"Okay, let's go tell them.\"\n\n* * * * * * * * * * * * * * *\n\n\"This was our doing.\" said Mrs. Veasley, leading the defense. \"We proudly volunteered to help your mother and Captain Ross watch for mischief in our Town.\" There was a chorus of agreement.\n\n\"Yes, and you've done a very good job, all of you.\" I said. \"I very much appreciate the work you have done all these months helping us. But it should be obvious that your cover is blown, and our Enemy knows what you are doing. He tried to kill you once already. So I am going to have to ask you to stop.\"\n\n\"Not so fast, young man!\" said Old Mrs. Boddiker, rising and shaking her umbrella at me. \"I was born in this County, I have lived in this County all my life, and I will die in this County by the Grace of God. And until that happens, I want to help you get rid of this filth in my County!\"\n\nThere was another loud chorus of agreement. I saw Mr. Davis, who'd parachuted behind enemy lines on D-Day. I saw Mrs. Williams and the others, and the determination in their eyes. And Mrs. Boddiker... I'd rather fight Cindy in the Police Boxing Matches than tangle with that determined woman. How could I tell them 'no'?\n\n\"All right.\" I said. \"But do me this favor. Just keep your heads down until July 4th, okay? By then, all will be well.\"\n\nPart 8 - Racial Divides \n\n\"The FBI is involved in the bombing now.\" said Sheriff Daniel Allgood as we sat in the Main Conference Room thirty minutes after my meeting with the Senior Citizens. The Sheriff had come into that meeting and stated his relief that none of them were hurt, and was inundated with well-deserved praise for Cindy Ross. \n\nThe Senior Citizens were now getting a full tour of Police Headquarters. I figured the jail and the underground areas like the Shooting Range would excite them the most. Turns out their favorite place to see... was the Iron Crowbar's office.\n\nThe Sheriff continued: \"The Fire Department's Arson Squad is also working on the case. The SBI's Bureau of Firearms and Explosives (BFE) have been explicitly denied entry to the scene, and their help specifically and explicitly rejected.\"\n\n\"Think the FBI will find anything?\" asked Chief Moynahan. He was looking at me when he asked.\n\n\"No.\" I said. \"Zoe Singer and her team found the detonator. It was set off by a timer device. The FBI will run tests on the plastique traces they found, but this seems like uniquely made stuff that they don't have an ID for.\" Batches of plastic explosives can have unique signatures when run through a mass spectrometer, gas chromatograph, and liquid chromatography methods.\n\n\"No one smelled anything before today,\" I continued, \"so it's likely this was done last night. The Mouseketeers have already analyzed all the street cameras in the area. They went down around 1:00am, started whacking out with horizontal lines, then went blank.\"\n\n\"They were jammed, in other words.\" said Sheriff Allgood. I just nodded, not saying that someone on the Enemy team had a video-killer similar to mine and Cindy's.\n\n\"And whoever did that knew that cameras were there, where they were, and what to do about them.\" continued the Sheriff. I nodded.\n\n\"Well,\" said the Chief, \"our friends in the Fire Department and FBI will handle all that. My concern is the murders of two firemen... black firemen. I've already been called by Councilman Reginald B.F. Lewis, and the Reverend Joseph E. Williams of the A.M.E. Church. They are already hearing rumblings amongst their people.\"\n\n\"I have Officers talking to all the Station 2 Firemen.\" I said. \"They will also interview friends of the deceased that they can find. I talked to the Station 2 Superintendent just before the Community Center explosion, and he told me that he was not aware of any threats to the Station nor any Firemen, much less those two men. In addition, neither Chief Quinlin nor any of the Battalion Chiefs nor Fire Marshal Singer had received any information of a threat to any Firemen. The TCPD also had nothing in advance that would suggest this attack was coming.\"\n\n* * * * * * * * * * * * * * *\n\n\"Nothing, sir.\" said Detective Theo Washington, who was the lead Detective on the murder case. \"All the Firemen were pretty much in shock about it. They said they knew of no specific threats to either one of the guys, nor any Fire Department personnel. They also said that Johnny Jackson was pretty quiet and never went drinking at bars; he was mostly at the Chess Club. DeSean Malcolm, however, regularly went to bars or clubs in the Tenderloin District, but never overdid it with the drinking, and never got into fights that they were aware of.\"\n\n\"Does the Fire Department have a place like our Cop Bar?\" I asked. We were in my office. Cindy was sitting on the sofa, as usual, while the Detectives were in the 'hot chairs'.\n\n\"Well, the Firemen in the northern half of the County come to the same Cop Bar.\" said Teddy Parker, who was working with Theo on the case. \"Neither of these guys came all the way up to it, though. Our Precinct Two goes to the 'Jefferson Tavern', a watering hole not far from the Old Mill, which sits on the River on the south side of Jefferson Avenue. Some Fire Station 5 guys go there, as well, but again.. neither of these guys went there very often if ever.\"\n\n\"Okay. Good work.\" I said. \"Anything else of interest?\"\n\n\"Uh...\" said Parker. Theo looked at him, then caught me peering. \n\n\"Spill it.\" I said.\n\n\"We were debating whether we should even bring this up, sir.\" Parker said. \"Several of the black Firemen asked if we thought these guys were targeted because they were black. They couched it as questions, but I got the idea they were doing that to 'suggest', or plant the idea in our minds. And nearly every white Fireman we talked to asked if the former EMTs were behind the murders. A couple even outright said they suspected it was EMTs.\"\n\n\"That's definitely something to bring up to me.\" I said. \"Did either of you guys get the idea that there are racial problems in the Firehouses? Theo?\"\n\n\"Not really, sir.\" said Theo. \"I should tell you this, though: a lot of people in the black community don't like black firemen nor black policemen. Not all of them, but some, say that we've sold out to The Man, that we're betraying our race by working for the Government in any way. Now some of these people are just jealous; they'd kill for a good job like mine or a Fireman's. But some genuinely see it as a betrayal, especially by people like me who go to work for the cops.\"\n\n\"Yes, I've heard a few rumors like that.\" I said. \"And it's unfortunate. Having said that, did you get any vibe at all of racial tension inside the Firehouse?\"\n\n\"No sir.\" said Theo. \"They have to depend on each other too much. That's why Malcolm was told to tone it down by more senior black Firemen, including Jackson.\"\n\n\"Okay.\" I said. \"Captain, lets get the word put out to all Fire Stations for their guys to watch each other's backs and try to stay in groups, even when off duty. I suspect these guys were targeted partly because they were lone wolves that didn't stick with the pack, so they were easier prey.\"\n\n\"Wilco, sir.\" said Cindy, making a note on her pad. \n\n* * * * * * * * * * * * * * *\n\nAs a gesture of goodwill, Cindy and I went with Sheriff Allgood to the Fire Department Headquarters, to report on the murder case. Present were Fire Chief Quinlin, Fire Marshal Zoe Singer, Battalion Chief Carlson and Battalion Chief Tucker, both longtime veterans of the Fire Department.\n\nWe laid out what we knew, which was little so far. Zoe added what she could about the explosives and the device used. We asked them to disseminate through their ranks the warnings to stick together and be careful.\n\n\"So,\" said Battalion Chief Tucker, \"do you think the former EMTs had anything to do with this?\"\n\n\"No.\" I said. \"There are no EMTs left in this County that I am aware of.\" I said... then made a point to say \"If you know of any EMTs still here, please let me know so that I can evacuate them.\"\n\n\"Is it true,\" said Battalion Chief Carlson, \"that you helped those filthy EMTs out, helped them get jobs?\" I could see that this was a pre-planned ambush attempt.\n\n\"You damn straight it is.\" I said, looking the man dead in the eye. \"I did everything I could to help them, as did P. Harvey Eckhart of 'The Vision'.\"\n\n\"That fucking son of a bitch.\" breathed Tucker. The reaction I hoped for did indeed happen: Cindy stood up, the blue crowbar ready to go.\n\n\"Watch your language, asshole.\" she said. \"That's my father you're talking about.\" There were plenty of stunned looks to go around, and one of exasperation from a Sheriff trying to keep order and peace.\n\n\"You can't talk to me that way, Captain.\" said Tucker, standing up himself.\n\n\"I can.\" I said, quietly but levelly. \"And Eckhart is my blood kin, too. Now sit down.\"\n\n\"Okay, guys,\" said Sheriff Allgood, \"let's just move past this shit. The EMS no longer exists in this County. The Police are trying to solve the murder of two Firemen here. Have a seat, Chief Tucker.\"\n\n\"If they want to solve this, then they should start considering that it might be EMTs that murdered our guys.\" said Carlson.\n\n\"All right, guys.\" said Chief Quinlin, finally bringing his people into line. He then said \"But they have a point, Sheriff... if not EMTs, who would want to kill two Firemen like that?\"\n\n\"They may not have been killed because they were firemen.\" I said. \"They may have been killed because they were black. And the racial angle is the one I've been trying to confirm or dispel all day.\"\n\n\"We haven't had any racial problems in the Fire Department for years.\" said Tucker.\n\n\"I don't think it's internal.\" I said.\n\n\"But to what end?\" asked Quinlin.\n\n\"I'm not sure yet.\" I said. \"So... you're having a memorial service on Saturday?\"\n\n\"Yes.\" said Chief Quinlin. \"At the A.M.E. Church. Two o'clock. All off-duty personnel will be invited to attend, and we'll have skeleton crews at Stations 2 and 5. Some of the people there will be on-call, and called out of the service if needed.\"\n\n\"You think someone is going to burn or bomb a building at that time?\" asked Sheriff Allgood. \"Maybe the Community Center was a prequel to it? Practice for it?\n\nHmmm, pretty astute he is, I thought to myself. \"I don't know.\" I replied. \"I don't think the Community Center bombing is related to these killings at all. As to what might happen, and when?\" I shrugged my shoulders.\n\n* * * * * * * * * * * * * * *\n\n\"Well, you stirred the pot again.\" Cindy said as we drove back to Police Headquarters. \"Of course, I did too... \"\n\n\"Yes, we learned some things from that, too.\" I said. \n\n\"Think they'll come after me for insubordination?\" Cindy asked.\n\n\"No.\" I said. \"As you know, Captains and above enjoy a certain immunity from that, at least as demonstrated with Brownlee and with those old farts. Don't worry about it, they know they crossed the line when they insulted our blood kin that way.\"\n\nAfter a pause, I continued: \"But it was instructive. I guess you've noticed they'd really like to blame an EMT for this. Sort of like the Media always immediately tries to blame a Conservative TEA Party member for school shootings or theater shootings, then it turns out the Media was lying. As usual.\"\n\n\"I just don't get the hatred.\" said Cindy. \"The EMTs are gone, yet they wanted to kill you right there for telling them you helped the EMTs get jobs. I could see it in their eyes, they really wanted to come up against you for that. And I hope that doesn't come back to haunt us, the Police. Some people in the Fire Department are still pissed that we busted those firemen raping that girl.\"\n\n\"Yep.\" I said. \"And that's something else now out in the open. Those Battalion Chiefs pre-planned that little attack on me.\"\n\n\"Maybe the Fire Chief will rip them one.\"\n\n\"Oh hell no.\" I said. \"Quinlin has played it straight in public, and he's pretty much done the right things. But the first thing he said upon learning about this was to ask if EMTs did it. He keeps things in line, but he's no friend of the EMTs. So... what do you think about these murders?\"\n\nCindy replied \"I've learned over time to observe you and deduce from your questions and statements what you think is going on. You were very interested in that memorial service for Saturday. You think something about that is important. If it's not setting a fire elsewhere at that time, then maybe you think something will happen at the service itself.\"",
        "\"You're getting good.\" I said. \"I might just tell the Fire Department to promote you to Assistant Fire Chief.\"\n\n\"I'll remember that when I'm busting your ass during the Police Boxing Matches.\" Cindy said. If all went well, we wouldn't meet until the finals on June 4th, but Cindy was anticipating that already.\n\n\"Well, I have to just make it to that point.\" I said. \"I don't have the quick and easy path like you do...\"\n\n* * * * * * * * * * * * * * *\n\nAt 1:00am, I got a call on my personal cellphone. Bowser was not pleased, and his barking made that point crystal clear.\n\n\"Troy.\" I said, taking the call...\n\nPart 9 - Plan In Motion \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette from in front of the bombed out Community Center at 7:00am, Friday, May 20th. \"Channel Two News has learned that there are no new leads in the bombing of the Community Center yesterday. The FBI has been called into the case, but do not believe this is an act of domestic terrorism. Asked about the future plans of the site, Councilman Thomas P. Cook said this. Roll tape.\"\n\nThe tape rolled, showing Thomas P. Cook talking to a gaggle of reporters, Priya Ajmani right there next to him. He said \"This does not change our plans at all. We intend to sell this property to the highest bidder for future development that will bring jobs and tax revenues to the County.\"\n\n\"What about the elderly people and the Community Center?\" asked Priya loudly.\n\n\"They were going to have to find a new place anyway.\" said Cook. \"And now that's even more apparent.\"\n\n\"Does it bother you that a lot of people could've been killed in that explosion?\" yelled Bettina.\n\n\"No one was hurt.\" said Cook. \"So your question is moot, pointless. Okay, come to the Council meeting Tuesday to see the final disposal of the property.\"\n\nBettina came back on live. \"Asked for comment, Commander Donald Troy praised Captain Cindy Ross for her quick action in evacuating the Community Center in time to save everyone's lives. Fortunately there were no casualties.\"\n\nFor God's sake, I thought, give Cindy more than half a sentence, would you, Bettina? Hmmm, have I mentioned that I really, really hate the Press?\n\n\"In other news,\" Bettina went on, \"there are no new leads in the case of two Town & County firemen who were found dead the night before last. Lt. Scott Peterson, Press Relations Officer, issued a statement that the Police do not think the men were murdered because they were Firemen, but are working on the possibility that the attacks were race-related. Both victims were black men.\"\n\n* * * * * * * * * * * * * * *\n\n\"All right,\" said Chief Moynahan. \"I've had about enough of Peterson.\" We were in the Chief's office, with Cmdr. Della Harlow also present. \"I am going to begin the paperwork to suspend him, which the Union was grieve, and we'll fight like hell over it. Unless one of you two have a suggestion?\"\n\nI smiled. \"I believe I do, Chief. Take a look at these.\" I handed the Chief a manila envelope. He handed the contents to Della, who gasped.\n\n\"Commander,\" she said, \"I know you're a man of integrity... but you are no Boy Scout.\"\n\n\"No ma'am,\" I said, \"I am not.\" The contents of the envelope were steamy and salacious photos of Priya Ajmani giving Scott Peterson a hot, wet blowjob.\n\nEddie the Bounty Hunter had come through for me.\n\n* * * * * * * * * * * * * * *\n\nLt. Scott Peterson came into the Chief's conference room under the orders of Chief Moynahan. The Chief was sitting at the end of the table, me to his left, facing the door, Della to my left.\n\n\"Have a seat, Lieutenant.\" said the Chief. \"And be advised that this is a formal discussion of your actions making an unauthorized statement to the Media. You may have a Union representative, if you wish.\"\n\n\"What statement is that, Chief?\" he asked.\n\n\"You do not go and tell the Media that we're looking at the racial angle of a murder case, not without my personal blessing. Both Commanders here have been well-advised of that, also.\" said Moynahan.\n\n\"But that's what it's about, isn't it, Chief?\" said Peterson.\n\n\"Why would you go and tell the Press?\" asked Della Harlow. \"You jeopardized the investigation, you've possibly stirred up racial discord unnecessarily. So why did you tell the Press that?\"\n\nPeterson said \"I don't see what the problem is. If those Firemen were murdered because they were black, the Public has a right to know.\"\n\n\"Am I hearing this correctly?\" I asked. \"You sound like a reporter. Whose side are you on?\"\n\n\"With all due respect, Commander Troy, it's not about sides, we're not at war with the Press.\"\n\n\"I beg to differ.\" I said. \"Our relationship with them is adversarial. They know it, we know it. They enjoy endangering our mission and our lives. I have little respect and NO trust of the Media, and I thought you understood what they're really all about.\"\n\n\"I disagree with you about them enjoying endangering our mission, and I do have respect for them and the job they're trying to do.\" said Peterson. \"Without the Press, our whole democracy breaks down.\"\n\n\"If they were doing their jobs,\" I said, \"I might agree with you. But they're not. They abuse their First Amendment Rights so badly that our Republic is in danger of being destroyed by a corrupt collusion of the Media and the Establishments of both political parties, and working together against the American People. Today's Press is agenda-driven, not news-driven. They create news, not report it. But we're not here now to have a theoretical discussion, Peterson. I'm well aware of why you're doing what you're doing.\"\n\nWith that, I threw the file envelope on the table in front of Peterson. \"Look at those.\" He opened the envelope, took out the photos, and gasped as he looked at him. His face turned crimson red... then his shock turned to deep anger.\n\n\"What is this?\" he thundered. \"Are you spying on me?\"\n\n\"These came through an anonymous tipster.\" I said. \"But it's their content that's important. Priya Ajmani is really going to work on your cock, there, Peterson. Now I can understand you wanting to have sex with a woman as beautiful as she is... it's just the quid pro quo deals coming from your liaisons with her that are the problem.\"\n\n\"So what?\" snarled Peterson. \"Captain Ross had an affair with her, too.\" Della looked shocked at that.\n\n\"Captain Ross did not go and give the Media unauthorized statements.\" I countered. \"You've been doing quite a bit of that lately.\"\n\n\"And it's going to stop.\" said the Chief. \"Peterson, when I begin putting together the paperwork to have you suspended and fired... these photographs will be what keeps the Union from trying to save your worthless ass. Fortunately for you, Commander Troy... not Commander Harlow but Commander Troy... has suggested an alternative to kicking your ass onto the street...\"\n\n* * * * * * * * * * * * * * *\n\n\"Hello, Priya.\" I said as I sat at a sandwich shop on the south side of Courthouse Square, at one of the outside tables. Cindy was sitting next to me. \"Have a seat.\"\n\n\"Why should I?\" Priya asked with an unfriendly voice.\n\n\"Do you want KSTD to get their credentials back?\" I asked.\n\n\"We're going to get them back anyway. Leahy will overturn any Court decision in your favor.\" Priya said. \"Besides, I heard of that nasty stunt you pulled on Scott Peterson, getting some P.I. to take pictures of me blowing him. I've got nothing for you.\"\n\n\"Priya,\" Cindy said with authority, \"shut the fuck up and sit down. Why do you have to keep making everything so frickin' hard? And I'm not talking about Peterson's puny cock.\" I burst out laughing at that one. Priya gave Cindy a withering look... but she sat down.\n\n\"Here's the deal.\" I said. \"You get your credentials back if you agree to behave and stop the slanderous attacks during press conferences... and you cover a little news event for this afternoon... in a way favorable to the People, not the Politicians...\" \n\n* * * * * * * * * * * * * * *\n\nAt 2:30pm, there was a large gathering in the northwest corner of Courthouse Square. The bombed-out remains of the Community Center could be seen on the other side of the street from City Hall from here.\n\n\"We are gathered to announce,\" said Mrs. Myrtle L. James, \"that the Community Center will be rebuilt, and very quickly. We have many friends that have volunteered to help in many ways...\"\n\nThe contractor who had rebuilt the Cabin for me, named George, came to the podium. \"We will rebuild the Community Center at only the cost of materials. My employees have agreed to donate their time to this effort.\"\n\nThe Electrical & Builders Union, Local 684, president stepped up. \"We are proud to be able to support our many elderly friends, some of who are war veterans, by agreeing to help rebuild the Community Center at no pay, and we are glad to defray some of the costs by donating materials.\"\n\nOther businessmen came up, volunteering to donate materials at cost, and others said they would donate money. The Kiwanis Club, the Ladies Auxiliary Club, and other groups pledged support. The Boy Scouts said they would be holding a drive this weekend to raise money to help rebuild the Community Center.\n\nI was very proud of my adopted Town & County as I watched, seeing them gather together and pull together. The only issue was getting the land... and you know that Your Iron Crowbar had a plan for that...\n\n* * * * * * * * * * * * * * *\n\n\"What the hell was that about?\" snarled Thomas P. Cook at Priya Ajmani as they finished covering the conference.\n\n\"The community is coming together to support our elderly and our veterans.\" Priya said cheerfully. \"Can I get an official comment from you, Councilman Cook?\" \n\nCook just stared at Priya for a moment, then stalked off.\n\nPart 10 - Counterattack \n\n\"Okay, this is an emergency meeting of the Town & County Council, in executive session.\" said the Mayor as the Council met that Friday evening in their 'private' meeting room. \"The issue of the Community Center and its land is the subject of the meeting. By the way, it's good to see you back, Pastor Westboro. We missed you.\"\n\n\"Thank you, Mr. Mayor.\" said Westboro. \"It was a wonderful trip, but I'm pleased to be back among friends and the Flock.\"\n\n\"As are we.\" said the Mayor. \"With the announcement today of the plans to rebuild, and to get the money through donations, we're going to have to move very fast.\"\n\n\"We can have the building permit blocked.\" said Thomas P. Cook. \"If they try to so much as lay a brick, we can have them arrested.\"\n\n\"Who are you going to call to enforce that?\" said John Colby, who had not been called to attend but got wind of the meeting at the last moment. \"The Iron Crowbar?\"\n\n\"Yes!\" said Kelly Carnes, decisively and derisively. \"He either upholds the law of this County, or he can turn in his badge. If he does neither, we'll run him out on a rail.\"\n\n\"Using brute force to get your way, and running over the elderly to get there?\" replied Dagmar Schoen. \"Not to mention threatening Council Members not in jackbooted lockstep with your plans for personal enrichment?\"\n\n\"Now, Mrs. Schoen,\" said the Mayor, \"let's stop the recriminations. There are no threats here. However, the sale of the Community Center property will put needed revenue into the County's coffers, and will further help the County and the People as tax revenue from businesses there pour in. As it is now, we're not making a dime from having that Community Center there. We have all of our Citizens to think of.\"\n\n\"Hell, I've been a farmer all my life.\" said John Colby in his deep baritone voice, \"and I've never been around that much horse shit. Spare us the platitudes, Mr. Mayor. We all know that Thomas Cook is pushing this to get the property for his own company, using his Council seat for personal financial gain.\"\n\n\"Are you accusing me of---\" started Cook with his well-worn reply.\n\n\"YES!\" shouted Colby. \"Yes, I'm accusing you of graft!... unless you go on the record saying that neither you nor your companies will have any part of the bidding on that property. Are you willing to do that?\"\n\n\"Mr. Cook is doing nothing illegal.\" said Pastor Westboro. \"We must be careful in our speech here, Mr. Colby.\"\n\n\"This is exactly why the People no longer have faith in their Government, at any level.\" said Ian McGhillie. \"Spare me the layers of legalese, Pastor. This looks dirty. It smells dirty. It's dirty.\"\n\n\"I don't give a shit what it looks like.\" said Cook. \"It's not illegal, and I say we proceed with this. Let's have the second reading of the bill. Now.\"\n\n* * * * * * * * * * * * * * *\n\n\"It's set for Monday, on the Courthouse steps.\" said John Colby. He and Dagmar Schoen were sitting with me, Cindy, and Chief Moynahan in the Chief's conference room at 10:00am, Saturday, May 21st. Cindy and I had both won our Police Boxing Matches contests earlier in the morning. We would be attending the memorial for the Fire Department men later in the day.\n\n\"This has all been done under some serious stretching of the rules and law.\" said Dagmar Schoen. \"The first vote was in executive session, and was misrepresented as studying it, not doing it. Then last night's second reading of the bill was done in an unannounced meeting, which I think violates our procedures of having meetings, much less passing a bill.\"\n\n\"Like deeming a bill to be passed, when it really wasn't.\" I said.\n\n\"Exactly. The vote was 7-3.\" said Colby. \"McGhillie voted with us, but even Goldman and Steele went with the pack. And I mean that literally: they are a pack of wolves, salivating over this property. I have no idea what that's about.\"\n\n\"It's a choice piece of Downtown land.\" I said. \"With City Hall across the street and the Courthouse across the Square, lawyers would pay top dollar for an office building there.\"\n\n\"You should've been in real estate.\" said Dagmar.\n\n\"I am, and so is Captain Ross, here..\" I said. \"We just do our purchases legitimately, and not through force or fraud.\"\n\n\"I get a sense it's more than that with these guys, though.\" said Colby. \"So what do we do next? We could file a lawsuit, we could make an ethics complaint to the State... but that'll take time, and Leahy of the Appellate Court might just let things go forward, and by the time our case is heard, it'll be a moot point.\"\n\n\"When is the auction?\" I asked.\n\n\"Monday morning, 9:00am.\" said Colby. \"On the Courthouse steps.\" Well... there's a small room at the front of the Courthouse complex as one enters it. Inside, sheltered, but officially designated part of the front porch and the 'Courthouse steps'. The auction would be in that room.\n\nI smiled. \"Well, I guess we'll see what happens then.\"\n\nEveryone saw the look in my eyes, and nodded. They knew that Your Iron Crowbar had a plan.\n\n\"Okay, if y'all will excuse me,\" I said, getting up, \"I have a mass murder to prevent.\"\n\n\"What?!\" gasped the Chief. \"Care to tell your boss about this first?...\"\n\nPart 11 - Race War Interdiction \n\nI strode into MCD, Cindy following. Teresa brought Julie Newton and Christopher Purvis over from Vice. The Chief also came in to listen.\n\n\"Okay, guys,\" I said, taking a chair and placing it in the middle of the room as everyone sat at desks, \"I think I know what is going on with these murders. Someone killed them, with the idea that a memorial service would be held. The perp or perps intend to kill more Firemen, probably targeting black ones, though they may use a bomb. I've already arranged with Fire Chief Quinlin to postpone the service until tomorrow, and that will be announced about 30 minutes before the event. We've got drones in the air looking for snipers on buildings around the A.M.E. Church, we're going to have bomb-sniffing dogs go in, and we're watching for suspicious personnel in the area.\"\n\n\"What's the purpose of all this?\" asked Theo Washington.\n\n\"Someone is trying to start a race war.\" I said. \"They kill some blacks, they say it's the former EMTs, but then gin it up to make that sound like an excuse. Then we have chaos and looting and burning buildings, the Media comes in, agitates it even more, the Feds and the State come in, and it becomes just a sheer fucking mess. I prefer to not lose any lives, and keep the God-damned SBI out of here.\"\n\n\"Okay,\" I said, \"Newton, have you found any more on Three Brothers Trucking?\"\n\n\"They did deposit $1500 into their bank account yesterday.\" Julie said.\n\n\"Okay, bomb-sniffing dogs need to check out every one of their trucks. Theo, lead that operation, but only after the dogs finish at the A.M.E. Church. Croyle, lead the mission at the Church.\"\n\n* * * * * * * * * * * * * * *\n\n\"What?!?!\" he gasped. \"No, no, no, no...\" He regained his composure, then let his great mind go to work for a moment. \"Okay, here's what you need to do... you need to get this thing called off... no, goddammit, it's too near our other operation, the big one, Operation Apple Grove... okay, goodbye.\"\n\nMy God, he thought to himself, I cannot believe any of this. What are these dolts doing? Do I have to guide them by the hand every step of the way on this?\n\n* * * * * * * * * * * * * * *\n\n\"Two burners.\" said Myron Milton. We were in his cubicle in what was once Lt. Masters's office next to Cindy's. Mary was at her desk in her cubicle, as well.\n\n\"One from just north of here.\" said Myron. \"It's gone now, must've been disconnected completely.\"\n\n\"Probably physically destroyed.\" I said. \"And the other?\"\n\n\"Cell tower by the Bus Station.\" said Myron. \"It's a weird thing, though... it didn't triangulate on other cell towers. Specialized stuff. Anyway, it's gone now, too.\"\n\n\"That tower serves half the University as well as the north and east parts of Town. Dr. Wellman's office, Thomas P. Cook's office...\" I said. Then I added: \"You know, criminals could really beat the shit out of us if they started using landlines again.\" Mary laughed.\n\n\"Yes sir,\" she said, \"but nobody has a landline anymore. Not hardly. Anyone using one now is considered suspicious.\" That was humor, but there was an element of truth to it.\n\n\"Okay, I'll be in my office.\" I said. I suited the deed to my word and went there. Some minutes later, Cindy Ross came in. Behind her was a decrepit old man concealing a videocamera under his ragged coat. He was actually Detective Grubby Paul of the TCPD Vice Squad, and a master of disguise himself. And behind him was The Widow Athena Jones, in her final appearance in such wear... at least that was her promise to me.\n\nCindy gave me the thumbs-up. One more piece of the puzzle had fallen into place.\n\n* * * * * * * * * * * * * * *\n\nThe four men got into position in the building opposite the A.M.E. Church. They looked out the windows of the top floor, which was all storage space and full of clutter and dust. A lot of dust.\n\nTheir high-powered rifles and auto-pistols were fitted with silencers They knew their first shots would blow out the windows in front of them, and then they intended to pump bullets into as many black firefighters and other blacks as they could see. Then it would be a race to the basement and the sewer drain into the labyrinth of passages below, and their escape made.\n\nThe leader of the group, former Assistant Fire Chief Jefferson, had the men get in position. The memorial service would be starting soon, and...\n\nThe cold steel of the muzzle of a rifle slid along his neck. \"FBI. Drop your weapons.\" said a masked man quietly. He was heavily armored as were his fellow Special Agents. Jefferson looked around, seeing that his men were also at the mercy of the Feds...\n\n* * * * * * * * * * * * * * *\n\nMy phone rang at 2:05pm. \"We got 'em.\" said FBI Special Agent In Charge Jack Muscone. \"Four men, including Jefferson, like you figured. You may not like it, but we're taking them to the City for interrogation.\"",
        "\"Were the others TCFD Firefighters?\" I asked. \n\n\"One of them was.\" said Muscone. \"He was of the guys at Station 1 when that EMT was raped and the others beaten. The other two are from out of town, but have been on our radar in Tennessee for a while. They're the guys Ben Ellis brought in.\n\n\"Well, you can have 'em.\" I said. \"Just get a murder confession out of 'em, so I can close the case here and finish the paperwork.\"\n\nPart 12 - Issues And Answers \n\nSaturday night at the Cabin. In addition to my mom, Laura, the kids and the dogs, Molly brought the boys, and Cindy, Teresa and Todd and little Doug came. Also there were Chief Griswold and his wife (who doted on the kids), Chief Moynahan, Teddy Parker, and Joanne and Seth Warner.\n\n\"Did the FBI get back to you on those arrests?\" asked Cindy. \n\n\"They're making some progress.\" Laura said. \"Jefferson says he killed the two Firefighters because they were black and sympathetic to the EMTs. The ones from Tennessee said they'd been recruited by Ben Ellman from the Point Hollow case, and Jefferson had them come along after Ellman was arrested. I know that's not the full story, neither from the perps nor from the FBI, but it is what it is for now.\"\n\n\"Did they really think they could start a race war?\" asked Joanne. \"Sounds like 'Helter Skelter' all over again.\"\n\n\"It's interesting.\" I said. \"I'm not sure why Jefferson snapped, but he was still trying to garner hatred for the EMTs. I'm starting to think there is some kind of cultish thing about that.\"\n\n\"What do you mean?\" asked Teresa.\n\n\"I mean, come on.\" I said. \"This kind of hatred, and months after the EMTs have been wiped out of this County. I am honestly starting to think some of these guys were drugged and hypnotized in their sleep.\"\n\n\"One of my Psychology professors had an interesting idea about it.\" said Laura. \"What you're saying, Don, is not far off from her thinking. She thinks it's some kind of proxy for race-hatred, though. These guys were somehow made to hate EMTs as an experiment. More generally applied, it could be a factor in racial tensions being built up all over the Nation.\"\n\n\"In that Jefferson was going to shoot black firefighters as part of his plan,\" I said, \"I can see that. Anyway, they're busted.\"\n\n\"How did you know what it was about?\" asked Teddy Parker.\n\n\"Well,\" I said, \"the two dead Firemen didn't hang out with other firemen very much. Jackson played chess, and Malcolm liked going to clubs. So their kidnapping would not be quickly noticed by other firemen. Who would have some idea of that? A former Fire Department Assistant Chief would, and one who was erratic, at that.\"\n\n\"One other thing I noticed,\" I said, \"was that they were in uniform when they were found. Now they got off shift at 6:00am that morning. Most of us, when we get off duty, change clothes if we're in uniform. I would think a Fireman on 24 hour duty would go home, get out of his uniform, maybe eat, then go to bed and get some sleep. Upon getting up, and not due back on duty for a couple of days, they usually put on regular clothes.\n\n\"So I surmised that either they were kidnapped not long after they got off duty, or their uniforms were put back on them. And that suggests we're looking at a concept that the murderer wanted us to quickly figure out they were TCFD firefighters, but not so fast they couldn't dump the bodies where they wanted to.\"\n\n\"And like Sheriff Sorrells said, why dump them in Coltrane County?\" Cindy asked.\n\n\"And near 'The Vision'.\" I said. \"After Uncle Harvey helped all those EMTs find jobs. Those Battalion Chiefs that 'fronted us on that, Cindy, they knew that already when they asked the questions at that meeting. So maybe in someone's deranged mine, planting the bodies there would implicate The Vision, or at least have us looking at it.\"\n\n\"But to your question, Cindy,\" I said, \"my guess is that someone wanted you and me out of the County, and fully distracted while the Community Center was being rigged with plastique. And they achieved that, for sure.\" Everyone nodded in agreement with that idea.\n\n\"What about the Community Center?\" asked Chief Griswold. \"Those poor people are very angry right now. Can't say I blame them.\"\n\n\"We will try to make them less angry.\" I said. \"Come Monday, at the auction...\n\nPart 13 - Winning Streak Ended \n\nOn Monday morning, May 23d, the bidding began. A representative for Northwest Properties Development, owned by Thomas P. Cook, was there. His name was Mr. Cole, and he'd once accosted Jeanine Burke over some Acme papers, if I recalled correctly. He seemed confident in a quick and easy process. There were only a few others there, and some of them were waiting for tax liens to be sold off.\n\n\"We will start the bidding at $750,000.\" said the auctioneer, looking at Cook's representative. The price was well under the fair market value of over a million dollars. Mr. Cole raised his paddle. \"Do I hear $800,000?\" asked the auctioneer.\n\n\"One million dollars.\" said a voice. Everyone looked over with gasps. The man was young, had a full head of black hair, was dressed in a well-tailored suit, and looked serene and confident. He was Marlon Stonecliff... and what most in the room did not know is that he was one of P. Harvey Eckhart's most trusted attorneys.\n\n\"One million dollars, do I hear one million, fifty thousand?\" the auctioneer intoned. Mr. Cole signaled that as his bid.\n\n\"One million, three hundred thousand.\" said Stonecliff, again causing gasps. The auctioneer acknowledged. Mr. Cole's face reddened, and he raised his paddle at the next $50,000 increment. At that point, Mr. Stonecliff acknowledged the next higher bid. Soon, the price was up to $1.6 million.\n\nA woman next to Mr. Cole was on her cellphone, which was against the rules, but the auctioneer did not stop her. She whispered something to Cole, who nodded.\n\nThen, at $1.8 million, Mr. Stonecliff said \"I bid two million dollars.\" Again, bulging eyes looked at him. Cole looked at him furiously, then acknowledged the auctioneer's call of $2.1 million. Stonecliff raised another $100,000. The woman next to Cole shook her head, and Cole just shook his head at the auctioneer. \n\n\"Sold!\" called out the auctioneer with a bang of his gavel, indicating Mr. Stonecliff was the victor.\n\nAfter doing the paperwork at the window, Mr. Stonecliff was in the front lobby of the Courthouse building when Cole accosted him, with two large men behind him. \"Who the hell are you? Who do you work for?\"\n\n\"I work for Dr. P. Harvey Eckhart, sir, the great man and leader of 'The Vision'.\" replied Mr. Stonecliff. \"And you are Thomas P. Cook's representative?\"\n\n\"You're about to learn a lesson in interfering with Mr. Cook's affairs. Gentlemen, I believe this man has committed fraud. Arrest him!\"\n\n\"Is there a problem here?\" came a voice. Everyone turned to see a large man in a Tilley Hat, and a platinum blonde woman with no hat. Both were in TCPD uniforms, with red and purple rectangles above their right shirt pockets. More importantly, both were carrying crowbars.\n\n\"Who are you two?\" I asked the burly men.\n\n\"That's none of your business.\" said one of them.\n\n\"Uh, hold on, Charlie.\" said the other, getting the picture much more quickly. To me he said \"We're private security for Mr. Cole, Commander Troy. We are licensed to carry firearms as part of our duties.\"\n\n\"But you have no power to arrest anyone in my County.\" I said. \"I'm giving you about fifteen seconds to get out of my sight. I do not forget faces, and if I see either of yours in this County again, you are the ones that will be arrested.\" The men quickly hustled out of there.\n\n\"Mr. Cole,\" I said, \"go run like the dog you are to your master, and tell Thomas Cook that I am watching him... and there'd better be no more trouble for Mr. Stonecliff here nor anyone else associated with 'The Vision'... or I'll personally administer a spanking to Mr. Cook's fourth point of contact. Now get out of here before I decide to arrest you for assault.\" Mr. Cole wisely made a hasty retreat.\n\n* * * * * * * * * * * * * * *\n\nTuesday, May 24th. At 10:00am, there was an announcement in front of the Community Center. The grounds were already being cleared.\n\nDr. P. Harvey Eckhart assumed the podium and said in his gravelly voice \"I am putting this land into a charitable trust, to be managed by my daughter and my nephew equally. The land will be used for a Community Center for our elderly friends, our brave war veterans, and other community groups that serve people. I will also be defraying costs of reconstructing the Community Center.\" There was applause from the group in attendance.\n\n* * * * * * * * * * * * * * *\n\nAt 10:30pm that Tuesday night, Sergeant Rudistan and Patrolman Morton escorted two people from City Hall to Police Headquarters. Councilpersons John Colby and Dagmar Schoen were brought to my office, where Cindy and her father Dr. Eckhart were sitting on the sofa, and me in my chair behind my desk.\n\nJohn Colby spoke first: \"The Council voted to use eminent domain to condemn the Community Center property. They're going to seize it and sell it directly to Northwest Properties Development Corp., with no public auction this time. They claim State Law allows this.\"\n\n\"The vote was 5-2, with McGhillie, Goldman, and Steele abstaining.\" said Dagmar. \"Word is that Cook and the others threatened to use eminent domain and seize McGhillie's golf course if he voted against them. Don... they were totally out of control in there. Even Goldman and Steele... they just sat there and let it happen.\"\n\n\"Five to two is not a majority, is it?\" I asked.\n\n\"Technically, yes it is.\" said Colby. \"The Mayor votes only in case of ties, and he made a note for the record that if the abstentions were 'no' votes, he would vote in the affirmative with the five. Archaic rule, but it means it passed. Deemed passed, I guess you would say.\"\n\n\"Well,\" I said. \"There's little we can do about it. Eminent domain is one of the few flaws in the United States Constitution, and there is only one explicit property right in the Constitution.\"\n\n(Author's note: Trivia question: what is that one explicit property right in the United States Constitution?)\n\nI continued: \"I think Dr. Eckhart here may have a legal case concerning the timing... taking his money and then taking the property back immediately.\"\n\n\"They addressed that.\" said Colby. \"They said if push came to shove, they'd return all of Eckhart's money, but Cook said he was going to have the property come hell or high water.\"\n\n\"Ms. Ross,\" I said, \"would you prefer to be hell or high water? I'll take what's left.\"\n\n\"Oh, I'm going to be hell on earth for him, sir.\" Cindy said.\n\n\"Well,\" said Eckhart, who had been on the phone, \"I'll have this in Federal Court within ten minutes of the second reading of their bill. They'll enjoin the development of the land, though that means we can't build a new Community Center, either.\"\n\n\"Well,\" I said, feeling terrible inside, \"that's all we can do. John, Dagmar, carry guns, both of you. Watch your backs.\"\n\n\"I'm going to find someone to run against Cook.\" said Cindy. \"May even do it myself.\"\n\n\"It's too late to file.\" said Colby. \"A month before the primaries is the deadline, and the primaries were May 3d. You can't even run as an independent now, at least you can't get your name on the ballot.\"\n\n\"Okay, everyone.\" I said. \"We've had a bad night. We've had a severe setback. Hell, we've lost one, and I hate losing. You guys go home, get some sleep. I'll have Officers take you back to City Hall, then follow you home to make sure you get there safely. Cindy, take Dr. Eckhart home, take Rudistan and Morton with you, County line be damned.\"\n\n\"What about you, Don?\" Cindy asked.\n\n\"I have to think.\" I said. \"I have to think about what to do.\" They all left me alone. I locked my door and turned out the lights, then sat down in the 'Command Chair'. \n\nIt would be dawn before I became aware of my surroundings again...\n\n* * * * * * * * * * * * * * *\n\nThursday, May 26th. Councilwoman Dagmar Schoen had filed a formal assault charge against Thomas P. Cook, with several members of the Senior Citizens that had been at the scene filing affidavits on her behalf. I was prepared to make the arrest, but the charges were dismissed with prejudice by Judge Harry 'Spud' Nance.\n\n\"This guy is like Sharples.\" said Cindy as we ate lunch at the sandwich shop on Courthouse Square. \"Just cannot get him.\"\n\n\"We got Sharples.\" I said. \"We'll get this bastard, too. Just not for this.\"\n\n\"Maybe my father can win the lawsuit.\" Cindy said.\n\n\"He might get his money back.\" I said. \"But he won't win. It's the Government on the other side in the Courtroom. And the Government has rigged the game so that they win and good People lose.\"\n\n\"Yeah, I know.\"\n\n\"It's like that old movie, when the Police Chief said 'Round up the usual suspects.' Well, all you have to do is round up the politicians. Both Establishment political parties, Republican and Democrat, are equally criminal, equally corrupt. They are above the law. They are not held to account. They are not held to the same standard as you and I and all the Citizens.\"\n\n\"And it's a triumvirate of corruption.\" I said. \"Tell me about the Media coverage of what the Council did. Not one word. I called Bettina myself about it, to no avail. The Media is covering for Cook, covering for the Council, it's all a rigged game and they are all in it together...\"\n\nAs I took a breath, I saw Cindy staring at me. \"Don,\" she said, \"I have never seen you like this nor heard you say things like this, not this strongly and bitterly, anyway. Are you okay?\"\n\nI shook my head. \"This weekend may be the last peaceful weekend I have. After Memorial Day, the shit is going to start hitting the fan. The final phase of the Consultant's plan is going to begin, and I am going to move against him and begin the final attempt to take him out before he can get away. In addition, I am going to have to go prevent the FBI from making a huge mistake and a huge mess, and right some wrongs done to my family...\"\n\n\"You're scaring me, Don.\" Cindy said. \"Let's walk back to Headquarters.\"\n\nAs we walked, I said \"I need to say this, too. Thank you, Cindy. Thank you for being there for me, and working beside me all this time, and for keeping the faith even when you thought I wasn't keeping faith with you.\"\n\n\"I am your Kato, Green Hornet.\" Cindy said. \"I'll be right there with you until the job is done.\"\n\n\"And speaking as family... I love you, Cindy. I haven't said that enough, and I don't want to begin this without you knowing that.\"\n\n\"I love you too, Don.\" Cindy said. \"Now what can I do to cheer you up, besides beating the shit out of Thomas P. Cook?\"\n\n* * * * * * * * * * * * * * *\n\nWhen we got back to the office, Lt. Croyle was waiting for us.\n\n\"Sir, ma'am,\" she said as we sat down in my office, \"looks like someone is trying to bring in a shipment of drugs Group of guys that have been 'disavowed' from T-Square's Regiment. Looks like they want to compete with him. The drugs coming in are oxycodone, vicodin, morphine. Painkillers.\"\n\n\"Painkillers.\" said Cindy. \"Must be a special order for the SBI.\" I laughed.\n\n\"All right, Lt. Croyle, you know what to do...\" I said, then grinned as I added: \"Round up the usual suspects...\"\n\nPart 14 - Epilogue \n\nMemorial Day, May 30th. It was early afternoon, and Lt. Teresa Croyle was in her office. She heard a knock on the door and called out \"Come in!... oh, Commander!...\"\n\n\"Hello.\" I said. \"Why are you working on this Holiday?\"\n\n\"I have no other place to be.\" Teresa said.\n\n\"Well, you don't know it yet, but you do have somewhere to be. Change to civilian clothes and I'll be back in five minutes.\"\n\n* * * * * * * * * * * * * * *\n\nWhen she was ready, I came by her office. To Teresa's surprise, I took the picture of her father from his wartime days from her wall, and said we'd take it with us.\n\nI drove us to the Cop Bar, which was closed for the afternoon for the Holiday... or so it appeared. When we went inside, there were a number of old men in the room. Mr. Davis was there, cranky as ever, and some younger men, but younger only in relation to him. They were all drinking beers.\n\n\"Was this your doing, Commander?\" Teresa asked me.\n\n\"You betcha.\" I said. \"I called every veteran of the Viet-Nam-era 173d Airborne Brigade that I could find in this area of the country, and asked them to stop by.\"\n\n\"Glad you did, young man.\" said one of the old soldiers. \n\nTeresa sat down at a round table with some of them. When I put the picture of her father on the table, some of the men gathered around and looked at it.\n\n\"Yeah, that's him, I remember him.\" said one man. \"Are you his daughter?\" Teresa nodded. \"I was in the 173d with him. He was a no-nonsense man, that was for sure. And one of the bravest sons-of... well, one of the bravest men I ever saw.\"\n\n\"Should've had the Medal of Honor.\" said another man. \"But we're not supposed to talk about that.\"\n\n\"I'll say it, in here at least.\" said another. \"Young lady, your father rescued an entire Special Forces team. One was already dead, but they got his body out, and the rest of them out alive. Your father covered the retreat. His Corpsman went and grabbed him as some of the rest of us started mowing down the Charlies.\"\n\n\"I dunno how we all got out of that, but he led us in, and he led us out.\" said the first old man. \"Most fearless man I ever met. Here's a toast to your father, ma'am.\" Everyone toasted and drank, including Teresa, who'd been provided a beer by me.\n\n\"All I can say,\" Teresa said, \"is thanks to all of you, and for serving, too. A toast to you all.\" Everyone clinked mugs and drank beer.\n\n\"Mr. Davis,\" said one man, \"what Division were you in?\"\n\n\"Why, I was in the One-Oh-First Airborne Division.\" said Mr. Davis with great pride. \"The Screaming Eagles.\"\n\n\"To the Screaming Eagles!\" said a man.\n\n\"The 173d was absorbed into the 101st Airborne after the Viet Nam War.\" said a man. \"So let's sing the 101st song for Mr. Davis, here.\" There was much acclaim.\n\n\"Hey, where's that young Police Commander?\" asked Mr. Davis. I was sitting at the bar, trying to be unobtrusive. No such luck.\n\n\"Come on over here, Commander!\" yelled Mr. Davis. \"You're a Paratrooper too, by God.\" To emphasize the point, two 173d Brigade veterans came over and got me.\n\n\"Definitely make him sing.\" Teresa said. \"You guys have fought your wars... he's about to start his.\"\n\nIt does not matter how bad their voices are, or out of key, when old soldiers sing a military song, it somehow comes out sounding just right. And so we sang, remembering those that had fallen in battle, for their comrades, for their country, for Freedom...\n\nWe have a rendez-vous with destiny.\nOur strength and courage strike the spark,\nThat will always make men free.\nJump right down through the skies of blue,\nkeep your eyes on the job to be done.\nWe're the men of the hundred first,\nwe'll fight till the battle's won!\n\nScreaming Eagles diving from the sun,\nstriking boldly from the air.\nNow it's time to jump, look out below!\nStand up! Hook up! Screaming Eagles, GO!\n\nWe have a rendez-vous with destiny.\nOur strength and courage strike the spark,\nThat will always make men free.\nJump right down through the skies of blue,\nkeep your eyes on the job to be done.\nWe're the men of the hundred first,\nwe'll fight till the battle's won!\n\nAs the old men clinked beer glasses and congratulated themselves on their singing, I thought about it. I realized the words to this song were appropriate. I was about to enter battle with the Consultant of Crime, the final battle, and I would have my rendezvous with Destiny.\n\nHere we go...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/politics-and-prejudice-ch-02"
}