{
    "title": "Lilibeth's Wild Side",
    "pages": [
        "This is a re-post of a story in my Hot Sand story series. The reason I've re-posted it outside of Hot Sand is because I've written more chapters and wanted Lilibeth's Wild Side to be a stand-alone series. If you've already read this one, you can skip it and wait for Chapter 2.\n\nAll characters in this story are fictional, and all are age 18 or older\n\nMarty Berenstine looked at his wife, her near-nudity somewhat of a blur in his mind with so many younger, more nubile girls there on the stage with her.\n\n\"Your wife's fuckin' hot,\" a young male said, his voice raised loud to be heard over the blaring music. \"Totally sick tits.\"\n\n\"Oh shit,\" muttered Marty, glancing at the boy, seeing that it was one of the barely-out-of-high-school kids from his neighborhood back home. \"Yeah, thanks man.\" Feeling an unfortunate need to explain, Marty looked the youngster in the eye. \"We just sorta wandered in here. Wanted a cold beer, you know?\"\n\nThe boy nodded. \"Yeah, man, that's cool. We came for the titties.\"\n\nMarty muttered his second \"Oh shit\", realizing the boy, Tyler, wasn't alone. Marty recognized at least two of the four boys, and one of the two girls. Neighborhood kids, hanging out in this seedy old lakefront resort town, fifty miles from home.\n\n\"That's Tracy. Tracy Chandler,\" Tyler loudly said, pointing at a stunningly hot-bodied girl on the sun-drenched stage. \"The one with the red hair. Do you know her? She lives, like, a couple blocks from you.\"\n\n\"Chandler? No, don't know them,\" said Marty, shaking his head, wondering what the girl's parents would think about her participating in a wet t-shirt contest in the backyard of a dive bar that smelled like stale beer, a contest in which some of the contestants were already stripped fully topless, wearing nothing now but shorts, bikini bottoms or panties. Tracy and Marty's wife, Beth, were two of the brave topless ones.\n\n\"She won this a couple weeks ago. Five-hundred bucks. Awesome tits, right?\"\n\n\"Yeah. I mean...yeah,\" Marty said. He took a gulp of his beer, taking a moment to assess the girl's amazing body. Her eyes and smile were gorgeous, but it was a little lower down that was truly special--wet, glistening, splendiferous big tits that were fully natural and somehow perfect, somehow magical. So delightfully awesome and flamboyant, yet they perfectly complimented her slender waist and elegant shoulders. A Playboy photographer from back in the magazine's heyday would have chased her down the street and begged her to model for him.\n\nTyler was equally enthralled, but his eyes were on Marty's wife. \"Fuck yeah, Mrs. Berenstine's fun, man,\" he said, watching her as she danced suggestively to the loud heavy-metal music, her ass now facing the cheering crowd, her wet white panties clinging to her, her body doing something vaguely like twerking. \"She oughta get a prize for most fun older woman.\"\n\nMarty smirked. Yes, she oughta, he thought.\n\nShe'd done this kind of thing before, Beth had, but never so close to home. The past times had been on far-away vacations, once in Daytona Beach, once in Memphis when she and Marty were there for a blues festival. Both times it was her idea, Marty knowing that her exhibitionist tendencies--which are usually well tamped down and hidden--need to come out and play every once in a great while. It surprised him that today turned out be one of those once-in-a-whiles, but it was what it was; she was up there on stage, all wet and pretty much naked. He just wished the neighborhood kids weren't there to see it.\n\nMarty noticed none of them had drinks in their hands. \"You're not drinking? How old are you guys?\" he asked.\n\n\"Oh, I don't know,\" Tyler said. \"I'm nineteen. Yeah, I guess all of us are. You wanna buy us drinks? That'd be awesome.\"\n\nMarty smirked again, noticing the big, nasty-looking bouncers guarding the stage, and the muscular biker-looking dude tending bar. \"Yeah, sorry, I can't do that. You don't want us all to get thrown out of here, do you? You'd miss the rest of the tittie show.\"\n\nTyler smiled, turning his gaze back to the stage, noticing the huge smile on Beth Berenstine's face as she played peek-a-boo with the crowd, her thumbs under the sides of her soaking wet panties, giving the riled-up audience flashing looks at her middle-aged pussy. \"Wooo Hooo!\" hollered Tyler, and his friends all whooped it up, too.\n\nThe crowd clearly loved Beth's enthusiasm and chutzpah, she being the biggest titted and most risk-taking of the 'older gals' on the stage. There weren't many of them, only three that you'd call middle-aged, the bulk of the contestants being more like college aged or twenty-somethings. But yes, Beth's tits were still rather extraordinary for her age; voluptuously big, firm, 'F'-cup sized eye-catchers that were exuberantly nippled. Her wet hands moved up her body and played with the wet flesh of the big things, fondling them and waggling them, and the crowd responded.\n\n\"Fuck yeah, she's gonna make it through to the next round no problem,\" Tyler said, whooping as loud as he could when the guy on stage raised Beth's arm to get the rowdy crowd to vote on her with the loudness of their whoops and applause.\n\nMarty wondered if this was good, Beth staying nearly nude in front of these neighbor boys for another round. He'd seen her strip all the way, at the wet t-shirt contest in Memphis, and he remembered the wild look in her eyes that night when she rejoined him afterward, her hair a wet mess.\n\nThis was now, though, and he caught her eye and he saw that same wildness in her again as she got a roaring, noisy vote of approval from the crowd. Marty wondered if she recognized Tyler standing next to him, or the other boys that he was sure she knew. Maybe even Tracy Chandler, maybe they'd talked backstage as they were preparing. Marty wondered if Beth was unexpectedly living out a fantasy, stripping and dancing as much for these neighborhood boys as for herself.\n\n\"Dudes, you recognize her, right?\" called Tyler to his friends. \"Mrs. Berenstine, from almost across the street from me. She's animal. Did you know?\"\n\nThe other boys, amazed at the realization that it was her, did not know. Marty noticed their eyes were now wider, their smiles bigger. He took a big, long gulp of his beer. She's animal, he wondered? Must be a good thing.\n\nAnd so Marty watched this final round, the occasional comment from Tyler and his friend becoming surreal as Beth went full-monty nude on stage. Buckets of clear, cold water were poured over her, the throbbing metal music turned up even louder now. Mimicking one of the other girls, Beth went to all-fours on the stage, her back arched downward with her ass up, seemingly positioned for some good porny doggy style. The crowd ate it up, and she began to writhe, her wet pussy and dark little asshole on wide open display for every horny eye in the place.\n\nMarty noticed that Tracy wasn't acting nearly as raunchy, the girl staying on her feet for the duration, keeping her tiny wet thong-style panties on, relying on her stripper-smooth dance gyrations and her clearly best-in-show tits to hold the gaze, and the votes, of the whooping humanity before her.\n\nIt all ended too soon for the boys, but Marty was glad to see Beth up on her feet again, her face red and bashful looking, either from the realization of how far she'd just gone or from the thrill of doing it in front of boys she knows. Marty wasn't sure which. Everything was a blur in his mind now, including Beth coming in third, a prize winning finish that made her smile so brightly, her arms in the air, her nudity on full-frontal display for just a few more glorious seconds.\n\n\"Another five-hundred for your friend,\" Marty said to Tyler. \"She outta go into the business.\"\n\n\"Fuck, that was so awesome!\" gushed Tyler. \"Mrs. Berenstine! Third Place! Holy shit!\"\n\nMarty nodded, hoping word of Beth's fifty-dollar-prize winning performance wouldn't get spread around the neighborhood back home. \"Tell you what,\" he blurted. \"I'll buy you a couple cases of beer, not here but outside somewhere, if you guys all promise to not tell anybody she was here.\"\n\n\"Fuck yeah, it's a deal,\" said Tyler.\n\nMarty looked at Beth on the stage, the first, second, and third place winners still up there, basking in the adulation and appreciation of fifty or so cheering people. Put your clothes on, dear, he wanted to say to her. At least put on your panties for chrissake.\n\nIt was a long ten minutes until Marty saw her again, her body dry and clothed, her hair towel dried, combed, and messed up with her fingers again so it looked halfway normal. He'd spent the waiting minutes chatting somewhat uncomfortably with some of the youngsters, and when Beth arrived, looking a bit embarrassed and bashful in her wrung-out but still wet CAPE COD t-shirt, he could sort of tell that she'd known all along that these neighborhood 'acquaintances' were here watching her go all exhibitionist crazy.\n\n\"I can't believe I got a prize!\" she said to Marty, showing him the fifty-dollar bill, her excitement held in check but still palpable.\n\n\"You were awesome, Mrs. Berenstine,\" Tyler said. \"Animal. Fuck yeah.\"\n\n\"Apparently you were animal,\" Marty said, himself blushing a bit at these circumstances.\n\n\"I guess you got lucky,\" Beth said, eyes twinkling at Marty. \"Seeing Tracy Chandler all...like that.\"\n\n\"Do you know her?\"\n\n\"Do I know her? Marty, she's Janet's daughter.\"\n\n\"Janet? You mean, from your wine group? Oh my God!\"\n\nBeth watched the wheels turning in Marty's head, seeing him put it all together -- the red hair, the gorgeous eyes and smile, the man-slaying tits. \"I told Tracy we'll keep this quiet, okay? If Janet found out I don't think she'd be too happy about it.\"\n\n\"Oh, sure,\" Marty said. \"Yeah, I sorta made a deal with the guys, too. It's gonna cost us a couple cases of beer, but, I thought maybe it was best to sort of...keep a lid on this, you know?\"\n\nBeth smiled embarrassedly, knowing she'd gone full slut much too close to home. \"I get carried away,\" she said, taking Marty's arm, snuggling close against his side, \"but oh my God that was fun.\"\n\nTracy appeared, dressed in shorts and a stunning little string bikini top, the thin white t-shirt she'd worn on stage now all wadded up in her hand. Giving Beth a nice hug, she blushed bright red as her eyes went to Marty's. \"Hi Mr. Berenstine. I'm Tracy. I guess you know my mom.\"\n\n\"I do. Yeah, nice woman. You share her...beauty,\" Marty said, wishing he'd said something on a different topic. Problem was, Beth's wine friend Janet is one of the most attractive women he's ever met, and there wasn't much else on his mind in this moment.\n\n\"It's kinda nuts that you're here,\" Tracy said, still blushing red. \"Your...Mrs. Berenstine, she killed it, right?\"\n\n\"Oh, totally,\" Marty said, trying to act casual. \"You too. You were...animal.\"\n\nTracy smirked, her blush flaring even redder. She knew Marty was trying to be cool, and she appreciated it. She wanted to smile, so she did. A bashful but flirty smile, it shocked Marty to see so much of Janet in it.\n\nTyler, suddenly near Marty, said, \"Dude, we're outta here. Can we, maybe, do that transaction? There's a store up the road a ways.\"\n\n\"Oh, sure, yeah,\" Marty said, disappointed he was being swept out of Tracy's lovely smiling aura. \"I guess...we'll follow you? I don't want to hand it over in the parking lot, though.\"\n\n\"Yeah, yeah,\" Tyler said. \"We're camped, like, just up at the next turn-off from the store. You can follow us to the store, and then follow us up there. There's nobody around, it's not like a real campground or anything.\"\n\nMarty nodded. \"Sounds like a plan. Just remember, I'm buying your silence, right?\"\n\n\"Dude, totally.\"\n\nMarty smiled, wondering what it would be like to be young again, free spirited and carefree, camping by a summer lake with three of the cutest girls he'd ever seen.\n\nUp the road, following a snarling, loud-mufflered Subaru WRX and a sleek Volkswagon Golf with fat tires and blacked-out taillights, Marty wheeled his white Camry quietly into a parking spot next to them at the gas station convenience store. Inside, he found the type of beer the kids desired, and with two cases charged to his card, he carried them out to the back seat of his car.\n\n\"Do you feel like a teenager again?\" asked Beth, smiling. \"I do.\"\n\n\"You didn't look like one today,\" Marty said as he sidled back behind the wheel. \"Jesus Christ, Beth, you looked like pure woman up there on that stage.\"\n\n\"Oh my God, that's the nicest thing you've ever said to me.\"\n\n\"I'm not the only one who thought so,\" said Marty. \"Tyler was...excited.\"\n\nBeth's eyes widened. \"Oh my God, he...he was...hard? You could see it?\"\n\nMarty chuckled. \"Jesus, I didn't think of that, but, probably, yeah. No, I meant he was...enthusiastic. About you.\"\n\n\"Oh my God,\" Beth said, the full weight of what she'd done, and who'd seen her do it, finally hitting her. \"I think I'll be jumping you as soon as we get home,\" she said. \"Want a blowjob on the highway? We haven't done that in a long time.\"\n\nMarty smiled, pulling out onto the two lane road again behind the Subaru and the Golf. \"You know guys never say no to blowjobs, right? I mean, it's not in our DNA.\"\n\nBeth smiled, loving how sexy this day had turned out. The day trip to the lake was supposed to be for lunch and a little antiquing, but mediocre barbecue and some tasty beer at what turned out to be a biker bar had led to so much more. The wild thrill of her unbounded exhibitionism was still with her, a feeling sort of like adrenaline but mellower and nicer as she spun back the memories of the last hour in her mind. It surprised her how easy and fun it had all felt this time -- the baring of her breasts; the amusingly lecherous eyes of the crowd; the baring of her pussy; the down on the floor, fully nude mimicking of the dirtiest, most fun kind of pure sex. She thought about what Marty had just said, about Tyler being an enthusiastic spectator, not of the other, younger girls, but of her. Smiling as Marty drove, she didn't speak of these thoughts.\n\nJust moments later the two rasping imports made a hard left, coming to rest on a sandy turn-off next to the somewhat quiet country road. A noticeable pathway, sandy and well-trodden, led through a thicket of sand cherry and cottonwood. Toward the lake, Beth presumed.\n\n\"This is it. Wanna check it out?\" asked Tyler.\n\n\"Yeah, sure,\" said Marty, hauling his middle-aged bones out of his car. \"Beer's in the back. Is it a long walk?\"\n\n\"No, it's like, not far,\" Tyler said, as he and his friend Matt took the cases of beer from the Camry's back seat. \"I'm glad there's no other cars here. We were worried when we left our stuff here.\"\n\n\"Justin, how's your Mom?\" asked Beth, addressing one of the other, quieter boys. \"She had her ankle in a cast, last I knew.\"\n\n\"Oh, yeah,\" Justin said, quietly embarrassed to be talking to Beth after seeing her the way she was at the contest. \"She's good now. She got it off last week.\"\n\nThe strong afternoon sun beat down on the group, Beth feeling particularly sticky with her still-damp t-shirt on. She and Marty brought up the rear on the short hike, following the seven youngsters down the pathway and into the shade.\n\nIn just a few minutes the trees opened up to full sunshine, Lake Ontario stretching into oblivion, its placid waters on this hot afternoon barely tickling the sandy shore with ripply waves.\n\n\"Oh my Gosh,\" Beth said, looking around at the tiny but perfect little beach. \"This is so private here. How did you find it?\"\n\n\"I think Jordan found it, right Jor?\" said Tyler.\n\nJordan, another boy Beth casually knew though his mother, nodded. \"Yeah, I was looking for a place to fish.\"\n\n\"Good job,\" Beth said, sounding like the soccer mom she used to be. \"You guys definitely need to work on your tents, though. Do those things actually keep you dry?\"\n\nShe was referring to the ragtag camp pitched from stakes of wood and tarps, all of it looking like a good wind would blow it all away. Sleeping bags were disheveled after last nights use, Beth noting that there weren't enough of them to go around -- some doubling up had almost certainly happened here. Four boys and three girls, she counted, wondering who goes with who.\n\n\"I might buy a big tent when they go on sale in the fall,\" said the only boy Beth didn't know.\n\n\"That's a good plan. Hi, I'm Lilibeth,\" Beth said, extending her hand in a formal way. \"Call me Beth, though. Everyone else does. What's your name?\"\n\n\"Sean.\"\n\n\"Hi Sean. Did you meet Marty?\"\n\n\"Not really.\"\n\n\"All of you, call us Marty and Beth, okay you guys?\" said Beth. \"I always feel old when people call us Mr. and Mrs. Berenstine.\"\n\nThe first to test these adult waters was Tracy, smiling, her big beautiful eyes looking out through the rose-colored lenses of wire-rimmed round sunglasses. She asked, \"Beth, wanna drink with us and party a little? Jordan's got some rippin' weed.\"\n\nFeeling like Tracy was a new friend, a fellow traveler on the wet t-shirt highway, Beth smiled at her. \"I still can't believe it's legal now in New York State. I haven't tried it yet. Well, not since...before you guys were born.\"\n\n\"Oh, shit, really?\" said Tyler. \"You used to burn it? That's so cool. How 'bout you Mr....what's your name again?\"\n\n\"Marty. Yeah, Beth and I, we...I mean, it was a long time ago. Yeah, it used to be fun tokin' it up, catchin' a little buzz.\"\n\n\"Cool. You guys are awesome,\" said Tyler. \"Have a seat, let's pass some beers around.\"\n\nJust five minutes later, after the rippin' good weed had made a couple of rounds, Beth was as high as she'd ever been, giggling as she fumblingly passed the pipe to Marty for his third lungfull. \"Oh my God, I'm so fucking high! \" she said.\n\nMarty chuckled, his mind a buoyant balloon filled with helium. \"Yeah!\" he said, smiling in a goofy way as he tried to line the pipe up with his already inhaling lips.\n\n\"So Beth, what made you do what you did today?\" asked Tyler. \"Is it, like, your jam?\"\n\n\"Yeah, it's my jam!\" laughed Beth. \"No, I don't know, it's just...so fun. Tracy, do you feel that way? Isn't it just...so fun? \"\n\n\"Yeah,\" Tracy said. \"I mean, it's a total turn-on. It's, like, different than being horny, but kind of similar, right?\"\n\n\"Yup,\" Beth said, nodding, smiling knowingly. \"I mean, I know why guys don't do it, they'd be all hard with big ol' boners. Us girls, our lady boners don't show.\"\n\nTracy smiled.\n\n\"I mean, it's a good thing they pour water all over us, it kinda hides all us girls' wet pussies,\" Beth said, the words flowing from her stoned mind in an unfiltered way. \"Am I right, Trace? I hope it's not just me. I just feel so ready, for anything, when I'm up there. I mean...if Marty had jumped up and started fucking me I woulda yelled 'Yeah, do it!' and started laughing probably. A fuckin' live sex show right there in front of everybody.\"\n\n\"Fuck yeah. You should have, Marty,\" said Tyler.\n\n\"Fuck yeah,\" said Sean.\n\nTracy giggled, smoke leaking from her smile. \"Beth, you're savage. Marty, would you do that?\"\n\nMarty chuckled. \"I doubt it, but, Jesus Christ, if I was this high...\"\n\n\"They don't really do that anywhere, do they,\" said Beth. \"A live sex show, I mean. I wouldn't mind watchin' it.\"\n\n\"Oh, so now you're a voyeur, too?\" said Marty. \"I guess exhibitionism and voyeurism pretty much go together.\"\n\n\"Those are some big fuckin' words,\" said Tyler. \"I like 'em.\"\n\nAutumn, the quietest of the three girls, giggled. \"You can't like 'em without understanding 'em.\"\n\n\"I understand 'em,\" said Tyler. \"Exhibitionism is showin' it, voyeurism is watchin' it. Which do you like to do?\"\n\nAutumn shrugged, looked shy. \"Showin' it, I guess.\"\n\n\"Nice,\" Tyler said. \"You got a bra on, right? Did you pick it 'cause it's ugly or 'cause it's pretty?\"",
        "\"It's pretty.\"\n\n\"Then why keep it covered up all the time?\"\n\nAutumn smiled, took off her shirt in one fluid move, her face reddening as she glanced at Marty.\n\nAutumn and Tracy's friend, Kylie, hadn't said much up till now, feeling a bit uncomfortable ever since arriving back at the campsite, what with two folks her parents' age hanging about. Now, though, she was beautifully high and feeling more relaxed, and she demonstrated her comfort level by whisking off not only her shirt but her shorts as well, returning to her cross-legged sitting position on the sand in the sun, saying, \"I like showin' it, too,\" with a happy smile.\n\n\"Sweet,\" said Justin. \"Purple panties. How come your bra doesn't match?\"\n\n\"Got a problem with it? Take it off of me.\"\n\nJustin smiled. \"Why didn't you do it at the bar? Next time, maybe?\"\n\nKylie shrugged, looking like the answer was probably a no. \"This is different. You're not a bunch of redneck bikers. Beth, is that part of the thing you like? Doing...all that in front of those kind of guys?\"\n\n\"Oh, wow, I don't know,\" said Beth, clearly enjoying being part of this youthful conclave. \"Yeah, I mean, those contests are always in front of those kind of bad boys. It's fun though because there's always some regular guys, too. I like to single out the shy cute ones and give 'em some eye.\"\n\nKylie smiled, nodding. \"Yeah, that sounds fun. But I mean, you, like, take everything off.\"\n\nBeth's super high mind felt the blush that hit her face like it was a blast of heat from a big bonfire. \"Just twice. The first time I didn't. Two other girls did that time, but yeah, that was a step for me.\"\n\n\"Marty,\" asked Kylie, \"did you kinda freak when she went all the way the first time? I mean, totally nude like that?\"\n\n\"I don't think so,\" Marty chuckled. \"We'd had quite a few drinks that day and night, so....\"\n\n\"Nice\" Jordan said. \"The drunk nakeds. We sorta did that last night.\"\n\n\"Really?\" said Beth.\n\n\"It was dark, we were skinny dipping, so we just all sorta sat around that way, after.\"\n\nBeth smiled. \"Wow. Budding nudists. You better not do that in your backyards back at home, you might get in trouble.\"\n\nTracy, without any words, stood and wigged out of her shorts, the tiny thong panties she'd kept on during the contest still feeling damp, needing a bit of fresh air on them to dry them. They didn't match her bikini top but looked plenty cute. The pipe, newly packed full of the powerful weed and already lit, was passed to her as she sat down. Taking a deep drag on it, she held the smoke in her lungs.\n\nBeth smiled again, feeling like a college girl, feeling so very hot and sticky as the late day sun beat down on her. \"My bra's not as little and cute as Autumn's, but...\" she said, whisking her drying t-shirt off in one two-armed motion.\n\n\"Nice,\" said Tyler, smiling. \"You got crazy nice tits, Beth. I think you shoulda done better than third place.\"\n\n\"Oh, jeeze,\" Beth said, delighted by Tyler's youthful male gaze. \"I can't seem to stop blushing around you guys. Let me smoke some more, I'm not driving.\"\n\nSean passed her the pipe, handing her the lighter so she'd get a righteous hit.\n\nTyler watched her, his eyes on the way her arms squeezed her breasts together as she worked to light the pipe and get a big hit from it. \"Seriously,\" he said, \"you and Mrs. Chandler got the best ones. Why can't all mom's have tits that nice?\"\n\nMarty laughed. \"I've often thought the same thing!\"\n\nBeth laughed, coughing out the hot smoke, burning her throat. \"Shut up you guys!\" she whined, sounding like a happy teenager, laughing as she tried to light up the weed again. \"There, I got it,\" she said, holding the smoke deep in her lungs, having lost just a little of it with her words. She handed Marty the pipe but he didn't smoke it, his eyes watching her as she held her breath, and held her breath, finally blowing out a huge cloud of smoke. \"Fuck yeah,\" she said. \"Best head-rush ever! \"\n\nStanding up, rather woozily, she announced, \"Tyler, I wanna show you my tits again.\"\n\n\"Fuck yeah,\" he said, watching her hands waste no time, her bra unclasped, its straps sliding down her arms as it dropped to the sand.\n\n\"Fuck yeah is right. Fffuck! \" she said, standing with her arms fully out at her sides, her fingers spread wide. \"I think I like this.\"\n\n\"Maybe you'd better go easy on the reefer, Beth,\" Marty said, smirking at her, surprised but not surprised that her exhibitionism was blossoming again.\n\nShe giggled as she sat down. \"They don't call it reefer anymore, do they? Do you?\"\n\nThe question was directed to Tyler, so he answered. \"Yeah, it's whatever you want to call it. It's all good.\"\n\n\"You like my tits better now, honey? It feels so good having 'em all bare like this.\"\n\n\"I fuckin' love 'em,\" said Tyler. \"I mean, seriously, you're like, the most fun.\"\n\nBeth smiled, picked up the beer that she'd neglected, guzzled some of it. \"Beer tastes so good on the beach, don't you think?\"\n\nQuietly, with no fanfare, Kylie took off her bra, leaving her in just her purple panties. Tracy went topless, too, removing her cute bikini top, showing off her stunning, big, prize-winning young tits again, and Autumn followed suit, baring her milky white breasts, not wanting to be left behind and thought of as a prude.\n\n\"Damn, Marty, you're gettin' it today, huh?\" said Beth. \"Eye candy out the wazoo. He secretly loves those wet t-shirt contests,\" she told the others. \"I caught him, a long time ago, watchin' them on his internet.\"\n\n\"Oh, wow. Is that why you did it that first time, Beth?\" asked Tyler. \"Because you knew he liked it?\"\n\n\"That's right! You're good. You should be a detective.\"\n\n\"Oh, wow, that's so nice, Beth,\" Tracy said. \"That'd be so fun to do for your husband. I'll do that someday.\"\n\n\"Yeah, and you'll win and he'll be so fuckin' proud of you,\" Beth said.\n\n\"Hey, I'm pretty proud of you getting third place!\" chuckled Marty.\n\n\"Fuck yeah, me too,\" said Tyler. \"My favorite neighbor.\"\n\n\"Aww, sweetie! How come you're so nice to me?\" said Beth.\n\nMarty laughed. \"Cause you're sitting there like that! I keep trying to tell you how men think, babe.\"\n\nBeth smiled. \"Yeah, I think I'm figuring it out. If I want all their eyes on me I gotta take these off, too,\" she said, standing again, bending at the waist, sliding her shorts down her legs and off of her.\n\n\"Super nice tits, Beth,\" Tyler said, the good weed fueling his mesmerization as he watched how gravity affected them. \"Totally fuckable.\"\n\n\"My...tits are?\" she said, surprised and delighted that such a porny thing was said about her. Her head swiveled toward Marty. \"We gotta try that sometime.\"\n\nMarty chuckled. \"Yeah, I'm game.\"\n\nShe sat down with a thud, not graceful like a younger girl would do. \"I'm so high! I'm so glad this is legal now. Marty, we gotta get some.\"\n\n\"Yeah, it's fun.\"\n\n\"Light it up, dude,\" Sean said, cluing Marty in that he'd been sitting there holding it.\n\n\"Oh, shit,\" Marty said, suddenly feeling the warm pipe in his hand. \"I gotta drive. Maybe I'll take ...just one more hit.\"\n\n\"I'm giving Marty a blowjob on the drive home,\" Beth said, proudly. \"I already told him.\"\n\n\"Nice,\" Tyler said, eyes twinkling. \"You're fucking awesome, Beth. Do you think other mothers in the neighborhood are like you?\"\n\nThe sudden remembrance of home jolted Beth's nice high a little. \"I'm doubting they'd do the contest part. But maybe blowjobs. Maybe not in a car, though. I don't know. Tracy's mother Janet might, but I really shouldn't say that.\"\n\nTracy's face showed her bemusement. \"My Mom? Really? Does she...talk about that stuff?\"\n\n\"She's in the wine club with me, and some other fun girls. Sometimes we talk about...you know...fun things,\" Beth said, saying no more. Taking another big gulp of her beer, she finished what was left in the bottle. Jordan opened a fresh one, handing it to her, then he passed full bottles around to everyone.\n\n\"I never partied much in college,\" Beth announced. \"I kinda wish I did more.\"\n\n\"Where'd you go?\" asked Kylie.\n\n\"Syracuse. It's supposed to be a really good party school. I guess it sorta was, I got high a bunch of times, drank a lot, but...my roommate got most of the sex.\"\n\n\"Yeah, but, did you get to watch?\" asked Tyler, smirking.\n\nBeth smiled at his handsome, mischievous eyes. \"Sort of. I saw them fucking once, just from a distance in the dark. And I let her boyfriend see me naked...maybe more than once. Yeah, I guess it was a few times,\" she said, the remembrance of her naughtiness making her smile in a shy way.\n\n\"Oh, wow,\" Marty said, his voice happily stoned. \"This is the first I'm hearing of this.\"\n\n\"You just flashed him, or what?\" asked Tyler. \"How'd it happen?\"\n\n\"It was a weird little apartment,\" said Beth. \"The bathroom was right there in the living room, just a door there, you know? I always thought it was strange, everybody hearing you flush the toilet and stuff. Anyway, I was in there and I heard him come to the apartment one day, and I heard my roommate go to her bedroom to change her clothes, so I took off all mine except my panties and I walked out of the bathroom real casual, not looking at him in the little kitchenette at all, pretending that I didn't know he was there. It happened kind of perfect, him not moving, not saying anything, so I just sorta walked around a little, looking out the window, picking up a book off the living room coffee table. I knew he was watching me. My tits were even nicer back then.\"\n\n\"Jesus, Beth,\" said Marty, mesmerized by the fun little story. \"You're turning me on.\"\n\n\"I'm turning myself on,\" Beth chuckled. \"Do you girls...like doin' stuff like that?\"\n\n\"I do now,\" said Tracy, with a coy smile. \"You're inspiring.\"\n\n\"I did it more than once, different ways. Fully nude a couple times. He was really cute. My roommate got really pissed at me the last time. She knew what I was doing. I guess that sorta stopped me.\"\n\nMarty nodded, smiling because he now knew more of a backstory to Beth's exhibitionist tendencies, these occasional flare-ups of public nudity that only happen once in a while. He understood better now that it was needed, she had a need that was long-standing, a decades old piece of her psychology that wanted to be fed and rejuvenated now and then. These deep-thinking revelations nearly made his head explode. \"My sweet honey. I fuckin' love you,\" he blurted, so mightily stoned.\n\nBeth giggled, Marty laughed, and most of the others laughed, too.\n\n\"Beth, if we're all being honest and stuff,\" said Tyler, \"you're givin' us all boners.\"\n\n\"I am not!\" said Beth, still laughing, her tits jiggling nicely.\n\n\"Fuck yeah. Your story made me hard as fuck,\" Tyler said, feeling the thrill of having this moment with a neighborhood mom.\n\n\"Maybe you should fuck my tits, then!\" Beth said, laughing at the hilarity of it. \"Maybe Tracy's are yours, though. Are any of you couples?\"\n\n\"Not really. Some of us sort of hook up a little.\"\n\nBeth tried to focus her mind just a bit, noticing that Tyler looked more bashful than he had just moments ago. The 'fuck my tits' comment was too far, she knew, enough to embarrass any boy when coming from an old lady like her. She noticed the three girls looking suddenly bashful, too, the sudden outing of their 'hook up' nature possibly embarrassing them. \"Well I think it's fucking awesome,\" she said, taking the pipe as it was passed to her. \"I wish we had hook-ups when I was young. Sounds really fun. Marty, do you wish that?\"\n\nHe watched her light the pipe, knew she was now stupefyingly high. \"Yeah, for sure,\" he said. \"Mainly I just wish I was young.\"\n\n\"You're not old old,\" said Tracy, eyeing him. She felt him looking back at her, sensing her own bare breasts keenly, her nipples hardening as Marty politely kept his eyes up on hers.\n\n\"Thanks, Tracy,\" he said. \"That's actually a pretty nice compliment.\"\n\n\"Show 'em your chest, Marty,\" Beth said, gulping a slug of beer from her bottle. \"I think it's really nice.\" Turning her eyes on Tracy, she added, \"He's all hairy there.\"\n\nTracy smiled, her embarrassment still showing but different and cuter now.\n\nBeth smiled when Tyler beat Marty to bare-chestedness, the boy's shirt off in a flash, tossed away like litter. Justin and Sean were already bare chested. When Jordan and Marty showed their upper bodies, a hush overtook the little party, all the bare tits and masculine skin suddenly feeling very real. Everyone started to wonder what was happening here, this kind of mixed-age, mixed-gender, group toplessness being far from normal, especially in the afternoon daylight.\n\n\"My hairy man,\" Beth said, smiling, her hand reaching, her fingers finding and feeling Marty's warm chest.\n\nThe three girls watched her, watched her hand, her fingers, the hairiness of a fully mature man. The boys had a little of it, especially Sean, but his was younger chest hair, almost groomed looking. Marty's had a salt and pepper look to it, thicker and not the least bit unpleasant. Tracy, in particular, was wishing it was her own hand there on him, feeling the feel of a nice older man's hairy chest.\n\n\"I'm fucking ripped,\" said Jordan, a big cloud of smoke following the words out of his lungs. \"This is the best weed in a while.\"\n\nBeth smiled, loving how ripped she herself felt. Knowing it was a mutually massive high made her somehow even higher, and it nearly surprised her to find her hand not on Marty's chest anymore, but down on the warm, hard lump of the crotch of his shorts. She looked at him, her hand gentle but unrelenting, massaging his hardness. Her eyes showed the wonder of it, the quiet naughtiness, the almost bashful thrill of doing this sexy thing with the others watching.\n\nKylie, Autumn and Tracy felt the inner glow, too, the same softly thrilling head rush of horniness that Beth felt. Each of them silently reached for a boy, Kylie's hand landing right on a crotch, Tracy and Autumn both feeling a masculine inner thigh first, then sliding to the more exciting part of the boys, the girls all delighted to feel hardening arousal through the boys' shorts.\n\nBeth, thrilled by all this, wondered if Marty would like his 'riding home' blowjob right now instead of waiting until later, the thought of giving it to him with the others watching exciting her beyond belief. It was almost like that fantasy that she'd conjured, of him fucking her doggy style on stage at the bar, but this was different. This was real, and this was doable. Totally, easily doable, she knew, because the others--in her stoned and horny mind, at least--seemed to be all onboard this sexy crazy train.\n\n\"You told me earlier that guys never say no to this,\" she said to Marty, unfastening his pants. Her voice had risen out of silence, everyone rapt, watching.\n\n\"Holy shit,\" Marty quietly said, stunned, his surprised mind so very high and so strangely happy.\n\nThe girls' hands massaged their boys' hard lumps as they all watched Marty's cock go into Beth's quietly moaning mouth, she on her knees now, bent over him as he sat on the warm sand. Kylie massaged two boys' arousal, one on each side of her.\n\n\"Holy shhhittt,\" Marty said again, his mind spinning happily now, his cock as hard as a boy's.\n\n\"Your tits look sweet like that, Beth,\" Tyler said.\n\n\"Wanna play with them?\" she asked, her horniness now fully risen. \"You'll have to ask my husband's permission.\"\n\nMarty chuckled, this whole massively stoned situation making him stupidly happy. \"Go for it, my man. My sweet wife's got this all under control. Ohhhh! \" he moaned, as Beth's smiling mouth sucked his cock tightly deep.\n\nTyler nearly jumped up, making Kylie smile with surprise at his blatant interest in this fun but mom-aged woman. But Kylie guessed she understood, because she herself was fascinated by Marty, his hairiness so masculine and alluring, his cock so surprisingly nice, its wild hardness so impressive and downright breathtaking as she watched Beth mouth it so nicely.\n\n\"Oh my God, horny much, you guys?\" she said, her distracted mind realizing that Tracy and Autumn were already giving blowjobs to Jordan and Sean. The newly minted moans all hit her ears, and her eyes landed on Justin's. Her hand was already there, feeling the nice hardness of his cock through his shorts, so she kissed him, and his hand went to her soft breast.\n\nTyler, too, knew a few things about soft breasts, but these womanly ones he now had his hands on, these Beth breasts, nearly stunned him with their bigness, their weighty feel and their warmth. \"Oh my God!\" he whispered, his smoke-and beer scented voice not far from Beth's ear.\n\n\"You like 'em?\" she mumbled, her soft lips still on Marty's wet cock. \"I like your hands on them. Fffffuck.\" Her mouth plunged downward, engulfing the hard cock again, making Marty moan.\n\nTyler, so rippin' high, softly moaned as he quietly lost himself in the warm, womanly feel of Beth's body. This was a whole new thing for him, an older woman, his first and he now hoped not his last. He desperately wanted better access to these big tits that hung under her as she knelt over Marty, so he boldly lay on his back on the sand, close up against the side of Marty's leg, and it was heaven down there, tit heaven, Beth moaning so deeply as she fed Tyler's hunger with them, tea-bagging her wildly aroused nipples into his moaning mouth.\n\nBeth, so mightily horny, as turned-on as she'd ever been in her life, reached for the crotch of Tyler's shorts, groaning onto her mouthful of Marty's cock when she felt how rock-hard aroused Tyler was.\n\nKnowing this was all blowing up into something awesome, Tyler's hands were suddenly there by Beth's hand, and she whimpered a little, in disbelieving delight, when she realized he was unfastening his shorts. With his young, hard-as-fuck cock suddenly there, Beth's sweaty hand claimed it, firmly stroking it, this surprising daylight tryst so wild and new she couldn't actually believe it. It all felt like fantasy, a dream, maybe she was still sitting with the others, maybe the weed had hit her so hard she was hallucinating, maybe she was passed-out and it was time for Marty to drive her stoned ass home.\n\nBut no, this was real, she knew. She'd gone full slut and it was awesome--her turned-on husband and the boy from down the block being her very willing sex toys. She lifted her tingling tit from Tyler's mouth, smiled devilishly with Marty's cock still in her mouth, and dropped her other electrified nipple down, Tyler's mouth taking this new one, Tyler's hot cock feeling stunningly hard and curvingly lengthy in her hand.\n\n\"Ffffuck yeah,\" she said, her head lifting, her unmistakably horny eyes hitting Marty's. \"I want you to fuck me. Right now.\"\n\nMarty's expression showed his fully-buzzed surprise. \"Seriously?\"\n\n\"Mmm hmm,\" Beth nodded, her weighty tit now mashed into Tyler's moaning mouth. \"Do you want to?\"\n\n\"Yeah. I mean...yeah,\" Marty said, glancing at the others. The blowjobs were fully carnal now, everyone looking dreamily fleshy and openly sexual.\n\n\"Do it behind me. Right now,\" Beth said.\n\nMarty got the drift: Beth didn't want to move and give up the sweet new pleasure she was tied up in with Tyler, and that was all right with him. If he was going to get to fuck his horny wife on the beach, in the middle of a sort of orgy, the first he'd ever seen or been close to, it was all right with him. Damn the embarrassment, it was full speed ahead, and just a dreamy few seconds later he was behind Beth, pulling her white panties down onto her thighs. He thought of kissing her pussy but she wanted to be fucked, so he pressed his cock into her insides and listened as she loudly exclaimed her happiness.\n\n\"Oh my God yes!\" she blurted, her back arched downward, nearly smothering Tyler with her warm tit flesh.\n\nAs Marty fucked her, he watched her hand on Tyler's hard cock, and his eyes glanced at the others, seeing all their eyes watching him; even the blowjob-giving girls were watching him. Seeing the horny looks in all of the girls' eyes, an uncontrollable bellow roared from his lungs.",
        "As this surprising fucking of his dear wife continued, he realized just how high he'd gotten, the slow rising of his impending orgasm welling up in his psyche like a molten, heavenly kind of euphoria, one that felt endless and ever growing. Beth's own happy noises and writhing ecstasy added to it in an exponential way, the thrill of this sudden group sex rising even farther toward rhapsody when she made the delirious decision to take Tyler's nice young cock into her mouth.\n\nSoon Tyler was up on his knees and Beth was a spit-roast, his hands gently in her hair as she took on two men for the first time in her life. Tyler knew it was a bold thing he was doing, fucking Beth's mouth in this brazen way, but Marty's obvious pleasure let him know everything was all right.\n\nTracy, Autumn and Kylie were ready to take the next step into this exhibitionist realm, Tracy the first to take the plunge, sitting slowly down on Jordan's upright cock. Autumn did the same on Sean, and Kylie took on Justin, her preference the same as Beth's -- a ruttish explosion of good deep doggy-style on hands and knees on the hot sand. All three of the girls had stripped themselves fully nude, and the boys were all bare, too, the strong afternoon sun already making skin glisten.\n\nBecause of the placement of everyone, Beth could easily see what was happening. The happy noises coming from her were mostly from the pleasure Marty and Tyler were giving her, but some of her moans came from deeply guttural reactions to the pleasureful sights she was seeing, Justin's gorgeous tight-muscled ass as he fucked Kylie being a particularly moan-worthy sight.\n\nIt sometimes takes Beth a good long while to reach orgasm--she often wonders if the moon and the stars have to be in the correct positions in the heavens--but she had a good feeling today would be different. She felt the stirring in her loins as Marty's surprisingly good hard fucking continued, an electric tingle that started to reach her toes and her fingertips. Oh my God I'm gonna get there, she now prayed, and how amazing if it happens in a group! Out in the daylight! With Tyler Redmond's sweet young cock in my mouth!\n\nShe swallowed his hard flesh more voraciously, as deep as she could take him, her gagging, moaning mouth giving him everything she had as the swell of orgasmic electricity expanded inside her.\n\nShe thought she heard Marty--still fucking her hard and fast--say \"Holy wow!\" when her orgasm ripped through her, and she knew she heard Tyler make wonderful noises somewhere between yelps and bellows as his cum gushed into her mouth. As her orgasm hit the uncontrollable spasms phase, her lips lost their tenuous grip on his thrusting, spurting cock, his hand grabbing it and aiming it, the youthful force of his spurting cum splashing onto her face. Marty came hard, deep inside her, his own masculine bellow a glorious noise the three girls wouldn't soon forget.\n\nBeth's brain shut down for a few seconds. Nothing but the faint whine of silence. But no, she began to hear again, to comprehend, the sweet sounds of three other couples fucking, a youthful harmony that sounded like nothing but raunchy fun.\n\n\"Oh my God, Marty,\" she breathlessly said, feeling his cock fucking her more slowly as it began to soften. Tyler's cock was still there, too, still hard, seemingly waiting for her to do something with it, so she sucked it into her cum-slippery mouth again, making Tyler moan.\n\nJordan came just then, Tracy suddenly off of him, stroking the full length of his upright cock, her wide eyes watching the cum fly high. When it was fully expelled, just some oozing down the tip of it, she took him into her mouth, and his head tipped back, and he groaned happily at the summer-blue sky.\n\n\"You made a mess of me,\" Beth dreamily said, her happy, horny eyes on Tyler's. \"Nobody's ever cum on my face before.\"\n\n\"Oh wow,\" Tyler said, his eyes shifting to Marty. \"Dude, is it all right? You don't...do that for her?\"\n\nMarty chuckled, still mighty high. \"It's cool, dude. I mean, we've got a whole lake to wash up in, right?\"\n\nBeth, still down in a porny doggy-style pose, looked over her shoulder at him. \"You're done? What if I don't want you to be?\"\n\nMarty smiled. \"Hey, I'll do you with my mouth if you want, but my pecker needs a rest.\"\n\nBeth had a strong, strong desire to ask him if he'd mind if Tyler took over, the boy's cock still plenty hard enough to fuck for a while, she reasoned. But no, she knew it was too much, and anyway the spit-roasted orgasm she'd just had was better than anything, ever. There was no need for more; this day was more complete than anything she'd ever dreamed. She'd even got to try the new legal weed, and now knew it's all good, and plenty fun.\n\nAutumn, Sean, Kylie and Justin were still quietly fucking, Kylie the one looking their way, her pure, beautiful smile maybe the sexiest thing Beth had ever seen. \"Lookin' good, girl,\" Beth said to her. \"Feel nice?\"\n\nDown in a low doggy-style position, with Justin fucking her so slowly and smoothly now, she nodded, her smile bigger and brighter. \"So good.\"\n\nBeth smiled, wondering if these girls know how to orgasm, a skill that she herself didn't grasp until she was older than they are.\n\nTracy and Jordan, out for a splash in the lake with an inflatable beachball, giggled like children. Beth, so messy, almost didn't want to wash the cum from her face, but she knew a clean-up in the lake was needed. Taking one last lick of Tyler's perpetually hard cock, she roused herself, standing on her knees at first, then up on her feet, kicking off the panties that had been down around her thighs. \"Oh my God,\" she said, smiling brightly. \"Naked on the beach. I think I love this.\"\n\nMarty chuckled, decided to strip himself one-hundred percent bare, his high, freshly orgasmed mind not even thinking about the girls watching him. He took Beth's hand, walking with her into the surprisingly warm waters of this shallow bit of Lake Ontario.\n\nThey each wanted to say something to the other, but didn't, the sound of Tracy and Jordan's splashing giggles and the drone of a distant powerboat all sounding like a summertime dream. Beth bent at the waist, splashing water up onto her face, washing away the cum. Looking up again, she saw Jordan approaching from deeper water, and Tyler was wandering toward her off the beach.\n\n\"Marty, wanna play with me?\" yelled Tracy, holding the ball over her head with both arms, her spectacular tits lifted a bit, the lustrous flesh of them glowing milky white in the bright sunlight.\n\nBeth looked into Marty's eyes, her face alive with thought. \"Are we...on our own? Is that...something we can do? You know me, when I get in a mood...I'm not really a 'no' kind of girl.\"\n\nMarty shrugged, feeling mellow and entirely happy. He glanced out at Tracy and wondered if she'd even be interested in the kind of thing Beth was almost talking about. \"I wouldn't mind a feel,\" he said.\n\n\"Ha!\" Beth said, smiling, knowing Marty deserved one after how wild she'd just gone with Tyler. \"I wouldn't mind one either,\" she added, her stoned, horny gaze having already shifted to Jordan. His nakedness was emerging from the sparkling water, his smooth young body and his darkly hairy crotch drawing her eyes right to his cock.\n\n\"Looks like I'm playing ball,\" Marty said, red-eyed stoned and smiling. \"I'm here, if you need me.\"\n\nBeth felt a rush of adrenaline, goosebumps making her arms tingle as Marty, moving unhesitatingly, splashed toward deeper water and his sexy red-haired mermaid.\n\n\"Are you boys here for a swim, or are we gonna stand here and play with each other's bodies?\" asked Beth when Jordan and Tyler converged on her. She answered the question for them when she bent at the waist and took Jordan's balls into her tonguing mouth, giving her upturned ass to Tyler, hoping he'd fuck her, right away, quick and hard. Tyler dropped to his knees and buried his mouth there, tight between her ass cheeks.\n\n\"Oh, wait a minute, Honey,\" Beth said. \"Let me clean first.\"\n\nShe squatted in the shallow water, using one hand in front of her and one behind, cleaning her pussy and her asshole, more than once until everything felt tingly and good. Standing again, she bent and everything resumed, Jordan's tight balls feeling particularly interesting in her mouth, Tyler's adventurous tongue going right to her asshole. \"Oh God! she moaned, feeling his hand on her pussy, too.\n\nYes, this was it, she knew. This was a full-on fuck fest in the making, because she really, truly wasn't a 'no' girl when her mind was full-horny like this. Not that she didn't love marriage, she did, but it had been forever since she was 'free', and she was damn well going to take advantage of this one-of-a-kind afternoon. \"Fuck me, baby,\" she cooed at Tyler. \"I want both of you to fuck me. I want all of you to fuck me. Make me cum like a motherfucker.\"\n\nAnd with that, Tyler was in, his long, curving cock slipping in easily, so wet and cum-filled was her pussy. Beth squealed, struggling to keep her mouth in control on Jordan's balls. His cock was fully hard, so Beth sucked that, too.\n\nMarty heard her, knew the squeal was the big moment, another guy's cock fucking his wife, the first since he'd know her. It struck him as odd that he was okay with it. With his eyes on the perfection of Tracy's tits, her beautiful but curious smile drew his eyes up where polite society wants them.\n\n\"Maybe I shouldn't have asked you,\" Tracy said, glancing back at Beth being double-teamed. \"Is that...okay?\"\n\n\"Yeah, I mean, this is a big day for her. We've never done this before.\"\n\nTracy nodded, liking the kind honesty she was seeing in Marty's mature eyes. \"But the contest, she's done that before.\"\n\n\"Yeah, a few times,\" Marty said. \"There'll be more, I'm sure.\"\n\nTracy smiled. \"She did so good. Do you think...I did, too?\"\n\n\"Oh my God yes,\" Marty said.\n\nTracy's smile changed, more seductive, with a hint of bashful. \"I didn't know if...you nice older guys would like me. I know the younger guys do, but...\"\n\nShe stood in chest-deep water, her stunning big tits just above the small lapping waves. Marty's eyes went to them, more awe-struck than lascivious, then his happy eyes took in hers again. \"Tracy, you're stunning. Guys my age, we...we've learned a lot about beautiful things, and beautiful people. You're the most......I mean, I've never seen anyone as beautiful as you. Your smile just knocks me out.\"\n\nTracy's smile softened to perfection, her eyes still curious. \"Do you know my dad?\"\n\n\"No, I've never met him.\"\n\n\"Good. I really want to have fun with you, but...I'd feel funny doing it if you knew him.\"\n\nMarty smiled. \"Yeah, that's a good rule. But...yeah, I already told you I know your Mom. Not well, but...\"\n\n\"Do you think I look like her? It always seems to be men that say that.\"\n\n\"You're both gorgeous, yeah. I think you're sexier.\"\n\nTracy's smile widened and brightened. Moving close, up on tip toes, her hand went behind Marty's neck, pulling him down for a nice, soft, heat-filled kiss. \"I've never done anything with an...older man,\" she said. \"I want to.\" Reaching for Marty's cock under the water, her eyes sparkled when she found it hard.\n\nMarty bent and kissed her tits, just loving kisses for now, including one on each aroused, perfect nipple. Tracy let out a lovely little sigh. \"Are we playing with the ball?\" he asked. \"It's gonna float away.\"\n\nTracy giggled, ignoring it. She took Marty's hand and led him to shallower water, passing within about ten feet of Beth. Jordan was now solidly fucking her pussy from behind, Tyler's cock once again in her mouth. Marty wondered if she was even noticing that he and Tracy were passing by.\n\n\"Want to lie down?\" asked Tracy, her eyes pure seduction. \"I want to ride you.\"\n\nMarty nodded, this moment feeling very unreal. He sensed that Tracy wanted him right there on the wet sand at the water's edge, so he lay himself down there and she mounted him without wasting a second.\n\n\"Oh, God Tracy,\" he said, as his cock penetrated deep into the hot velvety heaven of her ultra tightness. \"Jesus!\"\n\n\"Shit!\" she softly exclaimed. \"Oh, shit!\"\n\nMarty smiled, seeing her fresh-faced ecstasy. Her eyes were all over him, taking in every detail, especially her hands and fingers on his hairy chest. It made him proud to be her older man, her first, this moment seeming to be a fantasy of sorts that she clearly desired.\n\nMarty knew he wouldn't let her down. Having cum already in Beth, he knew stamina was on his side, though a young pussy this tight was going to make things wonderfully interesting.\n\nHe listened as Beth had her first orgasm with the boys, a louder one than he'd ever heard her have, her rising noisiness a product, he figured, of the lost on a desert island feel of this crazy afternoon. He looked at her and saw her go to her knees, taking Jordan's cock and then Tyler's between her wet, squeezed together tits.\n\nMarty could sense that Tracy was already working toward orgasm, her smoothly writhing riding using every inch of his tremendous hardness, her sighing ecstasy seeming to rise even easier when his hands were on her tits.\n\nHer tits! Oh my God! he was thinking, his hands and eyes taking in the glory of them, this feminine perfection that he knew might be his for just this one fleeting moment in his lifetime. And the red hair! Just like her gorgeous mother's! Jesus Christ, it's as if I'm fucking Janet!\n\nYes, Marty's mind was blowing, and Tracy was cumming, this otherworldly teenaged beauty cumming so beautifully right on top of him.\n\n\"Shit!......Fuck! she yelped, and she threw her head back and arched her spine as she rode more wildly, making her big, bouncing tits even more supernaturally awesome. Marty almost passed out from the magnificence of it all.\n\nDuring these moments--Beth loudly cumming, Tracy wildly riding--the rest of the group had moved to the water's edge, suddenly joining in. Marty was stunned when Autumn's pussy was lowering to his face, Tracy still riding her way through the lingering effects of her nice orgasm on his cock. Suddenly he was a sexy stud, with young hotties all over him. Kylie was there, too, trading places with Tracy, her pussy just as teenaged-tight but beguilingly different. Marty's mouth devoured Autumn's pussy, wondering if she and Kylie were kissing.\n\nMarty didn't know it just yet, but Justin and Sean had joined Tyler and Jordan with Beth, the five of them out of the water, on the lake's wet-sand edge. The slutty corner of Beth's brain had fully taken over, her body energetically riding Sean as he lay on his back, with Justin in her mouth and Tyler's and Jordan's cocks in her squeezing, stroking hands. Tracy joined them and Tyler began fucking the daylights out of her, doggy style, the coming-true of a dream he'd had for as long as he could remember.\n\nHaving her mouth constantly full of the boys' cocks as they all took turns, Beth was less boisterously loud, but occasionally she let out some happy cries and huffing words of approval and encouragement, not that these horny, testosterone-drenched boys needed any. She was soon down on hands and knees, the doggy style segment of this seemingly inevitable gang-bang getting started.\n\nWith Tyler busy, she encouraged a round-robin with the three boys she had, but Tyler soon joined in, lured by the excitement of being a part of gang-banging one of the neighborhood's big-titted mothers. Yes, this was hardcore, the way things had blossomed on this hot afternoon, and Beth had been turning him on ever since he watched her walk up on stage at the bar, wearing plain white panties on her bottom, her CAPE COD t-shirt covering wobbling braless breasts.\n\nBut now she was naked, and his super hard cock was fucking her sweet-feeling pussy from behind once again, and when she emptied her drooling mouth of Sean's cock she screamed \"Harder Tyler!...Fuckin' fuck me harder!\"\n\nTracy had wandered out to waist deep water, her hand already finished with washing up her well-fucked pussy. She stood there watching Marty, fascinated by his fatherishness. She'd never seen a naked father but had often fantasized about several she knows. Marty isn't one of them, she'd never seen him before today, but that was good, she knew, and now, as she stood there wondering, she wished she could have him all to herself again, even if just for ten minutes or so.\n\nHer eyes shifted to the other group and she watched the surprising gang-bang, the frenzied sexuality of it evolving, Beth getting quickly sixty-nined now, Sean on top with his spearing hardness fucking downward into her gagging mouth, his mouth and tongue on her happy clit. Then the thorough gang-banging of her wide-spread pussy resumed, Beth on her back now with her legs in the air, all four boys taking spirited turns. Beth's loud, animalistic groans of encouragement grunted out her, sometimes through gritted teeth and sometimes through her howling open mouth.\n\nTracy watched a different type of threeway taking shape not far from them, Marty up on his knees now, fucking Autumn in doggy style position. Kylie was down on the wet sand, on her back, small waves lapping at her shoulder, her legs spread wide as Autumn's mouth licked her pussy.\n\nTracy's horniness at these sights made her entire body tingle. This was not normal, all of this that was happening, not in any of these friends' worlds. She'd heard of an orgy or two, but they were stories--maybe just rumors--from different groups of friends than these. This, though, this amazing day when she'd felt the thrill of being a 'stripper' on stage for the second time in her young life, feeling the eyes of all those real men on her, and now with the fresh memory of what it's like to fuck a real man, she wanted more. The tingly horniness within her felt positively feverish now, a powerful force that walked her legs toward Marty's nice threeway, her hand reaching for his. \"He's mine now, you guys. Just for a little while.\"\n\nKylie and Autumn both smiled knowingly at her, Kylie nodding.\n\nFor Marty, slipping his cock out of Autumn's tight young pussy so he could walk away hand-in-hand with Tracy felt even more dreamlike than the wild dream he was already in the middle of. Then his mind focused and he saw Beth.\n\n\"She's fine,\" said Tracy, watching for a moment with Marty. \"She wants it that way.\"\n\nMarty was hit with the full astonishment of the moment. Beth, and Beth alone, was noisily taking on all four of them, these neighborhood boys from back home, boys that she knew, she on her back with her legs spread so welcomingly. Her hands grabbed at cocks, pulling them to her mouth with gluttonous hunger, her pussy being deeply pummeled by hard-pounding cock after hard-pounding cock.\n\n\"Is it okay?\" asked Tracy. \"Do you...still want me?\"\n\nMarty's high had momentarily crashed, the sight of Beth's unhinged depravity sobering him, but Tracy's eyes, so big and blue, made him swoon. Or maybe he was about to faint. He felt her hand still holding his, saw the tits so worthy of a thousand fantasies, and he walked with her, not far, her hand pulling him down with her onto a sleeping bag. The kiss, and everything else, made his head spin like a double-vision drunk.\n\nThe easiest way for a man to forget his wife's sudden perversion? Tits like these. Marty fell into them, with his face, his ears, his mouth, as if falling into a swallow-you-up cloud. And he was high again, so beautifully, dreamily high, not stoned but gliding...sliding...roving and flowing, and Tracy was moaning, and with his tongue he felt every molecule of the glorious nipple that seemed so excited to be in his mouth.\n\nTracy lifted her legs, pulling them to her with her hands behind her knees, her pussy so open, so beautiful. Marty's mouth, roving and gliding there, sliding, her pussy so warm, flavorful and consoling.",
        "With time slipping past him like vapor, and with Beth's banshee cries in his ears, Marty almost couldn't believe it when Tracy was cumming, his mouth having lifted her there, her legs trembling.\n\n\"I want to fuck you again,\" he said.\n\n\"Yes,\" she sighed, holding her body the same way until Marty's cock went deep, then she put her wrists down next to her shoulders on the sleeping bag, and Marty's hands pinned them there, her tits thrust upward like nipple-peaked mountains. \"Fuck yes!\" she whimpered, her thrilled voice all stuttering breath, and Marty fucked her so deeply and for so long, until her tits were wobbling in circles and he and she were both cumming like hot-lava volcanoes.\n\nMarty, totally spent, the way any middle aged man would be in these circumstances, lay his weight on Tracy, his hand and his face on the warmth of her tits. And he dreamed. Oddly blurry, this dream was nothing but swirls and muted colors, odd sounds and...yes, a chirping bird. Tracy cradled his head with her arms, breathing so deeply she wondered if Marty could hear the air in her lungs right though her breast. She figured he could, and her eyes were closed like his, and she shared his swirls and colors as time whispered over them like vapor again.\n\nIt was Beth who came to his rescue, or maybe his dream had come to hers, her hand now touching his shoulder.\n\n\"Maybe...do you think we should go?\" she quietly asked, her eyes and demeanor bashful. \"I'm so hungry, maybe we can get dinner somewhere on the way.\"\n\nMarty heard Tyler's voice. \"You guys wanna crash with us? We can just sleep on the sand. We can party all night.\"\n\n\"No, we should go,\" Beth said to him, smirking. \"And remember what I told you. Nobody talks about this, right? There'll be trouble all around if...\"\n\n\"Oh, fuck yeah,\" Tyler assured. \"No, that's done. We're not saying anything.\"\n\nWith Beth already wearing her t-shirt and pulling on her panties, Marty felt fully naked all of a sudden. \"I guess we're leaving,\" he said to Tracy, his body just now pulling away from her warmth. He leaned in close, whispering, \"I'll never forget you.\"\n\nTracy, with a rush of heat tingling through her body, looked at him with the most amazing eyes, eyes that told him she felt the same.\n\nOut on the road again, Marty drove, the windows down on this nice warm early evening. After some silence, he broke the ice. \"Wow, that all happened fast, huh?\"\n\n\"It sure did.\"\n\nHe glanced over at Beth. \"You got...really high.\"\n\n\"I know,\" she said. \"So did you.\"\n\n\"How do you...feel about...everything?\" he asked.\n\nBeth kept her eyes aimed out the windshield. \"I was hoping you'd tell me first, how you feel about it.\"\n\n\"Yeah, well...it was kind of awesome. Is that okay?\"\n\nBeth turned her head, looking at her husband of twenty-seven years, her face blushing with proper but not overwhelming embarrassment. \"It is if you're okay with me saying it was kind of awesome, too. Oh my God, Marty. That was...insane. Too much like a dream.\"\n\n\"Yeah, I thought maybe you were living a fantasy or two, even back at the bar.\"\n\n\"You too, probably,\" Beth said. \"Those girls. God, do you think they all have Daddy fantasies? I'll bet Tracy does.\"\n\n\"I don't know. Maybe. I know one thing, though. Tyler and his buddies are all into the MILF thing. I can't say I blame them. Do you know how sexy you are sometimes?\"\n\nBeth smiled, blushing even warmer. \"I do...feel that way, sometimes. I like it, when I feel it. Do you?\"\n\n\"Do I like it when you're sexy? Yeah, Beth, of course. This might sound crazy, but...watching those boys with you, it...didn't bother me. I don't know why. It made me really proud. Proud to be the husband of a woman as sexy as you.\"\n\nBeth smiled, feeling the nice mellowness of her high again. \"That's how I felt, watching you with those cute girls. I guess maybe we're that kind of couple. I always thought they were just in stories.\"\n\nMarty smiled. \"You're all mine when we get home, you know. You'd better be ready.\"\n\n\"Oh, I'm ready, Mister. I want you to sixty-nine me, and I want you to fuck my tits and cum on my face. And I don't even care if we wake up Mrs. Olson next door.\"\n\nMarty smiled, driving past the biker bar with the big sign out front.\n\nBEST PIT BAR-B-QUE\n\n--\n\nWET T-SHIRT TODAY\n\n--\n\n$500 PRIZE\n\n\"Maybe we can find another contest for you, a little sooner this time,\" he said, eyes on the road, driving carefully.\n\n\"Out of town,\" Beth said. \"We'll stay in a hotel.\"\n\nMarty smiled. \"Is there more to this fantasy?\"\n\nBeth's eyes focused out the front window again, watching the road. \"Another woman in the contest, she has a handsome man at the bar. We...buy them a drink, maybe. After.\"\n\n\"After he's watched you.\"\n\nBeth nodded, her face reddening deeper, the blush warming her.\n\nAt sixty miles-an-hour, the scent of Lake Ontario is in the air, the sunlight flashing through the trees.\n\n--\n\nWednesday night is Wine Club night, a loosely organized weekly gathering of seven of the neighborhood women friends, getting together at a different house each time, as much for the fun gossip as for the tasting of week's new type of wine. On this summer night, the gossip flowed aplenty.\n\nJanet Chandler, Tracy's mom, wasted no time bringing up a subject that some had already heard about -- the already widely circulated rumor that a woman from the neighborhood was gang-banged by some of the neighborhood's older teenaged boys, and that the woman had wanted it. As a few of these women had already heard, the identity of some of the boys was supposedly known, but none of those boys was talking.\n\n\"My daughter Tracy is friends with them. I just don't know what to think about it,\" Janet said, shaking her head in worry.\n\n\"Janet, give me a break,\" Beth said, showing mock disgust. \"She's your daughter after all. That means she's nowhere near a virgin anymore, and she knows a thing or two about sex. I mean, think of all the fun things you've told us about your single days.\"\n\n\"Yeah, and your not single days, with Frank,\" another added, smirking.\n\n\"Hey, I'm not the slut who let a gang of teenaged boys fuck her,\" Janet said. \"Not that I'd...totally mind, or anything.\"\n\nGiggles erupted all around, some of them nervous sounding. The women were all fascinated by this topic of gossip, the wine-fueled banter about it suddenly rapid-fire, all of them having something to say:\n\n\"God, what would it be like?\"\n\n\"How many were there?\"\n\n\"Who are they, can I get their names?\"\n\n\"Does anybody know how long a teenaged boy's cock stays hard?\"\n\n\"My husband's good for about ten minutes. Then...\"\n\n\"I'm guessing an hour.\"\n\n\"Just an hour?\" said Mary. \"A teenaged boy? Oh my God, I was thinking much longer. Don't you think? I mean, I've heard mine masturbating, and it's not quick. Maybe he's just...\"\n\n\"Gifted?\"\n\n\"I think it depends on the boy, probably, right? Don't some of them have...premature ejaculation? Is that what they call it?\"\n\n\"Not the ones we're dreaming of. They go all night.\"\n\nBeth jumped in, knowing she shouldn't. \"Maybe it wasn't at night. Maybe it happened during the day, so she could see them all.\"\n\n\"Oh my God, I forgot it was a gang...bang.\"\n\n\"How many boys was it?\"\n\n\"I don't know, I don't think anybody knows.\"\n\n\"Does four qualify as a gang?\" asked Beth.\n\n\"Just me and four teenaged boys? Hell yeah, to me that's a gangbang.\"\n\n\"You starting to like the idea, Lisa?\"\n\n\"I'm blushing, does that give away my answer?\"\n\n\"I probably shouldn't say this, but I heard the rumor, too,\" Beth said, surprised at herself for not shutting up. \"Supposedly it was on the beach. A nice summer day.\"\n\n\"Oh my God! That's...making me all hot inside.\"\n\n\"Have some more wine.\"\n\n\"I think we all need some.\"\n\n\"Wine, or boys?\"\n\n\"What else did you hear, Beth? Spill it.\"\n\nBeth, blushing, wondered if the pinkness of her face was noticeable. \"Just...the beach, the sun. They were fully nude, I guess. Not worried about anyone seeing them. Turned on by it.\"\n\n\"Oh my God, I was picturing a pants around their ankles kind of thing, but it was wilder than that. Can you imagine?\"\n\n\"Sounds like you can.\"\n\n\"I know! Am I horrible?\"\n\n\"Martha, we're all imagining.\"\n\n\"Even you guys with son's that age?\"\n\nNo one said a word.\n\n\"Wow, that silence was interesting.\"\n\n\"Beth did you hear how old the boys were?\"\n\n\"Nineteen, from what I heard,\" said Beth.\n\n\"Yeah, that's right,\" said Janet. \"I mean, if the whole thing is true, I know the boys.\"\n\n\"Well you're the MILF-iest MILF of all of us, Janet. Maybe you should schedule a little beach time with them. There's plenty of nice days left this summer.\"\n\nBeth interjected again, wanting to steer the gossip away from so close to home. \"The way I heard it, the woman lives in that village up by the lake, you know, where those nice antique stores are.\"\n\n\"Really? I heard she's from right here in the neighborhood,\" Janet said. \"I mean, hey, maybe it's one of us.\"\n\nAnother sudden silence overtook the women.\n\n\"That was always a fun place to go when we were younger,\" Janet said to Beth. \"All the bars were kind of seedy but I think maybe it's better these days. Tracy and her girlfriends were up that way just this past weekend, camping.\"\n\n\"On the beach?\" asked Martha. \"Maybe they saw the...gangbang. I can't believe we're all using that word so much tonight. Janet, do you and Tracy ever wear bikinis together on the beach? I'm sure my husband has always wondered.\"\n\n\"Yes, mine too.\"\n\n\"And Mine.\"\n\nThe group all giggled, Janet blushing. \"A big chest is nothing to wish for,\" she said. \"My back hurts all the time.\"\n\n\"Yeah, from the way Frank rails you.\"\n\n\"Rails me? What are we, teenagers now?\"\n\n\"Ooo, teenaged boys. I almost forgot about them.\"\n\nMarilyn smirked. \"Those of us who are mothers of them are hoping you all will forget about them.\"\n\n\"Beth did you hear anything about how long it all went on?\" asked Janet. \"I mean, if they were all naked it wasn't a quickie, right?\"\n\nBeth nodded, trying to think of how to answer. Her feeble attempt at steering the conversation a different way had failed, her mind now full of memories of that recent afternoon on the beach, the four boys all fucking her so gloriously persistently, so many different ways, with the supernatural energy of youth. No, it most definitely was not a quickie. \"Maybe they were high,\" she said. \"Marijuana's legal now, you know. Maybe she got so high she couldn't think of anything else. Maybe awesome sex was all there was, like it was her whole world at that moment. Did you ever get that way, when you're doin' it? When it's so fucking good that...nothing else matters?\"\n\n\"A few times.\"\n\n\"Yeah, I know what that feels like.\"\n\n\"Yeah, I've been there.\"\n\n\"Yup.\"\n\nJanet nodded in agreement, her eyes twinkling. \"Oh hell yeah.\"\n\nBeth nodded, glad she wasn't alone, glad that at least some of her friends understood the once-in-a-while need to let your deepest inner desires run wild and free, even if just for an hour or two, as if nothing else matters."
    ],
    "authorname": "riverboy",
    "tags": [
        "wife",
        "big tits",
        "wet t-shirt",
        "contest",
        "beach",
        "gangbang",
        "teen boy",
        "teen girl",
        "stripper",
        "stripping"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/lilibeths-wild-side"
}