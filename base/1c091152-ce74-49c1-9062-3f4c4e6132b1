{
    "title": "Library of Congress",
    "pages": [
        "Hello Literotica! I'm ba-aa-ck! I want to thank everyone who sent their thoughts during my absence.\n\nThis is a new one. I'm working on a few continuation chapters for other stories. I hope you enjoy it.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"I.... am a librarian,\" declares Rachel Weisz proudly, in the 1999 film, The Mummy. \n\nI'm not sure about your experience, but librarians rarely look nearly as good as the lovely Ms. Weisz. When I started high school, our librarian was Mrs. Novak, and while she was a lovely woman, she passed old several years back. She had been at the school for more than double my time on the planet. Almost triple.\n\nOur school had been through a major renovation several years before my attendance, and among the changes was the library. I'm told that it was originally the girl's gym.\n\nNow with over one thousand students, that renovation had added an entire level of new classrooms, as well as a technical wing. Moving the library into the gym had allowed for an expansion there, as well. It's higher ceiling had let them build another level within, so now the stacks were two storeys high. It was huge, but Mrs. Novak was rightfully proud of her project's success.\n\nAnd it was well and truly hers. Mrs. Novak ruled it with an iron, wrinkled fist. She didn't even bother to 'shhhh' those of us who were too loud. Instead, if a boney, arthritic finger was pointed at you, it was a warning. If it was joined by a second finger, you were on thin ice. Next was the thumb, and banishment. Nearly everyone got the thumb at least once. That's how you knew where the limit was. \n\nMidway through my junior year, retirement called for Mrs. Novak. It was a big deal, given her history with history. We all held our breath, awaiting her replacement, hoping it wouldn't be some old biddy with a power complex.\n\nApparently, wherever they keep the librarians for storage, they were out of that particular version.\n\nThank goodness.\n\n***\n\nI suppose a good indication of her arrival is that everyone noticed her, but no one recognized her as a librarian. Such are the dangers of preconceptions. She was, however, wearing the standard librarian's uniform, that being the longish skirt and cardigan. Dark brown hair was pulled back and wrapped into some sort of controlled style, if not an actual bun. She even wore glasses, but hers were rectangular framed, and surrounded sparkling brown eyes.\n\nAlready tall, moderate high heels made her taller still, but when coupled with the restriction of the skirt around her knees, gave her a quick, wiggly walk. Similar to Morticia Addams, to whom she did bear a slight resemblance, that walk made her popular to follow down the halls, and she always seemed to have a flock of drooling boys in her wake.\n\nPersonally, I preferred the view from the other side. Despite the sweater and complete lack of visible cleavage, she had a noticeable jiggle when she walked. Hidden or not, her boobs were more than enough to distract all the males in the building, a point of contention for some of the girls who thought the universe revolved around their nubile young bodies. It hadn't been that long since she must have ruled the halls of her school with equal dominion. \n\nThe name plate on her door said 'Ms. Denninger', and it didn't take too much detective work to uncover her first name was the very exotic 'Dexilara'. This led to several nicknames among the student body, such as 'Sexy Dexi' and the extremely appropriate, if unimaginative, 'Double D' or 'DD'. \n\nWhen it came to personality, Dexi left old Mrs. Novak in the dust. Maybe it was the much narrower age gap.... more detective work, suffice it to say she was in her late twenties to early thirties.... but she was actually a fun person. There were still rules, and she did enforce them, but at least she was pleasant about it, and her fingers were far more attractive, should she use them to single someone out. \n\nOne of my first encounters with her, required because of a history assignment, was a good example. I approached her at her desk. She was sitting back in her chair, reading a newspaper, with her long legs crossed on the corner of her desk. \n\n\"Excuse me, Ms. Denninger?\" I began, watching her eyes, which immediately moved from the paper to focus on me over the top of her glasses.\n\n\"Yes, young man,\" she smiled, putting the paper aside. I was disappointed when those sexy legs left my view as she sat up.\n\n\"I have an assignment for Mr. Heisen's history class, and I need some books,\" I told her.\n\n\"Books? Books. Yes, I think we have some of those around here somewhere. I think I saw some in the back,\" she laughed, standing up gracefully.\n\nUnaccustomed to librarians with a sense of humour, I glanced around at the hundreds of books literally within arms reach of her seat.\n\n\"Follow me,\" she directed and came around her desk. \"You are...?\"\n\nHuh? I thought. Oh, my name? \"Oh, I'm Bryan.... Bryan Miller.\"\n\nShe was a few steps ahead of me, and my attention was now divided between the conversation and her fantastic ass. She was wearing a dark skirt today, one of those ones with a brass zipper up the back. I watched her wiggle.\n\n\"And what is the subject for the assignment, Mr. Miller,\" she asked, over her shoulder. Her profile was cute. Pouty lips. Pixie nose.\n\n\"World War 2,\" I answered.\n\n\"Ah, yes. World War 1, the sequel. Many of the same players, more special effects. Glad they stopped at the second one,\" she replied, arriving at the computer terminal in the centre of the room. \"You know you can look this up yourself, right? You're a junior, not a freshman.\"\n\nI could see from her smile that she wasn't angry. It was my first time face to face with her alone, and from this range I could see her beauty was not dependent on distance. What I mean is, she wasn't one of those girls who's a nine from across the room, but a four up close. If anything, she was prettier this way. Her eyes. The graceful curve of her neck and shoulders. If only that damned sweater wasn't in the way.\n\n\"Bryan?\" she asked, interrupting my internal dialogue.\n\n\"Um, yes, I know,\" I stumbled, \"but I was hoping you might know about some books that might set my report apart. I really need a good grade on this one. Something unusual? A bit off the beaten path? You're the expert on books, that's why I'm asking.\"\n\n\"Alright,\" she nodded, and put her finger to her lips, tapping them. It didn't appear that she was wearing lipstick, but her lips were still extremely attractive. I watched that fingertip tapping, as she thought deeply. I was still watching when it stopped.\n\n\"Ah!\" she grinned, finger raised in triumph. She pointed. \"This way, I think.\"\n\nI followed, grateful for another chance to watch her ass. She was surprisingly fast on those heels, weaving through the aisles, around corners, and finally coming to a stop. Her eyes scanned the shelves above.\n\n\"Something.... Around.... Ah! Here it is!\" she gasped, and reached up.\n\nReaching arched her back, thrusting her substantial chest out. One foot kicked up behind her, like she was receiving a kiss. As her fingers neared the target, I saw her breasts squash against the lower shelf. Any control I may have had over my blood flow was instantly lost. My dick swelled rapidly. Thankfully, her attention was higher.\n\n\"Here,\" she smiled, handing me the book. \"It's written by a veteran of the second war, almost like a diary. Reading it is like being there. It's pretty graphic, but if you want to learn why war is hell, and not like in a video game, this is it.\"\n\nI tried to turn my hips a bit, real casual, so she couldn't see the lump in my pants. How successful I was, only she could say.\n\n\"Thank you,\" I smiled. \"This is exactly what I'm looking for.\"\n\nThat was a subjective statement. It was the book I wanted, but right now, the book was secondary. She had become my primary obsession. \n\n\"Alright,\" she said, casting a sideways glance at me. \"Well, if you need anything else, just let me know. Good luck on your assignment.\"\n\nI made the logical assumption that she was referring to the assignment only, and kept my baser requests to myself. Mmmmm, but they were fun to think about, and I'd probably be thinking about them a lot in the near future. \n\nAs it turns out, her choice of material was exactly what I needed to get that good grade. I passed the class, and moved on to Grade 12, my senior year, but that would wait until after the summer.\n\n***\n\nSummer vacation.\n\nA time of freedom with friends, but freedom doesn't come free. If you don't have a job, or parents with deep pockets and an understanding nature, you won't be having much fun.\n\nFortunately for me, I already had that covered. A few years ago, I started working at a local golf course. I did weekends during the school year, and went full time in the summer, as a general purpose worker, sometimes on the driving range, occasionally in the cart shop, and even the pro shop. I got to play golf, hit balls, and still earn money. There was still another benefit, as well.\n\nYou see, this wasn't exactly Augusta National. The conditions of the course were good enough...tees, fairways and greens well maintained and playable.... but it was an executive course. Comprised mostly of par 3 holes, with 6 short par 4's sprinkled in, the clientele was a little older, or a little younger, or a little more female.\n\nWomen loved the place, because it placed less of a premium on power, and it was fun. Lots of wives banded together to play here, while their husbands were out on local 'championship' courses. Not just wives, of course. Single women as well. \n\nIt was July, and quite hot. My shift that day had me out on the driving range, dispensing balls, and sweating in the sun. I had shade in the range shack, but couldn't stay in there all the time, because it was busy, and I needed to occasionally drive the ball picker. \n\nI had just finished a circuit on the picker, and parked beside the shack. Eight heavy baskets of golf balls were next to be run through the ball washing machine, and I noticed a small group of women waiting in front of the shack.\n\n\"I'll be with you in just a second, ladies,\" I called to them, stacking the baskets beside the back door. Going through the door and into the small shelter, I lifted a smaller basket of balls onto the service counter.\n\n\"Bryan? Bryan Miller?\" I heard, in a vaguely familiar voice, from the back of the small gathering. I lifted my head, and tried to find the source.\n\nA very familiar face peeked over a shoulder from the back row.\n\n\"Ms. Denninger?\" I asked, surprised to see her out of context. \"What are you doing here?\"\n\n\"I'm going white-water rafting!\" she laughed. \"What do you think? Playing golf, silly.\"\n\nWell, I knew it was a stupid question the moment it left my lips, but by then it was too late. Her response could have made me feel an even bigger idiot than I already did, but it was delivered in such a gently humorous way that I had to laugh along with her.\n\nNothing could keep me from noticing that she wasn't dressed for library duty. As I served the group, and it thinned out, she was no longer hidden. The long skirt she normally wore at school ended just below the knees, but this one stopped mid-thigh, showing me more smooth, tanned skin than I could have dreamed.\n\nOn top, the all-concealing cardigan had been relegated to whatever closet it called home. Details about her body previously hidden by that unflattering garment were now quite obvious. She had an unexpectedly narrow waist, made more so by the full curves of her breasts, riding high and proud on her chest.\n\nEven her hair, freed from its tightly confined style and merely held in a ponytail, was that of a totally different young woman. It would appear that Librarian Dexi, already worthy of obsession, was only one personna. This version was equally desirable, and overtly sexy.\n\n\"Hi, Bryan,\" she smiled, when it was her turn. \"Listen, I'm sorry about the sarcastic response, there. I didn't mean to embarrass you. My girlfriends are a bad influence on me sometimes.\"\n\n\"No problem,\" I laughed, trying not to look directly into the cleavage her golf shirt was showing. \"It was a pretty stupid question, and you were funny. Don't give it a second thought.\"\n\n\"Well, thank you for understanding,\" she smiled again, paying for her practice balls. \"Any advice for my golf game?\"\n\n\"Yes.... Hit it straight, and infrequently,\" I grinned.\n\n\"Oh ho! Now who's the smart ass?\" she giggled. \"I had that coming.\"\n\nWith that, she was off to join her friends, and I tried to watch her ass wiggle without looking like I was watching her ass wiggle. By the time I loaded the dirty balls into the washer and resumed my perch of casual observation, she was already clustered with her group, laughing at each other's attempts to hit the ball. From my perspective, it was difficult to see the flight of the shots, but even if I could, my focus would have been on her form rather than the results.\n\nMmmmmm, yes, you know the form I'm talking about.\n\nSuch a cute pre-shot routine, I thought, watching her from the shadows inside the shack. She'd shift her weight from one foot to the other, wiggling her hips. Then she'd wave the clubhead forward and back, waggling the club. A pause, then a nice turn of her upper body. I could see the muscles of her right leg tense as she pushed off and through the ball. Her follow through was typically flexible, back arched, breasts pointed to the sky.\n\nAgain.... Wiggle.... Waggle.... Through. Oh my god, look at those tits. Watching her made my mouth dry, and my dick ache.\n\nOne of Dexi's friends looked my way, then said something I obviously couldn't hear. They laughed, and Dexi looked back toward me as well. Perhaps I wasn't as hidden in the shadows as I thought. It would seem I had been proverbially busted. \n\nI stayed in the shack, trying to stay hidden while they hit their practice balls. All four of them were quite attractive, but of course, my eyes couldn't stay off Dexi's more familiar form. \n\nA few minutes later, the ladies all shouldered their bags and walked back toward the clubhouse as their tee time neared. My favourite librarian gave me a flutter of fingertips as she passed, and I returned a wave. I think.... I think.... I think she also winked.\n\nMaybe not. It could have been wishful winking thinking.\n\n***\n\nThe summer passed quickly, as it always does. I saw Dexi at the course three more times, and she was quite pleasant each time. The last time, about two weeks before school resumed, was quite memorable. \n\nOn that occasion, I was doing marshall duty, patrolling the course on a cart. In the distance, I saw a flash of baby blue, brilliantly illuminated by the sunshine. As I drove closer, I could see it was a woman, smartly dressed in a matching outfit. Closer still, and long dark hair was evident, causing my heart to speed up, along with my right foot.\n\n\"Please, please, please,\" I muttered, cruising along the curving path closer and closer.\n\nAhead, the mystery woman stepped onto the tee. I slowed, to stay quiet, and saw.... wiggle, waggle, through! It was indeed Dexi. \n\nBy the time I closed the distance, the group of women was strolling into the fairway. I watched the four lovely butts sway from side to side for a moment, then pulled up beside them.\n\n\"Hi, Ms. Denninger,\" I said happily.\n\n\"Bryan! I was wondering where you were today! Looking forward to your senior year?\" she asked, smiling wide. \n\n\"I suppose. As much as I ever look forward to school,\" I replied, driving slowly, matching her pace. \"How's the game today?\"\n\n\"It's been better, it's been worse,\" she giggled. \"At least today, it's not a good walk spoiled. You know who said that, Bryan?\"\n\n\"Homework already?\" I asked. \"Wasn't it Mark Twain?\"\n\n\"Very good,\" she smiled. \"Actually, there's some question about who really originated the phrase, but most attribute it to Twain.\"\n\nThe ladies flared out, each going to the location of their tee shots. I stayed with Dexi, for obvious reasons. Sitting a respectful few yards away on my cart, I quietly checked her out. \n\nShe looked good in blue. Her top was snug, with a collar and cap sleeves, but the item of greatest interest was the neckline. A long placket, with five or six buttons, could make it as conservative or sexy as she wanted, depending on how far she fastened it. Today, either by choice or circumstance, she was definitely on the sexy end, with her breasts straining the one button that was fastened. Her cleavage looked like a wonderful place to put my dick.\n\nThe matching skirt was extremely short, no more than six inches below the lower curves of her firm ass.\n\nI watched her hit her shot, bouncing it onto the green of the short par 4.\n\n\"Nice,\" I nodded. I was talking about the shot. Maybe.\n\n\"Thank you,\" she smiled, putting her club back in the bag. She picked up the bag, and walked toward the green. I followed.\n\nCarrying the bag, the strap tugged at her top, straining that last button even more. As we arrived at the green, she withdrew her putter. \n\n\"Good luck,\" I said softly.\n\n\"Thank you, again,\" she nodded, and went to read her putt. I was behind her, as she crouched to mark and line up her ball, and that skirt stretched tight across her shapely bum. Satisfied with her aim, she stood, wiggled, waggled and stroked the putt.\n\nA bit too hard.\n\n\"Slow down!\" I gasped, as the ball raced nearly ten feet past the hole.\n\n\"Arrrgh!\" Dexi growled, gyrating her body in an attempt to influence the ball. She walked over and placed her coin angrily, clearing space for her friends to putt. They were no more successful than she, but merely tapped in to finish the hole. The stage was hers again.\n\nI suddenly realized that she'd be putting back toward me, from the other side of the hole. Again, my heart skipped a beat.\n\nOh god, I thought, as she squatted down to replace her ball. Clearly trying to be as ladylike as possible, her legs stayed quite close together, but I did catch the briefest flash of what appeared to be white. Her panties, perhaps? Then she leaned forward, reaching down to actually set the ball in place. This move, along with her legs being in the way, brought her breasts into contact with her knee. They squished upward, suddenly filling the unbuttoned portion of her neckline with enough cleavage to give a priest naughty ideas.\n\nI'm sure my eyes bugged out, almost as much as my crotch.\n\nThe putt was anticlimactic, in my opinion. She simply poured it right in the centre. \n\n\"Take that!\" she cheered, pointing at one of her friends. They gave her a round of mock applause. \n\n\"Nice putt,\" I smiled, and waved as I drove off. I thought it best that I leave now, before I had to go jerk off in the bushes.\n\nIt was a nice putt. Nice ass, nice tits....\n\n***\n\nSeptember saw us back in school, and Ms. Denninger back in her usual attire, for the most part. Perhaps her skirt was a little shorter, but hardly enough to notice. Perhaps her sweater was a little tighter, but again, not so much as to be obvious. \n\nA couple of weeks into September, we had a scheduled talent show. I don't mention it because I was involved, or because I have talent. Neither of those apply. But it did bring back to mind a certain band from the past, as a group of students did a cover.... a god awful one, at that.\n\nMy friends and I were sitting in the library. It was a study period, but studying had given way to quiet conversation, that would have been loud conversation anywhere else. I heard a voice approaching, singing softly to herself.\n\n\"There are times when all the world's asleep, the questions run too deep, for such a simple man,\" Ms. Denninger crooned, rounding the corner into view. \"Won't you please, please tell me what we've learned, I know it sound.... Oh, hello gentlemen. You're being so quiet, I didn't even know you were here.\"",
        "\"Watch what you say,\" I smiled. \"They'll be calling you a radical.\"\n\n\"A liberal,\" she smiled, pausing in her tracks, and turning slowly. One eyebrow was arched playfully, as her eyes zeroed in on me. \n\n\"Fanatical?\" I added.\n\n\"Criminal,\" she finished. \"It's only logical.\" She was looking right at me, and as I was the only one facing her, across the table, only I could see it, and this time, it wasn't wishful thinking. \n\nA wink. One beautiful brown eye closed briefly, then opened again, and she smiled, before turning away, and continuing her search for whatever book she sought. She whistled the tune as she went.\n\n\"What the fuck was that?\" my friend Kenny asked.\n\n\"The Logical Song,\" I replied. \"You know? Supertramp? I know they butchered it at the talent show, but it's still a classic. I love that albu..... \"\n\n\"Like I care about the fucking song?\" he cut me off. \"What was that, with Ms. Denninger?\"\n\n\"Oh that? Nothing, really. She just played golf a few times this summer,\" I explained. \"She's really nice.\"\n\nThe three of them exchanged incredulous glances.\n\n\"You had a chance to be with Sexy Dexi away from school?\" Dave asked. \"And we're just hearing this now?\"\n\n\"Hey, you guys were the ones out of town on vacation with your families,\" I explained further. \"There's nothing to tell, anyway. She just played golf. We talked a bit. That's all.\"\n\nI kept the details of her wardrobe to myself, and hoped my poker face held up. \n\nApparently it did. They let it go with another round of glances, and we picked up the conversation from there.\n\n***\n\nThings went pretty normally from there. Being an early Scorpio, I had a birthday coming up soon, just before Halloween. It was the big one, the one every teenager has circled on the calendar. \n\nYou'd lie to make yourself older, at least while you're young. We're always in a big hurry to grow up, until we do, and realize that, in the ignorance of youth, we had it good.\n\nBut, until I figured that out, I'd happily celebrate my eighteenth birthday, and I'd have fun doing it. \n\nAt school, Halloween was something of a big deal, for those who cared to participate. A costume contest for the students, and teachers who went all out on decorations, it was a time when Elvis might be in your math class, and the principal was a robot.\n\nAs a newly graduated adult, I had outgrown the whole costume thing, but still found it mildly amusing. \n\nSo, I found myself walking down the hallway, following Daisy Duke. While the boobs were clearly padded, the legs and ass were real, and quite delicious. It was the only day of the year she could get away with dressing that way without drawing the ire of the principal. I cruised past the library door, where a giant spider peered around the corner into the hallway. Curiosity got to me, and I turned in.\n\nWhat the? I wondered. Fog? Ah. Dry ice, probably from the science department. Spooky ambiance.\n\nIt was quite thick in there, and assorted other decorations hung from the ceiling. A dark shape moved behind the desk, attracting my attention.\n\nNot just any shape, either. Decidedly curvy, and sporting a poofy black wig, it was.... Elvira? Actually, there was no question about who she was intending to be, but I was surprised to see her dressed that way. \n\n\"Mr. Miller,\" she purred, \"Welcome. I'm Elvira, librarian of the Dark.\"\n\nOh my, look at that dress, I swallowed, taking in the crease between her breasts. Not quite as deeply cut as the real dress worn by Cassandra Peterson, it was nonetheless the most revealing thing I'd ever seen her wear at school. The wig and her makeup were perfect. Without the real Elvira standing beside her, it was hard to find a flaw in her costume.\n\n\"Wow!\" I finally sputtered. \"You look, um, fantastic!\" My eyes fell once again on her boobs. \"No glasses?\"\n\n\"Contacts,\" she smiled, fluttering her ridiculously long eyelashes, hands on hips. She shifted her weight, extending her right leg through the high slit in the skirt. Fishnet stockings, and black stilettos. She'd thought of everything.\n\nShe stepped closer. In those heels, she was a smidge taller than me. I didn't know whether to look at her ruby red lips, dark eyes, or the beckoning expanse of skin slightly lower.\n\n\"Mr. Miller,\" she breathed, in full character. \"Would you be able to do me a favour this afternoon, after classes? It's okay to say 'no' if you already have plans, like a party to go to. Are you busy?\" She tapped a polished, black fingernail on her blood red lips. I watched those lips purse, then shifted to her eyes. She gave me a campy wink. \"Well?\"\n\n\"A favour?\" I swallowed, glancing down for a quick peek at her chest.\n\n\"Yes, Mr. Miller.... A, favour,\" she hissed, and shimmied her body slightly. I saw her boobs ripple in my peripheral vision.\n\n\"Um, yeah, sure,\" I said weakly, unsure if she was suggesting something I'd like a lot, or just pulling my chain.\n\n\"Great, thanks,\" she smiled, her voice reverting to normal. Chain yanked. \"I need some help taking down these decorations,\" she explained, gesturing widely with her arm.\n\nYeah, she played me, I thought, looking around at the plethora of spooky nicknacks. Spiders, skulls, webs, et al. She knew that I couldn't resist her, and played me like a fiddle.\n\n\"Alright,\" I exhaled, mentally beating my head against the nearest wall.\n\n\"After class,\" she repeated. \"I'll do what I can through the day, so I don't keep you long, but some of these are out of my reach. Thank you.\" I watched her wiggle that cute little ass walking away from me, until she stopped and glanced over her shoulder, catching me ogling her. Elvira took over, and she smiled, then caressed her left butt cheek with her hand. A final pat made the firm flesh quiver, then she stepped behind her desk.\n\nWell, in truth, I didn't have plans after school anyway. Helping her out couldn't hurt, could it?\n\n***\n\nAs it happened, my schedule didn't take me anywhere near the library all day, and my buddies decided to spend our free time in the cafeteria. I had a feeling none of them had seen Dexi's outfit, today, or they'd probably want to check her out some more. I kept my plans to myself, and let them determine the topic of conversation. It was nothing special.\n\nThe clock kept edging closer to the end of the day, and I kept thinking about helping Dexi in the library. I wondered why she was picking on me. My friends were equally smitten with her body. Would she have done the same to them? Or, was it because we'd seen each other during the summer? Her friends had pointed out that I was watching her on the range. Maybe she was penalizing me for spying on her.\n\nWhatever her reasoning, at the agreed upon time, I walked into the library. Always quiet, the room seemed even more empty than usual. I noticed that most of the smaller items seen earlier were indeed already packed away.\n\n\"Ms. Denninger?\" I said quietly. There was no response. \"Ms Denninger?\" I ventured, louder.\n\nI heard the distinctive 'click-clack' of high heels on hard floor, coming from a far corner of the room. As it continued, I was able to zero in on the location. Upstairs. Getting closer. The sound became clearer, with less echo, and I saw a pair of very attractive feet begin the descent from above. I moved closer to the stairs, just in time.\n\nOh, fuck, I thought. She was still in costume. I watched her breasts jiggle furiously with each step down the flight.\n\n\"There you are!\" she smiled, still walking with purpose. She bounced right past me, and closed the door, locking it. It was normal to lock the classrooms at this time of day, wasn't it?\n\n\"This way, Bryan,\" she said, passing me again, still walking quickly. \"Upstairs.\"\n\nI was forced to follow her up to the upper level. Three steps behind her, her yummy ass was right at a convenient viewing height, as her hips swayed hypnotically. She turned right at the top of the stairs.\n\nWhen the library was created in this former gym, they built an upper level, shorter than the full length of the room, leaving a portion that retained the full, nearly three storey ceiling height. \n\n\"This one first,\" she gestured, pointing to the huge spider dangling over the lower hall. \n\nMy eyes traced the rope, up from the spider, through a metal truss, and across the ceiling toward us. It was tied off on one of the rolling, wooden ladders that lined the aisles of the taller, upper level.\n\n\"Okay,\" I nodded, starting up the ladder. I went up about four rungs, and confronted a huge, tangled knot.\n\n\"What kind of knot is this?\" I wondered aloud.\n\n\"It's, um.... It's a Dexilara hitch,\" she giggled, looking up at me. \"Sorry. I wanted to be sure it wouldn't fall. You can untie it, right?\"\n\n\"Eventually,\" I groaned. \"You put it up? Why do you need me?\"\n\n\"I was wearing different shoes,\" she smiled, pointing down to her toes. I followed her gesture, but my gaze got caught up in the view down the front of her dress. \"I'll spot you, but please don't fall on me.\" She put one hand on each rail of the ladder, trapping me.\n\nOh, alright, I thought, pulling my eyes out of her cleavage. I turned to the job at hand, twisting sideways on the ladder so I could lean in and use both hands.\n\nIt also let me peek down at her easier, but that's not why I did it. Honest.\n\nI went to work on the knot. In my opinion, the, um, Dexilara hitch? Suitable to tie up an ocean liner. Made more difficult by the yards of excess rope leftover, it was like untangling the Christmas lights from hell. It took me several minutes, and each time I got a loop free, I'd resume looking down her dress while I pulled the slack out through it. The only problem was, I couldn't stop myself from looking, and my dick had access to the video in my head. A bulge began to form. \n\n\"I think we're nearly there,\" I grunted.\n\n\"Great!\" she grinned, briefly looking up, before resuming her level gaze.\n\nThree or four loops later, the knot was free, and my cock was as hard as stone. First things first; I slowly lowered the spider onto a table below.\n\n\"One spider down,\" I laughed, looking into her upturned face.\n\n\"Good. Hold on,\" she giggled, and began to push the ladder along the aisle, with me a passenger, until it reached the end of the track.\n\n\"Where's the next one?\" I asked, still not getting the gist.\n\n\"Right here,\" she growled, and palmed my bulge. \"Good lord, Bryan. That's some lump you've got there.\"\n\nIt occurred to me that while I was looking down her dress, she had been watching my crotch expand. It also occurred to me, finally, that it may not have been an accident. \n\n\"Um, Ms. Denninger?\" I asked, seeking confirmation.\n\n\"I think you can call me Dexi, when we're alone,\" she replied softly, continuing to caress my bulge. \"Very warm, here,\" she breathed. I assumed she meant my crotch, but perhaps not.\n\nLooking down at her, I saw her grasp the shoulders of her dress, and tug them off, down her arms. She peeled lower, until her fantastic tits bounced out unrestrained. Her nipples were long and stiff.\n\n\"Okay, Bryan, here's what's going to happen,\" she said quietly, her voice a mixture of desire and control. \"I'm going to unzip you, free your cock, and give you a blowjob you'll never forget. I understand you recently had your birthday?\"\n\n\"Last week,\" I croaked, staring at her bare breasts.\n\n\"Good, so it's legal, if severely frowned upon, for me to do anything I want with you,\" she continued. \"This will stay between us. I'm serious, Bryan. No one knows. Not your buddies. No one. Ever. If it ever comes to light, it will cost me my job, and it will never happen again. Do you understand?\"\n\nWell, yes and no. Yes, I keep my mouth shut. That's a given. Now, about the part where it might happen again? Did I hear that right? If I talk, it is a one shot, no pun intended. If I stay quiet, I get more?\n\n\"Yes, Ma'am,\" I nodded. \"May I ask a question?\"\n\n\"Go ahead,\" she replied, beginning to work on my pants.\n\n\"At the risk of sounding ungrateful,\" I ventured, \"Why me?\"\n\n\"That's a fair question,\" she smiled, now faced with my tented underwear. \"I've seen you look at me. I know you want to.\" One finger hooked the elastic, and she peeked in over top. \"Oh, wow. Yeah, you want to,\" she laughed, as my cock sprung out. She grabbed it, and stroked it reverently. \"Definitely. Nice penis, Bryan. Thick, and long enough to touch bottom.\"\n\nI took the compliment without response, but it was good to hear.\n\n\"Every guy in school wants to. You're gorgeous,\" I answered, confident that she wasn't going to stop now that she had my rigid shaft in hand.\n\n\"How flattering,\" she said, still looking over my thick pole. \"But I can hardly do this with everyone. You're a nice guy. I like you. You certainly sneak your peeks at me, but you're still respectful. When you call me 'Ms. Denninger', I can hear it. Now as for why today? I'm horny as hell. Wearing this getup all day has me so hot, I could almost scream.\"\n\n\"Did you visit the restroom today?\" I grinned, catching the implication.\n\n\"Of course, and not only in the privacy of the stall,\" she smiled, rubbing her cheek against the head of my hard dick.\n\n\"Really?\" I asked, surprised.\n\n\"What do you think I was doing when you arrived?\" she winked, offering her fingers for me to sniff.\n\nNot yet having the privilege of experiencing a woman's pussy in person, I couldn't identify the scent specifically. It was intoxicating, and I looked forward to more.\n\n\"Now, if you'll excuse me, I've had enough talking,\" she moaned, and opened her mouth wide.\n\n\"Holy shit,\" I groaned, as she engulfed my penis, sucking it deep into her mouth. I grabbed a convenient rung, and held on tight.\n\n\"Mmmmmm,\" she hummed, withdrawing for a second. \"You can play with my tits, if you want.\" She went back to work, slurping my shaft deep again.\n\nJust within reach, those lovely breasts swung as she bobbed her head, begging me to fondle them. I extended my arm, and caught her left breast. Warm, firm, and habit forming, I squeezed gently, eliciting a moan from her. I flicked the erect nipple playfully, and she repeated the sound. Clearly, she enjoyed it. \n\nAs far as my enjoyment goes, well, I was rapidly discovering that blowjobs were everything they seemed to be. Her mouth was like liquid velvet on my skin, whereas my hand was like a hand. There was no comparison.\n\nI clung to the ladder with one hand, explored her breasts with the other, and watched her mouth move up and down. Her eyes, always lovely in my opinion, were super-sexy with the eyeliner, shadow, and lashes appropriate to her costume. It was like getting head from the real Elvira. Yeah, I'd remember this. \n\nDexi moved with the confidence of experience. Her hand stroked in perfect coordination with her bobbing head, and suction was applied in just the perfect amount. I couldn't see her tongue, but could certainly feel it, slithering along my shaft with each cycle.\n\nIn the silence of the empty library, I could hear her mouth gurgle and slurp wetly. She gulped back excess saliva, and paused her oral attack, but her hand continued.\n\n\"Nice, Bryan,\" she smiled, licking her moist lips. \"You haven't cum yet. I'm impressed.\"\n\nI decided not to tell her she wasn't the only one who made use of the bathroom stalls for alternate reasons, today.\n\n\"Cum for me, Bryan,\" she urged. \"Cum down Ms. Denninger's throat. Gimme that sticky goodness.\"\n\nConversation abruptly ended as she once again plunged her mouth over my cock. She pushed deeper, nearly swallowing the whole thing, until she gagged slightly. Pulling back, she gathered herself, and grabbed my ass with both hands.\n\n\"Gwock! GWOCKK! GWOCKK!\" The sound echoed through the stillness as she slammed her mouth forward. She mouth-fucked me furiously. \"GWOCK, GWOCK, GWOCK, GWOCK, GWOCK!\" \n\nCum down Ms. Denninger's throat, she said. Wish granted.\n\nI grabbed her head, and jammed my dick into her drooling mouth one last time, then exploded.\n\n\"Gnahhhn, FUCK!\" I gasped, a little louder than intended. My shaft flexed, and I pumped my entire load into her sucking mouth. Spurt after spurt, she swallowed it with a moan of contentment. My legs grew wobbly, so I released her head and grabbed the ladder to remain upright, while she slurped up the remaining semen. She sucked harder, drawing out the last drops, then let my softening noodle slip from between her lips.\n\nHer makeup was surprisingly unsmeared, despite the workout. Tears didn't effect it, and neither had my cock ruined her lipstick. The wig, however, was tilted crazily, a victim of my last desperate thrust.\n\n\"Ooops,\" she giggled, adjusting her headdress. Both hands worked to return it to its previous position, jiggling her still unfettered breasts. She caught me watching her tits sway and bounce.\n\n\"Come here,\" she smiled, reaching out. \"Careful. Watch your step coming down,\" she directed as I reached floor level. \"Here,\" she whispered, gently pulling my head toward her bare chest.\n\nI opened wide, and collected her left nipple. Within seconds I was a hungry infant all over again, sucking and nibbling the thick, stubby tip eagerly.\n\n\"Mmmmmm, yes, I like that,\" she moaned softly, running her fingers through my hair. \"You're a boob man, Bryan?\"\n\n\"Mmmmm hmmm,\" I nodded, without even slowing down. \n\n\"Good. Let's go,\" she giggled, tapping my head. \"Get your shit together. We're going to my place.\"\n\nHer nipple slipped out of my grasp, and I watched her pull the neckline of her dress outward. She wiggled her shoulders slightly, letting her boobs drop back inside. A quick tug on each shoulder put everything back when it should have been. She looked at me, and grinned.\n\n\"Bryan?\" she asked, looking down to where my dick hung, still damp with her saliva. \"You're in violation of the dress code.\"\n\nStuffing my stuff back into my shorts, I pulled up my pants quickly. I was processing the 'we're going to my place' comment. Pretty sure we weren't going to be discussing books.\n\nDexi had turned and was about to lead us out, when I grabbed her. I wrapped both arms around her from behind, and brought my hands up to cup her breasts, lifting them slightly.\n\n\"You're not exactly conformant yourself,\" I laughed, and nuzzled the side of her neck. She moaned, and leaned back against me. I had, perhaps, found a soft spot.\n\n\"I don't hear you complaining,\" she breathed, lolling her head to one side to give me better access. I could feel her body quivering. Perhaps I'd found a very soft spot.\n\n\"Mr. Miller,\" she moaned, trying to exert her control, even as I squeezed her boobs again. \"Please, put it on hold. I promise, you can fondle me all you like, once we get to my apartment. This is dangerous.\"\n\nI acquiesced, relaxing my grip on her, and letting her regain her balance. She walked quickly out of reach. Seconds later we were descending the stairs. As she passed the spider on the table, she grabbed a leg, and dragged it behind her into the storage room. The light went off, and she reappeared, closing the door.\n\n\"Let's go,\" she smiled, grabbing her purse.\n\nI followed a couple of steps behind her, down the hall and out into the late afternoon sunshine. In the parking lot, she opened the passenger door of her well used SUV, then continued around to her side. Once the doors were closed, she sat quietly, keys in hand, thinking. Hopefully not second thoughts, although I suppose it was too late for those. \n\n\"You should let your parents know you're going to be a while,\" she said, turning the ignition.\n\n\"Right. One imaginary party to attend. No problem,\" I nodded, typing rapidly. \"Done.\"\n\nShe pulled out into traffic, and we drove in silence for several minutes.\n\n\"Bryan, I hope you don't think I'm some sort of skank,\" she said softly, hands tight on the wheel. \"I don't do this often.... I mean, I've never done this with a student, before. I'm not a nun, but it's not like I go around looking for some guy's dick to suck. It just sort of happened, what with the costume, and you checking me out, and that got me thinking about you, and once I started I couldn't stop, and I got soooooo fucking horny, and I thought 'hey, he's an adult. I'll bet he'd like me to do it', and I just sort of.... I'm sorry, I'm blathering. I guess what I'm saying is that I like you. I really like you. Oh my god! I didn't even ask if you had a girlfriend already! You don't, do you? I didn't just make you cheat, did I?\"",
        "She seemed genuinely distraught.\n\n\"No. No such luck,\" I shook my head, but heard what she said loud and clear.\n\nDid I have a girlfriend... Already? Was she hoping to fill the position?\n\nShe relaxed. Even while she'd been sucking my cock, she had still been in control. She had still been Ms. Denninger, the librarian. A naughty one, for sure, but still the librarian. Now, in the privacy of her vehicle, she had softened. More like the Dexi I'd seen on the golf course. I suppose it was a requirement, given her situation.\n\n\"How old are you, Dexi? If you don't mind me asking?\" I ventured.\n\n\"Twenty-eight,\" she giggled. \"A younger Mrs. Robinson, if you get the reference.\"\n\n\"I've heard the name,\" I laughed. \"Not sure where it's from, but I get it.\"\n\n\"Good,\" she smiled, her confidence returning, \"because I'm going to fuck your brains out when I get you alone. You think that blowjob was good? Hold onto your socks.\"\n\nI wasn't sure if that comment should frighten me, or arouse me even more. I settled on arousal.\n\n***\n\n\"Welcome,\" she smiled, dropping her keys on the counter. She whirled around as the door clicked shut, and hit me with a kiss that pinned me against the wall. I may not have had any experience in other aspects of intimate relationships, but I'd been kissing girls for years. I wrapped her up in my arms and kissed her back, sucking the tongue she had thrust into my mouth.\n\nOnly one of us was actually an eager teenager, but she was quick to join me, as we pawed each other, moaning and breathing heavily. The kisses were extremely passionate, and getting hotter by the second. She had one leg hooked around me. I had one hand inside her dress, caressing her breast. The other hand was holding her ass, pulling her tighter. I dipped my knees, and lifted her off her feet.\n\n\"Wooo-oooo,\" she giggled, between kisses. \"To the right, then the first left.\"\n\nI almost tripped over one of her shoes, dislodged when I lifted her, but I managed to make it through the bedroom door without dropping her. We crashed down on her bed, laughing happily. The kissing resumed, and we rolled around, tugging at each other's clothes. She was on top when she stopped, sitting up, her tits hanging out of her dress. The wig was again askew. Her eyes looked up, through the bangs, and she laughed.\n\n\"Why don't you get comfortable.... and by that I mean naked, while I dispose of this outfit. I'd rather our first time be Bryan and Dexi, not Bryan and Elvira. It'll only take me a couple of minutes.\"\n\nIt didn't seem like an unreasonable request. I watched her disappear into the bathroom, then exhaled, and rolled out of bed. In a moment of sudden maturity, I laid my clothes out neatly over the chair beside the bed, rather than in a pile on the floor. I slipped back between her sheets, and rested my head on the only pillow, among the half dozen stuffed animals.\n\nOh, boy, oh boy, ohboy... I'm gonna get laid!\n\nA moment or two later, the bathroom door opened, and Dexi strolled out, brushing her long brown hair. She was wearing a silky robe, but it was untied, and wide open, revealing her nude body.\n\n\"Hate the wig,\" she wrinkled her nose.\n\n\"The dress is nice,\" I smiled. \"Hope I didn't stretch it too badly.\"\n\n\"I'll fix it,\" she giggled, placing the brush aside.\n\n\"It's okay,\" I laughed. \"I'm really more interested in what was in it.\"\n\nShe paused, standing next to the bed. The robe hung loose, hiding her breasts, but showing a clearly shaven pussy.\n\n\"This old thing?\" she whispered, shrugging the robe off. It slid to the floor with a swish, leaving her stark naked.\n\nHer luscious breasts were quite the handful each, and stood out proud on her chest, with only a hint of gravitational effect. A smooth, flat belly led down to that hairless junction between her thighs. I gestured in a circle with my finger, and she spun in place, giving me the rearview. Her ass was everything I hoped it would be, and lustrous brown waves reached the middle of her back.\n\n\"It'll do,\" I quipped.\n\n\"It'll do?!\" she gasped, an incredulous look on her face.\n\n\"Just kidding,\" I smiled, holding the sheet up for her. \"You're the most beautiful woman I've ever seen.\"\n\n\"Porn stars included?\" she chuckled, sliding in beside me.\n\n\"Let's not worry about that,\" I replied.\n\n\"Good call,\" she breathed, and we kissed once more. \n\nWithin seconds, it was as though we'd never stopped. The passion boiled over. Dexi dipped her head under the sheet, and sucked my cock again. She got it fully erect, and nicely wet, then swept the covers aside.\n\n\"Need this inside me, right now,\" she groaned. One leg gracefully swung over my hips, and she aimed my dick at her target. Guiding the head between her labia, she settled onto it, wiggling her hips as it slipped up into her juicy interior. \"Ohhhhhhhhhhhhhhh yes. That'll do,\" she moaned.\n\nWe both laughed, and I tickled her waist, then rolled us over. Another kiss.\n\n\"Fuck me, Bryan,\" she hissed, looking up at me. \"I've been waiting for this.\" \n\nGonna do that. Don't even need a reason. \n\nI started, getting a nice, smooth rhythm of strokes going, pushing deep inside her. Warm, wet, and tight, her pussy was heavenly.\n\n\"Oh god, so good,\" I grunted, continuing to probe her repeatedly.\n\n\"Yeah, that's it, just like that,\" she whispered in my ear, holding me close. \"Uh huh, uh huh. Fuck me, baby. Fuck me so good.\"\n\nI shifted position slightly, raising up on my knees just a bit.\n\n\"Oh FUCK! YEAH! RIGHT THERE!\" she gasped. \"Harder! Fuck me harder!\"\n\nCheck, engage.\n\nI drilled her harder, as requested.\n\n\"Yes... Yes... Yes... Oh... God... Yes! Pound... My... Puss-y,\" she grunted in rhythm. Words became gutteral sounds of pleasure. Another minor shift, and she shrieked, her legs wrapping high around my waist.\n\n\"Oh my GOD, I'M GONNA CUM! HARDER! FUCK ME HARDER! YEAH! GONNA CUM, BABY! UHHHN! UUUHHHHN! MORE! MORE! YES! YESSSS! FUUUUUUUUCK YESSSSSS!\"\n\nI felt her heels digging into my ass, and her fingernails raking my shoulders, while her body bucked and twisted under me. I was locked in place, and I could feel the rhythmic pulse of her pussy squeezing my cock. She thrashed her head side to side, and screamed, then just melted, going limp in my arms.\n\nI rested on her, listening to her ragged, gasping breathing as it became more normal over time.\n\n\"Yeah, it'll do,\" she gurgled, patting my ass. \"Thank you.\"\n\n\"Any time,\" I giggled.\n\n\"Well, not right now,\" she smiled, combing her dishevelled hair with her fingers. \"Unless you want to kill me. That was really intense. I've been thinking about it all day.\" She untangled her legs from around my waist, and looked up at me. \"You didn't disappoint.\"\n\nI rolled off her, still hard, as she mentioned when she peeked down between us.\n\n\"Save that for later,\" she said softly, cuddling against my side.\n\nThe quiet of the apartment was shattered by a firm knock on the door.\n\n\"Oh, what the fuck? Who could that be?\" she complained, rolling quickly out of bed. She grabbed her robe. \"Ooooo! Head rush!\" she moaned, as the knock was repeated. \"Coming!\" she called, tying the sash tight. \"Hmmmm, no I already did that,\" she giggled quietly. \"You stay here.\"\n\n\"Who is it?\" she called, approaching the door.\n\n\"Police, Ma'am,\" I heard, muffled as it was through the door and down the hall.\n\nOh, that can't be good. I hunkered down in the covers. I heard the door unlock, and creak open.\n\n\"Yes, officer?\" I heard her ask.\n\n\"Sorry to bother you Ma'am,\" the man's voice said. \"We received a call about noise from this apartment. Is everything alright?\"\n\n\"Oh? Yes, officer,\" Dexi giggled. \"I'm sorry. I was in bed with my boyfriend, and things got a little, um.... well, you understand, I'm sure. Those were screams of pleasure, not distress. I apologize for the noise. I'll try to keep it down.\"\n\nI heard a throaty chuckle from the officer.\n\n\"I understand,\" he added. \"My wife has been known to do a little screaming in the bedroom, as well. I guess these walls are a little thin.\"\n\n\"So it would seem,\" Dexi continued. \"I didn't think I was being that loud, but maybe my judgement was a bit biased. Again, I'm sorry.\"\n\n\"You go ahead and enjoy each other,\" the officer told her. \"There's nothing wrong with that. Just tell him to dial it down a couple of notches, so you don't scream quite as loud. Have fun. Goodnight, Ma'am.\" \n\nA few seconds later, after the door was closed and locked, Dexi reappeared in the bedroom doorway. \n\n\"Wow,\" I laughed. \"You should really keep the noise down.\"\n\n\"Oh, fuck you,\" she laughed back, untying her robe. \"It was your fault. I was totally guilt free.\"\n\n\"Well, I ain't dialling nothing down,\" I told her, as she snuggled back under my arm.\n\n\"Don't want you to,\" she replied. \"I'll just bite my pillow, you do your best. Damn the torpedoes! Just not right now. I need some food. You hungry?\"\n\nI was wrapped around her, holding her from behind. Her neck was there for the taking.\n\n\"Ohhhhhhhhhhhhhhh, shit,\" she whispered. \"I meant food. Are you hungry for food!\"\n\n\"Boyfriend?\" I queried, kissing her neck.\n\n\"Oh.... heard that, did you?\" she moaned, squirming in my arms. \"It was easier to explain to the cop that way.\"\n\n\"So, just for the police?\" I asked, gnawing her throat. I had one breast in hand, as well.\n\n\"Yeah, just for the cops,\" she said, breathlessly. \"Maybe.\" \n\n\"Okay. Maybe works for now.\"\n\nI stopped the assault on her neck, but kept her boobs in my hands, and cuddled her closer.\n\n\"May I ask a personal question?\" I said softly, just behind her ear.\n\n\"Why not?\" she laughed. \"Not much left to hide.\"\n\n\"What is the origin of Dexilara? It sounds pretty exotic,\" I asked.\n\n\"Yeah, it sounds exotic. I like that, but I'm not sure I should tell you the truth about it,\" she responded.\n\n\"Aww, come on,\" I smiled, nibbling her collarbone.\n\n\"Not fair,\" she giggled. I slipped out from behind her and pinned her down, holding her wrists wide. I began to suckle her again. She squirmed. \"Okay! I'll tell you!\"\n\n\"Goodie!\" I laughed, releasing her. \"What's the deal?\"\n\n\"It's not that interesting, really. You're sure you want to know?\" I nodded. \"Well, my Mother's name is Lara. You get where this is going?\"\n\n\"Really?\" I asked.\n\n\"Yes, my Father is Dexter. Dexter Denninger. It sounds hokey, but I like it,\" she explained. \"Now, you tell me something.\"\n\n\"You want to know the origins of Bryan? I don't think I know that answer,\" I told her.\n\n\"No, I want to know what the boys at school call me. I've heard whispers,\" she said, sitting up in bed.\n\n\"Oh, that's easy,\" I smiled, putting my hands behind my head. \"Sexy Dexi. I think I actually started it.\"\n\n\"Sexy Dexi? Not bad. I can live with that,\" she smiled. \"Anything else?\"\n\n\"DD, or Double D,\" I confessed, less proud of those. \"Not my work.\"\n\n\"Cute. Initials and obvious physical attributes,\" she frowned, but shook her big tits anyway. \"I prefer the first one.\"\n\n\"I prefer 'girlfriend',\" I grinned.\n\n\"Maybe,\" she repeated, smiling at me. She settled back into the bed. \"To hell with the food. I've got my second wind, now.\" She spread her legs. \"Fuck me again, baby.\"\n\n***\n\nMonday morning arrived, and I went to school with a new spring in my step. It had been a busy weekend, since Friday night, although neither my family nor friends had seen much of me.\n\nDexi certainly had. We were trying to set a new record for mattress testing, and had spent the weekend fucking like proverbial rabbits, and talking, planning a strategy that would hopefully get us through the next eight months, until graduation.\n\nUntil then, and maybe for a while afterwards, we were like the Manhattan Project, Area 51, the truth about the Kennedy assassination, rolled into one. Ultra, super top-secret. For our eyes only. A secret, so deep and dark it's not even a rumour. \n\nBut, while we were together, we'd be enjoying ourselves. The boyfriend - girlfriend question had been definitively answered. Even if we couldn't go out in public yet, we weren't going to stop. It was simply too much fun. \n\nLike yesterday, for example. We had already completed rounds one and two, and were taking a break, cuddled together on the couch, watching football. Minimally dressed, I had my underwear on, while she wore the classic t-shirt nightgown. Just to make things interesting, we had a bet on the game. It was the kind of bet neither of us could lose; the winner got to pick the position for round three.\n\n\"Oh, come on! You call yourself a quarterback?\" she yelled at the TV. \"I could have made that throw!\"\n\n\"Your guys had better pick it up,\" I reminded her. \"Almost the two minute warning.\"\n\n\"Yeah, but we got a great kicker. Leg like a mule,\" she smiled, standing up to urge her team on.\n\n\"You weren't perhaps a cheerleader in school?\" I asked, watching her bare ass wiggle under the edge of her shirt.\n\n\"Of course I was!\" she giggled, turning her attention to me. She did a high kick, flashing me a view of her luscious pussy.\n\n\"Nice pom poms,\" I laughed. She cupped her boobs and juggled them, then stuck her tongue out playfully. She turned back to the TV, where her team was just setting up for what she hoped would be a game-winning, 53 yard field goal.\n\n\"Oh! Come on! Come on! Momma wants her pussy licked!\" she begged, dropping to her knees in front of the TV. The snap came back, the hold was good, and the kick.... wide right!\n\n\"Yes!\" I cheered.\n\n\"No!\" she gasped, her hands in her hair. She collapsed down, and rolled onto her back. \"Damn!\" The drama concluded when she rolled on her stomach, and and kicked her feet in a mock tantrum.\n\n\"Okay,\" I smiled, rubbing my hands together gleefully. \"How about that ass?\"\n\n\"Nooooo!\" she cried, using both hands to cover her bum. \"You're too big! You'll tear my poor little asshole wide open!\"\n\n\"Alright, I'll defer in this case. You pick,\" I told her.\n\nNews that her tight sphincter was safe was greeted with a smile, and she rose to her hands and knees, approaching me like a sexy cat. She tugged my underwear down, and immediately swallowed my dick.\n\n\"Mmmmm,\" I moaned, as the blood surged in to bring my penis to life. She kept sucking until it was fully ride-worthy, which didn't take long, then crawled up to straddle me. Her shirt disappeared, pulled off over her head. She took a position on her left knee and right foot, which put her pouty pussy right in my face.\n\n\"Just a little warmup, please,\" she asked gently, parting the lips with her fingers. Her clit, nearly the size of the tip of my pinky finger, was clearly ready to be licked. Well, she did ask nicely.\n\nHer clit being so prominent, it made it easy to attack with my tongue. Dexi's hand was on my head, to keep me in place, and also to keep from falling over the back of the couch. She was very juicy, and I was kept busy chasing that moisture. Her fingers gripped my hair tighter suddenly.\n\n\"Oh, shit!\" she grunted, and her body shook. She tossed her head back, and I grabbed her ass to stabilize her. It was a nice little orgasm; a good start to the afternoon, that would have to tide us over until next week. \n\nDexi gently lowered herself, spearing that juicy pussy with my shaft. Once fully impaled, she leaned into my chest. Her firm tits squashed against me, and she tilted her head for a kiss.\n\nReaching her lips in this position was awkward, but we managed. Reaching her nipples, my other oral fixation, was easy. There they were, right in front of me, bouncing and dancing crazily with her movements. I grabbed a handful in each hand, and went to work, sucking, nipping, gnawing, twisting.... whatever came to mind. I tried to distribute my time equally between the two breasts, but my internal clock was being compromised by the fact that she was riding me with furious intent. Pro bull riders get a smoother ride.\n\nShe was a one-woman cacophony of cute, expressive, and sensual noises, and was pounding her pussy harder and faster by the second. She leaned down, and bit the back cushion of the couch. It was surprisingly effective in muffling the screams as her orgasm hit. \n\nA few seconds of recovery, and she lifted herself slowly.\n\n\"Ooooo. That was fun,\" she smiled wearily, rolling onto her hip to sit beside me. \n\n\"My turn,\" I told her. \"Doggy, please.\"\n\n\"Alright, but only if you promise to hit the primary target,\" she smiled, moving onto her knees. \"No back door. You promise?\"\n\nI was standing behind her, one hand on each of her hips, as she knelt on the couch.\n\n\"So, that's the top one?\" I laughed.\n\n\"Nooooo!\" she giggled, trying to escape my grasp.\n\n\"Okay, okay, just checking,\" I replied, taking aim. I hit the agreed upon vaginal opening. Straight in, balls deep, I immediately started fucking her hard.\n\n\"Bullseye!\" she groaned, and braced herself for the full onslaught. \n\nThat was the only big move I had yet developed. I didn't have enough experience to have learned any tricks yet. I'd get feedback on those from Dexi along the way, but I did have the advantage of energy. I could fuck hard, and I could fuck fast, and after cumming a few times, I could fuck hard and fast for a long time. \n\nSo, that's what I did. This last time would have to last for at least five days. I know, I could and probably would take care of my needs during the week, while remembering Dexi's beautiful body and agreeable personality. Presumably, she could do the same for herself. Still, a part of me wanted to give her something more tangible than just a lascivious memory. Perhaps the ache of a well used pussy that might last a few days.\n\nI went at it in full jackhammer mode. I think it surprised her at first, judging by the look I caught over her shoulder, but she seemed to be enjoying it. Now she had a death grip on the back of the couch, with her face buried in the cushions. Her shrieks, muted by the couch padding, left no doubt.\n\n\"YES! YES! OH, FUCK YES! DON'T STOP! FUCK ME BRYAN! FUCK ME HARD!\" And those are just the bits I could decipher. They were mixed in with many unintelligible comments and several simple screams of joy. Her rump was getting red from the repeated collisions between our bodies.\n\nI looked down into the gap that opened and closed like a camera shutter between us. The lips of her vagina, stretched open around my cock, and dragged back and forth along the shaft with each stroke. A wet froth of her natural juices was collecting, even splashing slightly when I slammed forward into her. It was an epic, frenzied fuck of desperation and flooding emotions.\n\nExactly the memorable event we both were hoping for, and exciting as hell.\n\n\"I'm gonna cum,\" I groaned. Her head came up, and she gave me another grin over her shoulder.\n\n\"I want... you... to shoot... all that... yum... my... cum... all... over... me,\" she demanded, as I gave her a final few furious stabs. I pulled out, and she spun on her left knee, nearly falling as she rushed to position herself. Just in time, she cupped her big tits, offering them a target.\n\nBlam! Blammm! Blammmm! Blammm! Spit, sputter, drip. My hand kept pumping the shotgun, but the magazine was now empty. Judging from the mess on my Sexy Dexi, I'd say it might be days before it was replenished. \n\n\"Holy shit, Bryan!\" she giggled. Cum was streaked across her neck, up the right side of her face, and into her hair. More was splattered on the left side, a shot that hit her right on the corner of the mouth. It was dripping off her chin, onto her breasts, and sliding in gooey globs down her body, like a slow moving river flowing around the obstructions that were her breasts. I had hit pretty much everything, except her tits, which she still held in both hands. \n\n\"Sorry,\" I gasped, catching my breath. I had to laugh, too.\n\n\"No you're not,\" she smiled, catching a drop as it fell from her chin. \"You're almost proud, aren't you? Fuck, you really did a Pollack on me!\"",
        "Well, it was a pretty impressive display, but I didn't follow her comment.\n\n\"A, um, Pollack?\" I asked, watching her lick her fingers clean, and go back to her cleavage for more, in an effort to stop the flow.\n\n\"You have a very well appointed library, at your disposal at school,\" she suggested, with a shrug. \"Look it up.\" \n\n***\n\nSo, as I said.... Monday morning, I was walking down the hallway at school. It was early; nearly forty-five minutes before classes started, so the majority of students were just arriving. I was whistling happily when a thought came to mind, making me deviate from my course. The library beckoned.\n\nAs I approached the open door, the song played in my head. \n\n\"Take a look at my girlfriend, she's the only one I got....\" I sang. Behind her desk, Dexi was looking down. Her eyebrows shot up.\n\n\"I'm sure she will be happy to hear that, Mr. Miller,\" she said, fixing me with a stern gaze. \"Still hung up on Supertramp, I see?\"\n\n\"The classics live forever,\" I smiled. \"I'm sorry. I'll keep the music in my head.\"\n\n\"I'd appreciate that,\" she smiled. \"How do you feel about Fleetwood Mac? Rumors?\"\n\n\"Great album,\" I said. \"Which track?\"\n\n\"Well, there are several, but I'm thinking 'Go Your Own Way',\" she said casually, while shifting a pile of books.\n\n\"I'll give it a listen,\" I replied, and waved. \"See you later.\"\n\nThe tune was easily called up from the depths of my memory. It really was a great song. The lyrics, however, were less clear. I searched on my phone, on the way to my locker. \n\n\"Loving you, isn't the right thing to do. How can I ever change things that I feel... \" the screen told me.\n\nIt was going to be a long week, and a longer year.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nOnce again, thanks for reading. Please cast those votes.\n\n \n"
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "big tits",
        "brunette",
        "older woman",
        "younger man",
        "attraction",
        "teen",
        "young"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/library-of-congress"
}