{
    "title": "The Master and the Ring Ch. 10",
    "pages": [
        "Sorry for the wait, we've been busy with multiple projects some of which unfortunately won't be found here.\n\n*****\n\n\"I can mend the ring, mi lady, but I cannot preserve the runes around it in the process,\" the gold smith said to Yvonne as he looked at the two halves of gold.\n\n\"The runes are of no consequence any longer. Repair the ring as quickly as possible,\" Yvonne responded.\n\n\"I'll have it completed for you tomorrow.\"\n\n\"Very well. Tomorrow then,\" she said, turning to leave.\n\n\"And congratulations on your engagement, my future queen.\"\n\n\"Thank you, kind sir,\" she said as she left his shop.\n\nGetting the ring tomorrow was cutting it close. That was the night of the full moon and the height of their power. A power Yvonne never knew she possessed. What she had learned from the witches was nothing more than what she considered women's intuition. The spark was much more if strengthened with practice. Already she and Serena had learned much in a short time.\n\nShe returned quickly to the palace. She was to meet her sister and the two witches to continue her learning before the full moon. It was getting dark as she asked the driver to hurry the horses faster toward the palace. The carriage rocked and swayed at the increased speed. Watching out the windows, Yvonne saw lights beginning to be lit in the cities homes.\n\nShe had left Serena at the palace to attend to the wedding details and any other affairs of House Granvas. She had received a letter from her uncle, Lord Byron. He apparently wanted to see her. Of course he would want to see her after the announcement of the engagement. He was probably the one that had tried to kill Henri. Yvonne hoped the announcement would save Henri from any further attempts on his life. She was pleased he had finally gone to the palace and was now under protection from the king's guards. She had heard the attempt was almost successful if it wasn't for General Sharis. She would have to thank him when she saw him again.\n\nArriving late, Yvonne hurried to Heather's and Arianna's chamber, having to walk through the servant's room on the way and finding Mary there.\n\n\"They've started without you,\" Mary said as Yvonne rushed through.\n\n\"I'm sure they have. And how are you, Mary?\" Yvonne, asked, pausing in her rush.\n\n\"I'm coping, but the waiting doesn't make it easy.\"\n\n\"Are you still determined?\" Yvonne asked.\n\n\"Yes. When I keep my mind on Henri it's easy to stay determined, my lady.\"\n\n\"Then think on him. You are making a great sacrifice for your country and king.\"\n\n\"Thank you. Just promise me you will take care of him when I'm gone.\"\n\n\"You have my word, Mary.\"\n\n\"Don't let the power destroy him.\"\n\n\"I won't.\"\n\nMary forced a smile, holding out a hand to Yvonne who took it and grasp it tight. \"You should go, my lady... you don't want to get behind in your studies.\"\n\nYvonne smiled, releasing her hand and opening the door into the inner chamber.\n\n**\n\n\"Move the majority of your army south. We must stop their advance and hold them until after the night of the full moon,\" Henri said, looking down at the war map with General Sharis.\n\n\"The only place we can manage to hold them would be here, my king,\" Sharis said, pointing at a spot on the map.\n\nHenri looked at the spot, \"I know of this canyon. The walls are steep; the land funnels into a small narrow neck.\"\n\n\"Yes, it will make their numbers of little consequence. We can hold them for the time you need, but not much longer without reinforcements.\" \n\n\"If all goes as planned, after the full moon I'll be the only reinforcements you'll need.\"\n\n\"I'll await your coming then, my king. I must lead my men at first light.\"\n\n\"I will come as quickly as I can, once the Ring is returned. Together we'll destroy the Garigasians and push them back into the great sea south. They will not be able to stand before us.\"\n\nSharis held out his hand and Henri shook it. No more words were spoken as the big general left the room. Henri leaned heavily on the large table, looking at the map of the known world before him. He hoped he only had to worry about the south. His nation had always been coveted for its land. It had always been strong enough to thwart attacks until now. Until the old Master with the power of the Ring decimated his nation's army. The Ring was his nation's only chance now.\n\nLeaving the war room, Henri went to find Yvonne and Serena, but did not locate them in their chambers. He then went to Heather's and Arianna's, thinking he'd find them all together, making plans for the casting of the spell. Knowing of Mary, staying in the servant's quarters, he knocked before entering. She came to the door and smiled large when she saw that it was him.\n\n\"My king! I'm happy to see you,\" she said.\n\n\"Good to see you, Mary,\" he said, as she let him in. \"Are the others together?\" he asked, nodding toward the inner chamber.\n\n\"Yes, they are practicing and Yvonne and Serena are learning.\"\n\n\"And how are you?\" he asked.\n\n\"I'm very well, now that you are here,\" she said, placing her hand on his chest. \"I must confess, I watched you with the witches the other day. You were amazing.\"\n\n\"You did? Did you tell anyone?\" he asked, taking her hand and holding it.\n\n\"No, no one, my king. They would not condemn you, for the witches are very beautiful, a temptation for any man.\"\n\n\"Yes, but it would be better Serena and Yvonne did not know until after the Ring is reborn, to ease any tensions between them. Do you understand?\"\n\n\"Yes, my king. I understand.\"\n\n\"Good,\" he said, releasing her hand and moving toward the inner chamber.\n\n\"Henri... my king,\" Mary called him back.\n\nHe turned and she walked toward him. \"I saw how the witches took you in the forbidden way. I saw the pleasure they achieved from this and you as well. Tomorrow, when we are together... will... will you do this with me. It will be my final request.\"\n\nHenri hesitated. He knew Mary had not been preparing for his large cock in the forbidden way. He also knew that as the Ring was reborn he would increase in size, destroying her in the process. He also knew she had to die no matter what.\n\n\"If you wish this then I will consent, but you must prepare before to make it more pleasurable. The Daughters of Mentula spend years preparing for the Master. You only have a very short time.\"\n\n\"I will do what I can. I will ask the Daughters for guidance in this.\"\n\n\"Former Daughters, but yes, they can be of assistance.\" \n\n\"Can I see it?\" she asked looking down at his cock. \"I would like to feel its size to know what I must do before the full moon.\"\n\nHenri acquiesced, removing his sword belt and letting his pants fall around his boots. Mary quickly seized his shaft and lifted the heavy mass upward as it began to grow. Her touch was more scientific than sexual. She stroked only to get him erect before measuring him with her fingers and hands until she felt confident she knew his length and girth by heart. The sensations were still pleasurable to Henri. She made sure she had him fully engorged, stroking him until he was throbbing and a small drop of pre-ejaculate had appeared.\n\n\"I've always loved your penis, my king. I've enjoyed your visits to the inn and confess I will miss that most of all when I'm gone,\" she said holding the middle of his shaft.\n\n\"I wish there was some other way, Mary,\" he said.\n\n\"I know, my king... but you must let me do this for you... for the nation.\"\n\nHe smiled down at her and she leaned forward, kissing the head of his cock before standing up.\n\n\"Thank you for letting me inspect you. I will prepare accordingly as well as I can before the ritual.\"\n\nHenri pulled his pants up, replacing his sword belt and wanting to tell her that no preparation would suffice when the Master returned. His heart ached, his gut sick with what he was going to have to do to the pretty barmaid he had shared several intimate moments with. Unable to speak without his voice cracking, he turned away from her and entered the inner chamber.\n\n**\n\nWhen Yvonne found the three women, she was shocked to see Serena levitating a small candle off the surface of the table. She was learning fast and this put Yvonne already behind. Heather and Arianna were watching Serena's progress with approval on their faces. As Yvonne approached, the candle fell to the table and Serena jumped out of her chair.\n\n\"Did you see that?! Did you see what I did, Yvonne?\"\n\n\"Yes, Serena, it is amazing.\"\n\n\"You have to try now. Just sit here,\" Serena said, taking her sister by the arms and pushing her into the chair. \"Now just concentrate and think of nothing but the candle. Heather said it's like freeing your mind and then you'll feel the power flow through you. It's a rush!\"\n\n\"Okay, okay, Serena, give me some time.\"\n\n\"There is a little more to it than that, Serena,\" Heather said. \"Now, Yvonne, just relax and don't try to make the candle rise, you can't force it. Ask or work with the candle as if it was a living thing. The spark with grow through cooperation with the things around you.\"\n\n\"I think I understand,\" Yvonne said, letting out a deep breath.\n\nYvonne cleared her mind, focusing on the candle and pushing all else away. She started to feel light as if she was no longer sitting on the chair. A current began in her core, flowing through her body and increased until she felt the spark grow greatly. The power was larger than she though it would be. Yvonne suddenly felt very powerful. Not only did the candle rise from the table but the large stone table top with a thick wood base rose off the ground.\n\nSerena gasp and Yvonne saw both Heather and Arianna's eyes widen in alarm. The power continued to grow stronger in Yvonne. It felt natural almost intuitive to her suddenly. This should have alarmed her but she welcomed the strength and basked in her new found ability. Slowly she eased the table and candle back to the earth and released her hold on the flows.\n\n\"How was that?\" she asked.\n\nHeather and Arianna looked at each other, stunned. Serena was jumping up and down with excitement, not realizing the ramifications of what her sister had just done.\n\n\"You are very powerful, Yvonne. I admit, you exceed both mine and Arianna's strength and in so short a time. You must learn the words to the spell, for it is you that must cast it now,\" Heather said.\n\n\"Yes, we were concerned we did not possess the strength of the Mothers to perform the spell properly but now we see that you will be the Head. Not only will you be queen but you will stand at the center of our immortality once the Ring is reborn,\" Arianna said.\n\nHeather reached into her pocket and pulled out the four gold rings the Mother's had worn on their clitorises. They looked identical at a simple glance but as Yvonne leaned forward for a better look she saw the runes were different.\n\n\"This will be yours,\" Heather said, pushing one toward Yvonne.\n\nYvonne picked it up and looked at the runes curiously. She cleared her mind and focused, until she felt the flow of the power return and as she did so, the runes became clear to her and she comprehended what they inscription said.\n\nCENTER - ALL POWERFUL HEAD\n\nHeather passed out the remaining rings to herself and Arianna and finally to Serena.\n\n\"The runes were inscribed when the spell was finished. They will be renewed again but hold no power now,\" Heather explained.\n\n\"The runes on the Ring of the Master will be destroyed as it is forged anew by the smith,\" Yvonne said.\n\n\"No matter. They too will be inscribed again as Henri wears it and the spell is cast,\" Arianna explained.\n\n\"I hold the second ring, Arianna the third and Serena the forth. All that we do together must be done in this order after the spell is cast. When the spark is extinguished and the Master appears, you must place your ring first upon your clitoris, followed by me and so forth,\" Heather explained to all.\n\n\"I understand,\" Yvonne replied just as the door to the camber opened and Henri entered.\n\nAll four women stood, holding their rings tightly in their hands. He walked toward them with a smile on his face and for some reason a large bulge in his trousers. His erect penis was not easily concealed. \n\n\"Well, you look happy to see us?\" Yvonne said, glancing down at his crotch.\n\n\"Umm, yes... Mary had a request.\"\n\n\"That she seems to have not finished, my king?\" Heather said, coming around the large table.\n\n\"The request did not go that far, Heather. Ignore my erection, it will subside soon. How are the preparations going?\" he asked.\n\nNone of the women spoke, they were all smiling at him and watching to see if he's erection would truly subside as he said it would.\n\n\"Well?\" he asked again.\n\n\"They are going well. Both Serena and Yvonne have learned how to focus their spark and the power flows freely now. They both grow in strength. The spell will be successful,\" Heather explained.\n\n\"Good, we have no recourse. It must work. I've sent our armies to hold off the Garigaisians until I'm able to assist them as the Master. Once their forces are decimated and driven back, I will return and Yvonne and I can be wed.\n\nSerena suddenly giggled. Henri turned toward her and cocked his head for a reason. The other three women looked at her in response.\n\n\"I'm sorry, my king, but it appears you have saturated your pants,\" she said, putting a hand to her mouth.\n\nHenri looked down at the growing wet spot where the head of his erect cock had oozed through.\n\n\"It appears you are not subsiding, my king. Can we be of some assistance?\" Arianna asked, stepping forward. \"We are here to serve you.\"\n\n\"If anyone is to assist the king it shall be I,\" Yvonne spoke up, blocking Arianna from Henri.\n\n\"Ladies, there is no need for confrontation. If you would just please ignore it and cease speaking of such things I will return to a less distractive state.\"\n\n\"What if we don't want it to subside?\" the young Serena questioned.\n\n\"Serena! Mind yourself,\" Yvonne chastised.\n\n\"What? I'm only stating what you're all thinking,\" Serena said. \"Heather right now, wishes to drop to her knees and suck your highness. Arianna wants you to take her in the forbidden hole and my sister, bless he heart, wants you to carry her to her chambers and make love to her 'til morning.\"\n\nThe three women gasped and realized she had read their minds perfectly.\n\n\"She's strong in mind reading. This must be her strength,\" Heather suddenly said.\n\n\"What? Henri asked. Was she correct? You were thinking exactly what she said?\"\n\n\"Exactly, my king,\" the three answered in chorus.\n\nThis did nothing for Henri's erection subsiding.\n\n\"And what do you want from me, Serena?\" Henri asked.\n\n\"I want to swallow your hot, tangy seed, my king,\" she said with no reservations.\n\n\"Oh, by the ancients! The four of you will be the death of me,\" Henri said, not realizing what he had spoken.\n\nThere was an uncomfortable silence following his statement and he finally realized what he had said.\n\n\"I'm sorry... I didn't not mean... you know what I meant in this... I was just... I just don't know if I can satisfy all of you is all.\"\n\n\"You mustn't worry about such things, my king. We serve you. Even the future queen and her sister serve you,\" Heather said with emphasis.\n\n\"She's right, Henri. We will do as you wish,\" Yvonne said, resisting the urge to retort back to Heather.\n\n**\n\nMary located the longest and thickest candle she could find. Using her hand she measured what needed to be added to simulate Henri's remarkable penis. Melting additional wax, she began to dip and repeat over and over until she had a rude copy of Henri's manhood in her hand. She molded a head as the candle cooled and set it on the table before her. She played with her sex while she waited for the wax to sufficiently harden. She was wet and aroused, looking forward to her preparations to receive him into her forbidden orifice. She remembered the ecstasy the witches achieved with him in the forbidden way. She longed to feel the same. \n\nUsing her wetness, Mary circled her anus with two fingers she had just taken from her sex. She pressed in her middle finger while her other hand ground down on her excited nub. She liked the new sensations she had discover as her finger penetrated her tight outer ring and descended further into her hot bowels. She added the second and felt how tight she actually was. Looking at the object on the table before her, she wondered if it would really fit inside her tight forbidden place. She had seen the two witches take Henri with ease, but as he had said, they had had possibly years to prepare for him. She worried she might not have enough time.\n\nRemoving her hand from her clitoris, she picked up the new toy she had made, feeling it for the stiffness she required. Satisfied, she brought the head into contact with her wet sex and eased it into her body with a sigh of pleasure. She remembered how large Henri was and this mimicked the sensation well. Pulling it free, she forced it into herself deep this time, holding the base with only her thumb and index finger. Over and over, Mary thrust the toy into her body, basking in the sensations of the wide and long object filling her aroused womanhood.\n\nSeveral minutes, and now with the wax cock-like object covered in her secretions, she removed the toy and lowered it to her puckered anus. Her heart beat rapidly and her breathing increased with the anticipation of what she was preparing to do. She almost forgot to play with her clitoris with her other hand until she felt how tight she was when she began to press the tip of the wax into her forbidden hole. She began to circle her clit, pressing hard on the nubbin and using her wetness for lubrication. She pressed the toy firmly, feeling the sudden resistance as her body repelled the width of the head. It seemed much too large to enter her.\n\nShe eased up, pulling back and breathing hard. She continued to play with her clitoris, more rapidly now, letting the pleasure rush through her and replace the tension in her anal muscles. As she relaxed she began again, and this time she tried pushing out as her hand held the toy firmly to her quivering hole. The results were better. She felt herself open up more but still the strain was immense and there was a burn that began as the toy stretched her virgin anus. Again she stopped, panting now from the exertion. How did the witches do this?\n\n**\n\n\"What of Yvonne? Has she answered my letter? Has she come without my knowledge?\" Lord Byron bellowed.\n\n\"No my lord,\" his squirrely servant replied.\n\n\"She's ignoring me! Disrespecting me! I will not go to her. As her elder... as her uncle I will not lower myself to seek her out!\"\n\n\"Yes, my lord. What would you have me do?\"\n\n\"That assassin almost killed her king. She might suspect that was my doing. She's as stubborn as her mother.\"\n\n\"All the assassins have been recalled, my lord.\"\n\n\"I know that, you imbecile. I ordered it. Request her presence again. Her and her sister for dinner, tomorrow night. She'll have to accept that.\"\n\n\"Yes, my lord,\" the servant said before leaving his lord's chamber.\n\nLord Byron threw a goblet full of liquor at the fire in his anger. The flames roared before dying once again. He began to mumble to himself.\n\n\"The army marches to the south in the morning. Garigasia is at our doors and this whelp of a king hides in his palace! Probably pleasuring my niece instead of leading his country.\"\n\nThe house made retrieved the goblet, set it back on the table and refilled it for the lord. The sun was down, the evening turning to night and the almost full moon shone in the window. He took the goblet, spilling some on his hand in his rush and gulped down the strong liquor.\n\n\"Will there be anything else tonight, my lord?\" the maid asked.\n\nHe looked at her, knowing exactly what she expected him to say. He contemplated taking her again, thought about the tight little ass around his cock. He took another large gulp, wiped his mouth and admired her firm young body.",
        "\"No, see to your other duties, I'm busy this evening.\"\n\nShe quickly put the pitcher of liquor down on the table and left his chambers.\n\n**\n\nThe tension in Mary's anus was like hot fire. Her breathing was small gasps for air as her heart pounded in her chest. The only reason she was continuing was she knew she only had a short time to prepare for Henri. The hand not holding the wax cock was a blur on her clitoris. It helped with the stress and pain in her tight ring as she bore down once again and pressed upon the wax shaft with her tight orifice. She could feel herself expanding slowly around the width of the head she had formed. It had to end soon, it just had to. Clenching her teeth, she pushed out as she pressed in with her hand. Finally the tension eased and she felt the shaft of the wax cock ease past her straining ring and into her body.\n\nThe initial penetration was exciting, her heart pounded faster still and she felt a rush of adrenalin course through her even as her ass burned amid the pleasure in her clit. Once she had penetration, she held the toy still, letting herself adjust to the tip inside her body. Her muscles clenched and contracted around the object. She dared not move it further nor stop her tight circles on her nub. Slowly and after several minutes of furious clitoris stimulation, she felt her body accepting the wide shaft and a sense of euphoric pleasure growing in her body. This was what she was hoping for and what she saw on the faces of the witches when Henri was driving his hard, long cock into their bowels.\n\nGently, she dared move the wax shaft deeper into her. Her ass constricted and clenched automatically as she began to move it. Trying to relax she pressed in a couple of inches and paused once again. She felt full with the wide toy stuck up her ass, but the pleasure was growing amid her furious hand grinding hard on her clitoris. She focused on the pleasure, ignored the slight pain and tightness in her anus. Letting the warmth and bliss grow, Mary found herself moving the wax shaft in and out automatically two or three inches as the excitement and pleasure in her sex overwhelmed any discomfort. \n\nHer body was adjusting to the long shaft of the augmented candle. She found the sensation fascinating and the reality of how her body accepted it so soon amazed her. She had never felt anything like it. Her heart continued to pound in her chest from the excitement and thrill of accomplishment. She knew the key to her pleasure was in her clitoris but also felt a connection between the shaft in her forbidden orifice and the intense pleasure of her ringing nub. It was everything she hoped it would be.\n\n**\n\n\"I'm flattered ladies, but I'm only one man. Soon to be married to Yvonne. We can discuss the particulars at a later date, after the Ring is whole and the power restored. With its power, I will be able to satisfy you all often,\" Henri said.\n\n\"But won't we suffer injury?\" Serena asked.\n\n\"Not with your own rings. The witches demonstrated this when they held me captive. That's all I can tell you. Somehow their bodies adapted to the size of Mentula.\"\n\nAll four women looked at each other. Serena could somehow read each of their minds and what she heard made her smile as well as wet. She too wanted Henri at that moment. His large cock had not begun to return to flaccid as he said it would. No doubt he too wanted some sexual play as well. She read his mind briefly, not wanting to intrude into his thoughts too intrusively. She respected and loved him too much. But what she saw in his head was amazing. He was thinking about being the Master again and enjoying all four of the ladies in the room. His cock was huge but the images in his head showed Yvonne easily taking him into her body with her ring glowing brightly on her clitoris. He must have experienced this with the other witches to have such a vivid recall.\n\nSerena left his mind as a twinge of pleasure jolted her clitoris. She looked forward to the next night and the casting of the spell.\n\n\"We all look forward to this, my king,\" Heather said.\n\nSerena looked at her sister when Heather said this. Yvonne did not look pleased. Sharing Henri with Serena as they had discussed was one thing. Serena knew Yvonne would not like sharing Henri with Heather and Arianna. From Henri's comment it looked as though he intended to pleasure them all with or without Yvonne's blessing.\n\n\"Can I talk to you, my king... Alone?\" Yvonne asked, stepping forward.\n\n\"Not now, Yvonne... nothing matters more than the spell and the Ring. We will discuss arrangements once the spell has been successfully cast. Return to your studies I will leave you now,\" Henri said, turning before Yvonne could say another word.\n\nSerena saw Yvonne step forward to stop Henri from leaving but Heather reached out and stopped Yvonne.\n\n\"The king is right, Yvonne. We must continue to prepare. You must learn the words to the spell for it cannot be read.\"\n\nReluctantly, Yvonne turned back, shaking Heather's hand from her arm. The four women watched Henri walk away, adjusting his erect cock as he left.\n\n**\n\nIt was difficult for Henri to leave the four women with such an erection. He knew if he pressed the issue he probably could have had all four of them pleasuring him at that very moment. Time was the problem. He needed the spell to be properly cast more than he needed to ejaculate again. As he walked through the servant's quarters to leave, he heard moaning from the bed chamber. Not seeing Mary, curiosity got the better of him and he quietly walked to the entrance and stole a look inside.\n\nWhat he saw made his already hard cock lurch in his pants. Mary was on her back, lying on a bed with some kind of object shove into her anus. Her free hand was a blur on her clitoris as her other moved the object in and out of her forbidden orifice. She was preparing herself for him at that very moment. She had wasted no time nor had she discussed anything with the witches.\n\nThe object looked like a really long, thick candle but was nothing he had witnessed before since it was so long and wide. He realized, rather quickly, it was very similar to the cock throbbing in his pants. She must have fashioned it after measuring his with her hands. He was impressed, for she had already learned to accept the large object and seemed to be in the grips of pleasure and almost to orgasm. Mary panted and her legs quivered as she played and worked the object in and out as if Henri himself was penetrating her. \n\nHis cock throbbed uncontrollably in his pants and the wet spot doubled in size as his cock oozed through. Suddenly, Mary screamed in pleasure, her body tightened up and she began to shake and rock on the bed as the orgasm must have overcame her form. Her hands fell from her body and the convulsions forced the long wax shaft from her body, falling to the floor as she shook and panted from pleasure.\n\nThe sight was extremely erotic to Henri. Her naked body glistened with perspiration, her chest rose and fell, sucking air, her nipples rigid and pointing skyward as her climax continued for several moments. He almost entered the room and took her without permission he was so aroused by the sight before him. Gathering himself he tore his eyes from her body and reluctantly removed himself from the room.\n\n**\n\nWhen Yvonne returned to her own chamber, the queen's chamber, she had a new letter from her uncle waiting for her. She broke the wax seal and began to read. He had invited her and Serena to dinner tomorrow night. The night of the full moon. There was no possible way she could fulfill his request. She was too caught up in the spell to even write a letter of regret. She dropped Lord Byron's communication on the table and picked up the copy she had scrawled of the spell. She read it again and again, committing it to memory. The language was foreign to her but with the help of Heather and Arianna she had learned the proper pronunciations. She mouthed the words and even vocalized several of them out of order to not invoke any of the power she felt growing in her core.\n\nShe was both thrilled and frightened about what she felt and what she was going to do soon. She was destined to be queen and a powerful witch. The most powerful of the four from the inscription on the ring she held in her hand. She hadn't let it go since she picked it up off the table in the witch's room. It was too small to fit even on her pinky but she knew it would fit over her clitoris when the time came.\n\nRubbing the ring, she read the words to the spell again and they suddenly flowed intuitively in her mind. She was ready. \n\n**\n\nThe night of the full moon came. Henri arrived late to the casting as he was dealing with the war that had officially begun. News from riders came from the front. General Sharis had effectively stopped the Garigasian advance at the narrow canyon as planned but was taking heavy casualties. There wasn't much Henri could do. The only soldiers left in the capitol were his own personal guard and he had already sent half of them with the general. \n\nAfter doing what he could, he sent word back to the front and left his war room to meet up with the five women waiting for him. He hoped they had started without him and were well advanced in casting the spell.\n\nHeather had picked the spot ahead of time. It had to be outside in the light of the moon. She had chosen a small courtyard off the king's chamber. It was private and in the middle of the palace. It would be perfect for the ceremony and spell.\n\nHenri rushed to meet them, entering his chambers and through the door into the courtyard. He found the four women naked surrounding what looked like an alter with Mary lying nude on it. When he got closer he saw that it was just a makeshift table with soft bedding thrown over it. He walked up to stand below Mary who smiled up at him.\n\n\"Good, we can now begin,\" Heather said.\n\nThey all looked so serious, especially Yvonne as they stood at equal distances around the table. For him it was a sight to behold. Five naked women, all very beautiful and in full view for him to see. The stunning sight quickly caused his cock to stir in his pants as it rose. He soon noticed that Mary had already been preparing herself for his coming. Her fingers glistened in the bright moonlight and her sex was wet and her nipples erect.\n\n\"Remove your clothing, my king,\" Heather said.\n\nHenri quickly removed his clothes and was fully hard by the time he was finished. His ragging cock pulsed in the air, the tip reflecting the light of the moon from his pre-ejaculate oozing from his slit.\n\n\"Place the Ring on your penis. It will do nothing until the spell is cast,\" Yvonne said, handing him the newly forged Ring she had picked up from the gold smith earlier that day. \"Begin copulation, for the spell has to be pronounced just prior to your ejaculation,\" Yvonne continued, emotionless.\n\nHenri took the cool gold ring from Yvonne and placed it over the head of his cock, sliding it down his shaft. The cold gold made him flinch but it quickly warmed as he set it against his body at the base of his cock. He noticed the runes were gone; it did not glow or was not warm as he remembered. Right then it was just a ring of gold around his cock. Once it was secure, Henri climbed onto the table; he smiled down at Mary as she welcomed him between her legs\n\n\"I've prepared myself for you, my king. Take me as we discussed,\" Mary said quietly as he leaned over her naked body.\n\n\"Perhaps the proper way first?\" he asked.\n\n\"As you wish, but I want to experience you inside my forbidden place before I die.\"\n\nHenri's voice caught in his through as he tried to reply. He swallowed hard and was only able to nod. Moving forward he felt his slippery head make contact with the hot sex of Mary. He paused for only a brief moment before entering her. She was very hot and wet, caressing his entire length in wonderful wet bliss. She had obviously been working on herself for some time waiting for him. \n\n\"Oh... Yesssss... my king!\" she moaned as his massive length entered her well prepared sex.\n\nHe tried to ignore the fact that there were four other naked women watching him. All of which he had relations with several times. One he was to marry and all were soon to be bound to him by magic and the Ring. Casting his worries aside, Henri pulled his wet cock from Mary and slammed it home once again, knowing he had to do this to save his people.\n\nHe began thrusting repeatedly into Mary as she moaned and clawed at his back with each thrust. He suddenly noticed the four witches gather closer and grasp each other's hands. He knew they were linking their power. Pleasure rushed into his body from his fast moving cock. He had never released his pent up semen from the night before. He was quickly humming with pleasure and feeling his climax well on its way.\n\n**\n\nAs the witches linked they found they were of one mind. They knew each other's thoughts and everything around them became more distinct and clear. Suddenly Serena spoke in all their heads at the same time.\n\n\"I can read Henri's thoughts. I can feel his arousal. I shall tell you when to begin the spell, Yvonne.\"\n\n\"Excellent, sister,\" Yvonne replied.\n\n\"As the spell is completed the rings must be place in the proper order from Yvonne to the right, until Serena,\" Heather said to all.\n\n\"We will be ready,\" Yvonne replied.\n\n**\n\nMary was already climaxing. Waves of orgasmic bliss rushed through her form as Henri's large cock thrust in and withdrew. His hot, wide rode was much more exhilarating then the wax toy she had fashioned. She held him tight as he body shook and tightened around his shaft, her sex clenching in rhythmic contractions as her climax came fast and hard.\n\nShe still wanted him in the forbidden way. Wanted to feel the bliss she had achieved last night but thinking it would be better with the real thing moving in and out of her tight orifice. She listened to Henri's breathing, felt his body and knew from past experiences how close he was getting to his own climax. She had faith in him that he would not disappoint her, and would give her the desire of her heart. Her last wish.\n\nShe felt herself become exceedingly wet, felt her juices oozing down over her puckered orifice as he climax squeezed the heavy shaft entering and leaving her body in a constant barrage of thrusts. Henri was breathing heavier, she felt him widen and she knew he was close but still trusted in him to stop and enter her as she wished before he came.\n\nHe had to.\n\n**\n\nHenri's balls were tight, he thought about just letting his climax come, letting the spell be cast and Mary's spark extinguished without taking her in the forbidden way. He knew even then, as the Master, Mentual would destroy her regardless, but possibly not in such a painful way. He was about to go through with it until Mary opened her eyes and pleaded with him for her last wish. Looking down at her face, Henri relented, pulling his cock free of her tight sex with his cock on the verge of climax. It was coated in her secretions, thick womanly juices covered the whole of his shaft and had pooled around her tight orifice below her open sex.\n\nHe kneeled up and she raised her legs to give him access to her forbidden hole. Placing the tip of his cock at the puckered entrance, he felt her push out as if she had been taught by the witches themselves.\n\n\"Don't be afraid, my king. Please do this for me,\" she whispered.\n\nHenri moved forward, his eyes rolled upward as his head fell back in rapture as her tight ring pitched the head of his cock. She was as tight as Serena and Yvonne had been the first time he took them. He felt Mary's ring scrap the juices off his cock as his head popped in and like a vise her muscles clamped down on his shaft. She whimpered. He paused and suddenly Yvonne began to speak.\n\n**\n\nThe four witches witnessed Henri's large cock penetrate the tight orifice of the doomed bar maid. Serena felt Henri's pleasure jump, reading his mind and feeling his struggle. His honor was unmatched and Serena new if there was any other way to save his nation, Henri would take it to save this one woman's life.\n\nIt was time. The spell had begun. Serena timed Yvonne's first words perfectly; they were already working a one.\n\n**\n\nHenri's balls ached for release; his cock throbbed and pulsed against its confines, full of blood and desire. He knew how close he was and somehow the four witches did as well. Moving forward again, he pressed a few more inches into Mary as she rapidly began playing with her clitoris. Her chest rising and falling briskly and she softly panted and whimpered as more of his massive shaft descended into her hot bowels.\n\nAs the strange words left Yvonne's lips, he felt a heat around his cock and soon realized the Ring was becoming hot. Looking down, he saw runes magically appearing on the gold as each word was spoken by Yvonne. His cock was fully engaged inside Mary's tight ass. Her muscles struggled to accept him. He felt her pulsing and clenching on his shaft as the runes continued to be cut in the gold. Pulling back, he watched his cock leave her body, scrapped clean of her juices by the tight connection between their bodies. The Ring increased in temperature, his pleasure grew along with it.\n\nPressing in once again he was on the verge and Mary was shaking with her hand a blur on her clit and her eyes tightly shut. He wanted her to climax before he did, to die amid her ultimate pleasure. He concentrated, holding his orgasm from coming for a few more thrusts. Yvonne never paused in her casting of the spell. Somehow they knew what he was doing and had timed everything perfectly.\n\nMoments later, Mary screamed in pleasure and Henri felt her ass grab tight to his shaft as her climax flooded her body as well as her sex. Juices flowed heavily from her open orifice to meet his moving shaft. He could no longer withhold his climax.\n\nJust as his muscles gave up and his first burst of hot semen sprayed from his cock, Yvonne pronounced the last word and the Ring clamped tight around Henri's shaft. He felt the familiar power rush through his body as his climax continued. His body began to grow; it was much slower than he remembered as the newly formed Ring manipulated him for the first time. He watched his cock began to increase inside Mary's ass, expanding in girth to stretch her to impossible dimensions. His pleasure was still immense as his cock continued to spurt loads into her bowels.\n\nAt the last moment, Henri pulled his cock free and the last five ropes of semen sprayed Mary's convulsing body, drenching her in the Master's plentiful semen. For a moment he thought he had saved her life by withdrawing before Mentula was fully enlarged. The blue glow from the Ring told him he was mistaken. Slowly, Mary began to fall still, the Ring blazing hot around his fully enlarged cock as he had grown to monster proportions and was now standing over the small table and the four witches with glowing rings in their hands. He watched Mary's spark leave her forever just as Yvonne placed her ring onto her enlarged clitoris. Heather was next, and then Arianna and finally Serena placed her ring.\n\nLight exploded from their bodies as the spell was finished and the link was bound. Mary's body lay still on the alter and a tear fell from Henri's eye.\n\nThe Master and the Ring were reborn."
    ],
    "authorname": "jasliz",
    "tags": [
        "romance",
        "novella",
        "anal sex",
        "anal"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-master-and-the-ring-ch-10"
}