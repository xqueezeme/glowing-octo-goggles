{
    "title": "Redemption of an Idiot",
    "pages": [
        "You may recognize some of the characters in this story from my previously published 'Hearth and Home', as this could loosely be called a sequel.\n\nAll characters engaging in sexual activity are over the age of 18.\n\n*****\n\nI couldn't breathe. It felt like this great weight was sitting on my chest, and I didn't know how to get it off. I felt helpless...suffocating...\n\n\"You okay?\" the pretty blonde next to me murmured sleepily as she slid a hand over my bare bicep. \n\nFuck... Petra... I didn't want her here. Not now. \n\nSomehow, I found my voice, \"I -- I need...\" Dragging in a breath, with my phone still clutched in a death grip, I muttered. \"I need you to leave...\"\n\nPetra jerked back her hand as though she'd been burned. \"What...?\"\n\n\"Just go...\" I growled, needing to be alone.\n\nI tried to ignore my \"sometimes\" girlfriend as she stalked about the room muttering under her breath and gathering her clothing. I didn't say anything, just lay on my back, one forearm across my eyes as tears leaked out the corners. Shari...Shari...Shari...\n\nWhen the front door finally slammed shut, I gave in. Gave in to the pressure, the pain, the fear, and allowed great racking sobs to shake my body. Oh God... what would life be like without Shari?\n\n*****\n\nAt one time, I would have described my sister's life as a \"train-wreck\". She liked to party -- a lot -- and our relationship tended towards the volatile whenever I tried to keep her out of trouble. Boring, was what she called me back then, but in my mind that was better than being too wild. Still, we loved each other -- there was no denying that.\n\nMy heart broke when she told me she was pregnant. She had no idea who the father was -- some pretty crazy parties in recent months apparently, and I'd felt completely powerless as she cried in my arms. Stupid, reckless kid... I should have protected her better! Wasn't that the job of an older brother?\n\nThere was no question in my mind what she should do -- she wasn't prepared to have a child -- didn't even have her own life close to figured out yet. But she wasn't going to listen to me -- when had she ever? Luckily, this time she was right.\n\nIt had been six months since I had last seen my nephew, and I wished it was under better circumstances. Instead, it was at the hospital morgue in Kansas City, the day after Shari's death. When had this boy grown up? I wondered as the tall, gangly, sixteen-year-old allowed himself to be pulled into a bear hug. \n\n\"Good to see you Jamie,\" I mumbled, squeezing the boy tightly, trying to keep the tears at bay. As devastated as I was, I knew only too well what it was like to lose a parent at a young age, and above all else, Jamie needed to know that he wasn't alone in the world. He still had his Uncle John -- and I wasn't going anywhere!\n\n*****\n\nShari and I had been raised in a suburb of Kansas City. Our mom had been a nurse before she had kids, but quit in order to raise us, as women often did in those days. Dad was a construction foreman -- a friendly, likeable guy who loved his family, baseball, and beer, but not always in that order. When I was thirteen, he had a massive coronary at work one day, leaving our family in shock. \n\nBasketball saved me back then. Taller than average, I was recruited to play on the Junior High basketball team, and it became a much-needed outlet for unexpressed emotion. \"Boys don't cry,\" my dad had once told me. \"You work out those feelings on the field...\" Or the court, in my case.\n\nAs I started to fill out in my teenage years, I discovered that not only did basketball help me deal with the shit in my life, but it also attracted girls. Never overly shy to begin with, I learned that being quick with a smile and a compliment meant I would rarely lack female companionship when I wanted it. And how many teenage boys wouldn't like that?\n\nSo maybe that's what Jamie needed now -- activity -- something to focus on other than the fact his mother was gone and I had forced him to move to a strange city. No one likes Dallas in the summer, so I could understand that part, but I really needed the kid to do something other than sit in his room, with his headphones on, playing on his phone. It had been eight weeks, after all. Time to start getting it together...\n\n\"I was thinking of heading to the rec center after dinner tonight,\" I began nonchalantly. \"Maybe shoot some hoops or something... Want to come?\"\n\nJamie tossed his over-long hair out of his eyes as he raised his head, \"Mmmm... I'm not really any good at basketball...\"\n\n\"We could work on some skills then,\" I tried to salvage the offer. \n\nThe response was less than enthusiastic, \"Uh... It's not really my thing...\"\n\nShame on me for assuming that every tall boy wanted to be a basketball player. I tried again, \"So, what sports are you into?\"\n\nJamie shook his head, \"Yeah... not really any... but,\" the kid threw me a bone, \"Maybe we could just lift some weights or something. I could stand to bulk up a bit...\"\n\nNow that was the understatement of the year, and I grinned, feeling like I'd claimed a major victory. We were going to do something together that wasn't the weekly trip to the therapist!\n\nI'd pretty much been a shitty uncle -- shitty brother too, truth be known. Seeing my sister and her kid three or four times a year when I went home to visit mom? Less than that after she passed away ten years ago? Hardly enough to sustain a real relationship -- or ever really build one with Jamie. And when the reality sunk in that I was going to be the boy's guardian, I realized I barely knew him.\n\nBonding over free weights, I started the conversation about school. \"So, I'm thinking next week we need to get you registered for classes. What courses will you be looking at?\"\n\n\"You know... Math, English, Science - whatever I have to take here...\" \n\n\"What about electives, or extra-curriculars? Any thoughts on those?\"\n\nJamie shrugged coolly, but there was something in his voice that sounded a lot like hope, \"Do you think we might find a school that has an orchestra?\"\n\nOrchestra? Damn -- of course orchestra! How could I have forgotten? \"Sure, we can do that.\" Internally, I was scrambling, but somehow managed to sound casual, \"What instrument do you play again?\"\n\n\"Cello,\" he grunted as he attempted to curl the weight I had just set down. \"I don't have my own instrument though -- I borrowed one from my last school...\"\n\nIt was the first time I had heard my nephew sound even remotely interested in anything since his mother's death, and I was willing to do just about anything to give the kid some joy in his life right now. \"Well, I'm sure we can work something out...\"\n\n*****\n\nThe Orchestra Director at Lakeview High School was very cordial over the phone. She described the school's orchestra program and explained that Jamie would need to audition for placement into the best orchestra for his skill level. She told me she'd email me the audition music and recommended a few different places to check on instrument rentals.\n\nOver lunch with my two closest friends, I updated them on the latest. \"Do you guys have any idea how expensive cellos are? I was thinking I'd just go buy him one instead of renting, but when I saw the prices I almost choked!\"\n\nNick Stavros chuckled and clapped me on the shoulder, \"Welcome to parenthood. Or so I hear...\"\n\n\"Come on John,\" Nick's fianc\u00e9e Martie teased, \"You've got stacks of money! Buy the kid a fricking cello!\"\n\n\"I already did,\" I replied defensively. \"I'm just saying that instruments cost a ton...\" \n\nAfter a moment, Nick asked seriously, \"How's it been going with you two?\"\n\nThe sense of panic that periodically swept through me flashed across my face, \"I don't know what the fuck I'm doing, to be honest. Thank God he's a good kid...\"\n\nMartie placed a comforting hand on my forearm, \"You're a smart guy, John. I know you'll figure this out...\"\n\nI smiled bravely, \"Right...the good news is that Shari did all the hard work -- he's practically grown -- we just need to get through the last two years of high school without him flunking out, getting arrested or impregnating anyone. Then it's off to college...\"\n\nNick laughed, \"You're not setting the bar very high, are you?\"\n\n\"See? This is exactly what I'm talking about!\" I muttered, rolling my eyes. \"What do I know about parenting?\"\n\n\"John -- maybe you need to talk to Jamie's therapist. See what suggestions he has for you...\" Martie offered sweetly. Then she winked, \"Can't have you screwing the kid up permanently, now can we?\"\n\n\"That's my worst fear,\" I confessed. \"I haven't really been able to focus on anything else all summer...\" \n\nSmiling, Nick raised his glass towards me, \"You're doing great. Don't let anyone tell you otherwise.\"\n\nRight... \n\nSwitching the subject, Martie announced, \"Petra called me the other day, asking about you...\"\n\nA sick feeling settled in the pit of my stomach, and I could not suppress a groan. \"Ugh...\"\n\nEver my conscience when it came to women, she continued, \"Ugh is right. You didn't end that one very well...\"\n\n\"Martie -- women are about the last thing on my mind right now,\" I replied honestly. \"How can I even think about dating with everything that's going on?\"\n\n\"That's probably wise,\" Nick chimed in supportively. \"You can bring Jamie as your plus one to our wedding...\"\n\nIt wasn't a terrible idea. \n\n*****\n\nI didn't exactly know what Jamie did all day while I was at work, but I began to suspect that there was a lot of cello involved. Evidently, the kid had gone on YouTube, watched videos of Lakeview's varsity orchestra and was determined to make it into that group. Even to my untutored ear, I could hear the improvement from day to day, and was thrilled to see him so engaged.\n\nThe morning of his audition, I was a little concerned when Jamie rejected the idea of breakfast. For a growing teenage boy, he didn't usually eat a lot, but today of all days he should eat something, right? \n\n\"Trust me Uncle John,\" he replied quite seriously when pressed, \"I've had a lot of auditions over the years and it's better this way...\"\n\nHe'd had a lot of auditions? The kid was only 16 -- how many auditions could he possibly have had? But I didn't ask that question, just nodded and trusted that Jamie probably knew what he was talking about. I guessed that skipping one breakfast wouldn't kill him anyway.\n\nIt was Monday, the week before school began, and the front office of Lakeview High was a hive of activity. A bouncy teenage girl escorted us to the orchestra room and tried to chat Jamie up a bit on the way. He wasn't exactly cooperative. She managed to extract that he was a junior from Kansas City who played the cello, and little else. I was sure I saw relief on her face when she left us at the director's office.\n\nI wasn't sure what I'd been expecting, but it wasn't a stunning blonde in faded jeans and a t-shirt proudly claiming that she was an \"Orch Dork for Life.\" Weren't teachers supposed to be older? Maybe just a little plainer?\n\nHer eyes flitted over the two of us before she extended her hand towards her prospective student, \"I'm Ms. Caldwell. You must be Jamie.\"\n\nHe nodded, \"Yes. Hi.\"\n\nShe turned to me next and I shook her hand, \"John Crawford. Nice to meet you. Thanks for taking the time to see us.\"\n\nShe smiled warmly, her gaze going back to Jamie. \"No problem. I always feel for transfer students -- they don't get as much time with the audition music,\" she finished sympathetically. Then, all business, she gestured to a couch in one corner of the room, \"Mr. Crawford, why don't you make yourself comfortable while Jamie and I get started?\"\n\nEffectively dismissed, I got settled and pulled out my phone to check email while Jamie uncased his instrument. I could hear the teacher asking questions about his previous experience, and it was obvious from Jamie's answers that he was no novice. When he finally started playing, I closed my eyes and listened. After hearing the music for 8 days now, I knew it almost by heart and I followed along in my head, hoping Jamie wasn't as nervous as I was.\n\n\"That was very nice Jamie. Excellent job!\" Ms. Caldwell proclaimed when he was finished. \"You are definitely at the level of our Symphonic Orchestra -- that's the varsity group -- but before I can put you in that class, we need to talk about what kind of commitment you would be making.\" She paused and looked over at me. \"Mr. Crawford, could you join us please?\"\n\nThe next ten minutes were spent discussing sectionals, extra rehearsals, UIL eligibility, private lessons and volunteer hours. The longer the conversation went on, the more convinced I became that Jamie needed a car. Not that I wouldn't do whatever it took to get him where he needed to be when he needed to be there, but it would be a lot more convenient if the kid had his own wheels.\n\nAfter we left the orchestra room, we headed for the counseling office to officially register Jamie for classes, now that we knew which music section he'd be in. Upon seeing his transcript, the counselor immediately suggested AP classes, and I just sat back and let Jamie do the talking. In a way, I felt my presence was unnecessary -- but that was a good thing, right? That the boy was confident enough and smart enough to discuss his academic future intelligently? Where basketball had been my salvation, once upon a time, perhaps school would be Jamie's.\n\nI broached the subject of a car over dinner that night, and Jamie's eyes lit up. \"No -- seriously?\"\n\n\"Sure,\" I shrugged. \"I mean, you're going to need one with all these extra rehearsals and everything. You do have a license, right?\"\n\n\"Yeah...\" And as if he needed to prove it, Jamie pulled out his wallet and passed the card to me. \n\nHe looked about 12 in the photo, and a little too much like Shari around the eyes. I could hardly bear to look at it. \"Okay, good,\" I handed the card back quickly. \"Lots to do then -- we need to get you a Texas license, get you added to my insurance policy, then we can go car shopping. Sound good?\"\n\nA tiny part of me wondered if I was trying to buy Jamie's affection. First the cello, now a car? But it seemed to be working. I hadn't seen my nephew this animated since...well, since before everything happened...\n\n*****\n\nRawlings Group had been undeniably accommodating over the past few months, but I'd expected nothing less. It was one of the reasons I was still there after eleven years. A relatively small real-estate development firm, it was a company that believed in investing in its employees. Seven years earlier, it was the CFO who suggested I pursue my MBA at the company's expense, and I had repaid them many times over since then. Now, as VP of Asset Management, I was fortunate enough to have the flexibility to be out of the office when I needed to be, since most of my time was spent on email or conference calls which could be done from anywhere.\n\nI didn't see as much of Martie and Nick as I had in earlier years, when we were all coming up together, but I still managed to have lunch with one or both of them at least once a week. Things were different now that they were engaged, and it was hard to watch them sometimes. For a while, I thought it was because I'd always been half in love with Martie, but now I was pretty sure it was because the two of them had something together that I was not sure I'd ever have.\n\nMartie had lectured me more than once about the type of woman I chose to date -- and yes, there was a definite type: slender, leggy, well-dressed blondes in their twenties -- women who liked to have a good time and weren't necessarily in the market for a long-term relationship. To be honest, it was no wonder that I was still single at 39, particularly when I placed less importance on general compatibility than sexual chemistry. \n\nSince Jamie had come to live with me, however, it all seemed so pointless. How much time had I wasted just fucking around? What did I really have to show for all those years? Where was the substance in my life? Well, besides Jamie, and he hadn't exactly picked me. \n\nBut no matter that neither of us had chosen the situation -- that we both would have much rather had Shari back -- we were all each other had now. And with the start of school, we both had something to focus on, other than our loss. \n\n*****\n\nJamie seemed to love the independence that his new (well, used actually) vehicle gave him. He hauled the cello to and from school each day in the back of the small SUV and, from what I could tell, was a dedicated student. He wasn't very forthcoming when I would ask him how his day went. \"Fine,\" was the usual answer, although that wasn't surprising. What teenage boy ever gave any details about his school day? I know I never did.\n\nUltimately, I took him at his word, but kept my eyes open. And we kept seeing the therapist that I had found for Jamie shortly after relocating him to Dallas, although the visits were no longer weekly. Jamie seemed to like the guy, and I was glad he was talking to someone, even if it was someone other than me.\n\n\"Get involved,\" the therapist had advised me. \"Volunteer at the school. Talk to his teachers. Make sure they know what's going on with him, so that they can let you know if they see anything you should be concerned about.\" \n\n\"Seems kind of like asking them to spy on him,\" I had replied, not feeling entirely right about it.\n\n\"It takes a village,\" was the response. \"And you might miss some warning signs that they pick up on...\" \n\nAnd so it was, on the Monday after Labor Day, that I found myself attending the first orchestra booster club meeting of the year. My original plan had been to just write a decent-sized check to the organization so that I could opt-out of any fundraising obligations, but the therapist's words compelled me to do a little more. And I'd be lying if I said the prospect of seeing Ms. Caldwell again had nothing to do with my decision to attend.\n\nIt was an abysmal turn-out, in my mind. There were what? 150 kids in the orchestra program? And 11 parents show up to the meeting, including the board members? And then the president says something about how wonderful it was to have so many people show up? Sad...\n\nThe business of the meeting ranged from the membership drive and the planning for the Fall Picnic, to upcoming fundraising events. And then the meeting was turned over to Ms. Caldwell -- or Rachel, as she preferred to be called outside of school -- for the director's report.\n\nShe was undeniably pretty, I thought as she talked, even if she was a little outside my usual demographic. Maybe a bit serious, but it was hard to say given the circumstances. It was hardly a social gathering, after all. \n\nI had planned to try and catch her after the meeting -- to ask how Jamie was doing in class -- but was waylaid by a few of the board members, anxious to know who the new guy was. I felt like an imposter -- what did I know about being a parent -- about supporting a student organization? Nothing, that's what. \n\nBut the president, Ann Harding, was a difficult woman to say no to. She convinced me that they could really use my help at the Fall Picnic, manning the grill, and since I didn't have any other concrete plans on September 18, I agreed. After all, it was an opportunity to observe Jamie interacting with other students, and who knew what I might learn.\n\n*****\n\n\"She's beautiful, isn't she?\" Elena Russo asked, jolting me back to the reality that I was about to burn the burgers.\n\n\"Who?\" I replied lamely, in denial as much to myself as to my grilling partner.\n\n\"The lovely and talented Ms. Caldwell,\" she replied, with a twinkle in her eye. \"You are not the first to fall under her spell, believe me!\"\n\nI could feel warmth creeping into my cheeks, embarrassed at having been caught staring at the orchestra director. \"Ha! I am hardly under her spell...\"",
        "She patted my arm, still grinning. \"I'm teasing. Maybe just a tiny bit jealous, but I'll get over it!\"\n\nI looked at the woman next to me -- really looked at her -- for the first time. She was a tall brunette, about my age I'd guess, who obviously looked after herself and certainly had no reason to be jealous of Ms. Caldwell. I raised an eyebrow, \"You're hilarious, Elena...\"\n\nWe'd been working the grill together for over an hour already, and she was wearing me down. It was like her mission had been to chip through the cool professional armor I wore when dealing with strangers. And it was working. \n\nShe first got my attention when she mentioned that her son Dominic was Jamie's stand partner. And then she pointed him out -- a tall, good-looking kid who was tossing a bottle of water to my nephew. She chatted on about a myriad of things as we set up the grill, and I listened with half an ear, wondering how Jamie was really getting along with the other students. And then Ms. Caldwell wandered into my line of vision, and I was further distracted.\n\n\"So, how is it,\" I asked Elena, when the pace slowed a bit at our post, \"That there are so few parents here tonight?\"\n\nShe rolled her eyes skyward and shook her head. \"I can't really say -- I don't understand it myself. I know some of them work evenings -- or just work too hard in general and can't make the time to volunteer. And others don't think it's important, or don't think they have anything worth contributing...\"\n\n\"Huh...\" That last one sounded a bit like me. \"So, it's pretty much the board that does everything?\"\n\nShe shrugged, \"Pretty much. Except now and again, we have folks like you who step up...\" and then she flashed me a full-wattage smile that hit me straight in the solar plexus. \"Thanks again, by the way.\"\n\nI blinked for a moment, attempting to recover from the unexpected effects of that smile, and shook off the thanks. This? This kind of service was nothing -- a few hours of his time. A chance to meet some of the other parents and observe Jamie in a social setting. It was well worth my time.\n\n\"It's no problem...\" I replied. Maybe it was guilt -- or maybe that smile -- that had me adding, \"Anything I can do to help, just let me know...\"\n\n*****\n\nI was relieved to learn that Jamie was making friends. Dominic, apparently, was a fairly popular kid within the orchestra circle, and he began dragging his stand partner along to social gatherings of like-minded individuals. \n\n\"They're good kids...\" Elena assured me when I called her to find out if the boys were really going to volunteer at a soup kitchen. \"And it's going to look good on their college resumes...\"\n\n\"College resumes?\" That was a new one. \n\n\"Oh, hon...\" she crooned sympathetically. \"We need to get you up to speed...\" And she explained the highly competitive nature of today's high schools -- the importance of class rank, extracurriculars, leadership positions, and volunteer hours. \"It's not just about getting into their school of choice, but about scholarship money too. I mean, who has an extra $100K to spend on their kids' education?\"\n\nTechnically, Jamie had a bit more than that set aside for school, in the form of Shari's life insurance policy, but wouldn't it be better for him to save that money for the future than have to spend it all on university? \n\n\"Yeah, no kidding...\" I answered at last. \"I am starting to feel I've been a little laissez-faire with Jamie, when I should be a little more tiger-mom...\"\n\nElena laughed at that, \"I don't think you need to worry about him, John. From what Dominic says, he's driven enough as it is.\"\n\n\"Yeah...\" I could see that. \"If anything, he needs to relax more. Skip a class or two, get drunk under the bleachers...\"\n\nIt took her a second to realize that I was joking. \"Right, like I'm sure you used to do...\"\n\nWell, more like Shari used to do, but Jamie changed all that for her -- made her straighten up and get her shit together. Kids had a way of doing that.\n\nIt was not lost on me that my life had completely changed in the last five months. I'd thought I'd been doing fine -- things were going well at work, I was dating Petra, albeit very casually. But until Jamie came along, no one really needed me. I wasn't essential to anyone's existence. If I died, the mourners would be few and get over me pretty damn quickly.\n\nBut there was Jamie. And as smart, and talented, and together as the kid was, he needed me. I was beginning to see it more and more as the weeks crept by. He needed me to ask about his day -- invite him to the gym -- needle him about the pretty redhead I'd seen chatting him up that night we'd worked football concessions together. \n\nAnd he most definitely needed me to show up to his first orchestra concert. It was touch-and-go... a late meeting pushed a west-coast conference call into the early evening hours, and I found myself flying down the highway in an effort to get there in time. The resulting speeding ticket not only made me even later, but put me in a foul mood to boot.\n\nThe music had already started when I walked into the lobby of the Performing Arts Center, fifteen minutes late, and I cursed under my breath. Elena was working the door with Ann Harding -- keeping people from entering the auditorium while the orchestra was playing -- and she shook her head sympathetically upon hearing my tale. \"I'm sorry you got a ticket, but don't sweat it. You aren't missing anything yet...\"\n\nI was confused, because I could clearly hear music playing.\n\nShe explained, \"There are four orchestras, and when they do a concert they start with the least experienced and end with Symphonic. So, it'll probably be another half hour before he plays.\"\n\nI shook my head, grimacing ruefully, \"Now you tell me...\"\n\nI had yet to get used to her bone-melting smiles, so I wasn't quite prepared for the one she flashed me as she squeezed my arm, \"Sorry, hon...\"\n\nIt irritated the shit out of me that she affected me this way, and I grumbled to myself as I paced in front of the lobby windows, waiting for the first orchestra to finish playing. I liked Elena, sure. Had gotten to know her a bit better through the boys' friendship, but she was no Petra, or Holly, or any one of the last several women I'd dated. \n\nOf course, maybe that was the point.\n\nI glanced over at her, chatting casually with Ann, and I softened. It wasn't her fault. She'd been nothing but kind to me, and certainly had no way of knowing that I hadn't been laid in almost six months and I was feeling extra susceptible. Nope, not her fault at all.\n\nAt long last, the doors opened, and as I passed through them, I forced myself to smile and nod at Elena. Not her fault...I reminded myself again.\n\nThe auditorium was large, and only about two-thirds filled. As I made my way up the stairs towards the upper level, I caught sight of Jamie sitting in the far-right section with what had to be his orchestra. The teen was laughing with the girl sitting next to him about something, and I smiled to myself. \n\nThat was the important thing -- that Jamie was happy and he was somehow able to move on.\n\n*****\n\nMy heart was lodged in my throat. Tears smarted at the corner of my eyes as the orchestra played the most beautiful, plaintive piece of music I'd ever heard. And there was Jamie -- sitting second chair next to Dominic. These were high school kids? Unbelievable! \n\nBefore their final piece, Ms. Caldwell addressed the audience. Ah yes, the lovely Ms. Caldwell. I reminded myself that I was supposed to be worshipping at the feet of that unattainable goddess instead of letting my gaze wander to where Elena Russo sat, one section to the right and four rows down. \n\nThe director smiled serenely at the audience and thanked everyone for coming. She then proceeded to recognize the students who, the previous weekend, had auditioned and been selected for the Region Orchestra. The students had worked so hard, and the support of their families meant so much... Nine kids stood when they were announced and, much to my surprise, Jamie was among them. So much for my nephew keeping me in the loop! \n\nIf only Shari were here, I thought as my chest swelled with pride, to see her son's success! Although maybe she was, in spirit anyway...\n\nAfter the concert, the lobby was a zoo. The audience was enjoying cookies and punch, thanks to the booster club, while they waited on their respective students to join them. \n\nAs she handed me a glass of lemonade from her station behind the refreshment table, Elena smiled, \"Congratulations John! Jamie did very well tonight!\"\n\n\"Thank you - so did Dominic!\" and I raised my glass to salute her. Then, leaning towards her across the table, I asked confidentially, \"Does it always feel this weird to accept congratulations on their success?\"\n\nShe nodded, \"Always...\" Then, with another brilliant smile, \"You'll just have to get used to it, I'm thinking.\"\n\nJust like I was going to have to get used to that smile -- because it wasn't a special one, reserved just for me. No, I noticed she flashed that thing around at everyone...\n\n\"By the way, did Jamie tell you about Homecoming?\"\n\nIt was the first I'd heard of it. \"Uh...no...\" \n\n\"Ah...\" she bit her lip, as though regretting she'd brought the subject up. \"Maybe you should ask him about it...\"\n\nWhen I finally saw my nephew, I wasn't sure whether I wanted to hug him or strangle him for being so close-mouthed. I went with a hug. \"Great job tonight, Jamie! I'm so proud of you!\"\n\nThe boys' cheeks were pink when I released him, \"Thanks Uncle John. Thanks for coming...\"\n\n\"Like I would miss it?\" \n\nJamie shrugged, a trifle hesitantly, \"Well, I wasn't too sure...\"\n\nYep, I was a shit uncle, that's for damn sure, if the kid didn't have confidence I'd even show up! \"Well, count on it from now on, okay?\"\n\n\"Okay...\"\n\n\"You feel up for a bite to eat?\" I asked, wanting to celebrate and remembering I hadn't had time for dinner.\n\n\"Well...it's sort of a tradition, I guess, for all the Symphonic kids to go out to IHOP after the concert, so I kind of wanted to go with them...\"\n\n\"Oh...okay then.\" Disappointed, but determined not to let it show, I asked, \"You need some money?\"\n\n\"Nah...I'm good. Thanks -- I'll see you at home later...\"\n\nAs I watched Jamie navigate his way through the crowd, I reflected on what a freaking roller coaster this night had been. Anxiety, frustration, lust, anger, melancholy, joy, pride, disappointment -- what emotion hadn't I felt in the past two hours? I was bloody exhausted!\n\nWas this parenthood?\n\n*****\n\n\"We have to do what?\"\n\nJamie had divulged the Homecoming news -- that he had asked Ava to the dance -- and then sprung it on me that he had to give her a mum. I had a faint recollection of this being a tradition in Texas -- maybe I'd seen it in the news or something, but it was just a big corsage, right?\n\n\"Can't you just go to a florist and order one?\" I asked, pulling out my wallet and extracting a credit card.\n\n\"Well...\" the boy hesitated, \"I mean, I guess we could, but it's like kind of a thing to make it yourself...\"\n\nI raised an eyebrow, \"Seriously? You're telling me that high school boys are sitting around with ribbons and flowers MAKING their dates mums? No way...\"\n\nShifting his weight from one foot to the other, Jamie was clearly uncomfortable. \"Not exactly...I mean, mostly their moms do it. But the guys kind of tell them what the girl likes so it can be personalized...\"\n\nJesus Christ...the mom card... \"Ah, I see. Makes more sense now...\"\n\n\"Ms. Russo offered to do it for me, since -- you know -- mom...\" Jamie' voice trailed off.\n\n\"I'll call her,\" I promised. \"We'll figure it out for you -- just get me a list of whatever Ava's into, okay?\"\n\nAnd so it was that I found myself spending the following Saturday afternoon with Elena, making mums for the boys. I had swallowed my pride and accepted the offered help, letting go of whatever misguided machismo dictated that men did not craft. \n\nAfter an hour at Hobby Lobby picking up supplies, I felt more than a little intimidated. \"It's gonna be great,\" Elena reassured me, when I confessed my fear of fucking this all up royally as we unloaded my car. \"We're gonna make the most gorgeous mums these girls have ever seen, and Dominic and Jamie are going to be the most grateful teenage boys!\"\n\nI raised an eyebrow sardonically. \"Really...?\"\n\nShe smiled, and I felt it down to my toes. \"Positive mental attitude, baby. Plus, I've done this before and I'm pretty awesome with a glue gun.\" Making the \"guns up\" gesture with her right hand, she winked at me and I had to laugh.\n\n\"I am counting on it!\"\n\nThe Russo home was not large, by any means, but Elena's clean, minimalist furnishings and d\u00e9cor made it feel as though there was room to breathe. \"You've got a nice place,\" I offered, glancing out at the tiny back yard.\n\n\"Thanks,\" she replied, cracking open a bottle of wine, even though it was barely 2:00pm. \"It's big enough for the two of us -- and small enough to deter wild, teen parties...\"\n\nI smiled knowingly, accepting a glass from her. \"With any luck, anyway...\"\n\nShe was a good teacher. When I said as much, she claimed it was part of the job training -- that she ran a pre-school and so was used to working with antsy little boys. \"If I can make them sit down and focus, a big, smart boy like you is hardly even a challenge...\"\n\nI laughed at that. Was she flirting with me? God, I hoped so! \n\nTalking with her was easy, I found. She had this way of making me feel like hers was a safe space -- like it was okay for me not to have all the answers because, honestly, who did? The merlot helped, and over the course of the afternoon, I found myself spilling the whole story about Shari. \n\nIt was getting easier to talk about my sister now. My voice didn't tremble, and tears didn't gather in my eyes anymore, but I still felt that hollow ache in my gut. Would it ever go away? Did I want it to? Somehow, the pain kept her memory present...\n\nElena had stopped working on her mum while I talked, as if sensing the pain behind my words. When I'd finished, she reached across the table and squeezed my forearm tenderly. \"I am so sorry, John. I can only imagine how hard it's been for both of you...\"\n\nHer voice was kind, and soft, and I knew I could not stay strong if I looked at her. So, I shrugged and fixed my attention on securing the next ribbon. \"Thank you. We're okay...I mean, mostly. We'll get there...\"\n\n\"I know you will. And please let me know if there's anything I can do to help...\"\n\nI nodded automatically, my eyes never lifting from the mum, ready for the conversation to move on to another topic.\n\n\"...I know everyone says it, but I mean it.\" There was a pause, and then she flicked my knuckle lightly to get my attention, \"Hey!\"\n\nSurprised, I looked up this time, and I could see the sincerity in her eyes as she insisted, \"I mean it! You'd better call me...\"\n\nIt sounded like something Martie would say, and I smiled half-heartedly. \"I will. But mostly because I think you'll kick my ass if I don't...\"\n\nShe laughed then. \"I will...\"\n\n*****\n\nI had never thought of myself as a perfectionist before, but I was learning all kinds of things that day. Like symmetry can be boring, Elena has good taste in wine, and I fucking hate hot glue guns.\n\n\"Shit!\" I cursed under my breath, burning my finger for the millionth time. I raised my hands defensively when she opened her mouth to suggest I run it under cold water. \"I know, I know...\"\n\n\"We're almost done,\" she murmured encouragingly a few minutes later, splitting open another piece of her rapidly dwindling aloe vera plant to slather the cool gel on my finger. \"Yours is looking really good!\"\n\nIt did look good, thanks to her endless guidance. \n\nWith her attention focused on my injury, I took the opportunity to study her. She was tall -- maybe 5'10\" -- and I liked that. I had a thing for long legs and could well imagine hers tangled with mine as I threaded my fingers through her sable locks and tasted those full, rosy lips. That would be okay, right? A fitting 'thank you' for the first aid? \n\nUmm...no.\n\nMy voice sounded a little strangled when I finally said, \"You are a saint, Elena. A fucking saint...\"\n\nShe laughed at that, and when her face lit up, it was all I could do not to kiss her right then. \"I am pretty sure 'fucking' is not an appropriate way to describe a saint...\"\n\n\"True...\" I admitted as she stepped away. \"I am probably going to hell for that.\"\n\n\"That's entirely possible,\" she agreed, steering me back towards the dining room table. \"Although I have a sneaking suspicion that cussing is the least of your transgressions.\"\n\nOh no -- I did not want to start counting sins -- because I was pretty sure lust was on that list, and I was still trying to calm myself down from my fantasies in the kitchen a few moments earlier. \"Yup...definitely going to hell...\"\n\nThe finished product was huge. Three mums grouped together with dozens of blue and silver ribbons, teddy bears, hearts and music notes. And even though Elena had offered instruction along the way, I did all the physical work. It wasn't perfect, but it was pretty impressive, if I did say so myself.\n\n\"He's gonna love it,\" Elena predicted, hanging it next to the one she'd made.\n\n\"If he knows what's good for him, he will,\" I muttered, standing back beside her to survey our handiwork. \"I think that next year, the guys need to make their own mums. Because I guarantee you there is no way they will express the appropriate amount of gratitude for what we have just done...\"\n\nElena laughed at that, and turned towards me, \"Jamie is lucky to have you.\"\n\nThe sincerity in her voice gave me pause. \"I'm not so sure about that...\"\n\n\"Just trust me then. Not many men would do this when it's a lot easier to just buy something from a florist...or even the grocery store, for that matter... That's what most people do.\"\n\nI groaned, \"Really? I knew it!\"\n\nAfter patting my shoulder reassuringly, Elena smiled into my eyes, letting her fingers linger just a moment before removing her hand. \"But just think of all the skills you acquired today! And you got to spend some quality time with me -- what more could you possibly want?\"\n\nI felt pretty certain she didn't want me to answer that last question, however facetiously she'd posed it. Because right now she was at the very top of the 'what more could you possibly want' list. Her smile had caught my attention initially, but now I actually liked her. Her quick wit, affectionate nature, quirky sense of humor, the way she tried to take care of people (myself included) -- I wasn't sure I'd ever met anyone like her before, and it was a struggle to keep my hands to myself.\n\n\"I am not complaining...\" I assured her, keeping my tone light and resisting the urge to pull her against me. \"I have found my new mentor and parenting guru -- just don't forget that you're the one who said, 'Call me!' Because you know I will...\"\n\nShe sighed dramatically, \"Do you know how many hot, young men have promised they'll call me? And yet I still sit at home nights, waiting for the phone to ring...\"\n\nI grinned at her, \"There are just so many things wrong with that statement, I don't even know where to start...\"\n\n\"Like what?\" she teased. \"Is it the 'hot' thing? Because you probably have a mirror at home, so you can't possibly dispute that. And I'm pretty sure you're younger than me, so it can't be that...\"\n\nI couldn't say, \"Because you're fucking gorgeous,\" could I? I settled for another truth, \"Like I can't imagine you sitting at home waiting by the phone. You strike me as someone who would go out and get what she wanted...\"\n\nHer eyes lit up and she laughed, \"You think you know me so well!\" \n\nI hadn't heard her phone ping, but she suddenly pulled it out of the back pocket of her jeans and reported, \"Rehearsal just ended and the boys are on their way.\" ",
        "Ah yes, the boys. Jamie. The only reason I had ever met Elena in the first place. The reason why it would be an excellent idea to keep it in my pants, cool my jets, take a cold shower. \n\nWhat was it I'd said to Martie and Nick not too long ago? That I needed to focus on getting things settled comfortably with Jamie before I could even think about dating, that's what. And, at the moment, things felt far from comfortable.\n\n*****\n\nJamie and Dominic loved the mums -- and were sure their dates would too. \n\nWithout any idea whether my nephew had any dating experience, and recalling the kind of activities I had gotten up to when I was younger, I felt compelled to broach the subject of 'safe sex' a few days before Homecoming. And I had been effectively stonewalled.\n\n\"I've got it...you don't need to worry about this...\" Jamie scowled. \"My mom talked to me, like, a million times about it...\"\n\nOf course she did. She wouldn't want his life derailed like hers had been. But that didn't mean he couldn't use a little practical assistance.\n\n\"Okay, awesome. We don't need to talk about it then. I'm just saying that there is a box of condoms in my bathroom cupboard, and you can just help yourself if you ever need to...\" In retrospect, it might have sounded a little like I was a philanderer, enabling -- if not encouraging -- my nephew to follow in my footsteps. \n\nNot my intention.\n\n\"...And if you ever need to talk, or whatever, I'm here...\" I finished up, wondering if that salvaged anything.\n\n\"Okay...got it.\" Jamie' cheeks were flushed as he insisted, \"Ava's not even my girlfriend, so you don't have anything to worry about anyway...\"\n\nI nodded, \"Okay...\" trying to remember back to when I was that innocent. When I thought someone had to be my 'girlfriend' to sleep with her. When it took forever to get up the courage to move from kissing to touching. \n\nI'd been...well, I'd been right around Jamie's age...\n\nThe plan was for the boys to go to the dance with a group of friends -- four couples in all. Of course, pre-dance photos were a must and all the parents and kids gathered at a local park beforehand. Jamie had gone over to the Russos' to dress for the dance, and I wouldn't have known anything about the photo shoot if Elena hadn't texted me.\n\nAs I took pictures with the rest of the families, it was difficult to enjoy the moment. I had to admit that Jamie's oversight hurt, just a little. I'd been trying to give him all the space he needed, trying to be cool about everything. Had he taken that to mean that I didn't care? \n\nAll of the girls looked way too grown up -- short skirts, lots of makeup, high heels -- and I felt better about forcing my earlier conversation with Jamie. I hoped to hell the boy had put a condom or two in his pocket, just in case.\n\nMy wool-gathering was interrupted when Elena asked me if I would take a picture of her with Dominic. As the two of them stood together, almost the same height, I was once again struck by her beauty. She was dressed casually -- blue jeans encased those long, long legs, a maroon top skimmed her curves invitingly, and her dark hair framed her face perfectly. With her arm around her son, she flashed that brilliant smile and I almost forgot to breathe.\n\nWas it only a few weeks earlier that I had thought she wasn't in the same league as Petra? What was I thinking?\n\n\"Now, you and Jamie...\" Elena insisted, pulling her phone out. Then, as we passed each other, she murmured an explanation, \"You all need a family photo.\"\n\nA lump suddenly formed in my throat, and I nodded, beckoning Jamie to join me. \"You look good,\" I smiled, fist-bumping him. \n\n\"Thanks for the tie.\" Jamie smoothed down the one he'd borrowed from my closet and adjusted his lapels. \n\n\"Alright, you guys,\" Elena called. \"Act like you like each other!\"\n\nAt that, I slung my arm around my nephew, smiled obediently, and then muttered, \"Love ya, kid!\" before releasing him.\n\n\"I know,\" Jamie replied quietly, then turned to give me a hug. \"Thanks for coming to this. I didn't think you'd want to...\"\n\nIt was a struggle for me to keep my voice even, and I was glad the boy couldn't see my face. \"You're my family. I don't want to miss anything...\"\n\n*****\n\nAs the kids pulled out of the parking lot, and the rest of the parents headed towards their vehicles, I hung back a moment so that I could have a word with Elena.\n\n\"Thanks for letting me know about this. I would have hated to miss it...\" I said, falling into step beside her.\n\n\"I figured as much.\" She paused for a second, glancing sideways at me, \"I hope you don't mind, but I kind of took Jamie to task over neglecting to tell you...\"\n\nThe thought made me smile. Maybe that's what the kid needed -- a motherly kick in the pants, even if it wasn't from his own mom. \"I don't mind -- thanks, in fact.\"\n\n\"No problem -- I've got your back,\" she smiled and winked, looping her arm through mine casually as we walked.\n\nI grinned, patting her hand, \"Thank God!\"\n\nWhen we reached her car, I asked \"So...any big plans tonight? You know, kid's away so mom will play?\"\n\n\"Well, this mom doesn't really play all that much, so tonight I'm planning to be truly decadent...\" she replied with a sparkle in her eye.\n\nIt was crazy -- a little sickening, in fact -- how badly I needed to know what true decadence looked like to this woman. \"And what would that entail?\" \n\n\"Oh, well, it probably sounds stupid to you, but I'm going to order dinner in -- from MY favorite restaurant, not Dominic's. And then I am going to be completely lazy, stretch out on the couch with a glass of wine, put my feet up and watch whatever I want to watch on TV.\" Then, as though she thought this all might sound silly, she added, \"Because believe me, this NEVER happens...\"\n\nI laughed, \"Sounds amazing!\" \n\n\"How about you? Hot date?\" she asked.\n\n\"Ah, no. It's been awhile since I've had one of those...\" I confessed ruefully.\n\n\"I hear you! Well, I'm not all that hot, but you are welcome to join me for dinner and Netflix at my place, if you like... Keeping in mind, of course, that I still get to pick what we're eating and watching...\"\n\nThe invitation was delivered nonchalantly enough, but my stomach flipped all the same. \"I don't know... you're pretty damn hot, Elena!\"\n\nShe blushed and smacked me in the shoulder, \"Shut up! Now are you coming, or not?\"\n\nI reluctantly dragged my mind out of the gutter at her choice of words, and nodded, \"Yeah. Thanks, sounds great!\"\n\nLadies' choice dictated Thai food, and binge-watching Outlander. When I admitted to never having seen the show, Elena insisted upon starting from the beginning of the series, so I wouldn't be lost. Honestly, I didn't really care what we watched, as long as I got to be in the same room as her.\n\nIf I thought too hard about it, I might start to think I was falling for her...\n\nWhile waiting on the food to arrive, Elena busied herself by unloading the dishwasher while I stood by and watched, sipping on a beer. When she reached to set something on the top shelf of a cabinet, I instinctively moved to assist, a little embarrassed when I realized she didn't need my help.\n\n\"I see you're used to dealing with darling, petite females instead of one almost as gargantuan as you are...\" she teased.\n\nThere was something in the way she delivered that sentence that made my heart contract. \"Gargantuan? Hardly.\" I took a step closer and rested my hand on top of her head. \"You barely come to my nose...\" and I glided that hand down her silky locks to her ear and tweaked it in an effort to keep things light. \"And you're cute as a button...\"\n\nI could swear she wasn't breathing, and her eyes held mine for a long moment. \"You are trouble, mister,\" she finally replied, pushing lightly at my chest. \"And completely full of shit. The last time I was 'cute as a button' I was four...\"\n\nI laughed, and took a step back from her, \"Perhaps I should have said 'elegant'...\"\n\nElena rolled her eyes and shook her head. 'Please...\"\n\nShe was saved from further compliments by the ringing of the doorbell, and then we set about the mouth-watering task of dishing up the meal and preparing to be either entertained or bored to tears, I wasn't sure which.\n\nEpisode one started out pretty damn slow. I was glad that the food was good and that there were 5 more beers in the fridge with my name on them. True to plan, Elena's legs were stretched out in front of her, sock feet resting on the ottoman. Not waiting for an invitation, I kicked my shoes off and set my feet up next to hers. She leaned one of her feet towards mine companionably and whispered, \"Sorry, it takes a little bit for this to get exciting. But it does, believe me...\"\n\nAnd then, hello, a little sex scene. Not all that graphic, but it got my attention. And then not too long afterwards, again -- this time with the man burying his face between his wife's thighs before the scene changed.\n\nIt took a will of iron, and thinking about the meanest, ugliest teacher I'd had in school when I was a kid, to keep my body from responding in the way it wanted to.\n\nI had just about regained my composure when the couple was at it again. Lots of skin this time as the bodies strained against each other and Mr. Randall fucked the hell out of his wife. They were not doing anything as genteel as making love, no -- that would be too much to ask.\n\nJesus Christ! Elena had no mercy, whatsoever. \n\nLucky for her, she chose to keep her eyes focused straight ahead and any comments to herself. I started wondering if I could do this -- could watch this show with her and not touch her. I had to remind myself that I wasn't a randy teenager -- that I was an adult, not controlled by physical desire, and perfectly capable of tamping down my baser instincts for the sake of friendship.\n\nThe internal lecture continued until, suddenly, the show actually got interesting. The heroine just went back in time 200 years and she was being chased by redcoats? Hmmm... \n\nAs the credits rolled at the end of the episode, Elena stretched and stood up, \"Want another beer?\" \n\n\"Yeah, thanks...\" I replied, following her into the kitchen. \n\nAs she reached into the fridge for my beer and her wine, she asked, \"So, what do you think?\"\n\n\"I like it -- it's interesting thinking about what life might have been like back in the 1700's. And there's definitely plenty of action!\"\n\n\"Right!\" her eyes sparkled. \"It's got something for everyone -- history, romance, intrigue, action...\"\n\nI leaned back against the counter, twisting the cap off the bottle I was holding, \"I was worried there for a bit at the beginning. I thought it was pretty much just porn for ladies...\" \n\nHer cheeks flushed, and she laughed, \"Sorry...I forgot about that part -- should have warned you.\"\n\n\"It's cool...\" I shrugged, proud of myself that I was able to act like it was, indeed, cool. \"Nothing I haven't seen before...\"\n\nNow why did I say that? For God's sake, I sounded like a creep!\n\nShe raised an eyebrow and grinned at me, \"Really? Well, am I wrong in thinking that the director knew what he was doing? I mean, not only are those scenes very hot, but tastefully done.\"\n\nWhen I thought about it, she was right. It wasn't overtly sexual -- other than some flashes of breast, leg and ass, you didn't see all that much. It was the suggestion -- the sensual slide of skin against skin, the strain on his face, the mixture of bliss and carnal pleasure on hers... \n\nChrist! Not again...\n\n\"Totally,\" I agreed, hoping my voice conveyed the casual detachment I was going for.\n\nElena's phone pinged and she glanced at it, flushing as she did. \"Oh my God -- I cannot believe I am standing here discussing the quality and steaminess of sex scenes with you! I can only imagine what you think of me now!\"\n\nIf she only knew. \"I think you're real,\" I assured her. \"Honest emotions and a healthy interest in sex. What's not to like about that?\" I grinned.\n\n\"Spoken like a man...\" she laughed self-consciously, still looking at her phone. Then, suddenly she was all business. \"I asked Dominic to check in with me periodically. He says everything's going well and they're all having a good time.\" She flashed the screen at me, showing a selfie Dominic had taken of the two boys and their dates.\n\n\"Good...\" I managed a smile, realizing that the update had effectively squashed the promising direction of our conversation, and reluctantly acknowledging that it was a good thing. Really, the last thing I needed to be doing was putting the moves on Elena. We were developing a real friendship, and sex would completely mess that up. Right?\n\nWe settled in to watch another episode. Thankfully, there was minimal nudity this time, and no sex so it was easier to concentrate on the story line and just relax. She had killed the lights in the room to enhance the viewing experience, and after asking if I minded her getting comfortable, Elena had moved to the end of the couch and curled up on her side, her feet tucked up against my thigh. \n\nWhy did that seem so intimate? I wondered, automatically patting the top of her foot to let her know this was okay. And it was. I just focused on relaxing, breathing, and immersing myself in 18th Century drama.\n\n*****\n\nThe second Saturday in November, Nick and Martie tied the knot. Nick had insisted that he did not want the traditional bachelor party debauchery, so the night before the wedding, the groomsmen settled for an evening at The Londoner -- drinking beer and playing darts. It had been ages since I had seen some of these guys, and to a certain degree I'd missed it.\n\nBut only a little. I felt I'd grown up so much in the months since that fateful day in May, that the concerns and interests of my old friends seemed almost adolescent. Sad that a man pushing 40 still had so much growing up to do. \n\nSince Nick had settled into his relationship with Martie, he'd changed too. And although he still made time here and there for his friends, she was his main focus, and the life they were building together. As it should be.\n\nIn my case, the life I was building felt all too temporary. Jamie and I were slowly becoming a family but, in less than two years, the kid would move on -- go to college, make his own way in the world. And I would be alone again. \n\nI did not do 'alone' well -- as evidenced by the succession of women in my life. What had Martie once told me? Something like, \"Stop being an asshole and a player and start looking for a nice, age-appropriate woman instead of the infants you normally date.\"\n\nIt was time. Long past time, really.\n\nThat thought was hammered home as I watched my two best friends marry one another Saturday evening. They obviously loved one another, and I had every belief that they would make it where so many others had failed. \n\nWas I capable of that? Of sustaining a committed relationship for 40 or 50 years? Maybe. Cheating had never been my problem -- instead it was boredom. But maybe with the right person, I wouldn't get bored...\n\nElena? She wasn't boring, that was for damn sure. Age-appropriate? Check. And I thought, perhaps, I was a little less asshole-like than I had been 6 months earlier. So maybe there was hope for me yet.\n\nI had ultimately gone to the wedding alone. Martie's suggestion of bringing Jamie as my plus one was met with zero enthusiasm by the teen, and I was hardly going to force him to come along. I briefly toyed with the idea of asking Elena to be my date but decided against it since my groomsman duties would leave her alone a lot of the time. No, if I went on a date with Elena, I wanted to spend time with her -- preferably alone, and in a setting more conducive to intimacy than this was.\n\nGoing alone did give me the unexpected opportunity to make amends with Petra, however. Since Martie's not-so-subtle reminder a few months earlier, of how shitty I'd been to her, it had weighed on my mind. The two women were friends. I would undoubtedly see Petra over the coming months and years, and the last thing I wanted was awkwardness and ill feelings between us.\n\nPetra, of course, had to extract her pound of flesh -- to let me know that I had acted unforgivably, and she would have been there for me had I allowed her to be. And then she went on to state that we really weren't right for each other anyway -- that the man meant for her would treat her like a queen and always put her first. I fought back a smile, remembering her special brand of narcissism, and said I sincerely hoped she got what she wanted.\n\nBefore returning to her friends, Petra kissed me goodbye -- the kind of kiss meant to make me realize what I'd lost in her. I'd be lying if I said it didn't stir me, but I knew that there was more to a relationship than sex. I knew what I'd be missing, and I was fine with that. \n\n\"It was fun while it lasted,\" she murmured. \"Good luck to you, John.\"\n\nAnd that was that. Apology accepted, apparently. I felt no regret, only relief.\n\n*****\n\nThe November orchestra booster club meeting took place the week before Thanksgiving. As the semester progressed, it became clear that the therapist knew what he was talking about when he suggested I get involved in school activities. In the past few months, the connections I'd made with other parents and teachers had opened my eyes to the challenges Jamie was facing and it seemed like every conversation was even more illuminating.\n\nDuring the meeting, Ms. Caldwell told the parents how hard the kids were working, and that they had been holding extra rehearsals for the students participating in the Region Orchestra concert which would take place in a few weeks. A few weeks? Seriously... \n\nI glanced across the circle of parents at Elena, and seeing the question on her face, shook my head almost imperceptibly. Later, in the parking lot, I vented my frustration. \"I don't get it! I am starting to think he really doesn't want me to show up...\"\n\nShe smiled sympathetically, touching my arm. \"Hon, if it makes you feel any better, most teenage boys are a little lax in sharing information. It takes a skilled interrogator,\" her lips widened into a grin, \"such as myself, to extract the pertinent details. And, of course, making sure you're connected to every social media group related to your kids' interests helps...\"\n\nTamping down the desire that surged in my gut at her smile, I pulled out my phone and handed it to her. \"Hook me up, please...\"\n\nShe laughed at that, wrapping her blanket sweater around her a little tighter, \"Sure... but get in my car while I do, it's starting to get chilly out here...\"\n\nIt wasn't really that cold outside -- maybe 55 degrees -- but there was a stiff breeze blowing, and it was definitely more comfortable inside the car. I liked the fact that Elena didn't seem to care what it might look like to the other parents still exiting the building -- it was one of her most attractive attributes, actually. Why let yourself be controlled by fear of what others might think?\n\nWhile she located and signed me up to follow the various groups she deemed important, she kept the conversation going. \"Jamie thinks a lot of you, you know...\"\n\n\"What makes you say that?\"\n\nShe shrugged. \"I guess it's mostly that I hear Dominic repeating things about you that Jamie has said -- good things...\"\n\n\"Huh... I am not sure what to think about that...\" Curiosity getting the better of me, I had to ask, \"What kind of things?\"\n\n\"Oh, I don't know...\" she glanced up. \"Like you took him rock climbing a few weeks ago and sailing last month. Cool stuff that most of their peers don't get to do...\"\n\nI had Nick and Martie to thank for inviting us sailing, but I could take some credit for the rock-climbing thing. We'd had fun together both times, so I guessed it wasn't surprising he'd mention it to his best friend.\n\n\"And, of course,\" she continued, the smile still on her face, \"You don't micro-manage the hell out of him...but I'm pretty sure that comment was a passive-aggressive dig at me...\" ",
        "I laughed. \"You? I can't see it!\"\n\n\"I know, right?\" \n\nShe handed the phone back to me and said seriously, \"I know it's been a rough time for both of you lately, but I see Jamie a lot at our house, and he seems to really be doing okay...\"\n\nI nodded in agreement. \"So okay that it scares me. I'm worried about next week. The first Thanksgiving without his mom is going to be brutal!\"\n\nHer voice was soft with concern, \"What are you guys doing? Do you have family you're going to be with?\"\n\nI shook my head. \"No family. Jamie and I are it.\" I exhaled, trying to stay positive as the memories of past Thanksgivings in Kansas City surfaced. It was the one time a year I always went home -- to my mom's for many years, and after she passed away, to Shari's. It was a big deal in my family, and I wasn't quite sure how to keep that tradition going now that it was just Jamie and me.\n\nSomehow, I kept his voice steady as I continued, \"I was kicking around the idea of flying up to Canada with him -- there's some great skiing in Banff, and maybe we could forget that it's a holiday...\"\n\n\"Sure...\" she replied slowly, reaching her hand out to squeeze mine. \"That sounds like fun... but, if you decide to stay in town, you are both welcome to come to our place. My brother and his family will be with us, but that's all, so a pretty small group. You know, if you feel like it...\"\n\nI swallowed the lump in my throat and opened my palm, allowing her to thread her fingers through mine in a silent gesture of support. \"Thank you...\" \n\nShe didn't respond for a moment, then declared, \"You're doing fine, John. You're doing fine...\"\n\nMy laugh felt raw and I squeezed her hand, perhaps a little too tightly. \"A lot of times it really doesn't feel like it!\"\n\n\"We're always our own worst critic.\" She released my fingers and patted my cheek gently, \"You, my friend, are doing a far better job than a lot of dads out there. Cut yourself some slack, okay?\"\n\nI wanted to hug her in the worst way - wanted to drag her into my arms and hold her tight against me as I buried my face in her hair. The comfort of her words, I was sure, was nothing to the comfort her body could provide.\n\nBut that's not what she was offering me, and I needed to remember that.\n\n*****\n\nLater that night, when I presented the options for Thanksgiving week to Jamie, there was really no contest. Skiing with strangers couldn't hold a candle to spending time with people who already liked him and welcomed him into their home as part of the family. I couldn't say that I was surprised, or even disappointed -- I felt much the same way the few times I had been at the Russos'.\n\nJamie was determined that he was going to make Shari's famous sweet potato pie -- from scratch, without any help. He said he had made it with his mom every year growing up -- that it was one of their traditions, so what could I say to that? I bought a pie pan and rolling pin, and everything else Jamie said he'd need, and then got the hell out of the way.\n\nThanksgiving Day dawned sunny and crisp, and we showed up at the Russos' bearing an amazing looking pie (2nd attempt,) some multi-grain rolls from my favorite bakery, and four bottles of wine. Maybe it was too much wine, but better too many bottles than too few, I figured.\n\nDominic met us at the doorway and ushered us inside, telling Jamie to take the pie to the dining room directing me towards the kitchen. On my way, I met Tony Giordano, Elena's brother, who had a tiny infant tucked against him in a football hold.\n\n\"Hey, you must be John,\" the man held out his free hand. \"I'm Tony -- good to meet you!\"\n\nHis grip was strong, and his smile genuine, and I relaxed a little. \"Good to meet you too. And who's this little one?\"\n\nTony adjusted his hold on the baby and flipped him over so I could see the cherubic face. \"This is Danny. He's a sadistic little thing...only sleeps when mom and dad have to be awake...\"\n\nI laughed, \"Sorry, man! Good thing he's a cute kid then, huh?\"\n\n\"Hey...\" Elena emerged from the kitchen, wiping her hands on a towel before coming forward to give me a hug and kiss on the cheek. \"I see you've met my little brother...\" \n\n\"Little...?\" Tony scoffed, standing up straighter. He was maybe two or three inches taller than his sister -- probably a bit over six feet. No, Tony was hardly little.\n\n\"Younger then,\" she amended, lightly elbowing him in the gut. \n\nGod, she looked good today! Her cheeks were rosy, her dark eyes sparkling, and her smile magnetic. I had never been one at a loss for words around women, but somehow, I couldn't find my voice with Elena -- could never manage to say what I really wanted to. Then again, with Tony standing right there, it was probably a good thing. \n\nElena relieved me of the two bottles of white wine in the bag, angling the labels so she could read them. \"Oooh...this is the good stuff! Angel and I MIGHT save some for the meal...\" \n\nAt the sound of her name, a petite brunette poked her head out of the kitchen, \"Hi John -- I'm Angel!\"\n\nI smiled and nodded, \"Hi,\" as she looped her arm through her sister-in-law's.\n\n\"Hmmm...\" Angel playfully raked her eyes over my form from top to bottom. \"You were not kidding, Elena. He is some first-rate eye candy...\"\n\n\"Ahem...\" Tony interrupted, smacking his wayward wife on the butt. Then to me, \"Can't take this woman anywhere...\"\n\n\"Okay, okay,\" Elena interrupted, her face flaming. \"We're about half an hour away from eating. Can you guys check on the kids and make sure everything's good? Angel and I have everything under control in the kitchen...\"\n\nWe found Jamie and Dominic in the back yard, giving piggy back rides to two dark-haired little girls. \"Three-year-old twins...\" Tony explained. \"And boy, are they crazy about Dominic...\"\n\nThe girls shrieked with laughter as the teens decided to race one another over to where we stood on the patio. Tony issued orders like Elena, I observed. \"We're gonna eat in about 30 minutes -- around noon -- so make sure you and the girls get all washed up before then, okay?\"\n\n\"You got it, Uncle Tony,\" Dominic replied, before taking off across the yard once more.\n\nI watched a moment more -- watched as Jamie laughed, flipping his rider over his shoulder in a death-defying move before tickling the child and releasing her.\n\nYeah, this was way better than skiing.\n\n*****\n\nWhen we all sat down together to eat, it got a bit crazy. Angel was a little firecracker who kept the boys completely entertained, simultaneously managing to keep her daughters corralled and eating their dinner. At the other end of the table, Elena and Tony kept up a lively banter, telling old stories and trading half-hearted insults as only siblings can do. \n\nI could see it in Jamie's eyes -- he wished he was part of this family. I didn't blame him. The food was delicious, the wine mellow, and the company memorable. I couldn't recall the last time I'd enjoyed a meal more.\n\nThe Giordano family, Elena included, felt that watching football on Thanksgiving was almost sacrilegious. It was a holiday for spending time with family and friends, not watching TV. I had never heard of such a thing, but couldn't fault the reasoning.\n\nAnd when small children were around, family time was understandably interrupted by nap time. By two-thirty, the house was silent. Tony and Angel were putting the girls down for naps -- and supposedly taking one themselves, Elena was rocking Danny in the living room, and the teens had gone to meet up with some friends at a nearby park. It left me alone for the moment, in the kitchen, finishing up the last of the pots and pans. \n\nI didn't mind. It was peaceful and gave me a chance to think. As usual these days, my mind drifted to Elena.\n\nShe liked me -- I was almost positive. And I sure as hell thought a lot of her -- and not just her long legs and bone-melting smile. Something about her spoke to me -- made me feel like I could do this thing with Jamie, that I was an essential part of this kid's future and not just a temporary one.\n\nI was so wrapped up in my thoughts, that I didn't notice Elena's presence until she touched my back.\n\n\"Thanks for doing the dishes...\" she smiled, picking up a dish towel to help. \"There is nothing sexier than a man who does housework...\"\n\nI laughed, \"Why am I just now hearing about this?\" I set the last pot on the drying rack and started feeling around in the dishwater for any stray utensils.\n\n\"I don't know...\" she grinned.\n\n\"So, all those hours in the gym, working on the six-pack abs, totally wasted...?\"\n\nShe raised an interested eyebrow, \"You have six-pack abs?\"\n\n\"Not quite,\" I admitted. \"I can never seem to cut out enough carbs.\"\n\nShaking her head, she commiserated, \"Me either... Like Jamie's pie? I could not resist!\"\n\n\"My mom's recipe,\" I explained. \"Passed down to Shari, and then to Jamie. The kid is a freakin' perfectionist though. Threw away the first one because the crust wasn't flaky enough...\"\n\n\"Well, it was delicious! Shari -- and your mom -- would both be very proud,\" she declared.\n\n\"I am sure they would be...\" I replied, pulling the plug to let out the water in the sink. Determined not to let my thoughts turn gloomy, I dried my hands on the nearest towel and turned to her, \"Now, enough about Jamie...what did you think of the rolls I slaved over?\"\n\nAnd there it was, that beatific smile that lit up her face. \"Ah-maze-ing...\"\n\n\"That good, huh?\"\n\n\"Yep...\" she replied as she finished putting a platter in the cupboard. \"It's almost like you're a professional baker...\"\n\n\"Pretty hot, right?\" I teased. \"Right up there with doing dishes?\"\n\nHer grin spread even wider as she turned to me and patted my stomach, \"And six-pack abs...\"\n\nMy fingers closed over one of her elbows, \"Ah, I knew it! You women are all the same...\"\n\n\"Yes, we are...\" her hand moved to pinch my cheek affectionately, \"We want a guy who looks good on our arm, but knows his real place is in the kitchen...\"\n\nPart of me wanted to laugh -- wanted to keep joking and flirting with her -- but the other part was tired of playing games. So there we stood for a moment, our bodies almost touching, electricity all but crackling around us. Her cheek was like satin beneath my fingers, and I murmured, \"Okay then, as long as you admit it...\" \n\nI'd half expected her to push me away before my mouth brushed hers, but she did not. Her lips were sweet, and intoxicating, and I felt myself drawn in deeper than I'd have thought possible. The kiss stretched on, tenderness morphing into heat and urgency as I wrapped one arm around her, holding her tightly against me. \n\nAnd then, with her hands cupping my face, she pulled away, but just barely. \"John,\" she murmured breathlessly, her dark eyes meeting my blue ones, \"This is probably a bad idea...\"\n\n\"I don't think so...\" I asserted, hoping that I was right and relaxing my hold on her ever so slightly. \"I am pretty sure this is the best damn idea I have had in years...\"\n\nElena pressed her lips to mine again, fleetingly, still not stepping back out of my embrace. \"You are forgetting about our boys...\"\n\nNo, I wasn't. In fact, I'd repeatedly used them as an excuse to keep my distance. \n\n\"And...\" she kissed me again, softer and longer this time. \"I can't forget about Dominic, as tempting as you are...\" she finished, a touch of regret in her voice.\n\nSo, she was tempted. That was a good sign. \"Just pretend, for the next little bit,\" I coaxed, \"That you're no one's mom...or sister...or aunt...\"\n\nShe snickered at that, \"Right...\"\n\nI tilted her head to one side and kissed her just below her ear, \"And just be Elena...\" \n\nShe sighed, sagging against me. \"What are you doing?\"\n\nI didn't answer, my tongue otherwise occupied as it traced the shell of her ear, eliciting a shiver of delight. \"God...\"\n\nAnother good sign. Her earlobe was next, and when I drew it into my mouth, I palmed her breast at the same time. She was so soft and so responsive that I thought I was going to come unglued when she gasped in pleasure, arching against me.\n\n\"You are the devil...\" she whispered, when I stroked her aching nipple with the pad of my thumb, and I couldn't help but chuckle.\n\n\"What's a little sin among friends?\" I deliberately plucked that tortured peak, noting the flare of desire in her eyes. \n\n\"I can't decide whether I love you or hate you right now...\" she groaned. Then, as if realizing how that might be interpreted, she opened her mouth to clarify and was silenced by another kiss.\n\nThis one was hotter, wetter, and a good deal more serious than the first one. Elena tasted of wine, and spice, and I set about the delicious task of devouring her lips. I wanted far more than I could reasonably expect in a kitchen where anyone could walk in at any time, but I satisfied myself with a handful of her lovely ass and some very promising grinding.\n\n\"Jesus, John!\" she gasped, coming up for air and wrapping her legs around my hips as I backed her into the fridge door. \"You...Lord...\" her voice trailed off as I rocked my hips against her.\n\nGod, it felt good. She felt good -- so right -- and my befuddled mind started scrambling to work out logistics. Could we? Where? Would she?\n\nAnd then the sound of the front door opening had us flying apart.\n\n\"Hey mom!\" Dominic's voice drifted into the kitchen as Elena hurriedly straightened her blouse and combed her fingers through her hair. \n\n\"Yeah?\" her voice was amazingly calm as she replied, stepping into the dining room where she could see the front door. I, wisely, stayed in the kitchen.\n\nAlong with Dominic and Jamie, there were three teens standing in the entry, and Dominic wanted to know if it was okay for them to come inside and play some games. Her mom hat firmly back in place, Elena smiled graciously, \"Of course! As long as you can keep the noise to a minimum, because it's still nap time.\"\n\nWilling my body to relax, I busied myself with putting the rest of the silverware away while Elena chatted with the kids, asking how each of the newcomers' Thanksgiving had been so far. Jamie came in to get some sodas from the fridge and grinned at me.\n\n\"Still working?\"\n\nI nodded, \"You act like you've never seen me do dishes before...\" \n\nJamie's smile was genuine, \"Seems like you usually make me do them.\"\n\nIt was true -- dishes were one of the chores assigned to the teen. \"Well, I hope you're enjoying your day off.\"\n\n\"I am.\" The kid clapped one hand my shoulder, \"I am glad we didn't go skiing...\"\n\nI smiled, meeting my nephew's eyes. \"Me too.\"\n\nJust then, I remembered Shari. Except for fleeting moments here and there, I hadn't thought of her all day. I hoped Jamie was managing to do the same. Not that I wanted either of us to forget, but I was finally ready for the ache to go away.\n\nThat was progress, right?\n\nBy the time I was done putting away everything I could find a place for, Tony had surfaced. \"Hey man, you play any basketball?\"\n\n\"Yeah...\"\n\n\"Wanna shoot some hoops out back?\"\n\nGod, yes! A little physical exertion was exactly what I needed to fully divert my attention from the fact that Elena was so close, yet so unavailable.\n\nTony found a ball in the garage, and soon we were working hard enough in the driveway to forget the chill in the air. He was good, and I had to really hustle to keep up. \n\nAfter we'd been at it awhile, he tossed out a nonchalant, \"So...you have a thing for my sister...\" as he began a drive for the basket. \n\nThe question took me off guard, and I stumbled backward a bit as the younger man made contact with my shoulder. \"Is it that obvious?\" I asked, retrieving the sunk shot and tossing the ball back to my opponent.\n\n\"Well, to Angel and me, yeah. The kids -- probably not,\" Tony conceded. \"You know how most teens are...too wrapped up in their own worlds to notice what's going on in the lives of adults.\"\n\nWell, that was a small mercy. \"I guess I need to work on my game face...\"\n\nTony laughed, \"Or you could just ask her out.\"\n\nI didn't say anything to that, and focused on trying to steal the ball, certain that whatever I might say would reveal a little too much. Out-maneuvered once again, I settled on, \"Think she'd go?\"\n\n\"Maybe...\" Tony huffed, out of breath. \"I mean, she doesn't fuck around, so if that's all you're after you'd better move right along...\"\n\nThat's not all I was after, but before I had a chance to reassure him, we heard the back door opening and we shut down that line of conversation. Elena's voice drifted over the fence, informing her brother that Angel needed him. With a sardonic eyebrow lift, Tony flipped the ball to me, \"Duty calls, man...\"\n\nI stayed out on the driveway a few minutes longer, shooting some baskets and trying to sort some things out in my head. What did I want? I wasn't entirely sure...\n\nJamie and I left the Russos' around six with Dominic in tow. I had tried, more than once, to get Elena alone, but she was having none of it. The closest I got to having a conversation with her was when we were leaving and she said, \"We should talk. I'll call you tomorrow.\"\n\nAs impersonally as it was delivered, it still sounded ominous. \n\nI had been dreading going home this early with just Jamie. I knew him well enough to know that he wasn't going to want to sit around and shoot the breeze with me, and he certainly wasn't going to want to talk about his mom -- although we probably needed to. After all of the day's activity, you would think I'd look forward to a little peace and quiet. Instead, I could see the evening stretching before us -- uncomfortable and endless. So, it was a huge relief when the boys approached me with their plan to have Dominic spend the night.\n\nMy living room sported a 65\" TV, and it wasn't long before the kids were in front of it, playing video games, laughing and generally making a lot of noise. I puttered around in the kitchen a little bit before settling down at the dining room table with my laptop to do some work.\n\nI needed to focus on something other than Elena, or Shari, or the fact that I was once again lonely, without ever being alone.\n\n*****\n\nBlack Friday dawned, cool and rainy. That was fine with me, because the last thing I intended to do was brave the crowds in search of the best deals. Instead, I was planning to go to the gym, pay some bills, and catch up on work. \n\nI had known that kissing Elena was risky, and I was second-guessing the hell out of that decision as I put some miles on the treadmill. There was every possibility that I would be held at arms' length from this point forward, every possibility that I had fucked it all up beyond repair.\n\nBut I didn't think that I had imagined her response to me. If she didn't feel something towards me, she wouldn't have kissed me back like that. Right?\n\nThe boys were just getting up when I returned to the apartment and by the time I'd showered and set up camp at the dining room table, they were starting to fix some breakfast. Dominic, definitely the more talkative of the two, brought up the subject of Christmas.\n\n\"So, when are you guys going to put up your tree?\"\n\n\"I don't know...\" replied Jamie and looked over at me. \"What do you think, Uncle John?\"\n\nTo be honest, it wasn't even on my radar. It had been more than fifteen years since I'd had a Christmas tree, never having seen the need for one when I lived alone. And the few times I'd co-habited with a woman were so short-lived they never spanned the holidays. A sad commentary on my life, to be sure.\n\n\"I don't know...\" I hedged. \"What's typical?\"\n\nAt the same time, Dominic and Jamie both said, \"This weekend...\"\n\nOf course it was this weekend! Well, I couldn't pretend that I just had to get it all out of storage -- time to come clean. \"We're going to have to buy a tree -- well, everything really. I haven't had a tree in years.\"\n\n\"Call my mom,\" Dominic advised. \"She can hook you up. She knows where to buy everything...\"",
        "I smiled at the faith the boy had in his mother, although in this case, even I could figure out where to buy a Christmas Tree and decorations. My mailbox was filled with flyers from retailers selling those very items. \n\nWhen I asked if the boys wanted to come shopping with me, they looked at each other and then at me like I was insane. Before I could stop him, Dominic was on the phone with Elena, informing her of my plan. Then he handed the phone to me.\n\n\"Hey...\"\n\n\"Hey yourself,\" she greeted. \"So...you're going out to find a tree?\"\n\n\"Yep. Apparently, I need to have one this weekend...\" The mock-glare that I tossed in the boys' direction was totally lost on them.\n\n\"Want some company?\"\n\nDespite the fact that I really did not need help, the idea of spending time with Elena was enough to make me swallow my pride and say, \"Yes.\"\n\nWhen I showed up at her house an hour later, she asked me in so we could make a game plan. She looked really good, and when I told her as much, her color rose and she pushed at my shoulder, \"Seriously John -- I'm wearing a T-shirt and jeans...\"\n\nI leaned forward with one hand on her waist and pressed a kiss to her cheek, murmuring, \"Ah, but it's the way you fill them out...\"\n\nHer laugh was shaky as she leaned into me slightly, \"You are distracting me... Quit it...\"\n\nAnd so I did, for the time being. We focused on the flyers spread out on her dining room table and discussed what I'd need and the best places to shop. Fifteen minutes later, we were on our way.\n\nElena knew of a home decor store that, with any luck, would be one-stop shopping. It was a fifteen-minute drive from her place, and in the car, she kept the conversation going. \n\n\"So, Tony asked me for your number... It seems he liked playing basketball with you and wanted to reach out,\" she explained.\n\nThat was surprising, \"Really? Huh...\"\n\n\"At first I thought it was a ploy -- that he'd want to act like a protective brother and everything -- but I didn't get that vibe from him,\" she assured me.\n\nShe probably didn't want to hear that Tony had encouraged me to ask her out. \"No, that's cool. I liked playing ball with him too. Feel free to give him my number, if you want.\"\n\n\"Thanks. I think Tony could use a friend, actually. He and Angel moved down here from Chicago last year, and since then it's mostly been about getting settled in the new job, the new house and the babies. Not a lot of time to make friends.\" Then, as if she realized how she might sound, she clarified, \"No pressure though -- you guys don't ever even have to get together, let alone be friends...\"\n\nI laughed, and reached over to squeeze her hand, \"Got it, no pressure.\"\n\nShe seemed to relax then, and leaned her head back against the seat, \"Thanks.\"\n\nWhen we got to the store, I almost turned around. The parking lot was a madhouse, and I could only imagine that inside would be worse. But Elena smiled reassuringly as we entered the doors and took my hand, \"Don't worry, it'll be fine. Just stick with me.\"\n\nAnd it was fine -- sort of. She snagged us a cart and maneuvered through the crowded aisles like a seasoned professional. Before too long, I had chosen a pre-lit tree and a tree skirt. When it came to the ornaments, I hesitated.\n\nI knew that somewhere in storage there was a container with all of Shari's ornaments -- most likely several with sentimental value to Jamie. We had never gone through it -- in fact, we hadn't touched anything in storage since I'd moved him to Dallas. I wasn't sure if I should even bring it up this year, or just pretend that container didn't exist, and I asked Elena her opinion.\n\nHer eyes softened, and she slid a supportive arm around my waist right there in the store. \"Hon -- you guys need to talk about it, and soon. Holidays can be hard enough after you lose someone close, and I'll bet it will make him feel more at home to have some of those ornaments hanging on the tree.\"\n\nShe was right, of course. If I asked Jamie's therapist, he would undoubtedly agree. I rested my chin against her temple for a moment, and then exhaled, \"Okay, then this should be easy. Let's just grab a couple of these basic ornament packs, and that should do it...\"\n\n\"You sure?\"\n\n\"Yep,\" I replied, ruthlessly shoving all emotion aside, and reaching for a 24-pack of assorted balls.\n\nElena looked wistfully at the huge display of individual ornaments before us, and asked, \"Do you think you could go get in line to check out? I just want to look for a little bit.\"\n\nShe didn't have to ask me twice. I somehow found the front of the store and queued up at the end of an extremely long line. With nothing to do but wait, I pulled out my phone and opened up Facebook. I hardly ever went on there, but I had a bunch of notifications so I thought I'd better check them out. \n\nLakeview Orchestra posts. Lakeview PTA posts. Lakeview junior class posts. DISD posts. Hmmm...Elena's work from last week, no doubt. But it was interesting to see what was going on, especially since Jamie was reluctant to share -- although, in his defense, he probably wasn't aware of half of this stuff.\n\nAnd then, there was Elena's name on my feed. Somehow, we were already friends -- she must have done that too. I smiled and clicked into her profile. God, she was gorgeous...\n\nI was still snooping through her page when she nudged my elbow with hers. \"Hey...\"\n\nFrom each one of her fingers dangled an ornament, and her expression was an interesting mix of triumph and guilt. \"I just found a few more things for my tree -- sorry it took so long.\"\n\nSlipping my phone back into my pocket, I reached out to help her place her items in the cart. It hadn't taken that long, but the line had moved quite a bit. When I said as much, she smiled, \"They have all fifteen check out stations open. I'll bet we're out of here in twenty minutes.\"\n\n\"What's that saying?\" I asked, taking her hand in mine. \"From your lips to God's ears?\"\n\n*****\n\nMy earlier fears that I had messed everything up with Elena seemed to be unfounded. Of course, today I had done nothing more scandalous than hold her hand, but I was feeling hopeful all the same. Why else would she go above and beyond -- not just helping with the shopping, but also offering to help set up and decorate -- if she didn't want to spend time with me? \n\nIt was going on four p.m. when Elena and I got back to my place. Jamie and Dominic had texted a bit earlier to say they were meeting some friends at the mall and then going out to the movies later. I had no problem with that -- not if it meant I was actually alone with the object of my desire.\n\nAnd she was definitely that. As I watched her hip-check my sofa to move it over a few inches to make more room for the tree, I was amazed that I had ever found her less than breathtaking. Unlike pretty much every woman I'd dated in the past ten years, I didn't feel like she had an agenda. She was genuine and kind, two characteristics I hadn't thought of as essential -- until now. Was she perfect? No, but probably about as close as I was likely to find.\n\nWith some Christmas tunes playing in the background, and in between sips of hot chocolate (liberally laced with Bailey's), I found myself laughing more than I had in ages. Elena was full of stories as we worked, including one about the Christmas Eve when Tony had proposed to Angel in front of the whole family.\n\n\"I've never understood public proposals,\" I declared, reaching down from my perch on a stepstool to take an ornament from her. \"I would think that would be something you'd want to do in private...\"\n\n\"Well, it wasn't too much of a risk -- they'd been together four years already and he was pretty sure she was going to say yes,\" she explained.\n\n\"It's not just that. I mean, it's kind of a personal thing...doing it in public totally cuts out the possibility of, you know...immediate celebration...\" I raised one eyebrow suggestively.\n\nElena backhanded me on the thigh, laughing. \"Of course you'd think about sex -- you're a guy, after all!\"\n\n\"No, seriously, think about it. The man of your dreams has just asked you to marry him. You say yes, and you kiss him...and you want to stop there?\"\n\nI loved the way, when she tried not to smile, her eyes still crinkled up at the corners. \"You have a point, although it's a moot one -- with regards to me anyway.\"\n\n\"Really, why's that?\"\n\nHer fingers brushed mine as she handed me another ball. \"Because I don't plan to ever get married again.\"\n\nNow this was news -- and completely at odds with my previous take on her. \"Huh...\" I desperately wanted to know why, but wasn't about to ask. I knew little about her ex-husband, except that she was well rid of him. Fortunately, she took my silence as an invitation to explain.\n\n\"I just don't want to give up control of my life, you know? Right now, I have the freedom to do whatever I want, and I don't have to answer to anyone. It's... amazing, in so many ways...\"\n\nSure, yeah, I knew. I'd been exercising that freedom for a few decades now, and it was pretty great. Sometimes. \"So, you'll just kick back, play the field...\" I deduced, hoping for a little more detail.\n\n\"Ha! No, probably not,\" she replied as I stepped down off the stool. \"I'm not very good at 'casual.' I'm good at 'friends.'\"\n\nI was not stupid -- I understood what she was ever so subtly trying to communicate, but that didn't stop me from pressing my luck. Moving toward her, I took one of her hands in mine and said, with more confidence than I felt, \"I'm good at 'friends' too...\" and dipped my head to kiss her.\n\nThat she didn't push me away said something. Instead, she softened against me, her free hand sliding up my arm and across my shoulder before coming to rest against my jaw. The kiss was tender, and sweet -- as undemanding as I could make it -- and she was the one that turned it into something else. She was the one to increase the pressure, to involve tongues and to plaster her body against mine. \n\nNot that I was complaining. No, she was undeniably delicious.\n\nWhen she came up for air, she breathed, \"Why do I like you so much?\" as I began nibbling on her neck. \"It is really...ahhh...annoying...\"\n\n\"My insane good looks?\" I suggested helpfully, stroking one hand down her back and over her hip.\n\nShe choked on her laughter, \"Uh -- no...\"\n\n\"My magnetic personality?\" That same hand traveled back up her side, my thumb following the curve of her breast.\n\n\"Oh God...\" \n\nI wasn't sure if her reaction was a result of my words, or my errant thumb. \"Is that a no?\" I pulled back to look in her eyes, toying gently with her enticingly erect nipple.\n\nHer eyelids fluttered for a moment, before meeting my gaze, and I knew she liked this. \"Yes...\"\n\n\"Yes, that's a no, or yes, that's a yes?\" I teased, tightening the arm that was around her, my hand sliding lower to palm her ass.\n\n\"Uh...what was the question again?\" she asked, pressing against me, her lips brushing mine.\n\nElena was a study in contradictions. A dedicated mother, pre-school director and parent volunteer on the one hand, and, on the other, the porn-watching seductress currently climbing all over me. Okay, technically Outlander is not porn, but as to the rest of it? Yeah...\n\nSuddenly, she was pulling away from me, and reaching for her phone as it vibrated on the coffee table. Her cheeks were flushed and her voice was breathless as she answered, \"Hey Dominic. What's up?\"\n\nI was really beginning to hate the fact that Elena made her son call and check in with her so often. Jesus H. Christ! Give the kid some fucking room!\n\n*****\n\nBy the time she had hung up, I had composed myself, forgiven Dominic for calling and Elena for answering, gathered up all the empty boxes on the couch and taken them to the trash can. I was never really mad -- just horny and frustrated as hell. \n\nI say I forgave them, but I knew there was nothing for me to forgive. I'd been Jamie's guardian long enough to know that if he called, I needed to answer. What if his car had broken down, or he'd been in a wreck or was otherwise in trouble? \n\n\"I'm sorry about that...\" she grimaced, joining me in the kitchen where I was just about to pour myself a real drink. She took the bottle from my hand and examined the label, \"Huh...hitting the hard stuff already.\" Then, smiling ruefully, she admitted, \"I have been known to drive a man to drink before.\"\n\n\"I don't doubt it,\" I chuckled, taking the whiskey bottle back from her and proceeding with my original intention. \"Do you want one?\"\n\n\"No...I need to go home soon. Although I just remembered that you are my wheels...\" her voice trailed off as she watched me drain my glass. \"You know what, I can just call an Uber.\"\n\nI reached for her elbow, but she scooted out of the way, holding up one hand defensively. \"Don't, okay...\" Then, at the surprised look on my face, she clarified, \"Not that I don't really like you having your hands on me, but it makes it impossible for me to think...\"\n\nI could relate. The minute I started touching her -- kissing her -- the only thing I was thinking with was my dick. Not very rational...\n\n\"So, if you could just stay a few feet away from me,\" she continued, \"I think we might actually be able to have a conversation.\"\n\nI laughed at that, but hollowly. \"Okay, I can do that.\"\n\n\"Earlier, before...you know...\" she began, waving her arm in the vague direction of the living room, \"I had started to say that I think we should just stay friends, but now I'm not too sure that's realistic.\"\n\nShe was probably right about that.\n\n\"The thing is, I like you -- more than I've liked anyone in a long time. But I don't really see any point in us dating because I'm not looking for a serious relationship,\" she ended, her voice laced with regret.\n\nShe had no idea what a master I was at the non-serious relationship, but I really didn't want us to just be 'friends with benefits.' And her all-or-nothing approach to this whole thing had to be addressed. \n\n\"Elena, I think you're jumping way ahead here. I'm not asking you to marry me, or move in with me, or even date me exclusively. Can't we just spend some time together and see what happens?\"\n\nShaking her head, she replied, \"But I am pretty sure I know what's going to happen -- one of us, or maybe both, is going to end up with a broken heart. I don't want to do that to you, and I definitely don't want you to do that to me...\"\n\nSo she was scared... I could deal with that.\n\n\"And then there are the boys. You and Jamie are still figuring things out, and there's still so much to do to help Dominic prepare for college. I just don't know that the timing is right...\"\n\nI could speak to that objection too, though in retrospect, I should have kept my mouth shut. \"You know, I've been thinking about that. The kids are pretty damn smart -- and focused. I'll bet they'd rise to the challenge if we just gave them a little more space.\"\n\nShe didn't take that quite as well as I'd hoped and her back stiffened. \"What do you mean? Dominic has plenty of space. I'm hardly a helicopter mom.\"\n\nInstead of clarifying my comment, I did something colossally idiotic -- I raised an eyebrow in disbelief. \"How many times have you been in touch with him since he came over here last night -- less than 24 hours ago?\"\n\nHer jaw clenched, she shook her head. \"Fuck you, John. Seriously. I have been doing this a hell of a lot longer than you have...\"\n\n*****\n\nElena was still avoiding me when I saw her the following Saturday at the Region Orchestra concert. I had made several attempts to apologize -- both immediately after I acted like a dumbass and in the days following, but to no avail. \n\nTony and Angel were there, sans children, to support their nephew, and the former took me aside almost as soon as he saw me. \"Dude, you fucked up...\"\n\nMy shoulders sagged in defeat, \"I know...\"\n\n\"You called her a helicopter parent?\" he asked incredulously.\n\nI shook my head, \"Her words, not mine.\"\n\nI had expected Elena's family to rally behind her, but Tony was apparently in my corner, \"I told her you were right and she needs to relax, and then she got mad at me too. So, we're both in the doghouse.\"\n\nThat made me smile, for some reason, \"I appreciate it, man. But you didn't have to do that...\"\n\n\"Well, it's something that's been on my mind for a while now -- this just gave me an opportunity to say it.\" He put an arm around Angel, who had come up beside him. \"One good thing about Elena is that she doesn't stay mad for long. She's gonna forgive me pretty soon. You -- I'm not so sure about...\"\n\n\"Gee, thanks...\"\n\nAngel smile sympathetically and reached out to pat my arm, \"You obviously haven't dated many mothers. The cardinal rule is 'Don't poke the mama bear.' Like, seriously...\"\n\nShe wasn't joking, I could see that in her eyes. I nodded grimly, \"Got it. I just wish you'd told me that on Thanksgiving...\"\n\n\"Well, I didn't think you were that stupid...\" she smiled sweetly. \n\nTony told me they'd saved me a seat, but I was worried about hacking Elena off even more than she already was. He shook his head, \"Don't be a pussy, man. You gotta get back in there...\"\n\nThe dimming of the house lights put an end to the conversation, and I gave in, following the Giordanos to their seats. Angel told me where to sit, and I obeyed, more than a little nervous that the only empty seat in the row was the one at the end, right beside me. But it wasn't empty long, and when the students began filing on stage, Elena quietly slid in beside me.\n\n\"Hey,\" I whispered a greeting, trying to act like nothing was amiss, but knowing I was failing miserably.\n\nAt first her eyes were cool, but I could see them soften slightly as they searched my face, \"Hey...\"\n\nAnd then, the music began. I'll admit that I'm no classical music expert, but I was blown away. I had heard that the Dallas area was strong for fine arts, and I knew these were the most talented students in the region, but I hadn't expected this level of playing. These kids, who had started rehearsing together less than 24 hours ago, sounded incredible!\n\nI pushed all thoughts of the Elena drama to the side and focused on enjoying the performance and watching Jamie. He was ninth chair -- right on the edge of the stage -- and played with passion and focus. I had no illusions that any of this was my doing. I could only imagine how much Shari had sacrificed over the years to get Jamie to where he was now. The same kind of sacrifices that Elena was making every day with Dominic. \n\nWould my sister have been all over her son to make sure that he did what he was supposed to do and stayed out of trouble? Would she make him check in with her, like Elena did? Damn right she would. \n\nBefore Shari's death, I'd never really given much thought to what it took to raise a child. I guess I'd had this vague idea that one day I'd probably get married and have some kids, but I wasn't too worried about it. After all, raising kids was primarily the woman's job anyway, right? All I'd need to do was bring in the bucks, occasionally be the bad guy, and everything would work out.\n\nYeah, whatever. I'm an idiot. It's not 1955 anymore.\n\nI glanced over at Elena and caught her brushing a tear away, then wiping the moisture onto her pants. Maybe it was because I had a death wish, or perhaps because I had an idea of what she must be feeling, but I reached over to take her hand. She didn't look at me, but threaded her fingers through mine without hesitation, and squeezed.\n\nWhen the performance ended and we all rose to give the kids a well-deserved standing ovation, I reluctantly released her hand. But my heart soared when she leaned close to me and murmured in my ear, \"I'm sorry, John...\"\n\nI shook my head, knowing she had nothing to apologize for, and wrapped my arm around her shoulder to hold her close to my side. \"Me too...\"\n\nThe moment was short lived as the house lights came up, and Angel pushed past me to give Elena a hug. \"Oh my gosh, Dominic was AMAZING! Best one out there, by far!\" Then, remembering that I, too, had one out there, she tossed a, \"No offense,\" in my direction.",
        "I laughed at that, \"None taken,\" and reached over to shake Tony's proffered hand. \n\nHis voice was low as he asked, \"All good?\"\n\nI had no idea, so I shrugged, \"We'll see...\"\n\nAfter the concert, the parents of Lakeview High's concertmaster (and Region 2nd chair) were hosting a celebratory dinner at their home for the students and families, but with Elena and me at odds, I had not planned to attend. Jamie asked me to come, however -- said he didn't want to be the only kid there with no family, so how could I say no? And, now that Elena and I had at least formed a tentative truce, perhaps it wouldn't be so bad.\n\nThe Singhs' home was in a newer subdivision where the houses were large and impressive, if stacked a little too close to one another for my taste. I'd met Mrs. Singh at booster club meetings, and recognized several of the other parents from orchestra events. Meeting new people had never been an issue for me, so I applied myself to the task of working the room -- anything to keep my mind off Elena, whom I had yet to see.\n\nMs. Caldwell -- Rachel, if you will -- was present, and was also making the rounds. When she and I met, she was very complimentary. \"I can't tell you enough how impressed I am with Jamie. He is such a hard worker, and such a pleasure to have in class.\"\n\nI wasn't surprised to hear she thought he was a hard worker because I could see that myself. But I imagine every parent -- or guardian -- wonders how their kids come across in class. Are they attentive and engaged or anything but that? \"That's great to hear,\" I smiled. \"I know it's hard starting a new school, especially under the circumstances, and it's good to know he's doing well.\"\n\nHer smile was sympathetic, \"He is definitely doing that. If I didn't know his history, I never would have guessed he was new in town. I think it helped that Dominic and he hit it off right away.\"\n\nAh yes, Dominic. I owed that kid a lot. And his mother -- I owed her too. \n\nI was still talking to Rachel when the Singhs announced that dinner was ready, and I found myself sitting beside the teacher throughout the meal. I'd never had a conversation with her before that lasted more than about ten sentences, so it was interesting to get to know her a bit. She was fairly straight-laced -- I suppose she had to be around her students and their parents -- but had a dry wit that kept me, and the others seated nearby, laughing. \n\nI liked her. But she was definitely no Elena.\n\nAfter the meal, I caught sight of her once -- helping clean up the dishes in the kitchen -- and that was it. As the party was breaking up, I asked Dominic about her, and he shrugged, \"Uh, she left a little bit ago. Said she was tired...\"\n\nTired. Hmm. \n\nFor the first time in weeks, I found myself riding in a vehicle with my nephew. Dominic had picked him up earlier in the day to take him to rehearsal and then the concert, so I was his ride home. I was beginning to realize that there were pros and cons to his having a vehicle. The benefits were obvious -- most importantly, it was really convenient not to have to drive him everywhere. The down side? I didn't get much chance to talk to him when he had no escape route.\n\nSo, on the ride home, he was subjected to my ramblings about what a great concert it was and how proud I was of him. And then I told him all the nice things his director had said about him at the party and he brushed that aside.\n\n\"Of course she's happy,\" he replied indifferently. \"We make her look good!\"\n\n\"Yes, you do!\" I laughed. \"You even make me look good, and I can't legitimately take one bit of credit!\"\n\nJamie grinned, \"Sure you can. You bought me a sweet cello -- I probably wouldn't have made Region if I was playing a crappy-ass rental!\"\n\n\"True...\" I smiled.\n\n\"And, you pay for my private lessons...\"\n\n\"Also true.\" I was enjoying myself. \"But I think what you're saying is that I'm only useful until the money runs out...\"\n\nHis tone was light as he replied, and I thought this might possibly be the most fun we'd ever had in a conversation. \"Not true.\" And after a calculated pause, he asked, \"Is the money going to run out anytime soon...?\"\n\n\"I hope not!\"\n\nIt was late when we got home, and I debated whether to reach out to Elena. I had thought, for a moment, that everything might be okay with us, but when she avoided me all evening, I wasn't so sure. Maybe she really was tired. It was possible. I decided to let it lie, at least another day.\n\nSunday morning found Jamie and me digging through the storage unit, trying to find Christmas ornaments. It took a little while, and we ended up coming home with a few more things than just ornaments - like a big box of photo albums, and Shari's favorite quilt which found a home across the foot of Jamie's bed. \n\nIt was an emotional day, but necessary. Almost six months had passed since the accident, and we had each healed enough that we could talk about her -- about it -- without breaking down. That is not to say that no tears were shed, but we didn't let it stop us.\n\nJamie gave me the story behind most of the ornaments as we hung them on the tree. There was his infant footprint, the popsicle stick reindeer he'd made in second grade art class, the painted mountain scene they'd picked up on vacation in Colorado, the silver treble clef Shari got him one year -- before she realized that cellos play in the bass clef -- and the engraved angel they got the year my mom died. So many memories in that box, and we displayed every last one of them -- even the ones that embarrassed him -- like the awkward photo-ornament from the year he was twelve and had a full set of braces.\n\nIt was therapeutic, and I felt closer to him than ever before. And something about the moment we were in made it okay for me to share. So I did.\n\nSo many times over the past several months, I'd wanted to yell -- to cry -- to scream that I missed her too. That she was my baby sister, always the life of the party, the apple of our parents' eye, and who could help but love her? She never asked for anything -- instead, in more recent years, had a habit of checking in to see what she could do for me. She would give me a virtual hug or a kick in the ass, depending on my behavior, and I knew she was the one person in the world who would always accept me - always love me, despite my shortcomings.\n\nJamie and I were a mess by the time I'd finished -- cheeks wet, eyes puffy and noses running, and yet he embraced me, \"She was the best. The best!\"\n\n\"I know...\" I sniffed. \"You remind me of her a lot...\"\n\nJamie choked out a laugh, \"You remind me of her too...\"\n\nI squeezed him a little tighter, just before releasing him, \"Thank you for coming to live with me.\"\n\nHe shrugged, a smile tugging at his lips, \"I didn't exactly have a choice, but you're welcome. And thanks for letting me come...\"\n\n\"We're family, Jamie. I wouldn't want it any other way.\"\n\nFinally, I felt like Jamie and I were in a good place, and I wanted to tell Elena about it. But she wasn't answering her phone. Again.\n\n*****\n\nAfter being gone for two weeks on her honeymoon, Martie didn't really have time to have lunch with me on Monday but, because I was desperate and because she couldn't resist pastrami on rye, she made time. With Nick headed off to New York to close a deal, there was no filter on our conversation, and she gave it to me straight.\n\n\"Have you never heard of taking it slow?\" her voice was incredulous. \n\n\"This is slow for me!\" I insisted.\n\n\"You've only known her for three months! And, you're not even dating her yet, so quit trying to get her into bed!\"\n\nI rolled my eyes, thinking that the Nick filter would have been preferable to the ass-chewing I was receiving. \"It's not like that...\"\n\nShe sighed, relenting slightly. \"Then what's it like?\" \n\nI wasn't sure I could put it into words. \"Martie, she's different. Like no one I've ever met before. She's...such a great person...\"\n\nHer sardonic laughter surprised me. \"Wow... seriously John? That could describe any of the last five women you've dated...\"\n\nNormally I would have laughed at myself with her, but not today. Today, I felt like the one chance I'd had at redemption was slipping through my fingers, and her dismissive response pissed me off. \"Yes, seriously! Excuse me if I can't quite explain it! You just need to believe me when I say that the way I feel about her scares the living shit out of me! I know that I barely know her, and I know I'm an idiot, but she...\" I slowed, my heart pounding, searching for the words to describe what she meant to me, \"she...\"\n\nMy voice trailed off and, after a moment, Martie finished for me softly, \"She's the one... Right?\"\n\nI would not have used those words. How could I possibly think she was 'the one', assuming there was such a person? So, I neither confirmed nor denied. \"I really like her...\"\n\nMy friend grinned, and reached over the table to pat my hand, \"I think you're in love with her...\"\n\nI did not dignify that comment with a response, afraid of what might come out of my mouth. Instead, I replied, \"How I feel doesn't really matter if I can't get her to talk to me...\"\n\nMartie's brow furrowed and she bit her lower lip as she concentrated. Finally, she said, \"Normally, I wouldn't suggest behavior like this, but from what you're telling me, you might not have a choice...\"\n\n*****\n\nIt was long past dark when Elena pulled into her driveway. I had been parked across the street for almost two hours, waiting, feeling every bit like the stalker I was. But desperate times called for desperate measures...\n\nI knew that Dominic wasn't home. He and Jamie had gone to cheer on the varsity girls' volleyball team in their bid for the area championship and, with any luck, they wouldn't be headed home for a few hours yet. \n\nElena had popped her trunk and was starting to remove grocery bags when I walked up behind her. \"Can I help you carry those?\"\n\nStartled, she whirled around, and then recognition dawned and her shoulders sagged in what I hoped was relief and not disappointment. \"Oh...hi...\" After a brief pause, she continued, \"Yeah, thanks. I could use a hand.\"\n\nAs far as greetings go, it was not very enthusiastic, but it was better than her telling me to get the hell away from her. So I picked up a couple of bags that were unexpectedly heavy, closed the trunk and followed her into the house.\n\nElena didn't say anything as she strode towards the kitchen, flipping on lights as she went, and I stayed silent as well. I needed her full attention when I said what I'd come to say. \n\nBut before I could utter a word, she immediately began unpacking the bags, handing me a few items and asking me to put them in the deep freeze out in the garage. It was logical, I reasoned, to put away the food before launching into something that could well derail the rest of the evening.\n\nIt was all just hanging there in the air -- all the words that needed to be said, all the emotions to be expressed -- but I just let them hang as I did her bidding. \n\nShe was storing the last of the canned goods in the pantry when I reentered the kitchen, and she turned to me like nothing was amiss. \"Have you eaten? Because I have some leftover lasagna in the fridge if you're hungry.\"\n\nI was starving, actually, but instead of answering her question, I walked over to stand directly in front of her, so she had no choice but to look at me. \n\n\"Elena...\" I began, but she raised her hand to stop me.\n\n\"Don't, okay?\" Her eyes met mine and I noted a suspicious shimmer in those dark depths. \"Please...\"\n\nMy throat ached, but I took a deep breath and manned-up. \"Please don't be mad at me anymore. I am so sorry. I am an idiot and you were right -- I don't know the first thing about being a parent.\"\n\nShe shook her head, \"That's not what this is about...I just can't do this...\" her hand flapped back and forth, \"...us...\"\n\nIt wasn't the first time I'd been broken up with, but since we'd never really even been together, I was surprised at the fear that washed over me. What exactly did she mean? \n\n\"Which part of us?\" I asked.\n\nShe swallowed hard but didn't answer the question. Instead, she launched into a halting explanation. \"It took me a long time to get my act together after my husband left, but I did. I made a plan, and Dominic and I have done pretty well together, just the two of us. I don't need a man in my life, fucking things up,\" her voice began to shake, and her eyes fixed on my chin, \"and making me feel all these things that I had decided I never wanted to feel again...\"\n\nIt was a little difficult to follow her, but I got the gist. I was about to say something but closed my mouth as she continued. \"I wish you'd never kissed me... never touched me... never held my hand, because now I want something that's not at all what I'd planned for my life.\"\n\n\"Elena,\" I whispered, my hands closing about her upper arms as her words sank in.\n\nHer lower lip trembled, and a tear slid down her cheek, \"I don't want to cry over you, John...\"\n\nAnd I didn't want to cry over her, but I was close. Instead, I brushed the tear away with my thumb, and kissed the corner of her eye, and attempted to lighten the mood, \"A little late for that, sweetheart...\"\n\nWith a tremulous smile, she took that last little step towards me, wrapping her arms around my neck and hugging me tight. \"I'm sorry...\"\n\nThe words slipped out, before I could stop them. \"Give me another chance -- I'll do better, I promise...\"\n\nHer voice was muffled by my shirt, \"You wouldn't rather be with Rachel?\"\n\n\"Who?\" It took me a second to realize she was talking about Ms. Caldwell. \"Oh -- yeah, I'm pretty damn sure...\"\n\nShe was softening, relenting, I could tell, but she stepped back to look in my eyes. \"When I saw you two together at the Singhs', I thought maybe you'd just decided to cut your losses and move on.\"\n\nI grinned, knowing I was pushing my luck, \"You were jealous?\" \n\nHer cheeks flushed, but she didn't exactly admit it. \"I know you're attracted to her, remember?\"\n\n\"Not even a fraction as much as I'm attracted to you...\" I assured her.\n\nThat stopped her, and she tilted her head slightly. \"Why?\"\n\nI had such a hard time finding the right words when it was time to speak from the heart. \"You... ah...\" Turning away, I raked my fingers through my hair, before deciding to go with what I knew to be the truth. \"Not every parent raises their kids to be the kind of person who would recognize a lonely, hurting boy and welcome him into their life. I guess it's the same kind of parent who lives their life the same way...\"\n\nWhen I glanced at her, there were tears in her eyes again, \"John...\"\n\n\"So when I tell you that you are beautiful, I don't just mean on the outside -- though God knows you are...\"\n\nHer arms were around me again, and her lips were soft and sweet on mine for a moment before she buried her face in my neck. And then we just stood there, for a long time, holding each other. \n\nI didn't want to let her go.\n\n*****\n\nThe fact that Elena and I had been friends for awhile meant that the boys were not immediately tipped off that something was going on. Not that I was worried about Jamie. He would probably be thrilled that my attention was directed somewhere other than at him. \n\nDominic would be the hard sell, that I knew.\n\nI was infinitely grateful that my mother had never shown any interest in dating after my father's death. Not that I wouldn't have wanted her to be happy, but It could be a tough thing for a teenage boy to deal with. Mothers were... well, mothers. Certainly not anyone that would be interested in male companionship or, God forbid, sex.\n\nWhen I showed up the following Saturday to pick Elena up, I brought Jamie with me so the guys could hang out together. Dominic was not his usual friendly self, however. He stood in the living room, his arms folded across his chest and a slightly concerned expression on his face as I greeted his mother with a kiss on the cheek. \n\n\"So, where is this party again?\" he wanted to know.\n\n\"At my friends' house in Lakewood,\" I answered. \"Jamie's met them before -- Nick and Martie...\"\n\n\"Oh yeah,\" Jamie piped up. \"They're cool. Nick's got a sailboat...\" \n\nDominic did not seem impressed.\n\n\"We both have our phones with us,\" Elena offered, as I helped her into her coat, \"So just text if anything comes up and I'll get back with you as soon as possible.\"\n\n\"And what time do you think you'll be back?\" came the next question and I almost laughed. He was definitely Elena's son.\n\nShe deferred the question to me, and I shrugged, \"Depends, really. I'd say sometime between midnight and two? I'm going to leave that up to your mom...\"\n\n\"Don't wait up...\" she advised, reaching for the handle of the front door.\n\nWhen we were halfway down the walk, Dominic called out after us, \"No drinking and driving!\" and I did laugh then.\n\nElena waved a hand to let him know that we'd heard him, and I murmured, \"You've taught him well...\"\n\n\"He's been taking it better than I thought,\" she replied. \"It wasn't until he saw me dressed up that he started acting like this.\"\n\nI chuckled as I opened the car door for her, \"That's because you look incredibly hot -- and moms are not supposed to look hot...\"\n\nShe raised an eyebrow and smiled as though she didn't quite believe me, \"Oh, is that why?\"\n\n\"Yep...\" I replied, and just left it at that. \n\nTwo and a half hours later, Martie, who'd already had a few cocktails, was gushing in my ear, \"Oh my God, John! I love her!\" \n\nElena was across the room, talking to my boss, laughing at something he'd said and no doubt ruining the old guy for all other women. \"I knew you would...\" I replied honestly.\n\n\"She's way too good for you,\" Nick chimed in, ever helpful.\n\nExhaling, I conceded, \"Yeah...\" \n\n\"And yet, you're still smiling like an idiot...\" he mused.\n\nMartie shook her head, \"Look at her...she's frickin' gorgeous!\" And then, thinking better of her directive, she reached out and turned her husband's head back towards her, \"On second thought, don't look at her.\"\n\nNick laughed and slid his arm around his wife. \"She's not nearly as beautiful as you are,\" he assured her, planting a conciliatory kiss on her lips.\n\nBut Elena was indeed gorgeous. Before I'd picked her up earlier in the evening, I'd only ever seen her dressed casually. And although I was certainly a fan of the way she looked in blue jeans, I wasn't remotely prepared for the sight of her all dolled up. \n\nI'd had a hard time stringing a complete sentence together when I first saw her, with smoky eyes and vermillion lipstick, her four-inch stilettos bringing her dangerously close to my height. But I somehow managed to kiss her on the cheek and utter a very smooth, \"Wow!\" \n\nHer blouse was sexy as hell -- black lace, V-neck, tiny little sleeves, and it clung in all the right places. Paired with slim fitting black dress pants and those crazy heels, she didn't look much like the Elena I had come to know. But I was okay with that. Really. \n\n\"Should I be worried?\" I asked Nick as his wife left us to join Elena.\n\nHe shook his head, \"No...you know Martie's in your corner. If anything, she'll help sell you...\"\n\nI raised an eyebrow, \"Is that what it's come down to? That she needs to be sold on me? Am I that terrible?\"\n\nHe laughed and clapped me on the back, \"Well, you seem better behaved lately, but your past is not what I'd call unblemished.\" \n\nTrue.\n\n\"And you can be a bit of an asshole from time to time...\"\n\n\"Thanks, man...\" I glared at him and took another swig from my beer bottle. But he was right. And Elena had already seen a glimpse of that guy.\n\n\"But what I'd really like to know,\" Nick continued, \"Is why you are standing here with me, when you could be over there with her...\"\n\nNow that was a great question. At the beginning of the night, I'd proudly introduced her to friends and co-workers, and she was as affable and outgoing as always. That was one of the things I really liked about her -- she could talk to anyone and make them feel special. Then, Elena left me to powder her nose and, before she could return, was drafted into service by Martie. She didn't seem to mind. In fact, after helping with some mysterious task in the kitchen, she circulated the room like she'd known these people for years. Occasionally, she would catch me looking at her and flash me a smile -- not a desperate \"rescue me!\" smile, but rather an \"it's fine, don't worry about me\" one.",
        "Nick was right. This was supposed to be a date, yet for the past thirty minutes, she'd essentially been on her own. And why? Because I'm an idiot. \n\nI reasoned that I could admire her tall, shapely form better from where I stood, and I could watch people fall under her spell when she laughed. She wasn't the most glamorous woman in the room, but she drew people to her like moths to a flame. And when I was next to her, I ached for her. I wanted to hold her, kiss her, touch her...I wanted to take her to my bed and hear her whimper, and moan, and beg as I pleasured her...\n\nYeah, I was a fucking idiot. \n\nI drained my beer and set the empty bottle on a nearby table. \"Mind if I show her the view from the upstairs balcony?\" I asked, barely hearing Nick's encouraging response as I headed across the room. When I got there, Martie had just managed to extricate Elena from the conversation with my boss, and they appeared to be moving towards the bar. I intercepted them and was rewarded with the kind of smile that made me go weak in the knees.\n\n\"Hey...\" Elena slid her arm around my waist to give me a little hug. \n\nI pressed a kiss to her temple, \"Hey yourself. Having fun?\"\n\n\"Yeah... we were just headed to get Martie a refill on her drink.\" She looked over her shoulder for the woman in question, but she had disappeared. \"Huh, she was right here...\"\n\nMartie was a true pal, no doubt about it. \n\n\"Feel like some fresh air?\" I asked, taking her hand in mine.\n\nShe met my gaze and smiled -- a small, intimate smile that made my heart race. \"Sure. It is a little stuffy in here...\"\n\nWhen I helped Nick move into the house three years ago, I thought he was crazy. He was single but just spent an insane amount of money to buy a 4,000+ square foot house in an established, highly sought-after neighborhood near White Rock Lake. But I guess it was all part of the master plan, because now he had a wife, and the two of them had plans to fill the house with kids. Until that time, however, it was a perfect place for entertaining, and I'd been there dozens of times over the years. That's how I knew about the second-floor balcony, and about the flight of stairs off the kitchen that would take us up there, undetected.\n\n\"I thought we were going outside...\" she commented as I began to ascend the stairs, her hand still in mine.\n\n\"Trust me...\" I replied, and she did.\n\nOnce upstairs, we walked down a short hallway that spilled into a casual living area, with French doors in the wall beyond. The party was contained downstairs, so for a few blessed moments at least, we were alone. \n\nIn the daytime, the view from the balcony was cathartic. It looked down over a wooded ravine with a creek running through the bottom. Here, the neighbors' homes were not right on top of each other, and the trees helped mute the sounds of the city, giving the illusion of solitude, peace, privacy.\n\nAt night, there was not much to see, except the strands of Christmas lights that winked through the trees from across the way, but it still impressed Elena. \n\nShe breathed deeply and leaned into my side, \"It's beautiful here...\"\n\nIt was a fairly temperate night for mid-December, but her arms were bare, and I could feel the gooseflesh already popping up when I put my arm around her. \"Yeah...\" I agreed, wondering how long she would last out here.\n\n\"And I love your friends,\" she added. \"You've surrounded yourself with good people, it seems...\"\n\nI grinned, \"I think you're telling me I have good taste.\"\n\nShe laughed at that and turned her head towards me, \"Well, that goes without saying. You're with me, after all...\"\n\n\"True...\" Yes, I was with her, and part of me thrilled to hear her say it, however jokingly it was delivered. I was glad all the 'friends' bullshit was behind us. Not that we weren't friends, but there was certainly more to it than that. \n\nSipping wine from the glass she'd carried upstairs with her, she was quiet for a moment, gazing out into the night. Then she surprised me by asking, \"So, who's Petra?\"\n\nWondering who the hell had mentioned her name, I stumbled a little over the words. \"Ah... she's an old girlfriend, I guess...\"\n\n\"Oh...\" She paused, then probed, \"You guess?\"\n\nI stopped breathing, I think, stressing about how to explain Petra without sounding like a dick. \"It was casual -- on again, off again, you know?\"\n\nOkay, that sounded pretty dick-ish, but it was honestly how I'd viewed us. \"How did you hear about her?\"\n\nShe shrugged, \"Someone mentioned her name in passing...\"\n\nThat was the sanitized version, no doubt. \"Ah, well, I hope they said, 'Thank God John came to his senses and starting dating someone like you, instead of Petra!'\"\n\n\"Something like that...\" she smiled, resting her head against my jaw. \"Was she that terrible?\"\n\n\"No...\" I replied truthfully. \"She was just the wrong person for me. A bit high maintenance, and always needed to be at a party, or a club, or some other social event. I guess I finally realized that I want something different in a relationship...\" \n\nElena nodded, and wrapped one arm around my waist in what I interpreted to be a gesture of support. I hoped beyond hope that she would not ask, 'Like what?' and she did not. Instead, she teased, \"Like a single-mom who's a bit of a control freak?\"\n\nI chuckled, \"Exactly. But she's also got a good heart, a killer smile, and a great ass!\" I punctuated that last comment with a little pop to her right butt cheek and she gasped.\n\n\"I'm not sure if should feel flattered or offended on behalf of all woman-kind!\" she teased, setting her now empty wine glass on the small patio table next to her. \"But I am going to go with flattered because it's more empowering. And...\" she sidled up close to me, her eyes mischievous, \"I'm going to say that you, too, have a great ass!\" and she popped me back.\n\nThere she was, in my arms, fire in her eyes, all but asking me to kiss her. I grinned, \"Nick says you're way too good for me...\"\n\n\"He's wrong,\" she assured me, curling one arm behind my neck as she pressed her body close and brushed her lips against mine. \n\nNick was rarely wrong, but I wasn't about to debate the point as her light, tempting kiss turned into more. The taste of her was intoxicating, and my arms tightened around her, reveling in the feel of her soft curves against me. \n\nThis was the reason I'd brought her up here, and I think she knew it. Either she didn't care, or her agenda had been the same. Our kisses became heated -- ravenous even, and I gave up trying to behave. One hand made its way down to the ass I admired so much, and I lifted her against me, encouraging her to wrap one leg around my hip as I pinned her against the balcony railing. \n\nIt was a somewhat precarious position, but with my aching hard on pressed snugly between her legs, she didn't seem to mind. One of my arms was anchored securely about her waist, so she wasn't going anywhere I didn't want her to.\n\nShe broke away for air, letting her head drop back to allow me access to her neck, \"God, you're good at this!\" she groaned, as I sucked the tender flesh of her throat between my teeth, my free hand palming her breast.\n\nSoothing her tortured skin with the flat of my tongue, I trailed my way up to her ear, \"I want you to come home with me,\" I murmured, nibbling on her earlobe as my thumb stroked over her hardened nipple.\n\nHer voice was breathless, \"Do you think it's too early to leave?\" \n\nI expected to have to do a little more persuading. \"No...\" was my automatic response as I squeezed the softness of her breast and tweaked the tip gently, causing her to inhale sharply. \n\n\"You don't think Nick and Martie would be offended?\" her voice sounded slightly strangled.\n\n\"Not at all, trust me,\" I assured her. Truth was, they'd probably be more upset if I followed my baser instincts and fucked her right there on the balcony. And I wanted to, believe me -- I just didn't think she'd be okay with that.\n\nIt was all I could do to not drag her downstairs and immediately out to my car. Instead, after a few more very necessary kisses, we made our way back to the party at a reasonable pace and set about saying our farewells. We used some lame excuse about needing to get back to the boys, but we weren't fooling our hosts. When Martie hugged me goodbye, she muttered, \"Do not screw this up, okay? I like her!\"\n\nNick's advice was equally sage. \"She's a good person, John. Try not to be an asshole...\"\n\nIt was so great to have the love and support of friends who knew me so well! \n\n*****\n\nThe twenty-minute drive back to my apartment felt like it took forever. I reminded myself several times along the way that just because she had agreed to come home with me, it did not necessarily mean we were going to have sex. I mean, we almost certainly would, but maybe not.\n\nIt was probably a bad idea. Probably way too soon. It didn't feel like it was too soon, though. In fact, every time we kissed, things got really hot, really fast. Even earlier that week, after I'd made her cry, and after she fed me lasagna, we lay together on her couch and talked and kissed until Dominic texted to say he was on his way home. I hadn't touched her then -- did not want to press my luck -- but the kisses were nothing short of incendiary.\n\nElena, thankfully, talked on the car ride so that I didn't endless dwell on what was about to happen -- or not happen. As we pulled into the parking lot outside my building, Elena's phone pinged and she pulled it from her handbag. \"Dominic, checking in to see how it's going,\" she reported.\n\nTeasing, I suggested, \"Tell him I'm about to take you upstairs and ravish you...\"\n\nShe grinned, and raised an eyebrow, \"Really? Am I about to be ravished?\"\n\n\"Just say the word...\"\n\nAs she typed a response, she quipped, \"As tempting as that sounds, I'm thinking I need to tell Dominic something less likely to give him a coronary. How about, 'Having a great time, be home by 2am'? That sound good?\"\n\nThat would give us two hours together. We could do some damage in two hours.\n\nIn all my years, I had never dated a mother before. Never even considered it. I guess I figured that I had enough baggage of my own that I didn't need to saddle myself with anyone else's -- their kid, their ex, or whatever. Or maybe I just didn't want to date someone who would always put at least one other person in their life before me.\n\nIn retrospect, it was pretty damn selfish. Since Jamie came to live with me, it was like a huge spotlight had been shone into my life, and I could suddenly see how self-centered I'd been all these years. No wonder I'd never found someone to spend my life with -- who could bear to be with me that long? \n\nAnd now, here I was with a woman I liked more than anyone else I'd ever dated. Elena. A mother. How ironic that the characteristics I liked most about her are ones I probably never would have seen if she hadn't been a mother. Or perhaps she would never have developed them -- it was hard to say.\n\n\"Do you want a glass of wine?\" I asked as I helped her off with her coat, thinking it seemed like an easy way to segue into what might happen next.\n\n\"No, I'm good...\" she replied, kicking off her shoes and groaning when her feet were finally flat once again. \"Oh geez...\"\n\n\"Not the most comfortable?\" I guessed, shedding my blazer and tossing it over the back of an armchair alongside her coat.\n\nShe grimaced, \"No...\"\n\n\"Well, at the risk of sounding like an insensitive pig, let me just say that they looked fucking hot!\"\n\nLaughing, she allowed me to pull her into my arms, \"Hot, huh? Guess what you're getting for Christmas!\"\n\n\"You couldn't find a pair in my size...\" I challenged, liking the way she took her time sliding her hands up my arms.\n\n\"Oh, I'll just shop where the drag queens do...\" she grinned. \"In a city the size of Dallas, there are bound to be some stores that cater to the cross-dressing male...\"\n\n\"I am not sure my legs could do shoes like that justice,\" I countered, leaning down to press a kiss in the hollow just below the ear.\n\nHer breath caught a moment before she managed to say, \"I would be happy to wax them for you...\"\n\nI cringed at the thought, \"Ow! Really?\"\n\n\"No, not really,\" she shook her head. \"I don't think I could inflict that much pain on another person...\"\n\n\"Whew!\"\n\n\"Besides, I'm kind of a fan of hairy legs...\" she admitted, stroking the faint stubble on my cheek. \n\n\"Well, we're good then, because I've got that covered...\" I smiled, settling her even closer to me. We touched from chest to thigh, and she slid her arms around my neck, increasing the pressure on her soft, tempting breasts.\n\nShe sighed, \"I like the way you hold me, John...\"\n\nFor some reason, it struck me as a vulnerable statement, and my heart contracted. \"And I like the way you feel in my arms,\" I responded, my fingers digging into her waist slightly.\n\nHer lips brushed against mine and she murmured, \"I think you'd better hurry up and ravish me before I chicken out...\"\n\nI choked back a laugh, \"Really, now?\"\n\n\"Yes...\" she kissed me again, harder this time, and I got the message. \n\nI knew Elena had had plenty to drink throughout the evening, but she was by no means drunk. I was not taking advantage of the situation, but merely striking while the iron was hot as I took her hand and led her down the hall to my bedroom. Eight months ago, I'd have been happy to \"ravish\" her right there in the living room, but there was always the slightest chance that Jamie would come home unexpectedly, and I wasn't going to risk it.\n\nElena seemed to understand that, because she closed and locked the door behind her. I had conveniently left my dresser lamp on earlier that evening, and it provided just enough light.\n\nAs I pulled her close once more, she said, \"You should know that I don't do this a lot...\"\n\n\"I figured...\"\n\n\"And I probably wouldn't be doing this now if you didn't kiss the way you do...\"\n\nI grinned, \"So it's all about technique, huh?\"\n\nShe shook her head and stroked the side of my neck, \"Not exactly -- I'd say it's more about sincerity...\"\n\nDid I kiss her any differently than I had any other woman? Maybe. I definitely felt more for her, and maybe she could sense that when I laid my lips on hers. I nodded, \"Yeah...\" and then kissed her as sincerely as I knew how.\n\nWe didn't talk for a long while. Our mouths were busy, and I was working on releasing the tiny little buttons on her blouse. It took much longer than I wanted, but when at last I was able to slide that pretty lace garment off her shoulders, it was all worth it. \n\nHer ivory skin was flawless -- smooth and silky beneath my fingers as I glided a thumb across her collarbone to hook beneath her bra strap and slide if off her shoulder. My lips followed, and she tilted her head back and sighed in pleasure. A shiver ran through her a moment later when I sank my teeth gently into the muscle at the base of her neck, and I could feel her beaded nipples as she pressed her chest against mine. \"John...\" she murmured, almost wistfully.\n\nI loved hearing my name on her lips, and there was something in the way she said it in this moment that made me want to deserve her, deserve this. \n\nOur next moments were focused on ridding each other of most of our clothes, as we teased and stroked along the way. And although I realized it had been quite some time since she'd indulged in something like this, she was no shy miss. No, she wanted, just as much as I did, and was not afraid to go after it.\n\n\"I like your 'six pack',\" she grinned, as she slid one hand over my hard stomach, on her way to my belt buckle. \n\nI managed to choke out a grunt of amusement at the joke, but all the blood had rushed from my head to points south when I realized she was about to undo my pants. Her eyes met mine and held as she released the button, lowered the fly, and reached her hand inside to cup me through my briefs. \n\nSwallowing hard, my eyes drifted shut when she squeezed my balls, and she crooned, \"Ah, honey, that feels nice...\" \n\nThat was supposed to be my line. But before I could find any words, she'd tucked the fingers of both hands into the waistbands of both my pants and underwear and began working them lower -- carefully, at first, until she'd cleared the hurdle of my erection, then swiftly all the way to the floor.\n\nIt would have been one thing if she had stayed there in the circle of my arms as she disrobed me, but quite another to find her on her knees in front of me, lifting my feet to slide the clothes all the way off. And then, she didn't rise to join me. Instead, she slid her hands up my legs slowly, her fingers exploring the dips and bulges of muscle along the way, until at last they wrapped around my aching cock.\n\n\"Wow...\" she whispered, glancing up at me, and I almost lost it. Elena Giordano Russo was not supposed to be on her knees before me. And she definitely wasn't supposed to use her sweet little tongue to lick the underside of my rod or open her mouth to take me deep inside. \n\nNo, she was supposed to let me make slow, sweet love to her -- to treat her like the lady I knew her to be. But now, as she bobbed her head back and forth, my cock hitting the back of her throat with each stroke and her fingers expertly stroking the length of me that she couldn't take in, I knew I was going to have to fuck her.\n\nBut, dear God, I did not want her to stop sucking me. My fingers tangled in her hair as I fought the urge to thrust into her mouth. I didn't want to hurt her, and as good as she was at this, I was pretty damn sure she wouldn't want that. \n\nAs amazing as it felt, I knew I wouldn't be able to take much more, so it was a relief when her mouth popped off me and she pressed a kiss to the underside once again. But instead of standing, she lowered her head and sucked one of my balls into her mouth. \n\nI had, thus far, managed to keep all sound locked away in the back of my throat. But when she did that, and swirled her wayward tongue around the orb, I emitted a guttural groan. When she moved her mouth to the other testicle, simultaneously stroking the length of my cock and thumbing the sensitive head, I'd reached my limit. \n\nDragging her up to her feet, I kissed her hard, and murmured, \"Sweetheart, you are a bad girl...\"\n\nHer eyes were alive, excited, as she laughed, and I bore her off to bed. She was still clad in her bra and panties, but I made short work of those and drew her tightly against me. Skin to skin, at last. \n\nBefore I could kiss her, she took my face in her hands and said, \"You're a beautiful man, John...\"\n\nI'd never been called beautiful before, and it stopped me. Stopped me in my quest to immediately bury myself inside her and fuck the living shit out of her. No, this was more than a quick fuck, and I had to remember that.\n\nThe kiss that I had planned to be ruthless and demanding, ended up being much gentler as I shifted my weight off her and glided my hand down her side to her hip. As I explored her naked body for the first time, I was impressed by the contrast between firm muscle, supple softness and slick, silk heat. \n\nI loved her breasts -- very soft and round -- a tempting handful with exquisitely tight rose nipples that begged to be licked. She stopped breathing when I took one into my mouth, teased it with my tongue and scraped it with my teeth. She shifted then, opening her legs over my thigh, and settling her core against me. When I sucked, she arched against me, a moan escaping her throat, so I kept on pleasuring her, thrilled that she liked breast play as much as I did.\n\nWhen I'd pleasured both breasts to the point that my thigh was as wet as her pussy, I squeezed them both together and worried the tips with my thumbs. \"You have some sexy-ass tits, Elena...\"\n\nHer cheeks were flushed, her eyes bright, and her laugh was short. She didn't say anything, but I could see her swallow hard as I adjusted our positions to slide one arm beneath her neck, and my free hand glided south over her stomach. \"God, you're lovely...\" I murmured against her hair as one finger slid into the warm, soft slit and stroked.",
        "A strangled sound escaped her throat when I circled her anxious clit. \"You like that, babe?\" I teased, sliding lower and then back up to torment once more. \n\n\"Mmmm...\"\n\nI could barely hear her response, but her body told me all I needed to know. She was soaking wet as I stroked her, and she arched against me when I finally slid a finger inside her velvet sheath. She needed to come -- I needed to make her come, soon.\n\nElena was no entitled millennial, who took oral sex as her due. So when I began to kiss my way down my body, she stopped me momentarily to say, \"You don't have to...\"\n\nI purposely met her gaze so she could see how fucking sincere I was when I said, \"But I want to...\" and I continued on.\n\nThe dark triangle between her legs was neatly trimmed and, when I shifted her thighs apart, I caught a whiff of her sweet, tangy scent. Now this was a woman. \n\nI touched her lightly at first, exploring her with the tip of my tongue, reveling in the taste. Then, when she shifted her hips unconsciously towards me, I got serious and buried my face in her honeyed snatch. The texture of a woman's slit is like no other, and the gentle rasp of my tongue against her tender flesh gave me as much pleasure as it did her.\n\nAnd she was aroused, make no mistake. When I began tormenting her clit in earnest and slid two fingers inside her dripping pussy to start working her, the sensual sounds emanating from her encouraged me. She was close, and I could feel her whole body tense as she bucked her hips towards me, wanting me harder against her. I stayed with her, increasing the pressure and the speed of my tongue and fingers until I could feel her begin to contract. Her hips came off the bed -- and stayed off -- and her low, keening cry filled the room.\n\nShe relaxed finally, and I pressed one last kiss against her mound before joining her at the head of the bed. I kissed her deeply then, letting her taste herself on me, and was rewarded when her soft hand wrapped around my painfully erect cock.\n\n\"I need you inside me...\" she whispered as I grabbed a handful of her delicious ass and fondled it a mite roughly.\n\nThere were condoms in my nightstand, and I broke away just long enough to locate one and tear the package open. Elena took over from there, sliding the latex over the length of me, and jesting, \"You'd better not break me with this thing...\"\n\nI grinned and flipped her onto her back, spreading her legs, \"Only if you beg me to...\"\n\nHer eyes flared as the broad head of my cock nudged her entrance, \"Do you think I'll be begging?\"\n\n\"It's possible...\" I allowed, kissing her just before I pushed into her body. Christ, I thought, as I withdrew slightly and plunged again, she was fucking perfect...\n\nElena wrapped her long, satiny legs around my hips as I moved slowly within her. It was hot in that room, and the sensual friction between us made it more so. Every time I shifted against her, I brushed against her nipples with my chest, and she liked that. Each stroke was a little deeper, a little harder, and she opened to me, her legs spreading wider until she abandoned her earlier idea in favor of a position that gave her more leverage.\n\nI knew that, to a certain degree, her 'gargantuan' size bothered her. She was not a petite, delicate little thing, but I was grateful for that. I needed someone who fit me better. Someone who I could kiss and fuck at the same time without craning my neck. Someone who could take all of me -- without breaking.\n\n\"More...\" she panted, her eyes glazed over, fingers digging into my hips. \n\nI could take these kind of orders from her, any day, I decided as I sank even deeper into her welcoming body. She was hot and wet, and the fit was mind-bendingly snug. Yes, she could take me...\n\n\"Harder, please,\" she begged, and I knew I was lost. \n\nThis woman, respected by everyone who knew her, above reproach in every sense, was an absolute fucking goddess in bed. She knew where to touch -- how to touch -- how to make me feel loved and desired at the same time. How could I not give her what she asked for -- what she begged for?\n\nI buried myself to the hilt with the next thrust and watched her nostrils flare as she closed her eyes. \"Like that, sweetheart?\"\n\n\"Yes...\" she managed breathlessly, one of her hands leaving my hip to toy with her nipple. And as sexy as that was, I felt like I might be falling down on the job.\n\n\"I've got you babe,\" I murmured, brushing her hand aside to replace it with my own, now supporting myself with one arm. I leaned down to give the nipple a quick lick before rolling it between my fingers as I moved within her once again. \n\nNow her fingers dug into my arms as she arched her hips to meet each thrust. The begging had ceased because she was getting what she wanted, and I could see pleasure, missed with a shadow of pain on her face. 'Good pain,' I'd heard it called before. My breathing was harsh, and it was torture to hold myself back. The months of celibacy were wreaking havoc on my self-control, and as I pistoned in and out of her, I was close to the breaking point.\n\nAnd then, finally, she cried out, clenched her sweet pussy around me, and I let myself go. Let myself lose it in her soft, lovely body as I groaned, shuddered, and emptied myself.\n\n*****\n\nIt was well after one a.m. when I woke. I am sure I would have slept longer if Elena hadn't started touching me. I am not sure where she started, but when I finally clawed my way to consciousness, she was fingering the hair at my temples, and then sliding the back of her index finger down across the roughness of my cheek.\n\n\"Hi...\" she breathed, coloring slightly when she realized I was watching her. \"Did I wake you?\"\n\n\"Uh-huh...\" I replied honestly, my voice like gravel.\n\nHer mouth tilted up at the corners, \"Good... I have to go home soon...\"\n\nI slid my arm over her naked hip and pulled her against me. \"What time is it?\"\n\n\"One-thirty -- I let you sleep as long as I could...\" Her fingers now brushed against my lips as she brought her lush breasts in full contact with my chest.\n\nI was not twenty anymore, but when she did that, my cock stirred and I was pretty sure I could muster up the energy to satisfy her once more. Or, if not her, then me...\n\nDeciding to test the waters, my hand slipped lower to caress one round cheek, my fingers dipping suggestively into her crack.\n\nShe didn't stop me, but she did say, \"Don't get too excited, hon, 'cause there isn't time for that. Not only do I have to throw some clothes on before going home, but I have to make myself look like I haven't been rode hard and put up wet...\"\n\nI grinned at the memory, \"I did ride you hard...\"\n\nShe smiled back, \"Yes, you did...\" and she kissed me softly.\n\n\"Are you sure we don't have time for another round?\" I asked when her lips left mine, trying not to sound desperate.\n\n\"I think you need to ask me out again,\" she suggested, tracing her finger along the arch of my eyebrow. \"Soon...\"\n\n\"Tomorrow...\" I proposed, closing my eyes as she continued to caress my face.\n\nAnd she kissed me, \"Tomorrow it is...\"\n\nAs I watched her dress and attempt to fix her tangled hair and smudged makeup, I wondered what I could possibly have done to make her love me. For I was sure she did.\n\nElena had drawn me up, out the pit of misery and confusion I was floundering in, and redeemed me. She helped me find my way with Jamie and start to heal the ragged hole in my heart where Shari had been. With no agenda. It was who she was, and I loved her for it.\n\nThe past seven months had changed me, to be sure. My friends barely recognized me -- hell, I hardly recognized myself sometimes. But had I become worthy of her? No. No way. And was I going to let her go? Not a chance...\n\nShe was 'the one,' as Martie had predicted. And, now that I'd had her, now that she was so close to being mine, I would do whatever it took to keep her by my side. I would be her strength when she needed it and help heal her hurts, as she had mine. The word 'forever' flitted across my mind, and it sounded good. \n\nThe drive to her home was quiet, but our hands were linked the whole way, and I knew she didn't really want to go. But there were two teenagers counting on us to keep our word, and she would not let them down. Left to me, I probably would have skated in a little late and begged forgiveness, but the kids deserved more than that.\n\nAt 1:58 a.m., on her front porch, I took her in my arms one last time, and held her close. The living room light was on, and I hoped that no over-eager person would open that door before I was done saying goodnight.\n\nElena kissed me, her hand cradling my cheek as she was fond of doing, and whispered, \"Tomorrow...\"\n\nAnd as she eased out of my arms and reached for the doorknob, I swallowed the lump in my throat and nodded. Yes, tomorrow. And the next day. \n\nAnd, if I was very lucky, forever.\n\n*****"
    ],
    "authorname": "JustJaney",
    "tags": [
        "love",
        "mother",
        "forgiveness",
        "hot",
        "romance",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/redemption-of-an-idiot"
}