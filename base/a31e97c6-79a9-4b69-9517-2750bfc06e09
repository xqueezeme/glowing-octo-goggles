{
    "title": "The Rent-A-Slave",
    "pages": [
        "The further adventures of Brenda, the God-fearing twenty-six-year-old dental assistant I introduced in \"God and the Cum Dump.\" No, you don't have to read that story to make sense of this one. In fact, since reading that one is unlikely to lead to either your moral or intellectual improvement, you should probably just give it a miss. This one is, if anything, even worse - full of anal sex, double penetration, pee, and scat. It's filthy and disgusting, and I think you shouldn't read it. I say this for your own good.\n\nIf you do read it, though, please remember: if you happen to go to Mickey's Tap looking for random sex the way Brenda does, be lots more careful than she is - take some condoms along! Length: about 16,000 words. Tags: Anal sex, Lesbian sex, Group sex, Bondage, Rimming, Farting, Urolagnia, Pee, Scat, Coprophagia.\n\n*****\n\n1. Swirlie girl\n\nDr. Rosenberg's cock was deep in my ass. I clenched my teeth and gripped the rim of the toilet bowl, staring down into the yellow water with fear and excitement. The toilet didn't look as nice as the ones for the patients, which I had to clean a couple of times a day. There were brown stains in it, and I thought probably the doctor didn't much mind his aim when he peed.\n\nIt was about five thirty on Thursday - a week since I'd discovered God's purpose for me. I'd always been below average at everything - work, personal grooming, relationships, you name it. But the day Dr. Rosenberg fired me and my boyfriend Lester face-fucked me, made me throw up around his cock, and stomped out of my life in a rage, I figured out that I was really good at fucking. Not the vanilla fucking I used to do with Lester, but the kind most people would rather not think about, much less try, because it's gross.\n\nI'd kicked off my new life with a gangbang in the picnic area outside Mickey's Tap, and ever since I'd been like out of control, fucking every man I could (not to mention a few women). I'd done anal and deep throat, I'd swallowed more loads of cum than I could count, I'd spent an evening as a human urinal, and I'd fucked a whole roomful of Shriners with my new friend Casey, a fun bubbly gangbang whore.\n\nLike my pervert friend Randy told me, I was a cum dump, and I loved my new life, except I worried that God might not approve of my behavior. But the Reverend Jonathan Edwards, the pastor of my church, taught me we were all sinners, and the more we sinned the better Jesus loved us, because forgiving sin was what He liked to do best.\n\nA few days before, I'd like half-blackmailed, half-bribed Dr. Rosenberg into giving me back my job as a dental assistant. The blackmail part was that I had a video of him doing unspeakably filthy things to me, and the bribe part was that I was going to let him do those things and more, as often as he liked. And he had, too, every day since then.\n\nToday Dr. Rosenberg had kept me after work. He'd taken me into the private bathroom next to his office, set me on the floor with my head way back over the toilet bowl, and pissed in my mouth. Jesus, but the man had a lot of piss in him! One of the things I loved about Dr. Rosenberg was the way everything that came out of him came out in great quantities. I enjoyed the sound and sensation of his piss gurgling in my mouth: some of it I let fall into the toilet, some I spat out onto my nice white dental assistant uniform, and some I swallowed.\n\nWhen he was finally empty, he turned me around so I was on my knees in front of the toilet, gripping the rim while he lubricated his cock and my ass. Dr. Rosenberg was an ass man, and he liked mine because I had a big butt. He said my ass was made for perforation, which was kind of a cool thing to say.\n\nDr. Rosenberg was also an incredible asshole, which was another thing I liked about him. You see, I'd also learned, a week ago, that I loved being objectified (Randy taught me that word - he's a lawyer and really smart), and nobody did it better than Dr. Rosenberg, who considered me barely human trailer trash, even though I never lived in a trailer. I think he was kind of disappointed with himself because he liked fucking me so much, and that made him even meaner, and him being meaner made me like him better.\n\nI was bent over the toilet, staring down into the cold piss, with Dr. Rosenberg hammering me behind. I'm not a pain slut, and this fucking hurt, because my asshole was still kind of raw from the Shriners, but I had to put up with it because I really needed this job. Besides, I liked being fucked by Dr. Rosenberg, and the taste of his piss in my mouth, and staring into the toilet, and knowing I was going to get a big mouthful of cum at the end of it all.\n\nI was thinking this couldn't get any better when Dr. Rosenberg put a strong hand on the back of my neck, shoved my face down into the cold, pissy water, and held me there for about ten seconds while he went on fucking my ass. I had just enough time to close my eyes before I went under, and no time to take a breath, so I came up spluttering, gasping for air, and shouting \"Motherfucker!\"\n\nBut I was ready when he pushed me down again, and this time I actually kind of liked having my face immersed in his piss, and I blew some bubbles and took in a mouthful, which I spat out when he hauled me up.\n\nThis went on for quite a while, and I liked it well enough that I forgot the pain in my ass. Finally, though, he held me down so long, like half a minute, that I got seriously scared and started to struggle - which he punished me for by pushing me even deeper into the piss. I was just starting to panic, thinking he hated me enough to drown me, when he flushed the toilet, and the water whooshed down past my ears with a deafening roar, and I was able to draw a breath before it came back up clean and cut off my air again.\n\nDr. Rosenberg kind of gave my head a shake and pulled me up out of the water, gasping for breath again. He turned me around, grinned, said, \"Open wide,\" and drove into my throat. The first time he ass-fucked me he took me by surprise by sticking his shitty cock in my mouth afterwards and making me puke. Now I was giving myself regular enemas so I didn't get shit in my mouth, but still he knew how to make me puke just by pushing way into me and triggering my gag reflex. It was okay with me: I loved the way my stomach lurched and vomit gushed out of my mouth and nose, soaking his pubic hair and flooding over his cock and balls. My stomach was shooting these bolts of pleasure to my nips and clit, and somehow knowing he was taking sadistic pleasure in watching me throw up made it all that much hotter.\n\nDr. Rosenberg grabbed two fistfuls of my hair and fucked my throat so hard my brain was like rattling around inside my skull. This was a hatefuck for sure. He thought I was ugly and stupid, and he wasn't far off the mark there, in spite of the makeover Randy had treated me to. I was kind of pear shaped, with features coarse and heavy. I'd been a rotten high school student - college was out of the question, but I'd managed to struggle through some vocational dentistry courses, and on the strength of that and the fact that there was something about me that made Dr. Rosenberg want to defile me, he'd taken me on.\n\nAnd here he was, fucking my face and having a great time, and he absolutely radiated resentment, because he wasn't supposed to like a girl like me, and he wasn't supposed to need to do this stuff he was doing to me. But he did need to do it, and his wife would never in a million years let him, but I would, and he resented it because I was this trashy skank and the worst dental assistant he'd ever had.\n\nSo when he felt his orgasm coming on, he crushed me to him, smashing my lips and nose against him, and I was making choking noises and rubbing my pussy, and when his cum gushed into me it was about as good a thing as I'd ever felt before.\n\n\"Cunt,\" he snapped, and turned on his heel and left the bathroom. I took stock of myself as I heard him moving about in his office. The front of my white coat was drenched in piss and vomit, I was about as turned on as I'd ever been in my life (but it seems I always was these days), and I hadn't had an orgasm.\n\nI followed Dr. Rosenberg into his office, where he was already dressed and straightening his desk with abrupt, angry gestures.\n\n\"I ought to fucking kill you,\" he said.\n\nI perched on the edge of his desk, hiked my dress up, and stroked my pussy. I said, \"Then who would you fuck, Dr. Rosenberg? You got girls lined up begging to be pissed on?\"\n\n\"Close the door when you go,\" he said.\n\nHe left, and I laid back on his desk and masturbated, thinking I'd had a really fun day.\n\n2. Betsy calls\n\nI was hoping to slip back into my place without anyone noticing me, but wouldn't you know it, nosy old Mrs. Fletcher, my neighbor, just happened to be coming out of her apartment with her nasty toy poodle Seymour at the very moment I was passing her door. \n\nShe wrinkled her nose at the sight of me, then pasted a look of false sympathy on her face and asked, \"What happened to you, dear?\"\n\nI made my voice low and husky and said, \"I think I've got that bird flu, Mrs. Fletcher.\" She scuttled away down the hall, and I made a mental note to keep an extra dental assistant uniform and a few plastic bags at the office.\n\nI changed, got myself a beer, and had a long soak in the tub, keeping my phone within easy reach on the toilet seat next to the beer. That turned out to be the right thing to do, because it rang after a few minutes - the number on the screen was one I didn't recognize.\n\n\"Hello?\" I said.\n\n\"This is Betsy,\" said a businesslike female voice. My stomach gave a happy little leap. Betsy was a lesbian dominatrix I met that night I spent as a urinal. At the end of the party, she'd taken me to an upstairs bathroom, helped me shower, and fucked me. She was old and fat, but nice and really sexy, maybe because she was sort of bossy in a way that totally made me want to do anything she said. The sound of her voice made me swoony, and I put a hand between my legs and masturbated as we talked.\n\n\"Hi, Betsy,\" I said, feeling intimidated even over the phone.\n\nBetsy got right to the point. \"I need a slave this weekend, Saturday night to Sunday morning. I'd like it to be you.\"\n\n\"Okay,\" I said. \"I just have to be on time for my Bible lesson at one on Sunday.\" The Reverend Edwards didn't let me come to services because my behavior upset everyone, but he gave me private religious instruction every week.\n\n\"Don't worry,\" she said, \"you'll make it.\"\n\nI said, \"But what do you want me to do? I'm not sure what you mean by slave. I'm no good at cooking and cleaning and all that.\"\n\n\"Not a household slave - I've already got one of those. A sex slave,\" she said. \"I'm having a party that night. I need someone for the guests to fuck.\"\n\n\"It sounds like fun,\" I said. \"Are you going to objectify me?\"\n\n\"What?\"\n\n\"Objectify. You know, treat me like I'm less than human.\"\n\n\"That's the whole point,\" said Betsy. \"We want to have sex with someone we don't give a fuck about - someone who's just a collection of holes. That would be you.\"\n\nI rubbed myself harder under the water. \"Are you going to have any other slaves?\"\n\n\"No. We thought about hiring a whore named Casey, but decided against it.\"\n\n\"Why not? She's like my best friend!\"\n\n\"Well, Casey is smart and fun and has lots of personality. Those qualities are okay in small doses, but for the most part we don't want to be bothered with them. I decided on you as our fuck slave because you're not particularly bright or interesting. Are you all right?\"\n\n\"Yes, Betsy,\" I said between gasps. \"I'm just rubbing one out while we talk. I hope you don't mind.\"\n\n\"Not at all,\" said Betsy. \"Come at eight on Saturday. I'll email you the address.\"\n\n\"What should I wear?\"\n\n\"It doesn't matter, believe me. Any other questions?\"\n\n\"Yes, Betsy. Could you say that thing again? About me not being smart or interesting? Maybe like draw it out?\"\n\n\"Of course,\" she said. \"In fact, that's what I loved most about you the night we met. You were almost entirely a blank. You have no talents to speak of, right?\"\n\n\"That's right, Betsy,\" I said, fingers in my cunt.\n\n\"Never been good at anything in your life, aside from being a sex toy. And you just radiated ignorance. When's the last time you read a book?\"\n\n\"In high school, Betsy!\" I squeaked.\n\n\"It's hard to imagine a serious conversation with you. I'm sure I've never met anyone more trivial. Do you ever read a newspaper?\"\n\n\"No, Betsy!\" I screamed. How erect my nipples were! I pinched one of them with my free hand.\n\n\"Watch the news?\"\n\n\"Sometimes I watch Today,\" I panted, then cried \"Oh!\" coming hard. \"Ah! Ah! Ah!\"\n\nWhen my orgasm died away I heard Betsy's heavy breathing on the other end of the line.\n\n\"Thank you, Betsy,\" I whispered. \"Are you masturbating?\"\n\n\"Yes, Brenda. Smell your fingers. Don't say anything - just do it.\"\n\nI put the fingers I'd been masturbating with to my nose. Despite the bathwater, they smelled of cunt.\n\n\"Now put them in your mouth,\" she said, and I did that and made loud sucking noises into the phone.\n\n\"Oh, yes!\" Betsy cried as she came. \"Well, I'll see you on Saturday.\"\n\n\"Yes, Betsy,\" I said, but she'd already ended the call.\n\nI was really excited now. I called up Casey, who said, \"I was just going to call you, Brenda!\"\n\n\"Wow, that's so, like, coincidental. Listen, I've got this amazing news!\" And I told her about Saturday at Betsy's.\n\n\"That's wonderful, Brenda! You're going to have so much fun!\"\n\n\"I'm disappointed you won't be there,\" I said.\n\n\"It's okay,\" said Casey. \"I have this like date at the Presbyterian church on Saturday night, so I couldn't have done it anyway.\"\n\n\"That's so cool,\" I said. \"Listen, can you come over? I so don't want to be alone right now.\"\n\n\"Ten minutes,\" she said.\n\nCasey's so much fun to hang out with: we laugh and tell stories and have sex together. Sex with friends is so much nicer than sex with lovers - it's almost as good as sex with strangers. It's the lack of pressure, I think. She brought over some toys and we fucked each other with them, and then we laid together and talked. I told her how I'd run into Lester at the Target where he worked a couple days ago. I'd hauled him into the family restroom and rimmed and sucked him off there.\n\n\"It was great!\" I said. \"I don't give a fuck about him, and I'm not scared of him any more, and that made it so much more fun!\"\n\n\"That's so cool!\" Casey said. \"What did you get?\"\n\n\"I got a mouthful of cum,\" I said.\n\n\"I mean what did he pay you?\"\n\nI gave her a puzzled look. \"He didn't pay me anything.\"\n\nShe rolled her eyes. \"Brenda, sweetie, when a man fucks you you've got to get paid!\"\n\n\"Why? It was fun!\"\n\n\"Fucking is always fun!\" she chirped. \"You know how much I love it. But you've got to get paid.\"\n\n\"So you always charge?\"\n\n\"Absolutely.\"\n\n\"That's not true,\" I said triumphantly. \"You fuck me for free.\"\n\n\"You're just like a sister to me - you don't make your family pay for a fuck.\"\n\n\"What? I mean like do you fuck your actual sister?\"\n\n\"Well, she lives in Oregon, so not right now. But .&nbsp;.&nbsp;. I guess maybe my family's a little weird. But anyway, you're giving away way too much sex. That gangbang in the parking lot, your night as a human toilet, all the other things. You should totally get paid!\"\n\n\"I don't get it.\"\n\n\"People don't value things they get for free. Free things are disposable. If you give people sex for free, they'll throw you away eventually.\"\n\n\"Most women give away sex for free. Like wives.\"\n\n\"A smart wife makes her husband pay for sex, one way or another. She makes him buy her stuff or give her money, and she makes sure he knows what it is he's buying. Wives, girlfriends, mistresses, whores, they all do the same.\"\n\n\"But what about the men?\"\n\n\"What do you mean?\"\n\n\"Paying for sex can't make them happy!\"\n\nCasey giggled. \"Of course it can, silly! Don't you know men brag to each other about how much they spend on their wives and mistresses, and how much they pay for their whores? They're proud of paying for sex, and the more they pay the happier they are!\"\n\n\"It doesn't sound right.\"\n\n\"It's nothing but right! Let a man butt-fuck you for free, and before long he'll stop caring about butt-fucking you. Make him give you five hundred dollars and he'll be thrilled he's getting something so valuable. Trust me, sweetie! I've fucked hundreds of men, maybe thousands. I always make them pay .&nbsp;.&nbsp;.\"\n\n\"Even Randy?\"\n\n\"Especially Randy, 'cause I like him so much. I always give everybody their money's worth, they never complain, and they never get tired of me.\"\n\n\"Did you ever have a boyfriend?\"\n\n\"For a few months, before I decided on whoring as a career path. He figured out pretty quick that if he took me to a fancy restaurant or bought me an expensive present I'd let him do whatever he wanted with my body. But if he took me to McDonald's or for a walk in the park, I'd get a headache and have to go home early.\"\n\n\"And he was happy?\"\n\n\"He was till I dumped him.\"\n\n\"You sure are giving me a lot to think about, Casey.\"\n\n\"I'm glad to hear it. Just remember: if you want to be happy, be expensive.\"\n\n3. Mickey's Tap\n\nOn Friday Dr. Rosenberg seemed even more pissed off than usual. He scowled every time he saw me and didn't say a word. He didn't call me into his office for a fuck either, so I was pretty horny by the end of the day. To make matters worse, Casey was busy - something about a Scoutmasters meeting - and Randy had to get ready for an early court date.\n\nI decided to go out to Mickey's Tap, the place where I'd had my first gangbang the week before. I didn't think I could get away with anything like that again, but at least I could have a few beers and maybe pick somebody up or at least suck off Tony the bartender. I decided on my blue dress, which brought on fond memories of my first gangbang, and I didn't wear any underwear since you never know.\n\nAfter he brought me my Bud Light, Tony said, \"It got back to Mickey about me going outside to fuck you last Thursday. He said if I left the bar untended again he'd fire me.\"\n\n\"I'm sorry I got you in trouble, Tony,\" I said.\n\n\"It's okay,\" he said. \"You were just following your nature. Hey, I've got a lot of work to do.\" He went off to polish glasses.\n\nI drank my beer and thought about my situation. On this Friday night there were lots of couples in the bar, and I didn't see any likely prospects. I wondered how I was going to get all the way to Saturday night without sex.\n\nI downed my first beer quickly and signaled for a second, which I drank slower. Still, it wasn't long before I had to pee. I got up and made for the ladies' room.\n\n\"Hey, Brenda,\" Tony called. \"Where you going?\"\n\n\"The ladies', Tony. Do I need a hall pass?\"\n\n\"Sorry, babe. Mickey said the ladies' is off limits for you now. He heard you sucked off some guy in there, and I should physically prevent you going if I had to.\"\n\n\"But Tony!\" I said. \"I've got to pee!\"\n\n\"You can go outside. Here, have a napkin.\"\n\n\"Okay,\" I said, \"but this is no way to treat a regular customer.\"\n\n\"Not my call, Brenda,\" said Tony.\n\nI took the napkin he'd offered and went outside. It was a warm June night, so this wasn't the worst thing in the world. I went around the side of the building, into the shadows, and squatted with my back against the wall. After a beer and a half, it felt really good to pee.\n\nJust as my stream was getting good and strong, Mickey loomed over me and said, \"A word with you, Brenda.\"\n\n\"Mickey!\" I scolded. \"Can't you see this is a private moment?\"\n\nMickey was a big man that had gotten fat and greasy eating his own bar food. \"I've got something important to say to you,\" he wheezed, bending down to watch the pee jet out of me. \"I run a respectable business here, and I won't let you turn it into a whorehouse.\"",
        "\"I'd never dream of turning your place into a whorehouse, Mickey,\" I said. \"I didn't charge the guys that fucked me, and we didn't even do it in the bar. We came out to the picnic area.\" I reached under me, wetted my fingers in my piss, and put them in my mouth. \"Mmm,\" I said.\n\n\"You know very well what I'm talking about, Brenda,\" said Mickey, unzipping his pants and pulling out his cock. \"In a small town like this I can't afford a reputation as a place where people fuck on the lawn. Respectable patrons will stop coming, drug dealers will show up, and before you know it I'll be ruined.\"\n\nJust as my piss was running out, Mickey leaned forward and put his cock in my mouth. I held his thick thighs to steady myself while he fucked my face. \"I value your patronage, Brenda. I really do. But if you can't behave yourself, I'm going to ban you,\" he said. \"Understand?\"\n\n\"Aaagh,\" I said, which was the best I could do with my mouth full of his cock.\n\n\"No more blowjobs in the ladies',\" he said. \"No more gangbangs in the picnic area. Understand?\"\n\nHe drove in up to his pubic hair, and I coughed and drooled.\n\nHe pulled out of me and said, \"Understand, Brenda?\"\n\nI said, \"Yes, Mickey,\" and he seized me by the back of the neck, shoved me onto my hands and knees, and pushed into me from behind.\n\nPanting with the effort, he said, \"Stay out of the ladies. You obviously can't be trusted to use it the way it's meant to be used.\"\n\nI supported myself with one hand and reached between my legs to stroke my clit with the other. \"Yes, Mickey,\" I said.\n\n\"Fuck, that feels good!\" he gasped, then continued: \"If you need to piss, come back to my office and use my private bathroom. That way I can keep an eye on you. Oh, shit! I'm gonna come!\"\n\n\"No!\" I cried, but it was too late: he groaned, and thrust hard, and came in my pussy - a whole load of cum I wouldn't get to swallow.\n\nHe was saying something about the good, decent people that frequented his bar, but I was too preoccupied to listen. I squatted against the wall again and held my hand under my vag to catch the drips of cum as they ran out. Mickey was tucking away his cock and zipping his pants up while he lectured me.\n\nAs I brought my hand to my mouth and licked the cum out of my palm, he was finishing up, \".&nbsp;.&nbsp;. a place for respectable people like Dr. Rosenberg, who want a quiet place for the occasional drink.\"\n\n\"I understand, Mickey,\" I said. \"I won't embarrass you again.\"\n\n\"Good,\" he said. \"Tell Tony I said the next one is on the house.\" Then he waddled away towards the back entrance and I headed back into the bar.\n\n\"Tony,\" I whispered as he brought me my free beer, \"I absolutely need to suck your cock!\"\n\n\"No way,\" he whispered back. \"You're gonna get me fired.\"\n\n\"Shit,\" I said, and stared gloomily around the room. There were still no single men here, but something caught my eye back in a dark corner. It was a woman, and she seemed to be staring at me.\n\nWhen she saw me looking at her, she got up, came to the bar, and stood in front of me. She was in her thirties or so, trim and rich-looking, with porcelain skin and silvery blond hair. Her face was hard and unfriendly. For some reason I imagined her biting my tit, and my pussy got tingly.\n\n\"Hi!\" I said.\n\n\"I just wanted a closeup look at the woman my husband's been having an affair with,\" she said.\n\n\"Um, who's your husband? I mean, like, who are you?\"\n\n\"How many husbands are you having affairs with?\" she said.\n\n\"I don't have affairs, exactly,\" I said, \"but I've fucked at least two married men that I know of. In the last week, I mean.\"\n\n\"That you know of?\"\n\n\"Men don't always tell me a lot of details about their lives. There isn't a lot of time to talk, you know.\"\n\nShe looked like she'd stepped in dog shit. \"I'm Sylvia Rosenberg,\" she said, \"and you are shameless.\"\n\n\"Actually, I'm Brenda,\" I said. \"Are you going to like make a scene?\"\n\n\"Not if you leave my husband alone.\"\n\n\"Could we like talk at your table?\"\n\nShe sighed, turned, and walked to her table. I followed and sat across a corner from her - close enough to talk, but not too close.\n\n\"I want you to leave my husband alone,\" she said.\n\n\"You should talk to him about that,\" I said. \"I work for him, and I like really need the job. If he calls me into his office and fucks me there what can I do about that?\"\n\n\"But you just as much as admitted you're a slut. You don't even know how many married men you're .&nbsp;.&nbsp;. you're .&nbsp;.&nbsp;.\"\n\n\"Fucking, Mrs. Rosenberg. It's true. I've been totally out of control for like a week, and I can't seem to stop myself. That makes it even harder to say no to Dr. Rosenberg when he wants to fuck me.\"\n\n\"It's not just at work. I hear you attended a sex party with him last weekend.\"\n\n\"It's not like I was his date, Mrs. Rosenberg. I didn't go there with him. I was tied up in the men's room - as a urinal, you know - and he came in and .&nbsp;.&nbsp;.\"\n\nShe flinched, and I stopped. \"I guess you don't want to hear this.\"\n\n\"You were .&nbsp;.&nbsp;. a urinal?\"\n\n\"I was tied up, and I had this like ring in my mouth, to hold it open, you know, and a whole lot of men came in and pissed in my mouth. It was incredibly hot, Mrs. Rosenberg.\"\n\nShe shivered. \"Is that all he did?\"\n\n\"He fucked my ass and then he face-fucked me. There was a little shit on his cock, and it made me throw up. Thinking about how I threw up that night always makes me wet.\" I wanted to touch my pussy, but forced myself to keep both hands on top of the table.\n\n\"And he does this at the office too?\"\n\n\"He's a wicked fuck, Mrs. Rosenberg. You're really lucky to have a husband like that.\"\n\nShe made a face. \"Those are disgusting things he did. He's tried to persuade me to let him do things like that, but I won't let him. Just knowing he wants that kind of thing .&nbsp;.&nbsp;. it makes my skin crawl when he touches me.\"\n\n\"Listen, Mrs. Rosenberg. It's maybe not my place to say, but if you don't want to fuck him, why do you care what he does when he's not home?\"\n\n\"You're right. It's not your place to say. You're a slut, and your idea of sex is disgusting and perverted.\" She was turning red as she spoke. \"Anal sex, drinking urine, eating feces.\"\n\n\"I didn't eat feces, Mrs. Rosenberg. There were just like these little flecks of shit on his cock.\"\n\n\"Vomiting, promiscuity, God knows what else.\"\n\n\"Gangbangs, ass-licking, swallowing cum,\" I sighed, \"and I love it when people insult me.\" I put my hand under the table, hoping nobody would notice.\n\n\"The thought that he's even touched a girl like you fills me with loathing,\" she continued. \"It's bad enough you're so .&nbsp;.&nbsp;. plain and coarse, but your clothes, your makeup, it's trashy and low. What are you doing?\"\n\n\"Keep talking, Mrs. Rosenberg,\" I panted, staring at her. She was so fucking beautiful.\n\nShe seemed to be sweating. \"It isn't .&nbsp;.&nbsp;. it isn't the, um, infidelity I mind, but, um .&nbsp;.&nbsp;. um, the, uh, lack of taste. Please stop doing that.\"\n\n\"Mrs. Rosenberg,\" I gasped, \"I so want to eat your cunt.\"\n\nHere's a way that women are different than men. Tell a man you want to give him oral sex and he hauls it right out for you, but what Mrs. Rosenberg did is slap my face. People all over the room turned to look, then quickly went back to their conversations. We weren't their problem.\n\nSuddenly I was sober. I took my fingers out of myself and said, \"It's been nice talking to you, Mrs. Rosenberg, but I've got to piss.\" I got up, walked over to the bar, waved at Tony, and said, \"Mickey told me I could use the bathroom in his office.\"\n\n\"I know,\" he said. \"He's gone home, but here's the key.\" He took a key out of his pocket and handed it to me.\n\nMickey's cluttered little office was at the end of the same little hallway with the ladies' and men's rooms. I unlocked the door, went in, closed it behind me, and looked around for the bathroom. There was a door on the other side of his desk - it had to be that. I made for it and was just reaching for the knob when the office door opened.\n\nI turned around, hoping Tony had come for a blowjob, but it was Mrs. Rosenberg.\n\n\"The ladies' is the door you passed on the left,\" I said.\n\n\"I know,\" she said, closed the door behind her, and turned the lock. She came towards me, saying, \"You were on your way to the bathroom. Go ahead.\"\n\nShe had this scary look, like she was going to do something crazy, and I thought I should deal with that somehow, but I had to pee real bad - in fact, it was getting to be an emergency, and I couldn't think straight.\n\n\"Okay,\" I said, opened the door to Mickey's bathroom, and stepped inside.\n\nI tried to close the door, but she stopped it with a hand, peering inside.\n\n\"It's filthy,\" she said with a rigid smile that showed her teeth.\n\nI looked around and saw it was true. The walls were water stained, there were brown streaks in the ancient sink, and the toilet seat was up so you could see the rim was dingy and yellow with dried piss.\n\n\"Yeah,\" I said.\n\n\"You can't go in a toilet that dirty,\" she said.\n\n\"It's okay. I've seen worse.\"\n\n\"You're going to have to clean it,\" she said.\n\nI looked at her. There was this manic light in her eyes.\n\n\"It's really okay,\" I said. I was thinking about escaping now instead of pissing, but she was blocking the door. \"Do you mind if I just .&nbsp;.&nbsp;.\"\n\nShe seized my shoulders with surprisingly strong hands, spun me around, and pushed my face down towards the toilet. \"Clean it up, Brenda,\" she said. \"You like piss so much, you should love this.\"\n\n\"No!\" I whined. The toilet was horrible: it probably hadn't been cleaned in two weeks. A couple of Mickey's pubic hairs were stuck to the rim. But somehow I didn't have the will to resist as she pushed my head towards the cold porcelain. My pussy tingled, just like it did before when she was insulting me.\n\n\"Lick it,\" she commanded in a voice as cold as ice, pushing me closer.\n\nI put out my tongue and touched the rim tentatively with the tip. But at that moment she gave my head a shove, flattening my nose and lips against the dirty toilet rim.\n\n\"Fucking lick it!\" she said.\n\nThe taste of stale piss was vile, and the smell was worse. The tingling in my pussy turned into a firestorm, and I gave the toilet a long lick, breathing in the dirty bathroom smell and catching up one of the pubic hairs in my mouth.\n\n\"Go on,\" said Mrs. Rosenberg. \"Clean it all up.\"\n\nI didn't have to be forced now: I licked up the stale piss, working my way around the rim, and I didn't notice till it was as clean as a tongue can make it that her hand wasn't on the back of my neck anymore.\n\nI sat up when I was done and looked at her. She was naked, her slender body a brilliant, frosty white, her breasts small and pink-nippled.\n\n\"God, what a skank,\" she said. She pushed me down onto the floor and straddled me. I looked up between her legs: her pubic hair was blond and neatly trimmed, her neat little lips just peeking out. As pussies go, it was very upper crust.\n\nWith red-nailed fingertips she pulled her pink lips apart and sat on my face, slit closing over my nose and mouth. She didn't give me a chance to lick her, though I tried: instead she took a handful of my hair in her fist and humped my face, chanting \"Bitch! Cunt!\" over and over. She slid back and forth, bounced on me, and her pussy got wetter and wetter till her love juice was running down my cheeks.\n\nI loved her pussy, her contempt, the way she was mauling my face: hotter by the second and rubbing my clit frantically, I gasped when she let me get a breath, and finally I spasmed and thrashed as my orgasm shook me, and my bladder was still so full I lost control and my piss splashed my thighs and puddled between my legs, wetting my ass. Fortunately my dress was up around my waist and didn't get wet.\n\n\"Fuck!\" Mrs. Rosenberg screeched as she came, riding my face like a bronco.\n\nWhen she was calmer, she stood up and looked down at me - at my wet face and the puddle between my legs.\n\nPulling her dress on over her head, she said, \"You'd better clean all this up.\" Then she stepped into her panties, pulled them up, and left the bathroom without a backwards glance.\n\nI cleaned the floor with some paper towels, thinking Mrs. Rosenberg was an asshole just like her husband. Then I went back to the bar. Mrs. Rosenberg had left. Tony gave me a disgusted look and said, \"Again, Brenda?\"\n\n\"Totally not my fault, Tony,\" I said. \"I was attacked by an insane vampire lesbian.\"\n\n\"Right,\" he said.\n\n4. In the cable store\n\nBetween my encounter with Mrs. Rosenberg and my excitement about Betsy's party, I had trouble sleeping that night. I got up to watch TV, but there wasn't much on. It occurred to me that what with the raise I'd extorted from Dr. Rosenberg and the money I'd earned whoring, I was really rich now, and I ought to upgrade my cable service.\n\nCalmer for having made some kind of decision, I went back to bed and slept till ten, and then I had some instant coffee and drove down to the cable store.\n\nThere were two guys in the store: one was at a counter with his back to me, writing in a notebook, and the other approached with a wide smile. His name tag said Jeremiah, and he had an \"Ask Me About Jesus\" button. He was in his early twenties, I guessed, clean cut, and handsome. He gave me a wolfish smile as I walked in.\n\nI said, \"I want to upgrade my service. I'll take HBO and Showtime and all the porn channels you've got.\"\n\nHe looked at me with interest. \"Your boyfriend like to watch those?\"\n\n\"I haven't got a boyfriend.\"\n\n\"No? A beautiful woman like you?\"\n\n\"Sad but true.\"\n\n\"I think we're all happiest when we're in committed relationships,\" he said, leading me towards a counter with a computer on it.\n\n\"Maybe,\" I said, \"but the last one I was in didn't work out so great.\"\n\n\"That's too bad,\" he said. \"I'm not in a relationship either, but you know, ever since I committed myself to Jesus I've got this confidence that He'll find the right wife for me. God has all our best interests at heart.\"\n\n\"I know just what you mean!\" I exclaimed. \"I trust in Him completely, and lately I've just like felt His hand guiding me in everything I do.\"\n\n\"That's so great to know .&nbsp;.&nbsp;. uh, what's your name?\" His hands were poised over the keyboard.\n\nI told him my name, and the other guy looked around and stared.\n\n\"Brenda, of course!\" Jeremiah exclaimed. \"It's terrific to meet you! I'll just fetch your record up here .&nbsp;.&nbsp;. it'll only take a second.\"\n\nThe other guy, who was in his thirties I guess, blond and bearded, sidled around the end of the counter and over to the front door, which he locked, turning around the \"Open\" sign. My nipples tingled.\n\nJeremiah swiveled the monitor towards me and said, \"Why don't you look over this list of channels, Brenda, and tell us which ones you'd like.\" He came around the end of the counter and stood next to me, looking on.\n\nI peered at the monitor, which had a list on it in fine print. \"Well, HBO and Showtime, like I said, and, um, Brazzers and MoFos and .&nbsp;.&nbsp;.\"\n\nJeremiah touched a key, and the screen dissolved to a picture of me tied up in a stall between two urinals. I had a ring gag holding my mouth open, and a man with his back to the camera was pissing through the ring. The picture was a little grainy, but the stream of piss was clearly visible, and I thought it was a pretty good picture of me.\n\n\"How did you get this?\" I demanded, turning towards him. Then I said, \"Fuck!\" He had his fingers wrapped around the biggest cock I'd ever seen - thick as a salami, long as my forearm.\n\n\"Oh my God, Jeremiah,\" I said, \"is that real?\" I didn't wait for an answer, but dropped to my knees and crammed as much of it as I could into my mouth. I couldn't get more than about a third of it in, but he seemed happy: he gasped and moaned and thrust, and I guessed that he hadn't met any girls that could take even as much of him as I did.\n\n\"Fuck yeah!\" he said, and rammed into me so hard it was like agony - my jaws were forced so wide open they hurt, and his cock bumped the back of my throat, way behind my tonsils.\n\nWithin a few seconds he was all the way in! I was deep throating this whale of a cock, his pubic hair was tickling my lips, I was making loud rasping noises from somewhere inside me, and I felt happy and proud that I could do this.\n\n\"Praise the Lord!\" he cried.\n\nJust as I'd gotten Jeremiah in all the way, the older guy, who had undressed and had a hard tan body, hauled me to my feet so I was bent at the waist, lifted my dress, pulled down my panties, and shoved into my pussy, which had gotten sopping wet within a few seconds of my laying eyes on Jeremiah's cock. It was nice getting fucked from behind, but really Jeremiah was the main act - his cock was so amazingly big, going way down inside me and gagging me with every stroke.\n\nIn back of me, the older guy was probing my ass with a finger. \"Nice stretchy asshole,\" he commented. I guessed that was a compliment, so I said \"Hank oo\" when I had a chance. By then he had two fingers in my ass and was saying \"Gonna fuck this ass.\" He spat into my crack.\n\nI was glad that guy was going to go first, because he'd stretch it for Jeremiah, who'd totally tear me up if he went first. I guess Jeremiah had the same idea, because he said, \"Yeah, stretch her for me, dude.\"\n\nThe older guy pulled his cock out of my pussy and slowly pressed into my ass. \"That's so fucking fine,\" he said, but all I could do was groan way back in my throat, because Jeremiah's cock was still plugging me up.\n\nSomeone was rattling the door and knocking, but we didn't pay any attention, and we were too far back in the store for them to see.\n\n\"Gimme a turn in that ass, dude,\" said Jeremiah, and I braced myself for his big cock in me. But Jeremiah paused to undress, and meanwhile the older guy was shoving into my mouth, and in spite of the enemas there was a smell and a slight bitter flavor. But I didn't have any time to worry about it, because Jeremiah pushed that monster of his into my ass, and I had to pull away from the other guy's cock and shout \"Fuck!\" because the pain was so sudden and sharp. The guy took my head in his hands, pulled me towards him and shoved into me again.\n\n\"Dude!\" said Jeremiah. \"This is totally the ass! This is the ass to end all asses!\" He was already pounding me furiously, and all I could say about it with the other guy's cock in my throat was \"Urrghh!\"\n\n\"Babe, you gotta sit on it,\" he said, and laid on the floor while the other guy guided me onto him.\n\nSitting on Jeremiah's mountain of cock with my back towards his head, my ass was stretched as far as it had ever been, but somehow it was starting to feel good. I supported myself with my hands on his chest and bounced on him. You see this in porn videos, but it's harder than it looks, and tiring.\n\nThe other guy squatted, grabbed my legs and lifted them, and shoved into my pussy. Now that really is awkward. You can't easily support yourself with your arms, but you have to sort of lie back on the guy underneath, and he doesn't have very good leverage for thrusting into your ass, but just has to sort of wiggle back and forth and stimulate himself as best he can. Jeremiah was surprisingly good at it - I mean, you don't really expect that somehow from a guy wearing an \"Ask Me About Jesus\" button, but he caught me in his arms and supported me while the other guy fucked me, propping himself up with his hands on the floor.\n\nSo double penetration was pretty amazing - that way too full feeling, and not really being in control of your body, but just giving yourself to these strangers. I wondered what the other guy's name was and was just about to ask when he pulled out of my pussy and crammed himself into my ass along with Jeremiah's monster cock.",
        "\"Fuck!\" I screeched. It was way too much - I thought it was going to tear me apart - but the other guy's hands were squeezing my tits, and his fine tan body was sweaty, and his eyes were blue and sort of faraway, and Jeremiah's chest was slippery under me, and his arms were so strong. \"Fuck!\" I said again, but this time it was a kind of sigh.\n\nThis was so cool. I just laid on top of Jeremiah's hard body and let them handle me and pound my ass. My mind drifted, and strangely I found myself thinking about the Rosenbergs. They'd missed out on something they could have had together, fucking in the bathroom. I pictured this guy and Jeremiah making me lick a dirty toilet and then dunking my head in it. That was cool, but then I pictured Dr. and Mrs. Rosenberg doing the same thing, and suddenly sensation exploded through my body and I came screaming.\n\nThe other guy pulled out of me, and I sat up on Jeremiah's cock so he could jerk off in my face. I opened wide for him, and he came with about half a dozen nice strong spurts, most of which he managed to get in my mouth. I swallowed his cum, and he was nice enough to put his cock in my mouth so I could suck off the few drops that were wetting the end.\n\nJeremiah groaned under me, and I scrambled off him quick so I could catch his cum. I sucked him, gagging myself on that amazing cock till he filled my mouth up with an big load of warm cum.\n\n\"You know, Brenda,\" said Jeremiah as him and the other guy got dressed, \"A good Christian woman doesn't fuck around having perverted sex with just anybody that asks. She cleaves to one husband and has perverted sex as he commands.\"\n\n\"Is that right?\" I said. I'd found a tissue in my purse and was wiping my face.\n\n\"Completely,\" he said. \"You need a boyfriend. Somebody that can satisfy your needs and like control your baser impulses.\"\n\n\"Thanks for the advice, Jeremiah,\" I said. \"I'll give that some thought.\" The idea of having a boyfriend didn't appeal to me much, but the religious argument was troubling.\n\nThe blond guy, whose name turned out to be Steve, was the manager, and he told me he'd make sure all my cable was free the rest of the year. I gave him a kiss and squeezed his ass to thank him.\n\nI went home, laid on my bed, and explored my asshole with my fingers. It wasn't gaping, but it was definitely stretched. I got some lubricant in the bathroom, laid in the bathtub, and tried to put my hand in my ass. It was hard to get the right angle to do it, and then I couldn't get more than three fingers in me before it started to hurt and I gave it up.\n\n5. The upstairs room\n\nI had lunch, went to bed, and slept until it was so late I only just had time to eat dinner before I had to go do my slave bit.\n\nAt eight o'clock I knocked on the door of Betsy's imposing mansion. It was opened by a severe-looking redheaded woman in a skimpy leather maid's outfit. She scowled at me and said, \"Well, what are you waiting for? Get the fuck in here!\"\n\nI went in, and she slammed the door behind me, turned, and stalked off into the house. I guessed I was supposed to follow her.\n\nI trailed her through a vast living room and dining room and an expensively appointed kitchen to a stairway in the back. We went up three flights and came out into a narrow and dark hallway with two doors on each side. The maid opened one of these and said, \"In here.\"\n\nIt was a small room containing a table about four feet wide and six feet long. On one side of it there were upright poles made of iron, about five feet apart, with cuffs on the ends. About a foot from the other side there were cuffs attached directly to the table. There were various other straps too, whose function I never did figure out.\n\nThe table was bolted to the floor. Attached to it, on an arm that could be moved in various ways, was a machine with two rods with dildos attached to the ends - a fucking machine. There was nothing else in the room.\n\n\"There's a bathroom there,\" said the maid, pointing to a door. \"You'd better go now.\"\n\nI didn't really need to, but I did as she said and managed to pee some.\n\nWhen I got back the redhead said, \"Strip.\"\n\nI undressed, wondering if I'd get to fuck the maid. She was kind of pretty, and very scary.\n\n\"Get on the table,\" she said. \"Do I have to tell you every fucking thing?\"\n\nI climbed up on the table, and she positioned me so I was lying flat on my back with my ass hanging a little off one side. She attached my legs to the poles so they were up in a wide V; she cuffed my wrists to the table so my arms were spread wide.\n\n\"You'll spend the night here,\" she said.\n\n\"What if I need to pee?\" I asked.\n\n\"Just say something. Maybe someone will come.\"\n\n\"Maybe?\"\n\n\"Maybe.\"\n\nBetsy came in and said, \"Well, done, Mo. You can go put the food and drinks out now.\"\n\n\"Fuck you,\" said Mo, and left.\n\n\"Mo is my house slave,\" said Betsy. \"She takes care of my needs and tells me to go fuck myself every hour or so.\"\n\n\"What's going to happen at this party?\" I asked.\n\nBetsy slid a finger into my pussy and fucked me as she talked.\n\n\"It's a sort of open house. I've invited lots of people, and they'll come and go as they please. It's a sex party, and they'll fuck each other, but anyone that doesn't have anybody better to play with can come in here and fuck you. As you can see, all your holes are accessible to anyone that wants to use them; or they can start up the fucking machine here and have fun watching you squirm.\"\n\n\"It sounds kind of scary,\" I said.\n\n\"If things get to be too much for you, shout 'Red.' Even if you're alone, someone will hear. Someone will be watching and listening all night.\" She pointed at a video camera hanging from the ceiling and pointed down between my legs.\n\nI wondered if that somebody would be too busy masturbating to rescue me if things got hairy, but I didn't say anything.\n\n\"Do you have any questions?\"\n\n\"Um, I asked Mo what I should do if I needed to go to the bathroom .&nbsp;.&nbsp;.\"\n\n\"Just say you need to go. Someone will hear.\"\n\n\"Mo said maybe.\"\n\n\"If it gets too urgent, just go on the floor. I'm going to leave you now. Someone will let you loose in the morning.\"\n\n\"Betsy?\"\n\n\"Yes?\"\n\n\"Are you going to fuck me tonight?\"\n\n\"If I get bored enough.\"\n\nShe left, and I just relaxed as well as I could, given that my situation wasn't all that comfortable.\n\nThere was no clock in the room, no windows, and nothing at all on the white walls. The place was a blank, and I had nothing at all to do and no way to know how much time was passing. I wished they'd left me with a television or something.\n\nIt seemed a very long time before someone came into the room. It was Mo, carrying a bottle of lubricant. Now she was wearing a tiny maid's skirt, hardly more than a belt, and nothing else. Her tits were freckled and her pubic hair was bright red.\n\n\"Are you here to fuck me?\" I asked.\n\n\"I'm not a goddam masochist,\" she said. \"Betsy told me to stretch you.\"\n\n\"Stretch me?\"\n\n\"Nobody wants to be bothered with tight holes.\"\n\nShe poured some lubricant over her right hand, set down the bottle, and rubbed her hands together to spread it around. Then she inserted two fingers into me.\n\n\"Mmm,\" I said. \"That's nice.\"\n\n\"This is not sex, you fucking moron,\" said Mo, tugging at my vag with the fingers of both hands.\n\n\"It's still nice,\" I said.\n\nShe put all the fingertips of her right hand together and shoved them into me. I gasped as she fucked me hard with her fingers, pushing into me more with each stroke.\n\n\"Let's get this straight,\" said Mo. \"You're a fucking loser, a nothing. You're not sexy and you're not good looking.\"\n\n\"Oh!\" I sighed, squirming as she fucked me.\n\n\"And I don't like you,\" she continued. She had worked her fingers in as far as the knuckles now, and the feeling was intense.\n\n\"Yeah, more,\" I said.\n\n\"Don't worry,\" she said. \"I'll be in up to the wrist in a minute.\"\n\n\"I mean more talk,\" I said. \"Tell me more about how you don't like me. That's so hot.\"\n\nShe shoved once extra hard. \"Ow!\" I whined.\n\n\"You're fucking weird, you know that?\"\n\n\"I've figured that out,\" I said.\n\n\"I don't know what all these people see in you,\" she said. \"Downstairs everybody's milling around, eating their canap\u00e9s and drinking their fucking martinis, and talking about how they're gonna come up here and piss on your face. And meanwhile you've got all the sex appeal of an eggplant.\"\n\nDown below she'd managed to work her knuckle into me: the most painful part of the fisting was done, and she was twisting her hand inside me, pushing farther in. The feeling of fullness was intense, and I was gasping for both the sensation and Mo's insults.\n\n\"Your cunt looks like a mess of cooked collards,\" she continued, staring fixedly at my crotch, \"all floppy and soggy, and too fucking big.\" Her voice was getting low and breathy.\n\n\"Fuck me!\" I cried.\n\nShe slowly withdrew her hand from me, lubricated it again, and slid a finger into my ass.\n\n\"Your ass is too big,\" she said as she worked on stretching my hole, \"and it looks like a fucking cauliflower. A shit-stained fucking cauliflower.\"\n\nShe was working fast, with three fingers already inside me. \"Yeah, more!\" I said. It already hurt as much as Jeremiah's cock.\n\n\"You've gotta work harder on cleanup after you take a shit,\" said Mo, frowning. \"Only sick bastards like a dirty asshole: most people want you clean when they sodomize you.\"\n\nHer hand felt so fucking good. \"Shit!\" I groaned.\n\n\"Your asshole is stretchy,\" said Mo. \"You been putting great big things in there?\"\n\n\"It was fucked by the world's biggest cock this morning,\" I said.\n\n\"Jesus,\" she said. \"I've got almost my whole hand in already.\"\n\n\"Shit yeah, more!\" I shouted.\n\nShe was fist-fucking me with one hand and rubbing herself with the other, and I was getting pretty near an orgasm, when she abruptly pulled her hand out of me, climbed onto the table, and crawled on top of me in a sixty-nine.\n\n\"Eat me, cunt-lips,\" she snarled, and planted her face between my legs.\n\nShe had left her pussy untrimmed, and I loved her red pubic hair and her pale pink pussy, glistening with her love juice. We ate each other till we both came.\n\n\"Nice show,\" said Randy from the doorway. He was naked and held his hard cock in his hand.\n\n\"Hi, Randy!\" I said, really glad to see him.\n\n\"Fuck you,\" said Mo, getting off me.\n\n\"Lovely to see you, Mo,\" said Randy. \"Hi, Brenda.\"\n\nMo left without a word.\n\n\"Your asshole is gaping,\" said Randy.\n\n\"Mo stretched it. Put something in there, will you?\"\n\n\"Gladly, he said, came to the table, and put his cock in my ass.\n\nAfter Randy, there was Freddy, a rich man that looked like the Monopoly guy, and he pissed all over me. There was Betsy, who sat on my face, and uncle Stu, who fucked my pussy and ass and came in my mouth, and Mr. Douglas, who owned the hardware store and whipped my tits with a silly little whip made of yarn or something while the fucking machine was going in my pussy and ass. There was Billy, a high school friend, now a cop, who pretended to arrest me and held his gun on me while he fucked me, and Mrs. Wallace, who owned a coffee house downtown, and her piss dribbled into my mouth while I ate her out. And there were lots of others, and I guess it must have been way past midnight when Jeremiah came in.\n\n\"Jeremiah!\" I said. \"I'm so glad to see you!\"\n\n\"I've come to save your soul,\" he said solemnly.\n\n\"My soul's in pretty good shape already,\" I said.\n\n\"So you think,\" he said, unbuttoning his shirt, \"but I know better. \"You're flirting with disaster, fucking all these people, whoring yourself out. Look at you! Your cunt and asshole are gaping and this room reeks of piss and sweat.\"\n\n\"Yeah,\" I sighed. \"It's been a great night.\"\n\nHe pushed down his pants, climbed up on the table, and stood over me. Limp, his cock looked like a fire hose.\n\n\"It's not just the numbers,\" he said. \"I understand you've been fucking that boss of yours, Rosenberg.\"\n\n\"He's an amazing fuck,\" I said.\n\n\"He's a Jew,\" said Jeremiah, \"and he's damned. Don't you know the Jews killed our Lord?\"\n\n\"I remember the Bible said something about Jews, but I didn't know that part,\" I said.\n\n\"Well they did,\" said Jeremiah, \"and Rosenberg is one of them. You're sleeping with a murderer.\"\n\nThat didn't make any sense. Jesus lived way before Dr. Rosenberg was born. But before I could say that, Jeremiah started to piss, and it was like this incredible yellow torrent that splashed all over my face before he managed to aim it into my open mouth. \n\nGulping down his piss, I thought about what he was saying. I didn't even know Dr. Rosenberg was Jewish - he looked pretty much like everybody else. But if he was Jewish, and he was really damned, maybe Jesus would be mad at me for fucking him.\n\nI'd just resolved to ask the Reverend Edwards about it during my Bible lesson later that day when Jeremiah squatted above my head and shoved his cock into my mouth.\n\n\"Babe,\" he said as his dick stiffened, \"you've got to get yourself together and become a good Christian woman.\"\n\n\"Mmmff,\" I said.\n\n\"That means getting married to a good man, quitting your job, and being a good obedient housewife. Have kids, cook dinner. You know.\"\n\nI tried to picture myself as a mother, but it didn't compute. \"Hakhkhkh,\" I said as he jammed his cock halfway down to my stomach.\n\nHe climbed off the table and rammed that elephant cock into my pussy. It hurt even though Mo had stretched it and a whole lot of people had fucked it that night.\n\n\"I don't know how to cook,\" I said.\n\n\"You can learn. I can help. I know you've got appetites, babe. I can satisfy your appetites, and you can satisfy mine. You haven't seen half of what I can do.\"\n\n\"I can guess,\" I said. \"Oh, fuck!\"\n\nHe'd just shoved his cock into my ass and was banging me furiously. \"Brenda, I'm asking you to marry me. I'm going places in cable, babe; I'm a man with a future. And we go to the same church, and we both love Jesus. And I really need a woman that'll drink my piss, worship my cock, and take it up the ass.\"\n\nHe pulled out of me and jerked off, holding his cock angled upwards. His cum arced over my body and splattered on my face.\n\n\"What do you think, Brenda?\" he said as his cock wilted in his hand.\n\n\"I'm really flattered, Jeremiah,\" I said. \"I can't answer right now, but I promise I'll think about it.\"\n\n\"Do that,\" he said. \"I know we'll be really happy together.\"\n\n6. Mrs. Rosenberg's apology\n\nAfter Jeremiah dressed and left, I thought over what he said. I liked his cock a lot, and I liked the way he used it, but I didn't know if I could be monogamous the way he wanted me to. I also wasn't sure Jesus really wanted me to obey a man in all things. I couldn't remember the Reverend Edwards ever saying anything like that.\n\nI fell into a doze till the creaking door hinge woke me up.\n\nIt was Mrs. Rosenberg, wearing a white blouse and jeans, but somehow looking very rich and glossy. She was a vision of perfection.\n\n\"I didn't come here to abuse you,\" she said. \"I don't know what got into me last night. I've never done anything like that before. It's been preying on my mind; I've hardly slept. I wanted to say .&nbsp;.&nbsp;. I'm sorry.\"\n\n\"It's okay, Mrs. Rosenberg.\"\n\n\"No, it's not okay!\" she said, her voice rising half an octave. \"It was vile, making you lick that dirty toilet. I'm amazed it hasn't made you sick. Doing something like that could kill you!\"\n\n\"I don't think so, Mrs. Rosenberg.\" I'd tried licking my own toilet in the afternoon, but it was pretty clean now that Lester was out of my life, and besides, it's not the same when someone isn't forcing you to do it.\n\n\"I was just .&nbsp;.&nbsp;. angry, I guess, and my anger made me want to do things to you.\"\n\n\"That's understandable, Mrs. Rosenberg.\"\n\n\"And the way you just make your body available to everyone. I mean, here you are, with your .&nbsp;.&nbsp;. your cunt just available like this .&nbsp;.&nbsp;.\"\n\nShe put a hand on my pussy and continued, \"I can't get it out of my mind, your pink tongue sliding over that cold dirty porcelain, and then .&nbsp;.&nbsp;.\"\n\nShe slid a finger into me and I said, \"Ooooh, yeah, Mrs. Rosenberg!\"\n\n\".&nbsp;.&nbsp;. the feeling of your lips in my cunt .&nbsp;.&nbsp;. your tongue on my clit .&nbsp;.&nbsp;.\"\n\nAbruptly she yanked her fingers out of me, got out of her jeans, climbed up on the table, and sat on my face, knees around my head. Her voice was hoarse as she said, \"Fucking eat me, whore!\"\n\n\"Mmf,\" I said as I ate her out. She reached for my pussy as she rode me and slid her fingers in again. \"Fuck me!\" I cried, voice muffled in her gaping slit, nose in her crack, where her anus was so pink and perfect, the skin around it so white and smooth. \n\nShe was even wilder than she was the night before, grinding and bouncing, and now and then pulling her fingers out of me to swat at my clit, making me squeak.\n\nShe got into a squat above my face and pressed her sweet pink aristocratic asshole to my lips. \"I can't get your face out of my fucking head,\" she rasped as I opened my mouth around her and licked her hole. \"I want to do horrible, disgusting things to you .&nbsp;.&nbsp;.\"\n\nMy pussy was running and my mouth watered as I rimmed her. \"Yeah, Mrs. Rosenberg,\" I murmured into her crack, \"do horrible things to me!\"\n\nShe sat down heavier and rocked on me, smashing my nose and lips. \"Fuck! Fuck!\" she sobbed, rubbing her blond cunt with one hand and massaging a tit through her blouse. \"What are you doing to me? You're turning me into a pervert!\"\n\nI couldn't hold still, I was so excited. My body was spasming, wrists and ankles jerking against my restraints. \"Fuck, more!\" I whined into her crack.\n\n\"Yeah, fucking more!\" she hissed in a voice like the Wicked Witch.\n\nShe stood up, straddled my head, facing my feet, and spread her neat pink pussy lips: inside she was hot and wet: her vag gaped and her asshole flexed as she tried to push some piss out.\n\n\"Yes, please!\" I begged, longing for her piss. But she couldn't get any out. She must have strained at it for more than a minute, but she was dry as dust.\n\n\"Fuck!\" she said. \"I can't do it!\"\n\n\"Try squatting,\" I said.\n\nWith her asshole right above my face, she strained.\n\n\"I .&nbsp;.&nbsp;. can't,\" she groaned, bent forward and hugged her knees.\n\n\"Uh!\" she said, straining, and let out a fart - a short, loud one that exploded two inches from my nose.\n\n\"Oh no!\" she cried.\n\nI felt the wind of it on my face and caught a powerful blast of sulfurous fumes. I gagged and turned my head away, but just a second later a huge wave of arousal washed over me. \"Fuck that's hot!\" I yelled before she could say anything more. \"Give it to me again!\"\n\n\"You're so fucking trashy,\" she said. But she strained again, and her ass dilated a couple of times, and on the third try she managed a big rasping one that lasted a couple of seconds.\n\nI breathed deeply, coughed, and said, \"More!\"\n\nOnce again her asshole widened and pushed out, more and more as she strained. A few drops of piss dribbled out of her onto my chin.\n\n\"I can't!\" she gasped, and I hissed \"More!\"\n\nA big brown drop oozed out of her ass and hung there in the entrance to her hole. Then she farted, and the ooze splattered on my face, from the top of my nose down to my mouth, where I licked at it reflexively.\n\nIt was bitter and wicked, and it made me queasy, but I didn't have time to think about it, because she jumped up and pissed, not hesitating now. She pissed on my face, washing off the splatter, and then into my mouth. It was all I could do to get it all down, her stream was so strong.\n\nWhen she was done she looked down between her legs and said, \"You are disgusting.\"\n\nThen she sat on my face again and scrubbed her pussy against my lips, riding me till her wet pissiness gave way to slick love juice, and she was sliding back and forth so I was licking her wet bitter asshole when she slid forward, and her slippery wet pussy when she slid back. She humped me faster and rougher, shouting \"Eat! me! cunt!\" till she came with a screech.",
        "I gave her pussy soft licks while she caught her breath. When she could talk again, she said, \"I'm leaving the shithead. I'm going to tell him tonight.\"\n\n\"I'm sorry, Mrs. Rosenberg,\" I said. \"I didn't want to break up your family.\"\n\n\"I never liked sex with him. I didn't like .&nbsp;.&nbsp;. his penis. But you're amazing. I'm going to get a house in the city, and I want you to come live with me.\"\n\n\"I don't know, Mrs. Rosenberg,\" I said.\n\n\"Everybody will think you're a servant,\" she said, \"and in a way you will be. You'll serve my sexual needs.\"\n\n\"I'm not the servant type, Mrs. Rosenberg, or the monogamous type. And I don't know if I can be a lover to just one person.\"\n\n\"I'm rich, and I can make you rich too,\" she said. \"Think about it.\"\n\n\"I will,\" I promised.\n\n\"Where can I clean up?\" she asked.\n\n\"Over there,\" I said, nodding in the direction of the bathroom.\n\nShe scooped up her things, went to the bathroom, came out clean and neatly dressed, and left me lying in a puddle of yellow piss.\n\n7. Dr. Rosenberg's emissions\n\nI laid there a long time wondering how much stranger my sex life could get. Even though I was this trashy slut, these really classy people wanted me. Jeremiah, who had a future in cable and an enormous cock, wanted to marry me, and Mrs. Rosenberg wanted me to move into a big house with her - I guess so she could piss in my mouth and sit on my face every day.\n\nThe door opened again. I lifted my head and saw Dr. Rosenberg there between my legs, furious and naked, with a big hard-on.\n\n\"Bitch!\" he snarled.\n\n\"Hi, Dr. Rosenberg,\" I said, smiling weakly.\n\n\"My fucking wife left me, and you fucking did it,\" he said. He lifted his right arm and brought it down. Something swished through the air, and there was a slap and my pussy stung.\n\n\"Ow, Dr. Rosenberg!\" I squeaked.\n\nHe lifted his hand again: he was holding a little whip with a lot of black leather strands.\n\n\"Why?\" he said, and brought the whip down again, harder this time, so it felt like my pussy was on fire.\n\n\"Ow, stop, Dr. Rosenberg!\" I cried, twisting to get away from him, though of course I couldn't.\n\n\"Why did you do it?\" he demanded, and hit me again.\n\n\"Ow ow ow ow!\" I howled. I'd never felt pain like this, not even when Jeremiah ass-fucked me.\n\n\"Why did you fucking do it?\" he demanded.\n\n\"Do what?\" I whimpered.\n\n\"She found out about you,\" he said. \"She knew everything we did at that party last Saturday - the pissing, the ass-fucking. You had a video of it all. You sent it to her!\"\n\nHe hit me again, and it was like a firecracker going off in my vag. \"I didn't!\" I screeched.\n\n\"Nobody else could have,\" he said.\n\n\"Dozens of people knew about it. Anybody could have told her.\"\n\nHe sniffed the air and looked hard at me. \"You're a mess,\" he said.\n\n\"People have been pissing on me, Dr. Rosenberg. Somebody else told her.\"\n\nHe swung the fucking machine into position, lubricated both dildos, and pushed them into me. He looked around for the remote, found it, switched the machine on, and turned up the speed about halfway.\n\n\"Fuck!\" I cried. The stimulation was so intense it was painful.\n\n\"Nobody else would have done it.\"\n\n\"She knew about it last night!\" I shrilled. \"Turn it down, Dr. Rosenberg.\"\n\nHe turned it up.\n\n\"You talked to her?\"\n\n\"Oooooh! She .&nbsp;.&nbsp;. she came to Mickey's Tap .&nbsp;.&nbsp;. oh fuck! .&nbsp;.&nbsp;. and told me to leave you alone.\"\n\nHe turned down the machine till it was half way up again.\n\n\"I'm sorry about your wife, Dr. Rosenberg,\" I said.\n\n\"She was a frigid bitch and a stuck-up cunt. But she was beautiful and she had shitloads of money and lots of connections.\"\n\n\"She's not frigid, Dr. Rosenberg. She's fucking hot.\"\n\n\"She's hot if ice is hot. For all I know she doesn't have a cunt - she doesn't let me near it, anyway.\" He climbed onto the table and stood over me, hard cock sticking out.\n\nI stared up at it. His balls were firm and indrawn in the cool room. \"She's got a cunt,\" I said, \"I ate it last night. She made me lick a toilet and then she sat on my face.\"\n\nHe stared at me, speechless for a minute. Finally he said, \"You fucking skank!\" He lowered himself into a squat above my head.\n\nI quickly said, \"She blew a wet fart in my face and pissed .&nbsp;.&nbsp;.\"\n\nHe grabbed my head and plunged into my mouth balls deep. \"I can't fucking believe you,\" he said. \"You're fucking my wife.\"\n\n\"Nnnnghh,\" I said.\n\n\"Fucking loser bitch,\" he snarled. My mouth was filled with thick saliva, and his cock was sloshing inside me. \"Fucking dyke,\" he growled, and thrust so hard his cock rammed the back of my throat. It felt like someone was banging away with a sledgehammer inside me.\n\nFinally he got tired, or maybe he just decided to change positions. He pulled out of me and stood up, and I said, \"She wants me to move in with her.\"\n\nHe froze and stared at me with a stunned look. It was really fun to torment him this way. When he'd recovered he said, \"Are you going to .&nbsp;.&nbsp;. move in with her?\"\n\n\"I don't know,\" I said. \"She's an amazing fuck, and she said she could make me rich.\"\n\n\"Whore!\" he said.\n\n\"Well, you married her for her money, right?\"\n\nInstead of answering, he sat on my face, smashing his asshole against my mouth.\n\n\"Eat my ass, whore,\" he said.\n\nDr. Rosenberg has the best asshole. I don't know what it is - it's sort of angry and dangerous, like him. It's hard to explain, but other guys have these meek assholes that sort of beg for attention, but Dr. Rosenberg's is assertive. And there's nothing that says contempt quite like a pissed off dentist scrubbing his crack on your face while he calls you a whore. The fucking machine pounding both my holes was just a sideshow. Nobody could turn me on like he could, when he was insulting and abusing me, and now he was just about out of control.\n\nIt was hard work to get myself together enough to stick my tongue out and lick his anus as he rocked on my face. I was hungry for it and sucked and licked noisily. I guess my excitement proved to him what a lowlife whore I was, because he was getting more pissed off and rougher, reaching under him to pull his cheeks wider apart, sitting heavier on me.\n\nHe shifted a little, lifting himself up, and I said, \"She's got a sweet asshole, too!\"\n\n\"Shit eating cunt!\" he snarled, and sat on me again. I opened my mouth wide around him and probed his hole with the tip of my tongue. \"Um,\" I said, it felt so fucking good to rim him.\n\nAnd that's when it happened - so suddenly I didn't get what was going on at first. He was growling, \"fucking shitface whore,\" the last word trailing into a low grunt; and his anus widened and swelled into me, and something pushed my tongue back in my mouth, and suddenly the unflushed toilet smell was overpowering, and I was filling up with something warm, wet, and pasty. It filled me so fast I was completely plugged up in like two seconds, so I couldn't scream or say a single word.\n\nYou talk about things tasting like shit - liver, lima beans, whatever you don't like - but the fact is, none of those things are even a little like shit, which has a taste all its own - real bitter, with overtones of bad breath and sick, rage and contempt. Even a little bit of it is enough to make you gag, but a whole mouthful is overwhelming. It invades your nose and throat and makes your stomach turn over, but really the idea of it is what gets you, the fact there's this person squatting above you that thinks what you're good for is eating shit.\n\nSo there I was, shackled to this table, and it was just starting to register with me that Dr. Rosenberg had taken like this huge dump in my mouth. Suddenly my heart was hammering and I was panicking: but after a couple seconds I realized I could still breathe, and he'd stopped shitting and was raising himself so his bottom was a little ways above my face. I stared at his hole. The skin around it was stained muddy brown, and a glob of shit hung there, stuck to his hair. It made me nervous, wondering when it was going to fall. He was dribbling piss onto my neck, and his asshole was pushing out over and over and he was grunting like he was trying to squeeze more shit out, but my mouth was so full I was sure he must have emptied himself.\n\nI wondered what I should do about my mouthful of shit. Try to swallow it? I couldn't even close my lips. It was like having a big mouthful of peanut butter: it would take a while to get it all down. Besides, shit couldn't be good for you. He might get even madder if I spat it out, though, and a part of me wondered what it would be like to swallow shit. Meanwhile, it wasn't easy to think this through with the dildos still rattling away down below.\n\nAnd it turned out I had no idea that most of the time you shit way more than you can fit in your mouth. He gave a loud groan, piss spurted onto my tits, his asshole pushed way out and opened up, and a thick rope of shiny wet shit snaked out of him and piled up thickly on my face, covering my mouth and chin and slithering down onto my neck.\n\nWatching the brown slime ooze out of him and smelling it just under my nose, my stomach lurched, and a little throw-up gushed into the back of my throat, behind the shit. I got it under control, though, so all I did was blow a few bubbles around the soggy mess in my mouth. I breathed as little as I could get away with.\n\nDr. Rosenberg strained to squeeze out one last bit, which fell on top of the pile on my face and rolled down onto my cheek just below my left eye. When he was finally satisfied he couldn't do any more he stood up, turned around, and looked down at me. \"Fuck,\" he said, in a kind of wondering tone like he couldn't quite believe what he'd just done, and I suddenly felt insanely happy because I realized this was a first for him just like it was for me. He'd never had the chance to degrade a woman this way before.\n\nI moved my tongue around: the shit was soft, wet, and chunky, and I could push some of it aside into my cheek, but doing that gave me this huge burst of icky taste, and anyway there was way too much to chew. Again I thought about whether to spit it out or try and swallow a bit of it. I wondered whether swallowing would make me throw up, and I'd just about decided to give it a try when Dr. Rosenberg squatted over my head and drove into my mouth, right through the big pile of shit on my face, which gushed into my nose and made mudslides down my cheeks. His cock pushed some shit back into my throat, and some of it splurched up out of me around his cock and balls.\n\nMy gut gave this huge spasm, and I had to turn my head and spit out some shit and puke, losing his cock. But suddenly it was like there was an explosion of pleasure in my stomach shooting straight down to my clit, and there was this fierce joy flashing all through me. I turned my head upright again and opened my mouth, and he jammed his shitty cock into me and fucked my face with frantic energy.\n\nMy stomach heaved with every stroke, and my retches echoed around the room as brown vomit geysered out around his cock again and again and ran down over my cheeks and chin to puddle with the shit around my head. He fucked me till I was dry heaving and it was just thick brown saliva in my mouth, and then he held me by the hair, pushed into me hard, and wriggled to make his cock twitch back in my throat.\n\nHe held me in place with his cock pushed as far into me as it would go. My stomach was still heaving, and I couldn't breathe, and I was starting to panic again and struggle under him - and that's when we came, both of us together, with him groaning and thrusting and me thrashing and pulling against my restraints while the fucking machine bashed away at me below.\n\nHe pulled out and stood over me, his wilting cock brown with shit and this sort of dazed look on his face. He watched for a minute while I squirmed, the fucking machine still going. Then he bent down, touched a button on the remote to turn off the machine, picked up a glob of shit that had fallen by my head, and put it in my mouth - then another, and another, till I was full again.\n\n\"Eat it,\" he said, stood up, and watched as I chewed and braced myself for my first attempt to swallow shit. He took his slimy cock in his hand and aimed it at my face, like he was holding a gun on me.\n\nI laid there hyperventilating, working up my nerve, the shit taste strong in my mouth and nose. That bitter, sick taste is like a voice screaming \"No!\" in your head. You don't eat shit - it's this massive taboo. And if you do eat it, you sure had better not like it, because liking it would make you about the world's biggest pervert.\n\nWell, I made myself swallow a little, and the taste was so awful there in the back of my mouth, not to mention the muddiness of it, that my stomach was doing somersaults and my whole body spasming as I struggled not to puke. But it was this huge turn-on too - the hottest thing that ever happened to me. That's saying something, considering everything that had been done to my body that night.\n\nDr. Rosenberg pissed on my face, rinsing it off as I forced down his shit little by little: every now and then I opened my mouth and took in some of his piss to help wash it down. It was a long process, getting his shit down: when he ran dry I was still at it, retching and struggling not to puke, because when I did, he picked up any chunks of shit I'd thrown up and put them back in my mouth, and it tasted even worse, being slimy with stomach acid.\n\nEating that shit was just about the hardest thing I've ever done, and by the time my mouth was finally empty my stomach was churning, my pussy was flooded, and I was on fire with arousal. I looked up at him, still standing above me, holding his shitty cock in his hand, and said \"Fuck you, Dr. Rosenberg!\"\n\n\"Fuck you, Brenda,\" he answered pleasantly. He bent down, turned the machine on, straightened up, and pissed again - not as much as before, but enough to fill my mouth. I wondered what to do with my mouthful of shitty piss. I thought I should probably spit it out, but when I turned my head to do that I felt like I didn't want to let go of it.\n\nSo I swallowed it, and my whole body spasmed, and I raised my head and spewed brown water over my tits, and huge sensations thundered all through my body, and I came again, thrashing and moaning. When things came into focus I looked up at Dr. Rosenberg and saw this crazy gleam in his eyes. He lowered himself onto me again and said, \"Clean my ass.\"\n\nAs I licked the thick shit out of his crack, he said, \"You don't want my cuntface wife. Move in with me. I need .&nbsp;.&nbsp;. I want to be able to have you whenever I want.\"\n\n\"You already can,\" I said between licks.\n\n\"Not just in the office,\" he said. \"Day, night, all the time.\"\n\n\"I've got to be able to go out sometimes,\" I said. \"I've got a life.\"\n\n\"Whoring?\" he sneered.\n\n\"Yeah, and friends, and church .&nbsp;.&nbsp;.\"\n\n\"Church?\"\n\n\"Yeah. My religion is real important to me.\" I wished he had more shit in him.\n\n\"I can tell people you're my maid. I need more help now my wife is gone. You could have days off, like a live-in maid.\"\n\n\"You know, Dr. Rosenberg, you're really a prick.\"\n\n\"I don't give a fuck what you think. I just need to .&nbsp;.&nbsp;. need to .&nbsp;.&nbsp;.\"\n\n\"Shit in my mouth again.\"\n\n\"Whenever I want.\"\n\n\"I'll think about it, Dr. Rosenberg.\"\n\nHe climbed down from the table and stared at me for a while. Then he said, \"Think about it well, Brenda,\" and turned and walked out of the room, leaving the door open behind him.\n\n8. The Reverend Edwards's Advice\n\nI had to go to the bathroom real bad. I thought I'd been on the table long enough, but it seemed like nobody else did, so I was stuck. I decided I'd try to hold it a while longer.\n\nI slept again for a while, and when I woke up again I was still alone and fastened to the table. The pressure inside me was too much.\n\nI said, \"If anybody can hear me, I really have to go to the bathroom.\"\n\nI counted to sixty, figuring a minute would be long enough for somebody to get here. I counted to sixty again, but still nobody came. \"One more minute,\" I announced, and counted to sixty a third time.\n\nNobody came.\n\nI pushed, and felt that delicious stretching you get when you're taking a nice big shit. Piss dribbled out of me and into my crack, where it wetted the shit, which plopped softly to the floor under the table.\n\nWhen the pressure was off my bowels, I pissed, listening to the spattering of water on the tile floor. Then I worked on pushing out a few more turds. I enjoyed doing it with a video camera trained on my crotch.\n\n\"If anybody's watching,\" I said, \"I hope you enjoyed that.\"\n\nAnother minute passed before the door opened and Mo came in, scowling. \"I didn't fucking enjoy that,\" she said.\n\n\"Then why didn't you come let me out?\"\n\n\"I wasn't supposed to let you out till eight, and it was like seven fifty-five. Fuck. Who do you think is gonna have to clean this mess up? You shoulda said you were gonna go on the floor.\"\n\n\"You could have told me the time. I didn't know!\"\n\n\"I ought to make you eat it,\" she said, unfastening my wrists.\n\n\"I've had enough, thanks.\"\n\n\"Fuck you, smart ass.\"\n\n\"Enjoy the cleanup,\" I said, and went off to the shower, where I spent about the next half hour.\n\nWhen I was clean and dressed I went downstairs. Betsy was sipping coffee in the kitchen.\n\n\"Here,\" she said, pushing a fat envelope towards me.\n\n\"Thanks,\" I said.\n\n\"Everybody said you were dull as dishwater to talk to, but fun to fuck.\"\n\n\"That's nice,\" I said.\n\n\"Do it again some time?\"\n\n\"Just call me.\"\n\nI went home, turned off my phone, and took a two-hour nap. I got up, watched some porn, had lunch, and left for my Bible lesson.\n\nReverend Edwards rose grandly from behind his desk and came to greet me as I closed and locked his office door behind me. He kissed me and said, \"How are you, my child?\"\n\n\"I'm troubled and confused, Reverend,\" I said as he lifted my T shirt over my head and I wiggled out of my shorts. \"I really need your advice.\"\n\n\"Tell me about it.\" He led me back to his desk, where I sat in his lap. He put two fingers in my pussy as I told him about my week's adventures.\n\n\"So you see, Reverend,\" I said at last, squirming because he had much of his hand inside me by this time, \"nobody makes me feel like Dr. Rosenberg: he's such a prick. But Jeremiah says he's damned because he's a Jew, and I'm endangering my soul by fucking him. I could have a good Christian relationship with Jeremiah, and he's got this enormous cock.\"\n\n\"Yes, he does,\" the Reverend breathed, and then added, \"or so I've heard. But tell me about the shit-eating again. That's .&nbsp;.&nbsp;. um .&nbsp;.&nbsp;. a very significant aspect of your story.\" He slipped a hand under me and massaged my asshole as he spoke.\n\nI told him again how Dr. Rosenberg shitted in my mouth and made me eat it. \"I'm kind of ashamed of what a turn-on it was, Reverend. My pussy's running just telling you about it.\"\n\n\"Don't be ashamed, my child. The Lord has given us appetites for reasons best known to Him, and it would be a sin to refuse His gifts. Right now I believe you have an appetite for my cock.\"\n\n\"You're so insightful, Reverend,\" I said. I slid off his lap and knelt between his legs. He lifted his robe. He had nothing on underneath, and he was fabulously hard.\n\nThe Reverend Edwards has a lovely cock, almost as big as Jeremiah's, and I love sucking it: it's such a challenge to get it all into me. After a couple of minutes I was licking his balls on the downstroke and he said: \"It's true that Dr. Rosenberg is Jewish, and a Jew can't get into heaven unless he acknowledges Jesus. That is, he has to convert to Christianity to be saved.\"\n\n\"Gnnghngh,\" I said, to let him know I was listening.",
        "\"And it's true,\" he continued, taking my head in his hands and pushing me down on him with some force, \"that Christians who associate too closely with Jews run some risks. Jeremiah, on the other hand, is a fine young man, though his appetites are .&nbsp;.&nbsp;. a bit bizarre .&nbsp;.&nbsp;. um .&nbsp;.&nbsp;. as I've been told .&nbsp;.&nbsp;.\"\n\nThe Reverend paused. I peered up at him. His eyes had a faraway look, and he was licking his lips.\n\nHe went on, \"He's right, of course, about Christian marriage as one of the paths to grace.\" He stood, turned around, and bent over. \"Eat my ass, Brenda. Even if you're less turned on by Jeremiah than by Dr. Rosenberg, his Christianity should weigh heavily with you. Your first consideration must always be the salvation of your soul.\"\n\nThe Reverend was a bear of a man, hairy all over. I explored his furry crack, and when I found his asshole I licked, enjoying the way his hair tickled my face.\n\n\"Mm,\" he said. \"Put your finger in.\"\n\nI wetted a finger, worked it into his ass, and hunted around for his prostate.\n\n\"Yes,\" he hissed. \"That's so fucking fine. Lick me again.\"\n\nI pulled my finger out and looked at it. It was damp and dark brown. \"I think there's poo in there, Reverend,\" I sighed.\n\nHe looked around just as I was putting my finger in my mouth. \"Oh, God!\" he moaned as I sucked it clean and planted my face in his crack again.\n\nNow he was grunting and straining, and his asshole was pushing out into me.\n\n\"Fuck!\" he gasped. His hole opened up, and I could put my tongue inside and taste the shit that was forcing its way out. It came out slowly, pushing my tongue down and sliding into my mouth with a kind of majestic grandeur. It was awe-inspiring, one of God's miracles.\n\nHis shit wasn't wet and soft like Dr. Rosenberg's, but hard and solid. It was straight and long, too, as big as Jeremiah's cock. Soon it was as far in my mouth as it would go, and more than half of it stuck straight out, like my face had a big brown penis.\n\nThe Reverend turned around and stared. \"Praise Jesus!\" he said. He reached out, grasped the turd in his hand, and pulled it out an inch - then pushed it back in. Gently, so as not to break it, he fucked my face with it, and I managed to take it a little farther with each thrust, till I was deep throating his shit.\n\nSoon, of course, it started to come apart in my mouth and his hand. Once some of it broke off back in my throat, and I had to cough bits out. The pieces that came off in his hand he rubbed on my face.\n\n\"It's a big step you're contemplating,\" he said, jerking off has he watched me chew up and swallow a chunk of shit, \"entering a monogamous relationship. Are you sure you're capable of it? At this stage in your life it may be unwise even to try.\"\n\nHe was getting shit on his cock, but he seemed not to care. With my mouth full, I said, \"I don't know, Reverend.\" Thinking it's not polite to talk with your mouth full, I swallowed and went on. \"But it's only Jeremiah that wants a monogamous relationship. Dr. Rosenberg doesn't care what I do with my spare time, as long as he gets to fuck and defile me when I'm with him.\"\n\nThe Reverend smeared shit on my tits. \"Now that I've had a chance to think about it more carefully,\" he said, \"moving in with Dr. Rosenberg seems like a great idea.\" He turned me around so my elbows were on the chair and put his cock in my ass. Slick with his shit, it slid into my stretched hole easily.\n\n\"You're so firm in your faith,\" he went on, \"and the light of grace shines so brightly in you, I can't believe there's any danger to your soul. And think of the good you could do. Why, you might bring him to Jesus!\"\n\n\"Oh, Reverend, that would be so wonderful!\" I sighed, picturing Dr. Rosenberg sitting beside me in church listening to the Reverend Edwards preach. \"Fuck me harder!\"\n\nThe Reverend hammered my ass, panting with the effort, till finally he spun me around, plunged into my mouth, and filled me with spunk, which mixed with his shit to make a sticky brown Reverend Edwards soup. I swallowed it down, thinking how lucky I was to have such a wicked great pastor.\n\nMe and Reverend Edwards showered together in his private bathroom and washed the shit off each other. Afterwards I grabbed a towel, and by the time I patted him dry he was hard again.\n\n\"Reverend?\" I simpered, holding his cock in my hand.\n\n\"Yes, my child?\"\n\n\"It's so hard to make ends meet when you're a cum dump. You need all this filthy underwear, and toys .&nbsp;.&nbsp;.\"\n\n\"Say no more, Brenda,\" he said, smiling. \"This congregation is a generous one, and collections have been good.\" He went around behind his desk and opened a drawer. \"Maybe three hundred?\" he said.\n\n\"Maybe five,\" I said. \"Eating shit's an expensive kink.\"\n\nHe swallowed, reached into the drawer, pulled out a thick wad of bills, and counted out five hundred dollars.\n\n\"You will come for your Bible lesson next week, yes?\"\n\nInflamed with love for our Lord, I said, \"I wouldn't miss it for the world, Reverend!\"\n\nAfter me and the Reverend said goodbye, I went home, sat on my sofa, and thought. I didn't turn on any porn, or get a beer, or even masturbate. I just thought - harder than I ever have before in my life.\n\nAt four-thirty I went to my bedroom, threw some things into an overnight bag, and changed into a fuck-me dress with nothing on underneath. I looked up Dr. Rosenberg's home address in the phone book: it was on the same street as Betsy's mansion. I drove over there and knocked on the door of his big white house.\n\nHe opened the door and stared hard at me, then at my bag. He stepped back to let me in.\n\n\"Come to the bathroom,\" he said.\n\n\"Let's talk about money first.\"\n\n\"What do you mean?\"\n\n\"You want a live-in sex slave. Did you think you were going to get one free?\"\n\n\"I gave you your job back.\"\n\n\"And you pay me for doing that job, with something extra for fucking you at the office. Now what are you going to give me to fuck you at home?\"\n\nHe sighed. \"You're a shitface whore.\"\n\n\"This is news to you?\" I pulled my dress off: my nipples were hard and my cunt was wet.\n\n\"A ten percent raise,\" he said, staring at my tits.\n\n\"I go from eight hours a day to twenty-four, and you offer me ten percent? You should triple my pay.\" I slid a finger into my slit. \"Mmm, my li'l pussy's purring.\"\n\n\"You won't be fucking all that time,\" he said, staring at my shaved mound \"Twenty percent.\"\n\n\"I'll be on call. Twenty-four hours a day.\"\n\n\"Fifty percent.\"\n\nTurning around, I said, \"Maybe I'll move in with your wife after all,\" and bent down to scoop up my dress, showing him my big ass.\n\n\"You'll have days off. Eighty percent,\" he said.\n\nI advanced on him slowly and grabbed his cock through his pants. \"Double my pay,\" I breathed. \"I'll use a lot of the extra money to buy filthy underwear and exotic sex toys. There's this toilet I saw online with a head cage underneath .&nbsp;.&nbsp;.\"\n\n\"Double,\" he said.\n\n\"Done. Now do something unspeakably awful to me.\"\n\nHe grinned at me, showing his teeth. He was endlessly inventive when it came to ways to defile me - pussy juice was running down my legs as I thought about it.\n\nBut Casey was right. It's important to make a man pay.\n\nEspecially if you're crazy about him.\n\n*****\n\nIf you got this far and liked the story, please take a moment to cast a vote. And watch this space a few months from now for Brenda's next story, \"The Taming of the Shithead.\""
    ],
    "authorname": "Serafina1210",
    "tags": [
        "anal sex",
        "lesbian sex",
        "group sex",
        "bondage",
        "rimming",
        "farting",
        "urolagnia",
        "pee",
        "scat",
        "coprophagia"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-rent-a-slave"
}