{
    "title": "Mutual Masturbation Pt. 01",
    "pages": [
        "Dave, Jon and Alice had been living in a share house for eighteen months now. She had gone away to see her friend Tammy for the weekend and wasn't due home until the late afternoon. Both Dave and Jon went back a long way to their high school years. They knew Alice through some mutual friends and when they needed a new house mate, Alice moved in while she sorted out some issues with her boyfriend.\n\nDave was single and had a little bit of a sexual crush on Alice. He spent many evenings getting sneaky looks at her and often fantasized about catching her masturbating or getting a peek at her in the shower. She had a great figure, although she seemed quite conservative and often, a little cold and aloof. This turned Dave on a lot, as he fantasized about what it would be like to fuck her and break down all those walls that Alice appeared to put up.\n\nJon's girlfriend, Gabby, had stayed over for the weekend and the three of them had gone out for a few drinks the night before. In their early twenties, they were all very close. While Dave and Gabby came home at a reasonable time, Jon had stayed out with some of his other friends until the early hours of the morning.\n\nJon liked to party and once he was out it was hard to get him to come home again. This could be a frustration for Gab as she hated coming home alone if she was drunk and horny.\n\nDave got up around midday on Sunday and was sporting his usual morning erection. He was too horny to bother with breakfast. He sat down on the sofa in the living room and connected his laptop to the big screen. He was completely naked, and his curved, six-inch dick was fully erect. While Alice was away, he was going to take advantage and masturbate comfortably on the sofa, watching some porn.\n\nHe sat the laptop next to him and started to search through his porn folder for something good. Occasionally, he gave his hard cock a light stroke with his dry palm to keep it as hard as possible. After several minutes of light stroking and searching for something to watch, he picked up the bottle of massage oil, squirted some into his hand, and began rubbing it into his shaft.\n\nHe casually stroked his cock up and down as and resumed looking through his porn collection. The lube felt wonderful on the stretched skin of his hard erection. He settled back into the soft sofa and looked forward a great wank session.\n\nHe heard a door open and close down the hallway and Gabby walked to the lounge room, wearing one of Jon's shirts.\n\n\"Ooohhh, what are you watching?\" she asked as she sat down on the chair opposite.\n\n\"Not sure yet,\" Dave replied.\n\n\"Can I watch?\" asked Gabby.\n\n\"Sure,\" Dave said. \"You horny too?\"\n\n\"Yeah,\" Gabby said as she stood up and unbuttoned the shirt, dropping it on the sofa. \"Jon is still asleep. I heard you get up and was hoping you were going to have a session.\"\n\nDave watched as she sat back down on the sofa, completely naked. Gabby had brown hair and was slim, with nice, round tits. She had pale skin and long legs and was naturally very pretty--she rarely wore makeup during the day. Her sparkly green eyes and infectious smile always lit up a room. She had a beautiful, friendly energy about her, so Dave felt very comfortable masturbating in front of his best friend's girlfriend.\n\nThe three of them had been friends since childhood; Jon had started dating Gabby two years ago. One drunken night eight months before, they ended up having a threesome and since then had been enjoying a whole range of sexual activities together.\n\nHe stroked the shaft of his cock as he watched her undress. Dave never got tired of looking at her naked body. He had fantasized about Gabby for years and now and knew every inch of her body well.\n\n\"You've shaved your pussy,\" Dave said.\n\n\"And you've shaved your balls,\" Gabby shot back with a smile.\n\n\"Ha yeah, true. What do you want to watch?\" he asked.\n\nGabby settled into the chair and opened her legs slightly as she began to gently rub her pussy. \"I don't mind. You choose. I've just been lying in bed waiting for Jon to wake up, which I don't think is happening anytime soon. So I've been horny for hours.\"\n\nGabby watched as Dave kept scrolling through his porn collection while gently stroking the his cock.\n\n\"I like the shaved balls\" she said. It was smooth and about six inches long, with a nicely shaped head and a lovely curve to the shaft. They had done this together a few times now, Gab had told him what a massive thrill she got out of watching him jack off.\n\nGabby let out another moan. The three friends had a \"no fucking Gabby\" rule unless Jon was there. Gab looked directly at Dave's cock, \"I need one of you to fuck me today.\"\n\n\"How about an amateur threesome? Two girls and a guy?\" Dave said as he glanced up at Gabby.\n\n\"Sounds great,\" she replied. \"Are you still fantasizing about Alice?\"\n\n\"Yeah, I get a few sneak peaks every now and then but still think about fucking her a lot,\" he replied.\n\n\"She does seem so conservative though,\" said Gabby. \"Is that what you like? You think she will go off in the sack?\"\n\n\"You know it,\" Dave smiled. \"I've seen how you look at her as well.\"\n\nGabby nodded as she circled her middle finger up and down her slit. \"Yeah, she's got some X factor.\"\n\nDave hit play on the video and they both watched as someone's young wife-- a pretty brunette--was interviewed on camera about being fucked by another couple she hadn't met. The camera would occasionally pan over to her husband who was sitting in a chair waiting to watch his wife have fun.\n\n\"She's hot,\" said Gabby. \"I don't think I've seen this one.\" She was swirling her middle finger gently around her clit as she watched.\n\n\"Yeah,\" said Dave, \"this one is good. She's got great little titties.\"\n\n\"I thought you liked the bigger ones now that Alice is living here,\" teased Gabby.\n\n\"Oh, I do like her tits,\" he replied. He leant over and picked up the tube of lube he had placed on the floor. \"I like a lot of things about her,\" he continued as he squirted some more lube in his palm and then began to massage it into the head of his cock. \"I'm sure I've heard her having a wank in her room. She's been leaving the door ajar lately.\"\n\nGabby let out a little sigh as she rubbed her pussy and looked back at the TV screen. \"Yeah, Jon thinks that as well. Fuck, I need my vibrator.\"\n\nShe stood up and Dave had another good look at her body. She was very well-proportioned; he loved the way her tits sat on her chest and that the nipples both pointed off to the side slightly. She looked very smooth now that she had shaved her pussy and, as she walked past, he got a great view of her beautiful round butt. He slid his hand down the curved shaft as he watched her walk down the hallway.\n\nA few minutes later, she returned with her pink Rabbit toy and sat back down on the chair opposite Dave.\n\n\"He's still out of it,\" she said as she started masturbating again.\n\n\"Yeah, he was pretty drunk,\" Dave replied. \"Don't think he'll be up for a while.\"\n\nGabby let out another soft moan as she felt the little bolts of pleasure shooting out of her pussy. \"You look really hard, Dave. How long are you going to last?\"\n\n\"I think I'll probably have a few gos at it today,\" he smiled.\n\n\"Mmmm, great!\" Gabby replied. She held her pussy lips open and made a heart shape. \"Look, a love heart,\" she joked.\n\n\"Fuck, that looks good, Gab!\" said Dave.\n\nThey both went back to watching the screen. The pretty brunette was on her knees, passionately kissing a redhead while another guy was kneeling behind her, massaging her tits.\n\n\"Is that what we would do to Alice?\" said Gabby softly.\n\n\"Fuck, yes!\" Dave replied. \"Do you think she likes girls?\"\n\nGabby let out another moan. \"Yeah, of course. God, this feels really good.\"\n\n\"Looks really good,\" Dave said. \"I'm liking the shaved pussy look.\"\n\n\"Thanks,\" she replied. \"Jon loves it as well. It does feel silky smooth.\" She was rubbing her clit in circles now and pinching and teasing her nipples.\n\n\"Hopefully Jon wakes up later and we can fuck,\" replied Dave.\n\nThey both went back to watching the action on the screen. The man stood up and the women pulled down his briefs. His massive, nine-inch cock sprang free.\n\nGabby sucked in her breath, \"Holy shit!\"\n\n\"Yeah\", said Dave, \"it's fucking huge. Do you like it?\"\n\n\"Fuck, yes!\" said Gabby. \"That thing looks incredible.\"\n\n\"Reckon you could take it?\"\n\n\"Fuck, I don't know. Maybe. I'd like to try. Fuck, even if I couldn't, I'd love to lick that thing,\" she replied.\n\nGabby reached over and picked up her Rabbit toy. She pressed the buttons, setting a nice low buzz, and the head started swirling around.\n\nShe let out a moan and bit her lip as she pressed the vibrating head against her clit.\n\nDave was now using long strokes from the base of the shaft and over the tip.\n\n\"Fuck, that looks good, Gab!\" he said.\n\n\"Jesus, me or that guy's cock?\" she said. She was panting now as she watched the screen intently. Both women were slurping the sides of the shaft in unison as the guy thrust his hips forward in time with their tongues.\n\n\"Want to swap places with one of them?\" asked Dave.\n\n\"Yesssss!\" panted Gabby.\n\nDave watched as she pushed the Rabbit dildo into her pussy now, the little ears hitting her clit. Gabby let out another little moan and bit her lip as she began to thrust into the toy. She was sinking the full length of the Rabbit into her pussy and pulling it almost all the way out as the head swirled around inside her.\n\n\"Those things have an unfair advantage,\" teased Dave.\n\nGabby just bit her lips as Dave watched. He knew an orgasm was building deep inside her. She stared straight at the screen and watched as the big porn dick getting ready to fuck another man's wife. She let out a gasp as his enormous shiny cock sank into the woman's pussy.\n\n\"Fuck, I'm going to cum!\" said Gabby as she bit her lip. Her first orgasm of the day washed over her. She closed her eyes tightly and let out a big gasp as the toy plunged deep inside her, the vibrating Rabbit ears pressing against her clit.\n\nDave slowed his stroking down when he saw the climax shake through her body. Watching Gabby cum always bought on his own orgasm, so he had to slow right down and barely touch the skin. He gripped his cock at the base as a big bead of precum formed on the tip.\n\n\"Fuck,\" Gabby said as she slumped back into the chair. She pulled the glistening toy from her pussy. \"First one for the day,\" she smiled.\n\n\"That was quick,\" said Dave.\n\n\"I've been awake and horny for ages,\" she said. \"Don't cum just yet. I want to keep playing.\"\n\n\"Fuck, yeah\" replied Dave. Dave knew it would be a couple of minutes before Gabby's pussy was ready for her to start masturbating again. She was multi-orgasmic, and when she was horny, there was no stopping her.\n\n\"I need to fuck!\" she said. \"Dammit, I'm going to wake Jon.\"\n\nDave was still gripping the base of his cock as Gabby stood up and looked directly down at it. She knelt in front of him and lapped the precum up with the tip of her tongue.\n\n\"Yum!\" she said as she stood up. \"I'm going to get him up, fuck it, even if he lies on the sofa while you fuck me.\"\n\nDave watched as she walked down the hallway again. He turned his attention back to the screen where the brunette was now on her back, taking in that huge cock. He wondered what--if any--porn Alice watched. He began to think of her walking in as he was fucking his best friend's girlfriend. What would she think, he wondered? Would she watch, run, join in?\n\nHe began to stoke his cock again as he thought of fucking Alice.\n\nGabby came returned and slumped back into the chair, and looking at the screen. \"He's out of it,\" she said forlornly. \"Fuck, that guy has a huge cock.\" She began fingering her pussy as Dave watched. She slipped two fingers of one hand deep inside and began massaging her clit with the other.\n\nShe looked over at Dave. \"What time is Alice due back?\" she asked.\n\n\"Not sure, maybe a couple of hours,\" Dave replied.\n\n\"You really want to fuck her, don't you, Dave?\" she said as she watched him masturbate.\n\n\"Yeah, I think we all do,\" he laughed.\n\n\"Haha, I think she is a bit too precious for that,\" replied Gabby.\n\n\"Maybe,\" said Dave, \"but how good would it be if we all got to corrupt her?\"\n\nGabby bit her lip as Dave spoke about all of them taking turns on Alice. She began thrusting her fingers deeper into her pussy as he spoke.\n\n\"You could sit there and watch as Jon and I took turns fucking her, you could guide our cocks into her pussy and mouth, lick the cum from her tits, listen to us moan as we fucked her.\"\n\nGabby was obviously loving Dave's dirty talk. Dave could tell she had been fantasizing about watching the guys fuck Alice for a while now. He watched her and could tell she wasn't far from another orgasm.\n\n\"Imagine the look on Jon's face as he pushes his cock into her,\" continued Dave. \"He would love to fuck her. We've spoken about it before. He wants to feel her cum on his cock.\"\n\nDave looked on as another orgasm engulfed Gabs body. Her hand was a blur on her pussy as the orgasms ripped through her body and she let out a big gasp.\n\nBy now Dave had to stop stroking. He was gripping the base of his cock and desperately trying not to cum himself. Watching Gabby writhe in pleasure on the sofa as he described fucking Alice had taken him right to the edge.\n\nAs Gabby's second orgasm started to subside, she reached over for her Rabbit vibrator. Without turning it on,she pushed it deep inside her pussy.\n\n\"Fucking hell, I'm horny!\" she said as she felt the thick penis-shaped toy spread her lips wide open.\n\n\"Yeah, Jesus, Gab! A couple of strokes and I'm going to explode!\" replied Dave.\n\n\"How many more times do you think you can cum today?\" asked Gabby.\n\nDave looked down at his cock. \"At least a couple more. I haven't had a wank for a few days.\"\n\n\"Ok, you sure Alice isnt back for awhile?\" panted Gabby as she began to thrust the toy in and out of her pussy.\n\n\"In a couple of hours, I think. There should be enough time for a fuck if Jon gets up soon.\"\n\n\"Can you hold off for just a bit longer and cum with me?\" Gab asked. She was biting her lip now and fucking her pussy hard with the toy.\n\n\"Yeah, I'm ready when you are,\" Dave replied as he gently stroked the base of his curved cock.\n\nGab lifted herself off the sofa and sat with her knees spread in front of Dave. She reached down and flicked the toy on, so the head started swirling around the and Rabbit ears began to vibrate. She plunged the toy into her pussy and Dave had a great view as she fucked herself in front of him. She locked her eyes on his curved cock and gasped as another orgasm built up deep inside her.\n\n\"Oh fuck, yes, fuck! Cum, Dave, cum for me!\" she blurted through clenched teeth.\n\nDave gave his cock a couple of long strokes and instantly he felt the cum surge up the shaft. The head felt like it swelled to twice its size as his balls began to convulse and big, thick ropes of cum erupted from his cock, splashing over his belly. He gripped the head of his cock as the orgasmic pulses shot through the shaft and spread out through his whole body.\n\nGabby let out another long moan and came hard on the toy. As she collapsed forward, she felt her body shake as each wave sent off fireworks deep inside her.\n\nShe lay on the floor panting and getting her breath back. \"Fuck,\" she said, \"fuck, fuck, fuck!\"\n\nDave lay back as his cock pulsed, cum oozing from the head and dripping down onto his belly.\n\n\"Jesus, Gab,\" that was awesome.\"\n\nGabby looked up and smiled. \"I need to get that fucker out of bed,\" she said.\n\n******************************************************************************\n\nEventually Gabby did manage to wake Jon. He lay on the sofa and watched an energetic fuck session between Gabby and Dave. Whilst he wanted to join in, he was just too hungover to participate in any meaningful way.\n\nInstead, he lay there and stroked his cock occasionally while he watched his girlfriend and best mate fuck.\n\nBy the time they finished, the room smelt like sex and Dave had managed to drop a load inside Gabby and another one over her lovely tits. She leant over to Jon on the sofa and sucked his cock dry, her tits glistening with Dave's cum in the afternoon light.\n\n*****************\n\nLater in the evening, Alice arrived home. She had felt so horny on the plane and although she was still sore after fucking Tim and Dan that morning, she was desperate to masturbate as soon as she got home.\n\nAlice walked in and said a quick hello to Gabby and Jon, who were watching TV. She was sure she could smell sex in the air. She quickly made her way down the hallway to her own room.\n\nAlice threw her bag on her bedroom floor and quickly undressed. She had considered leaving her door ajar but didn't because Gabby was there. She grabbed her toy from the top drawer of her bed and fell back onto the soft sheets. She slowly began rubbing her aching pussy while thinking about her morning with Dan and Tim.\n\nShe had started having a few thoughts of guilt and regret. She was also feeling an excitement she hadnt felt before.\n\nHer pussy was still sore from the pounding she had from the 2 hung men. She sank the toy into her pussy and closed her eyes. In her mind she saw Tims cock in exquisite detail.\n\n\"Fuuuuuuck\" she sighed."
    ],
    "authorname": "martin_shecter1971",
    "tags": [
        "mutual",
        "masturbation",
        "porn"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/mutual-masturbation-pt-01"
}