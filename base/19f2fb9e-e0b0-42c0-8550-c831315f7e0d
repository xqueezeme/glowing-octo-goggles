{
    "title": "High School: Zero to Hero Ch. 11",
    "pages": [
        "[Author's Note: This is the final chapter of the \"High School: Zero to Hero\" series. I hope you have enjoyed the series as a whole. Thanks again to Romantic1 for providing edits and feedback throughout the writing process. Thanks also to the many of you that provided feedback, encouragement, and thanks over the months. There'd be no point in writing these stories if people didn't enjoy reading them.] \n\nEpilog - Endings lead to beginnings\n\nI didn't get much sleep when I returned home after the Thursday night Baccalaureate service. Although I was more spiritual than religious I had gone at the request of my friends. After the service let out I got roped into about a hundred or so photos with other classmates. I knew some of them better than others but I was still surprised because I never considered myself to be super popular. To be honest I still question how I was ever elected Homecoming King.\n\nAfter tossing and turning most of the night I decided to get up at first light. I had a small bowl of cereal and with every bite I tried to assure myself this was just like any other Friday and I that I had nothing to be anxious or apprehensive about. I had already passed my finals. I had already swum my last race as a high schooler months ago. I had already thrown my last throw with the track team. I had already received my acceptance to State for the fall and was even granted a swimming scholarship. Why was I nervous?\n\nDeciding I had too much pent up energy, and realizing I still had a few hours to kill before our final graduation dress rehearsal, I decided to go for a swim. The pool my mom and step father had wasn't exactly the biggest or best pool for lap swimming, but in a pinch I could crank out about a half mile before getting bored by the relatively short laps.\n\nAfter a half hour in the pool I was still worked up. My mind kept racing thinking about everything and I didn't know why. I figured maybe a run would help clear my head. I still had a few hours to kill anyway.\n\nWhile out running when I felt my phone vibrate in my shorts' pocket. I slowed to a stop and answered it.\n\n\"Nervous?\" Ashley asked me.\n\n\"Uh, yeah,\" I said in disbelief. \"How'd you know?\"\n\n\"Well I just drove by on my way to your house and saw you running by,\" she stated. \"First, you are never one to run, and second you ran by as if you were in your own little world and didn't even recognize me or my car.\"\n\nI frantically apologized, hung up, and started jogging back to my house. Sure enough as I rounded the last turn I saw Ashley leaning against the trunk of her car smiling at me from behind her sunglasses.\n\n\"I'd give you a hug but I'm kind of a mess right now,\" I said as I wiped the sweat from my forehead.\n\nShe ignored my warning and stepped up wrapping her arms around me. Surprisingly her hug had a calming effect on me, either that or my morning exercises had finally caught up with me.\n\nWe went inside and I brought Ashley up to speed on the things Jenn had said to me last night about being clueless if not a bit dense.\n\n\"If I may,\" Ashley began to say after a moment of thought, \"I don't think your problem has anything to do with graduation tonight. I think it has more to do with you realizing how far you've come in such a short period of time. You're a far cry from the wet behind the ears eighteen year old virgin I met at the start of the last summer. I think you're struggling to come to grips with what could have been had you realized the sway you held over your friends and the popularity you had amongst your classmates.\"\n\n\"I hadn't really thought about it that way,\" I confessed. \"I guess it makes sense.\"\u2028\u2028\"Something similar happened to me at my graduation,\" she continued. \"We had a senior dance the night before graduation and probably thirty different guys came up and asked me to dance. Every single one of them told me I was cute or beautiful and that they had wished I had been available to go out with them.\" She paused and laughed under her breath. \"The funny thing was I had been single the entire time I was in school.\" \n\n\"So what changed?\" I asked.\n\n\"Well, remember how I had told you someone had taken me under their wing just as I had done with you last year? Well my experience happened the summer before my senior year as well. I was able to enter into my senior year as a new woman. I left the shy, quite, reserved girl I had been behind. It's not that I become some outgoing party slut or anything. I just felt different.\"\n\n\"So were you coached in similar ways the way you coached me in how to dress, how to carry yourself, etcetera?\" I pried.\n\n\"Yeah. I guess looking back on it I wasn't fully aware of how much I changed until graduation rolled around. So I can only guess you're feeling the same way.\" She then reassuringly rubbed her hand on my leg. \"I think that's what makes you so special Ben. You are blissfully unaware of exactly how great a person you really are. You don't have that annoying cockiness. You're confident but not cocky.\"\n\n\"Confident, calm, cool, and collected,\" I said repeating the mantra Ashley drilled into my head almost a year ago.\n\n\"Exactly!\" She exclaimed.\n\n\"Well, I need a shower and maybe a brief nap before I head in for graduation practice. You're more than welcome to join me for all three if you like.\" I gave her a not so subtle wink as I stood up.\n\nAlthough we hadn't seen each other in a few weeks Ashley and I managed to not tear each other's clothes off. My lack of sleep and mental fatigue might have had something to do with it.\n\nAshley slowly pulled my t-shirt up over my head and tossed it aside. In turn I gently removed her tank top and then got down on my knees to undo her shorts. I planted a soft kiss just below her navel as I slid her shorts down revealing her thong covered pussy.\n\nWhile on my knees Ashley placed her hands on the back of my head holding it against her body. I continued kissing and tonging my way down from her navel to the top of her slit. I hooked the waistband of her thong with my fingers and shimmied it down her bronzed legs.\n\nNow free of its fabric shield I began licking her clit. She let out out a moan and balled her fists in my hair. I traced my fingers up the back of her legs and then cupped an ass cheek in each hand. As I squeezed my hands tight against her firm ass she began to grind herself against my face.\n\nThe tighter I grabbed her ass the tighter she grabbed my hair. The more I tongued her clit the more she ground her pussy against my face. Soon my tongue, lips, and chin were dripping with the sweet savory taste of her well lubricated pussy.\n\nI stood up and turned her around so she could prop herself up on the bathroom vanity. Now face to face with our own reflections we were able to lock eyes with each other. It was a unique perspective.\n\nI started off slow letting Ashley get used to my cock and making sure she had sure footing. As I increased the rhythm of our lovemaking I could see her nubile breasts swaying via the reflection in the mirror. The harder and faster I thrust into her the more they swayed. It was rather hypnotizing.\n\nAs Ashley neared her climax she moved one of her hands down between her legs and began diddling her fingers across her clit. This caused tiny spasms to start in her vaginal muscles and I could feel her pussy tighten around my cock.\n\nWithout a word I reached up cupping my hand under her chin and pulled her head back so I could lay a passionate, but somewhat sloppy, kiss on her lips. As our lips and tongues joined our bodies reached the next level of pleasure and our climaxes started pretty much simultaneously.\n\nMy orgasm started in my toes. I felt every muscle in my feet and lower legs begin to tighten. This caused the last thrust of my hips to not only go forward but up. As I grunted Ashley lifted up onto her tip-toes. Meanwhile my upper body tensed up as well and I gripped Ashley's neck a little tighter pulling her body against mine.\n\nI couldn't tell you exactly what Ashley felt. All I know is her hand moved quickly from her clit to my hip and as she moaned into my mouth she dug her French-tipped fingernails into the flesh of my leg. Now leaning against me for support her other hand had moved to her breast and she was gripping it just as tight.\n\nDuring the after shocks of my orgasm I closed my eyes and just road the waves of pleasure coursing through my body. I felt Ashley's pussy continue to spasm around my cock as it milked the last drops of my spunk free. Her death grip on my hip relaxed and slowly we returned to earth.\n\n\"That was intense,\" Ashley said out of breath.\n\n\"I'll say,\" I said panting to catch my breath.\n\nFor a while we just looked at each other's reflection in the mirror. I watched a small bead of sweat run from Ashley's cheek all the way down across her left breast, down past her belly-button, and onto her hips.\n\n\"Um, we're a hot mess,\" she said in a playful manner. \"I guess I need a shower now too.\" She then turned and gave me a kiss on the lips before climbing into the shower.\n\nDuring our shower we made sure to scrub each other's bodies head to toe. I took particular care of her hair gently massaging the shampoo and conditioner into her scalp and out to the tips.\n\nAfter our shower we took our time drying each other off before climbing naked into bed. I figured we had an hour or so to nap before I needed to head in for the last dress rehearsal for tonight's graduation. With any luck we'd be done by noon and could all go out for lunch as a group.\n\n+++\n\nThere are dreams, and then there are 'dreams.' I was having one of the later. I was on a beach somewhere with the hot summer sun beating down on my naked body. Between my legs was the bobbing head of some faceless blonde. It was the kind of dream you never want to wake up from because it feels so real.\n\nI moved my hands onto the head of my dreamy companion but something didn't feel right. I thought I should feel straight stringy blonde locks but what I felt was was courser and somewhat tangled. This was enough to break the fourth wall of my dream state and then I realized I wasn't exactly dreaming.\n\nI wasn't under the hot summer sun, but my cock was deep in the throat of a lovely female companion. She wasn't blonde through. Rather than long straight locks of yellow there was curly red mop atop the head bobbing in my lap.\n\n\"Jenn,\" I moaned.\n\nI looked over to my right to see a giggling Ashley who had a head of her own between her legs. The head between her legs had the straight brunette hair belonging to Jess.\n\nAfter a few more seconds of pleasure I warned Jenn I was about to cum. My body tensed and then quickly relaxed as Jenn sucked ever last drop from my cock.\n\nStanding up in triumph Jenn exclaimed, \"I win!\"\n\nA minute or two later Ashley wrapped her legs around Jess's shoulders and screamed as her own climax hit. Jess stood up withdrawing two fingers from Ashley's pussy. \"You may have won, but I think I got the prize.\" She then began licking the juice from Ashley's pussy off her fingers.\n\nTaking a deep breath I stood up and walked over to my closet.\n\n\"We figured you would need a wake up call,\" Jess said.\n\n\"Finding you and Ashley naked in bed was a real treat though,\" Jenn continued.\n\n\"So we decided to wake you both up with some oral lovin' and see who could get one of you off first,\" Jess finished.\n\n\"Remind me to ask for that kind of wake up call next time I stay at a hotel,\" I retorted as I fished out a pair of khakis from the closet. All three girls just giggled.\n\nUnceremoniously I pulled my khakis on without bothering with boxers. I then grabbed a fitted ribbed shirt that was casual, but would still look good in case I was mobbed for more photos. As I finished up with my socks and boots Ashley had fished her outfit of choice out of her bag.\n\n\"What?\" Ashley asked as I, Jess, and Jenn watched her every move.\n\n\"Hey, some guys get off on a girl getting naked, some guys like watching a girl get dressed,\" I said in my own defense.\n\n\"Well, this will be quick,\" Ashley said as she pulled a summer dress over her naked body.\n\nI blinked and then laughed. \"We are the bane of underwear companies everywhere.\"\n\n\"Yup,\" Jenn said as she flipped up her skirt revealing she was also commando.\n\n\"No doubt,\" Jenn added as she undid her halter top letting her bare breasts get a breath of fresh air.\n\nAs Ashley buckled her sandals and the other two girls took a moment to freshen up in the bathroom I grabbed my camera and checked to make sure the batteries and memory card were good to go.\n\n\"Everyone ready?\" I asked once the four of us were all in the same room?\n\nSince the weather had been nice all week the top and doors were off my Jeep. With no threat of rain I decided to take my Jeep. The girls decided to settle who was riding with me with a quick round of ro-sham-bo. After eliminating Jenn it was down to Jess and Ashley. Jenn won and gleefully jumped into the passenger seat of my jeep without so much as a hand from me. As she jumped I caught a quick glimpse of her pussy from under her skirt. Although I had seen is a million times and been balls deep in it more times than I could count I still got a rush out of such a peek.\n\n+++\n\nThe dress rehearsal was tedious. We had already walked into the auditorium about a dozen times. Practiced standing up and sitting down as a group just as many times. The speakers, speech givers, and class representatives all had a chance to practice their entrances. Thankfully we were all excused at twenty after twelve and didn't have to stay for the speakers to practice any of their speeches.\n\nOut in the parking lot the usual suspects started to gather around our cars. Ashley was glued to my hip, followed by Summer, Jenn, Jess, the wings, Doug, and Ben. Before our small group could even question where to go for lunch Doug quickly spoke up and said he had made us reservations at his family's restaurant.\n\n\"Nice!\" We all said collectively.\n\n\"Make sure to spread the word. Might as well just head straight there,\" Doug said before he, Ben and the twins headed off to his car.\n\nAshley decide to ride with Jess and Jenn decided to ride with Summer. That left me in my Jeep without a passenger.\n\n\"Wait, I'm the one with the convertible and I no one wants to ride with me?\" I said in disbelief to no one in particular.\n\n\"I'll ride with you,\" I heard a cute voice say from behind. \"Where are we going?\"\n\nI turned to see Heather in a pair of designer jeans and an off-the-shoulders top. Her hair was pulled back under her sunglasses.\n\n\"Rilo's for lunch,\" I said. \"Did you not get the memo?\"\n\nJust then her phone buzzed. She looked down at it and laughed. \"I just did.\" She then held up her phone showing me a text from Doug that stated the plan.\n\n\"Well then, let's roll,\" I said as I helped Heather climb into my Jeep.\n\nLunch was a lot of fun. We spent the better part of three hours eating and reminiscing about our four years together. We took turns telling the group how we met each other, what we first thought of each other when we were freshman, and what we thought of ourselves.\n\n\"What about your Homecoming King? What's your take on all this,\" Ben asked from across the table.\n\nI stopped and to think for a second and the room went quiet with anticipation. For a brief second I was nervous to say anything, but I decided to just go with my gut.\n\n\"If you would have asked me four years ago who I was going to be celebrating my high school graduation with I would have told you my parents. Lame, I know.\" The girls at the table giggled. \"However, right here right now, I can say I am sitting amongst the closest and best friends a man could ever ask for. I never thought I, or even we as a group, would grow so close. I know in some respect this chapter in our life is ending, but I also know that as we look forward to new beginnings the best is yet to come.\" Everyone nodded their heads in agreement. \"To new beginnings,\" I said as I raised my glass.\n\n\"To new beginnings,\" everyone echoed. As I surveyed the group I saw a few misty eyes amongst the girls and got a few head nods of affirmation from the guys. I could only imagine this was the start of what would be a very emotional night.\n\n+++\n\n\"Mom!\" I said firmly. \"It's fine.\" I then batted her hand away from my head. She had made it her mission to place each and every hair on my head, one at a time, in its own individual special spot. Just to irk her I ran my fingers through my hair and rustled them back into a more relaxed state.\n\nShe rolled her eyes and walked back to the line of parents all holding cameras. For the next thirty minutes our group posed for photo after photo after photo. After we had all had enough the girls started excusing themselves to the bathroom. Figuring the bathrooms near the auditorium would be packed I looped down a back hallway with Ben, Doug, and Will.\n\nAfter emptying our bladders we heard the door to the bathroom open. \"Don't put them away yet boys,\" a familiar female voice called out.\n\nThe twins along with Kaylie and Sarah all grabbed paper towels before walking up to us. Mandy and Liz took up positions in front of their boyfriends. Sarah knelt down in front of Will and the pixie Kaylie crouched in front of me.\n\nWith a quick wipe with the paper towel she took my flaccid cock in her mouth. Despite being worried if someone was going to walk in or not I quickly hardened in the petite girls mouth. Working her tongue and lips over every inch of my shaft she could fit, she soon had me near the edge. With one hand she gripped the base of my cock and began stroking the part that wouldn't fit in her mouth. With the other she reached into my khakis and cradled my balls. That was enough to send me over the edge and just as I warned Kylie I was cuming I blew my wad into her mouth.\n\nI must have not given the poor girl enough warning because she as soon as she collected my offering in her mouth she quickly ran to the sink and spit it out. She then took a deep breath sharply inhaling two lung-fulls of air.\n\nI tucked my cock back into my pants and shuffled to Kylie's aid as I buckled my belt. \"I'm so sorry,\" I apologized.\n\n\"No, it's okay,\" Kylie said as she recomposed herself. \"I just wasn't ready.\" I asked again if she was okay. \"Yeah, I'm fine. Really.\" She then stood up on her tippy toes and pulled me down for a quick kiss. \"Always wanted to give a blow-job in the school bathroom. Figured this was my last chance.\"\n\n\"And we couldn't let the little minx have all the fun by herself,\" Sarah said as she wiped her chin off and double checked her makeup in the mirror.\n\n+++\n\nThe graduation ceremony was long and boring. It was pretty typical. A few inflatable beach balls found their way into the crowd. As people walked across the state their friends and family cheered. As few of the class-clowns did something stupid to get laughs out of the crowd. I just wanted it to be over so we could get to our after-party.\n\nWhen my name was called I could hear Ashley whistle a cat-call. I heard a few hoots and hollers I recognized, but mostly I was glad to have finally gotten my high school diploma. As we stood as a group of graduates and the audience cheered it finally sank in that this chapter in my life was officially over.\n\n+++\n\nAs usual Jenn's house served as the host location for our party. She swore up and down it was all taken care of and she needed no help from anyone. When I pulled into her driveway I was completely blown away. The entire front yard was decorated like in a tropical beach theme complete with tiki torches and a giant inflatable flamingo.\n\nUnaware this was a theme party I was a bit aghast when Jenn greeted me at the door. \"Don't worry,\" she said, \"everything's been taken care of.\" She then pointed to a table that had was cluttered with bags each with a name on it. I picked up the bag with my name on it and gave Jenn a suspicious look. She just smiled and mouthed 'open it.'",
        "Inside the bag was a pair of board shorts, a cheesy Hawaiian shirt, a wrapped gift, and a card. I decided to open the card first.\n\nInside I read, 'Nothing I can say in words will ever express how grateful I am to have you in my life. You have been a friend, a brother, a confidant, a leader, a lover, and so much more than I could ever have imagined. I chose this theme because it celebrates both the fact we are on vacation as well as starting a new journey together. Now go get dressed and join the group out on the deck.' After finishing the card I went over and gave Jenn a quick hug before heading upstairs to change.\n\nAs I was halfway undressed Summer and Heather walked into the guest room I usually called my own when I stayed at Jenn's. \"I had no idea,\" Heather said in near disbelief.\n\n\"Don't look at me,\" I said shaking my head. \"I didn't either.\"\n\n\"Neither did I,\" Summer said.\n\nI pulled out the board shorts and Hawaiian shirt from my bag and then though, 'I wonder what's in the girls' bags.' \"What's in your bags?\" I said holding up my shorts.\n\nThe girls giggled as they pulled out grass skirts and a bikini. They also had a coconut bra tops to go with their swim suits.\n\n\"She's outdone herself this time,\" I said laughing at the idea of all the girls walking around in coconut bra tops.\n\nOut on the deck the group slowly grew. Guys in trunks and shirts with the girls rocking their grass skirts. A live steel drum band banged out some reggae tunes while tiki torches flickered giving everything a nice warm glow.\n\nEven though we had seen each other just hours before durning lunch and again at graduation there were plenty of tearful hugs and emotional moments shared between people. Every now and then a pair would disappear and I figured our sexual escapades tonight would be kept under wraps given that there were a fair number of people from outside our circle at this party.\n\nI was leaned back in a lounge chair when Summer sauntered over to me. She was twirling a flower necklace around her finger while holding a drink in her other hand.\n\n\"Would you like a lei?\" She asked in a seductive manner. I could only assume the double entendre also meant lay in this case as well.\n\n\"I would love a lei,\" I said sitting up in the chair and leaning forward enough for her to drop the flowered necklace around my head.\n\nShe gave me a coy smile and a wink before making her way across the deck heading inside.\n\nNot wanting to see too eager, nor draw attention to us wandering off together, I made my way around the deck saying high to a few people and filling up my cup with some water before heading inside.\n\nHeather gave me a knowing smile and mouthed 'I'm next' before returning to the conversation she was a part of. I guess I wasn't being as subtle as I had hoped.\n\nWhen I entered the guest room Summer had already lit a dozen candles and was wearing nothing more than her grass skirt and coconut bra top. Her bikini was resting on the nightstand next to the bed. Upon hearing me walk in she hit play on her mp3 player the familiar wa-waa-wa of a Hawaiian hula song started to play.\n\nI chuckled and took a seat on the bed as Summer did her best impression of a hula dance back and forth across the bedroom floor. As she spun around she undid the string to her coconut bra, which wasn't hiding much of anything mind you, and then tossed it aside. Before she could undo her skit I stopped her.\n\n\"No, leave it on,\" I said as I stood up and closed the distance between us.\n\nShe giggled and wrapped her arms around me giving me a passionate kiss complete with tongue.\n\nAs the Hawaiian hula song played in the background Summer undid the buttons of my shirt but left it on. She then undid the string to my board shorts and let them fall to the ground.\n\n\"Just a quickie,\" she said in a sultry tone. \"Then let's go back to the party.\"\n\nOne of the nicest features of the bed in the guest bedroom is that it has an over-stuffed mattress which is almost waist high on me. So as Summer laid back on the bed I parted her skirt revealing her nude pussy to me. I could see her wetness glistening in the candle light.\n\nI stroked my cock a few times to ensure it was completely hard and slipped a few fingers into Summer's pussy. I then took her juices and coated the shaft of my cock as if it were an all natural lube. As I leaned forward and guided my cock into her pussy Summer let out a moan and proceeded to wrap her legs around my waist.\n\nIt was a quick fuck. We were both worked up and eager to please. Summer tweaked her nipples pinching and pulling them as I looked down at her. I kept one hand on her hip pulling her body to mine while I worked the fingers of my other hand across her clit.\n\nSoon I was hitting my forth climax of the day as Summer and I came together.\n\n\"Umm, just what I needed,\" Summer cooed as I withdrew my cock from her pussy. She then stuck two fingers into her pussy and scooped out a dollop of our mixed fluids. She did that two more times before being totally satiated and getting up to get dressed.\n\n\"Think anyone will notice if I just put the coconut part back on without my bikini top?\" She said with a mischievous grin.\n\n\"Yeah, and sadly I don't think it's that kind of party tonight,\" I said disappointed.\n\nI pulled my shorts back on and tied them up and then buttoned a few buttons on my shirt.\n\nSummer and I quickly made our way back to the party and aside from a few glances from Heather, Jenn, and Ben, our absence seemed to have gone unnoticed.\n\nI made another trip around the deck stopping to talk to people from outside my usual circle. I knew this was probably the last time I would see most of them in contrast to my inner circle whom I was sure I would see a lot of over the next few days before we all headed off for our summer plans.\n\nAround 1am the party officially fizzled out. Everyone from outside the inner circle had come, made their appearance and gone. Some went home, others went to some other party across town. Ben, Doug, and the twins made an early exit not doubt to do their thing as a coupled-couple. Alex had shown up and hinted at another tit-job but the opportunity never availed itself. She assured me that was an open offer. As nice as it was, I knew I had a long list of other willing participants that would go all the way with me. Not to mention I never felt that strong emotional connection with Alex anyway.\n\nKylie had come early but left early to go to another party. She thanked me again for letting her cross off a school bathroom blow-job from her 'bucket list.' I made sure to tell her if there was anything else she wanted help crossing off to give me a call. She gave my cock a few pats through my swim trucks and smiled before heading off.\n\nJenn, Jess, Ashley, and Will were all sitting around a patio table. I noticed the steel drum band was packing up and decided to give them a hand. I made sure to thank them again and tipped the guys each a $20 spot telling them they did an awesome job. Judging by the fist full of cash in his pocket I wasn't the only one to show my appreciation.\n\nWhen I returned to the back deck it was a disaster area of empty cups and plates. Only half of the tiki torches were lit, and there were half-eat bowls of snacks on the outside bar. Just as the urge to clean hit me Heather called me over to the group.\n\n\"You staying the night?\" She asked as I pulled up a chair.\n\n\"That was the plan\" I replied.\n\n\"Well, I guess it's just us then,\" Jenn said as she survey the group.\n\nI looked over at will and gave me a knowing grin. Two guys, and six girls. Great odds.\n\n\"Well, in that case, 1am rule is in effect,\" Jenn said. \"No suits allowed in the pool and everyone must swim!\"\n\nWe all cheered and quickly stripped out of our clothes. A pile of coconut bra tops, Hawaiian shirts, and swim suit bottoms formed in a matter of seconds. After that splashes where heard as we all jumped into the pool.\n\nThe girls did their best trying to dunk Will and I by ganging up on us. One at a time I would just toss them from the shallow end to the deep end. There were copious amounts of groping going on. At one point I had ahold of one of Heather's breasts in one hand and one of Ashley's breasts in the other. Meanwhile someone had a hold of my cock from behind.\n\nWill had gotten Jenn up on the patio at the edge of the pool and was nose deep in her crotch while Jess was behind him no doubt giving him a reach around.\n\nAbout the time I wondered what happened to Sarah she popped up behind Heather and Ashley. Both of them let out a scream and Sarah just grinned. As I looked down into the water I could make out the vague shadowy outline of Sarah's hands knuckle deep in each of their pussies.\n\nThat meant Summer was behind me and as I let go of the girl's breasts I turned to pick Summer up and toss her aside.\n\nNeeding a moment to catch my breath I sat down on the underwater steps and watched as Jenn and Jess switched places while Sarah, now assisted by Summer, continued to finger both Heather and Ashley.\n\nSeeing the hour was late, not nearly 2am, I made it known I was ready to turn in for the night.\n\nTaking the hint, Heather, Sarah, and Jess said they would follow me to the guest room. Summer, Ashley, and Jenn wrapped up around Will and took him upstairs. The guy had a shit-eating grin on his face I doubt the devil himself could wipe away.\n\nAside from the overstuffed bed, the handicapped accessible shower in the guest suite at Jenn's house was an epic feature. I doubt the designers of the house intended for an in-law suite to be the setting for repeated teenage orgies, but it worked perfectly for situations like this.\n\nIn the shower six hands worked their way across four breasts, three asses, two pussies, and one cock. As we washed away the pool water we made sure to leave no inch of each other's body unattended.\n\nAs we adjourned to the bedroom I made it known that Heather had called 'next' earlier and that she should get first dibs tonight. No one disagreed and in no time Heather was on her back with Sarah attached to one breast and Jess attached to the other. I decided to kneel and get Heather's pussy lubed up with tongue first.\n\nUnable, or unwilling, to resist the three fronted attack on her body Heather climaxed quickly and strongly. Her pussy unleashed a torrent of fluid into my waiting mouth and with each aftershock of an orgasm she let out a little more fluid.\n\nNot wanting to let her come down from such a high, I stood up and slid my cock into her pussy without a warning. At the same time Jess moved to straddle Heather's face positioning her pussy over the orgasming girl's mouth. Heather reached up and gripped Jess's hips tight and I saw her tongue start to dart across Jess's clit. Meanwhile Sarah grabbed one of Heather's breasts with one hand, coupled her mouth to one of Jess's breasts, and then reached around to Jess's ass with her other.\n\nIn no time I was blowing my loud deep inside Heather's pussy while Jess climaxed over Heather's mouth. Sarah, content with her role in all this flopped down on the bed staring up at me as I caught my breath.\n\nNeeding a drink I made my way out to the kitchen to fetch a round of waters for us all. Summer came down just as I was leaving. Her body glistened with a mixture of sweat and sexual fluids.\n\n\"A quick drink before round two,\" I said as I handed each of the girls a bottle of water.\n\nThe three of us cuddled on the bed taking a moment to recover. However, Sarah, being the only one yet to orgasm, was getting a bit antsy. After a final sip of water she positioned herself between my legs and began playing with my limp cock attempting to coax it back to life.\n\nShe started by tenderly fondling my balls along with gently tugging at my shaft. The stimulation, along with seeing her nude body positioned subordinately between my legs, got the blood flowing to all the right places. \u2028Heather and Jess decided to just sit back and enjoy the show Sarah and I were putting on. The two of them propped themselves up against the bed's headboard and began slowly rubbing their own bodies. Their legs were casually intertwined and I figured in a few moments their hands would be wandering to each other's bodies.\n\nSatisfied I was as erect as I was going to get, Sarah relinquished my cock from her grasp and climbed up my body. She pushed me back onto the bed and straddled my hips. As she lowered herself down I turned to watch Heather and Jess diddle their clits and for added visual stimulation they each grabbed a handful of tit-flesh with their free hand. I soon found my attention pulled back to Sarah as she guided my hands up to her amble bosom. \"Why look at theirs when you can touch mine?\" She teased. That was more than enough to captivate my wondering attention span and for the next few minutes I was focused on Sarah and Sarah alone.\n\nAs she rode me in a cowgirl manner I slowly rolled my hips letting the tip of my cock hit Sarah's innards at every angle possible. At the same time I slid my hands down from her breasts and put gentle pressure on her abs with my thumbs. Making slow circles on her belly I dug my other fingers into her her sides. The mix of pleasure, pressure, and pain heightened her arousal. Soon she was panting and moaning.\n\n\"So close,\" Sarah cooed. Her confession much have been taken as an invitation by the other two girls because no sooner had Sarah and I increased the pace of our coupling had Jess and Heather flanked Sarah each latching into to a breast. Simultaneously they each placed a hand on my chest and racked their fingernails from my collarbone to my groin then back again.\n\nAs Sarah climaxed I blew my last load of the night into her pussy. Savoring every last second of pleasure I let the multiple sensations of Sarah's knees tightening up against my hips, the warmth of her love box on my cock, and the gentle raking of fingernails on my chest overwhelm my senses.\n\nLying in blissful post orgasmic bliss the four of us exchanged kisses before taking a brief moment to clean ourselves off and crawling into bed.\n\n+++\n\nSleeping with a beautiful women never gets old. Doubling down on that is even more fun. Trying to triple it is not a feat for the meek. When I woke up Saturday morning both of my arms were tingling with numbness as was one of my legs. If that wasn't enough there was hair everywhere. Draped across my chest where the lovely locks of Heather, Sarah, and Jess. How they didn't end up in a giant knot I'll never know.\n\nWith a solid case of morning-wood singling my bladder was full and need of emptying I slowly freed my limbs from their captors. Heather was tucked against my left side with her head on my chest. Jess was somehow wedged between her and my hip while Sarah was glued to my right side with her legs wrapped around my thigh. She let out a stifled moan as I pried my leg free and ended up dragging my knee across her clit in the process.\n\nSensing the void between them the three girls soon gravitated towards each other as if guided by some mystical force. Fighting the urge to pee I was amazed watching them fumble in their sleep, or at least half asleep, as they groped and grabbed for something to hold onto.\n\nWhen I returned from my trip to the bathroom Jess and Heather were spooning with Heather's arm draped over Jess's side and a firm grip on her smaller breast. Meanwhile Jess and Sarah were face to face having fallen back asleep mid-kiss with their hands resting gently on each other's hips.\n\nNot wanting to spoil the scene, or their peaceful slumber I threw on a pair of boxers and made my way outside. The cool mornings of late spring were now giving way to the warmer mornings. After taking a deep breath of fresh air I found a comfortable spot in the sun near the patio's outdoor water feature.\n\nAllowing the calmness and serenity of the moment to wash over me I let my mind drift. For a while it dwelled on the sexual antics of the night before no doubt the thoughts were accompanied by an easily readable smirk on my face. It then played back through the graduation ceremony and all the moments I shared with my friends and family. Next my mind wandered forward and I began to wonder what the summer would bring and how to maintain the friendship and bonds that I had built over the last year. After a long while my mind finally calmed down and I was able to just enjoy the peace of the moment. I gave my worries and fears up and entered that familiar state of peace I could only find through meditation.\n\nIt could have been minutes, it could have been an hour, but at some point I heard the patio door open and close. Satisfied with my meditation time I slowly gathered myself. However, much to my disappointment I found no one out on the patio when I opened my eyes.\n\n\"So it was you,\" I said as I walked into the kitchen seeing Jenn gathering breakfast items on the center island of the kitchen.\n\n\"Didn't mean to disturb you,\" she said apologetically.\n\n\"No apology needed,\" I said as I reassuringly kissed her on the forehead. She took a respite from her prep work to hug my torso. \"Making breakfast?\"\n\n\"Yeah. I guess everyone else is still asleep,\" she said letting go of me.\n\n\"Then let's give them something to wake up to,\" I said letting a warm smile wash across my face.\n\nI am by no means a gourmet chef, but if there was three things I could manage it was bacon, eggs, and toast. Between the two of us Jenn and I managed to have three different kinds of eggs cooking, toast cycling in and out of the toaster, along with a sizable tray of bacon and sausage in the oven. At some point Jenn fired up the coffee machine and within moments we had enough food cooked to feed an army. Well, at least feed an army of oversexed teenagers the morning after love making sessions with multiple partners.\n\nSure enough, with no invitations needed, four sleepy bodies began making their way into the kitchen.\n\n\"That smells so good,\" Heather said as she pulled up a stool to the kitchen counter.\n\n\"Coffee,\" Summer said not even bothering to wipe the sleep out of her eyes. Watching her fumble for creamer and sugar was humorous but I dare not let her hear me laugh.\n\nAshley echoed Heather's call for coffee and then found a place in the corner to relax.\n\nWill grabbed my hand and gave me the typical one-arm bro-hug and thanked me for making breakfast. Jess and Jenn shared a hug as well although it was a bit more intimate.\n\nAs we slowly came to life with coffee and food in our bellies the six of us began talking about our days and the rest of our graduation weekend plans. Most of them orbited around family obligations of dinners and appearances with extended family.\n\n\"Do you mind coming along to dinner with me?\" Summer asked batting her eyes at me for added effect.\n\n\"Yeah. My family isn't really doing anything today and I am sure they won't mind me keeping you company,\" I said before taking a bite of bacon. I then looked over at Ashley who nodded her approval and added a quick wink to drive the point home.\n\n\"Great. I am not sure I can face my grandparents alone. They keep pestering me about a boyfriend. So be warned, you will get asked a lot of questions,\" she then gave me a worried look as if I would back out on her.\n\n\"Well, I guess I'll just have to them them about Christmas break and that they have nothing to worry about.\" That comment earned me a wadded up napkin thrown my way.\n\nHeather and Will made similar plans and I could tell that under the table they were holding hands. It was good to see them being affectionate and I wondered what the future might entail for the two of them.\n\n\"What about you two,\" I said pointing at Jess and Jenn with a piece of toast.\n\n\"Oh, we'll probably clean up here, make some sweat passionate lesbian love in the afternoon, and then have dinner with my parents,\" Jenn said as Jess giggled.",
        "\"Well then, sounds like we all have a busy day ahead of us,\" I said before savoring a bite of honey maple bacon.\n\n+++\n\n\"Thanks for coming to dinner with me,\" Summer said as she rubbed my thigh. We hadn't even made it out of the Olive Garden parking lot before she had unzipped my slacks.\n\n\"I don't think your grandparents were too overbearing,\" I said as she fished my cock to freedom.\n\n\"Well, I think asking you what you were going to name their great grandchildren was a bit over the top.\" Summer then leaned down and began to run her tongue around the tip of my cock. I did my best to focus on the road but once up to speed I was able to lock in the cruise control and relax my legs.\n\n\"Oh they are just having their fun. They just wanted to see if they could get a rise out of us, that's all.\" Summer moaned something into my cock which was enough of a cue to just sit back and enjoy the road-head she was giving me as a thanks for keeping her company. Truth be told the dinner with her family had been a pleasant one and I was glad I had been able to go.\n\nSummer gagged a bit when I hit a pothole and bounced up into her throat a little too far. She was getting better at deep-throating me but the awkward angle of being in the car and the unexpectedness of it all didn't help.\n\nWhen she slipped a hand into my pants and began playing with my balls and the base of my shaft it was enough to tip me over the edge. Fighting the urge to close my eyes, I was still driving after all, I felt the orgasm wash through my body. I tensed up my hips and thighs to help keep the explosion of pleasure located in my lower body. The last thing we needed was an arm spasm to send us off course.\n\nSatisfied she had drained the last of my load from my cock Summer tucked my flaccid cock back into my slacks and gently zipped up the fly. \"That's a desert a girl could get used to,\" Summer said as she checked her lipstick in the passenger side vanity mirror. Content with her appearance she flipped the visor up and then laced her fingers into my right hand and for the rest of the trip we rode together in peaceful quiet just enjoying each other's presence.\n\nAs we got off the exit for our hometown I asked Summer what her plans where.\n\n\"Hadn't thought about that,\" she said with a coy grin.\n\n\"Well, Ashley has been at my parent's house all evening,\" I said with a mischievous grin, \"I am sure she would welcome the added company if you would like to spend the night.\"\n\nWithout a word Summer let go of my hand and pulled out her cell phone.\n\n\"Hey mom, I am going to spend the night at Steve's house,\" she paused giving her mom a chance to speak. \"I know he's a nice boy mom,\" she said sarcastically for my benefit.\" It was quiet again as her mom no doubt had more to say. \"Yes mother. I will be very nice to him.\" She then told her mom she loved her and hung up.\n\n\"She says I can stay over,\" Summer said as she reintertwined our arms. \"She said you're a very nice young man and that I should be nice to you.\"\n\n\"If only she knew,\" I said with a smirk replaying all the times Summer and I had had sex over the last few months.\n\nSummer just laughed.\n\nOne of the reasons by family had no real plans for Saturday evening was that my dad had to go away on business. He was able to be there Friday night for my graduation but I knew he had to be four states over by Monday morning and I knew he liked to have Sunday to rest and acclimate to the town he would be in. That left my mom and Ashley home together while Summer and I had dinner with Summer's family.\n\n\"I'm home,\" I said as I tossed the keys to my mom's car on the table near the front door.\n\n\"Your mom is out with Jenn's parents,\" Ashley said as she walked up to Summer and I with three wine glasses. \"Said she'd be home by midnight.\"\n\nI instinctively looked down at my watch and then up at both girls and grinned. It was just about nine o'clock with meant we had three hours.\n\n\"Not so fast,\" Ashley said as I began to head upstair. \"Let us go get ready first.\"\n\nI cocked an eyebrow and looked back and forth between the girls. Summer seemed equally unaware of what Ashley had in mind.\n\nStanding at the base of the stairs I watched as Ashley led Summer up to my room by her hand.\n\n'They almost look like sisters,' I thought to myself. In fact, aside from their hair color, their body types were almost identical. Ashley's breasts were a little bigger at a full C-cup while Summer's with a little smaller at a full B-cup. Summer's ass with a big more fuller in the hips than Ashley's, but at 10 yards the two could probably pass for body doubles in almost every other way. They were about the same height and the same weight and both had tight swimmer's physiques with very little body fat.\n\nAfter downing my first glass of wine and tracking down the bottle in the downstairs bar for a refill I heard my name being called.\n\n\"Come up when you're ready,\" I head Ashley yell.\n\n\"Should I bring more wine?\" I asked.\n\n\"Please. We're out,\" she replied back.\n\n'Out, already?' I asked myself rhetorically. That was a nearly full bottle of wine.\n\nWhen I got up to the room I could hear giggling through the door.\n\n\"It almost fits,\" Summer said as I opened the door to see her in one of Ashley's lingerie tops. She was probably referring to the built in bra cups being a little too big and as she bent over I could see a gap all the way around leaving her breasts unsupported. Otherwise the top looked great on her and hugged the curves of her body in a sensual and sexy manner that got my blood pumping.\n\nNot to be outdone, Ashley was in a stockings, garter, and corset top that turned her already lethal body into a tactical weapon of mass seduction.\n\n\"Ladies, let me just say the two of you look exquisite,\" I said. I then motioned with the full bottle of wine. \"Shall I top off your glasses?\"\n\nThe girls were still all giggles as I went about filling their glasses. Summer was dancing around and would occasionally bend over to jiggle her tits at Ashley and I demonstrating her boobs had yet to magically grow a cup-size to fill out my not-really-a-cousin's borrowed top.\n\n\"Maybe I'll get a boob job,\" Summer said sliding her hands into the top to cup her breasts while pouting in disgust.\n\n\"Oh don't do that,\" Ashley said as she walked over to my friend. \"We just need to take you out shopping for some properly sized lingerie. I think your breasts are perfect just the way they are.\"\n\nSummer looked up at Ashley with wide eyes. \"Really? You like them?\" She then looked down and back up at Ashley. \"I just wish I could get the kind of cleavage you have. Look at that.\" For emphasis Summer ran her finger from the edge of the corset up the crack between Ashley's boobs.\n\n\"And I would kill for an ass like yours,\" Ashley said grabbing a handful of Summer's ass.\n\n\"Oh, this big thing,\" Summer said slapping her self on her ass check. \"This is my whooty. My white-girl booty.\" For fun she stuck it out and jiggled it up and down. That got me excited.\n\n\"Hey, I didn't know you could move that like that,\" I said adjusting my growing cock.\n\nBoth girls giggled and walked over my way. \"Well then, we'll just have to see which you like more. Summer's whooty or my cleavage.\" Ashley took my wine glass from me and then pushed me back into my desk chair. \"Summer, be a dear and fetch me some of lover-boy's ties from his closet.\"\n\nI tried to protest, but they knew I wasn't serious. I was at their mercy and they knew it. My arms were tied behind my back and my feet were tied to the legs of the chair pulling my knees apart.\n\nAshley woke up my computer with a flick of the mouse and fired up my iTunes program. \"Here we go. Steve's love mix.\" She then scrolled down till she found a song liked.\n\nFor the first song the girls just danced along. I watched their bodies twist and turn in front of me. Ashley made sure to bend over and give me a few views of her cleavage and of course Summer's ass was jiggling for my attention as well. The girls, as a pair, kept their distance though. As the second song started the sexual tension, at least my sexual tension, was becoming palpable.\n\nFor the entirety of the second song the girls danced with each other. By danced of course I mean dirty danced. Their hands roamed over each others bodies. Ashley stuck her hands down into the void between Summer's breasts and the bra cups of the bustier she was wearing. Summer even stuck her hand down into Ashley's g-string to finger her clit for a brief second before removing it and seductively licking it clean for my benefit.\n\nThe third song found the girls giving me a strip tease by slowly undressing themselves. My cock was aching and straining against the fabric of my pants. I dare not beg for release though because I am sure Ashley would just prolong things a while longer and let me simmer till I was truly ready to boil over.\n\nClad in nothing but their panties the two girls finally came over to me. As the fly to my pants was unzipped my cock sprang out like a spring loaded knife blade.\n\n\"Boing!\" Summer said causing both girls to giggle for a lengthy minute.\n\nOnce calmed down they briefly untied my ankles so they could remove my pants without ruining them. While Ashley retied my bonds Summer hung my pants up in my closet. When she returned she was twirling yet another tie of mine and soon I was blindfolded.\n\n\"So what's it going to be,\" Ashley said seductively as she smushed her breasts against my cock. \"Tits,\" she then trailed off as I felt Summer begin to grind her ass into my groin, \"or ass.\"\n\nOver the course of the next two songs the two girls went back and forth grinding themselves against by body. Summer would bend over and thrust her ass against my cock and jiggle it up and down. The sensation was a new one for me since it was not enough to get me off but more than enough in my bound and blindfolded state to drive me absolutely wild.\n\nAt one point the girls took turns licking and sucking on my cock before placing their mouths on opposite sides of the shaft and stroking me together with their lips.\n\n\"I won't last much longer if you keep that up,\" I moaned as I curled my toes against the legs of my chair.\n\n\"I think he's ready,\" Summer said.\n\n\"Oh, he's always ready,\" Ashley said. \"I just like to play with my food before I eat it,\" she continued in a sultry tone.\n\nFree of my bindings I rubbed my wrists and ankles briefly to resume the flow of blood to my extremities. When I reached up to remove the tie acting as a blindfold I was halted.\n\n\"No, leave it on,\" Ashley said short of commanding me.\n\nLuckily we were in my room and I was able to walk blindly over to my bed only briefly tripping over Ashley's over-night bad which I forgot was laying near the foot of my bed.\n\nFeeling around I found one foot and then another. Unsure of to whom it belonged I slowly began working my hands over the foot, then ankle, up to the calf, and then thigh of the mystery leg. My first guess was Ashley given the rather trim nature of the leg, but I couldn't be 100% for sure.\n\nBlindly I leaned down and began kissing my way up the mystery thigh starting somewhere near the knee. When I reached my prize the familiar musky smell and taste was most certainly Ashley's.\n\nWhile I tongued at Ashley's clit I blindly felt around the bed with my arms for Summer. When I finally felt her leg I was able to trace her position to squarely behind, if not under, Ashley. Continuing to feel around I followed Summer's arms to her hands which were cupping and fondling Ashley's c-cup breasts.\n\nAs Summer and I kneaded and played with Ashley's breasts I continued licking and sucking on her clit. In a manner of minutes Ashley was bucking her hips against my chin and I took this as cue to add a little digital stimulation. Reluctantly I took my right hand off Ashley's left breast and then inserted two fingers knuckle deep into her tight twat.\n\nAshley let out a quiet scream which I could only guess was muffled by Summer's mouth locked lip-to-lip with Ashley's. As her pussy flooded into my mouth I slurped up every drop of Ashley's orgasmic offering before being content that her orgasm had, at least for now, passed.\n\n\"I'll have what she's having,\" Summer said jokingly as I felt the bed shift as the two of them changed positions.\n\nOnce comfortable I began an oral assault on Summer's pussy. I worked my pre-lubed finger into her pussy and my tongue quickly began flicking its way through the alphabet. Through experience I knew Summer was a double-run girl. About the time I got to the P-Q-R part my second run through the alphabet with my tongue her orgasm would start and when I would finish with Z I would just flick back and forth about a dozen or so time as the young nymph's body wiggled under me.\n\nAs her orgasm subsided I removed the tie from my eyes and found Ashley's hand firmly locked into Summer's breasts. The three of us grinned at each other and I knew it was time for me to have mine.\n\nThe two girls flipped over onto their hands and knees and pointed their asses as me with the feet hanging off the edge of the bed. Sliding them into position with a mix of dominance and lust I started first with Summer as Ashley diddled her own clit keeping her arousal high.\n\nAfter two dozen thrusts into Summer's pussy I pulled out and positioned myself behind Ashley. The first act of penetration was slow but the rest were hard and fast. Ashley grunted and moaned as she balled her fists full bed sheet and blanket.\n\nWhen I moved back to Summer the two girls angled themselves closer together so they could kiss while I thrust into Summer's tight young body. Summer let out a sharp eek of pain as Ashley bit down and pulled at her lower lip. I then took the opportunity and laid a firm, but still somewhat gentle smack on Summer's ass. She wasn't too into pain, but I also knew it was something Summer really hadn't explored either.\n\nRaising herself up Summer reached out and grabbed the back of Ashley's head by a fist full of hair. She pulled my cousin towards her with a ferocity I had never seen. I in turn smacked Summer hard on the ass which caused the girl to yelp, grunt, and then moan before she yanked Ashley into a forceful kiss.\n\nAshley took the cue and began angerly making out with Summer as I pounded into Summer's cunt. With each thrust I began to push harder and deeper into Summer letting my own guttural grunts escape as my hips met hers.\n\nSomehow Ashley worked her body under Summer's and then Summer pushed back into me with her hands pushing down on Ashley's breasts. In response Ashley placed her hands on top of Summer's and squeezed causing the girls hands to grip onto Ashley's breasts in unison.\n\nWithout warning Summer screamed out as an orgasm tore through her body. She dropped back down to Ashley and began attacking her nipples nipping them one at a time with her teeth.\n\nI withdrew my cock from Summer's pussy once it stopped spasming and then pushed her body off of Ashley's. She fell onto her side and then quickly scrambled on all fours to get back the love making like a starved dog being denied it's last meal.\n\nSternly I pulled Ashley's body to the edge of the bed and began bucking my hips into her with my cock buried in her pussy. Grunting and moaning like two pigs in heat the two of us climaxed together with Summer mauling at Ashley's breasts.\n\nOnce back to my senses I saw Ashely knuckle deep in Summer's pussy as she finger fucked the young girl to one last orgasm.\n\nI collapsed on the bed panting.\n\n\"Well,\" I started to say between breaths, \"that was interesting.\"\n\n\"Umm, just the way I like it,\" Ashley said rolling over to lay a kiss on my chest. \"Rough.\"\n\nSummer was a little embarrassed. \"I dunno what came over me,\" she confessed in a sheepish tone. \"I've never made love like that before.\"\u2028\u2028\"Oh honey don't kid yourself,\" Ashley said rolling over to lay a kiss on the other girl's chest. \"That was out right fucking. Pure, animalistic, hot and heavy, fucking.\" She said the last bit with a bit of pride. As if she had just introduced someone to something new and exciting.\n\nAfter a shower where the three of us took our time to clean every nook and cranny of each others bodies we crawled into bed. After a few good night kisses I turned out the bedside light.\n\nAshley got in the last word and it was the only thing I thought about till I fell asleep and was also the first thing I thought about when I woke up. \"Summer, you should come lifeguard at the resort with Steve and I.\"\n\nThe end...\n\n...or is it?"
    ],
    "authorname": "yoursilentknight",
    "tags": [
        "high school",
        "graduation",
        "18-year-old",
        "threesome",
        "orgy",
        "group sex",
        "party"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/high-school-zero-to-hero-ch-11"
}