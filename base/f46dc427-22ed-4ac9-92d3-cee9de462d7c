{
    "title": "Warming the IcePrincess Pt. 04",
    "pages": [
        " Authors note: I strongly urge you to read all of the preceding chapters. With the context they provide, this chapter and those that follow will be much more enjoyable for you. Without knowing the characters and from whence they sprang the story may not make much sense. Many of the chapters contain highly erotic scenes of adults having intimate sexual relations. If you are somehow offended by this or are under 18, please stop reading here. To all the rest I wish you the very best and Thank you for reading. \n\nJ-stroke \n\n Part 4\n\nChapter 15\n\n(Sparring Partner) \n\nWhen I eased my car to the curb in front of the community center at a little after nine am, I was brimming with excitement about today's class. We had been coming up short on live volunteers to smack around lately and the thought of whooping up on Special Agent Gibbons held a certain appeal for me. Secretly I wished it was Walcott who was scheduled to take a pounding this morning, but sometimes a girl's just got to make due with whichever FBI agent shows up for his ass whipping. With a tall cup of my favorite Java in one hand and my gym bag over my shoulder I headed down the long sidewalk towards the side entrance to the building. Halfway up the narrow concrete walk I noticed a white florists van slowly parking in the street along the side entrance to the building. Its worn brakes gave a telltale squeal of hard use and neglected maintenance. Something about it seemed out of place but it me took a minute or two before I figured out why. Its windowless sides were painted with a logo from a florist's shop that I knew was located on the far side of town. The van should have been closer to the bigger money east side of town where Claire's condo was situated. There was also the fact that on this block there was little in the way of homes or business that would require the services of one of the more expensive florists in town.\n\nThe van was quickly forgotten as I stepped inside and began changing into my workout clothes. The preparations I needed to have set up for the class occupying my mind fully. I wanted to get everything ready and do my own warm-ups before the others started showing up and I had less than forty-five minutes to get it all squeezed in. When the class finally assembled at 10:00, I had already been through my full regime of stretching and had a brief but energetic session on the heavy bag. Special agent Gibbons was introduced to the smiling women fully decked out in the latest fashion for a human punching bag. For the next two hours, he was tossed, slammed to the ground, and used as a tool to demonstrate the five vulnerabilities of your average male attacker. Eyes, nose, throat, nuts, and knees, all the classics. Every man has them and exploiting any of them effectively could make all the difference to a lone woman in a dark parking lot or a lonely street late at night.\n\nKeith took all of these indignities with admirable stoicism. By the end of the class, his fingers had been bent and abused. His body had been punched, kicked, thrown around. He'd been slammed to the mats countless times but he took all of it without complaint. After the class, Melanie the other volunteer instructor and I both congratulated him on being the best simulated-attacker we've had in the entire six weeks of the course. \n\nHe responded with a tired sigh as he stripped off the now sweaty padding, \"I deserve a medal for taking abuse like that.\"\n\nMel piped up with a broad smile as she tapped the wedding band on his left hand, \"You already have one. Don't even try telling me that our little class here is as rough as what you already get at home special agent.\"\n\nHis knowing smile started the two of us chuckling but he fired back, \"Touch\u00e9, but at home my lovely Mrs. gives me at least a little time to recover between my beatings, sometimes its even a whole day.\"\n\nMel howled at his snappy rejoinder as she shook his hand saying warmly, \"It was a real pleasure having you in class today Keith, but I have to get going and see if my husband needs an ass kicking of his own. You'll lock up right Jane?\"\n\n\"Yeah I got it Mel, you have a nice weekend,\" I told her back as she hustled for the door.\n\n\"Why is it that I have no trouble at all believing she would do exactly that when she gets home to the poor man?\" Keith asked me smiling and shaking his head.\n\n\"Ahhh... Mel talks tough but she's a sweetheart, besides her husband's a marine just back from the gulf. I think he can handle her. Hell the man treats her like a princess and she knows it.\" \n\nWhile helping me bag up the pads so I could drop them off at the dry cleaners I asked him sweetly, \"Our little group of ladies didn't really hurt you did they?\"\n\nHe smirked and answered, \"Not that I'll admit at work on Monday, but I'd be lying if I claimed I wasn't a little sore.\"\n\n\"Oops sorry,\" I snickered at his tone, \"I should have warned you that the class is getting pretty advanced. The fact is we've been gearing up for graduation exams in a couple of weeks. Hey, if you'd like to come watch there's a party afterwards, hell you could bring the wife and kids too.\"\n\nHe laughed and told me, \"There's no way I'm bringing my wife to a place where they teach women to do this. She'd kill me for sure.\" \n\n\"Well if it's any consolation you wouldn't be the only battered law enforcement officer in attendance,\" I told him.\n\nHe grinned and asked, \"You mean to tell me that you found another L.E.O. as stupid as me to volunteer for this kind of abuse, how about that.\" I laughed slugging him playfully on the shoulder telling him, \"The local gendarme's run the testing for us, and pass out certificates to the graduates. If they sign off that we're doing a good job we'll get county funding to put on the classes again next year.\"\n\nHe seemed to warm to the idea of watching some poor local cop get pummeled and said, \"Two weeks ought to give me time enough to heal up.\"\n\nI laughed and teased, \"I would have thought a field agent for the FBI would be able to handle a few housewives and dozens of high school girls. What are they doing with all those tax dollars we send to Washington anyway?\"\n\nHe stood throwing the last of the protective padding aside and assumed a textbook fighting stance and challenged, \"Care to go a few rounds Miss De Marco?\"\n\nI got up too and told him flatly, \"I don't know if I'll be much of a challenge for you I haven't sparred with anyone for almost ten months since my old gym went bankrupt.\"\n\n\"Don't worry I'll take it easy on you, just for fun wait, how about the loser buys lunch?\" his mocking smile irked me just a little.\n\nI decided one good taunt deserved another and said, \"OK Keith lets keep the contact light. I don't want you to have to explain to your darling wife how you took such a beating from an accountant.\" \n\nI turned away from him pretending giving my legs a preparatory stretch, he rushed forward in an attack that I suspected was coming. I parried his first few blows easily trying to assess his skill and style. He didn't so much as touch me for several minutes though he threw a variety of feints and attacks at me. His technique was technically very correct if a bit unimaginative. The combinations of kicks and punches he threw my way were somewhat predictable indicating a limited exposure to the martial arts. What he was showing me might have been dazzling to a street thug but I was so far, unimpressed. \n\nOn the other hand, I had been being taught by a multi-discipline master who held black belts in both Shotokan Karate and Sengoku Jujitsu. (Too bad the guy didn't show the same discipline with his finances.) It didn't take me long at all to surmise that Keith's training had been seriously deficient. I didn't figure him for a poor student and thought that maybe he was sandbagging me. I switched tactics from the purely defensive into the attack. I hit him (yes, yes very lightly) with every strike and kick I threw. I was starting to get a little bored with it so I backed away from him lowering my hands to indicate that I wanted to stop. Keith saw this and mistook it for the opening he had been waiting for and launched into a fresh attack.\n\nHis fist whistled past my chin as he lunged at me over-extending his thrust. I saw it coming and easily slipped the blow and delivered a sharp jab to his exposed ribs. I was starting to get just a little pissed so I continued falling away to his side as he recoiled from the strike and tried to cover his stinging side. As I descended toward the mat, I spun around sweeping my leg in a powerful arc crashing it into the back of both his knees. His feet left the mat but before his back crashed down on it, I snatched his right arm mid air and slapped an arm bar on his elbow applying immense pressure in the wrong direction. Keith quickly realized that if he wanted to retain the use of his arm for the near future he was screwed. He tapped the mat twice sharply with his free hand indicating his submission. \n\nI released his arm but gave him a very undisciplined slap across the midriff and barked, \"The next time someone backs away from a fight with you Special agent,\" I straightened and stared scowling down at him with my hands now on my hips, \"You might want to let them, it could be in your own best interest.\"\n\nI offered him my hand and helped him to his feet. He smiled shaking his head in disbelief. \"Where'd you learn to do that Jane? That was amazing.\"\n\nI answered him with a snort of laughter, \"It wouldn't have been if the FBI training didn't suck. Or did you miss that day?\"\n\nUnabashed he told me that he attended all of the combat training offered by the bureau. He even boasted that he was one of the more accomplished practitioners in the FBI's local office. \n\nI couldn't help myself, that clown inside me must have had her makeup freshened up and red nose on. \"So what you're telling me Keith is that the entire local contingent of the FBI could be wiped out in a good barroom brawl some Saturday night.\" \n\nHe snapped back with a grin, \"I think you're forgetting that we all carry guns too.\"\n\n\"Yeah, well, if you guys shoot as well as you fight you'd be overmatched by my Aunt Mabel and her rolling pin, you guys need better training.\"\n\nHe asked me with sincerity, \"Care to apply for the job?\"\n\n\"Can't,\" I answered him flatly.\n\n\"Why not, you're a hell of a lot better than the instructors they send us now?\"\n\nI sighed as I toweled off the sweat from my face and neck and answered, \"Well Keith it's about the ethics. I'm only a brown belt, 1st kyu but still a brown, and that means no formal teaching I'm not yet considered qualified.\"\n\nHis quizzical expression told me he knew less about the formalities of martial arts training than he did about fighting. \"How can you teach the ladies here then?\"\n\n\"It's different,\" I answered trying to figure out a way to explain without going into the entire history of the belt ranking system which could take hours, maybe days.\n\n\"I'm not offering instruction in the art of Karate here, I'm only teaching them how to survive an attack long enough to escape and call for help, there's a huge difference.\" \n\nHe threw his hands up in surrender and said, \"I'll to defer to your expertise, by the way where's lunch? I guess I'm buying.\"\n\nI grabbed the bag of padding and the rest of my accouterments and playfully pushed him toward the door saying, \"Damn right you are! How about Italian? I know a nice place that's not too far.\"\n\nI followed his government issue grey Ford sedan through downtown, at the speed limit, every bloody inch of the way. Thankfully, the Saturday lunch crowd at Romero's was light and allowed the two of us to order quickly and still have time for a nice talk. A glass of Chianti and their crusty bread fresh from the oven made a perfect appetizer while we waited for our meals of miniature cheese Ravioletti with sweet Basil pesto to arrive from the kitchen. While we waited, I began explaining the functions of the algorithm. Twice we had to resort to using the back of a napkin for the trickier portions. As lousy, a fighter he proved to be, his grasp of how the long mathematic formulae worked told me there was nothing wrong with Keith's brain. After finishing with our lunch, we sat and discussed what role I might be asked to play in the upcoming trial. I also had the opportunity to ask him a few questions that had been bothering me since the disastrous meeting in Bart's office earlier in the week.\n\n\"Exactly how did deputy director Walcott come to be involved in this case any way Keith? I thought he was based out of D.C.\"\n\n\"As deputy director he can insert himself into pretty much any case he wants to,\" He explained, \"Walcott normally seeks out only the most high profile cases. Having his name and title associated with any case usually helps the investigation. You'd be surprised how much easier it is to secure resources with the deputy directors name tacked on your documentation.\"\n\nThis puzzled me because the case at Continental didn't really need tons of support and wasn't even high profile now. \"How did he even find out about it? I mean back when this first began it was pretty small potatoes in the grand scheme of FBI investigations.\"\n\n\"For some reason Walcott had a flag on Clifton Adams name, and when Mr. Stillwell called on us three years ago we had to inform Walcott because of that flag,\" Keith told me as though it was no big deal, but I persisted with my inquisition.\n\n\"Isn't it kind of unusual for the deputy director to be so interested in such a small time case?\"\n\nKeith became a little thoughtful for a second then answered, \"I thought so too, but I found out later that Walcott was the original investigating agent when Adams was suspected of embezzling at Allied. I think the case left a bad taste in his mouth because he was never able to bring charges. The investigation was eventually shut down for lack of evidence.\"\n\n\"So Walcott was in control of the investigation that let Adams get away with it the first time?\" I asked thinking the arrogant ass wasn't smart enough to catch a tennis ball let alone a real criminal.\n\nKeith answered me with a chuckle, \"Yeah well, nobody's perfect not even the FBI. If you tell anyone I ever said that I'll have to deny it.\" \n\nI could tell he was getting weary of the subject but I had one last question I needed answered, \"So the case was dropped because they found no evidence of wrong doing?\"\n\n\"No,\" Keith interjected, \"there was evidence, but according to the reports I've read Walcott just didn't think he had enough to secure a conviction and wouldn't refer charges.\"\n\nKeith sipped his one glass of wine and said thoughtfully, \"He was always very cautious in that respect, when he finally did make an arrest someone was almost certain to spend a long time in prison. Walcott's conviction rate as an investigator was up over 80 percent. That's one of the best ever in the history of the FBI.\"\n\n\"So he's not a total incompetent?\" I chuckled and Keith quickly joined my laughter at my backhanded slam of the Deputy Director. \n\n\"You could say it like that,\" he snickered and finished his wine, \"In fact I heard rumors that when Walcott was still a field agent his superiors were so pissed at him he was almost transferred out of field operations. He dropped as many investigations as he charged. The claim was that he was just too timid for fieldwork and they almost relegated him to the training program at Quantico.\" \n\n\"Oh Christ Keith can you imagine sitting classes with that sanctimonious ass, that'd be a fate worse than death!\"\n\nWe both chuckled at the horrors of that image inspired. \"I wonder how he saved himself from what would have been a terrible injustice.\" I asked trying to mimic Walcott's thick New England accent. \n\nKeith said chuckling ruefully, \"Politics, if Walcott had nothing else going for him he was well connected. The old boy was \"hooked up\" you might say.\" \n\nBy that point, I'd had belly full of Walcott and the whole damned FBI power structure. I thanked Keith for the wonderful lunch, told him to say hello to the wife and kids and bade him farewell. I left planning to stop by work for a few hours but first I had to get rid of those smelly pads before they stunk up my new car, whew!\n\nPulling the little roadster up the freeway ramp on my way to the dry cleaners, I saw another white van turning from the service road to follow me. I couldn't see the sides of it so I wasn't sure if it was the same one from this morning but it did have a familiar look. The way I was ripping through the gears though, no one was going to be able to keep up with me anyway. I dismissed it feeling a bit silly, maybe even paranoid. I mean really, who would want to be following me around anyway. I was beginning to think that hanging around these FBI types was starting to mess with my mind. After dumping off my pungent cargo, I slipped back into traffic and cruised over to the office hoping to get some work done without any interruptions.\n\nParking in the executive garage was still a bit of a novelty for me and I pulled inside with a huge smile. This time I even found a reserved space for my cute little Beemer marked with my name on it. (God this is so awesome!) As I walked along the huge windows heading for the elevator I heard a familiar squeal and caught a flash of white as a van whizzed around the corner half a block down from the garage entrance. It was moving too fast to be sure it was the same one but the hairs on the back of my neck were standing stiffly enough to send shivers down my spine. Damn it this was getting creepy now. I decided to call Keith and tell him about it once I got upstairs. When I stepped into my office and looked over the mounds of paper that were waiting for me any thoughts of calling the local FBI office evaporated. \n\nI shuddered scanning over the stacks and stacks of records scattered on every flat surface inside the room. I berated myself softly asking aloud, \"What the hell have you've gotten yourself into this time you knot head?\" \n\nA memory flashed into my mind to the last time I heard those exact words. It was Christmas break of my sophomore year. My father had asked me that right before I told him and my mother the truth that I was gay. I felt my cheeks flushing hotly remembering my hurt and anger as he tossed me into night off our front porch. He told me with steely finality from his perch atop the steps not to come back that I was no longer welcome. \n\nI picked myself up from the frozen lawn screaming at him loud enough to wake the whole neighborhood, \"What about the forgiveness, and understanding of the lord Dad? Your Lesbian daughter not good enough for it? Not in your house huh? Well screw ya both I don't need your fucking forgiveness you puke, or his! You god damn hypocrite!\" \n\nThat night was the last time I had spoken to anyone in my family. It was also the last time I'd ever set foot in my hometown. I promised myself on that painful winter's night that I would never ever go back there. There was nothing in that past that I wanted or needed anymore. That single most unpleasant experience I had ever endured changed my entire life. The anger it inspired had driven me to succeed at anything I set my mind to accomplish. I felt it burning in me as hotly today as I did that awful night so long ago. \n\nMarching to my desk with the same angry determination boiling inside me, and I heard myself softly repeating what I screamed at his back before he slammed the door in my face, \"Screw you old man!\"\n\nI plowed into it scouring the old records for hours searching for the answers I needed. What I found there, was exactly what I already knew. Adams was embezzling millions from us but I still couldn't match the same kind of activity when he was at Allied. The records just didn't go back far enough to give me the proof I had to have. The embezzling explained why our P&L figures took a huge hit every time there was a major disaster but it should never have effected our investments. I was ready to start pulling my hair out by the fistful I was getting so damn frustrated. Thankfully, the ringing telephone saved my pate from permanent harm, Claire's call was a timely and delightful distraction.",
        "She quickly updated me on their progress with the Elmwood people, her upbeat assessment was good news indeed. Sensing she was in a receptive mood I explained to her what I had been up to since she left including a detailed account of my encounter with a smitten grunge girl from the day before. Her warm laughter from the far side of the world told me she didn't feel threatened in the least. I don't know why I was so relieved but I had actually been holding my breath waiting for her reaction. She teased me about starting a harem while she was away and told me I would have to share when she got back. That started the both of us giggling and then she surprised me by saying that she approved of Sue as the first of \"my\" concubines. \n\n\"Oh... cut that out, you,\" I scolded her trying to stop laughing.\n\nI told her what I had in mind for Sue (in the office of course.) How I wanted her to take my place in accounting and offering her a considerably better salary than I was getting down there. While I explained it all and waited for her to tell me I couldn't, I was nervously twisting the phone cord to death. \n\nAs usual she astonished me answering me in a way I utterly unprepared for, \"Jane honey, one of the prerogatives of the CFO is to put the people under you into positions that you think best suits your needs. You don't have to ask permission doll, just do it.\"\n\nI was so stupefied by her plainspoken reasoning I couldn't come up with a response. \n\nClaire filled the silence telling me, \"You know you don't have to stuff her inside that closet you were in either. Since Adams old office is available again and I think it would only be appropriate for your Lead-Auditor to have that space don't you Jane?\" \n\nBusily uncoiling my fingers from the cord trying to get the circulation going again I answered her, \"I just hope she wants the damn job. We only chatted about it briefly and, well she didn't seam overly enthused about it.\"\n\n\"Here is what you can do hon,\" she told me with an air of confidence. \"Offer her the job, and make sure she's aware how much more the salary is from when you were doing that job. If she's still riding the fence after that, throw in office as a sweetener, how can she resist, you'll bag her baby.\"\n\n\"Thanks love, you make this all seem so clear and easy I just wasn't sure how far I could go. I've never been a big shot before, it takes a little getting used to,\" I confessed finally able to relax a bit.\n\n\"Its easy babe, just use your best judgment and you'll do fine. If anyone questions you on anything just don't back down. I mean it babe, you're in charge of that division Jane, your word there is law.\" \n\nThat started me laughing again and I told her, \"I hadn't thought of it quite that way, but if you say so beautiful that's the way it'll be.\"\n\n\"Just one more thing before I let you go hon,\" her voice picked up an amused tone, \"If you decide to put Miss McKenzie in any other positions beneath you, I want all the sordid details when I get home.\"\n\n\"As if,\" I barked at her indignantly. \"There's no way Claire, I'm strictly a one woman girl now that I found you lady.\"\n\nI could almost hear her smiling through the phone wires and then she shocked my socks off. \"Suit yourself beautiful, but just thinking about you two all naked and sexy is gonna fuel my fantasies all night long, ooo...yeah...wow. I gotta go lover, brains kicking into overdrive now, and the fingers must follow.\"\n\n\"You...you...are absolutely incorrigible woman,\" I sputtered into the phone. \"But, I think that's one of the many things I love so much about you,\" I giggled listening to her soft laughter coming from so far away.\n\n\"Good night my dear Jane, I love you,\" she said still chuckling when she hung up. \n\nWhen I returned to the heaps of paper, I decided to abandon the past and decided to take a harder look at our current investment picture. My starting point was a graph that I had Dan plot out for me yesterday. It covered the progress of our investment portfolio for the last five years. It wasn't long before I was groaning aloud because my cursory examination told me almost nothing new. Only one unusual feature on the highly detailed page caught my attention at all. I nearly missed it amid the wash of undulations laid out before me. Our investment income had fallen in three precipitous steps. The first being shortly after the merger and Adams took over as CFO, but the final two were both within the current fiscal year.\n\n\"What the...now that's damned strange,\" I said into the empty room.\n\n\"What's so peculiar little one?\" I froze behind my computer at the sound of a very familiar voice.\n\nI looked up not quite ready to trust what my ears had heard only to see my former professor smiling at me from just inside the doorway.\n\nI bounded out of my chair running across the room and throwing myself into to her outstretched arms shouting happily, \"Oh Liz! Oh god, it's so good to see you!\"\n\nI hugged her slim body sensing that she was as strong and vibrant as ever. Her delicate features were only beginning to show the toll the years were having on her. I only hoped I could find a way to look half as good at the start of my sixth decade.\n\nShe asked me returning the embrace warmly, \"So how's my friend doing these days? I've really missed her since she went off on her own.\" \n\nSighing into her shoulder I answered, \"Oh I've had better days but now that you're here it'll be all better now won't it?\"\n\nLaughing softly at my childlike suggestion she told me, \"That's a wish you'll have to see you're fairy godmother about, and I'm not her I'm afraid, sorry little one.\" \n\nI took a step back looking her over to find that she was every bit as gorgeous and sexy as I remembered. No wonder Bart Stilwell fell so hard for her, hell I still found her incredibly alluring. I couldn't help the smile dancing across my face as I held her hands. For reasons I could never explain I'd always been fascinated with her hands. I found them unbelievably sexy to look at and hold. I fondly recalled our magical afternoon long ago when these same long slender fingers showed such amazing strength when applied to my bare skin. Just gazing at them again caused a warm feeling to well up inside me. That's when I noticed the ring on her left hand and said, \"Well you certainly sparkle like my fairy godmother no wonder I was so confused.\" I turned it into the light to examine the ring more closely.\n\nSomewhat surprised that it was a much smaller stone than the one I saw Bart flashing at the restaurant I asked her, \"What happened to the boulder Liz?\"\n\nShe laughed heartily at my description of the ring Bart offered to her and answered, \"As a first request to my new fianc\u00e9 I asked him for something a wee bit more modest. I picked this one up just this afternoon. Smart fella that he is Bart only borrowed that monstrosity you must have seen. That is, until he heard my answer.\"\n\nI smiled when she admitted, \"I teased him so bad for trying to trick me into marrying him dazzling me with that Son of the hope diamond,\" She was laughing now too. \"I almost had him convinced I was going to throw him out until he could propose to me with a proper engagement ring.\"\n\nStill examining the exquisite but much smaller engagement set, I got my laughter under control and told her earnestly, \"That's sounds like something our boy would do, he is a cagey one.\"\n\nHer smile told me she understood completely and said, \"I really don't need a two-pound block of stone perched on my finger to tell me how he feels about me. I can see it in his eyes every time I look at him.\"\n\nHugging her tightly again I said, \"Oh Liz don't you just love him, I'm so happy for you!\"\n\nShe stroked my back and asked me, \"I hear you have someone special in your life too little one\"\n\nI pulled back looking into her dark penetrating eyes feeling as proud and happy as she was, and answered her, \"Yeah, Claire's wonderful you'll like her too Liz. She's smart, talented, and tough as nails, just like her dad.\"\n\nLiz smiled at my dreamy expression saying, \"I've heard she's quite a stunner this Claire of yours.\"\n\nI knew where she was baiting me with that remark trying to tell if I'd done some growing up over the years since leaving the university. While in college, I had a habit of always becoming infatuated with the prettiest girls on campus. For one reason or another, they all managed to break my heart. When the anguish was too much to bear alone, I would turn to Liz and she dutifully sat and listened to me cry over each and every one of them.\n\nBristling slightly at this thinly veiled taunt I answered, \"I'd love her just the same even if she looked like the flat faced ornery old mutt of yours.\" My chin jutted out in defiance, but seconds later a smile cracked my hardened features after mentioning her somewhat neurotic pet, \"By the way how is Winston doing these days?\"\n\n\"On his last legs I'm afraid,\" she answered wistfully, \"He'll be coming out to the ranch with me soon to spend the last of his days enjoying the wide open spaces and all the new smells he can stuff his fat little face into.\"\n\nI was so happy to see her I had almost forgotten what I was doing until she asked me, \"Now what's this oddity you discovered before I so rudely interrupted you dear?\"\n\nReleasing one of her hands and pulling her along by the other I walked over to my PC saying, \"Look at this and tell me what you see, I could really use a fresh pair of eyes looking at some of this crap.\" I could see her eyes follow the steps clearly depicted on the graph and said quickly, \"I'm assuming you've been focusing on the dollars so far, but this tells me you need to look into the dates too.\"\n\nExhaling a loud breath I didn't realize I was holding, I smiled nodding to her because I had reached the same conclusion just before she walked in.\n\nShe turned toward me and asked with a serious expression, \"How did you discover that sneaky shit was stealing all that money in the first place. To hear Bart tell the story it was nothing short of magic.\"\n\nI chuckled and grabbed a pad and paper scrawling out the sorting algorithm I used and she smiled in recognition, \"Ah it's nice to see your head wasn't in the clouds the whole time you were daydreaming in my lecture hall.\"\n\nAnswering her barb with one of my own I said, \"Hey, when the professor giving the lecture is such a hot little minx it's awful hard for a girl not to fantasize.\"\n\n\"Thank you dear,\" she answered with a sly smile tapping the end of my equation and saying, \"this part is all new to me, you added it?\"\n\n\"Yeah,\" I answered tiredly, \"I had almost six million in unaccounted for payments vanishing out of our claims budget. This equation told me that someone was electronically ghosting out identical amounts to specific legitimate claims every time we had a major influx of activity.\"\n\n\"I set it up to shuffle legitimate payments in and out to see if I could match the missing total,\" I told her elaborating on my methodology.\n\n\"How accurate?\" she asked pointedly.\n\nWith a proud grin, I answered without hesitation, \"down to the last penny.\"\n\nShe whistled her surprise admitting, \"Yeah that couldn't happen by accident,\" squeezing my shoulder affectionately she added, \"It's a good thing you weren't too distracted by that saucy professor to pay attention in class.\"\n\nWith a grin I sat heavily in my chair and gave her the rest of the details, \"He tried to keep anyone here from seeing it by changing the way our system worked. He didn't count on me being such a nosey shit. I was snooping around and found out about it before he or anyone else knew what I was doing. All the clues pointed right at the only person with the knowledge and access necessary to pull it off, our brand new V.P. the more I look into it now it seems like he made almost no effort at all to cover his tracks. He was relying almost completely on his \"streamlined auditing system\" to keep anyone from noticing.\" \n\nShe leaned away from the screen crossing her arms and said thoughtfully, \"He was either seriously over confident or was a remarkably stupid man to try a stunt like that.\"\n\nShe looked again to study the graph on my computer and said, \"This feels like something entirely different to me,\" with one finger tapping the screen. \n\nI watched her toss her luxurious long hair over her shoulder and nodded. I marveled at how pretty she still was even though its raven darkness was now shot through with grey. I remembered the teasing she once gave me for coloring my hair a lighter shade of blonde back in college. She equated coloring my hair to intellectual dishonesty and if I had any intellect, I'd leave my damn hair alone. I smiled knowing Liz would never succumb to such vanity. \n\nI happened to glance at the clock in the lower corner of the screen and I quickly started shutting it down with her still staring at Steve's chart I chirped at her in an accusatory tone. \"Gee whiz lady why didn't you tell me it was already after nine, let's get the hell out of here I'm starved.\" \n\nShe chuckled at me and hooking her arm through mine said, \"You're a big girl, you would have figured it out on your own... eventually.\"\n\nWe left separately agreeing to meet for dinner. Liz and I had a wonderful meal at a local steakhouse, and spent the evening catching up on old times as and comparing notes on the loves of our lives. By the end of our dinner, I had extracted a promise from her to show up come hell or high water Monday morning to help me exercise the evil spirits from Continental Casualty & Insurance.\n\nOn my drive home from the restaurant, that creepy feeling of being followed enveloped me again. I noticed a pair of headlights that seemed to shadow my every turn. The driver was hanging back just enough to keep from being too obvious but he couldn't change the size or the arrangement of the lights on the front of his car. Someone a little less detail oriented may have missed it but I had just spent my whole afternoon searching for things that were out of place. When that exact pair of headlights reappeared behind me after a fourth and fifth turn, my guts told me he wasn't there by accident. \n\nI was instantly furious but forced myself to calm down when I realized there wasn't much I could do about it tonight. When I got home I couldn't help fuming and trying to think of a way to handle with this new irritant (As if I didn't have enough to deal with already.) Weariness finally overcame my anger and I gradually slid to a fitful slumber. My sleep was filled with images of sinister pursuers chasing me through my dreams. The strangest feature of these bizarre scenes parading through my sleep was that everyone who seemed so determined to capture me had a wonderfully naked female body. Though throughout the whole dream, I couldn't identify a single face. (Talk about weird Huh?)\n\n Chapter 16 \n\n(Surveillance Shattered) \n\nSunday\n\nWhen me morning began, it arrived rather later than I was expecting. Usually by 10:00am, my day would already have worked up a good head of steam. Even on weekends, I rarely luxuriated in bed so late and I was a little disoriented when my eyes first cracked open and located the bedside clock. I exploded out of bed and was running for the bathroom trying to figure out which parts of my already brief morning routine could be skipped in order to get me out the door faster. When it finally penetrated my sleep-addled brain that it was Sunday I laughed aloud still sitting on the throne. I wasn't late for anything but the adrenaline coursing through my veins made calming down a bit tricky and going back to bed was completely out of the question. Since I was already up, I decided it was time to get my narrow arse in gear. I sighed thinking that I should at least try to accomplish something today, though I hadn't devoted any thought to what it was I needed to get done.\n\nSwaddled in Claire's thick terry bathrobe that still smelled of her perfume I headed into the kitchen and my first goal of the day. I decided to start small brewing up a pot of delicious, aromatic, ultra-black coffee. (Hey sometimes it's the littlest things that mean the most.) After a cup or was it two, my memory was fully awake and filled with those headlights in my rearview mirror from last night and I was quickly dialing the phone. Keith Gibbons was driving his family to church when I reached him on his cell. He listened to my story very patiently, no laughter, but he might as well have cackled my ear off. He dismissed my suspicions so peremptorily that I felt as though I'd have gotten farther telling my story to my coffee mug. \n\nHe told me flatly that he was absolutely certain that no one from his office had put me under surveillance. Only the U. S. attorney prosecuting the case could authorize the additional expense. They would only do it as a protective measure after a direct threat was made on a witness. Since the local FBI branch didn't have the manpower to do it even if she did authorize it, they would have had to bring in extra help from other field offices to do what I was suggesting. All of those authorizations had to come across his desk and he was positive there were none. Before hanging up He told me that unless I had some bad gambling debts or a jilted lover looking for revenge I shouldn't worry about anyone following me. I stared at the silent phone afterward feeling a little silly but the anger from the previous night was percolating just under the surface. \n\nIt bubbled up momentarily and I vented it loudly into the empty room, \"Oh bullshit! Special agent dipshit, I know what I saw!\" \n\nI think what made me most angry was I didn't have the first damn clue what to do about it. I hated waiting around for something to happen, usually opting for a pro-active approach. The frustration was rapidly souring my mood and I needed to find a way to settle down. Refilling my coffee I looked across the living room at the sunbeams streaming through the glass patio doors. The pleasant memories of an afternoon spent frolicking with Claire bare ass naked on the other side of the glass helped shove some of my irritation aside. A smile curled my lips as my mind filled with images from the afternoon we shared in the late afternoon sun. Putting thought into action, I strode across the room dumping the phone back into its base and stepped outside onto the wide balcony. \n\nThe fresh air had a crisp autumn chill raising goose pimples on my exposed skin as I looked out over the multi-hued treetops spread beneath me. It was the kind of day photographers and painters waited for all year. The sky was unusually clear with only a few thin wispy cirrus clouds marring its perfection. The deep azure color above seemed to help all of the colors radiate with an uncommon vibrancy. The leaves were nearing that brief span where their colors were at their most vivid. I wished I could capture the natural beauty to savor the other 364 days of the year. I could hear the creatures in the forest below busily preparing for the brutal cold that would descend upon them in a few short weeks. I both loved and hated this time of year. The next change of season would be heralded by short frosty days and achingly long cold nights. Midwestern winters could be cruel with their biting cold and deep snows, both of which lasted much too long for my liking. \n\nThe more immediate concern of an empty coffee cup drove me back indoors. My laptop was slowly struggling to boot up and I found myself day dreaming about vitamin D and its many benefits. I couldn't ever remember being so completely happy. Even with all of the shit going wrong and right, at work. I was just bursting to tell someone how wonderful my life was going but couldn't think of a soul to call. Suddenly I remembered one person that I could talk to and I had some happy news to share with her too. I snatched up the telephone carrying it with me back into the kitchen. I could certainly have waited until I saw her tomorrow in the office but my urge to talk to someone was overpowering. With the long hours we had all put in lately if I could brighten her day with a well-earned reward, I didn't want to wait an extra second. I pulled up her home number from my PDA and dialed my excitement building with each unanswered ring. When she did answer, her voice was a bit gravely as though she might have just woken. ",
        "\"Hey Sue, its Jane,\" I said giving her a moment to get over being pestered with work on the weekend.\n\n\"Well hi there boss, I was Just thinking about you,\" her voice brightened. \"I was just trying to figure out where to go shop for some new duds for work, can't really go to any of the places I usually shop.\"\n\n\"No I suppose not,\" I chuckled into the phone and a thought struck me, \"Hey how would you like some company?\"\n\n\"Yeah sure, in fact now that I think about who would be better to have along than the cruel taskmistress that decided 'I'm with stupid' wasn't good enough for the office anymore.\"\n\nCaught a bit off-guard by her jibe I took a second to respond, \"Well...you don't have to Sue dear...I could offer your job to somebody else and this troublesome promotion business would all go away. Hmm I wonder how...Walter would like his own office.\"\n\n\"Oh god Jane don't even think it,\" she groaned, \"If you gave the job to him you'd need to have every door in the building widened at head level.\"\n\nThe image of a pair of contractors comparing that pompous asses swollen head to a reconfigured doorway sprang into my cartoon bubble and I cracked up telling Sue, \"Yeah I see your point.\" \n\n\"Not to worry Sue I wouldn't subject that 'tyrant in a teapot' on the rest of the department. That would be evil, so I guess I'm gonna have to stick with you after all.\"\n\nShe was laughing too now and could only get out, \"I guess,\" between giggles.\n\nThat's when I told her, \"This an official Job offer now,\" I paused to let that sink in. \"It was approved at the highest level yesterday and I wanted to give you a little extra time to think it over before you have to give me your answer.\" \n\nWhen she didn't respond immediately, I filled the silence telling her, \"I'm increasing the salary for that position a full 20% from what I was making which would still only make it...$47,500 to start with but it should be a decent raise for you.\"\n\nShe whistled then said, \"Damn boss they were sure getting you cheap all these years.\"\n\nI chuckled and answered her, \"Tell me about it, but they are kind of making it up to me now.\"\n\n\"O.K. I've thought it over,\" she paused for just a second then asked, \"When do I start?\"\n\nSmiling privately at her eagerness I told her, \"Well there is a bit of paper work that needs to be handled in H.R. but I can show you your new office in the morning say about nine o'clock.\"\n\nHer voice had a patronizing edge to it when she said, \"Uh, Jane I kinda know what the office looks like.\"\n\n\"Don't be so sure Suzy-baby,\" I teased her.\n\n\"Get the fuck out,\" her excitement burst through the earpiece, \"Adams old office?\" she asked.\n\nDamn she was quick. That's another reason she was the only one I ever considered for my replacement. \"I'll show you tomorrow. What do you say we go and get some shopping done now? How about you pick me up in half an hour, I still have to get dressed.\"\n\nShe let out a whoop and said don't hurry she'd be would be right over, before asking me where the hell I was.\n\n\"Do you know where the Tourelle lumineuse condominiums are,\" I asked her. \n\nShe answered quickly, \"Yeah, it's on the east side off Riverview parkway, I know where it is.\"\n\n\"Good when you get here check in with security I'll let them know you're coming, I'm in suite 1114 see you in a bit,\" I told her and hung up and scurried off to find something to wear.\n\nIn precisely eighteen minutes security called, telling me that I had a guest waiting in the lobby. I asked them to send her up, while I finished getting dressed and brushing my hair. Sue was suitably dazzled by Claire's condo and all of its accoutrements. \n\n\"Whoa boss nice place you have here,\" she said as her eyes took in the spacious rooms elegant furnishings.\n\nI grinned and shrugged say to her, \"Yeah well, when you're secretly pulling down a V.P.'s salary while running a clandestine operation as an executive assistant you can afford digs like these.\"\n\nShe laughed and asked me, \"Speaking of clandestine operations what's with the two goons parked outside watching the building?\"\n\n\"Goons?\" I answered her question with one of my own.\n\nShe smiled wider and told me, \"Yeah boss they're out front sitting in a grey Crown Vic, I'm parked right across from them. From what I heard downstairs, they've been there all night. One of the guards is all in a lather because one of them smokes and has been flipping his butts on the lawn.\"\n\nI quickly assembled a picture from what she was telling me and it fit right together with the car that I saw following me home the night before. \"God Damn that guy, I told him someone's been following me,\" I said in an angry outburst.\n\n\"Who boss?\" she asked her brow wrinkled in confusion.\n\n\"Oh I called that fucking Gibbons guy from the FBI this morning and he blew me off. Told me I was just being paranoid.\" \n\n\"What are you gonna do boss, you can't just let them get away with this shit,\" she said with some real heat in her voice.\n\nI smiled pleased that she was so concerned for me and said, \"I have an idea but I'll need your help with it.\"\n\nShe asked with a nasty leer on her face, \"We gonna go down there and bust 'em up? I'm in boss, I'll take ol' smokey.\"\n\nI laughed at her enthusiasm but said, \"No hon I had something a little more subtle in mind, take off your clothes.\"\n\nHer face went instantly slack as she froze in absolute stunned silence.\n\n\"C'mon hustle up girlie,\" I barked as I quickly shed my own shirt draping it over the back of a chair.\n\n\"Whatever you say boss, but I fail to see how two naked angry women will have any advantage kicking someone's ass over two angry women with their clothes on.\" \n\nI laughed so hard at her erroneous description I had to grab at the chair to keep from falling over. \"No silly,\" I choked out, \"we're gonna switch. You take off in my car and they'll follow you, and then I can tail them. I'll get their plates and maybe even a picture or something. Then tomorrow when I see special agent Gibbons again I'll shove that info so far down his throat he'll have paper cuts on his hemorrhoids.\"\n\nShe started pulling off her clothes rapidly understanding exactly what I had in mind now. When the transformation was complete, I looked her over in my clothes. My khakis were a bit snug on her especially in the hips and thighs but long and loose everywhere else. I have to say the tank top I swapped with her had never been filled out quite so well when I was wearing it. Her baggy outfit worked on my longer slimmer frame, though her hair was definitely going to be a problem. An idea struck me and I told her to stay put while I dashed for the bedroom and swung into the closet. Jumping a few times to reach it, I finally plucked a dusty old baseball cap from the top shelf. Next, I extracted the hair extensions from the box that held my schoolgirl outfit. I stuffed them through the hole in the back of the cap and pinned them securely to the hat. When Sue donned the contraption and stood across the room I decided we just might pull it off as long as they didn't look too close, or figure out that I had developed a real nice round little ass overnight.\n\nI tossed her the keys for the Beemer and told her, \"Keep the top up and haul ass out of the neighborhood so they don't get a good look at you. Slow-up a little when you get out on the freeway to make sure they could follow along.\"\n\n\"Sounds good boss, where will you be?\" she asked.\n\n\"I'll be behind them in my old Chevy, a big rusty blue one. With any luck you'll never see me and neither will they.\"\n\nSmiling mischievously she high-fived me and asked, \"Where do you want me to start my shopping trip?\"\n\nI thought for a few seconds searching my memory and said, \"Do you know Philbin's menswear it's on sixth street downtown?\"\n\n\"Sure,\" she answered with a little laugh and nodded.\n\nGo look at their belts and neckties they're way in the back. That'll make them hang around out front and maybe I can capture them on this.\" I pulled my little credit card sized digital camera from my pocket to show her. \n\n\"Way to go boss, let's do it,\" her excitement was starting to infect me so much that we almost forgot to lock the door in our rush to leave.\n\nMy hasty little plan was working better than I expected. When Sue whizzed past them on the street in a fiery red blur and they obediently followed her maintaining a safe distance. I fell in behind them easily in the late morning traffic. I moved in close enough to snap several pictures of their car hoping to get a nice clear image of the plate number. I could tell Gibbons in the morning that whoever they were their education in counter-surveillance was as poor as the FBI's combat training. I watched as Sue ducked inside Philbin's while 'Crew-cut and 'Smokey' parked about a block away from the storefront. I tucked into a spot a block behind them and started casually making my way down the sidewalk toward their car. 'Smokey' sauntered down the sidewalk and hung around out front, peeking inside the store from time to time. From the mouth of a nearby alley, I snapped several decent shots of him as he waited for her to emerge. \n\nI was about to head back to my Chevy when a meaty hand clamped down on my shoulder and began forcing me to turn around. Grabbing at the fingers and twisting them savagely, I spun to face the owner of the offending paw. The angle of my shoulders helped me develop some power and I completed my rotation driving my fist as hard as I could into the notch on his chest where his ribs met. His loud explosive gasp told me my blow had its intended effect. His eyes were wide in stunned surprise as he struggled to catch his next breath. Recognizing his blonde crew cut, I knew immediately he was the Smokey's partner. I was instantly pissed at myself for letting him get around me. It was too late to worry about it now so I took out my frustration on 'Crew-cut', the poor fucker. Using the fingers I was still twisting backwards, I jerked him forward off balance and drove my knee into his groin, hard. His legs went rubbery and I stepped around him still wrenching on his now mangled hand. Before he crumbled to the ground completely I rotated using my hips to generate some torque and fired a spinning side-kick into his sternum driving him over backward. As he fell, his head clanged with a hollow thud off a dumpster in the alley behind him. He dropped to the ground in an unconscious heap. \n\nI knelt quickly and checked him over just a little afraid I might have killed the sorry bastard. There was no blood and he was already starting to moan and breathe a bit easier. I searched him quickly finding a leather case in his breast pocket. When I cracked it open, I spotted a small gold badge, and groaned knowing exactly what it was. I'd seen several just like it recently but continued searching him anyway. I located both his gun and handcuffs and quickly snapped one end of the cuffs around one of his wrists. I fastened the other end to the lifting lug welded halfway up the side of the dumpster. Next, I released the fully loaded clip from his automatic and threw it into the dumpster. Remembering to rack the slide back to eject the round from inside the chamber, I picked it up and it joined its mates in the trash. Extracting his I.D. card out of the badge case, I dropped it and his now useless Glock onto his chest muttering \"asshole.\" Before turning to leave the alley I gave him one more wickedly satisfying kick on his thigh. It wouldn't do any more damage than maybe give him a nice livid bruise to remember me by. With any luck he'd also have a limp for the next few days. I smiled picturing him having to hobble around the office and explain to all his FBI buddies how he got the limp and the knot on his melon from a girl.\n\nI walked boldly up the sidewalk to go find Sue and tell her the game was up. As I sauntered past old 'Smokey' waiting outside on the curb I told him, \"Hey somebody fucked up your pal in that alley back there, you'd better go check on him.\" \n\nHis eyes widened with a start when he recognized me but he turned quickly away rushing up the street in the direction I'd come from. Before I stepped into the store to find Sue I had an odd flash of d\u00e9j\u00e0 vu as I watched him scramble down the sidewalk and into the alley. We stood inside watching them through the front window as their car zipped by on the street I told Sue what happened and showed her the card I pulled from 'Crew-cuts' wallet and she whistled in surprise.\n\n\"Jeeze boss do think it's smart to beat the shit out of the feds. that way?\" she asked with a chuckle.\n\nGlancing at the card in my hand, I told her, \"From what I can see here this asshole is supposed to be working in the Hoover building in D.C. If I'm right, our local boys don't know a thing about it. They're going to be plenty pissed that these two clods were even here.\"\n\nI put the card back into my pocket, threw my arm over her shoulder, and said, \"I'll worry about that tomorrow when I'm screaming at Agent Gibbons, then it'll be his problem. Now let's get out of here and head over to the mall, we still have some shopping to do.\"\n\n Chapter 17\n\n(Following Orders) \n\nHaving to drive separately in the two cars turned out to be a bit of a boon for Sue, but raised hell with my credit card balances. The Beemer had such a tiny trunk and no back seat that it wouldn't hold shit, but the trunk and back seat of my Chevy were enormous and damn near full when we finally left the mall. Back at Claire's as we transferred her many bags into her trunk and back seat I began regretting my insistence that the trip to the mall was \"my treat.\" I did have to admit that Sue had been instrumental in figuring out who had been following me. Since she was also updating her wardrobe at my suggestion, I guess it's a little late to start griping now. We put the cars away in the garage feeling pretty good about the way things had worked out and I invited her upstairs for coffee and to finish swapping back into our own clothes.\n\nI went straight into the bedroom to put away the new clothes that I bought when the phone started ringing and I hollered, \"Hey Sue to grab that would ya.\"\n\nFinished hanging all my new pretty things I stepped up onto the corner of a box to put the stupid baseball hat away where I found it. Just as I was reaching to put the hat where I'd found it the damn box flipped underneath my foot. My arms flailed as I clutched at anything within reach trying to regain my balance. I ended up falling in a graceless heap to the floor pulling down all of my gorgeous new clothes that I'd just hung with great care. \n\nSue appeared at the door with the phone to her ear laughing and said, \"No she's right here in the bedroom rolling around on the closet floor.\"\n\n\"What?\" she asked with a smile then answered, \"Hell I don't know, it looks like she's wrestling with the new outfits she bought today, it's kinda funny because I think the clothes are winning!\"\n\n\"Is she always this clumsy?\" She giggled into the receiver then said, \"Ya know when she gets a little older like next year or something and falls like this she could break a hip and then she'll be nothing but trouble.\" \n\n\"So I fell, who the hell is that anyway?\" I groused at her thoroughly embarrassed.\n\nShe mouthed China to me and winked I was only slightly relieved, thankful it wasn't an important call the way she was carrying on. I decided I could look on her teasing a little more charitably since it was Claire and she was already well aware of my unfortunate tendency to tip over.\n\n\"Oh yeah she's had a busy day shopping with me, beating the shit out of an FBI guy in an alley, but right now she looks like a whipped puppy rolling around on the floor the way she is,\" Sue was enjoying this immensely and I couldn't help but to start laugh with her.\n\nHer expression turned more serious for a second as she listened intently. When her eyes moved back to me, she was beaming. \"Sure, Damn right, I'd love to as long as you're good with it. What did you have in mind?\"\n\nNow I was perplexed at what the two of them might be discussing. Hearing only one side of a conversation can sometimes be unbelievably maddening.\n\nSue kept looking at me then grinning while she listened only occasionally averting her eyes to add an occasional remark like, \"yep\" \"O.K.\" \"Won't work\" \"No problem\" or \"I gotcha.\" \n\nShe started laughing again, really hard this time and then suddenly snapped off a very military response saying, \"Yes mam! I'll give it my best effort, you can count on me.\" \n\nSue reached out the phone handing it over to me and left the room chuckling. I was still all tangled up with my wardrobe only barely able to achieve a sitting position. I put the phone to my ear and said, \"Hi babe she's lying her ass off, the clothes were not winning! Now just what are you two cooking up?\" \n\nClaire's warm throaty laugh made me forget all of the nasty retorts I'd dreamed up for the pair of them while I lay sprawled on the floor. They were having so much fun talking about me I had a few juicy ones saved and ready but all was forgiven the instant I heard her voice.\n\n\"Jane honey I love you, but it sounds to me like your last few days have been pretty stressful, am I right?\" She asked me the concern in her tone was genuine.\n\n\"Yeah,\" I said with a sigh, \"I can't argue with you there hon, I have been awful...busy.\" \n\n\"See babe that's what I'm talking about,\" she said decisively and continued, \"Since I'm not there to tell you to knock it off when you need it, and I'm guessing you need it right bloody now! I've asked the lovely Miss McKenzie to make sure you relax tonight. That way I won't have to worry that you're over doing it, at least until I'm back there to take care you myself. Now be a good girl and do as she says.\"\n\n\"Aw damn Claire, do I have to? She gets so damn bossy when she's left in charge.\" I raised my voice so that Sue was sure to hear that last bit.\n\n\"Yes, I won't have you running yourself down baby. You've had an awful lot thrown on your plate lately. I just know you'll work yourself to death trying to get it all done. It worries me. I'm not there to help you through any of it, so tonight Sue is.\"\n\nI was really touched by her concern but I wasn't so sure I wanted Sue to \"make me\" relax at all.\n\n\"Don't fight me on this honey, you mean too much to me to have you working yourself sick,\" she told me her voice becoming thick with emotion.\n\nOh god, that did it I would have crawled across broken glass for her if she'd asked.\n\n\"Okay you win,\" I told her softly, \"I'll do what I'm told. You shouldn't have to worry about me you have an important job to do too.\" \n\nI sighed in defeat then asked her, \"How's that going by the way?\"\n\n\"Good,\" she said, \"We gave them the proposal a few hours ago, and we'll probably hear from them again sometime in the morning.\"\n\n\"So how'd ya do?\" I asked her impatiently.\n\n\"Hard to tell the seemed pleased but they had their own stop loss analyst along who turned out to be a total pain in the ass. Overall I'd say we gave them pretty much what they were looking for,\" she said with a satisfied tone. \n\n\"That's good to hear, and how are you doing? You've' been working pretty hard too sweetness. Maybe you should follow your own advice and relax,\" I ribbed her just a little. \n\nShe snickered and answered, \"Point taken, I was just thinking about curling up for a nap. The time change has me all screwed up.\"\n\n\"Well I should let you go and go find what Sue is up to. I hate to leave her running around unsupervised ya know what I mean?\"\n\nI could almost feel her smiling and she told me in a lighter tone, \"I told Sue to give a call later to let me know how you guys are doing.\"\n\n\"Sure, checking up on me now, making sure I not being a naughty girl,\" I taunted. \"Don't you trust me?\"\n\n\"Honey you know I do, I just want to make sure you're having a nice evening and Sue's helping you relax. I can't wait to finish up here and get back to take care of you myself baby.\"",
        "\"I second that emotion!\" I giggled into the phone. \n\n\"Hey babe, do me one favor and remember to change the sheets before I get back, ok? Bye now, love you.\" \n\n\"Yes mam, I love you too,\" I answered thinking this conversation had just taken a turn for the weird. \n\n'Click' the phone went dead in my ear. I grumbled a bit as I got back on my feet. It took me a few minutes to untangle and re-hang everything I'd pulled down in my tumble. With that done, I left the closet to go look for Sue. I was curious to find out exactly what she had in mind to \"make\" me relax. When I didn't find her in the living or dining rooms, I trooped into the empty kitchen but found she wasn't in there either. Muttering \"What the fuck?\" to myself, I thought Sue had might have left. \"Whatever,\" I shook my head and chuckled too tired to worry about it and I turned to the refrigerator looking for something cool to drink, I was parched. While I was rooting around inside the fridge, could have sworn I heard the faint metallic click of a door closing but dismissed it as the mechanical sounds coming from the open appliance. Settling for a bottle of fucking spring water, I made a mental note to stop by the store tomorrow and pick up some decent beer. Taking a few gulps from the bottle, I went to attend another of my body's urgent needs.\n\nWhen I entered the bathroom, I noticed a couple of the cupboard doors were ajar and closed them without a thought. When I was seated, I looked around the room bothered with a sense that something was out of place. It took a few minutes for me to figure out what it was. The clothes I had swapped with Sue this morning were setting neatly folded on the edge of the counter I asked myself, \"What did she do, go home naked?\" My brain began making the necessary connections to answer that question before it was even fully formed, and knew that she hadn't gone anywhere. I finished with my business and stepped slowly out of the bathroom. Immediately I saw that the bedroom door was tightly closed. \n\nI didn't remember closing it when I had left the room earlier. So stepped over to it and I swung the door cautiously open finding that Sue had definitely not gone home. The soft glow from dozens of candles placed around the room was just sufficient to find she had put her time to good use. Wearing one of the terry robes she found in the bathroom Sue was kneeling next to Claire's yoga mat, which she'd pulled from under the bed. \n\nAs I stepped inside she casually tossed a towel at me saying, \"C'mon boss get out of those clothes it's time for you to relax a little.\" She was already spreading another towel over the mat then patted it indicating she expected me to lie down.\n\nI sat down heavily on the vanity bench and told her, \"Sue it's very nice of you, but you really don't have to do this. Surely you have other things you'd rather be doing on your day off.\"\n\nShe smiled up at me, the flickering candlelight made her various piercings sparkle as she answered, \"Ah...nope can't think of any boss, now get yourself over here before the oil cools.\"\n\nDefeated I shook my head and stood pulling off my clothes wondering how I always managed to be saddled with the worlds most obstinate women. As I wrapped the towel around my body, I told her, \"Would you mind not calling me 'Boss' anymore. I have a name feel free to use it.\"\n\nChuckling as she patted the mat again waiting for me to occupy it she admitted, \"Sorry, I've always been attracted to powerful women and, well, you are one...boss. I kinda like it...its sort of sexy.\"\n\nI laughed giving up on the point I laid face down and said, \"Whatever girl, you're impossible.\"\n\nI gasped, \"Oh my god\" impossible or not she did have wonderful hands. The warm scented oil smoothed between her strong fingers and my skin was pure bliss. Kneeling in front of me, she began working on the bunched muscles of my neck. The sensation was so incredible that I was grateful for my recent trip to the bathroom. I'm sure I would have wet myself after only a few seconds of her skillful attention. Applying more oil as she needed it, Sue worked her way along my shoulders and arms giving each muscle exactly what it needed to surrender its tension. She worked slowly all the way down to my fingertips. Lowering the towel until it covered only my butt, she moved to straddle my body and started using the same diligence on my stiff back. I groaned happily in response to her amazing talents. Her hands swept slowly down my spine and then coursed smoothly up my sides on the return trip. Feeling this along with her weight and warm bare skin pressing against the outside of my thighs was almost too much. My body released an involuntary shiver that she felt along with me.\n\n\"You doing alright there boss?\" she asked in a decidedly amused tone.\n\n\"Mmmm, I'm fabulous, where did you learn to do this?\"\n\nShe chuckled and answered, \"Oh, I managed to take a few courses in college that didn't involve finance or math.\" I noticed now that her hands where beginning to linger, just slightly along my sides when her hands passed close to my breasts. (See, there she did it again.) I was getting so relaxed now that I hardly noticed it at first. Without any warning, she moved off my body to begin working on my feet and lower legs. My goodness the girl had missed her calling, she was wonderful. She massaged each toe with the same care she devoted to my entire upper body. I had no idea a foot could feel so wonderful but I was learning it now under Sue's remarkable expertise. My calves and hamstrings were next to feel the excellence in her hands. Those large dense muscles proved a bit tougher but before long, she had them caressed into pliant submission. When I felt the towel lifting off my tuchis, I pretty much knew what was coming next. At this point, I didn't care. She could rub anything I owned as long as she could make it feel as good as my tootsies. (Goddamn feet! I'm in the middle of a full body massage and I fixate on my feet, Whoa! Check that, oh yeah, never mind!) Sue had both hands full of my ass now and her ministrations sent relaxing, soothing, sensations radiating outward through my entire body. Her fingers gradually worked upward along my inner thighs only to artfully dart around those regions of my body where I felt tension building instead of relaxing away. I thought I heard a soft chuckle once as I shifted my position to direct her hands where I wanted them. She moved again this time back up near my head again (Damn, I wished she'd just stay still.) \n\n\"O.K. boss roll over for me,\" she prodded me in the side when I was slow to catch on.\n\nI groaned and complained, \"Oh leave me be, I'm comfortable right like I am.\"\n\n\"C'mon now, you wouldn't want me to cook your three minute egg for a minute and a half and serve it to you? I'm not gonna giving you half a massage either, now turn over.\"\n\nWith a little more grumbling, I flopped onto my back and barked, \"There are you happy now?\"\n\nSue had this impossibly huge grin on her face and said to me while her eyes ranged up and down the length of my naked body, \"No boss, right now happy doesn't quite cover what I'm feeling.\"\n\nWe cracked up, both realizing how ridiculous any pretense of modesty was at this point.\n\nI told her a little sharply, \"You keep it up girlie and I'll massage half your ass over my knee, three minute eggs for god sakes.\"\n\n\"Oh no boss, do the whole thing. I like it so much better that way,\" she chuckled down at me and began softly massaging my scalp. \n\nRight about then I really wanted to give her a slap too. Since I couldn't reach anything good, I just lay there quietly with my eyes closed grinning. That didn't preclude me from dreaming up all kinds naughty things to do with her cute little bod when the time was right. As these thoughts ricocheted through my mind, I could feel my body building familiar tensions almost faster than Sue could sooth others away. My nipples tightened up all on their own though her hands hadn't left my forehead yet. She worked downward along my neck and shoulders again but never even came anywhere close to my boobs. I felt like my nipples where sticking a foot into the air but she never even nudged them as she gave my abs a thorough working over. God bloody damnit she was good, oh yeah she was back working on my feet again. (Betcha couldn't tell.) Her hands were positively magical working upward to my quads smoothing out knots in those massive muscles I didn't even know where there. I felt so relaxed and good, I smelled so nice hell the whole room did. I really wanted nothing more than to lay right where I was and take a nice long nap.\n\nSue wasn't quite finished with me yet. She straddled my body resting her weight against my hips and said, \"now for the best part,\" as she reached upward for the container of warm water that the oil bottle had been resting in and pulled it closer. I was curious what she meant by that remark and folded my arms behind my head to watch what she did next. I looked up into her dark sparkling eyes noticing that she had a positively radiant grin on her face. She reached down untying the belt from the robe slowly, and then in one deft motion she extricated herself from it and casting it aside. \n\nI was frozen mid-breath as she settled back still sitting astride my hips. My eyes darted all over her as she sat perched over my supine body, my god she was beautiful. Her breasts weren't large but they looked so nicely round and firm. They were capped with small light brown and medallions bejeweled with a golden ring through each nipple. Her tummy was flat and tight, my eyes fell lower following the shadowy lines between her well-defined abs. Somehow her navel remained unmolested by the piercing needle. My eyes followed the firm smooth skin of her belly lower until I recognized the cleft of her pussy, the smoothness unbroken by a single hair. I'd never seen a pussy that was shaved so perfectly smooth up close like this, but on Sue, it belonged, was so right and perfectly sexy. Her full pink lips rested lightly on my belly radiating heat against my slick oily skin. A small golden ring dangled from the hood of her clit matching the rings inserted through each of her pale plump nipples. Just looking her hot little bod had my mouth watering and pussy tingling. \n\nWithout any conscious thought, my hands slipped out from under my head and started reaching out for her. I felt utterly intoxicated by her closeness and her femininity. In the next instant, I found myself surrounded by a whole herd of screaming guilt gremlins. Each of them jostled for position within my subconscious trying to alert me to the iron law of unintended consequences. A few weeks ago, her beauty and availability would have been enough to have me ravaging every inch of her. But not now, I had found the woman I loved and I wasn't going to allow something as stupid or superficial as casual infidelity destroy everything I'd wanted for so long. \n\nMy hands folded in on themselves and I lay my arms across my chest and said in a choked voice, \"Sue, I sorry but No, I can't.\"\n\nHer eyes widened briefly in disbelief but after a second she nodded and told me softly, \"I know,\" and caressed my cheek very tenderly and reached for the phone.\n\nShe dialed a series of numbers and waited with it held to her ear while I lay still and quiet beneath her. It was finally answered and she asked, \"So tell me just how big a paycheck do you get anyway? \"You owe me lady, I told you she wouldn't!\"\n\nShe winked at me and then said brightly into the phone, \"Well at present I have her pinned to the floor covered in warm scented oil. We're both stark naked and ready to go and she tells me no Sue I can't. Can you believe this girl? I think she's trying to kill me here. \"\n\nI was still confused for a moment my guts twisted with guilty pangs at how near I'd come to abusing Claire's trust. Sue suddenly burst out laughing and said, \"Nope not once, not even close.\" I listened and finally my brain began firing making mental connections that came closer to normal and I had a fair idea who she was reporting to on the other end of the line.\n\nSue nodded and answered, \"Sure I understand, no problem,\" and handed me the phone then and sat chuckling with her hands on her hips still straddling my body.\n\n\"Hello?\" I said not entirely sure at this point whether it was guilt or pique that was driving my emotions.\n\n\"Jane honey why not?\" the sound of Claire's voice seared right through me and tears popped at the corners of my eyes. \n\n\"Because,\" I answered my voice low and scratchy, \"She's not...well she's not you.\"\n\nI reached out reflexively giving Sue's arm a light squeeze to let her know there was no blame for her in this silly situation. She nodded and slid off me and stepping away to pick up the towels and loose clothing while I spoke with Claire.\n\n\"Jane baby I asked Sue to stay with you tonight and make you feel good, it sounds like she was trying her best,\" she said in a tone that was just short of a scolding.\n\n\"Oh she was,\" I admitted.\n\n\"Then let her,\" She chided, \"You need it and I can't be there to take care of you right now, so I asked her to do it for me and she says she's willing.\"\n\n\"I know but...\" I tried to answer but was cut off.\n\n\"Jane baby, you know I love you,\" she told me in a firm, passionate tone. \"I'll love you for the rest of my life and I know you love me too. Don't ever worry yourself about that babe I don't.\"\n\nI wanted to say something to her but my brain was roiling with confused conflicting emotions.\n\n\"I worked this out with Sue to try and help you, and to show you I'd do anything to take care of you and see that you're happy,\" she explained, \"but I think we've just stressed you out even more. I'm so sorry babe, forgive me?\"\n\nI wasn't sure whether to laugh or cry, but I did know I didn't want her feeling bad over it. Hell, it was my hang-ups that were causing all the fuss, so I took a stab at calming her down by asking her, \"Why? Did you do something wrong?\"\n\nI must have caught her a little off-guard because she remained silent for a few torturous moments. Finally hearing her chuckling softly told me she understood me and was relieved. I felt doubly blessed by having such a wonderful lover along with such a great friend in these two women. \n\nBehind me, Sue pulled the base for the phone off the nightstand and put it on the floor near my head. Punching up the speakerphone, she then took the handset from me setting it back into the cradle. \n\nI watched her cute little butt wiggle sensuously as she walked away.\n\nClaire must have heard and understood the extra clicks on the line then asked me, \"Isn't she pretty honey?\"\n\nI answered honestly, \"Oh, Claire she's so beautiful.\" I wanted to describe her body but it felt too awkward with Sue right in the room listening.\n\nSue had the oil bottle in her hands again though I never noticed how or when she'd retrieved it. She knelt again by my feet and soon had me cooing with pleasure. Her oiled fingers were once again kneading my feet expertly sending excited shivers up my spine.\n\nClaire asked, \"Does she make you feel good baby.\"\n\n\"Mmmm, yes so good,\" was all I could get out.\n\n\"Don't you want to touch her Jane?\" Claire's voice had an insistent edge that I couldn't ignore. \n\n\"Well...\" my voice sounded contrite and girlish in my own ears, but Sue's skill was driving me to distraction again. (Damn her hands!) \n\nListening to the sound of Claire's loving voice while the sensuous pressure from Sue's unbelievable hands stirred my body. It wasn't long before she had me ready to squirm out of my skin. It was becoming more and more difficult to separate the loving feelings I was feeling from Claire's voice in my ears and the thrill my body was experiencing under Sue's talented fingers. I desperately wanted to rub my thighs together but Sue was working up my legs again. Her small hands so strong and slick kept them separated working at the thigh muscles until they felt like formless jello. I heard Claire asking me questions that really pushed my buttons. It was almost as though she was in the room with us and could see everything that transpired.\n\nShe asked if looking at Sue's body excited me. She had all but taken the words right out of my mouth. \"Her beautiful naked body is right there for you babe, her nipples hard and ready...her pussy juicy, hot, just begging for your touch.\"\n\nI almost mumbled \"no\" when a warm slippery hand cupped over my mound and a teasing fingertip dipped into my opening, \"Argh... yessss!\" I purred.\n\nI could hear Claire speaking in soothing patient tones, but her words were quickly lost in the deepening fog of my lust. With one hand, Sue slipped her finger deeper into my aching pussy and began rolling my sensitive clit back and forth with the other. Any reserve I had left evaporated with a single skillful pinch on the engorged nubbin. My body couldn't help but respond. My back arched grinding my pussy onto her hand while my legs widened to allow room for her expert manipulations. I was gasping in seconds as her probing fingers filled me with a warmth that spread through my body like a wildfire. I reached out and surrounded her hips with my arms as she pumped in and out of me in a steady unhurried pace adding more fingers as my heating tissues would accept them. I could \"feel\" Claire was with us the texture of her voice still able to penetrate my senses. Her exact words were lost to that exquisite region I was captured in, between sexual tension and its inevitable release. When Sue bent forward and sucked my clit into her mouth, my ecstatic howl was so loud I think it might have been heard in China without benefit of the international connection. \n\n\"Oh god...Oh...Oh yes...I'm gonna...Oh...Oh Jesus...Fuck...Oh yessss!\" I felt a rush of heat pulse through my nipples for an instant before it flashed through my belly and inner thighs. The currents of building warmth converged and burst through my pussy in clenching spastic waves, I could feel my cum ooze around her pumping fingers and dribble down onto my trembling ass. Several long minutes later, my trembling insides finally stilled. Sue's warm slender fingers left my body, the emptiness I felt was so keen it ached. \n\nClaire reentered my consciousness saying, \"There now baby, that was that so hard, don't you feel better now?\"\n\nI could only whimper as I held onto Sue fiercely while she softly stroked my mound. Her fingers continued tracing my lips and flicking my clit ever so lightly. The nerves were still so sensitive that every caress brought out another buck or twitch of unspent eagerness from my hips. \n\n\"Relax now and enjoy yourself my love, Sue's gonna stay with you all night and make you feel even better baby, I love you.\" She didn't give me a chance to respond telling Sue, \"Thank you so much Sue, we'll settle up when I get back. Good night ladies, have a wonderful evening.\" \n\nThe phone went dead and I found Sue was once again sitting astride my body smiling down at me. My eyes feasted on her body and this time when my hands reached out to explore her smooth pale skin I let myself go, reveling in the sensations.\n\nSues voice intruded into my rebuilding sexual cravings when she said, \"She must really love you boss, to allow this,\" her tone was filled with a sincere longing. \"Now I'm really fuck'in jealous, I want both of you.\"\n\nI smiled up at her while fingering the ring in one of her nipples and said, \"Oh I'd be surprised if she wasn't already working out some crazy scheme to make it happen.\"\n\n\"God I hope so,\" she said with a happy grin.\n\n\"Yeah...me too,\" I answered chuckling beneath her while groping her pert little breasts. \n\nNot giving me long to change my mind or admire her assets in the flickering light, she told me, \"One of my favorite things about giving a full-body masssage, is that I always finish it by using a full body, mine.\" ",
        "She held the bottle of oil up over her breasts and poured, dribbling it all over herself. I watched in fascination as it ran in little rilles along the conturs of her naked skin. The oil flowed over and between her plump breasts. It cascaded down her muscular belly pooling in her navel until that overflowed sending rivulets downward to follow the smooth curvature of her mound. It dripped from her nipples and the underside of her breasts in a warm pleasant smelling rainfall onto my belly. Satisfied that she was ready Sue capped the bottle and tossed it aside. Staring into my eyes she lowered her body to cover mine while threading her thigh between my legs.\n\nThe instant I felt the pressure of her body on mine, her stiff nipples bumping over mine, her smooth thigh in contact with my pussy it was like lightning jolted my whole body. I gasped, reaching out to fill my hands with the firm round shperes of her ass as she swam her slick body all over mine. Raising my thigh to fill the space between her legs we began grinding ourselves together in a frenzy of sinuous oscillations. I don't really know how long we spent writhing against each other this way. I was fast approaching complete sensory overload with the scent of wanton female musk gradually overpowering the floral perfume of the oil. I was so consumed in the alchemy of the moment my mind had to fight to separate one sensation from all the others. Her breasts pressed against mine sliding back and forth driven by the motion of our hips. A delicious electric warmth pulsed through my nipples each time the hard little rings in Sue's bumped across them. My clit and swollen lips slipped along her firm thigh lubricated by the oil and my own creamy juices. My hands kneaded her ass as they followed its motion up and down my thigh. Reaching a fingertip out to collect some oil from my own skin I smoothed it over Sue's bobbing rosebud. She gasped and her hips lost much of their rhythm as traced a few lazy circuits around it before slipping it slowly inside her. \n\nThat was the moment Sue choose to ask me, \"Now isn't this...ugh...better boss?...ahhh\"\n\nUsing a handful of her short dark hair I pulled her face toward mine and barked, \"Oh shut up,\" and kissed her...hard. My legs tightened around her thigh as my butt bounced off the mat grinding myself faster and harder against it. She moaned with apparent delight as I explored her warm soft mouth with my tongue and continued investigating her tight ass with some very eager fingers. I slipped an arm under her tummy reaching between her legs frantically searching for her pussy. When my fingers found the hard little ring through her clit they sprang into action rubbing all over it. The strange mix of sensations on her silky smooth mound. With two fingers buried in her ass and another two probing of her pussy Sue gupled for breath and and whimpered against my throat bringing a tired happy smile to my face.\n\n\"Oh yeah boss that's it ohhh...yes...Oh god ,Oh yes, do me boss...Oh yeah boss kiss me...Oh ...boss...fuck...me...\"\n\nSeconds after our lips met again her body began shuddering between my hands. She stiffened and squeaked in a delicious high pitched squeal which meant only one thing. The sudden flood of warm slick liquid over my fingers only confirmed it. The conractions of her body as she came were so strong I could feel them through my own belly where it was still in contact with hers. \n\n Chapter 18\n\n(Discoveries) \n\nMonday\n\nSue did not get to spend all night with me I needed some sleep and with her around that was never going to happen. I sent her home before midnight but not before, we relaxed with a vengeance. We showered and enjoyed each other's company all evening long. She introduced me to some of the joys of riding a wild Sybian and several other novel ways of pleasuring a female body that I hadn't previously experienced. The two of us skipped dinner entirely and ended our \"girl's night in\" with a snack of fresh fruit, sweat cream, some wine, and a tray of ice cubes. Mmmm...delicious. (That reminds me, I have to clean the goddamn kitchen again when I get home. Shit!)\n\nIt may have been a little cold to run into work with the top down at 4:30 am. I hoped a little foolishly I suppose that the brisk temperature would help wake me up as I sped through the darkness of early autumn morning. All it really did was chill me to the bone and fuck up my hair. \"Stupid,\" I said to myself as the elevator ascended and I vainly tried to unsnarl the tangled mess with numbed fingers. I brought with me some supplies in a canvas bag that you wouldn't normally find in an office supply closet. Just your basic double-ended dildo a nice fat jelly vibe and a few other nifty items I found in a giant suitcase in the back of Claire's closet. Oh and I packed some lube in there too, you know just in case...I flipped the bag onto the conference table inside Claire's otherwise empty office and closed the door. Turning to step through my own office door, I found that I was not the first one to work this morning. Even at this asinine hour, someone was here ahead of me. Peeking out from behind my computer screen was Liz with a serious scowl on her face that brightened as soon as she spotted me.\n\n\"Oh good it's you,\" she said her voice sounding a bit peevish, \"I thought it was that God damn security guard coming back to piss me off some more.\"\n\n\"Liz,\" I said feeling a mix of compassion for the guard and confusion with her in the office this early, \"The guard is just trying to do his job and what the hell are you doing in here at this ungodly hour anyway?\"\n\nStill concentrating on the screen and giving me a dismissive wave she answered, \"Oh I couldn't sleep, this date thing has been gnawing at me all night. But, I think I have some of it figured out now.\"\n\n\"Show me,\" I said walking around behind her every nerve in my body on full alert now.\n\n\"Alight, now look at this column,\" she started using her finger to trace along the screen, \"these are the funds being pulled for investment from the general ledger.\"\n\nI nodded my understanding and she continued, \"And here are the first indications that those funds were actually starting to return something on those investments in either direction.\"\n\nAlmost uniformly, there was about a thirty-day gap between the two dates.\n\nI asked aloud without realizing it, \"Where do suppose that money was hiding for those thirty days?\"\n\nShe said around an exasperated sigh, \"That's what I can't figure out! It reminds me of how employers would play a shell game holding onto their employee 401K deductions back in the nineties. They'd draw the money from the employee's payroll and ninety days later send it on to their 401K account. That cash was stored in an interest bearing account for that whole time but none of the interest followed the deduction when it was finally deposited in the employee's name.\"\n\nIt took a few seconds for her arcane reference to bubble up in my memory. I only recalled it at all because of the stink it caused in the business community when the Department of labor changed the regulations to make the allowable delay a firm 15-day maximum. \n\nShe went on saying, \"It was shitty thing to do to your people. But hey, it was legal as hell because the regulations allowed it. The business community loved it because it helped keep their cash flow picture looking nice and rosy. Well, the smart ones anyway.\"\n\nI nodded my understanding of how that had worked out.\n\nThen she told me, \"The smarter ones though set up revolving investment accounts actually making a bunch of dough by holding onto money that wasn't theirs for those ninety days.\" \n\n\"No wonder there was so much bitching when the DOL changed the regs.,\" I added as the picture she drew became clearer to me.\n\n\"Now look here,\" she pointed pulling up a new spreadsheet, \"This is from Allied and the pattern holds the same until,\" she scrolled down the form, \"right here.\"\n\n\"Holy shit,\" I exclaimed in her ear as the columns of date's running side by side thirty or so days apart suddenly slammed back together to less than a few days between them.\n\n\"Holy shit is right,\" she answered smug satisfaction coming through loud and clear in her tone.\n\nShe turned to me and said, \"Whatever that asshole was doing with the money he stopped doing it a full fifteen months before the merger. Almost nine months before it was ever announced, it's almost like he knew it was coming.\"\n\nHer excitement was infecting me and it was my turn to whistle in amazement.\n\n\"That's not all of it,\" she announced holding up a warning finger, \"Look at this,\" and she pulled our ledger back up on the screen.\n\nAs she scrolled down the page finding the first quarter of this year and said watch this. On January 23rd the date spread suddenly widened from 30 to a 60-day differential before any money found its way to the investment ledger and she said, \"Check the date,\" then tapped a printed copy of Dan's chart on the first drop in our investment income, the match was indisputable.\n\nShe scrolled down further into our current fiscal fourth quarter pointing again she said, \"And here,\" the differential abruptly swelled out to 90-days.\n\nScanning the data in front of the two us, \"This is way too regular to be managed manually it's got to be automated,\" I said thinking aloud.\n\n\"Good girl,\" Liz said excitedly, \"I caught that too but why these second two big jumps? It doesn't make any sense. He could have gone on indefinitely sucking the money out of the company and then returning it later. As long he was control of both ends of the process, who was gonna catch him?\" \n\n\"Yeah,\" I said astonished at the blatant nature of it, \"We're still a privately held company we pretty much only have our board to answer to. It's nice not to face all the extra regulation but if we were publicly traded. The external audits would have caught this a lot sooner.\"\n\nLiz picked up on my thought and added, \"You've never had to file that damn form 10-K with the SEC, and put up with all their mandatory bullshit. Hell if the bastard was even a little bit careful he could have gone right on robbing you blind right up until the day he was ready to walk out the door.\"\n\n\"You know Liz it's really weird, I've been studying Adams' hedge-fund work and to tell the truth some of it was brilliantly subtle, even elegant. This guy was good, too good to get caught at something as clumsy as that embezzling crap I tripped over,\" I told her firmly.\n\n\"I agree Jane honey but even smart people can have a break down, get over confident or just plain greedy,\" she rationalized.\n\nCompletely confused now and thinking aloud I said, \"The cash flow crunch he put us into by doing it was like waving a red flag in front of a bull, Bart Stilwell wasn't going to miss it, or leave it lie.\"\n\n\"It just doesn't feel right Liz, I mean, it's almost like the guy wanted to be caught.\" \n\nThen something Claire said a few days ago slammed into my brain like a sledgehammer, \"Dad wanted to can Adams ass back when you first caught on to his scheme, but the when the Feds. where called in they wanted to leave him in place to gather more evidence, those shitheads.\"\n\nSuddenly I remembered something I'd come across on the original merger documents and started searching for it among the piles of paper scattered across my desk.\n\nStanding now Liz asked me, \"Jane honey what is it, what are you looking for?\"\n\n\"This,\" I held the original merger agreement in my hand and began quickly flipping through the pages.\n\n\"No,\" I flipped to the next page, \"No, No, ah here it is,\" my finger raced down the page to land on a name buried among the list of Allied Insurance Group's largest shareholders.\n\n\"The Walcott Trust Management Corporation,\" I read aloud.\n\n\"That sounds kinda old money to me maybe Boston, but it certainly has a Massachusetts accent,\" Liz chimed in.\n\nI turned to her handing her the merger contract and said, \"I have a little research project I'd like you to dig into. Get me everything you can find on these guys.\"\n\nShe nodded with a smile and said simply, \"Will do toots, what's on your mind.\" \n\n\"If I'm right Adams was never working alone and did want to be caught. I think now I might know who his not so silent partner is. The question now is, can we prove it?\"\n\nLiz asked softly, \"Aren't you forgetting why?\"\n\nI told her, \"Figuring out why is someone else's problem. If I can't prove how and who, why won't matter a lick. For Adams or us we'll both be screwed. He'll be in federal prison for a lot of years but we'll be bankrupt long before he gets out.\" \n\nLiz went to my desk and started doing her research, and I walked over to the other workstation and booted it up before connecting my little digital camera. The prints I got were nothing spectacular but were clear enough for my purposes. Gibbons was gonna be eating a very large black bird this morning, beak, feathers and all. I was going to enjoy watching him do it too. Just before 7:00, a courier arrived at my door with a plain brown envelope. I signed for it and he left immediately. \n\nLiz commented, \"Kinda early for a delivery isn't it?\"\n\nAs I picked at the sticker to open it, I answered her, \"The label says delivery guaranteed before noon or it's free.\" I chuckled glancing at my watch, \"and it's definitely before noon.\"\n\nI never finished opening it because Dan stepped through the door at 7 o'clock sharp and said, \"Hey boss I got something for you. Hey, who's your friend? You aint gonna believe it, Hey what's that you got there.\"\n\nLiz and I both chuckled at his excitement and I threw the envelope onto the desk and answered him in a tone mimicking his own, \"Calm down Dan, take a breath, this is Liz she's helping us with this mess, Now lets take a look at what you've found.\"\n\nHe stopped hanging his jacket over the chair and looked over at me, with a chagrinned expression and said, \"Sorry, I'm just a little freaked this morning, seriously you aint gonna believe what I found yesterday. I was gonna call you but I didn't know if you were busy.\"\n\n\"Yup,\" I answered remembering my 'fruitful' evening with a smile, \"very busy.\"\n\nLiz and I crowded behind him as he plugged one of those nifty flash drives into the front of the PC and said, \"That chart you had me put together on Friday got me thinking that those income drops were too perfect, too even to be anything but automated. It was like a single command changed everything.\"\n\nI ruffled his hair and said, \"Great minds work alike Danny boy. The two of us just figured that out a few minutes ago.\"\n\nHe looked from me to Liz both of us nodding down at him with feline grins that suggested some one might be missing a canary this morning. He turned back toward the screen with an amused snort and pulled up the data from the drive. When he found what he was looking for he turned back to us and said, \"I found this set of command lines buried in Allied's system on one out of sequence backup tape we got. It took the money from a general ledger account number and forwarded it to a numbered bank account, instead of disbursing it through their investment protocol. Thirty days later, it would return the exact same amount from that account, feeding them back into Allied's protocol and that's when the investments were actually made.\" \n\n\"Son of a bitch,\" I whispered, it was the only appropriate comment that came to mind.\n\n\"It gets worse,\" he said as pulled up data from another file and arranged the two windows side-by-side, \"I found the exact same set of commands buried in our system.\"\n\nI asked him trying to think quickly of how best to limit the damage to us, \"Dan can you take control of these command lines?\"\n\n\"Sure boss, piece a cake,\" he answered confidently. \"I mean the syntax is really old but our mainframe still communicates in essentially the same way as it did when it was first installed.\"\n\nLiz watched me as I went over to my desk and began accessing our general ledger and moving money out of our investment accounts. When I was finished, only one dollar remained in there all by its lonesome.\n\nShe asked with a smirk, \"Are you thinking what I think you're thinking?\" \n\nI nodded but let her say it.\n\n\"Old investigation, old computer code, an old money Massachusetts corporation, there seems to be a bit of a trend here. So now you think you know both the who and how don't you? What are you planning to do little one?\"\n\nI grinned at her and asked, \"Wanna watch?\"\n\n\"I wouldn't miss it for the world,\" she answered chuckling as we stepped back over to Dan's machine.\n\n\"Let's find out just how good a code cracker you are Dan, here's what I want you to do,\" and I explained to him in detail what I wanted to happen. \n\nWhen I was finished telling him the details of my scheme he whistled and said shaking his head, \"Remind me never to mess with you boss, you're vicious.\"\n\n Chapter 19\n\n(Threats of the Blackest Kind) \n\nLiz and I went to the cafeteria to get some breakfast leaving Dan to work in peace. After passing through the serving line, we ran into Sue waiting by the cashier. I spotted a small bowl of fresh fruit on her tray and nudged her with an elbow asking, \"Didn't get enough last night?\"\n\nShe grinned at me, her dark eyes sparkling at my double entendre and answered, \"Never,\" we both started giggling.\n\nWe must have irritated Liz who sighed loudly and said. \"Alright you two knock it off, I feel like I'm back at college again with a couple of sorry assed freshmen.\"\n\nI introduced the two once we'd found a table and it wasn't long before we were all chatting like old friends. Liz and I both commented on how nice Sue looked in her blouse and skirt. She confessed that she was running late this morning trying to figure out what the hell to wear. She fixed me with a glare and complained that it was something she never had to think about before. I noticed some missing hardware on her face and told her she really did look cute. She was less than happy telling us how she'd been hit on by three guys already this morning and that too was completely my fault.\n\nI laughed and told her, \"Hey when you look as good as you do girl, people are gonna notice.\"\n\nLiz agreed adding that Sue was definitely a hottie and would probably have to put up with a lot of attention, and not only from men.\n\nSue beamed at us both and chirped, \"That's fine with me, but those poor boys don't stand a chance with me.\"\n\n\"Oh Christ,\" Liz said looking over her coffee at me, \"Please don't tell me that I've stumbled upon another you, little one?\"\n\nI grinned winking at Sue and answered, \"Maybe, only this time she's smaller, cuter, and maybe even a little smarter too.\"\n\nSue flushed lightly with embarrassment as we discussed her.\n\nWe finished eating quickly, and I told Liz that I had to go with Sue to make the big announcement that I had found them a pretty new boss to her people. She congratulated Sue and continued upstairs after we stepped out on the nineteenth floor. I reminded Sue that HR would be sending someone up later today but she could start moving into her new office anytime she wanted. The old team was more surprised with Sue's altered appearance than her being promoted to lead them. They all seemed to approve and congratulated her warmly with one notable exception. Steve was all but wild eyed and panting staring at his hot new boss. She shot me a \"see what you did to me\" look but I left her to deal with his hormones in her own way and returned to the elevator heading back to my own little nightmare.\n\nLiz was working alone when I arrived back in my office. She told me that Dan went downstairs to the computer room to finish the project I had given him. Picking up the envelope I never finished opening, I was feeling pretty damn good for a Monday morning, and flopped into my chair with a smug grin on my face still fighting with the stubborn envelope. Finally able to breach the seal and view its contents my good feeling was replaced with an ice cold fury. My shaking hands held six glossy 8x10 s of Claire and I engaged in various sexual activities in very graphic detail. There was also brief note inside that held a very few typewritten words. ",
        "One image was taken through the window behind my desk where Liz was seated at this very moment. It featured me with my feet propped up on the desk and a hand between my legs. There was little doubt what I was doing in that position without a stitch of clothing on at the time. The next was taken from outside my car with Claire's face and finger filled pussy centered in the frame. The third image was taken from behind my cute little car parked at the scenic overlook. Claire's legs were hanging out the open door and I was on my knees, with my face obviously buried in her crotch. The last three were shots from our afternoon on the balcony. The first of these was actually a nice shot of us standing against the railing holding each other in the buff while we shared a kiss. The next two made my blood run cold and set my anger to a furious boil. The first showed me winking at the camera while straddling Claire's face, the later displayed me on my knees with my face once again in Claire's pussy while the giant blue dildo filled my own. Finally getting to the note, I read those few words and nearly blew a gasket, \"Back off Bitch, or I'll ruin you both.\" Now I knew why I recognized old \"Smokey\" on the sidewalk yesterday. He was the dude tossing his salad while watching us from the adjacent balcony. A quick glance at my amateur surveillance photo of him confirmed it for me.\n\nI stuffed all of them and the note angrily back inside the envelope and slamming it down on the table I roared, \"Now you've done it you prick, well Game-on motherfucker!\" \n\nMy furious outburst shattered the silence in the room and Liz asked me concerned, \"Jane what's the matter? I haven't seen you this mad since Farnsworth tried to fail you in poli-sci your junior year.\"\n\nI stood pulling the note and one photo from the envelope as I stormed over to her and flipped them onto the desk for her to see.\n\nShe whistled and said, \"So it's come to this already. I assume this isn't the worst of it?\" \n\nNodding I answered her sharply, \"No, not by a long shot but it doesn't matter, I taking this fucker down regardless of anything he tries to do me.\"\n\nLiz asked next in a cool tone, \"and what about her?\"\n\nI grinned and answered her question with one of my own, \"Come on Liz, she's Bart Stillwell's daughter. Do you really think she'd have me handle it any other way?\" \n\nShe shook her head and her smile turned wicked as she handed the photo back and said, \"No I suspect not, now go get him, just be careful Jane. It looks like this guy is willing to play it awfully dirty.\"\n\nI was so furious I could hardly think but answered, \"Let the biting, scratching, and eye-gouging begin. Two can play this game and second place is gonna suck!\" \n\n Chapter 20\n\n(Payback is a Mother) \n\nI left Liz after stuffing all of the photos and the research materials that she had been able to find into my valise. My first stop was the computer room to check on Dan's progress. He was hard at it but his grin told me he wasn't running into anything he couldn't handle.\n\n\"How ya doing Danny?\" I asked him hoping my tone didn't reveal any of my inner turmoil.\"\n\n\"Awesome boss, I haven't had this much fun since I cracked the IBM database as a teenager.\"\n\nTo me he looked every bit the happy troublemaking teen.\n\nI pulled out the sheaf of papers from Liz and handed to him saying, \"Here's the rest of what I was hoping to find on this asshole.\" \n\n\"The Walcott Trust Management Corporation,\" he read aloud, \"Oh look here boss, it says they're a non-profit, with all the money this guy's shuffling back and forth I wonder if the IRS wouldn't find something questionable in their books?\"\n\nI liked the way his mind worked and asked if he could set it up.\n\nHe answered, \"Easy as pie boss, their security is shit.\" Then he elaborated, \"Most government agencies are at least five years behind the times, they're just too big and cumbersome to keep up with the latest technology. The DOD is the best of the bunch but the rest I can blow through like tissue paper and they'll never know I was working from inside their own systems.\"\n\n\"Good,\" I said feeling a touch of warmth at the long overdue retribution we were designing for our covert tormentor, \"how are you coming on the rest of it?\"\n\n\"Done boss, I just need to hot wire this Walcott trust thingy with the IRS and I'm finished.\" He smiled when I squeezed his shoulder in gratitude.\n\n\"Run the list for me again. I want to see if there's anything we missed,\" I asked him leaning against his desk.\n\n\"O. K. our system is scheduled to send the dollar you left in the investment account # G-386225 today at 10:00am eastern time. That account's activity will be tagged with my tracking file so we'll be able to follow any activity on it even if he just checks the balance. That one was in Zurich just like you thought so I couldn't fuck with it anyway. As soon as our dollar leaves here, I clamp down airtight security on our system until you tell me different. Nothing gets in or out including email, internet, wireless, or our Sat. system. It'll piss some people off, but I'll just tell them to go home and surf porn if it's that important to them.\"\n\nI laughed remembering how many people were caught by Dan's data trap doing exactly that on company time and equipment.\n\nDan went on getting more excited as he explained, \"Now for the best part, five minutes before that about six minutes from now, our system will send out the return command telling his account to send back what it took out 90 days ago. Only this time instead of that dollar amount, the command line says \"$999,999,999,999.00.\" That should empty every cent out of his account into that segregated account you set up yesterday, unless of course he has more than a trillion dollars in it.\"\n\n\"Very good Danny boy now run me through the rest of it,\" I asked starting to feel better already.\n\nDan gave me a lusty sigh and began reciting everything else he'd done as I listened attentively.\n\n\"I've invalidated his passport, frozen every domestic bank account in his and his wife's name. He's also on every watch list I could think of, State department, Homeland security, the FBI, the CIA, and even Interpol ... there's not an Airline or charter service in the country that will let this guy near a plane.\" \n\nI interrupted telling him, \"You missed Immigration and Customs enforcement, the DOD and the Coast Guard, he may have military or maritime contacts that we don't know anything about.\"\n\nHe made a note and said, \"Gottcha boss no sweat.\"\n\nHe continued from where he'd left off, \"I've issued a nation wide BOLO with his name, picture, fingerprints, driver's license, and badge number and listed every vehicle he owns on it too. Every police department, two-bit sheriff's office, state police, highway patrol, and county jail with access to that system should already be looking at it.\"\n\n\"What charge did you put on it?\" I asked curious to know how cruel he decided to make it.\n\nHis near maniacal grin told me it was pretty awful before he uttered a word, \"It's shocking boss but it seems the dudes a child molester, his own daughter. Can you believe it a powerful government official like him? Its shameful I tell you.\"\n\nI laughed at his creativity and nodded for him to continue.\n\n\"Speaking of the Kiddies,\" he told me, \"I've frozen their trust accounts and canceled their credit cards along with every one I could find for mom and dad including the one he was issued by the FBI.\"\n\n\"That should leave him with only the change in his pockets and nowhere to turn for more cash. Every law enforcement officer in the country is going to be more than happy to slap the cuffs on him,\" Dan told me holding his hand up for a high five.\n\nI held back until I asked him but I was already certain of the answer, \"And none of this can be traced back to us if it all suddenly goes sideways?\"\n\n\"C'mon boss, my friends don't call me Five-finger Phillips for nothing.\"\n\nI slapped his hand in triumph, was turning to leave, and told him over my shoulder, \"Hey Five-finger, don't forget to check for a corporate card from that trust-thingy too. I want him shut-down so tight he'll have to shit nickels to buy a cup of coffee, you got me?\" \n\nI just pulled out my cell to call a soon to be crow eating FBI agent when the damn thing rang in my hand. \n\nI answered in a brusque tone as I was stalking toward the elevator, \"De Marco.\" \n\n\"Good morning Miss De Marco,\" I couldn't believe the slimy bastard had the guts to call me so soon after that stunt he pulled this morning. My temper went beyond rage straight to inferno just from the sound of his voice.\n\n\"I assume you got your delivery earlier today?\" he asked in his distinctly eastern twang.\n\n\"Oh I got it alright, let me be the first to tell you your photographer needs a lot of work dickhead,\" I just couldn't help myself.\n\n\"Such language Miss De Marco I would have expected better from you,\" Walcott purred into the phone. \n\nWhile Walcott was still yapping, I glanced down at my watch and saw it that was already 10:05. I prayed Dan was as good as his word and that my watch wasn't running fast, because I couldn't take any more shit from this asshole. I took a deep breath trying to calm down but it was a futile exercise. The instant he shut up, I launched into a tirade that would have embarrassed the saltiest sailor on the high seas. \n\nI screamed at him, \"You have no goddamn idea what to expect from me motherfucker! Did you really think you could scare me with a couple of naughty pictures you cocksucker! I'm having them enlarged for framing to hang in my office right now you Fuckstick! I hope your boyfriend's in prison like you in an orange jumpsuit. After I get through with you, that's gonna be your permanent wardrobe, you stupid fucking bastard.\"\n\n\"Click\" the line went dead. \n\nThank god, no one else was around to listen to that exchange. I was shaking as the raw fury slowly seeped out of my system and I'm sure my face was glowing red the whole time. It was a struggle to get myself under control but when I finally did, I dialed Gibbons and waited for him to answer.\n\n\"Gibbons,\" he answered sounding less than cheerful.\n\nI suspected my name appearing in his caller ID was behind his grim tone, \"Where are you? I need to see you right now Special agent,\" I asked him with no sense of compromise in my voice.\n\n\"I'm on my way to the county lock-up, we're interviewing Adams again this morning,\" he told me. \"Good, I'll meet you there,\" I hung up on him, immediately turning my phone ringer to \"silent\" so that I wouldn't have to listen to him trying to call me back to tell me I couldn't.\n\nI hustled through the building and jumped on the elevator heading for the garage. As my angry footfalls echoed off the concrete, I wanted to make one last call dialing as I neared my car.\n\n\"Tell me how we did Dan, did it work?\" I asked holding my breath.\n\nHe laughed a strange giddy little laugh and said, \"Did it work she asks? It was like the sweetest clockwork you've ever seen boss! We swapped our one measly dollar for $668 million of his. Oh please lady, did it work? I mean really boss have a little faith, will ya.\"\n\nRelieved I exhaled and leaning heavily against the cars fender I told him, \"I will never again doubt the awesome power of the computer geek. Dan that's some great work. Thanks buddy, now keep us locked down until I tell ya different alright?\"\n\n\"Will do boss,\" he chuckled and then gave me a quick \"I'll mind the store for you,\" hanging up on me.\n\nI drove toward the county jail as though the hounds of hell were on my tail. Slowing down never entered my mind until I saw the lot full of squad cars parked out front of the county jail complex. I pulled into a visitor's space still feeling a bit shaky from all the adrenaline pumping through my veins. I hurried into the building hoping I wouldn't have to waste much time searching for Gibbons. A young deputy escorted me trough the building into a narrow hallway where the interrogation rooms were. He knocked then abruptly opened the door and announced \"Someone to see Special agent Gibbons,\" before ushering me inside. The room wasn't at all what I was expecting. It was the observation room next to an interrogation suite. A different agent was talking to a stony-faced Clifton Adams with his smirking attorney perched at his elbow."
    ],
    "authorname": "J-Stroke",
    "tags": [
        "lesbian drama",
        "rough sex",
        "karate",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/warming-the-iceprincess-pt-04"
}