{
    "title": "There and Back Again Ch. 075-076",
    "pages": [
        "Chapter Seventy-Five: Dwarven Politics\n\nThe first discrepancy between the real Orzammar and the game was stairs. There was a massive flight of stone stairs, wide enough for a platoon of soldiers to march in formation, leading down into the mountain. I suppose I shouldn't have been surprised. It made little sense that you would enter at high altitude, even with a mountain in front of you, and be able to go up a tier to the Diamond Quarter.\n\nThe Hall of Heroes was a lot more impressive than in game. It was probably the width and length of a football field, with dozens of statues that varied in size and groupings. Some were incredibly ornate, some ancient and much more worn with time; there were artisans working on scaffoldings, restoring the most damaged of the statues. It was tiered, leading further down into the mountain; every tier held several groupings of statues. Every sound echoed through the chamber, which could only have been done on purpose, and it kept everyone very hushed as we walked through. Duncan kept a slow pace so we could all gawk.\n\nThe chamber was dim, except where work was being done on the statues, but what light there was came from multiple torches in sconces on pillars throughout the room, and from the far end. The temperature rose, as we got further from the doors; outside it was below freezing, but halfway across the Hall of Heroes we started taking off extra layers of clothing. By the far end, it was comfortably room temperature.\n\nOne of the massive, round, dwarven doors stood open at the far end, leading into what I assumed were the Orzammar commons. The light was much brighter, and we all had to stop and adjust for a moment. When I could see clearly again, I stared, open-mouthed.\n\nI knew Orzammar was huge, but the ceiling had to be sixty feet above our heads, and along each wall were statues carved into the stone of dwarves holding that ceiling up. It was sort of creepy -- I was sure the carvings were cosmetic, but it felt like the whole thing would come crashing down if one of those life-like statues decided to just let go.\n\nOut in front was a lake of lava that stretched as far as I could see. That explains the temperature increase. We were probably ten feet above the level of the lava, and the lake was ringed with stone railings. The molten substance provided ample light, and it lit the whole area. There were no torches here. Out in the centre of the lake was a massive platform, attached to the commons by a long stone bridge, and I knew that would be the proving grounds. To either side of us, huge corridors led towards the areas that I guessed would house merchant stalls, stores, and housing for casted dwarves who were not of the nobility.\n\nNo dwarves were killing each other right at the entrance to the commons, for which I was grateful.\n\nDuncan took the lead, obviously, as the only one who'd been to Orzammar before. Once everyone had done gawking, he led us off to the right. He was greeted by dwarves as we walked, and everyone seemed to know who we were, as well as knowing Duncan by name. We followed along, eyeing the goods on sale -- there were gems, and weapons, and carvings made out of stone, as well as vendors selling ale by the mug, and delicacies like roasted nug-on-a-stick. I tried my best not to gag; Alistair squeezed my hand sympathetically.\n\nWe came to another massive stairwell, and I guessed it would lead up to the Diamond Quarter. I stepped up to Duncan as we climbed.\n\n\"Tom...Duncan? Did you say something about a compound?\"\n\nHe nodded. \"The Grey Wardens have been allocated an estate near the palace. It's been ours for generations. There should be a small staff keeping it ready for us, paid for by the King. That is, unless the funding has been cut off since Endrin died.\"\n\n\"Well that would have been nice to know,\" I grumbled.\n\n\"You didn't know?\"\n\n\"No, and I bet my boots neither do Aedan or Alistair.\"\n\n\"Neither do we what, little sister?\" I looked to see both Wardens climbing stairs behind me.\n\n\"Did you know the Grey Wardens have a compound here?\"\n\nBoth men shook their heads. Duncan smiled ruefully. \"I really have been remiss in teaching you about the Grey Wardens, haven't I? Where did you stay in the performance?\"\n\n\"It didn't say. It never really went into detail about that sort of thing. But having a place where messages could be left or we could invite Deshyrs to talk would have been handy.\"\n\n\"I think you'll like the place.\" Duncan smiled. \"Real beds, a bathing chamber with runes that fill the tub with warm water on demand, and a huge main hall with all the food you can eat.\"\n\nAlistair chuckled. \"All the things a Warden needs to call a place home.\"\n\nAfter winding our way up the massive staircase, we finally opened out onto another corridor, which was essentially a balcony looking down over the commons. I realised it had been done cleverly -- the balcony was the roof of the buildings below, and the noble's estates were built into the rock face. It mean that, unless you hung over the railing, those below could not even get a glance at the nobility above.\n\nWe walked down the corridor, now having to stop and bow as we passed the finely-dressed dwarves loitering about. It must have looked hilarious, because we all took our cues from Duncan, not knowing who we needed to bow to; we'd be walking, he'd suddenly stop and bow, and then like a little gaggle of geese behind him, we'd all stumble to a halt and copy him. No one laughed, though, and I wondered if the dwarves lacked a sense of humour, or were just being too polite.\n\nI had to admit, it was weird in kind of a nice way to feel tall. Especially around Sten and Shale, obviously, but even Alistair and Anders were close to a foot taller than me. Being several inches taller than the tallest dwarf was sort of gratifying. Not that I'll ever say that out loud...\n\nThe estates we passed all had enormous carvings on the walls and ornate doors, competing with each other for gaudy decadence. I thought they were largely quite ugly, but who was I to judge? We finally came to an unassuming door on a plain section of wall. Duncan knocked firmly, and we waited only a few minutes before a gray-haired, enormously rotund, elderly dwarf woman answered. Her face broke out into a smile as soon as she saw Duncan, and she greeted him enthusiastically.\n\n\"My Lord! We heard rumours of a battle on the surface, that all the Grey Wardens died; the others, they all left, but I knew, and I stayed put, my Lord. I'm so glad to see you!\"\n\nDuncan smiled warmly. \"Mistress Leta, these are my Grey Wardens and associates.\"\n\nHer eyes went wide when she saw the number of us present, and wider still when she saw Shale and Sten with us.\n\n\"Oh my! How exciting! Oh, how rude of me. Please, all of you, come in. Come in.\"\n\nShe ushered us through a narrow foyer and down a hall into a dining area that rivalled the main hall at Redcliffe in size. There were half a dozen tables, all with padded benches, and a small riser near the front where someone could stand to make announcements to a large group. We set our packs on one of the tables and collapsed onto seats, happy to be done with walking for a while.\n\nApparently the only one left working in the estate, Mistress Leta was introduced to all of us. She nodded politely at each, though the mabari, the Qunari, and the golem still clearly made her a bit nervous. She assured Duncan that the bedrooms were all ready for us, and that she could have a couple of servants in to help, and a supper available in two hours. She pointed us down a hallway that led to the living quarters. There were a few larger bedrooms, clearly meant for important visitors, that were claimed by Duncan, Aedan and Zev, and Alistair and I; the rest of the rooms comfortably fit one, and there were more than a dozen on a second story up a narrow flight of stone steps. The rooms were nicely furnished, with large soft beds, small tables with chairs, and the walls covered in tapestries; the colour scheme was blue and silver or grey, Grey Warden colours. The only thing missing were windows.\n\nAlistair and I stowed our gear, changed out of armour, and headed back to the main hall. Mistress Leta showed everyone around, mostly by pointing from the chair she'd settled her large self into.\n\n\"Down that hall, the third door and fourth door on the left are bathing chambers. Touch the runes, and warm water will flow. There's a plug in the bottom of the tub -- lift it when you're done and the water will drain. The first two doors are storage and such; please stay out. Past the bathing rooms are the armoury and the library.\n\n\"That hallway leads to the kitchen. There's two larders -- one you're allowed to raid in the night, the other you are not. Both are well-stocked, so stay out of the back room.\" I was sure anyone disobeying her would risk life and limb. She reminded me of a couple of the more military-style teachers I'd had in school.\n\n\"You need anything, you let me know and I'll arrange it. You need washing done, you put it in the hamper in your room and I'll send it out. I'm going to bring in a couple of my girls to help out while you're all here -- you boys keep your hands to yourselves, and we'll all get along fine. Understood?\"\n\n\"Yes, ma'am!\" was the only possible response, and we all gave it. Leliana and I offered to help with the cooking, but she just laughed us off. She sent out messengers -- presumably to her girls -- and then hustled off to the kitchen. We all scattered to rest, and I found myself alone with Alistair, lying on our luxurious bed; not a lot of rest was had in our room, leaving Alistair with a smug grin when we headed out for supper.\n\nThe meal was excellent, not excessively fancy, and most of all, plentiful; there was fresh bread and produce, and something that looked a lot like roast beef -- I wondered if it was bronto, but didn't ask. After the meal, we gathered to plan the next day. Duncan cleared his throat.\n\n\"According to Mistress Leta, Prince Bhelen and Lord Harrowmont are indeed vying for the throne. She assures me that getting in to see either of them is unlikely, however, as Sierra said, they should be available to speak to tomorrow morning at the Assembly. I would like Aedan, Alistair, and Sierra with me; the rest of you are welcome to come with, to stay here, or to explore the Diamond Quarter or the commons, but I expect you to stay out of Dust Town and the Proving Grounds. We don't need any trouble.\n\n\"We will all meet here at lunch to discuss the next steps. Agreed?\"\n\nWe all agreed, and then headed to bed. I had no idea what time it was, but Mistress Leta assured us that she would wake us in the morning, shortly after dawn. I wondered how she even knew what dawn was, but didn't ask.\n\nWhenever dawn was, it came too soon; I groaned when the knock came, and dressed in a haze, stumbling to the main room for breakfast. I'd given up trying to hide how much I ate when we were on the road to Orzammar, so I dug in to sausage, cheese, and pancakes like the rest of the Wardens.\n\nDuncan's face was scruffy the next morning; I guessed that he'd decided, since he'd been discovered, that he didn't need to hide his identity anymore and could let his beard grow out.\n\nLeliana decided to accompany us as we sought out the political contacts we would need; everyone else elected to go shopping or stay put. Zevran didn't even show for breakfast, and a gleam in Aedan's eyes when Alistair mentioned it made me decide I didn't want to know. He didn't look unhappy, so I would just let it go. 'Don't ask, don't tell' works both ways.\n\nThe Assembly chamber wasn't far from the Warden compound, so we got there early. We were allowed in, after being admonished by the guards to be quiet and just watch. We eased into seats at the back, finding the council in the middle of a protracted discussion on trading rights and taxation with Harrowmont or Bhelen ruling. It was dull, with the exception of brief amusing screaming matches between opposing sides. I felt rather sorry for Steward Bandelore, who kept trying to bring order to the meeting, and failing badly.\n\nThe session broke for the morning, and we were finally able to speak to the Steward. I saw Duncan try to approach Lord Harrowmont, but he was fighting upstream against dwarves who weren't inclined to move, and the Deshyr slipped out. Bandelore confirmed what I already knew: neither would-be King would talk to us without some proof of intent.\n\nRather than go talk to the seconds of both, we conferred privately in an alcove in the assembly chamber. I told them what the game indicated we'd be asked to do for each man -- for Harrowmont, fight in a proving in his name, and for Bhelen, deliver letters that were probably forged to sway votes. The proving was far more honourable, and Duncan thought that Harrowmont might be convinced to back Sereda, assuming we could find her, so the decision was made. Duncan was frustrated at the complete lack of progress, and that he couldn't find some way to remain neutral, but I knew there wasn't a hope for that. In the end, the Grey Wardens would have to choose, as much as none of us wanted that.\n\nWe headed back to the Warden compound and met up with the group for lunch. We decided that Aedan would fight the solo battles in the proving -- as a noble, his opinion might matter more in Orzammar -- and that if group battle were required, Alistair, Anders, and Sten would join him. The rest of us decided to go down to watch, with the exception of Gorim, who needed to avoid notice.\n\nAedan went down to register, and learned that the Proving would begin the next day; we took the rest of the afternoon to go shopping and explore Orzammar. Leli and I tried on jewelry, Aedan, Zev, and Alistair spent their time looking at blades and armour, and Duncan wandered off to talk to Dulin Forender, Harrowmont's second.\n\nWe spent the evening at Tapsters, sipping at dreadful dwarven ale, listening to bawdy drinking songs, and generally having a good time. I saw a red-headed dwarf drinking alone at the back of the tavern; I tried to talk to him, but he was so drunk he could barely speak, and he passed out, flopping face-first onto a table, two minutes into the conversation. I sighed, then got everyone to help me drag the unconscious Oghren back to the compound; Aedan and Alistair dragged him into one of the bathtubs and left him there to prevent him from soiling a bedroom while drunk. He was as pungent as advertised -- it hadn't been obvious in the bar over the smell of dwarven ale and vomit, but it certainly was in the confined space of the bathing chamber. Mistress Leta, unamused, vowed to have him cleaned up the next day, and I figured his hygiene would probably benefit from that. I didn't question her on her methods -- I didn't really want to know -- but she seemed like the sort who would find a way.\n\nOghren was still sleeping it off the next morning; the rest of us had breakfast together, then headed to the Proving. We walked down together, and I was nervous. I knew Provings usually weren't fought to the death, but it didn't make me any happier. It just meant Aedan would be handicapped somewhat in the fights, not allowed to go all out.\n\nAedan, Alistair, Anders and Sten went down to the entry way into the arena, while the rest of us filed into the stands. I sat miserably between Leli and Zevran, both of whom kept patting my hands reassuringly. I wasn't particularly reassured. Zev seemed mostly offended that we were trying to support Harrowmont; I had to assure him, again, that it did not guarantee Harrowmont the throne, before he'd stop whining about it. I couldn't totally disagree -- he would be a weak King. I hoped, yet again, that we might find Sereda in the Deep Roads -- surely anything was better than either Bhelen or Harrowmont.\n\nAfter a couple of matches between warrior-caste dwarves, the announcer stood and invited Aedan to enter. He sauntered in, declaring his support for Harrowmont, and the first match began. I clung to Zev's hand, wishing Alistair was there to comfort me.\n\nSeweryn was no competition for Aedan; he threw some dirt into the dwarf's face when the fight started, and had the dwarf down with his blade to the warrior's neck before his eyes cleared. I started to relax, though the entire concept of Provings still pissed me off.\n\nThe twins, Myaja and Lucjan, were next; Aedan moved so fast he looked blurred, and then he had knocked Lucjan out by slamming the hilt of his sword into the rogue's temple. A few seconds more, and he swung around to take Myaja down with a feint and a dagger to the throat. The dwarves nodded respectfully to him as they limped away.\n\nSister Hanashan's enormous two-handed sword scared the crap out of me, but true to my experience with Sten, it made her slow. Aedan darted behind her when she raised her arms -- clearly she was unused to fighting a rogue -- and tripped her as he passed. She stumbled forward, and he allowed her a mere moment to regain her footing, before grabbing her from behind and sliding his dagger against her throat.\n\nUnlike the previous opponents, she refused to concede, and she twisted, trying to use brute strength to knock him off. The dagger edged into her skin; Aedan, realising what was happening a little too late, released the dagger, but it had already done its damage, and a dark red bloodstain was spreading down the front of the Silent Sister's armour.\n\nHe lowered her to the ground carefully, looking up to call for a healer. Anders came racing through a side door, but didn't even have to get close before shaking his head. Hanashan was dead.\n\nThere was a brief break while attendants came to remove the body; Anders looked over Aedan, healing a couple of bruises while they waited. I knew Aedan would feel sick later, and I could only be glad Zevran would be there for him, even if he wouldn't entirely understand why.\n\nAedan had Alistair join him for the next fight, with Wojech and Velanz; I was worried about Alistair, too, but knowing how well he and Aedan worked together, I was actually less scared. Alistair took on the stout warrior; the arena rang with the sound of clashing shields, but Alistair's height advantage, as well as impressive skill won, and after a couple of bashes, he had Wojech on the ground, surrendering. Aedan managed to sneak behind the rogue, Velanz, when he attempted to flank Alistair. The rogue spun, but not fast enough, and Aedan slashed, scoring a cut deep in his unprotected armpit. The dwarf dropped his sword, but came at Aedan again with just his dagger. Copying my ill-fated move with Sten, Aedan grabbed the dwarf's wrist, bent and twisted his hips, and the injured dwarf went flying. He landed at Alistair's feet, and conceded when the warrior held a sword to his neck.\n\nThe last fight was a bit of a joke. Piotin was the only opponent who presented a challenge, but Anders slowed him a lot with frost, while Aedan and Sten took out his goons. Once that was done, it was only a matter of time before they wore the dwarf down; though he was, by far, the most talented fighter we'd seen, four on one gave a guaranteed outcome. He wouldn't concede, and so Alistair was forced to drop his shield and hold the dwarf down while Aedan held a blade to his throat; the announcer finally called the victory. There were cheers and catcalls from the audience at that; I just shook my head, wondering at the idiocy of preferring death to defeat. When defeat is inevitable, you might as well maintain as much dignity as you can while attempting to keep breathing...\n\nSlightly battered and covered in blood, those who fought went back to the compound to clean up, while I accompanied Duncan to Tapster's to meet Dulin. We arranged to meet Harrowmont after supper, and retired back to the estate ourselves.\n\nI hugged Aedan when we got back, checking him for injuries; he laughed me off, but held the hug as long as I wanted. Alistair, I dragged up to our room and inspected his freshly bathed skin in detail with my hands and my lips.",
        "After our exertions, I had a bath myself, and fell in love with the bathing room. Not only did the runes pour hot water on demand, but metal pipes under the tub allowed it to be drained easily and without a mess. It was almost like having real plumbing, and I vowed to find someone to build me one wherever I ended up settling after the Blight was over.\n\nWhen I came out for supper, I found a sober, pink-skinned, clean, angry, mostly naked dwarf standing in the main hall shouting at Mistress Leta, who just raised an unimpressed eyebrow and otherwise ignored him.\n\n\"Oghren,\" I called, repeating myself twice before I had his attention. \"Stop shouting, would you?\"\n\n\"You want me to stop shouting? I've been taken against my will, held here by this nug-humping harpy, and been assaulted-\"\n\n\"You mean the bath? Well, yeah, sorry about that, but it was necessary. You were rather ripe. Listen, can we talk for a minute? After you get dressed. And then if you want to leave, I'll show you out.\"\n\nHe looked at me angrily. \"By the ass of my ancestors, if you think I'm intimidated by a little bit like you...\"\n\n\"Oghren, it's about Branka.\"\n\nThat shut him up. The rest of the group had come running at the sound of his shouting; seeing that he'd been pacified, Duncan offered him a place at the table for dinner, and Oghren reluctantly accepted and got dressed in some clothing provided by Mistress Leta.\n\nOghren and Gorim exchanged cool nods, and I saw Gorim's lips thin. He's not going to like it when Oghren comes into the Deep Roads...\n\n\"I know you,\" he said to Duncan, around a mouthful, a few minutes later. \"You're the Grey Warden Commander. I saw you here a few years ago.\" Duncan nodded in acknowledgement, then introduced everyone else. \"So when are you going to tell me what this is all about?\"\n\nDuncan gestured to me, and I sighed, wiping my face and reluctantly pushing aside my half-finished plate. \"We're going after Branka, Oghren. Well, sort of. We're going into the Deep Roads because we need a Paragon to break the stalemate between Bhelen and Harrowmont. I know where Branka is, and she is still alive. I figured you might want to come.\"\n\n\"You're going into the Deep Roads? How? They've not even been letting the Legion scouts back in. Without a sodding arse on the throne, no one's been able to get the Council to agree to open the doors.\"\n\n\"I know, but both Bhelen and Harrowmont want Branka found. One of them will get us a pass.\"\n\n\"Wha'dya want with me? How do you know where Branka is? If you know where she is, you don't need anything from me.\"\n\n\"Long story, Oghren. And I'll tell you everything, once you've agreed to come.\"\n\n\"Fine, fine. Ol' Oghren will be there. Always did want to find out what happened to that woman.\"\n\nDuncan spoke. \"Get what you need and come back in the morning, then, Oghren. Sierra can explain while we walk.\"\n\nI rolled my eyes; Duncan refused to believe we'd have to do something else before getting into the Deep Roads. Mind you, it had taken me hours to convince him we'd have to take part in dwarven politics at all, so I shouldn't have been surprised. And who knew -- maybe Duncan would be able to cut through some of Harrowmont's bull. I wouldn't be sad -- while the Carta sort of sucked, fighting through it wasn't something that really appealed to me, I had to admit.\n\nAlistair, Aedan, and I accompanied Duncan to the meeting with Lord Harrowmont. They greeted each other by name, clearly having met before. The stocky dwarf nodded to the rest of us as we were introduced, and we all sat down in his large, luxurious study to talk.\n\nHarrowmont thanked us for our performance in the Proving, gushing over Aedan's remarkable skill. He then began his typical story of woe, which I knew would lead to him implying that if we cleared out the Carta, he would become King. Even had I not known the truth, it was obvious he was lying. Duncan let him get half-way through his explanation before cutting him off.\n\n\"Stop there, Lord Harrowmont. We have known each other a long time, and I think you know I won't be doing your dirty work for you. I have a proposition for you, but I warn you, should you turn me down, I'll not hesitate to present the same opportunity to Prince Bhelen.\"\n\nHarrowmont sputtered, totally offended; I wanted to cheer. Forceful Duncan is awesome.\n\nDuncan waved away his complaints, cutting in. \"I know that Bhelen is likely the least honourable of dwarves. I also know that, regardless of King Endrin's wishes, you do not have the support to maintain the throne, even if you were granted it. We believe there may be another who can satisfy the Assembly's need for Aeducan blood on the throne, but also not bring dishonour to Orzammar.\"\n\n\"There was, old friend, but perhaps you have not heard -- Sereda Aeducan was exiled.\"\n\n\"I am aware. I believe, however, that she yet may live. If that is the case, and it is possible to find her, we both know what needs to be done: she will need the approval of a Paragon.\n\n\"What I propose is this: you give us a pass into the Deep Roads. We find Sereda, if it is possible, and the Paragon Branka. Once we have Branka's backing, Sereda can return to Orzammar and take the throne.\" He lowered his voice. \"I know she respected you, Pyral, and that you cared for her. I know Endrin came to regret sending her into exile. I believe you have the best interests of Orzammar at heart, and I think you can see the potential for disaster that comes with either you or Bhelen ascending the throne. She is the moderate choice, the one who can unite both sides, especially with the explicit backing of the only living Paragon.\"\n\nHarrowmont sat quietly for a few minutes, deep in thought. \"And if you cannot find Sereda?\"\n\nDuncan grimaced. \"I don't know. I would prefer not to choose. I suppose we shall leave it up to the Paragon.\"\n\n\"And if I say no?\"\n\n\"I will lie to Bhelen, tell him I shall find Branka for him, and then look for Sereda anyway. I am certain I can convince him to give us the Deep Roads pass.\"\n\nHarrowmont stood and paced his study, hands clasped behind his back. We waited in silence, exchanging anxious glances. Alistair squeezed my hand.\n\nFinally, Harrowmont sat back down. \"You're a bastard, Duncan of the Grey. But you've got stones, I'll give you that. If you can find Sereda, I'll give her my total backing. If not, you'd better hope that the Paragon chooses me.\" He glowered at Duncan, leaving the 'or else' hanging. I wasn't worried -- I knew that if we chose Bhelen, Harrowmont would be executed before we had the need to worry.\n\nAgreement in hand, we excused ourselves, and Dulin showed us out of Harrowmont's estate. Duncan planned to go to the Shaperate to look for maps of the Deep Roads -- we had Gorim's, but more was always better, and we'd promised Shale we'd try to find Cadash Thaig while we were down there, which didn't show on the maps we had. We didn't want to have to come back through Orzammar again once she recalled the location later.\n\nThe rest of us headed back to the compound. I was worried -- I'd repeatedly done the math, and realised that this had been the longest stretch I'd been on Thedas since I'd first starting coming. I was afraid I'd disappear in the Deep Roads, and I didn't want to do that.\n\nSensing my mood, if not the cause, Alistair brought me to our room, carried me to bed, and made love to me until I was too exhausted to stay awake worrying. I finally passed out sprawled across his muscular chest with a sated smile on my face.\n\nChapter Seventy-Six: Ruthless Necessity\n\nWhen I woke to the sound of electronic equipment beeping, I swore out loud. I should have known better than to think too hard about returning to Earth. I wondered where I'd find myself when I returned -- somewhere alone in the Deep Roads? Left behind in Orzammar? I looked around; it was light outside, and sunlight was streaming through the window in the room I shared with three other hospital beds. All three showed signs of occupation, but no one was around.\n\nI was grateful to find myself dressed in clothing again, and briefly wondered if it was normal to tip a 'guardian' who followed instructions exceptionally well. I sat up and laced on my boots before wandering out into the hallway. I found a nurse sitting at the desk out front; she was surprised to see me, and her face went pale when I walked up to the desk. Her eyes searched my face, and I wondered what on Earth she could be so scared of. I told her I was heading to the gift shop, and she nodded; I didn't ask for more details, not sure I wanted to know until I saw my doctor again.\n\nThe elderly gift shop manager I'd spoken to before was in, fortunately, and had done me an enormous personal favour of going to an electronics store and buying me a solar device charger with an adaptor for my iPhone. He'd tried to order one through the store, but when that hadn't panned out, in a fit of compassion for a coma patient who wasn't allowed to leave the hospital and had no family to speak of, he went to a Best Buy and purchased one. He figured he'd give it to his grandson for his birthday if I never returned for it.\n\nIt was expensive -- much more than the little rechargeable ones I'd bought previously -- but I figured it would be worth it to keep access to my music more permanently. Not that it would help in the Deep Roads...I turned back around and bought another of the smaller, ten dollar chargers as well.\n\nThose things done, I returned to my room and spent the next few hours trying to wish myself back to Thedas. I never saw my doctor, and so dodged the lecture I was sure he'd have given me otherwise.\n\n******\n\nIt must have worked, because I woke up looking at a stone ceiling. I wasn't in a bed, however, and my first thought was to panic -- was I alone somewhere in the Deep Roads?\n\nA gruff voice coming from off to my left reassured me that at least I wasn't alone.\n\n\"Oi, you there. Topsider. What are ya doin down there?\"\n\nI looked over, to see a very old, very jaundiced, casteless dwarf. He had a large brand across his forehead, around one eye, and covering one cheek; he was so wrinkled that I couldn't even guess what shape the dark splotch was meant to be. His teeth were yellow and several were missing as he gave me a creepy grin.\n\n\"Where am I?\"\n\n\"Ah, little too much grog at Tapsters, I'd guess? Yer in Dust Town, sweetness. Pacifically, you're in my alley.\"\n\nThat explains the smell, then. It took significant effort not to correct him and say 'specifically'. I suppressed a smile and sat up.\n\nI was wedged between two stone walls, and the ceiling hung low above; nothing like the fifty or eighty foot ceilings in the commons. I could only barely see the opening to the narrow alley past the filthy dwarf blocking my path.\n\n\"I'm very sorry, Ser. If you move, I'll get out of your alley right away.\"\n\nI worked my way slowly to my feet, trying not to startle him.\n\n\"Oh, now, I'm not so sure I can let the insult stand, skyer. I have a reputation, after all. I might require some sort of...award.\"\n\nI assumed he meant reward. \"I can help with that! Come with me, and when I get to the Grey Wardens, I'm sure they'll be happy to give you some coin for helping me out. What do you say? Give a girl an escort to the Diamond Quarter?\"\n\nHe leaned casually against the wall, evaluating me. And clearly blocking my path. I started to get really nervous. \"Well, yer not a Grey Warden, so why would they want you back?\"\n\n\"My brother is a Grey Warden. He's a human noble, too. He'll pay handsomely for aiding me, I assure you.\"\n\n\"That so.\" He spat, and I twitched, trying to avoid the disgusting gob flying toward my feet. \"Well, in that case, I think I've got someone who'd like to meetcha.\"\n\nHe lunged, suddenly, wrapping one broad, stubby hand around my upper arm. Realising he wasn't going to let me go, I dropped down into the stance Zevran had taught me; I was slightly off balance without armour, but I managed not to fall. I grabbed his wrist, pivoting and shifting my hips, tossing him over my shoulder to land on his face on the stone. I had assumed, given his age, that he'd be down for the count; he surprised me with his agility, springing up underneath me, twisting and sweeping my feet out from under me. I went down with a grunt; unarmed, I was a one trick pony, and when my head stopped spinning from the goose egg I could feel forming on my occiput, I realised he was poised above me, a wicked-looking improvised shiv held threateningly in front of my face.\n\nI put my hands out, carefully, to the side, palms open outward. \"Okay, okay. You got me. No need to shed any blood. I'm worth less to you damaged.\"\n\nHe grabbed my arm again, wrestling me to my feet, the point of the improvised knife never far from my skin. I cursed the stupidity of showing up in Thedas in jeans and a sweater, wishing I'd had armour made on Earth. Mind you, that's one sure way to get a free one-way trip to the psych ward. I huffed in frustration.\n\n\"Alright, who are we going to meet?\"\n\n\"You've never met'er, sweetheart, but her name's Jarvia.\"\n\nMy heart dropped. Why am I even surprised?\n\n**\n\n<br> We walked through dust town, ducking from shadowy corner to shadowy corner, while I frantically looked for an opportunity to escape, or even draw attention to myself. I didn't expect any of the casteless to come to my aid, but if even a rumour of a human being manhandled in Dust Town reached Solona, I figured she might at least come looking. The streets were quiet, though, and the knife against my skin prevented me from anything like escape.\n\nWe reached a plain door, and my captor kicked the door twice, hard. The door was around an inconspicuous corner, hidden from prying eyes; the sound echoed, but no one would be able to see us. We waited a few minutes, and he kicked again, harder this time.\n\nA little window I hadn't noticed slid open, and I could see one suspicious eye looking through at us; given my height, he was staring right at my chest.\n\n\"What?\" the man behind the door demanded.\n\nMy captor shifted us sideways so he could be seen. \"Open up, dimwit. Got someone the boss is gonna wanna meet.\"\n\n\"Where's yer damn key, Tooth?\"\n\n\"Got my hands full, dummy! Lemme in!\"\n\nWith a bit more grumbling, the window slid shut and the door opened. I was pushed roughly through the opening into a dimly lit corridor, not even tall enough for me to stand straight. Was it this bad in game? I'm pretty sure I dragged Shale through here, and she wouldn't fit even on all fours. I bent over slightly, stumbling as I was pushed from behind and the door swung shut. I found myself facing two armed, ugly, casteless dwarves.\n\n\"Move, sweetheart,\" my captor said, pointing down the hall.\n\nI scurried along, hunched over, following the doorman, cursing my height for what had to be the first time ever. I was soon lost -- we passed multiple doorways and took several turns; I couldn't keep track of the way we'd come, and I almost wondered if he'd doubled back on himself a time or two just to confuse me. I knew where I must be -- the Carta hideout in Dust Town should be the only place this insanely large and convoluted. I was proven right when we finally stepped through a door and came to a halt in front of a dark-haired, female casteless I recognised right away -- Jarvia.\n\nThe room was cold, and still dim, though slightly brighter than the hallways had been. The walls, floor, and ceiling were stone, of course, but there was a colourful, thick rug covering much of the floor, and shelves and cupboards lined the walls. There were a few books, but otherwise the shelves were covered in an odd assortment of random stuff. There were weapons -- old and rusty, for the most part -- a few swords, some daggers, and a shield; there were a few small, ornately carved boxes; there was a small collection of utensils that looked to be genuine silver, if the tarnish was anything to go by, as well as a beautiful silver teapot; there was a plate, which I'd guess had been hand painted by an artist of renown, as the work was beautiful, if faded from age; there was a lute and a set of pan pipes; on one shelf, there was even what appeared to be a rolled up tapestry.\n\nAnd then it occurred to me -- they weren't a random collection of strange stuff, they were trophies. Maybe things taken from bodies, maybe things taken from homes as collateral or punishment. They were displayed here as a reminder to anyone who entered what would happen to their things if they got on the Carta's bad side.\n\nJarvia looked up from the desk she was sitting at, her eyes slowly travelling over my still form. I was finally able to stand straight -- the ceiling in what I assumed was her office was almost normal height for a human house -- and I stiffened as she examined me coldly. Finally her eyes turned to the man holding a knife to my side.\n\n\"Explain,\" she barked.\n\nTooth -- a nickname, I assumed -- jumped and stuttered. The doorman had waited outside; we were alone. \"Found this one passed out drunk in my alley, lady Jarvia. Figgered you'd wanna see 'er -- she says her friends got coin. I thought...this would pay my debt, wunnit? She's worth more'n what I owe.\"\n\nI sighed; of course, the dwarf owes a debt to the Carta. I should have known.\n\nJarvia stood, stroking her chin thoughtfully. \"Who're your friends, human?\"\n\nDeciding that looking cowed in front of a predator like Jarvia was only going to get me eaten, I straightened up, threw my shoulders back, and went for cocky competence. \"I travel with the Grey Wardens. I'm sure they'd pay you handsomely for your assistance in ridding me of this...\" I looked at the pathetic man who'd reduced me to this, \"...cretin.\"\n\nJarvia actually laughed; a full-bodied sound accompanied by most unladylike snorting. \"Oh, you I like.\" She turned to Tooth. \"Keep your nose clean, and we're even, Duster.\" She nodded and pointed at the door; he left, closing it behind himself. I got just a glimpse of two, more heavily armed dwarves standing outside the door before it closed.\n\nTrying to maintain my bravado, I sat nonchalantly in a nearby rickety wooden chair. \"So, if you just give me some parchment, I'll write a quick note to my friends. How much coin do you think is a respectable reward?\"\n\nShe blinked at me, and then smirked as she sat back down behind her desk. \"Your friends have gone into the Deep Roads, I'm afraid. No ransom is forthcoming for you.\"\n\nI felt a trickle of pure panic down my spine. Suppressing it, I shifted my weight in what I hoped was a haughty way. \"Not all of them. One of the Wardens, Solona, and some of our companions will still be here, waiting. You could send word to her.\" I just hope Aedan left her some gold!\n\n\"Oh, I'll send word, deary. Don't you worry. But not for coin -- I have plenty of that, and the little a ransom would get me isn't worth my time. However, there is something the Wardens have that I could use -- influence. I'm thinking it won't be hard to convince them to play along. What do you think?\"\n\nI wanted to cry; coin, we could give her, as we could always earn more somehow. I just hoped Solona would be smart enough not to get in too much trouble, especially when she had to know that if she waited a while, I'd disappear again.\n\nJarvia appeared to be waiting for a response; when it seemed I wasn't able to think of one, she moved on. She got up and went to the door, opening it a crack and gesturing. The two burly dwarves standing outside entered. One had dark hair and a small goatee, the other was shaved bald, but had a black, bushy beard. They both had tattoos displayed prominently across their cheeks, and icy expressions. Jarvia walked over to a cupboard against the wall, opening it without allowing anyone to see inside. When she turned around, she held a small lump of metal in her hand; I couldn't make out the details.",
        "\"Hold her.\"\n\nThe two dwarves approached, one on either side. Suddenly being in the chair seemed like a distinct disadvantage. I jumped up, only to be knocked back down as one of the dwarves charged, his shoulder slamming into my gut. I gasped for breath, and flailed as the chair started to fall; it didn't get far, before one dwarf had my arm, wrist and elbow gripped in such a way that he could easily dislocate it if I fought, and the other was practically sitting in my lap, with a hold around my neck and head, immobilizing me further.\n\n\"Now now, deary, don't fight. How will your friends know I tell the truth unless I send them something to recognise you by?\"\n\nShe held up the metal gadget she had, and I gasped as she turned it. It was like a miniature guillotine, obviously designed for a single finger to fit into. She was going to cut off a finger and send it back as proof of life. I almost threw up, but I couldn't struggle, not even a little bit.\n\n\"Like it? Beraht had this made for me right before he died. Wasn't he a sweetheart? I haven't gotten to use it yet.\"\n\n\"Stop!\" I cried. \"Wait, I've got something else. Something you can send as proof you have me. Please, let me show you.\"\n\nJarvia examined my face, before nodding once. The man sitting on me stood, releasing my head, but the other kept my elbow and wrist locked. I reached down into my pocket with my free hand and pulled out the little device charger I'd stored there, the one just like the others I'd brought before. I held it out towards Jarvia, hand shaking.\n\n\"You've never seen one of these before. They are absolutely unique. They come from my homeland. There are only four of these in all of Thedas, and the Wardens have three. They will know. When they see this, they'll know you have me. Please. Take it.\"\n\nThe dwarf holding my other arm let go when Jarvia nodded, plucking the charger from my hand and dropping it into Jarvia's outstretched palm. She inspected it, turning it over, clearly puzzled by the little tube. Finally she looked at me.\n\n\"Where's your homeland? I don't recognise this metal.\"<br>\n\nI nodded, trying to appease her. I sorted through memories, trying to think where I could say I was from without it sounding ridiculous or getting caught on geography I wasn't familiar enough with. \"I come from very far away. North and across the ocean from Tevinter, north of the Qunari homeland.\" I didn't think many in Thedas would know what was up there. I hope. \"I don't actually know what sort of metal that is, but it can't be found here. I brought four of those with me when I came; there are no others in all of Thedas.\"\n\n\"What does it do?\"\n\n\"It...I don't think I could explain it properly. It sort of...harnesses lightning, I suppose. It can be used as a power source.\"\n\n\"By a mage? It's magic?\"\n\n\"I...sort of, yes.\" I cursed myself for not being able to come up with a more coherent lie. I'm just not that creative under pressure!\n\n\"Very well. If this isn't accepted as proof, I suppose I will just have to send them two fingers, instead of one. And if they don't accept my deal, they should be prepared to have all of you delivered to them, one bloody piece at a time.\"\n\nI was truly scared shitless by this point. I was barely suppressing the tears, and I squeezed my legs together -- I needed to pee. I cleared my throat.\n\n\"What do you want them to do? What are you going to do to me now?\"\n\n\"As for what, it doesn't matter to you. They do it and you'll survive; they don't, and we'll make a scavenger hunt of your body parts all over Orzammar. For now,\" she turned to the two dwarves still watching me with cruel eyes, \"put her in the dungeon.\"\n\nI was dragged from the chair by one arm and my hair, making me cry out. I was yanked until I hunched over, and a blindfold was slipped over my head. Then both arms were being held, and I was being half-carried, half-pushed towards the door.\n\n\"And boys -- no funny business, you hear? She's worth less if she's damaged.\"\n\nWe walked for what seemed like a long time, and I wondered just how big the hideout actually was -- though it occurred to me that they could be walking me in circles for all I knew. I had enough trouble keeping up while blind-folded, never mind all scrunched down, and I had no idea where I was when we finally paused. I heard one of my escorts grunt, and then felt a slight breeze as hinges groaned. We continued on, and then I was pushed, roughly -- I stumbled forward, catching myself on a wall with my outstretched hands, just in time to hear the clang of a metal door closing. I ripped off my blindfold and turned to find myself in a little dungeon cell.\n\nThe cell was perhaps four feet, cubed; three walls were solid stone, one of which was wet, and water trickled down from the ceiling to pool along the crease where wall met floor. The fourth wall was, instead, made up of narrowly spaced metal bars set into the floor and ceiling. I couldn't stand up all the way, nor could I have stretched out all the way if I laid down. There was a crude bucket in one corner -- I figured I knew what that was for, and shuddered -- and that was it. No bed, no blankets, no chairs. My jailors were walking away, and went through a heavy wooden door without looking back. The hinges squealed again, and they were gone.\n\nI put my back against one of the dry walls and slid down to sit, my knees up, my face in my hands, and I cried. I was alone, cold, and terrified. I had no idea what Jarvia wanted from the Wardens, but it likely wasn't good. I clenched my hands; the thought of having had one of my fingers cut off made me want to be physically sick. I finally succumbed, crawling over to the vile, dirty bucket and losing the contents of my stomach in a series of heaves. When I was done, I crawled back away from the bucket, curled up again, and let myself sob.\n\nWhen I'd finally cried myself out, a soft voice disturbed my rather depressed thoughts.\n\n\"So what's a human doing in the Carta's dungeon?\"\n\nI looked up, startled, but could see no one. I crawled over to the bars of my cell, pressing my head against the bars as far as it would go.\n\n\"H-hello? Who's there?\"\n\nI saw an arm stick out on my right. \"No one important, that's for sure. Just fellow prisoners.\"\n\n\"My name is Sierra. I'm here because I accidentally ended up in Dust Town and was captured by someone who owed Jarvia coin, and she took me in payment instead. May I ask your name?\"\n\n\"Such manners! I'm Brosca. And the quiet lout on my other side who'll be dead the minute I get out of here is Leske.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-75-76"
}