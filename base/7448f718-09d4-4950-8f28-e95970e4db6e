{
    "title": "Naked Beneath",
    "pages": [
        "Author's note: Welcome to my entry in the Nude Day contest. Nude is an easy theme on an erotica site, after all our characters are always naked. But I decided to take a different angle on nudity and focus on how real life events can strip us bare, remove our normal 'clothing' we show to the world on a daily basis. My wife was very ill last year and this is a true story of how I was taught the expression 'love conquers all' is not just something used to sell greeting cards, but is very real. I went from cynic to believer very quickly and hope I can convince you to believe as well. Lovecraft68\n\nI'll start at the calm before the eventual storm, it was Thursday May seventh of 2014 and my wife and I had just had one of those nights that make you realize how happy you are to be married, how good life can be when you have the right person to share it with.\n\nWe had tickets to see Rob Zombie, not exactly high society, but we love that music. We had both taken that Friday out of work and planning on having a great night took a cab downtown. We ate at her favorite restaurant, had a few drinks and walked hand and hand along the Providence River and to the club.\n\nThe show was fantastic and we both drank like we were at a frat party. Took a cab home and had the kind of sex people here-myself included-often write about. Torrid sex, skirt up, pants down jacking her up against the wall sex. We indulged in each other the way we had drank at the club, with the reckless abandon of a youth we still felt at our age. \n\nAs our festivities made it into the bedroom we continued to go at it like we were performing for a website until our bodies-and the alcohol- brought us back down into reality.\n\nAs we lay there in a tangle of sweaty limbs, the sheets on the floor and clothing everywhere, a cool breeze caressing us through the window my wife mentioned how blessed we were that after fifteen years together we were still this passionate, this crazy for each other and this happy. \n\nBeing a non believer-you could say my beliefs fall under 'playing for the other team'-the word blessed is not one I would use, but having been previously involved in an unhappy marriage, I considered myself damn lucky. \n\nI can honestly say I have never taken my wife for granted, nor her me, and have always appreciated her, but I would later realize that, like many, even though I told myself that I still did take her for granted.\n\nNot in the everyday things we did, but that it would always be that way. We had our share of drama in the previous years and our share of heartache, but always felt it would happen around us, maybe to people we care about and therefore affect us, but it would never happen to us. \n\nThe following morning-closer to noon I should say- we awoke with hangovers, but even that was enjoyable in the sense of recalling memories of younger days, days before responsibility, when fun was the only thing that mattered. I remember saying at least the night was worth feeling that crappy. \n\nNevertheless we continued our celebration with a shower together and lunch at Top of the Bay which overlooks the water on Oakland Beach. Being a proponent of more of the snake that bit you I had a couple of Bloody Mary's and looking over the ocean thought this was only Friday, and early, we had two and a half more days of this before heading back to work and reality. \n\nMy wife then asked if we could go down and sit on the rocks and as we sat there with our feet in the water, she lowered the boom and brought reality crashing down on us. For the previous three months my wife hadn't felt well. A lot of issues with --as unsexy as this is, it's the truth-a lot of sinus type mucus and drainage. \n\nAt first she thought sinus infection, but nothing worked. She was having trouble breathing and would cough and choke like someone who'd chain smoked their entire lives. Nettie pots antibiotics, medication, no results. We even had the house checked for mold as we'd had a flood a few months prior. \n\nSeveral doctors; an allergist, ear nose and throat, pulmonologist...nothing. They ordered chest x-rays and I felt the first hint of nerves for reasons I will mention shortly. You can imagine on that note I was thinking what you may be; lung cancer. When the x-rays came back clear I can't describe the relief we felt, but the issue persisted.\n\nTo a point she had to sleep sitting up and some days her breathing left her with so little stamina she could barely make it through work. All night I would listen to her cough, clear her throat and when she slept her breathing had an unnerving rattle to it. \n\nShe also complained of pressure and pain in her back, said she could feel the mucus there and her doctors thought she was crazy. At this point she was exhausted and frustrated and I was more than a little nervous. \n\nHer doctor ordered another chest x-ray and again nothing. Then my wife saw another ear nose and throat specialist, an old timer who after five minutes says to her, \"Bet you feel it in your back\" My wife, a person who always has her heart on her sleeve, was so relieved to have someone understand she had tears in her eyes.\n\nHe told her to get an MRI and look lower; there was a problem far beyond some mucus. He did not say what, but the first small clutches of actual fear were replacing the 'nerves.' My wife had the MRI and said her doctor would call her with the results.\n\nA week later and after our amazing night, a night I would later realize my wife enjoyed and felt good out of the sheer will to do so, she admitted she had received the results two days ago. They saw something abnormal in both her kidneys. Her doctor was very concerned, mentioned multiple masses, and she already had an appointment with a urologist scheduled for the following Monday. \n\nShe had refrained from telling me so we could enjoy our night which was a delayed celebration of our fourteenth wedding anniversary because she had been sick the actual weekend it fell on. We spent the next three days doing what all couples would do. I'll be okay, we'll be okay, it could be cysts, and it will be cysts, no big deal...\n\nNow here we were sitting in the urologist's office, holding hands and waiting for the verdict. When he explained that my wife had kidney cancer and it was multiple masses and in both kidneys, one word echoed through my mind.\n\nInevitable.\n\nWhy that word and that feeling? Five years prior, her sister Diane had passed away of lung cancer at the age of thirty seven. Diagnosed in May of 2009 she was gone by August, the cancer had been so virulent it had spread to her liver, kidneys, bones, pancreas and stomach. \n\nIt ate the chemo as if it were candy and the doctor had told us and her parents he had never seen anything like it in thirty years of oncology, he referred to it as the hammer of god in its strength. We were there the night she passed; she was in pain even through the morphine, not really in reality anymore, but moaning in agony.\n\nWe knew she would go and my wife sat on the bed with her, holding her in her arms and singing to her. Singing amazing grace and this little light of mine, even a heart breaking rendition of the Ave Maria, talking to her, telling her how she was going home and surrounded by love. Over and over she said the words,\n\n\"Nothing, but love my sister, nothing but love\"\n\nMy wife was watching her sister slip away one ragged breath at a time and there was nothing but tenderness and serenity in her voice, nothing but love. Pure love, unconditional love.\n\nNaked love.\n\nThe entire time my wife never shed a tear, her voice never broke and she was in total control as she rocked her dying sister to her final sleep. My mother in law was in hysterics as was her father and others. People had to come and go from the room, unable to stay, my wife never moved, never stopped her soothing words and would let no one else take her place. \n\nWhen life was at its worst, my wife was at her best. She would not let her sister hear anything but peace and love from her no matter how it was tearing her up inside.\n\nNaked Determination.\n\nI sat by her side my hand over hers, her's over her sisters and she wasn't even trembling. I had never seen such a display of strength, of faith, of love. I considered myself a strong individual; life had made me mentally and physically tough. \n\nThat was me, tough, or so I thought, because I'd be lying if I didn't admit I wanted to bail out of that damn room like a bat out of hell\n\nI could have never done what my wife did. But I had done more than the others just by being able to stay by her side and not come and go like the rest of her family and not be in hysterics. \n\nLike my wife I was able to keep the emotions in check, but then again I wasn't talking and singing....friggin' singing!. Not that any emotion I would have allowed myself wouldn't have been justified, but my wife was being strong for her sister and all I could do was be strong for her.\n\nWhen her sister passed and the commotion had settled down and we were alone I told her how unbelievable she was, how I'd never seen anything like that. Her reply to me was she could only do it because I was there. \n\nShe was drawing her strength and love from our strength and love. My wife was always the rock of her family, sometimes to her detriment, and I was her rock. She said as long as we were together, there would be nothing life could throw our way we couldn't handle.\n\nBut life is a fast ball pitcher and has no problem with throwing at your head and knocking you off the plate. On the day my sister in law was buried my father in law received a phone call from his doctor about some tests; Colon cancer.\n\nFor the next several months we dealt with his treatments as well as fighting what would ultimately be a losing custody battle for her nephews who through a mockery of justice were left in the care of their drug addicted womanizing abusive father. Two months after the battle ended he moved them to Florida, taking them away from my wife and her family. \n\nThe pitches were coming fast, at our heads and in the high nineties, but we held it together. The same theme prevailing; her strong for her family, me strong for her. Yeah, life was pitching, but baby, this motherfucker can hit the fastball. That was my attitude, always has been. The wife relies on faith, love and peace. I thrive on being pissed off and stubbornly refusing to give the satisfaction of saying I can be broken. \n\nMy father in law was a fighter, a tough SOB who once entered local strong man competitions in the seventies and eighties. He beat it in his colon. A year later he beat it in his kidney. Then his esophagus. His liver. One piece at a time. Losing some more quality of life each time, but still had life and my wife was by his side for all of it.\n\nJanuary of 2014, life reared back and threw the final pitch in my father in laws at bat. Brain cancer. His body began to shut down, he could not talk or swallow, they had to put a stint in his brain to keep him alive. Her step mother could not make the call and as she had done for her sister, my wife signed off on his life saying there would be no resuscitation-his wishes. \n\nThey discussed putting him to sleep, giving him enough drugs to slip away comfortably until his body gave up. But he was aware and the doctor-who ended up in some serious hot water over this mess-should have known that. I looked into my father in laws eyes and watched him react to hearing about being put down like a dog.\n\nHe was terrified, but again my wife, this woman whose strength put me to shame, took his hand and told him it was okay. My father in law had always called Jesus his buddy, and she calmly explained his buddy was calling him home and don't worry about her, she would be fine, she had her husband to take care of her, because I always did. The rule was she took care of everyone, I took care of her. \n\nAnother death rattle, another family member laid to rest. During this time my mother in law(her parents divorced when she was in her teens) had undergone two cancer surgeries of her own, though neither life threatening it was just another thing. Apparently the pitcher we were chosen to face in our lifetime had a vendetta against the home team. \n\nInevitable.\n\nHer sister, her father, her mother, it would have been a fairy tale to think my wife would have escaped. Now here we were, it was my wife's turn in the batter's box. The doctor pulled out a dry erase board with a diagram of kidneys on it. \n\nHe began making circles on the right one, showing where the tumors were and how big. One, two, four, five...six masses, ranging from 2 centimeters to six. The six right on the tip next to the renal gland. He then uttered words that were like a kick in the stomach.\n\nThat was the better kidney.\n\nHe starts drawing on the other one. Eight, count them, eight masses, one at seven centimeters and again right at the tip. The doctor then gave us hope. He mentioned most surgeons would err on the side of caution, remove both kidneys and go on dialysis. He, however had trained at the NIH in Maryland and had learned under a doctor named Linehan, the father of kidney sparing surgery.\n\nHe confidently declared he felt he could save 80% of her right kidney. The left would have to go, but a person can live on even a small portion of one kidney. However, this all hinged on had it spread? If the tumor on the renal gland had spread it could go anywhere from there, but usually had one specific destination; the lungs. The sign that it could have? An abundance of mucus and drainage. \n\nAnother MRI of her lungs and several days of waiting during which we did the best we could to remain positive. It didn't spread; a couple of surgeries, cancer free...just a speed bump. She would be fine. She said it, adding in that God would take care of her, her faith would reward her. I had no such comforts, I believe in what I can touch and see and what I'd seen the last few years was not pretty. \n\nThis diagnosis would be devastating to anyone, but to us more so. The last five years had taught us the power of this disease and that a good prognosis was not a guarantee. I kept hearing over and over again my sister in laws doctor, \"Hammer of God\" \"Most vicious he had ever seen\" Her father, three different types of cancer, any idea how rare that is? For one person to have three different types? Her sister died fast, two months, him, he lasted years.\n\nI found myself traveling paths not best traveled; which was worse, a sudden painful end? Or a piece at a time, always hurting, struggling, dying just a little bit each time. But we didn't know yet and it was killing us and as always our opposite personalities were on display. \n\nMy wife talking of faith, God's love, a divine plan and me working out to the point of exhaustion and beating a punching bag until my shoulders hurt too much to be able to lift my arms. \n\nBut that was us, we were Yin and Yan, light and shadow, living proof opposites attract. If the two of us ever filled out those dating site compatibility tests no one would put us together. To understand our relationship and how much my wife means to me, how much I cherish her, you need to know a little about us. \n\nMy wife had the Brady Bunch family, great upbringing, love, support, a good home, great education and brought up with a lot of faith. Even her parent's divorce was amicable and she remained close to both her parents and eventually her step mother. \n\nShe is a certified life coach and motivational speaker, has three books published all of the self help variety, all based on the power of faith and love. She also has two small collections of spiritual poetry. On that note I'll just say that for anyone who has read my other work here? Yeah, yin and yang. We often joke we are going to go on the saints and sinners book tour. \n\nMy wife is one of those people who light up a room when she enters it. Her love shines through her smile and her eyes and she lives to help others. She does it in her career and her own business as a life coach and a practitioner for her church. My wife is at her best helping others through their worst.\n\nMe? The polar opposite. The stereotype bad boy. I grew up hard, an abused child who only survived because the state had mercy on me and pulled me away from the animal that fathered me and put in a good foster home. Very loving environment, great people. Still call them mom, dad and sis today.\n\nBut they couldn't save me from me. Hardcore rage issues and a mean streak a mile wide. I was an animal in my teens and early twenties always looking for the next fight, eventually found one that landed me on a year-long 'vacation'. I married in my early twenties to a woman as fucked up and broken as I was.\n\nSomehow two beautiful daughters came out of that unholy union, but that was about it. After our divorce I did well by my girls, but when I didn't have them with me I was back to being a dick. Drinking too much, some fights and chasing any woman that moved.\n\nThen I met my wife and just like a cheesy romance novel there was something about her and I knew if I wanted this amazing woman my punk ass needed to grow the hell up. My wife filled that void in me that I used to fill with hate and anger and pettiness. \n\nAgain I do not believe in god-even she is yet to convince me-but if I were going to believe in an angel in human flesh my wife was that angel, my green eyed angel. She became the conscious I never had. I would stop and think, \"If I do this she will be so upset...\" Some people have an angel on one shoulder, the devil on the other, until her I had two devils warring to see who could make me do the dumbest thing.\n\nMany times in our marriage I would tell people, \"You don't know my wife, but trust me...you owe her.\" My wife saved me from me and saved my daughters from their twisted bi polar mother because when the time came and I had to help them she was right by my side fighting to get custody of them which we did and she raised them as her own. \n\nBoth went to college and I doubt that would have happened without her influence. Her unconditional love for them was amazing. I know I use that word a lot, but it's how I feel about her. As for us, my oldest daughter described my wife and I the best when she said we were Lady and the Tramp. \n\nMy wife the educated pretty goody two shoes whose friends --and some family members-came right out and asked if she was nuts being with me, the divorced, scruffy bad boy. But we were a perfect fit, she my salvation and me her protector, her sneering grumpy guard dog.\n\nMy wife is my everything, my light in the darkness, my soul mate, my twin flame. Now I lay there at night wondering for how much longer. I lay there listening to that fucking rattle in her breath which now had a whole new meaning to me. \n\nIn my life I had never known fear. Even as a child I was surrounded by hate and violence, emotionally stunted I had no clue what fear was. But now? I went to bed every night with a cold twisting sensation in my stomach and plagued with nightmares. Visions of my wife's wake and funeral.\n\nAn endearing quality of hers is she is a big kid. Still sings the Toys R us theme song. Collects Build a Bears, watches Disney and on occasions will even color. Her favorite build a bear was a black cat named Alica. Dressed it up all the time, would put it on the couch where we watched TV.\n\nIn my nightmare Alicia was in the coffin with her. Got to where I'd walk by the damn thing and shiver. I lay there at night sweating with my heart pounding. I was scared, scared shitless. \n\nNaked Fear.\n\nI asked myself if it came down to it could I do what my wife did for her sister? Could I be that strong? We all want to think we are. We all want to think we can be the hero, the rock, handle it all, but we don't know until the time comes for sure and I've seen many fail in times of crisis. My wife wasn't one of them, but was I? ",
        "The \"whys\" were racing through my head. Not that anyone deserves this, but well, let's be honest, we all know some people who if it were going to happen wouldn't be bad candidates for a painful death, but my wife was not one of them. She was a good person, a gentle soul who wanted to help others and she had this. Was this her faith rewarded, was what my bitterness always brought me back to.\n\nWhen we went back to the doctors we were told the cancer had not metastasized. Despite their size and the fact some of the tumors were estimated to be five years old-yes going back to the year her sister died and dad was diagnosed- they had not spread. She needed surgery right away on the right one to make sure they saved it, and then the left would have to be taken. \n\nStill a serious situation, but it was not in her lungs, the issues there were caused simply by her kidneys no longer being able to function correctly due to the tumors. Sounds bizarre to think we'd be excited about two major surgeries coming up, but in comparison to what we'd seen in the past, this was about the best news we could get. \n\nMy wife's first surgery had a complication. It was supposed to be done robotically, but the position of the tumors coupled with some issues stemming from a previous surgery my wife had on her abdomen years ago caused them to have to open her up, rather than go in with the small robotic machine. \n\nThe doctor had issues and at the end what was supposed to be three small puncture wounds turned into 30 staples. This led to a lot more pain and a longer healing process, but the good news was he had been good on his word; she still had 80% of her kidney.\n\nBut her surgeon was still concerned about taking the left. My wife's cancer was rare, bilateral and a strange strain of it, a break down in the genetic code no one had seen before. That, as I will always tell her, is not the way to be special. But it turned out to benefit us. \n\nHis concern was her body was going to keep producing these tumors. She would be monitored and when they appeared would be allowed to grow for a while to make them easy to remove, but it would take a little of her kidney each time and with her only being in her late thirties, the one kidney might not last and eventually she would be on dialysis. \n\nMany doctors have egos the size of a house and if they couldn't do something, no one could. But this one got on the phone with the NIH and said he had a case for them. The NIH is federally funded and is a research hospital, give them something interesting and they are all over it and my wife's cancer had them excited in a bit of a morbid way. What do I mean by morbid? My wife had to sign a waiver stating they could keep the tumors.\n\nBecause you know, I was going to sell them on e-bay or something.\n\nWe traveled to Maryland, an eight hour drive and stayed for two days of tests and were told by the top Urological surgeon there, one of the best in the world, he would save the same amount of her kidney as the local surgeon had saved of her right and robotically, he guaranteed it. Normally cocky is not an attractive quality, but if this guy was as good as he said, he could brag all he wanted. \n\nIt seemed the pitcher-who at this point I was getting to where I had this visual of a tall Skeleton in a black baseball uniform with red eyes and throwing flaming fastballs-was about to be knocked out of the game. One successful surgery down and a miracle in the works for the second. Relief couldn't begin to describe how we felt, how happy we were.\n\nOn December Fourth we drove back down with the surgery scheduled for the Eighth. The NIH has a beautiful family lodge about a quarter mile from the actual hospital and we had a room until the Eighth, then I had to stay somewhere for a couple of nights, then could get back into the lodge.\n\nThe plan was surgery the eighth, discharge the fifteenth. We'd be home a week and a half before Christmas. Plenty of time for her to rest up enough to be able to enjoy the holiday. A week in the hospital and all this shit would be behind us.\n\nWe were there nineteen days \n\nThe surgery began at 8am and after watching them wheel her into operating room I went and sat in the small waiting room. Many of us have been there and its nerve wracking no matter how common the procedure we worry. \n\nThe NIH is not a typical hospital and there were only six surgeries that day. As the day went by the doctors would come out and find the family and tell them everything was all set. At three I was the only one left in the room and by five pretty much looking to climb the walls.\n\nI didn't have to be alone. A couple of people offered to come down to sit with me. Her mother, my sister, but I said no, I'd be fine. My mother in law would have made me nervous. The woman had lost a daughter to cancer already and her remaining daughter was having surgery number two. \n\nNo, I had decided I would handle this alone. I'd handled everything life had thrown at me so far and many times alone because that was always my choice. I was strong, I was tough, hell, haven't you heard? I was a bad ass. Nothing would ever break me. \n\nNaked arrogance.\n\nFinally at six a nurse came out to say things were going well, they'd removed most the tumors, but it was taking longer than anticipated. The rule was I was only calling a couple of people, our mother's and a couple of friends and they would call everyone else. So I let them know all was well and resumed calmly wearing a hole through the carpet and challenging the Guinness world record for drinking coffee.\n\nAt nine pm, her surgeon came out and said it was over and all was well. The reason it took so long was he had promised her he would do it robotically and even though he could have done it faster had he gone in like the previous surgeon he'd given his word. At that point I was sure ego was involved as well, but he said it was successful, saved 85% of her kidney.\n\nI did not have a room at the lodge that night so slept down the hall from ICU where they were moving her. I had wanted to see her briefly, but they insisted it would be better if I didn't just then and wait until the morning I wasn't happy, but let it go and they said to come in as early as five, she should be awake by then.\n\nI showed up just before that and went into her room. Not sure what difference a few hours would have made because she couldn't have looked any worse. My wife looked as if she had been in a car accident. Her legs were wrapped in those big white pads that squeeze them to keep circulation going and I couldn't count the number of wires and tubes going in and out of her.\n\nHer face looked as if she had ridden an elevator with Ray Rice. Both eyes not only blackened, but so swollen you could barely see her eyelids among the swelling. Her face was badly bloated and she wasn't awake. \n\nThe nurse then dropped the first of what would be several bombs on me. The surgery had gone so long they had pumped close to twenty to pounds of fluid into. That was cause of her facial swelling, but the issue was her throat was so swollen they were afraid to pull the breathing tube out because it might close and she could die. \n\nOf course they cannot have you awake with a breathing tube in you so they were now keeping her unconscious. I asked how long and the answer was until the next day. I wandered out, made my couple of calls and said all was well, this was a precaution. But my gut told me that wasn't true, there was something wrong.\n\nI stayed with her most of the day, trying to not keep looking at her face and telling myself not to get carried away; they had said a day, what was one more day? And she was cancer free. That would be my mantra for myself and others as time went on down there, cancer free. \n\nI had a room at the lodge that night and left her at midnight and did some laundry at one am because I couldn't sleep and there was something about doing that mundane chore that gave me a sense of normalcy. I managed a couple of hours sleep before walking back to the hospital again the next morning to find her still asleep.\n\nAs I had the day before I met with the team of four doctors. Three were the surgical team, the fourth the ICU attendant. They told me they were keeping her out that day and perhaps the next. Her throat was still swollen and the issue was they were trying to drain fluid, but also filling her with necessary ones and were losing the balancing act.\n\nThey also mentioned fear of some other complications and that's when the attendant uttered the words \"Medically induced coma\". And more disturbing expressions like , \"possibly\" and \"not sure\" I sat there listening to them, but in the back of my exhausted mind I envisioned that crazy reaper dressed as a pitcher and two words flowed through my mind.\n\nBatter up.\n\nIn these situations it would be my wife handling this; the questions, the options, sitting there with a notebook writing down every word and grilling the doctors as if she were a homicide detective. It's how she handled her sister and father's situations and her mother's surgeries; my wife was organized and tenacious. She never just sat there and nodded, which was what I was doing.\n\nI quit high school and although I would not consider myself unintelligent, I have a habit of feeling that way in certain situations/ Low self esteem I suppose. I'm sitting here with four doctors, all the best of the best and asking them to keep repeating themselves like I was either deaf or flat out stupid. Stunned and tired was the more likely explanation, but it felt more like the former. \n\nWhen the shit hit the fan in the past, the wife had the plan and I put it into action. She was the mastermind, I was the hired goon. Now here she was unconscious and I was sitting here alone. But that's what I had wanted, wasn't it? \n\nI was the rogue, the lone wolf, the person who needed no one and would get by as I always had. But over the last decade plus that had altered; I needed no one, but my wife, she was my rock, the one person I trusted and the one who truly understood me. Now she was lying there in a coma and I was alone. \n\nI made the calls, stayed calm said it was a speed bump, just a matter of time, all her vitals were good and hey, cancer free? Got that right? Cancer free! I answered their questions vaguely and when it came to \"how are you holding up?' my answer was \"I'm good, I'm always good\"\n\nSomeone would have come down had I asked, but I'd made my bed and I would lie in it. My mind, which at that point I'm sure was firing on half its cylinders at best saw this as the ultimate example of just the two of us. She had always said it didn't matter what life threw at us as long as we were together.\n\nWell not sure we were together at the moment with her in her current state, but that was what I locked into. I took a walk down behind the lodge where they had built a nice little park for families to enjoy and at one in the morning stood there and screamed obscenities into the night air.\n\nAll the what the fucks and how this be happening to her and why did she deserve this and most of all where the fuck was this God she had spent her life talking about as if he cared? When I was done I sat down, took a deep breath and locked in. \n\nMentally I went back to how I'd been in my younger days, when I was a trouble making asshole. Back then I was cold and calculating, nothing upset me, nothing got in my way. I did anything I had to anyway I had to. I was emotionless, a machine with only a goal of self survival. That's what I defaulted back to.\n\nStripped of everything but core survival instincts.\n\nIt was all I had left to cling to was the former me, the one I had buried years ago and for the very person now lying comatose in a hospital bed. She would never want that old me back, but she couldn't very well see me right now, could she?\n\nI had no intent to be crazed or aggressive, just get by' just get through and emotions, the ones she had taught me to feel and express rather than bury were not going to be of help here. I went back to the ICU and spent the rest of the night there and Wednesday morning was told she would not wake up that day.\n\nNor did she wake up Thursday or Friday.\n\nI stayed with her most of the time and twice a day they would lower her meds and let her wake up to ensure she was responsive. Twice a day I watched her open her eyes and I would say her name and she would look at me. \n\nShe had packed Alicia and she was there at the foot of her bed and I showed her to her and she grimaced around the breathing tube in attempt at a smile. Then they would put her back to sleep. I understood why they had to do it, but it seemed cruel. The nurse assured me that she would not really remember anything.\n\nWe'd brought her poetry books and I sat by her bed and read them to her. I was in that self induced numbness and my voice was smooth and calm as I read. Yet in the back of my mind I had a response to each sentence I read. For all her words praising and thanking God my mind sneering \"Really? This is his love, this is his caring? This is faith rewarded?\"\n\nBut I held that snark inside and just read the words, poem after poem, never hesitating. My voice never breaking even though some of them dealt with death and the final reward at the end. It would occur to me later on that I had emulated my wife's strength for her sister in that I spoke calmly and read her own words of faith and love to her despite my turmoil. \n\nOne of the nurses commented that I was an amazing man. I told her not really, I was simply the result of spending time with an incredible woman who deserved no less than the best I could do. I don't think she would have considered me amazing if she knew I was internally mocking every word I read. \n\nAlthough I was helping my wife and doing the right thing, I felt like a hypocrite, these were not my beliefs, but hers. But there comes a time when for those we love we will whore ourselves in any way we need to and if me reading messages I didn't believe would sooth her wherever she was at the time then I was fine with it.\n\nIn the times I wasn't with her I wandered the massive NIH and saw many people who looked like me; bloodshot eyes with dark circles beneath them; moving slowly as if they were in a dream and with a look of shock on their faces. \n\nThe NIH is a place of miracles, the best doctors in the world are there and the Government pays for everything as everyone is there for research. There is no insurance bureaucracy, no billing issues and no rules. The doctors there are top in the field and innovative and do not hold to 'you can't do that' they will try whatever it takes. \n\nSure they may have some ego involved, but all the doctors I dealt with had real compassion and the nurses were straight out of Hollywood with their bedside manners. There was not one person I dealt with that didn't seem as if they truly cared about every one of their patients. We were damned lucky to be there. Got that, lucky, not blessed, lucky damn it.\n\nBut they can't save everyone. Sometimes they lose the war and just try to do their best to ease those final days of the people that are beyond what they can do. At all hours of the night the halls were full of wandering souls. People who looked as if they were survivors of a war. Ghosting around with haunted looks on their faces.\n\nBetween the hospital and the lodge I would hear people talking about their situations. Some telling of how doctors around the world had written off their loved one, but guess what? They were being saved here as they spoke. Talk of miracles and gratefulness, of hope and joy. \n\nBut also stories of loss and failure, of people who were past help and were dying as the person sat there speaking of it. I heard of a four year old who the doctors said probably had no more than a couple of days left. Heard the boy's mother crying as she spoke of it and saw the father sitting there looking as if he'd seen the devil himself. In a way I suppose he had.\n\nI was still calm on the phones, \"She'll wake up when they say it's safe.\" \"She'll be fine.\" \"No, I don't need anyone down here, I got this.\" Of course I had it, I always have it, right? The only hard moment I had on the phone was when my mother in law-who was more upset than everyone else because of her other daughter-gave me the \n\n\"You promised me you'd bring her back to me.\" She then burst into tears and finished with, \"Bring my baby back to me, she's all I have left.\" No pressure people, none at all. \n\nThe next morning a doctor I had never spoken to before announced they were going to do a tachometry on my wife. Put a hole in her throat so they could safely remove the tube. My first response was 'come again?'. He explained that people cannot stay on breathing tubes forever, that all the movies and TV shows were people are on respirators for months or years is Hollywood BS. \n\nThe tube causes infections and my wife was now showing signs of pneumonia so they needed to do this. I asked to speak to the team. All week I'd sat down with these people and discussed what was happening and I had never seen him before and until they all told me this had to be done, the answer was no.\n\nHe said he had operating space already booked for a half hour from now and that was all he could get for the day. At that point I hadn't slept in days and informed him that he could take that space up himself if he thought he was going to slice my wife's throat. I'd been calm, and cool and professional and courteous all week, I'd been a good boy, but my nerves were shot and I'd about had it at this point. \n\nFortunately the ICU attendant had just come on duty and came over and asked what was going on. I explained the latest update and said it was the first I'd heard of it. He backed me saying it was the first he had as well and he wanted to discuss this. \n\nI need to stop and talk about this guy. I'd love to give his name, but obviously cannot, but let's just say he was one of the big heroes of this tale. This guy was \"House\" but with a personality. He was the best of the best. He spoke and even the top doctors sat and listened, they practically fawned over this guy and he had been on my wife's situation like white on rice.\n\nHe pulled me aside and said he wanted to wake her yesterday. He said she was more than ready, but the rest of the team was going by protocol. They were playing it safe, but her infection was real and it was now or never, wake her by doing it naturally and removing the tube or go the route of the trach and having her unable to speak for a week or they could do me a favor and stick a tube in there so she could sound like the fucking Marlboro man.\n\nHe did warn me that if he were wrong and her throat closed they would have to do the trach and there is always the risk they would not be able to do it in time. He said I needed to decide and didn't have much time because this needed to be done.\n\nI remember looking around like a cornered rat wishing to hell there was someone to talk to-but hey, I was the lone wolf right? I looked at my wife still hooked up to enough drugs and IV's to fill the damn room and as I looked back at the doctor I hesitated.\n\nMy mind which I am more than willing to admit was not functioning properly presented a disturbing image to me.\n\nStanding there, looking like Ghost Rider in a baseball uniform and tossing his little flaming ball in and out of his glove and grinning away at me was my personal Reaper. I defaulted to what I'd known my entire life, the only way I handled extreme situations. I got pissed. Want to smirk at me, bitch? I'll take my best swing at you.\n\nI was going to ride the tiger on this guys gut feeling and how strong I knew my wife was. \n\nThey wanted me out of the room for this as a precaution and I refused to leave. They told me to leave again and the doctor-who I refer to as mister cutthroat-mentioned they would have me removed. I said good luck with that and there was no way I was leaving. I had to be there for her. Had to be the first thing she saw when she awoke so she would know she would be okay. ",
        "Again doctor 'house' stepped in and said I could stay as long as I promised to put my back to them when they pulled the tube and if anything happened stayed out of their way. That was fair enough and they once again woke my wife, but this time house explained they needed to remove the tube and asked her to take some deep breaths around it. \n\nShe gagged each time, the sound driving a hot nail into my stomach, but they seemed happy with the way she was doing it and asked me to turn my back. Which I did, but clever me? I was standing in front of a mirror and they hadn't noticed that. \n\nWhy I felt the need to watch this I wasn't sure except that I somehow felt I would be letting her down if I wasn't aware of everything happening to her. I watched them pull the tube and all the nasty crap that came up with it. I then listened to her try to breath and at first she couldn't do anything but gasp.\n\nThey urged her to try and out of the corner of my eyes I saw the respiratory specialist open the feared red box. My wife continued to struggle and my breath caught with hers. I closed my eyes and breathed deeply myself, trying to will it to her. Just breath, baby, just breath with me, breath for me.\n\nIn my mind's eye the pitcher reared back and threw a high hard one, and choking up on my imaginary bat, I swung for the fences. My wife gagged once more then started to breath. It was ragged and irregular, but she was breathing. The red box was closed and they put an oxygen mask on her to help her breath.\n\nThe feeling of relief flowing through me was indescribable. Before I turned around to go to the bed and officially welcome my wife back to the land of the living I envisioned staring at my nemesis the pitcher, but this time as I circled the bases because we'd just knocked one out of the park and as I rounded third I gleefully flipped the fucker off. \n\nTold you, you son of a bitch, I can hit the fastball and so can she. Take a shower, motherfucker because this game is over. \n\nUnfortunately we would be looking at extra innings, a lot of them. \n\nWhen she first awoke my wife was slurring her words and seemed a bit disoriented. That wasn't too concerning, but when she asked where her sister was, I grew concerned. I answered with a question, \"When was the last time you saw her?\" when her answer was just before the surgery I went out and spoke with the doctors.\n\nICU delirium was the answer, a common side effect of days unconscious while having a boatload of narcotics pushed through your body. They said it would last a day or two\n\nTry a week.\n\nMy wife devolved mentally every day. She would have lucid moments, but for the most part was out of her goddamn mind. She screamed at the nurses, fought with them, fought with me. At one point she pulled out the main port for all the IV's which was attached to her jugular. Fortunately she didn't tear the incision. \n\nI told her they would have to tie her down and her response to me was \"You'd like that wouldn't you? Then you could fuck all the nurses you piece of shit.\"\n\nI knew she didn't mean that, or any of the other crap she slung at me, but the look of pure malice in her eyes was painful. Who the hell was this woman? Christ, she reminded me of...me on occasions. \n\nMaking things worse was the fact she claimed she couldn't feel her left leg. The doctors at first thought it was part of her delusion because she could move it. Then 'house' ordered some tests and discovered nerve damage from the position of the long surgery. Could work itself out in days or...months. But she had to get up and moving and she fought too much to do so.\n\nShe literally fought, cracking a nurse in the face and at one point introducing her elbow to my left eye. She would only sleep if sedated, but they fought doing that because it wouldn't help her be alert. They suggested I leave at night and go to the lodge. It wasn't good for me to see her like that and they wanted her alone so there was no one to get mad at.\n\nThat night she called me at three am telling me I had to come get her. The nurses had locked her in a dungeon in the basement. Obviously not, but I still got up and went to her. It did dawn on me even then that somehow out of her mind from drugs and pain and totally delusional....the woman could still use a cell phone. \n\nThe family was getting nervous. I gave them the scoop in my same monotone emotionless voice. Awake, but disoriented. It will pass, she will be fine. No, stay the hell where you are, she won't want anyone seeing her like this. Probably not the brightest most soothing thing to say, but her ass was the only one I cared about at the moment.\n\nHer mother started that she would come down anyway with a couple of my wife's aunts. Now I am not trying to offend or generalize, but if you are Italian (my wife is pure Sicilian) or married to one you know the very definition of drama is an Italian mother. Not just drama, but somehow martyrdom is always involved. \n\nI didn't need the woe is me dog and pony show and the wringing of hands and gnashing of teeth and informed her we were on a military base and only with my permission could someone come see her and no one was getting that. My mother in law is on oxygen, she wouldn't even be able to get around without being pushed in a wheelchair and who would do that? Me of course because I didn't have enough to worry about, but more importantly?\n\nHow the hell could this woman who'd already lost a daughter handle seeing my wife in this state, nope I was the only one who would see this, the perks of being married don't you know. Better or worse were my vows and they were really leaning one way at the moment.\n\nAs one can imagine that conversation was not the greatest, but she did call me back and tell me I was right, but please at least put her on the phone. I'd avoided that because of my wife's constant mentioning of her sister, but the woman deserved to hear her daughter's voice.\n\nFortunately my wife was just a little off and not raving. She did mention her sister and tell her mom how the three of them would all be going out to eat together soon. I think that was enough for my mother in law who told me later on.\n\n\"You're right, I couldn't do it and God bless you for being able to.\"\n\nYeah God had blessed me alright, my cup was truly running right the fuck over.\n\nThe worst event of this time was to be that night. My wife had asked for her favorite Christmas Nightshirt that we had packed. I had mentioned her being a big kid and this defined that. It was a teddy bear in a Santa hat holding a present and said \"Have a Beary Merry Christmas.\" \n\nSilly little thing, cutesy to where I'd roll my eyes at her-and also make fun of her for doing some very dirty things in that shirt- but it defined her through and through, a big sweet kid.\n\nI mentioned it to the nurse who said no because she had too many IV's and wires and it would get in the way. I told her that and the response I received was crying and begging for her shirt, as she held Alicia of course...\n\nOkay, fine. I'd had enough and I found the shirt and helped her into tit. I put it over the johnny and managed to get it around all the wires. It looked ridiculous, but she smiled and seemed happy. The nurse came in and tried to take it off and she went nuts, crying screaming and begging. I told the nurse the fucking thing stayed on, period. \n\nHere comes 'house' again to the rescue. He informed the nurse they were about healing and the mind was a big part of that and if the shirt made her happy, then he was happy. He put it in the notes in the file, shirt stays on. \n\nApparently not everyone read the notes.\n\nI'd taken a walk down to the coffee shop on the first floor to shove something in my stomach. I didn't want to eat, all it did was add to the roiling, burning feeling in my gut, but again survival took over. I had to eat because I had to stay as strong as I could. I ate like a robot, I'll take the special with no care what the hell it was, I just ate it.\n\nI made a couple of calls, 'today's a better day, seems calmer, yup on the mend, sure I'm good.\"\n\nThen I went back into her room to see my wife had somehow gotten out of her bed and was on her knees cowering in a corner and crying. In front of her were the night nurse and an orderly. The orderly was telling her he just wanted to take her shirt off so they could check her port.\n\nMy wife was more irrational than ever, but no longer aggressive. I think I would have been less affected if she were fighting. But all she was doing was crying, curled up in ball and begging to keep her night shirt on. Hugging herself and in tears like a child, desperately clinging to a goddamn nightshirt with a silly bear on it. Totally lost in her own delusion and just trying to hold onto the one thing that for some reason made her feel safe. \n\nShe saw me over his shoulder and called out for me not to let them take her shirt away.\n\nThat stupid fucking shirt. \n\nBut at that moment, I lost it, completely lost it as in I lost track of the next thing I did. One moment I was behind the orderly and nurse the next minute I was in front of my wife and the orderly was getting up from the floor. The nurse would tell me later I simply stepped around him, grabbed his arm and pulled him back, tripping him. \n\nNow there was another orderly coming in and telling me to step away from my wife who was curled into that ball behind me weeping like a little kid. I'd had enough of the whole thing and for a moment lost that emotionless calm I'd immersed myself in. I felt all the pent up frustration flow through me and embraced it.\n\nBefore me were two men and they were flesh and blood and bone. They weren't a disease or a side effect. They were tangible and that meant I could hurt them. I'd mentioned previously I'd had anger issues when I was younger and when I lose it, I never just lose it for the moment, it all comes flying back right down to images of my childhood.\n\nA third man entered and I felt a perverse thrill go through me. Want to pick on a crying woman in a little kids nightshirt? Then step on up, walk right into a buzz saw the likes you've never seen. A lifetime of hate, a mean streak only repressed because of my wife, the woman I was now protecting. Please, oh, please, try to touch her. \n\nNaked rage.\n\nFor the better of all involved the third orderly was an older gentleman who'd seen his share of these situations and told the other two men to get the hell out of the room and for the nurse to get the doctor, let him handle this. \n\nFor a moment the other two men didn't move and one took a step closer. I heard my wife whimper behind me and tensed up, ready to make what would ultimately be a huge mistake. My wife would later tell me that she had a vague memory of that situation and saw the orderlies as shadowy monsters, the ICU delirium in full gear. \n\nBut the way she envisioned me was what she had always referred to me as; her loyal guard dog. Her 'bad doggie' that was there to protect her. She envisioned me as that dog, not a young pup, but an older dog with some grey around the muzzle and some scars from past scuffles. Crouched between her and three 'monsters' with fangs bared ready to go down to my last breath for her.\n\nThe doctor came in and threw everyone, including the nurse, out of the room and sat on bed and told my wife to relax, no one was going to take anything away from her. He came over and gesturing for me to get down on the floor with her, did the same himself and talked to her soothingly then asked if it would be okay for me to get her back in bed. \n\nI was able to pick her up and get her in the bed and sat with her while he gave her something to sleep. I asked how much longer this was going to keep up and he said it should have passed by now. He said give it a day and then they would run some tests. He assured me no one would disturb her and the damn shirt stayed on. That stupid fucking nightshirt. \n\nNow that my adrenalin rush had passed, I went in the other direction and looked at my wife sleeping, curled up with her silly build a bear and replaying her on the floor in a corner. How the hell had we gotten here? This woman who had always been a bastion of strength to all around her reduced to a crying child? \n\nThe rule was we were strong for each other and she was not upholding her end of the deal and I questioned my being able to be strong enough for the two of us. \n\nOn the doctor's recommendation I didn't stay in the room with her, instead I went and slept down the hallway. My cell rang at three am and the night nurse told me to come on in and see my wife. \n\n\"Now what?\" was all that went through my head as I put my shoes on and dragged my ass back into her room. My wife was sitting up and when I entered, smiled at me. A real smile, a \"Hey I know you!\" smile and the first I'd seen from her in two weeks. \n\nIn front of her was a piece of paper with a list-when my wife makes list, she's not playing, she has a plan-the first thing on the list was find her sneakers because she had to start trying to walk. She wasn't one hundred percent lucid, she still drifted a little, but was mostly herself, far better than before. \n\nBut we were in for one more hard knock. Her left leg was damaged. The femoral nerve, biggest in the leg, had been hurt during surgery and it could take months sometimes a year to be back to normal. Her first attempt at walking led to me and a nurse catching her before she hit the floor the next two tries were no better.\n\nBut now that she was in a better frame mentally physical therapy could come in and get to work. The first step was a sling attached to a track in the ceiling so she couldn't fall. The next three days she tried several times going from one end of the room to the other, getting slightly stronger, but nothing overly promising. \n\nMy wife was now aware enough to use words like humbling and upsetting and a few what the fucks? The what the fucks took over when she had severe stomach pain and we found out she had caught a bout of C-Dif that was going around the ICU. What is C-Dif? Think Mexico and don't drink the water, think the worst case of cramps you have ever had then double it. Also think uncontrollable bodily functions.\n\nThe nurses now all had to wear gloves and robes and I was told I might get it if I stayed close to her. Well at this point a bad case of the shits wasn't sending me anywhere and somehow I never did get it. Most likely because as my ex-wife once informed me; I could make a disease miserable. But my wife was in rough shape, a major setback in her trying to get to her feet.\n\nThe night everything reached rock bottom I had helped her sit in a chair then we decided to have her try to walk. She made a few steps and said she had to sit. I sat across from her and right in front of me she went to the bathroom. Pure liquid all over the floor, not really aware she had done it. \n\nShe looked at me and asked me what was wrong and I managed \"Oh, nothing.\" Then she looked down and freaked out. I went to grab some paper towels and that made her even more upset, she didn't want me cleaning up after her. I got the nurse who came in with another person to clean her.\n\nAs I sat in the corner and watched them get her back into the bed and clean her up I stared at the puddle on the floor and at that moment I felt lost. How could I bring her back from this? How the hell could I get her going and pretty much are you fucking kidding me?\n\nI had nothing left in me. Rage wasn't going to work nor was my arrogant assumptions that I always somehow won every fight life tossed my way. My wife was the source of my strength and she was an understandably empty well at this point. As I stared at the floor, something landed next to the bed. \n\nIt was that damned nightshirt, that stupid little bear with shit all over it now. I looked at the thing and slumped in my chair, something about it was the final straw. \n\nI closed my eyes and simply whispered, \"Please.\" I was not praying to a God I never believed in, to me that was always the worst, people with no faith suddenly asking for something because they were desperate.\n\nI do believe in powers beyond us, and I was reaching out to them now, doing something I had never done once in my life, ever. I was begging.\n\nNaked Humility.\n\nBut I was reaching out to someone, something, anything, someone had to help my wife, because I sure as hell couldn't. \n\nI was broken. \n\nWell one the major chess players must have been tuned in because that was when the social worker assigned to my wife came in and spoke to her for a few minutes and my wife admitted she was scared. Scared she wouldn't be able to walk, scared she wouldn't be healthy again, and scared this would never end. \n\nThe social worker called in a recreational therapist and asked her to see my wife, immediately. This was just before five and all the office types always bolted at five, but this woman showed up at five fifteen and was ready to help.\n\nI said I have no spiritual beliefs, but aside from my wife is there was ever an angel in human flesh, it was this woman. By the time she had gotten there my wife had another accident and she quickly helped clean her up, then got her back into the chair and brushed her hair, put it in a ponytail for her. \n\nShe asked if she had a shower yet and I told her the doctors had only had her bathed because she couldn't stand. She asked my wife if she wanted one then asked me if I was fine with not listening to the doctors. I told her do whatever she needed.\n\nShe got my wife back into the sling which reached into the bathroom and with the help of my wife's regular night nurse, showered her, did her hair again and told me to pick out her favorite clothes out of what we had brought. She dressed her right down to putting her shoes on her then showed my wife herself in a mirror and sad, \"Now look at that beautiful woman! She doesn't look like a quitter to me, what do you think?\"\n\nMy wife smiled and told her no, no she wasn't. The woman said she would be back in the morning and they were going to go for a walk together. I followed her out of the room and thanked her. She'd done what at the end of the day seemed the simplest thing; she gave my wife dignity, made her feel human. I think I sounded like an idiot I thanked her so effusively, but it was the first real bright spot we'd had. \n\nShe then asked me how I was doing and I sucked it up, gave her my best bad ass go to hell stare and said, \"Lady, I'm a fucking mess. But whatever you want me to do just say the word.\"\n\nThe next few days were all upside. The C-Dif ran its course and my wife went from a few steps to walking a fair amount, but with on leg damaged she was still not moving much and had to have the sling. They she couldn't leave ICU until she could walk the hall, at least with a walker. She couldn't go anywhere, let alone home which was an eight hour drive still needing a sling.\n\nIt was a week before Christmas and my wife was saying we had to be home by then. I left for a few hours to do laundry and this time be able to report actual good news and progress without lying to the family. \n\nWhen I went back late at night there she was in the hall with three nurses around her in the hallway and walking with just a walker. A nurse was behind her with a chair for when she had to stop. \n\nHer night nurse, a woman who had a sense of humor that kept everyone around her either laughing with her or at her knew my wife loved Disney-they knew this because again, these nurses were amazing and they cared- was singing that stupid song \"I want to see you be brave\" at the top of her lungs as my wife walked. \n\nWithin a few minutes every nurse on the floor along with a few patients and their family were singing along. Most of these nurses didn't even know my wife, never mind the other patients. It was like something out of a damn corny movie, but she was walking.",
        "I'm not emotional. I was raised in the 'only girls and sissies cry' mold, but I'll be damned if I wasn't choking up. But I swallowed the tears back so I could get a few steps in front of her and-blackmail material for anyone who knows me because I am big and tough you know-sang that stupid song with the rest of the nurses. \n\nMy wife walked up to me with a look of not just joy and adoration on her face, but determination. Her beautiful green eyes-the ones that had caught my eye from across a crowded bar fifteen years ago-had that fire in them she was known for. She put her hands on my shoulders, using me to keep her upright and said, \"Baby, we are so going to be home for Christmas.\"\n\nThe next morning at five am when I came back to her room doctor 'house' was being told by the night doctor how my wife had walked and how the nurses had done it. This guy, the best of the best, the top dog in a hospital full of the best in their fields, got up and proceeded to run, yes run around the ICU high fiving every nurse there. \n\nWhen they transferred my wife to a regular wing, we walked the length of the hallway with me behind her with the chair. The day nurses were as good as the night nurses, cheering her on, hugging her wishing us well. \n\nThe head nurse pulled me aside and said in my ear, \"You may not think you had anything to do with this, but you did, she did this for you, she did this because of you. You share the same heart, never forget that.\" I agreed but left out the share was 90/10 in my wife's favor, don't you forget, I'm tough....\n\nMy wife continued to improve, mobility was difficult, but she could get around the room with walker and they felt she was ready to go home. On December Twenty third they sent us on our way with the walker, a wheel chair which they said she may need for the first few weeks and a lot of well wishes-and serious pain meds for the ride.\n\nWe couldn't get out until noon which put us in a position to hit every bit of traffic along the way and adding to that was the fact it was two days until Christmas. My wife was in a lot of pain; sitting was hard on her leg and leaning back in the seat pulled on the small incisions from the operation.\n\nEven with the pills she was in rough shape and after three hours of listening to her moan and wince in pain I suggested we stop at a motel and leave early the next morning. She looked at me and shook her head, \"I'm spending tonight in our bed, next to my husband.\" She gave me a tired smile, \"Get me home, baby.\"\n\nEasier said than done; they had predicted heavy rains and they started when we were still on the Jersey Turnpike. Between the rain and traffic we were at a crawl and I had slept like shit for weeks. I was tired and my nerves were shot. I thought of asking her again about stopping, but she was in bit of a daze by then, between pain and the pain meds she wasn't quite lucid and all I got was another, get me home.\n\nSo I stopped for gas and a couple of cups of the strongest nastiest coffee I could find and said, Okay, let's go home. Normal drive time was eight hours. Eight hours into this trip saw me on the George Washington bridge and five o'clock traffic. \n\nMy eyes were burning and my knuckles white on the wheel. Next to me my wife was in a half sleep half stupor moaning in pain which did nothing to settle my nerves. We cleared the bridge and had an hour of smooth sailing before getting near Connecticut which according to the local news was dead stop most of the way through.\n\nI began to think in terms of common sense and safety. I was too tired for this and no matter what she said I was going to need to stop. Which is when a kind of stupid, no, I'll admit petty thing happened that gave me a second wind. \n\nWe had to stop for her to use the bathroom. It was a driving rain and I had to stand in it while I put the wheelchair together and I was drenched by the time I got her out of the car. She had an umbrella for her, but it didn't really cover me, but that was fine, if anything the rain woke me up.\n\nI wheeled her up the ramp and to the doors which for some reason were not automatic. It was then I got a very good lesson in class and looks can be deceiving. A man had pulled up in a brand new Bentley and was hurrying to the door. \n\nExpensive suit, snotty look on his face, mister money himself. He reached it just before us and opened it to get through and then just let it go in our faces.\n\nThe door hit the edge of the wheelchair causing her some pain. The guy looked back and with a half ass grin said, \"Sorry didn't see you.\" and kept walking. The first thing she did was say \"Don't do anything stupid!\"\n\nBut now I'm trying to figure out how to hold a door open and get her through with one hand. At that moment two young men who looked as if they were trying to look like stereotyped gang bangers came over. The baggy pants, the gang tats up and on their arms and necks. Wearing t-shirts although it was mid-winter.\n\nOne of them yells hold on and grabs the door and the other grabbed the front of her chair to help me get it over the bump, \"There you go ma'am.\" Total respect from someone who looked like nothing but trouble.\n\nI thanked them and took my wife to the bathroom where she had to use the walker to get in. A woman was passing by dressed in scrubs and seeing my wife struggle asked if she wanted a hand? She was a nurse at a local hospital and offered to help her in and wait for her. \n\nStill an unbeliever I had to admit we were running into some good people. As I waited for her Mister Bentley showed up hurrying along the store with a tray containing three coffees. As he approached I heard my wife saying not to be stupid, but hey, if I always listened, I wouldn't be me. \n\nAs he passed me I did the right thing, the mature thing.\n\nI stuck my foot out and tripped him. \n\nRight down in a big splash coffee everywhere, especially all over his nice suit. He jumped up and looked at me and with a smile I said...say it with me now \"Sorry, I didn't see you.\"\n\nHe muttered something I am sure was derogatory, but didn't catch it, instead my attention was drawn to the two 'thugs' who had helped us in the door, both of them laughing and giving me a thumbs up. \n\nNaked pettiness, what can I say? We all can't be perfect. \n\nAs bizarre as it sounded that gave me a second wind, I felt pretty damn good watching mister class fuss over his stained suit. When my wife came out and the woman helped me settle her back into her chair, she caught site of an employee cleaning the coffee and mister manners standing there in line with another tray of coffees in his stained shirt.\n\n\"You were stupid, weren't you?\" She asked.\n\n\"Yup,\" I never lie to my wife. \"That's why you need to be around, to save me from me.\"\n\nAs I pushed her out of the store she looked back again at the asshole and actually waved at him and said, \"Okay, you're off the hook, he deserved it.\" Who says I haven't rubbed off on her?\n\nThe rest of the ride was tedious, three hours to get through Connecticut, an eight hour drive turned into twelve and counting. Despite my little rush of excitement acting like a spiteful child the exhaustion had returned and my eyes were struggling to stay open. Again safety crossed my mind. My wife was saved from cancer and that sure as hell wasn't so she could get hurt in a car accident.\n\nBut she was back in her stupor and every once in a while would just moan the word home. Just as she could use a cell phone in her delirium, the woman could wield Italian guilt while semi conscious. \n\nI kept driving, one mile at a time, an exit at a time. Just drive you stubborn sob, just drive. This I could handle, no emotion required just a test of will. Nothing compared to what we'd gone through down there. \n\nI think I made the rest of the drive on autopilot. I recalled seeing a sign saying Providence exit fifty miles and thinking, jeez in this mess that's another hour at least. Next thing I knew I was cruising up our driveway. Not sure how I got there, but was grateful I'd arrived.\n\nBeing spiritual my wife loves the Carrie Underwood song Jesus Take the Wheel. My sarcastic reply was always if he's driving, I'm bailing out of the car, because that blind faith stuff is not for me. But something got me home, the divine, the not so divine, or subconscious willpower, we were home.\n\nIt was still pouring and I didn't feel like playing with the wheelchair and my wife was too tired and out of it for the walker, so I had her hold the umbrella and carried her into the house. I made a lame joke about carrying her across the threshold for our honeymoon and she responded, \"This is a new start, a whole new beginning.\"\n\nWhen we entered the dogs-that my neighbor was walking and feeding-came running. They're German Shepherds, both in the hundred pound range and had either one jumped on us I was going down.\n\nBut dogs sense things and both stopped in front of us and simply nuzzled my wife as I sat her in her recliner. I said she should sleep downstairs because she was too tired to make it up the long flight of stairs. She looked up at me and said no, she wanted to be in our bed. This would all be over when we were in bed together. \n\nI looked at the long flight of stairs and took a deep breath. I could do this. I picked her up and when we went up the first step I felt my knees shaking. I'm in good shape, not the muscle bound type, but everything I have is where it should be and I have a lot of stamina. But this was after three weeks of barely sleeping, eating like crap and after a fifteen hour drive.\n\nThink safe I thought, put her down in the chair, let her bitch, we were home. As I stood there leaning against the wall debating, one of our dogs ran past me and went to the top step where he turned around and barked. The other took the first step and stayed behind me as if he was going to watch my back. \n\nDogs. I tell people all the time how much better they are than humans. A dog could occasionally shit on your floor, but never on you. I stared at Max who was barking again, thinking, I'm being egged on by a damn dog. But behind him I swore I saw a shadow and knew who it was; my friend, the Skeletor pitcher. \n\nTime to rush the mound. \n\nI dug in and one step at a time made it up the stairs. The entire time Max barked his encouragement and behind me, Rocky only moved one step at a time, never trying to pass, but occasionally bumping my leg with his head as if saying, \"Let's go.\"\n\nMy wife always said the best thing about dogs is not only their loyalty, but they are pure love. There is an expression that says a dog loves their owner more than themselves. As strange as it sounds I did feel that, I felt these two furry members of my family knew the game being played and were trying to help. \n\nEach step my knees protested and my shoulders hurt, but it was one step closer. Just one more step. When I reached the top and turned into the bedroom I imagined looking that prick pitcher in the eye and whispered, \"Fuck you, we're home.\"\n\nI lay my wife down on the bed and watched the dogs. They are never allowed to sleep in our bedroom. I'm the only animal allowed there, but when I said, 'go downstairs' they looked at me, looked at my wife and each lay down on the floor beside her. The message was clear, I wasn't the only 'loyal doggie' and it was their turn to stand watch.\n\nI crawled into the bed and lay next to my wife. The first time we had slept in the same bed in close to a month. We held hands and she was sleeping within seconds. I thought I would be as well, but I lay there thinking something was missing. I then realized what it was.\n\nThe fear was gone.\n\nFor the first time since May there was no clawing feeling in my stomach. There were no more surgeries looming, no more maybes. My wife was home, she was safe and she was cancer free. I closed my eyes and my last thought was a simple one, one that my wife used on a daily basis, but unfortunately few of us do. \n\nGratitude. \n\nTwo days later it was Christmas and we kept it small, just a few people coming over and all bringing some food. One of those visitors I daresay was my favorite. Earlier that year, my oldest daughter had given us a beautiful grandson. \n\nWhen my daughter arrived at our house she didn't even stop to take her coat off, but immediately walked over to where my wife was sitting in her recliner and placed that baby in her arms. The entire time of this ordeal going back to May and even the time in Maryland I had never shed a tear, came close once or twice, but hey, us bad ass types do not cry.\n\nSeeing her hold our grandson, a look of naked love on her face as he cooed away at her while she made silly faces, hit me hard. I slipped out onto the deck away from everyone and sitting down on the cold wood, let it go. Not just tears, but sobbing. Delayed reaction, I guess.\n\nA few minutes later my sister came out on the deck. Aside from my wife no one knows me better than her and she simply sat next to me, put her arm around my shoulders and said, \"You did good little brother.\"\n\nAfter a few minutes of her sitting in silence as I got a grip on myself she smiled and said, \"Tell you what, down the line when we talk about this and your wife is talking about how God got her through, I'm going to tell her that God might have helped you, but give the devil his due, because he got you home.\"\n\nThe next few weeks were on the tougher side as her leg was not working well. She had a lot of home nurses and therapy and I had to do everything for her. Dress her, put her shoes on, shower her. I had no complaints. I was glad to have her here to do it for. \n\nOne day she asked about her favorite nightshirt and I went and got it. I looked at that grinning bear and my first thought was \"Goddamn stupid fucking shirt\" as if it were the bear's fault. But as I stared at it, I began to see it another way. \n\nThat shirt represented a trying time, but it was one we pulled through and at one point the silly shirt was what helped her do that. I decided to see the shirt as a sign of hope and love not despair and pain.\n\nSo I helped her into it and watched her smile like the big kid she was, \"Have a Beary merry Christmas, get it?\" She asked me, like she always did, an inside joke because she knows I roll my eyes at it all the time. \n\nBut this time I got it, yes I did. \n\nSeveral weeks later, about two months after her surgery I went up to bed to find her still awake, with some candles lit and waiting for me. She asked if I were ready to get 'reacquainted' with her. Hard to believe I hadn't thought about sex at all for all that time, but seeing she was offering I had no issues responding, after all I was there to serve, right?\n\nNormally my wife and I indulge in shall we say literotica style sex. We are affectionate and loving in other ways, but sex is usually down and dirty. But she was physically limited and more importantly this felt like a first time of sorts. As she had said when I carried her into the house, a new beginning. \n\nWe made love, something I couldn't recall that we have ever done. But we were slow and sensual and the entire time I felt as if this was more than sex, but a celebration, a rekindling of life, the final sign of normalcy. We both climaxed and as I stay there, looking into her eyes as I softened inside her, we told each other I love you and she said, \"Its officially over\" meaning she was thinking as I was. \n\nI said earlier that I never took my wife for granted. But we are busy people. We have jobs, hers more of a career than mine. We also have other endeavors, my writing and e-bay store and her writing and life coaching which she does from her home office or on the phone.\n\nMost nights we would come home from work, eat then vanish into our respective offices. Then we would meet in the bedroom for a conjugal visit.\n\nNot anymore. Now the rule is eight thirty we meet in the living room. We either watch TV, a movie or sometimes just sit and talk about what we're up to. Sometimes we watch some other things and get frisky, but regardless of what we do, we do it together and every night. Life is too short to bitch about editing and writing and clients and work.\n\nThat time comes and everything stops except us, we sit and enjoy each other's company, we hold hands and just experience us and how we feel about each other and we both love every second of it and us. \n\nNaked Bliss.\n\nThat took place several months ago and my wife still has some issues with her leg, but is back to work and things are great. I realize there are far worse stories than ours. Many stories where people did not pull through. Not a day goes by I don't look at my wife and think about that and not a night goes by when we lay in bed together and I listen to her now normal peaceful breathing I think...\n\nWe are blessed. \n\nJust don't tell my wife I used that word, okay? \n\nAuthor's note: This story has been burning in me for a long time. Despite the great outcome I was still haunted by some of the memories and how things could have easily gone the other way. The theme of this contest inspired me to finally write it, to purge myself of some of those feelings and I want to thank you for allowing me to share it with you. I want to thank all the 'angels' as my wife calls them at the NIH and my family and friends for knowing I had to do this my way and letting me. Most of all I have to thank my wife, the person I was before I met her would have never gotten through that situation; I would have had no reason to. I hope this story inspires you to do as the wise Crosby Stills and Young implored us to do; \"Love the one your with.\" Love them completely, love them without limits, show them that naked love I spoke of. Again thank you for reading. Lovecraft68"
    ],
    "authorname": "lovecraft68",
    "tags": [
        "true love",
        "romance",
        "inspiration",
        "gratitude",
        "love victorious",
        "nude day contest",
        "power of love",
        "healing"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/naked-beneath"
}