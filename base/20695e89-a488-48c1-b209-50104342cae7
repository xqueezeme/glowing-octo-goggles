{
    "title": "Camp True Touch",
    "pages": [
        "**This story was a last-minute request. It's an emotional journey of learning to overcome anxiety and learning to love yourself no matter what you look like. I dedicate 'Camp True Touch' to my friend Charles. He provided the original story concept. I hope everyone enjoys it!\n\n-Chloe**\n\nPart 1. The Front Seat\n\nCory's Perspective:\n\nMy psychiatrist, Doctor Betty Miles, suggested I visit Camp True Touch and do a little Nude Touch Therapy to help me overcome my anxiety. She claims it could enrich my life, get me out of my boring daily routine, and maybe inspire me to enroll in college. The thing is, I like boring routines. They're safe and comfortable when everything around you could hurt you. My name is Cory, and I've been blind since birth. People think I simply live in darkness, but on the contrary, I experience the world from a very complex perspective. Sound, touch, smell, and taste enrich my mind and bring me pleasure in indescribable ways. Did you know the morning, afternoon, evening, and night have vastly different sounds, smells, and feelings? I have vivid impressions of each part of the day. Thanks to my unique position in a complicated world, most people struggle to understand me. How do you comfort a depressed, lonely, complicated twenty-two-year-old blind man that lives with his parents? Doctor Betty thinks she knows how, and maybe she's right. That's why I decided to give this potentially uncomfortable program a try. When I'm depressed, life gets stale. If Nude Touch Therapy can awaken my senses again, then it's worth the anxiety and discomfort.\n\nHow am I remotely comfortable with the concept of a nudist camp, you ask? Well, the first obvious reason is my lack of vision. I don't get to enjoy what everyone wears anyway, so I don't care what they wear or what they look like. The only reason I wear clothes myself is for warmth, comfort, and skin protection. Secondly, my awesome parents took me to their favorite nudist camp every summer while growing up. I enjoyed nature in the buff just as much as they did, and they were there to help me deal with everything else. My father's declining health ended those fun trips. We haven't been back in five years now. My social life revolves around my parents. I'm extremely anxious without them. I also know they won't be around forever. That thought is my driving force to overcome my anxiety. So, after a lot of paperwork, questionnaires, waivers, and packing, Doctor Betty personally volunteered to drive another anxious patient and me to Camp True Touch the first week of June.\n\nJenifer (another anxious patient under Doctor Betty's care) was in the backseat while I sat in front with the good doctor. Betty was trying to encourage conversation in the car, but she was working with two very difficult and extremely shy patients. My first impression of Jenifer was her smell. It was easy to separate her scent apart from Doctor Betty. I had experienced my psychiatrist's familiar smell for years and could partially ignore her deodorant and perfume. Jenifer smelled like a warm summer day in the woods, and I honestly loved it, but it wasn't overly unique. Some people, especially women, often smelled incredibly good. I had experienced those smells often while camping with my parents in the nudist colony. I would ask my mom to describe who was giving off the lovely scents, and it was usually younger women. I knew I was experiencing pheromones at that point, and Jenifer had good ones, but I couldn't start a conversation with that topic. It was too embarrassing. My mother had often teased me when I blushed, so I knew the sighted could tell when I was embarrassed. I never took offense to my mother's playful teasing, but it opened up another door of anxiety I didn't need.\n\n\"Oh, what a gorgeous loblolly pine,\" whispered an enchanting voice from the back seat.\n\nIt was the first thing Jenifer said since we started the one-hour drive to Camp True Touch, and the sound of her voice made the hairs on my neck stand up a little.\n\n\"Wow, it's huge! It looks like a giant,\" Betty added, jumping right into the conversation. \"Do you like trees, Jenifer?\" she pressed.\n\n\"I do. I brought my field guide so I can identify the ones around the cabin,\" she whispered.\n\nHer speaking voice was low even to my sensitive ears. I often spoke softly to avoid unwanted attention. I thought it was sweet that she did it too. Then I wondered why she did it. That was another topic I wouldn't dare bring up. Starting a conversation with a stranger was absurdly difficult.\n\n\"Wonderful, perhaps you can take Cory with you when you go out. You'll be in the cabin connected to his, so you'll be close to someone you've met already,\" Betty explained.\n\nMy stomach sank at that revelation. I didn't like being randomly offered up for companionship.\n\n\"Uh, Betty, I wouldn't be much help identifying trees,\" I noted.\n\n\"That's not true. You have a keen sense of touch. I bet you could identify every tree in the forest just by touching the bark after Jenifer tells you what it is. I would seriously put money on it.\"\n\nI smiled at Betty's enthusiasm. She was a smart and crafty woman. I wouldn't tolerate her prying into my emotions otherwise, and I couldn't turn down an easy challenge.\n\n\"Okay, you win. I accept the challenge if Jenifer is willing to tolerate my presence on one of her outings,\" I offered.\n\nI really liked saying her name, and I was excited to be participating in the conversation, but the silence from the backseat left me nervous. I just put Jenifer on the spot like an inconsiderate dolt. I hated it when my parents did that to me, and I turned around and did it to someone else.\n\n\"Okay,\" whispered her pleasant voice from the backseat, melting my anxiety for the moment and making me smile, but my anxiety doubled when I realize I had just committed myself to a naked date. Doctor Betty was a crafty woman indeed.\n\nPart 2. The Back Seat\n\nJenifer's Perspective:\n\nThe moment I got into Doctor Betty's car, I wanted to call the whole thing off. It happened every time I tried to do anything new that involved people seeing me. I closed my eyes and took a few deep breaths, attempting to calm the anxiety before it could turn my stomach sick. I knew Betty was watching me in the rearview mirror, calculating when I would lose my breakfast to the floorboard. My anxiety medication would have been helpful at that moment, but Betty took me off of it a month before my trip to Camp True Touch. She didn't want me numb for my first nudist experience. God, why did I agree to try Nude Touch Therapy? What in hell convinced me to say yes? I was in a terrible car accident when I was twelve. It left me disfigured. The right side of my body had been burned, including parts of my face and hair. My right breast was gone, and most of my right ear was destroyed. I've had countless reconstructive surgeries to smooth out the damage, and I had more surgeries scheduled in the future. I knew I looked shocking, and I hated to subject people to my presence when I didn't have to. My self-loathing was interrupted by the most beautiful pine tree I had ever seen. I spotted it out of the car window as we drove over a hill.\n\n\"Oh, what a gorgeous loblolly pine,\" I whispered in amazement.\n\nIt was absolutely massive. It towered over the forest like an ancient king. That's why I had agreed to the therapy. My love of nature encouraged my boldness, not to mention the high success rate of the program. My mom also offered to buy me a car if I could last an entire week at the camp. She was desperate to see my mood improve.\n\n\"Wow, it's huge! It looks like a giant,\" Betty added, reminding me that I had spoken out loud. \"Do you like trees, Jenifer?\"\n\n\"I do. I brought my field guide so I can identify the ones around the cabin,\" I whispered while looking between Betty and Cory in the front seat.\n\nCory was blind and quiet like me, apparently. He had dark hair that was short and a little messy. Betty didn't tell me much about him. She simply said he struggled with anxiety as I do. I didn't understand how. He looked pretty normal, but I couldn't judge what it was like to be blind. I assumed it had to be scary for him.\n\n\"Wonderful, perhaps you can take Cory with you when you go out. You'll be in the cabin connected to his, so you'll be close to someone you've met already,\" Betty explained.\n\nMy anxiety flared up after that suggestion. Socializing made me extremely nervous.\n\n\"Uh, Betty,\" Cory began, sounding insecure, \"I wouldn't be much help identifying trees.\"\n\n\"That's not true. You have a keen sense of touch. I bet you could identify every tree in the forest just by touching the bark after Jenifer tells you what it is. I would seriously put money on it.\"\n\nI watched the side of Cory's face as he smiled at her comment. He kept his head and eyes down almost constantly. I suddenly felt sad for him. He couldn't see all the beautiful trees around us.\n\n\"Okay, you win,\" he said a second later. \"I accept the challenge if Jenifer is willing to tolerate my presence on one of her outings.\"\n\nI was stunned he had agreed to it. The thought of spending time with a stranger scared me, but Cory was an exception. I didn't have to worry about him staring at me in disgust.\n\n\"Okay,\" I agreed, hoping I wouldn't regret it later, but I instantly did. I hated making commitments that required me to socialize.\n\nWe arrived at the cabins around noon. Betty helped us settle in and answered all our questions. Our duplex cabin was on the west side of the grounds and fairly isolated from the rest of the visitors. A gorgeous valley lay between the oaks and pines that allowed a view of the sunset. A small pond shaded by a willow tree was less than a hundred feet from our front doors. The simple cabin rooms had everything a person would need to be comfortable alone for extended periods of time. There was a bathroom with a shower and tub and a mini-kitchen with a refrigerator and microwave. Our meals would be delivered, so we didn't have to worry about starving. Betty helped Cory familiarize himself with his room and the yard, then she gave us each a digital tablet that would guide us through our Nude Touch Therapy sessions. The sessions started early the next morning, giving me plenty of time to dread every aspect of it.\n\nPart 3. Camp True Touch\n\nCory's Perspective:\n\nAfter a lousy night's sleep in my new cabin apartment, an aromatic breakfast arrived at my door. A BLT sandwich, buttery hash browns, fresh fruit, and some hot coffee added flavor to my morning. Then I stepped onto the front porch to enjoy the cool air on my naked skin. I had missed that wonderful sensation. I relaxed in the cushy patio chair to feel, hear, and smell the waking world since it was my favorite time of day. The 'dawn chorus' of the birds had begun. It was a phenomenon that I was keenly aware of. Birds sing throughout the day, but in the cool stillness of the morning, their songs are louder and more energetic. Sound travels better in cool temperatures and the calm air currents of dawn. The birds and I enjoyed it together.\n\nMy nude basking was interrupted by the soft squeak of a door hinge to my right. Jenifer was awake and stepping onto her side of the porch to observe the morning. I gulped nervously and listened to her movements. The thought of her seeing me naked unsettled me more than I anticipated. In the past, being nude in front of women didn't bother me at all. Why was it different with Jenifer?\n\nI heard her soft steps hurry back into her cabin, and I knew she had observed me. I suddenly laughed. Either my skinny body scared her off, or she was instinctively retreating from my presence because she forgot I was blind. I assumed she was nude by that point. It was against camp rules to wear clothes once you were officially settled in, and no one else was supposed to be close enough to observe us. I figured I would be considerate and ask if she was alright.\n\n\"Uh, Jenifer, is everything alright?\" I called, knowing she could hear me through the screen door. She hadn't closed her inner door after her hasty retreat.\n\n\"Um, yes. I'm okay,\" she called softly.\n\nHer raised voice sounded like a normal speaking voice. Her quiet meekness made me smile again. My new neighbor was apparently a mouse.\n\n\"You can join me if you want,\" I offered, even though I enjoyed my solitude. I didn't want to be rude to a neighbor. My parents taught me better than that.\n\n\"Oh, right... thanks,\" she sighed and took a deep breath.\n\nI heard the door handle shuffle as she placed her hand on it. She was taking her time, hyping herself up to step onto the porch again. The poor girl was seriously nervous about being naked in a blind man's presence, and it broke my heart a little. Her anxiety was apparently ten times worse than mine. I listened as she took another deep breath and pushed the door open. She stepped onto the porch and hesitated. I knew she was observing me again, but I didn't feel embarrassed anymore. I was anxious for her to overcome her fear. I wanted her to be comfortable so she could enjoy the morning too. It would upset me for the rest of the day, knowing she was upset. My excess of empathy had sprung to the surface, and I was determined to put Jenifer at ease if I could. That was my first challenge of the morning.\n\n\"Thanks for joining me. I was feeling a bit lonely. Would you like to sit down?\" I offered as I patted the cushioned seat that was attached to mine.\n\nI had discovered the double chairs yesterday evening. Betty helped me build a touch map of my surroundings before she left. I took my cane all over my new apartment, the porch, most of the yard, and around the pond twice to get a feel for things.\n\n\"Sure, thank you,\" Jenifer whispered and carefully sat down.\n\nI could tell she was a small person by how little her weight disturbed the double chairs. Had my dad sat down, he would have knocked the wicker chairs six inches back in his wake. He was a hefty guy. I smiled as I thought about my dad. I missed him and my mom already, but I lost my train of thought when Jenifer's amazing smell filled my nostrils. Her scent was ten times better without Doctor Betty's perfume overpowering it.\n\n\"So, what trees are around us? I know there's a willow tree by the pond. I got tangled in its tendrils yesterday.\"\n\nShe chuckled softly and took a deep breath. It sounded more relaxed.\n\n\"I see pines, oaks, maples, hickories, blackgum, sweetgum, wild cherry, a dogwood, and some cherry blossom trees on the edge of the lawn.\"\n\n\"Wow, that's a lot. Um, which is your favorite?\"\n\n\"The water oak,\" she said thoughtfully.\n\nThe way she said it made me think she was talking about an old friend, not a tree.\n\n\"Why is that tree your favorite?\" I asked.\n\n\"Um, I love climbing them. There were two big water oaks in my backyard when I was a kid. The one to the right of the back porch was the biggest and easiest to climb. If my parents couldn't find me, they knew to look in that tree. I spent countless hours climbing and sitting in the branches. I built a platform between its biggest bows one summer so I could lay down and stare at the clouds through the canopy. I loved hearing and feeling the wind blow through the leaves around me. It was almost magical.\"\n\nMy heart felt light as I listened to her reflect on the fond memories. The idea of climbing a tree was scary to me, but hearing her talk about it made me want to try it.\n\n\"I love the sound of wind blowing through leaves. It's more enchanting than the roar of the ocean. Don't get me wrong, they're both pretty amazing sounds, but I prefer to sit under a tree and smell the forest. It smells alive.\"\n\n\"How so?\" she asked curiously.\n\n\"Well, I can smell the earth breathing,\" I blurted before I realized how dumb that sounded.\n\n\"You can? What does that smell like? How does the earth breathe?\" she asked in fascination.\n\n\"Um, I think the smell is water transpiration from plants. On hot summer days, when the air is still, I can walk near a big tree and the most amazing scent will be in the air. It smells like life itself. I just want to stand there and inhale for hours. It doesn't always happen. The conditions have to be just right. I researched what might cause the smell, and transpiration seemed logical.\"\n\n\"I think I know what you're talking about. I've smelled something like that before in the summer. I didn't realize it was plant breath. We'll have to try and find the smell when we're exploring trees later,\" she suggested.\n\n\"Cool.\"\n\nWe were making plans to hang out together, and I liked it. It felt natural. How did that happen so fast? Suddenly, chiming noises within our cabins alerted us to our first therapy session. We each had a therapy tablet gifted to us by Betty.\n\n\"Hmm, I didn't realize our sessions would start this early. I guess I'll talk to you later, Jenifer. Good luck,\" I said and climbed out of my comfy chair.\n\n\"Good luck to you too, Cory. Do you need help with anything?\" she offered before I could escape.\n\n\"I'm good. Betty helped me discover the lay of the land. I'm pretty capable once I know all the trip hazards. Thanks for asking.\"\n\n\"You're welcome. I'll talk to you later,\" she said and escaped back into her cabin.\n\nI searched my backpack and found my wireless earbud. With that in my ear, no one else could hear my tablet instructions.\n\n\"Good morning, Cory,\" spoke the female electronic voice. It reminded me of Betty. \"Collect your cane and report to the blanket under the willow tree by the pond. Once you have located your therapy partner there, tap the screen twice for your next instruction.\"\n\n\"That's easy enough,\" I sighed and grabbed my cane.\n\nI casually strolled across the lawn towards the pond, counting my steps and swiping the grass. The willow greeted me with gentle strokes to my face as I stepped under its canopy and tapped the blanket. Then I smelled Jenifer. She was my touch therapy partner. I smiled big and shook my head. I felt like a complete idiot for not realizing Betty had planned that all along. She never even hinted at it. She spoke like we would be meeting strangers.\n\n\"Hello again, Jenifer,\" I chuckled.\n\n\"Hey, Cory. How did you know I was here?\" she asked softly.\n\n\"Your smell,\" I confessed and carefully sat on the edge of the blanket, placing my tablet beside my leg.\n\n\"My smell?\" she asked in surprise. \"Is it... bad?\"\n\n\"Not at all. You smell wonderful.\"\n\nI felt my face burning after that comment. I knew I was blushing, and that realization reawakened nervous fluttering in my stomach.\n\n\"Oh, thank you,\" she whispered.\n\n\"Well... let's get started,\" I announced and tapped my tablet screen twice. \"Let's see... the electronic voice says to sit and face my partner and don't speak while we hold our hands together for two minutes.\"\n\n\"Mine said that too,\" Jenifer agreed.\n\n\"It said it? You didn't read it?\" I asked in confusion.\n\n\"I'm wearing an earbud like you. I'm also blindfolded. I was instructed to do that after I placed the blanket on the grass,\" she explained.\n\n\"Oh... why?\" I asked in confusion.\n\n\"The instructions said it will give us a similar therapy experience.\"\n\n\"Well heck, that makes sense,\" I said in approval. It was also a big relief. \"Shall we begin?\" I asked and held up my hands.\n\n\"Okay,\" she said softly.\n\nI listened as she shuffled on the blanket. She stopped when her knee bumped into mine. I smiled from the accidental touch. She quickly readjusted so our knees wouldn't touch. She was still very close. I could feel her warmth and smell her delicious scent. Then she fumbled for my hands and bumped my forearms instead. She was a clumsy blind person. I'm glad she couldn't see the silly grin on my face. Once we had our palms together. I told the tablet to start the timer. Then we sat in peaceful silence. The first thing I noticed was how incredibly soft and warm her small hands were. Each hand felt different. The skin on her right hand felt extremely smooth and had unfamiliar ridges. Her left hand felt normal and a little sweaty like mine. Her breathing was a comforting sound, and it allowed me to smell her sweet breath. I was beginning to think she couldn't smell bad if she tried.",
        "The chime sounded, announcing the end of our hand-holding. Then we were instructed to place our right hands on the side of our partner's neck. I slowly touched her left arm and used it as a guide to finding my way to her neck. I felt her shudder from my touch. I feared I had tickled her. Once I got my hand against the warm skin of her neck, she used my technique to get her right hand to my neck. I understood why she shuddered as her soft fingers caressed my arm. It tickled and felt wonderful at the same time. Her smooth, warm hand felt comforting against my neck. I smiled and told the timer to start, then we both took deep breaths and let them out slowly. I could feel her body move as she inhaled and exhaled. Then I felt her pulse against my hand. Comforting was the best way to describe the situation.\n\nThe timer chimed, and we slowly withdrew our hands. Our next task was to place our palms against each other's cheeks, take deep breaths, and hold our partner's face for one minute. I used her right arm to find my way to her face. It felt different from her left arm. The skin was exceptionally smooth except for raised lumps at certain points. She shuddered again, and it made me feel warm all over. The exercises were extremely intimate in spite of their simplicity. As I placed my palms against her cheeks, I noticed the right cheek was very smooth with unfamiliar ridges while the left cheek felt normal. She used my arms to feel her way to my face, and I sighed when she pressed her warm hands against my cheeks. It felt wonderful to have my face cradled. I told the timer to start, and we took deep breaths. I could have fallen asleep under her comforting touch. I had no idea it could be so relaxing.\n\nI was disappointed to lose her touch after the timer chimed, but the next step made up for it. We were instructed to sit back to back and talk about our favorite foods, smells, music, animals, and so on. We shuffled around and slowly leaned against each other. I may have moaned softly from the feel of her warm skin against mine. Her hair brushed the back of my neck, and I could tell she had a short hairstyle. To be honest, I didn't care if she was bald, but I still wanted to know more about her.\n\nPart 4. Nude Touch Therapy\n\nJenifer's perspective:\n\nMy heart and stomach were fluttering as I sat on the blanket with Cory under the willow tree. We were holding our palms together for two minutes, and I felt sick to my stomach. I knew he could feel the scars from the skin grafts and the strange texture of my right hand. I hated how weird it felt compared to my left hand. I wished I could see if he was grimacing or not. I had been thankful for the blindfold at first, but now I wanted to see his expressions.\n\nAfter the first minute passed, my stomach calmed a little. I had gotten over the initial shock of being touched by a stranger. I had to remind myself that Cory wasn't really a stranger at that point. He was a new acquaintance that I liked. I felt calm around him once I got used to him, and I never had to worry about him staring at my scars. That thought made me feel guilty. It felt like I was taking advantage of his disability. I had to remind myself that it was Betty that put us together, not me.\n\nOur next step required us to touch our partner's neck. I was surprised when I felt Cory's soft fingertips trailing up my right arm in search of my neck. I shuddered at the strange sensation. The simple caress felt very intimate. It left my skin tingling afterward, even though it was completely innocent. Cory had to do it that way. He saw the world with his hands. Randomly reaching towards me could end in many embarrassing ways. He was teaching me how to gracefully find his neck while blindfolded. I enjoyed his hand against my neck. It felt comforting.\n\nMy anxiety returned when we were ordered to touch our partner's face. My integrity slipped at that point, and I gently readjusted my blindfold, allowing me to peek under it. I had no intention of ogling his nakedness. I desperately needed to see his face when he touched mine. He used my arms again to find my cheeks. I gulped as he gently held my face between his palms. My heart sputtered a little when he smiled. It was a look of happy contentment, not a grimace of disgust. My throat tightened as I gazed into his bright gray eyes. They never focused on anything, but they still expressed emotion. I quickly trailed my fingers along his arm like he did to me, then I placed my palms against his cheeks, and his smile grew more content. He was enjoying my touch, and I loved it.\n\nOur last orders were to sit back to back and talk about things we liked. The conversation was easy and natural, and everything Cory said was rich with detail. I loved learning how he experienced and enjoyed the world. I was disappointed when the tablet chimed and announced the end of our session.\n\n\"Well darn,\" Cory sighed. \"I was enjoying myself. Will you talk with me a little longer?\" he asked, preventing me from scooting away.\n\n\"I... would love to.\"\n\nWe talked for another hour. We eventually laid down on the blanket with our arms touching to continue our conversation. Cory confessed to never experiencing the sky. Clouds, stars, the moon, and the sun were a mystery to him, but he had complex concepts of what they were like.\n\n\"How do you imagine clouds?\" I asked.\n\n\"Well, when I was four, my mom held pillow stuffing over my head and let me reach up and feel the pretend clouds. When I think of clouds, that's what I imagine. Then she confused me more by misting my face with a spray bottle and telling me that's what clouds feel like. The concept makes sense to me, but it's still confusing.\"\n\n\"Wow, I can't wrap my mind around imagining a cloud without seeing it. Your world is fascinating.\"\n\n\"Thanks, you're fascinating too.\"\n\nI chuckled at his remark, but then I wondered what he meant by it.\n\n\"Wait, how am I fascinating?\" I asked.\n\nMy anxiety was threatening to flare up again. He was silent for a minute, making me extra nervous. I knew where his thoughts had gone.\n\n\"Jenifer, don't take this the wrong way, but I love how your skin feels.\"\n\nHis answer floored me. He wasn't mocking me or joking about me, he simply loved the texture of my skin, and that clashed with everything I thought about myself.\n\n\"Seriously?\" I whispered. My throat was suddenly tight.\n\n\"Seriously. Why would you think I wasn't serious?\"\n\n\"Because... I hate my skin. I haven't been comfortable in it in over ten years.\"\n\nHe was silent for a minute after that.\n\n\"I'm sorry. I was just being honest. I wanted to avoid the subject because I sensed your unease about it. But I wanted you to know that all of your skin feels wonderful to me. It smells really good too.\"\n\nMy face grew hot after that confession, and my heart was suddenly pounding. A mix of joy and embarrassment was threatening to make my eyes leak.\n\n\"Thank you,\" I whispered.\n\nWe lay there in awkward silence for another minute. Then a duck family with an army of baby chicks waddled past our blanket on their journey to the pond. They were making cute chirping noises the whole way. Cory and I were chuckling as we listened to the little splashes they made as they hopped into the pond. Cory reached over and carefully found my right arm. He trailed his fingers down it until he found my palm. His touch sent a pleasant shudder all over my body. I smiled as he intertwined our fingers and held my hand. It felt wonderful. We lay there until the grumbling of our stomachs told us it was time for lunch. We would have to go back into our cabins and use the landline phones to tell the camp concierge that we were ready to eat. So we parted ways to feed our bellies and mull over our first Nude Touch Therapy session.\n\nAfter lunch, I knocked on Cory's door and offered to take him tree-spotting with me. He smiled and agreed. He made me touch every single tree with him. Then he impressed me with his navigation skills. He could easily walk with his cane through the trees without tripping or bumping into things.\n\n\"You can get around beautifully, Cory. Forgive me for asking, but why are you anxious about going out alone?\"\n\n\"I don't know. Logically, I know I'll probably be fine, but the anxiety that seizes me at the thought of being alone in a strange place makes it impossible. I would get up some mornings and start readying myself to take a walk alone, but I would talk myself out of it before I reached the front door.\"\n\n\"I know what you mean. The thought of being seen by strangers makes me feel that way.\"\n\n\"Jenifer... I know this is a rude question, but why is your skin different? You don't have to tell me if you're not ready.\"\n\nI stopped and took a deep breath. I knew that question would eventually come, but I didn't mind telling Cory. I actually wanted him to know.\n\n\"I was in a car accident with my dad ten years ago. The truck flipped and caught fire. My dad got me out, but the right side of my body had been cooked. I've lost count of how many skin grafts and surgeries I've had since then. The grafted skin still gives me grief. It doesn't move and stretch as it should. That's why it feels different,\" I whispered.\n\n\"I'm sorry, Jenifer. I can't imagine what that's like.\"\n\n\"I try not to think about it myself, but I have reminders all over my body.\"\n\n\"Do the scars hurt?\"\n\n\"Not really. My skin is uncomfortable at times, but it doesn't hurt like it used to.\"\n\n\"I'm glad,\" he said in relief. \"Um, can I feel what you're talking about? If it's too soon, just say no. I completely understand.\"\n\nI stared at him in surprise for a moment. His request sent my stomach fluttering, mainly because I didn't want him to discover my deformities, even though he would likely discover them as our touch sessions progressed. Then he would know I was trying to hide them. He just offered me an opportunity to get it over with sooner than later.\n\n\"I... sure.\"\n\n\"Okay, um, please guide me,\" he said and offered me his hands.\n\nI gulped and gently pulled his palms to my face and let him explore. My heart was pounding as he carefully felt along my cheeks, lips, nose, eyes, and forehead. His touch was soft and precise. He didn't poke me in the eye or stick his finger up my nose. I watched his face as he explored mine. He was softly smiling as he slid his fingers into my hair and found the parts of my scalp where the hair didn't grow anymore. His expression didn't change until he reached my deformed right ear. He looked sad as he carefully explored its weird shape.\n\n\"Was your hearing damaged in the accident?\" he asked.\n\n\"No, it's fine.\"\n\n\"Oh, that's good,\" he said with a relieved smile.\n\nI stared at him in disbelief for a moment. He was happy again as he continued to explore my oddly shaped earlobe and the skin around it. That's when tears blurred my vision. He cared more about my ability to hear than the shape of my ear. He considered its function more important than its appearance. That realization hit me right in the gut. Happy tears streamed down my face as my nose started to run. He froze when I sniffled. He knew I was crying.\n\n\"Are you okay? Did I hurt you?\" he gulped.\n\n\"No, I'm fine. I'm just happy,\" I whispered.\n\n\"Oh... do you always cry when you're happy?\" he asked, looking perplexed.\n\n\"No. You just... you're really wonderful, Cory, and you made me really happy.\"\n\nHe gave me a big smile after that.\n\n\"I'm glad. You're really wonderful too.\"\n\nPart 5. Enjoyment\n\nCory's Perspective:\n\nI was still confused as to how I made Jenifer happy, but I did! And after the conversation about her ear, she touched me more. She held my hand as we walked through the woods behind our cabins. She would grab my arm and pull me over to a tree or plant she wanted me to touch. She would gasp and grab my arm when I started to wander towards poison ivy. I was beyond thrilled with the attention and thinking of ways to get more. She already knew I was really good at navigating with my cane. My idiotic desire to impress her had worked against me. I could always 'accidentally' lose my cane in the duck pond. I was astonished at myself for considering it, but that's how much I was enjoying Jenifer's touch. She had made me a junkie in less than a day.\n\nI decided against tossing my cane away as we strolled back to the cabins. Jenifer seemed willing to give me her attention with or without it. We enjoyed cheese pizza for supper on the front porch that evening. Then we relaxed in the cushioned chairs and listened to the nocturnal chorus of insects and frogs.\n\n\"You're right, Cory. Every part of the day feels, sounds, and smells different. I always thought the light was the important part, but you proved me wrong.\"\n\n\"I didn't say the light wasn't important. It's just a part that I don't experience, so it's not that important to me, and that's okay,\" I shrugged.\n\nJenifer fell silent after that. She got more meaning out of my words than I intended.\n\n\"The light helps me see what's beautiful. What's your idea of beauty, Cory?\" she whispered.\n\nA cool breeze caressed my skin at that point. It made my hair stand on end. It distracted me from saying I thought she was extremely beautiful. I had been thinking about it all day, but only then did I realize our ideas of beauty were different. I knew visual beauty was extremely important to sighted people, but I lacked a fundamental understanding of it.\n\n\"Um, well, what I'm feeling right now is beautiful to me. The air is cool on my skin. I can smell the flowers more because the moisture in the air is condensing. Humid air carries scents really well. I can smell you, and I'm enjoying your company after a fun day. This day has felt gorgeous to me,\" I declared, hoping I answered her question.\n\nShe was silent for many seconds afterward, and it made me annoyingly anxious.\n\n\"It has been gorgeous. I completely agree.\"\n\nI slept like a rock that night. Walking with Jenifer in the woods had done me a world of good. She was the first person I thought about when I woke up. I called for breakfast and requested the tray delivered to the small table on the front porch. Then I jumped in the shower. Breakfast was a hearty spread of scrambled eggs, sausage, bacon, toast, buttermilk biscuits, and sliced tomato. I could hear Jenifer's shower running. Her breakfast had been delivered with mine and was sitting on the table. She greeted me a few minutes later. We ate in relaxed silence, basking in the cool morning air and listening to the dawn chorus.\n\n\"Cory, would you mind leading me out to the pond today while I wear the blindfold?\" she asked.\n\n\"Uh, I don't mind. What made you want to do that?\"\n\n\"I want to experience the world like you do, but I don't have a cane.\"\n\n\"Oh, good point.\"\n\nAfter breakfast, Jenifer collected the session blanket and our tablets, then I carefully led us both off the porch with the aid of my cane. We arrived under the willow tree without any snags, and I helped spread out the blanket. We sat down close to each other and activated the session apps. We didn't bother using our earbuds that day. We were both curious about the other person's instructions. They were mostly the same, but they were tailored to our specific needs. We were ordered to hold hands again for two minutes and take deep breaths. I was already feeling relaxed. Then we were ordered to hold each other's faces again. I loved doing that.\n\nThe third step surprised us. I was ordered to press the left side of my face against the right side of Jenifer's face. We chuckled as we scooted closer and brought our cheeks together, and took deep breaths. Her face was softer than her hands. I let out a happy sigh and rubbed my cheek against hers. She chuckled and did the same. God, she smelled good. I was suddenly tempted to kiss her cheek before our minute was up, but I decided against it. I didn't want to make her uncomfortable or be disrespectful of her boundaries. We held the opposite cheeks together next, and those were officially my new favorite steps.\n\nThe next step ordered us to expose our inner arms to our partners and caress them from the inner elbows to the fingertips three times each.\n\n\"Hmm, that's interesting. Would you like to go first, Jenifer?\"\n\n\"Um, sure, I'm holding my arms out now,\" she announced.\n\nI cautiously reached out and slowly brought my arms closer from the sides until I found her forearms. Then I slid my hands up her arms until I found her inner elbows. I caressed down her forearms in tandem, and she shuddered. I smiled and did it three more times, provoking another shudder out of her. It was very entertaining.\n\n\"Sorry,\" I grinned.\n\n\"It's fine. It tickled, but it felt really nice too,\" she breathed.\n\n\"Me next. I'm holding out my arms now.\"\n\nThe anticipation of her touch was thrilling. She carefully used my technique to find my arms. I shuddered as she slid her soft fingertips up to my inner elbows. Then she glided them down my forearms to my wrists and over my palms. I bit my lip as she did it again and again. I shuddered more than twice from the pleasant caressing, and it left me with an erection.\n\n\"Uh, Jenifer, you're still wearing the blindfold, right?\"\n\n\"Of course, why did you ask?\"\n\n\"Um, no reason.\"\n\n\"Okay,\" she chuckled.\n\nI was really glad she didn't press the matter. Our next step was even more enjoyable. We were ordered to take turns massaging each other's shoulders and backs. Jenifer let me go first, and I thought I would melt as her soft hands squeezed the muscles at the nape of my neck. I couldn't hide my enjoyment of it. I groaned every time she squeezed me somewhere and ran her hands down my back. When she squeezed my lower back close to my hips, my erection came back in full force. It felt heavenly. Three blissful and arousing minutes later, my massage ended. It was time for me to return the favor.\n\nPart 6. Comfort\n\nJenifer's Perspective:\n\nCory made me feel beautiful yesterday, and his groaning and sighing were making me feel warm and happy. He wasn't even trying to hide his enjoyment of the massage. My face was burning with blush as I listened to his pleasure. I squeezed the muscles of his lower back, and he let out a groan that made my insides tingle. I wondered if the blindfold was helping me enjoy sound more or if I were simply enjoying Cory. I suspected it was a little of both. I was disappointed when the three-minute timer chimed. I would have happily massaged him for ten more minutes.\n\nWe rotated on the blanket, and he placed his warm hands on my back. I shuddered as he trailed his fingers along my skin until he found my neck. He squeezed the tense muscles, and I think I melted a little. It felt exquisite. I softly moaned as his hands slid down my back and squeezed the muscles close to my hips. I went tingly all over. I understood why he was groaning so much when I rubbed him there. My body was getting warmer as he gently squeezed the muscles above my hip bones and my sides. Then I felt his fingers curiously trailing along the biggest scar that ran up the right side of my back. I didn't feel self-conscious about it with Cory, but I wondered why he did it.\n\n\"You seem to enjoy touching my scars,\" I noted.\n\n\"I do. I want to know every part of you. Does it make you uncomfortable?\" he asked and returned to massaging my shoulders.\n\n\"Not anymore. What do you think of them?\"\n\n\"They make me think about your suffering and your healing. It's like touching the story of your life with my hands. They break my heart and make me... um,\" he trailed off, searching for the right word or maybe a different word. \"They make me admire you more. You can't escape them any more than I can escape my blindness. People think I'm disadvantaged because I'm blind, and maybe they're right in some respects, but I love how I experience the world. I love what I'm feeling right now,\" he whispered, then I felt him kiss my scar.",
        "The wonderful sensation shocked me a little. Then tears tightened my throat. He said he admired me and loved touching me. Before I knew it, my heart was pounding, and my arms were trembling as I fought down the urge to cry.\n\n\"Crap, I made you cry again, didn't I?\" he sighed.\n\n\"No, no, it's okay,\" I chuckled, trying to get a hold of myself. \"You made me happy again. That's why I'm trying not to cry.\"\n\n\"Oh... good. I'm having trouble deciphering your reactions. Please tell me if I make you sad or mad.\"\n\n\"I will. Um, why did you kiss my scar?\" I asked with my face burning.\n\n\"I... really wanted to kiss you, and I wanted to show you how much I admire you. Did I overstep?\"\n\n\"Not at all. I liked it.\"\n\nHe was silent for a few seconds after that, then his lips touched me again. It made me tingle all over. He held my arms and kissed along my scar to my shoulder. I leaned my head to the side as his lips explored the nape of my neck. He was making my face and chest hot with blush, and my heart was pounding against my ribs.\n\n\"God, you taste as good as you smell,\" he whispered against my ear.\n\nAn ache of arousal raced up the center of my body from the feel of his hot breath on my skin. My heart thought I was running a marathon.\n\n\"You smell good too,\" I whispered. \"You give plant breath a run for its money.\"\n\nHe chuckled at my remark. The sound of his laugh delighted me to no end. That's when the tablets chimed, announcing the end of our session. We tapped the screens to dismiss the alarms. Then we sat in silence for a moment. Cory leaned his forehead against my back, making me smile. My body was still tingling from his kisses.\n\n\"Uh, what would you like to do now? It's a bit early for lunch,\" he noted.\n\n\"Umm,\" I hummed, but then the tablets chimed again, announcing new instructions for tomorrow's session.\n\nI tapped my screen, prompting the message to be read out loud, and it instructed us to write our own touch activities for our third session.\n\n\"Oh, I like that homework,\" Cory said in approval.\n\n\"Will your list have a thirty-minute back massage on it?\"\n\n\"At least ten minutes, and then more kissing.\"\n\nMy insides tingled at that suggestion.\n\n\"More kissing where?\"\n\n\"Wherever you want,\" he whispered as he leaned in and pressed his lips to my shoulder. \"Please, tell me to stop if I'm making you uncomfortable.\"\n\n\"I wouldn't call it uncomfortable, but it does make me feel really excited. I enjoy you touching me and kissing me.\"\n\nHe was silent for a moment again. I knew he was working up the courage to ask his next question.\n\n\"Jenifer, have you been intimately touched before? I mean, more than what we did already?\"\n\nI could hear the apprehension in his voice.\n\n\"No. Have you?\"\n\n\"No. Um, do you want to be touched more intimately?\"\n\nI had no idea how arousing a simple conversation could be until that point.\n\n\"I do. Um... maybe we can do some of that tomorrow. I'll put some intimate touching on my session list. You should do it too. I think saving it for our sessions will make it less intimidating. Do you know what I mean?\" I asked. My anxiety was trying to rear its ugly head again.\n\n\"Yeah. I like that idea,\" he said in relief.\n\nThat agreement allowed us to relax after our surprisingly heated session. We weren't used to how good we made each other feel or being that close to someone.\n\nThe rest of the day was just as enjoyable as the previous one. We ate meals together, walked together, and tree spotted. Cory was able to identify most of the trees we explored the day before. Then we talked about our favorite songs and our favorite movies. I was surprised that Cory actually had favorite movies. He loved hearing the stories acted out, the background music, and of course, he loved musicals. One of his favorite games was identifying how the sound effects were made. After a hearty supper of fish and chips, we parted ways to work on our session lists.\n\nThe next day, my stomach was fluttering as Cory and I sat down together on the blanket under the willow tree. I was wearing my blindfold again. It had a calming effect on me. It was time to discover what we put on our lists, and I suddenly regretted everything I had put on mine.\n\n\"Uh, will you go first, Cory?\"\n\n\"Would that make you more comfortable?\"\n\n\"Yes.\"\n\n\"Then I will,\" he agreed and tapped his tablet, prompting the electronic voice to read his first entry.\n\n\"Discover your partner's biggest insecurity about their body, and see if they will let you touch that area,\" announced the voice.\n\nI sighed and smiled. That request would have been a nightmare for me two days earlier, but now I wanted to do it.\n\n\"Okay,\" I sighed and carefully picked up Cory's left hand.\n\nI placed his palm against my chest and let him feel the smooth area where my right breast should have been. He gently ran his fingers over the smooth skin, trying to understand why I was insecure about it. Then I took a deep breath and gently pulled his hand over my left breast. I heard him gulp as he cupped the soft round flesh and gently squeezed it. I shuddered as he ran his fingertips over my nipple, feeling the distinct shape of it. I wished I could see his face at that point. I was also glad that I couldn't. A few seconds later, I felt both of his hands on my chest. He finally understood what I was showing him.\n\n\"Jenifer, I'm sorry you're insecure about having an amazing left breast. If it makes you feel any better, I don't have any at all.\"\n\nIn spite of the lameness of his joke, I chuckled.\n\n\"Thanks, Cory. You generally make me feel better. That was an excellent first step.\"\n\n\"Thanks, my follow-up step is even better,\" he chuckled and reached down and tapped his tablet.\n\nThe electronic voice said, \"Thoroughly kiss the area of insecurity for one minute.\"\n\nI burst out laughing after that.\n\n\"Wow, um, sure. Go for it, if you want,\" I offered.\n\nCory let out a breathy sigh as he gently touched my chest and guided his lips to it. I felt hot all over as he kissed my breast bone and over the skin where my right breast should have been. He traced the scars in that areas with his fingertips and his lips, then he slowly turned his attention to my left breast. I chewed my lip as he gently pulled my nipple between his lips and kissed it. He caressed the underside of my breast with his fingertips, exploring the plump flesh. Then he gently squeezed it as he continued to kiss and suck my nipple. Then the tablet chimed, and he pulled away. I almost told him he could keep doing it, but then I remembered his first step. I needed to reciprocate it.\n\n\"Okay, Cory. What's your biggest bodily insecurity, and can I touch it?\"\n\nHe sighed and carefully found both of my hands. Then he pulled them to his face and pressed my fingertips against his eyes.\n\n\"My biggest insecurity is having eyes that don't work. I used to wish they weren't there, but my mom said they're pretty, so I stopped thinking about it.\"\n\n\"You're mom is right. They are pretty, but the soul that wears them is absolutely beautiful,\" I said and got up on my knees.\n\nI carefully found his head and placed my hands on his cheeks, then I kissed his eyelids, eyebrows, the bridge of his nose, and his cheekbones. He was breathing me in as I explored his eyes and forehead. In my excitement, I had forgotten to set the timer. So, I just kept kissing him. I moaned softly when his hands found my chest again. He gently squeezed my breast for a moment, then his hands slid down my sides to my hips. He explored my soft curves and slowly worked his way back up my ribs. He eventually ran his fingers into my hair and guided my kisses lower. My heart skipped a beat when our lips touched. He held the back of my neck and carefully tasted each of my lips between his. He tasted as good as he smelled. We pulled away a minute later to breathe. My heart was pounding as I sank back to my seat. I still had my hands on Cory's neck. I wasn't ready to let him go yet.\n\n\"That step went way better than I expected,\" he breathed, making me smile.\n\n\"Oh, right. Should I do my first step now?\"\n\n\"Sure. That will give us a chance to cool down.\"\n\n\"Uh, don't make any assumptions yet,\" I chuckled and tapped my tablet.\n\nThe electronic voice announced, \"Take turns lying on the blanket and giving each other five-minute massages.\"\n\nCory burst out laughing after that.\n\n\"Wow, um, I did not expect that from you,\" he chuckled.\n\n\"Sorry, we don't have to do it if you don't want to.\"\n\n\"What? Why would I not want to do that?\" he asked in disbelief.\n\n\"Oh, never mind then. Who should go first?\"\n\n\"I volunteer for this grueling task,\" he declared.\n\nI chuckled as I listened to him shuffling on the blanket. He sighed to alert me that he was ready for his massage. I smiled and gently touched his stomach, thinking it would be his back.\n\n\"Uh, you want a front massage?\"\n\n\"Oh, your instructions didn't specify a laying position, and I already had a back massage, so yes. The front is good.\"\n\n\"Okay, I'll do my best.\"\n\nI began my massage with his stomach since my hand was already there. I squeezed his sides and slowly worked my way up and over his ribs. He sighed in contentment as I explored and squeezed his chest muscles. Then I boldly worked my way down. He tensed when I ran my hands down the soft skin of his sides and over his hip bones. He jumped when I ran my fingers along the bend of his legs. The back of my hand brushed something firm and incredibly soft at that point. I knew it was his erection. I chewed my lip and moved down his thighs, squeezing the muscles as I went. I massaged all the way down to his feet before I began working my way up again. He shuddered when I ran my hands up between his thighs, enjoying the soft layer of hair on his legs. Temptation was getting the best of me at that point. I wanted to see his erection, but I quickly squashed the thought. It would be cheating in a way that was unfair to Cory.\n\n\"You've been hesitating around my thighs for a bit. What are you thinking?\" he asked.\n\n\"Uh... fine, I was thinking about peeking at your erection, but I decided against it since that's super unfair to you.\"\n\nThe moment of silence that followed left my face burning in embarrassment.\n\n\"Jenifer, you're welcome to explore it,\" he offered.\n\n\"Um, and you're really okay with that?\" I gulped.\n\n\"If you're okay with it, yes. I want you to do it.\"\n\n\"Wow, okay,\" I breathed.\n\nI slowly ran my hand up his leg to where the hair became thicker around his crotch. I slid my fingers through his mound before I found the hard base of his erection. I felt tingly as I wrapped my hand around it. The outer skin was wonderfully silky, while the inner flesh was surprisingly hard. Cory shuddered as I gently stroked him, exploring his most intimate area.\n\n\"That feels really nice,\" he whispered.\n\nI could hear him breathing faster, then I felt his pulse thumping through his shaft. I was amazed and aroused as I squeezed him a little harder. I was impressed by the thick flesh in my hand.\n\n\"Do you want me to stroke you more?\" I asked.\n\n\"Yes,\" he breathed.\n\n\"Tell me to stop if it's too much.\"\n\n\"I doubt that will happen,\" he chuckled.\n\nI smiled and ran my hand up and down his thickness. He moaned softly as I squeezed and explored him. I gently pinched the softer skin at the top of his penis. It felt like a plump mushroom against my palm.\n\n\"You can be rougher than that.\"\n\n\"How so? The skin feels tender. I don't want to hurt you.\"\n\n\"I don't think you will. Here, let me demonstrate,\" he said and gently wrapped his hand around mine.\n\nHe squeezed my fingers tight around his shaft and pulled the softer flesh up around his tip. He pumped it like that a few times, showing me what to do. It felt really rough, but he shuddered all over and moaned in delight. I smiled and moved his hand away so I could give it a proper go alone. I squeezed him tight and pumped him fast, pulling the soft, flexible skin up around his tip and back down again. The rhythm was easy once I got over the fear of hurting him.\n\n\"That's really good,\" he groaned.\n\nI felt warm and tingly between my legs as I enjoyed the sounds he made and felt his body twitching with pleasure. I nudged a little closer to him, allowing my leg to rest against his as I pumped him. He was soon panting and squirming. I was surprised when I noticed his cock getting even harder in my hand.\n\n\"Faster, Jenifer,\" he panted as his hand found my leg.\n\nHe squeezed the soft flesh of my lower thigh as if he needed something to hold on to. The tingling between my legs grew worse as he twitched and squirm. Then he gasped and tensed. He groaned in pleasure as his penis jerked in my hand. I worked him through the exciting moment. Something warm and slippery splashed onto my hand and wrist after each little spasm pulsed through his shaft.\n\n\"Mmm, yes. Ease off now. I'm really tender,\" he gasped as he grabbed my hand.\n\nI smiled as he guided me to slowly pump him. His legs and penis were still twitching every now and again.\n\n\"Wow, thank you, Jenifer. That was amazing,\" he groaned as he gently squeezed my lower thigh.\n\n\"You are very welcome.\"\n\n\"Did you get splashed?\"\n\n\"A little. I don't mind.\"\n\n\"Good. Um, can I massage you now? I'll do it however you want, or I won't do it if you don't want it,\" he said as he pushed himself into a sitting position.\n\n\"I think I would like it. Let's start slow and see where it leads,\" I whispered as I released him and wiped my hand on the blanket.\n\n\"Wonderful. Make yourself comfortable however you like.\"\n\nMy stomach was fluttering with excitement as I lay on my back on the blanket. Cory gently touched my arm to get his bearings. He scooted closer to me, letting his legs touch my side and thigh. Then he placed his warm hands on my stomach and gently slid them up my ribs and over my chest, giving each side equal attention. Arousing warmth and tingles danced inside me as he touched me. He massaged my right side while gently squeezing my breast. He ran his fingertips over my nipple before he moved along. He visited my shoulders and gently squeezed them before working down my arms. He was more thorough with his massage than I was. I shuddered as he ran his hands down my sides and over my thighs. He carefully massaged the larger muscles and caressed the bend of my legs with his fingers. He was tugging at my sensitive skin as he explored that area, and it was making me wetter.\n\nI was a little disappointed as he continued down my legs, leaving me tingling, but I enjoyed his hands on my feet. I moaned softly as he squeezed them and my ankles. Then he worked his way back up. I shuddered again when he rubbed his hands along my inner thighs, squeezing the soft flesh. He touched my knee and gently pulled it to the side, opening my legs a little. My heart doubled its pounding at that point. My breathing was excited as he massaged closer to the bend of my leg. I groaned when the side of his finger accidentally rubbed against my swollen lips.\n\n\"Is that too much?\" he whispered.\n\n\"No. Touch me more.\"\n\n\"Tell me to stop if it's too much.\"\n\n\"I will.\"\n\nI gulped as his right hand gently squeezed the bend of my leg, pulling at my swollen skin. The tingles that raced through me made my inner muscles twitch. It was extremely arousing. He pulled my knee to the side more, giving him better access. I groaned as he placed his palm over my swollen lips and gently rubbed them. I took a shaky breath as I felt his fingers sliding against the abundance of moisture that had gathered at my opening. I had touched myself before, but it never felt that good.\n\n\"You are ridiculously soft and wet,\" Cory whispered in amazement as he gently massaged my crotch.\n\n\"That feels really good,\" I moaned and opened my legs a little more.\n\n\"What would feel better?\"\n\n\"Uh, maybe more pressure,\" I said and reached down and pressed his hand harder against my pussy.\n\nI groaned and shuddered as he took the initiative and worked his fingertips against the bottom of my opening, slightly parting the lips and spreading my slippery juices everywhere.\n\n\"Wow, that is irresistible,\" he breathed and gently slid his middle finger into the wet warmth.\n\n\"Oh!\" I gasped from the sudden intrusion, then I groaned as he moved his finger inside me.\n\nI thought something like that would hurt, but I was stunned at how good it felt. I placed my hand over his and pushed his finger deeper. I bit my lip and shuddered as delicious tingles made my pussy twitch again.\n\n\"God, I can feel your insides grabbing my finger. That's incredible,\" he said as he carefully laid down next to me, putting his right hand at a better angle and allowing his free hand to caress my neck.\n\nI could feel his erection pressing against my leg as he pushed his finger deeper inside me.\n\n\"Ah! That's good,\" I gasped as he spread my pussy lips wider and put pressure at the top of my opening.\n\nI groaned and shuddered as he stroked inside me, sliding the base of his finger against my sensitive little bulb. My whole body would jerk when he did that. My face and neck were uncomfortably hot like I was jogging in the heat of summer, but it only added to the intensity of what I was feeling.\n\n\"You're making me incredibly hard again,\" Cory whispered before his lips found mine.\n\nI groaned against his kiss, loving his taste and smell in my face as he worked pleasure into my body. His cock rubbing against my thigh made me wonder what it would feel like inside me. That thought added an edge to my pleasure that made my breathing shaky. An instant later, Cory aggressively slid his finger over my little sensitive bulb, and my whole body jerked. I gasped against his kiss as a thrilling sensation pulsed through my pussy again and again. I cried out and cringed from the overwhelming pleasure. Cory chuckled and kissed me again. I was surprised when I felt his tongue in my mouth. It was gross for a second, but the soft wetness was a lot like the slippery wetness between my legs, and I liked it. I shuddered a few more times before the sharp pleasure subsided. Then I relaxed against the blanket and smiled.\n\n\"Holy cow, that was wild,\" I breathed.\n\nA cool sweat broke out over my skin as my heart continued its happy thumping.\n\n\"Mmm, you smell amazing right now,\" Cory groaned against my ear.\n\nHe was still gently stroking his finger inside me, making my inner muscles twitch in contentment. I could feel my arousal dripping out of me. I didn't know I could get that wet. I was distracted when I felt his erection flex against my thigh. In spite of being very satisfied, my insides tingled at the thought of having his cock inside me. I reached down and touched his erection. He groaned softly as I ran my fingers over the hard flesh. It blew my mind that it could be that hard without a bone in it, and I was still reeling from how big it was. It wasn't big the first few times I saw it.\n\n\"What are you thinking?\" he whispered.\n\n\"I'm thinking bout your penis,\" I chuckled, making him chuckle too.\n\n\"And?\" he pressed.\n\n\"Um, it's kind of amazing. It can get really hard without a bone, and it quadruples in size when it's aroused.\"\n\n\"I knew it,\" he said accusingly.\n\n\"What?\"\n\n\"You were staring at my penis that first day.\"\n\n\"No, I wasn't. I admit I glanced at it once or twice. It's hard not to look when you've never seen one before.\"\n\n\"It's okay. I don't mind. You can look at it and touch it all you want,\" he chuckled. He was enjoying my distress.\n\n\"You're a butthead,\" I sighed and wrapped my fingers around his shaft.\n\nHe groaned as I gently stroked him and pressed his tip against my thigh.\n\n\"By the way, I liked your tongue in my mouth. It grossed me out at first, but then it added to my enjoyment. It sorta mimicked the other wet, slippery stuff going on.\"\n\nHe laughed at my explanation.\n\n\"You are so poetic after an orgasm,\" he sighed as he gently pulled his finger out of me, then I heard him groan.",
        "\"What are you doing?\"\n\n\"Mmm, something else you would think was gross.\"\n\n\"Did you put the pussy finger in your mouth?\"\n\n\"Yes.\"\n\n\"Oh... yeah. That's kinda gross,\" I chuckled.\n\n\"It doesn't taste or smell gross. Your flavor makes my eyes roll back. Would you mind if I indulged in it more?\"\n\n\"Um, how so?\"\n\n\"I want to lick your pussy, but I won't if you don't think you'll enjoy it.\"\n\n\"I wasn't thinking that...\"\n\n\"Then... can I lick your pussy?\"\n\n\"I'm beginning to think you enjoy asking me that.\"\n\n\"I do,\" he chuckled. \"I never thought I would get to ask something like that to someone as amazing as you. I'm kinda in horny heaven right now,\" he sighed as his penis flexed in my hand.\n\n\"You're also raging hard,\" I whispered in amazement.\n\n\"Because I'm extremely turned on.\"\n\n\"Does it hurt to be that hard?\"\n\n\"No. It can be frustrating, but it's not difficult to satisfy.\"\n\n\"Oh, um, how do you want to satisfy it?\"\n\n\"Uh, ideally, I would love to do it inside you,\" he whispered.\n\nAn ache of arousal tingled through my insides at his words. He noticed my hesitation, and I think it worried him.\n\n\"But don't feel pressured to do it. If you're not ready, I completely understand.\"\n\n\"Cory, it's okay. I would honestly love to feel you inside me. I'm a little scared it might hurt, but I still want to try it. How do you want to start?\"\n\n\"Oh, okay. Um, I would love to lick you before penetrating you. Do we... need protection for the penetration part?\"\n\n\"No. I've been on birth control since the accident. Extreme stress and physical trauma messed up my cycle. My hormones freak out after every skin graph.\"\n\n\"I'm so sorry, Jenifer,\" he whispered and gently kiss my cheek.\n\n\"Thanks, Cory. It's okay. I would love for you to lick me and penetrate me.\"\n\n\"Alright, um, please tell me to back off if you don't like any of it.\"\n\n\"I will.\"\n\n\"By the way, you can take off the blindfold if you want. I don't care either way.\"\n\n\"Okay, I think I will. It's a bit warm on my face.\"\n\nHe smiled and kissed me for another minute, gently playing his tongue against mine. I loved smelling his breath in my face and tasting his mouth, then he slowly crawled down my body. He put his hand on my side and used it to guide himself between my legs. I relaxed and gazed at the beautiful willow canopy over our blanket as Cory got comfortable between my thighs. My eyes rolled back when his warm tongue lapped over my pussy lips. It was the most erotic thing I had ever felt besides an orgasm. He did it a few more times, provoking a moan out of me. Then he licked up between my lips. It was an incredible tease. It went just deep enough to make me ache for more.\n\n\"You taste sweet,\" he whispered and kissed the top of my opening, making me itch with want.\n\n\"Please lick me more, Cory,\" I said and ran my fingers into his hair.\n\nHe took the hint and plunged his tongue deep inside me. I groaned shamefully loud. His tongue felt wild as it lapped against my inner muscles, spreading my pussy lips wider. The pressure was wonderful. I gently pulled his hair, encouraging him to press his mouth harder against me. I was panting and twitching as he hungrily explored inside me.\n\n\"Cory, I want more of you inside me. Please penetrate me,\" I begged.\n\n\"Mmm, thank you,\" he breathed and climbed over me.\n\nMy heart was pounding as I watched him guide his cock against my pussy. The sensation of his soft skin against mine made me ache with want. He gently rubbed his tip between my wet lips, spreading my slippery arousal around, then he gently pushed his tip inside me. I groaned softly from the wonderful sensation. The exquisite pressure caused my inner muscles to clutch at him, begging for more.\n\n\"Does it hurt?\" he whispered.\n\n\"Not at all. I'm plenty ready.\"\n\n\"Good,\" he breathed and slowly sank deeper inside me.\n\nI groaned in delight and squeezed his rock-hard shaft as it opened me up for the first time. The pressure deep inside me was a little unnerving. It felt like it wanted to hurt, but I was plenty aroused enough to ignore it. He groaned and smiled as he gently rocked inside me, exploring my depth. I loved watching the pleasure on his face. He slowly laid down on me and thrust into me, making me gasp.\n\n\"Is it too much?\"\n\n\"No, it feels really good. Do it harder.\"\n\nHe found my lips and slid his tongue into my mouth as he began pumping his cock inside me. I groaned and squirmed from the thrilling sensation. It felt like he was stabbing me with pleasure. He held the back of my neck and kissed me passionately as he massaged my inner muscles with his hard shaft. I squeezed his arms and rocked my pelvis into his thrusts. I spread my legs as wide as they would go, inviting him deeper. He groaned and slid his hand under my tailbone, lifting me up a little more. The angle allowed him to move faster and go deeper.\n\n\"Oh God,\" I groaned as I squirmed under him with my eyes rolling back.\n\nThe friction and pressure inside me were maddening. It hurt when he hit deep inside my belly, but I was suddenly in ecstasy, and the pain was making it more intense. It was a perfect balance of overwhelming sensation. I cringed with orgasm a second later. I cried out as the spasms throbbed through my pussy and abdomen, squeezing Cory's cock as it pumped through them. He was massaging more pleasure into me with every stroke. I trembled under him for many seconds, then he grunted and tensed. He groaned and shook as an orgasm rocked through his groin. I could feel his penis jumping inside me as more wet heat filled my pussy. I moaned and squeezed him with my inner muscles, reveling in the slippery moisture.\n\n\"Thrust more. I want to feel it.\"\n\nHe chuckled and did as I ordered. I chewed my lip as he moved inside me. He was still really hard, and it felt incredible against my tingling muscles.\n\n\"That was wonderful, Jenifer. Thank you,\" he breathed and kissed me again.\n\n\"Mmm, thank you too. I enjoyed every second of it. It barely hurt at all.\"\n\n\"Wait, it did hurt?\" he asked in concern.\n\n\"Not in a bad way. It hurt when you hit deep inside me, but I was about to orgasm when it happened, so it actually made it better.\"\n\n\"Wow, that's good, I guess,\" he chuckled.\n\n\"It was very good,\" I agreed and wrapped my arms around him.\n\nHe let out a happy sigh and relaxed against me. I loved feeling his weight on top of me as our hearts pounded against each other.\n\n\"I think we went over our session time. I'm hungry,\" he noted.\n\n\"Me too. I'm kind of sleepy. We could also nap,\" I suggested.\n\n\"That sounds even better. Let's nap for a bit, then we can have lunch on the blanket.\"\n\n\"What shall we do after lunch?\" I asked.\n\n\"Um, more sex?\"\n\nI burst out laughing at his answer, then I whole-heartily agreed.\n\nThe next twelve days of our stay at Camp True Touch were the most enjoyable days of our lives. Cory and I fell fast in love, and we experienced more life in two weeks than we had in ten years. The journey that started with Nude Touch Therapy turned into a discovery of a lifetime. It scares me to think how close I came to backing out of it in the beginning. Experiencing the world from Cory's perspective changed me forever. When Cory and I returned home, we enrolled in college classes together. We were both leaning towards majoring in psychology. We were finally making plans to enjoy our futures. I'm not claiming Nude Touch Therapy is a miracle cure for anxiety, but there is something intensely liberating about learning to enjoy your own body and letting someone else you love enjoy it too."
    ],
    "authorname": "chloehunt",
    "tags": [
        "straight sex",
        "cunnilingus",
        "handjob",
        "fingering",
        "first kiss",
        "first love"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/camp-true-touch"
}