{
    "title": "Collateral Ch. 22",
    "pages": [
        "\"Hey, man,\" he shook hands with Thompson, and eyed the limo with growing unease. \"Couldn't he just send word where should I be?\"\n\nA few people were staring at them. Jake waved at them.\n\n\"It's good to have limo drivers as friends,\" he spoke to his neighbors, and the people just laughed.\n\nHe turned towards Thompson with a serious expression on his face. \n\n\"I ride in front,\" he said quickly.\n\n\"Of course,\" Thompson nodded politely.\n\n\"Let me put your backpack and suit bag in the trunk,\" Thompson offered.\n\n\"Ok, but please don't hold the door. People are already thinking I won the lottery or something.\"\n\nHe got into the car quickly.\n\n\"So, where are we headed? What airport? Is he there already?\"\n\nHe must have sounded like a nervous broken chatterbox, but Thompson didn't seem to care.\n\n\"Mr. Metzger is waiting for you. I am not allowed, however, to say anything more.\"\n\nJake rolled his eyes.\n\n\"This man and his games,\" he shook his head.\n\n\"Jake,\" Thompson said, and he seemed hesitant, for a second. \"May I ask you something?\"\n\n\"Shoot,\" Jake shrugged.\n\n\"Whatever happened between you and my boss, was it so irreconcilable?\"\n\nJake pondered for a while.\n\n\"I don't know. It was pretty bad.\"\n\n\"Mr. Metzger always means well,\" Thompson continued to speak. \"Maybe it would not be a bad idea to listen to his side, too.\"\n\nA few weeks before, Jake would have been annoyed with that kind of conversation. But Hans had said the same thing to him. \n\n\"Yeah,\" Jake admitted. \"I should or something.\"\n\nHis resolve lasted up to the moment that he got out of the car and saw Klaus waiting, on the stairs of a fucking private jet. \n\nWhy did he have to look like that? Why wasn't he ugly, or bald, or fat? And why was he not somewhere, anywhere else, right now, fucking some actor or supermodel? Klaus looked straight at him, his hands in his pockets, measuring him up and down.\n\nJake drew one deep breath, and followed Thompson through the security gate and onto the tarmac. He turned to Thompson to thank him and climbed the stairs with his luggage.\n\n\"I'm still not talking to you,\" he shot at the man.\n\nKlaus moved to the side to allow him entrance.\n\n\"As you wish,\" the man said, his voice rough and tired.\n\nJake took the seat indicated by the flight attendant. So the guy had a fucking jet, and the personnel to go with it. What the fuck was he doing with a guy like that? Jake thought he must have been out of his fucking mind, to think he had a real chance with Klaus fucking Metzger.\n\nThankfully, the engines of the jet started and Jake could ignore Klaus as he stared out the small window, trying to rein in his excitement. It was his first time getting on a plane, and it had to be on a frigging private jet, on top of everything. To ignore the small butterflies in his stomach was a bit too much, no matter how pissed he was at Klaus right now.\n\n***\n\nAfter reaching cruising altitude Klaus looked at Jake as the boy fiddled in his leather seat, like he could not get into a comfortable position. The brat looked good. Damn fine, if he was to think about it. He had so many things to ask. But Jake had been clear he was still not in the mood to talk. And he was way too proud to beg for it. At least, for now. Jake was going to stay at his house after the wedding party, and they had a few good days to finally have the conversation at least he had been looking for.\n\n\"Why are you staring so much?\" Jake complained, shooting him a dark look. \n\n\"Am I not allowed? And I thought you were not talking to me.\"\n\nJake pouted. Klaus shifted his position. There was nothing he wanted more than to just reach across the cabin to the boy and kiss those pouty lips.\n\n\"Whatever,\" Jake shrugged. \n\n\"So, how have you been doing?\" Klaus chose to be the one to speak, after all.\n\n\"Fine. No guns held to my head lately. I'd say that's pretty awesome,\" Jake looked across the aisle, straight at him, challenging him with his dark eyes.\n\n\"Ah, I see. We will talk about that. Not now, but soon.\"\n\n\"All right,\" Jake admitted.\n\nThat was surprising.\n\n\"So, you do want to talk, after all?\" Klaus expressed his wonder.\n\n\"Yeah, I do. I need closure or something.\"\n\n\"Hans has been talking to you. Always one ready to play the head doctor,\" Klaus shook his head.\n\n\"He's right. But I agree with you. Let's just talk after the wedding. I don't want to drop going to the wedding, just because I'm going to fight with you over what you did.\"\n\n\"What I did?\" Klaus quirked an eyebrow. \"How about what you did? You were not supposed to be there. If you did not misbehave, we would not be having this conversation right now.\"\n\n\"Oh, yeah? So you were just going to have Diaz arrested?\"\n\n\"With you, it is always about your brother. I cannot fathom what he has done in his life to warrant so much high esteem or loyalty on your part.\"\n\nJake frowned.\n\n\"This is just the crap that I thought would happen. Let's just not talk anymore. Or I'll just get off this plane.\"\n\n\"You do not simply get down from a plane, Jake.\"\n\nThe brat rolled his eyes.\n\n\"No shit, teach. I was just joking.\"\n\nKlaus could feel his lips twitching, wanting to curl upward. It felt like he had not smiled in ages. His face hurt. It was good to see Jake's fire, shining brightly as always.\n\n\"You look good,\" he spoke again.\n\nJake's eyes flickered, but the boy chose to keep his features in a neutral demeanor. \n\n\"You, too,\" he said solemnly, after a few moments.\n\n\"I hope you will find the accommodations comfortable enough.\"\n\n\"As long as I don't have to sleep on the streets, there's no point to worry about stuff like that. I'm not like you, Mr. Money Bags.\"\n\n\"Blue suits you,\" Klaus chose to overlook the attitude for now. \"It is just the same as the room you had.\"\n\nJake now seemed surprised.\n\n\"Wait, I'm going to sleep at your house? I am so going to kill Hans.\"\n\n\"Let's not be too murderous on the eve of such an important event. Consider killing him after the wedding. At least, he will die a happy man.\"\n\nJake giggled. Music to his ears. And it felt so good to see him again. Despite all the bad blood between them.\n\n***\n\nJake wanted so much to hate the man. But it was impossible. One good look at him and he was ready to forget all about the thing with Diaz, and gang wars, and guns. But he was not a fool. He was not going to fall so easily. So he shut his eyes. Tightly, as tightly as he could.\n\n\"I need to sleep,\" he mumbled. \"I've been working two shifts for the past weeks,\" he thought an explanation was in order. \n\n\"I see. Should I bring a blanket?\"\n\n\"No, I'm good,\" Jake sank into his chair, stubbornly keeping his eyes closed.\n\n\"I distinctly remember you dislike being cold. You always wrapped yourself around me, just for that reason.\"\n\n\"Stop remembering that crap. That ... was not real.\"\n\nAt least that made the man shut up after all. \n\nAnd he chose to pretend he was still asleep while careful hands draped him in a cozy blanket. It was probably just the flight attendant doing his job. And probably the guy had expensive tastes and used the same cologne as Klaus. He knew that smell.\n\n***\n\nIt was strange that he could sleep like a log, seeing how excited he had been about the flight and seeing Klaus again - although he was not going to admit that, even to himself. However, he had not lied when he had told Klaus earlier that he was beaten. \n\nThe flight attendant gently nudged him awake, and, at first, he blinked and looked around in surprise. \n\n\"Please, wake up, sir. We have a light supper ready to eat,\" the young man said politely. \n\nOnly then Jake noticed the white cloth covered table set at the rear of the plane. And Klaus, waiting for him. He could pretend he wasn't hungry, but he could not exactly deny food. Just as a friendly reminder, his stomach grumbled like a miffed old man. So, albeit reluctantly, he got to his feet and walked to the table.\n\n\"How long have I slept?\" he mumbled, trying to arrange a few rebellious strands of hair.\n\n\"A bit over two hours. Please,\" Klaus gestured to the nicely set up table.\n\nThe flight attendant efficiently placed a covered dish in front of him and lifted the lid with a bit of a too studied gesture. But any thoughts he might have had about the serving were gone from his mind, as soon as a nice and familiar smell tickled his nostrils. \n\n\"Wow! That's Agnes's beef stew!\" he exclaimed.\n\nKlaus was looking straight at him, with a small smile. It was not a smug smile, but a fond one. Jake coughed and looked away, to cover his childish outburst.\n\n\"I tried to make it, but somehow I can't seem to do it right,\" he spoke again.\n\n\"The moment she heard you were coming to the wedding, she went straight to the kitchen. Trust me, I had to fight her off, she was so decided to send at least ten different dishes. She has this idea that you lost weight. I must say, she is a bit right,\" Klaus said.\n\nThe guy's stare was unnerving.\n\n\"She misses you,\" Klaus added, leaving the unspoken words hanging in the air.\n\nShe wasn't the only one.\n\n\"I ... miss her, too,\" he said quickly, and started eating, hoping he was not going to knock over the glass wine or do anything else, equally stupid.\n\nAnd not only her.\n\nIt was a blessing that Klaus was firm about the no talking rule during meals, because it allowed him to just fill his belly with Agnes's delicious stew, and just ignore the guy. \n\nHalf an hour later, he was back to his seat. He could just spend the rest of the flight sleeping, and continue to pretend he wasn't so close to Klaus. Yeah, he could do that.\n\n\"Do you want me to tuck you in?\" Klaus cooed.\n\n\"Shut up,\" Jake mumbled and dragged the blanket up to his chin, stubbornly closing his eyes.\n\nAt least, the guy left him alone after that.\n\n***\n\nHe definitely felt relieved not having to spend any more time in Klaus's company as the host of the event seemed busy with stuff that didn't include him. Walking into the room that looked like the dead ringer for the one he had had during his short time at Klaus's estate flooded him with memories. He drew a deep sigh as he sat slowly on the bed. What was he going to do now? Eventually, Klaus and he were going to talk.\n\nAnd all he could think of was how much he wanted to just jump the man. It was enough to get close enough to him and he wanted nothing else. He was a hot mess, a bundle of feelings and instincts that were just pushing him into the one direction he knew was wrong. \n\nBut that talk, they needed to have it.\n\n***\n\n\"So finally I'm meeting you, Jake, wow!\" Stephen expressed his enthusiasm by pulling him into a hug.\n\nHans's soon to be husband was really nice. And seeing him from up close was enough for Jake to understand why Hans was so smitten with the guy. With wavy chestnut hair and deep green eyes, Stephen was a looker. But, strangely enough, it was not his looks that made him stand out so much, but his smile, so genuine, so honest, that no one could believe he was earning his living as a lawyer. \n\nStephen pushed him back, without removing his hands from Jake's shoulders, and just looked at him, seemingly fascinated with what he was seeing. Jake had to say that he felt pretty much embarrassed with so much attention.\n\n\"He's awfully cute,\" Stephen turned his head, to look at Hans. \"Jake, you're awfully cute,\" he added, turning his attention back to him again.\n\n\"Honey, I think he heard you the first time,\" Hans said with a smirk and came to embrace his lover from behind.\n\nJake was about to say something, when he felt like someone was watching him. It didn't take long to identify the source of his discomfort. From not far away, Klaus's eyes were shooting darts at them.\n\nStephen grimaced and shivered slightly.\n\n\"Is it just me or is it a bit cold? Maybe we should crank up the heat a little more?\" he asked Hans, and quickly placed a peck on his man's lips.\n\n\"I think there are other guests arriving,\" Klaus spoke, this time standing right next to them. \"You two should welcome them. Do not forget about the champagne.\" \n\n\"Klaus, you're the man,\" Stephen said enthusiastically and unwrapped himself from his lover's arms to embrace Klaus.\n\nWho, no surprises there, remained cold as a fish at the guy's display of affection. Stephen didn't seem to notice, though, as he dragged Hans to the door, to receive their guests.\n\n\"Why are you being an asshole?\" Jake spoke, as he nervously flattened his palms against some invisible wrinkles on his suit.\n\nHe was not used to wear stuff like that. It was like he was carrying some dead weight. \n\n\"You look fantastic,\" Klaus ignored his question.\n\nJake gulped and shifted his weight from one leg to the other. \n\n\"Yeah, I'm trying,\" he replied. \"I mean, to be up to the occasion and such. I've never been to a wedding. I mean, not since I grew up.\"\n\nAnd now he was just babbling nonsense. He should just stop.\n\n\"Allow me to play the obliging host,\" Klaus took his arm to guide him. \"May I show you around a bit? Agnes did a great job arranging the garden. It is too cold to take the entire party there, but I believe you will enjoy the lights. We just turned them on.\"\n\n***\n\nJake was not saying anything, but by the small smile on his lips, he was, indeed, enjoying then, view. If everything had just worked out differently. Klaus shook his head. It hurt to be so close to the one he so much desired, without being able to touch him. Really touch him. \n\n\"This house is smaller,\" Jake commented. \"Then the one from before. It's even nicer.\"\n\n\"I knew you were going to say that.\" \n\n\"You knew?\" Jake frowned.\n\nHe wanted nothing but to smooth that frown with the tips of his fingers. \n\n\"When I believed that I was going to bring you here with me. I am still glad that I am able to show it to you.\"\n\nJake nodded and looked away. The Christmas lights threw their reflection in the boy's beautiful eyes. \n\n\"Jake,\" Klaus whispered.\n\nThe young man turned to face him. His bottom lip was shivering a bit. \n\n\"We should go inside,\" he added.\n\nWas there a tinge of disappointment in the way the boy's lips curled downward? At this point, he could not allow himself to be hasty. They needed to talk. Regardless of how much he wanted nothing but to close the gap between them, gather Jake into his arms and kiss him deeply. And tell him how much he missed him.\n\n***\n\nJake was amazed with the party. It was nothing like the stiff functions Klaus had thrown before. Here, the atmosphere was lively, everyone was having fun, and even he, a stranger, felt at home. Hans's parents were pretty much acting like a comedic duo, and Stephen had to show everyone that he basically mastered every style of dance ever invented on the face of the planet. \n\nThe only thing that seemed strange was that each time some guy approached him, interested in striking a conversation and even blown-out flirting, after a few minutes, something had to come up and the guy was acting like he had never talked to Jake.\n\nHe didn't have to be a rocket scientist to figure out what was going on. When Klaus sat gracefully next to him, he rolled his eyes.\n\n\"Why are you scaring everyone? What are you saying to them? That I have some weird STD?\"\n\n\"Nothing of the kind. But I do politely let them know that you are not single.\"\n\n\"I'm not?\" Jake pursed his lips, to stop himself from smiling. \"I could bet that I was.\"\n\n\"That is an assumption that definitely needs correction.\"\n\nIt was not fair. How many times had he thought that? There was just something about that man that just drew him in, and stopped him from thinking straight. He looked around. People were having fun. Stephen and Hans were happy. And he just stood there, moping over things that couldn't be.\n\nHe didn't even think twice as he looked at Klaus, with determination in his eyes. \n\n\"Do you think anyone would notice if we ditched the party?\" he asked.\n\nKlaus threw him a surprised look.\n\n\"I suppose my presence is no longer needed,\" he confirmed.\n\n\"Then let's just fuck,\" Jake said simply.\n\n***\n\nNormally, he would have argued. But nothing was normal. Not anymore. Klaus stood up briskly and made a small sign for Jake to follow him. He didn't need to look back to know the young man was right behind him. \n\nThe moment they were in his room, Jake grabbed him and smashed him with his back against the door. The kiss was savage, his lips bitten to the point of drawing blood. And then, the boy just withdrew to look at him with eyes swimming in a mix of contradicting emotions.\n\n\"Jake,\" he said with a tinge of regret. \n\n\"Shut up,\" the young man murmured, slowly rubbing his lips against his.\n\nThere was no more biting this time. There was nothing but scorching heat, and there was so much warmth, suddenly pouring into his veins, making him move and feel alive again. They landed on the bed, a tangled mess of limbs, hands searching, trying to reach through, pulling at stubborn buttons and stiff clothing.\n\nHe caught the boy's head in his hands and stared at him, trying to ignore, for at least one second, Jake's body, glued to his, towering over him.\n\n\"Jake, we should talk first,\" he made one last, lame attempt. \n\n\"Like fuck we should,\" Jake retorted and shut him up with a kiss.\n\nThe boy must have had a good teacher, because all rational thought was soon gone from his mind. Jake's hands were skilled as always, rougher now, as they dispatched layer after layer of clothing, bent on reaching naked burning skin.\n\nIt felt like he was coming down with a fever, and it must have been all Jake's fault, as his calloused hands were causing too much friction, almost unbearable, but still deliciously erotic. \n\nHe tried to make them switch places and put the boy on his back, but Jake resisted, deftly capturing his wrists and pushing them over his head into the plush coverlet. The raven haired boy shook his head slowly, telling him without words what he wanted. Yet, that did not mean he did not want to hear it. Loud and clear.\n\n\"What do you want, Jake?\"\n\n\"You,\" the answer came promptly. \"Only you.\"\n\nUnder any other circumstances, Klaus would have found the entire situation a tad unnerving. He was no longer in charge. Jake managed to undress him fully, and he was now on his knees, next to the bed, working his shaft with his usual dexterity.\n\nJake seemed to have gotten a lot better at blowjobs. He could still remember the way the expert tongue had felt during the last times the boy had given him oral satisfaction. But he was more determined than usual, focused even, as he was just taking Klaus's cock deeper and deeper. A small tinge of jealousy touched him, feather like.\n\n\"I have not been with others, since you left,\" he croaked, his voice hitched, tied up in desire. \n\nThe mouth working his cock stopped and for a second, Jake let him be.\n\n\"Me neither. I couldn't. Just fucking couldn't.\"\n\nThat was the only confirmation he needed. His hands came to rest atop the boy's head, guiding him. He was surprised to feel his wrists grabbed again and his palms pressed firmly to the sides, as Jake continued bobbing his head up and down. \n\nThere was definitely enough tongue there, making sure to add pressure. And Jake just had to be an expert at everything he did, blowjobs included. Klaus closed his eyes, too engulfed in the rhythm to care about anything else. Jake was making this about Klaus, not him, and if that was what he wanted for the moment, Klaus was not going to stand in his way.\n\nThere must have been a thunder in the distance, or maybe it was just the pounding of his own blood in his ears, when he came into that generous unpretentious mouth, licking him clean and taking everything in.\n\nHe was breathing hard and trying just as much to collect his thoughts and place them in some type of logical order. He grunted in surprised, as his legs were pushed up and he felt something moist at his back entrance. Even in the faint light, he could see Jake's eyes burning with intense heat, as the young man was rimming him and using the semen in his mouth as improvised lubricant. ",
        "\"I want to fuck you,\" Jake said simply as he stood up and began to get rid of the remainder of his clothes.\n\nKlaus pondered for a second. Was a reply really expected? Probably not, as Jake pulled him closer to the edge of the bed and began pushing inside him. That was not going to be this easy, he thought idly.\n\nHe hissed as Jake pushed too hard.\n\n\"Fuck me,\" he cursed.\n\n\"I'm trying,\" Jake huffed in response.\n\nLaughter bubbled in his chest.\n\n\"Damn, too fucking tight,\" Jake added and began withdrawing.\n\nKlaus used his legs to quickly trap the young man and prevent him from fleeing the battlefield.\n\n\"You are not going to back down now,\" he said, finding his voice this time. \"If it is what you want, be a man and go all the way.\"\n\n\"Like this?\" Jake's eyes glinted with mischief.\n\nKlaus had to bite back another curse, but at least now, the boy was, indeed, all in, down to the hilt. Jake smiled as he hovered close and teased Klaus's lips with a wicked tongue. And just like that, he began moving slowly. \n\nKlaus bit his bottom lip hard. Was it just the situation dictating his reactions? But no, it was deep and physical, and Jake somehow knew how to push and brush over that sensitive spot he knew well it was not the most enjoyable for him. He sneaked one hand between them, wondering at how hard he was again. \n\n\"Hey, no cheating,\" Jake grabbed his hand and pushed it up, linking it with the other. And then, he leaned in and whispered in his ear. \"Your cherry is fucking delicious.\"\n\nKlaus snorted.\n\n\"Make me laugh and that will kill my erection.\"\n\n\"Oh, yeah? Funny, because I think I can feel how hard you are.\"\n\nTo drive home his point, Jake pressed his free hand over Klaus's cock.\n\n\"Damn, yes, Jake, like this,\" Klaus moaned.\n\n\"You wish,\" Jake, the naughty sadist, said as he removed his hand, to press it onto the bed, to sustain his weight. \"Can I trust you not to touch yourself? I want to give it to you hard.\"\n\nKlaus nodded, turning his head and trying hard to focus somewhere, far away from the unbearable sensation. Jake's hands were steady, planted on his hips, pulling him onto that young hard cock that seemed to know exactly how, where, and how much to hit.\n\n\"Where did you learn to fuck like this?\" he murmured, fighting the strangled cries he felt building up in his chest.\n\n\"Don't you know? I felt you inside me so many times. You're the one who taught me.\"\n\nOf course Jake had to be good at everything. Especially learning by example. \n\n\"Please, Jake. Let me jerk off,\" he pleaded. \n\n\"No,\" Jake answered stubbornly.\n\nHe had to grab the coverlet with both hands, as he slid in and out on Jake's cock. The boy was only averagely endowed, but now was as good a time as any to concede to the idea that size was not the only thing that mattered. He had loved that cock so many times before, liked to feed on it, enjoyed the slight curve, the hardness, steel wrapped in silk, but now, that he was feeling it from the inside, it was a totally different matter. \n\nWhite hot desire was pooling in his groin. He could only watch in defeat as his cock wept, so unrightfully neglected. He rose on his elbows, trying to draw Jake's attention once more. The young man's breathe was coming in short gasps, but his own grunts were taking him more by surprise.\n\n\"No one has ever made me feel like this,\" he managed, letting his body be pillaged. \n\n\"Of course not,\" Jake answered and grabbed him by the nape to bring him closer. \"No one has ever loved you the way I love you.\"\n\nMaybe it was the kiss that followed that sudden declaration or just his own body no longer able to handle the rough, but skillful hammering of Jake's cock at the same spot over in over again. When he came, it was everything the books described. He lost himself in the sensation, barely registering the way Jake came inside him, moments later.\n\nHe pulled the boy into his arms and fell asleep with him all around. \n\nYet, the next morning, he woke up to the same empty bed. \n\nTBC\n\n*****\n\nAuthor's note: Only one chapter left and that will contain the conclusion to this story! Thank you for enjoying it so much! You're all really cool! And I hope that you will like other stories I'll publish. This one's been a rollercoaster, the next one's a trip to Wonderland ;)"
    ],
    "authorname": "laurasfox",
    "tags": [
        "gay novel",
        "gay romance",
        "romance",
        "romantic"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/collateral-ch-22"
}