{
    "title": "Super Friends With Benefits Ch. 02",
    "pages": [
        "Alex shook me awake.\n\nI blinked away the haze through my splitting headache.\n\n\"I'm too old for this shit,\" I mumbled, remembering why binge drinking is a bad idea for me.\n\nAnd I'm only thirty-one!\n\nSoft lips pressed against mine.\n\n\"Thank you for this weekend, Mallory,\" Stacey whispered softly. \"I have to go.\"\n\n\"Don't,\" I pleaded numbly. I had a pounding headache and the more I moved, the more my stomach threatened to revolt. \"Stay.\"\n\n\"My brother wants to beat the Labor Day traffic home, and we're leaving at seven.\"\n\n\"What time is it?\" I mumbled, blindly groping around for my phone.\n\n\"Five-thirty.\" Her hand brushed the hair out of my face. Her voice shook. \"I couldn't leave without saying, 'good-bye'.\"\n\nI reached out and pulled her into my arms. \"I don't know that I can wait until next year to see you again.\"\n\n\"It won't be a year,\" she promised. She leaned in for one more kiss, then withdrew, pulling against my feeble grasp, desperate to keep her close to me. My protests were for naught, though.\n\n\"I'll be back in a minute. I'm going to get Stacey a ride back to her hotel,\" Alex kissed my cheek before flipping out the light in the bathroom.\n\nThe door opened to the hallway, then closed. A few minutes later, Alex returned to the darkened room. He slipped into the bed with me, spooning up behind me.\n\nI drifted off again, already missing the touch of our new lover. Fortunately, I only had to wait two weeks to see her again.\n\nWhen I woke up the second time, my head was still pounding. Alex helped me pack my things, we checked out of the hotel, and then he drove me to the airport on his way back to central Florida.\n\nPro tip: Don't fly through Hartsfield-Jackson airport when you're hungover. All the walking sucks.\n\nWe kept in contact with Stacey through Facebook, Instagram and text message.\n\nShe lived in Nashville, which about five hours from me at Wright-Pat in Dayton. An hour closer to her is Cincinnati, where the Cincinnati Comic Expo was happening two weeks after Dragon Con.\n\nif u want to come up for the show, i've got a room already. if u are willing to spend some time at a booth, i can get u an exhibitor badge. all u have to do is pay for food and gas I messaged her the week after we met.\n\nwill alex be there, too? she asked\n\nif we twist his arm, he'll probably show up\n\nSure enough, he was in after Stacy dropped a picture of her frigging herself in our group text.\n\nSo not quite two weeks later, I drove down to Cincinnati on Thursday before the show to help one of my friends set up her booth selling chainmaille bracelets, knick-knacks, and some of her art.\n\nI told Jenny that Alex was coming up as well as a friend we met at Dragon Con. She got Alex, Stacey and me exhibitor passes in exchange for helping her out, although we didn't really expect Alex and Stacey to do much around the booth.\n\nStacey made the drive up after getting out of class on Thursday afternoon but didn't arrive until almost ten. She said she didn't have Friday classes.\n\nBetween episodes of pacing nervously, I lounged around our room at the Hyatt Regency. When my phone buzzed, I jumped in surprise. And anticipation.\n\ndownstairs Stacey texted.\n\nI took a deep breath. be right there.\n\nAs I got out of the elevator, and I saw her standing outside, unloading her small Hyundai SUV. Walking at a brisk clip, I rushed out the door and threw myself into her arms.\n\nShe wrapped me up in a big hug, and to my unexpected delight, gave me an enthusiastic kiss.\n\n\"Give me your keys,\" I pulled back, and draping myself around her arm. She dug into her purse and gave me the fob. I handed it to the valet. \"Room 2102. Clermont.\"\n\n\"That's like thirty dollars a day!\" Stacey objected as I took the ticket. \"There's self-parking across the street.\"\n\n\"Thirty-five. Don't worry about it,\" I waved her off and gathered up her things. She didn't need a luggage cart for the weekend.\n\n\"We're going to have a talk about that,\" she said sternly, her brown eyes boring into me.\n\nI flushed, worried that I had upset her. But she didn't say anything while in front of other people. She slung her backpack over her shoulder. She had two mid-size hard-sided spinner suitcases, a hanging garment bag and carrying bag for her boots. We divvied up the load and headed for the elevator.\n\nOur room was on a high floor, in a suite at the end of the hallway, as Alex and I preferred.\n\n\"I hope you don't mind that we got a king size bed,\" I said shyly as the door opened. The suite had a separate bedroom, a sitting area, a good-sized couch, a desk, a couple of comfortable chairs and enough space for us to spread out.\n\n\"I think we'll manage,\" she winked, and I breathed a sigh of relief. I didn't know what we'd do if things got awkward. I guess someone could sleep on the pull-out couch. More likely, Stacy would just leave and go back to Nashville.\n\nShe was dressed casually for the four-hour drive in leggings and a sweater dress. Her hair was pulled back, and she was wearing just enough makeup to show off the sparkle in her eyes and her full lips.\n\nI set her costume things down and pulled her suitcase back towards the bedroom area.\n\nStacey dug into her purse and pulled out a sheet of paper and handed it to me. \"Completely clean bill of health.\"\n\nIt took me a second to find my voice. I called up my lab results on my phone and showed them to her. \"Me, too. Alex's tests were negative, too.\"\n\nWe stood there for a long moment in silence, wondering where this was going. Whatever \"this\" was.\n\n\"What do you want this weekend?\" I whispered.\n\nShe looked away for a split second. After a deep breath, she smiled timidly and looked me in the eyes. \"I want you to make love to me. And I want Alex to make love to me. And then I want to fuck your brains out.\"\n\n\"I don't know what's going on,\" I confessed sheepishly. \"I am obsessed with you. And I shouldn't be. You're... you're beautiful. And young. And you should be dating people who aren't in their thirties. I'm ten years older than you, for Christ's sake! And... and...\"\n\n\"I can't stop thinking about you,\" she finished my thought. \"I don't know what I'm doing. A part of me thinks I've lost my mind. I only knew I had to see you again.\"\n\nThere was fear in her eyes. It probably matched my own.\n\nI reached out and we fell into one anothers's arms.\n\nHer lips were just as soft as I remembered. Our bodies seemed to melt into one. My hands roamed her supple form eagerly.\n\nThere was hunger in her touch, but it wasn't rushed or strong. I tilted my head back and let her kiss me.\n\n\"Are you hungry?\" she asked, taking me kind of by surprise.\n\n\"Not really.\"\n\n\"That's too bad,\" Stacey said coyly. \"I was going to offer you something to eat.\"\n\nI couldn't help but laugh. Pulling her close to me, the press of her breasts against mine made me tingle from head to toe. \"I walked right into that one, didn't I?\"\n\nShe giggled.\n\n\"What do you want to do tonight... this weekend?\" I dared to ask.\n\nThroughout our texting and messaging back and forth, neither of us had really broached this subject. There was a lot of innuendo (often instigated by Alex), but no specifics. I think I had purposely avoided getting my expectations and hopes up in case I never saw her again.\n\n\"I want it all,\" her voice trembled. \"I want to touch you. I want to eat you out. I want Alex. I want you and Alex together. I want to see why Alex is in love with you.\"\n\nMy eyes got wide. \"He's... he's not in love with me.\"\n\n\"Yes, he is,\" Stacey said firmly. \"He might not know it, but he is. And you're in love with him, even if you won't admit it. To him or yourself.\"\n\n\"I can't be in love with him,\" I said quietly. \"Not like he deserves. Not now. And certainly not if I'm with you.\"\n\n\"When both of you finally get your heads out of your asses and realise you're in love, you each owe me a hundred dollars,\" she pulled back just enough to look me in the eyes. For someone who had just turned twenty-one, she either knew a lot more than she let on, or she was a grandmaster-level bullshitter. \"Until then, I'm going to get you both to make me into your sex toy.\"\n\n\"Maybe I want you to fall in love with me.\" My head was swimming in emotional confusion. I think I was trying to take back control of the conversation. \"Maybe I want you to make me forget about Alex.\"\n\n\"You might fall in love with me, too, but I'll never have his big, magic dick.\" For just a second, her eyes glazed over at the thought of Alex's prowess with his penis. I knew exactly what she meant, and this weekend, she was going to have him in all of his bareback glory. \"Maybe we can love each other... and him... and just be happy.\"\n\n\"I'd like that,\" I said wistfully. I didn't tell Stacey right then, but there was more to our lives than we had told her. I compartmentalised it as best I could, and if we pursued our relationship with her, there would be some more in-depth and honest conversations we all needed to have, but in that moment, all that mattered was having Stacey in my arms.\n\nWe didn't say anything else. I think we each were waiting for the other to make the first move.\n\n\"Take me to bed,\" she whispered finally.\n\nI gave her hand a quick squeeze, then flipped out the lights around the hotel room. I left the heavy-duty curtains open, but pulled the sheer curtains closed, letting the soft glow from the city's lights in. I wasn't really worried about anyone looking in on us twenty-one floors up, but better safe than sorry, right?\n\nTaking Stacey's hands in mine, I looked into her big brown eyes, which were filled with love.\n\nShe leaned into to kiss me, but I pressed my fingers to her lips.\n\n\"We don't have safe words for regular sex, but if there is anything you don't like, just say, 'Stop',\" I told her gently. \"Do not ever feel pressured and it's okay to say 'No.' Alex and I will never force you into anything. You are always in complete control of your body. Do you understand?\"\n\nStacey nodded.\n\n\"Say it,\" I pressed.\n\n\"I understand,\" she whispered.\n\n\"Are you sure you're okay being with me?\" I asked. Two weeks before, she had never kissed a woman before, and we went straight to a threesome in a very short amount of time.\n\n\"I think so,\" Stacey replied softly. \"I didn't think I would like it... and I don't know what to tell my parents, but it just feels right. At least it does with you. I don't know I'd want to be with anyone else. You just seem so... experienced... and...\"\n\n\"Did you just call me 'old'?\" I giggled. She blushed and looked away. Flustered. I squeezed her hand sympathetically. \"I know what you mean. I was like that the first time I was with another woman.\"\n\n\"When was that?\"\n\n\"Senior year in high school.\" The memory made me smile wistfully. \"We were at a party and playing Truth Or Dare.\"\n\n\"Did you date her?\"\n\n\"Not seriously,\" I replied. \"But it made me realise that maybe I wasn't as straight as I was brought up to believe. I've never had a long-term relationship with a woman.\"\n\n\"Do you like being with women more than men?\"\n\n\"It depends on the woman. Yeah, I know: bad answer. Alex and I have separate partners and we share partners sometimes. Each one is different. If we have a threeway or foursome swap, it's usually as a favor to the other. You are the first person we were both smitten with right away.\"\n\nStacey's face flushed with a combination of embarrassment and desire and she looked away. Flustered again. I put my hand under her chin and brought her eyes back to me.\n\n\"I am going to undress you.\" I pulled at her sweater dress. She raised her arms to make it easier on me. It came off easily, along with the tank top underneath. \"And then I'm going to fuck your brains out.\"\n\nNext, my hands went to the waistband of her leggings. I pushed them down over her hips, my hands brushing the soft skin of her backside and her thighs. She lifted her feet and kicked the leggings across the room.\n\n\"Let me undress you,\" she gasped, but I swatted her hands away from the buttons on my blouse.\n\nOnce again, she made a pass at me. Our lips touched, but I pulled away after nipping at her.\n\n\"Not yet,\" I teased. She stood there, wearing only an industrial-strength bra which strained her keep her bountiful breasts contained and a g-string. Her hair hung down past her shoulders, framing her perfect face.\n\nManeuvering her to the bed, I sat her down. Her eyes were level with my little boobies. Her hands instinctively reached around to grab me around the waist.\n\nMy pussy pressed against her tits, separated only by my thin, A-line skirt.\n\nHer big brown eyes gazed up at me. Boring into me. A shiver ran from my head to my toes.\n\n\"I want to make love to you tonight, Stacey,\" I whispered. \"I want to kiss you and touch you and eat you and... and fuck... until I can't see straight.\"\n\nThe words hung over us for a moment. My stomach felt like the bottom was going to drop out. I didn't know what I was going to do if she said \"No.\"\n\n\"I want that, too.\" Her eyes never left mine. \"I want you to show me everything.\"\n\nIn our threesome with Alex at Dragon Con, it was never just Stacey and me. There was our friend's cock always at the ready. I'm not complaining, by the way. The parts that I remember through the haze were fan-fucking-tastic.\n\nBut I wasn't really intimate with the brown-skinned beauty in my arms just then.\n\nAnd I wanted to be. More than anything.\n\nIt seems she wanted that, too.\n\nHer next words made my heart skip a beat.\n\n\"I want you to love me,\" she said quietly. There was fear in her eyes. And hope.\n\nThe desire which had been building in my body all day evaporated in an instant. I can't explain it. The lust. The anticipation. The hunger.\n\nIt all went away.\n\nI pressed her back on the bed and straddled her hips. I leaned in and kissed her.\n\nNot hard. Not forcefully.\n\nOur lips brushed. Stacey's arms wrapped around me. I kissed her lips. Her cheeks.\n\nShe gasped when I sucked on her ear lobes.\n\nI dug my fingernails into her shoulders when she raked her teeth along my collarbones.\n\nWithout moving into another stage of undress, I maneuvered her to the middle of the bed. She fell back into the pillows.\n\nOur bodies pressed together. We were always touching one another. Not necessarily sexually.\n\nJust kissing. Caressing. Her fingertips ran from my neck to my shoulders and down my arms.\n\nI traced the outline of her eyes. Her nose. Her lips. Her ears. As if trying to memorise the sight and the feel of my lover.\n\nMy hands ran up and down her arms and I admired her beauty.\n\nFor the last two weeks, all my thoughts of Stacey involved tearing her clothes off and ravaging her body. I wanted her inside me. I wanted to make her mine, and mine alone.\n\nBut in that moment, all I wanted was just to be close to her.\n\nShe lay back, timidly at first, reacting to me.\n\nHer lips strayed to my neck when I presented to her. Her touch was tentative.\n\nAs we became more familiar with each other, she started to explore. With her eyes. With her hands. With her mouth.\n\nI pressed my forehead against hers, our noses brushing.\n\n\"Don't stop,\" she pleaded.\n\nOur lips met again and we resumed those soft, tender kisses. She sucked on my tongue. I nibbled on her lips.\n\nI squealed with surprised when she pushed me back and rolled on top of me, her weight holding me down.\n\nWhen she pinned my wrists above my head, I was ready to surrender to her on the spot.\n\nIt was in that moment that the feel of her breasts against me awakened the tingling between my legs.\n\nStacey looked down on me with love in her eyes.\n\n\"What do you want?\" I dared to ask.\n\n\"I want tonight to last forever.\"\n\nWhat Stacey lacked in experience she made up with unbridled enthusiasm and a fair amount of natural talent.\n\nAfter holding and kissing and touching each other for an eternity, it seemed a switch was flipped inside each of us.\n\nThe hunger returned. The anticipation. The lust.\n\nBefore I knew it, we went from light, gentle, sweet kisses to tearing at each others's clothes. I think she ripped the buttons right off my blouse, but I didn't care.\n\nShe became a primal force, driven by desire.\n\nThat's how I found myself laying flat on my back, my legs wide open being smothered by her pussy in the most intense sixty-nine of my life.\n\nMy hands clutched desperately at her wide, soft rear end. Her wetness was all over my face as I lapped at her inflamed labia and swollen clitoris.\n\nShe pumped two fingers--then three--in and out of my pussy as she flicked my bean with her tongue.\n\nI was in Heaven--with a capitol \"H\".\n\nHer breasts pressed against my belly.\n\n\"Harder!\" she cried when I tugged at her nipples.\n\nYes, ma'am!\n\n\"Fuck me!\" I shouted into her thighs as she stuck her tongue in my ass, then replaced it with a finger, all the while still driving into my pussy with her other hand.\n\nHow I wanted to stay between her legs for the rest of my life!\n\nAnd I don't think of myself as a lesbian. Bisexual? Yes, but not a lesbian. I just knew I wanted her. More than anything in the world at that moment.\n\nI ate her out through one orgasm, then another.\n\nShe finally rolled off me. Spent.\n\nSo I kissed my way up her body. She was covered in sweat. Her breasts were soft in my grasp. I suckled on her tits. Her areole were easily the size of sand dollars. They crinkled up when I blew cold air on them.\n\nHer nipples fit perfectly between my lips.\n\nWhen I finally kissed her, the tastes of our juices mixed. It was ambrosia to me.\n\nStacey spread wide for me. I rubbed against her, our legs making that perfect X, joined at the center of our sexes.\n\nFalling into an easy rhythm, we started to grind on each other. Waves of pleasure washed over me.\n\nHer eyes rolled back into her head.\n\nI was in no hurry. Stacey's breasts dwarfed mine in terms of size alone, but we seemed to fit together perfectly.\n\nShe tried to embrace me, but I took her hands in mine and pinned them against the pillows.\n\nWe kissed again, the tenderness returning.\n\nSlowly making love to her, we found the perfect pace. Her skin was so soft. Her lips so eager.\n\nIt seemed we found our sync easily. Our hips moved as if we were one being, joined together in ecstasy.\n\nA little bit faster.\n\nShe anticipated my movements.\n\nA little bit harder.\n\nI matched her intensity.\n\nWhen we came, it was together.\n\nThere we lay: joined from head to toe. Riding out the orgasm knowing only bliss.\n\nWe didn't scream. We didn't claw at one another.\n\nOur bodies shuddered and seemed to melt into the bed.\n\nI fell into her arms, and she caught me.\n\nJust before the darkness overcame me, I heard her whisper so softly it could have been my imagination, \"I love you, Mallory.\"\n\nThe last time someone told me that, I panicked and ran out. But as the words echoed in my ears, it seemed fitting. And perfect.\n\nShe wrapped me into a warm embrace, and I had never felt so safe with anyone before.\n\n****************\n\nI awoke drooling on the pillow. Stacey's arm draped around my waist. Her soft breasts were mashed against my back. I'm half a head taller than her, but sometimes I like being the little spoon.\n\nMy body ached all over, but in the good way.\n\nSometime in the middle of the night, I got up to relieve myself and I closed the curtains, so the morning light was held at bay as we slept.\n\nMy hair was a mess. I reeked of sex. The space between my legs was sticky with our exertions.\n\nThe sweet taste of Stacey's pussy lingered on my lips and my fingers.\n\nEven in the darkness, her features were highlighted in the soft glow from around the edges of the windows.\n\nShe looked so peaceful. So beautiful. And so young.\n\nStacey wasn't a child. But I did have ten years on her. I was established as a doctor and professional. In three years, I could be out of the Air Force with my student loans discharged and ready to embark on a non-military medical career. I guess I could stay on for another ten years after that and retire with a full Air Force pension, but I never thought of myself as a lifetime military officer.",
        "With only another year of college ahead of her, Stacey was just starting out on her journey through life. Did I really want to weigh her down?\n\nI experimented in my twenties in college and a little bit in med school. I did a lot of crazy shit under the guise of blowing off steam. That's what you're supposed to do, right?\n\nAnd then there was Alex.\n\nSince we met eight years ago, he was always my primary. Sure, we each dated other people and even had some long-ish relationships, but Alex and I had a chemistry that I never had with anyone else.\n\nIt wasn't all about the sex, either. We were best as lovers, but also as friends. I think I knew he was safe because he lived so far away. I never had to commit to him, nor him to me. We were just happy to get together a few times a year. At least I was.\n\nBut now...\n\nWhat the hell was wrong with me?\n\nWas it the \"biological clock\" everyone keeps talking about?\n\nOr was I just tired of having one friend with benefits and I wanted more?\n\nOr was it that I now had another friend with benefits with whom I was smitten?\n\nOr was it because I knew I was going to have to explain \"it's complicated\" to Stacey, and I was afraid of how she was going to react?\n\nI shrugged to myself and tucked that little internal conversation away, then let my gaze fall on the beauty in my bed.\n\nShe stirred a few minutes later. I woke her with a kiss. First to her lips. Then I worked my way down her body, pausing only to worship her breasts.\n\nAfter that, I parked my face between her legs and ate her out to an orgasm. My tongue bathed her clit and labia with soft passes until she clenched her thighs around my head and shivered.\n\nAll the while, she called out my name like a woman possessed until her body went limp.\n\nI cuddled her until she came to, then we dressed and showered before heading downstairs to breakfast.\n\n****************\n\n\"Stop staring,\" Jenny punched me in the shoulder. \"You're making those stupid doe eyes again. This isn't high school anymore, and that's not Tommy Yang.\"\n\n\"Tommy Yang?\" I smiled at the memory. \"I haven't thought about him in forever. He was cute.\"\n\n\"Not as cute as your new girlfriend.\"\n\n\"Jealous much?\" I snorted.\n\n\"Just remember who your first lesbian kiss was,\" my friend smiled sweetly and puckered her lips playfully. \"And it wasn't her.\"\n\n\"How could I forget?\" I winked. Friday afternoon was slow. After the initial surge of guests when the doors opened, the convention settled into a steady stream of traffic. It would pick up later in the afternoon as people arrived from out of town and the locals got out of work.\n\nSaturday was the high-traffic day when there would be the most people coming by the booth. I helped Jenny out with two or three shows a year. Her wife was an accountant by trade and did very well, allowing Jenny to pursue a life as a professional artist instead of starving as an artist as she would have if she were single.\n\nWell, that's probably not right. But Jenny was able to do a dozen conventions a year and go on the ren faire circuit for the summer, while still having things like insurance and a stable home to return to for the off season.\n\n\"Did you tell her about us? Or the 'cule?\"\n\nI chewed on my lip nervously. \"No, not yet.\"\n\n\"She deserves to know,\" my friend said quietly. We both knew that when that conversation is delayed too long, bad things tend to happen.\n\n\"I wanted to see how this weekend went.\" The fidgets started. \"If it wasn't going to work out with her, that will save a lot of questions.\"\n\n\"Well, from where I'm standing, things look like they're working out,\" Jenny giggled. \"Or at least the big I-just-got-some look you both had makes me think something worked out.\"\n\nI unconsciously smiled.\n\n\"Jesus Christ, you've got it bad!\" the other woman laughed. \"She is hot. Maybe I'll make a pass at her. I'd actually pay money to get smothered by that ass.\"\n\n\"Hands off, bitch.\" There was no real threat in my voice. But I'd known Jenny since fourth grade and we've been best friends since middle school, so I can talk to her that way. \"Her ass is amazing, but her tits are even better.\"\n\nBefore she could say anything, a customer came over to look at some of Jenny's handcrafted chainmaille dice bags and she went over to close the sale.\n\nI stood there and gawked stupidly at Stacey, as she charmed the socks off one of the artists on the next aisle over who had a variety of prints of Wonder Woman displayed behind him.\n\nJust then, a shock went through my body. It started with the plug that was up my rear end, spread to the one inside my pussy and finally settled on the nub that was set against my clit. I had to bite my lip to keep from crying out.\n\nClenching my fist and gritting my teeth, I rode it out for what seemed like an eternity, but in reality was probably only a few seconds.\n\n\"I'm going to fucking kill you,\" I muttered under my breath. The fact that Alex zapped me remotely meant he was close by.\n\nThe cat and mouse game went on for about five minutes before Alex strode down the aisle in his superman costume. He tried to look innocent, but the devilish smirk betrayed him.\n\nHe stopped to give Stacey a big hug, then the two of them walked over to Jenny's booth.\n\n\"Hey, Catwoman!\" he gave me a hug, careful not to catch himself on any of the pouches on my belt or the ears on my headpiece.\n\nMy costume for the weekend was a pair of tight leather pants, calf-boots (flats, not heels), a V-neck shirt that didn't show off as much cleavage as toxic fanbois like, a black/grey leather jacket and a cat-ear headband with goggles I wore on my forehead. My hair hung down past my shoulders. I liked the more functional Catwoman costume that makes her look like an actual cat burglar, not the overly sexualised costumes most Catwoman cosplayers choose.\n\n\"I hate you,\" I whispered in his ear.\n\n\"Don't make me zap you again,\" he teased. He leaned in so only I could hear. \"I hope you saved some for me.\"\n\n\"I always save something for you,\" I batted my eyes at him. \"I might even let you fuck Wonder Woman later.\"\n\n\"She has the controller now,\" Alex laughed evilly. \"I told her to wear you out.\"\n\nMy retort was cut short as Jenny came over to greet our friend.\n\n\"Hey there, Supes!\" My two friends embraced. Jenny does not wear a costume when she's operating her booth unless she's at a ren faire, although she doesn't mind me dressing up when I'm helping her. But she does have a variety of costumes for after-hours events. \"Have you let your girlfriend in on the secret society?\"\n\nAlex and I exchanged a glance. This was a conversation we had the weekend before. \"Not yet. If things go well, we'll bring her in the circle.\"\n\nJenny shrugged non-committaly. \"Up to you. You know the rules.\"\n\nBoth of us nodded.\n\nJust then I saw Stacey wink from across the room. She raised her hand and pressed the button.\n\nI reached out to grab Alex's arm to keep from falling over.\n\n\"You are an evil human being,\" I breathed softly once I recovered. \"And you're turning her into your evil sidekick.\"\n\n\"You'll be singing a different tune later tonight,\" Alex promised. \"And that's 'Supervillain' to you.\"\n\n\"I can't believe you're making me wear this thing,\" I whined. \"Why didn't you give it to Stacey?\"\n\n\"I don't know her well enough.\" That was a lie. He did know her well enough. At least he knew her well enough to fuck her brains out and then cum all over her tits at Dragon Con. I may not remember much about that night, but I distinctly remember slurping his jizz off her chest. \"Besides, you know you love it.\"\n\nAll I could do was sigh. It was going to be a long afternoon.\n\n\"Did you just get here?\" Jenny asked.\n\n\"About an hour ago,\" Alex replied. \"Had an early flight up and then a cab from the airport. I stopped by the room to get dressed.\"\n\n\"So you're all three staying together?\"\n\n\"Yeah,\" he nodded. \"All tested, all negative. Are you in for tonight?\"\n\n\"Not a chance,\" Jenny snorted. \"This is your weekend. Miss Lovey-Dovey won't stop drooling over Wonder Woman, and I'd just be a fourth wheel. Besides, Tien and Lindsey are coming up later.\"\n\nAlex reached for his phone and started scrolling through messages. \"I thought they had to work.\"\n\n\"Lindsey got someone to cover for her,\" Jenny said. \"Maybe we can get together tomorrow night.\"\n\n\"We'll see,\" I gave Alex the \"you're not allowed out of my reach\" look. He nodded silently.\n\n\"How long are you here?\" our friend asked.\n\n\"First thing Monday morning,\" Alex replied.\n\n\"I can help you pack out Sunday afternoon, but then I've got to get back. I couldn't get Monday off.\" It was still Friday afternoon, and I was already dreading having to leave on Sunday. But at least my drive was just over an hour up to Wright-Pat. \"Stacey will probably have to leave Sunday afternoon. She's got the longest drive.\"\n\nEven though Jenny didn't ask, I knew that's what she was wanted to know.\n\n\"What do you think she'll say?\" Jenny asked.\n\nI looked nervously at Alex. He took a deep breath. \"She'll either jump straight into the deep end and she'll fuck everyone... or she'll go running for the hills and we'll never hear from her again.\"\n\n\"Fifty-fifty,\" I added. I knew which outcome I wanted, but there were no guarantees. The three of us had experience with people doing both.\n\nOur conversation was cut short again by some people stopping by the booth to look at some of Jenny's artwork and the Evil Bitch With the Button reducing me to a shaking, blubbering mess.\n\n****************\n\nWhen things slowed down, Jenny insisted that I leave with Alex and Stacey. She gave me a sly wink as I blew her a kiss and headed for the doors, taking my boyfriend and girlfriend of the week by the hands.\n\nThe three of us walked across the street, our costumes blending in with the other people attending the convention.\n\n\"You are going to pay for this,\" I growled as the elevator doors closed. I could barely stand as Stacy buzzed me over and over. She did step behind Alex, as if that would protect her. \"You are both going to pay.\"\n\n\"We have a surprise for you,\" Alex said nonchalantly. As if one of the three of us hadn't been practically cumming her brains out all afternoon. In public. While the other two just laughed at my predicament.\n\n\"It had better involve me raping that ass of yours all night long,\" I gasped through clenched teeth. \"I am going to fuck you up, Alex D'Amico.\"\n\n\"You do realise that I only zapped you three times today,\" he tried to deflect me away from his participation in the matter. For the record, it was seventeen. Not that I was counting.\n\n\"I'll deal with her after I'm done with you,\" I glared at both of them, although there was no real threat there. Stacey giggled nervously. I don't think she believed I was serious, although since she was the new person in this relationship, there may have been a part of her that was worried she had overstepped her bounds.\n\nAs soon as we were through the door, I half expected us to start tearing at one anothers's clothes, but we all knew that cosplay costumes were off limits to apparel-related abuse. I might tear the buttons off a blouse and Alex has been known to rip a tank top in half, but we had put too much time, energy, and blood into a costume to just destroy it in a moment of lust.\n\nStacey set the remote on the table in the outer room. Then she began removing her armor and other costume pieces. We helped her undress and lovingly set everything aside and out of the way.\n\nAlex undressed by himself. After all, his costume was basically some soft boots, a unitard and a cape.\n\nI hung up my Catwoman costume in the closet and took the bobby pins out of my hair.\n\nThe three of us stood there, each of us in our underwear, perhaps unsure of what to do next. If it had only been Alex and I, we would have banged out a quickie then gone out for dinner.\n\n\"I'm sorry for making you cum all day today,\" Stacey broke the silence and giggled.\n\n\"You are a horrible liar,\" I grinned. She stepped into my open arms and we kissed eagerly. \"Just remember: Revenge is a bitch, Princess. Revenge. Is. A. Bitch.\"\n\nI felt a hand reach into my vibrator panties.\n\n\"Holy shit! You are soaked.\" Alex slipped his hands into the waistband and pulled them down. I had to consciously relax my ass before the plug would slip out. I lifted my legs as he took them to the bathroom to wash them, while Stacey and I made out some more.\n\n\"Are you mad at me?\" she asked, suddenly serious.\n\n\"As in angry? No,\" I gave her a reassuring hug. \"I could never be angry with you for something like that. I love being teased. Alex knows it. That's why he told you to make me put those on. He loves that you two could torture me all day and there was nothing I could do about it. Alex knows me better than I know myself. And he knows... he knows that even though I've been trying to talk myself out of falling for you... it would not be much of a stretch... for me...\"\n\nMy voice trailed off, as if I didn't want to admit this to her. Or myself.\n\nStacey's eyes were wide, both in surprise and maybe--just maybe--hope. I took a deep breath, mostly for my own benefit. \"The only reason I'm mad... is that I'm mad about you, Stacey. Not mad at you.\"\n\n\"I'll make it up to you,\" she gave me another hug, her breasts pressing against mine.\n\n\"Promise?\"\n\n\"I promise,\" she whispered. \"I'm mad about you, too. And I don't know why. But you knew that, didn't you?\"\n\n\"Are you ready for your surprise?\" Alex returned from the bathroom. He was wearing speedo-style underwear for his costume, and with the dancer's belt off, his magic penis looked like it was about to burst through the thin material.\n\n\"What have you two been cooking up?\" I asked, not so much concerned as curious.\n\n\"Close your eyes.\" As I did, I felt Alex wrap something around my head. It felt like one of the silk scarves we used for some of our light bondage. Once it was tied, he took me by the arm, and led me to the couch and sat me down. \"Be right back.\"\n\nWearing only my bra, I waited patiently. There was some jostling and steps around the room. My heart began to race when I heard Alex and Stacey whispering to one another.\n\nIn my mind, I had a good idea what was going to happen, but the suspense added to my arousal.\n\n\"Ready?\" Alex asked finally.\n\n\"Yes,\" I replied.\n\nHe tugged at the blindfold. I blinked a few times as my eyes re-adjusted to the light.\n\nMy mouth began to water immediately.\n\nMy sex began to throb with antici... (say it!)... pation!\n\nAlex and Stacey were both naked now. They stood side by side. She absently stroked his erect cock.\n\nAnd he stroked hers.\n\nThe first thing you always notice about Stacey are here tits. They're perfect. And by \"perfect\", I mean \"huge.\"\n\nThey're round with prominent nipples standing out from her dark brown areola, which were the size of sand dollars. Very large sand dollars. They have some sag and stretch marks due to their weight, but I could touch and hold and kiss them forever.\n\nAfter I leered at her breasts for a moment, my eyes fell to the strap-on which hung between her leg. The harness fit snugly around her hips. Her cock was a translucent bright pink. I could see there was a vibrator inside it.\n\nMy nipples crinkled up and I shivered with desire for both of my lovers.\n\nI beckoned to them and we fell into a three-way embrace on the couch with me in the middle.\n\nWe kissed together, sometimes all three of us at once. When it was just two of us, the third nibbled on an earlobe or a collarbone or a neck.\n\nAll the while, our hands roamed and explored.\n\nMy palms found Alex's already on Stacey's supple breasts. I cupped his cute butt in my hands. Stacey explored my pussy, her fingers parting my labia then sinking into my wetness.\n\nAlex flicked her little clitty as I stroked him.\n\nThe touching and the exploration was almost better than sex.\n\nAlmost.\n\nAfter spending most of my afternoon being zapped by remote control vibrators on all of my private parts, I didn't need much priming up. I was ready to burst pretty much as soon as we walked through the door.\n\nAlex never needed a lot of lead time, and as it turned out, Stacy was on edge, too.\n\n\"You need to eat and fuck me,\" I moaned as they each took a nipple in their mouths. \"I don't care who does what, but you two fuckers have been leading me on all afternoon.\"\n\n\"I've never...\" Stacey stammered, pointing at the strap-on.\n\nLuckily, Alex took control. As he always does when he needs to. \"Spit roast.\"\n\nHe motioned for Stacey to lay back on the couch and pushed me to the floor on my knees.\n\nI got in between my lover's legs and began to bob my head up and down on the dildo. When I went to put a finger inside her, I found a vibrator already there.\n\nThe strap-on rested at the front of her pelvic bone. I made a big display of giving her a sloppy blow-job. Luckily, I was able to slip my hand under the harness and rub her clit.\n\nI felt Alex's hands on my hips. I arched my back, stuck my ass up to face him, and spread my legs, fully presenting my slick pussy to be used by him.\n\nBoth of us moaned as he entered me. He filled me up with one quick stroke.\n\nWith Stacey in my mouth, and Alex in the other end, I felt so full of cock.\n\n\"What are you doing to me?\" Stacey moaned. I stopped and looked up at her, puzzled. I was only blowing the strap-on for show.\n\nAlex pushed himself forward and held his cock inside me. \"There's a sensor in the dildo. If it senses movement, it activates the vibrator in Stacey's little pussy. So if she's getting a handjob, a blowjob or is fucking, she's going to feel it. The faster or harder it moves, the more it vibes.\"\n\n\"Is there a vibrator in the dildo, too?\" I continued to run my hands up and down the fake cock, now knowing what it was doing inside my... er, our... lover.\n\n\"There is, but it's on its own controller.\" Alex pulled back and gave me a series of slow thrusts.\n\n\"I want to fuck her,\" I turned over my shoulder.\n\n\"I thought you might,\" Alex winked. \"Couch or bed.\"\n\n\"That depends on what you have planned.\"\n\n\"Bed, it is,\" he said and pulled out of me. He headed for the back room, and I could see the jeweled bottom of a plug in his ass. I made a mental note to find out whether Stacey's ass was on the menu as well.\n\nStacey's eyes were glazed over as I manipulated her cock, which was apparently doing a number on her insides, too.\n\n\"Let's go, sweetheart,\" I breathed in her ear. \"You two bitches have been teasing me all day, and now it's my turn to get fucked.\"\n\nShe recovered enough to take my hand. I led her to the bed I pushed her down in the middle.\n\nHer heavy breasts fell to the sides. The strap-on stuck straight up.\n\nI mounted her quickly, wanting to have something... someone... inside me immediately.\n\n\"Your big cock fills me up so good,\" I cooed in her ear as I settled down. We kissed eagerly, momentarily forgetting about Alex.\n\n\"I want you to do this to me, too,\" she whispered dreamily. \"I want to be filled from both ends.\"\n\n\"Play your cards right and we'll make you airtight,\" I suckled on her lip and her eyes got wide.\n\n\"Yes, pleeeeeaase,\" she slurred. I guess her ass was on the menu.\n\nAlex and I had been together enough that I had a pretty good idea of what he had in mind for tonight, so I sat back on my knees and began to rock my hips back and forth on Stacey's cock, grinding my clit against her.\n\nA shiver ran through my body when the vibrator in the strap-on started to buzz. Alex smiled evilly.\n\nStacey lay splayed out on the bed as I continued to ride her.\n\n\"You are so hot,\" she reached up and cupped my breasts. My nipples hardened when she rolled them between her fingers and thumb.\n\n\"Fuck her face,\" I nodded at Alex, who was only too happy to indulge.\n\nI moved faster, knowing that it would make the vibrator inside her speed up.",
        "Alex parted Stacey's lips with the head of his cock and he started to thrust in and out of her mouth. She reached for him, but I brought her hands back to my breasts, not wanting her touching anyone but me.\n\n\"Suck that cock, Stacey,\" I whispered. Closing my eyes, I enjoyed the feeling of her inside me, which was augmented by the soft buzzing between us.\n\nLeaning over, I kissed her lips around Alex's big dick. Our tongues swirled around him--and each other--as we continued to grope one anothers's breasts.\n\nI know Alex loves getting a double blowjob. In fact, I don't know a single man who doesn't like it.\n\nHe pulled away as Stacey and I kissed, our lips no longer separated by a cock.\n\n\"Pull her ass apart,\" Alex said and reluctantly Stacey's hands left my breasts and she reached around to cup my rear end.\n\nA jolt ran through my body when the cold lube came in contact with my back hole.\n\n\"DP time,\" Alex said, trying to cover the hint of excitement in his voice. I adjusted myself a little bit and I felt him push Stacey's legs together. \"Are you ready?\"\n\n\"Yes,\" I sighed dreamily.\n\n\"What's your safe word?\" he initiated our pre-determined process for anything involving full anal penetration.\n\n\"Purple.\"\n\n\"Say it again.\"\n\n\"Purple.\"\n\n\"Say it three times.\"\n\n\"Purple. Purple. Purple.\"\n\n\"Deep breath,\" Alex put his hand at the small of my back. I lifted my head to look into Stacey's eyes. Her hands were still on my ass, pulling me apart to ready me for Alex's intrusion. \"Breathe in...\"\n\nInvoluntarily, I clenched when I felt him against my back hole. I willed myself to relax, though.\n\n\"Breathe out...\"\n\nMy eyes bulged a little when he entered me. There was a sharp pain, which quickly turned to pleasure. He didn't simply thrust inside me, but slowly waited for me to adjust to his girth.\n\nIt helped that he was--as always--very generous with the lube.\n\n\"I want you to do that to me,\" Stacey whispered in my ear. \"I want you to be the first person to take my ass... then Alex can have me.\"\n\nI think I creamed myself on the spot. I don't know if she was just saying that to entice me or if she meant it, but the thought of getting her ass cherry was the... um, cherry on top.\n\nYeah, bad idiom. So sue me.\n\nHolding Stacey inside me, I waited for Alex to fit his entire length inside my ass.\n\n\"Play with my little titties,\" I moaned to my new lover. I massaged hers in return.\n\nIf having a cock in each end was exciting, having one in my pussy and one in my ass was even better. My trust in Alex for anything that involved sex was implicit, and even though I had only known Stacey for a little while, I knew she'd never hurt or injure me.\n\nIt seemed I truly had fallen for her. I only hoped she felt the same way about me and Alex didn't mind sharing.\n\nI held both of them inside me for a moment, adjusting to the glorious feeling of having a full ass and full pussy at the same time.\n\nWhen I started to gyrate a little bit, Alex knew it was going to be okay.\n\nStacey didn't move, letting the vibrator work its magic inside me along with Alex in my backdoor.\n\nShe kissed me hungrily, running her hands through my hair. I held on to her as if my life depended on it.\n\nAlex began to move in sync with me.\n\n\"Push up,\" I coaxed the young woman in my arms. \"Use your hips... slow... slow... yes, just like that!\"\n\nSandwiched between my lovers, I felt pure bliss.\n\nIt took a few tries, but we found an easy rhythm, and soon the three of us seemed to find a natural chemistry and pace. My body tingled from head to toe as we made love, Stacey and Alex connected through me.\n\nI felt Alex push himself all the way inside me and he pressed against my back.\n\n\"Harder?\" he whispered in my ear.\n\n\"No,\" I returned. \"Just like that.\"\n\nThen he pushed my hair to the side and raked his teeth against the back of my neck. Right in that spot.\n\n\"Jesus!\" I gasped.\n\n\"Is that her favourite place to be kissed?\" Stacey giggled.\n\n\"Yes,\" Alex smiled. \"If you want anything from Mallory, just touch or kiss her there. She'll fold in an instant.\"\n\n\"Stop giving away my secrets,\" I protested weakly.\n\nSo of course, Alex affixed his lips to the back of my neck and sucked. I knew he was going to leave a mark, but it didn't matter.\n\nFirst of all, my hair would cover it. And second... well, who the hell was I kidding? I was putty in the hands of Alex and Stacey, and whatever they did to me was fine.\n\nThe three of us made love gently for a long time.\n\nAlex coached Stacey along. Telling here were to caress and kiss me. When to thrust harder and faster.\n\nBetween the vibrator in my pussy, the live cock in my ass, and the lovely woman in my arms, they brought me to orgasm easily.\n\nIt wasn't a mind-blowing, Jesus-take-me-now screamfest that would wake everyone on the floor. It was better.\n\nI felt fully content. I felt loved. I felt safe.\n\nAnd when it was over, they didn't stop.\n\nAlex withdrew from me and went to the bathroom to wash my ass off his dick.\n\nStacey rolled me over on my back then mounted me.\n\nI lay beneath her as she thrust into me. She was a quick learner and was soon using the strap-on on me with a proficiency no first-timer should have had.\n\nMy nails dug into her shoulders when I orgasmed again.\n\nI protested in vain when she rolled off me. Alex took her place soon enough.\n\nHe was much less gentle, but I didn't mind.\n\nAs my third orgasm of the night approached, Stacey straddled my face, the strap-on and vibrators gone. I screamed into her sweet little pussy as Alex pounded me.\n\nAnd when that one was done, Alex threw her down on the bed beside me.\n\nI numbly held her hand as he brought Stacey to her own mind-blowing orgasm. When he was finally spent, Alex pushed my face into her pussy and made me eat the delicious creampie he left inside her.\n\nWe fell asleep together, a tangle of arms and legs and tits and cock.\n\n****************\n\n\"Jenny wasn't kidding. That girl is gorgeous.\"\n\nOur friends Tien and Lindsey stared admiringly at Stacey and Alex as they posed for pictures.\n\n\"How old is she?\" Lindsey asked.\n\n\"Just turned twenty-one,\" I chewed on my lip.\n\n\"Does she know...?\"\n\n\"No,\" I frowned, figuring that question was coming up next. \"We were going to see how this weekend goes.\"\n\n\"Excuse me, can we get a picture please?\" a parent waved their camera at us as their kids jumped and clapped excitedly.\n\nLindsey was dressed up as a gender-bent Batman. Her buxom form filled out the tight lycra costume and her braid stuck out from under the back of her mask. Tien was also gender-bent as Robin, a lithe Asian beauty looking almost juvenile next to her partner, even though they were both close to my age.\n\nI was back as Catwoman, and the three of us gathered around the kids who wanted a picture. We all struck our signature character poses as the camera flashed.\n\n\"Thank you!\" the kids waved as they walked off, looking to get more pictures with superheroes.\n\nThe booth was busy, both because it was Saturday and because Jenny is a phenomenal artist. I had worked for her enough that she trusted me to answer questions, restock her inventory and even negotiate prices on some items. It freed her up to talk about specific work and even take commissions.\n\nI also covered for her when she needed a break, went to get some food or had to go to the restroom.\n\nAlex and Stacey were able to do their own thing, although they periodically stopped by to check in.\n\n\"I can't keep coming to these things,\" Stacey muttered as she stashed some more posters into her art tube under the table. \"I'm already a broke college student.\"\n\n\"Hi, you must be Stacey,\" Tien jumped in before I could introduce them. \"We've heard so much about you.\"\n\nStacey turned to politely greet our friends.\n\n\"I'm Tien, and this is my partner, Lindsey,\" she said. They reached out to give a friendly fist-bump. \"We're friends of Jenny and Mallory.\"\n\n\"It's nice to meet you,\" Stacey replied. \"I love your costumes!\"\n\n\"Yeah, now we just need an Aquaman and a Flash to round out the Super Friends,\" Lindsey said.\n\n\"The who...?\" Stacey asked.\n\nAlex snorted. Tien and Lindsey laughed. I rolled my eyes. Even I was too young to have seen the Super Friends on Saturday morning cartoons, but I knew who they were.\n\n\"Cradle-robber!\" Jenny snickered in my ear as she walked by.\n\n\"I hate you,\" I snarked back, before turning to Stacey. \"It was a cartoon with the Justice League.\"\n\n\"Oh, like the movie?\"\n\n\"Something like that,\" Tien giggled. \"We're sorry for laughing. It's nice to finally meet you.\"\n\nStacey seemed to accept that, although I was sure she was going to grill us later. I knew my cheeks were seven shades of red at that moment.\n\nThe afternoon wore on.\n\n\"Do you think she's ready?\" Alex pulled me aside while our friend was off to grab a soda. \"Are you ready?\"\n\n\"I'm not,\" I frowned. \"She probably is. We need to tell her before we leave. I was hoping to put it off until tomorrow.\"\n\n\"Your call,\" he said, giving me a quick pat on the backside.\n\nStacey stopped by the booth a short while later. \"Lindsey and Tien said they were going around the corner to get dinner with Jenny after the show closes for tonight. They invited us along.\"\n\n\"Would you like to go with them?\" I asked.\n\n\"Not really.\"\n\nI breathed a sigh of relief.\n\n\"I came here to be with you and Alex,\" she said.\n\n\"We didn't have dinner last night and you were staving this morning,\" I laughed. \"We need to get something before we take you back to our room and fuck your brains out.\"\n\n\"I like the sound of that,\" she winked and my heart melted. \"Although I thought I was going to be the one doing the fucking tonight.\"\n\n\"Not a chance, sweetheart,\" I blew her a kiss.\n\nMy phone buzzed.\n\nget a room, slut\n\nI glared at Jenny, who put her phone down and snickered.\n\nAlex stopped by a few minutes later. He was still dressed up as Superman and if he'd wanted, he could have left with his choice of admirers at the convention.\n\nSeveral girls and a couple of guys were staring daggers at Stacey when it was obvious she was with Alex.\n\nOf course, I knew how they felt. He's young and muscular. Chiseled in all the right places but still boyishly handsome. My only problem with him is that he can eat whatever the hell he wants and doesn't have to worry about gaining weight. It helps that he works out regularly, but he still has magic metabolism.\n\nIf I had any inclination to have kids, he would have put my uterus into overdrive years ago.\n\n\"I made a dinner reservation.\"\n\n\"Does Stacey know?\"\n\n\"Not yet.\" His smirk told me he was planning something special.\n\n\"If you don't mind, I'm going to take her up to the room and change for dinner.\"\n\n\"Okay,\" I winked. \"But her ass is mine.\"\n\n\"Oh, I already know.\" He almost sounded disappointed. He'd get his chance, though.\n\n\"You should go with them,\" Jenny told me as we watched them saunter off arm in arm.\n\n\"I had my time with her on Friday. They deserve some alone time.\"\n\nNo jealousy I had to remind myself.\n\n\"She's a sweet girl,\" Jenny said. \"Not the type I figured for you, but she could make you very happy.\"\n\n\"What do you mean by that?\" I looked at her, miffed. \" 'Not my type'?\"\n\n\"You like guys. And girls who are more tomboyish. Not full-figured women like Stacey. I couldn't turn you into a lesbian.\"\n\nI shrugged. Jenny did know me and my usual preferences. I couldn't even say for certain what was the root of my attraction to Stacey. But I just knew the mere thought of her made me smile.\n\nAnd horny.\n\n\"It's slowing down here. If you want to leave, I'll get Tien to cover.\"\n\n\"Not yet,\" I checked my watch. \"Although I may walk around the floor and see who else is here.\"\n\n\"Suit yourself,\" Jenny shrugged. \"Thanks for coming up this weekend. And bringing Alex and Stacey. I haven't seen you this happy in a long time.\"\n\nI blushed. She reached out and spontaneously gave me a hug. I returned her embrace, remembering why she was my best friend.\n\n****************\n\nThe second I opened the door, all I heard was Alex let out a guttural yell from the bedroom.\n\n\"Fuck!\" he shouted. I quickly closed the door so no one down the hallway heard.\n\nI then heard a muffled scream, along with the tell-tale sound of Alex's hips slapping against Stacey's ass.\n\nMy first instinct was to tear my clothes off and go join them, but I didn't, opting to carefully set my costume aside, and to give the lovers some time to themselves.\n\nThey continued fucking. Peeking into the bedroom, I saw Stacey on her knees, her wide rear end up in the air. Alex's hands pressed into Stacey's shoulders, driving his weight into her with each thrust.\n\nAfter her orgasm, he never let up. She limply absorbed everything he gave her, her hands grasping on to the sheets. At this point, Alex was fully in control and she was just along for the ride.\n\nI shed the remainder of my clothes and crept up to the door. Absently diddling myself, I watched my lovers enjoy one another.\n\nAlex's butt was firm and clenched every time he thrust into Stacey. Her ass, in turn, rippled with each thrust.\n\nBetween her legs, I could see his cock sawing in and out of her. She was so wet, they made that glorious squishing sound with every movement.\n\n\"I'm going to cum again!\" Stacey's muffled voice was strained with pleasure.\n\nMy hand on his shoulder caused Alex to let up.\n\nI gave him a mischievous wink as I lay back on the bed and wiggled my way under Stacey's pussy.\n\nShe jumped at my touch, but when I wrapped my arms around her thighs and pulled her pussy into my mouth, she started to grind into my face.\n\nThe three of us seemed to find a natural rhythm, as if we had been making love for years, not just a couple of encounters together.\n\nMy tongue lashed her pussy and flicked against the bottom of Alex's cock when I could reach him.\n\nHe built a steady pace once he found his stride. Stacey began to convulse when another orgasm approached.\n\nBetween having Alex inside her, and me worshipping her pussy, the cum took her quickly.\n\nShe let out a howl and then exploded all over us. It wasn't a full-blown squirt, but her pussy flooded and it leaked out with each thrust. I lapped her juices up hungrily as Alex continued to fuck her through the orgasm.\n\nWhen it subsided, he pulled out, then grabbed me by the hips and drew me out from under her.\n\nThere was a wild, feral look in his eyes. I knew I was about to get pounded into next Thursday.\n\nStacey lay on the bed, exhausted, her hair falling over her face. I took Alex's hand and scampered up the bed, so I was laying on my back next to Stacey.\n\nI spread my legs and Alex entered me without pretense. It's not like I needed the foreplay.\n\n\"Do it,\" I hissed. \"Fuck my little cunny.\"\n\nAnd then he was off.\n\nIn that moment, I was just fuckmeat. A cunt for him to get off in. All I had to offer him was three holes and two tits.\n\nHe didn't last long. But he didn't have to.\n\nMy wrapped my arms around his shoulders and let him rut into me.\n\n\"I'm cumming!\" he growled.\n\n\"Do it!\" I coaxed. \"Cum all over me!\"\n\nThrashing wildly on top of me, I felt him go off inside me, coating my insides with cum.\n\nHe collapsed a moment later, his body dead weight on top of me.\n\nI turned to my right and saw Stacey's eyes glazed over, a dreamy smile on her face. Her ass was still up in the air, her tits mashed flat against the bed. Her body covered in sweat.\n\nShe reached for me weakly. I took her hand and smiled, our fingers intertwining.\n\nAlex twitched and lifted his head. He blinked to clear his head and grinned sheepishly.\n\n\"I need a shower,\" he said, and pulled out of me, his cock still semi-hard. If I'd wanted, I could have blown him back to full mast, but I let him go.\n\n\"So do I,\" Stacey to roll off the bed.\n\n\"No,\" I grasped her hand and pulled her back to me. She fell into my arms.\n\n\"I stink,\" she protested.\n\n\"I know,\" I kissed her with my lips that were still covered in her juices. \"I want you to smell like you just got fucked for the rest of the night. Your sweet body belongs to Alex this weekend, and to me. And I want every man and every jealous bitch to know that you're ours.\"\n\n\"I'm yours,\" she looked me in the eyes. \"I will be yours forever if you will have me.\"\n\n\"You have no idea,\" I whispered aloud before I could stop myself.\n\nWe lay on the bed canoodling as the shower ran.\n\nI didn't want to let her out of my grasp. I sensed she enjoyed the physical intimacy as much as I. But deep down, I also feared for my future. I didn't know if I would have her in it.\n\nI've never felt that way about anyone before. And I'd known her for less than a month!\n\nWhen the door to the bathroom opened, Alex emerged, not even wearing a towel.\n\nStacey and I watched him dress, silly smiles on our faces. When he put on a shirt and tie, I knew we had to put some effort into our appearance.\n\nFinally, I patted her hand and we got up. Luckily, I had packed a nice sundress and woven hat. Stacey wore a yellow and red blouse and skirt set with a pair of heels that showed off her meaty calves.\n\nThe three of us groped one another playfully as we prepared for a night out.\n\n\"Where are we going?\" Stacey asked, putting the final touches on her make-up.\n\n\"Just down the street,\" Alex replied cryptically.\n\n\"I want to buy dinner tonight,\" she said firmly.\n\nAlex made a face. \"Not a chance. I made a reservation at a very expensive steakhouse, and I'm pretty sure it's out of your price range.\"\n\n\"I'm not rich, but I have a job and I can afford to take you out for dinner,\" Stacey didn't back down. \"You did so much for me at Drago Con, and I want to do something for you. I don't want you treating me like I'm some kid or your plaything, or that I owe you. I know I'm younger than you and I don't make as much money as either of you, but I want to be partners. Together. As... as a three... um, threesome.\"\n\nMy eyebrow went up. Alex and I exchanged a nervous glance.\n\n\"We would never treat you like you owe us anything,\" I said softly.\n\n\"I don't think you would, but I feel like I'm freeloading off you guys.\" There was some underlying frustration in her voice. It was pride, pure and simple. But also something else: maturity. \"You took me out last time, and you're paying for the room and you got me a pass for this weekend. I just want to pull my weight.\"\n\n\"Okay, you're on for dinner,\" Alex said evenly. We continued to dress and left our hotel room, Stacey's arm in Alex's, and mine in hers.\n\nOur reservation was at Morton's which a block over from the Hyatt Regency. We strode down the street, not caring about the envious stares of other people.\n\nAlex spoke to the host and got us a private booth in the back away from anyone else. He probably slipped him a twenty without Stacey seeing.\n\nBoth of us made a point to order items that were in the middle of the price range and we passed on wine or drinks with dinner.\n\nThere was some light conversation until our orders were placed.\n\n\"You want to talk to me about something,\" Stacey said once we were left on our own. Her tone was not accusatory. Just curious.\n\nThe three of us sat there in silence for a long moment. I started to feel faint. Alex reached over; his touch was steadying and grounded me back in the present.\n\n\"We want to know if you are as interested in us as we are in you,\" he started cautiously. \"Whether that's individually or us as a group.\"\n\n\"I thought you were just friends with benefits.\"\n\n\"We are,\" he continued. \"And you are welcome with us, if that's what you want.\"\n\n\"I've never just had a fuckbuddy... er, fuckbuddies,\" Stacey said softly. \"I don't know how that works. I think I like the idea of falling in love.\"\n\n\"I'm afraid of falling love,\" I said quickly. \"I don't want to be vulnerable or hurt.\"\n\n\"I fall in love fast,\" Alex joined in. \"I fall in love with people all the time. And I spread myself out with a lot of people.\"",
        "The words hung over us for a long moment. Our salads came, and we just picked at them.\n\n\"We're in a polycule,\" I blurted out, not quite ready to have this conversation, but it seemed we were going to have it anyway. \"Do you know what that is?\"\n\nStacey shook her head.\n\n\"The textbook definition is: it's a network of people in non-monogamous relationships,\" I continued. \"But for us, it means a bunch of us have relationships with one another and other people, too. I am most intimate with Alex, but I have other relationships with people in our 'cule. Sometimes it's romantic, sometimes not.\"\n\n\"Like you and Jenny?\" Stacey observed.\n\n\"Jenny and I haven't been an item since college,\" I smiled at all of the memories with my friend. \"But we've known each other forever, and she's still my best friend. We talk all the time, and she and I have a different relationship than Alex and I do.\"\n\n\"How does it work?\"\n\n\"You do not have to join,\" Alex said. \"But you do have to respect the choices we've made. Mal and I would like to pursue a relationship with you, both together and separately. But you are in control of that, and we will respect your decisions. You can meet everyone, or you can stay with just us. Mal and I disclosed our relationship with you--not by name--so the other members of the polycule know that we have started a new relationship. That's why we all had to be tested before we could be with any of the other members.\"\n\n\"What if I want to meet some of the others, but don't want to have sex with them?\"\n\n\"You do not have to have sex with anyone. Ever. Not even with us,\" I said firmly. \"If anyone pressures you or tries to force themselves on you, or even if you just think they're creepy, you need to tell one of us, and the group will take care of it. Consent and communication are what makes it work.\"\n\n\"How many people are there?\"\n\nAlex looked away for a second, counting in his head. \"About forty. Some people just pop in every now and then, and some are exclusive with only a couple of members of the group. Most of them live on the east coast, although there is a sub-group out in Utah and one person is overseas right now in Italy.\"\n\n\"Can I see how it goes?\"\n\n\"Of course, you can!\" I reached across the table and gave her hand a sympathetic squeeze. \"We know exactly how you feel, and you should not feel pressured in any way.\"\n\n\"Am I allowed to be jealous of your other partners?\"\n\n\"Yes, jealousy is completely normal,\" Alex said reassuringly. \"We both have feelings of jealousy at times. But you do have to communicate. If you join the group, we will call you out for being passive-aggressive or not addressing anything that might be an issue. Your feelings are completely valid, but if they turn into harmful actions, then we have a problem.\"\n\n\"Tell her,\" I coaxed him.\n\nIt took Alex a second to say the words. He and I had this conversation after we got back from Dragon Con. \"I am jealous of Mallory when it comes to you. I know she has feelings for you. Stronger and more intense than any she's ever had for me. And we've been friends for eight years now. I wanted her to feel that way about me, but she fell for you almost right away. And I think you feel the same way about her.\"\n\nStacey looked between us, stunned.\n\n\"Sometimes I think you like Alex more than you like me,\" I admitted my own fears. \"I don't want to be your 'experimental phase'. And I don't like long-term relationships. They scare the shit out of me. But if you asked me to resign my commission today to be with you, I'd seriously think about it.\"\n\n\"I am afraid of breaking you up.\" Her words were so soft, I almost couldn't hear here. \"I see how you are with each other. And I want to feel that. I want to feel that with both of you. But I don't want you two to break up. I want you to live happily ever after.\"\n\n\"Only if you're with us.\" The words were out my mouth before I realised I said them.\n\nAny reply from Alex or Stacey was cut short when our entrees arrived. We ate in silence for a few minutes. A somber air hung over us.\n\nIt took me a few minutes to process our impromptu confessional. It seemed both of the other people at the table were have similar internal conversations.\n\n\"Are Lindsey and Tien in your... polycule... too?\" Stacey asked quietly.\n\n\"Yes, they are.\" Alex replied.\n\n\"Have you been with them?\"\n\n\"Yes, we have,\" he replied. \"Me, more regularly than Mallory.\"\n\nShe looked over at me curiously, but didn't press the matter. \"They said they were going to be getting together later... would you like to join them? I don't want to get between you and your friends.\"\n\n\"We wanted to spend this weekend with you,\" I said. \"We wanted to know if there was something more after Dragon Con. Something... real.\"\n\n\"Thank you,\" she whispered and wiped her eye.\n\nWe finished dinner with a little more small talk. No dessert.\n\nStacey picked up the bill before Alex could grab it. I think she might actually have tried to stab him if he made a play for the check. But she paid it without even flinching.\n\n\"I want to spend the night in,\" she said.\n\nAnd that was that.\n\nLuckily, I had a couple of bottles of wine in the fridge. When we got back to the room, we changed into some more comfortable clothes, but it seemed no one wanted to jump right into bed.\n\nInstead, after some indecision, I broke out Cards Against Humanity.\n\nAlex plugged a Roku into the TV on the wall, and started up Fellowship of the Ring (Extended Edition, of course) which was streaming on HBO Max.\n\nBetween the booze and the card game, the three of us were laughing and having a good time. I was happy that Stacey seemed like she wanted to connect with us in a way other than just the fucking.\n\nI also learned a lot about her sense of humour, which turned out to be more risqu\u00e9 than I had thought.\n\nWe ended the night in a pile on the bed with the Fellowship fighting at Amon Hen. Alex leaned back against the headboard. Stacey cuddled against him, his arm wrapped around her shoulders.\n\nI lay at Alex's feet, my head in Stacey's lap. I melted at her touch as she ran her fingertips through my hair and massaged my scalp. In that moment, I would have done anything she asked.\n\nA little while later, I woke up drooling on Stacey's sweatpants. She hadn't moved. Neither had Alex. Still she absently stroked my hair.\n\n\"What business does an elf, a man and a dwarf have in the Riddermark?\" sounded from the television.\n\n\"Have a good nap, sleepyhead?\" Stacey's voice was tender. Blinking the sleep out of my eyes, I turned to look into her big brown eyes, and only smiled dumbly at her. \"I wish we could stay like this forever.\"\n\nI touched her thigh under my head. Not sexually. Just to be close to her.\n\n\"I just want you to hold me,\" she said. I think she was talking to both of us. \"All anyone I meet ever wants to do is grab my tits, or they think I like it when they bend me over and fuck me while they play with my ass. I like it when you're near me.\"\n\nGetting up, I went to the outer room and flipped out the lights. I gathered up the blankets in the bed and sat next to Alex with Stacey between us.\n\n\"I don't want you to go home tomorrow,\" I whispered. Although I was speaking to Stacey, I realised that I also meant that for Alex, too.\n\n\"I could stay another night,\" she volunteered.\n\n\"No,\" my reply was so quick I knew I hurt her. \"I have to leave tomorrow night. I have to be at work on Monday. And I have to help Jenny pack. And you have a four hour drive home... and you have school...\"\n\n\"Now you're just making excuses,\" Alex pointed out.\n\n\"I can't...\" My voice trailed off as I choked back tears. \"I can't...\"\n\nStacey wrapped her arms around me, with Alex around her. They let me be until I could finally speak.\n\n\"I can't imagine waking up alone,\" I sobbed, a decade's worth of trauma making its way to the surface. \"I'm afraid you'll leave me... and... I don't want to be alone again.\"\n\nEven though I'm the oldest of the three of us, I'm clearly the least mature. Or maybe I was just due for a breakdown.\n\nAlex turned the television off. Stacey drew me into her comforting embrace as Alex went to the bathroom. He returned and Stacey left me in his arms as she took care of her business.\n\nWe curled up together with me clutching on to Stacey as if my life depended on it. Alex spooned up behind me and held us both.\n\nI wasn't the only one crying.\n\nThe three of us drifted off to sleep. On the one hand, I never felt more loved in my life. On the other, I knew when I woke up, it would be our last day together for a long time."
    ],
    "authorname": "HLD",
    "tags": [
        "polyamory",
        "polycule",
        "genderfluid",
        "threesome",
        "bisexual",
        "cosplay",
        "super friends"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/super-friends-with-benefits-ch-02-1"
}