{
    "title": "Finding Love after a Broken Heart 02",
    "pages": [
        "Chad's Point of View\n\nHe was filling in for another police officer which had called in sick. I went through the security check and just about tripped when I noticed him. I don't know how his uniform didn't rip, it wasn't that he was fat, oh God, he wasn't. He was built. His biceps were something else, I'm sure they were bigger than my thighs. And let's talk about his thighs and butt, all I can say is WOW!\n\nI made the excuse to one of my coworkers that I forgot my phone in my car so I could leave the building and come back through the security line. I wanted to see what his name is and I hope the cop that called in sick is out for a few days. I left the building and waited a few minutes and came back in. I waited my turn to go back through security and caught his last name, it was Disano.\n\nHe smiled at me, but I'm sure he didn't even notice me. I know the officers come on duty at seven-thirty in the morning, and I start at eight, so I might have to make it a point to get here a little earlier each morning so I can watch him come in. I wonder what time he walks from the parking lot. I know officers, park in the west lot, where I'm required to park in the east. So if I come I would have to sit on one of the benches between the two buildings.\n\nDuring lunch, I always generally sit out on one of the benches. We take shifts for lunch, there are six people in my office and half goes at eleven and the other half at noon. I take my lunch at eleven every day, so I'm hoping he's still at his post. I walked down the main stairway and exited the building. He wasn't there, so he must have his lunch at eleven also. I walked out of the building taking my lunch bag with me and sat down on one of the benches.\n\nHe walked by me, I don't even think he looked at me. He walked back up the steps to the front of the courthouse turned around for a few seconds before he went in. I finished my lunch and smiled because at least I will get to see him once more today, I know someone else will be manning the security check when I leave today. All I can hope is he has to work again tomorrow, if not, I hope I get to see him in the mornings. God I can't believe I'm going to stalk this guy just to see him. Not stalk, who says I can't show up to work an hour early every morning.\n\nThe next morning, I was too late, I showed up at seven-fifteen. I thought I was late, but I was stupid and stopped for coffee this morning. I'll have to remember if I stop for coffee I will have to do it earlier or make my own. Making my own would probably be better but hopefully I will see him walking in tomorrow. I sat there until seven-forty-five because I don't usually make it here until ten to eight. I was reading the newspaper I grabbed at the coffee shop this morning when someone ran by me. I looked up and it was him, he was running over to the courthouse. I smiled, God did he have a body, I don't know what was happening I had to meet this man, I really need to find a way to talk to him. But for now, I was happy I will get to see him again.\n\nWhen I went through security, he was wading someone, so I didn't even get to look him in the eyes. When I came out at lunch time, he was standing with a few other officers near the station. I could hear him laughing, he had a wonderful laugh. I wish I could figure out this draw I have to him, I don't even know if he's gay. He probably has a cute little girlfriend at home, God do I envy anyone who gets to drape themselves on his arm. Sometimes I think he was looking right at me, he is always wearing his sunglasses and I can't see his eyes. But you know how you get the feeling you're being watched, every once in a while I would get that feeling.\n\nFrom that day on I made sure I was manning my bench by seven, he would come strolling in from the parking lot anywhere from seven-ten to seven-fifteen. He was always fully dressed with his side arm on, sometimes it wasn't, and he would carry a backpack slung over his shoulder but usually, he was already armed. He always wore his sunglasses, even if it was cloudy, so I could never see his eyes in the morning. Sometimes he would walk in with a few officers sometimes just by himself.\n\nOne morning, oh God, I was so glad I arrived earlier than normal, he jogged by me. He was running, he must have come in early and was going to shower in the station. God I wish I could be a fly in the shower room, I would love to see what he was packing. But he jogged by me, his running shorts, I don't know how he couldn't give himself a ticket for indecent exposure. They were your typical running shorts but I just wanted to stop him and rub my hands all over his exposed thighs and the muscle shirt he had on. The scrap of material which was covering his chest, he had the triangle top half, wide muscled shoulders and a very tapered waist and his ass, again I don't know how he wasn't ticketed for indecent exposure, I could've fainted looking at him.\n\nOne afternoon I was standing talking to Mark, an officer which is permanently assigned to the courthouse, when another officer walked up. \"Hey Ryan, how are you doing today?\" Mark asked.\n\n\"Not bad, are you coming tonight for poker?\"\n\n\"No, wife will kill me if I miss going to dinner with the in-laws tonight.\"\n\n\"Shit, we need you.\" He laughed. \"We need to win your money.\"\n\nI went to walk away telling Mark to have a good day when he stopped me. \"Ryan, do you know Chad?\"\n\n\"Only know of him in passing.\"\n\n\"He is a pretty good poker player.\"\n\n\"I wouldn't say that, I'm only marginal.\" I didn't want to boast.\n\n\"You want to come, the more the merrier, and you might actually like playing with us. If you can handle being around a bunch of cops.\" Ryan said.\n\n\"I've no plans tonight, so why not.\" Yeah like I would mind being around a bunch of good looking cops.\n\nWe talked a few more minutes until I really needed to get back to my office, Ryan gave me his address and told me to be there by six or so. He also stated depending on his wife, it may turn into a social event, but he was hoping it was straight poker. He did let me know it was for money, so I had to remember to stop at the ATM on the way home.\n\nI arrived a little after six. They had a table set up in the family room which the family room lead out to the back of the house, there were already quite a few people and the poker game was getting ready to start. I asked what the normal start amount was, Ryan told me sixty bucks and then laughed saying generally Jack and Eric were on their second sixty by nine. We played a few hands, I won a couple of them.\n\nJust before eight-thirty I folded and said I was hungry, I asked where I could put my chips and they just pointed to the mantel. I walked outside to grab a burger and was pulled into a conversation. When I walked back in at nine, Eric made the wisecrack I was back to win more of their money and all I could do was look at him, not Eric, Officer Disano. He was looking up at me and he had a black eye but he made some joke which I didn't hear and the next thing I knew he was pushing me towards his chair and he left out of the room at lighting speed. God did his hand in the middle of my back feel wonderful, it was like a piece of the puzzle I had been missing since I was born. It Felt Right.\n\n\"Who was that?\" I asked Eric when I sat down, I would've asked Ryan but he jumped up and followed Officer Disano.\n\n\"Oh, that was Tony.\"\n\nI was dealt into the next game, Ryan and Tony never came back and I was starting to wonder if Tony didn't like I was there. When we played another game, I folded and told them I needed to get home, it had been over thirty minutes since Tony left to go get a chair from the basement. So I knew he really didn't want me around. John told me to stay but I told him I really needed to get home. John walked me to the door and watched me leave.\n\nI had a crappy weekend, I had spent three months watching Tony and he turned out to be a dick. I had found out through the grapevine, he was gay but didn't date. I thought he would at least be social, but he left the room and didn't come back. I know I shouldn't have cared so much, but there was still this draw to him and it depressed me that he didn't live up to my expectations.\n\nI didn't show up Monday morning to watch him come in. I decided I needed to start looking for someone else, I had been alone now for a year and I had just turned twenty-three. Officer Disano wasn't wanting anything from me, so I need to quit him. It was hard not showing up, he was like a drug to me, I found myself in the parking lot early every morning that week, and I was yelling at myself not to get out of the car. I made it the entire week, by staying in my car. The next week was a little easier, I didn't pull in until seven-thirty, but it helped on Tuesday night my cousin Mike came for a visit.\n\nI told Mike all about Tony that I was stupidly in love with a stranger and what happened at the poker game. Mike told me, it was okay to be stupid sometimes but now I know he was a dick it was better that I stopped obsessing over him. Easier said than done, but maybe since Mike will be here until Sunday, it will keep me from going into work early.\n\nWednesday night I took Mike out to dinner, we walked in and I stopped dead in my tracks. \"What's wrong?\" Mike asked.\n\n\"That's Tony.\" I just glanced in his direction.\n\n\"Laugh like I just told you a funny joke and grab my arm.\"\n\nI did, I laughed and grabbed Mike's arm, I was watching Tony in my peripheral vision, and I could see him drop his head when the hostess walked us near him to a table in the back. He didn't stay long after we sat down, I know he still had more than half his dinner still on his plate.\n\n\"Oh, he's interested in you.\" Mike offered.\n\n\"How do you know?\"\n\n\"You might have not been staring at him when we passed but I was, he couldn't keep his eyes off you.\"\n\nThe next day, I was in my office when Ryan came in and asked if I wanted to do lunch. I told him what time I could go and he said he would be outside waiting. We went to a little diner around the corner, it was just on the other side of the west parking lot.\n\nAfter we ordered Ryan looked at me seriously. \"I'm only going to ask this once, are you interested in Tony?\" I was shocked he was so blunt about it. \"Chad, I need to know this now?\"\n\n\"Yeah, but he isn't interested in me.\" I hung my head.\n\nRyan sighed, \"I'm going to say this once and if you ever repeat it, I will deny it.\" He looked me in the eye. \"Tony has some issues with commitment, they are solid reasons and I'm not going into them with you today. He's interested in you and he can be a bonehead, dig your claws in and hang on. Do you hear me?\"\n\n\"Yeah, I do.\" I smiled, Tony was interested in me.\n\n\"What are you doing tonight?\"\n\n\"My cousin is in town and has been most of the week, so just hanging with him.\"\n\nRyan laughed and I looked him. \"That's who you were with last night, why don't you bring him over to my place tonight?\"\n\n\"Yes.\" I smiled. \"Who's going to be there?\"\n\n\"John and his wife Sarah, Anna and myself, and I was going to invite Tony over.\"\n\n\"I don't know.\"\n\n\"Do you want to see if you could have a relationship with Tony or not?\"\n\n\"Yes.\" I conceded.\n\n\"Then come over, Tony will be there, he can't say no to my wife and please bring your cousin.\" He smiled at me.\n\nWe finished lunch and walked back to the courtyard through the west parking lot. Ryan waved to me as I walked towards the courthouse and he walked towards the station. I called my cousin on my way to my office and told him what happened at lunch and we were going over to Ryan's for dinner. Mike just laughed at me and asked what time, I told him we have to be there at six.\n\nWhen we arrived at Ryan's there was one other car, I hoped it would be Tony's but when John answered the door, I realized it had to be John's and frowned a little. We were ushered in, it was weird being around all the officers, they tended to be tall and built, not like Tony but still had some muscle. I was so small compared to them, and Mike he fit in, at least in the height.\n\n\"Sorry Mike and Chad, we seem to be running a little late here.\" Ryan stated.\n\n\"And if Tony doesn't get his ass over here, I swear to God I will drag his ass over by his ear.\" Anna chimed in.\n\n\"Give him time to do his normal after work routine Anna, you know he has to put a little lifting in or whatever that blockhead does.\" Ryan responded.\n\n\"You're giving him too much credit, blockhead, more like dumbass.\" Anna responded.\n\nI had to laugh these are his friends, bad mouth him in front and behind his back. We were talking when Ryan yelled out, \"It's about time you came over.\" I didn't even hear the door. Then he walked into the room wearing tight jeans and even tighter t-shirt. I saw him scan the room and his eyes met mine and I smile for a second then I remembered I was mad at him and frowned.\n\nDamn why him, what's this draw to him and Ryan said commitment issues, what could they be. No relationship ends that badly that you wouldn't want anything, or is he just a field player and does like me but is staying away because he doesn't want to hurt me? He has the looks, he's only in his late twenties I'm sure. But Ryan said to dig my claws in and hold on, why, I was so confused.\n\nRyan introduced my cousin and me to Tony, he shook both of our hands. The feel of his hand in mine, felt good. Every time I touch him, this draw or want for him gets even stronger.\n\nWe all walked outside so Ryan could start grilling, we sat around the huge table, drank ice tea and beer. We had a wonderful dinner, chicken, grilled potatoes and corn on the cob. When Mike asked where the bathroom was, everyone else decided to make themselves busy all of the sudden and left Tony and me at the table alone. I refused to look at him, I didn't want to show how interested I was.\n\n\"Chad?\" Tony spoke, I could tell there was hesitation in his voice.\n\n\"Tony, you don't have to freak out. I can tell you don't like me. Mike and I will go.\" I spat back at him. \"Thanks for at least being nice to me in front of my cousin.\"\n\n\"Chad, I do like you.\" He leaned forward in his chair. \"It just scares the hell out of me.\"\n\n\"Why? You just take the chance. Haven't you been in a relationship before?\"\n\n\"Yeah, Chad, that's why it scares the hell out of me.\" I looked at him, now he was completely confusing me. \"Chad, come with me for a few minutes so I can show you something.\" I still continued to stare at him. \"Please.\" He stood up and held his hand out to me, I looked for a second before I took it and then he led me through the gate over to the house next door.\n\nHe walked me up to the front door, pulled out his keys, opened the door and then led me into the living room. I watched him walk over to the fireplace and he pointed at a picture. So I walked over and look, 'OH MY GOD' my mind was screaming. \"You're married?\"\n\n\"Was. I'm a widower. Freddy was my life. I lost him a little over three years ago.\" Shock couldn't begin to cover it, understanding hit and remorse. I looked him in the eyes. \"It's okay. It's has been a while. But I know I need to move on and it's hard. Chad the day I saw you was like a new light for me, but sometimes I'm too stupid to act on it.\" Oh did I soften, if he would've asked me to go to bed with him, I would've right that moment. \"I can be a blockhead, Chad. I know this,\" he laughed. \"Freddy would tell me that all the time. I like you, and I would like to see if we could have something.\"\n\n\"Are you asking me out?\" I wanted clarification.\n\n\"Only if you're accepting.\" I smiled, pulled him down and kissed him on the cheek, God did he smell wonderful, I had to step away from him, or I will climb him and have my way.\n\n\"Yeah, I am.\" I grabbed his hand and pulled him back towards the door. \"Let's go back over, before they miss us.\"\n\n\"So, do you have any plans for Saturday night?\" Tony asked on our way back over, we stopped outside the gate. I told him no and he smiled, I pulled out my phone and asked for his number and I quickly called it so he'd have mine.\n\n\"It didn't ring.\"\n\n\"Yeah it did, I felt it.\" He smiled at me, as he opened the gate and led me through with his hand on the middle of my back. Oh God did that just make me hard, he let go as soon as we were through the gate and we sat back down at the table to resume our conversation with everyone like we never left. A little before nine I looked over at Mike, because I knew if I didn't go home and get to bed I would not be up in the morning. And now I had a reason to be up early, I wanted to be there when Tony walked from the parking lot.\n\nWe bid our farewells for the evening, I could see Tony try to leave too, but Ryan and John held him back, I smiled and got in the car with Mike. \"So, what happened?\"\n\n\"He was married.\"\n\n\"He was what?\" Mike looked at me in shock, I know he was thinking, it was to a woman.\n\n\"His husband has passed away, his name was Freddy and I could tell how much Tony loved him. My heart actually broke for him, it just makes me want him even more now. Does that make any sense? Oh my God, when he showed me their wedding picture, I could see the pain in his eyes. I can't tell you what has drawn me to him, though Mike. Ever since I saw him a little over three months ago, there has just been something about him. I can't put my foot on it. Oh God would I like to put my foot on him, but there is this connection that I feel for him. That I just knew he was the one for me, he made my heart just come to life and now I know he really wasn't trying to be a dick to me. That he just didn't know how to express he would like to ask me out and he was basically being a blockhead as he called himself, I just...\" I looked over at Mike when I was at a red light, he was smiling at me. \"What?\n\n\"Take a breath.\" He laughed at me. \"Oh shit, I hope that you didn't go off on a rant with him like this. He's going to think you're crazy with a capital C.\"\n\n\"Do you think he will like me? There is a good five years difference in age, if not more.\" I got a little self-conscious.\n\n\"Chad, you're funny, you didn't notice how much he drooled over you before he took you over to his house.\"\n\n\"No, I was trying not to look at him.\"\n\n\"Well that is all he was doing, was looking at you. Once he found out I wasn't competition, he couldn't have cared less about me.\"\n\nI was smiling all the way back to my apartment. I told Mike I needed to sleep so I could get up early, he just laughed and dropped down on the couch. The next morning I stopped off at the coffee shop, I picked up a coffee for Tony and me. I just ordered a black coffee since that is how he took it last night and I ordered a latte for me. I hope he likes that I picked him up one.\n\nThis morning was different, I was there by seven. I had just sat down when I saw him coming from the parking lot. He smiled as soon as he saw me, and he wasn't wearing his sunglasses this morning, they were on the top of his head. He walked up to me and sat down. \"Good morning.\" He said and I smiled and handed him the coffee. \"Thanks.\"\n\n\"Well, did you have to answer a ton of questions last night? Because I had to,\" I laughed, I didn't have to answer anything, I rambled too much for Mike.\n\n\"A few. Are you coming to poker tonight?\" I nodded my head and he smiled again, so he's trying to remain a mystery to me? I wanted to ask him so many questions but I can wait until our date on Saturday, I'm hoping he won't mind.\n\nPoker was fun, we sat next to one another and took most of the pots. I don't think the other guys were happy with us. I would ask to be dealt out of sometimes just to watch Tony. I know he sort of noticed, but all the guys did. John and Ryan would hit someone if they started to say something to me or Tony. Mike laughed at me a lot when he walked through, he didn't play poker but he was having a nice time just eating and socializing with the others.",
        "When the evening ended, Tony walked me out and opened my car door. Mike just got in the car while we talked for a few minutes. I wanted to give him a kiss, but we were just getting to know one another and it wasn't like we were able to talk tonight. Tomorrow night, I can't wait; he's supposed to pick me up.\n\nSaturday I didn't know what to wear or where he was going to take me. I didn't want to dress down, but I know I didn't need to dress up. I just decided to wear khakis and a button down shirt, it's what I wear to work most days, but without a tie and sport coat. Tony showed up in black dress pants and a nice black button up, God did he look good enough to eat.\n\nHe took me to a little Italian place in town, he said he could cook better than this place, but he didn't want to show off his only skill on the first date. Then he laughed and said just because he's Italian he couldn't cook it to save his life and his family threw him out when he had turn eighteen. I was stupid and asked why and he said, isn't it obvious he's a fairy and batted his eyes at me, I laughed at him.\n\nI forget not everyone is accepted by their family. I was with open arms, my family didn't care what sex I liked as long as I was happy. I felt bad for him, but he didn't seem to care, he said he had John and Ryan and both of their families took him in.\n\nWe had a wonderful meal, and walked around the downtown area afterwards. We stopped off at my little coffee shop, had coffee and a cupcake, which just made the night that much better, because he wanted to stay with me as long as possible before taking me home. I didn't want to ask to go back to his home, I wanted to be respectful, plus I don't know if I'd been able to keep my hands to myself.\n\nWhen he dropped me off; he even walked me to my apartment door. He was polite and asked if he could kiss me. I reached up and wrapped my arms around his neck and oh God did he know how to kiss, I wanted to climb up him and put my legs around his waist, he was going to be my Muscle Man, my Muscle Mountain, I had to giggle, my Muscle Head.\n\nWhen I closed the door after watching Tony walk down the hall, Mike was sitting there laughing at me. \"I thought I heard voices so I looked through the peephole and got an interesting sight.\"\n\n\"You're just a peeping tom.\" I stuck my tongue out.\n\n\"You need to slow down, keep some of your emotions bottled up. I don't want you to get hurt by this one.\"\n\n\"He's not going to hurt me.\"\n\n\"Chad, just slow it down a bit please. Go slow with him, don't just jump in bed, like you've done in the past.\"\n\n\"Ok, gee, I'm a little free in the sex department for a few years and I'm labeled.\" I laughed at him.\n\n\"Chad, ever since you came out at sixteen you have been. I'm amazed you didn't try to get him in your bed yet.\"\n\n\"For your information, I haven't had sex in a year. When Jeff cheated on me, I knew what it was like being on the other side of the playing field. I know I can be wild, but Mike, I really want a relationship with Tony, I like him.\"\n\n\"I know you like Tony, I'm just saying take it slow with him.\"\n\nI did take it slow, I could tell Tony was afraid to be intimate with me. It was the slowest I've ever taken with anyone. We would make out on his couch, but that would be it, kissing, grinding and touching, but nothing more. I didn't stay over ever, if he picked me up and we went back to his house, he would take me home before bedtime.\n\nWe had been going out for two months before I finally decided to make a move. I was at his house one Saturday evening after Tony had taken me to dinner. We went to the local steak place, nothing fancy, we were both in jeans and t-shirts. We were on Tony's couch when I had crawled into his lap while kissing him.\n\nWe were both hard and I wanted him bad. I pulled away and got off of Tony, I held my hand out and pulled him down to his bedroom. I wanted him. When we reached his door he froze, \"Chad I can't.\"\n\nI broke a little, I could tell he saw the need in me. \"Why?\" I whined.\n\n\"I haven't done this.\"\n\n\"I know, in over three years.\" I took his hand and led him to his bed and pushed him down. I wanted him bad but I decided his first step would just to sleep in the same bed with me. \"Baby steps, Tony. Just baby steps today.\" I laid down in front of him and kissed him. \"Baby steps, Tony.\" I then turned over, took his arm and pulled it over me as I snuggled into him.\n\nIt took him a long time to fall asleep, but once he was asleep he tightened his hold on me which made me smile. When he's asleep his defenses are down, I can tell how much he cares for me and I can see how scared he is to love again when he's awake. I don't want to push him to do anything but it might be what he needs to start living again.\n\nThe next morning, I was awake before him, but I didn't want to move because he still had me held tightly in his arms. I could tell he was waking because he would move slightly, then he kissed the back of my neck. I smiled and turned over in his arms. \"Did you sleep okay?\" I asked him.\n\n\"Yeah, the best sleep I've had in a long time.\" He smiled at me, I could tell he was thinking sometime, because he frowned for a second. \"Did you?\"\n\n\"Yes.\" I replied and kissed him, then I nuzzled and kissed his neck. \"Will you trust me?\"\n\n\"I do trust you, Chad.\"\n\nI pushed him onto his back and straddled his hips. As I was kissing him I pulled his t-shirt up so I could see his chest. Once I exposed it all I wanted to do was suck his nipples in my mouth. I was sucking on them like they were chocolate kisses, he was moaning, it sounded wonderful to my ears. I moved down his chest kissing as I went and I unbuttoned and unzipped his jeans, I was trying to tug them down when he spoke. \"Chad I don't have any condoms.\"\n\n\"It's okay, we don't need them today.\" I pulled out his cock from his underwear and sucked it into my mouth, oh did he taste and smell delicious. Don't get me wrong I like a clean guy but sometimes a little salty never hurts anyone. I sucked him, I licked the underside of his cock and I massaged his balls. As I was doing this I was humping his leg, I couldn't help it, I was so hard and horny.\n\nI could feel him tense up because he was nearing his climax, I was ready for him. When he came, it was sweet, salty and believe it or not tasted a little like coffee. They do say something you eat or drink a lot of, the flavor will come out in your body fluids. So Tony must drink a hell of a lot of coffee. While he was cumming in my mouth, I was cumming in my pants, I couldn't believe I came just by rubbing up against him.\n\nI climbed back up him and kissed his cheeks and wiped a few tears away. It didn't shock me he cried, at least not completely. Tony looked up at me, \"See, baby steps.\"\n\n\"I'm sorry.\" Tony responded.\n\n\"What for?\"\n\n\"Crying, coming too quickly and not getting you off.\"\n\nI looked at him and smiled, \"Well, let's take them in order of how you listed them. One, the crying: Honey, it was the first time you were intimate with someone other than Freddy. Did I expect you to cry, not completely, but I knew it was a possibility. Two, you didn't come that quickly,\" I smiled to try to reassure him, \"but we will work on your endurance level. And finally three, I came too.\" I pulled his hand down to the front of my jeans and he felt the wet spot. \"I was a bad, bad boy, I humped your leg.\" He smiled and pulled me in for a kiss.\n\nWe snuggled for a few minutes then he ordered me to get up and strip. I was a little confused after I took my clothes off, he took them, his uniforms from the hamper and walked out of the room. I felt embarrassed just standing there nude, so I sat down on the bed and pulled the bedspread over me.\n\nWhen Tony walked back into the room he smiled at me, as I looked up. \"Now what am I supposed to wear.\" I asked, he pulled me off the bed to his bathroom, he started the shower and then proceeded to undress. I thought he looked like a God before, now that he's undressed, oh my God does he look like one. I was getting hard looking at him, when I looked back up he was smiling and pulled me into the shower. \n\nOnce we were in the shower, he washed me, I couldn't believe it. He washed my hair so gently, and then soaped up a washcloth, which he washed all of me then he sunk to his knees and took my already hard cock in his mouth. That surprised me, I wasn't expecting anything in return, I was just trying to pull him out of being scared or guilty. I think that was more the point of it, he felt guilty to be with someone else.\n\nI was in heaven, when I finally came, he had me breathing so hard and I had to lean against the wall for support. He stood up and kissed me, then literally pushed me out of the shower, he actually pushed me out of the shower. I just shook my head and grabbed a towel which was sitting on a shelf in the bathroom. I was dumbfounded; I was standing in the middle of the bedroom when he came out of the bathroom with his towel around his waist.\n\n\"Again, what am I supposed to wear?\" I asked.\n\nHe smiled, turned and started digging through a few of his drawers. He pulled out a pair shorts and a t-shirt and handed them to me. \"At least it's something. Next time you decide to hump my leg, have a change of clothes here.\"\n\nOh my God, he actually said to have a change of clothes here, is he serious? I had to smile at that one, maybe I should have pushed the baby steps a little sooner. Wow.\n\nWe went to the living room and cuddled on the couch, his clothes were way too big for me, but I should have my clothes back in a bit. Tony went to check on the laundry and switch it over. When he was gone, there was a knock at the door and in walked John and Ryan. I felt so embarrassed at that moment, they took one look at me and both smiled.\n\n\"Hey Chad, didn't know you were here.\" Ryan spoke before John could. \"How are you doing?\"\n\n\"Fine, thanks.\" They smiled at me again, I know they think I had sex with Tony. Well we did have sex but not what they were thinking, God I'm embarrassed, I'm sure I turned red. Why did I have to cum in my pants, I should have had Tony just take me home this morning and not bothered washing my clothes, but then I wouldn't have got that mind blowing blow job. I crossed my legs and tried to bring Tony's shirt around me to cover more of me, when Tony walked out.\n\nRyan saw Tony first, \"We came by to see if you wanted to do lunch and then watch the game, but we see that you're busy.\" Again Ryan smiled.\n\n\"You can go, Tony. I need to get home anyways.\" I tried to sound confident and smiled at Tony.\n\n\"Nope, not going anywhere today with the guys.\" He was looking right at me, not John or Ryan. \"They can stay and we can cook out or order in. Anyways, your clothes are in the dryer, and they won't be dry for a bit.\" He was smiling a wicked evil grin at me.\n\n\"Okay, we'll go pick-up some steaks and the girls, let's just make it a little get together. We will be back in about an hour, which should give some time for Chad's clothes to dry.\" They chuckled and left the house.\n\nOnce they walked out of the house, he turned around. \"Thanks,\" I said with a frown.\n\n\"What?\"\n\n\"Now they think that we had sex.\"\n\n\"Is that a bad thing?\" He responded as he sat down next to me. \"Are you afraid they are thinking badly about you for pulling a widower out of his depression?\" Then he hugged and kissed me.\n\n\"Yes, I don't want them thinking I'm pushing you too quickly.\" It did embarrass me for them to think it, I don't know why, it has been over three years for Tony. I'm sure they are happy to see him moving on.\n\n\"Do you need me to save your virtue, and tell them I spilled coffee all over you?\"\n\n\"Oh my God, you're a blockhead.\" I laughed at him. \"They know we went out last night. My car isn't here, and I'm sure Ryan can put two and two together.\" Then I thought about it. \"Hey, why do you want them to think we had full blown out sex anyways?\"\n\n\"I would rather them think that, than find out that I was too scared to have sex with you right now.\"\n\n\"Right now?\"\n\n\"Chad, I know you have been patient with me, too patient.\" He smiled at me and caressed my face. \"We've been going out now for two months and in a normal relationship people would be having sex by now. Shit, after the first or second date.\" He sat back on the couch and pulled me to cuddle up next to him. \"I know I shouldn't but part of me feels guilty for moving on. I know Freddy has been gone for almost three and a half years, and I know he would want me to move on. He told me so, not too long after we were married.\"\n\n\"He told you?\"\n\nTony told me of the time Freddy and he were lying in bed one day after they were married. Freddy asked him if he would date again, if he passed away. Tony told him no, so Freddy gave him three rules which Tony had to follow if he ever passed away before Tony. One, he couldn't commit suicide, two, he had to clean out Freddy's things after six months and finally Tony had to move on after a year.\n\n\"Chad, I will be honest, the first, second and even the third year I couldn't, didn't want to move on.\" Tony then smiled at me and hugged me closer. \"Seeing you that day in the courthouse and then on the bench every day, it changed everything. My world was flipped upside down and I will be honest, I was scared out of my mind to approach you. I felt like I was cheating on Freddy, I know that is silly that he's gone, but he was the love of my life, I didn't think I deserve another chance.\"\n\nOh he deserved another chance at love because he needs me, and I need him. I don't believe in ghost or anything, but maybe it was Freddy that drew us together. I had never seen him before the day in the courthouse, but I hadn't been working there long either. Maybe it was fate we found one another, I just had to smile and snuggle more up to him.\n\nTony went to check on the clothes and when he came through to go into the bedroom with the basket, I followed. I watched him take each of his uniforms and hang them in a method that they didn't wrinkle and kept the crease, he said he will iron them later. He handed me my clothes as he came to them and once I had them all I got dressed.\n\n\"Chad would you like to go somewhere with me for a few minutes?\"\n\n\"Sure, but won't the guys be here shortly?\"\n\n\"They know where everything is, but I will call and tell them we will be back shortly.\" He called, grabbed his keys and we were in his car driving. He stopped off at the flower shop, went in and came out with tulips, I thought it was weird he just sat them in the back seat and drove to the cemetery. It dawned on me, where we were going and I looked over at him.\n\n\"I hope this isn't too weird for you Chad, but I would like you to meet Freddy, I've told him about you.\" He nervously smiled at me, I think he was thinking he made a mistake.\n\n\"I would love to meet him.\" I just smiled at him, it was the truth, even if it wasn't really meeting him.\n\nTony reached in the back for the tulips and got out, he came around, opened my side and took my hand. We walked over to the grave site and I couldn't believe it, the stone was beautiful. Freddy's picture was etched in the stone. He was cute and looked so happy in the picture, then I read the inscription 'In Loving Memory of a Wonderful Man that Fell in Love with a Muscle Head.'\n\n\"You actually had that written on his stone?\" I exclaimed, I wanted to laugh but I didn't want to be rude.\n\n\"He always called me his muscle head said that he wondered how many weights I dropped on it.\" I laughed at him and Tony smiled. \"He called me a blockhead too.\"\n\n\"Does that bother you that I called you one today?\" I kind of felt a little nervous now but it just felt right, everything I do with Tony feels so right.\n\n\"No. On the contrary, it felt right.\" He stepped toward the stone, knelt down and took a rag out of his pocket. He cleaned Freddy's stone off and laid the tulips at the base.\n\nI couldn't believe he even said it feels right. Does he get all these weird feeling that we were meant to be together, too?\n\nTony stood up, stepped behind me and wrapped his arms around my chest. \"Freddy, this is Chad, the guy I've been telling you about. He makes me happy, and I know you would approve of him. I know I have to move on, Babe. I love you. Tony tightened his hold on me, then he led me back to the car, and we rode home in silence.\n\nI wanted to talk and ask him so many question. I had gotten a little out of Tony over the last two months of how Freddy passed. It was a car accident, on April Fool's Day. He thought his friends were playing an awful joke on him.\n\nI know he said Freddy had ask him to get rid of his things after six months but Tony still has everything. It's all boxed up in one of the spare bedrooms. I was just looking around one day and opened the door and was amazed at the amount of things in there and then I saw more pictures of the two of them sitting on top of one of the boxes, and I knew.\n\nWhen we arrived back at the house we could tell everyone was in Tony's backyard, but I pulled Tony down to the bedroom. \"Thank you.\" I hugged and kissed him. \"Thank you. I'm glad I can make you happy. I hope one day I will make you feel more than that.\"\n\n\"I'm sure you will.\" He kissed me, and God did he kiss me. I wish no one else was here.\n\nThe afternoon with John, Sarah, Ryan and Anna was great. I'm still very shy around them, especially since John and Ryan caught me wearing Tony's clothes. I know I shouldn't be, but I don't know what it is. In the evening Tony took me home and he walked me to my apartment, I asked if he would like to come in for a few and he told me sure. I was opening my door, he bent down and kissed me on the back of the neck, God did it feel good.\n\n\"Thank you for today Tony.\" I pulled him over to the couch so I cuddled up next to him and started kissing him.\n\n\"Babe, I should be the one thanking you.\" He stated between the kisses, and then hugged me tight against him. I wanted him at that moment, I had condoms they were older, I had them in my drawer and of course lube.\n\nI pulled him off to my bedroom, he had a look on his face, but he went willingly. I pushed him down on my bed and climbed up on top of him and started kissing him. Oh God did I want this man inside of me. I tugged and pulled on his shirt until I had it pulled off of him. He laughed at me. I was down opening his jeans before he knew what was happening. \"Chad, slow down a little.\"\n\n\"Tony, I want you.\"\n\n\"Chad, no problem, we did this, this morning, we can take our time here.\"\n\n\"No, Tony. I want you, I need you inside me.\" Tony shutdown, he froze, he even stopped breathing for a minute and I could hear his heart rate increase. \"Tony?\" He didn't move. \"Tony?\" I even felt Tony go from being hard to soft, he wasn't ready at least not yet. I looked up at Tony and I could see the fight in him. I climb back on top of my mountain man and kissed him. \"It's okay Tony.\" I smiled. \"Baby steps, we got you comfortable giving and receiving oral again.\" Tony even laughed at that one. \"I will get you making love to me sooner than you think.\" I smiled an evil grin at him.\n\nTony chuckled a nervous laugh. \"Babe, I'm sure you will. You have this control over me, I can't explain.\"\n\nWe just cuddle for a little longer, then he left. The next morning I was back at my post on the bench with coffee for the both of us. I did this on the nights I didn't stay with him but it was nice on the nights I stayed because I would cuddle up next to him at night, he was so warm. It took a week of convincing but he finally would go back to his normal routine of coming home and working out in his weight room. It's how I found out he still had all Freddy things, I was snooping around while he was lifting, I would watch him but it would get me too horny so I had to stop.\n\nOne day I was in my office and Captain Davidson walked in and asked to speak with me in private. There was no private place in my office so I asked if he would like to take a walk and he agreed.",
        "\"I've heard you're dating Office Disano?\"\n\n\"Yes Sir, I have.\"\n\n\"I'm sure he has told you everything about Frederick Peterson?\"\n\n\"Not everything, but enough, yes. I know they were married and he was killed in a car accident.\"\n\n\"You got the basics, you understand, Freddy was Tony's life, he wouldn't just take his coat off to lay in a puddle for him to keep his shoes dry. Tony would've fucking laid down in it.\" The Captain looked at me, I think to gage my reaction. \"I can see Tony falling for you like that. I don't need one of my best officers screwed up for a long time again. I need, no, I'm checking to make sure you understand, if you're playing with this man's heart, you will have a lot of people to deal with.\" I literally swallowed hard. Then he smiled at me. \"Did I scare you?\"\n\n\"Yeah.\"\n\n\"Are you playing with Tony or do you really like him?\"\n\n\"One I can't believe I'm getting vetted by the Captain. Two, yes I really like Tony, I don't know what this draw I have to Tony, but I've been drawn to him since the day I saw him. Three, I don't intend to break his heart but really who does when they are in a relationship.\" The Captain smiled at me and grasped my shoulder.\n\n\"Well said Chad, I just know what Tony was like before the accident and after. I see a light glowing again in his eyes and it makes a lot of us happy over in the department. I had to ask his buddies what was going on.\" He chuckled. \"I even saw the two of you on the bench in the mornings talking and it didn't click.\"\n\n\"So I passed?\" I laughed and smiled nervously.\n\n\"Yeah, but I will still be watching to make sure you don't hurt our Tony, understand.\" The Captain smiles and nods. \"Also that Tony doesn't hurt you. Thank you, Chad.\"\n\nDuring the entire talk we had walked completely around the courthouse, the Captain nodded his head at me when he said thank you. He didn't even wait for my thank you in return before he walked away. I can't believe how protective Tony's friends are of him, but I don't know how bad it had gotten. Considering we've dated over two months and still haven't had sex, he still feels strongly committed to Freddy.\n\nI decided tonight I was just going to push him, we got off work and went out to dinner. I asked Tony if we could stop at the corner pharmacy on our way home. He walked in with me, he started walking towards the snacks thinking it's where I wanted to go. But when I pulled him off into the pharmacy area to the section where they have the condoms and lube, he questioned me. \"Chad?\"\n\n\"Tony, it's time. It's okay Babe.\"\n\nTony just nodded his head and reached for some condoms and I grabbed up the lube. I was smiling and he just shook his head and walked ahead of me, taking the lube from me. When he paid for them and was back out in the car, I could tell he was trying to calm himself. \"Baby steps, Tony, if it doesn't happen tonight, there's tomorrow.\"\n\nTony made himself busy everywhere in the house, he was doing anything he could making sure the dishes were all clean, laundry was done and everything was in its place. I could tell he was scared. \"Baby steps, Tony.\" I smiled at him. \"Ok, pushed baby steps, but you can do it.\" He laughed at me when I pulled him off to the bedroom and started kissing him.\n\nIt seemed to relax him a bit. He was still dressed in his work uniform, so I unbuttoned his shirt and slid it down his arms and kissed his chest. God is he a mountain of muscle and so much taller than me. I wanted to touch him all over but I couldn't while he was standing so I quickly unbuttoned his pants and let them slide down, along with his boxers. Then I pushed him down on the bed, he laughed at me when I straddled his hips. \"You're a feisty one in bed?\"\n\n\"When there's something I want, yes.\" He looked me straight in the eyes, I don't think he was expecting that to come out of my mouth. \"Do you want me to get myself ready or do you want to do it?\"\n\n\"I will get you ready. It's the least I can do.\" He smiled at me as I jumped off the bed. I undressed so quickly I almost fell over. \"Okay, I've never seen you move this quick before.\" We both were laughing as I climbed back on top of my Muscle Man. I started kissing him.\n\n\"Come on Muscle Man, make me scream.\" I even flipped around and put my butt in his face and handed him the lube, he laughed. But he delivered, he squeezed my ass and even smacked it, I wasn't expecting that and squeaked, he laughed. He was nicer than any of my other boyfriends they would've just squirted the cold lube on me but he actually warmed it up in his hands before he applied it to my opening. He was so sweet and tender about it. \"See, it's all coming back to you. It feels great, Babe.\" Tony was taking his time opening me up, he didn't just shove a finger in and another and boom done, lets fuck, he was gentle. When he removed his fingers and turned me over he grabbed a condom and lubed himself up. \"How do you want me big boy?\"\n\nHe just shook his head he didn't speak until he entered me. \"Are you ok? I'm not hurting you am I?\" It felt so good I just started pushing my feet on his ass to get him to go further, I wanted him all the way. I was moaning, a good moan and it just got him to start fucking me hard and fast. And I started to scream it felt great, I loved every minute of it. I did rub myself while he was fucking me because I think he was trying not to lay down on me afraid of hurting me. And then he was cumming but it was okay, because I was cumming too.\n\nWhen he came he did forget and fell down on me and then said oh shit and quickly rolled off of me and we laid there for a few minutes. Then there was a knock at his bedroom door. \"What the fuck?\" Tony said as he jump up to grab a pair of shorts and I ran for the bathroom with my clothes, I was so embarrassed. I could hear from the bathroom the conversation between John and Tony.\n\n\"Really, what the fuck are you doing here?\" Tony said.\n\n\"Other than waiting patiently for you to finish, which man, I will say didn't take long. Just thought I would let you know, we're becoming uncles soon. Ryan just took Ana to the hospital; Sarah is in the car because she came to tell you and couldn't stay in the house. But I didn't mind.\" John laughed his way through that comment.\n\n\"You're such a pervert. You know that, right? We will be up at the hospital in a bit.\" Tony responded. Then I heard Tony come back into the room. \"Chad, are you okay?\" He did sound sincere about it. I was still embarrassed.\n\nI was sitting on the edge of the tub when Tony walked into the bathroom. \"Embarrassed.\" I looked up him. \"Do they always have to show up when we're being intimate?\"\n\nTony shook his head and chuckled. \"Well I hope they wouldn't but it seems they have lousy timing. But this time, was a good interruption. I'm going to be an uncle, so I have to go to the hospital.\"\n\nI smiled at him, it was nice he was happy. \"Well, you need to take a shower, and I will go home.\"\n\nHe shook his head, \"No, we need to take a shower and we're going to the hospital.\" He put the emphasis on 'we', I smiled. \"You're my boyfriend right?\" I nodded my head. \"Then we do things together. We will get embarrassed together, and we will meet my new nephew or niece, together.\"\n\nIt took us a little bit of time getting to the hospital, I was bad in the shower. I wanted a little more of my Muscle Man. When we finally made it, all four of them were teasing us and I turn red. \"Heard you couldn't make it five minutes man? Chad, why would you want someone who can't keep it up for longer than five minutes.\" Ryan jeered.\n\n\"Thanks man.\" Tony responded. \"Come on you're making Chad uncomfortable.\"\n\n\"Chad, you're going to have to learn to deal with this if you're going to stay with Tony.\" Sarah stated. \"Even though I couldn't even stay in the house, Big Boy?\" she snickered.\n\nI really turned red and was about to get up when Tony just put an arm across to keep me from leaving. \"Okay, we will lighten up on him Tony, for now, but if he's going to be one of us he needs to learn to roll with the punches.\" John stated with a smile.\n\nThey did stop talking about Tony and me and we talked about other things. Anna was having contractions and they were getting closer together. We weren't even pushed out of the room when the doctor would check to see how dilated she was, they just draw the curtain between the little sitting area and the bed. I've never been in a birthing room before, it was interesting to me. I was amazed Ryan didn't mind that I was there.\n\nWhen it was time for Anna to give birth we were given the option to stay or leave by Ryan. I looked at Tony and I think he saw how much I didn't want to be in the room at that moment, so he excused us both and we left to the waiting room down the hall.\n\nWhile were we in the waiting room Tony told me about the pact Ryan, John and he had made when they were teenagers. Since they grew up all alone in their households they didn't want their kids to do the same so they would make sure they each had two to three kids. When Tony came out of the closet Ryan and John said they would just have one more a piece to make up for Tony's lack of being able to have one.\n\nIt wasn't long before John came and got the two of us. When we walked in we were introduced to Katie Marie, Tony was smiling so much. I don't think I've ever seen him smile like this. And then Ryan place Katie in Tony's arms, if you could see a guy melt. I think this kid will get his heart. Everyone laughed in the room. \"Tony, she is my daughter, not yours.\" Ryan stated. We stayed just a little longer then headed back to Tony's house.\n\nOctober turned into November I was staying at Tony's more and more. I liked staying there. But I did give him his space as he did mine. When I wanted to I stayed at my apartment, he never question when I would go home after work and not come over. He had days where he hung out with the guys and I had days I would hang out with my friends. Mike came up and stayed a few days with me again. We all hung out as a group but there was a night I just hung out with him.\n\nMike of course wanted to know how it was going and details. I told him everything that was going on with Tony and me. That I loved Tony but haven't told him yet, because Tony hasn't told me. Mike said just to tell him, that maybe he's waiting for me to say it first. Like with the baby steps, he needs to be led by his hand. We both laughed, but I didn't tell Tony I still waited.\n\nI was sitting at my desk one day, Lisa my coworker's ex-husband Carl walked into the office. At first I didn't think anything of it, because I was use to him stopping in all the time, when they were married. Then I thought about it, she had a restraining order against him, so I picked my desk phone up to call for someone to come up.\n\n\"Carl, you just can't come in here like this anymore.\" As Lisa walked up to the little counter.\n\n\"Please come home, Lisa.\"\n\n\"Carl, we're divorced, I'm never coming home.\"\n\nLisa walked around the counter and they talked lower for a little while and then their argument got louder and louder until Carl hit Lisa. \"Damn it Carl.\" It's when Carl pulled out a gun.\n\n\"DON'T MOVE AND NO ONE WILL GET HURT!\" Carl screamed, Lisa went to run and Carl hit her again. \"I SAID DON'T MOVE!\" It was when Mark came into view of the door and saw what was happening.\n\nI wasn't the only one to see Mark, Terry another coworker did, which caused Carl to swing around to see what Terry was looking at and he accidentally fired a shot, which thankfully just went through a few walls and into a desk I hear. We all screamed and Carl grabbed Lisa and screamed at Mark, not to come into the office.\n\nCarl made us all move to the file room, having six people in our little file room was cramped. We were all scared, but Lisa and Carl were still screaming at each other and Carl kept swinging the gun around. \n\nI just wanted to be out of the file room I was so scared, I wanted to be in the arms of my Muscle Man. Then it dawned on me, Tony, Oh my God, Tony must be going out of his mind right now, would he come up, would they even let him come here?\n\nEvery time a police office would try to come into the office to talk to Carl, he would scream that he would shoot one of us. The look in his eyes, I started to believe him. They were talking with him, they even asked Lisa if she could please stop arguing with Carl. Which didn't go over well with Carl either, he hated that Lisa was arguing with him but he didn't want anyone else to tell her what to do either.\n\nIt was actually a while before they were able to get Carl to surrender and let us go. The police officers were all in tactical gear, I wasn't expecting to see that when we walked out of the file room and they had Carl on the ground in handcuffs. He was still begging Lisa to come home. We were lead through the building down the stairs and as they were trying to send me outside I was pulled in into the arms of my Muscle Man, and I didn't want to let him go.\n\n\"Baby, you're okay. You're fine now. I love you.\" He told me as he hugged me. I still would let him go. I just felt safe in his arms and then my mind was like he said what? Did I hear him correctly? Upstairs was yesterday's news, he said he loved me. \"Come on, Baby, let's go home. Let's get you out of here.\" Tony ushered me out a side entrance near the parking lot he parks on. When we arrived at his house he sat me on his couch and turn to me. \"Honey, you're okay. You're safe.\"\n\nI just stared at him for a few minutes before I finally spoke. \"You said you love me.\"\n\n\"I did, because I do.\"\n\nI almost screamed at him, I laughed and smiled. \"I love you too and you're such a blockhead.\"\n\n\"Why, what did I do now?\" God he was clueless, he is my Blockhead my Muscle Man.\n\n\"You finally tell me you love me when you thought you lost me.\" He hugged me close to him.\n\n\"I'm sorry it has taken me this long, but I do love you.\"\n\nFrom that day forward, he never stopped telling me, he loved me. He made sure in some way or another he told or showed me. I can see why all of his friends are so protective over Tony. He's the sweetest guy in the world, he would lay down in a puddle for his love to walk on to keep their feet or shoes dry just like the Captain said. And Tony is all mine, he's my Sweetheart, he can be a blockhead at times but he makes up for it by all the things he does.\n\nI had the rest of the week off after the incident and the next morning Tony took me to work, so I could pick up my car. I did stop off at my apartment to pick up some things to change into, but I didn't feel like staying there. So I went back to Tony's for the day, he didn't come home right away, but I didn't think too much about it.\n\nWhen he walked in, he was happy to see me. \"Hey Babe, how are you doing? Have you been here all day?\"\n\n\"Yeah, I didn't feel like being at my apartment, I hope that you don't mind.\"\n\n\"Then stay forever.\" He responded to me.\n\nI was about to walk away from him and I turned and looked at him. \"What?\"\n\nTony walked over, smiled and put his arms around me. \"Move in with me, Chad.\"\n\n\"What?\"\n\nHe started to laugh, \"Now who's being the blockhead? I want to share my home and life with you, Chad. I love you and I want you around me. Do you understand?\"\n\nI pulled back from him so I could look him in the eyes. \"Yeah, I understand, but I just don't know.\" I could see I killed him right then. \"Honey, I love you, but it's a giant step, not a baby step. Are you really ready for it?\"\n\nHe closed his eyes for the next sentence, thinking it was going to offend me or something. \"I went and told Freddy today. I know you don't understand it, you don't understand why I have to go to the cemetery and tell him. But I had to, and I told him I was going to ask you tonight to move in.\" I stared at him and he walked away. \"I know I'm fucked up, that I have to still seek the approval of my dead husband.\"\n\nTony walked off to his bedroom, I wanted him to know I did understand so I followed. \"Honey, I do understand. You were with Freddy for eight years. I know he was your life, but you're my life now.\" He was facing away from me, so I walked around him to face him, actually to look up at him, he did look down at me. \"I love you, Tony. I love you. I'm just not ready to move in. Can you understand?\" He kind of smiled. \"Yes, we've been together for four months, just give me some time.\" I looked up at him and smiled.\n\n\"Alright.\" He hugged me.\n\nI started staying more and more nights a week with Tony, until it was almost every night. I just felt safer with him and it was nice to cuddle up with him at night. Every time I would show up with more of my things it seem to make Tony happier. I had most of my clothes at his place before December, he made room for all of my clothes he never complained once.\n\nRyan and Anna started asking us if we could watch Katie so they could have quote unquote a quiet dinner together. I just think they either want sleep or to have sex. Katie is a very spoiled baby. She likes to be held, it's their fault, but mainly, Anna's moms. When she watches Katie during the day, she didn't let her out of her arms.\n\nBut as long as you get down on the floor with her she is okay, like on her back and she playing with something in her hand for a few seconds, or when I had her on her stomach she would hold her head up. She just wanted a lot of attention so we also ended up holding her a lot. She loved Tony, I don't know if it was his deep voice or what, but she loved when he would hold her and talk to her. Even when we're over at Ryan and Anna's when she is crying he will pick her up and she will stop crying when he starts talking to her when he's holding her against his chest. We all just smile when we see it, Tony is a natural parent.\n\nChristmas with Tony was amazing. I've never experienced anything like it with a boyfriend before. I know I'm only twenty-three but I've had a FEW boyfriends and none of them have ever treated me this nice on any holiday, be Christmas, Valentine's or even my Birthday. I can't believe this man is true, this has to be a dream and I'm going to wake up any minute now.\n\nWe were due to spend the whole day with Ryan's family, not just Anna and the baby, his and her mom and dad, and later in the afternoon John and Sarah were coming. So when we woke up Christmas day, we were just lying in bed relaxing, enjoying just being alone. We had put up a little tree in the living room. It wasn't anything to say, WOW we're in the Christmas spirit. I still think it's going to take Tony some time.\n\nHe asked why I didn't want to go home for Christmas, I just looked at him. I couldn't leave him alone for the first Christmas we were together, do I tell him? \"Honey just tell me.\" He asked again.\n\n\"I didn't want to leave you alone on Christmas.\" I finally stated after I hemmed and hawed. \"Because you finally took the steps to love again. I just didn't want for you to spend your first Christmas without me.\" God I sounded stupid.\n\n\"Oh, is that all.\" He smiled and laughed. \"Okay.\"\n\n\"What do you mean is that all?\" I asked, I was thinking I did a nice thing by not going home for Christmas and he said 'Oh'. I went to get out of bed and he would let me. \"Let me up, Tony.\"\n\n\"I can't, I don't hear them yet.\" Tony responded.\n\n\"What are you talking about, them?\" I got up from the bed and went to leave the room.\n\n\"Chad, I really think you should put something on.\" He smiled at me.\n\nI just stormed out of the bedroom anyways, he quickly got up and jumped into shorts and a t-shirt and grab my little robe I like wearing. Mike came out into the hallway because he could hear how bitchy I had gotten to Tony. \"Chad, I suggest that you get something on.\" I stopped and my mouth just dropped.\n\n\"Mike, what are you doing here?\" I went to hug him and he stopped me.\n\n\"Chad, go get dress, I love you but I don't want to hug you naked.\" He stated with a laugh, I turned around to Tony, he was grinning and holding my robe open.",
        "\"How did he and who else?\" I looked at Tony.\n\n\"Oh My God, Chad?\" Tony ran forward before I could turn around when my sister Pam screamed and laughed. Mike pushed her back into the living room.\n\nTony pulled me back to the bedroom laughing. \"Babe, get dressed, I love you.\"\n\n\"Tony, how and when did you do this?\" I was just stunned, my sister and Mike were here. We both took a quick shower, and I ran out into the living room after getting dressed and not only was my sister Pam there but my whole family.\n\nMy parents had me young they were both seventeen, so when they had another kid they did it right and waited until they had finished school and got a job. My grandparents watched me when they needed help. Pam didn't come along until I was nine and April two years after. So Mike and I are more like brothers than cousins, we're the oldest in the family both accidents. My Aunt Marge was married, they just said when it happens it happens, just wasn't intending on being just after they got married.\n\nI couldn't believe Tony paid for everyone to fly out and had them staying at his house, I never noticed he had cleaned up the two spare bedrooms. In the one he has all of Freddie's things, it had a queen size bed so that was perfect for my parents and the other room had two twin beds which were for my sisters. I just didn't know where Mike was going to sleep which Tony said not to worry he had it cover, which he did Mike was staying in Tony's weight room on a blowup mattress.\n\nIt was only a few days but it was the best few days with my family, sadly Tony had to work. The life of a cop he said, but it's why he talked with Mike and arranged for my family to come out to spend the time. Tony was able to take them back to the airport it was Ryan who had picked them up Christmas morning and let them into the house so Tony wouldn't have to tell me to ruin the surprise.\n\nI'm still afraid I'm going to wake up from this wonderful dream because this guy can't be real. He's too sweet, thoughtful and kind, no wonder Freddy love him so. Tony has a heart of gold and he's such a teddy bear.\n\nTony warned me he'd be working a double on New Year's, he had told a friend prior to dating me if he had to work New Year's he would work it for him. Tony never goes back on his word, and he said just because he's in a relationship now doesn't mean he should. He apologized a thousand times to me, I was down that I wouldn't get to kiss him at midnight, but I know he's a man of his word and I would never take that away from him.\n\nWhen he went to work the morning of New Year's Eve, he kissed my forehead, I was barely awake but I remember him telling me he loved me. He called me an hour before his lunch break, I had it all ready for him and on the table, he didn't want much he just said a sandwich would do.\n\nHe walked in holding daisies, daisies on New Year's. \"How did you find those?\" I smiled at him.\n\n\"Don't worry how I get flowers. I have an hour, let's not waste it.\" He grabbed me up after sitting the flowers on the table, and I was just laughing at him as he was kissing me all the way to the bedroom.\n\nWhen he sat me on the bed, he took his gun belt off and laid it on the floor beside the bed. I jumped up and helped him undo his pants as he was unbuttoning his shirt by time he had his shirt done, I had his cock in my mouth. He was hard and moaning. \"Chad, God, please\" He physically removed me from his cock and pulled me up into a kiss. Tony quickly pulled my pants down and pulled off my t-shirt.\n\nHe laid me on the bed and bought my legs up. He went down on me and God did he go down on me, he first took my entire cock in his mouth, which sent me to the moon. Tony licked and sucked my balls and then he licked my ass and started tongue fucking me. This is the first time he has done this to me, it drove me insane he had me so hard and horny for him, I was screaming Tony's name.\n\nI don't know when Tony lube himself up but before I knew it he was exchanging his tongue with his cock and I was telling him to fuck me. I needed my Muscle Man to fuck me now. Tony was getting better at lasting longer, oh was he getting better at that and when he came, I was coming with him.\n\nHe held me for a little while but he couldn't for long before he had to take a quick shower and leave. \"I love you, Tony.\"\n\n\"Not as much as I do you.\" He said as he was getting dressed and put his gun belt back on. \"Babe I'm sorry, I won't be here at midnight.\"\n\n\"I know you are Tony.\" I followed Tony back out to the kitchen and he put his sandwich in a baggie and kissed me. I watch him pull away in his cruiser, I called Mike and told him that I can't believe this man. Mike just laughed at me and said Tony is a keeper.\n\nMy lease was up on the first of February we had everything out in the beginning of January and I even turned my keys in early, I loved living with Tony. Even Valentine's Day with Tony was special, he always knew how to treat me. I could tell he loved me.\n\nWhen April came around again, he asked if he could go to the cemetery alone, I wanted to go with him but he said he would prefer to go on the anniversary dates alone. I could see Tony was a little sad, but I smiled and let him go alone.\n\nWhen Tony came home from the cemetery, I was in the living room, \"Hey Babe.\"\n\n\"Honey, what's wrong?\" I asked he didn't look right.\n\n\"Actually nothing and everything. I don't know if that makes sense. Nothing is wrong, because I love you and I hope we're doing great, but everything because a lot is going to change.\"\n\n\"What's going to change?\" I responded\n\n\"I'm ready to let go of Freddy. He's here in my heart and always will be,\" Tony was tearing up, \"but I don't need to keep his things anymore, because I know he will always be here.\" Tony was pointing at his heart.\n\n\"So what do you want to do with it?\"\n\n\"Donate it. I can't bring myself to sell any of it, so I will donate all of it. His cameras and everything. I told you Freddy liked taking pictures, which was his job. He would take pictures for the newspaper. When his job cleaned out his office for me, they bought an entire box of cameras and lenses home along with a ton of other things. I would like to keep one of the cameras though. He had a digital one, he taught me how to use. I'm sure I will have to dig for it, but that is all I want to keep.\"\n\n\"Do you want me to help you go through it all and make sure there is nothing that you need to keep such as paperwork?\" I wouldn't want Tony to accidentally throw something away he might need later.\n\n\"Yes, I would love you to help me go through it all before I donate it. And it won't bother me, but if there is something you see that you would like, please feel free.\"\n\n\"I couldn't do that,\" I responded.\n\n\"Honey, seriously it won't bother me. If you see something please take it. I'm going to ask our friends if they want anything as well.\"\n\nWe sorted through everything and Freddy's mom and sister came over and took a few things along with some pictures, Tony was happy to give them. Some of Freddy's close friends came also, they talked about times in class where Freddy had an eye for certain things where they didn't. They all took a camera a piece. Tony only keep the pictures which he stored away in one of the bedroom closet and the digital camera and he sat it on the mantel. I will be honest, I wished that is where it stayed but Tony started using it.\n\nI would come home to pictures everywhere of me and him, a lot of just me. I had to laugh, it made Tony happy. I did notice that Tony started taking pictures of Freddy or Freddy and him out of frames on the walls or tables and replace them with us. It meant a lot to me that he was doing this.\n\nJohn and Sarah had their son, John Jr. in May. Tony and I've been together now for ten months, I couldn't believe it. I still couldn't get over how much John, Ryan and Tony act like brothers but Tony said they are that they made a pact a long time ago.\n\nSpring turned into summer and in July, it was our anniversary. Tony was sweet and took me out to the restaurant he took me to on our first date. He always knows how to make me feel loved, we even went for coffee and a cupcake afterwards, but this time I got to go home with him and we made love.\n\nMike came out to visit in October for a week. Tony apologize to Mike because he had to work, but it gave Mike and me a chance to talk freely. We were sitting in the kitchen Saturday morning drinking coffee when Mike made me sit down. \"Chad you're happy but not, what's going on?\"\n\nI couldn't believe he noticed but I should have known he would, we're too close. \"I want more. I know I'm asking for the moon. But I want marriage and maybe one day a family.\" Mike just smiled at me. \"What?\"\n\n\"Chad, give the man time. You broke in and you know he will do almost anything for you.\" Mike chucked. \"No, Tony would do everything for you. If you asked him to dress as a woman, he would ask how tall you wanted the heels.\"\n\nI laughed, \"Oh my God Mike you're right. I'm being stupid.\" And I was I needed to remember it was still baby steps with him even though he was mine.\n\nTime just slipped by before Tony and I knew it, it was Christmas again and then New Year's. This New Year's I got my kiss at midnight along with a lot more. We spend the evening over at Ryan and Anna's along with John and Sarah, after we parted for the night while we were walking home Tony was rubbing my back. I moaned it always feels good whenever Tony touches me, but he does know how to massage me too.\n\nBut for some reason he never can seem to stay focused on giving me a full massage, it might be me moaning or him kissing me and then not stopping. I might start massaging his cock too and then all bets are off the table if he finishes me or we just finish in a sweaty mess. Generally it's a sweaty mess, what am I saying it always ends in a sweaty sticky mess.\n\nOn the first of April, I knew Tony would want to go to the cemetery by himself, I didn't even ask to go. He seemed a little different when he came home, but he said nothing was wrong. I didn't want to push him, I love him so I just have to remember his first love will always be Freddy.\n\nOn Saturday which was the second of April, I was just cleaning when Anna called and asked if I would like to come over for coffee and hopefully when Tony got off work they could all cookout. I told her I would be over shortly. I finished what I was doing and left a note for Tony on the table to come over to Ryan's when he gets home.\n\nWe were all just talking the two toddlers were playing on the floor when Tony walked in with roses and he didn't change out of his uniform, of course my mouth responded before my brain kicked in. \"You didn't change? And who are the roses for?\"\n\n\"They're for you. I was hoping to do this at home, but you weren't there.\" Tony knelt down and my heart just started pounding. Tony opened a ring box, \"Chad, would you do the honors of marrying me?\"\n\nI couldn't believe it, I couldn't say anything my mouth opened and shut and I was crying. I know I was holding on to Tony, this is everything I ever wanted.\n\n\"Chad?\"\n\n\"Oh my God, yes, Tony. Yes.\" I was just screaming inside 'Oh My God, Oh My God!' I wanted to get up and run around the room and shout for joy, I was so happy. He pulled only one of the two rings out of the box, it was diamond embedded along the top portion of the band, and it was beautiful. He placed it on my finger and it fit perfectly. \"How did you know my size?\"\n\n\"Guessed.\" Tony smiled and I laughed. \"I love you, Chad.\"\n\n\"I love you too.\"\n\nEveryone hugged us, I even overheard John and Ryan asked Tony when he bought the rings. I heard Tony say he had them for a few months. I remember back in January he had something in his pocket but when I asked he smiled and said it was nothing. I saw him pull out something quick and put it in his gun safe. I wonder if it's when he bought them, but four months it took him to ask me. Baby steps I have to remember with Tony.\n\nWhen we finally were able to go home from Ryan's and were cuddling in bed, we decided on a September wedding. I think it's a beautiful time of year. It was the twentieth and we were married in our backyard, OUR. Mike was my best man and Ryan was Tony's, it was funny watching them dance, but they did just for us, we have the pictures.\n\nWhen we received our wedding photos back, the main one of us in our white tuxes sits on the mantel. Tony went to put it up there and when he did he took the one of Freddy and him down and I stopped him. I told him the one with Freddy and him belong there as much as ours did. Tony smiled at me when I took it from him and put it right next to ours.\n\nGod did time just fly before we knew it Tony and I were married for two years, both John and Ryan had two kids each and Anna and Sarah were pushing us to adopt. We kept telling them it wasn't time yet. One night I decided to ask Tony, while we were cuddled in bed. \"Babe, have you considered adoption?\"\n\nTony was silent for a minute. \"Honestly.\" I nodded my head he could feel it against his chest. \"I've been thinking about it more and more lately. Would you want a child, Babe?\"\n\nI turned over in his arms to face him there was a little light in the room. \"I've been thinking about it a lot more since I turned twenty-seven last month. It's weird. Every time Anna and Sarah have brought it up before, I really wasn't keen on the idea, but lately...\"\n\nTony cut me off. \"Yeah, lately I've been thinking about it also.\"\n\n\"Well since we're talking about it Honey, do you want to be a father at thirty-three?\" I know it isn't old but I wanted to make sure Tony was okay with it. \"You probably will be older than that by time we're cleared to adopt.\"\n\nTony laughed and smiled at me. \"I think if John and Ryan can do it, I should be able to do it.\" Then he pulled me close to him and we fell asleep.\n\nDuring the following months we started applying to become foster parents looking to adopt, we went through the hoops of what we needed to do with the state to become foster parents. And one day the agency called me, they had a three year old which needed to be placed right away. The last foster home he was in while the agency was searching for a relative of the boy, didn't want a permanent kid. He was an orphan by fire, my heart leaped for this kid. The agency even said once he's placed in our home after a few months we could start adoption procedures if it's a good fit.\n\nThey asked me if we could pick him up today, that the last foster home dropped him off and he seriously needed to be placed. I didn't even think to call Tony I told the woman yes, I would be right there and left work. It didn't hit me until I walked into our home with the little boy that I didn't tell Tony.\n\nI called Anna and she came over right away with her two kids. \"Oh my, Chad.\" She said.\n\n\"Anna, the agency called and I reacted, what am I going to tell Tony?\"\n\n\"Congratulation you're a father.\" She laughed. \"You just tell him.\" Then I show her the foster paperwork and her mouth dropped. She pulled out her phone, called Sarah and told her that John and she had to come over to Tony's ASAP that Tony might faint. She even called Ryan before he got off work and when he walked in he was carrying pizza for the kids, we ate a little while we waited but was going to cook when Tony came home.\n\nTony had to work a shift and a half so he wouldn't be home for a while. We sat and talked and I waited nervously. When he walked in I looked up at him. \"Honey, you look tired.\"\n\nTony looked at everyone and all the kids running around and took in a deep breath, I could see he was tired. \"I am, but I see we have company and an extra kid running around. Never seen him before, whose kid is it?\"\n\nJohn spoke up before anyone else could and teased Tony, \"Nice that you feel like we're a burden tonight.\" But he was laughing and Tony smiled.\n\nAnd it was my turn to speak, \"Honey, the kid is ours.\" Tony was about to walk out of the living room and he stopped dead in his tracks.\n\nTony turned around \"Say again?\"\n\n\"He's ours.\" Tony wasn't moving, everyone in the room was smiling, and I got up, walked over to tap him on his forehead and laughed. \"Babe, are you there?\"\n\nTony looked down at me. \"You said he's ours?\"\n\n\"Yes, Babe. He's ours. With option to adopt in a few months.\" God did it sound like a used car deal, 'rent this car with the option to buy'.\n\n\"Really! Wow! What's his name?\" Tony was smiling, I couldn't believe it and then the question I was dreading. He looked at everyone because everyone was looking at each other when he asked. \"What's going on?\"\n\n\"Well Honey, I didn't find out his name until I got down to the agency.\" I was grimacing.\n\n\"Okay, that's fine, what is it?\" Tony was looking at me like, 'so what's your point.'\n\nI took a deep breath and let it out. \"Fredrick.\"\n\nTony just stood there looking at me, he didn't say anything and I was hit on the leg and Freddy yelled up at me. \"Freddy.\" I looked down at Freddy, he was looking up at me and I smiled.\n\n\"Freddy?\" Tony said.\n\n\"Yeah Babe, Freddy. He's a very smart little boy for being only three.\" Tony bent down and picked him up, Freddy didn't even shy away from him. Everyone in the room stayed silent except the kids. When Tony sat him back on the ground Freddy took off running to play. I hugged Tony, \"Honey, go and take a shower and change. We were waiting to have dinner. The kids already ate.\"\n\nTony walked down the hall and I heard our bedroom door close and I looked at everyone in the room. \"It will be okay.\" Ryan stated. \"He just needs a minute, it's a lot to take in.\" Anna came up and hugged me.\n\n\"Tony will be okay, just like Ryan says. He and John have known Tony since they were small boys.\" We all sat around the living room for a while talking, Ryan almost got up and went into our bedroom to talk to Tony when he came out.\n\nAnna walked up to Tony and hugged him. \"He needs someone, please don't turn him away.\"\n\nI hugged Tony after Anna walked away. \"I'm not. It just freaks me out a little. That's all, really.\"\n\nI hugged Tony again. \"Babe, I love you.\"\n\n\"I love you too, Chad. It's okay, really it is. But I'm hungry and you know what I turn into if I get too hungry.\" Tony laughed and I smiled at him.\n\nEveryone laughed and we walked into the kitchen we were keeping meatloaf and all the fixings warm in the oven. One by one the kids were dropping and Freddy laid down on the couch with his head on Tony's lap.\n\nWe made the bedroom which was the closest to ours, Freddy's. So Tony flopped the twins and the queen beds, we stored one of the twin beds so Freddy could have lots of room but when he got older we put it back in his room for sleepovers. We adopted Freddy only after having him six months, he completed our family.\n\nWe decided one day while lying in bed, one kid one was enough, we didn't know how John and Ryan did it having two. Anna and Sarah must be running all over the place. Mike comes and visits a lot more now, he loves being an uncle. He thought about moving this way, but his girlfriend has put a stop to that. He loves her too much to leave her, as much as I would love Mike here, I don't want him unhappy.\n\nBut my parents did end up moving here, first grandkid and all. It helped my Dad got a great bonus to move, my youngest sister, April wasn't happy but once she found boyfriend it all changed. Pam was about to start college when my parents moved so it didn't bother her too much, she was already leaving to another state. So Pam didn't care where she came home to on vacations.\n\nHaving my mom here did save us a ton on childcare and I didn't have to quit my job to stay home with Freddy. I would've gone stir crazy if I had to be a stay at home dad. I did take a leave when we first got Freddy but when my parents got settled and my mom agreed to watch him every day, I went back to work.",
        "Having a kid in the house over the years I will say wasn't always a bowl of Lucky Charms. Especially when we would have all the kids, Katie and Kyle, Anna and Ryan's two and John Jr and Nicky, Sarah and John's two. I was the heavy when Tony was the softy. Having a brew of six, seven and eight year olds is not fun. When Tony is looked at as the fun one and me as the rule maker, Tony is sometimes worse than the kids. But I love him too much to do anything.\n\nTony will bring me roses a lot, there are always fresh flowers in the house. He still surprises me with daisies every now and then, I knew he knows they are my favorite but plays dumb. Because when I having a bad day or sometime the best day, he seems to know and brings them home and they brighten them even more. Tony can always get me to smile, I love him so much.\n\nToday we're celebrating our sixth anniversary, eight years together and I can't imagine myself without Tony or Freddy. I sit on the couch snuggled up to Tony, looking up at the wedding picture of Freddy and him and I think it was Freddy pushing us together, something always told me don't give up. And I'm so glad I didn't."
    ],
    "authorname": "kmillerk1",
    "tags": [
        "gay anal",
        "gay blowjob",
        "gay drama",
        "gay male",
        "gay romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/finding-love-after-a-broken-heart-02"
}