{
    "title": "No Strings Attached",
    "pages": [
        "Author's Note:\n\nAlex Franzetti runs a studio, but once upon a time, he was someone else. Nearly 30 years later, he's given up the rock star lifestyle after unbearable tragedy strikes. Em Reilly was a wild child, once upon a time, but settles down after the birth of her daughter. Now struggling with a younger brother who's threatening to go down a dark path, she's almost at the end of her rope.\n\nNo Strings Attached is the second collaboration by Cheryl Terra and Bebop3. We hope you enjoy the story!\n\n**\n\nAlex\n\nI stood at the doorway watching her. I don't like kids. I don't dislike them either, they simply don't exist in my day-to-day life so I don't really think about them much. But, something about the little girl was compelling. She was talking to a woman who was clearly her mother. They could have been twins, separated by 20 years and a few hundred dollars' worth of tattoos. The woman was shaking her head and the little girl was looking up at the acoustic guitar. \n\nWalking over, I took it off the wall. \"Hey, I'm Alex. Did you wanna see the guitar?\"\n\nThe woman smiled but shook her head again. \"Oh, no, thank you. She's just... Well, her uncle plays and she wants to. She, uh, gets excited.\"\n\n\"Honestly? It's more of a prop than anything else. She's welcome to fool around with it. Worst-case scenario, we'll re-string it.\"\n\n\"That's really kind, she'll be careful.\"\n\nThe girl was careful as she took it gently from my hands. Speaking over her shoulder, she addressed her mother. \"Mom, I can talk for myself.\" She looked up at me. \"Thanks! My uncle has electric guitars, but he said he'd teach me how to play one like this.\"\n\n\"That's great. Have you started yet?\"\n\n\"No, he's sort of busy.\"\n\nI smiled down at her. \"I'm sure he'll find the time.\" I looked around and they were still setting up so we had some time. \"Wanna try something real quick?\"\n\nShe nodded her head. C Major was probably too difficult for her small hands, so I wracked my brain for something that would be workable for her. Maybe some simple open chords to shift up and down? We could just use three strings instead of all six and she'd at least get a feel for playing.\n\n\"Mister?\"\n\nI smiled. \"Sorry. I was lost there for a second just thinking. You know 'Happy Birthday', right? Why don't we give that a try? Three chords should be doable and people have birthdays all the time, right?\"\n\nWe worked through it as people around us set up the studio to help look like a precise, arranged photo was actually impromptu. They worked and left us alone and I enjoyed the joy in her eyes when she mastered something. Her mother looked both happy and concerned. \n\n\"Are we in their way? I don't want to get anyone in trouble.\"\n\nHer mouth twitched a bit, her worried tone kind of endearing.\n\n\"Nah, it's fine.\"\n\n\"You work with these people?\"\n\n\"Sort of.\" I looked down at the little girl. \"So, you know 'Shake it Off'? The Taylor Swift song? Wanna try that?\"\n\nShe was soaking everything up like a sponge. Her smile was contagious and some of the studio employees and photographers' assistants would smile along or pat her on the head, which was sort of obnoxious. She was a kid, not a pet. \n\nWe got through the whole song once and were trying it a second time when the star of the show arrived. He was the rock star of the moment and came in with the requisite rock star attitude. He was ignoring some people while berating others and had a bottle of Jack in his hand, wearing an 80's throwback leather jacket with no shirt. \n\nThe only thing that gave him any redemptive value is that he dropped everything when he saw the little girl. \n\n\"Uncle Jimmy!\"\n\n\"Hey, there's my munchkin. You doing okay?\"\n\n\"Yeah, Alex was showing me how to play guitar!\"\n\n\"Was he?\" He turned to me. \"You Alex?\"\n\nI smiled up at him from the stool I was sitting on. \"Yup.\"\n\n\"Well, Alex, you know who I am?\" He didn't give me a chance to answer and just kept talking. \"I'm Jimmy Reilly. Maybe you heard of me? Cover of Guitar Player? Three top 20's in the past 12 months? Why don't you go back to pushing pencils or a broom or whatever you do and I'll teach my niece about the guitar.\" \n\n\"Look, dude...\"\n\n\"You deaf, Alex? I don't have time for a conversation. Want an autograph, see me as we're leaving. Pick up your little acoustic, get out and hope that you didn't get her started on any bad habits.\"\n\nI looked at him for a minute before he continued.\n\n\"Should I be using sign language? Get the fuck out.\"\n\nShaking my head, I left. Sitting down in my office, I turned on my laptop. The studio was live and I could hear everything going on through my speakers. Big Mike was talking. \n\n\"Reilly, get in the control room.\"\n\n\"What?\"\n\n\"Get in the control room or get the fuck out.\"\n\n\"Who the hell are you?\"\n\n\"Co-owner of the studio. Leave or come talk to me in the control room.\"\n\nA few seconds passed and I could hear them again, this time without the ambient noise. \n\n\"I didn't want to call you out in front of anyone and I'm gonna let you finish up, but you're not coming back. You're banned.\"\n\n\"You can't be serious. You're banning me? You think the label's going to let that happen?\"\n\n\"Yeah, I do. You know why you're here? 'Cause we're famous. Fucking legendary. Everyone wants to record here and all the best have. You really think the label is going to back your play and have some sort of boycott or something? Get real.\"\n\n\"What, cause of some dick who shouldn't have been in there anyway? Whadda ya want? I'll give him an autograph, smooth it out. Not a problem.\"\n\n\"An autograph? You have any idea who that guy is? You're the flavor of the month. Six months from now there'll be another you. Two years from now no one'll remember your name. That guy you were going off on is Alex Franzetti. Fingers Franzetti. He's been one of the greatest guitarists in the world for three decades. Fuck, you're not even talented enough to know how good he actually is. He's also my business partner. You're done. Enjoy the day, cause you're not coming back.\"\n\nJimmy started cursing and I heard a door slam. Picking up my phone, I called Big Mike. \n\nHe answered and immediately started speaking. \"Hey, it's handled.\"\n\n\"Yeah, I heard. Do me a favor. Give the girl the acoustic. Not her fault her uncle's a douche.\"\n\n\"You got it.\"\n\nI saw the girl and her mother in the parking lot through my office window shortly after. They got in their car and were leaving when the car stopped abruptly near the building. She must have seen me through the window and made her mother stop, as she bolted from the car, guitar in hand and ran over the grass and through some thigh-high bushes and banged on the window.\n\nShe mouthed \"Thank you!\" and hugged the guitar to her chest.\n\nSmiling, I mouthed back \"Welcome.\"\n\nHer mother waved as the girl was more cautious in pushing past the bushes and headed back to the car. She was a beautiful woman. Jimmy was an ass, but he seemed to care about his niece and his sister was hot, if way too young. \n\nYeah, her youth and my age didn't stop me from noticing that she wasn't wearing a wedding ring.\n\nSitting back in my chair, I started typing up my article for Guitar Player. I wrote for them under the name Curt Llama, reviewing new albums, talking about the state of the industry or pretty much writing anything that caught my interest. I decided to write about supposed prodigies who cared more about showmanship than craft. Pulling out examples of flash-in-the-pans who were supposed to be the next wunderkinds, it was pretty clear that I was referring to Jimmy. \n\nAs I wrote I could hear him getting progressively louder. I guessed that Big Mike's refusal to kiss his ass hadn't gone over well. I left the link on and listened in. He was going off on everyone that might listen and his people were trying to placate him without doing or saying anything that would irritate my partner. The simple truth is that we were bigger than Jimmy was. \n\nBeing located in Pueblo, we were out of the limelight of LA or NY. For bands or artists that wanted to remove themselves from distractions and temptations, we were exactly what they needed. We garnered a reputation as the 'go-to' studio for bands wanting to create their masterpiece.\n\nJimmy wasn't interested in producing a masterpiece, or maybe he was stupid enough to believe that he had. Living in Pueblo, his photoshoot was the result of happenstance and convenience. Legendary studio and an up-and-coming artist that could roll out of bed and be here in half an hour? It wrote itself.\n\nSo, there I was typing while he was ranting and the poor photographer tried to get some usable shots. Eventually, Jimmy must have found a guitar. He told everyone he was going to just riff and play whatever popped into his head 'cause he was so incredibly creative. He'd barely begun playing when I realized it was \"Caprici di Diablo\" by Yngwie Malmsteen. Not the easiest song to play, but not insanely difficult either. I was pretty sure he was directing the music my way, throwing down the gauntlet however he could. \n\nLaughing, I just continued to write. When he was done, he started yelling again. Big Mike had finally hit his limit and I could hear him throwing everyone out. Picking up the phone, I called our security guys and had them help clear out Jimmy and his sycophants. Big Mike was a tough, crotchety son of a bitch, but he was in his early sixties. \n\nJimmy was stumbling towards his limo, no longer clutching the bottle of Jack, when he saw me through the window. He flipped me the double bird and walked off. His niece was much nicer. \n\nWhen I was done with the article, I plugged my guitar into the audio interface, played \"Caprici di Diablo\" and then got his personal email from someone at his label. I sent him the recording with the following message:\n\nIs that what you were going for? Keep practicing.\n\n**\n\nEm\n\n\"...that bitch ass motherfucker\u2014\"\n\n\"Watch your fucking mouth,\" I spat.\n\nJimmy rolled his eyes at me, still glaring down at his phone. I took two steps across the small kitchen, snatched the phone from his hands, and turned off the ridiculously-fast twanging of some metal song before it made my nerves snap. Pepper whined from beneath the table, his tail thumping against the chair leg.\n\n\"Hey!\"\n\n\"I don't want to hear this crap right now.\"\n\n\"This crap is how I make my fucking living, Em.\" \n\n\"It won't be for long if you keep acting like you did today.\"\n\n\"That was\u2014\"\n\n\"\u2014bullshit, it was absolute fucking bullshit.\" I peered down the hallway, where a mostly off-key rendition of The Birthday Song floated out from Leia's bedroom, and lowered my voice to a hiss. \"You embarrassed the shit out of me.\"\n\n\"I embarrassed you? You were supposed to be directing my goddamn photo shoot and you took off!\"\n\n\"You threw a tantrum! An actual tantrum, Jimmy! In front of Leia!\"\n\n\"That old dude\u2014\"\n\n\"\u2014was teaching Leia how to play the guitar, because all she's talked about for the past six months is how Uncle Jimmy says he's gonna teach her to play the guitar and Uncle Jimmy's going to come this weekend and show her how to play the guitar and Uncle Jimmy promised that next weekend\u2014\"\n\n\"I've been a bit busy, if you hadn't noticed,\" he said icily. \n\n\"Maybe if you put down the booze once in a damn while\u2014\"\n\n\"Who the hell are you to talk? You were just as\u2014\"\n\n\"Don't even go there with me.\" I turned towards him, and whatever look was across my face made him shut up. \"Yeah, I did stupid shit when I was twenty, too. But I didn't have the kind of money you do, and that severely limited the stupid shit I could do. And hey, it worked out for me, because I got Leia out of it and you damn well know I wouldn't trade her for anything in the entire universe, but you know what she didn't get out of it?\"\n\n\"A father. I fucking know, you've told me\u2014\"\n\n\"Then why do I have to tell you again?\"\n\nHe folded his arms across his chest, looking far more like a pouty, emo pre-teen than a man of twenty with a music career. I took a breath and ran a hand through my hair.\n\n\"Jimmy, I get growing up wasn't easy\u2014\"\n\n\"Oh, and here we go with the traumatic childhood bullshit\u2014\"\n\n\"Fuck off, are you serious?\" \n\nHe fell silent as I glared at him.\n\n\"I'm sorry I left you at home when I took off. You were ten. I was eighteen. I clearly couldn't even take care of myself, let alone my kid brother, as proven by the fact that I got knocked up like, two years later.\"\n\nHe put his hand on his hip in an insultingly exaggerated effeminate pose. \"'And I could have let you just live on the streets when you got kicked out, Jimmy, but out of the goodness of my heart I took you in and for the past five years I've done nothing but love you and support you.'\"\n\nHis high-pitched mocking of my voice hurt me more than it irritated me, though it was incredibly irritating. Taking another deep, shaky breath, I swallowed the hurt and put my hand on the counter.\n\n\"I will be taking Leia to get guitar lessons from someone else.\"\n\n\"I can do it for free. Someone else is gonna cost you\u2014\"\n\n\"I don't care. I don't want you teaching her right now.\"\n\nJimmy fell silent, pain and confusion furrowed into his brow. His mouth opened but for once, he didn't speak.\n\n\"We've had this conversation a million times. You're drinking too much. You're partying too much. You want to live the rock star lifestyle, fine. But you will not be exposing my daughter to that kind of toxicity while you do.\"\n\n\"I'm not\u2014\"\n\n\"It's not up for discussion.\" I folded my arms and leaned against the counter as Jimmy stared at me. \"You are drunk. Like, literally right now. You're drunk, and you have been for hours. I'm sorry I wasn't the perfect role model for you, I'm sorry we had shit parents, but you can't keep throwing that in my face. I'm trying to do better for her. And right now, you aren't better.\"\n\n\"You can't.\" The words were slurred, but beneath the layers of bourbon-scented breath was a pleading desperation. \"She's my niece, you can't stop me from seeing her.\"\n\n\"I can, actually, but I won't. That would hurt her more than it would hurt you. But you're not going to be teaching her to play guitar, and as long as you keep acting like you did today or showing up drunk or high or whatever, you're not going to be allowed around her.\"\n\nJimmy wasn't used to being told \"no\" anymore. Part of it was the amount of ass-kissing thrust upon him by his manager and fans, but a larger part of it was the intense anger he could muster up in a single stare. His magazine covers all featured that seething scowl, a trademark of his that he had been using to intimidate people for years.\n\nIt didn't intimidate me, however. Not only had its effect on me worn off after years of seeing it, but it was also hard to feel intimidated by someone whose dirty diapers I had changed and who I'd had to mother in place of our actual mother.\n\nStill, I felt myself breathe a sigh of relief when Jimmy stood up and stumbled from my kitchen to the front door. I watched as he got in the back of an expensive black car that looked completely out of place in my neighborhood.\n\nI knew its departure also meant my doorbell would be ringing in approximately five minutes. When it did, I had already opened two beers and had a bag of popcorn in the microwave.\n\n\"It's open!\" I called over the sound of Pepper barking.\n\nThe pattering of two children running\u2014one from her bedroom to the front door, the other from the front door to the bedroom\u2014was immediate. \n\n\"Baylee, be polite! Say hi to Em.\" \n\n\"Hi, Em!\" called a young voice.\n\n\"Baylee I got a guitar!\" shrieked Leia.\n\nWith that, the girls were off, and Kelsie was wandering into my kitchen.\n\n\"So what's the latest?\"\n\nKelsie was my best friend. We stuck together like flies on paper. Baylee and Leia had been in the same class since kindergarten and had thankfully been practically inseparable since. As far as I knew, Kelsie and I were the only two single moms in the girls' class, and that was reason enough to ostracize us. It didn't help that both of us looked... well, a little less clean-cut than most of the moms.\n\nI had taken most of my piercings out after having Leia, but Kelsie kept all of hers: eyebrow, lip, nose, and tongue were the visible ones. She had a few tattoos, but not many; I would need to wear a floor-length turtleneck poncho with mittens to cover all of mine. She dyed her hair multiple colors; mine was naturally dark. \n\nTogether, we were clearly those moms. Other moms joked about drinking coffee until it was socially acceptable to drink wine. Kelsie and I had definitely shared a flask of whiskey more than once during a soccer game. \n\nI told her the story of the day as we sat at the kitchen table, drinking beer and eating popcorn, throwing the occasional piece to the dog begging at our feet. \n\n\"So this guy, Alex, is showing Leia how to play guitar when Jimmy walks in and just tears him a new one. And like, he's clearly someone with the studio, because he just... gave Leia a guitar. Like, had one of his people give it to her. And I'd already started taking off because I was humiliated by Jimmy's tantrum, so I didn't even get to thank him.\"\n\n\"Hmm. Was he cute?\"\n\nI had to think about it for a moment. The short answer was yes, really. There had been something enticing about Alex, something almost familiar, but I couldn't put my finger on it. It was like being reminded of someone, but not being able to pinpoint who. \n\n\"I mean, he was... I don't know. Sure. In that khakis-and-golf-shirt kind of way.\"\n\n\"Ah. Dad-bod?\" \n\n\"No!\" I laughed, shaking my head. \"Just like, not my type. You know. Probably too clean-cut. He had some great tattoos though.\"\n\n\"We both know you love your tattoos.\"\n\n\"I do. He was also like, way older than me.\"\n\n\"Hmm. Too bad.\" \n\nI took another sip of beer. \"Anyway. Now I have to figure out how I'm going to pay for guitar lessons.\" \n\n\"Jimmy should be paying for them.\"\n\n\"I'm not asking Jimmy for money.\"\n\n\"If you would just get over your pride\u2014\"\n\n\"That's not it. I just... it's weird. He already spoils Leia. He paid off the house.\"\n\n\"He could have bought you a better house.\"\n\n\"I like this house.\" I shook my head before she could speak again. \"It doesn't matter. I'm not asking Jimmy for money.\"\n\n\"Why don't you go back to the studio tomorrow? Ask this Alex for suggestions and thank him for the guitar?\"\n\n\"Not a bad idea, actually.\" Finishing my beer, I grinned. \"And hey, two birds, one stone. Leia still has to sell an entire case of Girl Scout cookies. Maybe she can charm some of the staff while she's there.\" \n\n**\n\nAlex\n\nBig Mike and I each had our own office and shared a common office where we met with clients. We had no need to be in the center of the city and space was cheap, so we built for comfort. I'd dragged a decent chair into his office and we were going over monthly bookings. He sat on a metal folding chair behind his desk as we worked. It was a weird point of pride with him and he'd look at my ergonomic chair with disdain whenever he saw it. \n\nFor people outside the industry, musicians and singers were legends. In the industry, people like Mike were the legends. His basic uniform had been the same since the '80s; shorts to his knees, black socks, sneakers, and a Hawaiian shirt. A large man, he'd been terrifying back in the day. He'd managed some of the biggest bands in history and was as professional as anyone could hope for, unless he felt someone was messing with what he termed \"my people.\"\n\nIf he felt you'd ripped off a band somehow, start running. And don't try to hide in hell, 'cause I was pretty sure that Satan was terrified of Big Mike and would give you up in a minute. Have a deal with a site manager and he didn't live up to his obligated percentage of concession sales during a concert? Mike paid him a visit and the situation was rectified immediately. The label playing games? He'd hire the biggest, scariest lawyers you'd ever seen and forensic accountants that would find Jimmy Hoffa just to rifle through his wallet. ",
        "Mike was the center of more urban legends than Ozzy.\n\nHe was older now and retired from managing bands, but that hadn't mellowed him much. The thing that pissed him off the most? If anyone let it be known that he was actually the nicest guy they'd ever met. There was a local father and daughter duo that played charity gigs around the area. The girl played the violin, the father played pretty much anything else; guitar, another violin, bass, etc. Big Mike was visiting his mom at a senior center they played at when he saw them playing for the residents. They sold CDs after the shows and donated the money to homes for homeless vets. \n\nThe quality was crap. Mike had to fix that. So that day, he had them in a studio and they were playing as we went over the books. Gratis. He also paid for the engineer and the artist who worked on the cover. His only condition was that they never, ever mention his involvement. He'd disappeared from the studio a number of times over the years for up to two weeks at a time. No word, no notice; just gone. I was the only one who knew it was to take a musician to rehab and stay by their side until they got over the initial hump. \n\nHow did I know? I saw the books. Our studio paid for most of it and I was fine with that. I'd be a hypocrite not to be, as Big Mike was the person that picked me up from the gutter and had been my sponsor ever since. \n\nGlasses on the end of his nose, one hand rubbing his greying beard, Mike spoke up. \"Black Soul Records is paying for last week's cleaning. All of it. Aroldis Gomez thought it would be a good idea to try to get some chick's vocals while she was cumming and was banging her on the floor next to the mic. Fucking degenerate. That shit was overplayed when Guns and Roses did it.\" He paused without looking up. \"Don't. I'm telling ya, Alex, don't fucking touch it.\"\n\nMy finger had been headed towards his little hula-girl statue that he kept on his desk. If you flicked her hips she moved back and forth, grass skirt swaying. He hadn't even glanced my way.\n\n\"What?\"\n\n\"Seriously, don't 'What?' me. Just don't touch her.\"\n\nSmiling, I went back to my laptop. He preferred using a print-out. We spent another hour going over end-of-month reports and when we were done, he hit a button on a console and the recording session from the father and daughter came on. \n\n\"Think you can play something?\"\n\n\"For them? No, why? The father's got it.\"\n\n\"Yeah, but his name won't sell copies.\"\n\nI stared at him before speaking. \"You know I'm not into that. I don't want my name out there. Just let all that shit die.\"\n\n\"It's been, what, twenty-five years? Get over it and grow a fucking pair. The money goes to vets, you fucking commie.\"\n\nMy neck and ears were growing hot and I was sure I was turning red. \"Look, just make a donation. I'll cover it. It... You don't know...\"\n\nMike interrupted me, speaking softly, voice laced with anger. \"I don't know? Me? I was there, Alex. Every day and every night. Out of rehab, back in rehab, meeting after meeting after meeting since then. Don't tell me I don't know. It wasn't my family and I respect that, but you don't get to say I wasn't there. You paid your debts. She wouldn't want you to keep hiding. You know that.\"\n\nStanding, I clenched my fists. \"I said no.\"\n\n**\n\nEm\n\n\"Listen, Ms...\"\n\n\"Em. Just Em is fine.\" \n\n\"Ms. M, unless you have an appointment\u2014\"\n\n\"No, Em. E-M. No Ms. Just Em.\" \n\nMike's beard almost twitched with a surly annoyance and whatever modicum of politeness he'd managed to muster fell.\n\n\"Listen, lady. I know you were here yesterday, but people don't walk in here and demand to see Alex without some sort of...\"\n\nI waited for the rest of the sentence, but his eyes had left my face and were staring somewhat behind me. I followed his gaze to see Leia had finally walked up with her case of Girl Scout cookies.\n\n\"Isn't that a little heavy for you?\" he asked.\n\n\"She insisted,\" I muttered. Leia could be as stubborn as they came sometimes and had insisted on hauling the case of cookies by herself from the trunk of the car. \n\n\"It won't be if you buy some Girl Scout cookies from me, Mister.\" \n\nMike's beard twitched again. His lips pursed slightly. Then he smiled, noticed that I saw him smiling, and the surly annoyance returned to his face.\n\n\"Why'd you need to see Alex again?\"\n\n\"When we were here yesterday, he was... teaching her. And you said he gave her the guitar.\"\n\nHe nodded, then shook his head.\n\n\"That means this is Reilly's niece. He's been banned.\" \n\n\"So her uncle was a dick and that means we're banned, too?\"\n\n\"I wanna be in a band!\" Leia said brightly. \"Mom, can I be in a band?\" \n\n\"No, banned as in not welcome here,\" he said. \n\nI watched the moment Leia wrapped him around her little finger. Her shoulders drooped just slightly, her lower lip curled beneath her teeth, and she made the tiniest sniffling sound before he caved completely.\n\n\"Of course you're welcome here,\" he grumbled. \"C'mon in. Let me grab that case, kid.\" \n\nI tried not to laugh. Leia's reaction had been completely genuine. She had no idea that most people would do anything just to see her smile. One glance of her big, innocent eyes could melt even the coldest of hearts. My life was going to be hell the day she figured out how easily she could manipulate people.\n\nWe followed Mike through the studio. When we got to the office area, he pounded on a closed door.\n\n\"Alex. You got a drop-in.\" \n\nHe looked at Leia and jerked his head to the other door.\n\n\"Got your money in here, kid. Let's see how many boxes I can afford.\" \n\n\"...the fuck you talking about, a drop-in?\" floated through the door as it opened. Alex was frowning, but it changed to an expression of confusion as he saw me.\n\n\"Uh...\"\n\n\"Hi. We met yesterday, sort of.\" \n\n\"Yeah.\" He stared at me. \"The kid I was teaching.\"\n\n\"That's my daughter. Leia. She, um... well, I wanted to say thank you, you know, for showing her how to play, and more importantly giving her the guitar. I've never heard 'Happy Birthday' so many times in my life.\" \n\nAlex laughed, his face brightening as a smile spread across it. That trace of something familiar, something tempting, was there. A small glint in his eye, maybe. I couldn't quite put a finger on that or on the way it made me feel before it faded away again.\n\n\"I, um, also wanted to apologize. My brother's an asshole. He has that rock star syndrome and it's... something.\" \n\nHe shrugged, waving it off. Alex didn't seem to be much for words, so I continued.\n\n\"Anyway, I wanted to thank you, apologize to you, and then ask a favor.\" \n\n\"What's that?\"\n\n\"It's when you ask someone for their help with something, but that's not important right now.\"\n\nThe quip was out of my mouth before I could stop it. I cringed, but Alex started laughing again.\n\n\"Yeah, all right. So kind of\u2014what'd'ja call it, fay-vurr\u2014are you looking for?\" \n\nI couldn't stop myself from smiling, but I did shake my head.\n\n\"Her uncle said he'd teach her but... well. I'd rather he didn't. So I thought, maybe it wouldn't be too expensive to just... I mean... do you have any recommendations? People who might be willing to take Leia on as a student?\"\n\nAlex rubbed the back of his neck. The sleeve of his golf shirt fell back slightly, revealing even more of the tattoo on his bicep. I tried very hard not to stare, and even harder not to wonder if he had more tattoos hiding under that clean-cut look of his.\n\n\"I'm sure I can think of someone. Let me think on it a bit.\" \n\n\"Sure. No problem. I mean, it's not the\u2014\"\n\nI was interrupted by a squeal of delight coming from the other office. Alex raised an eyebrow and stepped past me, going to the other door. I followed him and poked my head in.\n\nLeia was watching a dancing hula girl sway her hips back and forth, giggling madly. Mike was sitting behind a desk, elbow resting against it and hand covering his mouth. It did nothing to hide the smile in his eyes as she played with the hula girl. \n\nAlex, on the other hand, looked completely flabbergasted. \n\n\"What are you doing, sweetie?\" I asked.\n\n\"Mom!\" She hustled away from the hula girl on the desk, eyes sparkling. \"Mister Mike bought all the Thin Mints!\"\n\n\"Yeah, well...\" Mike coughed gruffly. \n\n\"She touched the doll,\" murmured Alex, slightly awed.\n\n\"What?\"\n\nAs if she had just noticed him, Leia turned to Alex. She grinned wildly, a dark splotch between her white teeth gaping through. She'd lost a tooth just last week, and the change in her smile tugged at my heart the same way she tugged at everyone else's. \n\n\"Hi, Alex!\" \n\nHe almost fell over when she rushed up and hugged him. Leia was slight so I doubted it was from the force of her hug, and more from the shock that washed across his face. \n\n\"Thank you so much for the guitar, thankyou-thankyou-thankyou!\"\n\nHe patted her shoulder almost uncomfortably before smiling as Leia let go of him. There was almost a sadness in his eyes as he looked at her, hidden just so, replaced by the usual look of reluctant adoration that people got when they looked at Leia. \n\n\"No problem, kid.\" \n\nLeia managed to sell the rest of the case of cookies to staff around the studio, though true to his word, Mike had bought all the Thin Mints she had. Alex walked us out after she shoved a handful of money into my purse, telling me sternly that she knew exactly how much was there and it had to go into her envelope at home.\n\n\"Can I leave you my number?\" I asked Alex.\n\nHe smirked. \"That's pretty forward of you.\" \n\nI laughed in spite of myself. \"I meant for the recommendation.\"\n\n\"Oof. There goes the ego boost.\" \n\nHe grinned, that smile brightening his entire face again, and I noticed again just how good-looking he was; not just for a guy who was years older than me, but actually really good-looking. \n\n\"Maybe I was just trying to be subtle about it.\"\n\nAlex's eyes met mine for the briefest of moments and I knew, right then, there was an unmistakable spark. I knew he must have realized it too, and for a moment I thought he was going to continue flirting with me.\n\nInstead, he cleared his throat and chuckled before taking his phone from his pocket. \"What's the number? Oh, and... your name, I guess. I never did get it from you.\"\n\n\"It's Em.\"\n\n\"Next letter?\"\n\n\"No, just Em. E-M.\"\n\nHe looked up. \"What's it short for? Emma?\"\n\n\"Don't push your luck,\" I laughed. \"Just Em.\"\n\n\"Last name?\"\n\n\"Reilly.\" \n\n\"Really?\"\n\n\"Yeah, it's...\" \n\nHe started laughing and I realized he was joking.\n\n\"Give me a couple days. I'll see if there's anyone good in town.\"\n\n**\n\nAlex\n\n\"Alex? Knock, knock.\"\n\nStartled, I looked up. I'd been staring at my laptop but not seeing anything for a few minutes. \n\n\"Yeah, sorry, Lini. What's up?\"\n\n\"Just wanted to go over the schedule for next week if you have a minute.\"\n\n\"Sure.\"\n\nLini was our office manager. Part of a pretty good church choir, she was the one who organized the singers when they all came in to use the studio. We must have been pretty messed up that week because she came back a few days later, told us how we were screwing everything up and presented us with a five-page typed up document about systems we could put in place for scheduling and sharing space and half a dozen other problems she saw. Then she told us we should hire her and let her take care of it. \n\nBig Mike looked at me, I nodded and he told her she was hired. That was more than fifteen years ago and it was the best decision we've made. I don't care how good we were as a collective of engineers, studio musicians, and assorted staff; if we couldn't book enough hours, we wouldn't make money. Within a month Lini had us running like clockwork.\n\n\"Anything for today?\"\n\n\"Uh-huh. You have a meeting at noon with Bryn. He likes what you did on what he sent over and he has some new material he wants to run by you. Sort of unfair for you two to be working together. Maybe you'll give it a rest for a while and let someone else win a Grammy.\"\n\nBryn Lake was one of the best songwriters working. Labels paid the two of us astronomical amounts of money and a piece of the back-end when they wanted sure-fire hits for someone new they wanted to push. He specialized in pop and I focused on rock. We balanced each other out and worked well together. To be honest, he was the more talented of the two of us, but he couldn't play guitar, so I had that going for me. \n\nI'd kept writing after I dropped out of the band and had gotten enough acclaim and awards after giving the songs to old friends that I was offered gigs as a song doctor. Bryn and I would write together or fix someone else's work. We both moaned and groaned to the labels about how hard it was to write in someone else's style, but it was all bullshit. We could fix something within a couple of days. \n\nHe was always either back home in England or traveling, so we did everything via teleconferencing. It was another way for me to keep my toe in the industry water without actually playing gigs. Those days were long gone. I could BS with Bryn, exercise that creative muscle, make some damned good money and live my quiet life. \n\nWhen we were done talking, Lini left and I went back to staring at my laptop. There was just something off about that little girl and her mom. It kept poking around at the edges of my brain. Eventually, I sighed and picked up my phone.\n\nHer voice was slightly raspy like Amy Winehouse's had been. It sounded oddly warm and as if it was from someone who had truly lived life. \n\n\"Hello?\"\n\n\"Hi, Ms. Reilly. This is Alex from Afterglow Studios. We, uh, well, you know who I am.\" \n\n\"Oh, hi Alex. You can just call me Em, you know.\"\n\nThere was a hint of teasing in her voice, a flirty kind of undertone that I liked. As much as I liked it, it also made me nervous. \n\n\"Uh, listen, I put some thought into it and I'd be happy to teach Leia.\"\n\n\"Oh. That's... Look, I wasn't trying to get you to do it yourself, I just wanted recommendations or to see if one of the people there were looking for a side gig. No offense, but are you... There's no right way to put this, so I'll just say it. You any good?\"\n\nI chuckled. \"I think I can handle it.\"\n\n\"Okay. Are most of your students advanced?\"\n\n\"No, I, uh, I haven't taught in a while. Quite a while.\"\n\n\"Yeah? And something changed?\"\n\n\"Actually, it's been too long. I enjoyed it when I taught. Immensely. I sort of put that behind me when... Well, I changed my life a lot and gave up teaching. I think I'd like to get back into it.\"\n\n\"Yeah, okay. I don't really know anything about this. How often should she get a lesson? Once a week? And... You know, I really should have opened with this. Um, I appreciate the offer and everything, but how much do you charge?\"\n\n\"It's on the house.\"\n\n\"No, seriously. I can't accept that. How much?\"\n\n\"Really, if I want to get my chops back as an instructor I need a beginner student and it wouldn't be right to charge you when I'm not on top of my game. How about $25.00? And twice a week? My schedule is pretty flexible. Let me know what days and times work for you.\"\n\n\"Tuesdays and Fridays? Say, four-thirty or five?\"\n\n\"Four-thirty works. Do me a favor?\"\n\n\"Uh, yeah, sure.\"\n\n\"If she brings any more cookies to sell, be careful where you unload your car. The red zone is for immediate loading and unloading of passengers only. There is no stopping in a white zone.\"\n\nShe laughed. \n\nI looked at the time on my laptop. It was still early. \"Do you guys have an hour free now? Might as well get started.\"\n\n\"I think so, but we have to leave right after so I can head over.\"\n\n\"Over where?\"\n\n\"Over Macho Grande.\"\n\nIt was my turn to laugh.\n\n\"No, I don't think I'll ever be over Macho Grande.\"\n\nThey arrived in less than half an hour, Leia clutching her guitar. She was a hugger and I was definitely not, so I turned as if we were going to walk back to the studio to forestall any full-on hugging attempts. As I turned to her, she looked almost hurt and I felt like shit. \n\nShe grabbed my forearm, which was a little weird. \"Where's Mr. Mike?\"\n\n\"His office. We have to pass right by it.\" I turned to her mom. \"Em, did you want to join us? We can pull in a chair from the snack room or grab mine.\"\n\n\"Sure.\"\n\nWhen we got to Big Mike's office Leia walked in and stood there patiently as Mike spoke on the phone, his back towards us. I cleared my throat loudly and he turned around. \n\nLooking down at Leia, he almost smiled and continued. \"Hey, I gotta call you back.\" He paused. \"Yeah? Well, what if I don't give a fu... crap, dammit... a darn. What if I don't give a darn? Don't like it, I'll find someone else that wants our money.\" He paused. \"Yeah, that's what I thought.\"\n\nHe hung up. \n\n\"Hey, darlin'. Here for a lesson?\"\n\n\"Yup, and I brought these for you.\" She handed him a brown paper lunch bag. \n\n\"You did? What is it?\"\n\n\"A sleeve of Thin Mints, but I froze them. They're the best that way and you like Thin Mints, so... And I put them in the bag to keep them cold.\"\n\n\"Well, that was really, really nice. How much do I owe you?\"\n\nShe looked surprised. \"No, those were from my own cookies. I bought some with my chore money.\"\n\n\"You... No, let me give you something.\"\n\n\"It's... I wanted to just do something nice. I didn't want any money.\" \n\nShe sounded hurt and it was like something broke inside Mike. \n\n\"Oh, sweetie, that was... um, okay. Ah, thanks, that was really, uh, nice. I, uh, listen, don't start crying or anything, okay? I really like them. I'll have some now. It was nice'a you to think of me.\"\n\nHe opened the bag and then the plastic sleeve of cookies and popped one in his mouth. \n\n\"Delicious.\"\n\n\"Okay, see you later! Today's my first lesson!\" \n\nShe pushed his hula-girl again, starting it swaying. The crotchety old fuck had a smile on his face. What was the world coming to?\n\nI'd forgotten how tedious it could be to teach beginners. I'd also forgotten how contagious their excitement was when they heard themselves do something the right way and produce the right tones. Leia was nothing if not passionate. She'd clearly practiced Happy Birthday and Shake it Off. \n\nShe put her hand on my arm again. \"Where did you get your tattoos, Mr. Alex?\"\n\n\"Just Alex is fine. A bunch of places. I used to travel a lot when I was younger. I'd find the best in whatever city I was in and go there.\"\n\n\"I like them. They're different than Mom's. This one looks sort of scary.\"\n\nShe'd pointed to one on my left forearm. \"It's a Japanese Oni. They're supposed to be scary. I got it done in Osaka.\"\n\n\"It's sorta cool. I want to get one when I get older. When did you get your first one?\"\n\n\"Uhm, wow. I guess I was eighteen. A long time ago.\"\n\n\"EIGHTEEN! That's... That's so old!\"\n\nEm stifled a giggle. It wasn't quite so funny to me. \n\n\"Yeah, real old. Let's get started.\"\n\nWe spent our time going over some basics. She was studiously watching her fingers as we went through repetition after repetition. I was able to talk her through it and simultaneously fish my phone from my pocket and text Em.\n\nInvest in earplugs.\n\nA minute later she checked her phone and snorted with laughter. I got a quick reply back.\n\nI thought I had a good poker face. That obvious?\n\nSorta.\n\nI thought I was done with this after I went through it w Jimmy.\n\nI smiled. Sorry. Two in one family. Brutal.\n\nShe snorted again. It was sort of cute. \n\nWhen we were done, I walked them to the front door. Leia wanted to give me a hug and this time I didn't turn away. I'd rather feel uncomfortable for a few seconds than like an asshole for the rest of the day. \n\nI turned to Em. \"So, you'll be back on Tuesday?\"\n\nShe grinned. \"Unless Leia learns how to drive in the next few days, yeah.\"",
        "\"Smart ass,\" I muttered.\n\nShe grin and crouched down near Leia. \"Did you say thank you?\"\n\nLeia gave me a hug again, mumbled a \"thanks\" and started towards their car. Em stood up and her shirt rose a little revealing a belly chain.\n\nA fucking belly chain. The hottest piece of jewelry a woman could wear. That just wasn't fair. \n\n\"See ya Tuesday, Alex. Thanks.'\n\n\"Yeah. Not a problem.\"\n\nA fucking belly chain. \n\nBig Mike stopped me as I walked back through reception. \"Hey, you put any thought into playing with that father-daughter band?\"\n\n\"What the hell, Mike. I said no. I'll write them a check.\"\n\n\"Coward.\"\n\n\"Yeah? Go fuck yourself, you Polynesian wannabe!\"\n\nI stormed off to my office. A few minutes later the phone rang. \n\n\"Yeah?\"\n\n\"Italian good for lunch?\"\n\n\"Sure. Get me some sort of pasta with chicken.\"\n\n\"You got it. You're still a coward, but you're my coward. Make it a big check.\"\n\nI laughed. \n\n**\n\nEm\n\n\"...hey soul sis... soul sister...\"\n\nA sharp twang.\n\n\"Ain't that Mr. Mister on the... radio, stereo...\"\n\nAnother twanging sound, followed by a whimper from Pepper, who was their literal captive audience.\n\n\"You're not very good at that yet.\"\n\n\"I still have to practice, Baylee! I'm learning!\"\n\n\"Let me try!\"\n\n\"No, it's my guitar!\"\n\n\"Girls,\" Kelsie called from the kitchen. She made no move to stand up. \"No fighting.\" \n\n\"But Mom...\"\n\n\"Maybe I need to come over there and take the guitar away, Leia.\" I also didn't make a move to stand up.\n\nIt wasn't needed. The voices hushed and Leia started strumming the guitar again.\n\n\"I'll play, you sing, just not so fast, okay?\"\n\n\"I was kind of hoping I had to take the guitar away for five minutes,\" I whispered. \"Just five minutes.\"\n\nKelsie snorted and ate a handful of popcorn.\n\n\"The lessons aren't going well?\"\n\n\"They're going great. Alex says she's learning really fast.\" I rubbed my eyes. \"I guess I should just be grateful she's graduated from 'Happy Birthday'.\"\n\n\"You okay? You seem...\"\n\n\"Just tired. I've booked a couple extra clients to offset the costs. He's giving me a deal on the lessons but she's still going to need strings and shit.\" \n\n\"The fun kind of clients or...?\"\n\nI snorted. \"No. Although I almost outed Patricia's husband to her during their session.\" \n\n\"Patricia, like Hayden's mom? From the girls' class?\"\n\n\"Yep.\"\n\n\"Oh my God, you didn't.\" \n\n\"What else was I supposed to do? I'm trying to set up the perfect family photo and he keeps going 'are you sure I don't know you from somewhere? You just look so familiar, you know?'\"\n\n\"And you said...?\"\n\n\"Well, I was nice enough to him the first couple times. Polite laugh, just have one of those faces, you know. And of course he goes, 'I feel like I'd remember your face though. I mean you have all those tattoos.' And that's usually when people figure out... you know.\" \n\nKelsie laughed, though not unkindly.\n\n\"You could just say you used to model, you know.\"\n\n\"The last time I tried that, the guy's wife figured out real quick what kind of 'modeling' I did.\" \n\nShe made a soft noise of concession and I sighed.\n\n\"It's not that I'm embarrassed, I just\u2014\"\n\n\"I get it, don't worry.\"\n\n\"I mean I am a little embarrassed.\"\n\n\"It's literally no different than the boudoir photos you do. You're just on the other side of the camera now.\"\n\n\"I'd say there's a pretty big difference between boudoir photos and dudes jacking off to alt-girls online.\" \n\nKelsie snorted again and threw a piece of popcorn at me. \n\n\"What?\" I laughed, catching the popcorn before it hit the ground. \"They're not just jacking off to photos, they're jacking off to old photos. Leia wasn't even six months when I did the last shoot.\" \n\n\"Okay, but you could have\u2014wait.\" Kelsie frowned, staring at me. \"You were still doing the photos after you had Leia?\"\n\nI could feel heat creeping up my neck. Kelsie knew pretty much everything about me, but apparently that was a surprise.\n\n\"I mean... yeah, a few. Before Jones took me on as his assistant, I was still, you know. Modeling.\"\n\nShe gaped. \"You were doing nude photos less than six months after having a baby?\"\n\nI laughed, relieved that it wasn't judgment in her eyes but astonishment. \"Yeah. My tits looked great while I was breastfeeding.\" \n\n\"Lucky bitch.\" She threw another piece of popcorn at me. \n\n\"Anyway, Patricia's husband just wouldn't let it go. So finally I was like, 'let's do some mother and son shots' and got him to come over to the camera to 'look' at one.\"\n\n\"I see where this is going.\"\n\n\"All I asked was if he really wanted his wife to know where he knew me from.\"\n\n\"And he said...\"\n\n\"Nothing, and gave me an extra fifty as a tip.\" \n\nKelsie burst out laughing, as did I.\n\nPrior to having Leia, I'd been the definition of a hot mess. Young, dumb, on my own for the first time... one thing had led to another and I'd ended up\u2014for lack of a better term\u2014modeling. In the two short, yet very long, years I'd done so, I'd developed a bit of a cult following. I'm not sure that there's any other kind of following when it comes to what was politely referred to as \"alternative pin-up girls,\" not that it mattered. The point was that even years later, I was still being recognized as a \"model.\"\n\nThen Leia came along. Well, more accurately, one of Leia's potential fathers came, and it was a long time before I realized my body wasn't just filling out, I was pregnant. By the time I figured it out, there were a handful of different guys it could have been, and I only knew how to find a couple of them.\n\nWhen she came out looking just like me, it was very clearly neither of the two men I'd tracked down. They were kind enough to take paternity tests anyway, but she was as white as snow and they were both African-American. No one was surprised when neither of them shared even a questionable amount of DNA with her.\n\nSo, Leia didn't have a father. \n\nJones was a photographer I worked with before getting knocked up. We worked together on a number of shoots and made a great team. He took me in after I had Leia and started training me to work as his assistant, rather than in front of the camera. It was from him that I discovered how much I truly loved photography. He taught me everything I knew, gave me a set of his old equipment, and told me to get my own business started before I got sucked back into a life he knew I didn't want.\n\nI owed Jones everything. I would have married him, but his husband would have probably had a problem with that.\n\nI was no longer in front of the camera; I was behind it. Graduation photos, family portraits, maternity shoots, and newborn pictures kept me steady, but my favorites were the boudoir shoots. I'd made quite a name for myself when it came to taking sensual, dramatically lit photos that reeked of sexuality and empowerment. \n\nWell, my alternate ego had made a name for herself. \"Passion by Fire\" and \"Portraits by Em\" were two different companies, for all intents and purposes, though I had a few clients who knew me under both names. It was more to keep Leia in the dark, just for a few more years. I couldn't bring myself to explain Mommy's past just yet. \n\nKelsie and I had polished off the bowl of popcorn and Leia and Baylee had just about nailed \"Hey Soul Sister\" when someone knocked on the front door.\n\n\"Who's that?\" Kelsie asked, as if I'd know. \n\n\"Well, if it's not you, then I have no idea.\" \n\nI was halfway to the door when the knocking became a pounding. \n\n\"Please open up, Em.\"\n\nJimmy's voice was desperate in a way I hadn't heard before. The first thought that crossed my mind was that he'd gotten someone pregnant. The second was that he'd pissed off the wrong person and someone was after him. The third was that if he had dragged his drama to my front door and put my daughter in harm's way, I'd kill him myself.\n\nWhen I flung the door open, I was ready to lose my mind at him yet again. When I saw his face, I was speechless.\n\nJimmy had been crying.\n\n\"I need to talk to you.\"\n\n\"Hey girls!\" Kelsie shouted from the hallway. \"We're gonna go play outside for a bit.\"\n\n\"That's perfect!\" squealed Leia. \"We can give you a concert in the backyard.\"\n\n\"I cannot think of a single reason for you to not do that,\" Kelsie said unenthusiastically. \n\nShe managed to usher Leia, Baylee, and Pepper outside without them seeing Jimmy, who had collapsed on the couch in my living room after I quietly shut the door.\n\n\"Do you want a beer?\" I asked uncertainly. \n\nJimmy shook his head.\n\nThat was a surprise, too.\n\n\"What, uh, do you want to talk about?\"\n\n\"I'm fucked.\"\n\n\"Generally or for a specific reason?\"\n\n\"Both.\" He pulled his phone from his pocket and chucked it onto the coffee table. \"Read that.\" \n\nThe screen was on an article posted in Guitar Player, which I inferred was some kind of music magazine. The title big, bold, and shady as all fuck.\n\nWasting Away Again in Margaritaville\n\nJimmy was being an asshole. Jimmy was drinking too much, partying too much, and being downright insufferable. He was egotistical, overwhelmingly cocky, and unbearably rude. He was on a fast path to self-destruction. He was a danger to himself, a bad influence on my daughter, and a completely unbearable excuse for a human being.\n\nHe was also my brother, and as I continued reading, I felt my face growing red with rage at whoever had written this about him.\n\nSadly, Buffet couldn't shoulder the load alone, so we have another Jimmy wasting away in Margaritaville. This one is squandering his overhyped talents on trying to be a cliche and live a sybaritic lifestyle that went out of fashion decades ago. \n\nAs our friends in country music might say, he's all hat and no cowboy.\n\n\"I'm fucked,\" he said as I looked up from the phone. \"This is it. It's over.\" \n\n\"None of this is exactly a lie,\" I said.\n\nJimmy's forehead wrinkled. He stared down, shoulders hunched, suddenly not the man of twenty sitting on my couch but the boy of ten who'd cried as I kissed him goodbye and ran away from home.\n\n\"I know,\" he said.\n\nHe cried on my shoulder. I let him, my heart breaking and relieved at the same time. I didn't want Jimmy to lose his dream, but... \n\nIt wasn't the time for those thoughts. It was the time for support, to just be there for him as his world crashed down around him.\n\n\"Who is this guy?\" I asked when he pulled away, roughly wiping his face.\n\n\"Dunno. Some writer.\"\n\n\"Who the fuck names their kid Curt Llama?\" \n\nA wet, sniveling laugh bubbled from Jimmy's throat.\n\n\"Uncle Jimmy?\"\n\nLeia was peering into the room from the kitchen. Jimmy tensed, his cheeks red with embarrassment.\n\n\"Hey, munchkin.\"\n\nThe only thing Leia could do was rush over and hug him. Luckily, it was probably the only thing in the world that would make Jimmy really feel just a little bit better.\n\n**\n\nAlex\n\nI was more leaning on the stool than sitting on it as I noodled through some thoughts I had with the guitar. Bryn thought that we were pretty much done and just needed a hook for our latest song and I was letting my fingers and brain operate independently, hoping they'd meet somewhere in hooksville. Leaning over, I jotted down some stuff in my notepad and then got back to it. \n\nThere was a brief knock and then Lini opened the door for Leia. Her gap-toothed smile was wide and she was carrying the acoustic with pride. The video and audio allowed Em to watch and hear us while she waited in reception. It had been about six weeks and she'd finally started feeling comfortable sitting in reception and watching the monitor once in a while. \n\nI pulled out my phone. We regularly had musicians in the studios at two and three in the morning doing who the hell knows what, so our security service had us hooked up with live feeds from almost every conceivable angle. I pulled up the reception area and saw Em sitting there, thumbing through a magazine. She was wearing jeans and a tight dark blue tee with a faded Betty Boop image. \n\nShe looked good. Real good. \n\n\"Mr. Alex?\"\n\n\"Yeah, sorry honey. Let's get to it.\" I looked at the image again before putting the phone down. \n\nLeia's feet dangled as she sat on a stool next to me and she began chattering, telling me about her practicing and how her dog would listen to her playing, which led to a discussion about her dog and how he wouldn't obey any commands. It was a problem, but insignificant in the grand scheme of things. I constantly had to reign her in and help her focus, but that was part of the job when teaching kids. The upside is that her brain was like a sponge, soaking up everything she was taught at a crazy rate. \n\nShe was going to have to grow into the instrument before she got any sort of mastery, but in spite of her tiny hands, she was making amazing progress. Yes, she was raw and new, but everyone was at some point in their playing. It was evident that she practiced frequently. \n\nI waited for a pause before interrupting. \n\n\"Remember when you asked about the Oni?\" I turned my arm over to show the tat. \"You seemed disappointed that you wouldn't be able to get any tattoos until you were the ripe old age of eighteen, so I thought I'd help out.\" \n\nReaching past her, I grabbed the paper bag and handed it to her. Eyes wide, she paused and then opened it. To say she wasn't impressed would be an understatement. She looked like a kid that had grabbed the biggest present under the tree and ripped off the wrapping only to discover it was a dictionary. \n\nI wasn't sure what to say. \"Um, they're temporary tattoos. You can...\"\n\n\"Thanks. That was really nice, but I'm almost eight. These are for kids.\"\n\n\"Yeah, sorry. I wasn't really thinking. I, uh, I knew a little boy once that really loved them, but yeah, he was younger than you. They had to be Star Wars. All those weird characters and... Well, you're not here for that. Let's get to it.\"\n\nTwelve lessons in and she was, if anything, more enthusiastic than she was on the first day. I wasn't interested in pretending that she was anything other than what she was; a passionate, talented child with less than two months of guitar under her belt. That being said, she had what her uncle didn't, she played with heart. \n\nMaybe he had at one time, but if so, it was long gone. I wrote another article about him and I heard that he hadn't shown up in LA for a meeting with his label. What's worse is that they hadn't pressed him. \n\nIf they don't give a fuck, that's a very, very bad sign. \n\nAs important as Guitar Player was in the industry and as solid as my writing could be, I didn't have that sort of sway. He must have been pissing some important people off for a while. Someone should have explained the rules. If you're going to be an asshole, you have to be a genius or so established that they can't ax you. He was neither. I'd gone out of my way to listen to some of his early work on YouTube of all places. He'd had promise. That promise was traded in for pablum. \n\nJimmy Reilly became style over substance with a heaping tablespoon of prima donna. \n\nWe'd been going for a while when Leia stopped playing. \n\n\"Do you know an old group named Mettic?\" she asked.\n\n\"Medic? No. Like a doctor?\"\n\n\"Um, I don't know. They have a song about puppets. Uncle Jimmy likes them. They're his favorite.\"\n\n\"Do you maybe mean Metallica?\"\n\n\"Yeah! That's them. Can you teach me the puppets song?\"\n\n\"That's a... You mean 'Master of Puppets', right? Like this?\" I played a bit of the song.\n\nShe nodded her head. \"That's the song!\"\n\n\"That's a bit advanced for you, Leia. Maybe in a while, we can work on part of the song.\"\n\n\"Can we do a little? Just a small part?\"\n\n\"Uhm, let me see if I can figure something out for next time. Why?\"\n\n\"Uncle Jimmy's sad all the time and I thought maybe if I can play his favorite song... I don't know, it was probably stupid.\"\n\n\"No, honey, it wasn't stupid. It was really nice. Let me think about it, okay?\"\n\nLeia and I worked for an hour and twenty before I looked up at the clock and realized we were over. \n\n\"Hey, look at that. Twenty minutes past an hour. You owe me, Leia. I'll take the extra pay in more cookies.\"\n\nShe looked concerned. \"The cookies are done. They only have them for a while. I can maybe get some from the store.\"\n\n\"I was just kidding, kiddo. We're good. Let's get out there to your mom. She's probably wondering if you stole Mike's hula-girl and escaped out the back.\"\n\nShe laughed and we went out to meet up with Em. \n\n\"Mom, we need to get Mr. Alex some cookies 'cause we kept going after an hour.\"\n\nI raised my hands. \"I was just joking with her. I don't need any cookies.\"\n\nEm smiled. \"How about dinner? I sort of was hoping... Well, it can wait. Are you available this weekend at all?\"\n\nHer voice got that raspy, warm quality to it again. I had to stop myself from leaning towards her.\n\n\"Uhm, yeah. Saturday?\"\n\n\"Saturday'll work. Five?\"\n\n\"Sure. Can I bring anything?\"\n\n\"No, we're set. I'll text you the address.\"\n\nThey left and I went back to my office, stunned. Was this a date? Did I just agree to a date with a woman who was at least twenty-five years younger than I was? I needed to talk to her about Leia playing in a recital anyway, so whatever this was I could at least get that done, but... yeah, I was lost. \n\nOn Saturday, I showed up at the address at ten to five. I checked my breath, ran my fingers through my hair, grabbed the bag and walked up to the door. Em answered, leaning down to prevent her dog from jumping on me, and stepped out of the way so I could enter. \n\n\"Leia's at her friend's. C'mon in.\"\n\n\"Thanks. I brought a cake. Didn't want to come empty-handed. I...\"\n\nFuck. \n\nJimmy was sitting at her kitchen table. He'd shaved his head and was wearing a ripped \"Farewell to Kings\" tee and faded jeans. He looked like a thinner, taller Henry Rollins. It was completely unfair. He looked like a rock star with the long hair and looked like an edgier rock star with the shaved head thing. There was no way I could pull that off. The prick. \n\n\"Jimmy wanted to talk to you,\" Em said.\n\nGreat. Just fucking great.\n\n**\n\nEm\n\nAlex looked at me like I'd laid a trail of candy for him to follow only to then shove him in a pit of snakes lined with speakers blasting Leia's rendition of \"Hey Soul Sister\" on repeat. Guilt tugged at my chest, worsening when I noted that Alex was dressed just a touch nicer than usual. He'd frozen just half a step away from me in the cramped front hall and I could smell the faint scent of a lightly spiced cologne.\n\nOh my God. He'd thought it was a date.\n\nEven worse, I was more disappointed about it not being a date--even though I hadn't realized I'd asked him on one--than I was about the fact that he thought it was a date in the first place.\n\nBut that was a problem for another time. The immediate issue was the fact that Alex was staring at me like I'd kicked a puppy.\n\nI cleared my throat. \"So, uh, I mentioned to Jimmy you were stopping by for dinner and he asked if he could... um, talk to you.\"\n\n\"I would've called the studio but I'm still banned,\" Jimmy added unhelpfully. \n\n\"Wasn't my doing,\" Alex said. He seemed to resign himself to the situation and stepped in the house further. If I hadn't known better, I would have said he looked cautiously arrogant as he brought the cake to the kitchen, Jimmy watching warily while he sipped a can of Diet Coke. \n\nI raised my eyebrows at Jimmy, trying to silently communicate with him.\n\nYou promised me this wouldn't be a pissing match.\n\nHe seemed to get the message and jerked his shoulders helplessly. Another pang of guilt and I sighed, trying not to clench my jaw.\n\n\"Can I get you something to drink, Alex? Dinner's just about ready.\" \n\n\"Uh, yeah. Please.\" \n\n\"We have Coke, Diet Coke, grape soda, orange soda, apple juice. Any of those things mixed with vodka. Or beer. Or, um, water, I guess.\"",
        "He chuckled a bit. \"As interesting as vodka and grape soda sounds, I'm good with water.\"\n\nYeah, it definitely wasn't a date. \n\nI poured him a glass of water and considered grabbing a beer for myself. Jimmy wasn't drinking, Alex wanted water... I sighed and grabbed a Diet Coke for myself.\n\nDinner was a simple curry with rice, yet another sign that I hadn't realized I'd asked Alex on a date. I just wanted to make something that wasn't covered in processed cheese or ketchup. My kitchen was small to begin with and the addition of the silent tension between Alex and Jimmy was making it feel unmanageably cramped. By the time I put their plates in front of them, I was seriously regretting agreeing to this.\n\nThe first few bites were taken in silence. I glanced at Jimmy.\n\nPlease just say whatever the fuck you wanted to say. Please.\n\nI had to think it really hard at him a few more times before he finally put his fork down, took a breath, and steadied hands that I hadn't realized had been shaking.\n\n\"Leia played me a few of the songs she's learned,\" Jimmy started.\n\nUgh. He wanted to make small talk?\n\n\"I'm not getting into this with you,\" Alex replied. \n\n\"Look, dude, I just\u2014\"\n\n\"She's working her ass off, I'm doing the best I can. You got a problem with it, take it up with your sister, not me.\"\n\nI tried not to react as he threw me under the bus, though I decided a second accidental-date was very unlikely as anger pricked through me.\n\n\"I'm trying to fucking apologize!\" Jimmy blurted angrily. His face turned red, his jaw clenched as he fought back a mix of anger and embarrassment. \n\nAlex stared at him silently.\n\nJimmy swallowed, looking down at the untouched plate of curry in front of him as he took a shaky breath. \n\n\"I mean, you probably saw. Maybe you didn't. I dunno. I'm not the flavor of the month anymore. I'm fucking nothing. Some dick wrote a couple articles about me, my label got pissed. I fucked up. I got nothing now.\" \n\nHe cleared his throat. The struggle of saying the words made it clear this was a shot to the heart for his pride.\n\n\"That Mike dude was right and I'm fucking sorry, okay? I'm sorry I lost my shit at you. Thanks for teaching Leia because I would've just fucked it up.\" \n\nHis voice cracked at the same time my heart did, though both of us tried not to show it. I pushed the curry around on my plate before risking a glance up at Alex.\n\nHis face was guarded. Jimmy's head was still bowed, the only sound the gentle scraping of my fork and the shaky breaths Jimmy was taking.\n\n\"You sober?\" Alex finally asked.\n\n\"Three weeks,\" Jimmy mumbled. \"Would've been four but...\" \n\nBut he'd fallen off the wagon after the second article was put out, shaved his head while black-out drunk, and called me in the middle of the night. He'd been so incoherent that I had called Kelsie and begged her to watch Leia so I could go check on him. When I got there, he was puking in the bathroom, surrounded by piles of hair, only half-conscious. \n\nTo say I was worried about Jimmy was an understatement. \n\n\"Okay,\" Alex said. \"I, uh, accept the apology.\"\n\nJimmy nodded, but a look of grudging humiliation crossed his face.\n\n\"Look, I know... you don't... I don't have the right. You know? I know that. But... can you help me?\"\n\nTo say I was surprised was even more of an understatement. I knew Alex was important as far as the studio went, but had no idea what he could possibly do to help Jimmy. Did guys who ran studios usually help fallen rock stars? \n\nJimmy noticed the bewilderment on my face and looked at Alex, shocked.\n\n\"Wait, she doesn't...\" He trailed off and shook his head, almost incredulous.\n\n\"I don't what?\" I asked.\n\nBoth Alex and Jimmy ignored me as they made eye contact. Alex seemed to be studying Jimmy, and Jimmy could hardly hold his gaze. I suddenly longed for the moment when I thought the worst that would happen over this dinner was a pissing match.\n\n\"We can talk,\" Alex finally said. \"Look, I'll... come by the studio next week. Monday afternoon.\"\n\n\"I'm banned\u2014\"\n\n\"You're unbanned, temporarily, and it won't take much to get re-banned so don't try any bullshit.\" \n\nJimmy nodded.\n\n\"I promise, man. I... you won't regret this.\"\n\n\"We'll see about that.\"\n\nThe rest of the dinner was slightly less awkward. Jimmy even ate heartily, the first time he'd finished his plate since before the article had been released. He was done before I'd eaten half of mine, though Alex wasn't far behind.\n\n\"Seconds?\" I asked Jimmy, reaching for his plate.\n\nHe nodded. \"Please.\"\n\nI got up to fill his plate and when I returned, Alex had just finished his last bite.\n\n\"That was delicious,\" he said, putting his fork down. \"Thanks, Em.\"\n\n\"Thank you for eating it without covering it in ketchup or cheese sauce. It was kind of nice cooking a grown-up meal. Do you want more?\"\n\nHe shook his head. \"I'm stuffed.\"\n\n\"Well, bad news. There's still a ton left and it's getting cold.\"\n\n\"Bad news, if I have another helping, Leon will definitely be getting larger.\"\n\nI burst out laughing and shook my head as I sat down to finish my plate.\n\n\"Who's Leon?\" Jimmy asked.\n\nI raised my eyebrow at him.\n\n\"From Airplane?\"\n\n\"What's that?\"\n\n\"It looks like a big Tylenol,\" I said.\n\n\"But that's not important right now,\" added Alex.\n\nI snorted and Alex lost it, shaking his head as he laughed. Jimmy looked confused but nodded, glancing between the two of us.\n\n\"It's a movie,\" I finally said. \n\n\"Must've been before my time,\" Jimmy said.\n\n\"You're coming over next weekend to watch it.\"\n\n\"Ugh, I don't wanna watch some old movie.\"\n\n\"Watch yourself, young whippersnapper.\" I laughed, but Alex didn't find Jimmy's quip quite as funny as I did. \n\nJimmy helped clear the table and put the dishes in the dishwasher. I packed a spare Tupperware full of leftovers for him in spite of his protests, shoving it at him as he tried to leave without it.\n\n\"C'mon Em, I don't need\u2014\"\n\n\"At least I'll know you're eating,\" I whispered fiercely. I wasn't ignorant of the drawn look on his face.\n\n\"Emb\u2014\" He drew out my name, knowing exactly which button to push.\n\n\"Don't,\" I hissed. \"Take the fucking Tupperware, Jimmy.\"\n\nI won, and he took the leftovers as he left. After I closed the door behind him, I turned to Alex.\n\n\"I need to apologize\u2014\"\n\n\"Don't worry about it.\"\n\n\"I am worried about it.\" I folded my arms across my chest. \"I didn't mean to like, trick you into coming over or anything. It wasn't... Jimmy just said he wanted to talk to you. I just, I didn't really think and\u2014\"\n\n\"Really, Em. It's fine.\" \n\nIt wasn't fine, obviously, but I sighed.\n\n\"Do you want a coffee or something? Or a... what do you call those after-dinner drinks? I don't have anything but we could test out that grape soda and vodka.\"\n\nHe laughed. \"Coffee sounds great.\" \n\nDespite how full of curry we were, we both agreed that a slice of cake with the coffee would be good. Instead of sitting back at the table, we went to the living room to sit on the couch.\n\n\"So, I actually wanted to run something by you,\" Alex said as he finished his cake.\n\n\"What's that?\"\n\n\"It's\u2014\"\n\n\"I mean what do you mean,\" I laughed before he could say anything else. I tried not to melt as he grinned, more relaxed than he had been the rest of the evening.\n\n\"Well, Leia's getting pretty good. I mean, for the length of time she's been playing. I think she should perform.\"\n\nThe look on my face said everything.\n\n\"I meant a recital,\" he said hurriedly. \"Like, with other students, performing for parents. Just to get a feel for it.\"\n\n\"Does she have to?\"\n\n\"I mean, performing live helps them learn. It gives them instant feedback. It's exciting for them.\" \n\n\"Did you already tell Leia about this?\"\n\n\"No. I wanted to run it by you first because I don't have any other students. I just know a guy who's putting together a small thing at the mall in a few weeks and she could play then.\" \n\nI pressed my lips together. Leia was seven. Seven. Jimmy had been about the same age when he became obsessed with the guitar. By ten he was telling everyone he was going to be famous. He played Metallica constantly. Loud, angry, screaming music that covered the pain a little boy with shitty parents was going through.\n\n\"You don't know this, but Jimmy and I didn't have great parents,\" I said quietly. \"I basically raised him. So him being kind of a dick is kind of on me. I had never been as worried about him as I was when his career was going well, and I've never been more worried about him than I am now. He's different. He's... Ever since those articles came out, he's been like a shell.\"\n\nAlex shifted on the couch uncomfortably but said nothing.\n\n\"I don't want Leia going down that path.\"\n\n\"She won't,\" Alex said. \"It's just a recital. And frankly, she's obsessed with Taylor Swift. Going from pop-country to metal would be... unlikely.\" \n\n\"Can I think about it?\"\n\n\"Yeah. Of course.\"\n\n\"Thank you.\" \n\n\"No problem.\"\n\n\"No, it is, and I need you to know how grateful we are.\"\n\n\"Em, I appreciate that, but it's not that big a deal.\"\n\n\"Yes, it is.\" I put my hand on his knee before he could speak again, hoping the sudden but fierce sincerity showed on my face. \"For everything. I know how much guitar lessons cost. I know twenty-five bucks an hour is basically nothing. You stay late with her every time, you keep giving her books and strings and just... I don't think you really know just how much she loves playing, and you don't understand how much it means to me.\" \n\nThe words hung in the air as Alex stared at me, and it was only when he glanced down at my hand that I realized I was still touching him. I chuckled awkwardly, pulling my hand back as I tried not to die of embarrassment.\n\n\"I just mean, thank you. And now you're doing this stuff for Jimmy.\"\n\n\"We're just gonna talk. I'm not saying for sure\u2014\"\n\n\"I know, but it's still... you're giving him a chance. I don't know why you're being so good to me but... I mean, if you ever need anything...\"\n\nI trailed off, a slow redness creeping up my cheeks. That awkward chuckle started again and I reached for my coffee cup to mask the way I was sliding back on the couch.\n\n\"Well, there is one thing...\"\n\nOh, God. This accidental-date was going somewhere.\n\n\"Yeah?\" I asked.\n\nAlex looked at me, his eyes serious as he leaned forward slightly.\n\n\"Yeah. I'd still really like to know what Em is short for.\"\n\nI nearly spilled my coffee as I laughed. When I looked back up, Alex was grinning again and I rolled my eyes.\n\n\"Really? You're gonna make me do this?\"\n\n\"What? It's a simple question. Is it... Emily? Emma? Emerson?\"\n\nI shook my head.\n\n\"Emelia? No wait, that would be Am...\"\n\n\"If I tell you, you have to promise me you won't laugh, you won't make jokes, you won't tell anyone else.\" \n\nHe looked serious again, eyes sparkling excitedly.\n\n\"Yeah, I promise.\"\n\n\"It's...\" I sighed, shaking my head. \"Ember.\" \n\n\"Amber?\"\n\n\"No, Ember. Like a glowing coal. Ember.\" \n\n\"Makes sense,\" he said. \"Explains why you can be so fier\u2014\"\n\n\"You just promised!\"\n\nHe laughed, not unkindly, and I couldn't help but laugh too.\n\n\"Ember.\" The name rolled off his tongue, almost seductively smooth. \"I like it. It suits you.\" \n\n\"Nobody calls me that anymore,\" I said.\n\n\"Can I call you Ember?\"\n\nMaybe it was because I liked the way he said my name, or maybe it was just because I really, really liked him. Before I knew what I was doing, some crazy part of me told him he could.\n\n**\n\nAlex\n\n\"Oh, for... Mike, get the fuck down.\"\n\nHe was wearing his usual shorts and Hawaiian shirt and was up on a ladder poking around in the drop-ceiling in the snack room. His voice was muffled as he replied.\n\n\"What?\"\n\n\"If you're going to wear baggy shorts and get on a ladder, I'm begging you, wear underwear. We play \"Free Bird\" here, we don't enact it. Nobody needs to see that shit.\"\n\nHe pulled back, took two steps down and looked at me. \"Seriously? Didn't think about that. Sorry. It's all good. We're done.\"\n\nBig Mike slipped the tile back in place and got off the ladder. He nodded grimly at me as if we were co-conspirators taking down Nixon. Jerking a thumb towards the ceiling, he continued. \"Cameras. Right at the fridge. This shit ain't gonna stand.\"\n\n\"I'm gonna need a little more than that. What are you talking about?\"\n\n\"Some son of a bitch stole my Thin Mints from the freezer. I was saving them. My last box. They're gonna try to play me like that? Gimme a hand.\"\n\nHe headed off to his office and I followed him. He handed me some papers he'd printed out and some scotch tape. \n\n\"Hang these up around the place.\"\n\nPROFESSIONALISM\n\nIt's the halmark of any sucesful busness. Thats why you people cant act like degenerat fucking animals and steal food from other people including me, but also everybody (but mainly me). If my Thin Mints arent returned to the freezer I'm gonna find out who stole them and ruin you're career. Think I'm joking? Try me. Just put them back and everythings fine. You can buy them online from the Girl Scouts. You got to Next Wednesday.\n\nSincerly.\n\n-Mgmt-\n\n\"When I check the cameras and see them returning the cookies, I'll have them.\"\n\n\"So, you're not gonna let it go if they return them?\"\n\n\"Fuck no. The hell with that. What sort of dick steals cookies?\"\n\n\"Did you run this by Lini?\"\n\nHe was clearly irked by the question. \"What, I need to ask permission to do shit in my studio?\"\n\n\"No, I meant to have her type it up. There's a few... peculiar spellings.\"\n\n\"They get the point, right, smartass?\"\n\n\"That you're a psycho? Yeah, probably.\"\n\n\"I'm tired a people walking all over me.\"\n\nI doubt anyone had taken advantage of Big Mike since he was eight years old. He posted the fliers himself.\n\n\"Leia's uncle? Jimmy Reilly? I unbanned him. He's coming down today to talk.\"\n\nMike raised an eyebrow. \"Yeah?\"\n\n\"Yeah.\"\n\n\"Okay. Let me know if you want me to deal with him.\"\n\n\"Thanks, but it's not gonna be a problem. Tell Lini?\"\n\nGoing back to my office, I sat down and reread my articles about Jimmy. Was I rough? Yeah. Was it all true? Also yeah. The main question was, was it deserved? I wasn't sure. He was a jackass, but music labels produce assholes at record rates. Why did I come down so hard on this one? Why hadn't I ever spoken out before? I wasn't too happy thinking that I had abused the small amount of power that I had. \n\nMost of all, it bothered the hell out of me that Leia was so concerned about her uncle and I hadn't cared at all about what sort of an impact I might have. I'd dealt with a lot of shame in my time, more than enough for most people. To add to that seemed abhorrent. It took me more than a decade to even start to forgive myself for what I had done and now I jump back into being an uncaring, self-centered prick without a second thought.\n\nI think that I may have hated Jimmy because he was me, or the me of thirty years ago. The me that was responsible for the death of his wife and son. The me I'd gladly kill, over and over again. I couldn't kill that me, but there was Jimmy; talented, sullen, drunken, shining Jimmy. So, I took that shine, took his career and took his self-respect.\n\nBecause of something I'd done three decades earlier. \n\nSo, I wrote two articles that helped break this kid down, I completely misread what that dinner was supposed to be and Em was going to hate my guts as soon as she found out that I was the writer with the poison pen. Fantastic. The worst part of it all is that once Jimmy left, that next ninety minutes or so were some of the best I could remember.\n\nIt was stupid. The age difference was huge, but it felt like we fit somehow. Em was... I didn't know. I wasn't a teenager. I wasn't going to claim that she was perfect or that we were destined to be or something, but I really thought that something was there. Confirmation bias, I guess. She was sort of the best of both worlds. Stable, but edgy, responsible but fun and a good mom who has great taste in ink. \n\nWhat more could I want? \n\nEnough. It was silly. I imagined something that wasn't there. Fine. Time to move on. \n\nI opened up the weekly summary from Lini and checked the scheduling. She did an excellent job of keeping the venue booked as much as possible with artists that were similar. Death metal and church choirs weren't the best matches. We had six large studios, two very large and five small. It could get busy and a bit close with lots of mandatory mixing. \n\nLini knocked and then popped her head in. Then she verbally said, \"knock-knock\". It was a weird habit of hers. \n\n\"Knock, knock, boss. Mr. Reilly is here to see you?\"\n\n\"Yeah, fine. Thanks, Lini. Jimmy, c'mon in.\"\n\nHe sort of slouched in and sat down opposite me. \n\n\"Water? I've got a mini-fridge.\"\n\n\"Nah, I'm good.\"\n\n\"Okay. So, let's just assume that we were both having a bad day when we met and we got off on the wrong foot. Why don't you tell me where you'd like to be professionally and how you think I could help you get there. If I like what you're saying, maybe we can work something out.\"\n\n\"Right. Uh, I'm not sure where to start, to be honest. I guess... You know Gary Clark Jr.? I mean, not know him, know him, but you're familiar? I want something like what he has going on. He's respected, man. You know? He plays these festivals and he puts out his albums and he does fine and shit, but the people that know? They really fucking know. The average guy at the mall probably doesn't know who he is, but I do, you do, the right people do. That's what I want.\"\n\n\"That's... respectable. Hard to believe, but respectable. He's not in the tabloids, he's not tossing couches off hotel room balconies like it's 1985, he's not insisting that everyone kisses his ass. You sure that's what you want? You made for that grind of touring and playing out two hundred and fifty days a year?\"\n\n\"Dude, you're talking like it's a chore. That's my fucking dream, man. Em and Leia are all I've got here. If I can stay in touch with them and come home to them once in a while, I'd be in heaven. What I want is to be a fucking professional. I want people to think of me... All right, I'm not kissing ass here, but I know what you do. I know that you sit in on recordings for old friends. I know that people depend on you because first off, you'll do what you'll say you'll do and second; because you're fucking amazing. Speaking of that, how come Em doesn't know who you are?\"\n\nI paused. \"It's... that's not me anymore. At all. It would be, I don't know, giving her a false expectation or something.\"\n\n\"Just telling her how good you are?\"\n\n\"No, but that drags up all the old shit and why I don't play out anymore and, yeah, just not interested. I'm the studio guy now.\"\n\n\"Okay. Whatever.\"\n\n\"So, tell me what went wrong.\"\n\nHe sighed. \"I started believing the hype. Part of me did. Another part of me was constantly worrying about when they'd realize I was a fraud. I hid from that in the bottle and in being Jimmy Reilly, all capital letters. You know what I mean? If I'm the star, it doesn't matter what they say or think, 'cause they aren't. Not so much, right? Didn't quite work out. Some dick from Guitar World had it out for me like I slapped his mother. Guy's name is Llama. Like some sort of goat or something. He tore me up and people started talking shit online. The label lost interest. Yeah, not good.\"\n\nWe kept talking and he finally broke it down to three things. He wanted to be respected as a professional. He wanted to be as good as he could possibly be and he wanted Em, but especially Leia to be proud of him. \n\n\"You're saying the right things, Jimmy. I need to see you walking the walk. That fair?\"\n\n\"Yeah, totally.\"\n\n\"Okay. I'll pay you a grand a week. You're going to be the studio guitar bitch. Anytime anyone needs a guitarist, you're it. I don't care about style, I don't care about how good the band or performer is, I don't care about anything other than you're playing your best every time with a fucking smile on your face. We'll find time every day to work together one on one. Good deal?\"",
        "\"Sure. Good deal.\"\n\n\"Jimmy, you gotta be sober. That going to be an issue?\"\n\n\"No. I haven't touched anything in more than three weeks and I'm going to keep that up. But maybe we should start Monday. That'll give me a month dry. Sort of a nice, round number. It's not too bad. I just need to sorta get my head straight. I don't want to be flipping out on people here because I want a drink.\"\n\n\"Okay. If that's an issue, Big Mike can help. He's my sponsor.\"\n\n\"Your... Seriously? You're in a program?\"\n\n\"Yup.\"\n\n\"Um, I don't think I'm at that point, but if it's worse than I thought, I'll let you know.\"\n\nI believed him. He didn't have the signs of an issue so bad he'd get DTs or serious withdrawals. He went home and I told Lini and Mike. He'd be stringing instruments, teaching lessons, playing for anyone that needed it and anything else we could think of. \n\nTowards the end of the day, I got a text from Em.\n\nHow many kids would be performing?\n\nNot sure. 10? Maybe?\n\nU sure she's ready?\n\nThey will all be at her level. She'll be fine.\n\nI had to wait at least five minutes for her reply.\n\nOkay. Please set it up. Don't make me regret this.\n\nSmiling, I made the call to arrange for her inclusion.\n\n**\n\nEm\n\nLeia clutched at my hand in a way she hadn't since she was probably four or five.\n\n\"Mom, I thought it was just gonna be a few people.\"\n\nWith every ounce of motherly strength I could muster, I hid the fact that I, too, was terrified.\n\n\"It's not that many people, honey.\"\n\nIt was so many people.\n\n\"You won't even notice them once you're on stage.\" \n\nNothing I could say would make her feel better. It took Baylee squealing and grabbing Leia excitedly to turn the nerves into excitement. \n\n\"Leia, it's just like when we're playing at home, only you get to be a real rock star this time!\" She sighed dramatically, then giggled. \"Remember me when you're famous!\"\n\nLeia turned red but her gap-toothed smile peeked shyly across her face.\n\n\"She's been begging all morning to go onstage and sing while Leia plays,\" Kelsie muttered in my ear. \"If she asks, I checked with you and you said the guitar teacher said no.\"\n\nI nodded, my face stony.\n\nTen kids, Alex had said. They'd all be at her level, he had said. It was just a small showcase to promote a local music school, he said. Mostly grandmas and grandpas and parents sitting in the food court at the mall, waiting for their own precious kid to get onstage and ignoring the rest of what was happening, he said.\n\nAlex was so full of shit I was almost more angry at myself for believing him.\n\nThere was a stage set up on one side of the food court. Lights and microphones were being put on the stage, a bunch of chairs were set up in front of it, and people were milling about already. Not just grandmas and grandpas and parents, but people who looked like they knew what they were doing. They were there for a reason.\n\nLeia and Baylee walked ahead, Leia clutching her guitar to her chest as she scanned for any sign of Alex. Her hair was French-braided into two shiny, tight pigtails that had taken me the majority of the morning. She had steadfastly refused to wear a dress, which was a good call on her part since it was just my own nervous anxiety at what the other mothers would think if I sent her up there in jeans and a T-shirt.\n\n\"That bastard,\" I muttered to Kelsie. \"He told me this was a small thing.\"\n\n\"It's going to be fine,\" she muttered back. \"It's not that huge a thing.\"\n\n\"Look at all these people!\"\n\n\"Yeah, and did you see the big poster board over there or were you too busy freaking the fuck out?\"\n\nShe tilted her head in the direction of said poster. \n\n\"I can't even see that from here.\"\n\nShe snorted. \"It says the beginner level kids will be onstage from four to five. I'm assuming that's Leia's group. I very much doubt that they're expecting a full house for a bunch of seven-year-olds. It's probably to make sure the mics work and everything.\"\n\nI glared at her sidelong. \"Since when do you know so much about music recitals?\"\n\n\"Dude, I played piano for like thirteen years. I've been in shit like this.\"\n\n\"Jimmy never did shit like this.\"\n\n\"Jimmy didn't exactly have the standard upbringing, either.\" \n\nI didn't have time to respond before Leia whirled around.\n\n\"Mom, he's not here yet,\" she said, ignoring Baylee's excited chatter. \"And Mom, neither is Uncle Jimmy.\" \n\nHer lower lip trembled and I forced a smile.\n\n\"They'll be here, sweetie. It doesn't start for a little while still.\" \n\nEven still, I pulled out my phone and typed a text to Jimmy.\n\nGet your ass here asap I'm freaking out and Leia's starting to worry\n\n\"Calm yourself, I'm right here.\"\n\nI jumped as Jimmy came up behind me, patting me on the back before dipping down so Leia could throw her arms around his neck. I took a breath as he lifted her off her feet, grinning over her shoulder as he whirled her around.\n\n\"Hey, munchkin,\" he said. \"This is so cool, I can't wait to see you up there! You're going to do awesome.\"\n\nMy nerves settled as I watched the fear melt from Leia's face. She looked up to Jimmy, grinning broadly. He, in turn, had a genuine smile on his face as he patted her on the back.\n\n\"C'mon, Uncle Jimmy, where should you guys sit to watch me?\"\n\n\"Run up and see if there's room in the third row, right near the aisle, okay?\"\n\n\"What's so special about the third row?\" I asked as the girls took off.\n\n\"Nothing, I just wanted to tell you to calm down, she's gonna be fine.\"\n\n\"Where's Alex?\"\n\n\"I dunno, Em, probably on his way. Tone down the stress, it's just a recital.\"\n\n\"He said it was going to be way smaller\u2014\"\n\n\"Em.\" Jimmy looked at me with a sobering, mature calmness that was like nothing I'd ever seen before. \"Alex knows his shit, he wouldn't put Leia up there if she wasn't ready, and he probably didn't realize there was a showcase after.\"\n\n\"You have two grown-ass adults telling you to calm down,\" Kelsie added. \"Stop overreacting.\" \n\nI stared at both of them for a moment before blinking and shaking my head.\n\n\"Okay. You're right. I won't kill him the second he walks in, I'll wait for him to explain himself.\"\n\n\"Who are we killing the second he walks in?\"\n\nI turned towards the sound of Alex's voice, ready to forget what I had just said and give him a piece of my mind. I then immediately forgot what I was about to say, even though the words had been ready to burst out of my mouth.\n\nAlex was... hot. \n\nWhenever we went to Leia's lessons, Alex was dressed in variations of the same outfit. Khaki pants, usually a golf shirt, stuff that I would consider to be standard wear for a guy not quite twice my age. Besides the tattoos that peeked out from his sleeves and collar, there was really no indication that Alex was anything besides a mild-mannered, clean-cut business owner.\n\nEven dressed like that, he was damn good-looking. But his weekend wear was... well, the kind of thing that would have made that accidental-date a lot less accidental. \n\nFitted jeans. Black T-shirt. Leather jacket. And an expression on his face that was part bemusement, part cocky smirk, part waiting for me to finish whatever I'd been saying as the moment got longer and more awkward.\n\n\"Um.\" \n\n\"Who's Um?\"\n\n\"What?\"\n\nAlex laughed. \"I said who're you killing. You said Um. That your evil twin or something?\"\n\nChrist, it was like he didn't even realize he was dressed like... I mean, he had no idea. He strolled in, not even a little bit aware of how different he looked, how he was absolutely fucking dripping sex appeal. \n\n\"Well, since Em is apparently too rude to introduce us, hi.\" Kelsie elbowed past me and stuck out her hand. \"I'm Kelsie. Em's best friend.\"\n\n\"Nice to meet you. Alex.\"\n\n\"Pleasure, Alex. So, you single?\"\n\n\"Uh... yeah.\" \n\n\"Hmm.\" Kelsie smiled brightly. \"Well, let's go take a seat, shall we?\"\n\nShe maneuvered her way into the aisle first, forcing Baylee to sit next to her. Of course, that meant Leia had to sit next to Baylee, and she absolutely insisted that Jimmy sit next to her, leaving me and Alex sitting at the end of the row.\n\n\"Thanks a fucking lot,\" I mouthed at her.\n\n\"You're welcome,\" she said loudly.\n\nAfter Alex spoke with Leia about what to expect and everyone was settled and waiting with various levels of eagerness for the first student to take the stage, Alex leaned toward me. I inhaled that same spiced scent of his cologne, so light it hardly seemed to be there, so enticing I had to stop myself from leaning closer.\n\n\"So why were you going to kill me when I walked in?\"\n\n\"This just seemed a little bit more... elaborate... than you made it out to be.\"\n\nHe glanced around. \"It's just a mall food court.\"\n\n\"I meant... you know, the stage and stuff. It's... I've realized now it's not as intense as I thought it was. So you're safe. For now.\"\n\nHe chuckled lightly.\n\n\"Well, how 'bout I make it up to you? Let me take you guys out to dinner after to celebrate Leia's first performance.\" \n\n\"It's a date,\" I said without thinking.\n\n\"Is it?\"\n\nBefore I could reply, a man stepped onto the stage and tapped the mic, signaling the start of the recital. \n\n**\n\nAlex\n\nLeia went back to the section where the waiting performers gathered. She was fourth up. Clutching her guitar, she kept looking over at us pleadingly, as if we could somehow magically take away the butterflies that must have been swarming in her stomach. Em started to get up as the first little boy began playing his cello. \n\nI put my hand on her thigh. \"Let me get this. Trust me?\"\n\nShe turned from her daughter to me and there was a pause before she nodded. I slipped from my seat as unobtrusively as possible. When I got up to her, Leia grabbed my forearm. \n\n\"Hey, kiddo. A little nervous?\"\n\n\"No, I'm okay.\" Her voice was shaking. \n\n\"Good. Just what I wanted to hear. That being the case, you probably won't need it, but I have a surprise for you.\"\n\n\"Really?\"\n\n\"Really. You know how you've been playing some songs with Uncle Jimmy?\" She nodded her head again. \"Well, he's right over there.\" \n\nJimmy was standing between a large sign listing the times for the performers and the stage. Unless someone was actually behind him or on the stage, he couldn't be seen. \n\n\"So, we've played everything you're going to play a million times at the studio, right? Same thing. You know you can do it, because you've already done it. But, if you get a little nervous, Uncle Jimmy is going to be right there and he's going to be playing along with you on his guitar. Every note of the song, just like you do at home. If you need to, just look over at him. He'll be right there with you the whole way through.\"\n\nLeia launched herself at me and wrapped her arms around my waist. I awkwardly just stood there for a minute before reaching down and patting her back. \n\n\"Okay, I gotta get back to my seat. You gonna be okay? Just look at me or your mom or at Uncle Jimmy. We've got you.\"\n\nShe nodded and when I turned to walk away, she grabbed my forearm again. \"Thank you, Mr. Alex.\"\n\n\"You're very welcome, sweetie.\"\n\nI tried to be as quiet as possible as I went back and took my seat. The other little kid, Leia's friend, stared at me the whole time as if I had stolen her candy. I had no idea what I'd done to piss her off. Earlier she'd called me \"the guitar teacher\" as if it was slightly worse than Gestapo leader. She'd insisted on singing Taylor Swift songs at me until the first performer started. And I do mean 'at me'. Like she was proving a point or something. Kids are weird.\n\nThey had chairs set up to the left of the stage that were mostly out of view of the audience. The waiting performers sat there or milled about. We'd see Leia pop into view every once in a while. When the third performer left the stage with her violin, Em grabbed my hand in a death grip. Leia was next. \n\nShe leaned over and whispered. \"I'm a damned wreck.\"\n\n\"Looks like you picked the wrong week to stop sniffing glue.\"\n\nEm chuckled and mock-punched my arm. She used her left and continued holding my hand with her right. \n\nI wasn't exactly friends with the organizer, but we had a good working relationship. He took the stairs up the stage two at a time, clapped his hands together once and walked briskly to the mic. \n\n\"Ladies and gentlemen, I'd like to introduce our next performer. She's a guest with us today and represents Afterglow Studios. She'll be playing a couple of songs on the guitar for your enjoyment. Let's give a warm welcome to Leia Reilly!\"\n\nEm jumped up and applauded like crazy. Leia walked up the steps and onto the stage and looked terrified. Halfway to the chair they had set up, she looked up, passed us and into the rear of the audience. She stopped in place, frozen and then waved widely, a huge grin breaking out on her face. Leia seemed to calm down, walked over and sat down. Turning around, I didn't see anything. \n\nShe did well for her first recital. Looking over at Jimmy when she got flustered, she made her way through her songs. The audience clapped politely and she ran over and leaped off the side of the stage, I'm assuming into Jimmy's arms. That was confirmed when he came walking around the stage and towards us, carrying her. When she saw everyone she blushed and pushed against him until he put her down.\n\nRunning over to us, she hugged everyone and took a seat. Em's friend wanted to leave until I explained that they could do what they wanted, but everyone around us sat through Leia's performance and I was going to do the same for the children that came after her. It took a while, but we listened appreciatively and applauded after each kid played.\n\n\"So, kiddo, it looked like you settled down really quickly.\"\n\nLeia looked up at me. \"Yeah, I was really shaking, but then I saw Mr. Mike and I sort of felt okay.\"\n\n\"Big Mike was here?\"\n\n\"Yeah, in the back.\"\n\nHuh.\n\nWe walked off before the intermediate kids got started, letting their friends and family grab our seats. As we wandered through the Pueblo Mall, I was wondering what the etiquette was. Kelsie and her daughter were clearly tight enough with Em to be invited here, so I thought it was okay to ask them to join us.\n\n\"Hey, Kelsie. We were going to go get dinner. Can you guys join us?\"\n\nShe looked at Em and then gave me a small frown. \"Oh, I wish I'd known. I promised to take the kids to Mookie's for tacos.\" They looked like they were about to object. \"And Cold Stone Creamery for ice cream. Why don't you and Em have a good time and I'll steal Jimmy to help me with the kids? You can pick up Leia at my place when you're done.\"\n\n\"Uh, yeah, okay. You sure?\"\n\n\"Absolutely. Have a great time.\"\n\nEm had no problems with a dinner for adults, so we parted company, letting Kelsie and Jimmy take the kids. \n\n\"Park East good? We could stretch our legs afterward at the Riverwalk.\"\n\n\"That's a little pricey. You sure?\"\n\nI knew she was careful with her money, but I had the studio, residuals coming in from our first three albums and the money from the songs I wrote with Bryn. Actually, those songs eclipsed my other revenue by a lot. I could eat there three meals a day, every day, but I didn't want to sound like a jackass.\n\n\"Well, it's a special occasion and I thought Leia and Jimmy would be with us, so it's actually going to be cheaper than I had planned.\"\n\n\"Okay, sounds great. Am I dressed okay?\"\n\nA voice called out from behind us. \"Excuse me? I'm sorry, could I get a quick picture?\"\n\nEm closed her eyes for a second and spoke from the side of her mouth. \"Keep walking. Ignore him.\"\n\n\"Hello? It'll just take a minute. I'm a huge fan.\"\n\nShe took my hand and sort of pulled me as she picked up the pace.\n\n\"Seriously, just two seconds. If you...\"\n\nEm turned and unleashed on the guy.\n\n\"Look, I don't know how you behave normally, but I'm out in public trying to talk to a friend. If you're a fan, you have the PO Box. Send something there. Just... What the hell is wrong with you people? Is being respectful too much to ask? There's a reason I haven't done an appearance in years, but that's not good enough for you, is it?\"\n\nAppearance? What the hell was she talking about? The guy looked as confused as I was.\n\n\"I, uh, I was talking to Fingers. But, yeah, sorry lady. Are you somebody?\"\n\nShe turned beet red. \"No... I... No, sorry. I... Fuck.\" She turned to me. \"Alex?\"\n\n\"Yeah, sure.\" I put my arm over the guy's shoulder and he took a quick selfie with his tongue hanging out and fingers sporting the horns.\n\n\"You're the best, man! You keep in touch with the guys?\"\n\n\"No, not really. Once in a while. Christmas card stuff. I appreciate your listening. I'm sure they do as well. The fans are everything.\"\n\n\"You working on anything new? I follow all your session work.\"\n\n\"Uh, no, not really, but again, thanks. Really kind. Listen, we were heading out to dinner. Maybe I'll see you around.\"\n\n\"Okay, sure. Thanks, man. Made my week.\"\n\n\"No problem. Have a good one.\"\n\nHe turned to Em. \"He's the best!\"\n\nShe raised her eyebrows. \"Apparently so.\"\n\nHe pumped his fist and started making a call as he walked away. Em looked at me as we continued towards the exit.\n\n\"So, want to explain what the hell that was?\"\n\n\"I was going to say the same thing. Appearances?\"\n\n\"You first. Who are the guys? How did he know you?\"\n\nI sighed. \"Okay, so... Yeah, this was another lifetime ago. I was one of the founding members of Death Knight. I left after we recorded our third album but before it was released. I sort of still do some session work.\"\n\n\"The metal group? Are you shitting me?\"\n\n\"Uhm, no. But that's not me anymore.\"\n\n\"Seriously? No lie, you were in one of the most famous bands in the world? And you're here living in Pueblo?\"\n\n\"Yeah. Let's... Let's not make this a thing, okay?\"\n\nShe paused for a minute. \"Any other secrets? Are you also part of Crosby, Stills, Nash, Young and Franzetti? Got anything on Broadway? Have a few Grammys in your back pocket?\"\n\n\"Uhm, no on the first two.\"\n\nShe sounded almost pissed. \"You've got to be kidding. You have a Grammy?\"\n\n\"Well, no. More than one.\"\n\n\"Alex... How many fucking Grammys do you have?\"\n\n\"Two for Death Knight, nine for songs I've written with Bryn.\"\n\n\"Who... Nine? You have nine Grammys? You... What the living fuck? No one says anything to me? Does Jimmy know who you are? What am I saying, of course he knows who you are. And he never said anything to me.\" \n\n\"Not his fault. I asked him not to.\"\n\n\"Why? So you could play some sort of game of not letting the stupid local chick know she was dealing with some rock legend? Was it fun? Did the two of you have a good laugh behind my back?\"\n\nI was starting to get pissed. \"It's not like that. At all. I left the band because... Look, some things happened. I... I had to get out of that life. It fucked everything up. It's not me anymore and I haven't been that guy in decades. I'd give up absolutely everything if I could redo my life and never have joined that fucking band, okay? You have no fucking clue what that cost me, so yeah, now I stay in the studio and work on songs for other people. You have a problem with that, it's on you.\"\n\nShe stopped walking and paused before speaking. \"I... yeah. I guess I can understand that. Sorry. I shouldn't have jumped your shit. It's just a lot, you know? Let's just go get dinner and let me take this all in.\"\n\n\"What? Seriously? No, I don't think so, Em. What did you mean about appearances? I'm not letting that go so easily.\"\n\n**\n\nEm\n\nI was feeling a lot of things.\n\nLike, a lot.\n\nMy daughter's guitar teacher was a legend. A Grammy-award-winning rockstar who just happened to be teaching my seven-year-old daughter how to play fucking \"Happy Birthday\" on the guitar. That fact alone was enough to make my head spin a thousand times a second. ",
        "Then there was the crushing humiliation, the intense mortification of losing my shit at the dude who stopped us. And that got a thousand times worse as Alex glared at me, annoyance still written across his face as he refused to let me get away without telling him what I was talking about.\n\n\"Well?\" he asked testily as I froze.\n\n\"Can we talk about it somewhere else?\" I asked quietly. \n\n\"What? I just had to\u2014\"\n\n\"Please, Alex.\" My voice shook and I turned even redder, more pissed at myself for sounding pathetic than I was embarrassed. \"Just your car, even?\"\n\nHe almost said no. Then he studied me for a moment, sighed, and jerked his head towards the parking lot. We said nothing as we walked through the lot, save for Alex pointing out which car was his and me mumbling a quick \"thank you\" as he opened the passenger door for me.\n\n\"Flustered\" and \"flattered\" were then added to the growing list of emotions I was experiencing. \n\nHe got into the driver's seat but didn't turn the key. I tried to collect my thoughts and figure out how to tell him, but apparently I was taking too long.\n\n\"Gonna make me ask again?\"\n\n\"Give me a fucking second,\" I snapped.\n\nAlex made a small noise, almost like a scoff, but shrugged.\n\n\"I used to do some... alternative modeling.\" It came out sounding flat and lame.\n\n\"Uh. Okay.\"\n\n\"Under the name Ember Firestone.\"\n\nHe chuckled. \"All right.\"\n\n\"Naked.\"\n\n\"Oh.\"\n\nI swallowed, the silence in the car almost overwhelming.\n\n\"I was pretty popular,\" I added quietly.\n\n\"I can imagine.\" \n\n\"Please don't.\" \n\nHe laughed a bit and shrugged. \"Okay. And?\"\n\n\"And what?\"\n\n\"What's the rest of the story?\"\n\n\"Um... I stopped just after Leia was born? I don't... I still get recognized sometimes. I don't like it.\"\n\nAlex turned to me. \"That's it?\"\n\nI must have looked offended, or at the very least confused, because he started laughing again.\n\n\"I just mean like, that's... that's the deep dark secret?\" \n\n\"Um. Yeah. I used to do like, shows and stuff. Kind of like conventions? But I... don't. Not anymore.\"\n\n\"Okay.\"\n\nI stared at him. Where was the inevitable judgment? Where was the leering grin, the slow expectation that he probably didn't have to take me to dinner at a fancy restaurant, he could probably just pick up a six-pack and bring me back to his place and I'd... \n\n\"Look, you got your past, I got mine,\" Alex said. \"Does any of this change anything?\"\n\n\"Um. No, I guess not.\"\n\n\"Great. Let's call it even then.\" He turned the car on.\n\n\"Wait, seriously? You don't... I don't know, think I'm a whore or something? Like, surely this has to bother you. It bothers everyone.\"\n\n\"I don't think you're a whore, it doesn't bother me, and don't call me Shirley.\"\n\nI lost it, laughing harder than was probably called for due to the overwhelming relief. Alex grinned as he put the car in reverse.\n\nInviting Alex over for dinner had been an accidental-date, but this was more of a circumstantial-date. I mean, he had invited my kid, and my best friend and her kid and my brother... and thanks to Kelsie, none of them could make it. Still, I wasn't complaining as we got to the restaurant and Alex held the door for me.\n\nIt was fairly busy but we got a table with ease. My eyes widened a bit as I took in the prices on the menu but Alex pointed out what he said was best, so I shrugged and told him to pick whatever. I wasn't usually one to let someone else order for me but I trusted his opinion.\n\nIt was a good instinct; the food was amazing. What was more amazing was the company. The chemistry between me and Alex was undeniable. It had been there when he sat and talked for an hour and a half after our weird accidental-date. It had been there when he touched my thigh while waiting for Leia to take the stage. And it was there now, stronger than before, almost electric in the way it overtook us.\n\nAlex was easy to talk to. He was funny and clever. He was easygoing and accepting. And in that black T-shirt, he looked impeccably attractive. It barely crossed my mind that he was old enough to be my father until after dinner when we were strolling aimlessly along the riverwalk.\n\n\"Okay, so let me get this straight,\" he said, laughing. \"You hate your name.\"\n\n\"Yes.\"\n\n\"Even though it suits you perfectly.\"\n\n\"Yep.\"\n\n\"Because your parents gave you a weird name and you just wanted to be called like, Britney or Ashley or Caitlin like everyone else.\"\n\n\"Well, yes.\"\n\n\"And then you named your daughter...\"\n\n\"Oh my God, don't!\" I laughed. \"I was twenty-one. It made sense at the time.\"\n\n\"You just wanted everyone to know you were a Star Wars fan?\"\n\n\"No!\" I blushed, shaking my head as I tried not to smile. \"It's... look, it's kind of a stupid story. You're going to laugh at me.\"\n\n\"Yeah, probably, but you should still tell me.\"\n\nI bit my lip. Truth be told, the story wasn't all that funny. It was stupid, but not funny.\n\n\"I had this friend growing up. Like when I was really young, maybe Leia's age. His mom used to be really sweet to me, which I just... I didn't realize at the time, but she was definitely trying to make up for my own parents. Feeding me and buying me presents and stuff.\"\n\n\"Her name was Leia?\"\n\n\"No. It's just that they were really important to me. Anyway, we used to play like, all the time. And we always played Star Wars. Constantly. He was always Han Solo, I was always Princess Leia. It's one of the few good memories of my childhood.\"\n\n\"What happened?\"\n\n\"He died.\"\n\n\"Shit. I'm sorry.\"\n\nI smiled. It was all I could do to keep from crying.\n\n\"It's okay. It was a long time ago. But when I got pregnant and was trying to think of names, I wanted something... I dunno, meaningful. If she'd been a boy I would've named her after him. But she came out a girl, so I went with Leia. To a pregnant twenty-one-year-old, it seemed like a touching tribute. Unfortunately, I set her up for a lifetime of teasing, just like my parents did to me.\"\n\nAlex didn't laugh. Instead, almost hesitantly, he took my hand. I squeezed it gently.\n\n\"My son used to love Star Wars,\" he said.\n\n\"You have a son?\" \n\n\"Yeah. He would've been a couple years older than you.\"\n\nThe words seemed to bypass his mind before he said them, because he seemed to only realize what he'd said after a few moments. He let go of my hand, the sudden discomfort between us apparent.\n\nI just didn't know if that discomfort came from him admitting how close in age I was to his son or from the revelation that his son was gone.\n\n\"Guess I should tell you the whole thing,\" he said, clearing his throat. \"Kinda has to do with the reason I left the band.\"\n\n\"What happened?\"\n\nHe was basically Jimmy was what happened.\n\nAt least, if Jimmy had been allowed to continue, if Jimmy had gotten married really young and had a kid, and if Jimmy had kept drinking and doing drugs and partying until his young wife got fed up and threatened to leave him, so serious in her intent that she moved out of their house while he was on tour.\n\nThe biggest difference was that Alex had been far more valuable to his label than Jimmy was.\n\n\"I couldn't lose her. Told her I'd do whatever it took, whatever she wanted.\" He shook his head, chuckling dryly. \"She'd've never asked me to give up being in the band, but she wanted me sober. Big Mike stepped in, got me into rehab. Only thing was the label wanted to keep it all hush-hush, didn't want it all over the news. So they made up this story about us going on tour in Europe to cover the fact that I was in a swanky fucking rehab center in southern France.\" \n\n\"That... makes sense, I guess.\"\n\nHe shrugged. \"Yeah. Makes sense. I was fucking detoxing in paradise when she packed her shit back up to move back home. Was probably lounging by a pool feeling sorry for myself when that truck ran a fucking red and hit the car.\"\n\nThere were no words. \n\n\"'Course they were both in it. Never would've happened if I'd just...\"\n\nHe trailed off, jaw clenched. My heart ached for him, the guilt he was carrying so strong I could almost feel it. He'd lost everything, and he blamed himself.\n\nThere were no words. Of course there were no words. Words would never be enough.\n\nI did the only thing I could think of: I stepped forward and wrapped my arms around Alex. He stiffened for a moment, but only just a moment before he was hugging me back. He clutched me tightly, body pressed against mine, his head bowed against my shoulder.\n\nWe stayed that way for a long time, far longer than was appropriate. It was probably because at some point, the hug stopped being about comfort. A slight shift of my hand here, a subtle move of his hips there, and suddenly my heart was racing as the heat from Alex's body overtook mine. His breath hitched almost imperceptibly and he swallowed as I became very aware of how good it felt to be held by him.\n\n\"I should probably get you back home,\" he said quietly.\n\nI let go of him and stepped back, trying not to blush.\n\n\"Yeah. Kelsie's probably had it up to here with the girls by now.\" \n\nThe car ride back to my place was quiet. Alex pulled into the driveway just as my phone went off.\n\nThe girls and dog are having a sleepover at my place wink wink nudge nudge\n\n\"Goddamnit,\" I muttered.\n\n\"What's wrong?\"\n\n\"Uh, Leia's just sleeping over at Kelsie's tonight. She'll be... tired tomorrow. You know. Cranky.\" \n\n\"Oh.\"\n\nThere was a silent, electric, overwhelmingly overt tension as the implication hit him.\n\n\"You should come in,\" I said, staring straight ahead at the dashboard.\n\n\"Should I?\"\n\n\"Yeah.\"\n\nHe didn't say anything as he contemplated long enough that I couldn't take it anymore.\n\n\"Or don't,\" I said. \"Invitation's open.\" \n\nI got out of the car before he could say anything else. My pulse threatened to burst through my skin as I unlocked the front door, not looking behind me, not checking to see if he followed. When the front door shut with a quiet click behind me, I let out the breath I hadn't realized I was holding, though my shoulders slumped with disappointment.\n\nAt least, they did for the ten seconds or so before Alex pulled the door open again.\n\nI turned towards him; he reached for me. Without a second thought, his lips were pressed against mine, urgent and soft and leaving me breathless. It was like being showered with sparks, like something had burst above us and was raining electricity and heat and desire over us in the front hallway.\n\nI had never wanted someone so badly in my life.\n\nHis hands were confident, one holding the back of my head as he kissed me and the other sliding to my waist and around my back, pulling my body tight against his. I gasped as he bit at my lip, tongue flicking over the spot he nipped at before doing it all over again.\n\nMy hands were less confident, but I slipped my hands in the opening of his leather jacket and ran them down his chest. He made a soft noise when I moved past the hem of his shirt and to the waistband of his jeans, my fingers tracing along to the buckle of his belt.\n\n\"I have concerns about this,\" he mumbled, but he didn't stop kissing me.\n\n\"They don't seem too pressing,\" I murmured back.\n\n\"Em... Ember.\"\n\nI stopped what I was doing and looked up at him. His eyes met mine, wide and guarded, but unable to completely hide the desire buried in them.\n\n\"You're sure?\"\n\n\"Yes.\"\n\nHe groaned softly and pulled my face to his again. \n\nBy the time we made it to my bedroom, Alex's jacket was off and his belt was unbuckled. My shirt was lying somewhere in the hallway and my hair was worked out of its ponytail, falling around my shoulders. His hands were running along any inch of exposed skin he could find, a trail of tingling arousal inching along my skin as he moved his fingers. \n\nI lifted his shirt and he paused his exploration of my body long enough to pull it off over his head. Then he was unhooking my bra, pushing the straps down my arms and letting it drop to the floor.\n\nBefore he touched my breasts, he paused, staring down at them.\n\n\"I only took out most of my piercings,\" I explained, almost shyly.\n\nAlex grinned and said nothing as he lowered his head, taking one pierced nipple into his mouth as he gently cupped my other breast.\n\nI tilted my head back, unable to stop myself from moaning softly. My nipples tingled as he lavished attention on them, his tongue twirling around the barbell, sucking and kissing and licking all around my breasts. I cradled his head against me, sighing as he played with my tits, running my fingers through his hair.\n\nHis mouth didn't leave my breasts, but his hands did. He unbuttoned my jeans and pushed them down just enough that he could slide his hand into my panties. One calloused finger slipped between my folds and I felt him smile against me when he realized just how wet I was.\n\n\"I want you.\" I tugged gently on his hair and he groaned.\n\n\"Fuck, Ember,\" he murmured.\n\nI don't know what was more surprising: the fact that I didn't mind him using my full name, or the fact that it was the sexiest sounding thing he'd ever said.\n\n\"Please,\" I said, and he laughed. \n\nThere wasn't much more in terms of foreplay. Neither of us was patient enough; we had been dealing with a day's worth of torturous sparks between us. When he pulled his hand from my panties, he pushed them the rest of the way down and I stepped out of them. As he straightened up, I finished undoing his jeans and he let them drop to the floor as he pushed me towards the bed.\n\nI licked my lips as he finished undressing. Alex laughed when he saw where I was looking and I grinned unapologetically. \n\n\"Leon really is getting larger,\" I said.\n\n\"Oh fuck, don't call my cock Leon,\" he groaned.\n\nI laughed as he crawled onto the bed next to me. Before he could bring himself over me, I pushed on his chest and got him to lie on his back. \n\n\"I have an IUD. Are you... good?\" \n\n\"Yep.\"\n\n\"Thank God.\" \n\nI swung my leg over his hip, positioned him at my entrance, and sighed in relief as I pushed myself down on his cock. Alex groaned, his eyes closing briefly and his hands moving to my hips. \n\nThere was no teasing, no slow buildup. I rode him hard, craving the satisfaction he was bringing me. At first, he let me use his cock, let me grind against him and bounce on top of him, but before long he wanted to take control.\n\nHe pulled me forward, bringing my breasts towards his face so he could suck my nipple as he began thrusting up into me. I cried out, clinging to him as he moved inside me, pleasure hitting every sensitive spot in my body and overwhelming my senses. How he could do so much at once was beyond me; his mouth was doing one thing, his hands holding me in place, his hips pushing up inside me hard and rhythmically. \n\nI was mumbling something incoherent when I came. My legs trembled uncontrollably and I clutched at him, crying out as my vision sparked with stars from the intensity of the pleasure. I heard Alex groan, felt his mouth move away from my breast as he said something, and then he was kissing me.\n\nWhile he was kissing me, he came, his own noises vibrating against my mouth as he finished. Still quivering, I rested heavily against him, gasping for breath. He held me close, one hand moving up to push my hair off my face.\n\nWe probably should have talked about things right away. I mean, that would have been the responsible thing to do. Instead, we kissed a bit more, curling up next to each other and falling asleep without so much as another word.\n\nWhen I woke the next morning, he had already left.\n\n**\n\nAlex\n\n\"Morning, Alex!\" Lini was unspeakably perky in the morning and I've grown to love her like a sister, but I just couldn't handle shit that morning. \n\n\"Don't, okay? Just... Don't. I need some time.\"\n\nI closed the door behind me as I entered my office. Leaving the light off, I sat at my desk and berated myself. I'd left like the proverbial thief in the night. As if I was ashamed of her. The truth was, I was ashamed of myself. She was... I didn't know what the right word was. Not 'pure'. 'Good', maybe? \n\nShe was a hardworking mom, a good person who had helped to raise her brother when no one else stood up. Me? I was the guy getting pep talks by self-help gurus while my son and wife were t-boned and killed by a guy in a truck. I laid there staring at Em for half the night before I couldn't take it anymore. She deserved better than me. It was like I was sullying her bed by lying next to her. \n\nMike picked up on the first ring.\n\n\"Hey, you in the office?\"\n\n\"Yeah. You free tonight?\"\n\n\"Not sure. Why, what's up?\"\n\n\"I need to get to a meeting. Can you...\"\n\n\"Yup. There's one at First Methodist at 7:00. I'll drive.\"\n\n\"Okay. Mike? Thanks.\"\n\n\"Don't thank me. We're in it together, brother. Just work the program.\"\n\nLeia's next lesson was the following day and I wasn't sure how things were going to go down. I ran from Em's bed like a coward. There was no way that was going to end well. She deserved better. I knew it and she had to know it. We were done, that was obvious, but I couldn't stop thinking about Jimmy and Leia. He was better than I would have anticipated, much better. That little girl had wormed her way into my heart and I wasn't sure how I was going to deal with things if that was over as well.\n\nEm didn't call or text and my day was hell. My stomach was rumbling as we drove to the church and I felt like I could sleep for days if I could manage to close my eyes for just a few minutes. Mike got me some donuts and a coffee as I sat down and I nibbled a bit. The coffee just brought up some bile that was waiting for an excuse to make its presence known. \n\nI wasn't going to start drinking because of what happened the previous night. That wasn't the issue. The concern was things piling up and me starting to spiral. I wanted to avoid that, so there I was, eating stale donuts and avoiding bad coffee. \n\nWe had some time before the meeting started and Mike was talking to a woman next to him who looked like she had just realized that she made a horrendous mistake by choosing that seat. \n\n\"Yeah, so who does that? Fucking cookies. Sorry, effing cookies. Fucking Thin Mints, you know? Sweetest little kid and then some degenerate just helps themselves. Well, they're going to get theirs. Don't worry about that. They sell these Exlax cookies things. I took them out and put them in an empty Girl Scouts box. Do-si-dos. Who the hell eats those things? Anyway, I then pulled all the tp from the bathrooms. Happy eating, motherfucker. Am I right?\"\n\nShe made an excuse to get some tea and sat on the other side of the room when she came back. \n\n\"Dude, you gotta let this go. It's just some cookies.\"\n\n\"It's not the cookies, asshole. It's the principle. They thought I been sleeping on it. Didn't want to fess up. Deadline came and went. Good. I got 'em right where I want 'em.\"\n\n\"Yeah, regular James Bond.\"\n\n\"Fuck you. You going up?\"\n\n\"Yeah.\"\n\n\"Me too.\"\n\n\"Good. Don't talk about the cookies.\"\n\nWhen it was time, I got up and walked to the little podium thing they had set up. \n\n\"Hi, my name is Alex and I'm an alcoholic. So, I had sort of a rough day...\"\n\nAfter speaking for about five minutes, I made my way back over to my seat. It was cathartic. I spoke about myself, my issues and about Em. Big Mike's surprise was evident when he heard how I fucked things up with her. I expected compassion, what I got was a mixture of anger and frustration flashing across his face.\n\nThere was a ritual to the meeting and a sense of community. It was like revisiting something that had put me back together when I thought I was broken beyond repair. There were echoes of that healing for me and parts of me that were frayed began to reattach. For some reason, I was hungry for a really good burger when we finished up. Mike and I stopped on the way back to the office to get my car and had two giant, juicy cheeseburgers. I saw some families there and I thought I'd lose my appetite, but I didn't. I was just consumed with 'what ifs' and 'what might have beens'."
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "consensual sex",
        "guitar",
        "may december",
        "musician",
        "older man",
        "oral sex",
        "rock star",
        "romance",
        "single mom"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/no-strings-attached-16"
}