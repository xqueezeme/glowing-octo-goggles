{
    "title": "Justice",
    "pages": [
        "Author's foreword: Thank you for allowing me to share a small portion of the stage with these truly incredibly talented authors today. A special thank you to Randi, for your invitation and encouragement, and the gracious offer to edit my story which made it so much better than my original draft. Finally, to the readers, thank you for your support, kind comments, and e-mails while I was on my hiatus. I hope you'll enjoy the story.\n\n******\n\nI just sat watching the last residual tiny air bubbles slowly ascend into what was the dissipating foamy head of the beer awaiting consumption. The frosty mug condensation was balanced between a mix of watery droplets and icy glaze. My hand felt the texture of the paper coaster and the salt granules poured by the bartender to keep the glass from sticking to the paper coaster; the rough disparity of texture was somehow soothing.\n\n\"You going to drink that or just keep looking at it?\" the bartender growled.\n\nI looked up at him, weighing a variety of responses from bitter sarcasm to meek acquiescence, then I decided on a middle ground.\n\n\"I haven't decided, Uncle Jack.\"\n\nThe answer not being the one he wanted made my uncle shake his head, turning away to tend to better humored paying customers located at the far end of the bar. Another family vote against me, sending ripples through my quandary.\n\nWell, 'fuck him and the horse he rode in on', I thought. I didn't ask for this shit. To distract myself, I looked across the span of the bar. It was a microcosm, trapped in Fifties' d\u00e9cor, unaffected by a half century of change.\n\nWalls adorned with neon signs of beers no longer in existence, dark wooden walls with just the right mixtures of windows allowing a golden glow pouring in each afternoon, giving a friendly ambiance. The mahogany bar was irregularly indented from countless glasses slammed into it in anger and joy.\n\nIn contrast, the colorful Wurlitzer jukebox stood against the far wall where a dancing stage competed against the loss of floor space for additional tables and chairs. Profitability be damned, was the order of the day.\n\nGrowing up, I was made painfully aware of that fact. I had been drafted as free labor at an early age since child labor laws didn't apply in a family business. I swept out the place, bussed tables, carried cases and crates, rolled kegs, cleaned urinals, and toilets, mopped up blood and cleaned up vomit.\n\nIn my unenlightened view, I thought I was vested into being allowed a voice in how the place should be run. The kind owners of this establishment, to wit, my uncle, my Aunt Kate, my mom, Mary, and my dad, Tom, quickly, and thoroughly, informed me otherwise. My dad and Uncle Jack, in addition to being among the owners, also served in the city's police department, dad being a lieutenant in one precinct, and Uncle Jack a patrol sergeant in another. Mom was a neonatal nurse at the hospital. Only Aunt Kate was a full-time family worker at the bar, therefore, she handled the day-to-day operation. Mom, Dad, and Uncle Jack pitched in when they could to help the working staff.\n\nThat said, even though Aunt Kate ran the place and all the business licenses and permits were in her name, they all deferred to my father for the important business decisions. I got the impression that somehow, dad had figured out the way to buy the bar initially, and he was the controlling factor in most decisions. Still, he always listened to the others' opinions. Except for me, of course.\n\nI had suffered through more arguments than I cared to remember, trying to convince my dad and the others that we could make more money utilizing the space for bigger crowds. Dad and Uncle Jack usually just laughed at me as they fed coins into the jukebox and lead their wives out on the dance floor to slowly sway to a Sixty's tune.\n\nAnother example of the anachronism of the place, the jukebox contained an eclectic mix of tunes handpicked by my parents, and my uncle and aunt. All were subject to change at a moment's notice. On a given night, you had Procol Harum's \"Whiter Shade Of Pale\" and a little known rocker tune of theirs, \"Whiskey Train\"; The Rolling Stones' \"Wild Horses\" and \"Little Red Rooster\".\n\nBooker T. &amp; the M.G.'s, \"Green Onions,\" and Muddy Water's \"Mannish Boy,\" Miles Davis' \"Summertime\" and the Allman Brothers' \"You Don't Love Me Anymore,\" The Animals' \"House of the Rising Sun\" and \"Orange and Red Beams.\"\n\nLittle Feat's \"Willin\" and \"Dixie Chicken,\" Jackson Browne's \"Take It Easy/Our Lady of the Well,\" J.D. Souther's \"How Long\" and \"The Fast One,\" Eric Clapton's \"Tribute to Elmore\" and \"Layla,\" Bob Dylan's \"Sad Eyed Lady of the Lowlands\" and \"On the Road Again\".\n\nThe list would go on and on, and though any number of songs could be substituted for another one, one was sacrosanct. That was 'B4' on the jukebox. Not on pain of death, could there ever be another song in that slot.\n\nI would cringe and hate that song, due to it being played every night when my mom got off her shift as a nurse. She would come to the bar to be swept up by my dad and carried in jovial protest to the dance floor, placed down and kissed before they began their slow dance, oblivious to the world. The scene was so saccharine that it would've given anyone diabetes.\n\nBut, like I said, my opinion didn't count for shit, even when the opportunity arose for them to sell out the bar and enjoy a very rosy retirement. A tech billionaire with more money than God and his toadying entourage, deigned to discover the bar one evening.\n\nAfter countless enquiries about various rare Scotch and single barrel bourbons, the effete crowd was informed they would have to make do with Johnny Walker and Jack Daniels, or take it down the road. Well that just pissed off the group, since my dad had the audacity not to grovel, but for some reason, it struck a chord with the billionaire so he settled in for the evening, along with his grumbling crew. What the hell could they do, since he was paying?\n\nAs the billionaire continued to suck down drinks, he discovered charm in each and every nuance of the bar, and when he discovered the jukebox with its selections, he started dancing with the nubile arm-candies of his group.\n\nThen he started raving about the bar, counting it among the best he'd ever been to, including it among some bar in Singapore, El Floridita, in Havana, and a seedy beer garden in Munich. This, of course, immediately changed the attitude of the group as they dashed around the place, dragging their benefactor around, marveling at the quaint place.\n\nNothing would do but for Dad to join them at their table for a drink and pass some pleasantries. So my bemused father did, trying his best to avoid being included in the selfies being snapped by the duck-lipped silicone-enhanced vixens, posted in god knows what social media outlet.\n\n\"Tom,\" the billionaire slurred as he wrapped a comradely arm around my dad, \"Tom, this place is an absolute treasure!\" His sentiment was immediately and enthusiastically echoed by his friends. \"You have to let me buy this place!\"\n\nDad just smiled as he quietly slipped unnoticed out of his customer's embrace and told him it wasn't for sale. \"Of course, it's for sale, Tom. The whole fucking world is for sale and I'm just the guy that can buy it!\" the billionaire boasted as he plead his case.\n\n\"Tell you what; I'll give you a million dollars right now if you sell me this place.\"\n\nMy jaw dropped at the amount and dad continued to grin and said, \"Sorry, Bill, it still isn't for sale. It's not just my place; I also got to answer to my brother, Jack, his wife, Kate and my wife, Mary.\"\n\n'You forgot about your only kid', I mentally screamed at him. 'Your son, who would be quite happy with some part of a million dollars payout'. The look on my face must have enhanced my father's enjoyment, as his grin got bigger at my perplexity.\n\n\"Oh, so you've got partners. Well, I can take care of them, how about four million?\"\n\n'YES! FOR GOD'S SAKES, SAY YES'! I telepathically tried to impart my thought to my father.\n\n\"That's a nice offer, Bill and I'll tell the others what you've offered, but as far as I'm concerned, I'm not willing to sell,\" Dad replied.\n\nMy entire body was shaking. A four million dollar offer and my dad calmly turned it down as though anybody would want this dump for four million dollars. I wanted to go over there and tell the guy that why, yes, of course we'd sell for four million dollars!\n\nDad took another look at me and his shit eating grin got even bigger.\n\n\"I'm not used to being denied, Tom,\" the billionaire declared, \"Final offer, eight million dollars! Two million dollars apiece. That should satisfy you and your brother and your wives!\"\n\nDad looked at the billionaire and serenely said, \"I never could expect this place to go for that much money. It is a wonderful offer and I'll always appreciate that you made it, but again, I'm saying no.\"\n\nThe flabbergasted billionaire looked shocked at my dad's refusal to sell and finally noticed my near state of apoplexy.\n\n\"What's wrong with that kid?\"\n\n\"Oh, that's my son, Mike, and he's trying to tell me to take you up on your offer,\" Dad laughingly explained.\n\n\"All right, Tom, I'll help your son out. Ten million dollars, last and final offer. All you've got to do is say yes, and all of your dreams will come true!\"\n\nI almost yelled yes out loud, and then I noticed the subtle shift of expression in my father's face. This was the one that said, \"don't fuck with me.\" The one I grew up with and learned well the lesson not to disobey. Pushing the envelope was all well and good, as I continued to assert my independence, but there were limits, and I knew I had reached that zone.\n\nIt went unnoticed by the besotted billionaire as he waited smugly for my father's acceptance. \"Bill,\" my father replied, \"thank you for your generosity. I'll tell you what, if you still feel this way tomorrow, come by and make the offer to my partners. If they say yes, then I'll agree to your terms, but I doubt you'll be able to convince them, either. So, next time in town come by for a drink, the first round will be on me.\"\n\nWith that, the billionaire left, vowing to return tomorrow and swearing undying friendship with my dad and everlasting allegiance to Genero's Tavern, the, quote, \"best fucking bar in the world,\" unquote, from the wobbling Midas as his minions helped steer him to his limo.\n\nMy dad just sat there at the table watching them leave with a little sad smile on his face. As he slowly finished his shot of whiskey, I finally trusted myself to go to the table and start clearing away the debris.\n\nHe looked up to me, expecting me to look at him. I tried in vain not to, but finally I couldn't stand it. \"Dad, how could you?\" I sputtered, \"Ten million dollars,\" I paused, trying to voice my frustrations adequately and failing to do so.\n\n\"Yeah, ten million would've been one helluva payoff,\" dad agreed, musing in response. \"Sit down, Mike, and I'll explain why I turned him down.\" I sat waiting to hear what possible reason he had to turn down the key to the bank.\n\nHe hesitated. \"Mike, I've dealt with guys like that my whole life. You, on the other hand, you're still a teenager and you've got a whole lot of growing up to do when you get out there in the world. You're going to find a Bill every time you turn around.\n\n\"He's either going to be smarter, richer, or better looking than you, and he'll never let you forget it. Now, there are two ways to deal with a Bill. You can meekly agree that he's better than you, or you can stand eye to eye with him and let him know that you're just as good as him.\n\n\"That guy,\" he nodded to the door, \"came in here expecting to lord it over everybody. Ordering $100 dollars a shot Scotch and boutique bourbons and expecting me to grovel and apologize for not being able to fulfill his requests.\n\n\"When I told him that he'd have to settle for Johnny Walker or Jack Daniels, or otherwise take it down the road, he took that as me telling him 'fuck you,' so he settled in trying to find some way to assert his superiority. While he was doing that, he got a surprise and realized he was actually enjoying himself.\n\n\"Just sitting there, drinking and dancing with his friends, talking and enjoying himself for a rare change, but he still had to get that one last shot at showing me how big his cock was, figuratively, and he made his offer.\n\n\"Now, I could've immediately accepted and thanked him profusely, comped all his drinks and shook his hand until his hand was bleeding, but that was what he was wanting and expecting. I wasn't going to give him the satisfaction, and I turned him down.\"\n\n\"That was me letting him know that my cock was just as big as his, and he didn't faze me a bit. So, he upped his offer, and again I turned him down. He raised it again, hoping that I'd agree, because now he was locked into a contest of will.\n\n\"I could see that Bill was trapped and he had no way out. You see, son, a guy like Bill needs a bar like I need a third nipple. He's smart and made a shitload of money and he didn't do that by making many mistakes. There's no way he could ever justify paying that kind of money for a place like this.\n\n\"I could've continued turning him down until the offer would've been ridiculously noticeable to his friends, but I decided to cut him some slack and gave him his out by telling him to come by tomorrow and talk to Jack, Kate, and your Mom, and convince them.\n\n\"But, he won't come back. Chances are, we will never see him again. He'll go on making obscene amounts of money and we'll continue to work here, and I'm okay with that. I make a good living and provide for you and your mom. I'm beholden to no man, and I'm good with that.\"\n\nFor some reason, his comment gave him pause and he blurted out, \"There's only been one time I've ever been on my knees to another man, and that will never happen again.\"\n\nThe cold steel determination on his face frightened me. He must've picked up on it as he morphed back into character. \"So, he left with his pride intact, and I'm sitting here with my pride intact and you're sitting here at a table that needs to be cleaned so some paying customers can sit down.\"\n\nI had to say it. \"But what if he's shows up tomorrow with a ten million dollar check?\" Dad replied, \"If he does that, I'll scramble and get Jack, Kate, and your mom to sign so fast that it will make your head spin. I ain't that stupid, son!\"\n\nBill didn't show the next day.\n\n*******************\n\nFuck!!! Another goddamn Sixty's favorite started blaring out of the jukebox. My uncle noticed my grimace and he winked at me in response. Frigging Allman Brother's \"Mountain Jam\" started cranking up.\n\nDon't get me wrong. Hearing guitar gods like Duane Allman and Dickie Betts trading licks for 33 minutes is amazing, but, try hearing it night after night in the bar, and coupled with the mood I was in, the pleasure factor was hovering around zero.\n\nYeah, and now you're about to remind me that a jukebox only plays 45 singles, so there's no way the antique could play long versions of rock and roll songs. Well, thanks to my dad cutting some slack on a computer hacker he arrested, the guy converted the mechanism to play multiple CD's instead of records, as a way of showing his appreciation not to be heading to jail.\n\nC'mon, my dad is a cop, not a saint. Rules and laws were made to be bent when common sense dictated. The hacker wouldn't have lasted a day in jail, and dad got the kid a legitimate job. So what if the kid wanted to return the favor?\n\nTaking legal shortcuts to provide a common sense solution was a specialty of my dad and Uncle Jack. Take the time two rocket scientists decided to hold up the bar at happy hour.\n\nI suppose the two thugs first got a clue after they drawing their weapons and announcing a holdup, when twenty off duty cops enjoying a drink drew down on them and covered them from every angle. Somehow, they kept from pissing in their pants as their weapons were collected and their wallets were inspected.\n\nNow, the misguided youths expected the usual routine: get arrested, go to jail, get bonded out, show up for plea and arraignment, get assigned a public defender, have a court date set near the speedy trial deadline, have a mental evaluation ordered, plea bargain a deal with an overworked prosecutor, and be back on the street robbing someone who wouldn't defend themselves.\n\nWhat happened was, my Dad had a simple solution. The thugs' money was \"liberated\" from their wallets, along with their weapons, and their getaway car, and their clothes. They were pushed out in the street to be laughed at by gawkers, and videoed upstream to the internet before being arrested for public indecency by a police unit that \"just happened\" to be patrolling by.\n\nWord got out on the street what had happened to the two, and they were a laughingstock. Interesting enough, an anonymous contribution to the Victim's Reparation Fund was donated in the exact amount provided by their money, clothes, weapons, and car (after a visit to a chop shop) brought. The two would-be gangsters, having lost all street cred, finally left town to avoid the embarrassment. Nobody ever tried anything in Genero's after that. Moral of the story: Don't pull any shit in a cop bar.\n\nI took another look at my beer. The icy glaze had melted off and I hadn't even taken the first sip. Not that I was really in the mood for drinking, if I started there was no telling when I'd stop, given the mood I was in. How the fuck did I ever get myself in this situation?\n\nThe previous night was supposed to be the best night of my life, and it was. Until it wasn't. Now I'm sitting there trying to figure out what to do, and I'm scared. Scared that I was going to make the wrong decision. Scared that I'd let the wrong person in my life. Scared that I might wind up losing her. Scared that I might not. Nothing made any sense anymore.\n\nChrist, less than 24 hours before, we left the reception and we were all over each other in the limo. Kissing and groping and clutching at each other in a frenzy, heat boiling and percolating, held back by a thin strand of propriety as we exited the limo, managed to collect our key to the suite, riding in the elevator, oblivious to bemused onlookers, pausing at the door and finally negotiating the locking mechanism while she rubbed the crotch of my trousers. Swooping down and collecting her and carrying her over the threshold. The door swinging shut as I carried her through the suite, kissing her the entire time until I gently placed her on the bed.\n\nI had an entire plan of slow seduction for the entire night, and it went right out the window. She broke away from me, adorned in her virginal white lacey finery and fixed me with a lusty gaze. She slowly began dancing to an unheard song as I sat on the bed, darting near me and then moving just out of reach before I could grab her, pivoting her luscious body clockwise and dipping low as she made her direction counter-clockwise to an unknown tempo. Rubbing her hands against her torso, she whipped her long brown hair across her face, sliding her arms down, lower and lower, the palms of her hands joining at the juncture of her legs while she looked at me in a plea to satisfy her and groaned softly.\n\nTurning away from me, swiveling her tight buttocks and giving me a teasing look across her shoulder as she bent down she was at a ninety degree angle. Slowly, she rose up, as once again she twisted until she faced me, a huge smile on her face as she knew she had me mesmerized.\n\nThen teasingly, she fiddled with the collar button of her Victorian gown, slowly drawing out the drama of unbuttoning it and then pretending she wouldn't. Back and forth it went, as she ramped up the suspense of when it would finally happen.\n\nA flourish, as her neckline was exposed. A view of her throat I had seen countless times, yet now appeared as a forbidden treat. I continued to stare at her as she danced joyfully across the room, celebrating holding me in thrall.",
        "Soon, the next button, a wistful look on her countenance, did she dare unbutton another? Why, good girls just don't do those sorts of things! Her coquettish expression said it all as she pursed her lips in determination.\n\nI mentally begged her to continue. Well, all right! Just this once, but, don't you dare ask for anything else! She responded, as the next button was unleashed. In term of actual exposure, it was so little, but, in passion, so much.\n\nDo you want another? Her lustful stare had me transfixed.\n\nYes! Yes! Please, yes!\n\nThe next button fell. Now, the tops of her breasts were exposed. I caught a momentary glimpse of her bra during her gyrations. I began to take off my coat. She rushed me, stopped me and shook her head no. I wasn't permitted to do anything. Assured of my compliance, she continued her dance. Her arms raised upward as she twirled before me. She moved close to me and gave me a fleeting kiss, then backed away.\n\nThe erotic nature of her voiceless pantomime stirred me as the next button fell. Now, the deep cleavage was exposed to me and she moved herself against my face slowly rubbing herself. She brushed my hands away, refusing to give me any control of my domination.\n\nThe buttons continued to fall, each bringing a new peak of sensation and frustration to me. Then finally, as though taking pity on me she slid out of her gown. The view was as if Botticelli had reincarnated his Birth of Venus. How could a woman be so innocent and sinful at the same time?\n\nNow, garbed in her bra, panties, garter belt, silk stockings and high heels, my temptress did her version of Salome's Dance of the Seven Veils. Garment after garment was deposited on me. I relished seeing each and every sinful inch of her delightful flesh. I, too, was ready to grant her any wish as she finally landed in my lap. She furiously kissed me as she began to undress me.\n\nFirst, my jacket, as she playfully rained kisses on my shoulders, arms, and torso; then, a quick unbuckling of my belt and a powerful tugging to pull out my shirttail. She moved her face against my wrist as she undid my cuff button and administered another kiss. Then she repeated the procedure with my other arm.\n\nShe moved and grasped my necktie, tugging me towards her for a kiss as she held on to her bridle, controlling me, managing me, dictating her will, then, loosening the tie, unknotting it, and letting it fall limply to the floor.\n\nThe collar button, undone by her fingers, unadorned save for the glittering diamond ring and gold band I had placed on her earlier that day. Her face moved to my neck as she kissed, nibbled and lavishly licked her way to the next obstructing button.\n\nSlowly, ever so slowly, she crept down as button after button fell prey to her. Her teeth bit and tugged on my nipples as she rubbed her palms appreciatively on my chest. Then, the shirt discarded, she slid out of my lap to her knees, parted my legs, and moved her face to my lap.\n\nWithout the use of her hands, her tongue found the fly of my pants and her teeth nipped on the fastener and unclasped each brass cog in an erotic liberation, all the while fixing me with her sea green eyes. I stood, and the trousers slid down as she attempted to hold my rock hard thighs.\n\nMy dick was painfully throbbing in anticipation when it was finally unleashed from the confines of my boxer briefs. She moaned as she gripped it and gently rubbed it against her face.\n\nShe held my shaft, kissing it, rubbing it, stroking it. Then, kissing the bulb of my cock, she allowed it to slide into the warmth of her mouth, her tongue rapidly flicking on the head.\n\nI tried to manage what little control I had, but it was too much to bear. With a growl, I knelt down, physically picked her up and held her against me. Her legs instinctively wrapped around me as I wobbled to the bed and fell on the mattress.\n\nShe kissed me with a passion that I had never experienced and rolled beneath me on the bed. She cupped my face in her hands and spoke her first words since we had entered the room, \"You are mine!\" Then she kissed me again, softly, in trust, in fealty, in complete and absolute love.\n\n\"I am yours,\" I gasped, \"And you are mine, forever!\" I declared.\n\nWe kissed again. All the while, we maneuvered our bodies to accommodate each other. She moaned softly as I cupped her tit and with vigor rubbed her pert nipple with my fingers. My lips were applying kisses to her defenseless neck. I moved up to her earlobe and gently bit down, an erogenous zone I had discovered early in our courtship.\n\nShe had described the sensation as an electric shock that tended to short circuit her neural network. I was immediately rewarded with a vixen writhing in lust underneath me. A lusty sigh escaped when I brushed her hair away and trailed my face down to her bosom and suckled hard on her exquisite tit.\n\nHer hands planted on the sides of my temples kept my head captive as I lavished attention on her. I had other treasures to delve. Southward, I trailed, rubbing her taut ribs, heaving in desire, to her flat abdomen I nuzzled with my face, to her navel, which I licked and teasingly nipped.\n\nStill downward, her pelvis gently pulsating in anticipation, the soft downy texture of her pubic hairs, neatly trimmed in a landing strip, brushed by my chin, my lips, my nostrils flaring open as her scent wafted into my conscious, encouraging my already overloaded lust to seek avenues of release. My twitching cock, hard and throbbing, painfully needed to couple within her.\n\nNot just yet.\n\nI sensed the damp lubrication of her heated vulva as I gently licked and blew on her, teasing her ever so closely to an ecstatic salvation, licking and tugging her lovely pink lips, which continued to secrete as she thrashed away. Her thighs locked down on my head, rubbing against me in erratic patterns.\n\nHer sobs escalated in pitch and volume as I relentlessly drove her. \"Please, Mike! You're driving me crazy!\" she begged. That only encouraged me as I greedily lapped her, driving her to a crescendo until I finally triggered her by clamping her sensitive clit with my teeth.\n\nI held on as she rode through her explosive climax, bucking me to and fro. Her yells and sobs of release echoed in the lavish room until finally, her gyrations ebbed still, as I crawled up to her, her kisses raining on me in appreciation.\n\nI stared down at her as our bodies instantly adjusted into position, her hands groping me as she angled my dick to penetrate her. I slowly slid into her as I felt her shift to accommodate my girth. Onward I plunged. Then I was finally vested in her.\n\nI looked into her wonderful green eyes, counting myself lucky that I would have an entire lifetime to gaze into them. \"I love you so much, Lila!\" I softly whispered as I gently kissed her. The kiss escalated into a more passionate one.\n\nI felt her thrust against me, urging me to initiate our coupling. Slowly, ever so slowly, I began rocking against her, our bodies subtly shifting to explore different angles and frictions, picking up the pace, alternating long thrusts, then hard ones.\n\nStopping, gasping for breaths in a kissing break as our sweat-glistening bodies slid against one another through the night. \"Oh Jesus, Mike, I'm about to come!\" she moaned in my ear. I slid in fully within her and stopped my motion. Experience had shown me that her orgasms tended to be a shorts series of trembling spasms that twitched her legs and shook her body in the full throes of ecstasy. She preferred my weight to pin her down as she rode through a cloud of bliss, and then to slowly build up to the next release.\n\nShe held me in her closely, sobbing in my ear, her hand on the back of my head, her other arm braced on my back, fingernails digging in my flesh. Her eruptions subsided as I whispered if she was ready to continue. Her pelvis began to grind into me for a response.\n\nPicking up the pace, we continued to rock our way to pleasure. She moved her hand against my shoulder and firmly pushed against it. Her signal to change positions. Suddenly, I was on bottom and Lila was a cowgirl, riding her stud. Her hands cupped her tits as she bucked me.\n\nI was about to erupt and she knew it. She collapsed on me, begging me to come. Het tits were now sliding on my perspiring chest, my hands firmly framing her ribs as I stroked my way to completion. Then I was there. I felt the amazing sensation of release as I shot stream after stream of semen into her. Her body was caught in another orgasm as we completed our act.\n\nAfter catching our breaths, we engaged in our post-coital play, kissing and caressing each other. Would we go again? Perhaps, or perhaps not. Hell, we had an entire lifetime to decide.\n\n\"I love you, Mr. Mike Crowder!\" she wearily exclaimed, worn from an entire adrenaline filled day. \"And I love you, Mrs. Lila Crowder!\" I softly responded as we entwined hands. I felt the shape of the ring I had placed on her ring finger just hours before.\n\nHer breathing pattern drifting to slumber, I enjoyed the quiet as her heartbeat, warmth, and weight served as a comfort blanket while I slowly drifted to sleep.\n\nI woke as I sensed Lila stretching awake, purring like a kitten as I caught her sleepy- eyed gaze. Morning light was streaming into the honeymoon suite, bathing it in golden splendor. We reached for each other, started and completed Round Two.\n\nAfter an agreed upon period to tend to ourselves in the bathroom, a spontaneous Round Three resulted in the shower. Which, of course, required Round Four after we donned the complimentary expensive terry cloth robes and fell back on the bed. This required another shower session as we reluctantly fought the urge to make it Round Five.\n\n\"Do you feel like going again?\" Lila asked.\n\n\"With you, any day or anytime, but, I need to recharge my battery, woman. You liked to killed me last night.\" I laughed.\n\n\"I just feel like staying in bed all week,\" Lila sighed as she rubbed her foot playfully against my calf.\n\n\"Well, that's the whole point of a honeymoon, darling,\" I replied. \"But if we did that, then we'd waste those tickets to Paris and lose the opportunity to rut in the City of Light.\" I roguishly commented.\n\n\"Rut?\" Lila wrinkled her pert nose at me. \"I see the bloom has already gone off our romance. Now, it's just a matter of you knocking off a piece whenever you feel like it!\" Lila teased.\n\n\"And think, honey, of how inspired I'll be at seeing the phallic symbolism of the Eiffel Tower. 24/7 nonstop rutting!\" I replied.\n\n\"You wish!\" Lila laughed.\n\n\"Oh, Mike, you've made my dream come true. Married to my best friend, flying out tomorrow for our honeymoon to Paris, coming back to start our careers. You've made me the happiest woman in the world!\" She ended the comment by flourishing her ring finger letting the diamond sparkle in the light.\n\nI just watched her, caught in the throes of happiness. My heart swelled as I counted my blessings that I had convinced this exquisite beautiful woman to become my wife.\n\n\"If you're really that happy, then why don't you give me a kiss?\" I suggested.\n\n\"I can do that!\" Lila reacted by sidling into my arms and gave me a kiss. She stopped and moved away; all I could see was the adoration on her face and it shook me to my core. I sighed and kissed her back. We continued to spend the morning engaged in lighthearted pillow talk.\n\n\"Just promise me that when we get to Paris, you'll repeat your performance from last night. I don't know who taught you those steps, but you damn near gave me a heart attack!\" I laughed and gave her a quick peck on her lips.\n\n\"Oh that! That was just me improvising from my old dance routine from Fitzgerald's. Of course, you inspired me to ramp it up to that level!\" Lila chortled and hugged me.\n\n\"Dance routine? What dance routine?\" I asked.\n\n\"My dance routine, silly!\" Lila responded with a laugh.\n\n\"I don't understand. What's this about a dance routine?\"\n\n\"The dance routine I used to do at Fitzgerald's, Mike.\" Lila said with a patient exasperation, as though explaining it to me as a child.\n\n\"What are you talking about, Lila? Fitzgerald's doesn't have dancers. They never have, as far as I know.\" I furrowed my brow. Something wasn't adding up. Something wasn't adding up one damn bit.\n\n\"Just what kind of dancing were you doing, Lila?\"\n\nMy questioning started shaking Lila up.\n\n\"My dancing, Mike. I told you a long time ago when we were in college. Remember? I told you that I worked at Fitzgerald's when you asked me out, and I asked you if that was a problem. You said it wouldn't be. Then after our first date, I told you that I had quit my job at Fitzgerald's. Remember?\"\n\n\"Why would I care that you were a waitress at Fitzgerald's, Lila? You aren't making any sense.\"\n\n\"Mike, you do remember-\"\n\n\"Yeah, yeah, yeah, I remember you telling me that you worked at Fitzgerald's, Lila. So, you worked in a bar? Big deal! What I don't understand is what you're saying about a dance routine. I can't tell you the number of times I got dispatched to Fitzgerald's whenever they or my dad's bar was running low on supplies and trading out. But, I have never seen dancers there!\" I insisted.\n\n\"Mike, when were you ever at Fitzgerald's? They get all their supplies from their franchise warehouse!\"\n\n\"Jesus Christ, Lila, I've been going up to that place on 10<sup>th</sup> Avenue practically my whole life. The owner is a friend of my dad, and I'm telling you, there has never been any kind of dancing at that place! Now tell me, what the hell you mean by dance routine?\" I demanded.\n\nLila turned pale. She stammered, \"Mike, I told you before you asked me out where I worked. I asked if you were okay with that. Remember how I insisted on that? Then right after our first date, you asked me out again. That's when I gave my notice, Mike!\"\n\n\"Why are you repeating yourself, Lila? Just tell me what I want to know,\" I spoke with exasperation.\n\nTears began welling up on Lila's deep green eyes, eyes that had held me in thrall ever since I first saw Lila, eyes that had expressed so many emotions. But now, for the first time, I witnessed them showing remorse and apprehension.\n\nIn a defensive mantra, Lila continued, \"Mike, remember, we were in college. I was working my way through school. When I first agreed to go out with you, I told you where I worked! You said you didn't care. When you asked me for our second date, I quit Fitzgerald's and I told you that I had quit. You've never shown any problem about that until now, and I don't understand now why you are picking this fight!\"\n\n\"You don't understand? Lila, you're telling me that you learned some dance routine while you were a waitress at a bar that doesn't have a dance floor. As I said, I used to go there all the time making liquor deliveries, and there haven't ever been any dancers at Fitzgerald's. Now, if you want, we'll get a taxi and go over to 10<sup>th</sup> Avenue and I'll show you!\"\n\n\"Mike, what are you talking about, '10<sup>th</sup> Avenue'? Everybody knows Fitzgerald's is in the Riverfront District!\"\n\nThat took a while to sink in. The Riverfront District was the city's pride and joy. Millions of dollars had been invested to revamp and claim the entire area to becoming a booming commercial endeavor. There was no way the owner of Fitzgerald's could ever afford the rent in that area.\n\nI shut my eyes before I asked my next question. \"Lila, who is the owner of Fitzgerald's?\"\n\n\"I never met him, but I was told it was a Mr. Hunter, who lived in Dallas. The manager when I worked there was James Allen.\"\n\nI winced at her response, as it confirmed she didn't know the Fitzgerald's I was familiar with. I certainly never met Mr. Hunter or James Allen.\n\nI started grasping the horrible possibility that we had mistakenly assumed only the existence of our perceptions. In as neutral tone as I could muster, I said, \"Lila, you worked at Fitzgerald's Gentlemen Club for how long?\"\n\n\"I worked there for three years; I stopped when we started dating, Mike!\" She cried.\n\nFitzgerald's Gentlemen Club: a nirvana of hedonistic excess. During a drunken romp in the city my freshman year, my college buddies and I tried to gain access to this swanky place, only to be stopped by the bouncers. We could only watch as wealthy business execs drove up in their BMWs and Porsches and tossed their keys to valets.\n\nA club only afforded to those with a black American Express Card. A club that welcomed its patrons with open arms...and legs. A club that guaranteed satisfied customers walking out with the most exquisite arm-candy beside them. A club that only employed the cr\u00e8me de la cr\u00e8me of exotic beautiful ladies, like Lila. My Lila. I opened my eyes and saw that the tears that had welled in her eyes were now free flowing down her cheeks.\n\n\"So, you were a stripper?\" My voice sounded incredibly small and far off.\n\n\"I was a dancer,\" Lila sobbed. I really couldn't grasp the sematic Lila insisted on using, but the confirmation was enough.\n\n\"So, for three years before I met you, you let all those creeps ogle you, and touch you-\"\n\n\"They never touched me!\" Lila cried, interrupting me.\n\n\"...And fuck you...\" I finished.\n\n\"They never fucked me!\" she protested vehemently.\n\n\"For Christ sakes, Lila, you expect me to believe that you dated those entitled assholes for three years and you didn't fuck a single one of them?\" I yelled in exasperation.\n\n\"I never dated a single one, Mike! They were only a means to pay for my education!\"\n\n\"What the fuck heading did your business transactions fall under, Lila? You're going to sit there and tell me none of those guys didn't stuff your G-string with dollar bills? That you didn't give those guys lap dances? That you didn't engage with some steamy action in the VIP Lounge?\" I spat out in frustrated angst.\n\n\"So, you used Clinton's definition and decided giving a blowjob isn't sex? Or maybe a handjob? Or, if you just laid there and took it, it was nothing more than a biological function?\"\n\nMy comments were serving to upset and piss off my new bride. I could see the warning signs of her furrowing her brow and rubbing her palms hard against her thighs.\n\n\"Mike,\" her voice quivered in anger as she spoke softly and quietly in an attempt to defuse this situation. \"The girls... the dancers set the ground rules for any customer's interactions. While, it is true that many did those things, I never did. I had plenty of offers and opportunities but I never participated. All I ever did was dance and yes, they touched me giving their tips but that was the extent of it. I never socialized or fraternized with any of the customers, even though management strongly urged me to do so.\"\n\nShe paused. \"If you'd like, I'll call up all of the girls I worked with. You can ask them anything. They'll tell you the same thing. I. Just. Danced!\"\n\nThe emphasis on her last paused comment gave me something to consider. Given our history, given that she never lied to me, given that I so desperately wanted to believe her.\n\nAnd yet...\n\nI got off the bed, rummaged for my clothes and began dressing. Lila watched in silence as I began walking to the door.\n\n\"Where are you going, Mike?\" she asked, as I stopped in the threshold of the doorway I had gleefully carried her across last night.\n\n\"I have to go think about this, Lila, and I honestly don't know how I want to handle this.\"\n\nThe implication of my statement staggered her. She blinked rapidly, gulping air, and hanging her head down, her hair shading her face from my view. I began to turn to walk out.\n\n\"Mike,\" her soft raspy whisper caught me before I left. \"There's one last thing I need to disclose since that seems to be all you're interested in.\"\n\n\"What is it Lila?\" I thought I was prepared as I braced for her last blow.\n\n\"I'm pregnant.\"\n\n**************\n\nThat, sport fans, is how I wound up at the family bar trying to decide how the hell I was ever going to manage getting out from under this. God, this was going to kill my Mom and Dad. Ever since I brought Lila home to meet them, it was like they adopted her as a long awaited daughter.",
        "When we spent the Christmas' holiday at home our senior year, Lila woke up early and stumbled into the kitchen to make a pot of coffee. Crossing into the den, her attention was drawn to the large homemade red stockings hanging from the chimney. Her reaction to seeing the stuffed stocking named 'Lila' in sparkly glitter, and most of the presents under the tree addressed to her from Santa, went unobserved.\n\nAll I know is that when I finally woke up, I went out to see a teary-eyed girlfriend fiercely hugging my mother on the sofa. When she got tired of that, all she had to do was turn in the other direction and get another hug from my dad. By the time we left to go back to school two days later, she was comfortable calling my parents, Mom and Dad.\n\nI kept speculating how my mother was going to take this. She was such a nurturing soul. That was what drew her to nursing in the first place. She specialized in neonatal care, helping the most helpless beings in the world. She shed tears of happiness for each baby that survived; tears of sorrow for each that didn't.\n\nHow would she react when she found out? Should I tell her, or should I leave that for Lila? That heartbreak was at the least of my worries. The more important matters, were what about our marriage and relationship?\n\nCounseling? Annulment? Separation? Divorce? What did I want? What did Lila want? What would we do with the baby? Custody and child support? God, what if she wanted an abortion? My brain was firing at light speed through each scenario and I was frustrated because I couldn't come up with a solution for a single one of them...My untouched beer wasn't helping at all as I continued staring at it.\n\nIt seemed as if my relationship with Lila was always fraught with complications, I thought wistfully back on our college days. I had been immediately attracted to this beautiful poised brunette in my first history class, sitting across the aisle in the lecture hall. Seventy individuals and the only person I focused on was her. So much so that I didn't hear the professor call my name repeatedly, making his seating chart. The class chuckled at me and she froze me with a look.\n\nFour weeks from that initial disaster, somehow, I gathered the courage to ask her out. That despite all my attempts to say hi, or smile at her, or catch her eye being met with an icy disdain. At least, I found out her name when the professor called on her one day to answer a question.\n\n\"Excuse me, Lila,\" I stopped her while she gathered her books after class adjourned after a boring lecture on The War of the Roses. She turned and looked at me with studied indifference, as though I was a bug. \"I was wondering if you'd like to go out this weekend?\"\n\n\"I'm sorry,\" I could see her pause as she thought for my name, \"Mike?\" she said questioningly. \"I'm not interested in going out with anyone right now,\" she flatly intoned.\n\n\"Perhaps, some other time,\" I suggested to her back as she walked down the steps out of the room. She didn't bother to respond.\n\nI took solace in seeing that I seeing I wasn't alone. She rebuffed every male, and the four females that I knew of that asked her out, that freshman year. I persisted. I would say hello to her every morning in class until I was finally rewarded with; if it wasn't quite a smile, at least, it wasn't a grimace. Periodically, I would renew my offer of a date. Shot down every time.\n\nAs I said, I wasn't the only one getting shot down. Lawrence Addington IV, a first class rich prick if ever there was one, kept chasing after her, also, and with the same history of failures as I experienced, but to hear him boast, he was getting three blowjobs a day from a bevy of campus beauties, including Lila.\n\nThat made it even more satisfying when one day she walked up to him before class started and slapped the cowboy shit out of him. He started cussing her out, and advancing on her when I intervened and blocked him from striking her. At that moment, the professor walked into the room and started his lecture. We all took our seats.\n\nLila was throwing pissed off death glares at Lawrence, and occasionally at me. Lawrence reciprocated the looks. I guess he faulted me for preventing him from approaching Lila.\n\nThe rest of the class ignored the professor droning on some obscure treaty and watched the participants as though a MMA match about to break out. When the bell rung, Lawrence approached her and I stopped him by putting my hand on his chest warning him, \"Don't, dude!\"\n\nHis lame attempt to push my hand away was easily rebuffed, and he swallowed hard when he saw I wouldn't tolerate any abuse by him. He made up some bullshit remarks and retreated out of the room. That allowed me to turn around and walk into a buzzsaw.\n\n\"Did I ASK you for any help?\" The frigid contempt of her voice matched the ice queen countenance on her face.\n\nI hesitantly replied, \"No.\"\n\n\"Then in the future, kindly keep out of my business!\" With that, she stalked away from me. I watched, transfixed by the furious swaying of her buttocks as she stormed away. God help me had she turned and realized what I was doing.\n\nSo, college life continued, I focused on my business major and Lila, apparently, was in some computer tech field. The chances of attending the same classes were slim after our freshman year.\n\nI decided not to pine away, and dated an extensive number of girls. I let them know I wasn't looking for any serious relationships and only had a few times when a particular girl wanted to take it to the next level. That was basically the gist of my shallow existence, when one unexpected rainy afternoon I made a run for it to the student's parking lot.\n\nAs I tried to outrun the thunderstorm, I had my keys out to quickly unlock the door and get into my clunker. I had my jacket covering my head in an effort not to get drenched. Just as I approached the row my car was located in, I glanced over to the side.\n\nThere was a girl behind a car that was even in worse shape than mine was. She was trying to loosen the first lug nut on the wheel of her flat tire. The car was jacked up and swaying precariously from her efforts. One wrong move would bring the car slipping off the jack and crashing down, possibly harming her.\n\nI could only blame my 'help the damsel in distress' gene, hardwired in my DNA. I went over to her as she grunted from her unsuccessful efforts to break loose the tension holding the nut firmly fixed to the wheel.\n\n\"Excuse me. It looks like you could use some help,\" I ventured to the hapless would-be mechanic.\n\nShe turned from her kneeling position, drenched to the bone. It was Lila. She was wearing a white t-shirt that had soaked through. Her prominent attributes were clearly visible through the transparent cloth, and the coldness had her nipples standing out in their perky glory. My eyes naturally drifted to glimpse them before I could will myself to return my gaze to Lila's face.\n\nI hadn't fooled her. She saw where my eyes had been seconds ago, and she was not pleased. She was obviously pissed at her situation, and I hadn't helped matters. She swiveled to obstruct my view of her torso and yanked again on the lug wrench.\n\n\"No, I don't need any help, especially from you!\"\n\nWith that, she jerked again on the lug wrench, trying her best to get the lug nut off. The car moved dangerously with her efforts.\n\n\"Lila,\" I warned, \"You are working at a disadvantage having the car jacked up before you loosen the lug nuts. You can't get the needed torque to get the lug nuts loose. You need to lower the jack until the car is back on the ground, then loosen the lug nuts, and then jack the car up so you can remove the wheel.\"\n\n\"It would also help if you have your spare ready to be attached instead of being in your raised car. That will make it harder for you to remove the spare from the trunk.\"\n\n\"I can do this on my own!\" she proclaimed.\n\n\"I'm not saying you can't.\" I responded, in as a non-threatening manner as I could muster. \"Look, I'm going to stay here to make sure you don't hurt yourself whether you like it or not. It doesn't make sense that both of us get drenched to the bone while you fix the flat. You are obviously chilled, now. Why don't you go to my car, get inside and get warm while I take care of this?\" I held my keys out to her and motioned to my car.\n\nFor a second I thought she would reject my offer, but with a huff she straightened up, grabbed my keys and ran to my car. Again, I briefly enjoyed the sight of delightful sway of her ass in her jeans.\n\nI turned and lowered the jack, got the spare out of the trunk and bounced it to make sure it held pressure. It was as threadbare as the tire it was replacing. I would have to warn Lila about that.\n\nI started to take care of the lug nuts. I grunted from the effort of trying to loosen the rusted nuts on the wheel. As much exertion as I was having to do, it would have been insurmountable for Lila. Finally, with protesting screech, the rusty lug nuts broke loose and turned freely on the thread. I raised the jack as quickly as I could, removed the nuts, removed the flat tire, replaced it with the spare, tightened the lug nuts back on, lowered the jack, and, a final tightening of the nuts with the wrench.\n\nBy this time, I was shivering from the cold rain. I opted to throw everything in the trunk of Lila's car and I slammed the lid. I ran huddled to my car, as though that would help my situation. Lila sat behind the wheel of my car as it idled, her angelic eyes closed as she listened to the car radio. I almost considered just standing there watching her.\n\nI knocked on the window and her eyes flew open. Her gaze searched around in the unfamiliar vehicle until she looked at me. Her arms instinctively crossed her chest to prevent my observation.\n\nShe unlocked the door and opened it. As she was climbing out of the seat, I told her, \"Lila, grab my umbrella from the passenger seat. No use in you getting wet again. At least somebody should get some use out of it today,\" I joshed.\n\nShe opened the proffered umbrella before climbing out. Briefly, we stood huddled close from the storm.\n\n\"Thank you, Mike. I'll return it to you tomorrow.\" She said.\n\n\"Don't worry about that, Lila. Are you headed home?\" I asked.\n\nShe stiffened from my question. The gratitude in her eyes shifted to a wary look. \"Yes, why do you ask?\" She cautiously wondered.\n\n\"Your spare isn't in much better shape than your flat tire,\" I informed her. \"I'd feel better following you home to make sure that you didn't run into any more trouble.\"\n\n\"No!\" She emphatically pronounced. \"There isn't any need of you following me home!\" the finality of her tone left no doubt that she was refusing any other assistance from me. I watched her go to her car and climb in. Meanwhile, I sat behind the wheel of my car and watched her drive off.\n\nIn a few seconds, I put my car in gear and trailed after her discreetly. I continued trailing her until she pulled off the street in front of a shoddy apartment duplex. As I drove past, I saw her eyes open wide as she discovered my treachery at refusing to obey her orders. Her pissed off look left no doubt that the next time I saw her, it wasn't going to be pleasant for me.\n\nI didn't see her for a month after that. As I said, we rarely saw each other on campus as we focused on our respective studies. Then one day, I was sitting on the campus grounds enjoying a very pleasant spring afternoon eating an apple as I peered into my iPad at some materials a professor posted online.\n\nMy concentration was broken as a shadow fell over me. I looked up to see Lila towering over me. Her sour glare did not bode well for me.\n\n\"Hi, Lila, how are you?\" I ventured my cordial gambit.\n\n\"I told you not to follow me. How dare you do that! You are just like every other man I ever known! You can't trust a damn single one of you!\"\n\nI sighed as I continued to listen to her steady denunciations and declarations against the entire male gender of the species. Finally, she began running out of steam.\n\n\"Lila?\"\n\n\"What?\" she demanded.\n\n\"Since that day, I fixed your flat, have you seen me in your neighborhood?\"\n\n\"...Well, no.\" she responded.\n\n\"Have I mailed you anything? Sent you flowers? Sent you any kind of gift?\" I was getting warmed up. \"Have I tried to call you or contact you in any way? Have I gone through the student directory to send you an e-mail? Have I tried to friend you on Facebook, or follow you on Twitter? Have I shown any inclination that I wanted anything else to do with you? Stalked you in any way?\" I asked.\n\n\"As you might now suspect the answer is no. All I ever did was try to be friendly to you and you've shot me down every time. That's fine. I helped you just because I thought you needed help when I changed your flat tire. I only followed you for the same reason. I don't know if I could ever trace my way back to your residence. I didn't have and I DON'T have any ulterior motive and I'm sorry you think otherwise. Now if you'll excuse me, I need to read this.\" I turned my attention back to my iPad.\n\nShe started walking off.\n\n\"Lila\"\n\n\"What, Mike?\"\n\n\"You still have my umbrella.\"\n\nThe next day I discovered my umbrella wrapped with a red bow pinned against my windshield wipers along with an unsigned card saying, 'I'm sorry I was such a bitch to you.' I looked around the parking lot, but I didn't see Lila. I decided to look at this as a sort of d\u00e9tente, not as any indication of attraction. We were now in our junior year. The semester dragged on until one day I was interrupted again by Lila.\n\n\"Hi, Mike. Do you have a minute?\"\n\n\"Hi, Lila, what do you want?\" My suspicions were raised by this unusual turn of events.\n\nShe hesitated, \"I heard you took Professor Adam's class in Commercial Transactions.\"\n\n\"That's right, Lila.\" I waited for her to continue.\n\n\"Did she assign your class an essay analyzing business models using a treatise, \"The Solution to Hodge's Conjecture by the Varonsky's Shift by Dr. Ben Stevens and Dr. James Reed?\"\n\nI inadvertently began laughing as I recalled that nightmare of a class, trying to make sense of the equation formula so far above my head.\n\n\"Yeah, somehow, I pulled a C plus out of that class, but don't ask me how!\" I exclaimed.\n\n\"Well... that's just it. I am asking you how. I'm taking the class as a business elective. It's too late to drop the class, and next year I'm loaded down with core classes of my major. If I flunk this class, it will mess up my grade point average, I will have to wait an entire year to retake the class since it's only offered once a year!\"\n\nI disdained the opportunity to say, 'It sucks to be you'. to her. Instead, I just nodded and said, \"I can see where that would be a problem for you.\" Damned if I didn't use my next breath to automatically say, \"What can I do for you?\"\n\nWhile I castigated myself mentally, Lila latched on to me as a potential savior.\n\n\"Professor Adams has the reputation of being the hardest grader at the university. She once flunked out an entire class! Had I known what I was getting myself into, I would've got another elective but it's too late now.\" Lila groused.\n\n\"If I flunk, that means I'll have to wait an entire year and risk re-flunking the same class! I've only budgeted enough money for one more year of school. I can't risk not graduating. Can you help me?\"\n\nSure enough, my fucking 'help the damsel in distress' gene kicked in again and I heard myself say, \"Sure, Lila, I'll pull out my essay for you, and if you have any questions just give me a call.\"\n\nAs it turned out, there were a lot of calls. Some would last for nearly an hour as I tried to help Lila struggle through the complexities. To take her mind off the problem, we would lapse into other topics and slowly became aware of what similar tastes we shared.\n\nOne night, she invited me over to her place to help her study. \"Let me give you the address,\" she said.\n\n\"Don't worry, Lila, I remember your place.\" I said.\n\n\"I thought you said you couldn't remember how to get to my place.\" I could only imagine the gotcha grin she had over the phone.\n\n\"What can I say, Lila. I lied.\" I heard her chuckle as I turned off the phone. When I got there, I noticed her apartment was decorated in Early American Collegiate Poverty. She was nervous and defensive as we settled in to study and I tried to explain to the best of my abilities what Professor Adam's was looking for in her assignment.\n\nAfter an hour, Lila slumped to the floor and groaned, \"I'll never understand this shit!\" I slid off the couch as well and sat beside her.\n\n\"Lila, you got to understand only maybe 10 people in the whole world understand this shit. Dr. Adams is just pretending that she's one of them. Just take three business model examples; a successful model like Wal-Mart, an unsuccessful model like Blockbuster Video, and make a hypothetical business model and show how you would approach your business stratagem using the treatise.\"\n\nI continued, \"Make an argument, provide some data, cite plenty of sources and you'll pass the assignment and the course and you'll never have to worry about this, ever again.\"\n\nWith a rueful smile, she griped, \"Easier said than done!\" She wadded up a sheet of paper and lobbed it at my head playfully.\n\n\"Hey, if you're going to throw stuff at me, you ought to at least feed me,\" I protested.\n\n\"You can have anything you want as long as it's Ramen Noodles.\" she said.\n\n\"Really, that's all you've got?\" I asked.\n\n\"That's all I can afford; between rent, bills, and tuition, I'm on a strict budget, which is why I have to pass this course,\" Lila answered. \"That way I can get a good job and start my life.\"\n\n\"Can't you get help from your patents and ease off the pressure?\"\n\nLila teared up, \"My parents died when I was two, in a car crash. My uncles and aunts decided that it would be easier on them to put me in foster care. They did file a wrongful death suit supposedly on my behalf but they were the guardians of the estate. All that money got spent and I'll never collect a dime from any of them.\"\n\n\"The foster parents I had were in it for the State's money. They saw I was feed and clothed and went to school, but there were never any luxuries. I have been legally on my own since I turned eighteen. In reality, I've been on my own my entire life.\n\n\"At least, I got lucky and wasn't abused like a lot of kids are,\" she sniffled.\n\nAs I moved to her to hug her, I understood why she had always projected such a hard shell. She had to have some mental armor just to make it on a day-by-day existence. We just sat there as she softly sobbed away the night.\n\nThings advanced in our relationship at a comfortable pace for her. I didn't want to move too quickly and risk harming our eggshell thin friendship. Her confidence in the assignment materials grew, the questions lessened and more personal items were substituted in their place.\n\nI watched as she ran up to me across the campus yard, \"Mike, I passed!\" She waved a thick bound report over her head as she collided into me for a fierce hug. I looked at the report, \"A minus! See, I knew you'd figure this stuff out!\" I smiled at her.\n\n\"Thank you! Thank you! Thank you!\" she exclaimed, \"How can I ever make this up to you?\"\n\nWell, that's simple, Lila. Just go out with me.\" I commented, holding her, watching her face.\n\nThe frown lines automatically appeared. Her hesitation told me that I wasn't going to get my wish. \"Mike, can I do anything else?\"\n\nThe pain of the rejection must have been clear on my face. She added, \"Mike, you have to understand...\"\n\n\"Lila, am I that reprehensible?\" I interjected, \"Am I that ugly or boring or stupid...Well, I must be stupid!\" I answered my own question. \"For going on three years, I just wanted to take you out on a date and you've refused me. For some reason, I thought the time we've been spending together made you realize that I'm not a bad person.",
        "\"Can you tell me what's wrong with me?\" I really wanted to hear her answer.\n\n\"There's nothing wrong with you, Mike!\" Lila said. \"It isn't you. I haven't dated anybody!\" she protested.\n\n\"Then I have to ask, are you a lesbian? Is that why you won't go out with me?\"\n\nLila blushed from my question and answered, \"No, Mike, I'm not a lesbian! There are just some things that are going on in my life right now that keep me from dating. I would love to go on a date with you, but now isn't a good time!\"\n\n\"Then, I have to know Lila, why not?\" I demanded.\n\n\"Mike, I... I...\" She turned away from me, \"I work at Fitzgerald's.\"\n\nI shook my head at her response. Okay, so she worked for a competitor of my dad. I had never spotted her there, or at my dad's place for that matter, but I didn't see that as being insurmountable.\n\n\"Lila, I don't care. All I want to do is just go out on a simple date and enjoy spending time with you.\" I looked deeply into her eyes. I saw relief on her face.\n\n\"Are you sure, Mike? Are you sure it isn't going to cause you any problems?\" she asked.\n\n\"No, Lila, I don't care. Just let me take you on a date. If for whatever reason you decide after that, that you don't want me around you, then okay. But at least I'll know I gave my best shot to the prettiest girl in school.\"\n\nThat Saturday, I showed up at her place in casual wear. I didn't want to build up any undue pressure or unrealistic expectations by going to some expensive French restaurant. I took her to the zoo; we strolled around watching the animals. I bought her a brat at a hot dog vendor, and we continued our tour while eating and talking.\n\nAs the afternoon faded into the evening, we went to the park adjacent to the zoo and sat on the ground while a troupe performed a play in the city's Shakespeare in the Park program. We laughed at the mad antics of \"A Midsummer Night Dream.\"\n\nAs I drove her home, I was fascinated by the animation she exhibited, raving about the show. We were walking up to her door, hand in hand. Out of the blue, she said, \"You know, if I ever get a dog, it's going to be a French Mastiff and I'm going to name him Oberon.\"\n\n\"Where did that come from?\" I laughed.\n\nShe wistfully looked into space, \"Growing up, the only friend I had was the neighbor's dog. He was a French Mastiff and I wished he was mine. I never had to worry whether he loved me. As for the name, to commemorate tonight as being the only other time I have been truly happy,\" she proclaimed. She turned to hug me and said, \"Thank you, Mike. I had a wonderful time tonight!\" She gazed at me in expectation.\n\nI lowered for a kiss and she closed her eyes. When our lips met, it was as if for the first time in my life things fell into place in the universe. I had no idea how long we stood there. When we broke the kiss, I think both of us were stunned and breathless.\n\n\"Wow\" she softly whispered.\n\nNot being a fool, I struck. \"Lila, how about going out with me next weekend, they're playing Romeo and Juliet.\"\n\n\"Mike, let me have a couple of days to decide. There are some things I need to do,\" she replied. With that, she leaned in for another goodnight kiss before I could object. As I stumbled back to the car totally enthralled by this wonderful woman, I began planning for our third date. Fate would not be so cruel to stop me from seeing her.\n\nMonday afternoon, she called, \"Hi Mike, if you still want to take me out this weekend, I'd love to go. I need to let you know that I've quit my job at Fitzgerald's. I've taken a paying internship at a tech company I'm hoping to get a job offer from after graduation. I'm going to have to tighten my purse strings even tighter to survive, but I'll manage.\"\n\nFrom the second date, we moved to our third and then our fourth and so on until we were basically shacking up together at my place. I finally convinced her to drop her lease and move in with me as a money saving proposition. We instantly adapted into our newly found status as roommates, best friends, and lovers.\n\nI took her home to meet my parents during Christmas and they fell in love with her from the start. She instinctively began bonding with both of them and with no hesitation called them Mom and Dad. My Uncle Jack and Aunt Kate were no different as they adopted her, as well. When we left to go back to school my dad walked us out to the car; out of listening range he said, \"Boy, don't fuck this up.\" Probably the best advice he'd ever given me.\n\nAt graduation, we both walked across the stage for our diplomas. We both had accepted good job offers in our respective fields. I proposed to her in front of my parents and she enthusiastically accepted. We started saving up our nest egg and planned a wedding for a year off, to get vacation time accrued and start looking for a place with a fenced in yard that we could get in our price range that would allow us to get Lila her puppy.\n\nAnd now, it was all falling to shit, I thought sourly.\n\nI felt his presence behind me as he saddled the seat beside me. \"Hey, Son, how are you feeling?\" my dad softly enquired. His solicitous tone told me everything I needed to know. Lila had already reached out to my parents and had told them what had transpired. It was interesting that I wasn't worried about Lila gilding the truth to put her in a better frame of light. No, she would have divulged the truth, warts and all.\n\nI paused before answering my dad, \"I don't really know, Dad. I don't know how to begin to explain how I'm feeling. I guess, I'm still in shock in a way. It's like I just woke up in some Bizzaro world existence.\"\n\nMy Dad nodded his head at my explanation. He looked straight ahead into the large mirror affixed behind the wall of the bar, staring at our reflections. \"Your mom is worried about you; she and Lila have been going around town trying to find you. You didn't help matters turning off your phone. Your Uncle Jack gave me a call when you showed up here at the bar. I gave them a call, they'll be here in about half an hour.\"\n\n\"What should I do, Dad?\" The poignant weighed question was out there now. Here I was all grown up, self- reliant, ready to take on the world and I was reduced to running to my father hoping he could fix my problem.\n\n\"This is your call, Mike. You've got to decide how you're going to handle this. You know that I don't think you can find a better girl than Lila. The way you two are around each other, it's so obvious that y'all were meant for each other.\" Dad continued looking at our reflections, trying to gauge my reaction.\n\n\"So, you think I was meant to be with a stripper, Dad? How is that going to work out, Dad? You really think Mom is going to be comfortable being around Lila when we attend church, or when there's a family reunion? How about when our kid gets up in school for Show and Tell and tells the class that Mom is a stripper!\" I bitterly lashed out in reaction to the unjustness of it all.\n\n\"Son, people do things, right or wrong, for any number of reasons. From what, Lila has revealed about her life to me and your Mom, we know she had to make some hard choices. People adapt, Mike. You can't judge a person's entire existence from a single snapshot of their life. You've got to take that into account for the entire story. Lila deserves that, Mike. You deserve that.\"\n\nI burst out laughing. \"I deserve a lot of things, Dad, but I don't deserve a wife that thousands, hell, maybe hundreds of thousands of guys that have seen naked! That jammed a Washington, Lincoln, Hamilton, Jackson, Grant, or Franklin into the crotch of her G-string! That touched her, or...\"\n\nI had to pause as once again the unthinkable presented itself. Could Lila have resisted all that temptation? In my heart, I knew she had, but my mind was thinking other things. My stomach churned at the thought of total strangers manhandling my woman like a side of beef.\n\nI continued, \"How do I ever get past the fact that the woman I married isn't who I thought she'd be?\" I asked, not really expecting an answer to my rhetorical question.\n\n\"Mike, you weren't a virgin when you first dating Lila and I doubt that she was either,\" Dad commented. \"Now, you say you're upset that a lot of guys have seen Lila naked. That didn't stop you from sneaking in issues of Playboy magazines underneath your bed when you were a kid growing up or watching porn on pay for view TV on our cable. What, you didn't think we knew about that?\" Dad laughed.\n\n\"The point is, all those women were somebody's daughter, sister, cousin, girlfriend, or whatever. That didn't stop you from objectifying those girls. Being married won't stop you from turning around and looking at a pretty woman now. Truth be told, I doubt Lila will stop looking at handsome men when given the chance. That's just human nature, and you'll never change that. What you do change is how you chose to respond.\"\n\n\"The two of you have made a commitment to each other. Before you discovered this, Mike, did you have any doubts about Lila loving you?\"\n\n\"No, Dad,\" I replied.\n\n\"Do you think that she loves you any less after you found out?\" He asked.\n\nI sighed, \"No, Dad. It's just I still don't know how I can rationalize this. How I can accept someone that's done something like that in my life?\" I sadly replied.\n\nWe sat there for a few minutes without speaking, both of us just weighing our conversation and thinking about what we'd spoken. Dad sighed and motioned at my now lukewarm beer. \"You going to drink that?\"\n\n\"Get Jack to pour you one, this is warm,\" I warned him.\n\nHe reached over, took a long sip and gave an appreciative gasp after he swallowed.\n\n\"It's still better than that hot horsepiss '33' beer we used to get in 'Nam,\" he said.\n\nDad seldom talked about his experiences in Vietnam. All I knew was that he served a tour, got wounded, was awarded a Silver Star for valor and a Purple Heart for his wound, so the rare times he decided to be talkative about his time there, I would sit and listen, even if it was about Vietnamese beer.\n\nHe was in deep thought, \"I was just a kid, joined the Corps, shipped around the world just in time for the Tet Offense, scared shitless.\" He took another sip of beer.\n\n\"My Vietnam wasn't jungles; we had to go retake the City of Hue from Charlie. Charlie was one tough motherfucker when it came to urban warfare. I was in the 1<sup>st</sup> Marines, armed with a BAR, tasked with providing covering fire while we advanced street by street. Charlie didn't appreciate that and I drew a lot of fire back from him.\n\n\"After a firefight at some godforsaken street, we'd catch a breath, fire up a smoke, drink a hot bottle of that fucking 33 beer, and try to ignore seeing our buddies wounded or killed before our eyes.\n\n\"That Soviet SKS rifle that's hanging up in my den, son of a bitch shot me with that before I unloaded a full clip from my BAR into him. Shot him to rags. We ran into each other at a blind corner, our rifle barrels were almost touching.\"\n\n\"They kept trying to take that away from me while I was in the ward convalescing. Then, I got shipped back into the world. Came home and flipped a coin whether to take a job as a postman or a police officer. To this day, I don't know if I won or lost that toss.\" Dad shook his head as he finished his reflection.\n\n\"Well, Dad considering you met Mom then, I have to say you won that toss,\" I interjected.\n\nAt that, he brightened up, \"Yeah, you are right. I don't know what I would've done if I hadn't met her.\"\n\nFor some reason, a light came into my dad's eyes. I watched as he finished the last of the mug and motioned Uncle Jack to replenish a mug for both of us. Jack placed the mugs down and ambled away.\n\n\"I never told you about how it came to pass that we wound up owning Genero's.\" He quipped while taking his first sip.\n\nNow I was intrigued to find out how a couple of police officers and their wives managed to own a bar. In the past, all I was told was that I was too young to hear about that. Now the time had come to find out.\n\nDad started, \"You ever wonder how come a couple of Irish cops managed to own a bar named Genero's?\"\n\nI always had. It never made any sense to me since I never knew anybody by that name. I often wondered why they didn't just rename the bar, Crowder's. I waited for his answer.\n\n\"Genero's was a mob bar.\" Dad announced.\n\n\"You bought a bar from the mob?\" I was aghast at the revelation.\n\n\"Just listen to my story,\" dad replied.\n\n\"Not only was Genero's a bar operated by the mob, it was a strip club. The dance floor is the last remnant of the original raised floor,\" Dad commented. \"Not only was it a dive, but it served as a money-laundering operation for the Calpera Family.\n\n\"They also ran loan sharking, bookmaking, narcotics, prostitution, and anything else to make a dishonest buck. Yeah, this place was a real hellhole, back then. You could count on at least one unsuspecting tourist getting beaten and mugged every night, or picking up a junkie corpse that OD'd in the alley.\n\n\"Sal Genero was the front man for the Calpera Family and that's why the bar was named for him, owned and operated by him, and he had a psychopathic hitman named Tony Molteri that served as the muscle for the operation.\n\n\"Genero was a short, squat, greasy little weasel of a man; he wouldn't do anything unless your back was turned to him and he had a clear advantage. Molteri was just fucking evil. He was rumored to have been involved in 26 gangland hits when I first met him.\"\n\nDad took a sip of his beer and continued, \"Molteri had a bad habit of getting the strippers hooked on heroin and then he started tricking them out when they started losing their looks. If they didn't make their quota, he'd beat the shit out of them and shove them back on the streets after he'd rape them.\n\n\"Kept the girls terrified and quiet about any idea of testifying against him. Just think of starting every day in the hole to support a $100 a day junk habit and compound it by going out and tricking for another $200, rain or shine.\" Dad shook his head remembering the inequities of it.\n\n\"Their main money maker was the gambling and loansharking. Gamblers would get behind in paying their losses; desperate people would be forced to take out a loan, and the vigorish would eat them alive as they scrambled to make their weekly payments, and never getting ahead to pay out the principal of the loans.\n\n\"Genero would provide a warning and then sic Molteri on the erring defaulters. If they were lucky, only an arm or leg would be broken. Then Genero would come back to them and comment what a pretty wife or daughter the guy would have, and then look over at Molteri. The gleam on that monster's face kept those guys in line until it came time to do a 'bustout' on the business owners.\n\n\"They had a real streamlined approach. The business owners would come to the Genero's office at the bar. They would be threatened or persuaded to sign over a warranty deed on their business property. They'd sign off on a warranty deed form that had a blank insert for penning in their property description. Believe it or not, Tony Molteri was listed as a public notary, so he would notarize all the deeds signed over, making Sal Genero the property owner.\n\n\"Then, Genero and Molteri would go on shopping sprees using the original owners' credit accounts, maxing out their limits. The assets would be taken out the back door and the hapless original business owners would have to file bankruptcy. They'd leave their victims stone broke.\n\n\"Those bastards would've stolen the pennies off a corpse's eyes if they could get away with it,\" Dad said, taking a small sip of his beer. \"Which is where I can into play.\n\n\"I had graduated from the Police Academy after leaving the Marines. I was a rookie cop, full of piss and vinegar ready to take on the world. I was dating this cute nurse named Mary that wouldn't let me get past first base unless I gave her a ring.\"\n\nThe rueful smile on my Dad's face was amused, thinking how my mom protected her virtue until my dad had made a lifelong commitment to her. Thinking how adamant Mom could be on any given issue, I could only imagine how it must have frustrated my Dad.\n\n\"I mean, I was lucky to get a kiss after a date sometimes, after I tried to cop a feel from her! Talk about the bruised ribs I'd have from her elbows.\" Dad smiled.\n\n\"Hey, Dad, this comes under the heading of too much information. I really don't need to imagine my Mom and Dad getting it on!\" I commented quickly, hoping to derail this train of topic.\n\n\"Well, it's important you know what happened back then,' Dad said. \"A lot of things transpired that you have no knowledge of.\n\n\"Anyway, back to my story. I'm a rookie cop so I'm in line for any shit details that come down the pike, and the Police Chief came up with a doozy. The police precinct I was assigned to covered the business district where Genero's was located. They came up with the bright idea to start foot patrols for the area to circumvent criminal activities. Being a lowly rookie with no seniority, I was assigned to the solo graveyard shifts when all kinds of shit would fly. I had to do a lot of growing up real quick.\" Dad paused to take another sip as he continued his reflections.\n\n\"So, I traded one combat zone for another, as I went out every night to serve and protect. That really didn't help on the social front, as I was lucky if my days off would coincide with Mary's, which would increase my frustrations with getting anywhere with her,\" Dad complained, as he took another sip and motioned at me to join him in drinking. I took a sip as I waited to fall deeper into my dad's story.\n\n\"That went on for a couple of years. I had been able to move the open illicit activities back into Genero's instead of them operating openly on the sidewalks. As I made my rounds, these thugs congregating outside would shut up as I approached. I'd walk through them pretending to pay them no heed. As I passed them, the hairs on my neck would stand out just anticipating them harming me, but I had to show no fear.\n\n\"One of the ways I adapted was I would show interest in the strippers dancing in front of this big plate glass storefront window.\"\n\nDad motioned to the window located in the front of the bar that now served as a source of ambiance for the patrons of the bar.\n\n\"After I got my small bit of free titillation, I'd focus on the reflections of the thugs to make sure they weren't creeping up on me,\" he explained.\n\n\"Dad,\" I interrupted, \"How did they get away with having open to the street stripping back then? If they were visible to the street, couldn't you arrest them?\"\n\n\"Back then, it was legal. Wasn't like any Godfearing family would be strolling through there at that time of night. The Calpera Family had enough votes in the City Council and enough high octane legal representation that it wasn't worth picking a battle I couldn't win,\" Dad told me. \"I would have to be satisfied with keeping Genero and Molteri on a short leash. And man, did they squawk! The precinct captain said he knew I was doing a good job just from hearing their complaints!\n\n\"As I was saying, this continued on until one night I saw the thugs huddling close together near the front door. It was close to the 3 am closing time. They didn't notice me approaching them. When I got close enough, I noticed a beautiful blonde, long legged, built in all the right places; cowering wide-eyed from them.\"\n\n\"What the hell is going on?\" I demanded to know. All the rats started scurrying away as I moved to her. She instinctively gripped my arm for support and I saw relief in her eyes as she spotted my uniform.\n\n\"Are you okay, Miss?\" I asked as she shook from nerves at the recent problem.\n\n\"'I am now, Officer'.\" She nervously whispered in the most fetching Southern drawl I ever heard. \"'Please, just give me a minute to catch my breath'.",
        "\"We didn't get a minute. Immediately, Tony Molteri comes storming outside demanding to know what I was up to.\n\n\"'What are you doing hassling my customers, Crowder?' he sneered at me as he edged dangerously close to invading my personal space. I placed my hand on the butt of my Smith &amp; Wesson Model 19 holstered on my Sam Browne belt. I wanted to be ready if he exploded on me.\n\n\"Your 'customers' were manhandling this young lady. I'm about to find out whether she wants to file any charges on them.\" I explained.\n\n\"'This young 'lady' is an employee of Genero's and she ain't about to do any damn thing like that!' He laughed, 'That is, if she wants to keep her job!' He warned her looking directly at her to make sure his comments weren't mistaken.\n\n\"'No,' she immediately said, 'No, Officer, I don't want to press charges.' She clarified her choice. 'I just want to go home.' She clutched her bag and shivered from fear of being between the two of us.\n\nShe began walking down the street rapidly, her head down, trying to draw the least possible attention. I followed her, trying to catch up to make sure that some lowlife carnivore didn't intercept her flight to safety. When I got side by side with her. I startled her until she was reassured who I was.\n\n\"Miss, I'm going to escort you home,\" I said.\n\n\"'That isn't necessary, Officer,' she replied.\n\n\"It's too dangerous for you to be out alone by yourself,\" I told her. \"I'd feel better if I knew you made it home without any problems.\n\n\"She shrugged off my comments and we walked in silence. Block after block we walked down the deserted, dilapidated buildings, dimly lit by streetlights. Finally, she stopped in front of a seedy brownstone apartment building. A cardboard sign in the window advertised rooms for rent. I could only imagine the rat-infested rooms in the slum.\n\n\"She looked up at me. 'Thank you, Officer...' I recognized she was fishing for a name.\n\n\"Tom Crowder, Miss...\" as I looked eagerly to get some information from her.\n\n\"'My name is Dawn,' is all she said. I briefly thought how I could find out more about her. Then, I hesitated as the memory of Mary flashed in my brain. Taking advantage of the situation, Dawn said goodnight to me and quickly walked up the steps.\n\n\"The next night on my shift, I was making my first round by Genero's. I glanced up to the window and stopped dead in my tracks. There dancing before me was a literal angel that fell to Earth. She intentionally avoided eye contact with anyone. It was as though it would be a sinful grievance to gain her attention as she swayed to the music. I continued to watch, alongside the usual bums as we captured every possible angle of the nude temptress dancing in the window.\n\n\"I reluctantly broke away to continue my patrol. I made it a point to speed through my assigned checkpoints so I could make more laps that night. On each one that I was lucky enough to see Dawn dancing I would stop and just gawk and drool like the other Neanderthals waiting up at night.\n\n\"It wasn't by happenstance that at 3 AM when Genero's was closing, that I was waiting outside. As she came out the door, I walked to her side through the crowd interested in her. Without a word said, we began walking down the street.\n\n\"'Thank you again, Officer Crowder for escorting me,' she said in her delightful lilt.\n\n\"No problem, Miss...\" I was hoping for her surname, but it wasn't forthcoming.\n\n\"'Just call me Dawn, Officer Crowder. Tell me, did you enjoy seeing me dance tonight?'\n\n\"I was busted and thrown for a loop at her enquiry. Had I insulted her by gazing at her while she danced enticingly before the large crowd. I did the only thing I could think of to deflect her question.\n\n\"I never knew that you could see out in the crowd from the stage.\" I commented.\n\nShe nodded as we continued to walk. 'You can see just for a few feet outside. Your uniform stands out in the crowd,\" she explained.\n\n\"I'm sorry, if I've offended you,\" I said in what I hoped she would take as a neutral tone.\n\n\"'Why would you think that I was offended, Officer? I mean, that's my job, to attract men and offer them a fantasy. Forget their lives and entice them. Offer them an opportunity that they will hope comes true,' she flatly intoned as we stopped at her apartment building.\n\n\"I could see the pain on her face as she closed her eyes and said, \"It isn't real. It will never be real.' The hurt in her voice was evident as she tried to convince herself of her words. Then she went up the steps into her building. I finished the rest of the shift in an unsettled state of mind.\n\n\"Next evening, I made my rounds but I gave a wide berth of Genero's window. I could still observe and be uncomfortable at the growing attraction I had to this girl that I had just met. I was still conflicted with my relationship I had with Mary and my growing desires for Dawn.\n\n\"Again, I was outside when Dawn walked out at closing time. She gave me a brief smile as she maneuvered through her admirers towards me. I was pleased to see the frustrated looks on the wolves that I prevented from hassling her for the third consecutive night.\n\n\"As we walked side by side, she asked, 'I didn't see you tonight. Were you there watching me?'\n\n\"I could have lied, but I said, \"Yes, I was watching you from a distance.\n\n\"We continued walking. She spoke up, 'That makes it somewhat bearable, Officer. Just allowing me the pretense helps,' she explained as we moved to her destination. She bade me goodnight once again as she entered her apartment.\n\n\"The next night I knew there would be trouble; Tony Molteri was outside gripping Dawn's arm tightly. She squirmed trying to ease the pain. The large crowd gathered to watch the showdown.\n\n\"'Hey Crowder, I'm telling you to stop hassling my employees. This bitch doesn't need you walking her home every night.'\n\n\"Molteri, what Dawn does once she's off the clock is none of your damn business. If Dawn doesn't need an escort home then she can tell me, but not you!\"\n\n\"The tension ratchetted up as we glared at each other.\n\n\"'Well, then I'll just fire the bitch and then she can just fucking starve to death!' Molteri sneered as what he thought was a unsolvable problem for me. I caught the panic in Dawn eyes as she confronted the possibility of surviving with no job.\n\n\"Molteri, I guess I should let you know, there's a Supreme Court case, Terry v. Ohio. It allows a police officer to search a person for weapons whenever they think they have grounds for an arrest.\n\n\"Now, suppose what would happen if I stay planted in front of Genero's every shift and I suspect every one of your customers to be guilty of public intoxication and I search them. Wonder what kind of contraband I would find every night?\" I wondered.\n\n'An uneasy murmur rumbled through the crowd at my speculation of what I would find searching them. Molteri recognized the chilling effect my action would cause to his illegal business.\n\n\"'Fuck you, you fucking pig!' he screamed.\n\n\"Molteri, I've been called worse by better people than you,\" I replied as I geared for him attacking me.\n\n\"'No Officer, that's alright. No need to get upset. Of course, nobody is getting fired!' Sal Genero yelled as he weaseled through the crowd and confronted his business partner. 'Just an unfortunate misunderstanding, Officer. Dawn will have a job as long as she wants one.' Sal Genero assured me as he looked beseechingly at his partner, Molteri, to calm down.\n\n\"How we managed not to kill each other that night, I'll never know. Instead, once again I had the pleasure of walking Dawn home. I finally got her to call me Tom instead of Officer. She began to tell me of her unhappy childhood with her alcoholic mother and her abusive stepfather, and why she left home in her senior year of high school.\n\n\"Each night afterwards, we would slowly divulge information about ourselves. I told her about Vietnam, but couldn't bring myself to revealing my relationship with Mary. Things just started getting more comfortable around each other. Then came the night I slept with her.\"\n\n\"Oh My God, Dad! You cheated on Mom?\" I suddenly broke out of my reverie from hearing my Dad's tale at the revelation that he wasn't faithful to my mother. \"How could you, Dad? How could you ever do that to Mom?\" I wondered at this man who sired me, gave me life, raised me. How could he just fall off his pedestal I had always had him on.\n\n\"Son, you don't understand how I felt about this girl. Once I gave her a goodnight kiss at her apartment, we both knew what was going to happen. She took my hand and led me upstairs. I called the precinct and told them I needed the night off and arranged for other officers to cover the remainder of my shift. When I woke up with her that morning in her arms, it was everything I ever wanted.\"\n\n\"Jesus, you fell in love with her? All the time you were dating Mom, you were two-timing her with this tramp?\" I accused my Dad.\n\n\"It wasn't all the time, Son. My relationship with Mary was on life support. We hardly got to see each other and when we did, I never could convince her to take our relationship up a notch. She kept insisting on a ring!\" Dad tried to explain away his rationale. I was disgusted with him.\n\n\"Anyway, it didn't last long,\" Dad settled back into reciting his story. \"Dawn and I were at my apartment one morning after making love. She was parading around in just my t-shirt and I was chasing her around, ready to catch and ravish her. I heard a knock on my door and went to answer it.\"\n\n\"It was Mary, and the first thing she saw was Dawn in the background wearing my t-shirt. Mary called me a bastard and slapped the shit out of me. While I was trying to calm Mary down, Dawn quickly dressed, and as Mary scampered away, she slapped me on the opposite cheek. Then she cussed me for not telling her that I was dating another girl at the same time. She stormed out of my apartment.\"\n\n\"Serves you right, Dad,\" I commented, \"You had no business doing that to Mom.\"\n\n\"You're right, Son, what I did to your Mom was inexcusable.\" Dad replied. \"Now let me get back to my story.\"\n\n\"I was in a sad miserable shape. I couldn't get either Dawn or Mary to talk to me or listen to me try to explain things. I felt lower than whale shit that Dawn wouldn't let me apologize. Dawn refused to allow me to escort her home anymore, so I had to settle to trailing behind her in the shadows to make sure she didn't run into any trouble.\n\n\"Then came the night I heard gunshots in the next brownstone building from Dawn's. I raced by a frightened Dawn, unaware of my presence as I bounded up the stairs, I drew my gun and kicked in the door. There amongst the carnage was two opposing groups, killed by each other.\n\n\"The first group looked Hispanic as I kicked away the smoking guns from their lifeless corpses. The second group I recognized as being confederates of Tony Molteri that were always hanging around Genero's. On the coffee table was a large duffle bag of individually cellophane wrapped bags of a white substance. Near the Molteri's gang was a bag stacked with $100 dollars bills. It was plain to see that it was a drug deal that went bad. I called in for backup, a forensic team, and a narcotic detective and a homicide detective. Let them all sort it out.\n\n\"When the detectives were through questioning me I stepped outside. I looked up at Dawn's apartment while I was flanked by all the police units. She was staring down at me until she reluctantly backed away from the window. I wanted desperately to go up there and explain what she meant to me. Instead, I turned to walk home.\n\n\"For the next two weeks, I didn't have a single sighting of Dawn. It was like she had dropped off the face of the Earth. She wasn't on the dancer's rotation at Genero's. Her apartment manager said Dawn's clothes were still in her apartment, even though she hadn't seen or heard from her in two weeks.\n\n\"I started hearing vague, unsettling, rumors about Dawn and Tony Molteri. Some people were suggesting that Dawn had started doing drugs. I couldn't fathom Dawn falling that low into the abyss to doing drugs, so I resolved to discount those rumors, but I couldn't come up with any reasonable explanation for her disappearance.\n\n\"As I started my patrol that night, I got word that Sal Genero and Tony Molteri wanted to see me in Genero's office. When I got there, I knew it wasn't going to be good. I stood in front of the desk as the two gloated over me.\n\n\"'Officer Crowder, we have a little proposition for you.' The greasy smirk on Genero's face put me on notice as he leaned forward, eager to rattle my cage.\n\n\"No thanks, Genero, there isn't anything you've got that I'd be interested in,\" I replied.\n\n\"'Oh, but we do, Crowder,' Molteri crowed as he interjected himself into the conversation. 'We have a little bitch that I've spent the last two weeks shooting full of heroin. Now, she's just about ready to start earning her keep as a whore. \"'Matter of fact, I'm going to give her a trial run tonight and make sure she'll satisfy all her customers.'\n\n\"I was ready to arrest Molteri, then and there, but I held off. It would just be my word against theirs. I was helpless at this point and they knew it. If I didn't do what they wanted, Dawn's degradation would be final and complete as she spiraled down, due solely because of my attraction to her.\n\n\"What do you want, Molteri?\"\n\n\"The mere fact I asked signaled to them that they had won. Large grins appeared as I waited to find what pact with the devil did I make.\n\n\"'That drug shootout you worked three weeks ago,' Molteri reminded me.\n\n\"What about it,\" I asked.\n\n\"'There is a discrepancy from the money the police reported to have recovered and what we actually know was in the room. Our guys had a million dollars to make the drug deal. You were the first officer to respond, so it stands to reason that you took the money.' Genero explained.\n\n\"I didn't take any money, Genero.\" I thought, vainly, I could impart a convincing sincerity tone to my words. Genero just laughed at me.\n\n\"'Doesn't matter if you took the money, or the Columbians took the money, or somebody else took the money; you're the one on the hook. You're the one that better come up with one million dollars if you want your little girlfriend back,' Genero warned me. \"You've got till closing time or else.'\n\n\"I knew what the ominous portent of 'or else' represented. Not only would Dawn face a lifetime of sexual slavery, the Calpera Family would get word that I had one million dollars of their money. My life would be snuffed out immediately.\n\n\"I went immediately to the brownstone apartment where the shootout occurred. The police tape announcing it to be a crime scene was still securing the door. I ripped the tape off and due to the shoddy state of the building had little trouble jimmying open the door.\n\n\"The power was off so I turned on my flashlight to scan the room. I looked in the obvious places, like the cabinets and such, even though I knew the forensic team would have checked them.\n\n\"The only chance I had was that the money was still there and that the forensic team had been less than thorough, since they had a visible amount of contraband and money at the bloodbath scene and the drug dog didn't alert to the presence of money as opposed to drugs.\n\n\"I searched for hours in vain, tapping at the walls and floors hoping to hear a difference in tone that would signal a solid object from the hollow spacing. I finally came to the last room, the bathroom.\n\n\"When I opened the door, the stench nearly knocked me down. As befits an unattended slum building, there was a disgusting pile of fecal matter clogging the toilet. It was so bad my eyes were watering as I rapidly looked through the room. I was running out of hope when I saw the twine cord lying on the stained tile floor. It didn't attract any more attention than any of the other debris scattered throughout the apartment.\n\n\"I traced the cord as its length went up the bowl of the commode and into the stinking mess inside the bowl. I gave it a preliminary tug, scared at what my action would result in unearthing some more disgusting matter. Instead, the cord move freely up stained with the toxic matter it slid through. Still it came up until I saw a mass erupting that disturbed the contents in the toilet. A large cylinder of plastic broke into view. Looking warily at the contents, I could make out a roll of $100 dollars bills.\n\n\"I continued to pull at the cord, which revealed consecutive rolls of bills into a long continuous snake of currency. I tugged harder and faster as the money piled on the floor until finally with a gurgle the last roll left the commode. I placed the mass into the bathtub praying the water was connected. For once, my luck was in as the water cleansed the plastic. I looked at my watch. I had just enough time to get back to Genero's.\n\n\"When I got there the place was closed and the lights were off. I tested the door; it was unlocked and I went inside. There at the bar sat Genero and Molteri. On the floor besides them was an unkempt mass. Lila, suffering from the kidnapping, sporting two weeks of needle tracks on her arm of the involuntary drug usage. I dropped the bundle of money still wrapped in plastic and ran to the semi-comatose woman.\n\n\"While trying to get her attention, I heard the unpleasant sound of a slide of a semi-automatic pistol jacking a round into its chamber. I looked behind me and Tony Molteri had a Colt .45 trained on me.\n\n\"'Lose the weapon, you fucking pig!' He sneered. As I slowly and cautiously complied with his command and dropped my pistol to the floor, I saw Sal Genero jump out of his seat, open the plastic and started piling the money rolls in a duffel bag. He was happily chortling as he worked at the task.\n\n\"'Now, I want you in the middle of the room,' Molteri ordered me and waved the gun to emphasize the comment. I walked sideways carefully to get Dawn out of the way of any line of trajectory. Now Molteri was between Dawn and myself. I was afraid of her fate.\n\n\"You got what you want, Molteri. Let Dawn go.\" I requested.\n\nMolteri laughed without mercy, 'We didn't think you could do it. We had already told our boss at the Calpera Family that the Columbians had the money. That took the blame off us and on the Columbian Cartel. Now, you go and find the money and me and Sal got a million dollars, free and clear. Now, all we got to do is get rid of the witnesses. Too bad about Dawn, she'd have made us a lot of money as a hooker and would have been fun routinely fucking her, but that's how it goes.'\n\n\"Molteri was enjoying his triumph over me. I started thinking of anything that would prevent or forestall my fate. I realized that was what Molteri wanted. He wanted me begging him for mercy. He was hoping I would cry and plead for my life.\n\n\"Seeing that I wouldn't submit to his desire, Molteri played his last card of torment.\n\n\"'Well, at least before I kill the bitch, I'll fuck the shit out of her,\" he laughed. He motioned at me, \"Get on your knees!'\n\n\"I stood still.\"\n\n\"'Get on your knees, pig, or, I'll have Sal cover you and I'll fuck the bitch in front of you and kill her before I waste you!' He screamed.\n\n\"I couldn't see any way out. I slowly sank to my knees and stared up at the cavernous hole of the Colt .45 barrel that would end my life. I took a last look at Dawn drifting in and out of her narcotic dream state. I prayed that when the end came to her, she wouldn't be coherent enough to realize what had happened.\n\n\"I looked up at the man who was going to kill me and stared into his victorious eyes. I felt helpless as I waited for the inevitable.\n\n\"The blast of the gun deafened the room and reverberated in its echoes. I flinched on the impact but something was wrong. I felt a hot, sticky, wetness spray on me and the figure of Tony Molteri, minus a face, drop lifeless to the floor. A stunned Sal Genero, similarly sprayed with blood, still hunched at the duffel bag looked in disbelief at the corpse of his partner.",
        "\"I looked at a weaving, shaking, Dawn, still aiming at some unseen target, trembling as she said, 'I had to save you. I couldn't let him kill you, Tom. I love you!'\n\n\"Before Genero could react, I scrambled up and took my Smith &amp; Wesson Model 19 from her. I aimed at Genero desperately crawling towards retrieving Molteri's gun. He stopped just inches short as I walked over and got that weapon. He huddled in fear from my retaliation.\n\n\"I tried to recover and take the time to find a solution to my predicament. If I reported this straight, Genoro's testimony would cast doubt on whether I knew of the existence of the money beforehand. My career in law enforcement would be over with the reputation of being a dirty cop. Worse, the Calpera Family wouldn't hesitate killing Dawn for shooting Tony Molteri. They couldn't allow word to get out that a drugged out stripper killed one of their own with impunity.\n\n\"No, there had to be another way as I thought and pondered. I considered one possibility after another, weighing the good and bad aspects. I soon realized that while I hadn't come up with the perfect solution, I had the most plausible under the circumstances.\n\n\"Get up Genero, we're going into your office,\" I informed the sniveling weasel. We walked in and I went and sat at his desk. \"Where do you keep the warranty deed forms that you and Molteri used in all of the bustout schemes you perpetrated?\" I demanded to know. He told me what drawer and I opened it. I took out one of the forms; it was perfect even down to the pre-signed notary signature and seal of Tony Molteri.\n\n\"I want you to sign over Genero's to me,\" I commanded him.\n\n\"'What? I can't do that! The Calpera Family will kill me!' he yelled.\n\n\"Do it, or I'll kill you on the spot,\" I warned. \"At least this way you'll have a head start before they start tracking you down. Make out the form showing I gave you a down payment of $1,000 dollars with monthly payments of $1,000 for a total of $100,000. You'll also draw up a promissory note. Make sure you transfer over all permits and licenses as well. Finally, I want you to show the transaction predated to last week.\n\n\"Sal Genero was spitting mad as I held the pistol on him and forced him to comply and give me his keys and combination to the safe. I reviewed the form and was satisfied that it conveyed the bar to me. As he was leaving Genero's for the final time, he made an attempt to pick up the duffel bag holding the million dollars.\n\nWhen I stopped him, he started crying, 'Officer Crowder, I won't last a week without that money!'\n\n\"You should've thought about that before you schemed to kill me, Genero. Get the hell out of here.\" I glared at him.\n\n\"With that accomplished, I went to stage two of the plan and called Mary.\" Dad said.\n\nOnce again, I stopped my Dad. \"You called Mom to get you out of this mess? How could you do that to Mom after you went and cheated on her? Do you have any idea how disgusted I am with you right now?\" I was pissed at the idea of him dragging Mom into this.\n\n\"I told Mary it was a life or death situation for me and Dawn, and somehow I finally got it across to her. She came to the bar and after getting over her horror at the scene, got Dawn, took my apartment key and the duffel bag and took Dawn to my apartment. She came back with my checkbook and then she left.\n\n\"Stage three was me calling into the precinct and informing them that I had just shot and killed Tony Molteri over a business dispute. Internal Affairs was called in and interviewed me. I told them I had struck a deal to buy Genero's from Sal Genero a week ago. He had transferred the property to me by warranty deed, and Tony Molteri notarized the deed. I hadn't gotten around to recording the deed yet. I showed them the warranty deed, the promissory note, and the back dated personal check I had written moments ago at Sal Genero's desk.\"\n\n\"I told them Molteri came to me last night saying Genero had run off with the embezzled funds from the bar, and insisted to me that my deal to buy Genero's was off. He threw the check I had written to Sal Genero in my face. I told him my deal was with the property owner, and since he wasn't on any paperwork that my deal stood. We argued, he threatened to kill me and pulled his gun, which forced me to take my gun and kill him.\"\n\nI just looked at my dad, stunned that he constructed this house of lies to explain what had transpired. \"Did they believe you?\" I asked incredulously .\n\nDad paused before replying and took the last sip of his mug of beer, \"Son, it was a different time back then. Nobody was sad about Tony Molteri being dead. The forensic unit just went through the motions. Same with the coroner with the autopsy. Internal Affairs knew I was lying through my teeth but they cut me some slack.\n\n\"I was suspended for three weeks without pay while the investigation wound up. Back then there was no such thing as the Betty Ford Clinic, me and Mary babysat Dawn at my apartment going through withdrawal from the heroin that Tony injected in her. She was fortunate that her addiction was only physical and not psychological. Once she weathered through, she recovered without any urge to shoot up again.\n\n\"Sal Genero lasted all of a week before he was gunned down by the Calpera Family for selling their cash cow, Genero's. Couple of guys from that family sought me out and tried to bluff me into selling it back to them. Turned out that Molteri wasn't a made man in the Calpera Family after all, just an associate they valued. There wouldn't be an issue of gangland retaliation. I told them to fuck off. It wasn't worth the aggravation to kill me and risk an investigation into the Calpera Family. Besides, they wouldn't have inherited it back anyway.\" Dad said matter of fact.\n\n\"I took over the bar and immediately stopped all the criminal activities that were done at Genero's. Terminated all the strippers and reduced the dance stage to what we've got now. That encouraged legitimate business owners to start investing back into the area and slowly the gentrification continued until you have all the shops and businesses in an area that once was literally hell on earth.\" Dad finished.\n\n\"What happened to Dawn?\" I asked.\n\n\"After she kicked her habit, Mary helped her recover and gain her strength. Things were still strained between Mary and me even though she realized I had the best of intentions for Dawn. We only talked when addressing the issue about getting Dawn healthy and gone. I knew then I had lost Mary forever. She'd never forgive my betrayal.\n\n\"We took Dawn to the bus depot and bought her a ticket across the country. I gave Dawn the duffel bag full of money. I didn't want it, and considering what a shitty life Dawn had, she was entitled to it as far as I was concerned. Mary agreed with me. So, I watched heartbroken as that bus drove off.\" Dad looked wistfully at me waiting for my next question. He knew I had to ask.\n\n\"Dad,\" I paused, \"Dad, did you ever think you made a mistake marrying Mom? Could you have been happier marrying Dawn, knowing that she was a stripper?\" I wanted to hear what Dad would say and whether his response could sway me to reconcile with Lila.\n\n\"Son, I don't have to wonder about that. I married her, had my child with her, and loved her every day of my life.\" Dad pointblank stunned me.\n\n\"Wait....what do you....what do you mean you married her!\" I yelled!\n\n\"Your mom is Dawn,\" Dad calmly revealed. \"Dawn was her stripper name, Mary Ellen Donovan was the woman I married and took my name.\n\n\"But how...\" I sputtered, trying to articulate my question.\n\nAnticipating this, Dad said, \"Once that bus drove off, I knew I had made a mistake, I ran after it even though it was a city block away. I saw the brake lights come on and the door open up and your mom came flying off that bus crying, she dropped the duffel bag, running to me and we hugged and kissed as passersby cheered.\"\n\n\"What about your girlfriend, Mary, the nurse!\" I demanded to know. The volume and agitation of my voice caused everyone in the bar to look at me. I noticed my Uncle Jack just smirking at me.\n\n\"Mary Katherine Ellington. Also known as Aunt Kate. Once your uncle got out of the service I asked him to come up here and settle down. The moment he saw your Aunt Kate, it was over for the both of them. Whereas, I never got to first base with her, she and your uncle made love on their first date. He told her, he liked the name Katherine or Kate better, so she changed it for him. That is why you had no inkling that your aunt was once known as Mary.\"\n\n\"But Mom became a nurse,\" I marveled as I tried to wrap my head around what transpired.\n\n\"Yes, your mom was inspired by Aunt Kate to finish school and apply to nursing school. They worked at the same hospital for a couple of years and became best friends despite how they met. Your Aunt Kate decided to quit nursing and we voted to make her the fulltime manager at the bar.\n\n\"You see, Mike, I have made a lot of mistakes in my life. I have a lot of regrets. I have a lot to answer for when my time comes to face God. But, having and loving your Mom, having you as my son, getting to live with the two of you has been my joy in life. It gets me out of bed every day to go out in a world where people get hurt every day. I couldn't make it without y'all.\n\n\"And that's what you finally have to decide in the long run, Mike. You have to decide whether you are better off with her or without her in your life. We knew instantly when we met Lila what type of person she is. That's why we've bonded with her so fast. If you look at her, she's your Mom just wrapped in a younger, different package.\n\n\"I see them coming to the door so I'm going to drop one thing I wasn't supposes to tell you until you two flew back from Paris. Your Mom and Lila have been house hunting for the past week in the midst of preparing for the wedding. Consider it part of the nesting ritual.\n\n\"Lila found a house she fell in love with to raise her family. Me and your mom have bought the house and you two will get the deed to the place as a late wedding gift. You'll also get an early wedding gift of your tickets on the flight have been upgraded to first class. All courtesy of the money we took from the mob all those years ago. The same money that helped raise you, paid for our family vacations, and for your tuition. So, enjoy it.\"\n\nI didn't know what to say to my Dad, so I remained speechless as the front door opened. There, backlit by the sun in the threshold stood my mom and my bride, side by side. I was struck by the similarities of these two strong women I was blessed to know. Courage holders of a sort that I would never have; strong, nurturing, souls that would love and defend their families with their lives. How could I have ever doubted?\n\nI slid off the bar stool and walked to my bride. My mom walked by me and gave my shoulder a reassuring pat as we passed each other. Lila, still teary eyed, still unsure of my decision, braced herself with the indomitable core that made her who she was. The core that would allow her to bravely face whatever the world threw in her way. Her eyes steeled with fortitude mixed with the hopeful anticipation that I would accept her in my life.\n\nI stood in front of her, \"I've been such an idiot, Lila. Please forgive me.\" I begged her quietly. Tears started rolling down her face as she smiled and quickly nodded yes. Her hands reached around, took my biceps and slid down until she grasped my hands. She guided my palms to the firm swells of her butt and planted them, then she wrapped her arms around my shoulders and fiercely hugged me as we kissed and swayed gently, oblivious to everything.\n\n\"Of course, I forgive you, Mike,\" she cried when we finally broke our kiss. \"I'm so sorry that I caused such a grave misunderstanding, but I honestly thought you understood what I tried to tell you back then.\" She declared with every iota of sincerity.\n\n\"I know, Baby, it was my fault. You aren't to blame; this is all on me.\" I said to her. \"At least, we'll get to have some incredible make up sex in Paris,\" I joked.\n\n\"You mean about our incredible make up rutting in Paris, don't you?\" she joshed back.\n\n\"Make up honeymoon rutting in Paris is the best,\" I agreed. We kissed over and over. Over the bar's stereo system, I heard the opening restrain to 'B4' on the jukebox. I finally understood the significance of its permanence and its phonetic implication.\n\nBefore; a testament to the healing power of love. Before; an acclimation to the world that a couple united could withstand any hardship. Before; a declaration that love can overcome any transgression. Before; a simple word that the past is the past.\n\nIn my peripheral view, I saw my parents sidle close to us as they began slow dancing to their song. The high, bluesy notes from the guitar solo drifted into the ether. I told Lila we needed to dance and she placed her head on my shoulder as we shuffled lovingly together.\n\nI looked over and saw my mom looking at me. From her expression, I knew Dad had told her that I knew their history. I smiled at her and was rewarded with the same loving smile that my mom had always given me. I could tell she relaxed knowing the weight of her history was finally off her shoulders.\n\nThe gravel raspy voice of Bob Segar began:\n\nI remember standing on the corner at midnight\n\nTrying to get my courage up\n\nI felt Lila gripping me, as the import of the lyrics sunk in.\n\nThere was this long lovely dancer in a club downtown\n\nI loved to watch her do her stuff\n\nWe swayed to the beat as she nuzzled my neck and gave it a light kiss.\n\nThrough the long lonely nights, she filled my sleep\n\nHer body softly swaying to that smoky beat \n\nDown on Main Street\n\nI looked over to my parents and saw my Dad caressing my Mom, seeking her daily reassurance that she loved him.\n\nIn the poolhalls, the hustlers and the losers\n\nI used to watch them through the glass\n\nWell I'd stand outside at closing time\n\nJust to watch her walk on past\n\nUnlike all the other ladies, she looked so young and sweet\n\nAs she made her way alone, down that empty street\n\nDown on Main Street\n\nWe and my parents continued to dance through the song played through the solo and final restrain:\n\nAnd sometimes even now, when I'm lonely and beat\n\nI drift back into time and find my feet\n\nDown on Main Street\n\nI felt Lila stir as the song finished. She looked up at me, \"Mike, about the baby...\"\n\nI hushed her with a kiss.\n\n\"When we get back from Paris, we'll need to go to the Animal Shelter and find our French Mastiff puppy. Our child will need the best guardian available growing up,\" I said as I looked in her happy adoring eyes.\n\n\"Lila?\"\n\n\"Yes, Mike?\"\n\n\"If we have a daughter and she ever express any interest in dancing?\"\n\n\"Ballet, Mike. Just ballet!\" Lila firmly and emphatically answered that question for all time.\n\nI could live with that."
    ],
    "authorname": "oshaw",
    "tags": [
        "bar",
        "college",
        "stripper",
        "jukebox",
        "honeymoon",
        "puppy",
        "police",
        "vietnam",
        "legends day story"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/justice-13"
}