{
    "title": "An Unexpected Family Pt. 02",
    "pages": [
        "All Rights Reserved 2019\n\nPart 2\n\nChapter 45\n\nWhen Jack took off his jersey in the locker room, it hurt... Really hurt. He moaned his disapproval as he peeled the jersey from his shoulders after the third game of the series with the Rangers.\n\nStanding, waiting for the shirt to come off, were Karen Parsons, the team trainer, and Bill Ocher. Clyde and other players were watching, too. When Jack released the shirt from his body...\n\n\"Damn, Jack,\" Clyde mumbled.\n\n\"Jeez,\" the other players sighed, in unison.\n\n\"It's bruised, Jack. I can see the seams on your skin. Bill, I'm going to want x-rays to see if any ribs are broken. He's lucky he turned his back to the pitch,\" Karen insisted.\n\nBill nodded.\n\nJack turned to Bill and said, \"Like I said... It wasn't on purpose. He lost control and it hit me. You know McNulty has control problems.\"\n\nBill nodded again. \"The last thing I need are broken ribs,\" he barked. \"You're leading this team to the playoffs. I lose you, and our momentum could fall apart. No playoffs. Karen, I want the report as soon as you get it.\"\n\nKaren nodded and led Jack to the medical facilities at Globe Life Park.\n\nJack had been plunked in the back by Sean McNulty in the 8th inning. The pitch had been clocked at 101 miles per hour and sent Jack down to one knee. He had to balance himself on his bat. It hurt... Knocked the breath out him. For a moment or two, he thought he would suffocate.For a m\n\nHis teammates left the dugout expecting a fight, but Jack waved them off, while still on his knee. When Ocher ran out of the dugout to home plate to check on him, Jack said, \"It wasn't on purpose. Tell 'em.\"\n\nKaren knelt to help him to his feet. \"Tell me you want out and it will happen,\" she offered. \"It was 101 miles per hour.\"\n\nJack shook her off. He dropped his bat, stood without her help, swayed his back left, then right. Bent at his knees. Then sprinted to first base.\n\nThe crowd applauded their approval. When McNulty looked at Jack on first, Jack tipped his helmet.\n\nClass.\n\nThe Royals won... 4-1\n\nChapter 46\n\nJack entered his room, having gone to IHOP and met some of his teammates.\n\nHe was sore. No broken ribs, which Bill Ocher was visibly relieved when Karen reported the results. Karen wrapped his chest with an ace bandage and ice pack on the bruise. Per Karen's directions, he was to take four ibuprofen for the pain and swelling and report to the locker room the next day at 2:30 pm sharp. He was not to take the ice pack off until it melted and became warm. Sleep with it, she said.\n\nWhen B\u00e9r\u00e9nice heard the door open, she leapt from bed in her satin pajamas.\n\n\"Jack... I saw what happened. Are you alright?\"\n\n\"I'm fine. A little sore. It's just a bruise,\" he replied.\n\n\"You didn't look OK when you came out to first base in the bottom of the 8th and 9th. You kept fidgeting with your back. Stretching,\" B\u00e9r\u00e9nice offered, with concern in her tone.\n\nJack paused to consider her comments. He just realized this was the first time he had come in from a game and someone was concerned about his well-being since his mother in high school. He smiled a gentle smile with his thought.\n\n\"What?\" B\u00e9r\u00e9nice chirped.\n\nJack shook his head to clear his thoughts. \"You're beautiful. I like your pajamas. They're cute.\"\n\nB\u00e9r\u00e9nice grinned, then smiled. \"Thank you. But your back? What can I do?\"\n\n\"Nothing,\" he mused, as he began undressing. He took off his coat and hung it up... gingerly. He walked over to the chair, sat, and took off his shoes and socks and placed them in the closet. He took off his trousers and hung them. Then... he unbuttoned his dress shirt and slowly revealed to B\u00e9r\u00e9nice he had a bandage around his chest.\n\n\"That doesn't look fine to me,\" she growled, with crossed arms.\n\nJack smiled, hung up his shirt and went to the bathroom to brush his teeth. B\u00e9r\u00e9nice followed him inside.\n\n\"That ice pack on your ribs says it's not fine,\" she asserted.\n\n\"My ribs are not broken. Made of steel... you know, Superman.\"\n\n\"You're not funny, Jack,\" she offered sternly with crossed arms.\n\nAfter brushing his teeth and rinsing, he turned to B\u00e9r\u00e9nice and leaned against the countertop. \"Karen says they're not broken. I had an x-ray. It's just a bad bruise. She wants me at the locker room at 2:30 tomorrow afternoon to check me out. I have to sleep with this pack tonight and take four ibuprofen before bed. She gave them to me. They're in my coat pocket.\"\n\nB\u00e9r\u00e9nice turned out of the bathroom to get the pills. When she returned, she said, \"Who is this Karen? She seems to have control over you and I want to meet her,\" she said, with a sassy tone, followed with a giggle.\n\nChapter 47\n\nJack woke feeling like someone had struck him in the right side of his back with a sledge hammer. Although he wanted to moan, he didn't want to concern B\u00e9r\u00e9nice with the pain he was feeling. He sucked it up and rose to the side of his bed without an utterance. He looked around and B\u00e9r\u00e9nice was nowhere to be found.\n\nThen, he let out a groan that could be heard in Ellis County, 50 miles away. He stretched his arms, back, and hip muscles. Painfully sore.\n\nHe thought back to the previous night.\n\nHe and B\u00e9r\u00e9nice crawled into bed and she held him close... like she needed him to breathe air. He held her close and kissed her forehead. She pushed him over onto his back and began kissing him, despite the extreme soreness in his back. She pressed her breasts into his chest. He was beginning to enjoy her kissing. She was good. He pushed her over and brought her close into a cuddle. A spoon. He on his left to avoid the ice pack on his right. She took his right hand, brought it under her pajama top, and placed it on her left breast. His large hand smothered her C cup breast. She brought her right hand over his and held him in place. She hummed her satisfaction. He moaned his. Then... he fell asleep holding her warmth in his hands.\n\nAfter stretching the soreness, he walked to the bathroom to take care of business. When he exited the bathroom, he heard someone jiggling the lock on the door.\n\nB\u00e9r\u00e9nice entered the room smiling like it was the first time she had seen him in years. In her arms was take out from IHOP.\n\n\"Well? You seemed to sleep well. How did it go?\" she offered, while she slipped past him and went to the table with the food.\n\nJack followed her to the table and was about to reply when she grasped the back of his head and pulled him close to her lips without touching. \"Will you break if I kiss you?\" she giggled.\n\nJack shook his head with a smile.\n\nB\u00e9r\u00e9nice pulled him to her lips softly and kissed him. Jack returned her kiss. A moment or two later, she probed his lips with her tongue, seeking a response. Jack responded favorably with his own soft touch of his tongue.\n\nB\u00e9r\u00e9nice broke the kiss, but kept her lips close to his as she read his mind through his eyes. \"I love you. Are you still sore?\" she asked.\n\nHe nodded. \"I love you, too. Very much. Sore? Yeah, a lot.\"\n\n\"When I take the bandage and pack off, I'll kiss it better, OK?\" she giggled.\n\n\"OK,\" Jack replied.\n\nThey ate the scrambled eggs, bacon, sausage links, toast, biscuits and gravy, orange juice, and coffee. B\u00e9r\u00e9nice did her best to get Jack to laugh, which hurt when he laughed.\n\n\"OK,\" she offered, when they finished eating. \"Let's see this alleged bruise.\"\n\nShe knelt at his feet and began unwrapping the bandage around his chest and back. \"Stand up and turn around,\" she ordered, as she pulled the bandage and pack from his body.\n\n\"Jack!\" she gasped. \"There are baseball seam marks on your back! And your skin is purple! The size much larger than a baseball!\"\n\n\"Do you think it will be permanent?\" he chuckled. \"Something to remember for my career?\"\n\n\"Smartass!\" she growled. With that, she pressed softly on the bruise eliciting a yelp from his mouth and a \"I can't believe you just did that\" frown in return.\n\n\"That is not the 'kiss it better' kiss I was expecting!\" he growled.\n\nShe arched an eyebrow in response and whispered, \"I love you.\"\n\nWith that, she pulled him into her lips for another kiss.\n\n\"Better?\"\n\nChapter 48\n\nTheir follow up kiss was interrupted by a knock at Jack's door. B\u00e9r\u00e9nice tried to break the kiss, but Jack held their kiss a few seconds more.\n\n\"It wasn't better, yet,\" he whispered, as he released her with a wide grin.\n\nHe reached inside a drawer and put on some cargo shorts and answered the door. He had no shirt on.\n\n\"Jack!\" came the feminine voice from the hallway. \"I have things I need to do this afternoon. I want to see your back. May I come in?\"\n\n\"Of course, Karen... Come in, please.\"\n\nAs Karen entered Jack's room, she noticed B\u00e9r\u00e9nice across the room. \"I'm sorry. Am I interrupting?\" Karen offered.\n\n\"No... Karen, this is my sister in law, B\u00e9r\u00e9nice Caron. B\u00e9r\u00e9nice, this is Karen Parsons, the team trainer. I mentioned her last night when I came in.\"\n\nStanding before B\u00e9r\u00e9nice was a very pretty African American woman dressed in blue Bermuda shorts, a Royals polo shirt with her name embroidered on the upper left breast, and white athletic shoes. She was carrying a small royal blue bag. Her hair was cut very short, almost masculine like, and her eyes were an exotic brown color. She was about 5 feet 10 inches tall and had an athletic build, where B\u00e9r\u00e9nice thought she may have played basketball or soccer in college. When she was introduced to B\u00e9r\u00e9nice, her brilliant white teeth lit up the room.\n\nKaren set her bag down on the bed and crossed the room to greet B\u00e9r\u00e9nice. \"I'm sorry, B\u00e9r\u00e9nice. I didn't know Jack had a guest.\" She shook B\u00e9r\u00e9nice's hand and went to work. \"This will take only a bit. I'll be gone in a minute or two,\" she offered, as she turned her attention to Jack.\n\n\"Sore this morning, Jack?\"\n\n\"Very.\"\n\n\"Turn around and let me see,\" Karen ordered. As Jack turned around, Karen's eyes went straight to his athletic ass. She looked over her shoulder to B\u00e9r\u00e9nice and wiggled an eyebrow with a smile. \"That's a nice one, Jack,\" she offered, and wiggled her eyebrow again to B\u00e9r\u00e9nice. B\u00e9r\u00e9nice saw what Karen was doing to her brother in law and giggled softly.\n\nKaren then went into business mode. \"OK, Jack. You've got a nice little bruise there. Now, face me. You do the same motion I do and tell me the pain level from one to ten... ten being the most painful.\"\n\n\"Got it.\"\n\nKaren had Jack perform several motions and the highest pain level he achieved was a five, while swinging with a bat motion.\n\n\"Jack, I know you like arriving at the ballpark in a business suit. Not today. Shorts and a t-shirt today. I'm wrapping you up in ice again and I'll take it off before warm ups today. I have the wrap and ice pack in my bag.\"\n\nAs she was wrapping Jack into his ice pack, Karen found out B\u00e9r\u00e9nice was the wife of Jack's recently decreased brother. She offered her condolences, helped Jack into his t-shirt, gave him more ibuprofen, and said goodbye to them both.\n\n\"I like her. She cares about you, Jack.\"\n\nChapter 49\n\nJack sat down at the table after Karen left.\n\nHe looked to B\u00e9r\u00e9nice and smiled. \"B\u00e9r\u00e9nice, I've never been so happy as I am, right this moment. You and I alone. Knowing you, John, Patrice, and Am\u00e9lie will be with me.\"\n\nB\u00e9r\u00e9nice sat at the table across from him and took his hand. \"I'm looking forward to Kansas City, Jack.\" She paused. \"I've been thinking about your idea... About buying a house for us.\" She paused again to gauge his reaction. \"If you want to buy a house for us, then OK. But, if you're interested, we can move into your house. You said yourself, it will just be until the end of the season. No need to buy a house if you leave Kansas City for another team. I know I want to be with you. To greet you when you come home. To share you with my children.\"\n\nJack smiled and nodded his approval. \"OK.\" He became a little emotional.\n\n\"OK,\" he repeated. \"Come to my house.\"\n\nB\u00e9r\u00e9nice rose from her chair and sat in his lap with her arm around his neck.\n\n\"We love each other, Jack. Unless you want it, we can skip the formalities. I believe there will be a time in our future where we want to marry each other. To have children of our own.\" She paused and looked deeply into his eyes. \"I want to share your bed, if you'll let me.\"\n\nJack nodded his approval again. \"I just thought you wanted to be courted. To have some romance.\"\n\n\"Jack,\" she began. \"You, Robert, and I have a romance. It hasn't left for me. And I don't think it has left for you, either. I love you as much as I love Robert. I love you for who you are. I'm in love with you right now.\"\n\nJack nodded his agreement. \"I love you so much, B\u00e9r\u00e9nice.\" He kissed her and hugged her like he had never hugged her before.\n\n\"OK... Business and plans. Last night was our last night together. The team leaves immediately after the game tonight for Minneapolis... afternoon game tomorrow, then Chicago with the White Sox. I won't be back in Kansas City for a week. When you are ready to move to Kansas City, call me. We'll talk and make arrangements and details. You will know where I am by looking online for the Royals' schedule. I will need lots of phone calls from you and video calls from John, Patrice, and Am\u00e9lie while I'm on the road.\"\n\nB\u00e9r\u00e9nice kissed Jack. She kissed him hard; like she would never kiss him again.\n\n\"I love you, Jack.\"\n\n\"I love you, B\u00e9r\u00e9nice.\"\n\nChapter 50\n\nB\u00e9r\u00e9nice and Jack were in the lobby, having just left the elevator, when a young man approached them.\n\n\"Here's the pass you requested, Mr. Caron,\" he said, as he offered the card and neck lanyard. \"How's the back? We need you tonight.\"\n\n\"Thank you, Gabriel. The back? It's fine. I'll be out there like nothing ever happened,\" Jack barked.\n\n\"Great! Look... the bus is loading now. You better move it along. I'll see you at the stadium.\"\n\nJack turned to B\u00e9r\u00e9nice and handed her the pass. She accepted it with a furled brow.\n\n\"What's this?\" she asked, as she look back to Jack's smiling face.\n\n\"It's a pass to one of the suites at the ballpark. Some of the wives and girlfriends will be there. And... they know you're coming. Take a taxi to the ballpark. When you present the pass, an usher will escort you to the suite, just like the other night,\" Jack replied, with an eyebrow arched.\n\n\"But, Jack... I... don't know them. It will be awkward,\" she sighed.\n\n\"Nope. It won't. Morgan Lancaster, Trey's wife, is flying in this afternoon, just to see you. She told me she's dying to meet you. Trey and Morgan live in Lees Summit also, and they have three small children, just like you. I don't know anyone who doesn't think Morgan is the greatest person ever. She's going to love you. She will introduce you to everyone. You'll have fun, I promise.\"\n\nB\u00e9r\u00e9nice was stunned. She didn't know what to say. Jack was expecting a comment.\n\n\"It's OK, right? You said you wanted to move to Kansas City soon, right? I called Trey and Morgan so you would have a friend when you arrived. Morgan is a stay at home mom and Trey is a junior executive with the Royals,\" Jack offered, nodding and hopeful B\u00e9r\u00e9nice would agree.\n\nB\u00e9r\u00e9nice nodded her approval, took Jack by the neck and pulled him in for a kiss. I juicy one at that. A moment or two later, whistles and catcalls erupted from the lobby. Teammates.\n\n\"Jack! We do have a game to play tonight! The bus is leaving! We don't want to see you chasing the bus now, do we?\"\n\nB\u00e9r\u00e9nice released Jack from her kiss and whispered a thank you.\n\n\"Gotta go. After the game, Morgan will bring you to the locker room before we leave for Minneapolis. I want to see you before I leave. She'll make sure you return to the hotel safely, too. I told the hotel staff you were in my room and checkout is 11 am,\" he said as he nodded. \"You make me have a hard time concentrating on baseball, B\u00e9r\u00e9nice. I'm excited about our prospects.\"\n\nHe set his bags down and embraced her. Then, he kissed her and hugged her closely, for nearly a minute. As he turned to leave, he winked, grabbed his bags and waved. \"I love you.\"\n\nB\u00e9r\u00e9nice followed him to the bus and gave him another kiss before he boarded the bus. She waved as the bus pulled away and mouthed the words...\n\n\"I love you.\"\n\nChapter 51\n\n\"Jack! You told me that woman was your sister in law. Do you treat all of your sister in laws like that?\"\n\nJack laughed as he plopped down into the seat next to Mitchell Elliot. Jack looked out the window and waved to B\u00e9r\u00e9nice as the bus was pulling away from the hotel.\n\n\"She is my sister in law,\" Jack mused. \"The only one I have. Last night and this morning, we had a talk. I think we are boyfriend and girlfriend, now.\"\n\n\"Ooooo, so that's why you molested her in the lobby,\" Mitchell shot back.\n\n*****\n\nB\u00e9r\u00e9nice arrived at the suite for the 6 pm game against the Rangers. The last game of the series.\n\n\"Here we are, Mrs. Caron. Again, my name is Allison and I will be serving this suite for tonight's game. I will be in and out all night to see to your needs.\"\n\nWith that, Allison opened the door to the suite and led B\u00e9r\u00e9nice inside.\n\n\"B\u00e9r\u00e9nice! Come in here, Sweetie!\"\n\nB\u00e9r\u00e9nice saw a short blond, with brown eyes, smiling widely and rapidly approaching her as she entered the suite.\n\n\"My name is Morgan Lancaster. I was thrilled when Jack called. He told us you two are going to make a go of it. That's so exciting.\" Morgan reached to hug her new friend.\n\n\"Thank you, Morgan,\" B\u00e9r\u00e9nice said as she released her from the hug. \"Yes, Jack and I are... well, we're going to try.\"\n\n\"Come on. Let me introduce you to the girls.\"\n\nThe wives and girlfriends squealed when they were told B\u00e9r\u00e9nice had landed Jack Caron. After the introductions, Heather Stone, caught B\u00e9r\u00e9nice alone for a moment.\n\n\"B\u00e9r\u00e9nice, girl. You don't know how lucky are. Nearly every girlfriend of the players thought twice about dumping their man and pursuing Jack. A couple of wives, too. He's the hottest player on the team. Women couldn't believe their eyes when he showed up after last season. Everywhere he goes, women throw themselves at him. And, he is so polite and courteous. Charming, too.\" She paused and leaned in to whisper, \"The girls in Kansas City will be weeping after tonight. Sit next to me. I want to know everything about you two.\"\n\nBy the end of the 2nd inning, B\u00e9r\u00e9nice had finished the story of her life with Robert and Jack Caron. There wasn't a dry eye in the suite and every woman wanted to hug her.\n\nChapter 52\n\nJack was on first base having been walked in the 4th inning. He had grounded out in the 1st inning. The count was 1-1 to Malone and 1 out. The game was scoreless.\n\nHe looked to the third base coach for the sign. Steal... Hit and run steal.\n\nI got this. I already have him figured on his stretch, he thought.\n\nJack took his normal leadoff. Just before he knew Nagumo was about to pitch, Jack broke for second base... head down... sprinting like a jackrabbit. Nagumo panicked and threw the ball to first base.\n\nDip shit, Jack thought, as he slid feet first into second, popping to his feet to find the ball still in the first baseman's glove.\n\nThe girls in the suite were screaming for Jack.\n\nThe first baseman casually lobbed the ball back to Nagumo. Jack didn't waste the opportunity. As soon as the first baseman released the ball, Jack sprinted for third base.\n\nThey're both going to Triple A after this one, Jack thought, as he slid into third base unmolested. Nagumo still had the ball in his hand.\n\nB\u00e9r\u00e9nice couldn't believe her eyes, while the girls in the suite were high fiving each other and screaming. Jack had stolen two bases without a pitch being thrown, she thought. The home crowd was voicing its displeasure with boos.\n\nJack dusted himself off and took a short, cautious lead off third base. He's pissed. Good, Jack thought, after Nagumo stared him down before approaching the rubber. Jack checked the position of the third baseman... Deep and far from the base.",
        "Good God! Jack thought. Nagumo is doing a wind up stance? Best time to get him.\n\nJack took an insane lead at third because the third baseman wasn't covering the bag. Jack was nearly half way to home plate, keeping an eye on the third baseman. As soon as Nagumo began his wind up, Jack broke for home. The girls in the suite began screaming. The catcher never saw Jack coming because Malone was blocking his view.\n\n\"SAFE!\" screamed the umpire, as Jack slid feet first across the plate, popping to his feet and into a jog to the dugout with a single, fluid motion. The Rangers crowd began their boos again.\n\nB\u00e9r\u00e9nice was proud of Jack. She had never seen anything like it. The girls in the suite were jumping up and down and hugging B\u00e9r\u00e9nice.\n\nJack was greeted outside the dugout by the entire bench.\n\nJack scored the only run that night.\n\nRoyals 1 Rangers 0.\n\nBut, Nagumo was kept in the game for 6 innings, stifling the Royals offense.\n\nChapter 53\n\nWhen Jack left the locker room, DFW Royals fans were there to greet him. He graciously signed autographs and allowed photographs. He asked them their names and where they were from. He told them he was from Reims, Texas... Just 110 miles away.\n\nB\u00e9r\u00e9nice and Morgan were waiting on him a few yards away. B\u00e9r\u00e9nice was smiling, enjoying the attention Jack was receiving.\n\n\"I haven't heard a bad thing about Jack,\" Morgan offered to B\u00e9r\u00e9nice. \"Trey said he heard the General Manager is bragging about getting Jack at just the right time. He's been playing very well this year and his teammates are thriving because of his success.\"\n\nB\u00e9r\u00e9nice turned to face her new 5 feet 1 inch friend. \"He is doing well, isn't he?\"\n\nMorgan nodded and then tilted her head. \"Just for my curiosity... How tall are you?\" she giggled.\n\n\"Just shy of 6 feet... 5 feet 11 and three quarter inches, to be exact... Bare feet.\"\n\n\"And I love your eyes. They're nearly black. Mysterious looking. Oh, here comes, Jack. I'll be over there talking to the girls when you two a done.\"\n\nJack was smiling as wide as the concourse when he met B\u00e9r\u00e9nice. B\u00e9r\u00e9nice was wearing the same white Royals jersey, with \"Caron' and number 7 on the back. The same one she wore with her family and friends, just three days ago. She also wore 3/4 length skinny jeans and white flats. She looks beautiful, Jack thought. He took her into a loving hug and B\u00e9r\u00e9nice returned his embrace.\n\n\"You ... Still... are a distraction for my career. Baseball is so hard to concentrate on because of you.\"\n\n\"I doubt it,\" she replied. \"Three stolen bases? Are you kidding me?\"\n\n\"Yeah... Crazy, huh? A scoreless, dull game is always the best time to get them napping\" he sighed.\n\n\"You were great on those steals tonight. The girls in the suite went berserk.\"\n\nJack nodded and smiled. With that, the bus horn honked and they both flinched.\n\n\"I've got to go. Today is the first day for me, B\u00e9r\u00e9nice. To call you every day and tell you I love you. That I can't wait to see you again.\"\n\n\"I'm looking forward to those calls, Jack. Every day. Hopefully, forever,\" she offered.\n\nThe horn honked twice this time.\n\nJack moved in for a kiss, and B\u00e9r\u00e9nice took his neck and pulled him into her lips.\n\n\"Ahh,\" the wives and girlfriends sighed.\n\nB\u00e9r\u00e9nice heard her new friends and giggled through the end of their kiss.\n\n\"Come home to me, Jack. I love you,\" she whispered.\n\n\"Count on it. I love you, too.\"\n\nAfter Jack and the bus left, Morgan stepped up to B\u00e9r\u00e9nice.\n\n\"You two are going to make it. You both are in love.\"\n\nChapter 54\n\n\"The children were absolute angels, B\u00e9r\u00e9nice. John is playing with Patrice and Am\u00e9lie is sleeping nearly all night,\" her father offered.\n\nB\u00e9r\u00e9nice sighed to herself, wondering how much longer the peace her father described would last.\n\n\"So... you and Jack,\" Frank Ouellet said, to get his only child and daughter to start a conversation.\n\nB\u00e9r\u00e9nice turned to her father in the front seat of the Suburban and smiled. \"It's like we've never been apart. He's so much like Robert. He's so much like Jack. Two brothers who I've been in love with for 16 years.\"\n\nFrank smiled as he drove toward Reims. \"I saw him get hit by the pitcher on TV the other night. He's OK?\"\n\n\"Yeah... A very bad bruise on his back. I saw it the next morning... he had baseball seam marks still on his skin. But, last night, he played as though nothing was wrong. I meant to ask him about it, but...\"\n\nFrank arched an eyebrow waiting for the conversation to continue. \"But?\" he finally asked, when she didn't continue. He saw her smile.\n\n\"We were too busy declaring our love for each other. The bus to the airport kept honking the horn for Jack to let go of me,\" she giggled.\n\n\"It's good, B\u00e9r\u00e9nice... That Jack won't let go of his feelings for you.\"\n\n\"Daddy,\" she began. \"Am I making a mistake moving to Kansas City? I don't feel like I am. It's like Jack is a part of me and I can't stay away.\"\n\n\"Absolutely, not. You're right about Jack. He is a part of you, just like Robert was. You have already seen a taste of his life in baseball. It's not like he will be home every night at supper. It's crazy the hours he keeps. You'll have to adjust and take what little time he has with you as precious. Don't waste one minute with him.\"\n\n\"Thank you, Daddy,\" she sighed. She paused for a few minutes. \"I want to move there as soon as possible. Maybe before he returns from Chicago. I want to greet him when he comes home. Do you think I can do it?\"\n\n\"Yes... Your mother and I will help you. I've never been to Kansas City.\"\n\nChapter 55\n\nB\u00e9r\u00e9nice, her children, and her parents were driving slowly in the neighborhood where Jack lived, looking for the house Jack had given them for the address. The houses were just like any middle class neighborhood. B\u00e9r\u00e9nice remembered Jack told her he was living a modest lifestyle to save money. He knew he couldn't play baseball forever.\n\n\"The traffic here is as bad as Dallas-Fort Worth,\" groaned Frank Ouellet.\n\n\"Grandpa!\" John yelped. \"What is traffic?\"\n\n\"It means too many people driving cars, John,\" he groaned again.\n\nB\u00e9r\u00e9nice reflected on losing her friends in Reims on the drive to Lees Summit, Missouri. But, she was also looking forward to being with Jack, and praying she could be his companion, wife, and lover.\n\n\"Here it is, B\u00e9r\u00e9nice. Seems like a nice home. Two car garage,\" her mother offered.\n\n\"It is a nice home,\" B\u00e9r\u00e9nice thought. \"Ranch style.\"\n\nAs they began stepping out of her father's Suburban, an older woman stepped out of Jack's home. \"That must be Mrs. Campbell, Jack's assistant,\" B\u00e9r\u00e9nice deduced. B\u00e9r\u00e9nice had called her to let her know they were nearing Kansas City.\n\nAlso, Morgan Lancaster pulled up in her minivan to greet them. She had her two little girls and son with her.\n\n\"B\u00e9r\u00e9nice! I'm Julie Campbell, Jack's assistant,\" she cried from the front porch. Julie was a 62 year old grandmother and she looked like she was 47. She kept her figure well and dressed classy for her age, without over doing it. Brunette... brown eyes... and sassy.\n\nMorgan greeted B\u00e9r\u00e9nice and her parents and said hello to her children. Morgan's children were standing around staring at B\u00e9r\u00e9nice's children... Awkward silence among the children.\n\n\"OK... Leave your things in the car. Let's go inside the house,\" Julie Campbell began. Then she whispered to B\u00e9r\u00e9nice, \"You get Jack to give you a budget to fix up the house. A bachelor definitely leaves here. Honey, you need to make it a home instead of a place to sleep and take a shower.\"\n\nB\u00e9r\u00e9nice nodded and grinned. Her parents each took John and Patrice, and B\u00e9r\u00e9nice had Am\u00e9lie in her arms as they entered Jack's home.\n\nUgh, B\u00e9r\u00e9nice thought. Julie's right.\n\n\"Well,\" Morgan offered, with a giggle. \"You can tell a woman hasn't lived here.\"\n\nJulie showed them the 4 bedroom, 2 bath home. There was a finished basement, where Jack kept exercise equipment, and the small covered patio was nice, along with the backyard. Jack asked Julie to call B\u00e9r\u00e9nice and have beds delivered for the children and her parents. The kitchen was nice... Roomy, with a breakfast area off to the side. The den was spacious and Jack had a large TV and stereo system there. The furniture didn't match. It looked like Jack bought it at garage sales and dragged it back to his house. The master bedroom was just as bad, but, she gave him credit for the super king size bed... with no headboard. The master bedroom had an en suite bathroom... a huge walk in shower and a separate large tub. It looked like a remodel. It looked great.\n\nB\u00e9r\u00e9nice smiled at Jack's effort... or lack of effort.\n\nAfter all of the comments about Jack's horrid living style, Julie spoke up.\n\n\"One more thing, B\u00e9r\u00e9nice. Follow me.\" She lead everyone to the garage.\n\n\"Jack bought you a used minivan. Honda Odyssey... 3 years old. That man never buys anything new unless he has to. Anyway, he insisted the car be titled in your name. I have paperwork for you to sign and I'll take it back to the dealer.\" Julie then sighed. \"You have yourself a wonderful and handsome man, B\u00e9r\u00e9nice. But you have your work cut out for you changing his bachelor habits.\"\n\nB\u00e9r\u00e9nice smiled and nodded. \"Maybe three children will bring him around. I hope it doesn't scare him off.\"\n\nMaybe she did have a challenge on her hands. But, you know, she thought. Robert was just like Jack.\n\nChapter 56\n\nB\u00e9r\u00e9nice woke having heard noise in the kitchen. She knew it was Jack coming home from Chicago. She looked at the alarm clock... 4:38 am. She rose from her bed wearing the same off white satin pajamas she wore in Arlington. Just as she cleared the threshold of the bedroom door, Am\u00e9lie began crying. She went to the nursery and changed her diaper. When she picked her up to cradle her, Jack spoke up...\n\n\"I didn't mean to wake up the prettiest girls in Kansas City.\"\n\nB\u00e9r\u00e9nice turned to see Jack leaning against the door jamb smiling widely, but, looking tired. As usual, wearing his business suit, but without the tie, and the collar of his shirt open, revealing a t-shirt underneath. He still looks handsome, she thought.\n\n\"You're deranged,\" she groaned. \"Look at my hair. No makeup. My eyes lids are swollen.\"\n\n\"I don't think so. I have it on authority, from the wives and girlfriends, you are beautiful. Quote... Her dark eyes, hair, and tall stature are exotic and beautiful. Don't you mess it up, Jack... Unquote.\"\n\n\"You're messing it up, right now. A kiss?\" she groaned.\n\nJack crossed the nursery, took B\u00e9r\u00e9nice in his arms, and planted a soft kiss on her lips. When he broke the kiss, he said, \"I love you.\"\n\n\"I love you, Jack.\"\n\n\"And, I love you, Am\u00e9lie,\" he continued. He bent down and kissed his niece in her mother's arms.\n\nJack then wrinkled his nose from the diaper.\n\n\"That's right, Jack!\" B\u00e9r\u00e9nice giggled. \"Wrap that diaper in the plastic sack and take it to the trash in the garage. Welcome home.\" She chuckled.\n\nWhen Jack returned to the nursery from the garage, he found B\u00e9r\u00e9nice sitting in a rocking chair, nursing Am\u00e9lie. Her satin pajama top was unbuttoned and her right side was exposed for Am\u00e9lie.\n\n\"Beautiful,\" Jack sighed, from the doorway.\n\nB\u00e9r\u00e9nice smiled lovingly in returned. She whispered, \"Thank you for letting me buy some things for the nursery. The crib, the changing table, and the mobile. Jack, you're so generous to us.\" She began sobbing softly.\n\nHer life had changed so quickly and so much the past three and half months, and now, it was beginning to catch up to her.\n\nJack knelt at her side and placed his arm around her shoulders, hugged her neck, and caressed Am\u00e9lie with his other hand.\n\n\"We're family, B\u00e9r\u00e9nice. We always have been. Please... Anything that will make you comfortable and feel at home here, I will get it for you. I want you to be happy here. With me.\"\n\nB\u00e9r\u00e9nice took her left hand and caressed his cheek.\n\n\"Thank you,\" she whispered.\n\nChapter 57\n\nJack groaned when the spear of mid-August sunlight made an attempt to pluck his eye from his skull. \"Thank, God, I have a day off,\" he groaned. He rolled over to his other side to glimpse at the clock... 11:09 am. B\u00e9r\u00e9nice was gone, too. They had cuddled all night after she nursed Am\u00e9lie.\n\nHe rose from his bed, went to the bathroom, and pulled on some cargo shorts from his dresser drawer. He yanked a Royals t-shirt, size 2XL, from another drawer and pulled it over his head and arms.\n\nAs he left his bedroom...\n\n\"Uncle Jack!\" John yelped, from the living room, and ran to his uncle.\n\n\"Uncle Jack!\" cried Patrice, right behind her brother.\n\nHe knelt and took both brother and sister into his arms. He hugged and kissed each of them. \"I have missed you, two. Where's Am\u00e9lie?\"\n\nPatrice pulled herself from his arms and grabbed his hand. \"This way.\" Jack followed his tiny two year old niece to the living room to find Am\u00e9lie on the blanket-covered floor. Patrice and been entertaining her. Jack leaned over and picked up his beautiful niece and hugged her. \"I love you, Am\u00e9lie,\" he whispered. He walked over to his recliner and sat to admire the beautiful girl in his cradled arms. \"Tu m'as manqu\u00e9,\" he said. Patrice crawled into his lap, too, to pet her little sister and to hug her uncle.\n\n\"Are you hungry?\" came a voice from the kitchen.\n\n\"Yes! But I want to hold these beautiful little girls,\" he replied.\n\nB\u00e9r\u00e9nice rounded the corner of the kitchen to go into the living room. Jack's jaw dropped.\n\nShe was wearing off-white form fitting leggings, showing off her slender, but athletic form, and a Royals t-shirt from Jack's drawer. The t-shirt had been cut with scissors to just below her breasts, showing off her athletic tummy. The sleeves of the shirt had also been cut an inch or two below the shoulder. The oversized shirt flowed as she strode into the room.\n\n\"Close your mouth, Jack. It's rude,\" she chuckled, as she knelt to the side of his chair.\n\nJack reached behind Patrice and caressed her mother's cheek. \"You're beautiful... And stunning... thus, my gapping mouth,\" he mused.\n\n\"You're handsome yourself,\" she replied, as she kissed him softly on the lips. \"But, you need to comb your hair. It looks like monkeys played in it last night.\" With that, she kissed his lips, kissed her two daughters and ordered John to help her in the kitchen. Patrice jumped from Jack's lap begging to help, too.\n\n\"I grilled a ribeye steak for you last night, so you could have it for lunch today. I'll warm it up. OK?\" she said as she entered the kitchen.\n\n\"That's great. It's better than leftover pizza I usually have for lunch,\" he mused. He then turned his attention to the pretty 3 month old little girl in his arms. Her brown eyes were wide and she was cooing in his arms. Her tiny hands and arms were randomly reaching for his face. He offered her a finger to grasp and tug. They played hand tag while lunch was prepared.\n\nJack caught a whiff. He shook his head, rose from his chair with Am\u00e9lie and took her to the nursery for a new diaper. Just when he finished cleaning her bottom and changing her diaper, Patrice walked in.\n\n\"I poo poo, Uncle Jack,\" she reported, with a shy tone.\n\nJack suddenly realized, he had an instant and unexpected family living in his home. He smiled joyfully as he changed her diaper, too.\n\nJack returned to the kitchen with two little girls in his arms. \"They're fresh and clean,\" he reported. He set Patrice in a high chair and asked John how his diaper was holding up as he set Am\u00e9lie in a carry seat. He placed Am\u00e9lie on the table so he could see her.\n\n\"I have pull ups,\" John reported. \"I can change them myself.\"\n\nJack looked to B\u00e9r\u00e9nice for confirmation and she smiled with an arched eyebrow. \"We'll see,\" she said. Jack then went to his room and combed his hair.\n\nWhen he returned, B\u00e9r\u00e9nice set plates in front of her children... cut up hot dogs and mac and cheese. She then placed a ribeye steak, loaded mashed potatoes and green beans in front of Jack.\n\nJack shook his head. He realized, again, he had never been served lunch in his home... Or dinner, either.\n\nB\u00e9r\u00e9nice saw him shake his head. \"Is there something wrong?\" she asked.\n\nJack looked up to her with crinkled eyebrows and replied, \"In the last 10 minutes, I held and kissed three pretty girls in my home. I have changed two diapers and been served lunch by the woman I've been in love with since I was 15. This is a first. This is the first time anyone had given me something to eat in my home. I never dreamt I would have a family in my home when I moved to Kansas City. It's unexpected. An unexpected family.\" His voice quivered with joy. \"My God, B\u00e9r\u00e9nice. I have missed y'all so much.\"\n\nB\u00e9r\u00e9nice knelt at the side of his chair and took him into her arms.\n\n\"Nous, t'aimons, Jacques.\"\n\nChapter 58\n\nJack had just placed Patrice in her bed for a nap. When he didn't find B\u00e9r\u00e9nice anywhere in the house, he went to the basement and found her on a treadmill.\n\n\"Jack... This is nice. All of this equipment,\" she offered, a little out of breath from her running on the mill.\n\n\"Yeah, I use it on my day's off and during the off season. He walked over to a bench and began curling and butterflying dumbbells.\n\nWhile they were working out, Jack told her of the Royals chances of winning the division. They were ahead of the Twins by 13 games, with a month and a half left in the season. Jack's basement was long in length. He had set up a tire from a rope in the ceiling and a net and foam backstop. He took a bucket of baseballs and began throwing them through the hole in the tire. He didn't miss the hole once. He had a weighted bat and exercised through 100 swings.\n\nThe two had been working out for about 30 minutes when B\u00e9r\u00e9nice came over to Jack while he was doing inverse inclined sit ups with a 40 pound weight in his arms.\n\n\"I'm going to take a shower. Come with me?\" She smiled a sly smile, as she ripped the t-shirt over her head revealing a blue sports bra. She ripped that off too on her way out of the basement, intentionally hiding her breasts from him.\n\nJack didn't answer... He just followed her.\n\nWhen Jack reached his bathroom, he caught the last glimpse of two sexy and athletic butt cheeks stepping into the huge heavy plate glass walk-in shower. He took off his clothes and found a goddess soaking herself under the shower with her back to him. Her long black hair was clinging to her skin as the water cascaded from her head and shoulders. She turned her head to him, winked, and tilted her head for him to join her.\n\nAs Jack stepped into the large shower, B\u00e9r\u00e9nice turned to him and held him close, pressing her breasts into his chest and her pubic bone against his stiff rod. Jack wrapped his arms around her and pressed her closer to him.\n\nB\u00e9r\u00e9nice looked into his eyes and kissed him. She pulled away slightly, looking for his approval. Jack approved and pressed his lips to hers. For a minute or two they dueled softly and gently with their lips and tongues. B\u00e9r\u00e9nice slid a hand between them and touched his fully involved cock. She grinned and winked at him again.\n\n\"Wash my back?\" she asked, as she turned away from him.\n\nThey took turns bathing each other... touching each other up along the way. B\u00e9r\u00e9nice raked her fingers and nails across his soapy and chiseled chest. He's so ripped, she thought. When they finished, they dried each other, and B\u00e9r\u00e9nice started a blow dryer to dry her hair.\n\n\"Comb your hair and brush your teeth,\" she offered. \"When I'm finished, we'll have some playtime.\" She grinned and wiggled an eyebrow. Jack arched both eyebrows in faux surprise and chuckled.\n\nWhen B\u00e9r\u00e9nice finished drying her hair, she pulled it into a messy bun. She took Jack's hand and lead him to the bedroom, gesturing to him to meet her in bed. She went to the dresser and turned the baby monitors on. \"If they wake up, playtime is over. OK?\" Jack nodded his approval.",
        "When she returned to bed, she encouraged Jack to sit on the side of the bed. She knelt on the floor and took his cock in her hand with a sly look in her face. She took note of his much more than average thickness and longer than average length.\n\nShe kissed and licked him, eliciting a long sigh from his lips. She smiled at her success. She licked the tip to taste him, and she approved. She raked her tongue from the tip to the base and back again, with Jack groaning the entire time. When she was satisfied he was full engorged, she stood, reached in the night stand and pulled out a box of condoms.\n\n\"We're going to talk about these later,\" she smirked, while wiggling the box at him. She took one from the box, removed the wrapper, and rolled it on his cock. She pushed him onto the bed, crawled on top of him and lowered her loins slowly, while guiding him to her entrance. She closed her eyes to enjoy the fullness Jack was providing. He did have a very thick cock and it stimulated unused nerves inside her. When she took him fully, she paused to enjoy the sensations. His thickness was providing new sensations for her.\n\nB\u00e9r\u00e9nice leaned over and placed her hands on his well chiseled and hairy chest and began slowly raising and lowering her hips on him. Her face just inches from Jack's.\n\n\"Mmmm,\" she sighed. \"Very intense, Jack.\"\n\nJack placed his hands on the sides of her legs and held them there while she worked her magic on him.\n\nShe tried to look into his eyes while making love to him, but, the sensations were too intense. She closed her eyes and dipped her chin, while moving up and down on him to focus on the new, and exciting, sensations she was having. As the excitement increased, she pressed harder on his chest and changed her movements on him. Fully impaled, she began sliding forward and backward across his hips. Her sensitive button was raking across his pubis... his fat cock twirling insider her tunnel... tapping her cervix.\n\n\"Mmm,\" she moaned loudly. \"So good.\"\n\nChapter 59\n\nJack was in awe of the goddess who was now sitting across his loins. She dug her fingernails into his chest; a painful, yet, pleasant sensation. He begged in his thoughts that she would open her beautiful eyes, but, they remained tightly closed.\n\nAs her pace increased again, she began panting and whispering his name in gasps. Each time he heard his name, he fell deeper into her seduction. He began to match her rhythmic sliding motion on him with his own, knowing this would increase her pleasure.\n\nJust as he increased his pace on her, B\u00e9r\u00e9nice moaned, \"Oh, God, Jack!\"\n\nShe dug her fingernails into his chest, causing him to groan in excited pain. Her hips began crushing his hips in an attempt to feel him inside her. She was having an orgasmic seizure with her hips upon him. Her eyelids were squeezed tight and the expression on her face was intense. She was pressing down hard on his chest with her hands. She was quivering her hips, shoulders, and upper arms. Her breasts quivered. Erotic, he thought. And then, she appeared to regain control of herself. Jack could feel her pelvic muscles crushing his maleness.\n\nShe opened her eyes in an attempt to find his face. When Jack saw her eyes open, he began pumping her entrance slowly. When she appeared to go into another orgasmic seizure, Jack rolled her to the side, then onto her back, while maintaining their lovers contact. He lifted himself on his hands and knees and began pumping at her at a moderate pace. A minute or two later...\n\n\"Jack! Don't stop! Please, don't stop!\" she hissed. Her eyes rolled back into her head.\n\nJack increased his pace upon her slightly and it had the desired effect...\n\n\"Jack! I'm cumming... Yes... I'm ... Grnnn...\" she slurred, with shortness of breath. \"OH, GOD, JACK! DON'T STOP! OH, GOD! OH, GOD! OH, GOD!... Oooooooooo!\"\n\nB\u00e9r\u00e9nice began having an orgasmic seizure underneath Jack. She was quivering in a paralyzed state. Eyelids were clinched in a crushing tightness. Her hands pawed at Jack's arms and chest in an attempt to maintain contact with her lover. Jack could feel her pelvic muscles upon him pulsing in time with her quivering. Her breasts rolled around on top of her chest as he maintained his rhythm within her.\n\nWhen he sensed B\u00e9r\u00e9nice was coming down from her orgasm, he increased the pace once more. Within a minute, it sent her into another paralyzing orgasm with screams so loud, Jack briefly thought the children would wake.\n\nJack quickly paused and repositioned his contact with B\u00e9r\u00e9nice. He grasped her legs and placed her knees near her head... holding them there by placing his hands behind her knees... folding her in half. This lifted her hips toward his hips. He was hovering just inches above her face. Breathing hot breath on her neck and face.\n\nHe began thrusting into her with a pace he felt he could maintain for several minutes. Her breasts rolling around on her chest in tune with his thrusts, hypnotizing him. Erotic, he thought.\n\nB\u00e9r\u00e9nice never had an experience like this before. In less than 30 minutes, she had received 6 orgasms and was rapidly approaching number 7 with Jack's thick member pumping her gooey loins with the intent of never stopping. She held onto his arms in an attempt to steady herself when number 7 slammed into her like a crushing boulder. She threw her head back. Her toes curled. Her back stiffened. She saw multitudes of color in her closed eyes. She slurred his name. As she came down from number 7, she realized she had never, ever, cried out to a man like she had these past few minutes. She reached for a pillow and placed it over her face right when number 8 slammed her. She screamed into the pillow as loud as she could. Then, she found her lungs begging for oxygen. She removed the pillow to find Jack looking intensely into her eyes just a few inches above her face. \"I love you,\" he mouthed silently.\n\nWith the vision of his face, she went into another orgasmic seizure, rolling her eyes back into her head and whimpering in her thoughts. She felt herself loosing absolute control and submitting to Jack's will. She couldn't say anything. No words would come to her lips. Colors began overwhelming her eyes and brain. Her arms and legs became immobile. She found herself clinching the sheets.\n\nSuddenly, oxygen reached her lungs and she slowly began regaining her worldly senses. She looked to Jack once again to find him gazing intensely into her face and eyes; still driving himself madly into her wanton entrance. Huffing hot breath into her neck, face and upper chest. B\u00e9r\u00e9nice's eyes went wide open upon the sensation of another orgasm approaching like a speeding train. She realized she couldn't take it anymore... there just wasn't enough oxygen on the planet for her needs. Just as the orgasm consumed her mind and body, she cried, in an ascending voice...\n\n\"JACK! ENOUGH! NO MORE! PLEASE! NO MORE! OH, GOD! OH, GOD! OH, GOD! ... YEEP!\"\n\nChapter 60\n\nJack swung his legs over the edge of his super king size bed, having just complied with B\u00e9r\u00e9nice's plea to stop. He rose to his feet and stretched his neck, shoulders, back, hips, and legs... growling softly with each stretch.\n\nHe looked down between his legs to find his condom covered dick wagging up and down in rhythm with his still strong, and pounding, heartbeat. He didn't achieve his release, but thought, had he been given another 5 minutes or so, he would have cum. Out of habit, he pulled the condom from his dick and tied it off, despite nothing was inside. He tossed the condom onto the night stand, thinking he would trash it later.\n\nHe turned back to his bed to find a loving goddess lying in his bed... the most heavenly body he had ever seen, still writhing with subtle orgasmic aftershocks. B\u00e9r\u00e9nice was curled into a fetal position, with her back to Jack, mewing and purring in her satisfaction.\n\nMy God, she's beautiful, he thought. He looked at the clock and estimated he had been all over B\u00e9r\u00e9nice for about 45 minutes. Suddenly, without requesting it, Diane Fitzpatrick entered his thoughts. She had taught him the techniques to make love to a woman, with endurance, and the woman's satisfaction in mind... and, he had just given one of his best to his new lover. He had done the same with Diane dozens of times. He shook his head to rid her from his mind, but, was grateful to have met her and learned his new skills with a woman.\n\nAfter gazing upon his new lover for a minute or two, he heard a call from outside his bedroom.\n\n\"Mommy?\" John called, in a sleepy voice.\n\nJack raced to pull on cargo shorts and a t-shirt. He hustled to the closed door of his bedroom and opened it to find John about to open the door.\n\n\"Hey, John. Mommy is still sleeping, OK?\" Jack offered. \"Let's go get a drink of water in the kitchen.\" He quietly closed the door to his bedroom and led John to the kitchen. Having given him a glass of water, he first checked on Am\u00e9lie, who was still sleeping... then Patrice, who was stirring to wake up.\n\nHe raced to his bedroom to retrieve the baby monitors, so they wouldn't disturb B\u00e9r\u00e9nice... who, he found softly snoring. He smiled at her cuteness. He quickly pulled a sheet and blanket over her and left with the baby monitors.\n\nHe checked on Am\u00e9lie again and she was beginning to stir from her sleep and, it smelled a little in her room... diaper change soon. He quickly went to John and Patrice's room and Patrice was out of bed heading for the kitchen. He picked her up and, yep, she needed a new diaper... soaking wet. He changed her diaper and wrapped the old diaper up. He found John and checked his pull ups. They needed changing. He ushered him to his room and supervised him changing his pull ups. Then he went to the nursery, with John and Patrice following him. He found Am\u00e9lie fully awake and cooing in her crib... apparently fascinated with the zoo animals on her mobile. She was stinky, too. He changed her diaper, wrapped it up, and took all the diapers and pull ups to the garage for the garbage can.\n\nWhen he returned from the garage and closed the door, there were four little eyes looking up to his 6 feet 3 inches frame. He smiled at his good fortune to be with his brother's children. He had missed them so much.\n\nChapter 61\n\nB\u00e9r\u00e9nice woke to find Jack was missing. It took her a moment or two to clear her mind from the endorphin overload. She reached between her legs to find she was still gooey and slick. She shrugged her shoulders.\n\nShe rolled out of bed and went to the bathroom. She brushed her hair and put on a pair of denim short shorts and a tight and feminine white tank top with a padded bra inside. She opened the door to the bedroom and checked each room to find Jack and the children were gone. She checked the garage and found her minivan and Jack's Honda Pilot were still there. She opened the door to the basement and heard children and Jack singing. That is so, cute, she thought.\n\nUpon entering the basement, she found Jack playing his Epiphone acoustic guitar while sitting in a chair, and two tiny children sitting on the floor at his feet. They were singing Twinkle Twinkle Little Star. Am\u00e9lie was in her carry seat at Jack's feet, squealing and cooing to the song.\n\nShe remembered Jack purchased the guitar when he was twelve years old and took lessons from Mrs. Bergeron, the choir and band director at Reims High School. She also remembered Jack brought the guitar with him on campouts with her parents. They sang folk songs, with Robert and her parents, while Jack played the guitar. He would break out the guitar at his own home and she and his brother would sing to some of the popular songs at the time. He could play Christmas carols, too. He still had the same guitar. It brought back good and happy memories.\n\nJack looked up from the children and smiled when he saw her. Her heart leaped at the sight of her new lover interacting with her children like their father. She approached and sat next to her children as Jack lead them in the singing of Fr\u00e9re Jacques. She was happy to see Jack and her children having fun and she sang along.\n\nWhen they finished the song, Jack checked his watch... Supper time. He rose from his chair and placed his guitar on the wall rack in the corner. B\u00e9r\u00e9nice embraced him, placing her head on his chest. Jack returned her embrace. \"I love you, B\u00e9r\u00e9nice,\" he whispered.\n\nShe looked into his eyes with watery eyes of her own. She mouthed the words, \"I love you, Jack.\"\n\nHe smiled to her as Patrice began tugging on his shorts for him to hold her, too. He picked up Patrice and gave her a kiss on the cheek and hugged her.\n\n\"Let's go eat,\" he announced. \"Pizza?\"\n\n\"Yeah!\" screamed John.\n\n\"Yeah!\" screamed Patrice.\n\nChapter 62\n\nWhen B\u00e9r\u00e9nice left Am\u00e9lie's nursery, she found Jack on the living room couch with a laptop computer in his lap. His feet were resting on the ugliest coffee table she had ever seen. The children had all been bathed and were asleep in their rooms. She smirked to herself when she sat next to him while looking at the coffee table.\n\n\"Scouting report,\" he offered, before she asked. \"I still have to work on my day off.\"\n\nShe took his arm into a tight hug, laid her head on his shoulder, and pawed his chiseled chest.\n\nHe closed the computer and said, \"I may have two days off before the end of September. The pressure is on to maintain the big lead we have over the Twins.\"\n\n\"I understand,\" she replied.\n\n\"Ocher thinks we have what it takes to be in the World Series. We have the most wins in the league.\"\n\nShe looked up to him and asked softly, \"Is this going somewhere, Jack?\"\n\nJack paused and looked at his feet. \"I really don't know how to say this and it not sound awkward or too direct. My life between April and September is crazy. I will be coming home very late at night when we play here... night games. And, I will be gone 7 to 14 days when we're on the road.\"\n\nB\u00e9r\u00e9nice nodded her acknowledgement when he paused.\n\n\"With you here with me, your life will be crazy, too. You won't see me very much because I leave at 2 pm when we are playing here at night. I sleep late on those days. I eat crazy meals at crazy times. You will be alone with the children. The only time we can have a normal life will be between October and February. Not counting the playoffs. Spring training starts in mid-February thru late March. Then the season starts in April.\"\n\nShe nodded.\n\n\"You will be buying into this crazy life of mine if you choose to stay with me. But, I promise you right now. When I do have a day with you and the children, I will hold it in my hands like it is a precious gift. I will cherish every moment because I want to be with you and your children... Robert's children.\"\n\n\"OK,\" she offered.\n\n\"I consider this a trial living arrangement for you. To see if you truly want me and can share my life with baseball. It would hurt my feelings, of course, if you decided you couldn't be with me and my career. But, I wouldn't dare stop you if you decide to go back to Reims.\" He paused to gather his thoughts.\n\n\"B\u00e9r\u00e9nice, I love baseball. I am addicted to the thrill of throwing someone out. Hitting a ball down the first base line. Stealing a base out from under a pitcher and catcher. The teamwork of turning a double play. Charging a batter who has squared up for a bunt, and tagging his ass out when he passes me. Playing with and against the most elite players on earth. It's my life. It's like oxygen. I need it to live a full and fruitful life. And, I need you to understand this and to love me for it. To love my life with the game.\"\n\nB\u00e9r\u00e9nice began to weep softly on his shoulder. \"You are a generous man, Jack. Just like your Robert and your parents. I feel so loved when I'm with you...and, I have been since we were children. I wouldn't want to be with anyone else. I want to be a part of your life. And, your baseball life. If you'll have me.\"\n\n\"Oh, God, B\u00e9r\u00e9nice. I'm so happy now that you are with me. I love you and your children. You must tell me right away if I can make your life with me better.\"\n\nShe nodded her \"OK.\"\n\nHe gave her a kiss on the top of her head.\n\n\"I have good news. For us,\" he offered. Jack opened his laptop and opened an email for B\u00e9r\u00e9nice to read. \"It's my agent.\"\n\nJack,\n\nGreat News! Under Armour wants to sign you to a shoe and clothing contract. They were impressed with your phenomenal performance in the All Star game and the attention you are receiving with the Royals. If you sign with them, you'll be obligated to wear UA apparel in public and on the field, according to MLB guidelines and rules.\n\nThe triple play is the most watched video in history at the MLB.com website. Thus...\n\nI have received inquiries for you to represent several business in the Kansas City area... car dealerships, pizza, bail bond services (Ha Ha, but seriously. I have an offer from one in Olathe, Kansas. We'll pass on the bail bond offer.) There are several other offers that may be interesting for you.\n\nTo get these agreements in place, your time off will suddenly become valuable to you. Photo shoots and video ads. We are looking at potential agreements close to $2 million. That's more than three times your salary. Your time after the season will also become valuable for the same reasons.\n\nYou are looking at private jet service, in between the photo and video shoots, so you can return and play games.\n\nThese endorsements may carry over very well when your contract expires at the end of the season. The Royals love you.\n\nCall me at your earliest convenience to discuss the terms and schedule.\n\nCongratulations!\n\nJason Markusson\n\nB\u00e9r\u00e9nice arched her eyebrows.\n\n\"I want you to come with me on these. It will be more money for us and we can be together.\" He smiled and winked at B\u00e9r\u00e9nice. \"Julie Campbell called me and chewed my ass out. She demanded I give you a budget to get this house in order for you.\" He nodded to her with raised eyebrows.\n\n\"B\u00e9r\u00e9nice, you and I were raised to live modestly, because you never know what will happen in the future. I still want that simple life for us. I want to give you money to fix the house up the way you want, but, I want to wait until the season is over and my contract expires.\"\n\n\"I want it, too, Jack. I just want to be with you and our children.\" With that, her eyes widened, not thinking about what she had just said.\n\n\"It's OK. I know you didn't mean it. But, I do, someday, want to call your children, my children. Our children.\"\n\nJack looked at his watch... 10:39 pm.\n\n\"I need to get ready for bed. I need to finish this scouting report tomorrow morning before lunch. Come with me?\"\n\n\"Absolutely.\"\n\nChapter 63\n\nJack and B\u00e9r\u00e9nice showered together, but, didn't tease each other up. They both knew Jack needed sleep for work tomorrow night.\n\nJack was finishing some scouting report work in bed when B\u00e9r\u00e9nice entered the bedroom from the bathroom. She was nude. She strolled across the bedroom, taking no notice of Jack's eyes as she went to the dresser, opened a drawer and fished out a white tank top shirt and light weight baby blue cotton pajama shorts. One could see her breasts and nipples through the tank top and her breasts wiggled inside the shirt when she approached the bed.\n\n\"Like what you see?\" she giggled, as she stood next to him. He just smiled. She reached into the night stand drawer and withdrew the condoms box. She wiggled the box at him.\n\n\"Wanna talk?\"\n\nJack arched an eyebrow and nodded gently.\n\nShe returned the box to the drawer, rounded the bed and crawled in next to Jack's left side... hugging him close.\n\n\"OK... I'll start,\" she chirped. \"I don't necessarily want to know names or faces, but, after my experience with you this afternoon, you certainly have been practicing.\" She giggled and raked her fingers across his athletic chest. \"I'm inclined to think a specific woman taught you how to make love to me the way you did. I'm having a hard time justifying in my mind, that any man can do what you did to me and it comes to him naturally... without training or practice.\" She paused to gauge his reaction. He raised an eyebrow and smirked his lips. \"Jack, I swear. I've never cum so hard and so many times as I did this afternoon. Never... I expected to seduce you today and hoped for an orgasm. You were one monumental surprise.\" She paused, snuggled closer, and got serious. \"It's taking shear will on my part not to maul you right now.\"",
        "Jack nodded and waited to see if B\u00e9r\u00e9nice had anything additional to say.\n\n\"I remember, as children, we made a promise to be honest with each other and to never keep secrets from one another. I feel this way right now.\" He paused, looked up to the ceiling, then turned to face B\u00e9r\u00e9nice with his head in his elbowed hand.\n\n\"I've had many partners since I went to college. None of whom I can say were my girlfriend. The sex... for me, was disappointing because I didn't know anything about it and I'm certain my partners felt my inexperience and never really followed up with me.\"\n\nHe paused to gauge B\u00e9r\u00e9nice's reaction for the next words he was about to give her.\n\n\"You're right about a woman. The one who helped me.\" B\u00e9r\u00e9nice arched an eyebrow, surprised she guessed correctly.\n\n\"Her name is Diane and I met her shortly after I arrived in Kansas City. Last November. We met at a fundraiser and became friends quickly. She is very personable and irresistible in conversation, and at first, I thought that was where I relationship was going to go. After two weeks of pleasant and enjoyable conversations, we found ourselves in each other's bed. It didn't take her long to find out I was a terrible lover.\" B\u00e9r\u00e9nice nodded to him to continue.\n\n\"Turns out she's a very experienced lover and she guided me in the art of love to the point we were soon bedmates, weekly, twice weekly, sometimes, more often.\" Jack paused to gather his thoughts. \"Two months after we met, I found out I was not her only lover. It is her lifestyle to have several lovers. I told her I couldn't live that type of lifestyle and I told her I couldn't be with her any longer. She was disappointed and I was, too, because she's beautiful, educated, and brilliant. After a brief break, we continued to see each other over lunch or dinner, but, she is the master seductress. We have been occasional lovers since the first of the year. The last time being in July and I told her, over one of our lunch dates, I was breaking if off. That I wanted my life to go in a different direction. We haven't spoken since.\"\n\nThere was a long pause as Jack and B\u00e9r\u00e9nice considered the words that were spoken.\n\n\"So, I have Diane to thank for the pleasure I received this afternoon?\" she said.\n\nJack chuckled. \"I suppose. But, if you do meet and thank her, as you say, you may find yourself in her bed, too.\" With that, Jack wiggled his eyebrow.\n\nB\u00e9r\u00e9nice began to laugh. \"Are you serious? She's likes boys and girls?\"\n\n\"Yep... And... She is a very experienced and effective seductress. Be careful,\" he smirked.\n\nJack paused to get serious with his next words. \"It's inevitable for the two of you to meet. She is well-known among the players, wives, and girlfriends. And, it is no secret we were lovers. It is bound to happen that one of the wives, girlfriends, or even players will bring her up in conversation, wondering if you and I have discussed her.\" Jack paused to think about an idea he just had. \"Without needing an answer right now, I'm wondering if I... um, we shouldn't preempt the evitable meeting with Diane. That we're in control of the circumstances of the meeting instead of somewhere unexpected in the wild.\"\n\nB\u00e9r\u00e9nice nodded. \"Let me think about it.\"\n\nJack looked past B\u00e9r\u00e9nice for a moment to gather his thoughts, then returned to her black and exotic eyes. \"I have to tell you this, B\u00e9r\u00e9nice. I need to be totally honest and candid with you. I admire Diane for the person she is. Everything except her many lovers. If not for that, I would consider her a potential ... well... wife. I could find myself in love with her. I'm grateful I found out early in our relationship.\"\n\nB\u00e9r\u00e9nice giggled and replied, \"Good for me... in many ways. I feel like I got a bonus moving in with you. You were an unexpected and very welcome surprise today. You may find yourself hauled off to the bedroom when you come home from games.\"\n\nShe rolled over on top of him, and ground her pubic bone into his cock... raking her needy clit along his length. She kissed him with passion, grasping his face with her hands. Their tongues snaked around each other. She broke their kiss.\n\n\"I found your condom on the night stand. You didn't cum today, did you?\" Without waiting for an answer, she slithered down his torso and abdomen with licks and kissing until she reached his boxer shorts. She fished his cock through the front door of the boxer shorts and sucked a quick suck on the top. Jack growled.\n\n\"I'm going to fix that for you and then we'll go to sleep,\" she hissed.\n\nChapter 64\n\nB\u00e9r\u00e9nice had just put her three babies to bed for their afternoon nap. Just moments earlier, she had kissed Jack goodbye before he left for the game against the Blue Jays that evening. Her phone rang in the living room. It was her father.\n\n\"Hello, Princess. I know I called you before Jack arrived from Chicago to check on you, but, now he's back. Is everything going as well as you expected?\"\n\n\"It couldn't be any better, Daddy,\" she replied. \"The children love him. I found him after my nap yesterday, in the basement... singing songs with the children. He was playing the guitar he had when we were children. John, Patrice, and even Am\u00e9lie were singing with him. It was so cute.\"\n\n\"Sounds to me he hasn't changed since he left Reims for college. He's John Caron's son. I'm not surprised.\"\n\n\"Jack received some good news yesterday. He received some offers for endorsements. One of them is Under Armour, the shoe and clothing company. He told me he has never had endorsement offers before. He's excited and it will be some extra money for him.\"\n\n\"I'm not surprised. Jack is having a good year with the Royals. I don't know if you know this or not, but, Jack really isn't playing much better this year than he was last year. I looked into it. Jack was playing for a crappy team in Miami and he wasn't receiving the attention he is getting now. Miami has finished in last place all four years he was there. His batting average and walks are about the same as in Miami. His run production and steals are higher in Kansas City because his teammates are helping him and the team. Jack has always been an elite player, B\u00e9r\u00e9nice. He's now receiving credit for his abilities.\"\n\n\"My friend Morgan Lancaster told me the Royals general manager felt he got Jack at the right time. Maybe he saw what you saw in Jack.\"\n\n\"Maybe. B\u00e9r\u00e9nice, I'm calling about your house and Robert. The life insurance company sent a letter telling you they have deposited $1 million in your bank account. I'm so grateful you and Robert bought that policy after you got married. Also, the insurance company resettled with you on the loss of the house and barn. John Caron and I showed them photos of the improvements you and Robert made to the house. I'm also grateful John and I took and kept those photos, otherwise, you wouldn't have received the money you did.\"\n\nHer father paused to let her digest his report. \"With the house and barn settlement and the life insurance payment, you can pay off the mortgage on the property and still have a little over $800,000 left over. A sizeable sum for the children and college, if that is what you want. Plus, you still have the 160 acres with no debt. Of course, the fire burned all of those beautiful trees and the grass is gone. It needs to be taken care of or weeds will take over the property. John and I have a suggestion. Let's replant the property in pasture grass and put in a few replacement oak trees. When the grass matures next year, you can lease the land out for pasture. Or, you can sell the property, but, the price will be low because of the fire damage. The new owner will absorb the new expenses. It's up to you, Sweetie.\"\n\n\"Daddy, I want to sell the property. It's too much burden on you and Mr. Caron to manage and I'm too far away to do it myself. I want to take the money from the sale and add it to a trust for the children's college fund, like Mr. Bergeron suggested.\"\n\n\"OK... Do you want to think about it or do you want me to hire a real estate agent?\"\n\n\"Let's sell it, Daddy. My heart is telling me to sell. I think Robert is with me right now.\"\n\n\"OK... I love you, B\u00e9r\u00e9nice. I miss you and the children. Come see us soon, OK?\"\n\nChapter 65\n\nJack was washing his hands in the bathroom, reflecting on the evening. He had come home from the last home game of the season against the Angels. Early tomorrow morning, he would be leaving for Chicago and then for Atlanta to end the season. He smiled at himself in the mirror for two reasons.\n\nOne... The Royals had the best record in the American League and would have home field advantage in the playoffs... the number one seed. Unfortunately, he wouldn't be back in Kansas City for the time off during the first round... UA endorsement commitments in Maryland and Texas. He would only have a day or two with B\u00e9r\u00e9nice and the children before the playoffs began in Kansas City.\n\nTwo... The sex he and B\u00e9r\u00e9nice had just a few moments ago was the best they enjoyed together. She was insatiable... a wildcat this evening, and he was like a well-oiled machine. Unstoppable. And, she loved it.\n\nThey had been at each other since the moment he stepped into the house from the late night game. She dragged his ass into the bedroom, ripped his clothes off, and they were all over each other for the next 3 hours. He had never been so passionate with a woman as he was tonight. She was the driving force of the passion. They licked, and sucked, and pinched, and squeezed, and pumped, and scratched, and raked, and pawed, and fucked each other. They consumed each other furiously. And... loving each other made it that much better.\n\nJack seriously began considering soundproofing and insulating his bedroom because of her orgasmic screams and his roars of pleasure. He feared they would wake the children and the neighbors.\n\nWhen Jack left the bathroom, he could see through the silhouette light, three tied off condoms on the floor. He picked them up, wrapped them in tissue, and tossed them in the bathroom trash.\n\n\"Come here, you monster,\" she whimpered.\n\n\"Monster?\" he snickered, as he flipped off the bathroom light. \"You're a wildcat. I just looked at my back and chest. I've got some explaining to do in Chicago. You know... it's going to get back to the wives and girlfriends. There are no secrets in a locker room. Plus, when Karen sees the marks, she's gonna drag my ass over to a training table, in front of everyone, treat them with some poison from her bag, and joke with me about them... Forever.\"\n\nB\u00e9r\u00e9nice just chuckled. \"I don't care. I look forward to just smiling when they ask me about you or give me a sly look of appreciation.\"\n\nWhen Jack slipped into bed, B\u00e9r\u00e9nice rolled on top of him, pressing her breasts and pubic bone against him. She began slowly rubbing her sensitive little button against him, moaning an intermittent sigh of appreciation and pleasure.\n\nIn a soft voice, she said, \"Jack, I have never been so well loved as I have been tonight. You make me feel so good... so unselfish. And you... You come strolling out of the bathroom as though you've had a good night's sleep. You don't seem the least bit affected by the intense exercise we've being doing. I don't know if I should be pissed at you.\"\n\nAt that very moment, she groaned loudly, having been hit with an unexpected orgasm from rubbing her sensitive and swollen clit against him. When she recovered she began humping him a little faster and harder, and another orgasm smacked her.\n\nShe reached over to the lamp table, ripped open a condom, rolled it on him, aligned herself on his cock and began rocking her hips forward and backward across his hips. Steadying herself with her hands on his chest, she began riding him furiously. In less than a minute, she was quaking on top of him... clinching her eyelids and lips... curling and arching her back... her face buried into his shoulder... murmuring words that made no sense. When she opened her eyes, she resumed her rocking across his hips. Moments later...\n\n\"Oh, God... Oh, God... Oh, God,\" she squeaked in an ascending voice. \"Do you feel me cumming on you? Do you feel me squeezing you?\"\n\n\"Beautiful,\" Jack replied. \"Absolutely beautiful.\"\n\n\"Jesus, Jack,\" she slurred as she fell to his chest and neck... still impaled on his rod. He wrapped his arms around her and gave her a gentle squeeze.\n\nOn an impulse, she bit his shoulder until she tasted blood.\n\n\"FUCK!\" he yelped. \"What the...\"\n\nJack flipped her off onto the side and leapt to his feet... staring at her devilish grin that was returned to him while she lay on the bed. He touched his shoulder and found blood on his finger tip.\n\n\"B\u00e9r\u00e9nice,\" he slurred, and drew out her name. \"I didn't know. I don't believe you and I have discussed this kind of behavior. I'm a little surprised.\"\n\nWithout breaking the sly and wicked smile, she shrugged her shoulders. \"I like marking my man. The scratches. Now the bite mark.\"\n\nWith that he snatched her and flipped her onto her tummy like she weighed nothing at all. He leapt on her with his head on her neck and breathed hot breath on her face. He dragged his condom covered cock back and forth though her butt crack, tapping the base of her spine. \"Damn, woman. That was a little shocking,\" he growled softly in her ear. \"Hot... Maybe too hot. Are you sure you know what you're doing? With this biting?\"\n\n\"Maybe I don't,\" she whispered. \"But, I would like to find out what you're going to do about.\" She could feel her sticky goo crawling across her sensitive button on its way to the sheets. She wiggled her ass against his stiffie.\n\n\"OK... If things get out of hand, the safe words are 'First Base.' Say it, so I know you understand.\"\n\n\"First base. Go animal on me, Jack. I want to experience it at least once.\"\n\nAs soon as the last word left her mouth, Jack reached under to her chest and squeezed her left nipple. She moaned a long moan. He moved his hand over to her right one. She moaned ever louder. \"Harder!\" she demanded. \"Yes! Hold that pressure. Yes, yes... Mmm.\"\n\nShe then bumped his pecker with her ass. \"I want you to fuck me until I can't breathe anymore. Hurry!\"\n\n\"Now, now,\" he whispered, hot breath into her face. \"A little demanding, aren't we? You bite me and now you're ordering me around. Nasty language, too. Hot. Very hot. I asked you if you knew what you were doing. I might just... take my time.\"\n\nB\u00e9r\u00e9nice struggled to release herself from his overpowering clutches. She got nowhere. Jack reached under her again and dragged his fingers across her sticky crease, pausing against her sensitive button. He squeezed her button hard.\n\n\"Fuuuuuuuuuuuuck!\" she slurred.\n\nHe released her, leapt to his feet and slithered a new condom down his member. He then crawled back into bed, lifted her ass toward his pecker and lined himself up. She was on her hands and knees.\n\n\"Ready?\"\n\nShe nodded aimlessly.\n\nHe wiggled his intrusion until she stopped against his pubis. Slowly, he began stroking out, then in. Increasing the pace with each cycle. She gasped with each increase.\n\nShe began... Moaning. Groaning. Growling. Hissing. Slurring. Panting. Mumbling. Whimpering. Squeaking.\n\nSoon Jack had her at a medium fast pace and she was slurring his name in appreciation. \"Jack... I love it. I love you. It feels so... Goooooooooooooooooooood,\" she moaned out her last word, and then collapsed to the bed. Jack followed her down and pummeled her slick puss with his knees outside of legs. He grabbed a handful of her hair, twirled it around his left fist twice, pulled and craned her neck back a little.\n\n\"Do you know what you're doing to me right now, B\u00e9r\u00e9nice? You're driving me insane with lust. That little love bite you gave me, sent me over the edge. You need to be careful about biting me for now on. Be warned, woman. Bite me again, and I'll have my way with you.\"\n\n\"I love it,\" she hissed. \"Fuck me harder, Jack! Harder!\"\n\nJack complied.\n\nShe clinched the sheets to the sides of her. \"Jack! ... Jack! ... I can't stop... cummmmmmmming...\"\n\nShe was struggling to breathe. Her lungs screamed for oxygen replenishment. Her eyes rolled back into her head. Colors... Everywhere colors. She couldn't move her arms. They were frozen, clinching the sheets.\n\nThen... it went dark.\n\n*****\n\nJack returned to bed after taking a quick shower and cuddled his lover into his arms. She moaned satisfaction as he spooned her from behind and held her close to his chest.\n\n\"Jack?\"\n\n\"Umm.\"\n\n\"How many children do you want? Because, I'm marrying you tomorrow,\" she softly giggled.\n\nJack chuckled. \"We'll discuss children in the morning. I need sleep and you do, too.\"\n\nShe turned around to face him, and began caressing his cheek. \"I love you. More than I could ever imagine. Thank you. Thank you for letting me be with you.\"\n\nJack closed his eyes and drew her into his arms. \"I love you, B\u00e9r\u00e9nice. More than you will ever know.\"\n\nChapter 66\n\n\"Good morning, Diane.\"\n\n\"Good morning, Brenda. It is a good morning,\" Diane Fitzpatrick said, as she entered her law office. She sat across from Brenda, her assistant, as she normally does every morning, to briefly visit before she entered her office and began work.\n\nDiane looked beautiful and professional, as she always does, despite her previous evening. After work yesterday, she had met with two colleagues who worked in Kansas City with another law firm. The Tomlin twins... Identical brothers. After drinks and a light dinner, they ended their evening at her home and participated in their favorite carnal activities. The Tomlin twins were fun and recently, had become frequent guests. The twins had to take turns to keep her happy and well fucked. Still, the two together couldn't match Jack Caron, she thought.\n\nAfter Brenda reported she and her husband went to a play last night, she said, \"You have a new client in your office. He's already paid for one hour.\" She wiggled the five one hundred dollar bills at her.\n\nDiane's eyebrows furled in confusion. Before Diane could speak, Brenda said, \"I know you don't like clients in your office, but, when you see who it is, you'll thank me.\" Brenda wiggled her eyebrow.\n\n\"OK,\" Diane said, with hesitation, as she rose from her seat to head to her office.\n\nWhen Diane entered her office, she paused at the entryway. Jesus, she thought. I was just thinking of him.\n\n\"Good morning, Diane,\" Jack said, as he rose from his seat. He approached her to give her a soft hug and kiss on the cheek.\n\n\"Thank you. Good morning to you, too, Jack,\" she said, as she closed the door to her office. \"This is a pleasant surprise. Brenda tells me you're a client?\" She took a seat next to Jack in front of her desk.\n\n\"Yes, it seems this is the only way I can speak with you. You haven't returned any of my calls or messages.\"\n\nDiane dipped her chin and gathered her thoughts. \"Jack, you made it clear the last time we were together. You want to move on. I don't want to... interfere with the new life you want. I, quite frankly, don't trust myself around you and I respect you too much to interfere. I've heard your sister in law is living with you.\"\n\nJack arched an eyebrow and tilted his head. \"You could have returned my call and told me this. I would've understood.\"\n\n\"You're right. I'm sorry. I just... couldn't bring myself to hear your voice. I'm struggling with you right now.\"\n\nJack nodded his appreciation. Then, a sly smirk crossed his lips and Diane saw it.\n\n\"I have a gift for you.\" He reached inside his coat pocket, pulled out a book of tickets, and handed them to her.\n\n\"Tickets to the playoffs. Oakland or the Yankees. Four tickets behind the Royals dugout. Both here and away.\"\n\n\"Jack,\" she replied, with complete and utter surprise in tone. She just stared at the tickets in her hand. She looked up to his face. He nodded and wiggled an eyebrow. \"How? None of my contacts could find any. And you show up with the best seats.\"",
        "\"I heard you wanted tickets. I tried to get you to call me, by the way,\" he replied, with a matter of fact tone.\n\n\"Thank you,\" she offered softly.\n\n\"You're welcome.\" Jack paused for a moment, looked away, then back to Diane. \"B\u00e9r\u00e9nice knows about you and wants to meet you. If you feel awkward, I do, too. You certainly can decline.\"\n\nDiane's eyes widen. \"I certainly didn't expect this, either. I'm going to need time to think about it. She's not violent, is she?\"\n\nJack began laughing nearly uncontrollability. \"Nope.\" His tone turned to nearly a whisper. \"When I said she knows about you, I mean she knows \"everything\" about you and me. How you helped me become a lover. I think she is curious about you and wants to thank you. I'm not kidding. I also think she wants to be ahead of anyone mentioning you. It's no secret we were lovers. She expects to be asked about you during social events.\"\n\nDiane nodded. \"I'll need time.\"\n\n\"OK, about the tickets, Diane. I give tickets to my friends. That's what friends do. I consider you one of my very best friends. Thus, the tickets. I understand why you haven't returned my calls, but, I'm hopeful, after today, I don't have to show up at your office and pay $500 to have a conversation. Call me back? Please?\"\n\n\"OK... Friends. And, Jack... this meeting is pro bono. You won't have to pay to just talk.\"\n\nJack rose from his chair and knelt in front of Diane. He whispered, \"Call me about B\u00e9r\u00e9nice. Either way, OK?\"\n\nDiane nodded.\n\nJack hugged her and kissed her on the lips. He rose from his knee and straightened his suit coat and tie.\n\n\"I look forward to seeing you with your friends behind the dugout. I'll wave to you... Good bye, Diane.\"\n\nChapter 67\n\nJack was a little nervous. Not much though. It was his first career playoff game after all. Against the Oakland A's... tonight.\n\nPatrice was snuggled against him on the couch, asking questions about the scouting report he was reading on his laptop computer. John was on his other side.\n\n\"Daddy,\" Patrice began. \"What it mean curb ball break hard?\"\n\nJack shook his head... arched an eyebrow... Daddy? he thought.\n\n\"Yeah, Daddy,\" John offered. \"What does it mean?\"\n\nOh, my God, he thought.\n\n\"Yeah, Daddy. What DOES it mean... a curve ball breaks hard?\" B\u00e9r\u00e9nice said, as she was bringing Am\u00e9lie into the living room to sit on the couch with her family. B\u00e9r\u00e9nice began giggling at the expression on Jack's face. \"Tell us.\"\n\nJack regained his composure and said, \"Patrice, it means when the pitcher throws his curve ball, it no longer flies straight, but falls toward the ground very fast. It's a sign that the pitcher is trying to trick the batter into swinging at the ball and missing it.\"\n\n\"Have you been tricked by the curve ball?\" John asked.\n\n\"At times I have, John. There have been times when I guessed correctly a curve ball was going to be thrown and I hit the ball.\"\n\n\"How do you guess it will he thrown?\" he asked again.\n\n\"That is why I have a scouting report on my computer. There are men and women who work for the Kansas City Royals and they watch all of the pitchers. They write down what pitch was thrown to each batter during certain situations. Over time, one can guess which pitch will be thrown by that pitcher.\"\n\n\"Do you guess right every time?\" John persisted.\n\n\"Not every time. But, if I study hard, I can guess a little over half of the time. Sometimes, most of the time. It depends on what pitcher I am batting against.\"\n\nWith that, Jack looked to his left and found Patrice sound to sleep under his arm, and B\u00e9r\u00e9nice noticed.\n\n\"Baseball is not so interesting to some of us... Daddy,\" she mused, her last word, staccato and thrown right at him.\n\nJack turned to B\u00e9r\u00e9nice and mouthed the word, \"Daddy?\"\n\nB\u00e9r\u00e9nice smiled and whispered, \"You do look a lot like their father. They are small children, and I'm not surprised they called you Daddy. Jack... they are so small, they likely won't remember Robert. Only through photographs will they ever know him.\"\n\n\"Should I feel this uncomfortable? Being called, Daddy?\"\n\n\"Go with it, Daddy. I'm hopeful you and I can make it permanent one day. Lighten up and let them call you, Daddy. For me, I'm looking forward to three or more littles ones like them to call you Daddy, too.\"\n\nJack nodded his head and his eyes became slightly watery. \"I would like to talk to you after the season is over. About being your husband. And, being their father.\"\n\nChapter 68\n\nThe Royals swept the A's in three games, scoring a total of 34 runs to the A's 7 runs. Jack shared the series MVP award with pitcher, Martin Edwards. Jack batted .611 for the series and batted in 10 of the 34 runs. He stole 6 bases in three games and scored 9 times. Martin held the A's in the first game to one earned run, 3 hits, no walks, and pitched a complete game. Bill Ocher gave sizable credit to Jack for their success during the season. His success was contagious and the other players became successful and productive, too, Ocher said.\n\nDiane was at all three games and Jack spoke to her before each game through the fence. He waved at her after each inning while he ran from the field and into the dugout. B\u00e9r\u00e9nice noticed him waving after each inning from the suite box she shared with other wives and girlfriends. And, she knew it was Diane. Jack told her he purchased tickets for her.\n\nDuring the press conference in Oakland, Jack shared the MVP stage with B\u00e9r\u00e9nice, her children, his parents, and B\u00e9r\u00e9nice's parents. He introduced B\u00e9r\u00e9nice as his girlfriend and sister in law; explaining she was a widow, having lost his brother this past May. The Under Armour rep was pleased with Jack and promised a performance bonus check, per his contract, at the end of the year.\n\nAs Jack left the press room with B\u00e9r\u00e9nice and their families, he saw a familiar face, and smiled. Although she was only 5 feet 3 inches tall, Jack found Diane immediately. She smiled and gave him a tentative wave. She had come to the area hopeful she could see Jack and thank him. Jack broke from his family and walked the 90 feet to greet her. He leaned over and gave her a warm embrace, which she returned.\n\n\"Congratulations, Jack,\" she offered, as they embraced. \"You were incredible.\"\n\n\"Thank you. Did you enjoy the seats?\" he replied, as he broke the embrace.\n\n\"Absolutely and thank you. You remember Marcy don't you?\"\n\n\"I do. It's good to see you again, Marcy.\"\n\n\"Jack, you played like a monster,\" Marcy replied, with a wink. Jack smirked. He knew she was trying to get under his skin. He winked in return.\n\n\"And this is Martin and Mitchell Tomlin. They are colleagues. Attorneys in Kansas City. They are big fans of yours, Jack.\"\n\nJack greeted each of the brothers and thanked them for coming to the games.\n\n\"Jack, I'm ready. To meet B\u00e9r\u00e9nice. I thought a neutral location would be best,\" Diane whispered. Jack nodded and smiled.\n\nJack turned and gestured for B\u00e9r\u00e9nice and Am\u00e9lie to come to him.\n\nAs B\u00e9r\u00e9nice approached Jack, he gestured to take Am\u00e9lie from her arms.\n\n\"B\u00e9r\u00e9nice, I would like for you to meet Diane Fitzpatrick, a friend of mine. And Diane, this is B\u00e9r\u00e9nice, and her daughter, Am\u00e9lie. You and I have discussed B\u00e9r\u00e9nice.\"\n\nB\u00e9r\u00e9nice's eyebrows went up and then she smiled a huge smile to Diane. She leaned over and embraced Diane, taking Diane by surprise.\n\n\"You are very important to Jack, Diane,\" she said, during their embrace. As they broke their embrace, she continued, \"I asked for an introduction. Thank you for meeting with me.\" B\u00e9r\u00e9nice took both of Diane's hands into hers.\n\n\"It's certainly a pleasure to meet the woman that holds Jack's heart,\" Diane replied. \"Before tonight, I wasn't certain I could meet you. You see, it's hard for me to give up someone like Jack to someone else. But, now, I can see why you are important to him. You are absolutely beautiful.\"\n\n\"Thank you,\" she replied, then paused for effect. \"Jack considers you a good friend. Perhaps we can have lunch someday... To get to know one another. Friends, maybe.\"\n\nDiane nodded gently. \"Perhaps... I'll need some time though, to think about it. OK?\"\n\n\"Of course. I'll have Jack send you my number. Call me when you're ready.\"\n\nDiane nodded. She turned to Jack and touched his arm. \"Congratulations again, Jack. And, thank you for the tickets. Marcy and the boys had fun.\"\n\nJack leaned over with Am\u00e9lie in his arms and whispered, \"I hope this isn't the end, Diane. I have more tickets.\" He stood up and winked.\n\nChapter 69\n\nIt was crazy at Jack's house.\n\nJohn and Patrice moved into the nursery with Am\u00e9lie. They slept on mats. Jack's parents took over the twin beds and B\u00e9r\u00e9nice's parents slept in the queen bed in the other bedroom. Neither set of parents seemed to mind B\u00e9r\u00e9nice was sleeping with Jack. It seemed normal.\n\nOf course, Jack still had to study, work, and practice for the American League Championship Series against the Houston Astros. His hours for the playoffs were crazy, and his family only received glimpses of him at home. All of the adults chipped in to help during their stay at Jack's house.\n\nJack, of course, made arrangements for his family to share a suite with other players' families at the games. And, while in Kansas City, one of Morgan Lancaster's favorite baby sitters stayed with the children during the games.\n\nJack stopped by Diane's law office and gave her tickets to the ALCS. Behind the dugout, of course. This time though, he couldn't get tickets for the games in Houston, and he apologized. Diane shook her head at him and told him she was grateful anyway, and gave him a kiss. She told him to leave quickly before she tore his clothes off.\n\nThe Royals split the first two games in Kansas City. The first game, Houston won, 4-3. The second game, the Royals won 6-2. In the two games, Jack batted .540, drove in 3 runs, and had 3 steals.\n\nWhen the series moved to Houston, Jack made arrangements for his family to stay in the same hotel as the team. He hired Julie Campbell to come with his family and sit with the children during the games. And of course, Jack and other players leased a suite for their families.\n\nIn Houston, the Astros won the first game, 2-1. Jack was 0-4 at the plate, but, assisted in turning 5 double plays in the game. Amazingly, the Royals stomped the Astros in their home park for games 4 and 5. The scores... 10-4 in game 4 and 9-1 in game 5. Jack was unstoppable. Hitting .740 for both games, he drove in 9 of the 19 runs and stole 6 bases. In game 5, with the bases loaded in the 5th, Jack smacked a hard shot to right center, hitting the wall, and clearing the bases for a standup double.\n\nIt was in the 8th inning of game 5 that things got ugly.\n\nUpset they were losing so badly, Roger Clarkson, the Astros reliever, threw a 99 mile per hour fast ball right at Jack with a 1-0 count. Jack turned his back and hoped for the best. It plunked him left of the spine just below the neck. The home plate umpire threw Clarkson out of the game because the pitch was too close to Jack's head. B\u00e9r\u00e9nice turned her back to the game, fearing Jack may have been injured. Jack's mother did, too.\n\nKneeling on one knee, Jack roared, \"You Asshole!\"\n\nHe got off the ground, tossed his bat toward the dugout, and charged for Clarkson as he was walking toward the Astros dugout. Umpires restrained Jack and Clarkson before Jack could land a punch. Players from both benches emptied onto the field in fury. It was 20 minutes before umpires and Houston police officers regained control of the game. Two Astros players and James Wheelock, a utility infielder for the Royals, were thrown out of the game for landing punches.\n\nAs Jack went to first base, with Bill Ocher escorting him, Jack said, \"It was on purpose. No doubt, Bill.\" Ocher nodded his agreement.\n\nB\u00e9r\u00e9nice was relieved Jack didn't appear injured when he took first base.\n\nIn the locker room after the game, while Karen Parsons, the team trainer, was inspecting his back, Jack was asked by the press if he thought he was hit on purpose.\n\n\"Ask Roger!\" he snapped in reply.\n\nAfter the press left the locker room, Karen stepped up to Jack at his locker. \"X-rays. Let's go,\" she barked. As she lead Jack to the medical facilities, she said, \"Would you've hit him?\"\n\n\"Yeah. I would've.\"\n\nKaren nodded. She held the door open for Jack to pass through and the x-ray technician was waiting on them. Karen couldn't resist her next comment to Jack.\n\n\"Jack, that lump on your back is nowhere close to those scratches and that bite mark I saw on you in Chicago.\" She giggled on the way out of the x-ray room. The technician looked at Jack with confusion on her face.\n\nChapter 70\n\n\"Es-tu blesse?\"\n\n\"Non. Ce n'est qu'une ecchymose. It'll be fine. Karen took an x-ray and I'm good,\" Jack replied to B\u00e9r\u00e9nice, with a smile.\n\n\"Nous avons eupeur pour toi, Jacques,\" his mother cried.\n\n\"Mama, c'est bien que la balle me frappe dans le dos. C'est seulement quand le ballon me frappe dans la t\u00eate, vous devriez \u00eatre inquiet. J'aime ta m\u00e8re. Please. Don't worry, Mama,\" Jack replied.\n\nJack's mother was not satisfied. \"They should fire him for hitting you,\" she asserted. \"He's a coward!\"\n\nJack smiled at his mother's fury. \"They will take his money tomorrow for hitting me. They'll fine him.\"\n\nB\u00e9r\u00e9nice interrupted Jack, hugged him close, pressed her breasts into his chest, and kissed him hard. The lovers' kiss was passionate. Some of his teammates began clearing their throats and whistling as they passed the lovers.\n\n\"Je t'aime Jacques,\" B\u00e9r\u00e9nice sighed.\n\nJack caressed her cheek and looked deep into the black eyes of the woman he loved.\n\n\"Je t'aime B\u00e9r\u00e9nice,\" he whispered.\n\nChapter 71\n\nThe Royals, again, gave the Astros a whipping on their return to Kansas City, with Jack leading the team to victory. In game 6 of the ALCS, Jack led off the scoring in the first inning with a no outs, bases clearing double to the left center field wall, scoring runners from first and second. He immediately stole third base, and scored on a bunt from Jackson Poteet. By the end of the first inning, 12 Royals batters had come to the plate. The score... 7-0.\n\nWhen it was all over, the Royals won the game 15-1, earning a spot in the World Series. Jack, again, hit a bases clearing double down the right field corner in the 5th inning, scoring another 2 runs. He immediately scored a run when Jackson Poteet hit a single to left center field. Every player in the starting lineup had at least one hit, and many had two or more hits.\n\nJack was named the Most Valuable Player of the ALCS for leading the team in hits, RBIs, runs scored, and stolen bases during the series.\n\nAgain, he shared the MVP stage with B\u00e9r\u00e9nice, her parents, and his parents. And, of course, B\u00e9r\u00e9nice was proud of Jack. He was having a phenomenal year and was unstoppable in the playoffs so far. She couldn't wait to get him home and \"congratulate\" him, she told him.\n\nJack did see and spoke with Diane during Games 1, 2, and 6 through the fence before the games. He did sense she was becoming distant. He had a feeling the end of their relationship was would soon arrive; something he did not want.\n\nThe Under Armour rep was ecstatic with Jack and his performances during both playoff series. Again, bonuses would be forthcoming at the beginning of the year.\n\nWhen the Caron and Ouellet families arrived at Jack's home very late that night, B\u00e9r\u00e9nice sensed Jack was becoming melancholy. After she checked on her children and both sets of parents retired for the evening, she found Jack in bed, lying on his side, facing the outside of his bed.\n\nIn her now famous, off white satin pajamas, she cuddled up behind him and cooed her relief from the night of excitement.\n\n\"Jack,\" she said, and paused. \"Is there something wrong?\"\n\nJack took a moment or two to reply. \"I fear Diane will soon be gone from my life. She seems distant.\" He paused to reflect on his words. \"I'm not sure, but, I think our friendship will be ending soon.\"\n\nB\u00e9r\u00e9nice didn't reply. She sensed Jack wasn't finished speaking.\n\nJack waited a few minutes, then turned to face B\u00e9r\u00e9nice. He took her hand and held it lovingly.\n\n\"Diane is one of the few people in my life whom I truly enjoyed having a conversation. I can't necessarily point to the reason why, but, it was evident the night we met.\" He paused. \"Since I told her I couldn't be her lover, but, didn't want to lose her as a friend, it just hasn't worked between us. I have tried to stay in contact. She will not have lunch with me anymore.\"\n\nHe drew B\u00e9r\u00e9nice into his arms and held her close. He whispered into her ear, \"I think I am beginning to feel a loss, not unlike losing Robert.\"\n\nB\u00e9r\u00e9nice withdrew from Jack a little and found a tear falling across his cheek.\n\n\"Peut-\u00eatre qu'elle ressent une perte aussi.\"\n\n\"Oui. Peut \u00eatre. La douleur ne s'en va pas.\"\n\n\"Jack... From what you have told me, her lifestyle is different. Perhaps this is her way of telling you, she can't be your friend without being her lover as well.\"\n\nJack tilted his head to consider her words. \"You may be right.\" He paused to refocus. \"B\u00e9r\u00e9nice... Yes, she was a lover. But, I loved her for another reason. Not the sex. It's like with you, but, with you it is more so. I love you because you are who you are. I was in love with you since high school. The love I have for you is different. It is a love of wanting to be with you always... Forever. With Diane, it is more a friendship love.\"\n\n\"It will work out for you, Jack. Perhaps not the way you would like, but, it will work out. It always does,\" she offered. \"If the two of grow distant, then, it was meant to be. That doesn't mean you will forget her. Diane obviously has influenced your life. If she wants to leave, let her go because that is what friendship and love is.\"\n\nJack gently nodded his agreement. He placed his arms around B\u00e9r\u00e9nice and asked her to hold him. \"I love holding you like this,\" he said, as he held her more closely and firmly.\n\nA few minutes passed.\n\n\"I promised you a congratulations when he got home,\" she whispered, with a giggle\n\nJack chuckled, as he pulled back from her embrace. \"OK,\" he whispered, in return. \"But, we can't roar like lions. Your parents. My parents.\"\n\nB\u00e9r\u00e9nice giggled again. \"OK, I'll scream into our pillows. Keep them close.\"\n\nChapter 72\n\n\"Good morning, Mr. Caron.\"\n\n\"Good morning, Brenda,\" Jack replied. \"I have tickets to the World Series for Diane. Just two this time. Supply and demand, you know.\"\n\nBrenda giggled. \"I would be interested in knowing where you are getting them. Diane hasn't had any luck getting them on her own.\"\n\nJack hadn't told anyone where he was getting them. Not even B\u00e9r\u00e9nice. He had placed a clause in his baseball contract with Miami that the team would provide him playoff tickets at face value cost. When the Royals picked him up on a trade, and the Royals made the playoffs, he pointed to the clause in his contract. The Royals were happy to provide the tickets to their star player.\n\nJack just grinned widely at Brenda and wiggled his finger at her in reply.\n\n\"Diane is on the phone right now. I just sent her a message you are here. She'll be right out.\"\n\nJack was about to take a seat when Diane emerged from her office with a wide smile on her face. \"Jack,\" she chirped, as she motioned for Jack to come into her office. \"Brenda, no interruptions, please.\"\n\n\"Yes, Ma'am.\"\n\nAs Jack took his seat, he announced, \"Two tickets, behind the Royals dugout. Both here and in Pittsburgh. I tried to get more, but, I hear the owner has friends.\" He chuckled.\n\nDiane giggled and replied, \"You're amazing, Jack. In many ways.\" She wiggled her eyebrow. \"I'd strip naked right now if you tell me how you're getting these tickets.\"\n\n\"I'm tempted. Truly, I am. But, some secrets need to be kept,\" Jack replied with a laugh.",
        "\"Thank you, Jack,\" she sighed, as she took the tickets from his hand. \"You are so generous.\" She looked down into her lap. Jack sensed words he did not want to hear were about to be spoken.\n\n\"B\u00e9r\u00e9nice says hello,\" he offered.\n\nDiane nodded her head softly and looked up to Jack. She had a small tear on her cheek.\n\n\"Diane, I...\" he paused. \"I think I know what needs to be said, so, let me say it for both of us.\"\n\nBefore she could reply, Jack continued, \"This is not the break I wanted. But, I understand your feelings. It's like I said at the club. I can't be your lover. And I know you can't be friends without me being your lover. They go hand and hand for you.\"\n\nJack broke down and placed his hand over his face.\n\n\"I will miss you, Diane. So very much,\" he cried, through a quivering voice.\n\nJack rose from his chair and gestured to Diane so he could hold her. They held each other for a few minutes to let the hurt soften a little.\n\n\"There will be no good byes for me, Diane,\" he said. \"It is... until we meet again and embrace as friends.\"\n\nWith that, Jack opened the door and left.\n\nChapter 73\n\nB\u00e9r\u00e9nice was in the kitchen and heard the garage door going up and a car pulling in. She opened the door to the garage and found Jack smiling as though he hadn't seen her in years. She knew where he had been.\n\nJack pressed the button to close the garage door and stepped into her loving and welcoming arms. After they hugged and kissed as lovers do, she looked into his face without a word. Jack nodded gently.\n\n\"It went like I expected. You were right. We can't be friends without being lovers. As much as I want to be her friend, she equally wants to be my lover.\" He paused and looked at the floor. \"It's over, B\u00e9r\u00e9nice. It's time for me to move on with you and the children. I want you more than I need her. Again, you're right. It will hurt for a time, but, I will get over it. Now that I have you and the children with me, it will be easier.\"\n\nWith that, four cute eyes showed up at his feet... Two brown ones from John and two nearly black ones from Patrice. Jack smiled as he looked down on the smiling faces of his niece and nephew. He looked into B\u00e9r\u00e9nice's eyes. Her eyes were nearly black, and he tried to focus to see if he could see the pupil within the iris of her eyes. He couldn't see the difference in color without being nose to nose with her. Exotic, he thought.\n\n\"How about lunch?\" he announced. \"Waffles at Waffle Hut?\"\n\n\"Yeah!\"\n\nChapter 74\n\nJack stepped over to first base to hold the runner who had just been walked by Nelson Ryan. Jack looked up to the scoreboard... Kansas City 1 Pittsburgh 2, bottom of the 7th, 1 out, game 4.\n\nKansas City had won the first three games of the World Series and Ocher and the players were hoping for a sweep, but, it wasn't looking good. Runners were on first and second with one out. A hit would score another run.\n\n\"TIME!\" yelled Bill Ocher to the umpire as he stepped out of the dugout.\n\nAs Ocher walked to the mound, he motioned to Jack to join him.\n\nJack furled his brow in confusion. As Jack stepped up to the mound, he heard...\n\n\"You're done Ryan.\"\n\nOcher extended his hand to take the ball from Nelson, then slapped him on the butt as he left.\n\n\"You're in, Caron.\"\n\nJack couldn't believe his ears. His brain froze for a second to understand the words he heard. He blinked... Twice.\n\n\"What?\" Jack replied.\n\n\"I need one out, Caron.\"\n\n\"Are you nuts? I haven't pitched since high school!\"\n\n\"I need one out, Caron. I don't care how you do it. Quinn is up next. Lefty. Low and outside,\" Ocher ordered. Ocher placed the ball into Jack's hand. Ocher then turned to Baker, the catcher. \"Give him the signs if you want something else. Fastballs only.\" Ocher then faced Jack again. \"Low and outside.\"\n\nWith that, Ocher slapped Jack on the butt and returned to the dugout. The equipment manager ran past Ocher and gave Jack a right handed fielder's glove and took his mitt.\n\nJack looked up in stunned silence. He looked around PNC Park to find the crowd equally stunned as Jack.\n\nChapter 75\n\n\"What the Hell?!\"\n\nB\u00e9r\u00e9nice turned from her mother to find Jack's father staring onto the field. Everyone in the suite was also staring toward the field in stunned silence.\n\nB\u00e9r\u00e9nice and her mother moved toward the window to see what was going on. B\u00e9r\u00e9nice looked to the field to find Jack standing on the mound talking to the catcher. A few moments later, the catcher tapped Jack on the butt with his mitt and ran from the mound toward home plate, leaving Jack standing on the mound... alone.\n\n\"Oh, my God!\" she yelped, clasping her hands over her mouth.\n\n\"Ocher's lost it!\" John Caron growled.\n\nChapter 76\n\n\"What's going on, Doug?\"\n\nBaker smiled and tilted his head. \"Ocher told me this might happen. Months ago. He's been clocking your throws to third, second, and home since the All Star game. That triple play got him to thinking. You're throwing the ball in the high 90s; sometimes, over a hundred; and with accuracy!\" Baker paused for Jack to process what he had been told. \"Look... Ocher is looking to throw Quinn and the rest of the Pirates off their game. One batter. That's it... Just Quinn.\" Jack nodded. Baker did, too.\n\n\"OK... Low and outside is one finger. Two fingers is up and in. Three is low and in\"\n\nJack nodded again.\n\n\"Fastballs only. Nothing fancy and you're done.\"\n\n\"OK,\" Jack replied, with increasing confidence.\n\nBaker smiled, slapped Jack on the butt with his mitt, and ran back to home plate.\n\nJack looked over to first base to find James Wheelock smiling and nodding, having taken his place on the field. He point his mitt at Jack. He mouthed, \"Get 'em.\"\n\nJack stepped into the rubber and threw his first left handed warm up pitch to Baker. Low and outside. As he stepped back to the rubber, he glanced at the scoreboard. 97 miles per hour. His second warm up pitch... 99 mph.\n\nJack shook his head and didn't look at the scoreboard again for the remainder of his warm up pitches.\n\nJack took a deep breath and let it out slowly when he heard the umpire yell to play ball.\n\nQuinn stepped into the left side batter's box and took his warm up swings. Jack stepped into the rubber, took the low and outside sign, applied his stretch, and held the runners at first and second. \"What was Ocher thinking,\" he growled to himself. Then, he threw his first major league pitch.\n\nThe missile raced to the low and outside corner.\n\nCRACK!\n\nSilence fell upon PNC Park. Jack saw the ball curling rapidly down the third base line to the corner of left field.\n\n\"FOUL BALL!\" yelled the left field umpire and echoed by the third base umpire. Both umpires waving their arms for foul.\n\n\"Damn,\" mumbled Jack.\n\nChapter 77\n\n\"Ocher is out of his mind!\"\n\nB\u00e9r\u00e9nice stood in stunned silence while standing next to her father in law, who just offered his opinion of Ocher's mental state.\n\nThen she managed to say something. \"I didn't know Jack could pitch.\"\n\n\"He hasn't pitched since high school,\" her father offered.\n\n\"Why now?\" she asked.\n\n\"Ocher's had a stroke,\" her father in law growled again.\n\nAt that moment...\n\nJack threw the pitch.\n\nCRACK!\n\nIn unison, everyone in the suite turned their heads to the left to watch the ball sail into deep left field foul territory. In unison, an audible sigh left their lips.\n\n\"That pitch was 101 miles per hour,\" Frank Ouellet said, pointing to the scoreboard.\n\nIn unison, everyone looked at the scoreboard.\n\nChapter 78\n\nWith his back to the plate, Jack was rubbing the new baseball he just received from Baker; trying to calm his nerves and show Quinn he knew what he was doing.\n\nJack stepped into the rubber and took the low and outside sign. Applied his stretch, checked the runners, and launched his next missile. Low and outside.\n\nQuinn whiffed.\n\n\"STRIKE TWO!\"\n\nJack didn't dare look at the scoreboard. He took the throw from Baker and marched back to the mound, taking another adrenaline filled deep breath and exhaled slowly. He tilted his head to stretch his neck and rolled his shoulders.\n\nStepping into the rubber, he took the sign... low and outside. Applied his stretch and checked the runners.\n\nJack then launched his next missile.\n\n\"AH, SHIT!\"\n\nChapter 79\n\nB\u00e9r\u00e9nice was holding her hands, prayer like, over her mouth and nose. Her mother was doing the same on her right. Her mother in law, on her left, was mumbling a \"Hail, Mary\" with her eyes closed and hands held out; palms up.\n\nB\u00e9r\u00e9nice had just witnessed Jack throw a strike to Quinn. She felt adrenaline enter her body and she was frozen in place, watching every move Jack made.\n\nShe held her breath as Jack stepped into the rubber. Moments later...\n\nCRACK!\n\nShe watched in horror as the ball slammed into the side of Jack's upper left thigh near his hip.\n\nA loud gasp consumed the suite.\n\nChapter 80\n\nJack knew when he let go of it, the ball was going straight down the middle of the plate. It was a bad mistake.\n\nHe thought he saw Quinn smiling.\n\nCRACK!\n\nJack never saw it coming until it had already hit him in the side of his left leg, near his hip. He recovered quickly, not feeling any pain... yet.\n\nHe picked up the ball with his left hand. He quickly turned to second base to find Morris racing toward second from shortstop. Morris was pointing to second base, to let Jack know that is where he wanted Jack to the throw ball.\n\nWithout any hesitation, Jack threw a left handed strike, chest high, directly above second base. Morris snatched the throw without breaking stride, skipped across second base, and fired his throw, in one fluid motion, to Wheelock at first base.\n\n\"OUT!\" cried the umpire at second base.\n\n\"OUT!\" echoed the umpire at first base.\n\nThe crowd roared their approval. Those for the Royals, that is.\n\nThen... the pain...\n\nWhen Jack took his first step towards the first base dugout, he knew it wasn't broken. A bad bruise at worst, he thought, but, his leg had been numbed by the impact of the baseball, and he was limping. Karen Parsons met him at the first base foul line.\n\n\"It's not broken,\" he reported. \"Bruised I think, but, the hit caused it to go numb.\"\n\n\"Do you need help?\" she asked.\n\n\"No!\" he snapped. \"I don't want those pricks to know I can't play.\"\n\n\"OK,\" she giggled, as she walked beside him toward the dugout.\n\nJack looked up to find Diane, who was standing in her seat, clapping her hands, smiling and looking directly at Jack. He tossed a gentle wave to her.\n\nThen...\n\nHe saw a familiar face he thought he would never see again. It froze him in his tracks...\n\n\"Robert?\"\n\nChapter 81\n\n\"Robert?\" he whispered, consumed in incredulous and paralyzing surprise.\n\nStanding next to Diane, on her left, was his brother. Wearing a black felt cowboy hat, a starched shirt, blue jeans and applauding with a wide smile on his face. He nodded to Jack and mouthed the words, \"It's OK. B\u00e9r\u00e9nice loves you.\"\n\nJack was standing just outside the dugout staring into the stands at his brother. Unable to move or speak. His teammates were offering thanks and congratulations, but, Jack didn't hear a word. His eyes were focused on Robert.\n\n\"I asked for one out, Caron,\" barked Bill Ocher, as he stepped into Jack's field of view. \"I suppose two outs will do. You're back at first next inning.\"\n\nJack tried to keep his eyes on Robert, but, Ocher blocked Robert out. When Ocher left, Robert was gone.\n\nIn his place...\n\nWas a boy.\n\nA boy who looked remarkably like Robert as a child. Jack shook his head and blinked his eyes, refocusing on the boy. \"That looks like Robert,\" he whispered.\n\nThe boy was about 12 years old, dark hair, dark eyes, wearing a Royals baseball hat, and a white Royals baseball jersey with the number 7 on the front. He was smiling and clapping, along with the other fans near the Royals dugout. He was looking directly at Jack. Jack couldn't get over how he looked like Robert when they were younger.\n\nJack quickly gathered his thoughts. He motioned to Diane that he was going to send her a text message. Diane nodded. He raced to the locker room, pulled out his phone and typed in the message.\n\nThe boy on your left. Quickly. Send him to the right field side of the dugout. I want to speak with him. Now. Please.\n\nHe placed his phone back into the locker and raced back to the dugout, looking for the boy. He forgot about his leg bruise.\n\nThe boy was weaving down the row of seats toward the aisle, with a man following him. They turned left toward the dugout and saw Jack waiting for them. They smiled.\n\nAs the boy neared the fence, Jack said, \"Hello, what's your name, young man?\"\n\n\"Robert Caron,\" the boy replied, in a thick French accent.\n\nJack's heart skipped a beat... a lump formed in his throat and chest. He was amazed how much this boy looked like his brother and also had his name.\n\n\"Where are you from, Robert?\"\n\n\"Quebec City, Canada. This is my Papa. His name is Robert, too.\"\n\nJack looked to the boy's father. The boy's father favored his own father.\n\nIncredible, Jack thought.\n\n\"Look, I have to go. When are you returning to Quebec, Mr. Caron?\"\n\n\"Tomorrow. We're staying in Pittsburgh tonight.\"\n\n\"May I meet with you and your son tomorrow morning? Say at 9 am. I will give you my phone number. Send me a text message telling me where to meet. I will bring you gifts. Baseballs, bats, jerseys. Please? Call me tomorrow morning. I would like to visit with you and your son.\"\n\n\"Papa, je veux le rencontrer. S'il vous plait,\" the boy said to his father. The father nodded.\n\n\"OK, Mr. Caron. I'll call you tomorrow morning. At 9 am,\" the father said.\n\nJack turned to get a pen and paper, but, bumped into Karen.\n\n\"What are you doing, Jack? You're in the hole!\" she barked.\n\n\"Quickly! Give me a pen and paper! Hurry!\" he replied, shaking his hand at her.\n\nKaren presented both items from her hip pouch. Jack took them, wrote his phone number, and passed it through the fence to the father.\n\n\"Robert, do you have any brothers and sisters?\" he asked the boy.\n\n\"Yes... One brother and three sisters,\" he replied.\n\n\"I will have gifts for them, too. I must go. I'll see you tomorrow.\"\n\nWith that, Jack waved to the boy and his father... and... smiled.\n\nChapter 82\n\n\"He doesn't look like he is OK,\" Jack's mother complained.\n\nB\u00e9r\u00e9nice was watching her man limping from the field with Karen by his side. Everyone in the suite were ecstatic for the double play Jack started.\n\n\"Marie,\" B\u00e9r\u00e9nice offered her mother in law. \"He's walking. At least it isn't broken.\" She sobbed softly, hoping it wasn't anything serious.\n\n\"Damn, Ocher. Luckiest sum bitch on the planet, only because of Jack,\" groaned John Caron.\n\n\"John!\" Marie yelped. \"Not here!\"\n\nB\u00e9r\u00e9nice tried to laugh but was suddenly surprised by Jack's unusual behavior near the dugout.\n\nChapter 83\n\nThe top of the 8th inning found the Royals in the top of their order... Jack batting third.\n\nJason Morris led the inning with a 2-1 count single to the right center field fence. Jack stepped out of the dugout to the on deck circle, glancing toward Diane and the Caron father and son. He smiled at each of them and they returned his smile. Jack smiled at Marcy, too. She winked. He shrugged his shoulders and grinned to himself. At least those two are having fun, he thought.\n\nHe turned his attention to the game. Doug Baker took four pitches for balls and was awarded first base, moving Morris to second base. No outs.\n\nJack began his walk to the left side batter's box when time was called by Pittsburgh. The pitching coach for Pittsburgh began a slow walk to the mound to have a chat with Dan McKeenan, the Pirates reliever and saves leader.\n\nWhen the umpire broke up the conference on the mound, Jack began another slow walk to the batter's box. He dug in and took his practice swings.\n\nMcKeenan took his stretch, checked his runners, and delivered his pitch.\n\n\"Sum Bitch!\" Jack yelled, as the ball whizzed by his chin into the glove of the catcher. Jack felt the wind cross his face when the ball passed by.\n\n\"TIME!\" cried the home plate umpire. The umpire pointed to the pitcher. \"THAT'S A WARNING!\" He then pointed to the Pirates dugout and repeated the warning. He turned to the Royals dugout, and again, repeated the warning.\n\nOcher came charging out of the dugout like a madman. The home crowd offered boos for Ocher's appearance.\n\n\"Bill! There won't be any retaliation on that pitch!\" the umpire told Ocher as they met nose to nose.\n\n\"What the Hell?!!! Why didn't you throw him out? Their pitching coach told him to do it! That's why he came out to the mound!\" screamed Ocher.\n\n\"That's enough, Bill! I'm giving him the benefit of the doubt! If he, or others, do it again, they're ejected, including the Pirates manager! And I won't have any retaliation from you. Try it Bill and out you go!\"\n\n\"Bullshit!\" Ocher replied, as he stomped back to the dugout.\n\n\"Step in number 7,\" the umpire ordered, as he returned to his position behind the catcher.\n\nJack stepped in and waited for the next pitch. Jack took two pitches. One for a ball and one for a strike. The count... 2-1.\n\nJack stepped out of the box, turned and looked at the Caron boy. He received a nod and a smile.\n\nJack stepped back in.\n\nThen... McKeenan delivered his pitch...\n\nCRACK!\n\nChapter 84\n\n\"The umpire's an idiot!\"\n\nB\u00e9r\u00e9nice chuckled at her father in law's comments this evening. He obviously was excited about the prospect the Royals may very well win the World Series, as, she was also.\n\n\"That damn near hit Jack in the mouth!\" John Caron offered again.\n\nJack took two pitches. One for a ball and one for a strike.\n\nB\u00e9r\u00e9nice noticed Jack looked toward the dugout before the next pitch.\n\nCRACK!\n\n\"Oh, my God!\" she squealed, as she saw the ball rocket toward right center field and careen off the wall, rolling rapidly back toward the infield. Pirate outfielders and the second baseman were racing to pick up the ball. She looked to the infield and saw Morris racing for home. Baker had already turned second and was nearing third.\n\nThe Texas Jackrabbit was already near second base looking to go to third. She saw Jack looking for permission from the third base coach. He was waving his arms to Jack to take third. She saw Jack tuck his head and dig for a sliding triple. She quickly glanced at Baker and found him nearing home plate for a stand up score. She then saw the right fielder had already fielded Jack's hit and had launched his missile to third.\n\nB\u00e9r\u00e9nice turned her attention to third base. She was oblivious to the cheers and encouragements offered in the suite to Jack.\n\nThe third base coach was laying down the slide signal to Jack.\n\n\"Oh my, God!\" she cried. \"It's going to be close!\"\n\nChapter 85\n\nJack knew it was going to be close, but didn't care. He knew two runs had scored and the Royals were ahead 3-2. If he made it, OK. If not, OK, too.\n\nHe looked to the third base coach for a final sign. George Wells was signaling Jack to slide to the right side of the bag and come in head first. Jack complied with the instructions.\n\nJack felt the glove of the third baseman slap him in the face. But... Jack had his hand on the bag.\n\n\"SAFE!\" cried the umpire.\n\nWells immediately called for time when he saw blood on Jack's face.\n\n\"TIME!\" yelped the umpire.\n\nWells began motioning to the dugout for Karen to come out to check on Jack. Jack rose to his feet and felt blood slowly drooling from his cheek. He dusted himself off from the slide.\n\n\"That was one helluva hit and base running, Jack!\" Karen barked, as she approached him. \"You sure have the crowd worked up! Our dugout, too!\" She then went to work on Jack's cheek.\n\nThe crowd was worked up because the Pirates were behind with only 6 outs left.\n\n\"It's just a scratch!\" she reported. \"Got the bleeding stopped.\" She cleaned the cut and wiped a glue stick across the cut and sealed it. She then stepped back to let the umpire inspect the cut. He nodded his approval.",
        "Karen grinned at Jack before she left the field. \"If we win this game, Jack, I'm going to kiss your mouth!\"\n\nShe laughed at the expression Jack gave her as she walked back to the dugout.\n\nChapter 86\n\nB\u00e9r\u00e9nice and the entire population of the luxury suite were hugging each other and exchanging high fives. Thirty people were hugging, kissing, and slapping backs after Jack's run leading hit and dramatic slide into third base. The other players' wives were hugging and thanking B\u00e9r\u00e9nice for the runs. She just laughed and enjoyed the attention.\n\nShe was concerned when Karen was called out to third base to look at Jack. But, when Karen left smiling widely, she knew Jack was OK.\n\nWhen Jackson Poteet stepped into the batter's box, her father announced, \"Bunt.\"\n\n\"What?\" she replied. Confused as to his announcement.\n\n\"Bunt,\" he returned, as he pointed to Poteet. \"Poteet is the best bunter on the team. Jack's going to score any minute. There's no outs... Bunt.\"\n\nB\u00e9r\u00e9nice twirled to look onto the field just as the pitch was delivered.\n\nPoteet tapped a bunt down the first base line and sprinted for first, as Jack sailed across home plate standing up. Jackson was thrown out by the pitcher.\n\nThe score... 4-2, Royals. Jack was personally responsible for three of the runs.\n\nNo more runs were scored, and... that, folks... was how the Royals won the World Series in four games.\n\nChapter 87\n\nIt was after 4:00 am Eastern when Jack and B\u00e9r\u00e9nice stepped into their room at the hotel in Pittsburgh.\n\nJack won the MVP award for the World Series. The first time in history, a single player won 4 MVP awards. The All Star game, the two playoff series, and the World Series. For the World Series, he lead the Royals in batting average, RBIs, runs scored, and steals. His RBI triple in the 8th inning secured the Royals win, and scoring on the sacrifice bunt, Jack closed the door on the Pirates. No fielding errors by Jack during the playoffs, sweeten the victory over the Pirates.\n\nIt was pandemonium in the locker room with champagne and beer poured on every soul present. Karen Parsons came through on her promise, when, in front of the TV cameras and the entire team in the locker room, she planted a kiss on Jack. A long and juicy one. The team erupted in whistles and roars of approval.\n\nJack received the MVP award on the field in front of the crowd. He also was given a brand new Royal Blue C7 Corvette from the MVP sponsor. B\u00e9r\u00e9nice and his family were present on the field for the presentation. He introduced his family and girlfriend during the TV interview.\n\nBy the time celebrations were over, B\u00e9r\u00e9nice and Jack were exhausted. The children were spending the night with Julie Campbell, across the hall from B\u00e9r\u00e9nice and Jack.\n\nAs each of them readied for bed, Jack spoke.\n\n\"I have a meeting at 9 o'clock in the morning. I would like for you to go with me.\"\n\n\"OK,\" she replied, as she readied to take a shower. \"Who will be there?\"\n\n\"Some friends,\" he sighed. \"Some friends I would like for you to meet.\"\n\n\"OK... Where do you know them from?\"\n\n\"I met them at the game tonight. They're from Canada... Quebec.\"\n\n\"Interesting,\" she mused. \"Canadians in Pittsburgh for the World Series. Funny that you met them. Where in Quebec?\"\n\n\"Quebec City.\"\n\n\"Sounds like fun. I always enjoy brushing up on my French. You could use it, too. You're a little rusty.\"\n\n\"You'll go with me?\"\n\n\"Of course.\"\n\nChapter 88\n\nB\u00e9r\u00e9nice and Jack rose at 7:30 am with very little sleep, but, Jack promised long naps that day. He ordered room service for breakfast and herded the children into their room, along with Julie Campbell. B\u00e9r\u00e9nice bragged about Jack to Julie and they had fun, with Patrice particularly interested in what her uncle had done the night before. John, too.\n\nAt 8:30 am sharp, a knock on the door silenced the group. Jack smiled and answered the door.\n\n\"Good morning, Mr. Caron,\" Gabriel, the team assistant, yelped. \"That was a great hit you had last night. Crushed it! Congratulations for the MVP. Getting used to it this year, I suppose.\" He chuckled.\n\n\"Come in,\" Jack offered. \"Did you get everything I asked for?\"\n\n\"Yep, and more. I used every bit of the money you gave me.\"\n\n\"What?\" B\u00e9r\u00e9nice asked, as she left her chair and approached Jack. \"What's going on?\n\n\"I have some gifts for the meeting we have at 9,\" Jack replied.\n\n\"Why the gifts?\" she insisted. \"What kind of gifts?\"\n\n\"The people we are meeting are a father and son,\" Jack said. \"They sat near the dugout and I struck up a conversation with them.\"\n\n\"It's bats, baseballs, gloves, World Series memorabilia, hats, jerseys, cards, photos, etc.,\" Gabriel offered.\n\nB\u00e9r\u00e9nice turned to Jack with a confused look on her face.\n\nJack chuckled. \"When you meet them, you'll understand... I think.\"\n\nAt 9 am sharp, Jack's phone rang.\n\nChapter 89\n\nJack, B\u00e9r\u00e9nice, and Gabriel stepped out of the shuttle van Jack hired from the hotel. He tipped the driver and helped Gabriel unload the gifts.\n\nAs they entered the Pittsburgh Inn lobby, there was Robert Caron, smiling, and standing next to his father.\n\nWhen B\u00e9r\u00e9nice saw the boy, she gasped, and placed her hands over her nose and mouth. \"Oh my, God!\" she whispered. She looked to Jack, who smiled and nodded.\n\n\"Me, too,\" he replied.\n\n\"He looks like Robert,\" she whispered, in stunned surprise.\n\n\"Yes, he does,\" Jack agreed. \"Let me introduce you.\"\n\n\"Congratulations on your MVP award, Mr. Caron,\" Robert's father offered, in a thick French accent.\n\n\"Mr. Caron, before we begin introductions, may I suggest we address each other by our first names,\" Jack mused.\n\n\"Caron?\" B\u00e9r\u00e9nice asked in shock.\n\n\"Yes,\" Jack replied. \"This young man is Robert Caron. And this is his father, also, Robert Caron. They are from Quebec City.\"\n\n\"Robert?\" she whimpered.\n\n\"Robert and Robert. This is my girlfriend, B\u00e9r\u00e9nice. We grew up together in Reims, Texas. Also, this is Gabriel. He is a Royals assistant and I asked him to help me this morning.\"\n\nGabriel stepped forward and shook the hand of each Canadian.\n\nB\u00e9r\u00e9nice leaned over and shook the hand of the boy and her eyes roamed his face, drinking in every detail.\n\nJack walked over to the hotel desk and requested a meeting room for two hours. He paid the clerk and they were escorted to a room. B\u00e9r\u00e9nice sat next to the boy with her eyes rarely leaving his face.\n\nWhen everyone settled in, Jack spoke to the father.\n\n\"Robert, I asked for a meeting today for a very specific reason. You see, your son here, looks very much like my brother. His name was Robert Caron.\"\n\n\"I know a little about your brother,\" Robert offered. \"Robert here, saw you in the All Star game on television. He was curious about your last name. Before I knew it, he had done research on you and came across your brother. I am sorry to hear he passed away in May.\"\n\nJack nodded to the boy with a grin. \"What else do you know about me, Robert?\"\n\n\"I know you grew up in Reims, Texas. You played baseball at Texas Tech. You were drafted in the first round by the Miami Marlins when you were 20 years old and within a year of playing in the minors, you were called up to the Marlins. You were traded in October 2018 to the Royals. And, I found out about your brother. It appeared in the Kansas City news and also the news in Texas.\"\n\n\"I'm impressed, Robert.\"\n\nBefore Jack could say anything further, the boy continued.\n\n\"I also did some genealogical research. Because of our names. We... I mean, my father and you share a common ancestor. You each share a great, great, great, grandfather. His name was Jacques Caron. He was born near Montreal and grew up near Ville de Qu\u00e9bec; Quebec City. That makes you and my father to be fourth cousins. Also, your great, great, grandfather, as a very young teenager, immigrated to Texas after the American Civil War, along with about 60 other families from a small town near Quebec City. He left his family behind at age 15, and traveled with another family.\"\n\nJack nodded in astonishment. \"I knew about the immigration,\" he offered. \"His name was Robert also, am I correct?\"\n\n\"Yes, sir.\"\n\nJack reached into his back pocket, withdrew his wallet, and presented a photograph to B\u00e9r\u00e9nice, with a smile. Her eyes widened at the photo and she looked directly at the boy.\n\n\"Robert,\" Jack addressed the father. \"This is a photograph of myself and my brother Robert. Robert is on the far left. The girl in the photo is B\u00e9r\u00e9nice, my Robert's widow.\"\n\n\"Je suis d\u00e9sol\u00e9 madame. Mes condol\u00e9ances,\" the father offered.\n\nB\u00e9r\u00e9nice nodded. \"C'est gentil de ta part. Je vous remercie.\"\n\nHe took the photo from Jack and his eyebrows arched and his eyes widened. He then showed the photo to his son, who also was surprised at the likeness to himself.\n\n\"You now know why I asked to see you last night at the game. You were sitting next to a guest of mine from Kansas City. When I waved to her, your son caught my attention.\"\n\nJack didn't mention the apparition of his brother. It wasn't time, he thought.\n\n\"Incroyable. Quelle coincidence,\" the father replied. \"Tell them, Robert.\"\n\n\"Jack, when I found out about our relation, I began tracking your career with the Royals. When it became apparent the Royals were in the playoffs, I used my savings to purchase World Series tickets. I prayed the Royals would be there and I could see you play.\"\n\nJack couldn't believe his ears. \"You bought tickets to the World Series before we earned the right to play?\"\n\n\"Oui. If the Royals did not play, I would flip the tickets for a profit,\" the boy replied, in a matter of fact tone.\n\nJack turned to B\u00e9r\u00e9nice with surprise on his face and shook his head.\n\n\"What are your plans today?\" Jack asked the father.\n\n\"We had planned to leave this morning for Quebec. But, you asked to see us. We drove here. It is a 12 to 14 hour drive to return home. We will stay overnight in New York before continuing to Quebec City.\"\n\n\"I would like for you to meet my parents. They are here in Pittsburgh. May I ask for a delay in your return so that you may meet them? I will pay for your hotel, meals, and fuel to return to Quebec.\"\n\n\"Oui. Nous aimerions rencontrer vos parents. Cependant, nous n'avons pas besoin de remboursement pour nos d\u00e9placements.\"\n\n\"Merci. J'ai des cadeaux,\" Jack said, gesturing toward Gabriel and the bags.\n\nRobert, the boy, was amazed at the gifts he had received. Jack had brought enough balls, gloves, bats, and shirts for his brother and sisters, and any friends he wished to share them with. Jack gave them \"Caron\" number \"7\" baseball jerseys for everyone in Robert's family.\n\nJack autographed the items Robert requested and did the same for his siblings. Gabriel took photos with the Canadians' phones so they could show family and friends. B\u00e9r\u00e9nice was included in the photos.\n\nJack had called his father and mother and asked them to take a taxi to the Holiday Inn. When Jack's mother saw the boy, she wept and held him close. Jack was amazed at the similarity with the boy's father and his own father. They could have easily been mistaken for brothers.\n\n\"Thank you for the gifts, Jack... Mr. Caron,\" the boy said, as it came time for them to say good bye.\n\n\"You're welcome, Robert. Thank you for meeting me today. I believe Providence brought us together last night and today. And the next time I make it to the World Series, I will send you the tickets. Deal?\"\n\n\"Thank you!\"\n\nJack smiled and offered his hand in friendship.\n\nThen... He knelt and took the boy into his arms... And held him... very close.\n\n\"I know you're in there, Robert,\" he whispered softly...\n\n\"Thank you.\"\n\nChapter 90\n\nJack returned to Kansas City as a household name. Everywhere he went in public, fans greeted him and begged for photographs. He cheerfully submitted and asked them their name and where they were from.\n\nKansas City provided a parade for the World Champions, and B\u00e9r\u00e9nice and her children joined Jack in the celebration.\n\nWhen, in Lees Summit, Jack took his new and unexpected family to Waffle Hut for the kids' favorite waffles, he was mobbed by the patrons.\n\nThe two love birds had been back in Kansas City for about a week, when Jack received a call at home. After he answered the call, he looked to B\u00e9r\u00e9nice, nodded, and went to the front yard to continue the call.\n\nB\u00e9r\u00e9nice, with Am\u00e9lie in her arms, watched him through the window of the dining room. Jack was pacing along the sidewalk near the street. The call was brief. Then, he placed the phone in his pocket and turned for the front door of the house. B\u00e9r\u00e9nice met him when he entered and waited for him to speak first.\n\n\"That was the assistant to Kirby House. The general manager. He wants to see me at 3 o'clock this afternoon. I'm sure it's about my contract.\"\n\nB\u00e9r\u00e9nice took him by the back of the head and pulled him in for a kiss. He returned her kiss and then he kissed Am\u00e9lie in her arms.\n\n\"I'm not going to think about it. It will work out no matter what because you and the children are with me. I'm the happiest man on the planet.\"\n\nShe nodded and hugged his arm.\n\nChapter 91\n\n\"Good afternoon, Jack,\" Millie said, as he arrived for his meeting. \"Great hit and base running in the 8th in Pittsburgh. Congratulations on the MVP.\"\n\n\"Thank you, Millie. Any hints on my meeting with Mr. House?\"\n\n\"Nope, but I will tell you it won't be long. He has someone scheduled at 3:30.\"\n\nWith that, the door to Kirby's office opened. \"I thought I heard you out here. Come in, Jack,\" Kirby offered cheerfully. \"Have a seat.\"\n\nWhen Jack entered, Trey Lancaster was in the room, standing near a chair along the wall. He was smiling and had a folder in his hand, along with folders in the chair next to him.\n\nJack took a seat in front of the desk and Kirby took the seat next to him.\n\n\"Thank you for coming in on short notice, Jack.\"\n\n\"You're welcome. Thank you for meeting with me. It's an honor to visit with you anytime,\" Jack replied.\n\n\"It's too bad you didn't win the American League MVP award. It's always tough to lose a close one like that. Damn it, Jack. I felt like you should have run away with it, the way you played this year.\"\n\nJack chuckled and shook his head. \"I figured everyone thought I had more than my share of MVPs this year. I don't mind losing to Jalen Woods. At least this time.\"\n\nMr. House laughed, along with Trey.\n\n\"I hear you and your sister in law are going to make a go of it. It was a sad day for us when we took that message from your parents. I hope everything is getting better.\"\n\n\"Thank you. B\u00e9r\u00e9nice and I are trying. We're happy. My mother and father are still coping with Robert's death. Understandably. The loss of child.\"\n\n\"Of course they are. Still sad. Well, I also hear you have an unexpected family. B\u00e9r\u00e9nice has how many children?\"\n\n\"Three. One son and two daughters. Ages 6 months to 4 years. The best nephew and nieces a man can have. I'm bragging, of course.\"\n\n\"Yes, you are. You look happy,\" he sighed. \"Bill Ocher is expected to be with us this afternoon, Jack. He wanted to sit in on this meeting about your contract.\"\n\nWith that, Ocher knocked on the door and entered, taking a seat next to Trey.\n\n\"OK,\" Kirby began. \"Jack, I was on the phone with your agent before you came into the office. Everything you are going to hear from me, you're going to hear again from Jason. I wanted to speak with you personally instead of through your agent.\" Kirby paused to let Jack taste his words. Jack nodded.\n\n\"I felt like you were a hidden gem three years ago, Jack. But, I couldn't get Mr. March to let me trade for you until last year. You certainly made me look good this year in the eyes of Mr. March.\" He paused again. \"OK... Here's the situation we find ourselves in. Raines, Baker, and Morris have all told me they're leaving.\" He paused to give Jack a chance to consider his words. \"Without them, I can't promise the Royals will be competitive for the next three to five years. I mean, we likely won't make the playoffs until we get some younger players in here with elite talent.\"\n\nJack nodded.\n\n\"I recently had good intelligence the Astros are going to make you an offer.\"\n\nJack's eyebrows went up... his eyes widened.\n\n\"Didn't expect that, did you?\"\n\n\"No, sir.\"\n\n\"I called Bill Ellison in Houston and confirmed he was going to make an offer. I suspect he's speaking with Jason right now. He so much as told me what the offer was going to be. Jack, I can't match the offer.\" He paused again.\n\n\"With the loss of Raines and the others, I'm going to make a recommendation to you. The Astros have good playoff prospects for the next six or more years. If you go to Houston, there is a strong prospect you will be in the World Series again within the next two to three years. That will absolutely not happen here.\"\n\nKirby paused to let Jack consider the information he had been given.\n\n\"Well, that's about it, Jack. I'm giving Jason a formal offer later today, but, I'm encouraging you to consider the Astros, or perhaps, an offer from a contender. Pittsburgh and the Dodgers are looking good over the next two years. So, do you have any questions of me, or perhaps Bill?\"\n\n\"No, sir. I haven't any questions. I do have a comment or two. Thank you for helping me with the loss of Robert. The private plane and the time off were Godsends. Also, thank you for giving me the opportunity to show another team my talents. I don't think the Marlins were using me, and others, very well. You and Bill knew I could succeed and again, thank you. And, I will miss the friendships I have made over the course of this past year. And... well. That's it, I guess. There just won't be enough thank yous from me, Sir.\"\n\n\"Well said, Jack.\"\n\nWith that, the four men stood and shook hands.\n\n\"Jack,\" Ocher said, before Jack left the outer office. \"You're the best player I've ever had. Thank you.\"\n\nJack nodded, smiled, then left the office. And then...\n\nLeft Kaufman Stadium... for home.\n\nChapter 92\n\n\"Daddy's home! Come with me, Mama!\"\n\nPatrice raced from the dining room window to the kitchen to await Jack's return from Kaufman Stadium. She snatched her mother's hand and pulled her along to the door that enters the kitchen from the garage.\n\nToo small, Patrice begged her mother to open the garage door. Patrice stepped through the threshold and ran to her...\n\nDaddy.\n\nJack picked her up and held her close to enjoy the warmth of the soul in his arms. He closed his eyes and drank in the unconditional love pouring from her tiny frame. He could feel Robert's presence.\n\n\"I love you, Patrice.\"\n\n\"I love you, Daddy.\"\n\nOh, those words, he thought. The sweetest words ever heard.\n\nHe opened his eyes to see his woman standing in the doorway. The woman he had been in love with since he was 15 years old.\n\nShe was smiling widely at the scene before her. The man she loves was loving her daughter.\n\nHe mouthed the words, \"I love you.\" She returned the words silently.\n\n\"I have groceries for supper. Will you help me, Patrice?\"\n\n\"Yeah!\" she replied, and wiggled her way out of Jack's arms. He gave her a small sack to carry into the house.\n\n\"I bought ribeyes and hot dogs to grill tonight,\" Jack reported, as he neared B\u00e9r\u00e9nice. \"It's still warm for November. I thought I would get at least another grilling in before winter.\"\n\nShe nodded with a gentle smile. He gave her a quick kiss as he passed her into the kitchen.\n\n\"I'll tell you later, after the children are asleep. OK?\"\n\n*****\n\nJack entered the living room after placing John and Patrice in their beds. They fell asleep two pages into one of their favorite children's books.\n\nB\u00e9r\u00e9nice was relaxing on the couch, having taken a shower and wearing a thick terry cloth robe to ward off the chill in the house. Jack liked it cool in the house. Jack sat at her feet and began messaging them.",
        "\"That feels so good,\" she sighed. \"Well? Your meeting today?\"\n\n\"The meeting went well,\" he began. \"Not what I expected, but, I think we have a bright future. Just not here in Kansas City.\"\n\n\"Oh? Where then?\"\n\n\"Houston, maybe. Mr. House told me the Royals had lost too many players to free agency and it would be years before they were competitive again. He urged me to seek another team to play for next year. One that was a playoff contender. Jason called me after the meeting and said the Astros have made an offer. A generous one. $6,000,000 a year guaranteed, plus generous incentives. I could potentially make another $56,000,000 over the next 8 years. Plus a $8,000,000 signing bonus... Five now and three next year.\"\n\n\"Jack,\" she offered, with surprise and happiness. \"It sounds wonderful. That's ... a lot of money.\"\n\n\"It is. I'm making $625,000 now. Just above the minimum. Jason said other teams are interested, but, the Astros have the best chance of going to the playoffs and the World Series.\"\n\n\"I'm excited for you, Jack. You're finally being recognized for your achievements.\"\n\nHe nodded. He released her feet, rose from his seat, then knelt near her head.\n\n\"I love you, B\u00e9r\u00e9nice. More than you know.\"\n\n\"Oh, yes, I do know. I've known you since I was 10.\"\n\nWith that, she pulled him to her and kissed him. When they broke their kiss, Jack held her close to him and drank in the love pouring from her soul.\n\n\"I want to go back to Reims. Will you come with me?\" he asked.\n\n\"Of course.\"\n\nChapter 93\n\n\"Jack Caron is here for his appointment. Send him in?\"\n\n\"Yes, Brenda. Thank you.\"\n\nThen, Diane hung up her phone and rose from her desk to greet Jack just as he opened the door.\n\n\"I always look forward to seeing you, Diane,\" Jack offered, as he held her closer and more snuggly that usual.\n\nDiane noticed.\n\n\"Jack, I'll never tire of seeing and holding you. Have a seat. Brenda tells me you have work for me to do this time.\" She giggled.\n\n\"I do,\" he began, as he took his seat. \"I want you to sell my house.\"\n\nDiane was stunned. \"Sell your house?\" she whispered.\n\n\"Yes... I'm leaving Kansas City.\" He pursed his lips and nodded.\n\n\"Jack. Where are you going?\"\n\n\"Houston... The Astros made an offer and they have playoff prospects. I signed a memorandum of understanding yesterday and I'll be signing my contract in two weeks.\"\n\nDiane began to weep, unable to hold back her tears. Jack rose from his seat and knelt beside her. He took her into his arms and they held each until the hurt subsided a bit.\n\n\"Oh, my,\" she whimpered, as she released him. \"I'm going to miss you.\"\n\nJack nodded as he wiped tears from his face. \"Me too.\" He rose from his knees and took his seat. \"I will never forget you, Diane. Never.\"\n\nDiane nodded while wiping tears from her face. She rose from her seat, yanked a tissue from its box on her desk, and opened the door to her office.\n\nThrough her sobbing, she said, \"Brenda, I need a Limited Power of Attorney, please.\"\n\n\"Yes, Ma'am. Is everything OK?\"\n\n\"It will be. Jack's leaving Kansas City and... well, come in here when you are finished, please. I need you to take down the description of his house. We're selling it for him.\"\n\n\"Yes, Ma'am.\"\n\nWhen the documents had been signed and notarized, Brenda left the office.\n\n\"This will be pro bono, Jack. The quid pro quo is still heavy in your favor after the playoff and World Series tickets. Marcy and I had great fun. You and I never talked after the World Series. Why did you want to talk to the boy sitting next to me?\"\n\n\"He's a distant relative from Canada. He came to see me play, but, I didn't know him. I saw him sitting next to you and he looks just like my brother. That is why I had to meet him. Providence brought the two of you together, so I could meet him and his father. Crazy, huh?\"\n\n\"Way crazy. What are the chances of you getting tickets next to him?\"\n\nJack shook his head and shrugged his shoulders.\n\nThey rose from their chairs and held each other.\n\n\"Jack... May I kiss you? One more time, please?\"\n\nJack leaned in and kissed her. She held the back of his head firmly against her lips, knowing it would be their last. Diane broke the kiss with tears in her eyes. \"Thank you. I will miss you, Jack.\"\n\nJack nodded, turned, and left the office.\n\n\"Brenda,\" Diane said, as she saw Jack leave the outer office. \"Reschedule for the rest of the day, please. I'm going to Jeff City for the weekend.\"\n\nChapter 94\n\n\"I'm going for a walk. Would you like to go with me?\"\n\n\"Sure... Let me get a sweater. It's a little cool this afternoon,\" B\u00e9r\u00e9nice replied. She went to her bedroom closet and put on a sweater. She went to the kitchen and told her mother where they were going.\n\n\"Let's go.\"\n\nThe two lovers stepped out of B\u00e9r\u00e9nice's parents' house and began walking along the sidewalk, hand in hand, on this November day before Thanksgiving in Reims.\n\n\"Any place in particular?\" she asked her lover.\n\n\"I thought I would stop by the cemetery. For a moment or two, then to Sacred Heart. OK?\"\n\n\"Sure.\"\n\nWhen they arrived at the graves of Caron family members, they stopped at Robert's grave.\n\nAfter a few minutes, Jack turned to B\u00e9r\u00e9nice. \"I haven't told you this. I saw Robert... In Pittsburgh.\"\n\nHer eye brows went up. She didn't comment.\n\n\"Not the boy, but Robert. Our Robert.\"\n\nB\u00e9r\u00e9nice's eyes widened and she tilted her head again.\n\nHe nodded. \"He was in the seat where the boy was sitting. Then, he was gone and I saw the boy.\" He paused to wipe tears from his eyes. \"He said that it is OK and that you loved me.\"\n\nB\u00e9r\u00e9nice took Jack into her arms and pressed herself against him. Jack returned her embrace. They both cried holding each other.\n\n\"I miss him, B\u00e9r\u00e9nice. So much.\"\n\n*****\n\nThe lovers found themselves walking toward Sacred Heart Church, hand in hand. Jack leading them to the entrance and into the sanctuary. They were alone. He then stopped at a pew on the right... three rows from the front. He gestured for her to enter the pew first.\n\nThey sat down and took each other's hand. Jack looked up to the front and reflected how the church hadn't changed much since he was a child and teenager.\n\nThen, he turned to his lover on his right.\n\n\"I remember vividly, you and Robert, here in this pew. Holding hands like we are now. Your parents on your right, and me and my parents on the left of Robert. We sat here as a family. Two families together seemed like one family to me. Because of you and Robert.\"\n\nJack looked away from B\u00e9r\u00e9nice and gazed at the altar. \"I remember when you and Robert were married here. I was standing next to Robert and you were beautiful. Robert couldn't keep his eyes off of you. And, you were the same to him. I also had a hard time taking my eyes away from you.\"\n\nAnother tear slowly appeared and fell across his cheek.\n\n\"I prayed that I would find someone like you someday.\" He paused to wipe a tear away from his face. He turned to B\u00e9r\u00e9nice and did his best to speak without a knot in his voice.\n\n\"I never imagined there would be a time that you and Robert would never be together. But, here we are. Both of us missing him so much.\"\n\nB\u00e9r\u00e9nice was crying and sobbing, doing her best to hear her lover's words.\n\n\"B\u00e9r\u00e9nice, I'm going to ask you to marry me,\" he sobbed. \"For me, my heart will always be broken because of Robert, and, I suspect the same is for you, too. But do you think you can love me? Even with Robert still in our hearts?\"\n\n\"Yes,\" she replied, through sobs and a quivering voice, nodding her head and wiping tears from her face. \"I know I can. I have loved you both since I was 10. I knew within weeks, that you two loved each other as much as Robert loved me. I couldn't love Robert without loving you, too. Jack, you have always been a part of my life. And I want to continue being with you. Tell me you want me. Right now... Please.\"\n\n\"I haven't a ring to give you, because, I want you to choose the ring with me. A moment I can share with you is what I want. With many more moments in the future to share. The important and happy ones and the sad ones, too.\" He paused. Then he rose from his seat and knelt in front of her.\n\n\"Marry me, B\u00e9r\u00e9nice. I want you for my own. I love you. I will always love you.\"\n\n\"Yes. I want you for my own, Jacques. I will always love you.\"\n\nChapter 95\n\nThe lovers were married the first weekend in January. In the same church where they grew up. It was simple. Family and close friends were in attendance. The reception was in the parish hall and it was simple also. Punch and cake, with a few snacks for the children.\n\nJack signed his baseball contract with the Astros after the previous first week in December. B\u00e9r\u00e9nice and the children were present. His only change to the agreement were playoff tickets. He wanted guaranteed playoff tickets at face value, for up to 10 tickets, behind the Astros dugout, both at home and away. He also wanted guaranteed access to a suite for his family to attend games during the season and playoffs.\n\nHe took some of the signing bonus and bought the house B\u00e9r\u00e9nice found in The Woodlands, Texas... A six bedroom, 4 bath ranch style home. B\u00e9r\u00e9nice chose the house because she and Jack agreed to have at least three children, for a total of six children. She furnished the house for $15,000, half of what Jack had given her. She bought everything on sale and returned the money to Jack to invest for their future after baseball.\n\nHe took B\u00e9r\u00e9nice to France for their honeymoon. A 12 day affair, which was cold in January, and they found their French had a Texas accent, for which the Parisians were fascinated. They visited Reims, France, the namesake of their home town in Texas.\n\nWhen they returned to The Woodlands from Europe, Jack went to work preparing for the upcoming season. Athletic training at home and at Minute Maid Park became the routine. Jack wanted the Astros to know he was worth the money he was being paid. He spent every spare and precious moment with B\u00e9r\u00e9nice and their children.\n\nWith Jack's new contract with the Astros, his endorsements came flooding in. He re-signed with UA and numerous businesses in the Houston area sought his face and name to sell their products and services. Soon, Jack's income from his endorsements was enough for Jack and B\u00e9r\u00e9nice to live on. Thus, Jack invested his baseball salary in mutual funds for the next 12 years, accumulating a very sizeable sum for their retirement from baseball.\n\nBefore Jack left for Florida and spring training, B\u00e9r\u00e9nice informed him she thought she was pregnant. She suspected sometime while they were in France. She would let him know for sure in a few days. Jack almost didn't leave, he was so happy. B\u00e9r\u00e9nice had to shoo him away... She needed her man to go to work.\n\nOn her first weekend visit to Florida with the children, she told Jack she was pregnant and the baby was expected in September. He pleaded with her to stay 2 more days, because he missed her and the children. She stayed the 2 days.\n\nWhen Jack returned to Houston from Florida, he was playing the best baseball of his life. From the very beginning of the season, Jack was an elite player. He lead the majors in batting average, stolen bases, on base percentage, RBIs and runs scored. This time, he was elected the American League Most Valuable Player, by a near unanimous vote.\n\nHe was honored with his second All Star selection. He sent two guest passes to Diane, along with a note to have fun. He never saw her there, but, she called him to let him know she was there with Marcy.\n\nRight before the season ended, B\u00e9r\u00e9nice and Jack welcomed a son. They named him Robert.\n\nThe Astros did make the playoffs. With Jack's leadership and elite play on the field, the Astros won the World Series in six games against the St. Louis Cardinals. Jack, for the second year in a row, was awarded the MVP of the series. He was the first player to achieve the award in back to back series.\n\nJack retired from baseball at the age of 40. He played 12 seasons for the Astros, making the World Series five times. The Astros won 4 of the 5. And for each of those World Series, his distant relatives from Quebec City were his guests. Robert, the boy he saw in Pittsburgh, along with his parents, his brother, and three sisters attend all of the games. The boy, Robert, was now a man, when Jack played in his last World Series with the Astros. Jack and B\u00e9r\u00e9nice had lunch with them every day before each game.\n\nHe played the last two years of his career at Kansas City. Diane was no longer in Kansas City at the time. Remarkably, she had married a wealthy attorney, who practiced in St. Louis. She practiced law part time and did frequent pro bono work for the needy. She had two sons.\n\nB\u00e9r\u00e9nice and Jack moved to Reims, Texas upon his retirement. Together, they had four sons and one daughter. John and Patrice were in college. Am\u00e9lie and Robert were in high school. Frances (Frank), Jacques (Jack), Paul, and Adele were in middle and elementary school.\n\nRobert, Frank, Jack, and Paul all played professional baseball. Frank and Paul made it to the majors, with Paul making it to the World Series with the Los Angeles Dodgers. They lost.\n\nTen years after Jack retired, he was selected to the baseball Hall of Fame. A surprise for him. His entire family, along with his elderly parents and in laws joined him in the celebration during the induction ceremony.\n\nIn Jack's retirement, B\u00e9r\u00e9nice was more beautiful than ever. The hints of gray in her hair made her ever more beautiful.\n\nAnd Jack enjoyed the remainder of his days, surrounded by his children and grandchildren on a small ranch outside of Reims... with his lover in his arms.\n\nThe End"
    ],
    "authorname": "ajroye",
    "tags": [
        "fantasy",
        "fellatio",
        "blowjob",
        "tits",
        "boobs",
        "french",
        "france",
        "rough"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/an-unexpected-family-pt-02"
}