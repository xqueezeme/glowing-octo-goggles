{
    "title": "Life's Changes Ch. 03",
    "pages": [
        "Jenny left right after piercing Bill's ears. Bill and I went up stairs to the bedroom where we started to put away the cloths I bought. I showed him the makeup I got for him. Through all this his cock was getting bigger till it was at full erection. I showed Bill the dress I bought for the party. Then I said.\n\n\"You know Bill you can't wear this dress with a raging hard on. It will show, you have to learn to control your excitement.\" Bill cast his eyes to the floor and said \n\n\"I know but it so exciting. What can I do?\" I reach for the panty girdle and handed it to him and said. \n\n\"For tomorrow you can wear this. Put we are going to have to work on controlling you. Put it on and we'll see how the dress looks on you.\" Bill pulled the panty girdle on but it did very little to hide his erection. \n\n\"That's not going to work. Try putting you dick between your legs.\" Bill pulled the girdle down and try to wedge his cock between his legs but as hard as it was it wouldn't bend that way.\" \n\n\"It won't go. What else can we do?\" I hear the frustration in his voice. I remembered reading something on the Internet. If you smack the head of the penis it will deflate. I walked over to Bill and gave his cock a sharp smack on the head. His cock shrunk down in seconds. \"OW that hurt. But it seem to work.\"\n\n\"Good put it between your legs and pull up the girdle before it starts getting hard again.\" Bill did as he was told I gave him a new bra and his breast forms. Then I gave him his new dress. Bill pulled the dress down over his head and I zipped it up. The dress fit him but I wasn't thrilled with the way his stomach bulged around the panty girdle. I unzip the dress and had him remove it. Taking a corset I bought for another sleeveless dress I got for him. I gave it to him to put on. He wrapped it around him as I button up the back. I could tell he was having some trouble breathing. Then I heard him moan. \n\n\"Does that hurt.\" I asked I didn't want him to be in pain the whole night.\n\n\"Not the corset it feels good. But my cock is trying to get hard again that's starting to hurt.\"\n\n\"You're just going to have to learn to control it.\" I had him put on the dress again. This time it fit perfect. I took Bill to the mirror and said. \"See it's perfect on you as long as you don't bulge out the front where a girl shouldn't.\"\n\n\"Do I always have to wear this corset? You never wear one.\n\n\"That's because I work out at the gym at work four day's a week. And I watch what I eat.\"\n\n\"That settles it I start at the gym tomorrow. And if I wear this thing I won't be eating very much.\" \n\n\"Tomorrow you have a busy day Monday will be better but you could start running again.\"\n\nI had Bill take off the dress then had him try on the other dresses I bought as well as the skirts and blouses. I was also letting him know what went with what. When we where done trying on all his new cloths. We hung up every thing and but it on his side of the closet. That's when I realized that we didn't have enough closet space for three people. Or draw space for Glenda's things. \n\n\"Bill for now put Glenda's thing in the spare bedroom. Next week will you get a contactor to finally convert that small bedroom into a closet like we planed?\" I've been after Bill to have the small bedroom adjacent to our bedroom made into large closet with draws and hanging space. The bedroom was too small for anything practical. It was suppose to be a sewing room when we bought the house. I don't sew that's what tailors where for. We put Bills panties and bras and camisole in his underwear draw and threw out his old boxers since he wasn't wearing them any more. Looking at the clock I realized it was two in the morning. I had to get some sleep. I slipped into a nightshirt. Bill washed the makeup off his face and put on a baby doll nightie. And slipped into bed with me. Then he said to me.\n\n\"Did you have fun with Jenny today?\"\n\n\"Yes we had a great time shopping some thing you hate to do. It was really fun having a girlfriend that likes to shop. It's something I miss. Why do you ask?\"\n\n\"I notice you had your tee-shirt was on inside out when you got home.\"\n\n\"Did I really? We played around in the car on the way back. Well actually she played with me while I sat there naked and let her do what she wanted. She's very good with her hands. Are you jealous?\"\n\n\"A little only because I wasn't there to watch. You look so beautiful when your cumming.' Bill told me as he ran his hands over my stomach. Then he felt the naval ring I had just gotten. \"What's this?\" He asked. I pulled up my nightshirt to let him see it and said.\n\n\"It's my new naval ring. Do you like it? Jenny's was so pretty and it turned me on and you said you thought I would look good with one, so I got one too.\"\n\n\"Its very sexy on you. I always thought you had a sexy tummy. That just makes it more so.\" Bill said as he bent his head and kissed my tummy. He then looked up and said. \"Did you know Jim has a nipple ring?\"\n\n\"No. How did you find that out?\" \n\n\"I went over there so we could drive together to the club for dinner. He was just putting on his shirt when I arrived I notice it but I didn't say anything. After dinner we returned to his house and we had a drink on their patio. He asked how come I didn't ask about the nipple ring. I said I notice it but didn't think it was any concern to me. Then he asked if I wanted to know why he was wearing one. He told me it was a sign of his servitude to Jenny when she got the naval ring she had him get the nipple ring as a gift to her.\"\n\n\"Wow that's devotion. He must really love her. Those things hurt a lot. Samantha, the girl that put my naval ring in has two, one in each nipple and a chain between them. She said it was a sensitive area and they hurt when there put in and the nipple is always hard while they're in.\" Bill then said \n\n\"I love you enough to have one put in. I love you enough to have both my nipples done.\" \n\nI was flabbergasted I didn't know what to say. Finally I said. \"Bill I don't want you to do it just for me. If you want have ring put in your nipples we can get it done but don't do it for me.\" He said \n\n\"I want to do it to show my love and servitude to you not just to have it done. I want it so that every time you see them you are reminded that I love you and am completely devoted to you.\" I didn't know what to say. I wanted to give him time for his profession of love for me to sink in. Finally I said.\n\n\"Bill when you can put on make up like a real girl and control your cock from getting a hard on until I say you can. Also when I can see that this is not a game and you truly want to be submissive to me then you can get your nipples pierced for me not before.\" I looked into Bill's eyes and I saw tears forming. \"Bill why are you crying.\"\n\n\"Because you understood why I wanted to do this. I thought you might think I was sick or twisted.\"\n\n\"I don 't think your twisted. I just want you to be sure this is what you want.\" \n\nI pulled Bill's head up to mine so I could kiss him. Just as I did that I remembered the cock ring I got from Brenda. I open my nightstand draw and pulled out the cock ring. I read the instructions. It said.\n\n\"To maintain erection place it on the penis once the desired firmness was achieved. If placed on the penis before a erection was established it my be difficult or impossible to obtain an erection.\"\n\nShowing it to Bill I said, \"Do you want to try this? It may help. If it does you wont have to wear that panty girdle tomorrow.\"\n\n\"Sure I'll try anything that will keep me from having to wear that thing.\" I reached down to feel Bill cock it was slightly hard but it was firming up. I didn't want to slap it again. I didn't see any choice. \n\n\"Bill I hate to do this, But we need to put it on when your completely soft.\" \n\n\"I know go ahead and hit it that would be the fastest way.\" I gave the head a smack. Bill's cock soften right up. I worked quickly putting the cock ring in place and adjusting the strap tight. \n\n\"Is that to tight? I don't want to do any permanent damage. I have need of that in the future.\" I asked totally serous. \n\n\"It's tight but not painful. Now we have to see if it'll work.\" The panties he was wearing where pretty lose on him. \n\n\"Bill go put on a thong and let see if they'll keep you package between your legs.\" Bill got up and went to his dresser and put on a pink thong and wedged his cock and balls between his legs. It seemed to stay in place. Then I said, \"Ok so far so good. Now put on the black heels and walk around some.\" Bill put on the heels and walked around. He walked like a guy something else we where going to have to work on. But his package stayed in place. \"Ok you can at less keep it between your legs when you're walking. Now we have to try and see if you can keep from getting hard.\"\n\n\"How are we going to do that?\" He asked \n\n\"I only know one way. Take the heels and thong off and come to bed.\" Bill did as he was told. Once he was back on the bed I started massaging his cock. I did this for a few minutes then I took his cock in my mouth and sucked on it for quite some time. It was strange I never sucked on his cock before when it was this soft. After ten minutes of sucking and playing with his balls I still wasn't getting any response from it, it was almost disappointing. After I did every thing I could think of and still he his cock stayed soft I said \"Well that seems to do the trick. No panty girdle for you tomorrow. But I still want you to work on your control. But your still going to have to wear the corset.\" I could see relief in Bill's face. I understood why I wouldn't want to wear a panty girdle either.\n\n\"As long as I don't have to wear both of them its ok with me. Besides the corset kind of sexy.\" \n\n\"Well you my think so but I'm glad I never had to wear one.\" I laid my head down on his shoulder and said \"Bill you may want to take that off.\" \n\nThe next thing I knew. I was woken up by Bill and the smell of fresh coffee. I looked at the clock and it was ten thirty.\" God! I'm late. Why didn't you wake me? I have to call the office.\n\n\"Don't worry I called Ginger at nine this morning and told her you weren't feeling good. She said that the VP's were all taking off today so you didn't need to come in and you didn't have any meetings anyway.\" \n\n\"You have your lunch with Pamela today don't you?\" I asked\n\n\"Yep at twelve o'clock at Michelle's. Do you want to come with me? I know she would be glad to see you.\" \n\n\"I'd like that I guess I better get in the shower.\" Just then the phone rang. \n\n\"Sweetie I heard you weren't feeling well are you ok.\" Jenny asked \n\n\"I'm fine. We didn't get to sleep till four this morning. Bill called in for me.\"\n\n\"Oh so your just playing hooky then. You could have said something I could have used the day off too. You and Bill had a pretty wild night last night after I left? You tell him to save some of you for me.\" \n\n\"We were up late making sure all the cloths I bought fitted. That's all\"\n\n\"Oh sure and that took six hours. I don't think so.\" She said in teasing tone.\n\n\"No really. The last person to touch me sexually was you. Oh never mind.\" I could hear her giggling on the other end. \n\n\"Just as long as you be ready to night you are still coming aren't you?\" It was my turn to tease her. \n\n\"Well actually I was thinking of staying home tonight and catch up on my sleep.\" \n\n\"You listen be me young lady you be at my house at six thirty tonight ready to change for a party you won't forget for a long time to come. Do you understand me?\" It was my turn to laugh. Young lady my behind I was only three or four years younger than her. \n\n\"Yes ma'am is there anything else.\" I asked still giggling \n\n\"Yea you can bring that slut of yours with you so my slut has someone to play with.\" We both laughed at that. We said our good bys and hung up. \n\nI looked at Bill and said \"Why don't you bring that fat cock of yours over here and show me what it's good for.\" For the next twenty minutes and three orgasms Bill reminded why I loved his cock so much. Then we took a shower together he did all the work in there to he washed my hair and scrubbed my back. And made sure I was very clean. Then he towel me dry and applied moisturizer all over me. Then he did himself. I brushed my own hair and had Bill sit with me as I applied my make-up and showed him how I did it. I put on my stocking and garter belt and panties. Bill put on the same. Then I put on a pleated plaid skirt and tan blouse and two inch heels. Bill wore a pair of dress slacks and a dark blue turtleneck with a gray sports jacket. \n\nWe drove to Michelle in his car. While on the way there I phone Brenda. \"Brenda I need a appointment for Sunday. I need a fitting for a French maids uniform for Nicole.\" \n\n\"Will ten be ok then I could still open at one.\" She asked \n\n\"Ten will be just fine. We'll see you then. Good bye.\" Bill asked \n\n\"I shouldn't have to ask this. But who's Nicole?\" \n\n\"You are silly.\" \n\n\"That's what I figured.\" Then I said \n\n\"Don't worry you be completely safe. She doesn't open till one. Our appointments at ten we'll be in and out before anyone knows we where there and it'll be just the three of us.\" he said \"ok.\" \n\nWe arrived about ten minutes early. We where seated immediately. We had coffee while we waited for Pamela to show. At twelve sharp Pamela was show to our table. She was a very attractive woman, though it was hard to see with the cloths she wore. She stood about five foot four. She had blonde hair, as always it was piled high on top of her head. Her breasts stood high on her chest they we're not large, but they fit her frame well. If she had an ounce of excess weight on her I didn't see it. When she spotted us her face lit up. You could see she was glad to see us. Well at least glad to see Bill. After she sat down between Bill and I. We order our meals. And then Bill got down to business \n\n\"Pamela, Sheri and I wanted you to have this for your service over the last three years. You were the best secretary I ever had. And I just wanted to show my gratitude.\" Bill pushed the case containing the watch over to Pamela. After looking at ther watch I could see she was a little disappointed. \n\n\"What's wrong Pamela?\" I asked \n\n\"Oh it's nothing. It's a beautiful watch. I'll always treasure it. I was just hoping that the reason for this luncheon was you where going to offer me a job.\"\n\n\"Pamela. The watch was from us personally. I did want to offer you a job with me. But I wanted you to understand that this was between the three of us.\" Bill told her\n\n\"I do understand that. Now offer me the job. Oh never mind I'll take it.\" She said excitement now showing on her face. \n\n\"Don't you want to know how much it pays or the benefits?\" Bill asked \n\n\"I don't care. I told Sheri I'd take a cut in pay to leave that firm. I just hope it's not too much. So are you going to offer it to me.\" Turning to me she said. \"Is he always so formal.\"\n\n\"He just wants you to know what you're getting into.\" I said \n\n\"Ok. If your have to tell me before you offer me the job tell me and get it over with.\"\n\nBill started telling her what the pay and benefits where. Pamela just stared open mouth the whole time Bill was talking. Then he asked. \"Do you have any questions?\" \n\n\"Just one. Who do I have to sleep with to get this job?\" \n\n\"You don't have to sleep with any one. Unless you want to.\" I said. \"Bill you forgot to mention the condos.\"\n\n\"Oh yea you get to use the firms condos for vacation. Free of charge you just have to pay to get there.\" \n\n\"You two are kidding me right there's no job like that.\" She asked \n\n\"No I'm not kidding. Jim believes in taking care of his employees. And I agree with him. I know you pulled my butt out of the fire on more than one occasion.\" \n\n\"So are you going to take the job?\" Bill asked. Sometimes he can be so blind. It was written all over her face. Turning to me she said.\n\n\"You know Sheri. I love your husband dearly but sometimes he can be slow on the up take.\" Then to Bill she said \"Bill do you really think I could turn it down. It's fifteen thousand more than I'm making now. I have to pay my own heath and dental. Of cause I'll take it. And besides I get to work for the best boss a girl could ask for. \n\n\"Good I glad we can work together again. Lets have some champagne to celebrate.\" Bill ordered the champagne. I stood and said. \n\n\"If you two will excuse me I need to powder my nose.\" Pamela asked \n\n\"Can I come with you? I need to go too.\" \n\nIn the bathroom after we had done our business I was checking my make-up in the mirror when she said to me.\n\n\"Thanks for talking Bill into hiring me.\"\n\n\"Pamela I didn't have to talk him into it. You were his first choice. And I think his only choice.\"\n\n\"Really that's not some thing I would have expected from him.\" She said \n\n\"Why. He's always telling me what a great job you do.\"\n\n\"He just never says any thing to me. It would be nice to hear something from time to time.\"\n\n\"I tell him to be more mindful of your feeling from now on.\" I was beginning to wonder how deep these feeling for Bill went. \"Pamela do you have a boyfriend. Or someone special in your life.\" I could see my comment blind-sided her.\n\n\"No. No boyfriend. No one special. Well there is one but he has a beautiful and loving wife that he adores. I don't mind telling you I'd drop my panties in a second if I though he would have an affair with me but he only thinks of her.\" I was sure she was talking about Bill. \n\n\"So you don't have any lovers then.\"\n\n\"Yes I have a few.\" Then she looked me in the eye to see where I was going and how I would react to her confession. \"I have a few female lovers that help keep me sane if that's what you asking.\" I could see she was on the defensive when she said this. I took her hand in mine and said.\n\n\"Pamela the man you where talking about is Bill isn't it.\" Pamela's shoulders slumped down and her eyes dropped to the floor.\n\n\"Am I that transparent? I never made a move on him. I hope you believe me.\" I patted her hand to let her know I believed her. \"When I first realized I was I loved with him I hated you only because you were getting what I wanted? So if you want to tell Bill I can't take this job I'll understand.\" \n\nI know this sounds crazy. But I felt sorry for this woman. I felt sorry for any women that didn't have a Bill to love. So I hug her and said. \n\n\"I would never ask him to do that. You can't help that you fell in love with him; he is easy to fall in love with. But we can't have you all frustrated wondering what it would be like to have Bill in bed with you. Can you think of a way that we can fix this problem.\" I knew she didn't have a clue where I was going with this.\n\n\"I guess I could turn the job down myself.\" \n\n\"No. That won't work you'll still be in love with him and you'll be further a way from him and you'll hate me even more.\" then she asked \n\n\"What else can we do?\"\n\n\"I could share him with you. I could let him go over to your place and make love to you once in awhile or you could come over to our place and the three of us can make love. How would that be, do you think that would solve the problem?\" Pamela just stood there mouth open not believing what I just said. \n\n\"You would share him with me. I can't believe you saying that.\"\n\n\"Can you live with that? I know it's not the perfect solution but I think it's a good one.\" I looked her in the eye to let her know I was serious. Then after she didn't say anything I asked. \"Can you live with that?\"\n\n\"How would Bill feel about it?\" I laughed just a little. Then said \n\n\"You tell me what man wouldn't want two gorgeous women in bed with him at the same time. But we could go ask him if you would like.\" I said as I took her hand in mine and turned to walked back into the restaurant. She pulled her hand from mine and said.",
        "\"Your serious aren't you. You would share him with me.\" \n\n\"Of cause I am. I would never be that nasty to tease you like that. So would you like too?\"\n\n\"I maybe a fool but yes I would like to at lease try it.\"\n\n\"Good. Now we can go and have lunch. And there are some things you need to know about Bill before you two make love together. Oh and would you like to be just the two of you the first time or would you like it to be the three of us.\" I asked as we walked back in the restaurant.\n\n\"I guess the three of us would be better. Are you bisexual?\" She asked \n\n\"Yes we both are.\" I said \n\n\"You mean you and I?\" I though for a second. Then said \n\n\"I guess I mean the three of us are.\" I said just as we arrived at the table stopping Pam from asking any more questions.\n\n\"Well there you two are I was beginning to think you two ran out on me.' Bill said as Pamela and I sat down. \n\n\"Would either of us run out on such a loving man?\" As I took Bill's hand in mine \n\n\"So what took you two so long.\" He asked \n\n\"We where just setting something up that's all.\"\n\n\"Anything I would be involved with?\" He asked \n\n\"Oh you will definitely have a part to play.\" I said and I gave Pamela a wink. Which got a giggle from her. \n\n\"When are you going to let me in on your plan.\" I took his hand and said.\n\n\"If your good I'll tell you this afternoon while we get ready for the party. Now lets eat I'm starving.\" We eat our lunch and drank the champagne. When we we're finished we walked out of the restaurant together I said to Pamela.\n\n\"When you find out how long you have to stay call us and let us now.\" We walked Pamela to her car and just as she was getting in I said to Bill. \"Give her a kiss good by.\" Bill pecked her on the cheek like a brother would. \"No Bill really give her a kiss like you would me.\" Bill looked at me and then at Pamela and then at me again. I could see he was trying to see if I was serious. So I said. \"Come on Bill, Pamela has to get back to work and we have things to do.\" Bill gave me one last look then took Pamela in his arms and kissed her on the mouth. She melted in his arms. Her arms went around his neck and his went around her waist. They kissed for a short time then when their lips parted Pamela rested her head on his chest and said \n\n\"That was wonderful I hope we can do it again sometime.\" Bill looked over to me and I nodded my head to let him know it was all right. He said to her. \n\n\"It was beautiful and I like to do it again.\" They step out of their embrace and Bill held the car door as Pamela got in and then closed it then moved over to me. We watched as she drove away. \n\n\"Would you like to tell me what that was about?\" He asked. I wasn't sure I was going to answer him just yet. I put my arms around his neck and pulled him down for a kiss. After we kissed for a while. He asked, \"Well are you?\" \n\n\"Not now after we get home I may, but you had better be good I don't want to spank you before the party.\" I could see a gleam in his eye. We got in our car and drove home. On the way I asked him.\n\n\"Do you think Pamela is pretty?\" He thought that one over then said \n\n\"Not as pretty as you but yes she's a very attractive woman. I'm surprised that she's not married yet.\"\n\n\"She's in love with some one that's already married.\" \n\n\"Really that's to bad. Are they having an affair? That's never a good thing.\" My poor innocent husband he had no idea. \n\n\"No they're not having an affair. She would, but he has eyes only for his wife, she says. He doesn't even know.\" \n\n\"Is it someone that she works with?\" He asked \n\n\"Yes. Why do you ask?\" \n\n\"Well maybe she'll get over him now that she changing jobs.\" I almost laugh. He really had no idea. \n\n\"Maybe. But we're going to have to take care of her. And see her though the hard part.\" \n\n\"Yea we should we could invite her over for dinner next week.\" We drove the rest of the way home in silence \n\nOnce we were back home I had Bill put on the cock ring and thong, he left on his stockings and garter I gave him the three-inch stiletto heels that went with the dress he would wear tonight. Then I said. \n\n\"Now Bill I want you to practice walking. Let's go down stairs, there's more room down there.\" I grabbed a pair of heels for myself so I could demonstrate for him the proper method. Bill reached the top of the stairs and stopped to remove his shoes. \"Glenda leave them on. I don't want you to take them off till I say so. Just take it slowly at first. The ball of the foot should land first.\" Bill took the first step hard I thought he was going to fall. He caught himself with the rail. His next step was better. He got better on each step. I had him climb the stairs and come down again. Then we worked on actual walking. I had him walk across the kitchen floor. Then I demonstrated his walk with my legs apart like he had done. \n\n\"Glenda have you ever seen me walk like this. You need to keep your legs together and your feet should land in front of you. Like you where waking on a line each foot landing on the line. And take smaller steps.\" Bill continued to walk back and forth but he was still taking too big a step. I had an idea. I had him stop and have something to drink while I went out to the garage. After I looked thought his golf bag I found a golf ball and returned to the kitchen. Taking the golf ball I stuck it between his ass cheeks and said\n\n\"Every time that ball falls out you get one crack from my crop.\" \n\nBill started walking back and forth again this time taking much smaller steps. He only dropped the ball twice that afternoon but it seems to work he was more graceful. After about an hour and a half of walking. I had him do the stairs again then once I was satisfied we went up stairs for make up training. I made-up his face explaining every thing I was doing and why, once I was done I had him scrub his face clean then I had him try it. We did his face four times till he started to get the hang of it.\n\n\"At four o'clock I had him shower and use the hair remover on his legs then I had him shave his pubic area his underarms and his face. At four thirty the phone rang it was Pamela\n\n\"Hello Pamela. Are you unemployed now.\" I asked\n\n\"Oh yes as soon as I hand my resignation in. They told me I could leave. They escorted me to my office had me clean out my desk and escorted me out the door. I'm at home now.\"\n\n\"I hope you're happy about this. I mean the job.\" I said \n\n\"If I was any more happy I would burst.\" \n\n\"And Bill's kiss was that what you had hoped it would be.\"\n\n\"It was better than I could have hoped. I wanted to do that for so long and having you there to say it was ok was even better. How did Bill take it? \n\n\"He was a bit confused. We've been very busy since we got home so I haven't had time to explain it yet. But I will before you come over. \n\n\"I don't want to seem pushy, but when do you think that will be.\" \n\n\"Your pretty excited aren't you.\" I asked \n\n\"Yes I am I've dreamed about this for so long. And now that I know it will happen I can hardly contain myself.\" \n\n\"Like I said before, there are some things you need to know before it can happen.\" Then I had an idea. \"Pamela do you have a computer and access to the Internet?\"\n\n\"Yes I do. Do you need something?\" \n\n\"Yes I need you to go to a couple websites and to look them over.\" \n\n\"Ok just give me the addresses.\" I told her the addresses while she wrote them down. \n\n\"After your done checking them out I want you to go to a chat room and just read what their talking about you don't have to say anything if you don't want to but if you have any questions don't be afraid to ask the most of the people in there are very help full. I gave her my password for the web sites and asked her if she understood what I was saying. \n\n\"Yes I understand. I'll do it tonight.\" \n\n\"If you don't find anything too offensive. Why don't you come over Sunday say about three and I'll explain everything and if you're still willing we'll see what happens. If you have any questions call me tomorrow around five.\"\n\n\"Ok I'll do that. And thank you again for everything.\" \n\n\"Your welcome dear.\" I hung up the phone just as Bill came out of the bathroom. \n\n\"\"Who was that on the phone? \n\n\"Pamela. She called to tell you that she handed in her notice and is now unemployed.\"\n\n\"I wonder if they gave her a severance too? He asked\n\n\"She didn't mention it so I doubt it. If she starts on Monday she won't miss a paycheck. If she can't we can pay her out of your severance. If that's ok with you.\" \n\n\"Sure I have no problem with that.\" Bill took the stockings that he was to wear today and sat at the vanity to put them on. \n\n\"Bill don't put them on just yet. Come here and sit on the bed.\" I went to the vanity and got my nail care supplies and a box of fake glue on nails I got yesterday and returned to the bed. \"Bill I want you to watch what I'm doing so you can do it your self the next time.\" I took Bill's hand and applied the glue and nails to each finger then after I allowed the glue to dry I shape them to the proper look and size. I coated them with a sealer then the first coat of the color, passion red. \"Don't let your nails touch anything. If they get smudged I'll have to start all over.\" While I wait for that to dry I started on his toes. His toes need a lot of work seeing that he never had a pedicure. After getting his toenails the best I could I but on the sealer and topcoat. Then I recoated his fingernails again. While we waited for those to dry I did my own nails in a soft pink. Mine wasn't as much work all I needed to do was a topcoat. I gave Bill's nails one last clear coat. \n\nOnce our nails where dry I put the cock ring on Bill. And had him put on his thong. \"Shouldn't I put on the stockings and garters first and then the thong?\" \n\n\"No it doesn't look right when the straps are threw the thong. When no one will see it it's ok. But we want to look our best when we take for our cloths don't we?\"\n\n\"I guess so? Are you sure your ok with this? I mean me having sex with another guy. It doesn't discuss you?\" I wasn't sure what Bill was looking for. Was it my permission or a direct order to perform? I hoped it was my permission because I wasn't going to order him to do it, that had to be his own choice.\n\n\"Glenda I want you to enjoy tonight. If you feel strange about having sex with Ginger tonight then don't. Do it because you want to or don't. I'm going to enjoy myself I'm going to eat pussy and have mine eaten. We started this because it was what you wanted. Please try to have fun I won't think any less of you because you enjoy yourself.\" I went to take my shower. This was something he had to work out on his own. I used the hair remover on my legs and shaved between my legs I stepped out and dried myself off. When in to the bedroom Bill was not there. I dried and brushed my hair and put on my make up. I put on stockings and garter my bra and my new dress. It was very sexy it stopped about a inch or two below the tops of my stockings when I sat you be able to see the straps of my garters and since I wasn't wearing panties you'll be able to see my hairless pussy if I spread my legs. I took Glenda's and my make-up and put it in an over night case I also put in Bill's razor, perfume and toothbrushes. I placed Glenda's dress in a garment bag with her heels. In a small suitcase I put a nightie for Glenda and myself I doubt I'll be wearing mine. I also put her falsies and clean panties a pink shorts set to wear at breakfast and some anklet socks and pink tennis. Bill came in the room, as I was finishing up. I asked him \n\n\"Where have you been?\"\n\n\"I called Jim to see what type of wine I should bring I put them in a cooler of ice. I also need to ask him about Pamela starting on Monday.\"\n\n\"You could have asked him that when we got there.\" I said.\n\n\"No he won't be there for the rest of this weekend Ginger will be there and I had to speak to Jim. I called Pamela to let her know that she can start on Monday. She thought that was great. When I said good-bye She said she'd see me Sunday. Did you invite her over on Sunday?\"\n\n\"Yes if it's ok with you. I think we should get to know her better. After all you are with her almost as much as you are with me.\"\n\n\" Well I guess your right there and she is a very nice person. We should get to know her better.\"\n\nHow much better I plan on us getting know her was beyond his understanding. I just hope she could understand our lifestyle and except it and maybe join in.? Looking at the clock I saw it was six pm time to get going. I said to Bill \n\n\"Let me put on your corset so you have more time to get use to it. But first put this bag in the car. Bill put on a pair of slacks and button down shirt and his running shoes. Picked up the bags and said\n\n\"There sure is a lot of stuff for one night. \n\n\"I'm packing for two girls there's going to be a lot more, now get moving. Oh and for the rest of this week end you can address me as Mistress.\"\n\n\"Yes Mistress. I'll put the wine in the car as well and be right back, Mistress.\"\n\n\"Please hurry. And try not to break a nail.\" I said as he left the room \n\nWhen Bill returned to the bedroom I had him remove his shirt and drop his pants. I had him hold the corset in place as I button it up this time I started from the middle first going up then buttoning down. This way it pushed his excess fat up to his breasts and down to his hips. He actually had hips and little tities, not enough to fill a bra. I told him so \n\n\"Look Glenda you have tities.\" as I pinched each nipple. \"Ok get your pants up and the shirt back on and let's go.\n\nAs we got to Jim and Jenny's house Bill back the car into the garage. I asked him why he did that. He said Jim told him to, so no one could see us unload suitcases from the car. I grabbed the garment bags and the overnight case while Bill took the cooler and the small suitcase. We were met by Ginger at the door from the garage and shown to the guest bedroom. \n\nGinger was very pretty I could see she worked to make herself look as female as possible. Her hair was her own. I always thought that Jim's hair was a bad cut or that he always need a hair cut I could see now that it was cut in a feminine style but forced in to a mans style It had lots of waves but for a women it was short. On him or should I say her it was very becoming. Her dress fit her to a tee. It was teal green with sparkles with a v-neck that suggested she had real breasts they were kind of small but they fit her body perfectly. Her makeup was impeccable as good as my own and far better then Bill could do. Her dress stopped three-inches from the knee. Her legs where beautiful I know women that would kill to have legs that nice. She wore three-inch stiletto heel pump in teal green. \n\nBill stared open mouth at her amazed, as I was, on how gorgeous she looked. If I didn't know she was a he I would have bet money she wasn't. As she show us the way to the guest bedroom her walk was perfect she had a slight wiggle to her hips but not overly so. The only way I could describe her was that she was all women. After showing us the bedroom she said. \n\n\"If there is anything I can get you please feel free to ask. And Bill if you wish I'll take the cooler to the kitchen.\" Bill was so awe struck that he forgot to leave the cooler in the kitchen. Bill handed over the cooler without saying a word. And Ginger left. Now I knew why they separated Ginger from Jim. They where two separated people. After Ginger left Bill finally found his tongue and said. \n\n\"That was Jim wasn't it? She looks so real. I can't believe that's the same person.\" I said \n\n\"No that's not the same person. When Jim becomes Ginger he's not only put on the cloths he puts on the mannerisms of Ginger. She's gorgeous I'll tell you I could be jealous of her.\" \n\n\"Yes she is isn't she? She's better looking then a lot of women I know and a hell of a lot nicer then most women I know.\" Jenny said as she walked into the bedroom. \"Hi I couldn't help over hearing I was right out side the door. I always like to hear someone's first impression of Ginger. She quite a girl isn't she?\"\n\n\"Absolutely lovely. If I didn't know better I would not have guessed. She could pass out in public very easily.\"\n\n\"Oh she has on many occasions. She has her own driver's license and credit cards. She even pays taxes.\" Looking at Bill she said. \"She can help you be more womanly if you like just ask her. Not that I'm trying to push you into something. But if your going to dress like a women you should also become a women.\" Walking over to me she kissed me on the lips nothing sexual and said. \"Thank you for coming.\" She did the same to Bill and said. \"If your going to get dressed I think you should start? Dinner will be ready in half an hour and I would like cocktails before. I'll leave you two alone and go see my lovely Ginger. \n\nBill stripped out of his man cloths and put on his bra and breasts. He then put on the dress and heels. Once he was dressed I put peril studs in his ears and a pearl necklace around his neck. I put on his make-up and his wig. Once we were done He stood in front of the mirror and said. \n\n\"Compared to Ginger I look like a guy. She was so pretty.\" I could see Bill was depressed with the way he looked he wasn't that bad but he was no Ginger that's for sure. \n\n\"Look Glenda you have only been a girl a few times she's been doing this for years. As we do this more we'll get better and you can get Ginger to help you. I'm sure she'll tell you her secrets. I'm sure she has a lot of them.\" I could see that what I was saying wasn't helping. I tried to console him for a few minutes more then I said, \"Look if you want take off these cloths and go home, then go. I'm going in there and I'm going to enjoy myself but if you stay here you will at lease act like your having fun.\"\n\n\"Sheri. I mean Mistress. How can I go in there when She looks so much better than I do?\"\n\n\"Glenda not all women are drop dead gorgeous we all have our flaws. I'm short I'd like to be six foot tall and have long legs, but I don't I make the best with what I got. You have two choices change and go home or come out and enjoy your self. Make up you mind. I'll be in the living room.\" I said as I walked out the door. \n\nI walked in the living room and Ginger asked what I would like to drink. Not being a drinker I asked for a white wine. Then she asked. \"Where's Glenda.\"\n\n\"In the bed room feeling sorry for herself.\"\n\n\"Why's that?\" Jenny asked. \n\n\"She's upset because Ginger looks so much better than she does. I getting tired of her whining.\"\n\n\"Should I go talk to her. I'm pretty pervasive. After all I am a lawyer.\" Ginger asked \n\n\"No. She is going to have to make up her mind once and for all if she really wants this. We can't keep talking her into something she wants. Either she wants it or she doesn't. I'm not going to force her. She has to want to do this if she's going to enjoy it.\" Jenny handed me another glass of wine. \"No I already have one.\" I said \n\n\"No you don't dear you already finished that one.\" I looked at my glass and saw it was empty.\n\n\"I'm so upset with her I did even realize I drank it.\" \n\n\"I know dear it was the same for me the first time Ginger was to meet someone else \"\n\n\"How did you get him to come out?\"\n\n\"The same way you are doing it. I told her either come out or go home. But if she went home I wasn't following after her.\" Then Ginger said.\n\n\"Shush she's coming.\" I could hear heels clicking on the tile floor. I whispered to Jenny \n\n\"What should I do now?\"\n\n\"Nothing treat her as you would any other girl that would come to a party. Just follow our lead.\" Just then Glenda came in to the room. \"Glenda so good of you to come. Come have a glass of wine.\" I could see Glenda was a little unsure on how she would be treated. I wanted to throw my arm around her. And tell her how proud I was of her. But I couldn't. She stood by the door with her hands clasped in front of her. She was blushing like a new bride. Ginger walked over to her and took her by the hand and led her over to the bar. She handed Glenda a glass of wine. ",
        "We made small talk. Ginger slowly got Glenda talking and adding to the conversation. Then she said. \"Dinner should be done will you excuse me while I finish it up. Glenda would you like to help?\" She shook her head yes and followed Ginger into the kitchen. Jenny tuned to me and said \n\n\"There that wasn't so bad. I was really proud of you. You wanted to run and hug her didn't you?\"\n\n\"Yes I did how did you know.\"\n\n\"I have been there I wanted to do the same when Ginger came out.\" She took my hand and said, \"You know she doesn't look that bad with a little work from Ginger I think she could go out in public without worry.\"\n\n\"I know she had potential but she just can't see it.\" I said as I moved closer to Jenny. She put her arm around my waist and said. \n\n\"Once we get her to where she can pass as a girl then we'll take her to Key West and let her walk around down there and take her to a few of the clubs. That will build up her confidence.\" We stood very close but neither of us made a move to kiss we didn't want to spoil our make-up just yet. \n\nDinner was superb. The table was set beautifully. With candles and flowers. That I later found out were arranged by Ginger. This girl could put that bitch Martha Stewart to shame. Glenda handle the meal well sitting very properly. Mostly because of the corset. You could see she was mimicking Ginger in the way that she ate and drank. She didn't add much to the conversation but she wasn't distant either she was paying close attention to what we were saying. After dinner we all helped clear the table and the Ginger told Jenny and I to go in the den. While she and Glenda prepare dessert. I said to Jenny \n\n\"She can be pretty bossy can't she?\" \n\n\"She can be down right bitchy if things don't go the way she wants them too. \" \n\n\"Yes and if you two don't get out of here I'm going to take a broom to you.\" This had us all laughing until Ginger got the broom from the closet. And swatted our backside as we scurried form the room. \n\nThe den was more an entertainment room then a real den. It had a large screen TV in the corner and a state of the art stereo system. Large cushy chairs and love seats. There where big square pillows on the floor. A bar in another corner. There was a pool table that took up a large portion of the room at one end. And in the center of one wall there was a large stone fireplace. That had a small fire going in it. The only light came from small-candled sconces that decorated the walls. It was a cozy room and romantic. \n\nJenny came to me and slid her arms around my waist as I put mine behind her head. Our lips met. Her tongue pushed it's way into my mouth. Her hand griped a butt cheeks, one in each hand, and pulled me closer to her. Our tongues battle each other till mine succumbed to her supremacy. I sucked on her tongue as I would a small penis. We held our kiss as she groped my ass till I heard behind me. \n\n\"That's not quite the dessert I had in mind.\" As we separated from each other. I turn to see Ginger and Glenda standing by the bar with a tray each. One holding coffee and the other what looked like pie. Jenny exclaimed \n\n\"Did you make my favorite?\"\n\n\"Of cause chocolate truffle with home made whip cream.\" Ginger had Jenny and I set while Glenda served coffee and Ginger the pie. Glenda sat across from me next to Ginger on a love seat. One leg folded below the other as she sat on the edge of the chair very lady like. I wonder where she learned that. I said to Ginger.\n\n\"This pie is wonderful in fact the whole dinner was supreme. You are a wonderful hostess.\"\n\n\"She is wonderful isn't she? I let her plan all our dinner parties even if Jim is going to be there.\" Jenny said. I could see that Ginger was blushing from the compliments but she was also thrilled to get them. \n\nAfter I had finished my dessert I went stood to take my plates to the bar Glenda jumped up and tried to take my plate from me. I waved her off and continued toward the bar I found Glenda had followed me I said to her in a whisper.\n\n\"Is everything ok are you happy you stayed. \"\n\n\"Yes Ginger's been so nice she has even taught me a few things all ready. Like how to sit. But she hasn't even tried to kiss me yet.\" Oh brother now she was sounding like a girl on her first date. \n\n\"Don't worry about it she's trying not to scare you just relax and when you stand next to her you could take her hand in yours. That will let her know that you are comfortable with her.\" I walked back to sit next to Jenny. Ginger asked me \n\n\"Is everything ok.\" \n\n\"Everything just fine.\" Glenda took Ginger's and Jenny's plates and put them on the tray by the bar then she returned to sit next to Ginger. I took Jenny's hand in mine and held it. Ginger turned to Glenda and said something softly to her so softly I couldn't hear. Glenda nodded her head and smiled. Ginger turned to us and said \n\n\"If every one's done I'll take the trays back to the kitchen.\" Glenda took Ginger's hand in hers and said \n\n\"I'd like to help.\" I could see a surprised look in Gingers face and Glenda looked like she could just squeal with delight.\n\n\"Of cause you can. Come along then.\" Ginger stood, as Glenda followed never letting go of Ginger's hand. I was looking down at the floor when I felt Jenny squeeze my hand I turned to look at her, then she nodded toward the bar. Glenda and Ginger were starring into each others eyes Then I saw Glenda lean in to Ginger almost tentatively as if to pull back quickly if Ginger made any move to rebuff her. Then their lips touched just slightly then she pulled back slightly, kind of like a swimmer testing the water with the toe of their foot. \n\nThen Glenda leaned in again and there lips met. It wasn't an open mouth tongue swapping kiss but a sweet first time kiss that a girl remembers for a long long time. With in seconds they separated. Glenda face was flush with embarrassment. Ginger put her hand to Glenda's face and said something I couldn't hear and they kissed again. This time Ginger put her arms around Glenda's waist and pulled her toward her. This time it lasted a lot longer and I'm sure tongues where involved. Finally they separated and look at Jenny and I. I could see they where embarrassed by their display of affection. Tears where welling up in my eyes. They gathered up the trays and quickly left the room. Taking my napkin I dapped at my eyes removing the tears when Jenny asked.\n\n\"What are you crying about?\"\n\n\"That was the sweetest thing I ever seen.\" I said then Jenny said \n\n\"You silly fool kiss me before I start crying.\" I crawled on to her lap and kissed her. We continued kissing until Ginger came back into the room and said.\n\n\"I put a something for each of you in the master bedroom. Please go in and change and no funny business.\" Jenny said \n\n\"Oh god we're not doing what I think we are?\"\n\n\"Yes we are so just get changed and enjoy it.\"\n\n\"What's going on? And where's Glenda?\" I asked \n\n\"She's in the guest room waiting for me to help her change and take that god awful corset off her. How could you make her wear that?\" Ginger said as she started to walk out of the room. In my defense I said.\n\n\"She needed something so the dress looked good on her.\" Ginger turn to me and said\n\n\"No you needed to get a dress that fit her properly.\" I was stunned in to silence. Jenny came to my rescue sort of.\n\n\"Ginger. Sheri is a guest in this house, behave yourself.\n\n\"Your right I'm sorry I really shouldn't be cross with you. You tried the best you knew how.\" I wasn't sure but I don't think that was an apology. \n\n\"Well if you so good then teach her. And me as well.\" I could see that Ginger was getting her anger under control. \n\n\"I will and within a month I'll have her waking down Main Street hearing nothing but whistles from the construction workers.\" She walked out of the room with out another word. \n\n\"I think Ginger's got herself a little project on her hands.\" Jenny said \"I'm sorry about the way she turned on you I never seen her so upset before.\"\n\n\"She was quite upset. I think she was mad at me. If she can do better and obviously she can then she's welcome to try.\" \n\n\"If that's settled we better go change if we know what's good for us.\" Jenny said\n\n\"What's this about? The changing I mean. \n\n\"Ginger wants a pajama party. She loves them. She has them whenever we have company that's in to cross-dressing. And she hasn't had one for a while so I should have seen this coming. Let's get changed before she throws another fit.\" \n\nWe stood and I followed Jenny to the master bedroom. Hanging on the closet door were two satin camisoles and a matching pair of tap pants one in lavender and one in yellow. On the floor under each was a pair of hi heeled slippers. Jenny stripped down. Handed me a hanger to hang my dress on. I put on the yellow one and Jenny the lavender one. We went back to the den and Jenny told me to sit on a pillow on the floor. After getting us both a glass of wine. She sat down next to me. \n\nA few minutes later Ginger came in holding Glenda's hand. Glenda was wearing a red satin camisole and tap pants and Ginger was in a pink set. Her wig was gone. Her hair was slicked back in a butch style with waves. Her makeup was totally different then the way I had done it. Her eyes were bigger almost doe like and her lips looked smaller more feminine. She now wore dangly earrings. I have to admit that Ginger did do a better job on her than I did. Glenda was looking at me hopefully.\n\n\"Glenda. Wow. You look great. Ginger did a much better job then I did.\" \n\n\"It's ok? You don't mind she changed it. She says when my hair grows longer we can do other thing with it.\" \n\n\"Obviously Ginger's better at makeup then I am so you listen to her.\" Ginger took my hand and said\n\n\"I have more practice at changing a man into a women that you do. You have only changed a woman into more beautiful women. Don't be mad at me. And I'm sorry for my behavior before it was uncalled for.\" \n\n\"I forgive you. As long as you keep helping Glenda.\"\n\n\"Ok can we get this party started?\" Jenny asked. \n\n\"Yes please I want to have some fun.\" I said as Ginger got up and returned with an empty wine bottle. \n\n\"Ok. Were going to play spin the bottle. With a twist.\" Ginger said as she pulled a deck of cards out of a draw. \n\n\"When you spin you have to kiss the person the bottle lands on. That person pulls a card from the deck. You have to kiss that person for as many seconds times five that's on the card. Now here is the twist. Once that person is kissed the next person has to go lower if you get my drift. And a kiss is the same as a suck. Any questions. None ok lets get started. Everyone pick a card the person with the highest number spins first.\" \n\nI picked a seven. Jenny a four, which didn't make her happy. Glenda a nine and Ginger a two. Glenda spun the bottle and it landed on me. I pulled a card from the deck it was a four, twenty seconds. Glenda took me in her arms and kissed me her hands never once touched any part of me except my back. Her tongue stabbed into my mouth with passion. I return the passion I felt. No matter what happens in my life kissing my husband has to be the most romantic thing I can do. Twenty seconds went by to quickly for me. It seemed like we just got started when it was over. \n\n\"Times up ladies.\" Ginger said looking at her stopwatch.\n\n\"You know Ginger I'm starting to think you really are a bitch.\" I said half jokingly. \n\n\"Yea I know don't worry it'll get worse. When some one goes down lower and they just get started and she stops them. I've called her all kinds of names they don't even phase her.\" Jenny informed us.\n\nGinger spun next because she was sitting next to Glenda and this way every one gets to spin. Her spin landed on Glenda. She handed me the stopwatch and Glenda pulled a seven. They kissed for thirty five seconds I could see Glenda was really getting in to it. She was moaning and her hands where running up and down Ginger's back. \n\n\"Times up.\" I said Ginger pulled her self away but Glenda wasn't ready to quit. After they parted she shot me a scowl. I waved the watch at her and smiled. She calmed down and smiled back. Next Jenny spun it landed on me. \n\n\"Alright.\" I said as I started removing my top.\n\n\"As much as I'd like to be one the to kiss your beautiful breasts I'm afraid the neck is next.\" I gave her a pouting look. \"I'm sorry but that's Ginger's rules.\" \n\nI pulled a three. Jenny kissed and sucked my neck for the require fifteen seconds. It was nice put not what I was after. I spun next. My spin landed on Ginger. She pulled a five. She handed the watch to Glenda as I pulled her to me and I put my lips to hers I heard the watch click I shoved my tongue into her mouth and she responded to it sucking and flicking it with her tongue. Twenty five seconds when by in a flash. I pulled back when Glenda called time finally taking a breath dam that girl can kiss. Glenda's spin landed on Jenny.\n\n\"Well it's about time. Come here my love and kiss me.\" She pulled a six. They kissed for thirty seconds I could see they really enjoying themselves. The bitch with the watch called time. Ginger's landed on Jenny again this time she pulled an eight. Giving the watch to Glenda Ginger attacked Jennie's neck for forty seconds she must have been good at it because Jenny sure seem to enjoy it. Jenny spun next. She got to work on Glenda's neck for twenty seconds. I got Gingers neck for ten. Then Ginger said. \n\n\"Ok now that we're all even we can pull off your tops.\" When Ginger removed her top I did a double take she had breasts not real big ones maybe an A cup if that but they were real. I could see Glenda was starring at them too. I wanted to reach out and touch them. Put I knew that would be impolite.\n\n\"Ok I know that's not make-up.\" I said which got a laugh from Jenny and Ginger.\n\n\"No dear that's not make up their real.\" She said as she reached over and fondled one of them. I could see that Ginger got excited when she did it. \n\n\"If you don't minded explaining how she got them I'd like to know.\" I asked\n\n\"Well Ginger did a lot of research in to the study of sexual reassignment she wanted to be the best girl she could be but he needed to stay as manly as possible. Because of his sister.\"\n\n\"You have a sister? Your mother never mentioned her. She speaks of you as an only child.\"\n\n\"Gwen, that's my sister and I use to be real close. We still are. My mother doesn't know this but I put her though collage and supported her while she was going. At eighteen she told my mother that she was a lesbian. After my mother consulted a number of doctors and psychologist about fixing my sisters problem as my mother put it. She decided that if she disowned my sister that would put her on the straight path. Well my sister split and they haven't spoken since. I know it kills my mother every time Gwen's name comes up but she won't reconsider. So since I have three times as much money as my mother does and when she dies it comes to me. I'm giving it to my sister. So for that reason I don't want her to find out about my life style. And I don't want to really be a women full time. Really I just like to dress like one. I love the cloths. And these.\" she said as she lifted up her breasts. \n\n\"Are so I don't have to wear those silicone bags. They just don't look right. While I'm dressed like a man I wear a reducing bra that makes me look like I have a well-developed chest. It's skintight and the same color as my skin. No one can tell unless I let them get real close.\" \n\n\"Are they implants?\" Glenda asked \n\n\"No there all me I got some hormone injections in the breast area that stay just in the breasts. They didn't get very big but I didn't want to get big ones, I just wanted something I could put in a bra that would fill out my dresses. And I didn't want any thing that would take away my ability to get and retain an erection. Jenny still likes a good roll in the hay from Jim once in a while. These are as big as I can grow them with out taking massive does of hormones and they have side effects. But they're just what I want. The added bonus is their very sensitive. Ok back to the game.\" Glenda spun and it stopped on Jenny. \n\n\"Dam I wanted to have her.\" I said \n\n\"Don't worry dear when we stop playing this silly game you can have all of me.\" Jenny pulled a ten and Glenda went to work. Fifty seconds later She had Jenny panting and begging for more. Ginger spun and it landed on Glenda. She pulled a four. I could tell that Gingers sucking really wasn't doing much for Glenda. Jenny spun and it stopped on me.\n\n\"What are face cards worth?\" I asked \n\n\"There are no face cards, this deck is only used for this game.\" Ginger answered\n\n\"Ok come on ten.\" I said as I pulled a card from the deck I pulled an ace. \"Don't tell me this is a one. If you do I'll cry.\" \n\n\"No that's a full minute card. Lucky bitch.\" Ginger said as Jenny stuck her tongue at Ginger.\n\n\"Come here you lovely women come and suck my titties.\" Jen came over smothering my tits with kisses, licking all around in a spiral course ending at the nipple of my left breast she sucked into her mouth and sucked hard on it, grazing the nipple with her teeth she bit down on it making me groan in pleasure. Just then the bitch with the watch called time. \n\n\"No way that was no minute you cheated.\" Both Glenda and Ginger laugh. Then Ginger said \n\n\"See I told she'd say that. A minutes is never long enough.\" \n\n\"This is terrible game. Jenny how can you let her play it?\" I asked \n\n\"It's her party she can play if she wants to.\" Jenny sang to me\n\n\"Give me that bottle and let's get this game over with. So we can get down to some real action.\" My temper was starting to ignite I was use to getting sexual satisfaction when I wanted it and right now I wasn't getting it I was frustrated and horny. I spun and it landed on Jenny. \"Don't tell me the belly right.\"\n\n\"Yep. And no sneaking your hands any lower.\" The bitch with the watch said.\n\nJenny pulled a six. For thirty seconds I bath Jenny tummy with my tongue. I could smell her arousal coming from between her legs drifting up from the satin tap pants. If I could just sneak my tongue down just little \n\n\"Time.\"\n\n\"Dam this frustrating.\"\n\n\"That's part of the fun Sheri It keeps you at a sexual peak.\" Ginger sure loved this game. \n\nGlenda spun and it landed on me. I pulled a two. She worked her tongue all over for ten second, which did nothing for me I just wanted to shove her face between my legs. Ginger spun and it landed on Jenny. I heard a groan from her. \n\n\"I lose a turn.\"\n\n\"How come?\" I asked \n\n\"Because no one can take off their pants till everyone is ready. And Glenda still has a belly and I still have breast and belly.\" Ginger explained \n\nJenny spun and it landed on Glenda. She spent forty-five seconds on Glenda's belly. I spun and it stopped on Ginger. I crawled over to her ready to devourer her little tits. She pulled a ten from the deck. I almost rejoiced fifty seconds I could spend driving her crazy. I licked all over them I could tell they where very sensitive. I took one of the nipples in my mouth the one with the slave ring and sucked it like a babe looking for food, I sucked and bit. I was just reaching for the other when Glenda said \"Time\" Ginger look down at me and said \n\n\"That was really nice we could do it again later.\" \n\nGlenda spun and it stopped on Ginger again. I think he did it on purpose. He sure seemed happy that he did. While I held the stopwatch. Jenny slide up next to me and said \n\n\"Did you like my ring?\"\n\n\"I wanted to talk to you about that. Reminded me later. Time.\" Jenny slide back to her position. \n\n\"Ok every one pants off.\" We all removed our tap pants and I could see Glenda's cock was soft and her cock ring was missing. \n\n\"Glenda where's your cock ring.\"\n\n\"Ginger took it off and taught me a few thing to keep it down. I'm doing pretty well. Should I go and put it back on.\" I was amazed he wasn't hard as a rock. I know my pussy was dripping like a soaked sponge. I looked at Ginger her eyes were avoiding mine. ",
        "\"Isn't any of this exciting you?\" I asked Glenda.\n\n\"Yes it all very exciting and I'm working real hard to keep it down. But I don't know how much more of this I can handle. \n\n\"You go head and relax if you get hard that's ok. I am very proud of you for showing such control.\" As soon as I said he could relax his cock started swelling. It always amazes me that Her cock can grow so big. When her cock is soft it only measures around four inches long and about an inch thick. But when it swell's to its massive nine inches long and fat. I have never measures its thickness, but it's a little thinner than a coke can. Watching it swell is always an erotic experience for me. I looked over at Ginger and her eyes where staring right at Glenda's cock. Jenny was also staring. I saw both of them lick their lips. \"If you ladies can tear yourselves away from staring? I'd like to finish this game.\" \n\n\"Come on you can't expect us not to stare that was an amazing event I've never see anything grow that big so quickly.\" Ginger said. \n\n\"Well Ginger if you get lucky you can see how it tastes now spin.\" I said I was hoping that she wasn't that lucky on the first spin. Ginger was lucky it landed on Glenda. And to top it off Glenda pulled a ten. I held the watch as Ginger got between her legs. Ginger hand reached for Glenda's cock I could see her hand tremble slightly. Just as Ginger's tongue touched her cock I started the watch. Her tongue swirled around the cock getting it moist then Ginger placed her mouth over the tip and suck it in. Her mouth slid down the shaft taking in about a third of it. She pumped that third in and out of her mouth then started to go lower. I knew from personnel experience that she was getting it wet so it could slide easer. I could see Glenda was loving the feeling of that mouth. Ginger was getting up a good head of steam when I called time. Glenda and Ginger both groaned when she pull her mouth off.\n\n\"Ginger that was great I thought you were going to get it all in your mouth.\" \n\n\"Nobody can take all that meat in their mouth and not choke.\" \n\n\"I can, right Glenda.\" I said with pride. \n\n\"Sheri I'd pay good money to see that.\" Ginger said I could see the doubt in her eyes. \n\n\"If you would like me to demonstrate I will.\" I said as I leaned over to take the cock in my mouth. \n\n\"Oh no you don't it's my turn to spin and Glenda's had her turn in that area. Now lets move on. She can demonstrate her abilities some other time.\" Jenny said very adamantly. Jenny spun the bottle and it landed on me. \n\n\"Oh right. If I can pull another ace I you try real hard I could get off.\" Every one laughed because my luck wasn't that good tonight. And It didn't improve I pulled a two. \"Dam only ten seconds.\" Jenny got between my legs and her mouth went straight to my clit. She was out to give me as much pleasure as she could in those few seconds. She sucked my clit hard and flicked it with her tongue. Then the bitch said time. Jenny looked up at me her chin was covered in my cream. As she picked her head up, her tongue stuck out and she licked up my entire slit.\n\n\"Jenny no cheating.\" Ginger scolded \n\n\"I was just taking a taste that's all.\" She told her with a grin on her face. \n\nI spun next it landed on Ginger. Her cock was not as long as Glenda's or near as fat. It wasn't bad though. So I figured I could deep throat it pretty easily. She pulled a seven. I took a drink of my wine to get my mouth nice and wet. Then I got between her legs and leaned her cock to me. I only had thirty five seconds so I worked as fast as I could I took him straight down to where It hit the back of my throat I sealed my lips to the shaft and sucked as hard as I could while sliding my lips up the shaft. When I reached the head I slip back down letting the head pierce my throat. As I pulled back up I swirled my tongue around the shaft as best I could then I slip back down taking the whole length in as my lips rested on her hairless pubic bone I swallowed. I could hear groans coming from somewhere. I swallowed again and the groans repeated. I heard Glenda say time as I slowly very slowly pulled my mouth from her cock sucking and swirling my tongue as I went. Her cock popped out of my mouth. I sat up and smiled at Ginger. Sweat was pouring off her face and she was panting I could tell If I had a full minute I could have made her cum. \n\n\"Dam your good. I bet you can take Glenda all the way down.\" Then she turned to Glenda and said. \"Does she do you often.\" \n\n\"Quite often she really likes sucking cock.\"\n\n\"Girl you lucky you still have a cock left. I thought she was going to suck it off. And I do mean off. \"\n\n\"Ok girls I'm good at sucking cock I take pride in a job well down.\" \n\n\"You must be a killer at work.\" Ginger said. I love the praise I was getting. Glenda's spin landed on Jenny and she pulled a five. Glenda did her best but there's only so much you can do in twenty-five seconds. After Glenda was finished I said \n\n\"Ok now can we get to so serious playing?\"\n\n\"We have one more spot then we'll be finished.\" Ginger said as she spun the bottle again and it stopped on Glenda. \"Roll over sweetie.\" Glenda pulled an eight as she rolled over on to her tummy. Jenny slid over to me and kissed my neck and said \n\n\"I'm so horny I could scream I hope this ends soon. What Glenda did was great but not near long enough.\" I could feel her hard nipples on my back. \n\n\"I know what you mean my cunt's on fire. Time.\" Jenny moved back and spun it landed on Ginger. She pulled a nine. Glenda sat next to me as I kept time \n\n\"Are you having fun love?\" \n\n\"Yea this game is a good ice breaker. If we all got naked and had sex I don't think it would have been that much fun. But getting to know each other before really helps.\" He had a point; I didn't look at it that way. Ginger came though again. That girl knows what she's doing. \n\nI called time and spun the bottle I landed on Jenny. She rolled over after pulling a ten. I licked up the crack of her ass and then spread the cheeks. I placed my tongue on her rose bud and swirled it around getting as much moisture as I could on it then I rolled my tongue it a tube and stabbed it at her hole. My tongue parted her hole easily. I pumped it in and out. Then I placed my lips on the rose bud of her hole and hummed. My tongue kept up it's pumping and the humming sent vibration to her. I could hear her moaning then she started pushing her ass back into my face. \n\n\"Time\" \n\n\"Shit that was the best rim job I ever had.\" Jenny exclaimed, \"You can do that again anytime.\" It took five more spins for some one to finally stop on me and Ginger was the lucky girl to do it. She licked and sucked my hole for forty seconds it was superb. I said to Glenda \n\n\"Your in for a treat sweetie she has on hell of a good tongue. \"\n\n\"That's the end of the game.\" just then the phone rang. Jenny went to the bar to answer it as Ginger continued talking to Glenda and I. \"Did you two enjoy it I know it's silly and frustrating.\" She said looking at me. \"But it's a great game for first timer's and I knew you two have never been to a swapping party.\"\n\n\"If it was minutes instead of seconds we could have more fun.\" I said\n\n\"We tried minutes but then it takes two long. And the other couple gets bored.\" \n\n` \"Gin, Cheryl and Sandy are coming to visit next week they want to know if we could get together for a party. Cheryl would like Babbitt to be here if it's ok. What do you say?\" Jenny asked \n\n\"Its ok with me Babbitt loves Cheryl. See if we can invite Glenda and Sheri.\" Then she said to me \"you two will love Sandy and Cheryl. Cheryl has a ten-inch cock that drives me wild. It's not that fat but it get deep inside you. If that's ok with you two about coming I mean? You don't have to make a decision right now.\" Jenny came back over and said.\n\n\"They'll be here next Friday for the long weekend. And come over Saturday for the party about three. And they'd love to meet Glenda and Sheri. Charles, that's Cheryl, was transferred to New York just after Christmas. Now there's a party I will never forget.' Jenny sat down behind me and put her hands around my waist and kissed my shoulder. \"Ginger are we done playing games.\" \n\n\"Yes we can enjoy each other now. I'm going to get some wine does any one else want any thing.\" We all gave are glasses to her. I notice Glenda putting her camisole and tap pants back on. \n\n\"Honey what's wrong\" I asked her. \n\n\"Well it's. It's just.\" She was a little embarrassed and stuttering. Then Jenny said \n\n\"She feels embarrassed that she doesn't have tits so she's wants to wear the camisole to feel more feminine.\" Glenda nodded her head shyly. \"It's ok you do what ever makes you feel comfortable. It was the same way with Ginny before we got her tits. Now I can barely keep cloths on her. I swear she'd walk down Main Street topless so every one could see she had tits. She could be a shameless hussy some times.\" \n\n\"Where was that done? I asked \"Is it safe?\"\n\n\"Ginny has had hers for two years now and hasn't had any problems. We when to Jamaica to have it done. It's not approved in the U. S. Probable never will be it doesn't make breasts bigger or firmer it just give breasts to people that don't have any.\" Jen was running her hand all over me as she was talking I really wasn't paying much attention. Ginny came back with the wine and sat down next to Glenda. She took Glenda's hand in hers and said \n\n\"If you don't want to do any thing we don't have to. I know you've been through a lot in the past week. We could go watch TV if you would like.\" Ginny was trying to be gracious and not scare Glenda off I could tell she wanted her. She wanted her ever since Glenda's cock became erect. Glenda must have known it too. She took Ginny's other hand in hers and pulled her closer and kissed her on the lips. Their hands released and then they embraced their lips never parting. They laid down side by side still kissing. Glenda's cock was hard in his tap pants and Ginny's was rubbing against it. Jenny still running her hands on me and kissing my neck whispered.\n\n\"Do you want to make love with me or do you want to watch.\" I moved my arm behind me and cupped her pussy with my hand and asked.\n\n\"Can't we do both?\" She laid me down on two pillows and laid down next to me. I knew I couldn't ignore her any longer nor did I want to. I pulled her head to me and kissed her sweet lips. Her lips were soft, softer than any man that kissed my lips. Her tongue was smaller that any man's but just as force full. She thrust it into my mouth. My tongue battled with it as my hand gripped her firm ass cheeks so I could pull her closer to me. Our breasts rubbed up against each other as our nipples grazed passed each other sending chills threw me. Her mouth moved from mine as she planted kisses on my eyes and nose, cheeks, and forehead. \n\nHer mouth drifted down to my neck leaving kisses from ear to ear. Her hand cupped my right breast. She massaged it and needed it like bread dough. Her mouth moved down to my breast she licked and kissed them. She left little bites here and there. I held her head in my hands as I watch her make love to my breasts. Her mouth would move from one to the other. She would work her way from the base of one till she reached the top the epicenter the very nipple itself then quickly dart to the bottom of the other breast. \n\nShe would look up at me. Her eyes a vivid blue the whites shone brightly as she kept looking at me daring me to look away. I couldn't pull my eyes away from her face. The face that promised so much love so much pleasure. \n\nI could hear moaning from Glenda she was receiving pleasure. I want to see but I couldn't tear my eyes away from my beautiful Jenny. And she knew it. She knew she had me in her spell. A spell that promised pleasure. Her thigh fell between my legs and rubbed against my hot, wet pussy. I couldn't help myself I humped my pussy against her leg like a dog humps it's master leg. Soaking it with my juices. A knowing smile came to her lips. A smile that said you are mine, you belong to me. \n\nA smile that promise ecstasy. Her tongue suck out of that smile as it flicked out to my tender hard tight nipples. The touch of her tongue to my nipple sent a jolt of electric bliss to my brain. My pussy screamed for some of the same. It found pleasure humping her thigh but no release. Her lips encircled my nipple I knew it would not be long now I waited for that sweet gently sucking to begin. \n\nBut still I was deigned; her lips only caressed my nipple. No sucking no biting pinching or pulling only the sweet caress of her full lipstick red lips. Her eyes still held mine. \n\nGlenda groaned. She panted, her breathing was rasped with pleasure but how was she receiving it. Was Ginny sucking his fat hard cock? Was he receiving from her that which I loved to do? Or was she being fuck, was Ginny's hard cock thrusting in and out of her ass. Would she orgasm with his cock up her ass. Like she did when I fuck her sweet ass. I didn't know, I couldn't escape the piercing blue eyes of my mistress, my pleasure giver. My sweet, sweet Jenny.\n\nShe could hear Glenda groans of pleasure; She knew I wanted to see her in the throes of orgasmic bliss. But She held my eyes with hers. She deigned me even this. Then I felt it the slight suck, the gentile pull of my nipple into her mouth. It was brief but it was wonderful. I felt it again a little harder this time. She sucked even harder pulling nipple into her mouth, her tongue flicked it as the aurora grazed passed her teeth. \n\nGlenda was cumming now I heard her say so she grunted as each jet of cum left her hard fat cock. But how was it leaving her, was Ginny sucking down her hot salty cum. Was he spraying it all over him self and Ginny as she fucked him in the ass. I didn't know I didn't care my mistress my Jenny was sucking my nipple and that's all I cared about. \n\nMy back arch as I tried to get more of my nipple into her mouth. I open my mouth to tell her to suck harder, but only a moan escaped my lips. I want to yell suck it harder bitch, but only whimpers and moans could be heard.\n\nJenny continued sucking and biting my nipple while the other one was being twisted and pulled and scrapped by the long nailed fingers of her hand. Then I felt it. No this couldn't be happening. It never happen before. Never had it happen before not even close. But there it was the tingling. In my toes. It was the sign. The sign I always look for. The one that tells me I'm close. But yes it was there it was spreading threw my feet. \n\nWas she a magician? A wizard a witch. Did she do this on propose. I don't know I didn't care. She was doing something that no man ever done before. The tingling was now in my legs and soon it will be in my pussy where it will shot straight to my brain and explode in climax. \n\nBut no wait it was passing my pussy it was going higher to my breasts to my tits. This was different this was special. It was now in my breast was she trying to suck it out of me. No it's mine. It flared out exploded. My body shook, convulse. My breathing stopped every muscle in me tensed up my back arched wordless noises escaped my lips as an orgasm more powerful that any I could remember seized my body and wouldn't let me go. My eyes closed as my body went limp. \n\nMy eyes slowly open to the yellow flickering of candle light from the surrounding walls of the den. Staring down at me was the face of my sweet Glenda. Her face was that of concern. What could be troubling her? I then saw Ginny. She also looked troubled. Then there was Jenny my sweet mistress. \"Sheri are you all right.\" She asked \n\n\"I'm better that alright.\" I said as I sat up and threw my arms around her. \n\n\"Seriously Sheri are you ok.\" Glenda asked. \n\n\"Yes I'm fine why all the concern, Honey you look upset. Did Ginny hurt you when she fucked you.\" \n\n\"What, What are you talking about.\" I looked around Glenda was still wearing the camisole but the tap pants were gone. The rest of us were naked. So obviously I hadn't dreamed it. \n\n\"Why don't you tell me what your all so upset over?\" I said\n\n\"Sheri I was making love to you breast and then your body went stiff as a board then you passed out.\" Jenny told me \n\n\"I remember that. Your eyes held my in a spell I couldn't look away. I heard Glenda have an orgasm but I couldn't see how, your eyes wouldn't release mine. Are you a witch?\" Jenny laughed hysterically but Glenda still looked upset. Ginny was smiling. Finally Jenny said. \n\n\"Obviously with all that frustration of the game and my love making Sheri had a powerful orgasm and passed out.\" Jenny informed everyone. I added\n\n\"I'd call it earth shattering.\" Jenny pulled me into her arms and I rested my head on her breasts. \"So what did I miss? I heard you cumming Glenda.\"\n\n\"Ginny gave me a really nice blow job. Not as good as yours\"\n\n\"I want to know how you get that thing down your throat.\" Ginger asked \"Practice sweetie lots of practice.\" I told her \"And I loved every minute of it.\" \n\n\"I'm just going to have to practice a lot more. You my have me in looks and body. You are not going to be better at giving blow jobs too.\" Ginny said little snippy but it was all in fun. \n\n\"Sound like a challenge to me.\" I turn to Glenda \"I hope you insurance is paid up.\" \n\nI took my glass of wine and drank down what was left. I also watched as Glenda sat down next to Ginny and kissed her on the lips. Jenny started to play with my nipples again. We sat my right leg under her left and my left over her right. Our pussies were very close together. I could almost feel the heat come from her and I could smell our arousal coming up between us I looked up to her and she kissed my mouth. I rubbed my hands up and down her back. \n\nAfter our kiss ended I looked down at her nipple it was hard the aurora surrounding it was tight and bumpy. They where darker that before. The nipple stuck out three quarters of an inch from her breast. I touched one with my tongue and I heard her suck in a breath. \n\nI took a breast in each of my hands and lifted them. They where warm and pliable they where soft yet firm the nipples stood out hard and tight. I took one of her nipples into my mouth and sucked it very gently I could hear her moan. I switched to the other one and did the same, sucking it lightly. Jenny moan some more as her body vibrated. Her hand continued to play with my breast as I continued to suck and lick hers. \n\nI turned my eyes to Glenda and Ginny. I watch as Glenda took the nipple of Ginny's small breast to her mouth. I turned my attention back to Jenny's lovely breast. Her breast weren't creamy white like mine were, they were tan the same color as the rest of her I knew they had seen there share of the sun. \n\nI lowered Jenny to the pillows on the floor as my mouth lowered to her tummy I licked and kissed her flat tummy stopping to lick and kiss her navel ring and belly button. The smell coming from her over heated pussy was intoxicating. It drew me closer to it's source I continued to kiss and lick my way closer to it as the smell became more and more intense the closer I got to it's source.\n\nMy lips and tongue kissed and licked her beautiful butterfly that adored her hairless pubic area as my mouth was drawn close to her pussy. My own pussy was also leaking love juice onto the carpet beneath me. As my lips kissed her pussy lips for the first time her smell filled my nostrils it filled my very being. My tongue licked up all the sweet pussy juice it could find. I pushed my tongue between her tender pussy lips as more of her nectar flowed from hers. Her pussy was hot. Inside it was hot and wet, using my hands I spread her legs wide. I sucked her cream from her hole. She rocked her hip grinding her pussy into my face. \n\nAfter I sucked up all the cream I could I moved my mouth to her clit and sucked it into my mouth. My lips closed around it. It was big bigger than my own. I sucked it and rubbed it with my tongue. Jenny was squealing and swearing. ",
        "\"Oh fuck Sherri. Suck my clit. Suck it hard girl. \n\nI continued to suck her clit as I shoved two fingers into her hole. I piston those fingers in and out of her as my lips pulled and sucked her clit then I switched hands shoving two fingers into her as my wet fingers moved to her asshole. I pierced the asshole and Jenny came. She sat upright closing her legs trapping my head between them. \n\n\"Oh oh fuck mee I cumming baby I cuming.\"\n\nI continued sucking her clit as her cum poured out of her on to my hand. The fingers of my other hand pumped in and out of her asshole as her body jerked and shook as each wave of her orgasm rocked her. My face was mashed into her cunt by her thighs my ability to breath was gone. Just as I was starting to fear I was being suffocated Jenny thighs released my head as she fell back down on to the cushions panting and whimpering. I moved my mouth to her hole and sucked up all her cum I could as my hand continued to pump her asshole. Just as I moved my mouth to her clit one more time I hear her beg.\n\n\"Please no more I couldn't go though that again so soon.\"\n\nI pulled my fingers from her sweet ass as I looked up at her from between her legs. She was breathing hard her chest was rising and falling rapidly. I gave her sweet pussy one last kiss before crawling up next to her to lie on the cushion. I kissed her on the lips so she could taste herself. Then I heard clapping coming from Ginger. Looking over at her she said. \n\n\"I never seen her cum so hard. And I never heard her beg someone to stop before.\" \n\nGlenda and Ginger where both sitting up. Both their cock where hard as stone. \"Did you two just sit there and watch us?\" I asked\n\n\"We sure did and loved every minute of it. You were very good for someone who never done it before.\" \n\n\"That was very naughty of you two. I think I deserve a show in return.\" I said \n\n\"\"What would you like to see?\" Ginger asked\n\n\"Glenda knows what I want don't you love?\"\n\n\"Yes mistress.\" She said as her eyes when to the floor and a blush redden her face. Ginger's one arm went around her shoulder as the other pulled up her chin. And said to Glenda \n\n\"You don't have to do anything you don't want to. Am I right in that Sheri?\"\n\n\"Oh you are right, she doesn't have to do anything she doesn't want to. I don't want to force her into anything. I just want to watch the first time she does it. The way she watched me do it my first time. And I wanted to do it, I loved doing it and I'll do it again.\" I said about all I could to let her know I wasn't pushing her into anything if she believed me I don't know. \n\nBy this time Jenny had regained her senses and pulled me down to her lips and kissed me and said. \"You were wonderful are you sure you never did this before.\"\n\n\"No never have, but I do know what I like and I did that to you.\" \n\n\"No one has ever put their fingers up my bottom before that was so unexpected, it kind of shock me into cumming. Why don't you lie down so I could do you?\" \n\n\"I'd love for you to, but right now I would rather take a shower I fell all sweaty and sticky.\" I knew I had spoiled the mood for Glenda and in doing so I spoiled the mood for myself. And I do hate feeling this way I knew my make up was a mess. \n\n\"You could take one in my room and if you would like, I could join you and then the four of us could soak in the hot tub after.\" \n\n\"That sounds great. I'll go to the guest room and get my makeup and meet you there.\"\n\n\"Ginny, Sheri and I are going to take a shower and then soak in the hot tub would you girls like to join us in the tub.\" \n\n\"I would love to shower and soak in the tub. How about you Glenda?\"\n\n\"Sounds great to me.\" \n\nWe all got up. I walked to the guest room and was followed by Glenda she had her tap pants back on. \"Mistress, don't be mad at me I was going to do it.\" I put my arms around her and hugged her to me and said.\n\n\"Glenda I wasn't mad at you and I shouldn't have said what I did. If you want to suck her cock you go ahead and do it, if you don't then don't. If you want to do it in private then that's ok to.\" He hugged me very tightly and kissed me very passionately and said.\"\n\n\"Mistress I love you very much and I want you to know that what ever happens between Ginger and me is only sex.\" \n\n\"Oh I agree. What ever happens between either of us and some one else its just sex. What we have, you and I together is so much more than that. We have love and a deep commitment to each other.\" I kissed him once more and said \"I going to take a shower then I'll meet you in the hot tub.\"\n\nPicking up my make up I left the room. I met up with Ginger outside the bedroom. I threw my arms around her and planted a wet sloppy kiss on her mouth. She asked, \"What was that for.\" \n\n\"For being so nice to Glenda. And for everything, for just being you.\" \n\n\"So I gather you're not mad at me any longer.\"\n\n\"I never was mad at you. A little put out maybe. But never mad. I don't like people putting me in my place, but if you think I need it where Glenda's concerned you go ahead and do it.\"\n\n\"Ok if you say so. If you'll excuse me I want to get in the shower before she gets out. I like to practice some more.\"\n\n\"Well don't wear it out I still have a use for it when you're done.\" I said kidding as I moved past her on my way to the Master bedroom. \n\nIt was a lovely room all done up in pink and lots of chiffon the bed was a King size four-poster bed. The posts where very thick six inches in diameter and made of, what I believe was cherry. It had a floral print spread and a pink chiffon canopy. There were two large walk-in closets. One to my right and one to my left. There was a makeup vanity to the left of the door that had a large array of makeup on it. Too much for any one person but not for two women. I heard the shower running but couldn't tell where it was. I walked around the bed and found that the wall behind the bed was a false wall, behind the wall was the bath. \n\nThe bathroom was done in pink Italian marble. The walls the floor as well as the counter tops were marble. There was a large sunken tub that could fit four or five people easily. The shower was also large, with glass doors three foot wide and a glass panel on each side also three foot wide. I could see Jenny clearly though the glass. I placed my things on the counter and looked in the mirror above. \n\nMy make up was a mess. My mascara was smeared all over my eye my lipstick was smudged. Most of my foundation was gone. I looked hideous. I quickly scrubbed my face with the cold cream I found on the counter and then washed it off. Well not the best I've ever looked, but I looked a far sight better than I did a few minutes ago. I open the door to the shower and stepped in. \n\n\"Well there you are I was beginning to wonder if you got lost.\" Jenny pulled me into an embrace and went to kiss me I pulled away and said\n\n\"Oh no you don't, I have a bone to pick with you. How could you let me sit there looking like I did my make up all messed up like that.\" \n\n\"When you eat pussy, as good as you did tonight, your going to get you make up messed up. It's a fact of life.\" She said as she pulled me closer. I melted into her arms. I really wasn't mad. \"Now lets get you all washed up and sweet smelling.\" Once she started to wash me she asked \n\n\"Sheri would you mind if Glenda and I got it on once in a while or is it just me and you and Ginger and Glenda. If it is, that's ok but she does have a nice cock. I never had one that big. Cheryl's was longer but it was thinner than Ginger's\" She asked \n\n\"No I don't have any problems with that you'll have to ask Glenda though. I was thinking I would like to take on both Ginger and Glenda at the same time. But I wasn't sure what was proper.\" \n\n\"Honey the only thing proper here is for you to have a good time. Sometimes like tonight I just want a girl to make love with. Other times I want cock and lots of it. And it looks like Glenda has enough to share. I don't think I could ever suck his cock like you do. I'm not real good at sucking cock. How do you do it?\n\n\"I really don't know I just like sucking cock and when I met Bill and seen what he had I wanted to be able to deep throat him, so I worked on it till I was able take it all in. The happiest day of my life was when my lips touched his pubic hair for the first time. Sounds silly don't it.\"\n\n\"No doesn't sound silly at all. It's quite an accomplishment some day I would like to see you do it. Ginger's pretty good at cock sucking but he can't do what you can.\" \n\nAll the while we where taking Jenny was washing me. We got out of the shower and dried off I put on some make up not much just enough. Then I spray my self with perfume. And followed Jenny out though one of the walk in closets to a door that lead on to the patio. \n\nStepping out on to the patio I felt very naked and exposed. Then I noticed that the screen walls all had some lattes work on them and there where green ivy growing on the lattes it was very thick so no one could see in from the outside. There was a large pool and a sunken hot tub. Ginger and Glenda were already in the tub. Jenny and I walk over and got in. I sat next to Glenda and Jenny sat next to me with Ginger on the other side of Glenda. \n\nThere was room for two or three more people, any more and it would be too crowded. I placed one hand on Jenny's thigh and one on Glenda's. I relaxed as I started rubbing my hand up and down their legs. Then I said. \n\n\"You know Glenda I keep getting asked if I can really take all of you in my mouth.\" I moved my hand to her cock it was hard but not real hard so I moved my hand up and down the shaft. She said \n\n\"Really I hope they don't think we're lying.\" She was playing along with me. Jenny and Ginger where very quiet I'm sure they knew something was going to happen and didn't want to jinx it. \n\n\"I don't think, they think I'm lying they may think I'm stretching the truth.\"\n\n\"What do you think we should do to show them you can?\" This was starting to sound hokey. \n\n\"Get you ass out of the tub and sit on the side and I show them I'm the best cock sucker they know.\" \n\nBill jumped up on the side with his feet still in the water and leaned back to give me room I knelt where he was sitting and took his cock in my mouth I looked over toward Jenny then at Ginger. They were watching me intently. I slid my mouth down Glenda's cock about two or three inches then I moved back up and pulled it out of my mouth. \n\n\"Cum when your ready.\" I told her then \n\nI put my mouth back on her cock. I bobbed my head up and down on it, getting it wetter as I took more of her massive cock into my mouth. When it hit the back of my mouth I worked my lips on it and my tongue worked on the underside I pulled up a little and then I moved back down letting it slip into my throat. I had five or six inches of him in my mouth and I could hear Ginger say. \n\n\"Wow she's got more than I could get down me.\" Then Glenda said \n\n\"I'm in her throat now.\" Then I swallowed once. \"Dam she just swallowed.\"\n\nI pulled back off so I could breath and worked on the top four inches some. Then I dove down again and swallowed seven inches of my husband's hard cock, two more to go. I looked up into Glenda's eyes and I saw a blissful look on her face. I pulled back off then I plunged down again taking in all nine inches of hot cock meat. Glenda grunted and Ginny said\n\n\"Dam she can do it. She's got all eight or nine inches of fat cock in her mouth.\" \n\nI started pumping my head to get Glenda to cum for me. I wasn't doing this all for show; I wanted her to cum in my mouth so I could taste it. I really do love the tasted of her cum. I placed my finger on Glenda's rose bud and massaged it. I didn't try to penetrate her as I didn't have any lubricate and I didn't want to hurt her. I took her all in one last time and swallowed twice and as usual she came. She pumped two loads before I could get her out of my throat then three more into my mouth. I pumped her cock with my fist to get it all out then I pulled off sucking the tip as I went. Holding the cum in my mouth I pulled Glenda's mouth down to mine and feed her about half of her load then I swallowed the rest. \n\n\"That was amazing I wish I got it on tape.\" Ginger said as I sat down next to Jenny. Glenda slip back in to the water. Her head rested on the back of the tub. Ginger then said. \"I guess that's all I going to get she looks done in.\" \n\n\"Don't worry about Glenda. She has four good loads in her before she's done.\" I said then I remembered that was the second load she gave me today how many did Ginny get. \n\nAfter Glenda and I rested for a while. Glenda had Ginger sit on the top of the tub. Glenda knelt between her legs and took Ginny's cock in her hand and slid her hand up and down a couple of times. Then she placed it in her mouth. Ginny was very excited. I could see her legs trembling. \n\nI slid over to sit next to them. I wanted to watch up close as my husband suck a cock. I hopes he didn't mind. She sucked on the head and I could see she was using her tongue to swirl it around the head. Then she lowered her head taking in about half of it. She pumped that half in and out of her mouth then slowly started taking in more. She had about an inch left out side her mouth when Ginny said\n\n\"Dam she's got me in her throat now. God she's good at this. Come on suck me Glenda.\" I watch as Glenda pulled back almost to the head then plunged down taking in all of Ginger's cock and her lips rested on Ginny's butterfly. I saw her Adams apple bob up and down as she swallowed. I thought to myself, dam she pulling out all the stops. \n\n\"Oh fuck Glenda your trying to swallow my cock dam girl.\" Then she said \"OH fuck I'm cumming baby If you don't want to swallow my cum pull off.\" \n\nGlenda kept bobbing her head up and down the entire length of her cock till I saw Ginny tense up. Glenda pulled off her cock just as the first load came out of Ginny's cock and sprayed cum all over her face. Then she lowered her mouth back down as more cum pumped into her mouth I could see her swallow down each load as her Adams apple bobbed up and down. My orgasm hit me at the same time. I didn't even realize I was fingering my pussy. \n\nOnce Ginny had stopped cumming Glenda pulled her mouth off her cock and licked up what had dripped off her face then looked at me.\n\n\"That was the most erotic thing I ever seen. Watching her cock pump in and out of your mouth. And then you let it squirt on your face like that. It was fantastic I can't believe I just watch you do that it was like a dream. Will you do it again please? I want to watch you do it again.\" I said as I threw my arms around her neck and kissed her sweet cum sucking mouth. Then I lick off Ginger's cum from her face. \"Will you? Please, please.\"\n\n\"Of cause I will but not right now I think Ginny need some time to recover.\" We both looked at Ginny she laid prone on the concrete deck her cock was sleeping peacefully on top of her balls. \n\n\"Oh I don't mean right away I mean later tomorrow or something.\" Glenda sat down on the seat in the tub and I sat on her lap looking at her. I could feel her cock was hard I wanted to shove it up my pussy and have him fuck me silly but I also wanted him to give Ginny so more pleasure. I continued to kiss him and hug him till he said.\n\n\"I guess you don't think it gross or disgusting then.\"\n\n\"No way, it's outrageously erotic. I was so turned on. I came with out even knowing I was fingering myself.\" Then I whispered to him. \"I want you to fuck me right now but I think we had better be more social to our hosts. You save that hard on for Ginny if you're lucky she may let you fuck her.\" Glenda nodded her head and I kissed her once more and slid from her lap and slid over to Jenny. \n\n\"That was a real turn on for you wasn't it.\" \n\n\"You bet it was so hot watching her.\" Jenny pulled me closer to her and asked \n\n\"Would you like to sleep with me tonight or would you rather your husband sleep with you.\" \n\n\"I want to sleep with you I want to feel your tongue in my pussy and I want to eat you again.\"\n\n\"Ginny are you going to be ok.\" Jenny asked Ginny who hadn't moved since she came. She raised her self up and a said \n\n\"If you went though what I just did you wouldn't be able to move either. And don't worry Glenda you won't be able to suck on this thing any more tonight because you got it all.\" I could see Glenda blush from the p raise she was getting but I could also see she liked getting it. \n\n\"Well then if you girls will excuse us where going to go to bed so I can make sweet love to this delectable creature before the sun comes up.\" \n\nJenny and I kissed our husbands good night. We got out of the tub and dried off with the big fluffy towels that where piled on a stand to side of the pool. I followed Jenny thru the door back to her room. We rinsed off the chlorine from the tub in the shower. Jenny took some moisturizer and applied it all over my body and I did the same to her.\n\n\"We don't want our skin to dry out from the chlorine.\" \n\nShe removed the spread and top satin sheet from the bed and had me lay down next to her and took me in her arms. Her tongue slid into my mouth as our lips kissed. I tried to put mine in hers but she refused me entry. She moved so that I was lying on my back and she was above me. Her hands caressed my arms and my breast as she continued fucking my mouth with her tongue. \n\nI could tell she was trying to dominate me. I reached for one of her breast and gave it a squeeze. Her hand pulled my hand away and pined it to the bed. She pulled her mouth off mine and looked into my eyes and said. \n\n\"Do you trust me to give you pleasure and not pain?\" I nodded my head wondering where this was going. \n\nShe got off the bed and went to the closet. On her way back I saw she was carrying a pair of fur lined wrist cuffs. She took one of the cuffs and attached it to my left hand and then attached it to a small chain that was secured to the large post of the bed. Then she did the same to the other hand. Jenny looked down at me and said \n\n\"There now I can have my way with you and there's nothing you can do about it. Does it excite you to be helpless and at my mercy.\" \n\nI wasn't sure I liked this I liked being in control. But I couldn't deign that I was aroused. My pussy was leaking cream, my nipples were erected and my breathing was becoming more labored. Jenny kissed me on the mouth. I was going to tell her I wasn't sure I like this as I open my mouth to speak she put the finger to my lips and said\n\n\"No protest my little dove all I want to hear from you is moans and words of ecstasy. Just try this and if you really don't like it I'll release you and never do it again. Ok.\" I nodded my head once. I could see the joy in Jenny's eyes. \"Good now I can get started.\" \n\nJenny kissed my mouth again as she ran her hand over my breast pinching each nipple in turn. Her mouth then moved down to my neck She kissed my neck all over. She made love to my breasts, by kisses and sucks and biting them. Jenny then got off the bed and went to the closet. She came back carrying a box that I couldn't see into. \n\nPlacing the box along side the bed she pulled out two more cuffs that she placed on my ankles. Taking a longer chain she raised my left leg and attached the chain to the same eyelet that my left hand was attached to. Then did the same to my other leg. Lifting my bottom she placed a pillow under it.\n\n\"There are you comfy?\" I shook my head no. \"Oh I'm sorry do you want me to stop.\" I shook my head no. I wanted to see where this was going. \"I didn't think you would.\" \n\nShe bent over to the box and pulled out what looked like a very large bullet about two inches long and an inch wide and rounded on each end. There was a small beaded chain and a small wire attached to it. The wires led to a small box with a slid control on it. Jenny then slid her fingers into my pussy and said. ",
        "\"Nice and wet you obviously are excited.\" Then she slid the bullet device into my pussy. Jenny started licking my slit saying. \n\n\"You taste so good, some women don't taste very good but you taste wonderful, I bet Bill loves to eat you.\" \n\nHer tongue felt fantastic on me but she wasn't slipping it inside yet and I wanted her tongue in me. She then pulled the device out of me and said. \n\n\"That's wet enough. Now we need to put it where it belongs.\" Jenny put the device on my asshole and pushed it in. I grunted not from pain as I have had bigger things up my bottom, but from the suddenness of it. She put the whole thing up inside me, most of the chain and the wire stayed outside I assumed so you could get it back out. \n\n\"Are you ok, did that hurt.\" I shook my head no. She reached up and pinched one of my nipples and said, \"Good I don't want to hurt you just yet.\" \n\nYet what this yet stuff. The way she pinched my nipples felt good. The pain was exciting. She then reached into the box again and pulled out something that I couldn't see. She then put her mouth to my pussy and started licking me again. This time her tongue would go in and out. Her mouth worked me over good and then she was sucking on my clit as her hand reached up and pinched my nipple hard. I grunted and tried to rub my pussy on her face, but the way I was tied up I couldn't move very well. Every time she pinched my nipple she would do it harder and longer. \n\nThen I felt a low vibration in my rectum. Her mouth continued licking and sucking my clit as I felt something invade my hole I felt like a large cock. She must have been using a dildo. The vibrations in my rectum became stronger as the dildo was pushed farther into me then she was pinching my nipples again. She must have had three or four hands because they seemed to be everywhere. \n\nThe vibrator in my butt grew in intensity as the dildo in my pussy started to vibrate. Her tongue was whipping my clit and one of her hands where pinching my nipples. Then I felt the dildo start pumping in and out of me and its vibrating motor was tuned up a notch. I could feel my orgasm was close. \n\n\"I almost there Jenny please let me cum. I want to cum please let me.\"\n\nJenny's hand gripped my nipple hard sending pleasure-pain into my tits. Her mouth clamped down on my clit as she took it between her teeth and bit down then she shoved the dildo up my pussy as far as it could go. My arms and legs strained at the binds as my body shook. Stars flashed before my closed eyes as my orgasm rocked me. I opened my mouth to scream but nothing came out. My orgasm was followed by a second and then a third. She was pinching my nipple so hard that I stopped feeling it. \n\nShe then started pumping the dildo in and out of me again. Her fingers released my tortured nipple letting the blood flow back into it. The pain was as intense as when she pinched it sending me into another orgasm. With this one I passed out again.\n\nI open my eyes to see Jenny's sweet face looking down at me. My legs had been released but my arms were still restrained and the dildo was gone from my pussy. The vibrator was still in my bottom but it was switched off. \n\n\"Tell me Sheri do you always come so hard. I never have seen any one orgasm like you do.\"\n\n\"I haven't always but lately it seems they are getting stronger. Can you release my arms I'd like to give you a hug?\" \n\nJenny released first one then the other. I threw my arms around her and pulled her to me. We kissed lightly and hugged each other. She then undid the cuffs and kissed each wrist. She then laid down next to me and cuddled up to me; we kissed and ran our hands on each other. Jenny then put her mouth on the nipple that she pinched so hard I tensed up it was still sore. \n\n\"Oh baby did I hurt you I'm sorry I didn't mean it. \"\n\n\"\"Its al right it just sore but it did feel good while you were pinching it.\"\n\n\"Maybe we should try nipple clamps next time.\" \n\n\"I have a pair that Brenda gave me, but I haven't tried them yet. Have you ever?\"\n\n\"Oh yes I love them especially when their released just as you cum it really intensifies it.\n\n\"That just what I need a more intense orgasm.\" We both laughed. \n\n\"We'll try one next time. Your nipples too sore to use one now.\" I had to agree with her, it was sore. \n\nJenny then kissed my other nipple a sweet sucking kiss. Then she moved down to my belly as she tuned around. I took one of her nipples in my mouth and sucked on it. Then I moved down to her belly as she was licking mine. I could smell her pussy from where I was it was strong and musky. I moved down closer. Her heavenly scent was closer now. My mouth drooled in anticipation. \n\nJenny rolled over forcing me to lie on my back. Her mouth descended down on to my pussy as she lowered her pussy to my lips.I looked up at her descending pussy. It was beautiful it was clean of hair. Her lips were red with arousal her cream dripped from her lips. I took her ass cheeks in my hands and pulled her down to my mouth. I lick up the cream on her lips. \n\nI stuck my tongue into her it was like sticking my tongue into melted butter. It was slick and creamy. Her cream flowed into my mouth. Jenny was doing the same to me her tongue was licking my pussy lips. I raised my knees to give her better access. Jenny pulled my legs back tilting my bottom up toward her mouth. There was no urgency in our lovemaking there was nothing to prove. We where just two women making love.\n\nMoans where escaping from between our legs, we were getting closer. My body was trembling, as was Jenny's. I wetted the finger of my left hand and massaged her asshole with them. Jenny moaned louder. She was torn from pushing her pussy onto my face and pushing her ass back onto my fingers. I made the decision for her. I shoved two fingers up her bottom and in the process I pushed her pussy down on to my mouth. Jenny's body jerk as she came her creamy cum flowed into my mouth. I swallowed all that I could. \n\nJenny switched the vibrator in my bottom on high. My pussy jerked upward as I came. Jenny clamped her lips to my pussy and sucked my cum from me. We both moaned into each other's pussy as we drank each other's cum. Jenny collapsed on to me.\n\nShe pulled her pussy from my sucking mouth. She reached over and turned the vibrator off. We lay next to each other panting our bodies soaked with sweat and our faces covered in cum. \n\nAfter we lay there for twenty minutes or so I turned to Jenny and said \"I'm going to take a shower and get that vibrator out of my bottom.\" \n\n\"Is it that annoying Love?\" She asked \n\n\"No I really liked it in there but I'm done for tonight and I can't see leaving it in there.\" \n\n\"I know what you mean I'll join you in the shower. You may need my help getting it out.\"\n\nJenny followed me into the bathroom. She picked up a jar of petroleum jelly and had me bend over the counter. \n\n\"Normally I would use my tongue to lubricate you but I'm too tired to bend over and this will work better.\" \n\nJenny greased up my hole and asked if I was ready I said I was. She pulled and it slid out like I just pooped it out. Then I really had to go. I sat on the commode as Jenny cleaned of the vibrator then wrapped it in to a hand towel. She then turned on the shower. As I finished my business then we shower together dried off and went back to bed. I looked at the clock on the nightstand it was six-forty-two. Boy time sure flies when you having fun. I cuddled up to Jenny as she wrapped her arms around me we kissed and feel asleep.\n\nSo ends Chapter 3. If you enjoyed it let me know. If you didn't let me know what you didn't like about it. I have six more parts I'm working on. This story has taken on a life of it's own"
    ],
    "authorname": "Scribler",
    "tags": [
        "spun stopped",
        "bill pamela",
        "glenda sat",
        "legs glenda",
        "camisole tap",
        "things bill",
        "glenda time",
        "ginger pretty",
        "ginger glenda",
        "walk legs"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/lifes-changes-ch-03"
}