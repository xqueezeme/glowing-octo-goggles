{
    "title": "Entertaining at Large Ch. 05",
    "pages": [
        "[Many of the characters here first appeared in Entertaining at Home. Seems a long time ago. Many thanks for the comments, support and suggestions. More are always welcome.]\n\n*\n\nFitting work into a hectic schedule of exhibitionism and sexual experimentation can be a challenge. The week before Xmas is usually a fraught time for everyone: work and home. I sailed through it. I was getting up earlier to beat the traffic. It wasn't that it presented many problems for cycling in terms of time; work was thirty minutes away, door-to-door, come rain, shine, road works, acts of god or drivers with the collective IQ of a hamster. No, I just liked easy, hassle-free rides when I wanted to think.\n\nThe extra hour was well worth it. I sorted out my attitude to domination and submission. I was in favour. The memory of Tracy's face as she made me cry with pain as she pressured my nipples kept coming back to me. My shorts were not just damp from sweat when I dismounted. The exchange between Mr J and I when I needed to control him when we fucked was more intriguing. I hadn't tried to manipulate him like I had with Matt, he had just done as he was told. I speculated on my ability to do it cold as it were. \n\nPerhaps Matt would be a good candidate for an experiment, I thought. When he wasn't making me think naughty thoughts with his voice, he was a bit of a weed. I had got him to orgasm with sexy Suzette. Could Miss Powderpuff do the same?\n\nI was more of a \"don't know\" when it came to sex with women. I was definitely in favour of more sex with Tracy. She had turned me on like no one else. It was a definite damp-shorts situation just thinking about her and she was vying with George Clooney when my vibrator and I snuggled down of a night. Was it just her, or women in general though? I just didn't know. I had never thought about my own sex like that before. I liked her as a mate and sex was so much part of her personality that it seemed like a natural extension of any relationship anyone would have with her.\n\nOn golden showers I was probably against, I decided. It took two whole rides to sort it out though. I was intrigued that people liked watching me pee, I ought to talk to Luke about it if the opportunity arose. I didn't mind the taste of my own urine either. I had taken to dipping my finger into it when I relieved myself to check. Perhaps more often than I'd care to admit. But Mr J was right, there was a large degree of humiliation about it. I didn't think it was me. I could not imagine sitting under a stream of a bloke's hot piss and liking it.\n\nSo I was getting to my desk each morning, freshly showered and ready for the day ahead. I think my team would have drugs-tested the coffee which was ready for them when they arrived if they had had the equipment. A few quids worth of breakfast pastries from the Italian bakery on the corner soon got them up to my level of jocularity, however. More than one of them commented that they couldn't believe they were looking forwards to coming in each day.\n\nThey were a good bunch, and at this time of year we were popular with the whole company. More by accident than design I had recruited a number of Muslims and a couple of Jews. After tentative requests from them I had taken the suggestion to the bosses that we come in over the holiday period in exchange for flexibility around Ramadan, Passover and the like. It worked perfectly. We all took the bank holiday days. I mean everyone celebrates a bit at this time of year, Christianity has virtually been stripped from the commercial festival. The rest of the time we came in.\n\nThere were times when we were running the place. Knowing we were there meant other teams passed urgent work over to us. Members of my team who were up for it could therefore take on more responsibility and use their initiative. That was good for their promotion prospects, bonuses and the like so muttering about the lazy bastards we worked with was kept to a minimum. \n\nI liked the environment we worked in. Where the rest of the firm was decked with cheap paper decorations purchased within a carefully-calculated departmental budget, our floor was more like an art gallery. I asked them all to bring their kids' pictures in along with anything else they thought might be relevant. The Buddha in a Santa hat was a bit incongruous, but as our only Buddhist had brought it to us, no one minded.\n\nThe only break in routine came when Steve called to ask me out to lunch. We took one of Adriano's small tables for our sandwiches. Turned out he was applying for a more senior job in the firm and wanted to use me as a personal reference. I was suitably touched.\n\n'Surely they know you're useless already. Why do you need me to tell them?'\n\nHe was only vaguely amused. He was clearly taking the application seriously and we went through his draft together. I told him that it looked strong to me -- I regularly sat on job panels at work and was used to the process. I made one or two suggestions of places it could be tightened up and asked him what he thought his chances were.\n\n'Dave's applying. He'll probably get it, but I thought I'd give it a shot. You know, for next time.'\n\n'Don't do yourself down. Dave's probably spending all his time creeping to the bosses, but you're much better with people and one the whole that's what the panel should be looking for.'\n\nThe interview was scheduled for the last week of the year. Steve said they would probably make a decision the same day. We parted with a formal handshake and I went back to the office to write my warm appraisal of him. I emailed him a copy with a stiff warning that if a copy ever fell into the hands of the lads I would have his balls.\n\nWednesday was a red-letter day in so many ways. The evening before Mr J came over with a number of parcels. Two of them were anonymised packages from LuckyStroke my sex shop. I laid out the skirt, stockings and blouse an sent a photo to Matt. The third was from Amazon. I noticed Mr J was looking smug as I tugged the perforated strip to open it. I gave him a big hug when the collected works of PG Wodehouse fell out.\n\n'Just a pre-Xmas thank you.'\n\nI dipped into the first story. It wasn't as funny as I expected or the blurb promised. I did notice, however, that the next morning I had started greeting everyone with a happy \"what ho\" so it can't have been that bad.\n\nThat evening the lads and I almost fell in to he Crown and Anchor. Their rousing chorus of three-nil, three-nil, three-nil -- the rest of the lyrics followed a similar, predictable pattern let the rest of the punters know the reason. We had won for the first time ever. Admittedly the other side did seem either drunk or very hung over. I am sure I saw one of them vomiting at half-time. But we played outside ourselves and I pulled off some blinding saves, much to my own surprise. I was looking forward to reliving my genius over a pint, but the rest of the bar was given a pretty clear picture of my skill by the fact that periodically one or other of my team mates would raise my arm high and shout it to them.\n\nGeorge watched the scene from behind the bar on which he rested both hands and at least one of the rolls of fat surrounding his stomach. He was standing beneath the biggest bunch of mistletoe I had seen so far. Lest anyone missed that fact he kept nodding up at it when any woman glanced his way. When I waved at him he pointed to it directly.\n\nOur,frankly under-appreciated, lap of honour completed we approached the fat barman. Steve spoke first.\n\n'Five pints of bitter George, tonight we're drinking what she's drinking. She was fantastic.'\n\n'Told you. Best tits I've seen in a long while. Just can't understand why it took her so long to show 'em off.'\n\nSteve noticed the mistletoe and hoisted himself onto the bar and gave him a big, sloppy kiss. Luke and Piotr followed suit. Wot started to but by this time George was swatting at the air like a man surrounded by angry hornets. I blew him a kiss from the safety of the rear of the group.\n\n'Other team didn't show up then?'\n\n'Piss off you old pervert, they even had a substitute. And the ref was a tosser. We were good, but she was brilliant. You should have seen her diving at the feet of their striker when he was clean through.'\n\nGeorge scratched his head.\n\n'I'm sure there's a joke in there somewhere but at the moment I'm at a complete loss. Here's your beers lads, glad to see victory has knocked some sense into you. Suzette this is for you.'\n\nHe handed over an Xmas-wrapped box and a card. I was puzzled.\n\n'Some punter brought them in. Our Tracy spoke to him. Said he was lovely...'\n\nHe lengthened every vowel in the word.\n\n'... Looked like a loser to me.'\n\nMatt I thought. I stuffed the card and present into my bag. I'd deal with them later. Tonight was a night for celebration and we retreated to our usual table. It was one of those great Xmas moments. Good friends, out together, no agenda except belittling our opponents and anyone else who wasn't there. \n\nPiotr and Wot were off to Poland for the holidays and Luke was heading north in a few days. They were excited and me and Steve we're glad for them. He was spending the holidays with a woman he'd been dating for a few months. It took some crafty deception to get out of an invitation to dinner. After the second pint I rapped on the table to get their attention.\n\n'Boys. It's time for me to play Santa. I bought you each a gift I thought you deserved, though I have to say after tonight's showing I may have underestimated you. I'd ask each of you to sit on my knee to receive them but frankly you're all too fat.'\n\nI walked round the table handing each of them their small wrapped parcel. I kissed each of them full on the mouth, it was the season of goodwill to all men after all. Only Luke grabbed my bottom; he got stern frowns from the others. I wasn't wholly surprised to find George overflowing an empty chair when I finished snogging Wot. He looked up expectantly.\n\n'Nothing for me?'\n\n'I was going to give you a kick up the arse but I was worried I'd lose a shoe. Sorry George.'\n\n'I only brought these over for you anyway.'\n\nHe nodded at a tray full of pints. He nodded at a group of the engineers in the far corner.\n\n'Lads over there bought them for you. They're a thank you for last Friday. Wanted to know when you were on again.'\n\nI pecked him on the cheek and went back to my seat. We picked up our drinks and I went over to our benefactors to say thanks. They were genial and effusive I promised they'd see me again as soon as George sorted out the wage structure. That'd teach the old devil.\n\nBack at the table the boys were squeezing, sniffing and tapping their gifts against the table. I nodded that it was OK for them to open them straight away and the paper was off in seconds. They all loved their \"Wanker\" socks. Luke put his on and tucked his jeans into the tops so everyone could see the logo. Piotr and Wot loved their bottles of vodka, a Polish guy at work had picked them out on a trip to London for me. Wot had a query.\n\n'No \"Hand Job\".'\n\nThe joke never got old for him and we practically had to prop him up in his chair. When the general hilarity and blizzard of thanks died down they all looked at Steve. They always did when excuses or apologies were required. He looked sheepish like he always did.\n\n'It's OK. I didn't expect you to get me anything, you're blokes after all.'\n\nThey all started looking super-smug which was unusual, unique actually, and a bit concerning. Steve put his bag on the table and pulled out a large parcel which he handed to me. I knew he had wrapped it because the tape at one corner started coming off straight away. I was surrounded by four eager pairs of eyes. Now I was definitely worried.\n\nI tore at the paper; the rest of the package had enough tape on it to cover an art installation. Inside was a neatly folded, bright green goalkeeper's jersey. I held it up and admired the slightly padded chest panel. I held it to my body to see if it would fit, they were blokes after all. On the back, in the place where the player's name is usually displayed white letters announced \"only woman in the league\". I started to cry.\n\n'Don't worry. If it's the wrong size we kept the receipt. We only put the slogan on to piss off the committee. Sorry.'\n\nThey all looked worried at my reaction. I wiped away my tears with the back of my hand.\n\n'Don't be stupid. It's wonderful. Best present I've ever had.'\n\nI turned my back to them and stripped off my sweat shirt. That got the predictable chorus of whistles from the engineers, and George. I was wearing a bra, and everyone in there had seen my tits anyway so I saw no reason to be shy. The jersey fitted perfectly. I smoothed it down over my breasts and turned so they all could see it. Everyone in the pub stood up and applauded. So there were only about twenty of them, but it was the only standing ovation I was ever likely to receive. I started crying again.\n\nIt took another round of hugs and kisses for me to calm down. This time no one grabbed my arse. I even kissed George who had reappeared with more beers. It was predictably disgusting. I retreated to the Ladies to wash my face and blow my nose on some toilet paper. The Crown doesn't run to tissues of any description. There were more cheers when I reappeared so I sashayed over to the boys Suzette-style and did a little twirl before sitting down.\n\nThe rest of the evening was a blur of more beer, dirty jokes, several rousing choruses of our victory anthem and quite a lot more snogging. I kept looking down at my present and beaming. I worked out that the last time I had been so delighted with an item of clothing was the Little Princess outfit Santa shelled out for when I was eight. \n\nIt was eventually time to go and George called us taxis. Not to put too fine a point on it I was feeling randy as hell. I asked the boys whether they wanted to come home with me and was more than surprised when they refused. They were all going in one taxi, me in the other. I tried to change their minds with a last round of snogging; it was me who was grabbing ass that time. Only a grinning George looked in any way amenable and even I was not that drunk.\n\nI got home and staggered a bit as I stumbled out of the cab into the cold air. I fumbled in my bag for my door keys as I stood by my garden gate and was more than a little relieved when I heard a familiar voice.\n\n'Need some help?'\n\n'What ho, Mr J. Nice to see you.'\n\nI started giggling and threw my arms round his neck. I kissed him sloppily, ignoring his reluctance. He took charge of me first firmly holding my arms against my side until I stopped trying to grope him; then he gathered up the contents of my bag as best he could. He took me by the arm and marched me to my door. Well, he marched, I sort of weaved. He ordered me to be quiet when I started up a solo rendition of the three-one song.\n\nOnce inside, I found that sitting on the carpet was an overwhelmingly attractive option, so I took it. Mr J made a couple of attempts to get me up and then went through to the kitchen. I heard him putting on coffee. I rolled over on my side and with an effort started to crawl after him. It took a while.\n\n'What ho again Mr J.'\n\nI made it just inside the kitchen door and was looking around trying to work out what to do next and how to do it. Mr J came over and this time I was able to be more cooperative as he yanked me to my feet. Between us we made it to the table and I just made it to a chair when my legs gave way. I drank the glass of water he put in front of me in one gulp. He replaced it and I examined it critically.\n\n'I thought you were making coffee?'\n\n'I am. But you need to dilute the alcohol in your blood. It'll help with tomorrow's hangover.'\n\nHe busied himself with cups and the like. It was difficult to follow exactly what he was up to as every time I moved my head my vision swam. I decided instead to keep my head still and concentrate on focussing. There was my bag, there were the cups, there was my glass of water -- I reached for it and managed to grasp it without knocking it over -- there was a small cardboard box.\n\n'What's that?'\n\n'I didn't say anything.'\n\nI sighed and concentrated on constructing a sentence.\n\n'That box on the table.'\n\nI sat back satisfied with my efforts and fairly pleased that my vision became only slightly blurred.\n\n'It came today. That's why I was waiting for you to come home.'\n\nI made a concerted effort to reach for it. Mr J charitably pushed it towards me.\n\n'I love you Mr J.'\n\n'I know.'\n\n'You're my best friend.'\n\n'The last person who said that to me was the first mate on one of the ships I served on. And he was a gay weightlifter.'\n\nI managed to laugh, but only after a few minutes processing the words he had spoken and sifting them for meaning. I pawed at the box until Mr J took it from me and slit it open with a kitchen knife. I searched through the padding of screwed up brown paper and pulled out a couple of plastic encased sheets of cardboard. They both had something attached to them but despite a supreme effort of will I could not work out what they were. The words on the cardboard were outside my ocular control.\n\n'What're these?'\n\nMr J took them from me and stepped back under the main light to read.\n\n'Nipple clamps.'\n\nHe tossed them back towards me and picked up the percolator to pour drinks.\n\n'You want sugar or milk? Black coffee is, I think, traditional in these circumstances.'\n\nI grinned and nodded. Too many words; I had no idea what he was saying. I picked up the packages and stared at them again.\n\n'They're nipple clamps.'\n\n'Yes.'\n\n'I ordered them after your little party.'\n\nI giggled and rubbed my boobs unconsciously. I started to pull and bite at the packaging trying to get it open. Mr J watched me with an amused smile and finally prised them from my fingers and took a pair of scissors from the rack under the cupboards. I watched him expertly snip of the tops off and tug out the contents with some difficulty. There was the tinny clatter as the contents hit the table. I reached for them and forced my eyes into focus.\n\nThey were funny looking things, so I laughed. Mr J looked over and pushed my coffee towards me. For the sake of politeness I took a sip and grimaced at the heat and the bitterness. He grinned and pushed over a sugar bowl I had forgotten I owned and a plastic bottle of milk. I took another sip of the coffee out of dutifulness. It was not as bad as the first time, so I ventured a gulp. Mr J laughed at my expression.\n\n'Baby steps sweetie. Don't run before you can walk.'\n\nThis time I followed the entire meaning of his words and dutifully took another sip of the coffee. I was beginning to get my world back into focus. I took an inventory. My head was still fuzzy but clearer, my coordination seemed to be working -- I held the chained clamps against my chest to check, my legs seemed to have found their bones again. All in all, I thought, I'm getting it together. I applied myself to the coffee with a vengeance; Mr J smiled down at me indulgently and poured me a second cup. I started to feel a bit ashamed.\n\n'Sorry about this, Mr J. We won tonight. I got a bit carried away.'\n\n'First time I think?'\n\n'Yes.'\n\n'Well done. I love the new jumper.'\n\n'Present from the lads. Sweet of them.'\n\nHe started tidying the table and tried to keep topping up my coffee without me noticing. I let him get away with it. I started toying with the clamps, more for something to do with my hands than anything else. The adjustable ones looks like a pair of tongues with some kind of slide; I presumed to increase the pressure. \n\nThe chained pair were rather smaller. I held one and swung the chain like a pendulum. I squeezed the clamp open with some difficulty and tried it against my boob. Even with a sports bra and padded jersey below it, it clamped hard and I could feel it pressuring my skin. It was uncomfortable rather than painful, but my speculations about how it would feel against my bare nipple worried me more than a little. I quickly pulled it off.",
        "'Feeling better?'\n\n'A bit. I'm sorry about this.'\n\nI was feeling even more ashamed than a few minutes before. Mr J was being so assiduous in his care I made more of an effort to be sociable.\n\n'I haven't been as drunk as this since I was a kid. I don't know what came over me.'\n\n'You were just excited, no doubt. It's Xmas. One thing led to another?'\n\n'Got it in one. And you've tasted George's beer.'\n\n'Strong stuff.'\n\nI nodded and was pleased my head stayed in one place. It was then I remembered my other parcel. I pulled it and the accompanying card from my. The shape betrayed a cheap box of chocolates and investigation proved my speculations correct. I guessed one of the punters down at the Crown was starting a fan club. I opened the card, a reproduction of an Edwardian pin-up, and was surprised when thirty pounds fluttered out of it. Partly because of the beer and mostly because of the appalling hand writing, I could not make head nor tail of the contents. I flapped it at Mr J.\n\n'Read this for me will you, please.'\n\n'Is it written in code? Even I've got neater writing than this.'\n\n\"Probably from one of George's engineers.'\n\n'\"Dear Suzette, I hope this card is appropriate\".'\n\nHe turned it over to look at the picture and nodded appreciatively.\n\n'Not bad I suppose. \"You didn't ask for my credit card details last night, so I have enclosed a small sum I hope covers your services\"... what have you been up to young lady?'\n\nHe looked at me with mock sternness but his expression soon broke in to a grin.\n\n'\"I look forward to seeing you on the fifteenth, but would love to 'talk' again on the phone. I shall forward you the details when I have them.\"'\n\nI groaned and held my head in my hands. I could feel myself going red.\n\n'\"Much love, Matt.\" There also appear to be a number of kisses here too. The \"talk\" was in inverted commas by the way.'\n\nMr J could barely stop himself laughing. I glared at him from between my fingers. I bowed my head, hands sill covering my eyes, and told him about my conversation with Matt after I left his house that evening. His laughter eventually burst out in a no-longer suppressed torrent. It went on for so long I eventually raised my head and removed my hands so that he could see that I was not amused. It only seemed to make him laugh more. I tried to stamp my foot on the floor to indicate my anger, but banged my knee against the table leg. It hurt.\n\n'Ow, ow, ow. I think I might have broken something.'\n\nThat just seemed to make him laugh more, but he did come round the table and rest a hand on my shoulder. I was still feeling cross with him, but mostly very, very silly.\n\n'I blame that Tracy with all her \"they like a bit of chat\". The bastard thinks I'm a tart.'\n\nI felt him squeeze my shoulder harder in sympathy -- I hoped -- as he struggled to bring his laughter under control.\n\n'He thinks Suzette is a tart, not you darling. And I suspect that might have been the impression she was trying to give him. So well done.'\n\nI harrumphed. It's something people in PG Wodehouse books do. For the past half-hour or so I had been experiencing a growing physical discomfort that I could not quite identify, though somehow if was very familiar. Then it struck me. I needed the toilet, and quick.\n\n'I'm going for a wee. I'll deal with you later.'\n\nI stood up rather too quickly making my head swim again; I got a shooting pain from my knee as well. Trying to steady myself on the back of the chair and reach down to rub the painful area proved too much and I slumped back into the chair. I felt like crying.\n\n'Here, let me help you.'\n\nMr J placed a firm hand under my elbow and eased me slowly to my feet. He pulled up the knee of my trainers and scrutinised my knee.\n\n'You'll have a nasty bruise there in the morning, but it doesn't look like anything's broken.'\n\n'What do you know.'\n\nI was feeling resentful and sullen as I leaned on him and we made our way into the hall. There is nothing worse than been pissed and angry around someone being helpful and considerate. Especially when they're reasoning with you and you know in your heart-of-hearts that they're right.\n\n'Stop being smug you old fool.'\n\n'I wasn't, honestly. I'm concerned for your physical state and I shall not leave until you're safely tucked up in bed.'\n\nHe sounded a bit hurt. I didn't care. He should recognise that my bladder, my knee and my injured pride should be the only items under discussion.\n\n'If you think you're getting in there with me you can forget it. I might let you help me have a go with those nipple clamps. But that's all.'\n\nHe gave a little chuckle. We were at the door of the downstairs loo and he was trying to keep me propped up and open the door at the same time. I was in no mood to cooperate, but in my overwhelming need to relieve myself I was trying to be flexible. We got caught in the doorway together like a pair of comedians in a silent movie. He stepped quietly back, still holding my elbow for support, and I managed to get myself seated. I remembered I was still in my knickers and sweat pants just in time. I lifted myself up, but the pain in my knee prevented me holding my weight.\n\n'You're going to have to help me.'\n\nI muttered through clenched teeth. I still could not see what was so funny, but was beginning to get an idea. He kneeled in front of me, all practicality.\n\n'Put your hands on my shoulders and ease yourself up. Weight on your good leg.'\n\nI did as I was told and felt his tugging at my pants and knickers. The gym panties I wore for football have a strong elastic waistband and it took us both quite a bit of effort until I could slump back feeling the welcoming cold of the toilet seat on my naked buttocks. We were both giggling now and I closed my eyes in relief as the stream of hot urine cascaded out. He continued to ease my clothes down until they were around my ankles. \n\nI peed on and on and subconsciously slipped a finger into the stream and raised it to my mouth. When I realised what I was doing I opened my eyes quickly to check whether Mr J had noticed. He had a look of amazement on his face. I opened my knees.\n\n'Want some? Better be quick I've almost finished.'\n\nAttack is always the best form of defence. He smiled up at me, not, I noticed, taking his gaze from the stream of piss which was, at last, slowing to a dribble.\n\n'What's so funny now?'\n\n'I was just thinking, I'd better check my pension.'\n\n'And that has what to do with anything?'\n\nI was genuinely confused. That, or still more drunk than I thought.\n\n'Well, if you're going to start charging thirty quid for someone to wank themselves off - sorry about the language - our relationship is going to cost me a fortune.'\n\nHe let out a loud bark of laughter. I found myself laughing along.\n\n'I'm already thinking of cancelling your pensioner's discount, so don't push it.'\n\nI stood groaning and we performed another dance to get back to the kitchen. My knee was probably not fractured I grudgingly admitted to myself but the thought of the stairs was daunting.\n\n'I know you probably want to get off, and thanks for all your help by the way, but would you mind seeing me to bed. I don't trust myself on the stairs.'\n\n'With pleasure.'\n\n'Bring those will you?'\n\nI nodded towards my new sex toys. Mr J picked them up as if he was holding something hot. I snorted. He filled another glass with water, put my hand on his shoulder and we set off. I made it up one step at a time, leaning heavily on the bannister and grateful that Mr J was behind me. I felt pretty much OK but wasn't wholly confident I wouldn't tumble. We made it to the bedroom and I fell onto the bed breathing hard.\n\n'Come on. Sit up.'\n\nHis voice was commanding. I squinted through one eye. He was standing over me hands on his hips. He gestured me to rise.\n\n'Arms up, that's right.'\n\n'There's no need to rub it in.'\n\nI giggled to myself. He might be old enough to be my dad, perhaps even my grandad, I thought, but he had fucked me, he could drop the worried parent act. I did as I was told though and was soon naked. I fell on my back again.\n\n'Do you want a nightie or anything? Or shall I just tuck you in?'\n\n'You'll do nothing of the sort. Pass me those nipple clamps, I'm dying to try them.'\n\n'I really think you should leave them until tomorrow. Sleep's the best thing.'\n\n'To quote Bertie Wooster \"Pshaw and piffle\".'\n\nI wasn't sure that was correct, but it would do in the circumstances, it was a pretty good improvisation of a nineteen thirties exclamation. Mr J smiled indulgently and passed over the chained clamps. I fumbled with them for a while but eventually managed to get one into the correct position in my hand, thumb and forefinger positioned over the arms of the levers. I looked down at my boobs and only then realised that my nipples were anything but aroused. In fact, they seemed to be in agreement with Mr J and had retreated so far into the areolae that I thought for a minute they had run off.\n\n'Come on Mr J, do your stuff will you?'\n\nHe looked sceptical and disapproving. I had to frown him into action and was a bit surprised it worked. He blew on his hands to warm them before stroking a finger over my left boob a few times and then stopping.\n\n'Come on, matey, I haven't got all night.'\n\nHe kneaded the breast and stroked my nipple with his thumb. Somewhere inside me I felt something stir, but my nipple was still no bigger than a pimple.\n\n'Get your mouth on it. Suck it.'\n\nI growled and he did as I instructed. His lips felt soft and his tongue wet and warm. He sucked and nibbled, drawing as much of my boob into his mouth as he could manage and then releasing it to go to work with his tongue again. I groaned. The alcohol was still confusing my senses and I wasn't exactly sure what part of me was getting turned on, but somewhere, something was beginning to burn and I wanted more. I felt him squeezing my other breast and stroking my stomach and waist with his other hand. I started to squirm and moan.\n\n'That's more like it. Your discount is definitely reinstated. Let's see how it's going.'\n\nMy left nipple was now pert and red. The who area around it glistened from Mr J's saliva. I tingled when I touched it.\n\n'Great work. I knew you had it in you. Now let's try the clamp.'\n\nI moved my hand up towards my breast and the slippy metal object promptly fell onto my chest. I scrabbled around and eventually caught hold of it again. I pushed it towards Mr J.\n\n'Here. You're going to have to do it..'\n\n'Do I have to? I really don't think this is a good idea.'\n\n'Yes.'\n\nMiss Powderpuff was back in the game. My tone was brusque. I glared at him and maintained the frown as he picked up the clamps and, after examining it thoroughly, opened the jaws and slowly advanced on me.\n\n'Get on with it.'\n\nWas probably not the best thing to say. He had been positioning it over the erect nipple. I could feel the soft padding on the inside of the jaws brushing the taut skin. That felt quite pleasant; what came next did not. I don't know whether it was my barked instruction, or that he was getting irritated with my attitude, but he released the clamps quickly. And didn't I know it. I screamed.\n\n'Get it off, get it off.'\n\nI probably said a few other things as well, in fact I'm pretty certain I did. I was suddenly sweating all over with shock. I felt like someone had driven a spike through the tip of my nipple at the same time as biting down on it. I writhed and shook with the agony. None of which helped Mr J get hold of the cause and deal with it. I was letting out bursts of little pants to try and alleviate the pain. I could feel tears in my eyes and the searing pain seemed to be getting worse. I cried out again. It felt as if someone was impaling me on a hot poker.\n\nMr J finally released me after placing a firm hand under my chin to stop me wriggling, and batting away my flailing hand to get a grip on the source of my discomfort. When he touched the clamp I shouted out again; fortunately he ignored me, took a firm grip and released the tension. I felt a surge of relief flow through me and I started sobbing. I sat up and threw my arms around Mr J's neck and kissed him. I cried for a moment on his shoulder while he whispered word of consolation.\n\nStrange thing was though, that once I could focus on things other than the pain in my nipple, I noticed a not unpleasant sensation in my pussy. It was sort of glowing and sending out sympathy pains with my throbbing nipple. I stroked my clit gently; it encouraged the warm sensations and converted what I had thought of as pain into little stabs of pleasure. I inadvertently let out a soft moan.\n\n'Well you seem to have recovered. I leave you to your games and get off home.'\n\n'You most certainly will not.'\n\nI was still trying to compute the mixed feelings I was getting. I was not ready for him to bow out yet. He sat down on the bed next to me and put an arm around my shoulder.\n\n'You need to sleep it off. Take it from one who's been there.'\n\n'I know, I know. But not yet.\n\nI knew he was right and was certain that he meant well, but five pints of George's best beer had assassinated common sense and replaced it with stubbornness. I let Miss Powderpuff call the shots.\n\n'We're going to try those other clamps.'\n\n'Are you stupid. You were in agony. If you think...'\n\n'Shut up Mr J. I'm going to do it and you're going to help. Let's have a look at them shall we?'\n\nHe stared at me as if I was mad. I returned his look with a glare. After a minute's stand-off he reached over to the bedside table and picked up the adjustable clamps. I laughed to myself both at the victory and to remind myself I needed to buy more condoms. Mr J passed me one of the toys and kept the other for himself. The slide on the contraptions moved easily closing the smooth ends on each other. I grinned at Mr J, I was still more than tipsy despite the coffee.\n\n'I don't know whether to trust you with these.'\n\n'My thoughts exactly.'\n\nHe made to get up.\n\n'Sit down.'\n\nHe sat back down with a sigh.\n\n'I want you to do it slowly. And stop if I tell you to.'\n\n'OK.'\n\nHe sounded resigned.\n\n'And Mr J.'\n\n'Yes.'\n\n'I saw your hard on when Tracy was ripping my tits off yesterday. So don't pretend you're not enjoying it.'\n\n'I shall try my hardest.'\n\n'Ooh, vicar.'\n\nSo it was more like a line from a Carry On movie than a Wodehouse farce, but at least he was smiling again. I eased myself back on the pillows and offered him my right breast. I shivered a little as he positioned the ends around the nipple. It was cold. I watched as he slowly eased up the slide and began to feel the slightest of pressure. He stopped when the tension was enough for the clamp to hand free unaided. I shook my shoulders and watched it bounce.\n\n'I think a little more than that, don't you?'\n\nHe applied more pressure and I must have winced. He stopped immediately.\n\n'Feels like it did when you were sucking me. Nice, but I think I can take some more.'\n\nHe slowly pushed the slider up until I took a sharp breath.\n\n'That's good.'\n\nMy pussy was agreeing. The sensation I had felt coming down from the chained clamps was coming back. I handed him the other and slid my hand between my legs.\n\n'Quickly.'\n\nI was breathing fast and let out an involuntary cry as he tightened the tool around my left nipple. It was still sore and I arched my back as the pressure increased. Both hands on my crutch. I was impaling myself on two fingers of one hand and massaging my clitoris with the other. Pleasure as rising up my body and fighting the sensations of pain in my breasts. It was exquisite.\n\n'More pressure.'\n\nI could barely get the words out. His hands were shaking slightly as he took hold of the right slide. It jerked upwards and I cried out and involuntarily pushed up my torso. He made to ease it back but I stopped him with a barked order.\n\n'And the other one.'\n\nI was working my fingers in and out with increased vigour and could feel my orgasm building. I shrieked as the pressure on my left nipple suddenly shot up. It was almost unbearable. Almost, but not quite. I panted and strained with the effort I was making. I pushed a third finger inside myself and flexed them to increase stretch my now soaked vagina. I don't know why I did it, but I pinched my clitoris. Hard. And came almost immediately.\n\nThe pain seemed to abate with my climax, but then return almost immediately. I writhed against the bed covers pushing my arse down hard and feeling the pressure on my shoulders as my stomach, chest and breasts were forced up. I sobbed with pleasure, but as the orgasm abated the pain in my tits suddenly became unbearable.\n\n'Take them off.'\n\nI shouted. He was much faster this time and I experienced waves of relief as first my let nipple and then the right were freed from the steel grip. I lay back shaking and shivering as the sensitivity drained from me. I felt Mr J roll me and ease me under the duvet. He stroked my hair and I felt the pressure on the mattress drop as he stood.\n\n'Mr J?'\n\n'Yes, sweetie.'\n\n'Aren't you going to give me a goodnight kiss?'\n\n'I shall. Not that you deserve one. A spanking would be more appropriate after your behaviour this evening. But you'd probably enjoy that too.'\n\nI giggled and raised my mouth to him. He applied pursed lips, but I grabbed his neck and thrust my tongue into his mouth. I felt his shock immobilise him, but he quickly relaxed and we enjoyed a soft and gentle embrace. I sighed contentedly and released him.\n\n'Thank you for looking after me.'\n\n'Any time. But let's try to make it never again shall we? There's a glass of water next to the bed if you wake up feeling dry.'\n\nI passed into sleep so quickly I didn't even hear him leave.\n\nWhen you wake up in the morning with a pain in your chest and a splitting headache, it is natural to assume you have suffered major heart problems. Isn't it? Well I certainly did. I lay there panicking and mentally distributing my worldly goods. Thankfully for the emergency services my phone was not to hand and when I sat up quickly to reach for it my swimming head and a strong feeling of nausea reminded me of the events of the night before. I groaned.\n\nIt was of course too late for regrets but I frequently said silent prayers with a true atheist's hypocrisy as I gently prepared tor work. Two glasses of water, two strong cups of coffee and a couple of paracetamol just about took the edge off things. The hot shower aggravated the soreness in my nipples which body lotion did little to salve. All in all, if Dave and I had not been divorced already, we probably would after that hour; either that or one of us would be facing a murder charge. I missed him; I really needed to kick someone.\n\nWhen I threw up after cresting the first hill on my way to work, it was precisely the right time for regrets. I had taken the bike reasoning that I was less of a danger to other road users and, foolishly, that physical exercise would help with the hangover. Somewhere at the back of mind I thought I had read somewhere that former Tour de France winner Bradley Wiggins liked a beer. From that I somehow extrapolated that riding with a hangover must be good for you. The cheery honks from passing cars did not help my mood.\n\nI have to say, my colleagues were amazing. There may have been a strong element of self-preservation in their generosity, but I barely spent a minute of the day without a cup of tea in front of me. One of the younger team members made sure fresh paracetamol arrived the minute the four hours between allowed doses expired and one of the Asian women gave me the plain boiled rice she had prepared for her own lunch In an effort to get something solid into me. As five o'clock rolled up I was beginning to congratulate myself on having survived the day when Tracy's text arrived.",
        "\"CU to tonite.\"\n\nI had completely forgotten our arrangement with Mandy. I felt myself slump internally. I couldn't let them down, but the prospect of smelling the beer-soaked atmosphere of the Crown, let alone sitting in it for a couple of hours made my stomach somersault. I scrounged a lift home from someone who lived close to me and dosed myself with water, dry toast and more coffee in the vague hope that life would return to my savaged corpse. It was then I spotted the large brown envelope and a note from Mr J sitting in the centre of my bare kitchen table that I had missed entirely that morning.\n\n\"Could you ask Mandy if she would autograph this for me please.\"\n\nInside was the copy of Readers' Wives which included her photo spread. I looked again at the skinny, pouting pin up of forty years ago with envy. I seriously doubted I would live four more days, let alone four decades. I forced myself to go upstairs and prepare. That didn't help. I struggled in to the fishnets, split skirt and scooped blouse of my street walker's outfit and looked at myself in the mirror. The face that grimaced out left me with serious doubts that even Matt would pay to pick it up. I decided make-up was essential and spent thirty minutes applying every cosmetic I owned to one part of my body or another.\n\nA further examination in a full length mirror suggested my labours had made a slight improvement to my image. When I snapped on the French garter, put on a pair of patent leather stilettos and covered everything up with a long winter coat, I felt ready for whatever the evening would bring.\n\nI was wrong. Even though I had steeled myself for the expected smell of the pub, the reality was different. I had to stand for a moment inside the door, leaning on the jamb before venturing further. The sight of a cheery George in his familiar position behind the bar did nothing to raise my spirits.\n\n'Looking good Susan. Another five pints tonight is it?'\n\n'What ho, George. That's you off my Xmas card list you insensitive slob. Do you have such a thing as a fizzy water?'\n\n'Don't worry I'll froth up some of the stuff out the tap with a fork. That should do you. They're in the back room. I'll pass it over.'\n\nHe was the only one laughing as I pushed through to the Snug. The excited babble of women's voiced stopped as I entered.\n\n'God Susan love you look terrible. Bad night was it?'\n\n'Thanks Mandy. The worst. I think I even kissed George.'\n\n'You should have texted Tracy, we could easily have done this another night.'\n\nNow she tells me. Mandy was resplendent in a figure-hugging scarlet sheath dress. I had to admire her. Most women weighing as much as she did disguised themselves as best they could in clothes which bore more resemblance to old sacks than couture. Her vast bosom rested on a comfortable stomach and looked perfectly proportioned. It was only in back view that you got a real sense of her hugeness.\n\n'Hi Susan, I brought this. We'll soon wake you up.'\n\n'What ho, Tracy.\n\nTracy wacked one of the padded seats with a long riding crop. It raised a cloud of dust and sounded as if the force may have ripped the fabric. I shuddered which just made her laugh. She dressed in cut-off jeans over thick winter tights and another tight number from her T-shirt. This one bore the legend \"Slut\". I tried to grin at her.\n\n'I hope you don't mind me being here. I just came to say thanks for helping Uncle George look after me the other night. And, you know.'\n\nIt was Scarlett. My eyes were drawn automatically to her ankle. The strapping was clearly visible under her sheer black tights. She smiled pertly, her flaming red hair was drawn up into a pony tail and her naturally pale face was barely coloured by traces of make-up. She was stunningly beautiful.\n\n'How's the ankle?'\n\n'Not too bad. I can get around now, but I won't be dancing for a while.'\n\nI ran out of conversation, so I just nodded. My head still felt as if it belonged to someone else. George came in from the bar and put a tray on one of the tables. It held a couple of alcopops, a small glass with an accompanying bottle of tonic and a bottle of Perrier water with barely any of the dust left on it. He gave me a wink as he left.\n\n'OK you lot, let's get to it.'\n\nMandy was all business. She looked me up and down with a critical eye.\n\n'You gonna take that coat off?'\n\nI got to my feet and eased myself out of it. Tracy whistled appreciatively, Scarlett put her hand over her mouth and giggled. Mandy appraised me with a cool look.\n\n'Very nice. I like the garter. How'd you come up with the idea?'\n\n'I had a chat with Matt, the guy who's hiring us. It's what he said he wanted.'\n\n'Naughty boy.'\n\nMandy smiled. Tracy clapped a palm on her thigh.\n\n'I told you they liked a bit of chat.'\n\nI fixed her with a cool stare and started to tell them about our \"bit of chat\". I started out irritated, but by the time I finished my tale I could not help but join in their laughter. Mandy was holding her sides she was laughing so much.\n\n'He gave you thirty quid. I've been in the wrong business.'\n\n'I didn't know whether to be insulted or flattered.'\n\n'Flattered, sweetheart, definitely flattered. I know you're into this 'cos you like showing off, but if we start giving the punters stuff for free...'\n\n'You end up with your knickers round your ankles and a dick up your arse.'\n\nChorused Tracy and Scarlett. They had obviously heard Mandy's mantra before; I definitely felt like a new girl. Mandy tried a frown but ended up grinning.\n\n'Just because you've heard it before doesn't make it wrong. You two.'\n\nShe pointed at Tracy and I. \n\n'You've got to take charge as soon as you get into the suite. You're not guests, you haven't been invited; you're performers and they're paying you to be there.'\n\nI nodded; Tracy mock-yawned.\n\n'Get in there and dominate the room. Find the groom and the best man tickle their fancies a bit, get the rest of them sat down, put on some music and get on with the show.'\n\nShe made it sound easy. Then I remembered how well-behaved the lads had been at my first show and the crowd down at the pub the other night. Might be doable.\n\n'I understand you're giving them a bit of spanking and some girl-on-girl stuff.'\n\nTracy leered at me and gave a little cheer.\n\n'Good idea. They want a night to remember and its odds-on none of them will have seen anything like it. You.'\n\nShe pointed a finger at Tracy looking like a cross between Lord Kitchener and Uncle Sam in a recruiting poster.\n\n'Try and keep yourself under control.'\n\nShe left it at that. Scarlett didn't.\n\n'When I did one of these with her she fucked me silly with a dildo and ended up in a gang bang with three blokes. I had to suck off the rest of them while they watched. And I was on a diet.'\n\n'OK, OK. I was younger then. I'm much more professional now.'\n\n'It was three months ago.'\n\nMandy was smiling indulgently at her daughter and niece. I thought I had to speak up.\n\n'About that. Can we talk about it?'\n\n'What?'\n\n'The girl-on-girl bit and the spanking. I'm new to both of them and I don't really know how far I want to go.'\n\nIt stopped Tracy and Scarlett's tiff from developing into a row. Mandy extended her look of maternal concern to me too.\n\n'That's important. You listen up Tracy. So what're your limits? How far do you think you want to go?'\n\nI was put on the spot and tried to prevaricate.\n\n'Well, I really like spanking, but I'm not sure about that.'\n\nI nodded at Tracy's crop. She flexed it provocatively and grinned. She released the end and watched it quivering in her hand before using it as a pointer aimed at me.\n\n'We all saw you juicing up the stage last Friday.'\n\n'You didn't.'\n\nScarlett's mouth was a perfect \"O\". She was blushing on my behalf.\n\n'You know what it's like; once you start down Orgasm Street it's all one-way. All those blokes watching just... I don't know.'\n\nI threw up my hands in exasperation. Mandy was still all business.\n\n'And girl-on-girl?'\n\nI coughed.\n\n'I've only tried it once.'\n\n'That was with me at Mr J's house.'\n\nThere was pride in Tracy's voice. Scarlett looked a bit jealous.\n\n'You should have seen her. Wriggling like a worm on a hook and screaming like a banshee.'\n\nNow I did blush. It was not exactly like I remembered it, but it wasn't too far from it. I could feel that familiar tingle in my pussy. Mandy continued.\n\n'The boys would love that. And they are paying a fair whack for this.'\n\n'But what about me? What if I lost it completely?'\n\nTracy and Scarlett leaned forwards in their seats eagerly waiting for what was to come. Mandy just raised an eyebrow.\n\n'And?'\n\n'Well the last time I did, I ended up doing a Tracy.'\n\nShe looked a bit indignant at the implication. Scarlett just looked innocent.\n\n'What happened?'\n\n'I ended up fucking four guys. My bottom was sore for a week.'\n\n'Spanking?'\n\n'No, the other.'\n\nShe repeated her little-girl giggle and put her hand over her mouth again. It was clearly a mannerism she was unconscious of. I smiled at her. That made her blush. I looked at her with a fresh eye. Were we flirting?\n\n'I think we need to get to the bottom of this.'\n\nMandy was unaware of her unfortunate phrase. The rest of us were now and broke into a gale of laughter. Mandy eventually twigged and laughed along. The atmosphere was lightened considerably and we all took the opportunity to have another go at our drinks and exchanging soft glances. Mandy eventually drained her glass and went to the small bar to shout for George to bring another round. He brought through a tray a few minutes later. Whatever Mandy's glance was meant to convey, but it worked wonders. No wisecracks, no leering glances, he simply turned to leave.\n\n'We're out of Perrier, I brought you a lemonade.'\n\nHe called over his shoulder as he left. Mandy smacked her hands together, the crack almost echoed around the room. She rubbed them together eagerly.\n\n'Right you lot. If it's OK with you Susan we'll give your arse a little work out.'\n\nI was surprised how enthusiastically I stood up. Tracy was almost as quick and swished the crop about like one of the three musketeers. Mandy looked from her to her cousin.\n\n'Not you. Scarlett.'\n\n'What?'\n\nTracy stopped in mid-stroke and let her arm fall to her side. She looked crestfallen. I hugged her and pecked her cheek. \n\n'Don't worry. You'll get your chance later.'\n\nShe perked up a little and her grin soon returned. We both turned to Scarlett, Tracy handing her the crop. She took it between her finger and thumb and held it at arm's length.\n\n'I can't.'\n\nMandy was not having that.\n\n'Yes you can. You can't strip in pubs all your life. You've got to have other strings to your bow in this business.'\n\nI had never thought about it like that. I had no need for extra income, but for girls like Scarlett and Tracy, I thought, modern Britain offered this or a job in a fast food outlet. I threw an arm around her shoulder and squeezed.\n\n'I want you to. Come on, it'll be fun.'\n\n'What do we do?'\n\n'Let's give them a bit of room.'\n\nMandy nodded to Tracy and the pair of them set about clearing a space in the middle of the room, carrying the tables and then piling the chairs on top of them. I sat down next to Scarlett as she flapped the crop hesitantly. I took her hand, tightened her grip and made her practise a few more decisive strokes. I smiled at her and nodded encouragement. I moved my hand to her head and started stroking her hair. She started at first, but soon I felt her relax and move her head the better for me to run my fingers down her pony tail. We both jumped slightly as Mandy dropped an oak arm chair in the centre of the room.\n\n'Right misses, come over here.'\n\nHer tone left me in no doubt that she had supervised this sort of thing before. We both stood and walked to her.\n\n'You here. Kneel on the seat.'\n\nShe tapped me on the shoulder and patted the back of the chair. I tried to get in position but the skirt was too short for me to settle comfortably. I hoisted it up over the tops of my stockings and settled into position, pushing my bottom backwards and my knees and thighs against the arms of the chairs. Mandy smacked my arse hard with the flat of her hand. I gasped. The other two laughed.\n\n'That'll do.'\n\nShe was talking to me, but Tracy and Scarlett quietened too.\n\n'Now Scarlett, give me that, I'll show you what to do.'\n\nI took a deep breath and waited. I could not see Mandy who was standing behind me, but Scarlett and Tracy were standing in front of me looking studious. I felt the softest of touches on my bottom by what I assumed was the folded leather at the end of the switch. She made two circular rounds of my cheeks before tapping me gently on each. I wiggled my bottom in appreciation.\n\nThe next blow was harder but not uncomfortable. We continued in this way for a few minutes, short bouts of stroking followed by increasingly hard smacks from the crop. I could feel my butt getting warmer and took my bottom lip between my teeth. I was nipping it lightly with each stroke. I shivered as Mandy stroked the insides of my thighs and then gasped as she brushed the leather against the thin gusset covering my slit.\n\n'See how you do it?'\n\nI looked round. Mandy was standing her hands balled into fists and thrust into the plumpness above her waist. The long crop, handle completely enveloped in one of her hands, shook in time with her breathing. She smiled down at me.\n\n'Not too much for you?'\n\n'No. Not at all. I can see your daughter doesn't get her sadistic tendencies from you.'\n\n'Bloody cheek.'\n\nTracy had pasted a look of protest to her face but she couldn't sustain it for long. She whispered something to Scarlett and they both laughed. Tracy stuck out her tongue at me.\n\n'I told her to rip your nipples off.'\n\n'She can't, you already did that.'\n\n'Alright you lot. Come on our Scarlett. Your turn.'\n\nScarlett touched my head as she walked past me and muttered apologies. I watcher her take the crop and make a couple of practise wafts. She seemed to set her jaw and then step into the space Mandy had been occupying. Well, about one-third of that space truth-be-told. She was slighter than Tracy with breasts much less pronounced. She was wearing a short denim skirt, it might even have been the one Tracy wore to Mr J's, and a tight white shirt with the word \"princess\" across her boobs. I wondered whether she and Tracy had bought their T-shirts at the same time. She took a step towards me.\n\n'Would you mind looking at them? You're putting me off looking at me like that.'\n\nI did as I was asked. Tracy's leer had not subsided; Mandy looked serious with her arms folded under her breasts and above her stomach. I felt the first touch on my bottom and couldn't help but let out a small laugh.\n\n'Sorry Scarlett, it felt like a butterfly had landed on my bum. I'm not made of china you know.'\n\nShe clumsily dragged the leather loop over my buttocks and then gave me a sharp smack. The force made me inhale. Mandy's voice was harsh.\n\n'No. Not so hard to start with. Do it like I showed you.'\n\n'Sorry auntie.'\n\nShe sounded contrite.\n\n'Stuff auntie. What about me? It's my arse you're bruising.'\n\n'And Susan. I know you're a tough cookie, but make some noise. Pretend like she's really hurting you. The stag-lads will cream themselves.'\n\n'Shouldn't we have a safe word?'\n\nI'd been looking up spanking on the internet.\n\n'Good. I always used \"velvet\". How's that?'\n\n'Right. Scarlett, ignore everything I say and how much pain I might seem to be in. But if I say \"velvet\" stop straight away. OK?'\n\nI heard Scarlett take a deep breath and felt the crop stroking my bottom again. I tried a small groan.\n\n'Good.'\n\nI almost expected to see Mandy and Tracy holding up score cards. She kept circling my buttocks and I kept moaning. It was hard not to laugh though. The first slap of the leather caught the soft skin just below the hem of my knickers. It was the shock more than anything which made me cry out.\n\n'Sorry Susan, should I stop?'\n\n'No. Don't be silly. I was just surprised. Carry on.'\n\nShe hit me again, this time on the fabric stretched over the meatiest part of my butt. I barely felt it but let out another cry. The blows, well taps really, came thick and fast. It was only when she missed my panties that I felt any real pain and then not much. I added pleas to my cries remembering that \"they liked a bit of chat\".\n\n'Ooh, stop it.'\n\n'No. You've been very naughty.'\n\nScarlett picked up on my new ploy straight away. The next blow on my arse was the hardest so far. I found my bottom lip back between my teeth.\n\n'I won't do it again.'\n\n'I know you won't. Not after I've finished with you.'\n\n'Please stop.'\n\n'Taking your clothes off in public.'\n\n'I didn't.'\n\n'For the whole world to see.'\n\nShe was giving my bottom a whip for every word she spoke. I began to get the feelings she was speaking from experience, not fantasy. The blows were getting harder to match the edge in her voice. Mandy intervened.\n\n'Remember Scarlett, you've got to break up the spanking with some gentler stuff. Stroke her with the cane. Touch her hair. Tell us what you're doing. It's a real turn on.'\n\n'Sorry auntie. And you Susan. Ok let's start again.'\n\nI felt the crop feather against my buttocks again.The caress was much gentler and much more confident this time.\n\n'You've got a lovely round bottom. I can feel how soft it is.'\n\nShe tapped me gently and I sighed.\n\n'I'm going to run my whip down your legs.'\n\nI felt a slight tickle as she stroked the inside of my thigh. She withdrew it and hit me, harder this time. I gave a small cry of real pain.\n\n'You like that don't you? Having your soft, round bottom spanked?'\n\nShe hit me again and then resumed the stroking. She was humming to herself. She then gave me the hardest blow yet. I let out a scream of surprise.\n\n'Answer me when I ask you a question.'\n\nI heard the slap of the leather on the skin of my buttocks. The pain came a second later. I cried out again.\n\n'What did you say?'\n\n'I said you like this don't you?'\n\nThere was a tattoo of blows to match the words.\n\n'No. Please stop.'\n\n'I said you like this don't you?'\n\nScarlett raised her voice and I felt another half-dozen blows on my bottom. They were probably as hard as the first ones but my panties provided a slight cushion.\n\n'Yes. I like it. Will you stop now?'\n\n'Good girl, good girl.'\n\nHer voice was softer and she resumed stroking me. I shuddered as the crop was deliberately pulled across my vagina. My clitoris was tingling. I felt Scarlett's hand in my hair and pushed my head against her has she ran her fingers through it; it felt nice.\n\nMy head was yanked back and I felt searing pain in my scalp. Scarlett had twined my hair in her fingers and given it a sharp pull. I felt tears come to my eyes and heard the swish of the crop as she brought it down hard on my arse. She released my hair and stepped away from me. I realised she was moving to give herself a wider arc. I tensed my buttocks as another sharp slap echoed in the small room.\n\n'As you like it so much, you'll love this.'\n\n'No, please stop. I was lying.'\n\nI could definitely hear the whistle of the air against the crop as she brought it down again and again. I was biting down so hard on my lip I thought I could taste blood in my mouth. Scarlett was letting out grunts as she worked my arse and not all of my cries were simulated. My pussy was moistening and my clit was tingling more strongly in anticipation of the next sharp burst of pain.\n\n'OK Velvet. That's enough.'\n\nMandy stopped Scarlett in mid-swing. I raised my head. She had a worried look on her face. \n\n'I'm OK. Honest. She doesn't have to stop.'\n\nIn fact, my pussy was asking questions about why the pleasure had ceased.",
        "'It's not you I was concerned about. Getting a bit carried away there were you, Scarlett love?'\n\n'Sorry about that auntie. I think I might have been a bit. Sorry if I hurt you Susan.'\n\nShe looked positively glum. She was looking down at her feet, the crop held limply against her side. I went over and raised her chin up with my fingers until I could look into her eyes.\n\n'I'm absolutely fine. I loved it. Are you sure you're OK?'\n\nI went to kiss her on the cheek but she suddenly turned her head and our mouths met. We both froze for a second and the next minute our tongues were entwined and our lips were crushed against each other. I could taste the freshness of her toothpaste mingled with the cloying sweetness of the drinks she had consumed. Equally suddenly we both broke the clinch. I turned away feeling myself going red. I brushed back my hair and ran my fingers over my lips in a nervous gesture. I saw Mandy and Tracy. They both looked stunned.\n\n'She didn't kiss me like that. Getting the taste for it are you?'\n\nTracy let go of a guttural laugh. Mandy gave her a cross look and brought us back to order.\n\n'Let's sit down again shall we. Excitement's over.'\n\nShe led the way back to our table and shouted again for George to bring fresh drinks. I stole a glance at Scarlett as she straightened her skirt and sat down. She smiled sheepishly at me, then composed her face and looked away.\n\n'Right then. I think we've established that Susan's bottom is fair game. Tracy, don't you overdo it. I know what you're like. And remember that safe word.'\n\nShe frowned across at her daughter who nodded. For her she looked meek.\n\n'I think it'd be best if Tracy was the person in charge, don't you Susan?'\n\nI nodded my reply. I had enjoyed the beating and from the demands my clit was transmitting to my brain doubted I would be able to stop myself going all the way. George bustled in again with a tray of clinking glassware.\n\n'Thanks for that darling. We'll be done in a minute. Need any help behind the bar?'\n\n'No, I'm managing. Don't know what I'm going to do if this run on the soft drinks continues though.'\n\nMandy waited until George was out of earshot before continuing.\n\n'So it'll be your job to keep the randy buggers in line. Got it?'\n\nTracy licked her lips.\n\n'My pleasure.'\n\n'So you go in. Make your introductions and get the cash; Suzette does her strip and gets her bottom tanned. You go and sit next to the groom when you've finished. Let him touch you up a bit while Tracy does her's.'\n\nI nodded, not absolutely certain what state I'd be in after Tracy had worked over my naked butt.\n\n'You get down to your bra and pants - let the punters take your top layer off -- then bring Suzette back in; a little snogging, you get her naked, a bit of playing around then grab your clothes and get out of there.'\n\nMy pussy gave a round of applause. I couldn't wait. I looked again at Scarlett. She still looked subdued and was toying with her alcopop. She gave me a sly grin when she caught me looking.\n\n'I wish I could be there.'\n\n'Maybe next time. They asked for these two specifically. Don't worry, there'll be plenty more chances.'\n\nWe all sat back in our chairs. They all laughed as I winced when I felt the added pressure on my bum. I smiled too. I was feeling a lot better. Stale Perrier and lemonade followed by a sound thrashing was clearly a better hang over cure than the stuff I had been trying. Even the stale beer smell was now making me nostalgic rather than nauseous. Mandy entertained us with a few heavily censored tales of stag parties from her youth and then one or two of her encounters from her more recent past. We all laughed along until eventually she slapped her meaty hands on her equally meaty thighs and made to heave herself out of her chair.\n\n'Right that's me done. I'll go and see what that randy old sod is up to in there.'\n\nI remembered Mr J and raised my hand to stop her. Scarlett and Tracy said their goodbyes and made their way through to the main bar.\n\n'Before you go, Mandy, Mr J asked me to ask you a favour.'\n\n'How is he? He was a real hit down here, you know.'\n\n'He's fine. Better than fine actually. He really looked after me last night when I got home.'\n\nMandy put her hand on mine. I could feel her perspiration.\n\n'I maybe shouldn't be saying this, but I'm very fond of you Susan. You've got a real way of seeing the best in everyone and making them try to be better too.'\n\nNow I was really embarrassed.\n\n'Don't be silly.'\n\n'No. I'm serious. It's not everyone who would take an OAP under their wing and make them feel like one of the boys.'\n\n'That's a one-off, he's a neighbour. We do favours for each other.'\n\nWe were both blushing. Mandy squeezed my hand and braced herself to continue.\n\n'It's not just him. Those lads you play football with.'\n\n'What about them?'\n\n'They were a typical bunch of pain-in-the-arse yobbos before you showed up. Now they're quieter, more polite. Almost gentlemen.'\n\nI started to interrupt but she crushed my hand under her's so I winced instead.\n\n'And our Tracy really looks up to you. She doesn't have many women friends I worry about the way she behaves. You know kids, think they invented sex and everything that goes with it. She needs a steadying influence. I hope that can be you.'\n\nShe let out a long breath which I took to be a full stop.\n\n'I like her too. But the way I am now. You know with all this.'\n\nI waved my arms expansively to encompass the whole of the five-star luxury which was the grubby back bar of the Crown and Anchor. We both laughed.\n\n'I think I may let her get me into more trouble than I get her out of.'\n\n'I know you'll do your best. Anyway, you were saying. Oswald?'\n\nI wondered where she had picked up Mr J's real name. I guessed Tracy must have mentioned it and wondered whether she had told her mother about the rest of her visit to his house. I felt in my bag and drew out the envelope he had left me.\n\n'he asked if you would autograph this.'\n\n'Oh yes, Our Tracy mentioned something about this.'\n\nShe seized the magazine eagerly and started flicking through its pages Until she got to her own photos.\n\n'Bloody hell. That was a long time ago.'\n\nShe laughed to herself as she lingered over the shots of her taking off her clothes.\n\n'I've still got that suit somewhere. Probably up in the attic. I never throw anything away.'\n\n'He said he recognised you straight away when he came into the pub.'\n\n'Lying devil. I'm about fifteen stone heavier now than I was then.'\n\nShe touched one of the photographs as if wanting reassurance that it was really her in the picture.\n\n'Straight up. He got quite nostalgic when he was talking about the old days when the magazine came out.'\n\n'They were good times.'\n\n'He talks about you like you're a movie star. Elizabeth Taylor or someone.'\n\nShe sighed again.\n\n'Tell you what. I'll give you my number. Get Oswald to call me, invite me out for tea or something, I'll autograph it for him then. I'd love a good chinwag about the old days. You have a mental image about men tossing themselves off looking at you but never really get a chance to meet them.'\n\nShe took my pen and scribbled a number on the back of the magazine.\n\n'Have you got one of those scanner things? I'd love a copy of those photos if you could make some.'\n\n'I'll see what I can do. We've got one at work. Just a matter of finding the right moment.'\n\nWe both made to stand up smiling at each other. I was thinking what a treat for Mr J a date with one of his idols would be when I had a brainwave. I cried out and sat down sharply. Then cried out again as my sore bottom reminded me of our earlier activities. Mandy looked concerned and slowly lowered herself back into her chair. I was laughing and shaking my head as I tried simultaneously to rub away the soreness and offer an explanation.\n\n'I'v just had an idea. Maybe you can help me.'\n\nShe nodded, still concerned..\n\n\"I've been wanting to do something special for Mr J, Oswald. He's been so good to me over the months since my husband left. I got him an Xmas present, a book of old pin-ups, but you've given me a much better idea.'\n\nShe nodded again. The look of concern was gone.\n\n'Could I borrow your old suit? I'd like to get a set of photos made with me posing as you. You know, a sort of update and tribute all in one.'\n\nMandy began to look excited and reached across for the magazine. She examined the photo spread again with a more expert eye this time. She muttered under her breath as she looked from the pictures of her old self then up at me.\n\n'I think we can do it. I was looking at the clothes. Apart from the suit they're pretty much the sort of thin you wear nowadays. I'm sure you could find some close matches for the bra, blouse and knickers. I think I've got an old pair of those nylons I could let you have. I'll send Tracy up into the attic tonight.'\n\n'That'd be great. Do you think he'd like it?'\n\n'Probably masturbate himself into a heart attack. Make sure I get taken to tea first.'\n\nWe both laughed. Then I thought of another question.\n\n'Do you know any studios where I could get the photos taken? I've no idea about that sort of thing.'\n\nShe frowned while she was thinking, then slapped the table in triumph. I could feel it shake.\n\n'I had these taken in town. Photographers on the High Street. It was still there last time I looked. 'Course in those days you had to fuck the photographer when you'd finished. Or at least give them a blow job; they were quite a new thing back then.'\n\nShe looked at me to see whether I was put off. I smiled back indulgently.\n\n'Old guy that was running it is probably dead now. If I didn't finish him off.'\n\nI laughed politely.\n\n'Go there. It was lovely and warm if I remember correctly.'\n\n'And they probably prefer plastic in this day and age.'\n\nWe stood. At this the third attempt we made it to the door. Mandy slapped me affectionately on the butt as she stepped aside to let me through first, then apologised when I winced. We went through to the main bar and I handed George a fiver for another lemonade telling him to keep the change. He passed it over grudgingly.\n\n'You've drunk me dry. I'll have to slip the next person who asks an alcopop in a glass and hope I get away with it.'\n\nI levered myself up on the bar rail and kissed his cheek.\n\n'What's that for?'\n\n'Hangover cure.'\n\nI took my drink and went to stand between Tracy and Scarlett watching their boyfriends play pool. The boys all seemed to be perfect clones of the Barry Tracy had been screwing in the toilets after her strip on Friday. I seriously could not tell them apart. It was as if the spots and sweatshirts had been issued by central casting when they removed their ability to communicate in anything but shouts and grunts.\n\nMy drink finished, I called a taxi. I hugged Tracy to wish her merry Xmas and we kissed amicably on the cheeks. She grabbed my bum and laughed. I turned to Scarlett. Our embrace was more tentative and the kissing more deliberate. I avoided the temptation to grab her butt. It was quite strong though. Shouting season's greetings to Mandy, George and anyone else within earshot I ran to the door when I heard the car honk outside. I was feeling a thousand times better than I had on the way there and I thought about Scarlett all the way home."
    ],
    "authorname": "Touch_type",
    "tags": [
        "spanking",
        "young-old",
        "bdsm",
        "dressing up",
        "nipple clamps",
        "presents",
        "striptease",
        "domination",
        "pornography",
        "humour"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/entertaining-at-large-ch-05"
}