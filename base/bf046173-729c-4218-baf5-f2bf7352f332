{
    "title": "Christian College Sex Comedy Ch. 27",
    "pages": [
        "*Doing the correct thing is good; doing right and confounding your enemies at the same time is golden*\n\n(Thank you Frontma for coming through again)\n\n(This one picks up soon after the previous chapter ends)\n\n(Yes, this tale is supposed to be somewhat humorous and outrageous too. While not always comedic I'd like to think it is mostly a good-natured romp.)\n\n\n\n\nBLOW AND ARROW\n\n\"You are getting better, Zane,\" Molly Travers told me after my rotation to the shooting line.\n\n\"If you say so,\" I shrugged. \"I've yet to hit the rings twice in a row.\"\n\n\"But you are hitting the target every time,\" she pointed out.\n\n\"Great,\" I chuckled, \"if I ever get attacked by a rhino or a barn door, I'll do fine.\"\n\n\"If it is a big barn door...a really big barn door,\" she snickered in sympathy. \"So...uhmm...what do you think your chances against Hope are?\"\n\n\"Huh,\" I looked to her, \"are you betting on me and Hope's sparring match?\"\n\n\"It's not really a bet...more like a wager,\" Molly grinned.\n\n\"Betting and wagering is the same thing, Molly,\" I pointed out.\n\n\"Okay, fine, we are betting on the outcome,\" Molly admitted. \"So what do you think the odds of you winning are?\"\n\n\"Barring the intervention of large fighting robots, I'd bet on the cute Asian chick to win,\" I joked.\n\n\"Arrows,\" Chastity called out. It was my job to retrieve all the expended arrows from the field, being the junior member of the team. After that we did one more round, then we cleaned up and made our way to either study period or our next club. Chastity held me back so that we could go to Karate class together.\n\n\"Don't be too hard on Hope,\" Chastity abruptly told me.\n\n\"I'm not all that sure I can beat her, Chastity,\" I confided.\n\n\"Oh, there is no chance of that,\" Chastity assured me. \"She's going to destroy you. I only want to make sure you are a good sport about it because she really likes you and she's worried you might take this beating the wrong way.\"\n\nI stopped and stared at her somewhat incredulously.\n\n\"Oh, come on,\" I grumbled. \"I have some sort of chance. She's not that good.\"\n\n\"If thinking that makes you feel better,\" she patted me on the back.\n\n\"Well, if you believe I can't win, you will be willing to make a wager on the outcome then,\" I challenged Chastity.\n\n\"What would it be?\" Chastity mused.\n\n\"You in a little, itty-bitty French Maid's outfit for twelve hours of my choosing,\" I said.\n\n\"What do I get if Hope wins?\" Chastity countered.\n\n\"What would you want?\" I grinned.\n\n\"Any one favor to be decided on later,\" was what she came back with.\n\n\"Oh, please, my favor is relatively precise while you want the world,\" I pointed out.\n\n\"Okay, I want one 'forgiveness' in advance,\" Chastity offered. I groaned.\n\n\"You just have to keep busting my chops, don't you?\" I sighed. \"Fine, I'll make the bet.\"\n\nFor a private sparring match, Hope and I drew a great deal of attention. Christina, Heaven, Chastity, and Faith were expected, as was Coach Gorman. I had kind of hoped Cappadocia would hang around so we could hook up when the fight was over. Everyone else was rather distracting.\n\nBoth Hope and I went shirtless \u2013 me bare-chested and she with a black sports bra \u2013 as well as barefoot. We set up four meters apart with Hope doing something that mimicked warm-up exercises. It took a second of eye contact for the fight to begin. I kicked out viciously; she collapsed beneath the blow and swept my legs.\n\nMy back slapped the mats and before I could move or mount much of a defense, Hope was all over me. It was arm bar and she had my head in a scissor lock and that was that. I tapped out before she could render me unconscious. No one said anything as I regained my feet. I was careful not to make eye contact until I'd backed up a bit.\n\nI had no clue to what kind of Monkey Kung-fu she had just worked on me but I knew that what little Thai Kickboxing I had wasn't cutting it, but I knew even less Karate and even less of what Gorman and Black had shown me. It boiled down to making use of what I did know to the best effect.\n\nThis time I danced to the left using a little trick Gabrielle Black had taught me (with some pain added). At first Hope mirrored my movements so when I lashed out with my first kick it caught her off-guard since I'd also been slowly closing the distance between us. She tried to snake within my reach but I kept shifting and kicking to hold her at bay.\n\nWhen she finally did get inside, I hit her with every fist/arm/elbow strike I knew. I knocked her back, pursued her, and for a moment it looked like I had a chance. Hope kept maneuvering with the grace of a gymnast so I couldn't pin her to the mat. Once she got to her feet I sensed I was rapidly running out of options.\n\nI certainly didn't expect a chop to my temple and that was pretty much all she wrote. She jumped up, put her knee into my diaphragm and rode me to the ground. I managed to block twice against her strikes as she straddled my stomach. I almost knocked her aside, we wrestled, and that was the totally wrong thing to do. I knew crap about wrestling.\n\nMy tapping out was a foregone conclusion once she got me on my stomach. For a second I lay there marveling how quickly I'd gone down \u2013 twice. I noticed that Hope was still standing astride my body so I rolled over in place and looked up. For a second she had this look that reminded me of staring into the pitiless depths of the ocean.\n\n\"My head hurts,\" I emphasized with a deep breath. That set off a flash of light in her eyes.\n\n\"The important one or the one on top of your neck?\" she smiled from above. Hope crossed her arms and helped me stand. \"Are we okay?\" she suddenly seemed worried.\n\n\"Oh, hell, no,\" I gasped. \"I've got to learn me some of those moves. You were freaking awesome.\" That outburst gained me a snort of amusement on her part.\n\n\"I am not a master so I would have to consult my master before taking on a student,\" Hope informed me.\n\n\"Your Father?\" I was curious.\n\n\"No; my Father had to get permission to teach my sisters and me. My Master is back in Korea,\" she answered. \n\nHope and I parted ways and various friends now felt free to join the party.\n\n\"Damn, Bro, she kicked your ass. I'm ashamed to call you family,\" Rio mocked me.\n\n\"Rio, now you know how he feels about you every day,\" Valarie shot back.\n\n\"I think he did pretty good, all things considered,\" Coach Dana Gorman stated. \"I don't believe Zane's ever fought against a 'soft' or passive style.\"\n\n\"Fifteen or twenty more years and I would have had her,\" I chuckled. \"You are right, Coach; I've never seen her precise style. I've tried some of the exercises monks use but those were primitive compared to what Hope showed me today. Now I think I'm going to take a shower.\" \n\n\"Everyone will clear out now,\" Coach ordered as I made my way to the showers.\n\nZETAS\n\n\"Honestly, Zane,\" Sahara lectured me deliciously, \"did you have to flush my phone down the toilet?\"\n\n\"Technically, I only dropped it in,\" I corrected. \"I didn't hit the handle. Besides, you know your husband would only annoy us with his incessant phone calls.\"\n\n\"I still feel a little guilty,\" Sahara sighed.\n\n\"He knew when I would be over and where we would be going if he wasn't going to be kind enough to be there,\" I pointed out. \"The only reason to call you would be to ruin the moment he could have pre-empted by showing a little consideration for your feelings.\"\n\n\"That is not fair,\" Sahara countered. \"My husband is a community leader with many responsibilities.\"\n\n\"So would you be if people would wake up and see you as I do,\" I answered.\n\n\"Zane, I don't want any misconceptions about me,\" Sahara stared at me intently. \"I am loyal to my marital vows.\"\n\n\"I don't doubt that for a second,\" I agreed. \"Betrayal leaves its own scars and I don't see any on you.\" Sahara didn't immediately react to that, instead taking a long sip of her tea.\n\n\"Certainly you have heard the rumors by now?\" she said softly.\n\n\"Yes, and I believe them,\" I responded gravely. I let that hang there for thirty seconds. \"Aliens did land in Roswell, New Mexico in 1947, and they interred the bodies at Wright-Patterson Air Force Base before finally moving them to Area 51.\"\n\nSahara didn't know what to make of that for a second but slowly began to smirk.\n\n\"What? Was there another rumor that I should be giving a damn about?\" I concluded.\n\n\"Some people compromise for the easy way out, some people remain mostly steadfast and take the hard road, but you are the only man I know who gladly skips through a minefield because even the hard road is too much of a compromise for you,\" she commented.\n\n\"I can only be me,\" I replied. \"I couldn't be you; I doubt the clothes would fit.\"\n\n\"Oh...you are such a strange individual,\" she tilted her head. Before she could explain our food arrived and she felt it prudent to wait until there were fewer prying ears. \"Do you think it is appropriate for me to...ask about Ms. Vickers?\"\n\n\"No,\" I responded patiently. \"If you ever feel like it is your business, she's in church every Sunday and she's nice, if a bit nervous considering the current circumstances.\"\n\n\"It is only that I hear things about you when my husband talks to other people and...much of it doesn't make sense,\" she added. \"For instance, I believe I'm the only one who sees it but I'm sure you are having an affair with Rochelle Wellington.\"\n\n\"I'm neither confirming nor denying anything but how does that make you feel?\" I countered. \n\n\"Infidelity is a crime,\" she answered after a few seconds, \"but Mayor Wellington is a horrible, horrible man.\" And this was coming from the woman married to that bastard \u2013 Pastor Bill. \"I confess that I find the whole thing very amusing, to the point where I pray to Christ for forgiveness virtually every night. That includes using me as a distraction for Kendra's nosey little self.\"\n\n\"That was not my intent if that's any consolation,\" I sighed. \"I simply thought we had a lot in common.\"\n\n\"Such as?\" she smiled.\n\n\"Well, before we moved here, we had no idea where Lancaster, Virginia was,\" I started.\n\n\"We both know that waving a Bible around doesn't make someone holy; a custom may be fine for you but it isn't for everyone and we know what it is to be judged by people who have never gotten to know us,\" I completed. \"I also wanted you to know that I know about Bill and we are not alone.\"\n\n\"Know? What do 'we' know?\" she asked confidently enough.\n\n\"We know why he let them think you were the one who was unfaithful,\" I clarified somewhat. Sahara stared at me, her face torn by a plethora of warring emotions; loyalty, anger over being betrayed, and relief that she didn't bear this terrible burden alone anymore were all there.\n\n\"Men handle such things differently than women,\" Sahara told me in a distant voice. \"My father wanted boys.\"\n\n\"I imagine your Father-in-Law wishes he had raised his boy to be a man too,\" I joked. \"That's unfair,\" I corrected myself. \"I have nothing against men of a different persuasion. It is bastards I have a problem with.\"\n\n\"Please, Zane, he is still my husband,\" Sahara admonished me.\n\n\"Well, he had better start treating you better or I may re-familiarize him with Deuteronomy 23:1 (ty-jw),\" I responded. \"Your loyalty to him should be met with respect. That is the deal we make when we get married.\"\n\n\"What makes you think you know so much about marriage?\" Sahara inquired after a bite, some savory chewing and a gulp.\n\n\"I'm smarter than I look. Okay, that's not too difficult, but I'm usually smarter than people give me credit for.\"\n\n\"Smart things like inviting Ms. Kennan to services yesterday?\" she taunted me.\n\n\"I actually didn't invite her but don't tell anyone; I revel in people's opinion that I'm irreverent,\" I grinned. Sahara tried and failed to fight down her own smile in response. \"I've actually invited Belle \u2013 Ms. Kennan \u2013 to live with me and Jill as well as giving her a job.\"\n\n\"I...I don't know what to make of that,\" Sahara worried. \"She's very pretty, I imagine.\"\n\n\"Sahara, you need to become a better judge of people,\" I said. \"I wouldn't trust Belle with my car keys or my favorite cuff links, but I'd trust her with Jill's life or my own.\"\n\n\"Sometimes it helps to remember we are still listening to the words of a poor carpenter's son who suffered through exile,\" I pointed out, \"who wouldn't do what the authorities told him to do, died because he was betrayed by a close friend, and went to the grave abandoned by all those who said they understood him; not most people's first choice for founder of the world's largest religion.\"\n\n\"When you put it that way, it sounds depressing,\" Sahara agreed. \"It also sounds exactly as it played out. It often does not occur to most believers that the flame of Christianity almost fluttered out before it ever really came to life.\" She looked for me to say something but all I did was grin. A few seconds later I saw that flicker of understanding come alive in her eyes.\n\n\"Here you are, the star of multiple on-line sexual misadventures, sitting with the preacher's disreputable wife in the most romantic restaurant in town and we are discussing morality and religion,\" she chuckled. \"No one will believe us despite this being the truth. I find your perverse and bizarre sense of humor very enchanting, Zane.\"\n\n\"The important thing is that you are having a good time, Sahara,\" I explained. She laughed out loud, drawing attention to our little candlelit alcove of the eatery. I doubted she cared and I certainly didn't. We finished our meal, I paid, and we headed straight back to her place. The game was, we left zero time for any possible hanky-panky to take place.\n\nWe wanted the people who were going to accuse us of impropriety to make real asses of themselves when we revealed our timeline established by my filling up of gas right before picking her up, our valet ticket at the restaurant, and finally, our credit card receipt for the restaurant itself. I had outlined my plan to Sahara and she heartily approved. Unlike the time her husband had screwed her over, she could fight this scandal.\n\nI pulled into the Penny's driveway and I rushed around to get her door for her (thank you, Heaven, for that bit of etiquette). We walked through the front door only to see Pastor Bill a few steps away from the door.\n\n\"Where have you been?\" he growled. Sahara dutifully lowered her head.\n\n\"We were at Zetas,\" I stated calmly, \"right where I told you we would be.\" Bill ground his teeth and glared at Sahara.\n\n\"What have you been doing?\" he snapped.\n\n\"Nothing,\" I now grinned. \"I accidentally left the lube and the box of condoms on your kitchen counter.\" Pastor Bill was rendered speechless.\n\n\"I was the one who dropped her phone into the toilet; don't blame Sahara,\" I told him. \"Sahara, this was fun. I don't often get to have an adult conversation about the basis of Christianity. I do appreciate your insights. I gotta go now. You two have a good evening and I guess I'll see you on Wednesday night, Sahara. Bill, I'll see you on Sunday.\"\n\n\"I doubt you will be seeing my wife again,\" Bill finally ground out.\n\n\"Sahara, please give me and your husband a moment alone?\" I asked her.\n\n\"Of course, Zane, and thank you again for an intellectually stimulating night,\" was her own way at rebelling. I could tell ol' Bill didn't appreciate her pleasant tone to me one bit. When she had moved out of sight I leaned into my so-called religious leader.\n\n\"Bill,\" I whispered to him, \"between you, me and God, if something happens to Sahara, I'm giving you one year and a day, then they'll never find your body. You know the kind of low-lifes I hang out with. I'm not bluffing. The only other injustice will be that you won't suffer nearly enough. Am I absolutely fucking clear?\"\n\n\"I'm not afraid of you, you sleazy scumbag punk,\" he hissed.\n\n\"Whatever, Bill, but you might want to know that the circuit board for your home security system is manufactured by a company I own,\" I lied. I had no idea if there was a circuit board for his system or who the hell manufactured it, but I was pretty sure he didn't know either.\n\nBill and I were at an impasse. He was a bully and a liar who was used to manipulating people using both other people's faith and sins to get what he wanted. My advantage was that I was well known to be willing to inflict pain to get what I wanted (I just wanted to protect my ladies) and he was averse to actual physical confrontation.\n\nBelle brought a whole new definition to the conflict at First Anointed Free-willed Fellowship of Christ Church. There were a growing number of people willing to resist the order Bill had crafted for his own power. Now people defied him and the normal techniques of censor had little effect. His best hope was that Zane Braxton would get hung in another bizarre encounter and remove himself from the equation without Bill's interference. That was his hope, anyway.\n\nON THE CRUX OF CHANGE\n\n\"Hey, Briana,\" I told my buddy from Colorado State. I was standing outside the door that led to my floor once more.\n\n\"Hey, Future Slave to my Desires,\" she giggled back. She was a whole lot more playful than the last time we'd talked.\n\n\"Gak!\" I played with her. \"I'm pleased to find you in higher spirits tonight. I hope that means you are doing better?\"\n\n\"Actually, I had a freaky weekend,\" she sighed. \"I met my boyfriend's other girlfriend \u2013 it was a totally psycho-girlfriend moment too. She came at me when I was training with some sisters for a 5K run. She appeared in the parking lot and started screaming at me. It was scary. I had three sisters and she brought two wacked-out friends. A pair of off-duty firemen broke it up; sadly, one is married and the other is gay.\"\n\n\"Briana, I have a confession: I'm a gay man in denial and I'm tired of hiding the real me,\" I stated sincerely. Briana's laughter rocketed through the connection, followed by some off-screen conversation, then the phone being handed around.\n\n\"If you want that lie to be believable, tell us you are secretly a lesbian,\" Jarunee snickered at me in her native Thai tongue.\n\n\"Give me a second and I'll come up with something more believable,\" I chuckled back in the same lingo. \"How have you been?\"\n\n\"Pretty good; better than you since that little Korean girl wiped your ass all over the mats,\" she responded in English.\n\n\"Okay, she's not so little, and I have it on good authority she was a champion on the Tijuana Midget Fighting Circuit while still in preschool,\" I covered my ass, then a fear began clawing its way inside me. \"Is there any suggestion that she and I may have gone to bed together?\"\n\n\"Of course; this morning's upload,\" Jarunee informed me.\n\n\"Oh...in that case, please tell the rest of the Kappa Sigmas that I won't be doing Spring Break after all,\" I groaned.\n\n\"What \u2013 why?\" Jarunee gulped, wondering what she'd done wrong.\n\n\"Her dad is going to kill me,\" I related jokingly. \"I won't make it to the end of this semester, much less to March. It was a nice dream, though.\"\n\n\"Are you serious?\" Jarunee worried.\n\n\"Apparently Hope's \u2013 that's Hope Song who kicked my ass \u2013 father is some sort of a South Korean superman who eats two-bit punks like me for breakfast,\" I shrugged.\n\n\"It can't be...\" and the phone was taken away.\n\n\"Oh, my God! Was that one of Yeong Song's daughters you banged that can now be seen all over the internet?\" a different girl babbled. \"You really are a dead man.\"\n\n\"Ooo-kayyy...who are you, by the way? I'm Zane,\" I started off.\n\n\"Sorry. I'm Chrissy and my father is in the Navy and he does...stuff. I don't know how bad that man is but I've seen SEALs scramble to get out of that man's way faster than they would for any admiral.\"\n\n\"What? That's absurd,\" I joked. \"No one is that much of a bad-ass.\" Except for Gabrielle Black -- I am so going to die at this man's hands, aren't I?",
        "\"All I know is that the Navy decided it was safer to put him up at our house as opposed to a motel. Mom got upset because apparently the North Korean government put a huge bounty on his head since he killed so many of their Special Forces guys \u2013 no lie.\" \n\nI said nothing for the longest time.\n\n\"Maybe he'll think I'm good son-in-law material,\" I tried to sound upbeat.\n\n\"Yes,\" Chrissy tried to sound positive as well. I, of course, was desperately trying to remember how many times I had made Hope suck my dick...and our discussion of anal sex wasn't worth mentioning. Curling up into a fetal ball wouldn't do anyone any good either.\n\n\"Very well, Chrissy. Can I talk to Briana one more time?\" I asked.\n\n\"Of course, Zane, and don't worry; the whole Kappa Sigma Sorority will start working on this problem. We will figure out something,\" she assured me.\n\n\"Hey, guy,\" Briana sounded apprehensive, \"are you going to be okay?\"\n\n\"Babe, it is just another day ending in 'y'. I've got this,\" I said confidently. \"Good night, now.\"\n\nBriana said her good-byes and I took a moment to get my thoughts together before heading upstairs. It turned out I had over seventy ladies in my place, none more surprising than Coach Dana Gorman. She was paired with Valarie against Millicent and Raven in what looked like a close match up on the pool table.\n\nAnother totally bizarre image was Vivian and Rio laying stomach first on the floor near one of the TV's, calves kicking in the air with Vivian helping Rio with something oddly akin to schoolwork. Mercy, Opal, Brandi, and Brigit were gathered around the closest table having formed some sort of study group as well. Magically enough, in the twilight of my life (no, I am not over-reacting!) it is good to see one of my plans actually work in almost the way I had intended.\n\nNo one had noticed me arrive so I turned to go to the drink bar...and walked right into Paige.\n\n\"Hi!\" she squealed in excited delight. Her tight little albino body vibrated with orgasmic energy.\n\n\"Hey, Babe,\" I kissed her on the lips lightly. She kept her hands tightly clasped behind her back.\n\n\"You don't smell like sex,\" she grinned.\n\n\"I went out to eat with the preacher's wife, Paige,\" I groaned. \"Not every date is an inevitable sexual hook-up. We had a nice meal and talked about our church, morality, and religion \u2013 honest to God.\"\n\n\"I believe you,\" Paige wouldn't stop grinning. \"Cordelia is in your room, waiting for you...and thank you, thank you, thank you.\" Paige was undoubtedly ecstatic over the red marker on Cordelia's face that read 'Paige is smarter'. To see that was one of Paige's deepest desires.\n\nCordelia was working away on her tablet as I slipped into my room. She was fully on my sleeping stage, lying on her back and tablet held up over her head as she worked on it.\n\n\"Hello, Zane,\" Cordelia said. \"I like your place; it is very you.\"\n\n\"Cordelia,\" I managed to say back in a civil tongue. \"Did you know who Yeong Song is?\"\n\n\"Of course I do,\" Cordelia answered without looking away from her work. I didn't say too much because I had little polite to say to the girl at the moment. After a minute she finished up working on her computer, put it down, propped herself up on her elbows, and smiled my way. Her pigtails swayed as she looked me over. \"You are upset,\" she noted.\n\n\"Why are you here?\" I inquired curtly.\n\n\"Oh, now we are in the 'you are angry with me but doing an admirable job controlling your violent impulses and going to reduce your interactions with me yet not going to let me alter your lifestyle in any way' phase,\" Cordelia sighed.\n\n\"I am not fighting the fact that you are the smartest person on campus, maybe the smartest person I've ever met, but I think we are done playing around. When I drive out of these gates for the last time four years from now, I'm going to forget you and go on with my life,\" I told her. Cordelia smirked, then laughed.\n\n\"Zane, I made you \u2013 you are my creation,\" she giggled. I was about to get pissed, then I got another boot to the head. \"I was drawn to your family's tragic death years ago, saw your return to the United States as an excellent opportunity for us both, created several identities, talked to your aunt on-line about FFU, altered the admissions software so your application would be accepted, and made sure your medical records weren't examined until you were on campus.\"\n\n\"You put me and Rio together,\" I pieced together; Cordelia nodded. \n\n\"Iona?\"\n\n\"Ah, she's loyal to you, but it was easy enough to put her in your class. She is the type of girl who runs across traffic to save a turtle crossing the road,\" Cordelia smiled. \"I knew she'd rally to your side, just like I knew that would be enough to keep you here until other events unfolded,\" she seemed terribly pleased.\n\n\"Now the sorority and Christina are all you as well as the run-ins with the law, but you are my weapon to use on this campus, Zane. I could never beat Chancellor Bass without creating a scandal that would break the school apart,\" she informed me. \"Your rebellion was a possibility I explored but your ability to enlist Christina and the freshmen wasn't something I could facilitate; again, that was all your doing.\"\n\n\"I have respected you and Heaven,\" Cordelia pointed out.\n\n\"Because Christina and I would kill you,\" I countered.\n\n\"No; I kept her secret because I am not needlessly cruel,\" she said. I almost believed it.\n\n\"Wrong, Cordelia; you didn't betray Heaven because Christina and I would leave FFU,\" I stated. \"Your game would fall apart; not because either one of us is special but because you don't like playing with dumb people \u2013 there is no challenge to it.\"\n\nCordelia's smile only got wider.\n\n\"You don't disappoint,\" she remarked, without a hint of shame or guilt. \"Am I forgiven?\" It occurred to me that no matter how absurd on the surface, Cordelia wanted someone to know and, in a way, understand her genius.\n\n\"I think we may be past that,\" I murmured.\n\n\"How about this; the Time Lord Mafia needs...I need your help,\" she confessed, but I was wary.\n\n\"When Ms. Black came here I was suspicious that her record was too clean,\" Cordelia related, \"so when you gave me that warning, I began digging very carefully. Well, this morning something happened.\"\n\n\"Oh, crap,\" I muttered. \"How bad and how likely is it that you will be tracked back to here?\"\n\n\"I set up a blind station in Lima, Peru,\" she said matter-of-factly, \"all paid for in cash by people who don't know the real me. I had surveillance on the place as standard practice. Late last night \u2013 Lima time \u2013 three armed men broke into the small room and tore the place up.\"\n\n\"Who were they?\" I was now more intrigued.\n\n\"They spoke perfect Spanish so I had no clue until one of them screwed up and a cheap shelf fell on him. He cursed in Hebrew.\" Cordelia exhibited real shock. \"They were Mossad. I check up on some other stuff and I really think they are Israeli intelligence.\"\n\nWhat in the hell was Mossad doing hunting Gabrielle? What the hell was the only guy in an all-girls university doing getting involved with all this? Fuck it all, I'm a horny eighteen-year-old boy with more girlfriends than any two sane men would want. Wasn't talking to yourself one of the signs of mental instability?\n\nI was saved by the phone, sort of.\n\n\"Zane, this is Dr. Scarlett,\" the Vice Chancellor said, \"I am at your door and I need to come up and talk to you for a bit.\"\n\n\"Of course, Dr. Scarlett,\" I responded as I caught Cordelia's eye. I hung up and the two of us headed into the main area.\n\nAs soon as we exited the screens, Cordelia went toward the closest group of students to warn them and I travelled down the stairs.\n\n\"Hey, Doctor,\" I greeted my latest guest. I screened the keypad from her view, asked the system for a new password, and read it off to her as it popped up. Dr. Scarlett reentered the code and had it scan her thumbprint without comment.\n\n\"Thank you, Zane,\" Victoria greeted me politely. \"I would like to see your domicile as well, if that is convenient.\"\n\n\"Sure thing,\" I told her. \"We have about forty-five minutes before curfew so it's pretty occupied.\" \n\n\"It is your room,\" she nodded. \"I have every reason to believe you are responsible with its use.\" I wouldn't say that, but then in the past five minutes my life had gone to hell anyway, and I had to put up a good face until bedtime.\n\n\"Ah, the pictures I've seen do not do the view justice, Mr. Braxton,\" Dr. Scarlett exhaled.\n\n\"Relax, take a walk around, and/or help yourself to some food, Doc,\" I offered.\n\n\"After nine o'clock you may call me Victoria, Zane,\" she allowed in return. I was a little stunned. No one seemed overjoyed that Victoria was here but they weren't stampeding toward the door either.\n\n\"You provide a great deal of stability,\" she told me softly. \"Your presence provides your guests with a sense of peace and safety.\"\n\n\"Perhaps you missed Coach Gorman giving two of your students pool lessons right over there?\" I suggested.\n\n\"Dana is your guest too, though I doubt her mood is swayed one way or another by your sense of calm,\" she grinned, then was brought up short. \"Zane, there are two women in...bikinis in your...\"\n\n\"It is a hot tub,\" I provided the identification, \"and I also provide the swim suits for those who need them.\"\n\nVictoria stared at me for a few seconds and I could sense her ready to finally explode on me with some righteous rage toward my overtly sexual ways.\n\n\"Why would you have women's swimsuits?\" she asked patiently.\n\n\"I have one-pieces as well,\" I responded. \"What would be the point of installing a hot tub, showers, and a sauna if I don't also supply the girls with swimsuits and towels?\"\n\nThose words put her back on an even keel. Still --\n\n\"Doc, I have women coming in my second-story bedroom window back home in the middle of the night for the purposes of sexual intercourse,\" I sighed. \"I hardly need to give students here revealing clothing to feed any vicarious thrill. Do you want a suit to take a dip?\"\n\n\"Let me think about that,\" she replied quickly. \"How long does it take you to obtain a girl a suit?\"\n\n\"I have a suit for you already; you are virtually Vivian's size. And I even have one in red if that is your preference,\" I said.\n\n\"Do you really want me to be in a red bikini?\" she wondered. It was a trick question.\n\n\"It is a one-piece, and all I want is for you to be as happy as you can be without trampling on the aspirations of others,\" I answered.\n\n\"So you feel responsible for all the girls at this school,\" she stated. It took me a moment to realize this was a statement, not a question.\n\n\"Good night, Zane,\" Victoria smiled. \"Good night, ladies,\" she called out to the room. A chorus of 'good night's' were returned. She disappeared down the stairs and I felt a deep desire to be alone. Peace and quiet sounded good -- yeah, I know.\n\n\"Bro?\" Rio snuck up on me. She gave me a quick once-over, then tenderly wove her arms around my waist and hugged me tightly.\n\n\"I'm okay, Rio,\" I muttered.\n\n\"Don't lie to me,\" she squeezed me tighter. \"Trust me; I know that desperate, hopeless look well and I can see it creeping up behind your eyes. Zane, I don't know what's wrong and I'm not going to ask, but I want you to know that I'm here for you.\" I tilted my upper body back and met her gaze.\n\n\"Who are you and what have you done to my Rio?\" I grinned weakly.\n\n\"Hey,\" she remained scarily compassionate, \"you've soaked up my pain often enough. It is about time you let me carry some of yours.\"\n\n\"What can I do?\" Iona wiggled up to my side. A further miracle was delivered when Paige appeared within my field of vision at over five feet away.\n\n\"Guys, do you think I can have the night to myself? I need to work out things in my head,\" I begged.\n\n\"Consider it done,\" Rio and Iona stated together. Iona departed to spread the word. Rio departed as well, but doubled back to give me another hug.\n\n\"Zane, don't leave me,\" she whispered into my chest.\n\n\"Three seconds ago I was going to knock you out, roll you up in a blanket, and take you with me when I scaled the walls and ran home,\" I sighed. \"To the bitter end,\" I gave Rio's and my own little motto.\n\n\"To the bitter end,\" she mumbled back. After that, going to bed was surprisingly easy.\n\n\"Zane,\" Gabrielle greeted me with a ghostly voice. I had called her and said we needed to talk.\n\n\"Someone did some poking around on you,\" I told her, \"and as a result, three Mossad agents broke into a false station they had in Peru. Is there anything we need to know about why Israeli Intelligence sent three armed men looking for you?\"\n\n\"Three,\" she mused. \"The back-up squad was outside. Since you made no mention of a grenade, I assume they wanted me alive. What are the odds of them tracing the search back to Freedom Fellowship?\" As she talked, she sat down on the bed next to me, next to my hip.\n\n\"Since I have no clue as to what resources they can bring to bear...I would feel safe enough remaining here if they were after me,\" I answered. \"What's your next move?\" For a reason that went way beyond insane, I suddenly didn't want her to leave.\n\n\"I wait. I do not have infinite exit plans or resources,\" she told me.\n\n\"You are taking this awful well,\" I noted.\n\n\"As opposed to wasting energy becoming pointlessly annoyed? You will keep me apprised of further developments,\" she commanded then rose to leave.\n\n\"Gabrielle, do you know a guy named Yeong Song?\" I blurted out.\n\n\"I know of him but I've never met him,\" she stopped and regarded me.\n\n\"Do you know that Hope Song is his daughter?\" I asked.\n\n\"Yes,\" she kept her reply short.\n\n\"I kinda-sorta had sex with her and it ended up on the internet,\" I informed her.\n\n\"You are a dead man,\" she informed me with her patented deadpan style.\n\n\"How tough is he?\" I went fishing.\n\n\"He'll kill you \u2013 it is a foregone conclusion. His abilities worry me and you couldn't even deal with his daughter, so I suggest you leave campus when he comes,\" she said.\n\n\"Are you saying I should run for it?\" I inquired.\n\n\"No; I am telling you not to bring a homicide investigation to this campus,\" she explained. \"It would inconvenience me.\"\n\n\"Yeah, I see how me bleeding all over my dorm room would seriously degrade our relationship, and since I'm the closest thing you have to a friend, I would understand your deep sense of disappointment in me,\" I nodded.\n\n\"I don't suppose he'd accept me as her boyfriend/fianc\u00e9?\" I joked.\n\n\"He might; you are very brave and occasionally martially inspired, and since he trains people in a strong warrior ethos, he might find you acceptable,\" she reasoned. \"Besides, that plan beats the odds of you taking him in a fight.\" I blinked.\n\n\"Did...did you just make a joke?\" I sounded incredulous.\n\n\"I am a human being, Zane,\" she reminded me, still devoid of emotion. She took a few more steps toward the exit but abruptly turned and took three steps back and regarded me with curiosity.\n\n\"Yes?\" I worried.\n\n\"You are alone...in bed,\" she stated thoughtfully. \"I can't decide if it is unsettling or intriguing.\"\n\n\"Well you are in a serious break-up phase so I'm not going to go anywhere near sex...but if you want to sit down and talk for a bit, we are not likely to be handed a better opportunity,\" I offered.\n\nGabrielle stepped onto the platform, moved to the middle and sat down cross-legged.\n\n\"What do you want to talk about?\" she asked. Man-oh-man, she had to be hard-up for company.\n\n\"When you were a kid, what did you want to be?\" I began. \"I wanted to be an archeologist.\"\n\n\"I wanted to be a dragon-rider,\" she said in a dream-like state.\n\n\"Western or Eastern dragon?\" I wondered.\n\n\"Western \u2013 hexipede; green scales with a silver sheen,\" she clarified; four legs and wings; right out of a fantasy novel. That was pretty much where we started, with vacated dreams and the odd quirks of youth. \n\nWe didn't discuss the real world or relationships because the important thing was that Gabrielle had never experienced a sleep-over with girls her age, much less boys. I soon learned that she'd never been a girlie-girl, even her idealized images being warrior-princesses or dark sorceresses with power over the undead.\n\nA recurring theme was that she always had a guardian/ally who watched over her and I always came home in triumph. We went over our best and worst come-on experiences. She won: some Swedish millionaire literally kept throwing euros at her until she broke his nose. I related my first solo encounter with Chancellor Bass. She laughed at me, a ghostly hollow sound.\n\nI stifled a yawn, which Gabrielle saw as her signal to get up and leave with a single nod by way of saying good-bye. I was out like a light seconds later.\n\nTOWARD THE LIGHT OF DAY\n\nI felt the body slide into bed next to me under the covers. The very movement of the bed told me who it was before I opened my eyes.\n\n\"How are ya, Love?\" Barbie Lynn whispered to me once she saw that I was awake. \"If ya just wanna cuddle, I'll be fine with that.\"\n\n\"Did someone tell you that I was upset?\" I responded.\n\n\"Zane, a dozen of us picked up on your being terribly unhappy and made sure you were left alone,\" she related. That implied no one had marked Gabrielle's passage. In the night I felt like I had passed all the madness of the past few weeks and I was now receiving a second chance; the gift of starting over. And I could start over with Barbie Lynn.\n\n\"Come here, Angel,\" I murmured, as I reached out and drew my blonde salvation into my embrace. I soon worked her on top of me, her breasts pressing down and over my chest, feeling so warm and tickling where her very hard nipples dug in. We kissed and kissed, both deeply and with flutters. I felt myself heading toward a Mandy Moore movie right up to my hand touching the cleft of Barbie Lynn's butt. \n\n\"Barbie, what is this?\" I inquired, as I tapped her butt. She clearly looked ashamed.\n\n\"Trojan: Tingly Warmth,\" she confessed as she bit her lower lip.\n\n\"So the 'wanna cuddle' was simply a lure to draw me into sex?\" I persisted. \"I thought that was only a trick guys played when they wanted to sneak sex up on a girl.\"\n\n\"Zane, I would never do \u2013 \" she started with such heartfelt concern, then, \"You are playing with me,\" she smiled. I gave her a lusty grin to match her own.\n\n\"I think I've been playing with you, and you with me, since I showed up on campus, Barbie Lynn,\" I teased her both verbally and physically. I slowly smoothed her advance up my body.\n\nAs Barbie Lynn moved, she planted her palms on my shoulders and pushed up so that her gorgeous, half-tanned melons dangled tantalizingly close to my face and she knew it. I kept kneading and massaging her scrumptious ass cheeks. Barbie began taking purposefully deep breaths and rocking from side to side at the point where my cock passed under her pussy.\n\nHer next move was to place one hand behind her back, stroke my penis shaft a few times and then maneuvered it to her sphincter. She drew forth a joyous gasp as she poised her hips to drive my tool into her depths.\n\n\"Hey, Zane Braxton,\" she purred, \"let's step back from everything a moment. All we have is right now \u2013 you and me.\"\n\nI didn't respond with words; I began fondling her mammary, flicking her nipples and groping them from areola to base. When she leaned down for a kiss, I had to tilt my head back to meet her lips. That was the moment she chose to force my cock into her rectum. Her earthy moan passed into my mouth with an intoxicating tremor.\n\nA steady process of wiggling and force left Barbie Lynn gyrating her hips against my groin but she hadn't taken enough of me in yet. She pushed her torso into an upright position, taking even more of my rod into her ass. Her last little bit of magic had her arching back and working that final centimeter or so in as well.\n\n\"Oh, sweet Lord,\" Barbie Lynn moaned. \"I want to remember this forever.\" For my part, I directed one hand to her hip to stroke up and down her waist, hip, and thigh while the other rested on her pubic mound. She made a few tentative flexes of the thighs to move my cock in and out of her bottom. I responded by caressing my ring finger on her clit. My lower two fingers and thumb began to make incursions into her parted labia.",
        "Barbie Lynn's juices began to moisten my lower stomach as she rocked, rose, and fell. Her breathing was more forced and uneven as well. She shot a look my way, her anal muscles gripped and massaged my cock, and she had it throbbing in overdrive in seconds \u2013 best lover ever.\n\n\"What do you think of Chris Gilbert?\" I snuck the words into our activities.\n\n\"Mmmm,\" she panted. \"He's a nice guy. Do you think I should marry him?\" Barbie was right on track with me.\n\n\"Yes. I think he's a brave man and he's open enough to love and care for you,\" I answered.\n\n\"If I start seriously dating him, you and I have to stop doing \u2013\" she stated.\n\n\"Done sexually, but not done as friends,\" I replied. \"Barbie Lynn, you are the marrying kind. You want a husband, the kids, and the nice house. You are too much of a nurturing individual to ever be happy wondering what holding your own kids would have felt like. You and I know we are not forever and I want to do the best for you that I can \u2013 as your friend and lover.\"\n\n\"You do realize we are talking about me marrying a guy we both like while you have your meaty man-pole up my caboose,\" she snickered between increasingly desperate gasps.\n\n\"Meaty man-pole...caboose?\" I groaned. \"Where do you come up with this stuff?\"\n\n\"A thesaurus,\" she giggled.\n\n\"I, uh...I am really close to cumming, Angel,\" I moaned. She was definitely turning the screws on my arousal, big time.\n\n\"Yeah \u2013 yeah, that's right,\" she wheezed. \"Give it to me, Honey. Shoot; shoot and keep shooting. I want you...to set me on fire.\" She started pounding on me hard this time, ripples going up her stomach and thighs while her breasts danced a violently erotic samba.\n\n\"Jesus loves me...Jesus loves me\" she began whimpering. I wanted to make our climax simultaneous but she was hitting all the right spots. My scream was both far-reaching and intense. \"Jesus Loves Me!\" Barbie Lynn followed me into orgasmic bliss. She swayed back and forth beatifically before finally settling down on my chest.\n\n\"I really like knowing you,\" she sighed quietly. I wanted to tell her the same but something happened.\n\n\"It's not what you know but who you know,\" I whispered with sudden inspiration. That was Cordelia's game; to create a bridge of contacts spreading out from here and camouflaged behind me and my activities. There was only one problem with that theory.\n\n\"I think you know several wonderful things along with several wonderful people,\" Barbie Lynn smiled dreamily up at me from my chest. \"It seems that something wonderful has gotten you excited too,\" she referred to my reviving cock. \"I want some of that.\" Before I could think of much of anything, she had slid down my body and began flopping my rod back and forth playfully letting it dance before her eyes.\n\n\"Yum, yum, yum, yum,\" she murmured over it before letting my bulbous head slap against her tongue. It was so much stimulation that it was virtually a relief when the blowjob finally began. Barbie Lynn was taking a great joy in bopping my cockhead from cheek to cheek while arching her eyebrows repeatedly at me. \"Tasty,\" she mumbled, with my rod still in her mouth.\n\n\"Zane, you need to be taking your shower soon,\" Vivian got out before stumbling to a stop as she regarded me and my sexual partner. \"Whoops \u2013 sorry, I thought you two were done.\"\n\n\"Out of the way,\" Rio burst into the scene, muscling Vivian aside and with Mercy in tow. \"I leave my junk here and \u2013 \" Rio looked my way and grinned wickedly. \"Hey, now! I like the look of that.\" Rio had caught sight of Barbie's Lynn highly vulnerable backside.\n\n\"Mercy, get up there and take a cock-sucking lesson,\" Rio spanked Mercy's butt and pushed her forward. Vivian threw up her hands in exasperation but still managed to put aside her unease to come sit by my pillow.\n\n\"If it helps your mood, Rio and Mercy read some C. S. Lewis with me last night,\" Vivian told me as she brushed some of my hair aside. I had to think about where I'd heard that name before.\n\n\"You had them reading Narnia?\" I was somewhat incredulous.\n\n\"No. He wrote much more than that but at least you are only familiar with his children's work and not his pornographic writings,\" Vivian sighed.\n\n\"He wrote porn?\" It isn't like I know every pornographic story ever scribed but Lewis is famous. How did I miss that?\n\n\"No, he didn't,\" snickered Vivian, \"but it is good to see you are still capable of jumping straight into such an obvious trap.\" Ha, ha, ha \u2013 wench.\n\nWhile I'd been busy with Vivian, Mercy had come around the center of the bed, gone onto her hands and knees perpendicular to my body, and positioned her face inches from Barbie Lynn as the honey-blonde sucked me off.\n\nRio had snuck up on Barbie Lynn's behind, parted her thighs wider, and began lapping at her cunt, causing my blonde angel to whimper in need. The only more capable non-lesbian lesbian I'd met was Ms. Hudson Lane, our school's lawyer. Rio had a talent for ferreting out what drove other women crazy, both mentally (kind of an annoying thing) and physically (a good thing, especially right now).\n\n\"Someone's got a nice happy butt here,\" Rio teased between tonguing laps around Barbie Lynn's cunt. She stuck what I hoped was only one finger in for starters while using her other hand to give Barbie's rump a decidedly vigorous spank. Barbie Lynn jolted in surprise but reacted by wiggling back.\n\n\"Second best rear view on campus,\" Rio mused, \"next to my Mercy's, of course.\" She said it so casually but I did catch Mercy's pleasure at being first in her lover's mind. Barbie Lynn's happy reaction to the situation was normal but Vivian's was less expected and showed her growing acceptance to the sexually bizarre relationship the women in my life had with me and each other.\n\n\"Now take hold of his shaft, get a solid feel for it, then let your lips engulf the head,\" Barbie Lynn instructed Mercy on her second cock-sucking adventure. Vivian was also taking notes; most likely for use with her boyfriend when they next got together. I didn't know if I should worry about the guy or be jealous of the good loving coming his way.\n\nMercy's lips felt better this time, more confident with hardly any contact by her teeth. Mercy followed Barbie's directions closely, only taking in the head and about an inch of shaft. She worked the rest of the shaft with her hand in a strong and steady rhythm. It was so confident and genuine, I felt comfortable in sitting up and working over Mercy's body as a reward.\n\nI soon had one hand warmly swirling her left breast while my other echoed with several sharp spanks to Mercy's flank. She showed her appreciation by pulling her mouth off my cock, kissing the head while giving me a quick wink, then going back to her oral ministrations.\n\n\"Zane, wind up my toy for me,\" Rio slurped. \"I'm going to DP her in the shower and I want her ready for me. Help a Brother out?\" Groan; having to perform cunnilingus on a hot athletic chick in the early morning \u2013 I don't know how much longer I can go on.\n\nWait \u2013 I hear a legion of guys who have sex once a week or less coming to kill my arrogant, over-privileged, and vastly over-sexed self. It's not like I don't have it coming.\n\n\"Mercy, would you please bring your beautiful ass my way so I can have a taste?\" I requested. Mercy was known for the alacrity of her bedroom antics so I was blessed with a gorgeous view of the back of Mercy's thighs, cunt, buttocks, and bunghole in a matter of seconds.\n\n\"Pay attention...ah...ah...Vivian and you might...ah...learn something...ah...ah (SLAP!)... yelp...a thing...or two...to tell your...boyfriend,\" Barbie Lynn worked out as Rio licked and spanked her.\n\n\"I'm not sure how looking at Mercy's naked posterior is going to help me,\" Vivian retorted.\n\n\"I'll give you an oral tutorial \u2013 literally,\" I explained. \"That way you can tell him what to do when he goes down on you.\"\n\n\"I'm not sure about that,\" Vivian countered.\n\n\"Huh?\" Rio popped up from behind Barbie Lynn. \"Do you expect him to want a blowjob?\"\n\n\"Yes,\" Vivian replied cautiously.\n\n\"Then he had better get that tongue ready to go,\" Rio insisted. \"Fair is fair, and anything less than equal treatment is just plain wrong.\" She followed that up by a violent tongue attack on Barbie Lynn's pussy and anus. Barbie reacted by dropping her head and chest down and biting my hip lightly.\n\n\"I may not need to repeat myself but I will for the lesson; every woman is different with different textures, flavors, looks, and erogenous zones,\" I began. \"As I recall from a previous encounter, Mercy likes \u2013 \" and I started to reacquaint myself with Mercy's middle third. \"Hey, baby,\" I coaxed Mercy along. I had a finger back to that spot just up and inside her vagina that she had led me to not three weeks ago.\n\nI was going at it and exploring new avenues of sensitivity for Mercy when I felt a shadow in my periphery. Vivian had shifted along the headboard until she could look right over my shoulder, sharing my view of Mercy. I gave her a little exhibition of parting the labia with the tongue, pulling on the same with my teeth and the multiple ways a tongue could be superior to a finger.\n\nThe lessons would have continued except Mercy was an excitable young lady. I gave her points for getting a better handle on her orgasm since our last time together, as well as keeping my blowjob going until Barbie Lynn could once more take over. First Mercy started breathing heavily through the nose and then came the hiccups, followed by a kitten-like whimper and finally, \"Rio \u2013 Zane! Mother-Goddamn-Fuck!\" she screamed.\n\nI had little doubt Rio rammed a third finger into Barbie Lynn's asshole and bit her clit because the blonde twitched, twitched again, then a full-body spasm took over. She was in mid-suck on my cock with almost half of it down her throat and a vacuum seal developed at the same time the trembles vibrated my cock all over her mouth. It was a little painful; a lot pleasurable.\n\nThe second Barbie Lynn's orgasm was assured, Rio knee-walked rapidly to Mercy and began to kiss her rapidly all over her face and forced her tongue down Mercy's throat. That little bit of shared passion kicked me over the edge and I came again in less than ten minutes. I felt sixteen all over again. \n\nBarbie Lynn lifted her lips up at the last second before her cheeks chipmunk-ed out as she wasn't yet in a place she could swallow. Rio had pulled Mercy off me and onto her back then mounted her submissive 'toy' and returned to kissing the hell out of her.\n\n\"Bad slut; bad, bad,\" Rio teased. \"I turn around and find you humping some guy and you didn't even get cash up front.\"\n\nOf course, she'd ordered Mercy to jump me, but Rio wasn't the kind to let things like truth, facts, and reason get in the way of what she said. She ran her hand down, over one of Mercy's breasts, and down to her lover's pussy.\n\n\"Am I going to have to spank this little kitty to teach you a lesson?\" Rio asked sweetly. Mercy vigorously shook her head in denial.\n\n\"So you don't want me to do this?\" Rio began energetically rubbing her fingers over the moist pussy. I was distracted from the rest of that exchange by Barbie Lynn's recovery. She climbed up my body, cheeks still full of my cum and staring at me with a mischievous hunger. At the moment I thought we were going to mimic the cum-swapping trick Ms. Lane and I had done, she went in another direction. Barbie Lynn leaned forward within inches of Vivian's face.\n\nVivian reacted by pulling away, knocking the back of her skull against the headboard of the bed.\n\n\"Barbie Lynn, I am not kissing you, and I am certainly not kissing you with Zane's...seed/semen in your mouth,\" Vivian insisted. Barbie Lynn mumbled something that sounded somewhat like 'but you'll like it' and did her best to look sexy, innocent, and inviting all at once. \n\nShe would have had me convinced that brushing my teeth with uranium hexafluoride was the best thing for long term dental health too. Barbie Lynn pressed forward, Vivian held her back by putting a hand on each shoulder, and then Barbie Lynn transferred one of Vivian's hands so that it now supported one of Barbie Lynn's dangling tits.\n\nRealistically, Vivian was better at Karate than Barbie Lynn and could have blocked/resisted the blow, but Vivian had the ability to be remarkably compliant at the weirdest of times \u2013 like right now. Barbie Lynn was really close to doing as promised.\n\n\"Please don't,\" Vivian asked softly.\n\nBarbie Lynn went one step further; she tapped her forehead to Vivian's forehead, smiled at her, and sat up, ready to swallow at last.\n\n\"Wait \u2013 don't!\" Rio cried out. She switched direction so that she was beside Barbie Lynn and they were the ones now actually kissing and letting my semen travel from tongue to tongue.\n\nWhen Rio got her share and then some, she spun rapidly back to Mercy and slapped that girl's thigh, motioning her up on her knees facing Rio. As Mercy reached the appointed position, Rio took her head in both hands and bore into a powerful oral exchange. One blowjob with three recipients \u2013 not my normal wake-up routine. That aforementioned bunch of guys is going to crucify me \u2013 upside down.\n\nMercy went from slightly hesitant to rather animated in seconds, keeping tight to Rio as Rio tried to withdraw. Mercy's tongue lashed Rio's mouth a few more times before Rio pushed her back.\n\n\"You like that, my Bang-bunny?\" Rio taunted Mercy. \"Do you like Zane's cream on your tongue and going down your throat?\"\n\n\"Yes,\" Mercy responded shyly, \"yes, I like it very much.\" I waited for 'can I have another' and an inappropriate chorus from 'Oliver'. Rio didn't see things that way. She wrapped Mercy up by the waist and kissed her once more.\n\n\"Okay, but since you are such a lousy cocksucker I am going to make you practice on Zane every night at eleven until you get it right...at least until the end of the semester,\" Rio scolded Mercy.\n\n\"If that is what you want!\" Mercy beamed.\n\n\"Lord Jesus, save me,\" Vivian prayed for sanity to return to the room.\n\n\"Oh, no, you are not,\" Barbie Lynn challenged Mercy and Rio's little scheme as she rushed to my rescue. \"Not every night, anyway,\" she added. Maybe not rushing to my rescue after all.\n\n\"The next lady to lay claim to my sexual favors, I'm going to make French kiss Ms. Marlowe during breakfast at the Dining Hall,\" I threatened. \"Spread the word.\"\n\n\"How is that going to work?\" Rio snickered.\n\n\"I don't know, but I've done every other inconceivable thing I've set out to do so why should this be any different?\" I gave her a lopsided grin.\n\n\"Yes, all of this is very nice,\" Vivian lectured, \"but Zane only has seven minutes left to take a shower downstairs.\" We started to stampede for the exit. \"Robes \u2013 towels,\" Vivian reminded us. She was rapidly learning many of the important skills one needs to become a mother to teenagers, a cat wrangler, or a prison guard."
    ],
    "authorname": "FinalStand",
    "tags": [
        "college",
        "humor",
        "anal sex",
        "cunnilingus",
        "cum-swapping",
        "blowjob",
        "foursome",
        "lesbian",
        "mfff"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/christian-college-sex-comedy-ch-27"
}