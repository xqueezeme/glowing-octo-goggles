{
    "title": "Surefoot 22: Birthpains",
    "pages": [
        "\"USS Surefoot-A, Counselor Kami Hrelle's Personal Log, Stardate 47415.82: \n\nESEK, WHERE THE [UNTRANSLATABLE] ARE YOU?\" \n\n\"T'Varik! I-\" Kami had stormed into the Ready Room as forcefully as she could with her pregnant belly, unannounced, ready to lash out at her friend and First Officer \u2013 when she stopped and saw they were not alone. \"Captain Pnarun?\" \n\nThe rust-furred older Caitian female, resplendent in the brick-red and black uniform of the Caitian Planetary Navy, was standing by the window beside T'Varik, obviously in mid-conversation, probably pointing out some of the damage her ship, the Caitian escort vessel Firetail, had endured in their reported recent encounter with a Ferasan battleship near the Maxia Sector. Now T'Varik turned, the Vulcan a picture of composure. \"Yes, Counselor?\" \n\nKami hesitated; she had become acquainted with Pnarun since she and her vessel rendezvoused with the Surefoot to receive repairs, provide support for the Starfleet patrols along the Cardassian border, as well as brief the Surefoot's CMO Dr Ling on the finer points of Caitian childbirth. But that didn't mean Kami could have a figurative warp core breach in front of a guest, no matter the circumstances. \"I, ah, um-\" \n\n\"Should I leave?\" Captain Pnarun offered diplomatically. \n\n\"No!\" Kami suddenly snapped, her anxiety overwhelming her common sense as she focused on T'Varik again. \"He's two days overdue! Two days!\" \n\n\"1.92 days, to be precise.\" \n\nKami bared her teeth. \"Do I seem like I'm in the mood for being corrected, you kussik?\" \n\nThe Caitian captain's red tail twitched at the profanity, but the Vulcan remained calm. \"Counselor, with such missions as Captain Hrelle and the others have undertaken, there is always a required flexibility, to allow for the unanticipated. It does not necessarily mean that something has gone wrong.\" \n\nKami's hands rested on her belly, knowing that inside, Misha was reacting to her stress, but she was unable to contain herself any longer. She hadn't slept, had hardly eaten, couldn't keep still. \"We need to find them! Esek has to be there when Misha is born! Something will go wrong if he isn't, I just know it!\" \n\nT'Varik offered a slight frown. \"According to Dr Ling, you are not due for another ten days. I am certain he will return before then.\" \n\n\"Certain? Is that a logical Vulcan response, based on a rational judgement of the facts at hand?\" \n\nThe Vulcan hesitated before replying, \"Admittedly not. However, you have taught me the value of intuition, of so-called 'gut feeling'. My gut feeling tells me that they will return soon. You just need to-\" \n\n\"Shut up.\" Kami's face tightened as she felt the wetness seep down the inside legs of her uniform. \"Shut up and just get me to Sickbay. My gut feeling \u2013 and my broken waters \u2013 tell me Misha's decided to come out now.\" \n\nBoth women drew closer and supported her, Pnarun announcing, \"My CMO is still here, she can assist with the birth.\" \n\n\"Thank you, Captain,\" T'Varik informed her politely. \"Allow me to assist-\" \n\n\"No!\" Kami breathed out raggedly, \"You're- You're going to be busy- contacting that little gnome Tattok- and finding out where- where my feckless husband is- please- if he doesn't help, contact- contact my mother-\" \n\nThe Vulcan paused. \"It would be against regulations to seek aid from Fleet Captain Shall-\" \n\nKami snarled something in Old Caitian. \n\nPnarun blanched, looking to the First Officer. \"You don't need that translated. Believe me.\" \n\n* \n\nCrescent District, Asker, Planet Skaros: \n\nThe young Caitian female made her way along the crowded street, ignoring the stares she received; it wasn't common to see offworlders in this part of the city, she knew, so their reactions were normal, but that did not assuage her anxiety, and more than once she had to apologise to a passer-by when her twitching tail smacked them. \n\nShe was in one of the seedier sections of the city: darker, grimier, and stinking of defeat and poor sanitation. And the insalubrious atmosphere was not helped by the appearance of the local Guardsmen Station: a squat, armoured monster of a building, its unwelcome look not helped by the huge blue and yellow banner fluttering over its entrance, a banner that, all the others sported in various sizes on every building in every city on this miserable world, was adorned with the image of their Imperium, a Skarosian brat named Sonoda. \n\nShe ignored the image of the smooth, sallow, reptilian face. The people referred to him as their Beloved Imperium, their Living God. All that she could think in response to that was: You could do better, folks. Much better. Not that she would voice this aloud, of course; she had witnessed more than one broadcast execution of Skarosians alleged to have shown disrespect to him. \n\nThere was a long queue of citizens outside the Station; here, people had to pay to meet their law enforcement, if they wanted to lodge petitions or complaints, or barter for the release of loved ones for whatever crimes they might or might not have committed. It was a disgusting, barbaric system, in her opinion. \n\nBut she used it to her advantage, joining the back of the queue and paying the people in front of her to let her move up; this was the sixth Station she had visited in the last two days, and she had more replicated local currency than she had time. \n\nStill, it took nearly another hour before she was escorted to a Guardsman's work cubicle. He looked like all the others of his race, though his age added more colour and sectioned scales to his hairless head, and his black uniform was a half-size too small for his pudgy frame. He never even even looked up at her as he spoke in rote, \"State your business, Citizen.\" \n\n\"Sorry, Sir, but I'm not a Citizen.\" \n\nNow he glanced up \u2013 and a leering, prurient interest eclipsed his boredom, his lipless mouth curling slightly as he took in her curved figure beneath her tight red silk blouse, skirt and boots. \"And who and what are you?\" \n\nShe shifted in place, bending slightly to allow him a glimpse down the top of her blouse, amazed at how different races from entirely different worlds could sometimes find each other attractive. \"My name is Mari Connree. I'm from a planet called Cait. I'm here because-\" \n\nHe made an appreciative sound. \"Turn around. Let me see the rest of you.\" \n\nShe straightened up, rotating in place \u2013 trying not to pop out her claws as he boldly touched her, feeling the base of her tail, before starting towards more intimate areas. \n\nShe stepped away enough to gracefully escape his touch, and forced a smile as she faced him again. \"As I was saying, I'm here because my father Shann was arrested two nights ago, and I've just tracked him down here to your Station. I'll be glad to pay his fine and take him off your hands before he starts singing his old ballads from the last Cait-Ferasa War.\" She grinned now. \"And nobody wants to hear those, I promise you.\" \n\nThe Guardsman smirked and accessed his desk computer. \"Well, you're in luck; he's in cell C-14 and-\" He blinked. \"Oh, dear.\" \n\nShe tensed. \"What is it?\" \n\n\"The club he was found in was a nest of insurgents, plotting against our Imperium-\" He stopped and looked to his left, to a small frame picture of the Living God, saying aloud, albeit in rote, \"Long Live Our Beloved Imperium.\" before focusing on her again. \"So he'll be shipped off to the work camps for the next two years, which is a mercy compared to what the leaders of those seditious scum and their families will suffer.\" \n\nThe female controlled her reaction, though the lighter patch of fur surrounding her right eye creased with consternation. \"Well, as much as my mother would love to see him work off some of that waistline, I can assure you that we have nothing to do with any nasty old insurgents, who would dare try to harm your Beloved Imperium. My Dad was simply in the wrong place at the wrong time, and we need him to complete our business on your wonderful little world.\" \n\nShe drew closer, leaning against the side of his desk, her hand resting flat on the surface near his keyboard. \"Isn't there something you can do? You don't want to keep him around, he'll eat up all your food before you know it.\" \n\nThe Guardsman started to reply \u2013 then noticed that, as she shifted her hand, she left behind five strips of gold-pressed latinum, currency she knew was far more prized than the local coins, worth maybe a year's salary to him, and would guarantee her results. \n\nTwenty minutes later, she was in the reception area of the Station when they led up from the underground cells a fat brown-furred Caitian male in torn, dirty clothes. He sported a swollen left eye from a recent punch or kick, walked with slight limp \u2013 and, Mother's Cubs, he stank! \u2013 but he seemed jovial enough, entertaining the others with a song: \"The planet Cait is blue / And there's nothing we can do...\" \n\nThen he stopped as he saw her, and beamed broadly, opening his arms wide and loudly declaring, \"Mari! Darling Daughter! Runt of the Litter! At last you've come to claim me-\" \n\nShe stormed up to him and slapped him hard cross the snout. \"Shann Connree! You miserable, lazy, insufferable, good-for-nothing sot! Mother's been worried sick about you!\" To uproarious laughter from Guardsmen and citizens alike, she grabbed him by one ear and led him out the door and into a street now being assaulted by a horrendous downpour, one that was already overloading the district's inadequate drains, and flooding the streets. \n\nQuickly she let go of his ear as they raced to their parked groundcar, though both of them were thoroughly soaked by the time they climbed into the back seats. Esek Hrelle shook his arms in a vain attempt to rid himself of some of the water, cursing. \"Seven Hells, haven't these people heard of Weather Modification?\" \n\nBeside him, C'Rash Shall cursed as well, more because of his actions than the weather. \"Haven't you heard of soap, you stinking pig? Where'd they keep you in, a slurry pit?\" \n\nHe grunted. \"A slurry pit would at least have some ventilation. The Skarosians don't put a high price on the welfare of those caught in what they laughingly call their justice system-\" Then he stopped himself in alarm, looking to her and speaking in Old Caitian, \"Is it safe in here?\" \n\nShe nodded, replying in Standard, \"I scanned it for monitoring devices.\" More loudly she told it, \"Back to our hotel.\" As the groundcar verbally acknowledged, started up and moved out into the street, she removed her blouse and wrung it dry. \"Seriously, you reek-\" \n\n\"Drop it, and give me an update.\" \n\nC'Rash ran her hands over her furred breasts, speaking through clenched teeth to prevent them from chattering. \"I've spent the last two days trying to see if any of our contacts here had escaped the raid on the bar; if they did, they're in hiding, and not willing to risk their necks to help. I assume your dermal communicator malfunctioned at some point?\" \n\nAbsently he raised a forefinger and pointed it to his swollen eye, and the ugly purple perimeter of bruising where the implant sat. \n\nShe grunted. \"Yes, well, I've since been on my own, trying to locate where they took you. Assuming they didn't just shoot you and bury you in an unmarked grave.\" \n\nHe squeezed the longer fur on his head, feeling the water run down into his pointed ears. \"They don't kill offworlders as a general rule; if we're here, it means we or others who know us have money, which seems to be almost as important as their Imperium. Is Mr Rrori okay?\" \n\n\"He's still in the port, in the ship, and the cargo's secure. The Port Authority sometimes stops by to threaten an inspection, but fortunately they're as corrupt as everyone else here, and can be bought off with a bottle of Aldebaran whiskey or vivids of Orion porn.\" \n\n\"Has he updated Starfleet?\" \n\n\"He can't; he says the Skarosian Imperial Fleet is flooding the subspace channels with interference as part of their numerous war games exercises. He could probably override it, but-\" \n\nHrelle nodded. \"That would just alert them to our true identity. Seven Hells.\" Two days overdue already; Kami must be climbing the walls by now. Damn you, Tattok... \n\n* \n\n\"It will be a straightforward exchange,\" Admiral Tattok had promised them over a week ago in the Surefoot's Ready Room, his diminutive stature having no effect on his authority. \"The Skarosian Empire is strictly off-limits to Starfleet, but we've created a verifiable civilian profile for you, Captain, and Captain Pnarun is lending us a Caitian warp shuttle with no Starfleet connections.\" \n\nHrelle nodded. \"We'll see if our Caitian cadet Rrori would like to play chauffeur. He'll be expert at handling the controls.\" \n\n\"Some Empire,\" Lt C'Rash had noted, glancing at the stellar map of the Skarosian system. \"One system, and one Class-M planet. The Klingons and Cardassians aren't exactly going to be peeing themselves in fear.\" \n\n\"Size isn't everything, Lieutenant,\" the Roylan admiral replied dryly. \"I can assure you. They are a brutal totalitarian regime who can afford to leave most of their population in abject poverty while they maintain a large planetary army and a warp-capable space fleet. \n\nThe Skarosians also allow a wide variety of interstellar criminal individuals and organisations to operate on their world with impunity \u2013 for a price, of course. And one such criminal, an Orion named Lur Dissak, has been dealing with the Obsidian Order, selling them stolen military data on the Starfleet strength, deployment and military resources in a particular sector of Federation space.\" \n\n\"How do we know this?\" \n\n\"He told us.\" \n\n\"He admitted to stealing classified Starfleet information?\" C'Rash exclaimed in disbelief. \"And selling it to the Cardassians? And he's not afraid of being arrested when we get there?\" \n\n\"There will be no arrest. We have no extradition treaty with the Skarosians, and if this information he has is verified, he can be valuable to us staying there. Your mission is to go to Skaros, disguised as a party of Caitian civilians, meet Dissak and pay for the same information he provided the Cardassians.\" \n\n\"And what will we be paying him with?\" \n\n\"He asked for 100 kilograms of stabilised trilithium; I've brought it with me.\" \n\nHrelle had frowned at that: trilithium was an explosive of tremendous power, highly valuable, and highly regulated. \"Admiral, I have strong reservations about handing over something like that to a criminal.\" \n\n\"As do I, Captain. But I have stronger reservations about sitting here waiting for the Cardassians to strike and our not being prepared for it. Not just because of the immediate effects of such an invasion, but how it will be perceived by all the other hostile powers out there who might try to take advantage of our perceived weakness. Just go, get the information and leave.\" \n\n\"Sir, why us? You said SI already has operatives on Skaros.\" \n\n\"Dissak stated one of the conditions was that you were involved. He wants to meet you.\" \n\n\"Me? Why?\" \n\nNow the Roylan's blue-green face darkened almost as much as his eyes. \"Apparently he's seen you fighting... in the Orion deathmatches.\" \n\nHrelle stiffened. \"No.\" He tried, he tried every day to put behind those terrible, terrible years as a slave, forced to fight in an arena with others for the amusement and profit of the Orions, losing his decency as much as he lost his freedom, to become the creature they called The Beast. And yet, circumstances continued to conspire to keep it coming back to him, reopening all the old wounds. \"He can stroke off.\" \n\n\"Captain,\" Tattok reminded him, \"The information he has could save hundreds, even thousands of lives. If it helps... I'll remind you that you're under orders.\" \n\n\"It doesn't... Sir.\" Hrelle swallowed. \"But don't worry, I'll do it.\" \n\nTattok nodded with approval. \"Bear in mind, however, that while Dissak and his people will be aware of your Starfleet connections, as will the local contacts who will lead you to him, under no circumstances are you to reveal yourselves to anyone else there. Certainly not to the authorities; the Skarosian Empire is ready to ally themselves with the Cardassians, and such a revelation could be enough to tip them over fully.\" \n\n\"Admiral,\" Hrelle spoke up again, \"My wife is near to giving birth, I don't want to be away when her time comes.\" \n\nTattok seemed sympathetic \u2013 but just as resolute. \"Captain, this mission should take five, maybe six days at most for you to complete and return.\" \n\n* \n\nEight days later, Hrelle was rubbing at his eye sockets, wincing at the swollen one. He was already sick of being on this world. He wanted his wife. He wanted his daughter, and crew, and ship, and most of all, to hold his son as he emerged into this life. \n\n\"At least tell me you got the information we needed before the Guardsmen raid?\" C'Rash groused. \"Otherwise we might as well go home now.\" \n\n\"I got it. Dissak has a business in the hills overlooking Asker; it's a popular place for offworlders as well as the Skarosian upper crust, and his villa is on the same grounds. We're going up there tonight and making our acquaintance with him.\" \n\nShe made a sound. \n\nHe glared at her challengingly. \"What?\" \n\nShe pretended to be interested in the rain-soaked view outside her window. \"Nothing. It doesn't matter.\" \n\n\"It's a hell of a time for you to change character and start being restrained. What is it?\" \n\nC'Rash looked to him again. \"You should let me go alone.\" \n\n\"Kiss my furry ass.\" \n\n\"I mean it, this is dangerous work. Uncle Esek, you're... you're old. And not in the best of shape. I mean, I'd trust you to handle a couple of Ferengi or win a pie-eating contest, but this is something different.\" \n\n\"Thanks, cub. Your confidence in me is inspiring.\" \n\n\"You should be back on the Surefoot with Aunt Kami. She's going to be worried sick about you, and in her condition that can't be good for her or the cub-\" \n\n\"Oh, really? Well, gee, thanks for that, because that thought never occurred to me until you mentioned it!\" he snapped. \"Now put a cork in it! Or I'll put my boot in it!\" \n\nThe black-furred Caitian sensibly refrained from antagonising him further. \n\n* \n\nSasha rushed into the Sickbay Suite, immediately divining where she needed to go, based on the privacy screens and the sounds of cursing coming from behind. \"What's happening?\" \n\nKami was there, being helped out of her uniform by two Caitians Sasha didn't recognise, a female and a male wearing Planetary Navy Medical insignia. Doctor Ling was also there \u2013 holding her left wrist, where some blood was seeping out of a wound. \"Ensign Hrelle, you are relieved of your scheduled duties pending the imminent arrival of your younger brother into the open air. Though I would advise you to not get too close to the Counselor at this time.\" \n\n\"It's okay, Doctor,\" the nurse assured her. \"Sasha is her family, her scent won't trigger Kami's aggressive instincts. Why don't you go tend to your wound?\" \n\nAs she was helped up onto the biobed, Kami looked to the departing human, imploring a panting, \"Sorry, Juliet- didn't mean to-\" \n\n\"It's okay,\" the woman replied dryly, \"My fault for not believing the accounts I'd read about Caitian births. Good luck.\" To Sasha she added, \"You too. I'll be outside if I'm needed.\" \n\nSasha drew closer, looking to the female Caitian. \"What can I do, Doctor...?\" \n\n\"Shalom.\" \n\nSasha grinned. \"Really? Shalom to you, too.\" \n\n\"What does that mean, Ensign?\" \n\n\"Never mind, Ma'am. What can I do?\" \n\n\"She'll be on her side, facing you, during the birthing process. Hold her, stay close, let her breathe your scent in, smell your father's scent on you; it'll keep her calm. We can't use drugs for the stronger pains, the cub will be hyper-sensitive at this time, but your presence will help.\" ",
        "Sasha took Kami's hand, holding her head and looking into the woman's eyes, the woman who had become a surrogate mother to her these past two years since boarding the Surefoot and marrying her Dad. \"Everything's going to be fine.\" \n\nKami nodded weakly, baring her teeth at the latest contraction. \"Your- Your father will be okay-\" \n\n\"Yes,\" Sasha agreed, wanting desperately to believe it. \n\n\"He'll come back safe.\" \n\n\"Yes. Yes, he will.\" \n\n\"And then,\" Kami promised breathlessly. \"Then I'm gonna kill him for not being here...\" \n\n* \n\n\"Admiral, Captain Hrelle's wife is currently giving birth. She is very concerned for his safety \u2013 as are we all. In addition, there is also our Chief of Security, and a fourth-year cadet who volunteered for this mission.\" \n\n\"I am aware of all this, Commander,\" Tattok reminded her from the viewscreen in the Ready Room. \"I may not serve with them directly, but my concern for them is no less than yours, or anyone else's onboard the Surefoot.\" \n\n\"I did not intend to suggest otherwise, Admiral. Have you attempted to reach SI's contacts on Skaros?\" \n\n\"We have. They... no longer appear available.\" \n\n\"Sir, request permission to take the Surefoot-\" \n\n\"Denied.\" \n\n\"Admiral-\" \n\n\"Commander, no Starfleet vessel or personnel is allowed in the Skaros system. Is that understood?\" \n\nT'Varik focused her mental disciplines as she replied, \"Yes, Sir.\" \n\nTattok regarded her for a moment longer, before asking, \"And how have the repairs to the Firetail proceeded?\" \n\n\"Completed, Sir, apart from cosmetic damage to its hull.\" \n\n\"That's good; it is important that we assist non-Starfleet vessels such as they whenever we can. Towards that end, I have been in communication with the Fleet Captain of the Caitian Planetary Navy.\" \n\nT'Varik raised an eyebrow. \"Ma'Sala Shall?\" \n\n\"Is there a problem, Commander?\" \n\n\"No problem, Sir. Fleet Captain Shall is Counselor Hrelle's mother.\" \n\n\"Really? What a coincidence. Anyway, she and I have agreed that the Firetail requires a testing of the repaired systems following its recent brush with the Ferasans. You are now assigned to engage in an exercise to assist in this testing. You will follow behind it, wherever it might go, and measure its warpfield cohesion, energy signature, and so forth.\" He paused and added. \"Wherever it might go. Is that understood?\" \n\nAfter a moment, she replied, \"Yes, Sir.\" \n\n\"Coordinate with them. Tattok out.\" The screen went dark. \n\nShe took an interminable amount of time \u2013 2.856 seconds \u2013 analysing the curious exchange with the Admiral, before touching her combadge. \"T'Varik to Bridge: hail Captain Pnarun on the Firetail, and then inform the crew that we will be assisting our guests from Cait in an... exercise.\" \n\n* \n\nDissak's estate, which contained his villa as well as his casino, was built on a wooded slope overlooking the city. Hrelle and C'Rash entered the club, both of them in matching black Caitian suits with gold trim. The interior was long, sprawling, dark but also gleaming and mesmerising with an array of lights and sounds from the single- and multi-player gambling machines, as well as tables where larger numbers of players collected to play a plethora of games from a score of different cultures. \n\nThey ignored these, however, to stride up to a set of private doors guarded by a pair of hulking Nausicaans, one of them nodding to the Caitians. \"Private section, no admittance.\" \n\n\"That's okay,\" Hrelle assured them. \"We're here to see Lur Dissak. He's expecting us.\" \n\n\"We know of no Lur Dissak,\" the second Nausicaan announced, \"And he is not expecting anyone tonight.\" \n\nHrelle blinked. \"I'll assume the contradictory statements are due to a Universal Translator malfunction rather than natural stupidity. But really, you or your wife here should go check with him-\" \n\n\"Wife?\" the first Nausicaan snarled. \"I am Peergg's husband, not his wife! You have a problem with two males marrying, you bigot?\" \n\n\"What? No, of course not-\" \n\nBut before the argument could escalate, the doors behind the guards swung open, and a short, balding human with tight blonde curly hair and a narrow nose emerged. \"It's okay, guys. Mr Dissak is in fact expecting them.\" He beckoned the Caitians. \"My name is Martin Farro, Mr Dissak's personal assistant. Please, follow me.\" \n\nThey did, walking along a winding corridor \u2013 and a number of security scanners, transporter inhibitors and weapons detectors/deactivators built into the walls and floors \u2013 before emerging into an open area with huge windows that offered a magnificent view of the gleaming spires of the city below. \n\nBut even without the view, there was enough here to marvel at: plush furniture, artwork from a dozen different worlds on displays on walls or in glass cabinets, and beautiful people lounging around the host. \"There he is!\" \n\nHrelle controlled his reaction to the appearance and scent, knowing what to expect but still feeling his heart race. His experience with Orions had never \u2013 ever \u2013 been pleasant, and he was certain there were some of them out there in the Galaxy who weren't corrupt, unpleasant supporters of slavery and criminal activity. But he doubted it. \n\nEven with this one, who seemed younger and smaller than most of his race, though his olive skin and bald head was typical enough, as was the thoroughly tasteless gold and crimson suit. He held out his arms as if to embrace the world. \"At last! The Beast has arrived!\" \n\nHrelle tensed further as the man approached, and it took all his effort not to pop out his claws \u2013 but fortunately the man did not embrace his guest, but instead stopped and declared, with abject adulation, \"I can't believe it! He's here! He's actually here! My hero!\" \n\n\"Your... hero?\" \n\nDissak nodded, grinning with jewelled teeth. \"You bet!\" He glanced down at Hrelle's belly. \"You're a little more... big-boned than when I last saw you, but there's still the same fire in your eyes! The same fierce power!\" He looked to C'Rash now, but with a different sort of interest. \"And who's this delightful creature?\" \n\n\"Lt C'Rash, my niece, Chief of Security and bodyguard.\" \n\nDissak guffawed at that as he approached her, looking her over with open desire. \"With a body like yours, you're the one who needs guarding.\" He reached out, took her hand and raised it to his lips to kiss it. \n\nShe pulled her hand away before that happened, however. \"I can guard myself, thanks.\" \n\n\"Careful,\" Hrelle warned. \"She bites.\" \n\nDissak laughed, recovering quickly as he returned to Hrelle. \"Look at you! In the flesh!\" Then he turned to a Klingon lurking in the background, pausing to introduce him. \"And this is my Chief of Security. Well, Khersaq? Didn't I tell you? Isn't he something?\" \n\nThe Klingon was tall, dark, young and full of attitude, sneering at Hrelle and responding with, \"Yes, he is something: a fat, flabby joke. Is this really the mighty Beast you keep gushing about?\" \n\n\"What?\" The Orion practically gasped. \"You've seen the videos! That Klingon's spine he'd snapped!\" He looked back at Hrelle expectantly. \"Do you remember that match? Huh? Do you?\" \n\n\"No,\" he lied softly. \n\n\"No?\" Dissak grinned and raced back to his desk, retrieving a remote and aiming it at a large screen over the fireplace. \"You're in for a treat!\" \n\nThe screen suddenly filled with an intense scene, in widescreen and full colour, of two figures in a fight to the death: a younger, thinner, scarred Hrelle grappling with a lean, bleeding Klingon. \n\n\"Yeah!\" Dissak cried enthusiastically, balling his hands into fists and throwing punches in time with the action on the screen. \n\nHrelle looked away, and prompted a bemused C'Rash to do the same, not wanting her to see him like that, though at least he was handling it better than months before, when the Ferasans brought up his murderous past without warning. \"Mr Dissak-\" \n\n\"Wait!\" the Orion pleaded, not taking his eyes off the scene overhead. \"Wait for it- here it comes...\" \n\nCRACK! \n\nThe onscreen crowd roared, and Dissak joined them. \"YES! That was awesome!\" He turned off the screen and looked to the present Hrelle now. \"How did it feel? You were fighting with him for over 36 minutes! I can't imagine doing anything for 36 minutes, and there you were, fighting to the death! That was a record for you! What motivated you?\" \n\n\"Staying alive,\" Hrelle replied simply. \n\nDissak laughed at that. \"Always the kidder! I owe you so much!\" \n\n\"What do you mean?\" \n\n\"I worked with the company that broadcast the matches throughout the Orion network; it's where I got a taste for information gathering and sales. And it's where I made a fortune off of your many victories, the stake I needed to set up my own business here.\" He practically danced around the open room. \"This is all thanks to you, Beast!\" \n\n\"Don't call me that.\" \n\nDissak ignored the response. \"Come on, Beast! I want to show you off to my friends, get some images taken, have some drinks, talk about some of your favourite matches-\" \n\nFarro drew up to his employer. \"Perhaps you can take them down to the nightclub, Mr Dissak? I have that merchandise to image for the auction tomorrow, and I don't want to disturb you.\" \n\n\"Excellent notion, Martin!\" He beamed at Hrelle. \"The drinks are on the house, as much as both of you want!\" \n\n\"Mr Dissak-\" Hrelle interrupted, softly but firmly. \n\n\"Call me Lur.\" \n\n\"Mr Dissak... we came for the information, to pay you and then leave. We're already overdue to return to our ship. I know you're a very busy man, so-\" \n\nThe Orion frowned, glancing back at his chief of security. \"Is it Khersaq? Are his insults getting to you?\" \n\n\"Not at all.\" He spared a glance at the Klingon. \"I don't care what he has to say; his opinion isn't worth the shit under my boots. I just didn't come here to drink and reminisce with you.\" \n\nThe room seemed to hold his breath, waiting for the response from the man who obviously was unaccustomed to being refused anything. Until he smiled, equally taut, and replied, \"Maybe not. But if you want to know what the Cardassians know... you will now.\" \n\n* \n\nOn the Surefoot bridge, T'Varik sat in the Captain's chair, the cadets of Alpha Squad at their various stations and attentive to their duties as she proceeded. \"Helm, maintain our present distance from the Firetail, matching their vectors as best you can. Science Station, monitor their energy emissions. Engineering, compare the Firetail's engine performance with our own; I would like a report compiled with recommendations as to any improvements we might implement.\" \n\n\"Commander,\" Lt Neheru said from Ops, taking the place of the absent Sasha. \"I am compelled to inform you that we are on approach to the outer perimeter of the Skaros system.\" \n\n\"Thank you, Lieutenant.\" \n\nAfter a moment, the bemused Kelpien continued. \"Commander, standing orders are clear about entering the Skarosian system-\" \n\nShe turned in her chair to face him. \"Lieutenant, I do not believe anyone said anything about entering the system. We are assisting the Firetail with a number of diagnostic tests; that is all.\" Then she faced forward again. \"Tactical... while we do this, I wish to test our passive scanning systems. Can you access the recorded energy signature of the Caitian warp shuttle employed by Captain Hrelle and his party?\" \n\nAt her station, Neraxis frowned, her bald blue head creasing with confusion. \"The energy signature? Sure, Commander, but why?\" \n\n\"I want you to run passive scans on the system for its signature. Passive, I must stress again, not active, as that could be perceived as an aggressive action towards the Skarosian Empire. Am I clear?\" \n\nThe Bolian grinned. \"Yeah, I think so, Commander.\" \n\n\"And Lieutenant Neheru: monitor the Skarosian communications traffic. Passively, of course. Report anything unusual.\" \n\nNeheru started to enquire further, but then simply gave up and replied, \"Yes, Ma'am.\" \n\n* \n\nDissak's casino had a bar and a nightclub section, the latter a pounding assault on the senses: lights and noise and heat and scent, as the young and wealthy, both native Skarosians and offworlders of many races, came to dance, drink, and ingest substances that would be illegal outside of this system. \n\nAnd Hrelle endured an interminable number of opportunities to have Dissak introduce him to nameless acquaintances who had no idea who the Caitian was or why they should be so pleased to have this exceptional honour \u2013 but who knew better than to risk offending their host. \n\nAt some point, Hrelle excused himself to step outside for some air, staring up at a tiny white moon with the blue and green streaks across it. He pressed his forefinger against his right cheek and held it there; after returning to the hotel and repairing the damage given to him in the Skarosian jail, he had implanted another dermal communicator. \"Mr Rrori?\" \n\nSeconds later, a familiar male voice vibrated near his right ear. \"Captain? Is everything okay?\" \n\n\"Yes, just checking in. We're with Dissak now, and we're hoping to conclude negotiations shortly. Once he's cleared Air Traffic Control for your approach, we'll send you the coordinates.\" \n\n\"Understood, Sir.\" \n\nAfter a moment, Hrelle asked, \"Have we- has any messages been received? Or have you been able to-\" \n\n\"Sorry, Sir, but the Skarosians are still flooding subspace.\" \n\n\"Acknowledged. Hrelle out.\" \n\n\"Well, that's clever. Nice undercover work there, Fat Boy.\" \n\nHe didn't turn to face his Security Chief approach. \"I knew there was no one else around, Lieutenant. I'm not that old and feeble.\" \n\nC'Rash drew up to him. \"I knew I should have come alone.\" \n\n\"Are you forgetting Dissak asked for me? I'm The Beast, not you. The only thing beastly about you is your attitude.\" \n\n\"That Orion is a freak,\" she declared, \"He makes my fur stand on end. If he wasn't so valuable to Starfleet-\" \n\n\"Why should that make a difference? He's not an undercover operative pretending to be a criminal, he is a criminal. And he's allowed to continue to be a criminal with impunity because he might be useful to us. What does that make us?\" \n\nShe grunted, but then continued with, \"Still, it must be quite the ego stroke for you.\" \n\nHe glanced at her. \"Excuse me?\" \n\nShe smirked now, staring up at the stars. \"Come on, Jumbo, your Number One Fan brings you down here to relive your Glory Days, it must put some tightness in your boxers-\" \n\nShe never saw him draw up to her face until their snouts were almost touching, and she felt his hot breath on her, His gaze was dark and narrow in the light from the building, teeth bared as he snarled, \"You know this cute little act you do where you insult me and I put you on the nearest Naughty Step? It stopped being cute a long time ago. I'm tired of it. I'm tired of you-\" \n\n\"What treachery are you planning out here?\" \n\nThe Caitians turned and faced Khersaq, standing at the entrance, scowling. Hrelle grunted. \"No treachery. Just a family argument. Like all the ones your parents used to have about whether they should feed you to the family targ, or just put you in a sack and throw you in the nearest river.\" \n\nThe Klingon cursed him. \"I would disembowel you, but the shame of killing such a bloated monstrosity would sully my family honour!\" \n\nC'Rash drew up between them, baring her claws and fangs. \"Back off, petaQ!\" \n\nKhersaq laughed. \"Your little kitty cat is most loyal. Does she always fight your battles?\" \n\nHrelle forcibly moved her away to face him again. \"I don't need her to kick your ass back to Qonos; you're just not worth the effort. Now, we're going back inside, and we're telling your Master that we're done stroking off down here, and that we're going back up and completing this exchange. If he doesn't want to do that, then the deal is off and we're going home. Now, are you gonna step aside, or are you gonna find out what this bloated monstrosity can do to you?\" \n\nThe Klingon growled at him \u2013 but then smirked and stepped aside. \"Yes! The sooner you're gone, the better!\" \n\nThey re-entered the premises, eventually finding and convincing a reluctant Dissak to finally get down to business. They were ascending along a private passage back to Dissak's quarters above, when Hrelle caught a sound and scent that made him stop and stare at another set of stairs leading downwards again, opposite them. \n\nHis halt drew the others' attention, the Orion asking, \"Is there something wrong, Captain?\" \n\n\"Yes,\" he admitted, sounded embarrassed. \"I think I had too many of those Rigellian canap\u00e9s in the club. My stomach's gonna have a warp core breach.\" He clutched his belly and belched. \"Sorry. Where's the toilet?\" \n\nKhersaq made a mocking sound, but Dissak smiled and nodded. \"Back the way we came, first door on the left. Shall we wait?\" \n\n\"No, send the clearance and coordinates to our ship, C'Rash can verify and collect the data. I, ah, might be a while.\" He belched again, covering his mouth. \"Sorry!\" \n\nThe others turned and continued towards the main room, the Klingon sparing him a final look of contempt before following. Hrelle stopped pretending to be gaseous, and snuck across to the opposite stairwell, following it down \u2013 not towards the nightclub as he expected, but one where the sounds and scents he had picked up grew stronger, before he reached a door and quietly opened it. \n\nAnd looked into a nightmare. \n\n* \n\nSasha had been steeling herself for the worst. She had heard numerous horror stories about childbirth, for several races. Of them all, the one she dreaded the most was the notion that the expectant mother might poop during the birthing process, because apparently the same muscles down there were being used, and she really didn't know how she could face Kami afterwards if Sasha witnessed that. \n\nBut so far, everything seemed to be going fine. She held Kami's hand, assuring her, \"You're doing brilliant! You're-\" She gasped as Kami's grip tightened, the woman in obvious and intense pain. \n\nAs if in illustration, one of the lights on the biobed monitor overhead went on alert. \"What's wrong? What's happening?\" \n\nDr Shalom looked agitated. \"One of the cubs' claws has snagged on the cord, causing an internal laceration- it's caught, there's distress- Seven Hells-\" Louder now, she shouted out, \"Doctor Ling, we need a surgical kit in here! Stat!\" \n\n* \n\nIt was a windowless room, with barely any ventilation and the only light from portable units standing in one corner, around a set of holocameras. There were mattresses, and a toilet, and emptied cartons of food and drink. \n\nAnd children. Collared, frightened children. \n\nThere was fourteen of them, aged between four and, Hrelle guessed, twelve, of many races: human, Vulcan, Tellarite, Rigellian, Andorian, Denoublian and Trill. They were dressed in various types of sleepwear, though they didn't look as if they had had much sleep lately. Their collective scents had reminded him of those times he'd visited Sasha's classroom back on Station Salem Four years ago to give them presentations on safety and exploration. \n\nExcept here, fear and despair suffused the air here. \n\nMost of them were huddled together in one darkened corner, while in another, the one with the lights and cameras, Dissak's PA Farro was on one knee in front of a young human girl in a nightdress, with blonde hair and a tearful expression. \n\nOne of the children in the group saw Hrelle and gasped \u2013 stopping when the Caitian brought a silencing finger up to his nose as he quietly approached Farro, who remained focused on the girl in front of him. \"It's okay, Libby, you can do it. Give us a smile for the cameras. We don't want your new parents to think that you're not a happy little girl, do we?\" When she continued to make weeping sounds, he added more sternly, \"Do I need to get Mr Khersaq to come down here and punish you again?\" ",
        "\"No,\" Hrelle answered for her. \n\nFarro spun in place, but Hrelle reached down and clamped his hand around the man's throat, lifting him up to his feet as the girl ran back to the others. Hrelle squeezed, as the human struggled. \"D-Don't- P-Please-\" \n\n\"Are there any more children here?\" \n\n\"P-Please- I d-didn't-\" \n\nHrelle leaned in closer. \"My forefinger tip is at your carotid artery right now. I can pop my claw out-\" \n\n\"There is just us,\" a Vulcan boy, who looked to be the oldest and tallest of the group, informed him. \"We were taken from the USS Beltane.\" \n\n\"The Beltane?\" Hrelle remembered a report on its destruction two weeks ago while en route to New Brooklyn IX, from a warp core breach, with all hands lost \u2013 or so it was assumed. \"Was it Orions? They made the ship's destruction look like an accident?\" \n\n\"It would be logical to assume that,\" the boy replied. \n\n\"Were there any adults with you?\" \n\n\"There was one who accompanied us in our lifeboat; we... do not know what happened to him. Are you with Starfleet?\" \n\n\"Yes: Captain Esek Hrelle, USS Surefoot.\" \n\nThe boy nodded. \"My name is Sevrik, Sir. My brother is Lt Dareth on the USS Nautilus.\" \n\n\"Can we go home with you?\" the girl, Libby, asked, tears flooding from her now with the resurgence of hope. \n\nIt broke Hrelle's heart to see it. \"Oh, yes, sweetheart. You're all going home with me. I promise.\" Then he faced Farro once more, allowing his growing rage to show in his expression and voice. \"And you're going to help make that happen. Aren't you?\" \n\nThe human gasped. \"Y-You can't- get away- Dissak w-won't-\" \n\n\"Trust me, Dissak is going to have bigger things to worry about before I'm through. Now, let's get these collars off them and get upstairs.\" He looked to Sevrik again. \"I'll need your help with the others. Can you be my First Officer on this mission?\" \n\nThe boy nodded. \"I will endeavour to function as my brother would expect.\" \n\nMoments later, Hrelle, still clinging to Farro from behind, led the way, with the children holding hands in a line. And the man was still trying to justify his actions. \"Captain- it's not my fault- I'm just following orders-\" \n\nHe stopped talking as Hrelle squeezed his neck and shushed him, and they arrived in the corridor. He motioned for the children to line up against the far wall, out of sight of the main room, before touching his cheek. \"Hrelle to C'Rash and Rrori: Rrori, where are you?\" \n\n\"I've received the clearance and the coordinates, Sir, and am now two minutes away, preparing to land and unload the trilithium.\" \n\n\"Change of plan: there are Federation children here, fourteen of them, victims of a trafficking network.\" \n\n\"Children, Sir?\" \n\n\"Shut up and just listen. Land, keep the engines running, arm yourself and have weapons ready for us. Under no circumstances allow anyone but myself, Lt C'Rash and these cubs near the ship. Use lethal force if necessary. Acknowledge.\" \n\n\"...Acknowledged, Sir.\" \n\nHe peered around the corner, saw C'Rash standing beside Dissak and Khersaq by Dissak's computer, uploading the data into a PADD. The tense look on her expression and posture told him she had listened in on the conversation. \"C'Rash, I know you can't respond, but I'm leading the children out to the field. Can you manage those two and meet us out there?\" \n\nShe nodded, seemingly to herself. \n\nThen Farro shouted out, \"LUR! HE'S-\" \n\nHrelle clamped his hand around the human's mouth and turned to Sevrik. \"Get yourselves outside! To those trees! Stay out of sight!\" \n\nAs they ran off in a group, Hrelle looked back at C'Rash and the others, as they caught sight of the children exiting to the outside. Immediately the Caitian female struck out, knocking back Khersaq and slamming Dissak into his computer \u2013 but not before the Klingon recovered more quickly than anticipated, grabbing C'Rash, lifting her up, and flinging her against the nearest window. The material shattered into a million pieces as she was thrown out and down to the landing field. \n\nHrelle broke Farro's neck without hesitation, throwing the body aside and charging towards Khersaq, roaring. \n\nThe Klingon laughed, arms wide, beckoning. \"Yes, Fat Man! Come and let me send you to your-\" \n\nBut Hrelle bypassed him at the last second, turning and leaping out the window, nearly ending up tumbling as he went down the steep sloped wall and reached the grass, where C'Rash was struggling to rise amidst a circle of window fragments and blood. \n\nHe helped her up \u2013 she appeared injured, shocked but conscious \u2013 as their ears filled with the whine of the large arrowhead-shaped Caitian shuttle quickly descending onto the landing field, Hrelle guiding the dazed C'Rash towards it even before it had fully landed. The door on the side opened, and Rrori emerged, phaser rifle in hand. \"Sir-\" \n\n\"Get her in! I have to get the children!\" \n\n\"Yes, Sir- take my rifle-\" \n\n\"No! Cover us!\" He took off around the ship before either of his crew could protest, his eyes instantly taking in the scene around him: a wall surrounded the grassy landing field, one side with Dissak's house overlooking it, and lights stationed at the corners \u2013 along with some sort of wicked-looking black perimeter gun mounted on a turret at one corner. But fortunately the guards that he saw appeared to be in a state of confusion as to what was going on, shouting to each other, demanding instructions. \n\nHe saw Sevrik and the other children. \"Come on! Let's go!\" \n\nThey started out of cover \u2013 but then some of them screamed as disruptor bolts struck the ground near them, kicking up dirt and grass. Hrelle followed the bolts back to their source, some human guard. He charged at him, shifting as the man tried to fire in his direction, but miscalculating the recycling time on his weapon. Hrelle tackled him, claws extended to slice open his throat and take his disruptor, leaving his victim spasming, gushing blood from his fatal wound. \n\nHe looked back at the children, hoping that it had been too dark for them to take in the graphic details of what he had just done. \"GO! NOW!\" \n\nThey started off, leaving Hrelle to cover them from there, firing at more guards as they approached. \n\n* \n\nIn the Caitian shuttle, C'Rash ignored her many cuts and the broken ribs she felt as she retrieved a phaser from the weapons locker. Damn, damn, damn it! She was supposed to be a trained Starfleet Security officer! And she was caught off-guard like a rank amateur! And now her uncle was gonna get himself killed! \n\nAnother Captain lost, because of her. \n\nBut she pushed aside thoughts of the late Captain Myrick from a prior assignment, needing to focus on the here and now. She returned to the door as Rrori reported, \"The children! He's sending them round now!\" \n\nShe nodded. \"Get back to the flight deck, get ready to take off!\" Then she stepped back out, waving to the approaching children as she aimed the rifle and fired in the direction of the villa, at several figures that appeared by the windows and along the perimeter walls, driving them back out of sight. And all the while, searching for Hrelle- he couldn't survive out here, he wasn't built for fighting anymore. \n\nThen she saw him. \n\nHe moved, far more quickly and agilely than she would have expected, shooting opponents and dodging their own shots. And when they were too close for weapons, he broke limbs, shattered kneecaps, tore flesh open with his claws, his fangs, his own clothes tearing as he descended into pure Fury. He was a quadrant away from the warm, funny man she knew, the one who danced and sang badly and made jokes and who everyone liked \u2013 but one she would never have turned to for something like this, despite his reputation. \n\nThis was the Beast before her. And he scared her. \n\nStill, she covered him as best she could with the rifle, shouting, \"CAPTAIN! COME BACK! THE KIDS ARE ALL ONBOARD!\" \n\nBut he moved out, out of sight and into the darkness, some guards pursuing him \u2013 others gathering onto the field, various larger weapons raised, demanding her attention. She fired on them to keep them back, then tried her dermal communicator. \"Captain! Where are you going?\" \n\nBut he didn't respond, and she suspected her own communicator was damaged when she was flung out the window; no wonder combadges were preferred. Damn it, Uncle Esek, where did you go- \n\n\"Hold your fire!\" \n\nShe stopped, as she saw Dissak and Khersaq emerge onto the field with their surviving guards, the Orion calling out again, \"Starfleet! You won't get away! We'll shoot you down before you get a hundred metres up! Up on the wall, there's a THX-1138 Plasma Cannon aimed at you right now! It cost a small fortune, but it was worth it! And it'd turn that ship and everything and everyone in it into flaming scrap and ash! Those poor little children will suffer and die!\" \n\n\"You think that's a worse fate than what you had planned for them, you son of a bitch?\" C'Rash shouted back at him. \n\nDissak held out his arms. \"Of course! They would be treated well by my clients! Exotic pets have value here!\" He smiled. \"Especially the pretty ones.\" \n\nC'Rash hissed. \"You stroking bastard!\" \n\nHe laughed now, glancing at his equally-amused Klingon bodyguard. \"Maybe... but I'm the stroking bastard who's holding all the cards. Even if you escaped from us, you would soon be caught. We control the Imperium, which means we control the planet! Wouldn't it be better for you, for the poor children, for everyone, if you just surrendered?\" \n\nShe cursed \u2013 but she knew that, as terrible as it was, he was right. They couldn't get away without being fired upon, and would end up destroyed or damaged, forcing them to crash land. She glanced back inside, where the children were huddled together, crying, terrified. She looked back out again. \"You're not getting your filthy hands on them!\" \n\nDissak smiled. \"Well, I suppose that is your decision, since you must in charge, now that your Captain has run away like the coward he apparently is; what's the old expression warning you about never meeting your heroes? \n\nStill, don't be so hasty to throw away all those poor, precious little lives in your hands. I can't guarantee you'll survive what Mr Khersaq and his men will do to you because of all the trouble you've caused me tonight, but I promise you, we'll take good care of the little darlings-\" \n\n\"I AM THE GOD OF HELLFIRE!\" \n\nAll eyes at the ship and on the field turned to the one who roared. \n\nIt was Hrelle, standing on the nearest wall, the THX-1138 plasma cannon torn from its turret and its operators, and now in his hands and aimed towards Dissak and his men as he promised, \"AND I BRING YOU...\" \n\nHe let loose. \n\nAn orange-red beam of superheated plasma poured down on the men, striking grass and clothes and igniting them, striking bodies and making them explode from the high temperature thermodynamics of the ionised gas, as the liquid in the tissues instantly turned to steam and expanded outwards, bones becoming ash before vaporising entirely. \n\nThe sounds of destruction overwhelmed their feeble cries of panic, though Khersaq managed to raise his disruptor and begin to make some macho warrior's call, before the beam enveloped and consumed him utterly. \n\nGuards at the outer edge of the group tried to flee into the nearby trees, but were caught as Hrelle moved the beam in their direction, setting them and the trees alight, before raising the beam and attacking the walls of Dissak's villa and business, scattering fragments of stone and igniting the interior furnishings. \n\nC'Rash, after making sure the children couldn't see anything happening outside, watched the scene with horror, watching her uncle, her captain, a silhouette in the fires around him, roaring again with triumph at what he had wrought \u2013 before finally casting aside the gun and making his way down to the burning field. As he drew closer, he displayed injuries and exhaustion, limping before stopping, removing his torn, blood-stained tuxedo jacket and wiping his face with it. Then he cast it aside and growled, \"Inside.\" \n\nShe obeyed. \n\nOnce in and with the door closed, he called towards the flight deck. \"Any reason we're still on the ground, Mr Rrori?\" \n\nThe cadet didn't respond, except with a lurch of the ship as it ascended once more into the night sky. \n\nThen C'Rash saw the mask he put back on his face, for the benefit of the children that he now addressed. \"Okay, kids, I know it's a little crowded in here, and the trip's gonna get bumpy, but if you sit tight on the floor there, we'll get underway. Mr Sevrik: good work taking care of them, you can be my First Officer anyday.\" \n\nThe Vulcan boy nodded politely \u2013 showing pleasure only in his eyes. \n\nNow, Hrelle looked at C'Rash. \"Come on, let's get you patched up.\" \n\nStill feeling stunned by what she had witnessed, she swallowed and shook her head. \"I'll- I'll be okay-\" \n\n\"That's not a good example to set the cubs.\" Hrelle retrieved the medical kit, setting it on the floor and opening it, and then kneeling beside it. \"Who wants to learn about First Aid? Come on, show of hands.\" \n\nSeveral children, sitting cross-legged facing them, raised their hands. \n\n\"Good, good,\" he replied, beaming, motioning for C'Rash to kneel beside him as he lifted up a tricorder. \"Now I'll show you some basic First Aid skills. Now, the term 'First Aid' refers to the fact that you may be providing the first medical aid that someone might need before they're seen by a proper medical specialist. And the first thing to do is to work out what is wrong.\" He looked at them. \"Anyone know how we can do that?\" \n\nA Tellarite girl raised a hand. \"The tricorder?\" \n\n\"Yes! But don't forget to also ask the person who's been hurt as well, if they can speak. And also use your eyes, because sometimes, someone can be injured and they don't even know it, or they'll be in shock...\" \n\nAnd C'Rash watched it all unfold: the events of tonight cast aside by the children, desperately seeking normalcy again through a lesson from an adult they can trust \u2013 and by an adult, desperately seeking normalcy again through a lesson he could give to cubs. \n\n* \n\nOnce C'Rash was patched up, Hrelle had her show the children the ship's replicator, before heading for the flight deck, noting that they had already reached orbit and were heading out of the system. He patted the white-furred cadet on the shoulder as he took the co-pilot's seat. \"Hello again, Mr Rrori. I trust eight days alone here with a database of adult vivids hasn't exhausted your right hand?\" \n\n\"Um, no, Sir. Are you, um, okay, Sir?\" \n\n\"Yes. Why do you ask?\" \n\nThe Caitian youth glanced at him. \"I, ah, saw what happened out there-\" \n\n\"I'm fine, Cadet, but thank you for asking. What's our status?\" \n\nRrori's furred hands moved over the controls. \"I'm detecting alerts from their nearby ships. I suspect they've been informed of our rather... fiery departure.\" After a pause he announced, \"Plotting an evasive course out of the system.\" \n\n\"Belay that. Direct course out.\" \n\nHe looked to Hrelle. \"Sir, that will take us along the most regulated routes- the Skarosian ships will easily intercept us.\" \n\n\"Do it.\" Meanwhile he moved his fingers over the controls and announced, \"Computer: Captain Esek Hrelle, Authorisation Ma'Sala 11361.\" \n\nThe computer replied, \"Authorisation Confirmed.\" \n\nHrelle nodded in satisfaction. \"Activate Prowl.\" \n\nSuddenly the lights in the flight deck changed, darkened. A new display appeared beside Hrelle, identifying something enveloping the outline of their ship. \n\n\"Sir, what's happening?\" \n\n\"Nothing's happening, Cadet. You didn't hear anything I just said, or saw anything I just did. Proceed on the direct course, maximum warp. What are those Skarosian patrols doing now?\" \n\nRrori checked his readings, his confusion growing by the second. \"They... they were on an intercept course with us. But now they've stopped, as if...\" He looked at his captain again. \"Sir... do we have a cloaking device onboard?\" \n\nHrelle never looked back at him. \"The use of cloaking devices by Federation vessels is illegal, Cadet, as per the Treaty of Algeron. Didn't they teach you that at the Academy?\" \n\n\"Well, of course, Sir, but-\" \n\n\"Are you suggesting that the Caitian Planetary Navy, even with its history of facing superior hostile forces over the centuries, would secretly employ its own equivalent of a cloaking device on certain ships for certain missions?\" \n\n\"Well, of course not, Sir, but that display you've just activated-\" \n\n\"What display?\" \n\n\"Sir-\" \n\nHrelle shot him a look and raised his voice. \"Mother's Cubs, Cadet, do I need to relieve you of duty to protect you from becoming a potential accomplice?\" \n\n\"N-No, Sir-\" \n\n\"Then keep your eyes on the road!\" Hrelle ground his teeth. \"I want to get home. I want to see my wife, and make sure she and the cub are alright. I've wasted enough time out here.\" \n\n\"Yes, Sir. Velocity at Warp 9.5, we'll be out of the system in 5 hours.\" \n\nHrelle nodded. \"Good.\" Hrelle rose. \"I'm gonna go check on the children, get their names so we can contact their families. Then I need to clean myself up.\" \n\n* \n\nOn the Surefoot bridge, T'Varik found herself steepling her fingers together on her lap in thought. \"Status, Lt Neheru?\" \n\nThe Kelpien examined his board. \"No change- wait. We are now detecting alert activity on Skarosian Imperial channels.\" \n\nShe nodded. \"Tactical status, Ms Nemm?\" \n\nNeraxis' fingers moved over her station panels. \"Skarosian vessels are beginning to veer off their patrol routes... no discernible overall patterns detected.\" \n\n\"Which suggests?\" the Vulcan prompted. \n\nThe Bolian's broad blue face darkened as she considered the question. \"Something unexpected's happened. There's confusion, no coordinated effort agreed upon yet.\" \n\nT'Varik nodded. \"I concur. Continue the exercise.\" \n\n\"This is farcical!\" \n\nAll eyes turned to Eydiir, sitting at the Auxiliary Science station beside Kit as expected for her role as Medical cadet. T'Varik focused on her. \"Is there a problem, Cadet?\" \n\nThe muscular, dark-skinned Capellan girl faced her defiantly, angrily. \"We all know this is no exercise, no test of engines or scanners! We are here because our Captain and his party are in that system! Perhaps in trouble, needing our help! Where is the honour, the honesty, in not being straightforward, in hiding our intentions? Admiral Tattok should have just told us to go in and-\" \n\n\"And do what, Cadet? Invade the sovereign space of a non-aligned power? To spark an interstellar incident? To provoke war? If Captain Hrelle and the others were here, would they agree that their lives were worth all that, and potentially more?\" \n\nEydiir's jaw tightened. \"No, Commander.\" \n\nT'Varik's expression softened. \"In medicine, the most 'straightforward' way to remove a tumour might be to simply cut straight through the tissue in the way and it to remove it, but then one might spend far more time and effort managing the damage you caused. \n\nStarfleet, among its many other roles, must also operate as diplomats. And diplomats are rarely blunt about their actions and intentions; they must employ subterfuge, to protect themselves and those they represent. Not that we are doing anything like that today, of course.\" \n\nThe Capellan grunted, grudgingly sated by the explanation. \"Of course.\" \n\nThen T'Varik's combadge chirped. \"Commander, this is Sickbay. Can you come down here, please? You're needed.\" \n\nThe Vulcan rose. \"Acknowledged.\" She ignored the curious, fearful looks of the cadets around her to nod at Neheru. \"You have the Bridge, Lieutenant. Contact me if there are any changes.\" \n\n* \n\nThey found emergency blankets and pillows in the stores, laying them all out of the floor in the aft of the shuttle, maing it seem like one of the slumber parties Sasha used to hold. Hrelle and C'Rash spoke with them, gathered their names and their stories: of the Beltane being attacked, their being shot out into a lifeboat, but being being picked up by the Orions, the adult who had accompanied them... being taken away, not to be seen again. ",
        "And as they recounted the events, and relived them, some began to cry. And Hrelle would pick them up and put them in his arms, holding them and assuring them that everything was going to be okay now. \n\nAnd he watched C'Rash, a mix of emotions on her own face as she tried to help the children, being a surrogate big sister \u2013 but occasionally glancing at him with a curious \u2013 and fearful? \u2013 expression. He suspected he knew the reason why, but now wasn't the time for discussing it with her. \n\nJust before the five hours had passed, Rrori called back, \"Sir! Come up here, now please!\" \n\nReluctantly he set the sleeping child down on the floor with the others and proceeded. \"What is it, Cadet?\" \n\nHe nodded. \"We have Skarosian patrols coming in! I think that cloaking device we don't have might have burned out or something!\" \n\nHrelle took his seat again, keying in the subspace communicator commands to flood all local channels. \"Time to blast some Bowie...\" Seconds later, the flight deck, and the surrounding subspace, filled with the sounds of musical instruments, and a familiar, charismatic voice declaring, \"Let's dance / Put on your red shoes and dance the blues...\" \n\nC'Rash joined them on the flight deck. \"Are you playing that idiotic music again?\" \n\n\"Do you want your furry ass kicked, Lieutenant? Because knocking Bowie \u2013 my best mate \u2013 is how you get your ass kicked.\" To Rrori he ordered, \"Now's the time to take evasive action.\" He turned and ordered, \"Computer: Deactivate Prowl, divert all power to engines and shields.\" He pulled up a tactical display of the pursuing Skarosian patrol vessels. \"Mr Rrori, plot a course along... here...\" \n\nThe younger Caitian frowned at that. \"That will allow them to group together, form a more effective attack pattern. And unless we have some weapons to go with the cloaking device we don't have-\" \n\n\"Lt C'Rash, is the trilithium still secure in the hold?\" \n\n\"Yes, Sir, but-\" \n\n\"Detach the transporter inhibitor from its casing, and on my command, beam it out to...\" He paused and called up a new reading. \"These coordinates.\" \n\n\"You're just dumping the trilithium?\" \n\n\"Well, it's too volatile to keep onboard with all these dangerous moves we're making, especially with a ship full of cubs. We have to get rid of it, for Health and Safety reasons.\" \n\nC'Rash stared at him in disbelief \u2013 then got it. \"On my way, Sir!\" Moments later, she called back to them. \"Ready, Sir!\" \n\n\"On my mark,\" he replied calmly, \"Ready... steady...NOW!\" \n\nHrelle brought up a rear tactical display, saw the three Skarosian patrol vessels as floating circles like fireflies. \n\nThen one firefly seemingly went nova, its shockwaves catching the other two in its explosive wake. \n\n\"It worked!\" Rrori exclaimed needlessly. \n\n\"Yes,\" Hrelle replied simply. \"Now, let's get back on that direct course again. And keep an eye out for any Bowie fans out here.\" \n\n* \n\n\"Explosion detected inside the Oort Belt of the system!\" Neraxis announced loudly. \"Trilithium-based!\" \n\nNeheru gripped the arms of the Captain's chair. \"Scan that immediate area.\" \n\nSeconds later, Eydiir, who had taken Neheru's place at Ops, reported, \"I'm getting a subspace signal, audio only.\" \n\n\"Let's hear it.\" \n\nThe Bridge filled with a familiar song and voice: \"If you say run, I'll run with you / And if you say hide, we'll hide...\" \n\n\"It's the Captain!\" Jonas Ostrow declared from Engineering, grinning. \n\n\"It does not sound like him,\" Neheru quipped, smirking to himself at his little joke. \"Contact the Firetail and inform them... of the source of the music, and ask them if they want to help us investigate that area.\" \n\n* \n\nThe children had fallen back asleep again; Hrelle, sitting in a nearby chair, wished he could have replicated some fresh clothes for himself, and felt like doing the same, attributing it to the subtle vibrations of their ship moving at high warp.  \n\nC'Rash joined him, bringing with her a steaming mug of raktajino from the replicator, and took a seat opposite him. \"You want one, Sir?\" \n\nHe shook his head, talking softly. \"I never asked you if you obtained the information from Dissak.\" \n\nShe nodded. \"The Cardassians are looking at Starbase 220, Banaris Sector.\" \n\nHe frowned. \"That... doesn't make any sense. It's certainly important, it has a major port and shipyard, but it's a hundred light-years away from the Border. There's no way a Cardassian invasion could reach it without being intercepted by Starfleet along the way.\" \n\n\"Maybe they'll be equipping a terrorist attack, to strike from within? Dissak seemed sincere enough about it, and the data appeared genuine. Unless the Cardassians paid him to feed us false information? I wouldn't put it past them.\" \n\n\"Then they should have picked a more plausible location for a false flag operation.\" He shrugged. \"Ah well, that's for Starfleet Intelligence to worry about. Not us.\" \n\nShe nodded, the mug in her hands drunk of its warmth if not its contents. Finally, awkwardly, she commented, \"You pulled quite a number on Dissak and his men back there.\" \n\nHe stared back at her soberly. \"I didn't 'pull a number'. I killed thirty-eight people. Maybe more, if there were people in the buildings I razed. \n\nAnd in answer to your other, inevitable questions: Yes, I know what I did. Yes, that was my Beast you saw. Yes, their deaths will cling to my conscience for the rest of my life, like all the others still do.\" He leaned forward, took her mug and sipped at the Klingon coffee, wincing at the bitterness. \"And yes, I would do it all over again if I had to.\" \n\nHe looked to the children. \"I could say that I was simply taking all steps necessary to protect the lives of Federation citizens and my crew. And it'd be true. But it wouldn't be the whole truth. I enjoyed killing all those men. Because I knew what they would have done to these cubs. Because I know what was done to me.\" \n\nHe looked back at C'Rash. \"You joked tonight about my reliving my 'Glory Days'.\" \n\nHer expression narrowed with embarrassment. \"Captain, I-\" \n\n\"Let me tell you about those 'Glory Days'. I had already been tortured, mutilated and broken by the time I was sold to the Orion Matchmaster Surinh Dag. But I still had something like pride left in me then. Because I thought that after a year working in a Breen asteroid mine I could face anything. \n\nI was wrong. \n\nEven as my new master built up my body, addicted me to aggression drugs and put pain implants in me, he stripped away my decency. All thoughts about reverence for life and mercy and compassion were forcibly ripped from me, and in the effort to stay alive, to survive and just not stop feeling pain... I let it happen. I embraced the Beast, because it gave me the illusion of power and strength and control over my own life. \n\nI have had time, and life, and soul, taken from me, and molded and forged to make the Beast, and I will never get rid of him.\" He paused while he drank again. \"But... If I can't get rid of him, I can at least use him for good.\" \n\nThen he quickly set aside the mug as pain gripped him. \n\nC'Rash leaned forward. \"Sir- what's wrong-\" \n\nHe shushed her, but urged breathlessly. \"Medical kit- 100 milligrams- metrazene- hurry-\" \n\nQuickly she rose and complied, preparing a hypospray and administering the drug to his neck on his order. Moments later, he leaned back in his chair, looking visibly relieved as he whispered, \"Thanks.\" \n\n\"What in the Seven Hells was that about?\" \n\nHe didn't answer immediately, either to gather his strength or out of general reluctance. \"Heart arrhythmia; my ticker has taken a lot of punishment over the years.\" He patted his belly. \"All the shuris snacks I've downed since coming back from slavery haven't helped, I'm sure.\" \n\n\"Does Aunt Kami know?\" \n\n\"No.\" He looked up at her. \"Nor will she, is that understood? She has more important things to focus on now.\" He rose to his feet, swaying a little until she caught him by the arm. \"I'm working on it myself, trying to lose some of this weight-\" \n\n\"Try harder,\" she urged. \"There's too many people who need you. Myself included, you fat bastard.\" Then she amended, \"I mean, Sir.\" \n\nHe looked at her and smiled. \n\nThen Rrori called back to them from the flight deck. \"Sir! We're exiting the system, and the Surefoot and Firetail are waiting for us! And they wanted you to know that the Counselor went into labour several hours ago!\" \n\nHe beamed. \"She did?\" Then the smile dropped. \"SHE DID? Oh damn, I think I need more metrazene. Damn. Damn, shit, damn, piss, fu-\" Then, when he saw that some of the children had woken up and were listening, he turned to them, raised a finger and added, \"-Are just some of the words you shouldn't use in polite company.\" \n\n* \n\nHrelle felt a little guilty leaving C'Rash and Rrori to dock with the Surefoot to seeing to the disembarkation of the rescued children, while he was beamed directly to Sickbay. That guilt vanished like water on the sun as he moved to the rear of the Suite, catching scents both familiar \u2013 Kami, Sasha, T'Varik, Dr Ling \u2013 and unfamiliar. \"Kami? Kami, darling, I'm so, so sorry-\" \n\n\"Shush,\" she scolded him, looking tired but still smiling, the bundle in her arms resting against her chest. \"You'll wake your son.\" \n\nHe stopped and stared in utter wonder and disbelief. Nearby, Dr Shalom noted, \"There had been complications, and we had to perform local surgery, but everything went perfectly well, mother and cub are fine and...\" She smiled. \"And you're not listening to a word I'm saying.\" \n\nHrelle drew closer, feeling Sasha's hand on his shoulder as he leaned against the side of the biobed, reaching up and touching Kami's cheek, softly repeating, \"I'm sorry-\" \n\nShe smiled \u2013 but then sniffed and frowned, alarm crossing her features as she sensed the change in his feelings, the one he was desperate to suppress and not let spoil this wonderful moment. \"What happened? What did you do?\" \n\n\"We... we found some children... they were...\" He blinked and turned his head slightly. \"Commander, the SS Beltane was the victim of an Orion slaver raid. They abducted fourteen children. We found them on Skaros. Their families need to be contacted, right away. Top Priority.\" \n\n\"I will deal with it immediately, Sir,\" the Vulcan promised, departing. \n\nKami smiled again. \"Well? Aren't you going to pick him up? My arms are tired.\" \n\nHrelle grinned and reached out, slowly, carefully easing his hands under his son's head and back. Misha Hrelle's fur was immensely fine, and coloured mahogany, his ears pointed and his cheeks chubby. His eyes were closed, but his little tail and dark nose at the tip of a stubby snout twitched as his father drew him closer, letting the infant cub rest against his chest as he breathed in the new scent. \"Hello, my little Warrior Prince. It's your Dad here.\" \n\nMisha began purring. \n\nHrelle began weeping with pure, unbridled joy. \n\n* \n\n\"USS Surefoot-A, Captain's Log, Stardate 47451.8, Captain Esek Hrelle, commanding: the next of kin of the children we found on Skaros have been contacted, and Starfleet vessels are now coordinating to provide escorts for the children to be returned to their families at utmost speed. I wish to commend the actions and maturity of Master Sevrik, whose assistance with his fellow captives was paramount in their rescue from captivity. He is a credit to his family. They all are. And I hope they will be able to put this terrible experience behind them and go on to lead the lives they deserve. \n\nStarfleet Intelligence has questioned my actions in killing Lur Dissak, a potential source of information for them on Skaros, but they're not too vocal in their protests, given Dissak's other activities. I don't give a damn what they think \u2013 and I want that in the official record. \n\nBesides, I have other concerns now...\" \n\n* \n\n\"Go on, T'Varik. You're his godmother. Take him for a while, he needs to recognise your scent if you're gonna be babysitting him for us.\" \n\nThe Vulcan eyed Kami, since released from Sickbay and back on her feet. \"I... would not wish to disturb him if he's sleeping.\" \n\nSasha, sitting nearby, grinned. \"Are you scared to pick him up, Commander?\" \n\n\"I will not dignify that with a reply, Ensign.\" \n\n\"And yet you just did.\" \n\n\"Go on, T'Varik,\" Hrelle urged, smiling too. \n\nThe Vulcan finally reached out and accepted the bundle, carefully moving Misha to lie against her right breast, his head resting on her shoulder, her hand supporting his rear, one thumb curled against the base of his tail. \"He is surprisingly heavy for his size.\" \n\n\"Are you saying my cub's fat?\" Kami teased. \"Blame that on all the male genes on both sides.\" \n\n\"He is purring,\" T'Varik also noted. \"It is a rather... hypnotic sensation.\" She frowned slightly. \"Oh.\" \n\n\"'Oh'?\" Kami frowned too. \"What's wrong? What is it?\" \n\n\"Nothing is wrong. He appears to have an erection.\" \n\nSasha laughed. \"Seriously? At that age?\" \n\n\"It's not uncommon,\" Kami pointed out to the girl. \"Especially if he's the product of your father's Amazing Sperm.\" \n\n\"Eeeuww.\" \n\n\"That's my cub!\" Hrelle declared, grinning. \n\n* \n\nEPILOGUE: \n\nImperial Palace, Planet Skaros: \n\nThe conference room in the Imperial Palace was sealed for the meeting: a half-dozen men and women from as many races, sat around the polished stone hexagonal table, the furnishings simple, archaic, but the devices they held and read from modern. \n\nAt one side of the table, facing the tall twin doors, an older pale human of advanced years, lean and with straw-coloured hair and beard and in a plain black suit, stared at the holographic footage conjured at the centre of the table, images of the chaos at Dissak's estate. \"How dreadful, Lur. We are frankly amazed that you survived. It is most fortunate.\" \n\nSitting across from him, Dissak gripped the edge of the table with his good hand. The right side of his head was encased in a silver-grey dermal regenerative mesh, and the anger and horror reflected well enough from his one good eye. \"Fortunate? You call this fortunate?\" He pointed to his damaged parts. \n\n\"Of course, Orion,\" pointed out an older Andorian with a drooping antenna. \"Don't you believe it fortunate that you survived to tell your friends about what happened?\" \n\nDissak grunted, looking around sourly. \"'Friends'. Friends would not have allowed such a vicious and unprovoked attack like this to take place in the first place-\" \n\n\"Mister Dissak,\" said the bearded human, \"Do you really wish to continue with this pointless deception?\" He reached out and froze one image on the screen, that of a Caitian male, his arm around a guard's neck. \n\n\"Deception?\" Dissak echoed. \"Mr Giger, I- I don't know what you're talking about-\" \n\n\"Please,\" the man cut in, green eyes narrowing, \"Spare yourself some small measure of dignity. Do you think that anything gets past the Bel-Zon? Do you think we did not have operatives of our own working in your employ, monitoring your activities? Do you think we could not access your computer to run audit trails?\" \n\nHe leaned in, peering through the holoimage, as if seeing Dissak through the Caitian's eyes. \"We know you contacted Starfleet to sell them back the information you sold the Obsidian Order. You did this without the sanction of the Hexad. Presumably so as to keep all the profits to yourself, rather than provide the required tithe to us.\" \n\nDissak began to sweat. \"N-No, Simon- Mr Giger- my assistant- he should have provided the paperwork to you-\" \n\n\"You are a part of this Hexad,\" a thin, scarred Tellarite reminded him, black beady eyes fixed with scorn on him. \"Or at least, you were.\" \n\n\"It was part and parcel of the agreement the six of us reached when we formed the Hexad and rebuilt the Bel-Zon here,\" Giger added. \"All of our activities are cleared by the group, to prevent surprises such as what you experienced, and a portion of all profits made are fed back into our treasury. You failed in both. As a result, the local Skarosian government became most concerned about offworlder activity, especially with the loss of three patrol vessels at the edge of the system. The cost of damage control was most considerable.\" \n\n\"We got a sweet deal going on here, Dissak,\" a fat Bolian sneered. \"Holy Hraxor, we have our own bloody moon to cultivate Vraxoin! You think we could get away with that in Federation territory?\" \n\n\"Then there's the children,\" growled a Klingon woman with a wicked scar running down the right side of her face from her cranial ridges. \"Federation children you secretly purchased from the Orion Markets and brought here to sell again! You thieving petaQ, I manage the Sentient Trafficking for the Bel-Zon!\" \n\n\"N-No, Mvulkoh, they were- they were for my own personal use-\" \n\n\"More lies,\" the Andorian glowered. \"We found the recording equipment in your lower levels, the arrangements for the secret auction.\" \n\n\"And as if all of that was not heinous enough,\" Giger continued, rising to his feet, and pointing at the image of the Caitian in front of them all. \"You brought this man to our doorstep, made him aware of our presence here.\" \n\nDissak paled a light green. \"Esek Hrelle? The Beast? So what?\" \n\nGiger glared hard as he leaned forward, hands flat on the stone table. \"When my late brother Alexander ran the previous incarnation of the Bel-Zon, Captain Esek Hrelle was the target of a Vendetta Contract taken out by one of your people; that is how Hrelle ended up a slave, a fighter, your so-called Beast.\" \n\nThen he straightened up. \"Since his escape from captivity, we have chosen to focus on building our organisation on Skaros, and to keeping an eye on him \u2013 thanks to an operative we have on the Surefoot. Now, thanks to your actions, we might have to finish him off before he becomes wise to us-\" \n\nA warning beep from Giger's PADD made him look to the others. \"He's on his way here.\" \n\nThe six of them rose and walked to the centre of the room facing the tall twin doors, dropping to one knee. The doors were pushed open, and a dozen huge armed and armoured Skarosians entered, flanking out wide and allowing a single small figure to enter, preceding by crawling supplicants who quickly and efficiently laid out special carpeted panels so the figure's divine feet would not to touch the same floor as mere mortals. \n\nThe figure itself was short, hairless, with wide round eyes and the scaled, segmented face of his people, and blue and yellow silk clothes that swished softly as he walked, stopping before the six figures in the room. \n\nGiger knew to keep his head bowed. \"Imperium! You grace us with your presence once again! Thank you for this honour!\" \n\nSonoda, the Imperium, the Living God and Light and Life of Skaros, regarded him. \"You may look at me.\" \n\nGiger raised his head, smiling politely. \"And how are you today, Your Excellency?\" \n\nSonoda offered a broad smile, and a hint of the twelve-year-old boy behind the divine title. \"I used that Klingon blade you got me! I used it on a prisoner, a fat man, and the blade went right into his gut! And when I pulled it out again, the curved bits on the blade pulled out some of his intestines!\" \n\nGiger chuckled broadly, deliberately. \"Excellent, Imperium! I wish I'd been there to witness it!\" \n\nSonoda nodded eagerly. \"He had said bad things about me. He won't be doing that again.\" \n\n\"He most certainly will not. All those who disrespect you should suffer like that-\" \n\n\"What have you got me today?\" the boy asked expectantly. \n\nGiger smiled and nodded to Thyluk, who rose and collected a brown box, returning with it as Giger explained, \"This is a very special and rare weapon.\" He opened the box and drew from it a black and silver L-shaped weapon. \"A Varon-T Disruptor. The beam it fires tears apart an object at the molecular level, slowly and, I am told, most painfully.\" ",
        "Sonoda's eyes lit up as he snatched it from Giger. \"I want to use it on someone!\" \n\n\"Of course, Imperium.\" He pointed at Dissak. \"Use it on him.\" \n\nDissak looked to him, confused. \"Simon, what are you-\" \n\n\"He was most disrespectful to you,\" Giger informed Sonoda. \"Just before you arrived.\" \n\nDissak stared at him in disbelief, before looking to Sonoda. \"N-No, I didn't- he's lying, I swear-\" \n\nSonoda's gaze fixed on him. \n\n\"Just aim and fire, Imperium,\" Giger assured him. \n\nDissak rose to his feet, holding out his good hand, panicking. \"No, wait- please-\" \n\nThe Imperium fired on him without hesitation. \n\nDissak dropped back to his knees, face awash with horror and agony as a crimson beam blossomed in his belly, burning its way outward in all directions. He actually looked down and watched as it consumed him, before offering Sonoda a final, futile plea for mercy. \n\nThen there was only the echo of his last cry. \n\nSonoda laughed with delight. \"That was GREAT!\" \n\nGiger applauded. \"Excellent shot, Imperium! Superlative marksmanship!\" \n\nThe boy gripped the disruptor tighter, looking around. \"I want to shoot someone else now!\" \n\n\"Of course, of course... but first, I was hoping to humbly ask for your help in dealing with another who has disrespected you.\" \n\nSonoda's face sobered. \"Who is it? I'll kill them too!\" \n\n\"The one responsible is on a starship, a Starfleet vessel. He thinks he can get away with mocking you. I would like the honour of punishing him... with the help of some of your Vlathi assassins.\" \n\nSonoda's eyes brightened again. \"Yes! Good idea!\" He glanced behind him. \"Summon Marruku! NOW!\" He looked back at Giger once more. \"The Vlathi eat their victims, you know. Alive!\" \n\nGiger nodded, seeing the leader of the Vlathi slither down the corridor towards them. \"I know, Your Excellency. And I'll think they'll have a feast with Captain Hrelle... and his family...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... BABY STEPS"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "fanfic",
        "fan fiction",
        "alien",
        "caitian",
        "starship",
        "federation",
        "orion"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-22-birthpains-1"
}