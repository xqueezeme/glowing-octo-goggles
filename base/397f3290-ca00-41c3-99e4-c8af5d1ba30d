{
    "title": "My Only Talent Ch. 16",
    "pages": [
        "Note: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\n\n\nSaturday dawned cool and clear, perfect weather for football, all though it would warm up later in the afternoon. The football game would feel more like an intermission to the events planned for today. The game time had been moved up to 11AM to accommodate the TV network's schedule, which made for a very early start to the day for the forty acres football fan. I walked over to Lara's apartment to meet her, so we could walk to the stadium together. We had an early appointment at the breakfast buffet in the north end zone suite while the majority of her father's guests took a tour guided by some of the ESU foundation big wigs, who would work the guests for donations for everything from named buildings and endowed chairs for professors down to nearby parking spaced on game days and engraved patio pavers. \n\nWhen Lara opened the door she was an absolute vision: she had begun to look better and better all semester, due, I modestly assumed, to being properly loved and adored every week (along with the occasional whipping to keep her stimulated), and she absolute sparkled with energy and vitality. She had upgraded from her normal super hot coed football game outfit to a highly sophisticated hot rich girl costume, something with the cut of an expensive basic black dress but realized as a form fitting orange and white sweater dress with a culottes style micro short skirt and high rise burnt orange ostrich leather boots. She added a low hanging bespoke diamond necklace from Neiman Marcus that clung to her plunging neckline and somehow managed to say 'understated major wealth' while also saying 'overstated major breasts'. If she was out in the stands in the sun, the network TV cameras would have never left her alone for a second, but she would be in closed areas much of the time. I doubted anyone even noticed me walking next to her, but lots of heads swiveled as she went by, and I heard popping and dopplering Suzies from all directions as we walked toward the stadium. I was certain my Suzie receiver was far more sensitive than ever before, and continued to improve. \n\n\"You look amazing, Lara! Is that outfit just for this occasion?\" I began.\n\n\"Yep! I might wear it again to something else, though. It seems to be drawing some attention!\" she smiled. Then she smirked, turning to grab my arm and speak right into my ear, \"Do you think it could get me invited to a dorm room and fucked like an animal?\"\n\nI gulped, but before I could respond, she said, \"Suzanne just won't shut up about that! I might be jealous. She keeps talking about how she 'just loves the smell of stale pizza in the morning' like that old Vietnam War movie we saw at the film festival, and then she giggles! She said you made her sneeze five times. I have only been able to make her sneeze like that twice, when she had very powerful squirting orgasms! She does taste extra good when that happens, doesn't she?\"\n\nI sensed her crafty Suzie signal sparking, seemingly looking to challenge me. But I thought I knew that she really wanted some attention, and what kind of attention she craved. I leaned into her and said \"You'll get fucked exactly how, when and where I want, slut! You are mine! Mine alone! Do you read me?\"\n\nShe smiled that wonderful, tight little smile and her Suzie flamed with excitement.\n\n\"Tonight I may take you down to the laundry room in my dorm and tie you out on one of the folding tables, whip you with a coat hanger until your ass is bright red, and then fuck you in three different orifices! Not too many people do their laundry on Saturday nights, but the ones who do will get quite an eyeful!\"\n\nHer Suzie flamed with humiliation and shock, which her luscious libido and imagination quickly converted to excitement. Burning, rabid excitement, accompanied by a strong Suzie carrier, well modulated with images of her ass in the air, whipped red and repeatedly penetrated and then covered with come. My come. She was so my kind of girl. I looked sideways at her and that incredible little smile was spread across her face, and her nipples were threatening to push through the cashmere sweater top. Oh happy day, or night, or anytime she is around. \n\nWe got to the stadium even before Bevo and the band did, and headed up to the suite behind the north end zone. I needed sustenance to make it through the day and hopefully arduous night with Lara and later Millie, too. The guests that did not go on the tour seemed much more interested in getting a Bloody Mary than a breakfast taco, and that gave me a clear shot at the calories. Habanero sauce and fresh squeezed orange juice complemented the tacos perfectly, and soon even my appetite as satiated. \n\nI was starting to wonder about that, too, because I was eating many more calories than I ever did in high school, even during the height of tennis season, but I still felt hungry all the time and was not gaining any weight. Every day I woke up starving, and even if I ate a huge carbohydrate loaded breakfast on MWF days because I knew I would miss lunch to run, my stomach growled so loud in the afternoons before dinner that people would look at me funny. Maybe it was just the stimulation of daydreaming about the wonderful women I was keeping company with. I guess that was why I also never masturbated anymore. I saved it up for the weekend, and loved the positive comments from my girls about the volume of my first ejaculation on Friday nights. \n\nThe tour group was soon due to arrive back at the suite, so Lara and I departed for our assigned outpost behind the Megatron video screen near the south end zone. Marie Oroterrassier and her business development minions had efficiently distributed invitations and admission and drink tickets to the high roller's lounge to her target audience that wouldn't fit in the suite, and we were there to meet, greet, and engage, all for the glory of the American insurance business. Many of the targets had done business with old line Europe companies for generations, and Lara's dad had to find a way to overcome that inertia to break into the world market. There were also lots of people that were just ESU fans or their guests, with no connection to Lara's dad. The first guy to arrive, even before the tour returned, was a stuffy British type in his eighties Marie was pissed at being dissed and resigned to working the south end zone, while Lara's dad and Lillian Gush, his new girlfriend, held court in the corporate suite in the north end zone. I had not been in range of Marie for some time, and I was now detecting some unusual Suzie signal activity from her, but it was unlike anything I had encountered before. She used to be sending for Lara's dad, but with a strange hardness and laser like focus, hovering near him an interposing herself between him and other women like she was guarding him on the basketball court. Now that she was separated from him and he was with Lillian, Marie was sending some strong Suzie, but not for me or anyone else specific, just sort of radiating lust. But it did not interfere with her efficiently working the crowd. Steadman Cracker, her vaguely effeminate assistant, hovered around her fetching drinks, food, laughing strangely, and producing business cards for her to give to selected targets. It was funny, but I could almost sense a little Suzie signal blip when she spotted someone she recognized as a potential customer. Maybe she was sublimating her sex drive to improve her dedication to targeting her business prey? I found it was almost like strong and medium Suzie: strong for clear targets with a good book of business that she wanted to close today, and medium Suzie for prospects that could prove lucrative later. \n\nThe British guy elicited no response from Marie, who immediately moved on the other targets. I decided to practice my bullshitting skills, as the UDP guys termed it, and introduced myself.\n\n\"Hello, I'm Robbie Roberts\" \n\nHe looked at me with mild dismay and shook my hand perfunctorily. \"Abelard Peters, here from Liverpool.\"\n\n\"Are you enjoying your visit to Texas?\"\n\n\"Yes. This is my first excursion to your charming capital, although I have come to Houston and Dallas many times in the past.\"\n\n\"Austin is very different from the rest of the state. Are you here for the race?\"\n\n\"Yes, showing the flag for the team we help sponsor, and glad handing our customers who are race fans, and trying to keep El Supremo under control.\"\n\nI wasn't sure that was. \"I am helping out someone to entertain customers. I am an ESU student. What's your line of business?\"\n\n\"Construction: shipyards, dry docks, oil platforms, port facilities, airports, even military bases. Are you an indsitrial? What business are you helping with?\"\n\n\"Insurance, something I assume your business has to have?\"\n\n\"Indeed young man! Risk management and mitigation is just as important as the actual construction.\"\n\nI mentioned one of our cases from Engineering 101, an infamous international construction litigation case that went on for years, with the legal costs easily dwarfing both the claimed damages and the original contract amount. He made one of those very British \"harrumph\" sounds. \n\nAsk for the order, a voice in my head said. \"Would you consider allowing an innovative new entrant to compete for some of your future insurance requirements?\"\n\n\"If the innovation resulted in lower costs for our firm, and the company in question truly had the assets to back the contracts, perhaps.\" He took a business card from gold holder and gave it to me.\n\nI smiled, thus having already done my business development duty for the day. \"I'll put someone in touch with you.\" I put the card away in my shirt pocket, my father having taught me to make a clear demarcation between business and social communications. Marie having been very efficient at providing tools to her minions, I deftly swiped the QR code on his guest badge with my Smartphone, which downloaded his contact information from the registration database for the invitations and uploaded it to the company CRM, along with my information and date and time stamping it. I don't think he even noticed that it happened. \"We have quite some time before the contest begins. May I show you around the stadium for a bit?\"\n\nHe said he had been a little late to catch one of the offered tours, so I gave him a walking tour. Our badges got us everywhere but the field. He was most impressed by Bevo, who was being brought in as we overlooked the south end zone, and was amused by the story of how Bevo got his name. He laughed, \"football hooligans must be universal, whatever the shape of the ball!\"\n\nI bid him adieu as I watched Lara holding forth with a group of younger guys, all obviously mesmerized by her, whatever she might be saying. I moved close enough to hear her, and took the business card from my pocket and truly looked at it for the first time. It read, \"Abelard Peters, Chairman of the Board, Tier Group.\" That's not bad for a freshman, Robbie. I opened the bizdev app, scanned the card, and made some notes on our conversation, then turned my attentions to Lara, which was not much of a challenge. As she finished her little spiel about her dad's company, everyone in the group gave her a business card, and two asked her out for a drink tonight. She looked up at me and I saw a flash of that tight little smile that I loved so much, and then she smiled and graciously declined. She was so my kind of girl.\n\nI saw a familiar face, and couldn't place him for a moment, and then I realized it was one of the corporate recruiting guys that Lillehammer had introduced me to at the distributed education meeting. By this time Lara had taken my arm, and I introduced her, stumbling at just the right point, as I had forgotten his name. But he was so dazzled by Lara he might not have remembered his name either. She got his card, I scanned it and was reminded of his name, and he and Lara chatted for a minute. I turns out he was an operations guy who was called on to do his required duty to do college recruiting every other year. \n\nI made a few more contacts, about a tenth as many as Lara did, and then it was almost time for kickoff. The corporate box being fully occupied with customers, we made our way to two seats in the upper deck with a good view of the game that Lara's dad got from a ticket broker. These seats may have been too high up for Lara to get coverage from the 'fan cam' the network used to highlight babes in the stands, but she sure got plenty of looks from other fans. The ESU band did their pre-game thing, and the teams took the field, and Old Smokey fired a powder charge with no cannon ball, the resulting boom announcing the kickoff.\n\nESU was on a roll, and the outcome was never really in doubt. At halftime, we talked with some of the people around us, and then Lara said we were probably going to miss lunch, and asked me to go down to the concession area and bring her back an order of her secret vice: stadium 'nachos'. Despite her apparent wisdom in falling for me, my faith in her taste and intelligence was momentarily shaken. \n\nAlthough they look like crispy fried tortilla strips smothered in cheese, they are certainly not. The chips are more like third rate generic ersatz imitation Fritos with some vague spots that may be food coloring to make them look toasted, that have actually been deep fried in giant industrial vats in some anonymous and unsanitary slave and child labor factory overseas and shipped by boat, staying at room temperature in shipping containers also populated by rats for months, with plasticizers and other unknown carcinogens from the plastic bags they are shipped in gradually leeching into them. I once worked a summer at the concession stand at the little league baseball park near my house, and distinctly remembered the shiny electric machine that continuously stirred and occasionally dispensed the 'hot cheese' over the 'nacho chips' sold there. It always smelled like a burning skunk that had been doused with vinegar, and a curled and decaying decal on the side of the machine proudly stated \"No Dairy Products Used\". I asked the manager of the concession stand how they could call it cheese, and he said they don't, they call it something like 'special nacho sauce' for the 'special nacho chips' and that it looks like bright yellow cheese but is actually some kind of corn syrup, whipped and spun and cooked up to look like cheese. But everyone else calls it cheese, and real cheese would be much better for you than this stuff. I remember coming back to work at a Monday night baseball game and discovering that nobody had cleaned up the concession stand after the games on Friday night, and finding several uneaten orders of these so called 'nachos' standing on the counter. Nothing had had touched them. Beetles, ants, cockroaches, rats, crows, and seagulls were all too smart to eat this stuff, but not humans. If you left this 'cheese' out for weeks, mold wouldn't even grow on it. And the so called jalape\u00f1os on top are grown with grey water and animal contaminated compost, canned in also questionable water, perhaps not really heated enough to kill the harmful bacteria and then the cans are stored in the desert for a decade before their price falls low enough to be used in this culinary crime. \n\nI managed to hand them to her without letting any of this felonious concoction actually touch my skin. She cried \"Oh! Thank you, Robbie, these are the best!\" and proceeded to scarf them down enthusiastically with much 'ooh-ing' and 'ah-ing'. This spectacle from an otherwise intelligent Hockaday honors grad that spoke three foreign languages fluently, but wouldn't try the most wonderfully prepared Menudo because it was too 'icky'. My work here is not done. I shuddered until she finished them. It was an image I would have to purge from my memory if I ever wanted to really enjoy kissing her again. \n\nThe second half of the football game went well enough to let the 2's and 3's finish out the fourth quarter, and playing time towards lettering was had by all. Not even the 1's covered kicks worth a darn, though. But ESU chalked up another victory. Lara's dad could leave his burnt orange suit in the closet this year, but next year he might have to dust that puppy off. \n\nWe headed north for the end zone suite and a post game reception where the guests could put away a few afternoon drinks before heading somewhere else for cocktails and dinner. We were invited to go to dinner with the inner circle from Lara's dad's company, where I understood they would debrief the business development work and assign follow ups to the big targets. When we arrived at the suite, it was standing room only, especially at the bar. Marie Oroterrassier worked the room expertly, as did Lara's dad and Lillian Gush. My stomach growled loudly, so I took advantage of the appetizer bar that the drinkers were leaving largely unused to get some protein in my system so I could survive until dinner, which would likely be after 8 PM. Luckily there were some tasty venison sausages, along with plenty of iced tea. I was becoming more and more concerned about my seemingly unbounded appetite. My grandmother used to kid me about having a tapeworm, but my ESU admission physical exam would have caught that, I was sure. When I began doing the strength and conditioning class next semester with Suzanne's famous exercise mentor Bob the Knob, I might have to cut back on my running mileage to keep from wasting away. \n\nAfter we said goodbye to all the reception guests, Lara and I walked over to the dorm, she wanting to the see the 'scene of the crime' that Suzanne had so vividly described to her. I texted Ralph, who had previously agreed to help me with my planned surprise for Lara that we were on the way, and that he could set our plan in motion. The lounge lizards wore the same incredulous stares that Suzanne elicited from them, some of them likely refusing to believe that Lara was actually with me. It was so early in the evening that there were very few pizza boxes in the wastebaskets, so little or no yeasty smell was permeating the halls, yet. We spent a few minutes in my room, with Lara admiring my logo blanket and textbooks briefly, and then trying to kiss me. I managed to put the image of the offending nachos from my mind, and got excited enough to put my plan into motion.\n\nI reached into my closet and grabbed a paper covered coat hanger, and threatened her with it. \"OK, slut, time for a little cleanup down in the laundry room. I am going to get you and your misbehavior sorted out!\"\n\nShe looked shocked, and wide version of her tight little smile grew across her face. I gave her one little swat on the butt, and pushed her toward the door. We rode the elevator down to the basement, she breathing a little hard and looking around self consciously; me watching her pulse in her lovely neck and wanting to see it race and pound very soon. When the elevator reached the basement, I saw several people in the vending area, and made sure that Lara saw them too, and then marched her into the laundry room. There was no one there, but there was a partially eaten cheese pizza in the wastebasket, and the smell was unmistakable. Lara looked pleased.\n\n.....\n\nLizzy Faye Reagan had lost her damn contact lens while she was doing her damn laundry, which she wouldn't have been stuck in the damn dorm doing on a Saturday evening after a football game if her damn APA fool boyfriend hadn't gone home for his damn momma's damn birthday this damn weekend. She wouldn't be the only fine AKA pledge sister crawling around under a damn laundry table sorting through stale Fritos, decaying M&M's, and spilled laundry detergent, finding ants and the occasional quarter, but no contact lens so far. Damn, damn, damn! Then she spotted something shiny reflecting what little available light there was under the table, and finally found her lens. She was just about to crawl out from under the table when the door to the laundry room banged open and she heard someone walk in. From her vantage point, she could see a pair of pretty fine looking women's burnt orange colored ostrich leather boots on some long female legs, and a pair of white sneakers below khaki pants following right behind them. She froze, and looked for an escape route.",
        "Nothing presented itself right now. If the two interlopers moved over to the far corner where the dryers were, she could maybe crawl out under the table and through the door if they were looking the other way. But right now they were right in the middle of the room, with clear lines of sight to everything. The boots turned to face the sneakers, and from their proximity and the sounds they were making they must have been kissing. Hopefully somebody else would come in and interrupt them, and they would go somewhere else, so Lizzy could escape unseen, and go back to Netflix, her only entertainment prospect this evening. But the kiss continued, with some surprising slurping sounds, and then the boots left the floor, presumably to sit up on one of the washing machines, and the sneakers moved closer. Suddenly she heard a zipper and the guy stepped out of the khaki pants and dropped them to the floor, soon followed by the orange boots and an orange and white knit dress. Cashmere, no less. \n\nWhat they hell were they thinking? Anybody could come into this laundry room, even though on a Saturday night there wouldn't be very many people around. Maybe that was the thrill? A little pulse of adrenalin coursed through her, closely followed by a little pulse of wetness between her legs. Suddenly a pair of navy blue men's briefs fell to the floor, and the slurping got even louder. She had to get out of here, and they were so involved they probably wouldn't notice her escape. She was about to make a dash for the door when somebody noisily bumped into it from the outside. It did not open. There was another bumping sound, and then a male voice outside the door said \"Sorry it's down for maintenance until morning\". The damn door must be locked. Damn and double damn! Lizzy Faye Reagan, the reluctant voyeur. She dusted off the contact lens in her hand, and used the forbidden 'saliva solution' to wet it and put it back in her eye. She figured she might as well see properly if she was going to have to look. \n\nShe leaned forward a little bit to peek out from under the table and saw two pasty white but well muscled male legs, and a pasty white but very nicely muscled male butt interposed between two tanned and very shapely female legs. Long legs! That girl must be at least six feet tall. And that boy definitely had what her older sister called a 'nice set of fuck muscles' in his butt, and they were moving around under his skin like big snakes in a pink plastic bag. And the girl was beginning to make even more noise. And Lizzy Faye discovered she just couldn't look away. \n\n.....\n\nRobbie hadn't yet entered Lara; in fact he was teasing her very deliberately. He positioned himself near her pussy, tensed against her, rubbed his cock against both of her thighs, and then bent down and began eating her again. Her Suzie was screaming for penetration, and she wanted things a lot rougher, too. Her Suzie was also signaling great apprehension about being discovered, but Robbie knew his buddy Ralph was manning the door outside after he had looped the push bar openers with chains and locked it. What Lara didn't know wouldn't fail to excite her. She leaned over and bit his shoulder, making it clear she was ready to stop horsing around, so to speak. \n\nHe suddenly pushed into Lara in one fell swoop, as deeply as he could. She was wet and hot and wonderful, as always, and she drew in a huge gasping breath like a sound effect in a suspense movie. He pulled back and then thrust again, with such force that the washing machine moved and made one of those squeaking noises like they did with an imbalanced load of clothes. Lara made a little squeaking noise, too, and then took another gasping breath. He kind of liked the rhythm they were playing. He gradually sped up; doing his best to imitate a washing machine's spin cycle, and then heard the banging noise of the machine Lara was perched on hitting the one next to it. Robbie had no musical talent at all, but this was a syncopated rhythm even he could play well. When he reached a nice steady pace, he put his lips to Lara's ear, kissed it gently, and said loudly \"You may come now, slut!\" and she did, beautifully, with a little cry and a sob. He could feel her pussy pulse and grab him, and her fingers caressed his back and moved all the way down to his butt cheeks.\n\nThat's my girl. He paused for second, kissed Lara on the lips, and then thrust into her again, savagely. He repeated the whole sequence, including the come on command part, and her second orgasm was even bigger and louder than the first. \"That's one!\" he said.\n\n.....\n\nLizzy Faye was pretty freaked out, but she was almost sure that was two orgasms, not one. Two hot and sizzling ones, judging from the sound effects, and there was a new smell in the laundry room, too. Well, maybe there were two.\n\n.....\n\nRobbie picked Lara up and put her up on the folding table in the far corner of the little laundry room, and put her on her hands and knees. He spread her butt cheeks and briefly licked the backside of her very wet pussy, then began zeroing in on her little red rosebud. She was turned on like crazy, and kept pushing her ass up and her shoulders down to give him better access. After a few tasty licks, he pulled her closer to the edge, spread her knees out wide, and grabbed the coat hanger. Then he began to whip her ass with it, at least the flat paper side of it, while he slowly penetrated her luscious ass, standing on his tiptoes at the end of his motion to get as far as he could. It took him several seconds to get all the way in, and when he bottomed out Lara gasped \"Thank you, Master!\" He then stroked her slowly and deeply, giving her a hanger smack on the butt when he was at minimum penetration. He increased his pace steadily, grunting in mid-stroke, until he was back to the same rhythm as before, about one repetition per second. She added a little scream at the point of maximum penetration, and they sounded like a little a Capella singing group doing a round. Soon he was thinking he was John Henry, the pile drivin' man, and spanking Lara hard at the top of each stroke. Her Suzie signal began beating rhythm, too, and just as it signaled she was about to come, he said \"You may come!\" Boy did she ever pop one off, shaking and snorting. That's my girl. \"That's two!\" he said loudly.\n\n.....\n\nLizzy Faye was risking being seen as she leaned out of the shadows so she could see all the way over to the other table. The girl had long blonde hair, and from this vantage point, Lizzy could confirm she was a natural blonde. In fact, this girl was right out of a centerfold spread in a men's magazine \u2013 face, figure, and hair all perfect. The guy was just average looking, but he had great legs and a powerful, well toned ass, shining bright and naked in the fluorescent lights. Lizzy felt another little surge in her panties. He leaned over and tongued the girl he had just fucked, confirming he qualified as a real first class pussy hound, which was another point in his favor, from Lizzy's point of view. Then he moved his chin up to another angle and Lizzy realized he was also an enthusiastic ass muncher. That was something Lizzy thought about a lot but had never actually experienced. The blonde obviously liked it just fine, as she began to push her ass up signaling she wanted more. \n\nBut Lizzy stopped breathing when the guy pulled those pink butt cheeks apart and put his cock up to the blonde's tight little asshole. It was not going to fit. But it did. When Lizzy was finally able to breathe, it came out so loudly that she was afraid they would hear her. But they weren't hearing anything but their own noises. They were each making several, and then the guy began spanking the blonde's ass with a freakin' coat hanger, and not just a little love tap either. It was getting flaming red. The guy was really pounding it, and the blond was still strongly pushing her almost perfect backside up to meet his every thrust and spank. Talk about surrender! Lizzy's pussy was fully wet now, and she found herself anticipating the way the guy's butt cheeks would swell when he got all the way up on his tiptoes. She was torn between watching that and watching his red dick disappear into the girl's pink butt. Then the son of a bitch told the blond girl that she could come, and she did, instantly and spectacularly! That would be three, by Lizzy's count. But then he said \"That's Two!\" WTF?\n\n.....\n\nRobbie turned Lara around on the table and kissed her again, tenderly. Then he spun her onto her back, let her head drop over the edge of the table until her sweet throat was perfectly horizontal, grabbed two big handfuls of long blonde hair, and began to fuck Lara's throat, her Suzie signal peaking like a rotating beam of a lighthouse pointing in his direction each time he thrust into her sweet mouth. Lara's breath whistled through her nose, and Robbie had learned, like Pavlov's dogs, to get even crazier with lust when he heard that sound. \"That's our three, baby, get ready!\" \n\n.....\n\nLizzy Faye's heart almost stopped when the guy pulled out of the blonde's ass and flipped her over on her back, put her head over the edge of the table, and put his dick right down her throat. And it looked like she loved it. Now that was true surrender. Then he said that was three and Lizzy figured it out: pussy, ass, and mouth. Now that was a 100% certified nasty white boy. When he said to get ready, Lizzie had no doubt about what for. She could not breathe, and she could not look away. \n\n.....\n\nI grunted, squatted a little bit, and felt myself get ready to shoot. Lara knew it too; she began to suck me even harder as I pulled back out of her mouth each time. She was so much my kind of girl. Get ready, baby. Lara's Suzie was singing its little heart out, and I could hear subtleties and overtones I never noticed before. Was I getting better at receiving, or was she sending differently? Then I heard another Suzie signal, clearly not from Lara, but from another girl. It had overtones I knew I had never heard before. Usually I had to be pretty close to sense a girl sending. Was there a dorm room right above us? As I tried to visualize the layout of the building, it seemed to me that directly above us was the dorm administrative office, which should be closed and locked now. On the other sides of us were the vending area and a storage room, and an outside wall. Where was that signal coming from?\n\n.....\n\nLizzy Faye watched as the guy grunted and squatted and there were no prizes for guessing what was about to happen. There was also no question whatsoever that Lizzy's little red panties were now wet and wild. He made a funny noise, and then she saw the blonde girls' cheeks hollow like she was sucking him for all she was worth. He was obviously shooting everything he had into her perfect little red lipstick mouth, and she was sucking it down like she couldn't get enough. Nasty, nasty, and very hot. Lizzy felt funny, and she wondered wistfully how Blondie was feeling right now.\n\n.....\n\nLara sucked me like she was possessed, and there was nothing that made me feel better than that. Suddenly she had it all, and she popped me out of her mouth and said \"Thank you, Master! I love you, Master! And then she began to cry. \n\nI kissed her tears, and her sweet mouth and cheeks, and then whispered very low in her ear, \"I love you too, Lara!\", and she shivered and cried even harder.\n\n.....\n\nLizzy Faye broke out of her paralysis and put two and two together. She called him Master, and she sounded like she meant it. Hadn't her roommate told her about a guy that came to a UDP party dressed as some sort of domination and bondage freak with three super hot girls on leashes, and one of the girls was a tall blonde. He called himself The Master? Actually he didn't call himself Master, the girls did. Her roommate Orinda also said that they won the costume contest with outfits so sexy that half the people there got turned on by the idea of submitting to him, including Orinda. And didn't one of the APA pledges say he was a freshman white boy who lived in this dorm? Come to think of it, the APA pledge said this Master cat had the biggest dick in the world and could make any girl fall in love with him; in fact one girl had it so bad for him that she went nuts, dropped out of school, and went back to Houston. Well, she knew that was nowhere near the biggest dick in the world, but it certainly seemed to be getting the job done, and Blondie there sure seemed to have fallen in love with him. He was kissing the blonde, as he damn well should when she just lovingly swallowed everything he could shoot, and she was sobbing and murmuring that she loved him. Then he helped her stand up and hugged her tight, and kissed her again, really nice. When he turned to help her pick up her dress, Lizzy Faye got a good look at his face. She had seen him before, lots of times, at early breakfast MWF. They called him Robbie, and his roommate was that loud and obnoxious Jewish ZZZ frat rat guy from New York.\n\n.....\n\nLara and I got our clothes back on, and headed out the laundry room door. I turned left toward the elevator, and saw Ralph had just moved to the right side of the door and started walking down the hall in the other direction. Lara's gaze lingered on Ralph's receding back, unrecognized, and I said \"He must have been right outside the door the whole time!\" She gasped, and her Suzie sparked anew with humiliation, then excitement. This had possibilities. \n\n.....\n\nLizzie Faye counted to sixty, then stood up and looked around, and saw no one else in the laundry room. She went back up to her dorm room, turned off the Netflix movie on her laptop, and turned out her lights. She reconsidered what had just happened, thought about the times she had seen Robbie in the dining hall, and then she put both hands inside her little red panties for a while. She would have to wash them again soon. \n\n.....\n\nWe walked back to Lara's place just before Rodney Driver showed up to ferry us to the dinner. It turned out to be a private dining room at one of the downtown hotels, as most restaurants were totally booked up for many days before and after the upcoming race. The room was laid out more like a conference room than a formal dinner, and there was a big video screen with what was obviously the first slide of a presentation of some sort. There were name cards at each place and we walked around the table until we found our names. I discovered I was not seated next to Lara, but in between Asa Weltschmerz and Lillian Gush. Lara was seated between Marie Oroterrassier and the VP of Sales. \n\nAsa approached me as people begin filling the seats and pulled me aside. \"I have never seen Lara with such a glow. She is absolutely radiant. She's not pregnant is she? Anything I should know?\"\n\nI paused. \"Well, earlier this evening, I did tell her that I loved her.\"\n\n\"Do you?\" Asa was ever the realist.\n\n\"Yes, but I am not sure what that means going forward. I still want to finish school single, and I am certainly not ready to forsake all others!\"\n\n\"Especially Suzanne and Millie?\"\n\nThat brought me up short. I had nothing to say, and he continued.\n\n\"She really does tell her shrink everything, you know. She is very comfortable with the current arrangement. I think she loves Suzanne, too. She is not sure what that means going forward, either.\" Lara's dad approached to greet us both, cutting our conversation short. \n\nMost of the seats were filled, and Marie Oroterrassier took to the podium to kick things off, in her vaguely continental accent and phraseology: \"Welcome, gracious ladies and gentlemen. I will briefly review our plans for customer and prospect contact from now until the race, and through some of the after race activities.\" She went through the schedule of the official pre-race party, qualifying day, race day, and the after race gala, which was a prohibition era theme, presumable so everyone could dress in spats and play Enoch 'Nucky' Thompson for the night, coincidentally drinking themselves silly in the process. Suzanne once told me that her father said the only people that drink more than the F1 crowd were the people at the UN in New York. Then she filled in all the 'unofficial' peri-race events: pre-race lunches, golf tournaments, tennis tournaments, fun runs, and a skull race on the lake, dinners, mixers, cigar parties, hookah parties and late night dance parties, and even later night 'dance' parties with clothing optional. Qualifying and Race watch video parties were being held at many restaurants and bars for those who did not have actual seats at the track, and a large number of very late night after parties at all manner of nightclubs and music venues, all the way through to Sunday, the last official day of race activities. The final event shown began late Monday night, after all the other activities had ended, was scheduled at 11:59 PM until dawn the next morning and was mysteriously called the 'addicted to' after party. She went through the list, reviewing which team members were covering which events, and which customer targets were sponsoring or participating in them, and passing out admission tickets and invitations. The various night clubs had outdone themselves trying to court the high rollers with highly promoted parties and fancy invitations, including personalized dog tags, admission coins, poker chips, and even special thong underwear that were required for admission to their parties. \n\nMarie went through the list in chronological order, until she finally got to the last thing on her list, the 'addicted to' party. \"This one, frankly, I know very little about, except that it is the most sought after and most mysterious invitation in town. I have heard all sorts of rumors, and scandalous innuendo, but little in the way of facts. I don't know where it is, but I understand it will be at private house in the hills overlooking town, and the invitation comes in the form of a metal badge, like a sheriff's badge, that will have a serial number and QR code on it, and there is no way to get in without one. This event is literally the talk of the in crowd, the 1% of the 1%, and somehow our illustrious CEO managed to get us twenty invites, but he cannot reveal the host. We will have a separate meeting to prioritize and allocate these invites, which should go only to absolute tip top customers and prospects under 30 years of age! Otherwise, I am told, they are at risk for heart attacks at the party!\" Everyone laughed. I looked over at Lara. She had that wonderful tight little smile on her face, and her Wedgewood blue eyes blazed with fire, and her Suzie was sparking nicely. \n\nMarie continued, \"So send me an email with your proposed invitees as soon as you can.\" With that she clicked on a hyperlink in her last slide that brought up a blank Excel spreadsheet. \"Now we will look at what contacts we made at our first event at the football stadium today. I have not seen these results yet, so we are all seeing them for the first time. For tonight, we will look at potential customers, who are not currently doing any business with us, ranked by the amount of business we estimate they are doing with competitors, along with their primary contact for us and our sales or business development person who first uploaded the contact to our database, and thus gets majority credit under the commission plan.\"\n\nShe ran a pre-programmed relational database query, and soon the results populated the cells of the spreadsheet, filling more than one page of rows. She had sorted by potential future billings, from low to high, and began commenting on each prospect and complementing the contact person. As the customers got bigger and bigger toward the bottom of the page, her name began to appear more and more frequently as the person associated with the potential new account, and she began to sound quite pleased with herself. \"We are now getting into very significant accounts, those that could generate more than $10 million per year in premiums. These will require a team of people to support the primary contact. Congratulations to all of you who have engaged with someone in this category. Now let's go to the second page and see who the really big hitters are!\"",
        "The sales VP, Barry T. Fermy, whose name had appeared on the last few big accounts about as often as Marie's did, leaned over and said \"She likes to get the big number one account herself, otherwise Steadman's due for an ass whipping, but he probably likes ass whippings!\"\n\nMarie stepped through the last accounts one by one, building up to the big reveal of the number one prospect. When she clicked for the final row on the second page, up popped \"$600M: Tier Group UK; contact = Abelard Peters CHB; account lead = Robbie Roberts.\" \n\nThere was stunned silence in the room. Someone behind me said \"Six hundred million! Somebody tell me who the fuck is Robbie Roberts, anyway?\"\n\nLara's dad cut in, \"Special situation. We will have a team meeting on this one. I'll send out the meeting notice.\"\n\nI looked over at Marie. She looked crestfallen, and her 'sublimation' Suzie signals wavered and died, to be replaced by the kind of stuff that Melanie used to send. It made my skin crawl. \n\nBut Lara had another one of those wonderful tight little smiles on her face. She walked over and took my arm. \"I don't know which would be more fun: having you bring in a big account or having you stick it to Marie!\"\n\nI looked at her funny. \"I promise I will never ever stick it to Marie. Yecch, what a terrible thought! Let's please go to your place so I can stick it to your sweet little box while Millie licks us both!\"\n\nShe laughed. \"We better stay for dinner first, Master. Your stomach is growling again! But I am going to have them bring you a side of oysters, for the protein, of course.\"\n\nWe sat back down as the waiters began to serve dinner. I managed to switch seats so I could sit next to Lara. After inhaling my salad and a couple of breadsticks, I asked her \"What about this 'addicted' party?\"\n\nShe got a Cheshire cat grin. \"The hostess with the mostest has to keep a few secrets! But I can tell you that Suzanne, Millie and I, plus Mei Ling, and Cindy Nelson, Cisco's party planner friend, have been using our educations and connections to do a little gestalt party planning and guerilla marketing. I can assure you that we will get 100% attendance at the party this year. Next year the first thing on everyone's agenda will be to get an invite to our next party. We've got two trending hash tags already, and we're even seeing tweets and emails from the Hollywood and Euro Tattler crowds nosing around for information and sniffing for invites, and Millie swears we will get a pre party video tease on TMZ. Everyone will be frantic to find out where it is and who is invited. And the after party exclusive TMZ coverage will drive them wild for next year. By the way, you will have to wear your Master outfit, and you will have be emcee and do some dancing. It'll be fun!\"\n\nAt least my face would be covered. \"Do I get to whip anyone?\"\n\nShe giggled. \"A whole chorus line, Master! Plus maybe some volunteers from the audience.\"\n\nWith that, the next course was served and the food captured my full attention. Lara's dad drifted by, asked about Abelard Peters. He wasn't on their target list, and they didn't even invite him to the lounge, but he had been in their prospect database for years, as an almost quixotic goal to close even 1% of his book of business as a start. When he left, I pulled up the card, and sent Chairman Peters a brief email confirming that I would be in touch, and giving him all my contact information.\n\nLara made me finish off her entr\u00e9e when she got full, and then made me eat two desserts, because she said she did not want to have to listen to my stomach growl during the night. Dinner broke up about 11:00. Well past my normal bedtime, and Rodney dropped Lillian Gush and Lara's dad at his hotel and then took us back to Lara's place. As we were getting out of the limo, she took out two metal sheriff's badges and gave them to Rodney.\n\n\"Rodney, these badges will get you and a date into an after party at Spear Overtop's party house on the Monday night after the official closing party on the Sunday after the race, from midnight until dawn. They are for you and Little Hollywood. Some of your clients will be dying to get these, and offer bribes, but you can't sell them or give them away, you guys have to come yourselves. Okay?\n\nRodney got agitated. \"Is this the 'addicted' party I heard about?\"\n\nShe grinned like a hot schoolgirl who knew a secret. \"Maybe. What did you hear?\"\n\nHe paused. \"I dropped off a couple of my Net Jet subcontract clients off at the Four Seasons last night, and the first thing they told the top drawer concierge when they got out the limo was to try to get them tickets to that party. He said flat out he couldn't do it.\"\n\nLara looked interested. Rodney named a leading lady, leading man couple that was known to spend time in Austin from time to time hiding out from the paparazzi in semi disguise to visit a few live music venues. Anywhere they went and could be photographed would be the headlines on TMZ. Lara said \"If they will agree to talk to the TMZ guys for 30 seconds on camera from the party, I can get those invites. Can you get back in touch?'\n\n\"Oh, yeah! Having the concierge at the Four Seasons owe me big won't hurt business, either.\"\n\nWe went up to Lara's place and took a shower together, with lots of kissing and mutual ass worship. Then I tied Lara's hands up over her head with a scarf, hooked them over the bedpost, turned her on her side and entered her from behind while reaching around with my hands to stroke her clit and pinch her nipples. I kept her right on the edge for a long time, and then told her to come, and she must have squirted a foot! A few minutes later, Millie let herself in with her key, and she was quickly and enthusiastically Millie on the spot to capture most of the next squirt in her mouth. We played kiss, lick, slap, and tickle for a while and then settled into cuddling and talking. \n\nLara then whispered something in Millie's ear and she gasped like she had been stung by a scorpion, then the two girls screamed and hugged each other. Mille arched an eyebrow at me, saying, \"For a really bright guy, you can sure be slow on the uptake sometimes!\"\n\nI blinked, roused from my very enjoyable post-prandial and post-coital reveries by curiosity. \"What do you mean?\"\n\n\"Took you long enough to figure out you were in love with Lara, there, fella-guy!\"\n\nI was stunned. These girls really did tell each other everything, and review it in depth, apparently. I only stuttered, and she continued, \"Maybe you should come clean about Suzanne, too?\"\n\nI was flummoxed, and just sputtered. \n\nLara jumped in \"You know Robbie, telling someone you already would have fallen for them, except for some other factor, is definitely not the same thing as telling them that you actually have fallen for them. Suzanne has repeated that conversation to us word for word a half dozen times and we have diagrammed the sentence and parsed it in Clintonian fashion. The most extreme and unacceptable interpretation is that you would have fallen for her, but you didn't then, you haven't since, and you won't in the future! The next most worst is that you didn't then, you haven't since, but you still might. Finally, you didn't then but you have since, but you haven't told her, and that is really the right answer, isn't it?\n\nI shook my head. \"No!\" The both looked at me in horror.\n\nMillie's face screwed up into a grimace like somebody had thrown acid on it. \"What?\"\n\n\"I already had by then and I just didn't tell her. And I might point out that she hasn't said a word to me!\"\n\nThe both folded up their arms and shot very disapproving glances at me, remarkably like Mrs. Gregory, my second grade teacher. \n\n\"That's Girl 101, dummy. The boy has to say it first.\" they both said in perfect unison. I would never understand women, my Suzie signal talents notwithstanding.\n\n\"So when were you planning on telling her?\" asked Millie pointedly.\n\n\"Well, er, I thought, what I mean to say is, I suppose....\" I was at a loss for words. But the cat was out of the bag, big time.\n\nMillie had no trouble expressing herself. \"We'll, since some of us who only have one X chromosome seem unable to be emotionally open and honest at the moment, and speaking as the very grateful and yet humble possessor of two wonderful and fully functioning X chromosomes, I will try to set a better example.\n\nShe took both of us by the hand. \"You guys know I love all three of you, but with a lower case \"l\". I know my time as a happy trainee will come to an end soon, although I would gladly do anything any of you wanted of me any time. But you guys love each other with a capital \"L\" and that is not going away. You all three might as well get with the program and figure out what that really means!\" If she hadn't been sitting up on the bed, she would have stamped her foot for emphasis. Lara and I just looked at each other with open mouths.\n\n\"That could get complicated.\" Lara and I both said in unison. \n\nAnother hour of discussion served only to get a lot of sticky wickets on the table, but resolved none of them. We declared a truce and fell asleep in big cuddling pile. I am told my stomach growled loudly all night. \n\nEarly Sunday morning, I was awaked by the magical smell of bacon, eggs, and tortillas. Lara was making Migas in her big iron skillet, with Millie helping to cut up tomatoes and peppers for her. The smell was intoxicating; the food and the girls. They gave me some oblique and teasing hints about the details of the 'addicted to' after party while the food preparation went on to completion. I ate the food first and the girls second, taking both of them to completion, and then they returned the favor. \n\nI then walked back to the dorm. I had nothing scheduled until 5:30 PM, when I was to meet Suzanne and walk downtown to Strelsa and G\u00fcnter's high rise for supper. My intention was to go right up to my room and sleep, but as I passed the dining hall, the smell of hamburgers lured me in. How could I be hungry already? But I was ravenous. Maybe I should ask Asa to examine me? There was a new 'relish bar' in the serving line complete with several varieties of peppers: jalape\u00f1o, Serrano, Anaheim, and Habanero, which allowed me to turn a couple of plain burgers into delightfully tasty forehead heaters. \n\nMaybe it was the peppers, or all the emotional discussions earlier, but my sleep was replete with dreams. They were likely projections of my subconscious thoughts and fears, some pleasantly erotic and some more than a little disturbing: strapped to a trapeze in front of Melanie, who was wearing an ugly latex dominatrix costume and fingering a riding crop; Suzanne being interviewed on TMZ concerning her surprising decision to quit her PhD program in economics, turn down a cover photo offer from Sports Illustrated, and become a porn star; Lara in a white bridal gown standing next to Pavel; and finally Janet, Lou, and Candy in a hot tub getting each other off and laughing at me.\n\nI woke about 4 PM, showered and shaved and put on some clean clothes. My stomach growled incredibly, and I decide to go down for some pre-dinner when the line opened at 5. There were few people in the dining hall that early on Sunday, but I saw some familiar faces that seemed to come to every meal early, like I usually did. I rushed back up and brushed my teeth again, and just made it down to meet Suzanne in the parking lot near her office at 5:30.\n\nI was so happy to see Suzanne that I forget I that we had some serious talking to do, and according to Girl 101 the onus was on me to initiate the discussion. But I supposed that after dinner would be soon enough for me. She looked so good I was immediately calmed and comfortable, and she gave me the play by play on both soccer games as we walked south toward Strelsa and G\u00fcnter's place just north of the river. She said that the game the morning after Lara and I had put her on a liquid diet and whipped and dominated her had been her best ever. She felt faster and calmer, and her shots were more accurate, so she wanted to try that pre-game ritual for her next game. I was certainly up for that, but that game wouldn't be for at two weeks, as the Gran Prix race activities had us totally booked up from Monday morning until the following Tuesday at dawn, when the 'addicted to' after party ended. She also was certain someone was following her all the way to Waco and Killeen and back. I was worried it was someone from Pavel's crew, but she said it was more likely someone her father had sent and not told her about. We went over the last minute stuff for the three F1 race tour groups on Tuesday. She was planning on joining me at UDP for dinner. She wondered about how well I had arranged for the 'culture group' tour and I said I had it covered: with an art expert that was also a birder, and I expected good reports from that group when we all joined up for dinner. She was still questioning me about it when we arrived in front of our destination. \n\nStrelsa and G\u00fcnter were part of the new trend downtown: cosmopolitan and virtually Eurocentric. They used ZipCars and CarToGo but did not own a vehicle themselves. Their building was near the big downtown grocery store and the light rail stop, Amtrak station, and ESU shuttle bus stop. Their apartment was one of the least expensive in the building: a one bedroom on a lower floor just above the retail and parking garage floors, furthest from the elevator, with an eastern view. The building had several common amenities: several party rooms, a swimming pool and large patio, several hot tubs, and a gym with handball courts, and easy access to the hike and bike trail around the lake. We took the stairs up to 5 and G\u00fcnter opened the door to greet us. \n\nI introduced Suzanne and she immediately launched in to rapid fire German with them. I only caught about 50% of it, but apparently Suzanne had lived in Vienna and spent a summer in the mountains not too far from where G\u00fcnter grew up. She did not have the perfect mountain accent that Nora had reproduced, but she communicated just fine. For my benefit they all switched to English. We sat at their kitchen table and Strelsa put out some cheese and crackers. I was already hungry, but I carefully limited myself to a quarter of what she put out. G\u00fcnter was staring at Suzanne, but soon caught himself. \n\nStrelsa had noticed him staring, and muttered something in Polish. Suzanne looked shocked and then made a quick reply, and Strelsa literally dropped her plate and stared at her, then giggled. Suzanne pointed at me and said something else, also in rapid fire Polish, and Strelsa blushed red instantly, and then covered her mouth. Strelsa said \"Suzanne is going to help me get dinner started. Would you guys fire up the hibachi out on our little patio?\", and she and Suzanne disappeared into the kitchen. A moment later the sound of barely repressed giggles leaked through the door.\n\nG\u00fcnter shook his head. 'I knew I should have learned Polish! How many people in Texas know the language? Five? Six?\"\n\nI smiled. \"Actually there are lots of people, not just students in Austin, but all over central Texas. There are Polish speaking communities centered on catholic churches all around us. There are more German speakers, but plenty of Poles and Czechs, too. But I was surprised to find that both Nora and Suzanne both speak it, too.\"\n\nHe looked frustrated. We went out to the balcony and he got out the charcoal and some lighter fluid. He set up the vents on the little hibachi with measured Teutonic precision, placed two little thermometers on the grill's surface, and lit the fire. He sat back on the bench, clicking a button on his big black high tech watch. \"In fifteen minutes it will be perfect for the steaks.\" For all I know the thermometers sent data to his watch via Bluetooth links, and I almost expected him to lead us in some precision calisthenics that took exactly 15 minutes, plus I couldn't shake the fact that he sounded like Arnold Schwarzenegger. My stomach, not at all deterred, growled in anticipation of the steaks. I looked through the sliding glass door into the apartment to see Strelsa and Suzanne setting the table, gesticulating animatedly and talking as fast as only really smart women can. \n\nInstead, he made an attempt at conversation. \"So you knew Strelsa in gymnasium, or as you say it here, high school?\"\n\n\"Yes, she went to my school for one year, and lived with some neighbors of ours. Didn't an American girl come to live with Strelsa's parents for a year?\"\n\n\"Yes, she was very nice girl. Strelsa said you were the only one who did not sleep with the Suzie?\"\n\n\"Well I am not sure I was the only one, but I didn't. I had promised my parents I would not have sex until I turned eighteen. \n\n\"And you told Strelsa you wanted to have sex with her instead of the Suzie?\n\nUh-oh. \"Well, not exactly. I said if I did break my promise, it would be better with someone like Strelsa than with the Suzie.\" Now he had me saying it. \n\n\"The Suzie was not attractive, sexually?\"\n\nI smiled. \"No, she was very sexy, but Strelsa was 'nicer' I guess I would say.\"\n\nHe considered that for a moment, and then said \"Since your birthday you have had the sex with lots of women, yes?\"\n\n\"No! Well, some, but not very many.\" What was he getting at?\n\nHe sighed. \"Strelsa and I found each other when we were thirteen. We have never had the sex with anyone else.\"\n\nI wondered, \"Was it an arranged marriage, brokered by your parents?\"\n\nHe laughed out loud. \"Oh, no! Both sets of parents were against it. Strelsa's parents said I was too German, from the mountains, and not smart enough for her. My parents said Strelsa was mixed French, and Polish and she was not German enough for me. Her parnets signed her up for the exchange program to try to separate us. None of the parents were even at our wedding.\"\n\nAt this point the girls emerged from the apartment, still talking a blue streak. Strelsa had a little tray with four cold soups in tall cups. I didn't know she was such a cook. It tasted vaguely of cucumber, strawberry, and cantaloupe, and it was delicious, what there was of it. Strelsa looked pleased as we all seemed to like it. \"That should clear our pallets!\" She bustled back inside with Suzanne and they returned and handed each of us a salad plate piled with assorted greens and yellow tomatoes, dusted with some sort of hard cheese. It was amazing, and I said so. Strelsa smiled, and then shot G\u00fcnter a glance.\n\n\"I will start the steaks\" He brought out a little covered dish with the meat, double checked the thermometers, and placed the grass fed, hormone free Angus steaks precisely on the perfectly pre-heated grill, clicking his watch again. Strelsa gestured for us to come inside, and placed a hot casserole of potatoes au gratin and another of green beans on trivets on the table. G\u00fcnter went out to turn the steaks at precisely 6 minutes, and after a little more small talk, went out to fetch them to the table. I was famished, as usual. Suzanne complemented them on the wonderful table they set, and I dug in immediately to show my enthusiasm and avoid offending them. Everything was great. \n\nThe conversation turned to the upcoming Gran Prix race, of which G\u00fcnter was a big fan, what they liked about Austin, and running, something we all shared. Suzanne mentioned that I had gotten into the class with Bob the Knob, and G\u00fcnter whistled. \"You are very fortunate. He is a top researcher and a coach who gets great results. Usually they are either one or the other! He will put some meat on your bones!\" That sounded like my grandfather. \n\nStelsa talked some more about their parents. Apparently the only thing the parents agreed upon was that the couple should never have gotten married and should have stayed in Austria instead of coming to the United States, especially Texas. Stelsa said even after G\u00fcnter got this great coaching opportunity at the university, her parents still called him 'dummy' and 'meathead', and even through Strelsa was now in school for a degree biochemistry at ESU; his parents still called her that 'Polish hippie'!",
        "As dinner wound down, G\u00fcnter and I cleared the table and loaded the dishwasher (Bosch low water, of course) while Suzanne and Strelsa plotted with their heads together like long lost sisters, occasionally pointing at one of us and giggling. Polish inside jokes at our expense, we concluded. Although the winter sun had already set on the opposite side of the building, we enjoyed the city view from the balcony until it got a little chilly, and then went back inside. After a little more small talk, we hugged goodbye. When G\u00fcnter got our coats from the closet, he took me aside and asked if I could meet him for lunch on Tuesday, at the University club attached to the stadium. Since I was going to be there with the F1 group anyway, I said yes. Then Suzanne and I put on our coats and walked north toward campus. \n\nIt was about a twenty five minute walk. I would probably not have to say a thing. \"So, Robbie, we have a few things to catch up on. First, Bob the Knob has shanghaied me to lead a 'fun run' for his high roller clients who are in town for the race, and the only time I can do it is Monday and Wednesday at our usual time. I want you to come with to help me corral the group so we don't lose anyone, plus you might meet some interesting people. We will meet them at the Four Seasons where most of them are staying, and then run around the whole trail loop, about 11.5 miles. OK?\" \n\nI drew in a breath, but I knew I would have to exhale silently. \n\n\"Second, after this whole race thing is over, I want you and Lara to do a night before liquid diet and pre-game domination number on me like you did a few weeks ago. That was my best game ever, and I want to play that well again!\"\n\nThen another shallow breath for me, followed by another deep inhalation for her.\n\n\"Then we have to talk about the 'addicted to' party. It has taken on a life of its own. Lara and I had a few good ideas, but now between Millie's Phi Phi alum connections at the networks and TMZ, and Cindy Nelson's social media expertise and unbounded ambition to be the hottest party planner on the third coast, it is becoming a Frankenstein monster!\"\n\n\"Not Frankenstein! It's Fronkensteen. That's Fraaanc in steen!\" I said, mimicking the Gene Wilder line from the old \"Young Frankenstein\" flick I had seen on Netflix long ago. \n\nShe looked at me impatiently like I had just farted loudly in church. \"Try to keep up, Robbie.\" She was on a roll.\n\n\"Spear Overtop's house is perfect for it, but we have to do a little remodeling to pull it off. He is okay with it, and he even increased our budget. Once he learned that it was our party at his house that was getting the entire buzz, he was overjoyed!\"\n\nRemodeling? What in the world did they have planned? I supposed I would find out soon enough.\n\n\"Lara must have told you by now that we will all be in the stage show in our 'Master and His Girls' garb, and you will by the emcee. Work on disguising your voice, because you are going to end up on TMZ at the minimum, and even with that mask on, someone may recognize your voice. You wouldn't want that turning up in an engineering job interview someday, I suppose.\"\n\nNow I was really getting worried. I wanted a few questions answered, if I ever got a word in edgewise.\n\n\"Finally, you and Lara just got signed up to play as a doubles team in a charity tennis tournament Friday morning before the race. I know its short notice, but it is sponsored primarily by Erminia and Sapiento Gallo to benefit the mew medical school children's wing. I will be there to, pressed into service by my major professor to support the event. He is going to send you an email you can forward to your professors asking for their indulgence in flexing your schedule. He is even asking them to reschedule your midterm exams if need be. And BTW, I made an incentive wager with Lara. If you two are the top non-pro-am team in the pari-mutuel board, and thus raise the most money for the hospital, I will wear my little leather blindfold hood and serve you both on my knees for 24 hours whenever you choose!\n\n\"That's something you like doing anyway, beautiful!\" I immediately flashed on making her stop talking for 24 hours, but luckily stopped myself from actually saying it. \n\n\"Isn't that a nice coincidence?\" She intoned.\n\nBy this time we were back at her car. We were going to her place so she could get her hands on me for a while. I suppose I would let her have her way. She continued nonstop as she drove us to her apartment building, and as we pulled into the lot, I saw a truck I had seen before. The cable service must be really bad over here to be under such constant repair. The guy up in the bucket lift looked familiar, but I just couldn't place him.\n\nAs she puttered around making us some hot tea, she continued to prattle on, adding details about the fun run, and then the topic turned to Strelsa and G\u00fcnter: \"I think Strelsa really needs someone to talk to. I really like her, but she is on edge and worried about something. She loves G\u00fcnter and he loves her, but I think they are having problems.\"\n\nI thought she meant with their parents, but she continued, \"I think they are having the seven year itch six years earlier than normal, is what I think!\"\n\nI didn't get the reference, but I didn't have to wait long for her amplification. \"That's an old movie that my parents used to have on videotape way back when we were marooned in Morocco when my dad was the ambassador's deputy, or at least that was the official story. I watched all those old tapes at least ten times each. Basically it is a metaphor for married couples starting to look around for a little sexual variety after seven years of supposed extended honeymoon bliss.\"\n\nThat somehow made sense, in context of what G\u00fcnter had told me. \"They met at thirteen, and neither one of them have ever been with anyone else.\"\n\nShe looked scandalized. \"She didn't make that clear. But she did say that you propositioned her in high school, my Animal, and she turned you down.\" Suzanne poked me in the ribs.\n\n\"Now wait just one minute! Back then I had my vow of chastity to uphold. But I did tell her that if I was going to break that vow, I would like it to be with someone nice like her.\"\n\nShe laughed, and said \"And you still like to munch a little honey blonde snatch every once in a while, eh! Don't worry. After you found Lara for us, I quite understand. She paused and put her tongue up on her upper teeth and held it there. I started to get hard. Why did that drive me so crazy? She continued, \"Tell me about 'The Suzie'!\"\n\nI realized I had told Nora about Suzie Packard from junior high school, the first girl that I ever heard sending the signals and thus my name for them, but I had not told Suzanne. Strelsa had told about it first. I had to be careful not to mention the signals. \n\n\"Well, Suzie Packard was a girl in my neighborhood who went through puberty very early, and had a figure like a Playboy bunny by the time she was 12. She liked all the attention that brought her, and she liked sex a lot, and she had a lot of it. She deflowered most of the buys in my junior high and high school singlehandedly. She came after me several times, but I had already promised my parents to wait until I was eighteen.\"\n\nSuzanne laughed. \"At least she had good taste, but the poor girl never got to find out how good you taste, did she?\" Another poke in the ribs.\n\nThat was occasion for a kiss, I supposed. She came up talking. I came up even harder. \n\n\"Well Strelsa was honest enough to tell me that she wished that she had, how did she put it in Polish, \"tasted your candy when she had the chance!\" Suzanne giggled. \"It's funnier in Polish that it sounds in English.\"\n\n\"Nora told me that Strelsa said that.\"\n\nShe smiled at me again. \"Nora also told me that G\u00fcnter was a hunk, but she didn't tell me how hot a hunk he was!\" \n\n\"No comment, but he does seem like a nice guy. Did she tell you about their parents?\" She shook her head no. \"Both of their parents were dead set against them getting married, and coming to the states. G\u00fcnter's pure Teutonic folks are scandalized by the fact that she is part French and part Polish, and Strelsa's parent's think G\u00fcnter is a dumb hick from the mountains that is not good enough for their daughter!\"\n\nShe laughed. \"Austria! It's a beautiful country with some ugly prejudices. Strelsa did tell me that G\u00fcnter's family is old line mountain folk all the way back to the dark ages, but Strelsa's family is actually part Polish royalty!\"\n\nI guess I would lay off the Pollack jokes, but had to ask. \"Do they tell Pollack jokes in the EU?\"\n\n\"They tell any and all kinds of jokes in the EU. But they don't have Aggie jokes, per se. The Swedes call them Norwegian jokes, instead, and vice versa. Have you ever heard of Ole and Lena, or Ulla and Ollie?\" She said with a sing song in her voice.\n\n\"I think I had a great aunt named Lena\", I said. \n\nBy this time she had snaked one of her hands inside my pants and inside my underwear and was playing with my ass. I liked it. Then she pulled up my knit shirt, and blew on one of my nipples, and then gave me a hot look, holding her mouth open with her tongue on her upper teeth again. My dick sprang up to full readiness, dripping a little sap like piece of green lumber, and she noticed. She liked it, as her Suzie signal was making clear to me. \n\nSince I had listened so long, and I knew I would soon have my mouth too full to talk, I blurted out \"I need to tell you something, Suzanne!\"\n\nShe stopped squeezing my butt cheek and looked semi seriously at me. As she waited for me, she raised one eyebrow expectantly. For some reason, I thought about Mille and Lara lecturing me condescendingly about Girl 101, wherein girls learn that the boy always should say \"I love you\" first. I had not told them about Boy 102, a somewhat more advanced course delivered in dribs and drabs in locker rooms and hallways, wherein boys learn that saying it is a good way to get laid, and that a girl never really gives you her best stuff until you say it. So you say it, get the benefits, and then you can decide whether you meant it or not after you have gotten past her defenses and fucked her. \n\nI was also just stunned by her sudden silence, but like most fools, I rushed in to fill it. \"I love you!\"\n\nHer face actually stayed completely still for a moment. Her Suzie did not. I only thought I was well connected to her before, but suddenly I was plugged in like I never thought possible. Analogies were hollow here, but it was like listening to a little old transistor radio with a 1\" speaker and thinking the music was wonderful, and then suddenly someone hooks up a set of full range electrostatic speakers plus a giant subwoofer. Her signal was inside my head, my lungs, and acting directly on my dick and on my heart and soul. It reached some sort of Suzie crescendo like I had never experienced before. It literally stopped my breathing for a moment.\n\nThen her mouth moved a just little, and she said \"I love you too, Robbie!\" After we reached that point, sensing her Suzie signal was like breathing: natural, automatic, and a pure necessity. Neither one of us said much for the next few hours, except \"oooh\" and \"aaah\"' and \"yes\" plus the occasional \"Oh God\", but we did manage to test, taste and judge every square millimeter of each other. I penetrated everything except her eyes and ears, and nose, and she must have come six times, with six cute little sneezes. I only came twice, but the second one was more of a tonic, clonic seizure that swept through my body like an explosive wave, or maybe electroshock therapy.\n\n.....\n\nDwight had cramps in both legs, sitting in the van, but he could not move right now. He should get extra combat pay for this. He used to think you had to go on a long and unsatisfying date to get blue balls. Now he got it every shift watching this Pliskin woman. He was afraid he was going to develop prostate cancer before he turned 26 from all this back pressure. This was got to be some yet unnamed new medical syndrome, never properly written up because it happened to no such agents like him and nobody could talk about how they contracted it.\n\nBefore this latest little fuck fest, he had alerted everyone on the surveillance teams to the tennis tournament conversation, and gotten a response from his boss, Senior Agent Smith that he had learned that Erminia Gallo would also be there, escorted by Brujo Lagoria, Sapiento's money manager and chief advisor, but that Sapiento would be at a meeting downtown. That complicated their coverage plan a bit.\n\n.....\n\nMonday morning I woke up the dorm, but I was hoping I was still at Suzanne's place. I reached for her, and she wasn't there. But I almost thought I could feel her Suzie, even at a distance. Then I remembered her driving me back to the dorm, and a tearful goodbye, and that I would see her at lunch time to run, but only to run. I brushed my teeth and dressed, and went down to breakfast to tank up for the fun run today. \n\nI went through the serving line in a bit of a trance, and loaded up my plate. I was ravenous. I used to wonder if my Suzie receiving capability would improve with the number of women I practiced on, or how much time I spent listening to a individual woman, or just in general as I got a little older and more experienced. All three terms were obviously in the equation, but depth of connection was seemingly the first order term. My now rapidly deepening connections with Lara and Suzanne were also improving my ability to hear signals from anyone, even complete strangers. In fact, I was hearing signals so well know that I might have to ask Nora for advice on how to shut them out. I was staring off into space, shoveling protein into my maw, when Nora approached. I barely noticed. \n\n\"Maybe I should pre-position the next plate for you, so you don't have get up and break your rhythm between fork and mouth!\" \n\nI smiled up at her, albeit distractedly, and looked over at the serving line. I hoped she was serious about her offer. \n\n\"I am actually a little concerned, Robbie. Are you okay?\"\n\nI managed a smile. \"I think so, but I am so hungry all the time now. Maybe it's just the stress?\"\n\nShe said \"I'll be right back\", and went back through the serving line. Bless her little heart.\n\nShe returned with another full serving of bacon, eggs, and French toast. What an angel of mercy she was. \n\n\"Sometimes people overeat to deal with stress. Are you gaining weight?\" she asked, tilting her head toward me, and scanning my form with her eyes.\n\n\"Not an ounce. I am losing fat and gaining muscle in my legs, but my weight is staying the same. My pants are all now loose at the waist and tight in the butt and thighs. I get lots of exercise, and I sleep like a log. I don't think it is stress. I'm caught up in all my classes just fine. Unless I get hit by a bus or something I'll pull 15 hours of 4.0 GPA this semester. \"\n\nShe looked thoughtful. \"Well, they say we only use 10% of our brain, and that the human brain, working hard, burns a lot of calories per hour.\"\n\nI suddenly remembered something from high school. What a shock. \"Don't they say you need 50 grams of glucose each day as a minimum just to run your brain?\"\n\nShe looked as surprised as I was. \"Actually I think that's right. And if I remember from my biology electives, the brain only runs on glucose, so if you don't take in enough of it directly the liver has to make it from fat and protein to keep the brain going.\"\n\n\"Well, I just know I feel hungry all the time and my stomach starts growling about two hours after each meal. This has only started since I have been down here in school. It wasn't this bad in high school!\"\n\nShe took a ClifBar out of her purse and gave it to me. \"This is part of my stash that I keep in case I miss lunch, and I have some more. But take this one and if your stomach growls, eat it and see if that helps.\"\n\n\"Thanks Nora. I hope I see you before next Wednesday.\" She smiled, and headed for her class. I polished off my third plate, and grabbed an apple from the serving line as I headed out.\n\nRhetoric and Composition was the only class where I had already had my pre-Thanksgiving exam, but there was a big paper due right before the break. Sarah looked good, and Ms. Wyrickie still smelled tobacco free too. Her Suzie signal was sizzling and popping in anticipation of next Thursday evening's planned dalliance with the two of us. I realized it would have to be after Erminia's training session at 6 PM, and that I should do a little preparation for it, as I had with Lara's first session. In between classes I did my 'lecture to an empty classroom' trick, while I ate the apple as a preventive measure, and soon identified two issues I needed to study a little more before my math exam. Professor Lillehammer assigned yet another paper, naturally to be turned in before the break, about the tradeoff between the increasing upfront costs of regulation on engineering projects versus the later economic cost of accidents and cleanups. What fun. \n\nI popped back to my room and changed into running shorts and shoes, but with a long sleeve tee shirt plus a tennis sweater, as it was a little chilly, and then headed for the entrance to Suzanne's office building. My stomach growled on the way, and I suddenly realized that I had left Nora's ClifBar in my backpack. Suzanne emerged with super short running shorts, but with some sheer full length hose, and a tight white sweater. She made it look totally hot, despite the cooler weather, and the fanny pack she had added.\n\n\"I hope that fanny pack is truly necessary, because it interferes with my view of your lovely altar of worship, there, beautiful!\"\n\nShe smiled. \"You say the nicest things sometimes, my Animal, especially last night. I will be glad to schedule private worship services for you a little later. This is my contingency pack: cell phone, bandages, safety pins, bottled water, and ...\" She paused as my stomach growled so loudly that it interrupted her, then reached into the pack and produced her own ClifBar and handed it to me, then continued \"and some low blood sugar preventatives, and a couple of other trail related accessories.\" \n\n\"Wow!\" I said, talking with my mouth already full of a bite of the ClifBar, \"Were you ever a scout?\"\n\nShe laughed. \"No, I was in Morocco when I was the proper age to join. But I do like to be prepared.\"\n\nWe jogged past the capitol, catching a few lights just right and continuing south. \"When we take off from the hotel with the group, would you please ride drag, so we don't lose any strays?\"\n\n\"Yes, Ms. Hot Trail Boss! I'm going to keep them little doggies in line and on the move, I surely will! Wouldn't want one to break a leg and you have to shoot 'em.\" She laughed.\n\n\"Excellent! Competent trail hands get good guy finishing points, if you know what I mean!\" \n\n\"I will never forget that, Ma'am, if you won't.\" She smiled, so wonderfully.\n\nWe went left and then back south. When we passed the convention center and crossed the street to the Four Seasons, there was a baker's dozen waiting for us near the entrance, three women and ten guys in very expensive looking designer track suits with funny European haircuts. Suzanne used her stage voice, instantly getting their attention without any amplification. \"Hello and welcome. My name is Suzanne, and our mutual friend and coach Bob asked me to lead you in a little fun run today and again on Wednesday. We are going counterclockwise around the trail loop today, roughly an 18 km circuit. Bob of course wanted more distance,\" she paused and the crowd laughed, and she continued, \"but we had a time limitation to work within.\" \n\nEveryone was looking at her intently, the guys because she was so hot, and the girls because she was so clearly in shape, as far as their Suzie signals were telling me so far. She pointed me out, and I waved, then she said \"Robbie will be running at the end of the group, or as they say in Texas, riding drag, but not in drag, I assure you, and feel free to ask either one of us for help or to answer questions.\" With that she took off around the edge of the hotel on the little pathway between buildings, going east of the hotel and down toward the rowing club, joining the path just west of some construction barricades and a covered wooden temporary path through the construction zone. The group spread out a little bit and developed a spacing that happily put all three of the women near the back of the pack, in easy view as I ran in the very back. ",
        "There were a few young guys keeping right behind Suzanne, in the same way that Theo had stayed right behind her in the conga line, and they actually jockeyed for position to get the best view of her as she ran in front of them. The older guys held back some, and then the three women. One very thin, marathon runner looking guy in his forties ran just a step ahead of me. He was wearing a long sleeved green shirt that said \"Green Tree Racing, Belfast\" and soon started a conversation. \"Hello, I'm Ivor Greentree, I stay in Belfast.\" I shook the offered hand. I thought Belfast was Northern Island, but he sounded one of those Scottish Guys in the radio commercials. \"I'm Robbie Roberts. You sound more like Aberdeen, Ivor.\"\n\nHe laughed. \"Fine ear for a cowboy, or just lucky, but maybe with a name like Robbie Roberts you should have the ear. I was born in the East Highlands, but my Da moved us to Belfast when I was little, so both the Scots and the Irish think I sound funny. Most of them say I think funny, too.\"\n\n\"What business are you in Ivor?\" By now we had passed underneath the 'bat bridge', but the colony had already migrated to Northern Mexico. The slight smell of bat guano remained with us. \n\n'I'm an engine builder, and a right good one. I do work for three teams, and do remote diagos during the race.\"\n\nI followed up on that. He meant that most of the engines in the cars had more radio telemetry monitors than NASA missions, and someone like Ivor watched everything in real time and tried to anticipate engine conditions and potential failures, in order to prevent or delay them during the race and figure what to do differently before the next race, or how to change the design of the next race car. \n\nBy now we had reached a little wooden bridge over the trail, and people were going single file, not using one side of the bridge, stacking up traffic, which there was a even more of than a normal day, I supposed owing to the large number of race people in town. We stopped just before the bridge just as Suzanne reached into her fanny pack, pulled out a black plastic bag and bent over almost double at the waist, and then squatted on her ankles, using two of my favorite moves from her stretching routine. She scooped up some dog poop into the bag, flipped it over expertly to seal the bag, and dropped it in one of the little stations provided along the trail.\n\nIvor sighed. \"This is an amazing town. I never thought I could be grateful for a fookin' dog turd, but seeing that one sit on her hunkers to clean it up was an almost religious experience!\"\n\nI laughed. \"You've got good taste, Ivor. Texas is a great place for girl watching, especially here.\"\n\n\"Too right! Fine scenery, I'd say.\"\n\n\"We call it 'eye candy'. Walk around the ESU campus and you will be amazed.\" \n\nIvor drifted up to talk to one of the other runners, and one of the women drifted back into step with me. \"May I ask a few questions about things locally?\" she said with a British accent almost like Nora's when she got excited, but not quite as precise and cultured. She was about 5' 6\", with light brown hair and a very full figure. \"I'm Tessa Formby, from the Tattler.\" I sort of knew what that was. \n\n\"I'm Robbie Roberts. How can I help?\" \n\nShe gave me her best come hither look, and least the best that can be done while running. \"How do I get to the Broken Spoke Dance Hall?\"\n\nFortuitously we would soon approach the Lamar Bridge. I pointed it out to her and said \"take that road, Lamar Boulevard, South for about 3 miles, and it's on the left.\"\n\nShe smiled, a very nice one at that. \"And the Domain shopping center?\"\n\nI pointed west to Mopac. \"Take that freeway North for about 10 miles, watch for an exit on the right that will say Domain on the sign. Get into the right lane as soon as you can.\"\n\nShe smiled again. \"Just can't get used to exiting on the right, you know! You seem to know your way round. Could you have dinner with me tonight?\" I heard no Suzie signal at all for me. \n\n\"Sorry but I have exams coming up next week and I really have to hit the books tonight.\"\n\n\"Are you sure you are not going to hit our fun run leader tonight instead?\"\n\nI looked at her promisingly and said \"That would be tattling, wouldn't it?\" and dropped back a bit, obviously. She sped up to work on someone else. \n\nAs we continued by the rowing center Ivor dropped back near me and pointed out two skulls full of fit women in tight outfits, rowing hard, and racing against each other. He gave me the play by play. \"There's a fookin' wonderful sight! Stroke! Stroke!\" as he laughed almost maniacally. \"I love this town. It's like Stockholm with the thermostat turned up!\"\n\nWe passed by the high school, and the under the Mopac bridge. There were lots of bikers, runners, joggers, and walkers, aged from 18 to 88, with dogs, strollers, and in all manner of running outfits. I mentioned the swimming pool off to our right, and then as we passed into the park, the spring fed swimming hole frequented by topless coeds in warmer weather. Ivor took it all in, laughing, 'It just gets better and better!\"\n\nWe snaked around in the park, past the Stevie Ray Vaughn statue, and the Hyatt, and I pointed out the Four Seasons on the opposite bank. We ran back under the bat bridge, over the freeway choked with visiting cars, then along the lake toward the dam that defined the downriver boundary of the constant level lake through town. We went north across the damn, then turned west back towards the hotel. He commented on the apartments overlooking the lake and along the trail, and soon we were back at the hotel. \n\n\"Fancy a Guinness?\" he asked. \n\n\"I'd love to talk some more Ivor, but I have two more classes this afternoon, and midterm exams coming up next week. Perhaps another time or at least we can talk again Wednesday?\"\n\n\"Absolutely!\" He gave me what I thought was his business card, but he gave me three of them. I put them in my little shirt pocket, the only pocket I had. \"Get in touch when you can!\" he said, and he was off to the hotel entrance. \n\nSusan came up and gave me a pat on the butt, and said, \"Thanks for helping out, my Animal!\" I wanted a kiss, but I might have to wait until we got back to campus. We turned north and headed back. My wind was holding out fine, but my stomach was already growling again. I gave Suzanne a quick kiss and had to go to into my 2 PM class in my running stuff. It was good we had a casual dress code, although it did win me some funny looks, and I was cold sitting still. When I got back to the dorm I rushed to open my backpack for the ClifBar like an alky looking for his hidden bottle. I felt better almost right away. The rest of the afternoon went by in a blur. I was having trouble concentrating on school because Suzie signals were impinging on me from all around, like the wind noise from passing cars buffeting mine on the highway. I wanted to go off by myself somewhere to get away from them, but my stomach was soon growling again and was avidly watching the clock until the dining hall serving lines opened up.\n\nWhen they did, I went down and stuffed myself until I just couldn't swallow any more, and then ate two desserts on top of that. On the way out of the dining hall, inspiration struck. Although I was not a coffee drinker, I stopped by the coffee bar and grabbed ten of those little cylindrical sugar envelopes, for the emergency rations that I was sure I would need later this evening. I found an empty classroom in one of the buildings on the South Mall, and spent an hour 'teaching' each class that had an exam left. There were mercifully fewer people in the building at night, and the roar of Suzie signals was just dull white noise now. I made progress sorting all the review material out, and felt pretty good about the upcoming exams. I decided to work on the last two papers that were due before break, but then encountered a wave of lassitude and hunger. Five of the sugar envelopes kept it at bay, and I finished the draft of the paper for Engineering 101, and my outline for Rhetoric and Composition paper, and then went to the room to sleep about 1 AM.\n\nTuesday morning, after a massive breakfast and replenishing my store of sugar envelopes, I met Oiler at Painter Hall, where we boarded the bus that would take our F1 tour group north to the research campus where the advanced computing center was. He prattled on about the F1 teams in town. He knew the names of all the drivers, but to him the real stars were the engineers, mechanics, and pit crews, that had already begun assembling the 'blueprinted' engines for the weekend. I had moved the cards that Ivor gave me to my backpack, and I reached in to fish them out, intending to give Oiler one of the three. Before I could even focus on them he jumped a foot high his seat, and everyone in the bus turned to look at us, including Professor Lillehammer and the Dean of Engineering. \n\nHe cut back to a whisper, and said \"Where in hell did you get those?\"\n\nI saw that two of the cards Ivor had given me were different. They were laminated in plastic, with a holographic logo underneath like a credit card, and several QR codes, a magnetic stripe, and some colored bars on one edge. I handed him one while I studied the other. He groaned. \n\n\"These are fucking pit passes! How in the world did you ever get them?\" I sort of resented his emphasis on the word \"you\".\n\nI looked at the third card Ivor had given me. It was a more conventional business card, and I handed it to Oiler. He freaked out again.\n\n\"Ivor Greentree!\" He is a bleeding edge design engineer and a master machinist. This guy is amazing. He is so good that three different teams use him. Anyone else they could demand an exclusive contract from and get it, but not this guy. How did you ever meet him?\" Again there was that demeaning emphasis in his tone. \n\n\"Yesterday at lunch time, he introduced himself and then told me how much he admired Suzanne's ass!\"\n\nOiler looked worried. 'You didn't hit him did you? He gets in all sorts of fights, because apparently he just says anything, to anybody, especially when he's had a few beers.\"\n\n\"Nah, I kind of liked the guy! And I have to give him credit for recognizing that Suzanne does have an almost perfectly designed ass, which I guess any real engineer should recognize! He invited me out for a Guinness, but I told him I had to study.\"\n\nOiler moaned. For him it was paradise lost. \n\n\"But hey, I will see him again tomorrow. And if these are two pit passes, you can go with me, right?\"\n\nHe looked like a kid whose errant dad had finally figured out what he wanted for Christmas. \n\nThe bus stopped at the Pickle Campus (really that's what it's called) and we made our way to the little auditorium in the TACC building. I saw Spear Overtop in the queue, and lots of young guys with German or British tightly cut suits and narrow ties, in addition to a few other professors and grad students I had seen around campus. I saw someone waving and saw it was Ivor. I waved back, but we were already seated on opposite ends of the auditorium. \n\nWhen the group was settled, the lights dimmed and sharp clear image of a wheel and disc braking system appeared on the big screen. The wheel began to spin, and the little arrows that indicated the fluid motion of the air past the wheel and through its cooling surfaces began to move faster and faster, and the temperature of the wheel, bearing, and brake system, as depicted by the on screen colors of their component parts, began to change. Then the brakes were obviously applied, the air flow slowed, and the brake and wheel surfaces got a lot hotter than the bearings, which then heated too and seemed to change shape and vibrate a little bit. A voice from the back, which I presumed to belong to the British boffin who had done the paper that had been submitted and reviewed, but not yet published, said \"Bloody hell!\"\n\nThe image faded, and the backlights came on, showing in silhouette a very shapely woman standing with a laser pointer. She spun and it looked almost like the opening credits from James Bond film. They just needed to add the music. Her appearance silenced the voice and the entire room momentarily, and then the woman's voice said, with a throaty inflection, \"This analysis was made possible by the pioneering work of Dr. Nick Gruber, of the University of Surrey, that we have used as the basis of the simulations you are about to see.\"\n\nThe professor's ego was suitably mollified, and he sat back down, his fascination growing as Esmeralda's true beauty was revealed as the lights came up, and her true brilliance revealed as she detailed the material. Oiler then stood at the other lectern, and they went through the presentation contrapuntally, one asking a question that the other would soon answer, using the computational magic on screen to solve the riddles. Esmie was also using her fianc\u00e9e's experimental technique of a subtle strip tease, provocative pose, or sexual innuendo to highlight key points. The audience was spellbound, and she looked every bit as hot as a typical Bond girl. Of course, she could hold me spellbound just reading the crop price data from the commodity exchange.\n\nAfter the prepared examples, questions came from the group, especially from professor Gruber. Esmie asked for clarification and restated the problem until it was completely confirmed by the questioner, giving Oiler time to either find one of their prepared scenarios that applied, or improvise one. His coding appeared on a small monitor off to the side of the main screen, and it seemed to me that several audience members were following that work just as closely as the graphic display, and maybe more so. It was apparent to me that the setup they were demonstrating could rapidly adapt and display 'what if' scenarios in response to their questions, and with this audience I assumed they were the important and relevant ones. Oiler told me before hand that previous to using this supercomputer and the new programming language and algorithms the department had developed for it, each proposed analysis would have taken weeks or months to respond to. The murmurs from the audience told me they seemed to get that, too.\n\nOiler called time, thanked Esmerelda, and introduced the Dean, who thanked everyone again, even me, for my idea to put this whole series of meetings and lunch and dinner together. As we boarded the bus, the Dean said he wanted to join us for dinner, but he had previously not planned to. I said there would be plenty of room, but did not tell him where supper was going to be. I also told him I wanted to include a friend at our lunch at the University club, and he said fine. He and Spear Overtop sat together on the bus, and engaged in animated conversation all the way. During the ride, I got a text from Peggy, saying that they had met my mother's friend, Mrs. Hocheim, down at Three Rivers, and the tour was going well, including the cabrito that they were preparing for lunch. My stomach growled. As we approached the campus and the University Club, Dana Duke texted in a report that lunch and the golf tour was going well, and they would play the back nine after lunch and be back in plenty of time for dinner. \n\nIt was buffet service at the University club. As our group fell in line, I stayed back and looked for G\u00fcnter, but my stomach wanted to cut in line and get a plate right away. When he finally showed up, he was reluctant to get in the line. He looked really nervous.\n\n\"I need to talk to you about something private. I could not be comfortable with a group. I am a member here so let me get a table and we can order, and talk in private?\"\n\nAt this point I was so hungry I felt like a junkie who needed to fix, so I agreed. We sat down and the waiter brought us water and rolls and said he would be back in a second for our order. I inhaled two out of the three rolls in the basket before G\u00fcnter could even begin. The rolls were just barely taking the edge off my hunger. \n\nHe looked like he was about to throw up, but he went forward. \"You know that I love Strelsa, and I want her to be happy?\"\n\nI was looking for that waiter. \"Yes, and I think she loves you too, despite what her parents say.\"\n\nHe turned green. \"I didn't think about her parents! If they found out...\" his face went from green to white, then back again, but he went on. \"I, mean, I,...\" he threw up his hands in frustration. \n\n\"Come on G\u00fcnter, just say it plain English, or German if you must!\"\n\nHe looked even funnier. The waiter came and we ordered steaks. My mouth was watering. He also ordered a double screwdriver, which he downed instantly, and signaled for another, then said to me \"Strelsa has fantasies!\" \n\nHe sat back, relieved, like he had already said his piece. I waited. Finally I said, \"Don't you?\"\n\n\"Jah!\" he said in a guttural growl. \"And we even talk about them to make each other excited, and it worked gut, until...\"\n\nHe paused and looked around guiltily; \"Until Strelsa want to actually dooo dem!\" he was beginning to sound like a drunken and truly bad comic trying to do a Terminator imitation. \n\nHis second double arrived, and he finished it faster than I had the rolls, and then sat back. My turn, I guessed. \"What does she want to do?\"\n\nHis face froze, like he was being tortured. \"She wants to do.... you ... and me, at the same time!\" He collapsed back into his chair, eyes glassy, and he was through for now. The waiter caught my eye, and I tried to pantomime 'no more drinks'. \n\nI knew just how he felt. I think. I said, \"So G\u00fcnter, let me get this straight, she wants to have sex with both two guys, at once?\"\n\nHe shuddered. I guess it was tougher for him to hear me say it out loud. \"Jah! You are the only one she trusts to be nice to her and to never to tell anyone about it.\"\n\n\"So she told you to say this?\"\n\n\"Noooo, she would never tell me dis, it would hurt my feelings, and she is too nice for that. But I know she wants it, she talks in her sleep, in French, not Polish, and I can understand. If I know she wants it, I have to ask you for it for her!\"\n\n\"Do you think it will really make her happy?\"\n\n\"I dunno, but if it does okay she is happier, and if it doesn't then we can just not talk about it anymore and you will not either, and we can go on. \n\n\"Well, I would have to talk to Suzanne about it.\"\n\nHe sighed. \"Mine gott I am so embarrassed! But she will not talk to anyone else about it, yes?\"\n\n\"I will tell her not to. Give me some time, okay?\"\n\nHe actually laughed. \"How about ten years?\" \n\nHe looked like he was carrying the weight of the world on his shoulders. I felt bad for him, at least until the food arrived, and then it got my undivided attention. I put away the steak and fried potatoes in record time, and asked for another basket of rolls, then ordered dessert, too. I relaxed a bit from the insane quest for calories, and heard a Suzie signal from G\u00fcnter. I almost dove under the table to get away, until I realized it was not for me, but for Strelsa. I could actually hear a little male desire carrier modulated with images of Strelsa and Strelsa only. I guess he truly was in love. While I pondered this discovery, he signed the tab and said he had to get back to his office and then down to rowing practice on the lake \n\nI quickly rejoined my group, managing to get into the buffet line unobtrusively and make myself another loaded plate. The only seat left with the group was near Ivor, who was talking to Oiler, peppering him with rapid fire questions. They seemed to alternate between programming, machine tools, engine design, and metallurgy. Every time Oiler would answer a question he would then ask one of his own about how Ivor did things. I just ate and listened. I did learn some stuff. Finally Ivor stopped his questioning and turned to me. \n\n\"How to you know Oiler?\"\n\n\"He is a fraternity brother to an old junior high friend of mine, and he helps me with calculus, too.\"",
        "Oiler chimed in.\"Robbie introduced me to my girlfriend, Gretchen. Best thing anyone ever did for me, too!\" Oiler got a dreamy look in his eyes. He did have it bad for Gretchen. \n\nI laughed, \"She is gorgeous. I'd like to date her too, Ivor, but I'm much too short for her!\"\n\nI decided to ask Ivor, \"If you meant to give me those pit passes, is it okay if I give one to Oiler?\n\nIvor shook his head and said \"No\" and Oiler looked his dog just died, but Ivor continued, \"The ones I gave you are only good for time trials on Saturday. Oiler will have to have his own that covers race day, too, if he is going to be any bloody use helping me monitor engines. I'm split three ways and I need an assistant!\" He laughed.\n\n\"Plus if someone wants to take a swing at me, maybe Oiler being almost twenty hands high and almost twenty stone will make 'em think fookin' twice about it!\"\n\nOiler almost fainted. \n\n\"But wait a minute!\" Ivor said, \"Just how tall is this Gretchen?\"\n\n.....\n\nMeanwhile, back at the campus, Suzanne spotted Strelsa and waved. Strelsa had called last night and insisted that Suzanne meet her for lunch today. They both had crowded schedules, so they met on the windy and cool East Mall, roughly equidistant to their respective department building, where they could get a quick lunch from the food vendor carts and talk. They both got a hot eggroll and a bottle of water and sat close together, sharing the only spot left on a bench in the sun.\n\nStrelsa looked very nervous. \"I am sorry to take up your time, Suzanne, but I have a problem. Nora says you are a good and trustworthy person so I am going to ask you for help.\"\n\nSuzanne tried to look encouraging, rather than showing the puzzlement she felt.\n\n\"I will get right to the point. I am afraid I am not making G\u00fcnter happy!\"\n\nSuzanne paused. \"He seems pretty happy to me. He told Robbie he truly loved you!\"\n\nA little tear trickled out of the cornet of her eye, and she sniffed. \"I know he does, and I love him with all my heart, but I am not giving him what he needs, in, in, bed!\" Her face turned hard and cold and she looked at Suzanne apprehensively. \n\nSuzanne tried to look sympathetic. \"The Seven Year Itch, huh?\"\n\nStrelsa looked incredulous. \"I love that old movie. I watched on Classic Movie Channel two weeks ago when G\u00fcnter was out of town for rowing meet! I guess that really is the problem!\" Then her face fell. \"But we have only been married a year!\" and she began to cry actively, and their bench mates tried not to stare. \n\nSuzanne put an arm around Strelsa and let her vent a moment. \n\nAfter a few more sobs and sniffles, she spoke again. \"G\u00fcnter has fantasies!\"\n\nSuzanne was not surprised, based on the way he had been starting at her at dinner. But she also had seen how Strelsa looked at Robbie. \"Don't you?\"\n\n\"Yes, and we even talk to each other about them. It gets us excited, you know?\"\n\n\"Yes, isn't that good! Open communication is always good.\" \n\n\"But I think he really wants to do it!\"\n\n\"What did he tell you?\"\n\n\"Nothing! He doesn't want to hurt my feelings! But I know what makes him crazy when I whisper it to him in bed to get him hot!\"\n\n\"What?\"\n\n\"What they all want! Two women at once! And since he won't say it I have to ask you do it for him because I want him to be happy!\" She broke down completely, dropping her egg roll in the grass. \n\nSuzanne's first thought was that it would soon be squirrels versus crows versus seagulls in the contest to scavenge that thing, as the ants would be too slow. G\u00fcnter probably did want to have just one time what Robbie was getting most every weekend. And she could tell Strelsa from personal experience that it wasn't the end of the world, it wasn't even half bad, and in fact it got Suzanne really hot, too. And being with Lara, wonderful Lara, well, that's ....another subject entirely. She wondered if sweet and proper little Strelsa wanted two guys at once the way Suzanne did. Well, daddy would say this sticky wicket is just the kind of training exercise she needs to further her diplomatic career, which was not her goal But he would also say stall for time to think, even if you just argue about the shape of the negotiation table for a while. \n\n\"Let me think about it, Strelsa. I will have to talk to Robbie, too. \"\n\n\"But you are not married!\"\n\n\"No. but we are totally honest with each other about everything, including sex!\"\n\n\"Then I have to tell you one more thing, and maybe warn you about something. G\u00fcnter is, I mean he is hard to satisfy!\"\n\n\"You mean, he takes a long time to come?\"\n\n\"Sometimes, and sometimes he is very quick to shoot. But what I meant is, he is large, down there.\"\n\n\"You mean he has a big cock?\"\n\n\"Well, I have only been with him, but I have looked up the statistics. G\u00fcnter is about 4 sigma above the mean. It seems big to me.\"\n\nStrelsa sniffed and looked puzzled, then said \"I have to get back for office hours for the class I grade papers for. Please let me know what you can do?\" Please help me make G\u00fcnter happy!\"\n\n.....\n\nLunch completed, my tour group walked into the stadium proper and the rest of the group went into the athletic complex and then to the football offices and locker rooms. I made my afternoon classes, stomach growling right on the two hour mark, picked up the exam review sheets, and then dropped off my stuff at the dorm and walked over to West Campus to fraternity row and the UDP port early to check on the preparations for the combined dinner with the three tour groups. \n\nMost of the UDP members and pledges were still on campus. I walked back to the dining room and found the house mother and the kitchen staff finishing up the decorations, which weren't extensive. Just some F1 posters, some Longhorn football posters, and some fall leaves. The head cook was a tall young woman name Valerie, who loved to cook and loved to see the UDP boys enjoy it, and she had done herself proud. There was going to be lots of 'southern cooking' on display: fried chicken, corn on the cob, green beans with bacon, and collard greens in bacon fat, and for the vegan EU crowd there would be green serving dishes of beans, rice, black eyed peas, three different tofu dishes, desserts, and lots of other stuff I couldn't even name. \n\nValerie asked if I would please agree to taste everything now. She didn't want to ruin my appetite for dinner later, but she would feel more comfortable if I tried everything now! She might have expected the hug, but I think the kiss surprised her a little bit. The rest of the kitchen staff whistle and jeered, and she got a big grin on her face. \n\nShe walked me back to the kitchen and showed me how things were being prepared. That's when she heard my stomach growl. She chuckled, and fried up a chicken breast for me while I watched. I was spellbound. While the chicken cooled on the paper towel, she added an ear of corn, some greens, some black eyes peas, and a slice of pecan pie. Pretty nice little snack! It was so good I almost swooned. She was enjoying me enjoy her food. I pronounced everything fit for duty, and talked her out of another piece of pie. I felt very good and very comfortable. I had found perhaps the ideal afternoon snack to feed my growing needs. \n\nI took a quick nap on one of the couches in the room with the pool table, feeling full and at peace for the first time in days.  My stomach woke me in about an hour, already asking about my plan for dinner. I washed my face off, brushed my hair back with my hand, and joined to informal reception line as the first arrivals found their way to the dining room. The engineering group arrived first, with Ivor's booming voice telling jokes as they walked through the door. Professor Lillehammer took a look around and appeared pleased with the arrangements, and joined the serving line with everyone else. The golf group was next to arrive, with smiles all around. Two of the ESU alum pros from the senior tour had joined them for dinner, too, along with two guys on the current tour. I never realized how many Europeans followed golf. Suzanne came in from campus about that time and was soon surrounded by males asking her out. She smiled and deflected. When she saw me I got a little Suzie signal blip, just for me. It made my day. \n\nFinally the culture group trooped in. I had not looked at the final lists of group members, so was surprised to see Abelard Peters walking in, grinning from ear to ear. Right behind him was Peggy, smiling as widely as I had ever seen her. She spotted me and walked right over to me. When she got about three feet away she bounced up and down like a little girl that just got a pony for her birthday. But Peggy was not a little girl, by any means, and when she bounced, male eyeballs clicked all over the room. Having so subtly gotten everyone's attention, she proceeded to hug me and give me showy kisses on the cheek, with her other, larger cheeks still visibly shaking. As Peggy began to gush to me about her group and the people she met, I made eye contact with Suzanne across the room. She gave me the exact some look my Mom used to give me when I literally got caught with my hand in the cookie jar. But there was still a little Suzie beaming toward me, but it had a raspy overtone to it. \n\nAfter Peggy's update, she joined the line with her group, and Suzanne promptly strutted over to me. She took my arm, smiled warmly for everyone's benefit but mine, and spoke lowly in my ear, while digging her fingers into the inside of my elbow. \n\n\"My my, my Animal! I see you really do understand what I was talking about when I said sometimes you just want to rub up against something new and novel and big and meaty and bouncy, eh? Watching it move around when you play with it, feel it pounding up against you? Maybe get a little thrill out of kissing it? Tonguing it? Making it get excited? Making it juicy? You really do know what I mean, don't you? Such a perceptive and open minded man!\"\n\nOh shit. Smart girls. \n\nMy stomach demanded that I go through the line again and I lost myself in the mechanical task of chewing and swallowing. Oiler came by, talking excitedly about his chance to work with Ivor. Esmeralda had already been offered a summer research assistant gig at the University of Surrey, which would look incredibly good on her resume', whatever path she decide to pursue later. Peggy approached again, gushing about her job offer at a museum in the UK. She would take 18 hours next semester so she could finish her degree and take the job in May. She was going to have lunch with Abelard Peters tomorrow to discuss the details. \n\nFinally I had my second piece of pie, and the event wound down. I knew I soon would have to face Suzanne, but even I was able to predict that it would not be a good time to talk to her about G\u00fcnter's request for a two male threesome for Strelsa. She was talking to Esmerelda and Cisco, sitting as far across the room from me as possible. Oh woe is me! Finally they were about to turn out the lights, and the party was really over. She looked reluctantly at me, and then walked over. I stood and offered her my arm. She took it, without looking at me, and we started walking back toward campus. \n\nWhen we got out of earshot of everyone else, she said \"We need to talk!\" Generally speaking, those are the worst four words ever to come out of a female mouth. I waited her out. This is one conversation I was not going to initiate. It took almost a whole block.\n\n\"Robbie, I had an interesting lunch today, with Strelsa!\"\n\nUh Oh. I didn't see that coming. \n\n\"She asked me to do something for her, and I need to talk to you about it.\"\n\n\"Now that's funny. I saw G\u00fcnter at lunch today, and he asked for something for her, too!\"\n\n\"What the he want?\"\n\n\"What did she want?\n\n\"You first.\"\n\n\"No, you first!\"\n\nShe sighed like I was her kid brother and she was waiting patiently for me to finally grow up. I broke the silence by laughing.\n\n\"Do you want to do rock, paper, scissors; or just both say it the same time?\n\nShe finally laughed. I felt a little better, but just a little.\n\n\"Both at the same time\" She said. \"Three, two, one!\"\n\n\"She wants him to have a threesome with two women! You and her!\"\n\n\"He wants her to have a threesome with two men!\" You and him!\"\n\nShe looked as shocked as I felt. She got a brief and weird smile on her face, and then put on her negotiator's poker face. Uh oh. \"Well there's a certain goofy symmetry there, I suppose.\"\n\nBy that time we had reached her car. We gave each other a perfunctory kiss, and agreed to talk some more later. I went back to the dorm, stopping at the Wendy's hamburgers on the bottom floor before it closed. Then I went to bed.\n\nWednesday morning, I woke to my growling stomach, well before the alarm went off. I ate even more breakfast than normal, and bought two ClifBars at the in house convenience store. I went through my classes in a fog; awoken only by an unusual email, from a university address that I had never seen before. It looked like an official university email, on one their email 'letterheads' from the department of economics summoning me to a meeting about a 'potential honor code violation', said meeting to be held at a professor's office at 5 PM this afternoon. The professor's name was not familiar to me, but the office address was on the same floor as Suzanne's little TA office. What was going on?\n\nI changed into my running clothes and met Suzanne in front of the building, and we headed toward the Four Seasons. I asked about the email, and she looked surprised, too. \n\n'That sounds like the email they send when they want a student to take a test over because they think they cheated, or had someone else take it for them. You haven't done anything like that, have you?\"\n\n\"No, and I have never even taken a course in that department, either. What do you know about that professor?\"\n\n\"Other than where his office is, and that he specializes in South American economies, not much. Come to think of it, I thought he was actually teaching in South America this semester. I didn't even know he was even here.\"\n\nWe made it to the Four Seasons, and had mostly the same group, with a little turnover. We went clockwise this time, but without incident. Ivor told ribald jokes constantly, and reminded me to come to the pits for Saturday time trials. When we got back to her office, Suzanne said she would come to my 'hearing' at 5 to provide 'moral support'. Oh Joy. Then I realized the real import of the scheduled meeting. I normally went to the dining hall when it opened on the stroke of 5 and then ate urgently! If this meeting dragged on, I might collapse from hunger, or be held in contempt for my growling stomach. \n\nAt 5 minutes to 5, I showed up outside the office, and Suzanne was already sitting on a bench outside the office specified in the letter. She smiled, and gave me a ClifBar. Emergency rations, and well timed. I scarfed it down to quiet my stomach. \n\nA woman walked up to the office, carrying a clipboard, and looked expectantly at us. \"Ms. Pliskin?\" she asked?\n\n\"Yes?\"\n\n\"Follow me please.\" She led Suzanne through the office door, leaving me stranded in the hall. About five minutes later she emerged, looked at her clipboard again, and said, \"Mr. Roberts?\"\n\nShe opened the door, indicating that I should go in ahead of her. When I did, she smiled, then tried not to, and handed me a piece of paper and then went back out, noisily locking the door behind her. What was going on?\n\nI looked into the room. Suzanne looked at me, and said, \"Read the ruling, Robbie!\"\n\nI looked down at the paper, reading quickly. It was full of legalese, but it basically said that I had made promises to a student, telling her that I loved her, and telling her I wanted to worship her, and then I had not performed on those promises, thereby constituting a violation of the university honor code. I looked up at Suzanne to ask what the hell was going on, but she was not there, but there was an open door to a little office. I looked inside. \n\nSuzanne was naked, her clothes in the chair. Her hands were tied together at the wrists with a scarf that was then looped over a coat rack on the wall, essentially holding her arms helpless above her head. Her legs were spread wide and she was bent over at the waist, even more exposed. Her ass and legs were a vision of absolute loveliness. I looked up at her. She turned her head and looked over her shoulder at me, with eyes wide, and then glanced briefly down and her beautiful butt, and then looked back at me and put her tongue up against her top teeth. My reaction was very predictable. \n\nBut I steeled my will to make her wait, at least for a few moments. My cock had already steeled itself. I walked around to her left side, appraising her like she was a horse for sale. Her eyes followed mine, her expression confident, as if she knew she was the best horse available. She surely was, and I wanted a ride.\n\nI walked back to her right, and bent down like a golfer checking the line for a put, looking pointedly at her body and making noises like I was deciding whether to bid or not. Again her eyes followed and her tongue teased. She knew I wanted it. I pulled up the chair from the desk in the room, and sat down in it right behind her, letting my warm breath drift onto the back of her thighs. I forgot about my hunger, or at least focused on another hunger. I began gently kissing her legs, down low, and leisurely working my way up her calves to her thighs. Then I ventured into that magic transition zone between top of leg and bottom of buttock, and then up high on her taught and lovely butt. I began the process again down low with my tongue, leaving a little trail of saliva. She began to gasp. By the time I was licking up high between her butt checks, I could smell her glorious wetness as it formed. \n\nI lost myself in her, and suddenly put the tip of my tongue on her little rosebud. She drew a sharp breath and moaned softly. She relaxed even more, resting almost all the weight on her arms and the coat hook, and spreading her legs even wider. I explored like an anteater, trying to taste it all at once. She gasped again. The altar was pink and lovely, and I worshipped at it fervently. When she was fully wet, I stood up and entered her pussy, tuned into her Suzie, and dedicated myself to making her come. With our new connection I could sense her need, and was overjoyed that she needed me. I felt I could plug right into her feeling and pleasure her almost directly. This was where I belonged. Zen zone for me. I felt her orgasm coming much sooner than I had before. I stroked her even harder and deeper and was rewarded with her lovely sex clamping down on my happy cock, and one of her beautiful orgasms, signaled by a cute little sneeze. I pulled out and plunged into her ass. She was shocked, and surprised, but not unhappily so. She was tight and boiling hot, and I loved it. Soon she came again, and I felt it almost perfectly through the Suzie connection. \n\nNewly inspired, I got back on my knees and started licking the back of her pussy again. She liked it, but she wanted more penetration. I teased her, moving my mouth to her ass. She spread her legs even further and pushed her ass up into my face. Another orgasm. She shook. Finally I entered her ass again and pounded her. She was finally getting the penetration I knew she craved. When I was almost ready to come, I pulled out of her, lifted her arms over the coat hook, and then pulled up on them, forcing her to her knees. I entered her mouth and used the scarf and her hair to hold her head fast while I fucked it. Just as I came I pushed up on tiptoes and burst like an exploding shell into her mouth. I felt her, knew that she wanted it, she liked it, and she loved it. So did I. \n\nI unwrapped the scarf from around her arms and pulled her onto me, lying on my back on the floor and cradling her in my arms. We shook and cried together. And then my stomach growled, and she giggled. She turned and lay on her back resting on her elbows with her knees apart and up, grabbing the back of my beck and deftly moving my mouth back to her pussy, which I could not resist kissing. She sat back on one elbow, using the other hand to reinforce my head motions and influence their direction. ",
        "She began to talk again. \"I just love it when eat me like this. You just seem to know just when to zig and just when to zag just right for me. Right there, Robbie! I think we should help out Stelsa and G\u00fcnter out don't you?\"\n\nI started to move back a little to talk, but she used her hand to push my head into her.\n\n\"It's sort of like the modern version of that old O'Henry story about the wife selling her hair to buy for a chain her husband's favorite watch, while he sells his favorite watch to buy her combs for her beautiful hair? Except Strelsa and G\u00fcnter don't really have to or buy or sell anything, they just have to make it their priority to allow the other one pleasure. Right?\"\n\nI somehow thought that was an invitation for me to speak, and I raised my lips from her lovely bush and drew a breath, intending to speak. It was not to be.\n\n\"There!\" She pushed my head back into her. \"Oh now that is good, Robbie! Right there! Oh that tongue of yours is so wonderful! So how should we go about telling G\u00fcnter that you will do what he wants for Strelsa, and telling Strelsa that I will do what she wants for G\u00fcnter? \n\nI was about to say let's wait until after Christmas when we here from Nora because that might complicate things, but...\n\n\"Oh, baby, right there and a little harder! Oh Yeah! We also need to decide not just when to tell them and when we want to actually do things.\n\nSome suspicious part of brain began to think I was being conditioned. A wonderful tasty pussy to eat, lots of praise for the way I was eating it, and a lot of presumptive closing by saying things that I could not speak to refute, which she would then remember as agreement. I had heard of operant conditioning, but I don't think this is kind of a box that Dr. Skinner used. It was certainly making my little bird brain peck, or my pecker hunt, or something.\n\nI think you and G\u00fcnter should concentrate on Strelsa first, so I can watch and anticipate what it would be like for me! Then later Strelsa and I can help G\u00fcnter live out his fantasy. I am so glad you agree! Then perhaps we will see how liberated Strelsa is feeling about little old me!\"\n\n\"Oh please do my little ass now! I just crave you doing that! Oh, Robbie!\" \n\nI was sure we would discuss this again, I was just not sure exactly when.\n\nThursday I ate a big breakfast, stocked several emergency rations in my back pack, and tried to hit the books. As I walked to my classes, the sky was full of helicopters ferrying people back and forth to the race track, and the streets were fuller than usual, with lots of visitors to town. I sent Ms Wyrickie a text telling her how to prepare for my visit later tonight, by kneeling behind the unlocked door like Lara had, but sans blindfold. I had given this scene some thought, and this was a very different situation, but I knew what I wanted to do.\n\nBefore I knew it, it was time to meet the limo downstairs. The same driver drove by to pick up Millie, and took us the same elevator entrance.\n\nErminia was waiting alone without the guards, and I had her pleasure Millie the same way as before, listening carefully for any arousal or guilt. She must have done her homework, because she was much more effective in getting Millie off, and I heard no hint of her own pleasure, just concentration on Millie. I was going to use a little distraction training. I took out the little leather whip, and said \"trainee, you will continue to concentrate on pleasing your mistress, no matter what else is done to you!\"\n\nI popped the whip in the air, and she startled, and stopped her work on Millie for just an instant. I gave her a smart one on the butt. \"Keep your focus! That sweet pussy is your world! You must please it no matter what!\"\n\nI began randomly whipping her, on the buttock, thigh, calf, and bottom of her feet, strong and soft and sometimes just popping the whip in the air. She began to ignore the whip. \n\nMille came again, and said \"Oh, Ermie, so nice!\"\n\nI began popping Ermie a little more strongly, and she worked even harder to concentrate, and Millie popped another strong orgasm. Then I began hitting Millie too, and Erminia could not fail to notice that the strokes just added to Millie's pleasure. I wanted her to learn from Millie, to learn to associate the pain with stimulation and pleasure the way Millie did. The timing worked out serendipitously; Millie was just on the edge of coming, with Erminia sucking her clit, when one of my strokes caught Millie just right and she came, taken right over edge by the sting of the whip, and Erminia could not have failed to notice that, as Millie's glorious little squirt expressed itself into Erminia's mouth. I felt a little wave of pleasure from Erminia's Suzie for that instant, and then she forced herself to concentrate again. But the key finding was that I detected no guilt, just concentration. Maybe my plan was going to work.\n\nI had Erminia rearrange herself for the spanking that always ended the session, and I used my bare hands on her, hitting hard but leaving my hand against her skin to touch and caress for just an instant before raising it to deliver the next stroke. She noticed, and her Suzie told me she was anticipating and enjoying that one instant of pleasure between strokes, without any guilt. It was another encouraging sign. \n\nI had the limo driver drop Millie off at the Phi Phi house first, professing gallantry, but I really did not want her to tumble to my little evening scene with Ms. Wyrickie and Sarah. As we rode, for some reason I thought about Pavel, and his plans, I still had not figured out how he was going to pull it off with Sapiento under such a smothering security presence. I remembered my dad saying that the most important part of any sale was getting paid, and I guess that applied to kidnapping to. So follow the money, backwards. Pavel gets the money, via cash, wire transfer? How much? Sapiento is worth billions. But if they take Sapiento, then who has the authority with the bank? Erminia? Maybe not. Brujo Logoria? More likely, but how much could he authorize by himself? \n\nSuddenly it hit him me in the face. The best way to get paid the fastest and the mostest was to snatch Brujo Lagoria and leave Sapentio in place to facilitate rapid payment! And Brujo was going to be at the tennis tournament tomorrow without Sapeinto. What could I do? Who should I tell? I told the driver I needed a detour and gave him the address for Suzanne's apartment, and told him to hurry. \n\n.....\n\nDwight was getting bored, watching Suzanne read and study at her little desk, while she listened to Sir Edward Elgar's music. The good news was that in a little while she would stretch and shower and Dwight never got tired to seeing that. There was some noise out in the parking lot, and the external monitor showed a stretch limo pulling up right next to them. The plate recognition showed it to be one that sometimes carried the Gallos! A few seconds later the driver came up on the facial recognition list as one the Gallos had used before, and as Dwight watched the monitor, who should climb out of the limo but Robbie. An evening visit to watch the stretching routine perhaps, or to help with it? Dwight sure would be glad to help her out. \n\nHe looked up toward the door to her apartment, expecting to see Robbie going up the stairs, and then somebody banged on the door of the van!\n\n.....\n\nI saw the same cable truck in the parking lot at Suzanne's and banged on the door, and when it opened there was only one young guy inside, and I had seen him before. He was at the Driskill hotel political reception, I had seen him on campus in the parking lot near Suzanne's office, and I think I had seen him at least once at one of Suzanne's soccer games. He blinked at me in the streetlight's glare.\n\n\"Pavel's not going to grab Sapiento. He's going to take Brujo Lagoria so he can get paid faster!\"\n\nI saw recognition dawn in his face, almost immediately. He was quick on the uptake. \"Roger\" he said, and closed the door.\n\n.....\n\nThe kid could be right. How had the scenario geeks missed this? They must have considered the other members of Sapiento's organization as targets, but why did they assign such a low probability to the main financial advisor? A quick text message to the junior member of the scenario analysis team put the question on the table.\n\nMeanwhile, he was going to look at the coverage plan for that tennis tournament tomorrow a little closer. If he were Pavel when and how would he grab Brujo?\n\n.....\n\nThe door to the van closed, and I couldn't think of anything else to do but get back in the limo. I wasn't about to go up to Suzanne's right now, and potentially have to explain where I was going next. So I told the driver to go back to the original destination: Ms. Wyrickie's apartment building. I sent Sarah a text saying that I was on the way, a little late, and not to start without me. \n\nWhen I got to the building, Sarah was setting on the steps, wrapped up in full length Khaki raincoat and rain hat. She stood to greet me, and I surprised myself, and her, by putting my arms around her and kissing her fervently. Her Suzie said she like it a lot. Actually, I did too, and more than I thought I would.\n\n\"I sent Ms. Wyrickie some instructions, so she should be kneeling just on the other side of her door, and it should be unlocked. I am going to make her wait a long time before she gets any of the things she wants; so that when she gets it she will come like an explosion!\"\n\nShe grabbed my ass. \"That's very thoughtful of you, Robbie. What do you think she wants?\n\nI gave her a leer. \"I think number one on her hit parade is worshipping your lovely little snatch, a sentiment I can certainly understand!\"\n\nLines like that normally turned Sarah off, but for some reason when Robbie said it, it burned into the pit of her stomach, and warmed her legs. 'So that's going to happen last?\"\n\n\"Yep! I want you to be just as disdainful and superior as you were in class that one day. That seems to turn her on. I think she is a true submissive, and she can't let go and get off unless someone else is in control, and she has no responsibility. At first, let's tell her she is your robot, your drone, and that you are going to program and command her to do things, and that she must do them without hesitation. Then I am just going to do things to her, forcefully. Then I am going to make her watch me enjoy you, and then I will let her touch you. OK?\n\n\"Sounds like date night to me, sugar!\" Sarah was putting on a causal face for Robbie, but she was more excited than she had ever been in her life. She felt flush, and she heard her pulse pounding in her ears\n\nAs we went up the stairs, Suzie signals burst forth from Sarah like a trumpet chorus. They were so strong it startled me. She had only sent what I was starting to call 'flirty' Suzie for me before, but this was 'fuck me hard now' Suzie, and a very insistent variety of that. And that is just what I was planning to do, after teasing Sarah and making Ms. Wyrickie watch. I pushed the door open slowly, and we say Ms. Wyrickie, naked and kneeling, about five feet in front of the door. She had her arms bound behind her with a scarf, as instructed. Her nipples were up and surround by goose bumps, her eyes were wide, her face was flushed, and she was already breathing rapidly. Suddenly another Suzie serenade, this one tentative and strangely sweet, hit my brain, blending and contrasting with Sarah's. \n\nSarah started to open her coat, but I caught her arm and stopped her. She stood still, and I walked over in front of Ms. Wyrickie. \"Unzip me slut, using your teeth!\" She quivered and tried to comply. She had to use her tongue to get my little zipper handle to flip up, so she could grip it in her teeth. Wonderful feeling, that. She pulled the zipper down slowly and then used her tongue to try to open the little flap in my briefs. I was already mostly hard, so there was some resistance, and she had to take the cloth between her teeth to open if enough for me to pop out. When I finally sprang free, she looked wide eyed, and gasped. Sarah did too. This was going to be fun. Wyrickie opened her mouth as if to take my dick into it, and I slapped her! Surprised them both, but the Suzie chorus sang a little louder.\n\n\"You are not qualified to suck my cock yet, slut! Sarah is going to teach you how a really hot woman should worship it! And you had better learn quickly!\"\n\nSarah took her cue, and moved a little closer, then took off her raincoat. Wow. She had on the Playboy Bunny costume from the Halloween party, except there were no panties now, just garter belt and hose, and the top had cut outs for her nipples. It made the eye move instantly to her pussy and nipples, and my eye didn't want to leave either. She looked great. She had trimmed her bark brown pubic hair into a well defined little rectangle, but it was thick and bushy and curly and wiry, and her pink lips already protruded from it. It looked amazingly delicious. Wyrickie's eyes got huge, and she apparently shared my appreciation for it. My dick got harder and redder; a happy consequence of my improving conditioning and muscular development from all the running was that the blood supply to my dick seemed much more responsive and efficient. \n\nSarah took control. \"You are going to be my robot, my drone, and by commanding you I will teach you how to suck a nice cock like that properly. Of course, with those thin lips and weak neck you won't be able to perform as well as I could, but at least you will be able to help get it ready for me!\"\n\nThat sounded pretty good to me. I looked Sarah in the eyes, and pinged her with me sucking on those nipples. It seemed to me that they moved a little bit.\n\nSarah realized that she had just made a pretty boastful promise. She hadn't had that much experience sucking cocks. In fact, only with the one boyfriend that she had all through high school, and that just was just from senior prom night until she left for ESU. He came pretty fast, and she didn't really like it all that much, and he didn't reciprocate by eating her the way she wanted, either. But she wanted this cock. In fact, she was deeply sorry that Wyrickie was going to get it first. It looked warm and red, and Robbie legs and ass were wonderful, and he had already said he wanted eat her pussy. Boy did she want that too. But then she realized this was like a dress rehearsal. She would have to tell Wyrickie how to do a good job and sound like she really knew what to do, if she wanted Robbie to let her to it herself later. Luckily she had read all the articles in Cosmo, and had listened to lots of stories in her freshman dorm. She was going to make it so good Robbie begged for her to do it to him later.\n\n\"Use just your lips, slut, with your mouth closed, and kiss it all over. Smell it, concentrate on it!\"\n\nWyrickie began to comply, but kept her eyes on Sarah the whole time, as if seeking her approval for what she was doing. She had my approval so far, and I was really interested to see how creative Sarah could be. \n\n\"All over, every little bit of it, and don't you dare forget his balls! See how different they smell?\" Sarah found she was having no trouble describing what she herself wanted to do. \"Look at the ridges and veins on it. You are going to trace those with your tongue in a few minutes and learn how they feel and respond to it. Look at that big tube running along the bottom. You are going to flick you tongue across it later, so learn well where it is. Now look at the little hole in the front. You are going to just barely stick the end of your tongue into it, not forcefully, but playfully, to pleasure it. That is also were your reward will appear, if you do things well enough. And when it does, you must treat it like the gift it is, and love it, taste it, suck it all out and swallow it! It's good for you, too, like vitamins.\"\n\nSarah was really doing a great job getting me up for this, and Wyrickie seemed to be enjoying herself too. She kept her eyes on Sarah, Sarah seemed to be looking only at my cock, and I was watching Sarah's eyes and listening to her Suzie signal, carrier and modulation. Sarah was really into my dick, and I knew that soon it was going to be into her. \n\nOver about the next thirty minutes Sarah described, in intimate detail, just about everything I had even had done to my dick, or even ever thought about having done to my dick, and Wyrickie faithfully performed as directed. This lead to two major conclusions: first, I was just about to shoot; two, Sarah was really thinking about me shooting. I told her with my eyes and the quivering muscles in my legs, that my release was imminent, and she in turn directed Wyrickie to get it all and not spill a drop. I didn't have a several days of volume built up like my normal weekend routine, but when the first pumping spasm occurred, I was surprised at the force and volume. Wyrickie made a 'yumming' sound and swallowed lustily, and at that same instant a laser like and almost completely coherent Suzie signal burst forth from Sarah and rattled around my head, like aftershocks from firing a gun. \n\nWith startling fervor, Sarah shouted \"Suck it, Bitch!\" and grabbed the back of Wyrickie's head, and my ass, and pushed me all the way into that wet, wildly sucking mouth. I dutifully produced another impressive bolus, and Sarah shouted, \"Don't swallow it all yet!\" and for some reason, that set me on fire. I quivered like a rider up in the stirrups, and shot my final drops. Sarah groaned, and said, \"Stand up!\" and then kissed Wyrickie right on the mouth, sucking on her mouth like a wild woman, and tasting me. Her Suzie output rose to another level, and it was impossible to ignore, as it reached right down to my center of gravity. \n\nThen she pushed Wyrickie back down, shoved her head back on my dick and said \"Suck harder, slut, and clear out his tubes completely!\" Now that was my kind of girl. I looked into Sarah's eyes and they burned into mine. She was on fire, too. After it was surely all sucked up and out, she said \"Now take his balls into your mouth one by one, and gently suck and lick them!\" Wow. Finally she moved Wyrickie's head around under me and said \"Now lick that asshole, to show your devotion! Stick your tongue in it!\" I was absolutely spellbound, by Wyrickie's work, and Sarah's direction.\n\nFinally I was reaching the point of overstimulation. I grabbed Wyrickie's head and pushed her down to the floor, putting a foot on her neck and saying \"You will have to be better than that next time! Sarah was giving you perfect instructions but you weren't carrying them out very well! She sobbed on the floor. I walked over to Sarah and kissed her again, then turned to Wyrickie. \"Stay on the floor slut, and watch a man touch a real woman. Wyrickie sobbed again, but her eyes were glued to Sarah, and filled with lust. So were mine. \n\nI kissed Sarah tenderly, gently caressing her back and pushing her breasts against my chest. She literally melted into me and I felt the heat of her skin wherever we touched. Her Suzie popped into my head like our nervous systems were directly connected, and I began to tune for maximum heat. Slowly, teasingly I kissed her all over, carefully avoiding her nipples, ass, and pussy, but really working over everything else. When I nuzzled her armpits it sent her Suzie screaming sideways, and tonguing her navel also brought a fine reaction. Soon her pussy began to gush and flow and her nipples were so hard and crinkly they looked like they might shatter. I was frantic to taste her. \n\nI grabbed Wyrickie's head, gathered her hair up like a handle, and held it an inch from Sarah's sex. \"You may not touch it, slut, but I wanted you to know what a really wonderful pussy smells like!\" Her nostrils flared and she inhaled deeply, trying to collect every molecule she could. Her Suzie was a raspy mixture of signals for both Sarah and me, but mostly Sarah right now. After she drew two more deep and noisy breaths through her nose, I tossed her back on the floor, and said \"Now stay, bitch, and watch quietly. This may take a while!\" ",
        "I took Sarah's nipples gently into my mouth. The feedback loop was fast and accurate, and soon I knew exactly what her nipples liked: little bites and big strong sucks, and I gave it to her in spades. She threw her head back and sobbed. After a few minutes, I laid her on the bed, pulled her down until her butt was right on the edge, and kneeled between her legs. I gave her a look that said you are about to ne worshipped, and her eyes literally rolled back in her head. I glanced to the side at Wyrickie and she was completely focused on Sarah's now smoldering wet pussy, and did not even realize I was looking at her. I missed my chance to smirk. \n\nI started on Sarah's outer lips, fluttering my tongue gently and rapidly, and plugged into her Suzie for direction. We would probably only do this once and I wanted her to consider it a memorable occasion. Gentle and teasing was upping the Suzie ante, so I spread that technique all over. She tossed her head from side to side and murmured softly. With just the lightest flick on her clit she came hard, sweet juice flowing, long before I was expecting it. I looked over at Wyrickie, and her tongue was protruding from her mouth, mimicking my actions. I spoke to her, and she reluctantly look at me instead of Sarah's pussy. \"I just have to tell you, slut, this pussy is absolutely delicious! It's like nectar from the gods!\" \n\nWyrickie blanched, and Sarah gasped out loud. I dove back in, becoming more aggressive, and with my Suzie receiver making my tongue a smart bomb, I went for the kill, and soon Sarah was shaking with another crushing orgasm. She squirted some fluid into my mouth. I turned and looked at Wyrickie, moving over closer to her so she could smell it on my lips. \"She is a squirter, too, and a scrumptious little juice factory she is\" I leaned forward as if to kiss Wyrickie with Sarah's wetness still glistening on my lips, and she leaned into me, and then I moved away, back to Sarah, saying \"So good\" and then brought my face back down to in her snatch again. Sarah came one more time, bucking her hips up against my face, her Suzie exploding. \n\nI moved up to kiss Sarah on the lips, gently. I looked over a Wyrickie. \"Now I am going to give her what she really needs and wants, something you can never give her, a good, hard fucking!\" Sarah gasped again. I positioned myself above, kissed her again, and looked into her eyes. She tilted her pelvis up, and was clearly ready for me. I slipped my cock side to side against her nether lips, teasing her by moving it from side to side, and she tried to maneuver me into her. Then I touched the tip of my dick to her clit, and she gasped again. I was waiting until she asked for it. \n\n\"Fuck me, Robbie!\"\n\n\"Fuck me what?\"\n\n\"Fuck me hard! Fuck me now! Fuck me please!\"\n\nThat was the magic word. I slowly entered her. She was boiling hot, wet, and very responsive. Her Suzie sounded like a jackhammer in my head, so a jackhammer I tried to become. She moved against me strongly, thrusting up to meet me and rotating her hips to maximize penetration. When she came she let out a little yip like a puppy, and Wyrickie groaned, watching from the side of the bed. I had reached the beyond my wood zone, into the obsidian zone, and kept stroking her at the same pace. She came again, sucking on my chin as she did do. I shifted my weight and pounded her, and even though she was not nearly as big as Peggy, she took it easily, grabbing my ass and urging me into her even harder. I gave it all I had, she took it in stride. Wyrickie reach out and touched my ass in between Sarah's fingers, and urged me deeper into her too. Sarah came one last time, and her Suzie reached into my spinal cord and made me come with her. I shook and pumped and vibrated, doing everything I could to get as deep into her as I could, and leave as much behind inside her as possible. She vibrated like a belt sander for several seconds, and then panted like a dog on a hot day. I rolled over onto the side furthest from Wyrickie, who was watching intently. Had she guessed what was next? Had Sarah?\n\nPanting a bit myself, I held Sarah's legs up and apart in a wide 'V', and watched as Wyrickie's eyes locked onto Sarah's wet pussy. I looked down at it myself. It shone it the low light, hot, wet, and fragrant. You could almost see the steam rising from it, and for some reason the color and reflections reminded me of my grandmother's rhubarb pie, fresh out of the oven, but with a little cream on it. Wyrickie's tongue literally hung from her mouth.\n\n\"Tell me what you want, slut!\"\n\nShe gulped and swallowed hard, but said nothing. I grabbed her hair and put her nose an inch away from it. She tried to dive in, but I held her back. It took all the strength in my arm.\n\n\"You want to eat another woman's pussy, don't you slut?\"\n\n\"Yes.\"\n\n\"Tell me what you want!\"\n\nI want to kiss it and lick it and stick my tongue in it!\"\n\nReally? What a shameless slut you are! If I let you have it, what else will you do?\n\nShe looked at me as if to say 'don't make me say it', but I did. \"Say it, slut!\"\n\n\"I will suck your come out of it, and swallow it!'\n\nVery well, slut, but you better do it right!\"\n\nI let go of her head, and she dove for it. I leaned down and kissed Sarah gently and played with her nipples, as Wyrickie devoted herself fully to Sarah's pussy. Soon loud slurping sounds came from between Sarah's legs, and she shook with another orgasm. I kissed her mouth deeply, and Wyrickie was certainly tending the fire down below, so I moved around behind Wyrickie, suddenly hard again, and pulled her butt up, her legs apart, and entered her doggie style, She groaned, but never missed a beat, continuing to worship Sarah's pussy, which by now had to be thoroughly cleaned out. \n\nI began rocking into Wyrickie deeply and could feel her Suzie rising with each thrust. Sarah suddenly noticed the new motion, opened her eyes, and looked up, just realizing that I was now fucking Wyrickie from behind. Her eyes got wide, but then she reached down and grabbed Wyrickie's head and urged her motions on. I caught Sarah's eye and whispered to her, \"Are you ready to clean her out after I come in her?\" and she turned white as a sheet, then tilted her head back and came again, just as Wyrickie was starting to really get into being fucked. Then Sarah focused her eyes on me again. I said \"Get ready for it slut!\"\n\nWyrickie made funny squeaking noise and I realized she was about to pop. I let myself go and shot into her just as she came, giving her all I had. I flipped her over on her back and looked at Sarah. She was frozen in indecision, so I took her head in my hands and gently urged her forward to Wyrickie. I backed out of Wyrickie and gently urged Sarah's head down. When she touched Wyrickie, she relaxed and dove in, and Wyrickie's eyes snapped open. She saw Sarah, she saw me, and she got this huge smile on her face, and then grabbed Sarah by the ears. I just sat back a watched the two of them for a few minutes, and soon Sarah began to go after Wyrickie's pussy with reckless abandon, and Wyrickie directed her head enthusiastically, and came for the final time. Then they lay with Sarah's head on Wyrickie's abdomen and just panted with each other. \n\nI laughed. \"You girls put on quite a show!\" They both look mortified, but then I saw two big grins. \n\nA few kisses and hugs later, I told them I was going to miss class tomorrow, and showed Ms. Wyrickie the email from Lillehammer about the university's F1 meetings. She gave me a kiss and then said \"some things really do taste a lot better if you quit smoking!\" We all laughed. I headed for the dorm, cutting diagonally across campus to save time, and just coincidentally right by an old hippie style caf\u00e9 near campus that served pancakes with syrup with bacon, even at midnight. It was a noisy place, so none of the patrons noticed my stomach growling before my food arrived. \n\nWhen the door closed behind Robbie, Sarah looked around her and tried to fight through the absolute buzz of excitement that consumed her. She thought she had had some good sex before, but nothing like what had just happened to her had ever even crossed her mind. It was a state of consciousness she had never even contemplated before. Then Wyrickie rolled over on top of her, they put their heads between each other's legs, and passed the rest of the night in a way that would have shocked them both just a few weeks before. \n\n.....\n\nFriday morning dawned at the dorm, and I realized it was not going to be a normal day. My stomach had not changed its requirements, though, so my first stop was the dining hall, and even earlier than normal. Because I was meeting Lara and Suzanne at Suzanne's parking space, and then we were going to the tennis tournament together. Stomach full, I brushed my teeth, changed into my tennis stuff, grabbed my racquet, and headed for campus. \n\n.....\n\nDwight had missed breakfast when Suzanne drove to campus an hour earlier than normal, in a really nice dress, and instead of parking, picked up Robbie and Lara. He supposed they were all going to the tennis tournament together. Dwight had spent most of the night gaming out what he thought Pavel might try, and he thought he was ready, if he did make a move for Brujo at the tennis club.\n\n.....\n\nSarah Susskind awoke this Friday morning with a new sense of purpose. She had always been known as the 'drifting' one of all her many siblings. Her oldest brother decided to go to the Air Force Academy when he was nine, and systematically did everything possible to advance his cause and eventually achieve his goal. Her oldest sister was training for the Olympics, and all her other siblings already had solid plans. Sarah remained an undetermined major, and was running out of courses that would apply to all possible degree plans, and had to choose soon. She hadn't found anything that ignited her passion like her siblings had, but she assumed she would find her calling, and hadn't really worried about it. When her parents nagged her, she just let it roll off her back. Maybe they would be aghast, and maybe they would be happy that she had suddenly found her true calling, and just last night: to be Robbie's mate and mother to his children! She would take him any way she could get him. A traditional marriage, an open marriage, or a marriage with a series of shared threesomes with anyone he wanted, as long as she was officially and publicly his and with him all the time. She knew she had some major competition at the Halloween party: the tall blonde Dallas rich bitch princess in white leather from the Halloween party, the hot little supermodel in red leather, and the hot but haughty chick in the metal sex suit. Ms. Wyrickie would certainly want him too after last night; but Wyrickie would be more than willing to share him with her, so she was not really competition. But her sense of purpose was now unshakeable, and she would do whatever was required, pay any price, best any competitor, just so she could end up with Robbie. \n\n....\n\nSuzanne drove west from campus and then slightly north, heading for the old private tennis club nestled up against the river in a tony bedroom community. Suddenly traffic stopped dead on a normally sleepy little street. At 7:45 in the morning, out here, how much traffic could there be? Then I heard a strange screeching noise. I tried to look past the five or six cars stopped in front of us to figure out what was stopping traffic. Just as another, even louder screech sounded, I saw a big peacock with his tail spread out darting between the cars. There were several of them in the street, screeching loudly and paying attention to each other, but ignoring the cars. They apparently lived on the grounds of a museum nestled into the neighborhood, and were getting their morning exercise in the street. Once they all cleared the way, traffic began moving, and we turned into the driveway of the tennis club.\n\nWe parked and saw we were scheduled for a 9 AM court. Lara and I went to the little practice area to warm up. The high rollers and pro-am teams got the later court times; we were the undercard in this fight. Suzanne went up to the little rooftop seating area so she could check out all the guests and still see the match. The caterers were setting up snacks in a little sun shade area near the courts, and another set of caterers were setting up for lunch in the caf\u00e9 seats near the club building. \n\n.....\n\nDwight was up on the little rooftop seating area too, right next to the edge in a silly looking outfit with what looked like a photographer's bag, but actually contained much more. Several remotes had been placed last night, in trees and on light poles, and they scanned the grounds, prepped with little software routines that looked for facial recognition targets, reflections from optics like rifle scopes and binoculars, and cell phone emissions from phones identified as possibly linked to Pavel and his crew. He saw Erminia and Brujo arrive in limo, and take a seat in their box near the court. It was a pretty exposed position, and if they were really worried about a sniper, it would be a bad spot to put them in. But for observing all avenues of approach, it was not bad. \n\n.....\n\nLara and I waved at Erminia and Brujo as we saw them set in the little box seats close the parking lot. The caterers were finished setting up the snack tables and were rolling their big food carts toward their truck in the parking lot. One of those caterers looked familiar, maybe from Spear Overtop's place? Wait a minute. \n\n....\n\nThree things happened at once. Facial recognition popped two matches, both to members of Pavel's crew, and both in white catering outfits, walking toward Brujo. Robbie stood up and started walking towards the caterers, and Lara followed him. And two other agents, who got the same facial recognition alert, moved their vehicles in to block the catering truck from moving. The door on the side of the surprisingly large catering cart popped open, and Pavel jumped out, running toward Brujo. Then he saw the agents blocking the truck, and Robbie moving toward him. He cursed in Russian. Dwight figured a pro like Pavel would have an exfil plan for every possible problem, like a good pilot always tried to have an airfield in glide range. But then Pavel saw Lara, with Robbie, and something snapped. He ran toward Lara, his gun drawn, shouting \"Pizda!\" at the top of his lungs. They were close the edge of the building, and nobody else was close to them, and Dwight began to calculate the angles. \n\n.....\n\nRobbie heard the shout, and saw Pavel running toward Lara, with a crazy look on his face, and a gun. Robby had a tennis racquet, not gun, but Pavel pissed him off. He interposed himself between Pavel's path and Lara, and prepared to return serve. Maybe if he could hit his gun hand hard enough, he could break a finger, or ruin his aim, or something. \n\n.....\n\nDwight reflected on his training, which his instructors had screamed in his ears ad infinitum, had cost a sum total of over $100 million. MIT followed by equivalents of BUDS, SWAT, EMT, and CIA schools. Trade school classes on elevator repair, cell phone sites, traffic control systems, alarm systems, a week of survival training, sniper training, hacker training, fireman's training, and most relevant now, a one week course called the 'Firearm Free Funhouse\" with hand to hand and improvised weapons training on stairways, rooftops, and balconies. Robbie was crazy to take on a Spetsnaz trained Russian gangster with a tennis racquet, but the kid had balls, and it might delay or deflect the first shot. But Pavel would get back on target for the second shot, so Dwight had to get here before that. Combining what he had learned about dropping heavy planters on people from balconies along with a SWAT exercise called 'the drop', he calculated his best approach vector, and jumped off the roof. \n\n.....\n\nPavel got within range and I swung, using about the same move I had used to drive off one of Melanie's gentleman callers. I actually made contact, which surprised me and seemed to surprise Pavel even more. A quick follow up backhand caught the side of his face, not doing any real damage but really pissing him off. Lara made it around the corner of the building by then, so I felt I had accomplished my goals, but Pavel stopped, grinned, and raised the gun toward me slowly, it least it seemed slowly to me. At least he wouldn't hit Lara.\n\n.....\n\nSuzanne looked up from people watching when someone yelled \"Pizda\", and then watched frozen as Robbie hit Pavel, twice, with his tennis racket, and then Pavel raised a gun toward Robbie. Oh, God, No!\n\n.....\n\nI was looking the business end of a Pavel's gun pretty soon, even though it seemed to come up in slow motion. My first thought was that it was indeed pointed right at me. But then I thought, damn, that's just a fucking .22 long, you Russian piece of shit. \n\nI shouted, \"Remember the Alamo, Motherfucker!\"\n\nHe smiled widely, and it was not a nice smile. He said \"Goodbye\""
    ],
    "authorname": "conanthe",
    "tags": [
        "bdsm",
        "formula one",
        "spanking",
        "anal",
        "creampie",
        "oral",
        "threesome",
        "fraternity",
        "football",
        "sorority"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-16"
}