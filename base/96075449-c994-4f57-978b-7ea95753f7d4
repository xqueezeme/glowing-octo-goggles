{
    "title": "The New Principal Ch. 14",
    "pages": [
        "I spent a good deal of the rest of the break trying to process my meeting with the twins. I even saw them on campus a few times, but they were always with a small group of the other students who stayed for break, so I didn't approach them. And I was still shaken up by the unknown people that had been watching us. I assumed they had to be other students, probably the ones that they were hanging out with. Not knowing who had been watching while I plowed the two girls was unnerving and, of course, dangerous. \n\nI also remembered what they had said about people always watching and the need for discretion. I wasn't paranoid by nature, but I was starting to get there.\n\nI couldn't seem to control my lust anymore. Was it a side-effect of the trick? Hell, after all, nothing was real in the theater, right?\n\nThe bigger issue was that I'd never slept with a student before, and I was not feeling great about that. It's true, I wasn't strictly a teacher here, but it was surely not right for a principal to be sleeping with students, no matter how eager... insistent... hungry... they were. I was very aware of the circumstances of my leaving my last school.\n\nIn the end, I let myself believe that since they were adults, this wasn't like the high school I used to teach at, we could make decisions as adults. It was the flimsiest of excuses, and it certainly wouldn't stand up a second in any kind of investigation, but it was enough of a fig leaf for my morality that I kept myself from self-loathing. Mostly.\n\nThe week before class was to start up for the summer semester was an insane whirlwind of small but urgent crises that took all of my attention and more energy than I had. Luckily, Kimberly came back on that Thursday, which turned out to be a more than frantic day. When I came in that morning, she was there in her office, deep in a pile of papers. Without her taking over the lion's share of paperwork, I never would have survived. \n\nI also noticed that she looked a little different. It took me a bit to figure out what it was. That was the first day I had ever seen her not wearing one of her array of very conservative jackets. Well, to be fair, I had seen her in a lot less, and nothing at all, but at work, she had always been decked out in thick wool from neck to toes. But there she was, in a simple white blouse. It was buttoned up to the neck, almost choker-tight, but still, this was a wonderful precedent. \n\nShe must have felt me looking in on her, because she glanced up, and blushed hard. \n\n\"Good morning, Kimberly. I can't tell you how great it is to have you back. Looks like you got a bit of sun over break, eh?\"\n\nHer skin was normally alabaster-white, with a generous spray of freckles, but the red of her blushing was competing with a hue that had to be something near sunburn, especially over her nose and forehead.\n\n\"Good morning, Principal Lee. Can you really tell? I sunburn so quickly. I always put on so much sunscreen, but it never helps. How bad is it, really?\"\n\n\"It's not bad at all.\" I wondered how far I should push. \"You look gorgeous, in the pink of health!\"\n\nHer blush deepened and spread. \"I'm a lobster.\" She groaned.\n\n\"Seriously, you're just pink. You look great.\"\n\n\"Thank you. I don't believe you, but thank you. Did everything go okay over break?\"\n\nShe was obviously trying to change the topic away from her appearance, and it was probably for the best. I was doing my best to pay less attention to her wonderful breasts that were straining against the taut fabric of her blouse, and I don't think I was as successful as I wanted to be.\n\n\"Pretty well, overall. The gym buildings are all finished off, and there's really good progress on the dorms. They'll be basically done by the end of the first week of classes. I assume you saw the emails about the logo redesign and the ad campaign. We're getting surprisingly positive reactions about the new Bright Hall Academy. And even that stupid video I shot isn't being laughed off the internet, so that's something.\"\n\nShe smiled. \"Your video was great. The tone was just right, a perfect balance between welcoming and sophisticated. Exactly the mood we want to push going forward.\" She looked at me a little oddly, maybe a bit too long, but her smile was wide and pure. \n\n\"I did want to walk with you around campus today if you have time. Have you seen everything yet?\"\n\n\"Ahh...\" She looked around at the piles of paper and folders on her desk. How long had she already been at work? \n\n\"You can't lock yourself in here all the time. I need you energetic and focused. Burning out on your first day back makes you no good to anyone.\" I smiled in hopes of showing her my genuine care.\n\n\"Well, if we keep it short. A quick tour, then I've got to get back. We've got more late enrollees than we planned for. We're going to have to overfill classes after we promised that we'd keep those numbers down. You'll have to have that talk with the faculty, and they aren't going to be happy about it.\"\n\n\"Well, more students, that's a good thing. We'll work it out. So. Walk with me?\"\n\n\"Okay, okay. Give me five minutes to finish off this email and I'll pop by your office.\"\n\nI barely had time to drop off my things and boot up the computer when Kimberly knocked on the door jamb.\n\nShe was just a vision. The light shown through from the windows behind her. She was leaning in the doorway like she was posed by a World War II pinup artist. Her brilliant red curls seemed even wilder than usual, only partially tamed into a cascade over the side of her shoulder, but mostly flowing free. The rosy tint to her face reminded me of the blush that I'd seen that morning, but also the mad flush of orgasm that ran over her face and chest brought on by her own fingers, and then by Jennifer Lashgari through that mysterious spy camera. And had she just put on a brighter lipstick?\n\nI was disappointed to see that she had put on her jacket, but at least she hadn't buttoned it up. Her long dark grey skirt was also part of her old wardrobe, but the way she had her hip cocked to the side showed off the curve of that incredible ass right underneath, and the flow of the skirt fabric draped over her knee, hinting of delights unseen.\n\nI must have been staring, but she just smiled and waited for me to snap out of it. \n\nI did, eventually, after what seemed like minutes.\n\n\"Uh. Hm.\" I coughed at my own embarrassment, but she didn't react. \"Ready to go then?\"\n\n\"I'm ready when you are.\" She spun around and headed out to the reception area. Her skirt wasn't made for it, but it spun up a bit, giving me a glimpse of ankle. Only then did I realize how erotic that could be. Maybe those stuffy Victorians were onto something. \n\nAs I got up to follow, I had a fleeting thought. This was new. Was Kimberly trying to loosen up a bit? It was almost like she was teasing me, but I didn't think that was in her. \n\nAs we walked toward the dorm, I asked her about her break, but she didn't say too much. She had stayed with family and got a little time down at the beach. It sounded like there was drama back with the family, so I didn't push.\n\nThe dorms were really coming along. Luckily, they didn't need structural work like the gym buildings. They mainly just needed upkeep and cosmetic attention, but that made a real difference. Clandon and his men had really outdone themselves. \n\nKimberly actually gasped when we opened the main door into the foyer. It truly was gorgeous. There were sofas and social tables with comfortable chairs. All the old moldy carpets were gone. And the new look was all done in a classy understated way, with light accents in the school colors and dark wood trim. It was what Kimberly had plotted out, but with variations and improvisations made by people who knew their work extraordinarily well. \n\nKimberly started gushing, walking around the room and touching everything, commenting about the way things had come together.\n\nThe sound of her voice brought Clandon himself out from wherever he had been working.\n\n\"Miss Kimberly, will this be alright for you then?\"\n\nShe rushed over to him and pulled him into a joyous hug. He was clearly not prepared for this response, and didn't know how rightly to react. It was all I could do to keep from laughing at the expression on his face, somewhere between terminal embarrassment and deep heartfelt pleasure.\n\nKimberly realized what she had done and popped backward in dread.\n\n\"Oh, Mr. Clandon, I am so very sorry. I just... I never should have... I don't mean...\"\n\nHer embarrassed rambling gave him enough time to regain himself.\n\n\"No, no, Miss Kimberly, don't you even think twice about it. You mean to say you approve of the work so far?\"\n\n\"Mr. Clandon, it's so much more wonderful than I hoped. It's one thing when you and I were talking about broad ideas... but then to see it all come together... The students are going to absolutely love it. And Principal Lee? This, this right here is where we start our campus tour video.\"\n\nShe reached out her arm, this time cautiously, to allow Mr. Clandon to take her in arm and guide her around the dorm. His dignity came out in full, and he looked like a proud father, taking his daughter down to see her prom date. It really was adorable. \n\nMost of the dorm rooms would be ready for the summer semester. The crew were mainly doing polish and detail work all over the building right now. We were only waiting for materials to finish off the handful of rooms that still needed to be worked over. Another group had come in the previous week to set up the air conditioning, and Veronica would take care of the wiring, or rather the wireless-ing. \n\nI nearly expected Mr. Clandon to give Kimberly a gentlemanly kiss on the hand as we left, but a handshake seemed to carry the emotion well enough. I thanked him again, and then silently thanked my luck to have Kimberly to find people like him for me. \n\nWe were walking out of that impressive foyer when someone jogged up to us and fumbled out an awkward introduction.\n\n\"Mr... ah... Mr... P-principal. Principal Lee.\" He looked at the floor, horribly flustered, darting glances up alternately at Kimberly and me. \"Miss Adams... I'm Ken Taka-Takashima.\"\n\nI was surprised. Everyone I had seen at work at the dorms was nearly geriatric. This guy was clearly not older than thirty, but he was dressed in overalls and plaid just like the rest of Clandon's team. \n\n\"Hello, Ken, are you one of Clandon's men? You all are doing incredible work here.\"\n\nMy praise seemed to embarrass him more.\n\n\"Yess... yessir... Thank you, sir.\"\n\nKimberly again came to the rescue, giving him a kind voice that seemed to calm him somewhat.\n\n\"Ken Takashima? Are you Hiroshi's son?\"\n\n\"Yes. Yes, he's my... my father.\"\n\nThey chatted for a moment about the town and his father. Ken gradually become less anxious, and eventually let us know why he had run us down.\n\n\"I heard... well, my f-father heard... You know how everyone finds everything out around here.\" He looked up at us both, as if for approval. \"So... He heard that you were going to p-put in a hot springs here, and he's furious. But, you can't. You can't. You can't have Mr. S-sandle do it.\" He started to get more agitated. \"He'll screw it up... He'll... He's not right...\"\n\nIt seemed like Ken was getting ready to get caught in a verbal tic, so I broke in.\n\n\"Ken, you're right that we were thinking about it, but we haven't made any decisions. We would love to put in a hot spring spa, but we don't have the money, and Sandle doesn't even have the right people.\"\n\n\"Ken,\" Kimberly's voice was soothing. \"I understand your concern about Sandle, but why is this so important to your father?\" \n\n\"You haven't h-hired Mr. Sandle?\"\n\n\"No. I'm not sure his team would even be the right team for the job. I'd rather have you and Clandon's team to be honest, but like I said, we don't even have the money right now.\"\n\n\"Ok. That's good. I'll t-tell my father. He might want to talk to you. Would that b-be okay?\"\n\nI looked at Kimberly, assuming she understood what was behind all this, but I only got a shrug.\n\n\"Sure, Ken. I'd be happy to talk to your dad, but what would he want to talk to be about?\"\n\n\"I... I'm not sure I should say... He gets... He's really weird about old stuff. Just... Let me tell him, and maybe he'll want to talk to you, okay?\"\n\n\"That's no problem, Ken. He can drop by any time, or he can call me, and I'll set up an appointment with Principal Lee.\" Kimberly handed over a business card, one of the brand-new cards with the new logo.\n\n\"S'okay... He knows how to get a hold of you. T-thanks, both of you. I need to get back to work. Mr. Clandon... He won't tell you, but h-he's really proud of this job. Thanks for that, too.\"\n\nWe were left in a muddled confusion as Ken moved off to get back to work.\n\n\"What was that about?\"\n\n\"I have no idea.\" We started making our way to the gym. \"Hiroshi Takashima's a townie. He's super sweet, maybe a bit of a letch, but super sweet. He's not old Bright Hill, though. He came here back... I don't know when, before my time anyhow. Oh, and his daughter, that would be Ken's half-sister, is one of those late enrollees that's starting this summer. I think she was trying to get into Berkeley, but something went wrong.\"\n\n\"What's Hiroshi's story?\"\n\n\"What do you mean?\"\n\n\"C'mon, I keep hearing about how everyone knows everyone's business around here. I want to finally hear some for myself!\" \n\nI chuckled, and she joined in.\n\n\"Fine, fine... I don't know the whole story, but what I heard was that he came here a widower, just him and baby Ken there. Within the first year he was here, he was married to a local. It was a bit of a scandal. The rumor was that she was pregnant before the wedding. Quite a scene. Turned out she wasn't pregnant, I forget her name though. They're still together. I'm sure we'll meet them at one of our open house events.\"\n\n\"Now that's the kind of small-town gossip I've been looking for!\"\n\nKimberly took on a mock horrified expression and her southern accent came out hard. \"Principal Lee, you hush.\" But she couldn't keep herself from giggling. What a lovely sound. Maybe she really was opening up. \n\nThe walk-though of the gym buildings was straightforward. Everything was in place and ready. Sandle's team got their bonus with time to spare. As expected, everything looked solid and impressive, but somehow rather uninspired. \n\nKimberly was quite pleased though. She looked carefully all around the new work, checking for poor workmanship, but found nothing.\n\nI showed her where the hot springs would go, and we looked out over the lightly forested area that led up to the sheer rock face. Behind that rock face was supposed to be the raging spring. Just knock a hole and...\n\nThe more I thought about the idea, the more attached I got to it. It really wasn't very educational, but it would be a real differentiator in recruitment. \n\nKimberly was apparently thinking along similar lines. \"Think how that would look on a brochure.\"\n\n\"Right? How many schools have their own spa? And how wonderful would it be to take a dip in a nice searing hot spring bath right after my morning run?\"\n\n\"That would be divine.\" I could see Kimberly's shoulders droop in expectation of the scorching water. I wonder how much it would really cost...\"\n\n\"Sandle said we would need planning permission from the town, stonemasons, and outbuildings. Not cheap.\"\n\n\"Maybe not so expensive... Can I look into it?\"\n\n\"Sure, knock yourself out. I would love to find a way to make it happen.\" \n\nShe stared off into the distance, getting lost in the idea.\n\n\"There's another place I wanted to walk through before we get back to the office. Have you been down to the basement of the class building?\"\n\n\"Hm? You mean Veronica's office?\"\n\n\"Not exactly. Come on, I'll show you.\"\n\nShe looked down at her watch, but followed.\n\nWe walked through the library and down the stairs to the basement hallway.\n\n\"I almost never come down here. When I was a student, I never had classes down here, and Ms. Rai... Well, I really do love her, but she can be a little scary and territorial. This is her world, and we all kind of stayed away from it.\"\n\n\"So, you've never been down through this door?\" I took out Veronica's key and opened the door to the narrow hallway.\n\n\"I don't think so...\"\n\nThe light faded as we walked down toward the dressing room. Kimberly put her hand on my back to follow along in the dark. And just like before, I opened the door and pushed through the curtain into the dressing room. \n\n\"It's just through here. I think there are lights over here.\"\n\n\"Where are we? I know I've never been down here, now.\" \n\n\"You'll see in a sec, just follow me.\" \n\nShe reached out again to my shoulder so I could lead her through to the backstage area, but when she followed me through the door, she stumbled and fell into me.\n\nI was able to keep my balance, but she pushed me, and I spun against the wall. The only way I could keep her from falling was to grab ahold of her around the waist. \n\nWe both laughed at the silliness of it all.\n\nBut it did leave us in a rather compromising position. I was backed up against the wall, holding Kimberly around the waist. As she got her balance back, she ended up with her legs on either side of my right leg.\n\nI didn't let go of her, and after a brief hesitation, she leaned closer into me.\n\nIt was pitch dark, but she leaned close enough that I was able to see her eyes, and I slipped into her mind just as easily as before.\n\nI was surprised to see how aroused she was. In her mind, it was clear to see that she had been ramping up a need ever since we met in the office that morning. I remembered her pose in the doorway, but I had been oblivious to her attitude through the rest of the tour.\n\nIt seemed that she hadn't been able to get any sexual release over break and she was nearly busting with desire. The target of her lust was a huge mess though. I saw mainly flashed images of Jennifer, mostly visions of her smile, but often the image was of her splayed out nude, the point of view aimed up from between her legs. There were also images of me that flipped through her lust. They were much more inventive, some created out of her imagination, and some based on memories: Me sitting at my desk, or with her at the campus caf\u00e9. Then there was one of me in my running gear on the beach. When did she see me there?\n\nBut the overwhelming urge was clear. She wanted to kiss me. Rather, she wanted me to kiss her. She wanted me to spin her around and pin her against the wall and kiss her hard. She wanted my hands all over her, and as she thought more about it, her desire only grew. \n\nShe was worried about a physical relationship harming our work, but this resistance was getting hazier as her need built. There was no concern about cheating on Jennifer. She felt confident that Jennifer would approve somehow.\n\nI pushed her lust gently, but it responded with a sharp spike. \n\nShe leaned tighter into me and purred into my ear. I could feel those big boobs push against my chest.\n\n\"Principal Lee...\" Her voice was low and her accent strong. \"Did you lead me down here in the dark on purpose?\"\n\nI pulled her tighter against me, and ran my hand lower to right above the curve of her butt. I caressed her through the layers of her clothes as well as I could. \n\nKimberly had been turning me on ever since I heard her voice in the interview, and when I saw her in person back on the dock, I could barely control myself. But I hadn't planned on trying anything. Well, I fantasized about her, but I didn't plan anything specific to seduce her. I certainly didn't bring her down to the theater with that in mind. \n\nHowever, I wasn't a man to let a good opportunity go to waste...\n\n\"Kimberly, how could you think that of me... I just wanted to show you this place. I thought maybe we could renovate it and put it to use.\"",
        "I obeyed the first part of her desire and rolled her against the wall. I pushed against her into the wall. Her legs were caught by her long skirt, but they pushed out to nearly straddle my leg.\n\nShe whimpered in excitement, then leaned into my neck. Her arms slid around me, hands rubbing up and down my back.\n\nI lifted up her hair, so heavy and kinky, so I could lower my lips to her neck. Pushing aside the collar of her blouse, I kissed her lightly. In a flash her hand was on the back of my head, pulling me down into her.\n\n\"Oh, Principal Lee... I was hoping fer this...\"\n\nShe cocked her head back, giving me full access to her neck, and I took advantage of it, kissing and nipping at every exposed inch of that pale expanse of flesh that had escaped the worst of the sun.\n\nHer hand that wasn't urgently pressing me into her reached in between us and started unbuttoning the top of her blouse. My lips followed her fingers, kissing lower and lower as more skin was laid bare. It was so dark that I worried I wouldn't get the full view of her breasts that I had been waiting so long to see in person.\n\nEach kiss brought a groan of hunger from her, and soon, we had reached the top of her bra. Without hesitation, her fingers dove deep into her cleavage to work at the clasp, and with a practiced pop, the bra flew open on releasing the stress holding her boobs tight.\n\n\"Oh, god, Principal Lee, I don't know what it is, but you've got me so hot.\"\n\nI pulled the cup off her breast and was treated to the beautiful vision of her broad pink areola and pebble-hard nipple in the darkness. I couldn't resist diving in immediately and nibbling away.\n\nThe moment my lips touched her nipple, she gasped in delight, pulling me closer to her. I nearly ripped the rest of the buttons of her blouse, tearing at her clothes to get at more of her. This seemed to be exactly what she was wanting. She leaned back into the wall and was finally able to wrap a leg around mine, and she pushed her hips hard against me.\n\n\"Hello! Is anyone back here? Principal Lee, are you down here?\"\n\nThe voice rang out from the dressing room, only a few feet from where we were. I immediately recognized it as Veronica's. \n\nI looked at Kimberly's face to find her caught in a jumble of horror, shock, and the lingering but still heavy layers of lust. She was paralyzed, so I tried to do what I could to salvage things.\n\n\"Kimberly, you go put yourself together. I'll take care of Veronica.\"\n\nShe nodded slightly, so I pulled reluctantly away from her and gave her a gentle nudge to send her toward the other side of the backstage area.\n\nI shouted out more loudly than needed, \"Veronica, is that you? We're looking for the lights. Where are they?\"\n\n\"Ben?\" \n\nI came into the dressing room and ran nearly square into her. I was already so worked up that I wrapped her up in my arms and squeezed her tight. Without a thought, I leaned down and kissed hungrily. \n\nShe was a bit shocked, but didn't waste a moment in kissing me back. \n\nQuickly though, she regained her composure and slid her head to the side so she could whisper in my ear.\n\n\"Who's here with you? Kimberly?\" \n\nI thought through telling her the whole story. I wasn't worried about her being jealous, well, not much. We had made it clear that we weren't exclusive, and anyway, the way she reacted when we watched Kimberly and Jennifer together... Well, I thought there was a more than even chance that Veronica would be more interested in joining in than being angry. My worry was for Kimberly. She was shy, or at least I had thought she was until a few minutes ago, and I'm not sure it was right to talk.\n\nOn the other hand, I knew I could trust her. I whispered back, \"Yes, Kimberly... She nearly jumped my bones down here. I didn't think she had it in her.\"\n\n\"Oh, I see, that's what's got you all excited.\" There was a smile in her voice as her hand dropped to my pants and grabbed onto my hardness. \"I would love to take advantage of that right now. I just got in town and I didn't get any relief over break except with the help of my toys.\"\n\nShe stopped talking to kiss me again. I ran my hand down to enjoy that glorious firm butt. She yelped a bit when I squeezed her, but it was muffled, thanks to our liplock. \n\nSuddenly there was a shout from backstage. \"I think I found it!\"\n\nThere was a blinding flash as the lights in the dressing room came on. Not all of them of course, more than half were dead, but enough were working to leave a sparkling in my vision as I tried to blink myself into comfort.\n\nKimberly cried out from far away, clearly just as flash-blinded as we were.\n\nI took a moment to appreciate how gorgeous Veronica looked, her dark skin and black hair contrasted with a loose beige top with a black t-shirt underneath. Her face, such an imposing collection of sharp angles when she was on guard or angry, opened into a beautiful blissful smile at times like then when she was more herself. \n\n\"God, you are stunning, you know that, right?\" I grabbed her butt and squeezed her tight into me, pulling her into my hardness.\n\nHer eyebrows went up with a weary tolerant smile. \"Later. We don't want to shock the natives.\"\n\nShe disengaged from me and headed out of the dressing room to the backstage area. I was able to get in a quiet swat on her backside as she passed by which earned me a playful grin and a wiggle of those incredible hips.\n\nI took a look around the dressing room now that it was lit up, and confirmed my earlier supposition. It had to be designed and built in the exact style of the way the library was put together. But it couldn't have been at the same time, could it? The woodwork was very fine. The only difference was that this room hadn't been kept up. It was still in excellent condition though.\n\nWhen I caught up with the two of women, Veronica was explaining the large, rather terrifying-looking electric system. \n\nKimberly looked nearly flawless, her blouse buttoned up perfectly, but the collar was bent the wrong way. I smiled at the thought.\n\n\"...so it was overbuilt to run all the power for the theater lighting system. It's in really good shape though. Very safe, as near as I can tell. We'd need to bring in an electrician to go over everything if we were going to reopen.\"\n\nKimberly interrupted. \"Are we going to reopen?\"\n\n\"I don't know. Ask our principal. What do you think?\"\n\n\"I hadn't really thought about it too much. I only found out about this place a few days ago. And nobody knows about this place?\" \n\nI had personal knowledge that at least a few students knew about it, but they had said they had just found it recently. I didn't have any reason to doubt them, but I didn't exactly trust them either.\n\n\"I had no idea it was down here. I can say for sure that it's not well known if it is known at all.\"\n\n\"I found it shortly after I got hired on. When I did an inventory, I figured out which key fit the door and voila! I'd swear no one had been in here for decades. I did a bit of research though. The best I can figure is that it wasn't really part of the school. It was a massive storage space up until the early '20s. Then all this was put in. It had to be some kind of speakeasy burlesque hall.\"\n\nShe led us out to the stage area. I could see clearly where the blankets had been. They were gone now, but the spot where they had been was cleaned up and dust-free. It was also obvious that this wasn't a stage meant for the school production of Our Town. It was in sort of an erotic art-nouveau mode, with rich painted carved wood with gold trim. Deliciously detailed nude figures in various states of play were carved into the pillars. There were illustrated erotic panels in little alcoves all the way into the audience area. The house was odd too. The stage jutted out into the audience, with an extended wing out to one side, maybe for an orchestra? The seating was laid out like a restaurant, with tables and chairs rather than row seating. It was beautiful, and probably deserved to be on the national historic places list.\n\n\"There's a kitchen and bar area over there, through that door. And there's a ticket booth out front. And that's the other fun thing. The front door's been bricked over. I have no idea why, but even back then it must have been a small entrance. I figure they didn't want to advertise this was down here. I can't imagine anyone wouldn't know back when this place was open, but appearances must be maintained, I suppose. And it's typical for a speakeasy, but there are little hidey-holes and secret panels all over the place. If you got raided, you have to have a place to hide, right?\"\n\n\"Or a place to escape? Are there any other exits except through the library?\" I was still wondering how the twins got in and out.\n\n\"None that I know of, but I wouldn't be surprised. I never really did do a full search of this place. Who knows what you might find down here?\"\n\n\"I'm not sure what we would use it for even if we did clean it up. We don't have a theater teacher yet.\"\n\n\"I bet if people learn about this place, we'll have plenty of applicants for that job. And,\" Kimberly knew my obsession with image, \"think of how this would look on the marketing material. Well, we might need to blur out some of the carvings...\" Her gaze was toward a particularly well carved nude woman who looked to be climbing onto a low stool with a rather turgid addition. \n\nI looked out from the stage into the audience area, and the image started inspiring me. \"It really doesn't look like it needs that much work. Unless there's hidden rot everywhere, we really would just need to clean up. We'd need new equipment... I wouldn't trust those old ropes, and I bet the lighting would need to be overhauled... The kitchen is an interesting possibility, too...\"\n\nI spaced out for a while, thinking about the possibilities.\n\n\"Well, at least we wouldn't need to have any more meetings in the cafeteria.\" Veronica laughed.\n\n\"Ok. The board gave me a little slush fund, so let's put a little bit of that into cleaning this place up and seeing what we can use it for. We will get a teacher for performance arts, and they'll need a space. Kimberly, can you take care of that?\"\n\n\"Yes sir. Oh, that brings up another issue I meant to mention to you. There are quite a few students who are looking for on campus jobs. Our previous principal frowned on that, but there's no real rule against it. I was thinking that I could put together a student team to take care of this place.\"\n\n\"Oh, god, yes.\" Veronica piped up. \"I tried to get a couple of assistants the entire time I was here and got shot down every time. Things would move much more smoothly with another couple pair of hands.\" She paused and lowered her voice for effect. \"And, if I had them, we might even be able to open up the archives.\" \n\n\"Archives?\"\n\n\"I'll show you soon. I need to get back to work if the library is going to be up and running on Monday. And I've actually got classes to plan, too!\" She seemed more excited about the prospect than she had been in the past.\n\n\"Ok, ok.\" I looked at Kimberly, whose expression was a bit conflicted. \"You too, I suppose? Alright. I'll be back in the office soon.\"\n\nKimberly was already halfway to the dressing room, and Veronica moved off after her to catch up, leaving me alone on the stage.\n\nI walked over to where the blankets were, where the twins and I had that unreal meeting. I tried to remember where the sound of applause came from, which direction the footsteps went.\n\nNothing's real here on stage.\n\nWell, it was worth walking around a bit anyway. The place had to have more dressing room space, and a prop cellar somewhere. Was there a trap door in the stage? I didn't see one, but that didn't mean it wasn't there. \n\nI spent the next couple hours scouting out the area. Everything was in very good shape, with predictable exceptions. There was another dressing room, bathrooms, and a small workshop, but the prop cellar was the real prize. There were backdrops and props and set pieces and all that, but there were also cabinets full of old costumes. Most weren't wearable, but they looked right out of a jazz age burlesque show, which made sense, since that's what they were. Boas and firs, slinky sequined little dance suits, and everything you'd need to entertain a hall full of folks going blind on bathtub gin. \n\nIt wasn't until I was about to leave that I found the other hidden exit I had been looking for. I was giving the kitchen a last look-over, it was basically in good shape, but the appliances would need replacing, when I went into what I assumed was a walk-in cooler of some kind. It looked like a little room carved out of the rock with empty shelves all around. \n\nSure enough, on the ground, I could see where the dust had been disturbed. \n\nWith a little hunting and fumbling, I found a catch under a shelf, and part of the wall popped open. With a push, it slid back as a doorway, and much more smoothly than I would have thought. There was a roughly dug hallway that led straight out into the darkness. \n\nThere was no light in the hallway, so I took out my phone again to light the way. I tried to orient myself to figure out which direction I was going, but I was so turned around it was no use. \n\nBut eventually I did come to an area where the walls became straighter. There was a ninety degree turn to the left and hey presto, a door. \n\nThe door resisted a bit, but it wasn't locked, and with a little bit of effort, it swung open. Into... Some kind of furnace room?\n\nThere was a huge boiler unit in the center of the suffocatingly small room. The door couldn't even open the whole way. I closed it and looked back. It didn't exactly disappear into the wall, but it would take a pair of sharp eyes to spot it. \n\nThe boiler was cold. \n\nI was in the dorms. It had to be the basement of the dorms.\n\nWhen they put in the new air conditioning units there, they asked if we wanted to take all that old stuff out, but it would have cost more than the entire installation of the new system just to get it out of the building, and then we would have had to find someone to haul it away, so we told them to leave it. \n\nI shimmied around the boiler and found a door that led up a flight of stairs. One more door, and Just like I thought, I was on the ground floor of the dorm building. \n\n\"Hi Principal Lee!\"\n\nI spun around to see Cynthia Xu and a group of other students. \n\n\"What were you doing down there, Principal Lee?\" She seemed barely able to contain a giggle as she winked at me.\n\n\"Ah... I was just making sure everything was shut down down there. Is the air conditioning working ok for you girls?\"\n\nCynthia broke out and giggled. \"Oh, I see. The temperature is fine up here. Maybe a little hot, isn't it? But that's not a bad thing really. What do you think girls?\"\n\nHer crew were all smiling. How much did they know? Were they the ones in the audience?\n\n\"It's fine. It's so much better than last year.\"\n\n\"That's good to hear. Now, I need to get back to the office. Let me know if you need any help.\"\n\nI turned around and walked to the exit. I swear I could feel the gaze of each student on my back.\n\nI walked with a bit of speed across campus.\n\nAs soon as Kimberly saw me come in to the office, she jumped up and came over, her expression very anxious.\n\n\"Principal Lee, I just wanted to talk to you real quick.\" She was clearly worked up, and her accent got thicker. \"About the... this morning in the... in the theater. I'm so sorry. I don't know what came over me...\"\n\n\"Kimberly, if there's any need for an apology, it's on my end. I apologize. It was inappropriate of me to take advantage...\"\n\n\"But you didn't...\" She was struggling to get the right words out. \"It's not just you... The past few weeks, things have been really strange. I've found... I'm really...\"\n\nShe reached out and touched the sleeve of my jacket without looking at my face.\n\nThen the main door swung open and Jennifer walked in.\n\nKemberly's eyes went wide with something between embarrassment and desire.\n\n\"Kimberly! Principal Lee! It's great to see you both.\" Jennifer breezed into the room, either oblivious or ignoring Kimberly's expression. \"I hope you had a great break. I'm really ready to get back to it.\"\n\nShe moved directly over to Kimberly, and took her into an enthusiastic hug. She had to reach up to compensate for her height. Her back was to me, but I could see Jennifer nestle into Kimberly's generous cleavage. \n\nKimberly tried to stay cool, but as she wrapped her arms around Jennifer, I could see her anxiety slough off. She leaned into the hug, and her face showed the pleasure she was feeling. Her eyes were closed and her smile widened with pure happiness. \n\nI enjoyed the scene for a moment. Neither woman moved to break the embrace. Part of me wanted to let this play out. Kimberly was clearly in need of some emotional support. But the reception room was definitely not the right place for it, especially with the open door. Also, I needed to talk to Jennifer privately.\n\n\"Kimberly? Could you give me a moment with Jennifer? I need to run something buy her.\"\n\nThe two pulled apart. Kimberly seemed in much better spirits.\n\n\"Of course, of course. We're almost done with the late admits, but there's still a lot to do. It's so good to see you back Ms. Lash... Jennifer.\" I swear I could feel her blush as she spoke her name out loud. Kimberly was not doing a great job of concealing her feelings.\n\n\"This will just take a moment. Could you join me in my office, Jennifer?\"\n\n\"Sure!\" She replied brightly.\n\nShe followed me, and I closed the office door behind us. \n\nI slowly walked over to the small chairs in front of the desk. Over the break, I had thought a bit about how to start this conversation, but never had any good answers. I didn't even think that I would see Jennifer that day.\n\nWe both sat down and looked at each other. I looked at her and immediately had my answer. I'd just slip into her mind. I focused in on her eyes.\n\nAnd she winked at me.\n\nI was frozen in place.\n\nHer face broke into a smile and she bubbled over with laughter.\n\n\"I'm sorry, but it was too good to pass up. The look on your face was priceless! And that cinches it. You were watching that night, weren't you?\"\n\nI nodded dumbly, still unable to gather my wits.\n\n\"I thought you might be. It was just a chance, but it looks like I got you, you little voyeuristic prevert!\" Her wide smile belied her accusation.\n\n\"I saw you wink... I wasn't sure I believed it... How? Are the cameras yours?\"\n\n\"Oh, no, no... You have to know who put in the cameras, don't you? You sometimes like to play like you are a little dim, but you are smart enough.\"\n\nMy mind was spinning, and I felt very dim indeed in front of her.\n\n\"I knew about the cameras from back when I used to work here before. I knew that he'd bugged most of the campus and downtown too. He even bugged the homes of several of the women on staff that he was interested in. I found a camera in my room shortly before I quit. It was no surprise to find the one in Kimberly's room, I mean, just look at her, she's like a Disney porn princess. Have you found the rest of them?\"\n\n\"Uh... Some of them, maybe all of them. Veronica is looking into it. She didn't want to tear them out until she knew more about the system. So far, the only places that we're pretty sure don't have cameras are this office and the Green House. Basically, the principal's places.\"\n\n\"Good. Veronica's the right person for that. I guessed there wouldn't be anything in this room, but it's nice to know that you and she have looked it over.\"\n\nI was still stunned, but slowly tried to make sense of what I was hearing. It was crazy of course, but it made sense. I mean it fit with what I knew.\n\n\"So, when you went home with Kimberly, you knew...\"",
        "\"No. I assumed. It's twisted, but I hoped it was there. I checked it out while she was in the bathroom.\"\n\n\"Does Kimberly know?\"\n\n\"No, unless she's a much better actor than I think she is. I didn't tell her, but I'm going to. I'm going to tell her today.\" Her expression became serious. \"To be frank, I'm not worried about you, but I want to make sure that Kimberly isn't hurt in all this. That's why you and I need to discuss how we're going to move forward here.\"\n\n\"Ok, I agree. If there's a way to keep Kimberly from getting hurt, I'm on board.\"\n\nShe leaned back and smiled again. \"Good. So, here's the thing. Much later in the night, I'm guessing well after you stopped watching, Kimberly and I had a little chat. She's a wonderful ball of fire, but she's not really sure what to do with her... desires.\"\n\nI nodded, remembering her enthusiasm through the camera and in the theater.\n\n\"She's convinced that acting on her desires would make her unprofessional and might even lose her this job. I've been trying to disabuse her of that notion. And she is fixated in a major way on you. She wants you so bad, but she's not sure what to do with that desire. Now, I don't mind at all. We were very clear from the beginning. I love her to death, and she had a whole lot of fun working out her teacher fantasies on me, and I know that we're going to continue enjoying ourselves. But what I need to know is-\"\n\n\"-what are my intentions toward your little girl?\" I grinned warily.\n\nShe returned the smile, much wider. \"Precisely.\"\n\n\"I'm... I'm kind of an awful person. It seems like I've become more than a bit of a letch.\" I don't know why, but I started just saying all the things I'd been thinking about lately. It was like she had me on a shrink's couch. \"I'm not really... a one-woman man... And, I mean... I adore Kimberly, and god, I can't deny that she is hot as hell. Just today... I can't stop thinking about her. But the school is more important than my overactive libido. I need her to be happy and content. Hell, this place would fall apart without her. Without me, things would go along just fine. She's more important here.\"\n\n\"That's very nicely put. There are many kinds of letches, and I don't think you are the truly dangerous variety. And to be fair, I can tell you that Kimberly is not a one-man woman, or even a one-woman woman. But, you're also wrong of course. I don't think you understand how much we do need you here, even if it's just as a figurehead to take the heat when things go wrong.\" \n\nShe smiled in a way that I couldn't quite read. Was that a joke?\n\n\"But there is something else that I don't think you appreciate about our little Kimmy. Her libido might be as overactive as yours. Or mine for that matter. She's having a real hard time keeping herself together around you.\"\n\nShe leaned forward and looked at me directly with a gaze full of meaning.\n\nFor the first time today, I really looked at her. She was dressed fairly casually, in jeans and a light short sleeved silky top. The fabric flowed nicely as she moved and while it didn't provide any glimpse of her cleavage, it was tight enough to give very flattering definition to her curves. Her longish dirty-brown hair was up in a sporty no-nonsense ponytail. \n\nBut again, I was struck by how fit she was. She wasn't a bodybuilder, but there was muscle definition anywhere you cared to look on her diminutive body. More striking though was the easy grace with which she moved. She was so clearly comfortable in her body in a way that was incredibly sexy. I remembered watching her in the forest as she ran her hands all over her legs in obvious pleasure. She knew how attractive she was. She didn't flaunt it, but she clearly enjoyed it.\n\nI looked into her eyes to see if I could gauge what she was thinking. It took a bit to see into her mind, and when I did I knew I could only see portions. It was nothing like the open freedom of Veronica and Kimberly, or the way the Xu twins had those dark areas. With Jennifer, it was like I was looking around a dark room with a weak flashlight. If I focused on something I could see it, more or less, but with the understanding that everything else was shrouded.\n\nThe first thing I felt as I moved into her mind was the clear realization that, yes, she did notice me checking her out. I should have known better. But she was rather flattered rather than offended.\n\nIt wasn't surprising that I felt her sexuality first, after all, my trick seemed to be hard-wired to focus on sex. What was surprising is that I would never have guessed how aroused she already was. It seemed like all of the women around me we were running on a sensual tripwire, but I could never tell from the outside. Maybe all women were just much more able to master the outward expression of their lust.\n\nI wasn't able to follow that thought for long because Jennifer's arousal was overpowering all other thoughts. She was mainly still thinking of Kimberly. She could still feel where those incredible boobs had pressed up against her when they hugged moments ago. But she also was evaluating me. She had thought a lot about me watching her tryst with Kimberly, and she loved the thought of me masturbating to their excitement. Fortunately, she didn't think about me enjoying the view with a partner. That would be a conversation for another day. \n\nI barely felt the need to, but I pushed her arousal. There was a touch of resistance, but once her lust started to expand and take over more space in her mind, it moved fast. It glowed with a fierce power, and I felt myself pushed out of her mind.\n\nI found myself looking directly at her. She was still leaning forward waiting to continue the conversation, but her deeper breathing and coloring on her neck gave the lie to her poise. She swallowed hard and rubbed her hands quickly back and forth on her legs before standing up and turning away from me. She started to pace. \n\n\"We're all fairly... charged people. Kimberly, you... and me.\" Her voice seemed to have dropped an octave, low and sultry. \"I think I have a way to make sure that Kimberly is happy and unhurt, a way that will give her a safe outlet. And maybe that will be good for us as well.\"\n\nWith more confidence than I felt, I encouraged her. \"Do you? I would love to help if I can.\" \n\nI stood up and walked to her. I still wasn't certain if it worked, but I tried to visualize pushing out waves of lust.\n\nShe turned around and looked directly at me. She slowly licked her lips and closed the gap between us. \n\n\"Principal Lee, I was really hoping something like this might happen, but I'll be honest, this is going fast, and it could still go wrong in so many ways. But I think it would be very helpful for Kimberly to understand that a little bit of lust wouldn't impact her job performance.\"\n\nShe pressed herself into me, and I was made more aware or of difference in height. She pushed her hips against me, and then raised her hand to push my shoulder, moving me away from her. She continued to walk by me, toward my big oversized desk. \n\n\"Principal Lee, I think you have urgent business in... the dorms, let's say. Tell Kimberly that you'll be gone for the rest of the day, and leave out the front door. Go for a walk... say about twenty minutes or so? Then come back and join us here in your office. Come in quietly, no need to knock. Do you understand?\"\n\nI could see what she was planning. \"Are you sure?\"\n\n\"Well, maybe you'll come back to find us discussing class schedules.\" She picked up a pen from the desk and started twirling it. Then she looked at me with smoldering eyes. \"But maybe not.\"\n\nWith a supreme effort of will, I tore myself away and left Jennifer in my office. \n\n\"Kimberly, I've got to head out. I probably won't be back in until tomorrow. Have a great night.\"\n\n\"Okay, Principal Lee. See you tomorrow!\"\n\nI walked past her office and right out the door. I didn't have anywhere particular to be, but I did want to take another look at the potential spa area, so I walked over and took in the scene. I was more and more convinced that we could make it work. Maybe without putting up any buildings. We would need a wall and we would need to carve out a few pools. We might be able to help pay for it by opening it up to the town, maybe some kind of subscription or membership?\n\nI was actually surprised to find myself distracted enough by the possibilities of the spa that I wasn't thinking about the possibilities that could be waiting for me back in the office. \n\nWhen I did get back to the office building, I walked in quietly and locked the main door behind me. I saw that Kimberly was not in her office, and I started to get excited.\n\nThe door to my office was closed, but not locked. I put my ear to it, but couldn't hear anything.\n\nI slowly opened the door and almost didn't see Jennifer at my desk. She seemed completely clothed but I saw her jeans crumbled up in the corner, so perhaps her was only wearing her shirt. Her hair was down from the pony tail, laying a bit mussed, over her shoulders. She seemed to disappear behind the massive desk and into the oversized padded chair.\n\nShe looked at me and smiled wide, one eyebrow arched high. Then her entire face broke down and she shuddered and moaned. She grabbed tight onto the side of the desk, as a small orgasm rolled through her.\n\nAfter a moment, she spoke. \"Kimberly, oh god, you are getting really good at that. Keep it up... gently... gently. Let me come down smooth, then build me back up. Hmmm... yes. You always were a fast learner. I'll tell you if it's too much. You don't have to go right for my clit. Feel free to... ahhhnggg... yeah... feel free to tease me...\"\n\nI stood in the doorway taking in the scene. Jennifer had stage managed it very well. Kimberly was under the desk munching away on her ex-teacher, but completely unable to see anything going on in the office. Next to Jennifer's blue jeans was a pile of other clothes. How much was Kimberly wearing, I wondered.\n\nI slowly and quietly closed the door behind me and walked toward the desk.\n\nJennifer held out her hand and looked me in the eye.\n\nI reached out and took hold of her hand. She squeezed hard as Kimberly did something particularly exciting under the desk. I was close enough now that I could hear the delicate sounds of Kimberly's work.\n\n\"Kimmy... ughnnn... You really are hot, you know that? It's even hotter having you down there under Principal Lee's desk. Eating me out so well right where... ugh ugh ugh... hmm... right where he sits. Do you think about sucking him off? OOhhh... maybe you do! That seemed to get you excited.\"\n\nShe was looking at me the whole time. Even without using the trick, I could sense the pleasure flowing through her. How long had they been at it? I slid into her mind, much more easily this time.\n\nThere was virtually nothing in her consciousness that I could see except pleasure. She was aware of how she was guiding Kimberly, but she was unable to focus on anything too much. I tried to lean on her arousal to gradually ramp it up. She was already riding the edge of her peak, so I focused on keeping her fluttering right there and ramping up the intensity. \n\n\"Kimmy, what would you do? Are you all worked up too? What would you do if he... he were here and you ugnn OHFUCK... Hmmmm... Keep going... just like that... Mmmm, so nice... What would you do if you could do anything to him? If you could have him... hmmm... any way you want?\"\n\nI actually heard something from under the desk, but I couldn't make it out.\n\n\"What's that? What would you want?\"\n\nI could barely hear Kimberly's voice. \"Mmm... I want both of you...\"\n\nJennifer's eyes lit up and she squeezed my hand tight. Her eyebrows raised questioningly. \n\nI shrugged and smiled, then gave a tentative nod.\n\nShe let go of my hand and motioned to the door, swinging her palm open and closed.\n\nI shook my head ruefully, but smiled.\n\nI went back and exited the office, making sure the door was as quiet as it could be. I waited a couple of seconds and then barged back in.\n\n\"Jennifer! Great to see you. I didn't think you'd still be in here. Is Kimberly around? I didn't see her in her office.\"\n\n\"BEN!\"\n\nJennifer looked genuinely surprised. Kimberly's efforts and my encouragement had clearly been having an effect. I even heard a bump from under the table.\n\n\"Have you been working with her on the late enrollees?\"\n\n\"Ben, uhhh... yes... We've been working together. You'd be impressed with our cooperation.\" Now that Kimberly wasn't eating her out, she gathered her composure easily, although beads of perspiration were still standing on her face.\n\n\"What's that over in the corner, Jennifer? Did you change clothes?\" I started walking over to the pile of clothes, enjoying the thought of Kimberly in a panic under the desk. At that point, I could see that there was much more that Jennifer's jeans there.\n\n\"Ah, yes... I changed. It was a little warm. I hope you don't mind.\"\n\n\"No, not at all. But where is Kimberly? It's not like her to leave early.\"\n\n\"Oh, she's around. She was just here a minute ago helping me take care of some things.\" She smiled broadly. \"By the way, what do you think of her so far, Principal Lee?\"\n\n\"I can't say enough good things about her. The school would collapse without her.\"\n\n\"No, I mean personally.\"\n\n\"She's delightful. She keeps such an upbeat attitude. I do think she could use to loosen up a bit. I worry that she is working to hard. I think it might help her if she had a good way to let off some steam.\"\n\n\"That's wonderful to hear. I couldn't agree more. Kimberly, why don't you come on out?\"\n\nThere was an audible squeak from under the desk.\n\nJennifer stood up and walked over toward me, shedding her blouse as she walked.\n\nI couldn't help but bask in her beauty as she moved, totally nude, just the perfect specimen. Confidence and desire just rolled off of her. I could also see that her neatly trimmed bush was damp with saliva and sex.\n\n\"Kimmy, I brought you this gift. I think you need to come out here and help me unwrap it.\"\n\nShe reached out to me and pulled me into a brief kiss.\n\n\"If you don't come out and help me, I'm going to take him all for myself.\"\n\nShe slipped me out of my jacket and tossed it on the desk. A hand immediately appeared and grabbed it and took it under the desk.\n\nI looked at Jennifer with concern. \"Too much?\" I whispered.\n\nShe shook her head and reached down to feel me. \"She just needs some encouragement.\" Then, in a louder voice. \"You should feel how hard he is already, Kimmy. Come on out. It's all good. We're going to have a really good time.\"\n\n\"Kimberly? I would love to see you. I've been thinking about you all day since we ran into each other in the theater. You got me so excited.\"\n\nWe were casually caressing each other, but both of us were looking over at the desk.\n\nAfter a moment, we saw the wild red tangles of her hair crest from the other side of the desk. Her face followed, skin redder than I'd ever seen before. Flushed from embarrassment and lust both, I'm sure. Her expression was completely conflicted. Her mouth was still wet with Jennifer's fluids. Her eyes sparkled with lust, but anxiety was written all over.\n\n\"God, how sexy does she look?\" Jennifer's gaze was locked on her, but her hand ran up my now-untucked and unbuttoned shirt, rubbing over my chest.\n\n\"She's so hot. I can't believe she's right here with us. Is she going to come over here or just watch?\" I followed Jennifer's lead and ran my hand up to cup her bare breast with a light squeeze.\n\n\"She better get over here.\" She moaned lightly with my caress, still sensitive. \"No offence, I really want you too, but I simply have to get at her again. She is so delicious.\"\n\nWhile we talked, Kimberly gradually came out from behind the desk. She was using my jacket to cover herself. It was like she was moving toward us despite herself, almost like she was in a trance.\n\n\"Look, at this, Ben. I think we might have a toy to play with after all, a Kimmytoy. Kimberly, you don't have to, but if you do want to play, you're going to need to drop that jacket.\"\n\nShe stopped, halfway across the room from us, unsure.\n\n\"Jennifer's right. Show us. Let us see how gorgeous you are.\"\n\nShe closed her eyes and then tossed the jacket to the side.\n\n\"God, she's so adorable. Just look at her boobs. When you nibble on those fat nipples, she just goes crazy.\"\n\n\"Show me. Let's go and get her worked up.\" I put my arm around Jennifer's shoulder and we walked over to where she stood, completely nude, in the middle of my office. I nudged Jennifer forward. \n\nJennifer walked to her side and slowly ran her hands up and down Kimberly's side.\n\nAt her first touch, Kimberly moaned and leaned into her hands.\n\nI started taking off my clothes, watching Jennifer's hands roaming slowly and deliberately toward her erogenous zones.\n\n\"Don't move, Kimberly. Just let her feel you. Let her enjoy your body. Keep your eyes closed and focus on how her hands feel. Think about what she's going to do to you. Think about what I'm going to do with you.\"\n\nIt was clear she was thinking about exactly that. Jennifer's hands grazed lightly over her nipples, then returned to pinch them. \n\nKimberly yelped with delight.\n\nBy this time, I had all my clothes off, and I started to move toward the two women. Jennifer had been focusing on Kimberly, but as I came closer, she looked back to me.\n\n\"Oh, Kimberly, here he comes. Keep your eyes closed. He's just like you described him. She's been watching you ever since you got here. She's been imagining what you look like under your suits. She's going to see you soon enough, but for now, this is all about you, Kimmy. We're going to make you feel so good. Why don't you come down here to the floor with us.\"\n\nJennifer pulled her gently down to the floor and placed her down on her back. \n\n\"Keep your eyes closed, Kimmy. Just feel this. Just feel us enjoying your body.\"\n\nShe looked at me and motioned for me to copy her. We traced our fingernails up from the top of her feet, trailing them gently up her legs. Her skin was pure marble white and perfect. I could feel her twitch and hear her moan in frustration as Jennifer and I got closer to the top of her inner thighs. Neither of use came close to her pink, engorged lips. Her excitement was evident, clinging like dew on her labia.\n\n\"Look at her pussy, Ben. I can tell you how delicious she is, and her clit is so sensitive. When you lick it just a bit, she goes wild. But I can't wait to see your cock slide into her hungry little cunt. She's so tight. You aren't going to be able to last. She's going to suck the cum right out of you.\"\n\nHearing Jennifer shift from her academic precision to this rough lewdness made the whole scene even hotter. \n\nWe traced our fingers up her sides, causing her to giggle and squirm. She tried to bring her arms down to protect herself, but both of us immediately grasped her hands and help them back up over her head. She was now totally powerless before us.\n\n\"You're right Jennifer, her boobs are incredible. How are they so big and so perky? How can you not just dive right in?\"\n\nI did just that, lowering my face to Kimberly's chest. I licked up from the bottom up toward the nipple. She shuddered lightly when I got there, causing her boobs to wobble delightfully.\n\n\"God that looks so hot, Kimmy. He's totally nude just leaning over you, licking you. He could do whatever he wanted to you right now. I could just hold your hands and there's nothing you could do.\"\n\nKimberly moaned at the thought and then whimpered as a nibbled down on her nipple. \n\nJennifer placed her hand on my jaw and guided me up to Kimberly's face. \n\n\"Kiss her, Ben. Look her in the eyes. I'll be down here I just have to taste her again.\"\n\nI glanced down to see Jennifer reposition herself, shifting down between Kimberly's legs.",
        "I moved up and hovered my face over hers for a moment. Ever so lightly I lowered down and pecked at her lips. She shifted up and tried to catch me. I teased her a couple more times before she started mewling in frustration. \n\nWhen I finally leaned down for a deep wet kiss, it was almost in perfect synchronization with Jennifer finally lowering her mouth down into Kimberly's pussy.\n\nKimberly's whole body shuddered with the pleasure. Her eyes popped open wide, then hooded as she focused on the sensations roiling through her body. I kept holding her arm above her head, but my other hand dipped down to tease her nipples.\n\nNow that her eyes were open, I looked deep into her mind. \n\nIt was beautiful.\n\nLust was rolling all through her mind, lighting up like the northern lights. I could see the anxiety had faded into the back of her consciousness. Everywhere else was dripping with sex. Her entire self was ringing, vibrating with sexual energy. I reached out and pushed gently and felt her trip over into orgasm, the sensation running wild through every corner of her being, rippling back and forth through every sense.\n\nPulling back out, I heard and felt her wailing her orgasm into my mouth in joyous ecstasy. Jennifer was holding tight onto her legs, and I found my hand still keeping her arms up above her head. She was twisting and writhing from head to toe, with my mouth on her mouth, but only just barely, and Jennifer's mouth locked on to her pussy. My other hand was still holding her boob tightly, tweaking her nipple when I could get ahold of it.\n\nShe turned her head to the side, so I slipped down to suck on her neck.\n\nNow that her mouth was free, she moaned out loud.\n\n\"Ohfuckofuck. Ms. Lashgari, don't UGHNNnmmm... don't stop. Y'all are... hgnnn... Y'all are driving me crazy... I'm gonna cum again... lordohlord... keep... keep... Ohfuck.\"\n\nThen her words turned into a keening moan as she came again, or maybe it was one super long cum. But now, she didn't have the strength to twist and flex like she did earlier. She pushed and moved, but limply. She struggled a little bit with her arms and I let them loose. One arm went around me to hold me tight into her neck, and the other went down to hold Jennifer's head.\n\n\"Thassgood... goodgood... okay okay okay. That's okay... too much... okay... please...\"\n\nJennifer got the idea and pulled back slowly, moving from an all-out assault to gentle little licks and nips, pulling at her lips lightly with her mouth.\n\nKimberly mewed into the mass of her hair as she turned over on her side.\n\nJennifer crawled up her body, meeting me at her neck.\n\n\"Kiss me. Let me taste her on you. I want to taste her.\"\n\nKimberly looked down at us as we kissed passionately. \n\n\"Mmmm... she does taste good... Maybe I need a bit from the source...\"\n\n\"Nooo... no... I need your cock... I need you in me. Gimme... like... gimme a sec to recover a bit and... I need you... Fuck me, Principal Lee.\"\n\n\"Oh, look at our little Kimmy, now!\" Jennifer moved up to kiss her and talk right in her ear. \"You want him to fuck you now? Have you seen how big he is? Are you ready for that?\"\n\nShe reached down and led Kimberly's hand to my crotch.\n\n\"Oh god, you're big. I have to try it though. Will you help me Ms. Lashgari?\"\n\n\"Ok, don't worry, let's get you set up. Ben, get up on the chair.\"\n\n\"Yes, ma'am!\" I crawled up and got into the big chair. \n\n\"Are you ready, Kimmy?\" Jennifer ran a line of patter as she guided Kimberly up to the chair, brushing her hair out of her way and kissing her gently all over. \"Are you ready to fuck that big cock? Are you ready to slide that thing deep into your cunt? I'm going to set you down up there. I want to watch him split you open. God, it's going to be so good. You're already just gushing.\"\n\nKimberly moaned along and ended up sitting on my legs facing me, with Jennifer right behind her, pressing her tits into her back. \n\nJennifer wrapped her arms around Kimberly, with one hand caressing a tit, and the other one down gently working her pussy, just to keep her engine running.\n\nAs she sat down on my legs, my cock stood up rock-hard between us. I was dripping precum onto both of our bellies. \n\n\"God, Kimberly, I can't wait to have you. You are so hot, I've wanted you ever since I saw you on the dock that night.\" I kissed her sweetly on the lips. \"And now I'm going to fuck you, god, I can't wait. Are you ready? Do you want my cock in you?\"\n\nShe was practically glowing red with embarrassment and lust. Her wild mass of red tangled hair was splayed out everywhere, matted with sweat and who knows what else. Her eyes were wild with arousal. \n\nShe pulled up one of Jennifer's hands and coyly sucked on her fingers.\n\n\"Principal Lee, I want you to fuck me. I want to feel you deep inside me. I'm so ready. Ms. Lashgari ate me so good. I'm so wet for you.\" She was already rocking her pelvis back and forth, enjoying Jennifer's other fingers as they worked into her. \n\n\"Oh, no Kimmy, he's not going to fuck you. You're going to fuck him. You're on top here.\" Jennifer giggled as she grabbed my cock and lifted Kimberly up to position her. \n\nJennifer seemed to be planning a long drawn-out ordeal but Kimberly wasn't having any of it. She was already too hot for sweet and slow. As soon as I could feel the folds of her labia rubbing up on the tip of my penis, she dropped herself down on me. \n\n\"OHGOD!\" She slid down enough to get my cock in past her opening. \"Sofuckinggood!\"\n\nJennifer's hands were back to work all over her body. My hands were on her hips, making sure that she could control how much she took how fast.\n\nBut I was focusing on her eyes. I didn't want to go completely into her mind, but I did want to enhance her enjoyment and arousal as much as I could.\n\nShe looked back at me with overwhelming hunger, and my trick only made her hotter. She was dripping down my cock as she lifted up and lowered herself down further.\n\n\"Oh fuck... Kimberly, you feel... so good... so tight... holy fuck...\"\n\nHer face broke into a predatory grin and she pushed back down onto me, her mouth open and her jaw shuddering as she took me deeper inside.\n\n\"This... this... is what... I want. I want you... I want to fuck... fuck... fuck... AHHHNgngg...\" Jennifer was working her clit now, rubbing furiously as Kimberly worked herself into a good rhythm. Now taking almost all of me into her, rising and slamming back down on me.\n\nHer eyes were still open and locked on me, and I pushed the sensations running through me back into her. Her eyes dilated and she kept moaning and half-chanting, \"fuck...fuck...fuck...\"\n\nJennifer was now supporting her as much as manipulating her, helping to lift her off me and slide back down, all the while running her fingers over Kimberly's sopping pussy as my cock slid in and out. \n\nI started rocking back up into her as she came down on me, and we worked together, the rhythm getting better and faster. Her gaze was locked on me and I fed her excitement. The pitch of her moans got higher and higher as we found a faster tempo.\n\nJennifer was whispering in her ear, something I couldn't quite hear, but it seemed to work her to an even higher pitch. Jennifer's hand was basically holding on to her pussy, anywhere she could hold on, as she rode me, and Kimberly was starting to lose control.\n\nKimberly started to lose the rhythm, but with me pounding up into her and Jennifer lifting her body and pushing it down onto me, she didn't need to keep up in control. \n\nI started to catch more of what Jennifer was saying as she got louder and more forceful.\n\n\"You're just our toy. You're just a toy for our pleasure. I'm going to use your pussy to work on Ben's cock. We're gonna make you cum so many times you're going to be a little rag doll. You're going to be so limp we can do whatever we want. Maybe if you're good, I'll just sit down on your face and make you bring me off again. That's what you are, you're just a toy that we're going to use.\"\n\nI was a little taken aback by her forcefulness, but there was no doubt that Kimberly loved it. She started mumbling, \"Toy... ughnn... Your toy... ahhh... fuckyeah... use... ughn... use me.\"\n\nThen here eyes popped wide and she started yelping with all the strength she had left.\n\n\"OHfuck! OHfuck... I'm cumming good lord I'm cumming again... OHGOD... how can I... hold me... fuck me... hold me tight... OHGOD!\"\n\nShe twitched and twisted, but she was caught between the two of us, and Jennifer was more than strong enough to hold her fast, still rocking up and down on me, but now with her juices flowing out in rivulets all over me and the chair.\n\nShe broke down into moans again, with only a weak muttered, \"don'tstop... keep... fuck...\"\n\nAnd so, we did. I looked back into her mind to make sure she was okay. She was more than okay. Her entire mind was still firing on all cylinders, fireworks going off all over. She was feeling every inch of my cock inside her, opening her up and filling her, then leaving her empty with hunger for more. Jennifer's body was like a red-hot brand, everywhere she touched her flesh, it was like a searing thrill passed through to the core of her. \n\nOnly when I felt her start to lose consciousness, did I start to pull back and hold her tight on my miraculously still-hard cock. \n\nShe collapsed, still shuddering, onto my shoulder, snuggling into my neck and making little mewling noises.\n\nI looked back to Jennifer, who had stood up and leaned back onto the desk. Her right hand, still clearly wet with Kimberly's juices, was working her own pussy now. She looked at me with a huge smile and blew me a kiss.\n\nKimberly's body was still quaking with the occasional orgasm aftershock, and each time she shifted, my cock slid around inside her, causing her to moan in pleasure all over again.\n\nIt felt so good, but after all this I still hadn't gotten off, and my need for release was getting more and more urgent.\n\n\"Kimmytoy, you're driving poor Ben crazy.\" Jennifer saw the problem. \"You need to take responsibility. You got him all hard and horny. You need to fuck him right and let him cum in you. Can you do that?\"\n\n\"Hmhuh... I can still... fuck...\" She sounded almost asleep.\n\n\"Sure, you can, Kimmy, sure you can. Ok, I'll help you out this time. Let's do a quick blowjob lesson.\"\n\nJennifer slid up behind her again and pulled her up off me. Kimberly and I both groaned at being separated. I looked down to see my penis was shiny with our juices, but Kimberly was damp basically from the waist down. Damn, she was just personified sex, and her fuck-exhausted face was the perfect mix of adorable cuteness with sensual minx. \n\nI thought about throwing her over the table and just working my lust out on her, but Jennifer had a pretty wonderful idea too.\n\nBy then, she had arranged Kimberly right next to herself in-between my legs.\n\nI sat back and enjoyed the incredible view before me, the two women kneeling in front of my ranging dick.\n\n\"Oh, lord... I had that whole thing in me?\" Kimberly was barely at the point of being able to form complete sentences, but she was able to get that out.\n\n\"Almost all of it, Kimmytoy, almost all of it.\"\n\n\"Don't you want to fuck him too?\"\n\n\"Maybe next time. He looks right on the edge right now, so let's just see if we can get him off. You try first. See how much you can get in your mouth and I'll work the rest of him.\"\n\nKimberly nodded in quiet determination. \n\nShe wasn't the best cocksucker, and she was still nearly exhausted, but enthusiasm and good will goes a long way in sucking a cock. She mainly worked the tip, swallowing what she could and licking around the slit.\n\nJennifer was rather good though. She licked down the bottom side and around the inside of my thighs. She rolled my balls, already tight to my body, in her hands. She also, ever the multi-tasker, slid a hand underneath Kimberly, so she could fondle her at the same time. \n\nI wasn't that far from cumming to begin with, and having two women working on me was going to make this a short exercise.\n\nJennifer could tell, and she warned Kimberly.\n\n\"He's just about there. So, look up to him and look into his eyes. You're our toy, but now you're in control. You can make him cum. Look into his eyes and smile your sweetest smile. Now he's going to blow in your mouth and your got to take it all. Don't swallow...\"\n\n\"OHjesus... I can't hold... fuckfuck... I'm cumming!\" The wave of orgasm flowed over me as soon as she looked into my eyes. She was so cute and so slutty at the same time.\n\nI fired hard into Kimberly's mouth. Her eyes went wide as she tried to take it all, and she nearly did. Her mouth slipped off and the last shot went up into her hair. \n\nWithout warning, Jennifer jumped over and eagerly sucked my cock into her mouth to suck the last drops out and clean me off. She moaned in pleasure, which kind of surprised me. I thought she was more into girls, but hell, what did I know. \n\nVery quickly though, she spun around and kissed Kimberly, whose mouth was still full of my spunk. The kiss reenergized Kimberly a bit and they really went at it, my cum spilling out of their mouths.\n\nI slid down out of the chair and wrapped my arms around both women, and they welcomed me into their kisses. \n\nAfter several minutes of cooing and kissing and sweet words, Kimberly stood up on wobbly legs, a picture of a sensual, freshly-fucked goddess of lust. Her hair was a disaster in a red cloud all around her head, her face and neck were flushed a glowing red, to say nothing of my cum that was still dribbling down her chin. Her big boobs were jiggling with each step, and you could even see handprints where someone had been holding on tight. And of course, her pussy was well-used, red, and still dripping.\n\n\"Ms. Lashgari. You said there might be a next time?\" She was clearly trying to keep her accent in check, and her formality was comic, looking as she did.\n\nJennifer laughed. \"Oh, yes, my little Kimmytoy.\" She looked at me. \"We're not nearly done with you, neither one of us.\"\n\n\"Very well. Then I don't feel so bad going back to my office and finishing off my work with the late admits. I'm going to have a bit of a late night.\"\n\nJennifer and I leaned on each other and watched her pick through the pile of clothes and try to clean off enough to dress.\n\n\"No, no, no. You don't need to wear panties or a bra anymore today, Kimmytoy.\" \n\nI was a bit concerned about how far Jennifer was pushing this, but Kimberly looked back at us with a scandalized expression. But there was also a thrill in her eyes.\n\n\"Yes, ma'am, Ms. Lashgari.\"\n\nWhen she got mostly dressed, she walked by us, still sitting on the floor near the desk.\n\n\"Stop a moment, Kimmy.\"\n\nShe froze mid-step.\n\nJennifer ran her hand up Kimberly's leg under her long skirt.\n\n\"God, you are sexy as hell.\" She slapped her on the ass from inside the skirt. \"Ok, you may go.\"\n\nKimberly walked out of the room, her legs unsteady again.\n\nI looked at Jennifer and she winked again. \n\n\"You worry too much. We're all going to be fine.\" Her eyes focused in the distance and her voice lowered with desire. \"Once we get Veronica on board, we're all going to be more than fine.\""
    ],
    "authorname": "shudai",
    "tags": [
        "ffm",
        "office",
        "school",
        "redhead",
        "blowjob",
        "cunnilingus",
        "mind reading",
        "group sex",
        "mind control"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-new-principal-ch-14"
}