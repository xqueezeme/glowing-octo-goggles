{
    "title": "Shopping for a New Lover",
    "pages": [
        "Six months? Had it really been six months? Six months without a cock anywhere near her usually hungry and well-used cunt. Beth could not believe it. What was wrong with her? Not since she had lost her virginity at the ripe old age of nineteen had she gone this long without sex. Except after her last relationship, she had tired of the 'you use me and I'll use you' tug of war that was modern relationships. She had sworn that she would rather go without sex all together than do that again. \n\nEven with the nice guys that were usually her type. Especially with the nice guys. It was easy to just use assholes for casual sex because it was clear that they were using you too. The problem was that was what modernity had done to the male-female bond...period. Even with the nice guys, they were still just using you. To make matters worse, it was hard not caring for them. In the end, Beth always got hurt. And she was tired of being hurt. Sex just was not what that.\n\nWhich was the reason for this little shopping trip. She needed a toy. For the first time in her life, she needed a sex toy. A dildo. A vibrator. Something to take the edge off. And keep the cob webs from growing down there. Keep the damned hole from just closing up. All of her life, Beth had used her fingers on her clitoris when she masturbated. But after six solid months on that diet, she was starving. She ached for something to fill her hole. Something to reach that magic spot that functioned independently of her clitoris. \n\nShe had looked online. But somehow this seemed too important a purchase to make sight unseen. Eight inches with a three inch circumference. Ten with four. All of that meant little to her. Even when she hunted through her sewing box for the tape measure. It just seemed unreal. Soft, life like rubber. Beads that spin. Ears that vibrate. None of it seemed real. No, she definitely needed to see and feel this stuff before she bought anything. \n\nHer first stop had been the high end lingerie shop at the mall which boasted couple's toys. Except she was not part of a couple. If she were, she would not need to spend this kind of money on a sex toy. That got her too. She could fill up the gas tank on her car for the cost of a fucking rabbit. She supposed that was cheaper than what she would spend on sexy lingerie, making dinners for and traveling to meet some guy. Not even mentioning the emotional cost that she was simply tired of paying. But still, how much rubber did it take to make one of these damned things? For this price, it ought to be silver at least.\n\nThing was that the sales girls at the mall had not been helpful either. The moment that she had gone to open a box to take the damned thing out, they had swarmed down upon her. It was not like she was going to steal the damned thing. And their comments about hygiene was unnecessary. Did they think she was going to try the damned thing out right there in the middle of the store? She had just wanted to hold it in her hand. See how the different materials felt. How much the things weighed. How they fit into her hands. But not even that was permissible in their snooty store.\n\nSo here she found herself at a damned strip mall, looking for some dive called Simple Pleasures. Pictures of seedy, dark and disgusting peep show joints filled her fertile imagination. Hell, maybe she should just forget it. She could always try the handle of a hair brush like she had when she first tried masturbation. Or even stop by the produce section at her local supermarket. A nice cool cucumber. Or maybe a banana. It had a nice curve to it that would hit her G-spot. Although given how long it had been since anything was in there, maybe a carrot might be the best place to start. She could always work up a banana or cucumber later.\n\nShe was just about to do that when she saw the store front. The display window was full of sexy lingerie. A bit cheesier and more shoddily made than the mall place perhaps, but just the fact there was a window dispelled many of her fears about this place. She pulled into a parking space across from the shop. There were a couple right in front, but she supposed she was not the only one who did not want people knowing where she was going to shop. She watched the place for about five minutes. She was even more relieved to discover that it was other women, many of them mature like herself, who were coming and going from the shop. \n\nFinally Beth worked up the courage to go in there. She picked up her purse from the seat next to her. Looked around a bit to see if anyone was watching and then made a mad dash for the glass door. She was further relieved once she went inside. There was a sales girl behind the counter, not some pervy man waiting to pounce upon lonely and desperate women. Although after six months without cock, she knew that she probably more than qualified for that description. \n\nThere were three or four other female customers milling about the shop that was clean and well-organized. She saw the sign overhead that read 'Sex Toys.' She noted that in addition to the rows of boxes and plastic encased containers, there was a glass display case with rows upon rows of the things. Pink ones, purple ones, shiny black ones, even a couple of flesh colored phallus rose like the great stones of Stonehenge. And a couple of the damned things looked almost large enough to fit among those ancient rocks. What the fuck? How would those damned things even fit? Wouldn't you stretch it out so much that no real man would ever do?\n\nBut like the lights and sirens of police cars at a traffic accident, the display case drew her. She was unable to look away, even at those things as she called the unnatural ones. She was drawn to them, like a moth to a flame. Except she knew that she was flying straight into the fire and she did not care if her wings got singed. For a moment, she stood in front of the glass shelves just looking at them. All of them.\n\nThen it caught her eye. One of the rabbit thingies...she thought. It was a long and thick purple pearlescent shaft with a very fat head. She could see rows of little balls floating just beneath the soft purple plastic covering. She could almost feel them spinning and throbbing deep inside of her. Then there was the funny little protrusion at the base, just above the controls and handle. It was where the name 'rabbit' came from because it looked like bunny ears. \n\n\"Do you need any assistance?\" said the feminine voice from over her shoulder. Beth jumped just a bit; startled like a child caught with its hand in the cookie jar. But when she turned around the woman was smiling broadly. \"A very good choice. That is one of our best selling models. Would you like for me to demonstrate?\"\n\nBeth shook her head with images of the woman lifting her short skirt and 'demonstrating' dancing through her vivid imagination. The woman must have read her shocked look because she giggled and reached out for the vibrator. \"Not like that,\" she said as she punched a couple of buttons at the base of it and the thing whirred to life. She cupped it, wrapping her fingers fully about the throbbing head. \"Here, feel that,\" she said as she handed it back to Beth.\n\nThe sensation was strong, perhaps too strong, Beth thought. Until the woman reached over and touched a couple more of the buttons. The beads slowed to more sedate pace. Beth could even imagine using something like it on her feet or neck after a long day at work. \"There are twelve settings. Six for the beads inn the shaft and six for the ears. Some women find just the right one for them and always use the same combo. Others experiment, using different settings depending upon the mood. Or perhaps starting out low and then getting higher and higher until...\"\n\nThe woman left Beth to draw her own conclusions about the 'until' even though there was only one logical explanation. And Beth could definitely tell that this thing could get that job done as she began to play with the settings herself. \"I'll take,\" she said without even asking about the price. \n\nThe woman smiled and continued with a tirade of instructions and suggestions as she rang Beth up and run her credit card. It was a bit pricey, more than she had intended to spend. Then too that was nothing compared to the continued price of a string of well-meaning but horribly flawed lovers. No, Beth would see this as an investment. An investment in her future. An investment in herself. The sales clerk insisted upon wrapping the plastic packaging in purple crape paper before tucking it into the golden bag...without a name or logo, Beth noted. \n\nAll the way home, Beth kept looking over at the bag on the seat next to her. She even found herself caressing it like a new lover at a couple of red lights. The fifteen minute drive back to her apartment seemed endless. Like a heroic quest with one impediment after another. It seemed every single light was timed against her. \n\nBy the time she finally did get home, she parked her car and had her keys out of her purse before even opening the door. With her new purchase in hand she practically ran up the stairs of her townhouse. When she got to the landing, she paused. Suddenly, a relaxing bath seemed like a good idea. She should be clean and relaxed when she first tried it out after all. First she took the package into her bedroom. She pulled the new lover from its bag along with the batteries that she had purchased...just in case she did not have the right size at home. \n\nShe was getting frustrated trying to open the plastic packaging. It was worse than some first dates she had had. And that was saying something. In the end, she had to go all the way back downstairs to the kitchen for a pair of scissors. But she stopped and turned on the water, adding some bubble bath before she went back into the bedroom, her mission accomplished or at least this hurdle overcome. With the scissors, it took only a moment to open the package and less to put in the four batteries. With a satisfied sigh, she tossed the plastic wrappings into the garbage can and placed her new toy gently on the pillow next to hers. \n\nBeth stripped off her clothes and sank into the tub. The bubbles covered her tits with just the nipples poking out of the warm water. She lay back to relax but the idea of her new toy made that as difficult as falling to sleep on Christmas eve...knowing that Santa would be there any minute. In the end, her bath was shorter than it could have been. But at least she was nice and clean before her 'first date', she chuckled at the thought.\n\nThe difference was that for this one she did not need to rummage through her closet looking for the perfect outfit or take extra care with her hair and make up. No, for this new boyfriend she could bypass all those niceties meant to impress and get right down to business. To the job at hand. Except thanks to her new friend the whole job was not up to her poor tired hand. Not entirely anyway, this time she had some help.\n\nLaying back upon the pillow with the towel still wrapped securely about her chest, Beth rifled through her litany of favorite fantasies searching for one that was most appropriate for her new friend. It had to be something special, something different, something exciting and just a bit risqu\u00e9. Then it occurred to her. The perfect one.\n\nShe opened the towel and began first to knead and squeeze her breasts. She felt them tighten and hardened nicely before she turned her attention to the nipples that crowned them. She tugged firmly, not too lightly but not painfully either. Although she might get to that at some point. She continued to play with one breast and nipple as her hand slowly caressed lower towards her now tingly cunt. \n\nHer breath caught as she found her clitoris. It was hard and throbbing like a tinny cock already. She did not even need any lubricant because her pussy juices were leaking through out her folds. She could feel the tension rising in her. The familiar and comforting release that her body had come to expect over all these months beckoned. \n\nBut this time she backed off. She opened her eyes and reached for her new lover on the pillow next to her. Yes, this time she had a nice surprise for Miss Pussy. A new friend. A new toy. A new lover. She sighed as she pushed a couple of the buttons and closed her eyes once more.\n\nShe held the throbbing missile in one hand, that special hand. Her other hand still pulled and twisted her hard nipple. She began at mid-thigh; as low as her grip would allow, which was surprisingly low. Like a lover working his way up her thighs with licks and kisses, she progressed slowly. Even though the setting was one of the lower speeds she could still feel it all the way to her toes. And it was delicious. \n\nShe ran it slowly across her mound. She moaned as the vibrations echoed off the solid bone of her pubic symphysis. Her clit was throbbing now, in perfect time with its lover. But still she held herself back from sinking the thick shaft deep into her dripping wet cunt. She was close. But not close enough. She tugged harder at her nipple, twisting until the light pain sliced through her body and dazed mind. She ran the bulbous head lightly across her clit, just skimming it so that it heightened her arousal without sending her over. \n\nOver...up...into the darkest recesses of heaven...the galaxy...the universe. Her mind raced through space even as her body raced closer and closer towards the sun that was sure to incinerate it in a blinding light and heat. She would burn up instantly...but it would be worth it. What a way to go!\n\nShe toyed with it. Across just the top of her mound, across the tip of her clitoris, down the edges of the mewing hole that was her starving cunt. She played and toyed with herself. Keeping her body right on the knife sharp edge of pleasure but never allowing it to cut too deep. Not yet. But soon, she promised herself as she increased the power to the tiny pearl beads that were already spinning and gyrating at something approaching the speed of light. \n\nHer moans echoed off the walls of her empty apartment. She could barely catch her breath now. Her chest was heaving, rising and falling inn quick succession as she tried with all her might to draw air into her starving, oxygen deprived lungs. Close. So fucking close, her mind chanted in time with the pulsing beads.\n\nThen she pushed another button and the ears took up the chorus. Her hand plunged forward, burying the plastic shaft deep into her needy cunt. Just as the sales lady and package promised, the magic ears wiggled against her hard clit at the same time that the whirling beads reached the back of her channel. She was stuffed to overflowing. \n\nFrom the head pressed against her cervix, pushing higher and harder than any human lover ever had...to the beads that massaged and throbbed against the bundle of nerves known as the G-spot...and now the sweet, innocent sounding bunny ears driving her insane against her clitoris. It was too much. A blood curdling scream tore from her parched throat as her feet and head pressed deep into the firm depths of the mattress. Her whole body bowed and arched upwards to meet the pounding thrusts of her imaginary lover. \n\nThe silvery sheen of an almost human visage danced behind the closed lids of her unseeing eyes. She cried out in ecstasy to her alien lover as his foreign shafts used and loved her hungry body. She could almost feel his heavy musculature pressing her deeper and deeper into the mattress as he used and bred her. Her body hungered for his touch, his seed, his possession. \n\nHer orgasm went on and on...and on. Her body soared to the moon and stars. It reached heights she had never thought possible as the throbbing imaginary lover found depths of her body and soul that she had never known or given to any human lover. \n\nThen she was crashing. Falling back to Earth as quickly as she had soared to the furthest reaches of the galaxy. She was afraid. Afraid that she would pass out from the pleasure. Afraid that her soul had somehow become disconnected from her body; that it might pass right through her, through the mattress and the house...deep into the depths of the Earth's core that actually burned brighter than the sun. But it did not. Somehow the throbbing between legs stopped. Her spirit re-entered her body. And though she was wet with sweat, exhausted and thoroughly satiated, she was whole. Safe. \n\nHer final thought as she drifted off to sleep with the purple plastic lover still inside her was...well worth the price...and perfect fantasy for my new lover."
    ],
    "authorname": "Tara Cox",
    "tags": [
        "female masturbation",
        "vibrator",
        "rabbit",
        "toys",
        "aliens"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/shopping-for-a-new-lover"
}