{
    "title": "Surefoot 31: Redpaw",
    "pages": [
        "\"USS Surefoot-A, Captain's Log, Stardate 49589.99, Captain Esek Hrelle, Commanding: we are rejoining the Fleet near the Sherman Sector, to provide ambulance and rescue support in the war against the Klingons. Along the way we stopped off at Starbase 154 to make a few cosmetic and engineering modifications, stock up on supplies, and most importantly, to collect officers and crew to fill the vacancies normally taken up by our cadets and those officers who remained on Earth for shore leave or other duties. \n\nThis includes a temporary First Officer, Commander Emil Bellamy, who has an impressive record performing similar duties on a wide variety of different assignments... as he never fails to remind everyone. He's... He... \n\n(Sigh) He annoys the hell out of me. I'm trying to be patient and professional, reminding myself that I shouldn't compare him to Commander T'Varik, that I'm distracted from missing my wife and son and Sasha. But just when I think that maybe he's not all bad, he does something to make me long for the day when he moves on to annoy someone else...\" \n\n* \n\nDeck 2 Fore, Captain's Ready Room: \n\nHrelle had his feet up on his desk, admiring the image on his viewscreen when his door buzzed. \"Enter.\" \n\nHis back was to the door, his tail swishing lazily through the hole in the back of his chair, but his ears and nose immediately identified the visitor. \"Commander Bellamy, thank you for coming.\" \n\n\"My pleasure, Captain. I am here to serve.\" \n\n\"Yes.\" He nodded up to the screen: a view from the outside of the dorsal hull of the Aft Engineering section of the ship, a stubby flat surface where the Starbase Support team had painted a bright apple-red symmetrical symbol of a paw print, a main pad topped with five smaller digital pads and claw marks. \"What do you think of our new markings?\" \n\nHe heard Bellamy made a non-committal sound, before responding with, \"The station team performed an adequate job, but I observed areas of improvement which I submitted to their Department before our departure-\" \n\n\"Which I'm sure will be as well-received as the ones you've submitted to me. But I was referring to how awesome it looks.\" \n\n\"Ah. Ah, yes. Awesome, indeed.\" He displayed all the enthusiasm of a man rearranging his bookcase. \n\nHrelle set down his feet and turned his chair to the face the man: a middle-aged, pale-skinned human with a moon face, receding blonde hair and gimlet eyes. \"You have a problem with the Red Paw, Commander?\" \n\n\"Problem? Not per se, Captain, but in my experience the human-designed Red Cross would be a more recognised symbol of this vessel's current mission parameters, than something this...\" He waved towards the viewscreen. \"Obscure.\" \n\n\"The Red Paw is a widely-recognised symbol of a vessel providing medical aid,\" Hrelle informed him indignantly. \"By Caitians and other felinoids, as well as canoids, ursinoids, vulpoids, musteloids... it's as valid as the Red Cross, Crystal, Helix, Star and the rest of the accepted symbols on the Interstellar Aid Registry. And... I like it.\" \n\nBellamy made an appraising sound. \"It is very pretty, Captain. But do not be deceived into thinking it will protect your ship from attack by the Klingons. In my experience, they have no respect for the beliefs of others.\" \n\nHrelle nodded at that. \"Speaking of respect for the beliefs of others... I didn't ask you here to talk about the Red Paw. I understand you reprimanded Nurse Jika Showri today for wearing her D'ja pagh while in uniform.\" \n\nBellamy allowed a smirk to crease his face. \"Ah. I suspected she might have come crying to you-\" \n\n\"Ms Jika said nothing; it was Doctor Masterson who alerted me. And with good reason: Ship's Policy allows for the reasonable display of religious and cultural accessories with the uniform; the Bajoran earpiece certainly qualifies as 'reasonable'.\" \n\nThe Commander straightened up slightly. \"Yes, I wished to speak with you about changing that policy, Captain. In my experience, encouraging such displays among the more primitive cultures-\" \n\n\"Primitive? Bajorans were exploring interstellar space in lightships when your people were burning witches at the stake!\" \n\n\"Nevertheless, Captain, eliminating such superstitious trappings promotes a more unified mindset-\" \n\n\"Well, you must have been confident that I would agree with you, since you presumed to go ahead and humiliate my crewman and force her to remove the symbol of her beliefs in front of her supervisor and colleagues, before getting such an agreement confirmed.\" \n\nThe man hesitated, as if sensing Hrelle's mood. \"Sir?\" \n\n\"You were wrong,\" the Caitian declared sharply. \"I don't agree with you. I'm not a religious person. But I do respect the rights of people to believe what they want, so long as those beliefs don't interfere with the rights of others, or how this ship is run. We are a Galaxy rich in diversity, and we should be able to reflect that. I won't change my policy. And I think you should apologise to Ms Jika for your chutzpah.\" \n\nBellamy frowned. \"Chutzpah, Sir?\" \n\n\"Effrontery. Nerve. Gall.\" \n\n\"Ah. I see.\" The man stuck out his chin indignantly, as if he was the aggrieved party. \"Is that an order, Captain?\" \n\nHrelle stared back hard. \"It shouldn't have to be.\" He rose to his feet. \"Mr Bellamy, it's only fair to inform you that when we rendezvous with the Fleet, I'll be asking for a replacement XO.\" \n\nThe man never reacted. \n\n\"You have redoubtable organisational skills,\" Hrelle continued, wanting to soften the blow despite his annoyance at the man, \"Which have made you instrumental in implementing the changes and additions to my ship and crew in record time, and I will make a note of that in my report to Admiral Savari. \n\nBut you're also arrogant, opinionated, Terracentric, presumptive, dismissive... I've had complaints from every Department Head since your arrival. I was willing to overlook them at first, because you were new and needed and you had some big shoes to fill. But hearing your attitude today-\" \n\n\"Permission to speak freely, Sir?\" he interrupted. \n\nHrelle nodded. \n\n\"Sir, with respect, this isn't the first time a CO has complained about me. I've been labelled all those things you said, and much more. But I didn't take this assignment to be liked while I'm here or missed when I'm gone. I'm here to do a job, a job I do very well, as my record will attest. I will of course appreciate any positive feedback you might have for me, and take it onboard for future.\" \n\nHrelle considered the response he had received, before replying, \"Dismissed, Commander.\" \n\nAs he watched the man depart, Hrelle rubbed his eyes, reaching into a desk drawer and retrieving a carefully-folded plush purple cloth: one of Misha's old blankets, which the cub still carried around at times when he began walking. He held it up to his snout and breathed in deeply, taking in his son's scent - and his mother's as well. \n\nSeven Hells, it had only been two weeks since he'd been on Earth with them, but it felt like eternity. He was fretful, agitated; his sleep was going haywire without their presence, and though their scent lingered in his quarters, he missed hearing them breathe, snore, laugh and play around him. He hated being alone. He needed to hear from them more often, but it wasn't always possible given the current security situation- \n\nHe started as the door buzzed again, and he put down the blanket. \"Enter.\" \n\nDoc Masterson stepped in, carrying a box under one arm and a tricorder in his other hand. \"Howdy, Captain! Busy?\" \n\n\"Never too busy for you, Doc! Come on in and sit yourself down, Tenderhead!\" \n\n\"'Tenderfoot',\" Masterson corrected, setting the box and tricorder down on the desk, before taking a chair opposite him - straddling it, of course. The square-jawed man broke into a toothy grin. \"You know, I might have grown up in a colony of cowboys, but you don't have to indulge me every time.\" \n\n\"I like cowboys; it's those hats you all wear. Oh, and the food, too. Okay, mostly the food. How are the new medical staff?\" \n\n\"Doctor Shyrik's sharp as a tack, but she looks like she'd just as soon kill me as give me the time of day; Andorians must have burrs under their antennae. Glad I've got Eydiir down there to watch my back.\" More seriously, he asked, \"You talked to Commander Bellamy about Jika?\" \n\nHrelle nodded. \"I set him straight.\" \n\n\"Good.\" Masterson regarded him, before lifting up his tricorder and scanning his Captain. \"Heightened levels of acetylcholine indicative of Caitian Pheromone Withdrawal, producing irregular sleep patterns, irritability... you've not been using your Personal Relaxation Light, have you?\" \n\n\"Caitians prefer the darkness. Not that we get much of it with our night vision.\" \n\nThe CMO reached out and pushed the box closer to the Captain. \"Then this might help.\" \n\nHe peeled off the lid - his tail swishing excitedly as the mouth-watering scent of freshly-replicated Southern-fried shuris pieces within reached his nostrils. \"Is it my birthday?\" \n\nMasterson smiled. \"Better: it's a prescription from your ship's doctor, supported by your missus. After keeping you on rabbit food all this time, you need a break.\" He watched as Hrelle tore into one large piece, noting, \"Don't inhale it all in one go, Pardner. It's not just for you.\" \n\nHis mouth full, Hrelle motioned for Masterson to tuck in. \n\n\"I don't mean me, Captain. Someone else suffering from CPW...\" \n\nAs if on cue, the door slid open without warning, and the coal-furred Caitian female in her gold-topped uniform enter, her tail swishing friskily behind her as she rushed around to behind Hrelle's desk to help herself to shuris. \"What, you left me some, Uncle Esek? Slowing down in your old age?\" \n\nHe grunted. \"Cheeky bitch.\" \n\n\"Sorry, I'm in Season.\" \n\nHe waved the air between them. \"No kidding; your musk is as thick as a Gorn's hide. Well, take a suppressant, because you're not getting any action from your Uncle and Commanding Officer.\" \n\nShe leaned in and peered at his muzzle. \"You're getting lots of grey there. Misha's gonna think he has a new Grandpa.\" \n\n\"I hate you.\" He looked to Masterson, who was grinning. \"Enjoying yourself?\" \n\n\"When I can.\" He nodded to Misha's blanket. \"Yours?\" \n\n\"My son's.\" \n\nThe doctor smiled. \"That little critter of yours gonna be a heartbreaker when he's older.\" \n\nHrelle chuckled. \"He already is. I hear he's receiving messages now from Neraxis' little sister Alazia, as well as Weynik's daughter Naida.\" He grinned, purposefully showing off the shuris bits stuck in his teeth. \"He gets his sex appeal from me.\" \n\nC'Rash spat out the food in her mouth from laughing, quickly collecting it from the carpet and swallowing it again, before asking, \"So, when's Commander Baloney leaving?\" \n\nMasterson looked to her. \"You have a problem with the dude too, Lieutenant?\" \n\nShe scowled at him challengingly. \"Doesn't everyone? He's tried to rearrange my team's duty schedules without even telling me! And I heard what he did to your nurse! If he tried that with any of my people, you'd still be extracting his balls from his belly!\" \n\nHrelle focused on picking his teeth clean with one of his claws. \"Keep it to yourselves, but I told him I'll be looking for a replacement for him as soon as we join the Fleet.\" \n\nC'Rash made a pleasing sound. \"Best news all day.\" \n\n\"Is it?\" He looked up. \"I don't like people leaving us believing that no one wants them around.\" \n\n\"But it's true in his case.\" She grabbed another piece. \n\n\"He moves around a lot, from assignment to assignment, never in any place long enough to put down any roots, make friends.\" He looked to Masterson for support. \"Maybe this attitude of his is a defence mechanism?\" \n\nThe CMO leaned back, impressed. \"That's very astute, Captain.\" \n\nC'Rash grunted. \"If you're looking to take your wife's place as Counselor, forget it; your boobs aren't as nice as Aunt Kami's.\" \n\n\"I'd be insulted if that wasn't true. Well, regardless, I'll be glad to have T'Varik back.\" \n\n\"Not as much as me.\" She licked her fingers, making sensual sounds. \"I've had her things moved from her quarters into mine while Bellamy is camped in there, so her scent's all over my place. Mother's Cubs, Uncle Esek, that woman drives me into a frenzy! When we mindmeld while we make love, it's like another layer of intimacy altogether! Like we're seeing and feeling through each other's bodies! And her nethers taste like hot tart tava pudding-\" \n\nHe held up a silencing hand, glancing at a flushed Masterson before swallowing the shuris in his mouth and explaining, \"T'Varik and I have an arrangement: in order to maintain our working relationship, we agreed to keep our respective lovers from revealing too much about us to each other. Now I won't be able to look at her without thinking about hot tava tart pudding, so thanks for that, Horncat-\" \n\nThe Red Alert made Hrelle, Masterson and C'Rash bolt to their feet and race out the door to the adjacent Bridge, the doctor heading back to Sickbay and Hrelle pausing to feel his ship kick into high warp before barking, \"Report!\" \n\nBellamy rose from the Captain's Chair and faced him. \"A distress signal from the Tsukuba! They're being attacked by Klingons, 1.4 light years in the neighbouring system! They've taken critical damage, and are abandoning ship!\" \n\n\"ETA to their location?\" \n\n\"At current speed, 47 minutes, Sir.\" \n\nHrelle nodded and moved to the Tactical Display Board in the aft of the Bridge alongside C'Rash, quickly taking in the images and accompanying data: Three Klingon K't'inga-class battle cruisers ambushed the USS Tsukuba as it was passing through System L-554, a protostar in the early stages of development with no planetary bodies. \n\nHe called up the details of the Tsukuba: NCC-65843, Nebula-class, Captain Sami Boutella commanding, crew complement- \n\nMother's Cubs... crew complement is 750... \"Send a coded signal to Starfleet Command, apprise them of the situation. Tell them we'll need backup.\" \n\nBellamy nodded. \"Tactical, ready phasers and photon torpedoes- Helm, send a signal, warn the Klingons off-\" \n\n\"Belay that,\" Hrelle cut in. \"No signal, no weapons.\" \n\nThe First Officer started, confused. \"Sir?\" \n\nTo Neheru he ordered, \"Initiate Emergency Aid Protocols: have Medical and Support teams prepare both Sickbays, Auxiliary Barracks, Lounges, Holodecks and the Shuttlebay to take on wounded, reconfigure cargo transporters for living matter, and begin mass-replicating medical supplies and rations.\" \n\nAs the Ops Officer complied, Bellamy caught Hrelle's attention again. \"No weapons, Sir? No warning to the Klingons?\" \n\n\"We'll need all available power to prepare for a Search and Rescue operation, not a military one. And if we send a signal ahead, the Klingons may just stick around to take us on.\" \n\nThe man stepped forward, all gung-ho. \"Good!\" \n\n\"No,\" Hrelle replied simply. \"Not 'Good'. Have you seen a K'i'tinga-class battle cruiser in action, Commander? That design has been around since Kirk's day, but then so has the Excelsior-class, and they're no pushovers either. And there's three K'i'tingas out there, making a meal of a Nebula-class ship. We'd just be dessert.\" \n\nBellamy glanced at the viewscreen, as if his eyes could reach out across the void and see the Klingons, before looking back at Hrelle, demanding, \"We- We can't just stand here and do nothing!\" \n\nThe Captain regarded the man, aware of how much his Bridge crew were listening in on the argument without wanting to be seen to be doing so. \"Mr Bellamy, once we use weapons, any protection we might have under the Rules of Engagement is lost... and a waste of time anyway against them. \n\nWe're not doing 'nothing'. We're going in to save those we can, rather than adding to the casualties; this is an ambulance ship now, and that's where our duties lie, here and for the duration of the War. \n\nI'm not looking for a fight.\" \n\nBellamy glared with open contempt. \"No. That would require courage... Sir.\" \n\nHeads on the Bridge turned at that. \n\nHrelle drew even closer to him, his hackles raised and his patience eroded, and his subsequent words escaped riding on the back of a growl. \"Stow the attitude, Commander, or I'll find a place for it, a place you won't like. In the meantime, take all this anger you have and focus it on working out how we'll be able to accommodate potentially 750 evacuees, when our maximum rated evacuation limit is 500.\" \n\nThe human's face paled at the realisation of the task ahead of them, nodded curtly and returned to his station. \n\nHrelle faced forward, staring at the tightly-dilated starfield as seen from a ship at high warp, and resisted the urge to get up and pace nervously, having exhausted what he needed to do to prepare. He wanted to call Kami, talk to her, hear her voice and see the love and support in her eyes. But they couldn't risk any unnecessary transmissions now. Seven Hells... \n\n* \n\n\"Scanning,\" Neheru reported, looking eternally uncomfortable hunched over the Ops station in the seat beside Velkovsky at the Helm in front of the viewscreen. \"No sign of Klingon vessels.\" \n\nBehind Hrelle's left shoulder, C'Rash piped up. \"I'm keeping an eye on tachyon and tetryon variance for possible cloaks.\" \n\nHrelle nodded, never taking his eyes away from the devastation on the viewscreen as they continued their approach. \n\nThe Tsukuba had been a large ship, looking like a Galaxy-class vessel that had been compacted. It had one of those triangular mission pods mounted on the dorsal superstructure, but that was floating free now among the twisted, weapons-scoured debris. \"Mr Bellamy, what was the Tsukuba doing out here?\" \n\nThe man stood at his station, having been more or less silent since his earlier confrontation with Hrelle. \"According to Starfleet records, they left Starbase 209 en route to supplement the patrols in the Elasian system. They were equipped with a weapons pod, with 200 torpedoes, eight launchers and 3 Type-X phaser emitters-\" \n\n\"None of which did them any good here,\" C'Rash pointed out. \"They look like they'd been caught completely off-guard. Not surprising; we're pretty deep into Federation territory to expect an attack.\" \n\n\"Tactical assessment later,\" Hrelle decided, rising. \"Begin scanning for escape pods and shuttles, signal our arrival and coordinate transport to Shuttlebay Triage: injured first, then civilians, then the rest. Lt Shall: you're watching our backs.\" \n\nAnd it began, Hrelle listening to the activity around him, taking in the information he needed without having to ask, his pointed Caitian ears twitching occasionally: the numbers of survivors reported out there mounted up, higher and higher - 50... 100.. 150... 200... and he continued wondering if the life support systems of the Surefoot could handle more than the maximum rated number. \n\n350... 450... Mother's Cubs, they were going to be packed in like Gideonites- \n\n\"477, Sir,\" Neheru reported. \n\nHrelle blinked. \"Lieutenant?\" \n\nThe Kelpien turned to look at him. \"477 survivors of the Tsukuba, Sir.\" \n\nHrelle nodded, appalled at the loss of nearly three hundred lives out here, glad that it was still a manageable number... and appalled once more at feeling glad for that. \"Commence rescue protocols, watch for any signs of pods in distress-\" \n\n\"Captain...\" C'Rash said softly. Anxiously. \n\nIt was enough to make him turn and approach her station. \"Lieutenant?\" \n\nThe Caitian female never looked away from her readings, but pointed to them. \"The variances here... and here... do they look to you like-\" \n\nHe saw enough. \"Arm phasers and torpedoes.\" Louder now, he announced, \"RED ALERT! The Klingons are returning! ETA 2 minutes and counting!\" As the klaxon sounded again, he continued over it. \"I want everyone beamed onboard NOW! Ignore Triage, we'll sort them out later! Bellamy! Send a signal to the Klingons, inform them we are a non-hostile vessel on a rescue mission for the survivors of the Tsukuba!\" ",
        "Seconds passed, though it felt like the Universe was holding its breath. \n\n\"We have 100 onboard!\" Neheru reported. \"150... 175-\" \n\n\"Klingons still on fast approach,\" C'Rash reported. \"ETA 60 seconds!\" \n\n\"Onscreen!\" Hrelle ordered. \n\nThe viewscreen image changed, from the debris of the Tsukuba, to three huge Klingon battle cruisers approaching in tight formation, not bothering to cloak themselves. \n\nHrelle took them in, indulging in a moment of appreciation at the classic design: the gunmetal-grey hulls, the long necks and bulbous heads, the angular swept-back wings to the underslung nacelles, before opening a channel himself. \"Klingon vessels, this is Captain Hrelle of the USS Surefoot! We are not a combat vessel! We are an ambulance ship listed in the Interstellar Aid Registry, on a rescue mission for the survivors of the vessel you defeated! I plead with you to let us continue to do so and be on our way!\" \n\n\"We have 225...\" Neheru continued. \"275-\" \n\n\"You're pleading with them?\" Bellamy repeated in disbelief as Hrelle closed the channel. \"The animals who killed hundreds of our people?\" \n\n\"To save the hundreds still alive? I'll kiss their bony asses if I have to!\" As he spoke, Hrelle's thoughts ran many steps ahead as he brought up a tactical readout on his adjacent display of the system they were in: typical protostar, mass of energy, dust, debris, plenty of comets- good... \n\n\"ETA 45 seconds!\" \n\nInspiration made Hrelle suddenly turn to C'Rash. \"The polyluminous warp flares we use for mapping dark matter nebulae! Some are still in the armoury! Launch them towards the Klingons!\" \n\n\"Why, Sir? They're not torpedoes-\" \n\n\"They don't have to be, they're bright and scary if you don't know what they are! They'll buy us some seconds! Do it!\" \n\nC'Rash's fingers danced over her controls. \n\n\"325... 350...\" Neheru continued. \n\n* \n\nOutside, three objects shot from the Surefoot's aft torpedo launcher, quickly shooting into warp towards the approaching Klingon ships, each one lighting up like miniature suns, burning a hot, blinding white. \n\nThe K't'inga-class cruisers, once in tight formation, suddenly broke off into hastily-improvised vectors. \n\n* \n\n\"375...\" \n\nHrelle strode over to the Helm, bringing up data on Velkovsky's display and indicating various points. \"Irina, set a course along this route, and on my mark, take us to Warp 7 - for one second.\" \n\n\"One second, Sir? That won't get us far, two hundred million klicks-\" \n\n\"That's enough.\" He looked back at C'Rash. \"We still have those sensor decoys we used to train the Flight Ops cadets in tracking vessels at warp?\" \n\n\"Aye, Sir, half a dozen-\" \n\n\"Program them all with Sabre-class sensor signatures, be ready to launch them in different directions when we hit warp.\" \n\nNeheru looked to him, eyes wide. \"We have them, Sir! All of the survivors!\" \n\n\"Klingons are on us!\" C'Rash shouted. \"Shields up!\" \n\n\"All Hands,\" Hrelle called out. \"Brace for high-speed manoeuvres!\" \n\n* \n\nOutside, the Klingon cruisers roared in, spitting green disruptor fire wildly, as the Surefoot banked down and port, around the larger of the debris of the Tsukuba, allowing the bolts of energy to strike the wreckage and make it spin and collide with each other like billiard balls. The larger vessels had to make wide arcs to avoid the debris, as the Surefoot manoeuvred around it all with greater ease, keeping the flotsam between her and her pursuers, until she had a clear path to the system's young hot sun, and jumped into warp. \n\nSpace dilated around it, but only for an anxious heartbeat. \n\n\"Decoys launched!\" C'Rash announced. \n\nThen the ship dropped out again, finding itself much closer to the diffuse yellow-white ball of plasma, in the midst of a huge herd of huge comets, their long, thick tails stretching out in lazy arcs around the star that had birthed them. \n\n\"Helm, get us inside the tail of one of the comets!\" He pointed. \"That one! Hurry! Get in, lock a tractor on the body and cut engines! Latch onto that thing like it was your mother's teat!\" \n\nVelkovsky smirked as she complied, their ship slipping into the tail, as the debris that comprised it gently bathed the hull of the ship, too small to cause any significant damage, at least in the short term. \n\nHrelle turned to Tactical, but C'Rash already got the gist of his plan, and announced, \"Ship's energy signature's tighter than a Ferengi's pursestrings! We're on Silent Running, and the background radiation from the star should help mask us further!\" \n\nHrelle smiled, looking at a bemused Bellamy. \"We can dodge and duck and pounce better than the big boys when we're in the grass, but we can't outrun them on open ground - especially with the load we're bearing now. Let them chase our decoys for a while while we hang back here and wait for backup.\" \n\n\"Hiding in the tail of a comet,\" Velkovsky murmured, grinning. \"Very Old School. Uh, no offence, Sir.\" \n\nHe patted her appreciatively on the shoulder. \"Luckily there are very few Klingons still alive who might have attended that Old School.\" He looked back at a dazed Bellamy. \"What's our status?\" \n\nHe blinked, returning to his station readings. \"Initial reports coming in: medical teams fully mobilised, teams are assembled to move the wounded into Triage before assigning to Sickbay, Captain.\" \n\n\"Good. Keep an eye on things here; if there's any sign of the Klingons, hail me. I'm going down to see what I can do to help.\" \n\n* \n\nA lifetime ago, Hrelle had escaped from captivity in a pod barely larger than a shuttlepod - but with seventeen other fellow captives. They were packed in there, the life support systems doomed to imminent failure from the strain, but at the time it seemed a better alternative to remaining on a slave ship... especially as they had sabotaged the ship in order to escape. \n\nStill, Hrelle would have been happy never to have been in a crowded, enclosed, mephitic space again. \n\nBut it came back to him now when he walked the decks of his ship, its corridors now filled with Starfleet crewmembers that weren't his, standing or sitting on the floors, many appearing in shock, or animatedly talking or arguing with each other, or looking for other crewmembers. Surefoot Support crewmen were working their way through the crowds, taking names on PADDs for the survivors' manifest. He moved to one. \"Amisaki, have you found any of their Bridge officers?\" \n\nThe young Asian man shook his head. \"Not yet, Sir, but there's their Assistant Chief Engineer, Lieutenant Commander Sotek.\" He looked back towards the end of the corridor. \"The tall Vulcan with his back to us.\" \n\n\"Thanks. Make sure no one's injured and not being overlooked.\" Hrelle wound his way through the survivors, gently but firmly parting them to approach the older man, who was trying to coordinate the people around him. \"Mr Sotek? Captain Hrelle, USS Surefoot.\" \n\nThe man turned to face the Caitian; he was thin, gaunt, with an aquiline nose and a small green cut on his narrow jaw, and, by Vulcan standards, appeared exhausted, though he maintained the expected composure. \"Captain Hrelle... I thank you for your timely rescue.\" \n\nHrelle stood formally, knowing how much reflective emotional discipline a Vulcan would need at this time. \"The honour is to serve, Mr Sotek; apologies, but it'll be cramped until reinforcements arrive. Are you able to tell me what happened?\" \n\nSotek nodded. \"I was in Main Engineering, in communication with the Bridge, supervising the latest upgrade of our sensor arrays to improve detection of cloaked ships.\" \n\nHrelle frowned. \"You left Starbase 209 before the upgrades? Wasn't that risky?\" \n\n\"The risk was noted by Captain Boutella, but he believed the probability of our encountering hostile vessels before the upgrades were completed was low enough, and our need to join the fleet in the Elasian system great enough to warrant it.\" \n\nThe Caitian made a sound, knowing he might have taken a similar risk himself. \"What happened next?\" \n\n\"The Klingons decloaked and focused their attack on our dorsal side, hitting the mission pod superstructure and separating it, before attacking the Bridge and the port nacelle.\" He paused, gathering his equanimity. \"When contact was lost with the saucer section we attempted to gain control through the Battle Bridge... without success. That was when I gave the order to abandon ship.\" \n\nHe offered seemingly no visible sign of emotion to that, but Hrelle's experience with T'Varik gave him a perception that prompted him to comment, \"It was the logical move to make under the circumstances. Do you know if any of your Bridge officers made it to the escape pods?\" \n\n\"Lieutenant Tosa Natheal did, Sir,\" said one of the crewman behind Sotek. \"Junior Operations Officer. She coordinated the evacuation of the saucer section.\" \n\n\"Where is she now?\" \n\n\"Your Main Sickbay,\" Sotek answered blankly. \"I am told she kept staying back, searching what was left of the saucer section, making sure everyone else got into the escape pods before she would leave. She was injured by plasma fire. The injuries appeared... extensive.\" \n\nHrelle nodded again respectfully. \"Liaise with my crew, we'll do what we can to accommodate you for food and hygiene. We're running incommunicado while the Klingons are around, but we sent an alert to the Fleet with our location. There'll be a briefing with my officers in an hour or so; I'll want you there.\" \n\n\"Yes, Captain.\" \n\nThe corridor grew more crowded as he got closer to the Main Sickbay, with a near-steady stream of wounded moving in before being directed out again. The interior was frantic, with orders and counter-orders being directed between Doc Masterson and his staff, which included the new Assistant CMO Dr Shyrik, as well as the nursing staff and that annoying EMH, though at least the hologram appeared too busy to be obnoxious- \n\n\"Move!\" Shyrik barked as she strode out in Hrelle's direction. \n\nThe Caitian stepped aside, unoffended, before siding up to Nurse Jika. \"Excuse me, I was looking for Lt Natheal, I heard-\" \n\nJika looked up at him, the Bajoran's initial reaction to the interruption instantly extinguished at the mention of the name. \"Yes, Sir.\" She nodded towards the far end, at the Isochamber; through its transparent walls, Hrelle saw a yellow-green humanoid female on a biobed, and Ensign Eydiir standing in attendance. \"In there, Captain. She's... we can't help her. The damage is too great, the burns cover 70% of her body- her legs are gone... she wouldn't even survive the stasis chamber. She... She hasn't long.\" \n\nHe nodded at that. \"Thank you.\" \n\nAs he started towards the Isochamber, Jika added, \"Eydiir won't leave. But we need her out here. The Doc's been too busy to say anything, and we haven't had time to find someone who knows Nathael, but-\" \n\n\"Understood.\" He held his breath as he moved carefully through the chaos around him, resisting taking in the scents of the charred flesh, the cut flesh, but unable to not hear the pain and urgency in the voices and the sounds. \n\nIt was quieter in the Isochamber, even with the door open, and he took in the sight of the tall, dark-skinned Capellan nurse beside the biobed, holding the hand of the woman lying upon it, talking with her. \"Eydiir?\" \n\nShe turned; her eyes told more than the rest of her face. \"Captain? Can I help you?\" \n\n\"Yes,\" he replied gently. \"You can go back to work out there.\" \n\nEydiir started, glancing down at the patient before explaining, \"She- She-\" \n\n\"I know. But you can't help her any more. You can help those people out there.\" \n\nNow emotion leaked out into the rest of the normally-stoic expression. \"She shouldn't be alone now.\" \n\n\"She won't be. I'll stay with her.\" He drew up, patting his former cadet on the shoulder. \"Go on.\" \n\nFrom the bed, the object of their discussion spoke up with a fractured, weak voice. \"Y-Yes... Go... Help my crew...\" \n\nEydiir spared the other young woman a final glance, before offering silent gratitude to Hrelle and departing. Hrelle drew up and regarded her: Lieutenant Natheal was a shockingly young-looking Rigellian Jelna female, with segmented, sallow skin, though much of hers had been blackened and cracked from plasma fire- and most of her legs appeared missing beneath the sheets covering her. She looked up and murmured, \"Lieu- Lieutenant Natheal re-reporting-\" \n\n\"Shush.\" He leaned against the bed at her waist, taking a moment to check the biodata on the display behind her. \"I'm Captain Hrelle, and your reputation precedes you, Lieutenant. I heard you stuck around to get everyone else you could find off your ship. You know that sort of heroic nonsense is reserved for us Captains, don't you?\" \n\nShe offered a broken smile. \"S-Suppose you'd better promote me, then...\" \n\nHe smiled back - but inwardly his guts twisted, as the young woman suddenly, strikingly reminded him of his daughter Sasha. So young, so brave and reckless, joking even in the face of death... to be left like this, just waiting... \"We have 477 of your people onboard. You appear to be the only Bridge officer left.\" \n\nShe nodded. \"C-Captain Boutella- the others- never made it out in time- I-\" She made a sound. \"I was lucky.\" She swallowed. \"So to speak.\" \n\n\"A lot of your crew owe you their lives.\" \n\nNatheal gave him a faint nod. \"S-So the nurse told me. And the doctor. Both very reassuring. Less forthcoming about how long I had left.\" She winced in pain before continuing. \"H-How about you, Captain? Please? I... I think I deserve it.\" \n\nHe took her hand in his. \"Tosa-\" \n\nShe made a sound. \"Oh, we're on a first-name basis now. Never a good sign. How long, Sir?\" \n\n\"Not... long.\" \n\nHer lip curled slightly. \"Thank you.\" \n\nHe squeezed gently. \"I'm sorry, Tosa. I'm so sorry. The neuroblockers will suppress the pain, but... I wish we could do more.\" \n\n\"You can, Sir. Y-You can tell my parents... I'm sorry. They were right: Starfleet is a dangerous job. They wanted me to go into acting, like them. Actors die a lot, though usually just on stage. But me, I... I wanted to see the stars from a different angle to the one we had in our own sky... tell them- I kept my faith- tell them I love them-\" \n\nShe stopped as she went into a coughing fit, and he helped clean away the blood she brought up as he shifted her, to keep her from choking, before settling her down again once it passed, pushing down his own anguish and frustration. \"I will, Tosa. Take it easy-\" \n\nShe swallowed. \"P-Please- my-my Chanaer-\" \n\n\"Your what?\" \n\nNatheal turned her head to the side; Hrelle followed her eye to a nearby table, where the remains of her uniform had been deposited, along with her combadge... and a chain, upon which hung a silver amulet in an elaborate spiral pattern. His memory recalled a Rigellian belief in an All-Mother, as he reached out for it, setting it in her hand. \"Here.\" \n\nShe clutched it weakly, but seemed to calm down visibly as she stared upwards. \"I- I know religion is considered... primitive by many in Starfleet. But... my faith has given me comfort... and strength. Especially being away from home, from my family... I- I will soon go to the Shores to be with the All-Mother, and all my family who have-\" \n\nBut then her face melted into anguish. \"No. No, I won't. I can't. I've damned myself.\" \n\n\"Damned?\" Hrelle asked softly. \"How could you damn yourself?\" \n\nA tear escaped her. \"When- When the plasma fire hit me, and the pain overwhelmed me, and seemed to go on forever... I wanted to die. I begged anyone who could hear me to let me die. But such thoughts are unforgivable to the All-Mother... It's a Capital Sin...\" \n\nHrelle reached out and wiped away the tear, leaning closer and whispering, \"Not today. Not today, and not for you. You can't do any wrong today, Tosa Natheal: Captain's Orders. \n\nMy people have a Great Mother of our own. She'll know yours, and She'll speak with Her. And She'll make sure you make it to the Shores. I promise.\" \n\nShe tried to smile - but then her body spasmed. The alarms sounded overhead, until he reached up and switched off the displays, before continuing to hold her. \n\nShe coughed, barely getting out her final words. \"I-I'm s-scared...\" \n\n\"I'll be with you,\" he promised. \n\nShe settled again. \n\nBreathed out. \n\nAnd was still. \n\nHrelle was certain only a few seconds had passed when he was alone. \n\nThen he heard someone enter, recognising the scent. \"Doctor.\" \n\nMasterson drew in, moving to the other side of the biobed and doing a check, though it was obvious that it was just a formality. His cowboy drawl was subdued. \"She was twenty. That ain't no damn age.\" \n\n\"Younger than Sasha,\" Hrelle noted, reaching up to close her remaining eye. \n\n\"Yeah... Captain, I'm sorry, but we're gonna need the Isochamber as an additional Ops table.\" \n\nHrelle nodded. \"Do you need help taking her to the Morgue?\" \n\n\"No, Sir; with all of her crewmen out in the corridors, we'll transport her there directly.\" \n\n\"Make sure she's safe and undisturbed. She's earned it.\" Hrelle rose, seeing that the Chanaer had dropped from Natheal's grip; he retrieved it, carefully slipping it around her neck, wiping his muzzle. \"There'll be a staff briefing in an hour. If you can't make it, send someone.\" \n\n* \n\nThe view from the Captain's Ready Room windows reminded Hrelle of being swept up in a wild current after a storm, as the comet tail debris swam past, and a soft light from the protostar beyond illuminated everything in a deathly pallor that gave no warmth or comfort. \n\n\"Of the 477 survivors of the Tsukuba that we saved,\" Masterson reported. \"Twenty have since died, twelve are critically injured and have been secured in our Stasis Chambers, thirty are spread out in the Intensive Care Units of both Sickbays, and half of the remaining survivors are being treated for minor injuries as well as Post Traumatic Disorder. If there's any positive to this, it's that with the new deployments throughout Starfleet to respond to the War, the ship didn't leave Starbase 209 with a full complement; only 89 lives were lost in all today.\" He grunted. \"'Only'.\" \n\n\"And the survivors?\" \n\n\"Well, we'll be okay in the short-term; many of the Tsukuba's own medical and Counseling staff have stepped in to assist their people.\" \n\nHrelle nodded soberly, looking to Bellamy, who had been pale and silent since the initial attack from the Klingons, and turned to Grev. \"Chief?\" \n\nThe Tellarite's snout wrinkled in typical disdain. \"Those incompetent mutts who wrote the Technical Manuals on evacuation limits for Sabre-class vessels might have been too optimistic. We haven't reached the rated limit but our life support efficiency has dropped 22%, though that shouldn't be enough to affect us... yet. Our replicator rations will be exhausted in a day's time, though.\" \n\n\"Fortunately, we shouldn't be alone for that long,\" Hrelle pointed out. \"We got a message out to the Fleet. Mr Bellamy, what would be the earliest we can expect reinforcements?\" \n\nThe man blinked, shaking himself from his distracted state to reply, \"Um, the earliest would be in another four hours, Sir.\" \n\nHrelle regarded him for a moment, before looking to Neheru. \"Keep a passive scan on the subspace channels. If you pick up anything, do not respond until the signal's been analysed; it may be a Klingon trick.\" \n\n\"Aye, Sir,\" the Kelpien replied, sparing a glance at Bellamy. \n\n\"You think the varmints might still be out there, Captain?\" Masterson asked. \n\n\"Once they realised they've been tricked, Doc,\" C'Rash responded, biting her claws. \"They'll be pissed off, and come back here looking to regain honour.\" She indicated the view outside. \"This comet's sweating iridium, nickel... and kelbonite, which should help shield us from sensors. But at the same time, our own sensors would be extremely limited. We wouldn't know they were out there until they were nipping at our tails.\" ",
        "\"And should this occur,\" Lt Commander Sotek added, \"Three K't'inga-class cruisers would have the advantage of us in terms of numbers, size, weapons-\" \n\n\"We're not totally without our own advantages, Mr Sotek,\" Hrelle pointed out. \"Manoeuvrability, for one thing; if we have half the slipperiness of my cub when I'm trying to get him into the bath, we could go on for hours. And then there's me.\" \n\n\"You, Sir?\" \n\nHrelle offered a slight smile. \"I have a reputation in some circles for keeping those under me safe by any means, whether it's snotnose cadets or rescued crewmen. They call me Papa Cat. I am apparently very paternal.\" He reached out and pulled C'Rash's hand away from her mouth, stopping her biting her claws. \"I don't see it myself. And I have a few more tricks to pull - with your assistance, Mr Sotek... specifically, your knowledge of the prefix security codes of the Tsukuba.\" \n\nThe Vulcan frowned. \"Sir, the Tsukuba has been destroyed, I am uncertain of how useful my information will be to you.\" \n\n\"That's because my Chief of Security hasn't filled you in on our plans.\" He looked to Bellamy. \"Did you have anything to add, Commander?\" \n\nBellamy stared hard at the table, before meeting his gaze. \"Yes, Captain. I wish to publicly apologise for my appalling behaviour on the Bridge. I saw your reluctance to fight as cowardice; I thought only of striking back at the Klingons for their actions, not of our responsibilities to those we rescued. I have disgraced the uniform. And I wish to tender my resignation with immediate effect.\" \n\nThe inhabitants of the room held their breath. Hrelle broke the pregnant pause. \"Mr Sotek, accompany Lt Shall to her station. The rest of you: dismissed... except for you, Mr Bellamy. We need to talk.\" \n\nThe two men sat there as the others departed, Hrelle waiting until the door slid shut before announcing, \"Resignation refused.\" \n\nBellamy blinked. \"Sir? I publicly accused you of cowardice. I questioned your orders in front of your own crew! You can't refuse my resignation!\" \n\n\"Don't tell me what I can and can't do, Commander.\" Hrelle rose and moved to sit behind his desk, opening up the box of shuris and contemplating finishing off the remaining pieces; they were just as mouth-watering cold, but... \n\nHe closed the lid again, leaving it for now as he looked up at his XO. \"You're an asshole, Emil.\" \n\nBellamy blinked. \"Sir?\" \n\n\"You're an asshole. The term seems apt, given what you've said and done since you arrived. What I'm trying to work out is whether you get moved around a lot because you're an asshole, or you're an asshole because you get moved around a lot and never have a chance to show your better side. \n\nBut that's for another time. You're needed here now.\" \n\nBellamy straightened up. \"Sir? No... you don't need me... I'm... horrible. Nasty, cruel, condescending. Everything said about me is true, and deserved. I don't deserve to be in uniform, I'm unworthy-\" \n\nSuddenly Hrelle leaned forward, opening his desk drawer and drawing out one of Misha's old pacifiers, dropping the chewed-up item onto the desktop. \n\nBellamy stared at it, bemused. \"Sir?\" \n\n\"Commander, none of us have time for this self-pitying mewling. If that'll help you get through the next couple of hours, use it, my cub's outgrown it.\" \n\nBellamy flushed; despite himself, he couldn't help but allow a slight, self-deprecating smile to rise on his lips. \"Thank you, Sir. I don't think I'll need it.\" \n\n\"Good, because next I was going to suggest one of his diapers. Now I have a job for someone with your organisational and deployment skills. We're most likely going to go back to Red Alert, and when we do, I want the corridors on Decks 3 and 4 cleared as much as possible. Move as many down there as you can to non-essential areas, even if they're already packed in, they'll just have to get cosier. As it is now, those hallways are like the front rows of a Bowie concert.\" \n\nBellamy blinked. \"Bowie? You mean David Bowie?\" \n\nHrelle made a sound. \"Yes. You know him?\" \n\nThe human smiled. \"I'm a big fan of his! Of all classical Terran music of that era, really, but especially now that the clone of Bowie is touring!\" \n\nThe Caitian chuckled. \"I met him. Saved his life when the Maquis had kidnapped him and took us to the Badlands, then I did a duet with him on Deep Space Nine on his first tour in the Twenty-Fourth Century.\" \n\nBellamy's jaw dropped. \"My God... What was he like? Is he as cool as he seems in the vivids? What are his favourite songs?\" \n\nHrelle smiled. \"Tell you what: when this is all over, we'll have dinner and talk about it. Then maybe we can discuss you sticking around a while longer after we join the Fleet? Dismissed.\" \n\nLooking visibly relieved, the Commander even managed a smile. \"Yes, Sir! Thank you, Sir!\" \n\nHrelle watched him leave, before opening his desk drawer again and drawing out Misha's blanket, breathing in his family's scent. It settled him again. \n\nHe rose and strode onto the Bridge, hearing his XO depart for the main corridor outside before approaching C'Rash and Sotek at Tactical. \"Well?\" \n\nThe Vulcan straightened up. \"I have supplied the Lieutenant with the relevant prefix codes and security clearances. However, I cannot guarantee success in your attempt.\" \n\n\"Fortunately, I'm not asking that of you-\" \n\nSuddenly the ship lurched hard to port, as the shields snapped on automatically and the view on the screen changed, the comet they had been tractored to cracked and split into several smaller, irregular pieces. Hrelle clutched the back of his chair. \"Report! Have the Klingons discovered us?\" \n\n\"Negative, Sir!\" Neheru replied. \"The comet's trajectory shifted when we attached ourselves to it and altered its overall mass! It's collided with another comet!\" \n\n\"Helm, power up and get us out of here and back to the wreckage of the Tsukuba! Tactical, eyes open! Mr Sotek, take the Engineering station, we could use your experience here!\" Hrelle forced himself to sit down and take in the view and the accompanying tactical data: approximately two hundred million kilometres from the Tsukuba, forty-five minutes away at full impulse, a second at Warp 7, but far more likely to be picked up by the Klingons, assuming that they were still around. \n\nHis instincts told him they were still around. \"Lieutenant Shall, any ships detected in the area? Theirs or ours?\" \n\nA moment passed, and then, \"Neither, Sir.\" \n\nHe nodded to himself. \"Irina, we'll need another warp burst back to the Tsukuba. Engage when ready.\" \n\n\"Aye, Sir.\" \n\nThey accelerated, space dilated - and then snapped back like elastic, and they found themselves surrounded by wreckage. \n\n\"Now, locate the Tsukuba's weapons pod, and take us there. And let's be quick about it, please.\" \n\nMoments later, the Surefoot positioned over the triangular weapons pod, which was bigger than the ship itself, but an initial visual inspection detected no major damage to its structure. \"Mr Neheru, lock ventral tractors on it, stabilise it, I don't want it spinning into any more debris - or into us, for that matter.\" \n\nThe ship shuddered with the effort, and Velkovsky's hands danced over her controls. \"She's massive, and the momentum is fierce, I'm compensating with manoeuvring thrusters.\" \n\nIn seconds, the spin slowed to a halt onscreen- but Hrelle knew that every use of energy was a potential beacon to the Klingons. Without turning to look behind him, he said, \"I hope you're not spending your time grooming yourself back there, Lieutenant.\" \n\nC'Rash hissed in reply, before following up with, \"Remote-activating the pod is proving trickier than expected; once it was ripped from the superstructure by the attack, safeties shut down many of the systems to prevent- KLINGONS!\" \n\nDisruptor fire filled the viewscreen and the ship rocked as the Red Alert sounded. He rose, joined C'Rash at Tactical. \"Stay focused on gaining control of the weapons pod. I've got this.\" He called up the Surefoot's own weapons systems and the tactical screens of the space outside, preferring to have direct control over this, if only to spare others the guilt of taking lives. \n\nNot that he expected his volley of torpedoes in the general direction of those mahoosive Klingon leviathans out there to do anything but give them hard-ons for battle. Another heavy strike- shields down to 40%... \"Lieutenant-\" \n\n\"I know, I know-\" She cursed. \"The fire controls on the pod are locked out! I can't get the torpedoes or phaser emitters-\" The ship rocked again, feedback making secondary stations flare up. \n\n\"Set it to self-destruct instead,\" he ordered, watching the pattern of the Klingon attack: each ship swept down in turn, firing at the Surefoot and the weapons pod while the others recharged their disruptors. They were scanning their prey; they knew her shields were about to give way, and they would all want to move in and make the killing blow. \"Two second delay, on my mark.\" \n\n\"Two seconds?\" C'Rash exclaimed. \n\n\"Do it!\" Another strike, with more feedback on the Bridge stations. \"Shields down! Warp drive out! Helm, release the tractors on the pod, get ready to put the pedal to the medal on my mark, Full Impulse!\" He watched the three cruisers practically fight to get ahead, like a litter of cubs after the same toy. \n\nThat's it, you predictable bastards... \"NOW!\" \n\nThe ship lurched forward, the screen switching to Aft View, as the cruisers approached the weapons pod- and the combined yield of 200 photon torpedo warheads and the phaser emitter batteries was released, the energy wave travelling out, striking everything... including the Surefoot, sending it hurtling and those inside sprawling, the power failing momentarily. \n\n* \n\nWhen the ship first lurched out of the comet, Doc Masterson emerged from his office in Main Sickbay, barking, \"Get them patients strapped down!\" \n\nThe nurses snapped into action, moving to each of the beds and activating the restraint fields, reassuring those who might have been conscious that everything would be okay. \n\nEydiir clutched a table as the ship rocked under fire, glancing over at her fellow nurse. \"Are you okay?\" \n\nJika Showri was steadying herself, nodding and smiling. \"Like riding the wild waters in the Mikklis Provinces-\" \n\n\"Excuse me? Nurse Jika?\" \n\nThey turned to the door, as Commander Bellamy entered. Eydiir's hackles rose at his presence; she hadn't liked the man from when he first boarded the ship, and her dislike reached a nadir that morning, when he'd ordered Jika to remove her D'ja pagh. He was arrogant beyond belief. \n\nBut she saw none of that now, as he approached the Bajoran. \"Nurse... I wish to apologise to you for my behaviour today. I overstepped my authority. I behaved badly. I hope you can forgive me.\" \n\nThe young woman reacted, before realising she was leaving the man hanging there, and nodded. \"Thank you, Commander. Of course.\" \n\nBellamy offered a slight smile and a nod back, before looking to the rest of them. \"All of you performed superbly today; I will be making a note of it in my report.\" \n\nThen he departed. \n\nMasterson grunted. \"Hmph, someone must have cleaned the burrs out of his britches.\" \n\nEydiir offered a smile. \"I suspect that someone will be the Captain.\" \n\nThen the ship went to Red Alert, as it rocked more sharply now. Masterson clutched the side of the nearest biobed. \"Stations!\" \n\nThe staff moved again, Eydiir to the doors, by the trauma equipment, ready to be first to accept wounded - but keeping an eye on her bag under an adjacent table, in case things turned nasty. As it inevitably would. When she chose to return to the Surefoot to continue her medical studies while still working, she knew that they would be facing Klingons - and that it wouldn't just be her medical skills needed. \n\nThe ship rocked once more, and then again, and she looked around at the rest of the staff - Jika, Scarlo, Bellamy, Li - and then at Masterson, who had returned to his office, leaning forward to get an update on his screen and liaise with Dr Shyrik in the Auxiliary Sickbay, before returning with the news. \"The Bridge says the Klingons are back! Be ready for battle damage injuries, more of the Tsukuba survivors back in-\" \n\nSuddenly the ship lurched hard, the power failing, though the backup generators kept the restraint fields on and the patients in their beds. Eydiir recovered first, rising and assisting the other nurses back up - before hearing sounds in the corridor beyond. She tensed, returning to her bag and retrieving her weapons, slapping the phaser onto her belt before lifting up one of her Capellan swords. \n\n\"Eydiir!\" Masterson shouted, \"What in Hades' Hell are you up to, girl?\" \n\nShe drew closer to the door, its sensors reacting to her presence by opening; the corridor was darkened, with a few of the Tsukuba's survivors out there, on the floor... and the sounds of assault, screams... and Klingonese. She slapped her combadge. \"Bridge! Intruder Alert, Deck 3 Aft, near Medical Support!\" Then she rose, motioning to the people in the corridor to race into Sickbay - before leaving. \n\n\"Eydiir!\" Masterson called after her. \n\nHer eyes adjusted to the reduced lighting, but she slowed down as she heard disruptor fire, and drew her phaser, stopping at the corner as he saw bodies sprawled on the floor. \n\n* \n\nOn the Bridge, Hrelle helped himself back to his feet, rushing over to C'Rash, who was clutching the side of her head after smacking it on the side of her station, before quickly shifted his attention to the status, grunting. \"The Klingons were caught in the explosion.\" \n\nC'Rash took her hand away from her head to shake some of the blood from it. \"Destroyed?\" \n\nHrelle grunted. \"Looks like it, but I want a full tactical scan to confirm that-\" \n\nSuddenly Eydiir's voice came over the intercom. \"Bridge! Intruder Alert, Deck 3 Aft, near Medical Support!\" \n\nHrelle's hackles rose. \"Neheru! You have the Bridge, get power and shields back up!\" \n\nHe moved to the door, C'Rash following and shouting, \"I can go! You don't need to come along!\" \n\nHe didn't respond as he raced down the hall to the access to Deck 3. \n\n* \n\nPeople still in the corridors quickly hugged the walls as the Caitians raced past, slowing down as they saw Eydiir and several Security crewmen crouching by a corner, ducking instinctively as green disruptor bolts shot past them to strike the intersecting wall, creating sparks and leaving scorch marks. On the floor ahead, there were several bodies. C'Rash dropped beside them. \"Gorman, report!\" \n\nThe young ginger-haired human glanced up from his Security tricorder in his hand. \"Eight Klingons, holed up in the Morgue!\" \n\n\"They must have beamed over just before their ship went to the Seven Hells,\" she muttered. \"Get back to the Armoury, bring back some stun and neurozine grenades and a launcher! Until they get the transporters back up online they'll have to do-\" \n\n\"Lieutenant,\" Hrelle said blankly. He was staring ahead, at the bodies on the floor. \n\nShe followed his stare, wondering what he was- \"Commander Bellamy.\" \n\nThe man was dead, sprawled over a young Tsukuba crewman; a huge disruptor burn scorched Bellamy's upper back. It was still smouldering. \n\n\"He took the blast,\" Hrelle noted distantly, studying the scene. \"Tried to protect that crewman.\" Sorrow gripped Hrelle. After all that animosity between them they had just started to understand each other... then he started as he saw the crewman beneath Bellamy open his eyes. \n\nHrelle dropped and raised a hand to him. \"Don't move! Stay still!\" As the confused and injured crewman complied, Hrelle rose and shouted around the corner. \"Klingons! This is Captain Hrelle of the Surefoot! Your vessels are destroyed! You have fought an honourable fight! But it's over! Throw down your weapons, live to fight another day!\" \n\nFrom around the corner, a defiant male voice cried, \"Klingons do not surrender! We will go to Sto-Vo-Kor to join our brothers! Come, Starfleet, come and join us!\" He punctuated the invitation with a deep laugh. \n\nThere were strange sounds, sounds of things being moved. \n\nHrelle frowned and peered around the corner. \n\nThe doorway to the Morgue was open. Klingons moved in and out - dragging bodies of the Tsukuba crew and dumping them in a pile like sandbags. Building a barrier. \n\nHrelle's stomach twisted; he understood that the Klingons had no reverence for the dead, not even their own, but to see them willing to use- \n\nHe watched one of them drag out Tosa Natheal. \n\nHrelle heard Gorman return behind him, handing C'Rash the launcher. \"Here, Lieutenant, it's locked and loaded.\" \n\n\"Thanks. Captain, we're ready. Captain?\" \n\nBut Hrelle wasn't really listening. \n\nHe watched the Klingon dump Tosa's nude, broken, burnt body onto the pile. Like she was garbage. \n\nDon't touch her. \n\n\"Captain?\" C'Rash repeated. \"We can take them out.\" \n\nHe watched the Klingon stop, reach down and rip Tosa's Chanaer from around her neck, examining it. \n\nDon't touch her! \n\nHrelle reached up and touched his combadge, growling, \"Computer: turn off all lights in Deck 4 Aft except for Infrared range.\" \n\nThe Klingon cast the woman's symbol of her faith aside like it was nothing. \n\nDarkness gripped everything around them. \n\nDON'T YOU FUCKING TOUCH HER \n\nHe raced out, his Caitian vision letting him see the pile of bodies, and the confused, sight-robbed Klingons behind it, looking around futilely, reaching for blades, disruptors. \n\nHrelle leapt over the bodies and tackled the Klingons immediately behind it, baring his claws and gripping the throats beneath him, tearing into the flesh and ripping it away, the blood spurting upwards as the Klingons clutched their throats. \n\nHrelle rose, facing the Morgue and the remaining Klingons, who were crying out, trying to swipe at or fire at whatever was attacking them. \n\nBut they were unprepared for the Beast who entered, roaring, \"You want Sto-Vo-Kor?\" \n\nHe grabbed the nearest Klingon, wrapping an arm around his neck and breaking it, shoving the body into another. \"Too bad!\" \n\nAnother Klingon struck out with an elaborate knife, a strike Hrelle easily saw and blocked, twisting the knife hand to drive the point of the blade back into the wielder's own gut. \"No Sto-Vo-Kor for you today!\" \n\nHe broke a fourth Klingon's arm, and then his leg, the sounds of the cracking bones loud but drowned out by the Klingon's screams of pain, as Hrelle used him as a shield when the other Klingons fired their disruptors in Hrelle's direction. \n\n\"FEAR!\" he bellowed, disarming more Klingons, before driving heads into walls. \"YOU STINK OF IT!\" \n\nHe broke another neck. \"HELL AWAITS ALL OF YOU!\" \n\nA large Klingon caught up with him from behind, trying to drive a blade into Hrelle's back, but the blade didn't succeed in penetrating Hrelle's jacket. \n\nHrelle drove his elbow up and back into the Klingon's face, and turned to clamp his jaw around the Klingon's throat, ripping into the flesh. \n\nHe drew back, spitting out what was in his mouth, letting the Klingon stagger back and drop to the floor. \n\nA whimper from the floor behind him made him spin. One Klingon left. \n\nNot for long... he reached out and lifted up- \n\nA boy. A Klingon boy, mid-teens, younger than Sasha or Tosa. He was shaking, staring up blindly at the huge shadowy figure that held him. He had a small knife in his hand, but he could barely hold onto it. \n\nFinish him off. \n\nHrelle's heart was threatening to burst through his chest. \n\nFinish him off, Esek... \n\nHrelle smacked the knife from the last Klingon's hand. His voice was hoarse as he reached up and touched his combadge. \"Computer: restore lights in Deck 4 Aft.\" \n\nIt complied - and the Klingon survivor gasped in horror as he saw the carnage around him. ",
        "C'Rash and the rest of her team caught up, carefully stepping around the bodies before stopping at the doorway to the Morgue, C'Rash muttering, \"Seven Hells...\" \n\nHrelle dragged the boy around his fallen comrades and handed him over to C'Rash. \"Get him processed and locked up.\" He sniffed and added, \"He'll need a change of underwear, too. What about the wounded crewman Bellamy saved?\" \n\nC'Rash nodded, passing the boy to one of her men. \"Disruptor wound to the shoulder; Eydiir accompanied him to Sickbay. He should survive.\" \n\n\"Good.\" He looked down as he heard the sounds of Klingons not quite dead. He wiped the blood from his muzzle and tapped his combadge. \"Sickbay: we have wounded in the Morgue, send an Emergency Team.\" After a second he annexed, \"Someone with a strong stomach.\" \n\n\"On our way, Captain, Sickbay out.\" Masterson replied. \n\nC'Rash moved deeper in, to a box on the floor with Klingon script. She opened it, and then closed it again. \"Infernite grenades. If you hadn't moved in when you did, Sir, they would have taken out half the ship.\" \n\nHrelle looked to her, but said nothing, stepping out to the bodies, looking around the floor and finding Nathael's chanaer, kneeling down and carefully replacing it around her neck, before removing his jacket and covering her as best he could. \n\nHe lifted her up and returned her to the Morgue. \n\n* \n\n\"Captain's Log, Stardate 49591.02, Captain Esek Hrelle, Commanding: the USS Diamondback has rendezvoused with us to collect the survivors of the Tsukuba, our surviving prisoners... and our fallen comrades. I have recommended a posthumous James T Kirk Award of Exceptional Valour for Lieutenant Tosa Nathael, for her sacrifice in saving her fellow crewmembers. For all the comfort this will bring her family. \n\nSpecial commendation is also recommended for Commander Emil Bellamy, for his sacrifice. I wanted to contact his family... but he had none. No partners, no parents, no children, no family. The next of kin on his personnel record lists his previous commander. \n\nI'm dismayed that he had no one to mourn for him. I could have been him, had I never met Sasha's mother, and taken the consequent path I took. And I am disheartened that I let things go on as long as I did without making some connection to someone serving under me. I won't let that happen again.\" \n\n* \n\nDeck 2 Fore, Captain's Quarters: \n\nHe looked into the recorder, swallowing before continuing. \"I was with Tosa in the end. She talked of both of you, and of her faith, which had given her the strength to save so many lives on her ship. She had her chanaer with her, she talked of the All-Mother and how she would be on the Shores, and would await you.\" \n\nHis eyes welled with tears. \"Mr and Mrs Nathael, I am a parent of a daughter Tosa's age, so I can imagine what you might be feeling now. So I am telling you what I would want to hear at such a time. She was not alone. She was not in pain. She was at peace... and her body remained undisturbed. I hope this brings some comfort to you-\" \n\nHis door buzzed; he switched off the recorder, leaned back in his desk chair, wiping his face. \"Come.\" \n\nThe door slid open; C'Rash entered, along with a tall, smiling human female with dark skin and colourfully-braided hair and pips on her uniform. His niece drew up beside her. \"Captain, this is Lieutenant Commander Olivia Zawati, en route to the USS Pierce at the Antares Maelstrom-\" \n\n\"And willing to pay my way by acting as a temporary First Officer for your ship, Sir,\" Zawati added, \"At least until you reach the Sherman Sector.\" \n\nHrelle rose, stepped around his desk and approached the woman, holding out his hand. \"Welcome aboard, Lieutenant Commander. And thank you.\" He tilted his head. \"Your accent... Wakandan, is it?\" \n\nShe beamed as she dropped her hand again. \"Very good, Sir. I've never known anyone who could recognise it.\" \n\nHe tapped at the side of his head, just below his left ear. \"Caitians are skilled with languages, though the Universal Translator doesn't often allow us to appreciate the finer points.\" \n\nZawati nodded, her expression sobering. \"Captain, I'm aware that I'm replacing a member of your crew that you've lost, and that feelings will be raw at this time. I promise to do my duty, and stay out of everyone's way-\" \n\n\"No.\" He shook his head, offering a smile. \"That's not how we do things on the Surefoot. I want to get to know you better while you're with us. Ship's Time is 1630 Hours; would you like to meet for dinner at 2000?\" \n\nThe human woman hesitated with her reply, prompting C'Rash to speak up. \"I should point out that Captain Hrelle is not making any romantic or sexual overtures.\" \n\nHrelle frowned at the Caitian female - before realising how his invitation might have been misinterpreted, and felt himself blush under his fur as he spoke rapidly. \"Uh, the Lieutenant is quite right! Sorry if I gave you the wrong impression! I'm happily married, with a wife and cubs! Well, one grown-up cub and one toddler cub! Not that he toddles much, he's a sprinter, I can barely catch him! Anyway, I promise you, if your pants come off because of me, it'll be because of boredom, not because I'm flirting with you!\" He stopped, his face feeling like it was on fire. \"Please say something before my foot gets permanently lodged in my mouth.\" \n\nZawati laughed with relief. \"Okay, Captain: I'll see you in the Officer's Mess at 2000 Hours. As long as we stay in public I'll think I'll be safe.\" She looked to C'Rash. \"I'll meet you in your office for the security briefing at 1900 Hours, Lieutenant.\" \n\nC'Rash nodded. \"See you there, Ma'am.\" \n\nThe woman smiled at Hrelle and departed. \n\nC'Rash stared hard at Hrelle, who shrugged. \"I thought I handled that well.\" At her expression he asked, \"You didn't think I was flirting with her, did you?\" \n\n\"No, Sir. May I speak freely, please?\" \n\nHer formal address caught his attention. \"Go ahead, Lieutenant.\" \n\nShe straightened up. \"I wasn't entirely truthful to my team in the Morgue. I made it seem that your assault on the Klingons was necessary to prevent an imminent disaster. It wasn't. We could have taken them out without the loss of life you inflicted-\" \n\n\"I disagree,\" he said sharply. \"They were ready to go to Sto-Vo-Kor and take as many of us with them as they could. My way actually saved lives.\" \n\n\"Maybe,\" she conceded. \"But you didn't go in because you wanted to save lives. Did you?\" \n\nHe stared hard at her, tense, ready to order her out... before relaxing again. \"No. I saw what they were doing to the bodies of the Tsukuba crew. Treating them like that.\" \n\n\"'Them'? Don't you mean Lt Nathael? I know you were there when she died. I can guess how much she reminded you of Sasha. I understand what you might have been feeling at that time, letting the Beast out on them.\" \n\nShe drew closer, and he saw the fear and concern in her eyes, caught it in her scent and her voice. \"Uncle Esek... I'll accept when your Beast is unleashed when lives are at stake and the odds are against us, like they were on Skaros, when we saved those children. But I won't accept it when you unleash him out of anger.\" \n\nHrelle frowned. \"I didn't know you cared so much about the Klingons.\" \n\n\"I don't give a damn about the Klingons. You could have died. And what would Kami and Sasha and Misha, our clan - me - had thought if you died, not to save lives but because you lost your temper? You mean too much to all of us.\" \n\nHrelle let the tension of the confrontation seep out of him like air from balloon. \"You're right. I'm sorry. Thank you.\" \n\nShe hugged him, their usual relationship momentarily set aside to reveal the naked truth. \n\nThen she pulled back, wiping the tears from her face. \"Well... I was going to the gym for a quick workout before the Security briefing with our new XO. Care to join me, Fat Boy? Not like you don't need it.\" \n\nHe offered a smile. \"Thanks, Brat, but I need some time alone. Maybe tomorrow?\" \n\nShe nodded - hugging him once more before leaving, offering an almost-imperceptible, \"I love you, Uncle Esek.\" \n\nHe watched the door close, stood there a while longer, before returning to his desk - taking one of Kami's blouses with him, breathing in her scent, seeking to push aside the shame of his actions. But he couldn't. And he knew he shouldn't. Because C'Rash had been right. He gave the Beast too much freedom. \n\nAnd he could have killed that Klingon boy, too. It didn't matter that the Klingons wouldn't have thought anything of it, because they considered anyone who could hold a blade an adult. It didn't matter that Starfleet wouldn't have thought twice about it, given how many had died at the Klingons' hands in this insane war. \n\nIt mattered to him. \n\nHe hated himself. \n\nA notification beep from his display caught his attention, though for a moment he considered ignoring it. But then he accepted it- starting as the blank screen came to life with- \"Kami! Misha!\" \n\nHis heart raced as the image of his wife and son appeared, Misha sitting up in his mother's arms, the pair of them sitting in some colourful flowery garden. Kami smiled. \"Hello, Beloved!\" She looked to Misha. \"Say Hi to Papa!\" \n\nThe toddler beamed and waved his stubby hand at the camera. \"Hi, Papa! Love you!\" \n\nHe sat up. \"It's you! But how- how can you-\" \n\n\"This is a recorded message, Esek,\" Kami continued. \"Made about a day after you left, with T'Varik's help, and planted in your computer. It's set to activate if you don't receive a message from us for more than a week because of the War. And it's here to help you, so you'd better pay attention.\" \n\nThe recorder drew in closer to his wife. \"By now you'll be missing us, as much as we're missing you. But we have each other here. You don't. Our scents will be depleting in our quarters, and you'll be feeling a little lost. Not yourself. \n\nSo... we're here to remind you: you are Captain Esek Hrelle of the USS Surefoot. You are my husband and the father of this wonderful cub. You command. You lead. You defend. You comfort and support and forgive. And you save lives. You make a difference. \n\nYou are the Best. \n\nNever forget that. \n\nAnd never forget that we'll be with you again soon. \n\nSo behave yourself and remember who you are, or else...\" She smiled at Misha. \"What do we say?\" \n\nMisha put on the sternest face he could as he shook his finger at the camera and announced, \"It's Trouble Time, Mister!\" \n\nKami smiled and copied Misha's gesture. \"It's Trouble Time, Mister!\" She hugged her son, smiled at the camera and finished with, \"Keep safe, Esek. Please. We love you.\" \n\nThe screen went blank. \n\nHe sat there, tears pouring down his face, his voice choked as he replied, \"Love you, too...\" \n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE IN... CRIMINAL ACTS"
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "star trek fanfic",
        "star trek fan fiction",
        "surefoot",
        "caitians",
        "klingons",
        "starfleet"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-31-redpaw"
}