{
    "title": "Between the Lines Ch. 06",
    "pages": [
        "* Doug *\n\n As it turns out, there are eleven of us crammed into Todd and Aaron's living room for the read-through on Thursday evening. Larry, Daniel, Shawn, and Tom are all squeezed together on the sofa. Nicki and Joseph perch on chairs borrowed from the dining room table, across the coffee table from Todd's massive armchair throne. Aaron, Ben, Tiffany, and I cluster around the piano and read through forty minutes of music, most of it based on scenes from Likeness of a Sigh and A Grave Man.\n\nI watch Larry closely every chance I get. He's already heard much of Thomas's material\u2014the arias that Aaron and I recorded a couple months back. But he sits up straight and pays careful attention when Tiffany sings the new music for Evelyn. So, I notice, does Nicki, apparently taking mental notes for her own performance in the role.\n\nWe perform in no particular order, not trying to conform to the plays' chronology, but highlighting the new selections for Larry's sake while including the earlier material for everyone else's benefit. Tiffany and Ben are sight-reading their way through some tricky music with apparent ease. Not all singers have that ability; I may never be able to repay Aaron for finding this pair.\n\nThomas's final aria is the centerpiece of the presentation, and to my ear it's the one false note in the entire evening. No one else seems to notice anything amiss, but I can't help frowning. It's well-structured, displays the voice well, has the right energy and mood for a grief-frenzied lover, but to my critical ear it falls just a little flat. I wrote the damn thing. What did I do wrong?\n\nNo time to fret about it now. Tiffany is already waiting for the introduction to her next aria. I file my misgivings away to fret about later.\n\nWe end with something new, a duet for the two men from the opening love scene in Likeness of a Sigh. I'm particularly proud of this one. Aaron and Ben give it their all, the supple tenor and robust baritone voices intertwining as sensuously as the characters' bodies would on stage. Wonder how a director will pull that off? I've seen too many awkward stagings of the opening scene of Der Rosenkavalier to be confident that a duet as sexy as this will come off in performance. Maybe Daniel will have some suggestions.\n\nThe room is still for a few moments after we finish. I finally risk another peek at Larry. At first, he seems impassive. Shit.\n\nThen I catch a glimpse of the single tear running down his cheek.\n\nI experience the most peculiar sensation at the sight\u2014triumph at knowing my music has achieved the desired effect, mixed with horrified chagrin at having caused Larry pain. It's all I can do not to spring to his side, wipe the tear away, and plant a kiss on that cheek to soothe it. What's happening to me?\n\nI drag my attention back to the here and now as our little audience starts to applaud enthusiastically. Relieved and confused, I slump down against the piano and nod my thanks to the singers. We pulled it off.\n\nAaron fixed hors d'oeuvres for everyone, but after the recital is over, it's clear we're all spoiling for something more substantial. With a sly wink in my direction, Todd bellows out over the cheerful hubbub, \"All right, who's up for ribs?\"\n\n\u2014\u2014\u2014\u2014\u2014\n\n* Larry *\n\nI wonder if anyone else notices the look of death Aaron shoots his partner. At first I fail to make the connection, then I remember that Doug had described his hosts as vegans. Apparently that's not exactly a unified front. The baritone gives in with admirable good grace, though, and consents to join us in a caravan toward the nearest barbeque house. \n\nIt more than measures up to Todd's promises: a sweet, smoky, spicy feast. All around the crowded table I see happy, animated faces and sticky fingers. Doug appears to be in carnivore heaven. Aaron contents himself with a salad, then, when everyone is sated, with his own sly glance at the drowsy Todd, loudly suggests we all go out dancing.\n\nDaniel, seated next to me, glances at his phone and hastily excuses himself. Having caught a glimpse of the screen, I think I know why. The display showed one of the racy photos I took of Jeff in his Queen Mab costume. Catching Doug's look of disappointment at his departure, I quietly explain, \"It's time for the evening check-in call to his lover. Daniel and Jeff take the long-distance thing very seriously.\"\n\nEveryone else gamely piles into our various vehicles and caravans off to a bar somewhere in town. I wind up in the back of Todd's Land Rover, sandwiched between the two chattering girls and staring somewhat wistfully at the back of Doug's head\u2014thanks to his long legs, he was given the front passenger seat. Tiffany and Nicole are getting along famously. Their company is pleasant enough, but I had been hoping for a quiet word or two with him. \n\nThe bar caters to a mixed crowd, both straight and gay couples mingling freely on the dance floor. The younger members of our group whoop and pair off. Joseph, blushing furiously, accepts Tiffany's invitation to dance. Ben gallantly lends his arm to Nicole. Shawn and Tom, to the surprise of everyone but myself, stroll hand-in-hand onto the floor to join the throng.\n\nWhich leaves four of us looking at each other. Todd takes the lead. \"So, have you two ever done any boot-scootin'?\" he asks me and Doug. We both shake our heads. Todd and Aaron exchange mischievous glances. \"All right, cub,\" Todd declares, \"let's show these boys the ropes!\"\n\nBefore I know it, Todd has pulled me onto the floor. Aaron has Doug in hand right behind us. There is no question that the big, burly pianist with the gentle touch will lead, and he shows considerable patience in walking me through the steps. I think Aaron has the more difficult job of it, teaching Doug to lead from the following position. He seems to be doing a bang-up job of it, though, in the glimpses I catch when I'm not staring at my feet and trying to keep Todd's instructions in my head. \n\nOnce I've stopped clenching my jaw and counting through my teeth, I start to relax and actually begin to enjoy the sensation of being whirled around the dance floor. Todd navigates us skillfully between the other couples.\n\n\"So, what's up with you and Dougie?\" he inquires amiably.\n\nI miss a step. Todd compensates smoothly, steadying me with sure hands.\n\n\"Sorry, didn't mean to startle you there,\" he apologizes. \"I shouldn't pry, but I couldn't help noticing the two of you can hardly keep your eyes off each other.\"\n\nI feel my face flush and curse my fair skin. Fortunately, the lights are dim enough I don't think Todd notices.\n\n\"Not as subtle as we thought we were, eh?\" I reply, attempting a joking tone.\n\n\"Not if you've known Doug as long as I have. He's never been shy about letting people know when he's interested, and he's definitely interested in you, Mr. Ryan.\" He studies my face for a few steps. \"And I'd say the feeling's mutual. Am I right?\"\n\n\"There's... certainly a spark between us, I have to admit. But it's early days yet,\" I hedge. \"It could just be a little flirtation that'll burn itself out in time. I'm sure he'd prefer someone closer to his own age.\"\n\nTodd frowns. \"Don't sell yourself short,\" he tells me seriously. \"Doug's a good guy. One of the best I know, actually. Aaron and I, we've been hoping for a long time he'd find someone worthy of him. My gut tells me you might just be that guy.\" He winks down at his substantial midsection. \"And my gut's rarely wrong.\" \n\nI mumble something conciliatory and non-committal, and concentrate on my dancing. Todd tactfully lets the subject drop.\n\nAfter a few more songs, Todd and Aaron reconvene to consult. \"What do you think, baby, are they ready?\" Aaron asks.\n\n\"Ready to leave the nest!\" Todd cheerily exclaims, and pushes me into Doug's arms. Just like that, our bearish hosts disappear into the crowd, their eyes already fixed solely on one another.\n\nDoug looks at me and shrugs. \"Well, care to dance, Larry?\"\n\nThey're playing a waltz now, something lilting and wistful. That at least should be easy enough. Despite Todd's careful coaching, I still haven't quite caught the knack of the shuffle. I shrug in return, blushing like a Southern belle, and reply, \"Lay on, Macduff.\"\n\nDoug has been holding out. Growing up a New England WASP, he must have been forced into social dance lessons at some point. We whirl around the floor effortlessly, losing ourselves in the ebb and sway of the dance. Doug even gets creative and spins me a couple of times, which makes me giddy and even embarrassingly giggly. At the song's conclusion, he spins me out one last time, then back into his arms and holds me. His eyes are shining like silver into mine. I look back, mesmerized.\n\nThen he bows his head the few inches and captures my mouth with his. If the couples around us notice, no one seems to mind.\n\nA chirpy soprano voice somewhere in the back of my head is trilling \"I Could Have Danced All Night.\"\n\n\u2014\u2014\u2014\u2014\u2014\n\n* Doug *\n\nI have an entire entourage to see me off at the airport Sunday morning. Daniel, Shawn, and Tom are all there to say their goodbyes and wish me well. Ever since the night we all went dancing, Shawn and Tom have begun openly holding hands and behaving like a proper couple. I'm betting on some no-holds barred performances from them once the play opens next week. Todd and Aaron bid me farewell with fierce bear hugs, bristly kisses, and, in Todd's case, a none-too-subtle grope.\n\nFinally, I turn to say goodbye to Larry. An awkward attempt at a professional handshake turns into an even more awkward hug.\n\n\"Aw, c'mon guys, just kiss already!\" Shawn cat-calls.\n\nLarry looks me in the eye and shrugs. I smile, pull him close, and plant one on him. We're playing to the crowd here\u2014Todd and Shawn applaud, and Aaron shows his appreciation with a piercing wolf whistle\u2014but that doesn't seem to make the kiss any less meaningful. In the end, we're both performers, after all.\n\nAfter we've broken off our kiss, but before he leaves my arms, Larry whispers in my ear, \"I like your cologne.\"\n\nI look at him, puzzled, but before I have a chance to reply, Todd swoops in and hustles me off toward the security checkpoint, already chatting about a project we had discussed earlier in the week. Larry diffidently melts into the throng, making it impossible for me to ask what he meant by that. I don't wear cologne. Never have.\n\n* * *\n\n\"Congratulations,\" I tell Erica. \"You've done it. I can't think of a single thing I'd want to change about this piece.\"\n\n\"Pinch me,\" she snarks back. \"I must not have heard you right. That almost sounded like a compliment.\"\n\nWe grin at each other in easy comprehension.\n\n\"Seriously, I think it's the best work you've done yet.\"\n\n\"Well, you made me put enough effort into it.\"\n\n\"Was it worth it?\"\n\nShe stops to think about it. \"Yeah,\" she grudgingly admits. \"It totally was.\" \n\nI nod. \"So, any thoughts as to what's next?\"\n\nHer shoulders slump. \"Can't I just enjoy the sense of accomplishment for one week?\"\n\n\"A rolling stone...\" I remind her. \n\n\"Please don't quote Bob Dylan at me,\" she wisecracks. Kids these days. Wouldn't know a proverb if it bit them. \"Okay, okay, I did have some ideas for a piano quintet.\"\n\nAnother piece for piano. I'd be worried that she's repeating herself, but I can't deny she understands how to write for the instrument.\n\n\"Bring them next time. We'll see what kind of potential is there.\"\n\nAs she's gathering her materials, getting ready to leave, I finally spring it on her.\n\n\"Actually, Erica, there's one more thing you can do with this piece.\"\n\nShe rolls her eyes and clicks her ballpoint pen, ready to take notes for yet another ruthless edit to her baby.\n\nInstead I hand her Todd's business card.\n\n\"You can call this guy and tell him I said it's ready for him,\" I tell her. \n\nShe recognizes the name. Despite her cynical bravado, her eyes bug.\n\n\"How did you get this?\" she demands.\n\n\"I have my ways,\" I answer, smiling. \"I spoke to him while I was out of town. It just so happens he's very interested in premiering a new concerto.\"\n\nErica stands very still for as long as it takes to count to six. Then she emits an uncharacteristically girlish squeal and throws her arms around my neck.\n\n\"Thank you,\" she whispers in my ear.\n\nI gather my wits and disentangle myself. \"No, thank you. Todd's been after me for new material for years. You finally gave me something I could recommend to him without reservation.\"\n\nErica won't be needing my coaching for very much longer. Once people hear Todd play that concerto, she'll have her own students coming to her for training. \n\nMy smile lingers for a few minutes after she leaves. Then it gradually fades, along with my \"proud teacher\" buzz. I feel restless and ragingly horny. Alex emailed me after my return to tell me he had commitments that would keep him busy the first two weeks after my return. We won't be able to connect for another ten days.\n\nAfter my sex-filled week in Austin, ten days seems like an eternity. What's wrong with me? For years I've been perfectly happy getting my rocks off once a week. Now, just five days off the plane, I'm already climbing the walls.\n\nI toy with the thought of calling Larry, but something holds me back. Too soon, I think, we only said goodbye a few days ago. I haven't done any more work on the opera since then. I have no real reason to call him. Besides, he'll be preoccupied with the trilogy's opening this weekend. No point in disturbing him.\n\nMaybe he would welcome the distraction, a treacherous thought whispers in my ear.\n\nNo. No, that's just my boredom and need trying to disguise themselves as altruism.\n\nI settle instead for sending him a brief, casual email: \"Back safe and beating my head against the wall trying to write another love duet. Hope the premiere is more inspired. Thanks for a wonderful visit and break a leg!\"\n\nI hit send, and then sit listlessly a while, my boner an angry, insistent throbbing inside my shorts.\n\nWell, there are ways to take care of that, aren't there? I live in a town swarming with hormonal university students, and not a few of their equally horny professors. A few minutes' search online will get me what I need.\n\nNo professors, though. Not tonight. An older man would remind me too much of Larry.\n\nInstead, I snag myself a graduate student. Adorable, eager, straddling that elusive line between geeky and hot, with hipster glasses and tousled black hair. He's a clumsy kisser, but he has a sweet mouth and a sweeter ass, and we spend a pleasant half hour or so meeting one another's needs. I even manage to get him off twice in that time. Ah, to be twenty-something again.\n\nHe's already dressed and halfway out the door when he says, \"Thanks, man. That was awesome.\"\n\nNo. No, it wasn't awesome. It was nice. Awesome is...\n\nLarry's soft, urgent cries of \"Please.\" His kiss against the palm of my hand. His noble profile silhouetted against the lights of Austin. His body moving against mine on the dance floor.\n\nI've forgotten the kid's name within five minutes of his walking through my door. I'm physically satiated, but I feel emptier than before.\n\nI had intended to call it a night, close the studio, go home and go to bed early, but instead find myself seated in front of the piano, endlessly playing through Thomas's aria over and over again. \n\nIt's still not right. What am I missing?\n\n\u2014\u2014\u2014\u2014\u2014\n\n* Larry *\n\nAramis. I can smell it, strong enough to wake me from a sound sleep. For a moment, I think I'm back in the hotel room with Doug. But no, Doug is back east now, the show has safely and successfully opened in Austin, Shawn and Tom are still riding their romantic high, Daniel is receiving his well-deserved accolades, and I'm home in my own bed. Which means...\n\n\"Ron,\" I groan.\n\n\"Well, don't sound too excited,\" he laughs. The words are sharp, but the tone affectionate. His head is cushioned against my thigh; his fingers are already tickling my bud, wordlessly asking for entry. With the habit of years, I automatically spread my legs and tilt my hips up to allow him access.\n\nFrom behind my closed eyelids I hear him spit into his hand. Then one wet finger probes at my waiting hole. I breathe deeply and relax into the welcome invasion. I'm surprised at how readily my body opens to him. But then, this is a dream. Our bodies can do so many things in dreams they couldn't in real life.\n\nRon is working his magic on my ass with one hand, my nipples with another, my stiff and leaking cock with his mouth. I rock back and forth into the assault, stimulating myself against his hand, his nimble, flickering tongue.\n\nOnce he deems I'm warmed up enough for him, Ron positions himself between my legs, pulls my hips up further until they encounter something warm and hard and wonderful. \"Ready, baby?\" he asks. I groan my assent.\n\nHe slides into me, that smooth, familiar joining I can still remember with perfect clarity over all the years that separate us. \n\n\"You've been getting some practice in since last time,\" Ron notes once he is firmly seated inside me.\n\nI cringe. He knows about my interlude with Doug. \"Oh, God, baby, please don't be too jealous,\" I plead.\n\n\"Jealous?\" he inquires, with a playful twitch of his hips that sends electricity coursing through my body. \"Of course I'm jealous. But angry? Never. Proud. Happy. Relieved, even.\"\n\n\"Relieved?\"\n\nIt's hard to think clearly with Ron filling my senses, the scent of his cologne mingled with the tang of sweat and rut. Hard to follow what he's saying with my helpless body so full of his.\n\n\"How long have you held onto my memory? To my work, even? Thirty years? More?\" \n\nEach question is punctuated by a thrust, each repetition driving him deeper, more insistent and intense. I try to escape into myself, to hide from his affectionate scolding, but his cock, his cock is deep inside me, laying waste to my defenses, and his voice is filling my ears, and his words pervade my mind. Ron is inside me, all through me, inseparable and inescapable.\n\n\"I never asked that of you, Larry. To love me, to remember me, to grieve me, yes, but not that. Not that delay. Not that waste.\"\n\nI shake my head in denial, but Ron has found my prostate, my great joy and weakness. Each practiced thrust unbinds me further, in waves of treacherous pleasure.\n\n\"Your gray-eyed composer's been wasting time, too. No more, Larry. No more. It's time for you both to live.\" \n\nI can't hold back anymore. I cry out in ecstasy as the sperm erupts across my belly from my untouched cock, pulsing in time with the sure, quick rhythm of Ron's pounding.\n\nThose thrusts falter, become erratic as he nears his own completion. All I can do is yield before his insistence, make myself the willing vessel for my love's fulfillment.\n\n\"No more, Larry. Promise me,\" he gasps, and buries his face in my neck, breathing deeply.\n\nHe has come inside me. I can feel his juice trying to leak out of my well-stretched hole. I clench tight, anxious to hold onto this last precious bit of him, my lost love.\n\n\"It's day,\" he says. \"Night's candles are burnt out.\"\n\nI cannot resist Shakespeare. Especially not Romeo and Juliet. He knows this, of course, that cunning Mercutio. I shake my head. \"Yon light is not daylight, I know it, I. It is some meteor that the sun exhales to be to thee this night a torchbearer. Therefore stay yet. Thou need'st not to be gone.\"\n\nSlightly abridged, but Ron's going a damned sight farther than Mantua today. Farther than I can follow.\n\nHe kisses me tenderly.\n\n\"Open your eyes, love.\"\n\nI shake my head again, squeezing my eyelids tight shut against any possible sliver of light. I know what happens if I open them. I know what I will lose. And I know, somehow I know with certainty this time it will be forever.\n\n\"Open them, Larry. For me. One last time.\"",
        "\"No,\" I whisper. \"Please. Not yet.\"\n\n\"For me, love.\"\n\nI sob, and slowly open my eyes.\n\nThe room is full of light, dazzling, refracting through the tears that fill my eyes. So much light, everywhere.\n\nAnd in the midst of it is Ron. My Ron. Perpetually young, naked, laughing through his own tears, his long blond hair sun-streaked, tousled and sweaty.\n\nHe bends to kiss me. I wrap my arms and legs around him, holding him tight as though never to let him go again.\n\n\"I mean, sir, in delay we waste our lights in vain, like lamps by day,\" he whispers in my ear.\n\nThen he pulls back out of my body, out of my arms, glorious, naked, leaving me sated and bereft.\n\n\"Love well, my heart,\" he tells me.\n\nAnd it is day, and Ron has vanished forever. I find myself once again alone and naked in the morning light, with tears running down my face. But not tears of grief this time. After a lifetime and more of grieving, it takes me some time to recognize them as tears of joy.\n\nI find my pajamas in a crumpled heap by the bed. How Ron got me out of them I will never understand. I pick them up and, after a moment's reflection, throw them in the garbage can. Somehow in the course of the last few weeks, I have rediscovered the sensual, luxurious freedom of sleeping in the nude. I may never wish to sleep any other way again.\n\nAnd, for the first time in thirty years, I might just possibly be ready to share that freedom with someone else. \n\n\u2014\u2014\u2014\u2014\u2014\n\n* Doug *\n\nAlex calls me Friday night to ask if we can meet somewhere for a drink Sunday instead of spending our standing date at my place as usual. I'm not sure how I feel about this disruption to my routine, but I agree, largely out of curiosity about his motive for requesting the change of venue. We certainly won't be able to pursue our usual Sunday activities at any bar, even the one or two shadier ones in town. For some incoherent reason, possibly just because it's the last place I met anyone for a drink, I suggest the bar at the Lexington Hotel, where I first made Larry's acquaintance.\n\nWhen Alex slides into his seat across the table from me at the Lexington, I can tell at once that more than our meeting place has changed. This is an Alex I've never seen before: awkward, diffident, unable to meet my eye for more than a few seconds at a time, fidgeting with his drink. After a few minutes of awkward, forced small talk, he finally blurts out:\n\n\"Doug. I want you to know. I like you a lot. I mean, I'd hate for you to think I didn't... I've really enjoyed all the time we've spent together.\"\n\nAll the howling in ecstasy he'd done these last ten months was kind of a tip-off, I think, but I'm intrigued. Alex is either about to break it off or declare love to me. While he visibly struggles to voice his thoughts, I find myself abstractedly wondering which of those alternatives I might find more unwelcome. I'm still turning the possibilities around in my head when Alex steels himself and looks me full in the face for the first time.\n\n\"I've met somebody.\"\n\nAh. Of course.\n\nNow that the plug has been pulled it all comes gushing out, but his eyes are already telling me the whole story, without the help of words. This isn't the cocky, assured, coolly sexual bottom boy I thought I knew. These are the eyes of young man in the first flush of love, warm, vulnerable, and alive with wonder.\n\nI lay my hand on top of Alex's, saying his name as calmly as I can manage and interrupting his halting explanation of how The One happened into his life. He stutters to a halt and stares at me apprehensively.\n\n\"I'm glad for you,\" I tell him.\n\nHe looks at me in disbelief. C'mon, Doug, that look says. No man likes to hear he's lost out to a rival.\n\n\"I am,\" I reassure him. \"Not that I won't miss spending time with you\u2014'cause believe me, I will. But if this is the real deal between you and...?\"\n\n\"Richard.\"\n\n\"Richard,\" I repeat. Naturally. Not Rick, Rich, Ricky, or Dick. Classic gay. Ah, well. \n\n\"Richard's a lucky man,\" I tell Alex, surprising myself with a small, sharp pang of regret. \"If being with him is what's right for you, then go for it. I never asked you for any commitment, and I don't want you to feel like you're under any obligation to me. We've had great times together,\" and I surprise myself again with a rush of warm sentiment as I remember each of those times, in glorious, salacious detail, \"and I'll always be grateful for them. But you don't have to worry about my feelings. I'll be fine.\"\n\nAlex expected me to fight. He expected me to feel hurt, betrayed. I can read it in the open book of his face. Right now he doesn't know whether to feel anxious or relieved that I'm taking this so well.\n\n\"Is that all you had to tell me?\" I enquire archly.\n\nHe nods, eyes still puppylike and uncertain. God, he's so young.\n\n\"Then what are you still doing here?\" I smile and arch my eyebrows. \"Go get 'im.\"\n\nHe smiles in turn and stands up to leave. Surprises me by pouncing in for a quick, fierce kiss and a whispered \"thank you.\" And, just like that, Alex is gone.\n\nI finish my drink, hesitate, order a second, and sip it leisurely, staring out the window at the late spring evening. My Sunday routine has been broken yet again, and I'm at a loss, not ready to return to my apartment, but not knowing what else to do with myself.\n\nI should be thinking about Alex, but his is not the face occupying my thoughts. Instead I'm remembering Larry, sprawled across the hotel bed, sweaty, disheveled, and blissful, eyes wide and shining with wonder. Why him?\n\nOh. Because that's the same expression Alex was wearing just now. Ron Gordon must have seen that look on Larry's face countless times. Perhaps that was what made him fall in love in the first place\u2014the spectacle of a beautiful man overcome by wonder.\n\nThe theme for Thomas's damn aria drifts through my brain. Agitato, raging, swirling. Everything someone would feel and express when they lose someone close to them, right? \n\nWrong. Oh, how wrong I was. How did I not see it before?\n\nThat anger has its roots in a place of vulnerability, of tenderness. What my aria has needed all this time is simply a countermelody, something lyrical to remind the audience of what truly lies between the lines of heartbreak and anger: the irreplaceable love that has just been lost. A melody that hearkens back to the simple wonder of two people finding one another against all odds, the first duet between a pair of matched souls.\n\nFor the first time, I wonder just what kind of expression my own face might have been wearing that sweaty, sultry afternoon in Austin.\n\n* * *\n\nMay 4, 2010\n\nDear Larry,\n\nIf it's not too great an imposition, might I come visit you sometime this summer? I've had some new thoughts about the musical setting that I would love to share with you. More urgently, however, I think the last time we saw one another, you showed me something very important, and I've only now begun to realize it. I solemnly swear I will be on my very best behavior. Unless, of course, you feel like misbehaving, in which case you may consider me wholeheartedly at your disposal.\n\nYours very truly,\n\nDoug\n\n* * *\n\nMay 5, 2010\n\nDear Doug,\n\nPlease come. I look forward to hearing the fruits of your labor, but even more to seeing you. I can assure you that misbehavior is not only permitted but most definitely expected.\n\nAffectionately,\n\nLarry\n\nTHE BEGINNING"
    ],
    "authorname": "ikhneumon",
    "tags": [
        "recital",
        "opera",
        "singers",
        "dancing",
        "casual sex",
        "grief",
        "dream",
        "supernatural",
        "gay anal",
        "romance"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/between-the-lines-ch-06-1"
}