{
    "title": "The Lampmaker Ch. 11",
    "pages": [
        "This is the last chapter of the original Lampmaker series. Thank you for all the comments thus far and if you have more, please be polite and useful. Thank you.\n\nChapter 11, Jewel\n\nLacey smiled approvingly as Master worked out with Nicole. He was doing pushups after an hour long work out session and was stripped to the waist. Lacey smiled as she looked over Master's sweaty, ripped body and felt her pussy tingle.\n\n\"Too bad I'm not the one for tonight. Just watching Master work out turns me on, but he has been doing so well with Dominika's schedule and treatment I don't want to chance it.\" Lacey thought to herself. He had suffered from very few episodes after the changes had been put in place and Lacey was hopeful that they had that problem under control and might not need another genie.\n\nMaster Rick was on his third week of his new regimen and Lacey and the other genies were all VERY happy with the results. Rick had been a stud before, but he seemed even more handsome now. His diet had improved greatly and Evie's magical garden had turned out some wonderful healing herbs and plants. Rick now had a family style breakfast and lunch every day with all the genies and everyone enjoyed the splendid dishes Bridget's kitchens were producing.\n\nRick also had his drinking under control. A cup of wine at most every day. Rick usually took it with Ali in the afternoon.\n\nLacey grinned at the thought of the \"Grand Vizier\". Lacey had wondered about his comment about not having alcohol in his old reality and if he might have a reaction like the Indians had when the original colonists had arrived in the US. She didn't need to wonder anymore. The answer was a resounding yes.\n\nAli had definitely developed a drinking problem. Lacey estimated he was drinking at least a full bottle of wine a day at least, and his slaves gleefully helped him along with a little secret encouragement from Lacey and some magical flowers. Ali now had six slaves as Lacey had been out with Rick on a shopping trip and had gone into Agent Provocateur and had immediately noted the two lovely little things working at the front desk. She had suggested to Rick that Ali deserved some more slaves for all of his help in getting Dominika and Rick had agreed after Lacey had \"convinced\" him with the help of her Lotus perfume.\n\nThe two girls had been easy to enchant, they had quit at the end of their shift and Lacey had given them to Ali when he was released the next morning.\n\nLacey had been very careful to slowly encourage his drinking while trying to appear as someone who was concerned for him. She made sure Rick knew about Ali's developing problem, and she made sure Ali thought she was trying to help keep it a secret from Master Rick.\n\nAli had slowly been giving up his monitoring of day to day activities in the household and had been delegating more power to Lacey. Lacey had carefully managed Rick and had convinced him to let Ali have some fun while she kept an eye on him for Master.\n\n\"He has never had fun before. I can watch everything, so let him enjoy his slaves and his wine for a while.\" Lacey had said. Rick had needed some convincing but she had gotten him to go along.\n\nNow Rick and Ali would meet in the afternoon and Ali would show up buzzed and flushed with several of his slaves doting on him. Rick and he would joke and relax and play cards or chess (Ali had been unbeatable for a while, but now his skills were slipping), and Lacey could tell the strong Rick was simply humoring Ali while secretly being disappointed with him.\n\nRick had confided to Lotus (who of course told Lacey) that he was disappointed that Ali lacked any self-control and couldn't master himself after seeing Ali this way after a couple of days. Lotus had reminded him about his own issues and Rick had had an episode in which his head spun and he had flipped personalities for a few moments. He had then slipped back after Dominika had spoken to him, calmed him down, and with Lacey's help drawn out the strong Master. After that Lotus, Lacey, and Dominika made sure everyone understood that was not a topic to bring up in front of Master.\n\nIn the end, Rick would wake up Ali with the others in the morning, take the morning report, and then Ali would huddle with Lacey for a bit and have his first glass of wine. Lacey showed him how well things were going and every day, bit by bit, she carved a little more power from Ali and spent a bit more time with his slaves and wine. He would then join Master for the afternoon session, and then return for more drinking and sex until he passed out and Rick would walk in and return him to his lamp.\n\nRick knew about Lacey taking over Ali's duties and had thus far let it slide, and Lacey suspected strong Master was testing her. And she was determined to pass that test and hopefully one day convince Master that maybe Ali needed to stay in his lamp for a while.\n\nBut where she had success with her coup against Ali, she now had another potential issue and it came from the last genie she would have ever thought.\n\nEvie was kind, gentle and simply the nicest genie out of all of them. She was always checking the garden and talking to her plants and making sure fresh blooms and flowers abounded. Lacey had to admit that the palace simply smelled like heaven and Evie had started to make some lovely perfumes for all the genies to wear. Some were simply wonderful scents, but others were magic.\n\nThey now had perfumes that could enchant people, put them to sleep, make them happy and light-headed, make them hungry, or even horny (Evie kept that one locked up on the orders of Dominika).\n\nBut all of that aside, Evie had been made differently and bound differently. When Master had bound her, he had done it in a different way and to Lacey's horror Rick hadn't added the part about her being a harem slave. In the end, for Rick it made no difference. Evie dressed as his genie and obeyed him without question and was always ready to hop into bed with her beloved Master.\n\nBut for Lacey, she found that while she could command the other genies to an extent, and use her magic to make them into giggling harem bimbos and sluts, none of that worked on Evie. Evie did like her wine, and it did affect her as it did all genies, but she controlled her drinking. Lacey had been working a couple of the genies not in her camp to get them to drink more, and was having a bit of success (not nearly as much as with Ali), but Evie was proving to be impervious and Lacey didn't want to push it and possibly tip her off. \n\nLacey had also found out that in terms of standing, Evie in reality had roughly equal standing to her and Ali. Lacey wasn't sure if Evie realized it, but she had. Even with Ali's power in her hands, Evie was the one genie who could tell her no.\n\nLacey scowled as she thought about it. She had refused to let Lacey have a private bottle of the lust perfume based on Dominika's report on Master's health. Lacey couldn't push it. And worse, afterwards Evie had started to keep some inventory on certain magical plants, including the lust flowers and real Lotus blooms.\n\nLacey didn't think she suspected that anyone had taken any, but was more along the lines of being preventative. Lacey had already taken and hidden some Lotus blossoms and lust blooms very early on and had made two small vials of Lotus and Lust perfume which she kept handy. She would never use it on herself, but she had used it on Master once, and also on Ada. One spritz and Master would be completely blanked for what had been going on and very confused. Anyone could quickly take him in hand a give him a short story that he would believe and then he would move on. She had spritzed Master in the lingerie store when he had refused to enslave the two models working there. \n\nOne spray and Rick's eyes had fluttered shut for a few seconds and then opened. He had looked confused and Lacey had simply started talking. \n\n\"Master? Master, please, if we are going to enslave those girls as a gift for the Grand Vizier I need your assistance.\" Lacey had said. Rick had looked around blankly and Lacey had given him an exasperated look. \"Master, please! This was your idea after all; now make sure no one is coming so I can work my magic.\" Rick had looked around and then shook his head and moved behind her to watch for anyone while she enchanted the girls.\n\nLacey had been very happy with that, but she had then found out that she had to be really careful with it as Rick got some on his shirt and he got another whiff later on and Lacey nearly walked on without realizing that Rick was standing there like a zombie. \n\nFor Ada, Lacey had used it on her to get her to put in a special program that only she could activate that would allow her to shut off any monitoring of the system in the room or area she was in and once she was done, Lacey had blanked her memory that she had done it. Lacey had been very nervous about doing that, but it had worked perfectly as near as she could tell. So she could plot with Lotus and Dominika without fear of being recorded.\n\nRick finished up his work out and kissed Nicole who bowed low. Rick then took a towel and walked over to Lacey. \"Hey there beautiful. Care to wash my back?\"\n\nLacey smiled. \"Of course Master, just remember, washing only. Nothing else until you get to bed Susan tonight.\"\n\nRick looked sad but nodded. \"I can't complain about how much better I feel, but I do miss the sex. Especially the two and three and five on ones.\"\n\nLacey rolled her eyes as she took Master's arm. \"Master, I would say that in this case you men are all alike. Except no other man can please a woman like you can.\"\n\nRick smiled and gave her a quick kiss. He showered and then eased into his hot tub and Lacey began her massage. Rick sighed and leaned back. \"Lacey, I have been thinking about your request for a party at our palace. I think it would be a wonderful idea. I was thinking Halloween in several weeks. We could use our magic in the open and people will think it's a special effect. You and all my slaves can come as genies. And I'll wear my normal Princely robes.\"\n\nLacey laughed at that. \"Master, what a splendid idea! Yes, I think we can certainly make this work. It will be a party of legend.\"\n\nRick and Lacey talked a bit while Rick soaked and soon Lacey had a good idea of what they should do. \"Master, allow me to arrange this party. Ali is busy, this will be simple to do, and besides throwing parties is the job of the consort.\"\n\nRick sighed and nodded. \"Yes, please do. Let Ali know I have charged you with it. I do wish he would cut down on his drinking, but you have picked up the slack very well.\" Rick turned and looked directly at her. \"I will consider this a test for you Lady Lacey. If this grand ball is a great success, perhaps Ali is not as needed as I thought. To be a great Lord one must be strong and conquer one's weaknesses. Ali is not showing that ability.\"\n\nLacey was internally ecstatic, but she frowned on the outside. \"Master, Ali is a noble djnn, and loyal. He has helped you, this house and all the genies in many ways. Please, do not let a passing time of weakness cloud your opinion of him.\"\n\nRick frowned at her. \"Lacey, your loyalty is commendable and speaks well of you. But I cannot have a second in command who cannot be bothered to leave his slaves and do his work, and then show up drunk. I am thinking I need a new second in command if he cannot clean himself up, and if you show your steel, then you will be it.\"\n\nLacey bowed her head. \"Yes Master. I understand. I serve you always to the best of my abilities.\" Lacey said while internally she was leaping for joy. \"Soon Ali will be banished to his lamp and I will rule this house by Master's side. Hmmmmmm, perhaps it is time to begin to build our earthly empire.\"\n\nRick eased out of the water and Lacey dried him and helped him dress. Rick then went into the Treasury to work with Heather on some business deals. Lacey smiled as he entered the room and then bowed and left to start the planning of the party.\n\n\"Another benefit of Master sobering up. He now is much more involved in the working of the household and his leadership is constantly called for which reinforces the strong Rick.\" Lacey thought as she glided into the Throne Room. Lotus was typing away and she smiled at Lacey.\n\n\"Master is now with Heather? Good, he is keeping to his schedule.\"\n\n\"Yes, I am surprised at how well he has responded to Dominika's treatment. If this keeps up we might not have to take another genie.\" Lacey responded.\n\nLotus nodded. \"Dominika and I were speaking about that. If we do have to take a psychologist, are you sure you want to take Jewel? You two have a history after all.\"\n\nLacey frowned at her and Lotus shrank back a bit. \"Sorry Lacey, but it's true. You didn't part on good terms and if we are to make sure that we and only we can influence Master, then we must be sure about who is on our side. I have noticed that Ada and Evie are becoming very friendly, and Bridget and Evie are also very close. I hate to think we are forming sides, but if so we must be careful. We have four including Samantha, maybe five depending on how Nicole would lean. Evie would have three including her, and I would bet Susan and Heather would lean her way. Even with your influence over them as harem slaves, we must be sure of whom we enlist.\"\n\nLacey nodded. \"I know that. And I am sure about Jewel. We had a bit of a falling out yes, but she deep down is like me. She will love Master as I do, she will serve him, and she will want to make sure he is under our influence. If we need her, she will be the one. But enough of that, we have a party to plan.\"\n\nLacey sat with Lotus and they sketched out a plan for a costumed ball on Halloween night. While many parties were already planned, Lacey knew this one would get the limelight. She was planning on showing off Rick's now vast art and antiques collection, a massive spread of food (including some of the magical wines and fruits), and of course all of the genies would be on display. Lacey also decided this would be a good time to start building political influence for when Rick would start building his worldly empire (under her encouragement of course) so Lacey made sure that all the important political players were invited. The mayor of both Beverly Hills and LA, Congressmen and Women, state representatives, important industrial owners, major movie and music stars, models, and even the governor.\n\nLacey had Samantha help her enchant the invitations so that everyone who read it would be VERY inclined to come and then Lacey got with Ada and Evie to make the palace a place of wonder. Lacey had Ada wire up projectors and large screens in the rooms that would be used to show various parts of the party and parts of horror movies and other magical things. This included a spectacular light and laser show in the garden. Evie helped by making the plants morph around into something more ominous in some places for a proper Halloween effect, and to position flowers that would cause glee, happiness, and wonderment to anyone who smelled them. Evie would also provide some wonderful wines and some magical fruits that would make people giddy and happy (and a bit open to suggestions by certain genies).\n\nLacey worked hard over the next two weeks and when the night of the Grand Ball came she was ecstatic. Nearly everyone she had invited had RSVP'd yes, and the party was already the talk of the town. All sorts of people had been discreetly (and sometimes quite blatantly) inquiring about invitations, and Lacey had already set up the full Red Carpet treatment with the showbiz news outlets. \n\nLacey was even more thrilled that Ali had reacted badly to Lacey being given the command of the party. Rick had told him to \"Take some time off of his duties as Grand Vizier and think about his position in this household was and where it might be going.\" Ali had become very depressed at that, and his drinking had become worse. Ali was still fighting his alcoholism but to Lacey it seemed a losing battle that would put her in full command.\n\nLacey smiled as she did her final check in her large mirror. She was dressed in her Mistress of the Harem genie costume, her hair and makeup was flawless, her eyes sparkled and her jewels (her most expensive set including a lovely diamond tiara) shone. She looked like a Princess or a Queen and her dazzling smile floored even her.\n\n\"Tonight the mortals will see Master with his Queen. And they will understand who should rule.\"\n\nBut Lacey was not the only one preparing.\n\nEvie stood up from speaking to the last little bloom on a small vine near the entrance. She had been going around since dawn making sure that all her lovely plants were ready and knew to behave for Master's special night. She would be getting herself ready shortly, not that it would be difficult being a genie.\n\nEvie walked past the huge table spread with food and drinks and giggled at the site. \"Tonight many a mortal will truly being having a magical time, even if they don't know it.\" She said out loud as she passed by some of the fruits she and Bridget had lain out.\n\n\"Talking to yourself or the plants?\"\n\nEvie turned to see Ada glide up to her. Ada was already prepared and looked quite fetching in her orange genie suit. Ada grinned at her and spun around. \"Nice look huh? Too bad we have to all go as genies, I was hoping to get some makeup and use some magic and make myself a knockout zombie costume.\"\n\nEvie giggled again at that. \"I'm not surprised. You seem to be the one genie that really does enjoy changing up your looks when you can.\"\n\nAda laughed at that and started walking next to Evie. After a bit, Evie noted that Ada seemed to be looking around. After a bit Ada said in a soft voice \"Evie, got a question for you. Have you noticed any of your plants missing?\"\n\nEvie blinked. \"An odd question. Mmmm, no, not since I started tracking the more \"unique\" ones. Why do you ask?\"\n\nAda looked around. \"The thing about hackers is our curiosity. I don't hack for bad reasons, I do it for the challenge and to see what I can find out. And very often that then extends into the real world. Well, our \"real\" world anyway.\"\n\nAda now had a serious look to her and Evie arched an eyebrow. \"I think someone is playing politics in our household. And I think they used some of your plants to help it along. Back before you started keeping track, I think someone swiped some and then used them on Master, and I think me, and may use them again.\"\n\nEvie stopped, but Ada took her arm and pulled her on. \"Keep walking. I don't want this to seem suspicious. This area is hard for my mikes to pick up, so we can talk here.\"\n\n\"You run the computers! Who could listen in?\" Evie asked with some concern.\n\n\"Technically anyone. Master ordered me to make everything accessible to everyone. I know that Lotus has run some scans several times to determine where everyone was and what everyone was doing , and then set up an alarm if anyone moves out of the room. Usually this was done when she was talking with Lacey and then later Dominika after she joined us. No one else has.\"\n\nAda now really looked around and paused. She leaned in close and whispered \"And I can't get any recordings of what they were talking about. Someone put in a hidden command program that one of those three can activate that turns off the recording sensors. What's more, I can't find it. And that is why I think Lacey or Lotus used some of those flowers on me. I'm the only one would could have possibly put that program in; I'm the only one with enough access and understanding of this system to do it. A normal hacker would be stopped dead because of my magical enhancements. It could have only been me.\"\n\nEvie now had a shocked look on her face. \"But why? Why would Lacey need that? Why would she do this to you? She loves Master just as we all do, why would she conceal things from him?\"",
        "Ada gave Evie a grim smile. \"Evie, I can tell why you are better with plants than people. Plants must be easy to understand compared to weirdo humans who have everything but still want more.\"\n\nAda started walking again and Evie followed. \"Lacey was a gold digging stripper before Master took her. I looked up her history. She was a greedy, money grubbing whore who used men like ATMs and tossed them once the limit was reached. And now, being the head of the harem, that mentality is being magnified hundreds of times.\"\n\nAda looked around again. \"I don't think she wants to hurt or destroy Master. She loves him and she is loyal to him. But she has a definite idea of what kind of Master he should be. Strong, arrogant, powerful, rich; just the kind of guys she would latch onto in her mortal life and manipulate. They were in charge, but they were influenced by a little Gold Digger named Lacey who used them to take her along. Master Rick is the ultimate whale, the ultimate score for a Gold Digger, and Lacey is the ultimate Gold Digger.\"\n\nEvie frowned and thought. Ada was making some sense. Lacey had always been encouraging the \"strong\" Rick, and had worked very hard to keep the other personas under control. Evie had agreed with that, a multiple personality Master was bad after all. But she actually preferred the kinder Master. The one she had seen in her shop when they had first met had been one that had attracted her initially and sometimes when she was alone with Master on walks or having their private evenings the strong Master would seem to fade and the gentle kind Master would come out and they would make slow, soft love in the moonlight on the lush grass...\n\n\"Hey! Pay the fuck attention! Did you hear what I just said?\" Ada said with a bit of rise in her voice.\n\n\"Oh, uh, no. Sorry, I was thinking about what you said. You are right, I have noted that she encourages the strong Master and very quickly intervenes should he change his personality.\"\n\nAda grumbled under her breath and said \"Yes, and so does Lotus, Dominika, and Samantha. Samantha is another power hungry bitch who owes Master a lot but wants more, and Lotus and Dominika are old stripper friends of Lacey's. Notice how they ALWAYS side with her? Lacey is coordinating a clique to help her get in charge and remain in charge. Hell, look at Ali. I've spoken with some of the other older genies about him and I've been watching how Lacey interacts with him. I can't prove it because usually that program that cuts out recordings interferes, but I am pretty damn sure she helped his ass along the path towards drunkenness and has been taking over his powers along the way.\"\n\nEvie blinked at that. \"That is a terrible thing if true. Ali is a kind and wise man, but Lacey has been saying that his drinking is something he is having trouble controlling and she can't stop him.\"\n\nAda glanced around again and said very softly. \"No, that's not exactly what she is saying. She is saying he has trouble with his drinking, but think about what she is saying about not being able to stop him. She never quite says that openly, she hints at it. She isn't lying, but she doesn't seem to be fully open about it. She says she has stopped him from going into the wine cellars, but did you ever hear her say she stopped Ali's slaves? Ali never goes to the cellars! He sends his slaves and Lacey knows this but doesn't do anything. Technically she can't order them, but she could tell Master and he could order them and you know he would do that. Instead she makes this seem like Ali is doing this all on his own and is a victim of his own desires, something that the strong Master dislikes.\"\n\nEvie was now looking very concerned. \"We need to tell Master this! We need to stop this!\" she hissed and Ada shook her head.\n\n\"No, we don't have anything solid to go on. Just ideas and some odd observations and things that don't quite add up. Not enough to turn Master against his favorite genie, the one that has massive influence on the most dominant of his personas. We need evidence. REAL proof. Or we need to get the old Master Rick in charge.\"\n\n\"Why are you telling me this? What can I possibly do? Why not Nicole who is the captain of the guard or...\"\n\n\"You're different. Master didn't bind you like he did me or Lacey. You serve Master as a lover and harem slave because you LIKE it. I like it too, cripes what woman wouldn't, but I was also made to. I noticed once on the cameras, while you were making some of that wine with Bridget, Lacey came in and ordered you and Bridget back to your lamps as the Mistress of the Harem. Bridget had to go, you just laughed at her. She doesn't have power over you like she does the rest of us.\"\n\nAda leaned in close. \"I've seen Lacey turn Nicole, Bridget, Heather and Susan into babbling bimbos who only care about fucking Master with a simple command. She's done it once to me as well. One second I was working on Ali Baba and she and Master walk in and then next thing I know I'm naked, sweaty, and lying next to Master happily fucked, giggling, and snuggled up to him like I'm a teddy bear. Ali is rapidly becoming a non-player in the house and likely will get dumped in his lamp soon unless he sobers up. The only other person in this house right now that has any chance of standing up to Lacey is you. I don't think Lacey wants to try any plants on you given how you connect to them and she is rightly scared of what might happen if she does and you end up being immune or maybe the plants get mad and decide to go after her. If Lacey figures out I am suspicious, and she has some of those magical flowers or gives me some of your various wines, I'll probably be a giggling idiot in a few seconds. You might be the only chance we have to make sure Lacey doesn't gain full influence over Master and push him into doing something stupid.\"\n\nEvie had that deer in the headlights look for a few seconds. And then her eyes hardened and she straightened up. \"If this theory is true, we need evidence against Lacey. Can you get it? You have wired the house after all; can we not use your system and gather it?\"\n\nAda shook her head. \"I told you, someone has messed with me. As far as I know I could go running to them after this and spill the beans. For sure the AI and computer system I built is not something we can use or trust.\"\n\nEvie frowned. They were walking in the gallery now and Evie had outdone herself with the floral and vines. Ada felt the whole room seem to almost shiver in fear and doubt. \"Damn Evie! Can you stop it with the plants? Cripes the whole room just gave me a shiver.\"\n\nEvie stopped. Ada looked at her and then blinked as Evie laughed and clapped her hands. The mood seemed to change. Ada looked around and suddenly felt like the room was in on a joke she wasn't. \"What just happened?\" she asked.\n\n\"I just had a wonderful idea, and the plants think so too. And I have another one for you. Come with me.\" Evie led Ada to the AV room. Samantha was already out front arranging the paparazzi so the room was clear. Evie went over to a pile of tech magazines that Ada had tossed about on her work bench.\n\n\"Samantha is always complaining about your sloppiness, and I came in here once with Lacey to see about it. I can recognize a work bench with everything in place, even if it seems like a heap. But that aside, I think maybe we need to be a bit, old school, in our solution.\" Evie said as she sorted through the magazines and then found one. She flipped through it to a page marked \"Vintage Gear for the Collector\" and with a smile pointed to part of the ad. Ada looked at it and then snorted.\n\n\"Damn girl! You have some sneakiness in you yet. Yeah, I can do this easy. Might take a bit though; have to order it in a way we won't get noticed. Hmmmmm.\" Ada said and Evie could see the wheels turning.\n\n\"Good, you handle this part. I'll take care of the other part.\"\n\n\"Other part? What's that?\"\n\nEvie smiled a very calculating smile that for just a split second reminded Ada of the one Lacey got on occasion and said nothing.\n\nLATER THAT EVENING.\n\n\"Well Mr. Sanford, I must say you know how to throw a party. Better than most DC gatherings.\"\n\nRick smiled and sipped his wine and Lacey beamed on his arm. \"Well, thank you Senator. I am so glad you could make it to my humble house and that you and your lovely companion (one of his aides, his wife was back in DC) are enjoying the party. I would like to speak with you later about a couple of items, but I need to finish the circulation and greet the rest of the guests. So until later.\"\n\nRick led Lacey on and greeted some more guests. Lacey hung on his arm and soaked up the praise that was being heaped on her and Master. She was dressed to kill and easily one of if not the most beautiful women at the party. Only the other genies came close, and arguably the only one who might be as good looking as her was Evie. Evie was dressed in her light blue costume, but what made her shine were the flowers. It was if the garden had given itself up for her and the blooms in her hair and wrapped around her neck, waist and wrists made her seem almost a living flower. Men and women both stopped and gaped as she walked by.\n\nLacey felt a tug of jealousy as she saw the reactions to Evie, but she consoled herself as she noted she had the same effect on people when she walked by on Rick's arm. \"No matter. The Strong Master has been in charge for nearly two full weeks. And that Master loves me most. I think I won't have to be worried about Evie as a challenge soon.\"\n\nLacey grinned as she looked around at some of the very powerful people there. She winked at Dominika who was speaking to a very rich man who owned several major media companies. His date, a very nice looking model, appeared to be nearly frozen in place. She had a lovely sexy nurse costume on (sexy, but not really slutty), but her eyes appeared to glazed over and her smile frozen. Lacey could see that the man was completely enthralled with Dominika who was leaning in close and speaking quietly.\n\n\"Dominika will soon have him under her thrall. And then make that ditzy tart want to jump his bones for the rest of the night. And that will be one more servant for us as we build our empire.\" Lacey thought as Rick glided her through the crowd.\n\nLacey had done a lot of planning for this night. Aside from just the party itself, she had Samantha, Lotus, and Dominika set up with a list of targets to enthrall. Important people, rich people, connected people; quite the list and Lacey's plan would have them all in her pocket by the time the evening was done.\n\nEver since Rick had ordered her to entrance the entire strip club Lacey had been curious about how powerful her influence over mortals was. When she started testing the various items Evie and Bridget were making, she decided to expand on the tests and find out. And what she found out was both good and bad.\n\nThe good was that if she could work on one person at one time, they were complete putty in her hands. She could make them forget things, believe anything she told them, obey her without question, even think they were different people. But it had its limits. \n\nLacey had done some experimenting on some homeless people and had discovered what genies could do. She could completely enthrall the human mind and make the person a literal zombie; brainless, no will, no ability to think, just the ability to obey. She could do that to large numbers of people at once, and she could make it temporary or permanent. And when it was permanent, it was PERMANENT. Lacey had blanked several people's minds and had been completely unable to repair them. She suspected a wish from a genie would work, but nothing less.\n\nWhile that was great, making a useful slave was much harder. Tinkering with memories and making people accept new realities and memories was difficult. For a simple command, such as \"Bridget is now the head of the board\", given to people who were happy to have it happen and already inclined to support her, it was relatively easy and pretty much everyone would accept it. People were also easier to program if they were drunk or on drugs as their minds defensiveness was lowered.\n\nComplex memories or commands, or ones that went against the personality of the person, were hard to do. Lacey had tried to use simple commands, but she had found it led to all sorts of problems as people seemed to always try to find ways around it, even if they swore they were not. It was like trying to re-write code while making sure that the program was still functioning perfectly in its desired capacity, something she had picked up from Ada during a talk. Having a Senator under your thrall was good, but only if he could still be a functional Senator, not a mindless drone who could only say \"Yes Master\".\n\nWorse was that the more \"core\" the memory, the harder it was to fully erase without damage. Something that was critical to a person's development couldn't be wiped clear, it had to be replaced. Otherwise, it was like deleting a part of your computer's operating system and then expecting it to keep functioning without crashing. And unless you completely blanked the memory, it would slowly return.\n\nLacey actually had secretly hidden several of the homeless she had tested her magic on in the dungeon. They were either brain-dead or raving lunatics. Doing manipulations of the mind was difficult, and Lacey was beginning to think they might need a specialist regardless of Master's condition in order to properly understand how to manipulate mortal minds.\n\nUsing some of the magical drinks and flowers did help the process, and Lacey was finding that you could slowly fine tune a slave over time. Her hope was to start the process tonight with some simple conditioning and then do repeat visits to groom the servant to be.\n\nLacey reflected on how simple the strip club had been. Everyone there had been drinking or doing drugs, and Lacey's commands had been simple (Kneel before Master and her for the club, and then for the owner and his friend to simply fuck off and go use another stripper). Even if some of the people remembered the next day they likely thought they had been drugged or more drunk than they thought. Even though it was a lot of people, the commands had been the same for everyone so it really wasn't that hard.\n\nAs of yet, she had been the one to entrance the most mortals at once, with Bridget and Heather both coming in second with fifteen each on one of the many social and society club boards Master had taken over. Simple commands, followed up by some one on one treatments, had been all that was required (Lacey did suspect that nearly all the groups involved had not liked Ms. Sellars to start with and that had likely made it easier). But she didn't know how many mortals she could actually entrance at one time.\n\nLacey had originally hoped to do a mass enslavement tonight during one of the shows like she had done at the club, but after thinking more and realizing she couldn't test her limits prior to the party and realizing how hard it was too properly program one human, she had opted for the one on one approach. Given careful instructions, her allies were carefully entrancing key people and programming them. Evie's wines and flowers were making everyone giddy and buzzed, which made it even easier. And to finish it Lacey made sure that each one of her targets would get some fun sex with either their date, or a woman of their choice.\n\nSo far, the plan was working wonderfully and Lacey had seen a couple of the targets move off to a more secluded area with their dates giggling along.\n\nLacey heard some laughter and smiled as she looked over at Ali and Julie. Ali was dressed as a convict and Julie was wearing a sexy police-woman outfit and they both had the look of a pair of happy drunks. Lacey tapped Rick's arm and nodded at them. Rick looked a bit grim for a bit and then sighed and smiled. \"Well, Ali is enjoying himself at least and isn't stumbling drunk.\"\n\n\"Yes Master, true. But we should keep an eye on him. I fear that he is too far gone into his drink to be trusted anymore.\"\n\nRick nodded sadly. \"I should have cut him off earlier, but I did want him to enjoy himself. Well, perhaps I need to keep him in his lamp after this party and let him dry out for a few weeks.\"\n\nLacey nodded with a hint of sadness while inside she was cackling with joy. \"Yes Master, perhaps that is for the best. I'll enchant his slaves into an enchanted slumber so they won't miss him.\"\n\nRick nodded and led Lacey up to the staircase landing where he had taken her when he had first purchased the mansion. Rick looked over his party and smiled. Lacey snuggled up to him and felt his strength course through his body. \"My Master, looking over the weak mortals enjoying themselves at OUR party in OUR house! THIS is what I have always deserved!\" she thought.\n\nRick kissed her passionately and Lacey thought he was going to sweep her up and carry her off into the bedchamber then and there, but Rick controlled himself. He looked out again at all the rich and famous people laughing and dancing and grinned.\n\n\"I never thought I would be in this position Lacey. Never. God, I feel like a King! I love this feeling of power! All of these people coming here at my command. Coming here to ask me for my boon, for my money, for my permission!\"\n\nRick's eyes started to get a bit wild looking and he gripped the balcony. Lacey stepped back a bit and blinked. \"Master, are you well? You look a bit flushed...\"\n\nRick turned and looked at her and Lacey gasped. Rick's eyes had a look of madness in them, and Lacey felt a surge of fear. \"Master? Please calm down; let us take a walk in the garden for some air...\"\n\n\"NO!\" Rick shouted and the room grew silent as everyone looked up at him. Rick looked down at his guests and sneered. \"How weak they are! How pathetic!\" he thought. He felt strength and power flow through him. He glanced down and saw Heather in her green genie outfit and felt another surge. \"A captain of finance, my slave!\" He looked at Susan. \"A brilliant lawyer, my slave! All of them my slaves! Who are these mere mortals to me?\"\n\nRick laughed loudly and it was a madman's laughter. \"Lady Lacey, my Genie Slaves! These mortals do not understand who they stand beneath. Make them understand. Bow to your Lord!\"\n\nA murmur ran through the crowd and Lacey looked about in a slight panic. \"Master, please, you need...\"\n\n\"Make them BOW slave!\"\n\nLacey bowed her head. \"As you command Master.\" She put her hands above her head and channeled her powers of enchantment. She noted the other genies were doing the same. She let her energy flow out into the crowd and sighed in relief as people stiffened and then dropped wordlessly to their knees with their heads bowed.\n\nLacey heard some sounds and then heard Samantha's voice flow over the speakers. \"Mortals, you should bow to Lord Rick, he is your Master.\" And then began to repeat. Lacey felt her power was at its limit and she looked around and saw that in the gallery many people were not responding.\n\n\"Lacey, there are too many! We can't enchant them all!\" Nicole cried out from by the Main Door. \"The drivers and people out front are not affected!\"\n\nLacey felt panic. She looked at Ali who appeared to be sobering up quickly and also using his hands. He shot her a look and shook his head no. There were simply too many in the Main Hall and the Gallery and out front. At most Lacey had only entranced maybe fifty odd people at the Strip Club, but there were over two thousand guests here along with hundreds of drivers and media. Lacey had never thought about how many mortals she could entrance at once, and now she realized just how limited her powers were. \n\n\"No, no, no, this will ruin everything! What can I do? Master! What do we do?\"\n\nRick was laughing madly and then cut off. He looked lost for a few moments and then turned to Lacey. \"Lacey! What is happening? What did I do?\" He grasped his head and went down to his knees. \"You are weak! No! This is wrong! I won't let you! Damn your foolish mercy!\" he blabbered and Lacey realized he was having a breakdown.",
        "Suddenly a heavenly scent flowed through the air. Lacey gasped as she inhaled and then she saw what appeared to be streams of pollen flowed around her. Rick took a deep breath and relaxed. His eyes turned back to normal and he sighed. \"Oh, beautiful. How fine...\" he murmured and then sank down onto the floor with a blissful look on his face.\n\nLacey turned as looked out onto the floor and into the gallery. Every normal human appeared entranced and had a look of bliss on their face as the flows of flower pollen flowed through the air. Suddenly Evie's voice came over the speakers. \n\n\"Everyone, smell the air and relax. Everything is fine, nothing strange happened, just a lovely party with lovely flowers, food, dancing and fun. Relax, drink, and enjoy each other's company.\" Evie said in a voice that sounded like a babbling brook. The streams of pollen seemed to thin and vanish and everyone slowly came back around. Lacey looked down and saw that everyone now was giggling and laughing, and appeared to be either happily buzzed or slightly stoned.\n\nThen Samantha's voice came over the speakers and repeated what Evie said. Lacey let out a slow breath as she saw everyone in the Main Hall and the Gallery start to laugh and smile and drink. And begin to get a bit affectionate.\n\nLacey's eyes widened a bit as the Senator nuzzled the neck of the young woman (an aide apparently, if Lacey remembered correctly) and the young woman giggled and pulled him into a soft kiss.\n\n\"Lacey, we have some work to do and fast.\"\n\nLacey turned and saw Evie standing behind her with Nicole. They both held a bunch of flowers in their hands. Evie gave Lacey a small set of several different blooms. Lacey's eyes widened as she recognized a Lotus blossom. \"Listen to me, the pollen and scents I had the flowers put into the air makes people giddy and lose their inhibitions, like the drug ecstasy. I was able to get everyone here including all the drivers and press. Ada hacked the feeds so they cut off right as Master started acting funny and now the crews are having some drinks and getting nice and giggly.\"\n\nLacey nodded. \"You did well Evie, I will commend you to Master once he...\"\n\n\"I'm not done Lacey. These people might still remember what happened and unless we take care of them we are about to have a massive orgy in about another ten minutes at most.\" Evie went over to Master and held up a Dream Flower. Rick sniffed and sighed and then flopped back with a contented snore. \"There that will make sure Master doesn't get caught up and order us to take part in something crazy. Now, we, as in ALL of us genies need to take these flowers and make sure all of our guests are taken care of.\"\n\nEvie held up a purple bloom. \"This will make them tell the truth. We need to ask everyone what they remember. If they are not sure or don't have any idea what happened, then let them get one sniff of a Wide-A- Wake blossom. That will counter the pollen's effect on inhibitions and get them to be less horny while still keeping them in a good mood and buzzed. Encourage them to drink more and then move on. If they do remember what happened, or seem to have some idea, then one sniff of a Lotus, then tell them it was just part of a Halloween trick, then give them the Wide-A-Wake.\"\n\nEvie gave Lacey three flowers and then did the same to Lotus as she arrived. She then motioned to Ali who now appeared very sober along with his very concerned looking slave Julie. \"Ali, we will take care of this, take Master to his chambers and watch over him. He must not wake up until after this party is over.\"\n\nLacey cut in. \"Hold right there Evie. I am the one who should watch Master. Ali is the Grand Vizier and this is in his lane. Besides I am not sure he is up for his duties...\" Lacey gave him a slightly off look.\n\nAli frowned at her. \"Lacey, you forget your place. I am sober now, and I am STILL the Grand Vizier. As such I order you to do as Lady Evie has stated. You are the Lady of this house, you duty now is too your guests. Besides, I am an unknown and walking around asking questions and making people smell flowers would probably raise some alarms with people. You however are very well known and people will react positively to you. I will watch Master tonight. Now GO!\"\n\nAli's tone left no argument and Lacey found herself bowing along with Nicole and saying \"Yes Grand Vizier.\" Lacey noted that Evie had not bowed, but was already moving down the stairs and starting to engage people.\n\nLacey heard a \"poof\" and noted that Master and Ali were gone. Julie looked at Nicole's bunch of flowers and Nicole gave her some after a moment's hesitation. Then they were heading down the stairs.\n\nWhile Lacey was pissed off as hell that Ali had ordered her around, she soon had to admit Evie's plan was working. She would use her genie magic to freeze people in small groups, and then let them smell the flowers and move on. She had to admit it was quicker than using magic. Entrancing someone was almost like using a remote controlled arm make a computer program. Easy if it was one and the programming was something simple, easy for a group if you could have privacy to use your magic all out and were trying to make the same effect for all, but hard if you were trying to hide it and do different effects for different people. Lacey soon found out that different exposed people existed in each group and trying to manipulate some minds while trying to keep others entranced while keeping it secret was hard.\n\nLacey worked fast, but fortunately Samantha's soothing voice telling everyone to relax, drink and enjoy helped a lot. Soon they had gotten everyone in the Gallery and Main Hall taken care of, and Nicole and Susan took care of the media and drivers. \n\nLacey looked at Evie and nodded and Evie smiled back at her. Lacey was just going to go and get a glass of wine for herself when Ada came up to them. \"Don't think we are out of the woods yet. We are missing a whole bunch of people and we need to track them down.\"\n\nEvie and Lacey looked at her and then at each other. \"How did that happen?\" Lacey asked as Evie asked \"Where did they go?\"\n\nAda sighed. \"Simple. Your flower pollen mix made everyone giddy and horny. You couldn't get to everyone before some of them gave in and snuck out looking for a place to have some fun. Fortunately they are only in the \"real world\" sections of the palace, and only ninety-six of them. But they are quite a, um, mix. Some couples who came together, some who were hooking up, some got, uh, ahem, adventurous, and some where someone got really horny and swept up a bunch of the opposite sex and headed out. The problem is that some of them are married and the people they are with are NOT their wives or husbands and if they sober up while doing this it will be awkward as hell.\"\n\nEvie had a look of exasperation on her face and Lacey put her hand over her eyes and rubbed her head. And then snickered. The snickering changed to laughter and Lacey looked at Evie with some genuine humor in her eyes and then Evie snickered too.\n\nAda rolled her eyes. \"Alright knock it off! It isn't that funny!\" Evie burst out laughing then, and Ada sighed. \"Okay, maybe it is. But we got to get this under wraps.\"\n\n\"Okay Ada, we'll get this fixed. Lacey, shall we?\"\n\n\"Oh after you Lady Evie. Please, after you.\" \n\n\"Start with the pool area. Lots of them there, and be sure to go to the top of the diving platform.\" Ada called after them as they headed out. Ada shook her head and looked back at the Main Hall. The party was back at full swing and seemed even more lively. Ada walked up near a large vine with lovely flowers and gently ran her hand over it. She could almost feel a vibe coming from it, and it was a very happy one. \"Well, all work and no play...\" Ada thought as she took a glass of wine from a passing servant and headed over to the dance floor area.\n\nLacey and Evie came out into the pool and gaped. \"Soooooooo, I'm guessing this might be what a Roman Orgy would look like.\" Evie was finally able to say after a watching a few moments.\n\n\"Yes, I think this might give them a run for their money. Okay Evie, any ideas on how we sober THIS up?\" Lacey asked and spread her hands.\n\nThe pool area was now a massive orgy. At least fifty people, probably more were now engaged in multiple sex acts with multiple partners in what was pretty much a large pile of naked humanity in the large cabana area and shallow end of the pool. It was hard to tell where it even started.\n\nEvie and Lacey watched as a young tech tycoon fucked a starlet (who was supposed to be a lesbian) doggie style while the actress ate out another woman who Lacey recognized as the wife of a Congressman. That woman was sucking the balls of someone neither of them recognized because he had his face buried in the tits of a well know talent agent while her right hand jerked off a man (who appeared to be stoned out of his mind) and fingered a woman's ass as that woman blew yet another man who was trying to kiss another woman.\n\nEvie and Lacey gaped and then Evie shrugged. \"I think we need to just knock them all out and then fix them one at a time. Otherwise, hell, I don't know where we begin.\"\n\nLacey nodded and said \"Why don't you start with the, uh, main group. I'll wander the pool and get anyone who is on their own.\"\n\nEvie agreed and Lacey moved into the shadows. She soon found several couple who she knocked out, then one threesome of three women, then two guys, and finally two couples fucking on the top stage of the diving platform. Lacey looked down to see that several vines had seemed to grow into the mass of human flesh and had apparently put everyone to sleep. With a sigh, Lacey started with the two couples on the top. But instead of having them rejoin the party she gave them an extra sniff of the Dream flower so they would sleep for several hours. She worked her way back, putting the couples in less compromising positions and finally helping Evie get the last of the mass orgy more or less back to normal. Several of the last couples they sent staggering back into the main party. Lacey waved her hands and made two glasses of wine appear. She held one out for Evie.\n\n\"I think we both need one.\"\n\n\"I won't argue. Oooooooo, that's good. Bridget and I are getting really good at this.\"\n\n\"Yes indeed.\"\n\nThey drank in silence for a bit longer and then Evie set her glass down. \"We don't have everyone yet. Ada came out while you were getting the couples and said we have about twenty more or so. She told me the locations too, so if we split up we can finish this soon.\"\n\nLacey nodded. \"Let's get it done then. Tomorrow though, we need to have a meeting and discuss Master's condition. I had hoped that he had settled and that maybe with Dominika's guidance he was recovered. But obviously that is not the case.\"\n\nEvie gave her a level look. \"I agree. Everyone, including Ali needs to be in on it. Lacey, I've been doing some experimenting with Bridget and I have something that is going to help Ali stop drinking. I gave him some tonight earlier and it apparently worked. He was drinking mostly fruit juice tonight and only had a little buzz. I am going to keep treating him with it as I think it's time he returned to his duties.\"\n\nLacey's face hardened. \"You did this and you didn't tell me? Me? The Mistress of the Harem and keeper of the genies...\"\n\n\"Keeper of SOME of the genies, Lacey. I don't answer to you, I answer to Master. And I think he will agree with me that helping the Grand Vizier is something worthy of my time and effort. Now, let's finish this mess off.\"\n\nEvie stood and swayed away. Lacey got a very nasty look and stood. For a second she considered on calling on her power and striking Evie down from behind, but as she did she suddenly felt a great chill and hostility in the air. She glanced around and suddenly felt very alone, in the dark, surrounded by a very large amount of plants that suddenly seemed to almost be wishing violence on her. She shuddered, and the moment passed. She turned and left through another doorway.\n\nLacey finished the night by finding the Senator naked in a closet with his aide sitting on his face while an LA councilwoman sucked his cock. Lacey was so pissed off and tired by then she simply put them to sleep and decided to let them figure it out in the morning.\n\nLATER THE NEXT DAY\n\nRick watched the TV as the reporter blabbered about the great red carpet gala Halloween Ball he had thrown last night. Famous and connected people flowed past the camera and then cut to some shots of inside with Rick's art collection on display, dancing, laughing and general party scenes. The nearly five minute segment had no mention of Rick's episode, or the orgy, or any magic, other than \"some spectacular special effects\" mentioned once.\n\nRick sighed with relief. \"Good job Ada and Samantha, you have covered this up very well. You have my gratitude.\"\n\nRick turned to Ali who seemed very much his old self. \"Ali I am glad to see you back. I trust you are here to stay?\"\n\nAli bowed. \"Master, I humbly beg your forgiveness. In enjoying your kindness and gifts, I strayed from my path and my duties. That will NEVER happen again. I must thank the Lady Evie for her assistance on this.\"\n\nEvie bowed her head. \"Grand Vizier, please. You would do the same for me. It is my duty and my pleasure.\"\n\nRick nodded to them both. \"Very good, both of you. Now then, we have a very urgent matter to discuss. We, uh, hold on, where is Nicole?\"\n\nRick sat up in his bed a bit and the other genies looked about in confusion. Then a voice came over the intercom. \"Master forgive me, we, uh, I had to, um, \"escort\" some guests who apparently fell asleep last night in one of our closets off the property. And find them some clothes...\"\n\nThat last bit brought a round of snickers and giggles from everyone. Rick put his head in his hands and rubbed his temples. \"Oooookay. Got it. Make sure that bit keeps quiet please.\"\n\n\"That will be no problem; the people involved were quite adamant about making sure this doesn't leak out.\"\n\nNicole joined them while Rick lay back in Lacey's lap. Rick nodded and then sighed.\n\n\"Last night is a complete blank to me. I remember greeting guests, having some drinks, a dance or two, and then starting up the stairs to the central platform. Then it blurs, badly. I have multiple memories of me doing the same thing but almost as if it was seen by different Ricks. I saw people being enchanted and made to bow, feeling a rush of power, and horror, and anger, and pride, and a whole mix of emotions. I felt like was having a huge argument, with myself!\"\n\nDominika came forward. \"Master, physically you are fine. I, we all, had hoped that your personality had finally adjusted and everything was fine. But it appears it was not. I can do nothing more for you. We must have professional help. I cannot even hazard a guess of when this might happen again.\"\n\nRick nodded and noted the concerned looks on all of his genies faces and he even felt like the flowers in the vase next to his bed felt the same way. He looked over at them and then Evie and thought \"Damn, I really DID go all out on her.\" Then he sighed.\n\n\"These are my commands. One, we will rotate genies. I want to be sure we always have a genie out of a lamp at all times to help me if needed. I give you the following orders: If I appear to be having a breakdown you will put me too sleep immediately, do not ask permission. If you are not sure, put me to sleep. If I wake up and appear to be a danger, gag me so I cannot give you a command. Wait a bit to see if it passes, if not put me to sleep. I will remain in bed until we can get a professional psychologist here to help me. I will use servants only, no genies. All of you, including you Lacey, must stay out of my room until we are sure I am stable enough to be trusted. Lotus, cancel all appointments and events for the next month at least. Now, have the servants bring me some breakfast and get out. My slaves, I love you all, please understand I do this to protect you.\"\n\nAll the genies and Ali bowed low and Rick hear several sobs. Lacey gave him a soft kiss and whispered \"Master, I will serve you always, even in madness.\"\n\nRick took his tray and ate and hoped that Ali and his genies could find someone to help him.\n\nIN THE THRONE ROOM\n\n\"I don't know about this. Another ex-stripper? Can't we get someone who is a regular professional for once?\" Ada stated to the nasty glances from Lotus, Dominika and of course Lacey.\n\nLacey stood up and opened her mouth and cut off as Ali clapped his hands. \"Enough!\"\n\nEveryone quieted down and looked at Ali. Ali sighed as he looked around. \"I was a damned fool to let that drink go to my head, while I was out of it, sides have developed. And that is never a good thing.\" He thought bitterly.\n\nLacey stood to one side of Master's throne one step down, on her side and further down stood Lotus, Dominika, and Samantha. In the center, which Ali took to mean as unsure, stood Nicole and Heather. Across from Lacey and matching her stare for stare was Evie, and behind her stood Ada, Bridget, and Susan.\n\n\"Master has charged us with finding him someone who can help him. Lacey says she trusts this mortal. And I trust that Lacey cares for Master and wants him to be healthy. But, that aside, I agree with Ada's point about how qualified she might be.\" Ali said as he sat on a smaller Roman style chair in front of Master's Throne.\n\nLacey looked at him. \"Jewel is an old friend. But she is also a sex therapist and one of the best mental specialists in the LA/Beverly Hills area. She has written several books on the subject and is well known for being VERY discreet.\"\n\n\"Well and good, but would you explain about why she quit the club so suddenly three years ago? From what I have heard it appears you had quite the falling out.\" Evie said coolly.\n\nLacey blinked and then her lips turned into a snarl. \"How did you know that, you bitch?\"\n\n\"SLAM!!\"\n\nAll the genies jumped as Ali frowned at the now shattered arm of his chair. He snapped his fingers and it repaired itself. Then he looked at Lacey. \"Lady Lacey, you will never use that word against another of your fellow genies again and you will apologize. Now.\"\n\nLacey swallowed and bowed her head slightly. \"I am sorry Evie of the Blue Lamp.\"\n\nEvie nodded. \"I am sorry to shock you with that, it was unfair. But it is important information that needs to be provided to all of us if this decision is to be made correctly.\"\n\nAli leaned back. \"I agree with Lady Evie. I think some background is in order.\"\n\nLacey fidgeted a moment and then spoke. \"The woman I speak of is named Jewel. She was a dancer with myself, Dominika, and Lotus. She also was studying, and was a couple of years ahead of us in terms of work. She had already started on a PHD in psychology. She was working to be a sex therapist, and had some interesting ideas. We were close friends, but one night while I was drunk she was hit on by one of my regulars and it a fit of rage I pulled off her mask and exposed her face. Two of her professors were in the club at the time. It nearly ruined her PHD, but she was able to use her work at the club as source material and wrote a great study on the sexual drives of men and how being seen as objects of sex can effect women. She ended up writing a bestseller on it and is now very successful. But we have not spoken since.\"\n\nAli spoke. \"Lacey of the First Lamp, I am concerned by what you have told me. If this woman holds a grudge against you, she could be dangerous. She could attempt to harm our Master in order to get back at you. At the very least, she will have issues with you being one of Master's main advisors and head of the harem. I do not think this is wise and I feel that we should choose someone else.\"\n\n\"Grand Vizier, bad blood or not, I trust this woman and her expertise in matters of the mind. While she may not be friendly with me, Master can insure her loyalty and obedience. If I can speak with her I can determine if she is the right one. Just talking to her won't be any danger. If I have any issues or bad feelings I will tell you and we will seek another specialist.\" Lacey replied.",
        "Susan spoke up. \"As someone who initially was against Master taking me, I can say that having a genie that is potentially hostile is a dangerous thing. I have noted many things I could have done to bring this household down or cause it great harm. I have done none of them, but have informed the Grand Vizier so we can cover them for the future. But I fear I have not thought of everything, and if this one is to be in charge of the Master's mental state I have much more fear. Especially now, Master is fragile.\"\n\nGrand Vizier Ali listened and then spoke. \"Genies, I feel that Lacey means well and does trust this woman's expertise and skill. But this Jewel is certainly an unknown factor. Lacey, you will contact her and determine her intentions while I scry and we all observe.\"\n\nThe genies all looked thoughtful and all eventually agreed. Ali used the speaker system and spoke to Master Rick. Once he had explained everything and his recommendation, Rick thought for a few minutes in silence. \"Very well. Lacey we will look at your recommendation. Grand Vizier, we will scry this meeting and observe. Furthermore, I think we need to try a different approach this time. Lacey, meet with her and schedule me for an appointment at her office after this first meeting. I want you to explain nearly everything about us here. The facts that I have become massively wealthy, handsome, powerful, and have a harem of loving slaves who are all exceptional beauties, tell her everything. Leave out the genie part, but given what you have explained about this woman I think she will be interested enough to see me of her own free will.\"\n\nAll the assembled genies and Ali agreed. Lacey was able to hide her annoyance at being scryed on while talking to Jewel, but still figured Jewel would be enough of a gold digger still to not look a gift horse in the mouth.\n\nNEXT TUESDAY\n\nRick shook hands with the woman he had come to meet and silently gave a wolf whistle.\n\nDr. Jewel Chambers; brilliant psychologist, author of two best sellers (one being her work while a stripper), considered to be a genius by many, early graduate of both undergrad and Masters Programs, and a very discrete sex therapist to the rich and famous.\n\nAnd a stunningly hot woman. She stood 6 foot even, great shape, hourglass figure, nice tan, a perfect 36-24-36 measurements all natural and brilliant red hair done up in a bun. She could easily have any man she wanted and she was looking Rick over with an appraising eye.\n\nRick was flattered but not surprised as his genies had all been adding personal touches to him as he made his wishes. He was pretty much a perfect Greek sculpture come to life and he knew it. But there was something else in that look that Rick couldn't quite place but seemed familiar.\n\nLacey's meeting had been interesting. Jewel hadn't been mad at all, but had instead surprised Lacey with a bottle of her favorite wine and had cleared her calendar so they could have a few hours to catch up. They had ended up eating out together and Lacey had given her the whole story, excepting the genie part. It had been obvious that Jewel had been intrigued by her request for aid.\n\n\"I think that she is more interested in the man who can not only claim me but can make me share him. I was not someone who was known to share men as a mortal Master.\" Lacey had said when they had talked afterwards.\n\nJewel's pretty voice brought him back to the place at hand. \"Well Rick, I can certainly see why Lacey is so smitten with you. I have many movie star clients, but I will say you are probably the most handsome man I have ever seen.\"\n\n\"Thanks, I hope that won't be a problem for us working together. If you don't mind me saying, you are one of the most beautiful women I think I have ever seen. And as cheesy as it sounds, that is saying something.\" Rick replied\n\nJewel snickered. \"Oddly enough I consider that a compliment and I also believe you. Lacey is a hottie and her descriptions of your other women certainly doesn't leave much to the imagination. I took the liberty of going some research and I must say you have quite a collection of girls. Please sit and let's talk.\"\n\nRick sat down in a comfortable chair and he began to talk about his women and the problem as he saw it.\n\n\"I'm a pretty easy going guy, very deliberate, and I try to make sure I am always thinking the angles through before I do anything. In my previous job it helped a lot. I also didn't have much drive to be anything other than comfortable and to be able to indulge in my hobby of collecting...\"\n\nJewel listened for the next hour as Rick told her the whole story of the lamp, his wishes, and how he had taken Lacey, and then Bridget, Heather, Nicole, Susan, Lotus, Samantha, Evie, Ada, and Dominika. Jewel listened as he described the sex, wealth, the changes to his body and mind, and the simple power he now had at his beck and call. She became very interested as he described his breakdown at the Halloween Ball.\n\nJewel normally would have marked this guy down as a freak and insane but there were a couple of things. One, he obviously believed everything he said. Two, her research had turned up all sorts of odd things about him. \n\nHe had become fantastically wealthy in a few short months. He truly did have a harem of beauties that were all highly skilled and talented in their areas of expertise and each one of them had given up careers, dreams, and jobs to literally serve him as a full blown slave. And very oddly, no one seemed to think anything strange about it. For a bit the paparazzi had hounded him and his women (especially Lacey) and then once he hired Samantha to handle his press, it all went away. It was if everyone suddenly accepted that a brand new millionaire (now Billionaire) who openly stated he was in an open relationship was nothing strange. \n\nJewel had really felt funny about that. She had initially gone \"Oh, of course.\" And had moved on, but it had bugged her and nagged her. After a bit she would go back and review some of this, but as soon as she got to one of Samantha's press releases she would immediately go back to thinking it was no big deal. She had finally read everything up to that point, and then NOT read something from Samantha and realized that the oddity stayed with her. What was odder was that after that nearly everything available for reading about Rick's life and his women was sole sourced with Samantha being that source.\n\nThat alone was enough to get her professionally interested. But in reality she was seeing Rick because of something else.\n\nJewel hated Lacey with a passion. \n\nShe had nearly destroyed everything she had worked for over a lap dance with some schmuck that she would drop like a hot rock in another week when the next big spender hit town. Lacey's behavior had been odd when they had met, acting like she was being watched (which if Rick was telling the truth she had been), but trying to hint to her that if she played along there was a big payoff in it for her.\n\nThe girls at the club had a bunch of internal sayings and lingo, kind of like a pig Latin, so they could talk about things in front of customers, and Lacey had dropped some while trying to explain what she wanted. \n\nJewel had played along because she wanted to pay back Lacey HARD for nearly wrecking her life. And Rick might be just the ticket.\n\nRick however was enjoying the talk. He found it was putting his mind at ease to be speaking with someone normal, someone who wasn't jumping at his every command or putting forth the effort for a big tipper. As he relaxed his mind started to clear and he found himself able to think clearly for the first time in a month, with no odd voices or weird feelings. And Rick got an odd feeling that Jewel was truly not under any influence and even seemed somewhat resistant to his charms.\n\nAfter he had finished, Rick looked at Jewel who was giving him a poker face. He smiled and said \"Yeah, I'm crazy right?\"\n\nJewel snorted at Rick's comment and caught herself. \"Very funny. I'm not going to say that, but you do realize how that sounds. Genies, harems, Djnn advisors, wealth, power, and you coming to see me because your harem of supernatural beauties wants your mind healed so you don't try and enslave all of Beverly Hills at your next party? And the fact that they are determined to get you some mortal women so you can have heirs? Not a normal conversation.\"\n\n\"I figured as much which is why I brought along some proof.\"\n\nRick pulled out a lamp and rubbed it. Smoke poured out and Jewel found herself staring at a tall man dressed in a Middle Eastern garb. The man bowed low to Rick and then her.\n\n\"Good day Master, I, Ali your Grand Vizier, am at your command.\"\n\n\"Proof us against any scrying by the other genies. I want this to be private.\" Rick commanded.\n\nAli bowed and then spoke a strange word. \"It is done Master.\"\n\n\"Ali, assume your smoke form.\" Rick ordered. Ali let his lower body turn to smoke and floated over Jewel who was staring open-mouthed. Rick had Ali levitate Jewel in her chair, turn her desk into a hot tub and back, had him conjure her a full set of Ruby jewelry, and then a silk dress with slippers. He then had Ali turn her chair into a divan in which she was reclined, dressed and perfumed and resplendent in her jewels.\n\nRick smiled at the stunned Jewel and said \"Believe me now?\"\n\nJewel stared at her reflection in the mirror by her desk. She looked like an Arabian princess, she felt amazingly sexy and powerful, and she knew right then how she was going to get back at Lacey.\n\n\"Rick, can you please turn me and my office back to normal? We need to talk.\" Jewel said with effort.\n\nRick nodded to Ali who changed everything back with a wave of his hands.\n\nJewel gathered her thoughts for a minute. \"Mr. Sanford, you were not kidding and I'm about ready to pass completely out from shock. I need to clear my head and we will discuss how we will proceed in your next session.\"\n\nJewel stood and let out a breath. She walked over and opened her door. \"Thank you.\"\n\nRick looked at Ali who shrugged and then disappeared in a poof. Rick walked past Jewel and then paused. \"You know, you look like you could use a drink.\"\n\n\"I could use several. Several of my major beliefs in life just got shattered, run over and then tossed off the edge of the Grand Canyon.\"\n\nRick nodded. \"Yep, that is about how I felt when Ali appeared. I didn't have a drink then, and I'm thinking maybe I should have. So the way I see it, I'm owed a drink and you need one. I saw a bar across the street; I'll buy the first round.\"\n\nJewel looked at him and they locked eyes. \"Damn, this woman has some backbone in her. Her eyes are practically flashing.\" Rick thought.\n\nJewel was thinking \"Wow, he has some strength to him. But more than that, he has compassion, but also some other things, nasty things. Things that don't belong there...\" Jewel's thoughts trailed off and she let out a little sigh.\n\nJewel reached out and took Rick's arm. \"Gin Martini, with an olive.\"\n\nRick returned to the Palace later that night and was mobbed by his genies. \"Master! We were so worried! You disappeared from our magical sights!\" Lacey had babbled as she leapt into his arms and kissed him.\n\n\"Whoa, hold on! I'm fine, I'm, watch your hands Ada, it's not your night, I was just talking with Jewel is all. I just had Ali...\"\n\nRick blinked and then rubbed his eyes. \"Crap sorry, I told Ali to proof us against scrying and spying and I forgot to turn it off. I'm sorry.\"\n\nRick had to kiss and hug all of his genies before they were calmed down. Rick ate a fine meal and relaxed a bit but noted how fearful his slaves were. \"They were afraid I had a breakdown. They were terrified. Even the plants were scared.\" Rick thought.\n\n\"I am the Lampmaker. These genies are mine, but I am responsible for them. They serve me, but I must be a good Master to them and care and protect them from everything that could harm them. Even myself.\"\n\nRick stood up and his harem quieted. \"I had my session with Jewel today. I will keep seeing her as I think she is trustworthy and can help me. But I am going to do this right. None of you will have any contact with her at all. NONE OF YOU. Aside from Ali, only I will. I will be driven there, I will be escorted up, but none of our servants will enter her office with me. No one will scry; no one will spy in ANY manner.\"\n\nRick looked each of genies in the eyes. \"I know all of you love and care for me. But that is part of the problem; each of you does so in their own way. I must sort this out with Jewel's help alone, no biases, and no slants. You must all trust me on this and you will obey my commands.\"\n\nAll the genies responded with a \"Yes Master.\"\n\nTHREE WEEKS LATER\n\n\"Checkmate.\"\n\nAli frowned and then sighed. \"You are very skilled doctor. Not many mortals can best me, and only Master has beaten me in normal play a few times.\"\n\nJewel giggled and Rick smiled as he looked at her. After the initial meeting Rick had booked her every other day (Monday, Wednesday, and Friday) for the full afternoon. They had started as normal lying on the couch, tell me about your mother kind of head shrinking, but it had rapidly moved on. Rick had shown her his acquired skills in art, finance, combat, and other things and Jewel had rapidly figured out Rick was a lot more than just a rich guy with a sex problem.\n\nUnder Jewel's questioning Rick had been slowly shifting his personas and had allowed her to see each one. He had even slipped into the raving madman once but Ali had knocked him out before he could order him to enslave Jewel and make her kneel. That had scared Jewel, but she was even more scared when she saw the footage of the real Halloween Party that Ali showed her while Rick was out.\n\n\"My God. Could he have done that? Enslaved everyone? It seemed like his genies were at their limit of power.\"\n\nAli had looked away. \"Yes, I think so. He could have given other orders that could have made the genies freeze people, turn them into stone, or hold them in place until Master could have them brainwashed. He could have had them all turned into mindless zombies. Or he could have simply picked a lovely woman, and turned her into a genie and then wished it. And then with a single command the entire city would become his slaves. And I think if he had done that he would have been lost forever.\"\n\nJewel still got chills remembering that moment, that madness in Rick's eyes. \"I need to fix him. Dear God do I need to fix him, or what might happen is to horrific to think about.\" She thought.\n\nShe glanced at Rick and blushed just a bit. Rick smiled more and she blushed deeper. \"Stop that Mr. Sanford.\"\n\n\"I'm just looking at you Doctor.\"\n\n\"If you don't stop looking I'll call it a day.\"\n\nRick looked away quickly. One of the ground rules was that Jewel could call it a day at anytime, for any reason and Rick couldn't argue. Rick had agreed and Ali had \"helped\" him to remember several times.\n\nJewel was glad for that. Regardless of how he got his looks and body (and his personality), Jewel was having an incredibly hard time keeping this professional. Rick had taken her out for a drink after their first meeting and she had a lovely time. They had simply had a few drinks, and talked about nothing. Jewel had really enjoyed it and in her mind THAT Rick, the somewhat shy, nice, kind, and caring one was the real Rick. The one that needed to win. That one had strength, but also mercy. That one was just, and noble, not power hungry and arrogant.\n\nJewel wouldn't lie though; she saw why Lacey and some of the other genies loved the \"Strong\" Rick. A real old school \"man's man\" who took what he wanted, someone who had raw overwhelming power and lust and passion. Almost a barbarian, someone who would carry away the Princess and ravish her in a far away cave. Jewel definitely saw the attraction to that, but the old Rick was better in her mind, calm, rational (mostly, the guy made genies for crying out loud), just, caring, someone who didn't want to crush everyone and lord over them but simply enjoy what he had.\n\nBut she was definitely falling for him. She wouldn't deny it, she could tell and she was way too professional to lie to herself. Which was why she wanted to get this done and get him away from her.\n\n\"I won't be another one of his women. I won't. Damn it, I will not accept being another conquest and merely being a genie of a harem, who answers to Lacey, so if that means I break my heart then so be it.\" She thought.\n\nRick was talking with Ali about some items and Jewel blinked and said \"I'm sorry, got lost in thought. What were you saying about the other genies?\"\n\n\"Doctor, I think it might help if you spoke with the other genies one by one. Ali will put up a barrier so nothing over heard. I think I'm not the only one who needs help. The genies magically interact with me every day. I think this might be having an effect.\"\n\nJewel blinked. \"Full privacy? Hmmmmm, actually that is not a bad idea. I am thinking we are getting to a point where we need to shift our efforts and this seems perfect. When can we begin?\"\n\nThe next Monday Jewel gaped as she was led by Nicole into the Throne room. She stared around at the splendor and then did a double-take as Rick sat on his throne with his genies all reclined on couches on his dais.\n\nJewel approached and Nicole stopped at the foot of the dais and said \"Master, the Doctor Jewel is here as commanded.\" Jewel frowned at that and Nicole grinned at her when she straightened up. \"Heh, no offense.\"\n\nJewel muttered about genie slaves as she looked around. She pulled out her notepad and then started writing while Rick looked at her expectantly and the other genies looked a bit puzzled.\n\n\"Okay everyone. I'm Doctor Jewel Chambers. You will refer to me as Doctor Chambers or just Doctor, even if you knew me as a mor...from before.\" Jewel shook her head at the whole situation again and continued. \"I have been treating Mr. Sanford for three weeks now and he is making very good progress, but we need to move to the next step and that is his interactions with you. For today I will be shadowing him and seeing what a \"normal\" day and night is for him. Then I will interview each one of you privately, you will be protected from scrying and no one save me will know what is said. Questions?\"\n\nNo one spoke and so Rick stood up and Jewel was barely able to maintain her composure at Rick standing there in his robe looking like a Prince out of a fairy tale looking at her like she was the Princess. She shook her head and had a dark thought about kicking him in the balls if he kept that up, which vanished as soon as he took her by the arm and led her to breakfast.\n\nLacey kept her face smooth but inside was relieved. She had desperately trying to figure out how to get some private time with Jewel so she could find out if Jewel was in on her plan or not.\n\nEvie also kept a smooth face (Ada had been working with her on her poker face), but was also happy. \"That bitch Lacey won't be around for a while, and that means I can finally speak with Master about some very important things I have found out.\"\n\nThe next several days were pretty mind boggling for Jewel. She damn near fainted twice when Rick's magical servants showed up when she wished out loud for something. She did actually faint when she was walking in the garden and happened upon the Bengal Tigers. She came to and screamed like a banshee when the biggest tiger licked her face. What was worse was that the damn thing took a liking to her and followed her around. Then she accidentally sniffed the Dream Flower bed and woke up twelve hours later in a massive bed being fanned by another servant with the tiger purring by her feet.\n\nShe decided to start minding the warning signs after that.\n\nAnd she named the tiger \"Kitten\".\n\nShe had full access to everything and several times during that time period she had to step out of the palace and go down the hill to a mall for a few hours because she would start to develop a nervous tic when trying to square everything going on that bent the known laws of reality.",
        "After several days of this (and at least one night of about eight gin martinis at the bar and sleeping it off in her car), she felt she had a good idea about the root of Rick's problem. But she was going to make sure so she moved on to the next round which was one on one sessions with the djnn and genies.\n\nJewel had her one on ones with everyone but she saved Lacey and Evie for last.\n\nLacey glided into the small meeting room like a queen. She was in her genie garb and decked out in enough jewelry to buy most of the Las Vegas Strip in one shot. She looked like sex made flesh and Jewel felt a pang of jealousy as she watched her move.\n\n\"The bar against scrying is in force. And Nicole and Ada have made sure no mortal bugs exist in this room (the room was actually in the \"real world\" part of the palace at Jewel's insistence). So we can begin. It's good to see you again Jewel, it has been a long time and I'm sorry we parted on such, poor terms.\"\n\n\"That's a nice way of saying \"I'm sorry I nearly got your ass thrown out of your doctorate program over a $250 lap dance\" Lacey.\"\n\nLacey's grin wavered a bit. \"I am sorry Jewel. Back then was very young and stupid and jealous. I handled it poorly...\"\n\n\"No shit? Really? The whole \"Hey Lacey, see those two guys over there? They are in my program so be sure they don't call me over there or see me without a mask on\" wasn't enough of a fucking warning for you?\"\n\nLacey now had a bit of concern on her face and Jewel let her dance a bit on the hot coals before she snickered. \"Heh, got you.\"\n\nLacey let out a breath. \"Damn it Jewel, don't...fuck, I had that coming I guess. But still, it is good to see you again.\" Lacey held out her hand and Jewel instead walked around the table and gave her a hug.\n\n\"Okay Lacey. It turned out well, so I can't really be hugely mad at you. But that aside, we need to talk. I assume your little stripper talk hint about landing the big one meant Rick?\"\n\nLacey nodded vigorously. \"Yes. I was his first conquest. The sex was amazing! Still is amazing I should say, and you have been around our palace. You can see what we have! Everything! Anything in this world is ours for the taking!\"\n\n\"Provided you can make Master Rick agree.\" Jewel said as she made a note on the pad.\n\n\"Oh I have a plan for that Jewel. And you are a key part of it.\"\n\nLacey stood and looked directly at Jewel. \"I did not have a chance to speak openly earlier with you as Ali was scrying me when I met with you to set this up. I came to you because I needed your help and I trust you. Rick is sick in the mind as you well know. But more than that I have a plan that I believe will allow a select group of genies to exercise great influence and even some control over him. If you help we can help make the strong Master Rick persona gain full control permanently! That persona trusts me more than any other genie and has gradually, with a little bit of help from me, learned to trust Dominika, Lotus and Samantha over the others. We won't be rulers, but we will be his consorts with power equal to Master and Master will be exactly the type of man for us! A strong ruler who will, with our help make more genies and gain more power and eventually he, or his heirs, will rule this world with us as his queens! Anything we desire we will have, but in order to pull it off I need your help.\"\n\nJewel returned her stare. \"Why? And I mean that several ways. Why do you need me? Why do you need to control your Master when he has given you all of this already? Look at your jewelry, its worth more than the crown jewels of England I'd bet! You already have everything, why more?\"\n\nLacey smiled and then giggled as she strutted around Jewel and picked up a wine glass. She waved her hand and a bottle appeared and poured herself a glass. She then reclined onto a couch and looked at Jewel with a steady look. \"Because I can. I have always wanted everything. With my looks and my wits I wrapped men around my fingers like rubber bands. I made strong men dance like puppets for me, and used them like a cash register.\"\n\nLacey sipped her wine and continued. \"Master Rick was the first man to ever outwit me. Of course who would have thought he could use magic like this, but still I was impressed. He was smart, clever and made sure he had a great plan. But he began to slip up. In the end, they always do, carried away by sex, booze, pleasure, and decadence. Given my position it would be easy to help him along the path to self-destruction. But I quickly realized that if he completely destroyed himself I would be in a terrible position. Who would get my lamp, if anyone? What would happen if no one ever found the doorway and I was trapped for eternity? I could not let that happen. So I had to find a way to influence Master and make sure he has heirs to pass me to. Heirs I can influence as they grow and mold into strong power hungry men who will be exactly what I desire. With your help we can guide his mind, and once that is done, it is simply a few visits to a gala in Beverly Hills or the Cannes Festival to find some lovely young mortal women who Master Rick will seduce and ravish and make off with and then have children with. Then we send the women home with lots of money and lovely memories of wonderful sex and magical dreams, and raise the children here to be true Lords and Ladies.\"\n\nJewel kept her face expressionless. Inside she was boiling. \"Of course Lacey would do this! She was never anything but a gold digging bitch that used and discarded anyone she felt like using. I knew she was that way then, and of course she is this way now. But joke's on you bitch, this time you are getting the short end of the stick.\"\n\n\"So you then went out and recruited Lotus and Dominika to assist you in this. With Lotus, you control his day, and with Dominika you control his body.\" Jewel said. \"Samantha is just someone who thinks like you and you picked up once you realized you and her were two peas in a pod.\"\n\n\"Yes about Samantha, but only to an extent with Lotus and Dominika. He will obey her only if it's an order given to keep him physically healthy. Other than that, he owns her. Of course, what one can consider necessary for physical health is open to opinion.\" Lacey said with a dirty smile as she drank again.\n\n\"So I join your little clique and Rick makes me a genie. Then we together control Master and live as queens forever?\" Jewel asked.\n\n\"No, together we shape Rick into a Master that is the Master we desire, and he makes us queens. That's the plan. I know you and I had issues in the past, but I trust you. You were dependable and always had our back in the club. I'm offering immortality, power, wealth, beauty, and sex that will blow your mortal mind into orbit, and it will last forever. What do you say?\" Lacey said with an evil grin.\n\nJewel shook her head. \"Lacey, you never did quite get to the stage where you killed the Golden Goose, but you are just about there this time. Rick has got a major problem. And you had best listen up if you want to survive it.\"\n\n\"I have told the other genies this and you need to hear it too. Rick's mental state is the way it is because of how all of you have interfered with his mind over time. The little changes each of you made have had a bad effect on Rick. He needs to be grounded, he needs to deal with mortals. Dealing with what, ten sex goddesses who simper and bow to his every command and provide pleasure beyond any mortal's dream is beginning to fragment his mind. In short he needs less time with genies and more time in the real world. If he doesn't get that, he will at the very least develop a split personality with multiple selves. Worse case is that he will lose his mind completely and go mad. As in raging, talking to voices in his head and seeing things mad, just like at the party. And since all of you have to obey him, well, think for a minute about how crazy it could get having a madman with ten genies and one djnn to makes his dreams reality and the ability to make more genies for even more wishes. That is not something even you could control. We need to get his life under control before we take control.\" Jewel said.\n\nLacey stared at her. Jewel could tell she was listening carefully and had caught the last sentence she had spoken. After a few moments, Lacey smiled evilly and stood. \"You are wise Jewel, and have explained some important facts. Yes, Master must get his mind in order before we can take control. You will assist in this?\"\n\n\"Yes, but you are going to have to listen to me and let me take the lead. Do not interfere unless you want a mad king as a Master.\" Jewel responded while wondering how the look on Lacey's face would be when she double-crossed her.\n\n\"You have my word, Jewel.\"\n\nLacey smiled and glided out. Jewel waited a bit and in glided Evie.\n\nEvie sat down with a very neutral expression. Jewel picked up on quickly. \"This one is keeping a poker face up. She's the first one to do that\" Jewel's eyes narrowed. \"She knows something. Something she isn't sure about how to use.\"\n\n\"Evie, thank you. You are the last genie to interview. The others have been very helpful and I think I know how to save your Master.\"\n\n\"From himself or from you and Lacey?\"\n\nJewel blinked in surprise. \"Come again?\"\n\n\"Listen to me and let me take the lead. That's what you told Lacey when she asked you to help gain control of my Master's mind isn't it?\" Evie said as she slowly stood up.\n\nJewel blinked. \"Hold on, this place was proof against Scrying and spying, how did you hear that?\"\n\nEvie smiled an evil smile that could have been the twin of Lacey's when she was plotting and suddenly Jewel felt her arms and legs jerked back and bound. She opened her mouth and suddenly it was covered by a vine!\n\n\"Oh SHIT! The PLANTS! Evie was listening in via the plants!\" Jewel realized as Evie patted a long flowing vine that sprouted flowers as her hand touched it.\n\n\"The plants liked you, you know. So did the animals. Kitten is going to be heartbroken when I have to tell him you are a plotter and a traitor to Master.\"\n\nJewel tried to spit out the vine but failed and Evie came in and looked her in the face. She held up a small old hand held tape recorder and smiled. \"Bugs were swept for, but no one swept me. Why would they? Why would I bug my own interview?\"\n\nEvie sighed. \"I liked you a lot. I thought you were a very nice mortal who was actually helping Master out of her own sense of duty and kindness. You are also strong, very strong. Master can wrap any mortal woman around his little finger in with a single look and smile, yet you resist him. You make him call you \"Doctor\" and have kept him at arm's length. You proved to be even stronger than me. But in the end you have fallen for him as well. It's easy for a genie to tell you know.\" Evie moved her hand in a little wave motion and a large violet looking flower sprouted by her hand. It snaked out and hovered in front of Jewel's face.\n\n\"This flower will put you in a blank state. Your \"Higher Reasoning\" functions will cease to work and you will simply answer any question asked. I've had the recorder on so everyone can hear how I didn't use this flower and then program you to parrot out some evidence against Lacey. Not that I need it. I have plenty now, gathered from some conversations by some very helpful plants. And some very talkative slaves who belong to the Grand Vizier who for some reason kept trying to give him wine even when he ordered them to stop.\"\n\n\"But with you, I can put that bitch Lacey in her place and we can find someone to truly help Master.\"\n\nThe flower puffed a stream of pollen into Jewel's face and she coughed. She blinked and for a few moments had the weirdest feeling as she felt her conscious mind literally seep away.\n\nEvie sniffed. \"Jewel, you will answer me truthfully. What was your plan with Master?\"\n\n\"I planned to help heal his mind and make sure the old Rick, the kind one, was in charge.\"\n\nEvie blinked and gaped. \"Wait, what about what you and Lacey discussed?\"\n\n\"I was going to double cross her. I am still mad about what she did to me. When I met her and talked with her I saw that all her beauty, power, and charm aside, she was still the spoiled little bitch that nearly ruined me and didn't care a damn bit.\"\n\nEvie was now smiling. \"Great minds DO think alike after all.\" She thought. \"Jewel, you planned to make the old Rick become dominant. How?\"\n\n\"Increase his time among mortals. He must interact with the normal world and see he is not a God. Even when he goes into the normal world it is in the company of a genie. That warps his thinking and his perception. He needs mortal friends and company.\"\n\nEvie nodded happily. \"Very good, very good. Once you did this, what was your plan?\"\n\n\"To leave.\"\n\n\"Leave? Why? You do realize Master wants to make you a genie.\"\n\n\"I don't want that. I have fallen under his spell yes. I don't think a single mortal woman can resist him if he decides he wants her for long, but I don't want to be one of his genie slaves. I want to be his ONLY woman. I cannot have that, I will not settle for less, so I will go.\"\n\nEvie was now looking very thoughtful. She waved her hand and another blossom, a Wide-A-Wake grew up and puffed in Jewel's face. Jewel coughed as the vines released her and she looked around for a second. Then she glared at Evie.\n\n\"That was fucking dirty pool Evie.\"\n\n\"Blame Lacey. I wouldn't have done it if I was mortal Evie and Master's fate wasn't at stake. You remember your answers yes?\"\n\n\"Yes, and if you tell Rick about this I'll pee in your roses.\"\n\nEvie blinked, and the vine twitched. And Jewel snickered and then started laughing and was soon joined by Evie.\n\nTHE NEXT MORNING\n\nJewel shuffled her notes and looked out at the assembled group. They were meeting in Rick's throne room and Jewel still had to shake her head at the blatant wealth and power Rick showed sitting on a throne of solid gold with expensive silks and furs cushioning it. The genies were all at various states of ease on the stairs, lounging on cushions, being fanned by household servants (pretty magical women dressed as French Maids), and served fine wines (no magical ones for this meeting). The only exceptions were Nicole who stood guard behind Rick and Lotus who sat behind her desk.\n\n\"Ahem, if I can have your attention please I can get started.\" Jewel said as she opened her folder and put on her reading glasses.\n\nRick clapped once and the servants bowed and left without a word leaving on Rick, Ali, and the genies. \"Doctor, please begin.\" Rick said.\n\n\"I have interviewed all of you and Rick and have made some determinations and have several recommendations. First and most importantly, each of you has contributed to the decline of Rick's mental state. This was not done out of malice or intention, but was the product of magic impacting other magic. Simply put, after discussing djnn and Genie magic with Ali and with each of you I have determined that unless a specific wish is made to directly counter another wish, that wish cannot have an effect on the magic in place already. Each of you made subtle changes to Rick's personality and his core self when he wished for more skills, knowledge, or learning. Each of you have an ideal man, and each sought in your own way to shape Rick somewhat into that ideal. Since the wishes were limited, the amount of actual change you could make was limited. That was both good and bad. Good in that the effects are slow over time and were discovered before the breakdown. Bad in that the culminating effects of these changes will shatter Rick's self and his conscious. He has developed some multiple personas, the same person, but with completely different outlooks and motivations. When there is a struggle for control he turns into a raving madman and becomes completely paranoid, hearing voices, lashing out at anything and anyone. Given the power he commands the results could be horrendous.\" \n\nJewel paused for a minute to let it all sink in. Every genie, Lacey included had a look of shock and fear on her face and Ali actually looked pale. \"Good, they need to be scared, especially that bitch Lacey.\" Jewel thought to herself as she went on.\n\n\"I have also determined that this problem will get worse the more genies Rick makes for himself. Even if ordered, the genie is going to make some subtle changes without meaning too, it's simply human nature, er, genie nature. For Rick to at least put the problem on hold, he would have to stop making genies for himself. His mind is already nearly at the breaking point, another uncontrolled slight change to his personality might push him over the edge.\"\n\nJewel looked at her notes again and focused. Rick nodded to himself at her focus and her obvious attention to her job. Crazy situation or not, she was fully professional.\n\n\"Releasing any current genies will not undo any of the current situation. A wish made cannot be undone by undoing the genie. You could cancel some of the wishes by other wishes, but you will need to make more genies for that and that will likely lead to a breakdown. Even without the wishes, the influence of supernatural sex goddesses is profound and will impact on his mental state.\"\n\nAli spoke up. \"Good doctor, forgive me intruding but you sound as if there is no hope for our master. What can be done to help him?\"\n\nJewel smiled. \"I was getting to that. Contact with each of you brings out the personal part that genie imbued in Rick. Rick needs a balance. He needs to be among normal people more, treated normal, acting normal, interacting normally with society. The best cure would be for all of you to be sealed up in lamps and never again let out.\"\n\nJewel waved her hands as the outcry burst and Rick silenced everyone with \"ENOUGH! BE QUIET AND LET HER FINISH!\"\n\nJewel let out a breath and said \"Thanks.\"\n\nShe gathered he thoughts for a minute and then started again. \"Sealing all of you seems cruel to me and after talking to Ali it seems that it is an undeserved punishment. None of you asked to be made into genies, none of you were trying to hurt Rick, so cutting you off entirely like that is not justice. But a reduction in your interaction with him must happen. Dominika was correct in limiting Rick's sexual interactions with you, but more is needed. You must all be restricted to just a few moment daily for business. Ideally not here, and preferably in a professional manner and dress such as business suits, offices, and professional settings. We could allow all of you to see him on special occasions, but Rick needs to be in a place, mentally speaking, that allows him to NOT be under the thrall of genies.\"\n\nJewel sighed as she looked at the gorgeous women lounging on cushions around her. \"Look, I don't know if any of you get this but you are all fucking bombs. I mean drop dead, more glorious than any supermodel, hotter than hell, and make the greatest lovers of all time seem like a 16 year old boy trying to get to 3rd base. You are not normal! Of course Rick is going nuts, how in god's name can a mortal man relate to anyone when he has you serving as his slaves? For crying out loud, your SERVANTS are all model hot and Rick never gives them a second glance. You are driving him insane from the pleasure you bring. If you care for him, you must, MUST, limit your exposure to him. Otherwise, he is going to crack and it's all over.\"\n\nThe throne room was silent for a long time as everyone seemed lost in their own thoughts. At length Rick spoke up. \"Jewel, thank you for your honest work and recommendations. I need to ask you to step out for a few moments while we talk about this.\"\n\nJewel nodded and stepped back, noting the glare Lacey shot at her. \"Suck it bitch, damned if I'm going to help you get control of him.\" She thought.\n\nAfter the doctor left Rick looked at his genies and Ali.",
        "\"Well, you all heard her. I have been talking with her all week and have been reaching the same conclusions. I wasn't going to go as far as the limits she proposed, but it makes sense. The head maid is so hot that at the Halloween Ball a talent scout for Victoria's Secrets Angels offered her a full contract on the spot, and I don't even know her name. You know why? I don't care, she isn't pretty enough to notice compared to all of you. Fuck me, just looking at all of you now is making me nearly mad with lust. I want to tear off my clothes and loose myself in the pleasure of ten genies. And if I do that, I'm a goner. The doctor is right, I need to limit contact with you. With all of you.\"\n\nAli nodded. \"Master, I believe the doctor is correct. You must ground yourself in the mortal world again and keep company with mortals. You need someone who can help you be you.\"\n\nLacey coughed slightly and spoke. \"Master, Grand Vizier, while I want Master to be well in mind and body, are we sure we want to do this extreme step? She is but mortal. If Master took her as a genie and made her the greatest doctor of the mind ever she certainly could find another way to heal him. Or perhaps the answer is even simpler than that. What if Master was to wish for one of his personalities to become the dominant one or the only one? While all of us would be sad that our little tweaks were lost, all of us would be happy with a healthy Master.\"\n\nRick looked around quickly. Ali seemed neutral, Lotus, Dominika, and Samantha looked very much in favor of Lacey's comment. Nicole and Heather seemed hesitant, Evie, Ada, Bridget and Susan all seemed against it.\n\nRick looked at Lacey. Lacey reclined back and struck her most sexy pose. And it was sexy, sexy as all hell. Rick actually stared to drool at the sight of her heavenly body, draped in black see-through silk, decked out in diamonds and gold. She was sex and lust in physical form.\n\nAnd that decided it for Rick.\n\n\"Damn it Lacey, why the hell did I have to start with you as a genie?\" Rick thought with a touch of sadness.\n\nRick stood and without a word strode to the door and out of it. His genies and Ali trailed along behind him as he went into his gallery. Without a word he strode up to the cabinet in which all the lamps were placed. He looked at all the lamps and without turning around he spoke.\n\n\"I command all genies to return to their lamps at once.\"\n\nPOOF!!\n\nTen clouds of smoke streamed past Rick into the lamps. Rick closed the cabinet doors and turned to Ali.\n\n\"Have the doctor come in here. I need to speak with her.\"\n\nAli bowed and left. Shortly, Jewel entered the room and walked up to Rick who was staring at the lamps.\n\n\"Doctor, I will try to limit my contact with the genies. I will need help in doing so. Can you assist?\"\n\nJewel hesitated. \"No, you can get someone else.\"\n\nRick didn't turn around. \"Go on.\"\n\n\"I know Evie told you about Lacey, and I'm surprised you kept this up. I figured you would have confronted her and that would be that. But that aside, I can't stay here. Not like this.\" Jewel replied.\n\nRick smiled and turned around. \"Doctor, you were hired to help heal a mortal mind, mine. Not get in the head of a genie, or genies, or even a Djnn. I believe that you are the person who can help me fix this for several reasons. I believe you to be a kind soul, but also a just one. I don't think you are motivated by revenge, but by a sense of honor. Being wronged requires restitution. I believe that the initial reason for taking this was to gain that against Lacey. And I don't hold that against you.\"\n\nJewel looked at her feet and was silent. Rick seemed to be waiting for her to say something. She weighed her options and finally sighed.\n\n\"I am going to be honest with you Rick. I have fallen under your spell. I want to be with you. But I refuse to be one of your women, one of your many genies. One of your slaves. I won't be. It will hurt like hell, but I will not submit myself to you. Even if you take me by force, I'll find a way to resist. I will either have you as mine or not at all.\"\n\nRick nodded. \"That's why you are so attractive Jewel. You may not realize it, but you are the only woman who has ever been able to resist my charms. And I have turned it on a couple times and normally that ends with a giggling woman babbling about wanting to be my slave.\"\n\nRick turned and looked at her and smiled. \"Well then, I guess I'll have to do this the old fashioned way.\"\n\nJewel blinked and Rick strode over to one of the flowering vines and gently broke off a lovely rose. He came over and handed it to Jewel. Jewel looked at him and he laughed. \"It's just a lovely flower, like you. Please, for you.\"\n\nJewel sniffed it and it did smell lovely. She felt an odd feeling like the room was happy and she noted the plants seemed to be perking up.\n\n\"Evie approves of you. So does Ali. And the plants. And Kitten, although I'm not exactly sure about how that happened. Soooooooo, no genies for a while. Hey I suddenly have an open evening. Care to go out to supper? I know this nice little spot down near the beach. Just out to eat, I promise no attempts to seduce you or enslave you.\"\n\nJewel found herself nodding and soon found herself in a bright red sports car next to the most handsome man she had ever seen.\n\nAnd she had a wonderful time.\n\nThe next day in her office a huge display of lovely flowers, including some that all the women swooned over and were begging to know what kind they were, arrived from \"an admirer\".\n\nThat evening Rick just happened by as she was leaving and took her out for a drink.\n\nJewel tried to put a stop to it, but Rick, the old Rick, the smart and kind one, was not about to take no for an answer. Jewel supposed she could have him arrested for stalking, or have a cease and desist put out by the courts, but every time she tried too she would look at him and he would smile and she would sigh and think \"Well, tomorrow.\"\n\nHe never took her to red carpet galas, or the hottest clubs, or the newest premiers. He simply spent time with her, and gave her flowers and small gifts and talked to her and took her to eat and then a weekend away up the coast after several months. He even got them two hotel rooms for the night. \n\nJewel didn't have sex with him then or on any of the other dates and trips.\n\nAfter six months Rick took her back to his palace and they walked in the garden. Kitten came up to her and licked her hand and followed along behind.\n\n\"You know I've done everything you told me to do. I see my genies when they get up in the morning, and then at a couple of meetings during the day, and then when I put them to bed.\"\n\n\"I'll bet that drives Lacey up the wall.\"\n\n\"I haven't let her out of her lamp since that day.\"\n\nJewel stopped and looked at Rick. \"Seriously? You are punishing her?\"\n\n\"No, well, not just that. I am also holding out, for you.\"\n\nJewel blinked. \"Huh?\"\n\n\"I do so love it when I fluster you. Jewel, you were the missing piece. I need a mortal who cares about me, who can help me with this, who understands Lacey for what she is and can make sure she is kept in check. And to do that I need someone who won't mind being transformed into a genie and then released.\"\n\nJewel gasped and stepped back. \"What?\"\n\n\"I need a partner. I have wished to stay the same until my dying day. I cannot allow my partner in this to grow old and frail as I stay healthy. To make that happen I need more wishes. When I am done, I will break the lamp and return that genie to mortal form to live with me and keep me straight. I hope you will be that one.\"\n\nJewel stared at Rick. Her heart pounded as she realized what he was offering and what she could gain from this.\n\nRick smiled at her again and said \"I won't take you unless you ask, you can walk away right now and never see me again. But I hope you stay to help me, I hope you will be mine.\"\n\nJewel closed her eyes for a second, and then replied \"Do it.\"\n\nRick closed her hand over a lamp and began the ceremony. As Jewel became smoke she simply smiled at him and said nothing.\n\nRick looked at his lamp and rubbed it.\n\nPOOF!\n\nJewel stood before him and bowed low. She was dressed in a Platinum colored silk gown with a tiara set with large diamonds. Her perfect chest was hugged snuggly by the gown and it clung to her hips and legs. Her lovely feet were adorned with golden sandals and finally spun golden chains. Her skin was perfect, her lips ruby red, and her hair done in a beautiful tower. She was more beautiful than Lacey or any genie.\n\n\"Master, oh Master? Did you hear me?\" Rick blinked and realized that Jewel was giggling at him.\n\n\"Huh? Did you say something?\" Rick got out after clearing his throat.\n\n\"Yes Master, I informed you that you have three wishes and that I am your servant. I am guessing that my figure pleases you?\" Jewel said in a voice that sounded like liquid sex.\n\n\"Uh, yeah. Right. Wishes. Ahem. Okay, let's do this. Uh, first wish is that when Jewel becomes mortal again she will remain stable in her age until her dying day like me. She will not become old, frail, or lose her facilities. Two, I wish for the materials for another lamp, just in case. Three, I wish that the mortal Jewel when returned to her human form will look EXACTLY like her genie form.\"\n\nJewel bowed low and then spoke \"I can grant these wishes Master, but is it wise to have a mortal as beautiful as I? Will this not cause problems?\"\n\n\"I can deal with a mortal, it's the damn genies that give me headaches. Make some magic Jewel of the Platinum Lamp.\"\n\nJewel smiled and clapped her hands together. \"Done Master.\"\n\nRick smiled at his arguably greatest creation. He reached out and took her hand.\n\n\"Before I free you Genie Jewel, I am going to bed you. You are going to enjoy sex as a genie at least once before becoming mortal again. Come with me.\"\n\n\"As you wish Master, I shall do my best to please you.\" Jewel said with a gorgeous smile as Rick led her into his bedchamber.\n\nRick removed his clothes and sat naked on his bed. \"Dance Jewel. Dance as you never have before. Make me cum by just watching you.\"\n\nJewel snapped her fingers and slow sensual tune began to play on the speakers. Rick and Jewel both felt the mood of the room swell and pulse. Jewel slowly turned and rolled her perfect hips to the music and began to slowly strip her clothing. As she removed one piece she would drape it over Rick and pull the smooth silk slowly over his skin. She would brush her fingers lightly on his shoulders, neck and arms, and tease him with a light kiss on his lips before dancing backwards from his groping hands.  \n\nRick was soon panting and sweating as his perfect creation danced for him. He was rock hard and he was ready to explode from the slightest touch. The music's tempo increased and she spun and gyrated faster and faster, spinning like a top in front of him. Just as the music reached it final climax she suddenly stopped dead and gave Rick a passionate kiss on the lips. \n\nRick orgasmed on the spot and blew all over his legs and on the bed. Jewel laughed in voice of pure lust and waved her hands. The mess vanished, and Rick was in the center of his bed on his knees facing a reclining and now fully naked Jewel.\n\n\"Master, take me and make me yours. I am your willing servant and will please you as no other has ever.\"\n\nRick crawled atop her and kissed her hard. His hands roamed over her perfect skin and felt the lovely flesh. He sucked on her nipples while she gasped and giggled. He licked her pussy a few times to pleasured moans, and then entered her with a growl that was returned with interest by Jewel. Rick lost himself in pure animal lust and rammed his slave hard and fast. Jewel wrapped her legs around him and thrust back with vigor. Rick and Jewel rolled all over the bed for nearly 30 minutes until they both came. Jewel screamed at the top of her lungs and Rick howled with lust. And then fell atop his slave spent.\n\nFor a few moments anyway.\n\nRick raised himself up and looked at his smiling genie and said \"Make me hard again Jewel, the night is young and we will enjoy every minute of it until the dawn breaks.\" Jewel smiled and with a wave of her hand they began again.\n\nThat night was truly epic in terms of sex for Rick. They fucked on his bed again, in the hot tub, on his bar, on the stage, on his couches, on the floor, on his throne, on the floor in the throne room, in his workout area, in his vault, in his jewel vault on a pile of gems, in the pool, in the Redwood grove on the hilltop, near the waterfall while the tigers watched, on a lovely patch of thick soft grass, and in front of his cabinet where Rick's other genie slaves lay waiting in their lamps.\n\nAs dawn broke, Rick looked at Jewel and smiled. \"Truly epic, I do not think I can ever top it. And I don't want to either. Thank you my greatest creation, I now set you free.\"\n\nRick took the lamp and smashed it against the floor while he shouted \"I the owner of this lamp hereby release the genie from her bonds! To mortal form and freedom is she sent!\"\n\nA huge flash and a clap of thunder followed and after a moment Rick opened his eyes to see Jewel standing there, dressed as she was the day before, but now even more beautiful and perfect. \n\n\"Are you, uh, you? I mean, you okay? I've never released a genie so...\" Rick stammered out.\n\nJewel walked over to Rick and kissed him passionately. \"Yes, yes to both. I'm normal again, and I can feel the changes that your wishes made. It's an odd feeling though, about last night. It's like it was a really realistic dream, one of those you swore was real but you know couldn't be because things like that don't happen in real life.\"\n\nShe turned and looked in a mirror at herself. \"My God. Is that truly what I looked like as a genie?\"\n\nRick came up behind her. \"Yes, and it's how you will look until your dying day.\"\n\nJewel turned around and kissed him. \"I know you have had a long night, but I was wondering just how much like a genie I am, you know, sexually...\"\n\nJewel turned and began to slowly strut towards the bedroom. After a second a grinning Rick followed.\n\n6 MONTHS LATER\n\nLacey materialized in a puff of smoke. She immediately saw Rick seated on his throne wearing a nice normal suit, and then noted the Jewel was seated to his right on an identical one. Lacey frowned at a smiling Jewel, who was decked out in a designer dress of black silk obviously made to show off her great beauty, and a set of jewelry that was even more amazing than what she owned. Kitten lay at her feet purring and Jewel leaned forward and patted his head.\n\nLacey bowed low. \"Master you have summoned me after a long period of time. I have missed you greatly and am pleased you have summoned me. I hope that I can provide you with some pleasure to make up for lost time?\"\n\nRick smiled and Jewel mirrored it. \"Well, Perhaps. You will need to clear it with the Lady Jewel, my wife.\"\n\nLacey's head shot up at the word wife and she stared from Rick to Jewel and back again.\n\n\"Yes Lacey of the First Lamp, things have changed while you have been gone. Rick and I are married nearly four months and have just returned from a long honeymoon abroad. Paris is a lovely place, as is Rome, Munich, Bangkok, and other locations we went. Rick is quite the lover and I have never been so happy as when laying naked next to him in the throes of passion.\" Jewel said and she and Rick shared a quick kiss.\n\nLacey hissed and stood. She took one step towards Jewel when Rick spoke.\n\n\"Stop where you are slave.\"\n\nLacey froze in place.\n\n\"You will obey my commands as follows fully, and without any attempt to work around them or to deceive. You will obey Lady Jewel as you obey me, she is your mistress and her commands are second only to mine as far as you are concerned. You are her slave as you are mine. You will be loyal, and you will obey without question or hesitation any order she gives. You will never attempt to usurp her position or place or power, or attempt to cause her harm in any way shape or form. Do you understand?\"\n\nLacey bowed low and with a slight hitch in her voice replied \"I hear and obey Master and Mistress.\"\n\n\"I know what you tried to do Lacey. I know about how you tried to turn Ali into a drunkard, I know about how you used some of the magical plants on Ada so she would set up some things for you on the computer system, I know about how you tried to corrupt me and make me into an arrogant snob who wanted to make everyone crawl at my feet, and I know about how you tricked me into recruiting your friends and allies to help you. I was tempted to smash your lamp and send you away, but in the end I decided that was not really just. You didn't ask for this, and I was a fool to enslave a gold digging stripper thinking she would change as a genie. I will keep you in my service, but your position is now something we will have to figure out. You have no special standing anymore Lacey, no genie answers to you anymore.\"\n\nRick smiled and stood. He took Jewel's hand and led her down past a bowed Lacey. Rick turned back as they exited the room. \n\n\"Lacey, you will be a lesson to my heirs for a long time to come. A woman who literally had everything at her fingertips, and nearly lost it all because for her everything was not enough. Tonight my wife and I are going to fuck like animals. Not make love, not lay with each other, we are going to FUCK. And you get to watch. So be in our bedchamber in an hour.\"\n\nLacey looked Jewel in the eyes and after one brief glance of hatred and anger, bowed low.\n\n\"As you command, Master.\"\n\nLacey heard a snicker and turned to see Evie patting some potted plants near the doorway. \"Well, looks like sleeping beauty finally got woken up.\"\n\nLacey hissed again. \"You fucking WHORE! You did this! You played me! Turned Jewel against me!\"\n\n\"She was already against you. I arguably saved you and us. If I hadn't enchanted her and found out what she was really planning I don't know what would have happened. I was going to tell Master about what I knew about you and your manipulations of Ali's slaves, and using some of the flowers on Ada and setting things up to take control of the Palace and then bring Strong Master into full power. Jewel told me later that might have caused a full break of his mind.\"\n\nEvie strode up close to Lacey and looked her dead in the eyes. \"The problem persona wasn't the \"old\" Rick. It was the new one, created by a greedy bitch who encouraged it and helped it grow and poison Master's mind and slowly corrupt him. He would have snapped eventually if you had won and this world would be a madhouse for it.\"\n\nEvie eased past her. \"By the way, Lady Jewel has pretty much got Master's mind healed, healed to the point that he can have fun with his lovely slaves again. Lady Jewel even lets him do that twice a week. I guess we should thank you for picking a woman who is actually bi-sexual and has a bit of an open mind when it comes to keeping a man sane.\"\n\nEvie looked over her shoulder with a evil grin that would have matched Lacey's any day.\n\n\"FYI, you are at the bottom of the list. And it takes work to move up. Which is a problem for you since Lady Jewel has abolished the Harem and decreed that we exist only as the special servants.\"\n\nEvie paused and then added \"Maybe you can be the head dancer then? I heard you were a really great stripper as a mortal. No matter, I'm sure you will figure it out. Don't be late for Master and Mistress.\""
    ],
    "authorname": "Moosetales",
    "tags": [
        "corruption",
        "domination",
        "genies",
        "harems",
        "magic",
        "make over",
        "mind control",
        "orgy",
        "transformation"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-lampmaker-ch-11"
}