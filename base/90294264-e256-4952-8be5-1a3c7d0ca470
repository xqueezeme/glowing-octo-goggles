{
    "title": "Traveling East Ch. 02",
    "pages": [
        "This second chapter is a continuation from chapter one but it contains flashbacks to the previous submission. The reader is strongly advised to read chapter one to get the most enjoyment from this tale. The characters have been developed in the Angels series also posted on my page. Again the reader is advised to read previous submissions prior to reading this chapter. As always all characters are at least 18 years old and I appreciate any and all feedback.\n\n*\n\nJan and Sally and I were just finishing our breakfast when we heard sounds coming from the room adjoining ours.\n\n'It sounds like our neighbors are stirring.' Said Sally. 'Do you suppose they'd like to join us?' \n\n'I imagine they'll come around to check on us.' I replied. 'There are never any secrets between me and Sue. And I'm sure she knows that we're all curious about how they spent their night.'\n\n'I heard noises off and on all night from there.' Sally told us.\n\n'Are you sure that wasn't all the noise that you were making?' Jan asked.\n\n'Oh, so you did hear us last night? We thought you were fast asleep.'\n\n'Tired, yes; asleep, not a chance. I'm learning to love the sounds of sex again and you two were playing just loud enough.'\n\nMoments later Sue stuck her head in the door.\n\n'Good morning all you romance lovers. Did we have an enjoyable night?' she asked.\n\n'We sure did!' Sally smiled. 'I'm liking this stud you brought up here from Arizona. I think you need to bring him back here more often!'\n\n'Well he's the one who brought me actually, but after my night, I sure hope we can come back again! Nikki is a world class lover! I can see why Deb moved all the way across the country from LA so she could be with her. She could share my bed anytime! Hey, do you have coffee made already?'\n\n'Of course,' I told her, 'come in and help yourself. Hey Sue, what's that on your leg?'\n\n'What?' she asked as she looked down to check herself out.\n\n'Come here. Look right there on the inside of your thigh.'\n\nSue bent her knee so she could see the inside of her thigh. As we all looked on she discovered a big bruise just below her vagina at the top of her leg. She looked up at us sheepishly.\n\n'Oh my God, that's where Nikki was kissing me last night! She was driving me wild. I'm surprised I don't have another one on my clitoris. She's an animal!'\n\n'Well you better get your coffee and then go back and show her what she did to you. But don't tell her to kiss it to make it better! That might be dangerous.'\n\nWe all laughed together and watched Sue as she walked over to the coffee pot and poured two cups. I love watching Sue when she's naked, especially her ass. She's so petite and so incredibly sexy. I felt my dick throbbing under the table. Fortunately it was out of sight from Jan and Sally, but they were also watching Sue. She's just that cute. Everybody loves her. She turned and winked at us all as she made her way back into her room to rejoin Nikki.\n\n'So what should we do today?' I asked.\n\n'We could stay here in the suite and fuck each other all day.' Jan suggested. 'That would be fun!'\n\n'I think Rob wants to get out and enjoy the outdoors. Besides, I think we need to give him a rest.' Sally came to my rescue. \n\nI nodded. 'I like the idea of more sex, but Sally's right, if you give me a bit of a rest, I'll be that much better tonight. I promise.'\n\n'What about Sue and Nikki? Do you think they'll want to join us?'\n\n'I guess we should ask them. After all, this is Nikki's town. She might have some ideas.'\n\nI got up from the table and looked in on Nikki and Sue. Nikki was lying on her back with Sue between her legs, and she was talking on the phone while Sue was eating her pussy. I heard her talking.\n\n'OK lover...yes you should come here as fast as you can. I want you to meet everyone. Hurry! I love you.'\n\nShe hung up the phone and looked at me.\n\n'Hey, good morning big boy. This is the life! I get to talk to my lover on the phone while I have another one nibbling on my clit! Sue is amazing!'\n\n'I know she is. But I'm glad you agree.' I looked down at Nikki's breasts as I approached their bed. Her nipples were getting hard as Sue continued to stimulate her. 'You look pretty happy right now.' I was holding my dick in my hand and I could tell that Nikki was eying it. When I reached the side of the bed, she reached out and touched me.\n\n'Mmm, Rob this is nice. I still can't get over how considerate you were last night. I had the best orgasm. And I just told Deb all about it. She's on her way over here right now. I think she wants to meet you and see why I'm feeling so good this morning.' \n\n'I'd have to guess that you're feeling so good because of what Sue's doing right now, rather than because of what I did last night.'\n\n'Mmm, you might be right. Yeah Sue, right there! Oh yes, make me cum lover!'\n\nI stood there and watched as Sue brought Nikki over the edge. Her eyes rolled back and her hips began to move uncontrollably. Sue held on tight and drank up Nikki's cum while Nikki thrashed about on the bed. She made enough noise that Jan and Sally came in from the next room to watch too.\n\nOnce Nikki's crying and moaning came to an end she looked around at all of us. 'Wow,' she said, 'what a way to wake up!' \n\nSue looked up and grinned. Her face was wet and slimy but her eyes were bright and sparkling. 'Ooo,' she said, 'breakfast of champions!' \n\nWe all laughed together.\n\n'Nikki,' Sally asked, 'we were wondering if you could suggest something for us to do today besides, staying in bed and fucking each others' brains out?'\n\nNikki thought for a moment. 'Well, staying in bed and fucking does sound nice, but it's supposed to be a pretty day, and so we really ought to get out and at least see the falls. I don't mind playing tourist today.'\n\nThere was a knock on the door. We all glanced at each other and I got up to answer it, realizing that we were all naked and Sue was still nuzzling Nikki's crotch.\n\nI opened the door and froze for a moment. The girl in the hallway was absolutely stunning. She was tall and blonde. In her high clunky shoes she was as tall as me. I gathered a look at her from her head to her toes and then back up again. Her long legs were covered at the top by a short denim mini skirt. She wore a tight tank top that betrayed her braless breasts and full areoles topped by firm nipples. Her shoulder length hair gave way to a broad smile and bright blue eyes. \n\nShe looked a little stunned too at first, perhaps because she was staring at a naked stranger. But her shock soon passed.\n\n'You must be Rob.' She said as she stepped in the doorway. 'I'm Deb. I see you're expecting me.' She joked as she looked down at my semi hard penis. She walked past me and into the room.\n\nI turned to see Nikki's eyes brighten.\n\n'Deb! You got here so fast. Come in baby.'\n\nDeb walked over and bent down to give Nikki a good morning kiss. It was long and their mouths were open. I eyed Deb's legs as she bent forward and exposed the bottom of her ass beneath the short skirt. I couldn't tell if she wore a thong or if she just skipped panties like Sue. But her ass looked hot and firm to me.\n\nWhen she stood up and looked around at us all she said, 'I can see I'm over dressed.'\n\n'Deb, let me introduce you.' Nikki began. 'You've already met Rob.'\n\n'Mmm yes, but I'd like to get to know him better.'\n\n'This is Rob's sister Jan.' Jan put her hand out and Deb took it and then leaned closer and gave Jan a quick kiss on her mouth.\n\n'And this is her friend Sally.' Deb did the same. Sally reached up and hugged her neck.\n\n'And this is Sue.' Nikki said, looking down her body at Sue, who was still nestled up against Nikki's puss. Deb bent over again, exposing her backside to my watchful eye, and gave Sue a deep wet kiss.\n\nAs she stood back up she smiled, 'Oh I recognize that taste! You bad girl, you!' She looked around. 'Do we have coffee here?'\n\nI jumped up and went next door. 'How do you like it?' I called out.\n\n'Black and sweet.' Came her reply.\n\nI prepared the cup and returned.\n\n'Why thank you.' Deb smiled sweetly.\n\n'So Deb,' I asked, 'we were just asking Nikki what we should do today. Would you two like to be our guides? You could show us the sights around Niagara Falls and let us get to know you better.'\n\n'From the looks of things, you guys have gotten to know Nikki pretty well. Did you want to get to know me that way too?'\n\nI nodded enthusiastically. 'Oh yeah, I'd like that very much!' I glanced around to see Jan and Sally agreeing.\n\n'Well we might be able to do some of that too. I think I'd enjoy getting to know you all better. What do you think Nikki? Would I like Sue or Jan or Sally...or Rob?'\n\nNikki grinned. 'Yeah baby, I think you would. I sure do!'\n\n'OK, but if we're going to take these people out on the streets, you're all going to have to put some clothes on!'\n\nThat got everybody chuckling. I stood up again to go use the shower. I left them all there to go about getting up and ready. \n\nI took a quick shower and came out to the vanity to shave. I was standing in front of the mirror, still nude, and spreading lather on my face when I saw Deb watching me in the mirror.\n\n'Like what you see?' I asked.\n\n'Yeah, it's been a long time since I watched a guy do the morning shower and shave routine.'\n\n'Do you miss it?'\n\n'Not really, but it's fun to watch. And besides, you've got a cute ass.'\n\n'Thanks. You've got a nice one too.'\n\n'You got x-ray vision?'\n\n'No, but I confess, I was looking up your skirt when you kissed Nikki before.'\n\n'Why you dirty old voyeur! What did you see?'\n\n'I saw the bottom of a nice firm butt. But I couldn't tell if you're wearing a thong or going commando.'\n\n'Do you like looking at women's underwear?'\n\n'Yeah, if it's on a pretty woman.'\n\nDeb stepped over and stood beside me. I was about halfway through my shave and she seemed to be watching my face closely. Our eyes met in the mirror. Then she looked downward towards my cock. It was hanging freely in a semi hard state. I watched her hands move to the hem of her skirt. Slowly she lifted it. Our eyes met again as they were shifting up and down. Deb held the skirt hem at the top of her legs, knowing that another inch would give me an answer to my question. I felt my dick throb in anticipation. I know that Deb saw the movement too. \n\nShe lifted her skirt even higher and exposed the front of her pink satin thong panty. There was an appliqu\u00e9 of a set of red lips on the front and I could see a wet spot below. Deb knew I could see it too.\n\n'Mmm,' I said, 'I like the looks of that!'\n\n'Now you know my secret.' she said, 'You like to look...I like to show.'\n\nShe let go of the skirt with one hand and rubbed the front of her thong. I could tell that she was rubbing her clit by the wanton look on her face. Once again I felt my dick throb. It was bigger now. And Deb noticed too.\n\n'Glad to see you're enjoying it. Keep your eyes open today. You never know when the show might start again.' She winked at me and dropped her skirt. Then she reached over and touched the end of my cock. There was a drop of pre-cum there and she dabbed it with her finger. Then, looking in the mirror, she seductively put her finger in her mouth and sucked the droplet away with a sly smile. Then she put her finger on my chin and swiped at the remaining shave lather.\n\n'You missed a spot!' she grinned as she turned and walked through the door back to Sue and Nikki's room.\n\nI thought to myself, 'What a tease!' and smiled as I looked forward to a day with five hot women. I wondered what Deb might have in store for me...or for us all.\n\nI finished up at the sink and got dressed. I decided on jeans since if I wore loose shorts I knew these girls would be trying to get me hard and it's easier to conceal in tight denim than baggy shorts. The girls were all wearing tops that teased either due to the tightness of the tanks, or the open buttons of the blouses. They all skipped bras in favor of showing as much bare skin as they could. Jan and Sue and Nikki wore jeans while Deb and Sally had on short skirts. As we opened the door to the hallway I felt like I was floating out of the room with these five hot beauties on my arms.\n\nHeads were turning as we made our way through the lobby and out into the sunshine. It was a beautiful sunny day... almost as pretty as a day in Sedona. The valet brought my car up and I watched him as he held the door for the girls to pile in. He got more than an eyeful of tits and asses and he grinned widely when I tipped him and got in to drive away. The girls were all giggling about the show they had just given the guy.\n\n'I can tell this is going to be a great day to show off!' Sue said as I pulled out onto the street.\n\n'Oh yeah!' Deb laughed. 'Go to the light and turn left Rob.' Deb was taking charge. I was glad that she felt so at ease with us all. She directed me towards the border and we actually crossed over into Canada. The customs officer got a nice peek up Deb's skirt as he questioned us all at the checkpoint. I noticed him eyeing all of the nipples too. Finally he let us through and Deb gave me directions to a big new Casino. Once again the girls put on a show for the valet as they piled out of the Hummer.\n\nAs we walked to the door Deb grabbed my arm and stood facing me very closely. She grabbed the top of my jeans and pulled my belt buckle towards her. I looked down and saw a flash of pink as she stuffed her hand down into my pants.\n\n'I want these back.' She said, while fondling my cock and wrapping it in her thong. 'But I expect it to be covered with your cum. Let me know if you need any help.' Then she leaned closer and gave me a gentle kiss. Now I knew that she was bare under her skirt and I knew I'd be watching closely.\n\nWe walked through the casino and Nikki lead us out to a sunny patio that had a gorgeous view of the river and the falls. We found a table in the sun and sat ourselves down. After the waitress took our drink orders I watched the girls make adjustments to their clothing to take advantage of the warm sunshine.\n\nSue slipped the spaghetti straps of her tank top off of her shoulders and tucked them down into the shirt turning her tank into a tube. She pulled the top edge down so that it just covered her nipples. She doesn't have a lot of cleavage, but she was maximizing it now. Deb was watching her and did the same with her top. Nikki and Jan were wearing button up blouses and I watched as they each unbuttoned one more button. Then Nikki pulled up the tails of her shirt and tied them underneath her breasts so that her midriff was now bare and the fullness of her tits was clearly in view. I had a nice side view of Jan's open blouse and could see her entire left breast as the shirt gaped open. Sally was sitting beside me and she pulled the bottom of her tank top up to expose her midriff. Had she dropped the straps as Deb and Sue had done, it probably would have fallen down since her breasts are so small. But she pulled the top down and forward, so it fell open when she leaned toward me and gave me a totally unblocked down blouse view. Then she hiked her skirt up as she crossed her legs and gave me a sneaky upskirt shot of her silky thong panty. The busboy took his time filling our water glasses and the ladies all pretended not to notice. \n\nSue stood up to walk over to the rail and get a closer look at the Horseshoe Falls. There was a mist in the air. We were that close to the rushing waters. As she leaned on the rail, Jan walked over to join her. Watching their asses in their tight jeans caused a little stir in my pants. Deb took advantage of the vacant seat beside me and propped up her legs on the chair. As she raised her knees she gave me a hot look up her legs to her ass and her bare vaginal lips. What a tease! She grinned at me and batted her eyes. Then she glanced over at Nikki who was watching the whole thing.\n\nNikki smiled and sarcastically noted, 'Deb you are such a slut! How come I love you so much?' 'That's exactly why you love me, and you know it! Besides, you're flashing a lot of tit there. Show me your nipple.'\n\nNikki put her fingers on the opening of her blouse and shamelessly tugged it to the side, exposing her full breast. Deb licked her lips and formed a kiss that she blew into the air. Then she winked at me and said 'Doesn't Nikki have great tits? I could suck on them all night long!'\n\nI nodded in agreement. 'I'd love to do that too.'\n\n'Rob I've got something else for you to suck on.' She spread her legs open with her hand and used her fingers to expose her clit to my watchful eyes. 'I'll have Nikki show you just how I like her to nibble on my clitty and then I want to feel your face in my pussy. Would you do that for me?'\n\nNow I was sure that Deb wasn't just teasing, and that by tonight, I would be tasting her nectar and lapping at her womanhood. And since she had already shown an interest in my cock, I was reasonably certain that she'd be getting some of that too. I felt it stiffening in my jeans.\n\n'I'd be delighted Deb. I've had some experience and I think I can give you what you want.' I winked at her and she grinned back.\n\nSally, sitting on my other side, was taking it all in and she offered, 'Deb, I can vouch for his experience and expertise. I always thought my husband was pretty good at making me cum with his tongue, but last night Rob took me to a whole new level. His wife Trish is one very lucky lady! I can't believe that she would let him go off on his own on a trip like this! And according to Jan, she knows pretty much everything that he's doing right now! Can you believe it?'\n\n'Rob, Nikki has told me a few things about you.' Deb went on. 'She says you're married to an amazing woman and that you have two of the sexiest daughters she has ever heard or read about. Is it true that you and your daughters enjoy sex together?'\n\nSally's eyes opened wide. This was the first she had heard of this.\n\n'Well Deb, you have to know Tracy and Teri, and it would help to know Trish, my wife. She really is the most amazing woman I have ever met, and she has raised two children who are a gift from heaven. They're good students, they're well socialized, they're beautiful and sexy, and they're not shy.' I turned to face Sally as I continued. 'Yes, we have a totally open relationship. Nudity is normal in our home, and we have no secrets about sex. Trish has been careful to teach the girls about the beauty of a loving relationship and the joys of sexual enhancements to love and life.'\n\n'Oh my God!' said Sally, 'Does Jan know about this?'\n\n'Not yet.' I admitted. 'We've been out of touch for too long. This week has been a real eye opener for us both. And there's more for her to learn, as you now know.'\n\n'So I assume that they're all bisexual?' Sally asked.\n\n'I guess so. We don't really think of it that way. We're just all sexual beings and we enjoy others who feel that way.'\n\n'Does that mean that you approve of all of their sexual activities?' Deb asked.\n\n'So far, I guess. Again, we've tried to be good teachers and good examples. They're very grown up for their ages and we trust them to make good decisions.'\n\nWe were interrupted by the waitress as she returned to take our orders. We made our breakfast selections. Sue and Jan rejoined us at the table and ordered as well. They arrived at the tale end of my discussion about my family.\n\nWhen the waitress left Jan spoke up.\n\n'Rob I heard you saying that Teri and Tracy are very grown up. Sue was telling me that you have a rather unusual household. Can you share some more?'\n\n'Well Jan, what can I say? Trish has never been ashamed about having sex with me in the company of her daughters. So naturally they have asked questions and learned first hand what sex and love are all about. And we have experimented together.' I observed a slightly shocked look on my sister's face.",
        "'And as they've grown up, we've all grown together, so we have no secrets and we have no shame. And I guess most of all we've all learned how to provide comfort and pleasure for each other. Try to imagine this... The very first time that I met Tracy and Teri was when Trish took us all to her nudist club outside of Phoenix. We spent the weekend together. On the very first night, before we went to bed, I watched Teri ask her mom to masturbate her. And Trish used her hand and arm to make Teri cum before she went to bed!'\n\nEveryone's eyes were wide around the table except for Sue and Nikki. They both knew the story.\n\n'And the next morning when I woke up in bed with Trish, we were joined by Teri. Of course, she was full of questions and to make a long story short, Trish taught her how to perform oral sex on a man...with that man being me! At first it shocked the hell out of me, but over time, it came to be normal and even healthy. There's a certain freedom that comes from not having to hide anything from your children. And of course it's wonderful being able to totally trust everyone in the family and household. Even our domestic employees are like part of the family.'\n\n'Don't tell me you all fuck the maid and the gardener!' Jan burst out nearly laughing.\n\nSue laughed and answered, 'Jan you have to know who they are. Melinda and Lucinda are twin sisters who are absolutely stunning! And they really know how to run a household. They take care of everything inside Rob's home and free up Rob and Trish's time to be with the girls. And yes, they often work in the nude and they are sometimes involved in the partying and the sex that goes on too.'\n\nI watched as eyes rolled around the table.\n\n'And you should see the gardener!' Sue went on. 'She's as cute as a button! She's young and blonde and slim. She's got a full crew of Mexican laborers, but she gets the work done. I know Rob was first attracted to her by the skimpy shorts and bra tops that she wears, but then we found out that she was a roommate to Tracy's teacher at school! We've all become great friends! They even came along on Rob and Trish's honeymoon cruise!' Once again the waitress appeared, this time with our breakfast. As she served the plates I looked at everyone and added, 'And the honeymoon cruise is another story all together!'\n\nAs we ate Nikki spoke to us all. 'You know Rob, I feel as if I've known you for such a long time, but I'm really just meeting you. Sue and I have shared so much in the past few years and a lot of it has been about you and Trish. But it was only something I could read. When Sue and I chat, we share something deeper, but in the end, I was still only touching myself. Being with you here and now is like the world is opening up. I can see you and hear you and touch you, and I want more. I can hold Sue's hand and hug her and it's like a dream is coming true. Even Deb knows how much I've wanted this for so long. It's just so amazing!'\n\n'That's for sure!' Deb broke in. 'We have a photo of Sue on the wall in our house. I was kind of jealous of it at first, but I also saw how much you meant to Nikki and so I just let it be. Now I'm beginning to realize how and why you guys are so special. And Nikki I understand and appreciate it all. Sue helped to save you before I was even in the picture, and I'm glad for all of us that she did.'\n\nJan was sitting quietly taking it all in. She spoke up and changed the subject slightly.\n\n'So Rob, do you think that if I brought my boys to visit you and their cousins in Arizona, that their Aunt Trish might be able to teach them about how to behave around girls?'\n\nI laughed for a moment and replied. 'Jan I would love it if you came to visit us in Sedona. As for teaching the boys, I expect that they've already learned quite a bit. Perhaps Trish and the girls could help to shape and fine tune what they've learned so far. At the very least, I'm sure that they would be thrilled to get to know their cousins!'\n\nEveryone understood the double entendre and there was laughter around the table. \n\nJan went on. 'So if we come to Arizona should we plan on being naked at your house?'\n\nI laughed again. 'Only if you want to. And if it makes you or the boys uncomfortable to see us in the nude, then we'll keep our clothes on out of respect for you. But right now I don't think you should worry about that. I'd love to have you come visit us, but we can work out all that other stuff once you start planning your trip.'\n\nI noticed Sue starting to fan herself. She held the front of her top out and waved her hand to blow a breeze down her shirt. When she caught my eye she said, 'It's getting warm here in the sun! I wish I had worn a skirt like Sally and Deb. These jeans are hot.'\n\nI jokingly replied. 'Well you could take them off.'\n\nSue shot back, 'If I had a thong or bikini bottom on, I'd do it in a second, but I'm afraid that today I'm only wearing one layer.'\n\n'I know what you mean Sue,' said Jan, 'I'm getting hot too. Maybe we should find a shop or boutique where we can buy some shorts or skirts.'\n\nDeb looked over at Nikki. 'Hey Nik, do you think they'd like to go to Wendy's?'\n\nNikki grinned.\n\n'What's Wendy's?' Sue asked.\n\n'It's a little shop that Deb likes to take me to.' Nikki answered. 'They have sexy clothes and swimsuits. Sometimes Deb and I like to show off, Deb especially. She makes me do things I'd be afraid to do on my own. But Wendy's has good clothes for when we're in that kind of mood.'\n\n'Well I'm always in that kind of mood!' Sue volunteered.\n\n'And I'm feeling pretty daring today.' Said Jan. 'What about you Sally?'\n\nSally giggled and then answered. 'I'm already wearing a skirt, but I must admit, this thong is getting kind of warm.' I looked over at her as she hiked up her skirt and peeled off her panties. She was mostly concealed by the table, but since she was seated beside me I had a clear view as did Jan on her other side. She pulled her skirt back down and smoothed it and then held up her thong. 'Anybody want this? Deb I noticed that you don't have anything under your skirt. Are we twins now?'\n\nDeb winked at Nikki. 'I think we need to go to Wendy's. Rob, you don't mind if we girls do a little shopping do you?'\n\nNikki grinned. 'I happen to know that Rob will be glad to take us all to Wendy's. And I'm pretty sure that Wendy will take good care of him while we shop. And once we're done, we should all be able to thank him and take care of him too!'\n\nI signaled the waitress and she brought the check. I had to admit that it was getting warm in the sun. It as burning off the mist from the falls and shining brightly on our table. I paid the tab and we rose to leave. My eyes were darting back and forth as I watched Sally and Deb stand up from their chairs. I got a flash of both of their pussies in the process. As we turned to walk out Deb put her hand in my crotch and gave me a squeeze. Then Sally turned to face me and held her panties, clutched in her fist, up to my nose.\n\n'Thank you for breakfast Rob. Something about it got me really hot...and wet! Do you like the aroma? You can have some more later on. Maybe we can find a private dressing room at Wendy's.'\n\nMy head was spinning from the scent of Sally's thong. And the thought of getting her into a changing booth was arousing to my cock even though it was trapped inside the buttons of my jeans. I reached behind her and gave her ass a little squeeze. My hand was gripping the hem of her denim skirt as well as a fair amount of flesh. When she turned and walked away I was treated to a generous peek at her ass. The other restaurant patrons were getting a nice show as well.\n\nThe valet brought the car up and held the doors while Deb and Sally made no pretense about flashing their bare pussies for him as they stepped up into the car. He closed the doors and smiled at me as I engaged the vehicle and drove away. \n\nDeb directed me back across the border and into the downtown section of the city. In the rearview mirror I observed Sue and Nikki holding hands and stroking each others' legs and bodies. Jan and Sally caught on and began a kissing and stroking session of their own. Meanwhile in the front passenger seat, Deb was leaning against the door and spreading her legs for me. While she occasionally glanced back to observe her lover in a passionate embrace with my friend Sue, she probed her own pussy with her fingers and licked her lips seductively for my eyes only. More than once she leaned across the console and put her hand on my jeans and squeezed my hardening cock through the denim. She had me very close to creaming her panties when she told me to turn into a parking structure. I drove up the ramps past rows of parked cars until I got to a level where the spaces were empty. I backed the car into a space and put it in park. Deb was now stuffing her hand down my pants and kissing my mouth. Our tongues were dancing together and our spit was well blended.\n\nI looked into the mirror again and observed the other two couples in similar embraces. When Deb finally broke our kiss she turned to see the others.\n\n'Well are we going shopping or should we just have an orgy in the car?' she asked.\n\nSue laughed. 'I have got to get out of these jeans, one way or the other, and I know that if I was wearing a skirt, Nikki would have her fist in my cunt by now and I'd be cumming all over her hand! And I want to do the same to her. There's not enough room in this back seat! Let's get out of here.'\n\nSally was busy sucking on Jan's nipples while Jan held her face and directed her to the most sensitive spots. 'I hate to stop now, but I want to get out of these pants too. C'mon Sally let's go find some looser clothes. I'm in a mood to fuck, but I need to be wearing something that gives you easier access, especially if we're gonna do it in public like this.' Then she added, 'Oh my god, listen to me! I can't believe I just said that. I've become a sex fiend.' \n\nI opened the door and we all slowly got out of the car. I watched the women as they all straightened their clothes. I looked down and realized that my shirt was also untucked. I reached down and stuffed it back into my jeans. I felt the smooth satin of Deb's thong against my bare semi hard dick. I flicked my fingertips to adjust the silkiness around the helmet of my cock. \n\nWe were quiet as we walked down the stairwell to the street, but once we were out in the sunlight again we joined hands. Deb held Nikki's left hand while Sue held her right. I found myself between Jan and Sally as we walked three abreast down the sidewalk. It was only a block and we found ourselves at the entrance to Wendy's. The display window featured two scantily clad mannequins and an array of accessories including some soft core sex toys and light bondage devices. It didn't appear to be a store that focused primarily on sexual materials but rather featured them in addition to the fashion items and clothing.\n\nWe stepped inside and the lone saleswoman immediately greeted us.\n\n'Why Deborah and Nikki how nice to see you again! How are you today?' \n\nDeb replied, 'Just great Wendy, how are you? Say hi to our friends. This is Sue and Jan and Sally and this handsome hunk is Rob.'\n\n'Hello to you all. Rob, how is it that you have all of these women with you today?'\n\nI hesitated at first. 'I've been kidnapped. But I'm hoping that they won't send a ransom note.'\n\n'Well don't look for me to rescue you! I know how dangerous this pair can be.' I liked Wendy's quick sarcasm. 'Deb, how can I help you today?'\n\n'We were all having breakfast together at the casino and we started to get hot in the sun. We need some lighter weight clothing for the rest of the day.'\n\n'Was the sun the only thing that made you hot?'\n\nSue and Jan were already pawing through the racks. Nikki stepped over to join them at a carousel of skirts and shorts. Sally headed for a dress rack. Deb took my hand and led me across the store.\n\n'Rob, Wendy even has a few things here that might fit you. Let's see what we can find.' She took me to a wall that featured a row of tshirts and tank tops and a lower bar with shorts and briefs and thongs for men. She started removing the hangers from the bar and holding them up for us to see. I said nothing but Deb picked out a few thongs for me to try on. The others were all heading for the changing rooms. Deb and I followed them to the back of the store where there were two rooms behind loose curtains. Jan and sally were in the one on the left and Sue and Nikki took the one on the right. Deb looked around the store. We were the only customers. Then she called out to Wendy.\n\n'Wendy you don't mind if Rob undresses to try these on do you?'\n\n'Of course not, I'll close the front door for a while. Nobody will bother you.'\n\n'Oh you don't need to lock the door. Rob might even like it if someone else comes in to shop. He might need another opinion. OK Rob, drop your jeans. I was standing outside the dressing rooms but I could see past the curtains to where Nikki had stripped down to her panties and Sally and Jan were similarly undressed in their room. Deb began to unbuckle my belt. I looked over at Wendy who was watching and she winked at me. I figured 'what the hell' and unbuttoned my jeans. As I opened the fly, Deb's pink thong fell out. She bent down and picked it up. She held it up to her face.\n\n'Mmm, still dry but I like the way it smells. What do you think?' She pressed it to my nose and I inhaled the combined aromas of my own sweat and Deb's fresh vagina. Then she reached down and held my cock in her fist. It stiffened with her touch. 'Ooo this might be too big to fit into these. Maybe we should just leave it out for a while. Wait here.'\n\nI stood there stunned while Deb turned and walked over to a dress rack. She pulled a couple of short sundresses off the bar and brought them back to where I was standing. Wendy came over and offered to hold them. Deb handed her the hangers and then crossed her hands at her waist. In an instant she had pulled her tank top over her head and she stood before me as I admired her full breasts. Her nipples were hard and stood out, begging to be touched. But before I could move she was unbuttoning her skirt and pushing it to the floor. Now she was totally naked. I glanced toward the front window and realized that people outside on the sidewalk might see her. I still had on a shirt, but my pants were on the floor and my cock was standing up now. \n\nWendy handed Deb one of the dresses and I watched as she slipped it over her head and pulled it down. It was very short and just barely covered her pelvis. The top fit snuggly and she adjusted her boobs into the cups of the dress. She pushed the curtain aside to Sue and Nikki's dressing room and stepped in to admire herself in the mirror. From the rear I could see the cheeks of her ass beneath the hem. Nikki was trying on a short skirt but her breasts were bare. Sue was naked. \n\n'What do you think Nik? I bet this would look better on you.'\n\n'I like it. Let me try it.'\n\nNikki pushed her skirt down as Deb pulled the dress over her head. For a moment all three girls were naked in front of me. I felt Wendy's hand on my penis and she began a slow stroking motion. 'I guess these girls don't mind if you watch them dressing.' She said as she brought me to a rock hard state. 'And it feels like you don't mind watching.'\n\nNikki put on the dress and adjusted it. It did look better on her. It was just a tad longer over her butt and it held her tits nicely. She stood in front of the mirror and admired herself. Then she turned and faced me.\n\n'Bend over.' Deb ordered her. Nikki did as she was told and in doing so she exposed her bare ass and cunt in the mirror. Sue and Deb and I were all watching closely. Deb reached down and ran her finger along Nikki's crack. We could all see that she was wet.\n\n'Mmm, yes this is good.' Deb purred. She held her finger up to Sue's lips. Sue stuck out her tongue and licked it clean. \n\nJust then Jan and Sally pushed their curtain open. 'Hey, what's going on out here?' Jan asked as they took in the scene before them. Sue was bending down to lick Nikki's pussy from behind in front of the mirror. Deb was still nude and she took my hand and pulled me into the room. \n\n'Wendy I haven't had a cock inside of me in over two years, but right now I just want this. Do you mind if I fuck this guy in here?'\n\nIt won't be the first time that it's happened in there.' Wendy answered. 'Mind if we watch?'\n\n'Oh yeah, I want you all to watch!'\n\nShe pushed me down onto the small bench on the wall and knelt down in front of me. I watched as she bent forward and teased my cock head with the tip of her tongue. Nikki was behind her rubbing her pussy. I could hear the squishy sounds of her wet cunt. After about a minute she stood up and then turned her back to me. Slowly she lowered herself onto my missle and all of the girls were able to see her face as she impaled herself on me. She was warm and wet and tight. I sat still as she pumped herself on my cock. Nikki got down on her knees and pressed her face into Deb's puss. I could feel her chin on my dick while she nibbled on Deb's clit. Deb was panting and heaving. I've never seen a girl get so hot and orgasmic so quickly. In less than two minutes I felt the warm wet rush of her cum bathing my dick.\n\n'Oh yeah! Oh God! Mmm I'm cumming! She cried out! 'Wendy, give me that pink thong!'\n\nWendy bent down and retrieved Deb's thong that was on the floor. She handed it to Deb. Deb pressed it into her crotch and blotted her cum as it flowed from her quim. \n\n'OK Rob, I want you to cum now! C'mon stud, give it to me.'\n\nHer words were enough to bring me to the brink. 'Oh yeah! Here it comes. Get ready baby.' I could feel my seed boiling as it shot its way up my pole and just as the first shot was firing Deb raised herself up and I popped out into her hand. She covered my dick with the silky thong and pumped me as I unloaded into the shiny satin cloth.\n\n'Oh god that is so hot!' I heard Jan saying under her breath. 'Touch me Sal. Feel how wet I am.'\n\nI looked up to see Sally reaching under Jan's dress to stroke her vaginal lips. She produced a slick digit and sucked it into her mouth. I glanced at Sue just as she was about to speak.\n\n'You know Rob, I've watched you cum many times, but this may be one of the hottest!'\n\nI was holding on to Deb's hips and I leaned forward to press my face against her back. She was sweaty and I instinctively kissed and licked the drops of sweat from her smooth soft skin. She leaned her head back and I raised up to nibble on her earlobes. 'Oh yeah, that was nice Rob. I had forgotten that you guys can feel good in there sometimes.' She stood up and turned around. I was at eye level with her pussy. Her lips were swollen and had that freshly fucked look about them. I licked her and she pulled me tightly to her belly. I pressed my tongue on her clit and felt her jerk as she had another orgasm. I caught some of her cum in my mouth and then felt the silk again as he wiped her pussy and my face with the cum soaked thong.\n\nShe stepped back and turned around to face Nikki. She pulled her close and they hugged and kissed. It was incredibly erotic to observe their passion for each other. Then Deb displayed her dominate role by holding her thong up to Nikki's mouth. She pushed against her lips and forced her to lick and taste the combined cum soaked satin. Nikki eagerly gobbled it into her mouth.\n\n'Oh God I'm dripping wet.' Said Jan as she stood there watching.\n\nSally put her hand between Jan's legs and rubbed her pussy. Then she lifted Jan's dress and pulled her panties down to the floor. Jan voluntarily stepped out of them. Sally stood up and started to lick the crotch of Jan's thong. I couldn't believe what I was watching.\n\nSue was still undressed and I watched her bend down to pick up the skirt that Nikki had taken off earlier. She put it on and checked to see how it fit. She was apparently satisfied because she turned to Nikki and said, 'I like this on me. Do you mind if I take it?'",
        "'No, of course not. It fits you better than it did on me. I think Deb wants me to wear this dress.'\n\n'Yeah I do.' Said Deb. 'I just need to decide if I want to wear the skirt I already have or if I should pick out a dress that's a little more revealing. What do you think Wendy?'\n\n'You know Deborah, I think I have the perfect dress for you. Wait while I get it.' She turned and hurried over to the dress rack. She came back with a cream colored sun dress. It looked rather plain on the hanger and I saw Deb start to scrunch up her nose at it. But she took it and tried it on. She stood in front of the mirror looking closely at how it fit her. It was pretty sheer and I could see her nipples through the lightweight fabric that covered her full breasts.\n\n'Come over here in the sunlight.' Wendy told her as she moved to the front of the store. Deb followed and stood in front of a mirror in the natural light that was pouring in from the front window. We all followed and stood behind her. In the light the gauze fabric was totally transparent and we could see every inch of Deb's hot body under the dress. The crack of her ass was clear as it could be, and in the mirror I could see how the front of the dress hugged her belly and her pelvis. The space between the top of her legs was quite visible and as she moved I could see her mound and the folds that surrounded her clit as it protruded from its hood. \n\n'Oh yeah, I see what you mean Wendy. I'll wear this.'\n\nSue was standing there topless, holding her thin tank top. I noticed a man walking by the front window and he caught a glimpse of Sue. He immediately stopped and stared. He took in the whole crowd of us standing there but remained focused on Sue in her semi naked state. \n\n'Sue,' I said as I nodded toward the front window.\n\nSue's eyes darted that way and she saw the guy staring but she didn't react. Then she stepped closer and into an area where the guy had an even better view and turned away from him. 'Wendy, I'm going to take this skirt, but I need to find the price tag and cut it off.' She said as she unbuttoned it and pushed it down her legs, effectively mooning the guy at the window. I saw his eyes widen as he got a great shot of her puffy pussy below her puckered asshole. \n\nWendy walked over to help her and caught on. 'You know you're being watched, don't you.' She said quietly as she took the skirt and found the various tags and labels that needed to be removed. Sue nodded. 'Don't worry. He's a regular passerby. He gets a show like this every so often, but he never comes in. And he won't bother you when you all leave either. But he'll have something new to jack off about when he gets home tonight!'\n\nThey laughed together. That knowledge emboldened Sue and she began to move about, still not acknowledging his presence, but pretending to continue her shopping in the nude. The rest of us were quietly watching the whole scene. Wendy had gone over to her sales counter to remove the labels from the skirt. She laid it on the counter and put the tags beside it. Then she called out to us. 'Who else has tags that need to be clipped?' The other girls were beginning to catch on to Wendy's game. Deb stepped away from the mirror and went over to where Sue was standing. She made a show out of holding her skirt out to her sides and displaying herself for Sue and the watcher's gaze. 'Sue, do like this on me? Do you think I should take it?'\n\n'Oh yes I do. I love the way it flows on you!'\n\n'OK, I'll get it then.' Deb said as she removed the dress and stood naked holding it next to Sue. She hugged Sue and gave her a big kiss on her mouth. 'I really do value and appreciate your opinion.' Then she turned and took the dress over to Wendy at the desk. The guy in the window just kept on watching. Deb made her way back to the dressing room and retrieved the clothes she had worn in. As she paraded herself back up to where I was standing she took her crumpled up cum filled thong and shoved it back down into my pants. 'Take care of this for me. We can mess it up some more later on.'\n\nI felt the cold wet cum on my skin combined with the soft touch of Deb's hand and the feeling was so erotic and unforgettable. \n\nDeb went back over to Wendy and got her dress back and took her time about putting it back on. Sally stepped over to me and said, 'Rob I need your help here.'\n\n'Sure Sally what is it?'\n\nShe raised her skirt and exposed her thong panty. I guess she had put it back on in the dressing room. 'Everyone else is sporting a bare look underneath so will you help me take these off?'\n\n'I'd be glad to!' I said as I knelt in front of her and pulled her thong down her slender legs and she stepped out of them.\n\n'Am I wet down there?'\n\nI looked closer at her honeypot and indeed it was slick with cum. 'Lick it for me.' I rubbed my tongue in her crack and she pulled my face to her mons. I began to eat her in earnest and in a minute she was shaking with pre-orgasmic delight. I held her tight little ass cheeks and kept her from falling while she flooded my face with her love juice.\n\n'Oh yeah, that's it stud. Mmm, you know where I like it!'\n\nJan had come over and was standing next to us. 'God Rob, you're going to be worn out by the end of the day. I hope we don't all kill you with sex. If I buy this dress will you do that for me later on?'\n\nI looked up at her from my knees. In my position I could just see her bare cunt lips under the hem of her dress. 'That sure fits you right Sis. Yeah, I'll be happy to poke my head under your dress, anytime you want!'\n\n'OK, that settles it. I'll take it.' She turned and walked over to the sales desk. Wendy had heard enough to know what was happening and she told Jan to take off the dress. \n\n'I'll remove the tags while you go back and get your jeans and top.' Jan glanced over at the window where the guy was still watching Sue and Deb who had joined her again. She took off the dress slowly and somewhat shyly and then walked back to the dressing room. She returned to the desk with her clothes and the rest of Nikki's things. 'Put those down there, and I'll wrap them up for you.' Wendy told her.\n\nMeanwhile Deb had come back over to where Nikki was standing at the desk. 'Take off your dress and let Wendy clip the tags.' She ordered Nikki. Nikki complied and handed the dress to Wendy. 'Now come over here. There's something I have to show you.' She led Nikki over near the window to where was Sue was still standing and pretending not to notice the guy.\n\n'Is Sue every bit as pretty and sexy as you thought she was all these years? Deb asked. \n\n'Oh yeah, even prettier.'\n\n'Show her how excited you are to finally be with her. Give her a real hug and a kiss.'\n\nI watched while Deb ordered Nikki to show her genuine affection for Sue under the watchful eye of the fortunate voyeur.\n\n'Feel her nipples. Look how hard they are. I bet her pussy is wet too. Why don't you taste it?'\n\nSlowly Nikki complied and did everything that Deb asked of her. Just as they were both getting hotter and ready to take it on their own, Deb stopped them.\n\n'Now turn and wave to the man in the window!'\n\nSue and Nikki both turned and looked him straight in the eye and smiled and waved at him. The shocked look on his face at the obvious discovery was priceless. He stood there stunned for a moment and then dropped his head in shame. He quickly turned and hustled off down the street.\n\n'Oh man that was too funny!' I blurted out. The girls were all laughing and giggling. It really was a hoot. We all gathered at the sales desk and the ladies began to redress themselves in their new things. \n\nWendy was sorting the tags and wondering if she should write separate sales checks. I anticipated her quandary and announced. 'This has been so much fun for me, I want it to be my treat!' I pulled out my wallet and gave Wendy three one hundred dollar bills. 'Will that be enough?'\n\n'I think so. Let me add it all up.'\n\nSally moved over beside me and pulled on my waistband. 'Will you take care of these for us?' she asked as she stuffed hers and Jan's thongs down my pants. 'I hope you have room left in there.'\n\nWhen she removed her hand I looked down to see a slight bulge that I realized could still pass for an enhanced package. 'Don't forget where you put them.' I told her. 'You need to come back and get them later.'\n\nThe girls all thanked me, and Wendy thanked us all as she gave me my change. We kissed her good bye and walked out onto the street. Immediately we all noticed the heads turning to look at us, especially the men. They even caught my eye as they realized that I was the only guy with these five hot women. I just grinned.\n\nJan grabbed my arm and clung to me. 'Oh my god Rob, I feel so naked!'\n\n'Don't worry,' I calmed her, 'you look fantastic! Half the men on this sidewalk would give anything to make love to you!'\n\nI'm not sure if that was really the best thing to say, but she relaxed her grip on my arm and we began walking back to the garage. Two guys actually followed us all the way to the stairwell and stood at the bottom of the steps while we walked up the three flights to our level. I think the look that I gave them as we started up told them that they had gotten close enough. They were content to stand there and look up the skirts and dresses as we ascended the stairway.\n\nOnce we got back to the car everyone relaxed and the chatter resumed. The girls were all excited and amazed at how turned on they were after the adventure. I knew that whenever we resumed our sex play, that we would all be eager and ready and that our pleasures and orgasms would be heightened by this experience. It had truly been a fantasy fulfilled. \n\nTo be continued... "
    ],
    "authorname": "Rob in AZ",
    "tags": [
        "niagara falls"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/traveling-east-ch-02"
}