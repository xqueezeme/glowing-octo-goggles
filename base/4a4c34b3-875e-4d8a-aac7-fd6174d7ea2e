{
    "title": "Two Hundred Dollars Ch. 26",
    "pages": [
        "34 Dollars \n\nBailey rushed into Kent's room on Thursday evening. \n\n\"I don't have much time,\" she said, \"I've gotta head out for a thing.\" \n\n\"You don't have to do any if you don't want,\" Kent reminded her. \n\nShe waved him off and made two marks on the white board. \n\n\"Over top, okay?\" she barely had enough air to breathe, looking at him with wide-eyed pleading. \n\n\"Sure, whatever,\" Kent said. \"How you want it?\" \n\nBailey took the stool out and put it in front of his bed. She climbed up on it and bent over until her breasts touched the bed. \n\n\"Quick,\" she begged. \"Before Carson gets back or I have to leave.\" \n\n\"Alright, alright,\" Kent acquiesced. \n\nWhat's her hurry, today? Why even bother? \n\nStill, she owed him money, and she'd chosen this as her method of payment, so he felt like he had to get his money's worth. \n\nToo bad there's no inspection. She's gotta look pretty red everywhere. \n\nNot knowing which way to go, he started slapping her denim-clad rear, spreading out his assault as evenly as possible. \n\nBreathlessly, Bailey gasped out the numbers from one to twenty, her voice slowly rising in pitch until she barely squeaked out, \"Twenty\" at the top of his hearing range. \n\nShe stood back up and turned to him, stepping off the stool, and said, \"Thank you.\" \n\n\"Thank you, too?\" Kent replied, peering at her carefully. \n\n\"That was good,\" she clarified. \"Keep the count rolling, right?\" \n\n\"Right,\" Kent agreed. \n\n\"Okay, I gotta head out,\" Bailey blurted and whisked out of the room. \n\nSeconds later, she'd gone out the door into the cold November air. \n\nThat was weird. Even for us. \n\nKent sat for several minutes, looking back and forth between the white board and the doorway through which Bailey had exited. Did she feel obliged to get spanked every day? If so, why only two? If her ass felt too sore, why even do two? \n\nHe shrugged and returned to his work. \n\n============================= \n\nFriday afternoon, Kent eyed the same board while he tried to sort out all the emotions he felt every time he caught a glimpse of the number in the corner. \n\nJust thirty two bucks left, he shook his head as a pang of something struck his heart. What is that? \n\nRegret factored into it, certainly. The original two hundred dollars that had started this whole journey had seemed inexhaustible. Kent had thought he'd have months of time to try every damned way of spanking Bailey throughout their entire two semesters of cohabitation. \n\nBut Bailey had risen to the challenge in far too many ways and she looked to be plowing through the last of her debt ten dollars at a time. \n\nI can't even slow her down, he realized. I don't have the right, even if I wanted to. \n\nHe wasn't even sure he wanted to moderate her pace. His own desire for speed, its roots originating in some place well above a base lust to redden her cheeks, brought the most confusion to the shock waves spiking in his chest. \n\nShe wants to get through it, and maybe so do I. \n\nBailey hadn't come by today, even though she usually managed to find time on a Friday afternoon, and Kent breathed with relief. It gave him a tiny bit of space in which to think. \n\nEven if I don't get much of a choice, I should still know what I want, he declared firmly. Do I want to rush through this? Get past this debt to whatever lies beyond? \n\nKent's eyes widened and he glared at the floor. \n\nWhatever lies beyond? He noted the gap in his planning. I need some of that spice from Dune. The stuff that turns your eyes to blue-on-blue and lets you see the future. \n\nInstead of the future, Kent saw a wall and had no idea what happened once he climbed over, or dug under, or smashed through it. Shaking his head, he thought back to his last encounter with Bailey. He'd tried his tongue, knowing the risk, and it had almost worked. \n\nI think I rushed it, he frowned. That's what Bailey said. I don't think she said it just to be nice. I probably could have made her come if I'd been more careful. \n\nKent resolved to take greater care in his next oral adventure, assuming Bailey wanted to try again, and then packed up to head off for his late lab. \n\n============================= \n\nBailey grimaced as she entered the apartment. She'd dawdled at school all afternoon, studying unnecessarily in the library on a Friday, so she wouldn't run into Kent. \n\nShe didn't have any real need to hide from him, per se. But if she saw him again, she knew she'd feel a compulsion to make a few marks on the white board, and that meant more spankings. \n\nI'm sore already and completely red, she moved carefully down the stairs in the dark. I could do one dollar, two if I'm lucky. And what's the point of that? \n\nKnowing she wanted to move things along, Bailey wanted to pay ten dollars at a time. Once down the stairs, she suppressed a shiver and peeked in Kent's room. With the handover of the last picture from the bathroom and the twenty spankings on Thursday, he'd changed the total to thirty two dollars. \n\nWhat's the faster way to drop that? Should I let myself heal a bit and do big chunks at a time? Bailey wondered. Besides, Laura should be back tomorrow. \n\nIt made sense to take a break if that sped things up in the long term. If she took efficiency as her goal, just like Kent had said, she should make the best use of her resources.. Taking spankings in exchange for money counted as wisdom from her perspective and their arrangement was 'good' in that sense. But if she saw Kent, Bailey knew she'd feel the urge to take a few more dollars off the board, just like she had on Thursday, and work her way through her debt. In fact, just imagining Kent coming down the stairs in a few hours started the tingling and warmth between her legs, setting her stomach churning with anxiety. \n\nI need another option. \n\n============================= \n\nArriving home late, in the cold and dark, Kent came down the stairs with fresh snowflakes covering the shoulders of his jacket. Looking past his own open bedroom door, he saw that Bailey had left her bedroom door open as well. After getting rid of his winter kit while making as little mess as possible, he adjourned to his room and turned on his computer, knowing very well that Bailey would come if she wanted. \n\nShould I say 'hi' or something? Kent hesitated. I don't want to make it sound like I'm expecting something from her. But people can just say, 'hi', can't they? \n\nDeciding too much time had passed for any greeting to sound natural, Kent called up his favourite MMO and prepared to set up a solo mission. \n\n\"Hey, Kent.\" \n\nDamn, that was soft footed, Kent looked down to see Bailey's white socks flowing gently over his bedroom's carpet. \n\n\"What's up?\" \n\nDespite her grace, her movement to lie on his bed looked awkward. \n\nI expected her to make a mark on the board, he realized. Is Carson home? I didn't even check. \n\nBailey laid on her stomach, more or less facing him with her chin propped up on her palms. \n\n\"Yes?\" Kent prodded again. \n\nShe took a deep breath and he prepared himself to negotiate a new proposal. \n\nWhat's she into now? he wondered, his eyes sliding along her body toward her denim jeans. \n\n\"Kent,\" Bailey turned her head and her eyes to the side. \"Is there anything else you'd like?\" \n\n\"Anything I'd like?\" he tried not to stammer. \n\n\"To do,\" she prodded. \"Or see.\" \n\n\"Instead of spanking you?\" he clarified. \n\n\"Obvi,\" Bailey couldn't roll her eyes because she'd fixed her eyes on the ceiling to avoid his gaze. \n\n\"Your butt too sore?\" \n\n\"Basically,\" she replied, deadpan. \n\nNow her eyes did meet his, full of challenge. \n\nOh, crap, Kent tried to keep the fear out of his eyes. Alright, what are her rules? \n\n\"You're asking me,\" Kent drawled out. \"What sort of thing I would pay for, that isn't spanking.\" \n\n\"Right,\" Bailey tilted her head slightly. \n\nFeels like walking a tightrope here, Kent noted. I can't say a hand job or a blow job. That's right out. I can already tell. \n\nHis eyes wandered over her body, looking down her shirt. \n\nShe's got a thing about her boobs, he remembered, but I really don't know what to do there. Bailey's never even remotely suggested she's into that. I'd rather work my way up through whipped cream before we try crazy stuff with her tits. \n\nWith her ass, things had broken easily for him because she had started with spanking as the opening offer. \n\nBesides, would I pay to suck on her nipples? Or pinch them? I dunno. \n\nKent shook it off. If her butt was offline for now and he didn't know what kind of boob stuff she went for, what body part did that leave him? \n\nHis eyes lit up. \n\n\"Can you make yourself come?\" \n\n\"Pardon?\" Bailey jolted out of some reverie. \n\n\"Do you, y'know, masturbate?\" \n\n\"I, uh,\" she stammered. Her eyes darted around the room helplessly. \"Well, yeah. Doesn't everybody?\" \n\n\"I assumed so,\" Kent replied. \"Just thought I'd check.\" \n\n\"So?\" \n\n\"So,\" he went on. \"I want to watch you, naked, while you, y'know, take care of yourself.\" \n\n\"Masturbate?\" \n\nKent nodded, watching Bailey's thighs nervously twitching under the tight grip of her jeans. \n\n\"I have to come?\" \n\nHoly shit, is she actually going to do it? \n\n\"Yeah, no faking.\" \n\nBailey chewed on her cheek, her eyes coming in and out of focus. \n\n\"While you're watching?\" she intoned. \"For you?\" \n\n\"That's right.\" \n\n\"Okay,\" she whispered. \"How much?\" \n\n\"Five bucks,\" he shrugged. \n\n\"Ten.\" \n\n\"Seven and a half.\" \n\n\"Eight,\" Bailey speared him with her eyes. \"And I need to keep my panties on.\" \n\n\"Have to?\" \n\n\"It's how I do it,\" she continued to stare straight at Kent. \n\n\"Alright,\" Kent held his hands up in surrender. \n\nQuietly, her face calm and serene, Bailey stood up out of his bed and walked past him to the white board. The marker thumped against the board, over and over. \n\n\"You made ten marks?\" he pointed out when she'd finished. \n\n\"Oh,\" Bailey inhaled deeply, \"you'll need to do a few spankings, too. It'll be weird if you don't.\" \n\n\"Weirder?\" \n\n\"Weirder,\" she agreed and held out her hand. \"Come on.\" \n\n\"Where we going?\" \n\n\"My room, obvi.\" \n\nKent allowed himself to be led by the soft, tenuous grip of her fingertips upon his. Swallowing nervously, he felt his heartbeat pick up. \n\nI'm really going to see what she does? he realized. We know what Laura does, after all. What's the big deal? \n\nKent knew the difference: they'd never watched Laura pleasure herself. \n\nBailey closed the door and looked at him. \n\n\"This will be a bit more fair,\" she said, \"if we're both in our underwear?\" \n\n\"All right with me, I guess.\" \n\nShe grabbed the hem of his shirt and quickly lifted it, forcing him to raise his arms. \n\n\"Good,\" she nodded, and raised her arms while sticking her chest out at him. \n\nThere's no bra under her shirt. I didn't even notice until now. \n\nHe removed her t-shirt, looking down at her little breasts and their cold hardened nipples. \n\nWinter has its perks. \n\nBailey had already set to work on his jeans before he even finished the thought. She knelt on the ground and managed to take his socks off at the same time. As soon as she stood, Kent took a knee and worked on the button of Bailey's jeans. \n\nWhether she'd expected a spanking or not, she'd worn the white panties with the transparent, lacy front. \n\nWhen Kent rose, Bailey stood before him in her panties and her socks. \n\n\"My socks?\" she wondered aloud. \n\n\"I like them,\" he smiled. \n\nBailey shrugged, \"All right. Let the show begin.\" \n\nThere's a chance I could learn something here, Kent realized, recalling his oral over stimulation. Maybe I'll see what she likes. \n\nShe held her palms together thoughtfully, her fingers touching her chin as she turned her back on him, looking at her bed. \n\n\"I suppose you need to be able to see, at least a little,\" she spoke softly. \"And spank me.\" \n\nHaving made her decision, she climbed up on the bed on her hands and knees, then turned to his left to present herself in profile. She reached for the head of the bed and pushed aside one of her pillows to reveal a firmer, stiffer one she'd hidden under the covers. Kent watched in amusement as she fit this between her thighs, the corner pressing against her panties. \n\n\"You need to help a little,\" Bailey prodded, her hips rotating gently to rub the pillow against her pussy. \n\n\"This is one of those modern, interactive productions, then?\" \n\n\"Uh-huh,\" she patted the mattress next to her and Kent took a seat, putting his hand on her right cheek. \n\nHe rubbed slow circles on her bright pink cheeks, listening carefully for the moans of appreciation that might guide him. \n\n\"Mm-hm,\" Bailey nodded, \"Like that.\" \n\nShe's really going to come, he realized, listening as her breathing turned to panting. \n\n\"You should, um,\" Bailey gulped and took a breath. \"You can start, y'know, the spanking.\" \n\nShe must have been turned on before she even came into my room, Kent realized. She didn't even know what I was going to ask her to do. \n\n\"Seven?\" \n\n\"Yeah, seven,\" she blurted back at him. \n\nHe delivered the first spank the moment she agreed, hitting her right cheek low and hard. \n\n\"Oh!\" Bailey cried out. \"One.\" \n\nKent struck her left cheek next. \n\n\"Two!\" she called, moaning out her next plea, \"Faster, Kent.\" \n\nBailey doesn't want any spankings left over after she comes, and she'd going to come very, very soon. \n\nKent started hammering on her cheeks, back and forth, spreading his strikes around her pink flesh. \n\n\"Three! Four! Five! Six!\" \n\nHe waited, then, watching as she dropped her shoulders to the bed and used her hands to force the pillow into right up into her lips. From his vantage, he could see the way the corner of the pillow rubbed along her panties and then pushed its edge into her vagina as she drove her hips down on it. \n\nOver and over again, he watched the white fabric of her underwear dimpling into her body. \n\nWow, she's just barely penetrating herself with it. \n\nBailey moaned softly, her pitch rising, and Kent raised his hand off her cheeks. \n\nThree last grunts issued as her cheeks clenched and she held her breath. \n\nRight now. \n\nKent laid his seventh spanking across both her cheeks, a delightful echo reverberating off the walls of her bedroom as Bailey screeched out her orgasm and fell shivering onto her side, her reddened ass cheeks facing away from him. \n\nHer hands shook as her bleary eyes reached out for his. \n\n\"Seven,\" she gasped out. \"Seven.\" \n\nKent laid his hand on her hip and gently ran his fingertips over her thigh as Bailey curled her arms up in front of her chest. \n\n\"So?\" she asked, after some time had passed. \n\n\"So?\" he wondered what she meant. \n\n\"Was that worth it?\" Bailey clarified. \n\n\"Not what I expected,\" Kent drawled as he smiled, \"But yeah, worth it.\" \n\nBailey perked up, \"What were you expecting?\" \n\nAll of the pictures in his head, Kent suddenly realized, had come from watching porn. On the Internet, women performed for a camera, whereas he had asked Bailey to perform for herself. That made him pose a question. \n\n\"You probably don't even have to be naked, do you?\" \n\n\"Not really,\" Bailey shook her head. \"I probably couldn't wear jeans, though. Never bothered to try.\" \n\nRecalling the way the pillow had poked at her entrance, Kent understood that. \n\n\"But you didn't answer,\" she pointed out, spearing him with her eyes again. \n\n\"No, I didn't.\" \n\n\"What were you expecting?\" \n\n\"Not sure,\" Kent shrugged. \"Do you ever use your fingers?\" \n\n\"Once or twice,\" Bailey looked aside. \"But I started with a pillow. When I was younger, I mean. I'm more comfortable with it.\" \n\nShe rolled over on her back, relaxing beside him. \n\n\"Is that what you thought I'd do?\" she mocked him as she laid her right hand over her panties, \"finger myself while you watched?\" \n\nKent shrugged, putting a hand on her bare thigh, \"Possibly.\" \n\n\"Like this?\" Bailey pushed her fingers into her panties, the fabric delving between her lips. \n\nHer eyes closed as she did this, and she exhaled hard as he stroked the inside of her thigh. \n\nIs she going to do it again? \n\n\"It feels, different,\" Bailey spoke slowly, stroking herself, \"I did it once, this way.\" \n\n\"When?\" \n\nShe continued pushing her middle finger into her lips for a while, her back arching slightly, before she changed her movement. Kent watched avidly as Bailey started a gentle rotating motion over her clitoris. \n\n\"After you spanked me, one time,\" Bailey admitted, \"Can't remember which time. I think I was looking at pictures.\" \n\n\"Pictures of yourself?\" \n\nBailey nodded, not meeting his eyes. He squeezed her leg with one hand while running the other over her stretched out abdominal muscles. \n\n\"Ever put a finger inside?\" he wondered aloud, looking at the way her panties shifted \n\n\"No,\" she whispered, shaking her head frantically. \"Could never. Do that to myself.\" \n\n\"Oh,\" Kent whispered back. \n\nBailey continued to stroke herself with her right hand as Kent rubbed the rest of her body, working upwards until he could make little circles around her nipples. She murmured her approval and her left hand wandered down her body to push her panties aside. \n\nKent hadn't thought his erection could get any harder, but it somehow managed to swell painfully against his shorts as she exposed herself to him. \n\nIf she even touched me right now, I'd come all over her hand. \n\n\"You,\" she whispered, not an accusation but some other imperative. \n\n\"Me?\" \n\nBailey opened her blurry eyes and a moment and then ticked her chin towards her crotch, repeating, \"You.\" \n\nKent laid his right hand over top of hers, three fingertips touching her vulva and the soft hair covering it. He felt her hand, underneath his, working her clitoris. \n\n\"Go ahead,\" she whispered. \n\n\"I, um?\" \n\n\"Just one finger.\" \n\nOoooh! \n\nBailey's lips gave way easily as his middle finger delved wetly between their softened masses and he found her entrance. She moaned, the speed of her stroking speeding up, and Kent pushed his middle finger inward, as slowly as he could. Kent's finger slipped in as far as the first knuckle before the muscles of her vagina constricted around it. \n\nDeep enough, then? \n\nIt seemed so, for Bailey began moaning more loudly and frantically hammered at her clit. Her back arched to its maximum as her thighs clamped around his hand. \n\n\"Yes!\" she screeched out, and Kent properly felt her orgasm clenching and squeezing at his finger. \n\nNo question about the authenticity of this one. \n\nWhen Bailey relaxed again and spread her legs, Kent carefully withdrew his finger, causing her exhale softly with a near whistling sound. \n\n\"Is that new?\" he asked. \n\n\"Something inside me?\" she replied. \"Yeah.\" \n\nBailey turned to glare at him. \n\n\"What?\" \n\n\"Your turn.\" \n\n============================= \n\nI'm going to keep my brain turned on this time, Bailey told herself. Not going to miss a thing. \n\n\"My, uh, turn?\" Kent replied. \n\nBailey jerked a nod at him, \"I came twice, didn't I?\" \n\n\"Yeah,\" Kent trailed off. \n\n\"For you?\" \n\n\"Yeah.\" \n\n\"And you only paid for one,\" she pointed out. \n\n\"So?\" \n\n\"So,\" Bailey rolled her eyes. \"You show me.\" \n\nShe saw him get it finally, and noted the nervous gulp. \n\n\"You're hard,\" she tilted her head playfully. \"It should be easy.\" ",
        "\"True,\" Kent admitted, \"But...\" \n\n\"What?\" \n\n\"It's not much different from what you and Laura do for me,\" he tried to shrug her off. \n\n\"Still,\" Bailey demanded, \"I wanna see you masturbate. What do you do?\" \n\nKent inhaled and looked around the room, dodging her gaze. \n\n\"Well? Tell me?\" \n\n\"Look,\" he explained, \"I usually just come in my shorts.\" \n\n\"Doesn't it stick to you, then?\" \n\n\"No, no,\" Kent said. \"Not the shorts I'm wearing. I'll use an extra pair, and I come in those. I sort of, y'know, wrap it around the end of my cock.\" \n\n\"So, show me with those,\" Bailey ticked her chin at the pair he wore. \n\n\"Alright,\" he surrendered and stood up next to the bed so he could pull his shorts down. \n\nBailey watched, carefully taking note of the monumental difference between his fingertip and the swollen head of his erection. \n\n\"Okay,\" she said, \"Now what?\" \n\n\"Hm,\" Kent looked around. \"I'm usually sitting, I guess.\" \n\nBailey moved over to give him half the bed and he sat cross-legged, facing her. Next, he wrapped his boxer shorts around his cock, holding them in place with his left hand while the right went underneath to grab the base of his erection. \n\nHuh. Well that looks easy enough. \n\n\"Go ahead,\" she prodded. \n\n\"Huh?\" \n\n\"Come.\" \n\n\"Oh, right.\" \n\nC'mon, Kent. How hard can this be for us at this point? \n\nWith an anxious gulp, he started stroking himself. Bailey imagined she could feel his heart racing as his chest heaved with arousal. \n\nLook at those muscles. \n\nShe glanced down, but found the obstacle of the shorts interfered with her viewing. \n\n\"I can't see anything,\" she mewed plaintively. \n\n\"Well,\" Kent paused with exaggerated difficulty, \"I have to do it this way, unless you want a mess all over your bed.\" \n\n\"You saw me,\" Bailey glared with wide eyes. \"I should get to see you.\" \n\n\"So?\" Kent waved a hand at the general area of bed and floor at which his erection aimed. \n\n\"Fine,\" she sighed and patted her panties, \"Get up here. I want to see you come.\" \n\n\"Whuh?\" \n\nHe must be right on the edge. He's not even focusing. \n\nBailey slid over to him on the bed, putting one leg on either side of him. \n\n\"Get up on your knees,\" she said. \"And get rid of the shorts.\" \n\nNow he gets it, Bailey smiled as Kent knelt between her legs, his erection hovering over her panties, and set his shorts aside. \n\n\"Gonna be messy,\" he warned. \n\n\"Just on me,\" Bailey shrugged, \"stay off my sheets and carpet.\" \n\nKent laughed. \n\n\"Now come for me.\" \n\nShe saw his eyes roll back in his head as he jerked on his cock with reckless abandon. \n\nI had no idea he could take it that hard, Bailey's eyes bugged out. Laura and I have been going way, way too easy on him. \n\nBailed tried to imagine, if Kent truly needed that kind of force, what it would feel like to have him inside her. She shivered anxiously, putting aside the image of that swollen rod pushing its way into her body. \n\nCan't do that. I owe him money. Wrong, wrong, wrong. \n\n\"Oh, Bai,\" he muttered. \n\n\"Come on,\" she prodded, amazed at the savage way he abused his body. \n\nShe had barely finished the last word when Kent's hips locked forward, his pelvis thumping against her thighs as his hand jerked down hard to base of his erection. A fraction of a second later, a stream of semen launched out of him, over her belly, past her face, hitting the bed sheets somewhere behind her. \n\nBailey let out a screech of fright, feeling it go by, and Kent opened his eyes, sheer panic blazing out of them, as he jerked on his cock again. Bailey squinted, turning her head aside as another, lesser blast sallied forth hitting her neck and chin, going up the left side of her face.. \n\nHoly fuck, what have I gotten into? \n\nFor a moment, Bailey felt thankful the third volley missed her face, tracing a line from her left breast, possibly up into her hair. \n\nThat's not better than the face, really. \n\nThe greater part of his energy having dissipated, the remainder of his ejaculation spent itself in short bursts over her lower ribs and stomach, culminating in a tiny lake in her navel. \n\n\"Fuck, Kent,\" she cursed. \"That was, well, a lot.\" \n\n\"Yeah,\" he breathed, sitting back on his ankles. \n\n\"Hey!\", she insisted, \"Don't drip it down!\" \n\n\"Oh, right,\" Kent got back up on his hands and knees, keeping his dwindling member over her stomach. \n\nBailey reached out and touched it, squeezing it gently to milk out the last few drops onto her stomach. \n\n\"Is it oversensitive?\" \n\nKent jogged his head back and forth, \"Maybe a little.\" \n\nWith their noses less than a handspan apart, Kent surveyed his work with an appraising eye. \n\nYet another kind of canvas, I suppose. \n\n\"Wow, I got you,\" he remarked, meaning her cheek and neck. \n\n\"Yeah, jackass.\" \n\n\"It's what you asked for,\" he pointed out. \"Trying to hit you instead of the sheets.\" \n\n\"Uh-huh,\" Bailey cast her eyes toward her nightstand. \"Can you reach the tissues?\" \n\n\"Yeah, sure.\" \n\nHe handed the box of tissue to her and rolled over on his side, making sure to lay the head of his cock against her ribs. \n\n\"Did you get the sheets behind me?\" she asked, wiping off her left cheek and neck. \n\n\"No, just your hair.\" \n\n\"Shit.\" \n\n\"Sorry,\" he shrugged. \n\n\"No, it's alright,\" she said. \"Like you said. It's what I told you.\" \n\nGod, what a giant pool in my belly button! \n\nKent put his shorts back on, the better to contain any last drips that might issue forth, and propped himself on his elbow beside her. Once she'd discarded the last of the semen soaked tissues, she turned to look at him. \n\n\"That was different,\" she said. \n\n\"Yeah.\" \n\n\"Why'd you ask for that?\" \n\n\"To watch you make yourself come?\" he asked. \n\n\"Uh-huh.\" \n\nBailey waited while Kent composed his reply, wondering if he stalled in order to make up a lie or if he really had trouble understanding his own motivations. \n\n\"You wanted something other than a spanking,\" he peered into her eyes. \"And then I thought of all that stripper-talk with Laura. And then, well.\" \n\n\"Well what?\" \n\n\"I just thought about you, you know, stripping for me,\" Kent went on, \"And I thought about what strippers do.\" \n\n\"Strippers masturbate?\" Bailey looked at Kent. \"Really?\" \n\n\"Not really,\" Kent said. \"They pretend to. I wanted you to see you do it for real. Figured, maybe, I could see what works for you.\" \n\nOh. \n\n\"Plus, it's a huge a turn on,\" Kent admitted. \"I mean, watching you hammer that pillow.\" \n\nBailey laughed, then, and took a deep breath. She turned her eyes to the ceiling and flattened her expression. \n\n\"Laura should be back in tomorrow,\" Bailey tried hard to keep her voice neutral. \n\n\"How do you feel about that?\" Kent cut to the heart of the matter mercilessly. \n\n\"I really don't know,\" Bailey said. \"She's my friend, and it's, well.\" \n\nShe paused, collecting her feeling. \n\n\"It's fun when she's with us, you know?\" \n\n\"Oh, I know,\" Kent whooshed out a breath. \n\nWe're not going to talk about what happens in a few days when the debt runs out, are we? Bailey realized. We can't. Neither of us can form the words. We're going to run headlong into it. And then what? \n\n============================= \n\n\"Where are we going?\" Bailey insisted. \n\n\"Science Lounge,\" Laura dragged Bailey along at a rush. \n\n\"How do you even know where that is?\" \n\n\"Oh, please,\" Laura replied, still pulling on Bailey's forearm, \"I've been here as long as you have.\" \n\nShe'd followed Laura on an 'evening walk' onto campus, without really understanding her friend's purpose. The conversation had drifted around, hitting the subject of Kent and their various spanking positions enough times that Bailey had thought the whole purpose of their wandering trek lay in Laura's need to know where she stood in their trio. \n\nBailey had told Laura, after much prodding and begging, about how she'd paid off the last ten dollars. That had elicited a little whimper, but Laura hadn't broached the subject of her own status. \n\nThey reached the Science students' lounge at last and Laura peeked in. \n\n\"See?\" Laura stuck out her tongue. \"Nobody here!\" \n\n\"Right.\" \n\n\"Science students never lounge around,\" Laura explained. \"Engineers, yes. Artists, yes. But very few Science people, and never on a weekend.\" \n\n\"So what?\" \n\n\"Kent has to hand in his lab, right?\" Laura went on. \"He complains about it every Friday, having to come in on Saturday to hand it in?\" \n\nBailey felt her eyes widen, \"And you want to do it here?\" \n\n\"He'll come right by the building,\" Laura said. \"Just text him.\" \n\n\"But we didn't make any marks on the white board,\" Bailey pointed out. \n\n\"Pfeh,\" Laura waved her off, \"Pull down your pants and he'll forget about it. We can slip home ahead of him and make the marks then.\" \n\nLaura has a point, Bailey acknowledged. The moment he sees a naked butt, he'll be on board. Besides, with only twenty two dollars left, we gotta fit in the weird stuff before it's too late. \n\n\"What about cameras?\" \n\n\"Nothing in the lounge,\" Laura said. \"I checked. And there's a long hallway, so one of us can be the lookout.\" \n\n\"We'll take turns?\" \n\nLaura nodded. \n\n\"Okay,\" Bailey inhaled and pulled out her phone. \n\n============================= \n\nKent, shivering as he reached the edge of campus on his way home, heard his phone bink at him. He pulled it out and coded in his PIN to see a message from Bailey. \n\n\"You on campus?\" \n\n\"Just leaving,\" he sent back. \n\nIt binked again, almost instantly. \n\n\"Sci Lounge?\" \n\n\"What about it?\" \n\n\"Come here.\" \n\nShe wants to do it on campus again? \n\n\"Rly?\" \n\n\"Laura's idea.\" \n\nThis last message had several smiley faces appended. \n\n\"kk. 5 min.\" \n\n\"kk.\" \n\n============================= \n\nWhen Kent reached the second floor of the Natural Sciences building, he spotted Bailey and Laura hanging out casually at the intersection of the main hallway with the narrower passage leading to the lounge. \n\nHe raised his eyebrows at them, attempting to convey his disbelief. Laura squinted and nodded at him with confidence while Bailey raised an eyebrow and shrugged. \n\nAt least we can tell who's driving this one, Kent thought. \n\n\"You have a plan?\" he asked when he closed on them. \n\n\"Four dollars,\" Laura said. \"We'll take turns being the lookout.\" \n\n\"You really want to do this?\" Kent asked, his eyes going back and forth between them. \n\n\"Look,\" Laura cut in. \"You spanked Bailey in the library, and outside in that park. I want a turn, alright?\" \n\n\"Alright,\" Kent waved his hands. \"You made four marks on the board?\" \n\n\"Yeah, yeah,\" Laura waved a hand indifferently before turning to Bailey. \"Who goes first?\" \n\n\"This is your party,\" Bailey pointed a finger down the long hallway. \"Off you go.\" \n\nLaura grabbed Kent by the arm and half-ran down to the lounge with him in tow. She got around the corner and out of view of the hallway and Kent got a look at the room. He saw several large tables, fit for eight to ten students to sit around, as well as a few aging couches. Laura wanted no part of the furniture, however. \n\n\"How you want 'em?\" Kent asked. \"Ten over top?\" \n\n\"Didn't Bailey do them bare?\" \n\n\"I think so, yeah,\" Kent said. \"But we're in a school building, during the day, not a library at night.\" \n\n\"Alright, then,\" Laura defiantly turned her back on him and undid her pants. \n\nA moment later, he had the surreal experience of seeing her bare ass cheeks exposed to him in the middle of a school lounge. Laura put her hands on her knees and stuck her butt out at him. \n\n\"Four spankings,\" she insisted. \"Hurry!\" \n\nHer ass, Kent noted, had healed completely, showing not a single spot of red or pink anywhere. But time mattered here. Someone could come along at any second. \n\nPutting his left hand on the small of her back, he started swatting at the lower part of her right cheek as fast and hard as he could. \n\n\"One!\" she whispered frantically. \"Two! Three! Four! Ooh!\" \n\nLaura pulled her pants back up and faced him again, her lips pressed together as she did her pants back up. \n\n\"Okay, Bailey's turn.\" \n\n\"Aren't you doing two dollars each?\" Kent wondered. \n\n\"Yeah,\" Laura nodded as she darted out of the room, \"After!\". \n\nBailey showed up a scant few seconds later. \n\n\"Nuts, huh?\" she asked. \"She did four?\" \n\nKent nodded and watched as Bailey undid her jeans, pushing them and her panties down to her knees before turning her back and bending over one of the big, wooden tables. \n\nChrist, Kent thought, I can not believe these two. \n\nBailey's cheeks had lightened up a little, so he had plenty of fresh targets to hit. Deciding he wanted her and Laura to have something to share, he planted four hard slaps to the same low spot on her right cheek. \n\n\"Five, six, seven, eight,\" Bailey breathed out. \"Man!\" \n\nShe had her pants back on just as quickly as Laura did. \n\n\"Why are we alternating like this?\" Kent asked. \n\n\"Laura,\" Bailey shrugged, hoping that explained everything as she hopped out of the room, getting her jeans into place. \n\nBreathless and red-faced, Laura popped back in. \n\n\"How you want it this time?\" Kent asked. \n\nLaura's eyes had gone wide with excitement and she backed up against one of the large tables. Unless Laura dared to completely removed her pants and panties, she'd have a hard time coming up with any super creative positions, but she clearly had something in mind. Kent watched her nervously undoing the button on her pants and unzipping her fly. She then rolled onto her back on the table and lifted her legs until her toes pointed to the ceiling. Last, she pushed her pants - and only her pants - out of the way. \n\n\"Five more?\" Kent clarified, seeing her solid black panties still in place. \n\n\"Well,\" Laura looked aside nervously, bending her knees. \"Alright.\" \n\nHe hadn't meant to push her further than she'd intended, but Laura had clearly taken his need for clarity as a rebuke. She slipped the waistband of her panties down and out of the way, giving him a clear view of her vulva. \n\n\"I can see a lot of you from here,\" he chided. \n\n\"Just do the spankings,\" she insisted nervously, \"Hurry!\" \n\nWith her knees bent and her legs so high in the air, he had a good look at parts he normally only saw in the dark. \n\nRegardless of the view, however, he had quick work to do, and Kent braced Laura with his left hand holding her knees back. He then gave her four quick, hard slaps to the lowest part of her left cheek, invoking a nice symmetry across her ass. \n\n\"Nine, ten, eleven, twelve,\" Laura moaned out quietly. \n\nStill flushed with embarrassment, shes rolled forward and pulled her clothes back on. Giggling excitedly as her anxiety faded away, she darted out of the room, making way for Bailey. \n\n\"What'd she get to?\" Bailey asked. \n\n\"Twelve.\" \n\n\"Alright,\" Bailey said, pointing to the table. \"Sit up there.\" \n\nKent turned and hopped up on the table, knowing what came next. Bailey undid her pants again and put herself across his lap. Under her blue, athletically shaped panties, he clearly saw the redness in her right cheek. \n\n\"Keeping the panties, then?\" he asked. \n\n\"Yup.\" \n\nIt wouldn't protect anything but her modesty, which she had little of, as he could just strike the uncovered parts of her ass. With the position she'd chosen, however, only the right cheek lay in his swinging arc, so he laid five more spankings in a row on the part he'd already reddened in the first round. \n\n\"Ow!\" she cried out long and quietly as he hammered at her. \"Thirteen, fourteen, fifteen, sixteen...\" \n\nJust as Kent laid the last slap on her cheek, they heard Laura call out down the hallway. \n\n\"Hey, Bai!\" Laura sang. \"You down there?\" \n\n\"Shit!\" Bailey whispered, hopping off Kent's lap and frantically trying to get her jeans back in place. \"Seventeen!\" \n\n\"What?!\" \n\n\"That's the signal!\" Bailey hissed, then raised her voice. \"Yeah, I'm here, Laur! You ready to go?\" \n\n\"Yup!\" Laura called back. \n\nKent heard the footsteps coming down the hall and turned to Bailey with a shrug, \"Just act natural.\" \n\nBailey replied with a flustered sigh, finally getting the button on her too-tight jeans back into place and doing up her fly. Side by side, the two of them walked out of the lounge and saw Laura coming their way, followed at a distance by a pair of unknown students. \n\n\"You made it,\" Bailey smiled at Laura, pretending to have just run into her friend, hoping the strangers didn't notice the flushed looks on everyone's faces. \n\nNervously, the three of them headed down the hall, getting all the way around the corner before Laura broke down in giggles and Bailey tried very hard not to get caught up in her laughter. \n\n\"Oh my god, that was so close, Bai,\" Laura pouted. \"Omigod, omigod, omigod.\" \n\nKind of what you wanted, though, isn't it, Laur? Kent eyed the giggling girl. All that danger and excitement. \n\nAs they exited the stairwell and hit the cold November evening, Laura stretched out her arms extravagantly and wrapped them around Kent and Bailey's waists. \n\n\"Feels good to be back,\" she announced. \"What did I miss?\" \n\n\"I told you what we did,\" Bailey rolled her eyes, trying to hide her own hyperactivity. \n\n\"You told her?\" Kent said. \n\n\"That's not masturbation, you know,\" Laura pointed out to Kent. \n\n\"Pardon?\" \n\n\"Technically, masturbation means using your hands,\" Laura explained. \"Humping a pillow-\" \n\n\"-or a chair-\" Bailey put in. \n\n\"-doesn't count.\" \n\n\"Are you saying Bailey didn't technically pay me properly?\" Kent asked. \n\n\"Technically correct,\" Bailey intoned. \"The very best kind of correct.\" \n\n\"Haha,\" Laura replied. \"I'm just saying.\" \n\n\"He asked me to 'take care of' myself,\" Bailey closed her eyes as she tried to recall the exact words, \"And make myself come, while naked. I was the one who used the word 'masturbate', which Kent then did for me, too.\" \n\nLaura's mouth opened as she looked over at Kent, \"You did that while she watched?\" \n\nKent felt his own cheeks redden, \"Yeah.\" \n\n\"I missed so much good stuff,\" she whined. \"Oh, well. Any new pictures?\" \n\nBailey tensed too quickly, which Laura caught. \n\n\"What did you guys do?\" Laura prodded. \n\n\"I have one with his come all over my butt,\" Bailey said. \"You can see him in the picture.\" \n\n\"Him?\" \n\n\"Part of him,\" Bailey pulled out her phone, working it with frigid fingers, and showed Laura the picture of Kent's erection trapped between her cheeks and thighs, having just fountained all over her ass and thighs. \n\n\"Wow! That part of him, huh?\" \n\nBy the time Laura had completely interrogated the two of them, including flowery descriptions of their brief segue into bondage, they'd reached Kent and Bailey's apartment. \n\n============================= \n\nOh, dear Laura, Bailey shook her head as Kent unlocked the door and let them in. You've already completely forgotten, haven't you? You must think he won't even care. \n\nThey walked down the stairs in order, Bailey, Laura and Kent following behind, locking the door. \n\nThis would be your chance to distract him, but I'm not going to remind you. I want to see what happens. \n\nKent shucked off his empty backpack, hung up his jacket as the girls did the same, then slipped past them into his bedroom. \n\n\"Bailey,\" he called out, a dark note of warning in his voice. \"Laura?\" \n\n\"What?\" Laura replied in confusion at his tone. \n\nThe girls slipped into his room after him and saw him pointing at the empty place on the whiteboard. \n\nSeeing Laura's eyes go wide at Kent's tone, Bailey held her smirk in and backed away toward Kent's bed. \n\n\"Oops, oh yeah,\" Laura shrugged. \"We didn't really mark it down. We didn't have time.\" ",
        "Kent raised an eyebrow, \"Really?\" \n\n\"Yeah,\" Laura said. \"We wouldn't have had time to meet you on campus if I'd come here first.\" \n\n\"We have a rule,\" Kent said, looking at the ceiling. \"You two make the marks, we do the spankings, then I change the number.\" \n\nLaura looked aghast, \"Wait, you're not going to count those? That's not fair.\" \n\n\"I told you,\" Bailey warned her. \n\nIf you're smart, Laur, you'll let it go, Bailey thought, don't you want to extend this? \n\n\"Come on, Kent,\" Laura pleaded. \"Those were good ones. In the school, even. And you spanked really hard!\" \n\nKent sighed and looked up at the ceiling, the tilt of his head acknowledged her point. \n\n\"Those were good spankings,\" he admitted. \"I thank you very much for them. But you still broke the rule.\" \n\n\"Okay,\" Laura said, \"So maybe you spank us a couple extra time to make up for it. How about that?\" \n\nIt won't be that, Laura, Bailey kept her thoughts to herself, I'm betting Kent isn't looking at this the way you are. Let's see what happens if I just shut up for once. \n\n\"Laura,\" Kent lowered his gaze to meet her eyes directly, \"Spanking the two of you is about payment. I'm not punishing Bailey, I'm just getting my money's worth from her.\" \n\nHe tapped the whiteboard for emphasis. \n\n\"This is different,\" he explained, \"You broke the rule I use to make sure you know what you're getting into.\" \n\n\"Oh, come on,\" Laura folded her arms, \"you knew very well I was into it.\" \n\n\"You lied to me, though.\" \n\nLaura came to a complete stop at that point. Bailey heard the way her throat closed with a little, \"Urk!\" \n\nNice hit, Kent, Bailey tried to keep from smiling, you know how to sting our choir girl. \n\nSeveral seconds ticked by before Laura spoke. \n\n\"So I was a bad girl and I lied,\" she prodded, still obviously pushing for a spanking-related way to get out of this hole. \n\n\"Yes,\" Kent's eyelids lowered. \"Yes, you did.\""
    ],
    "authorname": "xtorch",
    "tags": [
        "debt",
        "ejaculation",
        "facial",
        "finger",
        "liar",
        "lie",
        "masturbation",
        "public",
        "spanking"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/two-hundred-dollars-ch-26"
}