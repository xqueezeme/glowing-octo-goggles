{
    "title": "Dialogue This",
    "pages": [
        "Dialogue This:\n\nMaking Your Characters Talk\n\nY'know, people often say to me: \"Firebrain, how come you write such good dialogue?\" My stock response (whilst smiling smugly) is that I watched a lot of Buffy. Now that's actually quite relevant - Joss Whedon is the king of quippy dialogue and gorgeously grey characters - but that doesn't help you, on the other side of the screen. This might.\n\nYou're going to look at this article and think, fuck me - this looks complicated! It is complicated. The thing is, you're probably doing half of it already - now it's time to consider the rest and watch how it inflates your reams of flat dialogue into something seriously juicy.\n\nWe're going to cover:\n\nFirst Things First - basic grammar and punctuation for dialogue.\n\nThe Ellipsis and the Dash - you think you can use these bitches - apparently, you can't.\n\nDialect and Slang - because the poshest BBC accent is a dialect and even robots say fuck.\n\nUtterances - learn to balance your erms and arghs.\n\nFormal vs. Natural speech - because you're writing Joe Average, not Stephen Hawking (and if you are writing Stephen Hawking, I'm backing away right now).\n\nDialogue Tags - who says what and how do they say it?\n\nDialogue During Sex - should actually be shexy, and not in the Anchorman way.\n\nFirst Things First\n\nIf you're a little more experienced, you probably know all of this; it's still worth checking. Here's how we punctuate and shape a line of speech correctly:\n\ni said what the fuck are you talking about alice cried justin\n\n1) First, we're going to put the bit that is speech in speech marks (or quotation marks):\n\n\"i said what the fuck are you talking about alice\" cried justin\n\nSpeech - that is, what is said aloud - always goes inside these marks. The bit on the end - cried Justin - is called a dialogue tag because it tells us who is talking.\n\n2) Now, we're going to capitalise where appropriate:\n\n\"I said what the fuck are you talking about Alice\" cried Justin\n\nWe've capitalised I because it's the beginning of a sentence; we capitalised the names because they are proper nouns. Notice, though, that we didn't capitalise the beginning of the dialogue tag - cried. This is because it's technically part of the same sentence as the dialogue that precedes it - there's a comma at the end of the phrase inside the speech marks, not a full stop.\n\n3) Now we're going to throw in the rest of the punctuation that's required:\n\n\"I said, what the fuck are you talking about, Alice?\" cried Justin.\n\nWe've got a comma after said because when reading aloud, we'd naturally pause here. We've also changed subjects from I to you.\n\nWe've got a comma before Alice because we have another pause and again, we're switching subjects - from you to Alice.\n\nWe have a question mark -? - after Alice because Justin's asking a question.\n\nWe have a full stop after Justin because we're closing the sentence (and we'd naturally pause here, too).\n\nPunctuating your dialogue is really important because we're not just telling the reader what the character is saying; we're telling them how it sounds. That's why we need to think about where we'd pause when saying this aloud.\n\n4) We're going to add some emphasis by using italics:\n\n\"I said, what the fuck are you talking about, Alice?\" cried Justin.\n\nWhen you want to put some serious whack behind a word, you italicise. This lets the reader know that the word sounds strong and it is important. You don't need to italicise in every line of dialogue - in fact it's best when used sparingly - but do consider it, especially for emotional scenes.\n\n5) When the next person speaks, it always goes on a new line:\n\n\"I said, what the fuck are you talking about, Alice?\" cried Justin.\n\n\"The restaurant.\" She rolled her eyes. \"I saw you with her!\"\n\nYou don't have to double space between lines of dialogue, as above, but I urge you to do it because it makes it much easier to read.\n\nThoughts on the Ellipsis and the Dash\n\nAhh, the old ellipsis (...); it coveys a trailing off or a dramatic pause. It injects suspense, tension, an elongated last word...\n\n...it's also mistakenly used in place of a dash (-) way too often.\n\nHere is how we correctly use the ellipsis:\n\n\"I wanted to tell you. I tried to tell you. What I mean to say is...\" Jon winced at the effort of his words, \"I love you.\"\n\nJon paused: he needed a moment to think. He needed an ellipsis.\n\nHere's how we use a dash correctly:\n\n\"I wanted to tell you. I tried - \"\n\n\"I don't care what you tried, Jon!\" Lucy sighed.\n\nLucy interrupted Jon and he got cut off. He needed a dash.\n\nThoughts on Dialect and Slang\n\n1) A character's location (and the time in which your story is set) will affect their accent and their colloquialisms (the regional slang that they use).\n\nYou can refer to accent in dialogue. Here is an example of a modern London \"Cockney\" accent written phonetically:\n\n\"Yer on. Sunday, ahhtiside the pab - I'm gonna kill yer!\"\n\nThat's going to get exhausting to read pretty quickly, no? This is why I don't recommend writing an accent in completely. What you can do is use it sparingly, and use slang and description to imply it:\n\n\"You're on, you fucking weasel. Sunday, outside the pub - I'm gonna kill yer!\" Bill's Cockney accent was grating and coarse.\n\nYou only need to describe Bill's accent once in your piece; throw in the odd bit of slang and the reader will remember how he speaks.\n\nNot all of your characters, if any, which have such stylised dialogue - it will depend on your own style of writing. It is a worthwhile skill to have, though.\n\n2) Your characters are going to use slang in some form whether it's a curse, a regional name for a cup of tea or a less than flattering reference to the enemy's mother. Use slang when you write dialogue; it personalises your character and it tells us lots of important things about them. Why spend three lines describing where they are from and how they are feeling when you can convey it in a single phrase?\n\nSlang is varied by setting and regional dialect, as we have already seen. Slang is also varied by the social group that your character belongs to, whether it's working class northerner, New York yuppie, heavy metal stoner or Cuban pirate.\n\nSlang curses might include:\n\n\"Fuck!\"\n\n\"Drat.\"\n\n\"Oh Christ.\" / \"Oh man.\"\n\n\"Golly, miss Molly!\"\n\n\"Sweet mother of Abraham Lincoln!\"\n\n\"Buggery fucksticks.\"\n\nRemember that curses don't always need exclamation marks; if your character has a dry sense of humour or a quiet disposition then you might want to exclude the mark to convey a flatter tone. These little considerations are what really make a character.\n\nHere's how slang and dialect can transform dialogue and the character speaking:\n\n\"I've got an exam on Friday,\" Zack said. \"I'm seriously worried.\"\n\nTo\n\n\"I got this exam on Friday,\" Zack said. \"I'm shitting bricks!\"\n\nDialogue doesn't just have to convey information - it can imply things about a character's personality too.\n\nZack is evidently the kind of guy who says things like shitting bricks - not all your characters will be so vulgar, but that's what makes him a unique and believable individual. It also makes him fun to read.\n\nThoughts on Utterances\n\nSo yeah...um...this bit is about, er, utterances. These are the guttural sounds we make when no word is quite appropriate:\n\n\"Erm...\"\n\n\"Oh.\"\n\n\"Aaaargh!\"\n\nWhen might you use an utterance?\n\n1) When our character is nervous or confused:\n\n\"Oh God. Um. How did you find out?\"\n\n\"What's the capital of Russia? I know this. Bear with me. Erm...\"\n\n2) When our character is surprised, pleased, shocked:\n\n\"Argh! That fucking hurts!\"\n\n\"Ow...do that again.\"\n\n3) When the character is being dubious or sarcastic:\n\n\"Did you think I'd never find out?\" Sarah seethed.\n\nKevin bit his lip.\n\n\"Erm.\"\n\n\"Don't you bloody erm me!\"\n\nUse utterances in your dialogue but use them sparingly. Let them make an impact; don't let them weigh the sentence down.\n\nThoughts on Formal vs. Natural\n\nYour characters are talking to each other - not just talking at the reader. Acknowledge the other character sometimes in their speech:\n\n\"You know what I'm talking about.\"\n\nTo\n\n\"You know what I'm talking about, right?\" or \"Do you know what I'm on about, Sarah?\"\n\nThey're also talking rather than writing - they won't observe all the formal rules of English. There are little touches you can add which imply this:\n\n\"Do you want to come for breakfast on Friday?\"\n\nTo\n\n\"Hey, Simon! You coming for breakfast on Friday?\" or \"Simon, mate. How'd you fancy brekkie on Friday?\"\n\nUtterances, slang and setting play a big part in making dialogue sound natural - the last two sections really inform this one (read 'em now if you just skipped through). Listen to yourself talking to your family and friends; you sound like a human being, not an essay!\n\nThoughts on Dialogue Tags\n\nThere are four very common mistakes that are made regarding dialogue tags:\n\n1) \"Said\" is such a boring dialogue tag. I ought to whack out the old thesaurus, and I should weld on a zillion adverbs too!\n\nAs we say in England: I don't fucking think so.\n\nDialogue tags are not about winning the Nobel prize for literature. They are fuctional: they are there to tell us who said what and how they said it. I want you to think about this very closely: how much of that work has my dialogue already done for me? Has my exclamation mark implied a shout? Has the ranty slang implied my character's distaste? Your tags and adverbs should not distract from your dialogue.\n\nSometimes, said doesn't cut it. Sometimes your character really does need to gasp, rant, cry, sigh, whisper, mutter or grumble. Sometimes they might need to say the line quickly, softly or scathingly. Use tags and adverbs sparingly, though - rare use lends a line far more impact and adverbs often disturb the rhythm of a sentence.\n\nBe wary of tags and adverbs combined - you don't need both 90% of the time. Be especially wary of combinations that mean the same thing: shouted loudly, whispered quietly.\n\n2) Dialogue tags always go at the end of the line of speech.\n\nIf you follow the same pattern every time then your prose gets flat and lifeless. If every line ends in \"she said,\" or \"he sighed,\" then you've got that problem - it's hard to inject any energy when it is read aloud because you're always adding on that low little \"he said/she said/Tom cried.\"\n\nFurthermore, not every chunk of dialogue is said in the same fashion: the character might smile half way through for impact, or break to sob. For example:\n\n\"I remember Grace, yeah. The girl with all that bouncy blond hair?\" Emilia smiled fondly. \"She was so funny when she had to do that phone interview with Simon Cowell...\"\n\n\n\n3) Every line of dialogue needs a tag, right?\n\nNo! And thrice no. I don't care if they're debating the Russian economy or masturbating to the dulcet tones of Celine Dion; do not tag every line of speech! Here's an example:\n\nAnnie thrust a menu on to Luke's lap.\n\n\"What do you want for dinner, hon?\"\n\n\"Ooh. Let's have a looksy.\" He pushed his glasses back into place with a nail bitten finger. \"Something with hot sauce, I think.\"\n\n\"Oh yeah. Anything for the sauce,\" she giggled.\n\n\"Are you able to say anything without innuendo?\"\n\nWe already know that Annie is speaking because we described her action first. For the remainder of the conversation, we also know that the only two people speaking are Annie and Luke. That means that we don't need to be reminded every time that we speak. Did you even notice the lack of tagging there?\n\n4) It's not enough to use a tag - I need to say what my character is doing, too.\n\n\"Did you see the big game last night?\" Rex called, striding towards my desk. \"It was awesome!\n\nNow look at:\n\n\"Did you see the big game last night?\" Rex strode towards my desk. \"It was awesome!\"\n\nDid we need to know that Rex was calling as well as striding? No: he was striding towards the desk and was therefore some distance away to begin with. His voice would have been loud enough to carry.\n\nWe don't always consciously think about these things when we write but we do often see mistakes like this in a story. When you re-read your work, ask yourself: do I need the tag and the action? Would the action act sufficiently as a tag too?\n\nThoughts on Dialogue During Sex\n\nOh baby. Oh God, baby. Fucking stick that dialogue to me, stick it in my pisshole!\n\nWhen it's good, erotic dialogue is knicker stickin' sexy. When it's bad, it's...yeah. I cringe so hard that my face aches.\n\nErotica is written as fantasy; realism isn't always that important if the story is written well because we aren't reading for a real-life scene (e.g. the couple can have sex without a condom and we may not question the worry of her getting pregnant). However - don't confuse realism with plausibility: that is to say, don't confuse writing a fantasy scene with writing something ridiculous. A nine inch cock? Yeah, that'd wash; fourteen inches? I don't think so.\n\nHere are a few guidelines for writing sexy speech:\n\n1) Less is more.\n\nNot everyone is particularly vocal during sex and sometimes, a single line is ten times more sexy than fourteen coarse demands. If you are writing about a very vocal character, think on these things:\n\nWhat is the cue for this line of dialogue? Is it a hand stroke, a partner revealing a voluptuous breast, an orgasm? Have the dialogue refer to this: it makes for interesting variety between \"fuck me!\" and \"oh, just fucking fuck me!\"\n\nHave I already used this phrase? We often get incoherent and repeat ourselves during sex, but at least stretch your vocabulary a little (and if this is the third sex scene in your story, the same goes for the previous few scenes - don't write the same fuck three times!).\n\n2) You don't have to cuss.\n\n\"Oh fuck! Oh shit! I want your cock!\"\n\nCusses have impact and power - when used sparingly - and some characters cuss more than others.\n\nConsider, though, the power of lines without a cuss:\n\n\"I want you inside me right now.\"\n\n\"Do you have any idea how big you feel?\" or \"You're a wet little tease.\"\n\n\"Please!\"\n\nNot every man or woman turns into a foul-mouthed vagrant when they become aroused; ask yourself, is it plausible that the demure schoolgirl starts pouring fuck and shit from every orifice because you've just got her knickers off? Even if she did - which she might, depending on your fantasy - wouldn't she build up to it with some non-cussing lines first?\n\n3) Call a spade a spade.\n\nPork sword. Man meat. Swamp cunt. Virgin flower. Greased beef express. Yeah, can you say those with a straight face?\n\nNo, neither can I.\n\nDon't be afraid to just call a cock, a cock; a pussy, a pussy. Of course you can get more imaginative but remember that you're trying to be sexy, not gross people out. A scene doesn't have to include seven different words for vagina - in fact it doesn't even have to include one, depending on your style; you're writing a story, not a thesaurus.\n\nUnless it is in keeping with a very particular style, avoid the more abstract euphemisms - cock to cattle prod, pussy to weeping chasm - the reader might pause to decipher and it can detract from the impact of your prose.\n\n4) Utterance vs. Action\n\n\"Aaaaaaargh!\"\n\n\"Oooooh baby! Yes, uuuuuunnngh!\"\n\nUsing utterances in sex scenes is a matter of personal taste. Some prefer to use a phonetic spelling, as above, and some prefer to describe the action instead:\n\nDashiel groaned as he painted Nathan's cheeks with cream.\n\nI prefer the latter; I just find it easier to take seriously. If you're going to use utterances, the same rule applies as for non-erotic dialogue: use them sparingly. Sprinkle them into the description rather than allowing them to dominate the scene.\n\n5) Where's the personality?\n\nYour characters might have known each other for ten years; they might have just met. The point is, they have their own way of talking - their dialect, their slang, their cute little nicknames for each other and their weird sense of humour - and it informs their speech during sex as much as it does elsewhere. All of this builds intimacy.\n\nIf you want readers to invest in your characters, they need to read the sex scene and think, wow, that's exactly what Taylor would do. I've been waiting to see that! instead of this could be anybody. The reader can still imagine themselves in Taylor's place - in fact little details that they identify with make this extra special.\n\nConsider any of these ideas for adding personality to your sex scene:\n\nTaylor could refer back to an old memory or previous episode of fucking:\n\n\"You know...that's amazing,\" Taylor murmured, \"but it'd be even better if you did that thing...\"\n\nRobin grinned.\n\n\"What thing?\"\n\n\"Remember the log cabin?\"\n\n\"Oh yeah.\" He looked at Taylor's round arse cheeks and thought of how they'd marbled to red and pink. \"I remember.\"\n\nTaylor could have a special name just for Robin. It doesn't have to be a sickly pet name but if she calls everybody honey, it's not intimate. If she reserves honey just for him (or just the men she fucks) then it implies a special level of intimacy.\n\n\"That's it, honey...please...\"\n\nTaylor could use her slang during a sex scene. This kind of touch adds humour and realism; it's something you would add if that's what you're after. It's also more useful for characters with little background history:\n\n\"No!\" she screeched. \"Stop tickling me, you evil hussy!\"\n\nLucy collapsed into giggles beside her. Her fingers crept up Taylor's thigh and hooked her white thong aside.\n\n\"Frigid bitch,\" Lucy breathed.\n\n\"Oh yeah. Frigid...that's me...oh.\"\n\nShy, well-spoken Taylor could get so hot, she gets a little out of character. This works best in longer pieces than stroke stories, but it all depends on the strength and style of your writing - if you can establish Taylor's personality well before the sex, you're good to go:\n\n\"Is that good?\" Lucy ran her nails over Taylor's calf. \"Well?\"\n\n\"Oh yeah, it's...\" Taylor broke off to pant as Lucy reached her inner thigh, \"it's good.\"\n\n\"How good?\"\n\nTaylor closed her eyes as Lucy reached her pussy; she needed to hide in the dark, away from the growing shame.\n\n\"How good?\" she moaned. \"Oh...oh fuck.\"\n\nThe sex must be frickin' amazing to make this good girl swear, huh? Taylor's little lapse in character lends a whopping impact to that single fuck.",
        "So here we are; the final countdown, the closing credits, the end of the road. The post-orgasmic collapse. It's been an emotional journey and I feel like we've really grown together, you know? Sob, sigh...I'm so proud of you!\n\nNow that I've finished patronising you: I hope this has been of use. I'd love to hear thoughts, ideas and even corrections on this little piece. Just don't send me pictures of your mushroom cock, ok? I get like three of those a week and always when I'm eating a sausage."
    ],
    "authorname": "Firebrain",
    "tags": [
        "writing dialogue",
        "speech",
        "how to",
        "slang",
        "dialect"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/dialogue-this"
}