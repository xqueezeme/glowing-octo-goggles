{
    "title": "Sleeping Beauty",
    "pages": [
        "Note from Slickman: Making it with the babysitter has been a popular theme in erotic stories. This story takes on a new twist so sit back and enjoy. Copies of this story may not be made for distribution, be publishing or copied to another webpage without explicit permission from the author. \n\n*\n\n\"Ten dollars an hour...\"\n\n...read the advertisement in the neighborhood monthly newsletter for the King Estates. \"Babysitter wanted\" read the ad heading. The going rate was up to $15 an hour so Becky Jenkins was not sure if she would get any responses. At least twice a week she and her husband had to work late at their real estate business which meant someone had to pick up their son Matt from his elementary school and watch him until about eight or nine o'clock. Becky had almost given up hope when she checked her answering machine on a Thursday evening. \n\n\"Hi, my name is Allison and I saw your ad for a babysitter. I'm eighteen years old and have my own car so picking up your child won't be a problem for me since I'm out of school by 2:45PM. If you haven't already found someone then call me at 555-387-0999.\" \n\n\"This is too good to be true,\" Becky thought as she quickly dialed the phone number. An older woman answered. \"Hello.\" \n\nBecky explained why she was calling and the woman said it was her daughter who was interested in the babysitting job. Becky waited while the woman went to get her daughter. \n\n\"Hello,\" Allison said softly. \n\n\"Hi Allison, this is Becky Jenkins.\" For the next twenty minutes the two of them talked about the specifics of the job and responsibilities. The days were perfect for Allison so they set up a meeting for the following evening. \n\nAllison smiled as she ran into the kitchen to tell her mother the wonderful news. Ever since her father had left the house for a younger woman they had been having a rough time making ends meet. Her car insurance was due and she also needed four new tires for her VW Bug. \n\nAllison called her girlfriend Tina and told her the good news. \"I can get more for babysitting on the weekend but during the week will be great since it will give me more time with Jake.\" Jake is Allison's nineteen year old boyfriend she had been dating for about three months. Their relationship had recently crossed the second base and was almost to third last weekend when Allison pulled his hand from under the front of her jeans. \"I'm not ready for that yet,\" she whispered. She figured she was the last virgin in her high school class except for Tina. \n\n\"Are you going to invite Jake over when you baby-sit?\" Tina giggled. \n\n\"No way,\" Allison answered. \"The number one rule is no boys.\" \n\n\"So that means I can join you some days?\" \n\n\"Let me get my feet wet first,\" Allison laughed. \"Then I'll see if you can come over. They have a nice pool.\" \n\n\"Well now you have to get me invited.\" \n\n\"We'll see,\" Allison said before they said their goodbyes and hung up. \n\n*****\n\nThe following day Allison went straight from gym class to the Jenkins home. She was sweaty from running around the long track at the athletic field during her last period but she didn't have time to take a shower or change. Mrs. Jenkins was picking up her son at 3:00PM and said she would meet her at their house. \n\nAllison was sitting on the front porch when the expensive BMW coop pulled into the long driveway. She smiled thinking she could hit them up for more than ten bucks an hour once they realize what a great babysitter she was. She saw the six year-old boy come out of the garage first and run up to her. \"Are you Allison?\" he asked with a smiling face full of freckles. \n\n\"Yes, and you must be Matt,\" she said looking at his blonde hair and light blue eyes. \n\n\"Hi,\" Becky said as she moved up behind her son. \"I see you met Matt.\" \n\nBoth females quickly checked out each other. They were basically the same size which was about a size 6 dress but Becky's breasts were definitely a lot larger than Allison's. Allison's dark brown short hair was completely opposite from Becky's long blonde hair. Allison noticed the freckles on Becky's chest above her opened blouse. \n\n\"I can see where Matt gets his blonde hair and freckles from,\" Allison smiled. \n\nBecky glanced down at the girl's very short cotton shorts and her much too tight tee shirt. \"They let you wear those clothes to school?\" She could see the tiny bumps of Allison's nipples pushing out the thin tee shirt. It didn't look as if she was wearing a bra. \n\nAllison blushed when she looked down at the raisins on top of her small breasts. \"I have gym class on Friday afternoons and didn't have time to shower and change. \n\n\"No problem,\" Becky said. She felt the warmth right away between the two of them. \"Come in and I'll show you around.\" \n\nAllison followed the woman in and tried not to show her amazement at the high priced furniture and paintings. \"This part of the house is for show. We live back here,\" Becky said as she led the girl to the large sunroom at the rear of the house. Outside through the large patio door was a huge swimming pool and Jacuzzi combination. \n\n\"WOW!\" Allison exclaimed when she saw the picture perfect gardens and pool set-up. \n\n\"Will you go swimming with me?\" Little Matt asked as he grabbed Allison's hand and pulled. \n\n\"Matt stop,\" Becky said. \"Allison probably doesn't have enough time today.\" \n\n\"Actually I do but don't you want to ask me some more questions?\" \n\n\"Nope, I think I've seen enough. Would you like the job?\" \n\nAllison froze for a second because she expected a longer interview. \n\n\"Please!\" Matt begged as he fluttered his blue eyes at her. \n\n\"What about Mr. Jenkins?\" Allison asked.\n\n\"He trusts me to make the decision,\" Becky smiled. \"Besides he will be thrilled to see how cute you are,\" she thought. \"I'll finish showing you around and if you want to go into the pool with Matt you can start today,\" the woman finished saying. \n\n\"OK, but...I....uh....don't have a swim suit with me,\" Allison said. \n\n\"We are pretty much the same size so if you want to wear one of mine no problem.\" \n\n\"I don't think I'll fit into yours,\" Allison blushed as she peeked downward at Becky's C-cups. \n\n\"Just wear the bottoms and a tee shirt,\" Becky said as she turned without giving Allison an opening to decline. \n\nIt took almost 30 minutes for Allison to see the whole house. Matt was in his bedroom putting on his trunks when Becky pulled Allison into the master suite. \"Try these on,\" Becky said as she walked from a huge walk-in closet. In her hand was a very skimpy white thong bottom. \n\nAllison took the bottoms and blushed. \"I don't think I should be wearing these.\" \n\nBecky could see the girl was now somewhat frightened. \"Of course, they don't cover much especially in the back.\" Becky again moved into her closet to search for an older pair of bikini bottoms that were a lot more conservative. \n\n\"How about these?\" \n\nAllison smiled as she opened them up. \"It is just us right?\" She wanted to make sure the husband didn't see her in them. \n\n\"Yes and Matt is not old enough to understand,\" Becky laughed. \"I have some tee shirts in that dresser over there so take your pick.\" \n\nAllison stood and watched as Becky grabbed a bikini top and bottom. \"Why don't you go into the bathroom to change and I'll change out here?\" Becky asked. \n\n\"OK,\" Allison answered. She moved into the massive bathroom and closed the door. She hesitated when she did not find a lock on the door. \"I'm being silly,\" she thought as she quickly pushed down her cotton shorts and panties and hurried to pull up the bikini bottom. She frowned when she noticed quite a few dark curly tendrils escaping out the sides of the bikini bottom. She had put off getting a trim down there because it was costly, embarrassing and she wasn't going to the beach for another month. Her fingers pushed the hairy convicts back into their material cell as best she could. She had forgotten to pick out a tee shirt so she slowly opened the door and peeked out. She stopped when she saw Mrs. Jenkins completely naked and standing facing away from her. She was so beautiful and had an all-over tan. Before she could close the door Becky turned and faced her. \n\n\"You forgot your tee shirt,\" Becky said smiling. She could see the startled girl blushing as her eyes took in her perfect breasts and hard brown nipples. She posed longer for the eyes to move down her flat stomach to the thin and sparse growth of her golden pubic mound resting atop of her moist slit. \n\nBecky walked towards the frozen girl and when Allison reached out to take the shirt Becky pulled it back. \"Let me help you.\" \n\nAllison had been around naked girls in the high school locker room before but this was different. Mrs. Jenkins was an older woman with big boobs. \"I can do it.\" Allison said as she walked backward into the bathroom. Before she could shut the door Becky squeezed in with her. \n\n\"Don't be shy. It's just us women,\" Becky laughed as she moved behind Allison and grabbed the bottom of her shirt. Before Allison could stop her the woman pulled the thin shirt up over her body and head. When the shirt left Allison's body she was naked from the waist up. She froze and saw the woman's eyes looking at her small breasts in the huge wall-to-wall mirror. \"Ohhh,\" Becky said as she quickly cupped her naked boobs. \n\n\"You are very beautiful,\" Becky whispered as she looked down at the cute round buttocks pushing out the white bikini bottoms. She knew Allison was very nervous so she quickly excused herself. \n\nAllison kept her hands over her petite breasts until the naked woman had walked from the bathroom. She quickly closed the door and pulled on the tee shirt. She realized her body was on fire and her pussy was soaked. Never before had she felt so excited being around another female. She waited almost three minutes to make sure the woman had enough time to get dressed before she opened the door and again peeked out. \n\n\"Come on,\" Becky smiled as she handed Allison a short white terrycloth robe. They picked up Matt in his room and headed for the pool. \n\nAllison realized right away that she should have picked a darker tee-shirt than the pink one she had on. When her body rose from the water her pink nipples could easily be seen through the wet light pink tee-shirt. \n\nBecky smiled as she watched the new babysitter and her son play games in the pool. The last babysitter was older and overweight and never wanted to go swimming with Matt. Time flew by and soon an hour passed. \n\nTom Jenkins pulled into the long driveway and noticed the small Volkswagen Bug parked near his house. He remembered his wife saying the new babysitter candidate would be there. Both his wife and he had put in so many hours into their jobs lately that they had little time for leisure. He moved quietly through the house and peeked out the large sun room window at his wife, son and a young girl splashing each other in the pool. He really couldn't see much of the girl since only her head and shoulders stuck out of the clear water. After grabbing a beer he moved outside. \n\n\"Hello!\" he said loudly to make sure they could hear him over their giggling and laughing. \n\n\"Daddy's home!\" little Matt shouted. \n\nPanic shot up Allison's spine. She didn't think the man would be home so early. Her body immediately sank into the water. \n\n\"Hi honey,\" Becky said. \"This is Allison.\" \n\nAllison turned and saw the handsome man. His hair was as blonde as Becky's and Matt's. \"Hi.\" \n\n\"Allison started today,\" Becky said smiling. \"She will be perfect for the job and Matt just loves her.\" \n\n\"I love her!\" little Matt yelled as he jumped onto her back. Allison laughed and stood upright to carry him around the pool. She forgot about the wet tee-shirt. \n\nBecky tried not to laugh at her husbands face when he saw the small breasts and tiny dark nipples through the babysitter's tee-shirt. She remembered last summer at the beach when a lot of girls wore the tiny thong bathing suits. Sex that night was the best it had been in quite a while. Maybe, just maybe, seeing Allison like this would fire up his desires and she would benefit from it. \n\n\"Why don't you join us?\" Becky asked. \n\n\"Shit,\" Allison thought. \"I would not have gone into the pool if I'd known a man would be joining us.\" \n\n\"I think I will,\" Tom said smiling. He turned and almost ran into the house. \n\n\"I think I should go,\" Allison whispered to Becky as they waited for Tom to return. \n\n\"No, please stay. Since you are now our babysitter we all need to get use to each other,\" Becky said as she touched the girl's arm. \"Do you have a boyfriend?\" \n\nAllison blushed. \"Yes, we've only been dating a short time. I haven't dated that much.\" \n\nBecky realized the girl was trying to tell her she didn't have much experience around males. \"Don't worry my husband is a lot of fun.\" \n\n\"That's what I'm worried about,\" Allison thought as the patio door opened and Tom walked out wearing a clinging nylon swim suit. She could see the bulge between his thighs. Her eyes ravished his taunt abs and muscular hairy and tan chest. Compared to her boyfriend he had the edge in all areas. Even the bulge looked bigger. \n\n\"Here I come!\" Tom shouted as he dove headfirst into the water. \n\nTom finally had the chance to check out the babysitter. His eyes were wide open as he swam underwater up to Allison's form. She was turned away from him, which gave him a great shot of her cute ass. He wished he could see the front but he had to surface for air. \n\nBecky immediately jumped on his back and whispered, \"You were down there a long time.\" Her legs wrapped around his waist and her ankle pushed into his penis which was getting harder and harder. \n\nThey splashed around for about 15 minutes before Becky suggested Allison get on her shoulders and Matt on Tom's. Then Matt and Allison would try to pull and push on each other until one of them topples off. \n\nAllison laughed. \"Are you strong enough to hold me up?\" They were about the same size. \n\n\"Sure, let's try it,\" Becky laughed. Allison moved out of the water which showed Tom her lower front for the first time. As Becky leaned down by the steps Allison moved her legs over the woman's shoulders. \n\nTom almost died when he saw the dark shadow of the girl's bush through the bikini bottoms and when she moved her legs over his wife's shoulders the bottoms pulled to each side allowing his eyes the pleasure of seeing a lot of her dark pubic mound. As Matt climbed up on his back his eyes moved to Allison's small nipples which were now pointing outward through the wet tee-shirt. He was glad his lower body was underwater or they could all see his excitement. \n\nBecky had a little trouble holding Allison up and when Matt grabbed onto Allison's arms she almost fell. She would have fallen except Tom's hand was helping her to stay upright. She was puzzled as to why he would help until she glanced over her head and saw Allison's shirt sliding dangerously up over her stomach as her son pulled on it. Tom was helping her keep her balance because he wanted Matt to pull the shirt up over the tiny mounds. \n\nAllison didn't realize the tee-shirt was being pulled up as her hands grabbed onto the boy's shoulders. She had thought Becky wouldn't be able to hold her up but the woman must be stronger than she looked. \n\nThe shirt was almost to the bottom of her breasts when Becky moved backwards. Since Matt's hand held the bottom of the tee shirt it pulled outward and upward from Allison's body. Tom's eyes waited and waited until finally there they were. Two small white mounds covered on top with two tiny cherry tips. He lost his balance and fell into his wife's body. Matt toppled forward onto Allison. \n\nWhen she went underwater Allison realized her tee shirt was now over her bare breasts. She tried to push it downward but the boy still held on to it. Her eyes opened underwater and peered down over her bare breasts to the opened stare of the man's eyes onto her nakedness. She quickly twisted her body around to hide her virgin treasures. \n\nBecky didn't know what had happened but realized something did because Allison was quickly out of the pool and was pushing down her tee-shirt. \"I've got to leave,\" the blushing girl said without looking back. They watched her dripping body grab a thick towel and dry off. \n\n\"I'll talk to her,\" Becky said while moving quickly into the house still dripping wet. She followed the damp footprints up the stairs and into her bedroom. She gently knocked on the bathroom door. \"Allison, are you OK?\" \n\nAllison was stepping out of the wet bikini bottoms when the woman knocked. The tee-shirt was already lying on the floor and now she was stark naked. She glanced at the doorknob and saw it starting to turn. Before she could say not to come in the door cracked open and Becky's face looked in. Allison immediately turned and faced the other way. \"I'm getting dressed.\" \n\nBecky tried not to smile as she moved in and closed the door. The girl's bare ass was unbelievably wonderful. The woman grabbed a large towel and pushed it against the girl's back. \"You are still wet.\"\n\nAllison froze when she felt the woman drying off her back. She peeked into the large mirror on the side wall and saw Becky's eyes looking down at her bare hips. Her body was totally on fire now and had removed all resistance she had. When the towel moved down over her buttocks she closed her eyes and moaned slightly. \n\nBecky heard the moan and smiled. Her fingers pushed the soft terry cloth into the girl's soft cheeks and then lower across the tops of her thighs. As the towel moved up and under her ass cheeks her fingers moved off for a few seconds and touched the tenderness along the insides of her thighs. \n\nAllison was having trouble breathing and when the fingers touched her hot flesh she reached out and grabbed the sink countertop. Her legs were so weak now. The fingertips were only an inch from touching her dripping virgin pussy. As Becky's fingers moved slowly upward she felt the tickling of Allison's damp pubic hairs. The girl's legs slowly opened giving her the go ahead to touch her intimate passion. \n\nAs much as Becky wanted to touch the girl's pussy she wanted something else more. She didn't want to scare her off. The act of drying her off was more of a motherly move so she finished toweling the back of the girl. \n\n\"I can do the front,\" Allison said as she turned and took the towel from the woman. A slight smile came to her lips for the first time. \n\nBecky stepped back and made no effort to look away as Allison's slow movements teased as she dried the soft breasts and flat stomach. Both sets of eyes were on the towel as it pushed between the girl's open legs to dab dry the moist virgin gash. \n\n\"I hope we didn't scare you away,\" Becky whispered when the towel moved away and the thin pink slit behind the thick pubic growth appeared. \n\n\"I guess I'm nervous for the first time and like you said we have to get used to each other,\" Allison grinned as she put the towel on the sink and picked up her basic white panties. \"I'm an only child so I'm not used to nudity.\" \n\n\"You are very beautiful,\" Becky said as her eyes roamed the girl's body one last time. She opened the bathroom door and walked out. \n\nThe whole family was in the pool when Allison walked out to say goodbye. \"I'll be here on Tuesday,\" she said smiling. Her eyes captured the muscular back of Tom as he held Matt up over his head. \n\n\"I left a key to the house on the kitchen table,\" Becky said. \"We won't be home until around eight o'clock so go ahead and order pizza. There's money on the table for the pizza and also some extra for you.\" \n\n\"Thank you,\" Allison said. \"Goodbye Matt,\" she said waving at the young boy. \n\n*****\n\nAs Matt floated on a small blowup raft Becky and Tom huddled together in the deep end. Her fingers moved down to find the hard torpedo in his swim trunks. \"Ummm, what are you thinking about?\" ",
        "\"You,\" Tom lied as his fingers moved down and under the crotch in her bikini bottoms. \n\n\"Stop, we can't do this now,\" Becky giggled. His finger was rubbing against her so hard clit. \n\n\"I can't wait,\" Tom whispered. \n\nBecky pulled his hand from under her bottoms. \"Let's get out and get Matt in his bathtub. It will give us at least 30 minutes alone.\" \n\n\"Only 30 minutes,\" Tom said looking sad. \n\n\"I doubt if you last ten minutes,\" she laughed. She got Matt out and into his bathtub and when Becky walked into the master bedroom Tom was lying on his back naked with his hard-on pointing upward. \"You didn't start without me did you?\" \n\n\"Well maybe a little,\" Tom laughed. \"Hurry.\" \n\nBecky ripped off her bikini top and shoved down her bottoms. She jumped across his body and aimed his hot poker into her lava pit. \"OH GOD!\" she screamed as his hips moved up and down. \n\n\"Oh SHIT!\" Tom screamed as he climaxed. Seeing the babysitter's little tits had made him too excited. \"Sorry honey,\" he whispered. \n\n\"Why, I think you are still hard,\" Becky giggled as she took over the humping. Tom lasted a lot longer the second time but it was Becky's turn to climax quickly. \"Oh honey! FUCK ME!\" She screamed. \"Thank you Allison,\" the woman thought as they lay in each other's arms. \n\n*****\n\nAllison immediately called Tina when she got home. \"You are not going to believe what I'm going to tell you,\" Allison whispered into the phone. She had turned up the music in her room so her mother would not hear her. \n\n\"What?\" Tina quickly asked. \n\nFor the next five minutes Allison told her girl friend everything that had happened at the Jenkins house. \"He really saw your naked breasts?\" Tina asked. \n\n\"Yes,\" Allison giggled. \"And she saw me totally naked.\" \n\n\"Do you think she is bisexual?\" Tina asked. \n\n\"I'm not sure. She did look at me for a long time and I thought she was going to touch me down there. I saw her naked too.\" \n\n\"God, you are making me horny,\" Tina whispered. \"Do they need another babysitter?\" \n\n\"No, hands off,\" Allison laughed. \"I can't wait to see Jake tonight.\" \n\n\"Are you going to let him do it?\" \n\n\"I don't want the first time to be in the back seat of his car,\" she answered. \"The first time has to be in a bed.\" \n\n\"Are you sure you're not saving yourself for Mr. Jenkins?\" Tina laughed. \n\n\"Maybe,\" Allison giggled back. \"He is experienced you know.\" \n\n*****\n\nJake Brownfield expected another non-fulfilling night with his new girlfriend. He had known from the rumors that Allison was a virgin and at first thought of it as a challenge. Now after four months his horny meter was pegged to the right. His last girlfriend Samantha had told him she would take him back but he did like Allison a whole lot. He could tell something was different when she got into his car and gave him a deep wet kiss in front of her house. Normally she would not allow him to kiss her in case her mother was looking out the window. \n\n\"Wow,\" he said after their lips broke apart. \"What was that for?\" \n\n\"I got a babysitting job today and the woman gave me a big bonus,\" Allison giggled. \"Dinner tonight is on me.\" \n\n\"How much of a bonus did she give you?\" \n\n\"She gave me fifty dollars and I was only there about two hours.\" \n\n\"Where do you want to go?\" \n\n\"To that new seafood restaurant down by the beach,\" Allison replied as she pulled his arm into her braless covered breast. \"Maybe we can go for a walk on the beach after dinner.\" \n\nJust the thought of walking Allison on the beach at night with her only wearing a thin tee shirt and a short denim skirt caused some serious expansion in his jeans. So far he had only touched her naked breasts but his hopes to proceed further was quickly increasing. Twice Allison had to tell him to slow down as he sped towards the restaurant. \n\n\"Slow down,\" Allison said again as she watched him gulp down his fried shrimp. She knew his mind was on their beach walk later on. Her mind was too but she had not made up her mind just how far she would allow him to go tonight. \n\n\"That was some great shrimp,\" Jake commented as they walked hand in hand down the dark deserted shoreline. \n\n\"How would you know,\" Allison laughed. \"The food barely touched your tongue.\" \n\nShe looked over her shoulder and noticed they had gone pretty far from civilization. \"Let's sit on that log over there and look at the stars.\" Jake didn't object as he followed her and watched as she sat down being careful not to show him her panties. \n\nAllison shifted to the side to allow him next to her and immediately felt his arm go around her. Before she could say anything he pulled her body and lips to his. After a couple of minutes kissing she pushed him back. \"Down boy.\" \n\nJake sighed and leaned back against the bank of sand behind the log. He closed his eyes and tried to calm down. At first he thought he was imagining something but soon realized her fingers were softly caressing the top of his left thigh. He pretended not to notice as the fingers made bigger circles until they gently touched his rapidly growing bulge. \n\n\"Have you ever gone all the way?\" Allison asked as she gently tickled the side of the tent in his jeans. \n\n\"Yes,\" he answered as his hand moved lower on her back until his fingers touched the bare skin between her shirt and skirt. \n\n\"Was it with someone you loved?\" Her index finger explored up and over the packed in flesh between his legs. \n\n\"No,\" he moaned as her fingertip moved over the crown of his hard-on. He wished he could reach into his jeans and straighten his shaft but he was afraid it would scare her off. \n\nAllison marveled at the hardness yet softness under her fingertips. She had never seen, not less touched a guy's penis before. Her whole hand moved up and cupped his entire package. \n\n\"Oh God Allison,\" Jake moaned. He pushed his fingers quickly under the back of her skirt and discovered the top of her panties. He wondered if she would let him touch her bare ass. \n\nAllison giggled as she squeezed him and again heard him moan. She squeezed and he moaned again. Her mind quickly drifted to Mr. Jenkins's bulge in the bathing suit that day. She realized now that maybe Jake's penis was as big as the older mans. She knew it was dangerous but she had to see it. \n\n\"Can I see it?\" \n\n\"Really?\" Jake asked. His prayers were suddenly being answered. Without waiting for a \"yes\" he quickly grabbed his zipper tab and pulled downward while the other hand released the snap on top. He pulled his jeans open and again sat back. If she wanted to see it then she had to pull it out. \n\nAllison's eyes were like saucers when she saw the size of the tent in his boxers. She felt his fingers pull out on her panties and thought about stopping him but realized she would soon be seeing his naked penis. She sat upward to allow his hand to move under her silk undies and over her bare ass cheeks. It gave her enough courage to release the small button on the fly of his boxers and reach inside. \n\n\"It feels so..........,\" she started to say as her fingers curled around the side of the seven inch hard-on. \"So........hot....and..........hard.\" It popped out through the opening. \"AND BIG!\" she said loudly. Her tiny thumb moved to the crown and traced the ridge around to the damp hole on top. After all those years of imagining what a penis looked like she now held one in her trembling hand. \"Show me how to......you know,\" she giggled. \n\nJake's breath was ragged as his free hand covered hers and slowly moved it up and down until they were masturbating him. He did it a few times and pulled his hand away. Allison's hand didn't stop moving. \"Am I doing it right?\" \n\n\"Oh God yes,\" Jake moaned. His middle finger pushed between her buttocks and grazed over her small anus. \n\n\"What are you doing back there?\" Allison asked with another giggle but she didn't ask him to pull his hand away. \n\nJake really liked touching her ass but wanted to finger her pussy so bad. He tried to go slow down between her legs but as soon as he moved below her butt he quickly pushed between her legs and across her dripping slit. \n\n\"JAKE!\" Allison screamed. She let go of his hard-on and pulled his hand from under her skirt. Before he could say anything she stood and walked away. \n\n\"Shit, shit, shit,\" Jake muttered as he crammed his prick back into his boxers and zipped up his jeans. \"Allison wait up!\" \n\nAllison smiled when she heard him running to catch up to her. She had gone as far as she had wanted tonight. It was enough for her to know how a hard penis feels and enough to keep him panting after her. \n\n\"Allison I'm sorry,\" Jake whispered as he walked next to her. Allison gave him a stern look and took his hand. They walked silently back to the restaurant. \n\n*****\n\nOn Saturday Allison was sleeping in until the phone rang around 9:30AM. Her mother did not pick it up on the third ring so she drudgingly answered it, \"hello.\" \n\n\"Allison, this is Becky. I didn't wake you did I?\" \n\n\"No,\" the girl lied while trying to sit up. She yawned and shook the cobwebs from her head. \n\n\"Good, I was wondering if you wanted to have lunch with me today at the mall restaurant.\" \n\nAllison had promised Tina to go to the mall that afternoon. \"I'm supposed to meet my friend at 2 O'clock at the mall. \n\n\"That will work out great. How about noon?\" \n\n\"OK,\" Allison said but before she could ask what the lunch was all about the woman hung up. She tried to roll over and sleep some more but she kept thinking about why the woman could want to meet her. \"Maybe she gave me too much money the other night?\" she thought. She lasted to about 10:00AM and rolled out of bed and into the shower. After drying her hair she pulled on her favorite tight jeans and a halter blouse. Breakfast only took about fifteen minutes so she decided to go to the mall early and walk around. \n\n*****\n\nBecky also arrived at the mall early and went quickly to the Victoria Secret store. She picked out the sexiest and most sheer panty and bra set she could find. It was 11:50AM when she walked into the restaurant to get a secluded table. After telling the hostess what Allison looked like she sat down and ordered a glass of wine. \n\nAllison arrived at the restaurant right after Becky and saw the woman sitting in the rear booth. She waved and walked towards her. \"Hi.\" \n\n\"Thanks for coming on such short notice,\" Becky said smiling. \n\nAllison didn't waste any time. \"Why did you want to see me?\" \n\n\"That can wait. Why don't we have lunch first?\" \n\nThe two ordered large chicken salads and took their time eating as they got to know each other even more. Allison told Becky about Jake and even hinted that things had heated up lately. It was then that Becky dropped the bombshell.\n\n\"After you left last Thursday Tom and I had the most wonderful sex,\" Becky whispered. \"After being married for eleven years it is rare that sex is that hot and exciting.\" \n\nAllison took a drink of ice tea as the woman continued. There had to be a reason for her telling her this. \n\n\"Something really got us both excited and I know now that it was you.\" There it was....it was all laid out on the table. \n\n\"Me?\" Allison asked with a surprised look on her face. \"I don't understand.\" \n\n\"I think Tom saw your breasts when Matt pulled up your shirt in the pool. Plus he spent a lot of time looking at your body in the bathing suit.\" \n\n\"That was an accident,\" Allison quickly inserted. \n\n\"I know but that's OK,\" Becky said as she placed her hand on the girl's wrist. \"I have a proposal for you and if you say no I completely understand and it will be the last time you will hear of it.\" \n\nAllison's heart raced as she looked into the excited eyes of the woman. \"A proposal?\" \n\n\"Yes, I want you to tease my husband.\" \n\nThe girl pulled her hand back from the woman's and again took a big drink of tea. Surely this woman didn't think that she was a slut that would do nasty things. \"I don't think so.\" \n\n\"Don't answer yet,\" Becky said. \"There wouldn't be any touching or fooling around. All you have to do is flirt with him and give him discreet peeks at your body.\" \n\n\"You must have gotten the wrong impression of me the other night,\" Allison said as she pushed out of the booth and stood by the table. \n\nBecky realized the girl was in shock at her offer. \"Please think about it before you come to the house on Tuesday. If you don't want to do it...fine. I totally understand. But, if you want to do it....then wear what's in this bag.\" Becky reached down next to her and picked up the tiny Victoria Secrets bag. \n\n\"I don't think so,\" Allison said again but took the bag anyway. As she turned to walk away Becky said, \"And I'll give you twenty dollars an hour.\" \n\nAllison didn't acknowledge the offer but did store it away in her mind. Her legs were shaking as she walked out of the restaurant. She moved into the women's restroom and peeked into the bag. Her eyes widened when she saw the sheer underwear. \n\n*****\n\n\"Are you alright?\" Tina asked when she saw Allison sitting alone just staring into space. \n\n\"Yes...I think so,\" she replied. \"The strangest thing just happened to me.\" \n\n\"Not again,\" Tina laughed. \"First the babysitting job and now what?\" \n\n\"It's the babysitting job again. I just had lunch with the woman and she is offering me a lot more money if I flirt with and tease her husband.\" \n\n\"Tease?\" Tina asked not realizing what she meant but then it hit her. \"You mean really TEASE?\" \n\n\"Shhhh,\" Allison grinned as she looked at the old woman sitting near them. \"Yes and she wants me to wear these.\" She handed Tina the small bag. \n\n\"How much money is she offering?\" Tina giggled as she looked at the tiny bra and panties. \n\n\"Twenty bucks an hour.\" \n\n\"You said yes right?\" \n\n\"No I didn't say anything. She told me to think about it.\" \n\n\"Well, if you turn it down then let me have a shot at it,\" Tina laughed. \"Is he as handsome as you said?\" \n\n\"Yes, but what if the teasing goes too far and he makes a pass at me or something?\" \n\n\"Are you worried about the pass or what you might do if he does make a pass?\" Tina grinned. \n\n\"God Tina, he's a grown man. I'm not experienced enough.\" \n\n\"I'm sure he would be a great teacher,\" Tina giggled. \n\n\"You are supposed to talk me out of this,\" Allison said as she jokingly slapped her friend on her arm. \n\n*****\n\nSunday came and went, with Allison in a daze thinking about the offer. She had never really teased a boy like that before and had always been embarrassed when she had seen males peeking up her skirt. Now a woman was asking her to do it on purpose. Twenty dollars an hour was a lot of money and it wouldn't take too much work to pay off her car insurance. She closed and locked her bedroom door as she opened the bag and pulled out the panties and bra. \n\n\"God,\" she whispered after she put her hand into the panties to see how sheer they were. They basically didn't hide a thing. Her pussy was moist so she quickly wiped the dampness away before pulling the tight undies up her legs. Her eyes looked into the large full-size mirror on the back of her door as the panties moved over her thick dark bush. Not only were they thin but the thin strip did little to contain her curly tendrils. She turned and gasped when she saw her whole complete ass. The thong was buried deeply between her cheeks. \n\nThe bra also did a lousy job hiding her perky nips. She giggled as she thought about what Jake's reaction would be if he saw her wearing these. Before she put them on there was a 99% chance she would not wear them. Now the odds had dropped to about 50%. \n\nSomeone knocked on her door. \"Allison, it's me.\" Tina's voice rang out. \n\nAllison quickly grabbed her robe and slipped it on before she opened the door. \n\n\"Did I interrupt something?\" Tina smiled when she saw Allison's clothing on the bed. \n\nAllison relocked the door, blushed and turned. \"I'm wearing the sheer underwear.\" \n\n\"Let me see,\" Tina giggled as she sat on the bed. \n\n\"I don't think so,\" Allison laughed. \"They don't hide much.\" \n\n\"Well hell, I've seen everything anyway.\" \n\n\"Not like this!\" Allison again blushed. \n\n\"Come on,\" Tina smiled as she lunged forward and grabbed her girlfriend's arm. \n\nAllison tried to pull away but Tina was too strong. Before she could grabbed on to anything she felt her body falling onto the bed. She tried to push back up but Tina pushed her back down and pulled open the robe. Allison's nearly naked body now lay exposed to Tina's wandering eyes. \"OH MY GOD!\"\n\nAllison grinned. \"Do you think it will get him excited?\" \n\n\"Hell yes, it's getting me excited,\" Tina laughed. She gently traced her fingers slowly up from Allison's nearest knee to mid-thigh before Allison grabbed her wrist. \n\n\"Stop kidding around.\"\n\nBut Tina didn't laugh back. \"Who says I'm kidding?\" \n\nBefore Allison could respond Tina jerked her arm from her girlfriend's grasp and pushed her fingers swiftly under the sheer panties and into the thick love nest. \n\n\"TINA!\" Allison shouted. \"What are you.................\" Suddenly the fingers discovered her dripping pinkness and the small hard clitoris. \"STOP!\" Allison said with the last bit of will-power left in her. But Tina was not to be denied. One hand pulled the panties to the side while to give her total access to the girl's virgin pussy. \n\n\"Tina....\" Allison repeated. Her resistance had turned into unrestricted lust. \"Don't,\" she whispered as she slowly opened her legs wider and wider. \n\n\"Did I ever tell you about the time last summer when my older cousin visited and when we shared a bed?\" Tina asked as she moved her head and shoulders between Allison's legs. \n\nAllison didn't answer as she blocked out the fact that her long-time girlfriend was about to kiss her......\"OH GOD!\" She cried when the thin slippery tongue pushed through the dark shrubbery and into her wanton gash. Her fingers curled around Tina's head and pulled it and her mouth even tighter against her pussy. \n\nTina tried to remember what all her cousin did to her and soon had Allison's moaning and gasping. She had wanted to try it with Allison but until now didn't have a good opportunity. She remembered how she had climaxed for the first time and wanted to give Allison the same immense feeling. She held her breath for almost a minute as her tongue flicked and licked up and down the hot sheath. \n\nAllison knew her mother was downstairs and had already made too much noise. Luckily the stereo was blasting as usual to drown out the next and last series of screams. \"OH TINA....YES, YES, YES!\" Her body shook uncontrollably before the fireworks ignited and the whole house came crashing down. \n\nTina held on to her hips and giggled at the cries of pleasure. It was the first time she had ever given another person sexual release and realized it was almost as good as receiving it. Finally after a whole minute of moaning Allison slowed down. \n\nTina moved her body up onto the bed until her face was next to her girlfriends. \"So I take it you liked it,\" she giggled. \n\n\"I didn't know....,\" Allison managed to get out of her mouth. She turned and faced Tina. \"You and your cousin...\" \n\n\"Yes, she did the same to me but I didn't get a chance to return the favor.\" \n\nAllison smiled and moved into Tina's arms. \"Thank you,\" she whispered as she gently kissed her on the side of her cheek. \n\nTina slowly turned her head until they were looking each other eye to eye and pushed her soft lips forward until they pushed against Allison's. Their eyes remained open as both of their tongue's peeked out and flicked together. \n\n\"Like this?\" Allison asked as she licked up and down Tina's tiny tongue tip. \n\n\"Tuck on hit too...\" Tina said with her tongue sticking out.\n\nAllison did as Tina said until just the tip was between her lips. \n\nTina's pussy was on fire as Allison sucked on her tongue pretending it was her clit. She wanted relief but wanted it from Allison. But, she was not sure just how far the girl would go. She pulled her tongue back. \"Touch me.\" ",
        "Allison panicked at first realizing what Tina wanted her to do. She looked down at Tina's lower stomach and slowly released the snap on the top of her zipper. The zipper made a loud noise next as the girl's tiny pink panties appeared. She could not back out now so she lifted the elastic waistband and pushed her trembling fingers under the silky covering. \n\nTina's hips rose up as Allison's fingers explored through her soft pubic mound. Only an inch more and she would be.......\"Right there,\" Tina said when the invader pushed over her pleasure button. It only took a few rubs until Tina's body climaxed. \"Finger me,\" she whispered in Allison's ear. \"Don't stop....please don't stop.\" \n\nAllison giggled when Tina came. \n\n***** \n\nIt was Monday evening and Allison still had not made a decision to wear the undies and tease the husband. It was so naughty and so out of character for her. School had flown by so fast because all she could think of was the $20 per hour. If she worked for five hours she would make $100 and it was just to show her underwear. Becky had told her the decision would be up to her and that she would not ask again. It was after 1:00AM that night when she finally fell asleep. \n\n*****\n\nBecky kept staring at the large decorative clock on the wall in the small conference room. A young couple was in the process of picking out homes they would like to visit and since it was all computerized now their specific wants could quickly narrow down an accurate listing of homes. Her heart slowly increased as she looked at the clock. It was 4:00PM which meant Allison had picked up Matt and was going over his homework from School with him. \"Was she or was she not wearing the sheer undies?\" she kept asking herself. \n\n\"Are you OK?\" Tom asked for the third time. \"Your mind seems to be somewhere else.\" \n\n\"What? Well yes, I'm thinking about our trip to Florida in a few weeks. The kids will be off school and I was wondering if Allison would come with us to help with Matt.\" \n\nTom sat upward in his chair. The young couple was discussing the homes and was not listening to the conversation. \"That's a great idea,\" he said smiling. His mind thought back to the tiny cherry nipples and cute little butt on the babysitter. \"We would have to pay her quite a bit to go with us.\" \n\n\"We have a bunch of vacation money budgeted,\" Becky grinned. \"I checked already and we can get a two bedroom condo just outside the Disneyworld gate.\" \n\n\"Can we get away for a whole week?\" Tom asked excitedly. \n\n\"Yes, I'm keeping that week closed for home closings.\" \n\nIt was about 5:00PM when the young couple left when Becky suggested they go home early. \n\n\"I've got a few phone calls to make,\" Tom replied. \"They shouldn't take any longer than ten minutes.\" \n\nBecky knew he was now hooked on Allison because he would never leave this early in the past. She closed down the coffee maker and put some stamps on a few letters that had to go out. When she returned from the corner mailbox Tom was waiting impatiently for her. She smiled and jumped in the car that was already running. \n\nAllison and Matt were at the kitchen table reviewing his math homework when she heard the garage door open. \"Seems your parents are home a little early tonight,\" Allison said to Matt as she pushed down the short denim shirt. She smiled when Becky and Tom walked through the door from the garage. \n\n\"You're home early.\" \n\n\"It doesn't happen every day,\" Becky said as she peeked down at the girl's tan thighs. Did she or didn't she? \n\n\"Allison doesn't have to leave does she?\" Little Matt asked with a sad puppy face. \n\n\"No, no, of course not,\" Becky quickly replied. Tom had worked his way around the table to get a good shot at the young girl's tender thighs. \"Why don't we order pizza and watch a movie?\" \n\n\"Goody!\" Matt yelled as he jumped on Allison's lap to hug her. \n\nAllison blushed when Matt pulled down onto her shoulders which caused the loose vee-neck blouse to pull dangerously down her pure white chest. She grabbed the blouse just as her bra was about to appear. \"Careful,\" she whispered to Matt. \n\n\"Tom, why don't you take Allison and Matt into the den and set up the DVD. I'll call for the pizza. Is pepperoni OK with you Allison?\" \n\n\"Yes, ma'am,\" the girl grinned. She noticed the man's eyes had not left her short skirt since he walked into the kitchen. Matt jumped from her lap and pulled on her arm. Allison laughed as she raced to keep up with him. \n\nTom followed the youngsters into the den and smiled as Matt led Allison to the long sofa. He quickly inserted the DVD and took the remote control to the large chair directly across from the sofa. It was apparent to everyone but Matt that Tom was now in a great position to peek up under the short skirt when Allison moved her legs. \n\n\"Yes, I would like to order a large pepperoni pizza,\" Becky said into her cell phone as she looked into the den from the kitchen. The back of Allison's head was seen on the sofa while Tom's smiling face was across the room. \"30 minutes OK.\" Becky gave them her address and phone number and waited a few more minutes to allow Allison to get comfortable. God, she wished she knew if the girl was wearing the sheer underwear. \n\n\"I'll be down in a few minutes so go ahead and start the movie without me,\" Becky said as she walked into the den. One quick look at Allison's legs showed her knees squeezed tightly together. Shit, maybe the girl was not going for it. Becky moved quickly up the stairs to change into her jeans and a tee-shirt. \n\nBoth Allison and Tom were glad to see Becky leave. As soon as she was out of sight Allison leaned towards Matt and started to tickle him. \"The tickle monster is going to get Matt,\" she laughed. \n\nTom grinned too but not because of his son getting tickled. As Allison leaned towards Matt her legs parted just enough for him to see a dark shadow up under her skirt. His own pepperoni stick was pushing up the front of his slacks as her legs opened wider and wider. \"Shit she had to be wearing black panties or.........Damn, maybe no panties at all,\" he thought. \n\nAllison could feel the cooler air on her upper thighs now which mean the man could see pretty far under her skirt. She laughed as she jerked back away from Matt and squeezed her legs back together. Teasing was not so bad after all. \n\n\"Hey!\" the boy yelled. \"I'm going to tickle you now!\" \n\nAllison thought she was strong enough to hold him back but the leverage he got from standing on the sofa was enough to push her onto her side. The boy fell across her upper body which caused her legs to shoot upward and outward. Suddenly only the sheer panties were covering her body beneath her navel. \n\n\"Fuck,\" Tom muttered softly when her skirt moved up to bunch at her waist. The panties might have not been there at all because he could see the thick dark growth of her pubic mound. Matt was lying directly in front of her face so she could not see him staring at her virgin bush. \n\n\"OH GOD MATT LET ME UP,\" Allison cried out. She had wanted to give the man some peeks but not a view of her whole lower stomach. She tried to reach under him and push down the denim but his body stopped her attempt. The only thing she could do was to turn her exposed pussy around. She lifted the boy high enough to do just that and suddenly discovered the man could now see her exposed ass. \n\nTom didn't think it could get any better but now her pink buttocks glistened in the bright overhead light. The thin strap of the panties was pushed deep down into the soft cheeks. The sight was so hot for him he had to leave otherwise he would jump down onto that wonderful ass. \n\n\"Let me up Matt,\" Allison said to the boy. She knew she would have to face the man with the knowledge he had now seen everything she had. As Matt jumped off Allison brushed her hair back into place and slowly turned to look at Tom, except Tom was not there. \n\n*****\n\nBecky was pulling on her tee shirt when the bedroom door open and Tom almost tackled her onto the bed. \"What are you doing?\" she asked. Suddenly the shock turned into laughter. Allison had done it again. \"Tom we don't have time,\" she whispered as she lifted her hips to allow him to pull her jeans and panties down at the same time. \"The pizza man will be here in twenty minutes,\" she said as she watched him pushed his pants down his legs and pull out the one-eyed monster. \"Come to Momma,\" she whispered into his ear as the huge hot tip split apart her pussy lips. \n\n\"Fuck me.\" \n\n*****\n\nThe pizza happened to show up almost five minutes earlier than promised so Allison walked up the stairs to tell Becky and Tom. When she got to the bedroom door there was no mistaking what they were doing. \n\n\"DON'T STOP!\" Becky screamed as his stomach slapped against hers. \"YOU ARE SOOO BIG!\"\n\nAllison's own body was on fire as she listened to someone fucking for he first time. She knew she had the pizza money in her purse to pay for the pizza so she moved back downstairs to get rid of the pizza guy. \n\n*****\n\n\"Why didn't you tell us the pizza was here?\" Becky grinned at Allison when she walked into the kitchen. \n\n\"You were busy,\" Allison giggled as she took a big bite of the hot slice. \n\n\"Thanks to you,\" Becky whispered in her ear before Tom walked around the doorway. \n\n\"I'm starving,\" he grinned as he sat down across from Allison. \n\n\"Tom and I were wondering if you would like to go with us to Disneyworld in a few weeks during spring break.\" Becky asked Allison as they cleaned up the kitchen. Tom and Matt were in the den. \n\n\"Where would I sleep?\" Allison asked suspiciously. \n\n\"We have a two bedroom condo,\" Becky giggled. \"I have just the nightgown for you to wear.\" \n\n\"Don't you think this teasing will go too far?\" Allison asked. \"Also, I was planning on spending my spring break with my girlfriend Tina.\" \n\nBecky reached into her purse and pulled out a $100 bill and handed it to Allison. \"Too bad I'm sure you would just love Florida.\" Allison held up the bill and looked at it. She had never owned a $100 bill before. \"I'm sure Tina will understand,\" she grinned as she pushed the money deep down into the small pocket on the side of her skirt. \n\n*****\n\nThe trip to Florida was leaving early on a Saturday morning so Allison invited Jake over on Friday night for one last night. Her body had been on fire since the panty flashing at the Jenkins's house. Showing her body to Mr. Jenkins's had been a big turn-on and since her mom was out that evening she had decided to take her relationship with Jake to the next level. \n\nThey were in the den watching a movie when Allison said she was going to change. \n\n\"Change?\" Jake repeated. \"Why do you need to change?\" Suddenly it hit him that she was going to put on something sexy for him. \"Holy shit,\" he whispered as he watched her slim body walk up the stairs. \n\nIt seemed as if she had been gone for hours when he finally heard her door open upstairs and saw her bare feet and legs walking down the stairs. His eyes traced up her bare calves to her bare thighs. \"Shit,\" he gasped as he wondered if she was naked. Then he saw the bottom of a white lace baby doll nightie. \n\n\"Wow!\" Jake exclaimed when she walked into the room. The baby doll top had thin straps on her shoulders that fell to the tops of her bare chest. He could see the rise of her creamy white petite breasts and the dark shadows of her small nipples. \n\n\"Well do you like?\" Allison teased as she did a slow 360 degree turn. \n\n\"Hell yes....I mean.....God Allison you look so........\"\n\nBefore he could finish she turned and pulled up the back of the nightie until her naked buttocks appeared. She giggled and quickly dropped it. She turned and saw him now sitting forward about to reach out and grab her. \n\n\"No, no touching,\" she commanded as she jumped backward. \"If you try to touch me I'm changing back into my other clothing.\" \n\n\"OK........,\" he quickly agreed. \n\nAllison smiled and moved up to his knees. She could see the huge bulge in his jeans and knew it had to be hurting him. \"Take off your clothes.\" \n\n\"What?\" Jake asked even though he had clearly heard her command. \"You want me to strip?\" \n\n\"Yes, if you strip then I'll strip,\" she giggled. She had never seen a totally naked male before.\n\nJake nervously pulled his tee shirt over his head and smiled. Even though he had intercourse with his last girlfriend they had always done it in the dark. Now, he was going to show his nakedness out in the well lit room. \n\nAllison smiled when she saw how nervous he was. Boys talk a big story but when the chips are down they are just as scared to take off their clothes as a girl is. \"Faster.\" \n\nJake quickly released the snap on his jeans and pushed them down and off his feet. He sat back in only his boxers which had a large tent in front of them. \"How do I know you will do it too?\" \n\n\"You don't,\" she smiled. She knew she was holding the trump card. \n\nFor a fleeting moment Jake thought about calling her bluff but was afraid she would just walk back upstairs. \"I hope your mother won't be coming home early,\" he laughed as he lifted his hips and pushed the tight elastic over his raging hard-on. It popped out proudly and pointed upward as he kicked the boxers onto the jeans. \n\n\"Your turn,\" Jake smiled. \n\nAllison couldn't take her eyes off of it. On the beach she had not really seen it in the dim light. There was no way her tiny pussy would ever take such a massive ram-rod. \"I think I changed my mind,\" she teased as she turned to take a step towards the doorway. Suddenly Jake jumped up and blocked her way. \n\n\"What are you doing?\" she asked suddenly afraid she had taken the teasing game too far. Her body moved slowly backwards away from the long prick pointing up at her small chest. \n\n\"Come on Allison take off your nightgown,\" Jake said with his arms crossed. \n\n\"No touching,\" she repeated to make sure he was not expecting anything more. \n\n\"Agreed.\" \n\nAllison was holding the trump card again as her trembling fingers pulled the baby doll top up over her stomach. She hesitated just under her breasts and then gave it a quick jerk up and off of her head. She saw his eyes capture her naked cupcakes with small cherries on the top. \"They are not very big.\" \n\n\"They are beautiful,\" Jake said smiling. \n\nShowing Jake her breasts was a whole lot different than the time Mr. Jenkins saw them in the pool. She didn't have to look down at them to know her nips were rock hard. Her eyes never left Jake's rocket as she slowly pushed down her skimpy silky white panties. \n\nThe only sound in the room was the deep breathing from within their bodies. Allison stepped out of her panties and stood erect. They both were lost not sure of what to do. Jake started walking towards her. \n\n\"No touching,\" Allison whispered before she bit on her lower lip. She wanted so much to grab his hard penis but knew he would want to do the same to her and probably more. Both watched the tip of his shaft as it moved to within two inches of her upper stomach. \n\n\"God Allison you're driving me nuts,\" Jake groaned. His begging eyes told how much suffering he was in. \n\nAllison relaxed somewhat after realizing she was once again in control. \"Kiss my lips....but just my lips.\" \n\nJake sighed and leaned his upper body forward until only their lips touched. He fought the urge to grab her body tightly against his. Her tongue licked across his lips until both of their mouths opened for a deep wet kiss. Allison broke the kiss and said, \"Kiss my nipple...but just my nipple.\" \n\nJake quickly lowered his face until his lips were even with her right nip. His eyes guided his lips until they pushed against the hard digit. \n\nAllison moaned when his mouth opened and his tongue flicked onto her small bud. She wanted to hold his head there but it was against her no other touching rule. \"The other one.\" \n\nJake's lips left a light trail of dampness as he moved from the right breast to the left one. He peeked down and saw her dark bush only a few inches below his mouth. He wondered if it was his entr\u00e9e. He hungrily gobbled up her other nipple and sucked until she moaned again. \n\nAllison tried to gather enough nerve to tell him to kiss between her legs like Tina had done but was having trouble finding the words, \"Kiss me.........down.........\" \n\nJake didn't wait for her to finish as he dropped to his knees in front of her and pushed his face between her trembling thighs. His nose parted her thick bush enough for his tongue to find her damp slit. He had performed oral sex on his last girlfriend but it was in the dark. He wished he could see her pussy but it was impossible in the position they were in. His prayers were answered when Allison pulled away and sat down in the large chair next to her. He looked at her face and saw her smiling as she opened her thighs as far as she could. \"Don't you want to finish?\" \n\nJake walked on his hands and knees like a new puppy heading to its food dish. With a quick turn at her knee his face headed right towards Pussyville. He stopped when he saw her opened gash. \n\n\"Come on puppy,\" Allison giggled. Her eyes closed when Jake's tongue once again flicked across her hot and hard clit. It only took a minute for Allison's body to explode. \"NOW JAKE NOW!\" \n\nA few minutes later Allison opened her eyes and looked at the clock. They still have 30 minutes of safe time and she wanted to do some tasting of her own before her mother came home. \"Move back and take my place.\" \n\nJake's heart skipped a few beats when he realized it was finally his turn. He hurried into the chair and waited for Allison to get onto her knees. \n\n\"Close your eyes and don't peek,\" she giggled. \n\nJake wanted so bad to watch her explore his manhood but knew he had to keep playing her little game. His hard-on was now at full mast as she moved between his thighs. With his eyes closed his sense of touch was now in control. Where would she kiss or touch first? Finally he felt some light pressure on his hard sac and wondered if she was kissing him with her lips or tongue. Then he realized it was warm air. Shit, she was blowing on his balls. \n\n\"Ahhh,\" he moaned while pushing his hips forward trying to make contact with her mouth but she only giggled and moved backwards. He had wanted a blow job but not like this. \n\nJake thought that she could not drive him crazier until the hot air moved slowly up his hard-on until it reached the tip. Her mouth had to be so close. He tried to resist but couldn't as he peeked out to see Allison's puckered lips almost touching his damp crown.\n\n\"OH GOD PLEASE...,\" he begged. \n\nShe giggled. \"Do you want me to kiss it?\" \n\n\"Yessssssss,\" he gasped out at her. When her soft lips touched the mushroom head his hips pushed upward until his tip pushed between her lips. He thought she would pull back but she instead opened her mouth and sucked in his whole crown. \n\n\"OH FUCK...,\" he groaned. \n\nShe popped her mouth off and licked her lips. \"Close your eyes.\" \n\nJake again shut his eyelids and breathed out heavily when her mouth returned. As she held the large tip in her mouth her tongue explored him. He knew her mouth was too small to really give him a read blowjob but right now knowing Ms. Virgin had his prick in her mouth was more than enough to bring him to the summit and over the top. \"I'M COMING!\" he shouted to give her a warning but he was too late as his hot juices filled her mouth. She tried to pull away and breath but the cum filled her throat. She pulled away and gagged and coughed. \n\n\"Oh shit I'm sorry Allison,\" Jake said as he moved down on the floor next to her. She finally took a big breath and grabbed her nightgown. \n\n\"I think you better leave,\" she said as she ran from the room and up the stairs. \n\n\"Shit,\" he said as he pulled on his boxers and jeans. Just when he thinks things are rolling along well something happens. He waited a few minutes to see if she was coming back down but realized she wasn't so he left. ",
        "*****\n\nAllison gargled and brushed her teeth to get his taste from her mouth. She called Tina and told her the big news. \n\n\"You gave him a blowjob!\" Tina exclaimed on the other end of the line. \n\n\"Well not really a blowjob. More like a tip job,\" she laughed. She hung up the phone and spent the next hour packing for her trip. When her mother came home she kissed her goodnight and went to bed. The Jenkins' would be there early the next morning. \n\n*****\n\nIt was an eight hour drive to Disneyworld so leaving at 6:00AM would get them into Orlando around three since they would stop a few times along the way. Tom and Becky sat in the front at first while he drove. Matt and Allison quickly fell back to sleep in the rear of the large SUV. \n\nAround 8:30AM they stopped for a quick snack at which time Becky took over driving and asked Matt to move up front with her. It left Tom and Allison in the rear seats. \n\n\"So what does your boyfriend think about you going away this week?\" Tom asked the young girl now sitting so dangerously close to him. \n\n\"He wasn't happy about it,\" Allison grinned at the handsome man. She was wearing loose cotton shorts and a baggy tee shirt. \n\n\"I don't blame him,\" Tom smiled. Allison had her feet up onto the back of Matt's chair which caused her loose shorts to fall back onto her lower stomach. Since she was slightly facing towards the window the chance of seeing up under the shorts was very slim. At least it was until she moved her pillow to the window and turned to face him. \n\nAllison's eyes were closed but she knew he could now see the sheer panties again under her shorts. It was so obvious of Becky to bring Matt up to the front with her so she could do her magic on Tom. The poor man had six more hours in the car with her. \n\nTom tried not to keep staring at the darkness behind Allison's sheer undies but his eyes couldn't move away. He had thought the flashing the other night was an accident but now realized the girl was doing it on purpose. Maybe she was not as innocent as she made on to be? His wife and son seem to be distracted playing a road game in the front so after about fifteen minutes he decided to take a big gamble. \n\n\"Why don't you lie back and put your feet on my legs?\" Tom whispered to Allison as she pretended to be sleeping. Before she could object Tom grabbed her ankles and pulled her feet onto his legs. \n\nAllison was not prepared to having her body touch his. So far it had just been looking. She thought about pulling away but her body wouldn't let her. She moved the pillow lower and moved onto her back. Again her shorts moved down her thighs until her panties were once again exposed. She wondered just how brave he would be with his wife and kid in the front seats. \n\nTom waited a few minutes before he slipped his hand onto her ankle. He felt her body jerk slightly but she didn't open her eyes or object. His fingers did not move for almost five minutes when his fingertips made small circles around her ankle bone. This time she did not move. \n\nHis touch was driving her pussy mad with lust. Her legs had opened so far that she could feel the cool air close to her hot pussy. This meant the panties had pulled to the side allowing much of her bush to be exposed. His fingers were moving up and away from her ankle and were now at the bottom of her calve. \n\n\"There's a blanket in the back if you are cold,\" Becky yelled from the front seat. Even though she had been playing games with Matt she heard and could see what was going on in the rear. If Tom was turned on so much just seeing Allison, she knew he would be hornier if he got to touch her some. \n\nTom quickly pulled his hand away when Becky yelled but relaxed and smiled when she suggested the blanket. He reached behind him and pulled the blanket down over Allison's prone body. Only her head was exposed as she smiled and again pretended to be asleep. \n\nTom's fingers wasted no time as they returned quickly to her tender calve and then slowly up to her knee. As they made slow progress up between Allison's thighs the girl shifted her hips closer to him so he wouldn't have to reach as far. After about five minutes his fingers were touching the dampness close to her holey ground. \n\n\"Daddy will you play the license game with us?\" Matt said from the front. \n\n\"Let your daddy relax,\" Becky said. \"He will drive again later.\" She looked into the mirror and saw the beads of sweat pouring down from his temple. \n\nAgain Tom froze his fingers when his wife spoke. He realized he was taking too big of a gamble trying to touch this girl's pussy with his wife nearby. What if she really was sleeping and woke up with his finger in her slit? \n\nAllison was frustrated because it was taking him forever to reach her hot pussy. Suddenly she felt his fingers slowly pulling away and reached down to grab them. Her eyes opened and looked into his. \n\nTom about shit his pants when Allison grabbed his hand. At first he thought she would be pissed but realized when he saw her smile that she wanted him to touch her. It was decision time again for him and it didn't take much to allow his fingers to be pulled into the thick damp curly bush waiting so impatiently for him to arrive. His fingers curled their way into the wet mat and as he finally touched the ridge of her damp lips the car slowed and moved onto the exit ramp. \n\n\"I think its time for a potty break,\" Becky grinned. She knew Tom had possibly touched the young girl's privates but didn't want him to do it very long. \n\nAgain Tom pulled his hand back. \"I don't need to go,\" he said horny as hell. \n\n\"I do,\" little Matt said. \n\n'Me too,\" Allison giggled as she pulled the blanket away which gave the desperate husband a view for the first time of her thin pink slit. She quickly pushed down her shorts and moved her foot from his lap. \n\nBecky and Allison went into the ladies room and Tom took Matt into the men's room. \n\nWhen noticing no one else was in the restroom Becky smiled at Allison. \"I notice Tom's pants were quite full when he left the car.\" \n\n\"I.........he........he put my foot on.........his lap and....,\" Allison stuttered. \n\nBecky laughed. \"I could tell what was going on. I figure by the time we get to the Florida border he will be ready to jump me.\" \n\nAllison was nervous because the man had done more than just look at her. \"He was touching my leg and...\" \n\nBecky smiled as she moved in front of the girl and put her hand on the inside of the girl's thigh. \"Did he touch you here?\" \n\nAllison moaned when the woman's fingers quickly traced up under the loose shorts and pulled her panties to the side. Before she could object her finger tips pushed into her damp bush and into her dripping slit. \"OH GOD!\" the girl moaned again as she put her hands on Becky's shoulders for support. \n\n\"No, not like that,\" Allison said trying to get her breath. The woman's fingers quickly explored her virginhood. \n\n\"Wow, a real virgin,\" Becky whispered. Her finger returned to the girl's hard clit. \n\n\"Someone might come in,\" Allison panted as she looked over the woman's shoulder at the closed door. \n\n\"I don't mind my husband looking at your pussy but don't get any ideas,\" Becky whispered. Her fingers were quickly bringing the girl to a climax. \"Agreed?\" \n\n\"Oh God Yes,\" she moaned. She forgot about the door as her body exploded. She pulled Becky into her as she fought back a scream. \n\nBecky smiled and moved into one of the stalls. She pulled out a bunch of toilet paper and handed it to Allison. \"Here dry off.\" \n\nAllison did as Becky said and as they exited the restroom Becky whispered, \"When you get horny I'll take care of your needs.\" \n\n\"OK,\" Allison giggled.\n\n*****\n\nBecky drove for another two hours and Allison continued to sit in various positions next to Tom to give him views of her panties and even a few shots down her loose tee shirt. He asked if she wanted the blanket again but this time she said no. She didn't want Becky to get the wrong idea. \n\nAfter a break for lunch Tom took over the driving and it was Allison and Matt again in the rear seats. They played some games and even watched a DVD on the drop down screen. Around 3:00PM they pulled into the condo parking lot. \n\n\"We're here,\" Tom announced. \n\n\"GOODY!\" Matt screamed. \"Let's go to Disneyworld!\"\n\n\"Not today honey,\" Becky said. \"Today we will just relax and go in the pool.\" \n\nAllison followed the couple and their son into the condo doorway and noticed it was not as big as they had made on. It had one bedroom and bunk beds placed in a long hallway. \n\n\"This is not what they told us,\" Becky said. She immediately got on the phone and called the front desk. After a heated conversation the woman slammed the phone down. \"They said the literature said two sleeping areas and not two bedrooms.\" \n\n\"Can I sleep on the top bunk?\" Matt said smiling as he climbed up the small ladder on the bottom. \n\n\"Sure,\" Tom laughed. \"As long as Allison doesn't mind sleeping on the bottom bunk I think this place will do fine.\" \n\n\"It's OK with me,\" the girl said smiling. She caught the man's eyes looking at her ass in the large mirrored wall. \n\n\"There's only one bath,\" Becky said still upset with the place. \n\nTom pulled her into him for a hug. \"Relax and have some fun,\" he whispered. His fingers pushed dangerously down to the top of her buttocks. \n\n\"The trip has gotten him hot,\" Becky thought and she needed a quick release herself because fingering the girl had increased her body temperature as well. \"Why don't Tom and I unpack and take a short rest while you two unpack your stuff out here?\" \n\nAllison could see Tom's hand on his wife's butt and grinned. \"Come one Matt I'll help you unpack.\" \n\n\"I can do it myself,\" the boy said as he quickly climbed down from the top bunk. Before Allison could grab her suitcase the bedroom door was closed and she could hear their bodies falling onto the bed through the thin door. Then the music from the small alarm clock soon rang out through the door. \n\n\"Hurry,\" Becky begged her husband as she lay naked on her back with her legs spread wide open. She watched as he stripped off his shirt and shorts and pushed down his boxers. \"Fuck me,\" she whispered while sucking on his tender earlobe. \n\nTom was about to pop as soon as his shaft pushed into the hot damp entrance between her thighs. His eyes were closed as he pretended it was Allison's body he was pushing in and out of. \n\n\"Slow down,\" Becky moaned as she felt his hips racing to the finish line. The problem was that she was not there yet. \n\n\"OH GOD!\" he cried as his hot juices splashed against the rear of her oven. \n\n\"Oh no not yet,\" Becky groaned. Her hips raced to catch up but it was too late. He tried to pull out but her fingers clutched onto his hips. \"Not yet.\" \n\n\"Honey I'm done,\" Tom sighed. \n\nBecky was desperate as she bit on his ear again. \"I saw you looking at Allison's body when you two were in the back seat.\" \n\nTom panicked as he thought about lying to her. \"I................uh........\" \n\n\"It's OK,\" she giggled. \"You can look as much as you want.\" She felt him relaxed and continued her verbal teasing. \"I know you saw her little titties in the pool last week.\" Suddenly she felt a small twitch of his soft penis. \n\nTom couldn't believe his wife was talking like this. \n\n\"What else have you seen?\" She asked as she sucked his earlobe in and out of her mouth like a small prick. \n\n\"Becky.....oh....,\" he moaned. His mind brought back mental images of her dark bush and cute little round ass. He felt his prick getting harder and harder as his wife talked about the sweat young thing in the next room. \n\n\"Have you seen her panties?\" Becky whispered as her tongue jabbed into his ear. \n\n\"Ye..........yessss,\" he moaned. His prick was now hard enough to start round two. \n\n\"Ummm,\" she moaned when she felt his shaft swell to push again at the sides of her love tunnel. Her hips rose up to meet his. \n\nBoth adults soon reached a hot passionate level deep within their bodies. It was the next words from Becky's mouth that put them both over the edge. \n\n\"Fuck me. Pretend I'm Allison.\" \n\n\"Oh FUCK!\" Tom groaned. His wife was telling him to imagine it was the girl's pussy he was now fucking. \"Oh........Allison.\" he moaned. \n\n\"Fuck me Mr. Jenkins,\" Becky whispered in his ear as she held on to his pulsing hips. \n\n***** Matt had gone to the bathroom so Allison moved over to the bedroom door to listen to their lovemaking sounds. She heard Becky ask if he had seen her panties. She moved her ear closer to the door and heard his answer of yes. \"Stay in there a little longer,\" Allison thought as she looked at the bathroom door. \n\n\"Fuck me. Pretend I'm Allison,\" she heard the woman say. Suddenly the squeaking of the bed got louder and louder until it was banging against the wall. She giggled when she heard Becky say, \"Fuck me Mr. Jenkins.\" And this was just the start of the week. \n\n\"What are you doing?\" Matt asked when he opened the door and saw Allison standing by the bedroom door. \n\n\"Just getting my pen,\" Allison quickly replied as she opened her book bag and pulled out a pen. She grabbed the boy's hand and led him back into the living area. \n\n*****\n\n\"God that was fantastic,\" Becky said as they lay on their backs looking up at the small light fixture over the bed. \n\nTom smiled as he turned and looked at his wife. \"You don't care if I look at Allison.\" \n\nBecky curled her fingers around his soft penis. \"Look all you want but this is mine.\" She smiled as she thought of the past week which was one of the most passionate weeks of their marriage. \n\n*****\n\nIt was after dinner on the way out that Tom whispered in Allison's ear as they waited for Matt and Becky to come out of the restroom. \"You know we are very happy with the way you are with our son. I'm going to give you an extra $50 a day.\" \n\nAllison looked at him and smiled. \"You don't have to give me any more money.\" \n\n\"Shhh,\" he grinned. \"This is just between you and me. My wife does not need to know.\" \n\n\"Are you sure?\" Allison said realizing she would be now making $130 a day. \n\n\"Yes, but it has to be our secret,\" Tom said smiling. Before he could react Allison moved forward and gently kissed him on his cheek. \"I won't say a word,\" she whispered. \n\n*****\n\nIt was about 9:00PM when they returned to the room and Matt had to take a bath before going to bed. While he played in the tub the other three sat around watching a movie. Allison was wearing her jeans and a tee shirt and Becky was wearing a dress. \n\n\"Tom, will you check on Matt and tell him to get out of the tub?\" Becky asked. \n\n\"Sure,\" the man said smiling before he stood and walked into the bathroom. \n\nAfter he left Allison turned to Becky. \"Do you want me to wear that nightgown tonight?\" \n\nBecky chuckled. \"I don't think Tom has much left for today. Let's save it for tomorrow night.\" \n\nAfter about ten minutes Tom and Matt returned from the bedroom with the boy in his pajamas. \"Good night,\" he said as he moved over and kissed his mother. After the kiss he turned and kissed his father and then waited for his parents to kiss each other. It was a before bed ritual they had done since he was big enough to know what was going on. He smiled and moved over to Allison and lightly kissed her on her lips. She blushed and smiled but the boy stood there waiting. \n\n\"OK now you have to kiss Mommy and Daddy,\" he said with his hands on his hips. \n\n\"She doesn't have to,\" Tom said realizing Allison was blushing. \n\n\"Yes she does,\" Becky said smiling. She held out her hands for the girl to come to her. \n\nAllison's heart beat faster as she moved into the woman's arms and leaned forward for what she thought would be a light peck but instead Becky pressed her slightly opened mouth hard against her own. Her eyes opened wide when the tip of the woman's tongue snaked between her lips. She tried to push back but the woman held her tight until the tongue tickled against her own. \n\nBecky was excited to be kissing the girl in front of her husband like this. Her head was turned in front of Matt so he did not know just how passionate it was. After thirty seconds or so she pushed away. \n\n\"OK now my daddy,\" Matt said smiling. \n\n\"Allison, you don't have to if you don't want to,\" Tom said nervously. \n\nAllison looked at Becky to make sure it was OK and saw her smile. \"I guess I'm part of the family now while we are here,\" she said as she leaned over and closed her eyes when her lips were very close to his. \n\nTom knew his wife had kissed the girl with an open mouth and knew it was meant to turn him on. If she could do it and the girl didn't mind then so could he. He smiled at his wife as he pressed his lips against Allison's. As soon as their lips touched her mouth slightly opened to invite his tongue inside. He took the invitation. \n\nAllison's body was on fire as she swapped tongues with the grown man. His hand was touching her waist and was only inches from the bottom of her petite breast. \n\n\"OK you two,\" Becky announced. \"Kissy-Time is up. Now go to bed Matt.\" \n\n\"OK, tomorrow is Disneyworld,\" the boy said as he jumped down the hallway and up onto the top bunk. \n\nAllison moved back to her seat next to the long sofa where Tom and Becky sat. She really enjoyed Kissy-Time and wondered if they would do it every night before the boy went to bed. They watched the movie and around 11:30PM Tom said he was tired and went into the bedroom. \n\n\"Why don't you come over here?\" Becky asked Allison as the news came on. The girl smiled and moved next to the woman. \n\n\"Did you like Kissy-Time?\" Becky whispered as she put an arm around Allison's back and massaged her shoulder. \n\nAllison giggled. \"Yes.\" \n\n\"Have you ever kissed a girl before me?\" \n\n\"Yes,\" Allison answered thinking back to her affair with Tina. \n\n\"Is that all you did?\" Becky's fingers pulled out the neckband on the shirt and slipped down along her collarbone. \n\n\"No,\" Allison replied as she leaned over towards the woman to make it easy for her to reach her chest. \n\n\"Did you do this?\" Becky whispered when her fingers traced down over the small bumps and onto the hard nipple. She heard the girl moan. \"You are real hot aren't you?\" \n\n\"Yes.\" \n\n\"We can't make much noise.\" \n\n\"I can be quiet.\" \n\nBecky turned and switched off the lamp on the table next to the sofa. Only the light from the T.V. lit up the dim room. Today was the first time she had ever touched another female and now was going to do it again. \n\nAllison closed her eyes and leaned back onto the soft breasts of the woman while the woman's fingers moved down and unsnapped her jeans. She sucked in her stomach to allow the fingers freedom to slide slowly down under her panties and into the damp forest of hair. She wished they were both naked and she could return the pleasures but knew it would be taking too much of a chance with her family so close by. She sighed and opened her legs when the fingers again found her hard clitoris. \n\nBecky took her time this time playing and teasing the babysitter. She too wished they were both naked as she could kiss and taste this girl's virgin nectar and maybe even have her do the same in return. Almost ten minutes of finger-fucking good times brought the girl to her second climax. She kept her promise and held her screams inside. \n\n*****\n\nTom was the first one up the next morning and tip-toed out of the bedroom to keep from waking up his wife. He had woke up early and tried to go back to sleep but the thought of the young girl lying on the bottom bunk just outside of his room prevented him from dozing off. The hallway was still quite dark however when he opened the door the light from the bedroom highlighted the girl's body lying on top of the bedspread. She was face down and the short nightshirt rested up over her hips allowing his eyes to see her marvelous ass covered by white panties with small roses scattered about. ",
        "\"Shit,\" Tom thought as his body froze. These panties were sexier than the sheer ones because they were the kind worn by young girls. One side of the panties was pressed into her ass crack thus showing her whole pink buttock. He wanted to reach down and touch it but held back as he quickly moved into the bathroom for a cold shower. \n\nBecky heard her husband get up and peeked out as he looked at Allison on the bunk bed. She smiled and moved out of bed herself until she was looking at the same sight her husband had just minutes before. Her session last night with Allison on the sofa had increased her interest in girl-girl sex a lot. She moved down to her knees next to the small bed and leaned forward until her lips pressed against Allison's bare cheek. \n\nAllison too was in and out of sleep and found herself dreaming or thinking about what had happened yesterday. She heard the bedroom door open and opened her eyes enough to see the large shadow on the wall behind the bed which meant it was Mr. Jenkins's standing by her bed looking at her. She grinned after realizing he had spent a lot of time looking at her ass. When he left to go into the bath she dozed off again until she dreamed someone was kissing her.............oh God it wasn't a dream... she felt lips on her bare buttock. \n\n\"So soft,\" Becky thought as her mouth moved up and over the soft pink cushion. As her lips moved south to the bottom of the girl's ass she felt Allison's body turning towards her. She moved her lips up and saw the girl's smiling face. \n\n\"Good morning,\" Allison whispered. \n\nBecky smiled. \"Good morning.\" Her eyes moved down the girl's body to the tiny panties. The shower was still running in the bathroom and Matt had not moved up in the top buck so she decided to go for it. Her mouth moved down again and kissed the soft silky inner thigh. \n\nAllison closed her eyes and smiled as she opened her legs. She thought about pushing down her panties but decided she might need to be wearing then when Tom came out of the bathroom. Her dilemma was soon over when she felt Becky's fingers pulling the panties to the side enough to allow her mouth to press into her wanton pussy. For $130 a day she got oral sex. Not bad. \n\nBecky pushed her tongue through the thick growth until it pressed against the top of the girl's pussy. She followed the pink path downward over the small hard bump to the bottom of the wet canal. Her fingers parted the hairs and her tongue took the northern route back up. This time her lips pushed downward until they capture the small pleasure button. Although she had never gone down on a female she had it done many times to her so what to do was not a problem. Suddenly she heard the shower turn off and looked up at the begging face of the girl. \n\nAllison wanted to cum so bad but knew they were taking a chance. When Becky pulled her panties back over her bush and pulled down her nightshirt Allison sighed. \"Later,\" Becky whispered as she moved back into the bedroom. \n\n*****\n\nAfter showers and breakfast the foursome jumped into the vehicle and headed to the gates of Disneyworld. \n\nTom parked the SUV and they all jumped on the tram that took them to the main gate. He paid for all four of them and they proceeded down Main Street USA. \n\n\"Where does everyone want to go first?\" Becky asked as she looked at the map. \n\n\"How about Frontierland?\" Tom asked as he looked at all of the attractions. The one he was most interested in was Splash Mountain especially if he could get Allison in the front seat. \n\n\"OK,\" Becky replied. \"We have all week so we can go to a different section each day.\" \n\nAllison held onto Matt's hand as they maneuvered through the crowd. They had a little trouble keeping pace with Tom who was almost running to get in line at Splash Mountain. \n\n\"I'm not planning on getting wet,\" Becky laughed as they watched the giant log boats carrying the people to the exit ramp. The people in the front of the boat were drenched. \n\n\"Come on don't be a party-pooper,\" Tom laughed. The line was not as long as they had thought and it was moving pretty fast. When they got to the first boat Tom pulled Allison in front of him and whispered, \"let's sit in the front of the log boat.\" \n\nBecky smiled as she guided Matt to the back of the boat. Her husband was so obvious pushing the young girl to the front and knew the white tee-shirt and tan shorts she was wearing would be almost transparent when she got wet. \n\n\"Here we GO!\" Tom shouted back towards his son as Allison sat directly in front of him on the same seat. Her ass was only inches from the front of his growing member. As the log boat climbed up the steep incline Allison's body slipped backwards until she felt his body and the hard lump in his shorts. She smiled and did a slight wiggle against his manhood. \n\nThe first sudden drop down to a pool of cool water was not so bad and only a little spray moved over the front and onto Allison. But it was enough to get her shirt damp and the front of her shorts wet. The log moved up again and into a dark tunnel. As soon as the light faded away Tom moved his hands up from the seat to the top of Allison's thighs. He expected her to push them away but she just leaned back harder against his shaft. \n\n\"Mommy I'm SCARED!\" Matt yelled from the back. \n\n\"Are you scared?\" Tom whispered in Allison's ear as he moved his fingers slowly up to the edge of her shorts. The log twisted sharply to the right and back to the left which drove his hand up under the shorts until his fingers pressed against her damp panties. \n\n\"Should I be?\" she whispered back to him. Her fingers moved down and over his hand. \n\n\"Shit,\" Tom thought, \"She is going to pull my hand away.\" But instead Allison's fingers moved down under his fingertips to pull her moist panties to the side. As his fingers parted the dripping matt of hair the light from the front showed they were about to exit the tunnel and make the big drop. He quickly explored her hot slit until he discovered she was indeed a virgin. At that moment the front of the log pushed out into the opening and then almost straight down. \n\nThe wall of water splash up and over the front of the boat totally drenching both Allison and Tom whose fingers were still trying to explore her virgin gash. As the log moved down the stream they moved closer to where the next riders were in line and he had to pull his fingers from her honey pot. \n\nAllison knew she had a wet tee-shirt and knew the people in line could see her small mounds and raisin tips but she didn't care. Tom's fingers on her pussy had turned her on so much she wanted and needed relief and knew only Becky would give it to her. As Tom pulled her up from the log she saw him glaring at her damp clothing and exposed body. \"You are so bad,\" she whispered. At the same time she noticed his beige shorts were soaked enough for her to see the outline of his hard-on. \n\n\"Over here you two,\" Becky directed towards them. When they got closer the woman pulled out on the front of Allison's shirt. \"I think you got a little too wet.\" \n\n\"Mommy, I want to go over to Tom Sawyer's Island,\" Matt said as he pulled on her blouse. \n\n\"Good idea,\" Becky said. \"Maybe you two can dry off some,\" she said giving her husband a dirty look. \n\nWhen they made it to the island Becky told Tom and Matt to go ahead of them up the rocks to the entrance to the caves. \n\n\"Was my husband getting too frisky on the log boat?\" Becky asked Allison as they took their time climbing up through the rocks. \n\n\"Yes,\" Allison giggled. \n\n\"God, he touched you didn't he?\" Becky whispered when she saw the passionate look on the girl's face. \n\n\"Yes.\" \n\nThey moved up to the entrance to the cave and didn't see Tom or Matt. \"Let's go this way,\" Becky whispered as she pulled the girl to the right cave entrance. \n\nSounds of laughter could be heard further into the cave to the right so the woman guided them to the left. They read some words on the wall of the cave about Injun Joe and walked further until they turned into a dead end. \"Over here,\" Becky said as she pulled the girl behind a large wall. \n\n\"What are you..........\" Allison started to say until the woman's mouth moved forward to capture her own. Before she knew what was going on a hot tongue slashed between her lips and found her own. She felt fingers on the snap of her shorts and the zipper being lowered. \n\n\"Shhh,\" Becky whispered as her body moved down taking the girl's shorts and panties with her. The woman smiled as she moved her mouth up and into the dripping pussy waiting impatiently for her tongue. Becky Jenkins, not Becky Thatcher, was in Injun Joe's cave sucking on another female's pussy. \n\n\"Oh God,\" Allison moaned as she leaned back against the wall with her legs spread widely. The woman was making good on her promise to please her whenever she needed it and after the log ride she definitely needed it now. \n\nBecky's tongue tried to push through the thick growth and had a rough time reaching its destination. She made a note to help the girl trim her bush so it would be easier next time. Her fingers held the ticket open which allowed her lips and tongue to devour the girl's hot slit. \n\n\"Don't stop please.\" \n\nBecky didn't stop this time until the girl's fingers clawed at her head. She heard a deep moan and then a loud scream. \"Shit,\" Becky said as she pulled back from the satisfied girl. Others would hear the scream and come running. \n\n\"Quick, get dressed,\" Becky whispered as she moved back into the cave to stop anyone coming their way. Suddenly a young man wearing a uniform ran up to her. \"Are you alright ma'am?\" \n\nBecky opened her mouth but heard Allison's voice behind her. \"It was me. I got scared.\" \n\n\"There's nothing in these caves that will hurt you,\" the guy said worried that the girl was going to freak out on him or something. \n\n\"I'm OK now,\" Allison said glancing over at Becky. Ten minutes later they made it to the escape tunnel and found Tom and Matt waiting. \n\n\"It took you long enough,\" Tom said looking suspiciously at his wife. After the wet kiss she had given Allison last night he was starting to wonder if she was doing more than kissing the girl. \n\n\"We got lost,\" Allison giggled. Her shirt and shorts had dried out pretty well now. \n\nFrom Tom Sawyer's Island they moved into the Country Bear Jamboree and had to see it twice before Matt would leave. They headed out of Frontierland and back to Main Street. \n\n\"Let's all get Costumes,\" Becky said as she pasted the Disney Clothier place. \n\n\"You can be Goofy,\" Becky said to Tom as she held up the costume. \n\n\"Thanks,\" he laughed. \"And you can be the Mean Witch.\" \n\n\"I want to be Mickey Mouse,\" Matt said holding up the Mickey costume. \n\nBecky picked up the Sleeping Beauty costume and handed it to Allison. \"This is definitely you.\" \n\n\"Are you going to buy the Witch costume?\" \n\n\"Sure, and maybe I'll cast a spell later when we all wear these?\" \n\n\"Tom you have to be one of the seven dwarfs,\" Becky said leading him to the dwarf rack. \"Dopey!\" she said laughing. \n\n\"Thanks again,\" he laughed. \"How about I be Prince Charming?\" \n\n\"Now that would be a stretch,\" Becky laughed. \"OK get what you want.\" They all picked out their sizes and headed for the hallway of dressing rooms. \n\n\"I'll help Matt,\" Becky said smiling as she pulled back the curtain on the large doorway leading into one of the two dressing rooms. \n\n\"Do you want me to help you put on your costume?\" Tom joked. \n\nAllison didn't answer as she pulled opened the curtain and walked inside. \n\nTom leaned against the wall waiting for his turn when the curtain to Allison's dressing room opened and her face pushed out. \"Well are you coming in?\" \n\nTom looked back at the dressing room where Becky and Matt was and took a deep breath. His wife had said he could look as much as he wanted. He walked into the small opening and turned to see Allison pulling the curtain back into place. \n\n\"I was.........\" Tom started to say \"just kidding\", but Allison put her finger on his lips to be quiet. Sweat poured down his forehead as he watched her turn to face the large mirror. She didn't hesitate as she pulled the still damp tee-shirt up and off her head. The top half of her body was naked in the mirror. She smiled at him as she teasingly unsnapped her shorts and pushed down the zipper. \n\nTom was having trouble breathing as his eyes followed her fingers up to the waistband of her shorts and watched as she pushed the tight covering down over her skimpy white bikini panties to her knees. The movement also lowered her panties until the top of her pubic mound was visible. She didn't pull her panties back up. \n\n\"Don't I get to see you?\" Allison whispered in a little girl's voice as she toyed with the waistband of her undies. \n\n\"My wife...\" he whispered back now nervous to be stripping in front of this young girl. \n\n\"She doesn't care,\" she said as she moved forward to undress him herself. \n\nTom held up his arms to allow her to pull his tee-shirt off his upper body. A small pouch of his stomach lay over the waistband of his shorts which she quickly released. Not damp anymore the shorts fell to his ankles. He stepped out of them and stood proudly displaying his hard-on which was pushing out the front of his blue boxers. \n\nAllison stepped back and giggled when she saw his condition. Only her panties and his boxers prevented them from seeing each other totally naked. She put her fingers back into the waistband of her panties and waited for him to do the same to his boxers. As her fingers pushed down so did his until they both stopped the movement at their knees. With her panties around her knees Allison stood back up and watched as he did the same. There in front of her was his monstrous shaft in all its glory. He was indeed bigger than Jake. \n\nTom's body was losing control and his hands and mouth wanted to capture her wonderful nakedness. He pushed off his boxers and moved towards her. \n\nAllison panicked when she saw him coming at her. Up until now it had only been teasing and she had promised Becky it would not be anymore than that. Her mind thought one thing but her hand another when it curled around his hot pecker. She remembered how Jake had showed her and immediately began jerking him off. \n\n\"Oh God,\" Tom moaned when she started masturbating him. His hands moved up to cup her little titties. \n\n\"Hey you two don't take too long in there,\" Becky yelled from outside in the hallway. \"Matt and I will be outside in our costumes.\" \n\nAllison's hand froze when she heard Becky's voice but quickly continued stroking when she realized they had a few more minutes. Her other hand cupped his huge sac while she squeezed and jerked him off. \n\n\"Don't stop,\" Tom whispered with his face bright red and the veins popping out on his forehead. \"Faster....oh....OH........OHHH!\" His hands moved from her petite breasts to her shoulders as he climaxed and shot his juices up over her chest. \n\n\"Now I AM Snow White,\" Allison giggled as she looked down at the gobs of white cum covering her breasts. \n\n\"Here use these,\" Tom said smiling as he handed her his boxers. She smiled as she wiped his pleasure from her chest and handed the sticky underwear back to him. \n\n\"I think I'll just leave them here,\" he laughed as he tossed them into a small waste can. \"Hurry let's get dressed.\"\n\nAllison pulled back on her panties and made sure to bend at the waist when she put them on to show him her cute ass. She giggled when he kissed it and quickly put on the Sleeping Beauty costume. When he had on his Prince Charming costume they walked out to find Becky and Matt. \n\n\"It took you two long enough,\" Becky said with a sly grin. She knew things had now progressed past the teasing stage for Allison and Tom. \n\nThe shop keeper took their photos and they headed back into the dressing rooms to put on their regular clothes. \"Take your clothes in Matt's room,\" Becky said. Tom grabbed his shorts and shirt and did what she said. \n\nAllison had her costume off and was standing in only her panties when Becky came into the dressing room. \"Did you two have fun in here?\" \n\n\"Yes,\" Allison answered. \n\nBecky walked over to the waste can and pulled out her husbands soaked boxers. \"So I see. I thought I told you his penis was mine?\" \n\nAllison's smile changed quickly into her biting her lower lip in fear. \"I thought it was OK.\" \n\nBecky didn't show any emotion as she moved to the girl and whispered, \"It is but tonight you will do what I want. OK?\" \n\n\"Yes,\" Allison whispered back. \n\n\"Anything that I want.\" \n\n\"Yes,\" the girl said in fear and total excitement. Neither said a word as they dressed and met the guys outside. Tom paid for the costumes and they decided they had enough of the Magic Kingdom for one day. As they walked to the car from the tram Becky pulled Allison aside. \"Since you are now doing more than just teasing I'm going to give you $100 a day.\" \n\nAllison smiled as she looked at Tom walking ahead of her. \"And he's giving me $50 a day so now I'm getting $150 a day and learning about sex at the same time.\" \n\n*****\n\nThe rest of the afternoon went slow as they swam and played with Matt in the busy pool by the condo. Dinner at Chucky Cheese was fun and by seven O'Clock little Matt was dead tired. Tom carried him into the bedroom and closed the door. The adults had the rest of the evening for some nasty fun. \n\n\"I think it's time for Sleeping Beauty,\" Becky grinned as she grabbed the costume bag and took out Allison's and her costumes. \"Put yours on out here,\" she said to Tom. \n\n\"What are we going to do?\" Allison asked the woman as they both stripped in the small bathroom. \n\n\"We are going to play a trick on Prince Charming,\" Becky said smiling. After about ten minutes or so playing around I want you to pretend to fall fast asleep.\"\n\n\"Like Sleeping Beauty right?\" \n\n\"Yes, but I'm going to tell Tom that I drugged your Coke during dinner and that you are really knocked out. Whatever we do to you don't open your eyes and show him you are faking it.\" \n\n\"What........what are you going to do to me?\" she asked as she pulled on the long gown. \n\n\"Don't worry it will just be touching and kissing,\" Becky answered. \"Do you think you can pretend to be asleep?\" \n\n\"I think so,\" she giggled. \n\nThey finished dressing and walked out into the large living area arm in arm. \n\n\"Why it's the old Witch and Sleeping Beauty,\" Tom said as he stood in his green tights, jacket and white shirt. \n\n\"Nice tights,\" Becky said as she lifted the front of the jacket exposing the large lump of penis and balls. \n\n\"I don't know how you women wear pantyhose,\" he said pushing down his jacket. \n\n\"We don't have the same problem you do,\" Allison giggled. \n\n\"OK if I remember the Wicked Witch gave Sleeping Beauty the apple which put her to sleep,\" Becky said smiling. \n\n\"No that was Snow White,\" Allison laughed. \"Sleeping Beauty was pricked......\" She started giggling. \"I mean the witch made her prick her finger which put a curse on her so she would die when she reached her sixteenth birthday. Then the fairies put her to sleep until the Prince came to kiss her and wake her up.\" \n\n\"Didn't she turn the Prince into a toad?\" Becky laughed as she waved her plastic wand at her husband in jest. \n\n\"That was another story called the Frog Prince,\" Allison laughed. She suddenly stretched out her arms and made a giant yawn. \"God, I'm really getting sleepy.\" She moved to the sofa and leaned back while closing her eyes. \n\n\"She's pretty good at acting,\" Prince Tom said as he grabbed a cold beer from the small refrigerator. \n\n\"She's not acting,\" Becky said smiling. To get Tom to believe it she moved over and gently shook Allison's body. \"See.\" \n\n\"Yeah right,\" Tom laughed. If his wife wanted him to kiss the girl and wake her up he was all for it. ",
        "\"I put some sleeping powders in her Coke at the restaurant,\" Becky said trying to keep a straight face. \n\n\"Yeah right,\" Tom said again. But the girl did really look like she was sleeping. \"I guess you want me to kiss her and wake her up.\" \n\n\"I'm the evil witch,\" Becky said as she pulled the girl's gown slowly up her tan legs until the front of her silky black panties were exposed. \"If you want to wake her up you have to find the right spot on her body to kiss.\" \n\n\"Fuck,\" Tom thought. \"My wife has truly gone nuts. But if she wants me to kiss this girl's body he wasn't going to object.\" \n\n\"Take off her shoes and kiss her feet,\" Becky commanded. \n\nAs Tom leaned down to remove the girl's shoes Allison tapped Becky on the arm and mouthed with out making a sound that she was ticklish. \n\n\"Don't tickle her. I want you to suck each one of her toes.\" \n\nSucking toes was not what Tom had in mind but he knew he had to play the game to its entirety. His mouth opened wide and he sucked the big toe of her right foot into his mouth. \"POP,\" went his mouth when it left the large toe and went to the next one. He continued down the line until her small toe on her other foot was in his mouth. \n\nAllison bit her lower lip to keep from laughing. Her feet were so sensitive and just the fact that this grown man was sucking her toes was funny as hell. \n\n\"Now kiss her lower legs,\" the Witch said as she waved the toy wand\n\nIt was not as ticklish now as he planted baby kisses on her ankles and then up her thin calve. When he got to her knees his eyes looked over them at the black panties stretched over her virgin hole. He felt a slight trembling of her legs as he opened her thighs and gently kissed the insides of her thighs as he headed north. \n\nHe was only a few inches away from her panties when the Witch again spoke. \"I did not tell you to kiss her that high.\" Both Tom and Allison felt disappointment at her words. \n\n\"Her fingers and arms are next,\" Becky said as she smacked him on the top of his head with the wand. \n\nTom picked up her right hand and sucked in her thumb. It moved in and out of his lips like the so many times Becky had done the same to his hard-on. \n\nAll three bodies were now at a high passionate level. \"Take off her dress,\" the Witch ordered. \n\n\"Good,\" Tom thought. He had had enough toes and fingers. He lifted Allison until she sat upright and unzipped her gown. As she moved back down he pulled the dress up over her arms until it bunched at her waist. Her tiny little boobs rested on her chest waiting for his kisses. He dropped his head down to suck in her small nipple but Becky grabbed his shoulder. \n\n\"I didn't tell you to kiss her breast did I?\" Becky was having so much fun teasing her husband with the girl's body. She could already see his penis was having serious problems behind the tights. \n\n\"Take off your tights first.\" \n\n\"Are you sure?\" Tom whispered. Touching and kissing was one thing but was she now leading him to possibly fuck the babysitter? \n\nBecky didn't answer him because she had spoken. She smiled as he pushed the tights over his hard-on and down off of his feet. \"Stand before me Prince and lift your jacket.\" \n\nAllison peeked out of her closed eyelids and saw again his long hard penis. It was torture seeing it and not being able to touch it. She too wondered if Becky would order him to fuck her and also wondered if she would object if he did. \n\n\"Take off everything,\" Becky ordered. As Tom removed the rest of his costume Becky pulled off Allison's dress and panties and then her Witch costume. They all were stark naked and breathing hard ready for what was to come. \n\n\"What did Sleeping Beauty do to you in the dressing room?\" Becky asked as she moved to sit down at Allison's feet. \n\nTom's eyes had not left the girl's dark bush or the hint of a pink pussy between the thick growth. \"Sh....eee.....ta....touched.....me.\" \n\n\"Show me,\" Becky commanded. In all of the years they had been married she had never seen him masturbate before. \n\n\"Now? Here?\" \n\n\"DO IT!\"\n\nAllison jumped slightly when Becky yelled and again peeked out to see him slowly stroking his hard-on. Suddenly she felt Becky's hand on her knee pulling it to the side which slowly opened her thighs. Her young un-violated pussy was now Tom's to look at while he jerked off. Becky's fingers parted the thick growth and then the thin pink slit. \n\n\"Ohhh,\" he moaned when he saw the small bump at the top of her pink slit. He wanted so bad to jump on top of her sleeping form and be the first. His fist moved faster and faster until he grunted loudly and splashed his juices over his fist and down onto the hardwood floor. \n\n\"You are a bad Prince,\" Becky said smiling. \"Now go get a tissue and clean up the mess you made.\" \n\nTom was suddenly embarrassed for jerking off like he did. He was pretty sure Allison was not asleep and that he had been set up however, he did not want to stop what was going on since they had hired the girl. Never in his life would had he dreamed his wife would allow him the liberties he had been taken with this eighteen year-old girl. He quickly wiped up his mess and stood waiting for her next command. \n\n\"Take your costume and go into the bedroom. You can sleep with your son. I'll sleep out here.\" \n\nAllison kept pretending to be asleep until she heard the bedroom door open and close. Her eyes opened showing Becky just how horny she really was. \n\n\"You did a great job,\" Becky whispered as she moved to lie down next to Allison on the large soft sofa. \n\n\"God that was so hot,\" Allison whispered back. She turned her body until her small breasts crushed against Becky's larger ones. \"What are we going to do now?\" \n\n\"Anything we want,\" Becky giggled. As much as she had wanted Tom to fuck her before she wanted something else even more. She moved her lips to Allison's ear and whispered, \"I want you to kiss me all over.\" \n\nAllison froze at first after realizing what the woman wanted. Having it done to her was one thing but she was not sure if she could go down on the older woman. \"All over?\" \n\n\"Yes,\" Becky said louder. \"Start with my lips.\" Her arm pulled the girl's mouth to hers and welcomed her tongue into her mouth. After about one minute of deep frenching Allison pulled her mouth away. \n\n\"What if he comes out?\" \n\n\"He won't,\" Becky replied. She knew he would do whatever she wanted as long as she didn't stop what was going on with Allison. Her hands moved to the top of the girl's shoulders and slowly pushed her downward. Allison's lips and tongue traced down her neck and collarbone and down over her full breasts. When they reached the long hard nipples Allison stopped for a feast. \n\n\"Ummm, you do that very well,\" Becky moaned. \"Are you sure you haven't done it before?\" \n\n\"Yes,\" Allison giggled. The long nipples were like a small penis as they moved in and out of her tight lips. \n\nAfter spending a few minutes on each hard tip her mouth moved to the center of her chest and then slowly down over her navel to the top of her small golden bush. She looked up at the woman who was now clutching the sofa cushions in anticipation of what was to come. It was Allison's turn to tease as she licked down one side of her swollen vulva and then up the other without touching the sensitive pinkness within. \n\n\"OH GOD PLEASE,\" Becky begged as she grabbed Allison's head to guide her tongue to her pulsating clitoris. \"SUCK IT THERE!\" \n\n\"Tom had to have heard that,\" Allison thought as her mouth opened and her lips suckled on the hooded mound of passion. It moved south over her \"G-Spot\" and then lower into her open pussy. Becky's hands fell from the girls head to again grasp the sofa cushions as the lips and tongue explored and covered her whole wetness. \n\n\"PLEASE!\" Becky begged again for Allison's lips to return to her clit. \n\n\"It's like a hard wad of bubblegum,\" the girl thought as she licked and sucked on the raised passion button. \n\nThe bubble soon popped up and down Becky's body as she climaxed. \"I'M COMING!\" she cried as her hips raised upward taking Allison's small body with it. \n\nAfter about three minutes Becky's totally satisfied body felt something tapping it on its shoulder. She opened her eyes to see a naked Allison holding the magic wand. \"Yes do you want something?\" Becky grinned. \n\n\"Sleeping Beauty would like for you to do the same thing to her,\" Allison giggled. \n\n\"She does....does she?\" Becky laughed. \"And where would Sleeping Beauty liked to be kissed?\" The woman moved off of her back on the sofa to allow the girl to take her place. \n\n\"Right here,\" Allison said as she pointed at the dripping wet pussy between her opened thighs. \n\n\"How can I deny a Princess?\" Becky laughed. \n\nTom was wide awake as he listened to the two females making love in the other room. He would have cut off his arm to see the two of them going at it but realized they still had five more days in Disney. He smiled and rolled over. \n\n*****\n\nTom and Becky sat at the small table in the great room of the condo waiting for Matt and Allison to wake up. Allison walked into the room first rubbing her eyes. The Winnie the Po night shirt she was wearing fell down to the middle of her thighs. \n\n\"I slept so good last night,\" she said smiling. \n\n\"Me too,\" Becky grinned. \n\n\"I kept waking up,\" Tom said as his eyes followed Allison's body to the seat next to his. As she sat down her nightshirt pulled upward until the edge of her black panties could be seen. \n\nSuddenly Matt ran into the room. \"Are we going back to Disneyland today?\"\n\n\"Yes, but you have to eat your breakfast first,\" Becky replied. She grinned as she imagined the mischief they would be getting into. \n\n*****\n\n\"How about Fantasyland?\" Becky asked as they once again walked down Main Street USA. \n\n'GOODY!\" Matt said holding Allison's hand tightly in his. \n\n\"Let's do Peter Pan's Flight,\" Tom grinned as he led the way to the short line. Again he pulled Allison into one of the flying pirate ships with him. Becky and Matt jumped into the ship behind them. \n\n\"It gets dark in there,\" Tom whispered in Allison's ear. \n\n\"Um, what do you have in mind?\" she whispered back. She was now wearing a short denim skirt and a loose blouse. \n\n\"Have you ever....you know...\" he whispered as he looked down at the large bulge forming in his loose cotton shorts. \n\nAt first Allison wasn't sure what he wanted. \"It couldn't be to jerk him off because he knew she had already done that so it had to be.........shit...he wants me to give him a blow job,\" she thought. As much as she wanted to do it she was afraid it would cross the line that Becky had established. The women had said his penis was hers and not Allison's. Allison glanced back at the other ship and saw Becky's smile as the woman gave her the thumbs up. \n\n\"Kind of...\" Allison whispered just as the two doors opened and the ship moved out into the dark room. As soon as it got real dark Allison leaned her body over until her face was above the front of his shorts. Her fingers crawled up his hairy thigh and then under the loose shorts. She fished around through the opening in his boxers until she found what she wanted. \n\nTom's eyes were looking downward at the top of Allison's head as she pulled out his hard pink rod. \"Ohhh,\" he moaned when her lips gently kissed the hot tip. \"Please,\" he begged as she teased him by opening and closing her mouth across the top like someone biting the top of an ice cream cone. \n\nAllison didn't think she would have enough time on the normally short rides to give him satisfaction so she opened her mouth as wide as possible and sucked in about four inches of his thickness. He was so wide her cheeks were bellowed outward as she slowly raised her head upward and then back down. \n\nBecky could see glimpses of what was going on in the ship in front of her. She could see Allison's body leaning over and knew the girl was giving her husband a blow job. She didn't want Tom to climax as she yelled. \"Hey you two the ride is almost over!\" \n\nAllison heard the warning and managed to get her lips off the tip of his prick just before the ship burst through the double doors and out into the opening. She giggled when she sat back and watched the man trying to force his hard-on back into his shorts. \n\n\"That was so cool,\" Matt said laughing as he exited the ship. \"Let's do it again.\" \n\n\"OK with me,\" Tom quickly said with a big smile. The bulge in his shorts was so obvious. \n\n\"Let's do it,\" Becky grinned as they headed back to the entrance. As Tom and Mat ran ahead Becky pulled Allison aside. \"Don't say anything to Tom but just before we board the ships I'll jump in the seat next to him.\" \n\nAllison smiled. The woman was not going to give up her shaft very easily. \n\nThe line was a little longer however the large tent in Tom's shorts never really went down. As he moved towards the empty ship he pulled on Allison's arm. She ran next to him but just before she was to enter the ship Becky pulled her away and jumped next to her husband. Allison ran back and jumped into the ship next to Matt. \n\n\"What's wrong are you disappointed?\" Becky whispered as she fondled his hard-on. \n\n\"Noooo,\" he moaned. Right then he didn't care who took care of his needs. As soon as the ship entered the dark room he felt his prick being freed and her mouth engulf him. He closed his eyes imagining it was Allison's tongue licking up and down his shaft. \n\n\"OH GOD!\" Tom shouted just before he shot his hot juices deeply into his wife's mouth. She clamped her lips tightly around him and sucked him until he was empty. \n\n\"Why Peter you look so flushed,\" Becky grinned as the car again moved outside into the light. \n\n*****\n\nThe next ride was in \"Small World\" and Tom was now satisfied to just sit back and enjoy the scenery and that song playing over and over again in various languages. \n\nTom did not ride the Mad Tea Party spinning cups but he and a crowd of men were happy just to watch Allison holding on as her short skirt which did little to hide the crotch of her basic white panties. Finally they had lunch in Hook's Tavern. \n\nThat afternoon they all rode the Dumbo The Flying Elephant Ride and the Snow White Scary Adventures ride. Neither of them gave the adults any chance to fool around. While walking again down Main Street they stopped at an ice cream shop. They bought Matt an orange popsicle and when Allison pulled out a chocolate fudge bar Becky took it from her hand. \"Not now.\"\n\nAllison looked at her as she put the fudge bar back. Did the woman think she was gaining weight? Around five PM they headed back to the condo. \n\nMatt was totally tired and fell asleep in the SUV heading back to the room. Tom put him in the top bunk and joined the females in the great room. \n\nBoth Becky and Allison had their eyes closed while leaning back against the sofa. \"Hey let's do something.\" He said hoping for a repeat of last night's Sleeping Beauty. \n\n\"What?\" Becky said trying not to smile. \"You want to do Sleeping Beauty again?\" \n\n\"Sure,\" Tom quickly answered. \n\nBecky giggled and whispered something to Allison who also giggled. \"OK we agree but you have to be Sleeping Beauty,\" Becky said. \n\n\"Oh no, I'm not wearing a dress?\" Tom said firmly. \n\nA minute later Tom reluctantly took the Sleeping Beauty dress and moved into the bathroom to change while Allison put on the Prince costume and Becky the Witch costume. \n\n\"Where do you want me to kiss him to wake him up?\" Allison asked as she pulled the tights up over her skimpy panties. \n\n\"I think you already know the answer to that. It was what you were doing in the Peter Pan ride correct?\" \n\nAllison gulped. \"I........uh....\" \n\n\"It's OK,\" the women smiled. Just then the bathroom door opened and Tom stood there in a dress. \n\n\"Ha...ha...ha,\" Becky laughed. \"We should have gotten you a wig.\" She moved over and pulled up the front of the dress to see him wearing his boxers which were slightly bulging at the moment. \"You have to wear panties.\" \n\n\"I don't think I'll fit into your panties,\" Tom laughed. The thought of wearing panties was suddenly turning him on. \n\n\"I'll get some panties,\" she giggled as she moved quietly into the bedroom where Matt was sleeping. \n\n\"Are you OK with this?\" Tom whispered to Allison who was standing by the table in Prince Charming clothing. \n\n\"Sure, it's like dress up when I was a little girl.\" \n\n\"You are not a little girl anymore,\" Tom grinned. \n\nAllison blushed as Becky walked back into the room holding up a pair of yellow panties. \"These should work. Take off your boxers and Allison will put these on you.\" \n\n\"I will?\" The girl asked. She knew the man was not that happy at first to be wearing them. \n\n\"It's OK,\" Tom said as he reached up under the dress and pulled the boxers down over his hard-on and off of his bare feet. \"Go ahead.\" \n\nAllison took the panties from the woman's hand and dropped to her knees in front of Tom. She held them open as he put one foot and then the other one into the leg holes. As the girl pulled them up over his thighs Tom grabbed the dress and pulled it upward. As the dress passed over his hard prick it popped straight outward. \n\nAllison jumped back slightly and laughed when the long rod appeared. She was having trouble getting the panties to fit up over his muscular thighs and thought there was no way they would fit over his hard-on. \"It won't fit,\" the girl giggled as she tried to pull it up over his rocket. \n\nTom's body was on fire as he looked down at the young girl pushing the silky panties up over his shaft. He wanted so much to take her virginity but knew his wife was calling the shots. \n\n\"Force it inside,\" Becky ordered as she aimed the magic wand at the tip of his penis. \n\nAllison smiled as her tiny hand curled around the middle of his pole and pulled it downward as she pulled the panties up and over it. \n\n\"Oh God,\" He moaned as her fingers curled around the moist tip. \n\n\"Quiet,\" Becky said. Tom bit his lip and watched as Allison pulled down his dress and Becky led him to the sofa. \"Go to sleep and if you open your eyes your fairy tale is over.\" \n\nTom did as she said and waited for the 18 year-old virgin Prince to kiss him. \n\nAllison stood smiling at the front of his dress which showed the obvious bulge of his hard-on. \n\n\"Kiss him,\" Becky whispered. \"But tease him before you get to his penis.\" \n\nAllison giggled as she dropped to her knees and picked up his foot. She licked across his big toe and heard him laugh. The laugh stopped when she sucked it into her mouth. Her fingers traced up his legs with her lips close behind. His knees offered no resistance to her hands pushing them apart. As her mouth moved north her fingers folded up the dress until it was bunched at his waist. \n\n\"No peeking,\" Becky whispered in his ear when she noticed his eyes flickering. Allison pulled down the panties until his hot pecker pointed straight up at her ready for her kissing. \n\n\"Wait,\" Becky whispered to Allison as the girl held his monster in her fingers with her lips ready to drop. \n\nAllison could feel the penis getting harder and harder and could see the tip getting redder and redder. Her lips were moving south when she felt Becky's hand pull her head upward. Allison moved back and was shocked as Becky squirted chocolate syrup onto the top of the red crown. \n\n\"Time for your fudge bar,\" the woman whispered. \n\nTom's eyes opened when the cool chocolate hit the tip of his goody bar. His eyes opened big when Allison's thin tongue pushed downward and gently across the brown chocolate which was slowly dripping down his shaft. \n\n\"Close your eyes,\" Becky whispered in Tom's ear as she nibbled on it. She heard him moan and bit the tender lobe. \"Don't come.\" \n\n\"This tastes much better,\" Allison thought as she licked the chocolate up onto her tongue. \"Ummm,\" she said as her mouth opened to suck in the shiny brown tip. Gobs of rich chocolate dripped down onto her chin. "
    ],
    "authorname": "Slickman",
    "tags": [
        "lesbian",
        "virgin",
        "teen"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/sleeping-beauty-17"
}