{
    "title": "14 Hours Pt. 11",
    "pages": [
        "-Will-\n\nI thought a lot about how to break the news to Kori. I know her well enough to know this is not ending with understanding and forgiveness. We've officially reached the end of my rabbit hole.\n\nIn all fairness, I should feel even worse about having sex with Samantha before we were truly over, but I just don't. We are all always told that there is some arbitrary cool off time between relationships, but that's not something I believe to be true. Samantha doesn't either. If you like each other, and the relationship is over, what's the crime exactly? Not taking into consideration the feelings of the person you broke up? Don't we break up with people, to stop considering their feelings? \n\nI meet Kori on neutral ground, behind the school near the loading dock of the shop classes. At first, I thought about doing it at her store, but when I thought about it more, that was a horrible idea. Let's break up with a girl at the place you met her, that'll go over well. \n\nKori is silent for over twenty seconds before she asks me if I thought about whether or not she was simply lying. \n\n\"That was my first thought,\" I answer, the pull the ultrasound picture from my pocket and hand it to her, \"I was there for her last appointment, unless she's bribing a doctor, she's pregnant.\"\n\nKori resumes her silence, before handing me back the picture.\n\n\"She said she would give you something too good to pass up. Even promised to take a picture of it,\" Kori said, now starting to cry and look away from me, \"How involved will you be?\"\n\n\"It's my kid. I know better than most the feeling of abandonment, and I'm not doing that to my kid,\" I said, Kori crying harder and louder.\n\n\"You could, that's an option.\"\n\n\"I can't. Could you really be with a man who could do that?\" I ask.\n\n\"No,\" Kori answers honestly, before taking a step back from me. \"We just hit the bottom of the rabbit hole,\" Kori said before turning and walking away. \n\n-Samantha-\n\nI was told the breakup was brutal from both of them, but I didn't see that going any other way. I will admit it did help my guilt a little. The question is, how long do I wait before we can be together publicly? Neither of us thinks there needs to be time between relationships, but Kori is still my friend. If we're together the day after, she'll probably be done with me too.\n\nThat's the minor issue of the two I currently have. I said something three days ago that I've never said before. \n\n'I love you.'\n\nWill makes me say some crazy shit. Crazy for me anyway. A month ago I was saying I'd be okay with having his baby if I ever got pregnant, and now I'm apparently in love with him. Fuck you Will, you and your dancing dick. \n\nWhat I need right now is a shock to the system, feel a little more like me again. I'll be exclusive with Will, but I want to have fun still. I really want another threesome. I've been gangbanged before, but I wasn't very fond of it. Turns out I do have a threshold, and it's double penetration, not doing that again. I want to fuck another chick with Will. \n\nI have my lackeys on the cheer squad, but that's too easy. A little reluctance on the part of the third person makes it fun. Kori took more convincing than you'd think.\n\nA few days after Will and Kori break up, he blows a load onto my tits upon request, and we're laying on my bed. With what you know about me, you'd expect my room to be filthy, but it isn't. Sure I have to put away the basket of laundry in the corner and my desk could use some organizing, but my bed is always made and I don't leave dishes or food in here. I have something resembling standards. \n\n\"Would you be into another threesome? Another chick?\" I ask. I'm tense with anticipation. Sarcasm.\n\n\"Who do you have in mind?\" Will asks. Fair question, I love his pragmatism. I need to stop saying love. Convincing another girl might be tricky. \"Not like women are lining up to fuck me.\"\n\n\"I'm first in that line,\" I say.\n\n\"One of your cheerleading friends?\"\n\n\"Too easy, I like a challenge.\" Will laughs.\n\n\"Chloe Matson owes me a blow job,\" Will says, and roll over onto his chest.\n\n\"Brace face, she's cute. I can tap that,\" I say with a huge grin, \"If we pull that off, you need to use her pig tails as reins.\"\n\n\"So how do we expand a blow job, into a threesome?\" Will asks.\n\n\"Leave that to me.\"\n\n-Will-\n\nI found Chloe during the school day and informed her I was clear to final out her debt. Apparently, a lot of people knew Kori and I were dating, and now everyone knew we weren't, Chloe included. \n\n\"Finally free, still need to get your rocks off?\" Chloe asks, closing her locker and starting to walk.\n\n\"Already got a new girl, and she's down as fuck,\" I say, Chloe turning her eyes sideways midstride. \n\n\"Where and when?\" Chloe asks, stopping at her classroom door. I hand her a note with Samantha's address and say at six after school today. \"See you there.\"\n\nPhase one complete. \n\nSamantha and I arrive at her house at five to get everything ready. I am not in the lease bit surprised Samantha has a box under her bed full of toys. \n\n\"Double ender? Dildo with clit massager? Just the bunny?\" Samantha asked, laying out a ten inch black double ended dildo, a vibrator with a clit massager, and a small oval with a wire running to a small box with three settings. \n\n\"Let's stay with the rabbit, no need to scare her,\" I say, her laughing and putting away the double ender. She informs me the vibrator is for her. \n\n\"One problem? Say she takes the bet, my endurance with a blowjob isn't that high,\" I say, Samantha giving me her grin that makes me curious. She always has a plan.\n\n\"She's getting here at six right? I blow you at five forty five, you nut in my mouth by fifty five, you reset by the time she starts,\" Samantha says. That's my girlfriend.\n\nForty-five comes around, and I'm standing up with my pants on the ground and Samantha going to town on my dick. It's a confidence boost that Samantha struggles to deep throat me. Five minutes flat I cum, Samantha cupping her mouth on the head and pumping it all out. With how often she does it for me, I'm beginning to think my jizz tastes like chocolate. \n\nPhase two complete.\n\nTwo minutes later there is a knock on the front door, so I put everything away and make it seem like this didn't just happen. Is it manipulative and stacking the deck for this bet? Absolutely. Do we care? Absolutely not. \n\nSamantha and I answer the door and let Chloe in who has changed out of her school uniform. She's wearing a t-shirt of a band under a hoodie that's unzipped, with holey jeans and flip flops. Samantha and I have a side bet as well. Thong or panties? If it's panties, I'm allowed to creampie her, pending birth control of course. No need for two accidents.\n\n\"Should we begin?\" Chloe asks, dropping her purse on Samantha's desk. \n\n\"Before we do, I heard you like wagers,\" Samantha said, Chloe turning to her.\n\n\"A wager is why I'm here right now, I'm less than a fan of them at the moment,\" Chloe says.\n\n\"Fair enough, but may I make one?\" Samantha asks. \n\nPhase three begins.\n\n\"What is it?\" Chloe asks. \n\n\"Will made you cum in less than ten minutes. That's some skill. If you can't make him cum in ten minutes or less, he gets more than a blowjob,\" Samantha says, Chloe huffs.\n\n\"What's in it for me if I can make him cum?\" \n\n\"That one hundred dollars for the ID,\" I say, holding up a hundred-dollar bill with a red lipstick stain kissed into it. \n\n\"If I agree,\" Chloe begins, looking at both of us, \"No kissing, you wear a condom, do not ejaculate on my face or in my mouth.\"\n\n\"That all sounds really boring. What's your birth control like?\"\n\n\"I get the shot, I'm all good...\" \n\n\"No condom, and two hundred if you can make him blow,\" Samantha says, holding up the second hundred-dollar bill. \n\nChloe thinks about it for nearly ten seconds before shrugging. \n\n\"Fine. No facial or in my mouth. If the blowjob is enough, you cum on her face.\"\n\n\"Oh, poor me,\" Samantha says sarcastically. \n\nBegin phase four.\n\n-Chloe-\n\nThis is about to be the easiest two hundred dollars I've ever made. There is no way Will has any endurance. Granted he seems to be dating Samantha North now, so he's probably more seasoned than I think. I'll make him erupt in seven minutes and smear it on her face. \n\nWill removes his pants and underwear and sits on Samantha's desk chair, and I see his cock resting in his lap. That's about five inches more than I thought. Holy fuck, am I blushing? \n\n\"It catches everyone off guard,\" Samantha says with a laugh. \n\nI go to my knees and place his dick in my hand, looking at Samantha who pulls out of her phone and starts a countdown. She gives me a ready, set, go in jubilee and I slide him into my mouth.\n\nI might be in trouble, I can't fit him all the way, and I can't deep throat without gagging. This will need to be accomplished by strokes and circling my tongue on the head. It takes me two full minutes to get him fully erect. At four minutes he touches the top of my head and smack his hand away. Samantha laughs. What a bitch.\n\n\"Eight minutes,\" Samantha says, before I even realize how much time has passed. That was a fast eight minutes, and I don't think he's close yet. I thought this would be over by now. Will is so unassuming, and I now I'm panicking. I'm going to have to fuck him too. Without a condom because I got cocky, pun not intended.\n\nSamantha's phone starts to chime, and I spit his dick out and sigh. Good thing I didn't make any plans. \n\n\"Times up,\" Samantha says with grin, and I fucking hate her more. \n\n\"Condom...\"\n\n\"That wasn't the bet,\" Samantha says, and I groan. \n\n\"Fine, but I'm on top,\" I say, removing my hoodie and starting to undo my jeans. I pull them down and step out of them with nothing by my panties. \"You pull out.\"\n\n\"One hundred if he can creampie you,\" Samantha says, and I shoot her a look.\n\n\"Fuck no,\" I shoot back harshly. \n\n\"I feel bad, just trying to give you something,\" Samantha says.\n\n\"You can facial for a hundred,\" I compromise.\n\n\"In the mouth for fifty, creampie for a hundred,\" Samantha says.\n\n\"I'll leave broke then,\" I say, then slid my panties to the ground and step out of them. \"Chair or bed?\"\n\n\"Dealers choice,\" Will says. Chair it is then. I straddle him, thankfully there aren't any arms on the chair, otherwise this would have been more difficult.\n\n\"I got some lube,\" Samantha offers. I want to say no on principle, because fuck her, then I look at the dick again. I want some lube. Samantha pulls it out from her desk drawer and instead of handing it to me, pours into her own hand and spreads it on his dick. She pours more on the tips of her fingers and starts going for my pussy. \n\n\"I can do that my...\" I start to say before she makes contact, rubbing it on my opening, inserting a finger and rubbing by clit when she pulled away. I didn't mean to moan.\n\nI aim his dick up and start to drop onto it, and it's a struggle. I can only reasonably get him half way before I feel like I can't go any further. I place my hands on his shoulders for balance, and he grabs me from under my ass and lifts me up. There is so little motion, he'll take an hour at this rate. Chair wasn't the best place.\n\n\"Let's go to the bed, I can barely move,\" I say, starting to adjust to lift off him, but he picks me up with his cock still inside of me. He's also stronger than I thought. When he fell to his back onto the bed, the brakes let up and I slip to the base of his dick and let out a small scream.\n\n\"Fuck!\" I shout, my legs trembling from the impact. Did that hurt, or feel good? \n\n\"Somebody likes it,\" Samantha taunts.\n\n\"Fuck you,\" I say, gritting my teeth. \n\n\"Promise?\" Samantha says, I turn to see her sliding her shirt up and off, then remove her bra.\n\n\"Nope, not happening,\" I say.\n\n\"I'm not allowed to have any fun too?\" Samantha says, unzipping her skirt and removing her thong. Now she's completely naked, and I'll admit, I'm envious. How is a girl with that body sleeping with this guy. Then he thrusts up just a little, bouncing me up and back down to the base again. \n\n\"Shit...fuck...\" I struggle to say. That's why. \"I don't know if I can do this.\"\n\n\"Why stop now?\"\n\n\"He just fucking hurts,\" I say, lifting up and sliding him all of the way out, \"Put some clothes on, you are not a part of this.\"\n\n\"I like watching sometimes,\" Samantha says, now holding a vibrator that I have no idea where she got it, and started to glide it inside of her pussy. \"I got more toys if that will make it easier for you.\"\n\n\"Nothing would make this easy,\" I say, now thoroughly annoyed with her. \n\n\"I promise, when you get used to it, he hurts so good,\" Samantha says, rubbing her tits while driving the vibrator in and out. \"You can mellow him out with some more additional input, I can be very distracting.\"\n\nTwo things, I hate chicken shitting out of bet, and I don't want her to touch me. Which one do I hate more? \n\n\"What do you have?\" I ask, and she pulls out a small oval vibrator with a cord leading to a box that changes the speed and intensity. That seems harmless enough, just place that on my clit, maybe I'll cum and completely forget I'm being fucked by a whale dick. \n\n\"Get back on, and trust me,\" Samantha says, and for some reason I do. He still hurts, and I try not to go all of the way, but Samantha ruins my intent by smacking my ass, causing me to drop to his balls again. \n\n\"You bitch!\" I groan out, gripping his shirt with my hands. \n\nI feel Samantha's breasts press into my back through my shirt, and her hands reach around with a buzzing sound that lands directly on my clit. Samantha is raising and falling on her toy, keeping herself going while leaning over and kissing my neck.\n\n\"This would be better if you were naked too,\" Samantha says in my ear. \n\nI slowly rise and fall, but it's difficult with Samantha all over me. Will takes the lead and bucks me softly, doing most of the work even though I'm on top. What the hell have I gotten myself into? \n\nIt doesn't take long. There was no build up like I normally feel. One second it wasn't there, next it was, and I cum, really hard. \n\n\"I'm cumming!\" I involuntarily scream, Samantha biting my neck then jacking up the speed on the vibrator. It's too much, and I start to topple over, but they both hold me upright. It's the longest and hardest orgasm I've ever had, and Will makes it better by thrusting up harder, going halfway out then all the way back down fast and firm. \n\n\"Don't stop!\" I shout, my hands sliding off of his chest and to the sides of his head. I have no grip to grab anything. Will slows down, but his thrust is tip to base, and hard, and I'm cursing between hits. \"Fuck...fuck...fuck...fuck.\"\n\n\"Starting to like it?\" Samantha asks, stopping the vibrator and forcing my senses to snap back. Will slows down with shallow thrusts. That was intense. \n\n\"We can stop if you like, I'll call the wager paid,\" Will says, and I want to say yes, get dressed and leave. Unfortunately, I just got fucked silly, so my answer is barely even my own. \n\nI start to slide my shirt off, Samantha seeing me and helping me. My bra comes off as well while Will is removing his shirt and kicking his pants off of his ankles. \n\n\"My only limit is anal. Everything is on the table,\" I say twisting my head around and kissing Samantha. \"Do your worse.\"\n\n-Will-\n\nSomething tells me Chloe might regret asking for Samantha and I to do our worse. I look up at her body which is skinny and petite with tits I'm not sure are high B or Low Cs. They're perky though, great symmetry with nipples slightly bigger than Samantha. Her pussy is fully shaven like Samantha's. I didn't even feel her braces during the blowjob, but at one point I need to get her in doggy and use those pigtails the way Samantha wants me too. \n\nWe give her another spastic orgasm before we roll over. I spread her legs wide open and start to drill her. Not hard, just deep and slow, methodical while Samantha sucks her nipples, making her squirm. I pull Samantha into a kneeing position above her, and pull out of Chloe and into Samantha. \n\n\"I don't want to stop..\" Chloe says as Samantha hands her the vibrator, that Chloe immediately starts to use to keep her pace. \"I'm losing it, more.\"\n\nI pull out and into Chloe, Samantha handing me the vibrator to use on her, which I do. \"Do your worse,\" Chloe says again, so I make Samantha move off her so I can position with her legs on my elbows, leaving her wide open and elevated for maximum downward thrust. \n\n\"You sure?\" I warn.\n\nChloe hesitates for a brief moment. Looking around, she grabs her shirt and folds it over. She places the shirt in her mouth and bites into it, then gives me a nod. I give her my worse.\n\nFor two minutes I ram inside of her, tip to base over and over again in rapid and hard succession. Even with her gag the screams fill the room. I could have gone another minute, but I need to determine how much she can handle before I keep doing that. Chloe pulls the gag out, reaches up and grabs the back of my head and pulls me in for a kiss.\n\n\"I thought you said no kissing?\" Samantha asks.\n\n\"I said no to a lot of things before this started,\" Chloe says when our lips part, \"You even close yet?\"\n\n\"Not even a tingle,\" I say.\n\n\"Fuck,\" Chloe says, and then adjusts herself into doggy. \"Do that again.\"\n\nI give her my worse again, placing my hands on her hips and using them to shove her back to my pelvis. She has no smother this time, so now I notice her screams are an adorable combination of yelps, squeaks, and cursing. Now that I was finally here, mid thrust, my hands leave her waist and grabs her hair by the pigtails.\n\n\"Fuck yeah, just like that!\" Chloe says to my surprise. I fuck her from behind for longer than I did last time, and she announces her next orgasm. I slow down when she starts and reach around her body to fondle her tits and kiss her back. \n\n\"Right there,\" Chloe whispers, and one hand goes to her clit, and she's mine. Chloe crumbles to the bed and I can feel her entire body shaking. I could ask for anything right now.\n\n\"I need a minute, keep me up while I rest?\" I ask, and Chloe shyly nods. I pull out and fall to my back, Chloe turning to me and dropping her mouth onto me. Samantha joins her, the two taking turns like they were old friends. I try to judge who's better, but they're both better at something than the other. Samantha can deep throat, and Chloe is better with her tongue. Chloe works the tip, wrapping her mouth around it and circling her tongue while Samantha jerks the shaft with her lips, ending at the bottom by sucking one of my nuts, making me flinch a little. \n\nChloe asks to go again a few minutes later, and we return to missionary, again her pulling me to her mouth for a kiss. Samantha climbs on top of her, and takes the duty of keeping her mouth occupied. I alternate between pussies every ten penetrations, teasing them both. Samantha really wants to cum, so Chloe allows her to ride me, while she sits on my face, the two facing each other. \n\nTheir hands are all over each other, Chloe now in charge of the oval vibrator and holding it to Samantha's clit. I finger and lick Chloe, making her cum on my face just as Samantha climaxed as well. Then I finally feel it. \n\n\"Almost there,\" I mumble from her muff.\n\n\"Where do you want it? Trust me, you want him pulsating inside of you,\" Samantha says.\n\n\"No,\" Chloe says. I guess we haven't fully broken her yet. \n\n\"I thought your only limit was anal?\" \n\n\"I know I'm orgasm drunk right now, I'm not black out drunk.\"\n\n\"One hundred is still on the table,\" Samantha offers, and I know she's considering it. \n\n\"We're well pass bribes, and this is killing the mood,\" Chloe said, and even I feel our mood deteriorating. Two seconds ago this was our best yet, and that is almost gone. Maybe I can still save the atmosphere, and creampie her. ",
        "Samantha pulls me out of her, and I flip Chloe onto her side and kiss her again. Long, firm, passionate kiss. If I'm not making Samantha envious I'm doing it wrong. I caress her breast with one hand, and finger her with the other, never losing lip to lip contact. I use this to build up the emotional momentum I'll need to persuade her.\n\nI know she's ready to start again when she stops stroking my shaft and starts trying to guide it into her. With the hand I was fingering her with, I lift up her top leg and enter her, holding her leg under her knee. I never stop kissing her as I gently slid in and out, massaging my dick with her cunt. I feel her moans echo in my mouth. She's nearly there.\n\nI pull my lips away, place them next to her ear and softly say, \"I would love to cum inside of you.\"\n\n\"I don't know...\" Chloe starts to counter.\n\n\"You know how good it'll feel. It'll feel so good for me too. Today has been perfect, and I still have a few more ways I want to fuck you.\"\n\n\"I want those,\" Chloe replies.\n\n\"Your body is amazing, I can't get enough of it. After this, I want to keep going, and cum again. Maybe on your perfect tits, or maybe on that cute face when you're ready for that...\"\n\n\"I'm ready for that now, you can paint me. I want to suck your dick limp.\"\n\n\"That's not what I want right now. Right now I want to fill your pussy up,\" I say, and she's broken.\n\n\"Kiss me while you cum,\" Chloe says as her only condition. \n\nI press my lips into her and increase my speed, and I start to cum. My rhythm increases, and I feel her clench with every pulsation. For several minutes I slowly continue, before finally pulling out all the way. \n\n\"That was the best ever,\" Chloe says out of breath. Chloe didn't even ask for the money, I guess maybe because it would cheapen the moment. \n\n-Will-\n\nI'm apparently clear to have sex with approved women. Kind of like my open disclosure policy with Kori, only it's about disclosing the actions I want to do with other women and getting the okay. Is this a healthy relationship? I guess I'll know when Samantha wants to have sex with another guy, and how I react. That's kind of inevitable. \n\nChloe is approved, so three weeks before graduation she's sucking my dick in the photography room with the door locked after normal school hours. Thankfully her plan is for me to enjoy a prolonged event, so I don't have to explain my endurance from the other day. For fifteen minutes Chloe rubs her clit and fingers her pussy until I shoot into her mouth. \n\n\"Are you sure Samantha is fine with this?\" Chloe asks, readjusting her panties to normal and gargling some water. \n\n\"That's what she's claiming. She's got the approved list of side bitches,\" I say, Chloe directing a weird look at me, \"Samantha's words, not mine.\"\n\n\"I was gonna say, that didn't sound like you,\" Chloe says with a laugh, \"What happens when she wants a different guy?\"\n\n\"In theory I'm supposed to be cool with it,\" I say, still unsure if I will be when that time comes.\n\n\"Theory huh?\" Chloe asks, the two of us leaving room, closing the door behind us, \"For all future encounters if we so choose, I'd like to be a little smarter. I took plan b just in case, but condom for now on.\"\n\n\"The no condom thing is a Samanthaism, I really don't care either way. I'll abide by that from here out.\"\n\n\"I can't believe I'm having this conversation with you. You were always that quiet guy. I'd never assume you'd fuck like a machine,\" Chloe says with smile, \"I gotta get home, but maybe this weekend, just us?\"\n\n\"I'll let you know,\" I reply, her giving me one last smile before walking the other direction down the hall. \n\nI leave the school and returned home, where my father is waiting for me at the dinner table. \n\n\"Will, I want to talk for a minute,\" Dad says. I am in route to pass the entrance of the dining room, but I stop and sit across from him.\n\n\"A few months ago, I asked for an update on college, and you said you'd get back to me,\" he begins, me sighing, because I know how disappointing this conversation is going to get.\n\n\"I haven't sent out any applications since all of the ones were rejected at the end of last school year,\" I say, him nodding in a surprisingly understanding way.\n\n\"That disappointment is hard to force yourself to go through again. Who do you feel you disappointed? Your mother and I, or yourself?\"\n\nIt is way too late in the day to ask me these questions of introspection. What do you want me to say? I have no college options even if I had aspirations, and I knocked a girl up a few months ago. I'm fucked, I came to terms with that. \n\n\"Probably myself,\" I answer.\n\n\"I don't believe that you mean that,\" dad says. Brace for impact, here comes the bullshit train, \"You're more worried about what we think, because we've maintained this admittedly, harsh expectation of you academically. You've always struggled, this isn't new. There is a quote from Einstein that goes, 'if you judge a fish by its ability to climb a tree, it will live its whole life believing it is stupid'.\"\n\nThat wasn't entirely bullshit. Actually, none of that was. \n\n\"My generation has failed yours, by filling your heads with this idea that you absolutely need college to succeed in any meaningful way. My dad was like that too, and I remember when I was your age, I said I wouldn't be like my dad. I lied to myself, but then again, I wasn't a father when I said that.\n\n\"I'm going to ask you a question, that was never afforded to me. What do you want to do?\" Dad asks. \n\nI know that answer. I want to build things. Trade school, learn carpentry, welding, just working with my hands. I can stare at a math problem for two weeks and have no idea, the answer will never fill my mind. I can also draw plans and put what was in my mind into the physical world. Nothing is better than finishing a project, taking a step back, and seeing it accomplished. My work is done, and there is a tangible object in front of me.\n\n\"I don't know,\" I lie, and he knows I'm lying. I know he knows I'm lying.\n\n\"I want to show you something I found,\" dad says, standing up from the chair and leading me into the garage. In the garage is now large object under a tarp. Why does this look so familiar? Dad removed the tarp and it's my china cabinet. When the hell did he get this, and who told him?\n\n\"I had a good long talk with your teacher. He said he has never seen a student as talented as you. I can see why he said that. Is that what you're doing when you say you're at the library?\"\n\nI nod, and he opens the cabinet, where a sheet of paper is present. He gestures toward the paper, and I reach over and hold it upright to my face. It's a filled-out application to a trade school I've been eying for two years. The school I've been too afraid to say I wanted to attend. \n\n\"I had a friend in high school like you, I went the academic route, he went to the trades. He makes more than I do, and we're not exactly poor,\" Dad says, as his little stamp of approval. It's not about money to him, it's about the practicality of living sustainably. You can't eat your dreams.\n\n\"That friend, is now an instructor at this school. I sent him pictures of your masterpiece, he's excited to meet you. This school is more financially practical as well, so you can use what's left over of what we've saved for your college, to take care of that baby.\"\n\nHoly shit, how the fuck does he know about that? \n\n\"I had a visitor yesterday, a young lady named Kori. I would like to eventually meet some of your girlfriends before you break up. I know you two separated because of the pregnancy, but she very clearly cares about you. She told me about the cabinet.\"\n\nI nearly fall over in guilt. While I was dicking two girls, Kori was telling my parents the things I was too scared to tell them. I never did deserve her, that is now abundantly certain. \n\n\"You have a few really hard years ahead of you, I'm not going to lie. You're taking the consequences of those actions head on, and I'm proud of that.\" \n\nProud. What a turn of events when my father finally says that word. Granted, he says it in the context of me facing my fuck ups, but I'll take it. \n\n\"Thanks dad.\""
    ],
    "authorname": "CaffeineFetish",
    "tags": [
        "bet",
        "gamble",
        "threesome",
        "two girls",
        "toys",
        "teen",
        "creampie",
        "blowjob",
        "doggy",
        "ffm"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/14-hours-pt-11"
}