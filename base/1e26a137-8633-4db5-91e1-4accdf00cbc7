{
    "title": "The Mission of the Heart Ch. 03",
    "pages": [
        "Hey readers, long time no...write? Sorry, college is kicking my ass a little bit, but I'm coping ;)\n\nAnyway, this story has been sitting in my laptop for who knows how many months, so...\n\nHere you go \u263a\n\nI hope you guys forgive me though, I will try to write as much as I can. Write a feedback here and there, I love getting mails from you aka readers! \n\n---------------------\n\n(A lone scruffy guard spat on the concrete floor, coughing afterwards as he sniffed the condensed air. Andre was his name. At 250lbs, the tall man couldn't think of anything else other than what his damn wife cooked for dinner. Damn woman, he thought to himself. Always nagging and nagging her life away.\n\nHe looked around the cells, the prisoners behind them always moaning quietly. Growling silently to himself, he fast-walked to one of the cells, and kicked one of the hands of the prisoner's were inching their way out. \"Shut the fuck up, amigo!\" he spat, saliva flowing freely out of his mouth. The prisoner shouted something in Spanish, and inched himself to the depth of his cell.\n\nGrinning, the guard loves his power in this underground prison. Or may I say, torture house, he thought to himself, smiling. He did his usual routine, walking around and inspecting the cells, whistling and twirling his baton like he owns the place.\n\nHe walked pass each and every cell, but slowed his pace as he approached cell number fifty-nine. Straining his eye to get a clearer vision of the prisoner, he tapped his baton on the steel bars. \"Hola, hola!\" he said gruffly with his harsh Spanish accent, \"Anybody home?\"\n\nNothing.\n\nHe tapped the bars again.\n\nAgain, nothing, but a soft shuffling sound. \n\nWell, he thought to himself, that's a sign someone's there. Probably half-dead already. Grunting, he walked pass the cell and continued on his routine.)\n\n------------------------\n\n\"You're late,\" I whispered under my breath, looking up from my iPad. It was a dreary Saturday afternoon, everything was basically soaking wet. A typical spring weather in the Windy City.\n\nToday was my official hang-out-with-Charlie day. Well considering I have two guns on me, let's just say the word \"friend\" is a bit of an understatement. Let me reintroduce myself:\n\nCall me Pamela. In fact, call me whatever the fuck you want.\n\nI am an agent from The Agency, a secret independent organization that was made by whomever. Even I don't know my own employer(s). All I do is follow orders.\n\nI am 21 years old, 5'5, 137 lbs, and I have the skills and knowledge that are considered to exceed the norm's. \n\nI can kill whatever, whomever swiftly and without any problems. \n\nDeadly.\n\nBut it was a couple weeks ago when I failed to carry out my exact orders, which was to kill Charlie Carlson. The reason behind it? I have no clue to be honest...\n\nBut it was a good thing I didn't since a few weeks after that incident, I received another mission, which was to protect her from any harm at all. Mind-blowing, isn't it?\n\nAny who, back to the current situation, after that party (and the little \"incident\" I had with Ashley) Charlie finally asked me to have a girl's day two days after. Let me tell you, I don't know what's gotten into me because I'm nervous as hell.\n\nAnd here I am, sitting well dressed in a caf\u00e9 called \"Belfast Caf\u00e9\" sipping on my coffee (dark, please), my hair down, and a bit of make-up on my face. For the past twenty minutes, I had memorized everything and anything in the caf\u00e9, including people's faces, dresses, the paintings on the wall, everything within my field of vision. \n\nWhere the hell was she? I was fidgeting like crazy, and told myself to stop multiple times. I have never been this nervous in my life. \n\nOkay, maybe once when a Russian soldier held a gun to my face while I was kneeling and handcuffed. Good thing he had a good soul at the end, otherwise I would've died three years ago.\n\nThe front door opened, and there was Charlie with her leather jacket, soaking wet with a desperate look on her face. She looked frantically around the caf\u00e9 and smiled warmly when she locked eyes with mine. \n\nMy heart literally skipped a beat, and I had a funny feeling in my stomach. It felt like something was fluttering in it. My mouth went dry. Am I sick? Shyly, I picked up my mirror and moved my left colored contact around, just to see if it was still there (naturally, I have dark brown eyes, but I put on some light brown contacts on. Safety precautions).\n\nShe zigzagged through the busy building, and sat down in front of me, panting a bit.\n\n\"Ohmigosh, I'm so sorry,\" she said, trying to catch her breath. \"Some jerk deflated my tires after work, and I had to get a cab, but there was traffic-\"\n\n\"I-it's okay, really,\" I replied, smiling a bit. \"Besides, I had a nice bonding time with my IPad. So relax a bit.\"\n\nWith that, I sent a quick email to Carrie, asking her to look into the little \"tire incident.\"\n\n\"What were you doing?\" she asked, looking curiously at me. \"Facebooking?\"\n\nI smirked, and looked up at her.\n\n\"Something like that.\"\n\nShe was about to say something else, but a college, brown-haired waitress interrupted us. Slowly, I turned my IPad off, and laid it on the table.\n\n\"What would you like, hun?\"\n\n\"Oh,\" she said, a bit distracted. \"I'll have the mocha frappuccino, please.\"\n\nThe waitress smiled and told her she'll come right back. With a huff, she walked off through the busy working place, leaving a rather awkward silence between Charlie and I.\n\nOkay, calm down, I thought to myself. You can pass through a normal conversation.\n\n\"So, how was work today?\"\n\n\"What do you do again?\"\n\nThe question caught me off-guard, and I nearly spilled my coffee. I nearly forgot about my so-called occupation.\n\n\"I'm a waitress at Tru for...perhaps a year now.\"\n\nI smiled gracefully like the question was nothing out of the ordinary. She leaned forward with her elbows on the table. I looked at her like I was being interrogated. Actually, I think I was being interrogated. Playing it smoothly, I also leaned forward and looked at her straight in the eyes.\n\n\"Why do you ask?\"\n\nShe tilted her head slowly to the right, carefully observing me. My mouth felt like a desert, so I immediately drank my coffee until my cup was empty.\n\n\"Tell me my name.\"\n\n\"What?\"\n\nShe bit her lower lip uncertainly, and cautiously looked at me.\n\n\"My name,\" she repeated innocently. \"Is it too much to ask?\"\n\n\"Your name,\" I said, clearing my throat,\" is Charlie Carlson.\"\n\nInterrupted, the waitress came back with Charlie's mocha frappuccino. Both Charlie and I jumped in result of her immediate presence. Instinctively, I placed my hand to my gun-harness hidden underneath my black coat. Charlie looked at me suspiciously, and took one small sip on her frappuccino. \n\nI frowned a bit, looking at her mysteriously. Coincidentally, my phone vibrated inside my pocket, the same side the harness was.\n\n\"Excuse me,\" I muttered, and slowly walked to the bathroom. She gave me a somewhat blank look, but then smiled and said sure. I pulled my iPhone out, and looked at the caller ID. As expected, it was Carrie. Swiftly, I went into the one-stalled bathroom, locked the door, and answered.\n\n\"Give me something.\"\n\n\"Alright,\" she said hurriedly on the other line,\" we may have a stalker or two on our hands. Well, on your hands technically.\"\n\nGreat.\n\n\"Well, you gotta give me more than that, Carrie.\"\n\n\"Okay, okay.\"\n\nI patiently waited while Carrie typed away on her keyboard on the other line. Stalkers? I dug deep within my mind, and visualized the entire caf\u00e9 without missing any detail, searching for any suspicious activities.\n\n\"Got it. The deflated tires were no incident, but I have trouble going through the public cameras that were around her car at the time. Damn. I do, however, have a satellite picture of them.\"\n\n\"Them?\"\n\n\" Yea. Four, to be exact. They are-\"\n\n\"Between the weight of 180-230lbs, one of the men had sunglasses, another has a limp possibly because of a sport injury. All are of Italian descent.\"\n\n\"Yes, bull's eye,\" she said. I can visual her smiling on the other line.\n\n\"Please send me a link righ-\"\n\n\"Way ahead of you. I'm already sending it.\"\n\n\"Thanks, Carrie.\"\n\nA couple of seconds went by, and the link came through my iPhone. I opened it, and the suspects' pictures popped up. \n\nI was right.\n\nThey were all in the same caf\u00e9, scattered and seated in different tables. Quickly, I turned off the cell, and gracefully walked out of the bathroom after I made sure I put a silencer on my gun. As I was striding back to my and Charlie's table, my body was ready for any attacks. Just like any other situation I've been. Billions. But this time it was different. This time I feel protective, like a female bear would for her baby. Protective to the point of destroying their bodies into little pieces, while Charlie is behind a protective wall: me. \n\nCharlie's face lit up as I was only a few feet from her, and my mood lightened instantly. She was playing with her hair, falling softly on her face while looking at her drink closely.\n\n\"Did you know there's like 500 calories in this little thing?\" she said. \"Holy shit, no wonder I feel so full!\"\n\nI sat down gracefully beside her instead of in front of her. She looked slightly surprised, but didn't mind me. I crossed my legs together, and looked at her with every focus I had.\n\nShe turned, and looked at me curiously once again. I smiled instinctively, and looked away, sipping on my drink. While doing so, I looked on the corner of my eye: one of the guys was moving closer to us. \n\nSo unprofessional, I thought as I set my cup down. How stupid could you possibly be of thinking you can do anything crucial in a public place? The men must be amateurs. Pathetic. I made a small growling sound in the back of my throat, but coughed to cover it up.\n\n\"So,\" Charlie said in a somewhat small voice. \"Really. Have I...talked to you or met you before? I mean, before we became close.\"\n\nAs I looked back at her, she looked so vulnerable with her green eyes, her hands fidgeting. As I was about to answer, my iPhone started vibrating. I took it out, and opened up the new text message from Carrie.\n\n\"Warning! One of them is a trained Terrorist!!!! There's a high chance of one of them carrying some kind of explosives-\"\n\nThat was all I needed.\n\nI quickly put my phone in my pocket, and stood up abruptly. Charlie took no notice of my behavior since she was preoccupied with a fellow friend of hers waving on the other side of the building. Automatically, I grabbed her hand and whispered,\" let's get out of here\" near her ear.\n\nShe looked at me questionably right after my hand made contact to hers. I looked at her, and smiled. \"Trust me,\" I said reassuringly, squeezing her hand a bit. Raising an eyebrow curiously, she slowly nodded and followed me out of the building. We raced through the crowded caf\u00e9, saying our \"excuse me's\" and \"pardon me's\" to the people we bumped to, and finally reached the door. As we were about to go outside, I looked over my shoulder and saw movements among the crowd that was headed our way.\n\n\"What's going on?\" Charlie asked as she followed my gaze. I looked over the room again, sensing that the men were close. I gently tugged her outside, greeted with a hug from the cold wind and the tears of Mother Nature.\n\n\"Wow,\" I said, shivering looking over at her and back at the cafe. \"Spring weather, huh?\"\n\nShe stopped and released her hand from mine, water pouring over her face.\n\n\"Alright, what is going on?\"\n\nFeeling a bit panicky, I looked closely at the caf\u00e9 and discovered that not one of the four men was coming out from it. What the hell, I thought. Talk about a short chase. Paranoid, I looked frantically around, but found none of the men.\n\n\"Hey, I'm talking to y-\"\n\n\"Charlie?\"\n\nI spun around to see who called out her name and found myself staring to a handsome, blue-eyed man in a business suit. Oh yes, and I do mean handsome, like Brad Pitt in the movie \"Troy.\" In fact, there were some resemblance, but his hair was darker. I looked at Charlie, her face blushing, and her eyes down at the ground. Slowly, she met his gaze shyly, biting her lower lip unconsciously. It was at that moment I realized I didn't like this guy, whoever he was. Not one bit.\n\n\"James!\" she exclaimed, and gave him a hug, which he returned a little too quickly. \"How have you been? It has been, what, a year already?\"\n\n\"A year and two months!\" he said smiling, showing off his white teeth. \"And I've been great. I just came back two weeks ago from New York.\"\n\nThey continued on their conversation, as an unfamiliar feeling began to rise within me. What was it, anger? Jealousy? Envy? It was all too confusing, because it seems that these emotions were compacted into one and they were all crowding my chest. What was happening, I asked myself.\n\n\"Pamela?\" Charlie asked, turning her head to me with concern. \"Are you okay?\"\n\nThe Brad Pitt look-alike (James, was it?) looked at me with amusement written on his face, his hands in his pockets. He looked at me from head to toe, and I shifted uncomfortably under his gaze.\n\n\"I, uh,\" I said, clearing my throat. \"I gotta go, but I'll see you guys later.\"\n\nSmiling, I turned around and coincidentally spotted one of the men, walking idly in front of the caf\u00e9, and going to a nearby alley. It seemed he didn't spot me. Still walking, I looked around some more and didn't find the other three men, which was highly unusual. Unless, he wants me to follow him through the alley. I looked over my shoulder and eyed Charlie; she was still busy chatting with James.\n\nSmirking, I fast-walked to the man, and followed him to the lonely alley as droplets of rain dripped down my face and body. It's about bloody time I get some kind of action, I thought to myself as I reached inside my coat feeling my gun. \n\nWalking from a safe distance behind him, he suddenly stopped in the middle of the valley. I stopped my tracks. He then spun around quickly and shot a bullet in my directly. I felt it going dangerously close by my head. As I ducked and hid behind a dumpster, I saw the three other men bursting through a door, shouting something in foreign tongue.\n\nBullets flew past me, and I got my other gun out. \n\n\"Big mistake,\" I muttered under my breath. Quickly, I leaned over and shot multiple bullets to them.\n\nLet's just say the fight was short and sweet.\n\n------------------------\n\nHumming quietly to myself, I walked over and around the dead bodies and walked lazily to the fourth man, crawling to his gun. I stepped on his gun, and kicked it away; I could already hear the sirens going off from a distance.\n\nShrugging the cold water off my eyes, I put my gun between his foreyes, as he rolled to his back and looked at me with pleading eyes.\n\n\"Please...\"he begged, panting. \"Spare me...please- I won't tell anyone w-w-who you are. Please!\"\n\n\"Shut up!\"\n\nI pressed the barrel harshly to his head, death in my eyes. Kill him, I thought to myself. Kill him, kill him, kill him!\n\nBut at that point, I couldn't. I couldn't kill this man, and I don't know why. It's as if an invisible force is forbidding me to do so, I could not pull the trigger. I looked at him, and dropped my gun to my side.\n\n\"Get the fuck away from us,\" I whispered deathly to him. \"I won't be as merciful next time.\" He nods. Sneering, I put the gun in my holster, and began walking away, at first never taking my eyes off of him. Sighing, I began looking straight ahead, wiping the cold rain off my face.\n\nFuck! Why did I do that? Why? Why is it only now I let him go? He was a threat, for God's sake. He was a murderer, and will be again since I let him go. Why? Mumbling to myself, I never noticed the footsteps behind me.\n\nThen, a sharp pain on my right side, and I screamed in horror. I looked around, and found the man looking smugly at me, saying something in another language. I palmed heeled his nose, and he fell backwards ungracefully. He grunted when his body made contact to the cold concrete, and tried to get back up. Shivering, I got my gun out, and shot him multiple times on his torso\n\nI cried out in pain, as I looked at my bloody side: a piece of brown tainted glass stuck on my side. Sucking a breath of fresh air, I painfully got the glass out. Fortunately, it wasn't deep in me, but it was deep enough to cause a lot of bleeding. Whimpering, I shakily got my iPhone out and dialed for Carrie.\n\n\"Hello? Did you get them?\" she asks.\n\nPanting, I cleared my throat and started jogging as the sirens were only a half a mile away.\n\n\"Y-yes,\" I said rather weakly. \"I took care of them.\" \n\nThe buildings around me started dancing, my eyes heavy.\n\n\"S-shit...\" I whispered pathetically to the phone. \"I'm not s-sure if I can make it...\"\n\nWeakly, I got my two guns out, and threw them into the dumpster, closing it afterwards. Putting my hand on the brick wall for support, my body began to betray me and started to sway back and forth.\n\n\"What,\" Carrie said with concern in the other line,\" are you okay?\"\n\nI didn't answer. Instead, I pushed myself and continued to half-jog to my car. What's the use, I thought. I couldn't make it that far. I dropped the phone on the ground, and started to fall.\n\n\"Track me,\" I tried telling to the phone's direction. \"Track me!\"\n\nAll was darkness afterwards.\n\n-----------------------\n\n(The prisoner inside cell fifty-nine stirred, awakened. The prisoner doesn't know if it was day or night, nor does the prisoner know the date. Dizzy, the prisoner leaned against the wall, emotionless. The prisoner doesn't know anything.)\n\n-------------------\n\nI opened my eyes, my body feeling like a thousand pounds, vision unclear. I moaned and tried getting up, but a soft hand pushed my shoulder down. Hissing because of the sharp pain on my right side, another hand hovered my wound. I squinted my eyes to see where I was, and came to the conclusion that I was in my hotel room.\n\n\"It's okay,\" a familiar voice said, softly massaging my shoulder. \"You're safe.\"\n\nI began to relax, and muttered something unintelligent, but I know the last word I muttered was \"Charlie.\"\n\n---------------------\n\nA few days later, I was finally recovered thanks to Carrie and her quick thinking; I figured out she did track me and drove herself to my location. She even stitched me up herself, but my side was still sore as hell. During those days, Charlie would talk to me through the phone, asking me why I haven't been in Tru and such.\n\n\"I caught something at work, and I'm not feeling so hot right now,\" I tried telling her.\n\n\"Aww,\" she said in a cute voice. \"Want me to come over?\"\n\n\"No,\" I had said immediately. \"I mean, I don't want you to get sick either.\"\n\nDuring those days, we talked and talked through the phone, sometimes even two hours straight. We would talk about anything to work to our love lives. Well, mostly her love life.\n\nShe told me when it comes to love, she cautious since she was cheated three times from her previous boyfriends.\n\n\"How can they do that to you!?\" I said incredulously. \"That doesn't do any justice for you. You're beautiful and smart, anyone can fall for you!\"\n\nShe giggled on the other line.\n\n\"Well, I don't know,\" she said a bit sadly. \"I guess it's my personality. Most of my friends tell me it's because of my shyness and ingressiveness. I guess I can be a little na\u00efve too.\"\n\n\"You know what I think?\"\n\n\"What?\"\n\nI waited a few seconds and smiled,\" That's bullshit.\"\n\n\"There you go again,\" she giggled. \"You know, I feel so comfortable talking to you. I mean I know we only became friends for a couple of months now, but I don't know. I feel...safe when I'm talking to you. That sounds so lame, sorry.\"\n\nAs I put a silencer on my gun, I stopped breathing. My heart started thumping and felt like bursting through my chest, like an animal wanting to get out of its cage. I smiled unconsciously. ",
        "\"Seems like you can't live without me, huh?\"\n\n\"Yep, that's it.\" I can feel her grinning on the other line.\n\n\"Well don't you worry,\" I said, still smiling. \"I feel the same way.\"\n\nWhoa, where did that come from?\n\n\"Yea?\"\n\n\"Yea, why not? It seems boring to be just your friend. So why not be a secret superhero, too?\"\n\nShe giggled again, \"You're a dork! Anyway, when you're all better, we should have a girl's night at my place. Just you and me. Besides, you haven't talked about your love life at all, missy!\"\n\n\"I told you,\" I said. \"There's nothing really to talk about!\"\n\n\"Uh-huh, suuuure,\" she said. \"I got to go. I'll call you later, yea?\"\n\nSmiling like a schoolgirl talking to her football quarterback crush, I said, \"Of course.\" With a click, she was gone. Immediately, I frowned.\n\n\"So,\" I said gravely. \"You know why you're here.\"\n\nI picked up my gun, and looked at the gagged and tied man sitting on the chair in front of me. He shivered at the look of my eyes, squirming to get out. I stood up, and pointed the gun on his thigh.\n\n\"You know what's great about this hotel room? Unlike any hotel rooms?\"\n\nHe shook his head in fear.\n\nI brought my head near his face and whispered, \"It's completely soundproof.\"\n\n-------------------------------\n\nLater on that night, I immediately infiltrated Charlie's house and hid on top of the roof, waiting for any disturbances to happen. The man I \"interrogated\" told me some professional men were ready to break into her house. Well we can't have that now, can we?\n\nI had my full gear on; from my balaclava and night goggles, to my suit, to my M-160 Assault Rifle. Everything. I was all set for the night.\n\nSighing, I slowly sneaked to be on top of Charlie's room, and sat on the cold roof. Grunting, I gently massaged my sore side, and slowly laid myself down. Putting on my headphones, I listened through them for any disturbances (I put multiple microphones in her house, especially her room). I lifted my night goggles up. Then, I waited, and waited for what the night was about to bring me.\n\nI slowly closed my eyes, completely focused on everything around me plus listening through the headphones. Years of patient and hard training, I mostly mastered the art of listening, but I never did find out what the significance of it until I was finally assigned to my first assignments. \n\nThe moon was up and high, like a spotlight shining upon the Earth. I loved the moon. Even though there are some evils in the world, looking at the moon always calmed me down. I smiled under my mask.\n\n\"Help!\"\n\nFrowning, I sat up quickly, and crawled to the edge to find the disturbance from below. Men were scrambling here and there in confusion. I listened closely to my earphones and heard Charlie scrambling in her room, and walking to her balcony. Idiot, I thought to myself. Stay in your room!\n\nBut, of course, she didn't. She went to her balcony with her light blue robe, curious what was happening below. Slowly, I crawled backwards to be hidden.\n\n\"What's going on?\" I heard her say under her breath, wrapping her body to shield herself from the cold. She leaned over to get a better view; the men all huddled by the gate. Idiots! \n\nSomething's wrong, I thought to myself. It doesn't add up. If these so-called killers were to get their hands on Charlie, why are they approaching the front door? I put my night-vision goggles on, which can be a magnifier also. There was a truck parked in front of the gate. As far as I know, there was no one inside, but the truck engine itself was running.\n\nThen, a soft knock. Charlie turned around and jogged to the bedroom door and I listened intensely. I heard the door open, and a shuffling sound outside of it.\n\n\"We're sorry about the disturbance ma'am,\" a man said, assumed to be one of the guards. \"But we'll take care of it.\"\n\nWait a minute.\n\n\"Good,\" Charlie said with a sigh of relief. \"I thought something serious was going on down there!\n\nWait just one goddamn minute.\n\n\"It is okay, ma'am,\" another man said with a very rusty Italian accent. \"It will all end soon.\"\n\n\"Shit, shit, shit,\" I muttered under my breath, as I stood up and jumped down stealthily onto the balcony. The accent, why didn't I catch that earlier? Why couldn't I stop them before they knocked on Charlie's door?\n\nA muffled screamed erupted in my eardrums, and I immediately burst through the balcony door, my silenced gun in my hand pointing at the three men surrounding Charlie. One of the men spotted me, and shouted something in Italian through his walkie-talkie. The electricity went off, and multiple shots were fired in many directions. I took cover, and hid behind a couch, swearing silently under my breath.\n\nYou're losing your fucking touch, I thought to myself. Putting my goggles in night vision, I quickly took a double take and started firing back. One of the men started dragging Charlie out of her room, but she elbowed him on the ribs and got out within his reach.\n\nGet out of here, I thought to myself as I shot one of the men square on the head. Get out of here, Charlie!\n\nBut the thing about Charlie is she's stubborn. Every time we would go out to eat, she insists to pay for our meal. Imagine my shocked expression behind my mask when I saw her elbow a guy in the temple. Oh dear god, I thought to myself. I shot the guy multiple times on the torso, and she looked at my way, a scared look on her face. Instinctively, I looked at her through my night goggles, my body refusing to move. God, I thought to myself. She's beautiful.\n\nSuddenly, the last guy behind her bear hugged her, and she gave a big yelp. She began thrashing her body, furniture and decorations crashing down around her. I couldn't get a clear shot because there were a lot of movements. A little frustrated sound erupted from the back of my throat.\n\nThe man became aware of my presence, and began looking at my way. He grabbed Charlie with one arm, and put a gun on her temple. She froze, completely aware that she was being held hostage.\n\n\"Come out!\" he bellowed thickly, pressing the barrel harshly on Charlie's temple. She whimpered, streams of tears flowing freely down her cheeks. I stopped breathing for a second. It has been a while since I was involved in a hostage situation and the last time I engaged in one didn't have a favorable outcome. Trying to analyze the after results, I couldn't help but to stare at Charlie fully vulnerable and scared. I wanted to massacre the man holding her more than anything else. \n\n\"Come out or I kill her!\" he shouted. I can see his brown eyes full of anger, his brows smothered in sweat.\n\nSilently, I argued to myself if I should come out or not. If I do, who's to say he won't shoot me right on the spot? If I don't, what would happen to Charlie? And many other questions. Decisions, decisions, decisions...\n\n\"Please...\"Charlie whispered, her hands shaking by her sides. \"Please help m-\"\n\n\"Shut up!!\"\n\nI slowly got up, and walked towards them, my gun pointed straight to the man. I couldn't get a clear shot since he was hiding behind Charlie. Bastard. Even though the lights were out, the moon brought a little light in the room. Charlie held her breath, as my familiar appearance appeared before her.\n\nThe man tensed, and growled,\" Drop the gun. Drop it now!\"\n\nI hesitated, and kept my ground a few feet from them. Glaring through my goggles, I gritted my teeth. I could feel my heart pumping in anger, my mind focused on killing the man only and to kill him in the painful way as possible. But more importantly, I wanted Charlie as safe as possible.\n\n\"I swear I will kill h-\"\n\nThen, with a daring move, Charlie moved the barrel away from her temple, and stomped the man's toes. The gun went off, and Charlie screamed on top of her lungs, making her fall before me. Taking the chance, I shot multiple times at the man's direction, but he was smart. He hid behind the door, reloading his gun. I shot at his direction, but failed to shoot him. The gun clicked as I pulled the trigger, indicating I needed to reload. Shit, I thought to myself. I dropped the gun, and started to pull for my other one. But at that same moment, the man was pointing the gun at Charlie, and he was ready to shoot.\n\nFight or flight, and I decided to fight hard. The Agency always trained us based on fast decisions in order to make our mission a success. I looked at Charlie, on her stomach shaking by my side. She looked up and saw the man, whimpering when she saw him point the gun at her. Automatically, I dove down in front of Charlie, a shot was fired and the bullet made contact to my chest.\n\n\"Ugh!\" I groaned in pain. The man stupidly stepped into the room, and I made the shot immediately to his head. He didn't even made a sound as his body fell to the floor. Painfully, I rolled onto my back and panted silently to myself. Gently, I placed my hand on my chest checking if the bullet went through. Thank god for bulletproof vests, I thought to myself. But my right side was another story.\n\nI silently whimpered in pain as my hand grasped my side, the same side the man from a couple of days ago stabbed me at. As my body lay there on the floor in pain, Charlie was already kneeling beside me, looking over me. A bit panicked, I tried sitting up, but her soft hand pushed my chest down to the floor.\n\n\"Who are you,\" she whispered to herself more than to me. \"Who are you?\"\n\nI didn't say anything as I lay there breathing deeply in front of her. Under the moonlight, she was still beautiful, but I can see uncertainty in her eyes. Her light brown hair was a mess, but it looked so sexy on her. Her robe slightly came undone, and I can see she was only wearing a tank top and underwear under it. Beautiful was an understatement because she was beyond its mere definition.\n\nI started getting up, but then saw a gun pointed to my face. And Charlie was holding it.\n\n-------------\n\n(\"Get in there, you piece of shit!\" the guard yelled as the he threw the prisoner into the cell. The prisoner's body made contact with the ground harshly, a small crack can be heard a mile away. The prisoner didn't make noise. Just a small grunt, barely audible.)\n\n---------------------\n\n\"I told you, do not report anything!\" Charlie said to the guards outside her door. \"You've already done your job, plus you got the bodies out of my room. Just tell the police it was just a simple break in gone wrong.\"\n\n\"But what about the one over there?\" the guard said, looking at my direction. Charlie looked at my way, and waved the guards off.\n\n\"I'll take care of it,\" she said impatiently. \"But, I swear, if you report this-\"\n\n\"We get the message,\" the same guard said. \"We'll leave you alone.\"\n\nAnd with that, Charlie closed the door hastily. She then turned around and glared at me. The electricity was still off, but one of the guards brought an electrical lantern into the room. It felt like a spotlight that was directed at me.\n\nSo there I was, sitting on Charlie's table chair while my hands are handcuffed behind it. All my weapons and gadgets were taken away from me, except for my mask and suit. I glared back at her, but didn't make a sound. But inside, I was in a huge amount of pain. My side wasn't cooperating with me, and I grimaced at the knife-feeling pain it caused me. \n\nShe had all my guns, and they were all laid out on the bed. She looked at me with complete curiosity and carried one of my guns. Then, she slowly sat on the bed in front of me, her eyes never leaving mine. Fidgeting, she leaned over to me and I slowly raise an eyebrow at her.\n\n\"Look,\" she said in a serious tone. \"We can either do this the hard way or the easy way. What should it be?\"\n\nA smile crawled on my lips. Did she know who she was talking to? I didn't say anything, but continued to look at her. She slightly curled her lips downward, frowning. Even when she was mad and frustrated, she still looked stunning as always. Squinting her eyes at me, she put her creamy hand on my jaw, slightly tugging on my mask. With horror, I moved my head away for the fear of her discovering who I really was.\n\n\"No,\" I whispered, my eyes looking at the floor but her hand never leaving my jaw. \"No.\"\n\n\"Oh?\" she said curiously. \"What happens if I see the person behind this mask?\"\n\nWith that, she slowly began to lift my mask up. I winced away, turning my head violently all the way to the left. \"No,\" I whispered firmly.\n\n\"How about you fucking tell me what's going on then,\" she said in authority, \"or I will fucking remove your mask. Do I make myself clear?\" With that, she put a bit of pressure on my right side, my teeth gritting in pain. I turned to her once again, my eyes glaring into hers. She shifted uncomfortably, and unconsciously leaned backwards. She's still afraid of me, I thought to myself. But didn't want to show it.\n\n\"Untie me,\" I whispered, slightly leaning forward,\" and I promise you I will tell you what you want to know.\"\n\nShe tilted her head to her right with uncertainty and crossed her arms. \"How do I know you're not lying?\"\n\nWith that, I leaned back and said,\" Because I just saved your life.\"\n\nPlease just let me go, I thought desperately to myself. Please. As I tried looking at anything in the room except Charlie's gaze, I heard her get up and pace around the room. I pulled on my handcuffs weakly, but the overwhelming pain in my side made my whole body go limp. I can feel myself getting slightly out of breath, and dizzy again. As my head sagged downwards, I cried out in pain, whimpering. Let me go, I thought to myself. Let me go.\n\n\"Let-\" I gasped. \"L-let me g-\"\n\nI whimpered again, shaking out of desperation, trying to keep myself under control. Over all the missions I got assigned to, I never let anyone show my weaknesses, not even when I was in pain. But this was different, obviously. Taking a breath, I looked around, and found Charlie at my right side, looking at me with concern. Curiously, she reached her hand out and laid it flat on my side, making my body tremble in pain. Tears were beginning to form in my eyes, but I tried blinking them away.\n\n\"Are you hurt...?\" she asked softly, massaging my side as she kneeled. \n\nI didn't answer, but my body language gave it away. Literally, my body became tense, petrified. It was no use, I was the one being handcuffed to a chair. Turning my head and meeting her gaze, I gave her a pleading look, an expression I never thought I would wear. \n\n\"Please,\" I whispered firmly. \"Just let me go.\"\n\nWe looked at each other for a couple of seconds, but felt like an hour. I could easily get lost under her gaze. Blinking a couple of times, I answered truthfully, \"I need s-some medical aid.\"\n\nShe looked at me carefully, her mind full in thought. I analyzed the possibility of me getting out alive tonight and the result was pretty disappointing. Either she lets me go, I die, or I stay handcuffed for the rest of the night. God, anything but the last scenario. Charlie cursed under her breath and stood up slowly, her eyes never leaving mine. I looked down to my toes, and felt Charlie's hand on the handcuffs. With the click, they landed softly on the carpeted floor.\n\nImmediately, I put my hands on my side, grunting. I let my gaze linger to Charlie, who was cautiously walking to the bed getting my gun. I painfully stood up, and she grabbed the gun like a child would to a teddy bear.\n\nBut the odd thing was...I wasn't afraid. I love her gaze. Over the months we became close, I always would fall under her gaze and her lips while she talked. And her mind? It was brilliant. She was beautiful inside and out, which scared me. I never felt anything like this before, I was in an unknown territory. But at the same time, it intrigued me. She intrigues me and tonight, I was about to go deeper into this...territory. Whatever it is.\n\nI looked at her with a pleading look in my eyes, my body unconsciously walked towards her. What the hell are you doing! My mind screamed with comments and criticisms, but for the first time, I completely shut off my left lobe. Because overall, I wanted her.\n\n\"W-what are you doing?\" she asked, raising the gun to my head. I still kept on walking, while gingerly taking off my clammy gloves. She was addicting to look at. The way she moved, talked, everything. With every step, I can feel my body becoming weaker and weaker, not because of my injury. No, this was something else. Something deeper.\n\nI stopped as the barrel made contact between my eyebrows, my hand slowly reaching her. To my surprise, she didn't move or flinch, but stood frozen like a statue. Slowly, I pushed the loaded gun aside, my stare digging into her eyes. Airily, I let the back of my hand softly glide up her arm, and she shivered in response, her skin shaking under mine. \n\nWith my other hand, I glided one finger across the barrel, and slowly took it out of her hand and gently laid it on the floor after I put the safe lock on. Slowly I stood up, my head looking upwards.\n\nWith her grassy-green eyes wide open, she let her hands fidget unconsciously. She had her full attention on me. I walked even closer to her, our heads only an inch or two apart. She held her breath and walked backwards a step.\n\nNot wanting her to feel threatened or uncomfortable in any way, I stood my ground.\n\n\"What about you? Are you hurt?\" I whispered with concern, not recognizing my own shaky voice. She replied with a shake of her head, while covering herself up by wrapping her arms around her chest. I held my breath and looked down shyly.\n\n\"I, uh,\" I said softly, my hands at my back. \"I suggest making the security even tighter around here. Maybe even interviewing each and every one of your security guards, uh, in person just in case.\"\n\nShe looked at me with full curiosity, but remained cautious of my presence. Slowly, I went to her bed and gingerly started picking my stuff up. As I was about to put my vest on, I felt a soft hand on my right shoulder. I froze, then whipped my head to the right.\n\nCharlie, alarmed, stepped back. With full courage, she walked to me again and helped me put all of my equipment on. I looked at her (with a shocked expression underneath the mask) affectionately. I can feel she was forcing herself to be even nearer to me judging from her trembling hands.\n\nShyly, I whispered, \"Thank you.\"\n\nShe shook her head, and looked at me intensely. \n\n\"No...\" she whispered back, cupping my face with her hands. \"Thank you.\"\n\nAt that moment, I was completely hypnotized by her eyes. I felt numb, and I couldn't breath. Then slowly, she started to lift my mask. My brain shouted to stop her, but my body wouldn't respond. \n\nShe stopped halfway, only revealing the lower half of my nose and my full lips. Biting her lower lip, she leaned in to me, and brushed her lips on my cheek. It was the sweetest sign of affection I have received in my life.\n\nI put my hand on hers, while the other shakily glided up her fore arm. She shivered again, and let her lips linger on my cheek longer than necessary. Gulping, I decided to bite the bullet and stepped closer to her. She stepped back, shaking, but her eyes told me to keep on going. \n\nI walked forward, she stepped back. I walked forward again and again, and she stepped back until her back made contact to the wall. I stepped even closer, until my body slightly pressed against hers. \n\nShe took a gulp of fresh air, as she looked at me. Challenging me. I can feel the heat radiating from her body, a drop of sweat glided down her forehead. I brushed a strand of her light brown hair, as her eyes darted back and forth from my eyes to my exposed lips. \n\nI gritted my teeth together, then boldly pressed my lips to hers softly, brushing them to hers.\n\n\"Any day, I would gladly give my life in order to save yours ...\" I whispered intimately. I felt a puff of air coming out from her mouth, while she shut her eyes closed. She trembled. Boy, did she tremble. I couldn't tell if it was from fear or something else, but I realized I crossed the line.",
        "Embarrassed, I quickly stepped back, and noticed her chest was heaving violently up and down. She opened her eyes, and I noticed that they became darker and dilated somehow. Darker from... fear, maybe?\n\nI pulled my mask in its proper place, while still staring back at her. Quietly, I started to walk towards her open balcony, while I heard a small whimper behind me.\n\n\"Wait,\" she croaked brokenly. \"Can I at least know your name?\"\n\nWithout stopping, I answered, \"Call me Seventy-Six.\"\n\nWith that, I went out and crawled to the roof.\n\n-------------------\n\n(The prisoner stirred once again, careful to not make any noise. The prisoner doesn't know how long the sleep has lasted. Perhaps minutes, hours, maybe even weeks. But what the prisoner does know is the fact that things are going to get...much worse.\n\nCarefully with a small pebble, the prisoner made a small mark on the wall, indicating how many times Andre the guard made his morning or nightly duty routine.)\n\n-------------------\n\n\"You did what!?\" Carrie asked the next day.\n\nWe were in my hotel room, and I just finished showering. It's a habit of mine to walk around naked in my room since it felt refreshing. Oddly enough, I was very comfortable being naked in front of Carrie. At first, she blushed when she saw me without a single bit of clothing on my body.\n\n\"Do you always walk around naked in your room?\" she asked shyly, obviously trying to hide her blushing face.\n\nI smirked, knowing full well that being commando in front of her makes her blush. \"Why, yes,\" I said jokingly. \"I always do, so get used to it.\"\n\nBlushing again, she looked away, and asked,\" So what are you going to do about this whole Charlie situation?\"\n\nSighing, I looked for my civilian clothes, \"I don't know...I'm completely clueless about this whole thing!\"\n\nShe sat on my bed, trying to hide a smile.\n\n\"Alright,\" I said, rolling my eyes. \"Spill it!\"\n\n\"You got it bad for her!\" she giggled. \"That is so adorable!\"\n\n\"Fuck you!\"\n\n\"Oh, I'm sure I'm not the one who you want to fuck!\" she smirked.\n\nI blushed. \n\n\"So you're going to her house tonight, again?\"\n\nI combed my hair, and gave her a funny look. \"Of course! It's my assignment, you ass.\"\n\n\"Oh, I'm sure you now have different reasons than that,\" she smirked, raising an eyebrow.\n\nSmiling, I didn't say anything to her comment.\n\n--------------------\n\nThere I was again, lying on top of Charlie's roof. Same old, same old. \n\nBut this time, I felt an overwhelming amount of emotions scattered throughout my body. Hell, I almost got caught by one of the guards since I wasn't as sneaky to get into her property.\n\nBut. There I was, looking up to the stars naming as many constellations as I can. Then, I heard her shuffling inside somewhere in her room. A few minutes later, she opened her balcony door, and the goddess herself walked out of it. My eyes widening, I pulled my night goggles up, and took in the beautiful sight.\n\nShe was wearing a dark blue, long-sleeved shirt with short shorts. With her hair a little bit messy, she was bare foot. The way she dressed was simple, but whatever she wore still made her look breathtaking. \n\nObviously the daughter of Aphrodite herself, I thought to myself. Inching myself near the edge, I looked at her with complete amazement. \n\nShe started pacing back and forth, looking like she was deep in thought. Then, she stopped abruptly and looked up. Quickly, I laid myself on my back, hoping to God she didn't see me. I felt like a stalker looking at her like that. It was completely unprofessional of me.\n\nSuddenly, there was a loud crash on the balcony. Completely forgetting about my night goggles, they somehow got detached from my head. The result? They fell and crashed probably in front of Charlie.\n\nThere was a twisting feeling inside my stomach, and I covered my mouth from cursing out loud.\n\n\"I-I know you're there,\" she said, forcing herself to say it louder. \"Can you please come out?\"\n\nFuck, I thought. Fuck, fuck, fuck, fuck!\n\nAs I was about to scramble out of there, she said with a pleading voice, \"Please? I w-want to talk to you in p-person.\"\n\nI stopped, and sighed. Again, I argued to myself in my head over and over again. Apparently, my left lobe does not agree with my right lobe that often. This time, my right lobe won again.\n\nSlowly, I walked to the edge of the roof, and quietly jumped down right in front of Charlie. She was taken aback, but began to relax when she saw my familiar figure. Still crouching, I looked up and slowly erected myself. I stared at her shyly while putting hands at my back, showing her I wasn't any kind of a threat.\n\n\"Hello,\" she breathed, as she walked closer to me. I raised an eyebrow, surprised she's not a bit shocked finding me standing in front of her again. \n\n\"Hello again,\" I answered softly, hoping she won't recognize my own voice. \"Is...everything well here?\"\n\nShe took a couple steps closer to me, her green eyes sparkling underneath the moonlight. \"Yes, everything is good. But...can you please come inside? Please?\"\n\nI bit my lower lip, and nodded lightly. She smiled, and walked back inside her room, glancing back at me a couple of times. Smiling nervously, I followed her.\n\nHer room was now clean and well lit, but it was dim enough to have that relaxing atmosphere. I looked around the room, taking it in. It was actually quite lovely, fitting her personality well. \n\n\"I, uh, made some tea downstairs. Want a cup?\" she asked nervously, shuffling to the door.\n\nSitting on her bed, I nodded to her and she scrambled her way downstairs. Pamela, Pamela, Pamela, I thought to myself. What the hell are you doing? Even though my body absolutely, and I mean a-b-s-o-l-u-t-e-l-y, want to sprint out of there, I couldn't. It seemed like I was glued down, like I wanted her to know I was actually there.\n\nA few minutes later, she came back carrying a small tray, holding two cups of tea. Without making eye contact, she put it down on a night table next to the bed. I cleared my throat and slowly grabbed one of the cups.\n\nI lifted my mask halfway as she silently sipped on hers, eyeing me with interest. I paused only for a second, and continued to lift it halfway. Then, I took a small sip.\n\n\"So,\" she said, leaning in a bit towards me, strands of her messy hair falling down to her collarbone. \"Seventy-six. S-s-o you're, like, what. My personal bodyguard?\" \n\n\"You could say that,\" I said after I took a small sip. \n\nShe nodded knowingly, hoping for me to go on. I cleared my throat, \"That's all I can tell you.\"\n\nShe nodded again, but awkwardly. She fidgeted, looking down at the carpet, obvious there was a lot in her mind. I looked at her curiously as I set my cup on the table, then pulled the mask down.\n\n\"This doesn't make sense to me at all,\" she said as she awkwardly stood in front of me. \"And I mean all of it.\"\n\nI nodded, knowing full well what she might be feeling at the moment. Confused, fear, paranoia, etc. I put all my attention to her, hoping she will continue. She sighed with frustration, \"Well, what CAN you tell me? B-b-because honestly, I'm scared. I'm absolutely terrified of s-something like t-the...'last time's' situation might h-happen again and g-god I don't think I can t-tak-\"\n\n\"That's why I'm here, Ms. Carlson,\" I whispered to her, hoping my voice was soothing enough for her to relax. \"You don't need to worry of any danger in the future as long as I'm here.\"\n\nWithout any making eye contact with me, she nodded as she looked sadly at the ground.\n\n\"How are you, Ms. Carlson?\" I asked quietly, but professionally. As soon as she heard my voice again, her body stiffened. Then, she slowly and unsurely sat by my side, perhaps a little bit too close. Looking down at her lap, she was trying to say something to me, but hesitating to do so.\n\nInstinctively, I put my hand on hers, hoping to throw out some comfort to her. It worked. Maybe a bit too effectively. She started to shake, and looked at me with her puppy eyes. This time, though, they weren't as playful or energetic. Sadness and fear overpowered those beautiful eyes of hers. The tears came next, it was if I broke a dam and all the water came rushing out.\n\n\"I'm so s-s-scared,\" she sobbed as she tried to wipe the tears off her face,\"I-I-I-I've never been so scared i-i-i-n my l-life.\"\n\nI've seen many people cry in my life, from a toddler to a 90-year-old man, enemies and allies. But not once did I feel protective or had any signs of sympathy when they cried, not until now. Charlie is crying in front of me, and a feeling of protectiveness I have for her increased by 110%.\n\nWithout thinking, I took off my boots and my leather gloves. Rather awkwardly, I put a hand on Charlie's shoulder, and looked at me questionably. Softly, I pulled her body into mine, hoping to comfort her in any way possible. She hesitated at first, sniffed, and eventually leaned into me.\n\nI pulled Charlie into a full embrace while I pushed her gently down her back. She made sure her body was in contact with mine the whole time by clinging to me. So I laid myself down next to her as Charlie wept, her face crushing to my chest.\n\nI uttered comforting words into her delicate ears, saying everything will be alright. Here and there, she'll squeeze her body even closer to my body, making me feel like my respiratory system will fail on me anytime soon. I let my arm be used as her pillow, while I rubbed her back for comfort.\n\nWe stayed still like that with Charlie weeping quietly, until she stopped. She slowly put her head up until we were face-to-face, our faces only an inch apart. Under the moonlight, her eyes were red and puffy, her hair tangled and messy. But I didn't care, she looked more beautiful as she ever was. Gently, I let my hand abandon her back and wiped her teary eyes. She closed her eyes.\n\n\"Ms. Carlson,\" I said quietly, hoping my voice wasn't quivering. \"Trust me when I tell you this: I will protect you anyway possible. Anywhere you go, I will be hiding in the shadows\" Another tear rolled down her cheek \"but I won't interfere with your everyday life. Not until any danger \" I wiped the tear off her face, letting my thumb glide across her baby soft skin \"will be near you, that's when I'll strike.\" A soft whimper barely audible erupted from her throat.\n\n\"So you don't need to worry.\"\n\nShe opened her eyes, and a sign of trust was present. She nodded gently, as her hand went to my stomach. \"Thank you,\" she said quietly,\" I don't know how I can ever repay you.\"\n\nI smiled, \"By keeping you alive, that's rewarding enough for me.\"\n\nShe looked at me again, knowing full well that my statement made an impact on her, and smiled. Snuggling, she slept safely and comfortably that night with me holding her in my arms.\n\nI was in heaven.\n\n--------------------------------------------------------\n\n(Weakly, the prisoner tried to stay upright, but the body was too weak. Too broken. Too many torturous days in this hell.\n\nA loud tap, and the prisoner didn't even flinch. Andre the guard was doing his routine, once again, which means another torturous session with \"The Judge\" afterwards.\n\nThis time, the prisoner did flinch of the thought of another moment with that man.)\n\n---------------------------------------------\n\n\"We have a situation at Mexico,\" Carrie said to me matter-of-factly as she was typing away on her laptop. \"An American CIA agent went missing a couple of weeks ago, and no one knows where he is. But an anonymous tip confirmed that he might be in this underground prison and-what the hell, are you even listening to me?\"\n\nI was staring blankly at the white wall in my hotel room, as I laid my body down on the bed. Shaking myself to come back to reality, I looked at Carrie,\" What?\"\n\nNot knowing whether to act shocked or just laugh her ass off, Carrie shook her head, a small smile forming on her lips. \"Well, I'm just saying that if this thing at Mexico escalate, then The Agency might need someone to step in to make things right again.\"\n\nI looked at her blankly.\n\n\"Someone with experience.\"\n\nI looked at her blankly once again. \n\n\"And unlimited skills, Seventy-six.\"\n\n\"I know, Carrie, I'm not a dumbass,\" I said, smirking. \"But I highly doubt if they send me in. They need to train people to level up. So I won't be surprised if they send a young one to...'prove themselves to the agency.' \"\n\nShe shrugged as she closed her laptop and set it beside her.\" I'm just saying, just prepare yourself for the worse might yet to come.\"\n\nI turned my head towards her and raised an eyebrow.\n\n\"I'm sensing this isn't necessarily about the American spy.\"\n\n\"You catch on pretty quick, seventy-six,\" she sighed as she walked towards me. \"I'm just...saying. Things might not go as planned.\"\n\nShe sat on the bed and laid herself next to me, her shoulder almost touching mine. \n\n\"I...I know,\" I said somewhat quietly. \"I know things will definitely not go as planned. But, damn it! Just this once, I want to be happy.\"\n\nShe turned her head towards me, a look of concern crossed her face. \"She makes you happy?\"\n\nI turned to her, and nodded. \"Just the thought of her makes me happy. It... I don't know. I can't explain it, she just... does. Makes me happy, I mean, without any effort.\"\n\nI turned my whole body to her.\n\n\"I want this, just this once. I don't care if it only takes a month, or months to be with her, but don't I deserve to be happy? Just this once?\"\n\nCarrie smiled, turning her little body frame towards me. She cupped my face and nodded, \"I believe you deserve everything on Earth that'll make you happy. And if Charlie makes you happy, then go get her, Agent Seventy-Six.\"\n\nI smirked, putting my hand on top of hers,\" Pamela. I told you to call me Pamela.\"\n\nShe smiled and nodded, \"Pamela it is.\"\n\n-------------------------------------------------\n\n(The guard threw the prisoner into the cell harshly, and the prisoner's body made contact to the hard concrete floor once again. Spitting out blood, the prisoner tried to sit up, but failed. Unmoving, the prisoner can feel the splitting wounds oozing out blood, especially the one on the prisoner's face. A deep straight slice on the forehead, down through the prisoner's left eye, stopping on the collarbone.\n\nThe prisoner tried opening the left eye, but failed to do so when the pain became unbearable.\n\nThis time, the prisoner, staying unmoved on the ground, gave a small whimper.)\n\n----------------------------------------------------\n\nAs the days went on, Charlie and I became unseparatable. During the day, we became very close friends, going shopping all the time and enjoying each other's company. At night, I would stay up on the roof, until she'll call to me. That's when I'd go down, and greet her.Then, we would talk about her day, opinions, and frustrations. In return, I'll tell her a bit about myself and my history with The Agency. But most importantly, we'd talk when we lay down on her bed. And this happened routinely for the next two months straight.\n\n\"How can anyone take that kind of treatment?\" she asked incredulously. \"That's inhumane!\"\n\nI shrugged turning my covered body to her, \"Just the way it is for us.\"\n\nShe inched her way closer to me, \"You know, I've been trying to figure out your age for the past, oh I don't know, two months. So. I got to know. How old are you?\"\n\nI smiled under my mask, \"Guess.\"\n\nShe bit her lower lip, and tried to cut through my mask with her eyes. \"Hmmm twenty-seven.\"\n\nTrying to hold my laugh, I shook my head, but then gave her an escaped giggle. She pouted and tried to look offended, but laughed along with me. \n\n\"Am I way off then?\"\n\n\"Close. Not bad. Not bad at all, Ms. Carlson.\"\n\nShe giggled, and slapped me playfully on my arm. \"I told you to call me Charlie! So come on, out with it.\"\n\nShyly, I put a finger on her chin, making random soft circles on her soft skin. God, I love the feel of her skin. \"Twenty-one. Going to be twenty-two next month.\"\n\nShe hummed, her green eyes sparkling up to me. Snuggling even closer to my chest, she took my hand, studying it closely.\n\n\"You know...\" she whispered, \"call me na\u00efve, call me whatever, but I feel...I feel like there's something going on here. Do you agree?\"\n\nWith her finger, she trailed a vein on my hand, back and forth.\n\n\"Am I wrong?\" she mumbled when I didn't reply.\n\nI pulled my hand away from her, and her body stiffened. Sighing, I let my fingertips glide along the side of her neck and the side of her face. In response, she shivered, her hand fell on my forearm. \n\n\"There's something going on here,\" I said shyly, my finger tracing her earlobe. \"I was afraid...\"\n\nGingerly, her head rose from my chest, and snuggled to my neck. I forgot to breathe.\n\n\"Afraid of what?\" she asked so softly, but every movement of her lips I felt on my neck. \"Please tell me?\"\n\nMy chest started heaving violently, my body temperature incredibly hot. I couldn't breathe well through my mask.\n\n\"Hmmm...\"Charlie hummed, knowing full well my breathing pattern changed. \"Why won't you tell me?\"\n\n\"Because I can't...can't think,\" I gasped as her fingers raked across my stomach. I can feel her smiling on my neck. Gently, she started lifting my mask up, but I stopped her. A second passed, then two seconds, then three. \n\nInching her way up, she put her forehead to mine, and gently landed her lips onto mine. It was now harder for me to breathe through my mask.\n\n\"Shhhh...\"she cooed, her lips still on mine through the mask. She started lifting my mask up again. \"I trust you completely\" she gently bit on my mask, gently pulling it with her teeth \"don't you trust me?\"\n\nI started shaking, and pulled her to me tightly, as she quickly took my mask off. Completely. The side we were laying on had a bit of moonlight shining on us, but the other half was completely dark. I crushed my lips to hers, desperate for her lips. Quickly, I rolled her over to the other side, and she whimpered as she wrapped one of her legs over to me, pulling me even closer.\n\nHer hands found the tie of my hair, and removed it completely, letting my long hair hover around her. She grabbed the back of my head and pulled it to her with force, I couldn't breathe. Oxygen was a rare thing at the moment. I couldn't even think. All I can feel is this abnormally high body temperature of mine, and my blood so hot that it feels like acid going to ooze out of my skin.\n\nShyly, she pushed her tongue in, wiggling its way in.\n\nElectrical. That was the perfect word, it was if two wires jolted into life. It was hot. Definitely too hot for clothes to cling onto my body along with my weapons. I needed to get them off, and I needed to get them off now.\n\nGrunting, I struggled to sit up, I can feel the sweat on my skin covering 100% of my body. Charlie growled, refusing to let my body uncling to hers, she hooked her other leg over. With her two legs, she strongly pulled my hips to hers, her hands like chains on the back of my head.\n\nShe started to grind slowly, her tongue trailing from my mouth, down to my chin, then to my bare throat. I hissed, turning into goo.\n\nI struggled to sit up again, but her hands were like claws, gliding down my sides. I let out a little whimper, and she dared to let out a small giggle as she continued to suck on my neck. I couldn't take it anymore. With my trembling hands, I grabbed her hands and put them above her, I can hear her ragged breathing. It was if she just ran a full marathon. \n\nWe can only see each other's body outline, which I was thankful for since she couldn't see my face.\n\n\"Stay there,\" I breathed in her ear, my breath sending shivers throughout her body. She whimpered, her lower lip trembling with need.\n\n\"Seventy-six...please...\" she said brokenly, trembling. She tried leaning towards me, her head eagerly trying to meet mine, and knowing full well her hands were above her.",
        "Even though I can only see only 10% of her body, I can feel her. Every bit of her muscle contractions, breath, sweat. Everything.\n\nI took my weapons off: pistols, assault rifle, knife (safely shielded), everything and put them on the side of Charlie. Charlie Shuddered once again, and sat up, her legs still around me.\n\nSlowly, I tried getting my vest off my chest, until I felt her hands.\n\n\"Let me,\" she whispered in the dark, and gently tugged my vest away. She found the zipper of my suit, and glided it down. I nervously put my hands on her shoulders, then felt Charlie lightly kiss one of my hands, gently rubbing her cheek on it. \n\n\"Don't be afraid,\" she mumbled, her teeth vibrating on my hand.\n\nI got out of my suit awkwardly, except for my lower half. Charlie lifted my tank top underneath, along with my bra.\n\nThen, I gently lifted her night shirt and threw it on the ground. Smiling, I let my fingertips dance across her chest as I kiss her lips.\n\n\"I am afraid,\" I whispered during the kiss. Charlie rolled me to my back, I can feel the cold metal of my gun on my side. I shivered as I feel her skin, hotter than mine. Her skin felt sweaty, but completely erotic. Her goose-bumps were like knives piercing through my skin.\n\n\"Of what?\" she whispered back, nibbling on my lower lip. \n\n\"Of...you,\" I mumbled as I held in my moan.\n\n\"Why is that?\" she smiled, and nibbled on my neck.\n\n\"Because I'm definitely falling for you,\" I answered without thinking.\n\nSuddenly, she stopped, which made me regret answering. A second, two seconds, three seconds, then four seconds went by, but it felt like eternity. Then she rolled off me, and hopped off the bed. \n\nMy heart felt like it got stabbed and shredded into millions of pieces. While she was getting her clothes, I slowly sat up and got off the bed, ignoring the moonlight. Hundreds of questions screamed in my head, as I got my clothes too.\n\n\"I'm seeing someone,\" she suddenly said, her back on me. A lump formed in my throat. How did I miss this?\n\nI got my suit, vest, and some of the weapons on me, as I felt her stare. \n\n\"Aren't you going to ask me who it is?\" she asked quietly like a child would. \"Or do you already know his name.\"\n\nNo, I thought to myself, I don't want to know. But at the back of my mind, I already knew who it was. Pretending like her words didn't affect me whatsoever, I tried looking for my mask and my hair tie. \n\nI knew the hair tie was long gone, but I found the mask in Charlie's hand. Getting the mask meant walking towards her, and the moonlight was shining brightly from the window at her like a spot light. I couldn't bear for her to know who I really am. I held out my hand, indicating that I wanted my mask handed to me. She held out the mask, but made no attempt to move. Her eyes were like diamonds, sparkling. \n\n\"Seventy-si-\"\n\n\"Make sure your security is well-maintained, and keep all your doors and windows locked at all times,\" I said professionally, desperately trying to shrug off the pain I felt inside,\" especially the balcony door.\"\n\nShe slightly dropped her hand, her mouth trying to say the right words. She looked like a broken toy, waiting for someone to fix it.\n\n\"Wha...what do you mean?\" she asked.\n\nI stepped back, tears freely running down my face, feeling empty. Disgusted, I wiped them off, took a step back, and walked to the balcony door. Reality set in my mind like an incurable disease. This was a mistake. To think that her and I were going to happen is completely impossible with my job, and her chance for a normal life. All of this was a mistake. And I had to pay for it with my own heart.\n\nI opened the door, and stepped outside, but then stopped.\n\n\"Tell James to keep an eye on you,\" I said trembling, \"There's a high chance they won't lay a finger on you if you have...someone with you most of the time.\"\n\nAnd with that, I was gone.\n\n----------------------------------------------------\n\n(Members of the Agency, with their full gears on, were waiting outside the gate. A lone figure of a woman was their leader, and she needed to give an order to attack and search the underground compound. But, most importantly, to get a certain prisoner out of there.\n\n\"Waiting for your orders, ma'am\" one of the men whispered to her.\n\nShe took a deep breath, and gave the order to move in.)\n\n------------------------------------------\n\n\"Pamela,\" Carrie said with concern. \"It'll help if you talk about it.\"\n\n\"Nope.\"\n\nI was laying on my bed in my room, looking blankly up the ceiling, playing with an unloaded gun. It has been a week after my and Charlie's last conversation in her room. Within that week, I felt empty. Numb. At the same time, completely heartbroken, but I refused to let it affect me. \n\nBut since there wasn't a new assignment given to me, I still had to be Charlie's bodyguard. Therefore, I needed to suck it up, and move on.\n\n\"Pamela,\" Carrie said, standing near the bed, \"If you need anything, I'm here. I am your friend, too, remember that.\"\n\nI looked up at her, nodded, and smiled faintly. Gently, with a finger, she got a couple strands of hair out of my face and smiled reassuringly at me.\n\n For the next couple of weeks, I kept my distance and didn't have any physical contact with her. I followed her in the shadows everywhere she went, especially with her dates with James. She looked happy, and I felt even more disgusted with myself.\n\nTonight, it was raining fairly hard. I stood on top of a four-foot building, keeping a close eye on Charlie. Oh, and also her date, James. This was their 5th date so far (but who's counting anyway?) and he took her out in an expensive Italian restaurant. And there I was, waiting, just waiting, to see if something bad was going to happen.\n\nSighing, I sat down, itching my mask (good thing Carrie had extras). And soaked, of course. I looked up to the sky, and closed my eyes, feeling a bit at peace. This is your life, I thought to myself, and no one can be in it. I opened my eyes and looked towards the restaurant. To think that I had a chance with her, to start a normal relationship, was beyond impossible. \n\nCharlie looked beautiful. I leaned towards, and turned on my magnifier through my night goggles. She was wearing a sexy black dress and her hair was up. James looked good, as usual, but it looked like he was going to devour her by the way he was looking at her. On the other hand, it looked like Charlie liked the way James was looking at her by the way she was blushing and laughing. \n\nA wave of jealousy flowed throughout my body. \n\n------------------------------------\n\n(Andre ran to the other side of the underground prison just to see what all the commotion was all about. Guards were shouting and shooting, and the prisoners were howling and cheering.\n\nAndre got his gun ready, mumbled a little prayer, and joined his fellow friends.)\n\n------------------------------------\n\nAfter an hour and a half, Charlie and James were about to leave the restaurant. Sighing, I stood up and followed using the buildings' roofs. The raining hasn't stopped, and it was the dead of night, so there wasn't a lot of people or cars around. Just them under an umbrella, and the almost empty streets.\n\n\"Come on, \"James said. \"Just through the alley and we can be on the other street. There's probably cabs driving around there\"\n\n\"No, James,\" Charlie said uncertainly. \"Alleys in general are trouble. It's not a good idea.\"\n\n\"Oh, come on,\" James said, a smile on his face. \"I know this neighborhood and I know I walked through an alley more than once. It'll be okay, you're with me.\"\n\nIdiot!\n\nI cursed under my breath, and had no choice but to follow them. Come one Charlie, I thought to myself. Change his mind!\n\nCharlie thought for a minute, and nodded unsurely. \n\nI threw my hands up in frustration, and followed them. Then, I looked down from the building, scanning the dark, but visible alley. I had a bad feeling about this. \n\nAll of the sudden, James smiled again, stopped in the middle of the alley, and lifted Charlie's chin. Then he kissed her directly on the lips, making Charlie yelp in surprise. Then, she closed her eyes, and kissed back, her hand on his cheek. \n\nMy breathing stopped. Literally.\n\nI didn't notice the harsh raindrops piercing my suit.\n\nI didn't notice where I was.\n\nI didn't even notice a white van going into the alley.\n\nNor did I notice that there was a man behind me.\n\nI heard screamings and shoutings down below, men were scrambling out of the van. With my silenced pistol, I began shooting at them, and got two of them. Charlie looked terrified, and James was trying his best to protect her. He swung his arms, kicked, and punched, but there were too many of them.\n\nI can feel the adrenaline pumping throughout my body as I shoot at the men professionally and accurately. Three more dead. While James was fighting off two men, one grabbed Charlie. But before he could pull her to the van, I shot him twice square on the head. Immediately, Charlie looked up, and I can feel her stare on me. Her green sparkling eyes met mine, her eyebrows shot up with concern, her brown hair now messy, but still managed to look beautiful. I looked towards James, trying to fight off the two last men. As I was about to shoot at one of the men, a masculine hand grabbed me from behind, and I lost balance. I turned around and tried to grab the person who grabbed me, to pull myself up, but he too lost balance. Half a second later, we were both falling directly onto the van.\n\nPain.\n\nOur bodies made contact to the solid top of the van, and I cried out in pain. I heard a crack on my side, and I could not move. I couldn't think nor hear from the buzzing sound inside my head.\n\n-------------------------------------\n\n(Andre was trapped. Whoever these guys were, there were a lot of them. He saw his friends getting shot one by one.\n\nHe prayed a little prayer again, and ran out, shooting mindlessly everywhere.)\n\n--------------------------------------\n\nSlowly, I sat up, and saw another van driving in. Drunkenly, I rolled off the man's body that was on top of mine and rolled myself off the van, landing violently to the ground. I saw my gun, and gingerly tried reaching for it as I lay there on my stomach.\n\n\"You lay a finger on that pistol, and I will kill them,\" a booming Italian accented voice said.\n\nQuickly, I looked up, and saw ten more men from the other van pointing the gun at me.\n\n\"Stand up,\" the masculine voice ordered, \"and no tricks.\"\n\nI looked to my right and saw Charlie, kneeling with her hands behind her, and James, his face on the ground, unconscious. Charlie looked intensely at me, her lower lips quivering from the combination of the cold rain and fear. I clenched my teeth together, and painfully stood up.\n\nHow did this happen, I thought to myself. From each and every step, I felt everything around me. The raindrops became bullets trying to go through my suit. The water beneath my boots was a river, waiting for me to drown. The men wearing the black clothes and masks were my firing squad. And I felt the stare from an innocent person, which I failed to protect. I looked at Charlie, and she stared back, her eyes full of emotions.\n\nCuriously, the leader followed my gaze, and raised an eyebrow. I can feel him smirking underneath his mask. \n\n\"Kneel,\" he said. \"And put your hands behind you.\"\n\nI stopped, and obediently did as I was told. I looked away from Charlie, and stared at the leader without any emotions. Taking one deep breath, it took every bit of energy within my body not to shiver.\n\n\"Who are you?\" the leader said. I didn't answer.\n\nThe leader shifted, and pointed the gun at me. And fired.\n\nThe bullet hit the right edge of my bicep, and I cried out in pain, feeling the blood flowing freely out of it. He then pointed the gun at Charlie, and I answered immediately, \"Agent S-seventy-six.\"\n\nThe leader, lowered his gun, and holstered it, while I tried to regain my breathing normally. I can feel my body beginning to weaken, my vision blurry, and my mind twirling, but I ordered my body to stay erect. Proud. Brave.\n\nThe men around him spat immediately after they heard my name, and the leader looked at me with interest. He took off his mask, and said,\" Remember me, Seventy-six?\"\n\nFocusing my gaze at him, he walked towards me, and squatted in front of me. His harsh, bearded face came to focus, and his cold grey eyes triggered a name in my mind.\n\n\"Marco,\" I hissed, my fists turning into balls.\n\nMarco Romano was his name, and he was one of the top leaders of the world's human trafficking business. He was a ghost, a no one, but he was good businessman in the underworld trade. It was a year and a half ago, perhaps even more, when I interfered with his business. His brother, Alfonso, was his partner, a proud and ruthless man. And I killed him using my own blade. Marco had a lot of connections within the government, so he patiently tried to find his brother's killer. And somehow, he had a name: Agent Seventy-six.\n\nThe Agency warned me about Marco, but I was good at lying low. Well, that is, until now. \n\nHe smiled crookedly, and punched me hard on the stomach, a large lump formed in my throat, and I groaned in pain once again. \n\n\"That was for me,\" he spat, and stood up, my cheek on the ground. \"What's in store for you is for Alfonso.\"\n\nWith that, he went to my side and kicked me, and my body cried out in utter pain. As he talked to his men in Italian, he walked behind me and the men began dragging Charlie and the unconscious James into the van. Screaming, Charlie tried squirming away, but one of the men slapped her across the face, and spat on her. Gasping, that only angered Charlie more, and continued to squirm, but quieted when the man got his gun out. With James still laying on the ground unconscious, Charlie froze like a statue as the cold metal made contact with her forehead. \n\n\"W-wait,\" I croaked, spitting out blood, while trying to stand erect with the remaining energy I had left. \"Leave t-t-them alon-\"\n\nMarco immediately pulls me from behind, making me stand erect. I whimpered like a dog. He grabbed the back of my mask ruthlessly, and pulls it, pulling a couple strands of hair along with it. \n\nThe raindrops made contact to my naked face, rolling down my cheek mixed with my tears. He threw the mask in front of Charlie, then kicked me on my back, making me fall down on my face. My body went in contact with the hard floor close to Charlie's knee, my head spinning.\n\nThe men laughed, but Marco laughed the loudest. Unconsciously, I semi-crawled, hoping to go near Charlie, hoping to protect her from the last remaining energy I had left in my body. Once I was close enough, I reached out and touched her thigh, I can feel my body beginning to give itself up.\n\n\"P-pamela?\" she whispered in the quietest voice, her body trembling. Grunting, I looked up at her, and made eye contact. Her green eyes were full of different emotions. Fear, concern, realization. But fear dominated them all. I tried standing up, my body in the weakest state it has ever been, then felt someone's foot pushing me down. I can hear my own heart pumping.\n\n\"Well what do we have here,\" Marco sneered, putting more pressure on my back. I made small choking sounds, tears freely coming down my cheeks. \"Both of you know each other, hmmm?\"\n\nAt the corner of my eye, I can see him stroking Charlie's face, his face full of lust.\n\n\"Don't you dare touch her!\" I spat.\n\nMarco looked down at me, and curiously looked at Charlie, who was looking at me the entire time. Then, a sly grin crawled across his lips, his eyes sparkling not from a brilliant plan, but a brilliant cruel act that exploded in his mind like a bomb. \n\n\"Ahhh I see, I see...\" he said, still grinning. \"You care for this girl.\"\n\nI closed my eyes, wishing I would disappear, but the reality of the situation hovered me like a blanket. \n\n\"Like, what do you call this,\" he waved his arm. \"Star-crossed lovers, no?\"\n\nThe other men whistled, some cheered. \n\nSuddenly, Marco ordered one of the men to position James in a kneeling position, supported by one of the men. The man, having a confused look on his face, nodded, and did what he was told. Charlie squirmed again, crying when she saw what was happening.\n\nMarco went to Charlie's side, and put a gun to her head. \"Kneel,\" he said gravely, looking down at me. Being a bit incoherent, I drunkenly tried to kneel, but stumbled a few times. James and I were kneeling in front of Charlie very close, I can see every facial details on her face.\n\nThe men laughed again. Swaying a bit, I closed my eyes, and opened them again, seeing Marco releasing Charlie's handcuffs,. He gave her his gun, a very powerful and expensive gun that was especially made for him and only him. \n\nWhat's going on, I thought to myself. I can feel my body going numb, but my heart was still beating as fast as ever. Charlie looked confused as ever.\n\n\"Well, Seventy-Six has a love interest!\" Marco said, sarcastically. The men cheered again, some of the guns banging against the van. \"But, let's play a game, eh? The...what do you call this. A love test, yes?\"\n\nSneering, he played with Charlie's ear, but she flinched away. He smiled. \n\n\"From what I thought, you were not allowed to have your heart interfere with your job, yes?\"\n\nMarco looked at me, and I nodded weakly.\n\n\"But you love her, no?\"\n\nI hesitated, looked at Charlie, and then looked down.\n\n\"Ahhh,\" Marco laughed. \"This should be interesting than I thought.\"\n\nHumming to himself, he walked behind Charlie and got his other gun out, letting it rest by his side.\n\n\"You see, I am bored,\" he said, pouting. \"So let's make this clear and simple: there is two people in front of you, yes? Seventy-six and this other man I presume is your boyfriend, no?\"\n\nTrembling, Charlie weakly nodded, her body completely covered in water.\n\n\"But the thing is,\" he sneered, \"you have to choose and you can only choose one.\"\n\nHe held out a finger up in the air, and my heart stopped beating.\n\nHe leaned over, making sure Charlie gets the message clearly. \"So you, gal,\" he said, unemotional. \"You have to shoot the other one on the heart.\" With his finger, he patted Charlie's sternum. Charlie looked at me incredulously, her eyes wide with complete fear, and her tears started again. \n\nI looked at James, and back at Charlie.\n\n\"I-i-i-\"\n\n\"You have two minutes,\" he whispered in her ear, and I closed my eyes again. \"If you don't make a decision by then, I will kill. You. All.\"\n\nI already knew the outcome of the situation, I can feel her decision erupting out of her skin.\n\n\"One and thirty-seconds...\"\n\nI opened my eyes again, and steadily looked at Charlie, knowing full well my eyes were watering. \n\n\"One minute left...\"\n\n\"Please don't do this!\" Charlie cried, the gun pointing at James, then at me, then at James...\n\n\"Thirty seconds...\"\n\nMy whole body was shaking, I couldn't even feel the pain I was feeling before anymore. I was numb. Just numb.\n\n\"Twenty...\"\n\nCharlie is panicking, her face in anguish\n\n\"Ten sweetie...clock is ticking...\"\n\nCharlie locked eyes with me, and I didn't dare look away.\n\n\"Five...\"\n\nShaking, the barrel made contact to my chest, where my heart was located.\n\n\"Three...\"\n\n\"Char-\"\n\n\"Two...\"\n\nCharlie's finger curled. She closed her eyes, but I never broke my eye contact to her.\n\n\"I-\" I began to say, whispering.\n\n\"One.\"\n\nShe pulled the trigger, and I felt myself crashing back, gasping for air, I cried out in agony.\n\nThe last thought I had was:\n\nI love you. \n\n---------------------------------------------------\n\n(Andre shook in pain. He was shot on the leg. Whimpering, he tried crawling anywhere, but where he was now.\n\n\"Don't move,\" a female voice behind him ordered. He stopped, gulping. Then, he felt the cold gun barrel on the back of his head, and he was begging not to shoot.",
        "\"I need to find someone,\" the voice said firmly. \"And I you're going to help me.\")\n\n----------------------------------------------------\n\nThe cold rain pierced my body, I can feel every drop no matter big or small. Faintly, I opened my eyes, a drop went in my right eye. Violently, I started breathing, my chest heaving up and down. I was shot, wasn't I? Grunting, I looked at my chest and came to the realization that I had my bulletproof vest on.\n\nI couldn't think clearly, I couldn't hear clearly, I couldn't even see clearly.\n\nAll I know is that I...was moving. Everything was shaking, there were some various voices, and...music? Radio...I groaned. I was in the van, I was sure of it. \n\nAll the sudden, I felt some kind of cloth over my head. \n\nThen blackness.\n\n\"You're awake,\" a voice said.\" What a shame you're not dead, because you're going to pay for my brother's death. You, my friend, are going to hell.\"\n\n---------------------------------------\n\n(\"Ma'am!\" a man, one of the members, said as they scattered throughout the underground prison. \"I found it!\"\n\nThe female figure stopped and sprinted to the man.)\n\n---------------------------------------\n\nI woke up again, a little more coherent this time, but it wasn't until an hour or so later when the van stopped moving. \n\n\"Wake up sunshine!\" a man's voice quirked. The cloth over my eyes was gone, and I was facing the van door. The door opened, brightness came rushing in, making me blink a couple of times. It was hot, like desert hot, my skin was burning.\n\nMy skin.\n\nWith horror, I realized I had nothing on except my bra and underwear. I closed my eyes, and opened them with anger. Moving my arms, I was still handcuffed, and I cussed in frustration. I looked at my arm, all the blood was dried up, but the messy injury was there. As I tried turning around, I saw a glimpse of Marco, grinning. Then he pushed me out of the van with full force, and I fell flat on the sandy surface.\n\nScrambling to stand up, I heard Marco say \"hasta luego\" and sped off. I looked around, coughing. Nothing. Just a land of...sand. And cactuses. \n\nBut just as I thought that there weren't any buildings nearby, I saw a tiny building about half a mile from where I was. I guess the sun was playing tricks on my eyes. And I also realized that a human figure was walking my way. Limping, I went to the figure, and we met halfway.\n\nI looked at him, and caught my breath. He was a big man, around 250lbs. Scruffy, he looked like he hasn't shaved in years. But all in all, he looked ordinary: he had a plain white t-shirt on, ripped up jeans, and a pair of faded blue sneakers.\n\nThen I saw his shotgun, slung across his back. He smiled menacingly, and spat on the ground\n\n\"The name's Andre,\" he said, his voice deep and monstrous. \"Welcome home, amiga.\"\n\n---------------------------------------------\n\n( The members of the Agency crowded around the cell, unmoving. Stopping in front of the cell, the female figure was stopped by a nearby agent. She glared at him.\n\n\"Ms. Carrie, I don't think you want t-\"\n\nShe shoved him aside and went in the cell, and the first thing she noticed was the horrible smell of blood. She can taste the iron even through her mask. She looked around and saw...the prisoner, barely without clothes on, only wearing a bra and underwear. Without hesitation, she went to the prisoner's side, and rolled the body over. What she saw made her gasp, almost cried to tears.\n\nThe body was thin, a sign of malnutrition.\n\nThe body was scarred and bloodied, a sign of abuse and torture.\n\nThe prisoner was passed out, and the female figure called out the medic and told one of the agents to get a helicopter to land near the facility right away. \n\nThen, she began weeping, hugging the half-dead body near her chest.\n\n\"Oh, Pamela,\" she whispered, her voice shaking. \"What did they do to you?\"\n\nOne of the agents felt disgusted, and looked away from the bloodied body. He paid attention to the small white markings on the wall.\n\nHe counted 385.)\n\n---------------------------------------------\n\n To be continued... "
    ],
    "authorname": "YoursTruly101",
    "tags": [
        "lesbian romance",
        "lesbian novella",
        "lesbian drama",
        "drama",
        "agent",
        "romance novella",
        "love story",
        "courage"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-mission-of-the-heart-ch-03"
}