{
    "title": "Just Skin and Water",
    "pages": [
        "The sun warmed my bare chest delightfully as I lay back on my beach towel, my hands supporting my head. The waves crashed softly against the shore, and laughter filled the air. I lazily glanced along the beach and immensely enjoyed the revealing nature of the latest fashions in swimwear.\n\nI've always viewed beaches as an unspoken excuse to expose some skin and participate in a kind of human attraction that's direct and primal. Not to say that one goes there purely for the arousal, but it's certainly an environment where the physically attractive can go to be appreciated, and others can go to appreciate them. Where else is it okay to find this many people in this little clothing?\n\nI was attentively appreciating the sportsmanship of a game of volleyball up the beach, when a divine pair of women sauntered their way in front of me, chatting idly, either unaware of my eyes following them, or indifferent to them. One was athletically thin, and wore a blue side-tie bikini with black trim, and the other was voluptuous and well-tanned, with large bouncing breasts, wide hips, and a round posterior that was hardly covered by the bottom of a tight white one-piece. I eyed them carefully as they passed by. The ass in the blue bikini was toned and shapely, while the other was expansive, hypnotically swaying with each passing step.\n\n\"Subtle,\" a voice behind me remarked, sarcastically. I sat up abruptly and turned to find my sister Sara standing behind me, beach towel in hand. She wore a plain black bikini with her hair tied back into a ponytail. It was difficult to imagine a more unwelcome sight in that moment.\n\nI attempted to feign confusion, furrowing my brow and cocking my head to the side, \"What?\"\n\nShe made no effort to humor my poor performance, \"at least have the decency to creep in a way that isn't so goddamned obvious.\" She unrolled her towel next to mine and sat. \"The way you eyed them was even more noticeable than that poor girl's ass, and that's saying something.\"\n\nI shrugged and returned to my leisurely position, \"They didn't seem to mind.\"\n\n\"You're disgusting\" was her reply. From childhood all the way through our young adulthood, Sara has always enjoyed being a thorn in my side, and now this would only prove to be more useful ammunition for her in that endeavor. She continued, \"So are you just here to make innocent young women uncomfortable all day, or are you going swimming as well?\"\n\nI stood. \"You know, I was just going to enjoy the sea breeze on this beautiful sunny day, but suddenly there's this sharp pain in my ear, so I think I'll just head inside.\" I started to gather my towel.\n\n\"Oh, come on, I was only teasing. It's not my fault you can't control your wandering eyes,\" she laughed. I felt my face flush red. I threw my towel over my shoulder and walked away. Knowing her, she was not going to let this go anytime soon, and if I stayed, it would only be unpleasant; just more guilt and humiliation.\n\nIf somebody's ass is on full display, I think it's safe to say that they're okay with other people seeing that ass. I just happened to fall into the majority of people who enjoy that fact. It's not like I was harassing anyone, nor was I doing anything really, other than keeping my eyes open to what was in front of me. No privacies were invaded, no rights were squandered, but Sara will cling to anything that she can hold over me. If I hadn't been eyeing that girl, she would have insulted my shorts, or my posture, or the college I didn't get into. She always finds a way.\n\nMy parents had organized this trip to the coast with a few friends of theirs, and they turned it into an excuse for a family vacation as well. Their friends brought their families too, so now here we were, a dozen people sharing a beautiful house not five minutes walk from the beach. I personally could have done without the company, but there are worse problems to have.\n\nI made the short trek back to the rental, and followed a trail to the backside of the house. There, situated just out of sight from the road, was an open shower-head for rinsing off the sand from the beach. It stuck out from the inside corner of an L-shaped portion of the building, just above my head. It was secluded in most directions, except for the direction opposite the shower, where there was nothing but open space for a dozen feet or so, until a thick wall of brush and trees obscured the view from beyond. It hung over a raised wooden platform to allow for use on bare feet without having to stand on the ground directly, and a door on the adjacent wall led into the house. I turned on the shower and rinsed away the excess sand from my legs and feet, then quickly dried off and made my way inside.\n\nThe place was sizable, but still managed to feel cozy. There was a large living room with ample sitting space and floor-to-ceiling windows that offered a stunning view of the ocean. To the side, there was a nice kitchen with a table that was not quite big enough to actually sit all of us at once. There were a couple bedrooms on the ground floor, a handful more upstairs, and above that was my room, a tiny little thing in what probably used to be an attic. I was offered the chance to share one of the nicer bedrooms with my sister, but I absolutely refused. Sleeping in an attic is nicer than having to endure her company for longer than I have to.\n\nBut there were two such rooms on the top floor. The other, opposite from mine, was occupied by Rebecca, the daughter of my parents' friends Sean and Emily. She was blonde and cute, but had hardly said a word since we had arrived at the house. She seldom hung out with the rest of us, usually just sitting alone, off in a corner, while the rest of us chatted and played games. I also had yet to even see her in a proper bathing suit, despite the fact that her shapely form seemed to be begging for appreciation. Even at the beach, she always wore a tee shirt and shorts, at minimum. It was an unintentional tease that left me incredibly eager to see her tight, thin body. I frequently found myself fantasizing about such a moment.\n\nAs I entered the house from the outdoor shower, I found her lounging on the couch, wearing jeans and a cardigan, despite the day's sunny weather, reading a book in a language I didn't know. We made eye contact as I came in, and I gave her a friendly \"Hey,\" to which she replied with a polite smile and then returned to her book. The brief moment where her deep blue eyes met mine was just enough to fuel my infatuation with her, but based on our recent interactions, I was quite sure that nothing would come of it. So instead of fruitlessly pursuing a conversation with her yet again, I let her be, and went to the kitchen for a snack. \n\nI found my mom and Rebecca's parents making a light lunch and drinking wine. I gladly joined them in both of these, and soon found myself happily full and mildly tipsy.\n\nJust as we were finishing, we were joined by another of my parents' friends, Deanna. She came in through the door to the outdoor shower, just as I had, the only difference being that she was only wearing her small beach towel around her body, and nothing else. She clutched it close at the front of her chest to keep it from falling, which seemed necessary, since her large breasts were actively resisting their flimsy confinement. I shifted in my seat slightly, convinced that there existed an angle where I could catch a glimpse from underneath.\n\nI wasn't the only one who noticed either; my mom's friend Sean perked right up upon her entrance. He said, \"Wow, Dee, did you lose your suit?\" His wife turned to him, wide-eyed at the comment. My mom laughed. I froze.\n\nBut Deanna smiled, completely unembarrassed. With her free hand, she held up the pieces of a pink bikini, and said, \"No, I've got it right here.\" She approached the table, and I was baffled by her level of comfort with being almost naked in front of the group of us.\n\n\"Did it fall off?\" Sean pressed, as his wife's glare quietly turned violent. \n\n\"Nope,\" Deanna replied, \"just had to wash off the sand from the beach.\"\n\nEmily's jaw dropped. \"You bathed outside?\" she asked incredulously. \"That's a little...\" she eyed Deanna up and down judgmentally \"...out there.\"\n\nDeanna smirked. \"It's not that weird, the shower's there for a reason.\"\n\nOf all people, my mom surprisingly came to her aid, adding \"Yeah, it's secluded enough, it's not a big deal.\"\n\n\"But still, it's outside, the sun shining on parts where it shouldn't,\" rebutted Emily.\n\n\"Let the sun will shine where it will, darling,\" pleaded Sean, which prompted a swift smack on the arm from his wife.\n\nEmily began to inquire, \"Does Mike know that you're...\" but struggled to find the right word for what she was suggesting without being indelicate, \"...exposing yourself like this?\"\n\nMy mom cut in, \"Oh, come on, there's no need to be so dramatic. It's just a shower.\"\n\nDeanna smiled widely at Emily, \"Oh yeah, he knows, and he set up the cameras, and brought the audience. Really, it was quite a show!\" She winked and made her way out of the kitchen.\n\nOnce she was out of earshot, Emily turned to the rest of us, \"I cannot believe her!\"\n\nMy mom continued her defense, \"Honestly, just give it a rest, it's really not that big of a deal.\"\n\nEmily pressed on with her condemnation, as if she hadn't heard my mom at all, \"I just can't stand being around her when she starts getting all-\" she mouthed the word 'slutty' so nobody could hear. \"She may as well have just walked in here totally naked.\" \n\n\"Now, would that have been the worst thing in the world?\" Sean replied sleazily. This earned him another smack on the arm, and his wife stormed off. He rubbed his arm where it had been struck, shaking his head and smiling to himself. My mom let out a chuckle, stood, and started to clear the table.\n\nI, on the other hand, decided to remain seated for a moment to allow my arousal to recede. It was a little bit strange, really, that she had such an effect on me in that moment. In reality, she would have been showing far more of her body if she had entered wearing a bikini instead of a towel, but something about this moment turned me on so much more. Maybe it was the wine. Maybe it was just that a towel is far easier to remove than a bikini. Or maybe my imagination was running wild with the image of her sleek, wet, bare body basking in the sun as the water fell across her skin. Likely, it was the combination of all of these.\n\nWhat actually surprised me more, though, was my mom's and Sean's comfort with her state of undress. Admittedly, Sean was likely thinking thoughts similar to my own, and was doing a worse job of hiding it. But the very idea of people being comfortable with each other's casual nudity was intriguing to me, to say the least. Not to mention the intrigue of getting outdoor nudity, a subject which I had not considered in a considerable amount of time.\n\nAfter a minute or so of daydreaming, I finally felt comfortable enough to stand again, and made my way over to the sitting area to lounge in the sun. I passed by Rebecca, her eyes still fixed on her book, and quietly yearned for a proper conversation with her. Instead, I leaned back onto a long piece of couch opposite her, and quickly dozed off.\n\n__________________________________________________________________\n\nI awoke to a violent shove from my sister.\n\nStartled, I yelped out and swung about as she began to laugh. \"Dreaming about those girls at the beach?\" I gave her my most irritated glare, and she walked away smiling. I blearily awoke properly, stretching and gazing out the window to the ocean. Rebecca was gone, and the sun was approaching the horizon. I decided to make my way back to the beach; the only correct way to enjoy a sunset.\n\nAs I arrived, I was surprised to find it strangely quiet. Not empty, mind you, but certainly fewer people than I would have expected. I found a nice patch of sand to lay on just as the sun seemed to touch the water and the sky began to turn a stunning, warm color. Naturally, I gazed up and down the beach, looking for anybody worth watching. \n\nThen I heard what I was looking for before I saw it. I turned to my right to find a group of drunk college-aged kids laughing and yelling a ways up the beach. Among them were four beautiful girls who made me not feel so bad for ignoring the sunset for a few minutes.\n\nI watched casually as they shouted indiscriminately to each other. One of the girls was waving her phone aloft, doubtlessly documenting how much fun they were having. Then she handed her photo to one of the guys, and all of the girls lined up for a group shot, facing the setting sun. The girl closest to me turned her body to the side, toward the middle of the group, allowing me to thoroughly appreciate her sunlit backside from my distance. The guy took a picture, then said something I couldn't quite hear. But whatever he said, it prompted a loud \"Oh my God,\" from one girl, and a \"Why the hell not?\" from another. Then, after some squabbling, all but one of them lifted their tops, laughing. I admit that I leaned my head over to get a better view, and I was delighted to see three pairs of gorgeous, supple breasts in the warm light of the sunset.\n\nThey laughed, lowered their tops, and looking around, one of them met my gaze. I darted my eyes back to the sunset as I heard her feign embarrassment with a loud, \"Oh my God, that guy totally saw us,\" but I knew the truth. They had come here to be seen. Only people who want to be seen are willing to expose themselves like that.\n\nHaving happily seen more than I had sought to see, I made my way back to the house while I still had some twilight left. I made my way to the outdoor shower, intending to rinse off my feet, but as I approached, I remembered Deanna.\n\nShe had been out here without a stitch of clothing on her body. The very idea of her standing there, body exposed to the air, was enough to get me a little stiff. I considered the surroundings, noting the large clearing in front of the shower, and the sufficient seclusion from the roadside. If somebody were so inclined to discretely enjoy being naked outside, this might have been the perfect spot in which to do it.\n\nI thought about this fact as I turned on the shower and my cock continued to harden. I thought about it further as I rinsed the sand away from my feet. Then, as I looked around in the dying light of dusk, I had made up my mind. I pulled down my trunks, and my hardness came flopping out into the brisk air. I let my shorts fall, then kicked them to the side, and I stood there, my body bare to the clearing and the darkening sky.\n\nWhen you're dressed in a swimsuit, and all but the essentials are bare, you get used to the feeling of air on your usually-covered skin. You soon stop to notice it. But when those few parts are exposed that even swimwear should cover, the sensation is far too unfamiliar to ignore. It feels a little bit strange, like you're finally really feeling the outside for the first time. You feel the air moving about you, where things are usually relatively still, and I personally find the sensation delightful.\n\nI stepped into the hot water of the shower, and its warmth washed from my head, to my shoulders, to my torso, to my groin. My skin pricked up, and the feeling could only be described as pleasurable. I stepped out of the path of the water for a moment, and the contrast in sensation between the hot water and the cold air was explicitly arousing.\n\nI thought about Deanna more. I imagined her standing nude, in the same spot I was in, the water falling along the curves of her body in the same way it was falling over me. I imagined her round ass and breasts, wet and gleaming in the sun.\n\nWithout another thought, my hand was wrapped around my cock, and I began to stroke it vigorously. A breeze picked up, and the unusual sensation of wind against the head of my penis filled me with bliss.\n\nI felt the water on my backside, the air on my front, and the ground beneath my feet, as I masturbated, taking each raw sensation in stride. I heard the sounds of nature around me, and I observed the wide openness of the clearing in front of me. I considered the feasibility of someone hiding in the brush, watching me. The idea simultaneously filled me with pleasure and dread; a duality that's difficult to describe, but the combination filled me with a desire that was powerful and erotic. On the one hand, the concept of being caught like this, naked and masturbating, was entirely shameful and embarrassing, but at the same time, the concept of someone gaining pleasure from my self-pleasure was dramatically exciting. I both wanted to be seen, and was horrified by the concept.\n\nI also fantasized from the voyeur's perspective. I imagined hiding in the brush, masturbating, as Deanna stood here, showering. She catches me, and embarrassed, I apologize profusely. But she's not angry or upset. On the contrary, she's flattered by my hardness. She invites me to join her, and she turns around, putting her hands against the wall. I fuck her from behind, and slap her ass swiftly. The intensity builds, I move my hips faster, harder, feeling myself boiling up. Her ass ripples with every powerful thrust I make. Finally, my velocity increases to a rate beyond comprehension. She cries out in pleasure as I feel the hint of orgasm beginning to move its way through my body, until finally...\n\nCum shot out from my cock, through my hands, and landed squarely onto the wooden floor of the shower. It took all the power I held within me to not moan loud enough for the whole house to hear, but I allowed myself a subtle gasp as the orgasm washed over me. My body tingled in ecstasy. My pace slowed, as I pumped the last few shots of cum out of me, my mind lost in euphoria.\n\nBut then, once I started to come down from my high, reality dawned on me. I was standing naked outside. I had just masturbated in the wide open. Flecks of white cum were littered all around me. I anxiously began to consider the possibilities that I was previously unable to consider when my lust was in control. What if the neighbors could actually see through the brush? What if somebody had come around to use the shower, but I was too busy going to town on myself to notice? What if the owners of this place had some kind of security camera trained at this shower?\n\nIt obviously hadn't occurred to me how exposed I really was, until now, and I began to mildly panic. I felt dirty. But that feeling somehow fueled a renewed arousal as well. It was strange. Confused, I start to brush away my cum from the shower platform with my feet, until I was satisfied that no one could find any evidence of the terrible deed I had committed.\n\nAwash with my shame, I turned off the shower, wrapped my beach towel around my lower half, and head inside. I hoped desperately to run uninterrupted up to my room, unwilling to confront another human being and attempt to conceal the secret of what I had just done. I clutched the towel close to my waist, and made a mad dash to the stairs.\n\nBut of course, who else could I possibly run into, before making it upstairs, than Deanna herself? She smiled brightly as she saw me, and gave me a cheery, \"Oh! Hey there!\" And without a moment's hesitation, she glanced down to the towel around my waist, and her smile turned into a grin of an entirely different sort. \"Well I'm glad to see I'm not the only one making full use of the amenities! How'd you like it?\" In the moment, I could have sworn that her voice became infinitely more sultry as she said this to me, but a more realistic interpretation would attribute that to wishful thinking on my part.\n\n\"Um,\" I froze in my place. Not only was I caught in a state of undress, and one in which I was entirely uncomfortable, but I was also being confronted by the very person I had just fantasized about. I had literally just cum to her body, in my imagination. I couldn't help but steal a glance at her tits, wondering aimlessly as to the shape and color of her nipples. She didn't seem to notice this, but she definitely noticed my sudden inability to speak, and my apparent shame.",
        "Her smile widened as she noticed my expression and looked me up and down, \"I'm sorry, are you embarrassed?\" She seemed delighted by the possibility. \n\nI stammered as I attempted a reply, \"Oh, N- no, it's fine. I- I'm not embarrassed, ju- just, you know, surprised, is all.\"\n\n\"Well that's good.\" Her words said she believed me, but her eyes saw the truth, and she reveled in it. \"I'm no prude myself, so I completely understand. About not being embarrassed, that is.\"\n\nImages from my fantasy flashed involuntarily through my mind. \"Oh- oh, yeah, I bet.\" I hoped I was projecting more confidence than I felt, but surely she must have seen through that.\n\nHer eyes widened, and her jaw dropped open, as if she was offended. She gave my shoulder a light push and repeated, \"You bet?! What's that supposed to mean?\"\n\nI felt a hot red come to my face, as I desperately tried to back-pedal. \"Oh no! N- not like that! I just thought, like, you know, earlier- when you walked in, you just seemed... comfortable! That's all.\"\n\nShe laughed. \"Oh, you're so sweet. But relax, I'm just teasing.\" I did no such thing. She was playing with me. I have to admit that I kind of enjoyed the feeling, but it left me completely unsure of how to respond.\n\nI settled on awkwardly laughing in reply, \"Oh, ha ha, yeah.\" I literally said 'ha ha' instead of actually laughing.\n\nShe continued, \"I mean, it's true, though. I'm not shy. Part of that is just, like, it's skin, whatever. I'm just bathing outside, or hanging out at home, or whatever the case may be.\" My penis twitched. \"But another part of it is very much like,\" she paused for emphasis, \"Yeah. I'm naked. This is very, very good. It's a little bit funny, when you think about it. Do you know what I mean?\"\n\nI had literally just masturbated because of that very idea. But of course, I couldn't just come out and say that. Deanna was still one of my parents' best friends, and she was more than twenty years older than me. There were a million social rules that should be impeding this very conversation, yet here we were. She was talking about this so casually, as if discussing some mild arousal was a perfectly acceptable topic to talk of conversation with your friend's son. Obviously, I enjoyed that fact, but simultaneously felt guilty for enjoying it. I was torn between pursuing my fantasy, and respecting the normal boundaries of society. The conundrum left my penis hard yet again, but my mouth hesitant to reply.\n\nI stood for a moment, mouth agape, before I finally replied, truthfully but not explicitly, \"Y- yeah, I could totally see that.\"\n\n\"It's always good to meet a kindred spirit.\" I swear she looked down at my crotch as she said this, and I shifted in my place, desperate to keep my growing erection between my legs. She glanced at my hands instead. \"Come to think of it, I don't see your suit. Did you just go without?\" She seemed practically giddy at the concept.\n\nMy face flushed, and I felt like an idiot. \"Oh, shit. I must have just left my trunks out by the shower.\"\n\nShe laughed. \"Well, you'd better go and get them. We don't want the likes of Emily to find them and think that you're just running around the place butt-naked. Couldn't have that.\" She winked as she started to walk past me, towards her room. I turned to watch her walk away, unable to respond, entranced with the motion of her backside.\n\nFinally, I came to, and realized that she was right. I was such an idiot to have left them behind. I walked back out the door, to happily find the clearing still empty, and my trunks lying on the ground. I picked them up, and noticed that not only were they still sandy, but plenty of dirt from the ground had also covered them when I threw them aside. I gave them a quick rinse by themselves in the shower. I looked around, my recent conversation inspiring me to repeat my little escapade, but I thought better of it. I had tested fate enough as it was. I wrung out my shorts, and took them inside, making my way upstairs to my room.\n\nBut just as I was about climb the last landing into the former attic, I ran into Rebecca, almost literally. We bumped into each other, and it took great skill and luck on my part to not drop my towel in that moment. She seemed startled, yelping a little bit before saying, \"Oh. Sorry, I didn't know you were, um,\" and she started making a conscious effort to look up and away from me, as if I actually was exposed.\n\nSince I last saw her, she had apparently changed into a pair of blue athletic shorts and a white tee that was just tight enough to accentuate the curves of her torso. I could just make out the outline of what was likely her bathing suit underneath.\n\nI replied in a joking tone, \"Oh, it's no worries. I don't mind you trying to get a peek,\" but of course I wasn't actually joking.\n\nShe met my gaze, briefly, wide-eyed. Then she glanced down at my bare chest, then at the towel. Then her eyes darted away, down and to the side. Her face reddened with embarrassment.\n\nThen it was my turn to feel embarrassed, \"Sorry, that was a dumb joke, my bad.\"\n\n\"I just have to, um,\" she gestured down the stairs, unwilling to meet my eyes again.\n\n\"Oh, yeah, of course,\" I pressed my back against the wall of the narrow stairwell, giving her enough space to pass. As she did so, I felt her breast brush across my chest. It was unavoidable.\n\nAs she descended, I couldn't help but feel terrible. I obviously made her feel uncomfortable, just because I was horny and confused. How idiotic.\n\nThe feeling lasted until I entered my room, and dropped the towel, to have my hardness standing up right at attention yet again. I played through my experience in the clearing again. I savored the memory of all the little sensations I felt. I considered my conversation with Deanna, and mused at the many implications that our shared interest created, however unlikely they were in reality. Lost in thought of such things, I leaned back on my bed and masturbated again. It didn't take long for my indulgence to carry my thoughts to Rebecca as well, and all the different ways our little interaction could have gone.\n\nAfter I finished, I put on some fresh clothes, went downstairs, and the night continued without incident. Rebecca continued to sit apart from the rest of us, and I felt it wise to not attempt a chat with her after our little run-in. My interactions with Deanna were largely unchanged, but she seemed to be acting a bit more friendly towards me. In truth, that might have just been my interpretation of her behavior after our conversation, but it made me smile, all the same. I imagined the two of us being friendly enough with each other to just be naked together, no taboo or inhibitions to speak of. The idea seemed absolutely delightful.\n\nThe group ate dinner, played games, and talked the night away. Rebecca was the first of us to head to bed, and I went not long after. Nothing can tire you out quite like the sun's rays.\n\nAs I was about to enter my room, I looked at Rebecca's door. I guessed wildly to myself about what she was doing behind it, about what she wore when she slept. I turned and entered my room, and I fell asleep to thoughts of her.\n\n__________________________________________________________________\n\nThe next morning, I woke early, just as soon as the sun was firmly above the horizon. I made my way downstairs to find the beginning of breakfast preparations; fried eggs, roasted potatoes, and a variety of fruits. It looked lovely.\n\nSean grabbed my attention and asked me to go wake up Rebecca for breakfast. This came as some surprise, since she was normally one of the first among us to arise. But it was a happy surprise, because any excuse to talk to her, or maybe even enter her room, got me more than a little excited.\n\nI climbed the stairs to the top floor and turned to her room. I tapped on her door lightly with my knuckle as my heart rate quickened slightly. I waited a few seconds, then gave a few more taps, slightly louder this time. Still, there was no reply. Now, a normal person might have decided to knock even more forcefully, or call out her name, but as eager as I was to enter her room, two attempts and no reply was more than enough to give me the permission I needed. I turned her door handle slowly, and pushed it open gently to avoid letting it creak. I leaned my head in as soon as it was able to, and what I saw was, in a word, perfect.\n\nRebecca stood on the other side of the room, her back turned to me, looking out a window. She wore only a tight blue tank top and a pair of cheeky black panties. She was slender, but her shape was mesmerizing, with toned legs leading up to a firm, supple ass, which was hardly half-covered by the thin, fine fabric of her panties. I lingered there for more than a few moments, staring at her. I had no clue what was keeping her attention away from me and out the window, nor did I really care. Given this opportunity, I took vigorous mental notes of the shape of her.\n\nThen, after a few seconds of gawking, I decided to make my presence known. If she turned around and saw me staring at her ass, it would have been far worse. \"Rebecca,\" I called out softly to her.\n\nHer reaction was dramatic. She jumped at my voice, and turned around wildly, an expression of complete shock on her face.\n\nBut as she turned, her right hand jolted out from the front of her panties to her stomach, a motion so quick I only barely noticed it, but her hand had definitely just been inside of her undies.\n\nMy skin started tingling numbly all over my body as I realized what I had just stumbled upon. I had just caught her pleasing herself, and in front of an open window, no less. That fact filled me with an indescribably amount of arousal and pride. I stared at her blankly as I collected my emotions, and she stared right back, eyes wide, catching her breath. I could see the shape of her nipples plainly through her tight tank top as her chest heaved.\n\nFinally, a smile spread across my face as I started to regain some of my composure. I managed to let out, \"Hey, sorry to, um, interrupt,\" I glanced at her panties, then back to her face, which was once again turning a deep red, \"whatever you were doing. I just, uh,\" I lowered my eyes again. It was difficult not to. \"You- your dad sent me. To, um, tell you that breakfast is ready.\"\n\nRebecca looked anxiously behind her shoulder, brushing her hair out of her face, then turned back to me. She smiled awkwardly through her embarrassment as she replied, \"Oh, um, thank you,\" then crossed one leg in front of the other, as if that would do anything to undo her exposure. \"I'll just, um,\" she subtly checked behind her shoulder again, \"need a minute.\"\n\nI laughed, fully cognizant of her true intentions. \"Yeah, sure, take your time,\" I said, beginning to retreat and close the door. But just as it was about to close, I burst it back open with a flourish, and her hand jolted back out onto her belly, yet again, likely having just resumed its previous position. Her expression now resembled irritation more than surprise as I interjected, \"Just out of curiosity,\" I gestured to the window with my chin, \"what's going on outside?\"\n\nAll emotion faded from her face. The shock, the embarrassment, and the irritation of my interruption were gone in an instant. \"Nothing,\" she said quickly and coolly, her face blank. She positioned herself closely against the window. \n\n\"You seem mighty defensive about this nothing,\" I observed casually. I finally entered the room, moving slowly towards her.\n\nShe was unmoved, her stance resolute. This was not some routine self-pleasure that I had accidentally interrupted, this was different. I had caught her in the middle of something dubious, I could tell. She was trying to hide it.\n\nIn our interaction so far, I was clearly the guilty party for walking in on her masturbating, but she knew that what she was hiding would reflect far worse on her, despite my intrusion.\n\nI could guess wildly as to the subject. There was likely some handsome man's bedroom across the way that she could stare right into, or maybe she just liked watching the shirtless guys walking towards the beach, that alone can do it for some people. But in any case, being on the verge of uncovering her secret made me feel powerful. The pace of her breath rapidly increased as I approached her, her nostrils flaring with unwavering determination. I attempted to look around her, out the window, and she shifted her position to block my sight. I returned to where I stood before, and so did she.\n\nKnowing that she had a kinky little secret also made her seem so much more human to me. This entire trip, she had been so disconnected from the rest of us, so hesitant in conversation, avoiding every interaction that she could. Meanwhile, I silently pined for her, lusting after her almost involuntarily. And here I stood, suddenly on the precipice of uncovering her darker desires. Going to that place with someone is beyond intimacy. I had the chance here to see into something about her that she likely hid from everyone, even the few who managed to get close to her.\n\nIt was an opportunity that I refused to let slip by. At the same time, I was directly imposing myself into her space. In truth, a more accurate description would say that I wasn't just imposing, but forcing my way into her space. I needed to navigate the situation as tactfully as I could, lest she interpret my actions as outright abusive.\n\nAnd so, I took a great leap. I knew full well that my assumptions up to this point could have been completely wrong, but I decided to risk it all despite that possibility. I decided to confide in her my own appetite for the taboo. The thinking was thus: if I was right, and she truly was so scared of her shameful kinks being known by another, then she wouldn't be so scared if that person was someone of a similar persuasion. Naturally, if I was wrong, then I'd be in even more serious trouble than I was already in, but exposing my own vulnerability seemed the only way to make her feel comfortable enough to lower her guard in that moment.\n\nShe eyed me dead in the face as I started, \"Hey, it's okay! I can see what you're doing, but it's nothing to be ashamed of. I've done a little...\" I looked sheepishly down at my feet, \"peeping... myself from time to time.\" I looked back up to meet her eye again. Her expression was unchanged. I decided to take that as a good sign. \"It's fun, it's exciting, it's a little bit dangerous, I absolutely understand. There's no shame in indulging yourself so long as no one's hurt.\"\n\nHer deadpan cut into my very soul for an anxious moment. Then she asked, without a hint of emotion or intonation, \"Really? You do that?\" It could have been a genuine request for confirmation, or a sharp accusation and condemnation of my confession, I could not possibly tell either way.\n\nBut now was no time to change my story. I had committed to this path, and I had to see it through. \"Oh yeah, all the time. If I'm being honest, most of the reason I'm even here is just to watch the people at the beach with hardly any clothes on. And sometimes, if I'm lucky, I get to spy them changing, or skinny dipping, and I get to take vigorous mental notes, go home, and...\" I gestured rubbing an invisible dick loosely with my hand.\n\nAnd that was it, my hand had been played. The ball was entirely in her court now, to decide if I was a disgusting pervert who should be shunned by society, or if we were like-minded individuals. I hoped that I was conveying enough confidence in my body language, but in truth I was terrified. What I had just done could have been the worst decision of my life.\n\nShe stayed silent for a moment, lengthening my anxiety to its capacity.\n\nThen, after a long beat, emotion returned to her expression, and she brought up her hands to cover her face, incredulous. \"Oh my God...\" she let out, muffled. She lowered her hands, and her face was a beet red. \"I can't believe I'm having this conversation...\" She ran her hands anxiously through her hair. She fidgeted, blinking rapidly, until finally she met my eyes and said, \"Yeah. Me too. It's one of my favorite fucking things. It's honestly a problem.\"\n\nSweet relief, the like of which I had never known, washed over me and I felt immeasurably better. My play had worked, and my ass was safe. But better than that, I had actually cracked her. I was right, and having shared our confessions with each other, I was in. We were plunged together into that deep well beyond mere intimacy, where our true desires lie.\n\nI smiled broadly at her, doing my very best to keep any demonstration of my elation to a minimum, so I wouldn't seem over-eager. I laughed and said, \"I figured as much. I love that you're into that kinda stuff too. Now that we've settled, who have you got back there...\" I approached the window, to the side of her. But despite our mutual revelation, she still blocked my approach with her body. Which wasn't entirely unwelcome, since the front of her was now mostly pressed against me, but still it meant that she was resisting. \"Oh, come on, you can't keep him all to yourself now. I don't care if he's a guy, if you've got somebody-\"\n\n\"No,\" she cut me off, \"you can't.\"\n\nMy excitement faded a little, but I laughed the renewed tension away, \"And why not?\" I inquired.\n\n\"You just can't,\" was her reply. It seemed to me more like a plea than a command. \"It's bad, you might not like it.\"\n\n\"I doubt that very much,\" and I pressed my hand gently against her arm to urge her to move, and she finally obliged. I looked out the window, my face inches from the glass, but all I could see outside were a bunch of trees.\n\n\"I'm sorry...\" said Rebecca. Confused by this response, I looked closer at the outside, scanning every inch of the trees for some hint of skin. I could see some thick brush, and a road beyond that, but no hint of a single person.\n\nPerplexed, I moved my position to get a better angle directly down from the window. And there, beneath the window, was a clearing. Understanding dawned on me, as I looked over and to the side. \n\nThere was the outdoor shower. And standing on its wooden platform was a naked, wet, gleaming, and voluptuous Deanna. \n\n\"Oh my God,\" I let out audibly. Her back was turned to us, and the curves of her bare legs, ass, and back were tantalizing, to say the least. Water flowed flawlessly over each and every one of her curves, as the sunlight reflected playfully from her body. Her hips were wide, and her ass was round. I stood there, entranced by her. My cock began to stand upright in my shorts at the very sight of her.\n\n\"You're not mad?\" asked Rebecca from a million miles away.\n\nDeanna turned, and her tits shone brightly, clear as day. Her nipples were dark and narrow. Despite their size, her boobs remained high on her chest. I greatly admired how the water fell along her perfect shape; from her neck, to her chest, down her navel, through a light bush, and finally falling along the smooth lines of her legs.\n\nShe brushed her wet hair out of her face, leaning back into the shower to let it fall along her back, clinging against her skin. Then, she glanced over to the door at the side of the shower. Satisfied with whatever she saw, she took a short step forward, just off the edge of the shower's platform, looking in the opposite direction, toward the edge of the building. Content with that as well, she leaned back against the wall under the shower-head, put her hand between her legs, and started to rub herself with slow, methodical movements. She closed her eyes and let her head fall back as she gave into her indulgence.\n\nI had unconsciously begun rubbing the head of my penis through my shorts when I finally heard Rebecca, practically shouting my name. \"What?\" I asked, irritated at the interruption from living through a true fantasy.\n\n\"You're not actually mad at all?\" Rebecca begged.",
        "\"No, why would I be-\" Deanna's mouth opened as the movement of her hand became slightly more forceful, and just a little bit more rapid. I could see her starting to get lost in her own pleasure, a vice I could imagine with great ease. The movement of my own hand had subtly moved to lightly stroking my hard shaft through my shorts, teasing my own pleasure.\n\nAnd then, all at once, the meaning behind Rebecca's question dawned on me. I stopped touching myself, my jaw dropped, my eyes widened, and I turned to face Rebecca. \"Wait, you mean you saw me?\"\n\nShe cut me off with a forceful, rapid-fire apology, \"I'm sorry! I'm sorry! I'm sorry!\" Tears were starting to form in her eyes. \"Seriously, I'm so sorry! It's like a compulsion of mine, I can't help it! I saw the look on your face w- when-\" she gestured out the window \"-she came in the room yesterday. I knew that expression very well, so I came up here, waiting for you to come back from the beach, and then you did, and- and-\" Her eyes were red and a tear fell across her cheek.\n\n\"Stop, stop,\" I put my hands on her arms. \"You're so, so fine.\" I wiped away her tear from her face with my thumb. \"Honestly, it's totally fine.\"\n\nShe stifled a sob. \"What, really?\"\n\nMy cock practically poked through my shorts, begging for attention. \"Seriously.\" I took my hands away from her, and she looked at me incredulously. \"While I was down there, naked and masturbating,\" I returned my hand over my cock, and rubbed it slowly as I spoke, \"I was literally fantasizing about someone like you, watching me.\"\n\nShe shifted in her place, watching the motion of my hand along the outside of my shorts. With my free hand, I undid my pants button, then I asked her, \"What were you doing while you watched me?\" Already knowing the answer, I unzipped myself.\n\nIn reply, she slid her hand to the inside of her lower thigh, teasing herself now. \"I was,\" she slowly moved a finger towards her panties, but her expression showed her uncertainty. She eyed my groin as she finished, \"touching myself.\" Maybe her expression was closer to disbelief than uncertainty.\n\nI dropped my shorts, and my cock sprang to attention. Rebecca eyed me with her lust. I took hold of myself, and started stroking, slowly. \"That's so fucking hot,\" I confessed.\n\nHer finger reached its target, and she rubbed herself as she watched me.\n\nI smiled a sly smile, \"We'll get back to this.\" I turned to the window, and Rebecca fell in next to me.\n\nWe looked back down at the scene below. Deanna was now rubbing herself vigorously, her free hand covering her mouth to suppress her moans. I would have given anything to be able to hear her in that moment.\n\nRebecca squirmed next to me. I stroked myself in time with Deanna's movements below. They had become mind-numbingly rapid, and I felt hot cum ready to burst from me within seconds.\n\nAnd not a moment too soon either, since Deanna's body had just begun to contract in on itself, signaling her swift approach into climax. She bit down on her hand to stop herself from screaming, and I moaned enough for the both of us as I watched her.\n\nThen I saw her release. Her head fell back, her eyes closed, the growing tension in her body quickly dissipating with each breath she took. Observing this, I rubbed myself with a fury. Her body shook with ultimate ecstasy, and I was determined to join her.\n\nI let out a low moan as the feeling washed over me like hot lava. It was a familiar and warm embrace, but something was different this time. My body shook uncontrollably as I watched Deanna's body. Absolute contentment had spread across her face, and unknown to her, I had been part of it. \n\nRebecca said something. I couldn't hear her. I was still awash with the sensation of my own orgasm, I hadn't even stopped stroking myself yet, still distracted by the naked woman below. I wouldn't have heard her even if she had been screaming in my ear.\n\nThen, when I finally became aware of my surroundings again, Rebecca was on her knees in front of me, a paper towel in hand, blotting at the wall. Realization dawned on me.\n\n\"Oh my God, I'm so sorry! I just lost control!\" I crouched down to help her clean my cum from the wall beneath the window.\n\n\"I can tell,\" she taunted with her sly smile while wiping up a streak of my cum.\n\n\"Did you?\" I inquired, eyeing her body next to mine as I began to dab at the wall myself.\n\nHer smile faded slightly, \"No, not yet.\" She looked back up over the window sill. Deanna had just finished wrapping her towel around her, and was heading inside. \"But I think the moment's passed. Once this is cleaned up, we should head downstairs. People are probably already suspicious.\"\n\n__________________________________________________________________\n\nWe cleaned up, clothed ourselves, and went downstairs to the kitchen, where we found people mostly finished with their breakfasts. We dodged questions about our tardiness and ate, all the while stealing glances at each other, acknowledging our shared secret.\n\nDeanna eventually arrived as well, fresh and clothed. Rebecca and I did our best to avoid eye contact with her, for obvious reasons, but she was friendly as ever; completely unaware that her self-pleasure had been observed by the two of us.\n\nAfter we ate our breakfast, the group declared that many of them were headed down to the beach. Rebecca and I exchanged a knowing look, and made our excuses to stay behind. \n\nOnce everyone was gone, we went immediately back up to her room and locked the door. Once inside, we looked at each other as if we were stupid virgins, unsure how to proceed.\n\nRebecca finally said, \"So,\" while checking out my body closely. \"After yesterday, I already suspected you were a regular exhibitionist, but I guess this makes you a bit of a voyeur too.\"\n\nMy penis twitched. \"I suppose so.\" It was my turn to closely inspect her body now. \"And you?\"\n\n\"Just a voyeur, through and through.\" Seeing my disappointment, she clarified, \"but don't get me wrong, everything about exhibitionism excites me too, I'm just more... shy about my body, I guess.\" She looked down at herself.\n\nI took a step toward her. \"I can't imagine why.\"\n\nShe smiled. \"That's sweet of you, but I just can't stand the idea of people seeing me if I'm not close to them.\"\n\nI moved closer still, putting my hands on her hips and looking into her eye. \"Are you and I close enough?\"\n\nShe laughed, \"I suppose.\"\n\nWe disrobed together, and she led me to the bed. Her slender frame and smooth bare skin made her look angelic to me.\n\nShe lay down, and I started to put myself on top of her, but she stopped me. \"We'll get to that,\" she said. \"I just want to talk for a bit first.\" She moved over to the far edge of the bed, and put her hand between her legs. With her other hand, she patted the free space next to her, entreating me to join.\n\nI obliged, and we casually and slowly masturbated together again as we talked. She asked me, \"Since you like both, which do you prefer? Watching or being watched?\"\n\nI considered for a moment. \"Well, truth me told, yesterday was probably the first time that somebody has actually watched me, at least that I was aware of anyway. I tend to do stuff like that alone.\"\n\n\"But that doesn't really make a difference, does it? You didn't know I was watching you yesterday, and yet you fantasized about being watched, and you seemed happy when you found out the truth.\"\n\n\"That's true,\" I trailed off, lost in thought. \"Well still, it's hard to say. They can each get me off, obviously, but I guess... watching people is my answer. That's more substantial; I'm actually seeing somebody, and that's fun. When I get all exposed like that myself, it's just the concept of being seen that gets me off, not actually being seen, so I'll take the reality over the fantasy, I suppose.\"\n\nUnsatisfied, she pressed, \"But what if it was guaranteed that someone would see you? What if you like, 'accidentally' lost your swim trunks in the ocean or something like that? Surely, someone would see you then.\" Her eyes glittered with her excitement.\n\nI was taken aback, however. \"No, I'm not just going to expose myself to a bunch of regular people!\" \n\nRebecca looked disappointed. \"Why not? I love watching people expose themselves publicly like that.\"\n\nDespite our disagreement, we had not stopped masturbating. This was a subject that neither of us had ever spoken about aloud, and even disagreeing about the finer details was explicitly arousing for the two of us.\n\nI smiled at her, \"Well, for one thing, you are not a very common type of person. I can't guarantee that random people in the public won't be fundamentally disturbed by me.\"\n\n\"Okay,\" she conceded, rubbing herself thoughtfully. \"That's fair. So what if you were like, I don't know, a stripper? What if you could go to a place, and know that people would enjoy watching you take off your clothes and do what you do?\"\n\n\"Well, that's not what's fun about it for me. My 'brand of exhibitionism' or whatever isn't about showing off my body or anything like that. It's the... doing something sexual where I probably shouldn't be, I guess. That, and the mere possibility of being seen. If being seen was a certainty, it wouldn't get me going nearly as much.\"\n\n\"That's so fascinating...\" Her pace quickened slightly for a moment as she eyed me, considering what I had just said. I eyed her right back as I continued to stroke myself. The sides of our bodies were in full contact with each other, and her teasing warmth beckoned me to get inside her, but I resisted. This conversation was proving to be stimulating in and of itself. \n\n\"So how did you get into all of this?\" I asked.\n\nShe smiled, and stared up into the ceiling, lost in memory. \"Locker rooms, I guess. That, and friends who just weren't too shy.\" She looked back down to me.\n\n\"You mean you managed to masturbate in locker rooms to other girls? And with your friends?\" My mind went wild with fantasy. \n\nShe laughed. \"No, not like that. You asked me how I got into it, I didn't just start going at it the second I saw somebody naked.\" She smirked at me. \"But it wasn't really too far from that. You see, my mom was very strict about clothes. No exposed shoulders, my hemlines had to be below the knee, she didn't even like me wearing pajamas outside of my bedroom.\" I remembered Emily's reaction to Deanna yesterday. \"So consequently, when girls would just casually take their clothes off in locker rooms and places like that, it always got me really excited, when it probably shouldn't have. I just envied their comfort with nudity, their lack of worry about it, and just their freedom.\" Her eyes closed for a second as she rubbed herself more quickly, seeming to savor the memory. \"But mostly, I just liked how they looked.\"\n\n\"That's hot,\" I commented, watching her writhe. \"What about your not-so-shy friends?\"\n\nShe perked up at the mention. \"Oh, they were fun. Before I met them, I had never known anybody who talked so casually about sex and turn-ons and the like. They always made fun of me for being so reserved about those sorts of things, but I didn't really care, just getting to be around them fueled my libido in secret.\" Her free hand reached up and grabbed her breast, pinching her nipple between her fingers.\n\nShe continued, \"They were just comfortable enough to change clothes in front of me, and eventually just hang out naked, like it was no big deal. They thought nothing of it, but it definitely got me going just like the ladies in the locker room. Eventually, I discovered masturbation, and it wasn't until then that I realized how sexual my excitement with them was. My first fantasies weren't about having sex or anything like that at all, they were just about watching people take their clothes off. Naturally, I eventually found porn, and spent a whole lot of time exploring voyeurism as a concept. From then on, I took advantage of every chance I could to actually see someone get naked.\"\n\n\"That's so interesting,\" I said. I realized in that moment why she hadn't wanted to have sex right now. Or, rather, I realized that masturbating side-by-side was actually the kind of sex that she preferred. She'd rather watch me than have her inside of me.\n\n\"And you?\" she asked. \"How did you get so interested in getting off where you shouldn't?\"\n\nI had lost myself in the sight of her body as I heard her. I spent a dozen strokes or so admiring her naked form, as I considered where to begin. \"Well, the first time I ever saw a girl naked, she was demonstrating to me what the phrase 'skinny dipping' meant. We were at a pool party with a bunch of other people, we had been flirting a bit, and she brought it up. When I told her I didn't know what it meant, she just lowered her head to be just above the surface of the water, and told me to look underneath. I ducked my head in the water, and saw her bikini top and bottoms moved just enough out of the way to expose her whole front to me. Nobody except me saw. Nothing ever came of it between us, she had just been doing her own exhibitionist thing, and I was just the lucky guy who got to watch. But I was immediately hooked with the idea from that moment on. I took my suit off the second I was ever alone in a body of water. Eventually I started masturbating whenever I did so, and pretty soon, getting off outdoors became my favorite thing.\"\n\nWe spent hours lost in this kind of conversation, sharing stories and fantasies of all kinds. We edged ourselves constantly, always staying just on the cusp of orgasm, but delaying it so that we could continue to enjoy the conversation.\n\nShe gave me detailed accounts of all the people she had watched having sex: neighbors through a window, a slutty roommate who thought she was being sneaky, even strangers on a public beach on one occasion.\n\nIn return, I gave her a list of the various places I had managed to masturbate: pools, beaches, friends' houses, one particular outdoor shower.\n\nAnd then, after hours of this, people started to return from the beach. Rebecca and I got out of bed, and hurried to the window as we heard their voices, ready to watch them disrobe.\n\nMost people didn't, the first few just rinsed off their feet and such, very sensible, very boring. After a bit, another of my parents' family friends came back and immediately dropped his shorts. Rebecca practically convulsed with excitement, but alas, he only showered for a couple minutes, dried off, and then went inside. More fun than nothing, but after Deanna this morning, our hopes had been high.\n\nEventually, my sister Sara and my mom came around the back. At first, I was unperturbed, remaining certain that they were just going to wash their feet and that was it. However, as soon as that thought had crossed my mind, Sara dropped her bottoms, and her skinny ass was bare for all to see.\n\n\"Oh my God!\" I yelped, before falling to the floor so I couldn't see them anymore. Rebecca laughed hysterically. \"Is that funny to you?!\" I begged of her. \"I can't unsee that!\"\n\nRebecca's laughter continued as she rubbed herself quickly, watching the scene below. I made a desperate attempt to pull her hand away from her crotch as I practically yelled, \"Stop masturbating to my family!\"\n\n\"They're not my family!\" She dodged my grasp, and continued her motion.\n\nI cowered beneath the windowsill, waiting for the nightmare to end. After a few minutes, Rebecca told me, \"Alright, they're done, you can stop hiding.\"\n\nRelieved, I stood back up, but as soon as I looked back out the window, I saw the two of them standing apart, naked, Sara beneath the shower-head, my mom waiting at the side. I ducked back down as fast as I could before I could make out any fine details, the last thing I wanted was to get that image stuck in my brain. Rebecca's laughter returned in full force. I scowled at her, \"That was pure evil.\" \n\nAfter a while, Sara and my mom did finally leave, and it took much convincing from Rebecca to get me to stand back up this time. More of our group came through, mostly without incident. One girl pulled down her bottoms for a second, to rinse the sand out of it, but that was all.\n\nAnd then we saw the notorious Deanna make her way around the side of the building. I immediately stiffened up, and Rebecca looked positively enthusiastic.\n\nDeanna set her towel down, then undid the top of her pink bikini, and her boobs fell slightly into place. Then she turned, and dropped her bottoms in one swift motion, bending at the hip. As she went to turn on the shower, I commented, \"I would give anything to be down there with her.\"\n\nRebecca stopped masturbating, and turned to face me. \"So why don't you?\"\n\nI looked back at her incredulously, \"What?\"\n\nShe looked at me earnestly, \"Seriously, put on your shorts, go down there, and walk up on her.\"\n\nI stood there, dumbfounded and without a reply.\n\nShe continued, \"Best case scenario, she's super into it. Worst case scenario, you're both just a little bit embarrassed, but you still get to see her naked up close.\"\n\nHer suggestion was the most exciting thing I had heard all day, and today had already been a very exciting day. \"Okay,\" I let out, unable to disagree with her logic.\n\nRebecca smiled. \"Good, both scenarios are fun for me, because I get to watch.\" Her smile turned devilishly sly.\n\n\"You little perv,\" I retorted.\n\nAs a reply, she twisted her hips, raised her leg like she was a pin-up model, and slapped her own ass playfully. It was remarkably refreshing to be on this level with someone, where we could mutually acknowledge our kinks and tease each other about it.\n\n__________________________________________________________________\n\nI left Rebecca's room, not bothering to put any clothes on, and tip-toed naked into mine, where I put on my swim trunks before heading downstairs. I passed by Sara and my mom on the way outside, dodging their eye-line as Sara made some insulting remark as I passed. I tried desperately hard to keep the image of their bodies out of my mind. I left the house through the front door, then turned and made my way toward the outdoor shower.\n\nAs I started to follow the trail that led to it, I realized how easy it was to hear the water falling. That was the only method that gave the shower privacy, relying on people's courtesy to turn the other way when they heard it running. I ignored that courtesy, and turned the corner.\n\nThere stood Deanna, naked and radiant beneath the shower in the sunlight. Her fingers worked their magic on herself as her head leaned back, eyes closed, and her tits shook with each motion of her arm. By the looks of things, she was already rapidly approaching orgasm.\n\nI looked up to Rebecca's window, and found that I couldn't see a thing. The window was there, surely enough, but it was difficult to notice, and when you did notice it, the reflection from the trees made it practically impossible to see inside. It was perfect.\n\nI looked back to Deanna and watched her, waiting for my moment. Her hips started to thrust hypnotically, her abdomen tightening with each movement. She moved her hand to her mouth, and just as she bit down to stifle her orgasmic moans, I shouted in feigned surprise, \"OH!\"\n\nShe yelped loudly and turned about in a flurry, her back towards the wall opposite me, her hands covering her crotch and chest. Her eyes were wide in shock, her breath heavy. All the while, her torso was still contracting, indicating that I had timed my entrance exactly right; I interrupted her mid-orgasm.\n\nI hoped my face expressed the appropriate amount of shock and horror as I shouted, \"I'm so sorry!! I had no idea you'd be out here! I didn't mean to interrupt!\" I absolutely did.\n\nDeanna was catching her breath, the thrusting of her hips starting to cease, as she blinked and replied, \"Oh, tha- that's okay, sweetie.\"\n\nI stood there for a moment, watching her as the clung desperately to her private parts. Given our conversation yesterday, I had half-expected her to think nothing of my presence here. I almost believed that she would just finish her orgasm casually, and simply be on her way. And yet, now that I was here, she seemed surprisingly desperate to cover herself, to not reveal what she had just been doing. But of course, this was all in vain.",
        "She stared at me, still in shock. She didn't make a move for her bikini, nor her towel, nor the door. She just stood there, covered only by her own hands, as water continued to fall from the shower.\n\nAt last, I said teasingly, \"Well it's a good thing you're 'not a prude' at least. Otherwise, this would be very embarrassing for you.\"\n\nShe laughed and gritted her teeth into a fake grin. \"Yup! Wouldn't that be awful,\" she replied sarcastically.\n\nI took a step forward, and remarked, \"You know, this is a pretty open place to be doing...\" I gestured to where she had been standing before I startled her, \"something like that, don't you think?\"\n\nHer face flushed. Realizing she'd been caught, she shrugged awkwardly and said, \"That's kinda the idea. Didn't expect people to be walking up on me, though.\"\n\nI smiled brightly. \"You know, that's so funny, because I was actually coming here to do something similar.\"\n\n\"What?\" was her only response.\n\n\"Yeah, it's like you said yesterday; sometimes getting naked is just... fun.\"\n\nShe shifted slightly in her place, her hands still pressed against her body, albeit a bit more loosely now. \"Well, yeah, that's certainly true. Look, if you just want to give me a minute, then I can finish and give you some privacy to do whatever you like.\"\n\nI stepped closer still, making a show of eyeing her bare body. \"I mean, I interrupted your moment, it's only fair that you should interrupt mine.\" I pulled at the drawstrings on my swim trunks, undoing them.\n\nDeanna remained motionless, watching me. It was like she couldn't decide what she wanted to do, so instead she did nothing just to observe what would happen.\n\nMy trunks fell to my feet, and my hardness was exposed to the raw elements yet again. Deanna made no effort hide her wandering eyes. It was difficult to say how she felt about what she saw, but I was well beyond the point of no return.\n\nI stepped onto the shower platform, leaned my back against the wall adjacent to Deanna, and took hold of my dick. \"Do you mind if I...?\" I gave myself one long, slow stroke to finish the question.\n\nDeanna watched the motion of my hand, wide-eyed, then nervously said, \"Oh Lord, you really shouldn't.\"\n\nI replied quickly, \"So tell me to stop.\" Another long stroke. I looked straight into her eyes, fighting the obvious urge to indulge in the sight of her curves below.\n\nShe met my gaze for a moment, then returned to my groin. \"I... I don't think I want to.\"\n\n\"Why not?\" Another stroke.\n\nThe corner of her mouth picked up, turning her expression into a wicked grin. \"Because I think I like it.\"\n\n\"Good.\" My strokes finally fell into a regular rhythm, which started out slow and steady. I allowed myself to lower my eyes to gaze upon Deanna's luscious form. Her fingers that had recently been used to obscure the view of her nethers were now curled around them instead. Her hand that had recently been placed over her breasts were now pleasurably clutching at them tightly.\n\nWe pleased ourselves in each others' company for a moment, the shower still running between us, the sun warming our bare skin, a light breeze titillating our senses, and all the while, Rebecca watched inconspicuously from her window. Deanna had no idea that I wasn't the only one masturbating with her, but given how easily she allowed me to do so, I like to think she wouldn't have minded Rebecca being here as well, though knowing Rebecca, doing so would ruin the experience for herself.\n\nAfter a few more moments, I approached Deanna through the falling water of the shower. As I got closer, she rubbed herself with increasing intensity, until I stood inches away from her, the tip of my penis practically at her navel.\n\nI stopped touching myself and put my hands on her instead. One hand replaced her own, and I gripped her tit tightly. The other went to her hip, enjoying as much of her curves as I could while her ass was still pressed against the wall.\n\nDeanna looked down at my hardness, temptation plain across her face. As she continued to pleasure herself, she tentatively touched the tip of my penis with her forefinger, and then met my eye. I bit my lower lip to demonstrate my approval. She tenderly wrapped her hand around it, giving it slow, thoughtful tugs that turned my lust into a dominant force.\n\nI pulled her closer to me by her hip, and our chests made contact. I took the opportunity to reach around and grab her ass, which was sleek and wet. My hand could hardly fit around her entire cheek. I lowered my head to her neck, which I gave a quick nibble.\n\nI lowered my hand to the top of her thigh, and I pulled at it, entreating her to raise her leg for me. She obliged. I lowered my hips to situate myself between her spread legs, and I brushed her hands aside. She looked around desperately, uncertain of her decision to be with me. \n\nBut her expression faded quickly as I entered her. I pushed her back against the wall, as I thrust rapidly into her. Water fell along my back and side, down to Deanna's raised leg, which I held high above my hip. Her foot wrapped around my backside.\n\nI saw the tell-tale signs of orgasm start to show themselves in Deanna's face. She trembled, her jaw open wide, her eyes shut tight. \n\nAnd she moaned. Loudly. It was an unmistakably erotic sound, one that wiped all other thoughts and feelings from me. Nothing remained but sex. I became thrusting, I became passion, and I became pleasure.\n\nMy movements lost all care and coordination, all I knew how to do was fuck her.\n\nAnd her moans became screams. She cried out primally as I felt her contract around me.\n\nAnd which each passing thrust, I lost all sense of myself. I swiftly became orgasm, and all that existed was orgasm. I don't know what sounds were made, but when I came to, my throat was dry.\n\n\"Fuck!\" exclaimed Deanna, in a hushed voice, all of a sudsden. I didn't have the mental capacity to understand her tone, but she started pushing me away. \"Somebody must have heard that! You have to go! Fuck!\" She scrambled around her feet for her towel, and I stood there dumbstruck. \"Go!\" she repeated, in a quiet yell.\n\nFinally understanding her command, I turned and darted out into the clearing toward the brush, still stark naked. \n\nDeanna shouted at me, \"Your goddamned shorts!\" before throwing them at my body, her other hand rushing to wrap her towel around her nudity.\n\nI caught them and ran into the brush, not yet bothering to put them on.\n\nI hid behind a wide tree, and looked back at the house. Deanna had regained her composure and was making her way into the house.\n\nI looked up to Rebecca's bedroom, and from this angle, I could see her clear as day in her window. Her chest was bare, and she was holding something long and black; a camera. She lowered it as she saw me notice her, and she smiled a wicked grin."
    ],
    "authorname": "Qpolik2",
    "tags": [
        "masturbation",
        "milf",
        "mutual masturbation",
        "naked outside",
        "outdoor masturbation",
        "outdoor shower",
        "outdoors",
        "shower sex",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/just-skin-and-water"
}