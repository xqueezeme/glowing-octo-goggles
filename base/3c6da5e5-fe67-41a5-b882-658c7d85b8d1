{
    "title": "Girl Power Ch. 03",
    "pages": [
        "After my roommate and I shared our first sexual encounter, I held her close, our bodies tight to each other in her narrow dorm bed. I sensed she was sleeping and let myself drift off. Even though I did not have an orgasm, I enjoyed a sexual satisfaction knowing I gave Morgan her first orgasm with another person. Morgan is beautiful and the most open and trusting person I've known. I hope this journey into intimacy will not change our friendship or cause her anxiety and anguish.\n\nI woke later. We had shifted into spooning while we slept. I was behind Morgan and one hand held her ample breast while my pussy was pushed against her soft butt. My nipples began to harden as they pressed into her naked back. Pressing my nose to her neck I inhaled her scent. I savored the soft fragrance of her skin, the subtle aroma of her body wash and the fruity smell from her shampoo. I also detected a whiff of womanly sexual arousal. I realized it was probably on my own face and chin. When Morgan orgasmed, she also squirted. I was covered in her hot and delicious essence. \n\nI could feel my own arousal building as I held her naked body. I did not have a release before and the memory of our intimacy and the sensations of skin on skin mingled with the exotic m\u00e9lange of aromas were driving me crazy. I started slowly pumping against her rear.\n\n\"Mmm,\" Morgan moaned. \"Wow, how long have we been sleeping?\"\n\nI turned my neck and saw the alarm on the night stand. \n\n\"Two hours, sweetie.\"\n\n\"Gretchen, you're holding my breast.\"\n\n\"God, Morgan, you are so smart.\" I squeezed the large, soft mound and rubbed my palm along her nipple.\n\n\"Yes, I am,\" she said, catching her breath, \"and now you're playing with my breast.\"\n\nI kissed her bare shoulder. \"You didn't mention that we are naked in bed together. Morgan is naked. Morgan is naked. Morgan is naked...\"\n\n\"Stop it,\" she said giggling. \"Don't rub it in.\"\n\nOn cue, I fondled her breast and pinched her nipple.\n\n\"God,\" she said in a soft voice. I played with her boob some more until her hand landed on top of mine and stilled the movement.\n\n\"Can we just talk?\"\n\n\"Shit, Morgan, we just had sex for the first time and already we're at 'we need to talk'.\"\n\nI tried to make it sound like a joke, but even I heard it come out harder than I intended. Morgan stiffened in my arms and pulled my hand from her breast.\n\n\"Sorry, sweetie, that was supposed to be funny. Guess it didn't come out that way.\"\n\nMorgan rolled to face me, keeping the covers pulled to her chin.\n\n\"Gretchen, be honest with me, what happened before?\"\n\nI stroked her cheek. My heart rushed as I saw the tender, but confused look on her face. I wanted to hold her and protect her. I also knew that I was the cause of the confused look.\n\n\"Morgan, we had sex. Well, I had sex with you. It was the most beautiful experience. I loved making love to you. I loved your body.\"\n\n\"Oh, God, Gretchen. I can't believe we did that. No one has ever even seen me without clothes and you, you saw all of me. You kissed me...down there.\"\n\n\"Yes, I did. It was awesome.\"\n\n\"But, it was so wrong,\" she said and tears formed in the corners of her eyes.\n\n\"No it wasn't. It was good. Sex is not bad, Morgan. Don't tell me you didn't enjoy it, 'cause I know you did. You came and you came hard. Morgan, you squirted. Not many girls can do that. So, I know you liked it.\"\n\nTears streamed down her cheek. \"Gretchen, animals like sex. I never thought that I would do something like that.\"\n\nI rubbed her tears away with my thumb. Wanting to kiss her, I moved my face toward her.\n\n\"Not now,\" she said and pulled back.\n\n\"Morgan, just a little while ago you were so happy. You kissed me. You told me you loved me. Hell, you kissed my tit. Now, you're pulling away from me. What's going on?'\n\n\"Oh, Gretchen, I'm so sorry. It's just that I'm also so confused. What we did was a sin. It was wrong. Of course, I loved it at the time, but I'm supposed to be able to control myself.\"\n\nI took her hand and brought to my mouth, lightly kissing her fingers. I had to exert tremendous control not to smile, since I could detect the smell of her sex on her finger, where she had plunged it in her pussy a short while ago. Remaining sober, I tried to sympathize with her.\n\n\"Morgan, I get that having sex for the first time can be emotional. I truly understand it.\"\n\n\"Gretchen, the first time I had sex in my life was with a girl. So, not only did I sin by having sex, but I sinned by having homosexual sex. God, I can't believe any of this.\"\n\nMorgan started sobbing heavily. I pulled her head to my chest and held her as she cried. At first she was stiff, but after a few minutes she let her body relax and draped an arm across my tummy and held tight as she tried to get herself under control.\n\nMy mind raced with how I should handle this. I cared so much for her and did not want her to regret the beautiful moment we shared. I idly stroked her hair and back as her sobs morphed into occasional gasps and finally into raspy breathing.\n\n\"Morgan, you know how much you mean to me, don't you?\"\n\n\"I think so.\"\n\n\"Well, you do. I think you are the sweetest and nicest girl I know. And, you are the sexiest. So, for me, you are a big bundle of sensuality. Nice and sexy. Kind and funny. Smart and caring. I wanted to, no, I want to be close to you in every way. Sex was just part of it. If we never had sex again, well, honestly I would really bummed, but you would still be my best friend. If what we did freaks you out, then let's just chalk it up to a crazy afternoon. The last thing I want is for you to not be my friend, my roommate.\"\n\nMorgan was nodding as I spoke. \"I don't want to lose you either, Gretchen. You make me feel so special.\"\n\n\"That's 'cause you are.\"\n\n\"But, I'm so confused,\" she said.\n\nI held her and thought about what must be going on inside her head.\n\n\"Ok, Morgan, I think you need to talk to someone about this. You can't talk to me, because I'm part of what's confusing you.\"\n\nShe snorted and laughed, \"Part?\"\n\n\"Ok, main part. But, you need to talk to someone.\"\n\n\"Like who?\"\n\n\"Is there a professor you like?\"\n\n\"Not one that I'd want to discuss having sex with a girl.\"\n\nI held her and stroked her back while I thought. \"Ok, this would not be for me, but how about a chaplain?\"\n\nMorgan squeezed me and said, \"Would you think I was a total wuss if I did talk to a chaplain?\"\n\nMorgan was raised Catholic and had always played within the lines. For her having sex with me was way outside any line she could conceive. I had a feeling she needed someone who could understand the human and religious issues confronting her.\n\n\"Morgan, I think it's just what you need. I say go over tomorrow and see if anyone is around.\"\n\n\"Might not be anyone there on a Saturday,\" she said, \"But, thanks, I'll go.\"\n\n\"Great,\" I said. \"Maybe we could sin some more before then. You know, give the chaplain lots to work with.\" I leaned in and kissed her nose.\n\nMorgan let out one of her belly laughs, \"You are too much, Gretchen. But, you sure do crack me up.\"\n\nI kissed her lips. Her eyes were open and after a moment she kissed back. Our breasts were pushed together and I felt my nipples hardening. I started to slide one hand around to touch her breast.\n\n\"No, Gretchen, please. I can't do that right now. Don't get mad, please. I need to figure all this stuff out.\"\n\nI kissed her lips again and said, \"Sweetie, no one ever figures it all out. Sometimes we just plunge ahead and figure it out along the way.\"\n\n\"I'm more of a figure it out and then plunge ahead person. You know, pre-med, and all that.\"\n\n\"Ok, no pressure from me. Remember I love you and will always be your friend.\"\n\n\"Always is a very long time,\" said Morgan.\n\n\"Thank you, Confucius. Now, let's get dressed and go to dinner. Then, we have the bonfire. What if Zeke asks you out?\"\n\n\"Oh, heck, do you think he might?\"\n\n\"Never know. But, say he does?\"\n\n\"Gretchen, I don't know what to say.\"\n\n\"Hey, just tell him you have to check with the chaplain first.\"\n\nMorgan snorted and slapped my butt, covered by the sheet. \"You are so mean.\"\n\n\"Relax, Morgan, if he does, say yes and see if you like going on a date.\"\n\n\"You make it sound so simple.\"\n\n\"It is,\" I said and kissed her. \"It really is.\"\n\nMorgan kept her eyes closed after my kiss. She licked her lips and smiled. \"See, that's what's so confusing. You're giving me dating advice and making out with me at the same time.\"\n\n\"Yeah, life's a bitch,\" I said and laughed. \"Let's go.\" I started to pull the covers off.\n\n\"Uh, Gretchen, maybe you could hand me my underwear.\"\n\nI stood and faced her. \"Morgan, look at me.\"\n\nShe let her eyes run up and down my naked body.\n\n\"You like looking at me, right?\"\n\nShe nodded.\n\n\"Did it ever occur to you that I might like to look at you? So, just this once, let me see you.\"\n\n\"You saw me before when we were, well, you know.\"\n\n\"I want to see all of you. Do it this one time. I'll never ask you again. Please.\"\n\n\"You know no one's seen me naked.\"\n\n\"So, I'll be the first.\"\n\nMorgan took a deep breath and swung her feet out of bed. Still clutching the sheet in front of her she moved to the edge. She tugged the sheet free from the bed and stood, still wrapped up.\n\nLooking at the floor, Morgan shook her head back and forth.\n\n\"Morgan, look at me.\"\n\nShe raised her head.\n\n\"I love you. I am going to love your body. Give me the sheet, sweetie.\"\n\nMorgan took a deep breath and handed me the sheet. I took it and dropped it at our feet.\n\nI slowly took in every inch of her naked body. To her credit, Morgan kept her hands at her side and her eyes fixed on mine.\n\n\"My God, Morgan, you are so beautiful. Amazing.\"\n\nShe blushed. \"Thanks for being kind.\"\n\n\"Kind, my ass. You are simply amazing.\"\n\nMorgan is a couple inches shorter than I am. She weighs a little bit more than I do, but it's well distributed over her body. She probably would have a little muffin top in tight jeans, not that she ever wore them. Morgan has a full figure. I guess I'd call her big-boned. If she were a little taller, she'd be more like a Victoria's Secret or plus-sized model than a runway model. Not fat, just full. Her breasts are large and firm. They sorta point out to each side as they sit high on her chest. Her large pink areolas surround eraser-sized dark pink/red nipples. She has a waist that flares to her womanly hips. I admire her legs, also feminine and firm.\n\nHer bush is wild. Long blond curls stretch from the top of her mons across her thighs and hang down between her legs. I cannot make out her lips behind the thick mass. As unusual a look as it is for girls our age, I get a rush looking at her thick bush. Images of fertility goddesses float through my mind.\n\n\"Morgan, you are incredible. Could you turn around?\"\n\nSlowly she spun until I was staring at her butt. It is full, but could in no way be described as fat. There was no cellulite and her cheeks looked firm as well as full. I ran my hand along one cheek. Morgan took in a sharp breath.\n\n\"Sorry, I just had to touch this magnificent bum.\"\n\n\"You mean huge, not magnificent.\"\n\nI bent and kissed the white flesh. \"No, honey, I mean magnificent.\"\n\n\"God, not only do I have a seriously over-sexed roommate, I now know she is totally deranged.\" \n\n\"If that means, I'm crazy over your ass, Morgan, you are right.\"\n\nI stood and grabbed her shoulders so she faced me. I pulled her to me and we kissed. I felt her breasts against mine and I pushed my pussy into hers. Grabbing her butt with two hands I melded out lower halves together.\n\nWe kissed for several seconds and then Morgan pulled back. \"Let's get dressed, Gretchen.\"\n\nI nodded and we started to pull on clothes.\n\nWe sat with a bunch of friends at the Commons, but didn't see the guys or Janelle. One of the other girls, a senior, invited us over to her dorm for some beers before the bonfire. Morgan begged off to do some studying, but I went along. Morgan and I set a time and place to meet up later.\n\nI knew the senior from my modeling job. She worked in the office at the art center and processed my paychecks. We had talked a couple times and hit it off. \n\nIn her room, we were joined by her roommate and two other seniors. We started drinking and talking about school and other things. While on my second beer, my friend, Debra, told the others I did nude modeling.\n\n\"I could never do that,\" said Fran, her roommate. \n\n\"Why,\" I asked, \"you look like you have a good figure.\"\n\n\"It's not that,\" she said. \"I just can't imagine stripping in front of all those people and letting them watch me. How could I face them afterwards?\"\n\n\"That part doesn't bother me,\" I said feeling the effects of the beers. \"Actually, it's kinda a rush.\"\n\nDebra looked at me and turned her head to the side. \"How so?\"\n\n\"Well, I guess I am an exhibitionist. And, so I get a rush when people see me naked. Plus, I know I am affecting them. You know, like I have some power over them.\"\n\n\"What kind of power?\" asked one of the other girls.\n\n\"Like I give the guys hard-ons.\"\n\nThey all laughed. Debra said, \"With most of the guys on campus, that's not so special.\"\n\nWe laughed again and I said, \"Sure, guys are horny all the time. But, I know the guys in my class are hard because they are looking at me. That's another rush.\"\n\nJenny, a tall redhead, said, \"I get that. I probably could model nude.\"\n\n\"Bullshit!\" her friend said. \"I bet you would chicken out before you sat in front of a bunch of kids our age nude. You hardly can get changed in front of me.\"\n\n\"No, really,\" she said. \"I could see myself doing it.\"\n\nI know I should have kept my mouth shut, but I just couldn't. \"Hey, let me get in touch with the professor. I bet he would go for having two models for a session. We could do it together.\"\n\nThe redhead looked at me as her mouth dropped open. \"You're kidding, right?\"\n\n\"No, Professor Adams is cool. I bet he'd like to pose the both of us. It would be something different for the class.\"\n\nHer friend egged her on. \"Go on, Jenny, you said you could do it. Now's your chance. But, I doubt you have the nerve to do it.\"\n\nThe redhead took a long drink of beer. She glanced around at the others in the room and said, \"Fuck it! If he says yes, I'm in.\"\n\nWe all cheered her. I took a closer look at her body. She's taller than I am by an inch or two and looks to have a decent figure under the layers of clothes she wore. I got her number and told her I'd give her a call at the beginning of the week. The class met at four on Thursdays for two hours. She said she could make it.\n\nIt was time to go out for the bonfire. I texted Morgan and told her I was on my way. She texted back and said she'd meet me. When I arrived I saw Zeke, Eli and Janelle standing with Morgan. We all hugged each other. Eli had a bottle of wine hidden inside his parka. We all, except Morgan, took a drink. \n\nThe bonfire was cool and we hung around enjoying the warmth and visiting with friends. Janelle said she was invited to a party and could bring friends. I saw Zeke and Morgan talking and said I was up for it. I tugged Eli and made him commit to go with us.\n\nZeke said he and Morgan were just going to walk around the campus a bit. I caught Morgan's eye and winked. She smiled and we went our separate ways.\n\nI arrived back in our room around one in the morning. Morgan was in bed. I was trying to be quiet, but the amount of alcohol I had resulted in terminal clumsiness.\n\n\"God, turn a light on, Gretchen, before you kill yourself.\"\n\n\"Didn't want to wake you,\" I semi-slurred.\n\n\"Maybe slamming the door might have already done that,\" she said.\n\n\"Oops. My bad.\"\n\n\"Are you really that wasted?\"\n\n\"'Fraid so. They had some kinda punch at the party. Mighta overdone it a bit.\"\n\n\"Really?\" Morgan said, as she watched me struggle to get my sweatshirt over my head. In a second I felt her gripping it and freeing it from my body.\n\n\"Thanks. You're the best.\"\n\n\"I assume you're sleeping as usual.\"\n\n\"You got it, baby. Bare ass all the way.\" I knew I was being obnoxious, but thought I was also being funny.\n\nMorgan sighed and lifted my long-sleeved tee shirt off. My boobs bounced free. I fell back on the bed and she removed my boots and socks, undid my jeans and pulled them down. \n\nShe stared at my thong. \n\n\"Everything must go,\" I said.\n\nShe grabbed it and pulled it free. We both remained motionless as she knelt between my legs, her face inches from my damp and ready pussy.\n\n\"Kiss me, Morgan. Kiss me there.\"\n\nMorgan put her hands on the insides of my thighs, running her fingers lightly along the surface. I groaned and spread my legs wider. \n\nMorgan pushed on them and stood up. \"Under the covers, Gretchen. You need to sleep.\"\n\n\"Um, kiss me?\"\n\nMorgan kissed my forehead. \"'Night, Gretchen.\"\n\n\"Love you, Morgan. You're the best.\"\n\nIf she replied, I never heard her.\n\nIt was past noon when I could move my head off the pillow. The blinding light seared my eyes. I could barely make out that Morgan's bed was empty. I wanted to sleep, but had to pee. I pulled on my tee shirt and stumbled down the hall. After using the toilet, I looked in the mirror and almost shouted. There was a strange creature staring back at me. I made my way back to the room, grabbed a towel and headed to a shower. After twenty minutes of alternating between hot and cold water, I began to feel mildly human. Back in my room, I brushed my hair, pulled on some clothes and decided I needed something in my stomach.\n\nThe Commons was just winding down brunch, but I managed to grab the last batch of pancakes and some bacon. I filled two mugs with black coffee and took a table near a window, happy I was wearing shades. As I slowly ate my food, hoping it wouldn't come surging back out, a shadow crossed in front. I looked up to see Jenny, at least that's what I thought her name was.\n\nShe asked if she could sit and I nodded. I was already on my second mug of coffee and the caffeine was beginning to kick in. I pulled a bottle of Advil out and swallowed four pills with the coffee.\n\n\"Rough night?\"\n\nI looked at her, pulled down my sunglasses and glared at her. She pulled back. Maybe it was the red rims of my eyes or the snarl on my lips. \n\n\"Uh, yeah, I guess you don't need to talk about it,\" she said.\n\nPushing the glasses back up, I finished the coffee and made to get up for another mug. I fell back once and Jenny took the mug. \"Black?\" I nodded and she went to fill it.\n\nI accepted the mug with a nod that set my brain ricocheting around my head. Closing my eyes, I counted stars until the pain receded. \n\n\"Maybe this isn't a good time to talk,\" Jenny said.\n\n\"Maybe? Sorry, I'm not trying to be a bitch. As long as you talk quietly and I don't have to do too much, it's ok,\" I replied and sipped my coffee.\n\n\"Well, I sorta wanted to talk to you about that modeling thing.\"\n\nI squinted and tried to make sense of what she meant.\n\n\"You know, joining you to pose nude. For Professor Adam's class.? On Thursday?\"\n\nSlowly it came back to me. Her friend had goaded her into agreeing to pose. Now, she probably had cold feet and wanted to back out. It was fine by me. I didn't give a shit. All I wanted was to get back to my dorm and crash in bed.\n\n\"Hey, look, if you don't wanna do it, don't. But, I can't talk right now. Come by later, like, well, like tomorrow and we can talk.\"\n\nJenny nodded. \"Sure, but it's not like I don't want to do it, it's more like I'd like to know what to expect. You know, like what do we wear, what kinds of poses...\"\n\n\"See, now we're talking about it. Jenny, my fucking head is about to explode. Let's do this tomorrow.\" I gave her my dorm and room and slowly made my way to my dorm.\n\nStill no sign of Morgan. I collapsed, fully clothed, on my bed, pulled a pillow over my head and tried to silence the freight train running on a track from ear to ear. As the sounds faded to a low rumble, I welcomed sleep.",
        "It was about four o'clock when I struggled to open my eyes. Morgan was at her desk working at her computer. My mouth was dry and I hoped I hadn't been snoring with my mouth open.\n\n\"Hey,\" I said.\n\nMorgan turned and smiled. \"Ah, she lives.\"\n\n\"Not so sure,\" I said. \"You wouldn't happen to have any water?\"\n\nMorgan pulled a bottle out of the mini-fridge, uncapped it and handed it to me. I drank half of it down. I then searched my pockets and found the Advil. I took four more and finished the water.\n\nSlowly I eased myself up on the bed. The pain was much lower than before, but still my brain seemed to pound. I smiled at Morgan and shrugged my shoulders.\n\n\"You know, Gretchen, you really make me feel a lot better about not drinking.\"\n\n\"Fuck you, goody-two shoes,\" I said. We both smiled, knowing we were just teasing.\n\n\"You were out early this morning,\" I said.\n\n\"Well, I wanted to get some things done and Zeke asked me to go with him to the football game.\"\n\n\"Shit, I forgot all about the game. Who won?\"\n\n\"We did, I think. It was my first football game and I had no clue what was going on. I just cheered when Zeke and the others did.\"\n\n\"So, you had a date with him. Cool.\"\n\n\"I wouldn't call it a date-date,\" said Morgan. \"We just went to the game together.\"\n\n\"Did he ask you to go with him?\"\n\n\"Yes.\"\n\n\"Did you sit with him?\"\n\n\"Of course.\"\n\n\"Did he buy you a hot dog?\"\n\nMorgan laughed and said yes.\n\n\"Definitely a date. The hot dog was the clincher.\"\n\nShe reddened and smiled.\n\n\"So, how was it\u2014your first date?\"\n\nMorgan smiled and said softly, \"It was nice. I had fun.\"\n\n\"Did he kiss you?\"\n\n\"God, no. Like there were tons of people all over the place.\"\n\nI nodded thinking how Morgan still equated anything sexual with being in the dark where no one could see you.\n\n\"He ask you out again?\"\n\n\"Said he'd call me. I hope he does.\"\n\n\"I think he will, Morgan. Hell, why wouldn't he? You are a hot babe.\"\n\nMorgan let out one of her deep laughs. \"God, you crack me up, Gretchen. But, thanks for saying things like that.\"\n\n\"Hey, the game didn't start until one, where were you earlier?\"\n\nMorgan broke contact with my eyes and looked at her lap. \"I, uh, went over to the Newman Center to see if like the chaplain was there.\"\n\n\"Oh, was he?\"\n\n\"No, he was in his parish. But, the person at the desk said that she knew the Episcopal chaplain happened to be in the building. There was some kind of an ecumenical workshop that was just finishing up.\"\n\n\"They had a fucking workshop on Saturday morning? On homecoming weekend? Talk about a nerd convention.\"\n\nMorgan flinched and I regretted my snarky comment. She probably was the type of girl who might have gone to that workshop.\n\n\"So, did you go see him?\"\n\n\"Her.\"\n\n\"Really?\"\n\n\"Yes, after the workshop broke up, I asked if she had a few minutes. I think she saw something in my face and asked the girl at the desk if there was a place we could meet. We went into an empty office. There were two easy chairs and we sat facing each other.\"\n\n\"Cool. Is she nice?\"\n\n\"Well, I guess as an English major you will appreciate the irony. She is a woman priest, something we definitely do not have in our Church. And, she is gay and married.\"\n\n\"No shit. So, you just happen to luck into a gay, female chaplain to discuss your feelings toward your horny roommate. That is ironic.\"\n\nMorgan laughed. \"Yeah, I was a little freaked at first, but Elizabeth, that's what she asked me to call her, was really nice. She's 35, been married for two years and been a priest for five years. She said she always knew she was gay, but never acted on it until after college. She was in the seminary and met another woman. They hit it off and eventually became a couple. Although they broke up, it was something that confirmed to Elizabeth that she wanted to develop a life-long relationship with another woman.\"\n\n\"Wow, she told you all this?\"\n\n\"Yeah, it sorta came out in pieces as we talked.\"\n\n\"So, what advice did she give you? Well, if you don't mind talking about it. If you do, I can understand.\"\n\n\"I want to talk about it, Gretchen. First, thank you for being so supportive and telling me to talk with someone. I feel better knowing that you kinda get me.\"\n\nI thought I'd love to get her right now, but had the brains not to say it out loud. She looked adorable sitting across from me.\n\n\"She was great. I told her about us and, you know, the sex thing. She listened and asked me some questions. I also told her about never having dated before. She wanted to know if I were interested in boys. I told her maybe, but I had no experience with them. And, no, I didn't tell her how you forced me to touch a guy's erection.\"\n\nWe both smiled as we recalled being with Eli and Zeke after the Naked Mile run.\n\n\"So, she said that Episcopalians and Roman Catholics have some different views on homosexuality. She did say that both taught that sex was really best reserved for marriage. She then laughed and said that most people experiment with sex long before they marry. She told me that I would have to resolve what I learned growing up with my ability to make decisions as I became an adult. I pressed her on that and she said that only I could decide what was right or wrong for me.\"\n\nMorgan took a break and pulled two more bottles of water from the fridge. She tossed me one and we each drank. Taking a deep breath, Morgan continued her story.\n\n\"I pressed her on that last point. She was so nice, Gretchen. She said that she could not tell me to experiment with sex. She did say that she did have several partners before she married. She also said in her heart she did not believe she was sinning.\"\n\nI looked at Morgan. I longed to take her in my arms, comfort her, kiss her and tell her how special she was. I patted the bed next to me. Slowly, she stood and crossed over to me.\n\nShe sat and I put my arm around her shoulder.\n\n\"You're a brave girl, Morgan.\"\n\nShe leaned her head on my shoulder. \n\n\"So, have you decided what you want to do?\"\n\n\"Not really,\" she sighed. \"I think I need some time to process what Elizabeth and I discussed. So, while I'm doing that maybe we shouldn't have, like, sex.\"\n\nMy heart sunk. \"Morgan, I love you. And, just so you know, I want you. I mean I want to make love to you\u2014a lot. But, I understand that you need to think about all this. So, I can agree I will not put any pressure on you. I want you to know, though, that if you decide to take another step with me that I am so ready.\"\n\nMorgan turned her head to me. Tears were in the corners of her eyes. \"Can I kiss you?\" I asked.\n\nShe closed her eyes and our lips came together. I felt heat course through my body and I used every ounce of strength I had to refrain from pushing my tongue inside her mouth. Slowly we parted.\n\n\"I love you, Morgan.\"\n\n\"Love you, too, Gretchen.\"\n\nTrying to lighten the mood, I asked, \"Does this mean I have to wear clothes in our room?\"\n\n\"Heck, no,\" she said. \"I still want to have some thrills.\"\n\n\"How about you, Morgan? Do you think you can be more relaxed about going nude?\"\n\nShaking her head, Morgan said, \"I don't think I will ever be 'relaxed' about being nude. I might not be as uptight as I was, but I doubt I will be just sitting around naked.\"\n\n\"That's a shame,\" I said and kissed her lightly.\n\n\"Let's go to supper. They're having a big barbeque in the quad,\" said Morgan.\n\nWe grabbed our jackets and headed out. Walking down the steps of our dorm, I took her hand in mine and squeezed it. \"I'm so lucky to have met you, Morgan.\"\n\nShe squeezed back, \"I feel the same.\"\n\nWe met up with our friends in the quad. It seems like the five of us are becoming something of a group. I liked all of them and thought it was good that we could hang out together. The guys talked about the football game. Morgan nodded along, but I knew she was essentially clueless about what they discussed. Janelle and I didn't go to the game, so we just listened. \n\nEli asked if we were going to the dance that night. As part of homecoming there was a big dance in the field house. There was going to be a dj and pizza and other snacks. We figured there would be lots of contraband beer available inside or around the grounds outside. My hangover was gone enough that I could contemplate having a beer. We agreed to join up at nine o'clock.\n\nWalking back to our dorm, Morgan said, \"I think Janelle really likes you.\"\n\n\"Why?\"\n\n\"She couldn't take her eyes off you when we were sitting there. There was a certain look she gave you that would have burned the ivy off the walls.\"\n\nI took Morgan's hand as we walked on. \"Well, maybe, I guess she might. Does that freak you out?\"\n\n\"Do you want to be with her?\" Morgan asked.\n\nMy mind raced with different responses. Janelle is totally hot and I think sex with her would be awesome. I didn't want Morgan to think that I was just after sex with anybody. I kept debating on how to answer when Morgan spoke again.\n\n\"It's ok, Gretchen. I think she's really sexy. I mean she even turns me on a little. Not like you, but before in our room when she was naked and looking for her thong. Wow, that was something else.\"\n\nI recalled how Janelle looked bending over and exposing her butt hole and pussy. Janelle had made it clear to me that she wanted to hook up. Remembering how she looked fired up my imagination.\n\n\"Yeah, that was quite a view,\" I said. \"Morgan, Janelle is hot and sex with her would probably be great. But, I'm not looking to just hook up with anyone.\"\n\n\"Gretchen, have you had sex with anyone since you started college? I mean besides the time with me.\"\n\n\"No. I've been relying on my trusty little fingers.\"\n\nWe both laughed.\n\n\"I figured that was the case. Look, I still have a lot of stuff to figure out. So, if you want to, you know, be with someone, I don't want to stand in your way.\"\n\nWe had arrived at our dorm. I released her hand and we went up to our room. Once inside, we took off our coats and I took her hand again. Pressing it to my lips, I gently kissed each finger.\n\n\"Morgan, I'm confused myself. Let's sit down and talk.\" We sat on her bed. \n\n\"I hope you understand that I completely support you in trying to figure out your own sexuality. I am so happy that you're my friend and that's what I want most. But, I think you also know that you turn me on. If we were to have sex again, I would be like so happy. \n\n\"All that being said, Morgan, I do want to be open to other experiences. Shit, we're in college. There will probably never be a better time to experiment and have fun. So, yeah, I might like to go to bed with Janelle. I might also like to go to bed with the guys, or at least a guy. Who knows we may each meet other people here that we'd like to have sex with. That's the thing, I want to be able to explore and see what's out there. It doesn't mean I don't love you or respect you. It means that I want to be open.\"\n\nMorgan nodded her head. Her hand rubbed the outside of my thigh. \"I think I get that, Gretchen. But, if we were like to, you know, get back together, you know, sexually, would you still want to see other people?\"\n\nI looked at her and leaned in to kiss her softly. \"Morgan, I believe you could fulfill my sexual dreams. I am not ready, though, to commit to a long-term relationship. Maybe if we were talking like this in our senior year, things could be different. This is our first year. I want to leave room for new experiences. Sorry if that hurts you.\"\n\nMorgan thought about what I said. \"No, it doesn't hurt me. I appreciate your honesty. It's just something else I have to add to my sorting out pile.\"\n\nI hugged her and said, \"Remember, Morgan, it works both ways. What if you and Zeke, or some other guy, want to take it all the way. You should feel free to do it.\"\n\nMorgan laughed as I held her. \"God, Gretchen, I can't imagine having sex with a guy right now. Do you think Zeke is expecting that?\"\n\n\"Sweetie, you are a beautiful woman and he is a guy. Yes, he is expecting, or at least hoping, that you two will end up in bed. Count on it.\"\n\n\"God, this is all too much. Maybe, I should just go into the convent.\"\n\n\"Don't know about that,\" I said. As I cupped her breast I said, \"But, I think you'd have a lot more fun out here.\"\n\nShe moaned and we kissed. Breaking away, Morgan stood up. \"I have to get some work done before the dance. Thanks for talking with me. I don't know what I'd do without you.\"\n\nI laughed and said, \"Funny, all I think about is what I can do with you.\"\n\nMorgan let out another belly laugh. \"You're so bad.\" She sat at her computer and started studying. I pulled my laptop out and plopped on my bed. I worked on an essay that was due next week.\n\nAround eight-thirty we started getting ready for the dance. We both opted for jeans and boots. I was pulling on a pale pink turtleneck, with just a cami underneath. I liked the way my nipples showed through the top.\n\nMorgan was about to put on one of her large Oxford cloth shirts. I told her to stop.\n\n\"Morgan, wear that nice yellow sweater you have.\"\n\n\"The V-neck?\"\n\nI nodded.\n\n\"What would I wear underneath?\"\n\n\"Nothing. Well, just your bra.\"\n\nMorgan's mouth dropped open. \"No way, Gretchen. I could not go out like that.\"\n\n\"Sweetie, it's time to show off the goods. You still will be fully covered. Hell, we won't even see much cleavage.\"\n\n\"I can't. I have to wear something underneath.\"\n\nI walked to her drawer and hunted around. I pulled out a white, crewneck tee shirt. I tossed it to her. \n\nSlowly, she pulled it on and tucked it into her jeans. She donned the sweater and regarded herself in the mirror. \n\n\"Gee, my breasts look so big.\"\n\nI stood behind her and slipped my hands underneath each boob. \"Morgan, your breasts look awesome. Believe me this is a great look for you.\" Our eyes met in the mirror. I smiled.\n\n\"God, the things I let you talk me into,\" she said and moved away.\n\n\"Now for some make-up,\" I said.\n\n\"I have make-up on,\" Morgan protested.\n\n\"You have a touch of blush. Take off your glasses.\"\n\nShe removed the frames. I ran my fingers through her blond hair. \"Let me fix this.\"\n\nI turned her toward the mirror and brushed her hair out. I sprayed it and formed into some style. I grabbed my make-up bag and rooted for eyeshadow. I found a blue that would accent her eyes. I applied it lightly and stepped back. The color made her eyes pop. I added some red lip liner and gloss. I capped it off with just a touch of heavier rouge. Her skin was so clear that I didn't want to cover up the natural beauty. She replaced her glasses and looked in the mirror.\n\n\"Holy cow! That doesn't even look like me.\"\n\n\"Yeah, it does. The sexy Morgan is coming out to play.\"\n\nWe arrived at the dance and met up with our friends. As we approached they all stared at Morgan. She whispered to me, \"See, they thing I'm a freak.\"\n\n\"Honey, they think you are hot. I know that look.\"\n\nAs we greeted each other, each of them complimented Morgan. Zeke could not take his eyes off her. He asked her to dance and they moved off. A girl from our art history class walked by and asked Eli if he wanted to dance. Janelle and I stood together.\n\n\"I take it you did the make-over on Morgan.\"\n\n\"Just a little touch-up,\" I said.\n\n\"I never realized she had such a nice bod. Shit, Gretchen, next to you I think she'd be the one I want to fuck the most.\"\n\nI turned to Janelle. \"She's not available.\"\n\nJanelle looked into my eyes. She nodded and asked me to dance.\n\nIt was a fast song and lots of girls were dancing with girls. We rocked through two numbers. When a slow song came on, she stepped up to me. I ran my hand down her bare arm and said I needed something to drink. Sighing Janelle followed me off the floor.\n\nWe grabbed some sodas from the table. \"You know you're driving me crazy with your tits rubbing against that top.\"\n\n\"You've seen my bare tits,\" I said.\n\n\"Yeah, but this turns me on. Let's get out of here.\"\n\n\"I don't know. We can't go to my room.\"\n\n\"Wait here. Let me find my roommate and ask her to crash somewhere else.\"\n\nShe put her drink down and disappeared into the crowd. I sipped my drink and saw Zeke and Morgan moving toward the drink table. \n\nZeke said something to her and walked off toward the restrooms. \"Having fun,\" I asked.\n\nMorgan took a big drink of soda. \"Yes. I'm having a lot of fun.\"\n\n\"Is Zeke a good dancer?\"\n\nMorgan blushed. \"Not bad.\" She looked around and leaned into me. \"When we danced slowly, I could feel him. He was hard.\"\n\n\"Can't blame him,\" I said. \"If I had a dick, it'd be hard, too.\"\n\nMorgan giggled and finished her drink and grabbed another one. \"I got turned on when it was rubbing against me.\"\n\n\"See, you are getting this whole sex thing down.\"\n\nShe giggled again. \"Ok, what if he wants to go a bit farther?\" I asked.\n\n\"Like what?\"\n\n\"Like kissing you. Feeling you up.\"\n\n\"Oh, God, Gretchen, do you think he'd want to?\"\n\n\"Jesus, Morgan. I bet every guy in this freaking field house is dreaming about feeling you up. Even Janelle thinks you are hot. Speaking of which, she sorta invited me over to her room.\"\n\n\"Oh,\" said Morgan, \"like for milk and cookies?\"\n\nWe both grinned. \"Not exactly.\"\n\n\"Gretchen, we talked about this. Go ahead. Really.\"\n\n\"Won't piss you off?\"\n\n\"Nope. You want to experiment. I think Janelle would be one heck of an experiment.\"\n\n\"Thanks. Love you. Besides, that leaves our room for you and Zeke.\"\n\nMorgan choked on her drink. Wiping her chin, she said, \"That is so not going to happen.\"\n\nTaking my hand she said, \"But I am going to go to bed naked and give myself an orgasm. What do you think of that?\"\n\nI could feel my pussy spasm. \"God, maybe I'll tell Janelle we'll have to get together another time.\"\n\n\"No way. You go your way and leave me to my own fun.\"\n\nJanelle and Zeke were walking back toward us. \"Have fun,\" Morgan said. \"You, too, sweetie,\" I answered.\n\nZeke and Morgan went back on the dance floor. \"So,\" I asked Janelle. \n\n\"Let's get the fuck out of here,\" she answered.\n\nWe practically ran across campus to her dorm. She opened the door and pulled me into her room. Pushing me against the closed door, she pressed her face to mine and her tongue jammed into my mouth. The heat of our kiss took me by surprise. I realized how much I had wanted this.\n\nHer hand cupped my breast through the light tops I was wearing. I moved my leg between hers and we started grinding our pussies together. Janelle reached down and took my shirt and pulled it and the cami up and off. She grabbed a boob and sucked my nipple hard. I hadn't had anyone be this aggressive with me and I liked it. I pushed my thigh harder into her crotch.\n\nJanelle released my boob and pulled me to her bed. She knelt and pulled off my boots and socks. Running her hands up the insides of my legs, she let her fingers push against my pussy. I lifted and pushed back. Janelle undid my belt, unzipped me and tugged my jeans past my hips and down and off my feet. Taking a knee in each hand, she spread me wide. Looking me in the eye, she slowly moved her mouth to the front of my panties. I held my breath as she approached. When her lips touched mine contained behind the damp satin, I growled. She started sucking on the fabric and alternately pushing her tongue into the crevice. \n\nI plopped back on the bed and grabbed my boobs to play with my nipples. I felt her fingers in the band of my panties and slowly they descended my legs. The next thing I sensed was warm breath on my sensitive lips. My breathing deepened and I cried out as her finger slid inside me. God, that felt good.\n\nSlowly, Janelle pumped me with her finger and I spread my legs as far as I could. She added a second finger and then her tongue went to work. She lapped at my lips and circled my clit. With her other hand, she pushed back my hood and her lips captured the hard bud. As she flicked her tongue back and forth, I could hold back no longer and came. She kept pumping and licking through my extended orgasm.",
        "I lay exhausted on the bed, gasping for breath. Janelle crawled up and pressed her mouth to mine. I greedily cleaned her of my juice and sucked her tongue inside. She rolled off and I melted into her arms.\n\n\"Good?\" she asked.\n\n\"More than good,\" I answered. \"Mind-blowing.\"\n\n\"And, we've just started,\" she said with a chuckle.\n\nI kissed her and we made out for a long time, exploring each other's faces, necks, ears and lips. \n\n\"Strip for me,\" I said.\n\nJanelle stood and pulled off her sweater. She wore a black tee shirt and I could see her small breasts pushing against the fabric. Inch by agonizing inch she raised her shirt until her breasts appeared. Her nipples, darkened by her arousal, stood out. She bent to unzip her boots and her breasts hung down, seemingly begging to be sucked.\n\nStanding she undid her pants and pushed them past her knees. Working each leg free she stood before me in black panties. \"What do you want, Gretchen?\"\n\n\"Take them off.\"\n\n\"Why?\"\n\nI wasn't sure what she was asking me.\n\n\"What do you want to do to me?\"\n\nI looked at her mostly naked body. \"I want to eat you, Janelle. I want to eat you so badly.\"\n\nShe rolled her panties off. I was shocked that the narrow strip I had observed in my room was gone. Her bare lips glistened in the dim light of her room. I focused on the small, tight lips that moved seductively as Janelle climbed on the bed. With her knees on either side of me, she worked her way up until her pussy was right over my face.\n\n\"Tell me again, Gretchen.\"\n\n\"I want to eat your cunt.\"\n\nSlowly she lowered herself until my tongue could reach out and taste her. She was so wet, my chin and face quickly became covered with her essence as she rocked back and forth. I felt I was drunk and wanted more and more. I lapped and plunged with my tongue. Janelle made little cooing sounds. I reached around and grabbed her smooth butt and pulled her down hard on my face. I rammed my tongue deep into her pussy. She cried out and leaned back to rest her weight on her outstretched arms. Her movement moved her pussy to my face. I licked up her slit and attached her clit. She was now thrusting harder and harder. \n\nI took hold of her hips to steady her. I moved her clit hood aside with my tongue and captured the bud with my lips. I sucked and flicked. I could feel Janelle reaching her crest. As I felt the first tremor moving through her, I bit down slightly with my teeth. She screamed and crushed my head with her knees. I released her and she fell backwards on the bed. Rolling on her side, she curled up into a ball. I molded my body around hers and held her.\n\nWe remained like that until both our bodies could relax. Janelle turned and moved into my arms. \"I thought I was supposed to blow your mind,\" she said as she stroked my cheek.\n\n\"You did.\"\n\n\"Gretchen, I have never cum that hard. Never.\"\n\n\"Then, I'm happy.\"\n\nWe kissed. \"The best thing is,\" she said, \"the night is young.\"\n\nThat night we tried every combination of positions we could conjure up. Finally, after what I thing was my fifth orgasm, I begged for mercy. We snuggled and finally went to sleep. I peeked at the clock to see it was almost three am.\n\nMy phone was buzzing somewhere. I opened my eyes to an unfamiliar scene. Remembering I was in Janelle's room I got up and dug my phone out my jeans pocket.\n\n\"Morning, sunshine,\" said Morgan.\n\n\"God, what are you doing calling me this early?\"\n\n\"Gretchen, it's noon.\" \n\nI squinted toward the window and could detect bright sunshine outside. \"Anyway, it feels early. What's up?\"\n\n\"There's a girl here said you guys were supposed to meet today.\"\n\n\"Huh? Who?\"\n\n\"Jenny. Something about the art class.\"\n\n\"Shit. Ok, tell her I'll be there in ten minutes.\"\n\nI hung up and started pulling on clothes. I knew I did not have time for a shower, but hoped I could at least rinse my face to clean off the smell of sex. I woke Janelle and told her I had to run. She spread her legs and I hesitated for a second. I knew if I gave in I would never make it out of there.\n\n\"Sorry, babe. I really have to go. Catch you later.\"\n\n\"One kiss, please.\"\n\nI leaned down and kissed her. As her tongue snaked into my mouth, her hand played with my boob. \n\n\"God, you are driving me crazy. But, I have to go. Thanks for an unbelievable night.\"\n\nShe pouted, then smiled and waved good bye. I stopped in her bathroom to pee and wash my face. I had a brush in my purse and tried to make sense of my hair. I still looked like I was recently fucked and figured this was the best I could do.\n\nI jogged across campus and made it to my room in fifteen minutes. Jenny was sitting in the chair at my desk. Morgan was working on her computer, dressed in her big blue shirt and jeans. They both turned as I entered.\n\n\"Hi, sorry.\"\n\nJenny stood and Morgan arched her eyebrow. \n\n\"So, Jenny you still up for the class?\" I tried to sound cheerful, although my head was still recalling scenes from last night.\n\n\"I guess. I want to talk about what we'll do and stuff.\"\n\n\"Let's go over to the Commons and get some coffee or something. Wanna come, Morgan?\"\n\n\"Nah. I need to get some things done. See you later.\"\n\nWe sat at a table with our coffees. I also had a bowl of granola with almond milk.\n\n\"So, I texted Professor Adams and he said he'd be all for you joining us for a session. He said he didn't have a budget for two models for the rest of the semester, but that you could come for the next class. He'd pay you and then we could see after that. So, what do you want to know?\"\n\n\"Well, I don't know. I guess since I've never done anything like this, I feel like, I don't know, nervous.\"\n\n\"I get that. How about we start at the beginning. Let's just talk and you can ask any question. Don't worry if it sounds lame, I won't mind. This is my first time posing nude, too.\"\n\n\"Thanks. That's great,\" Jenny said. \"So, well, like are we totally nude?\"\n\n\"Yeah. Totally. Let's see, first we get undressed behind a screen. There's a robe you can wear out into the studio, but I don't bother. But, you can use it on Thursday. Then Jacob asks for different poses. We would try to do what he asks. After a while he changes things around. We get a break in the middle. It helps because holding a pose for a long time can get you all kinked up. That's about it.\"\n\nJenny nodded and played with her mug as I spoke. When I finished speaking, she thought for a minute.\n\n\"So, like what kinda poses?\"\n\n\"All kinds,\" I explained. \"Standing, sitting, lying on a couch.\"\n\n\"Nothing too sexual, is it?\"\n\nI figured I better be straight with her. I did not want her to freak out during the class. \"I would not call it sexual. But sometimes I have to sit with my legs apart. I mean the students get to see pretty much everything, but that's the point of a life drawing class.\"\n\n\"Does that bother you? Having people look at your pussy?\"\n\n\"Not really. The first time it actually sorta turned me on. There were a couple guys I knew and there I was with my legs wide open. They were drawing my sex. Now, it's just part of the deal.\"\n\nJenny was nodding as I spoke.\n\n\"Think you can do that?\"\n\n\"God, I don't know.\"\n\n\"Jenny, have you ever been naked with other people, like skinny dipping, strip poker or something?\"\n\n\"I went skinny dipping with some of my girlfriends once. I guess that counts.\"\n\n\"Has a guy ever seen you naked?\" I asked.\n\nJenny blushed. \"I haven't dated all that much. So, I guess I'd have to say no guy has ever seen me completely without clothes. A couple guys have seen my boobs and one guy sorta got a look at my puss.\"\n\n\"Jenny, why do you think you want to do this?\n\nShe sighed and looked out the window. \"When you were talking about it, I guess it sounded exciting, like an adventure. I wanted to sound cool when I said I could do it. Then the other girls sorta dared me. I was too chicken to back down at that point.\n\n\"I'm a senior and I can say I've never done anything remotely exciting. I'm a good student, played some intermural sports, and hung around with my friends. I thought this would be different.\"\n\n\"It is different. Let me be a little frank, ok?\"\n\nShe nodded.\n\n\"Did you get excited, I mean sexually excited, thinking about posing naked?\"\n\nShe blushed again. Taking a deep breath, she said. \"Yeah, I did. Is that like sick or something?\"\n\nLaughing I said, \"God, no. I still get turned on. I come back to my room and can't wait to get off. It's a rush. Of course, I think I'm an exhibitionist.\"\n\nJenny looked shocked.\n\n\"Uh-oh,\" I said. \"Too much info?\"\n\n\"No. It's kinda cool that you can talk about stuff like that.\"\n\n\"Jenny, let me suggest something. You make think it's crazy, but I'm pretty sure it would help. There are friends of mine in the class. How about I invite them to my room and you could try it out.\"\n\n\"Be naked in front of your friends?\"\n\n\"Yeah and my roommate, if she stays.\"\n\n\"God, I don't know.\"\n\n\"Jenny, my friends are going to be in the class. If you do it, they're going to see you. I say get it over now and you can maybe relax in the class.\"\n\n\"Would we like have to strip in front of them? That would be really too much.\"\n\n\"No, we could down to the bathroom and undress. We'd wear robes back to my room. Then we'd get rid of the robes and let the guys make some sketches of us. I'll be naked with you and that might help.\"\n\n\"I guess that might work. When would we do it?\"\n\n\"How about I call them now? If they can come over we can do it this afternoon.\"\n\n\"Today?\"\n\n\"Why wait. Look, if you feel too uncomfortable, then you can back out now. No one will ever know. You can tell your friends that it didn't work out with the class schedule or there wasn't enough money or something. Otherwise, I'm afraid you're going to freeze up in class and that will be bad.\"\n\n\"Ok. Let's do it. God, I can't believe I just agreed.\"\n\n\"Great,\" I said. \"It will be fun.\"\n\n\"I think you and I define fun differently.\"\n\n\"After this afternoon, maybe you'll change your mind.\" I thought that once again I was using nudity to have some control over another person. By offering to show her my body, I was making her agree to show hers to strangers.\n\nI got in touch with the guys and, surprise, surprise, they agreed to come over. I reminded them to bring their sketch pads and this wasn't just a show.\n\n\"Doesn't mean we won't enjoy it,\" said Eli.\n\nI couldn't reach Janelle. I asked Morgan if she would stay. Of course she blushed, but then shocked me and agreed.\n\nAfter the guys arrived and introductions were made, Jenny and I headed to the bathroom. Her hands were shaking as we stood next to the sinks. I put my arm around her. She was stiff.\n\n\"Jenny, we can do this. I'll be with you. The guys are really cool. After a few minutes you'll be fine. And, if you get too nervous, just say stop and put your robe on. No shame in that.\"\n\nShe smiled at my lame pun. \"Thanks, Gretchen. Let's do it.\"\n\nShe pulled her shirt over her head revealing a tan bra. Underneath her jeans she wore matching panties. I quickly stripped and stood in front of her, hoping she'd take some courage from my nudity.\n\nTaking a deep breath, Jenny unhooked her bra and dropped it on top of her jeans. She bent and pushed her panties off. With her eyes closed she stood ramrod straight. Her breasts were small and firm. Her nipples appeared stiff. She had a neat red bush that I thought looked lush. Her butt was kinda flat, but tight.\n\n\"Let's get our robes on and go have some fun.\"\n\nJenny was laughing at the fact she was really doing this. Carrying our clothes we were back in the room in two minutes. Zeke and Eli were sitting on my bed and Morgan perched on my desk chair. There wasn't a lot of room between the two beds, so I suggested that Jenny and I start our session by kneeling up on Morgan's bed.\n\nThe guys had their pads on their knees. I undid my robe and tossed it to the floor. Jenny looked at me and I nodded. Slowly she uncinched her robe and let it fall from her shoulders. I could hear Morgan take in a breath as her long, lean and beautiful body became exposed.\n\nI moved close to her and snaked my arm around her waist and pulled until our hips met. Jenny reciprocated and slid her arm around me. I thought I might give her some courage by holding each other. I placed my other hand on my hip. I told Jenny to rest her free hand on the top of her thigh. The guys were already drawing. Morgan stared at us. Her legs were crossed and her face was red.\n\nAfter ten minutes I called for a break. I had Jenny lay on the bed facing the others. She rested her head on her arm and I positioned her other hand to lightly cup her left breast. I leaned in the other direction with my head down toward her feet. I also propped my head on my arm and I rested my hand on her thigh.\n\nWe held that for another ten minutes. I next suggested that Jenny pose alone. Sitting facing the guys, she moved herself into a lotus position and rested her hands on her knees. Zeke and Eli stared at her and then began sketching. I sat on Morgan's knee and she patted my back. I leaned back and whispered, \"God, she is beautiful.\"\n\n\"Oh, yeah,\" said Morgan and moved her hand to my butt and gave it a light pinch.\n\n\"Turned on?\" I whispered again.\n\n\"Maybe!\" she said and pinched me again.\n\nI told the guys we'd do one more pose and asked what they wanted. Eli grinned and said we should pose like a famous picture that hung in the Louvre. He called it Gabrielle d'Estr\u00e9es and one of her sisters. When he described it, I knew I had seen it in our art history class. It is a painting of two naked women and one of them is pinching the nipple of the other. The story is that one sister is indicating that her sister is pregnant by Henry IV of France. \n\nI gave Eli a death stare, but he just grinned. Figuring what the hell, I asked Jenny to sit near me on the edge of the bed. We each pulled our hair up into a bun on top. \"Ready?\" I asked her. She nodded.\n\nI reached out and pinched her nipple. Jenny gasped and closed her eyes. I eased the pressure and she opened her eyes. I smiled and she returned the gesture. My own nipples hardened at the erotic nature of our pose. I could see that Jenny's other nipple was also erect. After ten minutes of alternating hard and soft pinches of her nipple, I called time. I was wet and I suspected she was, too. \n\nJenny took a deep breath and then hugged me. Our breasts rubbed together. The guys clapped.\n\nI grabbed our robes and tossed Jenny's to her. \"Ok, jerks, show's over. You can run along and do what guys do after looking at a roomful of hot, naked girls.\"\n\nZeke shot a glance at Morgan and said, \"Not every girl was naked.\"\n\nMorgan turned scarlet. \"Well, if you're not satisfied with Jenny and me, maybe I should tell Professor Adams that we won't be posing any more.\"\n\n\"No, don't do that. This was great. Thanks.\"\n\nThe guys gathered their stuff and left.\n\nMorgan grabbed some waters and tossed us each a bottle. \"We're only freshmen, this is the best we can do,\" I said.\n\n\"No problem. I'm really hot and thirsty.\"\n\n\"Hot, like in...\" I said with a smile.\n\nJenny grinned. \"You might say that.\"\n\n\"It's a rush. Isn't it?\" I asked.\n\n\"After I knew I wasn't going to pass out, puke or pee the bed, it was sorta neat.\"\n\n\"Did you notice the guys were hard?\" I said sneaking a look at Morgan.\n\n\"Hard to miss that,\" Jenny said.\n\n\"That turns me on even more,\" I told her. \"Also, pinching your nipple was very hot.\"\n\nJenny sighed and nodded.\n\n\"As a matter of fact, I'd like to relieve some of that sexual tension.\"\n\n\"Now?\" she asked.\n\n\"Right now,\" I said and stared at her.\n\n\"Do you want me to leave?\" she asked, but there was something in her voice that told me she wanted to stay.\n\n\"On the contrary, Jenny, I would very much like you to not leave.\"\n\n\"I've never done that, you know, with someone else.\"\n\n\"It's fun,\" I said.\n\nShe looked at Morgan expressing an unasked question.\n\n\"Morgan, would you like to join in?\" I asked.\n\nMorgan looked back and forth to Jenny and me. Slowly, she nodded her head. My heart skipped many beats.\n\n\"How do we do this,\" asked Jenny. Her color had increased and I could see she was sweating a bit.\n\n\"How about you get on my bed and Morgan and I will be on hers?\"\n\nJenny moved across to sit on my bed. \"Under the covers?\" she said.\n\n\"Uh-uh,\" I answered.\n\nI put my hand out to Morgan. She slowly moved over to sit next to me.\n\nI undid my robe and pulled it off. \"I like being naked.\"\n\nJenny loosened her robe, but left it on. I leaned into Morgan. \"At least take your jeans off.\"\n\nShe was silent for a long time and took deep breaths. Finally, she unsnapped her pants, eased the zipper down and pushed her jeans off. I smiled seeing the full panties she always wore. I made a mental note to take her lingerie shopping soon.\n\n\"How about your top?\" I asked. Morgan shook her head. She had reached her limit.\n\nI pulled my legs up and let my knees fall open. Jenny stared at my pussy as I slowly began to rub myself. She smiled and let her legs come apart. I could see her swollen pink lips poking through the red curls. He clit looked ready to burst open. Her nipples hardened as she rubbed her pussy. One hand played with her right breast while the other got busy between her legs.\n\n\"This is so strange,\" she said watching as I slid one finger between my lips and wet it.\n\n\"Bad strange?\" I asked marveling at her white thighs, wet with moisture.\n\nJenny slipped a finger inside herself. \"Uh,\" she said experiencing the pleasure. \"No, very, very good strange.\"\n\nMorgan was gently moving her hand on top of her panties. I pulled my hand from my breast and lifted the band of her underwear. I could see the mass of blond hair. I held the band open until Morgan slipped her hand inside. She gasped as her fingers found the target. I watched her finger gliding up and down in her cleft. I let the band go back into place and returned my hand to my own pleasure.\n\nI progressed to the point where two fingers were moving in and out. Jenny was doing the same. The smell of sex filled the room along with the squishy sounds that accompanied our actions. Jenny could not pull her eyes from my crotch. She licked her lips as our mutual pleasure mounted.\n\nI was closer than I thought and when my third finger entered and my thumb hit my clit, I cried out and came. I lifted my butt off the bed to help drive my fingers deep inside. Pulling my hand from my tit, I flicked my clit to intensify the orgasm. Finally coming down I noticed Morgan and Jenny looking at me.\n\n\"Well, it was awesome,\" I said. \n\nJenny seemed to be having a problem. \"Can I help?\"\n\nShe nodded. I climbed over and put my arm around her. She worked her both hands between her legs. I had seen how she was pulling hard on her nipple before and took one breast in my free hand. I fondled it and she moaned. As two fingers stroked in and out and her other hand rubbed her clit, I pinched her nipple hard. She screamed. I released it and watched until her fingers were buried fully in her vagina. I pinched her nipple again. This time it was as hard as I could make it.\n\nJenny cried out and started shaking. She squeezed her thighs closed, trapping her fingers in place. I released her nipple and bent down to pull the hard point between my lips. I sucked hard and pushed my tongue against it. Jenny cried again and a second orgasm wracked her. I felt her body go limp. I pulled her into my arms and cradled her, feeling the after-tremors move through her long body. \n\nLooking over at Morgan, I saw her smile. Her hands were out of her panties and were cupping her breasts. I mouthed, \"Did you come?\" She shook her head. I smiled and mouthed, \"Later.\" She smiled and nodded.\n\nJenny was breathing regularly and her legs relaxed and fell open.\n\n\"See, there are rewards to posing naked,\" I said and squeezed her.",
        "\"Thanks, Gretchen. I was at the edge but couldn't make it over. As I said, I never did this with anyone watching and I think I was nervous.\"\n\n\"Sorry, if I crossed the line.\"\n\n\"No. I think I needed it. The truth is, no girl has ever touched my like that, but it did the trick.\"\n\n\"Don't think about it. We were just two girls helping each other out.\"\n\nJenny pulled her robe over her and sank until her head was in my lap. She closed her eyes and I sensed she fell asleep.\n\n\"Can I have my robe, Morgan. I'm a little chilly.\"\n\nMorgan brought my robe and draped it over me. \"Gonna let her sleep?\"\n\n\"For a little bit,\" I said. \"Ok, with you?\"\n\n\"Can I sit next to you, too?\"\n\nI lifted my arm and Morgan cuddled into me. Kissing the top of her head, I told her how proud I was of her.\n\n\"But I didn't come,\" she said.\n\n\"Not the point,\" I said. \"That was such a big step for you. And, having you next to me made it like ten times more enjoyable for me.\"\n\n\"I thought it was looking at Jenny's fantastic body that did it.\"\n\n\"Morgan, no doubt she is pretty. You are beautiful.\"\n\nMorgan turned her head up. We kissed and a felt a renewed heat between my legs. The three of us remained entangled until Jenny stirred about a half hour later.\n\n\"God, I think I fell asleep.\"\n\n\"More like passed out,\" I said and laughed.\n\n\"Guys, that was the best orgasm I ever had\u2014ever. I didn't know things like that existed. Thank you both so much.\"\n\nJenny said she had to leave. She got up and facing away from us stripped off her robe. Her small, flat butt looked adorable and I had visions of feasting on it. Morgan nudged me and grinned. I think we both were enjoying the view. After Jenny dressed, she turned and faced us. She had a tentative look on her face.\n\n\"Jenny, don't be embarrassed. This was fun. I think once in a while doing something like this just makes sex so much more interesting. And, we don't need to discuss it outside of the three of us.\"\n\nJenny looked relieved. \"Thanks. I mean I never, well, I told you all that. I liked it, both the posing and, you know, afterwards. You guys are cool.\"\n\nMorgan stood and Jenny hugged her. I put my robe on and she hugged me. She said into my ear, \"Would it be too weird if I gave you a kiss?'\n\nI smiled and pulled her face to mine. We kissed. Jenny grinned. \"Wow, this is an afternoon I won't forget. Lots of firsts today. Thanks, again. See you on Thursday, Gretchen. Bye, Morgan.\"\n\nAs the door closed, Morgan looked at me. \"You are amazing.\"\n\n\"How so?\"\n\n\"All these guys and girls like lusting after you. You just take it in stride.\"\n\n\"Morgan, like I said before, we're all just going along and figuring things out as we go.\"\n\nMorgan still was dressed in just panties below her waist. \"I think we have some unfinished business.\" I let my eyes fall to her crotch.\n\n\"Really?\" she said with a wide grin.\n\n\"Oh, yeah. I say let's get naked.\"\n\nMorgan laughed. \"Why did I think you might say that?\"\n\n\"Can I undress you?\"\n\nMorgan nodded.\n\nI unbuttoned her shirt and let it fall. Her large breasts were heaving as I reached behind her. Undoing the several clasps I pulled her bra free. I cupped her breasts and lifted them. Bending over I gently kissed each nipple. Morgan sighed.\n\nI knelt and eased off her panties. I could smell her arousal and my nostrils flared. I wanted to bury my face in that lush garden, but stilled my desire. Holding her hand, I led Morgan to her bed and pulled down the covers.\n\n\"You know it's still daylight out,\" I said.\n\n\"Shut up,\" she said and giggled.\n\nDropping my robe we eased into bed.\n\n\"Morgan, are you sure?\"\n\n\"Nope, but I've been thinking about this since yesterday. I've come to a decision to at least try to let myself enjoy what my body is telling me it wants. I can't say that I have resolved all my questions, but, Gretchen, I want you so badly. Please, make love to me again.\"\n\nI rolled on top of her and we kissed. As our mouths explored each other's faces, ears and necks, I moved my groin against hers. Morgan spread her legs and I could now push my pussy hard against hers.\n\n\"Oh, oh,\" she moaned. \"That feels so good.\" We kept kissing as I slipped a hand on one of her breasts. I still couldn't believe how big it was. Morgan said that my touch felt good. I took that as a cue to slide down and start kissing her breasts. I sucked her nipple, using my tongue to make it hard. I could only fit a small part in my mouth, but I enjoyed having her nipple under my control. Morgan started pushing her crotch up to meet my stomach. Alternating between each breast, I spent a long time indulging myself.\n\n\"Morgan, I'm going to go down on you now. I want to see you as I do this, so let's pull these covers off.\"\n\nShe didn't resist as I pushed the sheet, blanket and comforter off the bottom of the bed. I angled her so that I could kneel on the floor and have full access to her sex. Morgan spread her legs wide. Kissing my way from knee to the top of her thigh, Morgan let out a series of gasps. I ignored her pussy and then repeated my kissing on her other thigh.\n\nMorgan was playing with her nipples as I placed my hand on her pussy. She grunted and pushed back against my palm. I made slow, soft circles to let her get used to my touch. Her hips responded and there was much moisture on my hand. I ran my finger down her cleft and Morgan said, \"Yes.\"\n\nSoftly, I rubbed up and down, avoiding her clit. The wet spot under her was spreading as she leaked steadily. I could not hold back for one more second and moved my tongue to her blood-thick lips and licked.\n\n\"Oh, my god,\" Morgan cried out. \n\nI abandoned my gentle approach and began to aggressively lick her. I also nibbled at her outer lips and finally slipped a finger inside. Morgan made a sound of encouragement and I began pumping in and out.\n\n\"So good, so good,\" she said.\n\nI licked from where my finger entered her up to her clit. This time my tongue circled the hard button. From her reactions, I knew this was reaching deep into her core. I used my free hand to slide the thick hood away and licked directly onto her clit. One of my fingers inside her vagina found the rough bundle of nerves that would help drive her over the top.\n\n\"Jesus, Mary and Joseph,\" she cried.\n\nThe end was coming quickly. I sucked her clit between my lips and attacked the trapped organ with my tongue, lapping at it as fast as I could. At the same time I inserted a second finger and pounded her. Morgan was making sounds and her body was rocking back and forth. Remembering how she squirted the last time, I prepared to receive my treat. I moved my mouth to her opening and withdrew my fingers. I spread her lips and jammed my tongue in as deep as it would go.\n\n\"No,\" shouted Morgan. Then she screamed, \"Yes.\"\n\nHer body trembled and a rush of liquid filled my mouth. It was thick and strong. It was also the sweetest thing I ever tasted. I drank and lapped and lapped and drank. Morgan was pushing my head against her groin and I thought I might suffocate. With one last thrust of my tongue into her vagina, Morgan climaxed again and now pulled my head away. Not wanting to leave the fountain of pleasure, I reluctantly relented and let her guide me from her pussy. I crawled up and pulled her to me. Her head rested on my chest. I felt her tears running down and wetting my nipple. \n\nShe held me tightly and there were several spasms as her body tried to return to normal. She turned her head up to kiss me.\n\n\"I'm covered with you,\" I said.\n\n\"I don't care, kiss me, Gretchen. I love you.\"\n\nI kissed her. As our lips met, Morgan's eyes opened in surprise.\n\n\"That's what I taste like?\"\n\n\"Oh, baby, you taste better than anything else in this world.\"\n\nShe tentatively licked my lips and chin. \"Not disgusting?\"\n\n\"Baby, your taste is so far from disgusting that's in a different universe. I could never imagine getting tired of this.\"\n\nWe kissed some more, letting our tongues explore and tease each other.\n\n\"Gretchen, I want to do something for you, but I'm so tired.\"\n\n\"Morgan, I would love you to fall asleep in my arms. We have so much time ahead of us. Right now, I am the happiest person on earth.\"\n\n\"Bullshit,\" she said, shocking me with the slight vulgarity. \"I am the happiest person ever to live. This is going to be a good year, isn't it?\"\n\n\"Morgan, this will be the best year of our lives. I know you have so much to experience. Not just with me, but with Zeke and other people.\"\n\n\"But, I'm not sure I want other people,\" said Morgan.\n\n\"Well, just try to remain open. Now, go to sleep, darling. When you wake, there are a couple things I'd like to teach you.\" Morgan nodded. I pulled the covers back over us. I was not just talking to Morgan, I was talking to myself. In the course of a day I had three sexual experiences with different women. I wondered if I was in charge of my sexual power or was it in control of me.\n\nAs I felt Morgan doze off, I reflected on how we ended up naked in bed. When I first met Morgan I was turned on by the power my exhibitionism had to make her start to come out of her shell. Over the last couple months, I've explored that power with her and others. I've learned that having control is one thing. By just being herself, Morgan now had some power over me. Giving into love might mean giving up some control. As I wrapped my arms around this beautiful woman, I think I learned that this loss of total control is a precious prize. Feeling contentment I didn't think I would ever feel, we slept in each other's arms.\n\n\n\n\n\n(Although Morgan and Gretchen are only partway through their first semester of college and just embarking on their exploration of their feelings for each other, we will be taking a break for a bit. I think you can imagine some of the fun they will have. Who knows, maybe we can check back in with them later. Gretchen is still developing her sense of control and how to use her Girl Power. I think it might be interesting to see her as a woman and how that power works in her life after college. If you have ideas or comments, let me know.)"
    ],
    "authorname": "AltheaRose",
    "tags": [
        "masturbation",
        "oral sex",
        "nude modeling",
        "girl-on-girl",
        "group masturbation",
        "roommates",
        "college"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/girl-power-ch-03"
}