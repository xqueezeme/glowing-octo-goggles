{
    "title": "Little Packages Ch. 07",
    "pages": [
        "(Early August)\n\nBen/Daddy\n\nI woke up and through the fuzz of coming back to consciousness one thought broke the haze ahead of the rest.\n\n\"You're 49 now.\"\n\nThere was only one reaction to that realization.\n\n\"Well, fuck,\" I muttered to myself.\n\nI sighed and had the quick, dark thought about Beth, who didn't get to make it this far, so suck it up.\n\nThat's when I noticed Kitten wasn't in bed with me. This was unusual. On our days off I was always up first. I took care of breakfast and, if she slept in too late, I'd go in and slap her ass to wake her. I tried shaking her awake, but she told me she prefers the other method. Who am I to say no to my little girl?\n\nThis meant she was up early and scheming. Ever since she came back from the con in the States last weekend, she's been planning something for today and this weekend. I had spoiled her plenty over the last year - Christmas, her birthday, and Disney - so she was determined to do something mindblowing for me.\n\nIt wasn't necessary. I tried to explain that my birthday was never a big deal, but I got the crossed-arm, 'don't mess with me' look, so I dropped that line of defence. She wanted to do something for my birthday, so let her plan and scheme.\n\nI could use the boost. I'd cut a fine line with Kitten the previous weekend. I worked hard to be honest with her, but sometimes some things got...excluded. We talked about Beth a lot over the last year. Sometimes I think too much, but she's insisted on it. She wanted to know who \"shaped\" me and she believed it helped me.\n\nShe wasn't wrong. It did help. And I'm glad her heart was so big that she was able to do that.\n\nBut she missed details sometimes. Why wouldn't she? She wanted to know what she was like, how we met, and how I changed after I met her. She never thought to ask things like \"When was her birthday?\" and \"When did you get married?\"\n\nThe answer to both being \"Why, last weekend.\"\n\nWhen Beth and I got engaged, we decided to get married on one of our birthdays. That way we'd always remember when the anniversary would take place. And because our birthdays were so close together, it would be a week of festivities during the summer. Her birthday was on a Saturday in the year we wanted to get married. Mine was Thursday. She won.\n\nI'd been dreading that weekend when I got the small miracle of Kitten doing that con. I didn't have to explain to her why I was off. I didn't have her hovering over me being sympathetic and supportive. I appreciated her wanting to help, but it's not what I needed that weekend. She'd done so much for me already.\n\nSo I went to Toronto and Meg and I hung out. And it was good. There was some crying. We didn't even drink that much. Well, I didn't, and she stopped after one, realizing getting shitfaced by herself was going to suck. But we walked a lot and talked a lot and it was good. I felt much better and Meg was better too.\n\nA year ago that weekend had been a mess. This year it was cathartic. I was glad I was back home with my Kitten and able to relax and enjoy whatever mad scheme she had planned for today.\n\nI hauled myself out of bed, grabbed my cane, and walked over to the mirror. I was 49 years old, damn it, let's do a quick assessment.\n\nI looked at the naked man in the mirror. It's not often you get better over time, but I honestly think I looked better than a year ago. A year ago I had more weight on, my eyes looked dull, and my hair and beard were a mess. There was little life there. I'd only just begun to crawl out of the hole from the accident.\n\nBut now...now I looked pretty ok for a guy just short of 50. There was a dad bod going on. It's not like I had a six-pack or anything. But my weight was under control, there was a decent amount of upper body strength going on and even my physiotherapist admitted that my knee was in its best shape since the accident. I was always going to have a limp, but if I took it easy, and wore a brace, I could go a short amount of time without the cane. \n\nBut I liked my face. My hair and beard were well-groomed. There was life back in my eyes. I could see smile lines on my face. The grey was proceeding at a steady pace instead of the warp speed of previous years. My knee was a mess, but it was never going to be pretty to look at. But I could look at the scars on my body and not be traumatized. I was older but happier. Progress.\n\nI put on a pair of shorts. I wasn't quite the same level of exhibitionist that my Kitten was becoming, although I might be by the end of the day. I began walking towards the kitchen, my cane tapping out so she could hear I was coming.\n\n\"Do not come in here,\" a voice called out from the kitchen. \n\nOh God, she was trying to cook.\n\nI had spent a chunk of the last three months trying to show her how to cook. I probably started too ambitiously, but I scaled back my efforts. Very basic things she could now handle. She could make spaghetti. I was reasonably confident she could be trusted to put French fries in the oven and remember to take them out. We'd tried pancakes and spent longer cleaning the kitchen after that disaster then we did eating them. She could make a surprisingly half-decent omelette, 50% of the time.\n\nMy Kitten had many, many redemptive qualities, but it was clear that cooking was going to be a lengthy work in progress.\n\n\"Are you sure you don't need a hand, princess? I'm happy to help,\" I called out.\n\nThere was a banging noise and the sound of something landing on the floor. I was also pretty sure I heard \"Fuck.\" Along with \"I can fix this.\"\n\n\"Kitten?\" I said, taking a step towards the kitchen.\n\nAn arm with a frying pan came into view. The rest remained hidden.\n\n\"If you come in here, I will tell you all about the amazing birthday you had when you regain consciousness tomorrow,\" she said in a voice that was no doubt meant to sound threatening.\n\n\"Ok, ok,\" I said, trying not to laugh. \"Where do you want me?\"\n\n\"Front deck is fine. I'll be out...shortly,\" she said in a less than confident voice.\n\nI made my way out to the front deck, wondering what disaster was happening in there and decided one of my birthday perks was going to be not thinking about it unless I heard the smoke detector go off. \n\nI sat down, took in the view, and smiled. It was going to be a hot day, so I was perfectly happy to spend all day in the cool of the house, but whatever my little girl had planned, I would go along with it.\n\nI was a slacker Daddy. Part of the agreement of her coming to live with me was that she would have chores, just like any little girl would. Except she had me wrapped around her little finger. So she would often come home at the end of the day with Michelle and Ahmed and I would get the usual song and dance.\n\n\"I'm really tired, Daddy,\" she'd say. \"Can I do it later?\"\n\nThat often led to her holding up her feet and asking for a foot rub. Which often then led to her magically finding enough energy to bounce enthusiastically up and down on my cock while having multiple orgasms. \n\nI was being manipulated and didn't care. It was going to suck having her go back to school in a few weeks. I loved having her here.\n\nI was still enjoying the view and the warmth when I heard clicking coming down the hall. Was she wearing heels? And then I heard her voice call out.\n\n\"Ok, Daddy. Close your eyes and I'll come out and serve you,\" she said.\n\nSomehow, I thought the double-entendre on \"serve\" was deliberate. I held my hands up and made a very deliberate motion of covering my eyes. I could hear her giggle and then there was more clicking. She was definitely wearing heels. I then heard a tray being placed down in front of me. I was mentally preparing my \"it looks delicious\" face.\n\n\"Open your eyes, Daddy,\" she said in her little girl voice.\n\nI opened my eyes and concerns about the food immediately vanished. Mainly because I was too busy looking at her. I've watched a lot of anime with her over the last few months. Her efforts to get me to like anime were similar to my efforts to get her to like cooking - it wasn't working, but we were each trying. A lot of that anime featured a Neko maid. It's a thing in anime, and Kitten loved them.\n\nNow I had one of my own.\n\nShe was trying to be all shy and demure, but I could tell she was dying to start grinning.\n\nIt was a maid's outfit, but with an anime twist. So it was short and ruffled out so much that it was only a couple of inches below her pussy. It was black and white, and the apron had a little cat paw on it. The black top had a cut out of a kitty head. Around her neck was a black collar with a little bell on it. On top of her long strawberry blonde hair were a set of black and white cat ears. There were fingerless white lace gloves on her hands and legs that had white stockings that came up just past her knees. She was also on top of four-inch heels, making it a minor miracle she'd been able to get out here to serve me. It made her taller, but I still had a good eight inches on her.\n\nThere was also a tail was coming down from underneath her skirt. There was no chance it was attached to panties.\n\n\"Wow, Kitten,\" I said. \"You look amazing.\"\n\nShe beamed and then did a twirl...slowly because she wasn't always the best in heels. Then, just to confirm things she bent over, showing that she wasn't wearing panties and the tail was exactly where I thought it was.\n\n\"Do you like, Daddy?\" she asked.\n\n\"You're beautiful,\" I managed to get out.\n\nShe giggled. \"No Daddy. Do you like the breakfast Kitten made for you?\"\n\nOk, there was a bit to process there. She was referring to herself in the third person. So this was going to be an unusual day. But she was right, I hadn't looked at breakfast yet. I glanced down and was...kinda surprised.\n\nThe vegetarian omelette looked good. She had some toast which was burnt, but I liked my toast burnt, so whether by accident or design she did well. There was an orange on the side of the plate and a cup of coffee and a glass of water. There was also... something that might have once been bacon before it was left next to a nuclear explosion. I was astonished the smoke detector hadn't run into the bedroom to wake me up and warn me what she was doing to innocent pork products.\n\nThere was also a little blue pill. I picked it up between my fingers and gave her a look. Her shoes suddenly became very interesting to her.\n\nEarly in our relationship, when it became clear that this was going to be more than just a comic con fling, I worried about whether or not I was going to be able to keep up with her. My Kitten has a healthy sex drive. I didn't want to disappoint her.\n\nThere were also psychological concerns. I'd been depressed and my sex drive had been non-existent for two years. So yeah, I was worried about getting hard. I'd been rock hard that night at the comic con, but was that a one-off burst of pent-up energy or a change in the wind?\n\nSo I got a prescription and got some pills. It was an \"In Case of Emergency, Crack Open Packet\" sort of thing. But it turns out I didn't need them. Kitten was so amazing to be around my energy levels went up and my sex drive went into overdrive. So I didn't need them. I tossed them in the bottom of a drawer and forgot about them.\n\nExcept here was a pill. So unless Kitten's power of persuasion included being able to woo pharmacists, she'd been rooting through my clothing drawers. I should be mad, but this wasn't the time.\n\n\"Have you been going through your Daddy's belongings?\" I asked.\n\n\"Kitten might have accidentally found them when looking for one of your shirts to wear,\" she said, looking at her shoes and gently swaying back and forth. \"And she thought that maybe Daddy might want to take one because Kitten wants to fuck an awful lot today.\"\n\nIt was hard to argue with that logic, although there would be consequences for her going through my things. Later. Obviously. I took the pill and placed it in my mouth. I could see her eyes getting wider. Then I swallowed it with a sip of water.\n\n\"You're in for a long day now, Kitten,\" I said. \"Are you going to join me for breakfast?\"\n\nShe smiled, grabbed a pillow from one of the chairs and placed it at my feet. She then knelt in front of me. She made a brief pouty face and rolled her eyes that I had bothered to put on shorts today, and then reached up and quickly pulled them down over my legs. The pill was going to take another 20-30 minutes to kick in, so the hard cock that was waiting for her was 100% natural. She took it in her hands and moved them gently up and down.\n\n\"Kitten has all the breakfast she needs right here, Daddy,\" she said. And then she slid her mouth down my cock.\n\nI grabbed the arms of the chair, mainly so I didn't take my hands and run them through her hair and begin to fuck her mouth. She'd like it, but Kitten...Kitty had a plan today, so I was content to see where she went with it.\n\nShe kept her eyes on me and she moved her mouth up and down my cock. Then, she glanced over at the food on the table. My crazy little girl expected me to eat breakfast while she was sucking my cock. I shook my head in disbelief and then grabbed a fork and knife, cut off a piece of omelette and put it in my mouth.\n\nIt was not bad and I smiled as I chewed. That was the right reaction because Kitten began to hum as she moved up and down my cock. I could also see her eyes begin to glaze over. She'd worked hard to keep her focus, but there's only so long she could suck my cock before zoning out.\n\nI kept eating as I watched her move her mouth up and down my cock, letting it pop out of her mouth so she could flick her tongue under the crown, which she knew I loved. But then she would fill her mouth with my cock and I could see her mind just go.\n\nI loved watching this happen to her. I used to feel guilty that I got so much enjoyment out of watching her essentially become a mindless sex toy, but she told me I was silly.\n\n\"Daddy, I love sucking your cock and being a mindless little fucktoy. I feel safe when I do it. I know you won't hurt me. It's a safe space for me. So don't be so silly and enjoy it,\" she told me.\n\nSo I did.\n\nI finished my omelette and toast and then sipped from my coffee. The noise made her look up at me, and I took a spare hand and scruffed her hair behind one of her ears. Her eyes lidded again and she purred.\n\n\"I have such a good little Kitten,\" I said. \"She's sucking my cock like a dumb little fucktoy.\"\n\nShe began moving up and down my cock a little faster, trying to take more and move it. She wasn't 100% at being able to deep throat me at will, but since her breakthrough last month, she was getting a lot better. She also took one of her hands off my leg, reached around and placed it on the hand I had on her head. She placed pressure on it letting me know she wanted her head forced down.\n\nKitten had been sucking my cock for 15 minutes now and I could feel the pill coming in around the edges. I could feel my cock start to swell more, I was getting more flush and there was the beginning of a headache coming on. I was also feeling more aggressive. I know the pill had little to do with that, but I could feel the urge to dominate her coming on. I put down my coffee and put both hands on her head and began to push her down on my cock. She groaned, and I could feel drool beginning to come out of her mouth and as she worked harder and harder.\n\n\"Take all of your Daddy's cock, you silly little Kitten. I'm going to paddle your ass if you don't get all that cock in your throat,\" I said, growling a little.\n\nThat seemed to do the trick. My cock slid an extra inch or two and I could feel it going into her throat. I kept my hands on the back of her head, and she looked up at me with wide eyes. But she wasn't panicking...yet. I kept my hand on her head for a few seconds and then I let go. She pulled back, coughed and started gasping for air.\n\nThe Daddy in me wanted to kneel and make sure she was ok and apologize if I hurt her. The dom that she wanted right now had to look down at her and not make a move. Finally, she looked up at me and smiled.\n\n\"Kitten took all your cock, Daddy. She's a good little girl.\"\n\nJesus Christ.\n\n\"Yes, she is. Does she want more?\"\n\nShe nodded her head.\n\n\"Can Daddy cum in his Kitten's mouth now? She's awfully hungry.\"\n\nWho was I to deny my little girl? I stood up and looked down at her. She looked a little uncertain about me standing like that, but I put both my hands on her head and moved it forward until her lips found my cock again. It quickly slipped past them and I could see her eyes dull again as she became submissive and mindless.\n\nFor all the sex we've had in the last nine months or so, I've rarely cum in her mouth. It wasn't because she hated the taste. The couple of times I had, she really liked it. She simply preferred I cum in her pussy.\n\nI began fucking her mouth, moving my cock back and forth as she frantically sucked on it. I could feel the building of an orgasm. My moving her head back and forth became more erratic.\n\n\"Close, Kitten,\" I managed to gasp out.\n\nSuddenly, she pushed forward, wrapped her arms around my waist, and I felt my cock back into her throat. That's all it took. \n\n\"Jesus, Kitten!\" I cried out and came. I could feel my cum pulse out of my cock. She swallowed it all like it was a favourite treat that had been denied to her for too long. She pulled back suddenly and I let her go and she collapsed back on the floor, gasping for breath. I flopped back on the chair with my head spinning. I'm always shocked at how intense it is when I cum from one of her blowjobs. I love fucking her, but I could get seriously addicted to her blowjobs.\n\nOnce I could focus again, I looked at her. She was still on the floor and had a glazed look, but was coming back out of it. Her face was flushed where she hadn't been able to breathe.\n\n\"Are you ok, Kitten,\" I asked.\n\n\"Uh-huh,\" she managed. \"Thank you for breakfast, Daddy. It was yummy.\"\n\nKitten ungracefully made her way back on her feet. I moved to help her but she waved me away. She picked up the tray of dirty dishes.\n\n\"Kitten will clean up, Daddy. You sit here and enjoy the sun while she prepares our picnic lunch,\" she said.\n\n\"Picnic?\" I asked, and then thought, oh God, she's pushing her luck with food today. At some point, I was going to end up in hospital.\n\n\"Uh-huh,\" she said, wobbling dangerously on her heel as she headed inside. \"Kitten thought it might be nice to have a picnic at the pool under the falls. That way she can show you her new bikini.\"\n\nMy cock, which had never really softened after her blowjob, began to harden again.\n\n\"Give Kitten an hour to get ready, ok Daddy?\"\n\n***\n\nKitten and I had been to the lookout area of the falls many times this summer. It always made me feel good hearing the stream run and the water go down over the falls. I'd been told it slows down during the summer if there wasn't much rain, but there had been a decent amount this summer, so it was still going strong.\n\nBut trying to access the pool was a whole other thing. It was mostly a 10-foot tall rock cliff on the sides. There was one small area where you could walk into the pool, but you had to go down a steep slope and cut through some dense trees to get there. We'd tried once and, while it was nice, it had been a hassle to get there. I could have hired someone to cut a proper path, but I didn't want people to find out about it. I liked the privacy and didn't fancy having strangers crawling over the spot during the summer.\n\nStill, Kitten wanted a picnic next to the pool, so who was I to say no?\n\nIf nothing else the walk to the pool gave me quite the view. Kitten was swinging a picnic basket she'd acquired from somewhere. She had exchanged her cat ears for the wide-brimmed hat with mouse ears she wore to Disney. She was wearing some kind of water shoes and a long Hello Kitty shirt that dropped to mid-thigh and covered up whatever bikini she was wearing. She also kept her tail in. I was curious to see how that was going to work when she went swimming.",
        "Navigating down the tree-filled slope using my cane was a pain in the ass, but Kitten stuck close by and helped me get through it until we finally made it to the small clearing by the pool. Maybe I was grumpy last time, but I had to admit, it was a nice spot. The trees provided shade in the clearing and partially out into the pool. The waterfalls made a wonderful noise. Most of the ground was soil, with some rocks right next to the water. It wasn't white sand, but at least you could sit or move about comfortably.\n\nAnd, just as important, it was private. Even if someone was at the outlook above, you still couldn't see this area.\n\n\"Worth the trouble, Daddy?\" Kitten asked. I suspected there was another double-entendre there, so there was only one answer.\n\n\"Always worth the trouble,\" I said. Her smile beamed back at me, so I must have said the magic words.\n\nThere was a small flat rock which I made my way over, sat down and stretched my leg. I rubbed my knee. It was stronger, but it preferred walking on flat surfaces instead of trying to brace going over uneven terrain like this. Kitten had a look of concern, but I waved her off and said I was fine.\n\nShe then put the picnic basket down, pulled out a blanket and laid it on the ground next to me. Then she knelt and began pulling out items. There were a couple of turkey sandwiches, some potato salad, a couple of pieces of fruit, some potato chips, and a pair of thermoses. \n\nA more suspicious man might guess she'd bought these items at the store. But only a deeply stupid man would point that out. \n\n\"That looks fantastic, Kitten,\" I said. \n\nShe took a sandwich and handed it to me, knowing I wanted to sit and stretch my leg a bit. We sat like that for a while, just eating and chatting about how beautiful the spot was. She lay on her side looking at me as we ate, with her shirt riding up higher on her thighs. She was being a severe tease about what was under that Hello Kitty shirt. But it was a beautiful day in a beautiful spot, with a breathtakingly beautiful young woman. I could be patient.\n\nAfter we snacked for a bit, Kitten cleaned up and put everything away. Then she came over and kissed me. I enjoyed the pleasure of her lips on mine and just as I was about to wrap my arms around her and start turning this into something more serious, she danced back a bit. I sighed, but her smile prevented any frustration from developing.\n\n\"You're spoiling your Daddy a lot today,\" I said. \n\n\"Daddy deserves to be spoiled,\" she said, stepping back from me, and then pulled the shirt over her head. \n\nIt was a bikini in theory more than name. Two small black mesh triangles covered her nipples and not much more. The bottoms were of the same material and went around her hips. It wasn't a thong, but it was certainly a close relation. Kitten made a sudden \"oh I forgot something\" look on her face and turned around to get something in the picnic basket. \n\nShe bent over and I could see she'd done something that allowed her tail to fit through the bikini bottom. The mesh wasn't hiding much of her ass. \n\nWhen she turned back around she had another set of cat ears fixed on her head. These looked a bit cheaper than her regular ones, a pair she wouldn't mind if they got wet or lost.\n\n\"Do you like the bikini Kitten made, Daddy?\"\n\n\"You made that?\" I asked. My voice sounded a bit strangled, even to me. \n\nExtra submissive or not today, the brat couldn't help but make a momentary appearance. She put a hand on her hip and cocked her head.\n\n\"Please, Daddy. I...Kitten makes more complicated things than this all the time.\"\n\nShe walked towards me and put her arms back around my neck. I pulled her closer and whispered in her ear. \n\n\"My Kitten looks very fuckable,\" I said and to emphasize the point I took one of her hands and put it on my cock, which was tenting my swim trunks. \n\nI could hear her breath hitch and she began rubbing her hand along my cock. She then took a deep breath and gently pushed back from me. She had a plan and was sticking to it. \n\n\"Kitten needs to cool off for a bit. She's going for a swim. Want to join her?\"\n\nI stood up and nodded. Then I took off my t-shirt, pulled down my swim trunks, and stood naked in front of her. She wasn't the only one who could be a tease. Instead of being tempted, she gave me a frustrated look, like I was being mean. Then in a display of truly impressive one-upmanship, she walked to the water's edge, paused, and then reached behind her and began unscrewing the fur portion of her tail from the plug she was wearing in her ass. It popped off and then she velcroed the gap in her bottoms. I only caught a glimpse but I could swear that plug looked larger than the last one I saw her use. She tossed the tail over towards the basket.\n\n\"Don't want that getting wet,\" she said. She then ran into the pool and screamed as her skin hit the water, which was colder than expected.\n\nI laughed and carefully made my way down to the water's edge. For a moment I just enjoyed watching her splash around, now that she adjusted to the water temperature. Somehow her cat ears stayed on, so I momentarily thought it was some kind of previously unknown freshwater kitty shark splashing out there.\n\n\"Come and play with your Kitten!\" she called out, tired of waiting for me. I waded out so my balls finally hit the water. Viagra fueled or not, I winced.\n\n\"Is it safe?\" I asked, continuing to move out so the water was up past my waist.\n\nShe swam closer to me.\n\n\"Nope,\" she said, and then dove under the surface of the water. She disappeared for about 10 seconds and I wondered where she was. Suddenly I could feel a tongue running along my cock, which was startling. Then she popped out of the water and wrapped her arms around my neck and her legs around my waist. Before I had a chance to figure out what she was doing or brace myself, she leaned back causing the two of us to tumble into the water.\n\nShe immediately let go and pushed herself out of range. I exploded back out of the water, treading ungracefully as I tried to regain my equilibrium. She reappeared about 10 feet away, safely out of my grasp and laughing. Once I stopped sputtering I looked at her and gave her my deadliest angry daddy glare.\n\n\"There will be a price to pay for that, Kitten,\" I growled.\n\nShe grinned, utterly unphased by the threat. \n\n\"Well if Kitten is going to be severely punished she might as well earn it, Daddy,\" she said.\n\nSo began the better part of 20 minutes of water torture for me. I originally thought Kitten looked like a shark with her ears, but it turns out that a dolphin was a more apt description. She was fast and graceful and I was not. It was very much as if a newborn toddler had just been tossed into a pool and a particular asshole kind of dolphin had been left to babysit.\n\nShe would dive, disappear for 20 seconds and pop up behind me and grab my ass. She would splash me and zip away before I could do anything to retaliate. I got called a slow old man as she sprinted away when I tried to chase after her. I knew she was a good swimmer, but she had been holding back the few times we had been in the water previously.\n\nI would have gotten frustrated and angry by it, but her laughter was so joyous that I could hardly get mad at her. I lived for her laugh and smile. And if my lumbering ass moving across a pool that gave her delight, then the mocking was a price I was willing to pay.\n\nBesides, I eventually caught onto what she was doing. She was being a brat because she knew she would be punished when she was on dry land. She would be hugely disappointed if she wasn't and I had no intention of disappointing her. I angled closer to the shore and waited for one of her dives. When she did, I headed ashore. It had been over 20 minutes of frustrated paddling in water so I was getting tired.\n\nBut I also had some excess energy that needed to be burned off. Energy only Kitten could take care of.\n\nWhen she next popped her head above water she spun around quickly, having lost track of me. She saw me stand on the shore, trying to look as intimidating as a naked middle-aged man can be. To her credit, she could have laughed. She could have refused to come in and kept playing in the water. After all, she had a seemingly limitless amount of energy.\n\nBut she began to make a slow, contrite swim over towards the shore. I backed away and made my way over to the rock to sit down. She finally came ashore, trying to look sorry and only barely succeeding.\n\n\"Kitten's sorry, Daddy.\"\n\n\"That hardly matters. You deserve your punishment, don't you?\" I said.\n\nShe mumbled something.\n\n\"Louder, Kitten.\"\n\n\"Kitten's sorry she was such a brat, Daddy. Please be gentle with her,\" she said.\n\nLike I was going to disappoint her by being gentle.\n\n\"Lose the suit, grab your tail, and come over here,\" I said.\n\nShe reached behind her and a quick pull had the microscopic top slide off and onto the ground. She hitched her fingers into her bikini bottoms and pulled them down. Then she collected both and dropped them alongside the picnic basket. She picked up her tail and began to slowly make her way towards me, head down the entire way. Whether it was her way of being contrite, submissive, or she was using her wet hair to hide her grin, I couldn't say.\n\n\"Do you deserve to be punished, Kitten?\" I asked as she finally stood in front of me.\n\n\"Yes, Daddy,\" she said from behind the wall of wet hair. Her head was still lowered.\n\n\"Look at me,\" I said, with more force. She popped her head up and moved her hair back. She'd gotten better at being fake sorry. \"Why do you deserve to be punished?\"\n\n\"Because Kitten was a brat and teased by Daddy and made him feel helpless in the water when she swam circles around him,\" she said.\n\nI'd have applauded if it wouldn't have broken character. That was some primo \"sorry, but not really\" brattiness.\n\n\"Give me your tail and turn around,\" I said.\n\nShe handed it to me and turned around. I put my hand on her lower back and commanded her to bend over. Her ass was right there in front of me. I took a closer look at her plug. I was right, it was noticeably larger. There were questions about when she started doing this, if it was from the things I bought for her in September, and why, but they could wait. I took the fur portion of her tail and screwed it into the plug. I gave it one final gentle push and she groaned.\n\n\"Bend over my lap for your punishment, Kitten,\" I said. She did so with reluctance. The rock I was sitting on was a good height for it. She could lie across my lap with her hands and feet still able to touch the ground.\n\n\"How many spanks do you deserve for your behaviour?\" I asked.\n\n\"I dunno,\" she mumbled.\n\nI knew she would say that. Good.\n\n\"Well, I guess we'll just keep going until my hand gets sore then,\" I said. I could feel her tense; that wasn't the answer she was expecting. But before she could protest, I swung my hand and made contact with her right ass cheek. She yelped out in surprise, not expecting it to be quite so hard. I normally warmed her up with lighter slaps. But she normally wasn't this bratty.\n\n\"You were extra bratty today, Kitten. You're not getting off lightly,\" I said, then slapping her left cheek just as hard.\n\n\"Owwww, Daddy! I'll be good,\" she said.\n\n\"Yes, you will be. After your behaviour has been corrected,\" I promised.\n\nAfter about a half dozen slaps on her ass, she stopped pleading and begging for mercy and promising she'd be a good girl from now on. There was no more kicking her legs. We were past that part of the game. And it was a game. It took me a while in our relationship to understand that she liked this, that there was a proper level of pain that she enjoyed, even craved from time to time.\n\nI settled into a steady paddling of her ass. If nothing else, the landscape made it kind of soothing, with my hand slapping her ass making a quiet echo to go along with the waterfalls. I liked how it sounded.\n\nBut from the sounds of the falls, and the echoes of the slaps on her ever reddening ass, I could hear another noise. She was panting. I paused for a moment and reached between her legs. She was soaking. I was so busy being in the moment and enjoying the zen of slapping, that I hadn't noticed that not only was she soaking, so were my legs.\n\n\"Are you ok, Kitten?\" I asked.\n\nShe mumbled something. No matter how much she complained about getting fat because of my cooking, she still weighed next to nothing. I adjusted her body so she was sitting on my good leg, with her tail and ass hanging off. I took her face in my hands. Her eyes were glazed and her face was flushed.\n\n\"Are you ok, Kitten?\" I asked again. \n\nThis time she nodded slowly.\n\n\"Fuck me, Daddy. But carefully. Please,\" she murmured. \n\nThe combination of the Viagra and Kitten rubbing up against me as I spanked her meant getting hard was not a problem. She was in subspace and there was also the plug and tail to consider. So I had to be gentle with her. I remained sitting and with a little positioning had her sitting facing me on my lap. I hugged her for a moment, and she burrowed in, wrapping her arms around my neck.\n\n\"Are you ready, Kitten,\" I asked.\n\n\"Yes, Daddy,\" she said, a little more focussed. She lifted her hips and I held up my cock. She slowly moved her hips back down. As wet as she was, I slid in with ease. The hard part was holding her hips so I didn't bury myself in her with one hard stroke. With her mind frazzled and the plug in her ass, it would have been a lot for her to handle.\n\nI continued like that for a few more moments, placing my hands under her ass and gently lifting her up and down my cock without burying myself. It was torture as I wanted to do more, but I was trying to be careful. Finally, Kitten pushed her hips down harder, forcing more of my cock into her pussy.\n\n\"More, Daddy,\" she said in a dreamy voice. \"Harder.\"\n\nThe next time I lifted her, I moved my hands away and let her take control. She dropped down hard, and I felt my cock slide completely inside. She gasped.\n\n\"So full, Daddy,\" she moaned.\n\n\"Just the way you wanted it, Kitten,\" I said.\n\n\"Uh-huh,\" she said. \"Now I want to be full of something else too.\"\n\nPlanting her feet on the ground, she began bouncing up and down on my cock with more determination. She wanted me to cum, but had either forgotten I'd cum a few hours earlier or was very confident in her abilities. Being hard right now was impressive. Getting me to cum in the next few minutes was going to require some serious talent. I grinned and reached up and began gently playing with her nipples.\n\nShe moaned and arched her back, thrusting her tits into my hands. It also changed the angle she was moving up and down on me. To my surprise, I could feel the beginnings of an orgasm in the distance.\n\nJesus, maybe she was that good. God knows with the plug in her ass she was tight.\n\n\"So full, Daddy. So full, Daddy! So full!\" she screamed, slamming her hips down and burying my cock deep inside as she came. I could feel her pussy pulse around my cock and the rest of her body shook as I grabbed hold of her to make sure she didn't fall off my lap.\n\nShe spent a few moments like that, in a daze on my lap, leaning back with eyes closed and twitching occasionally as the aftershocks of the orgasm continued to run through her. I'd heard about guys who just wanted to get their rocks off when they fuck someone. They were missing out on the best part. There were few things more beautiful than holding someone you loved while they were in a state of bliss.\n\nEventually, she snapped out of it, straightened up, and looked at me. She still looked several IQ points below normal, but more there than when I had finished slapping her ass.\n\n\"You didn't cum?\" she said, sounding baffled and a bit hurt.\n\nI tried explaining why, but she got a pouty face that said my logic was unacceptable.\n\n\"You need to cum in your little girl, Daddy,\" she said, dropping into her sing-song voice while wrapping her legs around me. \"Throw me on the ground, take me, fuck me like the bratty little girl I am.\"\n\nLike I could say no to that. I used my cane to leverage myself up, with Kitten still wrapped around me. She giggled, but then said for me to be careful. A bit late for that warning. I moved towards the blanket and between the two of us we managed to get her lying on her back with me on top of her.\n\nI looked down at her, giving her my serious Daddy face.\n\n\"Are you ready, Kitten?\"\n\nShe nodded. \"Uh-huh. Fuck me, Daddy.\"\n\nI pulled my hips back and slammed back into her, her eyes opening wide and a little gasp came from her mouth.\n\n\"Is that what you want, Kitten?\" I said.\n\n\"More,\" she said. \"Harder. Don't hold back.\"\n\nNow it was time for my higher brain functions to shut down. Normally I was always in control when fucking her, giving her what she needed and adjusting to her desires. But what she wanted was for me to lose control. I gave her what she wanted. I wasn't aware of how she looked and only dimly aware of her panting and begging for me to fuck her. All I focused on was my cock entering her pussy over and over. I adjusted my angle a few times, caring less about how it was making her feel, and more about how it was pushing me closer and closer to what I needed.\n\nI lost track of time, but then I could feel it; the rush letting me know that my orgasm was inevitable. I finally managed to regain enough control to look at Kitten's face again. In my mania, I must have missed that she came again. She looked dazed but knew I was ready.\n\n\"Breed me, Daddy. Give me your babies. Please,\" she whispered.\n\nThe explosion and fireworks went off in my head. Kitten has told me that's what it felt like sometimes when she came; that it was like a Disney fireworks display going off in her head with the sparks and vibrations running through her body. I was envious she got to cum like that. Now I had an idea of what she experienced.\n\nEventually, I came back to Earth, gasping for air. When I could regain focus I looked down at my Kitten who had a big smile on her face. She touched my face.\n\n\"Good Daddy. You needed that,\" she said.\n\nI was aware that I was crushing her a bit, plus she still had the tail in. I began to roll off her, but she decided she wasn't quite done with me yet and rolled with me, keeping my semi-hard cock inside her while she repositioned herself on top of me. She rested her head on my chest and I stroked her hair, which was damp from the pool and sweat.\n\n\"I wasn't aware I was lacking in sex, Kitten,\" I said.\n\n\"I hope you're not,\" she said. \"But you can be restrained sometimes. You care about how I'm doing, which I love you for, but today I wanted you to lose control just like you make me lose control...well, most of the time.\"\n\n\"Well, you succeeded. I was pretty out of it while I was fucking you just then,\" I said. \"Are you ok? Did I hurt you?\"\n\nShe giggled, shifted and looked at me. I also felt her pussy pulse around my cock.\n\n\"I came when you were fucking me and barely knew I was here. I came when you filled me with your cum. I came when I was riding you. I'm pretty sure I came when you were wailing on my ass. I'm more than ok, Daddy,\" she said.\n\nI ran my hands down her back and gently touched her ass. She winced a bit but smiled at me.\n\n\"I'll be sore sitting down for supper tonight, but I'm ok,\" she said. When I looked skeptical she added, \"maybe I'll sneak an extra cushion into my bag, just to be sure.\"\n\nI continued until I reached her tail. I didn't play with it too much, but I did run my fingers around the edge of the plug in her ass. Kitten knew the question before I asked it.\n\n\"Yes, ok, I've been using bigger plugs lately,\" she said. My cock finally got soft enough to slide out of her. She sighed in disappointment, and then rolled off of me and lay on her side, resting her head on my chest.",
        "\"You've been using larger plugs?\" I asked. \"For how long? Why?\"\n\nShe didn't say anything, content to rub her face on my chest a bit. I didn't push because this was something she'd been doing for a while and for a reason.\n\n\"Back at Christmas, when we were in Montreal and in that store with Rachelle...we talked a lot. She's sexy and charming so she was very persuasive. But one of the areas I wasn't interested in was when she showed me anal plugs,\" she said. Then Kitten adjusted and looked at me.\n\n\"Daddy, you have to understand how many guys wanted to fuck me in the ass growing up,\" she said, and it was so blunt and straightforward that I couldn't help but crack up laughing.\n\nAfter I caught my breath and stopped laughing, she was giving me a very pouty look, and I apologized, although I think she knew it was the way she said that I found funny, not that she had to deal with that growing up.\n\n\"Anyway...it was this whole thing guys had, and most of them were so sleazy about it, or tried to be sneaky about it...like that was the kind of thing I wouldn't notice. So anything to do with my ass became a turn-off.\n\n\"But when I explained that, she laughed and said I was dealing with immature boys - never mind some were older - but now I had a daddy taking care of me. And that he would respect and care for me. And that I was depriving myself of a source of pleasure. And then lowered her skirt and showed me she was wearing one.\"\n\n\"Get out!\" I said.\n\n\"I know!\" she replied. \"I was so shocked. Here's this amazing woman flashing me her ass, and showing me she was wearing a plug. After that, it became kind of hazy. I was just going to buy one, but she told me to get a set that got larger so, if I wanted, I would be ready for you.\"\n\n\"Kitten...\" I started, but she put her hand up.\n\n\"Daddy, I still didn't think anything was going to happen, but we were spending your money, so I thought 'why not?'. But that night at the hotel with the tail plug was amazing. Then I wore it a few more times and every time I did we had so much fun and not once did you ever suggest taking out the plug and fucking my ass.\n\n\"So when I moved in at the end of April, I started playing with the next size plug. I never told you about it because I was mostly just curious and I didn't want to make a thing out of it. I'd wear it for a bit, then take it out when it got uncomfortable. But as the summer progressed, I grew to like it. I moved up to the next size a few weeks ago. I guess I like having something in my ass, Daddy,\" she said.\n\nJesus Christ. Wow.\n\n\"So I thought maybe for your birthday we might like to try. What do you think?\" she asked, looking very nervous about how I would react.\n\n\"I'm honestly not sure if you mainlined Viagra into my bloodstream I could get hard again right now, Kitten,\" I said.\n\nShe giggled and then stood up. I could see my cum running down the inside of her thigh. She noticed and moved towards the pool to do a quick clean.\n\n\"Silly Daddy. Tonight, after supper. I thought of getting a chance to get at this might inspire you,\" she said, wiggling her ass with the tail swaying behind her.\n\nMy girlfriend was a crazy woman and she was going to give me a heart attack. That was a hell of an enticement she was offering. Of course, I'd thought about it, but I was pretty sure she'd had bad experiences when she was younger so I was never going to make a big deal out of it. She wore the tails and had fun with them. That was more than enough for me.\n\nNow I was watching Kitten in the water doing a small wash when I felt a twitch in my cock, so maybe getting hard a third time this evening wasn't impossible. I glanced at my watch and noticed the time. As much as I hated it, we should probably get going soon. Kitten noticed me glancing at my watch and sighed.\n\n\"Time to go?\" she pouted.\n\n\"I'm sure you're going to want a proper shower or bath and not just a quick rinse in the pool,\" I said, and I could see the logic of it seeping into her.\n\n\"And my hair is a rat's nest,\" she said, sighing and holding up a few knotted strands in her hair. \n\nWe started collecting our things and she picked up her bikini to put it on. I stopped her.\n\n\"I won't if you won't,\" I said, challenging her.\n\nShe looked delighted. She loved being naked, so having me join her was a small victory, even if it was on my property.\n\n\"Deal, Daddy,\" she said, and we began to make out way up the hill and back towards the house. For some reason, looking at her magnificent ass in front of me with the tail swaying back in forth in front of me, a thought hit me.\n\n\"What happened to the third person by the way? It disappeared after the spanking,\" I said.\n\nShe looked back and smiled.\n\n\"Oh, Kitten is lurking about Daddy. If you're good tonight, she might even make a reappearance.\"\n\n***\n\nMy princess was staring into the distance, taking in the view, and I couldn't help but stare at her and enjoy my view as well.\n\nShe was wearing a little black dress and hadn't been subtle about letting me know she wasn't wearing underwear. She was wearing sandals with straps that ran up to her knees. She also had a pair of cat ears perched on her head, which got a few looks, but nothing serious. She'd taken off the furry portion of the tail with regret, but she had the plug back in her ass.\n\nBetween the spanking and the plug, she wasn't sitting comfortably, but she was squirming adorably and enticingly.\n\nShe'd booked supper at a local restaurant we liked going to. Normally we went earlier in the week to avoid tourist hordes, but my birthday being on a Thursday, there was no getting around the fact the place was busy. Somehow, Kitten managed to get our usual table on the deck facing the water. The food was pretty good, but the wait staff was amazing and they loved us. So little things would occasionally get snuck out for us to try. We had one waitress, Sonja, who flirted with both of us. I never took wait staff flirting seriously figuring they were hustling for tips, which I respect, but Kitten suspected there was more than that.\n\n\"I'm surprised she hasn't left her phone number,\" she said earlier. \"But maybe she knows I'm not sharing you at the moment.\"\n\nI really didn't have any interest in waitresses. I loved watching my Kitten. Not just because she was beautiful, which she was no matter how much she downplayed it. Looking at her made me calm.\n\n\"You need to stop staring at me like that,\" she said.\n\n\"Why?\"\n\n\"Because I have plans for this evening that do not involve me dragging you into the bathroom,\" she said.\n\nI laughed, stopped staring at her and took in the view.\n\n\"This has been a great day, Kitten. You've done an amazing job with everything. Thank you,\" I said.\n\nShe was quiet for a moment.\n\n\"Do you wish it was like this all the time? That I was here all the time?\"\n\nIf I wasn't so relaxed I would have heard the alarm bells going off in the back of my head. Instead, I assumed it was an early manifestation of her sulking anytime she had to leave me to go back to Montreal. During the school year, it started Sunday morning. With classes about a month away, I thought this was the beginning of what was going to be a very sulky month.\n\n\"Of course, Kitten. I'd love to have you here all the time. But the school year won't be so bad. You adjusted your courses so you're at school four days a week, the other three you're here with me. It's not what I'd prefer, but it's not a bad arrangement,\" I said.\n\nShe looked like she was about to say more when I heard the first bars of \"Happy birthday to you...\" begin. I put my face in my hands as everyone else in the restaurant joined in. I lifted my face back up to see Kitten grinning like a lunatic and recording everything with her phone. Sonja and several other members of the wait staff decided to come out and join in. A nice piece of cheesecake was placed in front of me with a candle on it.\n\n\"She wouldn't tell us how old you were, so we couldn't put all the candles out,\" she said.\n\n\"Thank God. I'd hate for you to close for breaking the fire code,\" I said.\n\n\"Oh, you're not that old,\" she said. Yup. Flirting. I blew out the candle.\n\n\"Well, I hope you get your wish,\" she said. I looked at Kitten.\n\n\"Well, after some suitable punishment for not listening to me when I said I didn't want a big deal made of my birthday, I'm sure I will,\" I said.\n\nKitten faked a 'who me?' innocent look and Sonya looked intrigued but said no more. I was about to start telling Kitten the nature of her punishment when one of the other waiters stepped forward with a large box.\n\n\"This was dropped off her today with instructions to give it to you during dessert. Which I guess is now,\" she said.\n\nI took the wrapped box which was about a foot wide and about three feet long. It wasn't that heavy and it felt like there was lots of packaging inside to keep me from guessing. I could tell the waiters were curious but moved away to watch from a discreet distance.\n\n\"When, exactly, did you have time to drop this off here today? You have a teleporter I don't know about?\" I asked.\n\nShe grinned. \"Ahmed very kindly offered to drop it off today. We've been working on it for weeks.\"\n\nI tore into the box, wondering what they had been up to. I didn't think she'd get me another costume like she did at Christmas, but wasn't sure what else the two of them could have been working on. Once I got the packaging open, I saw what it was. I glanced back at her and she looked nervous. That's when I pulled out a new walking cane.\n\nIt was a stunning cane. They're tricky beasts to buy and I made my share of mistakes when I realized I had to use one. I was determined not to buy some boring old man cane so I got one with a flashy silver handle, carved with some geek things I liked. It looked cool.\n\nIt was completely unusable. I could walk with it for short bursts, but as soon as I had to lean on it hard or use it nonstop for hours it hurt my hand. I ended up caving and buying a very practical cane. Boring, but at least I could use it and the damn thing wouldn't hurt me.\n\nThis was a thing of beauty, but it was also something designed to be used. It was made from ebony wood as best I could tell, and the handle was ergonomically designed to fit in my hand. I could tell just from gripping it that it would fit perfectly. If I didn't know better I'd swear they took a cast of my hand or something, Still, there was some flash to the handle design, so it wasn't boring. There was also a ring of silver with elaborate Celtic knotwork put in it.\n\n\"You and Ahmed made this?\" I said, examining the cane. \"It's stunning. Forget cosplay, you guys should go into the cane business.\"\n\nKitten was overjoyed with my reaction.\n\n\"I suggested that, but considering how long we fussed over it, I don't think it's practical financially,\" she said. \"But there's one thing you've missed. There's a little button in the knotwork. Press it and twist the handle. But don't pull on it too hard after you do.\"\n\nI felt around and there was a tiny button there. I pushed it and heard a small click. Then I twisted the handle and gently pulled it up. Sure enough, a thin metal blade came up from inside the cane. I reached down to touch the blade. My fingers came back quickly. The blade was sharp.\n\n\"Jesus, Kitten,\" I said.\n\n\"We researched all kinds of canes, and Ahmed was dying to try one with a blade in it. I think he got carried away sharpening it. He recommends not using it if you know you're going through a metal detector,\" she said.\n\nI clicked the blade back into the cane. There would be plenty of time to examine it when not at a busy restaurant. I gestured at her to come closer. She smiled and got up from her side of the table and sat in my lap. She leaned down and kissed me.\n\nI could feel the waves of annoyance from several tables. I knew the age difference was drawing some extra looks, but it was the public display of affection aggravating people now. A few years ago I might have been one of them, but now I didn't care. \n\n\"I did good, Daddy?\" she said quietly.\n\n\"You find new ways to be amazing, Kitten. I love it. I love you,\" I said.\n\nI thought her smile would split her face.\n\nLater, on the drive home I was thinking that, yeah, I think I could probably get hard again and if Kitten was serious about anal sex we could at least try, but she needed to be aware that it might not work. I was so wrapped up in my thoughts and planning, that I didn't notice she had gone quiet in the car.\n\n\"Daddy,\" she said, hesitantly. \"Remember when you said you'd love to have me here all the time?\"\n\n\"Uh-huh,\" I said, still distracted.\n\n\"What if I told you I had a way to make that happen?\"\n\nThat undistracted me in a hurry.\n\n\"What do you mean, princess?\"\n\n\"I got a job offer at the comic con last weekend. I can work full-time if I want,\" she said.\n\nI glanced over. She looked nervous, but also a little excited.\n\n\"I thought you said it was a smallish comic con and there wouldn't be any production companies in attendance?\" I said.\n\n\"There wasn't. Michelle made the offer. They want me to go and work full-time with them.\"\n\nI'd been smiling pretty much from the moment I woke up this morning. Saying this birthday was better than the previous two was a low bar to clear, but I didn't expect to be this happy, all day long. But Kitten had managed it. But now I found myself in that weird moment where there was still a smile on my face from my happiness a few minutes ago, now it was kind of frozen there, with the joy behind it taking a few steps back.\n\n\"Is that what you want?\" I said. It wasn't the right answer as her face dropped.\n\n\"Isn't that what you want? For us both to be together from now on. No more distance keeping us apart? We can start moving forward in our relationship.\"\n\nWell. It has been some time since I last had an unexploded bomb like this drop into my lap. I knew saying the wrong thing would be very, very bad. If I wasn't driving, maybe I could handle the situation with some caution. But I was driving. \n\nIn the wake of the accident, people underestimated how hard it was for me to get behind the wheel again. It wasn't just the physical discomfort of my knee if I drove for too long. I was often terrified another accident was going to happen. Never mind the road we were on was lined with trees; part of my brain was on the lookout for a Mercedes that was going to come flying out of the woods, slam into the side of the car, and kill my girlfriend.\n\nSo it was a distraction. I'd been managing and I was a much more cautious driver these days. But your girlfriend saying she wants to drop out of school, and then strongly hint she'd like to get married and have kids...it's distracting.\n\n\"Kitten, I don't understand why you would want to do this now. Montreal is only a couple of hours away, we're still going to see each other three days a week. I think dropping out of school is a drastic step,\" I said.\n\nThe pout was getting deeper. Shit.\n\n\"I thought you wanted to be with me, Daddy. This is a chance for that. There are no guarantees after school I'll get a job, or that this one will still be here. I can start working for them now without having to spend two more years in Montreal and apart from each other. I thought you'd be happy,\" she said.\n\nKitten could be a bit crafty because she knew she could get away with it with me. I was pretty helpless when she flashed those eyes at me or pouted or any of a half-dozen other things she could do. But she was never seriously manipulative. This is why I was giving her the benefit of the doubt on this. But trying to convince me it was a good idea to drop out of school, on my birthday, after loads of sex, with the promise of more when we got home?\n\nIt's a good thing I knew, in my heart, she wasn't that manipulative.\n\n\"I want to be with you, and it's your choice. But I do not agree with it. School is too important to just throw away.\"\n\n\"You said some of the biggest idiots you know have university degrees,\" she said.\n\n\"Yes, and I know plenty of idiots without them. I will also point out I have a Master's degree, Michelle has a Master's in Business Administration and Ahmed has a business and fine arts degree. We achieved what we have because we worked hard, studied hard, and took advantage of the connections you get when you're at school.\n\n\"There's no way you can tell me you've learned everything there is to learn in your program right now. You struggled at first, but I know you loved your last semester. I know you want to be with me all the time and I swear to you I want that as well. But throwing away your education because you're impatient to start your life with me is foolish,\" I said.\n\nThat came out much harsher than I wanted, but I was so frustrated with her right now, for bringing this up in a car on my birthday, and for thinking this was a good idea. And I could cheerfully murder Michelle and Ahmed for putting the idea in her head to begin with.\n\nKitten didn't say another word. She crossed her arms over her chest and looked out the window. She didn't say a word for the rest of the ride home. Once we pulled up to the house, she was out of the car and into the house before I could manage to wrangle my way out of the driver's seat. She slammed the door behind her. I glanced into the back seat and saw my birthday gift there and sighed. \n\nI had been having an all-time great birthday.\n\n***\n\nI woke up early the next morning. Normally Kitten was curled into my body or had a hand gently touching me, just needing the reassurance I was there. I always found it adorable.\n\nThis morning she wasn't in bed.\n\nLast night she had gone into her workroom and I could hear her crying through the door. I knocked and asked if I could come in. I wanted to apologize and hopefully talk things through, but I got a very firm \"I don't want to talk to you right now.\"\n\nIt froze my heart to hear those words. I wanted to open the door anyway, but I respected she wanted to be alone. I went into my den and tried to read. After midnight I went to bed. I tried to stay up and wait for her but drifted off.\n\nBut now she wasn't here. Concerned, I got out of bed, not bothering to put on clothes, grabbed my cane, and went over to her workroom. I was hoping she passed out on her little couch, but there was no sign of her. I moved quickly to the spare bedroom, opened the door, and found her asleep. I leaned against the doorframe and let out a breath I had been holding for longer than I knew.\n\nI had sudden visions of her waiting until I fell asleep, grabbing some of her clothes, calling a cab and leaving. Never mind there were no cabs out here. Or maybe she would have hitchhiked...\n\nI stopped myself. She was in bed. She was safe. I needed to stop freaking out over things that never happened except in my imagination. I went over to her side of the bed and could see she had cried herself to sleep. I felt my heart crack a little more.\n\nThen something stepped into that crack.\n\nNext thing I knew I was in the car. I wasn't entirely sure how I got into the car, but I noticed I'd at least taken the time to get dressed. I had a recollection of leaving a note by Kitten's bedside table telling her I had to run out and I'd be back hopefully before she read this. And that I loved her.\n\nThat was good. I was glad Past Me did that. I'd have hated her waking up to an empty house.\n\nThe sensible thing, even now, was to turn around, head home, make breakfast for her and talk things out more calmly in the light of day. Or I could continue into Kingston, hit the bakery we like, buy her all the bread as a way of apologizing, and then head back.\n\nBut I was angry. Furious. I hadn't been this way since before I met Kitten. So I was going to visit someone who I could get angry with it. Someone who deserved it.\n\nWhich is how I found myself pulling into Michelle and Ahmed's driveway. I was getting out of the car, still telling myself this was pretty stupid when I noticed I had grabbed my old cane and not the new one with the sword. Well done again, Past Me.",
        "I saw Michelle come out of the house with a smile. She'd seen the car and assumed Kitten was with me. Then she saw it was just me. Then she saw the look on my face. The smile vanished.\n\n\"I guess you're not happy about the job offer,\" she said. \n\n\"What on Earth are you thinking of offering her that job? You want her to quit school?\" I said, walking towards her.\n\nThere was probably a tactic to take when trying to discuss something with Michelle. Confrontational wasn't it.\n\n\"You're pissed with me? You're getting everything you could ever want. She's going to drop out of school, go to work with us, make money, and stay home with you. She'll probably be married and knocked up inside a year. You should be fucking thanking me!\" she yelled back.\n\n\"I don't want her to be married and knocked up inside a year. I want her to go to school and get her degree. And you're now fucking that up with this bullshit job offer,\" I yelled back.\n\nAhmed had heard the yelling and came out of the house. He saw the two of us closing in on each other, had a deeply alarmed look on his face, and came running out between the two of us.\n\n\"Michelle! Ben! Both of you, enough!\" he said. It was as angry as I'd ever heard him sound.\n\n\"You think because you have a cane I won't kick your ass?\" she fired back.\n\nI took another step closer. I didn't yell, but they could both hear me.\n\n\"You know what I've been through,\" I said. \"Do you think I'm even a tiny bit scared of you?\"\n\n\"Ben, please. We're friends here. Please,\" he said to me.\n\nI paused and shook my head. For ages, Meg was worried I was going to go to town on someone with my cane because I had temper issues after the accident. I thought she was exaggerating things. Then I realized just how hard I was clutching the cane and how volatile the situation was. I took a deep breath and deliberately relaxed my grip on the cane. I took a step back and leaned against my car.\n\n\"Why on Earth did you offer her that job?\" I said, in a calmer voice. \"You know she's been stressed and upset about having to leave me and go back to Montreal. And then you throw this thing at her. And in the short term, it looks great. But it costs her something she's dreamed about for years. She will grow to resent giving up chasing that dream in the coming years. So that's awesome. Well done. Thanks for throwing a metric tonne of unnecessary drama into our lives.\"\n\nMichelle looked like she was about to go off again when Ahmed continued to be a peacemaker.\n\n\"Ben, it's a sincere offer. She's great at her job. The costumes she makes get a huge response. With planning we think we can grow that side of our business and she'll be a huge part of that,\" he said.\n\nNow that the anger was easing up a bit, I began thinking more clearly and certain things began clicking into place. Little things that Kitten had told me about what it was like working for them. Bit and pieces of knowledge from my previous life working for the government. You meet just about every kind of human in government, good or bad. Suddenly, I had an idea what was going on here. And my anger that they were randomly messing up our lives became something colder.\n\nKitten had called them hustlers at the beginning of the summer. Maybe she'd forgotten about that. She had started to look at them as friends who paid her, instead of employers that treated her well. But employers almost always looked after themselves first.\n\nHell, who was I to judge Kitten? I'd been so grateful they'd given her the job that I hadn't looked twice or complained. \n\n\"Ok,\" I said. \"So she's still going to make the same amount of money after she quits school and comes to work for you, right? No pay cut at all?\"\n\nBoth of them looked a bit startled by the shift. I'd gone from rage about her quitting school to negotiating about salary. But they were using good cop/bad cop on me so some turnabout seemed fair.\n\n\"Well, there may have to be some small reduction in her pay,\" he said.\n\n\"Of course,\" I said. \"Because the federal student grant money you've been using to top up her salary comes to an end when the summer is over. Also, if she's not a student, it's hard to tap into that fund. Naturally, you told her about that when you made the offer, right Michelle?\"\n\n\"I...may not have told her yet,\" she said. At least she had the decency to look a little embarrassed.\n\n\"Ah. And naturally, you have an extensive plan on how to break into the cosplay market, because it's a crowded field. I assume it goes beyond 'stick it on Etsy and hope for the best.' I used to work with the provincial government. I've seen lots of business plans over the years. You don't mind if I take a look at your plans, right? I might be able to think of a few things to add.\"\n\nAgain, sheepish looks. God damn it.\n\n\"Ben, we're excited about the prospects. Her work gets a huge response when people see it or when we sell it online. We did well at the last con. We think this could work,\" he said.\n\n\"But you have no plan on how to make it work,\" I said. Fact, not question.\n\n\"Ben...\"\n\n\"No, we don't have one of your 'plans',\" Michelle said. \"But I like to think after all these years building what we have, we might have fucking clue what we're doing.\"\n\nI stopped leaning against the car and started walking towards them again. Calmer, this time.\n\n\"Do you know how many people make cosplay online? I literally can't count. There's so much competition. You need every edge you can get. Like maybe a degree from a respected fashion school with a reputation of having its students work in movie and tv productions.\n\n\"Her dream is to walk through a comic con one day and see a little girl run past her in a costume she designed. Not made and sold to her. That she created for a movie, and this kid spent hours doing what she did as a kid...studying it, sketching it, and fumbling around trying to recreate it. All because she saw something on the screen she fell in love with.\n\n\"That's what you're taking from her. In your scenario, she works for you and in five years she's made you some money and she's getting ready to make her 300th Harley Quinn costume. Maybe she has a couple of kids at home to deal with afterwards. It's an ok life.\n\n\"Or your plan doesn't work and in six months she gets laid off. Or has to go back to doing wedding photos and feels like an idiot for dropping out of school because now she's stuck with a job she hates,\" I said.\n\nAhmed had the grace to look a little sheepish. Michelle did not.\n\n\"I had to make my choices. It's part of growing up. We're helping her out. She should feel grateful. You could be a little fucking grateful too. After another two years at school, she might find a guy her age and dump your ass.\n\n\"But no, she'll probably graduate, be in debt, and still end up coming back here to work for us. She'll get married and have babies because she's that nuts for you. That Hollywood dream of hers is already dead.\"\n\nThe anger-fueled energy I had for this confrontation was all but gone at this point. I wasn't going to convince them that what they did was a bad idea. On the other hand, I think I knew how to convince her to go back to school. So the trip here wasn't a complete waste of time.\n\nI sighed and looked at my watch. If she woke up at her usual time, I had maybe 45 minutes. That should be enough time for a run into town to get bagels before she woke up. If I hurried. Warm bagels were always a good peace offering.\n\n\"Are we done now?\" Michelle said. I'd found her brashness and general cutting humour to be amusing since we met her. Being on the receiving end of it made me appreciate that she could also be extraordinarily unpleasant.\n\n\"Does she still have the job?\" I asked.\n\nThat seemed to throw them. \"Yes,\" Ahmed said. \"Of course.\"\n\n\"If she decides this is what she wants to do, I have her back 100%. You will make this work. If you do anything to mess this up, I will be unpleasant to deal with. Fair?\" I said.\n\nMichelle looked like she wanted to tell me to go fuck myself, but Ahmed nodded his head. \"Ok,\" he said. She had a look on her face that indicated the two of them were going to have an unpleasant conversation after I left.\n\nGood. I was having a shitty morning. I couldn't whack something with my cane, I could at least spread the emotional misery around. I got in my car without saying another word. I half expected a final parting shot from Michelle, but we'd both said our piece.\n\nNow I just hoped I could get bagels in time.\n\n***\n\nI came home, quietly opened the door, and made my way towards the kitchen in what I thought was stealth mode so I didn't wake up Kitten. When I turned the corner, there was a very cranky-looking little girl in a Batgirl nightshirt waiting for me.\n\nSo much for that plan. \n\n\"Please tell me that you didn't go and yell at Michelle and Ahmed and you're now trying to buy me off with bagels,\" she said.\n\nBusted. Kitten had picked up a little trick from Meg over the last few months. Meg explained to her that in court she rarely asked a question if she didn't already know the answer. It was always much worse when you caught someone lying. \n\nSo clearly she already knew, because Michelle probably sent a text. I placed the bagels on the island close to her and hoped the smell might distract her. I pulled out a couple and went to get some cream cheese for me and strawberry jam for her. I didn't fancy another fight, but I was hungry and there was no way I was doing it on an empty stomach.\n\n\"I may, on the way to get some of these bagels, stopped in to have a chat with them,\" I said.\n\n\"I am so mad with you right now, Daddy,\" she said. The bagel was not wooing her yet. \"I am prepared to come and live with you, take things to the next step, and you blow it off. Then you go and pick a fight with my boss, and maybe cost me this job. What is wrong with you?\"\n\n\"Your job is safe,\" I said, taking a bite. Christ these were good bagels.\n\n\"Michelle is furious with you right now. She used the word 'asshole' about a half dozen times when she called.\"\n\n\"Yes, but she didn't take back the job offer, did she?\"\n\n\"No, she said it was still there if I wanted it. But I should consider myself lucky to still have it. Are you trying to fuck this up, Daddy? Don't you want me to stay here?\" Kitten asked, fuming.\n\nIf nothing else, I could admire the balls on Michelle. She ratted me out to my girlfriend and was trying to gaslight her all at the same time. I cut the other bagel, put some of the jam on it, laid it on a plate, and placed it in front of her. At least she looked like she was now tempted to eat some of it.\n\n\"I went over there this morning because I was furious. I could understand why they wanted someone as smart and creative as you are to work for them. But they have university degrees, so I didn't understand why they would want you to sacrifice your education. Then I got there and it made sense to me,\" I said.\n\n\"They're being good friends by trying to give me a job so I can stay here with you?\" she said.\n\n\"No. Because they need you more than you need them. If they tie you to them and their business right now, they can probably grow it on the back of your creativity and talent. But if you go back to school, you're likely never going to go and work for them. You'll graduate and if you want to start a cosplay business, you'll do it on your own and at their expense,\" I said.\n\nShe took a bite of her bagel to give her time to process that. Then she made that little face I love when she ate something delicious. She shook her head.\n\n\"I can't do what they do. I'm not smart enough.\"\n\nI took a chance and reached out my hand and touched her face. She didn't back away. Progress.\n\n\"Of course you can. If you want to. If that's what your dream is, then you absolutely can. They have the equipment, we can get that. I might not have a business degree, but I'm not an idiot. The two of us can put something together. If that's what you want. But...\"\n\n\"But I have to go back to school and finish my degree. Because there are about a million people making costumes online and I need to have an edge,\" she said, the reality sinking in.\n\n\"Yes.\"\n\nShe looked so unhappy. I hated killing her plans like this. She picked up her plate with the bagel on it and walked out of the kitchen. I followed and she headed out onto the deck. She sat down in her favourite chair and let the sun shine on her. She closed her eyes and enjoyed the warmth. I didn't say anything or press the point until she was ready.\n\n\"It's weird being me sometimes, y'know? I'm not smart like you or Meg, but I'm not dumb either. I just have to work harder to get what I want. I always have. And it's so tiring sometimes. I just want to relax and not have to study so hard to get what I want. I met you and I can relax, just a little bit because I know you're there. I can be silly and you love it. I can be ditzy and you'll catch me. I don't have to worry,\" she said.\n\n\"Always,\" I said, meaning it. She smiled and it was the first one I'd seen since the restaurant last night.\n\n\"So this was perfect. I'd be with you. I'd have a job. Yeah, I'd be working hard, but I'd have you at the end of the day, and that would be all I needed. Maybe we'd start taking the next steps. You know I want a family...\"\n\n\"You may have mentioned to me, loudly, a time or two,\" I said, trying to tease some lightness into the situation. Thankfully she laughed.\n\n\"Asshole,\" she said, but with a smile and less maliciousness than she would have 10 minutes ago. \"But they were just taking advantage of my naivete, weren't they? Right from the beginning, they just saw me as someone to take advantage of.\"\n\n\"No, I don't know if that was the case from the beginning. They genuinely like you, but I think they saw an opportunity and jumped at it,\" I said.\n\n\"She apologized for forgetting to mention the salary cut. Did that come up during your 'chat'?\"\n\n\"Yes. And they didn't forget.\"\n\n\"Yeah, I thought as much. Wait until I quit school, commit to them, and then mention it, right?\"\n\n\"Yup.\"\n\nShe was quiet for a minute. \"I am such an idiot. A sucker.\"\n\nI pulled a chair over so I was next to her and put my arm around her. She leaned into it.\n\n\"You aren't and you have the biggest heart of just about anyone I know. I love that you wanted to do this. And if I was a worse person I would let you do it. But I love your dreams. I love that you want to make costumes. I love that you want to design something that a little girl will see and inspire her to make for herself. That's amazing,\" I said.\n\n\"It's silly,\" she said.\n\nI took her head and gently turned it so she could look at me in the face.\n\n\"It's one of the best dreams I've ever heard. I will do everything I can to help you achieve it. I swear,\" I said.\n\nShe wrapped her arms around my neck and sobbed a little, but it wasn't the broken-hearted tears of last night. I mentally breathed a huge sigh of relief. She was going to do the right thing and go back to school. The right thing that would make us miserable for weeks, if not months. So yay us.\n\nShe stayed like that for a few minutes, then pulled back, sniffed and wiped her eyes.\n\n\"I'm such a baby,\" she said. \"And I ruined your birthday. I shouldn't have brought it up in the car. I was going to wait until this morning, but it kinda...slipped out.\"\n\n\"I got a super cool walking stick, two orgasms, and dinner with a beautiful woman. Best birthday in ages,\" I said. \"But yeah, in the future, no life-changing discussion while I'm driving, ok?\"\n\nShe nodded, took a deep breath, and let it out.\n\n\"So what now? I mean, do I ever go back to work after all of this? Would they even take me back?\"\n\n\"I think you go back. Be the bigger little girl,\" I said, which made her giggle. \"Say you appreciate the offer but you've thought about it a lot and you think it's better to go back to school and finish your degree.\"\n\n\"Michelle will be pissed,\" Kitten said.\n\n\"Yes, but if she's anything other than understanding, you let me know. And if she makes you feel like shit a few days down the line, just leave. Remember, they need you more than you need them. Don't be arrogant about it, but don't let anyone diminish your worth.\"\n\n\"Ok, Daddy.\"\n\n\"You've been cranky anytime I've mentioned school in the fall, but you've spoken to Gillian and everything is set, right?\" I asked.\n\nShe looked a little uncomfortable but nodded her head. I wondered if she had dropped out how she was going to explain that to Gillian. It would have been a shitty thing to do. If she had been determined to go through with dropping out, Gillian was one of the two, last resort pressure points I was considering using.\n\nThe other was her mom. I was relieved I didn't have to do it.\n\n\"Yeah, she found a place and she promises it'll be better than the last one. I might need to go to Montreal in a few weeks to find some furniture and whatnot. Do you think you can come and help?\" she asked.\n\n\"Of course,\" I said.\n\nShe sighed.\n\n\"I know it was a dream and silly, but the idea of being with you all the time, it was a nice fantasy to live in for a while,\" she said.\n\n\"I know. And I'm sorry to do it. I really am. But I'll help make this school year easier, including spending a few nights in Montreal in September if you think it won't be a distraction,\" I said.\n\nHer face brightened and she nodded her head. Good, that was easy enough to do. Then she got a serious look on her face.\n\n\"I don't like to threaten Daddy, but I expect you to support whatever I decide after I graduate. If I decide I just want to come back here and be with you, then understand I've thought about it and that's what I want,\" she said.\n\n\"And that's fine,\" I said. \"I will. But don't be afraid to dream big. If you want to go out to Hollywood and try and break in as a costume designer, I will come down there with you and we will both live in some shitty little apartment while you find work. Deal?\"\n\nOk,\" she said, shaking her head like I was a lunatic. Then she leaned in and kissed me. After the last 16 hours of drama, it was the best thing in the world.\n\n\"Sorry about teasing you about, you know, anal sex and then not delivering. But I'm still kinda all over the place right now and...\"\n\nI put a finger to her lips. \n\n\"When you're ready, you let me know and we'll take it from there. At least we won't be doing it while trying to get me hard for the third time in 12 hours,\" I said.\n\nShe laughed and got up. I knew she was going for another bagel as she could never have just one. She was at the doorway, turned to look at me, and pulled her nightshirt so I could see her bare ass.\n\n\"Trust me, Daddy. This would have gotten you hard again,\" she cooed, and then gave herself a little slap. Then she giggled and ran into the house before I could do anything. And, sure enough, I could feel my cock stirring.\n\n\"Damn she's good,\" I muttered.\n\n***\n\n(Friday, Labour Day Weekend)\n\nIt was Kitten's last weekend before heading to school in Montreal and she had been all over the place emotionally the last few days. She was sad to be leaving, cranky that I thought this was a good idea, but also excited to get back to classes and happy that Gillian was arriving on Saturday. She was going to spend a couple of days here, and then we would all head up to Montreal on Monday to move them in.\n\nThere had been a lot of drama. She was being brattier than normal. I'd tolerated it because it had been a rough month. Not just because I was 'forcing' her back to school, but Michelle and Ahmed did quite the passive-aggressive number on her. They said they understood why she was going to go back to school, but then increased her workload and criticized her results more. They were also suddenly too busy to drop her home at the end of the day, meaning I had to go and pick her up. It was no big deal, but it felt petty.\n",
        "I was getting deeply annoyed and was thinking of stepping in, but Kitten said she could handle it. And she did. She finished last Saturday. She got all the costumes done, despite putting in some extra, unpaid hours. And even did a wedding on her last day. At the end of it, Michelle dropped her off at the house, gave her a check, said something to her that Kitten still wouldn't talk about, and drove off.\n\nI could have cheerfully driven over to their house the next day with the cane containing the sword, but Kitten talked me out of it. It was over, she needed to get ready for school.\n\nSmart little girl.\n\nI decided to deal with her unhappiness by taking her shopping for new clothes before going back to school. She'd been complaining that I'd been fattening her up all summer, and yes, she had put on a few pounds. If I felt like being suicidally honest with her, I could have told her that some extra weight suited her. She'd always been on the thin side. \n\nNormally she grumbled at me spending money on her, but I'd been good since Disney and had been limiting my spending to the occasional supper out. Plus she didn't have time to make clothing for herself and needed some new underwear. \n\nSo off we went to downtown Kingston with my credit card.\n\nI figured this would be a good time because as far as I knew, most girls like torturing their man by making them go shopping and commenting on whether something looked good on them. She'd get to spend my money, tease me, and get a new wardrobe. Solid plan.\n\nThe solid plan went off the rails from the start when she made me turn around five minutes into the trip because she had forgotten her purse. Trying to argue that I had my wallet with the credit card and that's all we needed didn't fly, so we had to turn around and get her 'purse'.\n\nPurse being a relative term, of course. Kitten had two kinds - small ones she could pop a bank card, cell phone and lip gloss in and her TARDIS bag. I believed it could be a TARDIS, as I'd seen some improbable shit come from that bag. But when you're a cosplayer, It was a handy thing to have.\n\nThe next thing to make the morning go off the rails was the horrific discovery that throughout the summer she'd gone up from a size 4 to a 6.\n\nThere are no calm and consoling words to tell a young woman that she's gone up a size, especially when she's in a design program. The size up was immediately attributed to me fattening her up all summer.\n\n\"I'm a Kitten not a cow, Daddy,\" she growled at me.\n\nI could point out I've seen some pretty chubby kittens over the years but quickly determined 49 was far too young to die.\n\nUnderwear shopping didn't get any better. Her chest size and cup size had gone up, so she was now a C cup. Unbeknownst to me, most women hate bra shopping. So visions of my girlfriend trying on different bras, modelling them, flashing me, and maybe dragging me into the change room for some fooling around...not happening. I did get a grumpy little girl complaining that nothing felt right because her boobs were now wrong but eventually settled on four new bras and a bunch of new panties.\n\nNormally I'd take her to our favourite restaurant, but decided maybe a bakery wasn't the place to go right now so I let her pick. She chose a sushi restaurant because I hate sushi and this was her way of acting out some more.\n\nI picked at some vegetarian sushi and she ate her...raw fish. At least it seemed to cheer her up a bit. I was fairly frustrated with her at this point. I thought some shopping would cheer her up. She was going away in a few days. I knew she was disappointed and it wasn't going to be easy for either of us, but I didn't want her going back to Montreal cranky and pissed. I needed to find some way...\n\nThen it hit me. Because I'm an idiot.\n\n\"Hand me your bag,\" I said. She looked startled, then sheepish. I thought she might argue, but then she handed me the bag she'd made such a fuss over earlier.\n\nI looked inside. Just as I thought, she came prepared today. I'm sure some of her behaviour from earlier was genuine frustration at the weight gain, and yeah, I'd learned my lesson about bra shopping. But some of it was her looking for trouble and wanting me to discipline her.\n\nI had my back to the wall and a clear view of the restaurant. I looked around. The place was mostly empty and no one was looking at us. So I very deliberately began pulling items out of the bag and putting them on the table.\n\nI pulled out a summer dress she had stashed in there. She was currently wearing jean shorts and a t-shirt. Next on the table was a bottle of lubricant. Kitten's eyes got wide when she realized I was leaving it on the table for anyone to see. She started to look around when I corrected her.\n\n\"Eyes on me, Kitten,\" I said. She listened but fidgeted.\n\nNext out was a vibrating egg for her pussy, the one that synced with my phone. Then I pulled out a butt plug. There was no tail with it, but it was about as big as the one I saw earlier the month at the pool.\n\nFinally, I pulled out a set of kitten ears and a collar. The ears were fairly basic and she wore them semi-regularly. Kitten was wearing her three-ring daytime collar. This was a thin leather collar with a bell around the neck. She could walk without making any noise, but it wouldn't be easy.\n\nThey were all sitting on the table and Kitten was nervous. She desperately wanted to see who was nearby, but I was staring right at her and she couldn't spare a glance.\n\n\"These just happened to be in your bag, Kitten?\" I said.\n\n\"Uh-huh,\" she said, unconvincingly.\n\nI drummed my fingers on the table for a moment, mostly just to drag out her anxiousness. \n\n\"Take everything that's on the table and go into the bathroom. You're to put in the egg, the plug, change collars and put on this dress. You can keep either your bra, or your panties, but not both,\" I said. Her eyes got wide and it looked like she was about to protest.\n\nI swiped open my phone and tapped on the timer. \"You have five minutes to do this, starting now,\" I said and hit the button.\n\nKitten quickly weighed wasting time arguing with me about my instructions versus the consequences of not getting everything done. She scooped everything off the table and moved quickly towards the bathroom.\n\nI tried to be a good Daddy to Kitten and in many areas, I succeed. I care for her, help her when she needs to make decisions, and protect her when people try to take advantage. I liked doing those things.\n\nBut sometimes I fail to realize that not only did she need discipline, but she also wants it. She described it as this uncomfortable knot of tension in her chest and stomach that all the coddling and protection in the world couldn't properly untie. Sometimes, she just needed to be told she was a brat and punished. Not with cruelty. Not viciously. And not with me doing it in anger.\n\nShe needed to be shown love by being punished. I read up on it and while it was still a challenge for me sometimes, I knew that's what she needed. And after the work drama of last month, going back to school, and being away from me, I bet she had a big knot of stress she needed to release.\n\nAnd the way that worked best for her was some public squirming, some bondage, and then a good hard fucking. \n\nWell, Daddy was here to help. \n\nI glanced at my phone, and time was disappearing quickly. I had a clear view of the bathroom and with about nine seconds left, the door opened and she stepped outside.\n\nShe was, of course, amazing. It was a yellow dress that buttoned up the front and had a belt around her waist. It was a tight fit, but only in ways that flattered her. Her face was flushed as she moved towards the table and I could tell she was still adjusting to the toys inside her. She managed to make no noise with the collar until there was a gentle ringing noise as she sat down. She handed over her t-shirt, shorts and panties. Interesting choice. She was going to have to focus to make sure there wasn't an...accident.\n\n\"Did you do as I instructed?\"\n\n\"Yes, Daddy,\" she said. There was, impressively, still a hint of a brat in her tone.\n\n\"I guess we'll see,\" I said, and took my finger and swiped it up across my phone's screen. Too late she realized I'd changed apps and what that motion would do.\n\nI couldn't hear the egg buzz inside her pussy, but her eyes immediately widened, her hands slammed down on the table with her fingernails trying to dig into the wood. She quietly gasped and the bell on her collar made a little more noise.\n\nShe moaned and I could see she was shifting in her seat, but she hadn't asked me to stop yet. I was almost tempted to see if she would cum in the restaurant, but then I flicked the egg setting to a lower level. She groaned again and tried to catch her breath.\n\n\"So, here's what's going to happen,\" I said, pretending that she hadn't almost just cum in a sushi place, \"we're going to finish here, and then we're going to walk to the comic book store. I haven't gone in a couple of weeks. It's about a 10-minute walk. Can you manage that?\"\n\n\"Yes Daddy,\" she said, although she didn't sound confident.\n\n\"After that, I'm going to stop and get a burger or something because after this I'll need something else. You're going to walk in and get that for me. I'll be waiting in the car.\"\n\nShe groaned.\n\n\"At no time during any of this are you allowed to cum. Do you know why?\"\n\n\"Because I've been an ungrateful brat, Daddy,\" she said. Not a question.\n\n\"Yes, you have. And I know it's been a hard couple of weeks, but that's not an excuse for this kind of behaviour. And you do know what the punishment is if you don't obey me for the rest of the day?\"\n\n\"No Daddy,\" she said but looked curious about what new tortures I might dream up.\n\n\"I'll just stop,\" I said. \"I'll turn off the app, and hand you back your t-shirt and shorts and we're done. Just like that. But you know you deserve to be punished, and I think you're a responsible enough little girl to take your punishment.\"\n\n\"I will, Daddy,\" she said, looking very serious. \n\n\"Hurry up and finish your sushi, then let's get going,\" I said, nudging the vibration in her egg up a notch. She stiffened, smiled, and popped a piece in her mouth.\n\n***\n\nShe took her punishment over the next couple of hours with good grace. I didn't want to actually humiliate her in public; I'm not that much of a bastard. But the knowledge that I might had the desired effect on her.\n\nSo while walking around the comic book store I turned the egg up a notch, just so she was aware while walking around. We knew the people behind the counter and they were always good to chat with; it was one reason I picked the store. If they noticed anything different about Kitten, they didn't say anything. But one of them did talk to Kitten for 10 minutes about cosplay tips. Watching Kitten struggling to keep a straight face was delightful\n\nWe also spent a good 30 minutes walking around looking at things. Once, when out of sight of the cash, I walked up behind Kitten, lifted her skirt from behind and pushed in on her plug. She groaned, and instead of trying to get away from me, or scold me, pushed back into my hand.\n\n\"You like that, princess?\"\n\n\"Yes, Daddy,\" she said quietly. \"I like it a lot.\"\n\n\"Good girl,\" I said, dropping down her skirt.\n\nAfter we hit a Dairy Queen. I parked in front so I had a clear view inside. There was no one sitting down and, since it was about 3 in the afternoon, there wasn't much staff. \n\n\"A burger and a milkshake. Do you want one?\" I asked.\n\nShe looked pissed. Asking someone who spent the morning bitching about weight gain if they want a milkshake is not nice. I was impressed she was still that bratty. I shrugged, took out the phone and set the vibration levels to a low-moderate setting. She jumped, took a moment to compose herself, and then carefully got out of the car.\n\nShe went in and I could see her place the order. A girl served her and she glanced over a few times while putting things together. When no one was looking, I turned off the vibration in her egg. I could see a puzzled tilt of her head then I turned it back on at a moderate level and pulsing. She practically jumped out of her skin. She spun around, leaned on the counter, and looked at me with a mix of frustration and desperation. She found her phone and quickly texted. My phone buzzed.\n\n\"Will cum 20 secs if not stop.\"\n\nI looked at her and made a big gesture of looking at my watch. She leaned back against the counter and I could tell she wasn't kidding. About 10 seconds after the text, I switched it off. She sagged against the counter, and I couldn't tell if it was relief or frustration. She collected the order and I got out of the car to hold the door open for her.\n\n\"You are the meanest Daddy ever,\" she pouted getting into the car. She put the food on my seat and the milkshake in a cup holder.\n\n\"Not yet,\" I said. I reached down and removed the belt on her dress. She was startled but I gave her a look and she didn't interfere. I used the belt to bind her hands and then pulled them up so they tucked under her chin. Finally, I looped the remainder of the belt around her neck and tied it in a loose knot. I left a little bit dangling down, within reach of her hands.\n\nI was being sadistic, but I didn't want her helpless. She could pull on it and free herself in an emergency. I leaned over and clicked her seatbelt into place.\n\n\"Are you ok, Kitten?\"\n\nShe was panting, but nodded.\n\nI walked around and sat back in the driver's seat. I glanced over and she already looked like a delightful mess. I reached over and undid all the buttons but one. Enough that she wasn't flashing the world if someone drove past, but very exposed to me.\n\n\"Are you helpless, Kitten?\" I said, starting the car.\n\n\"Uh-huh,\" she whispered.\n\n\"I guess I better do the speed limit driving home. Safety first.\"\n\n\"Daddeeee...\" she whined.\n\nI took my phone and clicked it in a holder where she could see the screen. I left the egg app open. I picked the moderate setting for a steady vibration. She groaned and opened her legs.\n\n\"Don't worry, Kitten. I should be able to get us home in about 30 to 40 minutes. I'm sure you'll be able to not cum,\" I said.\n\n***\n\nIt was an equally torturous 30-minute drive home. Despite my temptation to floor it and get us home in 20 minutes, I stuck to the speed limit to punish her. She found new ways to punish me for sticking to the speed limit. That included exposing the maximum amount of skin she could without getting naked.\n\nIt also included a lot of moaning, quiet pleading to please let her cum, and lifting her hips regularly, so I could see just how wet her pussy was.\n\nIt was a small miracle I didn't drive the car off the road. By the time I finally pulled up to the back of the house, the notion we might do anything other than fuck on the hood of the car seemed ridiculous. I got out, opened her door, untied her, and helped her up. Her legs were shaking so she put her arms around my neck to keep herself steady.\n\n\"I'm sorry I was a brat, Daddy,\" she said, panting. \"Do you forgive me?\"\n\nI growled and pulled her dress the rest of the way open, sending a button flying somewhere. As I pinned her against the side of the car, my hands went to work on her bra as I leaned in and kissed and bit her neck. I could feel her melt into me and I knew it was just going to be another moment and I was going to move her onto the bonnet of the car. There was no way either of us could wait any longer.\n\nExcept, incredibly, she could. I felt her hands move from my neck and gently push back on my chest. It was so surprising that I stopped what I was doing, stood back, and looked at her.\n\n\"Please, Daddy,\" she said. \"You know what I need. I've been waiting all summer to try, and I want to now. But I need a few minutes to get ready first. Please.\"\n\nI took a few deep breaths to regain control. I nodded. I couldn't tell if she was relieved I was going to give her time, or disappointed I wasn't throwing her on the hood of the car.\n\n\"Go get ready, Kitten,\" I said.\n\nShe nodded. \"I'll be just 15 minutes, Daddy.\" She then dropped her dress and bra on the ground, giving me a good look at her body. She was flushed and I could see how wet she was. Then she turned around and gave me a good look at her ass and I could see the jewel in the plug in the sparkle in the sun.\n\nI placed one hand on her shoulder and the other on her ass. She pushed her hips back. I leaned in and whispered in her ear.\n\n\"One second after 15 minutes and I come into the bathroom looking for you, Kitten. Understand?\" I whispered in her ear.\n\nI felt a little shudder going through her.\n\n\"Yes, Daddy.\"\n\nI swatted her ass, but not hard. Motivation.\n\n\"Fifteen minutes starts now.\"\n\nShe wiggled her hips and sprinted inside. She knew I was tolerant of her stretching time to get ready, but that wasn't going to happen in this case. I doubt she wanted it either.\n\nI leaned back against the car to catch my breath for a second. I had a brief flash to the doctor saying they couldn't give me Viagra if I had a heart condition. I didn't, but that little girl was on her way to giving me one.\n\nI snapped out of it and went inside. If Kitten needed time to get ready, so did I. This was going to be a new experience for me as well, and ever since I realized this was something she wanted to try, I'd been preparing. I walked into the bedroom and shed the rest of my clothing. \n\nI grabbed a bunch of pillows for her hip and head, and some lube out of the bedside table. Finally, a small, but powerful vibrator for her clit.\n\nThen I tried to calm down. My frustration over her brattiness this morning, punishing her for a few hours, coupled with a car ride that was torture for both of us, I felt like a 15-year-old. The last thing I needed was to be aggressive or frustrated. I could hurt her if I wasn't careful.\n\nI spent the last five minutes waiting for her just getting myself mentally ready. And then because she likes to make an entrance, a few seconds before her time was up, the door to the bathroom opened and I heard clicking. She came out wearing black thigh highs, a pair of red shoes with a modest heel on them, her collar, and nothing else.\n\nShe walked over to me, keeping her head down. I was sitting at the bottom edge of the bed.\n\n\"I'm sorry I was a brat all day, Daddy,\" she said. \"Is there anything I can do to make it up to you?\"\n\n\"You can start by sucking my cock,\" I said, keeping my voice firm, but not mean. \"Daddy's had to wait for you to get ready.\"\n\nShe sank to her knees and began stroking my cock, before taking her tongue and running it along my balls.\n\n\"I'm sorry, Daddy. But I'll make it up to you, I promise,\" she said, before taking my cock in her mouth and slowly bobbing up and down on it. It's not like I'd gotten soft in the last 15 minutes, but it's also not like I was going to pass up one of her blowjobs.\n\nHowever, it wasn't like one of her normal blowjobs. There was more urgency and less...polish than there normally was when she was sucking me. When I looked down I could tell she wasn't zoning out and she had one of her hands between her legs playing with her clit. She let out a desperate moan as she continued to suck on my cock.\n\nI gently pushed her back off my cock and for once she didn't resist. She sat back and looked up at me.\n\n\"Please, Daddy. I'm going to explode soon.\"\n\n\"Ok, Kitten. Hop up on the bed and...\" I started, but before I could finish she scrambled up on the bed and quickly positioned herself on her hands and knees with her ass up in the air.\n\nI laughed.\n\n\"Eager Kitten?\" I said, reaching up and spinning her around so that her ass was on some of the pillows I'd placed earlier. She looked a little confused.\n\n\"Trust me,\" I said, and then leaned down, parted her legs and began running my tongue along her pussy.",
        "\"Oh fuck, Daddy!\" she yelled, arching her back.\n\nNot that she needed much help getting warmed up and ready at this point, but I wasn't taking any chances. I also grabbed the bottle of lube, put some on my fingers and, while continuing to lick her, began slowly taking two fingers and rubbing around her anus. She kept moaning and grabbing the bedsheets.\n\nAfter a few moments of running my fingers around the rim, I gently began pushing them in. This was the moment I was worried about. How was she going to react when I put part of me inside of her? \n\n\"Fuuuuuuuuck,\" she moaned loudly as my fingers slipped inside and began moving back and forth. Fortunately, she'd lubed her ass in the bathroom so my fingers moved smoothly. She was tight, but the plug had helped her get used to anal play.\n\n\"I'm so close, Daddy. Please, you have to let me cum. Please Daddy, Please,\" she pleaded, moving her hips in rhythm to my fingers while grabbing my head and making sure I couldn't move away from her clit.\n\nAt this point, trying to stop would be torture for her. I also wanted her to have at least one orgasm to make her relax. I slipped a third finger into her ass, and then sucked her clit in my mouth and flicked it with my tongue.\n\nThe reaction was immediate. \n\n\"Oh fuck!\" she screamed, cumming hard. I could feel her ass clench around my fingers as my beard suddenly got wet. I grinned. I loved going down on her and I could tell that this one was intense for her. I'd been winding her up for hours. She needed to get this out of her system.\n\nAfter a few moments of profanity, twitching and panting I could feel her relax a bit. I kept my fingers where they were, but moved up to kiss along her thighs and around her stomach. I felt her hands on my head again, tilting it so I could look at her.\n\n\"I like some denial and edging, but you nearly killed me today, Daddy,\" she said.\n\n\"I say this with all love and respect, but you deserved it,\" I replied. She nodded, not willing to put up a fight. Then she got a strange look on her face.\n\n\"Now what, Daddy?\" she asked.\n\nI knelt between her legs and pulled my fingers slowly out. She moaned. It felt like my cock was breaking personal records for hardness. She reached out and began to stroke it. \n\n\"Last chance to change your mind, princess,\" I said.\n\nShe shook her head. \"I want it.\"\n\n\"Then lube up my cock,\" I said, grabbing the bottle and handing it to her. She quickly opened it poured out a generous amount and began rubbing her hands up and down my cock. I took the excess and put it around her anus. I was taking no chances. She was still a tiny thing, it was her first time, and I was paranoid about hurting her.\n\nShe bent down and quickly kissed the tip of my cock.\n\n\"I think he's ready, Daddy,\" she said. Then she reached down, adjusted the pillow under her hips, grabbed her knees, and spread her legs. \"So am I.\"\n\nI think I was more nervous than she was. She'd spent months getting ready and planning for this moment. I'd read about it. She must have seen I was still worried because she wiggled a bit.\n\n\"Stop worrying. I know you'll be careful and I'll tell you if it's too much. Come on, Daddy. Fuck your little girl in the ass already,\" she said.\n\nWell, when she put it that way...I grabbed the vibrator and laid it on her stomach. She smiled and turned it on. Then I positioned myself and began rubbing the head of my cock against her opening. It seemed impossible it would fit, but I could feel her relaxing when I began to slowly push in. Then the head of my cock was inside her.\n\nOne of the reasons I wanted to fuck her this way instead of doggy was so I could see her face. She might lie to me and tell me she was fine. But there was no hiding how she was feeling when I was looking right at her.\n\nBut she wasn't hurting. She wasn't in orgasmic bliss, but she was very focused on what was happening to her. I push my cock in a little further and her body tensed and she moved the vibrator down to her clit.\n\n\"Talk to me, Kitten. How are you doing?\" I asked.\n\n\"It's so...different. Full,\" she said in a dreamy voice. \"Keep going, Daddy. I'm gooood.\"\n\nI kept pushing my cock into her ass. She was tight, ridiculously tight, but the lube helped. I pulled back slowly and she moaned, and then pushed back in, a little further this time. I kept up that motion for a few minutes, burying myself deeper and deeper until my hips bumped up against her. I was fully buried inside her ass.\n\n\"Mmmmm, are you all inside of me now, Daddy?\" she asked.\n\nI gave an extra little push and she gasped, then smiled.\n\n\"How's it feel, princess?\"\n\n\"Weird. Full. But I think I like it. Fuck me, Daddy. I'll tell you if I want it harder, ok?\"\n\nI leaned and kissed her, and she made a little noise as I shifted inside her.\n\n\"I love you, Kitten. Reassuring your Daddy while he fucks your ass,\" I said, as I pulled most of the way out. I then poured more lube on my cock.\n\n\"And I love that my Daddy treats me like a princess. But right now, your princess needs to cum again.\"\n\nI could do that. I placed her legs on my shoulders and pushed into her ass. She gasped and then I heard the vibrator's volume go up a notch. Then I began moving at a steady pace. I'm not sure I loved fucking her ass more than her pussy, but I loved the taboo nature of it. I loved the look on her face as if she wasn't sure how to process it, but it felt good.\n\n\"M-more, Daddy. Harder now,\" she whimpered, moving the vibrator more frantically.\n\nI growled and adjusted again, bending her in two more and began fucking her harder. She closed her eyes, focusing on something she was trying to reach.\n\n\"Daddy's going to be fucking you ass a lot more from now on, Kitten,\" I said. Her eyes shot open. \"I like your ass. I'm going to be using it all the time.\"\n\n\"Fuck Kitten's ass, Daddy. P-please. Kitten wants you to cum in her ass.\"\n\nMy pace became more erratic and I knew I wasn't going to last much longer, but I was trying to hold on for her. I needn't have worried.\n\n\"Right there, Daddy! Kitten's right there, right there, oh Fuck!\" she screamed, arching her back and cumming. Her ass tightened around my cock and then it was a lost cause for me too.\n\n\"Jesus!\" I yelled and came inside her. Her legs slipped off my shoulders and it took an effort to not collapse on her. We were both in our own little worlds for a few moments from the intensity of the situation.\n\nFinally, I opened my eyes and looked at her. She was spacy like she always did after an intense orgasm, but she was also smiling.\n\n\"You ok, princess?\" I asked. She giggled like I was a silly man.\n\n\"I just had a fucking aaaaamazing orgasm, and I made my Daddy very happy. So I am very, very good,\" she said.\n\n\"Good, I'm glad,\" I said.\n\n\"Although, boy, are you patient with me. I've been trying to wind you up all week and it took today before you snapped. You put up with way too much bad behaviour,\" she said.\n\n\"I'll know better next time to not be as patient with you, especially with this as a 'punishment',\" I said. I could feel myself getting ready to slide out of her ass. \"Are you ready?\"\n\nShe nodded, and then I slid out. She squeaked.\n\n\"Oh god that feels so weird,\" she said, rolling over to the side of the bed and then standing up a bit too quickly. She wobbled, but managed to catch herself and walked bow-legged towards the bathroom. \"I'm going to be walking weird for days after that.\"\n\n\"It'll give Gillian something to tease you about,\" I called out.\n\n\"Do *not* tell her why,\" she said, giving me a warning look. Like there was any chance of that.\n\n\"I love you, Kitten.\"\n\nShe paused by the bathroom door and smiled.\n\n\"I love you too, Daddy,\" she said. Then she had a funny look on her face. \"Gotta go.\"\n\nShe then moved inside the bathroom quickly and slammed the door.\n\n***\n\nThe next day we were at the train station waiting for Gillian to arrive. You'd have to look closely to see any difference in how she was walking, but my swat on the ass in the morning to get her out of bed was not warmly received. Which, fair enough.\n\nMore importantly, she was in a better mood. She was looking forward to seeing Gillian and getting back to school. The discipline and the fucking seemed to have snapped her out of her funk. Enough that, after some prodding, she finally told me what Michelle said in the car on her last day of work.\n\n\"She said she was sorry,\" Kitten said. I looked skeptical and she shrugged her shoulders. \"It's what she said. She apologized for being a bitch the last month and didn't mean to try and screw up my future. She could see now it wasn't a great idea and that hoped we were ok.\"\n\nI was skeptical about the apology, but Kitten was more chill about it.\n\n\"I said I appreciated everything they did for me the summer and we're good. I know what you're thinking, but perhaps they made a misjudgement and it wasn't some conspiracy to screw up my life. I'm letting it go. You should too.\"\n\nI stood back, looked at her and smiled.\n\n\"My little girl. All grown up and being all magnanimous.\"\n\n\"Well, not too grown-up, I promise,\" she said. \"Plus, I dunno, I want a fresh start to this school year. I'm going to miss you a lot and that's going to be hard enough. I don't need to take extra drama to Montreal with me.\"\n\n\"Very wise,\" I said, as the train pulled into the station.\n\n\"Damn right,\" she said, smiling.\n\nThe doors to the train opened and the passengers began coming out. Finally, we could see Gillian getting off the train, carrying a huge backpack. She turned and said something to someone behind her. She got off the train and began walking towards Kitten. Behind her came a young Korean woman with a purple streak in her hair.\n\n\"Hey Kit,\" she said, hugging her roommate. \"Sorry about being so antisocial over the summer, but, um, I had a good reason...\"\n\n\"Oh yeah?\" Kitten said.\n\n\"Yeah, so um, this is my girlfriend, Soo-Ah,\" she said, introducing us.\n\nKitten wasn't freaked out. She smiled and hugged Soo-Ah.\n\n\"It's so nice to meet you! I'm glad Gillian met someone so she can stop being such a grumpy bitch,\" she said.\n\n\"Well, she's still a grumpy bitch, but she's my grumpy bitch,\" Soo-Ah said. I liked her already as I could see Gillian turn red. \"I'm so glad you're ok with me crashing with you guys at the start of the year.\"\n\nKitten, to her credit, did not let on that this was the first she was hearing about it. Gillian looked mortified that she hadn't managed to get that little fact out yet. When they were fussing with their bags I leaned over to Kitten and whispered.\n\n\"Nope. No drama at all,\" I said.\n\nShe gave me a dirty look and I laughed. Then we gathered their stuff and headed to my car."
    ],
    "authorname": "thanagar",
    "tags": [
        "older man",
        "younger woman",
        "ddlg",
        "romance",
        "daddy",
        "anal",
        "romantic"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/little-packages-ch-07"
}