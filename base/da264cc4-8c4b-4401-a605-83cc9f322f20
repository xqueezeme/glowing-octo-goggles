{
    "title": "The Obsession: Epilogue",
    "pages": [
        "Dear readers \n\nThank you so much your support, comments and emails. You have earned a special place in my heart, and you are the reason why I wrote this epilogue. Halloween is my favorite day of the year and though gift-giving isn't the usual for this special season; neither am I. That said, here is my gift to you for taking this journey with Magnus and Cassie. \n\nI hope you all enjoy it. \n\nZ \n\n***** \n\nI \n\nMagnus typed furiously as he entered the notes from his last patient into their file. As he neared the last paragraph, he heard an impatient knock at the door. He stood up to answer it just as Annette burst her way into his office with a large shopping bag. \n\n\"Are you trying to make yourself late? She asked, visibly annoyed. \n\nHer hair was parted in the middle and flowed in large chestnut waves, framing her heart-shaped face in a glamorous nineteen-thirties style. She wore an elegant black strapless gown and deep red lipstick. She looked flawless. \n\n\"You look lovely as a brunette. What made you decide to color your hair?\" Magnus asked. \n\n\"It's a wig.\" She answered with growing annoyance. \n\n\"You have no idea what today is, do you?\" She asked with crossed arms. \n\nMagnus thought for a second before sinking back into his chair. He rested his elbows on the desk as his head fell into his hands. \n\n\"Shit...\" He uttered, disappointed at himself. \n\n\"Wow.\" Said Annette as she shook her head in disbelief. \"You're lucky you've got a lot on your plate, with the new practice and all. If it weren't for that, I would have let her tear you a new one.\" \n\nShe said as she walked over to his desk. \n\n\"But, being the incredibly selfless and benevolent partner that I am; I've decided to have your back yet again.\" \n\nShe placed the large bag onto his desk, and Magnus peered inside of it. His face lit up with joy before he stood up and circled his desk to throw his arms around Annette. \n\n\"You amazing little miracle maker! What would I do without you?\" He hugged her warmly as she chuckled at his appreciation. \n\n\"Darling, you'd simply perish.\" She said in a dramatic Hollywood-esque voice as she held a pretend cigarette between her fingers. \n\n\"Wait- are you in costume?\" He asked, trying to place where he may have seen her look. \n\n\"Isn't it obvious?' She said, exasperated. \"Hold on.\" \n\nAnnette pulled a gold medal which dangled from a bright red ribbon out of her purse. She placed it around her neck and posed proudly with one hand on her hip, the other clutching the imaginary cigarette. Magnus leaned towards her and lifted the medal from her chest to read it. \n\n\"Wisconsin State Spelling Bee Champion Nineteen-\" \n\n\"Forget about what the medal says.\" She interrupted. \"It's supposed to be a 'National Inventor's Hall of Fame' award anyway. \n\nNow use your imagination. Who am I?\" \n\nMagnus stepped back and viewed her ensemble once more. \n\n\"I'm sorry... not a clue.\" \n\n\"Oh!\" Annette exclaimed as she swatted his arm. \"I'm Hedy Lamarr! Dammit, I thought it was dead on.\" She said, feeling a little defeated. \n\n\"No, no- it's a wonderful costume. Look at how glamorous you are! \n\nIt's my fault, really. \n\nI don't know much about her, so I couldn't see it. \n\nBut I bet someone who has seen her movies might.\" He assured. \n\nAnnette crossed her arms and huffed, still a bit disappointed that her costume wasn't immediately recognized. \n\n\"The medal is a nice touch. I bet we could make a label on clear plastic that says 'Inventor's Hall of Fame' on it.\" He continued, hoping to quell her disappointment. \n\n\"It... could use a label... I guess.\" She conceded. \n\n\"Here...\" He grabbed the label maker off his file cabinet and handed it to her. \n\n\"There should be a clear plastic roll in my desk, help yourself while I go try this on.\" Magnus took the large bag from his desk and headed off to the restroom down the hall from his office. \n\nAnnette sat behind Magnus' desk and quickly found the small roll of plastic strip inside his desk drawer. It had only been four months since Magnus had decided to open his own practice and there they were; already settled into their own floor within the bustling office complex. It was so typical of Magnus to excuse himself instead of simply asking Annette to wait in her office for him while he dressed in his. \n\n'Classic Magnus.' \n\nShe thought as she finished up the label for her medal. It seemed like just a few days ago they were working doubles trying desperately to meet the deadline to submit their findings on the case study. And now here they were; successful and triumphant in their applied style of therapy. As a team they were unstoppable in their quest to therapeutically heal those whom medicine had failed. They were quickly on their way to becoming the two top therapists of the region, and Annette was confident that they would reach the top listings of the state within the next year. And who would have thought that through him she would find her most cherished companion and partner in crime. She looked down at the picture of her best friend on his desk and smiled. \n\n\"Um... I think this shirt is perhaps a little too tight.\" Magnus said upon reentry. \n\nAnnette giggled at a blushing Magnus as he surveyed the snug fitting, beige button up shirt. \n\n\"I'll be quite embarrassed should any cool air reach my chest.\" \n\nAnnette continued to snicker. \"It's perfect. Trust me. That's how they wore them back then.\" She assured. \n\n\"So... what made you choose a cowboy costume?\" He said, placing a tan stetson upon his head. \n\nAnnette looked at him, dumbfounded. \"You don't know who you are either?\" \n\n\"I'm not a cowboy?\" He asked, quizzically. \n\n\"You're more than just a cowboy! You're The Rifleman!\" She exclaimed. \n\nMagnus looked at her and shrugged, unsure of whom she was talking about. \n\n\"Chuck Connors... remember? Angela said you looked like him the first day she saw you?\" \n\n\"Oh... right...\" Replied Magnus, his expression making it painfully obvious that he still hadn't a clue of whom she referred to. \n\nAnnette exhaled deeply as she searched her phone for an image of Chuck Connors. \n\n\"There.\" She held out her phone for Magnus to view it. \"That's him.\" \n\n\"Well... I don't see much of a resemblance, but the clothing matches perfectly.\" He noted. \"You've done an excellent job.\" \n\n\"It took me three weeks to track down every last piece, from the cowboy boots to the old fashioned straight-leg jeans- and your measurements did not help.\" She said, recalling the late nights spent agonizingly searching amazon. \n\n\"You're too good to me, Annette. Thank you.\" He said warmly as he adjusted the cuffs of his shirt. \n\n\"I know. Consider it an early Jul gift.\" She winked. \n\n\"I will be sure to find something nice to repay your generosity.\" He assured. \"Do you really think I look like this guy?\" He asked before puffing his chest out and squaring his shoulders in his best rugged cowboy impression. \n\n\"Hmm... you've got the golden galoot look down, but you're a lot prettier in the face.\" \n\n\"Too pretty?\" He asked, peering into the small mirror on his wall. \n\n\"Darling, there's no such thing as too pretty.\" She replied in her dramatic starlet voice. \n\n\"Now hurry up and shut down your office so we can get going! We still need to pick up your custom made prop gun. I didn't get home in time yesterday to sign for it, so it's at the post office. C'mon- chop, chop!\" Annette said as she hurried out to tell their receptionist that they were leaving for the day. \n\nMagnus and Annette arrived at the country club with ten minutes to spare. Magnus rushed to retrieve the prop rifle from his trunk as Annette straightened out her gown. While the valet drove off to park Magnus' car, the pair surveyed the lush gardens of the palace-like club. \n\n\"I'm getting cold feet... this place is so ritzy. I forgot how intimidating it is! What if I trip on the way in? The split in this dress goes up to my thigh- what if I get a run in my stalking? What if I snort-laugh?\" \n\n\"You'll do fine. Just you being here means so much. You know that.\" Magnus said, comforting his nervous partner. \n\n\"Well... too late to turn back now.\" Said Annette, taking Magnus' arm. \n\nThey made their way past a magnificent cherub fountain and up the marble stairs. A deep red carpet lined the hallway leading to the ballroom. As they were about to enter the ballroom, a very petite man dressed as Prince circa \"Purple Rain\" rushed up to them. \n\n\"Oh no you don't!\" He huffed as he approached them. \"Magnus, right?\" \n\n\"Yes. Are we late?\" Magnus inquired. \n\n\"Just. In. Time. Had you taken two minutes longer, we would have had a disaster on our hands! \n\nI'm Angela's cousin, Armando. \n\nI've heard nothing but nice things about you both but there's no time for pleasantries as we are seconds away from grand entrance- now come along, let's get you both to your proper entryways!\" He ushered them down the hall, primping Annette's hair along the way. \n\nThe ballroom was vast and elegant with an ivory white seating area just after the large, silk curtained glass doors. The dining area wrapped around a huge dance floor which was covered in cream colored granite slabs. In the rear of the ballroom, two small staircases lay opposite one another. Lush red carpet adorned the stairs and traveled across the rear of the ballroom until they joined each other, creating a red \"T\" that extended downward; ending at the dance floor. An intricate circular medallion insert was centered on the granite dance floor; this was where Armando stood. \n\n\"Ladies and gentlemen, welcome to the first annual Lady Lee-Epson Hollow's Eve Costume Ball Memorial!\" Announced Armando as the guests began to rise from their seats. \n\n\"I am Armando, your gracious announcer and music master for this evening...\" He paused, allowing the guests to applaud. \"...and I don't just speak for myself when I say that I am honored that you have all decided to join us for this very special evening! Now without further ado, let's meet our aristocrats of the evening!\" \n\nThe doors at the top of both small staircases opened to reveal Jack on one staircase, and Ayana on the other. Jack wore red slacks with two golden strips of silk trailing up each pant leg. His long white blazer was adorned with gold cording and brass buttons. The red mock collar and golden-tasseled epaulets of the blazer were extremely well crafted. \n\nAyana wore an aqua-blue tutu with matching leotard. Around her waist was a thick golden belt with an intricate lace-like pattern cut into the leather. Her aqua tights sparkled and her silver slippers were all but covered by large, puffy faux fur boot cuffs. Her hair had been braided down to accommodate a bright blonde wig which was styled into two ponytails which were twisted into buns. Clipped to the buns were long, brightly colored plastic tubes; each about an inch thick. The tubes were assorted in light blue, royal blue and silver varieties. Ayana's favorite feature of the costume was the aqua blue lipstick that she was allowed to wear for the event. The little girl beamed as she walked down the stairs just as she had practiced earlier with Papa Jack. \n\n\"Kicking off the event, we have Angela Lee-Epson as The Electric Fairy as played by little Miss Ayana Jones. She is accompanied by Prince Charming played by Mr. Jack Epson.\" \n\nAyana daintily made her way to Jack and took his hand, as she wasn't quite tall enough to take his arm. The crowd cheered as they made their way to the dining area. Ayana had never felt so special and for the first time in quite a while, Jack was absolutely joyous. \n\nThe doors atop the stairwell opened once again. \n\nMagnus was paralyzed by the sight of her. She was wearing a red corset which came down to a \"V\" point over a narrow, faux cheetah skin loin cloth that fell past her shins and ended just short of the floor. Tiny black feathers lay over long, extravagant golden ones. The layered feathers began mid thigh, where the loin cloth ended and circled her hips until they reached the strip of faux cheetah skin in the back, which covered her rear. \n\nLong, red hand-less gloves stopped at her upper arms where they were decorated with more tiny, ebony feathers. Strapped to her shoulders were large feather layers similar to the ones that lay on the outside of her hips, but the layer of golden feathers were dramatically long and arched backwards creating an extravagant collar. \n\nHer hair was styled into micro twist locks which fell to her waist. Long, metal lace beads were fastened along four locks; two each on either sides of her head, which lay close to her face. Her lips were blood red. Magnus would have been amazed at how her outfit perfectly matched the red carped she walked upon, had he not been completely hypnotized by the swaying of her hips as her legs disappeared and reappeared with every step. \n\nShe was halfway down the stairs when he realized she was mouthing something. He focused on her crimson lips and made out the word 'walk'. She was saying it over and over again until he realized that she was referring to the fact that she was halfway down the stairs, and he had yet to take a step. \n\nMagnus swiftly caught up with her and met her in the center of the carpet. \n\n\"Next we have Acacia Afrikanis as played by Mrs. Cassie Davis-Bjornssen. She is accompanied by The Rifleman Lucas McCain, played by her husband Mr. Magnus Bjornssen.\" \n\nWhistles could be heard through the applause, and Magnus couldn't really blame them. She was stunning. She smiled demurely. He offered her his arm, and she took it. \n\n\"The gardens, one hour.\" Magnus said just loud enough for only Cassie to hear. \n\n\"Where?\" She questioned. \n\n\"The white pavilion where we said our vows.\" \n\nCassie nodded as a noble would. \n\n\"Agreed.\" She said quaintly as they approached the dining area. \n\n\"Sebastian Bach as played by Mr. Jason Colbert accompanied by Legolas meets Will Turner, as played by Mr. Alexander Lee.\" \n\nCassie and Magnus joined Jack and Ayana and cheered for Angela's brother as he and his extremely handsome young date walked the red carpet. Alex was dressed as announced, a mixture of the pirate and the elf character. A bright red Renaissance era jacket with black trim and large gold buttons. White ruffles peeked out from his cuffs and collar. He wore a platinum white wig which dazzled against his golden skin, and silver-blue contact lenses. He looked to be in his thirties, his skin was just as supple and flawless as his sister's was. His rock star date donned a natural strawberry-blonde mane. It was obvious that they were co-workers; as they both had the telltale muscular physique of male dancers. \n\n\"There's your vampire.\" Magnus said to Cassie, referring to the ageless pirate-elf. \n\n\"I'll say.\" Cassie answered, astonished at how easily Alex could have been mistaken for one of the youngest men in the room, when in fact he was one of the oldest. \n\nAnnette and her date made their way down the stairs. She took one look at her date in his brown tweed blazer and bow tie and was immediately certain that she had made the right choice in asking the pediatrician to the ball. His deep brown skin accentuated his chiseled Guyanese features. His thick, jet black hair had been parted at the side, adding to his classic look. She couldn't help but stare at his thick brown lips as he curled them into a smile. He didn't notice anyway, as he was busy eyeing Annette's slender feminine figure as she approached him. \n\n\"Dr. Dharry.\" She greeted with a courteous bow. \n\n\"Dr. Who.\" He corrected with a bow of his own. \n\nAnnette took the arm of the handsome doctor as they were announced. \n\n\"You look positively radiant, Annette. I'm honored to be your date, you've done Hedy Lamarr some justice.\" He said as Annette blushed and unintentionally squeezed his arm. \n\nAs the last of the special guests made their way to the dining area, The lights began to dim and a large spotlighted frame was lowered from the ceiling. \n\n\"And what would tonight be without our guest of honor? Ladies and gentlemen I present Wonder Woman, as played by our dear Angela Lee-Epson; who joins us tonight in memory and spirit.\" Armando paused for a moment to collect himself, as he pushed back the tears and smiled lovingly at his life size painting of Angela. \n\n\"I love you Angie, I hope I've made you proud.\" Armando whispered to the image of his departed cousin. \n\nThe guests gave a standing ovation to the beautiful, full body portrait. The painting displayed Angela in her twenties, wearing the trademark star-spangled hot pants and red bustier top synonymous with her favorite heroine. Her arms were curled as she flexed her biceps strong and proud, showing off her large bracelets. She was the embodiment of the amazonian. Her golden-brown skin was kissed by both her Korean and African blood. \n\n\"That's my Archangel.\" Said Jack, holding Ayana so that she had a clear view of the painting. \n\nCassie wrapped an arm around Jack as he held her daughter. He smiled to himself. He never thought he would survive losing the love of his life but here he was, surrounded by the family who had helped him through the worst tragedy he had known. Even in death Angela was taking care of her Jack and her Cassie- the annual ball was her dying wish, as she knew the only way they would avoid becoming emotional wrecks every year on her birthday was if they were together. \n\nAngela's will stated that half of her estate would go directly to Jack, one quarter to Cassie and Hedy, and the other quarter would go into a trust that would be used to fund an annual ball in her honor where costumes were mandatory. She had chosen the palace-like country club that she had held Cassie's wedding at for two reasons: the first was that it would be nearly impossible for the blushing bride to be miserable when she was surrounded by memories of the most magical day of her life. The second reason was because Jack loved annoying snobbish people, and what better way to do so than to hold a costume ball at the area's most exclusive club where the waitress at Jack's favorite pancake house got a golden invite; yet the elitists who pandered to the successful land owner and investor and his model-turned- mogul wife did not. \n\n\"Hey kiddo...\" Jack said to Ayana as he put her down. \"What do you say we go check out that chocolate fountain and see what kind of desserts we can dip in there before we get in trouble?\" \n\n\"Come on Papa Jack!\" Squealed Ayana as she ran off towards the dessert table with Jack chuckling behind her. \"Daddy said I could eat whatever I want tonight because I'm a fairy princess!\" \n\n\"Guess you don't have to tell her twice!\" said Jack as he hurried towards the enormous fountain. \n\nCassie glared at Magnus who looked away, whistling as he pretended to admire the intricate design of the sculpted ceiling. \n\n\"I'm looking right at you.\" She said to him, playfully annoyed. \n\n\"Do you like what you see?\" He asked, smiling innocently. \n\n\"If she gets a stomach ache, you're dealing with it.\" She replied. \n\n\"I suppose that's fair.\" He agreed. \n\nCassie smiled as she reached for a flute of champagne from the tray of a passing waiter. \n\n\"You didn't answer my question.\" Said Magnus. \n\nShe looked him up and down while she sipped her champagne As her gaze fell below his waist and onto his snug-fitting jeans, she wrapped her hand around the barrel of the rifle he held and unintentionally began to stroke it. He smiled coyly as she realized what her hand was doing and quickly released the rifle, looking around to ensure that no one had witnessed her indecency. \n\n\"I'll take that as a yes.\" He said, secretly thanking Annette. \n\n\"Look at them.\" Said Cassie, changing the subject as she motioned towards Annette and her date. ",
        "The two were obviously attempting to hide their nervousness as they danced and giggling at one another like a couple of teenagers. Cassie was glad that Annette had decided to keep her company during a visit to the pediatrician's office. She knew the moment she saw her normally calm and collected best friend fumble her iced latte into her own lap as she stood to shake the doctor's nervous, trembling hand; that the two were perfect for each other. \n\n\"Shall we join them?\" Asked Magnus as he offered his open hand. \n\nCassie smiled seductively as she took his hand and he lead her to the dance floor, where they joined Annette, Alex and their dates. The three of them were used to being the life of the party, as they were always the first to the dance floor. Alex had the skill and expertise that thirty years of go-go dancing and male revues had afforded him. Annette's graceful, rhythmic movements were a product of many afternoons spent swaying back and forth with her feet atop her ballroom dancing father's. Cassie's body came to life the moment she heard an enticing beat- which at the moment was \"Hit The Quan\". \n\nCassie, Alex and Annette quickly danced into place as a crowd quickly formed around the trio to watch their entertaining version of The Quan. As the lyrics mimicked gun shots, Magnus joined them in perfect timing with his rifle and the three wiggled comically as though they were shot repeatedly before seamlessly falling into the Quan dance. The crowed cheered as the giant Dane astonished them with not only his knowledge of the dance, but the fluid gyration of his hips. Magnus looked at Cassie, silently thanking her for all the nights she had stayed up giving him lessons in American hip-hop dance. \n\nJack and a chocolate smeared Ayana joined their friends and family on the dance floor just as the ultra funky beat of \"Superstition\" kicked in. It was one of Angela's favorite songs and it was pretty obvious why. Everyone began to dance to the irresistible beat as Armando surveyed the happy crowd. He waved to Alex who shot him a \"thumbs up\" in reference to his choice of music. \n\nMagnus couldn't take his eyes off of Cassie as her body bounced in perfect timing with each beat. He loved watching her dance. She knew many popular dances, but she had a style all her own. As she bounced and gyrated her ample bottom, he realized that she was the only one who could keep up with Stevie Wonder's incredible keyboarding. He also realized that he was moments away from an embarrassing erection; so he diverted his attention to Alex and Jason, who were shuffling and sliding as though they were professional back up dancers. \n\nAs the song was nearing an end, Ayana spotted a dessert cart being wheeled in with assorted pastries and exotic fruits that were just begging to be dipped into the chocolate fountain. She looked up at Jack. \n\n\"Papa...\" She said, trying to think of the best way to ask for more sweets. \n\n\"Betcha I get there first, kiddo!\" Jack and Ayana took off towards the magnificent, freshly laid spread. \n\nArmando saw his chance to play the first request on his list. \n\n\"Ladies and gentlemen, I have a special request. This song is dedicated to 'Anders' from 'Lea'.\" He announced before playing Robin Thicke's \"Lost Without U\" as he dimmed the lights. \n\nMagnus looked to Cassie curiously as she began to sway her way over to him. He felt a tap on his shoulder and looked back to find Alex holding a chair out, inviting him to sit. The crowd had formed an almost perfect circle around the medallion inlay on the center of the floor, where Alex had placed the chair. He apprehensively sat down as Cassie and Alex exchanged winks. Magnus watched his wife dance her way over to him in a sultry, serpentine fashion; her movements accentuated by her tribal inspired outfit. Armando set a spotlight on her as she teased her king, shaking her exposed hips at him one at a time before crawling to the floor. \n\nJust as Magnus peered down to see where she had gone, she rose up from between his legs, winding and caressing her body as the crowd whistled and howled. Cassie couldn't care less about anyone's eyes but his as she turned around to give him a view of her winding rear. He casually placed a hand over his mouth to conceal the fact that he was licking his lips. She had spent the past seven months working out religiously just to see him squirm like this and right then and there, she decided that it was completely worth it. \n\nHer backside still facing him, Cassie brought his knees together and seductively grinded onto his lap. Her legs were on either side of his as she leaned backwards to caress his face. Her feathers tickled him as her grinding sent tingles throughout his body. The sweet aromas of coconut, lime, guava and citrus wafted off her body. Magnus fought the urge to lick her deliciously scented neck as she continued to stroke the side of his face with her soft little hands. She could feel his erection beneath her, and she maneuvered herself so that her opening was directly on top of his tip. She turned her head and brought her lips to his ear. \n\n\"Gonna let you come in my pussy tonight, Daddy.\" She whispered, causing him to groan. \n\nShe hadn't allowed him to climax inside of her for months, and she knew those words were all it would take to make him ravenous. But they were surrounded by people and all eyes were on them; she knew there was nothing he could do but suffer. She laughed wickedly as the music began to trail off. She stood up and he remained seated, as the lights were now back on and he had found himself in quite a dilemma. \n\nCassie bowed as the guests cheered. Magnus blushed as he conspicuously crossed his legs and waited for his erection to subside. Having worked up an appetite, she made her way over to the hors d'oeuvres. Annette soon joined her. \n\n\"That was amazing. You looked SO good! I can't believe how much weight you've lost.\" \n\n\"Hey, when you want it bad enough... speaking of which- how's it going with Abdool?\" She inquired as she bit into a cheese pastry. \n\n\"Oh my god... that man is so damned attractive I can barely think straight.\" Said Annette as she munched on a mini quiche. \n\n\"I'll say.\" Said Alex from behind her. \n\n\"Back off!\" Said Annette jokingly. \n\n\"All I'm saying is, if it doesn't work out tonight, send him to me- because he's GOT to be gay to walk away from all of this.\" Said Alex, waving his fingers at Annette's form. \n\nAnnette put an arm around Alex and kissed his cheek. He always knew just how to boost her confidence. \n\n\"Better watch your own date Alex, looks like your little heavy metal pretty boy is about to get rocked.\" Cassie remarked as she pointed to the DJ booth, where Armando was placing his headphones onto Alex's date while dancing closer and closer to him with each second. \n\n\"Oh hell to the no! Love ya cuz, but that's the hottest dancer at the Wet Works... I gotta go reclaim that mane. Ladies.\" He excused himself as he double air-kissed them both and made his way over to the DJ booth. \n\nCassie and Annette laughed, but soon remembered that they had left their own dates waiting. Annette quickly found Omar and they returned to the dance floor. Cassie giggled as she located Jack and Ayana toasting with two of the biggest prawns she had ever seen in an exaggerated hoity-toity fashion before returning to their feast. She saw no reason to interrupt their smorgasbord and went back to the dance floor to locate Magnus. He had vanished, leaving only an empty chair. Cassie placed the chair back in the dining area. And headed out of the ballroom. \n\nII \n\nThe light musk of autumn mums filled the air as Cassie made her way into the garden grounds of the country club. She reminisced as she passed the beautifully sculpted hedges, each one taking the form of a mythical creature. She smiled as she passed the hydra- even in the dark of night, it was incredibly impressive. As she approached the pavilion, she realized Magnus was nowhere in sight. She walked the same path she had on her wedding day, stopping as she reached the center of the pavilion. She closed her eyes and imagined the sun radiating off of Magnus' golden hair as he said his vows. In that moment, there was nothing else but him as he made his promise to her that there would never be another; that she was the keeper of his very soul. \n\n\"Min perfekte brud.\" He said softly into her ear before kissing her neck. \n\nIt always amazed her how easily he could sneak up on her. She smiled as the feeling of his warmth against her skin both comforted and enticed her. The Autumn breeze carried the scent of the blooming flowers into the pavilion. The beautifully crafted patio heaters gave a gentle warmth to the already pleasant October air. The night was surreal. \n\n\"Min sexede bruden...\" He said with another kiss. \n\n\"...min onde brud.\" He growled before biting her neck and squeezing her bottom. \n\nShe giggled before taking off. She ran out of the pavilion, towards the hedge maze with Magnus chasing just a few feet behind her. He stopped when he realized where she was going. \n\n\"Testing my memory, Prinsesse?\" He called to her as she ran into the maze. \n\nThey had gotten to know this maze quite well during the reception of their wedding, and Magnus was up for the challenge. \n\n\"Hmm...\" He pondered, as he entered the maze. \"Left, right, right, straight, left, left...\" He said to himself as he made his way to the center of the maze. \n\nWhen he didn't see her, he turned to see if she was hiding against the hedge behind him. She leapt at him and he caught her, grabbing her by her voluptuous behind and hoisting her up to his waist. He slowly sank to the ground as she kissed him ferociously; biting at his lips and wrestling his tongue with hers. He groaned into her mouth as she rocket her hips, pressing her clitoris into his erection. \n\nShe was wild Acacia. \n\nHe loved wild Acacia. \n\nHe loved every side of her- but he really loved this side. \n\nCassie bit at his neck as he flipped them over so that he was on top. He took a moment to admire her. Her skin had become a deep mahogany in the August sun, but had almost completely transitioned back to the winterized caramel skin he enjoyed during their stay in Denmark. She seemed to glisten as her dark skin reflected the moonlight. \n\n\"So Beautiful, my Goddess.\" He said as he stroked her face. \n\nShe brought his hand to her mouth and sucked hungrily at his fingers. \n\n\"What do we have here?\" He asked as he pushed the loincloth aside, revealing her tiny g-string. \n\n\"Such easy access.\" He noted as he slicked his thumb up and down her moistened thong. \n\n\"I knew you wouldn't be able to resist fucking me tonight.\" She teased. \n\nRefusing to wait a minute longer, she pulled him onto her and flipped them again. Before he could protest, she spun around and presented her womanhood to him. She hovered her fragrant flower over his head as she began to bite at the rock-hard phallus within his jeans, threatening a sixty-nine. \n\nMagnus gathered the front and back strips of cheetah fabric together on one side of her waist and tied them. He then slid his finger under the string of her thong, and pulled it to the side, exposing his favorite treat. He ran his tongue from her clit to her backside, pausing at her anus where he playfully flicked his tongue. As he made his way back to her clitoris, intense pleasure coursed it's way through his body. He was so caught up in tasting Cassie that he didn't realize she had released him from his denim prison until she had hungrily rammed him halfway down her throat. \n\n\"Mmm... you take such good care of me, my Goddess.\" He moaned before driving his tongue into her. \n\nShe bucked at his face, fucking his mouth while she drove him into hers. He withdrew his tongue from her and licked her from front to back a few times before returning to her swollen little bud. He then retrieved his phone to aid him in viewing her. He held the phone with one hand, shining it's flashlight onto her while spreading her lips with the other. Her vivid pink center peeked out from within her fluted chocolate lips. Of every vagina he had had ever seen, hers truly resembled an exotic wildflower. \n\n\"S\u00e5 fucking smukke.\" (So fucking beautiful.) He praised as he eased a finger into her. \n\nHe lashed at her with his tongue while his finger went to work inside her, massaging it's way to her g-spot. Cassie had begun to moan while he was deep in her throat, sending that sweet vibration he had grown so fond of down his shaft. From the first time she had taken him into her mouth, Magnus' large phallus had awakened an oral fixation within her that even she had no prior knowledge of. His was the only penis that she could easily describe as 'beautiful'. \n\nHis flawless penis was easily nine inches when erect. She could spend hours just sliding her tongue along his ivory tower while admiring the marbleized look the road map of veins added to it. His creamy white shaft was offset by the sudden burst of pink that was it's bulbous, strawberry tip. And what a tip it was. His glans featured a corona more pronounced than any she had ever seen. She delighted herself by running her tongue around the swollen ridge, pausing to suck and kiss it as precum continuously oozed from him. She giggled to herself at how ironic it was that the prettiest cock she had ever seen was also the messiest. But she loved his precum. The euphoric expression she donned made that evident as she stroked him with one hand, and rubbed her fingers over his shimmering tip in a circular motion with the other. \n\n\"Ohh...\" He groaned as his head fell backward onto the soft grass. \"You have me so excited... I don't think I can withstand your touch much longer.\" \n\nCassie laughed wickedly. That was exactly what she wanted to hear. She dove onto him, bringing his slippery rod deep into her her throat until she found it nearly impossible to breath. It took her a long time to admit it to herself, but it was the suffocation brought on by his incredible size combined with Magnus' erratic breathing as he moaned and spasmed beneath her that got her off. At first she felt absolutely dirty and ashamed; but as time passed, she had grown to fully accept this new kink of hers. \n\n\"Cassie...\" He moaned, attempting to warn her as that familiar pressure within his scrotum began to grow. \n\nShe was moaning loudly now, the vibrations humming through his body alongside the pleasure his goddess so lovingly bestowed upon him. Her juices oozed down his dancing tongue as it pleased her clitoris. But he was halted by the crippling pleasure brought on by the upper row of her teeth nipping at the stubble above his penis, while her hot tongue glided down, passing back and forth over his taught scrotum. His head dropped back to the ground and his back arched as he struggled to continue massaging her clitoris with his fingers. \n\n\"Fuck! Cass- oh- Gudinde!\" \n\nCassie braced herself as her husband's semen shot into her throat. She flaunted her new ability to swallow with him lodged deep inside her throat. The contracting of her throat heightened his orgasm, and the feeling of his pulsing cock exploding while she fought the urge to come up for air brought on her own climax. \n\nThough he was in mid-ejaculation, Magnus managed to resume eating her as a powerful orgasm left her a trembling, seeping wreck. She lifted her head from him and gasped for air as she moaned melodically. He wrapped his arms around her lower torso and pushed his face into her, causing another gush of nectar to coat his tongue. \n\n\"Mmm...\" He praised as he kissed her dripping lips. \n\n\"No one pleases me like you do baby.\" Cassie purred. \n\n\"No one will ever get the chance. Unless you wish to make your husband a murderer.\" He growled against her lips. \n\nMagnus still held Cassie tightly in his arms. It was quite common for Magnus to become extremely possessive of his wildflower after he had brought her to an orgasm. She often avoided this position for that very reason; as it left her vulnerable to hour-long sessions of him gorging on her until she was nothing more than a quivering, incoherent wreck. She giggled to herself as she recalled the numerous nights he had gotten a hold of her while she was bleeding and feasted on her feminine blood until he resembled a Saharan lion after a fresh kill. \n\nHer thoughts were disrupted by the sensation of his tongue sliding across her anus as he spread and caressed her cheeks. She gasped as his tongue dipped into the tight hole with each pass. \n\n\"Dirty boy... is that what you want?\" She asked. \n\nMagnus nodded as he continued probing her rosebud with his tongue. He was surprised by her lack of resistance. Cassie usually attempted to escape once he ventured near her anus, but this time she had decided to relax and allow the analingus. It was strange feeling his tongue in such a sensitive area. She thought back to the morning when she had used him for \"research\" on the subject and found herself fully understanding why he was so compliant. \n\nIt felt... nice. \n\nMagnus smiled as she began to relax, allowing his tongue to explore deeper as it twisted and turned. Her silky skin was clean shaven and smelled of her coconut-lime body conditioner. She was the perfect treat. He moaned appreciatively as he enjoyed his dessert for the evening. She looked down and noticed that he was still rock hard. Suddenly, Cassie felt extremely brave. \n\n\"I know you think about fucking it.\" She teased as she began to stroke him. \n\nMagnus let out an evil chuckle, admitting his guilt. \n\n\"You pass your thumb over it every time you take me from behind.\" \n\nHe withdrew his tongue and eased his finger inside of her, slow enough for her to relax around it. \n\n\"You'll have to forgive me, Acacia. \n\nYou have the most gorgeous rear I've ever seen... \n\n...you have the most gorgeous everything I've ever seen. \n\nYou drive me completely insane. \n\nIt's a miracle that I am not locked in a padded room by now.\" He said as he lovingly kissed her rear. \n\n\"You're so good to me, baby.\" She said before kissing his weeping tip. \"You've never once even hinted at fucking my tight, round ass.\" \n\nCassie felt him throbbing in her hand as she continued to stroke. \n\n\"I'm too big for that, min s\u00f8de.\" He whispered. \n\n\"I'm yours, Magnus. You should have me in every way.\" Cassie crawled from over him and brought her face to his. \"Vil du ikke have mig?\" \n\n\"Of course I want you, Prinsesse.\" He answered, caressing her face as she leaned down to tenderly kiss his lips. \n\n\"Hvorfor vil du ikke tage det?\" She pleaded. \n\nMagnus smiled warmly. \"Because I have tried it in the past, and it did not end well.\" \n\n\"But they weren't me.\" She said as she turned around and presented herself. \"They weren't nearly as devoted.\" \n\nShe removed the loincloth, which was attached to an elastic band; separate from the elaborate feather belt that covered it. \n\n\"You didn't tell me that could be pulled right off.\" He said, impressed once again by her costume. \n\n\"You didn't ask.\" She remarked smartly. \n\nMagnus sat up and crawled to his knees. He positioned himself behind her, and placed his tip against Cassie's vagina. She brought her upper body down to the ground and turned her head sideways to lay her face against the cool grass. \n\n\"Grab your phone and look at me.\" She gently commanded. \n\nMagnus reached for his phone and shinned the light onto her. She was face down with her backside presented to him, her back dramatically arched. He bit his bottom lip as she reached for her round cheeks and grabbed a hold of them, spreading them open to reveal her dainty little rosebud. \n\n\"Fuck det, Viking.\" She demanded. \n\nHe chuckled, shaking his head at her naughtiness. \"Mmm, so tempting.\" \n\n\"Fuck det nu, g\u00f8r det dit.\" (Fuck it now, make it yours.) She hissed. ",
        "Magnus quickly bent down and sank his tongue back into her. She gasped and moaned as he pushed his tongue as far into her as he could. He then withdrew it and replaced it with a finger. There was little to no resistance, as she was completely relaxed once again. He sat back up on his knees and aimed his tip at her, massaging her anus as he spread his precum onto her. \n\n\"You don't have to do this Prinsesse. \n\nI know how much you love me. \n\nYou have nothing to prove.\" He said, half hoping she would reconsider. \n\nCassie began to grind onto him, easing his tip into her. His head fell back momentarily as he savored her intense tightness. He placed his phone into the pocket of his shirt, with the light aiming at her and he brought his hands to her backside and squeezed the perfectly round muscles as he groaned while she sank him deeper into her. \n\n\"Kan du lide det , min konge?\" (Do you like it, my king?)She asked. \n\n\"Jeg elsker det, du ved jeg g\u00f8r.\" (I love it, you know I do.) \n\n\"Skynd dig, vil de v\u00e6re p\u00e5 udkig efter os.\" (Hurry, they will be looking for us.) She said as she pushed him in deeper. \n\n\"Lad dem. Jeg vil ikke skade min gudinde.\" (Let them. I will not hurt my goddess.) He groaned. \n\nMagnus reached under her and began to stroke her clit as he began to slowly pump into her. \n\n\"Mmm... it doesn't hurt baby, don't be afraid.\" She moaned as she began to twerk herself onto him, matching his speed. \n\nHe began to pant as he leaned back to view her. \n\n\"Du \u00f8nsker at se?\" (You want to see?) She asked, devilishly. \n\n\"Ja.\" \n\n\"Lean back, baby.\" She said, taking over with her own hand as his fingers left her clit. \n\nCassie held one of her cheeks while she twerked onto him, picking up speed. Magnus leaned back and took the phone out of his pocket. He used one hand to shine the light onto her rear, and the other to grip the cheek she wasn't holding. The feathers swayed at the sides of her hips, adding to her already exotic appearance. \n\n\"Ah... Cassie- you look as good as you feel.\" \n\nHe moaned ferociously as he watched her rub her clitoris while they both slammed her ass onto him. She had completely loosened up and accepted him deep inside of her. The contrast of his hand against her skin as he gripped her backside drove him mad with lust. He especially liked the way her flesh protruded between his fingers as he tightened his grip. But as much as he was enjoying this forbidden pleasure, it seemed as though she enjoyed it even more. \n\nIt was his enjoyment that drove her. \n\nCassie could sense the intense pleasure she was giving him. It had always been that way, but he had never realized it. She was so connected to Magnus that at times, she knew when he was about to come even before he did. And just the mere knowledge of his impending orgasm was enough to bring on hers. And this time was no different. Cassie moaned and Magnus grunted as they slammed into one another viciously. She began to spasm as she brought herself to a climax and her convulsions proved to be too much for him. \n\n\"Hvor vil du have det , Gudinde?\" (Where do you want it, Goddess?) \n\n\"Spread it all over, baby.\" She moaned. \n\nMagnus pulled out of her just in time to jettison his seed onto her rear. He dragged his tip over her gyrating bottom, grunting as he smeared his semen across her flesh. He trembled as he stroked every last drop out of himself. \n\n\"Oh- Kan du lide det, s\u00f8de gudinde? Er det hvad du \u00f8nsker?\" (Do you like it, sweet goddess? Is that what you wanted?) \n\n\"Mmm hmm!\" Cassie giggled as she wagged her rear against his dribbling manhood. \"I love pleasing you baby.\" She softly whispered as she scooped a bit of his semen off her rear with her finger. She then sucked the digit while Magnus watched with a sinister smile. \n\n\"Sexet lille gudinde... may I take a picture?\" He asked with his phone still in hand as he viewed her. \n\nMagnus loved taking pictures of Cassie. He never shared them. Instead, he put them in a password locked file that he opened whenever he felt the urge to masturbate. She had become his porn. He knew his feelings for her were borderline addiction, but he didn't care. They were fiercely in love with one another to the point where boundaries no longer existed. \n\nCassie arched her back and spread herself with one hand to show off her glistening parts and continued to lick the other hand while Magnus took a few pictures. He loved the way his come looked on her rich, dark skin; but he knew it was time to clean her off and return to the ball. He quickly unbuttoned and removed his shirt and stripped off his undershirt. He then used it to wipe her as he kissed her shivering flesh. The combination of sweat and semen had made her quite chilly. \n\n\"Let's get you back inside, min s\u00f8de.\" He said as he reached for her skirt. \n\nIII \n\nThe lightheaded couple split up to make a pit-stop at the restrooms to wash up, but they reunited in the hall and shared a quick giggle at their gallivanting. Magnus placed his arm around his wife as they walked towards the glass doors. Cassie gasped as she entered the ballroom. She turned and quickly exited, leaving a bewildered Magnus. He was about to follow Cassie back out and ask her why she had run off, when he spotted the cause of her anguish. \n\nIt was her. \n\n\"\u00c5h nej...\" (Oh no...) Magnus uttered. \n\nEveryone had known there was a possibility that Carla would show up but they had all mentally crossed their fingers, hoping the pompous daughter of the guest of honor would skip the event. Magnus ran after Cassie, catching her arm as she was just about to exit the country club. \n\n\"Min s\u00f8de, kan du ikke lade dem til at klare sig selv mod hende.\" (My sweet, you can not leave them to fend for themselves against her.) \n\nHe felt the muscles in her arm relax as she stopped, defeated by his reasoning. She turned to him, shaking her head in anguish. \n\n\"Just once, can you ever not be right?\" \n\nMagnus smiled at her as she sighed and allowed him to guide her back to the ballroom. As they reentered, Cassie groaned at the sight of Carla fake-laughing while Abdool performed his best Dr. Who impression. Originally the entertainment was meant for Annette, but Carla had joined their conversation in her typical attention-seeking fashion. \n\n\"Oh! Look who's finally back from the restroom! I was beginning to think you had pawned your little one off on Daddy so that you could take off to the nearest bar for a night cap.\" \n\nMagnus discretely placed his hand over Cassie's clenched fist and caressed her hand, urging her to remain calm. Annette and Abdool sipped their their drinks, trying their best to ignore Carla's rude comment but Annette was clearly agitated. \n\n\"There's no way I'd abandon a party this amazing. Or a date this fine.\" Cassie answered, masking her anger as she glanced at Magnus lasciviously. \n\n\"Fine indeed.\" Said Carla as she stepped closer to Magnus. \"How's married life, Dr. Bjornssen?\" She asked coyly. \n\n\"Wonderful. Thanks for asking. I'm happier than I've ever been.\" He replied as he wrapped his arm around Cassie's waist and pulled her close. \n\nCarla rolled her eyes with visible disgust as he lovingly planted a kiss on Cassie's forehead. She turned to Annette and her date. \n\n\"I was just about to ask Dr. Dharry and his... date...\" Carla paused to give Annette a scrutinizing glance followed by a fake smile. \"...how they became acquainted, when you walked it.\" She turned to Abdool. \"So, how exactly did you meet?\" \n\n\"I went to his office with Cassie for her appointment and as soon as he walked out, I knew I had found the perfect date for tonight.\" Annette answered. \n\n\"Just for tonight? Hopefully I've impressed you enough for a second date.\" Abdool turned to a blushing Annette. \n\n\"Well, I have been looking for a reason to make some lasagna...\" Annette replied shyly. \n\n\"Wow. Sofa date already? You sure move fast. Now I see why so many men choose to date below their profession.\" Carla stated with a smug expression. \"I mean that purely in jest, of course. Well, you can't dress up as a fifties escort without expecting at least one tawdry joke.\" \n\n\"Forties actress. And yeah, I should be able to-\" \n\n\"Again, I was merely joking. At least you had the good sense to dress as something other than a zombie.\" Carla remarked loudly as a guest dressed as a zombie grabbed an hors d'oeuvre from a nearby platter. Carla smiled satisfactorily as the zombie rolled her eyes and walked off. \n\n\"Or even worse, no costume at all.\" Said Cassie as she studied Carla's beige evening gown. \"This event is costume only, I'm surprised they even let you-\" Cassie was interrupted by Carla as she called out to Alex. \n\n\"Don't you dare leave without saying hello to your niece!\" Carla exclaimed as Alex and his date were about to sneak out the glass doors. \"Aunt Alexandra- oh, I'm so sorry...\" Carla covered her lips, feigning remorse as she turned to Cassie and Magnus. \"You would think that by now I'd be use to the whole thing.\" \n\n\"After all, it's only been twenty years.\" Alex remarked as he and Jason approached his niece. \n\n\"Has it been that long? How time flies, Auntie.\" Carla replied. \n\nMagnus looked to Cassie with a quizzical expression. \n\n\"Oh, you didn't know? Long before she was 'Uncle Alex', she was 'Aunt Alexandra'. Amazing what plastic surgeons can accomplish these days.\" \n\n\"Well... you're a bitch.\" Alex's date noted as he reached for a flute of champagne. \n\n\"I'm pretty sure you've had enough of those.\" Carla said to Jason. \n\n\"To deal with you, sweetheart; I'm gonna need about fifty more of these.\" Jason remarked as he downed the champagne and reached for another flute. \n\nCarla turned to Cassie. \"I can't believe you didn't tell him.\" \n\n\"There's nothing to tell. Alex is a man you fu-\" \n\n\"Cassie!\" Alex interrupted Cassie as he stepped between her and Carla. He lovingly placed his hands around the bottom of her face. \"Have I told you how absolutely beautiful you look tonight?\" \n\n\"My god, she does. Honey you look like a Nubian queen.\" Jason added as he sipped his drink. \n\nCassie smiled despite herself. She knew exactly what Alex was up to. \n\n\"Why don't we go request some reggae and wind with our dates?\" He gently pleaded. \n\nCassie nodded but before they could leave, Carla intervened. \n\n\"Or you could take a moment to set up an appointment with Dr. Bjornssen.\" She turned to Magnus who was obviously quite uncomfortable with the situation. \"Sorry to be a downer, I'm just a concerned niece who wants the very best for her...\" She turned to Alex. \"...uncle.\" \n\n\"Alex, can you step aside please?\" Cassie begged through clenched teeth. \n\n\"No, there won't be any unpleasantness tonight. And Carla...\" He turned to his niece. \"...this is extremely inappropriate and unnecessary.\" \n\n\"You really should give psychiatric treatment another chance.\" Carla urged. \n\n\"If I may...\" Said Magnus as he stepped up to address Carla. \"My services would be of little use to your uncle, because being transgendered is not a mental illness. I would offer you an appointment, but being an asshole isn't necessarily a mental illness either.\" He concluded. \n\nCarla looked at Magnus with a livid expression. \"Excuse me?\" \n\n\"You are an asshole.\" He said calmly replied, his strong accent accentuating the double 's'. \n\nCarla's jaw dropped as everyone within earshot began to snicker. She quickly recovered from her disbelief and retorted with a hard slap to Magnus' face. Before he could respond, Cassie had already lunged at Carla, wrapping her hand around her throat as she drew her fist back for a punch. \n\n\"Hey Kiddo!\" Jack cheerfully called out as he simultaneously hooked Cassie by the elbow. \"Quit fooling around with that party pooper and come watch these zombies do The Thriller.\" \n\nCassie's eyes remained on Carla as she struggled to breathe in Cassie's grasp. \"You are so goddamned lucky.\" She seethed as she released Carla, who instantly gasped for air. \n\n\"Why don't you stop being so obnoxious? You're not here for the party, you couldn't even be bothered to wear a costume. You're just here to be mean and cause trouble.\" Jack scolded his daughter before leading everyone else off to watch the zombies of the party as they performed the routine to the Micheal Jackson hit. \n\nBefore Cassie knew it, she was already smiling as she watched Ayana mimic the dancers. \n\n\"You're a class act, Kiddo. And you're gonna stay that way.\" Jack said to her as her as he wrapped an arm around her shoulders. \n\n\"You know she deserved that punch.\" \n\n\"I know. And Angie's probably cussing up the heavens because I stopped you. But tonight isn't about Carla. Or you. Or me. It's about this.\" Jack said, spreading his hand towards the dancers. \n\n\"Zombies?\" Asked Cassie with a raised brow. \n\n\"No, you smart aleck!\" He chuckled. \"It's about fun. Joy. Laughter. Catchy tunes and dancing. You can't think of Angie without thinking of at least one of those things. She was happy until the very end. She never let anything bring her down. No matter what. If you had beaten up Carla you would have felt good for the moment, but then you'd realize that the party was ruined and Ayana had witnessed your behavior. You'd be so mad at yourself.\" \n\nCassie nodded as saw the truth in Jack's words. She looked over at Ayana as she danced towards Magnus, who pretended to be afraid of the tiny, momentarily zombified fairy. Her life had changed so dramatically within the past year. For a moment, she imagined how things would be if she had never met Magnus. She saw herself in the old apartment finishing off a bottle of bourbon, weeping in agony as she continued to mourn the loss of her best friend, sister and mother. Suddenly, Jack squeezed her shoulder. \n\n\"You okay, Kiddo?\" \n\nBefore Cassie could answer, the crowd began to cheer as Armando thanked the dancers and evoked another round of applause. Cassie and Jack smiled at each other before joining in to applaud the zombies as they left the dance floor. Armando dimmed the lights. \n\n\"Alright my darlings, may I have your attention please?\" The ballroom fell silent as Armando's painting of Angela was rotated on the wires that held it until it's blank white backside faced the crowd. \"As you all know, our sweet Angela was never one to go without getting the last word. I now present her last gift to all of us: a video she recorded with her nurse one week before she left this world. Though it was sent to me soon after, I have yet to watch it; as the card attached did read, and I quote 'Dear Cuzzywuzzy...' yes, that's what she called me!\" He paused to give the guests a moment to chuckle. \n\n\"Dear Cuzzywuzzy, enclosed is a DVD that you will play during my ball. Watch it beforehand, and I will haunt the bejesus out of you!' \n\nThere was more, but it was mostly about which song I would play afterward, how she wanted me to style her wig, which dress she would be buried in and how she'd reach down and smack me, should I mourn her for too long before getting back to being fabulous.\" \n\nArmando took another moment while the crowd snickered and blinked away his tears to avoid shedding them. \n\n\"And so I present to you, Angie's last words.\" \n\nThe lights dimmed as the video was projected onto the huge white canvas. \n\nSuddenly, Angela appeared in her hospital bed. She smiled cheerfully as she waved into the camera. She was wearing a long, white satin robe and a set of fluffy white angel wings on her back and was completely illuminated by the sunlight pouring in from a large window. Above her head sat a sparkly golden halo. The ballroom's reaction was almost immediate as giggles, cheers, sniffles and praises could be heard. Jack laughed with joy and disbelief as Cassie smiled through teary eyes. Magnus lifted Ayana into his arms so that she could see her Mama Angie. \n\n\"Hi Jack, lookin' good baby!\" She purred. Jack blushed and smiled lovingly. \n\n\"How's my family? Are they passed out yet? Alex, watch your date... you know Armando is hosting this.\" Alex looked to Armando who conceded as he was surely guilty. \n\n\"Cassie, whatever Magnus is wearing, it isn't tight enough! Yan-yan, don't let Mommy keep you away from that chocolate fountain.\" Magnus chuckled as Ayana raised her fists in a victorious fashion. \"You're the only reason it's there and she knows that! \n\nCarla, if you're wearing a costume have a drink. If not, shame on you. But I love you anyway. Now go home before someone clocks you one.\" The guest laughed while Carla rolled her eyes as she rubbed her neck. \n\n\"So by now I don't need to tell you that I've gone to the great beyond, and if I seem cheerful, it isn't just the medical Mary-jane. \n\nWell that's partly to blame, but there's more to it than that. \n\nI have absolutely zero regrets. \n\nWho can say that? \n\nWho can say that they truly feel that they have lived life to the fullest? \n\nThe lucky. That's who. \n\nI don't care how terminal my state is; I won't pretend for one moment that I'm not positively thrilled with the life I've lived. \n\nYou know those Woodstock documentaries? \n\nThat has pretty much been most of my life. \n\nExcept the third one. Life never sucked that bad. \n\nBut the first and second... yep. That pretty much sums it up, mud riots and all! \n\nSo save your tears for someone who needs them and TURN UP! I mean it. Laugh, drink, dance; own this ballroom like it's yours. Because tonight, it is. \n\nNow... it's been a good run but you've all begun to bore me and to be honest, I'd rather be with Bernie Mac.\" She said before giggling. \n\n\"You all know I love you. Each and everyone of you. But do you know how much? So damned much, so deeply that I would die for you. \n\nAnd I'm not just saying that because I'm already gone. I really, truly mean it. \n\nXavier, I am still dying... right?\" Her expression comically changed to uncertainty as the crowd laughed. She looked to the side of the camera and the cameraman answered her. \n\n\"Still dying, baby.\" A thumbs up could be seen from the outstretched arm of the nurse-turned-cameraman. \n\n\"Right. Well in that case, I stand firm on that claim! May my love warm you all eternally. Armando, hit it!\" \n\nThe video came to an abrupt end as Armando scrambled to his booth. Within moments, music could be heard. It was Prince's \"I Would Die For You\". The ballroom broke out in laughter as they began to dance and toast to the memory of their beloved friend. Jack watched as the picture pivoted once again to return to the painting of his wonder woman. As the lighting switched to black lights and strobes, Jack joined the rest of the ballroom on the dance floor. Ayana squealed with excitement as Cassie pressed the hidden buttons on the little fairy's ponytails, causing the plastic tubes to light up in electric blue. Armando tossed light-sticks to the crowd before running down to join them, and everyone applauded as they formed a \"Soul Train\" dance line around the electric fairy as she danced with the same boogie-down style Angela always had. \n\nIt was exactly how Angela had imagined it would be. It was the celebration of her life. \n\nIV \n\nCassie and Magnus arrived at their home around two in the morning. The frogs and crickets of their backyard pond serenaded Ayana as she rustled in her sleep at the sudden feel of her stepfather unbuckling her seat belt before lifting her from the back seat. She settled into Magnus' arms and continued her slumber as they entered front door. \n\nMagnus and Cassie tip-toed past the sleeping babysitter as they brought Ayana to her room, with Hedy Lamarr silently frolicking alongside them. Cassie removed what she could of Ayana's fairy costume and light up ponytails as Magnus wiped her face with a damp cloth, removing the crumbs, chocolate and blue lipstick from the sleeping child before tucking her in and kissing her goodnight. He then lifted Hedy onto Ayana's bed so that the tiny dog could snuggle in beside her favorite tiny princess. Cassie stroked the angelic face of her daughter as she settled back into a deep sleep. ",
        "\"You want to grab him? I'm gonna go take a shower while I have a chance.\" Cassie requested as the two made their way back into the living room. \n\nMagnus smiled and nodded as Cassie tip-toed up the stairs. He then walked over to the sofa and gently rustled the young college student who smiled peacefully as Magnus lifted his sleeping infant from her arms. \n\n\"Hej Bj\u00f8rn , var du en god dreng til Emma?\"(Hello Bjorn, were you a good boy for Emma?) He asked as his son opened his large, sleepy blue eyes. \n\nThe six-month-old's face lit up as his father's face came into focus. He immediately sat up against his father's chest and smiled happily. The baby reached for the familiar sharp features of his father's face and giggled as he felt the bristly stubble against his tiny fingertips. Magnus brought his face to Bjorn's as the chubby-cheeked infant reached for his favorite teething instrument. He chuckled as Bjorn rooted and bit at his nose with his toothless gums, while cooing contently. \n\n\"I hope he wasn't any trouble. He's usually a very good baby, but he's been a little feisty since his bottom teeth started coming up.\" He said to the young woman as she stretched and yawned. \n\n\"This was definitely the easiest sitter job I've ever had. He cried three times, and I can't even call it crying- he just got a little fussy every hour to let me know the he was hungry.\" Assured Emma. \n\nMagnus smiled proudly at his son as his coos grew louder and more excited. He rubbed his thumb along the baby's tiny cleft chin before administering a series of gentle tickles to his belly. Bjorn laughed heartily as he kicked his feet. \n\n\"After the third time, I figured he just gets hungry every forty minutes, so I gave him a bottle before he needed to tell me, and there was no more fussing after that.\" She said cheerfully as she stood up to brush her hand over the baby's soft curls. \n\nBjorn grabbed at his babysitter's hand and squeezed her fingers as he let out a joyous squeal. \n\n\"Wow! He wasn't nearly this wound up while you guys were gone. He must be really excited that you're back.\" She noted. \n\n\"He is not used to being up so late, and so we have the silly hour.\" Magnus replied. \n\nBjorn lurched at Magnus' face and clapped his hands against his father's cheeks a few times as he giggled wildly. Magnus turned to the babysitter. \n\n\"You'll have to excuse me, I must go wrestle The Bear.\" He said before gently pretend body-slamming Bjorn onto the couch. \n\nBjorn laughed wildly as Magnus buried his head into the baby's tummy and nuzzled as he growled. He grabbed two tiny handfuls of his daddy's golden hair and let out a tiny, squeaky growl of his own, imitating his father in their game of 'Papa vs. baby bear wrestling'. Emma snickered at the sight of the little one grappling and teething at his father's hands and face. \n\n\"He's so freaking cute! I can't believe how good he is. He doesn't even mind getting his diaper changed, and he burped on his own a couple times. He's easily the hungriest baby I've ever seen, but he's also the sweetest.\" She praised. \n\n\"Like father like son.\" Said Cassie as she made her way down the stairs while tying the belt to her bathrobe. \n\n\"Hey! How was the party?\" Emma greeted. \n\n\"It was a lovely evening. Thank you so much Emma, I hope we didn't keep you too long.\" Said Cassie. \n\n\"No problem, really. I don't have any plans until tomorrow night anyway, and now thanks to you guys I actually have the cash to go out!\" Said Emma beaming as she put on her shoes. \n\nBjorn heard his mother's voice and squealed in delight as he nearly launched himself off the couch to get to her. \n\n\"It's rather late to walk, let me give you a ride home.\" Said Magnus as he handed Bjorn to Cassie. \n\n\"You guys are the best. Anytime you need me, let me know. Seriously. This was the best job ever; we just snuggled and watched cartoons and ate snacks all night.\" Emma hugged Cassie and Bjorn before grabbing her bag. \n\n\"Night little Chubber-bear, I had fun hanging out with you.\" She said as she waved and followed Magnus out to the car. \n\nMagnus pulled into his driveway as he returned home from dropping off Emma. He took a moment to admire the moon flowers Cassie and Ayana had planted along the path. The large white blooms reflected the moonlight as they scented the night air with their strong, sweet musk. He thought about how excited Ayana was as they waited for the first trumpet-shaped bloom to open while Cassie grilled bison burgers in the backyard. That was the first night she called him \"Daddy\". \n\nHe beamed as he entered his home and walked to Ayana's room to ensure that she was still covered. The drive to her father's house in Syracuse was long, but well worth having her for the summer. Life for he and his new bride had become even happier ever since they won partial custody of his stepdaughter. Magnus had become the hero in his family by hiring a lawyer competent enough to go up against Cassie's ex-husband's counsel and challenge the unfair custody agreement set by a judge who valued income over parenting ability. \n\n\"Sov godt lille en.\" (Sweet dreams little one.) He whispered as he tucked her favorite teddy bear in beside her. \n\nHe walked up the stairs to his bedroom to find Cassie laying in bed, nursing Bjorn. He made his way into their bathroom for a quick shower. Cassie snickered as she listened to her husband joyously sing Rasmus Seebach's \"Million\u00e6r\" to himself as he scrubbed. \n\n\"Hvorfor g\u00e5r vi rundt og tror det er s\u00e5 vigtigt \n\nAt lave den million?\" \n\n(Why do we like to think it is so important to make that million?) \n\n\"Du ka' f\u00e5 masser af succes, men hvad det v\u00e6rd? \n\nHvis ik' du deler det med nogen?\" \n\n(You can get plenty of success, but what is it worth? \n\nIf you do not share it with anybody?) \n\nEn du kan stole p\u00e5 , stol p\u00e5 \n\n(Someone you can trust) \n\nEn der siger ro p\u00e5, ro p\u00e5 \n\n(Someone who says take it easy) \n\nCassie was a little disappointed as Magnus turned off the shower, thus ending his song. She looked down and found that his singing had put Bjorn to sleep. \n\n\"I love that man.\" She whispered to herself. \n\n\"What was that?\" Asked Magnus as he exited the bathroom with a towel wrapped around his waist. \n\nCassie smiled lovingly at the dripping giant. \n\n\"En der vil ha dig som du er\" (Someone who loves you as you are.) She sang to him. \n\nMagnus blushed as he smoothed his hair back. \n\n\"Sorry. I didn't think you would hear me with the door closed.\" \n\n\"Lucky for you, Bam-bam likes your singing. I don't mind it either.\" Cassie shrugged, downplaying her affection towards her husband's voice. \n\nMagnus walked over to the bed and brushed his hand over the side of Bjorn's chubby face as he snored gently. \n\n\"Det er forbi din sengetid, lille bj\u00f8rn.\" (It's past your bedtime, little bear.) He said as he gently eased his index finger into the baby's mouth, breaking the suction and freeing Cassie's nipple. \n\nHe took his son into his arms and carefully walked across the hall to the nursery. He placed Bjorn into his crib and swaddled him into his favorite blanket. He took a moment to admire his perfect son, as he always did each night. His golden, light-brown skin glowed in a permanent sun-kissed hue. He ran his fingers through Bjorn's large golden-brown curls and chuckled to himself. \n\n' Du m\u00e5 hellere holde ydmyg , lille bj\u00f8rn . \n\nVi vil ikke tillade dig at blive indbildsk .' \n\n(You better stay humble, little bear. \n\nWe will not allow you to be conceited.) \n\nHe warned as he marveled at his son's good looks. He ran his fingers over the letters \"B.A.M.\" which were embossed onto the headboard of the wooden crib. \n\n\"Bj\u00f8rn... Aksel... Magnussen... \n\nI still can't believe I got your mother to approve that.\" He chuckled to himself as he dimmed the room light. \n\nMagnus walked back to his bedroom got into bed with Cassie. She was still sitting up, wearing one of his undershirts as she attempted to wrangle her twists into a bun. He watched her, admiring her exotic hair style. \n\n\"Sexy Goddess.\" He praised her as he took one of her locks into his hand and examined the detail of the twist. \"You look so different with braids. It's as though I have many wives in one.\" \n\n\"For the last time, they're not braids.\" Cassie giggled, shaking her head. \n\n\"Dreads?\" \n\n\"Twists!\" She laughed at his confoundment. \n\n\"Whatever they are, I love them. Could you wear your hair like this more often?\" \n\n\"Gladly!\" She answered with delight. \"Do you have any idea how easy this style is to maintain? You want twists? You got 'em.\" \n\nMagnus wrapped an arm around her to pull her close. Cassie hissed and recoiled in pain as his hand brushed her breast. \n\n\"Min stakkels s\u00f8de gudinde... you're engorged.\" He said in a concerned tone as he ran a thumb across her leaking nipple. \n\nCassie shivered at the sensation, but soon realized that she was leaking through the shirt. \n\n\"Shit. Bjorn only drank from one side before he fell asleep. I'm going to have to go downstairs to get the pump.\" \n\n\"It's too late for all of that, Min S\u00f8de. Besides...\" He said as he lifted up her shirt and pulled her into a laying position. \"...you promised I could this week.\" He reminded as he lay beside her, caressing her tender breasts. \n\nA drop of milk made it's way out of her nipple and streamed down the side of her breast until it was met by Magnus' seeking tongue. \n\n\"Mmm...\" He moaned in approval as he caught the drop and trailed it back to her nipple. \n\nCassie arched her back as Magnus continued massaging her breasts. Her breaths were shallow as she began to moan while he flicked his tongue over her nipples. He then dove onto her swollen breast and sucked firmly, drawing her milk into his mouth.  \n\n\"Ssss... god, that feels so fucking good.\" She said, running her fingers through his hair as he gulped down ounce after ounce of her milk. \n\nCassie was always taken back by the incredible difference between the warm, tender sensation she felt when the baby nursed, and the hot, searing pleasure she felt when Magnus fed. The two were like day and night. \n\n\"I'll never understand how you can drink so much of that, but I sure am glad you like it.\" She said as she stroked his bare back. \n\nMagnus released her nipple and felt her breast to ensure that it was no longer engorged. \n\n\"If you drank it, you would understand. It's the best milk I've ever tasted... like warm, melted ice cream.\" He smiled as he continued to caress her nipples. \"And how I love the sounds you make.\" \n\nHe mounted her and brought his lips to hers. \n\n\"Speaking of such sounds, I recall a promise you made to me earlier...\" \n\nCassie looked at him, feigning ignorance. \n\n\"...you said I could come in your pussy tonight, Gudinde.\" He said before snaking his tongue into her mouth to prevent her from protesting. \n\nMagnus sat up and removed his towel, exposing his erection. Drinking her milk always made him extremely hard. \n\n\"Baby, I'm not sure I'm ready to be pregnant again.\" Cassie reasoned. \n\n\"Don't you want to give me a daughter? I would love another child like Ayana.\" He pleaded as he crawled back over her and kissed her lips. \n\n\"Don't you remember how fat I was?\" \n\n\"Mmm hmm...\" He purred. \"Every part of you was so incredibly round. I still fantasize about your pregnant body.\" \n\nCassie giggled and blushed as she shook her head. \"You are completely insane, Viking.\" \n\n\"You like me this way. You love it.\" He teased. \n\nMagnus removed her panties and spread her legs, waiting for her to protest. He smiled menacingly as she lay there, obediently awaiting his command. \n\n\"Ikke mere vilde Acacia?\" (No more wild Acacia?) He asked as he leaned down to taste her flower. \n\nHe moaned upon discovering that she was already dripping wet. He took a moment to savor her glistening nectar. Cassie reached down and shoved him back into her, grinding into his mouth as he chuckled while he licked. Watching his chiseled back rise and fall as he panted while he furiously licked her made her ravenous. She grabbed a handful of his hair and pulled him on top of her. He continued to snicker as she bit at his neck while she used her legs to drive him into her. \n\n\"Your poor little fisse must be starving.\" He remarked as he grabbed his pillow and lifted her rear to push it underneath. \n\n\"So are you spoiled now? Do you still like the feel of my pussy?\" She asked as moaned while grinding on to him. \n\n\"Intet f\u00f8les s\u00e5 god som din fisse, Gudinde. Tidligere p\u00e5 aftenen var dejlige. Men det er her jeg h\u00f8rer til.\"(Nothing feels as good as your pussy, Goddess. Earlier tonight was lovely. But this is where I belong.) \n\nMagnus entered a slow, deep rhythm, easing himself against her cervix. He groaned as she clenched him tightly inside of her. Her body trembled as his tip pressed against the sensitive organ. He nuzzled his nose into her hair and inhaled the soft coconut aroma he had grown to crave. She was so wet that she was dripping onto the bed. \n\n\"If only I could get you to gush like that into my mouth.\" He groaned. \n\nCassie moaned as she felt the warm fluid dripping out of her. Before Magnus she had never known that she could gush or squirt, as she had never experienced a cervical orgasm before. Their first romp on the piano bench had opened the doorway to a whole new world of pleasure which she never tired of. \n\nCassie moaned loudly as she rode orgasm after orgasm as Magnus slowly drilled her, hitting every spot within her that he had mentally mapped out. \n\n\"You make my whole body tingle.\" She whispered between moans. \n\nHe sat up and took her sensitive breasts into his hands. Beads of milk aided his fingers as they slipped over her nipples. He smiled, watching her writhe in ecstasy as he massaged her nipples with his thumbs. He could never tire of pleasing his goddess. \n\n\"Even now it's still hard to believe that you're mine, Acacia.\" He groaned as her fluid began to drip down his thighs. \n\n\"Babe- it's- it's happening again!\" She moaned as her body began to tremble. \n\n\"Slap Gudinde, lad din konge oversv\u00f8mme hans rige. (Relax Goddess, let your king flood his kingdom.) \n\nThis was what Magnus had been craving. He lifted her rear off of the pillow and held her pelvis in his hands as he powered into her. Cassie screamed uncontrollably as her sneering, seething husband drove himself against the limits of her vagina. She reached backwards above her head and grabbed the edge of the mattress to bring herself higher; aiding him as he pulled her onto his throbbing phallus with aggressive speed. \n\nCassie began to laugh in between moans, driven mad by the euphoria he had brought her to. Magnus' moans began to sound more like growls as he continued pumping into her. He watched her every move as her head fell back and her breathing became erratic. He braced himself as her legs began to violently spasm. \n\nHe looked down at their joining bodies just in time to see a large gush of fluid rush out of her. The warm, slippery flood coated his shaft and ran down his legs as he too began to spasm. He groaned as he released his seed into her cervix. He closed his eyes as he held her in place, grinding every last drop into her. \n\n\"Ja , Acacia ... tage det hele.\" (Yes, Acacia... take it all.) He gently whispered as he held her up with one arm and stroked her body with his free hand. \n\nHe ran his fingers over her nipples and smiled dizzily as he watched her shiver and moan at his every touch. He gently released her body onto the bed and removed the pillow from beneath her. He continued to stroke her as she curled into a fetal position, still whimpering and trembling in orgasm. \n\nMagnus took the towel he had tossed on the side of the bed and wiped Cassie clean. It was no easy task, as she was still continuously dripping both of their fluids and even the gentle caress of the soft fabric proved to be too much sensation for her to take. When he was satisfied that he had cleaned her as best as he could, he lay down beside her pulled a sheet over them. He took his still trembling wife into his arms and kissed her shoulder gently. It was not the first night he had fallen asleep with his wife shaking from an orgasm; and it wouldn't be the last."
    ],
    "authorname": "Z_Lundy",
    "tags": [
        "domination",
        "black woman",
        "white man",
        "romance",
        "denmark",
        "oral sex",
        "anal",
        "curvy",
        "blood hound",
        "milking"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/the-obsession-epilogue"
}