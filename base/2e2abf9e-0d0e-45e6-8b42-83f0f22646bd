{
    "title": "Patrick Ch. 14",
    "pages": [
        "Chapter 14- Before the Funeral\n\n\n\nPuff agonized and paced for hours before coming to a decision and then he changed his mind once again. He didn't know if he could do what he was thinking of doing. Clay was the closest thing that he had to family and if he did this.....\n\nThe funeral was just beginning so he still had some time to agonize over his choices. If he killed Clay he would have to leave Pittsburgh and could never return and he would be hunted. He would have to spend the rest of his life looking over his shoulder as Clay had contacts everywhere. Fortunately money wouldn't be a problem, he wouldn't be able to live as he was now but he wouldn't suffer either.\n\nHe had already planned for this moment, not the killing of Clay but the moment when he would have to leave at a moment's notice. He had always known that it was going to happen but not under these circumstances. His packed bag sat next to the door of his bedroom, his available cash-$10,000 was in side of his jacket pocket and the rest of his money was sitting safely in a bank account that no one other than himself knew about and it was under a different name.\n\n\"Am I really going to do this?\" he asked himself for the thousandth time, \"Is she worth giving up my life for?\" Puff closed his eyes and opened them again as he wondered not for the first time what it was that Kevyn knew that Clay that he would want her killed. It was more than that he realized, it was the man and the issue wasn't his race, it was the fact that he had managed to do what Clay hadn't been able to do- obtain Kevyn's love and loyalty.\n\nHe found himself glad that he kept his romantic endeavors to a minimum even though he wanted nothing more than to find a nice woman to settle down with and to leave this life. He had visions of moving to someplace warm and where he and his wife could sit on the porch in January sipping drinks while people in the east froze their asses off but he had never met that woman, well he had but.... \n\nClay tried to set him up with cousins and sisters of friends but it never went anywhere beyond a first date. It wasn't that they weren't beautiful and intelligent; they just did nothing for him. There was one woman who did and he was considering killing his best friend for her even though she was out of his grasp and always had been.\n\nHe walked over to the closet, took down a carry on bag and carried it to the bed. After unzipping it he pulled out a 9mm automatic glock and laid it on the bed. He looked at the gun for several long minutes before reaching inside to take out the 9mm regular bullets that he was planning to use instead of the hollow point rounds. \n\nPuff sat on the bed and wondered if he just shouldn't just get his get his ass out of dodge but then Kevyn would still be in danger. Clay would just get someone else to do it and he would rather be the one to do it.... \"Fuck!\" he whispered. He was actually considering doing what Clay ordered, he was really thinking about killing the one person that he knew to be a good person and didn't deserve to die.\"\n\n********\n\nGene took one drink and then another followed by another until he began to feel a slight buzz. If he didn't do something, they would be planning another funeral and this one would be his fault. He would also have what he wanted.... Control and what he didn't want, Patrick Sinclaire up his ass. Puff and Clay weren't the only ones who sensed the power that radiated from Patrick, Gene sensed and felt it too and it scared him.\n\nThat Patrick loved his sister was clear, that he also cared for Louise was just as obvious and he wondered why. He acknowledged that of all of them, Louise was probably the only one without an agenda. She stayed out of the family drama as much as she could instead concentrating on her job and their mother. Even Barb who lived in Connecticut had an agenda even though she tried to hide it. As soon as she heard about Kevyn's rich man she started packing and was out of the door within the hour.\n\nGene blew out a breath and resisted having another drink. It was bad enough that he was slightly buzzed but he would never hear the end of it if he showed up at the funeral drunk. He looked at the program for the services, opened and then flung it across the room when he saw Patrick's name listed as family. His anger rose as he thought about the repast and where it was going to be. Never in his wildest dreams could he have afforded a place like that and here this... this interloper comes and makes him look bad.\n\nBut still... Kevyn was his sister and she loved the man as much as he loved her and was as protective of Louise as Patrick was growing to be. He hadn't missed the accusatory glance that Kevyn gave him when Patrick was patching up Lou's hand. She always knew when he was involved in something but to her credit she didn't ask about it, but she knew.\n\nGene walked over to a locked cabinet and looked at it for several minutes before taking out the key to unlock it. He looked at the 9mm automatic Glock, closed the cabinet and locked it again. He bought the gun for protection but he hadn't touched it since he took the classes on how to use it. He couldn't believe that he was considering using it now, not on himself but on whom? Clay? Patrick? Kevyn? Who?\n\nAgainst his better judgment Gene mixed himself another drink and downed it in one gulp. If he got caught....he stopped himself, to think along those lines meant that he had decided and he hadn't or had he? Gene sat the glass down and headed for the shower, suddenly he wasn't feeling too well.\n\n*******\n\nClay said one of his many prayers for protection and forgiveness for what he was about to do but it came down his safety. The funeral was a few hours away and he would take the opportunity to say a final goodbye to Kevyn, after tonight he wouldn't see her again until her funeral. The thought saddened him beyond belief but he wouldn't and couldn't change his mind. His heart hurt for the family that they would have to bury another loved one so soon but it couldn't be helped.\n\nHe wondered how Puff was holding up. He had known for years that Puff harbored feelings for Kevyn but had never acted on them out of respect for him. In the end though, Puff's loyalty to him would win out. He might feel remorse and anger but he would do as he was told.\n\n********\n\nLouise looked around the house where she and her mother passed away so many hours watching the cooking channel. It felt different now and she had no desire to stay here. She meant it when she told Gene that he could have the house, she wanted to leave with nothing but her clothing and a few small trinkets that their mother had given her. She wondered if Kevyn was busy, she really wanted to talk to her about going back with them.\n\nAs she straightened up the living room and unplugged everything electrical as their mother had done every time she left the house. Louise choked back a sob of fear, pain and loneliness; she was the one other than Kevyn who would miss her the most.\n\nAs she finished picking up and unplugging things she went to the kitchen thinking about Kevyn. She wondered if she would be as lucky as Kevyn in finding someone to love her. She could care less about money, she just wanted to be cared for and about and she had to get away from Pittsburgh.\n\nShe made her decision and picked up the phone.\n\n*********\n\nKevyn looked at the outfit that she bought for the service, it hung in the closet next to the dark suit that Patrick had bought to wear. Because her mother wished it, Kevyn's outfit wasn't black but cream colored. Even at her father's funeral her mother refused to let any of them wear black. To her it symbolized a final goodbye whereas the lighter colors symbolized a new beginning.\n\nPatrick stood behind her with his arms around her not knowing how to make any of it better. The only consolation was that soon it would be over and he would spend every minute with her as she mourned and then they could move forward. They had a few hours before the funeral and she needed to rest even if she didn't think that she did.\n\n\"Come on baby, you need to rest.\" Patrick said as he pulled her toward the bed pulling harder when she resisted. He sat her on the side of the bed and gently pushed her back until she was lying down and then lay down next to her. Kevyn snuggled into him and closed her eyes, he was right, she was exhausted. She was almost asleep when her phone rang.\n\nPatrick almost silenced it but thought better of it and answered it.\n\n\"Ummm is Kevyn there?\" a soft shy voice asked.\n\n\"Louise? It's Patrick, are you alright?\"\n\n\"I.... I just wanted to talk to Kevyn, is she there?\"\n\nKevyn took the phone from Patrick and listened for several minutes before saying anything.\n\n\"Of course you can come back with us! I was planning to ask you but something always got in the way. Yes you can give notice effective immediately. No, don.... Lou, it's alright really. Alright, I'll see you tonight, get some rest.\"\n\nAfter she hung up, Kevyn realized that she just unilaterally invited Lou to live with them without talking to Patrick about it.\n\n\"I'm so sorry....\"\n\nPatrick shushed her, \"if you weren't going to ask her I was.\"\n\n\"Really?\" Kevyn asked surprised.\n\n\"Really and you never have to ask my permission to have someone stay with us.\" he replied.\n\n\"Lou has always been so sensitive.\" Kevyn said as she settled back into Patrick's arms. \"she was always the one that needed to be protected and you have no idea of how hard it was for me to leave her here but I didn't even know what was going to happen once I got to California.\"\n\n\"I'm sure that she understood that.\" Patrick said rubbing her arms.\n\n\"I know but I think I worried about her almost as much as I did mom. I'm glad that she's going back with us.\"\n\n\"I am too, now sleep.\"\n\n*********\n\nAfter the repast\n\nKevyn was relieved when the service and the repast was over. Her nap had long worn off and all she wanted to do was to finish with her mother's business and leave Pittsburgh. She pulled Lou aside and hugged her.\n\n\"You're not staying in the house tonight; you're staying at the hotel with us.\"\n\n\"I'll be okay at the house.\" Lou replied.\n\n\"I know that but we'd like for you to stay with us.\" Kevyn replied.\n\n\"I don't have clothes or anything...\"\n\n\"We'll go to the house so you can get some things, come on please? We'll even watch the cooking channel.\" Kevyn said.\n\n\"What about Patrick, won't he care?\"\n\n\"It was partly his idea, so will you come?\"\n\n\"He really won't care?\" Louise asked. The reality of it was that she didn't want to stay at the house alone and Kevyn's invitation was an unexpected but welcome surprise.\n\n\"Ask him yourself if you don't believe me.\" Kevyn said as she looked around for Patrick. It was then that she noticed that Gene was gone but she gave it no thought.\n\nPatrick stood off to the side of the room in the clear sight of Clay daring him to approach Kevyn. If Clay noticed he gave no indication of it as he toyed with the cross in his hands. Patrick felt Kevyn's eyes on him and walked over to her putting his arm around her when he reached her.\n\n\"I was telling Lou that it's perfectly alright with you if she stays at the hotel with us.\" Kevyn said.\n\n\"Of course it is! I already have the room next to ours reserved for you.\" Patrick said smiling at her.\n\nLouise was at a loss for words that someone who barely knew her was being so nice to her.\n\n\"Thank you.\" she said softly.\n\n\"You're welcome, \"Patrick replied. \"Are we ready to go?\"\n\n********\n\nPuff sat in his car still undecided about what he was going to do. If he killed Kevyn tonight it would be disobeying the order that it not happen until the day after the funeral so what did that mean? The Glock sat on the seat next to him ready to be used. He took in his surroundings trying to figure out the best vantage point, he had made his decision. He picked up the gun and slipped it into the holster under his jacket and got out of the car taking his time so he didn't attract any attention. \n\nHe crossed the street and headed toward the hotel and slipped inside. Nodding at the clerk at the front desk Puff made his way to the restaurant where the repast was being held and peeked in. He saw Clay sitting in the back at a table with Gene, Juliet and Barb. Kevyn sat at another table with her man, Louise and Leon with the other tables being filled with people he hadn't seen in years nor did he care to.\n\nPuff slipped back outside and sat in a small enclosed area located to the front of the hotel to wait.\n\n*******\n\nGene slipped out a full ten minutes before the rest of the family and Clay did. He made his way to his beat up old car and got in and sat for a moment. He opened the glove box, took out the gun and looked at it; he was really going to shoot someone. His only prayers were that he hit the right person and that he wasn't caught.\n\nHis hands shook as he checked to make sure that the gun was properly loaded. He wished that he had a drink or something to steady his nerves but then thought that maybe it was just as well that he didn't. He put the gun inside of a pocket that was in the inside of his jacket not realizing how heavy it was until now.\n\nHe was really going to shoot someone.\n\nHe walked across the parking lot and stood behind a tree that partially hid him from view and waited.\n\n*******\n\nThe group stood in the lobby to make plans for the following night.\n\n\"Be at mom's by six.\" Kevyn said. \"With any luck we can get through her things in one evening if we all chip in and help.\"\n\nKevyn caught Barbara looking at Patrick and shook her head. She already knew what was going on inside of her sister's head and ignored it. After saying goodnight, Juliet, Leon and Barb left together followed by Clay, Patrick, Kevyn and finally Louise.\n\nPatrick froze, grabbed Kevyn and yelled \"Down!\" as he pulled Kevyn into his body, turned and dropped to the ground reaching out for Louise on the way down. Seconds later the shot came followed by a deep moan of pain. No one moved from where they were not sure if another shot was coming.\n\nKevyn totally unprepared for the tackle felt her breath leave her as Patrick's much bigger and heavier body landed on top of hers.\n\n\"Baby? Are you alright?\" Patrick asked.\n\n\"I think so... Lou? Lou are you alright?\"\n\nKevyn's heart raced when there was no immediate answer; she breathed a sigh of relief when she heard Louise's soft voice saying that she was alright.\n\n*********\n\nPuff waited until his target came into view. Fortunately the target was walking alone but that could change at any second. \n\n\"I'm sorry Clay.\" he said silently as he aimed and pulled the trigger. In his deep concentration he didn't notice that there were some people already on the ground. After he fired the shot, he put the gun away and walked away from the hotel. He could already hear sirens approaching as he made it to his car, he couldn't be seen here.\n\n*******\n\nGene swallowed hard and his hands shook as he held the loaded gun in both hands and waited. He saw Clay walking out alone and thanked his lucky stars that he wouldn't accidentally shoot any of his family. He wondered what was happening when he heard Patrick yell and saw him throw Kevyn to the ground. He heard the gunshot and the moan and wondered where it had come from, he hadn't fired his gun. \n\nNot sure of what to do, he ran back to his car, tossed the gun into the back seat and went back to the hotel. By the time he got back everyone was standing except for one person.\n\n****** \n\nPatrick stood up, helped Kevyn and then Louise up.\n\n\"Are either of you hurt?\" he asked.\n\n\"I'm winded but I'm alright.\" Kevyn replied, \"Lou?\"\n\n\"I'm alright too.\"\n\nPatrick looked around relieved to see that none of the Yancy siblings were hurt, which only left Clay. \n\n\"Go inside and wait for the police.\" Patrick said as he made his way to Clay who was alive but barely. Whoever shot him was a professional and was aiming to kill.\n\nGene stared at Clay in shock and relief that he hadn't been the one to fire the shot. Patrick looked to see where the wound was and found the entry point at the neck. He looked around but saw no one suspecting that the shooter was already gone. \n\nClay's hands fluttered as if they were looking for something and remembering the cross, Patrick reached inside of Clay's shirt and pulled it out, yanking it so that the chain broke and placed it in Clay's hands. Clay took his last breath just as the police followed by the ambulance arrived. \n\n*******\n\nKevyn watched with mixed feelings, she as sorry that Clay died but she was relieved that he no longer posed a threat to her or any of her family. She wondered who would have shot him and then decided that she really didn't want to know. Carrying Clay's secret around for so many years was plenty.\n\nThe police interviewed both her and Louise for several minutes before letting them go. After more than three hours they had no suspects. Clay's body was long gone although the evidence that he had been once alive stained the pavement. Eventually everyone was free to go and the police had no suspects at the moment.\n\n********\n\nAfter the shot, Puff casually walked to his car and drove away. It would only be a matter of time before the police came looking for him once they realized that it was Clay Robinson who had been shot. He headed straight for the airport; his flight for Jamaica was leaving in two hours.\n\nAs he drove he took a minute to say a silent prayer for Clay and to wish Kevyn well, she was the first and only woman that he had loved enough to kill for.\n\n******* \n\nPatrick held Kevyn in his lap while they waited for Louise to pack. Her head rested on his shoulder and her hands in her lap. She knew that Patrick would want to know about her and Clay and there was no real reason not to tell him, he couldn't hurt any of them anymore which was why she had kept her mouth shut for so long.\n\nFinally Louise came down the stairs carrying a large suitcase and her laptop that she hadn't used for anything other than games since their father died because they had cut every expense that they deemed unnecessary.\n\nAn hour later they were back at the hotel. Louise was in her room wanting to relax after what had been a long and traumatic day. Like Kevyn she fell in love with the huge bathtub and gasped when she saw the various oils and lotions that Patrick had her bathroom stocked with.\n\n\"And please feel free to call room service if you need or want anything or us if you don't want to be alone.\" Patrick said giving the shy woman a hug.\n\n\"Why are you being so nice to me?\" Lou asked.\n\n\"Because you're a nice person, you're Kevyn's sister and you're family.\" Patrick replied.\n\nLou smiled back at him, \"Thank you and good night.\"\n\n********\n\n\"Thank you for being so sweet to her.\" Kevyn said as she hugged him.\n\n\"I meant every word that I said to her.\" Patrick replied returning the hug, \"now let's get you taken care of.\" he added as he led her to the bathroom and turned on the water to fill the tub. He poured a generous amount of lavender oil in the water as it filled and began to undress her.\n\n\"I can do that.\" Kevyn said even as she sighed with pleasure as Patrick's hands massaged the nape of her neck.\n\n\"I know you can but I want to check for bruises, I threw you down pretty hard and then I landed on top of you.\"\n\n\"I'm fine, really.\" Kevyn replied, \"I was just winded.\"\n\n\"I still want to see.\" Patrick replied as he helped her out of her clothes. \"Have I mentioned how beautiful you are?\"\n\n\"A time or two.\" Kevyn replied blushing.\n\n\"Is that all?\" Patrick teased, \"Then I have been remiss in my duties as your mate.\"\n\n\"Yes well, there were other things....\"\n\n\"You Kevyn Sinclaire are the most beautiful woman that I have ever seen.\" Patrick said looking down at her, \"that beauty isn't just a physical beauty but an inner one as well. You have handled the events of this week with a grace and courage that makes me proud that you claimed me as your mate. I am and will be proud to introduce you to my family as my mate.\"",
        "\"I don't know what to say except thank you for waiting for me and for coming. I'm not so sure that I could have done this again without you.\"\n\n\"You would have.\" Patrick replied, \"But I'm glad that I was here.\"\n\nPatrick helped her in to the tub and slid in behind her, \"relax I won't let you slide under.\"\n\nKevyn leaned back against Patrick's chest and closed her eyes as he hummed softly in her ear. She felt his hands move lightly up and down her arms as he continued to hum. His hands moved from her arms to her breasts gently massaging and tweaking the nipples until they were hard points beneath his hands. \n\nOne hand left a breast and made its way down her stomach and between her legs and stopped for just a moment before separating her lips and rubbing.\n\n\"Let go, I've got you.\" Patrick crooned and then resumed humming.\n\nKevyn let out a cry that started low in her throat and ended as a scream that she was sure that Louise had to have heard.\n\nPatrick waited until she caught her breath before helping her out of the tub and taking her back to the bed. \n\n\"You need to be taken care of too.\" Kevyn said and tried to reach for him.\n\n\"I'm fine; this is for you now close your eyes.\"\n\nKevyn was asleep before Patrick had finished massaging her arms with oil.\n\n*********\n\nKevyn was awake early and went to check on Louise who was also awake and eating a very late breakfast while watching the food network. She jumped when she saw Kevyn and then gave an embarrassed grin, \"I was hungry but I got the cheapest things on the menu.\"\n\nKevyn smiled back and joined Lou on the bed.\n\n\"I'm really glad that you're coming with us.\" she said stealing a piece of bacon off of Lou's plate.\n\n\"Me too, I hate it here.\"\n\n\"Lou, you know that I didn't want to leave you here right? If there was any way.....\"\n\n\"Kev, it's alright, I understand and someone had to stay and help mom.\"\n\nThe sisters talked for a few more minutes before Kevyn went back to her and Patrick's room. \n\n\"Everything alright?\" he asked.\n\n\"It's fine, she isn't mad that I had to leave her here.\" Kevyn replied.\n\n\"Did you really think that she would be?\" Patrick asked.\n\nKevyn shrugged her shoulders, \"Louise can be hard to read sometimes so I really didn't know but at any rate, it's all good.\"\n\nPatrick debated on whether he should bring up Clay Robinson. Part of him wanted to get through with everything pertaining to the death of her mother but part of him wanted to be done with Clay Robinson so that when they left, he stayed here. Kevyn was the one who decided the matter.\n\n\"I need to tell you about Clay.\" she said nervously.\n\nPatrick took her hand and led her to the small sitting room. He didn't want to discuss Clay or anything else negative in the place where they made love. \n\n\"Take your time.\" he said taking her hands into his.\n\n\"You have to understand something,\" Kevyn began, \"Clay.... Clay always made it his mission to protect me even though I didn't want it. The name calling and teasing hurt but that's just the way it was and he got teased a lot because of me. I don't know at what point the decided that he decided that we were supposed to be together as in get married and have children together but I never felt that way about him even when he was the only boy in school who paid any attention to me. I know there were girls who would have jumped at the chance just so that they'd have somebody but that wasn't me, I really didn't care if I had a boyfriend or if I got asked to the prom.... None of it mattered.\n\n\"You were true to yourself.\" Patrick said stroking her face.\n\n\"Whatever.\" Kevyn replied, \"But at any rate, as we grew up if anyone and I mean anyone said anything bad about me they wound up hurt somehow and they would never say that it was Clay that did it. Then Clay started telling everyone that I was his and well can you see where this is going?\" she asked.\n\n\"He became obsessed.\" Patrick said.\n\n\"I couldn't go anywhere or do anything without him knowing about it. By the time it had gotten really bad, I had lost a lot of weight from playing softball and other sports. I was so busy that I almost managed to forget about him until the games, he came to every single one of them.\"\n\n\"Kevyn, did he hurt you?\" Patrick asked his throat tight.\n\n\"You mean rape me?\" Kevyn asked. \"No, it was nothing like that- that wasn't Clay's style but some of his friends.... And no, none of them hurt me either.\"\n\nPatrick breathed easier, that was the worst thing that he could have thought of happening to her.\n\n\"One day I decided that the next time he asked me out that I would go. I thought that maybe he would see that I wasn't the type of girl that he wanted.\"\n\n\"Why would you say that?\" Patrick asked.\n\n\"I don't know.\" Kevyn replied, \"I didn't think that I was ugly or anything like that. I was okay with myself but I wasn't the kind of girl that would jump through hoops for a guy and Clay was used to being obeyed. Anyway, he picked me up and said that we were going somewhere to talk which is exactly what I wanted to do. \n\nClay didn't have money, the car he picked me up in belonged to a friend and that didn't matter to me I'm just telling you this so you understand Clay a little better. When we got to Burger King, he found a quiet corner so that we could talk.... Patrick, he thought that I didn't want him because he was poor. He was begging me to give him a chance to prove that he could take care of me in a way befitting a queen and those were his words. Nothing I said convinced him otherwise never mind the fact that we were both eighteen and had graduated from high school that spring.\"\n\nKevyn's eyes burned as she remembered that night.\n\n\"After we ate, he said that he wanted to show me something, something told me to say no but he was so hurt when I told him that I just didn't care about him in the same way... so I went with him. He drove us to this old warehouse that had been closed for years and I asked him why we were there. He told me that he wanted to prove to me that he wouldn't always be poor and that if I would only give him time that by the following year we would be living in a new house.\"\n\nPatrick got up and got her a glass of water stopping by the sink to wet a wash cloth. When he sat down he handed her the water and then washed her face when she was finished.\n\n\"After we got there he told me to wait in the car and that he would only be gone for a few minutes. The few minutes turned into a half hour and I decided to see what was taking so long. I got out of the car and walked in the same direction that Clay had gone in.... They.... Th.... They had a boy hanging from his arms and there was blood from cuts and... he was dead! Clay was holding the knife... I saw him stab the body!\"\n\nKevyn was crying but she continued.\n\n\"He-Clay saw me because he was facing the door, the others were so busy talking that they didn't notice him looking at me. I backed away and got back into the car and waited for Clay to come out. I didn't know what to do! If I would have said anything they would have killed me. If he came to the car and I was gone, he would have had to tell them that I was there and I have no doubts that he would have\"\n\n\"Did Clay threaten you?\" Patrick asked.\n\n\"He didn't have to, his look said it all.\" Kevyn replied. \"The next week I picked up a second job and saved every penny I could and as soon as I had enough money I left and came back only once a year and every year he finds out that I'm here and we do the same song and dance. He invited me to dinner-anywhere I wanted to go so that we could talk.\"\n\nPatrick hugged Kevyn to him.\n\n\"He was afraid that you would tell someone.\" Patrick said understanding, \"there's no statute of limitation on murder and at the time Clay was legally an adult. Sweetheart he was going to have you killed.\" \n\n\"That bullet was meant for me?\"\n\n\"No, it wasn't, someone wanted Clay dead and in doing that removed the threat to you.\" Patrick said, \"Sweetheart I think that we need to call the police and tell them what you know.\"\n\nShe didn't want to but knew that Patrick was right; she had kept the secret for far too long. There wasn't a day that went by where she hadn't thought about the family of that boy and as far as she knew his body had never been found.\n\nA short time later a detective was sitting in the small room taking Kevyn's statement.\n\n\"Do you remember where this ware house is?\" he asked.\n\n\"I will never forget it.\" Kevyn replied and then gave the detective the address.\n\n\"You know Mrs. Sinclaire, we could have protected you.\" the detective said.\n\n\"I know but... I was so scared and what were you going to do? Drive by my house once a night? I know that I should have called even anonymously but he would have known that it was me.\" Kevyn said.\n\n\"Did you know any of the other men there?\"\n\nKevyn froze, she hadn't thought about them, if they were still around then they knew about Clay being killed.\n\n\"Kev?\" Patrick said touching her hand, \"they can't harm you, I won't let them.\"\n\n\"I didn't really see their faces, their backs were to me and the only one that saw me was Clay.\" Kevyn replied.\n\nThe detective left after asking a few more questions including why Clay was coming after her all of this time and if she had any idea of who would have shot him.\n\n\"He came after her because of me.\" Patrick replied, \"As to who shot him, we have no idea but I would like to thank the man or woman who did it.\" he added.\n\nKevyn felt a hundred pounds lighter; she hadn't realized how heavy that secret was until now. That part of her life as over now all that was left was to get through the dividing of their mother's belongings.\n\n*******\n\nAfter he got home Gene drank himself into a stupor. The police asked him if he had any idea as to who would have shot Clay. He told them no but he was almost sure that it was Puff; he was almost as much in love with Kevyn as Clay had been. But whoever it was, Gene hoped that they got away, they had done him a favor when they killed Clay, when it came down to it; he wouldn't have been able to pull the trigger no matter how much he may wanted to.\n\nAfter locking his gun back up, Gene stumbled into his bedroom undressing as he went leaving a trail of clothes behind him. By the time he reached the bed, all he had on was his underwear; he fell into the bed and didn't wake up until the next afternoon.\n\n*******\n\n\"The last part and then we can leave.\" Kevyn thought to herself. She and Louise spent the afternoon watching cooking shows while Patrick took care of some business matters. She also took the time to talk to Louise about what she wanted to do with the house.\n\n\"I don't want it.\" she said firmly.\n\n\"Alright but what do you want to do with it?\" Kevyn asked.\n\n\"Let them have it.\" Louise replied, \"They can sell it if they want.\"\n\n\"Lou, is it alright if we gave it to Gene? He's the only one without a home and....\"\n\n\"That's fine.\" Louise said, \"I already told him that he could have it....\"\n\n\"What?\" Kevyn asked sensing that Louise wanted to change the subject.\n\n\"I was just wondering how you met Patrick, he's very nice.\"\n\nKevyn gave Louise the condensed version leaving out the vampirism and the family history of rapes. That was something that she didn't need to know about at least not in this point in time. \n\nPatrick left them alone until lunch and then only disturbed them to take their orders for a late lunch. As with breakfast Louise chose the cheapest item on the menu- a salad.\n\n\"That's all you're going to have?\" Patrick asked.\n\n\"I'm not very hungry.\" Louise replied.\n\n\"Are you certain?\" Patrick asked, \"You can order whatever you want.\"\n\nReluctantly Louise added a bowl of soup to her order flinching when she saw the price. She stared at Patrick in disbelief as she listened to him order what sounded like the entire menu. Seeing the expression on Lou's face, Kevyn laughed and told Louise that Patrick would indeed eat most if not all that he ordered.\n\n\"How do you not get fat?\" Louise asked.\n\n\"High metabolism.\" Patrick replied, \"by the way, how's the hand?\"\n\n\"Much better, it doesn't hurt anymore.\" she replied.\n\nAfter lunch Patrick left the sisters alone to continue their visit but Kevyn was distracted. Something was going on with Patrick, it was nothing that she could pinpoint but he was anxious.\n\n\"Lou, will you excuse me for a minute?\"\n\n\"Sure, as a matter of fact if you don't mind I'd like to take a nap.\" Louise replied.\n\n********\n\nPatrick was on the phone when Kevyn went into their suite, he turned toward her when heard her come in. without interrupting his conversation, Patrick held out a hand toward her. He hung up a minute later and hugged Kevyn as he tried to think of the best way to help Ethan from where he was.\n\nEthan was adamant that he not leave Kevyn which he wouldn't have done anyway. Kevyn hugged him back and pulled away from him.\n\n\"What happened?\" she asked.\n\nPatrick hesitated, giving her bad news was not the way that he wanted to bring her into the family but there was no help for it.\n\n\"Let's sit.\" he said leading her to the sitting room.\n\nAn hour later Kevyn was completely caught up on what was happening with Patrick's family.\n\n\"Someone is stalking them?\" Kevyn asked.\n\n\"It's much more than that, he wants to hurt us and before you say it I'm not going.\" Patrick said, \"There's nothing that I can do that isn't already being done and my place is with you.\"\n\nKevyn tried to talk Patrick into leaving only giving up when he became firm with her.\n\n\"Kevyn I am not leaving you here alone so stop asking!\"\n\nImmediately contrite Patrick kissed her, \"I'm sorry I snapped but you need to understand that you will always come first. It is the same with all of us, our mates come before anything or anyone else and that will never change so no more talk of me leaving.\"\n\n********\n\n\"Almost.\" Kevyn thought as she looked around the living room at her siblings. She loved them but they were royal pains in the asses that she couldn't wait to get away from with the exception of Louise. The bickering over what she had considered trinkets had already started and she had already had enough.\n\n\"Will you all just shut the hell up?\" she yelled at the top of her lungs. \"This is ridiculous and I've had enough! This is what we're going to do and no one had better open their mouths to complain!\" she said looking directly at Gene.\n\nThe room went silent and she continued, \"Now, you all made me executor of mom's estate and let me just take a moment to say that I never wanted any of this.\" Again she looked at Gene who looked away. \"This house and everything in it belongs to Lou, she took care of mom and probably bought at least of half of what's in here.\"\n\nEveryone stared at Kevyn as if she had just grown another head but no one spoke.\n\n\"So this is what's going to happen.\" Kevyn continued, \"Lou has already decided what happens to the house and everything in it and her decisions are final. If you want to trade, fight or argue it waits until after we're gone.\"\n\n\"Louise isn't going to live here?\" Barbara asked.\n\n\"No, I'm going back with Kev and Patrick.\" Louise said.\n\n\"You're leaving?\" Juliet asked, \"But who'll baby sit...\"\n\n\"Not my problem.\" Louise said quietly feeling proud that she could finally say what she wanted to say every time Juliet begged her to baby sit.\n\n\"Let's get this show on the road.\" Kevyn said interrupting. She knew exactly where the conversation was heading just as she knew that she would be approached by at least one of her other siblings about going back to California.\n\nLouise stood up and took a folded piece of paper from her pocket. After giving Kevyn a nervous look she began to read from the paper.\n\n\"I Louise Jenae Yancy give this house and all of its contents with the exception of my personal belongings and the things that mother gave me to Gene Walter Yancy to do with as he wishes.\"\n\nLouise handed the paper to Gene who realized that it was an official document. He looked up to see the remainder of his siblings looking at him expectantly.\n\n\"Oh shit.\" he thought as Juliet started bombarding him with questions.\n\n******\n\nThree days later Kevyn, Patrick and Louise were on their way back to California. They stayed long enough to help pack up their mother's clothes and take them to good will while Patrick took care of any outstanding bills of which there were many. As Kevyn had suspected, one of her siblings approached her about going back with them to California. \n\nBarb corned her in the kitchen one night as Kevyn was making sandwiches for everyone.\n\n\"You did good.\" she said referring to Patrick, \"I like him.\"\n\n\"Thanks.\" Kevyn replied her guard already up.\n\n\"I've always wanted to go out west.\" Barbara said dropping the hint.\n\n\"It is beautiful.\" Kevyn replied as she kept working.\n\n\"I was thinking.....\"\n\n\"No.\" Kevyn said.\n\n\"You don't even know what I was going to say!\" Barbara said miffed.\n\n\"Yeah, actually I do and the answer is no.\" Kevyn said. \"Part of the reason why I left was to get away from all of the drama that I call a family. I love you all don't get me wrong but I can't be with you for longer than a visit or a phone call and if I took you back with me....\"\n\n\"You're taking Louise!\" Barbara shot back.\n\n\"Yes I am and do you know why?\" Kevyn asked. \"Because next to me she was the family toilet. Maybe more so because she lived here and she never complained. Even now all Juliet was concerned about was who was going to baby sit her kids so that she could go out and she wasn't even paying her! Lou didn't and doesn't have an agenda.\"\n\n\"But...\"\n\n\"The answer is no and that goes for the rest of them too.\" Kevyn said ending the discussion. She wasn't surprised when Barbara took what she wanted from the house and was gone the next morning without saying goodbye to anyone.\n\n******\n\nKevyn looked over at Louise and smiled, she looked so much younger now that she was away from the stress of their family. She would live with them for as long as she wanted to and fortunately, Louise was a night owl too so it wouldn't be unusual for her to see Patrick only in the evenings.\n\nDuring their last night at the hotel Kevyn and Patrick talked about a variety of things including school.\n\n\"You're going back aren't you?\" Patrick asked as they relaxed in the bathtub.\n\n\"I would like to.\" Kevyn replied.\n\n\"Good.\" Patrick replied, \"I want you to do whatever it is that you want to do, what about your job?\"\n\n\"I would like to keep working there at least part time.\" Kevyn replied and waited for an objection.\n\n\"Only if you agree to my terms.\" Patrick replied. \"Given what's happening with our family you have a guard with you at all times, it can be a female or male, they can pose as workers I don't care but you're not going anywhere alone, as a matter of fact even I can be with you and no one would know.\"\n\nShe started to object and stopped, it would have been pointless.\n\n\"Agreed but what about you? Are you going back to the classroom or are you going to teach online?\"\n\n\"I think that I'll teach the online class.\" Patrick replied, \"That way I'm always free to protect you myself.\" Patrick replied playing with her fingers.\n\nThe subject of children came up. It was something that Kevyn had never given serious thought to; she knew that she definitely hadn't wanted children with Lonnie but Patrick? Definitely. She knew that Patrick would be a good father and she was sure that she would be a good mother as her mother had been.\n\nShe dozed off with very happy thoughts.\n\n********** \n\n\"We will be landing in approximately thirty minutes.\" the pilot announced.\n\nLouise was looking out of the window of the jet full of excitement at the prospect of a new life and who knew? Maybe she would meet a nice man like Kevyn did and money wasn't a requirement and maybe she would go to school.... \"So many possibilities.\" She thought to herself as the plane began its descent into Los Angeles.",
        "********\n\nAn hour later, Kevyn, Patrick and Louise were walking through the airport and to the car that was waiting to take them to Patrick's home now their home as he kept reminding them. In spite of what was happening with their family, Patrick was happy and at peace. He had Kevyn and now a sister in Louise and everything else would fall into place. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "shooting",
        "bbw"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/patrick-ch-14"
}