{
    "title": "Ambiramus Ch. 02",
    "pages": [
        "A/N -- Thanks for the comments and feedback regarding the first chapter. Always a little nerve-wracking writing a story in a new category, wondering how it'll be received.\n\nHope you enjoy the following chapters just as much.\n\n*****\n\n\"Mike, Chris, could you pop into my office please?\"\n\nSitting behind my desk, waiting for my two friends to walk in, I went over in my mind what to ask them. Gesturing for Chris to close the door as he followed in Mike, they took a seat opposite me. They both looked a little apprehensive. \"Something wrong, Mark?\" Mike asked cautiously.\n\n\"Yeah, you've been in a good mood recently,\" Chris added.\n\n\"Do you think Cindy would like it if I sent her flowers?\" They shared a glance and started to laugh. Shrugging somewhat helplessly, I added, \"I just don't really know. I mean, she's a woman but... do women like her want flowers? Her apartment is what I'd call incredibly feminine. Don't remember any flowers around though.\"\n\n\"Sending her flowers? So this is... a romance?\" Chris wondered.\n\n\"I really fucking like her,\" I admitted quietly, glancing away, \"I mean, I was honestly left wondering if I'd ever feel this sort of thing again. I think about her all day.\"\n\nThere was silence before Mike whispered, \"You don't just like her. You love her already.\"\n\n\"Hey, let's not get too ahead of ourselves,\" I retorted, \"And all I want to do is buy her flowers. And maybe I need to ask about one other thing too.\"\n\nThey shared another glance. \"Mark, you buy her flowers, you'll make her bloody year,\" Mike said, \"Women love it when their men buy them shit, as far as I know. What did your ex-wife like?\" I gave him a dirty look. \"Look, before the hate, you did love the bitch so...\"\n\n\"Okay, I'll call a florist near her office building, have them deliver something. Maybe with a teddy bear or something?\" Laughter filled the silence again. \"What? I thought it would be nice.\"\n\n\"You've got it bad, Mark. I can't remember seeing you like this, not even with the ex,\" Mike said.\n\n\"What was the second thing?\" Chris asked.\n\n\"Okay, so I'm not the most hirsute of men out there. I have a light covering on my chest. But... um... well, I guess when it comes to something Cindy and I have discussed, I'd like it to be more pleasurable and... appealing. I know you two guys wax and keep yourselves smooth. Um... do you know anyone that can do my back, butt and... you know, around a certain place at my rear...\"\n\nAnother shared glance. More laughter at my expense, though it was good natured, so I didn't mind. \"You'd really do that for her?\" Mike asked.\n\n\"Yeah. I mean, her body is fucking flawless and pretty much hairless. I haven't asked her as I want it to be a surprise when it does happen.\"\n\n\"You're going to... bottom for her?\" Chris asked, seeing his eyebrows raised.\n\n\"She's mentioned that she likes it from time to time. I'm willing to consider it.\"\n\n\"You don't think it's... gay?\" Mike wondered, seeing the smirk on his face. Bastard.\n\n\"No. She's a woman, she just happens to have the same genitalia as me.\"\n\nThe grins on their faces were immediate before they looked at each other. \"Let's remember this man accepted we were both gay when we told him at fourteen. Always been open-minded regarding things like this,\" Mike said.\n\n\"Shame he's not actually gay,\" Chris added.\n\n\"Yeah, but I'm the same age as you two. You like them young, innocent and whatever else it is you find appealing.\"\n\n\"Okay, I usually do certain parts myself,\" Mike explained, \"But when it comes to my back and my butt, I get specific treatment. Before you start wondering, I like my arse being as hairless as the men I fuck. It just feels nice.\"\n\n\"We get laser treatment,\" Chris explained further, \"Not across the entire region, just... specific places. The places were fingers, tongues and even the occasional cock might find itself.\"\n\n\"Give me your phone, I'll put her number in the phone.\"\n\n\"Her?\"\n\nMike grinned. \"I'm fairly sure she's the same as Cindy. She's never told me one way or the other. I've tried to figure it out for the past couple of years, but no dice.\"\n\nChecking the internet, I found a florist only a couple of blocks from Cindy's office. Wanting to ask for advice, I called and was answered by a sweet sounding woman. Explaining that it was a new relationship and I just wanted something to convey how much I already liked her, she explained that a bouquet with an assortment of flowers would be perfect. I then asked if they added anything like a small teddy bear. I'd noticed one or two at her apartment and thought it would be something extra she'd like. Asking when I'd like them delivered, I suggested after lunch, perhaps early afternoon. I paid and was told they'd be delivered no later than 2pm.\n\nI called the other number while I was on lunch. Mike eventually just took my phone and explained what I wanted as I spent half the time stumbling over what I wanted to get. \"He wants his back, crack and arse nice and smooth, Emma,\" he said, \"Apparently he does the front himself.\"\n\n\"I have clippers for that,\" I muttered. I wasn't sure if I wanted my own area completely smooth. Cindy's was, which I appreciated. And she hadn't complained that I only kept myself trimmed, not smooth.\n\nI listened into Mike. \"Well, he does work until 6pm each night. Thursday next week? Yeah. Yeah. I'm sure it'll be fine.\" I nodded. \"Good. He'll come see you then at 7pm, Emma. Thanks, you're a champion. Yeah. I'll see you soon too. See you later.\" He passed the phone back. \"Get all that?\"\n\n\"I did.\"\n\n\"She'll look after you, Mark. And if you tell her why, you'll have a new friend. Mention Cindy by name. Emma might know her.\"\n\nIt was the middle of the afternoon when my phone rang. I glanced to see it was Cindy, and she wanted a video chat. Answering her call, the first thing I saw was her pretty and smiling face. \"I love them!\" she exclaimed, sitting on the edge of her desk to show the bouquet of flowers that had recently arrived, before she picked up the teddy bear, \"And I love this little thing too,\" she added, cuddling it to her chest.\n\n\"I'm glad you like them,\" I replied, feeling my cheeks almost hurting from my own smile.\n\n\"Mark... no-one has ever... done this... bought me flowers...\"\n\n\"Well, I wanted to. Girl as pretty as you deserve flowers and a teddy bear. And it's worth it seeing that smile on your face.\"\n\n\"You're picking Natalie up after work?\" I nodded. \"Can I... come around later?\"\n\n\"Of course. I think she'd love to meet you too. The woman who has made daddy smile again.\"\n\n\"I've got to go,\" she whispered, and I could understand why. I think she wanted to have some privacy for a few minutes. \"I'll call you when I'm ready to come over.\"\n\n\"Just turn up and knock. It'll be a nice surprise.\"\n\n\"Mark, I... I don't know what to say except thank you.\"\n\n\"You're welcome. I'll see you tonight.\"\n\n\"Bye, Mark,\" she said softly.\n\nI leaned back in my chair, feet up on the desk, smiling to myself. Mike saw me through the window and poked his head through the door. He figured out why I was smiling and chuckled to himself. He stepped in and sat down again. \"Mark, being serious a second, it's fucking awesome to see you with a genuine smile on your face again.\"\n\n\"Thanks, mate. Never thought I'd feel happy again after everything. My kids have helped, but I needed a woman like Cindy to make me feel... human again.\"\n\n\"Look, trans issues aren't really my thing. I'm a gay male, so while I do understand some of what she goes through, it's still very different to my own experiences. But if you need any advice, all you need do is ask. I'll offer what I can.\"\n\n\"I know, mate. But I think it's quite simple. Treat Cindy how I know she wants to be treated. As a human, as a woman, as... someone I...\" I took a deep breath. \"Mate, I'm falling for her big time already. I haven't felt this giddy about someone in years.\"\n\n\"Then let yourself do that and figure everything else out later. I'm having a small get together next weekend. Organised it because I know you won't have the kids. Bring Cindy along.\"\n\n\"I'll see if...\"\n\n\"Mate, if you're going, she'll come along.\"\n\n\"I'll mention it tonight. I'll pick up Natalie then she'll come on over too.\"\n\nArriving outside my old home, normally I'd turn up and scowl, pissed off at the world, at my ex-wife, the fact I'd basically been forced out of the house I'd spent ten years paying for. Now? I'm fairly sure the slight smile on my face remained as I walked up to the front door. Megan, my ex-wife, opened the door and seemed surprised to see my unusual demeanour. \"Mark,\" she said.\n\n\"Is Natalie ready to go?\"\n\n\"She is. Come on in. Greg's in his room if you want to say hello.\" She shrugged helplessly. \"He's at that age...\"\n\n\"It's fine, Megan. Don't worry about it.\"\n\nShe gave me a curious glance. I'd normally have a quiet go at her about his attitude, generally blaming her for turning my only son against me. Now? I was disappointed he didn't want to spend time with his old man, but he was fifteen and capable of his own decisions. He also had his own life to lead. I'd just do what I could to support him where needed.\n\nI found him in his own room, headset on as he played on his gaming system. I waited until whatever match he was playing finished before announcing I was waiting and I was surprised he took off the headset and turned towards me. \"Here to pick up Natalie?\"\n\n\"Yeah.\"\n\n\"Okay...\"\n\n\"You alright?\" He shrugged. \"How's school?\"\n\n\"Alright.\"\n\n\"Up to anything this weekend?\" He shrugged again. \"Hanging out with mates or something?\"\n\n\"Might do. Haven't decided yet.\"\n\n\"Okay...\"\n\n\"Daddy!\"\n\nI turned to see a ten-year-old girl running towards me, making a sound as she collided with me, I was still strong enough to pick her up, giving her a tight hug. \"How's my little munchkin?\"\n\nShe giggled, resting her head on my shoulder as I hugged her. This wasn't the moment that got to me. This moment made me smile. It was when I dropped her off, that was the moment that sucked the life out of me. \"I missed you,\" she whispered.\n\nThat was always the suckiest moment that sucked out of all the moments that ever sucked. Same thing every fortnight when she said those same three words.\n\n\"Missed you too, munchkin. Packed a bag?\" I felt her nod. \"Ready to go?\" She nodded again. \"Okay,\" I said, placing her down. \"Get your bag. We'll pick up some dinner on the way home.\"\n\n\"Okay.\"\n\nTurning back to my son, he'd watched without saying a word. Walking into his room, he stood up. I was surprised at how tall he was getting. Must be at least five-seven by now. By the time his growth spurt finished, he might even reach my height. \"Doing okay, son?\" I asked softly.\n\nHe suddenly stepped forward and hugged me tightly. That got to me completely. Couldn't remember the last time I'd hugged my son like this. \"You look happy,\" he said.\n\n\"I am,\" I admitted, \"Taken a long time to get here, but I am.\"\n\nHe let me go and we took a step back, doing that male thing of clearing our throats, unable to meet the eyes of the other. He sat down and I noticed him wipe his eyes. I ruffled his hair like I'd always done, earning a groan of disapproval. \"Why don't I see if I can get us tickets to the cricket in a few weeks? Poms are out here, tickets to a tour match should be cheap.\"\n\nThat earned a grin. \"I'd like that, Dad.\"\n\n\"Good. Let me see what I can do.\" I ruffled his hair again. \"I'll see you on Sunday?\"\n\n\"Yeah, I'll be home, Dad. I'll see you then.\"\n\nNatalie was waiting for me. Megan was watching me with curiosity, no doubt wondering why I was in a better mood. Though I kept things cordial in front of the kids, in privacy, I hadn't been shy in my opinions regarding anything to do with her. Not exactly healthy, but now? She had fallen far down the list of people I gave a shit about. She was now the past. Natalie hugged her mother before I took her hand, leading her towards my car.\n\n\"Fish and chips?\" I asked. That earned a squeal of delight, so I stopped at the chippie on the way home, getting us a large pile of chips, a few potato scallops, fish cakes, and even a burger, before driving us home. While walking towards the stairs, my phone buzzed, Cindy asking if she could come around. I messaged back, suggesting she could head over immediately.\n\nI was barely done dishing up a plate for Natalie and I when there was a knock at the front door. I'd barely opened it before I was leapt upon by a brunette women, almost overcome with emotion as she wrapped her limbs around me. I was strong enough to hold her up, kicking the door shut as I carried her through to the living room. Natalie looked up and smiled, though I could see she was curious.\n\n\"Thank you. Thank you. Thank you,\" Cindy murmured into chest.\n\n\"Anything for my girl,\" I replied softly.\n\nShe placed her feet on the ground before looking up into my eyes. \"Your girl?\"\n\n\"I hope you are.\" She smiled and hugged me again. \"Um, I guess you do need to meet someone. Natalie, come and say hello.\" Cindy let go of me but turned around, resting back against me. \"Natalie, this is Cindy. She's my...\"\n\n\"Girlfriend,\" she said quickly, \"I'm his girlfriend,\" she repeated, bending down to my daughter, \"Nice to meet you, Natalie.\"\n\nI was surprised my daughter hugged her immediately. \"Hello,\" she said softly. Cindy hugged her back. \"Are you here for the weekend too?\"\n\nCindy let her go and turned back to me. \"Am I?\"\n\n\"I hope you are,\" I replied.\n\n\"I brought things for tomorrow... I'll go grab some things for Sunday too.\"\n\n\"Do it tomorrow. You're here now. Want some dinner? I got fish and chips. Then we were going to watch a movie.\"\n\nThe three of us sat on the couch, my daughter to my right, Cindy to my left, as we watched a series on Netflix, age appropriate for my daughter, of course. After we'd polished off most of the food, Natalie wanted to play board games instead. Thankfully, I'd kept quite a few of them, while buying a few others, so we had a couple of hours' fun playing those, whispering to Cindy to allow the youngest to win.\n\nAfter giving Natalie a bath, I put her to bed, sitting with her as always as she read a book by lamplight. When she started to fall asleep, I took the book from her, turned out the light. \"I love you, Daddy,\" she whispered.\n\nKissing her forehead, I whispered, \"Love you too, munchkin,\" before walking out to the hallway, leaving the door ajar. Taking a few steps forward, I had to hang my head for a moment. Every single time she visited and said those words for the first time, it took a bit out of me again. I hated the fact I was an absent father, another fucking statistic, another man forced to watch his children grow up without my presence more often than not.\n\nFeeling two arms wrap around me, fingers caressing my back, a pair of soft lips on mine, I responded to Cindy's kiss. I'll be honest, that did make me feel better about things. \"Want to make love?\" she asked quietly.\n\n\"I'd love to, long as we keep the noise down.\"\n\n\"I'll do my best while your lovely cock is buried inside me.\"\n\nI made sure my bedroom door was shut before Cindy and I were all over each other. She was rather desperate to get my clothes off. I wanted her just as naked as I was. Soon as I had her bra and panties off, she jumped up onto me as I lowered us down onto the bed, our mouths rarely parting. I was quite happy just to spend time kissing her, enjoying the feeling of our tongues duelling again. Her hand snaked between us to start stroking my cock, so I happily returned the favour, causing the kiss to halt for a second, gazing at each other in silence.\n\nPushing me onto my back as she straddled my lap, I did wonder what she intended as she leaned down to kiss me again, my fingers caressing her smooth back down to her pert little arse. \"Want to blow each other at the same time? Sixty-nine?\" she asked.\n\n\"God yes. I've actually been thinking about that.\"\n\nWe shuffled down the bed a little bit as she eagerly turned around, watching her engulf my cock with her mouth. That earned a low groan as she shook her cock in front of my face. I teased her by giving her rosebud a little tickle, earning a soft moan around my cock, before I moved so I could easily swallow her thick cock at the same time. I learned within a minute that it was actually at a good angle to take even more than before.\n\nFeeling her remove her mouth from my cock, she whispered, \"See if you can open your throat, like I do with yours.\" Grabbing her arse at the same time, I slowly did as she asked. Took more than a few times, gagging when it didn't work. She eventually helped, gently thrusting as I tried taking it down. Worked like a charm. I just had to remember to breathe through my nose for the time being. \"Want me to gently thrust, baby?\" I made an approving noise. \"I'm going to cum so hard, baby.\"\n\nAs she slowly started to thrust, I tickled her rosebud, feeling her hand touch mine, giving me the bottle of lube she'd thrown onto the bed earlier. Despite the distraction of cock in my mouth, I managed to pour some lube onto her arse, tickling her little hole, which she definitely liked as much as her thrusting into my mouth.\n\nFeeling her moan and hum around my cock at the same time, I felt my hips almost buck involuntarily at the same time. \"That's it, baby. Fuck my mouth too,\" she moaned softly, \"I want your cum as much as you want mine.\"\n\nWith a finger from each hand now thrusting into her arse, she was now thrusting into my mouth faster. I did choke a couple of times. Each time she heard me, she stopped and was apologetic, assuring her I was having a hell of a lot of fun and not to worry. I was rather focused on making her cum and had to remind myself that my own cock was being serviced rather well at the same time.\n\n\"Oh god, I'm going to cum,\" she moaned, and I managed to move just in time so that first spurt filled my mouth and not my throat. Swallowing it down quickly, another four heavy spurts following, eagerly gulping them down too, continuing to suck on her cock as she doubled down her efforts.\n\n\"Fuck,\" I moaned around her cock.\n\n\"Cum for me, baby. Cum in my mouth. I need your cum again.\"\n\nJust her tone was enough to send me over the edge. The fact she wanted to suck my cock. She wanted to swallow my cum. She wanted... me. \"Oh god,\" I groaned, almost forcing my cock up into her mouth as I blasted. I heard her giggle and moan almost at the same time as she seemed to swallow every drop of my cum, only removing her mouth once she'd given my cock a real tongue bath.\n\nTurning around so she was resting above me, my fingers immediately went to her cheek, running through her hair before I kissed her. We both tasted like cum. \"You have ten minutes, then you're sliding that into me,\" she murmured, \"Been thinking about it constantly since Wednesday.\"\n\n\"So two nights ago?\" I joked.\n\n\"Haven't you?\"\n\n\"I think about you all the damned time, Cindy.\"\n\nThat earned a soft kiss on the lips. \"You are a very pleasant thought all the time yourself. I'm fairly sure I've been distracted all week.\"\n\nFeeling our cocks get hard together had us both chucking, feeling her fingers wrap around both our shafts, slowly stroking us until I felt as hard as ever. Lubing up herself first, she then sat back and gave my cock a little suck again before lubing me up. \"Mark, I do love sucking your cock. Whenever you want to... And I hope you realise that you can blow me whenever you want too. Just take it out and use that mouth of yours.\"\n\n\"I'll take you up on that.\"\n\nShe smiled. \"You like blowing me?\"\n\n\"I love making you smile, Cindy. Or moan. Or squeal. And just damned happy.\"\n\nShe released my cock and shuffled up so she was resting on my cock, leaning down to kiss me deeply, her tongue sliding into my mouth. The sort of kiss that had us both moaning into the mouths of the other within a few seconds. \"I haven't been this happy in years, and it's only been a week,\" she said softly, \"I'm glad your friends convinced you to go out that night.\"",
        "\"So am I.\"\n\nLifting herself up, I felt her grab the base of my cock and press it against her tight little hole. She gasped as she ever so slowly slid it inside her, waiting until the head of my cock popped inside before she stopped, taking a breath. I knew it didn't hurt her, but I still reached up to run my fingers through her hair, her eyes closing for a moment as she moved her head into my palm.\n\nSlowly, ever so slowly, she lowered herself down my cock until there was nothing else to slide inside her. Watching her face light up, she shuffled, resting her hands on my chest, before she started to slowly ride me.\n\n\"Fuck,\" she muttered.\n\n\"Love my cock, sweetheart?\"\n\nHer face lit up at the new pet name I'd just thought of. \"Sweetheart?\"\n\n\"I can think of a million different others, but yeah. Sweetheart.\"\n\nShe smiled, keeping the same tempo, moving my hands to her hips, moving my legs as she adjusted slightly. Watching her face then her cock, I saw that move a couple of times, almost throbbing with excitement. \"Hitting the right spot inside me, baby,\" she murmured, \"God, I just want to cum all over you again with your cock buried in my arse.\"\n\n\"Cum for me, sweetheart. Cover me in it.\"\n\nThat was all the urging she needed, starting to ride me a lot faster. I worried she might actually hurt herself, but apart from stopping once to apply more lube, she seemed to just be thoroughly enjoying herself. Considering I'd cum hard before, I knew I was going to last a while longer. Her arse was something else. So tight. So snug. So warm. I loved every second. And I was delighted she hadn't asked me to wear a condom. I hadn't had sex since the ex-wife. She'd been on a long dry spell herself. And we agreed that condoms just plain suck.\n\n\"Fuck, I love your arse, Cindy.\"\n\nThat made her smile, riding me a little faster still. Running a hand up her body, I moved enough that I could sit up and suckle at one of her nipples. That seemed to drive her even wilder. \"Oooh, that's perfect. Suck my tits. Just think. They'll never sag!\" I chuckled as I moved from one nipple to the other, Cindy riding me faster and faster at the same time, her hand now wrapped around her shaft, pumping her cock.\n\n\"Oh god, this is far too good,\" she moaned.\n\nMoving my hands to her arse again, I leaned back and started to pump into her at the same time. She cried out, thankfully covering her mouth with her free hand, her body starting to jerk and shudder, the sign she was getting close to orgasm.\n\nMeeting my eyes, I knew she was about to pop, squealing into her palm as the first spurt erupted from her cock, some of it landed on my chin and mouth. The next spurt was just as strong, hitting my chin, the next three lining my chest. She dribbled out a little more as she slowed down and eventually stopped, wiggling her arse as I hadn't finished yet.\n\n\"Holy shit,\" she muttered, leaning down and kissing me deeply, \"Holy shit, Mark. That was... I don't have the words...\" Resting on her forearms, she kissed me again, \"Fuck me. Fuck me nice and hard. I want to feel you cum in me again.\"\n\nGrabbing each cheek firmly, I lasted about five minutes. I didn't fuck her as hard as perhaps she expected. I didn't need to, nor did I want to. Last thing I wanted to see on her face was a second of pain, and if she was wincing, I could only assume it wasn't entirely enjoyable. I knew about pleasure and pain, the thin line between those two feelings, but she loved every second.\n\nKissing her as I climaxed, I kept on pumping until I knew I had nothing left to give her. With a soft groan, I relaxed back on the bed, Cindy resting on my chest, arm automatically wrapping around her. \"We're going to need a shower,\" she murmured.\n\n\"Yeah. Give me a few minutes.\"\n\nShe laughed. \"Worn you out?\"\n\n\"Cindy, sex with you is just phenomenal. There are probably other words to explain just how fucking good it is...\"\n\n\"What's your ex-wife's name?\"\n\n\"Megan.\"\n\n\"Megan is a fucking idiot.\" I had to cover my mouth again as I laughed. \"Honestly, we've had sex twice now and I haven't been fucked better. Helps that I really like the person fucking me, I guess.\" She kissed me softly on the lips before adding, \"Though I'm hoping, one day, I can return the favour.\"\n\nI smiled as I replied, \"One day, Cindy. I promise.\"\n\nHeading out of the room a few minutes later, we kissed and cuddled in the shower. Though we both got hard again, I think Cindy would have been happy for a third round. My body was definitely willing, but it had been a long week. Cindy took pity on me, thankfully, happy enough to cuddle with me back in bed.\n\nNatalie was up early the next morning as always, making her some breakfast before Cindy wandered out to join me, dressed in one of my t-shirts and a pair of panties. She was modest enough in front of my daughter, which was fine. Natalie watched cartoons on the TV as I enjoyed a coffee with my lover at the small table in the adjoining kitchen.\n\n\"Daddy, can we go to the park later?\"\n\n\"Sure, munchkin.\" I glanced at Cindy, who immediately smiled and nodded. \"Cindy will join us too.\"\n\n\"Okay, Daddy.\"\n\nI was thinking that Natalie was surely going to ask some questions, but maybe she was waiting for later. She was content to watch cartoons most of the morning, giving me time to clean up, Cindy grabbing her bag and heading home for an hour. Taking a seat next to my daughter once I'd dressed, she cuddled into me as always.\n\n\"She's very pretty, Daddy.\"\n\n\"She is. I like her a lot.\"\n\n\"She makes you happy? You've been sad a lot.\"\n\n\"I know, munchkin. I know. And yes, she makes me very happy.\"\n\n\"Then I like her too.\"\n\nI wasn't going to explain that Cindy was a woman but with a difference. That was a conversation for when she was older. A lot older. And something Cindy should really be sharing with her. Then I thought I was thinking into the future too much. I'd only known Cindy a week. Still, she'd been eager to come over at the same time as my child was with me, so that surely mean something.\n\nShe returned by lunchtime, taking her bag and placing it in my bedroom, walking out into the living to find Cindy on the couch, Natalie sat in front of her, Cindy playing with her hair. I stood and smiled before they looked my way, Natalie smiling, Cindy looking a little guilty. \"What are you thinking?\" I asked.\n\n\"I was thinking a nice braid,\" Cindy replied, \"Do you mind?\"\n\n\"Of course not. What do you think, Natalie?\"\n\n\"I'd like it! But I like her hair too. It's very shiny.\"\n\nCindy only had a ponytail, something she must have done while back at home. I immediately had one or two thoughts about what I'd do with said ponytail. It must have crossed my eyes, Natalie not paying attention but Cindy definitely noticed. \"Like my ponytail, Mark?\" she asked, the sultry tone to her voice unmissable.\n\nClearing my throat, I suggested we'd have lunch shortly before going to the park.\n\nIt was a warm day, and it was only a fifteen-minute walk, so we strolled along, holding Natalie's hand with my right, Cindy's hand with my left. As soon as we were near the playground, I let go of Natalie as she took off, no surprise a couple of her friends were already there. I recognised some of the parents, and they knew me. I was polite, introducing Cindy if asked, but we eventually walked away to a seat for privacy, keeping an eye on Natalie.\n\n\"She's adorable,\" Cindy whispered, leaning into my side. Wrapping an arm around her, she snuggled into me tighter.\n\n\"I hate I only get every second weekend. I usually get one day during every second week, but trying to organise it is tough with work. Comes with the position I have. With great power comes great responsibility.\"\n\nShe giggled for a moment. \"She seems to adore you regardless.\"\n\n\"Have to make the most of these two days that we have.\" I gave her a gentle squeeze before I had to ask, \"Have you ever thought...\"\n\n\"Yes, and no. I knew it likely wasn't ever going to happen. I thought, if I did meet a man, he might already have children. In that regard, I was right.\"\n\n\"I'd like you to meet my son, but he's... well, he was better yesterday. Hugged me for the first time in months. Guess me being depressed hasn't helped his mood.\"\n\n\"How will your ex-wife react to me coming over?\"\n\n\"I don't fucking care, Cindy,\" I almost growled, \"You're in my life now. And if you are, then you will be part of my children's life.\" I took a few minutes before I sighed. \"Sorry,\" I muttered, \"Part of me is still bitter after all this time.\"\n\n\"I'd suck your dick to feel better, but I think we'd both end up on some sort of register if I did that here.\"\n\nNatalie tried herself out within a couple of hours, carrying her on my back to the apartment. Cindy and Natalie helped me prepare a more nutritious dinner than the previous night before we watched a movie on Netflix. I didn't really pay attention, but it had castles, a princess or two, and more songs than I could almost tolerate. But Natalie enjoyed it, and that's what mattered.\n\nAfter a quick shower, she happily went to bed, falling asleep rather quickly. Cindy was still on the couch when I walked out. \"Drink?\"\n\n\"Got any wine?\"\n\n\"Let me look as I don't really drink the stuff. But if you're a constant visitor, I'll be sure to keep some from now on.\"\n\n\"Sounds like a permanent invitation is on offer? If that's the case, you can come visit me anytime you want, Mark.\"\n\nI grabbed two bottles of beer, undoing the cap for both. Cindy was happy enough with that, clinking them together before taking a sip. \"Your apartment is far nicer than mine,\" I said, \"I'm finding it difficult to think of this place as a home.\"\n\n\"I can help,\" she said brightly, \"Until you move in with me, that is.\"\n\n\"I what now?\"\n\nShe put the bottle on the table and immediately straddled my lap, kissing me softly, before she leaned back and smiled. \"Scare you, did I?\"\n\n\"No, not that. It's just... it's been a week, Cindy and this just feels... right... Know what I mean?\"\n\n\"Want to go to bed?\"\n\nWrapping her limbs around me, I picked up the bottles and put those away before carrying her through to my bedroom. She had one thing on her mind once I had us both naked, grabbing the bottle of lube, stroking my cock, before fingers from both of us got her tight little arse nicely lubed up as well. Wriggling back up the bed, she spread her legs nice and wide, beckoning me forward.\n\n\"Come and fuck me,\" she moaned softly.\n\nShe grunted as I slid in faster than I had before. I immediately stopped and apologised, my face no doubt falling. She just called me a sweetie and told me it was fine. It was bound to happen from time to time just to sheer excitement and the fact we were horny. As soon as my cock was buried, she wriggled again to get comfortable, then moved her lips up to my ear. \"My arse is now yours to pound, lover. And I want to cum without touching my cock.\"\n\nThe second one happened. Her hands never left my body and we watched as she came all over herself. As for me, I did as she asked. I pounded her hard. She seemed to enjoy every second, particularly when I had her legs over my shoulders, almost curled into a ball as her knees were almost by her head, almost driving my cock into her. She was doing her best not to cry out, but she was begging... begging me to keep fucking her until I came.\n\nWhen my orgasm hit, I knew I was a one and done that night. I had no idea I could last so long, but she was just so damn beautiful, and her arse a complete and utter delight, I wanted it to last as long as possible. Releasing her body once I pulled out, she started to giggle again. \"Fucking hell, Mark... I'm going to feel tender tomorrow morning.\"\n\n\"Sorry...\"\n\nShe sat up on her knees and kissed me. \"God no, don't be sorry. That's just what I wanted. We enjoyed the gentle stuff to begin with. I just wanted you to... own me tonight. Give me a good solid fucking.\"\n\n\"Oh... well, I thoroughly enjoyed it too. Loved watching you cum just from what I was doing.\"\n\nHugging me tightly, she whispered, \"Maybe I'll do the same to you soon.\"\n\n\"I promised, Cindy. And I always keep them. Trust me.\"\n\n\"I do,\" she whispered.\n\nTaking Natalie home in the afternoon the next day, I asked if Cindy wanted to meet my son. Taking my hand, Natalie led us to the front door, opening it and strolling on in. \"Mum! Daddy's here with his new girlfriend!\"\n\n\"Well, that's the surprise ruined,\" I muttered.\n\nMegan appeared from the kitchen and her eyes were pure ice. I almost smirked. Bitch had cheated on me. Soon as I moved out and told her I wanted a divorce, her affair partner dropped her quickly. Didn't help that he was also married, and I'd been polite enough to inform his wife that he was a cheating fuckwit. No idea what happened to them afterwards, but I was aware a couple of men had come and gone rather quickly since.\n\n\"Girlfriend? Since when?\" she asked.\n\n\"Cindy, this is Megan, the ex-wife. No doubt she's furious I've found someone who makes me happy once again. She enjoyed seeing me depressed after everything she did.\"\n\n\"Fuck you, Mark.\"\n\nI just smiled at her. \"Megan, we're just here to say hello to Greg, then we'll leave. I don't actually want to cause any trouble.\"\n\n\"Fine,\" Megan muttered, turning and walking back to the kitchen, though she turned and got one jab in. \"She's a little young for you, isn't he?\"\n\n\"Oh, but that just guarantees lots of experience when we're in bed together,\" Cindy cooed, kissing my cheek, \"He rocks my world already. He makes me cum really hard every time we fuck.\" Megan huffed and disappeared back to the kitchen. \"Too much?\" she asked.\n\n\"I don't really care what she thinks. Come on, let's meet my son, say goodbye to Natalie, then we'll go.\"\n\nGreg definitely thought Cindy was hot. He could barely put three words together, and no doubt wondered how his old man got his hands on a hot, young woman like Cindy. I had managed to purchase some tickets for the cricket the next month, which gave us something to look forward to together. Natalie was already playing in her room, though she was always happy to give her father a long hug before he left, but I was pleased when she gave Cindy a hug too.\n\n\"I liked meeting you, Natalie.\"\n\n\"You make daddy happy. I like you too.\"\n\nMegan heard us leaving, following us to the front door. What surprised me was what she said. \"I'm not angry to see you happy, Mark,\" she said, causing me to stop and glance back in surprise. \"I know what I did to you. I take responsibility for it.\"\n\n\"That's one thing, Megan. You ever feel guilty about it though?\"\n\nShe grimaced. \"All the time,\" she said softly, not meeting my eyes for a few seconds before looking up. \"What I do know is I ruined our marriage first.\"\n\nCindy grabbed my hand tighter. I didn't know what to say to that. It was the first time she'd said anything about what happened. I guess seeing Cindy with me, the fact it was a sign I was now moving on, had caused her to think or to vocalise thoughts she might have had. I cleared my throat, met her eyes and nodded, before escorting her to my car.\n\nI drove us two minutes away before I stopped, put the car in park, grabbed Cindy and kissed her deeply, earning a soft moan within a couple of seconds. \"As I said, she's an idiot,\" Cindy whispered, \"I loved your daughter, Mark. I hope to see her again.\"\n\n\"You will.\"\n\nI was a little disappointed when she said, after dinner, that she was going to go home. She explained that the first two days of the week were busy, and she would prefer to be at home Sunday to Tuesday night, but she'd happily see me, or I could go see her, from Wednesday onwards. Then she smiled, adding that when we moved in together, being apart wouldn't be a problem.\n\nThe idea of living together didn't frighten me at all.\n\nShe didn't really want to leave. I didn't particularly want her to leave either. No idea how long we kissed before she finally got in her car. I assured her that I'd see her on Wednesday. I'd come home, pick up a bag, and stay at hers for a couple of nights. That put a smile back on her face, one last lingering kiss before I wished her goodnight and she drove off.\n\nMike and Chris wouldn't leave me alone on Monday, asking me a million and one questions about the weekend. They knew Natalie had been with me, but I guess I just had this look on my face or in my eyes about what else I'd been doing. I finally told them to piss off, which wiped away their grins for a second. \"Mate, we're just damned glad to see you happy again. You've had this dark cloud hovering above you for over a year,\" Mike said.\n\nI sighed. \"Sorry. Look, I'm happy. Cindy is... perfect. She really is. And I just don't want to fuck it up. That means no talking about what we do. I've never been one to share details anyway.\"\n\n\"Want to hear about my weekend instead?\"\n\n\"No.\"\n\n\"You sure? He was eighteen, very cute and...\"\n\n\"You're a thirty-five year old man, Mike. Shouldn't you...\"\n\nHe held up his hands innocently. \"Whoa, they approach me!\" I snorted at that, which made him laugh. \"Well, it's not like I give any suggestion that I'd say no.\"\n\n\"You ever going to settle down?\"\n\n\"Done it more than once,\" he muttered. I sighed, as I knew he'd had his heart broken. Been a shoulder to cry on more than once, for both of them. He looked up and grinned. \"I'm just living life for now, mate. You know how it is?\"\n\n\"Guess I do.\"\n\nShowing up at Cindy's apartment on Wednesday night, she buzzed me up, the door already open, and I could smell food cooking from the kitchen. She had some tunes playing, bopping around the kitchen in a pair of tight shorts and a crop top, ponytail flopping about. I dumped my bag and wrapped my arms around her from behind. She turned and kissed me. \"Hello, handsome.\"\n\n\"Hello, sweetheart. What's cooking?\"\n\n\"Spag bol, with garlic bread on the side.\"\n\nOne of my favourite things. \"You're a mind reader.\"\n\nShe turned in my arms and kissed me, her tongue playing with mine as I pulled her tight into my body. She giggled as I pressed into her. \"Someone's excited to see me,\" she murmured.\n\n\"I often wondered if it had stopped working!\"\n\nHer eyes smouldered as she whispered quite seductively, \"Oh, it works just fine, baby.\" I gulped before kissing her again. Moving down to her neck, she gasped as moaned softly before whispering, \"We'll eat first, Mark. Otherwise...\"\n\n\"I am hungry... for food...\"\n\nWe ate at the table, discussing the week so far and our plans for later. I mentioned Mike's shindig at his place on the Saturday, asking if she'd like to join me. She suggested I would be showing her off to my friends. I didn't deny that accusation. \"I'll have a beautiful young woman on my arms. They'll be wondering what the hell I did right,\" I said.\n\nAfter dinner, we sat on the couch, Cindy nursing a glass of wine, a bottle of beer for me. Cuddling into me, she had her feet curled up underneath her, rubbing them occasionally. Asking if they were sore, she admitted to wearing new heels and they had left them sore. \"I'll rub them better for you,\" I offered.\n\nHer face lit off and she darted away, returning with a little oil, before she placed her heels carefully in my lap. Her feet were smaller than I thought, her toenails painted a bright red. She saw the look on my face. \"Yes, I even have dainty feminine feet, Mark,\" she said, giggling away.\n\nI liked to think I was good at giving a massage. It was one of the things Megan had always liked, at least during the good days of our marriage. A massage usually led to something else. Cindy quickly had her eyes closed, a smile on her face, as I got to work. I discovered very quickly she was ticklish, making her giggle and squirm from time to time.\n\nShe was soon rather relaxed, almost fast asleep. Checking the time to see it was late anyway, I managed to stand then scoop her up in my arms, carrying her to the bedroom. The look in her eyes as I carried her made my heart beat faster. After undressing just down to underwear, she turned towards me and the next kiss was something else entirely. Her body moulded into mine before she turned around and spooned against me.",
        "Trailing my fingers up and down her chest, I could feel how hard she was. Almost sense it. Lifting her leg up over my mine, I managed to lower her panties enough to free her cock. Spitting on my hand, I lathered up her cock before I started to stroke her. \"Just let me take care of you tonight,\" I whispered.\n\n\"Mark,\" she whimpered.\n\n\"Just you, sweetheart. I want to make you cum hard.\"\n\nShe turned to kiss me, her blue eyes sparkling in the low light of the lamp. Her lips parting as she pulled back, watching her eyes close as her excitement grew. \"Oh god, just your hand feels wonderful.\"\n\n\"My hand loves your cock,\" I replied softly.\n\nKissing me again, she moaned lightly into my mouth as her hips started to move. I kept my stroking at a gentle pace, waiting for her to give me the signal to start stroking her faster. We made out for at least a few minutes before she finally broke the kiss and whispered, \"Faster!\"\n\nDoing as I asked, she moved onto her back, adjusting my hand slightly so it was comfortable, looping my free arm underneath the back of her neck. \"No-one has ever...\"\n\n\"I love making my woman orgasm.\"\n\nI think she almost choked back a sob before kissing me again. She was now almost thrusting into my hand at the same time. I could sense her excitement building, my hand stroking her faster and faster. \"Oh god, I'm so close. Don't stop!\" she cried.\n\nI didn't relent for a second, and a couple of minutes later, I was rewarded with the sight of rope after rope of her thick cum flying from her cock onto her chest. Spurt after spurt, it was quite thrilling to watch, slowing my stroking once it was clear she was empty. Releasing her cock, I cleaned my hand of her cum as I watched her suck in a series of deep breaths. Her skin glistened with sweat, her chest rising and falling, her face taking on a slightly pink colour.\n\nShe opened her eyes and looked into mine. \"I love you,\" she whispered.\n\nI kissed her straight away. \"I love you too,\" I whispered back.\n\n\"Make love to me. Please make love to me.\"\n\nA couple of minutes preparation later, I gently slid my cock inside her. Cum still dribbled off her chest onto the bed, but she didn't care about that. Her eyes were only for mine, her legs wrapping around me, fingers digging into my back as I gently pumped into her. I didn't care about my own orgasm, though I'd have one eventually. All that mattered was being connected to her in such an intimate way again.\n\nHer mouth constantly searched out mine as my thrusting slowly but surely picked up pace. I glanced down to see her cock was rock hard again. \"My handsome lover turns me the fuck on,\" she moaned, \"And I love feeling his cock exactly where it is.\"\n\n\"I just love your arse. I love looking at it. Touching it. Groping it. And being inside it.\"\n\n\"And my cock? Do you love that too?\"\n\n\"You have a beautiful girlcock, Cindy.\"\n\nThat earned another of those kisses I loved receiving from her, hand resting on the back of my neck as she lifted her head. \"Fuck me, handsome. I need to feel you cum in me. I want it leaking out of me all night.\"\n\n\"Give me a couple of minutes,\" I grunted.\n\nI moved her legs so her knees practically rested by her head, amazed at how flexible she was. Pounding her now for all I was worth, she moved her hand to her cock, stroking herself quickly again. I knew she might be capable of climaxing again, so relented slightly so I didn't cum before she might cum again. \"No, it's okay. Keep fucking me, baby,\" she moaned, \"I just like playing with my cock.\"\n\nMoving my hands to the back of her knees, she released her cock, running her hands up my arms, seeing her smile as she definitely groped my biceps. I grunted again as I felt my orgasm building, hoping that I wasn't hurting her. \"Holy fuck,\" I groaned, \"Cindy, I'm close.\"\n\n\"Cum in me, baby,\" she begged, \"Give me that hot cum.\"\n\n\"Fuck,\" I grunted before I just had to allow myself to cum. I buried my cock just as I felt that first spurt erupt, a few hard thrusts as I filled her tight arse yet again. Opening my eyes, I saw her look back at me with nothing but a smile on her face. Feeling empty yet again, I took a few seconds to catch my breath before I leaned down to kiss her, stroking her face at the same time. \"I knew that first night,\" I confessed.\n\nThe smile broadened. \"So did I,\" she whispered, \"It's why I told you so quickly. I just had this feeling, that first night we talked... I hadn't felt that way with a man in... Mark, I haven't felt like this with anyone before.\"\n\nI gently pulled out as she relaxed underneath me, resting on a forearm above her. \"Worried it's too fast?\"\n\nShe shook her head. \"No such thing as too fast. If you know, Mark, you know.\" She leaned up to kiss me. \"When you're ready, I want you here with me all the time. I don't want to be here alone anymore.\"\n\n\"Okay,\" I whispered, unable to stop the smile, \"Cindy, you make me feel... I'm not sure how to explain it.\"\n\nAfter a shower, we snuggled under the sheet and blanket, Cindy pressing her body into mine again. She was asleep quickly as I lay behind her, my mind going over how quickly my life had changed. Never expected to fall in love again, in all honesty. I'd been left feeling broken and bitter. If Cindy hadn't approached me that night...\n\nCouldn't wipe the smile off my face the next morning, Cindy giggling all the time. Walking into my office at work, Mike and Chris took one look at me and, as soon as I was sat behind my desk, they were sat across from me. \"You told her, didn't you?\" Chris asked.\n\n\"She loves me,\" I whispered, \"She said she loves me.\" I met their eyes. \"I was... That night, I was miserable. I mean, I was still broken after everything. Left feeling bitter at the entire world.\" I took a deep breath to calm myself. \"Thank you. Thank you for making me go out that night. If hadn't gone out, I'd have never met her.\"\n\n\"She coming on Saturday?\" Mike asked. I nodded. \"I haven't told anyone. Figured you could introduce your little lady to everyone.\"\n\nI stood up as they prepared to go. Mike was about to leave when I pulled him into an embrace. \"Glad you're happy, mate,\" he said.\n\n\"Thanks, Mike. You've been a good mate for decades.\"\n\nHe leaned back, resting a hand on my shoulder. \"It's what mates do. Look after each other.\"\n\nThey knew where I was going after work, so there were a couple of subtle digs that I was getting ready to be fucked by my girlfriend once I was ready. I think I caught them by surprise when I was admitted that the idea of being intimate with Cindy in such a manner was exciting me. The clinic was in a nearby suburb, inside one of those strip malls you find all over the place. Walking inside, there was a small reception area. She had my name and that's when I met Emma. She was a short, busty, blonde woman, perhaps the same height as Cindy, and she was... vivacious.\n\nAsking what I wanted, she showed a little curiosity as to why. \"I'll be honest. Most men only want that level of work if they're... well, gay. And Mike did suggest that you weren't that way inclined.\"\n\n\"I'm doing it for my girlfriend,\" I explained.\n\n\"Ah, okay.\"\n\nShe looked at me, I guess expecting further explanation. \"She's a woman but... um, it's not really my place to say but she's...\"\n\n\"Trans?\" she asked with a smile.\n\n\"Yeah.\"\n\n\"What's her name?\"\n\n\"Cindy.\"\n\nHer eyes widened instantly. \"Hang on. Are you Mark Pritchard?\" I nodded. \"And you're girlfriend is Cindy Williams?\"\n\n\"Yeah.\"\n\nShe squealed, leaping out of her chair and hugging me tightly. \"Oh my god! I've been wanting to meet you since she won't shut up about you in our group chat!\"\n\n\"What? You know her?\"\n\nShe let me go and I noticed her blush. \"Oh, right, I guess it's all still new so... I know Cindy well. Very well. She's a dear friend.\" She saw the gears turning in my head as a sweet smile formed. \"Yes, honey, I'm the same as her. I know Mike has been wondering the entire time he's come to get work done on himself.\"\n\n\"I won't tell him. But you know Cindy well?\"\n\n\"She's head over heels in love with you. I understand feelings were expressed last night.\" I felt myself blush as I remembered fondly, the fact she'd told me first. She leaned forward, resting a hand on my knee. \"She's been waiting years to meet a man like you, Mark. From the sounds of it, you're an absolute diamond.\"\n\n\"I try my best. It's all very new to me. Not being with Cindy, that's fine, but... everything else. Know what I mean?\" She nodded. \"Cindy and I haven't talked about too much. It'll be on her terms when she does tell me anything.\"\n\nShe took a deep breath before gesturing to the nearby table. Instructing I strip completely, she looked me up and down once I was naked. \"Like a man with a little hair on his chest. I like my lovers' masculine. Nice arms too.\" I felt myself blush again. \"Hop up on th table, handsome. I'll get started. One question. Does Cindy know you're here?\"\n\n\"No. I'm doing this because, um, well, she mentioned she wanted...\"\n\nShe rested a hand on my back. \"I know exactly what you're going to say. She's going to love you even more for doing this.\" She ran her fingers up and down my back as she explained the process. She warned me it was going to sting a bit as the process simply couldn't be entirely painless, but she'd do her best to ensure I wouldn't walk out in agony. \"You have a tight little arse, Mark,\" she added, giving one of my cheeks a gentle squeeze, \"I think you're going to love it when Cindy makes love to you in return.\"\n\n\"I'm looking forward to it.\"\n\n\"You are?\"\n\n\"Yeah. It's something new. She wants to do with it with me and I want to do it with her.\"\n\nShe moved up to my head, running her fingers through my hair. \"Okay, handsome, get yourself relaxed and I'll get started. I really want to let Cindy know you're here doing this for her. God, she's going to be so excited when she finds out.\"\n\nClosing my eyes and relaxing, I whispered, \"I'm doing this because I love her that much.\"\n\nI felt soft lips on my cheek. \"Hold onto her, Mark, and don't let her go,\" she whispered.\n\nThe waxing was a little painful, particularly when removing them from my butt. Emma explained that it should last at least a month. When it came to the laser, Emma explained that it wasn't just one session, I'd need to return for at least half a dozen treatments before the hair would be permanently removed. That didn't bother me, Emma ensuring I would have the same appointment day and time, and considering she was friends with Cindy, it would be easy enough to remind me. I did ask if Cindy had treatment.\n\nShe smiled at me. \"That's a question for Cindy. Not because it's overly personal, but it's something you can discuss. Trust me, there is so much for you to learn, Mark. But you've fallen in love with her as she is now. And she will understand the natural curiosity in regards to her life before.\"\n\nAll in all, the process took a couple of hours. I had let Cindy know I would be back at hers later. Emma gave me a tight hug when I was dressed and ready to go, suggesting I might see her sooner than my next appointment. Considering how bubbly and friendly she was, I said that would be quite nice. I grabbed a quick meal before ending up outside Cindy's apartment. She'd already given me a key to let myself in the door downstairs. She was on the couch, leaping into my arms as soon as I was through her door.\n\n\"Where have you been?\" she wondered. No suspicion, just genuine curiosity.\n\n\"I'll have to show you. Sit down on the couch and close your eyes.\"\n\nShe did so, giggling away, as I quickly stripped off in front of her, facing away before asking her to open her eyes. \"Oh my god!\" she exclaimed, glancing to see her on her feet again, her fingers quickly caressing my back and arse, \"You did this for me?\"\n\n\"Waxed the back and butt. And had laser treatment in the middle.\"\n\n\"Who did it?\"\n\n\"Emma Jones. She said you know each other.\"\n\n\"Emma! Oh, that little minx. I bet she figured out who you were too!\"\n\nChuckling, I admitted she figured it out rather quickly.\n\n\"Tomorrow night,\" she murmured, kissing my back, \"I want to make love to you tomorrow night, Mark. I'm going to eat that arse of yours first, then I'll get you nice and ready, then I'm going to slide my cock inside you. And I hope you love it as much as I love yours in me.\"\n\nI turned around and hugged her. \"Okay. I want you to, Cindy. I've been thinking about it since you told me. I want to know what it feels like. Plus, you have a beautiful girlcock regardless so I'm sure I'll love it.\"\n\n\"How about a shower and we snuggle tonight?\"\n\n\"I love a good snuggle if it's with you.\"\n\nShe met my eyes, that same dreamy smile I was already used to seeing. \"I'm going to thank your friends on Saturday.\"\n\n\"I already have.\"\n\nThe shower eventually turned into blowing each other, simply to get rid of our erections and get each other off. She blew me first, and I'd like to say that she made love to my cock with her mouth. She teased me for a long time before getting to work, head bobbing up and down as she almost sucked the cum out of my balls. It was a fantastic blowjob.\n\nReturning the favour, I pushed her back against the tiled wall, and spent just as long returning the favour. It amused me that I loved sucking her cock as much as I'd enjoyed eating pussy. In fact, part of me actually preferred her cock as, when she came, I was given a reward. I loved meeting her eyes as I blew her, and she mixed up sweet words with some dirty talk. She suggested I now preferred sucking cock compared to eating pussy. Again, part of me probably agreed, though I'd only suck cock in certain circumstances. A woman with a cock? Not a problem, not that I was thinking of anyone but Cindy.\n\nAfter receiving another creamy load, gulping it down eagerly, we finished by washing each other up before stepping out, wiping each other dry before she took my hand, leading me to her bed. I was surprised when she pushed me onto my back and straddled me, though all she did was rest on my chest, playing with her hair with one hand, stroking her back with the other.\n\n\"I have some friends coming around tomorrow night. They know all about you, so figured you should meet them too.\"\n\n\"Okay. Need me to bring anything?\"\n\n\"Just yourself.\" She lifted her head. \"I want to make love in the morning. I want to feel your cum inside me all day.\" The idea aroused and humoured me. \"Some of my friends are like me. You'll like them just as much as they already like you.\" She paused a moment, gathering her thoughts. \"I want to tell you everything, Mark. How I got here, to the woman you're holding now. If you ever have questions, please ask. I don't want any secrets. But some of it is difficult to talk about.\"\n\n\"When you're ready, sweetheart. What matters most is the here and now. I'll admit to curiosity, but this is all new for me too. I'm doing some reading at work during quiet times. It's a learning experience in more ways than one. Can I ask one question?\"\n\n\"Anything.\"\n\n\"I'm guessing certain terms I've seen online are now outdated, right? When I've had a gander at porn, I'm left thinking some of the terms are no longer PC.\"\n\nShe smiled. \"You're correct. I obviously call myself a woman. I have been since I was ten years old. That's when I knew. Others might call themselves transwomen. I know what words you're referring too. Shemale is just a term used in the porn industry. We don't like it. Very outdated nowadays. I'm not just a guy with tits. Saying chick with a dick can be humorous but... that's very much each to their own. At least they refer to us as women in a certain way. Tranny is derogatory as it's used by people as an attack word against us. Transsexual is an older term that might still be used by some people. It's not offensive to some, just outdated. Others don't like it as it does carry some negative stereotypes. Generally, even those who are not offended would suggest you just used transgender.\"\n\n\"Okay. I just wondered. I've been reading up about all this gender identity stuff. I don't remember it being such a big deal when I was a teenager. Granted, that's over fifteen years ago, and being a bloke, it was never any of my business anyway. The one thing that always helped was that my two best friends are homosexual, so I have been exposed to other lifestyles. I've always lived by the rule of 'live and let live'.\"\n\n\"Are you trying to make me love you even more?\"\n\nI shrugged. \"Life is difficult enough as it is for most people. If it makes you happy, do it. Too many get involved in business that simply doesn't concern them.\"\n\nRolling off my chest, she snuggled into my side, resting her head in that crook between my shoulder and head, her fingers stroking my chest. She sighed contentedly. \"Move in,\" she whispered, \"I want you here with me. Your daughter can stay in the second room when it's your weekend.\"\n\n\"Soon as my rental agreement is over. I think I have three months left.\" I lifted her chin, meeting her eyes. \"Are you sure?\"\n\n\"Completely. I love you and don't want to spend too long apart.\"\n\nI kissed her lips. \"Okay. I'll let my landlord know as soon as I need to.\"\n\nWrapping an arm across my chest, she fell asleep before me as usual. I think that's how comfortable she was in my presence. I liked the fact she could completely relax. I lay back thinking as always. The idea of moving in with her was exciting. I knew I loved her to bits. It was a new sort of love, that feeling of butterflies, of my heart beating faster when she simply gazed at me. The goofy smile I know that formed on my face when I thought about her.\n\nKissing her forehead, I eventually drifted off into pleasant dreams."
    ],
    "authorname": "UltimateSin",
    "tags": [
        "transgender",
        "romance",
        "transwoman",
        "mtf trans"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/ambiramus-ch-02"
}