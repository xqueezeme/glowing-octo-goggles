{
    "title": "An Opportunity Not To Be Missed Ch. 36",
    "pages": [
        "Sidney Spooner spent the days and weeks following his encounter with Alison in something of a daydream. He never in his wildest dreams thought he would get his grubby old hands on a gorgeous young girl like that. She was the first thing he thought about when he woke up in the morning, and the last thing he thought about before going to sleep at night. Of course every time he thought of her he would get instantly aroused, just picturing that voluptuous body in his mind would invariably have him reaching down for his rapidly swelling tool. He was a filthy old pervert, and to be fair he knew it, which was why he enjoyed reliving his experience with the unbelievably curvaceous blond 18 year old on a daily basis, albeit all on his own.\n\nHe would lay in his bed and try to recount every detail of her phenomenally fit young body, those massive yet incredibly firm tits, that ripe cheeky young ass and the way it teasingly stuck out, her beautiful blond hair, and of course the sweetest prettiest face he had ever seen. He couldn't help himself from taking his hard cock in his hand and as he began to stroke up and down its rigid length he would remember the feel of her delicate young fingers wrapped around the gnarly old thing. Nobody would ever believe what had happened and how lucky he was, he knew if he ever told anyone the tale would be met with laughter and total disbelief, in fact he sometimes couldn't believe it himself. But the more he thought about her the faster his hand would work its way up and down on his desperately hard tool. He could see her in his mind's eye, peeling her lace bra from those gigantic jugs, lifting her sexy little skirt to show him her lovely white panties, he could see his grubby old hands freely feeling their way over her incredible 18 year old body. Then, as he remembered the moment when he pressed his erection against her tight panty covered ass, it would happen again. With his clenched fist pumping his bent dirty old cock for all he was worth he would let out a cry as he ejaculated copious amounts of stinking hot sperm all over his already stained sheets. This would happen at least twice a day, and every time he found the pleasure from these lonely masturbation sessions so incredibly intense that he wondered if he would ever stop.\n\nThe truth was he couldn't help himself, he couldn't stop, simply because to a sad lonely dirty old man like Sidney the thought of a busty 18 year old bond like Alison was the stuff of every far-fetched dream and fantasy he had ever had. So to have tasted the pleasures of such a girl, however briefly, was possibly the most overwhelming experience of his entire life. His only regret was that he hadn't exploited the situation more fully, he regretted not making the most of that once in a lifetime chance and taking her completely. He could only imagine the thrill emptying this old man's spunk deep inside her. But imagination was all he had, because he knew he would never get so lucky again. His time as the stand-in headmaster was coming to an end and any hopes he may have had of having one more chance her were finally dashed when he received notice that his services were no longer required and he was being sent back to his old job. \n\nSeveral weeks went by and Sidney was back in his old routine of looking at and lusting over the girls in his office. His relentless frustration was sometimes unbearable, and the sight of a short skirted lovely bending over to get something from the bottom drawer of the filing cabinet opposite would have his cock throbbing in no time. \n\nThere was even an embarrassing moment when he experienced something that he hadn't had happen for a very long time. One of the girls, a twenty something blond named Anna crouched down opposite his desk to rummage through one of the bottom drawers. The trouble was she had on a very short black skirt and, as it turned out, black stockings. This quickly became apparent because she was unwittingly giving him a sneaky peek of the edge of her stocking tops the whole time she was there. \n\nIt turned the dirty old bugger on so much that he couldn't resist slipping his hand under his desk and giving his cock a nice little rub through his trousers. It was pure torture, his eyes widened at the way her skirt stretched tightly across her thighs slowly riding higher showing more and more, and still she had no idea of the free show she was treating him to. Then, just as he thought his frustration couldn't get any worse she suddenly dropped to her knees to reach right into the back of the drawer. Now he found himself staring straight at her ass thrusting in the air with her skirt stretched tightly across it. Couple this with the display of her stocking tops it was all too much for such a poor frustrated old man. He glanced furtively around the room to make sure nobody was watching him before fixing his lustful gaze back on the delectable vision before him. Then all of a sudden his excitement became too much and before he could do anything to stop it happening he felt his cock pulsate and he knew all too well what was about to happen.\n\nAs he felt himself start to cum he knew he had no choice other than to see it through, he couldn't stop now. He gripped his erection tightly through his trousers and clenched his teeth as his balls began to empty themselves into his grubby old underpants. He ogled the sight before him, his head spinning with thoughts of grabbing her womanly hips and ploughing his cock balls deep into her. It was all he could do to maintain his composure and avoid drawing attention to himself. He could feel his face go red and sweat breaking out all over his head as he squeezed and massaged his throbbing cock over and over. The girl had no idea what she was doing as the old man felt the unmistakeable wet gooey mess filling his pants. It was useless, he had no choice, he had to rid himself of every last smelly glob while trying not to give the game way until he was all spent. \n\nIt took him a few minutes to catch his breath and then compose himself as he watched her stand up, straighten her skirt, and then walk off back to her desk. This of course left him with something of an embarrassing problem, what to do with the mess that he had made of himself? In the end he had no choice, he decided to just leave it and within an hour or so he was able to slip off unnoticed to the bathroom and clean himself up. He knew that the girl would have been horrified if she knew what he had done, and it could well have cost him his job, but he truly couldn't help himself. Every day his mouth salivated over the hot young women at work, and every day he had the problem of a throbbing erection to deal with.\n\nHis daily frustration was only getting worse, it seemed that there were beautiful sexy young women everywhere. He loved to look at them and didn't care most of the time if they caught him or not. But it was the looking but not touching that was driving him crazy. He reasoned that it probably drove every old man crazy, the endless supply of cock hardening material out there for all to look at but never touch. But such was life, and like everyone else, old Sidney just had to accept the way things were.\n\nHe had been back at his old job almost 2 months and the old man decided to take a week's holiday. Not that he was going anywhere, or even had anything to do. The way he saw it he got no thanks for not taking it and so as he was entitled to it then why not? Even though it would mean not getting his daily fix of office eye candy. \n\nFor the first few days he just hung around at home doing nothing but laying around in bed spending much of his day thumbing through his extensive porn collection. It certainly passed the time and with his imagination working overtime he was enjoying \"spending time\" with some of his favourite busty young beauties. Each day he would spill load after load of thick creamy spunk all over their asses and tits until the pages of his magazines were so sodden that the pictures were virtually unrecognisable. He would mutter all sorts of crude and disgusting comments about how they loved it as they caused him to shoot yet another load of stinking sperm over them. He would smile through his dirty rotten old teeth as he wondered how the girls in the photos would react if they saw the affect they had on him and the resulting mess.\n\nThe reality was to anybody watching it would be a truly perverse and disgusting sight. Seeing this vile 60 plus year old man with his lank greasy grey hair hunched naked over his dirty magazines wanking furiously on his gnarly old cock was an image that most would rather not witness. So it was probably just as well that nobody did.\n\nOld Sidney awoke early on the Wednesday morning knowing he had to go into town for a few essential bits and pieces. Being something of a lazy old sod he really couldn't be bothered, but as the sun was shining he consoled himself that at least there might be some hot pieces of ass for him to have a good old lust over. So the old codger got himself ready, which didn't mean showering or even brushing his teeth, it literally meant throwing on the same stale old clothes he had been wearing all week and heading off out in his battered old car.\n\nHe really was a relentless old pervert, it was like a full time pre-occupation. As he drove along he couldn't help ogling all the young women walking along the footpath giving his cock a sneaky squeeze every time he saw an attractive one. Even when he pulled up at the lights he had to wait while two young ladies crossed in front of him. Both young and pretty and wearing rather tight jeans he again dropped his hand in his lap to have a little fiddle with himself as he looked them over. \n\n\"Oh yes you dirty bitches,\" he muttered as he watched their jiggling tits and sexy wiggling asses as they hurried across the road. \"Ooh fuck yeah, ooh you dirty cock teasing bitches,\" he again muttered as he licked his crusty old lips and his imagination began to wander. Then, as he instinctively began to rub himself more vigorously, he found himself so engrossed in the sight of their two peachy little asses that he hadn't noticed the lights change. That was until he heard a horn blast him from somewhere in the queue behind. As he went to pull off he noticed the blasting horn got the attention of the two girls. They both looked back over their shoulders straight at him and giggled as they saw him staring. \"Ooh yes lovely, ooh you lovely, dirty bitches,\" he once again muttered as he took one long final ogling look at them before driving off.\n\nOnce he got into town and parked he headed for the shops, the whole time not missing any opportunity to cast his eye over any passable piece of skirt that he saw. \n\nJust then a little way in front of him he noticed a young lady with a head full of lovely wavy blond hair come out of a shop and walk on ahead. \"Oh God look at that,\" he muttered under his breath as he watched the purposeful way she strode off in her stilettos. The hair caught his eye at first, but he was soon distracted by the exaggerated sway of her incredibly sexy ass, an ass that was contained in a very tightly fitted little black skirt. Not only was it tight, but it was short, very short and he quickly noticed something else. Her shapely legs were sheathed in sheer black nylon, and that wasn't all. He noticed the skirt had one of those teasing little splits up the back, not very long, but with the skirt being so short it was long enough. Not only that but because she had one of those incredibly shapely asses that stuck out making the skirt so tight it caused the split to gape rather more than perhaps it was supposed to giving anybody following her a glimpse of her stocking tops. \n\nHe couldn't believe it yet again he was being mercilessly teased by a girl who was blissfully unaware of the affect she was having on him, this was something that excited him no end. So much so that he decided to forget what he had come out for and instead follow her around for a while, all the time trying to keep back so as to not be too obvious.\n\nThe dirty old pervert couldn't help smiling as he noticed he wasn't alone in his admiration of her, she was getting some rather long and lingering looks from just about every man that saw her. Old Sidney could feel his cock swelling as he stared at the sexy sway of that incredibly shapely bum and the way it seemed to stretch her skirt to the limit. His imagination quickly began to wander, what he wouldn't give to have his hands roam all over it, squeezing and groping it as he dragged her skirt up to reveal more and more of whatever treasures were hidden underneath.\n\nJust then he shook himself out of his daydream as she stopped to look in a shop window. It was then that he got his first look at her from the side....and what he saw without a doubt absolutely blew his mind!\n\nHe had been so engrossed in her ass and the brief flashes of stocking top that he hadn't, until that moment, paid much attention to her upper half, and what an upper half it was! His jaw almost hit the deck when he saw the size of her tits, they were absolutely enormous!!! He was taken completely by surprise as from behind all he could see was how slender her waist was and how it emphasised her curvy hips. This now was a whole different matter. Wearing a tightly ribbed cream sweater there was no denying what a phenomenal pair they were thrusting boldly out from her trim little body. He couldn't believe his eyes, he had to take a moment to admire her and as he did he instantly felt his pants start to tighten. He could feel his cock begin to harden right up without even touching himself, quite something for a man of 60, an indication, as if it were needed, of just how frustrated and desperate he was. It was then that he looked up and saw her face. Along with everything else he could see she was also incredibly pretty. He thought for a moment how she looked familiar, then he suddenly realised, how could he be so stupid.......it was her! Alison!\n\nHe couldn't believe he hadn't recognised her out of her college uniform. The way she dressed made her look older than her 18 years. Instantly his head was in a spin, he had to think quickly, it was like the Gods were giving him one more chance, and it was a chance he knew he had to take!\n\nThen, just as she turned to walk away, he went forward and tapped her on the shoulder. He had no idea what he was going to say, but he knew he couldn't just let her walk away. As she turned to face him he was momentarily struck dumb before blurting out the first thing that came into his head. \n\n\"Erm, excuse me young lady,\" he said trying to sound as authoritative as possible, \"but shouldn't you be in college?\"\n\nShe looked puzzled at him for a moment before eventually recognising the creepy old pervert, and the moment she realised who it was she felt a wave of panic rush over her. \"Oh, h....hello,\" she nervously replied. \n\nOld Sidney could see he had caught out the pretty 18 year old clearly she should have been at school. This immediately filled him with added confidence, he could see the look of fear in her eyes and that was all he needed to now try and milk this situation for all it was worth. As she blustered something about being off to go for job interviews the old man just took a moment to once again look her over. Her top stretched so tightly across those beautifully big round knockers that it caused his already swelling cock to twitch in his pants. He hurriedly swallowed the saliva that was building up in his rotten old mouth before speaking again. \n\n\"Well, if this hasn't been agreed I'm afraid you could be in a lot of trouble.\" He watched her with great interest, she was clearly nervous and as she tried to protest her innocence it became more and more apparent that she was lying. She even tried to charm him with a half-hearted smile in the hope that she might be able to appeal to his kinder side, if he even had one!\n\nBut it wasn't working, the vile old man told her that although he was no longer at the college he was still working at the local authority in the education department, and part of his new role was catching truants. \n\nIt was working better than he had expected, he could see the fear etched all over her lovely sweet young face. He wasn't even sure himself where he was going with it all but seeing she was unable to offer any real defence he decided to take things further. \n\nDesperate to have her completely at his mercy, he went on to explain how he could make sure she got expelled and how that in turn would result in her exams all being marked as \"non attendance,\" in other words....failed! He told her he would have to take her back to college and how her new head and then her parents would be told of his decision to exclude her. \n\nThinking he had done enough he instructed her to come with him back to where his car was parked as he was going to be taking her back to college right now. However she had other ideas. She knew once she was alone with him she would be completely at his mercy, and so she refused to go. She said she would make her own way back and face whatever consequences were to come.\n\nThe old boy thought he had done enough but clearly he hadn't. He had to think fast, the sight of this incredibly curvaceous 18 year old was sending his blood pressure through the roof. He knew he would never get another chance like this he had to somehow get her under his control. \n\nSeeing he had no answer to this Alison turned to leave. Unable to allow this to happen he ordered her to stay where she was. His voice must have carried some authority because she stopped dead in her tracks. It was then that she turned to him and said that she didn't trust him and there was no way there was going to be a repeat of what happened before....\"I should have reported you,\" she said.\n\nThis sudden act of defiance began to worry the old boy. He knew deep down that blessed with a little more intelligence she probably would have reported him and he would now be in all sorts of trouble. But he couldn't get away from the fact that she was right there, and looking like every depraved fantasy he had ever had, he needed to think of something fast. It was then that he took a gamble.\n\n\"Okay have it your way,\" he said as he turned to walk away. But just before he did he said that if she had come with him she might have been able to convince him not to go through with it. But now she had left him no choice, he would go and report the matter right now and he hoped she was prepared to live with the consequences.\n\nHe took no more than a few steps when, just as he began to wonder whether he had blown it, his seemed his prayers might be answered. \"Wait!\" The busty 18 year old cried, \"What do you mean?\"\n\nHe went on to tell her how she had no idea how much trouble she was in. He said when he was in charge there he had been told what a trouble maker she was and they had asked him to keep an eye on her. He knew that certain female teachers were looking for any reason to have her kicked out, so much so that he had to fill out a report on her constant disobedience. \"It was not a good report,\" he told her, \"in fact I think you're on your last chance and this is all it's going to take to give them what they want.\"\n\nFunnily enough this all seemed to make sense to Alison, she knew she had been pretty troublesome and she always felt that some of the female teachers didn't like her. Whether it was jealousy or not she had no idea, but what he was saying had struck a chord with the ditsy blond. \n\nWhat could she do? This was an impossible decision. She knew what was on the dirty old perverts mind and it went without saying that she didn't want the filthy pig anywhere near her. But then the alternative was also unthinkable, she would be in all sorts of trouble and the consequences? Well who knows what they could be!",
        "As she debated in her mind without realising it she found herself walking with him. Despite trying desperately to think of anything that might get her out of this fix she once again found herself in she knew deep down she was ultimately at his mercy.\n\nGlancing over at the grubby looking old man as he led the way she was already thinking of what she may have to do. She couldn't imagine a dirtier smellier more repulsive person. His thinning grey hair was lank and greasy, his breath was vile (even from this distance), he had a mouth full of rotten teeth, and his clothes were filthy! How could she be even mildly flirtatious with this disgusting old man? Let alone anything else! She couldn't imagine a more repulsive individual, but what could she do? What was the alternative?\n\nOnce they got to the car she had one more go at pleading with him to give her one more chance. Old Sidney just ignored her as he opened the car door climbed in and started the engine. Reluctantly Alison opened her door too and with a resignation to her fate she got in. As the car pulled away the dirty old pervert couldn't believe his luck, it was like his dream of dreams coming true. \n\nHe glanced over at the busty blond beauty, she had tears in her eyes as she again explained how much trouble she would be in if she got a fail on her exams. Of course all she was doing was sealing her fate this was exactly what he wanted to hear. He was as sure as he could be that he had got her, now all he had to do was take full advantage of the fact. Of course every time he looked at her he couldn't help also glancing down at the way the seat belt nestled between those lovely big tits, separating them slightly and in doing so showing off the gloriously huge rounded shape of each one. It was a mouth watering sight, and as if that wasn't enough a glance lower treated him to the teasing sight of that little black skirt stretched tightly across her lap. It was so short that again it gave him just the slightest glimpse of her black stocking tops. He was now getting so excited that he had to adjust his pants to make himself more comfortable, something that Alison couldn't help but notice.\n\nAs they headed off Sidney, confident he was in control, started the next phase of his hastily thought out plan. He pretended to be annoyed and angry at her for not paying attention to the lessons he had already taught her. When she looked puzzled he explained her dress sense was still too provocative. \"I told you what men are like,\" he barked, \"I told you what would happen if you dressed like that!\"\n\nNervously Alison fidgeted in her seat as she tried to pull the hem of her skirt down to cover her now obvious stocking tops. Unfortunately this only served to excite the old codger even more. \"You clearly haven't learnt a thing have you?\" \n\n\"Um...n...no,\" she replied sheepishly, \"I....I was only dressing like this because I needed a job and I thought.....\"\n\n\"You thought that if it was a male interviewer then looking like that would get you the job!\" he barked before she could finish what she was going to say.\n\n\"Um, well, I.....I suppose so.\"\n\nThe salivating old pervert was visibly trembling with excitement as he kept glancing down at the shortness of her skirt and phenomenal swell of her bust. His plan was to take her back to his place, but with it being a good 20 to 30 minutes away he didn't know if he could contain the lustful urges boiling up inside him for that long. His cock was as hard as a rock and his head was in a total spin, God he wanted so badly to just touch her. She was just so gorgeous in every way, not only that ridiculously curvaceous body, but the sweetness of her pretty young face and the softness of her lovely blond hair, he was really struggling. \n\nThen, as they drove through a wooded area Alison suddenly piped up. \"C....can we pull over somewhere along here?\" \n\nSidney was shocked by her request. Did she mean what he thought and hoped she meant? Surely not! Surely there must be some other reason. But he wasn't going to argue, all he could think of was getting his grubby old hands on that voluptuous young body of hers. So he pulled off the road into a secluded spot under the trees. A quick glance in his mirror told him they couldn't be seen from the road and so he switched the engine off, unfastened his seat belt and turned to face her.\n\nAll Alison knew was she had to stop him and convince him by whatever means not to take her back to college to face the music......and this was the only way she knew how. She was afraid of what she might have to do as she took a sideways glance at the wretched old man, but whatever it was it would ultimately be better than the risk of exclusion and a fail mark across all her exams. All she could hope for was to get this over as quickly as possible.\n\n\"Well?\" Sidney asked expectantly as his bulging eyes roamed over her curves. His bottom lip quivered and his tongue circled his gaping mouth as he slowly reached out and placed a bony old hand on her stocking clad thigh. \n\nThe big busted teenager felt sick but did nothing to resist as she also released her seatbelt and turned in her seat to face him. \"Perhaps you need to show me again the consequences of the way I look......\" she quietly said as she looked down at his creepy old hand.\n\nHer words were like music to his ears. \"Oh God yes, you naughty girl,\" he whispered as he slowly slid his hand along her silky smooth young thigh towards her skirt, \"ooh yes, yes, let me show you what all those men will want to do......\" \n\nAlison looked at him and saw foam building in the corners of his rancid old mouth as his trembling fingers worked their way under the hem of her skirt. She could see the state he was in, his excitement was almost off the scale. \n\n\"You really shouldn't wear these,\" he went on as he pushed her tight black skirt up to reveal her full stocking tops complete with black lace suspenders. \"Oh look at you,\" he muttered as the vision before him caused his now throbbing erection to twitch in his pants, \"ooh it's so cruel to tease.....\"\n\nHe couldn't believe what he was seeing as he shifted forward in his seat, she was every dirty fantasy he had ever had all rolled into one. The sight of her thighs clad in sheer black stockings was unbelievable. Couple that with her pretty lace suspenders and short skirt teasingly pushed up just high enough to show her the bare tops of her thighs he knew he was losing control. Unbelievably she did nothing as she allowed his hand to wander all over her lovely nylon coated legs. He couldn't resist pushing her skirt a little higher and amazingly she even raised her ass of the seat slightly to make it easier for him. This one act of compliance was all it took to let the old man know there was going to be no objection from the lovely 18 year old. He pushed his hand down between her thighs and was amazed when she again offered no resistance. He couldn't believe how willing she appeared to be.\n\nThe truth was the lovely 18 year old just wanted to throw up, this dirty stinking old pervert made her feel physically sick, but she wanted this done with and she knew this was the only way. \n\n\"Oh baby,\" he drooled as he saw the black lace triangle of her panties appear. There was nothing he could do to control himself any longer as she let his hand go further until his finger tips touched the silk gusset that covered her pussy. \"Oh you naughty naughty girl,\" he hissed as he pressed his fingers into the warm softness, \"ooh yes yes.\" \n\nHis eyes began to water and his bottom lip quivered and Alison could now see him for the truly vile old pervert he was. As she began having second thoughts he suddenly lunged at her locking his stinking mouth over hers as he tried to kiss her in excited desperation. In an instant she reacted as anyone would, she tried to fight him off. There was a struggle for a few moments before she managed with one mighty shove to push him back in his seat. \n\nFor a few seconds he looked puzzled before telling her that she had made her choice and now she had to learn the consequences of looking the way she does. Before Alison could respond he began to unfasten his belt and in no time at all he had pushed his trousers and underpants down over his knees and they fell to his ankles. \"You see!\" Sidney said as he sat back in his seat and gestured towards his huge throbbing hard-on. \n\nThe pretty blond looked down to see what can only be described as a very painful looking erection. The head was a deep purple and shone with a coating of slimy fluid, the thick deeply ridged shaft bulged with veins that looked like they could explode at any minute. The whole thing bent back with an agonising stiffness towards his stomach.\n\nThe old man took great delight in seeing her pretty blue eyes widen as she seemed to stare at it with a look of total amazement.\n\n\"This is all your fault,\" he said with a creepy tone to his voice as he shuffled a little closer. Again he licked his lips as he asked her to touch it. \"Go on it won't bite,\" he told her as he focused his lusty gaze on the unbelievable vision before him. \"My you're a lovely young thing,\" he whispered as he reached for her wrist and guided her hand towards his lap. This time there was no resistance, just a wide eyes look of uncertainty from the big breasted beauty. Old Sidney was literally drooling at the mouth as he ogled her huge tits thrusting out in stretching that tight sweater. Coupled with the fact that her skirt was still pushed up high enough to give him an unhindered view of her suspenders and pretty lace panties he was now struggling to keep control of himself.\n\nSlowly he moved his head closer to hers and again with no resistance he began to kiss her neck just below the ear. Alison felt repulsed by the filthy old man, the stench of his breath on the side of her face made her feel physically sick. But there was nothing she could do she knew she was completely at his mercy.\n\nJust then old Sidney felt her fingers lightly touch his erection which caused his whole body to suddenly jerk. \"Oh God,\" he sighed as he felt her hand softly wrap itself around the hard gristly old thing. He was already struggling and this made it even harder for him to keep control, he desperately didn't want to cum, not yet. He wanted this to last, there was so much more he wanted to do with her.\n\nAlison was amazed at how hard his cock was it felt like concrete, only hot. She knew the state he was in was all down to her and couldn't help feeling a little smug, and this was only from him looking at her! In a strange way she sort of enjoyed teasing him, seeing how just from looking the way she did the way she could get him in such a state of desperation!\n\nWith the old man still slobbering up and down her neck Alison gripped his gnarly old tool a little tighter and instinctively started to mover her hand up and down it. She could feel the way his skin rolled back and forth over the deep ridges of his shaft, she couldn't help being somewhat fascinated by it. Then, all of a sudden Sidney clamped his knees together and said \"no, no, no.....ooh careful.\"\n\nHe was obviously so excited that he was right on the verge, and Alison realised at that moment how she could \"hurry\" things along a bit and make things a whole lot easier for herself.\n\nWith the filthy old man moaning and groaning as he went back to kissing and licking all up her neck and over the side of her face Alison knew exactly what to do. She teasingly circled her fingertips around the shiny purple knob causing him to twitch and jerk uncontrollably. She then moved her palm over it causing him to let out a trembling sigh, again she moved her hand down and gripped it firmly.\n\nAs she did she felt his creepy old hand worming its way under her sweater and shuddered as she felt it against the bare skin of her stomach. Slowly he moved his hand further up until she felt him fingering the underside of her lace bra, she knew there was going to be no stopping him now. All she could hope for was to get it over with as quickly as possible as the old man brought his hand up and gently cupped her left breast. \"Mmmmmmm, oh God,\" he sighed as he began to squeeze and feel his way all over it, \"oh yes, yes, such lovely big tits!\" He looked down to see the outline of his hand under her sweater as it roamed around freely groping those massive jugs, he was so excited. Then all of a sudden he felt her grip tighten around his rigid shaft.\n\n\"Ooh steady, steady,\" he gasped. But this time she wasn't listening she had other ideas. With the slimy pre-cum that now coated it Alison's hand slid easily down its length.. \"No no!\" he cried as her hand picked up speed and she began to pump up and down on the filthy old thing. With a frenzied excitement his body seemed to convulse and jerk violently. In an instant he knew there was no fighting it, he couldn't hold back any longer. Suddenly he thrust his hips up and down in his seat as he fucked her tightly gripping hand. \"Uuuugh, uuuugh, oh God, oh fuck, fuck, fuck!\"\n\nSuddenly he squeezed her tits as hard as he could, his hand rapidly darting from one to the other over and over as he mauled them all over. At the same time he locked his mouth over hers grunting and groaning like a pig as he kissed her roughly forcing his tongue to the back of her throat. At that moment he let out a muffled cry as he felt a huge surge thundering up through his cock and a thick rope of spunk launched into the air. Still he thrust himself up and down in her hand as his balls spewed their heavy load. His hands were all over her grabbing and groping as he slobbered like a disgusting pig all over her mouth and face. Alison continued to squeeze and pump his throbbing erection in her hand as the old man puffed and wheezed as he struggled to catch his breath. \n\n\"Oh God, oh God,\" he gasped as he backed away from her face and looked down at that incredible body, \"oh yes lovely, so lovely.\" At the same time Alison also looked down only to see a thick white river of sperm flowing from his cock, running down his deeply ridged shaft and completely covering her hand. She found it disgusting, yet at the same time fascinating. To see the spunk of a dirty old man all over her hand was a truly stomach churning sight, but she couldn't help but feel quite proud in a strange sort of way that it was all down to her.\n\nStill the old man's body jerked and twitched with every movement of her hand as the torrent slowed. \"Oh God I needed that,\" he sighed as he slouched back in his seat, the whole time not taking his eyes off her.\n\nThe pretty blond went to release her grip but the old man grabbed her wrist and said, \"no wait, not yet....just another minute.....\"\n\nShe did as he asked and kept a hold of it as she continued moving her hand slowly up and down its full length, each time she reached the top the sad old pervert gasped as her thumb glanced across his shiny purple knob. She couldn't believe how much mess there was, and yet he still wasn't finished. As she squeezed and gently massaged it she watched in amazement as the filthy stuff carried on oozing from his gaping pee slit. \n\n\"Ooh you're beautiful,\" he whispered as she milked him of the final drops. Finally she came to a stop and he allowed her to let go. Her hand was covered in his dirty warm spunk, there was so much of it and as she spread her fingers it strung between them like a filthy gooey spiders web. Unsure what to say or do the pretty 18 year old wiped it as best she could on the edge of her seat. \n\nOld Sidney on the other hand simply pulled his trousers and underpants back up seemingly without a care for the sticky mess in his lap. Alison was amazed, she didn't think he could be any more disgusting but not even trying to clean himself up before putting his trousers back on was beyond believable. \n\nWith a satisfied look on his ugly smug old face Sidney started the engine and pulled away. All Alison could do was adjust her clothing as she wondered where they were now going. She was almost too afraid to ask, but she had to know, and as she started to speak he interrupted telling her they would have to go back to his place so he could clean himself up.\n\nFunnily enough she was almost relieved she would rather anything than face the unthinkable consequences of a meeting with the headmaster back at college. As long as she could keep that from happening there was a chance she might get away without this revolting old man carrying out his threat to have her excluded, regardless of what she may or may not have to do.\n\nOld Sidney was already growing excited again as they pulled up outside the dingy block of flats where he lived. \"Right,\" he started, \"I'm going in, it's up to you what you do, you can either come with me or wait in the car.\" He knew it was a gamble, but he hoped she would understand his badly veiled \"choice\" and do what was needed to get herself off the hook. \n\nLuckily for him she seemed to realise that waiting in the car meant only one thing, next stop, college! He knew he had to play it clever, but couldn't help being mouth wateringly hopeful as to what she might do to save herself.\n\nThe dirty old pervert watched in disbelief as the busty blond unfastened her seatbelt and got out. It looked like she understood, or at least he hoped she did. He let her walk on ahead telling her he lived at number 10 which and it was on the first floor. The reason for letting her walk in front was obvious, even to a relatively naive 18 year old like Alison. This meant she would have to walk up the stairs giving him ample opportunity to have a good look at her cheeky ass in that lovely tight skirt, an opportunity that he was obviously going to take full advantage of.\n\nHe couldn't believe his luck, on top of everything else she was also blessed with an ass that was just about as sexy as any he had ever seen! With her little black skirt clinging so tightly across it he could again feel his semi erect cock stiffen up even more. The way each beautifully rounded cheek thrust out with every step causing it to stretch even more was just too much, never had he seen an ass that filled him with so much want and desire. It was like a lovely sweet ripe peach ready for plucking, he couldn't help licking his lips as his eyes roamed hungrily over it.\n\nWith the tiny split in her skirt again showing a teasing glimpse of stocking top he could feel a throbbing once again in his underpants. God she filled him with such mouth watering lust, a lust that was getting out of control as it boiled up inside him, he had never been more excited in his life.\n\nWhen they arrived at his front door he hurriedly got his keys out and opened it letting her walk in first. As she did she wasn't in the least bit surprised at the sight she was presented with. It was typically untidy and dirty just as you would expect. Not only that but it had a stale musty smell, much like the smell that came off Sidney himself, only stronger and with no fresh air moving through the place it made her feel quite sick. \n\nAs she turned to the old man he vanished into what she assumed was the bathroom. With the sound of running taps coming from behind the door she figured he was at least finally cleaning up that horrible sticky mess in his pants. She hovered nervously in the hallway unsure what she should do. She turned to see a dusty old full length mirror at one end and couldn't help but check herself out. Adjusting her skirt by giving it a little downward tug to make sure her stocking tops were covered she wondered what the hell she was doing there. Here she was a stunning 18 year old with a body that would get her any man she wanted, she knew how much guys her own age drooled over her big tits and sexy ass, yet here she was in this stinky old flat probably about to let some decrepit old pervert do God knows what to her.\n\nJust then the bathroom door opened and Sidney appeared in just a grubby old blue dressing gown. \"I just have to get dressed and then we'll get you to the head masters office,\" he said. Again he was hoping beyond hope that she would be starting to panic a bit now and becoming more desperate. There was a pause for a moment, then, as he went to walk past her and into his bedroom she spoke. ",
        "\"No wait, I, erm, I was hoping that you might give me one more chance.\" She knew deep down what she was saying but she still clung to the vague hope that he still might just take pity on her. She felt disgusted by the stench of his breath as she stood uncomfortably close to him. With one last ditch attempt she looked at him with tears welling in those big baby blue eyes, \"please.......\"\n\nThe sex starved old fart was so horny for this huge busted beauty that he didn't know how he was keeping control of himself. Her fresh fragrance filled the air around him, she was so overwhelmingly beautiful. Her sweet young face melted his heart and hardened his dick at the same time. \n\nAlison could see his bottom lip quivering uncontrollably she knew he was excited, not least because as she glanced down she saw what looked like a tent pole sticking out under his robe. There was an uncomfortable pause as it seemed they were both waiting to see what the other was going to do next. With one last gamble old Sidney again went to walk past her as if heading to his bedroom to get dressed. \n\nThat was it, Alison knew what had to be done. Then, not quite able to believe what she was about to do, the stunning 18 year old stepped into his path threw her arms around him and simply said, \"please,\" as she held her breath and planted her lips on his.\n\nThe old man was momentarily stunned as her heaving breasts pressed against his chest and her soft sensual lips smothered his. Within a few seconds of realising what was happening he responded by pushing his rancid old tongue into her mouth groaning as he hungrily kissed her back. At the same time he instinctively put his hands around her waist pulling her tightly to him, neither of them now in any doubt of the state he was in as his erection pressed hard against her. \n\n\"Mmmmm, ooh yes, mmmmm,\" he moaned as he felt his way down her lower back until at long last he cupped those glorious ass cheeks in his groping old hands. There was nothing Alison could do as she reluctantly allowed him to drag her tight little skirt upwards until she could feel the cool air on her exposed buttocks. Sidney was now out of control as he grabbed and squeezed her panty covered ass, the feel of the delicate lace clinging tightly to those perfectly formed cheeks fuelling his lust. \"Oh God yes, yes, yes,\" he sighed as he kissed and slobbered all over the beautiful 18 year old. His cock was again raging in his pants and his mouth watering as in his he excitedly backed her up against the wall. \n\nAlison needed to get things under some sort of control. She knew where it was going to lead and she knew there was now no turning back. All she could do was try and get things over again as quickly as possible. She knew that taking his cock in her hand wasn't going to get her anywhere, she had done that once and still here she was. As the old man groped and fondled her she realised that the only way out of this was to really give what she knew he wanted, regardless of how repulsive the thought was.\n\n\"Wait, wait,\" she said as she wrestled to free herself from his groping hands. They were everywhere, it was like trying to fight off an octopus! But soon she managed and as she stepped to one side she uttered the words that neither of them ever expected to hear......\"let's go to the bedroom.\"\n\nOld Sidney didn't need asking twice, the door was just behind him and in an instant he had thrown it open to reveal a bed that had clearly not been made in a very long time. \"I knew you wanted it you dirty girl,\" he said with an irritatingly smug grin on his wrinkled old face.\n\nAlison stepped inside and watched as he arrogantly threw off his dressing gown and clambered onto the bed. He was a disgusting sight, wearing only a pair of grubby old grey socks and with an ailing old body that was so white that it clearly hadn't seen the sun for decades Alison began to wonder whether it was all worth it. He laid himself on the bed as if waiting expectantly for whatever was to come. The first thing Alison noticed was again how hard his cock was, bending back towards his stomach and with thick veins bulging along its deeply ridged length it looked terrifying. His huge balls sat on the bed between his parted legs in their wrinkled hairy old sack. He was such a disgusting sight, this was going to be a huge sacrifice for a gorgeous 18 year old girl relatively inexperienced in these things. \n\nHe lay there with his head propped up on a couple of pillows muttering, \"yes, oh yes, yes,\" to himself as his eyes roamed up and down the full length of her body. The poor girl knew she had to get on with it no matter how much the creepy old pervert repulsed her. Rubbing his stubbly old chin and licking his lips he began to grow impatient as she seemed to stand there frozen to the spot. \"Come on, come on,\" he said as he fidgeted on the bed, \"let's see you in your underwear then!\" \n\nHis words sent a chill down her spine. Knowing she had no choice the busty young blond reluctantly she reached behind and slowly unzipped her skirt. The old guys eyes bulged as she gently teased it down her thighs, being so tight she had to give a sexy little wiggle as she did. \"Oh my,\" he sighed as it fell to the floor and she stood there before him in her black lace panties and matching suspenders, her legs looked incredible sheathed in those black nylon stockings. \n\n\"Oh you sweet, sweet girl,\" he whispered as without taking his eyes off her he instinctively took his cock in his hand and began to slowly play with it. This only disgusted Alison even more, but she knew she had to get on with it and so she took the bottom of her tightly ribbed sweater in her hands and in one swift movement peeled it off over her head.\n\n\"Oh my God!\" Sidney blurted out. He couldn't believe his eyes as her huge bouncing knockers gently rocked themselves to a standstill. He could see properly for the first time just how slender and toned her body was, yet she had these absolutely huge tits. They were beautifully encased in a sexy black lace half-cup bra that seemed to offer them out for the taking. His mind was working overtime, he couldn't believe it, surely this wasn't happening, not to him..... This was a dream come true, a more perfect girl simply could not exist, if he could wish for any one thing then it would be her exactly as she was. She was standing there right in front of him in his bedroom looking even more incredible than any of the hundreds of glamour models in all the magazines he had ever masturbated over. \n\nAlison could see the look on his face and as he patted his hand on the bed next to him she knew what had to be done. Without a word she walked around to the side of the bed. Now within his reach he placed his hand on the inside of her stocking clad thigh and began to feel his way upwards. \"Oh yes baby yes,\" he sighed as his hand slowly crept higher until he was touching her soft silky gusset. The poor girl felt sick as she felt his probing fingers moving back and forth along her crotch. She looked down to see an expression that could only be described as looking retarded on his ugly old face as he stared spellbound at the delicate tiny lace triangle of her panties. He let out a groan as he gently pressed his fingers into her, the soft black silk sinking slowly into the moist warmth between her pussy lips. \"Ooh you naughty girl,\" he whispered, his excitement was beyond anything he had ever experienced.\n\nIt was then that the pretty 18 year old knelt on the edge of the bed and looked down at this disgusting pathetic wretch of a man. Having just kissed him and experienced his rank foul smelling breath she knew above all else she wanted to avoid having to do that again. Just the thought of it made her wretch and she was afraid if she did she could easily throw up. She knew she would have to do something though, and seeing his eyes bulging and his tongue hanging out as he stared at her panties she suddenly had an idea of what he might like.\n\nShe held the headboard with one hand to steady herself and after a few moments of slightly awkward positioning she managed to straddle his face, his staring eyes fixed on her crotch the whole time. With her knees now on the pillow either side of his head the busty blond gripped the headboard tightly and grit her teeth as she began to gently lower herself. \n\nThe old man thought he might have a heart attack as her lovely black silk panty crotch inched ever closer to his face. \"Oh God, oh God, oh God,\" he whispered as it touched the tip of his nose. Heaven wasn't enough of a word for it, as he drew her scent into his nostrils he had never in his wildest dreams imagined he would experience anything like this. \n\nAlison felt sickened by what she was doing, but she knew she had no choice if she was ever going to get him to let her off. It was then that she suddenly gasped for breath as she felt his filthy slimy tongue run along her soft silky crotch right between her legs. He brought his hands up and cupped her cheeky ass squeezing each buttock firmly as he pushed his face into her and began to slobber all over her panties groaning as he did. The poor girl couldn't believe what a filthy old pervert he was as he sucked and chewed on her now moist gusset. All of a sudden she got a shock as she felt him tug it to one side and amidst groans of \"yes oh yes, oh God yes,\" she suddenly felt his tongue forcing its way between the lips of her sweet fresh young pussy. \n\n\"Oh God,\" she instinctively cried without thinking, her voice trembling as she tried to catch her breath. Old Sidney knew what he was doing, he could taste her juices as they started to flow. He sounded like a pig snorting and grunting as he pressed his face harder between her open legs. \"Oh yes you dirty bitch,\" he groaned as he feasted on this beautiful girls exposed pussy. \n\nAlison knew she should have been repulsed and disgusted, but she couldn't help but find the whole experience becoming a turn on. Still he licked and slobbered, his tongue reaching as far inside her as it could, this was his holy grail, his utopia and as he ate her pussy he knew his cock was desperate for attention. He could feel it throbbing as it dribbled pre-cum onto his belly, he knew he wasn't going to be able to last very long. \n\nThe naive 18 year old had no idea what was happening to her, why was her body reacting this way? Surely she couldn't be turned on by this repulsive old man! She didn't know what to do and so with all the confusion running through her body she raised herself up before she started to enjoy it all a bit too much.\n\nThe old man just lay there licking his lips, his mouth wet with her juices. As she clambered off and positioned herself on her knees beside him she looked down to see him staring at her tits. She knew she couldn't stop things, not now, she still needed to give him what she knew he wanted. So reluctantly she reached behind herself and unhooked her bra. The old man's eyes bulged even more and saliva trickled from his gaping mouth as she allowed the black lace garment to slowly slide down her arms. \n\n\"Oh fuck me!\" He whispered, he had never seen a more incredible pair of tits, they were simply spectacular! They didn't so much tumble free as spring free from their lacy restraints. He couldn't wait a moment longer he never wanted anything so much in his life. She sat there a moment before leaning in towards him. He marvelled at the way they thrust out firm and proud before her as they came ever closer. \"Oh fuck me!\" Sidney again said as unable to wait any longer he grabbed them in his hands and pulled them to his face. Poor Alison nearly tumbled on top of him such was his over-zealous excitement. Instantly he squeezed and fondled her huge knockers all over forcing them into his mouth grunting like a pig as he did. She leaned closer and knowing she had to appear to enjoy it she squashed them to his face rolling them around all over it. The truth was she couldn't help the tingling sensation she was getting as he sucked and chewed on her hardening nipples. Despite the rough treatment he was inflicting on her boobs and the way he was using her she knew it was still preferable to having to kiss him.\n\nOld Sidney feasted on the huge pair making the absolute most of this once in a lifetime opportunity. They were the stuff of fantasy, in all his years he had longed to just once get his hands on a massive pair of jugs, and now here he was and not only were they massive, but so young and incredibly firm. \n\nAlison felt sickened as she looked down at the top of his crusty balding head as the creepy old pervert slobbered all over her lovely ripe young boobs. As he did she couldn't deny the reaction her body was having to this treatment, despite trying everything to prevent it she couldn't help but begin to feel more and more turned on.\n\nEvery now and again the old man would bring his head up and reach for hers moaning as he clearly wanted to kiss her. Prepared to do anything to avoid this she would take hold of her tits and squash them to his face begging him to suck them. \"Ooh please, please,\" she begged, \"ooh please suck my big tits, ooh yes you dirty old bugger.\" It was all a ploy to keep his foul smelling mouth away from hers, and it worked. The old man couldn't believe his ears as she seemed to want it as much as he did. \n\nAfter several minutes the poor girl's boobs were becoming sore and tender from such a relentless assault. Along with his sucking and chewing he sunk his bony old fingers in as deeply as he could as he squeezed and mauled them without a care for how she felt.\n\nAlison needed a break and went to pull away, but as she did old Sidney seemed to have other ideas. \"Oh, no you don't,\" he snarled as he gripped her upper arms and with a strength she hadn't yet witnessed he flipped her onto her back. \"Don't play games with me,\" he told her, \"I know what you want!\"\n\nAlison lay there on her back defenceless as the dirty old man tugged at her panties and pulled them part way down her thighs. Knowing the outcome was now inevitable the lovely blond decided to take over and slide them down her stocking clad legs and off herself. The sweaty old man licked his lips as he picked up the discarded underwear. Without a care for what she thought the old pervert brought the lacy garment up to his face and buried his nose in it before taking a long deep sniff. With a smile that showed off his mouthful of rotten teeth he wormed his revolting tongue around the gusset making moaning noises as he did. \n\nAfter a few moments he tossed them over his shoulder and focused his attention back on her. With bulging eyes he lifted her knees and parted them as wide as he could. He moved around on the bed and positioned himself between her feet taking a moment to stare completely dumbstruck at the unbelievable sight that greeted him. \n\nLaying there on his bed was the most incredible vision of beauty. Now completely naked except for her black lace stockings and suspenders Alison looked like every fantasy he had ever had. With her lovely blond hair spread across the pillow, her huge naked breasts thrusting upwards like two mountain peaks and her opened legs displaying the sweetest thing he had ever seen, (not that he had seen many), he began to move towards her. His eyes bulged as he stared at the glistening pink lips that surrounded her fresh 18 year old pussy, never had he seen a more inviting sight.\n\n\"Mmmm look what you do to me,\" he whispered as he raised himself up on his knees. Gesturing towards his cock he went on, \"oh God I'm so fucking hard, look.\" With that Alison couldn't help glancing down to see his huge hard member straining back towards his stomach with a rigid stiffness that looked almost painful. The shiny purple head looked like it might explode at any minute as clear slimy pre-cum oozed from it and trickled down its deeply ridged length.\n\n\"Ooh you're so lovely,\" he sighed as unable to wait any longer he dropped his head between her widely parted legs. With a long deep groan he pressed his tongue against her pussy and dragged it slowly upwards before locking his lips over her tender nub and sucking it hard. He smiled as he heard her let out a spontaneous moan, he knew what he was doing.\n\nGradually he wormed his way up her body, licking and kissing her slender toned stomach. As he went further he paused on her breasts as he took a moment to suck on each hardening nipple. Slowly he dragged his vile tongue over her breasts and up to her neck kissing and slobbering into it like a dog. With his hands now either side of her he raised himself up locking his arms straight so he could take a good long look at the beauty beneath him. \n\n\"Oh yes, yes, look at you,\" he groaned as he brought his painfully hard erection ever closer to the goal between her thighs. \"Oh God you lovely thing,\" he carried on as saliva dribbled from his opened mouth. \"Ooooooh yessssss!\" He hissed as his swollen purple head nudged against her. This was it this was what he wanted more than anything. His excitement left his whole body trembling as he pushed forwards and her delicate moist lips began to part. \"Oh God yes,\" he sighed as he felt her warm wetness begin to yield to his unwanted invasion. \n\nAlison could do nothing other than brace herself for what was about to come. She looked up and saw the look of total wide eyed amazement on his old face as he stared down in disbelief at what he was doing. Beads of sweat had broken out all over his head and his hairy old nostrils flared like a mad mans. He never in his wildest dreams thought he would see the day when his dirty old cock finally got to invade a lovely fresh 18 year old pussy.\n\nAgain he groaned and his eyes rolled back in his head as his swollen purple helmet slowly parted her tight juicy lips, when all of a sudden they gave way and it slipped inside. Nothing was going to stop him now and poor Alison bit down on her lip as he now drove himself forward forcing his huge hard cock slowly further into her. She was so tight that he had to draw back a little before driving himself further forward. \n\n\"Ooh at last, at last,\" he sighed as he felt the incredible grip of her lovely sweet cunt enveloping his rigid tool. He couldn't believe it as he watched his huge bent old cock slowly vanishing inch by inch into her beautiful pussy. \"Oh fuck yes, yes, yes,\" the salivating old man went on as he felt her stretching to the absolute limit around his burning erection.\n\nAlison raised her knees and parted her legs even further in an attempt to try and make things easier. It was then that she looked up and saw his crusty old mouth frothing at the edges coming towards hers. There was nothing she could do as with a huge groan he locked his lips over hers and began to kiss her with such a desperate passion. \"Mmmmmmmm,\" he moaned as at long last his cock sank balls deep into her while at the same time his tongue forced its way to the back of her throat. The pretty 18 year old gagged as his vile tasting mouth slobbered all over hers. His excitement was now beyond control as he drew his cock back before ramming it hard into her again. As his balls slammed against her ass she let out a muffled cry, something that didn't go unnoticed by the filthy old pervert. Again he drew his cock back before once more driving it right up into her. \n\n\"Mmmmm, ooh yes, yes,\" he mumbled without removing his mouth from hers as like a huge bent old piston he slowly picked up speed as he started to drive himself in and out of her. He already knew this wasn't going to take him long, he had never been more excited as the squelching sound of her ever moistening pussy rang like music in his ears. The busty girl grew more and more confused, in her mind she was hating every second, but her body was telling a different story, surely she wasn't starting to enjoy this?! \n\nFaster and faster he pounded into her, his hands excitedly roaming all over her naked body, the old boy was in heaven. Just then as she began to think she might be sick from the stench of his foul breath he removed his mouth from hers and started to suck on her huge tits. She couldn't deny the affect he was having on her, his cock was so big and hard and whether she liked it or not it felt so good ramming into her now soaking pussy. Old Sidney kept muttering over and over how lovely she was as she hooked her hands behind her knees and drew them up towards her shoulders giving him maximum penetration. ",
        "The old man realising the end was already near again locked his arms straight and looked down at the beautiful busty blond beneath him that he still couldn't quite believe he, yes he Sidney Spooner was actually fucking. It was all too much as he pounded her harder and faster his heavy old balls slamming over and over against her lovely cheeky ass. \"Uh uh uh uh uh uh,\" he grunted as he could feel the inevitable surge building deep in his loins. No matter however much he wanted it to last there was no stopping now, he had never felt anything like it, the sensation was incredible. It felt like every inch of his cock was being squeezed by her tight wet cunt. Harder and faster he hammered into her, \"yes oh God yes, yes, yes, yes,\" he cried as his body dropped onto hers and he again kissed her hard on the mouth while his hands went to work squeezing and mauling her tits. \n\nAmidst muffled cries and groans the old man's pace suddenly quickened even more, there was a sudden desperation as his body jerked and writhed on top of her, this was it, and Alison knew it. Her cunt was now soaked as he hammered pounded and slammed into her as fast as he possibly could. \"Uuuuh uh, uh, uh, yes, yes, yes, FUCK, YES, YES, OH GOD YES! AAAAARGH YESSSS!!!!!\" His cries were deafening as all of a sudden Alison felt his filthy hot spunk flooding into her. \n\nThe old man had never experienced anything like it as the huge torrent thundered up through his cock and exploded into her, over and over he pumped load after load of his thick hot sperm deep into this beautiful girl. \"Oh yes, God yes! Aaaargh, yes, ooh yes lovely ooooh lovely,\" he moaned as he continued fucking her hard spewing more and more of his dirty thick load into her lovely tight young cunt. Alison could feel it filling her up she had never known anything like it, there seemed to be so much as he kept on going emptying more and more inside her. She could feel an unmistakable stream of their combined juices running down the crack of her ass and forming a pool on the bed where she lay. \n\nStill he drove his cock into her pumping every last drop from his long frustrated old balls. \"Mmmmm ooooh at last, ooooh yes at long, long last,\" he sighed his voice trembling with both exhaustion and excitement. Gradually he slowed his pace until after a few minutes of grinding his cock as deeply into her as he could there was nothing left. Trembling and sweating he looked into her eyes before once again placing his lips on hers. This time Alison responded more favourably, whether it was relief that it was all over, or whether it was true emotion who knows. But she wrapped her arms around his neck and gave him the most sensuous soft kiss, even slipping her tongue into his mouth and entwining it with his. The old man was completely overwhelmed he had never felt such emotion. As they continued their loving embrace Sidney brought his slowing pace to a standstill. They could both feel his cock pulsating and twitching inside her as its stiffness began to wither. Alison was relieved it was over and with a carefully executed flex from the gorgeous blond it slithered out followed by a slow river of spunk that soaked ever more into the bed. \n\nAfter several more minutes the old man eventually rolled over to his side completely exhausted. Alison lay there unable to move as he still had his arms around her. After a few minutes his heavy breathing seemed to slow and he appeared to be drifting off to sleep. The pretty girl wanted to make sure he was fully asleep and so knew she would have to wait a while before attempting to move. \n\nAfter about ten minutes the old man's arms loosened around her and she felt sure this was her chance to try and maybe slip away. Carefully she managed to roll free of him and sat on the edge of the bed for a few minutes looking down to see him laying there with his eyes closed and a stupid grin on his face.\n\nShe knew this was her chance and so as quietly and quickly as she could she gathered her clothes up and went through to the living room to get dressed. She put her bra and panties back on before helping herself to a glass of water to try and wash the vile taste of the old man out of her mouth. \n\nThen as she turned to get the rest of her clothes from the table where she had placed them she got a fright. \n\n\"In a hurry?\"\n\nAlison jumped, it was Sidney. He was standing in the doorway still completely naked except for his holey old socks. \n\n\"I' erm, I didn't want to disturb you,\" she nervously replied.\n\nHe just smiled as he walked into the room and closed the door. \"I haven't quite finished with you yet young lady,\" he said as he admired her shapely curves. \n\nSeeing the look of panic on her face he quickly continued. \"Just one more thing and then you can go!\"\n\n\"Wh....what?\" She asked.\n\nWith that he walked across the room and sat in a chair, not once taking his eyes off her. It was obviously his favourite chair because it was the grubbiest and in prime position for watching the television. Alison looked at the disgusting pathetic old man, she couldn't help noticing his dirty old cock moving as if it had a life of its own. \n\n\"See, I can't help it,\" he said again gesturing towards his rapidly swelling manhood, \"I've told you before, it's your fault.\" As he spoke he licked his lips and looked her up and down. This was his once in a lifetime chance and he made no bones about telling her. \"You think I'm not going to make the most of you?\" \n\nHis words again sent a shiver down her spine. \"You can help me out once more, and then I'll let you go.\" This clearly wasn't a question she wasn't being asked he was beyond that. He wanted to make full use of this huge busted 18 year old, he knew he would never get another chance like this again as long as he lived. \n\nHe reached his hand out for her, and she in turn reluctantly responding by offering hers back. Taking her by the wrist he again drank in the beautiful vision in fine black lace underwear. \"Ooh look at you, look at you,\" he whispered as he pulled her downwards causing her to drop to her knees between his parted legs. She didn't like the way this was looking, his dirty old cock rapidly hardening cock just inches from her face.\n\n\"Ooh you know what I want sweetheart,\" he whispered as he flexed his groin and made his erection twitch before her eyes. The lovely blond shook her head quietly muttering, \"no, p.....please.\"\n\n\"Oh come on, just for a minute, I just want to know what it feels like,\" he said. \"I promise after this you can go and you'll never see me again.....\" With that he gave a creepy smile showing her his mouthful of rotten teeth.\n\nAlison knew she had no choice, despite all she had done she knew he could still get her in lots of trouble. As disgusting as the thought of it was she knew she really had no choice. Just then the old man stroked her lovely soft blond hair telling her how pretty she was. He made her skin crawl and the poor girl had to take a moment to prepare for what was to come. All the time old Sidney is stroking her hair and the side of her face looking at her with hungry eyes. \n\n\"This will be the last thing, and then I can go?\" Alison nervously asked.\n\nThe old man couldn't believe what he was hearing, she was really going to do it! \"Yes, yes,\" he answered enthusiastically. \n\nAlison cleared her throat and licked her lips nervously as she reached out and took the base of his dirty old cock in her delicately soft hand. That alone had the old man groaning in pleasure. He had never felt such excitement as he looked into her beautiful big eyes. Already he was fully hard as he watched the way her eyes seemed to widen as they focused on his beast of a cock swaying around before them. His appetite for this girl was insatiable, he couldn't believe how he was so hard again this was the third time in not as many hours! But then such was the affect of this gorgeous curvaceous dream of a girl.\n\nSidney sat there slouched in his chair still stroking her soft blond hair and staring intently at her oh so sweet and pretty face. All of a sudden he gasped for breath as she parted her full pouting lips and extended her tongue until it touched the underside of his shiny purple knob. \n\n\"Oh my God!\" His voice trembled as her tongue glanced over the tip of it several times. \"Ooh yes baby, you naughty, naughty tease,\" he whispered while watching the delicate way she gently licked and kissed it. It was already becoming too much, the sight of his dirty bent old cock being lovingly caressed in this way by such an incredibly beautiful girl was almost unbearable.\n\n\"Ooh yes, yes, come on....\" he encouraged as he held her head in his hands and guided her mouth onto his swollen erection. Knowing what had to be done Alison opened her mouth and reluctantly slipped her lips over the end of his dirty smelly cock. The old boy again gasped as if unable to catch his breath as he raised his hips and, holding her head, gently pushed himself deeper into her mouth. This was unbelievable, she was so pretty and the sight of his cock slipping into her lovely soft sweet mouth was just incredible. \n\nAlison sensed he was starting to get carried away as without warning he held her head more firmly and started to drive his cock in and out of her mouth. She grabbed the base tightly in her hand to stop him pushing it so far in that she might choke. It tasted vile and she started to feel sick as she reluctantly began to suck on the revolting thing. \"Ooh fuck yeah, ooh you dirty bitch,\" he hissed as he felt her mouth close around it and her wet tongue press against its underside.\n\nThe pretty girl looked up into the old man's bulging eyes, his ruddy red face was covered with sweat and he licked his crusty old lips as he began puffing and panting. She knew she had to get things over with but there was no way she could let him cum in her mouth! For several minutes she gave this filthy old pervert the time of his life as she lovingly sucked licked kissed and caressed his bent old cock. She hated it but knew this was going to be the last thing she would have to do and so she persevered. Now the old boy was getting over excited and began thrusting his hips up so violently that she couldn't stop his cock from ramming against the back of her throat. Again he started moaning and groaning and she knew that already he was nearing the end. Her plan was to pull his cock out at the last minute and finish him off with her hand. \n\n\"Oh fuck, fuck, fuck, yes you dirty fucking bitch!\" Sidney cried as he pushed her head down further and forced his cock as far in as it would go. Alison gagged and began to choke but the sex crazed old pervert was too far gone to care. He held her head tightly and fucked her lovely face as hard as he could. \"Oh God yes, yes, fuck yes!\" he cried. It was then that she felt his grip for some reason loosen on her head and he suddenly grabbed the arms of the chair. Still he thrust upwards foolishly convinced that she was enjoying the whole experience as much as he. \n\nSuddenly she tasted something in her mouth, it was vile and in a moment of panic she pulled his rotten tool from her mouth and quickly moved herself back out of his immediate reach. \"No, no!\" Sidney cried as Alison stared at his huge bent old cock. It twitched and flexed before her eyes, with each flex it bent harder back towards his stomach and a trickle of clear slimy fluid spilt from its tip. He was so desperate not to come that he held his breath and grit his teeth for a moment as he waited for his very imminent climax to subside. The busty beauty had other ideas and went to grab his cock in an attempt to finish him off.\n\n\"Oh no you don't!\" Sidney barked as he suddenly pulled her hand. He sat forward in his seat and looked down the back of the 18 year old still on all fours before him. It was the sight of her gorgeous ass stretching those black lace panties that quickly gave him another idea. The poor girl was momentarily confused as he clambered to his feet, a confusion that was short lived as he quickly dropped to his knees behind her.\n\n\"Ooh fuck look at that,\" he said admiring her on all fours before him looking like a top class glamour model. She looked so inviting, the way her back arched inwards pushing her ass up was like she was offering it as a gift for the taking. In a state of clear desperation he hooked his fingers under the crotch of her lace panties and pulled them over to one side. \"Oh fuck, oh fuck yes,\" he went on as he looked down at her gloriously round firm ass cheeks thrusting up towards him. He knew he had no time to waste as without a moment to spare he lined his thick hard cock up between those beautiful round globes. Before Alison could do anything she felt him grab her cheeks and prise them apart as something big and hard again began forcing its way between the pink lips of her tight young pussy. Then with one huge grunt he forced his cock all the way into her. Alison knew she had to take it, after all this was far preferable to him finishing in her mouth. So, as a way of encouragement she pushed her ass back towards him letting out a long sigh as she did. Unbelievably she had to admit it felt pretty good, in fact it felt very good! She didn't want to enjoy it but she couldn't deny the feelings that seemed to be running out of control through her body. Having been left hanging after his first assault she suddenly felt she too needed some satisfaction.\n\nFeeling the incredible tightness of her lovely 18 year old cunt the old man knew he wasn't going to last long. The sight of his cock vanishing between those cock teasing cheeks was just the most incredible thing to see. There was no stopping now he knew he wasn't going to be able to hold back for much longer. Alison dropped to her elbows which left her ass now thrusting up in the air. Still the old man cursed and sweated as he drew his cock back before ramming it hard and fast all the way into her \"Fuck that's deep,\" he groaned as he buried his cock as far in as he possibly could grinding it around inside her. \n\n\"Ooh God yes!\" Alison spontaneously sighed . She arched her back and again pushed back against him trying to get herself as much of that huge thick cock as she possibly could. \"Oh yes fuck me you dirty old bastard! Fuck me, fuck me hard!\"\n\nHer sudden outburst excited the old man even more, he wanted it to go on forever but things were now beyond his control. \"Ooh yes you dirty fucking bitch, take it, take my big hard cock,\" he hissed as he began to pound in and out of her with his hairy old balls flailing around between her parted legs. Harder and deeper he tried to force it as his excitement grew ever stronger. \"Fuck you've been asking for this for a long time you dirty cock hungry bitch,\" he went on as he piston fucked her tight cunt faster and faster.\n\nThe sight of her before him like this was all too much, he knew his climax was imminent and so he reached under and pushed her bra cups up under her chin causing her huge heavy knockers to swing free. Instantly he grabbed them taking their full weight in his filthy groping hands. \"God they're big heavy fuckers,\" he grumbled in her ear as he squeezed and mauled them for all he was worth. \"Ooh yes, yes,\" he hissed kneading them roughly sinking his fingers deeply into them.\n\nAlison could do nothing as again her young boobs were taking the full punishment. She could feel something wet between her shoulders, it was saliva from his drooling old mouth. Relentlessly he pounded her with his cock crying out \"YES OH YES, UGH YES, YES, YES!\" This was it, he couldn't stop himself now even if he wanted to, he could feel the tightening of his balls as he released her tits and straightened himself up grabbing her hips. Tears filled his eyes as looked down at her lovely ass bouncing against him, this was it, the moment had come as suddenly the flood gates opened and a deluge of spunk powered up through his cock and once again flooded into this gorgeous 18 year old pussy. \n\nAll of a sudden Alison too could feel herself reaching an orgasm. The sensation of all that dirty hot spunk filling her up sent her over the edge as she rotated her hips grinding her ass against him. \"Oh, oh, oh, oh yes, yes, YES, YEESS!!!! She cried as her entire body shuddered with the orgasm that now washed over her. \n\nSidney could hear her moaning and groaning as he continued to hammer his cock into her, it was a sound he knew he would never forget. Still the seemingly endless river of this old man's filthy sperm continued to flood her now throbbing cunt. On and on he rammed her as hard as he could, cursing and swearing as the sweat poured down his ugly old face. Alison could feel her pussy constrict around his huge hard cock as if sucking the very life out of it. The two of them carried on for several minutes grinding against each other as they both seemed intent of milking every last drop from his spent old balls. \n\nSoon there was nothing left and they collapsed in a heap together on the floor, the old man's cock still gently pulsating inside her as the final drops oozed from it. Alison would never admit it but she felt quite satisfied, probably more than she ever had done. Of course so did Sidney, he had never produced so much spunk in such a short space of time, but now he knew he had shot his last load for today, any more and he was in serious danger of having a heart attack. \n\nReluctantly he rolled off her to let her get to her feet. He watched as she dressed still unable to quite believe the afternoon he had just had. \n\n\"Can I go now?\" Alison asked. \n\nThe old man just smiled and nodded his head. As she went to leave he told her to come back any time she wanted, an offer that despite being more satisfied than she had ever been, she probably wouldn't be taking up..."
    ],
    "authorname": "bambigirl44",
    "tags": [],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/an-opportunity-not-to-be-missed-ch-36"
}