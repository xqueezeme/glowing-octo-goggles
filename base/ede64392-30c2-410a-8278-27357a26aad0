{
    "title": "Game Night Pt. 05",
    "pages": [
        "Once again, I would like to offer my apologies for the pause between installments. I am happy to let you know that part 6, my intended end of this story is already underway. If that part becomes too long then I will continue to part 7, but the end is nigh. \n\nHappy Holidays and Have a safe and Happy New Year.\n\n*****\n\nGame Night Pt. 5\n\n\"Hey!\" A new voice called. \"You better share!\" \n\nSarah's stomach clenched like a child caught stealing a cookie from the jar. She turned slowly and let herself be pulled into a kiss. Though her eyes had adjusted it was still too dark to make out who had joined them. Sarah didn't care, the kiss was sweet and left her trembling.\n\n\"Or what?\" Sarah teased.\n\n\"Or I'll move you to the sideline and tell you to not even touch yourself.\" Rachel returned.\n\n\"Fine.\" Sarah stood and indicated Owen's lap. \"He's all fluffed for you.\"\n\nRachel giggled. \"Thank you.\" She climbed on top of Owen, his cock pressing into her side as she snuggled up to him. \"Are you okay with this?\" She asked, looking into his eyes even though the dark concealed them.\n\n\"Yes.\" Owen replied softly even as his hips jerked lightly against her.\n\n\"Feels like someone needs more attention.\" Rachel trailed her fingers lightly against his stomach before grasping the wet flesh. Owen's reaction was exactly what she wanted. \"I want you inside me.\" Rachel whimpered. \"I want to feel you against me, entering me. I want to taste your name on my lips before I scream it out loud.\" \n\nHer voice shook as she drew a shuddering breath. \"I need to feel that ache as you tear through that barrier, claiming me.\" She flexed her hand around his erection.\n\n\"Are you sure?\" Owen asked through a hiss. \n\nRachel nodded enthusiastically. \"I'm sure.\" Rachel kissed his cheek. \"But there is a problem.\"\n\n\"What's that?\" Owen asked, his tone all about fixing whatever \"the problem\" might be.\n\n\"Sarah's dripping wet and in need of some serious attention. I just couldn't live with myself if I got to cum and she was left needing it.\" Rachel pumped him faster. \"At the same time, I don't want to share my first time with you.\" Rachel flicked his ear with her tongue, her hot breath sending shivers down his side. \"What should we do with her?\"\n\n\"I don't k-\" Owen's words were stolen as Rachel moved her body up higher on him, her velvety lips surrounding the blunt head pinning it between their bodies.\n\n\"Should we make her watch without playing? Let her tease herself until she begs?\" Rachel rolled her hips gently with each word. \"Maybe we should let her finger herself until she just can't cum anymore.\" \n\n\"Oh, shit.\" Sarah whispered.\n\n\"What do you think, Owen?\" Rachel asked sweetly. \n\n\"T-tease herself until she b-begs.\" Owen replied through hitching breath. \n\nRachel giggled, her smile clear in the tone of her voice as she spoke. \"Mmmmm, I love it!\" \n\n\"If I beg, will you take care of me?\" Sarah asked with a tremble.\n\n\"Of course.\" Rachel replied quickly. \"But you have to really beg.\" She turned back to Owen. \"Now, here I am on top of you.\" She swept her hair out of her face. \"What are you going to do with me?\" She paused for a moment. \"Keep in mind, there are no limits. I will, literally, do anything you want.\"\n\nOwen's mouth dried out, but even if it hadn't it would have made no difference. In that moment, he had forgotten the entirety of the English language. It was like there was a early 90's Rolodex in his mind just flipping its shit, 9 x 5 index cards with words and definitions just spitting out on rapid-fire. He had no words. None. \n\n\"I think you broke him.\" Sarah giggled.\n\nRachel rubbed her hand against his cock.\n\n\"Fuck.\" Owen moaned.\n\n\"Nope, not broken.\" Rachel concluded. \"Just needed rebooting.\"\n\n\"I wonder how you press 'control,' 'alt,' 'delete' on him?\" Sarah asked.\n\n\"I think that button's on the prostate.\" Rachel replied. \n\nOwen grabbed Rachel's hand as she made like she was going in search. \n\n\"Apparently you just needed to startle him a bit.\"\n\nRachel pulled Owen's lower lip between her teeth. \"That's enough about Sarah. What am I going to do with you?\" She purred as she looked into his eyes. \n\nOwen closed his eyes briefly as he pressed his hips more firmly against the scorchingly hot girl straddling him. \"I want you.\" He breathed on an exhale. \"I want to be in you.\"\n\nRachel licked her lips. \"That,\" She rolled her hips against his erection, \"I can do.\" As she raised her hips she gripped the length of him and moaned, a delicious low growl as she moved the blunt tip of his aching cock between her dripping, dew covered lips.\n\nThe sound of her moaning kicked Owen mentally back in time and in an instant he found himself reliving a memory he'd thought forgotten.\n\nThe Sun was shining, beating down on the exposed skin of the group of friends. Owen felt the heat in his sore muscles, felt the tightening of his skin as a precursor to the burn he would later have, and the grit of the cement beneath his knees reminded him that if he shifted around too much he would pay with flesh. \n\n\"Make sure you don't miss any spots.\" Rachel reminded him. She had called him over to rub tanning oil on her back with the excuse that she couldn't reach it and none of the other girls wanted to miss a minute of their sun time. Owen had grumbled about the task but had made his way over and knelt beside her towel. \n\nA few squirts of the oil rubbed vigorously between his hands but before he could make contact, Rachel spoke again.\n\n\"I don't know how you're going to get everywhere if this is tied.\" And just like that the top of her bikini was undone. She was lying on her stomach so he didn't see anything, but the knowledge that she had untied her clothing in front of him left him feeling parched and short of breath.\n\nHe put his hands on her skin and fought to keep the satisfied groan to himself, except the sound came out anyway. His cheeks burned before he realized that it had been her, not him, that had made the noise. \n\n\"God! Your hands feel fantastic. Why haven't I had you give me a massage before?\"\n\n\"Quit perving on my brother!\" Katerina shouted without looking up from her book.\n\n\"So you can have him all to yourself?\" Rachel called back. \n\nKaterina didn't say anything to that and Owen had been so caught up in touching Rachel that he didn't notice the way Kat bit her lower lip. \n\n\"So,\" Jessica, lying beside Rachel, started, \"I was reading this article-\" \n\n\"Of course you were.\" Rachel griped.\n\n\"And in this article,\" Jessica continued, \"there were all these suggestions about how you should be having sex.\" \n\n\"I didn't know there was an entity out there that wanted me to have sex.\" Rachel quipped.\n\nI do, Owen thought to himself.\n\n\"No, like, what positions, speed, where to touch, how to be touched.\"\n\n\"There's only one way.\" Rachel interrupted again. \"Fast, hard, and rough.\"\n\n\"That's three.\" Katerina pointed out.\n\n\"Not the way I do it.\" Rachel smiled.\n\n\"It went into some detail and said that while guys typically like the fast and hard sex, women rate the slow and passionate stuff better.\"\n\n\"I wouldn't know.\" Rachel replied. \"I just beg until they give it to me fast.\" \n\n\"Why?\" Jessica asked.\n\nRachel seemed stunned by the question and quickly changed the subject. \"I'm thinking of going dancing tonight.\"\n\n\"I don't want to go dancing.\" Katerina fussed.\n\n\"It's either that or I'm going to crawl into your brother's bed after everyone goes to sleep.\"\n\nOwen's eyes widened in surprise and he stopped applying the oil. \n\n\"Fine! We can go dancing.\" Katerina's mouth was firmly twisted with aggravation but she returned to reading her book. \n\n\"Too bad, Stud.\" Rachel didn't even turn to look at him as she spoke. \"I could use some fast, hard, and rough attention tonight.\"\n\n\"So, you've never had it any other way?\" Katerina marked her spot with her finger. \n\nRachel finally turned to look at someone. \"I already said 'no' just let it drop.\" There was a bit more fire to her tone than she'd meant but no one bothered her further. Lying her head back down, cheek against the chair, she wiggled her back and hips. \"Man-slave, continue your work.\" \n\nOwen shook his head with a barely suppressed chuckle and returned to rubbing her back; delicious moans bursting from her throat as he worked. \n\nOwen looked at Rachel, forgetting about the blunt head thrusting out from his hips to drink her in instead. He'd spent much of his life around this young woman. Had watched her grow from a child into adolescence, hell, he'd even heard her fart on more than one occasion but of the veritable lifetime of memories he had of her, her face on that distance summer day kept coming back. There was something in the way her eyes seemed to dull as she begged off the question that dogged his overworked mind. \n\nRachel, not noticing the lost-in-thought expression on her soon-to-be lover's face, worked the burning, throbbing helmet between her insistently tingling lips feeling the delicious bite as his momentarily dry cock kissed her dripping slit. Her teeth clicked together viciously as she arched her back, feeling the sharp tear of her hymen and the slip-and-grip of his cock sliding into her. \n\nOwen's fingers, a hair's-breadth from Rachel's head gripped the pillows between his fingers and for some strange reason the sight of his white-knuckled grip sent tremors of lust flashing through the muscles of her core. The pain had faded and she felt herself grow wetter, her pussy hungrily pulsing around the thick invasion of his dick. With each flex of her muscles she could feel that bar of his wiggling against her g-spot, forcing her toward orgasm with little more than the vibration of his blood through his veins. \n\nShe wanted more. She wanted to be owned by him. Take me, use me, tell me what I need to do to make you fuck me like an animal, her mind growled. Her mouth watered as he opened his eyes a slow exhale rattling bass through the expanse of his lungs and chest. Those caramel eyes (had they lightened) fixed on hers and she knew, this was going to be something she would never forget. \n\nIn the time it takes lightning to strike she imagined vividly the exquisite soreness she would feel between her thighs come morning. She rolled her hips against him, exaggerating the move, before squeezing her muscles down tight on his cock. That's right, she thought, feel that slick heat and strong grip, fuck me, I dare you. Fuck me until I can't grip you anymore. \n\nSarah watched in awe, trying not to make a sound as the scene blossomed in front of her eyes. She'd seen Owen in action tonight, had felt the power of his body as he moved. She knew he could grip Rachel in his arms and dominate her until she bent before him. Yet, he was poised over her, straining to control the desire when, by all accounts, Rachel was giving him the green light, all-systems-go. \n\nShe had lied back in an armchair and had thrown her legs over the armrests spreading herself wide for any to see. The heat within her scorched her skin and left small beads of sweat dotting her body. Her fingers, previously a flashing movement between her delicate lips, had slowed to a light rolling as she prolonged her release, trying to keep pace with the show. \n\nSarah pulled at lightly at her nipples as her fingers continued moving against and around her clit, dropping low to her pulsing, slightly aching, opening before returning to her clit once more. She teased herself as she watched Owen's muscles shift beneath his skin. \n\nRachel purred such that she would give Katerina a run for her money as Owen's hips began to move. It was a slow, calculated rhythm and his eyes held hers as he pulled back until the thick head of his cock stretched her wide. He wouldn't pull all the way out, but he would hold her stretched around his throbbing member for a moment before sliding back into her slow and smooth. \n\nShe could feel every nuance of his movement. She could feel the metal piercing pressing into her, the hard ridge of his head forcing its way past her clenching muscles, until the blunt head pressed against her cervix with a gentle bump. As he pulled back again, she moaned his name, her hot breath carrying the word before kissing his skin. She locked her legs behind his butt, trying to keep him pressed tight against her but he was undeniable in his movements. \n\nOwen claimed Rachel's mouth with his own. It was a powerful movement, a demand in the form of a kiss. His tongue danced with hers as he continued his slow assault on her body. Though he had just begun, and though he'd already cum more than he could remember, the feeling of her and the plan he had left him on the verge of giving into his release. He bit his cheek, hard, and refused to focus on himself. This was about her. \n\nAlarm bells began to ring in Rachel's mind as her body was over-run with the feeling of his cock pressing into her, the feel of his skin lightly scraping against her clit as their hips came together, the way her nipples ached as the slid against his chest. She locked her fingers into his buttocks, her nails biting as she tried to pull him harder into her. She wanted him to fuck her, take her hard, make it sting as he pounded into her. She groaned into his mouth as he pulled back once more, driving her wild.\n\nThis wasn't what she had wanted. She wanted to be fucked, hard, fast, deep. Instead, he was scooping her into his arms, holding her with reverence as he moved with her. Her pulse raced out of control, an orgasm threatening to fracture her and leave her in pieces scattered around threatened as he kissed her collarbone.\n\nShe tried to say 'no' but it came out as a wheeze. She wanted to scream for him to pound away at her but the taste of his kiss still on her tongue stole her words. As his fingers wound into her hair she tried to push him away but instead pulled him closer. He pulled the thick tangle of her black hair and she went with the movement, revealing her neck to him. He licked the hollow of her throat as their hips came together again.\n\nRachel shook like a leaf in a gale as Owen stopped his movements. A gentle respite as he nibbled on her sensitive skin. She was about to call out to him as the sound of him sniffing her caused her frantic pussy to grip him in a stuttering hold. She felt him move his hands before the familiar pressure of his palms against her body returned. Still he did not move. \n\nRachel was confused until a new warmth blanketed her, a body holding her from behind. Two arms wrapped around her from behind and the thick points of Sarah's nipples rubbed against her back. She was now supported all around, held between two people treating her as if she were priceless and to be adored. \n\nHis teeth scraped against the side of her neck as he began to roll his hips. No longer withdrawing he moved within her, trapping her clit between their bodies and working it with his skin. All the while, Sarah's hands caressed Rachel's breasts, pulling at her nipples before rolling them beneath her fingers. Sarah's tongue danced on Rachel's neck opposite where Owen now nibbled.\n\n\"O-\" she tried to speak but her voice caught in her throat. She moved spasmodically in his hold but he never let her drop. \"O-O-Owe-\" Her words were caught in the choppy sea of her breathing as everything began to vibrate apart at the seams. \"N- Oh, f-f-f\" Her hands clenched and released, clenched and released as she struggled to gain control of herself.\n\nRachel's stomach flipped and her arms and legs jumped and wiggled of their own accord but there was no coordinating the efforts. Her mind screamed empty noise as she fought not to be overwhelmed by the sensations. She could smell herself on the air as Owen and Sarah carried her gently toward her end. \n\n\"Cum with me.\" Owen's voice was husky, deep, and achingly raw as he shuddered with her.\n\nAnd Rachel did. She released herself to his gentle, loving, insistence and felt herself explode with lights dancing in front of her eyes. She screamed but she wasn't certain it even made a noise. She scraped her nails against Owen's skin but didn't know what direction she was moving. Her orgasm obliterated all reality and left her with nothing but pure sensation singing in her nerves. \n\nSarah's eyes never moved from their entertainment as Rachel came undone. She could feel the relentless full-auto flexing as Rachel's body was racked with pleasure in a symphony too complex to coordinate. She heard the splashing spray colliding with Owen's chiseled form and the musky scent screamed 'woman' in a way that left her own slit dripping. \n\nSarah barely felt Rachel as the raven-haired goddess went boneless against her because her senses were focused only on Owen at that point. His eyes were slammed shut, his jaw clenched, and his powerful arms were vibrating against her stomach as he continued to hold Rachel in his arms. Sarah's brain took only a moment to make the connection before her body responded viscerally. She began to cum, unprovoked, untouched, as she connected the dots of Owen's strained muscles to the fountain-esque spray of his orgasm into the deliriously ecstatic girl in front of him.\n\nSarah's body recalled the scorching heat of his cum as it had filled her and her core throbbed with jealousy as she watched Owen's shoulders tremble through the release.\n\nOwen felt his body bowing under the force of his orgasm and he had no further strength to hold himself up. He lowered himself as gently as he could and wrapped curled his arms against Rachel. He looked up at her face ready to gaze into her eyes and see her smiling at him. Instead he found her cheeks wet with tears and finally registered the shaking of her chest. \n\n\"Rach?\" He whispered. \"Did I hurt you?\"\n\nIt took her a while to respond but when she could finally form words she let them fall without opening her eyes. Allowing herself this golden afterglow to deny the existence of reality. \n\n\"Hard, fast, and deep.\" She whispered. \"That's all I wanted. That was everything to me.\"\n\nOwen felt his stomach plummet. He'd thought she would enjoy the change in pace.\n\n\"Instead, you give me this slow passion.\" She tightened her fists. \"You hold me like I'm the only thing that matters.\" \n\nA sour taste filled his mouth leaving an arid wasteland in its wake. \n\n\"And at the end of it all, I know, I know that hard, fast, and deep... will never be my only stipulation again.\" She raised her hand and ran her fingers through his hair. \"I know that nothing else, but you and my friends, will ever be enough for me.\" She nudged his chin willing him to look up at her. \"Thank you.\" \n\nSarah held her friends and knew that things were never going to be the same again. It just couldn't ever go back to the way it was. Each of them, on all accounts, were all-in.\n\nAfter some time, Rachel turned her gaze toward Sarah. \"You know something?\" \n\n\"What?\" Sarah smiled and smoothed the coppery strands of her hair. \n\n\"You never begged.\" Rachel smiled devilishly. \n\n\"What?\" Sarah's smile showed slight confusion.\n\n\"We said that you had to finger fuck yourself until you begged or you couldn't have him.\" \n\n\"Ugh!\" Sarah feigned outrage. \"I was too busy holding you.\"\n\n\"Rules are rules.\" Rachel stuck out her tongue. \"But, I think we can find a way to work around that.\" \n\nSarah's smile broadened. \"Yeah?\" \n\n\"You'll still have to beg.\" Rachel admonished, shaking a finger.\n\n\"I don't know if I can.\" Sarah replied.\n\n\"I do.\" Rachel answered easily. \"I'll teach you how.\" She pulled her friend in close for a kiss. \"But first, I think we're going to have to get Owen back in the mood.\"\n\n\"Yeah?\" \n\n\"Yes. And I know just the thing.\" Rachel pulled herself from beneath Owen and moved to the love seat previously occupied by Sarah. She held her knees together and her legs were poised on the tips of her scrumptious looking toes. She curled her finger toward Sarah, beckoning the redhead closer.",
        "Sarah sashayed toward her friend, giving her ass plenty of wiggle for Owen to appreciate as she moved away from him. She stepped close to Rachel and felt a shiver of anticipation as she stood, toe-to-toe with the dark haired girl with the mischievous smile.\n\nRachel made a show of her eyes moving up and down Sarah's body. She teased herself with thoughts of what she was going to do and the delicious tingle between her legs had returned. Sarah's reddish-blonde hair was a brilliant contrast to her skin tone and her light blue eyes. She moved her stare down over the swell of Sarah's breasts over the flat expanse of her stomach, to the juncture of her well defined thighs.\n\nRachel licked her lips before speaking. She locked eyes with Sarah. \"On your knees.\" She pointed sharply to the ground. When Sarah didn't move she snapped, \"Now.\"\n\nSarah dropped to her knees, her round butt against her heels. \n\n\"I'm thinking there needs to be a punishment for you not begging.\" Rachel tapped her chin thoughtfully. \"I think...\" more tapping, \"yes, I think you need to apologize to me.\"\n\n\"I'm-\" Sarah started but Rachel silenced her by placing a finger over her lips.\n\n\"Not with your words.\" She raised one delicate foot up and held it to the side of Sarah's face. \"But you do need to use your tongue.\" \n\nSarah knew that this wasn't about her. She didn't relish the idea of kissing and licking Rachel's feet but she knew how it would impact Owen and that left her more than ready to give Rachel's petite foot a nice slow, bathing. Still, it would be more fun if she could get Owen to join in and she thought she knew just the way.\n\n\"No.\" Sarah turned her face away from the appendage. \n\n\"What?\" Rachel narrowed her eyes like a predator, searching Sarah's face for the defiance she'd clearly heard.\n\nSarah flicked her eyes to the side in Owen's direction and prayed that Rachel would catch on. Sudden understanding brightened those piercing eyes and a slight smile tugged at the corners of Rachel's mouth.\n\n\"Well, I guess someone doesn't want to do what she is told. I guess I'm going to have to get a little more rough with you.\" \n\n\"You wouldn't dare.\" Sarah hissed back.\n\nRachel looked taken aback for a moment but then that smile returned full-force. \"No. You're right, I wouldn't.\" She pouted but couldn't hold the look as her smile re-doubled. \"I guess I'll just have to get Owen over here and have him force that pretty little mouth of yours to go where I want it.\" \n\nSarah's body hummed with desire. Her thighs were tickled with the trickles of her arousal and every slight stirring in the room was like a cool kiss against her inner thighs. She tried to hide the gentle rocking of her hips but her body was already living the attention she would no doubt, soon be getting. She turned to look at Owen, poor boy, he was all attention with his muscles straining but getting nowhere. \n\nSarah licked her lips as she stared at him. \"No.\" Had her voice always been so husky? \"Owen wouldn't want to see that. There's no way he would twist his fingers through my hair and force me to kiss and lick your pretty toes.\" She watched his cock twitch as her words filled the room and with every kick of that hard length she could feel herself growing more feverish. \n\n\"I don't know.\" Rachel's words were slow and heavy, like she, too, were feeling the electricity in the air. \"I think Owen would be perfectly fine with it.\" \n\nSarah never took her eyes off Owen as she spoke. \"And why is that.\" \n\n\"Because.\" Rachel replied easily. \"While he is forcing you, I'll be stroking him with my free foot.\" Rachel laughed as Owen groaned, his back arching as he imagined the feelings. \"I may even work him hard enough that he cums in your hair as he moves you where I tell him.\" \n\nDespite the teasing, Owen still had yet to take a step toward them. It made sense, actually. Owen was the kind of guy, no matter how teased and tormented, who wouldn't make a move without consent. \n\n\"Well, let's see it then.\" Sarah thrust her chin toward him. \"Come on, big boy, come over here and let's put her words to the test.\"\n\nOwens' muscles locked him in place, his whole body straining. His jaws were clenched and the most erotic pained expression twisted his features as his fast, shallow breathing made lustful whispers in the quiet.\n\nRachel moved her foot closer to Sarah's lips but Sarah turned her face away. \n\n\"Not unless Owen makes me do it.\" She licked her lips again. \"I'm not going to lick those pretty toes unless those strong hands are forcing me to do it.\" She poured her passion into her words, the letters slicing off her tongue like molten blades of pure sexual intent.\n\nYou have a very real possibility of being fucked raw, right here, her brain warned her, back down. Fuck that, she thought at her sensible side. Bring. It. On. Because she was going to fight back. She planned to torment that wondrous beast within him until he forced her to do as she was told. Her pussy screamed in delight at the thoughts racing through her ,possibly twisted, little mind.\n\nOwen's muscles relaxed but the pained expression remained in place. His eyes were closed and he took a shuddering breath before he opened them. He placed one foot in front of the other and when he finally rested beside Sarah he looked huge, powerful, and hungry. \n\nSarah thrust her chin out again. \"What are you gonna do?\" Her stare was fierce but her voice was a timid whisper. \"You wo-\"\n\nOwen silenced her but roughly running his fingers over her lips.\n\nShe closed her eyes and licked at his digits, tasting the salt of his skin, breathing in the scent of him; sweet musk baked fresh by the heat of his blood. He assaulted her lips with groping fingers an occasional pad rubbed roughly over her tongue as a digit entered her mouth. She greedily sucked on him, swirling her tongue around the intruder with unashamed relish. \n\n\"Owen.\" Rachel breathed, her voice catching in her throat snapping his name into unintelligible consonant croaks. She tried again. \"Owen.\" More volume but no command to it. He responded anyway, fixing her with his hot stare. \n\n\"Yes, my Queen.\" Because it was so much more fun when everyone played their role.\n\nRachel rolled her hips and splayed her toes wide as chills danced through her nerves. He looked poised, ready to devour at her command, and that massive wall of muscle ready to obey her every whim? Nothing sexier.\n\nHer eyes roamed his body with a fire she could never fake. She trailed her tongue over the ridges of his muscles though she never made contact with him. Her eyes locked on the bobbing weight of his thick cock and the gleam of his pre-cum brought her to the verge of another orgasm. She salivated greedily at the gleaming gem, famished.\n\n\"I have given her an order and she refuses to comply.\" Rachel's mind felt foggy and she rejoiced that her words seemed to make some kind of sense to Owen. To her own ears she could have just asked him for quesadillas and it would all have sounded the same.\n\nOwen looked down at Sarah. \"Do as you're told.\" His voice was deep, the bass more vibration than words.\n\n\"No.\" Sarah breathed. All conviction was gone from her voice, all fire starved for oxygen by the animal intent pouring off Owen's poised frame. \n\nHe didn't ask a second time. He stepped closer his cock grazing against her cheek before pinning between her face and his leg. He gathered her hair up, sweeping with both of his hands as he bent over her. \n\nSarah breathed deep and groaned. The hard length of his erection was a heat against her cheek and the musky scent of his cock mixed deliriously with the scent of Rachel's cum. She could hear herself purring as his grip on her head grew tighter and she knew that soon he would have complete control of her. She took her chance.\n\nSarah turned her face and flicked Owen's dick with her tongue. A wide trail of her saliva coating the underside of that wonderful rod. The catch of Owen's breath almost left her shaking as her cream spilled from her to the floor but she held it together. She lightly scraped her teeth along his skin before capturing his bulbous head between her lips. She forced her head forward, giving him a primal shake as she force fucked her mouth with his steadily throbbing cock. \n\nRachel heard the choked cough as Sarah gagged around Owen's cock and her own slit hummed. She'd felt, since the start, that they were quickly derailing but this was playing with fire.\n\nOwen's eyes darkened and his features softened as Sarah's tongue flicked rapidly against him. He groaned, loud, and felt his fist tighten in her hair. She took him deeper and moaned as his cock jumped in her throat. Through some miracle of discipline that he'd never before possessed, he managed to pull Sarah's mouth from his dick. The thick strand of her spit stretching from the tip of him to her red lips almost pushed him over the edge. \n\nSarah looked at Owen with fire in her eyes. She wanted it all. Use me, her mind screamed. Make me do whatever you want. \"Go on.\" She hissed. \"Try to make me do what she says.\" Her eyes pleaded with him, begging louder than her voice ever could. Please, please, give this to me.\n\n\"No.\" Owen's voice was a low growl as he used her hair to direct her eyes to his. He licked his lips, smiling at her. He put his mouth by her ear. \"Are you sure you want this?\" He asked, punctuating his words with little kisses on her cheek.\n\nAlways a gentleman. \"Yes.\" She whispered back. \n\nHe stood once more, his cock bobbing in front of her face but out of her reach due to the hold he had on her hair. \"You're going to have to pay for your defiance before you can lick her feet.\" He pulled her forward until she had to rest her weight on her hands and knees or risk face-planting. Onward until she had to raise her hips from her heels just to keep her balance. \n\nOwen was now, the wild card. The one she had brought into play without really thinking about what might happen. And the unknown, the sweet mystery, left her vibrating from top to bottom. Owen turned her head to force her to look at Rachel. \n\nThe dark haired girl had her hand between her thighs and was biting her lip so hard the skin was teased white. Her wrist twitched slightly as she, no doubt, worked her aching slit, slow-walking herself to the precipice of a monumental release.\n\n\"Apologize and beg to kiss her feet.\" Owen's voice was commanding but not loud.\n\n\"No.\" Sarah breathed. \n\nOwen knelt beside her, his chest facing her side. One hand holding her firm by her hair. \"What?\"\n\n\"No.\" Sarah repeated, smiling though he couldn't see her. \n\nWhack! Sarah was too shocked to even call out as Owen's massive hand smacked against her bare ass, hard enough to move her forward.\n\nShe growled at the sting singing in her skin. \n\n\"Do you want to try that again?\" Owen asked.\n\nYes. \"I said, No.\" Her voice warbled from the effort of trying to be audible. \n\nWhack! Whack! Twice he struck her with no break between the swats and both times she could feel her juicy pussy splashing against her thighs. Drool spilled from the corner of her mouth as she moaned luxuriously. If he kept this up, she would cum buckets in no time. \n\n\"I must have mis-heard you.\" Owen had put his mouth by her ear again and the sweet smell of his breath left her heart trip-hammering in her chest. She could barely hear him over the rush of blood through her ears.\n\n\"I said,\" she had to breathe several times before she could finish, \"no.\" Her voice shook with excitement.\n\nOwen's hand met her flesh over and over, but he had changed his tactics. Between smacks he rubbed small circles on her ass and his hand moved lower and lower with each spank he delivered. He was cranking her higher and faster, revving her while holding the breaks. He pulled back one last time, aiming carefully before letting it fly.\n\nWith each smack Sarah repeated the word. No. Smack. No. Smack. No. But the resolve in her voice faded exponentially. What started as a defiant spit became a sultry moan by the fifth smack Owen delivered. Her ass buzzed and her puffy lips were spread so wide she dripped directly onto the floor. Until the last smack.\n\nOwen had been watching as Sarah spread her legs farther and farther apart with each collision of his hand on her flesh. He heard the lust in her voice, smelled the scent of her pussy filling the room, and believed he could hear the sound of her cum spurting from her slit. All the while his cock ached and throbbed and he wanted nothing more than to shove it deep into her gaping hole and fuck her until he sprayed deep inside. \n\nIf they had been the only two in the room, he would have. However, he didn't want to leave Rachel out of the game she had started and, to be fair, Sarah still had yet to beg. He watched as his hand followed his directions, the smack cutting through the distance with ease to land. \n\nSarah's voice caught in her throat as her whole body froze. She couldn't even make a sound as the last of the spanking registered. Owen's hand had landed half on her ass, and half clipping her swollen, hungry, completely outrageously soaked cunt. She felt the sting vibrate through her clit followed by the rough brushing of the pad of one of his fingers. And that was all it took.\n\nShe screamed without sound, her face twisted into a mask of pleasure as her body contorted. Owen continued to rub her, bringing her higher, smiling through the shake of her body and the way she jittered beneath his fingers. He still held her by her hair and refused to let her fall even as her pussy gushed, an uncoordinated flow of her cum spraying onto the floor, shattering the quiet where her silent cries had been unable. \n\nAs Sarah's mouth hung open, Owen took advantage and grabbed Rachel's ankle sliding her toes into Sarah's mouth. He returned his hand to Sarah's slit and continued to rub watching intently as she licked and sucked on all she could get of Rachel's toes. \n\nRachel's stilted breath and shocked twitching served only to amp him up more and he repositioned himself so that she could keep up her end of the bargain. She was more than ready and eagerly gripped his cock with her toes, struggling to rub him as her body moved from 'stimulated' to 'overload'. \n\nRachel breath caught in her throat as she tried to manage the sensations curling her body. She worked her foot against Owen's cock as best as she could but the feeling of Sarah's tongue sweeping between her toes left her squealing somewhere between a moan and a scream. \n\n\"Fuck me.\" Sarah's voice was a gasp between licks as she continued to work her tongue against the sensitive digit flexing uncontrollably from her attacks. She wiggled her hips at Owen as she slurped noisily to the backdrop of Rachel groaning with delight. \n\nRachel slid her foot over the tip of Owen's dick, feeling the sticky pre-cum coating her toes before she worked the slimy mix against his shaft with renewed vigor. She felt every jump of his dick against her toes and it left her feeling powerful, sexy, in control; even as she surrendered herself to the onslaught the sensations drowning out her other senses.\n\nOwen pulled on Sarah's hair raising her head and causing Rachel's glistening foot to slide from her mouth. She was delirious, a glazed look coating her eyes as she gave herself over entirely to his direction. Her hips rocked in the air as she fucked herself on a phantom intruder only she could perceive. Owen licked the side of her neck before kissing her, dominating her mouth. \n\nSarah moaned wantonly into the kiss as the rocking of her hips grew more fevered. Owen parted Rachel's thighs and pushed Sarah's face toward the steadily dripping slit. Sarah fought against the movement, pushing against his hand as he moved her closer. She could already taste the succulent mix of Rachel and Owen's cum but she wanted him to work for it. \n\nHe pushed a little harder and she resisted again. \n\n\"You can't make me.\" She hissed through her teeth. She smiled sweetly before looking up into Rachel's eyes. She moved her head closer, giving herself over to Owen's strength. Instead of licking as she so desperately wanted to, she made a show of sniffing watching the way Rachel's mouth hung open at the sight. \"Mmm, she smells good.\" \n\nOwen growled loudly as Sarah's hand rubbed his balls, his sack tightening, threatening to explode with every light touch of her hand. Rachel's toes continued to flex and shift along the length of his shaft and he closed his eyes prepared to give himself over to them. He bit his cheek until the pain renewed his control of himself. He would always get his orgasm, they would make sure of it. He was determined to make sure they had theirs as well.\n\nSarah smiled thinking she had overpowered Owen with her cheeky movements. A tremor wracked her as his grip in her hair strengthened and he once more forced her forward. She offered just enough resistance to make it fun but in no time her lips were flush with the moist heat of Rachel's freshly used pussy. She surrendered and slid her tongue, slick with her saliva over the silky skin tasting the salty sweet mix of Owen's sticky cum and Rachel's delicate nectar. \n\nOwen's cock ached as he watched Sarah's head move vigorously between Rachel's trembling legs. Rachel's eyes were wide and near-panicked as Sarah licked and slurped with greedy abandon.\n\n\"F-f-Fuck!\" Rachel moaned her toes clenching and releasing as she worked her hips against Sarah's captive lips. \"Shit! Owen! Fuck!\" She closed her eyes and clenched her fists as she twisted in her seat. \"Owen.\" An animal moan flowed from her throat. \"Fuck! She has her tongue in me!\" Rachel bucked wildly. \"I can feel her moving it around.\" Her eyes shot wide again. \"She's sucking on me, trying to get your cum. Oh, oh, fuck!\" \n\nPre-cum flowed from the tip of Owen's cock in steady drops and Rachel's frantic foot movements flicked the hot droplets dotting Sarah's back with thick little spots. His balls roiled at the scened he had found himself within and he felt certain that he could not hold out for much longer if things continued. Suddenly Rachel's foot was gone as she wrapped her legs around Sarah's head, her hands locking atop Owen's holding Sarah in place. \n\n\"Fuck. She. Is. A.\" Rachel's hips rocked up and down, her cum shiny on Sarah's face. \"Tease.\" She screamed in frustration as Sarah giggled darkly. \"Spank her! Spank her Owen.\" Rachel's eyes pleaded with Owen. \"Spank her hard until she makes me cum.\" \n\nSarah purred against Rachel's clit and as a momentary silence settled over the room she imagined that Rachel's eyes were closed as she absorbed the feeling. \"Do it!\" Sarah hissed against Rachel's cunt. \"Do it! Spank me, hard.\" \n\nOwen's hand slapped against Sarah's still-red ass. \n\n\"Fuck!\" She groaned. \"Harder.\"\n\nOwen slapped harder, his palm stinging as he made contact.\n\n\"YESSSS!\" Sarah moaned. \"Oh. Yes. More. Harder!\"\n\nOwen slapped her ass three more times, each harder than the last, feeling his cock jump each time she screamed for more. \n\nSarah returned her face to Rachel's slit and slurped the girl's clit into her mouth, swirling her tongue around the head of nerves enjoying the smell, the taste, and the sensation of Rachel's legs tightening around her, holding her tighter. She could feel her own orgasm rushing to crash upon her and Owen's powerful smacks were speeding the pace. She moaned deeply as his hand clipped her throbbing lips and her legs began to shake beneath her. \n\nOwen was breathing hard as he worked his arm, slicing through the air to slap against Sarah's ass. He could feel the splash of her juices each time his hand caught her pussy and though he'd been afraid he might hurt her at first, now he reveled with each of her squealing moans. He began to aim lower on purpose, letting her feel the burn within him with each collision of his hand against her curvy ass. ",
        "Sarah flicked her tongue like mad and was rewarded with a high-pitch scream from Rachel as the girl's orgasm set her faucet to full blast. Sarah bathed her face in the spray, smiling as the fluid sprayed into her mouth spilling over her chin. She lost focus as Owen's hand hit her once more and then she was screaming, begging. At last.\n\n\"Oh fuck, please, please. Owen. Shit. Oh, oh, oh God! Yes. More. More. Please. Don't stop, don't stop. Shitshitshitshit! Fuck. Yes. Yes.\" She looked over her shoulder as Owen continued to do as she asked. \"That's it, fuck. More. Please. Shit, I'm so close, so close.\" She closed her eyes as her brows locked down, pain and pleasure clouding her senses until she was no longer certain what she was saying. \n\nOwen felt like he was going to blow at any moment. The sound of Sarah's voice urging him on leaving him quaking next to her, his heart racing, every urge screaming for him to mount her and cum into her, filling her wet pussy with his hot cum. He swung one final time, his hand smacking solidly on her soaking labia. That was all it took.\n\nSarah screamed his name as her dam broke. She gushed, her orgasm pouring to the floor in a loud spray as she fell forward, her ass still held high as she continued to cum.\n\nOwen locked everything down. He didn't even breathe as he watched Sarah cum harder than he'd ever seen. He didn't move because he knew, given the exquisite pain warping his mind and body, that any slight change would force him over the edge. He could only stare at Sarah. Her arms had given out on her and now she lie on the side of her face as her orgasm soaked the floor, a dark stain swelling in size with every moment.\n\n\"Fuck me, Owen.\" Sarah's voice was a whisper of need.\n\nHe swallowed. His mouth too dry to speak.\n\n\"Please. Fuck me. Take me. Cum inside of me.\" She reached back slowly and spread her slick, red lips open for him.\" She looked up at him. \"This is me begging, Owen. Begging for you. Please. Please cum for me. Let me feel it. I want it.\" She rubbed her clit. \"I need you. I-\"\n\n\"Shhhhhh.\" Owen's breath shuddered through his lips as his big hands clenched by his side. \"If you say anything else I'll cum before I can do anything.\" After a few steadying breaths Owen hefted the length of his cock and rubbed it between the thick lips of her sex. \n\nSarah groaned as Owen pressed into her, the wet tunnel eagerly pulling his cock deeper into her. \"Yesssssss.\" She put her head back on the floor. \"Fuck me. Oh, GOD! Just the feeling of you inside of me is driving me wild.\" She rocked her hips against him. \n\nOwen's hands gripped Sarah's hips as he pulled back. He hissed at the tight, silky grip and the continuous flexing of her muscles around him. This was going to be over quick. He slammed his cock into her, their skin slapping together.\n\nSarah screamed again, her cunt convulsing around him as he pulled back again. \"Harder, faster.\"\n\nOwen held for a moment, his eyes closed for just a second. He opened his eyes and gave himself over to the rush, the sight, the smell, the raw power coursing through his blood. He pulled back, slammed home, pulled back again, pushed himself into her harder. With each slide out Sarah would whimper before screaming in ecstasy as he pounded into her again. \n\nHe moved faster. Hard grunts scraping from his throat as he felt his orgasm rage upon him. It started as a tickle but that didn't last long. From one heartbeat to the next that tickle became a burn. His whole body quaked, his muscles tensed, and his balls were poised to release. \n\nSarah was moaning but he couldn't make it out beyond noise, if there was anything to make out. He could feel his heartbeat like a countdown, marking the moments left before he released his cum into her. \n\n10, 9, 8. \n\nHe pounded into her harder, feeling her ass flex in his palms as he drove his cock into her at a furious pace. The beads of sweat on her back made him thirsty and he went with the desire. Arching over her, never losing his rhythm, he licked his way up her spine, drinking the salty taste of her. He wrapped his arms under her chest lifting her up. With his free hand he moved her hair to the side.\n\n7, 6, 5.\n\nShe was cumming for him. He could feel the clench and release of her orgasm milking his erection, begging for the release contained within him. He felt her breasts heaving against his arm and he knew she was mewling for him and he tingled all over as he raced toward the finale. \n\n4, 3, 2. \n\nThe world spun for a moment and a new image danced in front of his eyes, through his mind. He saw Sarah, reddish blonde hair spilling over her shoulders, naked on her knees in front of him. She had him in her mouth, working her head forward and back as she pulled at her own breasts. His eyes traveled her body until they landed upon the one thing that was different from Sarah as he knew her. Her belly was swollen in that tell-tale way that could only be explained by one thing.\n\n1. \n\nHe leaned forward and bit her on the back of her neck, his teeth holding her but not hurting in the slightest. He pounded forward one last time and held his body locked against hers as his orgasm spilled his seed into her ready and willing womb. He jerked against her, the sight of her pregnant belly still in his mind, driving him higher, his orgasm seemingly unending. He came until he could feel it everywhere.\n\nHis arms shook, his legs ached, his back arched, his teeth clenched, and - to be honest - his ass hurt. He had never before cum so hard that he became aware of his prostate but he was pretty sure that's what this pain was. Still, he sprayed into her.\n\nHe moaned with her and still she milked him and, God save him, he supplied her. He sprayed into her until there was nothing left. He fell out of her and landed on the ground beside her, too spent to even try to catch himself. His cock still stood proud, standing straight, kicking hard.\n\nHe shuddered on the ground, the sensations too much. And still, the image of Sarah, naked, pregnant, and kneeling before him, left him groaning anew. \n\nKaterina blew gently on the toes held before her trying to get the nail polish to dry quick and even. After her shower with Rachel she had returned to the bedroom and had found Jessica curled beneath the blankets. It had only taken a few well-placed kisses to rouse the green-eyed beauty and they had cuddled together eagerly. \n\nThough their bodies were flush and though they were still naked, neither moved to seduce the other. They held each other, hearts beating in a similar rhythm, fingers intertwined, feet overlaying one another. \n\nJessica had broken the silence. \"Is it strange that this feels so good?\" \n\nKaterina had been perplexed. \"What do you mean?\"\n\n\"Well, it just seems that this is too easy. We are all here, all going for the same guy, and yet, no one seems upset.\" \n\nKaterina kept her face turned away from Jessica. \"I guess it just worked out well.\" The words were sour on her tongue and felt hollow to her ears, but she knew she had to say them. Otherwise...\n\n\"If only you believed that.\" Jessica replied softly.\n\n\"What?\"\n\n\"Don't think that just because you are facing away from me that that means I don't know something is up.\" She pulled Kat tighter. \"Do you want to talk about it?\"\n\nKat was quiet for a moment. \"We should do something special for Owen.\" She said at last.\n\n\"Subtle way to avoid my question.\" \n\n\"I know, right?\" \n\nJessica rolled her green eyes, annoyed but making it a point to enjoy every moment of holding her friend close. \"What'd you have in mind?\" \n\nKaterina wiggled in bed, lost in thought, flexing her hands, shaking her hips, moving her feet when the idea finally hit her. \"We should paint our toes for him.\"\n\n\"I just painted mine the other day.\" Jessica replied.\n\n\"So. It'll give us something to do. We can take the paint off and put on a new color.\" \n\n\"I don't know.\" Jessica hedged, not wanting to move let alone let go of her friend.\n\n\"We can also give each other foot massages!\" Katerina offered, her fingers excitedly wiggling against Jessica's hands. \n\nJessica laughed, a throaty giggle which left her feeling silly. \"Okay. Okay. Fine.\" \n\nKaterina purred and nuzzled her face against Jessica's, giving little licks that caused Jessica to laugh again.\n\n\"Better stop or I'm putting the tail back in.\" \n\nKaterina gave her one last lick before sitting up. \"Spoilsport.\" \n\nAnd that was how Katerina came to find herself blowing gently on Jessica's freshly painted toes.\n\n\"Kat?\" A voice called from the doorway.\n\n\"Meow.\" Kat replied on autopilot, too lost in her work to be caught up in dark thoughts. She turned her head to see who had called for her and found Samantha, still naked, clasping her hands in front of her stomach.\n\n\"Can we talk?\"\n\nKaterina nodded her head. \n\nSamantha waited for Katerina to rise from the bed but when the other girl made no move she prompted. \"Somewhere private?\"\n\nKat resisted the urge to roll her eyes as she blew one final time across Jessica's nearly dry nails. \"Sure.\" She rose from her position, stretched extending her arms behind her back thrusting her breasts forward as she moved. \n\nTogether they walked, small bare feet barely making a noise on the floor as they moved. Katerina noticed Samantha nervously chewing her lips, a sight which left Kat's stomach sinking. The guest bedroom was cooler than the master bedroom and the colors seemed to scream Samantha's name. Katerina fought back against the roiling in her stomach but the pain lingered. Owen had designed this room for the blonde haired girl. \n\nFor the longest time they stood in silence, neither making eye-contact, barely making a sound at all. As Katerina opened her mouth Samantha broke the silence. \n\n\"I don't know what to do.\" Her words came out in a rushed sob of confusion. \n\nKaterina was stunned at the honesty, stunned that the catty conversation she'd expected was not coming. \"What do you mean?\" She took a tentative step forward but stopped herself from gaining ground. \n\n\"There are so many things going on right now, so many thoughts in my mind and I don't know what to do.\" Samantha sat on the edge of the bed. \n\nKaterina moved to sit beside her and the close proximity relaxed the sour twisting in her gut. \"What kind of thoughts?\"\n\nSamantha turned her head away and covered her eyes with one hand. \n\nKaterina gently rested her hand on Sam's knee and prompted again. \"What are you thinking about?\" \n\n\"I'm fighting really hard not to be jealous of everyone.\" Samantha's voice was choked with unspilled tears and Katerina admired the girl's strength. \n\n\"Jealous of everyone?\" Kat blinked, trying to understand. She moved her hand in a small circle on Samantha's knee oblivious to the light flutters stirring within her.\n\nSamantha's hands tightened to fists at her sides, relaxed, tightened again. \"You, Jessica, Rachel, and Sarah. I'm jealous of each of you because you have a lifetime of advantage over me when it comes to Owen.\" \n\nKaterina recoiled. This was some of the material she'd been expecting but the possessiveness she'd feared was not present. She'd thought she would be mad when the walls finally broke down but instead, she found herself trying to comfort the girl she feared most of all. \"Why are you jealous of us?\" \n\nSamantha turned to face her and the welled up tears danced in her eyes amplifying the color to a deep pool of heartbreaking beauty. \"What chance do I have with the guy I love, when there are so many more wonderful options?\"\n\nKaterina blinked dumbfounded. Blinked again. Kept blinking trying to make sense of the words her mind was assuring her she had heard. \"What?\" She stammered. \"You're jealous of us?\" She furrowed her brow still fighting for a grasp of understanding. This was nothing she had expected.\n\n\"Owen grew up with you, he grew up with all of you. He's been there through your hurts, your fights, and he has had years to fall in love with each of you.\" The tears flowed now, but Samantha didn't acknowledge them. \"Compared to any one of you he has known me for no time at all.\"\n\n\"But he loves you.\" Katerina tasted a hint of bitter ash on her tongue as the words scorched past her lips. Now her eyes threatened to leak and she stood from the bed and stalked to the closet. In the shadow thrown by the lamp she could make out a thick, dark winter coat and she fingered the pressed lapels. \n\n\"He had sex with me. But now, he is downstairs causing commotion with Rachel and Sarah.\" She spit the words but the anger didn't touch her face. \n\nKaterina didn't know what to say. There were solid points on both sides even if only one side had been spoken aloud. It was clear that Samantha was giving herself to Owen without reservation and through her words, it seemed, she felt that Owen was not so giving. What Katerina also saw was that they, collectively, had created a world in which Owen had been poked and prodded to please them all and he had risen to the call. \"He loves you.\" Katerina repeated.\n\n\"How do you know?\" Samantha's voice was raspy and low. \n\n\"I-\" she swallowed and re-started. \"I know because I see it.\" \n\n\"See what?\" Samantha's eyes had risen to meet Katerina's stare. She was pleading for proof, grasping for it, begging. \n\n\"When I first realized that I was in love with Owen, I was much younger than you'd expect. He didn't begin as a fetish for me. It wasn't something I wanted because it was taboo.\" She gripped the coat in her hands and brought the collar to her nose smelling the fading scent of Owen's shampoo in the rough, woolen fabric. \"It was in his eyes.\" \n\nSamantha remained quiet.\n\n\"The first time I fell off my bike, we were a mile from home. We'd made it to some suburban cul-de-sac and as we were turning everything slipped out from under me and Bam.\" She made a motion like an explosion with her hands. \"There was no reason for gravel to be anywhere around but I remember the scrape bleeding and the little fragmented stones sticking in my skin. I started to cry.\"\n\n\"Owen put you on his bike and took you home?\" Samantha asked after Katerina had fallen silent.\n\n\"No.\" Katerina's brown hair flipped as she shook her head in affirmation of her words. \"No. He knelt down beside me, freed me from my bike, and held me for a few moments until I calmed down.\" She breathed in the scent of the coat once more before moving away from the closet. \"I was still crying because it hurt but Owen didn't treat me like a baby. He brushed away the dirt and rocks and blew on my knee and palms.\"\n\n\"Then,\" Kat continued, \"he asked me if I knew why mom's kisses always made things better. It was such a strange question but I shook my head because I didn't know. He told me, 'It's because mom's kisses have magic in them. You're lucky,' he told me. 'Mom taught me how to use that same magic.' Then he kissed my dirty, torn up, bleeding hands and knee.\" Katerina smiled softly. \"It worked. I felt better. I felt invincible with him around.\"\n\n\"He stood up, held his hand out for me, and pulled me to my feet. He smiled, ruffled my hair, and we climbed back on our bikes and rode home. Before he turned away from me I thought I saw something I couldn't quite understand. I pedaled my bike, keeping up with him, because I needed to see it over and over.\"\n\n\"What was it?\" Samantha asked in a hush.\n\n\"His lips were tinted red with my blood.\" Kat shook her head. \"I couldn't understand why he hadn't wiped it off in disgust but he wore it with pride. It was like he was telling me that no matter what, he would accept me. I almost fell off my bike when he licked his lips and this wild, twisting, flexing tingle raced through the center of me like a lightning bolt circling my stomach.\" Katerina looked at Samantha. \"That one took me a while to figure out.\" \n\nKaterina's face tightened. \"So, when I say to you that I know he loves you, it's because every look I want to see shining in his eyes for me is focused on you.\" Now, her tears fell. \n\nSamantha chewed her lips once more. She had been jealous of these women because she was afraid of losing someone she valued. Now, she knew that each of them felt the same fear, the same jealousy. This understanding moved her in a way she'd never considered. In the time of a breath she found herself pulling Katerina into her arms unconcerned that they were both naked. \n\nKaterina resisted the pull for a moment before relenting and wrapping her arms around Sam. The embrace was warm and tender and Katerina felt herself submitting to the power. Samantha smelled, to her, like cleansing rain and flowers on a warm spring day. Sam was a safe place to be vulnerable. They held each other until Kat's toes stung with cold and she shivered against the blonde. \n\n\"I know what you're afraid of, Katerina.\" Samantha whispered. Katerina tried to pull away again but Sam rubbed her back soothingly. \"You're afraid that I'm going to steal Owen away from you. That you'll lose his love.\" \n\nKaterina shivered again but not from the cold.\n\nSamantha pulled her head away from Katerina's shoulder to look into the girls' eyes. \"I would never take him from you.\" \n\n\"You say that now-\" Katerina started.\n\n\"No. I mean it.\" Samantha kissed Katerina's cheek. \"It may not always be easy for me, but I can't keep the people who love him from him.\"\n\n\"But I'll have to love him as a sister.\" Katerina looked down, dejected.\n\n\"I didn't say that either.\" Now, Katerina looked up. \"It won't always be easy, for any of us, but I see that my love for him doesn't supersede the love that you have for him.\" Samantha kissed her other cheek. \"Or the love that Rachel, Sarah, or Jessica have for him.\" \n\nKaterina felt Samantha's hands rubbing her back and the warmth was welcomed in the room. Samantha's kisses were warm on her skin and with each movement the girl made Katerina could feel their bodies sliding together. She gasped as Samantha's hands dropped to the middle of her back, the movement causing her nipples to glide roughly against Kat's. \n\nKat didn't mean for it to happen, didn't know that she'd let her guard down that much, but the throaty moan that passed over her lips could have only one meaning. There was no covering it up as anything other than a plea for more attention. \n\nA strange thing happened... Samantha moved her hands to Kat's lower back again causing their nipples to grind together. This time, Kat's moan rippled like a purr and she let her eyes close for the briefest of moments. She opened her eyes and felt that she should say something but didn't seem to know how to form words anymore. The foxy stare of those sky gray eyes chased away the need to explain. There was a seductive smile in those eyes that stated Samantha was well aware of what she was doing... And she didn't plan on stopping. \n\n\"Wha-\" Katerina had to take a breath and swallow before she could continue to speak, \"what are you doing?\" Her hips bucked of their own accord and her hands snaked over Sam's shoulders. \n\nSamantha affected a coy smile and replied, \"Isn't it obvious?\"\n\nKaterina muffled her groan with the back of her hand as the tingling between her legs intensified. \"I mean,\" she husked, \"do you really know what you are doing?\" Her toes clenched and unclenched as she fought to stay on her feet.\n\n\"Uh-huh.\" Samantha replied easily. \"I'm going to make you purr.\" \n\nKaterina couldn't quite grasp the turn in the mood but the tension in the air was sparking all around them proclaiming from the clock-tower that a storm is coming. She could feel the lips of her pussy pulsing with lustful heat and a single line of heat on her left thigh told her of her arousal leaking from between those lips. She whimpered in confusion as her body continued to respond. \n\n\"See,\" Samantha's voice was breathy and hot on her skin as she all but danced with Katerina in her arms, waxing and waning like a drunk trying to stand, \"you say you love Owen and it isn't about him being your brother. But, I know that plays in to it.\"",
        "\"I do-\" Katerina's reply was soft and pliant. \n\n\"I know you love him. I also know the thought of having your brother rubbing his thick cock between your legs made you feel hot, dirty, and wild. You thought it wasn't about the taboo but you loved knowing your brother was fucking you. Pounding your tight, sexy pussy. And when he came...\" \n\nKaterina's knees buckled but she managed to hold herself up long enough to regain her balance.\n\n\"All you could think of was your brother spraying his cum,\"\n\nA line of heat on her right thigh made Katerina groan.\n\n\"thick, hot ropes,\"\n\nShe buckled again but Samantha held her up, moving her mouth closer, hissing the words in Katerina's ear.\n\n\"splashing inside you, filling your pussy to the brim, spilling over, flowing from you,\"\n\nKaterina dug her nails into Samantha's shoulders as her hips moved seeking collision with something, anything.\n\n\"as his dick kicked hard with each release. And still...\"\n\nKaterina's eyes pleaded but she knew Samantha wouldn't relent.\n\n\"he kept...\"\n\nKaterina shuddered feeling herself losing control.\n\n\"right on pounding you. You could hear it, you know?\"\n\nKaterina's eyes were wide, more pleading than she had ever felt as she silently screamed, begging for Samantha not to finish, not to push her over the edge.\n\n\"The liquid slosh and suck of him slamming his dick into your overflowing pussy. The mix of your cum and his splashing out with each thrust.\"\n\nKaterina slid to her knees on the floor, thighs together, as the dam within her broke. She didn't orgasm and that had been Samantha's intentions. Instead, the blonde had managed to get her so worked up that Katerina had soaked her thighs down to her knees. She could feel the mix clinging to her legs, could smell herself on the air, and knew that she wouldn't leave this room until the demanding tingle aching within her was satiated. \n\nKaterina, with gasping breaths, asked, \"Why do you want to make me purr?\"\n\nSamantha leaned in and licked Katerina's pouty lips. \"Because, I liked watching Owen fuck you.\" She pulled roughly at her nipples and shook from the pleasure. \"I feel like I shouldn't have liked it. That I should have found it disgusting or wrong, but as he pumped into you, I came. Wetter than ever.\" \n\nKaterina smiled, feeling some of her worry dissipate. \"So, you aren't going to take him away?\"\n\n\"No.\" Samantha replied instantly.\n\n\"And this?\"\n\n\"This is about me. If I fuck you, lick you, make you scream, then I will worry less about you and Owen.\" Samantha explained easily.\n\nKaterina felt some of her composure return but the ache of her denied orgasm lingered. \"So, your plan is to make me purr?\"\n\n\"Uh-huh.\" Samantha replied easily.\n\n\"And,\" Katerina rose shakily to her feet, \"how do you plan to do that?\"\n\n\"Well, step one was to get you as wet as possible.\" She sniffed the air bringing a blush to Katerina's cheeks. \"That's definitely not my scent.\" \n\n\"What's that supposed to mean?\"\n\nSamantha kissed Katerina's cheek. \"It means my mouth is watering.\" \n\nKaterina swallowed again. \"That doesn't prove I'm wet.\" \n\nSamantha lowered her hand. \"You're right. But I know a way to check.\"\n\nKaterina tried to keep her breathing even as Samantha's had traveled between her breasts, down her stomach to the small area where her pubic hair would have been. With every inch those delicate fingers covered she could feel a hard, thumping pulse in her core, crying out for more of the contact. With the tip of one finger Samantha touched the top of Katerina's slit before making a tsking noise in her mouth and moving her hand to The top of Katerina's thigh.\n\nKat groaned, loud. She couldn't fight it. She had been holding herself still, hoping the contact would come but Samantha wanted to tease her further. \n\n\"Oh.\" Samantha sighed passionately as she trailed her fingers through the thick mess on Katerina's legs. \"Wow.\" Samantha's breathing increased, she was swallowing and rasping as her fingers moved in wide swoops through the cool wet release.\n\nKaterina blushed again. \"Is that good?\"\n\nSamantha stopped moving. \"Good?\" She whispered the word like it was something she hadn't even considered. She trailed her fingers down farther. \"My God! It goes all the way to your knees.\" \n\nKaterina didn't know what to make of it.\n\nSamantha leaned down and quickly swiped her tongue along Katerina's leg making the brunette jump. She did it again, licking quickly, thick swipes of her tongue which left Samantha groaning as she tasted. \n\n\"Fuck.\" Katerina jumped as Samantha nipped her with her teeth before sucking Katerina's thigh softly. \n\n\"Sorry.\" Samantha was crouched beside Katerina and though they were almost eye-to-eye Katerina felt a large shift in power. Samantha seemed feral, stalking like a feline who had found something tasty to devour. Katerina swallowed.\n\nAttempting to recover even footing she said, \"Is that supposed to make me purr? You licking me feels nice, but...\" \n\n\"No.\" Samantha replied easily, licking her fingers without breaking eye-contact. She wanted Katerina to see what she was doing. \"No, it wouldn't be that easy. Owen has fucked you nice and hard and it will be hard for me to compete with something you've always wanted on a purely physical level. I had to do some thinking to find my path.\" \n\n\"Yeah?\" Katerina tried not to look surprised that Samantha had already considered the Owen factor. \n\n\"Yep. Which is what made me consider your words carefully.\"\n\n\"And?\" Katerina asked breathlessly. \n\n\"And...\" Samantha winked, sliding her hands behind Katerina's back to weave into her hair. She moved her mouth close to Katerina's ear.\n\nKaterina was beginning to like feeling like prey. She usually didn't allow herself to be the vulnerable one, unless she was with Rachel in private, but she wanted to know where this would take her. She could feel the heat radiating from Samantha's skin and the scent of sex and Samantha's natural scent mixed to her liking. \n\n\"I think I just found out something about my 'big sister' that she would hate for mom to know.\"\n\nKaterina's eyes slammed shut as she tried to fight her body's reaction to the words. She'd never told anyone, not even Rachel, that she had fantasized about having a sister play with her. \"N-n-no.\" Katerina whimpered but even she was unconvinced by the tone of her voice. Nothing like bucking hips and clenched toes to give you away.\n\n\"Yes.\" Samantha hissed pulling lightly on Katerina's hair. \"Oh, yes. I know all my sister's nasty little secrets.\" \n\nKaterina shook her head lightly as Samantha trailed her tongue against the side of Katerina's neck. \n\n\"Yes.\" Samantha affirmed nodding her head. \"I thought it was different that my 'big sister' would put her hand between her legs while she peed. I thought, 'maybe she is just not feeling well and it was an accident'.\" \n\nKaterina's hips rolled and her thighs were squeezed together trying to get pressure where she so desperately needed it.\n\n\"But your hand started to move. I could hear the splash of your pee on your skin but I didn't understand fully until I saw that telltale look on your face. The sweet twist of your mouth as that silent O formed. You shook like a flower in the breeze.\" \n\n\"I also watched what you did that night.\" \n\nKaterina was losing herself to the story. In her mind she registered shame, for some reason, that her secret had been found out but in this moment her need far outweighed the fear. \n\n\"I had planned on scaring you so I hid in your closet.\" Samantha freed one of her hands from Katerina's hair and began trailing her fingers in patters over the girl's heaving chest, always heading lower. \"You took a little while, probably playing again, and I found the pair of panties you'd been wearing.\"\n\nKaterina's eyes locked on Samantha's, begging but she didn't know what she wanted.\n\n\"They were soaked and I would have been disgusted, but, what can I say, I liked the way you smelled.\"\n\n\"You smelled them?\" Katerina asked shakily. Resigning herself to play the game she wanted.\n\n\"Uh-huh.\" Samantha smile, moving to let her lips caress Katerina's. \"I did something else, too.\" Samantha's voice dropped to a whisper. \n\n\"What?\" Katerina asked. \n\n\"I pressed the lacy spot where your sweet pussy had to have rested...\"\n\n\"Yes?\"\n\n\"Right to my tongue and licked until I could no longer taste you.\" \n\nKaterina shook again as if she'd been struck by lightning. \n\n\"I was so caught up in the taste that I didn't even hear you come back into the room. Lucky us.\" Samantha's hand had reached Katerina's stomach and she lovingly traced simple shapes around Kat's navel, dropping low before rising again. \"I watched as she pulled that t-shirt you sleep in every night over your head. I wasn't too shocked you were naked, you used to sleep that way when we were kids.\"\n\nSamantha's fingers had reached Katerina's pubic mound and while the tip of her middle finger rested motionless at the top of Katerina's slit, the other digits moved in lazy lines while Samantha talked. \n\n\"I expected you to get under the blankets but you didn't. You rested there, on your knees, before grabbing your pillow and sliding it between your legs. My mouth went dry as I watched you slowly rocking your hips and rubbing your breasts, tossing your head, sucking on the tip of one finger. I gotta say, I was ready to play at that point.\"\n\n\"Did you?\" Katerina whimpered.\n\nSamantha smiled and dropped her hand lower barely brushing her fingers over the sensitive lips spread and begging between Kat's legs. \n\n\"I could feel myself getting wet, soaking my own panties, as I watched you pull at your nipples as your hips began to move faster. You started moaning quietly, flipping your hair as your rode yourself harder. I slipped my hand into my panties, feeling guilty but unable to stop.\" \n\nKaterina's hips shook spasmodically and she gave way to her desire. \"Please, please, please, please.\" She quietly begged.\n\nSamantha smiled and lowered her hand, sliding her fingers between Katerina's drenched lips. At the contact Katerina made a sound of pain and hunger. She went supernaturally still, her breath locked in her chest like she was afraid if she made a noise Samantha would change her mind. Samantha worked her fingers but she knew she wasn't giving Katerina everything she wanted. \n\n\"I felt bad because I liked the way you looked. Your hips were rolling and I could hear the little gasps as you fought against the wave washing over you. I slid my fingers between my lips, rubbing my clit to the same pace my dirty sister worked herself on her pillow.\"\n\nKaterina worked her hips gently, testing the waters to see if Samantha would allow the action. \n\n\"I thought you would cum on your pillow but you stopped without anything remotely like an orgasm. I was disappointed until you moved to your back, spreading your legs wide. It felt like you knew I was watching and you wanted me to see everything.\" \n\n\"I watched you put your fingers in your slit and begin to rub yourself, using your free hand to cover your mouth as your hips thrust up. I could hear how wet I was, the sound of my arousal sloshing inside of me, dripping past my fingers onto my legs or into my panties.\" \n\n\"I almost screamed for you when you arched off the bed, body tense, toes splayed, biting on your fingers. You looked so sexy.\" Samantha leaned in and licked Katerina's nipples. \"My. Big. Sis.\" Samantha looked down. \"Oh, my God!\" She gasped. \n\n\"What?\" Katerina asked.\n\n\"I can't believe I'm fingering my big sister.\" She put a finger to Katerina's opening and giggled. \"Fuck! Your sexy little pussy is trying to pull my finger in deeper.\" She moved her finger a little more, easing it just barely past the opening. Her breathing quickened as she slowly raised the digit to her mouth. She didn't look at Katerina. She put the tip in her mouth. She shook silently and took a deep breath. \"Fuck.\" \n\nKaterina whimpered again. \"Please.\" Samantha smiled and put her hand back where it had been, her fingers teasing away as she spoke. \n\n\"I didn't think I would have a shot at getting what I wanted. Tasting my sister, making her scream for me, feeling her against me. But that would never happen. She wasn't like me. At least, I didn't think so until you collapsed back on the bed, spent, and whispered his name before going to sleep.\" Samantha looked into Katerina's eyes as she pushed her finger in deeper. \"That's when I came. I thought I'd peed myself.\" Katerina bucked against her hand. \"Someone likes that idea.\"\n\n\"Imagine my surprise when I get home on the night that mom and dad are out of town, walking toward the bathroom planning to take a shower, when suddenly I hear pretty sultry, familiar moaning.\" Samantha worked her hand faster feeling Katerina's orgasm building as sure as if it were her own. \n\n\"I peek in the crack of the door of my brother's room expecting to find my sister getting off on his bed, alone. Instead, I see brother dearest bent over my sexy sister, pounding away at her until he slams into her and shudders. I didn't need to see your dripping pussy to know what he came inside of you.\"\n\nKaterina clenched her thighs against Samantha's hand a stream of quickly said curse words passing her lips. Samantha smiled imagining the look of pure desperation to follow.\n\n\"That's when I knew I had you.\" And with these words she pulled her hand from Katerina's sex. \n\nKaterina's eyes flew wide, her legs scissored, and she reached for Samantha's arms trying to pull the girl back. \"No. Don't stop!\" She looked close to tears as Samantha stood up. She held her hand out to help Katerina to her feet. \n\n\"I'm not done with you.\" Samantha promised, kissing Katerina fully on the lips. \"I just don't want you to cum yet.\" \n\nKaterina took the offered hand. \"I don't know how much more of this I can take.\" She complained.\n\n\"Good.\" Samantha teased. \"I want you to cum hard when it's time.\" She worked her knee between Kat's legs as she slid her tongue into Katerina's mouth. \"Kat?\"\n\n\"Yes?\" Katerina replied.\n\n\"No, pretty kitty noises for your baby sister?\" \n\nKaterina's breath heaved as she realized the game was still on. \"Meow.\" She replied softly.\n\nSamantha giggled. \"Lie down.\" She gently pushed on Katerina's shoulder smiling as the girl allowed herself to fall back onto the mattress. Samantha climbed onto the bed beside the brunette and swung her legs to straddle Kat's midsection. \n\n\"Now what?\" Katerina asked in what she hoped was a seductive tone.\n\n\"Just wait.\" Samantha said, closing her eyes. \"I've never done this before and I want to get it right.\" \n\nKaterina submitted, thinking that sister Samantha must still be a virgin. She waited as she was told, hoping that the game would continue soon. She jumped when the first splash of heat hit her. A gasp escaping her throat as shock and delight registered. She propped herself up, watching something she'd never thought she would see.\n\nSamantha kept her eyes closed and took a steadying breath as she held herself, poised over Kat's stomach. She exhaled slowly as the flow started once more. \n\nKaterina moaned, unashamed as the hot spray coursed her skin, scorching her in the most delightful way. She knew, first hand how difficult it could be to take a chance on something new, to put yourself out there for another person with no idea of how it would end. It had taken a lot for Samantha to do this so Katerina let her enjoyment show. \n\nSamantha moved herself as she continued to pee, taking care to keep the stream on Katerina as she moved lower. She wanted Katerina to feel this as intensely as possible and to her that meant only one thing. \n\nKaterina's hands latched on to Samantha's legs as the stream splashed against her stomach before moving lower to run in tickling rivulets over Katerina's clit and her lips. It was a liquid fire kissing her skin, baptizing her but leaving her unburnt. She trembled more forcefully but her orgasm remained just out of her reach. \n\nAs the flow reduced to nothing but spare drops clinging to her skin, Samantha didn't think of the messy bed choosing to focus on the ecstatic smile curling the lips of the stunning brunette. She looked down at herself. \"It looks like little sis has made a mess.\" She gingerly touched one of her droplet covered lips. \"I still have it on me.\" She looked at her slick fingers. \n\nKaterina's eyes locked on the digits. Samantha noticed. Slowly those fingers moved toward Katerina's lips and in the moment before contact was made Katerina closed her eyes softly. \n\nSamantha was walking a super thin line. Simultaneously engaging in activities she'd never attempted before it was easy to say her heart was hammering with more fear than excitement. She wanted this to be enjoyable for Katerina but she had no experience with role playing and no experience with any pee play. She hoped that her little sister persona was coming across flirtatious but feared she was being mean. \n\n\"Maybe I should wash my ha-\" \n\nKaterina took the digits into her mouth and sucked greedily, moaning in her throat at the acrid taste reveling in the joy of not feeling ashamed of her desires. Samantha had somehow managed to create a safe place for Katerina to be herself. Something she'd previously only been able to feel with Rachel. \n\nSamantha left her fingers in Katerina's mouth her cheeks burning as her core flittered from the feelings of that soft tongue fluttering. \"Do you like that?\" For some reason she was having trouble controlling the tone of her voice. \n\n\"Yes.\" Katerina replied speaking around the fingers in her mouth. \n\n\"You're tongue tickl-\" \n\nKaterina moved quickly, more quickly than Samantha anticipated. The fingers flashed from her mouth as she sat up and attacked Samantha's slit with her mouth. She sucked at the fleshy lips, her tongue sweeping mercilessly over Samantha's pussy cleaning away any remaining drops of their moment together. \n\nSamantha's moans bubbled in a stutter of stolen breaths and half-uttered sounds as her body fell to the assault of Katerina's thirst. She tried to hold her composure but she'd never been devoured like this and her release crashed down on her sweeping her into a land where coherent thought was not required. She screamed as her hands locked in Katerina's hair. \n\nKaterina didn't let her drop in a free-fall and Samantha returned to the land of the conscious with the feather touches of Katerina's tongue dancing softly against her clit, her warm breath the only blanket Samantha needed. \n\n\"Mmmmm.\" Katerina moaned. \"Did my dirty little sister like that?\" Katerina's smile was a clear sign that she was having a great time.\n\n\"That,\" Samantha breathed, \"was amazing.\" She twirled her fingers in Kat's hair. \"I hope I didn't come across as mean.\"\n\n\"Not at all.\" Katerina kissed Samantha's wrist below her palm. \"Does that question mean that we are done playing?\"\n\nSamantha smile, flexing her legs against Kat's shoulders. \"Nope, just a half-time check-in.\" \n\n\"Good.\" Katerina replied. For fun she flicked her tongue against Samantha's still over-stimulated clit and giggled as the blonde jumped and tried to push Kat's head away.\n\n\"I didn't expect to cum like that.\" \n\n\"I know!\" Katerina clearly had enjoyed the experience. \"I almost came with you.\" \n\n\"You didn't?\" \n\nKaterina shook her head. \"I guess I got caught up in watching you.\" Katerina rolled her hips aggressively against the bed as a pained expression caught her face. \n\nSamantha slipped back into her character. \"Are you okay, sis?\" \n\nKaterina whimpered looking into Samantha's eyes. \n\n\"It looks like you could use some attention.\" Samantha's tone dripped like syrup. \n\n\"Yes!\" Katerina's moan was long and drawn out. \n\nIt was the work of a moment to switch places and Samantha felt different as she lay between Katerina's legs in the middle of a large wet spot she had created. She'd imagined that she would have found it at least a little dirty, but knowing what it had meant to Katerina made the space feel almost religious; a deeper connection that defied explanation.",
        "The sound of Katerina reacting to Samantha's tongue was pitch-perfect mood music and Samantha made sure the tempo was right where it needed to be. She could feel the wind-up of Katerina's body and she smiled knowing she was the one responsible. She upped the pace and felt tingles trail down her back as Katerina's toes clenched against her butt. The brunette was close and the time had come.\n\nSamantha pulled her mouth away.\n\n\"Don't stop! No!\" Katerina groaned clenching her thighs against Samantha's head.\n\n\"Mwheweffff.\" Samantha's voice was muffled, muted by Kat's thighs. \n\nKaterina released the girl to hear what she was saying. Brilliant gray eyes peered up at her from between her legs.\n\n\"Purr for me.\" Samantha ordered with a smile. She put her tongue back to work not bothering to wait, she knew Katerina would give her what she wanted.\n\nKaterina tilted her head back as her body raced once more for the edge. She purred for all she was worth as Samantha's tongue swirled and flicked with all Samantha could muster. Katerina saw stars.\n\nSamantha smiled as those powerful legs clenched around her once more and above it all she could just make out the sound of Katerina's rippling moan, the most erotic purr she'd ever heard. \n\nCoasting Katerina down from her release Samantha had found that she was capable of so much more than petty jealousy. She'd found that she could motivate herself through love and, with love, accomplish things she'd never dreamed. She emerged from between Katerina's legs, her face glistening and sticky, with a smile she hoped to wear again and again.\n\n\"I told you I would make you purr.\" She crawled up Katerina's body and snuggled in close.\n\n\"Thank you.\" Katerina whispered softly.\n\nA kiss on her shoulder was all the reply she needed. \n\nThere was a soft knock on the door before it opened slowly. Jessica smiled at the entwined pair. \"Sounds like you guys had a good time.\" Jessica pulled her lower lip between her teeth. \"Rachel and Sarah have put Owen in the shower and they, and I, think that we have some things to discuss before he gets out.\" \n\nSamantha and Katerina kissed, looked back to Jessica, and climbed from the bed. \n\nTo Be Continued. Don't forget to vote and comment."
    ],
    "authorname": "BenevolentDCC",
    "tags": [
        "incest",
        "oral",
        "group",
        "pee",
        "defloration",
        "contest",
        "squirt",
        "creampie",
        "breeding",
        "impregnation"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/game-night-pt-05"
}