{
    "title": "New Girl in Town Pt. 16",
    "pages": [
        " Thank you all for your patience. I wanted this last chapter to be the best it could be. I hope I pulled it off.\n\nHuge thanks again to  Devir Ginator  for editing and story idea help. It was invaluable!\n\nTo  Jessica  : You've made me a better writer and a better person and I thank you for everything.  Tyler , keep taking great care of our girl!\n\nMany thanks as well to  NycReader  for the amazing comments and for your help.\n\nLastly, thank you to all you readers. Your comments, feedback and votes really made this series a joy to write!\n\nNew Girl in Town ends here but these characters will return in the future. They're too fun to leave alone for long. \n\n****\n\n\"What are you doing?\" Jessica confusingly whispers to Jake as Jamie looks over towards them.\n\n\"It looks like Jamie needs a ride.\" Jake replies.\n\n\"Jake?\" Both Jamie and Jessica say at the same time.\n\n\"It's fine.\" Jake assures Jessica as he waves Jamie over.\n\n\"I guess you saw all that, huh?\" Jamie asks as he kneels down to look into the passenger window.\n\n\"Kind of hard to miss.\" Jake answers him. \"We didn't hear what started it but...\"\n\n\"Just Patrick being Patrick,\" Jamie sighs. \"I should be used to it by now but I'm just done with it, ya know?\"\n\n\"I get that.\" Jake answers.\n\n\"Yeah, if anyone would, it'd be you.\" Jamie nods.\n\nJake makes a show of looking around the mostly empty parking lot \n\n\"Looks like you could use a ride home.\" He states.\n\n\"I can just call my dad, Jake. It's fine. I don't want to uh... upset anybody.\" He answers as he looks across Jake at the unhappy look on Jessica's face.\n\n\"Come on and hop in, Jamie.\" Jake insists. \"You're on our way. It won't be a problem.\"\n\nJamie looks perplexed at the suggestion then glances over at Jessica whose frown has deepened.\n\n\"That's probably not a great idea, Jake.\" He states.\n\n\"Maybe not but we aren't going to leave you here so let me hop in the back.\" Jake states pulling the handle.\n\nJamie steps out of the way as Jake jumps out, pulls the seat up and hops into the back before either Jamie or Jessica can stop him.\n\n\"Jessica, is this okay with you?\" He asks standing with the door ajar.\n\n\"Not really but Jake's insisting so hop in and let's get this over with,\" She answers him.\n\nHe nods and maneuvers his larger frame into the passenger seat of Jessica's car pulling the door closed with a slight thunk.\n\n\"Jess, just head out like we're going to your house,\" Jake instructs her as he tries to get comfortable in the small backseat. \"Wow, there really is no backseat in this thing!\"\n\n\"You're not just now figuring that out are you, Jake?\" Jamie chuckles but stops when Jessica makes an aggravated noise with her nose.\n\n\"Thanks for this, Jessica,\" He says instead. \"My dad would have had to leave work to come pick me up. It would take him an hour to get here.\"\n\n\"That would have sucked,\" She answers in a way that tells him that she would have been glad that it sucked.\n\nHe glances over his shoulder at Jake who is still moving around to try and get comfortable. Jake finally slides behind Jessica then stretches his legs out on the seat behind Jamie.\n\n\"You cool now, Jake?\" Jamie asks.\n\n\"I'll never be that,\" Jake laughs. \"I am a little more comfortable though.\"\n\n\"Well it was cool of you to put the team first and tell me about the Newport quarterback.\" Jamie states then looks at Jessica. \"Jake told me that if I went for the ball on that last play, I could possibly win us the game.\"\n\n\"And you did win it for us,\" Jake chimes in.\n\n\"It wouldn't have been that close if Jake had been put in the game over Patrick,\" Jessica tells Jamie.\n\n\"No argument from me on that. Patrick was nothing but a whiny asshole at the practices that you missed, Jake.\" Jamie tells them. \"He's been like that for awhile now honestly but it got worse when you weren't around. He really wanted to make sure that Yates wasn't going to play you this week.\"\n\n\"He's pathetic,\" Jessica comments as she drives the darkened streets.\n\n\"You can say that again.\" Jamie shares.\n\n\"What were you two arguing about?\" Jake asks then taps Jessica's shoulder. \"Take a left up ahead.\"\n\nShe nods and flips on her signal as she slows to make the turn.\n\n\"He was mad about that, mad about me talking to a recruiter from Florida State, mad that I told the guy that it was you that gave me the advice that won the game and not him,\" Jamie answers.\n\n\"Wait, you told a recruiter that Jake told you that?\" Jessica asks surprised. \"Why would you do that?\" \n\n\"I'm kind of wondering the same, Jamie,\" Jake comments then tells Jessica to make another left turn.\n\n\"It's up here on the right.\" Jamie tells her pointing to a trailer park that sits just off the road. \"I told the recruiter that because it was the truth and hell... I owe you, Jake.\"\n\n\"Not that I'm not glad to hear this, Jamie, but what exactly brought this change of heart on?\" Jessica asks.\n\n\"My place is the one straight ahead,\" He tells her before answering her question. \"A lot of little things started to add up. Patrick and I went to this party and I met this girl. We were hitting it off, you know? She's really cute and funny but Patrick got pissed because he was laughed at by the girl he was with and made me leave. I didn't even get a chance to get anything but her first name. Marie. Super cute name, right? Anyway, I walked away from Patrick after that but realized that I didn't have any friends left. Neither did he so we just drifted back to each other for lack of better options.\"\n\n\"He got laughed at, huh?\" Jessica can't help but giggle.\n\nJamie laughs himself. \"Yeah, he charmed his way into some girl's pants but when he was done even faster than his infamous two minutes, she laughed at him. He started complaining that you two were the reason for his problems and got even more pissed when I told him that instead of whining about it that he should have listened to what you told him and change his ways.\"\n\n\"Yeah, I can't see that going over well with Patrick.\" Jake laughs.\n\n\"It really didn't but it's the truth. I appreciate the ride, you guys.\" He tells them as he opens the door and climbs out.\n\n\"Not a problem.\" Jake answers as he climbs out of the backseat. \"We'll see you Monday.\"\n\n\"Yeah, see you Monday and thanks again for the ride, Jessica. It means a lot and I love your car!\" Jamie says giving her a nod before heading for his front door.\n\nJessica waits until Jamie open his front door before looking over at Jake. \n\n\"Do you want to explain to me why in the hell we just did that?\" She asks as she puts her car in reverse.\n\n\"We couldn't just leave him standing there, could we?\" Jake asks.\n\n\"We absolutely could, Jake,\" Jessica states. \"He hurt you. You were lucky that you weren't hurt worse by how he slammed you into the ground. Leaving him standing alone in the school parking lot for an hour is the least he deserves from us. I think we need to have your head checked out because those punches you took seemed to have rattled something loose. You don't have another concussion, do you?\"\n\n\"I'm not concussed, Jess.\" Jake tells her. \"Jamie and I will never be friends, he's done too much over the years for that but if we don't have to be enemies any more that's fine with me. I'm done with all that crap.\"\n\n\"And if Patrick isn't done with it?\" She asks as she heads for her house.\n\n\"Well, I've shown that I can take a punch.\" Jake laughs pointing towards the cut on his cheek. \"I figure I can take another if I have to.\"\n\n\"If he throws a punch at you, I'll make him wish that I had hit him with that spike earlier this year.\" Jessica states with a grin. \"No one messes with my man!\"\n\n\"No one, huh?\" Jake asks as he reaches over, placing his hand on her jean clad thigh.\n\n\"Well all the Misfits get a pass of course.\" Jessica laughs. \"Oh and Antoine and Des get to smack you around at practice. Ms. Simpson has a lifetime pass and Coach Pennington too.\"\n\n\"You're naming a lot of people here, Jess.\" Jake points.\n\n\"Sarah and me, of course,\" Jessica continues unabated. \"My dad, your dad, Mr. Fishel, Mrs. Smitty...\"\n\nJessica keeps naming names causing Jake to laugh as they drive on towards his house.\n\n****\n\n Saturday, November 25 \n\n\"So you and Jake are set for tonight right, Jess?\" Staci asks as she and Jessica are arranging the snacks on Staci's dining room table.\n\nIt's mid-afternoon, just a few hours away from the victory party being thrown for Jessica's team at Staci's house. Most of the Misfits are there helping get everything set up for the nights festivities. Jessica, Staci and Marybeth are setting up the dining room table while Roxie, C.C. and Jody are in the kitchen cooking.\n\n\"We talked to both my mom and his after I took him home last night,\" Jessica answers her. \"They called your mom so we are staying the night tonight which you should already know about since my overnight bag is upstairs.\"\n\n\"True but it's fun to hear you say you and Jake are staying the night.\" Staci laughs as she places a bowl on the table to be filled with chips later. \"Has Shelly checked in with you?\" \n\n\"Texted me this morning,\" Jessica answers. \"She and Tom had a, and I'm quoting here, Great night!\"\n\n\"Ooo, go Shell!\" Marybeth enthuses as she places paper plates and napkins.\n\n\"You are one to talk, Miss Ejaculations,\" Staci giggles.\n\nMarybeth flushes red but giggles just the same.\n\n\"I cannot be held responsible for that! I was under duress when I sent that.\" Marybeth states.\n\n\"I think that you meant to say that you were under Bobby at the time, Marybeth,\" Jessica giggles.\n\n\"Well Jake was behind you at the time so you have no room to talk. Or was it because your mouth was full of Jake at the time, I forget?\" Staci teases her.\n\n\"Congrats on that by the way, Jess!\" Marybeth tells her. \"It was great, right?\"\n\n\"So great!\" Jessica agrees excitedly. \"I got super turned on when I saw the affect that it had on him.\"\n\n\"He did that cute little face that's half grateful and half not believing that it's actually happening, right? Ray does that and it's so cute!\" Staci laughs.\n\n\"That was kind of Bobby's look.\" Marybeth answers. \"He looked so confused but then so happy at the same time.\"\n\n\"That's Bobby's usual look, Marybeth.\" Roxie says as she joins them at the table. \"I imagine Jake will look much the same when he sees Jess here in her swimsuit. You did bring it, didn't you?\"\n\n\"It's in my bag upstairs but isn't it too cold for the hot tub tonight? And yes, I know that it's hot in said hot tub but we do have to get out eventually.\" Jessica states.\n\n\"I can't imagine pruney Jess looking all sexy so I agree that you do have to get out of the tub at some point.\" Roxie giggles.\n\n\"She is not, I assure you.\" Jessica laughs. \n\n\"We'll have robes and a heater so you don't get that cold when you get out.\" Staci assures her then turns to Roxie. \"What are you cooking up in the kitchen, Foxy Roxie? It smells really yummy!\"\n\n\"I've got a batch of my peanut butter cookies that Jake loves so much in the oven. Consider it my little bit of revenge on his butt. Making him smell them baking all day but not being able to get even a crumb.\" Roxie says. \"What in the hell was he thinking getting friendly with Jamie? Jamie of all people!\"\n\n\"I made the same argument, Rox. Well, sans yummy smelling cookies obviously but still.\" Staci tells her.\n\n\"Jake made it perfectly clear to me that he'll never be friends with Jamie.\" Jessica states. \"Jake told me that all the crap Jamie did to you was reason enough to not be his friend but you know how he is, Roxie.\"\n\n\"Nice to a fault our Jake,\" Roxie sighs. \"I know, Jess, and that's why we all love the moron.\"\n\n\"That we do, Roxie.\" Jessica agrees as she looks out the sliding glass door to where Jake, Ray, Javier and Bobby are getting the outside ready for the party.\n\n\"You love him because he makes you scream his name, naughty Jess.\" Staci teases.\n\n\"TMI, Staci!\" Roxie laughs.\n\n\"You love it!\" Staci counters giving Roxie a bump with her hip.\n\n\"I don't know, Rox, I think that it's just the right amount of info,\" Marybeth giggles.\n\n\"I love the big goof for much more than that, Staci, and you know it!\" Jessica exclaims then with a sly smile adds, \"His ability to make me scream his name is just a bonus. A wonderfully, amazing bonus.\"\n\n****\n\n\"Yeah, I brought my swim trunks.\" Jake answers Ray's question as he places another piece of wood on the chopping block. \"Won't it be too cold for that after the party though? I mean I am chopping firewood here, Ray.\"\n\n\"The keyword in hot tub is  hot , Jake.\" Ray laughs.\n\nJake and Ray had wrangled Javier into helping them chop and collect more wood for the fire pit leaving Bobby to arrange the tables. Jake brings down the axe, cleaving the piece of wood in two then Javier adds it to the small pile they have made.\n\n\"No kidding,\" Jake tells him. \"I just know that at some point you have to get out of the hot tub. It's a little far away from the fire pit.\"\n\n\"Staci's mom has got this portable heater that we lay our towels near so they're nice and warm when we get out of the tub.\" Ray tells him. \"Besides, warming back up after you get out is half the fun. Sounds good, right?\"\n\n\"Sounds like a fire hazard.\" Javier answers.\n\n\"What Javier said.\" Jake laughs.\n\n\"It's safe!\" Ray argues then smirks. \"Safer than giving Jamie a ride home I might add. What in the hell were you thinking?\"\n\n\"What Ray said,\" Javier echoes with a chuckle.\n\n\"Honestly, I don't really know.\" Jake answers. \"It just seemed like the right thing to do and he did say that he talked me up to a recruiter from Florida State.\"\n\n\"And you believe him?\" Javier asks.\n\n\"He could have lied about that I suppose but he was already in the car when he told us. I can't see any reason he'd lie about it.\" Jake answers.\n\n\"That makes sense but it doesn't really matter does it?\" Ray asks.\n\n\"Not really,\" Jake answers. \"For how he treated Roxie alone is reason enough for me to...\"\n\nRay's laughter interrupts him.\n\n\"Dude, I know that you're never gonna be friends with Jamie. That asshole hit you with a cheap shot and damn near broke your shoulder!\"\n\n\"And his head.\" Javier adds.\n\n\"Right, Javier, and your head. I think that getting punched by Jess's ex concussed you again.\" Ray states.\n\n\"It didn't and Jess and I already had this conversation. She even asked her mom to check me over this morning when I picked her up.\" Jake argues.\n\n\"She's a smart one that Jess.\" Ray states. \"But what I meant was that it didn't matter that Jamie talked you up to the Florida State guy.\"\n\n\"I doubt it.\" Jake shakes his head. \"I'm still just a back up and Jess has her heart set on UCLA. I guess I'm going to have to learn how to sell surf boards or something, huh?\"\n\n\"You on a surfboard? This I will have to come see.\" Bobby chimes in.\n\n\"I said selling not surfing.\" Jake responds.\n\n\"You can't sell something that you haven't tried yourself, Jake.\" Javier remarks. \"Every salesman will tell you that.\"\n\n\"What about people that sell grave plots?\" Ray asks with a chuckle.\n\n\"They dig a hole.\" Javier says. \"We've all dug holes before.\"\n\n\"I guess that I have to learn to surf then.\" Jake laughs.\n\n\"A shark is going to take chunk out of you when your out there floundering around on a surfboard, Jake,\" Bobby comments with a chuckle.\n\n\"You're seriously considering UCLA, Jake? Can you even get in there?\" Ray asks.\n\n\"I guess I'll find out.\" Jake answers with a shrug. \"I've looked at Cal State Fullerton, Santa Ana and a few other schools that are close to UCLA if I can't get in there.\"\n\n\"Well let's hope that it does work out.\" Bobby states. \"It'd look weird if I went out to California to see just Jessica.\"\n\n\"You'd go anyway.\" Jake laughs.\n\n\"Hell yeah I'll go anyway!\" Bobby exclaims. \"I might feel bad for a half a second until I look up and see the Hollywood sign then I won't give you another thought.\"\n\n\"I love you too, Bobby.\" Jake says with a shake of his head.\n\n\"Dude, I know that.\" Bobby quips breaking up the group into a fit of laughter.\n\n****\n\nThe party is a rousing success. The volleyball team are treated like the belle's of the ball. They're congratulated by every person that comes to the party, hugged by most and danced with by several. Jake and Jessica start the dancing and soon everyone is swaying to the music near the fire pit. \n\n\"Are you sure that I can't borrow Jake for a few minutes, Jess?\" Tonya asks as Jake and Jessica dance near where Tonya is dancing with Scott. \"I promise that I'll give him back more or less intact.\"\n\n\"Promise me that you won't put his hands on your ass and I might consider it!\" Jessica laughs.\n\n\"Spoilsport,\" Tonya laughs. \"I'm just trying to get even with my sister who is torturing me because Jake rubbed her all over.\"\n\n\"All over?\" Scott asks then looks at Jake. \"What the hell, Jake?\"\n\n\"That is not what happened.\" Jake tells him. \"I just rubbed her back to ease her spasms.\"\n\n\"And you rubbed her hands and she's been teasing me about how those finger tips of yours may have drifted down to her tight butt.\" Tonya teases.\n\n\"Accidentally!\" Tabitha shouts from beside the fire pit where she is sitting. \"I told her that any touching below the waist touching was totally accidental, Jess!\"\n\n\"I know that it was, Tabby. Jake told me about it happening and I trust you both.\" Jessica calls back to Tabitha then looks at Tonya with a smile. \"You, I don't trust even a little bit, Tonya. You would plant his hands on that booty of yours in two seconds and dare him to move them.\"\n\n\"Where is the love, Jess?\" Tonya giggles.\n\n\"In my arms where  He  belongs!\" Jessica laughs.\n\nTonya shakes her head and steers Scott away from them.\n\n\"It looks like Tonya and Scott are getting along well.\" Jake points out.\n\n\"I should probably warn him just how horny that girl can get. He is going to have his hands full with her.\" Jessica giggles as she lays her head on Jake's shoulder.\n\n\"Horny huh,\" Jake asks.\n\n\"You have no idea.\" Jessica tells him. \"I'm glad that it was Tabby that needed your rub downs and not her. She probably would have came the second you laid your hands on her.\"\n\n\"Like you do sometimes.\" He whispers into her ear.\n\n\"It's not just sometimes, baby,\" she moans as his lips graze her neck just behind her ear.\n\n\"Can you two hold off on that for a little while longer?\" Staci asks as she and Ray dance over to them.\n\n\"Your coach is going to give a speech in a little while and you have to be around for that, Jess.\" Ray chuckles.\n\n\"Yeah, no sneaking away to screw your boyfriend until later, naughty Jess!\" Staci giggles.\n\n\"Oh there will be no sneaking, Staci.\" Jessica assures her. \"I plan to drag him straight to our room as soon as this party breaks up!\"\n\n\"To change into our swimsuits she means.\" Jake jumps in. \"I need to experience this hot tub at least one time.\"\n\n\"You'll get an experience all right, Jake.\" Jessica grins wickedly. \"I just hope you manage to survive it.\"\n\n****\n\nCoach Morrison calls for everyone's attention a few minutes later to make an announcement.\n\n\"Principal Owens called me this morning to congratulate us on winning the state championship and how much he regretted not being able to attend the tournament. He is making that up to us with a special assembly so the rest of the school can celebrate our win! Probably on Monday but for tonight I want to give you, my girls, a little gift to show my appreciation for all your hard work this year,\" She says then nods towards Jake. \"If I can get a little assistance from our unofficial team masseuse.\"\n\nJake pulls a cardboard box from under one of the tables and walks it over to her amid the laughter from the crowd and the applause of the team. He stands by her as she calls up each team member one by one, presenting them with a small box from the box that Jake is holding. She instructs them to wait until everyone has their box before they open them. Once they all have their little boxes she tells them to open them up. Inside they all find a silver volleyball charm attached to a matching silver necklace. The charm is inscribed on the back with the year and \"State Champs\" on them. The girls pair off and help each other put them on then take turns hugging and thanking Coach Morrison.",
        "\"We haven't forgotten you, Coach.\" Jessica says after her hug.\n\n\"But now that there's going to be an assembly for us, we want to wait and present our gift at it, right, team?\" Tabitha asks.\n\nAfter getting a resounding  Yes  from the team Coach Morrison thanks them in advance for whatever they have for her and calls it a night. The party begins to break up shortly after her departure with the teammates sharing hugs with everyone in attendance.\n\n\"You guys set all this up, the least we can do is help with the clean up.\" Tabitha insists as the last of the guests are leaving.\n\n\"We've got the clean up handled, Tabby.\" Jessica assures her as she hugs her. \"We misfits are gonna hang around and clean up a little today then whatever is left, Jake, Ray, Staci and I will get to tomorrow since we're staying the night.\"\n\n\"Staying the night huh, Naughty Jess?\" Tonya teases with giggle. Her arms are draped over Scott's shoulders and his cheek is marked with kisses in the same shade as her lipstick.\n\n\"Are you volunteering to stay and help, sis?\" Tabitha teases.\n\n\"Uh... well... I...\" Tonya stammers for a moment then the giggling of the others causes her to blush. \"You guys suck.\"\n\n\"We definitely do that now don't we, Jess?\" Staci giggles as she nudges Jessica whose blush nearly matches Tonya's.\n\n\"Naughty, naughty, Jess.\" Tabitha giggles. \"No wonder you want us to get out of here.\" \n\n\"Yeah, you have a  job  to do.\" Tonya teases.\n\n\"Oh wow!\" Scott exclaims as he casts an envious look over to where Jake and Ray are already folding up the tables.\n\n\"Oh they're going to be  Wow  all right.\" Staci laughs. \"A little hot tub soak to get us all nice and relaxed then we'll see where the night takes us.\"\n\n****\n\nThe original misfits along with Staci, Ray, Antoine, Twanda, Des, Marisha and Javier hung around to help with the clean up until Jessica puts a halt to the activity.\n\n\"We'll get the rest tomorrow you guys,\" She tells them. \"Get out of here and go have some fun before your curfews are up!\"\n\n\"Someone really wants to get into that hot tub,\" Jody giggles.\n\n\"Someone wants to get Jake into the hot tub,\" Marybeth corrects with her own giggle.\n\n\"Correct on both counts now get out of here so I can my boyfriend into this hot tub!\" Jessica laughs \n\nMore hugs are passed out as the misfits and crew all file out leaving Jessica, Staci, Ray and Jake alone.\n\n\"Okay, you guys get upstairs and change into your swimsuits while Jess and I do the same,\" Staci orders the guys.\n\nShe grabs Jessica's hand and pulls her towards the stairs while Ray shrugs his shoulders at Jake.\n\n\"Guess we should do as she says, Ray.\" Jake states.\n\nRay nods and they follow the girls to the stairs. Once inside his and Jessica's room, Jake pulls on his black and red board shorts then ties them up when there's a rap at the door.\n\n\"You ready for this, Jake?\" Ray asks poking his head in.\n\nRay had chosen to change in the upstairs bathroom giving Jake the use of what will be his and Jessica's room for the night. Staci steered Jessica into her room to change into their swimsuits and there was a lot of giggling coming from that room.\n\n\"As I'll ever be.\" Jake answers as Ray tosses him a towel. \n\nIt's a fluffy beach towel featuring a flamingo on it. Ray's has a shark on his.\n\n\"How come you get the shark and I get a pink bird?\" Jake asks as he watches Ray tie his towel around his waist, hiding his blue swim trunks.\n\n\"Because I got the towels so I get first pick of said towels therefore you get the pink bird.\" Ray answers as Jake copies him with his towel wrapping.\n\n\"Well, yeah but I'm your favorite quarterback. Doesn't that fact alone earn me the shark towel?\" Jake asks.\n\nRay puts his hand on his chin as if he's thinking for a moment before shaking his head. \"It gets you my respect but not my towel, Jake.\" He chuckles.\n\n\"I think your pink flamingo towel is cute, Jake,\" Staci comments as she and Jessica emerge into the hallway.\n\nThey are both covered in big, fluffy, floor length robes with sly smiles on their faces.\n\n\"They get robes?\" Jake asks as the group heads downstairs.\n\n\"It's what we've got on under our robes that you should be concerning yourself with, Jake.\" Jessica teases him.\n\n\"I am very interested in finding out, Jess.\" Jake tells her.\n\nShe giggles then hooking her arm with Jake's the group descends the stairs together.\n\n\"You two get the heater set up, hop in the tub and get ready for the show while we grab us some waters.\" Staci informs Jake and Ray.\n\n\"There's a show?\" Jake asks.\n\n\"Maybe,\" Jessica answers as she lets one shoulder of her robe slip down revealing a hot pink strap before tugging it back into place.\n\n\"Where... where is... where is this heater, Ray?\" Jake stammers.\n\nThe sound of the girls giggles follow the guys outside into the cool, late November air. Ray pulls out the heater and has Jake plug it in before they drop their towels and slip into the hot tub.\n\n\"Oh wow, this feels really nice.\" Jake sighs as he slides into the warm, bubbling water. \"Why haven't I been coming here after every game?\"\n\n\"It's not like you haven't been invited but you and Jessica always had plans after the games,\" Ray says as he takes his seat opposite of Jake.\n\n\"That is true,\" Jake agrees with a smile thinking back to the weekend that he and Jess shared.\n\nBehind him the sliding glass door opens and the girls file out each holding a bottled water.\n\n\"Enjoying the bubbles, guys?\" Jessica asks as she puts her bottle on the nearby table.\n\n\"It's very nice,\" Jake answers her.\n\n\"It very soon will be,\" Staci giggles.\n\nThey line up just in front of the heater with their hands on their robe ties.\n\n\"We decided that we should do this by height and...\" Staci begins to say but Jessica interrupts her.\n\n\"You decided that then stated that since we're at your house I had to agree,\" Jessica corrects.\n\n\"Same difference,\" Staci answers.\n\n\"In essence, I lost,\" Jessica sighs.\n\n\"And I won,\" Jake laughs and winks at her.\n\nJessica shakes her head, her ponytail bouncing as her hands grip the front of her robe. She gives Jake a smile then slowly begins to lower her robe. He and Ray both gasp as Jessica's bikini clad body is revealed. The hot pink triangle top encasing her pert b-cup breasts push them together creating an amazing amount of cleavage.\n\n\"Wow,\" Ray whispers.\n\n\"You can say that again.\" Jake says.\n\n\"Wow,\" Ray repeats.\n\nHer robe pools at her feet revealing her long legs and a not so conservative matching hot pink bikini bottom.\n\n\"You like?\" Jessica asks.\n\n\"Very, very, very hot.\" Jake answers while Ray gives her a thumbs up.\n\n\"Wait until you see the back.\" She teases them.\n\n\"My turn!\" Staci announces quickly.\n\nShe slips out of her robe revealing that her bikini matches Jessica's in style but hers is in a navy blue. Staci's already ample cleavage looks barely contained in the small top. \n\n\"Were you worried that it was going to be my silver one, baby?\" She asks Ray.\n\n\"Very,\" Ray answers with a look of relief on his face.\n\n\"That one is just for you.\" She says and blows him a kiss.\n\n\"If it looks better than this one does on her, then you are a lucky guy, Ray,\" Jake comments.\n\n\"Microkini, Jake,\" Staci shares with a wink. \"Google it.\"\n\n\"No Googling tonight, Jake. I'm getting a chill even with the heater so we go on three then join our guys in the tub.\" Jessica announces then counts. \"One... two... three!\" \n\nOn three the girls turn away from the tub, showing the guys their tight bikini clad butts. Jessica and Staci are wearing cheeky bottoms that exposes part of their perfectly rounded butts to the guys. \n\n\"Amazing,\" Jake exclaims as his eyes dart back and forth from Jessica's to Staci's toned butts.\n\n\"A-fucking-mazing,\" Ray adds as his eyes do the same.\n\nBoth guys feel a stirring in their swim trunks as they gawk at the flesh on display before them.\n\nJessica and Staci each give a little wiggle of their asses before turning back around and heading for the tub.\n\nRay looks over at Jake with a huge smile on his face.\n\n\"Are we the luckiest guys on the planet right now or what?\" He asks as Staci snuggles up to him.\n\nJake nods, his face also sporting a huge smile as Jessica mimics Staci's movements, snuggling close to him.\n\n\"I agree wholeheartedly with that statement.\" Jake laughs.\n\n****\n\n\"Did you enjoy your surprise, baby?\" Jessica whispers into Jake's ear before lightly kissing him just below it.\n\nOnce in the tub, she had slid into his arms and proceeded to plant little kisses around his lips until she asked about the swimsuit. \n\n\"I really loved it,\" He moans out.\n\n\"You like my new suit?\" She asks.\n\n\"You look amazing,\" He answers as he nuzzles her neck.\n\n\"Am I the only  amazing  looking one?\" She asks teasingly and Staci giggles.\n\n\"You know that I can't answer that without incriminating myself, Jess.\" Jake answers.\n\n\"I can accept that answer.\" She giggles.\n\n\"I can't,\" Staci giggles across from them. \"I'm going to go switch to my other bikini and make Jake's eyeballs sweat!\"\n\n\"You are not doing that!\" Jessica argues with a grin.\n\n\"Party pooper,\" Staci laughs. \"My tight little body, while drool inducing, can't compete in Jake's head with those legs of yours, Jess. You have nothing to worry about.\"\n\nJake runs a hand down Jessica's thigh and nods at Staci's assessment.\n\n\"Staci is definitely right about that.\" He smiles at Jessica.\n\n\"You are going to be so rewarded for that later on, Jake Gibson,\" Jessica tells him then kisses him passionately.\n\n\"Before you drag him upstairs to ravage him, Jess, can we talk for sec?\" Ray asks her.\n\nJessica lets out an exaggerated sigh as she slides off Jake's lap.\n\n\"If I must, Ray.\" she answers then winks at him.\n\n\"I owe you one,\" He laughs. \"So, how'd you like your party, Jess?\"\n\n\"It was great!\" She enthuses. \"The team all had a great time and I love my necklace! I can't believe you didn't tell me about them, Jake.\"\n\n\"I was sworn to secrecy, Jess,\" He answers.\n\n\"I think you're going to have make this up to me in some kind of spectacular fashion,\" She says giving him a devilish grin.\n\n\"Spectacular, huh?\" Jake asks, his grin matching hers. \"I have a few ideas on how to accomplish that.\"\n\n\"And we've lost them again,\" Staci giggles as she watches Jessica slide onto Jake's lap and begin to kiss him.\n\n\"Think we should join them?\" Ray asks.\n\nStaci nods and slips into his embrace. Their mouths mold together and the only sounds heard above the bubbling water are soft moans of pleasure from both couples. Jessica's hand wanders up Jake's leg until she finds his semi hard on and wraps her hand around it. He groans into her mouth when she begins to pump him slowly.\n\n\"Jess,\" He whispers hoping that Ray and Staci can't see her stroking him.\n\n\"It's fine,\" She whispers back and nods towards them.\n\nJake looks over her shoulder and see's Staci's arm moving in much the same way as Jessica's. Ray's head is laid back with a big smile plastered on his face. Staci glances over and when she sees Jake watching she gives him a wink before leaning in and kissing Ray's neck.\n\n\"See,\" Jessica giggles then begins to kiss him again when the sliding door opens.\n\nTracy Daniels walks onto the deck hiding her smile when she watches the four teens faces blushing at getting caught. They had moved away from each other so fast at the sound of the door opening that water sloshed out of tub. Tracy shook her head and looked at the four very separated but guilty looking teens then smiled. \n\n\"I was going to ask if you kids were having fun but from the look on all of your faces, you are.\" She giggles.\n\n\"Mom!\" Staci shouts feeling the blush on her cheeks deepen.\n\n\"Oh honey relax,\" She tells her daughter. \"I was just checking to see if you all needed a drink but I see that you have that covered. Glad something around here is.\"\n\n\"Mom!\" Staci shouts again as she and Jessica both sink into a little lower into the water to hide their bikini tops.\n\n\"I'm just giving you a little shit, Staci,\" Mrs. Daniels assures her. \"Honestly, I'm a bit surprised that any of you are wearing anything at all. I expected to see a bunch of wet swimsuits here on the deck when I came out.\"\n\n\"Well you are here, Mom,\" Staci points out.\n\n\"We didn't feel that it would be appropriate to go, um, naked,\" Jake answers.\n\n\"That's a good call, Jake,\" She chuckles. \"I've seen way more of you than I ever thought I would. And please don't apologize again, Jake. You have been forgiven for that already.\"\n\n\"Yes, ma'am,\" He answers with a nod.\n\n\"I'll make sure that he puts on pants when he leaves our room tonight, Mrs. Daniels,\" Jessica assures her.\n\n\"Thank you, Jessica, but I plan to be safely tucked away in my room with some music playing for the rest of the night so don't worry about me,\" She tells them.\n\n\"Heading up now, Mrs. Daniels?\" Ray asks.\n\n\"Yes, I am, Ray. Now that I've checked on you all, I'm heading to bed, putting on some music and crawling under my warm blankets,\" She says then shivers for effect. \"I suggest you all do the same soon. It's getting colder and the wind is picking up.\"\n\n\"Night, Mrs. Daniels,\" Jake says and Jessica echoes it.\n\n\"Good night, Mom,\" Staci says. \"We'll be heading in in a few minutes.\"\n\n\"Good night, Mrs. Daniels,\" Ray says.\n\nMrs. Daniels gives them a nod and as she heads back inside, Staci looks at her hands.\n\n\"She's right,\" She states. \"We should be getting out. The air is getting colder by the second!\"\n\n\"Agreed,\" Jessica answers. \"You and I both have  jobs  to get to after all.\"\n\n\"Yeah, we do!\" Staci states. \"Would you boys get our towels, please?\"\n\nJessica gives her a confused look but Staci winks back makes a shushing motion. Jake stands up first, followed by Ray and that's when Jessica understands. Both guys trunks are tenting out from the earlier activity and Staci's eyes are staring right at Jake's so she takes the opportunity to check out Ray's package.\n\n\"Mmm, very nice, Jake,\" Staci comments then with a smile at Jessica adds. \"You are a lucky girl, Jess.\"\n\n\"I was about to say the same thing to you, Staci,\" Jessica giggles. \"Very nice, Ray!\"\n\nBoth guys look at each other confused then the realization slowly dawns on them.\n\n\"Really?\" Ray asks as he moves his hands to cover himself.\n\nJake quickly drops back under the cover of the bubbles of the hot tub and Ray quickly follows him.\n\n\"You both got a show,\" Staci states. \"Jess and I should get one too. Don't you agree, Jess?\"\n\n\"Totally,\" Jessica giggles.\n\nJake casts a look at Ray and shrugs.\n\n\"They've seen us already, Ray,\" He states.\n\n\"They have,\" Ray agrees. \"And we do owe them from earlier.\"\n\n\"We do,\" Jake agrees before nodding and standing back up.\n\nThe embarrassment has caused a bit of shrinkage to occur but the girls show their appreciation with a series of Ooo's and Ahh's as the guys pose for them.\n\n\"Nice asses, boys!\" Jessica calls out as the guys bend to retrieve the girls robes.\n\n\"Very slappable,\" Staci giggles gleefully.\n\n\"Ray, these robes are nice and warm. Think we should slip them on and wait for the girl's inside?\" Jake teases.\n\n\"You make a good point, Jake,\" Ray chuckles then shivers.\n\n\"You wouldn't dare,\" Staci states narrowing her eyes at them.\n\n\"I don't know about that, Staci,\" Jake tells her. \"This wind is really, Brrr, and they are so warm and fluffy!\n\nStaci looks at Jess and an unspoken word passes between them. They both rise up so their chests are clear of the water then lean forward, pushing their boobs together as they do so.\n\n\"May we please have our robes, Jake?\" Jessica asks with a fake pout on her lips.\n\n\"Please, Ray,\" Staci matches her tone and pout.\n\nIt takes the guys several moments to answer. Their eyes are staring at two pairs of pert breasts glistening with water and trying to escape the confines of their bikini tops which briefly short circuits their brains.\n\n\"Using those against us is so unfair,\" Jake finally sighs after watching a droplet of water travel from Jessica's slender neck until it disappears into her cleavage.\n\n\"I plan to make it up to you by rubbing them against you if you bring me my robe, baby,\" Jessica smiles at him.\n\n\"Do I get the same deal, Staci?\" Ray teases.\n\n\"How about I let you rub something between mine,\" Staci giggles. \"I know how much you like that.\"\n\nJake can't help but look at Staci's ample cleavage at that suggestion and then to the dreamy smile on Ray's face as he shakes his head. \n\n\"I guess they're getting their robes now, huh?\" He asks Ray who nods vigorously. \n\nThey walk over and, as the girls exit the tub, help them into their robes. Once the girls are covered, Jake shuts off the heater while Ray shuts off the hot tub before the two cold teens head inside.\n\n****\n\nThe couples retire to their own rooms after saying good night to each other. The girls hugging and the guys giving each other a nod at their respective doors.\n\n\"Alone at last,\" Jessica giggles as she closes the door.\n\n\"You took the words right out of my mouth, Jess,\" Jake says as he pulls her into his arms and kisses her.\n\nHer tongue slides into his mouth and he sucks for a moment before she withdraws it.\n\n\"I believe that I'm the one that needs to suck on something here, Jake,\" She giggles.\n\n\"After seeing you in that suit I think it's me that needs to thank you with my tongue,\" Jake answers pulling her mouth back to his.\n\nAs they kiss, Jake pulls open her robe and lets gravity do the rest. It pools at her feet as his hands begin to caress her exposed flesh. They don't take long to cup her tight butt and start to massage it.\n\n\"Jake,\" She moans as their lips part.\n\n\"Mmm hmm,\" Jake answers as he starts kissing her neck.\n\nFeeling that she's losing control, Jessica steels her nerves and pushed Jake backwards. He hits the bed and sits down hard on the soft comforter.\n\n\"Jess?\" He asks.\n\n\"I told you that I have something to do and it's getting done, mister!\" She tells him with a playful sternness.\n\nShe sinks to her knees in front of him before he can muster up an answer. Her hands deftly untie his board shorts in no time and she tugs at them. Jake lifts his butt and they soon join Jessica's robe on the floor.\n\n\"There's my friend!\" She giggles excitedly as Jake's hard cock bounces into view.\n\nShe takes him into her hand and gives him a couple of feathery strokes before lowering her mouth to the head of his cock. Jake groans out his approval as her tongue licks around his salty flesh.\n\n\"Oh damn, Jess,\" He moans when her tongue flicks over his sensitive spot.\n\n\"Like that, huh?\" She asks after pulling him from her mouth.\n\n\"That spot... really sensitive,\" He gasps out.\n\n\"This one?\" She teases as she plants a tiny kiss just to the side of it.\n\n\"Close,\" Jake groans as he looks down at her smiling face.\n\n\"Here?\" She teases and kisses the opposite side.\n\nShe grins at Jake's desperate expression for a second before giving the spot a languid lick of her tongue.\n\n\"Oh God!\" He shouts as she concentrates on that spot for a moment.\n\nHis shout when she plunges her mouth down on him again is even louder. Jessica giggles with him in her mouth causing Jake to jerk at the vibrations she sends through his shaft.\n\nHe reaches down and brushes her hair from her face so he can watch his cock sliding between her lips. Her eyes look up at him as her head bobs taking more and more of him into her warm, wet mouth. She smiles at the expression on his face as she works him over getting him as hard as she can before he pops.\n\n\"Lean back,\" She tells him when she gets his manhood as hard as she wants it.\n\nHe nods and scrambles back up onto the bed. Jessica quickly strips out of her bikini and joins him on the bed. She begins to straddle his hips but he stops her.\n\n\"I want to taste you, Jess,\" He tells her.",
        "\"Not now, Jake,\" She tells him as she reaches down and lines him up with her opening. \"Right now, I need you in me.\"\n\nShe rubs the head of his bare cock against her slit and he moans when he feels how wet she is.\n\n\"You're so wet,\" He remarks as she coats his head with her slickness.\n\nShe nods then slams herself down onto him.\n\n\"Fuck yes!\" She shouts out as she takes all of him.\n\nJake groans as well as the walls of her kitty undulate around his cock. After a few moments of letting herself adjust to him being in her, she begins to pump her hips. Jake reaches up and pulls her head down and begins to kiss her passionately. She whimpers into his mouth as his hips begin to thrust against her movements until she tears her mouth free.\n\n\"You feel so big like this, baby,\" She moans as she pushes herself back to a seated position.\n\n\"Even... fuck... bigger than doggy?\" Jake asks enjoying the ride she's providing.\n\n\"We'll... damn... test that out... out... fuck!\" She tries to answer as she starts to come for him.\n\n\"Later?\" Jake asks with a grin as Jessica drives herself onto him as she rides out her orgasm.\n\nShe lays down on his chest and giggles while catching her breath.\n\n\"Right. Later,\" She answers. \"Right after I make you come in me.\"\n\nUsing her position and strong legs, she starts riding Jake harder while gripping him with the warm walls of her kitty to drive him crazy. He moans her name with every downward stroke of hers until he he feels his impending release. He grabs her hips, pulls her down to him as he stroke upwards and bursts deep inside her. She shouts out his name as his pelvis grinds her clit and she explodes in ecstasy with him. He growls out her name as she collapses down onto his chest. His hands move to her ass and he grips it tightly as he thrusts a few more times emptying all he can of himself into her. On his last thrust she moans out his name and shudders as she comes again. He loosens his grip on her ass and gives both cheeks a rub before running his hands up her toned back. The pair lay together, breathing hard as they start coming down from the intensity of their love making.\n\n\"Water?\" Jake whispers after several minutes of holding her.\n\n\"Please?\" Jessica asks realizing that they left the water outside by the hot tub. \"Oop, I left it outside.\"\n\n\"I'll get us a fresh bottle,\" Jake assures her but Jessica doesn't make a move to let him up. \"Um, Jess, you kind of have to move if I'm...\"\n\n\"Don't wanna,\" She giggles then kisses his neck.\n\n\"I could yell for Staci to get it for us,\" He suggests.\n\nShe sighs and rolls to the side to allow him to sit up.\n\n\"We yelled enough for a little while and if you start shouting her name things will get weird with Staci and her poor mom. I hope she had her music on loud enough,\" Jessica states.\n\nJake nods in understanding as he reaches for his boxer briefs that he discarded earlier.\n\n\"Just the jeans,\" She tells him with a grin. \"I don't want Staci's mom to catch you in your undies again but I want you naked as soon as you're back.\"\n\n\"You do, huh?\" Jake chuckles as he drops his underwear and picks up his jeans.\n\n\"You and I have something we need to test when you get back, Jake,\" She answers as she rolls over to her stomach and shakes her bare butt at him.\n\nJake tugs his jeans on then leans over and plants a couple of kisses on Jessica's butt cheeks.\n\n\"I will be right back,\" He says then pauses as he starts to step into the hallway. \n\nHe looks back at Jessica and smiles. \"You have the most perfect ass, Jess. Just fucking perfect.\"\n\n\"You know what they say about flattery, Jake,\" She smiles at him. \"It gets you another BJ so hurry back!\"\n\n****\n\nJake opens the refrigerator and grabs a couple of bottles of water from inside when he hears a giggle from behind him.\n\n\"I see that you learned your lesson, Jake,\" Staci states as she joins him on the kitchen.\n\n\"Seems that we both did,\" He says nodding towards her robe clad body.\n\n\"I'm naked under my robe, Jake,\" Staci giggles as she teasingly pulls open the front revealing her ample cleavage and some red marks where Ray had been kissing on her chest. \"You didn't get fully redressed did you?\"\n\n\"Maybe,\" Jake laughs as he hands her the waters he pulled out.\n\n\"Thanks, Jake,\" Staci giggles as she accepts them.\n\nHer eyes drift down over Jake's rear as he turns and grabs a couple of more bottles of water from the fridge. He catches her looking when he turns and laughs.\n\n\"Hey, you look at mine like all the time!\" Staci argues. \"I'm trying to determine if you have your undies back on and getting even.\"\n\n\"Even huh? I think that little trick you pulled out in the hot tub got us more than even,\" Jake chuckles.\n\n\"Did it, Jake?\" She asks with a grin. \"Come on, I want to mess with Jessica a little bit.\"\n\n\"Staci, don't get me killed,\" He warns her.\n\n\"Never, Jake,\" she laughs. \"I love you two too much for that.\"\n\nThe pair walk back upstairs but stop at the door to his and Jessica's room when they hear her talking to someone.\n\n\"No, it's fine,\" Jessica is saying. \"He should be right back.\"\n\nJake opens the door to find Jessica lying on the bed, with the sheet covering her and his phone to her ear.\n\n\"Who's on your phone?\" Staci quietly asks Jake.\n\n\"No clue,\" He answers just as quiet as he gives Jessica a questioning look.\n\n\"He should be back any second now, Jennifer, and I'm not mad that you called, I promise,\" Jessica says into the phone while looking at Jake and Staci.\n\n\"What the hell is Jennifer doing calling you, Jake?\" Staci asks but Jake can only shrug.\n\nStaci gets a wicked idea in her head then winks at Jessica.\n\n\"Jess, we're back!\" She announces as if they just walked back into the room. \"Want me to get Jake's pants back off for you or do you... oops, didn't know you were on the phone.\"\n\n\"Very funny, Staci,\" Jessica answers matching Staci's grin then into the phone. \"Staci thinks she's funny. Let me get Jake on the phone so I can kick her out of our room.\"\n\nShe hands Jake his phone and motions towards the hallway to Staci who nods. Jake takes the phone and hands Jessica the water. She takes a swig and starts to walk out the door but Jake stops her.\n\n\"Anything she wants to say to me, she can say in front of you,\" He insists.\n\n\"She already did, baby,\" Jessica assures him but smiles at his willingness to include her. \"Let me tell Staci what's going on and I'll be right back. Promise.\"\n\nJake nods with a little uncertainty but lifts the phone to his ear as Jessica leads Staci into the hallway. \n\n****\n\n\"What the hell is all that about?\" Staci demands to know as soon as Jessica shuts the door behind her.\n\n\"She reached out to Jake as a last resort sort of thing for a friend,\" Jessica explains.\n\n\"So you know why she called or why she claimed that she called?\" Staci asks.\n\n\"I do and I trust her. Okay, I trust Jake but you know what I mean.\" Jessica tells her.\n\n\"I do but I also know that you aren't thinking too well.\" Staci giggles.\n\n\"You're probably right about that. I had a couple of really good orgasms with him and...\" Jessica starts to confess but Staci's laughter stops her.\n\n\"I guess that explains why you walked out into the hall bare ass naked,\" Staci laughs.\n\nJessica looks down and it dawns on her that Staci is right. To make matters worse, Ray chooses that moment to poke his head out of Staci's door upon hearing them talking.\n\n\"Staci, what's going... wow!\" He exclaims as he sees Jessica's naked back and butt facing his way.\n\n\"Ray, don't... well I guess it's too late to say don't look now, huh?\" Staci asks.\n\n\"Oh god,\" Jessica sighs wishing the floor would open up and swallow her.\n\nStaci quickly moves around her friend to block Ray's view of her nakedness but Ray has already ducked his head back into Staci's room.\n\n\"I am so, so, sorry, Jess,\" He apologizes profusely.\n\n\"Accidents happen I guess,\" Jessica states. \"I'm the one that messed up here, Ray, not you. I wasn't thinking clearly.\"\n\n\"I guess that Staci is going to explain all this once she gets in here.\" He states.\n\n\"That I will and that's my cue, Jess,\" Staci says then leans up and kisses Jessica's cheek but her hand gives Jess's butt a playful slap.\n\n\"Hey!\" Jessica jumps and Ray pokes his head back out at the sound of flesh smacking flesh.\n\nHe catches a brief glimpse of the side of Jessica's boob as she turns to confront Staci. He quickly ducks back into the room.\n\n\"Great,\" Jessica says. \"Your boyfriend has all but seen me naked now.\"\n\n\"I'll get us even sometime,\" Staci giggles. \"For now, you need to get back in there and show Jenny that Jake is your guy.\"\n\n\"She knows that, Staci,\" Jessica states.\n\n\"There's knowing and there's showing and you need to show her that he ain't leaving you for her,\" Staci states. \"You know what I'm saying, right?\"\n\n\"I think I got it,\" Jessica answers with a grin.\n\n\"Cool,\" Staci says then opens the door to Jake and Jessica's room.\n\nJake is still standing in the middle of the room with his phone to his ear.\n\n\"Hey, Jake,\" Staci says.\n\nWhen he looks over at her she yanks her robe open showing him her glorious nakedness. He nearly drops his phone when she spins around and makes sure that he gets a nice view of her ass.\n\n\"See,\" She says to a stunned Jessica. \"We're even.\"\n\nJessica nods then shakes her head in disbelief. Staci kisses her cheek again then with a parting wave to Jake, heads to her room and a waiting Ray.\n\n****\n\n\"What was all that about?\" Jake whispers to Jessica.\n\n\"Tell you later?\" She asks with a shrug.\n\nHe nods and turns his attention back to his phone.\n\n\"Jenny?\" He asks into the phone.\n\n\"Guess I caught you at a really bad time huh?\" Jennifer asks him. \"I told Jessica I could call back but she said it was fine. It... it's not really fine is it, Jake?\"\n\n\"It's not really the best time but what do you...\" He starts to ask when Jessica unbuttons his jeans and tugs them to the floor.\n\n\"What are you doing?\" He asks Jessica but she just smiles up at him with a gleam in her eye.\n\n\"I need to ask you for a favor,\" Jennifer answers thinking he was asking her.\n\nJessica takes him by his erect cock and gently leads him back to the bed.\n\n\"Favor?\" Jake manages to gasp out as Jessica begins to softly stroke his shaft.\n\n\"I know, Jake, believe me I know that I'm at the bottom of the list of people that you would help out but this isn't for me. Not really,\" Jennifer explains.\n\n\"Go... on,\" Jake tries to not groan as Jessica's fingers tease around his crown.\n\nJennifer hears the strain in his voice but concludes it's from him not wanting to help her but continues anyway.\n\n\"This girl approached me this week because she was told that I used to go to Carter and I might know this guy that she met at this party,\" Jennifer explains. \"A big football player that got dragged out by his and I quote  asshole friend  while they were starting to hit it off. She started describing him and I knew immediately that she was talking to Jamie and Patrick was the asshole.\"\n\n\"Obviously,\" Jake agrees.\n\n\"I know, right? Anyway, I didn't want to bother you with any of this, Jake, but Patrick... well Patrick...\" Jennifer pauses.\n\n\"Is an asshole,\" Jake laughs then groan as Jessica runs her fingers over the sensitive spot underneath the head of his cock. \"Oh fuck... er...\"\n\nHe nearly drops his phone but Jessica grabs it and puts it on speaker so he doesn't have to hold it.\n\n\"Exactly,\" Jennifer states. \"I left him a couple of messages but haven't heard anything back from him. I suppose that after he got what he wanted from me... well, he always was a jerk.\"\n\n\"What exactly are you asking me to do here, Jenny?\" Jake asks wanting to end the call so he can concentrate on Jessica's ministrations.\n\n\"You're on speaker now by the way, Jenny,\" Jessica states with a slight giggle. \"Jake was getting a little... um, too excited to hold his phone.\"\n\n\"Oh... oh... do you guys want me to let you go or... I should let you go,\" Jennifer stammers.\n\n\"No, it's good,\" Jessica assures her. \"You ask Jake whatever you need to while I... well, I've got something to do.\"\n\nJessica lowers her face towards Jake's cock when he reaches down and covers the speaker on his phone.\n\n\"What are you doing?\" He asks.\n\n\"Giving my boyfriend a little treat,\" Jessica answers with a wink.\n\n\"I haven't... um... cleaned up,\" Jake says.\n\nJessica giggles and shakes her head.\n\n\"It's just us, Jake,\" She answers. \"I don't mind tasting us on you.\"\n\n\"Oh shit,\" Jennifer squeaks from the phone upon hearing Jessica's answer.\n\n\"Sorry, Jennifer,\" Jessica calls out. \"Here's Jake back.\"\n\n\"I can totally let you go, Jake,\" Jennifer says blushing as she pictures what is about to happen on the other end of the line.\n\n\"He'll be fine,\" Jessica assures her before opening her mouth to take the crown of Jake's cock into her mouth.\n\n\"Fu...\" Jake groans then shakes his head and composes himself as best as he can. \"What... what do you want me to... do, Jenny?\"\n\n\"Is there anyway... um... anyway you can pass along a number to Jamie from this girl?\" She asks quickly.\n\n\"I... I can...,\" Jake tries to answer but groans as Jessica takes him deep into her mouth.\n\nShe tongues her way back up to his head then pulls him out with wet pop.\n\n\"Hey, Jenny,\" Jessica says as she casually strokes a relieved Jake. \"We can pass along the number but what does this friend of yours have planned for next Friday?\"\n\n\"Nothing I don't think,\" Jennifer answers. \"We don't run in the same circles exactly. She's more of a friend of a friend but we're talking a bit now over this Jamie thing. Why?\"\n\n\"Think she'd like to come out to see Jamie play and meet up with him after the game?\" Jessica asks.\n\n\"That... is a brilliant idea, Jessica,\" Jennifer states. \"I'm sure that I can work that out. Um, think it would be okay if I tagged along with her? She won't know any of you guys. I mean she barely knows me but sending her off to hang out with a bunch of strangers would just be mean. That and I don't want to just dump her off and make her your problem. Not that she's a problem! She's very sweet! I'm messing this all up!\"\n\n\"You're not messing up, Jen. It's all good and we'd love to have you along,\" Jessica answers then plants a kiss on Jake's spot.\n\n\"Fuck!\" He nearly shouts causing both Jessica and Jennifer to giggle.\n\n\"I'll get your number from Jake's phone and call you this week to set this up, Jenny,\" Jessica tells her. \"Right now, I really need to direct all my attention back to Jake before he loses it.\"\n\n\"It sounds like he's almost there,\" Jennifer laughs. \"Have fun, Jake!\"\n\n\"Guaranteed,\" Jake laughs.\n\n\"Talk to you later, Jenny,\" Jessica says then taps Jake's phone.\n\nThinking that she's hung up, Jessica climbs onto the bed and gets on all fours.\n\n\"Come on, Jake,\" She wiggles her ass at him. \"Let's test that thing from earlier.\"\n\nJake slides in behind her and aims his steel hard manhood at her kitty. He pushes into her wetness and she moans out his name.\n\n\"Give it all to me, Jake!\" She moans.\n\nJake pushes until he's all the way inside her and holds it there as she pants.\n\n\"That... that feels so much deeper,\" She sighs. \"So deep but it feels so good!\"\n\nIn response Jake begins to pump his hips, fucking into her. Unknown to either of them, Jessica didn't actually hang up the phone. Jennifer is hearing all of this and slips her hand into her panties.\n\n\"Oh fuck,\" she moans quietly as she finds out just how wet she is from hearing them going at it.\n\nShe begins to slide her fingers into her pussy and fucks herself in time with the sound of the action coming out of her phone. She finishes with a leg shaking orgasm just before she hears Jessica announce that she's coming on Jake's cock.\n\n\"Jesus, Jake, if I knew you were that good I would never have dreamed of leaving you,\" Jennifer thinks as she hangs up on her end then goes to clean her excitement from her fingers.\n\n****\n\n Monday November 27th \n\n\"I still cannot believe that you did that!\" Shelly expresses as she, Jessica and Caitlyn sit down at their table in art class.\n\nStaci had blabbed at lunch about the phone call that Jake had gotten from Jennifer then told them what Jessica told her what she did during said phone call much to both her and Jake's embarrassment. \n\n\"What did you do, Jess?\" Caitlyn asks.\n\n\"Nothing!\" Jessica answers quickly.\n\n\"So much,\" Shelly contradicts with a giggle but before she can explain the overhead speaker crackles to life.\n\n\"Teachers, the assembly for the volleyball teams will begin in fifteen minutes. Please allow any players that are in your class to report to the auditorium now,\" the office states.\n\n\"Let's hear it for the state champs,\" Jake says as he stands and applauds.\n\nThe rest of the class follow suit much to Jessica and Caitlyn's embarrassment as they collect their belongings.\n\n\"I will get you back, Jake,\" Jessica playfully warns him as she and Caitlyn start to pass him.\n\nShe then kisses his cheek and gives a wave to the class before heading into the hallway.\n\n\"Back to what you did that Shelly still can't believe,\" Caitlyn asks with a giggle.\n\nJessica shakes her head as she too giggles.\n\n\"You do not give up, do you?\" She asks.\n\n\"Not when the story seems juicy enough to make you blush like you are right now I don't,\" Caitlyn answers.\n\n\"Ugh, remind me to get some water before we reach the auditorium then because if Tonya sees me and I have to tell her this, I will never hear the end of it.\" Jessica laughs.\n\n\"Ooo it must me good then!\" Caitlyn giggles. \"I promise I'll remind you about the water as long as you spill it before we get there.\"\n\nJessica tells her about Jennifer calling Jake and how she  handled  it.\n\n\"Oh my god, Jess, you are wicked!\" Caitlyn exclaims as they stop at a water fountain.\n\n\"I got tired of waiting,\" Jessica shrugs then fills her mouth with the cool water.\n\n\"Uh huh,\" Caitlyn states. \"Are you seriously going to call Jenny this week?\"\n\n\"I did promise,\" Jessica answers then takes another sip.\n\n\"Well yeah but I mean why would you?\" Caitlyn asks.\n\n\"To show her there's no hard feelings?\" Jessica shrugs.\n\n\"More like you want to show her that she can no longer get your man which is why you pretty much claimed him in front of her.\" Caitlyn suggests then laughs. \"Imagine her face when she heard you blowing her ex over the phone.\"\n\n\"You blew Jake while Jennifer was on the phone?\" Tonya asks as she stops behind them.\n\n\"Oops,\" Caitlyn laughs. \"See you inside, Jess!\"\n\n\"You are so busted, Jess,\" Tonya states gleefully as she takes her by the arm. \"Now you come and sit with me and tell me all about how it came about that you gave Jake a bj in front of his ex.\"\n\n\"It was not in front of!\" Jessica sighs.\n\n\"See, I'm already misinformed so I need to hear the whole thing. Leave no detail out, Jess.\" Tonya giggles.\n\nJessica shakes her head but can't help but laugh as Tonya takes her by the arm and they walk into the auditorium to prepare for the assembly.\n\n****\n\nThe assembly begins with Principal Owen announcing they will show a short video of both the Junior Varsity and Varsity teams that was made this season. After it stops he asks for a round of applause for the JV team who finished second in their tournament. The JV girls stand and wave from their seats in the front row and are surprised at the thunderous applause and standing ovation they receive from their fellow students. Once the applause dies down Principal Owen takes the microphone and steps out from behind the podium.\n\n\"Students, now I know that most, if not all, of you know this team I am about to introduce but it gives me great pleasure to introduce them so I will,\" He chuckles. \"Carter High, lets hear it for our Volleyball State Champions!\"\n\nHe begins to name them individually as they walk onto the stage leaving Coach Morrison for last. Another round of deafening cheers ring out with each player that takes the stage and another standing ovation that goes until Principal Owen asks for it to quiet down.",
        "\"As much as I'm sure Coach Morrison and the team appreciate your enthusiastic applause but, like me, they want to head home in a little while,\" He states.\n\nThe crowd quiets down and Coach Morrison takes the mic.\n\n\"Thank you all for this amazing reception! We appreciate all of you that came out to watch us at the tournament and all of you for your support this year. We have been truly overwhelmed by the outpouring of love you all have bestowed upon us,\" She tells them. \"We are truly grateful!\"\n\nAgain the crowd cheers then slowly quiets back down.\n\n\"Coach Morrison,\" Tabitha says to her. \"We elected Jess to say a few words on our behalf.\"\n\nCoach Morrison nods and introduces Jessica.\n\n\"I've just been told that the team would like to say a few words so it's my privilege to introduce you to our team captain, one of our two players that were selected to the All State team and our tournament MVP, Jessica Golden!\" She introduces her with a radiant smile.\n\nA cacophonous cheer goes up and the student body stands again for her. Jessica blushes slightly but pushes on and begins to speak.\n\n\"First of all, I want to thank every single one of you for your support this year! Principal Owen, your support has been amazing and we appreciate it so much!\" She begins then points to the crowd. \"And to our amazing student body, you guys... you guys have been amazing to us from game one until that last match point and it's meant the world to both us and our JV teammates! They were instrumental in making us the best that we could be and next year they are going to be up here celebrating their own win in the state championship!\"\n\nThe JV girls cheer loudly at this as do the rest of the crowd.\n\n\"Now, we have a few people that we, as a team, would like to acknowledge.\" She continues. \n\nShe looks over at the team who are all trying and failing to hide their amusement at what is about to happen.\n\n\"We would like Jake Gibson, hero of the homecoming game and my boyfriend, to come up to the stage please,\" She says with a grin.\n\nFrom the middle of the auditorium Jake rises from his seat shaking his head as the auditorium erupts into cheers for him.\n\n\"Hey, baby,\" Jessica whispers to him as he joins her on the stage.\n\n\"Hey,\" he answers flushing with embarrassment at the attention. \"What is going on?\"\n\n\"You'll see,\" She grins at him then lifts the microphone to continue. \"We girls would like to acknowledge Jake's contribution to the team over our last few games. Tonya and Tabitha, could you please present Jake with our gift to him?\"\n\nTonya and Tabitha walk over each holding a small gift bag and present them to Jake. He looks in the first one and starts to laugh.\n\n\"Don't leave us hanging, Jess!\" Staci shouts from the audience. \"What's in the bag, Jake! Don't make me come up there!\"\n\n\"Yeah!\" Antoine shouts. \"What did you get my boy, Wildcat!\"\n\nJessica laughs and shakes her head as she answers.\n\n\"Jake has been our team masseuse so we all got together and got him... Jake?\" She says then pauses as she puts the microphone in front of him to answer.\n\n\"A bottle of coconut oil and a book on massage techniques,\" He answers with a chuckle. \"Thank you all. I will get a lot of use out of both.\"\n\nTonya grabs him in a hug which leads to Tabitha hugging him followed by the rest of the team.\n\n\"Okay, one more and we're done!\" Jessica tells them and turns to Coach Morrison. \"Coach, you have been our coach, our friend, our mentor and our champion all year long so we want to present you with the game ball from the tournament.\"\n\nCaitlyn presents it to Coach Morrison who thanks her with a hug.\n\n\"We all signed it with our own little messages for you but the most important message is,\" She pauses and nods towards the rest of the team who call out as one, \"We love you, Coach!\"\n\nTears appear in Coach Morrison's eyes as she goes about hugging and thanking each player on the team. Jessica hands the mic back to Principal Owen who, with a smile, dismisses the assembly and school for the rest of the day.\n\n****\n\n Tuesday \n\n\"You seriously called her back?\" Shelly asks as the lunch bunch convenes inside the cafeteria due to it raining outside.\n\n\"I seriously did,\" Jessica answers as she pops a tater tot into her mouth.\n\n\"She did promise,\" Staci parrots in her best impersonation of Jessica's voice.\n\n\"Be nice, Staci,\" Ray chuckles as he swipes a tot from her tray.\n\n\"Hey, that's mine!\" She shouts then makes a grab for it as Ray tries to pop it into his mouth.\n\nWhile she play wrestles with Ray, Jake snags another from her tray and pops it into his mouth.\n\n\"Hey!\" Staci cries out as she watches it fall into Jake's mouth.\n\n\"Snooze you lose, Staci,\" Jake laughs.\n\n\"Jessica, control your man!\" Staci tells her.\n\n\"Jake, play nice,\" Jessica states. \"And grab your wonderful girlfriend a tot too next time.\"\n\n\"Yes, sweetie,\" Jake answers.\n\n\"That's not the kind of control I mean, Jess!\" Staci argues while still wrestling with Ray.\n\n\"It's the kind of control that Jess likes to wield though,\" Roxie laughs. \"Jake keeps her fed and you keep yelling.\"\n\n\"You love my yelling, Foxy Roxie!\" Staci shouts with glee.\n\n\"Are you going to tell Jamie about what you've set up or not?\" Shelly asks bringing the conversation back.\n\n\"I don't know if they really will show so I don't see the point in getting his hopes up if they don't for some reason.\" She answers.\n\n\"Because it would be fun to watch his face when they don't show up and he gets all sad about it.\" Bobby states.\n\n\"That would be a Patrick move, Bobby,\" Jake tells him. \"And we don't play that way. We're better than all that.\"\n\n\"You might be,\" Bobby chuckles. \"Then again you did just steal another tater tot from Staci so maybe you aren't.\"\n\n\"JAKE!\" Staci shouts snapping her head around to glare at Jake.\n\n\"I'm innocent,\" Jake declares but a smiling and munching Jessica tells the true tale.\n\n\"I will get you back, Jake,\" Staci warns him.\n\nThe overhead speaker sparks to life from the other side of the cafeteria.\n\n\"Jake Gibson, please report to the office. Jake Gibson to the office.\"\n\nIt crackles then falls silent.\n\n\"Damn, you work fast, Staci,\" Jake comments as he gets to his feet.\n\n\"Hey you were warned, Jake,\" She giggles.\n\n\"I'll get your tray,\" Jessica tells him.\n\nHe leans down and kisses her briefly.\n\n\"What do you think this is about?\" she asks him.\n\n\"Probably going to get a lecture about the coconut oil and massage book your team got me,\" He chuckles.\n\n\"No,\" Jessica answers then stops. \"Wait. You really think that's it?\"\n\n\"Probably not but I don't know any other reason but I guess I'll find out,\" He answers. \"I'll either be back or catch you in Biology.\"\n\nHe grabs his bookbag, slings it over his shoulder and heads towards the office. Somer is at her post at the front desk and gives him a smile as he enters.\n\n\"Hey, Jake,\" She says flirtatiously. \"How are things going? You wouldn't happen to have an of that coconut oil on you would you? I have a few spots that could use your...\"\n\n\"No,\" Jake answers curtly cutting her off midsentence. \"Who needed me?\"\n\nSomer is taken aback by his abruptness and stammers her reply.\n\n\"Mrs... uh Santora needed you,\" She answers. \"I'll let her know that you're here.\"\n\n\"Thank you,\" Jake answers.\n\nSomer grabs the phone up and speaks to Mrs. Santora.\n\n\"She'll see you now,\" She answers.\n\n\"Thanks again, Somer,\" Jake states then walks to Mrs. Santora's office.\n\n\"Hello, Jake,\" Mrs. Santora greets him as he pokes his head in her office. \"Sorry for cutting into your lunch but I wanted to let you know the good news.\" \n\n\"Good news?\" He asks as he takes the offered seat.\n\n\"Oh, I thought that you would know about the request,\" She states.\n\n\"From one of the colleges I applied to?\" Jake asks curiously.\n\n\"Unless you applied for this one without my knowledge,\" She answers as she brings up the request. \"We got a request for your academic records and your extracurricular activities from... UCLA.\"\n\n\"UCLA?\" Jake asks. \"Southern California? That UCLA?\"\n\n\"The very one,\" She answers proudly. \"I sent them to a Ms. Langston for review and she said some very positive things about both once she skimmed over them. She was looking forward to passing them along for academic review for possible scholarships.\"\n\n\"Scholarships? As in plural,\" Jake asks.\n\n\"She is going to have the academic offices send me a couple that she wants me to go over and fill out with you if you're interested in going to sunny Southern California that is, Jake,\" She smiles.\n\n\"I never even dreamed that it would be possible but I am definitely interested, Mrs. Santora,\" Jake assured her.\n\n\"Great,\" She smiled at him. \"I'll let you know when I get the paperwork and we can set up a time to fill them out. Sound good?\"\n\n\"Sounds unbelievable,\" Jake replies.\n\n\"Start believing it, Jake,\" She laughs.\n\nHe nods, gets to his feet and thanks her as she assures him that she'll let him know as soon as she has the paperwork.\n\n\"Good news, Jake?\" Somer asks as Jake walks back into the main office area.\n\n\"Pretty great,\" Jake acknowledges. \"Looks like I may be eligible for some scholarships.\"\n\n\"Congrats on that,\" She smiles at him. \"That's great news!\"\n\n\"Yep,\" Jake agrees. \"And I need to go talk to my sneaky girlfriend about it. See ya, Somer!\"\n\n\"Huh,\" Somer asks wondering why Jake called Jessica sneaky. She calls out a belated goodbye to the closing door as Jake ducks quickly out so he can get to Biology class ahead of Jessica.\n\n****\n\nJessica walks into Biology chatting with Lee Ann and Dean when she sees Jake already seated at their table. She smiles at him but he doesn't return it causing her to worry.\n\n\"Hey, Jake,\" Dean calls out. \"Not in trouble are you?\"\n\n\"I'm not,\" Jake answers while staring at Jessica who is no longer smiling.\n\n\"Uh oh,\" Lee Ann states then looks at Jessica. \"What did you do, Jess?\"\n\n\"I don't know but I get the feeling I'm about to find out. Wish me luck,\" Jessica answers.\n\nThey nod and walk over to their desks as Jessica stops at hers, standing over Jake with a worried look on her face.\n\n\"What... uh... what's up?\" She asks.\n\n\"Anything you want to share with me, Jess?\" He asks her.\n\n\"Not if you don't clue me in at what I should be sharing, Jake.\" She answers.\n\nShe sits her books on the table and takes her seat beside him.\n\n\"A school has asked for my transcripts. One that I know I haven't applied to,\" Jake states. \"This ringing any bells for you, Jess?\"\n\n\"UCLA asked for your transcripts? What did Mrs. Santora say? What did UCLA say back? This is for real happening? Like for real, for real?\" Jessica rapid fires her questions revealing her excitement.\n\nShe's literally bouncing in her chair when Mrs. Harper enters her room.\n\n\"Is everything all right over there, Jessica?\" She asks.\n\n\"I think so. I hope so,\" Jessica answers with a big smile on her face. \"Jake, everything is all right isn't it?\"\n\n\"Yes, everything is fine even if you lied to me. I thought that we didn't do that, Jessica,\" He fake pouts at her.\n\n\"What I did was more of an omission than it was a lie,\" She defends herself.\n\n\"Omission, huh? Those are allowed?\" Jake asks.\n\n\"I didn't want to get anyone's hopes up if Ms. Langston wasn't able to come through for us,\" She explains. \"It sounds like she did though or at least she's trying, right?\"\n\n\"She's trying,\" Jake confirms. \"Who is this Ms. Langston anyway?\"\n\n\"Remember that tall blonde lady that came up and talked to me after we won the championship?\" Jessica asks. \"That was her.\"\n\n\"Wow, she was... uh...\" Jake starts to say before his brain catches up with his mouth.\n\n\"Gorgeous,\" Jessica laughs. \"You can say it, Jake. That woman is gorgeous!\"\n\n\"She reminded me of a future you,\" He states.\n\n\"I hope I look that good!\" Jessica comments.\n\n\"You already do,\" Jake says and gets a smile from Jessica.\n\n\"You're sweet,\" She tells him as the bell rings. \"I'll thank you and tell you more about this other Jessica after class. I am so excited something positive is happening with this!\"\n\n\"You are too cute at times,\" Jake chuckles as a few stragglers enter the classroom.\n\nMrs. Harper calls for attention and begins her lesson.\n\n****\n\nJake is laughing with Des, Antoine and Ray as the team are getting changed for practice when Coach Yates calls out to him.\n\n\"Jake, my office,\" He states.\n\nJake tugs his practice jersey on and grabs his helmet before heading into Yates office.\n\n\"Yes, Coach?\" Jake asks as he sticks his head in to doorway.\n\nPatrick is seated inside and he doesn't look very happy.\n\n\"You aren't planning on missing any practices this week right, Jake?\" Coach Yates asks.\n\n\"No, Coach,\" Jake answers.\n\n\"Good because we're going to run a two quarterback set this Friday,\" He explains. \"Patrick gets the start but I'll rotate you in and out as the game situation demands.\"\n\n\"Sounds good, Coach,\" Jake nods. \"I'm still with the defense at practice though?\"\n\n\"You are,\" Yates answers. \"They've been playing great and I want them to keep it up so you'll stay with them to keep them sharp. Got it?\"\n\n\"Yes, Coach,\" Jake answers.\n\nPatrick scowls but doesn't say anything. Jake figures that he was told of Yates decision first so he could pitch his fit in private.\n\n\"Dismissed,\" Coach Yates says to Jake who nods and heads out into the locker room just as Antoine is heading out the door.\n\n\"Hold up, Tank,\" Jake calls out then jogs to catch up with him.\n\n\"What did Yates want with you, Jake?\" he asks as the pair head towards the field.\n\n\"He wanted to make sure that I wasn't going to miss any practice this week,\" Jake answers.\n\n\"He's finally going to start you?\" Antoine asks. \"'Bout damn time, Jake!\"\n\n\"That wasn't it,\" Jake answers with a chuckle then explains what Coach Yates wanted.\n\n\"Man, that sucks but at least you're playing,\" He states.\n\n\"Yeah,\" Jake agrees. \"At least I'm playing.\"\n\n\"You're playing huh,\" Ray comments as the pair catch up to him. \"Guess that means I need to get ready to catch some of those ugly passes of yours.\"\n\n\"You'll have a lot of practice with Captain Wonderful over there throwing passes,\" Antoine laughs.\n\n\"Ugh, don't remind me,\" Ray shakes his head. \"Patrick know you're playing this week?\"\n\n\"We're swapping in and out and yeah, he was in Yates' office when I was clued in,\" Jake answers him.\n\n\"Well this practice is gonna be fun,\" Ray replies sarcastically.\n\n\"Enjoy, man,\" Antoine chuckles as Ray jogs over to join the offense.\n\nCoach Pennington has Jake throw a lot of short out route passes since their next opponent utilizes them. After ten minutes the first time receivers jog over to them.\n\n\"Guys,\" Coach Pennington greets them. \"What's up?\"\n\n\"Coach Yates sent us over,\" Ray tells him. \"They're working on mostly run plays so we're to swap out with your receivers so Jake will have his usual targets to throw to.\"\n\nCoach Pennington nods and swaps out the receivers then resumes practice. At the end of practice Jake asks the offense to hang around a little longer to work on a play he wants to try at the next practice. They agree and spend ten minutes working on it until they feel it's the best they can get it.\n\n\"We'll run it Thursday and see how it goes,\" Jake states as they jog off the field together.\n\n\"Coach Pennington is going to love this,\" Ray laughs then slaps Jake's shoulder pads. \"You are going to get creamed probably but that's half the fun.\"\n\n\"Just tell Staci to get the hot tub ready for me if I do,\" Jake tells him with a chuckle as they head into the locker room to change.\n\n****\n\n Wednesday \n\n\"So you're sure that you and Mrs. Santora got them all filled out correctly?\" Jessica asks as she and Jake are seated on his dining room table after school.\n\nTheir homework is strewn across the table in what they are calling organized chaos. Jake's mom took one look at it and shook her head.\n\n\"We really do have a system, Mrs. Gibson,\" Jessica explained to her.\n\nShe smiled at Jessica warmly and nodded before heading off to do laundry.\n\n\"I'm sure,\" Jake answers with a grin. \"We checked and double checked before we sent them off even.\"\n\n\"No triple check?\" She asks.\n\n\"No time for a triple check but I'm sure that Ms. Langston will clue us in for anything that we missed,\" He tells her and gives her a smile. \"It's going to be fine, Jess.\"\n\n\"I hope so, Jake,\" She answers him. \"I just really want you out there with me so any chance we have to make that a reality, I just want us to do all we can to make it happen.\"\n\nJake takes her hands and pulls her to face him.\n\n\"We'll figure out a way to make this happen, Jess,\" He states. \"We'll find a way.\" \n\n\"Even if you end up having to sell surfboards by the seashore?\" she asks trying to make a joke.\n\n\"Even if,\" He answers trying his best to sound more certain than he is.\n\nJake's dad is standing just outside the kitchen and overhears the conversation between the kids. He turns and heads upstairs into the bedroom and picks up his phone.\n\n\"Tim, it's Wes,\" He says into it.\n\n\"Hey, Wes, how is everything?\" Mr. Golden asks.\n\n\"Pretty good,\" He answers. \"Tim, how much do you know about the kids wanting to go off to the same college?\"\n\n\"Heard about that did you?\" He asks. \"Val overheard them talking last week about it and mentioned it to me. It's not the worst idea I've ever heard. We are quite fond of Jake.\"\n\n\"And we love Jessica but I'm just not sure how feasible it would be on our end,\" Mr. Gibson explains. \"Pam's accident a few years back forced us to dip into Jake's college savings and Jess is talking about California. I'm just not sure that can happen for Jake.\"\n\n\"Jessica came home all excited about some academic scholarships that Jake may be eligible for,\" Tim states. \"I'm sure that Jake will be able to get help there.\"\n\n\"That would be great if it happens but if it doesn't...\" Mr. Gibson states shaking his head. \"I just don't want them to be disappointed.\"\n\n\"Me either,\" He concurs. \"Wes, I have been working on something but I don't have anything set in concrete yet so I don't want to say much about it. Just know that there's things going on that may help make our kid's dream a reality. I'll let you know more when I get more information on it.\"\n\n\"That would be great, Tim,\" Mr. Gibson answers feeling a little relieved. \"I really appreciate it.\" \n\n\"And Val and I appreciate everything that you and Pam have done for Jessica and our family, Wes,\" He shares. \"You've made us all feel welcome here and Jake, what can I say about him that I haven't said already?\"\n\n\"Probably the same glowing things I could say about Jessica,\" Wes chuckles.\n\n\"Probably so,\" Tim laughs as well. \"I will keep you in the loop, Wes. As soon as I know anything, I'll let you know.\"\n\n\"I would appreciate that, Tim.\" He answers him. \"Thanks for letting me know. I'll talk at you later.\"\n\nAfter Jake drives Jessica home his dad calls him into the living room.\n\n\"Did I overhear you and Jess talking about you filling out forms for possible scholarships?\" He asks as Jake leans against the wall.\n\n\"We were,\" Jake confirms. \"Not sure anything will come from them but I took a shot.\"\n\n\"UCLA, huh?\" His dad asks.\n\n\"They've been after Jess since she was a sophomore and she got some paperwork today. She's got a full ride there,\" Jake answers. \"She's dreamed of going there since she was a freshman and it's happening for her.\"\n\n\"And part of getting her is them trying to get you too?\" He asks.\n\n\"Ms. Langston, she's part of Jessica's recruitment, said that she would do what she could and so far she has,\" Jake tells him. \"She got my academic transcripts and my extra curricular records and passed them along. They were impressed enough to send out some forms for me to apply. Mrs. Santora and I filled them out today and sent them back.\"\n\n\"When will you hear back on it?\" His dad asks.",
        "\"They figure a month or so before they make their final decisions,\" Jake answers.\n\n\"And if for some reason they don't come through for any reason? Have you got a worst case scenario plan?\" He asks.\n\n\"Learn to surf,\" Jake jokes.\n\n\"Pardon,\" his dad asks confused.\n\n\"I plan to try to get a job selling surfboards and it was pointed out that I couldn't possibly sell something that I hadn't tested so I have to learn to surf,\" Jake explains then shakes his head. \"Sorry, dad, it was just a dumb joke.\"\n\n\"It's not that bad,\" His dad chuckles. \"Plus it's not a terrible idea since you'll be on the west coast. Surfing is kind of mandatory as I understand it.\"\n\n\"If I make it,\" Jake sighs.\n\n\"Have a little faith, son,\" he tells him with a smile. \"If there's a way to work this out, we'll figure it out. Between your mom and I, Jess, her parents and that feisty little Sarah of theirs I promise you that we'll all figure it out.\"\n\n\"I know that you will, dad,\" Jake nods then begins to head to his room but stops on the stairs and looks back. \"And, dad, thanks.\"\n\nHis dad nods then watches as Jake bounds up the stairs all the while hoping that Jessica's dad is able to work out whatever it is he has cooked up.\n\n****\n\n Friday December 1st \n\nJessica is standing in the school parking lot beside the bus that is taking Carter students to the playoff football game in Raleigh.\n\n\"She's not showing, Jess,\" Shelly states as she leans out the window.\n\n\"She'll show,\" Jessica answers while fighting the urge to check the time again.\n\nA car hurriedly pulls into the parking lot and takes an available spot. Jennifer hops out, followed by her friend Amy then a tall, raven haired girl. The trio walk tentatively towards Jessica who waves at them with a smile on her face.\n\n\"Hey, Jessica,\" Jennifer calls out as they get closer. \"We're late, I know that we're late but traffic getting out of the parking lot was a nightmare.\"\n\n\"Hey, Jen, it's all good,\" Jessica assures her then nods at Amy. \"Amy, right?\"\n\n\"You got it,\" Amy smiles. \"Hey, Jessica. It's nice to see you again.\"\n\n\"It's great to have you along, Amy. So that would make you, Marie,\" Jessica says to the quiet girl.\n\n\"That's me,\" Marie responds with a smile. \"Thanks so much for suggesting this! I've wanted to talk to Jamie again ever since I met him and to get to see him play is... well it's gonna be amazing!\"\n\nJessica giggles at her enthusiasm and nods towards the bus.\n\n\"He's one of our best and we're glad to have you along to see him, Marie. I'm happy to help you out so let's hop on then. We've got seats saved for all of us and the team bus just left a few minutes ago.\" She tells them.\n\nJennifer feels the stares as soon as she boards the bus behind Jessica and begins to feel uneasy.\n\n\"Maybe my coming was a bad idea,\" She comments to Amy.\n\n\"You think?\" Tonya states with a glare.\n\n\"Tonya, be nice,\" Tabitha tells her sister as Jessica takes the seat behind the twins.\n\n\"Jen, you sit with me and, Amy, you and Marie can sit across the aisle,\" Jessica tells them.\n\nThe girls follow Jessica's suggestion at seating and soon the bus is underway.\n\n\"Thanks again for doing this, Jessica,\" Jennifer says as the bus rumbles down Hwy 65.\n\n\"It's fine, Jenny,\" Jessica answers. \"Jamie did a nice thing for Jake so this is us returning the favor.\"\n\nJennifer shakes her head. \"Jamie doing something nice for Jake? Just when I thought that the Jake and Staci thing would be the strangest thing I would see! I cannot believe how much has changed since I left,\" She comments.\n\nIt's been a pretty great year so far,\" Jessica agrees.\n\nJennifer is quiet for a few minutes trying to work the nerve to ask Jessica a question.\n\n\"Um, Jess, can I ask you question?\" She asks. \"It's kind of personal... okay it's like really personal but it's been bugging me since I called Jake out of the blue.\"\n\n\"You can ask anything but I might not answer,\" Jessica answers.\n\n\"I get that,\" Jennifer quickly assures her. \"It's just... well... how is the... um... sex with Jake?\"\n\n\"Un-fucking-believable,\" Tonya comments.\n\n\"I'm so sorry. I shouldn't have ever asked that,\" Jennifer apologizes thinking she's offended them but she notices that Tabitha is giggling while Jessica is shaking her head.\n\n\"I think my sis was answering your question, Jenny, not criticizing you for asking,\" Tabitha giggles.\n\nTonya turns in her seat so she can look at Jess and Jenny.\n\n\"I totally was answering you,\" Tonya laughs. \"That's how our naughty Jess here described it to us.\"\n\n\"I don't think that was the word I used exactly,\" Jessica says shaking her head.\n\n\"Maybe not but that's what all of us interpreted from your blushing and bragging about it.\" Tonya laughed.\n\n\"I was not bragging!\" Jessica argues then looks at Jenny who is trying not to laugh. \"There was no bragging.\"\n\n\"From what I was hearing she has every right to brag about it,\" Jennifer stated.\n\n\"The blow job thing you heard? That was pretty wild of Jessica,\" Tabitha says. \"We couldn't believe she actually did it!\"\n\n\"I can confirm for you that she did indeed do it,\" Jennifer answers with a wicked smile.\n\n\"My girl claimed her man,\" Tonya laughs.\n\n\"Oh she sure did but I meant what happened she gave her performance,\" Jennifer says.\n\n\"Afterwards?\" Jessica asks.\n\nJenny smiles and leans in so she can whisper in Jessica's ear.\n\n\"Give it all to me Jake. That feels so much deeper but so good!\" Jennifer whispers with a giggle.\n\nJessica blushes even deeper which isn't missed by Tonya.\n\n\"Oh my God, Jen, what did you tell her! I've never seen Jess turn so red before!\" Tonya exclaims.\n\n\"I think that Jess meant to hang up after the blow job but kind of didn't so I uh... heard everything,\" Jennifer announces so Tonya and Tabitha can hear. \"It sounded like it was really enjoyable.\"\n\n\"I need to hear everything about this, Jenny!\" Tonya announces.\n\n\"Same!\" Tabitha jumps in.\n\n\"What are you all talking about?\" Amy asks. \"You're all so excited and Jessica is so red!\"\n\nTonya proceeds to tell her and soon both Amy and Marie are moving so they can get told the story as well.\n\n\"Oh god,\" Jessica sighs as she sinks back into her seat realizing that it's going to be a long ride to Raleigh.\n\n****\n\nThe Wildcats win the coin toss and elect to put their defense on the field first. Jake is tossing a ball to Ray to keep his arm warmed up when he hears his name being shouted from the bleachers. He turns and sees Jessica waving at him. He waves back then nods when she points to the dark haired girl standing beside her. Jake holds up his index finger for Marie then jogs over to find Jamie.\n\n\"Hey, Jamie,\" Jake calls out when he finds Jamie is watching the teams line up for the kick off.\n\n\"What's up, Jake?\" He asks.\n\n\"Got someone that wants to say hey to you before the game starts,\" Jake tells him as he nods towards the stands.\n\nJamie turns and spots Jessica easily. She waves then points to the girl standing with her. It takes Jamie a second to realize who the girl is but then he smiles in recognition.\n\n\"Dude, that... that's Marie,\" He tells Jake. \"How is she here?\"\n\n\"Turns out she's been looking for you,\" Jake answers. \"I'll explain the how later but right now you owe Marie that smile and a wave so she knows you're still interested. She's very cute.\"\n\n\"Dude, I know! I owe you, Jake! You and Jess both!\" He says with a big grin.\n\nJamie immediately turns and waves at Marie who smiles shyly as she waves back.\n\n\"Now what?\" He asks Jake.\n\n\"Now, we go out and win this game so you have something to celebrate with her when we get back home,\" Jake tells him.\n\n\"Hell yeah,\" Jamie states as he dons his helmet. \"We've got this!\"\n\nJamie's play proves his statement on the field during the Hickory Road Raptors first possession. He's in on two tackles for losses and sacks the quarterback on a third and long play. He jogs off the field as the Raptors line up to punt and gives another wave towards Marie. She smiles down at him then goes back to cheering for the Wildcats as Des returns the punt twenty five yards.\n\n\"It's on you now, Jake,\" Jamie states as he slaps his shoulder pad.\n\n\"Patrick!\" Yates calls out and Patrick jogs onto the field with the offense.\n\n\"Oh man, what the hell?\" Jamie asks. \"I thought Coach was giving you a shot, Jake?\"\n\n\"He said that he would swap Patrick and I as the game situation dictated,\" Jake tells him. \"I had a feeling that Patrick would start. I may not even get sent in unless we fall behind.\"\n\n\"That's crap,\" Jamie comments.\n\n\"Coach doesn't want to hear Patrick cry about not getting to start,\" Des states as he walks over. \"Then again none of us want to hear it either. It's gonna be a long enough bus ride back when he puts Jake in anyway.\"\n\nJake chuckles as they turn their attention to the field. Patrick hands the ball off to Kendall who rips off a five yard gain on first down. A sweep on second down only garners the Wildcats two yards bringing up third and three. Yates glances over at Jake but doesn't send him. At the snap, Patrick drops back then dumps a screen pass off to Kendall who makes the first tackler miss gaining eleven yards on the play. With a series of runs and a couple of short passes the Wildcats march down the field until Patrick calls his own number and dives in for a touchdown on a goal line dive. He jumps up and pumps his arm enthusiastically but the offense ignore his grandstanding and jog off the field. \n\n****\n\nJake spends the rest of the first half on the sidelines tossing the ball to the receivers to keep himself loose but as the game goes on he realizes that he might as well stop. Yates hadn't called for him at all and the Wildcats play calling and the defense have put them up by three touchdowns as halftime approaches.\n\n\"This is bullshit,\" Ray comments as he and the rest of the offense sit on the bench around Jake. \"He said that you'd be out there!\"\n\n\"We're winning,\" Patrick sneers as he gets water from the cooler. \"We don't need Mr. Miracle Arm out there to save your sorry asses for once!\"\n\n\"Patrick, why don't you sit with your friends,\" Ray comments and points to the empty end of the bench. \"They look like they miss you.\"\n\nPatrick flips him off but walks away leaving them with Jake.\n\n\"He's not wrong,\" Jake says once he's gone.\n\n\"That you've got a miracle arm,\" Mitch chuckles. \"Thought you didn't have an ego, Jake.\"\n\n\"I know that he wasn't agreeing with him about our asses,\" Monte chimes in. \"I have it on good authority that I've got a pretty nice ass.\"\n\nJake and the rest laugh as Monte turns and shakes his rump at them.\n\n\"Dude, we believe your mom. You have a great ass,\" Jake jokes.\n\n\"Man, you know that it was your girl that told me that, Jake,\" Monte counters playfully.\n\n\"She does have good taste,\" Jake laughs.\n\n\"And an amazing ass,\" Ray comments. \"I'm sorry, Jake, but damn, it's near perfect!\"\n\n\"Just like Staci's,\" Jake states with a grin.\n\n\"I still can't believe that she flashed you,\" Ray says. \"I mean I can because it's Staci but you know what I mean.\"\n\nJake nods his head as, on the field, Jamie sacks the Raptors quarterback for the third time of the night as the clock clicks down to half time. The Wildcats head to the locker room up twenty one to nothing. Coach Yates stops Jake as he starts to pass him on the way inside.\n\n\"A second, Jake,\" Yates states.\n\n\"What's up, Coach?\" Jake asks.\n\n\"Jake, I know that I said that I was going to swap you and Patrick out but...\"\n\n\"But you stick with the hot hand,\" Jake says with a nod. \"I know that, Coach.\"\n\nYates grunts out, \"I'll get you in at some point,\" then nods dismissively so Jake walks into the locker room nearly running into Coach Pennington as he does so.\n\n\"Not sure I'd call anything Patrick is doing out there  hot ,\" Coach Pennington says to Jake as he passes.\n\n\"Maybe not but we are winning and that's all that matters, right?\" Jake asks.\n\n\"Winning is one thing while doing the right thing is something else, Jake,\" Coach Pennington tells him.\n\n\"I'll remember that, Coach,\" Jake tells him then goes to sit down for Yates half time speech.\n\n\"Defense,\" He begins as everyone quiets down, \"you guys are doing a great job of shutting down their offense. We've got ourselves a nice lead but I don't want anyone letting up. Two more quarters like the first two and we're playing for the state championship next week.\"\n\nYates pauses to take a sip of water before continuing.\n\n\"Offense, you're looking better this week but you can do better. We've got this team on the ropes so we're running clock. We need first downs out there so let's go get'em!\"\n\n****\n\nThe Wildcats take the field in the second half and the offense executes Coach Yates plan which nets them another touchdown on their opening drive of the second half when, after using Kendall to get them all the way down to the three yard line, Patrick calls his own number and struts into the end zone. His showboating afterwards is again ignored. The defense keeps the Raptors shut down with Jamie and Antoine leading the way with tackles and sacks. The Raptors are forced to punt the ball from their own end zone with just under a minute left to play.\n\n\"Jake,\" Yates calls out as Des calls for a fair catch at the seventeen yard line. \"Head out there and finish this thing off for us.\"\n\n\"Sure thing, Coach,\" Jake answers.\n\nHe dons his helmet and jogs out with the rest of the offense.\n\n\"Welcome to the game finally, Jake,\" Ray states.\n\n\"Yeah, just in time to hand off twice then take a knee,\" Jake states. \"At least I won't have to wash my uniform this weekend. Kendall, we'll do dive right on one.\"\n\n\"That's about all I can give you, Jake,\" Kendall states. \"I'm spent.\"\n\n\"You've had us on your back for the whole game, Kendall,\" Mitch tells him. \"It's no wonder you're gassed.\"\n\n\"Just a couple more plays, Kendall,\" Jake assures him as he breaks the huddle.\n\nThe team lines up on the ball and Jake shouts out the cadence. The center snaps the ball into his hands, Jake takes a step to the side and buries the ball in Kendall's stomach. Kendall lowers his head and pushes forward for a couple of yards before being tackled by half the Raptors defense. Jake watches the clock ticking down as he forms the huddle.\n\n\"Kendall, how you feeling?\" Jake asks him.\n\n\"Good to go, Jake,\" Kendall answers.\n\n\"One more play and we're done. Got it in you?\" Jake asks.\n\nKendall nods but looks winded which gives Jake pause.\n\n\"How do you feel about running an option here,\" He asks.\n\n\"Looking for a little glory, Jake?\" Kendall chuckles.\n\n\"My ego is a little bruised since I haven't got to play,\" Jake chuckles. \"Shotgun formation, run option to the left on two.\"\n\nThey break the huddle and Jake lines up in the shotgun position with Kendall standing to his right. Jake watches the clock ticking down and calls for the snap with two seconds on the play clock. He catches the snap then breaks left. Kendall takes off just to his left and the pair run parallel to the line of scrimmage as the line pulls to block for them. One of the Raptor defenders breaks through the line and takes a step towards Jake. Jake makes to pitch the ball to Kendall and the defender momentarily freezes from indecision. He decides to go for Kendall as he's the one that has gashed their defense all night long and leaps for him. Jake keeps the ball, however, and takes off up the hole left in the defenders wake. Most of the Raptor defense converge on Kendall leaving Jake to run up field alone. Kendall is tackled behind the line of scrimmage and it's then the Raptor realize that he doesn't have the ball. They start to pursue Jake whose legs are churning towards the end zone. He's twenty yards ahead of most of the defenders when they start to try to chase him down. Jake angles towards the sideline still keeping an eye towards the ticking time clock. In front of him is the end zone but when he sees the clock tick to under thirty seconds left he slides down at the Raptors six yard line.\n\n\"What was that?\" Ray asks as the team huddle up.\n\n\"The ballgame,\" Jake answers nodding towards the clock.\n\n\"Well yeah but why not score?\" Kendall asks.\n\n\"We're up by three touchdowns,\" Jake answers. \"Why make it four with so little time left? We've won. Why rub it in?\"\n\nKendall shakes his head and laughs.\n\n\"Jake Gibson, sportsman of the year, guys,\" Mitch laughs.\n\n\"Victory formation on one, funny guys,\" Jake says as they break the huddle and walk to the line. Jake takes the snap then kneels down as the clock ticks out its last few seconds.\n\nAfter the teams slap hands Coach Yates pulls Jake aside as the team is heading to the locker room.\n\n\"Didn't feel the need to score there, Jake?\" Yates asks.\n\n\"Just wanted to get us the win, Coach,\" Jake answers.\n\n\"Nice heads up play and it didn't go unappreciated just so you know,\" He tells Jake. \"Now it looks like you have a few friends that want a word with you but make it snappy. Bus leaves in twenty.\"\n\n****\n\n\"You um... played really great, Jamie,\" Marie tells him as she, Jennifer, Amy, Jess and Staci meet the team as they head to locker room to shower.\n\n\"Thanks, Marie,\" Jamie smiles at her. \"I can't believe that you're here but here you are!\"\n\n\"Here I am,\" Marie smiles at him warmly.\n\nJamie smiles back her then they both start talking at the same time only to stop then start again before laughing together.\n\n\"Cute huh?\" Jessica asks Jake as they stand off to the side watching them.\n\n\"Very,\" Jake agrees as Jennifer walks over to join them.\n\n\"Hey Jake,\" Jennifer says with a smile. \"Planning to stay over at Staci's again anytime soon?\"\n\n\"She heard us. The whole ending thing,\" Jessica explains as she again blushes.\n\n\"The whole... thing,\" Jake asks feeling his own cheeks flush red.\n\n\"All of it and I hate I missed out on my chance with you, Jake,\" Jennifer smiles. \"It sounded like it was very fun for you both.\"\n\n\"It really was,\" Jake smiles at the memory then nudges Staci with his arm. \"Hey, when are we invited to come back over again?\"\n\n\"Anytime you want, Jake,\" Staci answers with a giggle. \"You know that!\"\n\n\"After next weeks championship game for sure,\" Ray chimes in. \"We'll definitely have something to celebrate then.\"\n\n\"And I should be well rested,\" Jake comments.\n\n\"Yates is going to play you next week, Jake. He won't have much choice,\" Ray says.\n\n\"If he wants a chance to win at all he'll have to play you some, Jake,\" Jamie agrees. \"We've got the number one D in the state but we'll be going up against the number one offense. That game begs to be a shoot out and you're our guy if it comes to that.\"\n\n\"We'll see, Jamie,\" Jake states.\n\nThe guys excuse themselves to go shower but only after Jamie makes plans to meet up with Marie once the buses get back to Carter.\n\n\"Dude, I cannot believe that you two went and got Marie for me,\" Jamie shouts over the sound of the shower.\n\n\"Well she kind of came to us,\" Jake shouts back from where he's getting dressed. \"I mean Jenny came to me because Marie had come to her, Jess answered my phone and well, yeah it sounds complicated but it worked out and that's all that matters.\"\n\nJamie shuts off his water and walks out with his towel around his waist.\n\n\"Yeah it is but I can't thank you both enough,\" He tells him.\n\n\"Are you kissing Jake's ass now too?\" Patrick asks as he exits the shower. \"It figures that a loser like you would end up on the side of the king of the losers.\"\n\n\"Fuck off, Patrick,\" Jamie says.\n\n\"Big man now that Jake got that little bitch you were whining...\" Patrick begins to say but is cut off when Jamie turns and slams him into the lockers.\n\n\"Call her a bitch again, asshole!\" Jamie shouts and cocks his fist back.\n\nThe anger that blossoms on Jamie's face causes real fear to alight in Patrick's eyes when he realizes his past friendship with Jamie won't save him now. Patrick closes those eyes and waits for Jamie's fist to crash into his face but Jake jumps up and grabs Jamie's arm before he can let his fist fly.",
        "\"He's not worth it, Jamie,\" Jake tells him as he continues to pull the large teen from his ex-friend. \"He doesn't even know Marie's name. He's just being an asshole because that's what he is. You punch him now and you lose. Not him.\"\n\nAntoine rounds the corner of the lockers upon hearing the commotion. He grabs Jamie's other arm and helps Jake pull him away from Patrick.\n\n\"Listen to Jake, man,\" Antoine tells Jamie. \"Patrick runs off at the mouth about a lot of things that he knows nothing about. Don't let his mouth get you in trouble anymore.\"\n\n\"It figures that the two of you would puss out and not let that big dummy take a swing at me,\" Patrick taunts gathering his bravado back now that Jamie is being restrained. \"I think I'll take a run at your little bitch, Jamie. Show her what a real man is like I showed that Jenny whore of Jake's. Then I'll get Jessica and...\"\n\nThat's all he gets out before a fist solidly connects with his jaw. The force of the punch slams him back into the lockers and he slides to the floor, holding his jaw and looks up at Jake standing over him. Patrick isn't sure what's shocked him more, the punch itself or the person who threw it. Jake is rubbing his right hand absentmindedly but his eyes are glaring down at Patrick's nearly prone form.\n\n\"That was for what you did to Jenny,\" Jake tells him. \"Make sure that you keep Marie and Jessica's names out of your damn mouth from here on out.\"\n\n\"What in the hell is going on over here?\" Coach Yates asks as he and several team members rush over after hearing the clang of metal as Patrick slammed into the lockers.\n\n\"Jake punched me!\" Patrick says immediately as he points accusingly at Jake.\n\n\"That's not what I saw,\" Jamie states with a grin. \"Patrick slipped and fell into the lockers.'\n\n\"That's what I saw, Coach,\" Antoine backs him up. \"I think he hit his jaw on the bench when he fell.\"\n\n\"That's bullshit!\" Patrick yells. \"He punched me!\"\n\nYates looks at Jake, Jamie and Antoine then at Patrick before making a decision.\n\n\"Patrick, be more careful in the future,\" He tells him. \"These floors can be slick. Everyone else, let's get to the bus. It's a long ride home.\"\n\n****\n\n Saturday \n\n\"How's your hand,\" Jessica asks as they sit at a booth in Smitty's with Staci and Ray.\n\n\"It's still fine,\" Jake tells her before popping a fry into his mouth.\n\n\"Why couldn't someone get a video of that?\" Staci asks as she sips her hot cocoa. \"Jake punches out Patrick and no one saw it!\"\n\n\"Jamie saw it and so did Antoine. Man, I hate that I missed it, Jake,\" Ray says as he unwraps a hot dog from it's wrapper. \"They said the look on Patrick's stupid face was priceless.\"\n\n\"It was pretty great,\" Jake admits with a grin.\n\n\"Can the two of you stop praising him for punching out Patrick,\" Jessica asks them as she pulls a fry from Jake's tray. \"He does the smart thing by keeping Jamie off Patrick but then he punches him and risks getting suspended himself. He cannot do something stupid like that again.\"\n\n\"Once was enough, Jess, believe me,\" Jake assures her while giving her puppy dog eyes. \"No more punching from me.\"\n\n\"Better not be,\" Jessica states waving the fry at him. \"You are on track for at least a couple of scholarships. You can't throw them away over something dumb like fighting.\"\n\n\"I promise no more dumb stuff,\" Jake assures her with a wink.\n\n\"I'm remembering that you said that, Jake\" Jessica teases him.\n\nThe door to Smitty's opens and in walks Jamie arm in arm with Marie followed by Jennifer holding hands with a guy wearing glasses. Jamie spots them and gives a wave followed by the others. Marie and Jennifer give their orders to Jamie and the other guy then walk over to the foursome's booth.\n\n\"Hey guys,\" Jennifer says. \"It's kind of funny running into you all here.\"\n\n\"They have the best fries,\" Jessica comments as she pops one into her mouth.\n\n\"Oh my god, I know right!\" Jenny exclaims. \"Marie here has never had any. Can you believe it?\"\n\n\"Help yourself, Marie,\" Jake says as he nudges his tray towards the girls. \"You too, Jenny.\"\n\nMarie hesitates for a second but Jennifer grabs a couple and hands her one anyway.\n\n\"Still a sweetheart huh, Jake,\" Jenny says then pops the fry into her mouth.\n\nMarie takes a bite and her eyes light up at her first taste.\n\n\"Wow, these are yummy,\" She says as she eyes Jake's plate.\n\n\"Go ahead,\" he tells her.\n\nShe reaches down and grabs another. Staci reaches over and grabs one for herself.\n\n\"Not you, Staci,\" Jake laughs.\n\n\"Payback, Jake,\" Staci laughs.\n\n\"I cannot get over you guys, you two especially,\" Jennifer says at Jake and Staci. \"I never thought that I'd see a day where you two were friends but you two went well beyond that! My eyes nearly bugged out of my head when I saw you kiss him at that volleyball game!\"\n\n\"Jake just can't resist these lips of mine,\" Staci says with a big smile. \"He loves me.\"\n\n\"He should really love you,\" Jessica states. \"You did flash him after all.\"\n\n\"She did what now?\" Jennifer asks.\n\n\"Flashed him. Showed Jake my goodies. Gave him a little peek behind the curtain so to speak.\" Staci giggles.\n\n\"I definitely didn't see a curtain,\" Jake states flushing red but with a grin teasing the corners of his mouth.\n\n\"You saw everything else though you stud,\" Staci teases him.\n\n\"Ray accidentally saw me, uh, naked one night so Staci thought that the guys should be even,\" Jessica explains to the confused Jennifer and Marie. \n\n\"So I yanked my robe open and let Jake get a nice, long look at me,\" Staci smiles. \"Even shook my tight little booty at you didn't I, Jake?\"\n\n\"Strange things happen when you stay the night at Staci's,\" Ray adds.\n\n\"Wow, it really sounds like it does,\" Jennifer comments.\n\n\"What does, Jenny?\" the guy with glasses asks as he joins her with a plate of food.\n\n\"It was Ray that said it, I was just agreeing,\" Jennifer tells him. \"Guys, this is Tommy. Tommy, that's Ray, Staci, Jake and Jessica.\"\n\n\"Nice to meet you all,\" Tommy says. \"Jake? That would make you Jenny's ex, right?\"\n\nJake nods. \"I am. Jenny's a really special girl, Tommy. You take good care of her.\"\n\n\"No doubt,\" Tommy nods.\n\n\"Wow, I never thought I'd hear you say that about me, Jake,\" Jennifer tells him.\n\n\"Probably never thought that he'd punch Patrick out over you either, Jenny, but one shot and POW! Patrick's on his butt and holding his jaw looking up at Jake,\" Jamie says as he joins them.\n\n\"Jamie, I just told these two to not glorify Jake punching Patrick and here you come,\" Jessica tells him.\n\n\"Sorry, Jess, but it was just too perfect,\" Jamie apologizes.\n\n\"You... you really hit Patrick?\" Jennifer asks.\n\n\"He really did,\" Jamie answers. \"I was about to but Jake stopped me. Patrick said... well it wasn't a very nice thing and then, Wham! He stood over him and told him that was for what he did to you and to keep Marie and Jess's name out of his mouth. I freaking loved it!\"\n\n\"You said that, Jake?\" Jennifer asks and Jake nods at her sheepishly.\n\n\"Wow, things really have changed this year,\" She states then gives the table a smile. \"We should eat but it was great seeing you all.\"\n\n\"Nice seeing you too and great to meet you, Tommy,\" Jessica says.\n\n\"Yeah you guys should eat while it's nice and warm,\" Jake tells them.\n\n\"Especially the fries,\" Marie giggles.\n\n\"Definitely the fries,\" Jamie says as he walks over.\n\nHe looks at the table where the group is sitting and notices the salt and pepper shakers along with the ketchup bottle and a few packets of sugar are lined up like a football play.\n\n\"Anything I should be worried about, guys,\" He asks with a grin.\n\n\"Jake should be the one that's worried,\" Ray answers. \"He's the one that's gotta try and run it at practice in front of Yates and Pennington.\"\n\n\"No spoilers then,\" Jamie laughs. \"I want to see this develop in real time.\"\n\n\"It's not that bad,\" Jake says as he slides the salt shaker out of position then back. \"Okay, maybe it's kind of bad but I think it could work.\"\n\n\"Well I for one will take that brain and arm of yours over Patrick's any day of the week,\" Jamie tells them. \"Now, I gotta get into these hot dogs or something bad's gonna happen.\"\n\n\"See you guys later,\" Jake says and gives a wave to them as they take a seat at their table.\n\n\"I don't know about you guys but I am ready to hit the road like now,\" Staci states.\n\n\"You just want to get back to your house and get Ray naked,\" Jessica laughs.\n\n\"I'd like to get Jake naked too,\" Staci teases. \"He does owe me a little peek after all. You know, now that I think about it, Ray here owes you a little peek himself.\"\n\n\"Oh no, not happening,\" Ray tells her.\n\n\"What he said,\" Jake laughs.\n\n\"You guys had better bring your A game to the strip Jenga tower then,\" Staci laughs.\n\nRay nudges Jake and laughs.\n\n\"Good thing I've been catching your crappy passes all year, Jake,\" Ray states. \"These hands are golden.\"\n\nJessica shakes her head and holds up her hands. \"These are  Golden  hands you goof,\" She laughs. \"You two will be naked and complaining in no time!\"\n\n\"Big talk, Jess,\" Jake says with grin. \"You know how distracted that you and Staci get when we're kind of naked. We've got this, Ray.\"\n\n\"Heck yeah we do,\" Ray laughs.\n\nThe pair high five as they get up to leave. They all waves towards the other foursome before heading out to find out just which team are the strip Jenga champions.\n\n****\n\n Tuesday \n\nOn the auditorium stage Patrick is running through his lines with Ms. Simpson and his understudy after school while Jake is seated up in the balcony with his laptop running through a lighting sequence when Ms. Simpson calls out.\n\n\"Okay, both of my football guys need to get moving,\" She says. \"I promised your coaches that I'd have you out of here so you aren't late to practice.\"\n\n\"Two seconds, Ms. Simpson,\" Jake calls down.\n\n\"Jake,\" She calls back as Patrick hops off the stage and heads out.\n\n\"Seriously, two seconds,\" Jake answers then shows Bobby the sequence again.\n\n\"Dude, I got this,\" Bobby tells him. \"Get moving!\"\n\nJake nods but then points at another key sequence which gets his hand slapped. The noise resounds through the auditorium as Jake pulls it back, rubbing it.\n\n\"I owe you, Bobby!\" Jessica calls out as she emerges from backstage with the Belle costume she's working on in her hands. \"Don't make me come up there, Jake!\"\n\n\"I'm going, Jess. I'm going,\" Jake calls out and makes for the stairs.\n\nHe hurries out of the auditorium and towards the locker room. Patrick smirks at him as he's exiting the locker room but Jake ignores him as he steps past him. Jake changes into his practice gear quickly and rushes out to the field.\n\n\"You're late,\" Yates shouts as Jake jogs onto the field.\n\n\"Sorry, Coach,\" Jake calls back. \"Got hung up with play practice.\"\n\nYates nods then jerks this thumb towards the track.\n\n\"Gimme a lap for being late and make it a quick one,\" He grumbles. \"Then get back over here and get your arm warmed up.\"\n\nJake nods, dons his helmet and starts to jog around the track. As he's running he passes the cheerleaders and their practice on the far side of the field when Staci calls out to him.\n\n\"Looking good, Jake,\" She says then giggles. \"Not as good as you did Saturday night but I'll always have the memories!\"\n\nStrip Jenga, as it turned out, was not Jake's game. Jessica's  Golden hands  and Staci's taunting had him and Ray down to their underwear in record time.\n\n\"So will I, Staci,\" He calls back as he passes the squad.\n\nThe Jenga game wasn't a total bust for him and Ray however. They fared better in the second round and had Staci down to her pink thong and Jess in her white one before the game was called so the extremely horny couples could retire to the bedrooms.\n\nSeveral girls giggle while Michelle and C.C. whistle appreciatively in his wake.\n\nHe shakes his head as he hears Staci burst out laughing before calling the girls back to practice. As Jake is completing his lap he notices that the whole team is practicing together as he jogs over. Coach Pennington grabs a ball and tosses to Jake as he walks up.\n\n\"Get your arm loose, Jake,\" He tells him.\n\n\"All of us together huh,\" Jake asks.\n\n\"We're going up against the number one offense and number two defense in the state, Jake,\" Pennington states. \"We're pulling out all the stops for this one.\"\n\nJake nods and begins to toss the ball to one of the third string receivers.\n\n\"Jake!\" Yates yells after a few minutes. \"Get in for Greene!\"\n\nJake nods and hustles onto the field.\n\n\"You guys miss me or what?\" He asks as he gets into the huddle.\n\n\"We're running that play of yours this week right,\" Kendall asks ignoring Jake's question.\n\n\"Soon, Kendall,\" Jake answers. \"Let's not get me kicked out of practice on my first play, huh? Shotgun formation, Cross out on two. On two.\"\n\nThe offense lines up and the defense shifts to cover a pass play. Jake barks out his signals and the ball is snapped. Des gives Monte a bump at the line which throws off his timing. Ray gets five yards down the field and curls back towards Jake. Mitch and Scott cross each others route which opens a small gap between them and their defenders. He steps up into the pocket and fires a strike towards Mitch. He snags it from the air and manages another couple of yards before he's tackled.\n\n\"Twelve yard gain,\" Pennington calls out. \"Not great D! Pick it up out there!\"\n\nJake looks to see if Coach Yates is going to send Patrick back in for the next play.\n\n\"Let's see another one, Jake!\" Yates shouts out.\n\nJake nods and goes into the huddle.\n\n\"We gotta run your play now, Jake,\" Ray insists.\n\n\"Before Captain Wonderful gets put back in,\" Kendall agrees nodding towards an impatient looking Patrick. \"Let's see what we can get out of it.\"\n\nJake sighs but nods his head.\n\n\"We'll audible into it. I call Cat two and we shift into position. Everyone remember what they're doing?\" Jake asks and the offense nods. \"All right, on Kendall's go then.\"\n\nThey break the huddle and Jake lines up in the shotgun formation with Kendall to his left. He looks over the defense and spots Jamie and Antoine cheating towards the line.\n\n\"Looks like they're coming,\" He says to Kendall who nods his head. \"You ready for this?\"\n\n\"Let's do it,\" Kendall says with a smile then puts his mouthpiece in place.\n\n\"Cat Two!\" Jake shouts then jogs over to a receiver's position to the right of the line.\n\n\"What the hell is this?\" Yates asks.\n\n\"Nothing I've seen yet,\" Pennington answers.\n\nAntoine shifts over to cover Jake leaving an opening in the defense.\n\n\"Set,\" Kendall shouts and stomps his foot.\n\nJake backs up and goes into motion towards the left side of the field where the other receivers are stacked up. He goes behind Kendall who shouts for the snap. The ball is centered to Kendall who, along with Jake, runs to his left. Antoine slips his blocker and is in the backfield. Kendall flips the ball to Jake as Antoine hits him. Jamie has slipped his block and is in the backfield. He spies the flip and makes for Jake who now has the ball. Jake turns up field, plants his foot and heaves a long pass towards a streaking Monte just as Jamie tackles him. Monte hauls in the ball in what would have been a touchdown.\n\n\"Jamie!\" Pennington shouts. \"What have I told you about...\"\n\nJake is holding his hand up towards Jamie who grabs it and helps Jake to his feet.\n\n\"You all right, Jake?\" He asks as Pennington reaches them.\n\n\"Man, you've hit me way harder than that before,\" Jake laughs then notices Coach Pennington there. \"Hey, Coach.\"\n\n\"You all right, Jake?\" He asks.\n\n\"Yeah, I'm great, Coach,\" Jake answers. \"I was a runner anyway so Jamie was right to lay me out.\"\n\n\"I was very gentle, Coach,\" Jamie says with a laugh of his own. \"Jake and Jess did me a huge favor so I kind of can't cream him like I used to.\"\n\n\"My gentlest tackle all year,\" Jake says slapping Jamie's shoulder pads.\n\n\"With your Jess I kind of believe you, Jake,\" Jamie jokes.\n\n\"She's a Wildcat!\" Antoine shouts with a laugh.\n\nJake nods and laughs while Coach Pennington shakes his head.\n\n\"Jake, over here! Now!\" Coach Yates shouts.\n\nJake nods, gives Ray and Kendall an  I told you so  look then jogs back off the field as Patrick jogs back on.\n\n\"What in the hell was that?\" Yates asks Jake.\n\n\"Just this play that we've been working on after practice, Coach,\" Jake admits. \"We thought it'd be fun to run.\"\n\n\"I'm not a fan of gimmick plays, Jake,\" Yates states as Patrick runs a simple sweep on the field. \"That said, I'm not a fan of losing either so keep that play in your hip pocket for Friday night. We might just need it against these guys.\"\n\n****\n\n Friday December 8th \n\nThe pep rally for the football is a raucous affair that follows the team out into the parking lot and onto the team bus. Staci and the cheer squad seems to have tripled in number as hundreds of blue and orange pom-poms wave as the bus passes. The school had chartered three buses to take students and faculty to the game and it was looking like they could have gotten a fourth bus as well as the three started to fill up.\n\n\"You're sure that it's cool with your folks, Jess?\" Roxie asks as she walks with Jessica to her families waiting SUV.\n\n\"Rox, have you ever been not cool with my family?\" Jessica asks. \"Besides once Sarah sees these Wildcats painted on our faces she'll demand one of her own.\"\n\nRox laughs and shakes her head. She had been one of four students that were painting either the school logo or a simple W on student faces at the student fair before the pep rally. Jess had asked for one from Rox that was a little different and she delivered in spades. On Jessica's face the school logo looked almost three dimensional with a snarling Wildcat on one cheek and a swiping paw on her other. Students that saw it being done started lining up and asking for one just like it. \n\n\"I see how it is, Jess,\" She states. \"You're making me earn my ride to the game, huh? You're lucky that I love my little Sar-bear and that my arm isn't about to fall off.\"\n\n\"You've got a couple hours to rest it and I promise to have Jake give you one of his rub downs tomorrow,\" Jessica points out. \"I doubt you could do a decent job of painting while we're bouncing down the highway.\"\n\n\"True,\" Roxie agreed. \"And I want that promise of a rub down in writing I think.\"\n\n\"Wow, that looks so cool, Jessica!\" Marie said as she approached the two girls.\n\n\"Thank you, Marie. I'm so glad you could make it!\" Jessica says as she hugs her.\n\n\"Me too,\" Marie answers. \"You're sure that it's okay with you that I catch a ride to the game?\"\n\n\"Why does everyone ask me that?\" Jessica asks.\n\n\"Because we can,\" Roxie laughs.\n\n\"Funny, Rox,\" Jess sighs and shakes her head. \"Marie, my unfunny but amazingly artistically talented friend here is Roxie. Roxie, this is Marie.\"\n\nRoxie extends her hand to Marie who shakes it with a smile.\n\n\"We sort of met last week at the game but I was too busy cheering to talk much,\" Marie says. \"Sorry about that, Roxie.\"\n\n\"It's cool, Marie,\" Roxie assures her. \"I was keeping Sar-bear occupied. She gets bored unless Jake is playing.\"\n\n\"Is he going to get to play more this game?\" Marie asks.\n\n\"We think so,\" Jessica answers as they reach the SUV. \"He said that Coach Yates wants to switch them out more this week and that they'll definitely need Jake.\"\n\n\"They better play Jake!\" Sarah announces from her seat.\n\nThe three teens laugh as Jessica opens the door. She introduces Marie to her family again just to be sure that they remembered her from the last game.\n\n\"We're glad that you're riding with us, Marie,\" Jessica's dad tells her as the girls climb in. \"Welcome aboard, Roxie. It's always great to see you, sweetie.\"\n\n\"Thanks, Mr. Golden,\" Roxie says as she sits beside Sarah."
    ],
    "authorname": "AuroraIncident",
    "tags": [
        "football",
        "oral",
        "high school",
        "teasing",
        "jessica",
        "doggy style",
        "bullies",
        "blonde"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/new-girl-in-town-pt-16"
}