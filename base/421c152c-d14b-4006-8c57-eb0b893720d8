{
    "title": "Jake and Grandma: Hotel Sweet",
    "pages": [
        "The following is a work of fiction. Any resemblance to persons, living or dead, is purely coincidental.\n\n\"You've got to be kidding me. Our booking was for three rooms, not two!\"\n\nI hadn't seen my dad this pissed in a long time and the sweet young brunette working behind the counter was suffering the onslaught of his wrath.\n\n\"I'm sorry, sir,\" she replied sheepishly as she repeated what she'd just said to him moments ago: \"The reservation we have under your name is for two rooms only.\"\n\n\"Fine then! Cancel our reservations and we'll go to another hotel.\"\n\n\"Sir,\" the young woman said calmly, trying her best to put her customer service training into effect, \"I think you'll find that with the NCAA track finals taking place this weekend that all the hotels are booked up.\"\n\n\"Ah geesh...\"\n\nMy dad was shaking his head so hard I thought it was gonna pop right off and roll across the floor. I quickly glanced over at my mother and grandmother standing on the other side of him.\n\n\"Robert, don't worry about it. There's no need to fret,\" my grandmother said as she spoke up. \"Two rooms will do us just fine. It won't be a problem for Jake and me to share one.\" She paused as she glanced at me. \"You don't mind sharing a room with your old gran now, do you, Jake?\"\n\nAs usual with my grandmother, I was struck almost dumb by the devilish twinkle in her eye. \"Uh...I--\"\n\n\"No, Carole, that's fine,\" my father interrupted before I could even get a word out. \"I'll share a room with Jake and you and Sarah will have the other one.\"\n\n\"No,\" my grandmother said with an adamant shake of her head. \"I won't hear another word about it, Robert. You've been away on business for a month straight. You need to spend some time with your wife. It's just for one night. Jake and I will be fine sharing a room.\"\n\nThe woman behind the counter spoke up, \"I have to let you know that both of these rooms only have one bed in each. They are king-size, but one bed only.\"\n\n\"Do you think we could get a cot put in the one room?\" My dad asked.\n\n\"Don't worry about that,\" my grandmother said before the clerk even had a chance to respond. \"It'll be fine with one bed, don't you think, Jake? Tell you what, if you want, we can put some pillows or something and lay them down the middle of the bed so everybody can rest assured you'll be able to keep your virtue intact.\"\n\n\"Mom!\" my mother blurted out, but my grandmother's comment did make all of us chuckle.\n\n\"Well, Jake, what do you think?\" my dad said as he turned to me.\n\n\"I don't have a problem with it at all,\" I said as I glanced over at my grandmother, who smiled broadly. \"I'll be fine sharing a room with Grandma. Like the young lady said, with that track meet going on, everything's gonna be booked solid. Besides, the reception's being held right here in this hotel, and most of the other guests are staying her too. With the wedding in only a few hours, we can't waste time trying to find another place.\"\n\n\"Yes, you're right about that,\" my dad finally conceded as he looked at his watch and turned around. \"Okay, young lady, where do I sign?\"\n\nAs my dad took care of business with the desk clerk, I was able to stand back and watch for a few moments as my mother and grandmother spoke. They were mother and daughter but, as usual, my eyes seemed hypnotically drawn to my grandmother. They were both very attractive women (my friends often commented on what a MILF my mother was) who looked very much alike, but with my grandmother, all of the alluring features that they shared just seemed to be emphasized much more than my mother's. Whereas my mother was about 5'-4\" tall, my grandmother was about 5'-7\". They were both blondes, but my grandmother's hair had darkened slightly as she had aged. My mother was kind of a sunflower blonde, while my grandmother was more of a honey-blonde, with gold highlights that picked up the light and shone enticingly. Whether that was natural or courtesy of her hairdresser, I didn't care; it looked fantastic.\n\nAt age 58, my grandmother could have easily passed for a woman twenty years younger. I was around on numerous occasions when she and my mother were out together and people mistook them for sisters. Yes, she looked that good. But, like I said, with my grandmother, every alluring feature the two of them shared was just a bit more exciting, a bit more fascinating, a bit more enticing. They were both extremely curvy, with pronounced hourglass figures that drew men's eyes wherever they went. Again, my grandmother was a bit curvier everywhere it counted than my mother. Her succulent pronounced bum reminded me of two beach balls nestled up tight to each other. She had amazingly lush full thighs that I dreamed about burying my face between for hours on end, or having them wrapped around me as I pounded her deep into the mattress all night long.\n\nBut my mother's and grandmother's generous attributes didn't end there; they were both extremely well-endowed when it came to their bustlines. I will admit, as most 18-year-olds have done, that I had secretly stolen peeks in their underwear drawers. Screw that, I'm going to come clean and admit what you all know to be true: I've whacked off many times while I've been running my fingers over the bras and panties of both of them. Again, while my mother wore a 34DD bra, my grandmother outdid her once again with her 38Fs. Yes, as I said, with my grandmother, every time I saw her, there was always a little bit more that had my hungry 18-year-old eyes and perverted mind drawn to her like iron filings to a magnet. There was no way I could look at her or even just be near her without lurid thoughts taking over in my perpetually horny young mind.\n\nHow many loads had I pumped out fantasizing about my grandmother? I couldn't really say, but I'm pretty sure that if I had a dollar for every time I jerked off thinking about her, I'd be driving a Ferrari right now.\n\nAnd now, due to a screw-up with our reservation, I was going to be sharing a hotel room with the woman of my dreams. And not just any hotel room, but one with a single king-size bed only. I knew deep down that nothing was going to happen, but at least I might come away from this weekend with some new fuel for my fantasizes about my dear old grandma.\n\nWe'd just driven three hours to attend a family wedding. My mother and father, Sarah and Robert, had taken the front seats of our family SUV and I was in the back, happily sitting next to my grandmother, Carole, who lived across town near the university I was going to be attending in the fall.\n\nWhen we'd stopped in front of my grandmother's house, she was on the porch waiting for us. I'd rushed out to help her with her suitcase, my gaze quick to take in what she was wearing, which I did first thing every time I saw her. As usual with Grandma, I wasn't disappointed.\n\nWith the warm California summer weather upon us, Grandma had chosen an outfit that had me just about drooling on the spot. I'll start at the top, where those voluminous breasts of hers were enticingly displayed in a black sleeveless turtleneck that hugged her body like a second skin. As I got closer to her, I could see the vertical ribs of her top swimming in and out as they followed the pronounced contours of her enormous breasts. I felt my heart skip a beat as I forced myself to tear my eyes away from those delicious mounds.\n\nLetting my gaze travel down, I couldn't stop the smile that came over my face as I looked at the skirt she was wearing. Her black turtleneck was tucked into a corn-silk-yellow pleated skirt that ended teasingly high on her thighs and flounced out provocatively over her big curvy bum. Most women much younger wouldn't even try to wear a skirt like that, but my grandmother could definitely pull it off. I knew she went to the gym at least four times a week and her efforts there definitely rewarded her lewdly-minded grandson. The skirt showed a lot of bare tanned leg, and they were gorgeous. Those full plump thighs of hers fed into slender dimpled knees. My gaze was drawn down over her muscular meaty calves to her trim ankles and delicate feet, which were now provocatively adorned with a pair of black high-heeled pumps. They mirrored her tight black top perfectly, while the pointy toes and slender high heels made those succulent legs of hers look incredible.\n\nI took all of this in within a second or two as I approached her, my eyes finally moving back up to her face, her lovely mature face. Her ocean-blue eyes always had a devilish twinkle, which always seemed to send a pulse of blood to my overactive libido and attentive groin. How many times had I sprung a boner just looking her in the eye, that beguiling spark in those warm blue orbs setting my thoughts racing towards the unthinkable. Her eyes were made up lightly with a bit of mascara and just a touch of eye shadow in a pinkish hue, perfect for a sunny day. Her pronounced cheekbones needed no blush or adornment whatsoever, they were gorgeous as they were. Her wide mouth and full sensuous lips bore a coating of soft glossy pink, her lipstick of choice this morning. I'd seen those lips many times before bedazzled in scintillating vivid red that had sent my cock throbbing within seconds. That wide mouth and full pouty lips were a dream, and I knew any man who looked at her couldn't help but picture that gorgeous mouth sliding down the full length of his turgid cock. Again, I couldn't begin to imagine the number of loads I'd pumped out thinking about filling that beautiful sexy mouth with my teenage cum.\n\nHer honey-blonde hair was parted slightly on one side and fell in cascading waves just past her shoulders, framing those lovely features attractively. Yes, my grandmother was the complete package; gorgeous, glamorous, younger than her years, and sexy as fuck. No doubt about it.\n\nAs I said, we'd just driven three hours to go to my cousin's wedding, and I had to keep my cock from splooging in my pants nearly the whole way. Sitting next to my grandmother, the first surge to my groin occurred when I watched her shapely legs being drawn into the car one after the other, allowing me a teasing glimpse of those delicious inner thighs of hers. Just moments later I got another spark set to my libido when she slipped her seatbelt across her body and snapped it into place, the shoulder belt pulled teasingly taut as it dove down across her chest between her two massive breasts. Fuck me, if I died right there on the spot I prayed that I would come back as that seat belt. At the same time, the delicate fragrance of her perfume alighted on my senses, turning me on even more.\n\n\"Mom, that outfit looks amazing,\" my mother had said as she glanced back from the front seat. \"I don't know how you do it, but it looks fantastic on you. It's hard to believe you're 58.\"\n\n\"Ah, it's just the results of clean living, I guess,\" my grandmother had replied with a smile as she gave me a little wink. \"And I guess almost killing myself at the gym all the time doesn't hurt either.\"\n\n\"Whatever you're doing, it's working.\"\n\n\"Thank you, dear,\" Grandmother had said before turning to me and giving my hand a squeeze. \"Jake, I'm so looking forward to this weekend. Since we're both on our own, would it be okay if you kind of acted like my date?\"\n\n\"Of course, Grandma. I'll be your date anytime you like.\"\n\n\"Perfect,\" she'd replied before leaning over to give me a quick peck on the cheek as she'd squeezed my hand affectionately. That simple gesture, with the warm closeness of her and the alluring scent of her perfume, had sent a jolt right to my cock, making it throb beneath my jeans.\n\nWith a start like that, the three-hour car ride had been both a heaven and hell for me. Heaven just by sitting so close to my grandmother and letting my eyes feast on her gorgeous sexy curves, and Hell trying to control my lurid thoughts and repeatedly stiffening cock. Would I have had it any other way? No thank you.\n\nAnd now, as I looked across at her in that sexy outfit, that soft yellow skirt ending teasingly high on her full thighs and her generous breasts making her top strain almost to the bursting point, I couldn't believe that the unimaginable was actually happening; I was going to share a hotel room with my grandmother.\n\n\"What's that, our rooms aren't next to each other?\" I heard my father say to the desk clerk as she handed him the room keys.\n\n\"I'm sorry, sir. As I said, the hotel is booked full.\"\n\nOnce again I was surprised when my grandmother stepped forward. \"That's all the better, Robert,\" she said. \"That way you and Sarah won't have to worry about either your mother and your son listening in on what goes on in that room of yours tonight.\" She gave me another sly wink that had my legs turning to jelly.\n\n\"But--\"\n\n\"But nothing,\" Grandma said as she snatched an envelope with a pair of room keys out of my dad's hand and started towards the elevators. \"We don't have a lot of time before the wedding and I don't want to waste any more of it here.\"\n\nIt ended up that my parents room was on the 14<sup>th</sup> floor and our room was on the 18<sup>th</sup>. It was just a minute or two later when Grandma and I entered our room, with me pulling our two suitcases behind me. I was happy to see that we had a great view of the downtown skyline and the ocean beyond. But my gaze immediately went to the enormous king-size bed, my mind already ping-ponging with illicit incestuous thoughts as I looked at it.\n\n\"Jake, what do you need to do before you get dressed?\"\n\n\"I want to take a shower after that long drive. Should I go first or do you want to go first?\"\n\n\"I just want to freshen up a bit so I shouldn't be too long. Why don't I go first and while you're in the shower I can get dressed. Just make sure you knock and let me know when you're going to come back out.\" She paused and gave me another bewitching smile. \"You wouldn't want to walk in and see your old grandmother in the altogether now, would you?\"\n\nFuck me! I thought. WOULD I EVER! Which was far different from what I actually said, \"Uh, gee, no, I guess not. I'll make sure to let you know when I'm ready to come out.\"\n\n\"Great, I'll just grab a few things before I go in,\" she said as she opened her suitcase, \"and I'll only be a few minutes. Wait, it'll be easier if I get out of these things and put my robe on first. Do you think you could just turn your back for a minute or two while I change?\"\n\n\"No, of course not,\" I replied as I turned around and pulled out my phone. I was absentmindedly scrolling through my texts and emails but my mind was totally on what was going on behind me, and what state of undress I'd find my grandmother in if I suddenly happened to turn around.\n\n\"It's okay, you can turn around now,\" my grandmother said a couple of minutes later. I turned to see her pulling her robe closed around her curvy body and cinching it tight, the ribbon-like belt accentuating her hourglass figure. I almost gasped out loud as I looked at her. Her robe was made of some sort of diaphanous white satin material that I swore I could almost see through, her lush curves boldly on display in the sexy robe. I could clearly see the swell on the underside of her massive breasts, the white fabric casting tantalizing shadows below the impressive shelf of those tremendous mammaries.\n\n\"I won't be long,\" she said as she gave me another one of those sly smiles before turning and making her way into the bathroom. My eyes were riveted to her succulent heart-shaped rear end, the big curvy cheeks of her bum swaying hypnotically beneath the shiny satin fabric as she sashayed across the room.\n\nMy cock had been on the rise the instant I'd turned around, my eyes alighting first thing on her big nipples that were protruding stiffly against the sheer fabric of her robe. My dick had only gotten harder as I'd looked at the rest of her.\n\nAs the bathroom door clicked shut, I couldn't help myself. I stepped over to where she'd been undressing at the foot of the bed, her suitcase lying open upon it. Right on top were her black turtleneck and that sexy soft yellow skirt she'd been wearing. Tucked partially beneath those things, I spotted a lacy black bra and a strip of shiny black satin that I figured must be the panties she'd been wearing.\n\nI heard the water running in the bathroom and figured I'd be safe for a couple of minutes. With my cock as hard as an iron bar in my underwear, I gently shifted her clothing to the side and picked up her bra. I took a second to check out the label attached. The '38F' was right there in black and white, bringing a smile to my face. As I'd done when I'd looked in her underwear drawer, I was amazed by the size of the enormous bra cups. The bra itself was heavy-structured, with lots of underwire to support her gigantic breasts. The underlying band that ran beneath her boobs and around her back was wide, with four hooks to secure it in place. The cups themselves were huge, big curving pieces of lace with solid black satin beneath to cup her breasts. And the most wonderful thing about it as I held it like a prize in my hands...it was warm! It still maintained some of her body heat and it made it incredibly exciting for me as that teasing warmth migrated through my fingertips and right through me to the swelling shaft of my cock.\n\n\"Mmm,\" I murmured softly as I pressed one warm bra cup to my face, and then the other, breathing deeply as the combined scent of my grandmother's womanly body and her alluring perfume filtered into my senses delightfully.\n\nWith another glance at the bathroom door, I set the bra back in place, doing my best to leave it exactly as I'd found it. I snatched up her panties next, thrilled even more to find them equally as warm. Not hesitating for a second, I flipped them inside out, smiling to myself as I noticed that the whole gusset was dripping wet.\n\nHad something turned Grandma on? I thought to myself. Or was she just naturally juicy? Whatever it was, I didn't care, I just wanted to taste her. With another glance at the bathroom door, I flicked my tongue out, pressing it deeply into the sodden panties.\n\n\"Ohhnn...\" I couldn't help the moan of pleasure that escaped my throat as I tasted her warm earthy juices. With my cock all but exploding in my jeans, I licked upward at the same time I sucked in, loving the feel of the moist nectar as I drew it into my mouth and let it settle on my taste buds. I let my tongue run towards one side along the leg opening, gathering in more of her succulent cunt-honey.\n\n\"I'll be out in just a minute.\" My grandmother's voice coming from the room shook me out of me trance-like state. With my face flushed with excitement, I reluctantly, but hurriedly, put her damp panties back where I found them next to her bra, careful to pull her other clothes back on top of them, just as I'd found them.\n\n\"It's all yours,\" Grandma said as she came out of the bathroom.\n\nBy this time, I was safely on the other side of the room, with my own suitcase open on one of those luggage racks, just about as far away from her open suitcase on the bed as I could get.\n\n\"Are you all right, you look a little flushed,\" she continued.\n\nI turned towards her, forcing myself to look her in the eye, which was close to impossible. She had the cinched sheer robe pulled tight against her, the thrusting buds of her stiff nipples pointing right at me through the shiny material, teasing shadows being cast by those protruding buttons of pleasure. \"Uh yeah, I'm fine. Just thinking about putting on this new suit and tie Mom and Dad got me. I'm not used to wearing that kind of thing.\"\n\n\"I'm sure you'll look very handsome.\" She paused and I'm sure I blushed again as I saw her blatantly look me up and down. She had a smile on her face and an appreciative look in her eye, making me feel like a prize stallion at the state fair. \"After all, you're going to be my date today, right? And you wouldn't want to disappoint your old grandmother now, would you?\"",
        "She had that devilish look in her eye again when she said that, sending my thoughts racing to never-never-land. \"I'll...I'll do my best,\" I managed to stutter out.\n\n\"I'm sure you will...I'm sure you will,\" she said calmly, slowly twisting from side to side, which made her huge breasts wobble provocatively. At the same time, her alluring scent hit me, the fragrance of her perfume, lotions, whatever she was wearing filtered into my senses like a warm teaser of how sexy this woman was, in every way.\n\nBetween breathing in that seductive fragrance and feasting my eyes on her enticingly shifting breasts, I felt my dick give another throbbing lurch, and I thought I might go off in my pants right there on the spot. I took a deep breath to calm myself as I forced myself to look down and grab my toiletry bag out of my suitcase.\n\n\"Okay, I'd better grab that shower now,\" I said as I turned and walked past her, once more subtly breathing in a tantalizing waft of intoxicating fragrances.\n\n\"Don't be too long, dear. We don't have a lot of time before your cousin's wedding.\" I was sure Grandma glanced down at my crotch just before she said that. It seemed as if she was telling me NOT to jerk off in the shower, which is what I definitely had been contemplating in order to have a hope of getting through the rest of the day. As I was thinking about that, she continued, \"I'm going to get dressed while you're in there. When you come out and need to get dressed, I'll go back in and finish touching up my makeup. But like I said, don't forget--\"\n\n\"I know, I won't forget to warn you when I'm going to come out,\" I said with another glance at her exquisite form as I disappeared into the bathroom.\n\nI turned the shower to as COLD as I could get it before stepping in. My teeth were chattering like a madman but at least it forced the blood from my turgid prick to race back to my internal organs in order to keep me alive. With my dick on the downswing, I gradually turned the temperature of the water back up in order to enjoy the pleasure of a comforting shower, even if I wasn't able to whip off a load and release some of the internal tension my perverted teenage mind had left me suffering with.\n\nAs I was getting ready to leave the bathroom, I realized--with my addled mind not working correctly due to my grandmother's intoxicating presence--I'd forgotten to bring anything into the bathroom with me relative to a change of clothes, not even a clean pair of underwear. With a final glance in the mirror and smile to check my pearly-whites, I wrapped a towel tightly around my waist and picked up my clothes before knocking loudly on the inside of the door. \"Grandma, I'm done now. Is it okay to come out?\"\n\n\"Everything's fine, Jake. C'mon out.\"\n\n\"I...I forgot to take anything in to change into,\" I said by way of apology as I stepped out of the bathroom. \"But I--\"\n\nI stopped dead in my tracks, as if I'd been zapped by a cattle prod. Within seconds, my heart was pounding like a drum in my chest as I looked at my grandmother. She was standing a short distance away in front of the full-length mirror on one wall. She was directly in profile to me, and the view facing me was what had caused me to pull up short. I was breathing raggedly as my eyes feasted on her. Standing in profile, every lush beach-ball-like curve was boldly on display. And what made the view all the more spectacular was the dress she was wearing. From here, I could see that it was made of some form of clingy material that clung to her shapely body amazingly. The dress was brilliant sapphire-blue in color, a perfect match for her stunning blue eyes. The dress had long sleeves and the bodice clung to her enormous breasts like a second skin. I could see from the slight angle that it had a deeply-scooped neckline, provocatively displaying a daring amount of cleavage. Even straight from the side, I could see ample amounts of soft-looking tit-flesh swelling over the top edge of the scooped neckline.\n\nAs luxuriously enticing as the top part of her tight dress looked, from the waist down it looked even better. The soft material of the dress molded itself smoothly over the full width of her wide matronly hips and big curvy behind before draping in soft waves all the way to the floor. The killer was that the dress had a slit on the side that started at the floor and ended scandalously high, just a few inches below her hip. Standing in profile, I had an incredible view of her long toned legs, which were left bare but glistened seductively, as she had applied some form of lotion that made them shine invitingly. Her bare legs contrasted boldly with the sapphire blue of the dress and looked even more stunning with the stilettoes she was wearing. I could see they were a deep blue color that matched her dress perfectly, with pointy toes and rapier-like 5\" heels that had her towering like an Amazon goddess.\n\nThe whole ensemble was incredibly glamorous, stunningly gorgeous, and sexy as fuck. I was left gasping as I could only stand there and stare, my cock instinctively starting to rise once more.\n\n\"Sweetie, would you help with the zipper on my dress? I couldn't quite reach back there?\"\n\nMy grandmother turned slightly away from me and I could see the partially open zipper going halfway down her back.\n\n\"Sure.\" On shaky legs I made my way across to her. Where the back of her dress was partially open, I had a clear view of a navy blue lacy bustier that went down as far as her midriff. I couldn't see any hooks on the back, so I figured it must do up in the front somehow. From having raided my grandmother's underwear drawer on numerous occasions, I knew that the bustier had to be heavily reinforced, a lot of underwire necessary to help carry the tremendous load it was made for. Looking down below the bustier, I could see almost as far down as the small of her back, my eyes alighting on a cute dimple just north of her bum cheeks. As I moved close behind her, she reached up and lifted her hair out of the way, giving me a close-up view of her back, sexy shoulders, and the smooth kissable skin of her neck. At the same time, a sensuous waft of her perfume hit me, the alluring scent sending a pulse right to my groin.\n\n\"Thanks, sweetie, I really appreciate it,\" she said.\n\nWith my hands shaking, I reached forward and slowly drew the zipper up, feeling like sighing as the sexy blue bustier was lost to my view. With the zipper fully in place, I reluctantly gave it a little tap and stepped back as she let go of her hair, the lustrous blonde waves cascading down upon her soft shoulders once more.\n\n\"Thank you, dear,\" my grandmother said as she turned towards me while adjusting an earring. \"What do you think of my dress? You don't think it's 'too much', do you?\"\n\n\"I...I think it's incredible!\" I blurted out a little too loud, my eyes moving from the sexy slit in her skirt to her d\u00e9colletage, which drew my eyes magnetically as she turned in my direction. I loved the way the bodice of her dress followed the generous curves of her breasts, spreading out deliciously over the full breadth of her chest. And yet her full big breasts were pushed up and together in a mouth-watering display, all but overflowing the scooped neckline of the dress. I could see that the sexy bustier I'd just seen was doing its thing spectacularly.\n\n\"Incredible?\" she replied teasingly as she fixed her other earring. \"I brought it brand new for the wedding. I thought it looked nice, but I'll definitely take 'incredible', especially when it comes from a good-looking young man like my grandson.\" She paused as her eyes roamed over my body, the only thing between her and me being the towel knotted around my waist.\n\n\"Well, well, you've certainly grown up, haven't you?\" she continued.\n\nI couldn't help but notice the appreciative look in Grandma's eyes as she looked me up and down as I stood before her, fresh out of the shower. For the first time, I felt like all those hours I'd spent at the gym and in the school weight room were finally paying off. My shoulders and arms had filled out nicely, with my pecs becoming prominent while my stomach muscles remained taut, thanks to all the sit-ups and crunches I'd been doing. I have to admit I was proud of myself for the way I was looking, and I'd noticed some admiring glances from some girls at school recently, but none of them displayed what looked like the eager hunger that I seemed to detect in my grandmother's gaze. No, the way she was looking at me had my perverse mind spinning with 'what ifs' all over again, especially as I looked at her in that amazing dress. \"I've been working out a bit over the last year or so,\" I said to her with a shrug of my shoulders.\n\n\"It's definitely paid off. You've turned into such a handsome young man.\" She was blatantly letting her eyes roam over me now, looking me up from top to bottom, her gaze lingering for a bit of extra time over my chest and flat stomach. She seemed to look at the towel knotted at my hip as if she could will it to come undone, or was that just my overactive imagination playing tricks on me again? She finally drew her eyes back up to mine. \"I bet you have a hard time keeping the girls away these days.\"\n\nI quickly shook my head. \"Not at all, Grandma. I'm not having much luck in the dating department.\"\n\n\"You're kidding. If I was in your class, I'd be batting my eyelashes at you every chance I got.\"\n\nShe did it herself playfully, batting those gloriously long eyelashes of hers at me teasingly. At the same time, she gave me a smolderingly sexy look that had my temperature rising like somebody'd taken a blow torch to a thermometer. Man, my grandmother was such a sexy woman, so hot, with an amazing body that didn't quit, and the face of a movie star that I could stop traffic. And when she chose to give me that mischievous look that always made my knees tremble, and with those enchanting sexy blue eyes of hers, I was sure no man could resist her. Given the chance, I knew there was no way I could. A boy can dream, can't he?\n\nBut when it came to being attractive to girls, Grandma was right to a certain extent; I had gotten a lot more attention from girls over the past year than ever before. I'd had a few dates, but none had worked out exactly as I'd hoped. And yes, even at 18, I was still a virgin. Things had gone well at the start of most of my dates. The girls had seemed happy to be with me, glad that I treated them with respect and courtesy, glad that I was able to make them laugh and feel comfortable. Getting along with them was easy; that wasn't the problem. The problems always arose when things moved beyond those early stages, when I turned the corner from second base and was headed for third. Yes, as soon as the girls had my fly undone and realized what I was packing, that's when things started to go wrong.\n\nSome people might say that I was 'blessed' when it came to my endowment in the dick department, but with the luck I was having with girls, I felt it was more like a curse. Whenever girls saw how big it was, they either turned tail and wanted to run, or they did the minimum to end the situation. Some had told me flat out, \"There's no way you're fucking me. That thing will split me in two!\" Others had shut me down completely, asking me to take them home on the spot. Some had tried to be discreet, saying they wanted to slow things down, willing to give me a handjob and that was about it. I could tell when I dropped each one home at the end of the night that there was no point in calling them again, their attitude made that quite clear that they were too afraid of what they might have to do the next time.\n\nSo, I'd let them all be and not pushed it any further. I'm not sure who I'd inherited such a prodigious member from, but it wasn't my dad. I'd seen him in the shower room at his golf club a couple of times, and he was just as average as the guys in the locker room at school. I wondered if I'd taken after my grandfather on my mother's side, my Grandma Carole's husband. Sometimes when I looked at Grandma, at that lush curvy body of hers that looked like it was made to take big cock, and lots of it, I was sure that Grandpa must have needed a big one to satisfy such a sexy woman.\n\nAnyway, I'd had nothing more than a second-rate handjob from a girl in my young life, and those three girls who'd at least done that had all complained about what a mess I'd made when I came. I do tend to come a lot when I shoot, and I think they all had to make visits to the dry cleaners afterwards, as well as having to shampoo their hair and wash the gobs of cum off their faces. I knew how much, and how far, I could shoot, but it did come as a shocking surprise to all of them. There's not a lot of room when you're inside a car and my cum had to end up somewhere. Too bad those three ended up with a milky shower they hadn't counted on.\n\n\"All right then, young man,\" Grandma said as she stepped by me and gave me a playful pat on the behind. \"You get dressed while I step into the bathroom and finish tidying up my hair and makeup. I won't be long so get a move on.\"\n\n\"Yes, Grandma,\" I replied as she walked into the bathroom. My eyes immediately went to her sumptuous rear end. I gasped as I noticed that there was not one panty-line visible. All I could see was the smoothness of her tight dress as it warmly caressed the prominent mounds of her full curvy bumcheeks. I let my gaze travel higher and, as her body shifted provocatively from side to side as she walked, I spotted just a hint of an outline of what had to be a thong just below the small of her back. Fuck me! I thought...Grandma wearing a thong. I love it!\n\nAs she closed the bathroom door, I couldn't get the image of her in that sexy dress out of my head as I drew off the towel. \"Down boy,\" I uttered to my stiffening prick as I willed myself to think about chemistry and covalent bonds, the stuff I hated in school more than anything else. Between thinking about that and trying to dress in a hurry, I was reasonably successful in getting my dick to behave before I tucked it away in my fitted boxers. I'd just finished putting my shoes on and tying my tie when I heard Grandma's tap on the bathroom door. I told her I was ready and she walked into the room.\n\nOnce again, I was left speechless as she stepped towards me. Her lustrous deep blonde hair was done up in a loose chignon at the back of her head, wispy tendrils of hair drifting down to lick sensuously at her long regal neck. Her makeup was stunning, her eye shadow done up in tones of dusky bronze with pinkish hues showing through. A touch of mascara had made her already-long eyelashes look even more alluring and exotic. Her brilliant red lipstick had turned her mouth into a vivid red gash, setting my heart on fire as I couldn't help but picture those succulent red lips wrapped around my cock.\n\nWhen she'd been in the bathroom, she'd put on a necklace, actually more like a choker, made up of five rows of what appeared to be pearls, or damn good imitation pearls, which matched her dangly pearl droplet earrings. It didn't matter to me whether it was real or fake, that pearl choker and the lustrous earrings looked incredibly sexy on her, especially with those fine wisps of her gorgeous blonde hair falling provocatively against her smooth neck.\n\nAll in all, my grandmother looked stunningly beautiful. I had never seen her look so glamorous and sexy in my entire life. And the icing on the cake; she had asked me to be her 'date' today. There was nothing that could make this day any better for me...well, there was something, but I was already telling my dick to keep himself under control, as hard...er...as difficult as that was with her standing right in front of me.\n\n\"Grandma, you look...you look,\" I stuttered as I couldn't take my eyes off her.\n\n\"Yes?\" she asked, tilting her head coyly as she gave me a coquettish smile.\n\n\"You look absolutely stunning. That dress, that necklace, your earrings, your makeup...it's just...just everything. You look amazing.\"\n\n\"Thank you, Jake, that's so sweet,\" she said as she gave me a quick hug and an air kiss near my cheek, her intoxicating perfume enveloping me in a warm sensual miasma that had my dick twitching again. \"C'mon, we better get going to meet your mom and dad downstairs.\"\n\n<p align=\"center\">**</p>\n\nThe church part of the wedding came off without a hitch, other than my cousin and the guy she was marrying getting hitched, as they used to say in the old west. Grandma stuck close to my side the whole time, often with her arm through mine as she held me close. I was loving the sensation of feeling her large breast pressed against my arm, both inside the church as she sat right up against me, and then outside, when we were milling around with all the other guests.\n\nI saw many of the men looking her up and down, men of all ages, including a number of my cousins about my age. They looked at me enviously and I knew all of those men wished they could be as close to her as I was. Don't fool yourself, any guy who has a mother or grandmother who looks as good as this is a liar if he says those thoughts never occur to him. There's no way any red-blooded male (unless he's gay, which is a totally different thing) could look at a woman as sexy as my grandmother and not feel like fucking her with all he's got. And yes, I could see that look on the faces of nearly all the males who glanced her way, their eyes instinctively raking over her magnificent body and gorgeous face.\n\n<p align=\"center\">**</p>\n\nThe reception followed shortly thereafter in a banquet room at the hotel we were staying at. The four of us shared a table of eight with an aunt and uncle of mine and their spouses. I was happy when Grandma sat to my right, which was perfect because that sexy long slit on the side of her dress was on her left side, giving me a teasing view of her legs as she slid into her chair next to me. Unfortunately, the tablecloth draped well over the edge of the table, obscuring my view of that lush full thigh of hers once we were seated.\n\nThe meal was excellent and we all toasted the numerous speeches with glasses of champagne all around. A number of times, Grandma would reach over and give my hand or arm a tender pat or squeeze, often giving me another of those beguiling smiles as she'd carry on a conversation with another member of our party as she let her fingers trail down my arm or across my hand. Every time she did that, I felt a shiver of excitement trip down my spine.\n\nIt wasn't long before the bride and groom enjoyed their first dance, and then everyone else started to join in. Grandma and I danced one song that had a bit of a fast beat, but nothing too crazy. Grandma smiled and laughed as she danced, reaching out and touching me often. My eyes immediately went to that incredible chest of hers, the large mounds of velvety tit-flesh wobbling seductively as she moved to the powerful beat of the music. I noticed nearly every other guy on the dance floor looking at her as well, with most of the younger women doing the same, a look of envy in their eyes, wishing they could look as good as my grandmother when they were her age. Shit, I thought, none of them looked as good as that now!\n\nWe took our seats, both of us smiling and happy. We danced a couple more times, both fast and slow. I danced a slow song with my mother while Grandma danced with my dad. It felt great to feel my mother against me, and she looked fabulous in a form-fitting burgundy velvet dress that did nothing to hide her generous attributes, but still, she couldn't compare to how ravishing my grandmother looked. As I said, everything about Grandma was 'just a little more'; a little taller, a little curvier, a little bustier, and just plain sexier.\n\nA little later in the evening, as a well-known slow song started, an older gentleman I'd seen eyeing up Grandma outside the church and during the dinner approached our table and asked her to dance.",
        "\"Thank you, but this is one of my favorite songs and I'm saving it for my grandson,\" she said as she took my hand and pulled me out of my seat and led me onto the dance floor.\n\nI opened my arms and she stepped forward, moving in close as we started to dance. Once again, I felt my libido flickering to life as her closeness and the sensual fragrance of her perfume drifted into my senses. I felt so alive, so happy to be with her, and more turned on than I'd even been in my life.\n\n\"You're a wonderful dancer, Jake,\" she whispered breathlessly into my ear as she moved even closer. The warmth of her breath in my ear made me shiver again, and her closeness had the blood pulsing in my veins. Her arms went around my neck as she looked up into my eyes, those sexy blue eyes of hers meeting mine. \"You look so handsome in your new suit. I've seen the way some of the young girls here have been looking at you. You don't mind dancing with your old grandma, do you?\"\n\nAs she said that, she moved even closer against me, her massive breasts pressing warmly into my chest. Oh man, they're so big, I thought to myself as my hands slid down the back of her dress to rest near the small of her back, keeping her close. \"Not at all, Grandma. I never noticed any of those girls you mentioned. With a date as beautiful as you, I wouldn't even think of looking at anyone else.\"\n\n\"Mmm, you are a sweet one, aren't you?\" she replied as she gave me another one of those mischievous smiles, that naughty twinkle in her eye. \"I feel exactly the same. There's no one else I'd rather be here with.\"\n\nShe moved in close and put her head against my shoulder. At the same time, I felt her body press even more firmly against me, the soft mound of her midsection pressing against mine. She moved her body slightly from side to side, gently rubbing her abdomen against mine. There was no way in the world I could stop my body from responding. My cock, which had been at about half-mast for most of the day, started to surge and stiffen. I knew she could feel it and was afraid she would pull back, but my fears were allayed as she moved even closer, subtly grinding herself against me.\n\nOh my god, I can't believe this! I thought to myself as she pressed herself even harder against me. The feel of her huge breasts against me and her lower body gently rubbing against my stiffening prick was like something out of one of my fantasies. My cock was now at full throttle, stretching upwards and across my body as it fought against the constraints of my fitted boxers.\n\n\"Well, you've certainly grown up to be a big boy now, haven't you?\" she whispered hotly into my ear before she gave my earlobe a playful nip that nearly had me spurting into my pants.\n\nFortunately I was saved as the song ended and another fast one came on. Grandma stepped back and gave me another of those smiles, the beguiling look in her gorgeous blue eyes making me tingle as she took my hand and led me back to our table.\n\n\"You two look like you were having fun,\" my mother said as I took my spot next her, with Grandma on my other side.\n\n\"Grandma's a wonderful dancer,\" I said, trying to compose myself, my cock feeling like an iron bar in my pants.\n\n\"Jake has turned into quite a handsome young man, Sarah,\" Grandma said as she took my hand in hers and gave it a squeeze. \"You and Robert should be proud.\"\n\n\"Yes, he's turned out all right. But don't say too much, it'll give him a swollen head.\"\n\nI had one swollen head right now, and I was sure it was leaking into my shorts.\n\n\"Oh, I think he'll be fine. Wasn't that a gorgeous dress that Ashley was wearing?\" Grandma said as she shifted closer and continued to talk to my mother about the bride.\n\nWhen my mother glanced away for a split-second, Grandma took my hand she'd been holding and put it beneath the table, the draping tablecloth hiding it from everyone's view. She put my hand about halfway down her thigh, and I could feel the soft fabric of her dress beneath my fingertips. She gave my hand a gentle squeeze, which made my fingers rub against her full lush thigh through her dress. With one last quick pat on the back of my hand, she withdrew hers from beneath the table and I watched as she grabbed her champagne glass and took a drink.\n\n\"That cousin Frank of yours is kind of a lush, isn't he?\" she said to my mother as she looked right past me and kept talking.\n\nMy heart was pounding like a runaway freight train in my chest, my mind swirling since Grandma had placed my hand on her leg. Had I read that right? Was that an invitation to do more? Whatever it was, I knew it was now or never, and there was no way I was going to let even the slimmest chance slip by. If I was wrong, what was the worst that could happen? She could slap me and walk away, but I figured she wouldn't do that in front of my parents, and then have to explain what I'd done. No, she'd probably just stop me and that would be the end of it, and that was a chance I was more than willing to take.\n\nWith my mind racing and my cock threatening to tear right through my new suit pants, I started to slowly let my fingers trace back and forth over her leg. I could feel the warmth of her body flowing right through the material of her dress into my fingertips. She moved her leg slightly, and I knew this might be the end of it. But no, she hadn't moved it away, instead, she'd let it drift over closer to me, and my heart soared knowing she was opening her legs for me.\n\nFeeling more emboldened, l let my fingers roam more freely over her leg, rubbing slowly up and down over the sensually soft fabric of her dress. As my mother looked away again, I saw Grandma's hand slip beneath the tablecloth. Her hand touched mine and her fingers closed. Again, I thought this might be the end of it and she'd pull my hand away but, instead, she moved my hand to the side until my fingertips touched the luxuriously soft skin of her bare thigh through the slit in her dress. She moved it back into the middle of her leg, this time beneath her dress!\n\nAs she withdrew her hand and brought it above the table, I sat there simply stunned, my heart pounding and my cock throbbing like a caged animal yearning to be set free. I let my hand slide over towards the inside of her thigh, loving the feel of the smooth warm skin beneath my fingertips. It was like sliding your hand over the softest of rose petals; velvety, luxurious, and sinfully sexy beyond belief. I let my fingers slide deeper and higher between her spread legs, slowly making my way towards that treasured spot.\n\n\"Mmm, this is so nice,\" my grandmother said with warm purr to her voice.\n\n\"What's that, Mom?\" my mother said from the other side of me.\n\n\"I was just saying how nice it is to be here, how nice to be here with you and Robert, and to be able to spend some time being so close to Jake.\"\n\nI felt her legs roll open further, giving me more access to that illicitly soft smooth flesh high up between her thighs. I gently let my hand explore higher, my fingers finally brushing over the pouting mound of her panties.\n\n\"Yes, it feels so nice to know that now that Jake's 18,\" my grandmother continued, her voice a throaty purr, \"we can get to know each more as adults, on a much deeper level than before.\"\n\nThere was no mistake; Grandma had definitely emphasized the word 'deeper' when she spoke. She had slipped her hand beneath the tablecloth again, only this time, it settled over my crotch, her fingertips sliding along my protruding bulge, as if gauging its length.\n\n\"Would you like that, Jake?\" my grandmother said as I sat there, close to shaking with excitement. \"I know it might be hard for you at first, but if we got know each other more as adults, I'm sure you'd find that you'd be happy we did.\"\n\nShe had that teasing look in her eye as she looked at me, her fingers now wrapped around my prodigious member in a warm loving squeeze.\n\n\"I think that's a wonderful idea,\" my mother said, which was good, because I found myself unable to speak, my mind just overwhelmed by what was happening. \"I know how fond Jake is of you, Mom, and it would fill my heart if the two of you became even closer.\"\n\n\"That's exactly what I was thinking,\" Grandma said. \"I can't believe what a big boy he's become.\" She gave my throbbing prick another thrilling squeeze before moving her hand back over mine and pulling my hand harder against her steaming sex. \"I think it would do us both good to spend more time together, to help each out when we can. What do you think, Jake, are you up for that? Do you think you can help your old grandmother out?\"\n\nI could barely breathe, but summoned up all my willpower and managed to croak out an answer. \"Yes, there's nothing I'd like better. For years now, Grandma, I've wanted to get to know you, like you said, 'on a deeper level', but I never felt I was ready. Now, I definitely know I'm ready.\"\n\nBoldly, I let my finger slip under the leg opening of her thong, finding her sex sinfully hot and deliciously wet. \"What about you, Grandma?\" I said as I let my fingertip explore her gooey pleasure-groove. \"Do you think you're ready?\"\n\n\"Mmm, definitely. I think we'll both get a lot of pleasure out of spending more time together. Your mother said it will fill her heart for us to get to know each other better, and I think it'll fill me up too.\"\n\nI took her provocative words as an invitation and slid a finger into her, finding her pussy as hot as a blast furnace and slippery as anything.\n\n\"I'm so happy,\" my mother said just before one of my aunts came up and started talking to her.\n\nWith her attention diverted, I continued to finger Grandma, my hand moving deftly beneath the tablecloth. I felt her give a little shiver as she gripped my own thigh and squeezed as her pleasure level escalated. I think we both knew that if she put her hand back on my cock I'd go off in an instant and, based on what I'd just heard from that subtle conversation, I didn't want to waste the load I had primed and ready to fire.\n\nI slid a second finger into Grandma, loving the feel of the hot moist folds of flesh inside her gripping my invading fingers. I slowly slid my thumb up the line of her dripping slit until it rolled over the protruding bud of her clit, the fiery little nodule feeling swollen and in need of attention.\n\n\"Aaaahhh...\" I heard Grandma gasp out softly as she drew her hand from beneath the table and grabbed her champagne glass. She brought it close to her face as her eyes softly closed, and I knew she was shielding herself in case my mother should look over.\n\nHer legs were now spread wide apart beneath the table, giving me as much access to her steaming cunt as I wanted. With my hand beneath her thong, I slowly spun my two fingers inside her in a teasing circle before concentrating on the soft folds of flesh on the roof of her vagina, just beneath her clit, which I was still teasingly rolling the tip of my thumb over.\n\n\"Oh...I...I....mmmmm...\" Grandma suppressed the moan that came out of her as I felt her go rigid as she started to come. I could feel her stomach and the insides of her thighs quivering as she climaxed on my fingers, at the same time as the muscles inside her molten-like cunt gripped my fingers tightly. I felt a spray of warm juices against my hand as I rubbed my fingertips slowly, but firmly, over the oily tissues high up inside her. She came for a long time, breathing raggedly but doing her best to remain composed as she sat there at the table, my fingers working to bring her as much pleasure as I could. Finally, she quickly shot her hand beneath the table and gripped my hand, forcing me to stop. It was obvious from the glassy look in her eyes that she'd enjoyed what had happened, but she was just too sensitive right now.\n\n\"Are you okay, Mom?\" my mother said. \"You look a little flushed.\"\n\n\"Ah...yes,\" my grandmother replied, waving her hand in front of her. I sat there with my fingers out of her, but the palm of hand still beneath her panties and cupping her flushed moist mound. \"It's just a bit hot in here, and I guess I've had a bit too much champagne. Just feeling a little dizzy there for a second.\"\n\n\"Are you sure you're all right?\" my mother continued, a look of concern on her face. \"Do you want to go outside and get some fresh air?\"\n\n\"No, that's okay,\" Grandma said with a shake of her head as I slowly withdrew my hand from between her legs. \"Maybe I'll just go back to the room now. It's been a long day and I'm a bit tired. You'll find out when you're my age how much you like spending as much time as you can in bed.\"\n\n\"Sure, I get it. Jake, why don't you help Grandma up to your room? If she's feeling dizzy, I want to make sure she gets there okay?\"\n\n\"Sure, Mom, I'd be happy to.\" As I stood up from the table, I discreetly grabbed one of the cloth napkins and nonchalantly wiped off my sticky hand, making sure my mother didn't catch a glimpse of Grandma's glistening juices that covered it all the way to my wrist.\n\n\"Once your grandmother's settled into bed, if you want to come back, maybe you can spend some time visiting with your cousins.\"\n\nFuck that, I thought to myself. That's the last thing I want to do. \"Uh that's okay, Mom. I'm pretty tired too. I think I'll call it a night as well.\"\n\n\"Well, all right then. Call us tomorrow when you're ready to go for breakfast. Have a good night, you two.\"\n\n\"Oh, I'm sure we will,\" Grandma said as I took her hand and led her out of the room.\n\nWe were both breathing raggedly as we waited for the elevator, glancing about us as if everyone who looked our way knew exactly what had just happened. The elevator doors dinged open and we stepped inside. I was happy to see that we had the elevator all to ourselves as I pushed the button for our floor. As soon as the doors closed, Grandma was all over me, pushing me up against the wall as she kissed me.\n\n\"Mmm,\" we both moaned as we shared the hottest, most passionate kiss I've ever had. I've kissed a number of girls before, and some of them were quite good, quite skillful, but they were nothing compared to the way Grandma was kissing me. As our tongues rolled together and our lips pressed against each other's her kiss had a certain longing, a certain pure sexual hunger to it that I'd never experienced before, and it was wonderful.\n\nShe drew back for a second and I saw the lust in her vivid blue eyes as she looked into mine, and then she was kissing me again, her breasts and stomach pressed against my front, her hand sliding down between us as she sought out my resurgent cock.\n\nThe elevator dinged as we arrived at our floor and she all but dragged me down the corridor to our room, my eyes flicking down to the amazing sight of her long shapely legs flashing in and out of the sexy slit in the side of her dress. She had her room key out of her purse and ready to go by the time we got there and we were inside within seconds, Grandma quick to hang out the 'DO NOT DISTURB' before locking the door behind us.\n\nAs I turned she pressed herself against me once more, pushing me up against the wall as she turned her face up to mine. Her beautiful mouth was open and inviting, her red lips wet and begging. I lowered my mouth to hers as I took her head in my hands, my tongue rolling over hers as I kissed her long and hard.\n\nShe moaned and whimpered against me as I felt the warmth of her body against mine, that lush mature body that I'd dreamed of for years. Her hand slid down my front, grabbing the lapels of my suit jacket and pulling it off me. I yanked at my tie and loosened it as Grandma tossed my jacket aside and then ran her hands down the front of my body. Her eyes followed her hands as they settled on my groin, her slender fingers exploring the bulge that was threatening to tear through my pants.\n\n\"I've wanted this for so long,\" Grandma muttered under her breath as she dropped to her knees in front of me, her hands quickly moving to my belt.\n\nAs I looked down into her deep dark line of her cleavage, she had my belt undone and my zipper down in seconds. With a firm yank, she had my pants pooled around my ankles on the floor.\n\n\"Mmm...so big,\" she purred as she ran her hands over my white fitted boxers, the outline of my turgid cock casting dark shadows as my prick angled up towards my hip.\n\nI watched, totally in awe, as she leaned in close and rubbed her face against my underwear, her eyes closed in bliss as she pressed herself against my throbbing cock. I looked down to see a damp stain where precum had seeped into my shorts at the tip, and Grandma found the exact same spot, purring like a kitten as she rubbed that damp spot against her cheek. Mesmerized, I watched her extend her tongue and press the flat of it against the wet material, licking and sucking at the same time as she drew some of my cock-sap through the fabric and into her mouth. It was just about the hottest thing I'd ever seen, and my cock gave another twitch and throb of appreciation.\n\n\"Oh god, I need to get this in my mouth,\" Grandma said with a low groan as she slid her hands over the waistband of my underwear and drew them down to my ankles in one quick jerk.\n\nMy cock unfurled and thrust skyward, a glistening web of precum flicking off the tip and hitting her right in the face. My prick throbbed and twitched as it pointed to the sky, stiff as an iron rod and bobbing with each beat of my heart.\n\n\"Wow, it's so big. I love it!\" she gasped out hungrily as she leaned forward and extended her hand.\n\nShe wrapped her slender fingers around the base of my cock, her fingers coming nowhere near to closing. She drew it down towards her, the churning blood in my body making it difficult for her to pull its thrusting length away from its upright stance. Not to be deterred, Grandma forcefully drew it down and leaned closer, closing her eyes as she rubbed the drooling tip against her cheek, a nasty snail-trail of cock-sap glistening on her skin as she moved it all over her face. She gave a little coo of pleasure as she pressed the throbbing shaft against her soft mature skin, a look of pure bliss on her face as she moved it all around, giving it little kisses as her fingers cradled it lovingly. As I looked down at the serene pleasure on her face as she gently pressed it against my swollen cock, I realized I had never seen anything so intensely erotic in my life. Another surge went through me and a pulsing drop of precum oozed from the tip before she rubbed it slowly across her forehead, leaving another shiny trail in its wake.\n\n\"Oh Jake, your cock is so beautifuI, so big and beautiful,\" Grandma said in husky voice as she looked up at me, pure lust in those gorgeous blue eyes of hers. \"I've gotta taste it. I want you to hold my head while I'm sucking it. I want you to feel how much I want it.\"\n\nOh Jesus, just listening to that from my grandmother had me almost coming right there on the spot. She reached forward and took each of my hands and placed them on her head. It felt wonderful as my fingers slid deep into her silky locks as she moved closer, her mouth opening wide. My eyes were fixed on her as she got closer and closer to the drooling tip of my cock, a look of pure rapture on her pretty face. She placed a tender kiss on the tip of my prick, and I felt her tongue swirl as she drew it over the tasty bead of precum at the very tip and sucked it in, and then I watched her lips spread out as she leaned forward, her jaw opening wider and wider to accommodate the substantial girth of the flared mushroom head.\n\n\"Mmm, so big,\" I felt more than heard her say as she purred that into the pebbly surface of my glans as her lips went further down. Finally, with her lips stretched almost to the tearing point, I watched as they slipped over the thick rope-like coronal ridge, the engorged crown captured fully within her mouth.",
        "\"Mmm...\" She gave off a soft throaty moan again as her eyes closed and she slowly rocked her head from side to side, her tongue slowly bathing the head of my cock with her hot saliva. I felt my dick give another pulse, and knew she was feasting on another pearl of precum. I heard her make a swallowing sound, and that was followed by another little whimper, as if she liked what she'd tasted and wanted more.\n\nShe pressed forward, her ovalled lips making their way further down my thrusting shaft. Oh man, it felt incredible. My grandmother's mouth was so hot, and so wet, it felt like my cock was being greased up in a sheath of warm melted butter. She reached back and tapped my hands, letting me know she wanted me to take more control. Again, just that simple action of hers was sexier than anything I'd experienced and my libido soared.\n\nNot wanting to disappoint her in any way, I firmly gripped her head and gently pulled forward. I felt her lips move further down my cock, her tongue rolling along the underside of the throbbing shaft as she took a few more thick inches deep into her mouth. At the same time, I felt her whimper and mewl in pleasure, letting me know she was loving what she was doing. With her mouth crammed full of cock, she slowly drew back, sucking salaciously at the same time. She stopped with the flared knob trapped within her mouth, and then started bobbing up and down on the turgid shaft, noisily sucking and slobbering away at my throbbing cock.\n\n\"Oh fuck, Grandma,\" I gasped as I threw my head back against the wall and closed my eyes in rapture as I surrendered to her talented mouth. I guided her head with my hands, as she seemed to want, but she was sucking my cock like she was starving and it was the last thing on earth. She was sighing and whimpering constantly, hungrily sucking and slurping as she slaved away at my thrusting erection. I felt her hands return to my midsection, and glanced down to see her red-painted fingernails scratching teasingly around the base of my cock, her sharp nails leaving little red traces on my skin. The feeling was incredibly arousing, an extra sensation I'd never felt before but loved instantly. I'd been so turned on by everything that had happened that I already knew I wasn't going to last long, but those raking fingernails were the last nail in my climax coffin. She twisted her head in a corkscrewing motion on the next downward suck and, between that and the tingling sensation of those fingernails on my flesh, that was all it took.\n\n\"GRANDMA...I...I...I'M GONNA COME!\" I warned as I felt the first rush of semen speed up the shaft of my cock. I had the feeling that Grandma wanted me to come in her mouth, wanted me to feed her my thick milky seed, give her every last morsel of my cum for her take deep into her welcoming belly.\n\n\"Mmm...\" she let out a grateful whimper as I felt the first rope of spunk jettison deep into her mouth. The luxurious sensations flowing through me were so intense that I thought my knees might give out. I pressed myself back against the wall and gripped my grandmother's head firmly as I totally unloaded, flooding her mouth with rope after rope of cum. And Grandma just kept enthusiastically sucking, her lips driving up and down on my spewing cock as I kept ejaculating. She made that same blissful swallowing sound a second time, and then a third. I had never come that much in my life and I felt myself trembling all over as I just kept shooting off in that beautiful, that hot, that wet, that perfect sucking mouth. I kept spurting, gouts of spunk spewing into her mouth one after another as she kept hungrily sucking them down. Finally, I felt those delicious sensations start to ebb away, but I continued to lean against the wall, gasping as I sucked in deep breaths of air as my climax dwindled. And Grandma kept sucking, but slower now, nursing at my cock as she coaxed out every creamy morsel that she could.\n\n\"Jake, that was wonderful,\" Grandma said a minute or so later as she got to her feet and moved in against me, her pretty face turned up to mine. \"You came so much, and your cum was delicious. I loved it.\"\n\nShe pressed her lips to mine and kissed me again, her mouth still wet and hot with traces of my cum. I didn't care, I kissed her back eagerly, never wanting to forget this moment, and thinking about what might come next.\n\n\"Mmm...you're still hard. I like that,\" she said as she ground herself against me, that mischievous twinkle in her eye once more as she moved from kissing my mouth to playfully nipping at my ear.\n\n\"I think when it comes to you, Grandma, I'm gonna be hard all night.\"\n\n\"I hope that's a promise,\" she replied as she reached down between us and wrapped her slender fingers around my still-hard prick, her hand slowly stroking back and forth.\n\nI watched as she glanced down, eyeing up my rigid cock like it was her favourite new toy, which I hoped it was.\n\n\"It's so big. I was hoping it would be big, but I never dreamed it was as going to be as huge as this.\"\n\n\"Was Grandpa big?\"\n\nShe nodded as her hand kept exploring my throbbing prick. \"Your grandfather was the biggest I've ever had, but you've got him beat by a couple of inches, and it's so much thicker than his too. I could barely get my mouth around it.\"\n\n\"But from the way you were sighing and moaning, you seemed to love it once you did.\"\n\n\"Oh my god, it was incredible to feel it my mouth. So big, so powerful, and so much cum. You know, baby, from now on, you can use my mouth anytime you want.\"\n\nI couldn't believe what I'd just heard. It sounded like something out of a dream, but I knew it wasn't; my grandmother was right here, in the flesh, very much in the flesh, with her hand stroking my cock and a load of my cum already in her belly.\n\n\"Would you like to feel what you've got in your hand somewhere else, Grandma?\" I asked, praying that this was going to be more than just a blowjob.\n\n\"Oh god, yes,\" Grandma replied as she turned into me and kissed me once more. \"I want to feel every inch of that beautiful big cock in all three of my holes before we're done tonight.\"\n\nMy eyes opened wide and my cock gave another lurch as what Grandma just said registered in my depraved little mind. I couldn't believe what I was hearing. All three holes!\n\n\"Well, I guess one part of you likes the sound of that?\" she said playfully as she looked down at my throbbing cock.\n\n\"I...I love the sound of that, but I just think you should know...\"\n\n\"What...what is it, dear?\"\n\n\"I...I've never actually...\" I said sheepishly, which brought a soft knowing smile to Grandma's face.\n\n\"Do you mean you're still a virgin?\"\n\nI could only nod in reply, afraid for some reason that she'd be disappointed in me.\n\n\"With a cock as big and beautiful as this,\" she said as she let her fingers trace teasingly along the length of my dick, \"I can't believe you've never had the chance to...?\"\n\nI shook my head. \"Make no mistake, Grandma, I've wanted to. But all the girls I've been with have decided at the last minute that they didn't want to go through with it.\"\n\nAgain, what I said made Grandma smile knowingly. \"I can't say that I'm surprised. If I was an 18-year-old girl I think I'd be afraid of a cunt-stretcher like this too.\" She gave it another loving squeeze as she turned her face up and gave me a placating kiss on the cheek. \"I hope those awful girls didn't end up leaving you high and dry, did they?\"\n\nI shrugged. \"A few used their hands to help me out, but most just wanted me to take them straight home after they saw my penis.\"\n\n\"Don't ever call this a penis, something as big and beautiful as this should be called what it is; a cock. A cock that those girls don't know how to appreciate, but a mature woman like me knows how to take care of. Would you like that, sweetheart?\" She moved in close and gave me a soft warm kiss on my lips before looking up at me with that beguiling twinkle in her eyes. \"Would you like Grandma to take care of this big beautiful cock all night long? Would you like Grandma to bust that cherry of yours?\"\n\nHer words were so provocative and erotic that I felt like legs were going to give out under me right there on the spot. \"Oh god, yes!\"\n\n\"Well, let's start by taking the rest of your clothes off.\"\n\nWith skillful hands, she had my loosened tie and shirt off in no time. I kicked off my shoes and socks and stepped out of my pants and underwear left pooled on the floor.\n\n\"You're such a handsome young man,\" Grandma said as she moved in against me and gave me another rapturous kiss, her hands exploring the firm plates of my pecs and my broad shoulders. She stepped back from the kiss, her eyes raking hungrily over my naked body. \"Those silly girls don't know what they're missing.\" She paused as she glanced over at the king-size bed before bringing those compelling blue eyes back to mine. \"I can't wait to feel that strong powerful body of yours plowing me deep into that mattress, over and over.\"\n\nI was so revved up that I pulled Grandma against me, pressing her huge breasts against my chest as I kissed her savagely, my tongue rolling against hers as she kissed me back just as intensely. We finally broke the kiss, both of us panting and wanting more.\n\n\"Undo me,\" she said as she turned around.\n\nHer pinned-up hair had loosened while she'd been sucking me off, and now she pulled out what was holding it in place and shook it out, the silky honey-blonde locks falling in cascading waves about her shoulders. Like she'd done before, she held it up out of the way as I reached up and slowly drew down the hidden zipper on the back of her dress. The raspy metal sound of that zipper coming undone felt like the most beautiful sound I'd ever heard.\n\nAs the zipper came down, the back of her dress opened up. I took the liberty of pushing the sides down over her arms as she held them away from her body. I went even further and pushed the snug material down over her wide hips, the dress falling to the floor in a puddle of blue at her feet. She deftly stepped out and with a flick of one high-heeled shoe, the dress took up residence on a chair in the corner.\n\nI could now see that magnificent body in all its glory, even if just from behind, but that view was just as mesmerizing as I knew the view from the front would be. I had been right, she was wearing a navy thong that matched the bustier, the tiny whale-tail visible above her big curvy bum cheeks, which looked as smooth and soft as a newborn baby's.\n\nHer shapely hourglass figure seemed to be emphasized even more without her dress on, my hungry eyes taking in every delicious curve and enticing valley as I let them roam over her lush body. She still had her towering high heels on and it made her legs look stunning. They were long and shapely, with meaty calves and succulent full thighs, while her dimpled knees and slender ankles emphasized those fuller areas even more. I felt like I could come just staring at those fantastic legs, picturing them spread wide open, with her sexy high heels pointing at the sky, my cock buried high up between them at the apex of her sex.\n\nMy gaze moved up to her wide mature hips, which seemed to be made for fucking, for bouncing on a mattress for hours on end. Her indented waist drew my eyes seductively, as a woman's body should. And what a woman's body it was, I thought as I let my eyes move even higher up her back. I knew it was a body any woman would envy, no matter what her age. As my eyes travelled up her back, I settled on the area where the broad band of the navy bustier covered. And from behind, I could see the outward swells of her enormous breasts extending beyond the sides of her shapely form. Just seeing that sent another jolt of blood pulsing to my already throbbing prick. Her tits were enormous, surging past the full breadth of her chest erotically. They were just so fucking big that I felt my mouth watering just looking at them from that point of view.\n\nI moved in close behind her, molding my larger body to hers. As my head settled over her shoulder and I breathed in her intoxicating fragrance, I let my hands move up her body, starting at her hips. Those wide child-bearing hips fed into her trim waist that I knew she worked so hard to keep in shape. All those hours at the gym were paying off in spades as I let my fingers explore her shapely hourglass figure. My delicate touch made her shiver and she pressed back against me, reaching over her shoulder as she turned her head sideways, pulling my face close to hers.\n\n\"Mmm, Jake, you feel so good against me. And I can feel how hard you are,\" she said, rolling those wide hips back against me as my rigid prick rose up between the big soft cheeks of her bum, the drooling tip rubbing against the little dimple at the small of her back.\n\n\"So nice,\" she cooed softly as I let my lips trail along the soft supple skin of her neck next to that sexy pearl choker, showering her with little butterfly kisses as she kept my face pressed into the side of hers.\n\nMy hands continued to explore that gorgeous body of hers as we pressed together, my hands now moving further up the front of her body from behind, my fingertips coming into contact with that sexy navy bustier. I let my fingertips trace over the delicate lace, at the same time feeling the firm outline of the underwire beneath the reinforced seams. I brought both hands together as I slid them up her front, my cock surging even more as my hands encountered the bottom edge of those massive bra cups and formed themselves to her big heavy spheres as I cupped them from behind.\n\nOh fuck, I said to myself. They are so fucking huge! I had dreamed about this moment so many times, but it had always been just that; a dream. Now, it was really happening, I was cupping my grandmother's enormous breasts, and that soft whimper of desire told me she loved the feel of my hands on her just as much as I did.\n\n\"Mmm, from the feel of something big and hard poking into my back, I think you're ready to put it somewhere else hot and wet besides my mouth.\"\n\n\"Oh god, Grandma, I've love to fuck you. I've been dreaming of nothing else for so long,\" I whispered breathlessly into her ear as I held her close and hefted those massive breasts of hers, amazed by the enormous size and astonishing weight of them.\n\n\"It's what I've been dreaming about for years too,\" she said as she turned around to face me. Her eyes instinctively dropped down to my thrusting erection, the bloated cockhead reaching almost to the underside of her breasts. \"Your cock is so beautiful, I can't wait to have every last inch deep inside me.\" She paused and looked at me, a twinkle in her eye as she put her hands on my chest. \"Have a seat, mister.\"\n\nWith that, she gave me a playful shove, making me topple back onto the side of the bed.\n\n\"That's a good boy. Sit back up against the headboard. That bed is where I want you for the rest of the night.\"\n\nShe took a step closer as I shifted back onto a stack of pillows and propped myself up on my elbows. With a naughty little grin on her face, she stepped over to the side of the bed and then reached up to the front of the navy bustier. With both hands working on the sexy garment, I watched her undo one little metal hook, and then a second one. With her generous breasts already threatening to spill over the top of those jam-packed cups, I started to see more of the insides of those massive tits come into view. She slowly, teasingly, continued to undo more of the tiny little hooks. She hit one point where the whole garment shifted and the two sides of the bustier jumped apart a tiny bit, her huge breasts filling the newly-created opening between the sides spectacularly. I felt my cock lurch as my eyes opened wide, getting my first glimpse at those breasts I'd been jerking off to for years.\n\n\"Mmm, that big cock of yours seems to like these, doesn't he?\" she asked playfully as she paused to push her boobs together, her hands pressing on the sides of the bustier which caused her enormous guns to swell up beneath the sexy garment until I thought I was just about to pass out in anticipation.\n\n\"Oh god, yes,\" I was able to groan out. My grandmother slid her hands back to the front of the bustier and provocatively undid the last couple of hooks. With it totally undone, and with a sexy tendril of hair curving down over one eye seductively, she kept her eyes on mine as she drew the sides of the bustier apart, sensually rolling her shoulders as she peeled it off and tossed it aside.\n\n\"Oh fuck...\" I gasped out loud as her naked breasts came fully into view; her huge, mouth-watering, gloriously perfect, breasts. They were deliciously round and so voluminously full that I literally did feel my salivary glands starting to work overtime as I stared at them. As I'd noticed from behind, they were so big that they extended beyond the sides of her body, making her shapely figure look almost cartoonish because her breasts were so big. Her areolae and nipples were a rosy pink color, which looked perfect. Her nipples were already hard, and bigger than I'd ever seen before, even with all the porn sites I'd looked at. They stood out prominently from her massive breasts with a slight tilt upwards, as if looking up to see if there was a mouth coming down to suck on them. Even with her bra off, her cleavage was still a mile long and as deep as the Grand Canyon. All in all, they were the most perfect set of breasts I had ever seen in my entire life, even better than I imagined them to be in all my dreams and fantasies.\n\n\"From the look on your face, I have the feeling you'd like to enjoy these for a while,\" she said as she slid her hands up the front of her body and lifted one breast upwards, her eyes locked on mine as she slowly, provocatively, brought it to her mouth and wrapped her lips around the nipple.\n\n\"Oh my god...\" I uttered under my breath as I watched Grandma suck gently on her nipple, her eyes hooded in pleasure as her lips and tongue went to work. My cock was throbbing like crazy, precum oozing like a river from the tip as I watched her change from one breast to the other, lifting it up and placing her warm red lips over the nipple of that one. She gave off a sexy little purr that had my libido soaring even more.\n\n\"Mmm, this feels really good,\" she said as she lifted her head and pointed her breast right at me, the tip glistening hotly with her spit. \"But it feels so much better if somebody else does it. Would you like to try?\"\n\nLike someone struck by lightning, I could only lay there and nod my head like an imbecile, hypnotised by the sight of those spectacular tits, her nipples shining erotically with drops of her saliva. She sidled over onto the bed and leaned over me, those gigantic breasts filling my field of vision as she swung them slowly over my face, the sheer size blocking out everything else. Even with her arms supporting her on each side of my body, her boobs hung down within an inch of my face. She swayed just a touch more, dragging the hot tips of her nipples across my cheeks and forehead. I almost came right there on the spot.\n\n\"C'mon, baby, latch onto one of Grandma's boobs. I know you want to.\"\n\nThere was no way I could deny that, having thought about a moment like this forever. I tilted my head up as she slid downwards, bringing one massive breast to my mouth. I opened my lips and quickly latched on like a baby, the stiff rubbery nipple feeling huge inside my mouth.\n\n\"Mmm, that's it, take your time, make Grandma feel really good,\" I heard her coo from above me as I gently started to suckle, my lips and tongue exploring her glorious breast. I was being enveloped and almost suffocated by the warmth and sheer size of those massive mounds, but I'd never been happier in my life. She rolled her upper body, dragging one tasty nipple out of my mouth with a slurpy pop before guiding the other one between my lips. I gave it just as much attention as the first one, sealing my lips tight around the protruding bud as I laved my tongue all around the pebbly button, feeling it grow even stiffer.",
        "\"Yes, that feels so good. I'm so sensitive there,\" she said as she pressed herself down further onto my face, those big pillowy breasts mashed from one side of my face to the other. She did that for a few seconds before rising up again, allowing me a chance to breathe. My face was sweaty and glistening, but I felt wonderful, my cock twitching in the air as I kept worshipping those magnificent breasts, switching from one to the other a couple more times.\n\n\"You better be careful there, tiger, if you keep that up, you're gonna make me come just with those sweet lips of yours,\" she said teasingly as she pulled up slightly and looked down at me, her eyes hooded and glassy.\n\n\"How would you like to feel these lips somewhere else on that gorgeous body of yours?\" I asked teasingly as I did my best to give her one of those mischievous winks I was used to getting from her.\n\nThis brought a soft smile to her face instantly. \"I'd love that, and from the way you've been using that sweet mouth on my boobs, I can't wait. Why don't we trade places?\"\n\nAs anxious as I'd ever been, I scrambled out from under her while Grandma rolled onto her back in the middle of the bed, her head propped up against the headboard on a stack of pillows. I looked down as those glorious boobs wobbled and settled as she relaxed into the sheets, her massive spheres overflowing the full breadth of her chest.\n\n\"C'mere, baby,\" she said as she crooked her finger towards me, \"show Grandma what you can do with that darling mouth of yours.\"\n\nShe drew one leg up as she spoke, and I noticed she was still wearing her high heels, the dagger-like heel dragging over the bed sensually. She drew her other leg up beside the first one, and as she beckoned me with that talon-like red-tipped finger, she let her legs roll slowly open to the sides.\n\nOh fuck...yesssss! I muttered to myself at the wondrous world opening up to me. Grandma's full meaty thighs slowly parted and looked exquisite as that widening V of creamy flesh drew my eyes magnetically all the way to her treasured mound, still teasingly covered by her tiny navy thong. I could see that the little triangular panel hugged her flesh snugly, and even in the dim light from the bedside lamps, I could see the outline of the groove between her lips beneath the tiny piece of material. She moved slightly, and the light caught that spot for a split-second, but it was enough for me to catch a flicker of moisture that was seeping through the silky fabric.\n\n\"Come to Grandma, baby, let me feel those sweet lips on me.\"\n\nWith a shudder of excitement tripping down my spine, I moved forward between Grandma's widely-spread thighs. I could smell her now, the warm feminine scent that had been driving men crazy since time began. I breathed deep, letting that subtle erotic fragrance wash over me as I moved even closer. I could see how wet she was, that tiny triangle of navy silk soaked through. My mind was spinning with arousal as I extended my tongue and pressed it against the sodden fabric, tasting my grandmother's honey for the first time.\n\n\"Mmm...\" That purring sound came from me, but I heard one come from my grandmother just a few moments later as I slowly dragged the flat of my tongue upwards, feeling the warm crevice of her swollen pussy-lips beneath her soaked panties. I sucked at the same time, drawing as much of that warm juice through the fabric and into my mouth as I could. I felt my tongue press against something stiffer at the top of her slit, and paused as I rolled the tip of my tongue around it, knowing I had hit her clitoris.\n\n\"Yes, that's the spot. That's where that sweet mouth of yours is going to be spending a lot of time from now on,\" she said with a deep husky voice as she rolled her hips slowly against my face, the warmth of her body flowing into me in its closeness.\n\nI ran my tongue back down along the front of her panties, lapping up more of her succulent nectar. I probed at the leg opening, sliding my tongue along it, wanting more.\n\n\"That was nice, but I think you want the real thing now, don't you?\" she asked teasingly as she reached down and tenderly stroked my cheek.\n\n\"Yes,\" I whispered softly as I looked up into her loving blue eyes, alive with excitement and anticipation.\n\n\"Go ahead then, baby, take my panties off for me.\"\n\nI reached up and grasped the ribbon-like waistband of her tiny panties in my fingertips. As I pulled down, she lifted and shimmied her hips, helping me as I drew the flimsy silk garment down and off her body, noticing how sexy those towering high heels were as I slid the panties over her feet. She sensually drew her legs back up, planting her heels securely into the mattress as her legs rolled open once more. Her pussy was beautiful, just like the rest of her. It was totally shaven, just as I'd hoped. Like the rest of her body, her labia were full and meaty, flushed pink with her arousal. Her whole mound was glistening lewdly, testament to how aroused and wet she was. I could see the pronounced bud of her clitoris, and it was big too, the erect spire of flesh sticking up from its protective sheath like a beacon, begging for attention.\n\n\"Come and get it, sweetheart, dinner is served,\" Grandma said as she reached down and provocatively drew the tip of her middle finger up the full length of her juicy slit.\n\n\"Ohhnn...\" I couldn't help the lustful moan that escaped my lips as I dove between her lush full thighs, my tongue spearing into her hot flushed mound. I feathered my tongue between her soft, slippery labia, feeling the warmth of her inner folds on the tip of my tongue. At the same time, her luxurious taste and intoxicating scent had my senses reeling. I was really going down on my grandmother, and she tasted fantastic.\n\nI settled in on my stomach between her legs, taking my time as I serviced her hot mature pussy with everything I had. I sent my tongue as deep into her as I could, spinning it in slow teasing circles that had her wide hips shifting restlessly. I licked slowly up to the top of her greasy slit, rolling my tongue over the protruding bud of her clit, amazed at how big and hot it was. I bathed it with my flowing saliva and she flexed her hips up against me, the two of us working together.\n\n\"That's a good boy,\" I heard her say from above me, her hands coming down to stroke tenderly through my hair as I continued to pleasure her. \"My...my...you are good at that. I think we're going to have to make this a regular thing between you and me. Would you like that?\"\n\n\"Mmhm,\" I moaned in return, not missing a beat as I kept slaving away at her drooling trench. The next time I sent my tongue deep inside her, I concentrated on pressing the tip against the soft folds of flesh on the roof of her vagina, just below her clit.\n\n\"Oh fuck...that's the spot...,\" Grandma groaned out as she gripped my head tighter and kept me pressed against her, her steaming mound mashed against my face. With the tip of my tongue rubbing salaciously over her trigger, I reached up and rolled the tip of one finger over her clit, the sensitive bud feeling like it was on fire. \"That is so good...just keep...just keep...I'm gonna...I'm gonna...YESSSSSSSSS!\"\n\nGrandma started to thrash about like a wild thing as her climax hit her. Her wide hips were bucking and shifting restlessly from side to side as I kept working on her, my mouth and finger making her climb the walls. She started to gush like crazy, her warm cunt-honey spraying all over my face. That turned me on even more and I kept going at her, licking her sloshy cunt and rubbing her throbbing clit as she spasmed and convulsed like she was having a fit. With paroxysms of pleasure flowing through her, she came for a long time before the intense sensations slowly started to ebb away. With her hands on my head, she continued to keep my face pressed against her, but not as firmly. As I continued to kiss and lick tenderly at her seeping cunt, her fingers moved idly through my hair as she relaxed, enjoy the euphoric afterglow that came from a really good orgasm. I was thrilled that I'd had something to do with it.\n\n\"Oh, Jake, that was incredible. Where did you learn to do that?\"\n\nI shrugged and told the truth. \"From watching a lot of porn, I guess. Like I said, I don't have very much experience.\"\n\n\"Was that MILF or GILF porn, I assume? I always knew the way you looked at me that you had a taste for older women.\"\n\nI couldn't leave that softball lobbed up there untouched. \"And now that I've had my real taste of an older woman, there's no turning back.\"\n\n\"Whatever it is, you're a natural.\" She gently ruffled my hair as she smiled down at me, a look of contented bliss on her face. \"And if you love it so much, you can do that to me anytime.\"\n\n\"Hmm...like right now?\" I asked teasingly as I leaned closer and dragged my tongue slowly up her gooey slot, pursing my lips and kissing her sensitive clit lovingly.\n\n\"Well...I...oh god, that's so good,\" she said with a moan as she closed her eyes and savoured the feel of my lips on her most sensitive point.\n\nTen minutes later, she flooded my face for second time, and then a short time after that, I was awash in her sticky nectar as I took her to her third orgasm in a row, loving the taste of those succulent juices as she sprayed my face like a firehose gone awry.\n\n\"Oh my god, Jake...stop. You have to stop, I'm just too sensitive right now,\" Grandma said as she reluctantly pushed me away. I had the feeling she would have let me stay there between those gorgeous thighs and pleasure her all night, but I could tell she had other things on her mind, just as I did.\n\n\"C'mon, baby, it's time for Grandma to show you what that big, beautiful cock is for,\" she said as she stretched her arms out towards me, beckoning me to her. With my cock thrusting up between us like a heat-seeking missile trying to find its target, I moved up over her in a push-up position, my hands on each side of her body.\n\n\"Oh my, I've really made a mess of you, haven't I?\" she said as she took my head in her hands as I looked down at her flushed face, her eyes sparking with desire. \"Let me clean that up for you.\"\n\nShe pulled my face towards her and then I felt her soft warm tongue run over my skin, licking up her own tasty juices. She purred like a kitten as she did, licking me clean as I got turned on more and more. When she was finished licking every square inch, she held my face close to hers. I could see the love in her eyes as she looked deep into mine, making my heart swell with emotion. With her eyes misting up, she reached up and gave me a soft warm kiss on the lips. Not a hard passionate kiss, but a gentle caring kiss, the kiss of lovers.\n\n\"I love you so much, Jake, and I'm so happy I can be your first. I want this to be so special for you.\"\n\n\"I love you too, Grandma, and there's nobody in this whole world I'd rather be with. I've dreamed about this for a long time, and I can't believe those dreams are about to come true.\"\n\n\"They are, sweetheart,\" she said as she gave me another tender kiss. When she drew back and looked at me, she had a playful smile on her face and that naughty twinkle that I loved so much back in her eyes again. \"From now on, we can do everything you've ever dreamed of, anytime you want.\"\n\n\"Do you really mean that, Grandma?\"\n\n\"I can already tell how perfect this is going to be between us, and I'm sure neither one of us will want to stop once we get started. That cock of yours is so big and hard, I don't think I'll ever get enough of it.\"\n\n\"And I don't think I'll ever get enough of this gorgeous body of yours,\" I said as I lowered my head and gave one of her nipples a little suck.\n\n\"Mmm, you sure know how to tease a lady, don't you? Now, let Grandma steer so I can get that big beautiful cock of yours inside me.\"\n\nAs she kept her eyes locked on mine, I felt her hand move between us, her fingers circling my throbbing prick as she gave it a loving squeeze. With a smile of pure pleasure on her face, she directed the engorged tip high up between her thighs, rubbing the broad mushroom head all over her flushed slippery mound.\n\n\"Mmm, that feels so good,\" she said as she drew the flared knob all over her flesh before positioning it between her beckoning labial gates.\n\nI instinctively moved forward slightly as she pulled me towards her. I could feel those hot slick lips circling my cockhead as I started to enter her. The feeling was exquisite as I felt those plump pink lips against my glans, the hot wet tissues adhering tightly to the enflamed crown as she pulled me further forward, more of the cockhead entering her tight channel.\n\n\"Oh god, Grandma, that feels so good,\" I said as I looked down at her with love-filled eyes.\n\n\"You're telling me,\" she said with a sigh as she pulled a bit more into me with her hand, the whole head of my cock now captured between her clutching pussy-lips. With it safely ensconced within the entrance to her velvety love-pocket, she pulled her hand back and circled both of them behind my neck, her eyes looking up at me hungrily. \"Now, fill me up with that monster of yours. But do it nice and slow, darling, so I can get used to it. I've never had one as big as yours before.\"\n\nMy heart soared with pride when I heard that. It thrilled me to know that I was bigger than any lover Grandma had ever had. Feeling emboldened, I slowly levered my hips forward. I could feel her stretching to accommodate my girth as a few more inches slid into her. I'd never felt anything like it in my life. Her mature pussy was as hot as a blast furnace, and her steaming coital walls were gripping me like a hot buttery fist.\n\n\"Unggh...\" she groaned, but that smile of contentment never left her face. I looked down into her glassy eyes as I flexed forward even more, mercilessly feeding more of my cock into her.\n\n\"Oh my god, it's so hard, so fucking hard,\" she cooed as her eyes closed for a second as I stopped, the way before me barred by the tight tissues inside her. I glanced down between us to see about three more inches remaining outside her.\n\n\"Mmm, just hold it there for a bit, baby, let me get used to it. It feels so good inside me. I've never been filled up and stretched like this before. I can see why those girls were scared of it.\"\n\n\"Do you want me to stop there, Grandma,\" I asked, suddenly worrying about her. \"I don't want to hurt you.\"\n\n\"There's no way I'm going to let you out without taking every last inch inside me. Just kiss me for a second and let me work it for a bit. Don't worry, I'll tell you when I'm ready for more.\"\n\nJust hearing those words made my cock throb within her, the clutching walls of her cunt gripping me tightly. I leaned forward as her arms around my neck pulled me to her. We shared another warm tender kiss, our lips pressed tightly together, our tongues rolling together as we savored the love we were sharing. At the same time, I felt the talented muscles within Grandma's pussy working on my cock. A luxuriously scintillating rippling sensation ran down the length of my turgid prick as those muscles inside her massaged and gripped it. The sensation was beyond words, exquisitely hot and sinfully exciting. I could feel the hot oily tissues inside her bathing my cock, lubricating it in order to take those final few inches.\n\n\"Oh my god, that feels so good, sweetheart,\" Grandma said with a low moan as she continued to slowly roll her hips, that hot mature pussy of hers doing delightful things to my cock. \"It's so big, and so hard, I love it.\"\n\nFor the next couple of minutes, I let myself get lost in the delights of the moment, basking in my grandmother's experience, letting her tight mature cunt work its magic on me. It gripped and pulled at me like a tight slick fist, the muscles inside her sending luxurious sensations through my rigid member all the way to my love-struck mind.\n\n\"Okay, baby,\" Grandma said as she looked me in the eye, \"I'm ready for you to give me the rest of it. Start pushing and don't stop until you've got it buried as far into me as you can.\"\n\nTurned on beyond belief, I flexed backward slightly and then levered my hips forward, pushing against the tightness inside her. I could tell she loved the feel of the struggle as well, and then those tight tissues inside her started to yield, reluctantly parting and allowing me deeper as they bathed my throbbing prick with hot oily juices.\n\n\"Yes...yes...that's it...that's it,\" Grandma said as she threw her head back and closed her eyes. \"So hard...so beautifully hard...\"\n\nI had two more inches inside her, one more to go.\n\n\"OH FUCK...SO BIG...SO DEEP...\" As I mercilessly drove my hips forward, Grandma's hands flew down from behind my neck as she grabbed at the sheets, clutching them in a death grip. I steeled myself and with a final thrust buried that last inch as far into her as I could go, my body slamming into hers.\n\n\"OH MY GOD...I...I...OH FUCKKKKKK...\" she gasped out as she started to shake and thrash about like she'd been struck by lightning. She was almost tearing the sheets off the bed as her hips twitched and bucked up into me, every inch of my rock-hard cock stretching and filling that hot mature cunt of hers. Buried to the hilt, I held on for the ride as she shook and convulsed like a bucking bronco. It felt wonderful to know I was giving my grandmother such a powerful orgasm and my cock throbbed as I felt her pleasure flow right through her into me. I knew I was close to going off right there, but I wanted it to last. Even as she flexed and spasmed as waves of ecstasy continued to flow through her, I used all of my willpower to suppress the urge to go off, and held on as the intense sensations coursing through her finally started to wane. I saw her grip on the sheets relax as she sagged back into the bed, drawing in deep breaths of air as she recovered. I couldn't help but look down at those tremendous tits of hers, watching the massive globes swell and heave as she breathed deeply.\n\n\"Oh Jake, that was so good, so unbelievably good. I don't think I've ever come that hard in my life.\"\n\n\"I'm glad you liked it,\" I said as I rolled my hips teasingly, stirring her gooey insides like a batch of wet cement.\n\n\"Mmm, I can't believe how big you are, and how hard. I never thought I'd ever feel so full and stretched out like this. It feels amazing.\"\n\nBy now she'd come down from her orgasmic high enough to slip her arms around my neck and kiss me again. As she did, she provocatively rolled her hips up against mine, letting me know she wasn't done yet.\n\n\"C'mon, lover, show me what you can do with that gorgeous cock of yours.\"\n\nHearing her call me her lover was like throwing gasoline on my already-flaming libido. I drew back slowly until only the head of my cock was trapped between her clutching labia, and then I flexed forward, sending every last inch way up inside her with one powerful thrust.\n\n\"Yes...that's it...that's the way,\" she encouraged as I started to fuck her. She kissed me again before I got into a smooth consistent motion, fucking her as she fucked me back, both of us working together as our pleasure levels escalated.\n\n\"Oh, that's so good, baby,\" she gasped out as my shaven groin kept slapping against hers, a nasty wet sound coming from our joined bodies as I drove every throbbing inch into her, over and over.\n\nHer cunt felt way too good. I'd been so turned on eating her through three orgasms that I was surprised I had lasted this long. Her mature pussy continued to grip and massage my thrusting dick as I fucked her, making the luxurious sensations flowing through my body even more intense that I ever imagined they could be.\n\n\"Grandma, I'm gonna come soon...you are just too hot for me to last any longer,\" I gasped out as I continued to thrust into her, that nasty squelching sound as I drove it in and out of her clutching cunt the best sound I had ever heard.",
        "\"That's okay, baby, I'm almost there too. Come whenever you want. Go ahead, sweetheart, just let it go, pour it all into me.\"\n\nThose words were all it took and I felt the tell-tale sensation as semen started to speed up the shaft of my cock. With the muscles in my abs contracting, I pulled back for one final thrust before slamming it home as hard as I could, just as I started to come.\n\n\"OH FUCK...YESSSSS!\" Grandma wailed as her legs shot out to each side, those sexy high heels pointing to the corners of the room.\n\nI could feel her twitching and spasming at the same time as I came, our bodies melding together in one blissful union. My heart was hammering in my chest as my climax overwhelmed me, shot after shot of cum spewing from my body into hers. The luxurious sensations kept coursing through me as my orgasm continued, rope after rope of jizz flooding into her as I totally unloaded. I was shaking and gasping just as she was, both of us experiencing our shared climax. Her pussy was gripping me still, coaxing as much cum out of me as she could. And I loved it, giving her what she had asked me to do, pour as much of myself into her as I could. I came more than I ever had before, and I never wanted it to stop.\n\nSadly, those incredible sensations dwindled as the last few blasts of semen diminished in size as I finished pasting her insides with all I had. As we both let the peaceful aftershocks flow through us, I kept my cock buried to the hilt inside my grandmother, my gorgeous sexy grandmother, happier than I'd even been in my life.\n\n\"Mmm, I think you liked that as much as I did,\" Grandma said as she gave me a quick kiss.\n\nI looked down at her, her face flushed and glistening from our exertions, but I'd never seen her look happier. \"That was fantastic, Grandma. I've dreamed about doing that with you so many times, but it was even better than I ever imagined.\"\n\n\"I'm so happy, sweetheart. I think this is the start of a beautiful relationship between the two of us. I hope it is anyway. You are such a good lover, a natural. Once you touched bottom that first time with that huge cock of yours, I knew I was addicted. I don't think I could live without it from now on.\"\n\n\"The same here. Being inside you was just...was just so amazing. I can't begin to tell you how much I loved it, but I know that if I died now, I'd die happy.\"\n\n\"No you don't, buster,\" she said as she gave me a playful punch on the arm. \"I had one man die in my arms, I don't want another one.\"\n\nThis came as a shock to me. \"Grandpa?\"\n\nShe nodded. \"Yes, he was in the same position you are right now. He'd just come inside for the second time that night and he had a massive heart attack right there on the spot, his cock still buried inside me.\"\n\n\"Grandma, I'm so sorry.\"\n\n\"That's okay, these things happen. But like you said, I'm sure he died with a smile on his face. That was exactly the way he would have wanted to go.\"\n\nAs she finished speaking, she flexed those muscles inside her again, her talented mature cunt working on my cock once more.\n\n\"Mmm, you're still pretty hard, baby. Do you always stay this hard? You've already come twice,\" she said, that naughty glint in her eye.\n\n\"Like I said, Grandma, where you're concerned, I'm pretty sure I'm going to be hard all night long.\"\n\n\"Ah, the stamina and endurance of youth,\" she said as she winked at me. \"I love it. Now, bring that big beautiful cock of yours up here and let me clean it for you.\"\n\n\"Clean it for me?\" I asked as she patted a spot on the bed next to her face.\n\n\"Yes, the way a woman should clean a man's cock.\"\n\nI slowly withdrew, a nasty wet sucking sound filling the room before my spent prick came out in a slippery rush, gobs and strands of milky cum sluicing out of her to make a mess on the sheets. With my cock still about three-quarters hard, I scrambled up on the bed as Grandma rolled on her side. I sat down on my haunches as she leaned forwards and took my gooey cock in her mouth, the shaft and head glistening with our mixed juices. I watched as her tongue quickly speared a thick gob of spunk and drew it into her mouth.\n\n\"Oh Jesus, Grandma, that is so hot,\" I said as she had her way with me, licking and sucking until she'd gathered up every creamy morsel of stray cum and warm cunt-honey coating my cock and balls.\n\n\"Take my head in your hands, sweetheart,\" she encouraged. \"Work that beautiful prick back and forth in my mouth until you're ready to go again. And then I've got a little surprise for you.\"\n\nLoving the sound of that, I feathered my fingers into her lustrous blonde locks and took hold of her head. I guided it up and down along my cock, sometimes making her lick it, sometimes making her suck it. I flexed my hips back and forth from my spot on my knees, at the same time working her head up and down, feeding it deep into her mouth as I felt my cock stir and work its way back to full hardness under the talent of her skillful mouth. Her mouth was unbelievably hot, and her tongue felt incredible as she swirled it over every inch of my throbbing dong.\n\n\"Grandma, I don't think I can take too much more of that,\" I said, although I felt like I could have stayed there with my cock in her mouth forever.\n\n\"You're definitely ready,\" she said as she pulled back and looked up at me. \"Jake, this has been a very special night for you; your first time being like that with a woman, losing your virginity. I know you'll remember this forever, I know we both will, and I hope I've made it special for you. But--\"\n\n\"Oh Grandma,\" I said as I interrupted her, \"like I said, I'm so glad it was you, you that took my virginity. There is no one I've dreamed about more or I'd rather be with, in any way you like.\"\n\n\"That's so sweet, Jake, you're such a sweet boy,\" she said as she reached up and stroked my cheek tenderly. \"But there is one more thing that Grandma would like you to experience, one thing I think you're really going to like.\"\n\nShe paused and I couldn't help but think about what she'd said earlier, about wanting me to fill her up in all three of her holes. Instinctively, my eyes flicked down towards her curvy backside.\n\n\"Yes, baby, I can tell you know exactly what I'm thinking. There's something I love to do that I hope you'll love just as much. What do you think, sweetheart, do you think you'd like to fuck me in the ass?\"\n\nI felt like the wind had been knocked right out of me. Not only had Grandma sucked me off, then taken my virginity by giving me the most incredible experience of my life, but now she was asking for more, asking if I'd like to 'fuck her in the ass'. I almost swooned with arousal as I looked down at her, at how stunningly gorgeous she was. She'd already allowed me to enjoy her mature body in luxuriously illicit ways that had ended up being beyond any dreams and fantasies I'd ever had, and now, she was offering to let me live out another. And to hear her say that getting fucked in the ass was one of the things she loved? Well, fuck me...who was I to say no? \"Oh Grandma, I'd love to do that. I've looked at that beautiful curvy bum of yours so many times and I've thought of nothing else. I couldn't even begin to count how many times I've thought of how amazing it would be to feel my cock way up inside that perfect bum of yours. Are you...are you sure...?\"\n\n\"Oh god, yes. After feeling that huge cock of yours inside me, and knowing how wonderful it felt in my pussy, I know it's going to feel just as good when I have every last inch inside my bum. It's been a long time since I've had a cock in me like that back there, and I've missed it so much. Do you think you can make your old grandmother happy again by doing that for me?\"\n\nI leaned down and kissed her. \"Of course, Grandma, I'll do anything I can to make you happy. And like you said, I'm sure I'll be happy too.\"\n\n\"Thank you, dear, but I think we both know we're going to have to do something to make sure that monster of yours doesn't tear me in two,\" she said as she slid off the bed and stood up.\n\nI watched as, in her towering high heels, she stepped over to her suitcase and took something out of it. \"I love those shoes, Grandma. You look so sexy in them.\"\n\n\"I'm glad, sweetheart, most men do,\" she replied as she came back and laid back down in the middle of the bed again. \"I thought we'd start with this.\"\n\nShe lifted her hand and I saw that she'd retrieved a bottle of baby oil from her luggage. She popped the cap and turned it upside down, drooling a generous amount of the shiny fluid onto her breasts, and especially into her cleavage. With my eyes open wide, I watched as she set the bottle on the nightstand and started massaging the glistening oil into her boobs.\n\nShe looked up at my coyly as she blatantly rubbed her breasts together and flicked her gaze down to the deep dark line of her cleavage. \"Now, what do you think we need to get nice and slippery before you make love to me back there?\"\n\nI felt a wave of desire surge through as I knew exactly what she wanted me to do. Still on my knees, I threw one leg over her body until I was straddling her. The smile on her face said it all as I leaned forward and pushed down on my thrusting erection at the same time.\n\n\"Oh fuck...yes...\" I hissed as I pressed my rigid cock down between her slick voluminous mounds, the swelling masses of tit-flesh enveloping my throbbing prick with their slippery heat. Once my cock was buried in the canyon-deep cleavage, she pressed her boobs together, trapping it. With my turgid prick safely secured between those huge tits, I withdrew my hand and grabbed the back of the headboard in both hands.\n\n\"That's a good boy,\" Grandma said softly. \"Now, let's get this beauty ready to go all the way up that tight little chute of mine.\"\n\nInstinct took over and I started flexing my hips back and forth, gripping the headboard tightly as I slid my cock luxuriously between those massive slippery pillows. As with everything else Grandma had done to me tonight, I felt like I could stay there fucking her tits for hours. It just felt so good and the thought of what I was doing to my own grandmother was so illicitly sinful that it had my head spinning with excitement. After a few minutes, I could see that she could sense that I couldn't take much more without going off.\n\n\"Okay, sweetheart, it's time to put that gorgeous cock deep into Grandma's little rosehole,\" she said as she let her breasts part, my slippery cock so hard that it slapped up noisily against my stomach once it had been released.\n\nI let go of the headboard and moved back between her legs, my cock thrusting up between us, warm oil dripping off it and shining lewdly where it fell onto her lush mature body. She drew her legs well up, those sexy high heels digging into the mattress once more. She tilted her hips upward, presenting the little wrinkled starfish of her bumhole to me.\n\n\"C'mon, baby, just go nice and slow. I've got to get used to it back there too.\"\n\n\"Don't worry, Grandma,\" I said. \"I'll go as slow as you want. Just let know if I'm hurting you and I'll stop.\"\n\nThis brought another smile to her face as she slowly shook her head. \"Don't worry, no matter how much it hurts at first, I know I'll get used to it. I want every last inch of it inside me back there too, so you just go ahead and give me all of it.\"\n\nFuck me, I thought, I can't believe I'm about to fuck my grandmother in the ass...and she's almost begging me to do it!\n\nWith those perverse thoughts swirling through my brain, I moved forward and angled my hips down. Grandma steered once more, bringing the shiny tip of my oiled cock up against her bumhole. I could feel her tightness as she rubbed the engorged crown all around the sensitive aperture, getting it nice and slippery. After doing that, she pulled me forward, nestling the flared head tightly against the opening. She took a deep breath and slowly breathed it out. As she did, I felt the constricting ring relax.\n\n\"Okay, baby, let me feel you,\" she said as she looked up at me, wanton desire in her eyes.\n\nI gently flexed forward, feeling that tight little ring start to open up as my cockhead started to slip into her.\n\n\"Yesss...\" she hissed, her sphincter incredibly tight as it slowly stretched open to circle my invading cock. A couple seconds more and I felt a popping tightness as I had the whole knob inside her, her tight ring clamping down just beyond the pronounced coronal ridge.\n\n\"Mmm, that's it,\" Grandma said with a soft smile on her face as she looked up at me. Her arms came up and circled my neck again as she pulled me in for a kiss. She then drew my head towards her shoulder as she whispered into my ear. \"Fuck my asshole now, sweetheart, make me yours in every way.\"\n\nFlushed with excitement at what my grandmother had just said, I took a deep breath and flexed forward, sending my cock deeper into her welcoming chute. I couldn't believe how intensely hot it was, and how tight. She was moaning softly as I went further, but I could tell they were moans of pleasure, not pain. And still I kept slowly thrusting forward as I saw her draw her knees up even higher, opening herself up for me as much as possible as her heels waved in the air.\n\n\"Oh god, that's so good,\" she gasped out as I went deeper still, slowly thrusting forward into her steaming bowels until I felt my midsection press up tightly to the softness of her big curvy bumcheeks. I stopped there, the feeling of her hot tight chute sinfully exciting as I had her totally impaled on every throbbing inch of my cock.\n\n\"Ohhn...that feels so good...I've never felt so full in my life,\" she groaned out as I felt the muscles in her rectum grip me.\n\nThe feeling of being so far into her, so deep in her most private parts was unbelievable, and intensely erotic.\n\n\"Okay, baby, I'm ready now,\" she said as she looked up at me, a savage longing in her eyes as she reached down and gripped my buttocks. \"Go ahead, give your grandmother all you've got.\"\n\nMy heart was pounding like a jackhammer with excitement as I drew back, loving the feel of the hot tissues inside her gripping my cock. I glanced down when all that was left inside her was the flared crown, the shaft of my throbbing cock glistening lewdly. I took another deep breath and slowly levered my hips forward, her hands pulling on my bumcheeks as we both worked to drive it deep inside her.\n\n\"Yes...that's it,\" she said as we started to work together in a smooth rhythm, me fucking her and she flexing her wide hips up against me at the same time as she pulled me close, making sure she got every hard inch with each driving thrust.\n\n\"OH MY GOD...I'M GONNA COME ALREADY!\" she gasped out as I felt her start to quiver and twitch. Sensing it was what she wanted, I just kept fucking her, rolling my hips in a corkscrewing motion as I drove every throbbing inch as far inside her steaming chute as I could get it.\n\n\"OH FUCK,\" she wailed. \"SO BIG...SO FUCKING BIG...\"\n\nI kept going as she shook and spasmed, her climax going on and on. I watched her face as I kept fucking her ass, her eyes closed in bliss as the sensations overwhelmed her. And still she kept encouraging me to pound it into her, her hands gripping my backside firmly as she pulled me against her again and again. Finally, I felt her start to come down from the peak of her orgasm, so I instinctively slowed.\n\n\"Oh Jake, that was amazing. You are so good at that,\" she said softly as she slowly rolled her head from side to side, her eyes glassy with contentment. \"Like I said, I've never felt so full in my life, either in my pussy or in my bum and I've never felt so good. I love it. I love you.\"\n\n\"I love you too, Grandma,\" I said as I leaned forward and gave her a soft warm kiss.\n\n\"Mmm, you are remarkable,\" she said as I slowly drew back from the kiss. \"But now I want you to have some more fun. I'm gonna turn over and you're gonna put it back in my bum. And then I want you to really give it to me, as hard as you want.\"\n\n\"Are you sure, Grandma? Like I said, I don't want to hurt you.\"\n\n\"Don't worry, sweetheart. We're both going to love it.\"\n\nLetting her take the lead as usual, my rigid cock came out of her sexy little rosehole with an audible pop. I watched as she turned over onto her stomach. It looked incredibly erotic as she lay face down on the sheets, her huge breasts mashed into the bed and pressed well out beyond each side of her prone body. She spread her legs wide open as she shoved a pillow under her midsection, offering up her greasy little hole to me once more. With her sexy high heels pointed at the bottom corners of the bed, I moved forward on my knees and pressed down on my slippery cock once more, lining it up with that tight little orifice. I nestled it up nice and tight, rubbing it salaciously around the puckered opening before I felt her relax and the tiny hole open up for me once more. With a wanton smile on my face, I looked down and flexed forward as I watched my throbbing erection start to slip back into her, that constricting ring circling my cock possessively.\n\n\"Oh god, that feels so good,\" Grandma moaned into a pillow she clutched beneath her face as I drove forward, not stopping until I was buried to the hilt, the engorged head of my cock high up in her bowels. I leaned forward, resting the flat of my hands on her shoulder blades as I started to draw back. Again, with just the head of my cock inside her, I slid forward, revelling in the luxurious sensation of the intense heat inside her rectum as it gripped me.\n\n\"Oh fuck...yes...\" Grandma groaned as I started to fuck her harder. I could feel her flexing her hips back up against me as I kept my hands high up on her back, both of us working together to give each other as much pleasure as possible. I was punching it into her now, driving her deep into the mattress as I slammed every inch into her with hard rapid thrusts. She reached out to the sides of the bed and gripped the sheets tightly in her fists.\n\n\"OF FUCK...SO HARD...SO FUCKING HARD...\" she groaned loudly. \"I'M GONNA COME!\"\n\nShe started to thrash about beneath me like a rag doll, her body convulsing and shaking like she was having a fit. I could see that she had pulled the sheets up in her clutching grasp as she came. She was quivering and moaning like crazy as I kept pounding into her ass, the heat inside her back passage unbelievable. She was moaning and groaning loudly, moans of pure pleasure as her climax coursed through her. She was babbling and I saw her drooling onto the sheet as her hips continued to flex up against me, the euphoric sensations of her intense orgasm overwhelming her. I finally felt the tingling sensations within start to recede, but I continued, giving it to her with everything I had, wanting to give her as much pleasure as I could.\n\n\"YES...JUST LIKE THAT...JUST LIKE THAT...\" she gasped out and she thrust her hips up against me, the cheeks of her beautiful bum quivering enticingly.\n\nLooking down at that lush ass was all it took to send me over the edge. I drew back and gave her one more vigorous thrust, the bed groaning in protest as I slammed her deep into the mattress, hearing her let out a husky moan of pleasure as she started to come once more at the same time I did.\n\n\"OH FUCKKKK MEEEEE...\" she groaned as we shared the pleasure of an intense mutual climax. With my cock buried to the hilt in that hot tight ass of hers, I blasted her full of cum, sending rope after rope of hot teenage seed high up into her steaming guts. Her tight chute was hot as a volcano, the gripping tissues embracing my buried cock like a pumping fist. I loved it, loved the intense sensations of pure rapture we were sharing, our bodies becoming one as I poured myself into her, into my own grandmother, my own flesh and blood. I knew it was illicitly sinful to feel that way, but that just made it all the more exciting for me, and it seemed like she felt the same. We both came for what felt like forever, my cock continuing to twitch and spit as I flooded her insides, giving her every bit of seed that I had.",
        "Finally, I collapsed on top of her, my cock still buried inside her clutching hole as we both gasped breathlessly, fighting to recover. I lay against her, relishing in the heat of her mature body under mine, not wanting to move...ever.\n\n\"Jake, that was amazing,\" she was finally able to speak after a couple more minutes. \"You're a wonderful lover. I couldn't have asked for a better grandson.\"\n\nShe turned and my spent cock slipped out of her bum as she rolled onto her side to face me. \"I love you, Jake,\" she said as she gave me a tender kiss.\n\n\"I love you too,\" I said as I kissed her back.\n\nI felt her hand reach down between us, her slender fingers gently caressing my sticky cock. \"Sweetheart, you can do that to Grandma any time you want. I loved it.\"\n\n\"I've loved everything we've done tonight. I'm so glad that you were my first, Grandma.\"\n\n\"I'm so glad I was your first too. It's such a special thing that we'll be able to share forever.\"\n\n\"Who would have thought that fate had a hand in this, that we would have ended up having to share this hotel room because of some booking screw-up?\"\n\nA wry smile came over her face. \"Fate had nothing to do with it,\" she said as she playfully drew one red-tipped fingernail down over my lips.\n\n\"What? What are you talking about?\"\n\n\"Like I said, silly, fate had nothing to do with it at all. It was one well-placed phone call from my house to this hotel a couple of days ago that made this possible.\"\n\nI was floored by what she'd just said. I found myself almost unable to speak. \"You mean...you mean you...?\"\n\nShe nodded, a sly look on her face. \"Yep. I cancelled the reservation for the third room. I also requested that the two rooms have only one bed, and be on separate floors. I didn't want to be next to your mom and dad. I can get a little loud sometimes, in case you haven't noticed.\"\n\n\"You...you planned this all along?\"\n\n\"I guess you could say that. Are you disappointed?\"\n\n\"Oh god, no. I...I'm just in shock, I guess.\"\n\n\"I think we've both wanted this for a long time now, and I knew how you felt about me. I thought this would be the perfect opportunity.\"\n\n\"How...how did you know...?\" I stuttered out, unable to complete my sentence.\n\nShe gave me a knowing look, a sly smile on her face. \"You should be a little more careful when you explore someone's underwear drawer, my dear. I've been noticing the way you look at me and that last time I asked you to check on the house when I visited my sister, I took a picture of the two drawers with all my lacy things in them before I left. Suffice it to say, when I checked the drawers when I got back and compared them to the pictures I took, I could see that some things weren't in the same place.\"\n\nI was embarrassed and in shock. \"You...you weren't mad?\"\n\n\"Not at all, I was thrilled. And the fact that there were gobs of semen in my underwear and bra in my laundry hamper kind of gave things away too.\"\n\nI couldn't help it as I flushed red.\n\n\"Now I have a confession to make too,\" she said as she traced her fingernails teasingly down my chest. \"Those wads of cum that you left on my panties and bra? They didn't stay there too long. I couldn't resist. There certainly was a lot of it. It all ended up in my belly, and I knew from that moment on that I wanted the real thing.\"\n\n\"Jesus, Grandma, that is so hot,\" I said as I leaned forward and kissed her deeply once more.\n\n\"So, I thought this was the perfect opportunity for me to arrange this special night. I even bought some new clothes and things, hoping you'd like them.\"\n\n\"Like that dress with the slit in the side? You bought that especially for me?\"\n\n\"That's one of the things, yes.\"\n\n\"You looked so sexy in it. I couldn't take my eyes off you.\"\n\n\"Did you like that little yellow skirt and the black turtleneck I wore on the ride here?\"\n\n\"I loved it. You looked so good my cock was hard the whole way here. Did you buy that special for me too?\"\n\nShe nodded. \"Yes, and a number of other things. Let's take a shower and then I've got something else new to show you that I think you're going to like.\"\n\nListening to what she'd just said, and knowing that she'd planned this whole thing, was like setting a match to my fiery libido once more. I could already feel my blood pulsing and my cock starting to stiffen as I listened to her. \"Sounds perfect, lead the way.\"\n\nAs I followed her into the bathroom, I felt like I was walking on air. Higher than a kite, I had never felt so happy in my entire life.\n\n<p align=\"center\">**</p>\n\nI never enjoyed a shower as much as the one I shared with Grandma. Running my soapy hands over that gorgeous body and those huge tits of hers had my cock stiffening up in no time. Grandma's slick soapy hands had something to do with that too. She reluctantly pulled my hands away from her, telling me she'd make it worth my while if I remained patient. Was I ever glad I did.\n\nFreshly scrubbed and dried off, I returned to the bed and waited for her. I definitely wasn't disappointed when she came out of the bathroom, wearing one of the new outfits she said she'd picked out specifically for me.\n\nMy jaw dropped as I simply stared at her, her shapely hourglass figure stunningly clad in a brilliant white satin corset, with delicate bits of lace embroidery over the shiny satin. The shapely garment followed the flowing curves of her magnificent body spectacularly. The bottom of the corset kissed her wide flared hips and then nipped in to caress her slender waist before broadening out at her voluminous breasts. The heavily-structured garment was supporting those massive guns of hers with bra cups that barely covered her nipples, a generous amount of warm tit-flesh all but spilling over those jam-packed cups (which I soon learned were detachable). Slender ribbon-like satin straps ran over her shoulders and were drawn taut as they carried that impressive load, the projecting shelf of her breasts casting deep dark shadows on her midsection. I thought back on all those labels I'd seen in her lingerie back home, knowing the exact size, the thought of which always sent my perverse brain spinning. Man, those 38Fs really are something, I thought.\n\nBelow the corset, she had let her pussy remain bare. We both knew that anything there would only get in the way soon enough.\n\nAs my eyes travelled down her exquisite form, my gaze settled on those full meaty thighs of her, her legs clad in sheer white thigh-high stockings with wide lacy bands that hugged the tops of her thighs. My gaze roamed down those shapely legs of hers to her delicate feet, which were adorned in a pair of white pointy-toed slingbacks with slender 5\" heels. Those shoes alone were sexy as fuck and just looking at them had my cock rearing up and standing at attention. As my gaze drifted back up to that magnificent chest of hers once again, my resurgent prick was already at full mast, throbbing as it stiffened and pointed at the ceiling, a glistening pearl of precum oozing from the tip.\n\n\"Well, I guess you like this new outfit too,\" she said with that bewitching twinkle in her eye as she looked at my throbbing cock before sidling over to the bed to join me.\n\nWe fucked for hours, in every position imaginable. I was an eager willing student as Grandma taught me things I never imagined, but loved every single lesson. I even fucked her as she sat on top of the desk at one side of the room. I stood before her, driving my cock deep into her welcoming slit as I held her legs high in the air. I had her spread open like a wishbone, those sexy white slingbacks pointing at the corners of the ceiling as I hammered my cock home with each vigorous thrust.\n\nI fucked her doggy style, my thick cock shuttling in and out of her steaming little box as I knelt behind her. By now, those detachable bra cups were long gone, so I leaned forward, filling my hands with those heavy pendulous breasts swaying beneath her as I fucked her deep and hard.\n\nAt one point I was standing at the side of the bed with her kneeling before me, slavishly sucking my cock like a porn star. She encouraged me to cum on her face, and I enthusiastically complied, painting her with what felt like a tidal wave of thick milky cum.\n\nShe sat on my face as I lay back on the bed, her hands gripping the headboard as she ground that hot mature pussy of hers down on my face. Like before when I'd used my mouth on her, I brought her to three orgasms in a row before she swung her leg off and bent down to lick my face clean, lapping up every drop of her sticky goodness that she'd sprayed all over me.\n\nIt wasn't until the wee hours of the morning that Grandma finally had to pack it in. She was totally exhausted as she lay down and I molded myself into her from behind, my body wrapped around hers.\n\n\"I love you, Jake,\" she said softly as her eyes closed in blissful contentment.\n\n\"I love you too, Grandma,\" I whispered back as I kissed her neck tenderly. Seconds later I could hear gentle snuffling, sleep overtaking her. I wasn't surprised. Grandma had seemed like an orgasm machine, coming almost continuously all night long. She had more energy than any woman half her age, and I felt like I was the one struggling to keep up with her. When my cock wasn't plundering her pussy or backside, she had it in her mouth, skillfully sucking it back to full hardness time and time again. But now, finally, she was fucked out, almost comatose as she slept peacefully next to me.\n\nBut as I let my hands continue to explore that magnificent body of hers, my fingers now reaching over her and cupping one of those amazing breasts, I felt myself getting hard again, even after dumping multiple loads into her. Unable to suppress my urges, I deftly crawled around her until I was on my knees in front of her. Looking down at that pretty face of hers, peaceful in slumber, and those massive tits that were mine to do with as I wished, I reached down and wrapped my hand around my cock in a warm loving corridor. It didn't take long before I flooded Grandma's chest with another big load of milky cum, ribbons and gobs of spunk coating her from her neck to her nipples.\n\n<p align=\"center\">**</p>\n\nWe were both deeply asleep when the sound of the phone woke us at mid-morning. I answered, hearing my mother's voice. She invited us to join them for breakfast as they'd slept late and we needed to check out within the hour. Groggily, I told her we'd meet them in the hotel restaurant shortly.\n\nGrandma and I showered together, our soapy hands roaming over each other's body, but knowing we didn't have time for any extra-curricular activities. We dressed casually for the ride home, and I was once again spellbound by Grandma's simple, yet devastatingly sexy, outfit.\n\nShe had chosen to wear a faded denim miniskirt that ended high on those gorgeous thighs of hers. Not too high to be trampy-looking, but high enough to show off her shapely legs. Man, I loved those thighs of hers.\n\nHer top was a sleeveless pink sweater that molded itself to her generous curves spectacularly. It had a high collar that lay against her neck, almost like a turtleneck. The interesting thing about it was the wide zipper that ran all the way up the front. It was like a diver's wetsuit, with a sizable O-ring at the top. When she came out of the bathroom, that zipper was undone all the way down to a point just below those enormous mounds of hers, giving me a mouth-watering view of her magnificent breasts as they forced to open part to spread out wide. What made it all the more stunning was that she wasn't wearing a bra! Between the way her huge knockers were settled heavy and wide on her chest, and the way her huge nipples were protruding through the tight pink fabric, it didn't take a rocket scientist to realize she'd left her bra packed away, much to my delight.\n\nHer feet were clad in strappy flat white sandals, which suited her casual outfit perfectly. My eyes drifted up to her face, noticing that her warm blue eyes had a touch of pink eye-shadow while her lips were coated with light pink gloss, which matched her pink sweater perfectly, the whole 'pink thing' she had going making her look young and flirty. But those breasts of hers, those magnificent massive breasts, well, I'd never seen such a tremendous pair as that on a young girl. When it came to breasts that I wanted to get smothered in, no one could compare to my grandmother.\n\n\"What do you think of this new outfit, sweetie?\" she asked teasingly as she did a pirouette, those massive guns jiggling and wobbling invitingly as she faced me once more.\n\n\"It's perfect, \" I said as I stepped up next to her and slid my hand right inside her top, my fingers cupping one enormous breast as I gave it a gentle squeeze, my cock starting to stiffen and throb beneath my underwear.\n\n\"Mmm, that feels so good,\" she purred as she nestled her head up to mine, giving my exploring hand a loving squeeze before pulling it out of top. \"I was hoping you'd like it, but I guess I should do this up a bit before we go and join your mom and dad.\" She reached down and toyed with the ring of her top's zipper before drawing it further up, leaving just a hint of cleavage visible.\n\n\"Good idea, but you might want to do more than that,\" I responded as I nodded to her prominent nipples, the stiff buds all but poking holes through the front of her sweater. \"Not unless you want me coming all over your breakfast, or putting a little extra cream in your coffee?\"\n\n\"Mmm, that sounds like an offer I wouldn't refuse,\" she purred back as she gave me an air kiss on my cheek, not wanting to leave any evidence of her lipstick behind. \"About this top, don't worry, I came prepared. I've got a little pink sweater that came with it that I can wear over it. That should do just fine, but I wanted you to see this first. And as far as that offer to put a little extra cream in my coffee, or a little extra frosting on my cinnamon bun, maybe next time we're at home. I'm gonna hold you to that promise.\"\n\n<p align=\"center\">**</p>\n\nOnce Grandma had her matching cardigan in place and covering that other top loosely, nobody was any the wiser as far as what was going on beneath it. Breakfast was uneventful, with Grandma and me behaving ourselves, although I found my eyes being drawn to her magnetically as she talked to my parents about how nice the bride had looked, that kind of idle post-wedding chitchat. Thinking about her being braless beneath that alluring new top, I had to force myself to look away time and again, not wanting my mom and dad to catch me leering.\n\nThe hotel checkout went smoothly and we had just gotten into the car when Grandma spoke. \"You know, Sarah, I didn't sleep too well, a strange bed and all. I think I'll try and see if I can take a nap on the way home.\"\n\n\"Sure, Mom, no problem.\"\n\nWe had just merged onto the freeway when Grandma turned to me. \"Jake, I'm having trouble getting comfortable like this. Would you mind very much if l laid down across the seat and put my head in your lap?\"\n\nI couldn't help but catch the little twinkle in her eye. \"No, that would be fine, Grandma.\"\n\n\"Robert, turn down the radio,\" my mother said, \"Mom's going to have a nap.\"\n\n\"Sure thing, no problem,\" my dad replied as he turned their favorite channel down a bit.\n\nGiving me a nasty little smile, Grandma peeled off her cardigan, giving my eyes a chance to feast on the impressive swells and thrusting nipples of her braless breasts, alluringly displayed in her sexy pink top. She gave me a naughty wink as she leaned over and put her head in my lap.\n\n\"I think I'll put my sweater over me so it's a bit cozier. I'm sure it'll help me sleep better,\" Grandma said before pulling the garment over her shoulder and almost to the top of her head.\n\nWithin seconds, she had my pants undone and my cock in her mouth. I slid my hand under the draped sweater, letting my fingers slide over the side of her body until I found that sexy zipper on the front of her top. As she started to suck, I slowly drew the zipper down, thankful that my mom and dad's music was still loud enough to drown out any little sound coming from the back. With the zipper lowered, I slid my hand right inside her sexy top, my cock stiffening in a hurry as I felt her soft warm breasts beneath my fingers, her nipples hard as bullets.\n\n<p align=\"center\">**</p>\n\nBarely moving, but sucking hungrily, Grandma sucked and swallowed three loads out of me on the way home. As we left the freeway to drive into our city, I gently took hold of her top's zipper and drew it back up before tapping her on the shoulder. As soon as she started to sit up, I quickly stuffed my cock away and did up my pants.\n\n\"Are you okay, Mom?\" my mother asked as Grandma sat back in her seat, her face flushed from being under the sweater for so long.\n\n\"Yes, I'm fine,\" she said as I saw her use her index finger to push a stray gob of cum from the corner of her lips into her mouth. \"That was just what I needed.\"\n\n\"That's good. We're almost home. You slept most of the way,\" my mother said.\n\n\"You know, Sarah, I've been thinking,\" Grandma said, \"With Jake starting at the university next month, I thought it might be a good idea if he came and lived at my house.\"\n\nGrandma kept her eyes fixed on my mother, but my ears pricked up at the sound of that.\n\n\"At your house?\" my mother said.\n\n\"Yes, I'm only a couple of blocks away from the school and it would be so much handier for him than having to travel all the way from your house every day.\" She paused as I could see my mother thinking about that. \"Besides, I thought it might be nice to have a little company. I feel kind of lonely at times rattling around in that house all on my own.\"\n\n\"Gee, I don't know, I never thought of anything like that before,\" my mother responded.\n\n\"Well, why don't we ask him,\" Grandma said before she turned to me. \"What do you think of that idea, Jake?\"\n\nAs I looked at my grandmother, for some reason I thought of a time a few years back when I'd been watching a movie with my dad. It was an old Bruce Lee movie from way back in the 70's or 80's, 'Enter the Dragon' I think it was called. The basic premise was that an evil villain, an Asian guy who was plotting to take over the world or something, was holding a martial arts tournament on his private island. The top competitors from all over the world were there, including Bruce Lee. At one point the rich guy offered to entertain his honored guests by offering them the choice of girls from his private brothel. The girls were paraded before them, led by the madam, who was a stunning tall blonde woman who looked like she was of Scandinavian descent.\n\nThe part that stood out in my mind was when one of the martial arts guys, an American, looked at that blonde woman and then turned to one of his friends. As he nodded towards her, he said to his friend, \"You know, a woman like that can teach you a lot about yourself.\"\n\nAs I looked over at my grandmother, looked at that gorgeous body, that sexy face, and that beguiling smile of hers...that line was what went through my head, over and over...\n\nHow did I feel about living at my grandmother's while I went to university? How much did I want to learn about myself? My answer was simple. \"I think that's a great idea, Grandma. I can't wait.\"\n\n<p align=\"center\">THE END</p>"
    ],
    "authorname": "rmdexter",
    "tags": [
        "big tits",
        "big cock",
        "virgin male",
        "incest",
        "gilf",
        "oral sex",
        "anal sex",
        "grandmother"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/jake-and-grandma-hotel-sweet"
}