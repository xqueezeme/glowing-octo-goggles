{
    "title": "TRC - Lord of the Glass Desert Ch. 10",
    "pages": [
        "When Tanner began screaming at her, Perra called for an open council meeting at the Inn, which was quickly seconded by Jurien and Telsin's blacksmith, Orin. She thought it strange as Orin rarely spoke up unless it was about something concerning his forge. He usually followed the Town Council's consensus and went about his day. However, his relative silence made Tanner and the other councilmembers take notice when he spoke up.\n\nEllis wasn't comfortable having Silma inside his Inn and refused them entry until Perra promised she or Kal would rebuild it twice as big if the salamander burned it down. Rolling her eyes at the innkeeper, Perra quickly agreed to his demand and pulled Silma over to the stone pad in front of the fireplace, grabbing a chair on the way.\n\nWhen constructing the Inn, Ellis installed an oversized, semi-circular hearthstone to act as a makeshift stage for minstrels and entertainers. He designed it taller than necessary, even adding a small step around the edge, and the performers loved that the Inn's patrons could easily view their acts. For the hearth's foundation, Ellis shipped in a porous rock that floated in water and layered it with mortar around some solid support stones. He claimed it helped the hearthstone keep the fireplace's heat and made it easier to maintain the dining area's temperature on cold winter nights.\n\n\"Would you like a chair as well?\" Perra asked the salamander.\n\nSilma glanced behind her and flicked her tail before looking skeptically at the narrow space in the chair's back for her tail to fit through. \"Thanks, but no.\"\n\nThe monster girl took up a post in front of the fireplace as the horde of humans filed in. Leaning her back against the warm stone, she appeared unconcerned that her tail rested in the flickering coals as she stared down the room full of people. Though it was clear they were uncomfortable around her, she quickly realized she was not the focus of this gathering.\n\nNearly the entire town turned out for what sounded like the trial of Master Kal, Lady Perra, and a dangerous monster girl. The seats quickly filled, and standing room dwindled as people continued pouring in. When the first floor couldn't handle any more occupants, residents climbed the stairs and watched from the second-floor walkway, which overlooked the main room. Master Ellis then had to yell at those upstairs to stop leaning on the railing before it broke and dumped them onto the people below. Telsin's Inn had never been so packed before.\n\nElta and the Town Council took up seats at the front of the crowd, so Perra angled her chair to easily talk with them and Silma. \"You said you have a child with Kal,\" she asked the salamander. \"Where is she? I'm trying to remember exactly, but she must be around two years old.\"\n\n\"Firo is far away, hunting,\" Silma replied to gasps from the crowd. \"Before you speak, on the way here, I learned that salamander children are very different from humans. She is about so tall,\" murmurs of disbelief ran through the townsfolk as she held out a hand showing her daughter's height, \"and hatched with some of my knowledge. With me gone, she is the most dangerous creature in the magma sea near my old home.\"\n\n\"Magma?\" someone in the crowd asked.\n\n\"Melted rock,\" Perra replied. \"It's like water to fire salamanders.\" Turning back to Silma, she asked, \"Why did you leave her? Even if she's the size you say and has some of your knowledge, she's still only two.\"\n\n\"We aren't given a choice like you humans. A growing salamander's appetite is a terrible thing to behold, and while teaching her to hunt, I must eat the same food. Had I stayed, we would have run out of prey and starved to death before she reached adulthood and developed a stomach for surface food. When her hunger outstripped my own, I experienced a strong desire to get away from her. Do you have a child?\"\n\nPerra nodded, \"Firo's half-brother, Talin.\" Another low murmur ran through the crowd at the blatant admission of their children's shared lineage, punctuated by a few snorts of disgust.\n\nSilma smiled, \"I don't know why that makes me so happy. Imagine for a moment Talin held in the jaws of some terrible surface beast, and it's about to bite down.\"\n\n\"That's awful!\" cried Perra as tears sprang to her eyes from the thought. Around the room, many of the town's women mirrored her outburst.\n\n\"That is the feeling, only stronger. A sense of impending dread that your presence will kill your child and the only way to make it go away is to get far away from them. That is what drove me away. But enough about me, where is Kal and Ikuno?\"\n\n\"Ikuno is... sort of dead, and Kal has gone off to fetch her.\"\n\n\"I believed death to be permanent. How can someone be 'sort of' dead?\"\n\n\"That's a long story, I will explain late\u2014\"\n\n\"Who is Ikuno? Another of Kal's whores?\" spat Tanner. At some point, his expression reverted to its typical scowl as he sat and listened to the conversation between Perra and Silma, but his attitude had not improved.\n\nSilma answered before Perra could stop her, \"The blue-skinned oni who has been protecting the pass north of Uvu... Uvo...\"\n\n\"Uvelo?\" offered Perra, sighing in resignation as scandalized whispers ran across the room, and several people wondered aloud what an \"oni\" was. Twice now, she hadn't been able to stop Silma from revealing closely guarded knowledge about her and Kal's lives. Reaching into her pocket, she ran a thumb over her pendant. Perra felt naked without it, and the temptation to put it on bordered on compulsion. Taking it off on the way to the Inn was a difficult choice, but she knew she couldn't have its ability to sway people's opinions weighing on her conscience.\n\n\"That's the place,\" said Silma. \"She's been protecting the pass north of Uvelo, and it sounded like Ikuno is another of Kal's lovers, or so it seemed when they visited. By chance, does Firo have any blue-skinned half-siblings?\"\n\n\"Her kind can't have children with humans,\" said Perra. Rubbing her face, she scanned the crowd and muttered, \"At this rate, the whole town will know every woman Kal has been with.\" Looking at Tanner, she explained, \"Ikuno is the one who rescued me from a,\" her eyes flicked to Elta sitting just to the right of the councilmen, \"overzealous gentleman who ignored me when I said, \"No.\" She delivered me from my scum of a brother to Kal and Merantha, and Ikuno gave Kal the money for the potion allowing Mera to live as long as she did.\"\n\n\"I remember that day,\" said Jurien. \"I didn't see the boy that happy again until little Talin was born. I heard Mera sat him down and made him swear up and down he didn't knock over some rich guy to afford it. I imagine we don't need to imagine what he did for the money,\" the man chuckled.\n\nPerra noted that short laughs of amusement drowned out the sounds of disgust in the crowd as the apothecary's inference sunk in.\n\n\"Ikuno did more than that. She avenged those who died to the werewolf who took Kal's father and grandparents.\" Many of the adult men in Telsin back then were part of the posse who discovered the grizzly remains of Kal's kin. A couple of them let out a small cheer at the news before being shushed by those standing nearby. \"The story isn't mine to tell, but her kind is very long-lived, and she is part of the reason Kal was born. I'm certain that there are a few people here,\" her gaze alighted briefly on Ellis, and his son Jasem who sat in his mother's arms staring wide-eyed at all the people around them, \"who wouldn't be here, were it not for Ikuno.\"\n\n\"She did something to let Mera get pregnant, didn't she,\" said Jurien's wife, Nina. \"That poor girl tried everything possible with no luck, from my tonics and Jurien's herbs to watching the phases of the moon. After all that effort, I believed the girl barren until she arrived in town pregnant.\"\n\n\"As I said, that's not my story to tell,\" said Perra. That woman's mind was far too quick at times.\n\n\"One good apple doesn't save the orchard from rust,\" grumped Tanner.\n\n\"When was the last time we received news of a bandit raid on the western road, Chairman?\" she asked.\n\nStumped, Tanner looked over at the captain of their largely unused town guard.\n\n\"The Western road? Not since last year that I can think of,\" said the man. \"Which is odd now that I think of it. Uvelo always took the brunt of ruffians coming through the mountain pass, but we had to deal with those coming from the capital.\"\n\n\"Exactly,\" said Perra. \"Not long after Kal first set out, he rescued a wolf and some dog-girls from slavers. Half stayed in the woods near where they were rescued, while the rest came back here and set up their territory west of Telsin. Any bandits have to make it through them before they can threaten us.\"\n\nLuckily, Telsin's distance from the capital and relative poverty protected them from most raiders over the years. But Perra knew the town's growth had caught the eye of at least a few bandits as the marauders Dax and her pack dealt with became more frequent. Soon the groups would be too large for the canine women to handle on their own.\n\n\"And how many mongrel children does Kal have with them?\" sneered the Master Tailor.\n\n\"Is that relevant?\" said Elta, drawing surprised looks from many in the room. \"She just told you these women have been silently protecting us for the past year. What does it matter if every one of them has a pup with him?\"\n\n\"Who is 'Lina?\" someone called out from the crowd. Perra recognized him as the rider sent to fetch her and Elta earlier. \"I thought I misheard you, and it was miss Nina watching your boy. But she's here, so who is 'Lina?\"\n\n\"Alina is one of the dog-girls in the pack I spoke of.\"\n\n\"AND YOU TRUST HER WITH YOUR BABY?!\" a woman shrieked.\n\nPerra leveled an even glare at the woman, \"More than I trust most of the people in this room. Alina would give her life to keep Talin from harm, as would any of Dax's pack.\"\n\n\"What does the Revered Mother have to say about all of this?\" asked Tanner.\n\nElta looked over at Perra, \"Perhaps a better question is why Lady Perra is telling us all of this?\"\n\n\"The people of this town deserve to make an informed decision, so I'm laying it all out here.\"\n\n\"Since we are doing that,\" came a low rumbling voice from the Inn's counter. \"My mother is a quarter giant,\" said Bren, standing up and towering over everyone assembled. \"That's right, you've been living with monster-kin this whole time.\"\n\n\"But you're a man!\" several people yelled.\n\n\"Damn straight 'e is!\" Kahrin called out in response. Bren's massive hand on her shoulder stopped her from saying more.\n\n\"Master Kal wishes to find out how a monster girl had a son when his errand is finished, but he believes it's because giants are just very large humans. That closeness gives them a chance to make a half-breed, like my Mother, Gran, and me,\" explained the Inn's strongman.\n\n\"Is he going to change the monster girls so they can have... uh... monster boys?\" another called out, but Bren and Perra were both shaking their heads.\n\n\"No,\" said Bren, \"in fact, he is very against the idea of making more monster-kin like me.\"\n\n\"That's all fine and good, but our Revered Mother still hasn't answered the question,\" said Tanner. \"What does the church have to say about living side by side with demons?\"\n\n\"Demons?\" Silma looked over at Perra, frowning. \"Humans really think we're demons?\"\n\n\"Wait,\" said Perra, holding up a hand as Elta got to her feet and climbed onto the stone stage.\n\nInstead of speaking, the cleric pulled a rod out of her robes. A click of the small oval button on the rod's side and white leather strips sprouted from the end, turning it into a lash and making the people next to the stage step back in momentary fear. A second click and the strips fanned out before braiding themselves into her staff. After casting a telekinesis spell, which Perra thought was odd as the cleric never used or mentioned having such a spell before, she held the staff in front of her and spun it, using the cantrip to keep it floating and maintain its motion. The entire town looked on as she used a finger to trace glyphs and sigils that appeared on the side of the twirling weapon facing the crowd.\n\nBesides thinking it strange to see Elta drawing out a spell, instead of casting it from her hand like usual, Perra noticed subtle differences between Kal and Elta's techniques. The glow as Kal drew spells followed the tip of his finger or the point of a mana crystal. However, Elta traced a single glyph that passed through the spinning staff and filled entire sections of the large spell with more complex runes. She also noted the spell pulsed each time the staff passed by an area of the circle, then slowly faded until the staff's next pass. Perra smiled, thinking about Kal's reaction to seeing this new technique.\n\nOnce finished, the cleric looked over the magic circle a final time, then stepped aside as the staff and spell swung backwards and up. Stepping beneath the spell, Elta reached up and touched it. The rune-filled circle pulsed and burst outward, bathing the occupants of the room in a golden glow as the cleric's staff fell, clattering on the stone by her feet.\n\nPerra looked down and watched as the glow surrounding her lightened and changed to green.\n\n\"Elta!\" she hissed, \"What are you\u2014\"\n\n\"Silence, Lady Perra,\" said the cleric. \"You will understand in a moment. Ladies and gentleman, the glow will not harm you but is important for what I am about to say.\"\n\nTaken aback, Perra couldn't remember the last time Elta spoke to her in such a manner.\n\n\"Many in the clergy are having dreams,\" she said, squatting down and picking up her staff. Pressing the button on the rod portion, she frowned as nothing happened, indicating she spent all the staff's magic casting the spell. It would be little more than a walking stick until tomorrow. Holding out a hand, Elta cast another spell, \"The dream is the same for all of us.\" The illusion forming next to Elta seemed drastically out of place to Perra, even more than the telekinesis spell she used earlier. \"A faceless, golden-haired woman wielding a flaming sword stands atop the shoulders of a dark, hooded man,\" the cleric continued, the images appearing in the illusion as she described them. \"An army of women stretches into the distance behind them, each holding an animal, plant, rocks, flames. Every combination of monster girl you have ever heard of and many you have not can be found in the horde following them.\"\n\nThe crowd stared in awe at the image forming within the illusion, matching Elta's description. Those on the side of the large hearthstone made room for others to move over and see it for themselves.\n\n\"These dreams are creating a schism within the church. Even if they don't particularly like it, those whose minds are open to change have these dreams while the clergy who cling to their hatred of monster girls have not. That rift grows wider by the day in Lantaris. It breeds hatred toward those who have had the dream while fear grows among those who have not, believing they have lost the Goddess's favor.\"\n\n\"But the church said they were demons,\" a man called out.\n\n\"Yes, the church did. But if you look at the Goddess's sacred texts, she never says monster girls are demons, only that they are unnatural. Kal discovered the first generation of monster girls to appear across the world were created by magic, not born into the world.\n\n\"However, a thousand years later, we can no longer say they are unnatural. In that time, they have settled lands, created communities, and found their place within the natural order. The Goddess understands that monster girls are not going away. Even if every one of her followers took up a mighty crusade, we could never hope to wipe them all out.\" Elta took a steadying breath, \"After getting to know the women who associate with Kal and Perra, I think the world would be a poorer place if we did.\"\n\nA woman shoved her way through the crowd and ran up to the stone stage. \"My husband was taken by one of those things!\" she shouted, pointing at Silma. \"He died trying to escape and come home!\"\n\n\"The road must be walked by both sides,\" said Perra. \"Many men and families have been hurt by monster girl's actions. I won't say all monster girl attacks have been out of desperation, but when that desperation is passed down from generation to generation, it turns into callousness and uncaring when dealing with prospective 'husbands.' Just as we human women need to learn to accept monster girls and their quirks, people like me, Kal, Elta, and others like us must help monster girls to unlearn their disregard for a potential mate's wishes.\"\n\n\"If it's okay for men to sleep with them, how are we supposed to compete when they spread their legs to a man at the hint of a stiff breeze?\" another woman called out.\n\nPerra chuckled before answering. Most of the monster girls she knew were exactly as the lady described, though it was only for Kal. \"Monster girls need you, need us. Without human males, there are no more monster girls. Without human females, there are no more males. Most monster girls already understand this and don't mind sharing a man as long as they have some assurance of a future daughter.\"\n\n\"Is that why your farmhands aren't prowling the town for wives? They're too busy fucking a bunch of mutts instead?\" snarled Tanner.\n\n\"No, they are both in relationships with harpies, as are Kal and I. If any single women are interested in forming a triad, come visit my farm.\"\n\n\"And share my man with a bird? Hell no!\" Despite the lady's vehement declaration, several of the younger women in the crowd wore expressions of interest. Telsin's population growth mainly consisted of older married couples with a daughter or two in tow. The sons often struck out on their own path instead of moving with their parents. The surplus of younger single women in the town made competition for eligible bachelors fierce. Perra could not have pulled off her 'second son' idea when hiring the farmhands in today's Telsin.\n\n\"YOU slept with a monster girl?!\" said Tanner as his face began turning red again.\n\n\"Many times,\" she answered with a flat tone and sober expression that left no room for the Council Chairman's opinions. \"I'm not ashamed of it any more than Kahrin is ashamed of bedding Bren, and neither should anyone else be.\" Perra shifted in her chair. Talin missed his midday meal because of all the commotion, and she felt her back twinge from the weight of her milk-heavy breasts. \"As mentioned earlier, monster girls are not demons. Along Kal's journey, he discovered all their human characteristics were copied from female adventurers the creator encountered.\"\n\n\"How do we know if you're telling the truth? You could just as easily be filling our heads full of horseshit just so we'll accept these demons.\" The people around Tanner gasped and backed away from him as the green glow surrounding him turned yellow.\n\n\"You're showing your hand, Chairman,\" said Perra with a smirk. \"Even you don't believe what you just said.\"\n\n\"What! How dare you\u2014!\"\n\n\"Lady Perra!\" Elta called out, silencing Tanner and getting everyone's attention. \"The sky is purple.\"\n\nThe crowd gasped again as the glow surrounding the cleric turned yellow, similar to Tanner's aura, which was already reverting back to green.\n\nPerra smiled and called out, \"Kahrin hates Bren.\" The glow around her immediately flickered to yellow as well.\n\n\"Like bloody fuckin' hell I do!\" shouted the barmaid, looking pissed.\n\nBren chuckled and rested a hand on the hot-headed woman's shoulder. \"Peace, Kahrin,\" he rumbled, \"the priestess cast a lie detection spell.\" He looked at the woman standing at his side opposite Kahrin with massive breasts and said, \"Deenah has tiny tits.\" As the server squeaked with indignation and held a serving tray in front of her chest, Bren's green glow changed to yellow like Perra and Elta's.",
        "Kahrin paid little heed to the brightly blushing barmaid and instead looked up at Elta and Perra. \"I don't recall the color changin' as ye were tellin' about yer dreams and the monster girl's beginin's.\"\n\nElta nodded, \"Exactly.\"\n\nPerra looked over at Tanner, \"Is that enough to convince you, Chairman?\"\n\nTanner had been on the town council for longer than the woman staring him down had been alive, and been council chair for a third of that time. He had no room to refute Elta's and Perra's revelations. If he challenged Elta's truth spell, Tanner would call Telsin's voice of the Goddess into question. He couldn't challenge Perra's tale of monster girls being made from humans without questioning Elta's spell. The bitches waited until he revealed himself before telling the rest of the town the purpose of the green glow. All of Telsin now knew he accepted their stories as truth, at least partially. Though it galled him to no end, he knew continuing to express his own hatred of the monstrous women would cost him his position as Chairman and his influence over the town. Sometimes the way to win a battle was to lay down your weapons. Drawing in a few deep breaths to calm his rising temper, he glared up at the mage's woman, \"If this is what the Goddess decrees, then we have little choice. How do you recommend we move forward?\" \n\nThe tailor shot up from his seat. \"You're just going to accept these half-human whores into our town?!\" he yelled at Tanner.\n\n\"I do not like this any more than you,\" he replied, \"but denying what we just saw would be foolish. Foolish men do not remain Council Chair long. Lady Perra would have us fling our arms open and invite them all in. This way, I can keep them from sending our people running for the hills as a horde of monster girls descends upon us.\"\n\nHe turned to Perra, \"Understand this cannot happen like you want it to, Lady Perra. Our charter cannot be changed without approval from the King. As of now, no monster girls may own property inside Telsin. Any who attempt to live here will need to understand that the safety of our people comes first. That means that they will need to stay out of sight from merchants and travelers until the church's change of heart becomes commonplace.\n\n\"One last thing I will say is that no monster girl will be allowed to stay without a purpose. They will not be here to simply exist and must work toward the betterment of the people here, no different than any human who comes to live in Telsin.\n\n\"We shall draft a formal record of these changes at the next proper meeting. But for now, all those in favor of making the changes I just mentioned say 'Aye.'\"\n\n\"No discussion?\" said the blacksmith. \"Just putting it to a vote here in front of the entire town? It's unusual for you to break convention like this, Tanner.\"\n\n\"After what we just saw, if the issue needs further discussion, you must have just woken up. I propose merely getting things rolling until we can meet and draw everything out on paper. This place is sweltering with so many people, and I think a few need to get to their midday meals,\" raising an eyebrow at the two wet spots on the front of Perra's dress, he continued, \"or get others their meals.\"\n\nLooking down and seeing what he was talking about, Perra swore under her breath.\n\nThe entire room jumped as a woman suddenly screamed, \"Did you fuck my sister?!\"\n\nWide-eyed, the man she shouted at backed away from the furious woman, \"N-No!\" he stammered as the glow around him turned yellow. Shrieking curses at him, she chased the man out the Inn's door beating on his back with balled fists.\n\n\"That's enough of that,\" said Elta, canceling the spell.\n\nAs the green aura around people winked out, the townsfolk began chattering among themselves, getting gradually louder in an attempt to be heard.\n\nTanner stood and stepped up onto the stone pad. \"Quiet! The council has business to attend to!\" he shouted, restoring order. \"Those in favor of adopting my recommendations until we can get proper documentation drawn up?\"\n\nJurien and Orin along with the carpenter, miller, stablemaster, and the rest of the council all said 'aye' except for the tailor and butcher.\n\nWhen it came time for the 'nay's, the tailor nearly shouted the word, as did the butcher, Baret. The butcher's strong response came as no surprise since he voiced his loathing of monster girls often and emphatically. Years ago, before he came to Telsin, Baret's wife died when a reptilian monster girl attacked and abducted him. He fashioned a bone knife from remnants of her previous meals during his imprisonment and eventually killed his captor. The experience crystallized his hatred of monster girls, and Perra didn't expect him to stay with the coming changes.\n\nTo many people's surprise, Tanner also said, 'nay.' Looking back at the sea of confused looks, he clarified his vote, \"It's a token gesture. The vote already passed, and I understand these changes are coming, but I sure as hell don't like it. Either way, as Council Chairman, I will try to find the best way for the town to move forward.\"\n\nJurien chuckled, \"Ever the politician.\" Standing up, he turned to address the crowd, \"We'll hammer out the details of Telsin's new direction as best we can, then have another of these town meetings in a few days where we'll share our plan and discuss any changes that need making.\"\n\n\"You expect us to get this done in a few days?\" Tanner scoffed.\n\nThe apothecary looked back and grinned, \"Some of us have been privy to Kal and Perra's dalliances more than others. Since her first dream, the Revered Mother, Lady Perra, and I have discussed the upcoming changes to the church and our town. I've used those talks ta draw up a potential first draft. I'll admit, I wasn't expecting ta need it for a few years.\"\n\n\"Since nearly the entire town is here, what kinds of changes to our laws will we be seeing?\" the Chairman asked.\n\nElta spoke up, \"First is that any man entering into a relationship with a monster girl needs to have human children as well. As Perra said, human women are vitally important since monster girls can't have sons. If a man wants to give a monster girl a child, he should have two human children as well, one boy and one girl. While we may be accepting them into our communities, we also need to maintain the human population for everyone's sake.\"\n\n\"I believe that was why Master Kal didn't want monster boys,\" said Bren from across the room. \"Something about not needing humans anymore if there were more like me.\" His large hand dropped below the counter, and a moment later, Kahrin let out a surprised shriek before jumping away from him and rubbing her bottom where he pinched her. \"Personally, I'm fond of human women and wouldn't want them to disappear.\"\n\nPeople around the room laughed quietly as Kahrin cursed out the large man in a mixture of Common and Dwarvish.\n\n\"You need not worry about me,\" said Silma. \"Although Firo striking out on her own signals I can have another child, it will be a long search to find somewhere to lay another egg. There are many years between each of my sisters as my mother searched for suitable nests and suitable men.\"\n\n\"You getting pregnant is the least of my worries,\" snapped Elta as the illusion next to her faded, \"You walked into town and burnt one of our men with your power. You need to be more careful around humans and apologize to Harl.\"\n\n\"The man waved a weapon in my face, and I'm supposed to apologize?!\"\n\n\"Yes, you are! Harl was protecting the people of this town from an unknown threat!\"\n\n\"Fine, but I'm not going to stand there and let someone stab me.\"\n\n\"No, but you could have stayed outside the town and asked about Kal instead of strolling past our guards!\"\n\n\"Ladies!\" yelled Perra. \"There are two women in this town who could burn down this Inn and roast everyone in it. If you are going to fight like this, please move it to the northern mountains where you can only hurt each other. There's a couple of harpies nearby who can take you there.\" She noticed several people in the crowd already making their way toward the exits. They weren't panicked, but they weren't dawdling either. \"Silma, if you are going to be staying, you need to find a place within the town.\"\n\n\"I want her,\" said the blacksmith, catching the attention of the council and those on the hearthstone stage.\n\n\"Still pining after your apprentice and need something to stick your cock in, do you?\" sneered the butcher.\n\nOrin calmly stared at the man, \"My apprentice has her own smithy in the capital and is doing quite well for herself. Since you are so concerned about the activities of what's in my pants, I'll tell you that I left pleasantly drained on my last visit. However, that may have been the last time as it sounded like she had an eye on a particular gentleman. With the number of single women in this town, I haven't wanted for company.\n\n\"Regardless, if she can do more than melt spearheads and can heat a billet for forging, the lass could be a huge boon to my smithy.\"\n\n\"Billet?\" Silma asked.\n\n\"A bar of metal that I turn into tools and weapons.\"\n\n\"If she wants to lounge around on that stone and keep the place warm when winter comes, she's more than welcome,\" offered Ellis.\n\n\"I'm sure that the town will find hundreds of different uses for a walking furnace,\" said Perra, ignoring that earlier the Innkeeper wanted to bar her entry and now was inviting her in. \"But those who call on her services should consider that she needs to be paid for the work she does. Just because she is a monster girl doesn't mean we can take advantage of her.\" Pera thought for a moment before looking back at the salamander, \"Kal said you lived in a cave. Do you need any kind of special accommodations?\"\n\nSilma shrugged, \"I had a chair and a bed of soft heat-loving mushrooms to sleep on. Rain is slightly annoying, but the ground here on the surface is nice and soft, so I can sleep anywhere.\"\n\n\"Surely I can do better than that,\" grunted the blacksmith. \"The apprentice's room may need some freshening up as my last one spent most nights in my bed, but I can at least offer you a good night's rest. Until you decide what you plan on doing in Telsin, that is.\"\n\n\"Silma? Do you dream?\" asked Elta.\n\n\"Yes. Why?\" she replied, confused by the odd question.\n\n\"Do you have nightmares? Ones where your power burst forth while you slept?\"\n\nA long moment of silence passed as the salamander searched her memories, then went on to dig through those passed on by her mother. \"I have had bad dreams, but nothing like that has ever happened.\"\n\n\"Ever?\"\n\n\"No. Not to me or my mother from what I know.\" Silma felt her nipples stiffen from memories of nights her mother ended up sleeping in a human bed. Giving Orin an appraising look, she thought some of those memories may need revisiting.\n\n\"Good,\" said the cleric, \"I'm sure our blacksmith doesn't want his house burned down because you lashed out at something in your sleep.\"\n\nSilma looked over at the man and grinned, \"If that's a concern, then it may be best if I sleep with him as I give those I touch the ability to withstand intense heat.\"\n\n\"Harlot,\" sneered the tailor.\n\n\"Whore,\" spat the butcher.\n\nThe salamander glared at the men, \"Perra just spoke of payment for my services. What form did you expect that to take? Hunting is easy here on the surface. The food is so plentiful among the trees, I don't think even my appetite could ever strip an area of food. My abilities provide me shelter and safety. What does a human village have to offer besides sating my needs?\"\n\n\"Have you tried human food?\" Perra asked, trying to deflect the woman's ire.\n\n\"No, but I'm very curious, especially after the pleasant smells when we first entered.\"\n\n\"Payment methods can be discussed between her and those she works for,\" said Tanner. He turned to address the rest of the council. \"Are there any other matters that need our immediate attention?\"\n\nJurien raised a hand, \"Expanding the council to account for the town's growth. We have discussed offering Ellis his position once again. Perhaps we could take care of that now since we are all here.\"\n\nEllis piped up from where he sat with Ada and his son, \"Understand I'll be choosing Bren as my second. Since he and Kahrin are doing most of the Inn's running nowadays, he will likely be the one at the council table,\" said the Innkeeper.\n\n\"Why not have Kahrin as your second, then?\" asked Perra.\n\n\"Ye don't want me in the council room, Lady Perra. I'll be comin' home with a sore mouth an' bottom and getting' 'em ta give me anythin' I want.\" Kahrin laughed from her place behind the counter, earning a few chuckles from the dwindling crowd. \"Better ta have Bren do it. He takes care o' the books and has a better handle on what the Inn needs.\"\n\nPerra took the people leaving as a sign Silma's strangeness, and the shock of the cleric's revelations were already fading in the eyes of the townsfolk, enough that matters of their everyday lives were more important. Only a few appeared to be holding onto their fear and disgust, but in the face of Elta's presentation, they had a difficult road ahead justifying those feelings.\n\nThe people leaving froze as the butcher jumped up from his chair, shouting, \"We already have a monster fucker sitting on the council. Now you expect us to accept a monster-kin as well!\" A calmness came over Baret's face, \"I'm leaving. If this is Telsin's path, then I'll have no part of it,\" he said before stomping out of the Inn while shoving people aside.\n\n\"Much as I hate to say it, that was expected,\" said Jurien as Perra and Elta nodded in agreement.\n\nThe rest of the council turned toward the tailor.\n\n\"I'm not going anywhere,\" he snapped. \"I too was taken by one of them in my younger days,\" he said, tilting his head toward Silma. \"I managed to escape, though I was badly beaten and nearly broken. I don't like any of this, but I didn't lose my wife either.\"\n\n\"So now we have another vacancy,\" sighed Tanner. \"We shall discuss prospects and reinstating Master Ellis at the next proper meeting. Meeting adjourned.\"\n\n\"Good thing too, or Lady Perra might've soaked ye all down with Talin's next meal,\" laughed Kahrin. The room had cleared enough she no longer needed to yell to be heard.\n\nOrin stood up and addressed Silma. \"We can stay and get to know each other over lunch, or I can show you to your quarters now.\"\n\nThe salamander smiled, \"Food would be nice. But let's sit over there,\" she suggested, pointing at the stools in front of the Innkeeper's counter, \"the chairs here aren't made for women with tails.\"\n\n\"After that, I could use a bowl of the Inn's stew myself,\" said Elta before stepping down from the hearthstone and following Silma and Orin.\n\nPerra looked down at the wet spots on the front of her dress and grumbled, \"Kahrin's right, I need to get home and feed Talin. Elta, do you mind if I take your horse back?\" she asked while taking her pendant out and fastening it around her neck. A sense of relief washed over her when the moonstone and amethyst bauble rested against her skin once again.\n\n\"Go ahead,\" the cleric replied, sitting at one of the barstools and resting her staff against the counter. \"Just turn her back toward town and swat her on the rump. She'll come back to the stables. I'm going to stay with Silma and Orin in case there are any problems with the villagers.\"\n\n\"That's probably a good idea. Centuries of hatred driven into people's heads aren't going to vanish with a magic light show and a few words. Send a messenger if you need me again.\" With a slight wave at Silma, Orin, Kahrin, Bren, and Deenah, who appeared from the kitchen with bowls of stew in her hands, Perra stepped out of the Inn and started toward the town stables.\n\nShe saw Master Baret walking toward the stable as well but thought nothing of it. If the man was genuinely leaving, he would need his horse and probably have to buy a cart for his belongings. The council would purchase his shop when he finally rode out, cleaning it up and saving it for the next town butcher.\n\nHer first indication she needed to worry was seeing knuckles out the corner of her eye.\n\nPerra heard a woman scream as she fell to the ground, but her thoughts were so jumbled from the butcher's punch she wasn't sure if it came from her mouth or another woman nearby.\n\n\"You fucking cunt!\" Baret bellowed as his boot caught her in the stomach. \"I had a good life here! You and your fucking monsters had to ruin it for me!\"\n\nAs the kicks kept coming, Perra rolled away and curled into a ball, reflexively turning to what she learned years ago while enduring her brother's beatings. Blood flowed freely from her nose and a split lip. Wiping some of the blood onto the back of her hand, she would act like she was getting up but then fall over, facing Baret. Curling into a ball again, she would then cover her head and face with the blood-stained hand. This was often enough to convince Emrick he had done enough damage and to stop hurting her. Unless the butcher meant to kill her, Perra hoped Baret would react like her brother.\n\nIf he did want to kill her, all she could do is pray someone saved her before he succeeded.\n\nBlindingly strong thoughts came through the bond, \"Protect... Kill...\"\n\nSensing what the harpy was about to do, Perra's mind snapped out of its survival mode. \"No,\" Perra choked out as she threw herself away from the butcher and hastily scrambled to her feet. Those on the street looked on in shock, and a few men were already moving to stop Baret when an ear-piercing shriek turned all eyes upward.\n\n\"Kuto, no,\" mumbled Perra as she stumbled toward the butcher.\n\nThe harpy dove out of the sky with claws extended and hate for the butcher burning in her eyes. Perra threw herself between Kuto and Baret. Six of Kuto's eight claws found purchase in her chest and stomach. As the women toppled over, the look on the harpy's face went from consuming rage to horror as she realized what happened.\n\nKuto tumbled off Perra as they hit the ground, her curved claws doing even more damage as they pulled free. With a quick flare of her wings, she righted herself and hopped back to her injured lover. \"Perra! Perra!\" she screamed, her voice becoming more panicked as the woman coughed and blood appeared on her lips.\n\nSeeing an opportunity, Baret raised his foot for another kick, then nearly fell over as something stopped his leg. Looking down, he saw a stone hand holding his ankle, but it was only visible for a moment before more of the dark gray rocks began sprouting from it, masking its shape as the stone grew, gradually encompassing his leg.\n\nElta ran past the butcher as he shouted for help while trying desperately to free himself from the growing column of stone. Skidding to a halt, she dropped to her knees beside Perra and the harpy, who was leaning over the unconscious woman, crying and begging for forgiveness. Shoving Kuto off Perra, the cleric rolled the woman onto her side to help keep at least one of her lungs clear. Elta's healing spell flared to life and began mending the woman's injuries.\n\n\"Please, please, save her, please, I'm so sorry, please,\" Kuto begged over and over.\n\nElta glanced up to see the bird-woman's chest plumage stained red, much like the front of Perra's dress. \"She'll be okay. Just let me work,\" she told the harpy with confidence she wasn't feeling. Perra had lost a lot of blood in a very short time, and the bruises from the butcher were spreading the cleric's magic thin. Though she hated to admit it, Elta wished Kal was there. His ability to direct the flow of magic was better for these situations since he could put the spell's power into healing the claws' wounds and worry about the less concerning bruises later.\n\nThe thought flickered across her mind that if she were bonded to Kal like Perra was, maybe she could learn the ability from him.",
        "Another thought flickered across her mind. If Perra died, she would be free of her oath.\n\nThe butcher yelled again behind her as stone began growing up his other leg. Gritting her teeth, Elta opened herself to the Goddess's power, trying to pull more of it into the healing spell.\n\n---\n\nWith the carpet up in its couch configuration, Kal, Kashka, and Laika discussed which of the wealthy travelers would ask for a room in his tent tonight.\n\nThey were expecting Turam to call a stop for the night at any moment when Kal sat straight up, his eyes darting around, searching for danger.\n\n\"Ria, I need my staff and give Kashka her gear,\" he said, jumping out of the litter and scanning the surrounding darkness for threats.\n\n\"What is it? What's wrong?\" asked the cat-girl, fastening her belt and throwing her cloak over her shoulders before joining him out on the sands. Laika laid flat in the contour of the carpet. In times of danger, she was supposed to run for the cart with the unused pleasure slaves where Turam's guards would protect her. As yet, no threat had materialized, so she was trying to make herself as unnoticeable as possible.\n\nThe feeling of being attacked vanished almost as quickly as it came. \"Something's wrong,\" said Kal with a final look around, \"but not here. Something happened back home, and it was big enough to reach me on the other side of the world.\" He impatiently pulled Laika by the wrist into a sitting position and hopped onto the carpet. \"Ria, store the staff and get out here,\" he ordered.\n\n\"What's going on?\" asked the sprite as soon as she appeared.\n\n\"Something big is going on back home.\"\n\nRia's hands came up, covering her mouth, \"Oh, no.\"\n\n\"Exactly. I'm going to contact Perra, you know what to do. Kashka, I will look like I'm asleep, but you won't be able to wake me. Protect my body while I'm gone.\"\n\nDaggers flashed in the cat-girl's hands, \"With my life, Master.\"\n\n\"Laika, you're dismissed. For now, return to the slave's cart.\"\n\n\"But what's\u2014\"\n\n\"Now, Laika,\" he snapped.\n\n\"Yes, Master,\" replied the pleasure slave coolly before hopping off the carpet and collecting her clothes. Jogging toward the front of the caravan, she wondered why she felt so upset Kal sent her away.\n\nSettling into the magic carpet's contoured seat, Kal drew a spell in the air in front of him, then slumped to one side the moment it activated.\n\n---\n\nHe could tell something was wrong as soon as he appeared on the astral plane. Perra's mind shone like a beacon to him from their pendant-enhanced bond, only dulling while she slept. Now she was so faint he could barely sense her.\n\nWorried, Kal formed the farmhouse around him as an anchor point and sent his mind across the gray void of the astral plane at the speed of thought.\n\n---\n\nTears streamed down Elta's face. This was a battle of time, and the Goddess's power was losing. She had seen it too many times during her time as an initiate and acolyte. Mother's power sometimes just wasn't enough.\n\nAs one hand held the spell over the dying woman, the other brushed the hair from Perra's forehead. Touching the woman's skin, she felt another presence.\n\n\"Kal?\" she said out loud in surprise.\n\nKuto looked around, searching for the mage, as did a few others in the growing crowd. The expression on her face was both hopeful and terrified.\n\nElta ignored them. \"Kal, if you're with Perra, I can't save her without your help. I can't focus magic on her wounds. I'm healing everything at once, and it's too slow!\" she shouted in desperate hope it would help him hear her through his connection with the injured woman.\n\n\"No!\" the cleric shrieked as Kal's presence vanished, only to return seconds later even stronger. The gathered townsfolk gasped and stared at her, as did Kuto.\n\n\"Use eyes...\" said Kal's voice in her head as the world seemed to tilt sideways for a moment. Reining in her amazement at how Kal could see magic, Elta immediately noticed some of the energy cascading off her healing spell was escaping into the surrounding air and onto the ground from how she was holding it. She quickly moved the magic circle around to the front of Perra's chest but didn't think that would make enough of a difference.\n\n\"Two... shrink... focus...\" came strained words from the mage along with an image of a blue-skinned ogre holding two healing spells at once.\n\n\"I can't stop touching her, or I will lose you,\" said the cleric.\n\n\"Connected... you... not her...\"\n\nTaking a deep breath, she lifted her hand from Perra's forehead, and Kal's presence stayed with her. Holding out her other hand, she attempted to form a second healing circle, but the spell sputtered and failed, nearly taking the functioning one with it. When that didn't work, she attempted to shrink the spell, but it stubbornly remained the same size. Now that she could see the flows of magic, she tried directing them toward the gashes left by Kuto's claws, but failed yet again. Tears ran down her cheeks as Perra inched closer and closer to death.\n\nShe had seen people die before, even a few in this town. Why did the thought of Perra dying fill her with such dread? The answer came quickly: Perra truly cared about her. The woman had been her backbone when dealing with her intense sexual urges. She constantly reminded Elta that she was not broken or damaged and propped her up when life got complicated. Despite the oath Perra forced her to take, the woman had somehow become Elta's closest friend. The idea that she might die terrified the cleric.\n\nWhat would she give to see Perra live?\n\nA quiet voice whispered in her ear, \"Do it.\"\n\nElta's healing spell flickered out, and she leaned over the dying woman, shouting, \"Use my magic! Use my body! Just don't let Perra die!\"\n\nShe could sense his surprise and doubt, but also his understanding that this might be their only hope.\n\n\"Give freely.\"\n\n\"Yes! Yes! I give myself to you!\" she called out. A moment later, she felt something she couldn't fully describe or understand snap into place between her and the mage on the other side of the world. In the same moment, she also felt her conduit with the Goddess weaken until it nearly disappeared before quickly returning to its former strength.\n\nWorry. Fear. Love. Despair. Determination. Kal's thoughts filled her mind. Holding both hands out, she drew two healing spells in the air in front of her side by side, matching the movements of one hand with the other exactly. Rolling Perra onto her back with her elbows, Elta held both spells over the woman's torso and watched as Kal went to work pushing the magic toward the gashes nearest her heart. What would have taken minutes to heal now only took seconds as the magic from both spells flowed directly into the wound.\n\nElta could feel Kal's frustration at the effort of using his abilities across the astral plane and through her. His thoughts made her think the energy's motion seemed sluggish compared to his idea of normal as it moved over to the other side of her chest, where Kuto's claws punctured Perra's lung. With the four most life-threatening wounds taken care of, the cleric wanted to relax, but Kal wasn't done yet. Determined to see Perra fully healed, he worked through the exhaustion Elta felt rising within him. His tiredness faded as she noticed other minds touching hers, siphoning off his fatigue and taking it upon themselves. Bea sat with Adalena in their cocoon home to the north. Aradelle retreated to her lower chamber and let her avatar fall apart to focus on helping Perra and Kal however she could. Gerda was only a few feet below them, holding the butcher in place. She could even feel Bas, Kal's other golem woman living far to the east, trying to assist the mage's efforts, though her distance lessened what help she could offer.\n\nThe only woman Elta couldn't feel was Kuto. A fleeting thought from Kal told her Kuto's guilt for harming Perra was threatening to overwhelm her. He blocked the harpy from him and the rest in fear she might distract them from saving Perra.\n\nAs the last wound in Perra's stomach closed, Kal's endurance ran out. Leaving some hasty instructions with Elta, he retreated to the farmhouse on the astral plane.\n\n\"He's gone,\" said Kuto as Elta finished healing up Perra's bruises. \"Your eyes are back to normal.\"\n\n\"Normal?\" she asked. The last of the bruises finally faded, and Elta released the spells. The healing magic's disappearance was accompanied by her conduit with the Goddess slamming closed as the thoughts from Kal's other women became louder. The cleric knew this would happen but hoped the Goddess would forgive her acceptance of the mage. At least she allowed Elta to keep her casting ability long enough to save Perra. She could break down and cry about it in a corner later. There were still matters to be taken care of now.\n\n\"They glowed blue like his when he was with you.\" The harpy's face fell, and Elta could feel the strong sense of guilt Kal brought up earlier, along with fear of Perra and Kal's rejection for what she did. \"He didn't say goodbye,\" she mumbled.\n\nThe cleric was startled by the news about her eyes, but it made sense of the villagers' reactions when Kal returned the second time. \"With Perra out of danger, he couldn't hold on any longer,\" she explained. \"He didn't even get to say a proper goodbye to me.\"\n\nElta affixed the harpy with a stern stare, \"But he did tell me what to do with you. Your penance for hurting Perra will be six lashes, one for each claw, across the bottom with a stiff belt tomorrow afternoon at the town stocks.\" Elta didn't agree with punishing the harpy over what was essentially Perra's fault for throwing herself in front of the bird-woman, but took a little bit of comfort that Kal didn't like it either. The punishment's sole purpose was to help Kuto deal with her guilt and keep it from consuming her. Elta was also none too happy he tapped her to administer the lashes. The mage felt Perra should be the one to handle Kuto's punishment as it would mean more to the harpy, but the woman was going to be bedridden as she recuperated from blood loss.\n\nTo the surrounding crowd, the cleric called out, \"Lady Perra will need a wet nurse for a week or two as she recovers. Tolerance of monster girls is necessary as they will be closely guarding her until she is back on her feet. Those who are not currently breastfeeding and wish to help, come see me later. I have spells to make you start producing milk.\" She knew two women in town were wet nurses as they came to see her every few weeks but didn't know their feelings about having harpies and dog-girls coming and going.\n\nElta turned to the butcher, \"You could have just left. Instead, you raised a hand to Lady Perra and assured your own death.\"\n\nThe man's eyes nearly fell out of his head, \"Death?! The mage's whore is still alive! Besides, the bird is the one who nearly killed her, not me.\"\n\n\"This isn't how we do things in Telsin, Revered Mother,\" said Tanner, stepping out from the crowd. \"And he is right. The harpy nearly killed Lady Perra, not him.\"\n\n\"No. Perra saved him from being ripped to pieces in front of the entire town and undoing our work at the Inn earlier. Kuto is Kal and Perra's lover. She would rather fly into a guard's spear than hurt her. But none of that matters anyway. Telsin has its rules, but so does Kal's family. This man raised a hand against one of Kal's women. Now he will pay the price.\" Looking down at the ground, she said, \"Take him away.\"\n\nThe butcher started screaming as his body began phasing through the rock encasing his legs and sinking into the ground below. \"Don't do this! I have a wife and a child!\"\n\n\"Your family will be taken care of. Your child will not hunger from lacking a father,\" said the cleric. The coldness in Elta's voice shocked Baret so much he stopped yelling and stared at her as his head disappeared into the dirt below.\n\nElta checked on Perra again. She was pale and breathing quickly, both signs of blood loss, but appeared to be stable.\n\nSighing with relief, she turned to the harpy, \"Kuto, Kal wants me to dreamwalk with him so we can talk. Bren will take Perra and me to the Inn. Guard us and let no one but him, Kahrin, Jurien, or Nina touch either of us until I get back.\" Lying on the ground next to Perra's unconscious form, Elta closed her eyes and answered the mage's summons.\n\n---\n\nAppearing in front of Kal and Perra's farmhouse, Elta took a moment to get her bearings before turning and seeing the mage standing next to the porch steps. Her cleric's robes faded away as she strode toward him, leaving her naked.\n\nKal smirked as the nude blonde approached, but Elta could see a sadness in his eyes as she got closer.\n\nShe stopped in front of him, \"Make love to me, Kal. Make it worth what I gave up. I know we can't properly feel pleasure on this plane, but I need this. I need to know that without the Goddess and without my magic, I'm taken care of and loved.\"\n\nInstead of answering, Kal leaned over and took her face in his hands before kissing her. Their lips touched, and images filled her mind.\n\nKal looked down on her naked body as she sucked his cock, her eyes smiling back up at him. The scene switched to her, begging him to go faster and harder as he took her from behind. Elta laid on her back as he again slammed into her hard enough to rock the bed, though her face was blocked by Perra's bottom, and she could see her own tongue spearing into the other woman's sex even as her back arched from an intense orgasm. In another image, he looked up at her as she carefully sat down on his lubed prick and savored the feeling of his cock slipping through the tight ring of her sphincter. Leaning back, she started rubbing her clit as her ass slid up and down his cock.\n\nThe scenes switched tone. In one, he woke up to see her head of golden hair between him and Perra in their bed. In another, she and Perra cooked a large meal in the farmhouse's kitchen with various foods not customary at a human's dinner table. In the last, Kal watched as Elta held a blonde-haired little girl to her breast while she chatted with a very pregnant Perra. Behind them, her staff rested in the corner near the kitchen fireplace, still in its current, spent form.\n\nTears ran down her face as they parted. \"That was beautiful,\" she said quietly.\n\n\"But that isn't who you are,\" said Kal.\n\n\"No, but now that I'm bonded to you, it may as well be. There are worse ways to grow old.\" The sadness in her sigh was almost tangible, \"But I will truly miss the feel of the Goddess's power running through me.\"\n\n\"And that's why I have to say no, Elta. If we consummate this bond, then what I showed you is just one of the futures I imagined for you. Well... the last part was, the first few have been in my head ever since you came back to Telsin.\"\n\n\"No? You're telling me no after I gave up my magic to save Perra?!\"\n\n\"Yes, I am, and you know from what I showed you, it's not because I don't want you. Elta, I'm releasing you from your bond.\"\n\n\"You don't want me?\" the words escaped her mouth before her mind grasped what the mage was implying. A moment later, his lips were again pressing against hers as scene after scene of them making mad, passionate love in every way conceivable and with several different other women flickered through her head.\n\n\"Still think I don't want you?\" Kal asked.\n\n\"If I say yes, will you do that again?\" she replied, bringing a hand up and tugging her nipple only to be disappointed by the lack of pleasure from her breast. The astral plane sucked.\n\n\"I would appreciate it if you didn't,\" came a female voice from inside the house. The door opened, and out walked a woman Kal felt he should recognize but couldn't place where he had seen her. Or maybe he hadn't seen her and her presence just felt familiar. The stranger was all but forgotten as she pulled Perra out of the house behind her. \"I found this one wandering the border between this world and the next. I convinced her a couple of people were trying very hard to save her and to not cross over quite yet.\"\n\n\"It's not like you had to twist my arm or something,\" said Perra, pulling her hand away and walking down the porch steps.\n\n\"I worked hard to keep you alive. I didn't need you galavanting on to the next life after putting in all that effort.\"\n\n\"You worked hard?\" said Kal, incredulous that this odd woman was taking credit for saving Perra's life.\n\n\"Who do you think maintained your cleric's connection with the Goddess after you two bonded? If not for me, Elta's magic would have disappeared, and your friend would be on her way to whatever heaven she believes in.\"\n\nPerra froze in her tracks, \"You two bonded?\" Without waiting for an answer, she squealed with happiness and ran over to Elta, throwing her arms around the still-naked woman. Pulling back, she looked down at the cleric's body, \"I hope you didn't do anything together. Sex isn't very enjoyable here.\"\n\n\"No, and sadly we won't be,\" sighed Kal. \"I'm releasing her from her bond.\"\n\nPerra spun around, her eyes wide, \"Why?\"\n\n\"So she can return to being a cleric,\" said the unknown woman, \"and I'm here to make sure her connection with the Goddess returns or to forge a new one if it doesn't.\"\n\nPerra looked back at the cleric, \"Saving me cost you your magic?\"\n\nElta nodded, \"I was settling my mind into the idea of living with you and Kal, but he told me no. Then you two showed up. I guess the Goddess isn't done with me yet.\"\n\n\"And she won't be for some time,\" said the woman, \"but your obsession with that man is hurting you, and the damage worsens the longer it goes on. Once you have your magic back, I'm going to take what I discovered to the Goddess and see what we can do to help.\"\n\n\"You're one of the Goddess's Agents,\" said Elta.\n\n\"I am.\"\n\n\"Why do I feel like we've met before?\" she asked.\n\n\"We have, in a way. I was the one who whispered in your ear before you accepted the mage, and I've been watching over you since you moved back to this little hamlet. Unfortunately, I can't tell you more, and I'm afraid your memories of me will fade like waking from a dream once you leave here. But I did want to see you three united after all the effort to save her,\" she said, pointing at Perra.\n\n\"Kal, release her from your bond and do it quickly. Your ability to maintain this space is fading,\" she said, drawing everyone's attention to the porch railing. As they watched, the wood's outline frayed and blurred before snapping back into place.\n\nKal turned to Elta, \"This feels wrong, but I know it's necessary.\"\n\n\"Wait,\" said Perra. Stepping up to the cleric, she pulled Elta into a soft and loving kiss while projecting how much she had come to care for her former adversary. Elta, in turn, showed Perra her feelings moments before accepting the bond with Kal. Breaking the kiss, Perra rested her forehead against Elta's. \"After today, bonded or not, you're family.\" Stepping away from the cleric, she nodded to Kal.\n\n\"I've never done this. I won't hurt her, will I?\" he asked the nameless woman.\n\n\"I hope not, but these types of bonds are exceedingly rare. I simply don't know,\" she replied. \"Now hurry, you don't have long.\"\n\nClosing his eyes, Kal remembered the feeling each time a bond formed between him and one of his women. He then followed that feeling back to Elta until he felt he had a grasp on the connection between them. Opening his eyes, he said, \"I'm sorry,\" before bringing a mental blade down and severing their bond.\n\nTears sprang to the cleric's eyes as Kal's, Perra's, and the other women's presences vanished from her mind. They were quickly replaced by the familiar warm glow of the Goddess's power touching her.\n\n\"Thank you, Kal,\" she said. Turning to Perra, her robes formed around her once again. \"It's time for us to go home.\"\n\nKal stepped over and kissed Perra soundly, \"I love you, and I'll contact you once I'm rested. I found out something important while crossing the desert you should know about.\"",
        "He turned to Elta, and there was a moment of awkward uncertainty between them until he finally gathered her up and kissed her as well. \"We'll talk when I get back with Ikuno, but if Perra considers you one of us, I'm going to have a hard time arguing with her.\" The mage's form blurred, and a sound that might have been goodbye came from his mouth before he vanished.\n\nBoth women sighed and stared at the empty space where he disappeared for a moment before Elta took Perra's hand and formed the spell to bring them back to their bodies now lying in Telsin's Inn.\n\nArdolan smiled as the women vanished. The spell of forgetting she cast was usually used to hide important items, but this time it worked perfectly to make the humans completely forget her presence once they were distracted. It even made Elta miss that the farmhouse should have faded as soon as Kal returned to his body. Her grin was only partially due to her success with the humans. She managed to maintain Elta's connection to the Goddess through her bonding with the mage, proving it could be done. Now it was up to the Goddess and her to figure out how to make it permanent.\n\nAfter that, it was on to the next phase of her deity's plan, but for now, she needed to make a small change to the dreams of the Goddess's followers. Chuckling, Ardolan stepped off the house's porch and faded away as the farmhouse slowly returned to the gray landscape of the astral plane.\n\n---\n\nNeepa held the weasel's head in the slightly viscous clear liquid in her pitcher. The fluid only covered her ankles at the moment, but her pitcher was also the size of a small pool. The pool's sides attached to the base of her neck, sloping down and away to form the slippery rim. The plant-girl typically used her vines to nudge animals searching for water or the source of her scent into the pool where they would eventually wear themselves out and drown, providing her much-needed nutrients. If she were lucky enough to have something like a deer or wolf step into the pool, she could contract the rim and raise it to shoulder height, making it deep enough her prey would eventually swim themselves to death. Where other alarune had a chamber below their flower they could retreat to, Neepa's acted as a reserve for the digestive fluids in her pitcher for when she snared an unusually large deer.\n\nUnfortunately, her hunting method put the softer, human-shaped portions of her body in the path of scrabbling claws and hooves. She brought the huge, leathery leaf attached to her back down in front of her body for protection in those situations. The only forest-dwellers she didn't consider prey were the rare mountain cats and the large blue-skinned woman who used to stop by occasionally with a male who really pissed her off. The knowledge passed on from her mother included an episode where she tried to capture a great tan cat and quickly discovered the sides of her pitcher were easily torn by the animal's sharp claws.\n\nAs for the blue-skinned woman, Neepa was simply terrified of her. In their first meeting, the large woman dragged a kicking and screaming man to Neepa's spot in the forest. The human apologized over and over for some heinous act that sounded like it involved killing other humans. In a final attempt to escape, the man flailed wildly at the white-haired, golden-horned female, managing to land a solid kick between her legs. Her lightning-fast backhand spun the human's head around to face the opposite direction while his body remained in place before collapsing to the ground in a heap. Picking the human up by its clothes, the blue-skin snorted in disgust and casually tossed him into Neepa's pool before walking away without a word.\n\nInstinct took over, and the alarune drew up her pitcher as the woman left, floating the human and letting the large droplet which formed at the end of her cover leaf fall onto his face. The lack of response and floppiness of the man's head told her human necks weren't meant to be turned that far.\n\nThough the blue-skin used to visit regularly, Neepa hadn't seen her the past few years and wondered if the woman was killed or passed away. The alarune couldn't imagine something killing the powerful woman after bringing her the man in the metal shell.\n\nIn her hand, the weasel's movements slowed. She didn't normally take such an active approach with her food, but the critter spun around and bit her vine when she tried to bump it into her pool. After hurting her, she was going to enjoy watching it die.\n\nA rumbling from the ground in front of her pool made Neepa toss the rodent off into the woods, where it hacked up the liquid in its lungs as it haltingly ran from her. Two arm-thick vines pushed up from the ground beside her pool as she drained her digestive fluid into the underground portion of her body. This way, If the rumbling proved to be an enemy she couldn't enthrall with her scent, she wouldn't lose as much fluid if they breached her pitcher's walls.\n\nA solid column of stone pushed its way up to the surface, making the plant-girl wince as it severed a few of her roots. A few seconds later, a man and woman rose up from the stone. The woman was partly made of rock, while the man's expression was similar to the humans delivered by the blue-skin.\n\nAs she began forming an aphrodisiac droplet on her cover leaf, Neepa nearly moaned out loud as an errant breeze brought her the scent of blood. The male seemed to be steeped in it, though only some of it smelled human.\n\nOne of the few times she spoke to the blue-skin was to mention how much she enjoyed a previous battered and bruised offering. Often, the men expired from exhaustion, and she had to wait until the next day before her digestive fluids dissolved their skin enough for her to enjoy the wonderful scent and taste of blood. But if the man was heavily bruised when he arrived, there was a chance her fluids could weaken the skin and let her enjoy the treat while the man lived and actively pumped the delicious red liquid into her pool.\n\nThe horned woman merely grunted and walked away, but a few of the men she brought appeared to have a few extra bruises than before. Nothing compared to the man in the metal shell, though. He didn't last long once he began fucking her, and all the metal made her sick later as she let it sit in the bottom of her pitcher. But once he was inside her pitcher, it was only minutes before he dyed the clear fluid red. Whatever this man did, it made the blue-skin extremely mad. Neepa hoped the woman would bring more like that but never returned after coming back to fetch the human's metal shell.\n\nThe breeze shifted, bringing the scent of her droplet to the human. The man slumped forward momentarily as the potent aphrodisiac took effect. When the human lifted his head, his eyes locked on Neepa, and he began straining against the stone woman's grip. \n\nShe let go, and the man fell face-first to the ground. It mattered little as he scrambled to his feet and waded into her pool while his hands worked frantically at his belt. The stalk of her cover leaf attached to her lower back and let the alarune open her legs while appearing to float in the air. More clear liquid dripped from Neepa's sex, but it acted as a lubricant and neutralized the fluid in her pool, in case she decided to have a child. Taking his cock in hand, the man roughly shoved it into the alarune's pussy, making the plant-girl shriek and wrap her arms around him as pleasure shot through her. Grabbing Neepa by the waist, he began thrusting with abandon as the walls of the pool rose around him, and the pitcher plant's liquid flowed up from below.\n\nHer pussy filled for the first time in years. The alarune held tight and enjoyed the frantic ride while looking forward to the coming meal.\n\nGerda heard the man grunt and slam his hips into the alarune as he came for the first time. From her loud moan, it sounded like the pitcher plant joined him moments later. The sight of the butcher repeatedly kicking Perra as the golem moved slowly through the dirt below to stop him brought a snarl to her face. \"It's better than you deserve,\" she growled in her grinding-rock voice before sinking into the column of stone.\n\n---\n\nQuick note: Chapter 11 will be delayed. It ends on a cliffhanger, so I'm going to hold onto it until I can release 11 and 12 back-to-back.\n\nThanks for reading!\n\n-Blu"
    ],
    "authorname": "BluDraygn",
    "tags": [
        "monstergirl",
        "magic",
        "fantasy",
        "trc",
        "violence"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/trc-lord-of-the-glass-desert-ch-10"
}