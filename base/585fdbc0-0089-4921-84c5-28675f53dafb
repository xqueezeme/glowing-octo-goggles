{
    "title": "Finding Home Pt. 03",
    "pages": [
        "Author's Note:\n\nThis is part three of five of Finding Home. The sudden departure of Noah's mother doesn't make life any easier for Noah and Lacey. After an unexpected accident, a trip to see Lacey's family in Montreal brings even more uncertainty.\n\nWhile Finding Home can be enjoyed on its own, it is a sequel to the original story, Runaway, and its epilogue Waking Up. The story will be posted in five parts, each containing multiple chapters. Driven mainly by plot, you can expect a number of erotic scenes, romance, drama, and Canadianisms.\n\n**\n\n<center>Chapter Seventeen</center>\n\nIt took some time for the strange melancholy to vanish from our apartments and our lives. As Noah and I picked up the pieces after Diane's departure, we eased into a new chapter of our lives together. In some ways, it was harder, but in a lot of ways it strengthened our resolve, our commitment to each other. \n\nThe morning after she left, I woke to find Noah already out of bed, despite it being unreasonably early. I quietly got up, used the bathroom and took my birth control pill, then padded through the apartment to find him.\n\nHe was in the den, still clad in pyjama pants as he sorted through the things Diane had left behind. I watched from the doorway for a moment before entering the room and sitting beside him on the single bed.\n\n\"Morning,\" he said.\n\n\"Couldn't sleep?\"\n\nHe wrapped an arm around my shoulder and kissed the side of my head.\n\n\"Something like that.\"\n\nHe was holding the book he'd gotten Diane for Christmas. Besides that, there were only a few small items left behind. Quietly, we gathered them up, then stripped the bed down so we could wash the sheets. \n\n\"Are you okay?\" I asked when we finished.\n\nHe turned the washing machine on and nodded, smiling that tight, tense smile that told me he wasn't really okay at all.\n\n\"Are you?\"\n\nI nodded, not meeting his eyes, knowing he would be able to tell I wasn't really okay either.\n\n\"Liar,\" he murmured, though it wasn't an accusation.\n\n\"You are, too.\"\n\nHe drew me into his arms and I wrapped mine around his waist. His chest was warm against my cheek, his arms were tight around me, and we stood like that in the laundry room for a long, long time.\n\n\"We'll be okay,\" he finally said. \"Not, you know, now. But soon. Right? We... you and me, I mean. We'll be all right?\"\n\nHis voice was unsteady. The sound of it made my chest tighten. I pulled back, letting go of Noah's waist so I could look up at him. The tightness worsened at the sight of his face, his jaw clenched so hard it was twitching, his eyes dark and pleading and trying to hide how heartbroken he was.\n\nI touched his cheek, fingers grazing along the spot that was twitching.\n\n\"Of course,\" I whispered. \"Noah, of course.\"\n\nHe nodded, swallowing hard.\n\n\"Last night, when I said... or, well, didn't say... baby, I'm sorry.\"\n\n\"It's okay.\"\n\n\"It isn't, I\u2014\"\n\nI pulled myself up, stretching to press my lips to his and interrupt him. He sighed as I did, his arms wrapping around my waist as I let my fingers trail down the back of his neck.\n\n\"I don't deserve you,\" he mumbled.\n\n\"Don't say that.\"\n\nHe kissed me back instead of saying anything, holding me tight. I could feel him responding to me, his cock thickening between us. I shifted my hips against him, eliciting a soft groan that vibrated on my lips.\n\n\"I need you.\" He seemed almost embarrassed, his head bowing as he admitted it to me.\n\nMaybe it was the timing: the fact that even though we were still shellshocked from his mom's sudden departure, he needed to be with me like that, and he felt it was inappropriate. Maybe it was something darker, something that stemmed from the harsh words his mom had thrown at him the night before, some deep-seated sense of shame that he could possibly need comfort from another person.\n\nWhatever it was, I tried to show him it didn't matter. I tried to show him he never had to be embarrassed by wanting me, or needing me, or being who he was around me.\n\n\"Come with me.\" I pulled away and took his hand, leading him from the laundry room to our bedroom. \n\nHe embraced me again once we got there, holding me close as he kissed me eagerly. I let him kiss me for a moment before pulling back, brushing the hair from his face, and smiling up at him.\n\n\"Go sit on the end of the bed,\" I directed.\n\n\"But\u2014\"\n\n\"Sit down, Noah. Oh, but take your pants off first.\"\n\nHe almost protested again, but as I bit back a smile, his eyes sparkled.\n\n\"Yes, Miss Lacey.\"\n\nOnce he was appropriately naked and seated, I undressed in front of him. Even without looking, I could feel his eyes on me, an almost-palpable sensation as his eyes trailed along every curve of my body. When I finally turned back to him, he was staring at my breasts, his lips parted just slightly.\n\nI took that time to stare back, licking my lips unconsciously as I took in the swell of his muscles, the tightness of his stomach, and the hardness of his cock. Noah's body was covered in tattoos. Both arms were covered from his wrists to his shoulders, and his back and chest had tons of different pictures and symbols and words. There was less density of tattoos on his stomach, though there was one that I was particularly fond of to the left of his belly button. He had comparatively few tattoos on his legs, but I took in each one of those as I stared at him.\n\nWhen I looked back up, Noah was watching me with a half-smile on his face.\n\n\"Nickel for your thoughts?\" he asked.\n\n\"You're so hot,\" I said without actually thinking.\n\nHe laughed, startled, but before he could say anything I moved across the room and between his legs. Seated, it was his turn to look up at me, and I touched his face as I kissed him gently.\n\nNoah touched my hips, then slid his hands up my side and waist before wrapping his arms around me. He pressed my body close to his, parting only from my lips to bring his mouth to my breasts. He kissed each of them before flicking my nipple with his tongue, then proceeded to lavish attention on my breasts in a way that made me gasp.\n\nWhen I couldn't handle it anymore, I squirmed out of his arms. Noah looked up at me and I kissed him again.\n\n\"It's my turn,\" I said. \"Lie down.\"\n\n\"You told me to sit down.\"\n\n\"I changed my mind. Lie on your back.\"\n\nHe obliged and I crawled onto the bed next to him, kissing him again before going to work on every inch of his body.\n\nI traced each of his tattoos with my tongue, kissed each of his ribs, and trailed my fingers along the spots I knew would make him groan. With every touch, I tried to tell him, tried to make him understand how much he meant to me and how perfect he was, how he was everything I wanted and more, how he would always be enough for me, how impossible it was for him to let me down, how I could never love anyone the way I loved him.\n\nBy the time I reached his cock, it was sticky with precum, and he almost shuddered with relief when I stuck my tongue out to lick it off. He gasped softly when I wrapped my fingers around him, and groaned loudly when I took his tip into my mouth. Each sound sent a shiver through me, a yearning that settled deep in my core.\n\n\"Fuck.\" His hands found their way to my head, resting lightly against my hair, only pressing down once I tried to swallow his cock and he hit the back of my throat.\n\nI let him push his cock deeper down my throat a few more times, listening to the breathless noises he made and feeling the way he tensed each time I gagged softly on him. I would have let him continue, too, but with an almost-reluctant tug on my hair, he pulled my mouth off his cock.\n\n\"I wanna be inside you,\" he said softly. \"Please, baby.\" \n\nI was certainly not going to say no to that. Smiling, I brushed his cock with my lips before moving back. Noah started to sit up, but I pushed on his chest.\n\n\"No.\"\n\nHe raised his eyebrows.\n\n\"I want you like this.\" \n\nHe relaxed against the bed as I straddled him, gripping his cock to guide it inside me. I sank onto him slowly, taking the time to feel every inch of him stretching me, revelling in the relieved sigh that left Noah's lips as I finally settled on top of him.\n\nI could feel him straining to thrust up into me but I held still, only moving when his eyes opened and he looked up at me pleadingly. Slowly, carefully, I began rolling my hips, stopping again when his hands came to my hips and tried to guide me to move faster.\n\n\"Baby,\" he gasped.\n\n\"Yes?\"\n\nHe chuckled, a strained edge hiding in his laugh.\n\n\"Gonna make me beg?\"\n\nI shook my head and leaned forward, eliciting another soft groan from Noah as his cock shifted inside me.\n\n\"I don't want you to beg.\" I kissed him softly.\n\nHe kissed me back and pushed his hips up again, frustrated when I stilled him.\n\n\"What do I have to do to get you to fuck me?\" he gasped.\n\n\"Nothing. I'll fuck you whenever you want me to. I just wanted you to know how much I love having you inside me like this. How good your cock feels.\" I rolled my hips and he groaned, his fingers digging into my skin. \"I just want you to know how perfect you are and how much I love you.\"\n\nHis eyes met mine, dark irises that were a mix of desire and lust and love and surprise.\n\n\"I love you too,\" he said.\n\nI kissed him again, cupping his cheek as I started moving my hips gently. Noah made another soft noise against my mouth, but his grip on me loosened as I lowered myself on him again and again.\n\nThe focus was on him. So many times when we made love, he made it completely about me. Not that I had a complaint about that, but I needed to show him how much I loved him, how much I wanted him, making the moment about him and his pleasure and his body. I needed to make love to him.\n\nSo I did. I moved on top of him, whispered in his ear all the things I loved about him, all the ways he made me feel. He chuckled a bit as I told him that he was the most beautiful man I'd ever seen.\n\n\"I don't know how else to describe it,\" I giggled, still moving steadily. \"You're hot, yeah, and I want to jump on you like... pretty much all the time. But you're also...\"\n\nI trailed off, kissing him again.\n\n\"I love you,\" he mumbled. \"I love you so fucking much.\"\n\nI tried to keep telling him why he was perfect, but the words became staggered as my body began insisting on taking more from him. Noah wrapped his arms around my waist as I began moving faster, craving release, needing the friction between us to spark and catch and send that roar of fire through my body.\n\nIt wasn't long before I came, shaking in Noah's arms as that fire overtook me. He buried his face against my breasts, strong arms holding me steady as he began pushing up into me, hard and passionate and perfectly right. He didn't last much longer, grunting as he came, kissing my breasts as he finished until he slumped back on the bed and I could sit up.\n\nBefore I could, though, he pulled me in for another kiss.\n\n\"You're amazing,\" he whispered. \n\n\"You are, too. You're so amazing.\" \n\nI knew I couldn't fix Noah's relationship with his mom, but I could make sure he knew he was my everything. For the few days we had left off of work, we focused on us. We cleaned the apartment, ridding it of the ghosts Diane left, making it our home again. We made love, we cuddled on the couch, we simply existed in a world that was just ours.\n\nA week later, we finally heard from her.\n\nWe were eating dinner after work when Noah's phone went off. He dug it out of his pocket, saw her number, and hesitated for a moment before putting his fork down to answer it.\n\n\"Hello?\"\n\nHis eyes met mine as she responded.\n\n\"Do you want me to go?\" I whispered, making to get up from the table.\n\nHe shook his head, frowning.\n\n\"Are you okay?\" he asked over the phone.\n\nI gleaned what I could from his side of the conversation.\n\n\"Still in Prince George? With who? Didn't think you knew anyone here.\"\n\n\"You clean?\" \n\n\"Yeah, it's my fucking business whether you are or not.\" \n\n\"No, but I'll buy you groceries if you want to meet at the store.\" \n\n\"I'm not just giving you the money.\"\n\n\"Damn right I don't trust you. You haven't given me a reason to.\" \n\n\"That's none of your fucking business.\" \n\n\"Okay. I'll meet you at the store in an hour.\" \n\nHe hung up and sighed.\n\n\"Everything okay?\" I asked quietly.\n\nHe nodded.\n\n\"She's still in town. Staying with some people. No idea who they are. But she's... safe, for now. Hasn't, you know, frozen to death or something.\" He picked up his fork and started eating quickly. \"Hope you're not mad. Said I'd buy her some groceries. She asked for money but\u2014\"\n\n\"I'm not mad,\" I said. \"If this is what it takes to help her, then let's help her.\"\n\nHe looked at me gratefully. \"You know how much I love you?\"\n\n\"Probably slightly less than I love you, but that's okay.\"\n\nHe laughed. \"Don't think that's possible, baby.\"\n\nThe peace between Noah and his mother was fragile at best, delicately spun but at least present. She checked in regularly, usually when she needed more groceries or a ride someplace, and once or twice asked him to take her laundry to our place because the dryer at the place she was staying had crapped out. \n\nI didn't go with him when he was helping her. He didn't ask me to and I didn't offer. We had silently agreed that would probably be for the best.\n\n<center>Chapter Eighteen</center>\n\n\"You feeling okay?\"\n\nI looked up from my lunch to see Curt standing over the table in the staff room.\n\n\"Excuse me?\"\n\n\"You've been staring at that container for like five minutes.\"\n\n\"Why have you been watching me for five minutes?\"\n\nHe sighed and sat down next to me, glancing around to see who might be listening. Satisfied that no one was, he turned to me.\n\n\"Look, you don't want to get too personal, fine.\" He raised his hands defensively. \"I get it. But you haven't been yourself the past few weeks. I just want to make sure you're okay.\" \n\n\"How would you know?\" \n\nHe raised an eyebrow and I blushed.\n\n\"Do you actually want to know?\" I asked. \"Or are you just asking to be polite?\"\n\n\"I want to know.\"\n\nShrugging, I told him the truth.\n\n\"We found out Noah's mom started using drugs again.\"\n\nCurt stared at me, eyes wide.\n\n\"Regret asking yet?\"\n\n\"Uh... no. What do you mean, 'again'?\"\n\n\"Well, she just got out of prison. Just before Christmas, actually. Stayed with us for a bit, that went really badly. Anyway, she called Noah begging for money while he was at work yesterday and yeah, turns out she's living with this guy who's a dealer and is back on drugs. Crack, I think. I don't, um, know that much about the different... drugs. You know.\"\n\n\"Sure, yeah. That's... not surprising.\"\n\n\"Yeah, well.\" I shrugged again. \"Last night was pretty bad.\"\n\n\"What happened?\"\n\nI paused, trying to figure out where to begin. There was really no way to describe the previous evening to Curt, but I tried to come up with some way of explaining it as I thought back through the memories.\n\nIt had been my day to supervise detention, so I got home after Noah did. Normally, he would have dinner nearly ready on those days. When I walked in, though, he was sitting in the living room watching TV.\n\n\"No dinner tonight?\" I teased lightly, putting my coat away.\n\n\"Didn't really feel like cooking.\" He stood up and came to the front door, wrapping his arms around me and kissing me softly. \"Let's order a pizza.\"\n\nI tensed, which he noticed immediately.\n\n\"What's wrong?\"\n\n\"Nothing. I just... I didn't plan for us to spend money on pizza.\"\n\nNoah sighed. \"Baby, I love you, and I love that you're trying to be... you know, mindful of money and shit. But we're not... like, we can order a pizza every once in a while.\"\n\nI bit my lip to keep from responding and nodded. Noah, of course, knew I wasn't happy.\n\n\"Talk to me.\"\n\nI looked up at him. Dark eyes met mine, wary and concerned, his lips set in a line that just barely betrayed his nervousness. \n\n\"We just... we have a lot of expenses coming up,\" I said quietly. \"And we just had, you know, your mom... I know we're doing all right but I just... I'm worried.\"\n\nIt was hard to be upset or angry when his arms were around me. It was harder still to tell Noah I was worried about money, knowing it was a topic that was sensitive for him. Still, it surprised me when he stopped hugging me and sighed in frustration.\n\n\"You know we're better off now than I have been in my entire life, right?\"\n\n\"Yes, but\u2014\"\n\n\"Like, that includes when I was dealing,\" he snapped. \"I didn't have this kind of money when I was fucking selling drugs, Lacey. You clip coupons, you pinch every penny, you act like we're one paycheque away from being on welfare. I know we got, you know, plane tickets and shit to buy. But fuck, we're not doing that bad!\"\n\nI stared at him. The man standing in front of me wasn't my Noah. My Noah didn't snap at me in frustration. My Noah hated talking about his past, didn't like to bring up what he had been in his previous life. He had pride when it came to money, hated feeling like he had to accept charity, but he'd gotten better about it. It was a sensitive topic but not a forbidden one, and it was completely out of character for him to blow up rather than to just talk things through.\n\nThere was clearly something deeper going on.\n\n\"I never said we were doing bad,\" I finally replied, trying to keep my voice from shaking. \n\n\"You act like\u2014\"\n\n\"I act like my family lives on the other side of the country and I haven't seen them for months,\" I said. \"And I don't know if we can afford plane tickets over spring break because it's stupid expensive that time of year. I act like my brother's getting m-married and that means having to go to his wedding and buy a dress and buy a p-present and shoes and g-getting my hair d-done. We d-don't have that much saved up and we're also helping your m-mom and I d-don't get a p-paycheque in July or August. You know that, right? I d-don't get paid over the summer.\"\n\nHe stared at me silently as I struggled not to cry, stuttering through each word as though I was speaking through a mouth full of marbles.\n\n\"I know we're not d-doing that b-bad.\" A tear fought its way out of my eye and dripped down my cheek. \"I n-never said you... I didn't s-say that, Noah.\"\n\nHe tried to respond, but I couldn't handle a single second more of that conversation. Swallowing a sob, I walked through the kitchen to the hallway, went into the bathroom, and proceeded to bawl my eyes out as I turned the shower on.\n\nWhen I came out of the bathroom, Noah was standing in the kitchen. \n\n\"Baby, I\u2014\"\n\nI didn't hear the rest of the statement before going into our bedroom and closing the door.\n\nIt probably wasn't the most mature way to handle things, but it also wasn't the first time in recent memory that he'd made an assumption about me that was just plain hurtful. First he thought I'd kept something from him when Diane had stormed out, and now he thought I, what, thought less of him because we had to save up some money?\n\nStorming into our room and closing the door was not necessarily mature, but it was justified. The immature, unjustified thing was pulling out my cell phone, ordering a pizza online, and burying myself under our bedspread until a confused Noah buzzed a delivery driver in half an hour later. Bitterly, I hoped his damn pizza was worth it.\n\nWhen our bedroom door quietly opened a short while later, I closed my eyes, the blankets covering my face. Even still, the greasy scent of melted cheese found my nose, and I tightened my stomach muscles as it grumbled painfully.\n\n\"Why?\" Noah asked.\n\n\"You seem to think I'm the kind of person who does mean, petty things and thinks nasty, hurtful thoughts,\" I mumbled. \n\nHe was quiet for another moment.\n\n\"Your idea of a mean, petty thing was to buy me a pizza? Like... you're not gonna, I dunno, eat the pizza in front of me to prove a point?\"",
        "There was a thread of laughter in his voice. All it served to do was make me even angrier as I sat up and glared at him. \n\n\"Do you seriously think that little of me?\" I asked.\n\n\"That's not what I\u2014\"\n\n\"No, it's not what you meant, is it? You never even thought that, did you?\" I interrupted. \"Just like me trying to save money isn't meant to be some kind of attack on you.\"\n\nHe sighed. \"I know, I just\u2014\"\n\n\"No, you just nothing.\" My entire body seemed to tingle with a mix of anger and frustration. \"You don't get to keep treating me unfairly and just expecting that I'll get over it.\"\n\n\"Can you give me a chance to apologize?\" he asked testily.\n\n\"Again.\"\n\n\"What?\"\n\n\"Can I give you a chance to apologize again,\" I said. \"Can I let you explain to me why my opinion doesn't matter again.\"\n\nA muscle twitched in his jaw. I folded my arms, willing myself to stay firm, to not let this go, to finally get to the bottom of why my Noah was acting like I was the enemy.\n\n\"My mom's using again.\"\n\nMy mouth dropped open and whatever anger I had took a backseat as shock rolled in. \"What?\"\n\nHe looked at me cautiously. \"She's using. Again.\"\n\n\"Drugs?\"\n\n\"Yeah.\"\n\n\"How do you...\"\n\n\"She called earlier. Sounded a little fucked up, was somewhere outside obviously. Could hear traffic in the background. Said she needed money for gas. Asked her whose gas since I'm the one driving her around all the fucking time. Said she had someone else driving her around. Asked her where she was. She got pissy with me for asking so many questions till I straight out asked her if she was high.\"\n\n\"What did she say?\"\n\n\"Told me to fuck off and hung up on me. So I went up to Dan\u2014\"\n\n\"Wait, this was at work?\"\n\n\"Yeah. Dan's uh, a little newer to... you know, the straight and narrow path. Still knows some people in town. So got him to help me track down some guys who might know something. Jordan jumped in and told us to get in his truck, drove us around looking for her.\"\n\n\"Did you...\"\n\n\"Yeah.\"\n\nI waited patiently as he shook his head, taking a shallow breath to collect himself. After a pause, he continued.\n\n\"She's living with some guy. Not sure of his name. Jason or Jesse or Jack or something. He's bad news. Probably gonna get her killed if she doesn't OD first. But, you know, she loves him because she's a grown woman who can make her own decisions and doesn't need me poking my ugly-ass face into her business like the shitty disappointment I am. Well, that and the easy access to crack.\"\n\n\"I'm sorry,\" I said softly.\n\n\"So that's what's going on.\" His eyes flashed up at me. \"For the record. So yeah, I guess I have to apologize again. Sorry.\"\n\n\"Noah, I didn't know that\u2014\"\n\n\"Whatever. I'll put your pizza in the kitchen if you want it.\"\n\n\"Lacey?\"\n\nI shook myself out of my memory, looking back at Curt.\n\n\"Sorry. It was just... there's nothing that really prepares you, you know? And now we're...\" I sighed, pushing the salad I'd packed for lunch around the container. \"I don't feel like I can talk about this with you. You already don't like Noah.\"\n\n\"That's not... he's a decent enough guy.\" He glanced around the staff room again. No one was paying attention to us, but he still scooted his chair a bit closer and lowered his voice. \"I'll try not to judge. Tell me what's going on.\"\n\nI hesitated for a moment. Curt wasn't quite a friend, but he wasn't... not a friend. I knew Noah didn't like him, and that he believed Curt had feelings for me. I didn't quite believe that; Noah seemed to think any man who glanced my direction might have feelings for me. \n\nMore importantly, I really did need someone to talk to. I couldn't talk to my mom or Sean about this. It didn't feel right to talk about Noah to Vanessa or to call Jenny and ask her advice, not when they both knew me through him. I needed someone who didn't know Noah as well, someone who could look at things from a different perspective.\n\nSwallowing hard, I told him the fight I'd had with Noah. I told him about feeling helpless, like nothing I did was right, like he wasn't my Noah anymore. Curt listened thoughtfully, slowly nodding as he processed my words.\n\n\"I can't hold it against him,\" I finished softly. \"I mean, the whole thing with his mom... I understand why he's... not himself right now. It still hurts, though.\"\n\n\"You tell him this?\"\n\nI shook my head. \"I told him I had a bunch of marking to do and to go to bed before me. I ended up sleeping on the couch and he... he didn't wake me up when he left this morning so... I don't know what's going on.\"\n\n\"Kind of a dick move.\"\n\n\"Watch it.\" I pointed my fork at Curt, glaring at him. \"We might be fighting but he's still my boyfriend.\"\n\nCurt held his hands up defensively. \"Didn't say he was a dick, said it was a dick move.\"\n\n\"Yeah, well... you're probably right. And he's not texting me back, so...\"\n\n\"He wouldn't like... I mean, he's not into drugs or anything, is he?\"\n\n\"Not anymore,\" I said without thinking.\n\nCurt stared and I felt my face turning red. \n\n\"I... um. He's got a past,\" I said lamely. \"It's not... don't imply that's where he is right now. I can't take that.\" \n\n\"Okay.\"\n\nCurt nodded and very hesitantly, very tentatively, placed a hand on my knee. I tensed, alarmed by the sudden contact.\n\n\"Lacey, if you need anything\u2014\"\n\n\"Noah thought you might have feelings for me,\" I said quickly, staring at his hand.\n\nCurt's face turned red and he jerked away as though I was made of fire.\n\n\"I told him you didn't and that we're just colleagues.\"\n\n\"Uh. Yeah.\"\n\n\"It's fine,\" I said. \"We're good, Curt. \n\nBefore my students came back for the afternoon classes, I tried calling Noah again. Like every other call I'd made that morning, it went to voicemail. Calmly, I called Vanessa.\n\n\"I think Noah's phone might be broken,\" I lied when she answered. \"Can you ask Jordan to get him to call me? Or, um, could I get Jordan's number from you?\"\n\nShe gave me Jordan's number. When I called, he picked up on the second ring.\n\n\"Hello?\"\n\n\"Um, hi, Jordan. It's L-Lacey.\"\n\n\"Hey!\" He sounded surprised but cheerful. \"To what do I owe this pleasure?\"\n\n\"Um, is Noah... is he at work?\"\n\nJordan hesitated.\n\n\"Just a sec.\"\n\nI waited while he moved somewhere else, the sounds of the site ebbing and flowing in the background. My heart raced, worried thoughts flying through my mind, wondering if Noah was there or if he was... I didn't want to think of where else he might be. Finally, the sound of a truck door opening and closing, and it was quiet.\n\n\"What's going on?\" Jordan asked.\n\n\"Is he there?\" \n\n\"Yeah, and he's been in a fucking foul mood all day, and now you're calling me. So what the fuck is happening? I'm worried shitless. You know about his mom, right?\"\n\nI swallowed hard. \"Yes. I didn't mean to bother you, I just... he's upset and I'm worried.\" \n\n\"He's not answering your calls? You guys have a fight or something?\"\n\nI didn't want to speak badly about Noah to Jordan. Yes, Jordan was his friend, but he was also his boss. Still, Jordan insisted and insisted until I had no real choice. Quietly and struggling not to cry, I explained what had happened the night before.\n\nWhen I finally let it slip that I was worried Noah might do something he'd regret, that it was one of his fears when we had first talked about helping his mom, I couldn't hold the tears back.\n\n\"Sorry,\" I choked, aggressively wiping my face. \"I didn't mean to unload on you.\"\n\n\"No, it's fine. Lace, it's... thanks for telling me.\"\n\n\"Please don't tell Noah I said that.\"\n\n\"Cross my heart.\" Jordan sighed. \"Look, I'm gonna talk to him. I am gonna tell him you called me but I'm not gonna repeat this conversation to him, that's between you and me. He needs to know how... let me handle it, okay?\"\n\nI nodded, then remembered he couldn't see me. \"Okay. Just... I'm just really worried.\"\n\n\"I know, Lace. Listen, it's Friday, so it won't be weird if I propose we go out for dinner or drinks or something after work. This is your cell number?\"\n\n\"Yeah.\"\n\n\"I'll text you and let you know if he's gonna be late so you don't worry, okay?\"\n\nJordan kept his word and texted me just after I got home from work to say that he and Noah were going for dinner. I thanked him and made myself another salad for my own dinner but barely picked at it. While I was packing it up, Mom called me.\n\nWe chatted about unimportant miscellany as I cradled the phone on my shoulder, tidying the kitchen before pouring a glass of wine and moving to the couch. As hard as I tried, I was only half-listening to my mom, my mind wandering a thousand different directions as she talked.\n\n\"What do you think?\"\n\nI bit my lip, realizing I didn't know what she'd just asked. \"Sorry, what was that?\"\n\n\"About coming here for spring break,\" she said patiently.\n\n\"Oh. I mean, yeah. I've been looking at tickets. Hopefully the price will go down.\" \n\n\"Are you really okay, sweetie?\" she asked after a tense pause.\n\n\"I'm okay. It's just been a long couple weeks.\"\n\n\"How are things with Noah's mom?\"\n\n\"Not great.\"\n\n\"What's happening?\"\n\n\"She's... it sounds like she's on drugs again.\"\n\nMom inhaled sharply. \"How's Noah doing with all of this?\" \n\nMy hands shook as much as my voice did. \"He's, um, handling it. It's... you know, just a rough patch. We'll... it'll be okay.\" \n\n\"You don't sound convinced.\"\n\n\"I'm not. I can't help feeling like I failed him.\" \n\n\"I don't see how you failed him.\"\n\n\"It was my fault she left. If I hadn't let her get to me\u2014\"\n\n\"You'd be even more broken up than you are already,\" she said.\n\n\"Can we talk about something else?\" My throat was dry and the words scratched as they came out. \"Has... has Sean made any decisions about the wedding yet?\"\n\nHe had, as it turned out, and Mom gracefully changed subjects as she talked about Sean's wedding.\n\n\"They want to get married this year,\" she said. \"As silly as those two can be, they're both romantics at heart. Rick wants it to be this year because it ties into his whole proposal speech about not wanting to go another year without being married. Sean wants it to be this year because he's so excited, he can't wait. Last I spoke to him, they were considering a destination wedding. Sean was thinking Vegas, but Rick is pretty set on Hawaii. Sometime in the summer, of course, so you wouldn't have to worry about school.\"\n\nSchool wouldn't be a worry, but I made a small, non-committal noise.\n\n\"What's wrong?\" she asked. \"If it's about the cost, sweetie, don't worry, we're going to make sure you and Noah can come no matter what. If that means\u2014\"\n\n\"We'll pay our own way,\" I said firmly.\n\nI tried to ignore the slight hint of shame that underlined my voice. Rick and Sean made far more money than me or Noah, but relying on them to help us attend their wedding definitely made me understand Noah's aversion to accepting charity. \n\n\"Okay, sweetie,\" Mom said. \"So if it's not that...\"\n\nI sighed and grimaced. \"I'll, um, just have to check into some things. F-For Noah. I don't know if... we might need to get some paperwork or something.\"\n\n\"What do you mean?\"\n\n\"Because of his record, Mom. We'd have to check if he can even leave the country.\"\n\nI could almost picture her wincing.\n\n\"I don't think they thought of that,\" she said. \"I certainly forgot... well. We'll figure something out.\"\n\n\"Don't let them change their dream wedding because of this,\" I said sternly. \"In fact, don't bring it up. Noah would... he'd be embarrassed. Let them plan whatever they want and we'll find a way to make it work.\" \n\n\"Of course, sweetie. It's very good of you to say that.\" She laughed lightly. \"When you get married, remind me to tell Sean and Rick about this if they get pushy.\"\n\nI tried to laugh. \"When\" I got married seemed to be up in the air. Even before last night's fight, it had seemed questionable. Now, I had no idea if \"when\" was the right word. It was starting to feel like \"if.\"\n\nDesperate to change the topic yet again, I asked about the only other thing I could think of.\n\n\"How are things, um, with... you know, the divorce?\"\n\nMom fell silent. \n\n\"Mom?\"\n\nShe eventually told me that my father was still pushing back about the divorce and that she didn't know if she would have to go back home and see him in court. Up to that point, everything had been handled through the lawyers, but because he was fighting at every turn, it was looking like a court date was more and more likely.\n\n\"If I do, Lace... I know it's asking too much. I know it would be hard and I shouldn't ask for this from you because you don't need to deal with him anymore but... would you come with me?\"\n\n\"Of course.\" There was no hesitation in my voice. \"In a heartbeat. I'd love to tell that fucker\u2014\"\n\n\"Lacey Marie!\"\n\nWhile I dissolved in laughter, the front door opened and Noah walked in. I stopped laughing immediately.\n\n\"Mom, I have to go. I'll call you tomorrow, okay?\"\n\nShe sounded surprised, but agreed, and I hung up the phone as I stood, turning towards the front hall where Noah was just closing the door, his face unreadable as he shrugged his jean jacket off and hung it in the closet.\n\n\"Hi,\" I said softly.\n\nHe didn't say anything until his boots were off and put on the mat. Then he ran a hand through his hair and looked at me.\n\n\"I haven't been good to you lately,\" he started. \"I've been a complete fucking mess. I'm being a shithead to you and I'm making you worry. You don't deserve that, and I need to do better. So here's what's going to happen. One, I'm gonna check in with you every day, if you'll let me. Gonna tell you exactly what's going through my head. Two, if I'm saying shit that's... if I'm being a dick, call me out on it. Please. Just say... I dunno, tell me I'm being a dick. Whatever. Three...\"\n\nHe cleared his throat. \"Uh, I... you know how the church does that, uh, counselling shit?\"\n\n\"Yes.\"\n\n\"Can you, uh... can we go to that?\"\n\n\"Of course.\"\n\nHe nodded brusquely. \n\n\"And, fourth. Most important.\" He cleared his throat again. \"I'm so fucking sorry. I know that's not enough, I know I shouldn't have to be apologizing because I shouldn't be fucking treating you like this in the first place. You're the best fucking thing that ever happened to me and I... I'm fucking that up. I don't have the right to ask you to forgive me again but\u2014\"\n\n\"I forgive you.\"\n\nHe made a soft, choked noise before falling silent.\n\nI went to him, holding him tightly and burying my face against his chest. The scent of his workday filled my lungs as I inhaled, salt and sweat and dust and him. His breath was staggered, quick gasps that betrayed the fear and the self-loathing and the pain he was putting himself through. He clutched at me, arms shaking just slightly, his head bowed and face buried in my hair.\n\n\"I love you,\" he whispered. \"Please don't leave.\"\n\n\"I'm not leaving.\" I pulled away from him just enough to bring my hand to his face, brushing the hair out of his eyes and wiping a smudge of dirt off his forehead. \"I love you. So, so much. And I'm not going to stop loving you. This isn't what ends us, Noah.\"\n\nHis eyes still betrayed a sense of fear. \"What do you think ends us, then?\"\n\n\"Nothing.\"\n\n\"What if I fuck up?\"\n\n\"You won't. I trust you.\"\n\nHe laughed, a dry kind of bark, and his lips twitched into a half-smile. \"Told you a million times that's a bad idea.\"\n\n\"You've proved to me a million times that it's a good one.\" \n\nHe might have had more to say, but I pressed my mouth to his and whatever he might have said was lost against my lips. Gingerly at first, then with more confidence, he returned my kiss. Arms tightened around me, pulling my body into his. \n\nI touched his face, ran my fingers through his hair and trailed them down his neck. He shivered when I brushed a spot behind his ear with fingers lighter than feathers and groaned when I let that hand trail down his neck to his chest.\n\n\"Come to bed with me.\"\n\nHe smiled, his lips turning up. \"Lemme shower first, baby. I'm covered in dirt.\"\n\n\"I don't care.\"\n\n\"Let me clean up,\" he said softly. \"Let me be good for you. It's Friday. We got time.\" \n\nI almost protested again, but conceded when I saw the pleading look in his eyes.\n\n\"Okay. Just be fast.\" \n\n\"Or what?\"\n\n\"Or I'll have to start without you.\"\n\nHe laughed and kissed me again.\n\n\"Sure you will, Miss Lacey.\" \n\nWhile he showered, I went to our room and undressed. He wasn't in the shower very long, and had just wrapped a towel around his waist instead of bothering with putting clothes on, but when he came out of the bathroom, I already had my hand between my legs as I lay on the bed.\n\nHe stopped in the doorway, leaning against the doorframe as I ignored him and touched myself. My fingers moved slowly, lazily tracing my folds as I dipped them inside myself, sighing softly before lightly rubbing my clit and shivering. My other hand moved to my breast, and I gripped it gently as I repeated the meandering pattern back to my dripping entrance. \n\nMy heart pounded as Noah watched silently from the doorway. He said nothing as I slipped one finger, then two, inside my pussy. It was only when I bit my lip in a failed attempt to hold back a moan that he stepped forward, crossing the room to the bed.\n\nHe didn't speak as he knelt beside me on the bed, his fingers curling around my wrist and guiding my hand away from my pussy. I whimpered softly, looking up at him as he brought my hand up to his lips and took my slick fingers into his mouth.\n\nHe sucked lightly before letting go of my wrist. I let my hand fall from his lips, touching his chin gently before trailing down his chest slowly, my fingertips lingering on his nipples and pecs before tracing past his ribs and down his stomach to the edge of the towel around his waist. With a quick motion, I untucked it, letting the fabric drape away from him as his swollen cock came into view.\n\nI traced it lightly, my fingers grazing each ridge and bump before closing my fist around him. Noah groaned as I stroked him teasingly, my movements measured and steady. His head bowed, his wet hair clinging to his cheek as it hung beside his face. He leaned forward, reaching down to touch my breast as I handled his cock. \n\nThough it wasn't new, the power I had over Noah still astonished me sometimes. It made me nervous, uncertain of my worthiness to handle such a thing. Even lying on my back, he submitted himself to my control, my touch enough to command him. Just as easily, I knew he could command me the same way, and I trusted him with that power more than I did myself.\n\nHis hand squeezed my breast lightly before brushing my nipple, alternating movements as I increased the pace of my hand on his cock. Noah shuddered, the first drops of precum leaking from his tip. Slowly, carefully, I shifted down on the bed, positioning myself between his knees so I could turn my head and take his cock into my mouth.\n\nI closed my eyes as I wrapped my lips around his thick head, hot and smooth against my tongue. Noah's hand tightened on my breast slightly as I began to suck him, still working his shaft with my hand as I enjoyed his cock.\n\nI loved the feeling of him in my mouth, the way he tasted and the intensity of his breathing as I licked and sucked his cock. I knew he was watching me, even though my eyes were closed. I could feel his eyes on me just as I could feel his hand on my breast.\n\nAs much as I loved sucking Noah's cock, it wasn't doing anything for the place between my legs that was begging for attention. Casually, I moved my other hand down my body, sliding my fingers back between my legs. A muffled moan vibrated against Noah's cock at the relief from my fingers.\n\nHe swore softly and I glanced up to see his eyes glued to my body as I touched myself. My fingers slid between my lips, dipping into my entrance before moving to my clit. I exhaled again, both hands moving at the same pace, fingering myself as I stroked Noah's cock and bobbed my head on his tip. ",
        "I watched him as he watched me, captivated by his expression as he was captivated by my mouth and hands and body. My fingers moved slightly faster, increasing the pressure on my clit as the craving for more started to rush through me. When I moaned again, the spell Noah was under wavered, and he shook himself out of it long enough for his hand to move from my breast to my pussy. It slid beneath mine, nudging my fingers out of the way as he took over.\n\nIt didn't make sense for Noah to know my body and my needs better than I did, but somehow, he did. Touching myself felt good; Noah touching me was bliss. The rough tips of his fingers stroked my clit, finding the key spot with an ease that I could barely manage myself. I squirmed beneath him, my hips grinding up towards his hand as he explored my pussy. \n\nMy pussy clenched on his finger as he slipped it inside me. His hands were larger than mine, his finger moving deeper than I could reach on my own. He mimicked my earlier movements, another finger joining the first, and I had to take his cock from my mouth to gasp for breath as I cried out. \n\nHis movements came faster, distracting me from my own task with his cock. I tried to take him back into my mouth, but my body couldn't handle the intoxicating rush he was giving me. My hand tightened slightly on his cock and he grunted, but Noah's focus was on me; on my pleasure, on my orgasm, on borrowing the power I had over him and making it his.\n\nMy eyes pinched shut as my body prepared itself for the imposing immensity of orgasm. Every nerve in my body seemed to be prickling in anticipation, each one waiting patiently for the order to fire and render me helpless in jouissance. \n\n\"Come for me, Lacey,\" he whispered, finally breaking his silence as his fingers worked me mercilessly.\n\nI fell to him, to the betrayal of my own senses as they obeyed him with unequivocal submission. His hand never stopped moving, teasing every bit of my orgasm out of me. Fervid cries filled the room as I writhed on the bed, body and mind and soul consumed entirely. \n\nBefore the wave of ecstasy had completely faded, before I had slumped back completely on the bed and taken a breath to try to regain some semblance of self, Noah had withdrawn his cock from my hand and his hand from my pussy. He moved between my legs effortlessly, parting my thighs further before sinking inside me.\n\nI cried out again and he groaned, my pussy embracing his cock. He gripped my thighs, using them as leverage to pull me into him as he began to fuck me. The moment was filled with passion, the air filled with the scent of him and me and us, my body his to control and use as he saw fit. He could have done anything, asked anything, fucked me in a way that was just for him and not for me, but that wasn't Noah.\n\nNo, Noah saw fit to reach down and grip my breast as it bounced, squeezing firmly before bringing his hand back to my clit and fingering it as he fucked me. Noah wanted more from me, wanted me to come again, wanted to use his power over me for me, not just for him. For us. \n\nPerhaps it was the timing of him plunging inside me before my previous orgasm had truly faded, perhaps it was an escalation of the quivering aftershocks that always trembled through me when I came before he was done with my body, but another orgasm was building quickly. I reached for him, my fingers digging into his hip as I pushed forward, urging him deeper, harder, ready for another explosion of bliss.\n\nAnd it came. I came. I whimpered as my legs shook and my body used the last of its energy to send me back to a place of unimaginable intensity. My back arched, my head pressing hard into the mattress as I seized around him. From wherever that intense, magical place was, I heard Noah swear, and I felt his hand leave my clit only to be replaced with his body as he leaned forward. \n\nHis chest pressed against mine as he burrowed inside me. My arm felt heavy as I lifted it, wrapping it around him and resting tiredly on his lower back.\n\n\"Come for me,\" I urged into his ear. \"Give it to me, Noah. I love to feel you come inside me.\"\n\nHe groaned, buried his face into my neck, and grunted as he obeyed me. I sighed, almost moaning as I felt him finish, spilling inside me before he stilled. \n\n\"I love you.\" His words were muffled by my skin, quiet and intense and true.\n\n\"I love you,\" I whispered back.\n\n<center>Chapter Nineteen</center>\n\nThings weren't fixed, not really, but they were on the path to being fixed. We spent the majority of that weekend in bed together, aside from Sunday morning when we went to church. True to his word, Noah spoke with the pastor about his need for help. Our pastor immediately brought him to his office after the service while I had coffee with other members of the congregation. When he came out about an hour later, Noah had a look of hope I realized had been missing for quite some time.\n\nThe following week, Noah came home after work one night, handed me a piece of paper, and said we were going to Montreal for spring break. My mouth dropped open and he explained Jordan had given out bonuses for their last project, so he used his to get our plane tickets, and he wouldn't hear another word about it.\n\n\"Let me do this,\" he said after I protested again that it was too expensive. \"It's money we didn't know was coming. Just keep what we've got saved in the bank for another time.\"\n\nWe sat down and took a look at our finances, and I left that conversation feeling far more comfortable than I had before. Noah had been right; we didn't need to tighten our budget quite as much as I had been. With his bonus, the overtime he was making, and the amount we had put away, we were in reasonably good shape. \n\nNot that it mattered. We could have had nothing, not a penny to our names or anything, and I would have still loved him more than anything else in the world.\n\nA few weeks after that, Jordan and Vanessa insisted we come by for dinner.\n\n\"About fucking time!\" Jordan hollered as he flung the door to his house open. \"You know Vanessa's been on my case for like two months to get you over here? Always a damn excuse with this one.\"\n\n\"Ah, fuck off,\" Noah laughed. \n\nJordan clapped him on the shoulder before pulling me in for a hug.\n\n\"How are you doing, Lace?\"\n\n\"Great, thanks!\"\n\nVanessa came to the door, wiping her hands on a dishtowel as she did.\n\n\"It's been way too long.\" She hugged me first, then Noah. \"Come on in, dinner's just about ready.\" \n\nWe chatted idly as we made our way to the kitchen, catching up on all the menial little things that seem to pile up between visits with friends. Jordan and Noah saw each other daily, of course, but Vanessa had plenty to share with me, and I with her. \n\n\"Do you want a drink, Lacey?\" Jordan interrupted as Vanessa and I stood near the stove.\n\n\"Um, sure. What are you having, Vanessa?\"\n\n\"Just water for me,\" she said lightly. \"But please, have a glass of wine if you want one.\"\n\nJordan tried valiantly to disguise the excited expression that flew across his face. He coughed, covering his grin. Vanessa sighed and rolled her eyes.\n\n\"You are absolutely shit at keeping a secret,\" she complained.\n\nI figured it out, but Noah was still looking from Vanessa to Jordan with a bewildered expression.\n\n\"What'd I miss?\" he asked.\n\n\"Just say it,\" Vanessa laughed.\n\n\"We're having a baby!\" Jordan blurted. \"I knocked her up!\"\n\n\"Holy shit,\" Noah said. \"Wow, man. Congratulations!\"\n\nI hugged Vanessa as she laughed. \"You must be so excited.\"\n\n\"I am,\" she beamed. \"It's still... it's early. Like, a month right now. We literally just went to the doctor today and despite the fact we agreed not two hours ago that we weren't telling anyone until three months...\"\n\nI counted quickly in my mind. \"So you're due... end of October?\"\n\n\"They're saying October 24th. I'm kind of hoping it holds on for a week so we have a Halloween baby.\" \n\nFrom there, the rest of the night was baby talk. In the few short hours since they'd found out they were expecting, Jordan had planned what the nursery would look like and bought a stack of books about pregnancy and babies. Vanessa had already vetoed all the names he'd suggested, despite Jordan's insistence that Marvin was a perfectly respectable name for a boy.\n\n\"We're not naming it Marvin,\" she said flatly.\n\n\"That's what you said about Leia.\"\n\n\"We are not naming our baby after Hitchhiker's Guide to the Galaxy, or Star Wars, or Star Trek, or any other geeky TV show or book or video game, you fucking nerd,\" she said.\n\nNoah howled with laughter and I couldn't hold back a giggle. Jordan shrugged, grinning.\n\n\"Fine. We'll have a boring baby with a boring name. Bob, maybe.\"\n\n\"No.\"\n\nI was perfectly happy to share in their excitement until dessert rolled around.\n\n\"Okay, so now you two have two months to get knocked up,\" Jordan said bluntly.\n\nNoah's face went red. \"Uh, what?\"\n\n\"Yeah, if you manage to have a baby before the end of the year, they can be in the same class at school. Automatic best friends. It'll be perfect.\"\n\nI laughed, trying to hide my discomfort. \"Seems like a sketchy reason to have a baby.\" \n\n\"Ah, there's worse reasons,\" Jordan said. \"Come on, it would be awesome!\"\n\n\"Jordan,\" Vanessa chided gently. \"They're not even married.\" \n\n\"Oh, right.\" Jordan pointed his fork at Noah. \"Come on, man. Lock this shit down.\"\n\nNoah chuckled again, staring down at his plate and pushing the cake Vanessa had served him around.\n\n\"So do you think it's a boy or girl?\" I asked, desperate to redirect the conversation. \n\n\"No way,\" Jordan shot back. \"We've monopolized the whole conversation. It's time to talk about Lacey and Noah.\"\n\n\"Or,\" I said thoughtfully. \"Or, we could not do that.\"\n\nVanessa burst out laughing.\n\n\"Jordan, just drop it.\"\n\n\"Nah man, I gotta have answers. Noah, when are you popping the question?\" \n\n\"Dunno, man,\" Noah muttered.\n\n\"Lacey, you on his case about it yet?\" \n\n\"Nope.\"\n\n\"What? Yeah, right. You're a teacher, right? You probably want kids. Gotta get on that.\"\n\n\"Jordan, drop it.\" \n\nVanessa's tone went from gentle chiding to a harsh order. It might have had something to do with the colour of my cheeks, or the way I was twisting the cross around my neck like it was going to help me teleport away from them, or maybe the way I was gripping the fork until my knuckles turned white. \n\nShe couldn't have known it had to do with that echo of yearning that settled in my chest, or the way my stomach started turning. She didn't know that I was fighting to keep tears from spilling onto my cheeks, and even worse, that I didn't know why I had the urge to cry. \n\n\"Yeah man, you seem pretty fuckin' invested in my sex life,\" Noah said. \"Gonna give us instructions, too? Get into detail about how you knocked your wife up?\" \n\n\"Oh my God,\" Vanessa groaned. \"You're just as bad as he is!\"\n\nTheir laughter gave me enough time to gather my strength. I took another bite of cake, released my cross and let it untwist on my chest, before joining in with a weak giggle.\n\nThe topic finally, thankfully, changed, but I couldn't shake the morose feeling that was snaking through my chest and stomach. Shortly after dessert, Noah yawned and said we should get going. I nodded, smiling at Jordan's protests and claiming I was too tired for another glass of wine, and besides, we all had to work the next day. After another round of congratulations and hugs, Noah and I left.\n\nOnce in his truck, he touched my hand softly.\n\n\"You okay?\"\n\nI nodded. Both of us knew I was lying.\n\n\"Wanna talk about it?\"\n\nI shook my head. That time was the truth. \n\nThe rest of our drive was quiet, though Noah held my hand as we drove. When we got home, I showered and crawled into bed. Noah joined me shortly after, curling up behind me and kissing my neck.\n\n\"We should talk,\" he said again.\n\n\"I know,\" I whispered. \"Just not right now.\"\n\nI didn't sleep well that night. The clutching, yearning feeling became a cold pricking that spanned from my stomach to my heart, snaking out until the tips of my fingers and toes were numb with cold. Noah held me tightly as he slept, his breath warmly grazing my skin, but I only managed to doze in short spurts.\n\nWhen the alarm went off the next morning, Noah rolled out of bed before I did. When he finished in the bathroom and came back to get dressed, I was still curled up in bed.\n\n\"Baby, you okay?\"\n\nI nodded, then shook my head.\n\n\"I'm not feeling well. I think... I think I'm gonna call in sick.\"\n\nHe tried to insist he should stay home with me, but I told him firmly to go to work. \n\n\"I'll call you in a couple hours,\" he promised, kissing my forehead. \"I love you, baby. Feel better.\"\n\nI spent most of the morning sleeping, only leaving the bed around lunchtime to use the bathroom, take my birth control pill, and eat after having skipped breakfast. Noah called as promised, and after promising him again that I was okay and he didn't need to come home, I moved to the living room. \n\nSleeping had helped, and I was starting to feel better. I knew why I had been upset, but at the same time, I didn't want to deal with it. Noah and I still hadn't talked about marriage or kids, but given how difficult the past few months had been, I thought it was understandable. \n\nOn top of that, we hadn't even been together for two years. Sean and Rick had just gotten engaged after five years together; two seemed like a drop in the bucket. Noah and I were still trying to navigate taking care of ourselves as adults. Adding a baby into the mix seemed irresponsible at best, disastrous at worst. \n\nThe marriage question, though...\n\nI shook the thoughts off. One thing at a time, I told myself. Right then, we were still handling the issues with Diane, we had my brother's wedding coming up, and above all, we still loved each other no matter what a ceremony or a piece of paper said.\n\nI spent the rest of the day watching trashy daytime TV, read part of my novel, and ate the entirety of a bag of chips we had in the pantry. When Noah called to say he was on his way home an hour earlier than usual, I changed out of my pyjamas and into clean clothes, started making dinner, and made the bed.\n\nAs I was finishing tidying up after my day of laziness, my cell phone rang.\n\n\"Hi Mom,\" I answered.\n\n\"Oh!\" she gasped. \"Sorry, Lacey. I was just going to leave a voicemail. I thought you were at work.\"\n\n\"I wasn't feeling well so I took the day off.\"\n\n\"Well, even better then.\"\n\nNoah came in a few minutes later. I waved at him and mouthed \"hello,\" then pointed at our bedroom to indicate I was going there to talk. He nodded and smiled. \n\nMom and I chatted about unimportant things for a few more minutes, but I could tell there was something on her mind. Nerves were woven through her voice, and it was all I could do to patiently wait for her to tell me why they were there.\n\n\"So they're thinking May,\" she said in reference to Sean and Rick's wedding. \"I know school's not out yet but with it being such short notice\u2014\"\n\n\"That's okay. I can take time off,\" I said. \"Do they have a location or a... a budget, maybe? Just so we can... you know. Plan ahead.\"\n\n\"I don't think you'll need to worry about that.\"\n\nI tried not to sound annoyed when I responded, flopping on the bed with a sigh.\n\n\"Yes, I do. With it being short notice, it means we have less time to save up. We're coming down in March already and then there's going to Winnipeg for the court thing... you haven't heard more about it, have you?\"\n\nShe didn't respond and I frowned.\n\n\"Mom? Are you still there?\"\n\n\"Well, um, that's actually why I was calling.\" \n\nI raised an eyebrow. We'd been on the phone for nearly ten minutes and she was just bringing it up now?\n\n\"You found out the date?\"\n\n\"Well, um...\" She cleared her throat. \"I actually just got back from Winnipeg.\"\n\nMy heart throbbed, a single dull thud, then cracked.\n\n\"You... I thought I was going with you.\" \n\n\"I know,\" she said. \"And sweetie, I appreciate it, but I just couldn't... you have so much other stuff going on.\"\n\n\"Did Sean go with you?\"\n\n\"No.\" \n\nI closed my eyes.\n\n\"Mom. We... I wanted to be there for you. You shouldn't have had to be there alone.\" \n\n\"I had Alexandre with me.\" \n\nAlexandre, her friend who wasn't her boyfriend but was basically her boyfriend?\n\n\"What?\"\n\nShe sighed. \"Alexandre came with me.\"\n\nIf my head could have actually spun, it might have. For a moment, I was ready to scream. Instead, I laughed.\n\n\"Lacey? What's so funny?\"\n\n\"I just...\" I wheezed for a moment before regaining control of my voice. \"I guess I know how you felt when I ran away with Noah.\"\n\nShe made a noise that could have been a sob, but that I hoped was a laugh.\n\n\"Did they, um, meet? Him and Dad? And Jesus, what happened? What... did they...\"\n\n\"Well, let's just put it this way,\" Mom said delicately. \"Alexandre and I left Montreal as friends, and, um... well, how would you feel if I said we came back as... something more than friends?\" \n\nI tried to keep my voice from shaking.\n\n\"It's over? With... I mean, the divorce is finalized?\"\n\nShe sobbed the next word.\n\n\"Yes.\"\n\nNoah nearly flew into the room as I jumped off the bed, shrieking. His eyes were wild as he stared at me before realizing I wasn't screaming, but laughing. I spun in place and then grabbed him, needing to hug someone, to spill my excitement, to share the absolute euphoria of knowing that my mom was finally, truly, legally and literally and entirely free of the monster that was my father.\n\n\"It's over!\" I sobbed to him. \"Mom, it's... oh my God, and you're actually asking me if I'm okay with you dating Alexandre?\"\n\nShe was crying or laughing or both. \"Well, yes\u2014\"\n\n\"Of course! When are you moving in together?\"\n\n\"That's a little fast!\" she exclaimed. \"We're just... we're just dating right now.\"\n\n\"Oh, sure. Mom!\" I squealed. \"You have a boyfriend!\" \n\nShe giggled, a girlish, delighted sound that warmed my heart.\n\n\"Yes, I guess I do.\" \n\nNoah was laughing as I released him. I grabbed his hand and we sat at the edge of the bed together.\n\n\"I'm so happy that you finally get to be with him and that... that we're done with Dad.\" \n\nHer giggle faded.\n\n\"Me too,\" she said softly. \"He just... he's not well, Lacey.\"\n\nMy smile disappeared. \"Like, he's sick?\"\n\n\"In his head, yes. He's... he has changed a lot. I don't know how to explain it. He's... obsessed. He's scary.\" \n\n\"Obsessed with what? With you? Are you safe?\"\n\n\"I'm safe,\" she said. \"He's obsessed with... salvation. He's just not... I mean, I know now that he never was normal, but it's become fanatical.\"\n\nHer words echoed in my head long after we hung up and Noah had hugged me to him. I shook them away, batting them out of my mind like cobwebs.\n\n\"Maybe this is it,\" I said hopefully. \"Things are going to turn around.\"\n\nNoah smiled and brushed my hair off my forehead.\n\n\"God, I fucking hope so.\"\n\n<center>Chapter Twenty</center>\n\nThings didn't get better with Noah's mom. Diane called sporadically, sometimes going days without contacting Noah before suddenly calling him in the middle of the night, begging for money.\n\n\"The fuck...\" he mumbled the first time his phone went off one night.\n\nI stirred beside him. \"Who...?\"\n\n\"Fuck,\" he repeated as he grabbed his phone. \"Hello?\"\n\n\"NO-ah,\" I heard her say. \"It's your MA-ma.\" \n\n\"You high?\" he grumbled.\n\n\"Oh, fuck you.\" \n\n\"So yes?\"\n\n\"I can't call my own fucking son to say hello?\"\n\n\"It's two in the morning.\" \n\n\"Not my fault you're some pussy bitch who doesn't know how to have a good time.\"\n\n\"Right, I'm gonna go back to sleep now.\" \n\n\"No! Fuckin'... look, I'm in a pinch here. You got some money you can lend me?\"\n\n\"You still using?\"\n\n\"I'm your fucking mother.\"\n\n\"I'm not giving you money if you're using.\" ",
        "\"Well fuck you, then.\"\n\n\"'Kay. Good night.\"\n\n\"No! Just... fucking goddamnit fucking fuck. I lost my goddamn coat and I got no money for a new one.\" \n\n\"I have an old one she can have,\" I whispered, hoping she couldn't hear me through the phone.\n\nNoah sighed. \"What size are you, Mom?\" \n\nHe got out of bed to bring it to her. I fell back asleep while he was gone, though woke again when he crawled in next to me a little less than an hour later.\n\n\"Is she okay?\" I murmured.\n\n\"No,\" he said bluntly. \"She's high as a fucking kite and looks like death.\"\n\nI wrapped my arms around him, intending to whisper soft words as I cuddled him, but Noah's frustration and anger with his mom was manifesting in a way that demanded comfort much more physically.\n\nHis arms worked themselves around me and his lips found mine, skin that was still chilled from the cold night air pressing hard against me. \n\n\"I need you,\" he whispered. \"Please, baby.\" \n\nWhen I started kissing his chest and pushing him onto his back, he tried to stop me.\n\n\"I'm already being selfish,\" he said. \"Let me\u2014\"\n\n\"Shh.\"\n\nI went down on him, my lips wrapping around his cock as he groaned. His fingers wound through my hair and he strained upward, pushing his cock against the back of my throat. I gagged, choking on the thick tip that suddenly blocked my windpipe. \n\n\"Fuck.\" His grip on my hair loosened. \"Sorry.\"\n\nI responded by grabbing his hand, pushing it down on my head, and doing it again.\n\n\"Fuck!\" \n\nI let him use my mouth, let him guide my head up and down the way he needed it to. When he came, his cock was buried in my mouth, so deep I barely tasted his cum as it spurted down my throat.\n\n\"Holy shit,\" he gasped. \"Baby, I'm so\u2014\"\n\n\"Shh.\" I cuddled up next to him, my throat sore, my jaw stiff, but feeling powerful. My voice was hoarse when I spoke. \"You can make it up to me another time.\"\n\n\"I love you,\" he panted. \"I fucking love you.\"\n\nIt became something of a routine. Sometimes Diane would call every couple of days, other times we wouldn't hear from her for a week or more. Whenever she called in the middle of the night, it was the same: Noah would answer, drag himself out of bed, and I would fall back asleep.\n\nAround an hour later, I would wake up as Noah crawled back into bed. His skin was always cold compared to the toasty warmth of our bed, and I would cuddle up to him. It became such a routine that he was usually hard before I was even next to him, and within moments of his chilled hands sliding up my arms, I had him in my mouth.\n\nEvery time, he'd pull me close to him after he was done, holding me with his head buried in my hair until we drifted back to sleep.\n\n\"Why do you let me do that?\" he whispered one night, his voice muffled by my hair.\n\nThe guilt in his voice was almost painful to hear, especially because I didn't think he should feel that way.\n\n\"I want to,\" I said.\n\n\"Shouldn't let me be so selfish.\"\n\n\"If one night I said no, I didn't want to do that, would you be upset?\" I asked.\n\n\"'Course not. I'd never\u2014\"\n\n\"Exactly,\" I said. \"You'd never even ask me to do it. I do it because I want to, Noah. Because I love you.\" \n\nHe didn't respond except to kiss me, hard and deep, his arms wrapped around me tightly as we fell back asleep.\n\nThe duality of Noah was one of the many things I loved about him. Noah was sweet and selfless and introspective; it was hard enough for him to ask me for sex when he felt it was an inconvenience to me, let alone to ask me to do something he felt was solely for his pleasure. Even after all that time together, even knowing I loved him wholly and unconditionally, he hated to take advantage of it for his own needs.\n\nBut when he got there, when I got him there...\n\nThe first time Noah had told me he loved me, he blurted it out by mistake. We had been in bed together, back in Toronto, and my fingers had been wrapped around his cock one cold morning, exploring him lazily as we woke up. He had been teasing me for stealing the blankets, calling me a little thief, when the words slipped out of his mouth.\n\nHe was embarrassed, not because he accidentally said those three words but because of when. He didn't want me to think he was being insincere, that he was just saying it because he wanted me to move my hand faster or for me to let him into my body. I tried to explain that I would never be able to think that about him, that he had shown that he loved me long before the words came out of his mouth, that any moment he said it would have been the right one.\n\nHe told me later that he'd almost blurted it out another time, a few days before he actually did, when I'd been on my knees in the shower with his cock in my throat, guilt rushing through him as he listened to me gag, pleasure overtaking the guilt as he did it again and again. He said the words were on the tip of his tongue when he stopped himself, knowing he'd never forgive himself if he told me he loved me for the first time after using me like that.\n\nI didn't know what it said about me that I loved watching him lose control of that sweet, selfless part of him. I didn't want him to degrade me or use me, and didn't feel like he was doing either of those things. No, it made me feel powerful, knowing I could make him feel that way, knowing I could make him lose that sense of propriety, that I could do that.\n\nEven with the extra stresses that Diane brought into our lives, things were going good. She seemed less harsh towards Noah when she called, though whether that was personal growth or a residual high, I wasn't sure. \n\nIt was a few short days until spring break when freezing rain poured over the city. Even still, I was going to see Sean and Rick and Mom that weekend, my stack of marking seemed manageable if not almost doable, and my relationship with Noah was improving every day. As I shuffled to my car, I was feeling relatively content and looking forward to getting home so I could change into my pyjamas, curl up on the sofa, and watch TV cozy beneath a blanket.\n\nOn the way home I crashed my car, because of course I did.\n\nThere was only a small stretch of my commute that was actually on the highway. With the freezing rain, I was a little nervous to drive, but not about the highway part. It was in town that would be scary, braking at intersections and people tailgating as I navigated the slick streets. \n\nWhen I made it to the highway without incident, I relaxed a little, sighing as I picked up just a bit of speed. \n\nTwo minutes later, a deer was bounding across the road, I was slamming on brakes that weren't catching even the smallest amount of traction, and my knuckles were white on the steering wheel as the car spun out of control.\n\nSuddenly I couldn't breathe, my mouth opening and closing as I tried to take in air. My heart beat madly, a mixture of panic and pain, and tears sprung into my eyes. After a desperate moment where I was torn between confusion and the certainty that I was going to die, I managed to draw a breath shakily.\n\nIt happened so fast I could barely piece together what was going on. What I knew at that moment was that my car was at an angle, the bumper plunged into a mix of snow and ice and sticks. I knew my chest was tight as I got over winding myself. There was a tree in the passenger seat, though I didn't really know how it got there. And the engine had stopped, a strange clicking sound that emanated from under the hood echoing in my ears.\n\nI looked around dumbly, my mind taking its time catching up. I remembered the deer. I remembered hitting the brakes. And then everything jumbled together until the moment I took that first shaky breath.\n\nMy work bag had fallen off the seat beside me. Its contents were sprawled across the floor mat. Shaking, I reached past the tree branch in the passenger seat and picked it up, then took off my seatbelt and tried to open the door.\n\nIt was jammed closed.\n\n\"I'm not going to panic,\" I mumbled out loud. \"I'm not going to cry.\"\n\nI tried the handle again, pushing against the door with my shoulder. Still, it wouldn't open. \n\n\"Please, God,\" I prayed quietly, and pushed a bit harder.\n\nStill nothing.\n\n\"Fucking damnit fuck shit fuck!\" I screamed, twisted in my seat, and kicked the door with both feet.\n\nThe door didn't fly open, per se, but it did jump forward a few inches. I took another shaky breath.\n\n\"Thank you, God,\" I murmured politely, and carefully opened it the rest of the way. \n\nA slushy mixture of snow and rain crept up my boots as I stepped into the ditch. Stumbling, I grabbed the side of the car to steady myself.\n\n\"Lacey!\"\n\nI looked up towards the road. It seemed a lot further than I had thought; how had my car slid so far? A man stood on the road beside a car, its hazards flashing as he started carefully into the snow. \n\n\"Curt?\" I gasped. \"W-W-What are you...?\"\n\n\"I saw you go off the road,\" he said. \"Recognized your car. Stay there, I'll come get you.\" \n\nI didn't listen to his instructions and tried to follow the tire tracks from my car back up towards the road, but after I fell the second time, I decided to wait patiently for Curt to come help me. He managed to make it down the ditch without falling, though he stumbled as he reached me.\n\n\"Shit, are you okay?\"\n\n\"I think so,\" I said. \"I just got... a little winded, I think.\" \n\n\"Seat belt probably saved your life,\" he said. \"You... wow.\" \n\nHe looked at the car, really looked at it, and I turned to follow his eyes.\n\nI don't know how we got back up to the road. I didn't really remember calling Noah once Curt had gotten me into his car. I barely remembered the police coming, or the ambulance, or the tow truck driver. After seeing what my car looked like, my brain had just shut down.\n\nTime passed. I wasn't sure how much, though I did remember hearing the paramedic mention to Curt that my silence was probably due to shock. I was sitting in his car, watching the tow truck driver struggle back up the embankment, when Jordan's work truck drove up. Noah bounded out of the passenger seat before the truck had come to a complete stop.\n\nCurt was the one who noticed them. The police officer was about to give Jordan shit for parking there, but Curt got out of his car to let him know that they were there for me. He also hurriedly told Noah that I was in the car, not the ambulance that had just pulled away. I heard him speak softly but sternly before he let Noah hurry around the side of his car and open the passenger side door.\n\n\"Lacey\u2014\"\n\nI burst into tears.\n\nAside from Noah, everyone else seemed very suddenly startled as my sullenly shocked demeanour cracked and I started crying. Noah pulled me out of the car and brought me tight to his chest.\n\n\"I'm sorry, I'm s-s-sorry,\" I whimpered.\n\n\"Don't, baby,\" he said. \"You're safe, you're okay, that's all that matters.\"\n\n\"I wrecked th-the car, it's f-fucked.\"\n\n\"Doesn't matter, it's just a car.\"\n\n\"W-We can't replace it right now, it's t-t-too\u2014\"\n\n\"Baby, it doesn't matter, it's just a fucking car. I don't care about that. I care that you fucking walked out of it, okay?\" He stroked my hair, ignoring everyone around us, making me focus just on him. \"You hurt? You... your head, there's a cut\u2014\"\n\n\"I'm okay,\" I mumbled, sniffling. \"J-Just feel s-stupid.\"\n\nHe wrapped me in his arms, lips pressing to my hair as the sleet fell around us. He didn't let go until Jordan came up along with Curt, though his hand still rested on my shoulder protectively. \n\n\"Hey, Lacey,\" Jordan said softly. \"You all right?\"\n\nI nodded, my face turning red as I hurried to wipe the tears away. I didn't exactly want Jordan or Curt to be witness to my sobbing, but there we were. \n\n\"Uh, owe you some thanks,\" Noah said to Curt. \"Appreciate you, you know, stopping to help.\"\n\nCurt shook Noah's hand.\n\n\"Lacey's a good friend,\" Curt said carefully. \"I would help any friend the same way. But, uh... I'm really glad you're all right, Lacey.\"\n\nI nodded at him as well, confused about his strange behaviour for a moment before remembering that I'd told him about Noah's suspicions that he had feelings for me. My face turned even redder as Noah realized what Curt was trying to say.\n\nWe were saved from any further uncomfortable nuances by the scraping sound of my car being pulled out of the ditch.\n\n\"Holy shit,\" Jordan whispered. \"How the fuck did you walk out of that?\" \n\nNoah didn't speak, just stared at the twisted pile of metal that had been a vehicle. \n\nThe front end was a mess, the hood crumpled like paper. The bumper was crushed, a dark stain spread across it. The windshield was dotted with red, and my heart nearly shattered as I realized I hadn't avoided the deer. The passenger side was crushed completely, the door buckled in where I'd run into the tree. Shattered glass spilled from the windows on that side of the car, glittering in the snow as the tow cable slowly drew it back to the road. The tree branch was still sitting in the passenger seat, smaller twigs poking through the empty window as if to wave at us. \n\n\"I don't know,\" I finally answered.\n\nNoah's hand tightened on my shoulder, but he still didn't speak.\n\n\"Ma'am?\" One of the officers came forward. \"Do you have anything else to add to your statement?\" \n\nI looked at the paper she held, barely remembering having filled it out, and shook my head.\n\n\"Okay. I'll just need you to sign here. You'll want to call your insurance company right away. They'll need this file number.\" \n\nNoah took the paper for me after I signed it, and the tow truck driver came up after the officer walked away.\n\n\"Gonna guess you just want this taken to the yard, eh?\" \n\nI nodded.\n\n\"Gotta sign here. Got anything else in the car you might need?\"\n\nI signed that paper too, then looked down at my work bag.\n\n\"I think I have everything,\" I said, pawing through it quickly. If one or two worksheets were still in the car, I was sure the students would understand.\n\n\"I'm going to head home,\" Curt said as the driver left. \"You're all right, Lacey?\"\n\n\"Yes. Thanks... thank you. For stopping.\" \n\nHe nodded brusquely and awkwardly patted me on the shoulder before getting back in his car.\n\n\"Want me to drop you off at home?\" Jordan asked. \"Noah'll have to come with me to get his truck, but\u2014\"\n\n\"Yeah, bring her home,\" Noah answered for me. \"If that's okay, man.\"\n\nThe drive home was a blur, mostly silent, save for Jordan's occasional mention of how shocked he was that I had walked out of that vehicle. When he dropped me off at the apartment, Noah got out of the truck and kissed me gently.\n\n\"Just gotta get the truck. Won't take long.\"\n\nI nodded and kissed him back before going up to our apartment.\n\nIt was strangely surreal. As I waited on hold to talk to my insurance company, I dumped my work bag out on the table, picking shards of glass and twigs out of the papers and books that were there. I neatly stacked up the worksheets and tests so I could go through them and check for any that might be missing. \n\nI took the car key off my keychain and put it in the junk drawer. I took my car insurance and registration out of the plastic cover and put the cover in the junk drawer, too. When an agent finally came on the phone, I answered the questions in an unnatural monotone, then hung up as my phone buzzed with an email of all my claim details. \n\nWhen I undressed in the bedroom, glass fell from my clothes. I shook my fingers through my hair and a dead leaf twirled to the floor. Naked, I walked to the bathroom and washed the cut on my head, then looked at the quickly-blossoming bruise that slashed across my chest and stomach.\n\nIt was already turning purple, a sick, rich shade of plum that looked almost black on my skin. It wasn't like a normal bruise, the kind that was dark in the center and lightened toward the edges. Rather, it was a hard line, pale skin on one side and purple on the other. It extended from just above my left breast, through my cleavage, and diagonally across my ribs and stomach. Below my belly button was another one, a single horizontal band from one hip to the other.\n\nEven more surreal was the fact that they didn't seem to hurt. I pressed a finger against the bruise, expecting that dull pulse of pain that should have accompanied it, but it wasn't there. In fact, the only things that hurt were my ribs. The paramedic said that was normal, that it was probably from being winded and that it should go away in a day or two. If it didn't, he said, I needed to see my doctor for an X-ray.\n\nBut the bruises, despite being morbidly dark, weren't painful. They were like a brand, an impression of the material that had saved my life. A sign from God that He had been in that car with me, that He had protected me.\n\nThere was no possible way He hadn't been there. There was no explanation for how I walked out of that car with nothing but a shallow cut and the ghost of a seatbelt on my skin.\n\nI stared at the bruises so long that Noah was home before I had even thought to turn the shower on.\n\n\"Lacey?\" he called as soon as he walked in.\n\n\"In here.\"\n\nI hadn't grabbed a change of clothes, so I pulled one of the towels on the rack to my chest just as Noah came to the bathroom.\n\n\"What...?\"\n\n\"It's gross.\"\n\n\"What's gross?\"\n\n\"The... bruises.\"\n\nHe didn't ask to see them. Instead, he gently brought his hands to my fingers and worked them loose, letting the towel drop away from me. A sharp inhale was the only noise he made as he gazed down at my body.\n\nAs he looked, I studied his face. His eyes were swollen, rimmed with red, and the tension in his forehead creased his skin so deeply that I thought it might be permanent. \n\n\"Does it hurt?\" he asked softly.\n\nI shook my head.\n\n\"Lacey.\"\n\n\"It doesn't,\" I whispered. \"Really.\"\n\n\"How the fuck did you walk out of that car?\" \n\n\"I don't know.\"\n\nNoah undressed and joined me in the shower. He washed my hair for me, then my body, his hands lightly going over the spots that marked a miracle. I whispered to him that I thought God had saved me, that it was the only explanation I could think of.\n\nHe didn't respond then, didn't comment on my theory, but I heard him mumbling a soft prayer of thanks later that night before we crawled into bed.\n\n<center>Chapter Twenty-One</center>\n\n\"Lacey! Noah!\"\n\nI turned toward the sounds of our names just in time to be enveloped in a whirlwind of a hug from Sean.\n\n\"Oh-my-God-I-can't-believe-how-much-I-fucking-missed-you!\" he rambled as he enveloped me.\n\nI laughed and hugged him back.\n\n\"It's good to see you too!\"\n\nNoah grinned as Sean greeted him just as warmly. Mom was next, and she tried valiantly not to cry when she pulled me in.\n\n\"I missed you, sweetie.\" \n\n\"Missed you too, Mom.\" \n\n\"Noah!\" she said, and hugged him tightly. \"I missed you too, of course.\"\n\nHe blushed as he hugged her back, but the smile on his face made his eyes sparkle.\n\n\"Good to see you, Barb.\" \n\n\"Okay, let's get those bags,\" Sean ordered. \"Rick'll have a fit if he has to wait any longer to see you.\"\n\n\"Wait one second,\" I demanded, and grabbed his hand. \"Let me see the ring.\" \n\nHe howled and gleefully showed off the jewelled band Rick had picked for him, and with that began the non-stop wedding talk that took us from the airport all the way to his house.\n\n\"So we were incredibly lucky, and Theo's the one who made it happen. Like, the Fairmont! In Banff! I still can't believe we got it with, like, zero notice. I mean, it helps that we're keeping things small... well, I mean, Rick's family is bigger than ours but it's still not that big, and I just have you guys and Mom. Then a couple of friends. But like, twenty or thirty people total.\"\n\n\"Speaking of,\" I said lightly as we walked through the front door. \"You still need to let us know, um, how much we need to\u2014\"\n\n\"Not a cent,\" Rick hollered from the living room. Seconds later, he was bounding to the entryway. \"It's covered, you don't owe anything.\" ",
        "\"We can't ask you to do that, man,\" Noah protested as Rick brought him in for a hug.\n\n\"Don't have to, it's already done, and it wasn't us, so don't worry about it.\" \n\n\"But\u2014\"\n\nRick cut me off with a giant hug that left me breathless, though that may have been from the lingering tightness in my chest after the accident. \n\n\"Lacey, so good to see you, so happy we aren't going to speak about this again for the rest of your visit because it's covered and I won't hear another word about it.\" \n\nI covered my slight wheeze with a laugh. Noah touched my arm, concerned, but I waved him off.\n\n\"Come on, come in. Sean, take their bags down to the guest room. Yes, the basement guest room. They're grown adults, I won't hear another word of protest out of you.\"\n\n\"Really, Rick,\" Mom chastised, blushing. \n\n\"Come on, let's have dinner. Alexandre!\" Rick called. \"Are we ready?\"\n\n\"Oui, sir!\" came the response from the kitchen.\n\nThere was another whirlwind of activity as Rick and Noah brought our suitcases down to the guest room, Mom rushed to the kitchen to greet her boyfriend, and Rick talked at me energetically as we followed her.\n\n\"Hi Alexandre,\" I said as we entered the kitchen. \n\n\"Pleasure to see you again.\"\n\nAlexandre's voice had the softest hint of a French-Canadian accent and was mixed with warmth and nerves as he stood next to my mom. Her face echoed those nerves as she anxiously took his hand.\n\n\"I'm so glad you two are finally together,\" I said. \"Be good to my mom, though, understand?\" \n\n\"Lacey!\" Mom blushed even further as she hissed my name.\n\nAlexandre, on the other hand, nodded seriously. \"I promise you that, with all my heart.\" \n\n\"Ugh, you two are just too fucking much,\" Rick said. \"Adorable. Let's celebrate with some wine. Lacey, red or white?\"\n\n\"Oh, um, no thank you,\" I said.\n\nHe nearly dropped the wine glass he was taking out of the cupboard.\n\n\"Girl, if this is your way of saying you're expecting\u2014\"\n\n\"What?!\" Mom's eyes nearly bugged out of her head.\n\n\"No!\" I gasped. \"Oh my God, Rick. I just, um...\"\n\n\"It should be okay to have a glass,\" Noah said as he came up behind me.\n\n\"Are you sure?\" I asked without thinking.\n\nMom's jaw clenched as she looked at him.\n\n\"Is there a reason she needs permission to have a glass of wine?\"\n\n\"That's not... It's not me giving her permission,\" Noah said.\n\n\"Well, it certainly sounds like\u2014\"\n\n\"Mom, don't,\" I said softly.\n\n\"Noah, you have to understand how that just sounded, and I think of anyone I have a right to be concerned when I see a red flag.\" \n\n\"What red flag?\" Sean asked as he entered the kitchen.\n\n\"Your sister needing to ask him if she can have a glass of wine.\" \n\n\"What?\" Sean looked at me, then at Noah, who was looking increasingly uncomfortable. \"What's, uh, I mean, why?\" \n\n\"If someone would just ask me instead of making a lot of fucking assumptions,\" I said loudly.\n\nThe kitchen went quiet and Mom looked slightly ashamed. I took a breath, redness creeping up my neck from beneath the hoodie I wore.\n\n\"I totaled my car the other day,\" I said casually. \n\n\"What?!\" screeched Mom.\n\n\"So when I had to go to the doctor about my ribs still hurting, she was concerned I might have a concussion and should monitor myself for a few days. So I was just not sure if drinking a glass of wine would, you know. Mess with that.\"\n\nThe mood in the room was excruciatingly tense. Mom looked horrified and worried. Sean's mouth was set in a straight line. Alexandre was glancing between Noah and me and my mom, looking as though he wanted the floor to open up and swallow him.\n\nRick, on the other hand, couldn't seem to control his mouth.\n\n\"I feel like a pregnancy announcement would have been slightly more well-received, but hey, that was a hell of a way to start the party!\" \n\n\"I'd really like a glass of wine right now,\" I muttered.\n\nNoah burst out laughing, which got Sean laughing, and although Mom didn't quite smile, she did nod.\n\n\"I'm sorry, Noah,\" she said softly. \"I don't give you enough credit.\"\n\nNoah, being the angel he was, shook his head.\n\n\"I understand why,\" he said. \"But I promise, Barb, I'm never gonna hurt her.\"\n\n\"Okay, just so we're clear, Lacey's having red or white?\" Sean asked, taking the wine glass from Rick. \n\n\"Red, please.\" \n\nMom's chin trembled as she approached me.\n\n\"I'm sorry,\" she said. \"Are you... okay? W-What happened?\"\n\nAs Rick and Alexandre brought dinner to the table, I gave a tired explanation of the events of the past few days. I talked about school the next day, having to explain the cut on my forehead so many times that I started parting my hair differently to cover it. And about the insurance claim, which would luckily pay out a little bit of money to cover the new car we'd hurriedly bought just before leaving. I didn't tell them about the way I'd cried as we used a good chunk of the money I had saved up to cover the rest of it, or about the dark bruises that were caked on my skin like blood on snow.\n\nWe said grace quickly before digging into the food Rick claimed he had slaved over all day and Alexandre had actually made. \n\n\"Jesus, guys,\" Sean said. \"You're having a hell of a year.\"\n\n\"It's getting better.\" I passed a bowl of salad to him. \"We're going to be okay.\" \n\n\"If not because things improve, just from sheer force of will,\" said Rick. \"You two know if you need anything, just say the word. I'll get my boss to pay for it.\" \n\nNoah chuckled awkwardly. \"Thanks, man.\"\n\n\"Since we're getting all the hard stuff out in the open now,\" Mom said. \"Noah, are things better... I mean, is... how are you doing with what's happened with your mom?\"\n\nI touched his knee under the table as he swallowed a bite of food.\n\n\"Not great,\" he said honestly. \"She's doing drugs again, dunno if Lacey told you that, but... yeah, she's kind of fallen off the wagon. Still living with someone, so at least she's not on the street. Hasn't been arrested or ended up in the hospital or anything, so... not great, but not the worst.\" \n\nThe table fell quiet.\n\n\"I'm sorry, man,\" Rick finally said. \"That's rough.\"\n\n\"How are you doing, though?\" Mom asked softly. \"Are you okay?\"\n\nNoah paused, the question seeming to startle him. \n\n\"I am,\" he said. \"Can't pretend it's not, you know, frustrating or hard or whatever. Also can't pretend like I don't have some sympathy for... you know, what she's going through. Addiction's hard. It's not like... it doesn't end. You don't just wake up one day cured. There's always something that makes you want to go back, and sometimes that thing is stronger than you are.\" \n\nHe had never spoken so candidly with my family about his past. Mom listened patiently, watching him as he spoke, her attention undivided.\n\n\"Is it too personal for me to ask if you have thoughts like that? I don't mean to sound judgmental, I just... I'd like to understand.\"\n\n\"Not anymore, really,\" he said. \"I used to, a lot. Now it's just fear.\"\n\n\"Fear of what?\" asked Sean.\n\n\"Being in a situation where I'd feel like that again.\" He took a bite and chewed thoughtfully. \"Addiction is... it consumes you. You don't feel in control. It takes a hell of a lot of willpower to get through and it's... it's really fucking hard.\" He stopped suddenly, glancing at my mom. \"Uh... sorry.\" \n\nShe smiled and shook her head. \"It's okay. I am slowly getting more used to cursing.\"\n\nA soft laugh circled the table and Noah cleared his throat. \"Well, uh, yeah. So, don't really, I dunno, crave stuff anymore. Now I'm just afraid of being in a situation where I might.\" \n\nHis face reddened and I felt his leg bounce nervously.\n\n\"You don't have to talk about this if you don't want to,\" I said.\n\n\"Nah, it's fine.\" He cleared his throat again. \"Just, it's hard to explain. Don't feel like I'm doing a good job of it.\" \n\n\"No, you are,\" said Rick. For once, he didn't have a joke to make. \"So what stops you from going back?\"\n\n\"Three things.\" He counted each on a finger as he spoke. \"Knowing how bad it fucked up my life. That kept me clean for a good amount of time. Then luck. Not everyone who tries to turn things around gets as lucky as I did with finding help and shit.\" His hand found mine under the table. \"And then her.\" \n\nI blushed as he squeezed my fingers.\n\n\"Ugh. That's so romantic, I'm gonna puke,\" said Sean.\n\nA nervous chuckle ran around the table.\n\n\"Thank you,\" Mom said quietly. \"For what it's worth, Noah, you're probably the strongest person I know.\" \n\n\"Me too,\" I said.\n\nHe didn't say anything, but he didn't need to.\n\n\"All right,\" said Rick. \"Anyone else? Sean, you got some juicy secrets to share?\"\n\n\"You know all my dirty secrets already.\"\n\n\"Right, the daddy issues, but that's all handled these days. Alexandre, what about you? Any deep-rooted family drama we can unpack over the dinner table?\"\n\nAlexandre laughed and shook his head. \"I am boring, I fear.\" \n\n\"What about you, Rick?\" I shot back. \"What's your big, secret trauma?\" \n\n\"One time I kissed a girl and I hated it. I think I might be gay.\" \n\nSean lost it, nearly falling out of his chair as he laughed. I squeezed Noah's hand again before releasing it, giggling as the tension melted away. I wouldn't have chosen to start our trip with a heavy discussion about addiction and car accidents, but to be honest, once it was all out in the open, things seemed to be a lot easier to handle. \n\nI volunteered to clean up the kitchen after dinner. Sean protested and I waved him off as Mom said she'd help.\n\n\"Go watch hockey or something,\" she said to Alexandre. \"Isn't there a game tonight?\"\n\n\"Want some help?\" Noah asked as he stood.\n\n\"No thanks,\" I said as I took plates to the counter. \"Mom's right, go watch the game or something.\" \n\n\"That's our cue that they want girl-time, you morons,\" said Rick. \"Come on, grab a beer and\u2014Noah, you want something else? We have ginger ale and\u2014actually, I'm curious about the drinking thing, can I ask you more probing personal questions?\"\n\n\"Sure,\" Noah chuckled as he filled his glass with water. \n\n\"Okay, so, like your issue was with drugs, but not alcohol, right? So is it like, you just don't do anything that's... what would you even call it?\"\n\nNoah's explanation started as the four men headed down to the living room, but we couldn't hear what he said.\n\n\"He doesn't drink often,\" I said to Mom as she strained to listen in. \"Once in a while he'll have a beer with the guys after work or something. He can handle it and his problem was never with alcohol, but he just doesn't make it a habit.\"\n\nShe blushed. \"Sorry. I was just curious.\" \n\n\"It's fine. He'll probably have like, a glass of champagne at the wedding, and then go six months without even thinking about it. He just... he makes sure he has a tight rein on things like that.\" \n\nMom put down the stack of dishes she was carrying and turned, pulling me in for a hug.\n\n\"I'm sorry,\" she whispered. \"Sweetie, I am so sorry.\"\n\n\"It's fine, I\u2014\"\n\n\"Maybe you should move here,\" she said.\n\n\"What?\"\n\n\"To Montreal. Or somewhere nearby.\"\n\n\"I don't... where is this coming from?\"\n\nShe sighed as she released me.\n\n\"I just worry about you. I miss you. You're so far away and all the stuff with Noah's mom... I mean, is Prince George the right place to settle?\"\n\nMy cheeks burned and I fiddled with the cross around my neck. \"We're doing okay. I mean, Noah's... we have support there. He's seeing our pastor at church for... well, for help.\"\n\n\"Do you have support?\"\n\nI swallowed hard. \"I don't want to have this conversation right now.\"\n\n\"I'll drop it.\" She held her hands up for a moment before turning back to the counter, filling the sink with water. \"I wish things weren't so hard for you two right now. I'm glad that you have each other to lean on.\"\n\n\"Me too.\" I picked up the tea towel and fidgeted with it as Mom started washing dishes. \n\n\"He loves you,\" Mom said. \"It's so very clear that he loves you. And frankly, a relationship that doesn't go through a rough patch here and there doesn't exist. It's better to find out how you handle those things now than after you get married.\"\n\nI made a soft noise of non-committal acknowledgement and Mom frowned, but didn't push the issue before changing the subject.\n\n<center>Chapter Twenty-Two</center>\n\n\"I absolutely should get a say in the dress!\" Rick said indignantly. \"It's my wedding too, spoilsport.\"\n\n\"She's my maid of honour. If you come, you'll just talk over both of us and put her in some garish sequin monstrosity.\" \n\n\"My taste is impeccable, Sean.\" \n\n\"You get to dress Theo. Put him in the sequin monstrosity.\"\n\n\"He has downright refused to wear a dress and you know that! Come on, pumpkin, let me help with this. Please? She's the only one I get to have a little fun with.\"\n\nSean grumbled, folding his arms across his chest. \n\n\"Okay. Final offer. You can come with us\u2014\"\n\n\"YES!\"\n\n\"\u2014BUT! There's a but, Rick.\"\n\n\"But what?\"\n\n\"You do not get to come into the store until Lacey and I have narrowed down the selection. You can choose from our final picks.\" \n\nRick protested but Sean was firm as he grabbed his coat.\n\n\"Noah, are you coming?\" Sean asked.\n\n\"Uh...\" Noah looked at me helplessly. \"Am I?\"\n\n\"Do you want to?\"\n\n\"Yes, he's coming,\" Rick said. \"We should take him to get a suit.\"\n\n\"Wait, what?\"\n\n\"A suit, Noah.\" Rick's tone somehow managed to be both patient and exasperated. \"I have a vision for the pictures. We'll go see my guy, he's wonderful, and he can do the tailoring on site. Don't worry, it'll be classy.\"\n\n\"I'd worry a bit,\" Sean interjected. \"Rick's definition of classy is\u2014\"\n\n\"Oh, fuck off.\"\n\n\"Maybe you could just tell me what it should look like and I can, you know, pick one up somewhere?\" Noah said tightly.\n\nHe was clearly uncomfortable. I bit my lip, wishing Sean had told me about this beforehand. \n\n\"Nope,\" said Rick. \"And you can stop worrying about the cost because it's already covered.\" \n\n\"I hope you realize we're going to continue worrying about it anyway,\" I said.\n\n\"Lacey, darling, we said we weren't going to\u2014\"\n\n\"No, you said we weren't going to talk about this again.\" I folded my arms across my chest, glaring first at Rick and then at Sean. There was a tense silence as I stood my ground.\n\n\"Would it help if I said we're not paying for the wedding?\" Rick finally said.\n\n\"No,\" I said stubbornly. \"That just raises more questions.\" \n\nSean sighed.\n\n\"You're right, as usual,\" he said. \"I'm sorry. We're sorry. I just don't want you to feel like you'd have to... I don't know, stretch yourself thin just to be part of our wedding.\"\n\n\"You could have talked to me instead of just talking over me.\"\n\n\"Yeah, you're right.\"\n\n\"Look, maybe it won't help, but we're not paying for the wedding because Theo and Aspen are. That's their gift for us,\" Rick said. \"Like, I don't know how well you think Sean and I are doing for ourselves, but a last-minute wedding at the fucking Fairmont Banff Springs is well outside what we'd spend.\"\n\n\"It felt weird when Theo insisted,\" Sean added. \"Like, I get where you're coming from, Lacey.\"\n\n\"He was kind of a dick about it, actually,\" Rick laughed. \"Goes, 'Would you rather me get you an ugly set of dishes that you'll hate and try to return, or would you rather have an epic fucking wedding?'\"\n\n\"I mean, I know you haven't met Theo, but he's... you'll understand when you do,\" Sean said.\n\n\"You gotta understand that Theo and I have been friends since we were literally in diapers.\" Rick shifted uncomfortably. \"He's my brother. Not, you know, literally, but he might as well be. And like, there's no handbook for how to deal with your best friend becoming an actual rock star. So, yeah, I get it, it's weird. But he's stubborn as hell. He wants to pay for everything, I'm gonna let him.\"\n\n\"He's the kind of guy who found out you were coming to visit and told Rick to take the week off, flew him back home, and is refusing to even answer his phone because he doesn't want Rick working this week. We literally have to call his wife to get a hold of him, and if it's even remotely work-related, she hangs up on us.\" \n\n\"So really, you're doing us a favour by just accepting that we're paying for this,\" Rick continued. \"If Theo found out that any bit of the wedding wasn't covered by him, he might fire me.\"\n\n\"One could only hope.\"\n\n\"Ah, fuck off.\" \n\n\"Can you imagine? You'd have to get a real job. What would you even do?\"\n\nThat was how Noah and I ended up in the back of the car, conceding defeat as Sean and Rick bickered in the front.\n\n\"Are you okay?\" I asked Noah softly.\n\nHe nodded.\n\n\"Sorry. I didn't know.\"\n\nHe squeezed my hand. \"It's okay, baby. One less thing for us to worry about.\"\n\nI hadn't thought of it that way and smiled, glad he wasn't considering it a blow to his pride.\n\n\"Kind of worried about the suit, though.\" \n\nDespite the softness of his voice, Rick picked up on that.\n\n\"What? Why would you be worried about the suit? Trust me, when I'm done with you, Lacey won't be able to keep her dress from\u2014\"\n\n\"Rick! Sister!\" \n\nRick cackled as I burst out laughing.\n\nMom had to work and couldn't come, but asked us to send a picture of the dress once we'd picked it. We drove to the bridal shop where Sean had found dresses he thought I'd like. He tossed the keys to Rick, who had agreed that he and Noah would go to the tailor while Sean and I picked out some dresses for him to see. They kissed quickly before Rick settled in the driver's seat, groaning as he moved the seat back to account for his legs. Noah pressed a kiss to my forehead as he moved around to the passenger seat.\n\n\"Have fun,\" he said quietly.\n\n\"You too,\" I replied. \"Promise you're okay?\"\n\nHe kissed me again. \"Promise. If they decide I need a haircut, though, we're not going.\" \n\n\"Don't worry, we wouldn't do that to Lacey,\" Sean said. \"She'd be devastated if we cut your hair off. She, on the other hand, needs a trim like no one's business. Maybe we should do that tomorrow.\" \n\nI blushed and tucked my hair behind my ear self-consciously as Noah got into the car and Sean led me into the store.\n\nIt wasn't until I was standing in the fitting room in my bra and panties holding up one of the sample dresses that I realized Sean was about to see the bruises that were still marring my chest.\n\nI hadn't told him or Mom about the bruises, choosing instead to wear the same baggy hoodie for most of our visit so far. Mom had assumed it was because my ribs still hurt, but the pain was nearly gone. Swallowing hard, I slipped the sample dress on, hoping it would cover most of the purple skin, but to no avail.\n\nPoking my head out of the fitting room, I waved Sean closer.\n\n\"You must come out and show us!\" called the saleslady. \n\n\"Um, I'm n-not quite ready,\" I said. \"Just, Sean, can you come here for a sec?\" \n\nHe came over as I felt redness creeping up my neck towards my cheeks.\n\n\"What's wrong?\"\n\n\"I just forgot to tell you that, um, I still have some bruises from the accident,\" I said quietly. \"Um, and they're kind of... gross looking. So just, don't freak out?\"\n\n\"Let me see.\"\n\nI nervously inched the door open a bit more, showing him the thick purple bruise that poked out of the neckline of the dress and cut across my chest.\n\nSean winced and inhaled sharply. \"Jesus Christ.\"\n\n\"The dress did not work?\" the saleslady asked, sidling up to the room. She caught sight of the bruise and her eyes widened. \"Oh! I am sorry! Are you all right?\" \n\n\"I was just in a car accident last week,\" I explained quickly. \"It's fine, I just didn't want him to, um, panic.\" \n\n\"It does not look so bad,\" she said. \"And it does not hurt, no?\" \n\nI shook my head. \n\n\"And it will be gone in a week or two, so Sean, you do not need to worry about trying to cover it, all right?\" \n\n\"Right,\" Sean said, nodding. He looked pale, but tried to smile.",
        "\"Wonderful. So you come out now, let us look at the dress in front of the mirrors.\" \n\nThe dress itself was okay. It was a bit more extravagant than I wanted, but fit nicely. Sean agreed it looked nice, but it wasn't the dress. The saleslady hovered close by, bringing the next dress to the fitting room before someone across the shop tried to grab her attention.\n\n\"Oh, one moment,\" she said to us frantically. \"If you need help with the zipper, I will be right back.\"\n\nWe watched her scurry to the other side of the shop before I turned to Sean.\n\n\"Do we need to wait for her or can you just\u2014\"\n\n\"Yeah, it's fine.\"\n\nHe followed me to the fitting room, unzipping the back of the dress quickly so I could try the next one on. \n\n\"Lace,\" he said before I pulled the curtain closed. \"You sure you're okay? I mean, with everything?\"\n\n\"It's just a bruise.\"\n\n\"I mean everything. Noah's mom and the... I mean, you guys are doing okay, uh, financially?\"\n\nMy face burned. \"That's not really any\u2014\"\n\n\"I know,\" he said quickly. \"I know. It's just, you know if you're ever in trouble...\"\n\n\"Thanks,\" I muttered.\n\n\"It's not something to be ashamed of,\" he continued. \"I mean, you and Noah are just getting on your feet. It's not easy, even with... I mean, just... we're here for you. If you need it.\"\n\nI nodded. \"We're going to be okay.\"\n\n\"I know.\" He surprised me with a sudden hug. \"I just want you to be happy. I want you to be worried about things like getting married and having babies and decorating a house and, I dunno, getting a dog. Not all this actual heavy shit with his mom and car accidents and like...\"\n\nI smiled sadly. \"I feel like this might be easier to handle than getting married and having babies.\"\n\n\"You... you don't think Noah wants to?\"\n\nI shrugged.\n\n\"Lace, you've talked to him about that kind of stuff, right?\"\n\n\"Do we have to do this right now?\"\n\nSean's eyes were wide.\n\n\"Are you serious? You haven't even talked about it?\"\n\n\"It's not\u2014\"\n\n\"You've wanted kids since you were a kid. You were the kid who wanted to be a teacher when she grew up because you like kids so much. How can you not have talked about this with him?\" \n\n\"Because we don't have even one normal fucking parent between the two of us and I don't know if I even want kids anymore!\"\n\nThe words spilled out of my mouth of their own accord, thoughts that had been lurking deep inside me that I hadn't fully explored yet. Sean stared at me as I started tearing up.\n\n\"Dad was abusive. Mom was terrified. Noah's dad died. Noah's mom is literally addicted to drugs. How the hell could we raise a kid when we don't even know what normal parents are supposed to be like?\"\n\n\"Lacey, I...\"\n\nI couldn't blame him for not knowing what to say. All he could do was hug me as I choked back tears.\n\n\"Can we just go back to trying on dresses?\" I asked. \"I just want to have fun.\"\n\nSean stayed in the fitting room as I fanned my face, trying to make the swelling in my eyes go down. Before long, we were laughing again as he tried to blow air toward me, claiming it would help cool me down. It wasn't until the saleslady came back that he ducked out of the fitting room.\n\n\"Sorry,\" he said. \"Zipper problem.\"\n\nI changed quickly, but Sean immediately vetoed the next dress.\n\n\"Ew, no. It looks like you're wearing a parachute.\" \n\nThe next one wasn't much better, and by the last dress, I was seriously questioning not having brought Rick.\n\n\"What were you even thinking?\" I asked, twirling in the mirror. \"Puffed sleeves? Really?\"\n\n\"I don't know,\" he laughed. \"I was thinking Anne of Green Gables but like, modern?\"\n\n\"If that's one of the finalists, we need to consider calling off the wedding.\"\n\nRick was marching through the shop and Noah tailed behind him, looking distinctly frazzled. \n\n\"Oh thank God,\" Sean and I said in unison.\n\n\"You were right,\" Sean continued. \"I'll say it now, you win, I need your help with this.\" \n\n\"Ugh, that's just... this dress is so bad that it's barely a victory. Jesus, Sean.\" Rick frowned. \"Lacey, what's on your chest, is that a camisole or part of the dress?\"\n\n\"It's a bruise from a seatbelt.\" \n\n\"Oh. Shit, sorry. From here it looked... well. Okay, where's your saleslady?\"\n\n\"Here, monsieur. You must be our other groom?\"\n\nHe shook her hand. \"Rick. Nice to meet you. This dress is awful, we need to find something that is the exact opposite of this in every way.\" \n\nI couldn't stop laughing as Noah came up to me, his eyebrows raised.\n\n\"What do you think?\" I asked. \"Is this the sexiest I've ever looked or what?\"\n\n\"You always look beautiful,\" he said dutifully. \"But, uh... yikes.\" \n\nSean clutched his chest. \"Jeez, guys, I tried, okay?\" \n\n\"Lacey! Come here,\" ordered Rick. \"Focus. You can picture Noah in the amazing suit we got for him later. Let's look at some colours that actually go with your skin tone. Actually wait, go take that frightful excuse for a frock off and then come here. I can't look at it anymore.\" \n\nHis presence was a cyclone of energy and demands. I very quickly understood the frazzled expression on Noah's face as Rick barrelled through the shop, glancing at items and discarding them, holding fabric up to my face and hair before scoffing. \n\n\"This one,\" he finally said. \"And this one. Lacey, do you see any you like?\"\n\nA flutter of green lace caught my eye and I reached onto the rack.\n\n\"I like this colour.\" \n\nRick held it up. \n\n\"You and Noah with your shades of green. Okay, we'll try this one too. It's not bad. Good pick.\" \n\nRick's first choice was a pink number, and it certainly looked nice, but I didn't like how tight it was around my breasts. \n\n\"That can be altered,\" the saleslady said helpfully. \"And when you order, you can change the neckline too, if you prefer it lower cut.\" \n\n\"Uh, no, this is fine,\" I said.\n\n\"Hold onto it as a maybe,\" Rick said. \"Next dress, now.\"\n\nHis second pick was blue and it was gorgeous. Full-length and silky, it clung to my skin like water.\n\n\"Oh, now that's a contender,\" Rick said as I exited the fitting room.\n\nSean hummed softly.\n\n\"What's wrong?\" Rick asked tiredly.\n\n\"It's beautiful, I just don't know about the length. I mean, it looks kind of hard to walk in and\u2014\"\n\nI punctuated his concerns by tripping on the hem of the dress. Noah caught me before I fell.\n\n\"Okay, well, we could shorten it,\" said Rick. \"Though you'd lose that gorgeous kind of fitted-swoop thing. Try the next one, Lacey.\"\n\nWhen I walked out of the fitting room in the green dress that I had picked, all three men went quiet. \n\n\"Well, that's the one,\" Rick said casually. \n\n\"Mm-hmm.\" Sean's chin trembled just slightly and Rick took his hand.\n\n\"What do you think?\" the saleslady asked Noah, her eyes sparkling. \"Boyfriend seal of approval?\" \n\nHis eyes met mine and he simply nodded. \n\nI knew my neck was turning red. I could feel the warmth blossoming from my chest, just where the neckline of the dress started. The look in Noah's eyes had said it all. I didn't even need to glance in the mirror to know that the dress was the dress, but of course, I did anyway.\n\nIt covered the bruise on my chest, not that it mattered, but some skin showed through the lace overlay on my chest and shoulders. Fitted through the top, it pinched in at my waist before flowing down to my knees, and I twirled in front of the mirror, letting the fabric sashay around my legs. \n\n\"Perfect,\" Noah finally said.\n\n\"Careful now, you look any more beautiful in that dress and you'll have to come back and see me for a white one!\" the saleslady teased.\n\nSean laughed a little too loudly to make up for Noah's awkward chuckle.\n\n<center>Chapter Twenty-Three</center>\n\n\"Jesus, what a day,\" Noah said when we finished and crawled into bed. He sighed as he leaned back on the pillow.\n\n\"You never did tell me how your suit fitting went,\" I said.\n\n\"Didn't get enough of that from Rick?\" \n\nI laughed. Rick had blabbered non-stop about the suit he'd picked for Noah, who had basically just shrugged and told him to get whatever he thought would look best.\n\n\"Don't know shit about suits,\" he told Rick's tailor. \"Never worn one.\" \n\nRick described finding out he had complete and total control over Noah's outfit to be akin to hearing angels sing, and had not shut up about it since. Noah had tried to explain that the nuances of the cut and fabric were completely lost on him, but ended up just nodding as Rick explained to him why this particular suit was going to be the best suit he'd ever worn.\n\n\"Didn't seem to matter that I'd never worn a suit before, so it'd be the best one either way,\" he told Sean over dinner.\n\n\"I know how Rick feels about the suit, but I wanted to know how you feel about it,\" I clarified as I cuddled up to Noah's chest.\n\n\"Looks all right, I think. Dunno. Rick said I cleaned up pretty good but you'll have to make the final call on that.\"\n\n\"Mmm. Rick has good taste, so I can't wait to see it. They're tailoring it and everything for you?\"\n\n\"Yeah.\" He laughed. \"It was weird. Guy was measuring and pinning shit everywhere. Thought he was gonna stab me with one of the pins at one point with how close he got to my... well. Nearly jumped off the platform thing he had me standing on. Then fuckin' Rick goes, 'Careful now, if I'm ever gonna be an uncle you can't stick a pin through that' and the guy just about lost his shit.\" \n\nYet another reference to the kids I didn't know if either of us wanted. I tried to smile and kissed his chest lightly.\n\n\"Sounds like you had fun.\"\n\nOne day I would learn not to bother trying to hide my emotions from Noah. He immediately wrapped his arms around me more tightly.\n\n\"What's wrong?\" \n\n\"Don't worry about\u2014\"\n\n\"Talk to me.\"\n\nThere were a thousand ways I could have started that conversation. I could have asked him what he thought about the future. I could have explained why I was asking. \"Today Sean made a comment about us having kids and it upset me.\" \n\nOr, \"We should consider talking about where our relationship is headed and what priorities are for each of us.\" \n\nOr even, \"I know this is probably not a great topic to bring up when we're both tired and sitting in my brother's guest room, so let's agree to discuss this at a later time when we're both prepared for that kind of intense conversation.\"\n\nYes, there were a thousand mature, responsible, adult ways I could have started that conversation. Instead, I said:\n\n\"Do you want to get married?\"\n\nNoah stuttered for a moment.\n\n\"Like, right now or in general?\"\n\n\"In general,\" I said, my face burning. \"I mean, like, just... you know, we should... probably think about that at some point. Maybe. Or at least talk about it.\"\n\nI could feel his heart pounding in his chest and my face burned even more as he silently processed what I said.\n\n\"Regret asking yet?\"\n\nHe chuckled.\n\n\"Just not sure what to say. It, uh... that's a big question.\" \n\nNow that the question was out there, my stomach was curling at his lack of response. I hadn't known what his response would be and I hadn't expected it to be one thing or another, but as it wasn't an immediate, resounding \"yes,\" I was getting nervous.\n\n\"I mean I get it,\" he continued. \"Your brother's getting married, we're surrounded by a bunch of wedding talk, only natural that you'd want to... you know, think about that.\" \n\nHis answer was no. I was certain of it, dreaded it, could almost feel the rejection in my heart. He was stalling, mind racing as he tried to figure out how to let me down. \n\n\"It's fine,\" I said quietly. \"We... forget I said anything.\" \n\n\"You're upset.\" \n\nIt wasn't a question.\n\n\"No.\" \n\nIt wasn't the truth.\n\n\"Please talk to me.\" \n\n\"About what?\"\n\nHe sighed. \"This. All of it. Let's... I dunno, figure it out. Is that what you want? Get married, have a bunch of kids to stay home with, white picket fence and apple pie and all that?\"\n\nHis tone wasn't insincere or mocking, but the phrasing annoyed me.\n\n\"I don't know.\" I tried not to sound miffed, but failed miserably.\n\n\"Baby, don't\u2014\"\n\n\"Just forget it, Noah.\" I tried to pull away from him but he tightened his arms around me.\n\n\"No,\" he said. \"We talk about shit. We don't just forget it. That's what Pastor John said when I went for counselling with him last time, remember? We don't just forget it.\"\n\n\"Fine.\" I closed my eyes, my jaw clenched as I tried to bury my annoyance. \"I just always thought I would get married one day. It was never a question. I don't know why it's so important to me because I know you love me and I love you and you probably just think it's a piece of paper that says we certified that we love each other, but it's... it's not just that to me. It's... more than that. It's not just a symbol, it's a... I don't know. A commitment. A promise.\"\n\n\"And kids?\" he asked softly.\n\n\"I don't know anymore.\" I could feel tears pricking in my eyes again as I admitted it for the second time. \"I always wanted them. But lately... I don't know. But if I did and you didn't, that'd be... you know, we'd have to... or if you do and I'm not sure, it just... the problem is we don't know, neither of us know because we've never talked about it.\" \n\nHe stroked my hair while I tried not to cry, sniffling wetly as I attempted to steady my breathing.\n\n\"Look, I dunno if this is what you want to hear,\" he finally said. \"And I'm sorry for it, but I'm not gonna lie to you.\"\n\nI swallowed, trying to prepare myself for the rejection I was certain was coming.\n\n\"You gotta remember up until when I met you, I thought I was just gonna be... I dunno, just existing for the rest of my life. Never thought I'd fall in love. Had no intention of it because I didn't think there was anyone who'd... you know, put up with me or whatever.\"\n\n\"Noah, I\u2014\"\n\n\"Let me finish. It's still a huge fucking shock to me that I wake up next to you every day. Like, I have a fucking apartment and a job and you. If you'd've told me the day before I met you or even the whole goddamn week after I'd met you, where I'd be in a couple years, I'd have fucking laughed and asked what kinda shit you'd been smoking because this life is so far from what I'd've expected. Doesn't mean I didn't want it, just that I never thought it'd be a possibility.\"\n\nHe paused. My face was still resting on his chest and his heart was still pounding, the pulse strong against my cheek.\n\n\"I never thought about, you know, weddings and kids and shit. Has nothing to do with wanting to or not wanting to, just never even considered it was possible. So if that's what you want, then I'll do it. Without question.\"\n\nHis words hung between us for some time. It wasn't exactly a \"no,\" but he was right that it wasn't what I wanted to hear.\n\n\"I don't want it if it's something you're just doing for me,\" I finally said, unable to hide the sadness in my voice.\n\n\"What do you\u2014\"\n\n\"It's not just about me,\" I said. \"It's us. I don't want to feel like you... like you're obligated to or something. I only want this if it's what you want, too.\"\n\n\"Baby, that's...\" His words trailed off. He didn't know what to say, and neither did I. \n\n\"Let's forget it for now.\" My heart stung and I couldn't handle the discussion any longer.\n\nNoah didn't disagree with me that time. Instead, he reached to the bedside table and turned off the lamp.\n\n\"Remember the first time we were here?\" he asked a few minutes later.\n\n\"Mmm. Couldn't forget it if I tried.\" \n\n\"First night we were here, remember you snuck down from upstairs?\"\n\nI laughed in spite of myself. \"Yeah. I really was going to sleep on the couch, you know.\"\n\n\"'Course you were. You remember what you said to me that night?\"\n\nI tried to think. I had crawled in next to him, and he'd put his arms around me in the same manner we were currently lying in. \n\n\"You asked me if we should talk about us,\" I said.\n\n\"Mm-hmm.\"\n\n\"I said we should.\"\n\n\"Yeah.\"\n\n\"Then we didn't talk about it.\" \n\n\"Yep.\"\n\nI fell silent, unsure of what he was getting at.\n\nHe chuckled when I didn't say anything else. \"One of the biggest moments of my life, and you don't remember what you said next?\"\n\n\"I'm sorry.\"\n\n\"S'okay. Wasn't anything huge, really. You said you didn't want to lose me. And I didn't want to lose you. Scared the absolute fuck out of me because it changed everything.\" \n\n\"You tried to leave me like, a day later.\" \n\n\"Stupidest thing I ever did in my life, and that includes all that shit that got me sent to prison.\" \n\nHis voice was serious and I didn't know what to say.\n\n\"You've been more patient with me than you should have to be,\" he whispered. \"I'm sorry I can't give you the answer you want right now. Will you... can you be patient with me a little longer?\"\n\n\"Of course,\" I said without hesitation. For him, I could be patient forever. \n\nHe kissed the top of my head, his arms tightening around me as some of the tension between us faded.\n\n\"What's your favourite memory of that week?\" I asked.\n\n\"The first week we met?\"\n\n\"Yeah.\"\n\nHe chuckled. \"I mean, you want the obvious answer or...?\"\n\nI laughed. \"No, like... like the one you just told me about.\"\n\n\"Hmm. So blowjob on the train and the entirety of the hotel stay are off the table, then.\" He thought for a moment. \"Tell me yours first.\"\n\n\"When you walked out of the bathroom in the suite on the train.\" \n\n\"What?\"\n\n\"And you didn't have your shirt on.\" \n\nMy head bounced as he laughed.\n\n\"Pretty surprising. I remember thinking your eyes were going to pop out of your head. I felt so bad.\"\n\n\"You were all shiny and clean and your hair was wet and there was still some water on your skin...\" \n\nI trailed off, sighing, as Noah laughed. \n\n\"For real, that's the best memory?\" he said.\n\n\"Well, that and the picnic. If I can't pick the hotel and the... the one night on the train. I feel like that's unfair though, because that was the first time I ever came and should automatically be the winner.\" \n\n\"Shit, you looked so fucking alarmed,\" Noah laughed. \"You were so confused and I just remember thinking like, 'holy shit this girl's never had an orgasm.' Explained a lot but blew my fucking mind.\" \n\nI elbowed him gently as we laughed. So much had changed since then, and yet, I loved him more and more as time went on.\n\n\"So what was yours, then?\" I asked after I stopped giggling.\n\n\"First night on the train,\" he said.\n\n\"The very first? Like, the whole thing where that guy tried to drug me?\"\n\n\"No. Later. When you woke up 'cause the horn went off and I moved to sit with you. Talking with you and just... just getting to know you. Then when you fell asleep, your head was on my shoulder and you moved a little closer. Thought I should wake you up, tell you, you know, be careful 'cause you didn't know who you could trust. But you looked... I couldn't. Told myself you were having trouble sleeping so to just let you sleep. What was the harm, you know?\" He chuckled again. \"Was already in love with you. Didn't even know it yet.\" \n\nAll I could do was kiss him in response. There were no words in the entire world that would have come close to explaining how that made me feel.\n\n\"But my other favourite memory,\" he said when we parted, \"was watching you in the mirror while I fucked you in the hotel bathroom, followed very closely by the scratches you left on my back when I turned you around.\"\n\nI bit my lip, heat rushing through my body.\n\n\"I like that one, too.\" \n\nHis mouth found mine again and the hand that wasn't wrapped around my shoulders moved under the blanket, slipping beneath the fabric of my pyjama top. Moments later, the rough palm of his hand cupped my breast, squeezing and making me gasp.\n\n\"You're so perfect,\" he whispered. \"Sit on my lap, baby. Like you did that night on the train.\" \n\nUnlike the night on the train, I knew what I was doing now. As I straddled his thighs, I pulled my top off, and Noah didn't hesitate before pulling me forward and pushing his face into my breasts.",
        "I gasped again as he sucked my nipple, his tongue flicking it before he nipped the hardened nub. One hand was splayed across the small of my back, holding me to him, as the other guided my breast closer to his mouth.\n\nEach flick of his tongue, each time he sucked my nipple or squeezed just a little bit harder as he worshiped my breasts sent shivers through me, pleasure that pooled between my legs and was eager for his attention. I couldn't bear to tear myself away from his mouth, though, loving the warmth and wetness of his lips as he licked and sucked and nuzzled me.\n\nI loved what it was doing to him, too. Noah's cock was hard, pressing the dripping, aching place between my legs through the layers of our pyjamas. Much like that night on the train, I revelled in the wicked intimacy of it, the way that I could feel him but not feel him, the teasing hint of what I so desperately wanted inside of me.\n\nHe let me roll my hips for a while, grinding myself against his throbbing cock. Then, still lavishing attention on my breasts, he moved his hand from the small of my back to the front of my shorts.\n\nJust like that night on the train, his fingers slid past the waistband and into my panties. Just like that night, he started fingering me gently, increasing the pressure as I moaned softly. My hands moved to his head and I ran my fingers through his hair, pushing my breasts harder into his face.\n\nExcruciatingly, I guided his mouth away from my breasts for a moment. Noah looked up at me and I kissed him hard before reaching down and sliding my hand into his pants.\n\nHe groaned as I wrapped my fingers around his cock and withdrew it, stroking firmly as his fingers continued moving in my panties. I put my other hand on his shoulder and he dipped his head back down to my breasts, finding my nipple again with ease and sucking it lightly.\n\nHis fingers danced against my clit, dipping occasionally into my dripping hole. I tried to match his pace, and before long we were moving in sync. I revelled in the coexistence of our pleasure, the closeness of his body and the harmony of our movements. \n\nNoah groaned into my breasts, his breath hot on my skin. The muffled sound alone was enough to make the rapidly growing ball of energy collecting in my stomach surge, like a sudden glow that dimmed just slightly before flaring up again. I bit my lip, trying not to moan, trying not to cry out as my body readied itself for the inevitable explosion of pleasure. \n\nHe knew, he always knew when I was close. That night, our bodies were tied together, and the closeness of my orgasm meant his was near, too. My hand squeezed his shoulder; his squeezed my breast. I stroked him harder; his fingers moved faster. When his cock swelled beneath my palm, hot and throbbing and on the edge of release, I came, trying to muffle my cry as my head tilted back. He groaned, panting and covering both our stomachs with cum as the energy within me took hold of my senses and exploded.\n\nWhen I came down from the blissful intensity of my orgasm, my hand was sticky and wet, still gripping his cock lightly. \n\n\"Oops,\" I said, and he laughed.\n\n\"Made a bit of a mess. Sorry.\" \n\nI moved off his lap carefully, reaching for the tissue box on the nightstand. I wiped my hands and stomach before doing his, then got up to throw everything away before putting my shirt back on and crawling into bed. \n\nAs we cuddled together again, I smiled sleepily. Maybe we weren't on the same page about marriage, and who knew about kids, but we'd figure it out. \n\nWe loved each other too much not to.\n\n<center>Chapter Twenty-Four</center>\n\nThe memories of the next few days were something I replayed in my head time and time again, cherishing the treasured pockets of happiness as though they were the most valuable thing in the world.\n\nDinners with my family. Hugs from my mom. Watching hockey together, even though our preferred teams weren't playing. Arguing with Sean about him taking me to see his friend Mario, who was a hairdresser, then arguing with him about paying for my own haircut, then arguing with him about having highlights put in. Immediately apologizing to Sean after Mario revealed my new style to me and it looked more amazing than my hair had ever looked in my entire life. Swearing to Mario on the hairdressing scissors that I would stop getting my hair done at GreatClips and using drugstore shampoo after seeing what a difference it made. \n\nThe way that Noah couldn't stop running his hands through my hair that night, playing with it every chance he got. The way he tenderly brushed it off my face as he hovered over me in bed, pausing with his cock buried inside me. \n\nHe chuckled as I teased him about it after.\n\n\"Can't help it. It's so soft, baby.\" He buried his face in it as I laughed.\n\nA particular favourite memory was the day before we left, when Rick insisted Sean and I accompany him and Noah to the tailor.\n\n\"We put a rush on the alterations so he can make sure it fits before the wedding,\" Rick explained. \n\n\"And you need the Lacey stamp of approval?\" Sean asked.\n\n\"No, we just don't want to overwhelm her on the actual day when she's standing in front of a bunch of people and can't immediately rip his clothes off.\"\n\nSean's usual protest of not needing to hear that about his sister went unheard as Rick and I laughed at Noah's reddening face. His cheek was warm as I kissed it.\n\n\"So no different than a usual day, then?\"\n\n\"Jesus Christ, Lacey,\" Sean groaned as Rick howled. \n\nIt turned out Rick's instinct to have me see Noah in a suit prior to being surrounded by a bunch of people was a good one.\n\nI was waiting in the fitting room area with Sean. We were making fun of Rick because Rick, of course, had stuck his head in the dressing room while the tailor helped Noah into his suit. Noah had grumbled at the sudden intrusion, then we heard him laugh with the tailor as Rick stormed past.\n\n\"Absolutely not, Michel, I can't believe you would even suggest that. I'm getting a different one.\" \n\nHe blew past us and marched back with two different ties, pushing into the dressing room without knocking.\n\n\"Oh calm down, Noah, I'm almost a married man. Nothing I haven't seen before. Oh, I do like that tattoo though. Lacey! You never mentioned the one on his ribs! Anyway, this tie's better. It'll go with Lacey's dress.\"\n\n\"Down boy,\" muttered Sean as I keeled over, gasping for breath between giggles. \n\nI was still wiping the corners of my eyes when Noah walked out of the room.\n\nThere was a smile on his face, relaxed and casual. The suit was nice, but it was that smile, that confident little gleam in his eye, that took my breath away. \n\nI mean, the suit itself was great, don't get me wrong. It was a perfect fit, both physically and with Noah's general style. Rick had chosen a dark grey fabric that had the occasional lighter thread woven through it, making it far more dimensional than it seemed. The pants were slim cut, the jacket hugged his shoulders and chest, and the shirt complimented his skin tone perfectly. I hadn't seen the tie Michel originally picked, but the one Rick had brought was the same shade of green as Noah's favourite T-shirt, a colour I suddenly realized I associated with him entirely. A colour that made me so, so happy. \n\nIt was still Noah, my Noah, just... damn.\n\n\"Earth to Lacey?\"\n\nI looked at Rick, who was grinning obnoxiously.\n\n\"There we go. Thought we lost you for a minute there. So, I did good, eh?\" \n\n\"Mm-hmm.\"\n\nNoah chuckled, glancing down at himself before looking up at me.\n\n\"Looks all right, baby?\" \n\nI swallowed as I nodded, not trusting myself to speak.\n\nSean and Rick teased me mercilessly on the way back to their house, only stopping when I innocently asked if they had good noise-cancelling headphones, or maybe they should at least stop by the drugstore on the way home to pick up some earplugs. \n\nWe left Montreal in a flurry of tears and hugs, with strict instructions on how to pack Noah's suit and my dress so they wouldn't wrinkle en route. As we stood in front of the line for security, Mom hugged me for so long I wasn't sure that she would ever let go.\n\nThe worst part was that I didn't want her to.\n\nI swallowed back tears as we made our way through the security lineup, thanking the agents politely as I collected my backpack and the dress bag. Noah touched the small of my back lightly after he was done.\n\n\"You okay?\"\n\nI nodded and asked him to watch my bags while I used the bathroom. As quietly as I could, I cried in the stall, then pressed paper towels wetted with cold water to my eyes, trying to make the swelling go down.\n\nI didn't quite know what to call the emotion I had. I was homesick, but we were going home. I was homesick for a place we didn't live, a place we'd never lived. \n\nChalking it up to missing my family, I took a deep breath and left the bathroom. Noah looked at me with concern as I walked up to him, but I smiled and kissed him, squeezing his hand as we made our way home.\n\n<center>To Be Continued</center>\n\n**\n\nThank you to my amazing advisors, as always. Thank you to bebop3, norafares, and OneAuthor for editing and providing feedback. Special thanks to A, K, Paul M, and Kevin Matheny for their support, and to you for reading!"
    ],
    "authorname": "MsCherylTerra",
    "tags": [
        "canada",
        "drama",
        "erotic romance",
        "erotica",
        "life changes",
        "love story",
        "romance series",
        "romantic drama",
        "travel"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/finding-home-pt-03"
}