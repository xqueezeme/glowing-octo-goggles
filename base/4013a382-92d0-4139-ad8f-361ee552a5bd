{
    "title": "Hell",
    "pages": [
        "Hi!\n\nThis is the first story I've released since my name change. Some of you would have known me as Average Joe, others would be seeing me for the first time. Either way, welcome! \n\nThis is my first dabble into a LitRPG. It has violence, gore, a sprig of romance and some Harem fun! \n\nIf you'd like to see more of this, don't forget to like and comment! \n\nOne final thing. I'd like to thank Francois101 for doing my editing. You're the unsung hero of this story and I wouldn't be hitting the publish button today without you! \n\nThanks so much!\n\nMonty\n\n***\n\nChapter One\n\nI couldn't open my eyes. I was covered in something dry and hard. Not only was I covered, but it was in my nose and mouth. -Cough cough- I spat the dirt and dust from my mouth as I sat up in a hurry. I was covered in it and quickly scrubbed it from my skin as I cleared my airways. \n\n\"Holy shit,\" I grouched, rubbing my eyes.\n\nI was covered in a slight layer of black, rocky dirt. I could already tell I was completely naked, feeling dirt in uncomfortable places. \n\n\"Hello?\" a woman called to my left.\n\nTurning, I could just make out the shape of her. She was sitting partially buried in the dirt, same as me. \n\n\"Hey, can you hear me?\" a man called from even further. \n\n\"Where are we?\" another called.\n\nAnd while a chorus of voices rang out, I stared in horror at my surroundings. The world was in ruins. Great skyscrapers, little more than tattered husks. Burned out shells of cars littered the landscape. The sky was red and filled with dark storm clouds that rolled and flashed with lightning without rain. We seemed to be sitting in a slight indentation. Outside of this, there seemed to be a strong breeze blowing over. The hum of the wind was the only constant sound. No animals, no insects, just the wind and the cries of others like me. Getting to my hands and knees I paid no mind to my nakedness.\n\n\"What the fuck?\" A voice said beside me.\n\nTurning, a young man was busy brushing the dirt away from his face beside me. \n\n\"You okay?\" I asked.\n\nThe young man rubbed the dirt from his eyes, \"Man I don't remember shit. What happened?\" \n\n\"What do you remember?\"\n\nThe man opened his eyes and looked at me, before frowning. \"Shit.\"\n\nI rolled my eyes. \"Yeah, we're all naked, what do you remember?\"\n\nHe frowned and shook his head, \"I dunno man. I think my name is Jason. I think I used to play football or something.\" \n\nI frowned and nodded my head. I couldn't remember much either. Brief flashes of memory playing video games. A woman's face that... Made me nervous for some reason. And...\n\n\"I'm Ryan.\"\n\nJason nodded, \"I'd say nice to meet you. But I somehow get the feeling you're an asshole.\" I just glared at him until he shrugged and got up. \"Whatever dude, I just calls'em as I sees'em.\" \n\nI just shook my head as he staggered towards the edge of the indentation and walked out of view. Turning around, I could see dozens of people staggering to their feet. Men and women, young and old alike. Thankfully there were no children, at least. It was one thing seeing my hairy ball-sack, it was another seeing EVERYONE's hairy ball-sack... Or... Well... Vaginas and stuff...\n\n\"SHIT!\" \n\nTurning back, I caught a glimpse of Jason running back towards me. He had a terrified expression on his face. He'd barely made it into view before a large, bipedal bird-like creature appeared behind him. It let out a loud shriek, before leaping onto his back, slamming him into the pavement with a heavy thud. \n\n\"AHHH! Oh god please-\"\n\nHis voice was cut off as the creature gripped his head in its beak. Inside the mouth of the creature, was a series of sharp protrusions like teeth. It clamped down on the man's head, and I stared in horror as he thrashed about beneath it. The creature opened its wings, showing a pair of barbs on the first joint of each wing and it quickly stabbed him. Almost immediately his body went limp. The bird creature dropped Jason on the ground and cocked its head up into the air, before making a series of loud strangled chirps. Which were answered by a chorus of similar shrieks...\n\n\"Everybody RUN!\" I yelled at the top of my voice.\n\nAll at once, people started staggering out of the... Well, I'm just going to call it a large ditch. Rushing in the opposite direction to the creature eating Jason, I could see the horror around me. There were hundreds of them. They were coming from every direction. More than that, there were thousands of us, as far as the eye could see, fleeing in every direction. As the bird creatures rushed in, people would run away, causing chaos as groups got hemmed in together. \n\n\"Oh my god...\" \n\nA shriek behind me forced me to start moving. I didn't pay attention to where I was going, I just moved. Darting and weaving around scrapped cars and bollards, I was joined by half a dozen other people. I had no idea where they were going, but I was heading for a nearby building. As we ran around a series of burned-out cars, one of the bird-like creatures jumped out, snatched the woman to my right. She shrieked in fear and pain as it bit down, severing her arm. The others with me scrambled away in different directions. And as the creature pinned her down to finish the job, I turned and continued towards the building. \n\nRushing in amongst the collapsed walls, I could tell this was some sort of office block. There were the decrepit remains of old desks and computers strewn about the room. There were several people already inside, hiding amongst the debris. But I paid them no mind as I headed for the stairs. They creaked ominously but held firm as I made my way up to the second level. When I got there, a man rushed out and threw a punch. I ducked as he tumbled past and continued up the next flight to the third level. This whole world was chaos. \n\nOn the third level, it seemed to be clear so I headed for one of the windows. As I approached, I heard a small commotion coming from a side room. With a sigh, I changed direction and moved towards the sound. Inside the room, was a man, holding a woman by the face as he forced her onto the floor. \n\n\"HEY!\"\n\nHis eyes snapped up, a look of shock on his face as I rushed towards him. Dropping my shoulder, I slammed my weight into his, knocking him back into the far wall. Unfortunately for him, it was paper-thin and I listened as his terrified screams cut out when he impacted the ground below. \n\n\"Thank you!\" The woman cried, throwing herself into my arms. \n\n\"Hey now, you okay?\" \n\nShe nodded, \"He said he would look after me. Promised he'd keep me safe, then- then he brought me up here,\" she sobbed in my arms. \n\n\"It's okay,\" I rubbed her shoulders awkwardly. \"He can't hurt you now.\"\n\n\"Thank you so much!\" she cried.\n\nIt took me a few minutes, but I finally managed to pry her off me. She was young, maybe early twenties at the latest. She was a little shorter than me, with dark hair and brown eyes. Her breasts were a nice handful and quite perky. I hated thinking about her like this after what I just walked in on, but... It was hard seeing as we were all naked. \n\n\"Look,\"- I rubbed the back of my head- \"I'm going to try and figure out what's going on. You're welcome to stick around with me if you want.\"\n\nShe stared at me and nodded, \"okay.\"\n\nWith a firm nod, I turned and headed back into the main room with the stairs. There was an old man, leaning on the wall by the stairs, holding a large gash on his arm. \n\n\"Fuck,\" I sighed.\n\n\"Please don't hurt me,\" he held out a bloodstained hand as if to ward me off.\n\nI shook my head, \"keep pressure on that so you don't bleed out.\" \n\nTurning to look out the window, it was bad. Real bad. From three stories up, I could see much further than the ditch where we'd started. In fact, I was pretty sure I could see where Jason was being eaten by one of those bird monsters. The entire landscape was ruined. It held vague similarities to something I could remember, though I drew blanks about what exactly I was looking at. But that was just the landscape; the details I could see were far worse.\n\nThousands of people, running in every direction. Some further into the ruined city. Others into the distance. The whole while, many of them were being chased down, torn to shreds, and eaten by these horrible creatures. As well as these birdlike monsters, were these strange flying worms. They swooped down on the remains of... of people... Without limbs, they either swallowed bones and scraps of flesh whole. Or when they found something too large, they contorted and twisted over themselves, ripping off bite-sized pieces. With their scales, they resembled small, limbless, dragons, about the size of a cat. \n\nAnd that was the most confusing thing about this entire situation. I had memories of things. Memories of experiences. I knew this was a city. I knew what a burned-out car looked like. I knew what a dog was. I even knew my name. But I had no idea who I was before I woke up in the ditch. Did I have a family? Friends? Relatives? Were the people I woke up with family? Was Jason my annoying little brother, and I just watched him die before me? \n\n\"Don't think about it,\" the old man said behind me. I turned to face him as he stared at me with a strange expression. But he continued before I could speak. \"I've seen things. Memories, of horrors I don't understand. But... I can remember that dwelling on it, makes it worse.\"\n\n\"Do you actually remember anything?\"\n\nThe old man shook his head. \"Flashes, here and there. Nothing important other than the sound of explosions and the smell of blood.\" \n\nI glanced around, ignoring the horror outside. \"I'm going to look around, see if I can find something to wrap your arm in.\" \n\nThe old man nodded and gave me a thin smile, \"thanks, lad.\"\n\n\"You're coming back, right?\" The woman stuck her head out of the room.\n\n\"Yeah, I'm going to look upstairs, see if I can find anything useful.\"\n\nShe cocked her head, looking around, \"like what?\"\n\nI just shrugged, \"clothes, something to wrap around...\" I glanced at the older man.\n\n\"Henry,\"\n\n\"Henry's arm. He needs a bandage or something.\"\n\nThe woman nodded, \"Claire.\"\n\nI gave her a quick smile, \"I'm Ryan. Wait here. Maybe help him keep pressure on the cut.\"\n\nShe nodded and swallowed firmly, before moving over to the old man. I gave them a last glance and headed up the stairs. I really needed to know what was going on. Hiding in this building wasn't a long-term option. I didn't see any source of water, food, or any supplies other than scrap timber that could burn. But that wasn't the worst thing. That man, who was attacking Claire, and the one on the second floor who took a swing at me. People were irrational at the best of times. With all this horror going on, some people would be more monstrous than these horrible birds. Our own kind was responsible for killing our own kind, hand over foot, back in... Whatever world we all came from. We were our own worst enemies. Having other enemies would only make these same people worse.\n\nSo I climbed. If I got higher up, I might be able to see something that could help us. Maybe a water source. Or somewhere that looked like a good defensive position. Maybe there were people holing up somewhere safe. But that was unlikely, all things considered. These birds and the flying snake things were probably a good sign that nowhere nearby was safe. At least it looked like it was going to rain soon. That would help us at least get the dirt off. And maybe give us a quick source of water. \n\nI scoured over the fourth floor, looking for anything of value. There were dust, dirt, and piles of rubble everywhere. In fact, it looked almost like the city had been bombed and partially burned before left to ruin. Surely, we weren't all the survivors of some strange attack. That wouldn't even make sense seeing as we had bird monsters running around in the hundreds. I had no memories of those kinds of creatures being alive until I woke up here. \n\nShaking my head, I headed for the stairs and went up another level. Here I stopped. There was a young woman. Younger than I, but not by a lot. She was sitting in a pool of her own blood. In her loose hand, was a small, but sharp looking piece of metal. Both her wrists had been gashed open. I moved over and gently closed her eyes. She was still warm to the touch.\n\n\"How many more will be like this?\" I shook my head.\n\nHeading through the few rooms that were accessible, I found a room more intact than the others. This one still had all its walls completely intact. The only real damage seemed to be from water through the broken window. But the far side of the room was still whole. Other than dust and scraps of what used to be paper and plastic, the room looked pretty normal. Light fittings were still whole. Computers were on desks. A swiveling office chair still rolled when I pushed it aside. And that's when something caught my eye. I shook my head, thinking about the idiocy of even trying. But... If there were a snowball's chance in hell it worked... I reached over to the desk phone, willing it to have a dial tone, and placed it to my ear. \n\n\"Hello, congratulations on being the first contact with Hell!\" A cheery woman said the moment I placed the phone to my ear. \"Now, before we begin, I'd like to apologize for your recent transition. We at Hell, try to disperse our clients in a safe orderly fashion. The inclusion of a large swarm of shriekers was not intended and for any pain or discomfort caused, we'd like to supply you with a basic survival pack. It will be delivered at the end of this call should you choose to continue.\"\n\n\"What?\" I gaped.\n\n\"Oh, where are my manners,\" the woman giggled. \"Mr. Ryan, my name is Edith. You may put the phone down if you wish, it isn't necessary.\" \n\n\"What?\" I asked again.\"\n\nShe giggled softly again, \"Mr. Ryan, I'm not speaking to you through the phone. This world is conceptual, not literal. You wished to communicate; therefore you are communicating. The phone is unnecessary.\" \n\nAs she spoke, I took the phone away and her voice remained at the same volume. \"How is this possible?\"\n\n\"I cannot say, Mr. Ryan. What I can say, is that you are the first to contact Hell. Congratulations, we have added one thousand points into your account.\"\n\n\"Is this some kind of game?\" \n\n\"In a sense, Mr. Ryan,\" she said in that bright cheery tone. \n\n\"Then... I want to get out, how do I do that?\"\n\n\"Oh!\" She exclaimed excitedly. \"Just hit the big green button.\"\n\n\"What big green...\" I stopped as said button appeared in the air before me. There was only one problem. \"Why does it say, 'die?'\"\n\n\"That's how you leave,\" Edith said in that gratingly cheerful tone. \"It's how anyone really leaves.\"\n\n\"But... Do I wake up? How does it work?\"\n\n\"Mr. Ryan,\" she broke her cheerful tone for just a moment. \"Mr Ryan, the only ones who understand what happens after death, are those who are dead. I'm not sure how to answer you any better than that.\"\n\nI stared at the button and remembered her thoughts about things being conceptual. I concentrated on the button going away and it vanished without a trace. \"Alright, can you tell me about this place?\"\n\n\"Certainly!\" She brightened immediately. \"Currently, you are located in Hell. Your purpose is to survive. There are dangers around every corner and nowhere is truly safe. Between the weather, wildlife, and other players, only the strong shall remain.\"\n\n\"So it is a game?\"\n\n\"I never said it wasn't, Mr. Ryan.\" She laughed. \"Now, the aim of the game is to survive. You may find many avenues to success. Though I do recommend you unlock your class.\"\n\n\"Class?\"\n\n\"Class. Acrobat, warrior, sleuth et cetera. Class.\"\n\n\"What's my class?\" I asked quickly.\n\n\"I'm sorry Mr. Ryan. That information is not available at this time. Once you unlock your class, I can give you more information regarding it. But I can't just give you all the answers. There'd be no sport.\"\n\nI sighed, \"Right. So other than being able to talk, what do you actually do?\"\n\n\"I am your representative. I can give you access to the store. I can give advice in the form of reminders. I can even give you a courtesy call at specific times of the day. Most importantly, I can store information and your belongings that you do not wish to access in a hurry.\"\n\n\"Alright, can I get some more info about storage?\"\n\n\"Certainly,\" she practically chirped. \"When you find information that is important, you can flag it along with any physical items you no longer wish to carry. When you contact me next, I can hold onto these items and information until you require them next.\"\n\n\"That... That sounds like it's easy to exploit. What if I got you to carry a bunch of rocks and then got you to summon them on top of a cliff and cause an avalanche.\"\n\n\"Two things, Mr. Ryan. Firstly, the space I have to utilize is limited until you spend points to upgrade. Secondly, it takes three times longer for me to answer your call, than it would for potential danger to arrive at your destination.\"\n\n\"Ummm.\"\n\n\"Mr. Ryan, if a shrieker will take three seconds to chase you down and eviscerate you to eat your liver, it will take me nine to answer your call. This goes up to a maximum of two minutes. It is also linear in nature. So if the shrieker was within one second of you, but you were hiding and it was unaware of your presence, it would still only take three seconds for me to answer. However at that range, I am allowed to warn you, it would most definitely hear your voice.\"\n\nI sighed and leaned against the desk and rubbed my temples. \"Alright, so long story short. This is some sick, survival, horror game filled with monsters and people. You're the shop and journal and we just keep going until we die? Is that about it?\"\n\n\"More or less,\" she giggled. Fuck, that giggle was starting to piss me off. \"There is one small difference I should mention. Only death, by the big green button, or by the direct hand, or weapon of another player, is permanent. Any other form of death, natural causes, or even being pushed through a wall to fall to one's death, will result in a respawn in a nearby position, taking into account the level of danger.\"\n\n\"You mean-\"\n\n\"Yes, Mr. Ryan. The gentleman who was attacking Ms, Claire, the gentleman who attempted to punch you on the stairs, Jason you met in the ditch, and the poor woman outside this room, have since respawned in another location. All of them and the others who were eaten by shriekers have all since respawned, more or less.\"\n\n\"Fuck. Where?\"\n\n\"I cannot give you that information Mr. Ryan, I do apologize.\" \n\nI just sighed and rubbed my temples in frustration. \"Alright, alright. What's in this survival pack you're giving me, and what's in the store?\" \n\nI jumped as a window appeared in front of my view. It blocked out everything but my peripherals. Inside it was my name, a box with my one thousand points. Another box showed me nude with several boxes that seemed to have lines drawn to various parts of my body. \"Is that damage or equipment?\" I asked.\n\n\"Both, Mr. Ryan. This screen is available at any point you contact me. What you are seeing is information about yourself. Your class, skills, damage to your body, the equipment you are wearing, and their various effects.\"\n\n\"It's all blank except my points and name,\" I said without inflection.\n\n\"Correct, Mr. Ryan. Information will begin to fill this screen as you discover it. Until then, I cannot speculate.\"\n\n\"Right,\" I mumbled thinking about turning pages. Sure enough, it changed, showing a mostly blank screen... Big surprise... On one side, was a checkered rectangle, with what looked like a backpack in the first small square. On the other, was a written list of the things Edith and I had discussed. \"Is that the survival pack in there?\"\n\n\"Correct, Mr. Ryan. The survival pack contains, a backpack, bedroll, winter blanket, waterskin, and a healing spray. The backpack will hold up to ten individual items. Some items such as waterskins, potions, and ammunition are stackable in various quantities.\"",
        "I thought about it a moment, \"If I put ten things in a backpack, then put that backpack in another backpack, what happens?\" \n\n\"A backpack is considered a single item, regardless of its contents. This rule applies to any storage device.\" \n\n\"Ryan?\" Claire's voice called.\n\n\"Claire! I'm in here!\"\n\n\"Oh, thank god. You've been gone a while, I was worried. Henry isn't bleeding anymore, but he's not looking good either. Also, a few more people have shown up. \n\nNodding, I tried to face where her voice was coming from, but I couldn't see her a damn through the window. It would be dangerous to do this around one of those bird monsters. \"Claire, pick up the phone on the desk and try to make a call.\" \n\n\"What? You can't be serious, does it work?\"\n\n\"Sorta,\" I said.\n\nI heard her shuffle over, \"Can you move?\" \n\nShuffling away, I smiled in her direction, \"Sorry.\" I listened to her fumble with the phone, only to gasp a second later. \n\n\"Oh my god.\"\n\n\"Claire, are they talking to you?\"\n\n\"Yeah...\"\n\n\"Good, do you mind moving to the other side of the room so we can hear our representative easier? I'd move, but I can't see at the moment.\"\n\n\"What? Why can't you see? And don't I need the... Oh... Alright.\"\n\n\"Thanks, Claire.\"\n\nShe didn't respond, but I could hear her softly talking on the other side of the room. \n\n\"Edith?'\n\n\"At your service,\" she said cheerily.\n\nI sighed, \"Alright, what else was there?\" \n\n\"Just the store, I believe.\"\n\nNodding, \"Right, let me see that... Wow...\" The next menu popped up over the first. It was essentially a long list broken up into categories. I clicked the one for weapons and got a long list. Swords, spears, bows, maces, and things I was less familiar with. It didn't seem to have any modern weapons like guns or combat knives. Flicking through, it had a list for armor, food, various skill equipment, and items to fill many different needs. \"Alright, Edith. Can I get a travelers outfit, a dagger, flint, and steel, wood for one day, and a chunk of meat?\"\n\n\"Certainly, Mr. Ryan, that is a total of 431 points.\"\n\n\"That's fine.\"\n\n\"Excellent! Those items I have placed directly in the backpack. At this time, anything else you may purchase will go into the standard screen now before you. If you just will them to appear, they will be located at your feet.\" \n\nI nodded, \"Right. Okay. I'd like to say thank you, but.\"\n\n\"Oh, that's quite alright, Mr. Ryan. I'm perfectly fine if you hate me and everything I represent.\"\n\nI groaned softly, \"Hate is a strong word. You have been rather helpful, all things considered.\"\n\n\"If that is all, Mr. Ryan,\" she giggled. \"I'll leave you to your fate as soon as you wish me away.\"\n\nWith a thought, the backpack in the menu disappeared. I hoped that meant it was now summoned. With a second thought, the menu vanished and the backpack thumped to the floor at my feet. \n\n\"Well, that works at least.\" Bending, I reached for the bag. But the moment I touched the strap, it vanished and appeared instantly on my back. \"For crying out loud,\" I sighed. I decided to try something. Thinking about the bag, a screen filled my vision like before. Only, this time, it showed the contents of the bag in a checkered rectangle. On the other, was the naked me from the first screen. Only this time, it had no additional information boxes for my class and such. Looking over the contents of the backpack, I concentrated on the traveler's outfit. In an instant, I was fully dressed. Turning my attention to the dagger, I felt a small weight added to what was probably a belt. \n\nClosing the menu, I looked myself over. I was wearing a cotton shirt and pants, a pair of sturdy leather boots, and a thin cloak with a hood. Surprisingly enough, it fit me perfectly and I swung my arms experimentally to prove the fact to myself. It wasn't the nicest fabric, but it seemed sturdy. I was also pleasantly surprised to see the dagger was on my right hip. Pulling it with my right hand, I admired the blade cautiously. Rubbing the edge, I could feel it was quite sharp. Maybe not sharp enough to shave, but sharp enough that I'd cut someone if I wanted to. As I stared at the blade, a small window popped up with a line that went right to it. It simply said.\n\nC - DAGGGER\n\nI thought about it a moment. Then thought about ringing Edith again.\n\n\"Hello, Mr. Ryan.\"\n\n\"Edith, what is the C in front of the word dagger?\"\n\n\"C is the class of weapon. C is common, followed by uncommon, rare, very rare, and legendary.\n\n\"What's the difference? And why didn't you tell me this earlier?\"\n\n\"Mr. Ryan, I can't tell you things you haven't discovered on your own. As for the classes. Right now you hold a dagger. It is made of metal, is sharp, has mass et cetera. In comparison, a legendary dagger would be made of lighter materials, be far sharper and impact far harder. Almost all equipment has different attributes that will increase and decrease with rarity. Even the meat you bought has different rarities.\"\n\n\"Wait, how could something weigh less, but impact harder?\" \n\n\"Don't assume the physics of the world you recognize apply here, Mr. Ryan.\"\n\n\"Can I buy better items from the store?\"\n\n\"Unfortunately not, Mr. Ryan. Only common items can be found in the store. Better items can be found in random loot drops throughout the world, on corpses, or made via crafting with the appropriate materials.\" \n\n\"Wait, crafting? Can I craft?\"\n\n\"Everyone has the basic capabilities to do anything, Mr. Ryan. But it is impossible to advance your skills if it is not part of your class.\" \n\n\"Right... Oh, one last thing. Do I have to open that menu every time I want something from my bag?\" \n\n\"No, Mr. Ryan. If you already know the exact item you want, you can simply summon it. If you have space for the item to be on your person, it will appear in place. Otherwise, it will fall to your feet like the backpack did before you touched it for the first time.\"\n\n\"Right,\" I sighed. \"Thanks Edith.\"\n\n\"Take care, Mr. Ryan.\"\n\nTaking another look at the dagger, I slipped it back into the sheath and looked over at Claire. I thought she was miming things for a moment, but I quickly realized it looked like she was scrolling through a menu. Probably the journal or something. I thought about Edith's words for a moment and decided I wanted to try something. With a last glance at Claire, I left the room and went over to the dead woman on the floor. \n\n\"Now, what happens if I try to collect you?\"\n\nReaching out, I gently touched her shoulder and thought about collecting her. In an instant, a window popped up.\n\nBONES (HUMAN)\n\nINFERIOR MEAT\n\nTEETH (HUMAN)\n\nPOINTS: 5000\n\nI cringed thinking about the options. In particular, I cringed at the sight of the word meat. Concentrating on the points, they vanished from the list. But when I willed away the menu, the woman's body vanished as well.\n\n\"What the fuck?!\" A voice snapped.\n\nTurning, I looked at the young man staring at me from the stairs. \"Yeah, I didn't know it was going to do that.\" \n\n\"You... You didn't kill her, did you?\"\n\nI shook my head, \"No, I found her like this. She'd cut her own wrists. I just... Looted her?\"\n\n\"What, like a video game or something?\"\n\n\"Pretty much.\"\n\nThe young guy looked doubtful, \"Right. Anyway, is Claire up here? Some angry dude is downstairs throwing a fit. She was the one who told us to sit tight and this dude's getting all up in our faces.\" \n\n\"Yeah, I'll get her. You head on down.\" The young man nodded and headed back downstairs. I turned and stuck my head back into the room, to see Claire's backpack appear strapped to her back. \"You get all the info?\"\n\nClaire nodded slowly as she looked at me. \"Yeah... I... \"\n\n\"There's a guy downstairs making a scene. Did you get a weapon?\" \n\nShe nodded, \"what if it's him?\"\n\nI shrugged, \"I'm not opposed to killing a rapist. I've done it once already, technically.\"\n\nChapter Two\n\nClaire seemed to be handling things as well as she could. I hadn't asked her for specifics, but she'd bought the same clothes as me and wore a dagger at her hip. Even if she hadn't purchased the other things as I had, she'd at least bought the essentials. We headed down two floors to join everyone on the third floor. As we came down the final flight of stairs, we could hear a commotion.\n\n\"Fuck you! I died, do you understand me?! I died!\" \n\nI paused and glanced behind me at Claire, who was looking nervous. \n\n\"It sounds like him.\" \n\n\"How do you wanna do this?\" \n\nShe shrugged, \"Maybe if we tell everyone what he did, they'll make him leave?\"\n\nI smiled thinly. \"Maybe. I'll stick by you no matter what though, alright?\"\n\n\"Alright,\" she said softly.\n\nWe staggered down the last of the stairs into a small group of people. They seemed to be pressed against the walls, while a familiar looking irate man held a young woman against a wall. \n\n\"Hey!\" I snapped. \n\nThe man looked around, spotted me and his eyes went wide! \"You!\"\n\nBefore I could respond, Claire rushed past me. His shocked expression quickly went to pain as a flash of silver turned to a red spray. \n\n\"You. Fucking. Bastard. Tried. To. Rape. Me!\" She punctuated each word with a stab as the man slumped to the ground. \n\nI quickly moved to grab her. Taking her arm in my hand, she struggled for a moment, before allowing me to pull her away. The woman he'd been assaulting, quickly moved over to join us.\n\n\"Thank you,\" she whispered softly. \n\nI glanced around the room at everyone watching us. There were about a dozen people. Young and old, male and female. Maybe a few extra women than men. I glanced down at the man Claire had stabbed and saw his glassy eyed expression.\n\n\"Claire, touch his leg and think about collecting him.\" \n\nShe nodded and bent down. She paused as the menu must have filled her vision. But a moment later his corpse vanished and everyone in the room gasped. \n\n\"What just happened?\" A man demanded.\n\n\"He was a rapist. Now he's dead. If you have an issue with dead rapists, you may as well leave,\" I said firmly. \"Where's Henry?\"\n\n\"Here,\" he called softly from behind me.\n\nTurning around, I saw him. True, he didn't seem to be bleeding any more. An older woman about his age was holding his hand. But he didn't look good. Pale, clammy and sickly. Moving towards him, the few people in my way quickly moved. I tested out Edith's words and pictured the healing spray. Instantly, it appeared in my right hand. I tried not to think about how my hand instantly moved to hold something without my knowledge. Checking over the spray, it simply had a green line down one side and some notches. Twisting the top, a spray nozzle poked out. With nothing else obvious, I gave the spray a quick shake and leaned down to examine Henry's arm. \n\n\"This is a healing spray. I'm using you as a test subject.\" \n\n\"Why him?\" The woman asked.\n\nI looked at her, \"He's injured. Either this will help, or it won't.\" \n\n\"It's okay, Lillian. It can't get any worse,\" Henry smiled up at her. \n\nI realised they were probably the two oldest people in this room, by far. It was kinda cute seeing as they'd immediately decided to stick together like this. So, I gave the spray another shake and lifted his arm to get a better angle. I gave a couple experimental sprays down the wound, giving it a light coat. It seemed to work pretty much like a can of spray paint or deodorant. The liquid that coated his cut was the same bright green as the bar from the side. Turning the can over, I checked it and saw that the level had decreased, maybe a third of the way down to the first line. \n\n\"That's not possible,\" Lillian said.\n\nTurning my attention back to Henry's cut, it seemed to be filling in from underneath. In all of ten seconds, I watched as the cut closed over and Henry's colour returned to his face. \n\n\"Well, that worked,\" I grinned. \"How are you feeling old man?\"\n\nHenry shook his head and turned his arm over as the green faded into his skin. \"It... It's healed. Doesn't even hurt.\" \n\nI thought about it. If I got about three sprays per line. There were five lines. So about fifteen cuts. But I didn't know how it would work on say, an amputated limb, or a massive stab wound or something. \n\n\"Where did you get that, and the clothes?\" a man grouched from behind me. \n\nI turned and saw the closest faces staring at me in shock. Claire and the woman she'd rescued were still in the middle of the room and paying attention. \n\n\"Alright everyone. On the fifth floor is a telephone in an office. If this doesn't work, go upstairs and make a call. Now, imagine wanting to talk to someone inside your head.\" \n\nThere were a few confused looks, and even more sudden exclamations of shock. I looked around the room at everyone's faces. \n\n\"What, you think we're crazy?\" a woman snapped. \n\nI looked at her, but before I could speak, several others tried to shush her.\n\n\"EVERYONE!\" I called, bringing all eyes to me. \"If it worked, go find somewhere to sit and talk quietly. If it didn't work, there's a phone on the fifth floor, that's how I made it work for the first time. If you're going to ignore me, I don't give a shit, but I'm not going to coddle you. This isn't Earth. The rules have changed, which you'll discover the easy way, or the hard way. Now, I'm heading up to the highest floor to work out what I'm doing next. You're welcome to join me if you want.\" I turned my attention back to Henry and Lillian, who both had shocked expressions on their faces. \"I'm guessing it worked?\" I asked and they nodded. \"Alright, I'm heading up. Are you coming with, and do you need a hand?\" \n\n\"We'll follow,\" Lillian said softly.\n\nI nodded and stood. People were already moving. Some downstairs, some up, others just moved into the other rooms that were still open and whole. I moved to the queue on the stairs and smiled as Claire and the new woman stood beside me. \n\n\"This is Polly,\" Claire said.\n\n\"Nice to meet you,\" I flashed her a smile.\n\n\"Thank you for saving me,\" she said nervously.\n\nI shook my head. \"I didn't do anything, that was Claire.\" \n\nPolly shook her head, \"You distracted him, Claire used his distraction. She already told me you were a team.\"\n\nI glanced at Claire who blushed and looked away. \"Fair enough then. Come on.\"\n\nGetting to the stairs, we started climbing. The ones getting off on the fourth floor seemed to be heading for quieter places to talk. A few more were heading for the fifth floor and I pointed into the room with the phone. But I led our small group higher still. \n\n\"Should we check the floors as we go up? Maybe there's other people in here, or loot?\" Claire said as we made it to the sixth floor.\n\nI paused before going up the next flight, \"That's actually a good point. Polly,\" I paused as I spotted Henry and Lillian come up behind her. \"Good, you're here. Okay, Claire and I will quickly search each floor as we go up. You stay here and chat with your representative to get you up to speed.\" \n\nEveryone nodded in agreement and Claire and I set off through opposite doorways. A quick sweep of the floor only turned up some footprints where dust had been lifted. Someone had definitely been up here, but they weren't any longer. The search of the floor turned up nothing else interesting and Claire and I returned to the stairs with everyone else.\n\n\"Find anything?\" Henry asked.\n\n\"Nah, just footprints. There might be others up here.\" \n\nThe others nodded and followed me up to the seventh floor. There weren't any footprints on this floor, but we checked it anyway. Not that it turned out anything other than broken furniture and more debris. As I checked the last room, however, I ran into a...\n\n\"Hsss,\" the small, winged worm thing turned to face me.\n\n\"Fuck off, you little buzzard,\" I growled. \n\nThere weren't any other doors, but I could see there was a weirdly, intact looking box against the far wall. The only thing between it and me, was the monster. It was about the length of my arm and had a pair of beady little eyes. Its scales were a brownish grey colour and its wings were tinged yellow. It lifted itself up like a cobra and flared its wings to make itself look bigger. \n\n\"Shoo! Go away!\" I snapped, waving my arms.\n\nIt must have taken that as a threat display and it suddenly sprung up into the air. Before I could pull my dagger, it flew at my face. Throwing up my hands, I narrowly caught it around the middle where its wings connected to the rest of its body. It snapped its jaws shut in front of my face, giving me a clear look at its sharp teeth. It struggled for a moment, trying to flap even with my hands in the way. It twisted back on itself to bite me, so I dropped it to the floor with a thump. Before it could jump up again, I pressed my boot over its neck. Here, it struggled and twisted, but couldn't free itself. \n\n\"Ryan, you okay?\" Claire called, coming into the room behind me.\n\n\"Yup,\" I grunted, bending over the creature. \n\n\"Ew, I saw those things flying around outside. I think it's a scavenger or something. I hoped they wouldn't attack people.\"\n\nI wriggled my foot down its body until its neck was exposed. It twisted around and tried to bite my foot, but thankfully couldn't get through the thick leather. That gave me the perfect opportunity to grab it behind the head. It released my boot with a hiss. But with its head under control, I took the weight off its body and picked it up. The thing, hissed angrily and glared at me as I stood, lifting it to get a better look. \n\n\"I think I provoked it,\" I said, pulling its tail out to check it over. \n\n\"What do you mean?\" \n\n\"Over there, by the wall is a box I wanted to check. This thing was in the way. It saw me and made a threat pose. I sorta did the same thing, so it charged.\" \n\n\"Oh...\" Claire moved in to take a closer look at it. \"Hopefully that means they'll leave us alone. It would be bad to have these trying to kill us as well as those shriekers.\"\n\nThe small creature was still making hissing noises, but wasn't struggling any more. I pulled its head round to examine its mouth. All things considered, it didn't seem very snake like. But as I looked into its eyes, the small creature went limp. It was almost as if...\n\n\"Claire, do me a favour and back up a bit. Just be ready to grab this thing if it goes nuts.\" \n\nShe stepped back, \"What, you're gonna let it go?\"\n\nI nodded and slowly loosened my grip. The small creature wriggled slightly, before pulling its tail up and flopping it over my arm. It gently pulled its head from my hand and looked up at me. As we stared at one another, I got the sense it was no longer a threat. Then I remembered Edith's warning about impending attack. So I grinned as the moment I contacted her, she answered.\n\n\"Congratulations Mr. Ryan. As the first to discover your class, you have been gifted two-thousand points.\"\n\n\"Right, is this thing going to attack me?\" \n\n\"No, Mr. Ryan. The buzzard is now entirely under your control. I should warn you however, if it gets hungry, it may refuse orders and snap at you or others around you.\" \n\n\"Wait, it's actually called a Buzzard? What does it eat?\"\n\n\"It is indeed, yes. And just about everything Mr. Ryan.\"\n\n\"Is there like, dog bones or something in the store I can purchase? Will that be enough?\"\n\nEdith giggled softly. \"Mr, Ryan. Do you mean, bones from a dog, or bones suitable for a dog to eat?\" \n\n\"The second one.\"\n\n\"We have soup bones, which would serve that purpose, for two points each.\"\n\n\"Do they stack?\"\n\n\"Up to ten.\"\n\n\"I'll get ten.\"\n\n\"Very good, Mr. Ryan. That leaves you with a total of seven thousand, five hundred and thirty-nine points.\"\n\n\"Now, what's my class and what does it do?\" \n\nThe class window popped up in front of me. I could see the boxes on my limbs now had information written in them. It seemed the shirt and pants gave me a +1 resistance boost. The cloak gave my torso and additional +1, with a single point to my head if I wore the hood. The boots however gave me a nice +3 resistance. On the other side of the screen, under class.",
        "\"Beast Tamer?\"\n\n\"Yes, Mr. Ryan. Congratulations, that is a rare class indeed. You should be very proud.\"\n\nI nodded, still confused. \"Can you give me any more details?\"\n\n\"Certainly!\" she chirped. \"Beast Tamers, tame wild animals to do their bidding. Once tamed, these animals can be used in many ways. However their intelligence is key to how complicated a task that can be performed.\"\n\n\"And how do I tame beasts?\"\n\n\"Simply, you must catch them and hold them for a time. In the case of the Buzzard, holding it firmly in your hand was enough.\"\n\n\"What about a shrieker?\" I asked, thinking about the possibility.\n\n\"I can't give you that information, Mr. Ryan.\" \n\n\"Shit,\" I swore. \"Alright, can you explain resistances then for my clothing?\"\n\n\"Certainly, Mr. Ryan.\" She always sounded so goddamn happy. \"Resistance is useful in many ways. A single point of resistance is enough to protect from harsh sunlight and mild weather. At three points of resistance, like your boots, armour will absorb minor cuts and abrasions. The higher the resistance, the more damage they will absorb.\"\n\n\"Do things break?\"\n\n\"Yes, Mr. Ryan. Though there are no formal durability requirements. Simply, if it gets cut or broken, that is it. Fabric can be cut, metal can be crushed.\"\n\nI nodded along before remembering about Henry's cut. \"How much is this healing spray?\"\n\n\"Five-thousand points.\"\n\nI hissed at the price, thinking we should use it sparingly. \"Edith, what happens to my belongings if I die?\" \n\n\"You lose them, Mr. Ryan.\" \n\nI sighed, \"Right. Thanks.\"\n\n\"Any time, Mr. Ryan.\" \n\nI nodded to myself, before summoning a bone from my backpack. Like the spray, it appeared in my hand and I offered it to the buzzard. It made a small chirp and quickly took the bone, before tipping its head back. Making jerking motions like I'd seen crocodiles do, it swallowed it hole, before making a quick flap of its wings. \n\n\"Sooo?\" Claire said from behind me.\n\n\"Apparently I'm a beast tamer.\" \n\nShe stepped closer and took a look at the buzzard on my arm. \"I'm assuming that means he won't bite?\"\n\nI looked at the creature and a small window like from the dagger popped up.\n\nBUZZARD - FEMALE\n\nIDLE\n\nI reached out and patted its head softly and watched the word IDLE flash to GETTING HEADPATS. \"Yeah, she won't bite.\"\n\n\"She?\"\n\nI nodded, as Claire reached over and gave the Buzzard a pat herself. \"Yeah, when you concentrate on things, they pop up another window that gives a bit of info. I found out by staring at my dagger.\" \n\n\"Huh,\" Claire, squinted at the buzzard. \"It is a she. Sorry little lady.\"\n\nThe buzzard preened under her touch. \"She seems to like you,\" I grinned.\n\nClaire shot me a smile, \"Should we name her?\" I shrugged. \"Well, daddy doesn't care. So I'm gonna call you... Lace!\"\n\nLace preened again and I nodded, \"Whatever works.\"\n\n\"Don't be a buzzkill,\" Claire grinned at me.\n\nI just sighed. \"Come on, you hold her, I'll check the box.\"\n\nClaire nodded as I lifted Lace off my arm and handed it to her. Stepping around, I heard a mournful chirp, before a sudden impact to my shoulders told me Lace didn't want to be separated. When I turned around, again, Claire was pouting, but Lace was getting comfortable on my shoulders. \n\n\"Sorry,\" I said.\n\nClaire nodded, \"It's cool. Not like I was getting attached.\" \n\nI nodded and bent down to check the box. \"Just means, you might have to stick around me then, huh?\" \n\nLooking over the box, it was like an industrial briefcase of some sort. It looked just about like any you'd see in video games where you'd be in this exact situation. I bent over and tried to pick the box itself up, but it wouldn't budge. So with a sigh, I flicked the latch on the front. The moment the lip cracked open, my view was filled with a screen, like looking in my backpack. \n\nThe figure of me was the same as the one with Edith. In the storage squares, was a belt pouch and a dozen caltrops in a single stack. I immediately thought to take it all and they vanished. I felt the weight of the belt pouch settle on my side. The figure of me showed the caltrops were stored in the pouch. I gave it a quick check and I could see I had one empty space in my backpack, and another two empty spaces in the belt pouch. That gave me a total of thirteen items I could carry. Closing the menu, the box vanished like the bodies did and I stood up. Only to bump into something. Turning around, it was Claire, who'd come up behind me.\n\n\"Sorry, you okay?\"\n\nShe nodded, before leaning forward and pressed her lips into my own. I stood like a stunned mullet as she pulled away and shot me a quick smile. \"I wouldn't mind sticking around you, at least for a while.\"\n\n\"Right,\" I said softly.\n\n\"Come on, we have a building to search.\" \n\nI nodded and followed after her. We made it back to the stairs and watched everyone freeze at the sight of Lace.\n\n\"Apparently my class is Beast Tamer,\" I told them all. \"Her name is Lace, she's perfectly safe. I'm not really sure what she'll be useful for yet, but we'll get there.\" \n\nI gave everyone a moment to process what I just said, before heading up the stairs. On the seventh floor, we found that it wouldn't be possible to go any higher. As we piled out of the stairwell, I took a moment to draw out my waterskin and take a few sips as I stared into the darkening sky. The rolling clouds flashed and thunder rolled in the distance. \n\n\"It'd be beautiful if it weren't so damn terrifying,\" Claire said. \n\nI nodded in agreement, \"This is the last floor. Let's go over it all and then find somewhere to hunker down for the night.\" \n\nClaire nodded and headed off to search. I went in the opposite direction. I also kept an eye on the sky. I didn't know if there'd be any more Buzzards. But I didn't want to risk getting into a fight with a whole swarm of them. \n\n\"You can warn me if any others like you show up, right?\" \n\nLace made a small chirp noise and I grinned, thinking she'd understood. I swept through the rooms that were still accessible. It was mostly empty though. Being open to the sky meant even a lot of the dust had either been blown or washed away. And as I stepped into the last room I could access, I stopped. This room had no far wall and hung over the edge of the building's structure. But perched on the edge, was a trembling young woman.\n\n\"Please don't hurt me,\" she squeaked.\n\n\"Woah, now,\" I said, pulling up short. \"Come away from the edge, I don't want you to fall.\" \n\nShe shook her head violently. \"If... If I fall, it'll all stop.\"\n\n\"No!\" I spat, hating myself as she jumped. \"No, please. You don't understand. Dying doesn't make you stay dead.\"\n\nShe frowned, \"You're as crazy as this place.\"\n\nI shook my head, \"Think about calling someone, like on a phone, but in your head.\"\n\nShe frowned at me, but a moment later she jumped in surprise. Unfortunately, that small jump was just enough, that she lost her balance. Her terrified expression locked on mine, as I rushed towards her. Her flailing arms were the only thing I could see as I threw myself on the floor and slid. Throwing out my hand, somehow I managed to catch hers as she went over. \n\n\"Oh my god!\" she screamed. \"Please, I'm sorry, don't let me go!\"\n\nI grunted as she slipped. \"I'm trying, try and get a hold of my shirt with your other hand.\"\n\nShe swung slowly below me. If not for the wall below, I could have swung her into the lower level, but as it was, I was barely holding her weight as it was. She squealed as she looked down, before swinging her arm up and grasping at the sleeve of my shirt. \n\n\"Please don't drop me!\" \n\n\"Claire!\" I screamed. \"CLAIRE! HELP!\"\n\nI waited a whole minute gritting my teeth in pain, before I heard Claire come in behind me.\n\n\"Ryan?\"\n\n\"She's slipping! Help me!\" \n\nClaire rushed over, seeing the woman, she squeaked. In a flash, she was holding a rope and I grunted at the thought. Rope was a good tool, and I forgot to get myself some. What I wasn't expecting was for Claire to lay beside me and tie a loop around my arm.\n\n\"Claire, what?-\"\n\n\"Shut up!\" she snapped.\n\nI closed my mouth as she finished her knot. I watched in confusion as she gave it a wiggle and it slipped down my arm, over my hand and down onto the woman's arm. She gave the rope a quick tug and my eyebrows shot up as the loop pulled tightly around her arm. \n\n\"Alright, I'm going to tie one end around my waist and brace against the doorframe. Then you can let go and get the others so we can pull her up together.\"\n\n\"Please don't drop me!\" The young woman cried.\n\n\"You're going to be fine,\" Claire called, heading back out the door. I grunted at the effort, before the rope pulled tight. \"Alright, let go.\"\n\nThe woman's eyes went wide as she stared at me in terror. \"Please, please don't let go. I know better now. Please, please.\"\n\nI just shook my head, \"The rope has you. You won't fall. I need to get help, so we can pull you back up. You'll be safe, I promise.\" She looked up at me and nodded. \"I'm letting go now.\"\n\nWithout giving her a moment to panic, I let go. She squeaked in fright as she dropped a few centimeters while the rope took her weight. But I didn't give it a second thought as I scrambled to my feet and rushed out of the room. I gave Claire a nod as I stepped over her.\n\n\"Take your time, I got her,\" she smiled. \n\nI grinned, but rushed anyway. Getting to the stairs, I smiled, seeing everyone now dressed and wearing backpacks like my own. \n\n\"Emergency, come with me, now!\" Everyone turned and followed. I led them back to Claire with the rope. I brought them into the room where the woman hung. \"Alright Henry, you go over and help get Claire upright. Polly, Lillian, you pull. I'm going to help get her over the edge.\n\n\"There's someone hanging off the edge?\" Lilliana asked with shock.\n\nI nodded, \"Yeah, so let's get this done quick!\" Everyone got into position as I stuck my head over the edge to check on her. She looked terrified, biting at her fingernails of her free hand, but smiled when she saw me. \"We're gonna pull you up, when you get near the edge, you're going to have to climb if you don't want to lose skin.\" \n\nShe nodded, \"Thank you.\"\n\nI glanced back, \"Alright, PULL!\" Lillian and Polly pulled as Henry helped Claire go from a brace position to a pulling position. I glanced down to check the woman and she nervously smiled. \"PULL!\" The rope shifted and she lifted up to the edge. I reached down and took her wrist. I gave her a quick pull myself and got her hand on the ledge. \"Careful now, give another pull.\" Everyone moved again and the woman was able to start pulling herself up. With her arm coming over the top, the others kept up the momentum as I moved to support the woman. Bit by bit, she slowly came over the edge and she flopped onto the ground with a squeal of joy. \n\nI quickly bent over and grabbed her hand, before slipping the rope off her wrist. As I stood, I pulled her up with me and everyone crowded around with a hearty cheer. As I turned, Claire threw herself into my arms, pressing herself in for a deep kiss, that I responded to eagerly. I didn't see Polly's crestfallen glance at Claire, nor did I see the frown from the young woman we just saved. All my attention was on the beautiful woman in my arms as her tongue probed into my mouth. And as if to celebrate this momentous occasion, the heavens opened with a crackle of thunder. \n\n\"Quick, get downstairs!\" I shouted.\n\nAs one, we all rushed for the stairs, only to find it blocked by a small group of people dressed similarly to us. \n\n\"Hey, we wanna join up with you guys,\" the man in the front called.\n\n\"Fine, get down one level!\" I yelled.\n\nIt took a few moments for everyone to turn around. But soon I was leading our ragtag team down into the sixth level. Once we were out of the rain, the group that followed us parted and let me through. I looked out the various holes in the walls and judged the direction of the rain. With a nod, I waved for everyone to follow me and headed for the opposite side of the building. Here, we moved into a large spacious floor that was mostly covered from the elements. But the parts that were still open, didn't have any rain actually coming inside, so I turned to the group.\n\n\"What the fuck is that?\" A middle aged man called, while gesturing to Lace.\n\n\"This is a buzzard. Her name is Lace.\"\n\n\"I saw those eating people, what's it doing with you?\" A woman shouted from the back.\n\nI nodded, \"Apparently my class is beast tamer. I caught her and in the process of working out what to do, I somehow made her mine.\" Lace chirped in agreement.\n\n\"She's safe?\"\n\nI shrugged, \"I wouldn't try provoking her. But Claire likes giving her head-pats, so she can't be that bad.\" To prove my point, Claire stepped up and patted Lace on the head, eliciting a series of crooning chirps. \"Now, I can see everyone has their survival pack. I'm not going to sit here and pretend I have all the answers. So either discuss them amongst yourselves, or ask your representative. If you hear me speaking with Edith, that's my representative.\"\n\n\"Mine's Edith too.\"\n\n\"And mine.\"\n\n\"Really? Mine's Edith.\"\n\nI stopped and looked at the confused faces of everyone around me. \"Edith?\"\n\n\"Yes, Mr. Ryan?\" She practically purred with happiness.\n\n\"Edith, are you everyone's representative?\"\n\n\"Yes, Mr. Ryan.\" \n\nDismissing her with a thought, I looked over everyone. \"Alright, I just asked. She's everyone's representative. I don't know what that means, but let's not think about it too much. We've bigger problems.\" I looked around the room and made a quick headcount. Other than Henry, Lillian, Polly, Claire and myself, there were almost a dozen others. Some I recognised from the lower levels. A couple, I didn't. \"I'm thinking, we settle down for the night and discuss what we're doing in the morning, all in, raise your hand.\" I watched as just about everyone raised their hand. But the one or two people who didn't, saw they were outvoted and raised as well. \"Right, I'm gonna go drop my stuff in that corner,\" I pointed to the corner on the far side of the room. It was closer to the window, but further from the stairs. I figured it was a happy medium for safety. Either way, nobody complained. \n\nHeading over, I reached for my backpack, and slid it off my shoulders. I wasn't sure it was actually going to do that, considering it seemed to spawn straight on my back. But now, with it in my hands, I could see it was made of sturdy leather, unlike that cheap plastic crap school kids used. \n\n\"Hey, mind if we join you?\" \n\nI turned and spotted my original group with the one we rescued, who was still naked and talking to Edith. \"Sure, pick a spot-\"\n\n\"How about you put your bedroll here,\" Claire pointed to a spot a little away from the wall.\n\nI shrugged, \"That works.\"\n\nAs I went to open the bag, I found it quite firmly closed with no obvious way to open it. But I shrugged and thought to summon the bedroll and it appeared in my offhand. Turning, I rolled it out where Claire had pointed. What I didn't expect was for her to immediately roll hers out between mine and the wall. Polly also rolled hers out beside mine, but not quite as close. Henry and Lillian did the same, rolling theirs out a little off to one side to give us room. The only thing we were missing was a warm fire, to dry off in front of after I went for a walk in the rain. \n\n\"Shit,\" I grumbled. \"Edith?\"\n\n\"Yes, Mr. Ryan?\"\n\n\"Can I get two more backpacks and some soap, please?\"\n\n\"Certainly, that's four-hundred and fifty points.\"\n\n\"Oh, what about dental, anything for that?\" \n\n\"Chewing sticks are another fifty points for a pack of fifty.\"\n\n\"That too, thanks.\"\n\n\"Certainly, Mr. Ryan. You have seven-thousand and thirty-nine points remaining. \" \n\nI blinked and the items I requested appeared in front of me. I quickly separated my items. Anything to do with bedding and evenings went in the first bag. So that was the chew sticks, soap, bedroll and blanket. In the other bag, I'd keep food and firewood, so it only contained the flint and steel, the day's firewood and the chunk of meat I'd purchased. That only left the waterskin and healing spray, which I left in the main compartment of the bag. But... I realised I had no way to refill the waterskin.\n\n\"Edith, can I get a bucket and a jug please?\"\n\n\"Certainly, that's one hundred and five points. You have six-thousand, nine-hundred and thirty-four points remaining.\" \n\n\"Thanks,\" I sighed. \n\nThe items appeared and I nodded. The jug would fit inside the bucket and the bucket was a decent size. All I needed now, was to light the fire and go for a walk in the rain. So I pulled out the firewood and the flint and steel. I examined it for a moment and didn't get any further information. It didn't even have a class of rarity. I shrugged and struck the flint with the steel over the wood. It let out a shower of sparks and the wood lit up like a proper fire in a single moment.\n\n\"Shit,\" I jumped back as the flames nearly scolded my hands.\n\n\"There's just something not quite right about that,\" Henry said, staring at the flames in shock. \n\nI nodded in agreement. \"Alright, I don't know about you. But I've got dirt in uncomfortable places. I'm gonna take a shower. The store sells soap and stuff if you want to buy some. I summoned my evening pack, which immediately appeared on my back and I headed for the exit with the bucket and jug. \n\nChapter Three\n\nI thought about heading upstairs, but I reasoned, if there was something flying around tonight, it would be safer with a bit of cover. So I kept to the floor, but headed for the opposite side of the building where the rain was pouring in. When I found a suitable room, I sent my clothing back into the bag, along with my dagger, before summoning the soap. Slipping the bag to the floor, I strode out to the edge where the rain poured in. As I set the bucket and jug to fill with rainwater, the initial shock of the cold water made my squirm, but I forced myself to stand it and eventually the water began to feel comfortable, rather than jarring. Lace on the other hand, immediately opened her wings and flew off into the gale. I worried for a moment, but dismissed the idea, somehow knowing she'd come back when she was ready. \n\nGrabbing the soap, I scrubbed myself down. It had sand or something in it, so the soap itself scrubbed at my skin. It also lathered nicely, so I pulled some through my hair. I scrubbed at all the small clumps of dirt stuck to me and turned about in the rain. Mid turn, I felt a pair of hands run up my back, making me freeze. Before I could decide if someone was about to shove me off the edge, they started scrubbing my back with their own soap. \n\n\"You do mine after, okay?\" Claire said.\n\nI nodded and washed the rest of the soap from my hair so I could open my eyes. \"Thanks,\" I said, blinking away the water.\n\nLooking over my shoulder, I could see Polly standing beside me, while the new girl removed her clothing with a thought and moved to join us. \n\n\"This just got really awkward,\" I muttered to myself.\n\nClaire must have heard me as she giggled softly. A flash of lightning struck a nearby building making us jump. A moment later we all laughed, feeling the tension in the room begin to ease. With smiles on everyone's faces, the soap was passed round as I washed off the rest of mine. With me wet, but clean, I made myself useful and started scrubbing Claire's back. She made small noises of appreciation when the scrub turned into a rub and I worked the soap into her tense shoulders. \n\n\"That's really good,\" she purred. \n\nI grinned and kept it up until the soap was mostly washed away. \n\n\"Ryan?\" Polly asked, moving closer.\n\nI glanced at Claire and only saw her smile, so I nodded and she beamed as she turned around. \n\n\"You can do Maiya next,\" Claire whispered in my ear as she stepped back out of the rain. .",
        "I glanced up at the other woman I hadn't actually met yet. Her eyes were on me as I worked. She smiled shyly and glanced away. It was silently thankful Claire had told me her name, seeing as I was about to put my hands on her in such an intimate fashion. I would have felt like a moron if I'd had to ask her after all this. Unfortunately, this expanse of naked women was having a rather, straightforward reaction on me. As Polly flashed me a smile and stepped away, Maiya darted in. Only, she slipped on the soap on the floor as she spun and fell directly into me. \n\n\"Is that...?\" \n\n\"Uh huh,\" I said quickly.\n\nI fully expected her to quickly move, but instead she wiggled herself so it rubbed gently between her ass cheeks. \n\n\"Hey!\" Claire snapped, followed by a sharp slap. Maiya squeaked and jumped away as Claire moved in front of me. \"Polly, can you scrub that trollop's back for her?\" \n\n\"Umm,\" I started, as Claire rounded on me.\n\n\"I know that wasn't your fault. And I get, with all that's going on, that there's probably going to be more than one woman in your bed. But I saw you first, so I call first dibs.\"\n\n\"Ummm!\"\n\nShe leaned forward, pressing her body to mine and kissed me. Her hand snuck down between us and took my cock, before guiding it between her legs, where she closed her thighs over it. I moaned at the slight wet pressure, but she wasn't trying to stimulate me, more just claim ownership as we explored each other's mouths with our tongues. As she pulled away, I stared dumbly at her, making her giggle softly. I was still staring as she stepped away and the cold air on my front roused me from my trance. Snapping to attention, I checked the sky for Lace, but couldn't see her as the darkness swallowed the sky. Moving out of the rain, I joined Claire as we stared at the collection of bags.\n\n\"Do you know which one's yours?\" she asked.\n\nI shook my head and reached out to grab the closest one. What surprised me, was the moment I touched what I thought was supple leather, it turned to hardened concrete. It still looked like leather, but it was completely solid and refused to budge.\n\n\"That's weird,\" I said, frowning. \"I can't move it.\"\n\n\"Let me try,\" Claire said, touching the bag. In an instant she was wearing it. \"Yeah, this is mine, I think.\"\n\nI grinned, \"try a different one.\"\n\nClaire nodded and moved to the next bag. Reaching for the strap, she stopped and frowned. \"I can't move it.\"\n\n\"Edith, is this to prevent theft?\"\n\n\"Indeed it is, Mr. Ryan. Bags owned by people are impervious to others without the owner dying first.\"\n\n\"Dying permanently, or by natural causes and being respawned?\"\n\n\"Both, Mr. Ryan.\"\n\nI nodded and turned back to Claire. \"It's a security thing. We can't touch each other's bags. But we can loot them if they die. Respawning cancels ownership.\" \n\n\"What about Lace, Edith? Will she be... removed?\"\n\n\"That is one of the few exceptions to the rule, Mr. Ryan. As Lace is a living creature, its personality, stats and requirements will not change. She will seek you out until her death, regardless of your living status.\" \n\n\"Dark,\" I mumbled. \"Edith, four towels please.\"\n\n\"Certainly, you have six-thousand, eight-hundred and ninety-four points remaining.\"\n\nWith a grin, all four towels appeared at my feet. I picked one up and handed it to Claire who smiled at me. \"Thanks, I didn't think of this.\"\n\n\"Same,\" I smiled.\n\nPicking up the other two, I touched each bag to find mine and dropped the towels on the other two. Using the towel to dry off I put it into my bag, before summoning my clothes. Now I was dressed, I waited for Polly and Maiya to finish their shower and head over to get dry. They both thanked me for their towels and I darted over to collect the, now full, bucket and jug.\n\n\"Alright ladies, I'll bring this back to the room. Let's all have a drink of water and we can refill them with this.\"\n\n\"I never thought of that,\" Polly said sheepishly. \"It didn't even occur to me that we could run out.\"\n\nI smiled at her as she picked up her bag and dressed herself. With Maiya a step behind, we turned and headed back, noting the few people who were coming down the hall with soap and towels. As we stepped back into the room, there were a few fires around, with several people sitting around talking. They paused as we passed, but I paid them no mind. Heading to our spot at the back, Henry and Lillian were chatting quietly while holding hands. \n\n\"We're back,\" I grinned, setting down the bucket and jug, before pulling off my bag.\n\n\"Feel better?\" Lillian asked.\n\n\"Much better, thank you,\" Maiya smiled. \n\n\"Umm, did everyone get food?\" I asked.\n\nHenry frowned, Lillian shook her head and Polly sighed. \"Alright, how big is this chunk of meat?\"\n\n\"It's actually quite large. Probably enough to feed all of us,\" Claire said.\n\nI nodded, before coming up short with an issue. \"How do we cook it?\"\n\nThe group of us stared at one another for a few moments before Claire spoke up, \"there's nothing in the store. Not to cook a whole chunk like that. If we cut it up there's something called a cooking stone, but it's not cheap. Only you or I could afford it.\" \n\nI nodded, \"what we need is a spit or something.\" I thought about it a moment, \"would a spear work, do you think?\"\n\n\"Ask Edith,\" Claire shrugged.\n\n\"Edith?\"\n\n\"Yes, Mr. Ryan, a spear would work.\"\n\n\"Do you listen to everything we say?\"\n\n\"Would you like an honest answer Mr. Ryan?\"\n\nI just sighed, \"Can I get a spear please?\"\n\n\"Short spear, standard spear or long spear?\"\n\nI frowned and glanced at the others, before realising they couldn't hear her. \"What's the difference.\"\n\n\"Price and length. A short spear is roughly half your height. A standard is about as tall as you and a long spear is a little over double.\" \n\nI thought about it a moment. A short spear would be like a long sword, but I'd still have to be close to something if I wanted to stab it. A long spear I would never get up and down the stairs with it. \"Just a standard spear, please?\"\n\n\"Certainly, Mr. Ryan. You have six-thousand, six-hundred and ninety-four points remaining.\" \n\nI dismissed her with a thought just as the spear appeared before me. It stood on the blunt end, pointing at the ceiling. As it wobbled, I reached out and took it in hand, before I felt a jolt go up my arm. Lifting the spear, I frowned at the familiar feeling I got simply by holding it. The wooden shaft was as tall as I was, but it had a silver tip of some metal. The tip itself was narrow but shaped like a leaf and quite sharp from the look of it. Bending to touch my bag I'd left behind, I placed the bag I was wearing inside it. Summoning the meal bag straight to my back, I summoned the chunk of meat straight to my off hand. I grunted at the weight of the basketball sized hunk of meat, but tossed it in the air. Quick as a flash, I stabbed the spear, straight into it, catching the meat on the tip.\n\n\"Show off,\" Claire giggled.\n\nI frowned, \"no, I think there's more to it. Edith, want to chime in?\"\n\n\"Congratulations Mr. Ryan. Your class weapon skill is indeed pole weapons.\" \n\nI frowned and nodded to myself. \"Turns out, my class uses pole weapons. This... feels kinda freaky. It's almost like, scratching an itch, before it itches and I just... know... how to hold it.\"\n\n\"I feel the same with my dagger,\" Maiya said softly. \"I'll double check with Edith.\"\n\nI nodded as she began mumbling to Edith. I shifted my attention back to Henry and Lillian. \"Alright you two. If you want to head off and get clean, I'll get this cooking and see you when you get back.\" \n\nThe older couple flashed me a smile, before summoning their soap and getting up. \n\n\"Don't forget towels,\" Claire called as they walked away.\n\nI just examined the fire and wondered how this was going to work. Grabbing my bag, I dropped it on one side of the fire. \"Can someone put their bag opposite mine?\"\n\nClaire was closest and she placed her bag in the position I asked. I flashed her a smile and lowered my spear. Giving the chunk of meat a shove, I pushed it further down the shaft of the spear. Lifting it, I placed each end of the spear on our bags. With that set up, the meat was over the flames and starting to cook. \n\n\"Where's Lace?\" Claire asked, looking around. \n\nAnd as if on cue, the little she buzzard flew in the open window. More than one person cried out in shock, but quickly settled when they realised she was mine. Lace for that matter, ignored everyone and perched herself on the spear, but to one side of the fire. She crooned softly as she opened her wings and absorbed its heat. \n\n\"No natural aversion to fire,\" I wondered out loud.\n\n\"Can't be that surprising after the day we've had,\" Polly said with a laugh.\n\nI shrugged. She wasn't wrong, but I still thought it was a little strange regardless. With a groan, I sat on the end of my bedroll and got comfortable. \n\n\"How can you afford all this stuff, Ryan?\" Maiya asked. \"I'm just about out, just buying stuff for the shower.\"\n\n\"I got a bunch from a corpse I found on one of the floors,\" I replied.\n\n\"What, we're worth points?\" \n\nI nodded, \"I got five grand.\"\n\n\"So did I, from the guy who was attacking you, Polly.\" Claire said. \"Seems like a lot.\"\n\nI nodded before frowning. She was completely right, that WAS a lot. Considering the horror when we all woke up, I didn't think it should be this easy to score points. \n\n\"Edith, what's a human worth?\" \n\n\"A human is worth whatever points they have remaining.\"\n\nI frowned, and repeated her answer out loud, making everyone else frown in concern or confusion. \"How does that make sense? I got five-thousand from that dead woman.\" \n\n\"Indeed, you received the amount she was worth with her survival pack.\"\n\n\"Oh shit,\" I gasped. \"Edith, please tell me you can get her a message to come back here. If she's out there-\"\n\n\"She's not,\" Edith said softly, finally losing her cheerful disposition. \"She's no longer here.\"\n\nI grit my teeth, \"Was there anything I could have done?\"\n\n\"No, Mr. Ryan. It was completely out of your control, even without you collecting her points. Besides, when you die, they become forfeit and you respawn as you did this morning. You'd need to collect your own corpse in order to get back your belongings.\"  \n\n\"Any chance I can ask you to tell my companions that information.\"\n\n\"I can give them a notification to receive the information if they wish. And I can only do that as they are your companions. I can't deliver messages to people who aren't part of your core group.\" \n\nI nodded, \"Thank you Edith.\" \n\nI stared into the fire as each of the women with me suddenly stiffened. A moment later I could see them nodding along as Edith passed on what she had just told me. I reached out, taking the shaft of the spear and rotated it, to start cooking the meat evenly on all sides. Lace gave a cute growl at me as she had to shift her balance to prevent falling off. \n\n\"It wasn't your fault,\" Claire said, patting my shoulder. \n\nI shrugged, \"Doesn't make me feel less shitty.\"\n\n\"No, I suppose it doesn't,\" she nodded.\n\nReaching for my meal bag, I summoned a bone for Lace. Remembering I only had eight left, I waved it to catch her attention, before tossing it to her. She caught it and ate it like she did before, in a single gulp. The ladies chatted amongst themselves, while I sat and thought about what tomorrow would bring. Hell, at this stage, for all we knew, we wouldn't make it through the night. Some horrible monster could climb in through the window and kill us all. Or a swarm of shriekers could work their way up the stairs. Which... Was actually a good point. How would we stop them coming in?\n\n\"Fuck,\" I grumbled to myself and stood up. \"EVERYONE!\" I called, catching the attention of everyone in the room. That included Henry and Lillian who were heading back in. \"On the off chance, shriekers, or something like them, comes up the stairs in the middle of the night, I'm setting caltrops on the stairs at this level. Watch yourselves if you go to head down in the morning so you don't stand on them!\"\n\nI made my way out of the room and to the stairs. Thinking about it, I quickly made my way down to the fifth level and made sure there was nobody here. Satisfied, I headed back up to the sixth and pulled out the caltrops. They resembled two bent nails attached in the middle of the bend. It meant that no matter how they fell, it would sit on three prongs, with the fourth pointing straight up. When I examined it closely, a window popped up, showing they were like the flint and steel. No rarity and nothing special. So with a shrug of my shoulders, I dropped all twelve onto the stairs. Satisfied there was little more I could do, I headed back to my bedroll. \n\nInside, I could see everyone clumped around a few fires. They seemed to have made small units and were roasting meat in a similar way to me. A few smiled as I passed, but a few more glared at me. I sighed to myself and kept walking back to my original group. These people chose to come follow me, I didn't give a shit if they stuck around, but I didn't owe them anything. It suited me fine if they got up and left. As I came up to my group, Claire was busy cutting slices of meat off the chunk with her dagger and handing it round. \n\n\"That can't be cooked already, surely?\"\n\nClaire giggled and shook her head. \"Checked with Edith. Cooking times don't make sense. We put it over the fire, gave it a few minutes, it's done.\" \n\nI sighed, \"thanks Edith.\"\n\n\"You're welcome, Mr. Ryan,\" she replied with a smile in her voice.\n\nPulling my dagger, I moved in beside her and cut myself a piece, only to see her pout. \"What?\"\n\n\"I was gonna cut you a piece,\" she said with a small frown.\n\nI shook my head and grinned, \"I'm a big boy.\"\n\n\"Here's hoping,\" Polly called from my other side. \n\nMaiya laughed softly while Henry and Lillian blushed and refused to look at me. We spent the next couple hours eating and talking about what we could remember about ourselves. Honestly... It wasn't much... All we could really nail down was that we were all probably single, no kids that we could remember and while we had recollection of friends and family, they weren't very recent. Almost as if we were society's outcasts, or at the very least, separate from most of humanity by some method.\n\n\"Hey, come look at this!\" someone called.\n\nI broke my attention away from the fire to see one of the guys from another group pointing off into the rain. Getting up, I headed over to take a look. It was pretty obvious when I saw what he was pointing at. Across the... street... not that it looked much like a street with all the carnage. But, across the street, we could see another building like ours. On a few floors, were fires like we had. We could see shapes moving around that from this distance, through the rain I could only assume were people. \n\n\"Are they like us?\" The guy asked.\n\nI shrugged, \"Probably. With all the monsters running around, I don't like the chances of it being anything else.\" \n\n\"Should we try to contact them?\"\n\n\"We'll talk about it in the morning. Nobody knows what's going on right now. So lets get some rest and see what everyone thinks.\"\n\n\"How are you so calm about this?\" he asked, turning to face me. \"When those things came after us, I saw people die, screaming in pain. How are you able to stand there and be so calm?\" \n\n\"Honestly, I've no idea,\" I said softly. \"When I woke up, there was a guy names Jason. He sat up, asked a few questions, called me an asshole and walked off. He was the first person I saw die. After that, I just started moving. Finding shelter, working out how to survive, making friends. It sorta just of... distracted me from the horror of the situation.\"\n\n\"Dude, those ladies are hardly friends. We all saw them follow you out to shower.\"\n\n\"All the more reason to keep a level head,\" I sighed. \"Take it easy tonight. Get some rest. If you have any questions, remember you can ask Edith. If something bothers you, come find me.\" \n\nHe nodded, \"James, by the way.\"\n\n\"Ryan,\" I responded with a short smile. \"I'll see you in the morning.\" \n\nHeading back over to my group, I watched James return to his. It seemed a few of his posse weren't happy with whatever he said, but he brushed them off as others offered him support. Situations like this always had groups that didn't like working together. James seemed alright, but some of the others could be trouble. It wouldn't be tonight, but... One day, unless they left early, someone would do something stupid. \n\n\"You okay?\" Claire asked.\n\nI nodded, \"Just thinking about the future.\" \n\nShe nodded, \"Heavy thoughts, wanna share them?\"\n\n\"All these people are here because they want safety in numbers. But not all of them just want to live safely.\"\n\n\"There's wolves in the sheep, you mean?\"\n\nI nodded, \"I'm gonna get some sleep.\" \n\nGetting up, I flipped open the bedroll. It was leather on the base, but inside it was lined with wool and had a blanket attached with tied cord that ran up about halfway. It reminded me of some kind of old-school sleeping bag. Slipping into the bag, I summoned my clothes into a pile that I set beside me. After checking my dagger was in easy reach, I laid back. \n\n\"Edith, can I get a nice pillow?\"\n\n\"One luxury pillow is one-hundred points,\" she said with a softer tone, but with no less bubbly enthusiasm. \n\n\"Six, five, ninety-four. Got it, night Edith.\" \n\n\"Goodnight, Mr. Ryan,\" she said as the pillow dropped on my face.\n\nWith a small grumble, I pulled it under my head and tucked the blanket up to my chin. I was just drifting into full sleep, when I felt something shift beside me. Snapping awake, I relaxed as Claire slipped from her bedroll into my own. Still groggy, I started to shift over when she grabbed and stopped me. \n\n\"Whas wrong?\" I mumbled.\n\nShe didn't respond, only kissing me softly. She smelled good. Like the soap with a hint of smoke along with the natural scent of her skin. It was only then, I remembered I was naked under the blanket, but the sheer expanse of skin I could feel pressing against my own told me she was as well. \n\n\"Lay in the middle,\" she whispered softly, before gently nibbling on my earlobe. I didn't have it in me to argue and moved into the centre of my bedroll. Claire slipped her leg over mine and straddled me. \"You saved me today.\"\n\nI groaned softly and shook my head, \"Didn't save you so you'd sleep with me.\"\n\nClaire kissed me firmly as she ground her wet pussy into my rapidly hardening cock. Her lips were warm and soft. They felt perfect, pressed against my own. As I firmed up, my cock fit between her labia and she moaned as she rubbed herself over my length. \"I know you didn't. And that's why I want this. You're a good man.\"\n\n\"You don't even know me,\" I blinked, trying to wake up and see properly.\n\n\"I know that after you saved me, you didn't try to do the same as he did,\" she kissed me softly. \"I know that without making promises, you started trying to help.\" She kissed me again. \"Everything you've done, from saving me, to Henry, Polly, and Maiya, was completely selfless. Then you helped all those other people as well.\" She reached down and lifted my cock to her entrance. \n\n\"You don't have to do this,\" I said, reaching up to cup her cheek with my palm. Her face was so smoothe, I silently begged her to do it anyway. \n\nClaire smiled down at me, touching my hand and nuzzling into it like a pillow. \"But I want to.\" I hissed at the sensation of her pussy sliding down over my cock. The tight, warm, wet squeeze of her body was heavenly. \"Fuck that's so good,\" she moaned softly. \n\nI pulled her down into a deep kiss as she rolled her hips against my own. Raising my hips, I made sure she could rub her clit on my public bone and she moaned in appreciation. I ran my hands up her sides, cupping her perfectly sized breasts. Not too large, but comfortable to hold. Claire gasped in delight as I gently pinched her nipples. She was the most beautiful thing I'd ever seen, and here she was, writhing on my cock. Milking my pleasure like nothing else I could remember.",
        "\"Claire, I'm not gonna last,\" I grunted.\n\nShe shook her head softly, pulling away from the kiss. \"Neither am I. Inside me, please.\"\n\n\"What about?\"\n\n\"No,\" she grunted, biting her lip as she increased her pace. \"Edith... Edith said I won't.\" \n\nI held her hips and grit my teeth as we raced to our mutual orgasms. Her rhythm broke as her hips shuddered and I felt her pussy muscles contract. Pulling her firmly against my chest I kissed her as I thrusted back up inside her. I felt her fingernails dig into my upper arms as my tongue muffled her squeals. It was all too much for me and I erupted inside her. As the pulses of my cock throbbed, her muscles massaged my length working out every drop. As we came down from our mutual highs, our deep kiss turned to several soft, smaller ones. Claire smiled down at me as I felt myself leak out from around my still hard cock, buried inside her. \n\n\"I needed that so bad,\" she whispered, kissing me softly.\n\nI just grinned like an idiot, \"I'll admit, you're amazing. Sorry I didn't last longer.\" \n\nShe smiled and kissed me again. \"Plan on getting lots of practice. I'm not the only one who wants a piece of you.\" \n\nThose words made me frown, \"You're okay with that?\"\n\nThis time Claire sighed, \"I think, whatever I was before I woke up, I worked with people. I understand them and when I have a little time to actually think about it, I can sorta relate. Maybe I was a psychologist before, or a social worker or something.\"\n\n\"Alright, what's that got to do with it?\" \n\nClaire smiled and kissed me again. \"In tense situations, like-minded people form groups. In these groups, some of this tension can be eased with physical intimacy, like what we just did.\" She snuggled and rocked her hips a little, making me groan. \"You're a leader. I worked with people. Henry, I bet is good with making things. Lillian is the mother of the group. Polly is submissive and uses intimacy as a coping mechanism and Maiya wants to feel in control.\" \n\n\"Will she be trouble?\"\n\nClaire shook her head, \"No, but she might push your limits if she thinks she's right. The point I'm trying to make, is that we all have needs. Henry and Lillian are an item, but us girls... You're a hard act to follow.\" \n\n\"I met you first though,\" I said, pulling her down to kiss me softly. \"What do you want?\" \n\nClaire smiled, \"I want you to keep looking at me like that, even after you stick your dick in other girls.\" This time I snorted and went to laugh even as she pinned her hands over my mouth to muffle me. \"Shhh!\" She hissed trying not to giggle herself. \"Oh fuck, you moving like that feels good,\" she grimaced. \n\nI caught my breath and grinned up at her, pulling her hands away. \"Like this?\" I asked, rolling my hips.\n\n\"Uh huh,\" Claire bit her lip.\n\n\"Hmmm,\" I said, frowning. \"Maybe I should do it more then?\"\n\nClaire looked down at me, before plastering herself to my lips as she drove her clit into my public bone. I rolled my hips in tandem. As her clit rubbed down, I pushed up to increase the pressure. Claire moaned softly into my mouth as I gently sucked on her tongue. Shifting my hips to one side of the bedroll, Claire made a soft squeal of shock as I rolled the two of us over. Now with this gorgeous woman beneath me, I made long, firm strokes into her depths. Her legs wrapped around my hips and she drove her heels into my back with each thrust. The wet slaps of our pelvises meeting filled the room. If anyone was awake, it would be immediately obvious what we were doing. But neither of us cared as Claire gasped for air. \n\n\"Fuck me harder!\" she begged.\n\nPushing her head to one side, I bit firmly into the side of her neck. She let out a loud gasp as I slammed my entire weight into her pelvis with each thrust. As I mauled her neck, her fingernails cut grooves down my back as she squealed loudly for a moment, only to cut off as something muffled her voice. Her pussy clenched down in that familiar rhythmic pattern and I buried myself to the hilt inside her and came. Letting go of her neck, I moved to kiss her, only to see Polly already there doing so. Like us, she was completely naked and I could see she was vigorously rubbing herself with one hand, while kissing Claire to keep her quiet. My cock tensed, releasing another jet of sperm, inside Claire, at the thought and she trembled beneath me. \n\nPolly pulled away from Claire, opening her mouth making soft, \"ah, ah,\" noises. But Claire pulled her into another deep kiss as the sound of wet squelching came from Polly's fingers. In the flickering light from the fire, I could see the copious amount of fluid pouring out from between her legs and I bit my own lip thinking about making her squirt. \n\n\"That was fucking hot,\" Maiya whispered loudly, looking at us from her own bedroll.\n\nChapter Four\n\nI was buried again. Only this time I couldn't move. Edith had buried me too deeply and I couldn't dig my way out. I struggled amongst all the waves of heat that pressed down on me from all sides.\n\n\"Ryan?!\"\n\nSnapping awake it took me a moment to realise what was wrong... Pretty much nothing, if I had to be honest. Claire was laying on one side of me, rolled over and holding my shoulder as she shook me awake. On my other side was Polly, now looking nervous, despite her leg being thrown over my own. The only one of the three ladies that wasn't immediately on top of me, was Maiya. She, of the three of them, was already awake and dressed while roasting another chunk of meat. \n\n\"I'm awake,\" I grumbled, relaxing back into my pillow. \"Just give me a minute.\"\n\n\"Bad dream?\" Claire asked, kissing my cheek.\n\nI smiled and leaned over to collect a proper kiss, morning breath be damned. \"Felt like I'd been buried again. But this time I couldn't dig my way out.\" Turning my head to look at an increasingly nervous Polly, \"Where'd you come from, anyway?\"\n\n\"I'm sorry,\" she whispered.\n\nI shook my head as Claire reached over and took her hand. \"I get it,\" Claire said. \"It's okay. We'll talk about it later.\" She looked over at Maiya, who was trying hard to be inconspicuous about listening. \"All three of us.\" \n\n\"Alright,\" I sighed. \"Want to let me up? I suppose there's a bit to talk about with the others.\"\n\nPolly climbed off immediately. In the morning light, I caught a glimpse of her perfect breasts as she shuffled out of my bedroll. I turned away, feeling guilty, only to see Claire's smirk as she lowered the blanket enough for me to oggle her instead. As Polly got out and quickly reached for her bag and summoned clothes, it gave me a free hand to quickly pinch one of Claire's nipples. Her soft gasp turned to a moan as I rolled over and touched my pile of clothes, summoning them to my body in an instant. \n\n\"You'll regret that,\" Claire pouted, slipping far more delicately back into her own bedroll before dressing herself.\n\n\"I'll risk it,\" I grinned.\n\nSlipping out of the bedroll, I stood and stretched. The storm from the previous evening had long since blown out. There were still clouds in the sky, but the sun peeked through in enough places that I had to squint if I looked out into the distance. Which wasn't the greatest idea. The shriekers seemed to have moved on, but they'd left bits of corpses behind. There were buzzards swooping down on the remains. Reaching for my bag, I summoned out a bone and after locating Lace, I tossed it to her.\n\n\"No eating people, got it?\"\n\nLace gave me a chirp, before swallowing the bone. I had the feeling she'd understood my intention, if not my exact wording. Looking over at the building across the street, I could see people moving around. A couple of them even moved to look at our group, so I waved and received a few in return. That made me feel a little better. Waving meant they were less likely to attack, more likely to communicate if we bumped into one another. \n\n\"Morning,\" James said, joining me. \"We gonna discuss what we're doing today?\" \n\nI nodded slowly, \"More or less. Spose we need to find out what sort of people we have here first.\"\n\nHe frowned and looked at me, \"What do you mean?\"\n\n\"I mean, if there's people here, who want to take charge of a large group, fight with others and be general dicks.\" I shrugged,\" Each to their own, but I don't want any part in that.\" \n\n\"What DO you want then?\"\n\nI looked around the landscape for a while, before settling my gaze on a landmark in the distance. By my estimation, It would take us a hard day's hard march to arrive. More if there were problems. \"Those trees out there, surrounded by the planes. See how they snake through the land.\"\n\n\"Probably a river,\" he nodded.\n\nI shot him a grin. \"Water, means game. Trees means wood. So far the only predator we've come across that's big enough to take us in a fight are the shriekers. And they don't seem the sort that can climb trees.\"\n\nHe nodded in understanding, \"Right, well...\"\n\n\"Let's have some breakfast and we'll talk it out. Staying here is a bad idea.\"\n\nWhat I didn't tell him, was the river was only going to be a stop. The mountains that looked to supply the river, made me think of old mining towns. If that was the case, there was probably somewhere safer to hole up further upstream. But the river would be a good source of food, water and cover while we moved to a better location. \n\n\"Ryan, come eat!\" Maiya called. \n\nI turned and flashed her a smile as we all sat around the fire. \"Did that burn all night?\"\n\n\"Yeah, it's got about twenty minutes left,\" Maiya said. \"If you examine it, it tells you how long it'll burn for. One day's wood seems to be twelve hours of burn.\"\n\nNodding, I pulled my dagger and cut a piece of meat from the chunk. Whatever it was, it wasn't bad. It was lean, but still had enough fat in it to have flavour. I just wished we had some salt or some sauce to help it go down. As we ate, the other people picked up their meals and started moving over to us so we all sat in one group. \n\n\"James said, we're moving, why?\" a loud voice called out.\n\nI sighed, as I chewed what was probably going to be my last mouthful for a while. \"We can't stay here, or at least I'm not. This isn't some democracy, if you wanna stay, you're more than welcome.\"\n\n\"What about safety in numbers?\" A middle-aged woman asked.\n\nI nodded, \"You'll probably need them to stay in the city here.\" There were a few murmurs, so I cut myself a strip to munch on bewteen questions. \"If we stay here, we have the buildings for cover. But we don't have any reliable source of food, water or building materials that won't fall apart in the first rainstorm.\"\n\n\"We can take it from the others!\" The first man yelled, getting a few calls from his cliche. \n\n\"Is that really what you want to do?\" I asked, shaking my head. \"Be bigger monsters than the fucking shriekers?\"\n\n\"Gotta get with the times, man,\" the guy called out condescendingly.\n\n\"So, is that it then?\" I called, standing up to address the whole room at once. \"Is that what this comes down to? Do we move on and try to make a living, or stay here and murder people?\" Now at least there were a few people looking around and shaking their heads. \n\n\"The strong don't make room for the weak,\" the man spat.\n\nI sighed, \"Look, whatever your fucking name is. I'm not interested in joining your little gang. I'm gonna pack up and get out of your hair. You can sit here with your thumb in your ass or whatever...\" \n\nBending down, I grabbed my bedroll and hauled it over to my bag. My small original group did the same, even grinning as I de-summoned it into the bag without rolling it up. I was pleased to see a few of the others I didn't know doing the same. But the dickhead, wannabe gang leader was staring daggers at me. He seemed to have three other guys who looked about as smart as he did, hanging back with him. Each held a small dagger. \n\n\"Lace!\" I called and the small creature leaped up onto my shoulders. Turning to face the idiots, there seemed to be a divide in the room. Several people were trying to move in behind us with their packs. Others were casting looks at the four armed idiots. Others just seemed to be sitting back out of the way. I even spotted a young couple slip out of the room and head towards the stairs. \n\n\"This doesn't need to be a fight,\" I called to the room as I picked up my spear. \"There's enough shit going on in this world without us fighting amongst ourselves.\" Reaching for my bag that had been used to prop up the spear, I de-summoned it into my last bag. Now I was fully packed, dressed and armed. The ladies standing at my sides were too. They stood, with their hands on the hilts of their daggers.\n\n\"Grant,\" a small woman called, stepping forward and taking the leader's hand. \"Let them go, we don't need-\"\n\nHe cut her off with a swift backhand sending her to the floor with a squeal. \"Shut up, bitch!\"\n\nThe middle-aged woman who's spoken up earlier moved to help her stand, all the while staring daggers at Grant. \n\n\"So, is this it?\" I asked the room. \"Is this really going to happen? You're going to kill us if we try to leave?\"\n\n\"You've got all those points,\" Grant smiled through his teeth.\"\n\nI nodded. Without waiting for them to move first, I sprung into action. Stepping forward, I swung my spear in a wide arc, making the four scramble backward. Using the momentum of the swing, I stepped forward, stabbing the spear into the chest of the man on the far right. \n\n\"Chris!\" The one on the other side cried and rushed forward.\n\n\"Stop!\" Grant roared.\n\nBut it was too late. With the man's attention directed at me, he didn't see Maiya step inside his guard and swipe her dagger across his neck. But as crimson blood sprayed out from the razor cut, he collapsed to the ground with a cry. Grant rushed in, swinging his dagger at Maiya, but I stabbed out with my spear, making him leap back. \n\n\"Grant!\" The last one cried.\n\n\"Two lucky shots, just pay attention. We can still win this!\" \n\nThe other guy nodded nervously. I was pretty sure the three stooges he had with him were all talk. None of them had any experience being the tough guys they were pretending to be. Maybe with the exception of Grant at least. He seemed to have been an asshole even before all this went to shit. So now, we were stuck in a sort of standoff. Grant and the other guy were holding ground, while the ladies and I held ours. Even Henry had stepped up, but Lillian was behind him looking horrified. The guy I stabbed in the chest was no longer twitching, while the one Maiya had slashed was sweating and breathing heavy. Whatever memories I had, didn't paint a big picture, but even I could see the signs of blood loss.\n\n\"You let us go, you can save him,\" I pointed at the bleeding guy.\n\n\"He was stupid and rushed in like an idiot. Dumb like his brother. But I kill you, and all these pretty little babes you've collected won't have anywhere else to go.\"\n\n\"Is that what this is about?\" I scoffed. \"You, not having any luck with the ladies?\" I saw the twitch in Grants forehead as I spoke.\n\n\"You said you loved me!\" The small woman snapped. \"You told me you didn't need anyone else if-if...\"\n\n\"Shut up, slut. You'll do as you're told!\" Grant snapped.\n\n\"Big man you are,\" Claire snorted.\n\n\"Lying to pretty, young ladies just to get them to sleep with you, that's pretty pathetic,\" Polly agreed.\n\n\"Maybe if your dick was as good as Ryan's, you wouldn't-\"\n\nGrant snapped and rushed in, swinging his dagger at me with wild abandon. I remembered a phrase from the day. Something like 'roid rage' as I tried to ward him off with my spear. Unfortunately, he stepped around it and grabbed hold. With a heave, he yanked me forward as I tried not to lose control of my weapon. His dagger flashed towards my face and I ducked, releasing the spear. But as he whirled it around, instead of stabbing me with it, he hit me across the head with the shaft. \n\nWith my ears ringing and my eyes seeing double, I staggered back a few steps as my ladies crowded around me. \n\n\"Get out of the fucking way, or you die with him!\" Grant snapped, \"at least dead, you'll be easier to fuck!\" \n\nAs he stepped forward, he seemed to stagger a moment, before turning around. A line of red poured from around where his kidney should have been. \n\n\"You lied to me!\" the small woman screeched and slammed her dagger into his chest. \"YOU LYING, MURDERING, CHEATING, TWO-TIMING BASTARD!\" She punctuated each word with a thrust of her dagger. Grant collapsed to the floor as she continued to wail and abuse his corpse. The woman who'd helped her earlier, stepped forward, catching her hand and hauled her away. \n\n\"You okay ladies?\" I asked, as I rubbed my face. \n\n\"You need spray on that,\" Polly said quickly. \n\nBefore I could protest, Claire got hers out and gave me a spritz. Immediately my face started feeling better and my vision changed slightly. \"I think he broke my eye socket or something,\" I mumbled.\n\n\"Explains the amount of swelling,\" Claire said, before pecking my lips. \n\n\"Ummm,\" The last guy said, keeping his distance.\n\nI just glared at him. \"You made your choice to toss in with this dickhead,\" I kicked Grant's corpse. \"Whatever you decide, you're not coming with us.\" \n\nHe sighed and nodded, before moving over to the group huddled around the small woman. I turned to grab my bag and as it summoned to my back, I spotted the group of people behind us. There were four of them. Two guys and two girls. \n\n\"You coming with us?\" I asked. \n\nThey all nodded, \"Right. Follow instructions, but feel free to chime in if you see something or think I'm wrong. I'm not a dictator, but I'm not going to put up with anyone's bullshit, got it?\" The four of them nodded, \"Right. I'm Ryan, this is Claire, Polly, Maiya, Henry and Lillian,\" I introduced the group. \n\n\"I'm Henrietta, this is Sam,\" the closest of the ladies said.\n\n\"Umm, I'm also, Sam,\" said the first guy. \n\n\"Davin,\" nodded the second. He seemed distracted by the other group, so I turned to look.\n\n\"NO!\" The small woman shouted. \"Fuck that, I'm going with him!\" I watched in amusement as she stormed over and moved to stand beside the two ladies who'd joined us. \"I'm Corrine,\" she said, suddenly very nervous. \"Umm, do... Do you mind?\"\n\n\"You can come,\" Claire shot her a smile.\n\nWhat was surprising, was the middle-aged woman from earlier stomped up in a huff. \"Heather, I've got memories from working in a hospital. Think I was a nurse or something. I can help with smaller injuries, so you don't waste the spray. But I'm not sleeping with you.\"\n\n\"More for us then,\" Maiya shrugged.\n\nA few of the ladies giggled along, including Henrietta, which made me sigh. There were men in our group. It was going to be really bad if every woman decided to attach herself to me for whatever reason. \"Right, Corrine, wanna loot Grant's corpse? I'll get the one I stabbed. Maiya,\" I looked over my shoulder at the now still corpse. \"You get the one you're responsible for.\"\n\nDavin went to say something with a frown, but I shot him a look and shook my head. I didn't want to voice my idea out loud. I wasn't proud of what I was thinking, but it was our best chance for survival. \n\n\"Alright, everyone know what they're doing?\" I called out. The group with me nodded, while the other group watched on warily, but called out softly in agreeent. \"Right, before anyone else decides to do anything stupid, let's get going,\" I said. \n\nAs one, we started marching for the exit. The group staying behind moved aside to give us more room. I paused over the guy I'd stabbed and looted him.\n\nBONES (HUMAN)\n\nINFERIOR MEAT\n\nTEETH (HUMAN)\n\nDAGGER (C) \n\nPOINTS: 800\n\n\"Ladies, remember to grab their bags as well,\" I said as I took the points and the dagger.\n\nWe moved as one towards where the group had their stuff and saw a group of four bags off to one side. It seemed Mr. Tough-guy was already separating his friends from his tools. The first bag I touched wouldn't move, but Maiya claimed it. The second bag let me put it straight in my own and Corrine darted in grabbing Grant's without a moment's hesitation. ",
        "With a last glance at the group we were leaving behind, we headed for the door. Out in the hall, things were quiet. Lace shifted over onto Claire's shoulders, earning me a wink. \n\n\"Is that thing really safe?\" Heather asked.\n\nI nodded, \"Yeah. My class is Beast Tamer. She won't leave me alone, but she'll sit on your shoulder if she likes you.\"\n\nAs if to emphasise my point, Claire was busy scratching Lace's head while the small monster growled affectionately. When we got to the stairs, the caltrops were still set out. But someone had kicked them aside to make room to go down. I figured it was the young couple who left when the fight started. I made sure to collect each one, noting they were all clean, and placed them in my belt pouch. I paused on the fifth floor and waved for everyone to stop.\n\n\"I'll be back.\"\n\nDarting away, I found the room with the phone and with a swift cut of my dagger, I severed the cord and placed the phone in the belt pouch with the caltrops. Heading back to the group, we continued our descent. The fourth floor held no surprises. The third had a still burning fire set on it. But as we passed the second a voice called out.\n\n\"Hey, we wanna come with you!\"\n\nI turned and spotted the young couple crawling out from under a desk. \"You two okay?\"\n\nThe guy nodded and scratched his head, while the girl shot me a smile. \"Sorry about running off. I didn't want Beth getting anywhere near that fight. Figured it was better off seeing who came out before we made a decision to head off on our own. I'm Dean.\"\n\n\"Nice to meet you, Dean. And I won't hold it against you going for safety,\" I reached out and shook his hand. \"We're getting out of here,\" I waved for the stairs.\n\nHeading down to the first floor, it didn't seem anyone else was here. I didn't see any shriekers either. But there were plenty of buzzards out and about. \n\n\"Alright, Davin, I didn't want you speaking earlier, because we've got some points to farm.\"\n\n\"What?\" he asked.\n\nI grinned, \"These buzzards. They probably don't want anything to do with a large group of us. If we go in as a group to each corpse we find, we can take turns looting them. Most of these people won't have used their bonus for the survival pack. If they haven't made it back yet to collect their own corpse, they're probably not coming.\" \n\nHe eyed me and nodded, \"Right, sorry.\"\n\nI just shook my head, \"Don't be. You were going to complain about point sharing. It was valid. I just didn't want to tell the others. Now, the buzzards will tell us where the bodies are. All we gotta do is touch them, loot and move on. So Davin, you're up first.\" \n\nDavin grinned and moved to stand by me as we set off. From ground level with all the debris around, we couldn't see the river like we could from the building. But I had a general idea of the direction it was. I had higher hopes once we'd left the city limits of seeing our destination. But there was one simple problem between here and there. The plain that surrounded the trees along the river, would offer no cover as we crossed. Shaking my head, I put that aside for a problem to think about later. Who knows, maybe there'd be a spot where the trees reached out over the plains that I couldn't see because of the buildings. Just a quick change of plans and a detour could make things easier. \n\nThe group stayed relatively quiet as we walked. There were a few complaints. Mostly about the state of the city or the smell that wafted over us from time to time. The sun beat down on us from above and I noticed everyone copied me when I put up my hood. The first body didn't take long to find, but it was covered in almost a dozen buzzards. Lace reared up, letting out a loud hiss, trying to scare them off. I grinned at the thought and urged everyone forward. A few of the buzzards flew off, but others tried to hiss and defend their meal. But Davin spotted a small scrap of... Meat... and reached down to touch it. A moment later the corpse vanished and the buzzards screeched in anger as they took to the skies.\n\n\"Lucky, we only need to touch a piece, not the whole thing,\" Davin grinned. \n\nWe set up a rotation with me last as I had the most points. And one by one we collected corpse after corpse. The angry screeches of the buzzards only got louder as we cut a swathe through the dead. We could have spread out and collected all the corpses, but it would have taken longer in the end. Sticking together meant safety and we could move quicker and have more eyes open for danger. Our group moved as one down the road, between the building we slept in, and the one we could see people in across the street. When I glanced up, I could see more than one face peering down at us. Hopefully they really were friendly. I didn't like the idea of someone following after us in the night. It was one thing collecting these points off already dead bodies. Another if we stumbled across another person and took theirs by force. I wouldn't have anything to do with... Well... Banditry. But that didn't mean others would hold to my ideals. \n\nAs we got to the end of the street, I turned us towards the river and into what looked like a parking lot. Unlike the haphazard cars in rows, or bunches in the street. This looked orderly and neat by comparison. A few here and there were out of place. Either by someone trying to move the cars in the lot, or... well it looked like a few had been moved more recently, by something rather large moving through the area. \n\nAs we had before, we rotated our group around, collecting points from corpses we passed. The shriekers were messy eaters and the buzzards couldn't bite through larger bones, so there were plenty of leftovers to loot. But it wasn't the... bits... that got to me. It was the ones that almost got away. A man, long dead, curled up under a turned over car, missing part of his leg. A woman, who was cradling her intestines inside the shell of an old panel van. The worst was an unrecognisable corpse. An individual had tried to dive through the window of a truck and got caught halfway. They had been eaten down to the pelvis, which was the only thing holding them in place after it wedged itself against the frame. That one was left to me as nobody else was particularly keen on getting closer. So after looting my five-thousand points, I hopped down and kept walking.\n\n\"Psst!\" A voice hissed.\n\nWaving my hand to get down, my group quickly crouched. I moved forward and peeked around a sedan to see who made the noise. There was a middle-aged woman, lying under a car with a young man beside her. She was staring at me, while the young man was distracted by something else. Before I could respond, a shrieker stood up. I nearly shouted in alarm as I slipped back out of view. This one looked different from the others. \n\n\"Everyone quiet,\" Ryan hissed softly, as everyone nodded in agreement. \"Edith?\"\n\nOne-one-thousand. Two-one-thousand. Three-one-thou-\n\n\"Yes, Mr. Ryan?\" Edith said in her characteristic cheer.\n\n\"Edith, the first shriekers were brown and yellow, this one's got red on it, is that significant?\"\n\n\"Yes, Mr. Ryan. The colour denotes gender.\"\n\nI sighed softly, \"Edith, I didn't see any of these yesterday in this colour. Why is that?\"\n\n\"Mr. Ryan, the shriekers you saw yesterday were females in part of a large flock.\"\n\n\"So this is a male?\"\n\n\"Yes, Mr. Ryan.\"\n\n\"Is it part of a flock?\" I asked, thinking about our need to find somewhere to hole up for a while.\n\n\"No Mr. Ryan, males follow after flocks in the hopes to mate, but are otherwise solitary in nature.\" \n\n\"Why are you being so tight lipped and direct all of a sudden?\" I grumbled.\n\nEdith remained silent for a few moments before replying, \"Mr. Ryan, general information is readily available. If it is possible for you to observe it, I can help you understand it. Accessing information like the specific genders or behaviours of individual species is far more difficult.\"\n\n\"Difficult, this is a game, Edith, how is it difficult?\"\n\n\"It's more of a simulation, Mr. Ryan. And I do apologize, but it can't be helped.\"\n\nI paused, \"You're not the one in charge?\"\n\n\"I cannot answer that question at this time,\" Edith said cheerily.\n\nI sighed and nodded my head, \"Can you tell me how to tame a beast then?\"\n\n\"Mr. Ryan, in order to tame a beast, you must overcome it.\" \n\n\"Thanks Edith,\" I said, rolling my eyes.\n\nShe must have picked up on my annoyance as she didn't respond. This whole situation was out of hand. Leaning back around the corner of the vehicle I hid behind I could see the shrieker. It was clearly eating what was once a person. It lowered its head from view, we heard a wet crunching sound and saw it standing upright again. A quick flick of its head and a lump of meat and bone fell into the back of its mouth and it swallowed.\n\n\"Lace, get ready to distract it,\" I mumbled as I laid down my spear.\n\nLace gave a small soft chirp and I hoped she understood what I wanted from her. \n\nChapter Five\n\nTaking a deep breath, I waved for the others to stay put. Leaning around the car, I waited for the shrieker to bob down. The moment it did, I quickly moved to the car where the man and woman were hiding. The man looked unharmed but scared. The woman had a long gash across her chest. It didn't look fatal, but it would probably get infected if left untreated. They both watched me warily as I approached. When Lace poked her head out from around my shoulders, their eyes bugged out of their heads. I raised a finger to my lips and they covered their mouths quickly. \n\nBeing this close, I could hear the shrieker clearly as it ate its meal. The wet sound of tearing flesh filled the air. It even made soft cooing noises as it ate. Reaching up to my shoulder, Lace slid over my arm allowing me to cradle her. I listened to the clomp of the shriekers jaws snapping shut over its mouthful. The moment, I heard the squelch of soft flesh, I tossed Lace over the car towards the shrieker. In a flash, Lace growled and made a ruckus. The shrieker stood up and made a soft shriek in challenge. I quietly climbed atop the car body as the shrieker turned its back to me. With its attention firmly fixed forward, I took a step towards it. The moment my foot touched the roof, it creaked loudly and the shrieker turned its head, staring directly at me. \n\nWith a sharp hiss, Lace launched at the shrieker's face. She impacted with the side of its head, buffeting it with her wings. The shrieker reared up flapping in shock at the small buzzard's sudden move to attack. Without a second thought, I leaped onto the shrieker's back and wrapped my arms around its neck. With a squawk, it took off. No matter my previous experiences in life. I doubt I'd ever felt anything like this before. It was both smooth and bumpy. The two-legged bird ran in a pedaling motion that kept its body level and moving. But it also constantly shifted and jolted in an attempt to throw me off. It flapped its wings, trying to stab me with its spurs, but with me on its back, it just didn't have the angle to do so. Reaching up, I wrapped my arms around its head, trying to wrestle it under my control. It took the opportunity to twist around and try to bite me directly. Fortunately, that worked in my favour as I pinned its head against my chest in a bear hug. \n\nThe shrieker, unable to see, came to a dead stop and spun in place as I held its head firmly. The rage in its eye was all consuming as it started shrieking and trying to bite but I held firm. And like that, it suddenly went still in my arms. \n\n\"Edith?\"\n\n\"Yes, Mr. Ryan?\"\n\n\"Instant reply means it's no longer a threat?\" \n\n\"That is correct Mr. Ryan.\" \n\nI nodded, \"I'm sorry for getting short with you earlier.\"\n\n\"As I mentioned Mr. Ryan. I'm perfectly okay with you hating me. But I appreciate your kindness regardless. I may not be able to explain much of what is going on, but I do sympathise with your situation.\" \n\nNodding, I dismissed her with a thought and slowly released the shrieker's head. It blinked up at me, before straightening. I spent a few moments just sitting on its back as I looked around and got my bearings. Weirdly enough, it seemed the shrieker had run back the direction I'd come with the others. Only now I was about the same distance away in the opposite direction, further into the city. Looking up, I could see dozens of faces staring at me in shock from the surrounding buildings. Even as I watched, more and more faces appeared. The whole situation made me nervous. If someone had a weapon they could throw, or even just some rocks, this could get ugly and I wanted no part in it.\n\n\"Right, shrieker, wanna head back the way we came?\" I asked. \n\nThe shrieker cocked its head for a moment before turning around. I held on with my knees, but the natural shape of its back gave me a stable perch to sit on. Lace, seeing the situation under control, returned to my shoulder with a series of soft chirps. The shrieker slowly made its way back. Far slower than when it ran here to begin with. Subconsciously, I leaned forward and it picked up its pace rapidly. While I'd given it a general instruction to return, I found myself leaning to indicate that I wanted to change direction. The further I leaned forward, the faster it ran until eventually it was sprinting along as fast as it was earlier. I steered the shrieker in the direction of my friends when I made a mistake. Swerving around a large truck, a small car was immediately behind it. At this speed, we were going to run into it without a chance to stop. As I braced for the impact, the shrieker leaped, clearing the car with a series of quick flaps. I laughed out loud as we continued at the same pace. Unfortunately, as I approached my friends, a series of loud screams went up. Worried about what was wrong, I leaned forward, pressing the shrieker onward and rushed to help. \n\nAs we rushed into the spot where we'd hid before, I immediately realized the issue. Hopping from the shriekers back, I moved around it and gave its neck some long affectionate strokes. \n\n\"What are you doing?\" a voice hissed.\n\nTurning, I saw the woman who was hiding, back in place. But Claire was smiling from behind her as she moved to join me.\n\n\"He's safe, come on out.\"\n\n\"What do you mean safe?\" the young man called. \"It was eating someone!\"\n\n\"Yeah, that's not ideal,\" I shook my head. \"Either way, he's safe now.\"\n\n\"He's beautiful!\" Claire giggled, moving up beside me.\n\nThe shrieker leaned down and turned his head to stare at her. \"Oi,\" I grumbled, patting the side of his beak. \"She's mine and so are the others.\"\n\n\"Yours huh?\" Maiya said, coming to join us and handing me my spear.\n\n\"Please don't scare me like that,\" Polly whined, taking my free arm and giving it a quick squeeze.\n\nClaire gave me a quick kiss and a smile as I turned to face the group of us coming out of hiding. \n\n\"Hey, ummm.\" The young man asked softly. \"This is great and all, but... Do you have anything Paula and I could wear?\" \n\nI glanced around. The building we came from was a ways behind us. But there was the shopping centre itself that this parking lot was surrounding. It was far closer.\n\n\"Alright, you two, come with us and we'll help you. We don't have time to go through it here.\" De-summoning my shirt, he and Paula stared in shock as I offered it to the older woman. She looked apprehensive but took it and jumped when it appeared on her. \"Best I can do till we get somewhere safe.\" Paula nodded her thanks, despite her confusion. The young man nodded and I turned back to the shrieker. \"You stick by me alright? If there's any danger, let me know.\" \n\nThe shrieker cooed softly so I smiled and gave him a pat. Changing the direction of our group, we moved towards the shopping centre. It looked half collapsed from here, but it still had a roof in some sections. We still looted corpses as we approached. That freaked the hell out of the new couple, but we managed to explain the process and gave them some points along the way. Needless to say, by the time I was leading them into the centre, they both looked like they'd been slapped.\n\nInside, the building was trashed. It was obvious someone had been here, but there weren't any signs of where they'd stayed. Lace and the shrieker didn't seem to be bothered by anything, so I led the group into the first empty room. It was a store at some point and looked like they sold running shoes. Not that there was much left other than the plastic, rubberized soles. \n\n\"Some of these would have been nice,\" Claire sighed, standing beside me. \n\nI nodded and gave her a small nudge, \"Think you can handle the newbies? I'm going to scope this place out a bit. It's also afternoon and we've barely made it anywhere, so we may as well set up for the night.\" \n\n\"Yeah, I'll get on it. But I don't like you going alone,\" she grumbled.\n\nI grinned, \"I won't go anywhere I can't take the shrieker.\"\n\nClaire nodded, \"Sarge.\"\n\n\"What?\"\n\n\"Call him Sarge.\" \n\nI laughed softly, \"Alright, Sarge it is.\" \n\nAs I said the word, the shrieker bobbed its head and made another coo, catching the attention of everyone else. I just laughed and waved for it to follow as I headed out. What I didn't expect was for Corrine to dart up beside me.\n\n\"You okay?\" I asked.\n\n\"Mhm,\" she said softly. \"Thought you could use the company.\" \n\n\"Fair enough,\" I nodded. \"Stick close, stay quiet and give me a tap if you spot anything.\" \n\n\"Anything like what?\" She asked as we headed into the main hall of the building. \n\n\"Anything. People, monsters, loot boxes.\"\n\n\"There's a guy staring at us from over there,\" she said, pointing.\n\nI turned my head to see a face pull back into a store. I'd been looking into the stores we passed and had completely missed him up the end. It was the last store on the left before a section of the room collapsed. I could see light from the hole and wondered if we could access the roof.\n\n\"Alright, Sarge. No killing unless they attack first, okay?\" \n\nSarge cooed once and shook his feathers. Honestly, if I had twenty like him, we could cover so much more ground than on foot. But that was food for later thought. For now, I needed to check on some survivors. As we approached the store, I could hear soft, but urgent voices as several people seemed to be arguing in hushed whispers. I slowed our pace and gave the wall some space as we stepped around into view. As we did, I could clearly see two men shove something into a back room, before turning to face me. \n\n\"Who are you?\" the first one demanded, before spotting Sarge as the shrieker moved up to stand in front of me. \n\nThe two men were dressed the same as us. They had the remnants of a fire going and there were three bags out on the floor. Considering three bags and they'd clearly shoved someone into the back room, I was already expecting trouble. \n\n\"Who's in the back room?\" I called.\n\n\"Nobody, just us,\" the first man said firmly.\n\n\"Three bags?\"\n\n\"I've got two,\" the first said.\n\nI nodded, \"alright, pick up your bags.\" \n\nThe two men eyed me seriously as they stepped forward. I heard a soft thump from the back room and one of them coughed a moment later to try and hide it. The one who claimed to have two bags, put the first on in a flash. The second man did the same. But as the first man reached 'his' second bag, he frowned for a moment.\n\n\"Go on,\" I said, pointing my spear at it. \"Pick it up.\" \n\n\"I... Uh,\" he frowned, clearly giving it a couple tugs while it remained unmoved on the floor. \"What's this all about, man?\" \n\n\"Who's in the back room?\" I said, narrowing my eyes. They both just stared at me without replying, so I took a deep breath. \"WHOEVER'S IN THE BACK ROOM COME OUT!\"\n\nA soft scuffle made the men flinch, before a feminine voice called, \"HELP!\"\n\n\"Sarge, kill!\" I snapped.\n\nIn an instant, Sarge shrieked and rushed the first man. He managed to get his dagger in his hand, but could do nothing as the large bird slammed him into the ground. The second man on the other hand, drew a sword and swung it like a baseball bat. It seemed awkward in his hands and I was able to evade him quickly. What I wasn't expecting, was for a dagger to slam into his chest from over my shoulder. Turning, I saw Corrine, staring in shock from the position she was in after throwing it. I put the thought aside for a moment and looked at Sarge who had just torn off the man's head. I frowned, thinking about him re-spawning somewhere. I gave his head a look to make sure I had him memorised before looking at the doorway. "
    ],
    "authorname": "Montgomery Quinn",
    "tags": [
        "beast tamer",
        "dystopian",
        "gore",
        "harem",
        "litrpg",
        "mf",
        "mfff",
        "violence"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/hell-10"
}