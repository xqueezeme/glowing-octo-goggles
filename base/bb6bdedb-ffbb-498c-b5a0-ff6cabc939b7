{
    "title": "Descent into Depravity Ch. 02",
    "pages": [
        "This is the second in a series of stories about a woman, suffering from depression over the death of her husband, who learns that he had a secret, depraved life, totally at odds with his seeming disinterest in sex. As she delves into his secret porn collection she experiences her own sexual awakening and recovers from her depression in the process. \n\n***** \n\nThe next day I dressed for work just as I always did\u2014dark slacks, flat-soled shoes, a white blouse and a brightly colored scarf just to give the whole outfit some flare. My underwear was my usual white panties and functional ho-hum bra. Really quite boring, but certain not to give offense to anyone. Like if I got hit by a truck and had to go to the hospital or some such. \n\nThere was one thing that was different, not that anyone could tell. I could tell, though. My sex was shaved completely bare. It made me feel as though I was indecently dressed, even though no one could see a thing and I was wearing the same clothes I always wore. The feeling was delicious, but somewhat distracting. I managed to keep my mind on my work when the kids were around, but much of the rest of the day my emotions were waffling between a mild guilt and a thoroughly enjoyable feeling that I was getting away with something no one could see. \n\nThe important thing was that I didn't think about Larry all day. I didn't realize that until I got home, but the black cloud that Larry's death had been simply wasn't there\u2014all day. I had lunch with some of the teachers and enjoyed listening to them gossip about the principal and other teachers not at the table. I doubted if much of it was true, but that didn't matter. The talk was mildly scandalous, and I enjoyed it as I sat there wondering what they would think if they knew about my naked pussy, and how they would gossip about that if I were not there. They couldn't know, of course, but I let myself think they might. \n\nPerhaps the healthiest part of lunch was that I actively participated. I didn't have any dirt of my own to dish up, and I wasn't about to just make something up. But I confess I actively encouraged the others to tell what they knew (or thought they knew) by asking leading questions. (\"Do you think they really went to the mall or did they go to a motel?\") It was fun. Fun was something I hadn't had in months, with the exception of my masturbation of the last few days, but this was a healthier kind of fun. \n\nMy days for the rest of the week were pretty much the same. My evenings were a good deal different. As each day wore on, my mind kept turning to my plan for the evening\u2014masturbating as I looked at Larry's porn collection on my wide-screen TV. By the time I got home each day I was horny as hell. I went directly to the bedroom and stripped off all my clothes. Then I would stand before the full-length mirror in our bath and watch myself as I fondled my tits and lightly stroked my sex. But I always stopped, before reaching the climax I craved. I wanted to save myself for an extended masturbating session after dinner, when I could sprawl naked on the couch in the living room watching Larry's porn collection on the TV. Strangely, I enjoyed dinner more with the ache of denied gratification churning my core. \n\nWhen I wasn't actively masturbating (really, you can't do that with all of your spare time) I spent my time around the house naked but for a short, loose silk robe. I thought about just dispensing with clothes completely while at home, but I decided that I liked the robe better. It was almost see through and short enough so that unless I was very careful about how I sat or moved it exposed my sex. Also there was a delicious jiggle of my tits as I walked about the house that would have been obvious to anyone watching. I loved the sensation of my nipples rubbing against the slick fabric of the robe as I moved about. All in all, the robe was more indecent in its own way than actual nudity, because it purported to cover my nakedness and failed miserably. Of course there wasn't anyone there to see my wanton dress, and if there had been I'm sure I would have lacked the courage to actually dress that way. Still it was fun, and fun was what I desperately needed after six months of being depressed about my late husband. \n\nAnother thing I tried was going to the grocery store sans undergarments. Of course I was still wearing my usual conservative dress, usually a knee length skirt and a loose blouse (I didn't own anything else), but there was a real thrill to walking around the grocery store naked beneath my everyday clothes. I wouldn't have dared do such a thing at school, but at the grocery store it was okay because I believed I was unlikely to see anyone I knew there. I soon made indecent dress a regular part of my shopping routine. \n\nOne day I discovered my assumption that I would never meet anyone I knew at the grocery store to be overly optimistic. As usual, I pranced about the market picking up a few things I needed for dinner, thoroughly enjoying the cool air of the market on my naked pussy and the friction of the fabric of my blouse on my nipples as my tits jiggled beneath my clothing. I was standing at the vegetable counter trying to decide on the size of cucumber I wanted for dessert (yes, that kind of dessert. I had become quite fond of cucumbers). Just as I reached for my cucumber/dildo of choice I heard a deep voice with a heavy French accent. \n\n\"Alice. My, but you're looking good today.\" \n\nIt was my friend Joan's husband, Herv\u00e9. I dropped the cucumber in my basket and looked over my shoulder, knowing immediately who it was by his deep voice and accent. Herv\u00e9 was a notorious flirt. \n\n\"Oh! Herv\u00e9, how nice to see you, and thank you,\" I said, feeling a moment of panic. What was Herv\u00e9 doing here. Could he tell I was naked beneath these conservative clothes I was wearing? \n\n\"Your colors. They go so well with your skin and hair. You have marvelous taste my dear. And that blouse. It's a beautiful match with your eyes.\" \n\nGod he was such an awful flirt, and his eyes were roaming across my body as if he had X-ray vision and could see right through to my nakedness beneath my clothing. All I was wearing was a simple jeans skirt that came nearly to my knees, a pale blue cotton blouse buttoned up discreetly so as not to show any cleavage, and a pair of flip-flops. \n\nMy heart was racing and I felt a burst of lust originating in my sex. It wasn't as though I was standing naked in front of Herv\u00e9, but I felt like I was. And the way he was looking at me. He must have known. But how could he? There was the most amazing course of conflicting simultaneous emotions running through me. I was mortified, I was terrified, and I was almost overcome with a burst of lust unlike anything I had ever felt before. \"Where is Joan?\" I asked, hoping to change the topic to something other than me. \n\n\"Oh, she's around somewhere, but it's you that is lighting up this dull, drab grocery store.\" His lines were especially amusing when delivered in his French accent. \n\nWhew, I thought. If Joan's here in the store he won't go too far. Then, for some reason I'll never understand, I decided to reciprocate. \n\n\"It's so nice to hear you like these clothes.\" I did a quick pirouette. As I turned I could feel my long hair swinging away from my neck and the skirt flaring out and showing more of my legs, but not high enough, I hoped, to show him my naked ass. \n\n\"Ooh la la,\" the lecherous Frenchman responded. \"Where have you been hiding yourself?\" \n\nI pushed my hair back and looked up at him with a smile. \"Oh, just here and there. Work, and well that's about it.\" That was about it for the last six months I thought. This was the first flirtatious conversation I had had with a man in months\u2014maybe years. \n\n\"And you, Herv\u00e9? Where have you been hiding yourself?\" \n\n\"Ooof. You know. I work and work and then Joan. She has her . . . her . . . what you call her honey dos. They never end.\" \n\nI laughed. \"Poor Herv\u00e9. Your life is so hard.\" \n\nHe reached out and took both my hands, holding them palms up. His hands were surprisingly hard, but warm. \"Oh oui. If only I could. . . . We, Alice . . . just you and I. Run away to Provence. Just lie on the beach and make . . .\" \n\nFortunately that was when Joan came around the corner of the aisle, her loud greeting cutting off her husband's proposition in mid-sentence. \n\n\"Alice, you're out! You're out of your house, and don't you look nice.\" Her comment on my appearance was an honest compliment, as opposed to Herve's lecherous flirting. \n\nBut as she spoke the thought that crossed my mind was, \"Yes, I am out of the house and I do look nice and more importantly, I feel nice . . . and nearly naked.\" I smiled just a little at the last part of that thought. Wouldn't Joan be shocked if she knew. \n\nI thanked her for the compliment and told her I felt nice also. From there the conversation was mostly between Joan and me, her arrival having dampened Herv\u00e9's ardor. Eventually we parted, Joan and Herv\u00e9 insisting that I join them for dinner again soon and me promising to do so, but with no particular date set. \n\nI finished my shopping and drove home. As I drove, I marveled at how good I felt. I hadn't enjoyed anything since Larry died as much as I had enjoyed Herv\u00e9's lecherous flirting. Maybe life was going to be okay after all. \n\nI was feeling pretty raunchy when I got home, but instead of just jumping into a masturbation session, I stripped off all of my clothes and put on my lightweight robe. I had left the cucumber sitting on the kitchen counter to warm up a bit. The temperature the grocery store had been storing it at was liable to give my pussy hypothermia, I thought. \"I'll just save that for after dinner,\" I told myself. \n\nI also wasn't quite hungry yet, so I put off dinner for a couple of hours and sat down before Larry's computer to explore some more of his debauched interests recorded on his computer. That was the evening I discovered his Literotica account. Once I figured out how the site worked I wanted to see what kind of erotic stories Larry favored. The site had a concept called Favorites that was custom made for tracking a user's preferences. A little digging in Larry's computer quickly yielded up his Member Name (\"Pervy Larry,\" how appropriate I thought) and his password (\"Cocksucker,\" not at all creative\u2014same as the password for his computer). \n\nWhen I got into Larry's account I was shocked to learn that he didn't just read the site's erotica. He wrote it. A lot of it. Larry had posted over 100 stories to the site. I don't know why I was shocked. I mean I had already found that my late husband had saved thousands of pornographic pictures and videos to his hard drive, so why should I be surprised that he wrote and published erotic stories? As I leafed down his story list looking at the lewd titles and brief descriptions of his literary efforts I told myself, \"I'm not surprised he read this stuff. That sort of matches his collection of smutty pictures and videos. But writing and publishing it? That's another step further into depravity than I thought he took. My, my.\" I was beyond being upset about Larry's secret depraved life. I had found I was enjoying it too much myself to be upset with him. But each new revelation came as a bit of a surprise. \n\nOf course Larry's stories were just like his pictures\u2014I couldn't resist reading them any more than I could resist masturbating as I looked at his picture and video collection. I opened one at random. I don't even remember which of the web site's categories it purported to be posted under. I can't think of a reason why I should have expected anything else, but I was still a bit shocked at the material Larry had posted. It was lurid. \n\nThe story I had chosen at random opened as follows: \n\nI awoke to the sensation of someone sucking my cock. I picked my head up and looked down to see a tangle of long blonde hair positioned over my crotch. She was on her knees, her head down hoovering my quickly hardening prick with her round ass in the air. I could feel her tits rubbing softly on my thighs. \n\nBut who was she? And where was I. I had gone to a bar the night before and had way too much to drink, but there was no memory of anything beyond the smoky bar. \n\nFuck, could she suck cock! Her tongue was rubbing the sensitive underside of my prick as she raised and lowered her mouth on it. When she reached the upper end of her stroke she let her tongue tease the end of my prick while her hands twisted and stroked my saliva-covered shaft. After a bit of this basic but talented cocksucking she adjusted her posture just a bit and, \"Oh Shit!,\" She took my prick down her throat. I could feel her nose buried in the pubes at the base of my prick. My cock, the part that was now down her throat, felt like it was buried in a hot, wet pussy. \n\nShe held my prick there, buried in her throat, for what seemed like forever, until she finally needed to breath. She pulled her head clear back from my cock and sat up using one hand to continue stroking my prick while the other pushed her hair out of her face. Now I could see her, but I still didn't recognize her. Her hair was a thick, unruly blonde mop that hung down to her shoulders. She had big soft tits that swung back and forth as she moved around. \n\n\"Hi,\" she said. \n\n\"Uh . . . Hi,\" I responded. \"Do I know you?\" \n\n\"Not really.\" Now she was jacking my cock with both hands. \"We met at River Street bar last night.\" \n\nThat was good. I could remember that River Street was the name of the bar I had gone to. \"Oh.\" I said. I was silent for a moment trying to remember more about the night before, but my headache and what this voluptuous blonde was doing to my prick was distracting me. \n\n\"I know this isn't going to sound good,\" I said, \"but where are we, and how did I get here.\" \n\nNow she was rubbing her nipples with the end of my prick. \"Mmmm. That feels good.\" she said. She was silent for quite awhile as she rubbed my cock against her tits. Finally she spoke, \"You're at my apartment. We came here last night.\" \n\nThere was more silence while she masturbated my cock between her big tits. Shit that felt good, but I still wanted to know how I got here. \n\n\"You promised me, you know,\" she said. \n\nOh oh. That didn't sound good. \"Uh, what did I promise?\" Not a good question to have to ask. \n\nShe giggled at my discomfort with my failed memory. \"You promised me you would fuck me. You also promised you would eat me until I screamed for mercy.\" \n\n\"Oh, okay,\" I said as a wave of relief flooded through me. It could have been much worse. \n\n\"And did I?\" I gasped as she dragged the head of my prick over one of her engorged nipples. \n\nHer face grew pouty as she responded, \"No. You passed out.\" \n\n\"Well,\" I said, \"if you'll give me a couple of ibuprofen and a cup of coffee, I'll make it up to you.\" \n\n\"How?\" she asked. She was still looking pouty. \n\n\"I'll fuck you 'till your ears ring\u2014in every room in this apartment. And I'll eat you 'till you scream for mercy.\" I was hoping she was the kind of girl who appreciated graphic dirty talk during sex. \n\n\"Okay,\" she said, still holding my hard cock. Her pouty look had disappeared, replaced by a smile. \"But can I get a sample now?\" she asked. \n\n\"What'll it be, fucking or sucking?\" I asked. \n\nShe rolled off of me, flopping on her back, her legs spread lewdly, and said, \"Eat me. Eat me 'till I cum and then I'll fix you breakfast\u2014with coffee. \n\n\"And ibuprofen?\" I countered. \n\n\"Yes. Now get between my legs and start licking.\" \n\nI sat up and crawled between her legs. I was on my knees and elbows with my face just in front of her pussy. My god my head hurt. But if this was what it was going to take to get some ibuprofen, I was going to get right to it . . . \n\nI was sitting before Larry's laptop in his office with my robe open and my legs spread\u2014I was so fucking horny! Dinner was out of the question. I wanted to read more of Larry's pervy writing. I got up and walked quickly to the kitchen to get a bottle of wine and a glass, my tits jiggling and my open robe flapping behind me as I walked. After opening a bottle of Sauvignon Blanc, I carried it and the cucumber back to the den. I poured myself a glass and sat before Larry's desk sipping the wine as I read story after story from his Literotica page. \n\nThey weren't great literature. The sentences were short, plots simple, or even nonexistent in some stories, commas seemingly random, and spelling shaky at best (didn't he know about Microsoft's greatest invention, spell check?). But Larry's stories had one redeeming quality. They provided graphic descriptions of a wide range of sexual activities and the emotions of the participants, and they made me horny as hell. By midnight I had consumed most of the bottle of wine and cum four times. I wasn't sure which was closer to being worn out, my pussy or the cucumber. Fuck, what an evening. \n\nThe next morning as I lay in bed before getting up to dress and go to work, I asked myself about the prior evening's new revelations about Larry's depravity. \"My god he had a dirty mind. But why didn't he expose me to that lewdly creative mind? I would have loved it. \" \n\n\"But would I really?\" I asked myself. \"I mean,\" I said as I continued talking to myself, \"a lot has changed in the last couple of weeks. Before Larry died you would never have walked around naked all over the house and masturbated in the back yard. Hell you hardly ever masturbated at all. The only thing you did less of was fucking with Larry. And if he had shown you his porn collection and his filthy stories, what would you have done?\" I asked myself. \n\nThat caused me to pause. \"Really what would I have done?\" I asked. After another long pause I admitted to myself, \"I probably would have screamed at him for being a pervert and made him sleep on the couch . . . or worse.\" \n\n\"Yes,\" I told myself. \"Things have changed. Now I enjoy his collection of depravity.\" \n\nAs I lay there, I began thinking about his stories. God they had made me horny. I asked myself ,\"Which one was the best? I mean the hottest. None of them could be called great literature.\" I remembered one in which he told of a couple that hooked up in a bar one night. \n\nAs I thought about that story I pulled my legs up and began to stroke my sex. My outer lips were quickly swelling and within minutes my juices were making me slippery. I let my fingers slide between my outer lips and begin to stroke my inner lips and slide into my fuck hole. \"Fuck hole?\" I said aloud. \"When did you begin talking like that Alice?\" I asked myself. \"Fuck it,\" I responded and shoved my fingers deeper into my cunt. \n\nThe story was told from the woman's point of view. She was married and on a business trip. While the smooth-talking man she had met in the bar was picking her up she was feeling some guilt about what she wanted to do (which was to fuck this guy). Of course, as in all stories of this nature, her husband was a lout who didn't even attempt to meet her sexual needs and treated her abusively. It was obvious Larry wanted the reader to believe his heroine was doing something very nasty, but totally justified because of her husband's failures. It helped me step into the woman's character as I read the story. He had done a nice job of having the heroine occasionally feel guilt about cheating on her husband and then quickly succumb to the charms of her partner for the evening. \n\nI thought about rereading the story as a whole on the tablet that lay on my nightstand, but I didn't have time. I needed to get up and get to work. But oh fuck I was horny. How had I gotten that horny so quickly just lying there thinking about one of maybe a dozen stories I had read the night before? ",
        "\"Fuck it,\" I said aloud. \"I can hurry.\" I pulled my knees back towards my hips and let them fall open. Then I yanked the sheet off with the hand that wasn't masturbating my pussy. Just as quickly I returned that hand to massaging my tits. Now I was lying naked on my back, my legs spread wide, and my knees pulled up so I was totally exposed. Two fingers of one hand were frigging my cunt while the other hand massaged my tits. I felt so nasty as I lay there masturbating and letting the hottest part of Larry's story run through my mind: \n\nHe was sitting in an armchair, his legs stretched out on an ottoman. I stood before him staring down at the lump in his trousers. It looked huge. He reached down and slowly stroked it. I licked my lips and stared. \n\n\"See something you like?\" he asked. \n\nI stared in silence while he slowly stroked himself. What was his name? I couldn't remember. When I responded to his question I said, \"I think so.\" \n\n\"Want to see it?\" \n\n\"Yes.\" I whispered. I shouldn't be doing this, I thought. But I need this. That worthless husband of mine . . . \n\nHe took a slow sip from the glass of wine on the table next to him, keeping his eyes on me, but letting them drop from my face to my tits. \"Okay,\" he said as he set the glass down. He slowly released his zipper and pulled his cock out of his fly. It was huge. Not fully erect yet but still big around and long. It lay sidewise like a log on one side of his groin. He idly stroked it in silence with his fingertips. It continued to swell. \n\nGod, he's just fucking huge, I thought as I stared in silence. I've never seen one like that except on porn sites. The hell with that stupid husband of mine. I want that cock. \n\n\"Take off your dress,\" he said. It was a command\u2014not a request\u2014but I wasn't bothered by his tone. In fact, I kind of enjoyed it. I could feel my pussy lips swelling beneath my panties and I knew I was getting wet, very wet. I wanted that cock. But, shit could I? Or would it just rip me in two. \n\nI reached behind myself and released the catch at the top of my dress. Then I pulled the zipper down enough so I could let the dress fall from my shoulders and my hips. It was in a pile at my feet. I kicked it away and stood before him wearing panties, a bra and the sexy high heels I had worn when I went out prowling to the bar. The panties were skimpy and the lacy bra nearly transparent. I cold feel my engorged nipples pushing against the fabric of the bra. \n\nHe was stroking his cock again. Now it was closer to fully erect. When he took his hand away it stood out from his groin, its angry red head pointing directly at me. I licked my lips as I stood indecently dressed before him and watched him slowly masturbating. \n\n\"Turn around,\" he said. Again a command more than a request. I did a slow turn on the tips of my toes, giving him ample time to look at my ass. When I finished I looked down at his cock again. It was sticking straight up, a gleam of precum on it's tip. God it was big. I wanted it to fuck me, but could I? Could I fit him inside me? \n\n\"Take off your bra.\" \n\nI did as instructed slowly, holding the cups up beneath my tits but not really covering them and then dropping it with a toss to the my dress a few feet away. I dropped my hands to my side and let him stare at my tits. \n\n\"Now your panties,\" \n\nI did as he commanded, maintaining my stare at his hard prick as I pushed my panties down my thighs and kicked them to the pile of my clothes. Now I was standing naked before him except for the heels and a string of pearls. \n\n\" He stared in silence as he continued to stroke his cock. \n\nI stood, my weight back on one heel, my hips open, feeling totally exposed. \"Do you like what you see?\" I asked. \n\n\"Turn around.\" \n\nI turned and then he said, \"Spread your legs apart and bend over.\" \n\nAs I leaned forward I felt my tits hanging down and swinging beneath my chest. I leaned forward enough so that I was sure he could see my hanging tits as he looked between my legs. It was a delicious sensation. \n\nBut he was also looking at my pussy that was fully on view in this position. \"You're wet,\" he said. \n\n\"Yes,\" I responded. I reached between my legs and dragged a finger between my pussy lips. It made me quietly gasp. I stood up and turned back so I was facing him. I walked to the ottoman, pushed his long legs to one side, and sat on the edge facing him. Then as he stared at me I raised my finger to my mouth and slowly sucked the pussy juices from it. \n\nHe put his big hand on my thigh and I let my other leg fall away from the edge of the ottoman. I was basically sitting on it with one bun, my legs open. It gave him ready access to my sex. He continued to stroke his cock with one hand while the other slid softly up my thigh until it reached my dripping pussy. He slid two of his big fingers into my cunt. I gasped again, and I saw his cock twitch. I was using my hands to hold my tits out to him and to rub the nipples with a fingertip or two. \n\nWe sat like that for a while, with him masturbating his cock with one hand and finger fucking me with the other while I played with my tits with my hands. I couldn't take my eyes off his giant prick. \n\nEventually I spoke up, \"You have too much clothes on. Take them off and let's move to the bed.\" \n\nI was masturbating furiously as I recalled the story and my pussy was dripping liquid on to the sheet as I fucked myself with three and four fingers. The story had a long description of the blowjob she gave him and his eating her to her first climax of the evening, but I didn't have time to recall all of that. Besides, I was getting close to a climax. So I skipped ahead in my recollection to the fucking. Her blowjob had not brought him to a climax, and after he had eaten her she was laying on her side slowly recovering from the mind blowing orgasm he had given her with his tongue. They were spooning, and he had a hand on her tits. She could feel his rigid cock pressed against her ass. \n\nHe reached down with one hand and lifted her leg and then began to press against her sex with his cock. \n\n\"Oh god you're big,\" she said. \"I want to, but I don't know if I can take you. Fuck, you'll split me in half.\" \n\n\"No,\" he said. \"We can make it work. We just have to take it slowly.\" He continued to press at the opening to her cunt as he talked. \n\n\"Let me be on top,\" she said. \"At least at first.\" \n\nHe rolled away from her and lay on his back, his rigid member standing straight in the air. She rose to her knees alongside him and then threw one leg over him and sat on his legs stroking the rigid cock that was pushing up towards her stomach. \"You can do it,\" he said. \n\nHow could she take him in? He was too big. She was sure he was. But she had to try. She rose up on her knees and moved forward so his prick was positioned just below her sex. She reached down with one hand grabbed his cock and positioned the head at the entrance to her cunt. God her fingers couldn't go all the way around it. Then she began to slowly sink down. It still wouldn't make it. \n\n\"Spread your knees further apart,\" he said as he put his hands on her hips. \n\nShe moved her knees apart a bit and as she did that he pushed down with his hands. She felt the head push past the opening of her cunt. There was pain and she cried out, but she didn't pull back. After the pain there was just the most amazing sense of fullness in the part of her cunt he had penetrated. She had never felt anything like it. \n\n\"Oh god! Good. So good,\" she said. \n\n\"Can you take more?\" he asked. \n\n\"Yes . . . I think I can.\" She let herself begin to sink down and there was mild pain as his monster slowly invaded the rest of her cunt. But each time she stopped, the pain quickly faded and her cunt felt so fantastically full. Finally she felt him push against her cervix. That was all there was. No more. For a long time she just let herself sit on him savoring the full feeling. She had never felt this before. Her husband and her other lovers were nothing like this. \n\nThen she felt his prick twitch. \"Oh! Yes! That's good,\" she said. \n\n\"There's more,\" he said. \"Rise up on your knees and then down again.\" \n\nShe did as he asked and began fucking him with slow, careful strokes. There was no pain now\u2014just the most fantastic fucking. As she got comfortable with her ability to accommodate his length and girth, she began to fuck him faster and faster, her head and long hair swinging to and fro and her big tits bouncing with her movements. \n\nShe felt another climax coming. She had never climaxed twice in an evening before. It built slowly, deep in her cunt, and then a sudden release that shot throughout her body. She screamed rigidly erect as the muscles in her cunt tried to crush his prick. After the waves of her climax finally stopped she collapsed forward on his chest, drained, with tears streaming from her eyes. \n\nHe let her lie there gasping until she got her breath, and he felt the muscles in her cunt relaxing. \n\n\"My god,\" she whispered when she was finally able to talk. \"I never . . .\" She couldn't find the words to describe her orgasm. \"I never . . .\" she repeated, still at a loss for words. \n\n\"Shall we try another position?\" he asked. \n\nShe sat up quickly and felt her movement push his hard cock back into her. \"Oh!\" She gasped. She sat fully impaled on his prick and shook her head to clear it. \"Sure,\" she said. \"You haven't cum yet, have you? How would you like it? Do you want to fuck me from behind?\" \n\nThere was a lot more to the story, but I couldn't delay. I was so fucking close, and besides, I had to get to work. He fucked her in a bunch of positions making her cum several times before he eventually came with his cock pointed at her spraying buckets of cum on her face and tits. \n\nI remembered the cucumber I had used after reading Larry's stories the night before. It was lying on the floor next to the bed. I reached down and grabbed it and shoved it into my steaming cunt. Then I fucked myself to a climax while I let the finish of the fucking scene run through my head. I could almost feel shot after shot of her lover's hot cum splashing against my tits, my throat, my face and even my hair. I screamed as I felt my climax roar through my body and my cunt clamping down on the cucumber. \n\n\"Wow! I said as I lay there recovering. Then I quickly jumped from the bed and headed for the shower. No more time to waste. I had a full class of 7th graders that would be waiting for me in forty-five minutes. Oh, and I needed some ibuprofen to help with the headache from the wine I had consumed in lieu of dinner the night before. As I drove to work the question that kept running through my mind was, How could my mild mannered late husband write anything as hot as the story I had masturbated to this morning?"
    ],
    "authorname": "Bluepen451",
    "tags": [
        "exhibition",
        "masturbation",
        "fucking",
        "fellatio",
        "submission",
        "wet pussy",
        "porn stories",
        "finger fucking"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/descent-into-depravity-ch-02"
}