{
    "title": "Book 02: A Match Made Ch. 05",
    "pages": [
        "<center>\"Separation Desolation -- Chapter 05\"</center>\n\nNote 1: Please be aware that this story is plot driven and sex is not the central focus.\n\nNote 2: It's highly recommended you read Book I in its entirety. I hope you enjoy the chapter. ~ AVL ~\n\n*\n\n** December 28th **\n\nKara\n\n\"Hiya sis. I'm about five minutes away, if I'm going the right way that is. I'd get lost going down the street without GPS.\" \n\nDestiny laughs and says, \"I'm sure you're fine. When you see the building, pull into garage and drive straight back. I'll be waitin' for ya.\" \n\n\"Yeah okay. Glad one of us is confident. See you in a few, hopefully.\" I said the last as I hang up. It makes me nervous to be on the phone while driving. I don't need any extra help getting lost. 'In one thousand feet, your destination will be on your right.' I sit up straight and focus on the buildings coming up. This should be it; I pull in and drive back. As promised, Destiny is waiting. Bundled up in a sweater and scarf, I can still make out her electric smile. I wave and pull in where she's pointing. I hope one of them didn't have to give up their spot for me. \n\nBefore I can even get my hand on the door, Destiny pulls it open and is jumping up and down. I'm sure it's because she's cold; it's frigid out. Yep, her shaky voice proves it. \"Brr, hurry up you! I'm going to turn into a popsicle.\" I'm laughing as I get out and pull her into a hug.\n\nClosing the door, I pop the trunk and grab my bag. I packed light. We rush to the elevator, shivering and giggling. Call it a sense, but something tells me Destiny and Shade have had their fun in here. Maybe it's because I know what Lissy and I get up to when we go to my condo. My legs get weak. Flashes of my nightmare tear through my mind and I visibly shiver; not from the cold. \n\n\"You okay Kara?\" Yes! I shake away those thoughts. That's not me anymore.\n\n\"Yep! I was just thinking about what happens in these elevators.\" Destiny blushes. I smirk and say, \"Mm hmm.\" She punches me in the arm, ouch! \"Okay brat, don't act any guiltier.\" That got a laugh. She's so busted!\n\nThe door dings as it opens to their floor and we step out. As we walk the short distance to the condo, I'm getting anxious. This is so infuriating. I don't know where it comes from. One minute I'm fine and the next it feels like my insides are trying to get out. Did I take my pill this morning? My mind starts racing. Stop it Kara! Calm down, please. Destiny's hand in mine brings me back. She ushers me the rest of the way and into her home. I take it all in, it's beautiful. Classy and comfortable. You can see the Shade and Destiny influence throughout. Their styles combined are breathtaking, just like they are. I get the nickel tour and we end it in Kim's room, where I put my stuff down.\n\nDestiny has this way about her. It's difficult to put into words but she's unassuming. Quiet at the right times and speaks up when needed. She's intuitive and refreshing. Okay, I guess I found a few words but I'm still not sure if it does her justice. Either way, I adore her. \n\n\"I'm not putting Kim out am I?\"\n\n\"Nope, not at all. She's with her Honey.\" She stops for a moment; I feel her eyes on me. I'm sitting on the bed with my eyes closed. \"You know... your honey slept in here not too long ago.\"\n\nThat gets my attention. My head whips around to her. \"Oh yeah? When was that?\"\n\nHer face fell just a bit; obviously remembering something. \"Umm, the night you were in jail. She stayed with us so she could be close by.\" I nod and my mind wanders. All of this was going on and I had no idea. Many times I felt Lissy had stopped loving me or caring and all along she was right there waiting. Oh baby, I'm so sorry. I rub the comforter subconsciously, trying to touch her. I didn't want to tell her this morning but I didn't want her to go. Since we've found each other again I can't stand to be apart. I knew she needed this time with Jenna though and I've been selfish enough.\n\nFingers in my hair; stroking gently. \"You miss her already.\" It was a statement by a woman in love and in tune with another's feelings. I nod and force a grin.\n\nDestiny pulls off her boots and places her feet next to me. I look down and giggle; she's wearing the silly socks I got her for Christmas. She wiggles her toes for added effect. I look up; her green eyes are smiling back. I say, \"You're a nut, you know that?\" \n\n\"It's great isn't it?\" She's too much. I nod and pretend like I'm going to tickle her. She flinches. Uh oh, we have a ticklish one. \"Uh uh. There will be none of that!\" I move maybe an inch and she flies off the bed. Wow! \"Stop it!\" We're both laughing, hers with a hint of nervousness.\n\n\"I didn't even touch you.\"\n\n\"But you were gonna, I could tell.\" Her arms are crossed over her sides. There has to be a story behind this one. I leave it though; she's too cute to torture.\n\n\"You're too funny.\" She sticks her tongue out and leaves the room. I giggle louder as I stretch out on the bed. I could get used to this friend thing. She expects me to follow after her, but I'm not going to do it. A 'little' torture never hurt anyone.\n\nAfter about fifteen minutes go by, I realize that my 'sis' may be just as stubborn as me. Nope, I stand corrected. I hear the bells approaching. Just then her head pokes around the corner and she says, \"You are such a brat!\"\n\n\"Point?\" I got that one from my baby.\n\nShe grunts and gives me her fake mad face. \"Just get up and come in here.\" She pretends to storm off. \n\nOkay fine, I guess I could be a good guest. I take off my shoes, put on my own pair of fuzzy socks and head to the main room. Now I feel like a jerk face. Destiny, true to her form, has popcorn and drinks set out on the table in front of the couch. She's sitting cross-legged and snuggled under a blanket. I smile at her as I walk in; a blanket is folded and waiting for me on the opposite side.\n\nI unfold it as I sit and wrap it around tight. There's a slight chill in the air. She sits, waiting for me to admit that I am indeed a jerk face. Instead I go with honey, saying, \"You are such a sweetheart, Destiny.\"\n\nSmiling, she shakes her head. \"I know.\" Touch\u00e9 missy. I poke my feet out towards her and wiggle my toes. We both start laughing. Not this again, who knows if we'll stop. A few minutes of our usual silliness goes on and Destiny clears her throat. \"We don't have to talk about you today, if you'd prefer. I'm sure you're about talked out.\" No truer words. Relief washes over me. As much as I wanted to come stay with her, I wasn't looking forward to revisiting my demons.\n\n\"Thank you. You are so right. I could use a break.\"\n\n\"Thought so. How about we watch a movie and just chillax?\" Chillax? Must be from having Kim around. You start trying to use the words of the youngins, hoping you're not getting old. Not to be outdone, I have one of those feeding me too. \n\nWhat did Rach say the other day? Oh yeah. \"Yup, totes.\" She snickers, grabs the remote and popcorn. Throwing a couple pieces at me, she starts the movie. And she says I'm the brat? I'm going to just ignore her. Yes! 'The Heat.' I love this movie. Just what I need. Totes! I giggle. More popcorn comes flying at me. I pretend not to care and just eat what has fallen on my lap, keeping my eyes on the TV.\n\nHave you seen the movie? There's this one part where Sandra Bullock and Melissa McCarthy are dancing in a dive bar. It's priceless. Well, we just can't resist. As soon as it starts, we get up off the couch and join in. Destiny is shy at first but when she sees me being a goofball, she's quick to let loose. \"Groove is in the heart... Ah-ah-ah-ah.\" I sing it loud and proud. Pump it, yeah pump it. One way then the other. Walk it, uh huh. She's giggling so hard, her dance moves are suffering. Which of course makes it even funnier. \n\nThrough her laughter, \"I smell bacon!\" Oh lord... I burst out laughing. My hands go to her hips, train, train, come on, let's do it! No longer paying attention to the movie, we're doing the train all around the condo. Screaming in unison, \"Woo Woo!\" If you can picture two grown women, sober mind you, dancing around with fuzzy socks and laughing like teenagers; well you'd be damn close. If you don't know any of the aforementioned movie references, do yourself a favor and watch the movie. Kara says so.\n\nWe end up a heap of girls and giggles on the couch. First attempts to speak are pointless; more giggling. I think I've calmed enough. \"When you...\" a bit breathless, \"said 'I smell bacon', I...\" damn it, I'm laughing again. Destiny, still way out of control, nods her understanding. Both of us are holding our aching sides as tears stream down our faces. I need to fast forward ten minutes or so. Otherwise all you'll be reading is about us giggling, trying to talk and giggling more.\n\nMy phone started vibrating on the table. Oh shit! Got so caught up, I forgot my baby was going to call. Par for the course, my heartbeat quickens when I answer. \"Hi baby!\" Laughter still on the edges.\n\n\"Hi lover. I can tell by your voice that you two are already at it.\" Can't get anything past her.\n\n\"You'd be right, but it's all her fault... ouch! She hit me!\" I glare at Destiny who sneers. Yeah right, we giggle. \"How was the flight, honey?\"\n\n\"Uneventful. I'm waiting for my bag and then I'm going to meet Jenna outside. I told her not to come in since she has Ella.\" I could hear she is a bit anxious. Probably the crowd at the airport; that will do it to you.\n\n\"Good idea. Give them kisses from me and some extra for chubby cheeks.\" She let out a sigh, relaxing. Good.\n\n\"Thanks lover. Just hearing your voice... well, I miss you already. Are you sure you were okay with me leaving?\"\n\nI lie and say, \"Absolutely.\" Crap, too confident.\n\n\"Kara Ann?\" Damn, she knows.\n\n\"Look baby. I hate that you left, but you needed to. Jenna is your child, she needs her mom. I'll be okay. Just promise me that when you get home, no leaving for a long while.\"\n\n\"Oh sweetie, I promise. There's my bag. Kisses and I love you. Call me when you settle down for bed.\"\n\n\"I will. Love you too, bye.\" And just like that, the call is over. I sit with the phone resting on my tummy while I think about my Lissy. My fingertips brush the phone. I have this touch 'thing'. Not sure how to explain it. Self suggestible? I feel her.\n\nDestiny chimes in, \"Lissy get there in once piece?\" I smile and look over.\n\n\"Appears so. I hope her and Jenna have the time they need.\" I do, really. She nods and offers me the bowl of popcorn. We're cuddled up again under blankets watching the movie. It's a welcome distraction. As it is with most times I watch a movie, at some point I fall asleep.\n\nWhen I wake, Destiny is gone and I hear her in the kitchen. It gives me chills. Trivial things like that bring memories of Alexis and Veronica surging to the surface. It besieges me, keeps me captive. I'm standing behind Alexis, paralyzed and staring at the knife. Don't do it Kara! She's not worth it. I did do it though. I grab it, stick it to her throat, intending to harm her. The blood is bright red as it spills down the blade.\n\n\"Hey sleepyhead.\" I shake my head. Why did I let myself go there? I crane my neck to look at Destiny, who has on an apron, spackled in flour.\n\n\"I know, right? That's me and movies. It's why I have to watch them several times.\" I smirk at her appearance. \"And what are you up to?\"\n\n\"Come find out,\" she replies and walks back into the kitchen. My curiosity is getting me. Not that I don't think Destiny can cook, it's just she keeps surprising me with her kindness. Yumminess wafts out as I walk in. Oh my, one of my favs. Chocolate chip cookies are cooling by the oven. Focusing on the prize, I head over and start to grab one. She slaps my hand! This one is violent! Is it wrong that it turns me on? Probably. \"No cookies til after lunch.\"\n\n\"Yes ma'am!\" And bossy.\n\n\"Good girl.\" My eyebrows arch as I give her the 'really?' look. Stone faced, she nods. Shade is a lucky lady. Just sayin,' don't read anything into it.\n\nEyeing the pot on the stove, I pick up the lid to take a peek. Mmmm Gumbo! \"Destiny, yuuuumm! I love me some gumbo!\" She laughs.\n\n\"Well good, cuz that's what we're having.\" Where did this Destiny come from? She's a woman of many layers. \"Take a seat, the rice is almost ready. Do you want some iced tea or water?\"\n\n\"Tea please, no sugar.\" When the rice finishes, we chat and eat. It's casual and the gumbo is delicious. Don't tell, but I had seconds. She is thrilled I like it and brings me two cookies as I clean my plate. \"You cook and serve. A girl could get spoiled.\"\n\n\"Don't be too impressed; you're doing the dishes.\" Of course I am. Stuffed, I manage to get them done without too much trouble. She can cook almost as well as she can make a mess. How did she use this many pots? Time flies by as I wash and she loads the dishwasher. We're both quiet. I know who I'm thinking about. I wonder if she's thinking about her lover. Her shy smile says yes.\n\nThe last of it done, I dry my hands and lean on the counter. \"That was delicious, thank you. I'm not sure I'll be able to eat dinner or breakfast tomorrow, for that matter.\"\n\n\"Don't say that. Shade called while you were dozing, and said she's bringing home dinner. Trust me, that girl can order some take out.\" I smile. No doubt that's true. I'm under the distinct impression Shade does a lot of things well.\n\n\"Speaking of dozing, I think I'll take a nap if that's alright.\" If my tone concerns her, she doesn't mention it. I'm suddenly in need of my bed and alone time.\n\n\"Not at all. If you want to shower or freshen up after, the bathroom is fully stocked. You'll find everything you need and if you don't, just let me know.\"\n\nOn autopilot to the bedroom, I mumble, \"I'm sure it's fine. Thanks.\" I pull out my prescription and count the pills. I can't remember if I took it today. My hand is shaking; what the hell? Forget counting, I need one. I fill the cup by the sink and swallow it. The glass clinks a few times on the counter as I set it down. Looking in the mirror, I try to look deep. Have you ever tried to see your soul in the mirror? It's there, in your eyes. I stare until my eyes glaze. It starts in my peripheral vision, the blackness. Creeping slowly until all I see is the dark. Tears sting while I force my eyes to stay open. Look deeper Kara. Nothing is all that resonates, emptiness. I swallow hard; I'm frightened.\n\nWalking from the bathroom I dig for my phone in my pocket. I don't have to scroll; her number is at the top. \n\nDon't call. \n\nI need her. \n\nNO! Plastic flies everywhere as my phone is thrown into the wall. \n\nDamn it! Why did you do that? I collapse on the bed and pull the pillow against me. \n\nYou have to stop. You can't let it win. You are stronger than this. \n\nA gentle knock on the door and a soft voice asks, \"Kara? Are you okay?\" Great, nice job.\n\n\"I'm fine,\" feigning confidence. She must have bought it because I hear her walk away. I haven't fooled myself though. I decide it's okay to cry. I do, until I fall asleep.\n\nHushed voices are outside the door. Rolling over to look at the clock, 7?! I had no idea. I listen closer, it's definitely Shade and Destiny and there's tension. Not again. I'd become used to this living at Barb's. Certainly I haven't worn out my welcome already? I sit up slowly, feeling a headache looming. Yep, I knew it. It's hiding out behind my eyeball, throbbing and ready to attack. I close one eye, which seems to help, and make my way to the bathroom. \n\nDeciding to take a quick shower, I turn the water on and undress. No mirror, just get in. The first thing to hit me is the steam. I breathe in deep, close my eyes and put my head under the hot water. Ahhh... so nice. Wash it all away Kara. Keeping my eyes shut, I feel around for the soap. Not sure except for the smell seems right; I squeeze it into my hand. Luxuriating in my touch, my hands rub up and down my body, cupping my breasts, rolling my nipples, down my stomach, over the tops of my thighs and back up the insides. Oh Lissy, I need you baby. Moans get lost in the water as my fingers slide between my outer lips and brush over my clit. My hips jerk at the contact. Ohhhh... I want to so badly, but yearn for my baby. I pull my hands away and wash my hair; I can wait. As I dry off I look for some Tylenol. Aleve is in the medicine cabinet; that'll work.\n\nLeaving the bathroom, I step on something small and hard. Owie! I hop to the bed and look back to see what it is. Shit, I forgot about my tantrum. I can't wait to explain this one to Lissy. I sigh and take the time to pick-up all the pieces. Who knew a phone was so fragile? I'm relieved I only made a small mark on the wall. Dumping them on the nightstand, I'll deal with it later. \n\nSweats, a t-shirt and slippers should be acceptable. I dress quickly and open the door. Destiny is right outside as if she's been waiting. \"Damn girl, you're good at scaring me. Is something wrong?\"\n\nShe reaches for my arm. \"Kara, I wanted to wait here for you. We have a... a guest.\" Can you be more cryptic? She gives me a nice but fake smile, then continues. \"Follow me.\" Okay, now I'm worried. I do as she says, albeit hesitantly. When we round the corner of the hallway to the dining room, I see Shade and another woman sitting in the living room. Wait, that's...oh god. My legs get wobbly. Destiny stops, grasps my hand and urges me forward. She may be dragging me because I can't tell if my legs are moving. When we reach the couch where she's sitting, my head is down. I can't look at her. I'm ashamed. After all she's done for me, after she took me to the club, after I promised her I wouldn't do exactly what I ended up doing. \n\nDestiny releases my hand and joins Shade on the loveseat opposite us. All eyes are on me. They are boring in, exposing me. It's awkward; they're apparently waiting for me to do something. I want to crumble where I stand, disappear somehow. Instead my body decides to take over and brings me to my knees. I don't dare touch her, I don't deserve her touch. She's only a few inches away, her essence breathing life into me. When she lays her hand on top of my head, it startles me. If her touch is gentle, her tone is quite the opposite. It commands my attention. \n\n\"Kara, get off your knees. You will sit next to me and pick your head up.\" No hesitation, I rise and promptly sit next to her. Back straight, hands folded on my lap and head mostly up. She grabs my chin and lifts until I look at her but doesn't let go. \"Better.\" Her eyes are cold. I brace myself for what I know is coming. Her hand drops but my eyes don't dare. It's not fear (maybe a little), it's respect.\n\n\"Shade has filled me in on most of what has gone on. To say I'm disappointed would be a colossal understatement. I warned you about what would happen if you went back to someone like Alexis. I warned you that if you kept up your destructive behavior, it would lead you to darkness.\" I sat stock still, ashen faced. Kelly's words were delivered softly, with the impact of a sledgehammer on glass. \"You not only belayed my warnings, but you made a fool of me, Kara. You promised me you would not give into your masochism. I brought you to the club as my guest; I trusted you to your word.\" My eyes fell as the tears start. They are tears of anger - with myself. \"Don't you dare. Look at me.\" I blink as I look up, clearing my eyes. My chin is quivering, breathing labored. The onslaught continues. \"Save your tears. Save your self-pity. You knew where the road would lead and you ran down it full speed.\" I don't know which is larger, the lump in my stomach or my throat. I've experienced many kinds of pain, but this is excruciating. Every word cuts deeper. I haven't made the mistake of looking away but I can barely see. The tears, I can't stop them. Anger and disgust are overwhelming me. ",
        "She turns to Destiny. \"Darling, bring me a damp wash cloth would you?\" I didn't hear the reply but caught her movement in the corner of my eye. Back in only a few moments, she motions for Destiny to hand it to me. I take it gratefully, wiping the film of ick from my face. The cold cloth feels wonderful. \n\nNow able to see again, I reluctantly look at Kelly. Her eyes soften. \"You may have shown weakness, but you are NOT weak. I'm here because I want to help you, Kara.\" The flood gates are opening again, tears falling freely. I cannot begin to explain what those words mean to me. After all I've done, after I've disappointed her, embarrassed her, she still wants to help me. Kelly continues, \"The night Alexis beat you unconscious, I've rarely witnessed such strength. A submissive is a treasure and she did not deserve you. Then after you came to me, broken, I gave you the tools but YOU built yourself up again.\" Her words are filling me like an oasis in the desert. I wipe my tears with the back of hand, my inner strength pushing to the surface. Kelly smiles, my heart swells. \"Now you listen to me. The drugs they had you strung out on, I've had experience with the withdrawal. You can't just want the side effects to be gone and they magically disappear. This is serious, Kara.\" I nod, tuning into every syllable. \"I'm told you've been given another chance with your love. Don't take it lightly, get the help you need.\" I nod again. \"I need to hear you say it, Kara.\"\n\nClearing my throat, unsure if I'm able to form a complete thought, I reply, \"Yes, Mistress Kelly. I will do any and every thing I need to... I can't... I won't lose her again.\"\n\n\"She's a driving force but you need to do this for you too. There's a reason you feel the need to be punished, to feel pain. It goes beyond your break-up or depression or even the drug use. It's inside of you Kara, want it or not. What you choose to do with it is entirely up to you. You need professional counseling and detox. You may think that a couple of good days mean you're okay, but you would be sorely mistaken.\" She's right; I know this, but a hospital? The thought frightens me. My doubt must register in my expression. Kelly asks, \"Kara, what scares you more, getting help or losing yourself or Lissy?\" She knows my answer. \"After you get your mind and body symbiotic, you can begin rebuilding your life. Your life with your lovely Lissy.\" I smile, that's all I want. She reaches for and clutches my hand. Tingles are cast all over my body all at once. Yes, with just a touch. \"I care for and about you. I wouldn't be here if that weren't the case. After you get things square, please ring me. I'll be checking in on your progress. And, Kara?\"\n\n\"Yes Mistress?\"\n\n\"Do NOT disappoint me again.\" I shiver. I think I'd rather die. She's right though, words aren't enough. I need to prove it to her, to myself and to Lissy. She releases my hand and stands. \"Shade, Destiny, thank you for inviting me to your fabulous home.\"\n\nShade stands and offers her hand. \"The pleasure is mine. I'm in your debt for coming on such short notice. I knew this would work best as a fait accompli. I hope next time we'll meet under happier circumstances.\"\n\nHer smile is radiant as she leans to kiss Shade on one cheek then the other. \"Indeed. I'd love to have you and your Destiny over for dinner one evening.\" Her hand outstretched towards Destiny, who quickly accepts. They hug. I'm frozen to my seat, unsure what's expected of me.\n\nPeeking over Destiny's shoulder, she smiles softly. \"Kara, darling, come here and tell me goodbye.\" I jump to my feet and hurry over. Her hand brushes my cheek as she says, \"You be the good girl.\" More tingling. \"Next time we see each other, I expect to meet your Lissy.\" Have I mentioned how silky her voice is? Well, when she's not scolding you.\n\n\"I'd like that very much, Mistress.\" This next part I needed to say. \"I'll make you proud of me.\"\n\nMatter-of-factly, she says, \"Course you will.\" And like that, she's gone.\n\nWhat follows is an uneasy silence, broken by dear Destiny. \"Who's hungry?\" We all giggle and follow her to the dining room.\n\n** December 28th **\n\nLissy\n\nAirports suck, TSA sucks, flying in winter around the holidays is a god awful thing to endure. The flight time is so short that it's like up, level, down, land. Here's your bag of peanuts; have a nice day, we appreciate your business. UGH!\n\nMy daughter is beautiful even if it's Minnesota winter and she's all bundled up. I get to preen; after all... oh never mind.\n\nHer arms around my neck after my stuff was in the trunk, she said, \"Thank you so much for coming. I love you.\" Tears!\n\nSniffling, I said, \"I love you too. I miss you all so much even though I know you all did what you had to for your future.\"\n\nShe sighed and said, \"I guess this is like pregnancy. You hear what it will be like but you have no clue until it happens.\"\n\nGod it's great to have adult kids. Life has a way of edumakayting kids in ways that parents and school can't begin to!!\n\nYes I called Kara. She loves me. Jenna and I talked as we wound our way through traffic to wherever we were going.\n\nDon't you hate being in someone else's city, in their car, not knowing where in the hell you're going?? I mean -- adults, right? We pretty much like to have some measure of control of things big and small. And why is it different if you're in a cab or hotel bus in a city you don't know? These are the sort of random thoughts that can occur when you're going somewhere and you have no idea where that 'somewhere' is. Thank you. I'll stop now.\n\nThe house was beautiful. Brick! Way to go Jenna and Ian. It's pretty inside; warm and inviting. I was proud of my kid.\n\nAs if she knew what I was thinking, Jenna said, \"We really got lucky with the realtor we used, Mom. We couldn't spend too much money with all the bills but we wanted 3 bedrooms and we wanted brick. I used a lot of the same pictures and other stuff I had in the house in Chicago and added here and there as I've shopped.\" \n\nI could see some of the differences; there were also some things that also told me my daughter missed Chicago. There was a fabulous picture of Navy Pier right before sunset, taken from the lake side looking west. \n\n\"Ian called and said he'd be home in time for dinner, Mom. He has tomorrow off, too.\" Oh?\n\nJenna and I sat and talked, mostly about what was happening at home. Naturally the conversation focused on her brother and sister. I gave her lots of detail about Christmas and more. Jenna was astonished when I told her about Andi.\n\n\"I know, honey, we all were. All I told her was to watch us and make her decision based on what she sees, not what she's been told.\" I shrugged. \"She was great the rest of the night, too; said goodbye to Kim, Honey, Shade and Destiny. It was more than just words too. She hugged them all.\"\n\nJenna shook her head. \"Wow! Maybe she finally figured out that we aren't sinners, just women who love a woman.\" I laughed; Jenna was embarrassed at her faux pas and shook her head again. \"God, that was embarrassing.\"\n\n\"It was an easy mistake to make, sweetie. I knew what you meant; it was just funny to hear you say those words.\"\n\nWhen we got around to Kara, I did my best to tell her as much as I thought I could. She pulled back a bit when I told her about the shock of that miserable Friday. She actually cried a little when I told her a little of what she said about Becky.\n\n\"That's disgusting, Mom. I feel so bad for Kara for having to go through that.\"\n\n\"I cried too, honey. I've realized my part in driving her away; let me tell you that was not fun!\" Jenna took my hand.\n\n\"Mom, I learned a long time ago you're not a super hero.\" I feigned surprise and hurt; we both laughed. \"You may have made a mistake but I know in my heart it was an honest one. Certainly it wasn't done maliciously. You love Kara way too much to hurt her on purpose.\" I tried to hold back the tears but it was pretty hopeless. Jenna held me as I cried.\n\nAnd right in the middle of that came this. \"Momma!\" I sat up; mother and daughter smiled at each other.\n\n\"Let me change her diaper and clothes too. You probably don't want to see her in her jammies.\"\n\nI laughed. \"Silly girl, of course I do. I'm sure they're warm enough; I'm fine with jammies. Go!\" She bounded up the stairs and was gone for a few minutes. I heard Jenna's voice, giggles and a screech, which let me know she had told her little treasure that 'Grammy' was here. I stood when I saw them at the top of the stairs. Little arms flailed with unbridled joy. How do you not smile at such innocence!! \n\nWhen they reached the bottom of the stairs, Jenna put Ella down and handed her a doll. She came running, saying, \"Grammy, Grammy.\" I swept her up in my arms and drowned her in kisses to the accompaniment of shrieks of joy.\n\n\"Did Santa bring you this, sweetheart?\" She nodded vigorously and said what sounded like yes. \"Will you show me what else Santa brought you?\" She took my hand and marched me to the tree. We sat and she showed me some adorable and interesting toys like a Little Tikes 'Play Cube'. It has some cute features that should keep her interested, but the one she loved was the little mirror. She picked it up and pointed. I held it so that my face was showing. \n\nElla giggled and said, \"Grammy.\" When I held it in front of her face she said, \"Baby.\" Too cute.\n\n\"I'm going to start dinner, Mom, and let the two of you spend some time together.\" We played. There were blocks. I showed Ella how to stack one on top of another. I managed to get it five high before she knocked it down and laughed when I made a face.\n\n\"Does Ella want to try?\" Giggles and 'yes' followed. She got three on top of each other; the 3rd one perched rather precariously, which didn't bode well for the next one. As I suspected, it fell. \"Uh oh, it fell. Try again?\" She got four up okay; the 5th didn't work and they tumbled. She looked at me; I shrugged and put my hands in the air, palms up. She got up and ran, calling for her Mommy. I'm a little out of practice with 20-month olds it seems.\n\nIan saved the day when he came in through the garage. I stood and waited while he took off his outer wear. I kissed my son-in-law and wished him a Merry Christmas.\n\n\"I love the house, Ian. It's every bit as cozy and inviting as your home in Chicago. Jenna and I were visiting until the baby woke. She and Grammy were playing. She's in the kitchen now with Jenna.\"\n\n\"She was pretty upset about Christmas, Mom. I wasn't very happy either but at least the accidents didn't keep me there all night. We were able to have a bit of a delayed holiday. And I'm off tomorrow.\"\n\n\"Jenna told me. I'd like to go shopping with her and maybe do some girly things like making us beautiful.\" He laughed good naturedly. \"That okay with you?\"\n\n\"Absolutely! I don't get to spend near enough time with my daughter. You two go out and have a gay old time.\" I know he didn't mean anything by it. He caught himself. \"Oopsie! I didn't mean to offend.\" \n\nI pinched both of his cheeks. \"You've both done it since I've been here.\" He looked startled -- whether it was my cheek pinch or that Jenna had said something a bit off, I didn't know and didn't care. \"Let's try and keep it a secret, shall we?\"\n\n\"Keep what a secret? That we're having a mom-daughter day tomorrow?\" Brat has a Mom's hearing all right!\n\n\"If you don't sass me you might even get me to pay for it. Do you have somewhere you go to fairly regularly?\"\n\nShe smiled and said, \"I've already called and we're set for 10:30.\" \n\nI laughed. \"That was fast.\"\n\nDinner was excellent. Lamb chops (!!), au gratin potatoes, peas, and a salad.\n\n\"Is that Worcestershire sauce I taste in these delicious chops?\" \n\nJenna blushed and said, \"It's a really easy recipe, Mom. Eggs, the sauce, and bread crumbs; the first two get whisked in a bowl. You dip the chop, put both sides in the crumbs, and put it in a baking dish. It's really simple; one turn after 20 minutes and it's ready in another 20.\" Who knew?\n\n\"It's hearty and filling; perfect fare for a winter dinner.\"\n\nAnd so it went. I helped Jenna clean up while Ian entertained his daughter. We sat and chatted until it was time for Ella to get put down for the night. After the cutest baby kisses to Daddy and Grammy, Jenna announced she was giving Ella her bath and putting her to bed.\n\n\"Would you mind if I did the honors? It's been forever since I've done a bath with someone her age. I kinda miss it.\"\n\n\"Ella, is it okay if Grammy gives you your bath tonight?\" \n\nShe leaned out of her mother's arms, fingers wiggling, saying, \"Grammy, Grammy.\" I'm blinking back tears as I write.\n\nHer room was set up a little differently but I managed. We laughed as I undressed her; I'd started the bath water already. She sat up like a big kid in the tub after I had tested the water. I used my hands to bathe her. You forget how soft their skin is at that age. There's no muscle tone to speak of yet. Ella splashed and squealed just like Kara and I do. Kinda.\n\nWashing her hair was interesting. A little shampoo goes a long way on such fine hair. Ella squeaked when I used my nails on her scalp. Note to self: What feels good on an adult is not so good on a little one. I put her little hands over her eyes when it was time to rinse. \n\n\"Grammy is going to get rid of the soap, precious.\" I have no idea if she understands; I doubt it. Jenna has a 16 ounce cup she keeps on the corner of the tub; I assumed this was why. I put my hand on her brow when I poured warm water on her head. We seemed to be okay; there were no tears.\n\nI dried her on my lap. The little darling was more interested in cuddling than in being dry. Those special pieces parts take some delicate drying let me tell ya. Thankfully I'd had two previous test dummies to perfect my craft. Wondering why I said two? Jenna and Rachel were born years apart -- they're close now but... not so easy for Mom to re-learn everything.\n\nI'm old fashioned; my daughter isn't. Fake diapers if you're wondering. Every woman does it the way they want. One bonus was I didn't have to worry about the pins. Talk about guilt! I nearly drowned my precious Ella in baby powder. Even I coughed. Snug as a bug in her jammies, I picked up the sleepy eyed beauty and carried her to bed.\n\nI kissed my granddaughter and said, \"Grammy loves you, Ella. Sleep tight and don't let the bed bugs bite.\" I put her on her side and pulled the blankie over her. How in the hell does mickey not know how 'blankie' is spelled!! I mean really.\n\nThe smile on my face must have been ear-to-ear. My daughter said, \"Feels like the first time all over again, huh?\"\n\n\"Yeah, it really does. Sorta like the riding a bicycle thing I suppose.\"\n\nWell anyway, we chatted for a while and I finally said good night to my daughter and her hubby. If any one you are wondering -- Ian's a good man. He loves my daughter from everything I've ever seen and he loves his daughter. What else is there for me to know? If she's happy I'm happy right? Thank you! Good night Minneapolis.\n\n`\n\n** December 29th **\n\nLissy\n\nSunday came early. I heard giggling and \"Grammy, Grammy.\" I rolled over and picked the little darling up and put her on my lap. She was totally not interested in cuddling. \"Play.\" Oh gawd! What time was it? 7? In the morning? On a Sunday? How did I survive?\n\nHow do you explain to a 20 month old that you need coffee? That you need to use the bathroom? Thankfully my daughter seemed to know about the former -- she handed me a steaming cup of liquid heaven.\n\n\"Come on Ella, Grammy will be ready to play in a few minutes. We can go make breakfast.\" I think I heard 'Cheerios.' \"Yes honey, you can have Cheerios today.\" She winked at me and left. What time does my flight leave today? Hee hee.\n\n'Brekky' was fine. Ella pitched a hissy when she figured out that Mommy and Grammy were leaving. Poor Ian was starting off at a deficit with his nearly 2 year old. I can tell you that the terrible twos can come early. I'm not telling you which of the little darlings were the worst.\n\nWhile Jenna was getting ready to leave I had a few minutes alone with Ian. Well, Ian and Ella. Anyway, I said, \"While we're gone, I want you to make a dinner reservation somewhere real special.\" He looked puzzled. \"I'm babysitting for my granddaughter tonight while the two of you have a night together out of the house. And I do NOT want you to let your wife hurry the two of you home after dinner, young man.\" He got a sly smile on his face. \"That's right. Go see a movie, go dancing, go out and have some fun -- whatever the two of you want to do that you might not have done much of since the baby was born.\"\n\n\"Wow, thanks Mom. I should be able to figure out somewhere special. We haven't gone out much since we moved, except for some fast food now and then.\" He nodded, more to himself than me. \"We'll surprise her with this one.\"\n\n\"That's the plan. That's why we're going to get beautiful in a few minutes.\" I winked. \"We'll do some shopping too.\"\n\nWe were pampered, coddled, well taken care of, and we deserved it. We were seated next to each other and gabbed about absolutely nothing the entire time we were there. We giggled and chose fire engine red for our toes. We both settled on French for our nails. Why not right? Facials - all gooped up and fresh faced and booful afterward. We cooed and oohed and ahhed at each other. Trust me - it wasn't too long ago Jenna thought I was the devil incarnate. Thankfully those days are behind me... us. Children are mostly wonderful. Adult children are truly a blessing.\n\nShopping was next on the menu. We talked as we walked.\n\n\"Let's look for something special, honey.\"\n\nJenny looked at me suspiciously. \"Do you have some nefarious plan for us that you're not sharing, Mother?\" Mm hmm.\n\n\"I'm a simple, honest woman, young lady. I have no such plans in mind.\" \n\nThe brat had the nerve to laugh. \"You're so full of crap your eyes are brown. You're an old trickster from way back.\"\n\n\"Reminding me that I'm old is uncalled for I'll have you know.\" We were heading to Herberger's after stopping at H&M. I saw something up ahead and said, \"Have you ever been in White House, Black Market?\"\n\nShe shook her head. \"Nope, they are mostly clothes for work. I dress casually for my classes. Do you want to stop in?\"\n\n\"Why not; I mean, Herberger's is right next store.\" \n\nWell, stop we did, and my oh my was it ever a good thing. It seems they do more than work clothes, cuz there was the epitome of the 'little black dress' and holy smokes did my kid ever look sexy in it. The straps were removable; they weren't needed. The cross-banded bodice made her figure stand out. The dress had built in shape wear that helped as well. The sales associate recommended that Jenna try one size up from her regular size and it was a fantastic idea. It was nice and tight around the top; she felt secure. We were in the dressing room together as she tried it on.\n\n\"It fits like second skin, Mom. It's very comfortable. Going up a size from my 4 to a 6 was perfect. I have a cute pair of black heels and a necklace that will be perfect.\" She cocked her head. \"Where's Ian taking me tonight?\" Uh oh.\n\n\"I have no idea if he has plans to take you out. You look beautiful by the way.\"\n\nShe pursed her lips and nodded. \"I'm going to call him and find out.\" I'm so busted! \"Hi sweetie. Mom and I are at a store in the mall. She's buying me a cute little dress for tonight.\" Crafty wench isn't she? \"She says there are no plans.\" Brown eyes looked at me suspiciously as she nodded again. \"I'm not buying it, big boy, but I guess I'll find out for sure when we get home. How's Ella? Oh good. Okay, lover; you two have fun. What's that? I suppose we'll have lunch and then see a movie. We should be home by 5. She'll eat mac and cheese. It's too cold to take her for a walk on the sled, Ian. Watch a movie or something. Okay, I have to go. I love you too. Bye.\"",
        "\"Am I off the hook?\"\n\n\"You are buying this dress, Mother. And yeah, it seems so.\"\n\n\"Consider it your birthday present, dearie. Let's go pay for this and then we can see what movies are playing and when.\"\n\nIt came down to \"The Secret Life of Walter Mitty\" and \"Anchorman 2.\"\" We both like Ben Stiller but, in the end, silly and laughter won the day. We bought tickets for the 1:50 show and headed next store to The Cheesecake Factory for lunch. I'd been to one of these before but it had been some time since my last visit. That it was literally right next door to the theater was convenient. It also meant we could take our time - which we did.\n\nJenna ordered fish and chips and I ordered a grilled shrimp and bacon club. She laughed hysterically when I told her about telling Kara that I was a bacon whore.\n\n\"You've become a complete loon as you've gotten older, Mom. God that's funny.\"\n\n\"Well it's true! There are a few other things I can't get enough of when I have them.\"\n\nShe snorted. \"Yeah, like Kara.\" \n\nI smiled and agreed, saying, \"Very, very true child of mine. Hash browns, Twizzlers, and potato chips are on that list.\" I went on to tell her about how we played with potato chips that Tuesday night several months ago.\n\n\"Geez oh pete, the two of you are sex maniacs on top of it. Actually I'm a little jealous. You're very creative with your foreplay and lovemaking, Mom. Good for the two of you.\"\n\nHer jaw hung slack as I told her about our Twizzlers hijinks. I rendered my own child speechless I'll have you know.\n\n\"I guess a child doesn't want to know about their parents' sex life for a reason. It's pretty damn interesting that the two of you are as into each other as you are.\" She kind of got a far away look in her eyes. \"I wonder if the brat and June are like that too.\" \n\nThe server brought our ice teas. I know, right. Ice tea in December is pretty silly. I didn't feel like having wine.\n\nJenna fiddled with her glass for a moment, then looked at me and asked, \"Were you and Daddy pretty hot in the cot?\" She blushed. \"I'm guessing not so much toward the end; but was there ever a time when the two of you... oh god, I can't even bring myself to finish the thought.\" She shook her head, obviously uncomfortable with the whole thing.\n\n\"How about we talk about something else?\" My still blushing daughter nodded her head vigorously. \"I'm worried about Kara, honey. She and Destiny get along famously, which is great. She said the oddest thing; that she didn't make friends easily.\" Jenna cocked her head and furrowed her brow. \"I know, right!\"\n\n\"That's so weird, Mom. One of the things I liked about Kara when I met her was how easily she fit in with all of us.\"\n\nI could feel myself about to choke up. I took a bite of my sandwich as a distraction then looked at my daughter. \"I will forever be grateful to all of you for how quickly you accepted Kara. Accepted her and accepted that your Mother was in love with a woman. That couldn't have been easy for any of you. Even if my marriage to your Father was difficult, he was still your Dad.\" I looked down and nodded. \"God, it really shocked me when Rachel came out to me all that long ago. It's neither here nor there but she never gave the slightest hint that she was romantically interested in a woman.\"\n\nWe were talking and eating -- which isn't the easiest thing to do. I'm writing like it was a smooth, easy conversation. Nope. There were breaks between what one said and the other's reply as we finished the bite of food we were having.\n\n\"This started with you saying you're worried about Kara, Mom. Why?\"\n\n\"With all that's happened she's behind on her bills, her credit history is toast and we had to scramble to bring her mortgage current. She lost her job after she stopped showing up altogether.\" I shook my head. \"I'm worried that it's going to be hard for her to find another one. An unexplained absence for 3 months is going to be a big black mark.\"\n\n\"You mentioned something about drugs at one point. Is she going to have to go to rehab?\"\n\n\"I honestly don't know. Something shook loose inside Kara after we broke up. She wouldn't talk to me about it. It seems she has with Destiny. Kara feels really good about where she is right now, honey, but I still worry about her, especially after that Friday night thing.\" It was a Sunday afternoon and the restaurant was somewhat crowded but hardly full so we could talk without everyone hearing what was said. I decided to share with my oldest.\n\n\"Kara and I did quite a bit with restraints and other things as a part of our lovemaking.\" Jenna stared in disbelief. \"It's okay, sweetie; nothing we did was done without us talking and agreeing in advance. I'll spare you the details. The point is this -- we were being intimate the other day when she started crying out of nowhere. I couldn't figure out why and let her cry.\" I took a deep breath. \"She finally admitted she wanted me to... restrain her. I was shocked. I told her the truth. It would be a while before either of us would be able to play that way again.\" I told my daughter what I hadn't told anyone else. \"I'm not sure I can ever go back to that sort of play in our intimacy, Jenna, and that has me worried about more than just that. I'm worried about us as a couple.\" Do I tell her what's next? Should I?\n\nJenna let the silence be for a few minutes then asked, \"Is there something more you're trying to say, Mom?\" It frustrated me terribly that I did -- but I cried. I love my Kara and I don't know if we can ever get back where we were before.\n\nI dried my eyes, smiled at my kid and said, \"We had talked about getting married. I don't know; it's too early to talk about that after what happened. Except that we did just the other day. I think we were both surprised that it came up so soon after she came back. There are so many questions, what seem like so many obstacles. I just don't know.\"\n\n\"God is this awkward or what -- me giving my Mother relationship advice.\" We both laughed. \n\n\"Go ahead, Jenna, I'm interested to hear what your thoughts are.\"\n\n\"You probably know already. Give this some time. You were together for a good chunk of time. However long it was you were apart probably felt like forever. I know you, Mom. You felt like you lost half of yourself. That's how close the two of you were... at least that's how it felt to me when I was with the two of you.\" I smiled; she hit it on the head.\n\n\"So give it time. Things are different now; both of you are different. You need time too, Mother. If Kara does go into rehab, for however long that is, you should look into shrinkage.\" I laughed; my kid smiled. \n\nI never hid the fact I was going to... her... from my kids. It wasn't mean spirited; I just... crap, I don't know. Maybe I shouldn't be so open with my kids about my life. I was and I wasn't; know what I mean? I would never tell JR this stuff. And it may sound odd but Rach is too young, at least in my opinion, to talk to her like I am to Jenna. Anyway, how the hell do you know what to do? There's Dr. Phil and his ilk. He makes me puke if you want to know. 60 minutes to solve a problem? It's not much different than our 140 character world -- but I'm 56 and what do I know. Winkeroonies.\n\nOur redheaded server (with way too many tattoos) asked, \"Can I get you ladies anything else? My shift is about to end.\" I looked at my phone and shrieked. The movie was about to start. I grabbed some cash out of my pocketbook and handed it to the slightly startled girl.\n\n\"Sorry sweetie, we're almost late for a movie next door. We were so busy talking we lost track of time. Bye!\"\n\nGiggling like the fools we are we dashed out of the restaurant and into the theater -- just in time.\n\n** December 29th **\n\nKara\n\nWe spent the day doing a whole lot of nothing. It was nice. No questions, they didn't even ask me about Kelly. To tell you the truth, it was wonderful just watching two lovers love. It made me feel closer to Lissy. Does that make sense? Well, it does to me. Dinner was good, I think. Call me a tad distracted. The conversation with Kelly was on a replay loop in my head. If Destiny or Shade noticed, they kept it to themselves. If fact, when I excused myself to bed early, they both hugged me without a word. I guess if I was them, I'd give me space too.\n\nI hurry into my room and search for my phone. We'd been playing phone tag and I'm anxious to call my baby. Doh! Oh yeah. Shit, how do I explain this? Sitting on the edge of the bed, I see if there is any way to salvage this now pile of parts. The frame is mostly intact and the battery seems to go back into place. What all these other small pieces are, I haven't a clue. It definitely looks a bit frankensteiny but as long as it works. I push the power button, nothing. Okay, deep breath. I take out the battery to make sure the sim card is still there; it is. I replace the battery again and hold the power button down for a few seconds. \"Come on.\" Nothing. Fuck me. Time to face the music. \n\nI hear the two lovers laughing as I approach. They both look up and Destiny says, \"Hey you. Change your mind about dessert?\" I try to smile; she notices. \"Kara, what's wrong?\" \n\n\"Nothing, well my phone isn't working. Can I borrow yours?\" Her eyes squint, wondering if I'm telling the whole story.\n\n\"Of course. Here you go.\" She holds the phone out and says, \"No calling any of those phone sex places.\" Cute. I give her a sideways glance and take it.\n\n\"Thanks. I'll bring it back when I'm done.\" I turn and walk back towards the bedroom. I need to call my baby. Crawling onto the bed, I dial. When it starts to ring the anxiety hits. What do I tell her when she asks why I'm calling from Destiny's phone? Ring. Should I hang up until I figure it out? Ring. Oh hush! She won't care. Ring. Where are you Lissy? Her voicemail answers. Well crap. At least wait and tell her goodnight, she'll check it. No, she'll call back. I hang up. I lie back and wait.\n\nThirty minutes pass, no call. Maybe I should try her again. I look at the clock - 11:02. Never mind, she's asleep. I start to get up and there's a knock on the door. \n\n\"Kara? Can I come in?\" Sigh.\n\n\"Sure.\" All ready for bed in her jammies and robe, she sits down at the foot of the bed. I know I'm not hiding my disappointment well and she picks up on it immediately.\n\n\"Wanna talk about it?\"\n\n\"I guess I waited too long to call Lissy cuz she didn't answer. Kinda strange she doesn't have her phone with her though. She did ask me to call.\" I sound pathetic. Destiny peeks over at my mangled phone on the nightstand and raises her eyebrows. \"I don't want to talk about it, please.\"\n\n\"Okay, we don't have to, but I'm worried. And as far as Lissy goes, I bet she has her ringer off so it doesn't wake the baby. She probably just fell asleep.\" That makes sense. \n\nWhy didn't I think of that? \n\nCuz you're a paranoid idiot! \n\n\"You're right... you are so right. I'm being silly. Thanks for letting me use your phone.\" I try to give it back but she puts her hand up.\n\n\"No, keep it tonight. In case she calls back.\" I smile and lean over and hug her. She pulls me tight and holds on for a few. Letting go after another quick squeeze, she grins and says, \"Shade says Kelly plans on calling your boss tomorrow, maybe soften your welcome. Do you think you might be ready to go and talk to him?\" Hadn't thought about doing it so soon, but I need to.\n\n\"Makes sense to get the ball rolling. I have to face him eventually and considering Mistress Kelly is taking the time to call, I really better.\" She nods. \"I'll call tomorrow after lunch and see if I can set a meeting.\" I cannot imagine how that's going to go. Think positive Kara.\n\n\"Sounds splendid. You'll do fine. I don't plan on getting up too early in the morning. Do you want me to poke my head in and wake you?\" Always so kind.\n\n\"Thanks, that'd be great.\" We hug and kiss each other on the cheek. She pops up and wiggles her fingers at me as she leaves.\n\n** December 29th **\n\nLissy\n\n\"My Mother is a bacon whore!\" That's how my bratty daughter greeted her husband when we got back to their home.\n\nA startled Ian, to put it mildly, looked from Jenna to me and, after a pause, said, \"Okay. That's interesting.\" Poor Ian was adrift in a mother-daughter ocean with no clue and no paddle. \n\n\"Where are you taking me for dinner, husband of mine?\"\n\nChagrined, Ian's eyes flicked to me for an instant. Bad move, dear. \"Pittsburgh Blue; it's supposed to be one of the area's highest rated steak houses. Mom offered to babysit so we could go out together. I mean really, Jen, we haven't had many nights alone since the baby was born. It'll be fun -- just you and me.\"\n\nJenna looked at me. Don't! I tried to make my eyes flinty. \"Thanks, Mom, for this afternoon and for taking care of Ella tonight. Ian's right; even on the days he's off we don't get out much.\" She shook her head. \"I have to make more of an effort to find babysitters.\" She took a few steps, squirmed against her man, and put her arms around his neck. \"I think I'll go shower and slip into the new dress Mom and I found this afternoon.\" Ian's eyes kept flicking my way.\n\n\"The Mom was with her daughter this morning and afternoon, the Grammy will be with her Ella tonight, and the Mother-in-law will not be happy if you two come home much before midnight. Am I clear?\" They both laughed.\n\nI sat on the sofa while the two of them were getting ready for their night out. When I heard Ella I headed upstairs to her bedroom.\n\n\"Hi sweetie. Grammy gets to spend a night with her Ella Bella.\" Adorable flapped her fingers on outstretched arms. I did what Grammy's do -- sat in the feeding chair with Ella in my lap and made goofy noises, sang silly songs, clapped hands with her, smothered her in kisses, and blew bubbles on her tummy. A nearly breathless Ella was still giggling when I looked up to see my beautiful first born looking beautiful, gorgeously made up, and sexy as all hell in her new dress.\n\n\"Va va voom you!\" I picked up Ella and walked across the room. \"Look at your sexy Mommy, will ya!!\" Ella tried to leap out of my arms into her mothers. Experienced Grammy kept a tight rein on her before handing her over. \"Don't let her mess up your makeup, sweetie.\" Momma stuck her tongue out at her Momma. I laughed.\n\n***\n\nI kicked them out. Yeah right! Ella cried when they left. We had dinner. Ella had apple sauce, peas, and cold chicken. Grammy had a Lean Cuisine. I'm not sure who got had the tastier dinner. We played with this toy and that. I think I read 5 books -- one of them twice. We watched movies; oh my god did we watch movies. I knew Ella was falling asleep and made the deadly mistake of lying on my back with her on my chest and tummy.\n\n\"Mom, Mom, wake up.\" I jolted awake. The baby! Jenna had her daughter on her shoulder. It was Ian who woke me up.\n\n\"What time is it?\"\n\n\"12:30.\" Jenna smiled. \"We did what you asked. It was a wonderful night. Let me put the baby to bed. You need to get to bed too.\" Ian helped me to my feet as Jenna took her daughter upstairs.\n\n\"We didn't do all that much. I guess I'm out of shape when it comes to little ones.\" I gave Ian a kiss on the cheek. \"I'm glad you had fun tonight. You'll probably be gone when I wake up in the morning.\" I smiled. \"Goodnight sweetie.\"\n\n\"Goodnight Mom and thank you. This was very much, if you'll excuse the expression, what the doctor ordered.\"\n\nAfter a soft laugh I headed upstairs. I did my bathroom stuff, headed to the guest room, closed the door, took off my clothes, and gratefully pulled the blankets over me. I don't remember falling asleep.\n\n** December 30th **\n\nLissy\n\nI slept in Monday -- meaning till 9. After I had peed and washed my face I headed to the sounds of a Mom and her baby. \n\n\"Look Ella, Grammy is awake.\" Squeals of joy followed. I ask you - how does a heart not melt? Little legs hurried to me.\n\nI kissed my granddaughter squirmy. The kisses last for a blink and move like lightning from one site to the next.\n\n\"Here, Mom, have some coffee.\" My kid knows her Mom loves her morning java. Her eyes were doe soft. Woo hoo. My daughter and her man did some lovin' last night! Mission accomplished. She blushed; I smiled. No words were said.\n\nI made toast. My kid had bacon in the microwave under a napkin. I made a couple eggs and had a wunnerful breakfast.\n\nThe rest of the day wasn't what you'd call noteworthy. The weather was what you'd call Minnesota wintery -- nothing to write home about. There wasn't anything that had to get done so we didn't. We entertained Ella, chatted about this and that, had lunch, chatted more, and so on and so forth.\n\nIt bugged me a little that Kara hadn't called so I wound up taking the bull by the horns and calling after lunch. It gave me pause when the call went to voice mail. I looked at my phone -- Damn! I had missed a call. I checked the time. Geez, I had the phone with me on the couch. It must... yeah, I remember when Jenna and Ian came home I found the phone on the couch where I'd been out cold, sound asleep. My butt must have muffled the ring tone. I left a message for Kara.\n\n\"Hi honey; this has been great. Jenna and Ian have been wonderful and I've had a fabulous time with Ella. I hope all is well with you and the girls. Call me back when you have a chance, okay?\" I took a breath. \"I miss you and I love you.\"\n\n\"What's the matter, Mom?\"\n\n\"Probably nothing; I just thought I'd catch Kara and get a few minutes with her.\" I smiled. \"I'm really glad I came, honey. I love your home and I've had the best time with all of you.\"\n\nJenna's eyes teared. She took a moment to compose herself before saying, \"Honestly, I didn't think there was much of a chance you'd come, especially after you and Kara got back together. Part of me felt really selfish calling you Christmas morning. I was missing my guy and I called the one person I knew would understand.\" She shook her head. \"I didn't know all that was going on in your world. Anyway, like I said, I'm glad you could come spend time with us.\"\n\n\"Hey! It's not like I'm leaving today, ya know. We have tomorrow and Wednesday too before I leave early Thursday morning. If you and Ian have friends you've made here that you want to spend tomorrow night with that would be fine. Just let me know.\"\n\n\"There are a few other teachers I'm sorta close to. Ian doesn't talk too much about friends he may have made at work, Mom. No one around here has invited us to do anything with them tomorrow.\" I detected some bitterness in her tone. \"Even if we spend it here, it will be nice that you're here to celebrate the New Year with us.\"\n\n** December 30th **\n\nKara\n\nMorning came too quickly, but at least the night was dream free. I must have fallen asleep waiting for Lissy to call; the phone is still in my hand. I check for missed calls, none. Sighing as I stretch; a couple muscles creak and pop. Should I try and call? If her phone was off, it probably still is. Wish I wasn't so clingy, but I clearly feel an emptiness. Snap out of it! Get your arse up, take a shower and think about what you're going to say to Allen today. Mr. Leland, my boss. Ex-boss. Whatever!\n\nYou know those showers where you come out a new person? This was one of those. I slip on some jeans and a turquoise button down. Even though I leave it untucked it's hardly sloppy. The shirt is tailored nicely to my body and I always leave the bottom two buttons undone. Don't ask why, I decided it looks sexy. Hush you!\n\nAttempting to open the door quietly proves impossible. Everything sounds so loud when you don't want it to be. The squeak from the hinge seems to bounce off every wall. I decide to grab a quick bite and some coffee while I collect my thoughts. Yes, Pop-Tarts! Lissy would gag. Blueberry, yum. I'm giggling as I throw them in the toaster and look for a mug. Found it - and the coffee is still warm. Shade must have left recently.",
        "Leaning on the counter, I enjoy my brekky and let my mind wander. In the five years I worked for the bank, Mr. Leland and I got along rather well. I'm a nose to the grindstone type of employee and when projects came up he often looked to me. In the weeks just after Lissy and I split he was quite understanding. More than he had to be for sure. He let my tardiness slide and even let me slip out early when I needed to. Needless to say, this makes me even more of ass for just up and leaving without a word. I throw a Pop-Tart into the trash and dump the rest of my coffee. My appetite is long gone. As much as this meeting is going to be difficult, I need to get it done. If nothing else I owe him an explanation. To be honest, if Kelly hadn't decided to help, I'm not sure he would agree to see me and I certainly wouldn't blame him. I hope she was received well. \n\nNearly ten and the condo is still quiet. She wasn't kidding about not getting up early. I glance at the phone again, still no calls. Like magic, it rings. Awe isn't that sweet, caller ID says 'Destiny's Shade'. What the hell, I pick it up. \"Hi Shade, this is Kara.\" Who else would it be? Geez, I'm blonde.\n\n\"Good morning, Kara. Is my lover still snoozing?\"\n\n\"As far as I know. I'll have her call you when she wakes.\" \n\n\"Sure, that's fine. Actually, it works out you answered. I have some news.\" She covers the phone for a moment to talk to someone else then continues. \"Sorry about that. Mistress Kelly has already been busy this morning. She wants me to pass on to you that Mr. Leland is expecting your call and that it seemed to go well.\" She's a miracle worker.\n\n\"That's incredible. How will I ever repay her, or you and Destiny for that matter?\" I let out of sigh of relief.\n\n\"Easy Kara, just get better.\" My eyes fill. Hold it together, Kara.\n\n\"Oh Shade, thank you. That's exactly what I intend to do.\"\n\nShe pauses, talking to someone else again. Her voice is hurried when she comes back to me. \"It's getting busy over here. Please ask Destiny to call me.\" Before I could respond her voice trails off and the phone hangs up. Busy, busy. I smile at the phone and start to put it in my pocket, when it vibrates. It's a text from Shade, 'Forgot to tell ya... wake that brat up!' Cute. I'll give her a few more minutes and see if I can reach Lissy. I dial, straight to voicemail. She has her phone off? What the fuck is going on? I mean we haven't spoken since the airport. Immediately the worst filters in. She's tired of dealing with my drama. Is she second guessing us getting back together?\n\nStop Kara! \n\nI would love to, but how else do you explain it? Like it or not, my mind is an evil bitch.\n\nThankfully, a sleepy-eyed Destiny saves me from my trip down self-destruct highway. She plops on the couch next to me and says, \"What's shakin' bacon?\" I shake my head, half at her and the other half kicking those terrible thoughts out of my noggin. By the way, that pretty much sums up our Monday -- the two of us on the couch and Destiny being silly. Oh wait; I did call and setup an appointment at the bank for tomorrow at one. I was only able to reach Mr. Leland's secretary and her demeanor was chilly at best. Can't say I blame her. The important thing is I have an appointment tomorrow.\n\nOkay, I'm a blonde for sure. Another notable occurrence, I finally reached Lissy. She didn't waste any time getting to my cell phone dilemma, since her first question was 'Did you get my voicemail?' I fessed up and told her I broke my phone, though I may have left out exactly how. She didn't press and I wasn't going to offer. Instead we spent ten solid minutes catching up and ending with our usual huggy, kissy bits. Overall, I'd say it was just what I needed. In fact, for once in a long while, I slept like a baby.\n\n** December 30th **\n\nLissy\n\nI did the best I could to push away my concerns about Kara not calling. The wait ended late Monday afternoon.\n\n\"Hi baby!\" I blinked away tears furiously and tried to put an easy smile in my voice.\n\n\"Hey blondie - how's my girl?\"\n\n\"I'm doing swell.\" Oh no you're not. She doesn't talk like that Um, you're probably wondering why I'm calling on Destiny's phone.\" I nodded my head in agreement. \"Mine kinda broke so I asked Destiny if I could borrow hers.\"\n\n\"That's an interesting way to put it. Exactly what happened?\"\n\nAfter a pause, Kara said, her voice tinny and small, \"I threw it against the wall.\" I think I heard her swallow a sob; it took another minute before she said, \"I miss you; I got frustrated with myself... and you and did something stupid.\" \n\nI waited for a bit but Kara didn't have anything else to add. \"Okay, enough about the phone. How are things otherwise?\"\n\nThe silence that followed was anything but golden. Finally Kara said, \"Something's wrong with me, Lissy, and I don't understand it. One minute I'm fine and the next I'm either in a near panic or my mind's eye is taking me back... there.\" I felt myself get chills. She didn't have to spell out what 'there' meant. I could feel my eyes tear with worry.\n\nI had no idea what to do from so far away. Add to that the fact I wasn't due to get back home until Thursday morning. I tried my best to put on a brave front for a woman I thought needed it.\n\n\"Things are really good here, lover. Jenna and I went shopping Sunday and went to a movie. I sent them out for a night of carousing and baby sat for my granddaughter.\" Kara giggled when I said carousing. \"I know!! Jenna's eyes Monday morning told me all I needed to know!\"\n\n\"Lissy, for all I didn't want you to go, I'm so glad you did. It sounds like you are having the bestest time with your kid and her kid.\" There was a short pause before she said, \"You do miss me, right?\" What's wrong with you, Kara?\n\nFighting to suppress my frustration, I said, \"Blondie, please! You have to know I do. I miss giving you a kiss before we fall asleep and you molesting me when we wake up.\" She giggled; I could see her blushing. \"It's not that long of a trip and we'll be doing those things we do... and god almighty I miss those things.\" We both laughed.\n\n\"I won't even bother telling you that I don't miss you, sugar lips.\" I rolled my eyes. \"I have a surprise for you, Lissy, but I'm going to wait a day before I tell you what it is and what happened.\" You are a little shit, you little shit.\n\n\"So do you and the others have plans for tomorrow night?\" Silence filled the late afternoon. \n\n\"Geez, it's odd you asked. Neither Destiny nor Shade has said a word about New Years Eve. And to tell you the truth, I've been missing you too much to give it much thought.\"\n\nI sorta, kinda knew what she was going to ask so I jumped in and said, \"I'll have to ask Jenna at dinner if they have plans. I kinda doubt it from what she said this morning when we talked a little about what was going on here for them.\"\n\nKara put an end to the call when she said, \"Lissy, I should go. Destiny knocked on the door and is calling me to dinner, which means Shade must be home. Now that I think about it, do you have anything you want me to tell either of them?\"\n\nI giggled. \"Tell them my New Years wish is you, naked, screaming my name, all day, every day, in 2014.\" I heard her gasp.\n\n\"You evil wench, I love you all to hell. I had a full body shiver when you said that. Kitty... oh dear god, kitty is... oh fuck me.\" If you insist, lover!! \"That was goddamn evil of you to do.\" I know!\n\nMy voice soft and sultry, I said, \"You have a delicious night, blondie; I know I will.\" I closed the phone and laughed. I am so going to pay for that when I do get home. But more than anything, I hope it knocks some of whatever the hell is going on with Kara out of her.\n\nDinner went on without incident. Ian, as it turned out, doesn't get home till later. I spent time in my room to give the family time together. Jenna brought Ella to me before she put her daughter down for the night. I let my eyes tell her there would be no discussion about the phone call she knew had happened. Thankfully, my kid picked up and followed my cue.\n\n\"Everything okay in Chi-town, Mom?\"\n\nI smiled and said, \"Yeah, pretty much so. There will be some stones in the road ahead but we'll make it work.\"\n\nMy kid, reading my bullshit meter, smiled, just like I suspected she would.\n\n\"Well, I hope to hell it works out, Mom, and bullshit me as much as you want, I know you do too.\"\n\nI'm shaking my head. Damn that kid of mine! Exactly when did she learn when to push just the right button at exactly the wrong time? UGH! She held me as I cried -- again. This was getting boring!!!!\n\n\"I know, Jenna -- me too.\" \n\nI know, I know -- this is hardly the time to tell her everything I fear. Course, she may already know from what we've shared. Here's the thing I haven't had the guts to tell anyone -- I'm scared down to the deepest part of me that this thing we have may not survive whatever we have to go through to get back to... 'us.'\n\nNot wanting to share that with my daughter I got up and left. I fell on the bed and cried. They were not happy tears.\n\n** December 31st **\n\nLissy\n\nI woke with a start. I groaned when I looked and saw the time. I knew almost at once that my sleep was neither deep nor restful and I knew why -- no late night call from Kara. I was worried about the way she acted during our call. She was 'safe' with Destiny and Shade. Wait a minute... that's not Kara's phone. Destiny's name is on the caller ID. Oh yeah, she told me she'd broken her phone. That's why caller ID showed Destiny's name. Wait a minute; if something was wrong and Destiny was calling she'd have left a message. That much I was certain of. I sighed and tried to relax.\n\nI took the phone with me when I headed to the bathroom. As I washed my hands after peeing I looked in the mirror. UGH! Red eyes with dark, ugly circles stared back at me. You're not a pretty sight, Lissy. I shook my head and left.\n\nI'm not the biggest fan of trite but this is what 'horns of a dilemma' means. I wanted to call and make sure everything was okay and I didn't know how early everyone gets up in the condo. Add in the fact it was December 31st so I had no idea if Shade was even going to go in the office. They both may well be sleeping in. Call me, Kara, dammit, call me.\n\nThe first thing I saw when I went into the kitchen was that coffee had been made. Yikes, Ian, you sure are up and out early! I poured a cup and sat down at the table.\n\nJust that fast I made a decision -- I had to go home. Sure I missed my honey but there was more to it than that. She wasn't happy that I'd come; that was clear as a bell when we had talked. I knew Destiny wouldn't hold anything back when it came to Kara -- above and beyond her concern, she and Kara had become very close very, very quickly. Add in the notion that with all the sweetness came some steel. I headed upstairs to begin packing. I saved all my toiletries and cosmetics for last -- I'd put on my face after my shower, which would come after Jenna and the baby woke up.\n\n** December 31st **\n\nKara\n\nDestiny rides shotgun as we cruise over to my condo. I need to be in and out; my appointment is in less than two hours. We chat about my impending doom. \"I'd be lying if I said I wasn't nervous.\"\n\n\"Well, duh.\" Smart ass. She smirks.\n\n\"If I had a chance to speak to him, maybe I'd be able to gauge his mood. As it was, his secretary just said he asked her to set the appointment if I called. Do you think that's a good or a bad sign?\" Am I over thinking this?\n\n\"Kara, you're over thinking this. The fact that he's agreed to see you is an exceptional sign if you ask me. And in fact, you did.\" We both laugh. She's a nut.\n\n\"Yeah, I know. I just don't wanna mess this up after all the trouble everyone has gone through.\" I shrug and get quiet. Destiny lets it be. Well, for a minute or two anyways.\n\n\"Did you ever hear from Lissy?\" I shake my head, visibly bothered. \"Here, let me try her now.\" She dials. After what I assume is Lissy's voicemail, she says; \"Hi Lissy, it's Destiny. Not sure if you recognized my number, but your lady is trying to reach you. Everything is fine, she just misses you. Give us a call on my phone when you get this message. Bye!\" She looks over, obviously proud of herself. \"So missy, let's talk about your phone.\" Of course.\n\n\"I just... I don't know. I feel fine one minute and then anger, frustration... it comes from nowhere. I never used to be like that, it's been since... well, you know.\" Her eyes are focused on me intently.\n\n\"I've never been addicted to a drug like that before, but I can imagine it comes with its share of side effects. From how Kelly sounded, the one you took isn't to be taken lightly. There are bound to be things you can't explain or understand. Don't beat yourself up. Just get the help you need.\" Her words make a lot of sense. The fact is, beyond knowing how I felt when I took them, I really have no idea of the effects after you stop. I do know my paranoia is a factor, along with the anger and insecurity. Not to mention, the physical withdrawal symptoms.\n\n\"I hate hospitals Destiny. I mean hate, hate. Also, when I let myself think of being separated from Lissy...\" My hands instantly begin to shake. What the hell?\n\nHer hand rubs up and down my arm, \"I know honey, I know. Maybe there is an outpatient option. Don't get worked up yet. Let's get all the info first.\" She squeezes and asks, \"Okay?\" I nod, fighting back the tears. This is probably not good driving conversation. I turn up the radio and let us ride in silence the rest of the way. \n\nGetting off the elevator is almost as difficult as getting on had been. There's a reason I don't come back here. It's wrapped in a shroud of despair. \"Kara? It's okay. I'm here with you.\" I just nod and begin taking steps towards the door. As you might have guessed, several notices are taped to the outside; a couple of which are on red or yellow paper - that's never good. I rip them down and shove them in my purse. If I wasn't so fixed on what lies on the other side of this door, I might have had the presence of mind to be embarrassed. The key turns in the lock, at least that still works, and I push it open. The staleness rushes out. There is an eeriness, a silence. My mind is sending the 'walk' message to my legs but there's no response.\n\nThe last time I was here, I ... I don't want to think about it. Lissy had come to me and I still lost my way. It seems like a different time, another person even. Destiny places her hand on the small of my back, an unspoken urging. Okay, come on legs. We walk in and all is the way I left it. You can tell it was in a hurry. The sofa pillows are on the floor, there are empty glasses on the table and my jacket is lying on the chair. Mindlessly I start to straighten up. Destiny follows suit. I mean what else is she going to do? I'm sure it's awkward. \n\n\"Kara?\" I look up, placing a pillow at the corner of the sofa. She smiles and says, \"Let me do this. Go get dressed.\" I glance at my watch. Damn it, she's right. What am I doing?\n\n\"Thanks, I guess I got a bit distracted. I'll only be a minute.\" Turning, I leave her to it. The bedroom is in the same disheveled state. Don't look at it, get dressed. What's in my closet is a hodgepodge of this and that. Barb had taken most of my clothes to her place when she came to get my things. I fish around and find a navy pencil skirt. Shit, all that's left are some tanks and a couple t-shirts. Why didn't I think to go to Barb's instead? My stomach clenches. I know exactly why... things are still, well, I don't know what they are between us.\n\nDestiny walks in and asks, \"Any luck?\" Shocking; she actually didn't startle me this time.\n\nI sigh, \"Not exactly. I had forgotten most of my stuff is still at Barb's. All I could find was a skirt. It's already 12:15, no time to go shopping. Damn it.\" Destiny squints her eyes in thought.\n\n\"I got it!\" Before I could ask, she takes off her blouse. It's a simple white button down. After handing it to me as she walks past, a topless Destiny starts rummaging through the closet. Yes, I looked. Shut up! Having found an off-white tank, she turns and blushes. \"Ummm... mind if I borrow a shirt?\" We laugh.\n\nWe both commence to undressing and dressing. There may have been some peeking; I'm not telling. Done! I look in the full length mirror and hand comb my hair as I assess the outfit. \"Nice work Destiny.\" She winks at me as I look at her in the mirror.\n\nAfter all was said and done we arrive at my office with a few minutes to spare. Sitting in the parking garage, my palms are sweating. It's show time. Glancing over at Destiny, I say, \"Staying here, or do you want to wait in the lobby?\"\n\n\"Actually, I think I'll grab a coffee. I saw there was a Starbucks on the first floor.\" \n\n\"Great idea, I'll walk you there and then head up.\" I give her a 'let's go' signal as I open the car door. The street is busy and we wade through to the front door.\n\n\"Okay kiddo, good luck.\" She pats her jacket pockets and says, \"Oh! I need my phone.\" No inkling why but I didn't want to give it to her. Maybe it feels a bit like a lifeline to Lissy. I grimace and hand it over. \"You okay? I'll let you use it again. I just want it while I'm waiting.\" Geez I'm pathetic. If I can't deal with a phone, how am I going to deal with this meeting? I force a smile. She adds, \"Do you want me to walk you up?\" Shake it off, Kara.\n\n\"Nope, I got this! Be back soon, chickadee!\" Fake it 'til you make it! I open the door without looking back and ride this temporary confidence to the elevator. As soon as I step in, my mind begins racing. People are getting on and off as I take it to the eighth floor. Ding! Okay Kara, walk. Seems simple enough. I make my way to his secretary's desk and wait for her to acknowledge me.\n\nThe desk is multi-tier, black onyx and sits in front of a paneled wall adorned with the bank's logo. Janie is busy on the phone and glances up as I approach. She signals for me to give her a moment. Good, I need time to get my heart rate under control. It's difficult to hold still; my tendency is to pace. I pretend to walk along the back wall, looking at the framed photographs of the founder, past presidents and the like. I've been up here dozens of times and never really noticed them.\n\n\"Kara!\" Her voice is excited as she scurries around the desk and practically trots over. She pulls me into a huge hug. Umm, okay. I guess I did drop off the face of the earth. Leaning back but keeping her arms around me she says, \"I was so happy to hear from you.\" That's funny; she seemed nonchalant when I called early. Maybe she was busy? Just smile and shut-up Kara. I do and she responds with her own and another hug. This time she holds on for several moments. Truth be told, it made me uncomfortable. 'Touch' has a new meaning since Veronica. I shiver at the thought and Janie lets go, unsure what's wrong.\n\nI recover quickly. \"It's great to see you too. I've missed you.\" Nice cover-up. Her smile says she thinks so too. I giggle - on the inside. \n\n\"I'll tell Allen you're here.\"\n\n\"Thanks.\" She returns to her desk, picks up the phone and turns her back. I can't make out what she says. I'm sure that was the point. Seconds later, his door swings open and he appears -- looking just as I remembered him. Forgive the clich\u00e9; he's the epitome of talk, dark and handsome. He exudes confidence and professionalism. Now that I think of it, it's no surprise he and Kelly know each other.\n\n\"Hello, Miss Thornton. Come in, please.\" Well that was formal, not a good start. I hold my hands together to conceal the trembling. He motions to one of the leather wingback chairs across from his desk. I sit and cross my legs. Hold it together Kara. Even sitting, he towers over me. He stares down at me, forehead creased and lips thin. \"I was surprised when I received a call from one of the bank's most important customers this morning. She told me a former employee, you, would be contacting me for a meeting. I suggested she was mistaken. I haven't heard from said employee since she walked out of this office weeks ago without a trace or word one.\" His voice never wavers. \"She wouldn't give me particulars, but asked me, as a personal favor, to take the meeting.\" My chin buckles but I don't cry. \"Make no mistake Miss Thornton, that is the only reason you are sitting here.\" ",
        "I expected anger and disappointment. I told myself that whatever happens, I'd take the position of complete disclosure. Chin up, I muster all the strength I can find. \"Mr. Leland, thank you for seeing me. I understand your frustration and realize that this meeting is a gift.\" I pause to collect my thoughts and continue, \"I won't take your time with excuses; I'm addicted to Oxycontin. I began taking it after falling into deep depression, following the break-up with the love of my life. I lost my way.\" As much as I tried, the tears still fell. I ignore them and talk through it. \"I'm here at your mercy. I need to get my life back on track. That starts with becoming productive again, focusing. My job here was... is important to me. I would do...\" He stops me by lifting a hand.\n\nI await his response, but it doesn't come. His eyes are distant, entrenched in thought. Finally, he clears his throat and looks at me. \"I appreciate your candor. Without going into detail, I know about addiction. Admission is a feat in itself. You have it wrong though; it doesn't start with becoming productive. It begins with getting healthy. Not just physically but emotionally. The road is an arduous one.\" He stands and I follow him with my eyes as he walks to the fully stocked bar. \"Miss Thornton, can I offer you some water or coffee?\" Okay.\n\n\"Water would be fine, thank you.\" Opening the mini fridge, he grabs two bottles of water and walks back over. He hands me one and sits in the chair opposite me.\n\nOur eyes are locked. His green eyes are... empathetic? Maybe there's hope. After a few swigs of water he says, \"You coming back to work here would raise a lot of questions - not only with other staff members but also the board. We have a strict substance abuse policy and don't think highly of an employee just walking out on their position.\" I begin fiddling with the cap of my water bottle. I should have known. Before I can thank him for his time he adds; \"But these challenges are not insurmountable.\" Really? \"You would have to agree to admit yourself into a treatment facility for rehabilitation. Only after we receive a clean bill of health would I consider you eligible for rehire.\" My heart is thundering. Am I hearing this right? Rehire? I keep listening. \"Having said that...\" He stands and walks to the door. Should I follow? \"I cannot guarantee your position will still be available when and if that time comes.\"\n\nI join him in the doorway. \"I understand completely, sir. I've been considering some outpatient options, I'm positive I'll be able to return soon.\" I'm excited and am talking quickly. I can't help it.\n\n\"Kara?\" Kara? I fix my eyes on him. \"Please get help.\" I nod; of course. \"Real help. Not the minimum to get back to work. You need to find somewhere that will give you the best chance of recovery. A recovery that is permanent. Take it from me; it's easy to slide backwards.\" The earnestness of his voice washes over me. He's right. \"Don't hurry back. I have a hunch your position will be waiting for you.\" He winks. \"Just let Janie know what you decide and your approximate return date.\"\n\nSmiling, \"Thank you... Allen.\" He smiles back and hugs me. Wow! I turn and walk out. I practically skip to the elevator. It could not have gone better! Lissy is going to be ecstatic!\n\n** December 31st **\n\nDestiny\n\nThe Starbucks is bustling, but I manage to find a relatively quiet table in the corner. With my coffee too hot to drink, it's a perfect opportunity to make a call I've been dreading. It's an internal battle between my loyalty as a friend and betraying her trust to protect her. It has to be done; the consequences of delaying outweigh the alternative. Shade will know what to do; I dial her cell. Three rings, she must be busy.\n\nHer voice is hurried when she answers. \"Is this my Destiny or her faithful sidekick?\"\n\n\"Cute, lover.\"\n\n\"I thought so. Sec, babe.\" Yep, busy. This isn't the time. \"Back. Trying to get everyone out of here early for New Year's; it's a bit chaotic.\"\n\n\"Figured. We can talk later,\" I say, the distress laden in my voice.\n\n\"Destiny, give me just a minute and you will have my full attention. It's important.\" As promised, she finds her way to a quiet place; probably her office. \"Okay, lover. What is it? I don't like the sound of your voice.\"\n\n\"It may be nothing. No, that's not true, it's Kara. She seems fine mostly, but something is definitely off.\"\n\n\"Off how? Give me specifics, please.\"\n\n\"For one, her phone isn't just broken. She threw at something and shattered it. Also, when we're talking, she zones out and I have to bring her back. She's trying to cover it up but I think it even confuses her, scares her.\" Shade keeps quiet, listening intently. I remember something from earlier and add, \"Today, at her condo, we were in a hurry to find some clothes and get to her meeting. But when we stepped off the elevator, she was spooked. I had to urge her along and after entering, she began walking around tidying up. It was just, well, strange is the best way I can describe it.\" I let out a deep sigh, on the brink of tears.\n\n\"Destiny, listen to me. You may have only known her a short time but you've become fast friends. Trust your instincts. From what you described, I'm quite concerned and I haven't been with her as much as you have. My advice would be to call Lissy.\" Yeah, I figured. Guess I needed to hear it from her.\n\n\"You're right. I should have plenty of time before Kara is through; I'll try and call now. Hopefully she'll pick up.\" Anxiety is setting in.\n\n\"Lover, you're doing the right thing. I know it may feel as if you're betraying her, but that's not the case. You're being a true friend and that's something she needs right now. Especially now.\" Wise, as always. One of the many reasons I love my woman.\n\n\"Okay. Thank you, Shade. I love you.\"\n\n\"You're welcome, honey. I love you too. I should be home by the time you two get back. See you soon.\" She gives me a loud smoochie and hangs up. I take a few sips of my coffee while I collect my thoughts, then dial. Lissy, please answer.\n\nShe does after the first ring. \"Hello?\"\n\n\"Hi Lissy, I'm relieved you answered.\" Not the best way to start.\n\n\"What's wrong? Is Kara alright?\" Damn, I've worried her before I've even begun.\n\n\"Yes Lissy, she's fine.\" Wait, that's not true either. Get it together Destiny! Before she has a chance to ask more questions, I continue. \"Lissy, I'm sorry. I really didn't think about what I was going to say before calling. Let me start over.\" Deep breath. \"Kara's behavior is worrying me. One minute she's fine and the next she acts lost, confused even. I haven't called her attention to it, not wanting to add to her anxiety.\" It's noisy wherever Lissy is but she's silent. \"I maybe should have called sooner but each 'episode' in and of itself seems normal considering what she's been through. All together though... well, I needed to tell you, get your thoughts and find out what I should do.\" I listen closely, she's crying. I had decided before calling to leave out specifics until we could talk in person; her reaction verifies it was a prudent choice.\n\n\"Destiny... thank you for calling. I know you're in an awkward position and that you care for her. I'm feeling guilty as hell for leaving. I saw it in her eyes before I left, I just didn't want to... I wanted to think she was better. God, I just want her back. My Kara.\" Lissy sniffles, fighting back the tears. I look up and Kara is coming through the door, huge smile on her face. I need to prepare Lissy.\n\n\"Lissy, Kara is walking up. Her meeting must be over, she looks extremely happy.\"\n\n\"Understand. Just put her on the phone, I'll take care of it. And Destiny? Thank you.\" Arms fly around me as she jumps up and down. I can't help but to join in. When she lets go, she notices I'm holding the phone out. Her eyebrows go up, questioning.\n\n\"It's Lissy.\" She shrieks. Oh geez. She snatches the phone from me and the joy begins to pour out.\n\n\"Baby! I love you! I mean like love, love you.\" Not sure how she can talk with how big her smile is right now. \"Yep! It went fanfuckingtastic. He says if I get a clean bill of health after some kind of rehabilitation, I'm in like Flynn.\" She giggles and says, \"No silly, he didn't use those words.\" Lissy must be going nuts on the other end. Kara's excitement is growing, however that's possible. \"Mm hmm. I'm going to start looking for rehab programs as soon as we get back to Destiny's.\" She pulls me into a sideways hug, I think it's so she doesn't lift off the ground! \"Oh Lissy, I can't wait to have you home. I want to...\" She blushes. \"Just get back here!\" Another quick moment; \"Bye, baby. Mm hmm.\"\n\nAnother shriek, more jumping. I'd say we should sit and have some coffee, but the thought terrifies me. Wink!\n\n*** December 31st \n\nLissy\n\nOkay, that phone call from Destiny was confirmation, in a way, of my worst fears - fears that had no real basis. Kara and I had only talked a couple of times since I'd landed Saturday. The first was fine. The one that followed was the reason I was at the airport this morning. Oh yeah -- about being at the airport. I hadn't told Destiny where I was, especially after Kara walked up to her. The two of them have gotten so close that I didn't think she'd be able to keep it from my blondie.\n\nThe conversation with Jenna wasn't a difficult one. When I told her what I wanted to do her face showed disappointment. She recovered quickly and told me she was in 100% agreement with my decision.\n\n\"I'm all packed, honey. Would you mind if we left now? I'm going to go standby. I have no idea when I'll get a flight but I figure the earlier I get to the airport the better my chances.\"\n\n\"No problem at all, Mom. Let me get Ella ready.\"\n\nThat was about it. The drive to the airport went pretty well; I really got lucky in the sense there was no snow falling. An airport is not the place for long goodbyes -- at least when you're in a car.\n\n\"Thank you for coming, Mom. I love my dress.\" She smiled. \"So did Ian.\" I smiled as I nodded. My oldest kissed me. \"You and Kara do whatever you have to. She's wonderful. I hope whatever she's going through doesn't make this love story of yours too difficult. Let me pop the trunk; you grab your bag and go.\" I turned and looked in the back seat. My Ella Bella was sound asleep. Jenna and I smiled at each other. Cars are fabulous baby sitters!!\n\nNew Years Eve -- I don't know what the hell I was thinking about doing what I was doing. But I'd done it and I would stay with it until I was back in Chicago and with my Kara. I stood in the interminable line that moved at the speed of sludge. I don't travel enough but my flight up and back was done online. I wondered as the line crawled if most of the people were like me -- making last minute changes that doomed them to... oh geez. I realized I had no idea what was in store for me other than this line.\n\nI have to commend him -- the agent was very pleasant. I explained, without explanation, that I needed to change my plans at the last minute and get home. I acknowledged that I had no idea what all this entailed or (gulp!) what it might cost.\n\n\"Let's see what we can do, Ms. Stone. How was your Christmas?\" Oh my!\n\n\"Well, I left Chicago last Saturday after spending a delightful Christmas with family and friends to come see my daughter, her husband and my granddaughter. It was wonderful; they moved here late last summer. We all miss them.\"\n\nNever taking his fingers off the keyboard or his eyes off the screen, he replied, \"My wife and I have much the same plight. Two of ours live out of state; one lives here.\" He shook his head. \"It's a challenge to balance work and family, especially around the holidays.\" He looked up, smiled, and said, \"I guess we're one version of a modern family.\" I laughed.\n\n\"I'm looking at the spectrum of what flights have available seats and what may be your best chance of getting something on stand-by. There's a 12:40 American that looks promising. The 1:05 on United isn't.\" He looked up at me and said, \"If that doesn't work, there's a 2:30 on United.\" He shrugged. \"We'll have to see.\"\n\n\"Do I have to go through this line every time?\" \n\nHe shook his head. \"Come back here; I'll take care of you.\" His eyebrows wiggled a little.\n\nI smiled and said, \"The woman I'm going home to would probably be upset if I succumbed to your charms.\"\n\n\"Um, well yes, of course she would.\" He studied the screen. \"Go ahead and go to gate 27.\" He handed me a boarding pass. \"If it doesn't work out, you'll come back here.\" He smiled. \"We'll get you home today, Ms. Stone.\"\n\n** December 31st **\n\nKara\n\nThe entire way back to Destiny's I was jabbering about my meeting. She's already learned it's best to just sit quietly and let me get it all out. When I finally reach the part about me hugging him, we were already opening her front door. Shade looks like she made it home moments before us; she still has her purse on her shoulder and keys in hand.\n\n\"Hi lover,\" Destiny coos. Aren't they adorable? They both drop their purses where they stand and embrace. Yes, lots of kissy face ensues. Sigh, I miss my baby. I try not to disturb them as I scoot past. \"Kara!\" I wince and turn back.\n\n\"Seriously sis? Why do you insist on scaring me?\" It came out more agitated than I really am.\n\n\"Testy, testy.\" She sticks her tongue out and says, \"You're coming with us tonight, right?\" I have no idea what she's talking about, my mien echoing my confusion. \"Didn't I tell you? We're invited to an exclusive soiree at Connie's. Only a hundred of her closest friends will be there.\" She snickers. \"It's a wonderful way to bring in the New Year.\" I scrunch my nose; my bed sounds better. She adds, \"Look, I may have presented it as a question, but it wasn't. You're going. I'm not letting you sit around and mope over Lissy. Plus, if you don't go, I don't go.\" Her lip goes out. Oh for shit's sake.\n\n\"Yeah fine, whatever. But I'm not getting dressed up and don't make me talk to anyone.\" I admit, I'm kinda relieved she's guilting me into going. Sitting here really wouldn't be healthy.\n\nShade smiles and asks me, \"How did your meeting go?\" Destiny grabs her by the arm and ushers her away.\n\n\"Uh uh. We need to get ready; I'll fill you in while we shower.\" She looks over her shoulder and winks at me. What a brat. First the kissing, now a shower? Thursday cannot get here quick enough. \n\nDrip drying after my shower, I'm searching for something to wear. I rifle through my bag. I believe I have a few things still in there. Besides some extra panties and socks it's no help. Wait; the hair stands up on the back of my neck. I blink a few times; they must have been hiding in one of the creases. My hand shakes as I reach for them, sure it's a mirage. The two green pills are burning into my skin. Flush them Kara!!! I sit down on the bed, woozy. The decision seems so clear but all I can do is stare.\n\nNo! I can't do this again. I rush to the toilet, lift the lid and hold my hand over the bowl. Drop them!\n\nI can't. \n\nYou CAN! \"FUUUUCK!!\" I slam them down on the tank and storm back into the bedroom. Grabbing whatever, I get dressed. I don't care; no one is going to be there that I give a shit about. What about Destiny? \n\nShut UP! Leave me alone. Oh god help me, I'm going crazy. Deep sobs overcome me and I fall to the floor. \"Lissy, please come home. I'm not... I can't make it without you.\"\n\n\"Oh honey,\" she answers.\n\n\"Lissy?\" I'm pulled to my feet and she holds me close. Why is it when someone hugs you, you cry harder? Is it the permission to let go? I do - let go. Her arms keep me from falling into the abyss that is my mind, my doubts and fears. She rocks me gently; I'm safe.\n\n\"Kara, sweetheart?\" That's not her. I try to squirm away, she holds on. Oh no, let me go! \"Kara! Stop! It's me!\"\n\n\"Let me go!\" I scream. She releases me enough to see my face, but keeps hold of my arms.\n\n\"Look, look, look! It's Destiny, honey. Shhhh.\" I am; I'm going out of my mind. Closing my eyes, I let all the air out of my lungs at once. \"It's okay. I'll stay with you; we don't need to go anywhere. I should have thought about a party being too much too soon.\" She lifts my chin and caresses my cheek with her thumb. \"Can I hold you?\" I nod and she pulls me to her. Focusing on slowing my breathing, I relax in her arms.\n\n\"Destiny?\" I whisper.\n\n\"Hmm?\"\n\n\"I want to go to the party, really.\" It's an utter lie but a needed one. I won't keep her from going or let fear win.\n\nShe leans back and scans my face. Skeptically, she replies, \"You don't seem like you're in the 'mood' for a party. I'm okay with staying home, promise.\"\n\n\"Well, I'm not! I let myself get overwhelmed but I need to face these things.\" I hold my head up in mock confidence.\n\nDestiny's eyes narrow, \"Humph. I guess, but I'm going to be watching you like a hawk. Any sign of anxiety and we're coming home. I don't suppose you wanna talk about why you were crying?\"\n\nShaking my head I say, \"Not now. I'm fine, or at least I will be. Let me get cleaned up and I'll be out in a few minutes.\" She reluctantly turns to leave. \n\nCold water on your face does wonders. I add some light make-up and blow dry my hair. May I make a confession? I can't stop thinking about them - the pills. I feel so damn weak. A spritz of perfume and I walk to the door. Just as my hand grabs the knob, I stop and go back. Fuck. Telling myself some pointless lie, I stuff both pills in the pocket of my jeans. Somehow it relaxes me, knowing they are there if I need them. Need Kara, really? Sigh.\n\nWhen I reach the front door, Shade and Destiny are in a lip lock. A clearing of my throat brings giggles from them both. No, they don't stop kissing. It normally wouldn't bother me, but tonight it's making me anxious. I leave them and look for my coat and purse. \n\n** December 31st **\n\nLissy\n\nYou really don't care about my travel travails; you just want to know if I got home. Well I did. It was a 7:30 flight on Delta and I was damn glad to get squeezed into a 'B' seat in the back of the plane. I had blown my diet on a Big Mac, fries and a Coke 90 minutes earlier when a promising seat vanished at the last minute.\n\nWhatev!! I called... oh crap. I didn't know if Destiny or Kara would answer when I called the last number I had on my incoming calls.\n\n\"Hello?\" It was Destiny; her voice sounded thin, hurried. I was walking from the plane, through the maze that was the terminal, heading to what I prayed would be an available cab to take me -- geezuz, wherever my Kara was.\n\n\"Hey Destiny; how's everything? Is Kara there? I just landed and am heading to the cab launching area.\"\n\n\"Uh, yeah, I'd say everything's okay, honey.\" I stood stock still. Destiny's words left me with chills. \"Wait! You're here; in Chicago? How did you do that? Why didn't you tell me earlier?\"\n\n\"Listen you; tell me what the hell is going on. I came home on a wing and a prayer. I want to know -- is she okay?\"\n\nThe response was rushed. \"Lissy, we're at Connie's. Do you know where it is?\" I felt panic sneaking into my soul.\n\n\"Pretty much, Destiny. Shade invited me to dinner there and Kara and I... okay, I'm next for a cab. I'm going to say goodbye and I'll see all of you... shit; whenever we... I get there. I'll explain everything when I see Kara. Bye for now.\"\n\nThe cab ride was miserable. It was clear the revelers were out on the roads heading to wherever they were going to ring in the New Year. The surface streets weren't much better. But eventually we got to our destination. I paid the fare, tipped the pleasant young man well, and wished him a safe and Happy New Year.\n\n** December 31st **\n\nKara\n",
        "The drive to Connie's is more of the same. I lean my head back and try to tune everything out. The last thing I want to be is a drag; it's frustrating I feel this way. My thoughts are deceiving me, trying to convince me that getting high will make me relax. It's then I realize I've been rubbing the outside of my pants pocket. Those two round bumps are sending jolts of anticipation through my body. Maybe just one? It's been awhile, I can handle just one.\n\nWe pull up to the restaurant; the temptation is quashed. The full parking lot shows we're hardly one of the first to arrive. I follow the two lovebirds, the music pouring out into the night as the doorman holds open one of two glass doors. The main dining room has been turned into a night club. Some of the tables and chairs have been moved to the edge of the room while the others have been removed completely. Most of the guests are dancing in front of the make shift stage setup at the far end of the room. A decent all female cover band is rocking out, engaging the crowd. Lights bounce off the walls and ceiling to the beat, and the bass is thumping.\n\nDestiny tugs me towards the crowd and I pull away. She spins around, face plastered with concern. She has to yell, \"What's wrong?\" I shrug. The people, the music, these fucking pills in my pocket, it's all unbearable. She senses the apprehension and adds, \"Let's go sit and people watch for a while.\" Shade is already mingling and starting to draw her own crowd.\n\n\"No, please go be with your lady. I'll sit down and let myself get adjusted.\" She starts to argue but I interject, \"Please. I promise to come find you soon.\" I force my face to show calmness I don't feel. She gives me kiss on the cheek, a quick hug and trots off towards the stage. Phew. Crisis adverted. I find a chair near the bar, making sure my back is to the wall.\n\nLooking out into the crowd, everyone appears carefree. It seems ages since I remember being 'normal'. At the moment I'm failing to even breathe normal. The air feels dense, the music and voices are melding together into a deafening hum. Damn it, I need one. I won't ruin the night for Destiny, not after all she's done for me. A convenient lie, I ignore that bitch in my head. Waving over a waitress, I take a glass of white wine from her tray. Fishing out one of the green devils, I push it onto my tongue before I have a chance to think about it again. A deep drink and it's down the hatch. It won't be long now.\n\nIt starts with a warmth that slowly envelopes you. Then your mind begins to let go, releasing you from your cage. Finishing my wine in one gulp, I set the glass down and get up to join Destiny on the dance floor. Now the music calls to me. My body responds, hips swaying as I walk, arms reaching into the air. Shade smiles and nods her head to let Destiny know I'm standing behind her. She looks over her shoulder at me then backs up until her body is moving against mine. Sandwiched between her lover and me, I keep my hands off but my body close. \n\nThe song comes to an end and I scream out, \"Woohoo!!! Yeeeah!!\" \n\nDestiny spins around. \"What's gotten into you?\"\n\nLaughing, I say, \"Let's go get a drink!\" I turn while taking her by the hand but she plants her feet. Party pooper, I let go and hurry to the bar. She yells something after me; I don't bother to go back and find out. \n\n\"Shot of tequila,\" I say as I lean over the counter, making sure I'm heard. The cute, silver-haired bartender grins as she puts the glass on the bar and fills it generously. She sets a bowl of limes and a salt shaker down next to it. I wink at her; she has cute dimples. Lick, drink and suck! \"Wooow!\" My lips pucker as it leaves a trail of fire on the way to my stomach. \"It's been a while.\" She giggles and waits with the bottle at the ready. I nod and she pours another. I like this woman! I wonder if she'd call herself 'Experienced.'\n\n\"How is it you're here without a date?\" Before I can answer she's summoned to the other end of the bar. \n\nI feel electric. I knew I could handle taking the pill. I'm totally in control.\n\nYou're lying to yourself again. \n\nHow many of these do I need to drink to shut you the fuck up? No response. That's what I thought bitch. I down the next shot. Damn, I can feel it all the way to my toes! \n\nDestiny comes bopping up to the bar and plops down next to me. \"I think you need to slow it down, sister.\" Who the hell is she to tell me that?\n\n\"I think you need to go. I'm having fun; I need to have some fun.\" The bartender is back, she wiggles the bottle at me and I nod. Destiny places her hand over the glass. \"What the fuck?\" I push her hand away and she puts it back.\n\n\"Kara! Come dance with me. Please stop this.\" I want to lash out, hit her, but her soft greens reel me back to sanity. She smiles, knowing she's won. As she drags me out to the dance floor, I catch someone in the corner of my eye. I'm in disbelief but my heart beating out of my chests says it's true. LISSY!!! She's standing with Connie at the front door. I run to her, shrieking so loud my own ears are ringing.\n\n** December 31st **\n\nLissy\n\nThe greeter's stand was much closer to the door tonight than normal. A beaming Connie saw me.\n\n\"Hi Connie, you look spectacular tonight.\" We kissed after I took my coat off.\n\n\"You're pretty sexy yourself, Lissy. Destiny already told me what's going on. Do you want me to take care of your luggage for you?\" A lifesaver - that's what she is.\n\n\"Yes please. I'd really appreciate that. There's the suitcase and the smaller bag. And can you arrange to have my coat be wherever Kara's is please?\"\n\nShe nodded. \"Not a problem at all; I'll take care of everything.\" She smiled and touched my arm with her hand. \"You better get going. Kara is going to be excited out of her mind when she spots you.\" We both heard a screech.\n\n\"Lissy!! Oh my god, oh my god, oh my god -- you came home for me on New Years Eve you wonderful bitch.\" Kara had come running as she talked -- well, it was quite a bit louder than talking. She threw her arms around my neck, pressed me against the wall, and pushed her hips against mine as we kissed. I was happy to see her too; she looked fine -- gorgeous actually. Those hands came down from my neck and began to grope me. And I mean there was determination in them. I got the feeling she wanted to fuck me -- crowd or no crowd. Something was definitely off here.\n\nUsing nearly all of my strength, I pushed her away from me. Angry, wild blue eyes stormed at me.\n\n\"What the hell did you do that for?\" There's something in those eyes that I've... oh dear god! Is she high?\n\n\"Lover, this isn't the time or the place for that.\" I smiled brightly. \"Do you feel okay?\" She looked away.\n\n\"Yes, of course I do! What kind of question is that?\" The kind you ask when you're worried your lover is high.\n\n\"I don't know, Kara, you seem a little... too excited perhaps.\" I took her hand. \"Let's go wherever the rest of the crowd is, blondie. I can tell you about my day and some of the other stuff about the trip.\" I looked over my shoulder at a very startled and concerned Connie. \"Thank you for taking care of my things, Connie.\" She smiled but it didn't make it all the way to her eyes. I turned back to Kara and said, \"Come on, sweetie, let's find the others.\"\n\nI was concerned about my honey. The conversation with Destiny didn't do a damn thing about calming my nerves. Plus I'd been in an airport or on a plane -- well, since late morning. And then there were those blue eyes. Warning bells had gone off when I'd looked into them; add to that the fact she had looked away when I'd asked how she was feeling.\n\nSqueals, kisses, and hugs were the order of business when the rest of the group spotted us -- me, specifically, coming to join the festivities.\n\n\"Mom, you weren't coming home till Thursday morning I thought.\" Rachel gave me a kiss and hugged my neck. I kissed a delighted June as well. She gave me a thumbs-up and winked. I'm never exactly sure what to do with my kid's kid.\n\n\"Sweetie, your sister wasn't thrilled with my decision but she didn't squawk much. At the end of the day my decision had to do as much me missing my honey as it did her missing me.\" I smiled brightly at blondie, who pulled my head down and gave me a kiss. Turning back to Rach and a now frowning June, I said, \"What's going on with the two of you?\"\n\n\"We're moving in this weekend. We've got a bunch of people, boys mostly, to help with furniture, boxes and other stuff. We're nearly finished packing -- other than last minute stuff.\"\n\nJune chimed in. \"We can deal with that crap tomorrow, you. Let's party!\" I noticed her eyes weren't on her honey or me but were on Kara instead; she seemed not to notice. The two of them headed to the dance floor, heads close together.\n\nShade and Destiny, who had waited patiently while we talked to the girls, came over to us.\n\nCurious, I asked, \"Are Kim and Honey here too?\"\n\n\"They sure are,\" Destiny replied. \"They're on the floor. How are you, Lissy? Hey, have you had anything to eat?\"\n\n\"All I had was a Big Mac and fries about an hour before I finally got on a plane. Why? I can't get food here tonight.\"\n\nShade and Destiny looked at each other and smiled. \"Kara, would you mind if I borrow your sweetie. I'm going to find Connie and see if she can't help get Lissy something to eat.\"\n\nI saw a shadow pass over her face before she smiled. \"Nah, you go ahead.\" She gave me a kiss before adding, \"I'm going to go powder my nose. Don't be long, beautiful.\" I saw Destiny make eyes at Shade, who nodded.\n\n\"Come on, Lissy, we need to talk while we're finding Connie and get you some food.\"\n\n\"Did you see her eyes?\" Destiny jerked her head around to me and nodded. \"Is she on something?\"\n\n\"Let's find Connie; we'll go sit near the bar and talk.\" I ate my chicken Caesar salad while we talked. Yes it had bacon. \n\n** December 31st **\n\nKara\n\nWho even says powder their nose? It just came out. What I meant is I need to get away from this crowd; somewhere I can think. The noise is deafening. My euphoria is short-lived, is it the tequila? I take the hallway next to the kitchen; the first door is locked. Damn it.\n\nSquinting my eyes, I see another at the end. As I stumble towards it, the hallway is getting longer and the floor is shifting back and forth. I see my feet but I can't feel them. My hands are numb too. Definitely the tequila. How much did I drink? Hell if I remember. It doesn't take much.\n\nAlmost there, just a few more steps. My hand reaches out, fingertips tingling, all I grasp is air. The door knob moved! Oh come on! I close one eye, that's better, just a tad blurry. The knob is cool, please be open. I close my eyes and turn, it opens with a click. Thank you. Okay, there's a sofa just a few steps away. I lean forward and let gravity take over.\n\nPhew. This is better, quiet. It must be Connie's office. \n\nKara, you are royally fucking this up. Lissy is home and she's already left you.\n\nShe went to eat! Shut up.\n\nNo, she left to get away from you.\n\nDid she? Oh god, she did. I was desperate to be close to her, to show her how much I miss her, need her. She pushed me away. I choke on my tears as they burst to the surface. The realization is a knife in my heart, each sob twisting and stabbing.\n\nShe knows, Kara.\n\nKnows what?\n\nThat you'll never get better.\n\nNo! I will, I am.\n\nLook at yourself, you know that's a lie. This is you, the true you.\n\nStop bringing me down, let me go. I didn't even realize I grabbed it from my pocket. Without hesitation I put the pill in my mouth and swallow it down with my tears. \n\nClose your eyes, the pain will be gone soon.\n\nLissy, I'm sorry.\n\n'GET UP!' It's Kelly's voice, but I can't see her. 'Fight Kara fight.' She's in my head; this is all in my head! \n\nWhat have I done? I can't let her see me like this. I try to stand but fall to the floor. \n\n'Kara, don't be afraid.'\n\nWait, what? That's not Kelly.\n\n'Stop struggling and sleep.'\n\nAlexis? Oh god, no! \"LISSY!\" I crawl frantically towards the desk. \n\n'She's gone, she doesn't love you.'\n\nThat's not true, you're not real. This isn't happening.\n\n'I'm the only one that understands you.'\n\nNo, no, no. I use all my strength to pull myself into the desk chair. My eyes are weighted down; I don't want to sleep. \n\n'That's it; you'll be with me soon'.\n\nNO! Frantic, I look around for something to help me. Zeroing in on the scissors, I snatch them up. My hand is shaking so badly, it's difficult to keep from dropping them. I'll prove this isn't real, that she's just in my head. \n\nBefore I can change my mind, I open the scissors and push the blade against my arm. Do it! Dragging the edge from my wrist to my elbow, it scrapes the skin leaving droplets of blood in its wake. I can't feel it, it's true. Exhaustion finally overtakes me. Slumping, I slip away.\n\n** December 31st **\n\nLissy\n\nI don't even know how long Destiny and I talked. It couldn't have been much fun for her to tell me and I promise you it wasn't much fun to hear about it. It had only been 3 days since I'd left. I couldn't believe how 'weak' Kara was. \n\n\"I'm so upset with myself, Destiny. It feels like I should have stayed home. She's much worse off than -- well, it's looking like she's worse than any of us thought.\" Her face reflected my concern. \"The time we were apart caused way more of an emotional problem than any of us could have guessed; it's as if she's falling apart in front of us.\"\n\nA few minutes passed before she said, \"Lissy, it's really not my place to pass judgment on this situation or the two of you. I thought Kara was flying a little too high coming out of the meeting with her boss. I'm not sure she even heard the part about rehab; that's how excited she was about getting her job back.\" I saw green eyes shift over my shoulder. \"Hi babe, how are you?\" The hair stood up on my neck.\n\n\"Have either of you seen Kara?\" Oh my god. \n\n\"We've been sitting talking while Lissy is having her salad. You haven't seen her?\"\n\nShade shook her head, saying, \"No, I asked the girls as well. They haven't seen her either.\"\n\nI stood and walked to Connie. \"Would you please come here for a minute, Connie?\" \n\n\"What's the matter everyone; is there a problem?\"\n\nShade said, \"No one has seen Kara; I have no idea how long it has been. She said she wanted to use the ladies room.\"\n\nConnie wasted no time. \"Come on, let's fan out and see what we find.\" Looking at me, she added, \"Why don't you and I start in the washroom and work our way back.\" Looking at Shade she added, \"A minute or two later the two of you come join us.\" Heads bobbed in agreement.\n\nDestiny said, \"We won't say anything to the kids; we don't want them involved or concerned at this point.\" Good point.\n\nI did my best to put my fear out of my mind, which was a spectacular failure!! The first stop was the ladies room. Only one of the three stalls was closed.\n\n\"Excuse me, miss, did you see a blonde wander in or out of here in the last five minutes or so?\"\n\nA voice very definitely not Kara's replied, \"No, and I'm not blonde either.\" Connie thanked her and we left.\n\n\"Let's check the supply closets.\" \n\nAbsolutely nothing was found. Connie opened locked doors and turned lights on to be sure. Shade and Destiny joined us. \n\n\"Nothing yet?\"\n\n\"Nope. My boss's office is next, then mine.\" She did have a key for a well furnished office that proved to be empty. \"Not too many places for her to be if she's not here -- unless she's outside.\" I shuddered. Last was Connie's office. The door was unlocked and the light was on. Kara!!! I screamed and ran to her.\n\n\"Somebody call 911!! Her arm... there's so much blood!!\"\n\nConnie took charge. \"I'll call. I'll be sure to have them come around back to keep this as private as possible.\"\n\nA napkin appeared; I pressed it to the wound, trying to stanch the bleeding as I screamed her name. Oh, there's not as much blood as I thought when I first saw her. Thank god.\n\n\"Kara!! Please wake up.\" I knew I was crying. \"What have you done, damn you!!! Please don't leave me. God help me... not now, not after all this!!\" \n\nI wasn't the only one crying; Destiny was as well. We hugged as the EMTs rushed in and began working on Kara.\n\n\"Why did she do this? I just don't understand. Everything was fine earlier.\"\n\nI could barely stand to watch. My words were as much to myself as they were to Destiny. \"Why would she do this? Why didn't she just come to me? She was so dejected when I pushed her away.\" Destiny's eyes showed her confusion; I tried to make sense of it. \"It felt like she wanted to molest me right there by the front door.\" Connie didn't say anything but her eyes showed her alarm.\n\nDestiny turned and found Connie, who nodded. Turning back to me she said, \"She was dancing and wanted us to get a drink. She tried to take me with her but I told her I didn't want to.\" Destiny stopped to take a breath, gathered her thoughts and continued. \"Aggravated, she walked away by herself. When I found her a short time later; she had just had a shot of something and was motioning for another. She was very angry when I told her not to.\" \n\n\"Dammit Destiny, you didn't mention the incident at the bar earlier. It was a mistake to leave her alone to get something to eat.\" My mind was racing as I replayed each minute since I arrived. \"Kara must have gone downhill quickly from the moment I walked in and pushed her away.\"\n\nShade, naturally, was the one to put things in perspective.\n\n\"Let's not play the blame game here, you two. We may find out more when she wakes up.\" Good point!\n\nIt may have been 15 minutes, it may have been longer. The office was essentially a crime scene - or at least it felt like one. A still unconscious Kara was hustled out on a gurney, her hands in restraints. The EMTs had been told that there was a high probability that she was high on oxycodone. Destiny made sure to add that one or more shots of liquor had been consumed. A raised eyebrow and a glance at her partner by the female EMT was part of the fast evolving drama.\n\nThe EMT asked Destiny, \"Are you with Ms. Thornton?\"\n\n\"No, Lissy Stone is.\" I stepped forward. \"Ms. Stone, the wound on her arm is little more than superficial. I'm not sure they'll even set stitches -- possibly on the uppermost part of the arm. We're concerned about the drugs and liquor. Do any of you know how much oxy she took and how much alcohol she had?\"\n\nDestiny and I looked at each other; she shook her head.\n\n\"I'm not sure; that's for both, actually. I didn't know she even had the damn things, let alone that she took them -- however many there were. I got here around 10; I was in Minnesota visiting family and came back tonight.\"\n\nI knew from her eyes the dark haired woman couldn't have cared less about my itinerary. She turned back to Kara.\n\nWe were told the nearest hospital was not very far -- only a couple of minutes away. It was time to gather the troops and head out. The girls would ride in the back of Shade and Destiny's car. I rode in the ambulance -- it was grim! That's all I have to say about that. The woman I love, unconscious, in an ambulance, on New Years Eve. Happy New Year -- not by a mile I'll tell ya!\n\nKara and I weren't 'immediate family' so I wasn't allowed into the ER suite as she was being examined. That was said by a pretty but firm nurse. I knew that this wasn't someone I could sway -- she was accustomed to chaos.\n\n\"I understand your concerns, Ms. Stone. Either I or someone on staff will come find you when Ms. Thornton is taken to her room after her eval.\"\n\nCutting her heart out seemed to serve no purpose so I responded as graciously as I could.",
        "\"Thanks, Jill. I appreciate what you're doing. There are a bunch of us here in ER in the waiting room.\" \n\nShe nodded. \"I can see this is a woman lots of people care a lot about.\" A quick smile and she said, \"I need to get moving. Your Kara is hardly the only one here tonight.\" It took every bit of restraint for me to not hug her.\n\nI turned to find 6 pairs of eyes on me. I did my best to fake a smile.\n\n\"They'll let us know when they're done here and are ready to send her to a room. It's hard to imagine that they won't keep her overnight -- maybe longer.\" I shook my head.\n\n\"Mom, why didn't you tell us what was going on?\" Blessed be the innocence of 20-somethings.\n\n\"Honey, I didn't want to wreck your New Years celebration. I'm sorry if you felt left out -- but that was my thinking.\"\n\nJune looked at my kid and said, \"Baby, what Mom is saying makes sense. Let it go please.\"\n\nI looked at the crowd and said, \"Geez, I love you all for coming but this is silly. Go have some fun; it's New Years Eve.\"\n\nA quiet voice said, \"Destiny and I aren't going anywhere, Lissy. We may not have the proverbial dog in the fight but we're concerned. We're in this till the finish.\" Shade smiled and added, \"I've spoken with Kelly, who may be here at some point tonight.\" Four faces looked at me, at Shade, and back at me. Shade smiled. \"Mistress Kelly is someone Kara came in contact with several times. She's an important woman who holds considerable sway with her.\"\n\nAs you'd expect, Honey chimed in. \"More than Lissy?\" No one laughed -- not tonight.\n\nShade's tone was chilly. \"This is hardly the time or place, Honey.\" I thought Honey might dissolve into the floor.\n\nEventually a room opened up on the 7th floor. They wheeled Kara out and we went upstairs with her. The horde sat in the waiting lounge while I stayed with my still unconscious honey. The nurse told me what they were doing but... shrug. I don't do medical speak. Kara's arm was bandaged; nothing more from what I could see. \n\n\"Why do you have her hands in restraints?\"\n\n\"It's for her own protection. We don't want her pulling out her IVs. The scratches on her arm are superficial, but we'll go with the notion Ms. Thornton was intending to hurt herself until we actually speak with her.\"\n\nThat made sense. I smiled. The nurse turned back to a still sleeping Kara. Why did you try to hurt yourself, woman? How did things get so out of control tonight that you felt like you had to do that? What I really feared was that I was partly to blame for it all. I'd gone to Minnesota, come back, pushed her away, and then left again to eat. Well, talk to Destiny and eat. She needed to hurt herself after August and Michigan. Did I do it to her again?\n\nGod love her, a little while later Rachel came to join me. She pulled the other chair close to me and held my hand without saying a word. Mother and daughter sat together in a silent vigil for Mom's lover. What a long, strange trip it had been.\n\nI was staring out the window when I heard, \"Where am I?\"\n\nI got up and went to her bed. \"You're in the hospital, Kara. Do you remember what happened?\"\n\nKara felt her wrists confined, made a face, looked at me and asked, \"What's this about?\" Her eyes tear, the realization hitting her like a baseball bat. \"They don't think... oh my god.\" I grabbed her hand. My lover's frantic blues searched mine as she pleaded, \"Lissy, baby, please, no! I would never... I didn't want to. I just needed to know.\" Her voice trailed off as her eyes turned away from me.\n\nI kept my voice low, trying to soothe. \"Know what, honey?\"\n\n\"I... I lost it. I thought you hated me.\" What?! Just stay quiet and listen. In the corner of my eye, I saw Rachel slip out. Kara didn't seem to notice, too fixated on her explanation. \"You left me to go to Minnesota, you pushed me away when I was so excited you'd surprised me by coming home, and then you left again to go eat something.\" There was nothing I could say; these were irrational fears. I did the only thing I could think of. I stood, leaned over and pressed my lips to hers. It was the most tender kiss I'd ever given or received. In those few moments, trust me, no words were needed. If I could only bottle that kiss, my girl would never be sad again. Now who's irrational?\n\n\"These aren't exactly the type of restraints either one of us is used to is it?\" She's an imp; I laughed.\n\n\"You are truly retarded, do you know that?\" We both giggled.\n\n\"I hate that I messed up New Years Eve for you, Lissy. I heard voices; it was so weird. Kelly, Alexis, and other voices as well. Telling me to give up and not give up. Once I'd taken the first pill and the tequila I was pretty messed up. After I took the second one I could barely stand up. I'm not sure I even remember cutting myself, though I sorta remember wanting to put an end to all of this. The sense of confusion, disappointing you and Mistress Kelly, feeling more and more out of control - I hated it.\" The look in her eyes was sadness. They looked clear; she was focusing on me unlike before.\n\n\"Rehab is pretty much a given now.\"\n\nKara nodded. \"Allen, my boss, Mr. Leland, said I would have to go inpatient and complete treatment before the bank would even consider giving me my old job back.\" She squinted for a moment. \"He started out so formally; I was worried he was going to give me a polite brush-off.\" She looked away for a second or two and continued. \"I got the feeling he, or someone close to him, had been addicted to something or other at one time. When I told him what happened to me the change in his attitude was noticeable.\"\n\n** Kara **\n\nI could feel her when she walked in the room. Instantly my hand begins sweating and I hold Lissy's tighter. She's standing next to Shade, her eyes piercing into me. Seeing my face drain, Lissy turns and stands a bit closer as they walk to the bedside. \n\n\"Lissy, let me introduce you to Mistress Kelly.\" Kelly's smile is reserved as she extends her hand. \"Kelly, this is Lissy Stone.\" They shake hands delicately. \n\nMistress' tone was pleasant but tinged with ice. \"Lissy, it's a pleasure to finally meet the woman who has captured Kara's heart.\" 'Chills' is the best way to describe what those words made me feel. No, it isn't news, but maybe it's the way she said it. The love I have for Lissy could fill a thousand hearts. She has mine and I know she always will whether we're together or not. \n\nAt some point I must have stopped listening, caught up in my thoughts. Lissy asks, \"Honey, are you alright?\" I nod and force a grin. Not convinced, she persists. \"Are you sure?\"\n\n\"Yes, baby. I was just thinking.\" The thought brings a real smile to my lips.\n\nLissy smiles back. \"Do I want to know, lover?\"\n\nI blush. \"I was thinking about how much I love you.\" After the kiss we shared a few moments ago this is hardly a revelation, but considering we are no longer alone her flush is understandable. I can't help it; the words just came pouring out.\n\nShe bends, gives me a peck and says, \"I'm going to have a chat with Shade while you and Kelly talk.\" Part of me wants to grab on and hide behind her. On the other hand, I don't want Lissy to hear the lashing I'm getting ready to take. I'm ashamed enough as it is. Thankfully nothing more is said; they turn and leave.\n\nI do my best to keep my head up, but as Mistress gets closer, it falls. My eyes are drawn to the bandage on my arm. I wish I would have thought to hide it under the blanket. Like she doesn't know?\n\nOkay fine, it was just a thought.\n\n\"Kara, you will get no anger from me tonight.\" My head pops up. Really? Her fingers brush my cheek; I close my eyes for a second in response. \"What you will get is a directive which you will follow without question.\" She is not someone you argue with. I listen, fighting back the urge to speak. \"Shade is speaking to Lissy right now about some inpatient rehab facilities we've found that will adequately meet your needs. You will go directly to whichever of those Lissy decides.\" All I can do is nod and wait for the rest. Her voice is stern but gentle as she adds, \"When you get there, you will do whatever they ask of you. No matter if you agree or not, understand or don't. Have I made myself clear Kara?\"\n\nI will NOT cry. I nod as I swallow hard and reply, \"Yes Mistress, crystal.\" Her hand covers mine.\n\n\"That's settled then.\" Well, alright! Relief washes over me. \"Now, let's talk about that beautiful woman who was at your bedside when I came in.\" We smile at each other knowingly. She's said her peace, I've agreed and we're moving on. The next few minutes I do my best to talk while blushing. We talk about times before the weekend in Michigan, happy times. It dawns on me - these are the thoughts that will carry me through whatever lies ahead these next few months. I need to focus on what Lissy and I had and what we'll have again. God, I hope we'll get back there. We have to.\n\nMy face is a mask; my body feels stiff as a board. Kelly's voice is soft and comforting\n\n\"Don't do this again, Kara. Go get well in rehab. Help them help you figure the puzzle that you are out. It may not be easy.\" She notices them come in and smiles. \"But there's little doubt in my mind that your Lissy is worth the struggle.\"\n\n** Lissy **\n\nShade and I found a semi-private room where we could talk. All 5 foot nothing of her hugged me; god love this woman!\n\nWhen we separated and sat down Shade spoke. \"Kelly and I have been on the phone looking for rehab facilities that can handle what Kara needs. There are several options; each of us knows people who have been in them. I have a list. You and I can talk tomorrow about the details and such. Are you staying the night here or coming home with Destiny and I?\"\n\nIsn't she amazing? Here I am in need of help yet again. A woman I barely knew less than 3 weeks ago was offering me her home yet again. How do you even begin to thank them, let alone think of repaying their generosity and kindness?\n\n\"What's Kelly doing with Kara, Shade?\"\n\nThe smile was thin. \"She's probably shredding her, while at the same time giving her hope. Kelly was most unhappy when I called -- not that I called, mind you, but that Kara and her problems were once again the reason for the call.\"\n\n\"Who is she anyway?\"\n\nShade smiled. \"She's a Domme; at least she holds herself out to be. I know her well enough to call when I need help but I can't say we're the closest of friends. Let's just say we both know people in some of the same circles.\"\n\nI didn't know enough or care enough (at least tonight) to press. \"It's impressive she came to see Kara tonight.\"\n\nThe smile was thin again. \"Let's get back to the room. I'd pay attention to Kara's body language, even if she's in a hospital bed. You may learn a lot from her body language.\" Okay then.\n\n** January 4th **\n\nLissy\n\nIt's been fairly frantic these last few days. Even after Shade and Kelly had narrowed the search down to only a few options, I still did my due diligence and visited each one. After Kara's meltdown and the realization that I had no clue how deep her wounds are, I wasn't about to make a knee jerk decision on the rehab facility. First and foremost, I had to ensure they not only offered help with her addiction but could help with the other demons she struggled with during her time with those bitches. And not only that -- it seemed she needed to deal with what had transpired with her time with Bette all those years ago. See, I'm not real happy with talking about that one right now. Kara's not the only one who needs to go back in therapy. Alexis/Bette fucked with more than Kara. I need help dealing with... well, I guess if you've been reading our story you know!\n\nActing on Shade's suggestion, I contacted Kara's HR people and let them know what was happening. It was a challenge to figure out how much to share with them -- but after she told me about her meeting with her boss, I figured the more I told them, the better she'd have of not just getting herself healthy but getting her job back.\n\nMay I take a moment to give you something of a personal perspective? Thank you!\n\nDo you remember the chat I had with my Jenna? The one that wondered if we could ever get back to wh... us? I can't tell Kara -- really I can't. But it's been on my mind a lot these days. Coming back from Minnesota has been a revelation as well as a disaster of sorts. I had NO clue how much she leaned on me. Part of me loves that she did and part of me cringes -- especially given all of this. Can you understand??\n\nOkay, anyway -- I was driving the two of us to the 90 day inpatient treatment facility in... the area. They had a separate facility for women and were 'LGBT friendly.' Unfortunately Kara would bear the brunt of whether that was true or not.\n\nBlondie was subdued as we packed. She'd been resigned to going since her 'talk' with Kelly, but now that the day was here it seemed to be weighing heavily.\n\nWe had stopped once for gasoline, coffee, snacks, and a bathroom break.\n\nWe rolled up, as planned, about 3pm. \n\nAs we gathered her bag and things before heading in, I asked, \"Are you okay, honey?\"\n\nAs you might expect, she shook her head.\n\n\"I'm scared, baby. It's so many things... the hospital, not knowing what we'll find down the rabbit hole and what I'm most afraid of it...\" Her chin buckled but she held it together as she finished her thought. \"Being away from you for so long, especially... \" I nodded, knowing exactly what she meant.\n\n\"I know, lover, but we both know you need time. Time to learn why; time to fix... whatever.\" I shrugged. \"You know I'm going back to therapy as soon as I can. I just have to find somebody.\" Kara smiled.\n\n\"I'm going to miss you -- that's most of it.\" She looked down, shook her head and said, \"I've leaned on you to be my anchor, Lissy, and that's not good for either of us.\" Oh my god! \"I need to be part of us, able to stand on my own, for me and for you.\"\n\nI smiled. \"That may be the healthiest thing I've heard you say in quite a while you beautiful thang you!!\" She biffed me.\n\nOnce inside, introductions were made, signatures were gathered, (most of the details had been handled online and on the phone) and a myriad of people were introduced. I don't know how Kara felt but I was overwhelmed. I felt her step closer to me and hold my hand. Oh good; she's as uncomfortable as I am.\n\nThe admissions director said, \"Okay, Kara, if you're ready let's get you to intake. Say your goodbyes to Lissy. And be sure to give her your phone.\" We had talked about this, I think. Oh shit.\n\nFrantic blue eyes looked at me. \"What! NO!\" she screamed. \"I can't... you can't... did you know about this!?!\"\n\nI looked at Janny, a slender woman with a buzz cut, and asked, \"How long is this phone ban in effect?\"\n\n\"The first 30 days; it coincides with the no visitors ban.\"\n\nKara began to tremble. She hurried to the intake door and jiggled the handle. It was locked. Retreating to the nearest corner, she slid down the wall and pulled her knees to her chest. Her eyes were wild. \"I can't do this Lissy! I thought I could, but I can't. Take me home... PLEASE!\" \n\nJanny looked at me and said, \"Ms. Stone, do you understand the whys and wherefores?\"\n\nI nodded and said, \"Not completely if you must know. But Kara is who's important.\" I walked towards blondie with my arms out. It was almost as if I was approaching a rabid animal, she looked that frenzied. My heart was breaking but I needed to be strong. I HAD to be strong, for her and for us.\n\nWhen I reached her, she slapped my hands away and shouted, \"YOU FUCKING BITCH!! YOU BETTER NOT LEAVE ME HERE ALONE!!\"\n\nMy soul did flip flops as I said, \"Kara Ann, you listen to me. If we are ever going to have a chance to be a couple, we both have work to do. It sucks that yours includes this.\" I waved my arm. \"Give me the phone.\" She shook her head. \"Blondie, understand something. If I leave here without the phone you'll never see me again.\"\n\nMay I tell you something? Those were the hardest words I've ever said in my life.\n\nDark gray eyes scorched me as she was deciding what to do. Finally, she reached in her pocket and handed me her phone. Thank God!!\n\nJanny acknowledged me and the struggle with a nod and a smile. \"Thank you, Ms. Stone. If the two of you want to say your goodbyes we'll take Kara to intake.\"\n\nI sat on the floor beside her, held the woman I love and whispered in her ear. \"Don't be angry, lover. You want to do this. Do it in style; your style. Get the work done, come home, get your job back, and let's get us right. Please!\"\n\nHer body was rigid as she nodded. I wasn't very hopeful.\n\nHer voice was ragged, \"I'm sorry, please don't hate me. That wasn't me.\" I knew it had been nothing more than fear. She slumped in my arms.\n\n\"You know as well as I do that this is EXACTLY what you need. You're just scared -- which is perfectly fine; which you also know.\"\n\nWe kissed; me tenderly, Kara -- not so much so. Whatever. I stood and pulled her up with me. Her arms stayed firmly around my waist.\n\nI turned to Janny and said, \"Thank you for giving us time to say goodbye.\"\n\nSympathetic eyes smiled and said, \"You're very welcome. You can come visit after 30 days have passed. I trust you both have been given the details.\" \n\nI nodded; indeed we had.\n\nI looked at a frightened Kara. \"I love you!!\" No response. \"Please never forget this is for your benefit and mine. That means it's for our benefit.\"\n\n\"Don't you do this!! PLEASE!!\" The tears were now running freely down her cheeks.\n\nI looked from Kara to Janny, who smiled as she nodded. Taking her hands from my waist and holding them gently in mine, I waited until I knew she was listening.\n\n\"You need to get to intake and I need to get home, lover.\" I felt my eyes fill; how could they not. I did my best to bury the raging emotions I felt as I said, \"I love you!! Please do everything they tell you to so we can be... us!\"\n\nMy legs felt like steel beams as I turned to leave. My stomach was in a tizzy as acid roiled. And we won't even talk about my eyes as I heard the woman I love scream, \"LISSY!!! PLEASE! I'M AFRAID! DON'T LEAVE ME HERE.\" When I didn't turn around, she yelled, \"I LOVE YOU!\"\n\nI love you too, Kara. I hope you understand the sacrifice I'm making to give you what I think you need. I sat in the car and cried hot, bitter tears. Was I doing the right thing? Do I still love her like I had? Can we ever get back to 'us'? The tears flowed unabated -- if you must know, they did when I typed this. If you love someone like I love my Kara, how do you not give everything you are to her - whatever that entails. The only thing I won't give her is... me.\n\nDo you understand? I won't let her demons drag me down. I can't!! I can help pay for her inpatient stuff. I'm lucky that way. I have Dylan's estate behind me which has helped and is helping now. Anyways, that's where we are right now. I'll let you know how things are going soon, okay?\n\n** February 1st **\n\nKara\n\nJournaling has become part of my every day these past four weeks. I sit at my metal desk by the window and write... sometimes until my hand cramps. I fought it at first, thinking it wouldn't do any good but my therapist, Claudette, insisted. Turns out she was right.\n\nI've written Lissy every day since I've been out of detox. That lasted one incredibly arduous week. Think four white walls, a cot and a blanket. It sounds cruel, but on the contrary it was soothing. Your body and mind spends 24/7 fighting itself. Claws trying to scratch and rip their way out, while a flood of thoughts and emotions pour in. Truly is hell on earth. Point is - the plainness of the room was welcomed. The last thing I wanted was any other type of stimulation. The blanket became my lifeline. I still have it. When Janny came to escort me to my room after detox, she smiled warmly and nodded when I asked her if I could keep it. I had hated her since she dragged me kicking and screaming to that very room on my first day, but we're friends now. She has a tough exterior but has shown me her softer side these past weeks.",
        "Okay, back to my baby. Even though the letters were written, they weren't allowed to be mailed. Truth be told, that's probably a good thing. Some of them, well, they're not exactly cheerful. Either way, I always fold them, put them in an envelope and even address them. There are two neat stacks on the corner of the desk. Silly as it sounds, they comfort me. I'll lay my hand on top of them, close my eyes and feel Lissy near.\n\nToday is different; today Claudette says I can send my letter. It was a concession after a huge breakthrough in my therapy. That's what she tells me anyways. It's all felt difficult, today didn't seem any different. I was not going to argue though. I nearly tripped and then almost knocked someone down hurrying to my room after the session. I can't wait to tell her, tell her how far I've come...\n\nLissy,\n\nAs I sit here writing you this letter, my first thought is 'what are you doing right this instant?' I used to wonder if you were missing me, still loved me and whole host of other depressing thoughts. Now my head isn't foggy anymore. I only have to recall one moment of us and know in my heart that you ache for me as much as I do you.\n\nIt's lunch time on a Saturday... are you making one of your salads with cold chicken or maybe hanging out with Rach and June? Either makes me smile. I hope I can get back there with you again. This thought doesn't come from a dark place; it comes from this place of new clarity. The place where I realize how much I've hurt you (us) and I need to take responsibility.\n\nAfter Alexis, I built some very deliberate walls to guard myself and anyone else from what I saw as evil inside of me. When we met, you opened my heart and filled it full of you. From the moment I saw you I knew there was no keeping you out. I was foolish to think my demons would just go away and we both paid dearly for it. Responsibility is so much more than an apology.\n\nIn a few days, you'll get to visit. I want you to know that we don't need to have a deep conversation. We don't need to rehash what's happened or decide anything in our future. All I want is to see you and feel your arms around me. The rest of it? We have plenty of time after I get out of here.\n\nI know that this first month was mostly about acclimation and acceptance. I'm there and proud of myself. These next two months will be the real work. Digging deeper than I'm comfortable with and rebuilding myself from the bottom up.\n\nLissy, I know I've done immense damage to us. While it makes every part of me fearful to think of, I know it may not be repairable. That no matter how much we love each other, it may not be enough to come back from this. Oh baby... you know how much I don't want that to be true, but I will accept it.\n\nI have to stand on my own two feet to ever be good for us. I promise you that I will give all of me to this process of getting healthy. I will return to you ready to fight for us and for ME! \n\nI love you... always,\n\nKara\n\n*\n\nAuthor's Notes: \n\nThis final chapter, like the others, is a work of fiction. The response to this story has been overwhelming. Thank you all so much for your votes, comments, and emails.\n\nI've mentioned that a story of this length is likely to have a few words misspelled. I write, I edit, and I have someone very capable proof. And still things get missed. Please make allowances for the human factor.\n\nBook II was very difficult to write. The subject matter wasn't the easiest and there were parts that were very, very dark. I was concerned about how people might react. Kara was going through a rough time; they both were actually. The readers have been so wonderful as they've moved from chapter to chapter. As much as anything I'm grateful that my writing can evoke the kind of emotion from my readers as has been expressed in the comments and emails I've received. I appreciate each of you very, very much. \n\nBook II would be a pale shadow of itself if not for the gifted writing of my partner in this venture. Her name is Rachel. As you know by now she's a gifted writer. She had the far more difficult task in this tale of creating and dealing with Kara's ordeal. She has done so superbly. She brought Kara to life and showed her to be deeply flawed and just as deeply in love with Lissy. Rachel, this has been wonderful. Thank you so much for your work, your amazing gift, and your suggestions along the way. I hope we get to do this again. \n\nOne final announcement before I say farewell for now. There will be a Book III. There has to be. There's so much more to say, so much more for our girls to do. I haven't started yet but I will soon. I put a lot of work into my writing and I'm constantly experimenting and trying to grow. Thank you so very much for reading. See you soon!\n\n~ AVL ~  "
    ],
    "authorname": "AVixenLiterally",
    "tags": [
        "lesbian novella",
        "lesbian drama",
        "lesbian romance",
        "lesbian sex",
        "christmas",
        "visiting family",
        "new years eve"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/book-02-a-match-made-ch-05"
}