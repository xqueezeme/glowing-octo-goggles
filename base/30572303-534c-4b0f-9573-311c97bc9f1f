{
    "title": "Arcanum - Of Steamwork and Magic Ch. 16",
    "pages": [
        "November 1<sup>st</sup>, 1885 \n\nThe elven city of Quintarra swayed beneath my feet \u2013 moving and groaning like Edward Teach's ship at the high seas. I gripped onto the thin rope that served as the only security as the elven woman Raven led me from the base of the platform leading to the residence of the Silver Lady to the front entrance itself. Raven was, despite her earlier smiles, a woman that seemed to be quite severe in temperament. The earlier flare of sunny disposition had vanished beneath the storm clouds of focused concentration, leaving her feeling as unapproachable as a distant cliff \u2013 though just as achingly beautiful. Watching her climb the tree ahead of my self, I was reduced to a fumbling, hamfisted child, rather than a fellow who had scaled a few cliffs in his day. There was simply no contest between my scant months of practice and what untold eons this beauty had passed clambering through the treetops. Despite this, her face showed no scorn as she reached the highest branch. There she stood, her feet firmly planted, bare against the hard bark, her clothing tight and fitted for movement and grace \u2013 not modesty. She held out a hand to me and I grasped it. \n\nHere, I at least could feel some measure of comfort. Her muscles tensed and I felt only a slight pressure against me own weight. It was less of an assistance and more a guidance, showing me where to push myself to with my own leg muscles, but it was good to know that at least elven grace was paid for by a lack of the more brutish application of muscle. \n\nStanding beside Raven, I looked to her for instruction \u2013 and she jerked her elegant chin to a door that looked to have been carved directly into the living wood of the tree, taking advantage of knotholes and curvature of bark to form hinge and seam. It was quite an elegant design, nearly invisible from a distance, but breathtakingly beautiful to behold up close, covered in subtle geometric patterns. I traced one pattern with my finger, then looked at Raven. \"What are these patterns, Miss Raven?\" \n\nShe looked into my eyes. \"An elf can no more create a stag or a wolf in bark than you can on parchment with ink. We simply don't lie to ourselves about it.\" \n\nAh. Fascinating, I thought. But then the door swung inwards with a push of Raven's hand and I beheld the vast emptiness of the tree \u2013 unlit and dim. I spared a glance back to my companions: They all seemed so very small down there on the platform. Had we really climbed so far? So fast? And yet, despite their smaller stature, I could clearly see the look of intense concern upon Virginia's face. I lifted my hand to her and waved. She clutched to her chest, but then waved back with a mail clad hand. I turned to face the darkness. As my eyes adjusted, Raven murmured softly in my ear: \"Mr. Cog, I have heard your tale from Whysper. It is a disturbing one \u2013 dark and full of mystery. I hope that my mother gives you the answers that you seek. But...\" She paused. \"The Silver Lady is a being of great magickal power. Her spirit swims in the flow, rather than upon the shore of time, as we do. She is more of other worlds than this one. Her answers are never what one expects. Listen carefully, no matter how distracted you may become.\" \n\nI nodded, keeping my eyes focused ahead of me. Within the dimness of the chamber, I could see a silvery lump of fabric and flesh, seated upon a chair I could not quite make out. The figure seemed hunched and elderly, a thought that took my breath away. I tried to picture just how ancient an elf would need to be to show a wrinkle. How many generations, how many millennia, could a single person witness and still remain sane? With a feeling of creeping dread, I squared my shoulder. Raven, her voice soft, murmured: \"Your weapons, Mr. Cog.\" \n\nI started. But of course. I withdrew my pistol from my coat, and took off my electrical charge rings as well, not wishing to risk the effect of even the slightest technological field within a magickal place such as this. Before I forgot, I too removed my pocket watch \u2013 finding that it had completely seized up. Not even a single tick. \n\nThus disarmed, I stepped into the chamber of the Silver Lady. \n\nThe door closed and darkness became absolute. And then, like the universe returning, a light came \u2013 first a spark here, then there, then everywhere as the walls became coated in a fine patina of faerie lights. It was as if an entire colony of fireflies had roosted at once upon every whorl and knot of wood in those ancient walls. And I do mean ancient: The scent of the place was rich and must with generations of decay and new growth. The floor was covered in a soft moss that grew in a slow, lazy, not quite symmetrical spiral, leading inevitably towards where the Silver Lady sat...upon thin air. Now that the room positively glowed, I could see that the slender, shriveled lump of white and silver silks that was the Silver Lady sat upon nothing. There was simply emptiness between her lotus crossed legs and the mossy ground. Her body shifted \u2013 was that her shoulder? Or a head? A pair of almond shaped, brilliantly silver eyes gleamed from between the folds of that oddly shaped robe, and a voice like crackling leaves and rasping leather came from her throat. \n\n\"Hello...I welcome you, traveler.\" \n\nHer voice did not arrive in my ears at the same time it left her lips. It overlapped and echoed, like the sound coming from deep within a well...and yet completely unlike. Sounds from a well sounded distorted, after all. But this felt oddly natural \u2013 as if there was no other way for her to sound. My body leaned into it and I felt my whole form tensing. An eerie, crawling sensation prickled along my spine as it struck me just how vast it was, this world of ours. I had traveled into the depths of the Wheel Clan. I had seen were-rat armies on the march in the darkness of long forgotten mines. I had trekked across the Morbihan Plains, seen first hand ancient wonders washed up on the shore of the Isle of Despair, and even stepped through the life of another man via a phantasmagorical encounter with a specter. I had spoken with ghosts, matched wits with necromancers, and even witnessed the vile Arronax himself \u2013 the fell shadow that even now crept across Arcanum like a death shroud. \n\nAnd yet... \n\nI had never seen anything, heard anything, like this. \n\n\"I know you have come far,\" that echoing voice continued. \"And I have expected you for a long time now.\" \n\n\"What do you mean?\" I asked, my voice horse. \n\nA soft chortle came from beneath the sheets. \"I've seen you approaching from the east and from the west, Resh. You bring them with you, you know. All of them. They have no choice but to follow.\" She chuckled at how I tensed up. \n\n\"How do-\" \n\n\"How do I know that you call yourself this, deep within?\" She asked. \"You told me, Resh, darling.\" \n\nHer hand reached from beneath the robes \u2013 and for a single panicked moment, with my heart racing at a million miles an hour, I swore that it was a skeletal thing reaching for me. Bone white fingers, knobby and twisted and ancient. But then that finger touched my chin and the warmth of youth and life filled it. I saw her hand was more akin to silk, and the sheets she wore slipped aside as the Silver Lady unfolded in the air, spreading herself like the butterfly does when it sheds its cocoon. Standing nearly as tall as me, with hair the same pure silver-white as the sheets she had worn, the Silver Lady was ethereally beautiful in a way that stole my breath and stilled my heart to barely a motion. Her breasts were firm and high and tipped with nipples so pale pink they were nearly the same hue as her porcelain pale skin. She was utterly without blemish \u2013 no marks, no scars, no discoloration. Even her feet were dainty and perfect, and they remained in a ballerina's pose as she floated in the air before me. Her hair rippled and shimmered as if it were under water, and she looked down into my eyes as she crested upwards, her silver painted lips twisting into a wry smile. \n\n\"We have done this already,\" she said, quietly. Her fingers worked at the buttons of my shirt \u2013 and while her voice still echoed, it no longer rasped. It, instead...rang. Like chimes. \"And we shall do this again.\" \n\nI felt as if I were in a dream as her elegant fingers undid button after button. My shoulders rolled of their own accord, the motion subtle and gentle. Languid, even, as if I were a snake shedding my skin. My green muscles shone faintly under the firefly light and the Silver Lady leaned her lips forward. They were cool as they touched to the joining of neck and shoulder muscle \u2013 tracing the line of my strength. Her voice was a quiet croon. \"But I admit, I do always enjoy it...\" \n\nMy undershirt hit the floor behind me and the dreamlike feeling snapped, like a rope drawn taut across a knife's edge. My lips skinned back into a grin and I looked into the Silver Lady's face. \"Is this absolutely required for the answers I seek, oh Silver Lady?\" I asked, reaching up and cupping my hand upon the rump of a woman who likely was older than most human historical records. It was as smooth as a peach and as deliciously tight as any woman I had ever felt. Squeezing her, I drew an echoing, magick infused laugh from the ancient being. \n\n\"Without a doubt, Resh Craig. Without a doubt.\" \n\nAnd with that, she was upon me. She weighed less than nothing \u2013 touching her made me feel as if I was floating in the air. Her lithe, limber legs wrapped about my hips and hooked against the small of my back. Despite her frail stature, there was an iron strength in her, a strength that shocked me. It was the strength of ages \u2013 of magick and primordial time. It pressed the heat of her sex to my belly, and held my fast as her arms wrapped around my shoulders. Fingers worked into the long queue of hair I wore \u2013 and before I knew it, she had undone the tie and was caressing my hair out into its great, untamed length and wildness. Her lips, though, were the most busy of all: Locked on mine, she was plundering my mouth with a surety and grace that only ten thousand years could glean. \n\nMy hands gripped her thighs and I dragged the Silver Lady to the ground. My knees pressed to the matted moss under me, and I realized how grateful I was not only for her lightness, but also for the gentleness of this ground. My hands slid from thigh to back to breasts, finding her nipples with my fingertips. I stroked her \u2013 and when her lips drew back and she let out an animal fierce groan, I used my strength upon her. I twisted and tugged, drawing her taut breasts out and forcing her spine to arch as her head rolled back. Her silvery eyes glowed and she crooned. \"Ah...what is it you seek, Resh?\" She gasped, then moaned. \"We...speak different languages, ah, you and I. The things I see? They are wrapped in the past...\" I sucked one nipple into my mouth, my lips as soft and gentle as my fingers had been fierce. \"Mmmrr, shrouded in the veils of magick. Ah, gods. I cannot translate. You must, mmhh, yes, keep doing that...\" I kissed a slow, gentle line between one breast and the other, my free hand stroking her glorious silver hair. \n\nThe Silver Lady regarded me \u2013 her face alight with pleasure \u2013 as I looked up at her, my lips sucking on her other nipple. \n\n\"What is you seek, Resh?\" she purred. \n\nI drew my mouth back. Suddenly, my lips were dry. I pressed my chin to her chest, feeling the sleek heat of her. \n\n\"Am...\" I looked into her eyes, steeling myself. \"Am I the Living One?\" \n\nHer eyes sparkled. \"The Living One?\" She laughed, showing sharp teeth. \"Oh, Resh, why do you think I would know such a thing? The answer is no clearer to one such as myself, living both in and out of the stream, than to you...one who...walks along the shore.\" Her finger stroked my cheek, then tweaked my mustache. \"The flow swirls about prophecy, my beautiful human, my lovely orc. Prophecy can only be seen when they are ready \u2013 and when that comes...well...who cares who pointed the finger at what.\" \n\nI nuzzled her, my eyes closing. My voice was wry. \"It would be...nice...\" I paused between words to kiss her belly, pushing her upwards. Her legs loosened enough to allow her to glide up my body, taking advantage of her own graceful floating. This still left a line of her slick eagerness against my belly and my chest, and the friction against my body drew a musical moan from the ancient beauty I held. I kissed her belly button, licked around it, then continued: \"If Molocheans stopped trying to kill me for it.\" \n\nShe grinned. \"They can see only what follows in your wake, Resh. Pass your hand through a flame, the smoke dances. If you are tired of the pattern, then stop dancing to it. Shed your mantle. Change your name and vanish.\" She squeezed my hair, tugging my head ever so slightly to the side, where I could kiss the beginning curve of her hip-bone, sharp against her slenderness. \"If you won't, then do not be surprised at what lost children do, my sweet.\" \n\nI kissed the start of her groin \u2013 the flat plane between belly button, right before the gentle folds of her lips. For merely a moment, I longed to nuzzle into Virginia's soft pubic hair, to breathe in her scent. My eyes closed and I breathed out: \"It would be nice...\" I kissed down to her clit, then slowly circled it. \"To let this go and just retire quietly...\" I closed my lips around her clit and sucked, drawing out a languid, sighing moan from the elven beauty before me. Her chortle was a mixture of kind and cruel, dancing on the knife's edge of mockery. Her finger, though, was gentle as it wound its way through my hair, coaxing me to tenderly nurse her clit, to lick and suckle her as my fingers began to slide up and down her cunt, feeling her arousal drip and flow. \n\n\"But you have not,\" she said, quietly. \n\nI drew my mouth back from her sex, nodding. \"Well. I have a clan of dwarves to rescue.\" I grinned lopsidedly up her body, looking at her face between the valley of her breasts. The fact she floated in the air before me left me feeling faintly jarred \u2013 part of my brain expected to feel the warmth of a bed under my belly, but no. I was kneeling, she floating, in this dreamlike space beyond time. The Silver Lady gripped my head, pushing my face between her thighs, which locked around my head, enfolding me in silky darkness as my mouth opened and pressed to her sex. My tongue slid into her, tasting the exotic flavor of an elven mystic. As I tongued her sex, the Silver Lady spoke \u2013 her voice hitching with pleasured gasps and slow, almost pained groans. \n\n\"I can see them, Resh. But...ah, the ravens are circling. And the storm rages...\" She closed her eyes and her back arched. \"Ah! Ah! Yes! Yes! The storm...subsides...\" She quivered, and a flow of her juices slid along my tongue and into my throat \u2013 tasting of strawberries and the fresh smell of dew on the grass. My hands cradled and cupped her athletic rump, holding the Silver Lady to me as I drank form her as a man pulled from the depths of the Morbihan might drink from a cup. \"And yet there is lightning. Nnnh. There is shadow. The storm! It howls away, tearing. Tearing, I...I cannot look!\" \n\nI opened my eyes to see that she had twisted herself above me, rolling and thrashing from side to side. Her thighs tugged my head about, and I focused upon her words and upon tonguing her center of pleasure, even as the Silver Lady's eyes closed and she jerked her head backwards. She screamed her bliss and her legs tightened about my head...and then, slowly, relaxed as she began to float away, her ankles unhooking from behind my body. I gripped her legs and tugged her down. She moved as if we were both under water, and her hair flowed with her movements, sheeting around me, trapping me in a cocoon of refracted, silvery light. Those glowing eyes met mine and she grabbed my head. Her voice came as a soft croon: \"Look, Resh. They've taken him in. The small child, fleeing the broken crown, with the machine dreams and hands of hinged metal and heart that ever waits to be stoked and filled with coal...\" Her tongue slid along my lips, even as I stiffened. \n\nWell. \n\nPart of me already had \u2013 but even my member was far from my thoughts in that moment of realization. \"You're speaking of Gilbert Bates!\" Excitement filled me. Then, dashed. \"But that happened in the past, not the future...he's an old man now...\" \n\nThe Silver Lady chuckled. \"Is he now? I...\" Her brow furrowed. \"I don't know, Resh. Listen.\" Her hands were cool against my cheeks, despite how hot her sex had been. \"I see a flame atop a hill, burning so brightly it would blind you. And below is a field of wheat around a pool of water...\" She licked her lips. \"The flame spits, and burns, and it consumes the lake and then it loses itself.\" She closed her eyes. Her body grew colder. Of their own accord, my arms wrapped themselves about her shoulders, drawing her close, seeking to warm her. But she was growing more and more frigid in my grip, chilling past the point of hypothermia. \n\n\"It is so dark here, Resh. So dark. So cold. But the flame is here too...\" her lips touched to my ear and she whispered, so softly I could nearly not hear her over the chattering of my teeth. \"This flame burns black onyx and shadow is its child. Are they here as well?\" Her eyes closed. \"I...I can't see that far.\" \n\nI felt her beginning to warm. Slowly, I laid the Silvery Lady back onto the moss. Her thighs spread and despite the chill that still coated my body, my member remained achingly hard. Her sex looked as welcoming as her eyes \u2013 which were lidded and looked at me with glowing eagerness. She had bit her lower lip, drawing a thin line of blood that gleamed along her pale chin, shockingly red even under the warm light of the fireflies. My palms pressed to either side of her head and I loomed above her, looking down. My voice was soft. \"What else do you see, Silver Lady?\" \n\nHer grin was slow. \"Please, Resh...please. We both know it fits.\" \n\nI shook my head. \"Of the future...\" I tensed, then, as her finger had pressed to the very tip of my member. Her finger pressed to the eagerness welling from me, growing tacky and slick with my pre-cum. Her eyes grew somber and sad. \n\n\"She'll never bear your child, Resh,\" she said, quietly. \"Your guide through your afterlife will stay, until separation comes again and you walk alone into the furthest sky. But there will not be another Resh, another mixing of the peoples. Take comfort in what is. Not what will be.\" Her hand slid up and she clenched her fist around my cock. Her strength and the eerie pressure of her eyes guided me forward. Her hips lifted off the ground to meet me and almost against my will, I penetrated her. It was not forced \u2013 it was more that her eerie predictions had so unsettled me that I hardly wished it. But once I had entered into the Silver Lady, feeling the silky slickness, the heat, the pressure. All of it. My balls rested against her ass as I hissed softly. \n\n\"I see a plane of mirrored glass,\" the Lady whispered. \"A sky of white. A lone figure. Which is the reflection? Which is real. I...ahhh...\" She moaned as I kissed her neck. \"I do not know.\" \n\nI began to thrust. The movement was fierce and feral, a sudden need to be in control of something, even if it was merely the physical movement of my body, exploded through my body. I grabbed onto the Silver Lady's ankles, spreading her wider as I slammed into her body, my balls slapping against her ass like a palm. The slap slap slap slap of body meeting body within this otherworldly room was strong and earthy and brought a grin to my lips, even as the Silver Lady's back arched and she gasped and mewled in pleasure. ",
        "I had asked of the Black Mountain Clan. But we knew that there were two parts of the story: The clan had gone missing...but it had gone missing because of the demands of an elven army led by an elf who King Longhaire of the Wheel Clan claimed had been named...what? \n\n\"M'in Gorad...\" I groaned, the memory sparking in my mind. \"Do you see anything of him, Silver Lady?\" \n\nShe gasped in orgasmic pleasure, her legs twitching in my grip. \"M'in Gorad...an old name. Ah. Resh. Yes! A man is screaming and carves a key with his fingers. The birds. The birds have plucked out his eye, and a wolf watches. Motionless, his paw in the air, green on green behind him. There is a tear in the curtain, with only darkness beyond.\" She gritted her teeth as my thrusting slowed. \"The tear is but raggedly mended \u2013 with a ring of blasted stone. A hand that sees, but is blinded. A man, draped in truth, wearing a mask.\" \n\nThose last three words were hissed out. By now, I had ceased even trying to follow the words. Instead, I let them imprint upon my mind, even as my body surged with more and more pleasure. I barely had time to breathe, let alone ask for clarification. But as my orgasm rushed towards me, the Silver Lady began to speak \u2013 rapid fire, between groans and gasps: \"They hide. The lost children, they, ah, they hide! A gray mist, even to me, but there. He runs. Dropping veined and painted leaves \u2013 with the flock following. Their wings stretch out, and...oh! The wings are made of fire, and he is consumed and...yes! Yes! The leaves! The leaves remain! Run, Resh! Run! Yes! Yes!\" She dug her fingernails into my back as I exploded within her. My balls clenched and I buried my face against her neck, shuddering as I spent myself within the elven mystic. My balls ached as they finished their mission, filling her to the brim. \n\nSagging, I heard her gasp and pant and mewl. \"Find...find what was left behind, Resh. In the place of smoke and water, where every shield of law is turned against you. He is there.\" \n\nI lifted my head. \"M'in Gorad? He's there?\" I asked, between my own soft pants. \n\n\"I see no more...\" The Silver Lady's eyes closed. \"The stream is clear...\" One eye opened and she cupped my cheek. Her finger teased my mustache and her giggle was as warm as a spring afternoon. \"Clarity is a child of time, my darling Resh. Your answers lie both ahead of you and behind...\" She reached down, languidly, and managed to caress my ass. \"Make sure not to overlook one for the other. I go now.\" Her eyes closed again. \"We shall meet again, Resh. Though I am not sure on which side...\" Her grin grew wily. \"I hope you enjoy meeting your son when you do return...\" \n\n\"What!?\" I yelped. \n\nHer laughter was playful and cruel at once. \"Oh! But I had to! To see the look on your face!\" Her voice grew more and more echoing as she faded from sight \u2013 her body vanishing completely. But her words remained, floating in the air. \"A single jest, my sweet. A single jest. A single jest. A single jest...\" each time, the echo grew fainted and fainter. \n\nUntil...she was gone. \n\n*** \n\nDusk had left Quintarra looking as if it had been dusted with a fine spray of gold. Lights shone in homes and upon branches, illuminating flitting figures as they darted along the branches. Fire crackled near me \u2013 contained within a well shaped stone brazire \u2013 and about it sat my comrades and Raven. The elf sat with her legs crossed before her, and looked into the flames with a somber expression, which grew only more severe as Virginia broke the eerie quiet of the evening by snapping a stick from the branch underneath our platform. The sound struck the air like a gunshot and every one of us looked at Virginia, who stuck out her chin as if she expected Raven to start something, even as she used the stick to stir the coals and the logs within the fire. A flurry of sparks shot upwards and I rubbed my face with my hands. \n\n\"Well, let us start at the beginning, I suppose,\" I said. \"The Silver Lady said quite a lot and, after she was gone, I wrote it down in my journal.\" I hefted up the much battered Atlas of Arcanum that I used as both map and reminder of my various quests. Though, fortunately, many of those had been struck through after I completed them, leaving only the enduring mystery of the Black Mountain Clan, the elves who had absconded with them, and...ah, yes, of course, the message I needed to deliver to Cumbria for the exiled Queen Maxine. And the mystery of the Bessie Toonie mine. Which also required a visit to Cumbria. \n\nHurm. \n\nI put that out of my mind, thumbing to the page where I had scribbled down the notes from the strange prophecies I had heard. \"There was a bit about ravens circling around in the air. A storm comes. Then it subsides. Then it comes again...\" I looked at Raven. \"I presume that she's not referring to you?\" \n\nRaven shook her head. \"Curious. I will need to think about this.\" \n\n\"Storms do come and go at sea,\" Sally said, grinning. \"Maybe we gotta go over the ocean to -hic- somewhere.\" \n\n\"Don't be daft, Sally,\" Maggie said, shaking her head \u2013 she had given over the illusion of her masculinity when it was clear that the elves simply did not care. \"Birds don't fly over the ocean.\" \n\n\"Yah they do,\" Sally said, looking honestly confused. \n\n\"Everyone knows that,\" Virginia said, looking at Maggie. Maggie flushed furiously, then grabbed the smoking stick from Virginia and poked viciously at the fire, grumbling beneath her breath about daft winged buggers who didn't know what any proper thing should or shouldn't be doing. I lifted my journal to hide my smile, while our dependable companion Dogmeat \u2013 who seemed perpetually shy of the edges of Quintarra's platforms \u2013 padded over and thrust his damp nose into Maggie's ear. \n\n\"The next thing she mentioned was a machine child who was taken in. Metal hand, heart of coal,\" I said, then chuckled. \"Clearly, she was thinking of Cedric Applebee!\" \n\nBlank expressions looked back at me. \n\n\"Oh, come on, has none of you read the Technological Journal?\" I asked, frowning a bit. \"Cedric is the...he...you see, the jape is that it's obviously Gilbert Bates, but...\" I sighed. \"Nevermind.\" \n\nRaven cocked her head slightly. \"Has your life brought you into contact with Mr. Bates before?\" \n\nI nodded, looking down at my notes. \n\n\"That may be why he appeared in the vision again,\" Raven said, simply. \"What else did my mother say?\" \n\nI sighed. \"There was a field of wheat with a fire on a hill. There was a lake in the center of the wheat, and the fire burned the wheat, any of this making sense?\" I asked, glancing up from my journal. Seeing blank expressions and a subtle shake of Raven's head, I went back to reading my notes. \"But then she spoke of a black flame \u2013 onyx flame \u2013 whose child was shadows and darkness...\" I paused, reading the words I had scribbled down: \"She will never bear your child, Resh. Your guide will leave you and you will go 2 the sky\" (death metaphor? Surely, Virginia is what is spoken of here. I should tell her. \n\n\"All flame in my mother's visions refers to magick,\" Raven said, quietly. \n\n\"Black flame could be referring to dark arts. Necromancy,\" Virginia said. Gillian opened her mouth, and Virginia cut her off. \"Dark necromancy!\" \n\n\"I was simply going to ask for clarification, dear,\" Gillian said, primly. \"Since you practice necromancy.\" \n\n\"White necromancy!\" Virginia snapped. \n\nI chuckled. \"And the child of shadow and darkness could be undead. Maybe the Black Mountain Clan are being held by undead? Or some people who use undead?\" I snorted. \"As if there was a shortage of such villains and blackguards in Arcanum.\" I sighed, then looked down to the next line I could bear to read. \"There was a field \u2013 a mirrored field \u2013 with a figure in white walking across it. The sky was white. She said something like: Which is real, I do not...know...\" \n\nRaven hurmed softly. \"Two worlds \u2013 either could be real. And who is this figure? Very odd.\" She rubbed her chin. I glanced at Virginia, who looked completely baffled. She shrugged slightly. \n\nI sighed. \"Next, I brought up M'in Gorad.\" \n\nRaven's head snapped up. Virginia's brow furrowed. \"Who?\" she asked. \n\n\"Remember King Longhaire?\" I asked. \"He said that elves came to him to pass judgment upon the Black Mountain Clan. The leader of those elves was M'in Gorad.\" My eyes flicked from Virginia to Raven, but her face had schooled itself once more to stillness. I decided to let her speak when she was ready \u2013 no sense pushing the prickly elf. \"She mentioned a sightless man carving a key with his fingers, while a wolf on...\" I trailed off. \n\n\"On what?\" Virginia asked. \n\n\"A cloud!\" Sally suggested. \"No, a box!\" \n\nMaggie snorted. \n\nI laughed, then sprang to my feet. \"But of course! A wolf with its paw raised standing on a green field. Not a field of grass. She was talking about a flag, the flag of-\" \n\n\"Arland!\" Virginia exclaimed. \"That's the flag of the Kingdom of Arland.\" \n\nI nodded. \"And next, she referred to a torn curtain, fixed by a ring of stone. Surely, she couldn't be referring to the Ring of Brodgar?\" I rubbed my mustache with one finger. \n\n\"The wha' of huh?\" Sally asked, which provoked Gillian into sitting upright and lifting her head. Primly, like a school teacher, she began to speak. \n\n\"The Ring of Brodgar is a ring of fifteen standing stones positioned in a ring, near the town of Roseborough,\" Gillian said. \"It was discovered in 1791 by explorers from Caladon and the town of Roseborough developed as trade between the Kingdom of Arland and the elves of the Glimmering Forest began in earnest. It is a common tourist attraction and was originally going to be the launch site of the ISF Zephyr before it was decided that the logistics would make it quite impossible.\" She smiled, slightly. \n\n\"So, is'sa pile a -hic- rocks?\" Sally asked. \n\n\"Well, no, it's a ring of rocks,\" I said. \"And utterly unmagickal. So, either they're more magickal than we think, or this is referring to something entirely different...but considering the proximity of the wolf in this metaphor, I think it is likely.\" I rubbed my mustache. \"Next, she spoke of a blind hand.\" I frowned, checking my handwriting. \"Yes, a blind han...d...\" \n\nVirginia was already moving. She dove into our pack and rummaged around the extra saltpeter and charcoal for the rearming of bullets, the sack of coins, the change of clothes, the food, the extra weaponry, and finally, she emerged, holding aloft a glittering necklace with a circular amulet at the bottom of it. I honestly could not recall which Molochean Hand assassin we had taken it from \u2013 but I had kept it for all the obvious reasons. But the symbol on it was still clear: The six pointed star with the eye in the center of it. \n\n\"The Molochean Hand,\" I said, \"A blinded hand, with a man in a mask.\" \n\n\"Blindness in my mother's visions tends to mean deception or misdirection,\" Raven said. \n\n\"Hah!\" Virginia thrust her finger at me. \"I told you they seemed like good sorts! Any order that turns their back on a group called The Order of the Dead have to have some good in them!\" \n\n\"The point is-\" \n\n\"The Derian Ka?\" Raven asked. \"The Molochean Hand were a part of the Derian Ka?\" \n\n\"Yes,\" I said. \"But they split off from them during the Age of Legends over some...doctrinal differences. But among the references to the Molochean hand, there are references to lost children who are hiding, a man who flees and is consumed in flames, who drops behind him leaves, who must be sought in the place of smoke and water.\" \n\nRaven rubbed her chin, her eyes growing thoughtful. \"Interesting.\" She remained silent for a beat, but then sighed. \"I must tell you, though. I know what the ravens mean. What the lost children mean. M'in Gorad is a name that is known to me. Not in its specifics, but in the generalities: It is a dark name. A dark elf name, specifically.\" \n\n\"A dark elf?\" Gillian asked, her brow furrowing. \"Like...black skinned?\" \n\n\"No,\" Raven said, her brow furrowing. \"No, of course not. That's absurd. There are dark skinned elves living among us at Quintarra \u2013 no, no, I mean they're dark elves because of a philosophical belief they hold. We elves think that all creatures are given a place and a purpose in the world. Our longevity and grace and natural magick is merely what we are given \u2013 nothing more, nothing less. Dark elves...\" Her face hardened. \"They believe that those gifts are tools that mark them as rulers of the whole world.\" \n\n\"Arronax,\" I said, quietly. \"That's what he believed.\" \n\nShe nodded. \"And why he was banished by Nasrudin. His followers, though, remained. And they fled. Their city, T'sen-Ang, has been hidden for centuries from even our eyes. But I recall a man...\" her lips quirked in the faintest of smiles. \"It was when I was a young elf, only a century and a half old...\" She nodded. \"He had a name he used often \u2013 I believe humans enjoy saying their names a great deal...\" She paused. \"What was it...Te...Terwilliger!\" She snapped her fingers. \"Doctor Renford A. Terwilliger!\" \n\n\"I haven't heard of him,\" Gillian said, her brow furrowing. \n\n\"He was writing a book about us elves. He explored the Glimmering for four years before fleeing back to his home without even saying goodbye.\" Her face fell. \"I never learned why. I expect he's dead now...\" \n\n\"Tarant,\" I said, slowly. \"That was his home, wasn't it?\" \n\n\"Mayhap,\" Raven said. \"Why?\" \n\n\"It's the city of smoke and water,\" I said, grinning at her. \"The smoke from the factories and the water from the Hadrian river \u2013 it's the biggest landmark in the city! And those leaves that he left behind? That's the old fashioned word for page. You said he was writing a book: Maybe in that book holds the clue we require!\" \n\nRaven's lips quirked in one of her ghostly smiles again, but her eyes sparkled in the firelight, enough to show she really was quite pleased. \"I am glad to hear you so certain, Rayburn Cog. Seek out Renford and his book \u2013 find it, find the location of T'Sen-Ang, and you will find M'in Gorad. The rest of the prophecies, I am sure...will come clear in time.\" \n\n*** \n\nWe set forth on the 3<sup>rd</sup> after spending a day in the beautiful city of Quintarra to simply rest and recover from our long journey. None of us wished to face Hadrian's Pass during the gathering furor of winter, which threatened to explode across Arcanum with the arrival of December. December for a Tarantnian was a time of festive lights and Panarii carolers, singing the praises of Nasrudin, while gifts were given beneath trees of pine and holly. But those were men and women who were within pleasant homes, with fireplaces a-crackling and newfangled electric lights blazing. For us unlucky five \u2013 six if one counted Dogmeat \u2013 it meant a trudging passage over the mountains and a long trek past Stillwater, moving by foot through forests that were an even mixture of evergreens and bare, leafless deciduous trees \u2013 and every few days, snow would begin to drift and fall from overhead, dusting the ground and leaving us ready for a true blow. \n\nFortunately, we managed to avoid any major storms and arrived a full month later, on the 3<sup>rd</sup> of December, at the shore of the Hadrian river. The day was crisp and clear, but cold enough that our breath fogged the air nearly as much as the factories we could see in the distance. But...there was something decidedly marvelous about returning to this great city. Doubly so when it had been recently coated with a fine layer of snow. The smoke and smog had not yet turned all of it black, meaning the roofs shone with a gray brilliance under the noonday sun, adding character to the city. \n\nCrossing the bridge into the city proper, we saw that the newsies were joined by a jolly contrivance: Men and women dressed in brilliant red robes and garishly oversized elf ears, ringing jangling bells and holding out pots, pans, old hats, even shoe boxes for a passing shilling or penny. It seemed that these \"St. Nazzies\" were for the purposes of raising funds for the destitute and the poor. I tossed a gold coin into one while Virginia purchased a newspaper to see what tripe Victor Wright was putting onto the yellow papers. \n\n\"Three dead in a technological protest...some new physique that claims that it can raise the dead, poppycock. Ugh. Here, on the third page...\" Virginia shook her head. \"Some orcish labor agitator still at large. Good heavens, do they have to brag about using machined guns on the strikers?\" \n\n\"Hum?\" I looked at her. \"Machine guns?\" \n\n\"Yes, it says here: To stem the Awful Tide of Socialism, Tarantian Army Units opened fire upon the shiftless Orcs.\" Virginia started to ball up the newspaper, but I took it from her hands, holding it wide as I read closer. The illustration was positively frightful \u2013 showing one Captain Wheeler of the Tarantian Army bayoneting a hideous half-orc who was prostrate upon the ground, a knife in one hand, a sign in the other. \n\n\"The agitator, one Daniel Thews, is a half-orc and known pederast...\" I read. \"if he is seen, one must immediately fly at him and beat him senseless for upending the righteous order of our fair city.\" I shook my head, then looked at Virginia. \"Sorry, I just wanted to see who the agitator was. I'd want to give him a hearty handshake and a pint.\" \n\nVirginia chuckled. \"Though, that name. It's not very orcish.\" \n\n\"Rayburn Cog,\" 'Magnus' rumbled from my hip, quite pointedly. \n\n\"That's different!\" Virginia flushed. \"Ray is...I...that is...\" She spluttered, then balled up the newspaper as I laughed. For it was my choice to laugh or to cry. But I did fix that name in my mind. Not merely Daniel Thews \u2013 but also Captain Wheeler. Any man who was so eager to use a machined gun on a crowd of unarmed protestors was not a man I'd want to meet \u2013 unless we were far enough away from Tarant for his badge and his uniform to become nothing but brown cloth and a shiny trinket. Imagining that meeting \u2013 far out on the Morbihan \u2013 kept me quite warm as we made our way to the University Park. \n\nIt was as I strode towards the University grounds that the half-orc stepped from an alleyway and aimed a pistol at my face. His body was painfully scrawny, and he was dressed as best as he could be for the cold: A tatty jacket and a roughly made hat covered his shoulder and his broad head, as best as could be managed. His feet were crammed into shoes that had clearly begun to peel and split, and were stuffed liberally with newspapers. Even his pistol looked worn and aged, and before Virginia could step between me and him, he lowered the pistol, blinking at me. \"Oh...\" he said. \"Oh, yer a...yer one...sorry.\" He tucked the pistol away hurriedly, then turned to go. \n\nI grabbed his arm. \"Sir, wait,\" I said. \n\nHe glared at me. \"Listen, jus' cause you got a fancy suit and-\" \n\nI pressed ten coins into his palm. \"Buy yourself some nice,\" I said, quietly. \"And, might I suggest? Get a job on a sailing ship. It's hard, and it's dangerous, but at least the constabulary won't be after you.\" \n\nThe half-orc blinked at me, then nodded, looking away in a hurry before I could see his tears and unman him. He hurried away, his hands thrust into his pockets. Once he was gone, I sighed and saw Virginia looking at me \u2013 with that expression that I knew meant she was, once more, thinking that I was, truly, Nasrudin reborn. It left me feeling a strange weight in my gut, and I forced all thoughts of it aside to head into the University proper. In addition to the Zoological Society, University Park had a rather large library...and a hall of records. Entering the second first, I was directed downstairs by a very bored clerk at the desk. The basement floor was musty and thick with the scent of dust and age. The ceiling was illuminated by yellowish bulbs that hummed and whined behind wire-frame cages. ",
        "The actual room that contained the records was immense. Row after row after row of filing cabinets were arrayed before us, marching backwards into the darkness at the rear of the room. There was a small desk with a large type-writer set on it, and sitting behind the type writer was a mousy looking woman wearing a blouse and dress that looked at least ten years out of date. Her brown and gray hair was drawn back into a severe pony tail, and her face was lined and seamed with a great deal of laugh lines. She looked up at me as I came to her desk and I saw she also wore thick, bottle glasses that distorted her eyes so fiercely that I could barely tell their color \u2013 brown. \n\n\"Can I help you?\" she asked. \n\nI smiled. \"Aye, yes, I am looking for the residence of someone named Renford A. Terwilliger.\" \n\n\"One moment!\" \n\nThe woman stood and bustled off into the halls. She started to check several cabinets, her fingers opening tiny drawers, pulling out cards. She clicked her tongue, then called back to us: \"I'm not finding any listing of a man named Renford A. Terwilliger living in Tarant at this time.\" \n\nI frowned. Raven was an elf... I nodded. \"Do you have obituaries?\" \n\n\"Dating back two centuries!\" she called back. \"Though, ah, the records get more and more spotty the further back you go.\" \n\nI rubbed my mustache. Renford wasn't a terribly old fashioned name. And Raven hadn't seemed to be too ancient of an elf. If she had been a mere hundred and fifty years old when she had met Renford...I nodded. \"Check the records about, eh, fifty years back?\" \n\nThe woman turned back and vanished among the stacks. \n\n\"If we're lucky, the obituary will direct us to living kin,\" I said to my companions, quietly. \"If any of them would have his notes, then...\" I trailed off as the woman returned, carrying a newspaper contained in a kind of plastic wrapping. She laid it out and began to read from it. \n\n\"The 5<sup>th</sup> of November, 1804, Renford A. Terwilliger, author of \"T'sen-Ang: Horror among the Dark Elves\" was found dead in his home today. His death appears to have occurred amongst mysterious circumstances. The authorities are calling for further investigation...\" She shuddered dramatically. \"How dreadful.\" \n\nI nodded. \"Indeed.\" But this did mean that the 'pages' seen in the Silver Lady's visions had not merely been notes. He had written the book, after all, and it sounded like exactly what we required. \n\nI thanked the mousy secretary and bounded up the stairs, followed by my companions as we hurried across the snow speckled ground to the Library of Tarant. We strode up the steps past the two snarling golden lion statues that flanked the door and came into the quiet building itself. Several gentlemen were seated before a large fire that was stoked in the back, while row after row of bookshelves lined the walls. A gnomish matron of advancing ages bustled over to me, carrying a stack of magazines to place in the periodicals section. \n\n\"Ah, sir,\" she said. \"I see that you have gotten lost. There is a very fine pub, just down the road.\" \n\nI blinked at her. She was holding the Technological Journal that contained my design for the accelerated pistol and the electrified ring. And beneath that, there was the Zoological Journal that looked to have published my expedition notes to the Glimmering Forest. I looked slowly up at her. \"Do...you know who I am?\" \n\n\"Oh, I'm certain a type like yourself wouldn't find much to interest you here,\" she said, her voice breezy. \n\n\"Well! If I do not believe it!\" A gruff, blustery voice boomed out, causing the woman to whip her head around. An elderly gnomish gentleman was seated next to a one legged human fellow of the same age. Both of them were reading newspapers, and both of them were gaping at me. The human pointed. \"It's Dr. Cog! Get your green butt over here, boy!\" \n\nThe gnomish woman gaped. \"Y-You know Sir Steffan Cordwise? And Mr. Tallview Plough?\" \n\nPlough, the gnomish gentleman I had met nearly a year before, who had given me one of the first little errands that had financed my earlier adventures, stood and walked over. He clasped my hand, shaking it. \"I've been reading that Quintarra journal of yours, ripping good stuff. And I was speaking with Mr. Bates at the last Industrial Council meeting and he dropped word that he was financing your most recent expedition \u2013 something about a dwarf clan that's gone missing? Positively smashing!\" \n\nThe gnomish woman raised not a single peep as Plough took me to where Steffan was seated. Soon, a cigar was in my hand, and the two older gentlemen were peppering me with questions about my little adventures. I told them what was most reasonable \u2013 dropping a few sly hints to things best left out of the conversation between gentlemen. This produced quite a few digging elbows from Steffan, who said: \"Ah, I see, you know what they say about an elf's ear, right?\" \n\n\"No?\" I asked, puffing on the really quite fine cigar. \n\n\"They're pointed for a reason! Hah!\" Steffan laughed. \n\nPlough stubbed out his cigar. \"Old Bates has been quite cagey about why he's sunk so many funds into this little expedition of yours. Tell me: Is it true he's hoping to finally smoke Cedric Applebee out of business?\" \n\n\"No, no, nothing nearly so dramatic,\" I said, casually. \"Merely the fate of all of Arcanum. Stopping the Dark Lord from returning from his exile to wreak havoc upon us all, that kind of thing.\" \n\nThe two men laughed uproariously. I puffed on the cigar again, then sighed, leaning back into the comfortable chair, glancing sympathetically at my companions, who had to stand with the two gentleman's staff, who were orbiting at a comfortable distance. I looked over at Steffan. \"In fact, I am actually looking for a book here: T'sen-Ang: Horror-\" \n\nSteffan reached across, taking my hand. \"Good gods, sirrah, do not say that name!\" His face had gone sheet white. \n\n\"I beg your pardon, why not?\" I asked, blinking. \n\n\"Old Steffan here is quite superstitious,\" Plough said, puffing on his cigar. \n\n\"I am not! One of my relations was killed by that damn curse!\" Steffan started to stand, his hand going to his cane. He wobbled to his feet and started to stump away, swinging his leg wide to use his simple prosthetic. I thought he was heading for the door \u2013 but instead, he had returned with a shiny, newly printed book, which he dropped into my lap. I caught it and blinked as I saw the cover bore a bold, red printed title. \n\nThe CURSE of T'SEN-ANG \n\nBy Kendrick Wales \n\n\"Read that!\" Steffan said. \"And you'll see why this isn't worth following for even the whole Bates fortune!\" \n\n*** \n\nI sprawled, nude, in my bed. Virginia nuzzled up against me, her body slick with the sweat of our lovemaking, while snow gently drifted against the window of the fine room that we had rented \u2013 on Mr. Bates' dime. My thumb turned the page on the Curse of T'Sen-Ang and I read, quietly. \n\nIn the following pages I, Kendrick Wales, will attempt to explain, in the plainest words possible, the mysteries surrounding Renford A. Terwilliger and his controversial work known as \"Horror Among the Dark Elves\". Many of the stories I will present to you are both strange and frightening, but I give you my word as an author and a scholar that they are the truth. Decide yourself, after the facts are presented, whether or not you dare to believe them. \n\nRenford A. Terwilliger was born 1750. His fabled trip to the Glimmering Forest was made in 1768, his eighteenth year. He was indeed, as per his book, accompanied by an elven tracker named Jar'en Ben'al; records housed with the Tarantian Zoological Society validate this fact. Mr. Ben'al was never heard from nor seen again after this expedition. \n\nAs for Mr. Terwilliger's account of his adventures in the elven city of Quintarra, or his supposed discovery of the mythical T'Sen-Ang, no one can be sure. Most scholars and collectors of literature assume that Mr. Terwilliger's book is a work of fiction. And as such fantastical literature was all the rage at that time, I might be inclined to agree. Yet one must only look upon the events following the publication of Horror Among the Dark Elves to see that he very well may have found something deep within the Glimmering that was never, ever meant to be found. \n\nThere were very few copies of the book ever published. Records concerning the initial print run are scarce but it is believed that no more than 100 were ever released to the public. 4 days after the book was shipped to Tarantian bookstores, the factory that printed it was burned to the ground. The owner, a Mr. Jeremiah Gomes, was found in his home, brutally murdered by an unknown assailant. \n\nThe four bookstores that had purchased the volume for sale in Tarant suffered the same fate. Only fifteen copies of the book were sold before the final store was destroyed. Those fifteen copies became an immediate collector's item. Enormous sums of money were paid for the remaining volumes. After a few months, the books had fallen into various respected collections across Arcanum. Each and every one of the owners of the books began to complain of strange happenings once the book was in their possession. \n\nAll of them told of frightening noises and visions, shadowy figures following them where they went, unexplained illnesses and untimely deaths. Many attributed this to paranoia, a trite brand of sensationalism to create an even greater demand for the book. Unfortunately, their fears were justified. All of the collectors were dead within 5 years of the initial publication, their volumes either stolen, burned or disfigured beyond all recognition. \n\nIndeed, they had suffered what came to be known as The Curse of T'Sen-Ang. Mr. Terwilliger, strangely enough, lived a relatively long life, cursed in his own way to witness the evil fruits of his labors. He saw himself as the cause of these horrors and wrote extensively of it within his memories. The following is an excerpt from them, only days before he died in his sleep. \n\n\"I will never forgive myself for what I have unleashed upon the world. Had I the courage, I would travel to the Glimmering and unleash holy vengeance upon those evil creatures that have plagued our fair land and its peoples. Alas, I no longer have the strength, nor the power, and now there is only my own end that I pray for every day.\" \n\nUntil a few short months ago, it was thought that there were no remaining copies of \"Horror Among the Dark Elves.\" After an exhaustive investigation, I have found that this is not all the case. The last known copy of the book, owned by famed book collector, Mr. Phillip Misk, was thought to have perished with its owner in a fire almost 50 years ago. Now, with new evidence presented by a reliable source, I have discovered that Mr. Misk's son, Victor Misk of Caladon, still has the copy in his possession and is hiding it for fear that the curse will again visit his family. \n\nI pray that the evil let loose in the Glimmering has finally been put to rest. And I pray Mr. Misk and his family avid the fate that has befallen every other soul who has challenged...the CURSE OF T'SEN-ANG! \n\nI frowned as I closed the book and let it rest upon my chest. I looked into the crackling fire that the help had stoked high and warm for Virginia and I \u2013 though she had looked quite scandalized when she had asked me where I would be staying and I had responded by simply paying her an extra five gold to keep her mouth shut. I knew that it was a risk, that charges of miscegenation could have me strung up by a lamp post. But at the moment, I simply could not find it in myself to care. I needed Virginia sprawled next to me. She kissed my chest, rousing from her slumber with a quiet murmur that I knew translated, roughly, to...again? \n\nI tossed the book aside. \"Virginia,\" I said. \"I believe that we must set out for Caladon.\" \n\nThat roused her completely. She sat up, her brown hair cascading along her shoulders \u2013 it had grown long in the months of our travel and she had not yet had a chance to shear it short. It brushed along the upper curve of her breasts, concealing one of her nipples. The urge to brush her hair aside, then capture her nipple in my mouth and draw a moan out of her like I was pulling a string across a violin was quite intense. Instead, I grinned at her. \"Always wanted to go back there. And, remember, the heavier than air flying machine that shot the Zypher down was made in Caladon, I-\" \n\nVirginia's face had gone sheet white. \n\n\"What?\" I asked. \"Have you been to Caladon?\" \n\n\"I- What? No! Always wanted too!\" Virginia nodded, then smiled at me, bright and cheery. \"How shall we get there? I've heard it, uh, it's somewhere to the south...\" She waved one arm, which set the blanket cascading down to her lap. \n\n\"By boat, I was thinking...\" I said, then snatched her hand. I squeezed it. \"You know, Virginia, you can tell me anything. I'd tell you...anything...\" I paused. \n\nVirginia looked into my eyes. She opened her mouth, then closed it. In the distance, the faint chiming sound of bells could be heard. The rattle of a carriage. The tolling of a great bell in one of the many clock-towers that dotted Tarant. With the door closed and latched and the window rapidly becoming shrouded by a gathering pile of snow on the sill...it felt as if we were in our own little world. Virginia looked at my hand. Her voice was husky. \"I love you, Resh...\" \n\nI leaned my head forward. My forehead touched hers. \"I love you too, Virginia.\" \n\nShe opened her mouth. \"My...my name isn't...\" \n\nI cupped her cheek. \"Panarri take new names when they join the order, you told me this once. Your name doesn't matter. What you were doesn't matter. I don't care, Virginia. I love you.\" Saying it again, it felt as if my whole body had grown lighter. I slid my arms about her shoulders, drawing her close. Her mouth met mine and quite suddenly, she was pushing me onto my back \u2013 not merely with her own strength. Oh no. There was a flare of magick, purple energy glowing around me, and the pressure shoved me down and into the bed. I laughed as Virginia flung one leg over, the blanket cascading to the floor as firelight gleamed across her softly tanned flesh. She straddled me, my cock grinding between her sex, while she looked down at me with an almost feral grin, her eyes glowing with the discharge of her magick. \n\n\"You've been practicing...\" I murmured. \n\n\"Still haven't managed teleportation,\" she said, her voice throaty. \"But, you know...they call this school Conveyance, but it could be more accurate to call it...Touching-Things-At-A-Distance. B-But you know. Fancier.\" Her eyes glowed again and I felt my cock being enveloped. The pressure was similar to a single hand gripping me, but the hand was extended and lengthened, enough to completely entrap me \u2013 and then it began to fondle me as Virginia's eyes continued to shimmer and glow with purple light. I half closed my eyes, gritting my teeth. \n\n\"Gods, Virginia...\" I whispered. \n\n\"Yeah...\" Virginia slid forward and reared up. Her pussy lips were only faintly visible through the thick bush \u2013 and after my etherial time with the Silver Lady, the earthy impact of Virginia's muscular hips against mine was infinitely more pleasurable. I hissed between clenched teeth as she leaned forward, her hands pressed to my chest, spectral caresses touching my cheeks, my head, my neck, my nipples. She hung over me, her hair brushing my face as she whispered. \"You're so big, Resh...\" \n\nMy hands reached up and I caressed along her back, fondling her taut rump. I squeezed her and murmured. \"No one I'm with ever compares, Virginia...\" I whispered. Her face split into a huge smile and she rocked backwards, sliding her hands so that her palms were against my belly. She began to rock herself, her eyes half closed. Purple light continued to shine between her lashes as her spectral hand squeezed my testes, fondling them gently. She crooned softly. \n\n\"I love it every time you claim another girl, you know that?\" Her voice caught. \"Ah. Yes. I know I shouldn't. I know it's quite impious. But...gods...\" She hung her head forward, her hair swaying before her face. \"I love it. It...makes me feel so...\" \n\n\"Powerful?\" I asked, rocking my own hips in time with her \u2013 attaining almost instantly the easy, casual rhythm of our sex. After a year, it was easy to know her body \u2013 and speaking of knowing her body...my finger reached down and I began to caress her clit, my finger vanishing into the thick bush of brown hair around her sex. Virginia opened her mouth in a silent moan, then let out a strangled mewl as her sex clenched upon me like a silken fist. Thanks to our earlier exertions, I was able to keep my own pleasure from boiling over. \n\nBarely. \n\n\"Yessss!\" Virginia hissed, once the faculty of speech was returned to her. \"Like, y-you've fucked goddesses, but...still...\" She paused. \"S-Still love me.\" \n\nI took her hand, pulled her close. She fell atop me, her hips pausing as I brushed her hair aside, and looked into her eyes \u2013 brimming and glistening. \"Always, Virginia,\" I whispered. Then I captured her mouth with my own \u2013 my hips driving into her faster and faster and faster as my tongue and hers met and danced. When my pleasure came, I moaned it into her mouth, muffled by her closeness. Virginia went stiff and she accepted my seed with a quiet groan, her teeth sinking into my lower lip, tugging and then releasing as she jerked her head back. \n\n\"Oh Resh!\" \n\nAfterwards, she sprawled atop me, gasping softly. \"Resh...\" she murmured, caressing my chest. \n\n\"Mmm?\" I asked, drifting in the happy place between sex and sleep. \n\n\"I was thinking...\" She paused. \"I...I have been casting the spell that prevents pregnancy, you know? On myself.\" She licked her lips. \"It's a simple white necromancy trick. H-Helps to deal with my monthly cycle, as well. But...\" She paused, then looked at me. Her voice grew soft. \"I could...stop. O-Once this adventure is over, once we're safe. If you want! I mean, I won't unless-\" \n\nI put my finger on her lips. \n\n\"She'll never bear your child, Resh,\" the Silver Lady said. Her eyes bored into mine \u2013 silver and glowing and terribly honest. \"Your guide through your afterlife will stay, until separation comes again and you walk alone into the furthest sky. But there will not be another Resh, another mixing of the peoples. Take comfort in what is. Not what will be.\" \n\nI smiled at Virginia. \"It sounds like an engagement to look forward too, my dear.\" \n\nVirginia ducked her head against my chest, but I could still easily feel her tears. I held her close until her breathing became steady. But I did not sleep for some time \u2013 looking at the guttering, slowly dying embers. I simply held her and thought on the nature of the future. Of free will. And I had decided it: Damn the prophecy and damn the sight of elves. \n\nDamn them all. \n\n*** \n\nAs we emerged from the inn, with me dressed in my finest suit, I was most surprised to find myself stopped by a voice calling out: \"Dr. Cog! Dr. Cog!\" \n\nI turned and saw a young private in the uniform of the Tarantian Army. He drew up short upon seeing me, his eyes widening above his rather fierce mustache. He opened his mouth in surprise, then closed it up tight. \"Ah, uh, Dr. Dog. Er. Cog! I've been sent by Senator Willoughsby to inform you that he wishes you presence at the, uh, City Hall immediately. It is a matter of national importance.\" He stood stiffer, his shoulders drawing back. \"Sir. Doctor.\" \n\nI spread my hands. \"Well, I cannot turn that down. Virginia, you're with me. Gillian, can you see about charting a ship to Caladon \u2013 tell them that we'll be there soon?\" ",
        "\"Of course,\" Gillian said, inclining her head to me. \n\nThe nervous private led me through the city streets, guiding me past the Bates' Mansion and into the center of city administration. Tarant's administration was not merely for the city and its millions, but also for the cities that were now a part of the growing United Kingdom. Her army took its orders from this building, and her navy was directed from its offices. I was led in by the side door, not the front, and was walked through several close corridors and narrow rooms \u2013 each one filled with men in flimsy green caps working furiously with pen and ink, those that lacked mechanical type writers. Those were quite plentiful, and their chattering, clacking noises filled the air rather like machined gun fire. \n\nI was led to a narrow, green doorway that was merely listed as being the Offices of the Interior Secretary. The door opened and the private barred the way for Virginia \u2013 allowing me to enter, then closing the door in her face. I could hear her muffled voice outside, but within, all was nearly black, save for a single narrow electrical lamp. Seated behind a desk piled with papers was a round faced, fat fingered looking human gentleman. A gnome \u2013 the knife slender and youthful and oddly dangerous for one of his nominally genteel race \u2013 leaned against the wall and regarded me with flint cold eyes. \n\n\"Senator Willoughsby?\" I asked the human. \"I thought he was a gnome...\" \n\nThe fat cheeked human chuckled. \"A required deception, Doctor Cog.\" He held his hand out to me with only a faint sign of distaste. \"The name is Sir William Templemount. I am the civilian liaison with the Tarantian admiralty, you see.\" \n\n\"Ah, I see,\" I said, slowly. \"And you are?\" I looked at the gnome. \n\nThe gnome did not respond. Instead, he drew a small knife that looked as if it was made for slitting throats, not cleaning beneath fingernails. He began to clean his fingernails with the tip, his eyes fixated not on my eyes, but on my throat. I looked back at Templemount. \n\n\"What is it that the United Kingdom needs of me?\" I asked, dryly. \n\n\"Ah, yes, quite a fine attitude for a chap like you to have,\" Templemount said, his jowls wobbling as he clasped his hands together. \"We've been keeping an eye upon you and your activities, Dr. Cog. Even went about investigating your past: A former inventor with the Caladonian Royal Academy? Creator of their Merichek rifle, yes?\" \n\nI nodded. \"Yes, their first clip-loader,\" I lied. \n\n\"And yet, you have some enemies among the Arlanders, huh?\" he chuckled. \"Went off to the woods for a spell before coming out. Good. Having enemies means you've stood up for something, sometime in your life.\" \n\nI shrugged. \"I admit, I did my best work when they could conveniently forget my skin color.\" \n\nTemplemount nodded. \"Quite.\" He sighed. \"You may have heard that tensions between Arland and the United Kingdom have grown somewhat fraught. Some talk of war. The simple fact is that Cumbria sits between Arland and we \u2013 and that kingdom cannot help but fall within the next ten years at the latest. Now, if things were rational and fair, then we'd get the northern provinces \u2013 everything past Shrouded Hills but before Razor's Point...\" \n\nI arched an eyebrow. \"That's almost nine tenths of Cumbria.\" \n\nTemplemount looked at me placidly. \"Yes, what is your point Dr. Cog?\" \n\nI shrugged. \"But I take it that the king in Caladon isn't quite interested in simply giving Tarant what she deserves?\" \n\n\"Exactly!\" Templemount slammed his palm onto the counter top. \"Now, we can lick them if it came to a scrum. I'd wager my whole life on the good heart of our brave lads, and Caladon tries to marry magick and technology \u2013 utter nonsense.\" He shook his head. \"But think of the damage done to the farms, fields, mines and roads of Cumbria.\" \n\n\"Oh, yes, it would be tragic. Surely, those would be the worst losses in a general war. Infrastructure,\" I said, wondering if Templemount would notice my sarcasm. From the faint glare he sent to me, I saw that he recognized it. He simply refused to admit it. \n\n\"Quite,\" he said. \"Now, we have a quite delicate situation. We need peace with the Kingdom of Arland \u2013 but we also cannot be seen as being weak. And according to my ears in the court of Caladon, their king doesn't want a war either. Some recent boondoggle of theirs went up in smoke, something by that Maxim fellow.\" \n\n\"The inventor of the machined gun,\" I said. \"I believe he was working on heavier than air flying machines.\" \n\n\"Utterly preposterous. But Arland spent nearly the same amount as we spent on the IFS Zephyr on their ridiculous flying machines,\" Templemount said, shaking his head. I remembered the sound of their buzzing engines. The hammering of machined guns. The scream of the fellow passengers aboard the Zephyr. I suppressed a shudder. \"This gives us an opportunity unlike any other, Dr. Cog. If we offer them peace, they can concede land to us. Maybe not all that we want, but more than they would if their coffers weren't so taxed. But we need to present a strong front, and so-\" \n\n\"And so you wish to send someone who is not officially a Tarantian diplomat,\" I said. \"Someone who you can disown and disavow if this goes, as the lads say, pear shaped.\" \n\nTemplemount nodded. \n\nI sat in the office. My eyes flicked to the gnome. He was still playing with that knife of his. And I saw the other advantage this had for Mr. Templemount: If I refused, that deadly little fellow could put a knife into my ribs and a troublesome half-orc with anarchist leanings an far too much clout and fame for Templemount's taste would, quite suddenly, go away. I looked at Templemount, pursing my lips. Slowly, I smiled. \n\n\"You will, of course...pay for the ship, right?\" \n\n\"Of course!\" Templemount said. \n\n\"Then it is but my civic duty...is it not?\" I asked. \n\nLike it or not...it seemed that I had been whisked into the great game. \n\nBut maybe I could turn this to my advantage. \n\n\"That's the spirit, old boy,\" Templemount said. \n\n\"And, of course,\" I said, standing up as I did so. \"Once I return, you will put a good ear in for me with the Senate? And the Admiralty?\" I grinned at him. Or else, you smug imperialist, I will have quite a few stories to tell. Templemount, for as little as I thought of him from this meeting, was clearly a sharp fellow. He nodded, jowls wobbling. \n\n\"Of course, Dr. Cog.\" \n\nAnd thus, I was off. \n\nTO BE CONTINUED"
    ],
    "authorname": "DragonCobolt",
    "tags": [
        "magic",
        "mystery",
        "orc",
        "prophecy",
        "steampunk",
        "non-human",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/arcanum-of-steamwork-and-magic-ch-16"
}