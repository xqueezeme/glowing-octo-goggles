{
    "title": "Learning About Myself Pt. 03",
    "pages": [
        "I hadn't been able to get it out of my mind for days. It would creep back in whatever i did to occupy myself. I always seemed in a daze, my knickers always sticky. I felt so submissive and I kept looking in the mirror to see if it was obvious on my face.\n\nPaul had fucked me in front of Liz and Paul. I had tried to think of it as making love but I couldn't convince myself. Well, I'd been stripped, my tits and cunt beaten and then fucked in front of them. I had never been fucked publicly, it had been unthinkable until then. I imagined how it would look to them watching what they had done to me, what I looked like. The shame was enveloping and so was the arousal.\n\nNow Liz had arrived at the house as I was contemplating doing the ironing. She walked in looking like the cat who had just had the cream, her perfume trailing behind her. My cheeks began burn as she looked at me. It was strange, this new relationship we had. I wasn't certain of how to handle it just yet, though what was certain was that the old relationship had morphed into something completely different. In some ways it was all new and yet we had known each other a long time and shared a lot. We tended to know how each other's mind worked with the big exception of the recent domination and submission that had changed things between us. \n\nIt was the grin, though, that let me know where we were at just now as she sat herself down on the sofa, crossing her legs and spreading her arms out on either side of her on the seat. \n\n\"Come and kneel down here by me.\" I did. There was nothing else I could do really. I couldn't just stand there, and to go and sit in a chair would look like I was being disobedient. To her and Paul.\n\n\"You know, I love telling you what to do and punishing you. It's still such a surprise, a really nice one. And not only that, it turns you on, doesn't it, when people see you, tell you to get naked, tell you to do things, doesn't it?\"\n\n\"Yes Miss.\" I looked at my knees.\n\n\"You like being watched, don't you? You like people seeing you having to take your clothes off and displaying yourself like a dirty little slut, don't you?\"\n\n\"Yes Miss.\"\n\n\"And what do people see?\"\n\n\"They see my body, Miss.\"\n\n\"Of course they do, don't get clever with me! I think you can put things into words better than that.\"\n\n\"They see my tits and... and my cunt, and my ass Miss.\" I paused and I could tell she put her head to the side, looking quizzical, wanting more. \"They see a slut. They see a naked submissive slut, one who looks like she deserves to be punished and used for sex, Miss.\" It all gushed out without me thinking. \n\n\"Yes. Yes. Exactly that. And I think you had better takes those very unsexy clothes off now, and show me this slut in all her glory, don't you?\"\n\n\"Yes Miss.\"\n\n\"It's so much nicer for me to watch you take them off and see you totally naked, isn't it?\"\n\n\"Yes Miss.\"\n\n\"And you don't have any choice in the matter, do you?\"\n\n\"No Miss.\"\n\nI took off my tee shirt and folded it on the sofa next to her, just as Paul expected me to do when I removed any clothing. I wasn't to be slovenly. I stood up and slid my joggers off quickly and folded them too. I wanted to stall but I knew I was going to have to carry on. I unhooked my bra and put it on the pile, my tits swaying as she looked at me. Then, finally, my knickers.\n\nHer hand took my leg and positioned me where she wanted me, directly in front of her. \"Open.\" I slid my legs slightly apart. She slapped them until they were far enough apart, until we both knew she could have full access to me. Visually, physically, we both knew I was submitting. \n\n\"You are getting aroused now, aren't you Hannah?\" I could see my nipples jutting out hard. I could feel the tingle between my legs. I wasn't totally sure why I was aroused. She was a woman. But she had been given control over me. It was just that I was naked and vulnerable and knew I was submissive to her. \"But you were much more aroused the other evening weren't you?\"\n\n\"Yes Miss.\"\n\n\"What got that slutty little cunt of yours aroused Hannah?\"\n\n\"Before... when I was thinking of you punishing me. Oh God. And taking my clothes off and everyone else dressed and you seeing me like that.\" I was shaking more now, my breathing fast along with the words. \"And then you spanking my tits and cunt Miss.\"\n\n\"Your tits and mound were such a lovely shade of pink. I wasn't sure if it would be too much on your mound and cunt but then I realised its just padding there on your mound isn't it, padding against mens bodies. Oh it felt so good to do it to you. How are your titties?\"\n\n\"Alright now, thank you Miss.\"\n\n\"Tender?\"\n\n\"They were Miss. They had small red lines from the ruler.\" \n\n\"And your cunt?\"\n\n\"Fine now Miss. I was tender.\"\n\n\"Did me spanking your naughty tits and cunt actually arouse you more Hannah?\"\n\n\"I.. Yes Miss.\" I couldn't help whimpering with humiliation then.\n\n\"I must say, you did seem very excited by me slapping those dirty wet sex lips of yours!\"\n\n\"Yes Miss.\" I sobbed the words out.\n\n\"You really are a slut you know, you really can't help yourself.\" Her voice was soft and understanding. \"But you don't need to, we are here for that. This is the way your body needs to be treated. This is the way you needs to be treated for a reason, it's the thing that gets you off, isn't it Hannah? You need people to take control of you. You need to be a kind of sex slave, don't you, you little slut.\"\n\n\"Yes Miss.\" Sobbing silently.\n\nShe carried on in this conversational tone. \"You know, I've never seen anyone fucked before. I've see Paul fondle you when he spanked you, of course, but that's as far as its ever gone. I never imagined I would, except a porn video. But being there, watching his cock go into that hungry cunt of yours was something else. I could smell you. I could hear you. I could have touched you. As you know David came in his trousers. I was not pleased! I was the only one who didn't cum!\" She didn't look angry. She looked smug. I didn't know why until she spoke again. \"You owe me an orgasm.\" She laughed. \n\nLiz was rubbing my inner thigh now, sitting on the edge of the sofa as I stood in front of her. Her hand was moving up and down my soft inner thigh. It was humiliating but she knew what effect that had on me too.\n\n\"That's a good little girl,\" she said with amusement in her voice as I spread my legs a little wider. \"You need to make sure you are as good at satisfying me in all ways as you do Paul. Have you been fucked yet today?\" \n\n\"No Miss.\" It never occurred to me not to answer her even though nobody had ever asked me that question before. I had accepted her dominance long ago. Her hand was hypnotic on my thigh and it neared the top, little by little. My sexual tension was increasing by the second. \n\nWith her hand on the top of my thigh she ran her thumb lightly along my lips, parting them, and I sighed and bent my knees to press down on her.\n\n\"Oh my God, I can smell you already. You are a horny little bitch aren't you?\"\n\n\"Yes Miss.\"\n\n\"What are you?\"\n\n\"I'm a horny little bitch, Miss.\" Imagining Paul's pleasure at my acceptance. Paul had taught me with little steps. This was no stranger seeing me slutty, naked, wanton. Nor was this a simple fantasy that I could blink away. This was real now, totally within my life, having ejected me from my comfort zone. \n\n\"Of course you are.\" Her voice soft and soothing. \"We all understand what you are. And we understand that your hot little cunt will just drip wanting to please, sexually please. Others will understand too, They'll see you, see what you need, see what you're like, what you are. Your cunt will drip, wont it?\"\n\nTwo fingers slid firmly up into me, into my wet cunt. My knees bent further for her ease. I couldn't hide just how aroused I was. She slid into me easily, her fingers making soft liquid noises as they slip into my sticky, warm slit. I felt my head roll slightly at the rush of pleasure, at the intensity of the feelings, and then she begins to pump her fingers in and out with a maddening slowness.\n\n\"I... I... I... yes. Miss.\" I whispered hoarsely. \"Yes. Yes. It will. Miss.\" I could feel her fingers impaling me, feel my lips stretching around them. And my tits with their rock hard nipples as they bounced to the maddeningly slow rhythm Liz was giving me.\n\n\"That's a good little slut. See how easy that was. Who has sexual control over you now?\"\n\n\"You, and Paul, Miss.\"\n\n\"Yes. You've given it all over to us, haven't you, totally.\"\n\n\"Yes Miss.\"\n\n\"Your slutty body is ours now. You like that, don't you?\"\n\n\"Yes Miss.\" I gasped. \n\n\"We look after you and you are just our toy. If I want your dirty little body displayed it will be displayed, and whenever I want you displayed. Won't you?\"\n\n\"Yes Miss.\" Her fingers continued to fuck me as I stood passive for her, my hips thrust forward for her, my hands behind my buttocks. I could feel an orgasm slowly nearing.\n\n\"You will be disciplined whenever I see fit, used whenever I want you. Your body is not yours. It's ours. Paul's and mine. You can't finger this wet sticky cunt when you want. You can touch it only with permission, cum only with permission, cover it only with permission. You do understand how much you need us, how much we own of you, don't you?\"\n\n\"Yes Miss.\" Gasping now, wanting to hold onto her arm as it fucked me. \n\n\"Good girl, don't ever forget it. Put your hands on your head. That's it, now, thrust up and down on my fingers. Up and down on them. Yes, keep your thighs wide. You want me to see your cunt fucking my fingers, don't you?\" I bent forward, arching my body, my tits jutting and bouncing slightly. It felt so humiliating. I was her puppet and she watched her fingers as they played with me. I knew I was so wet that her fingers would be shiny and they were making squishy noises in my pussy. \n\n\"By the way I didn't realise you were was so noisy when you were being fucked, in your dirty little needs.\" I was aware of soft moans now as she slowed me, keeping me from my orgasm. \n\n\"No!\" She laughed. \"Not now. You are here to pleasure, not to have pleasure. If you are really good I may let you have those dirty needs satisfied later. What are you here for?\" Her fingers slid out of me.\n\n\"To please. To please you. I'm sorry. I'll be good Miss. I will, I'll be good. I'll do anything.\" \n\nAnd I knew I had given in. Given in to myself as well as her. I was grinding my sex against air, rocking lewdly with no hand at my sex. \n\nShe laughed. \"Of course you will. That's not for discussion. But you can't cum yet you dirty little bitch. Don't you even think about touching yourself without permission. Do you hear me?\" \n\n\"Yes Miss. I mean no Miss. I'll not touch myself without permission. Never Miss.\"\n\n\"Clean.\" She said, offering her fingers up to my mouth. Submissively I suckled them and licked my copious juices from her. It seemed more degrading with another woman.\n\nI had to do as I was told. I knew I wanted to do as I was told, I accepted myself as a slut, wanted to please her. It was easier when I accepted myself. Exciting just being this slut for them, a plaything. I could let myself go, do all the things their slut was told to do, all the things that I couldn't let myself do otherwise. I knew why I was there. I was hers, and Paul's. What I used to think of as my private parts were not anymore, not even mine, I made no decisions about them other than to clean them. It felt good that my body was to be on display, to be used, however they wanted and I would let them, I wanted it. It felt right right. Liz could see my lips all swollen and wet and needy, and like that because she had told me what I was, she had played with me, fingered me. I was acting like a submissive slut because that's what I really was. I had often thought about it but they could bring it out into the real world whenever they wanted and I was helpless, couldn't stop them and it felt deliciously shameful. I couldn't hide myself with them. I didn't need to.\n\nShe stood, shrugged her trousers off, pulled her small knickers over to one side. Instead of sitting down she leant on the arm of the sofa, standing half naked, her pubic hair neatly trimmed. She had me kneel again, fold my arms behind me. In a daze I did as I was told, my tits sticking out lewdly. I was taken by the hair and pulled between her naked splayed thighs, before thought kicked in. Her pubic has was damply flattened. She pushed forward, spreading. I could see she was aroused before my head was pulled roughly to her and against her lips, the smell of her sex was strong in my nostrils. \n\nI had never really smelt another girl nor tasted one. My mouth was pulled tight to her open pussy, suffocatingly close. She tasted different in some subtle way to the taste of my own juices that I had licked from my fingers or Paul's. Another woman, my mouth at another woman's pussy! My head was pushed so it moved against her and I understood. I explored her slowly with my tongue and my lips, desperate to find the right things to please her. So strange to feel her here. I felt in a warm nest between her thighs, her taste and smell almost overwhelming me. I licked her clit and felt her jerk. It excited me to excite her.\n\nGradually I could feel her responses more as I became more aware of her. I wanted her to enjoy what I was doing. I shuddered. Paul would expect me to be good, do well. My hands were on her warm thighs. I licked up the valley between her lips. Her juices and my saliva were mixing, covering her and my face. I licked, I nibbled, I did everything I thought I, myself, might like. Time stood still. I took notice of the way her body jerked and ground against my face, she was becoming more excited, nearer. I licked harder and pressed against her wet body until she froze, I could feel her legs stiffen and tense, on the edge. Then she jerked hard against me then jerked and my face was much wetter. She had cum. In that moment, it had all been about her, about giving herself over to what was happening because it pleased her. I was hers now, to be used for her pleasure. I had done it. I had brought another woman off. Paul and her would be pleased.\n\nI remained kneeling as she wiped herself and dressed again. I was very aware of the throbbing between my legs, in my nipples, of the red patches of emotion on my chest, of the heat of my face. A small smile was on my face as well as copious amounts of women juices.\n\n\"Now slut, tell me what you have just done.\"\n\n\"I licked you Miss.\"\n\n\"Yes you did but you are being annoying again. Tell me in detail what you have just done.\"\n\n\"I licked your pussy Miss. I licked it and sucked it. Until you came, Miss.\"\n\n\"Yes you did, slut. You did and you will do it again whenever I tell you to won't you.\"\n\n\"Yes Miss.\"\n\n\"Next time we may have the boys watch now that you have become used to it. Stay naked and don't clean yourself at all until your Paul comes home.\"\n\nShe left me then. Still kneeling I almost sobbed a little, feeling a little sorry for myself not having cum, nor given permission to. My body pulsed, needed release. The acceptance was easier now. Remaining naked, with my face covered in her juices was humiliating and made my clit throb. \n\nI had to tell him everything, everything in detail. How I licked her, how it made me horny. How dirty I felt, how naughty and wicked. How I needed him to spank me. Make my ass hot, really red and hot. He did. I crawled over his knee naked with my sex already swollen. His slaps on my buttocks echoed and echoed and the heat spreading in me. It cleansed, it left me fully accepting. \n\nI stood by the window. Feeling my cheeks glowing, the heat throughout me. I wanted to touch myself. I thought about the fact he had given me to Liz. He obviously still wanted me, wanted me to submit to him. I suddenly realised that he was making me submit further by letting Liz use me. I felt a rush of liquid between my legs.\n\nHe fucked me after. It was wonderful. He placed me me over the arm of the sofa, so that my red ass was sticking up for him and my legs apart so I was open to him. He was so hard, he fucked me so hard. I gave me permission to cum as he fucked me hard, his body slapping against my spanked cheeks.\n\nAt work I have always been expected to be on top of things all of the time, expected to have all of the right answers and to know how to do anything. Previously I had carried that over into my private life I had realised. Paul had understood that and taken me in hand. I enjoyed giving over control to Paul, it felt good, not being in control made me feel scared but more and more aroused. It was also considerably less stressful to accept his decisions rather than make them. It freed me. Becoming aware of that had been a huge change. Now it seemed like another big change had occurred, being fucked in front of Liz and David and having to lick Liz, though life just carried on and these changes weren't actually as big as I had originally thought, they were simply additions to the initial changes in my life. Circumstances were simply moving on I realised, life carried on. \n\nThe next time we were with Liz and David in one of our houses I was instructed to take off my sweater and bra we got back to the house. When we were out I had had to take of my knickers in the restaurant at the table, trying not to be obvious as I was pulling them down my legs and over my feet. I had to give them to Paul and he passed then round to smell, before he gave them back for me to put in my mouth. I could taste myself on them, everyone there knew. It was humiliating. \n\nWe were at our house so being half naked didn't appear that different to me as Paul often had me like this. Obviously I felt very self-conscious with my tits showing and my nipples hard and obvious. David was obviously agitated but Liz warned him and told us that she had actually spanked him when he came in his trousers the last time. I was shocked and David looked totally humiliated. I smiled inwardly, knowing how it felt for me.\n\nLiz beckoned me over to stand by her. She ran her hand up the inside of my thigh between my knee and the lacy top of my stocking, up and down caressingly and I shuddered at the memory of the last time she had done that. I stared at the carpet. She broke back into the conversation until it slowly died as both men became aware of what she was doing. Even though it was unlike him, even David kept quiet just then.\n\n\"David, I want you to know that she's not your toy. You can play with her but only when we allow it, she belongs to me and Paul, not you. You can touch her but you cant fuck her. Your cock is not to go inside her. Not at all, not anywhere. Understand?\"\n\n\"Yes, Yes Liz.\"\n\n\"I know you've lusted after the slut. She wont fight you but she will not obey you. She'll probably do what you tell her within limits. You can enjoy her a bit, you can feel her, she'll probably wank you and lick you if you want. Now what do you say David?\"\n\n\"Thank you Liz.\"\n\n\"Slut, go and stand by him.\" I did. My eyes never leaving the floor. \n\nHe turned to Paul. David was submissive too. I could see it now as much as he could see I was submissive. I saw his mouth move but nothing came out. \n\n\"It's alright David. I don't mind.\" Then to me, \"Who do you belong to Hannah?\"\n\n\"To you Sir. And also to Mistress.\"\n\n\"Nothing you will do will change that, David. You can look, you can play. A little. Do what you want with her within our limits. Neither Liz nor I will be angry with you. You can touch her now.\"\n\nDavid looked back at me, at my tits, at my skirt, back up to my tits. Still standing he let his hand touch me, my waist. He ran his hand over my skin tentatively, my eyes moved up to his face, his eyes. David didn't look at me. I knew he was safe. I could see Paul. I was near him. He was there close, like when we were in the park, protecting me, even though I knew with David I didn't need it. He touched my tits. He was gentle, careful. If I had been 16 I would have enjoyed it, but now, I was different now, I needed other things now. It felt irritating, but I didn't show it. I let him feel me. I knew I had to please regardless.",
        "\"Paul, are you going to fuck her again?\" I could hear the laughter in her voice.\n\n\"No. I haven't let her cum for three days. She isn't being fucked today.\" It was hell. For weeks we had had sex every day at least once. I often had three orgasms a day with Paul using me with his cock or fingers or me having to perform for him to watch. In the last few days I had been allowed to suck and touch him but no more. I wasn't allowed to touch myself and he refused to give permission for me to cum. It was nearing the time that I would consider disobedience, though that was something I knew would create both punishment and problems. I could feel the bad temper in me, it had been with me for days. I hadn't realised how much I had become addicted to the release of the orgasms that Paul allowed me.\n\n\"But why?\"\n\n\"She's sucked me. She's pleasured me. She needs to learn that I can refuse her as well as allow her pleasure. Also I want to see her needy.\" I listened. He had explained to me already but it didn't make it easier to cope with.\n\n\"Can I watch her do it for you?\"\n\n\"Sure.\" Just like that. I was to perform in front of everyone. \n\nHe told me to go over to him, kneel. He was standing and didn't go over to sit down. I knew when he wanted me like this he would be very dominant. If he sat or laid I knew he simply wanted me to give him pleasure. Like this I knew he wanted to face fuck me, he would show his dominance in front of Liz and David. \n\nI undid his jeans on command and I slid them down his thighs with his boxers. His cock was there for all to see. My Master's cock. Liz and David were looking at it too. It was semi hard, his veins sticking out, his knob shiny in the light. I wanted to show them it was for me, like when he had fucked me. He nodded to me.\n\nI let my fingers play over it and then wrapped one hand around it and slid it down to the base. I could fee his cock actually beating in my hand and smell his maleness. I wasn't to use my hands much in this position I knew, only a little at the very beginning. He was getting harder now in my grip, almost fully erect. I opened my mouth and let my eager tongue slip out and ran it all the way up his shaft and swirling it over and the around the smooth satiny end, tasting the salty maleness of his growing arousal. I felt Paul's hand in my hair and put my own behind my back.\n\nFeeling more and more obedient with hands behind me and my face at his cock I parted my lips and let the knob slide into my mouth. Paul's cock was hard and thicker now and I had to open my mouth wider as he fed it to me, only stopping when the hot cock and some of his shaft was safely engulfed in my warm mouth.\n\nI sucked it, sucked harder. A salty trickle greeted my tongue. Heat rushed through my body and my cunt tingled under my skirt. I moaned softly around Paul's cock. I pulled my head back and released the suction and ran my tongue all over it again the tip before taking him back into my mouth. \n\nPaul's hips pushed forward, pressing himself further into my mouth and I opened wider to receive him, sucking harder and swirling her tongue around and around. I pulled back until just the head was in my mouth and then slid down it again, taking his hard flesh as far back into my throat as I could. Paul held me then, keeping me still, pressing me down against his pubic hair and causing that hot flesh to be further imbedded down my throat. I gagged a little, from shock and fullness but then recovered and held myself around him. My eyes were watering, I realised, and now, more able to suppress my gag reflex, let him slide in further before he pulled himself out to my lips. I took him down deep again, and then again. \n\nI vaguely heard movement behind me before he took over and fucked my throat for a while as I knelt passive and accepting. My eyes were watering more now and frothy saliva covered my face and his cock. He slowed and tentatively I waited not knowing if he wanted to keep still for a moment or let me return to working on his cock. With his cock in my mouth I could feel him breathing, feel the pulsing of his blood. I liked pleasing him with my mouth, I was simply pleasuring him and though it excited me to do it was essentially for him. Slowly he began again. Slowly pushing into me, pulling back enough for me to take breaths and then filling me again. From the deliberate way he was doing things, I could tell he would come soon, he was simply edging himself now to prolong his pleasure. \n\nI felt his muscles tense. I heard the soft moan he makes sometimes and he pulled up to my mouth. I held him with my lips and then felt his semen spurting up his cock into my mouth. I felt almost ready to orgasm myself but forced myself to wait until he was ready to pull from my mouth and as he did I kept it open for him to see his semen on my tongue.\n\nSuddenly I heard clapping and cheering behind me. Liz and David. I felt foolish but it was funny and I laughed , choking on Paul's semen before swallowing it. It was like we were friends again, except that I was half naked and they had both watched me sucking Paul's cock.\n\nObviously Paul also continued to give me my maintenance spankings, as he did the day after seeing Liz and David. It emphasised the release that my body craved. After, he normally put cream on my buttocks and insert my plug and I would stand in the corner by the window. Life continued in its routine, its rhythm. I needed the physical manifestation of his dominance over me, certainly without it through his cock inside me. I needed it made obvious, to keep me in my place, to make me understand my submission. The pain I received from him, and to a certain extent, though not as much, from Liz, was so sexually now. The heat of this mornings spanking had spread in my body so quickly.\n\nIt had become part of the routine for me stand and put my head on the chair, opening my cheeks with my hands for my plug, pushing up for him to press it into me. But this morning there was a change. I was bent naked with my head on the chair pushing up my ass as usual. Paul had lubed my anus and I was attempting to relax my muscles and spread myself open for the plug. I felt it there and Paul pushed it in, but it wasn't the plug. I felt his body against my hands. His cock had entered and stretched me wider than the plug, longer and wider in me than the plug. I grunted. My eyes watered. He was inside me but still now. I felt cold sweat on my forehead. My breathing slowed as everything else around me went into slow motion for a while. I was surprised I hadn't pulled away, off him, but his training and my acceptance of his dominance kicked in.\n\nFor long minutes I could think of nothing but him inside me, stretching me painfully and filling me. My buttocks felt so hot still after the spanking but gradually the pain of him in my ass subsided slightly and it seemed to continue to slowly ease. I still grunted. The cold sweat disappeared. My breathing came under control. I was so full of him. So incredibly full. Thank God for lube. I put my hands on the chair in front of me for support. \n\nHis hand went under me, slowly rubbed my sex, rubbed my clit. I grunted again. Oh God. I could almost feel the grunting inside me, deep and echoey around his cock. I felt humility wash over me. I suddenly realised that the plug had gotten me ready, got me used to it. It felt strange but not too strange. It was different. The plug had filled me but not as much as his cock and once it was inside my body would accept it and work with it. What was in me now was alive. I certainly had no control. Oh God. I felt like I was going to shit! I was so scared of that. But it just felt like it. God, nothing could get out with him filling me like that! I could feel every inch of his cock there with every nerve in my body. I found myself slowly relaxing around him, not overall but there where he most definitely was. I felt so submissive. He had been everywhere in me. \n\nHe hadn't asked me, but then he needn't. He began moving, fucking me. Slowly. He paced his entry. He was gentle but I was so full of cock in a strange place. Gradually I got used to it moving there. Feeling it so much. The head of his cock, wider than the rest, coming to the entrance then going deep again. We carried on for what seemed hours, his cock moving slowly, his hand on my cunt. I hadn't been allowed his cock inside my cunt and now he was in my ass. His touching of my clit felt so intense. I was making lots of noise. Not too loud but constant animalistic moans and gasps, all of it reverberating inside along with his cock. I was shaking now, spasming, squeezing his cock rhythmically along the whole length of him as he was deep up me. Suddenly I felt him stiffen and knew he was going to cum. I couldn't cope with it all, it was like overload. I'd needed him for days, needed his permission. I'd just been spanked and my ass was hot and now it was full and I hadn't cum for days and he was going to cum in it. And i came at more or less the same time as he did as he told me to. After a while I realised that we were both soaked with my juices. I must have squirted and I'd never done that before either and suddenly I had lost it again.\n\nPaul was so good to me. He came out of me and wiped me down, everywhere. Then took me to the toilet, sat me down and told me to stay there whilst he showered. My ass was tender and it felt open still. I wiped myself all over and waited for Paul. He came out and dried himself perfunctory. I never tire of looking at his body. I love it naked. He pulled me up and then into the shower with him where he lathered me all over, especially my anus and cunt, and rubbing me gently, then holding me.\n\n\"Next time I will tell you beforehand and you will cleanse yourself inside. You will be responsible for cleaning, both before and after.\"\n\n\"Yes Sir.\"\n\nThe butt plug carried a lot more emotionally when it was inserted in me after that. I felt much more submissive. I had never really thought much about my asshole as a source of his pleasure, other than his finger there, but now I thought about it a lot, and knew it was a source of my pleasure too. He never took me there after a spanking after that first time. He would tell me and I would ready and clean myself. He didn't do it often, I knew he enjoyed using me in my cunt as well, if not more. However, when he did take me up my ass it really made me aware of accepting him totally. \n\nPaul also continued to take me out every now and again to the park. To exhibit me, my body. Well it felt like he owned it. He was letting me understand that he dictated what I did with it, whether I was allowed modesty or not. Who saw what. He knew that it excited me, this instructed exhibitionism. When I am ordered to stand before people and take off my clothes is extremely arousing for me. The idea of men looking at my tits, my cunt, seeing how excited I was, what a slut I had become, especially as I had no say in what happened, was so intense. I was never allowed to look at their faces but I could still tell they were looking at me. \n\nI remember it had rained one evening, it had stopped but rain still littered the ground and the smell of the rain was wonderfully fresh in the air. I was wearing my raincoat this time, with only stockings and suspenders underneath. I liked the feeling of being so naked under my coat, the feeling of it moving over my skin. I knew that I would probably be showing myself to people of his choosing. I also knew I wouldn't object to it or refuse to do what he told me even though it would feel humiliating. Realistically, I knew of course I could refuse or run away. I doubted that Paul would actually force the issue physically, if only out of pride. He would probably just let me go, but that was far worse. I couldn't cope with him giving up on me, not now. I knew I wouldn't, I knew I had accepted his control and needed and enjoyed having to do what I could never do without him telling me to.\n\nThe man who had been there when I had held my tits out to him was there. The man who had wanked as he looked at me before. He was standing by the same bench as last time. The man looked up and nodded at Paul, who nodded back. There was something there that I could not understand but knew it was irrelevant. We went over to 'our' bench and after drying the seat with tissues we sat down. The evenings had closed in over the last few weeks, dark earlier. From sitting at the bench opposite the man had gradually neared us, until he stood very close in the twilight. My eyes were on his shoes.\n\n\"Show the man your tits.\" The evening air was cool and my nipples immediately hardened as my shaking fingers undid the top buttons on my coat. \n\n\"Does she likes doing this, or is she just well behaved?\" It was the first time I had heard the man speak. His voice wasn't rough, though not cultured either, though he was wearing a good overcoat. He was not talking to me, yet his eyes never left my exposed tits. He sounded rather nervous, but at the same he sounded amused.\n\n\"Both.\" Paul said grinning, leaning back with his feet out in front of him. He certainly looked relaxed. \n\n\"She's not wearing any...\" as my tits came into view.\n\n\"No, she's not. She came ready to let you see her. Would you like to see more of her?\"\n\nThe man swallowed obviously, then \"Yes. Yes, I would.\" \n\nI could tell that Paul turned to me. I looked at him sideways and saw him raise his eyebrows, not really as a question more of an instruction. I looked down again. My fingers found the remaining buttons, fought with them, unbuttoned them. It was held in place by my hand. I let it go and felt it slowly slip over each knee falling in different directions and down my thighs. Again I felt the coolness of the air but it was the heat inside me that won. A police siren suddenly made me jump, it was near by the park, but gradually it faded. My body looked white in the dusk but still very visible. Paul softly slapped my leg for me to spread them. \n\nThe man let out a strangled noise, then managed to speak. \"She's such a slut... Being ready... Like that... Wanting it...\" I saw the bottom of his coat moving, opening. My stomach was clenching, I was uncertain as to what would happen. I let my eyes stray upward a little, not to his face, but he had his cock out again. He was erect. Looking at me had made him hard again. I felt my insides spasm. My lips were probably glistening too. His hands moved up and down it, over his hard flesh. It looked big in his hands, it looked uncomfortably hard. My breathing was making my tits rise and fall for him, my legs spread open, offering.\n\n\"Use your fingers.\" Paul knew me. He knew I needed to, knew I was very excited. He knew I was his slut. I did as I was told, parted my cunt, felt my slippery, bloated lips, touch my clit. Both the man and me made noises. I spread my legs wider for him to see more easily. I was looking at the cock as I rubbed myself, other mans cock. I watched as the man wanked and he watched me fingering. Suddenly he grunted louder, then from his cock his semen spurted out, spurted onto me, onto my naked body. It felt hot on my skin, almost burning me. I looked down at the milky fluid on me, spots here and there, on my tits and stomach and legs. i felt my feet going taut, toes pointing, thighs pressing inwards. I came.\n\nThe man was fastening his trousers when I next saw anything, putting his cock away, doing up his zip. Before I was really aware he was walking away.\n\n\"Rub it all over. Like cream.\" I sat there and rubbed a strangers some over my flesh. I could smell it on me.\n\nPaul had found a club for us to join. One for like minds he said. You could only join in couples which for some reason relaxed me about it. Also, each of us, separately, had to go through an interview. \n\nInitially I said I wasn't sure about it but in fact I was, I was just trying to cover my arousal. I knew he was pushing my limits now. I was aware of what he was doing, but it made no difference, he had made me do things that I would never have done and enjoyed them more than I could ever imagine. When I thought of the once new things he had planned for me in the past they certainly scared me a little but I looked on them as his ways of extending my pleasure.\n\nPaul had had his interview and I went after work one Thursday to an office in a room in a non-descript little bar. The woman who interviewed me, called Alice, was older than me and I could imagine her as a librarian in a tweed suit. She was pleasant, had on a little too much make-up and was a little other worldly.\n\nAfter introductions she began by telling me about The Club. \"This is a consensual club and we take only couples as we find it cuts out most of the 'crazies'.'\" I smiled inwardly as she had straightaway made me realise she didn't see me as one of the 'crazies'. \"We realise that having couples makes a much more balanced situation though I wish to point out that not all the 'couples' are married.\n\n\"Now, Hannah, tell me whether you would consider yourself the dominant or submissive partner in your relationship, or does it switch from one to the other?\"\n\n\"Haven't you spoken to Paul? Surely he told you what the situation is.\"\n\n\"Yes we have, but its best not to presume what one person thinks is always what the others thinks, isn't it?\" I looked at her and understood she was checking my answers against Pauls. She sat there until I answered. \n\n\"Submissive. Now I am. Before I wasn't aware but now I accept that role.\" \n\nIt was strange having her asking the most personal questions, considering her motherly image. She teased from me that it was me that was spanked, that I accepted it willingly, that I had been spanked on a number of parts of my body, that I had implements other than just the hand punish my body, and not only on the buttocks, and what those other parts were. She had had me describe how the spankings took place and how there had been a ritual built up as we progressed. She had me admit that I had been punished by both male and female and, obviously, that it was not only my partner that had done so, and there had been others watching at times. I admitted how it had made me more relaxed and happier and that only a small number of friends were aware of it. By the time she finished asking questions I was red faced and hot. \n\n\"Well your answers and responses matched your partners very well and it seems that you are both ideal candidates for membership. Now you need to understand the basics about The Club. The rules, if they could be called that, are simple. Basically, any and all action that takes place within The Club is consensual, all actions must be accepted by all parties. On top of that no permanent marks from any punishment will be allowed to be caused anywhere on any submissive's body and that all non permanent marks are confined to the torso.\n\n\"Also, the club is very relaxed in most things but once every month or so we have a formal evening. It isn't compulsory but if you do go there is a smart dress code and all dominants are to wear black and all submissives white. Anyone else wears a variety.\" She laughed. \"New members are introduced to the club on one of these evenings following their joining. The new members put on a small demonstration.\"\n\n\"What do you mean, a small demonstration?\"\n\n\"Well, I would suggest that your husband demonstrates how he usually spanks you.\"\n\n\"Oh.\" My mind a whirl of images. \"In front of...\" My breathing had quickened and I felt out of control again.\n\n\"I hope you feel that you can go through with that. Is it a problem? I recollect you saying you had been spanked in front of others already. And that you enjoyed exhibitionism as well. \"\n\n\"Yes. Yes. If that's what Paul wants.\"\n\n\"No. Its also about what you want. You have to confirm your willingness. It is consensual. You should know that as a submissive.\" ",
        "\"Yes. We... we... can do it.\" Oh my God. Lots of people seeing me! I thought of the people there. Maybe people who knew me. Then realised that if they were there, in The Club, it didn't really matter. I would need Paul to be firm I thought. Like when we were in the park, firm but knowing me. She looked at me to confirm it was alright and I nodded and she smiled again. \n\nAlice continued, \"However, there is one other thing, one exception to the permanent mark rule. We don't insist on this but we would prefer members, both of the couples, to have a small tattoo, the placing of which will be decided by the couple.\" At that she shocked me by opening her white blouse and opening her front opening bra, displaying her own tattoo which was on the underside of her left breast. It was small, no bigger than the end of a finger, and was simply a circle with what appeared to be a cross overlaying it. She had me look closer and explained that the cross was actually a whip and a crop. There was a small capital 'D' underneath. Her displayed and tattooed breast seemed totally out of place as she held it up considering her general visual impression. \"My tattoo is blue, as I am a dominant. Yours, as a submissive will be black and slightly larger. And of course with \"sub'. Your husband has already expressed his desire for this but it is something you must agree to. Obviously no cost will be involved to you and the tattoo will be able to be booked through The Club.\" \n\nI nodded. \"Yes.\" I whispered. \"Yes Miss.\" Paul had wanted this , and I knew I would accept it.\n\nThe following Saturday I had just had my maintenance spanking, a little earlier than usual, and was standing in the corner contemplating the heat of my buttocks and the plug inside my ass. Paul would not be fucking my ass today. I was remembering the session, how with each spank, I had noticed the heat in my behind had crept farther up inside me. It wasn't long before I had felt my cunt twitching with every stroke. My clit had hardened and stuck out desperately, throbbing steadily, begging to be touched. \n\nPaul's phone went. He let me realise it was Liz but otherwise kept me in the dark about what was being discussed until near the end of the call. \n\n\"Yes. A white cocktail dress. It mustn't have a pencil skirt. Access is important. Use her card.\"\n\nThen to me, after the call, \"You are going shopping with Liz. You will need a nice white dress. Remember you have to be obedient, I will not accept anything else. If she tells you to do something, you do it. Understand?\"\n\n\"Yes Sir.\" We both knew I would, especially after the spanking. \n\n\"You have 45 minutes to get ready. Go!\" I dashed off upsetters to shower and do my make up. I knew Paul would choose my clothing so I didn't bother worrying myself about that. \n\nI travelled with Mistress Liz to London by train. It was warm and sunny and both of us wore thin summer dresses. At the station I was sent for a newspaper. I felt as if I was a child again. She had this effect on me. \n\nI felt a little nervous by the time we arrived. Liz took charge, of course, and we visited fairly expensive shops. In each of them Mistress chose three white dresses for me to try on after fairly lengthy searching. I knew the function of the dresses, I wondered whether Liz did. In none of the shops did the shop assistants bother speaking to me. I didn't know whether it was because they somehow knew Mistress or because it was obvious I was simply the submissive of the two. Whatever, I did not have the worry of attempting conversation but did feel rather foolish. \n\nIn the first shop an assistant came up to us after Mistress had loaded me with three dresses. She asked if we needed assistance and Mistress smiled at her and asked her to join us and help in the changing room. The assistant was only a girl, maybe not even twenty. Although the changing room was large with three of us inside, there wasn't a lot of room. I hung the dresses up and was told to undress. I took off the dress I was wearing and then Mistress told me to take everything off except my stockings and shoes. I looked at the floor in shock, managing not to question her in front of the girl, though I doubted if I would have the courage even alone. I began to take off my bra. I felt really humiliated. I had to do as I was told but there was the girl and she would see me naked and see my submissiveness. I was trapped. \n\n\"She will be required to be naked under the dress so it is best to see her in it like that.\" Mistress said matter of factly to the girl. I blushed and hung my bra on the hooks. She didn't ask the reason thankfully, not that I knew of one, but could guess in general. I had no idea what she thought regarding me having to be naked underneath when I wore it but I had to accept it, albeit with some shame. \n\nAfter stepping out of my knickers I was finally standing naked in front of Mistress and this stranger though I was shaking like a leaf. It was totally embarrassing and was making my face very red and hot and my nipples hard from my exhibition, which traitorously refused to soften. The obviousness of my erect nipples to everyone was very shaming. I looked at the floor and desperately held my hands at my sides, standing naked whilst the two women conversed. They discussed my body as if I wasn't there, well Mistress did with the girls agreeing. I noticed the girl didn't look me in the eye but she did look at my body. It was all I could do not to cover myself and I couldn't escape, seeing my nakedness reflected in the numerous mirrors. I didn't really notice the dresses other than being pleased that they were at least covering me up whilst I tried them on. \n\nFor some reason Mistress was not happy with any of them and I eventually dressed and we left the shop and entered another. \n\nIn all the shops the same scenario unfolded. Eventually, in one, a more mature assistant entered the changing room with us. Again I was told to strip completely and the assistant simply nodded and smiled knowingly when told why. The assistant didn't even try to cover her interest in my body as I stripped. Again my nipples gave me away.\n\n\"Are you cold?\" The assistant asked to Mistress's amusement. I blushed yet again.\n\n\"Answer the lady.\" Emphasising her dominance of me.\n\n\"No Miss.\"\n\nI tried on the first dress, a strapless one. I noticed that without a bra it didn't do my tits any favours after a nervous glance in the mirrors. The assistant moved up to me and stuck one hand inside the front, repositioning my breast in its confined space. I felt her squeeze them slightly as she moved first one and then the other. My eyes were wide as I looked at the floor totally shocked. Mistress stifled a giggle. They both decided that the dress did nothing for me and I had to take it off again. My nipples were throbbing now.\n\nI stepped into the second dress and the assistant zipped me up. It was a little tight around my hips and thighs but showed my tits off nicely. \n\n\"You cant wear that. Its too tight around your legs. You aren't available enough.\" The assistant nodded and looked at Mistress, smiling. She dropped to one knee and ran her hand up my thigh quite high. I gasped.\n\n\"No you are right Madam. You can't easily get your hand up here. Especially as she does need to be available as you say.\"\n\nEverything was getting too much. I was shaking and I was sure I could smell my arousal as I stripped again and put on the third dress which Mistress didn't like at all. Then stripped again. The assistant spent a considerable amount of time obviously looking at my tits and cunt, so obviously that Mistress put her hand behind me to push forward my hips and then had me cross my arms behind myself. I was now so shamed being humiliated in front of this stranger, my face and the way I complied echoing my feelings. Her instructions were rather clear indication of the sexual nature my position.\n\n\"If you don't change your attitude, young lady, you will get another spanking.\"\n\nThe assistant looked up at Mistress. \"Has she had one already?\"\n\n\"Yes. This morning.\" The woman looked at me very knowingly as my face surely must have gone a beetroot colour.\n\n\"I find a good spanking is what most sluts need.\" \n\n\"Yes this one certainly needs it, though she gets quite wet.\n\nSuddenly she said to Mistress, \"I know a dress that you might like. We don't have it in white, only in red, but we can order it in white for you.\"\n\n\"Show me.\"\n\nWith that they both left the changing room telling me to not to move. I could hear their laughter and muffled conversation as I stood and tried to compose myself but it was difficult with what had been said and done. The minutes dragged standing naked but they returned to see me naked with my hands still behind my back and my hips pushed forward.\n\n\"She's such a slut isn't she?\" Mistress and the assistant laughed. I was given a light red dress to put on which I did quickly to cover myself. It had spaghetti straps and a low neckline and the skirt was full and down to mid thigh. It did fit me well and looked good on me.\n\n\"There, I think that's what you want isn't it. She will look virginal in white but she is very available. Look how easy it is.\" \n\nShe patted me here and there until I was exactly in the position she wished, facing her, slightly to the side with my legs apart. The assistant then took down a strap from my shoulder and fondled my breast openly in front of Mistress, I could have died of shame but before I knew it she twisted the nipple and pulled, then did it again until I moaned. Leaving my breast exposed she put her hand easily under the wide skirt and felt my buttocks, then between them. I jerked. \"Oh I think she is a little over excited by the feel of her.\" She took out her hand and smells it at her nose. \n\n\"Yes, she does get like that. She is such a slut and she cant control herself at all.\"\n\n\"Unfortunately I am going to have to go soon but if you wish you can bring her back sometime when we aren't busy. I am sure I can help you.\"\n\n\"Yes. Yes. Thank you. I think I just might.\"\n\n\"The name is Ruth. Just ask for Ruth.\"\n\n\"Thank you Ruth.\"\n\nIt had taken a lot of thinking, discussion and embarrassment deciding where the taboo I had to have for The Club would go. I preferred it on my tits, Paul preferred it on my mound. Although Paul obviously had the final say we discussed the merits of both. It occurred to me that it wouldn't be seen in either place when I was spanked over Paul's knee. We discussed having it placed on my buttocks or on my back just above. Finally Paul came up with on my thigh just below my lips. As he said, if I had my legs apart, as I knew I must, it could be seen from both front and back, and if it was on my right thigh it could be seen by Paul when he spanked me over his knee. The fact that the location would be outside the area taken by a bikini or underwear was very embarrassing, though Paul considered this a good point.\n\nThe tattoo parlour whose address I had been given by Alice looked OK, clean and hygienic. It was a girl who would do the actually tattooing thankfully, though she obviously knew what it was and what it signified as she couldn't stop giving me the amused high eyebrow look. I sat in the chair whilst she sorted out a few pots and I could feel my tension increasing. \n\n\"OK. Take off your jogging bottoms. You can keep your panties on, but you will need to move them to the side. Also just to make sure your blood sugar is up enough eat this.\" She gave me a small bar of chocolate, which I ate, and I stood and took off my joggers and trainers and sat back again. \n\n\"The machine makes a bit of noise but its not like the dentist,\" she laughed. She lowered the back of the chair and spread my legs. \"Just to be safe, let me see exactly where you want the tattoo placed.\" I sat up and put my finger high on my right thigh. \"Good. Now lay back and be positive about everything. She placed a piece of paper or plastic against my skin and rubbed it. Then she took up the needle gun.\n\nWhoever said tattoos don't hurt? It most certainly did. I found myself twisting and moaning and other shameful things even though I had decided that I would simply grin and bear it. Tracey, the girl doing it, told me that there were other less painful areas on one's body but where I was having it had rather a lot of nerve endings. I needed to talk to her to take my mind off it. She told me that she had done quite a lot of the tattoos that I was having and some in exactly the same place, which relaxed me a little. She was good at inane chatter, I supposed she was used to, it but it certainly helped. However, to eventually hear her say, \"All done.\" was the best thing she ever said.\n\nTracey had given me some cream to use and as it was only a relatively small tattoo, it wasn't too painful or red afterwards, though I could feel that I had had it done. It was also slightly bigger than I expected, bigger than Alice's, about the size of a large coin. It would certainly be noticed. The letters s, u, b, underneath and the crop and whip could be clearly seen if you looked. Paul was certainly pleased and kept me displaying it to him. He had one just like Alice, in exactly the same place too. Mine felt slightly indecent and I was a little scared about swimming and things, though I felt secretly pleased I had been made to have it.\n\nAt The Club, Alice had introduced us, from the dais at the front, and called on us to join her. She didn't need a microphone, it was very quiet and intimate. We had been sitting at a table where another couple sat who we didn't know before being called up to the small stage. Paul wore a black tux and I had the white dress that had been ordered. Much to my surprise I was also wearing white transparent knickers and a white quarter bra. After the discussion that had gone on in the shop I had expected to be bare underneath it. I had showered and made up, not a great deal of make-up, I had learnt. Paul didn't like a lot anyway but it ran. You couldn't help it when you were being spanked. I went to Paul for instructions. He had fingered me a while, making me wet, as I stood in front of him naked. It felt good being used like this, but he stopped as I knew he would and gave me the underwear. It look very sexy and very revealing once I had it on. My tattoo showed clearly beneath the knickers. \n\nSo I stood there on the little stage with Paul and Alice left us. There was a chair and a young woman brought it to the front. My heart was pounding and my breathing went funny and I could feel my tits moving in the dress. My nipples were already very hard. I tried to pretend it had only the material rubbing against my up thrust nipples but it wasn't. I was aware that everyone there was looking at me, though maybe some of the subs were looking at Paul. I tried to keep my eyes lowered. I had never been in front of an audience, it was nerve-wracking and the temptation to look up and glance up at them was hard to resist even though I knew they were probably hidden by the lights. I felt embarrassed and proud and aroused to find I had become an object of sexual entertainment like this though it was no different from how I was with Paul I realised, nor the others who I was shown to. My armpits were moist and my mouth was dry, I couldn't keep my lips moist and needed to lick them often. My nipples were achingly hard and I could feel my knickers were wet.\n\nPaul sat down. \n\n\"You know why you came here, Hannah, \" He was looking directly at me while I continued to stare at the floor. \"These people want to see how you are spanked. You want to show them everything don't you Hannah.\"\n\n\"Yes... Sir\" I coughed the word out as my mouth was so dry. \n\n\"Now what is the first thing you do when I spank you?\"\n\n\"I have to... to undress Sir. Until I am.. anti I am naked. You spank me naked Sir.\"\n\n\"So remove your dress.\" I looked around the floor of the stage. Knowing I had to do as he said but there were so many people, so many strangers. I was chewing my lips and moving my hands without thinking. I found the zip and pulled it down. 'I had to free myself from any inhibitions, and just go with the flow,' I said to myself. \n\nThe zip, I had to undo the zip. It was difficult to organise my thoughts. I pulled it down. Then, first one strap, then the other came off my shoulders. My hands were shaking. These people wanted to see me naked, see my body. I hoped it was good enough. I hoped they liked it. I was panting, my heart racing, as if I had been running. I shrugged my shoulders and the dress fell off my chest and I pulled my arms through. I took a breath, then another and then stepped from it. My nipples were obviously hard and dark pink above the white quarter bra, pointing at my audience. I saw the shoes of the girl who had brought the chair silently appear next to me and she took the dress. My legs shook. \n\nI suddenly realised that the girl was still next to me, waiting. I unfastened my bra and gave that to her too. It hadn't really covered much. She walked away. I thought she had forgotten I had knickers and stockings on and had to stop myself turning around.\n\n\"Apparently there is a long standing custom here that on their first night a submissive woman throws her knickers to the audience.\" \n\nI gasped. My blushing face seemed to heat up more. The humiliation was intense. I slipped them off my hips, to some cheers from the audience, stepped from them and balled them up. They were damp. They were my last vestige of decency. I threw them as far as I could. By throwing them my tits were swung obviously and my first thought was to cover myself but I managed to stop myself in time. Obviously, I was allowed my stockings.\n\n\"They are rather wet and have rather a nice bouquet!\" A voice called from the dark in front of us, to general approval. \n\n\"Now show them your tattoo. Put your hands on your head.\" I put my hands on my hair, lifting my tits, half turned, spreading my knees so my thighs were apart. More cheering. More heat in my face. More breaths lifting my tits up and down. Paul waited another few seconds to make sure that everyone was aware and really appreciated the degree of my exposure and my obedience to his instructions. \n\n\"Now, over my knees.\"\n\nI felt relief. At least I could hide more now and I had rehearsed what was coming next enough times, though not under lights and on stage. I could hide my face in my hair and stifled a sob just from the raw emotions. I was scared of course, but itI was so very exciting and I was certainly very aroused. Much stronger than the fear, was the dirty desire that always overwhelmed me when I ready for Paul's knee.\n\nI opened my legs to show him I was ready and the pain began and slowly built. He was good at that, the building up of the pain, the tension and the heat. He knew how to gradually increase his slaps, a couple on one of my buttocks, a couple on the other until I was grunting, not knowing whether it was pleasure or pain, just that suffused heat glowing in my crutch and hips. Attempting to hold still for him to slap my flesh. The slap of his hand and the reaction of my body over his knees was a rhythmic constant, lulling me into the beyond, that strange area in my mind where my submission took over regardless of anything else, where questions were meaningless and pleasure dominated me. \n\nI think my body must have continued to buck on his legs even after he had finished, it just seemed natural. His hand parted my thighs further, until I was displaying my cunt wantonly. Suddenly I felt him slap my cunt lips, a wet slap, then not another until I thought I would cum. I was so hot, and wet.\n\nThen it was over and he had me stand groggily and put my head on the chair and spread when he stood. I saw the girls black stilettos by my head and felt the cool cream over my cheeks and then in my ass. I had cleaned there even though I didn't expect him to use me there and his fingers probed deep and rubbed my insides with lubrication. The girl must have brought my plug too and I felt the coolness of the metal as it pushed into me, widening, then filling me.",
        "Finally, not really aware, I was brought to my feet and led to one side where Paul stood me, held me tightly a short while as applause sounded behind me and then put me with my hands on my head. My glowing cheeks facing the audience. Slowly, although the light stayed on me, the other lights came on and, for the others, a kind of normality resumed. I stood there in my own space. I didn't know what Paul did. I concentrated on my feelings of heat and submission. I wanted to touch myself but knew I shouldn't. Eventually I felt Paul return and hug me again. I cried then. All the feelings of need and desire, of being owned and submitting, washing through me. Paul gently moved me to the back of the stage and The girl took me beyond where she gave me my bra and dress to put back on. After checking that I was OK and showing me a mirror where I could wipe the mascara from my face, she led me back to Paul.\n\nHe sat at the table where we had been at before. The woman gave me a long hug and the man congratulated me. Paul allowed me to stand, my bottom being tender. A glass of wine was put in front of me and I drank it. I held Paul's hand like it was my anchor. Slowly I regained some awareness of both myself and my surroundings. The plug was deep in me as I stood and I was conscious of gently adjusting my position carefully to feel the movement inside me. My sex throbbed after the spanking. I thought Paul might want me soon, want to use me. I hoped so. I was clenching on my plug, like a dirty bitch. \n\nThe man was called Scott, his partner Linda. She was obviously his submissive in her white dress. I looked around and it surprised me to see there were quite a number of men wearing white with females wearing black. It hadn't occurred to me though it should knowing David and Liz. Conversation was the same everywhere, no matter where we were. Problems with the trains, children, old parents, until Scott began talking about how he expected Linda to sit. \n\n\"She always has to sit so her flesh touches the seat.\" We all looked at Linda who pulled up the side of her dress, revealing the back pulled up so her thighs and naked buttocks were against the velvet of the seat. \"She has to do this everywhere, when she is with me or alone. I allow her to sit normally when we have vanilla friends over, but others she is to comply.\"\n\n\"In public too?\" I heard Paul ask \n\n\"Oh yes.\" I quivered at the humiliation of it. \" Tell them how you would sit if you were allowed panties, Linda.\" \n\n\"If I was sitting, I would have to pull them down so my flesh touched the chair and place them around my knees, holding them there with my legs slightly apart.\" She looked at the table as she spoke. I was warming to her as I regained more composure. She was older than me but was pretty and obviously had looked after her body. \"It's sometimes difficult to do with a tight skirt. I have to hike it up and expose nearly all of my thighs and then my panties show most obviously around my knees. It's very embarrassing.\" From her smile I could tell that it might be embarrassing but it was also arousing for her. \n\nI wondered if this conversation might be followed up with Paul telling me to do that. I knew I was wet after the spanking and thought about possibly leaking onto my the skirt of my dress if I sat down. I wondered what Linda did when she was sitting and wet. Paul's hand left mine and he held my leg, his fingers on the inside, caressing softly. Without thinking I parted them slightly and held my hands behind my back. \n\nI looked around the room shyly. Someone caught my eye and silently clapped. I mouthed 'Thank you' back. Suddenly, I noticed a woman in black holding a man's cock. I was shocked. Yet I had been naked moments before. I noticed others, a breast out, a hand up a leg, a nipple being squeezed. It did seem very liberal and free here. Paul's hand was higher on my leg now, above my hem. I wanted to push myself down on him. \n\n\"Your partner, Hannah is it, took her spanking well. Linda was most impressed and of course it got her excited as it always does. Good body too, its nice to see someone who isn't fat or with tits down to her knees. Have you been in the Black Rooms?\"\n\n\"No, not yet\" Nobody had mentioned Black Rooms to me.\n\n\"Would you like us to show you them?\"\n\n\"That would be kind of you.\"\n\n\"Do you know about them?\"\n\n\"Yes. Well, I do. I don't think Hannah does.\"\n\n\"OK, come on, we'll go now while it's early. We can leave our things here, they'll be safe.\"\n\nThe other three stood and we all walked out of the end of the room opposite the stage. There was a corridor with the walls painted black began and a number of rooms led off it, all with black walls. Scott stopped and faced me a little down the corridor, it was darker here than in the main room. My lips felt so dry still. \n\n\"Full nudity is not allowed in the main room except for Newbies putting on a performance like you earlier. But it is allowed in these rooms as you may see. Also people have sex privately or publicly. If a dominant wants to take you to these rooms you will be used in one way or another.\" He laughed.\n\nWe walked into the first of the rooms. They were connected not only by the corridor but from other rooms. In the first room there were a number of sofas and chairs, not matching, all having some kind of throw over them. A couple were in the corner talking. He was sitting, she knelt. In the dim light it was obvious that she was naked except shoes and crutch-less tights. Her white skin seemed to glow in the dark. He wore a shirt and dark trousers, probably black and was fondling the woman breasts as they talked. I felt my nipples hardening further as I looked at them. \n\nHe pointed out what appeared to be a wide step running along one wall. \"Sometimes a dominant may wish to offer their submissives for use by others, maybe to use another submissive themselves. He may put the submissive here on this step and others would understand they were available to be used for a while.\" My eyes were wide, it was like an informal slave auction I realised. I was squeezing my plug. Did they all know how I felt? Could they tell?\n\nScott took us through that room into another, also fairly dim. It had a wide open space and a large rubber looking mat on the floor in the centre of the room. Chains with what looked like cuffs hung down from the ceiling and I noticed there were chains around the side too.\n\n\"By the way all rooms have adjustable lighting and this room is obviously used for bondage and punishment.\" I shivered, though it was warm. \"There are whips and floggers and other instruments in the cupboards.\" He showed us them in one cupboard and then took us nearer the walls at the side. \n\n\"Hannah, hold onto the chains above your head.\" I suddenly realised he was speaking to meI I was in a daydream. I quickly stood next to wall and held my hands up and grasped the hanging chain. I felt the skirt on my dress ride up far too high as I did, it was gloomy but I was sure the others could see up my skirt. My heart started pounding. Linda came over and adjusted something on the wall behind me and whatever it was gently pushed into the small of my back and then pushed out my hips from the wall. To keep myself balanced I had to spread my legs. If I was cuffed on the chains, instead of just holding them, I would be totally defenceless and at anybodies whim. I found myself panting. Maybe it was the room that was hot. Linda's hand was gently rubbing the top of my thigh. I daren't look at her even though she was a subbed too.\n\n\"Linda remove your clothes. I think it would be better if they were both naked in these rooms, don't you?\" He spoke to Paul.\n\n\"Oh yes. I agree fully.\" Paul said with a laugh. \n\n\"After you are stripped, would you be kind enough as to remove Hannah's clothes. Hannah, stay as you are unless Linda needs you to move and then return to how you are.\"\n\n\"Yes Sir,\" Linda replied to her dominant.\n\nFrom my position holding the chains I watched her take her clothes off. She was much taller than me and generally bigger, but her tits were about the same size which made them, on her frame, look small. She was well kept though, her body was curvy but not too fat. Her nipples were hard and long and she was hairless at her cunt like me. Her tattoo was on her mound. She also was allowed to keep her stockings on, with a suspender belt in her case. She gave each item of clothing to Scott and then when finished spoke softly to him and after he nodded, took her clothes to lockers I hadn't noticed. \n\nI watched her naked body as she walked back as two other couples walked into the room. Her hand went behind me to undo the zip on my dress and the hooks on my bra, then efficiently took one arm at a time and took each of the straps down before putting my arm back. The dress fell to my waist and Linda caught the bra as the other couples stood looking at me. She pulled my hips slightly to free the dress down my legs. I was naked, fully displayed, and with my legs now parted again, my cunt and tits were pushed forward and presented. I felt my cunt lips gradually parting. Everyone had seen me naked not many minutes before but that felt more of a public situation whereas this felt much more intimate. I wanted them to see what a dirty slut I was.\n\n\"Do I need to put the cuffs on you and chain your arms and legs?\"\n\n\"No Sir,\" I whispered. \"I'll be good.\" Not that I knew his plans.\n\n\"Actually, if I may,\" Scott spoke to Paul, \"I think she may enjoy it better if she was.\"\n\n\"Are there other rooms to see?\"\n\n\"Oh yes.\"\n\n\"We can wait a little. Is she wet?\"\n\n\"I'll check.\" \n\nI felt my eyes open wide at the thought and suddenly felt his hand at my hip, then sliding around me to my up thrust mound, before cupping my cunt in his hand. I couldn't move a great deal but groaned as his hand and fingers slid wetly over my lips and mound. I was pushing forward disgustingly I realised but it was outside my control. I was theirs to control.\n\n\"She's rather wet down there!\"\n\n\"Yes I thought she might be. Hannah do not cum on his fingers, do you hear?\"\n\nI nodded and tried to say yes.\n\nPaul stood next to me. His fingers went to my mouth and rubbed over my lips, making the flesh soft and yielding. Two fingers went deep into my open mouth as two others, Scott's, went deep into my cunt. Paul's eyes held mine as both sets of fingers began fucking me. Fucking my wet holes, using me for their pleasure. I held onto the chains, my bucking hips thrust forward. My body simply reacted to them though I was trying to keep from cumming, almost screaming around Paul's fingers, jerking against Scott's as he began to fuck me hard and fast. Both suddenly left me. My body, frustrated, continued to buck and scream. Gradually I noticed that I had an audience, the other couples in the room had been standing watching me, within touching distance.\n\n\"Good girl.\" The woman in black skirt and trousers said to me. I lowered my head. \n\n\"Thank you Miss.\"\n\n\"I must say she is a ready little bitch, isn't she? Is she always this hot?\" Scott laughed. He motioned to Linda who came to him immediately and sucked his fingers clean. Our eyes met as she tasted me on him. The woman was talking to her submissive male beside her as he took his clothes off for her.\n\nSmelling of sex I was allowed to let go of the chains and stood unsteadily. I felt so alive and so much a slut, my thighs slick, my cunt still tingling with need. Scott led us into not another room with me still in a sexual daze. This one had what looked like old fashioned school gym equipment, vaulting horses and bars among other things. I shook my head to concentrate. Nearer to them I could see buckles and cuffs were attached to hold people in position, to hold submissives. I looked at Paul, he looked determined, his cock was hard. I could see his trousers bulging. \n\n\"Yes here. On that.\" Paul's voice was husky.\n\nWe all looked. There was a padded table. Linda checked with Paul and Scott, both nodded. She led me to the table. I couldn't stop looking at her naked body, naked like me. I was docile in her hands as she had me sit on the edge and lay back, the plug pushing deeply into my ass. She had me reposition myself until she was satisfied, my tender buttocks just over the edge. Linda took each hand in turn and fastened them into leather cuffs and ropes, pulled them over my head and securely attached them to something there. She did the same to each foot, taking it in her hand and fastening a cuff, lifting it up to my buttocks which caused my heel to hit the plug and my body to arch with a groan. She took my foot sideways, attaching it to something at the side, my knees near my tits. With both feet secured I was helpless and spread wide, my cunt lips splitting open again. I tried to move but found there was only minimal movement of my legs, looking down my body I could see flesh, hard nipples, open thighs. I felt displayed to the world like this, my cunt seemed to be all there was of me.\n\nScott had been right, it felt good not being able to do anything, just be done to. The feeling of the cuffs around me, pulled tight. I could feel muscles and tendons adjusting too, but the feeling of helplessness was like a drug. It felt more than good. It made me aware of how subby I was, made me know I was owned, under control. There didn't seem any guilt, I couldn't do anything. I was free and relaxed, my body throbbed. I was ready, I wanted to please, that's what I was for.\n\nEveryone had been talking, mainly Paul and Scott though sometimes even Linda. Even though I could hear them I wasn't able to concentrate to listen to them. Suddenly I was aware of Paul standing beside me. I saw his hand come over and touch my tits, his fingers closing around one of my nipples, his eyes capturing mine. He squeezed, rhythmic squeezes getting harder. I felt myself attempt to push my tits up to him, feeling my bonds tight, restraining me. Then he held the pulled flesh of my tit, his fingers tightened. The flesh bugged from his fingers. I realised I was groaning, tried to be quiet but forgot again. \n\n\"Yes. Yes. Anything. Hurt me. Fuck me. Anything you want.\"\n\nWithout releasing me he kissed me. My mouth opened to him, his tongue filling my mouth like his cock, my tongue licked it like it would his cock. His lips hard on mine, kissing me, showing me I was his. He was harsh, more controlled than savage.\n\nHis cock touched my cunt. I jerked within my bondage. It sent tremors through me. It rubbed up and down my open slit, lubricated by my liquids. Only gradually did it dawn on me that it cant have been Paul. My eyes opened wide but everything was obscured by the hard kissing. The cock sliding up the inside of my lips and over my clit was almost more than I could stand. His lips left mine, but only just.\n\n\"Ask Scott to fuck you. Ask him to fuck you hard.\"\n\nI could hardly think, let alone speak. \"Please... fuck... me...\"\n\n\"Louder. Plead.\"\n\n\"Please... please.. I need... it... fucking... please... fuck me... Scott... oh... please... hard... fuck... hard.\"\n\nThe cock slid into me next time it moved up my slit. The ease in which it did was shocking. Another cock in me! Not Paul's. I was ready for it! It took me easily! I couldn't move. i was tied. Paul's mouth was kissing mine. Scott's cock was filling me, rubbing against the plug in me! I orgasmed. I couldn't help it. Everything was out of my control. I was being fucked by a virtual stranger. He was just taking my body. I had asked him to. Pleaded. His cock was big inside her and was picking up speed. I was groaning and grunting into Paul's mouth as I was fucked. I came. I couldn't help it at all. I was being fucked hard. My cunt had a cock in it. I had asked. Oh God. I was moving all I could, wanting more, wanting to be good for him. Up deep in me, in my cunt. The plug felt huge in my ass. My body was being filled, being used, being dominated. I screamed as I came again, screamed into Paul's mouth. I was just a cunt. I was sopping, I could feel myself soaking this cock and my body. Oh God it was so good. My stomach muscles were rippling and my feet felt as though they had cramp. suddenly the rhythm changed. A pause. Hard thrusts. Deep thrusts. I could tell he'd cum inside me. Oh I was so pleased. \n\nHe stayed in me as we both calmed down. His cock slowly softening. Paul pulled back. Scott pulled out. I could feel flesh against my buttock, soft, it was Linda. She must be cleaning Scott I realised.\n\n\"You came.\"\n\n\"Yes Sir. Sorry Sir. I couldn't...\"\n\n\"We'll deal with the punishment later. You came while fucking someone else.\"\n\n\"Yes Sir. I'm... \"\n\n\"You'll do it again. Whenever I tell you.\"\n\n\"Yes. Yes Sir.\"\n\n\"What will you do?\"\n\n\"I'll fuck who you tell me to fuck Sir. I'm your slut Sir.\"\n\n\"You like cock in you don't you, slut?\"\n\n\"Yes Sir. I do Sir.\"\n\n\"If a cock wants to go inside your dirty cunt, what will you do slut?\"\n\n\"I'll open my cunt to it Sir, so it can enjoy me Sir, use me.\" \n\nI jerked again. Lips were on me. A tongue inside me, cleaning me, cleaning Scott's spunk from now. I could hardly move but I couldn't be still. The tongue continues to invade me, the lips sucking me. My clit was so sensitive, so huge.\n\n\"Linda's wanted to do that all evening.\" Scott's voice.\n\n\"Don't worry, she'll let anyone use her now, she's ready, knows fully now. I'm going to fuck her in the arse now and Linda can clean her again. Is that what you want, slut?\"\n\n\"Yes. Yes. Oh yes.\"\n\nI felt Lindas mouth move to my ass and the plug was pulled from me, making me grunt. It made me grunt when Paul impaled my ass too. He pushed in firmly until he was firmly entrenched, my anal ring stretched wide again, much further than the plug. Sweat wet my forehead but Linda licked there too. Her face over mine, licking, like a cat, all over as I was ass fucked. I was so hot and tight and stretched, so amazingly full again, so amazingly helpless again. It didn't hurt as much now as it had done when he first used me there but it was clear to me now that my body didn't belong to me. I could feel it, its responses, what it was made to do, made to accept, cocks lips, fingers. I was a cunt, and now I was an arse. I was whatever he wanted. \n\nHe was so big in me. He was fucking me quicker now, I was unable to focus, his cock was in me, that's all that mattered. I needed his cock. I was pleasuring his cock for him with my arse. Oh God yes. So tight. So huge in me. I could hear the slaps of his body on mine as he fucked me. It felt like he was fucking my cunt too, the vibrations relayed from my ass as he fucked it. My clit felt pushed and pulled though not touched or pressed as much as when he fucked my cunt. He came in my ass and I came too seconds later. \n\nLinda left me and went to Paul to suck his cock, suck him clean. Then me again. Naked we both went to the toilet. There was a clothed woman in there too, wearing black. She grabbed Lindas hair and kissed her hard, then did the same to me as I looked on amazed. I could taste her lipstick.\n\n\"You dirty sluts, you smell of cunt and sex.\" She walked out and I went to go in one of the cubicles.\n\n\"No. We're not allowed to use those. We have these.\" Linda pointed to toilets without any panelling around them. Just standing where everyone could see. \"The cubicles are for dommes.\" \n\nI went and sat on one hoping no one would walk in, but it hardly mattered anymore really I realised. Linda sat next to me and took my hand in hers.\n\n\"Are you alright with everything?\"\n\n\"Yes. Yes.\" I realised I was. I would never have thought of being fucked by anyone other than Paul even a few hours ago, but yes I was ok with it now. Paul had me do it. It was up to him now I realised. He wanted to see me fucked. I presumed it would happen again but I didn't mind if he wanted it. \"Are you?\" Realising, belatedly, it had been her partner who had fucked me.",
        "\"Oh yes. I am happy to watch him. It turns me on. In fact I could do with him now.\" She laughed. \n\nI squeezed her hand, guiltily, and wiped myself really carefully and washed my hands as I looked at myself in the mirror. When we returned the woman with the male sub was talking to Paul and Scott. The sub was naked, his cock sticking out from his belly. It looked smaller than Paul's or Scott's but they interested me more now. I smiled to myself thinking that. I wanted to hold it, feel what it felt like. \n\nLinda and I were told to dress and we stood by the lockers putting on our clothes. When we returned the domme and sub male had gone somewhere else. Paul and Scott took us back to the main room, which was becoming less full as people went into the black rooms more. I was told to sit, with my skirt like Linda's. Paul did not want my new dressed stained. As I sat drinking my wine I kept my head down, I wanted to look around but I felt like everyone could tell what had happened in the other rooms. I could see that Linda would like some more attention even though she didn't make it obvious to the men and soon Scott and her went home.\n\n\"Do you regret joining?\"\n\n\"No, not at all.\" I replied. \n\n\"So you are accepting of what happened in the Black Rooms?\"\n\n\"Yes Sir. Are you?\" \n\n\"Oh yes. I enjoy seeing the real you. You were released by being bound, weren't you?\"\n\n\"Yes Sir. It... it excited me. And being spanked publicly earlier.\" I admitted shyly.\n\n\"Yes,\" he laughed, \"you are enjoying the exhibitionism more as you do more.\" I could feel my face redden though I was sure he couldn't see. \"We'll have to tell Liz and David about our new membership.\"\n\n\"Do we have to?\"\n\n\"Yes. They would find out and be hurt that we hadn't told them. They wont come though, if that's worrying you.\"\n\n\"Why do you think they wont come?\"\n\n\"Because David isn't as submissive as Liz thinks, certainly not as submissive as you. He will realise he couldn't cope here.\" I looked up at him thinking about what he said. \"If he refuses to join, like I think he will, it could cause longer term problems for them.\" \n\n\"Really? I had never thought...\"\n\nIn the following month we returned three times. These were normal evenings and informal. We saw Scott and Linda once and sat with them but Scott did not fuck me. Each time Paul put me in some kind of bondage and tried out the various implements on me. He could tell I was more receptive to submitting when confined. We both liked the flogger, it heated my tits and mound very nicely. I found the whip a little harsh, Paul wondered whether it was because he hadn't the experience but it didn't seem to have the subtlety of some of the other things. The cane and crop hurt but I could get used to them if he built it gradually. Once Paul allowed a man to use a wooden paddle on me, which was quite good and made me horny though it left me bruised. We were also getting to know more people, some simply smiles and nods but others we spoke to. I couldn't help but look at the dominants, wondering if Paul would offer me to them, or even more scarily, put me on The Step. I knew it would happen sooner or later and the uncertainty of when caused me to feel a buzz of arousal.\n\nWork was progressing well. It felt like a completely different world. Sometimes now I found myself really horny thinking of The Club and what we did there or just of being with Paul. That caused problems more as it was supposed to be off limits sexually. However Paul allowed me to phone him and ask permission to finger myself no more than once a week. He would then give me a time and I could go to the toilet and do it, but I had to strip completely and then stand and video myself doing it for him. I felt really submissive doing that and he always made me watch myself afterwards.\n\nOne Thursday, it being the last day of the month I had to go and give an update to one of our sponsors in his office as usual. I was excited about getting home as Paul had told me I would have a surprise. Even though I tended to rush it George had listened attentively as he always did and asked insightful questions.\n\n\"Thank you Hannah, that was very interesting as usual.\" We both stood and I moved towards the door. \"Just one more thing though.\" Smiling I stopped and turned. \"I believe you now have a tattoo.\"\n\nI knew my mouth was open and my eyes wide. I could feel the blood rushing into my cheeks. Beads of sweat appeared under my hair and along the top of my forehead. My bra felt like a loop of iron around my chest. My mind drifted. He was leaning back against his larger wooden desk. His cock was hard in his trousers, it looked like it must hurt. \n\n\"What... what gave you that impression?\" I coughed out through a dry mouth. He looked at me with one eyebrow raised. I couldn't keep eye contact. Finally, I admitted, \"Ah... well... actually... yes. I have.\"\n\n\"I would like you to show it to me.\"\n\n\"My husband... \" I whispered.\n\n\"Yes, I know. He owns you. That's why I asked him.\""
    ],
    "authorname": "emma_sub",
    "tags": [
        "submissive",
        "male dominant",
        "female dominant",
        "spanking",
        "public",
        "shared",
        "lesbian",
        "punishment",
        "displayed",
        "bondage"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/learning-about-myself-pt-03"
}