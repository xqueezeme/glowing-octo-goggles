{
    "title": "The Best Summer Job Ever Ch. 04",
    "pages": [
        "Chapter four picks up with Dan and Ellen's return from their trip. With just a couple of weeks until the summer ends and Jessica returning from vacation soon too it promises to be a hectic time.\n\n***\n\n\"See you tomorrow honey,\" Ellen said with a kiss as she dropped me off at home.\n\nWe had just gotten back from our trip to Mexico. Well not just, we did go to her place for sex first. Sitting next to her on the plane for hours had left me hopelessly horny and she wasn't much better off. Normally we spent hours in bed screwing each other to the point of exhaustion when given the chance, but tomorrow was our last full day until her daughter Jessica returned from visiting her father. It had been Ellen's idea to stop early and get a good night of sleep in anticipation of an amazing day. Jessica would be expecting to spend a lot of time with me when once she got back.\n\nI've been sleeping with both mother and daughter, though it was Ellen a woman almost twice my age that had stolen my heart. I loved her and didn't care if I ever slept with Jessica (or Hannah or Gwen) ever again. All summer Ellen has been telling me things between us can't last and there are only two weeks left to finally change her mind. If someone asked me what she was to me I'd call her my girlfriend in a second, but I didn't really want to know how she might label me. In a weird way, her refusal to acknowledge the validity of our relationship caused us both more pain than me sleeping with all those other women and we both knew it.\n\nSitting on the sofa, drinking a soda and watching TV I was planning to relax for a few hours before bed. I found myself thinking of Ellen and smiled. I could picture her lying on her couch covered in a blanket and watching a movie, wondering why she'd come up with the stupid idea to send me away for the night. The blinking light on our answering machine caught my eye and I was reminded to check the messages. My parents were away on a vacation as well so no one had checked them in almost a week.\n\nI had just started sorting through them when the doorbell rang. Glancing at the clock I saw it was just past eight and had no idea who it might be. Stopping with the messages I went to answer it getting there just as they rang again.\n\n\"Hi Danny! You're a hard man to track down,\" she said hugging me and pushing her way inside.\n\n\"Hannah... what are you doing here?\" I asked shocked to see her.\n\n\"What do you think?\" she said with a smirk. Jessica's blonde haired beauty of a friend was wearing a tiny skirt and a top that stretched tight around her small, firm breasts. I was still trying to gather my thoughts when she cornered me and started kissing me.\n\n\"Stop it,\" I said pushing her away. \"We can't do this. What about Jessica?\"\n\n\"Who do you think told me where you lived?\" she said.\n\n\"That doesn't matter. It still doesn't feel right,\" I said taking a few steps away from her.\n\n\"I can guarantee it will feel right,\" she said smiling sweetly as she stalked me, but I continued to back away. \"I've been here every night since Jessica went away and for once you're home. Since the first day I saw you I wanted to fuck you Danny. I've gotten to share you with Jess but she thought I deserved my own private session so here I am and I'm not going anywhere until I get what I came for.\"\n\n\"I'm sorry Hannah but I just can't do it,\" I pleaded.\n\n\"Bullshit! Look I've been trying to track you down all week. I even went over to the Swanson's but Jessica's mom was away and I could never find you at work,\" she said. \"Every time I came here your car was in the driveway but you were never home. I don't know where you were all week but maybe Jessica can help me figure it all out when she gets back,\" she said with threatening smile that told me she already knew too much.\n\n\"What do you mean 'figure it all out'?\" I asked calling her bluff.\n\n\"Don't make me spell it out for you,\" she said. \"I don't care how many other women you're screwing as long as I get my turn.\"\n\n\"What other women?\" I said nervously.\n\n\"Well you could be fucking say my mom, for example, and I wouldn't mind. But I'm sure there are some girls out there who might get mad over something like that though,\" she said with a shrug.\n\n\"Please don't...\" I felt sick.\n\n\"Are you going to fuck me or not?\" she asked pressing her advantage.\n\n\"Yes,\" I said in a defeated tone. I would have done almost anything to buy her silence.\n\n\"I'm sorry I had to play dirty,\" she said kissing me. \"Don't worry your big secret is safe with me. Just tell me which one you started fucking first and who's better?\" she said with a laugh.\n\nHannah squealed in delight as I threw her over my shoulder. As I carried her upstairs to my bedroom I vowed to give this little vixen the fucking of her young lifetime. I dumped her on my bed and started stripping my clothes off. She watched me while licking her lips but still hadn't begun to strip by the time I was naked. When she tried to sit up and suck my cock I pushed he back down roughly. Grabbing her skirt I hauled it down over her slim hips and she finally got the idea taking of her top. Before she could remove her bra I tore her silk panties off ripping them apart and giving her second thoughts by the look on her face.\n\nLuckily for her, her smooth, hairless pussy was already soaking wet. My cock had grown hard almost instantly when it has become clear I'd be fucking her tonight. Aiming it towards her pink lips I rammed it all the way inside her with a single vicious thrust. Hannah's tight pussy wasn't used to taking a cock my size with no warm up so she cried out in pain beneath me. She tried to hold me with her arms, but I pinned her wrists to the bed above her head. Glaring down at her while still buried inside, my message was clear. She could have the nice hard fucking her blackmail had earned her or she could get out of my house.\n\nOne of her legs had curled around me as if to control my pace. Gripping her by the knee and squeezing tight until the tips of my fingers pressed deep into her skin I flung her leg aside and dared her to try replacing it. She'd gotten the idea now and spread her legs as wide as she could, offering her cunt for the fucking. I rewarded her with another stroke that made her breath catch in her throat. Already I could see beads of sweat forming on her brow. She looked scared and turned on at the same time. I continued to give her one harsh thrust at a time, rattling her slight frame beneath me. Each time I rammed my cock inside her I could feel her arms stiffen in my grip.\n\nAs her cunt began to loosen I started doubling up on the hard strokes. Soon I was giving her four or five rapid fire stokes at a time as she held her breath and exhaled loudly when I paused again. The look of fear had been erased from her face and all I saw was pure lust now. Figuring it was safe to release her hands now I let her go ready to seize her once more if needed. At first she look shocked at her new found freedom, but with surprising strength she pulled my lips to hers for kiss. I wanted to kiss her even less that I'd wanted to sleep with her, but at this point it didn't make sense to fight it. After the kiss she struggled out of her bra and started pinching her sensitive nipples. Fucking her some more I smiled as she foolishly held her breath, knowing I wasn't stopping until she came this time. She let out a loud series of high pitch squeals as she came then slumped to bed with a contented smile on her face thinking it was over when we were just getting warmed up.\n\nHannah had a spectacular little ass on her and as long as she was making me fuck her then I wanted to take her from behind so I could enjoy the fine view. Hauling my cock from her tight cunt she sat up thinking I wanted head. I took her hand, pulled her to knees, and spun her around by the waist. Fitting the tip of my cock back inside her pussy, I started fucking her hard once more causing her to grunt each time I slammed against her ass. The longer I fucked her, the louder she got and I pushed he face down into my pillow to smother her cries. Thanks to numerous orgasms with Ellen earlier in the day that had given me superior staying power I still hadn't cum yet when she collapsed to the bed fleeing my cock.\n\n\"Please not yet,\" she pleaded when I tried to roll her over.\n\n\"If you've had enough then get out,\" I said pointing towards the door. I was still angry that she had figured out I was sleeping with Ellen and used thinly veiled threats of telling Jessica to get her way with me.\n\n\"I'm sorry Danny,\" she said trying to give me a soothing touch but I stopped her.\n\n\"Go away,\" I said bending to pick up my clothes.\n\n\"Wait!\" she shouted and I stopped to give her a chance to speak. \"Jessica and I grew up closer than most real sisters. I'm sorry I threatened to reveal your secret, but I'd never tell her. All she can talk about is this other woman you're obsessed with, if she found out it was her mother it would break her heart.\"\n\n\"I never wanted to hurt her,\" I said sitting down. This time when Hannah sat next me and touched my leg I didn't pull away.\n\n\"How did it happen?\" she asked.\n\n\"You girls were away most of the summer,\" I started with a deep breath. It felt good to let it all out and Hannah was content to listen. I told her almost everything from the beginning. The only part of the story I left out was anything that included Gwen. By the end Hannah had her arm around me to offer whatever comfort she could.\n\n\"Have you told her you love her?\" she asked in a soft voice.\n\n\"No, but she knows,\" I said.\n\n\"Well until you tell her she can keep pretending you don't,\" she said and I knew she was right.\n\n\"I will tell her, but not yet,\" I said. \"I can't risk losing her yet. I'll tell her the last day when I'm on the verge of losing either way, but I still don't know what to do about Jessica.\"\n\n\"I can tell her if you want,\" she offered.\n\n\"No let me and pretend you didn't know. She might end up hating her mother when she finds out. I need you to make sure they reconcile if I'm gone,\" I said.\n\n\"I promise I will,\" she said hugging me. \"Do I still have to leave?\" she asked after several long minutes of silence.\n\n\"I guess not,\" I said and it felt good to see her smile. \"They both know we've been together so there's no harm in doing it right. Sorry about earlier.\"\n\n\"It's ok I deserved it,\" she said. \"And I kinda liked it anyway. Maybe Jessica won't be all that mad when she finds out it was her mom who taught you to fuck like that.\"\n\nI smiled and slipped my fingers between her legs to see if she was still wet. She was but my cock had gone soft. Hannah looked eager to be fucked again but she'd noticed my problem too and bent to rectify it. Falling back on the bed I let her suck my cock enjoying the feel of her tongue and lips. The blowjob continued long after I was hard again as I was hesitant to stop what felt so good. I was going to miss all the girls when I went back to school. Ellen was the only one that would feel like a crushing loss, but they'd all come to mean something to me.\n\nWhen Hannah stopped sucking my cock I was sure she was about to mount me, so I grabbed my cock to hold it still. Instead she lay down next to me and pulled her legs way back holding them with her arms behind her knees. Batting her eyes at me she smiled when I got up ready to fuck her again. Pressing my cock in between her tight lips I started out at a much slower pace this time letting her enjoy it. Her pussy looked so good pressed between her thighs and glistening with moisture. After all the amazing sex with beautiful women this summer I felt like I was about to wake up from a dream at any moment sometimes.\n\nHolding her slim hips I started picking up the pace looking for signs that I'd reached her limits. It didn't take long for her silence to turn into soft moans and to louder grunts from there. Feeling her cunt tighten around me I knew she was close now. Hammering away at top speed I made her squeal and thrash beneath me before pulling out.\n\nWithout letting her recover I knelt above her, keeping her legs pinned against her chest, and swung my cock toward her lips. She sucked it greedily, focusing on the head. Taking it inside her mouth she swirled her tongue all around tasting her own juices. The orgasm has left her short of breath so she kept spitting my cock out to inhale deep breaths, but she always took it back inside. It had gone on long enough now that I was eager to cum. She stopped before I could though and reached down to spread her cunt with her fingers leaving no doubt as to what she wanted.\n\nHannah held my cock as I pushed back inside her. Instead of releasing me she slipped just a few fingers out of the way so my cock had to pass through her hand as we fucked. It added a thrilling sensation to the sex and she smiled at the impressed look on my face. I could tell she was happy to do something new and exciting for me. Kissing anyone besides Ellen never felt right, but I found myself bending down to kiss her on the cheek and she looked positively elated afterwards.\n\nOn the verge of cumming now I pushed her hand out of the way. Pulling her legs apart I threw one to either side of me. I could see her grit her teeth and brace herself for the onslaught she knew was coming as I started to pick up speed. She took everything I threw at her while playing with her breasts again. Bending down I gnawed at one of her nipples as hard as I dared and she held it in place for me.\n\nWhen I was ready to cum I withdrew my cock from her cunt. Jerking my cock with it aimed at her taut stomach I was ready to cover her in cum any second now. Hannah sat up and slapped my hand away sucking my cock inside her mouth. I had cum for Ellen a few times earlier today so it wasn't my biggest load, but each shot felt great as it left my cock and there was enough that it spilled from her mouth to run down her chin. Running her tongue across her lips she rubbed her chin and licked her hand clean.\n\n\"That was amazing Danny,\" she said lying down on the bed and patting the place next to her. \"I'd love to watch you and Jessica's mom in bed. I bet it's fucking wild,\" she laughed.\n\n\"Well no offense, but no other woman comes close to her,\" I said.\n\n\"It's ok I still want to be third on your list if things don't work out with Jessica or her mom,\" she said.\n\n\"There's no list, there's only Ellen,\" I said seriously. \"If I can't make things work with her then I couldn't see myself with someone so close to her.\"\n\n\"I know,\" she said soothingly as she rubbed my chest. \"If there's anything I can do to help you with Jessica's mom I'd be happy to do it. I've known her forever so maybe I can come up with something,\" she offered and I knew she was sincere.\n\n\"Thanks Hannah that means a lot to me, it really does,\" I said.\n\nI was shocked when she gave me a hug and then a kiss on the cheek before getting dressed. She really was a sweet girl and the conniving blackmail from earlier was totally out of character for her. Seeing the changes in her since telling her my story I knew she felt horrible for how she'd gotten me into bed tonight. For me it was a relief to have someone to open up to. Gwen was far too close with Ellen to ever become a true ally and I certainly couldn't tell Jessica what was going on behind her back. As I was sharing it all with Hannah I could see her body language change. It was encouraging to know that she thought there was a chance for Ellen and I after hearing about our summer together.\n\nWhen we had both dressed we went downstairs and sat around talking. Together we tried to think of a way to tell Jessica about my relationship with Ellen. There didn't seem to be any solution to the problem. Each idea we came up with always ended up relying on Jessica to be forgiving and understanding, something that might have worked if the other woman had been anyone but her own mother. I knew that if I was going to have any success in forging a lasting relationship with Ellen, then I needed to tell Jessica in a way that wouldn't cause her to hate me or resent her mother. By the time Hannah left we were no closer to figuring it all out.\n\nThe next morning I headed over to Ellen's anxious to see her. Have spent almost a full week together in Mexico my bed felt empty last night. Punching the security code in at her front gate I went straight to her house and let myself in. I was there extra early so I could catch Ellen still in bed. Rushing straight to the bedroom I was happy to see that she was asleep. Stripping out of my clothes I got into bed with her and began caressing her naked body as I woke her up with my kisses.\n\n\"Mmmm... I missed you so much last night,\" she said rolling over to kiss me back. \"Can you forgive me for the stupid idea to spend the night apart?\"\n\n\"Done,\" I said kissing her over and over again. My cock had grown hard long before I'd gotten to her bedroom but I didn't want sex yet. I wanted to tell her I loved her but I couldn't force the words from my lips.\n\n\"Someone's ready to go,\" she smiled as she touched my cock. \"I need to get my pussy wet first though,\" she added with a hopeful look.\n\n\"I'll see what I can do,\" I said throwing the covers back. She was naked except for the necklace I'd given her on our trip.\n\nEllen's darkly tanned skin and hourglass figure was an awe-inspiring sight no matter how many times I saw it. Beautiful from the start, our countless hours of hard fucking over the summer had toned her body and left her looking even better than before. Gazing down at her face I thought she looked like one of those women you'd see in commercials for skin creams. You could tell she was a little older but at the same time you knew there was no cream in the world that could make a woman look that good. I loved her big brown eyes, her full lips that whispered kiss me every time I looked at them, and her bold nose that I could vaguely remember thinking was too big for a woman. Kissing down past her neck, I stopped at her large breasts with dark nipples that sagged a little but were perfect for sucking.\n\nEllen was tall for a woman, only a couple of inches shorter than my six foot one frame, and her height had blessed her with long shapely legs. As I traveled down her body those long legs spread to give me unobstructed access to her pussy. She kept it waxed completely free of hair and her tan covered her from head to toe in an unbroken shade of sun-baked brown. The pussy nestled between her sexy legs had loose, dark outer lips that hung open a little to show the pink entrance that led deep inside her. I could lie there staring at it for hours on end and never get tired of it. There wasn't a more beautiful sight in the world as far as I was concerned.\n\nMonths ago I'd come to Ellen's bed a competent pussy licker, but as the weeks passed she'd turned me into a master. Prior to meeting Ellen my sexual experiences had been a little awkward and the younger women I'd been with were often shy in bed, afraid to tell me what they liked. That had never a problem with Ellen. She knew exactly what she wanted in bed and had never been timid about telling me. I had no doubt that Jessica and Hannah wouldn't have been nearly as impressed with me if she hadn't taught me so well.\n\nThe first touch of my tongue against her warm, soft lips made Ellen sigh happily. Her fingers quickly joined me to help work her pussy into a lather as I moved to her lower lips to give her space. When she offered me her wet fingers to suck I mimicked some of her favorite blowjob moves on them and she recognized them right away laughing loudly. It took only a few minutes to make her wet enough to fuck, but my licking and sucking went on much longer. I was never worried about missing my turn with Ellen, I knew my chance would come and was more than happy to give her oral sex for as long as she wanted it. Seeing her reactions to my tongue was always thrilling enough for me anyway.",
        "When she pushed my face away from her crotch, I knew it wasn't because she'd had enough. It was time to screw her now. Ellen looked up at me eagerly as I drew the foreskin back from the head of my cock in preparation. Stopping with my cock just outside her lips I let her hold it and run the tip through her outer lips to moisten it in her juices. I made the first stoke inside her a slow deep one and paused at the bottom to kiss her passionately. Clinging to me with her arms and legs, she held me there trading kisses back and forth.\n\nThe moment she released me with he legs I started pumping her with gentle, loving strokes. She kept her arms around my neck and continued to give me one mouthful of tongue after another. My pussy licking had brought her close to orgasm and now the deep penetration of my cock was doing the rest. Each deep shove of my cock inside her made her moan in delight but the slow pace prevented her from cumming. Over our summer of lust I'd learned to control myself when needed and could easily delay my own orgasm when we were screwing so slowly.\n\nAfter ten or fifteen minutes of slow sex that had kept her just short of release, she took her arms from around me and I needed no other sign to tell me what she wanted. One sharp stroke caused her to cry out, but when I stopped at that to tease her she gave me a playful slap on the chest to get me moving again. Holding her by the hips I fucked her as hard as I could forcing her to cum within minutes. I kept hammering her incredible cunt as her body tensed beneath me cumming repeatedly. Ellen pulled me to a stop to recover when it became obvious I could go for a while yet.\n\n\"Oh Daniel,\" she sighed kissing me again. \"I've never had a lover like you before. I couldn't dream of a better man to share my bed.\"\n\n\"I feel the same way Ellie. No other woman can compare to you,\" I said feeling the sadness over our doomed relationship creeping into my heart. \"I can't lose you...\"\n\n\"Shhhh... don't think about that,\" she said fighting back her own tears. \"Everyday I curse myself for starting this...\"\n\n\"I wouldn't trade this summer for anything,\" I said cutting her off for a change.\n\n\"I wouldn't either,\" she said smiling. \"Lie down and let me clear your mind for you hon,\" she said kneeling up and taking my cock in hand.\n\nA blowjob from Ellen was like having your cock wrapped in pure bliss. When she wanted me to cum, like she did now, then there was nothing I could do but enjoy it while I had the chance because it wasn't going to last long. She focused her effort on the head of my cock that was tingling in anticipation of orgasm. Every brush of her lips, every light nibble of her teeth, every flick of her tongue sent a shiver of joy up my spine. She didn't even start stroking me until I'd started cumming using a firm grip to coax every last drop of cum from my balls.\n\nWe had the whole day ahead of us yet. As we lay in bed our bodies pressed together beneath the blankets I told her about last night with Hannah. Ellen was furious, not that I'd slept with another woman, but that she had learned of our relationship and threatened to tell Jessica. I quickly told her how the night had ended and that there was nothing to worry about to sooth her. Seeing her reaction made me realize it was going to be virtually impossible to ever tell Jessica about us. When I had told her the whole story Ellen seemed somewhat relieved, but she still promised to talk with Hannah. From the way she said it I knew Hannah was going to regret using blackmail to force me into bed.\n\nAfter showering we got dressed and went downstairs to have breakfast together. Her housekeeper Gloria was there and I could tell she was surprised to see me. She knew all about us and I thought she approved, but she gave me a cold look and left when Ellen kissed me in front of her. Shrugging it off as a bad day for her, I helped Ellen prepare breakfast. Ellen liked to cook and had never bothered to hire a full time chef. Gloria did cook a lot of her meals but Ellen was much in the kitchen and liked to cook when she wasn't too busy with work or me.\n\nWhen the food was ready we ate outside on the deck that attached to the kitchen. It was going to be a hot, sunny day if the early morning heat was any indication. We sat close together laughing and kissing as we ate taking our time and enjoying the view of Ellen's picturesque property. She had always taken an interest in the garden so it was something besides the sex we had in common. I found myself recalling how much fun it had been reviewing the plans to update part of the property at the beginning of my summer job. After her incredible looks it was the second thing that had drawn me to her.\n\n\"Where are you going?\" she asked when I stood up and kissed her on the cheek when we had finished eating.\n\n\"I've been away all week. There's a lot of work to catch on in the garden today,\" I said managing to keep from smiling.\n\n\"Like fuck you are,\" she said grabbing me by the hand.\n\n\"I need to do it Ellie it's what you hired me to do,\" I said.\n\n\"Well you're fired then,\" she said with a smile. \"Ray will be back next week anyway so consider this your pink slip,\" she added spreading her panty free legs beneath her sundress to show me her sweet pussy.\n\n\"Here?\" I asked looking around.\n\nThe only reply she gave me was to pull her dress up past her waist and lean over the table sticking her ass out. Well if she wasn't worried about being seen, I wasn't going to sweat it either. Crouching behind her I licked her pussy a few times but found it was already wet enough for sex. My cock was ready too so I dropped my shorts to slip it inside her cunt and started fucking her hard and fast right away. I could see her biting her lip to keep from crying out. With her head pillowed on her arms, she lifted her ass to meet each thrust of my cock inside her. Soon her pussy was squeezing my cock each time I penetrated her though I knew she wasn't cumming yet. As she tired, she stopped lifting to meet each thrust so I threw one of her legs up on the table to keep her cunt spread wide for me.\n\nI was sweating from effort and breathing hard but continued to slam into her. She'd stopped worrying about being heard and was screaming loudly each time I gave her a taste of my cock. The volume of her cries told me she was close so I forced myself to give her one last burst of speed and staggered back into a chair sitting down with a sigh. As my breathing returned to normal and Ellen's moans subsided the garden grew eerily quiet. I found myself wondering jut how far away we might have been heard.\n\nThere wasn't time to think about it for long though. Ellen eyed my cock with hunger and held her dress out of the way as she mounted up facing me. Gritting her teeth in effort she rode me hard lifting her body and letting herself drop down again and again. Her ass slapped against my thighs loudly and chair started creaking alarmingly, though I knew Ellen wouldn't care if we destroyed the furniture to have good sex. Cradling her ass in my hands I helped lift her up and she leaned forward to bury my face into her cleavage.\n\nBending her lips down to my neck she sucked on it never breaking the momentum of her fucking. When she stopped to nibble my ear and started pleading to me in whispers to cum for her I knew the end was near. Her dirty talk always drove me absolutely wild and she was fully aware of what it was going to do to me. Closing my eyes I turned my head away from her taunting words. She laughed and rode me harder, massaging my cock by flexing her incredible cunt. With that it became too much to resist and I groaned spilling my load deep inside her as she sat down on my cock and kissed all over my face.\n\n\"So am I still fired?\" I asked smiling at her.\n\n\"Yes,\" she said kissing the confused expression from my face. \"Ray really is coming back next week, he left a message for me while we were gone. You can still work in the garden if you want to but I figured you'd rather spend all your time with me.\"\n\n\"What garden?\" I said kissing her, anxious for more sex again already.\n\n\"You're so sexy and always horny,\" she sighed. \"Take me back to bed where we can really let loose,\" she said. I wondered what more she expected.\n\n\"I left all that mail in your office for you,\" Gloria said as we entered the kitchen again. Even if our appearance hadn't been a dead give away, I was sure she must have heard what we'd been doing. She gave me another cold look that made me turn away.\n\n\"Is there a problem here Gloria?\" Ellen asked when she noticed it too.\n\n\"No Ms. Swanson,\" she said meekly.\n\n\"Good,\" Ellen said to her. \"I don't want to be disturbed so take a message if anyone calls today. I may want to go for a swim later so tell the gardeners to stay away from the pool. Come with me Daniel,\" she said taking my hand.\n\n\"What's with her today?\" I whispered as we walked up the stairs.\n\n\"I'm not sure hon, but I'll sit her down for a long talk if she insists on acting like that towards you,\" she said. \"Don't worry about it. My sex life is none of her concern.\"\n\nBack in her master bedroom we stripped out of our clothes in the front chamber and sat together on the sofa transfixed in studying each other with our eyes. Ellen suggested a movie as we regained our sexual appetite and let me choose from the huge library of DVDs she has stored in rack that slid out of the wall next to the TV at the touch of a button. I chose a love story that I knew would have her cuddling into me the whole time. She gave me a knowing smile and pulled a blanket over up as we settled in to watch. During the movie she gave me a tortuously slow hand job, keeping me ready for action and aching for a taste of her cunt again. When I tried to reach between her legs she wouldn't open them for me, knowing I'd tease her mercilessly too given the chance so I was forced to play with her breasts instead.\n\nWhile we watched the movie she would kiss me whenever the couple kissed. When there was a love scene she stroked my cock quickly during it, but stopped soon as it was over. I could even feel her tense up whenever there was a conflict between the actors on the screen as if their problems made her fret over our own looming crisis. The movie had a happy ending though and I couldn't help but see that as a good omen.\n\nThe moment the credits started to roll she threw our blanket aside. My cock felt raw from the constant stroking she'd given it. She let out a little gasp when she saw its red irritated color. It looked far worse than it was and I assured her I was ok with a soft kiss on the lips that eased her concern. Just to be safe she made me sit still as she covered my cock in moisturizing cream and worked it in with an incredibly gentle touch. When she was done I was even harder than when she started but she kept starring at it and moving it to from side to side trying to determine if I was ready for more sex.\n\n\"I'll be fine,\" I said with a smile. Her concern for me was sweet, but I really was fine other than a little tenderness.\n\n\"Are you sure?\" she asked looking skeptical.\n\n\"Definitely,\" I assured her. \"Two or three weeks and I should be ready for sex again,\" I added, watching for her reaction.\n\n\"Weeks?\" she said as if she were going to be sick. The look of horror on her face was absolutely priceless. I couldn't help but start laughing when she appeared to be on the verge of tears. \"That wasn't very nice,\" she said slapping me on the leg in annoyance. She started to laugh too, though it was full of nervous relief.\n\n\"I couldn't resist. You should have seen your face,\" I said as she glared at me. \n\n\"Why didn't you say something?\" she said still sounding mad with me.\n\n\"I didn't know with the blanket covering us,\" I explained. \"I'm ok, really I am. It looks a lot worse than it is. It's a little tender that's all.\"\n\n\"So we can do it again soon then?\" she asked cutting right to the point.\n\n\"All I need is a kiss to make it better,\" I said smiling as she narrowed her eyes at me.\n\n\"I don't think you deserve it, but if you think it will help,\" she said playing along as she knelt on the sofa and bent over my cock.\n\nIt had all been part of playful sex talk for me, but it did feel good when she started giving me head. Ellen bathed my cock in gentle licks and kisses that were as soothing as they were arousing. Gathering up a mouthful of saliva she spit on my cock and worked the moisture in, reminding of the night she dressed up as a hooker and came to see me at home. She repeated that often making sure to keep my cock nice a wet the whole time. When I commented on it she told me she had somewhere even wetter for me to put my cock and turned around offering me a rearview of her beautiful pussy.\n\nRunning my hands up her long legs I touched her lips and found her literally dripping with juices. I couldn't resist sticking my face between her legs for a taste that sent a shiver through her body. Kissing the cheeks of her ass I made loud smacking sounds. I kept doing it until she was screaming and laughing beneath me having fallen to the sofa breathlessly. Turning on her hip she reached up to pull me close for a kiss but I was already moving in with parted lips. Laughing together as we kissed, she twisted all the way onto her back and spread her legs. With my hands occupied with her breasts I probed blindly with my cock until it found its way inside her.\n\nEllen welcomed me inside her by increasing the passion of her kisses. Holding my ass in her hands she guided me through slow steady strokes inside her though I didn't need her touch to know how she wanted it. Each time I pushed all the way inside her I gave her another kiss on the lips. In no time she anticipated them and gave me a pout that caused me to snicker when I missed one so I gave her two on the next stroke. Slowly the pace quickened and though I knew she wanted me to keep the tempo up by the moans that escaped her lips she kept trying to slow me down. With a squeeze of her legs or a tightening of her arms around my neck she continued to dictate the pace. Her warm body and soft breasts felt wonderful pressed against me but I wanted to speed things up.\n\n\"Take it easy hon,\" she said in a fretting voice with hands holding my arms.\n\n\"C'mon Ellie I want to fuck you hard,\" I pleaded.\n\n\"I don't want you hurting yourself any worse than it is already. I feel so bad,\" she said looking incredibly guilty. It made me feel horrible to see her like that.\n\n\"I'm perfectly ok. I was only saying that stuff to tease you. Please don't feel bad about it there's nothing wrong with me at all,\" I said kissing her.\n\n\"Alright you can have your way with me then,\" she said releasing me from her clutches.\n\nPlacing my hands behind her knees I pushed her legs back to give me leverage and started giving her a thorough fucking. Ellen craved and encouraged what the other women I'd been with couldn't take. Before beginning a sexual relationship with her I'd never found a woman who liked it so hard and could always handle just a little more. Her eyes were closed as she screamed in a high voice from my hard strokes. I placed her hand on her clit and she opened her eyes and gave me a beautiful smile. We both knew she didn't need the added stimulation, but the sight of her playing with herself as we screwed always turned me on. When her fingers were wet she tickled my balls and kept rubbing at them with fresh juices from her cunt. Grabbing her hand I sucked her fingers clean then offered her the next taste. Based on her reaction it was hard to say who liked the taste of her pussy more. Pumping her with a barrage of powerful thrusts until she came, I let her pull me down on top of her for a kiss.\n\nAfter a few moments of rest she started to squirm beneath me so I sat up to let her free. She knelt on the floor between my legs and took my hard cock deep into her throat. It was still liberally coated in her juices and she licked her lips as she enjoyed another taste of herself. The sex with Ellen was unbelievable and I found myself craving it even more the more we did it. She was such a selfless lover that I knew she'd give me head whenever I wanted it, or let me screw her anyway I liked. The best part was the more willing she was to cater to my every desire, the more I wanted to give her what she craved in bed. I managed to get so caught up in thinking about how good a lover she was that she startled me when she tugged at my hand ready to lead me from the sofa to her bed.\n\nEllen's huge canopied bed was the most comfortable bed I'd even slept in. She slithered onto the bed in front of me and arched her back showing off her long legs and slightly parted pussy lips that begged for more cock. Joining her on the bed, I jammed my cock back inside her at full force. Seeing her bracing herself with her arms I fucked her hard as I could. She wasn't close to cumming again yet so I started varying my strokes inside her to make sure my cock rubbed all around the walls of her cunt. When I hit the sweet spot she reached back to grab my wrist and I knew instantly I wasn't to leave that spot until she released me. Her grasp of my wrist tightened almost painfully as she came. \n\nReleasing me she fell to the bed and I let her rest, kissing from her feet up to her lips before lying next to her. She gave me a dreamy smile and held my hand in hers kissing it. I felt an overwhelming sense of pride at having given her such obvious joy. My cock remained rock hard as she regained her composure but just to be sure she took it in her had and stroked it gingerly. Soon after that she turned her body to give me a brief blowjob, sucking the head of my cock gently.\n\nStanding over me she lowered herself onto my cock facing me. She let me sit up and kiss her again before shoving me onto my back so she could ride me in earnest. Ellen rode me as hard as she could over short stints and stopped for more head between each change in position. It seemed as if she could go on fucking me forever some days and I knew she'd keep going as long as I stayed hard. I touched her lightly on the arm when she was about to stop her most recent blowjob so she knew I wanted to cum. Ready for a break she was happy to suck me for a few more minutes until I came for her.\n\n\"We can't fall asleep hon. We need to make the most of the day,\" she said lying next to me on top of her blankets. \"But I think we could both use some rest,\" she laughed.\n\n\"There's lots of time yet,\" I said looking at the clock that read quarter past one.\n\n\"Did you want to take a swim? I'll take that smile as a yes,\" she said. \"What should we do for dinner then? I'll cook whatever you want.\"\n\n\"I want to go out. That was my favorite part of our trip, besides all the sex of course,\" I told her. \"Being able to go out with you made me feel like I was in a normal relationship even if it only lasted a few days.\"\n\n\"I don't know,\" she said looking nervous.\n\n\"Please?\" I said giving her my best sad puppy face. I knew she was powerless to resist when she smiled and kissed me.\n\n\"Ok we'll go out then. If we had more time we could drive somewhere miles away, but we'll find a place,\" she said. I could tell she was looking forward to going out on a date now too. \"That won't leave a whole lot of time after,\" she said. I could see the craving for more sex in her eyes already.\n\n\"Sure it will. I'm not going home tonight unless you throw me out of this bed,\" I said.\n\n\"Kick you out? I'm more tempted to tie you to it,\" she smiled kissing me again.\n\nFor the next hour we lay in bed together. It was impossible for us to resist kissing and caressing each other. Being next to her in bed like that always gave me this incredible relaxed feeling. Over the summer I'd become so comfortable with her that lying around naked between the rounds of sex felt natural, it felt right. That alone was enough for me to know I wanted this to last forever. I couldn't imagine ever finding this feeling with another woman. Ellen grew quiet during that hour and I could tell she was struggling with her own emotions again. Hurting her was the only thing that made me doubt our relationship. Seeing the pain on her face I hugged her close. Though she didn't say anything she knew what it was for and took comfort from my tender embrace.",
        "When it was time to go for our swim she surprised me with a bathrobe I could wear to hide my nakedness on the way down to the pool. I thanked her for it and she admitted buying it weeks ago but had no reason to give it to me until now. She laughed when I promised not to wear it too often then and gave me a look that said she'd hold me to my word. Until she put her own robe on over her naked body I still didn't believe we were going to do it. Holding hands we walked down to the main floor of her mansion and out to the pool deck.\n\nLooking around nervously I feared we'd be seen. Ellen told me to relax and dropped her own robe as she spoke to accent her point. Walking naked around the pool and bending down to dip her foot in the water she managed to look just a little more beautiful. When she noticed that I still hadn't taken my own robe off she frowned at me and told me to stop worrying. I threw the robe off and the smile that brightened her face made me put it back on so I could see that look time and time again. Still testing the water with her foot she made the mistake of turning her back on me. Running up behind I pushed her in and jumped in after her.\n\nEllen squealed in a high-pitched voice as we splashed into water. She tried to look angry with me but failed miserably and kissed me generously when I pulled her close. It took only a few minutes to get used to the water that had warmed in the summer heat. Diving under the water I stared up at her from below and then floated in the water to let her do the same. My cock grew hard and she certainly noticed it giving me a gentle stroke each time she swam by. Floating on my back I kicked in circles around her as she spun in place leaning in to kiss my hard cock that jutted up from the water. Ellen looked amazing with water beading on her tanned skin and could see the desire in my eyes.\n\nFrolicking in the water with her was exciting but tiring. She admitted how much it turned her on to watch me swim naked, so I went through lap after lap showing her the different strokes I knew. When she sat up on the edge and drew me in with a wave of her arm I knew what she wanted. I buried my face between her legs and made her sigh in delight. Running her fingers through my wet hair she held my head but didn't try to guide my movements. Her voice grew loud and shrill as I tongued her sweet lips giving her the pleasure I never tired of providing. There was no doubt that we'd been heard by anyone who was close but I was with her and no one else in the world mattered right now.\n\nPlacing a hand on my chest she pushed me back until she could slip into the water in front of me. She motioned for me to sit where she'd been moments ago. I had her trapped between me and the side of the pool though so it was easy to lift her up onto my cock. Ellen put up a brief halfhearted struggle but as my cock found its way inside her she stopped insisting I get my own round of oral sex on the deck. As we fucked we spun often taking turns at being on the outside where we could dictate the pace. The water splashed all around us and the sex was incredible as always.\n\nScrewing like that was tiring and on top of all the swimming we soon needed a breather. Ellen smiled when she finally got her way and inhaled my cock the second I was seated on the pool deck with my legs dangling in the water. As she sucked me closer and closer to orgasm her right hand vanished down under the edge of the pool and no doubt found her pussy to play with. I was happy to lie there with my eyes closed in the bright sun and let her do all the work to bring us both to the brink.\n\nMy eyes stayed closed until she stopped giving me a blowjob and got out of the pool. I was very close to cumming and knew she was just about there too. At first she seemed prepared to fuck me there on the spot, but she realized tiled pool deck was far too hard to be comfortable. Turning away from me, she walked over to one of her tanning beds that was much better to fuck on. She didn't bother to look back knowing I'd follow on her heels. Kneeling on all fours so I could give her a proper fucking she grunted as I slammed into her moments after she'd positioned herself. I came a short time later but managed to last long enough for her to cum too.\n\nIt felt great to lie in the sun next to her as our skin dried. Ellen always had an ample supply of tanning lotion around the pool deck and was quick to retrieve some for us. What started as organized spreading of the lotion on each other quickly dissolved into two slick bodies writhing together on the narrow sun bed. When we stopped I was confident we were both completely protected from the rays. She didn't need any work on her tan but I could certainly use the sun especially on the places that normally stayed covered. We weren't supposed to fall asleep but Ellen let me doze off and woke me with a kiss when it was time to get ready for our date.\n\nBefore showering Ellen called for a dinner reservation. We had to avoid any of her favorite restaurants so she wasn't guaranteed to get a table when she gave them her name, but she did get us a reservation with her very first call. A friend of hers had mentioned the place to her and she'd wanted to try it for a while though the off chance her friend might be made her a little nervous. We cleaned up without any sex but lots of touching. Ellen kicked me out of the inner chamber with a suit to put on as soon as I was dried. She always liked to surprise me with her outfit and I couldn't wait to see she looked like tonight.\n\n\"Are you ready to go hon?\" she asked as she came into the front chamber where I was flicking channels.\n\n\"You look so beautiful Ellie,\" I said rising from my seat to hug and kiss her. She wore a breezy looking light blue dress that was my favorite color on her and a matching pair of heels. Aside from the necklace I'd given her she wore a simple gold watch and earrings. When she saw me staring at it the necklace she fingered it and gave me her cutest smile.\n\n\"You're going to be hot in that suit jacket,\" she said. \"But bring it just in case they say you need one inside.\"\n\n\"Sure,\" I said slipping it off and flicking it over my shoulder as I offered my arm.\n\n\"You can drive tonight honey. We'll take whatever car you want,\" she said leading me out the door. \"Anything but that big stupid Hummer,\" she said reading my mind when she saw me smiling eagerly.\n\nEllen had a garage full of cars to choose from. From SUVs she and Jessica drove in the winter to a rainbow of luxury sedans and sports cars. There were enough that Ellen could probably pick the car to match her outfit I realized and with that in mind I chose the closest in color to her dress, a metallic blue Mercedes. I pointed to it and she got the keys from a rack on the wall bringing them to me. Opening her door for her I got in on the driver side and grinned as she leaned into me with a hand on my leg.\n\nRevving the engine as we pulled out of the garage I marveled at the power and handling of the car. At the end of her driveway I paused to gaze at her. Tilting her head up with a hand on her chin I kissed her with a kiss that could leave no doubt that it was her and not the car or her fortune I wanted. Sometimes I thought about how much easier things might have been if she was a working class woman and nothing to offer but her body and her company. But working class women didn't hire gardeners so I guess everything happened for a reason. She knew my feelings for her were pure and that's all that mattered. If there came a day when others learned of our relationship then let them think what they wanted. I would have been more than happy to endure a lifetime of whispers over my reasons for being with her if it was spent at her side.\n\nIn Mexico we'd been truly free for a week. When we arrived at the restaurant I could tell things were different right away. Ellen and I walked inside holding hands and drew obvious stares the moment we stepped though the doors. The man who asked our names could barely restrain the look of shock on his face. My beautiful date wasn't about to put up with his questioning stare and asked if there was a problem she should discuss with the manager in her businesswoman's voice. He snapped back to a courteous, jovial host so quickly that I started to hide my smile with my hand before deciding to let it show.\n\nOur waiter was better mannered or had been told what to expect, but either way he made us feel welcomed. Looking around the room I spotted three couples where the man had to be twice the age of the woman with him and couldn't help but find the double standard unfair. The man who greeted us as we entered wouldn't have dared to gawk at these men as they entered. A touch of Ellen's hand brought me out of foul mood.\n\n\"Let it go hon,\" she said reading my thoughts again. She was getting better at that the longer we were together.\n\n\"You don't deserve to be looked at like that Ellie,\" I said.\n\n\"If only that was the worst we'd have to suffer to be together,\" she said with a tear in her eye.\n\n\"Don't worry about any of that tonight,\" I said kissing her hand. \"We should enjoy dinner and if you need to think about anything else, then think about later tonight.\"\n\nThat made her smile and the rest of our night out was perfect. We shared a wonderful meal taking about our trip to Mexico. When the topic turned to her daughter we planned how to spend as much time together as possible when she got back. Ellen brought up a visit to see Gwen before I left for school and I agreed with the idea. I didn't mind going to see Gwen with her but it was the day together it would allow us that made me happy. At the end of dinner Ellen gave me a disgusted look when I tried to pay and we shared a laugh over it.\n\nInstead of going straight back to her home afterwards I drove around with her all over me. She nibbled my ear and sucked at my neck as we drove through the city. We'd both lived here all our lives but being restricted to her bedroom most of the time it was our first chance to share some of our favorite places with each other. The small chance of someone we knew seeing us was more than worth it in my mind. When we both started talking at the same time about an old-fashioned ice cream parlor as we passed it I looked at her and pulled into the lot. She waited in the car while I ran inside and bought us a nice big sundae to share since she passed on dessert after dinner. Ellen held it and fed some to me as I drove, making sure to get as much on my lips as in my mouth. Whenever we stopped at a red light she turned me towards her for a kiss and licked my face clean with a smile.\n\nBy the time we got back to her home I was mad with desire for her. The car was going to be awkward to screw in but I was willing to try. My lips were all over hers and she kissed me back passionately. With one hand I slid the strap of her dress off her shoulder and pulled one breast out of her bra. She moaned lustily as I sucked on it hard as I could. Her hands found my belt and she unfastened it with deft fingers, bringing my hard cock out in one smooth motion. The steering wheel was in the way, preventing me from pulling her onto my cock but Ellen was a step ahead of me and tilted her seat back as far as it would go spreading her legs as she went.\n\nKnowing what Ellen was like on our dates I would have been more surprised if she had been wearing panties when I saw her glistening cunt. She might have had a pair on at the start of the night but would have taken them off while I was getting us ice cream either way. I was trying to figure out a way to lick her pussy without bending my cock on the seat or console between us when Ellen tugged at my shirt collar urging me to get on top of her. The seat back was slightly angled so she hooked her legs around my waist as soon as my cock was inside her and pulled herself up to meet each thrust. Together we made sure she got nice deep penetration on every single stroke.\n\nOur lips remained pressed together in a sloppy kiss and parted only when we needed to draw ragged breaths. Her one breast still hung out in the open allowing me to grope it pinching the nipple as we screwed. There was so little room in the car that I found myself regretting my choice. If I'd taken one of the SUVs we could be stretched out comfortably in the back seat. As Ellen tired she started meeting every second stroke and then every third. She was so horny and wanted my cock so bad she was literally shaking in frustration. I hammered her hard with a series of deep trusts that made her grunt but I was getting tired from the position I was forced to hold myself in too.\n\nFinally I opened the door and stumbled out with my pants tangled around my ankles. She thought I wanted to take her to bed and made for the doorway that led inside from the garage. Before she could take a second step I caught her hand and spun her around to the front of the car. In the time it took me to kick my shoes and pants off she had doubled over the hood of the car and hiked the dress up over her hips. Now that we were free of restraint I started out fucking her at top speed. Hearing her bounce off the car with loud bangs I stopped right away and kissed her neck ready to take her to bed where we could screw in comfort.\n\nEllen shoved my face away from her neck in annoyance and ordered me to fuck her like a man. Marveling at her resolve, I shook my head and went back to pummeling her pussy but kept my weight from crashing down on her. Holding her hips and pulling her back on each thrust I had her sliding back and forth on the car instead of bouncing on it. Hearing her moans change to a whimper I ran my right hand under her body to caress her abdomen, which was clenched tight signaling that she was close. One last burst of speed coupled with a squeeze of her clit made her scream in ecstasy her voice echoing in the cavernous garage.\n\nI stumbled back a step when she stood up suddenly. Turning around she sat on the car and pulled me towards her by the cock. There was a look of determination on her face and I knew she was going to make me cum too now. Tucking her hair behind her ear she fed my cock into her mouth and raised her eyes to look at my face. I smiled and she stopped a moment to smile back before kissing me on the abdomen and engulfing my cock again. The blowjob she gave me was extra wet and the sight of her saliva dripping from her chin to the garage floor made me harder still. She became engrossed with her cock sucking mumbling around my cock as she pleasured me. Several minutes went by before I could feel the tingle of an oncoming orgasm. Ellen batted my hands aside when I tried to control her pace and finished me off. Standing as she slipped her breast back inside her dress, she kissed me before starting towards to door again with the end of my tie in her hand.\n\n\"Wait let me put my pants on,\" I said.\n\n\"Hurry up and get them then,\" she said as she came to a stop. \"Don't bother to put them on there's no one here to see you besides me.\"\n\n\"But you straightened your dress,\" I argued.\n\n\"Relax honey,\" she said crossing her arms and pulling the dress over her head. She tossed it to me then took of her bra and sent it sailing though the air to bounce off my chest. \"Is that better?\" she asked wearing nothing but her heels.\n\n\"Much better,\" I said pushing her up against the door with arms full of our clothing kissing her.\n\n\"Take me to bed,\" she said when our lips finally parted.\n\nIn her bedroom she kicked her heels off and crawled under the covers. I dropped our clothes and took off my shirt and tie. Joining her in bed we curled up together hugging and kissing. For hours I held her kissing her over and over. Ellen reached between my legs to check my cock often and whenever it grew hard she guided it inside her. Sometimes she urged me to fuck her hard but for the most part we made love gently or lay there kissing with my cock resting inside her. If it was to be our last full night together then we certainly made sure not a moment was wasted.\n\nEllen kissed me goodnight when we were done and rolled over so her back was to me. The bed was big enough to stretch out comfortably in but I pressed myself close to her back wrapping an arm around her as we spooned. I kept kissing her neck and shoulders, the touch of my lips growing softer as she sighed tiredly and drifted off into a peaceful sleep. It felt so good to hold her as she slept and I knew this was where I belonged. I would have quit school tomorrow if it meant staying with Ellen, but she insisted I finish. In two years time she was going to need a new excuse to push me away.\n\nThe next morning I woke up alone in her bed. I knew she wouldn't have left to pick up Jessica without waking me first. When I checked the clock I saw it was just after nine giving us hours until Jessica would be home. After relieving myself I went looking for Ellen. I didn't have to go far, she was in the adjoining room watching the morning news and drinking a cup of coffee. She was wearing her robe but I still took a moment to admire her beauty before saying anything.\n\n\"You always look beautiful in the morning,\" I said from the doorway unconcerned over my nakedness.\n\n\"Good morning Daniel, I didn't want to wake you up,\" she said with a warm smile. \"Come have some breakfast hon,\" she said glancing at the tray on the table.\n\n\"I'd rather have some Ellie,\" I said taking the cup of coffee from her hands and setting in on the table. Kissing her I pulled her legs towards me ready to spread them and taste her pussy.\n\n\"Stop it,\" she giggled. \"Eat something first there's lots of time yet.\"\n\nNormally I had to force myself to eat slowly when sharing a meal with Ellen, but she'd already eaten and I was eager to take her back to bed. She laughed as she drank her coffee watching me inhale my breakfast like I would at home. After a nights sleep I was so horny that I could barely wait to screw her again. The fact that she was naked under her robe and kept flashing me her pussy didn't help any, though she was checking out my stiff cock just as much as I studied her. I thanked her for the breakfast with a kiss and happily jumped up to follow her when she ran off to her bed.\n\nEllen lay down on her side and smoothed the sheets next to her, inviting me to join her. Soon as I got on the bed with her I tried to give her a real kiss but she stopped me after a brief peck on the lips and went straight for my cock. She sucked my cock into her mouth and swung her leg across my body so her pussy filled my view. I started licking her leg, running up one leg to the very edge of her outer lips before hoping to the other side. Repeating this over and over as she treated me to wonderful blowjob I could feel her body tense in anticipation each time only to be let down again. I was surprised Ellen kept sucking away on my cock despite my teasing. Normally she would have stopped and waited for me to give her what she wanted before I'd get any more head but other than a little writhing of her hips it was as if nothing was amiss. I decided to see just how eager she was and ran my tongue through her lips at last smiling as she quivered and moaned. Using my tongue sparingly, each long lick that started near her clit drove my lover wild. It wasn't until the first fleeting caress of her clit that she'd finally had enough of my little game.\n\nPalming my balls in her hand she gave me a little squeeze that got my attention. Crossing one of her feet over my neck she flexed her leg, pushing her lower shin into my throat and cut off my airflow. Keeping the pressure across my neck firm she twisted my nuts to the brink of pain then gave them a little extra pressure. She never stopped sucking my cock while putting me in my place. When she lifted her leg to let me breathe she released my balls at the same time. After sucking in a few deep breaths I hugged her around the waist and pulled her needy pussy to my face.",
        "For the first time Ellen stopped sucking my cock as she let out a throaty laugh. I ate her pussy eager to please her and fearing a second taste of her discipline. Her laugh change to long, drawn out moan as she pushed her snatch onto my probing tongue. After being teased for so long her body responded to every touch of my lips or tongue against her cunt. Ellen started to sit up and I was sure she was going to ride my cock, but she spun around instead and sat down on my face with her thighs gripping me tightly. With my face literally smothered under her wet pussy I ate her and sucked in a breath wherever I could. She held my hair almost painfully as she rode my head, grinding her hips and panting in response to my every move. When she came at last she toppled forward to hold onto the headboard and slid her body back so her weight rested on my chest.\n\nThankful for the moment to rest I closed my eyes but the feel of her warm, wet pussy against my chest soon made want more. I opened my eyes and saw her smiling face above her swaying breasts that she lowered to my eager lips. Squeezing her tits in my hands I sucked back and forth my tongue raking across her nipples repeatedly. Sliding lower she kissed the top of my head, then lower again until her face was above mine. Kissing me, she pressed her entire body into me in a tight hug. I kissed her back and pushed down on her thighs urging her to bring her pussy down on my cock but she resisted. Only when she was ready and we had shared a series of passionate kisses did she lower herself to my cock, holding steady as I slipped it inside her.\n\nI let her ride me for a few moments with slow steady strokes. Wrapping my arms around her and crushing her body to mine, I rolled her over while kissing her smiling face. Clutching me she ran her hands up and down my back gently as we screwed slowly. She knew she didn't need to tell me how she wanted it, just a simple look told me all I needed to know. I hadn't cum yet this morning but I was more than happy to screw her at a deliberate pace and prolong it for now. There was nothing better than making love to Ellen and I wanted to wake up to this everyday. All over her face I could see that she wanted this to last too though each kiss we shared seemed tinged with sadness.\n\nWhen my climax was near I drove my cock into her forcefully, my lips on hers muffling her grunt. She gave no sign of wanting me to slow down, so kneeling up I began slamming her with one hard stroke after another. With space between our bodies now Ellen ran her hands down her body, pausing to play with her breasts before letting one hand drift all the way down to her clit. Our eyes met and I knew she was close to her own release. With one final surge inside her I came dumping my load and kissed her as her own orgasm shuddered through her body. We shared countless breathless kisses as we came down from our sexual high.\n\n\"That was amazing honey but I want a lot more before Jessica comes home,\" Ellen said when I let her roll on top of me. \"A lot more,\" she repeated in case I hadn't heard her.\n\n\"Anything you want,\" I said kissing her on the forehead.\n\n\"I want you to really give it to me this time,\" she said already looking eager \"No screwing around just hammer me with that cock,\" she added stroking me for emphasis.\n\n\"If that's what you want,\" I said kissing her again.\n\n\"I want it now,\" she said grinning at me.\n\n\"You know what to do then,\" I said and she was already sliding down my body to suck my cock back to life before I could flash my smile back at her.\n\nWe fucked the day away. I lost track of how many time I came inside her or spilled a meager load on her abdomen. Within minutes of my orgasm she'd be sucking my cock urging me to get hard for her again. Towards the end when it took much longer for me to regain my erection she let me go down on her something I'd do all day if she wanted. With my now finely honed pussy eating skills I treated my lover to one leg quivering orgasm after another as either my tongue or cock was constantly between her legs to give her pleasure.\n\nWhen it was time for Ellen to get ready for her trip to the airport I watched her stagger from the bed on weak legs with my hands behind my head and a satisfied but tired smile on my face. I could hear her showering in the bathroom with the door left open but as tempting as it was to join us I knew she in a hurry so I stayed in bed. Looking around the room I'd become so comfortable in, I felt this bed was where I belonged and wanted nothing more that to sleep there night after night with my beautiful Ellie at my side. As she came back into the bedroom wrapped in a towel I was still sprawled naked across her bed and she gazed at me full of hunger. I smiled knowing she wanted me again but didn't have enough time.\n\n\"Jessica will want to see you soon as she gets back,\" Ellen said looking me as she straightened her skirt. \"You should have gotten ready and came with me to the airport.\"\n\n\"I was planning to stay right here,\" I said stretching out on her bed.\n\n\"You know you can't,\" she said with obvious regret.\n\n\"I know Ellie,\" I said her smile warming my heart. \"I'm going to get dressed and go home.\"\n\n\"What about Jessica?\" she asked.\n\n\"I don't think there's any point in leading her on. I'll be gone in two weeks anyway. Hopefully a week apart will have given her a chance to move on,\" I said.\n\n\"You can't do that to her,\" she said sounding angry that I'd hurt her daughter.\n\n\"I don't want to fight about this. There was never going to more than casual sex between her and I. There's nothing you can do to change that,\" I said sitting up.\n\n\"Don't make it any harder on her than you have to,\" she said sitting down and giving me an understanding kiss. \"I need to go hon, maybe we can get together over the weekend.\"\n\nMy parents were returning tomorrow afternoon so there was going to be one less place for us to be alone. I didn't let that worry me as I showered. Ellen had accepted my stance concerning her daughter with surprising ease. Perhaps our full week together made her realize there was no hope of a relationship between Jessica and I. Ellen was the only woman I wanted to be with and these last two weeks of the summer were my last chance to prove to her that this could be so much more than the torrid summer fling it had become.\n\nInstead of staying home that night and waiting for trouble to find me I went out with a few friends from high school. I'd been spending so much time with Ellen this summer that I'd barely seen them and we'd all be heading back to our separate colleges in a couple of weeks. We ended up shooting some pool for a few hours then back to a friend's house where we hung out long into the night. I was the only one who wasn't part of a couple and the girls who were with us thought that meant I should be set up with one of their friends. I politely declined their offers to arrange a blind date for me because another woman in my life was the last thing I needed. On the way home I found myself thinking about how happy everyone looked tonight and wondered if that could ever be Ellen and I. When I got home there was a message on our machine but ignored it and went straight to bed.\n\nThe next morning I woke up to the phone ringing and was sure I had to be Jessica calling. I didn't answer it or any of the other calls that day. Showered and dressed I left the house to go get breakfast. My parents wouldn't be back until the afternoon but I didn't plan on going home without them. After eating I ran a few errands and went by a few car lots to see if I'd find anything they fit my budget and taste. I was at the airport early and waiting for my parents to get in, greeting my mom with a hug the moment I saw her. After getting their luggage we headed home in the family car. I told my father how I'd been looking at cars and had found a couple I wanted him to take a look at. He'd been a mechanic all his life and ran his own body shop now. If anything he would have been disappointed if I didn't ask for his help.\n\n\"Who's Jessica?\" my mom asked with a sly smile when she checked the messages soon after we got home.\n\n\"Just this girl I know,\" I said.\n\n\"She sounds awful anxious to see you for just a girl,\" she said grinning wider.\n\n\"Mom please,\" I sighed.\n\n\"What?\" she said.\n\n\"There's nothing between us,\" I said and left it at that.\n\n\"Well tell her that not me,\" she said going upstairs to unpack.\n\nIt was a miserable weekend. I didn't hear from Ellen like I had hoped and was afraid to go see her at home where I was sure to see Jessica. The plan for Monday morning was for me to meet Ray and work in the garden. For the rest of the summer I was going to work with him so Ellen and I would at least see each other every day regardless of what else happened. After working all summer to help maintain Ellen's masterpiece of a garden I was honestly looking forward to meeting the man who had put it all together. No doubt I'd learn a lot over the next couple of weeks.\n\nOn Sunday afternoon Jessica called again. I let my mother answer the phone and made her lie saying I'd just gone out. She sat me down afterwards and told me it was wrong to let this girl think I was interested if I wasn't and made me promise to confront her soon. In a weird way it gave me the confidence I needed to face her tomorrow. No matter what Jessica or her mother wanted, I had decided to devote these last precious weeks doing everything I could to show Ellen I loved her and her alone. There was no doubt Jessica would seek me out at work tomorrow. I just needed to end it as gently as I could.\n\nMonday morning I got to work early and wasn't surprised that Ray was already there. It was nice the finally me him and together we took a tour of the property as I showed him what we'd done in his absence. He was very impressed with how the garden had been maintained, but did point out a few little things I had overlooked. When I took him up around the landscaping we did around Ellen's fountain and gazebo he was full of praise. His compliments on my work in the garden meant more to me than anyone but Ellen's own kind words. I wanted to sit down with him and pick his brain all day but shortly after we got back to the work shed we were interrupted.\n\n\"Ray I need to talk to Danny,\" said Jessica from the doorway. I couldn't read her face but Ray knew right away he was being dismissed.\n\n\"We'll go over the rest later Dan,\" Ray said excusing himself.\n\n\"Jessica I...\" I started to explain myself as she closed the door.\n\n\"Shut up and listen to me,\" she said in a fierce voice. \"I've been away for a week and you won't even return my calls?\"\n\n\"I'm...\" I wanted to explain.\n\n\"I said shut up,\" she said strutting towards me. \"Now kiss me,\" she said pressing her lips to mine. \"That's much better, now fuck me.\"\n\n\"Stop,\" I said firmly taking her hands away from my zipper.\n\n\"It's her isn't it? Your secret woman finally decides she gives a shit about you and I don't matter anymore,\" she said looking crushed.\n\n\"I'm sorry Jessica, really I am,\" I said tilting her chin up so she was forced to look into my eyes. \"I'm in love with her and nothing can change that.\"\n\n\"I don't even know her name but I hate her,\" she said with a laughing sob.\n\n\"We can still be friends,\" I said hopefully.\n\n\"I need a friend right now,\" she said with a forced smile as I hugged her.\n\nWith that the horrible confrontation I'd feared all weekend was over. She made it so easy on me that I felt worse than ever over what I'd put her through. How could I ever reveal my secret lover was her own mother when she was so understanding? I knew it would absolutely crush her if she ever found out. But the worst part was knowing I gladly break her heart if it meant I could stay with Ellen.\n\nAfter she left I spent the rest of the day soaking up every ounce of gardening advice I could from Ray. Time sped by in a blur as he showed me things about the property I'd never noticed before. I actually felt sad when the day ended, but it was time to go see Ellen so the feeling didn't last long. Standing back out of earshot while he gave her his honest appraisal of my work these past few months. It was amusing to know he could tell her I'd made a complete mess of the garden and she wouldn't have cared at all. When Ray left Ellen looked my way and I knew she wanted me to join her.\n\n\"Ray says you did a fine job Dan,\" she said as I sat down opposite her.\n\n\"Dan?\" I said looking around and wondering who could hear us.\n\n\"It's your name isn't it?\" she said.\n\n\"What's wrong?\" I asked but I already knew.\n\n\"Nothing,\" she said giving me a blank stare.\n\n\"I've been looking forward to seeing you all weekend,\" I said touching her hand. \"I want you so bad Ellie.\"\n\n\"Is that so? From what Jessica tells me you've lost your interest in sex,\" she said.\n\n\"I've lost my interest in her. She means nothing to me, it's you that I'm crazy about,\" I said trying to make her understand.\n\n\"That my daughter you're talking about! I love her more than you'll ever know,\" she said full or anger.\n\n\"Ellie I didn't...\" I was trying to apologize but she wouldn't let me.\n\n\"I think you should go. Ray will be expecting your help in the garden for the next two weeks,\" she said hastily before getting up and storming off. I was too stunned to say anything as I watched her go.\n\nThe rest of the week was terrible. I saw both Ellen and Jessica everyday but Ellen wouldn't say a word to me and her daughter was still a little too friendly. Ellen never let me catch her alone so I didn't get an opportunity to tell her how sorry I was. She loved sex like no woman I'd ever known and I knew she had to missing me despite her cold reaction towards me. At least when I was working in the garden with Ray I could put it out of my mind and focus on what I was doing.\n\nIt was my nights at home that became pure torture. There was nothing I could do to get Ellen out of my mind. Our last precious days together were wasting away at an alarming rate. I couldn't even get a chance to talk to her. We hadn't slept together since last Friday and I was masturbating several unsatisfying times a night. One night I woke up in a sweat thinking I'd left for college again already, but my bleak reality was almost as bad. When it was all added up the pressure on me was nearly unbearable.\n\nFriday afternoon things finally took a good turn. I went to take my lunch break and found a note in my bag. With trembling fingers I opened and read it impossibly quick. Breathing deeply I read it a second time as my heart slowed down. She hadn't signed the note but I recognized her handwriting. Ellen had asked me to meet her in her pool house tonight. I didn't know if it meant we were going to have sex again but I doubted she would be able to resist me once we were alone. For the rest of the day Ray kept making jokes about how he'd never seen a guy so happy that the weekend was here.\n\nI stayed around after quitting time waiting for my chance to talk to Ellen. She spoke to Ray for a few minutes and gave him his paycheck. Her reaction towards me was still cold but I was prepared to do whatever it took to warm her up. When Ray and the others had left I made sure we were alone and stalked up behind her.\n\n\"I need to go home and clean up but I'll meet you in the pool house in a few hours,\" I whispered into her ears.\n\n\"The pool house?\" she said playing dumb.\n\n\"Yes the pool house,\" I said kissing her neck.\n\n\"That feels so good. I've missed you so much Daniel,\" she said leaning back into me.\n\n\"I'm so sorry Ellie,\" I said.\n\n\"I am too,\" she said turning around with a huge smile on her face. \"We've got a weeks worth of sex to make up for tonight.\" Jessica must have already been gone out for the night because she gave me a toe-curling kiss. I was ready to take her right then and there but she pushed me away with a giggle.\n\nMy mind was filled with such joy that I couldn't think straight on the way home. Somehow I made it from the Swanson's to my house but I didn't remember getting there. I left thinking of the passionate night of love making Ellen and I would share and the next thing I knew I was on my own doorstep. Letting myself in I washed up for dinner and waited impatiently for my mother to call me to the table. I ate incredibly fast, even for me, and my mother took notice asking why I was in such a rush. I told her I was going out with friends and didn't want to be late before excusing myself from the table.\n\nI showered and shaved, jerking off in the shower so I'd last long enough our first time tonight. As horny as I was it didn't take me long to cum with Ellen's luscious body running through my mind. Afterwards I didn't worry too much about what clothes to wear, knowing they wouldn't be staying on long once I got to the pool house. I left the house telling my parents I'd be out late and didn't need a ride, then walked a few blocks to a gas station where I called a cab to take me to Ellen.\n\nAt the front gate I keyed in my access code and let myself in heading straight for the pool house. I wasn't worried about being seen because I knew Jessica had to be out for Ellen to invite me to meet her here. I was hoping to get there first so I could surprise Ellen when she arrived but there were candles lit all around the front room and I could hear soft music coming from the master bedroom. The pool house served as a guesthouse for visitors who wanted some extra privacy, but for the most part it was used as a place to change for a swim. I wasted no time stripping naked and headed straight for the bedroom ready to give Ellen the fucking of a lifetime after our week of abstinence.\n\n\"Danny I'm so happy you came! I didn't think my note would work,\" said a beaming, naked Jessica from the bed.\n\n\"Jessica?\" I said completely dumfounded. \"What are you doing here?\"\n\n\"What am I doing here?\" she said laughing. \"I think my note was clear enough.\"\n\n\"You left the note?\" I said in an absolute panic now.\n\n\"Of course I left the note who else would have?\" she said giving me a puzzled look.\n\n\"But the hand writing looked just like your mother's,\" I said before I could stop myself.\n\n\"Why wouldn't it she's the one who taught me how to write,\" she as I watched her face twist in fury when what I had just inadvertently revealed sunk in. \"How could you? How? My own mother is the other woman you've been seeing!\"\n\n\"Jessica please let me...\" I wanted to explain but she cut me off. I had no idea what I could have said to make it better anyway.\n\n\"Get out of my sight! Go! Get the fuck out of here! I don't want to see you ever again,\" she said burying her face in her hands as she started to sob.\n\n\"Give me a chance to...\" I started again.\n\n\"I said get out and take my slut of a mother with you if you want! I can't believe she tried to comfort me when I told her you wanted someone else. I bet you've been banging her all summer!\" she shrieked.\n\nJessica was inconsolable. The only thing I could do was leave and let her calm down. At this point I didn't care if she hated me forever, all that mattered is that she gave her mother a chance to explain. I'd already hurt Jessica badly, but I was sickened to think of what it might do to Ellen. I had to stop her before she arrived and the situation exploded beyond control.\n\n\"Oh Daniel I've missed you so much,\" Ellen said surprising me with a kiss the moment I left the bedroom. She was naked too and had that cock crazed look in her eye I would have loved to see under any other circumstance.\n\n\"Stop...\" I mumbled, but her lips smothered the rest of my words.\n\n\"Shut up and fuck me honey,\" she said loud enough that I knew Jessica must have heard her.\n\n\"Hi mom,\" Jessica said in disgust as Ellen pushed me against the doorframe and spun into the bedroom.\n\n\"Jessica?\" Ellen said in absolute horror.\n\n\"Thanks for all your help in dealing with Danny,\" she said in a voice dripping with sarcasm.",
        "\"Sweetie please let me explain,\" she said leaving me forgotten at the doorway.\n\n\"Save your breath you two-faced bitch! I can't believe you almost had me convinced the divorce was all daddy's fault. I'm going to go live with him so you can fuck Danny all you want now. You deserve each other,\" she said stomping towards the door.\n\n\"Sit down and listen to me,\" Ellen said catching her by the arm.\n\nThey stared at each other, Ellen's eyes full of sorrow and her daughter's brimming with hatred. I'd never felt worse in my entire life. I knew I'd never be able to forgive myself if I'd somehow destroyed their relationship because I was too horny to be careful and too cowardly to be honest from the start. But worst of all I found myself aroused more than ever before stood between naked mother and daughter. The shame I felt over my excitement as I watched their relationship teeter on the brink of destruction was overwhelming. Both women stopped their stare down to turn their gazes on me. I wanted to crawl under a rock and never come out, but Ellen's face broke into a wide grin.\n\n\"You look like you're about to have a heart attack hon,\" she said with a little laugh.\n\n\"I'm so sorry Ellie,\" I said in a shaky voice. I couldn't understand her sudden smile. \"Please Jessica don't blame your mother for any of this,\" I said turning towards her.\n\n\"You're so cute when you're scared,\" Ellen said as she kissed me. Out of the corner of my eye I could see Jessica smiling at us.\n\n\"What's going on here?\" I asked realizing I was the only one in the dark.\n\n\"Come to bed and I'll tell you everything,\" Ellen said leading my by the hand as Jessica followed.\n\nEllen's story started just after her divorce and they both took turns filling in the details. After she and her husband had separated Ellen felt the need to get even closer with her only child. She knew they shared an incredible sex drive and that's how they grew closer as she recovered from her failed marriage. Over time their relationship became more like that of two friends with Jessica sharing all the juicy details of her sex life as Ellen lived vicariously through her daughter. During Jessica's last year of high school their bond strengthened but Ellen was left alone and miserable when her daughter went to Europe. Shortly afterwards, she hired me and her daughter's e-mails filled with stories of her sexual escapades made Ellen hornier than ever. It didn't take long for me, the man she was seeing on a daily basis, to become the object of her fantasies and desires. Soon she was replying to her daughter's messages with steamy stories of her own torrid sex life.\n\nJessica never blamed her mother for the divorce and had always encouraged her to start dating again. Despite that, Ellen was afraid she wouldn't accept her mother dating a man so much younger and never revealed her lover's identity to Jessica letting her assume is was an older man. She told me we needed to keep things a secret from her daughter because she really did fear her reaction. The day Jessica met me Ellen learned her fears were unfounded. Jessica guessed I was her mother's secret lover the moment she laid eyes on me and Ellen couldn't deny it when Jessica asked. Ellen didn't know how to tell me the truth so she asked Jessica play along and she agreed in exchange for sex with the man her mother called an incomparable lover.\n\nTogether they decided things would be a lot better if Jessica and I became a couple and I continued to fuck them both. Neither of them had counted on my devotion to Ellen despite my willingness to cheat on her. Ellen admitted she would have been devastated if they hadn't done everything they could to get me in bed with Jessica. My refusal to have anything to do with Jessica since her return gave them the idea to starve me out with a lack of sex but they underestimated my resolve. Last night Jessica came to her mother with an idea and Ellen was horny enough to agree to anything. She was terrified that revealing her secret after so long would somehow ruin our relationship. Ellen really had written the note and seemed remarkably happy that I recognized the writing as hers. After staging the disastrous situation tonight they hoped I'd be too relieved to be angry for anything else that had happened.\n\n\"I hope you can forgive me Daniel,\" Ellen said holding my hand nervously.\n\n\"For the secrets you're forgiven,\" I said. \"But you'll have to make up for the week of lost sex,\" I added kissing her.\n\n\"I should leave you two alone,\" Jessica said with a smile. \"But I want my turn tomorrow.\"\n\n\"No,\" I said.\n\n\"What do you mean no?\" Ellen asked.\n\n\"No she can't wait until tomorrow because she's staying tonight,\" I said flinging her to the bed next to her mother.\n\n\"I don't mind staying,\" she said looking at her mother with a nervous smile.\n\n\"Fine with me, just stick that cock inside me,\" Ellen said spreading her legs with a wanton gaze up at me.\n\nIf not for the week without sex I don't think there was anyway Ellen would have agreed to allow her daughter join us. It was as if the lack of sex had clouded her judgment and I was willing to take full advantage in my own horny state. Glancing towards Jessica as I moved into place I could see she was doing her best to look anywhere but between her mother's legs where my cock was ready to slip inside. Jamming my cock inside with a sharp thrust Ellen tensed beneath me and let out a gasp. It had only been a week but already the feel of her warm pussy around my cock felt so much better than I remembered it. Jessica bit her lip nervously as she watched her mother's face react to me inside her. Sex with Ellen was always amazing but the weeklong break and the presence of her daughter made it that much better.\n\nEllen never stopped staring straight up at me as I gave her a series of hard strokes. Pressing my body down on top of her I gave her a kiss she returned zealously while trying to crush me in her arms. Our lips parted and I slammed her arms to the bed above her head. She spread her legs wide give me free access to her sopping wet cunt as I started fucking her with a weeks worth of pent up sexual energy behind each movement of my hips. I could hear Jessica gasp at the ferocity of our lovemaking, but I kept banging her mother without a glance in her direction. Ellen had been driven wild by our sexual hiatus and was ready to cum quickly tonight as a result. I knew she was moments from cumming as I hammered away at her pussy and when I caught a glimpse of Jessica fingering her own pussy out of the corner of my eye I managed to fuck her harder still.\n\nReleasing her arms when I knew she was on the brink I grabbed her bouncing tits squeezing them tight. Pulling one towards my mouth I nibbled her nipple gently as I felt her pussy gush around my plunging cock. Somehow over Ellen's moans and screams and my own hammering heart I could Jessica's heavy breathing as she fingered herself in a frenzy. Ellen clutched me tight with her arms and legs as her orgasm ripped though her body, sagging to the bed when her cunt stopped contracting. The beautiful smile she gave me made my heart flutter as I lowered my mouth to hers for a long tongue filled kiss. Turning to look at Jessica she smiled then blushed and stopped fingering herself as her mother turned her head too.\n\n\"Wow mom,\" Jessica said with a little giggle.\n\n\"Mmmm... wow is right. I want few hours of fucking just like that,\" Ellen said laughing along with her.\n\n\"You've trained out little pet so good,\" Jessica said rubbing my back as they both laughed to tease me. Them sharing a joke at my expense cut some of the tension from the air. She let me take her by the wrist but I felt her arm tremble uncontrollably when I placed her hand on her mother's breast.\n\n\"No stop that,\" Ellen said looking down in shock but I held both women tight. \"Daniel let her go this is getting too weird.\"\n\n\"I'm fucking you while your naked daughter watches and fingers herself Ellie. I think we went beyond weird about twenty minutes ago,\" I said.\n\n\"No she's right Danny we can't do this,\" said Jessica trying to pull her hand away.\n\n\"Please,\" I said in my best whiny voice.\n\n\"What do you think sweetie?\" Ellen asked her daughter as she looked up at her.\n\n\"I think my mother has a great set of tits,\" she said squeezing the breast in her hand as we all burst out laughing.\n\n\"Kiss her,\" I said looking at Jessica and leaning to the side as the laughter subsided. \"No I mean kiss her right,\" I said when she have Ellen a little peck on the cheek.\n\n\"Mom?\" she said seeking permission to go any further.\n\n\"I think he deserves to get his wish after what we put him through sweetie,\" Ellen said. \"But just tonight and we can never tell anyone,\" she said staring at us in turn until we nodded in agreement. Jessica gave us one last nervous look before lower her lips to her mother's where she gave her a quick kiss on the lips before pulling back.\n\n\"No, no, no. I want to see a real kiss like this,\" I said forcing my tongue into Ellen's mouth as I gave her a deep kiss.\n\n\"Not a chance,\" said Ellen shaking her head.\n\n\"This is getting way too fucked up,\" Jessica said agreeing with her mother.\n\n\"Not even after all that happened tonight? I thought I'd lost you both forever,\" I said in a low voice. I ready had thought I'd ruined everything earlier so it wasn't much of a stretch. Both women stared at me as if trying to decide if I was lying to get them to try something they didn't want to do or if my emotions were genuine. In truth it was a little of both.\n\n\"We can try it once more,\" Jessica offered to see what her mother would say.\n\n\"Come her then sweetie,\" Ellen said waiting for her to lean close.\n\nJessica's face hovered above her mother's. My heart was pounding in anticipation as I watched them. Both women had a look of nervous hesitation on their faces. I knew this had to be hard and was resigned to stop pressuring them if nothing came of it this time. It has been a fantasy of mine since I first saw Jessica tanning in the nude to have both women at once. Now that we were so close I wanted a threesome where nothing was off limits, not sex with one as the other watched. Finally Jessica dipped her neck and gave her mother a kiss full on the lips that make my cock swell to the point of busting. They stopped but their faces stayed close as they turned to look at me in unison and laughed. I can only imagine the expression I must have had on my face.\n\n\"I think he liked it,\" Ellen said an arm around Jessica's back now and lay next to her.\n\n\"I've never seen anything so hot in all my life,\" I said trembling with desire.\n\n\"I liked it too,\" Jessica said with a smile.\n\nWhat happened next left me stunned. Ellen took her daughter's head firmly in her hands and pulled lips down again. They kissed like lovers. I watched them share one long kiss after another with smiles that got wider and wider in between. Jessica climbed on top of her mother as they kissed their hands caressing each other. The sight was such an incredible turn on that I couldn't help myself and started masturbating as I watched. It was as if they'd forgotten I was there the way they made out. When they finally stopped Ellen gazed up at me with a sultry look and gave Jessica a series of brief kisses.\n\n\"Look out Jessica,\" I said pushing her to the side. At first she looked like she wanted to stay where she was but she could read the desperation on my face. She slid off to the side but stayed close with her own smaller breasts pressed against her mother.\n\n\"Fuck her Danny,\" Jessica said wide eyed as she stared at my cock.\n\n\"Oh god give it to me honey I want it so bad,\" Ellen moaned as she started to finger herself.\n\nThis time as I pushed my cock inside my lover her daughter watched the penetration intently. I'd seen the same look on her face when we were with Hannah and I knew she was resisting the urge to put her tongue right in the middle of things. Hammering Ellen's cunt I felt her tense under me and stopped a moment to kiss her neck and nibble her ear. She gave me a throaty moan in return and gave me a little push on the shoulders that told me to get back to fucking her. The show the girls had put on for me had almost been enough to make me cum on its own. Now that I was fucking the most incredible woman I'd ever been with I knew there was no way to make it last as long as she deserved. When I stopped again Ellen knew what I was doing urged me to go ahead and cum for her.\n\nJessica was turned on her side and had the sole of her foot resting on the knee of her other leg. She fingered herself unabashedly now as she watched me fuck her mother. Before she tried not to look too closely but now she couldn't get enough trying to see everything at once. Her hand became a blur as I gave Ellen one burst of speed bringing me to the brink of orgasm. Seconds later I came kissing Ellen as I spilled my cum inside her. I could hear Jessica grunt as she fingered herself to her own orgasm and turned to smile at her.\n\nEllen kept kissing at my neck and shoulders as I lifted her breast to my lips and sucked her nipple. I pulled Jessica closer and offered her a taste but she was hesitant. Holding Jessica's hand I brought her fingers, still covered in her juices, to Ellen's lips and was elated to see her suck them immediately. When her mother stopped to lick her lips and smile at her, Jessica relaxed her inhibitions further and latched onto Ellen's breast. With Jessica eagerly sucking one nipple I moved to the other side to take the second one in my mouth. Ellen sighed blissfully and hugged us both. After a few minutes she lifted my face to hers for a kiss, then brought Jessica up for one too. Finally she pushed our faces together and watched us kiss before it dissolved in a tangle of tongues and lips.\n\n\"You girls are incredible. I never forget this for as long as I live,\" I said when I rolled off Ellen at last.\n\n\"I better get a turn yet,\" Jessica said. \"And I want a taste of your cum too.\"\n\n\"I know where you can get some now,\" I said looking at Ellen's cum filled cunt with a smile.\n\n\"Mom?\" she said wondering what her mother thought of the idea.\n\n\"I must be the worse mother in the world because I can't think of a reason not to,\" Ellen said on the verge of tears.\n\n\"Don't say that,\" Jessica said sobbing and hugging her mother close. \"As weird as all this is it doesn't change anything. I'll always love you and I wouldn't trade you for anything. Besides how many girls are lucky enough to have a mother willing to share her man with them?\"\n\n\"Oh sweetie I love you too,\" Ellen said hugging her back.\n\n\"None of this will ever leave this room Ellie. I'm sorry for all the pressure to keep going further. I don't want either of you to do anything you really don't want to do,\" I said kissing Ellen from behind.\n\n\"I know you don't Daniel,\" Ellen said rolling on her back and giving me an adoring smile. \"We've come too far to stop now so let's just enjoy it and see where it goes,\" she said as we both nodded in agreement.\n\nMy cock was starting to show signs of life again and Jessica had noticed it. Leaning across her mother she started sucking my cock in preparation for her turn. Reaching over I began fingering her pussy will Ellen watching me closely. I could see that she wanted to join in but there were still lines she didn't want to cross. She didn't hesitate to rub Jessica's thigh while I worked to make her pussy wet. When I took one of Jessica's breasts in my hand Ellen touched her stomach with a trembling hand but wouldn't go any further. Jessica sensed the tension too and stop sucking my cock long enough to give her mother an assuring smile so she knew it was ok to continue.\n\nEllen looked mesmerized as she started to fondle her daughter's breasts. I couldn't begin to imagine the emotions that must have been flooding her mind. Taking her other hand in mine I gave it a squeeze to let her know everything was going to be fine. What we were doing wasn't right but there was no one here to judge her. I wanted her to know she was with two people who loved her and that it was ok to do whatever she wanted. Ellen leaned close to kiss me and stayed there as we watched her daughter suck my cock. As crazy as it sounds Ellen had the look of a proud parent as she watched Jessica pleasure me.\n\nWhen Jessica stopped for a breather she invited her mother to join her. Ellen hopped to the other side of me and I slid to the middle of the bed. With the women on either side of me now I rubbed the smooth sexy legs that surround me. Both were bent over, exposing their beautiful pussies to my admiring eye, vying for space on my cock. They giggled as they handed it back and forth taking turns sucking my now erect cock. Jessica watch in awe as her mother took almost my full length down her throat and held it there for a few seconds before letting it slide out. She seized it immediately and tried to force it down her own throat but couldn't come close. Coughing and sputtering she spit it out and they shared another laugh followed by a spontaneous kiss that my eyes didn't miss.\n\nHaving cum just a short time ago we all knew I could last a while. They seemed content playing with my cock for now so I put a hand on each pussy to reward them. At first I ran my fingers around their outer lips making sure both women were good and wet before trying to go inside. When I did slip my fingers inside they stopped to look back at the same time with wide smiles just for me. They took turns with my cock in their mouths and I began fingering whichever of them was sucking me. After trading off several times Ellen caught on to my little game and tried to keep my cock for herself. Jessica let her but looked at me wondering why my hand had gone still between her legs. When she realized what was happening she snatched my cock away from her mother causing Ellen to laugh. As the girls became more and more aroused the fight over my cock became a little testy and I questioned the wisdom of starting the contest. If they got any more violent with their attempts to control my cock then it was going to start hurt. To save myself I gave in and fingered each woman as hard as I could regardless of which mouth was pleasuring me.\n\nEllen stopped and took my hand pulling me to a sitting position. I was sure she wanted me to screw her again but she gave me a deep kiss and looked towards her daughter. When I touched Jessica on the shoulder to get her to stop she saw Ellen's arms around my neck and assume we were going to fuck again too. She smiled happily at us when I placed my hand on her back to keep her on her hands and knees then rose to kneel behind her with a little push from Ellen. For some reason I found myself looking at Ellen for the slightest sign that she didn't want me to go any further. She gave me one of her adoring smiles and a kiss as she knelt right next to me peering down at my cock, which was poised to enter her daughter.\n\nWaiting for what seemed like an eternity with my cock resting on top of Jessica's ass, I was finally rewarded when Ellen took it by the base and fitted into her daughter's pussy. I had planned to tease her but the moment Jessica felt my cock enter her slid back taking me deep inside. Ellen's lips were trembling as she kissed me all over and watched us screw. Her hand slipped down between her legs to rub her pussy as she observed. With Jessica on the other end of my cock I was much more careful with the speed and depth of my thrusts but sloppy at the same time, letting my cock fall out of her repeatedly for Ellen to put me back inside. As the tempo increased, Jessica was moaning beneath me and Ellen was focused on the action. When she felt her daughter could take a little more she urged me on with a sharp slap on the ass that made me stab deep inside Jessica.\n\nI could feel Jessica pussy tighten as her orgasm approached and tried to place Ellen's hand on her clit. When she refused with a shake of her head I didn't try to force the issue. Giving her an understanding kiss I indicated with thumb and forefinger that Jessica was close. Ellen smiled eagerly and encouraged me to fuck her harder. Jessica's head shot up from the bed with a deep breath when I started to pound into her. When she tried to slow me with her hands Ellen fought them off for me so I could focus on pummeling her cunt. A few moments later I felt her pussy clench my cock in orgasm and saw her squeezing Ellen's hands in a crushing grip.",
        "The girls lay down next to each other, Ellen hugging her daughter's shaking body as she recovered. I was ready to join them but before I could move Ellen turned to look up at me and I knew from her eager smile that watching Jessica cum had give her an appetite more cock. Bringing her legs in under her she knelt next to Jessica with her head still on the bed exposing her moist pussy to me. The rear view of her legs, ass, and pussy always left my heart racing. I couldn't resist bending down for a taste first and knew Ellen wouldn't mind even before she responded with a dreamy sigh. The remnants of my cum still clung to her lips but I scarcely noticed is as I dipped my tongue inside her. Ellen bent lower pushing her hips back towards me and spreading her pussy wide for my mouth. \n\nWhen I had licked her for a few minutes I got to my knees behind her aiming my cock for her ripe, wet cunt. I started slowly, but after a few strokes Ellen began slamming her ass back into me and I responded in turn. Jessica who had been resting with her eyes closed looked up when the slapping sound of our fucking filled the room. Smiling up at me she reached under her mother and squeezed her breasts as I pounded her pussy. I had slowed down watching this, but Ellen snapped me out of my little trace by urging me to go harder. Refocusing on my lover, I gripped her hips tight and fucked her with everything I had. Jessica sat up alongside her mother and reached under to rub my balls. She let her fingers slide down my shaft and soon they were moving off onto Ellen's lips. Ellen was far too aroused to say anything and I was afraid to make a sound, fearing it would make her stop.\n\nPulling my cock from Ellen's lips, I left her shaking for more. Jessica's hand stayed on her mother's cunt as she leaned closer with her mouth open inviting me to stick my cock inside. After a few swirls of her tongue around the head she pushed it out of her mouth and licked up and down the shaft cleaning her mother's juices from it. Lifting her by the waist I set her down on her knees and fed my cock into her hot cunt. Ellen had rolled onto her side to watch us and appeared much more at ease now. Playing with her pussy, she smiled at me each time I gave her daughter a burst of speed that made her yelp. When she sucked the juices from her fingers I licked my lips making her giggle before offering me a taste. Afterwards she kissed me and put her hands on Jessica's hips pulling her towards me on each stroke.\n\nWith Jessica turning to give her an encouraging look Ellen's hands began to explore her daughter's supple body further. I kept on fucking Jessica but the pace slowed to a comfortable level as we both followed Ellen's every move with our eyes. Her fingers brushed lightly up and down Jessica's slender body tracing her spine. Ellen's hands tremble uncontrollably as she wrestled with her emotions, trying to find a reason to stop when I knew every sexual instinct was telling her to keep going. I paused our fucking with my cock deep inside Jessica to pull Ellen back to me and kissed her shoulders sliding up to her neck. She leaned back into me with a grateful sigh as if I could support her emotion baggage as easily as I bore her weight.\n\nFor several minutes I held her in my arms until she straightened suddenly and knocked me onto my back. Those few moments of contemplation had given Ellen a chance to decide what she wanted. I was amazed when she sucked my cock deep into her throat slurping on her daughter's sweet juices. Jessica tried to join her, but received a glare that warned her to stay right where she was. The blowjob lasted a minute or two at the most, then Ellen tugged me back to my knees and pushed me cock first towards her daughter's waiting pussy. This time she guided me all the way in and let her fingers touch Jessica's lips. Seeing the astonished look on my face she stroked her daughter's pussy rapidly as we all shared an experience like no other.\n\nWhen she bent over next to Jessica and exposed her superior pussy I don't think I had ever wanted her more. With their hips touching they moved in synch as I pulled out of Jessica and into her mother. I was fighting the urge to cum again as I drove my cock into Ellen. She screamed at me to fuck her and I did, giving it to her hard as I could. Both women were riding sexual highs as well and after a few moments Ellen stiffened in orgasm beneath me. Switching my cock back to Jessica I picked up right where I had left off with Ellen, giving Jessica much more than she was used to. The cords of her neck strained as she gasped wordlessly with her eyes shut under my thumping strokes. Ellen pinched her daughter's nipples and wiggled her ass to let me know she wanted some more as soon as Jessica was done. Jessica roared into her pillow when she came with her cunt tightening around my cock and the juices flowing liberally.\n\nJessica's chin quivered as she whimpered and her mother kissed her gently on the cheek before pushing her hair back from face. I was already entering Ellen from behind as she shared in her daughter's intense orgasm. Ellen was close to cumming again as I started fucking her once more. Slowing down considerably, I allowed her the chance to comfort her daughter while we screwed. When Jessica had calmed down and looked ready to fall to sleep Ellen slammed her body backwards to meet my cock and we were fucking like rabbits again. Having watched her daughter's powerful orgasm, I knew Ellen wanted her own now. I felt her the first signs of her orgasm almost immediately but she screamed at me to fuck her harder and harder, willing herself to stay upright for as long as she could. When she collapsed at last I lay on top of her kissing her neck.\n\nExpecting a long break now, we were both surprised when Jessica tried to rise for her next turn. I hadn't cum just yet and was ready to go right away, but watched Jessica fall back to bed helplessly on legs that were still too weak to hold her. Ellen gave her such a heartbreaking look that I immediately knew what to do. Getting off of Ellen, I helped Jessica turn over to her back and positioned myself between her legs. I gave her a gentle kiss on the forehead and then a sensuous one on the lips when it became obvious that was what she wanted. Glancing nervously towards Ellen I knew right away she couldn't have been happier with how I was treating Jessica. Neither of the women was ready for more hard sex and I found myself switching from one to the other frequently with them cuddled up next to each other.\n\nWhen I was ready to cum Ellen knew it was time and pushed me away from her pussy. She motioned for me to bring my cock to her lips and with Jessica leaning across her mother they sucked me to orgasm. Together they finished me off in moments letting my cock explode all over them. Spraying my load it landed mostly on Ellen's face and tits, but Jessica was ready to lick up her share. Lying down to relax I watched them clean my cum from their bodies and kiss back and forth as they laughed. Ellen looked so happy, so beautiful, so perfect that I had to kiss her and turning her head to face me I pushed my tongue into her mouth.\n\n\"Someone is still excited,\" Ellen said with her widest smile when out lips parted.\n\n\"This whole summer with you has been amazing Ellie, but tonight was beyond incredible,\" I said kissing her again.\n\n\"It's only early yet hon,\" she said. \"Let's move to my bedroom for the rest of the night.\"\n\n\"You two have fun,\" Jessica said with a kiss for her mother that seemed more natural every time I saw it. She seemed to sense that we would want to be alone, but Ellen gave her a look that said she was wrong.\n\n\"There's plenty of room for three sweetie,\" Ellen said returning the kiss.\n\n\"Do you mind Danny?\" Jessica asked batting her big brown eyes at me.\n\n\"Of course he doesn't,\" Ellen said laughing at my barely restrained smile as they got up and headed to the door.\n\n\"What's he doing?\" Jessica said to her mother looking back at me as I dressed.\n\n\"He's so cute when he gets shy like that,\" Ellen said snickering. \"You don't need to get dressed honey there's no one here to see you. Leave your clothes and come with us.\"\n\nThe girls stepped apart and latched onto an arm each as they guided me inside. I couldn't help but think in that moment I had to be the luckiest man in the world for a night. Walking the familiar path to Ellen's bedroom it dawned on me that there was nothing to keep me from going to see her every morning during our last week. The night of uninhibited sex with the women meant there was nothing to hide anymore and no reason for us to be apart. In Ellen's bedroom we climbed into bed together and I kissed Ellen telling her I'd be here with her everyday until it was time to leave.\n\nNeeding more time for my cock to recover yet I had both women lie down and treated them to oral sex. They played with each other's breasts without a second thought now as I moved from one tasty pussy to the other. I didn't want them to cum again yet so I switched constantly and teased them when I sensed they might be close. Letting myself linger between Ellen's much longer than before I ignored Jessica's tap on my shoulder seeking her turn. When I looked up with a smiled she knew what I wanted and bit her lower lip before kissing her mother. Allowing her kisses to lead her lower and lower I could feel Ellen's body tense nervously. Kissing her legs softly and rubbing her abdomen in an assuring gesture I felt her relax slightly.\n\nWhen Jessica was face to face with me at last she laid her head on her the thigh of her mother's spread leg to watch me work. I kissed Jessica with lips coated in her mother's juices and went back for more time and time again. Shrugging at Jessica as if I didn't know what to do I licked wherever she pointed and let her guide my head with her hands. Soon she was holding Ellen's lips open for me focused intently on every move of my tongue. A few times I stopped and backed away offering her a turn but she just shook her head nervously though the reaction was slower each time.\n\nI leaned over to kiss her again and let her know I wasn't disappointed. It was important to me that both women knew I didn't want them to feel pressured, but at the same time I had to keep putting ideas in their heads or nothing would happen. After licking Ellen again I pursed my lips towards Jessica and waited for her to collect her kiss. Her mouth was inches from her mother's pussy and I could have simply pushed her in but the temptation was surprisingly easy to resist. I desperately wanted it to happen but wouldn't dream of forcing the woman I loved or her daughter beyond their limits. With a quick lick of Ellen's pussy and another across Jessica's mouth I alternated from one to the other. I could almost see the barriers breaking down as Jessica stared at her mother's inviting lips, barely noticing my kisses now. Ellen had lifted her head from the bed and was staring at her daughter's tormented face. My own heart was thumping inside my chest so loudly I was surprised they couldn't hear it. Their eyes met and an understanding passed between them as Jessica leaned in to lick her mother's pussy.\n\nThis should have been the phenomenal ending to the night I had been looking forward to, but it wasn't. I saw tears trickling from Ellen's eyes and tapped Jessica on the shoulder, stopping her immediately. Moving up to lie next to Ellen, I kissed away her tears and gathered her into my arms. She sobbed into my shoulder and gripped me tightly around the neck. I kept whispering in her ear that everything was going to be ok and we didn't have to do this anymore. It had all become too much for Ellen to deal with emotionally. The time had come to stop and let her heal.\n\n\"I think you should leave Jessica. This has been a hard night on your mother,\" I said glancing down towards her.\n\n\"I'm so sorry mom,\" she said starting to tear up herself. \"I never wanted to hurt you and I'll always love you no matter what happened here tonight.\" Jessica rubbed her mother's leg with a soothing touch as she spoke.\n\n\"No you're both wrong,\" said Ellen with a fresh burst of tears. \"I don't want this to stop, I never want it to stop. My own daughter and all I can think about is this going on and on. What kind of mother am I?\"\n\n\"You're the best,\" Jessica said sliding up on the other side to hug her mother. \"You raised me in a house full of love and now that I'm a grown woman you've become my best friend.\"\n\n\"Oh sweetie that means so much to me,\" Ellen said visibly relived. \"And you Daniel, there's no other man I could imagine doing this with.\" Her smile warmed my heart and I loved her even more for saying that about me.\n\n\"So can I do it again?\" Jessica said smiling as we laughed at her.\n\n\"Not yet sweetie,\" Ellen said. \"It's my turn to do you.\"\n\nJessica spread her legs with an eager smile and shared a kiss with her mother. When she started to lick her way down her daughter's body, I positioned myself behind her kissing her lower back and ass. The moment she arrived at Jessica's snatch, I buried my tongue into Ellen's pussy much to her delight. Within moments both women were moaning loudly and I was listening closely as Jessica complimented her mother's pussy eating talents. It was such a huge turn on I took my cock in hand to jerk off as I ate Ellen from behind. Jessica noticed what I was doing and told Ellen who ordered me to fuck her instead. I smiled as she glared at me until I was safely inside before turning back the pussy in front of her face. Ellen hated to see me masturbating and seemed to take it as a personal insult to her sexual talents. It was just one more thing to love about this remarkable woman.\n\nI screwed her gently from behind, leaning over often to kiss her neck often. Watching her eating Jessica's pussy was so exhilarating that any faster would have made me cum in no time. My deliberate pace also let Ellen focus on what she was doing and Jessica rewarded her efforts with moans that grew louder by the second. She was soon spreading her lips and fingering deep inside as her mother licked her cunt. When she appeared ready to cum Ellen looked at me and I knew what she wanted. Rolling on her side to give me room her held her daughter's lips open for me to stick my cock inside. Ellen's kiss on the abdomen told me I'd chosen the correct speed, hard and fast. Together we sent Jessica over the edge with my cock deep inside and Ellen's tongue dancing around her clit.\n\nEven with Jessica's contracting pussy still wrapped around my cock, Ellen's was rolling onto her back for her turn. I stayed inside Jessica holding her in my arms and let Ellen wait for me. She was beyond horny herself thanks to the taboo sex we were involved in and started fingering dripping cunt wildly, knowing it would coerce me into fucking her. Disentangling myself from Jessica's arms and legs I move over between Ellen's legs drinking in the sight of her here comes cock smile. Driving my cock all the way inside her she accepted my first kiss then pushed me away. It told me she wanted it rough, something I already knew.\n\nIn my excited state, I needed every bit of knowledge of her sexual appetites that I'd gained over the summer to make sure she came before me. Pinching her nipples just the way she liked it, I pressed my cock against her g-spot and watched her eyes close with a smirk. The length of my cock rattled in and out of her cunt with each thrust. Sawing it back and forth over favorite place I felt the walls inside her tighten around me. Jessica had stirred from her daze to kiss her mother before dropping lower to capture a nipple in her mouth. I let the hand that had been playing with that nipple slide down to Ellen's clit and felt her cum seconds after I started to squeeze it. The sweet spasms of her cunt around me was more that I could take and I pumped my cum inside her with a hoarse grunt.\n\nWith no more room on top of Ellen, thanks to her daughter's still active tongue, I rolled to the side and collapsed there. Ellen turned to face me and we shared a kiss. She could feel her daughter lean across her body and kiss me deeper as Jessica took my shrinking cock into her mouth. It was still tingling from my orgasm while she sucked it clean. After a minute or two I felt her mouth leave me but Ellen's sudden gasp told me where she had gone without having to look. Moments later she crawled onto of her mother and our kiss became a three way. I had no doubt in my mind that it had most incredible sexual experience in experience in each of our lives. Reflecting on it as I lay there, I felt an overwhelming sense of gratitude that I let flow into each of my kisses. The girls looked tired and I think we were all worn out from the emotional roller coaster and sexual escapades.\n\n\"You girls are incredible. Thank you so much for letting me share this night with you,\" I said when the kisses had finally stopped.\n\n\"We couldn't have done it without you hon,\" Ellen said showing me there was at least one more kiss to be had tonight. \"Where are you going?\" she asked looking hurt as I pushed back and rose from the bed.\n\n\"Just to get a drink Ellie,\" I said grinning at her relived smile. \"Should I bring you two anything?\"\n\nWith their requests in my mind I headed to the kitchen to get us some refreshments. I hadn't realized how thirsty I was until I downed a soda and then another stood naked in front of their refrigerator. Doubling the drink orders, I filled a tray with extra water and some fruit too before heading back to Ellen's bedroom. Inside I found the girls already asleep in each other's arms. I had never seen anything so beautiful in all my life. I sat down sipping from a bottle of water watching them for what seemed like an hour or more. They looked so peaceful I didn't want to disturb them so I set the tray on a night table where they would find it if they woke and slipped carefully into bed with them.\n\nI didn't work in the garden again for the rest of the summer. Ellen told Ray I had left for school early and I worried about running into him constantly. I didn't want to disappoint him but he meant nothing to me compared to Ellen so I was more than willing to live the lie. Jessica, Ellen and I became almost inseparable during that final week. Every morning I went straight to Ellen's bedroom where I'd find them right where I had left them the night before. I was sure they were starting without me some mornings but never said anything.\n\nOur threesomes were our little secret and even their best friends, Gwen and Hannah, never knew. The other women knew I was leaving soon though. I wanted to blow them off so I could spend the time with the two girls who really mattered to me. We planned the week out to maximize our time together so while Ellen spent the afternoon in an important business meeting, Jessica and I went horseback riding and fucking with Hannah. On Wednesday night, when Jessica was at a movie with Hannah, Ellen took me over to Gwen's to say goodbye.\n\nTime was moving much too fast. I couldn't imagine what it would have been like if I was still trying to hide my relationship with Ellen from Jessica. I was leaving early Saturday morning in my new car. My parents were driving out with me, bringing a truckload of my things and helping me get moved back into my dorm. On Friday night we were going out to dinner together so Friday afternoon was my last day with the Swansons.\n\nFriday morning I arrived and felt sick over what was going to happen. Gloria greeted me the front door with a scowl that had become her customary greeting and I ignored it like I always did. I never knew what I done to her but didn't let it bother me on this important day. Heading straight for Ellen's bedroom I was filled with anxiety. Today I had to tell Ellen exactly how I felt. I had to tell her I loved her. Leaving her was going to be hard, but I needed to know I could come back to her when the school year was over.",
        "\"Good morning honey,\" she said smiling from her bed. Her hair and makeup were done and she wore a sexy black lingerie set with nylons, lacey panties and a matching camisole. There was a bottle of champagne on ice and two glasses next to the bed. Jessica was nowhere in sight.\n\n\"You look amazing Ellie,\" I said feeling shabby in my work clothes.\n\n\"Thank you honey,\" she said with a blushing grin. \"You look good enough to eat yourself,\" she said with naughty lick of her lips.\n\n\"Jessica isn't here?\" I said glancing around. I was surprised, but not disappointed at all.\n\n\"She asked me if I wanted the day alone with you and I said yes. You're not mad are you?\" she said fretting. \"She went over to Hannah's after you left last night but I can call her right away if you want.\"\n\n\"Shhhh...\" I said moving towards the bed. \"It's just what I wanted. A whole day with my favorite girl.\"\n\n\"Champagne?\" she asked sitting up with a relieved smile.\n\n\"Maybe later,\" I said taking her into my arms. \"You're beyond beautiful Ellie. I'll never be able to thank you enough for everything you've done for me,\" I said kissing her as we fell to the bed.\n\nEllen had that fuck me look in her eye that grew stronger with each kiss. She looked so perfect that I felt bad ruining her hair and makeup, but there was no way around it. Anxious for sex, she kept trying to unbutton my pants and I kept pushing her hands away. I smiled at her frustrated frown and kissed it away. My cock had become hard as I walked towards her bedroom, now it felt like a lead pipe trapped inside my pants. Rubbing over her panty clad pussy, I let her feel the promise of what was to come and suddenly she was content to wait for now.\n\nKnowing it was our last day together for weeks, if not months, I found myself trying to commit everything about her to memory. From her stunning brown eyes, to her exquisitely tanned skin, her soft, full lips and the nose that completed her face perfectly. The day we met I thought it looked too big on her, but it was the most identifiable feature of the women I'd fallen in love with and I wouldn't trade it for anything. Every smell, from the sweet perfume she wore to her own musky scent and of course the coconut smell of her tanning lotion from our first awkward sexual encounter. The silky smooth skin that covered her remarkable curves from head to toe. The sound of her voice, the purr of her gentle sigh, the throaty moans and loud grunts she made when I fucked her hard, I needed them all for the soundtrack to my fantasies that would have to get me through tomorrow and every other day without her.\n\nSensing my dire thoughts, she hugged me in her arms. Silently, we lay together drawing comfort from the simple closeness of each other. For a long time I was afraid to speak knowing my voice would betray my fragile emotions. I thought it was my job to be strong for her, but she showed me how wrong I was. When the helpless feeling had passed I kissed her again. This time when she started to strip me I didn't resist.\n\nLifting my plain green t-shirt over my head I dropped it to the floor. There was a flicker of disappointment across her face when I stood up out of her reach but it was replaced by eagerness when my hands dropped to my waist to unbutton my pants. Sliding my pants and underwear down my legs I let my cock spring into view. Ellen obviously wanted me but waited patiently for me to take my socks off. Naked now, I returned to the bed ready to make love to her but she wasn't quite ready yet. Rolling me off of her onto my back she let her eyes linger up and down my body as she traced every contour with her fingers. I knew what she was doing and happily waited. Ellie needed her memories too.\n\nWhen she seized my cock and try to take it in her mouth I stopped her. Ellen's blowjobs were fantastic but there was plenty of time for that later when I needed a fresh erection. She started to slip her panties off instead but I stopped her again, getting a looked that seemed to ask what the hell I wanted. Picking her up I tossed her down with a bouncing shriek and got down between her legs, delighting her to no end. Flicking my tongue over the bare midriff above her panty line I licked and sucked her skin as her breathing deepened. The moment I touched her panties she lifted her ass in anticipation but I pushed her back down gently. Kissing her pussy through the material I could feel that she was already dripping wet. Teasing her until she was whimpering with desire, I slipped her panties down her legs as she sighed in relief.\n\nI wanted our first time today to be gentle and loving, there was plenty of time for hard fucking later. Her sensuous kiss told me she approved of the pace. Clinging to me tightly she was writhing beneath me opening her legs wider each time I dipped my hips to meet her. Sliding my hand under her top she lifted the front of her camisole past her breasts giving my lips and hands access to her wonderful tits. Our comfortable screwing went on and on with my lips traveling from her mouth to her breasts and back again countless times. I maintained our slow pace until I sensed she was close and pumped her quickly cumming inside her as she orgasmed around my cock.\n\nTogether we crawled under the blankets trading kisses. I wanted to tell her I loved her, even though she already knew, I had to tell her but the moment was too perfect to ruin. Cuddled together beneath the blankets we continued to make out. The adoring gaze she gave me made me swell with pride. Ellen meant so much to me and knowing she cared for me too was the best feeling in the world. Our last day was too precious to waste and we both knew it so I didn't worry about falling asleep at all. Sharing the warm bed with my lover felt so good and natural it was one more thing to add to the list of things to cherish while we were apart. Her movements next to me were subtle but she was pressing her breasts into my just enough to be noticed and her leg rubbed up and down mine, the soft texture of her skin driving me wild. By the time she reached for my cock it was rock hard and she smiled triumphantly.\n\n\"I want you to fuck me this time,\" she said flinging the blankets aside. \"Are you listening to me? Give me a hard fucking I'll never forget. I don't want it I need it Daniel,\" she said with a pleading look on her face.\n\n\"Whatever you want Ellie,\" I said trying to hold her and kiss her.\n\n\"Cock is what I want not kisses,\" she said giving me a quick kiss before pushing me to the bed. \n\nRising above me she lifted her top over her head and threw it in my face playfully before slamming herself down on my cock. Her breasts bounced wildly as she rode me hard and fast. I caressed her beautiful body, but any touch that threatened to slow her momentum drew a warning glare. It wasn't long before my hands found her hips where I could help lift her up and pull her down. At the first sign of fatigue in Ellen, I kept lifting the next time she rose and threw her off of me. She giggled and spread her legs wide baring her cock thirsty cunt. I had wanted to tease her by running my cock through her pussy lips, but the disappoint sigh she gave me when I didn't take her right away was too much.\n\nGrabbing her legs I pushed them back to her chest and slide my hands to her upper thighs. Jerking her towards me with a sharp tug I held her legs together and back again. She locked her arms behind her legs and held them for me. Her pussy looked irresistible squeezed between her legs with the lips plump and protruding. Wiggling my cock past the entrance I slammed it inside once the tip was aligned with her pussy. Holding her breath, Ellen braced for the onslaught she knew was coming. After a few rapid thrusts she exhaled with a gasp and panted as I screwed her.\n\nFucking her like that always gave me a feeling of power and control. I knew it wasn't the most comfortable for her and sat back to let her put her legs down when she showed signs of labored breathing. Her arms circled my neck and pulled me down for a series of deep kisses before she released me. Open mouthed she welcomed each thrust inside her with a little shriek. I made sure to withdraw until just the tip remained inside on each stroke so she got the maximum benefit. She looked up at me desperately and I smiled to let her know I could go for a while yet. Gripping my wrists with her nails digging into me painfully, she let go of all restraint and let her loud screams of rapture fill the room. When I made her cum she lifted from the bed and clung to me as every muscle in her body seemed to tighten at once. I stopped and wrapped my arms around her letting her recover from her powerful orgasm. Sitting with her on my lap and my legs stretched out in front of me I waited for her to gain control of her trembling body.\n\n\"Incredible honey, absolutely incredible,\" she murmured into my neck.\n\n\"You bring out the best in me. I was nothing before you,\" I said with a smile making her laugh.\n\n\"Daniel I... I'll never forget you,\" she said shaking for a different reason now.\n\n\"It's ok Ellie,\" I said trying to comfort her. \"I'll come back I promise.\"\n\nThough she didn't say so, I knew she thought differently from her silence. We spent all together in her room. I didn't leave once, but Ellen left for a few minutes to get us food and drinks. We spent an hour in her hot tub sipping champagne as the bubbles tried to soothe our worries away, without much success in my case. Too often, instead of enjoying the moment, I found myself wondering if this was the last time I'd lick her pussy or if it was the last time I'd hear the rich laughter she saved for things she found truly funny. Nine hours can be a cruelly short time when it's your last chance to be with the woman you love.\n\nI could feel my heart breaking inside my chest as I dressed to go. Ellen had started crying when I pulled my underwear on and now she was sobbing on the bed in her robe. I took the tissue she was using to dry her tears away from her and gathered her into my arms. All she had to do was ask me to stay and I was hers for as long as she wanted me. Fuck school, there was nothing I wouldn't give to stay with her.\n\n\"I kept telling myself everyday that I could do this, that saying goodbye wouldn't be that hard. It's amazing how easy it is to lie to yourself sometimes,\" she said sniffling and trying to laugh.\n\n\"Ellie you mean everything to me. No other woman could ever compare to you after these past three months,\" I said building momentum towards proclaiming my love for her.\n\n\"Don't say that Daniel,\" she said looking into my eyes. \"You'll meet other women.\"\n\n\"I don't want another woman I want you,\" I said stubbornly.\n\n\"Women your own age,\" she continued matching my stubbornness. \"Women you can have a future with.\"\n\n\"How can I be happy with another woman when it's you I love?\" I said in a faltering voice.\n\n\"You shouldn't have said that,\" she said slipping from my arms. In that moment I knew I had lost her and it crushed me.\n\n\"Why not? You've known it for a long time. What difference does it make?\" I said defensively.\n\n\"That's why you shouldn't have said it, because it doesn't make a difference. Telling me you love me doesn't change the way it has to be,\" she said as the tears flowed from her eyes without shame.\n\n\"Ellie look at me,\" I said desperately. \"If this is it then say you don't love me back.\"\n\n\"Don't touch me,\" she said when I tried to hug her again.\n\n\"Say it,\" I insisted trying to hold her hand at least.\n\n\"I said don't touch me,\" she said raising her voice. \"I'm so sorry hon but you knew from the start this wasn't meant to last.\"\n\n\"Don't call me that,\" I said letting anger replace my despair.\n\n\"Call you what?\" she said looking confused.\n\n\"Hon, honey, Daniel. I think we should keep this professional Ms. Swanson,\" I said knowing how much it would hurt her. It was petty revenge, but damn did it feel good at the time. Later it was the one thing I wished I could have taken back.\n\n\"I think you should leave Dan,\" she said with a blank stare.\n\n\"I'll go but remember this. You were the one who was afraid to love me back. I'll never know why you didn't think what we had was worth saving. I was willing to do whatever it took to make this work. Think about that today, tomorrow and everyday you're alone. I still love you and I always will but I can't make you love me back. Goodbye Ellen,\" I said turning my back on her.\n\nI heard what sounded like her collapsing to the floor behind me but I couldn't look back. I had to move forward where the feeling of complete loss had to get better, if for no other reason than it couldn't get worse. Walking from her room I was numb to everything around me. I found myself remembering the day my mom sat me down to tell me the vet couldn't save our dog. I must have been nine or ten years old I thought, trying to remember exactly after all these years. Nothing could hurt worse than that feeling I told myself. What was it Ellen has just said? Sometime it's easy to lie to yourself? I wished I could go back and tell her was right, but each step took me further away from the pain so I took another one towards the rest of my life.\n\nWaiting for my ride home I sat on the curb outside her gate and finally broke down. It didn't seem like the tears helped but they kept coming so I shed their terrible burden. I started thinking about driving the car I'd bought with the money she paid me. How was I going to drive a car that would remind me of her? It didn't matter though. You didn't need to be reminded of something that was always on your mind. I heard a car approaching from inside and tried to dry my eyes.\n\n\"What's wrong with you?\" Gloria asked in a cold voice.\n\n\"She sent me away. I love her but she sent me away,\" I managed to say as she smiled at my pain. \"What did I do to make you hate me?\" I said angry that she could somehow take pleasure in this.\n\n\"You say you love Ms. Swanson? You don't know what love is,\" she spat. \"Her own daughter, her best friend, her daughter's friend,\" she said counting them off on her fingers. \"How many more are there?\" She knew all about them but why wouldn't she.\n\n\"Just those three,\" I said realizing how stupid it sounded when I heard my own words. \"But she pushed me towards them. It was just sex with the rest, it's her I love.\"\n\n\"She pushed you towards them? You know that cheating ruined her marriage and still you slept with all the others. There's a difference between love and lust. Someday I hope you find out what it's like to be on the other end,\" she said. I knew from the way she said it that her own marriage must have ended with her ex-husband's cheating.\n\n\"But I do love her,\" I said helplessly.\n\n\"You love sex. You had your chance to show her you loved her. Maybe her friend was something to share as couple I don't know, but her own daughter? I don't care what you say nothing can justify that. If I found out a man who was with me slept with my daughter I'd gut the bastard,\" she said. \"The day you had sex with Jessica is the day she knew it could never last. Great sex only lasts for so long and when that happens a woman needs to know her man will still be there for her.\" With that she rolled up her window and drove off. There was nothing more to say.\n\n***\n\nThree months later I was driving home for Thanksgiving. The long drive gave me time to think. The pain of losing Ellen never left me, but it had started to diminish with time. Slowly, I letting the good memories of our time together take its place in my heart. I'd taken Gloria's scathing remarks to heart and during our time apart I'd remained more faithful to Ellen than I ever did while we were together. My grades were the best they'd ever been as I skipped parties to study. I wasn't worried about straying, but I hated seeing people happy together. It didn't seem fair that they got smile when my life was lonely and empty.\n\nI'd kept in touch with Jessica through email. She told me her mother was having a hard time without me too. For weeks she barely left the house and cried all the time. It made me feel worse knowing what she was going through. I knew Jessica would do what she could to comfort her. The sex between them stopped the day I left, Jessica said she wouldn't consider it without me to share, but their love for each other would never end. It was a huge relief to know our week of threesomes had no lasting ill effects on their mother-daughter relationship. She told me her mother liked to read my messages. It might have been just to make me feel better and if so it worked. After that I started signing each message 'Tell your mother I love her' like a father forced to work far away in another state or country who would be home soon. Well I was almost home, but there was one stop to make first.\n\n\"Jessica it's me,\" I said grateful that she had answered my call from the gate. Gloria might not have let me in and I wanted to talk to Ellen face to face, not through an intercom.\n\n\"Hi Dan, come on in,\" she said opening the gate for me.\n\n\"Does she know I'm here yet?\" I asked when Jessica greeted me at the front door.\n\n\"No but she was afraid you might come,\" Jessica said looking like a doctor who had to give her patient bad news. \"She's not here Dan. She said it would be too hard to see you again, but she told me to give you this.\"\n\nIt was an envelope with my name written across it in Ellen's handwriting. Jessica watched me open it and withdraw the letter from inside. I could tell she wanted to know what it said but was too polite ask to as I read it:\n\nDear Daniel,\n\nI'm sorry I couldn't do this face to face but I'm not strong enough to see you again yet. I made you a promise to one day explain why we couldn't be together. I hope this letter helps you move on, if not at least you'll know why I had to hurt you like I did. I'll carry the scars from what I did to you for the rest of my life and pray each night you'll find it in your heart to forgive me.\n\nThe summer we shared we wonderful but it could never last. I'm much older than you Daniel and in time those extra years would show. I know you think it wouldn't matter and that love is blind, but youth is full of arrogance and with age comes a wisdom born of experience. I know you think we'd be different that we could make it work but I've seen it happen before. I've lived it once before.\n\nI was never completely honest with you over why my marriage failed. My husband's cheating was the final straw, but the end started with me. I married him straight out of high school at eighteen, he was fifteen years older than me. In the beginning everything was wonderful. The sex was great, we were madly in love, and soon we had an adorable little girl to complete our lives. I didn't think life could get any better, but never dreamed it would get worse.\n\nAs our business grew bigger, we grew apart. I knew we were more important to him than the company, but he rarely let it show. I still loved him but one morning I woke up and found myself wondering who this stranger sharing my bed was and what had he done to my handsome husband. Time had robbed him of his looks and his obsession with work had taken the rest. When his eyes opened and he saw the look on my face I knew it was over. I killed his love for me that day with a look that told him I wanted the man he stopped being ten years before.\n\nI've spent day since telling myself I would never destroy someone I love with a look again but it's not me that I'm worried about, it's you. I know you say you love me now, but we both know my body is going to change and not for the better. I don't want to wake up one morning next to you and see that love lost look in your eyes. I can't let it happen, I won't let it happen.\n\nI know you're thinking it wouldn't happen to us and that you can prove me wrong. Well there's an eighteen-year-old woman inside me who knows that feeling. If you really love me, then let me go and move on with your life. I'm sad everyday without you, but knowing you found love with a woman you can grow old with instead of one you're trying in vain to keep young would ease my burden. You're a wonderful man and deserve to find happiness with a woman you can raise a family with. Don't make me live with the thought that I've ruined your life.",
        "With eternal fondness and gratitude for the summer we shared,\n\nEllie\n\nI read it twice, then a third and a forth time. She was wrong. No matter how many times I read it I knew she was wrong. Part of me wanted to crush that flimsy sheet of paper, to tear it into a thousand pieces and burn them all to ash. But it was from my Ellie, so I tucked it inside my coat right next to my heart where it belonged.\n\n\"That good?\" Jessica said in response to my anguished look. \"I'm so sorry Danny,\" she said hugging me.\n\n\"Thank you,\" I whispered for the comfort she offered me. She was good at it, but I guess she'd gotten a lot of practice with her mother over the past few months.\n\n\"You can come in with me if you want,\" she said offering a different kind of comfort.\n\n\"I couldn't... I... Jessica you're a...\" I didn't want to hurt her but I had to say no.\n\n\"It's ok I understand,\" she said hugging me tighter. \"I'll tell her you'd make a great step father if you think it would help.\"\n\nI managed to laugh and for that I could never thank her enough. Looking back it was a sign that my life could and would go on, but at the time I was surprised I could laugh in a life without Ellen.\n\n***\n\nConsider this the \"official\" end to the story. When I start writing it months ago this was how I had planned its conclusion but my stories always take on a life of their own as I write them. The original plan was for a one part story and a love triangle between Dan, Ellen, and Jessica. I hope the sex between Dan, Ellen and Jessica didn't turn off anyone who's read this whole thing. I've hinted at it since the beginning and it was definitely part of the original plot in my mind, but I struggled with whether or not I should have the story take that turn. In the end I figured more people would be disappointed if it didn't finally happen.\n\nAfter writing about Dan and Ellen for so long I became attached to the characters. Towards the end I found myself wondering what if things did work out between them? I wanted it to happen, it seemed like the right thing. Those of you satisfied with how it turned out can stop here. For people who are suckers for happy endings like me, there's one more chapter to come. Life doesn't work out the way we want it to sometimes, but there's no reason our fantasies shouldn't."
    ],
    "authorname": "MasterBates13",
    "tags": [
        "summer"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-best-summer-job-ever-ch-04"
}