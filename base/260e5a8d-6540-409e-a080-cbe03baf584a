{
    "title": "Son for Hire Ch. 01-11",
    "pages": [
        "Chapter 1\n\nI sit in the plush leather seat of a long black car with tinted windows that I'd never been in before, sitting among dangerous people I'd never met before, driving through a neighborhood I'd never visited before, and nobody but my call girl sister had a clue as to where I was. To say I was nervous would be an understatement. Making matters worse I had 'first day on the job' butterflies in my stomach as these shady and dangerous criminals were my employer for the day.\n\n\"You've got your ID and medical report?\" The stern faced woman named Diane sitting beside me in the back seat holds out her hand.\n\n\"Y-yeah.\" I rummage in my pocket and pull them out to give to her.\n\nShe looks over my clean bill of health then inspects my drivers license to verify my age. \"Good.\" She hands them back. \"If this trial run works out we'll need these tests done every month. We've got a guy or you can use your own doctor.\"\n\n\"Okay.\" I pocket the items. \"Um...so Kiki was a little vague about how I get paid. Do you need my banking information or...\"\n\nDiane laughs. \"I'm a pimp, not a fucking corporation. You get paid cash after each job.\" Her laughter fades as she gets deadly serious. \"Never, NEVER, speak to the client about money matters yourself. I take care of all of that. You got that?\"\n\n\"Y-y-yeah.\" I stammer and shrink down into my seat.\n\n\"Take it easy kid.\" The burly guy driving says. \"You're with friends here.\" He peers back over his shoulder at Diane. \"You sure he's ready for this?\"\n\n\"What choice do I have?\" She sighs. \"It was today or we lose the client and I've got nobody else and nothing to lose. Any cock will do at this point.\" She was about to say more but just then a phone call comes in. She swears the moment she sees who it is and answers with an angry. \"What now!?\"\n\nI was what you might call a 'pinch hitter' here. My sister's pimp had recently lost a few of her boys at the exact same time as pent up demand was reaching an all time high. With pandemic restrictions easing people were eager to return to their old lives again. I was aghast at the suggestion at first but over the course of a week Kiki slowly talked me into it. A going rate of a hundred bucks an hour to have sex, which I didn't get nearly as often as I would like, certainly helped my decision too. I was promised no gay stuff or hardcore bondage or anything outside of my comfort zone. When I expressed concern about my qualifications as a stud for hire Kiki just laughed and told me not to worry about it. She said there was a need for men of all types. The original plan was for me to start next week but I was woken up this morning with a call from a frantic Diane demanding that I start today. I agreed and was whisked away less than an hour later.\n\nFeeling the rich leather of the seat against my hand and watching the big beautiful stone houses go by made it all feel a bit surreal for a dirt poor son of a whore like me. This was all so much nicer than I'd imagined. Mom was a junkie and a street walker right up to the day she left us and couldn't have set foot in such a place without been chased off. Even pretty young Kiki, who worked the downtown clubs, never talked about coming out into this swank section of the city. I had so many questions and if I wasn't so nervous I might have actually asked a few of them. Instead I sit there with a dry mouth, sweaty palms, and my heart hammering in my ears.\n\nBefore I knew it we were pulling into the driveway of a huge two story colonial style house, white with gray shingles, black shutters, and red brick at the foundation. Separated from the neighboring homes with high hedge borders the property around and behind the house was bigger than the whole block of low end apartments where I was raised and still lived to this day. Around the impeccable front yard was the classic white picket fence. It was the American dream made manifest.\n\n\"Shit!\" Diane barks. \"We're here already!? Hold on.\" She takes the phone from her ear as the person on the other end continues to talk. \"Listen Danny...\"\n\n\"Donny.\"\n\n\"Whatever! Listen, I know this is fucked up but we gotta go. Just go in there and make this bitch's dream come true. Just...I don't know, roll with it and do your best. Fuck the old bitch best you can, or do whatever it is she wants to do. I've heard this one's a bit weird. Just make her happy. Alright?\"\n\n\"Roll with it? Best I can? What?\"\n\n\"Try not to fuck it up but you'll get paid regardless. We'll be back at 4 pm sharp to pick you up. You got that?\"\n\n\"Um...\"\n\n\"This isn't how we usually do things but I don't have time to handhold you. It's sink or swim time Danny.\"\n\n\"But...\"\n\n\"If things go South call me, but ONLY if you need to.\"\n\n\"I...uh...\"\n\n\"He's not ready Diane.\" The driver says.\n\n\"Shut the fuck up Lamar. We're about to lose this bitch anyway, nothin to lose at this point. And we need to get back downtown like fucking yesterday.\" At her shoulder the voice on the other end of the line is screaming for her attention. With her free hand she pushes me toward the door. \"Get going Danny, give'er hell.\"\n\n\"Jesus Christ.\" Lamar mutters, looking at me pityingly. \"Good luck kid.\"\n\nWith Diane shoving at my shoulder I hesitantly open the door and step outside.\n\n\"OH!\" Diane exclaims. \"Shit. I forgot. She's your mother and you are her adult son. Just walk in and say 'Mom, I'm home.' then take it from there.\"\n\n\"Mom? Wait, what!?\"\n\n\"Oh, and don't steal anything. Now close the fucking door!\" Without waiting she leans across and pulls the door closed herself with a loud slam.\n\nNot quite believing all of this was happening I stand stunned and watch the big black Cadillac back out of the driveway and disappear down the street. The next thing I knew I was standing alone in the quiet upper class neighborhood listening to bird song and the distance hum of a lawn mower. The trees, the gorgeous homes, the gardeners puttering around the vast lawns and colorful gardens, it was all like something out of a movie. I look down myself. I had worn my very best jeans and a collared shirt but out here it just looked sad and shabby.\n\nThe instinct to flee was strong. I didn't belong here. I didn't belong in this neighborhood and I certainly didn't belong in this job. I needed to get out of here. Although, Kiki had gone to bat for me getting this gig and it would be her that would have to suffer the consequences of me quiting and losing this client. I needed to talk to her first. I go reach for my phone...only to remember that it was in my jacket which I'd taken off in the warm car! I had been harried out so swiftly I'd forgotten all about it. Damn it!\n\nIn my panic I consider just running. Just running full out for as long as I could. Perhaps I could still catch Diane's car or maybe I'd just hoof it all the way home. I still had my wallet at least, maybe I could get to a pay phone and...and...shit. I didn't even have enough to my name to hire a ride back. The memory of my negative bank balance really brought focus to why I was here right now. It was cash and horniness that had tempted me into this predicament in the first place and, while I was far too frazzled to be horny, the need for green still beckoned just as loudly. I take a big deep breath and try to settle my nerves. Just do this Donny. Diane said I'd get my money no matter what. It was nearly one o'clock now and they would be back at four, three short hours would net me three hundred bucks. Kiki said tips were common as well. What did I have to lose?\n\nI smooth my clothes and hair. Turning toward the looming house I swallow hard as I summon my courage and start toward the door.\n\nI am about to reach for the doorbell when I remember Diane's instruction. I was supposed to pretend to be this woman's son? How weird was that! But the customer is always right as they say. If she were into vanilla sex she probably wouldn't have to hire a man to satisfy her needs. I put it out of my mind and focus on the job at hand. I try the door and find it unlocked. My heart beating like a jack rabbit's I slowly step inside the opulent entryway and close the door behind me. This place was SO NICE! Dark rich wood on the banister of the stairs I could see, real warm smooth hard wood floors, a vase of fresh cut flowers just down the hall, actual painted art on the walls, this was easily the nicest house I'd ever been in. Not only did it look great, it smelled fantastic! The aroma of fresh baking filled the air.\n\n\"Um...Mom, I'm...home?\" I say out, much more meekly than I intended to. I was about to repeat myself when a woman appears at the other end of the hall. And what a woman!\n\nShe looked to be twenty years my senior, around her mid-forties, but she wore those extra years incredibly well. She wore a classic blue house dress, like something out of the 1950's, with a frilly white apron worn over the front. While heavy of bosom, wide of hip, and generally full of figure she maintained a wonderful hourglass shape. She was a tall woman, a bit taller than me, but not at all lanky or gangly in her build. Long flowing red hair cascaded down her shoulders, not quite graying yet but with lovely streaks fading a lighter orange here and there. Big, bright hazel eyes, plump lips, and the face of an angel rounded out her natural good looks. Wow! To put it bluntly, I had I simply had to be in the wrong house. To put it crassly, I was expecting either a hideous hag or an extra plus sized gal not a sizzling hot milf who had aged like a fine wine. A woman like this did not have to pay for sex.\n\n\"Theodore! My darling boy!\" She prances down the hallway with grace of a ballerina. \"You're late.\"\n\n\"Oh! Um...Theodore...that's me? That's me.\" I stumble over my words. \"Yeah...um...sorry about that...they were running late you see...and...um...um...Diane had a...\"\n\nAt the mention of my employer the woman's face flinches with irritation. I had done something wrong. In a stern voice she says. \"I think you mean to say that your train was running behind.\" She leans into her words. \"Your train from college. Yes?\"\n\n\"Oh...yes. My train...from college...I'm Theodore from...train college...no...just normal college...oh geez...I'm messing this all up.\"\n\nHer expression hardens as she plants her fists on her hips and leans her weight to one side. \"You're new.\"\n\n\"I'm sorry.\"\n\n\"I paid for a professional.\" She says in clipped tone. \"This wasn't cheap.\"\n\n\"I know...you see...Diane...my sister Kiki...I...last minute...um...it's my first...needed the money....you're my first...I'm not cut out...um...I should go...I need to go now. Oh God I messed it all up. I'm sorry!\"\n\n\"Shhh. Hold on now.\" She says. She studies me a moment and her features soften again with warmth growing in her smooth voice. \"Hold on. You came all this way. Let's just...slow this down. Okay?\"\n\nI swallow. \"I'm...not a professional Ma'am. I'm just a broke guy from the city who needed a job. I've...I've never done this before.\" I hang my head. \"I'm sorry.\"\n\nShe take my chin between her thumb and index finger and lifts my head to look at her again. \"Hey, everyone has to start somewhere. Right?\"\n\n\"Yeah.\" I say. \"I guess so.\n\n\"I'd be your first, huh? Cute.\" She takes a good look at me up and down and smiles brightly. It seemed she liked what she saw. \"I am willing to keep going if you are.\"\n\n\"Are...are you sure? I'll probably be really bad at this.\"\n\n\"I'm sure.\" Her eyes narrow suspiciously a moment. \"Is this innocent rookie thing an act? If so...you are very good.\"\n\n\"Ma'am?\" I tilt my head, confused by the question.\n\n\"Never mind.\" She chuckles and shakes her head. \"Shall we start again?\"\n\n\"I-if that's okay.\" I nod. \"So...I'm Theodore?\"\n\n\"Mmm.\" She tilts her head. \"No, you don't look like a Theodore. Do you have a name you would prefer?\"\n\n\"My name is Donny.\"\n\n\"Donny. Okay. I can work with that.\"\n\n\"And...what's your name?\"\n\n\"Mom, just Mom.\"\n\n\"Got it.\" I say, starting feel a bit of confidence coming back to me. \"I can do it.\"\n\n\"Yes you can Donny.\" She looks me in the eyes and I see real warmth and kindness in her glimmering hazel eyes. \"You ready?\"\n\nI nod. \"Ready.\"\n\n***\n\nChapter 2\n\nIn the blink of an eye she is back into character. \"Donald! My darling boy! You're late.\" She pulls me into a big motherly embrace and smooches my cheeks. As I feel her soft voluptuous body press into mine any second thoughts I had fly out the window.\n\nI giggle. \"Sorry Mom, my train was late.\"\n\nShe steps back, hands on my shoulders, and looks me up and down just like I were her son come back from months away. \"You're so skinny! Are you looking after yourself out there?\"\n\n\"I'm doing my best.\"\n\n\"You must be starving.\" She says. \"Come on you, let's get you fed.\" She puts an arm around my shoulders and leads me down the hallway.\n\nAs I walk I notice the a grouping of family photos near the flower vase. What I see are pictures of a family of three. Husband, wife, and son. They had an adult son. So that's who I was standing in for. Interesting, and pretty fucking perverted. Ah, who cares? It takes all types to make a world. So she had fantasies about her son, who the hell was I to judge? The photos are just what one would expect to see yet...there was a distance in them. A coldness in the eyes of the three perfectly postured figures staring into the camera lens. From the outside it was the perfect family but these people in the photos were not happy. I take special note of the husband, being sure to memorize his features on the chance I happened upon him somewhere out here. Kiki had warned me that most clients were married so it wasn't a surprise though it was scary now that I was here. That dude looked pretty damn serious and pretty damn big.\n\nI am brought into the kitchen and sat down in one of the tall chairs that lined the marble topped island. The area was even nicer than the entryway and hall. Big windows bathed the space in bright midday light. At an open window there sat an steaming pie cooling on the sill. It wasn't just like a fantasy, it was one. The woman's retro attire, the apron, the pie, this was all a part of the show. After her giving me a second chance I felt I owed it to the woman to live up to my end of this dream world. I do my best to imagine life in the shoes of an middle aged empty nester and I throw myself into the role I thought she wanted.\n\n\"What kind of pie?\" I ask her as she busies herself at the fridge.\n\n\"Apple.\" She says happily. \"It's...\"\n\n\"My favorite!\" I say, finishing her sentence for her.\n\nShe gives me an approving glance. \"Yes, that's right.\"\n\n\"Thanks Ma, you're the best.\"\n\nThis stops her for a second. I watch as she takes a breath in and slowly lets it out. She spins, her arms full of food item and a huge smile on her face. \"Learning quick.\" She quips.\n\n\"What ever do you mean?\" I quip right back, way too innocently.\n\nShe laughs. \"BLT okay?\"\n\n\"Sounds amazing.\" I say. She couldn't have known but the truth was that I was famished. I hadn't time to get breakfast this morning. \"Need any help?\"\n\n\"Nope.\" She says, laying out the ingredients. \"Mom's gonna feed her boy. You just sit there and keep me company.\"\n\n\"Gosh Ma, you're the best.\" I ham it up.\n\nThis was...AWESOME! I never had this in my childhood. Growing up Kiki and I more times than not had to take care of own meals. When our mother did 'cook' it was invariable something canned or frozen. When she did leave us the pair of us barely missed a beat. Kiki started turning tricks to pay rent and I picked up whatever work I could, but our home life carried on with minimal disruption. The view of this woman's full round ass as she cooked for me was just the cherry on top. But what a cherry! Damn! Older or not, this curvaceous red head had it goin on.\n\nWe chat about inanities as bacon is fried, tomatoes sliced, lettuce washed, homemade bread sliced and toasted, and fancy mayo and mustard dolloped. Neither of us probe this fictional scenario we were playing out too deeply as we talk about the things any mother and adult son might. Mostly I tell her about my classes and grades and school mates, all of made up on the spot, and she laps up every word.\n\nWith a crinkling crunch she slices through the crispy sandwich and plates with a big pickle. She places it front of me. Hunger getting the better of me, and not being well trained on my table manners to begin with, I scoop half of it off of the plate and chow down. \"Oh my God this is so good.\" I say, crumbs tumbling from my lips. I catch her looking at me and stop mid chew. \"Umm, was I supposed to say grace or something?\"\n\nShe is smiling at me, a funny smile. Sort of proud and amused at the exact same time. She just shakes her head. \"No, you're fine. Do you like the food?\"\n\n\"Like it!? Oh my God, it is delicious.\" I gobble down another big bite. \"Nobody cooks like you Mom. Mmmm!\"\n\nShe brings a hand to her mouth and I swear I catch of glimmer of a tear in her eye before she blinks it away. \"That's my boy.\" She whispers. \"You...you always had a good appetite.\"\n\n\"Mmm!\" I grin. \"Only with your cooking Ma. You're the best. NOM!\" Another huge bite and one half is polished off.\n\nI eat and she watches, both of us happy as we could be. After a rough start things were going just swimmingly now. I was so glad I hadn't run away.\n\nI polish off the sandwich with a loud belch and quickly cover mouth mouth. \"Oh! Excuse me!\"\n\nShe just laughs and waves her hand to let me know it was okay. Was that a hint of a blush on her fine cheeks? \"A drink.\" She says as I finish off the pickle and wipe my mouth with a fancy cloth napkin. \"You want a soda or a beer or juice? What you want my boy?\"\n\nA drinker I was not. I had experienced first hand the damage alcohol could do. \"Soda please. Cola if we've got any.\"\n\nShe smirks as she catches the 'we'. \"We do.\"\n\nAll I had done is eat a sandwich so far but I was starting to feel like I might be a natural at this. Thus far prostitution was nothing like imagined it was going to be.\n\n\"I hope you saved room for dessert.\"\n\n\"You know I did!\" I grin from ear to ear.\n\nKeeping up our back and forth I drink my soda as Mom takes the pie and slices a big fat piece out for me. A hearty scoop of super fancy vanilla flecked ice cream is heaped alongside. This too I eat with aplomb. No word of a lie, it is the best fucking pie I'd ever tasted and I let her know it by my groans of gluttonous bliss.\n\nLeaning back in the chair I rub my full belly. \"There's no place like home.\" I say, feeling very much like Dorothy lost in a magical land of fantasy. The difference being that my Oz had no wicked witches. \"Oh Ma! So good.\"\n\n\"I'm glad you liked it.\" She grins before glancing up at the clock. I follow her eyes to see that it was 2:30. I had been here for an hour and half already!? Where did the time go? Cognizant of narrowing time together she says as casually as she can. \"You must be all tight and tired after such long bath. Do you want Mom to draw you a bath?\"\n\nI got the message loud and clear. Foreplay was over. With me fed it and this scene of domestic heaven played out it was now time to feed her twisted mommy kink, and that was just fine by me. I just hoped I could live up to her expectations.\n\n\"Yeah. That train ride is a long one.\" I roll my shoulders and tilt my neck. Without even being asked she hurries around to start to massage my tense muscles. I close my eyes as my tight shoulders melt under her skilled hands. \"Ohhh, yessss.\" I sigh as she rubs, her fingers kneading deep yet somehow still gentle, and I feel her breasts, through dress and apron, press into my shoulder blades.\n\n\"A nice hot bath would fix you right up.\" She whispers into my ear. \"Let you...relax.\"\n\n\"A bath would be real nice Mom.\"\n\n\"Anything for my good boy.\"\n\nGood boy? She called me a good boy! Ohhhh! Oh that was nice. That was VERY nice.",
        "***\n\nChapter 3\n\nShe takes my hand in hers, a softer or more supple palm I had never felt, and leads me back through the house and up the stairs. As I gawk at the luxuriant furnishings she takes me into the master bedroom. It was damn near the size of Kiki and I's entire suite and the furnishings just oozed sumptuous luxury. To my plebeian eyes it was like the room of a royal palace!\n\n\"You can get undressed here.\" She says and motions toward a thick red robe already laid out on the bed. \"Put this on and come in when you're ready. I'll draw your bath.\"\n\n\"Okay Mom.\"\n\nShe looks over at me, naughty desire starting to peek through her maternal warmth, and squeezes my hand then disappears into the attached bathroom. Soon after I hear water begin to run. I take brief look around, trying my best not to think about the man that slept her every night. I couldn't imagine how he'd feel if he knew what his wife got up to while he was at work, or what he'd do if he caught us in the act. Best not to think about it.\n\nI waste no time stripping down to nothing. Loosely folding my clothes I leave them handy on a dresser not far from the window, in case I needed to make a quick escape. I slip the soft plush robe on, it felt really damn nice against my skin, and tie the belt. Looking into the mirror of the woman's vanity I do what I can with my hair then walk into the bathroom. There I see Mom in a robe of her own, her clothes in a neat pile on the floor. Beneath her robe I noticed her big tits hung lower, her ass filled the back just well as it had her housewife dress. I feel a twitch as my cock wakes. Oh boy. Things were getting real now. A massive oval tub, higher at the sides than the middle, slowly filling with bubbly water dominated the layout of the room. The scent of lavender fills the air.\n\n\"I didn't want to get my clothes wet.\" She says in a sultry mommy voice. \"You don't mind if Mom washes you up, do you baby?\"\n\n\"No Mom.\" I say.\n\nShe winks. \"Don't worry my boy. I won't be able to see a thing once you are under the bubbles.\"\n\n\"Okay.\" I didn't mind if she looked, I mean she paid for me after all, but I roll with it.\n\nShe brings a stool that sat in the corner over to just beside the tub. She then tests the water with her hand then turns off the taps. Sitting down on the stool she closes her eyes. \"Go ahead and hop in son and Mom will get you all squeaky clean.\"\n\nI didn't need to be asked twice. I slip from my robe and step into a very hot tub of water, the kind of hot that was too hot yet just right at the same time. \"Ooooo!\" I slowly lower myself down into the tub. Once in I find arm rests along the side. Laying back against the sloped side I let myself relax as the heat gradually becomes bearable. \"Ohhh yeah.\" I sigh as my body relaxes.\n\nMom's pretty hazel eyes open up and she smiles down at me. \"Atta boy. Just...relax.\"\n\n\"Mmmm.\" I sink down just a bit further.\n\nGetting up again Mom goes and dims the lights until they weren't much brighter than a candle's flame. From some shelves she finds a big round brown sponge and a cloth along with a small brown bottle. The sponge she throws into the tub with me, the other items get set to the side. She then begins to pull open the top of her robe.\n\n\"You can look if you want to.\" She says kindly. \"I'm not shy.\"\n\nI gulp and nod, as if I could look away!\n\nThe seam parts exposing a tantalizing little glimpse right down her middle. Her ample creamy cleavage alone made my dick swell further. She hesitates a moment. \"Now Mom's not as young as she used to be. I'm not going to look like those hot young college girls you're used to, okay baby?\" She says. \"Be kind to me my boy.\"\n\n\"Of course.\" I assure her, from what I could see already she had nothing to worry about.\n\nKeeping the belt tied securely slowly she parts the robe. Pulling it back past her shoulders she lets it slip down to glide off to display the silk smooth skin of her heavenly upper body. She was goddess! My jaw goes slack and my eyes widen as I drink in her thick, luscious, womanly curves. What a body! Her massive breasts hung heavy yet did not sag or droop, her wide round puffy pink-brown nipples pointed straight ahead. Her belly had some extra cushion to it yet she wasn't flabby. Even through the robe it is impossible not to see that her broad hips had the most wonderful rounded shape. Below the hem of the robe her shapely calves were stout but with exquisite contours. She does a slow turn to give me a full view and back was every bit as incredible as the front. Her giant peach of an ass seemed to defy gravity. She still wore the robe around her waist, wearing it like a skirt and making no motion to take it off. I wished she'd have removed it completely so I could get a full look at her thick voluptuous body. But beggars can't be choosers, I was sure I'd see the rest sooner or later.\n\n\"You're...you're...you're gorgeous!\" I gasp once I could breathe again.\n\nShe smiles bashfully, loving the attention on her body, and bows her head. \"You are too kind.\"\n\n\"No...no, I'm not just saying that. You are beautiful. Oh Mom! Wow!\"\n\n\"You little flatterer.\" She titters as she comes to sit on the stool once more.\n\nTry as I might I could not tear my eyes away from her amazing rack. Not only does it not bother her, she actually shifts her position to make sure I could see her tits better. Bending forward she lets her big breast hang over the lip of the tub as she fishes out the sponge from among the mountains of bubbles. The silly grin on my face grows as I just openly ogle the magnificent mammaries on display. With a bit of soap she lathers up the sponge into a big frothy cloud then sets to work cleaning me.\n\nStarting with my shoulders and chest she run the soapy sponge over me and gives me a nice little scrub. Once clean she squeezes the sponge and lets the steamy water rinse down over my skin. As she cleans she starts to hum a light aimless and airy tune. She then has me sit forward and does the same to my neck and back, taking a little extra time to give them a good rub down too.\n\n\"Ohhhhh.\" I could feel all my worries just evaporate away under this woman's doting gentle attention. Heaven. I was in literal heaven right now. And I was getting paid for this!? I must have passed on last night without realizing it. It was the only explanation that made sense. She leans down so close her boobs brush against me. Holding my back as if I might accidentally slip she carefully guides me back into a reclined position again. I look up at her and gaze into her pretty eyes. Oh, the things I would do for this woman. I'd get as freaky as she wanted.\n\nLeaning down she very lightly kisses my forehead and whispers. \"My good boy.\"\n\n\"Mmmm.\"\n\nShe moves to my arms, lathering and washing my near one first. \"So, have you met anybody yet?\" She croons. \"A girlfriend perhaps?\"\n\nOh yeah, the fantasy, I was still on the clock here. I think about what she would want to hear and take a guess. \"No, not yet. Those younger girls...I dunno, they're not like you Mom.\"\n\nShe lets out a flattered laugh. \"Oh Donald, you say the sweetest things.\"\n\n\"It's true though.\" I say. \"There is nobody like Mom, ya know? I just...I just want my Mom sometimes, ya know. I miss my Mom.\" A sharp pang stabs through in my heart as those words strike a bit too close to home.\n\n\"Aww sweetie.\" She moves to my other arm, her big pendulous tits swinging just above water at my lap. \"It's perfectly naturally for a man to miss his mother.\" She smiles with warmth and affection. If she was faking it she was one hell of an actor. \"Mom missed you too. Mom has...been very lonely since you moved away.\"\n\n\"I'm sorry I don't visit more often. I'm sorry.\"\n\nShe lets out a long breath, savoring those two simple words. \"It's okay.\" Her voice wavers with contained emotion. \"I understand. You boys get so busy. You grow up...you move away...so busy with your own lives...whose got the time to...\" Her voice trails off as her misty eyes get a sort of far away look to them. After a few seconds she shakes her head and returns to the moment. \"I'm just happy for the time we can spend together.\"\n\n\"Me too.\"\n\n\"My handsome man.\" She murmurs dreamily as she traces two fingers across my chest. \"I love youuu.\" Before I could even process the words she quickly presses the fingers to my lips so that I couldn't reply. \"I shouldn't have said that. I'm sorry.\" She had crossed an unspoken line saying those three little words. I nod my understanding and she gives a quick nod back before we start again. Shifting down she washes my feet, even getting in between my toes, then swabs unhurriedly up my left leg and then my right as the humming tune returns.\n\n\"Mom.\"\n\nThe word, said so naturally, stops her a moment just to savor. \"Yes my son.\"\n\n\"They take you for granted.\" I was referring both to her real life son as well as her husband. \"It's not okay.\" She picked up what I was saying right away.\n\n\"They're just busy. So busy.\"\n\n\"That's no excuse.\" I say. \"You deserve better Mom.\"\n\nThis touches her, it really touches her deep. \"That's sweet of you to say.\"\n\n\"You are the most beautiful woman in the world.\"\n\n\"Thank you sweetie.\"\n\n\"Mom.\"\n\n\"Yes my son.\"\n\n\"I just wanted to...\" My sweet talk is interrupted as a loud BRRRMMPPP rumbles beneath the suds followed by a emergence of flatulent bubbles popping at the surface. I blush furiously.\n\nThis stops her a moment before she sputters with laughter. \"Pffft! Ha ha ha ha! Donald!\"\n\n\"Sorry! You've just got me so relaxed.\"\n\n\"He he he.\" She continues to chuckle and returns to her work. \"That's okay. I'm a mother. I've had worse.\"\n\nI smile at her taking the moment with good humor. We were still practical strangers but I was getting more comfortable with her with each passing minute. She made it easy to feel at ease. \"Hey, um, before you bump into it under there, you should probably know I have a massive fucking boner hiding under those bubbles right now.\"\n\n\"Ha! You are too much.\" She shakes her head at my boldness then says in a deep sultry tone. \"I'd be surprised if you didn't.\"\n\n***\n\nChapter 4\n\nAs 'Mom' scrubs up my inner thighs, the sponge actually starting to brush my nuts, my eyes return to her big heavy succulent breasts. I sit transfixed, mesmerized at how they squished and jiggled as she moved now puffy and inviting her great big nipples were. \"May...I touch you?\" I ask.\n\nShe giggles and purposely bounces her big breasts for me. \"You like Mom's boobs?\"\n\n\"Oh yes!\" I nod in time to her bouncing boobies. \"Oh my yes!\"\n\n\"Donald! I'm your mother! You can't say that to your mother!\" She chastises playfully, drinking in my rapt attention on her body.\n\n\"I just did.\" I say. \"I might get my mouth washed out with soap but...I am crazy about your tits Mom.\"\n\n\"Bad boy.\"\n\n\"Happy boy!\"\n\n\"Mmm.\" She croons curiously. \"And what would you do with them if you could touch them?\"\n\n\"Squeeze'em!\" I say. \"Slap'em and pinch'em and lick'em and suck'em.\"\n\n\"Oh my!\"\n\n\"And bury my face right in'em until I died a happy man.\"\n\n\"Ha ha!\" She exclaims. \"Well don't do that.\"\n\n\"I can't think of a better way to go.\" I quip. \"God I love them. My Mom's got the best tits the world and I'll fight anyone who says otherwise.\"\n\n\"Tough talk.\" She titters, clearly adoring my honest admiration of her jugs. \"They're not too saggy?\"\n\n\"I like'em that way!\"\n\n\"Excuse me?\"\n\n\"I mean...they're not saggy, they're...\" I lick my lips hungrily as I watch them sway. \"...perfect. God you're hot!\"\n\n\"Mmm, you say the sweetest things.\" She then mutters under her breath. \"You are way too good at this kid.\"\n\nI ignore the muttering, I wanted to stay inside our mother-son fantasy. \"May I touch them?\" I bat my eyes and pout pitifully. \"Pleeeease?\"\n\n\"Would you stop!\" Her washing doesn't miss a beat but her little smile widens. \"Not yet.\" She then winks. \"Soon.\"\n\n\"Yes Ma'am!\"\n\n\"Good boy.\" Beneath the suds the sponge slips from her hand and she soon replaces it with my rock hard manhood. Her soft hand lightly grips around my shaft. \"Mmm!\" She hums in surprise, her face brightening. \"Ohh baby, you're a big boy!\"\n\nI blush at her praise. I knew I was no slouch in the size department, it had been a precondition of getting this gig, but I'm not sure I'd describe myself as 'big'. I let out long breath as she very gently strokes up then down my stiff pole. \"You think so?\"\n\nHidden among the bubbles her hand works back up my length, stopping to squeeze here and there. \"Bigger than dad, that's for sure.\" She licks her bottom lip as she feels me. \"Oh yes, much bigger.\"\n\n\"I want you so bad.\" I hiss as her hand feels its way to my knob.\n\n\"Call me Mom.\"\n\n\"I want you Mom. I am so hard for you. Ohhhh.\"\n\n\"Oh Donald.\" She sighs. \"Goooood boy.\"\n\nLeaning over the side, tits hanging low enough to touch the bubbles, she finds the sponge with her free hand and starts to clean my taint and balls as her right hand stayed gripped to my dick. The way she stared at me as she washes my junk with a loving hand I could see something troubling her.\n\n\"Mom?\"\n\n\"Yes baby?\"\n\n\"What's wrong?\"\n\n\"Um...nothing.\"\n\n\"No, something is up...besides mah dick that is.\" I thrust up to let my knob poke up from the bubbles.\n\n\"Ha ha ha! Would you stop!\" She lets out a good honest chuckle at my bad joke. \"You are too much. You are such a sweet...beautiful...boy...\" In the blink of an eye something changes, I could feel it as the sponge stops dead. \"This isn't how this goes. You're supposed to be flirty and naughty and...fake. You're supposed to be fake.\"\n\n\"Huh? I don't understand.\"\n\n\"I think we're done now.\" All at once she pulls her hands away. \"We're done.\"\n\n\"What!? Wait, what's wrong?\"\n\n\"Nothing. I'm done, that's all. Job done.\"\n\n\"What did I do wrong?\" I press.\n\n\"Nothing. You didn't do anything wrong.\" She insists.\n\n\"Please, don't stop now.\" I plead. \"I'll do better.\"\n\n\"You were doing fine. If anything, you were too good.\" She takes a towel and dries her hands. \"It's not you, it's me. Don't worry, I'll still pay. A nice tip just for you too. You earned it.\"\n\n\"Mom, please.\" I say softly. \"I don't care about the money...I mean...I need it but...please, can't we keep going? Don't make me go. Don't send me away Mom.\"\n\n\"Jesus Christ, don't say that.\" She shakes her head. \"It wasn't you, okay? You didn't do anything wrong.\"\n\n\"Please? I want to stay just...for a bit longer?\"\n\nShe looks at me with powerfully conflicting emotions stirring inside of her. Tenderly she strokes my cheek. She wanted me, she wanted me every bit as much as I wanted her, yet she was ending it. I was so confused.\n\n\"Mom.\" I beg.\n\n\"Donald...this is the part where I give you...prostitutes...a handjob.\" She whispers. \"Maybe a blowjob for the really good boys. And then I send you on your way.\"\n\n\"But...\"\n\n\"But, you're different. You make me...want things that I cannot have. You make me...want you. I can't handle you Donald. You are silly and sweet and...it's too real with you.\"\n\n\"B-but...I...I'm yours. All of me. We can do whatever you want. I want you to...use me...anyway you want. I just want to make you happy Mom.\"\n\n\"Oh God. Stop. Please stop.\" She hisses. \"It's not right...these sick...desires I have. I know they're not right.\"\n\n\"I don't care about that. I desire it too. We're both adults here, we're not doing anything wrong. I want you so bad.\"\n\nShe sighs and shakes her head sadly. \"I'm sorry baby.\" With a pat to my cheek she is about to stand when I grab her arm and keep her sitting.\n\n\"Please...please.\" I beseech her with all my soul. Being turned away by somebody I called Mom...I couldn't bear it, not again. \"Please Mom.\"\n\n\"Oh Jesus kid.\" She turns her head. \"You are too good. You make me believe it.\"\n\n\"Then believe it. Give in to the fantasy. That's why I'm here. Let me...\"\n\n\"No...not this time.\" She says. \"Tell Diane I'm done. I'm done.\" She takes my hand and squeezes it hard. \"And you should be done too Donald. Get out of this life, get out before it ruins you.\"\n\nI hadn't a clue what was happening but before I gave up I had to know more. \"First tell me why?\"\n\n\"Why what?\"\n\n\"Why only handjobs or blowjobs? Why not sex? Your marriage? Surely he would be just as angry no matter what you did with us.\"\n\nShe is silent for a time before shaking her head. \"No baby. It's not that. I'm not proud to say it but...I would cheat on him...if I could.\"\n\n\"Then why?\"\n\n\"I...I've got a secret Donald. A secret only a handful of people on this whole world know about.\"\n\n\"I'm good at keeping secrets.\"\n\n\"I barely know you.\"\n\n\"Who better to tell?\"\n\n\"I can't.\" Slowly she turns to face me again. \"Oh Donald. I miss being a mom. I miss it so bad. It all went by so fast. When I was a mom...I knew who I really was.\" Her voice shudders. \"My son, he tore a hole out of me when he left for college.\"\n\nI gaze into her pained hazel eyes and I let her see my pain in return. \"I understand, more than you know. I never really got to be a son. Not like this. My Mom was...a hard woman. Not soft, like you. I feel it, that missing piece. I understand.\"\n\n\"My poor boy.\" She licks her lips and swallows, her finger tips barely touching me as they trace along my shoulder.\n\n\"Tell me. Tell me your secret Mom.\"\n\n\"Be...gentle.\" She whispers. With that she sits up straight and reaches down to start untying the cloth belt of her bathrobe. She lets the belt fall lose then, after a moment's hesitation, pulls the robe apart. Beneath her fluffy soft tummy pooch I see she is wearing a very tight pair of thick black underwear, more boxer-brief like than panties. An odd choice for a woman. As she tentatively parts her luscious legs...I see Mom's bulging secret lurking beneath the fabric. Stretching the black undies were the two unmistakable humps of a set of huge heavy balls and the long thick outline of a cock that made mine meager by comparison!\n\nIn shock I let out a loud gasp. \"Wha!?\"\n\nOn hearing my reaction she slaps her legs back together again and covers her face. \"I shouldn't have shown you! What am I doing? I'm sorry! I'm so sorry! You need to go now!\"\n\n***\n\nChapter 5\n\n\"B-b-but...how...why...?\" I gawk like a fool at her groin as I stammer and stumble over both thoughts and words. Was this a joke? Was what I saw some sort of prosthetic or strap-on? I KNEW it couldn't be real, this woman was the womanliest woman I had ever laid eyes on. I knew a number of trans-gals through Kiki and I'd never seen any with curves like that. What in the hell was going on? \"Is that...?\"\n\n\"Oh God. Why did I trust you? You're a perfect stranger. Donald...you have to go now.\" She is covering her shame up again by folding the robe back up and over her lap. \"Please don't tell anyone.\"\n\nThis was no joke. I didn't know if that package I saw bulging her underwear was real but I could see the emotions were as genuine as they got. She was embarrassed and exposed, and utterly ashamed of what she had just shown me. I think back to the pleading fragility in her voice when she had told me to 'Be gentle'. I think back earlier to how nervous she was that I might compare her ripe gorgeous body to those of young and firm college women. I think about how much she had adored my eyes on her as I soaked in her natural female beauty. And now I look at her on the edge of tears and see shame in her...true shame!\n\nForcibly setting my shock and confusion to the side I gather myself and reach out. Lightly laying my hand over hers I say softly. \"Mom.\"\n\nShe shakes her head. \"Don't touch me.\"\n\n\"Mom.\" I say again, warmth filling my voice.\n\n\"Donald...\"\n\n\"Mom.\"\n\nSlowly she looks up at me, her hazel eyes meekly peeking through strands of her long red hair. \"Yeah?\"\n\nI smile and relax back into the tub. Resting my head back I say calmly. \"You missed a spot.\"",
        "\"Ex...excuse me?\"\n\n\"My hair.\" I say. \"You haven't done my hair yet.\"\n\n\"Donald...\" As she saw me relax and heard the easy tone of my voice I can sense her protest fading. My mind was still reeling of course as I continued to try to make sense of what I'd just seen, but keep that buried deep down inside. I didn't know if she really had a penis or not but I did know I didn't want this to stop, especially on such a sour note. She studies me for a time. The room is silent except for the soft sound of fizzing bubbles and water lapping at the sides of tub. I wait, unsure of what she was about to say as she struggled with some internal debate. Her response comes from shifting the stool closer and reaching across to grab the shampoo and conditioner. I grin as her big heavy milkers hover enticingly close to my face. Resetting herself she looks down at me with her old confidence restored. Slipping her hands along the sides my head she gently guides me down toward the water.\n\nI move to her touch, letting her sure hands guide me down to the water's surface. It is a huge tub so all I have to do is bend my knees and I sink right down into the bubbles. Sounds go muffled as my ear dip below the surface. She bends over the side and rests her chest on the rim just below her hanging tits. Floating above me like a fiery haired angel she begins playing with my hair and getting it wavering around in the warm water. She practically beams with contentedness. After a short time she has me sit and with strong fingers scrubs in a dollop of sweet smelling shampoo into my scalp.\n\n\"Hahhhh.\" I sigh with joy as she unhurriedly gives my scalp a cleaning better than my hairdresser. Her nails were trimmed short which made it easier.\n\nHer smile glows brighter at hearing my happiness. Back down she guides me and rinses the suds from my hair, careful that neither shampoo nor bubble bath got into my eyes. It felt SO nice to have somebody touch me and care for me like this, something I had never experienced before. The same cycle happens again with the conditioner but this time her fingers comb through my hair instead of scrub. During the second rinse Mom takes time simply to play with and caress my free floating hair, savoring ever second of this as much as I was, before letting me up to dry my dripping head in a sort of rough tousling motion with a soft fluffy towel. I laugh with pure glee. She laughs too.\n\nAs she brushes my hair she gives me a long look and see the woman behind the 'Mom' peek through. \"Thank you.\"\n\n\"Of course.\" I say. Unable to hold it back much longer I ask what had to be asked. \"Is it...real?\"\n\nShe doesn't wilt this time. We had shared a moment, building a bit of trust, and she had been expecting the question. Tilting my head to brush the other side she says. \"Yes. As real as yours. As real as can be.\" She sits me forward and finishes up brushing and smoothing down the back of my hair. \"It's a mutation. A family curse you might say. We keep it a secret so that we can live normal lives.\" She lets the robe fall away from her legs once more and, much more proudly this time, parts them to reveal herself. Looking down at the shape of her thick dick through the black underwear she says. \"I have woman parts too. My son really is my son. But I've got this as well.\"\n\n\"So...you're one of those futas, like in hentai?\"\n\nShe grimaces. \"Please don't use that word. It's...gross.\"\n\n\"Sorry.\"\n\n\"But essentially, yes.\" She says. \"My nephew Charlie...well niece actually, it's complicated...anyway, Charlie has a theory those cartoons might indicate another family like ours over in Japan. He's a very clever girl. I wouldn't be surprised if it's true. But our desire to stay hidden is a strong one. We just want to be left alone.\"\n\n\"I understand.\" I say as I continue to stare at her bulge.\n\n\"Do I...scare you?\" She whispers.\n\nI shake my head no. \"I was just surprised. Sorry I reacted like that.\"\n\nShe nods with understanding. \"I was being too sensitive. It's been so long since I revealed myself to someone new. Of course you would have a reaction.\" She stretches her curvaceous body sensually. \"It feels nice to be seen again.\"\n\n\"God...you are gorgeous.\"\n\n\"Mmm.\" She croons. \"Thank you baby.\"\n\nMy gaze drinks her soft feminine form in as I pan back up to her face. \"What's your name?\"\n\nShe tilts her head, thinking about it, before answering with what sounded like honesty. \"Evelyn. My name is Evelyn.\"\n\n\"Evelyn. That's a really pretty name.\" I say. \"Um, Donny is my actual name, in case you were wondering.\"\n\n\"I thought so.\" One truth shared spurs another. \"You aren't in college, are you Donald?\"\n\n\"No Ma'am. I'm just a poor guy trying anything he can to get by. We couldn't afford anything like college or anything.\"\n\n\"We? A girlfriend? A boyfriend?\"\n\n\"No.\" I shake my head. \"My sister Kiki and I. We live together. We support each other.\"\n\n\"A sister.\" She says warmly. \"That's nice.\"\n\n\"She's...all I really have. The only family that gives a shit.\"\n\n\"I see.\" She coos and strokes my hand. \"My poor boy.\"\n\n\"Mom.\" I say softly, loving the way the word flowed so naturally from my lips, as my eyes floated back down her body again. \"Show me? I...want to see you. The real you.\"\n\n\"Only for you.\" She says.\n\nStanding up she backs away and turns around to face away from me. Hooking her thumbs into the waist of the underwear she gives me a quick teasing glance over her shoulder...then pushes them down over her great big round perfect ass! Beneath the bubbles my cock springs to full salute. Bending at the waist she slowwwly pushes the constricting underwear down her thick luscious legs. Though she holds her thighs tight together I see the fleshy folds of her pussy peek out at me. Lower she goes, bending over in front of me not five feet away, until at last she is able to let go of the undies to let them fall the rest of the way to the floor themselves.\n\n\"Ohhh wow!\" I gasp without realizing it.\n\nThose ultra wide curvy hips, that big plump smooth ass, that pussy and tight butthole, and the little glimpse of her big boobs I could just make out...what a woman! With her back turned to me and her thighs still held tight at this point I had seen nothing outside the ordinary. That changes as she steps out of her underwear to spread her legs by just a few inches like the opening of a stage curtain. A massive set of heavy low hanging balls are what is revealed. My jaw drops, not simply because of the uniqueness of seeing a set of nuts on the same body as a pussy, but also due to the sheer size of them. If mine were walnuts hers were full ripe kiwis! I didn't even know human testes could get that big!\n\n\"Wooooahhhh.\"\n\nStanding straight, her legs apart, she gives a moment to let it sink in before turning back around for the final reveal. My eyes are as wide as dinner plates as I see the fat tip of her circumcised cock emerge into sight, it was damn near the size of her hand that held onto the thick shaft below it! Speaking of the shaft, as she turns her more and more and more...and more of her penis comes into view until at last she stand in profile holding her gargantuan girl cock out in front of her. It was real alright, this second set of genitalia sprouting organically just an inch or so in front of her pussy, but its enormous proportions, attached to a hot sexy older woman no less, had me doubting my own senses. It was huge beyond reason, probably twice my length and with a veiny girth that her soft hand could barely get halfway around. It wasn't flaccid but it clearly wasn't fully aroused yet either and already it was easily the biggest I'd ever seen.\n\nThere was no way I could hold down my shock and awe at this point. \"H-h-h-how...b-b-big?\"\n\n\"You men.\" She chuckles. \"That's the same thing my husband asked when he saw it for the first time too. Don't let it make you feel small or inadequate.\" She lets go to let it swing like a falling redwood down to hang heavy in front of her. \"But if you must know it's about fourteen inches, though I'm not sure I've ever truly been fully hard.\" With a humorless scoff she confesses. \"My husband can't even get a rise out of it anymore, not that he even tries. This is as big as its gotten on its own in a very long time.\" She hazel eyes lock on me with scintillating desire. \"A very long time.\"\n\n\"Oh!\" Only now, as the shock dimmed, was it dawning on me that as her hired sugar boy I might be expected to do something with that monster! \"Uhhh...\"\n\n***\n\nChapter 6\n\nShe throws her head back and laughs, a warm and wonderful laugh, as she seems to read my mind. \"Don't be scared Donald. I won't do anything to you that you aren't ready for.\" She says with a pretty smile. \"I realize that I am a lot of woman to handle.\"\n\nAfter a moment to process I simply nod my head. Honestly I was still a bit speechless by it all.\n\nStepping closer she reaches out for my hand and after a second I offer it to her. Taking mine in hers she brings me out of the tub and has me stand on a bathmat. I stand dripping with clouds of suds from the bubble bath gradually sliding down my shiny buck naked body. I feel really bashful, my super stiff and comparatively tiny erection just jutting out like it was, and I try to cover it up with my other hand. She chuckles and shakes her head as she moves my hand away. \"Oh please. I've seen it all before. Besides...\" She winks. \"...no need to hide anything with Mom.\"\n\n\"Yes Ma'am.\"\n\nShe grins. \"Good boy.\"\n\nStepping back she gives a long and VERY lewd look up and down my naked body. Not only could I feel the lust emanating off of her like a blazing bonfire her massive cock leaves no doubt as it lurches and swells with life. I try my best not to stare right at it, not only so that I didn't appear insensitive or rude but also because her whole damn body was a feast for the eyes. Oh how she loved my eyes on her. Just the way she showed herself to me told me how much she wanted this. For a woman who had kept her body a secret from most of the world for her whole life it must be incredibly liberating to open up like this.\n\nWalking with an extra sway to her wide hips she turns and strides over to where a white fluffy towel sat folded. She slowly bends over as I stare at her incredible ass in the mirror. With a little peek over her shoulder she smiles when she sees me ogling. She returns to me, her huge cock swinging like a heavy pendulum in front of her, and starts to towel me off. Never had I felt as softer or more luxurious towel. With all the care she took in washing me she now dries me, her hands rubbing the towel over every inch of me.\n\nShe take a little extra time drying off my dick, actually stroking it through the towel with playful peer around my arm and down at it. \"Mmm, such a nice cock.\" She squeezes it. \"So hard, so big, you certainly grew up right! Mmm. I'm gonna have fun with this.\"\n\n\"Ohhhh.\" Her stroking was feeling real damn nice!\n\nShe strokes maybe a minute and really gets my energy rising when she switches down to rub my nuts. My dick jumps a few times on its own in time with the stroking it had just been receiving. She giggles when she sees that. Rubbing my balls she asks. \"Young, healthy, virile man like you, I bet these are just full of cum just begging to...burst on out. Mmm?\"\n\n\"Yes Ma'am!\"\n\n\"I bet you can cum what, three or four times before you're done?\"\n\n\"Yes Ma'am. Three at least.\"\n\n\"Mmm! I like to hear that.\" She trills and nibbles my shoulder. \"I'm gonna take such good care of you.\" With that she shifts around to give my ass a really good toweling down, even getting down through my crack. She squeezes my cheeks, pulling them apart and teasing her a finger up and down the crevice. \"Such a fine ass. Mmm, Mom's gonna want us to play with this.\"\n\n\"I've...never...done that stuff.\"\n\n\"A virgin?\" The tip of her middle finger touches my anus.\n\n\"Oh!\" I gasp. \"In that way, yes Ma'am. I've never...I...don't know if...I want that. I've never done it.\"\n\n\"You will.\" She says warmly yet firmly as she slowly rubs my sphincter without adding pressure. \"We will. Together. I'll show you how good it can feel.\"\n\nCompletely under her spell I cannot but say. \"Yes...Ma'am.\"\n\n\"Good boy.\" She pulls her finger away then comes back up to dry my arms with swift brisk rubbing that made my skin warm and rosy.\n\n\"I've...never felt so good.\" I whisper. I loved how she touched me, it was so different from my previous lovers.\n\nShe kisses my shoulder tenderly. \"Precious man.\" She kisses the back of my neck sending shivers of arousal down my body. \"I want you to feel good.\"\n\nAs she moves about me her big tits brush over my back and arms and chest and her long thick dick cannot help but drag across the flesh of my upper legs, even nudging my balls at one point. She comes to stand just behind and beside me re-drying my back and butt and I cannot tear my eyes away from the big mirror over the sink where I could clearly see both of us. Christ almighty, her semi-hard schlong absolutely dwarfed my own boner. \"Fourteen inches.\" I mutter under my breath without meaning to.\n\n\"Might be a world record.\" She says with a strange mix of chagrin and pride. Looking back at me through the mirror she drops the towel at our feet and reaches down to slowly stroke herself. \"Look how big you've made it.\" She sighs. \"I'm so hard for you baby.\" It swells as she flexes it showing not simply plumpness but truly firming up with actual rigidity. Any other place, any other time, attached to any other person, and I would have thought the turgid organ grotesque. But after being treated so nice by this red-haired goddess that I called Mom that was the furthest description from my mind.\n\n\"You're so beautiful.\" I say as if in a trance. \"So...beautiful.\"\n\n\"Gooood boyyyy.\"\n\nWith a hook of her fingers at my hip with one hand and a feather light touch to my back with the other she has me bend forward about forty five degrees until I place my hands on the edge of the sink to hold myself there. She glides in directly behind me and presses her soft warm smooth body hard into mine, her big tits smooshing into my back. It felt soooo good. She wraps her arms around me and hugs me as down below I feel her lady cock nestle in between my thighs. As I stare into the mirror her hands rub up and down my chest and stomach before stroking down my sides and around to the inside of my crotch. Gently she pulls my legs apart. As my thighs slowly spread her gargantuan member rises up between them.\n\n\"Oh my God. I'm so fucking hard!\" She growls. Smelling my skin and nuzzling her face against me she plants a wet licking kissing just below my neck. Her arms come back to embrace my torso and she squeezes me tight. \"Ohhhh.\"\n\nI was so happy! Beyond happy. I didn't have the word. I close my eyes to savor the wonderful feeling of her supple flesh pressed into mine as her arms hold me close. Nobody had ever held me like this before. Nobody. It was more than just a hug, it was a mother's embrace. Not simply a cozy clinch or a cuddle it was is if she were trying to cradle me into her, to nurture and cherish me as only one with a powerful maternal instinct could. I would have given anything, ANYTHING, to be held like this when I was little.\n\nI wanted this sexy and vivacious older woman, I wanted her like I have never wanted a woman before, but something more potent than even my burning desire burbles up from the depths of my soul. Her kind understanding of my predicament when I arrived and giving me a second chance, the meal she prepared for me and the humor we'd shared down in the kitchen, the warm bath and how she so adoringly bathed me from head to toe, the opening up and the sharing of her secret, the fun of drying my hair and the soft and fuzzy toweling down, and now this perfect embrace. Something inside of me...breaks.\n\n\"Ohhh Mom.\" I gasp. \"Mum...!\"\n\n\"Donald?\" She whispers as a shudder runs through me. \"Are you crying?\"\n\n\"I'm sorry.\" I sob and cover my face to hide my shameful tears. \"I'm sorry.\"\n\n\"Shhhh, shhhh.\" She turns me around. Gently lowering my hands she looks up at me with a mother's worry in her beautiful hazel eyes. She cups my cheeks in her soft hands. \"Ohhh, my sweet man. My sweet, sweet boy.\"\n\nI sniffle and nuzzle into one of her hand wishing I could crawl into her palm and hide within her grasp. \"I'm sorry.\"\n\n\"Shhhhh.\" She pets my hair, she caresses my face and wipes my tears, she touches me in ways...my mother never did. I felt so ashamed of the tears that flowed yet there wasn't a thing I could do to stop them as a lifetime of bottled up pain and neglect poured forth. Taking my head Evelyn brings it down to hold me to her chest, I rest my cheek against her plump bosom and limply put my arms around her. She wraps her arms around my head and shoulders and presses her cheek down onto my head as she engulfs me with gentle care.\n\n\"I'm sorry...Evelyn.\" I weep. \"You've...been...so wonderful. And I'm...ruining...this. I'm sorry.\"\n\n\"Shhhhhhhh. It's okay baby. Everything is okay.\" She coos in the voice of an angel. \"Mum's got you baby. I'm right here. Mum's got you.\"\n\n***\n\nChapter 7\n\nThough intense the crying episode doesn't last for long thankfully. Gathering my wits and catching my breath I soon straighten up and wipe my eyes.\n\n\"Whoo!\" I huff. \"I am so sorry. I don't know what hit me there.\"\n\n\"It's okay. Really.\" Evelyn whispers as she looks into my eyes with concern. \"Are you okay?\"\n\n\"Yeah. It, um, it just felt real nice.\" I say. \"You holding me like you were.\" With a shake of my head I clear the emotional cobwebs. \"Obviously I wasn't as over my mother leaving as I thought I was. God, I'm so embarrassed.\"\n\n\"Don't be. It's okay Donald.\" Laying a hand over my heart she says. \"That's not something you just get over.\"\n\n\"Thank you Evelyn.\" I say. \"Thanks for...just...I don't know, letting me cry.\"\n\nShe smiles. \"It was my pleasure.\"\n\nI scoff. \"Yeah right.\"\n\n\"I'm serious. My boy, since he's grown up, he's a closed book. Hard. Just like his Dad.\" She lets out a breath. \"Anyway, I don't mind being a shoulder to cry on. Everyone needs one from time to time.\"\n\n\"Even hookers?\"\n\n\"Everyone.\"\n\n\"Ah! I made this all weird now.\"\n\n\"It was already weird baby.\" She chuckles then says softly. \"If you hadn't noticed yet, I like weird.\"\n\n\"Ha! I guess you do.\"\n\n\"Takes all types.\"\n\n\"Mom.\"\n\nHer smile grows. \"Yeah baby?\"\n\n\"Can...can we keep going?\" I run my hands up her silky smooth arms. \"I didn't mean to interrupt what you were doing.\"\n\n\"You sure?\"\n\n\"Yeah.\" I insist as I look up and down her voluptuous body. \"Oh yes!\"\n\n\"Atta boy!\" She giggles and swats my bare ass. \"Go on then, go get on the bed and start playing with yourself. I'll be there in a sec.\"\n\n\"Ha ha!\"\n\nAfter the release of heavy emotions I felt light as a feather on the breeze as I scamper from the washroom back into the spacious and luxurious bedroom. I leap right into the center of the massive bed and bounce to a rest. Laying on my back I stare up at the ceiling, squirming around and enjoying the feel of the expensive cotton against my freshly bathed body. I didn't even care anymore that I was laying on another man's bed, I was filled again with good feelings both wholesome and carnal.\n\nRemembering my instruction I reach my hand down and start slowly stroking myself as I lay thinking about the incredible dick wielding woman in the next room.\n\n\"Look at you!\" She says brightly as she enters the room. \"Mmm! Boy, you look good enough to eat.\"\n\nOpening my eyes I peer down to see her walking up to the foot of the bed, her hazel eyes locked on me. I smile and continue to jerk off, giving her the show she wanted to see. It felt funny to be watched like this, but a good kind of funny. I liked how she looked at me.\n\n\"I've never brought one of you guys to the bed before.\" She says as she moves around to the side of the bed, her gaze never straying from my body. God how I loved how her soft round body swayed and jiggled as she walked, even her huge bobbing pole wasn't displeasing...because it was hers. \"It's only ever been bathroom or kitchen.\" She sits at the edge of the bed and reaches across to pull my hand away from my dick to place it at my side. \"Let me take care of you.\"",
        "Getting up onto the bed she crawls over to me...and then right over me. Her huge low hanging soft mommy milkers drag across my tummy followed quickly by her hard heavy tree trunk of a cock. She turns so that her face looked down on mine, her long red hair cascading down from the left side of her head to brush my shoulder and cheek. She rocks up and down, letting her tits and dick rub against me. Backing down a little she sways her big pillowy boobs over my cock again and again. My manhood flexes hard only to rise and be nestled right in between her warm supple jugs. Up and down she lets her hanging tits stroke me within their cleavage.\n\n\"Ohhh.\"\n\nDown below her own cock and fallen between my legs, her knob brushing along my inner thighs with each smooth motion. Leaning down, her breasts engulfing my package, she gives my chest a long linger kiss then lets out a hot sigh. \"My boy.\"\n\nThe next thing I knew she was crawling all the way up! I kiss at her boobs and belly as they pass by far too quick and I don't even complain as her long cock and hefty balls drag across my face. She has me sit up so that she could get her legs behind me, sitting perpendicular. Cradling me in her arms she lays me back down again across her wide lap. My legs and butt on the bed and my torso and head in her arms I look up at her as she gazes down on me as she might a nursing babe.\n\n\"I've always wanted to do this.\" She smiles and teases my hair.\n\n\"What...do you want me to do?\"\n\n\"Just do what comes natural.\" With that her right hand glides down my body to take a very light grip of my dick and she begins to stroke.\n\nMy eyes are drawn down to the wonderful mammary, nearly as big as my head, just an inch from my face. The plump ruddy nipple beckons me. I lick my lips and then part them. Slowly I close in and feel the fat tip of her nip pass through. It is only when I have it all that I latch on...and suck.\n\n\"OHHH!\" Evelyn lets out a breathy moan. \"Oh my God!\"\n\nAgainst my arm I feel her cock, pressed between our bodies and up between her tits, surge to incredible hardness. My left hand moves to her opposite breast and to cup it and squeeze. It was way more than a handful and I loved the weight of it and how its softness spilled through and around my grasping fingers. As for the one in my mouth I do as she told me and let nature guide me. Soon an I am suckling at her teat like a hungry calf. I savor the taste of her skin and the pliant firmness and knobbly texture of her aroused nipple.\n\nEvery care I had in this world melts away as I am cradled and nursed and stroked. I gaze up at Evelyn to see her beaming with a joy as bright and pure as the rising sun. I don't think I had ever seen anyone so content and so at peace. Her left arm cradles my head as her fingers stroke and gently play with my hair. Her right arm maintains a easy up and down as her ultra-light grip continues to stroke my dick.\n\n\"Hmmmmmm.\" I let out a joyful suckling hum.\n\n\"Ohhhh, that's it. You make Mommy sooooo happy.\"\n\n\"Mmmm!\" I tongue at her nipple and nibble at it with my lips as I suck harder. My other hand massages and fondles the other one with equal desire. I even gather my courage and sneak a little stroke down the front of her dick as well. I'd never touched another person's penis before, it was...different. Mostly though I suckle and coo and enjoy the softest handjob ever.\n\nAs a grown ass man I never would have dared suggest such a thing as this twisted taboo roleplay with a partner, but now that it was happening it was just so wonderful. I felt so safe in the arms of this older woman. What we were sharing was so kinky yet pure that we were past any worries of judgment or reputation. Neither of us would speak of this tender fragile moment beyond these walls. Her deepest degenerate desire is laid exposed to me as I let her see me at my most vulnerable and in our wickedness a trust is forged. Two strangers become something else. Not quite friends, not quite lovers, and not true family, but something new and something special.\n\n\"Let me hear you.\" She says quietly as she gazes into me.\n\n\"Mmm, mmm, ommm.\" I start mewling and making happy little noises.\n\n\"Yessss.\" She traces my ear with a finger. \"Just like that.\" She pulls me in tight, blocking out the light and smothering me in her great squishy tit. Oxygen be damned, I continue sucking and making my noises as the soft warmth of her breast engulfs me. The rhythm of her stroking hand picks up a beat. \"Such a good boyyyy.\"\n\n\"Hmmmm.\"\n\nI would have blacked out without one ounce of protest but Mom gives me air just as I really needed it. I such and blow hard through my nose, not letting her nipple escape my lips for even a second. Leaning down she give me a sweet little kiss right in the center of my forehead. \"I have bad news baby.\"\n\n\"Mmm?\"\n\n\"We're almost out of time.\"\n\n\"Mmm!\" I protest. Already!? Nooooo! I nuzzle hard into her breast as if I might hide inside it.\n\n\"I know, I know.\" She whispers with a little giggle. \"But our time's almost up. You can't stay any longer. But...you're gonna come visit me again real soon, aren't you?\"\n\n\"Mmm.\" I nod.\n\n\"That's right. You are.\" She says dreamily. \"A boy needs his Mom.\"\n\n\"Hmmm.\"\n\n\"I'm gonna miss you soooo much baby. I'll be thinking about you.\" She leans in over me more. \"Will...you think about me too?\"\n\n\"Mmmm!\" I nod again.\n\n\"Yes. You will, won't you?\" She lovingly brushes some strands of hair from my forehead. \"I am so proud of youuuu.\"\n\n\"Mmmmmm!\"\n\n\"Don't hold back now baby.\" She kisses me again. \"Give Mom a big, big cummie before you go.\" My hips start to rock in time with her hand and her grip tightens just a little bit. \"Don't hold back baby. Show me how good you cum.\"\n\n\"MMMMMMM!\" On her gentle command my balls tighten and cock starts spurting with almost no warning. Never had an orgasm hit me so swiftly and so powerfully and so completely beyond my control. \"Hnnngh! Hnnnngh! Hnnnngh!\" I groan through her titty as she dotingly milks the hot creamy ropes of jizz from my throbbing manhood out onto my stomach.\n\nAll the while her big beautiful hazel eyes gaze down right into my very soul. \"Goooood boyyyyy! Ohhhh! Such a big messy load for Mom. Goooood boyyyy!\"\n\n***\n\nChapter 8\n\nWith a calm kindly expression Evelyn watches me cum, at first gazing into my eyes then watching my lean abs tighten as each wad of jizz shot out onto it. When at last she squeezes the final drop from my twitching dick I melt in her arms and let her nipple slip from my panting lips.\n\n\"Ohhhhhh.\" A very happy whimper burbles out of me.\n\n\"My goodness!\" She lauds me as if I'd just done something amazing. \"What a nice big load baby. Good boy.\"\n\n\"Ohhh Jesus.\" I gasp. \"Mom!\"\n\nShe kisses me, full on the lips, but keeps her lips pursed together. More a mother's kiss than a lover's but far more intimate and lingering. Our lips part as she sits up straight and beams with a deep joy in a moment that is far too brief. Annoyance flashes across her pretty face as she glances over toward the bedside alarm clock.\n\n\"We're running late.\" She says. \"Your people will be here soon...and so might my husband.\"\n\n\"People?\" I whisper as, for a minute there, I completely forgot about the whole context around our meeting. \"Right, people.\"\n\nI go to sit up but she holds me where I am. \"Let me.\" She says. Treating me like a king she wriggles out from under me and lays me back upon a stack of pillows. With more hurry in her step than she wanted she moves to the washroom and quickly returns with a box of tissues and a package of wet wipes. Thoroughly, swiftly, and with care she cleans up my cummy tummy along with my softening cock and still humming balls. She flashes me a little smile as she cleans and even treats my penis to a sweet sucking kiss of its own.\n\nI peer down at her own slowly fading erection. \"You never got to...\"\n\n\"Shhh.\" She smiles and pats my cheek. \"It's okay.\"\n\nAnother glance to the clock she hisses her disappointment as she gathers up the soiled tissues. \"Get dressed.\"\n\n\"Yes Ma'am.\"\n\nAs she disposes of the evidence and hurriedly slips back into her underwear and dress I roll off of the bed and get my clothes on. After such a wonderful and emotional and luxurious three hours, and still aglow from my intense climax, it felt off putting and a bit tawdry to rush things now. But I had been told quite explicitly that I would only be here until four o'clock, sharp. Just three short minutes from now.\n\nAfter a brief look around to make sure nothing of mine was left behind Evelyn leads me back down the stairs and stands me up against a wall near the front door. There she stands me up tall as she straightens and smooths my clothes exactly like a fussy mother might before sending her boy off to school. I look down at myself feeling out of place standing in this palace in my worn jeans and slightly fraying shirt.\n\n\"Donald.\" She says softly, combing my hair with her fingers. \"You are too good for this life. You hear me?\"\n\n\"Okay.\"\n\n\"You are too good for this. I know you could be...so much more.\" She straightens my collar. \"You have to believe that, okay?\"\n\nI hold back a tear and nod. \"Yes Ma'am.\"\n\n\"But...I am glad your path brought you to me. I am so happy to have met you.\" She looks up into my face with another warm smile. \"I expect to see you again.\"\n\n\"I hope so.\" I smile too.\n\nThere is a strangely awkward moment as the roleplay falls away entirely leaving just Evelyn, the lonely housewife, and Donny, the poor city kid, and the weird knowledge of what we'd shared today. Letting my heart guide me I pull her in for a hug. I hug her hard as whisper into her ear. \"I'll miss you.\"\n\n\"Me too baby.\" She hugs me back. \"Take care of yourself out there.\"\n\nJust then the doorbell rings. Diane was here, right on time.\n\nThe moment between us broken Evelyn pulls away from me. Before answering the door she grabs her purse and opens it. She looks through it before pulling out two hundred dollar bills and jamming them into my hand. \"This is for you.\" She whispers. \"You earned it. Don't tell them.\"\n\n\"You...don't have to...\"\n\n\"Hurry Donald.\" She says as she heads for the door. \"Put it away now.\"\n\n\"Okay.\" I mutter as I stuff the bills into my pocket. I felt...fucking terrible taking money from her. I mean, I knew that was why I was here but...after what we'd just done bringing money into it just felt...cheap and gross. I felt like it was me who owed her something!\n\nDiane stands at the door looking prim and professional, a far cry from the foul mouthed woman I knew. She nods her head with a polite. \"Evelyn.\"\n\n\"Diane.\" Evelyn nods back.\n\nDiane looks over at me and says brusquely \"Wait in the car.\"\n\n\"Oh...um...yeah.\" My pimp's voice was a swift and brutal reminder of who I really was.\n\nI look at Evelyn one last time and she shoots me a wink. That makes me smile again. I slip my shoes on and walk past the two women and out to the waiting Lamar and the long black car. I get into the backseat just where I sat earlier that day.\n\n\"How'd it go?\" Lamar asks, looking back at me over his shoulder.\n\n\"Um...good. It went...good.\"\n\nHe was surprised, but pleasantly so. \"Way to go kid.\"\n\nBack at the door Evelyn and Diane speak for a short time and money is exchanged. As they say their goodbyes and Diane turns to head back to the car I catch Evelyn look my way. Our eyes meet for one last brief moment of connection before she disappears behind the closing door. Diane hops in beside me in a fantastic mood.\n\n\"I don't know what you did in there Danny but ya did good.\" She slaps the back of the seat to spur Lamar into driving. \"The bitch was already asking about a next time. Ha ha ha, Danny boy! I knew you could do it. Unlike Lamar there I never doubted ya.\"\n\n\"Yeah.\" I say, only half listening, as I stare back at the big two-story house receding behind us.\n\nMore money is put into my hand, the agreed upon three hundred. I look down at the bills then up to the towers of downtown in the distance. The fantasy was over. I was going home. I think about the empty fridge and barren cupboards of Kiki and I's little run-down tenement and I am reminded of why I had done this in the first place. My hand grips the money and slides it into my pocket. As Diane makes a phone call I settle down into my seat and rest my head against the glass to watch the stone houses and luxury cars and impeccable yards of this dreamland glide on by.\n\nA little smile plays at my lips. While I was heading back to my own shabby reality I had, for one incredible afternoon, gotten a little taste of something better. A gaping gnawing needy hole right in the center of my soul that I didn't even know was there had been filled, ever so briefly. For three magical hours I got to be a son. A son to the kindest, gentlest, most beautiful woman in all the world...who just happened have a degenerate Mommy kink and a fourteen inch cock! Regardless, what a gift this day had been. I felt blessed. I felt like the luckiest guy in the world. I felt...loved.\n\n***\n\nChapter 9\n\n\"I'M HOME!\"\n\nMy one arm loaded with groceries and the other carrying a still hot pizza I kick the door closed behind me.\n\n\"I'm in here.\" I hear Kiki say from the kitchen table.\n\nShe is all smiles as I round the corner with the spoils I purchased from my first day of dishonest work. I wasn't surprised to see her still in the old t shirt and gray shorts that she wore as pajamas with no make up and her long curly hair all tussled. At just past five in the afternoon Kiki's day was just getting started. The moment the bags and pizza box are down on the counter she is up off of her chair. Hurrying to me she slips her arms around my torso and pulls me in for an extra hard hug.\n\n\"You did it.\" She says as she rests her head on my chest.\n\n\"Yeah.\" I hug her back. I go to let go of her again but she keeps me held close so I keep the embrace going too.\n\n\"You okay Donny?\" She looks up at me with sisterly concern. Her pinpoint pupils told me she'd already had her morning joint, laced with heroin of course. \"How you doin kid?\"\n\n\"I'm not a kid.\" I grin and kiss her forehead before jesting in a gruff voice. \"I did man's work today.\"\n\nShe laughs and gives me a rough shake then squeezes me in yet another hard hug. \"Listen to this guy. One trick and he thinks he's king of the fuck boys.\"\n\n\"Ha!\"\n\n\"Donny.\" She says more seriously. \"I want to hear about it.\"\n\n\"Food first.\" I insist, after having Evelyn in my arms little Kiki felt like skin and bones by comparison.\n\n\"Deal!\" She chirps. \"I'm starving.\"\n\nThe groceries are put away and soon we sit at our cluttered little table eating pizza off of napkins and both drinking the cola straight from the big bottle.\n\n\"You weren't supposed to start until next week.\" Kiki says between hungry bites. \"Mmm. I wanted to talk to you first. I told Diane you weren't ready.\"\n\n\"I did fine.\" I assure her. \"It was something of an emergency I guess.\"\n\nKiki scoffs. \"With Diane it's always an emergency.\" A little grin grows on her face. \"Soooo, gonna tell me about it?\"\n\n\"It was...um...it was different than I expected.\"\n\n\"Oh?\" She says. \"Lamar said you went out to one of them fancy suburbs.\"\n\n\"Oh yeah, it was fancy! You shoulda seen the place.\"\n\n\"Lucky.\" She quips. \"I've been to a penthouse but never out to those swank mansions. You must have been so nervous!\"\n\n\"Eh, a little.\" I bluff.\n\n\"Pff! Lamar said you forgot your jacket and phone in the car.\"\n\nI chuckle. \"Okay, a lot.\"\n\n\"I was too on my first.\" She says. \"So, tell me about...her.\"\n\nTry as I might I cannot hide the humongous smile that comes naturally to my face.\n\n\"Ahhhh!\" She points at me. \"Look at you! Ha ha ha! She was good, huh?\"\n\n\"Uh, yeah. Really good.\" I say. \"She was...an older lady.\"\n\n\"Of course.\"\n\n\"Married.\"\n\n\"No doubt.\"\n\n\"Really pretty. Long red hair, nice eyes, and she was, um, well put together for her age.\"\n\n\"Go on.\" She hangs on every word as she take another bite of pizza.\n\n\"And nice! Kiki, she was unbelievable. She made me food, can you believe that? She has a grown up son off to college, close to my age. I think motherly stuff just comes natural for her.\" I ponder how much I really wanted to say. I already knew Evelyn's big secret I wouldn't spill but I didn't know how much of the rest of it to share. \"I don't think her and her husband are very intimate anymore. And she...she's just really lonely. Ya know? All alone in that big house.\"\n\n\"Awwww, my heart breaks!\" Kiki says sarcastically. \"That poor, poor, rich woman. Ha!\"\n\n\"Don't be like that.\" I didn't like her talking about Evelyn like that though I certainly understood where it was coming from. \"You don't understand. Oh Kiki, this woman...\" I sigh dreamily and slump back in my chair as I reflect back on my afternoon. \"...this incredible woman. She was so nice and so sexy and so....ohhhh, she was...wonderful!\"\n\n\"Oh boy.\" She sets her crust down and wipes her mouth. \"I was afraid of this.\"\n\n\"Huh?\"\n\n\"Donny, she might have been nice but she was still just a trick.\" She says. \"That's one of the things I wanted to talk to you about beforehand. Don't fall for the clients, it never works out. Keep it professional.\"\n\n\"No, no.\" I shake my head. \"This was different Kiki. Totally different. You should have...\"\n\n\"Been there?\" She finishes my sentence. \"You think I haven't been?\" Reaching across she rests her hand on mine. \"We've all been there.\" She tilts her head and studies me a moment. \"Let me guess...lots of sweet talk, probably opened up with some real personal stuff too, real names given. I bet she made you feel real special, huh? Like you were different from all the others.\" My smile starts to fade. \"She probably said something about how she wished she could help you not be a call boy anymore. I bet she felt soooo sorry for you and wanted to make all your dreams come true. Oh, and I bet she was soooo upset when the time was up, and that she just can't wait to see you again, but she sure as shit got you the hell out of there right on time anyway. Nice tip, 'just for you', one or two bills. Yeah?\" I don't answer her. I wasn't smiling anymore. \"And I'd bet anything that an 'I love you' slipped out in there somewhere.\" She leans in, looking up into my eyes. \"Am I close?\"\n\nClose? She had just hit a fucking near perfect bullseye! Every word spoken as if she'd been there to see it.\n\n\"You don't understand.\" I mutter and turn my head so as not to look at her.\n\n\"I do.\" She squeezes my hand. \"I really do little brother.\"\n\n\"She's...my friend.\"\n\n\"Your friend?\" She says. \"Okay then, give your friend a call. Hell, invite her on over. Let's watch a movie together.\"\n\n\"I...don't know her number.\"\n\n\"I know.\" Kiki says softly. \"Because she's not your friend Donny. She's just a trick.\" Getting up she comes around to hug my head to her chest. \"I've been there kid, trust me. I wish Diane had waited. I wanted to tell you this stuff.\" She kisses my head. \"Those people, those people with money, they aren't like us Donny. Everything in their world is bought and sold, even love. We're just toys to them. They don't even see us as human. Just little wind up boys and girls they hire by the hour that they can project all their fantasies on. They'll say the nicest things...or the nastiest...because they know we are paid to listen and respond. We make them cum or laugh or cry or whatever the fuck they're after, then they're done with us until the mood strikes them again.\" Pulling back she takes me by the cheeks and makes me face her. She gives me sweet grin. \"Hey. Don't get down about it. You might already have your first regular. That is huge! Regulars mean less risks and bigger tips. This is a good thing Donny.\" She ruffles my hair. \"Don't be so glum. We have pizza, this is a good day!\"\n\n\"Yeah, yeah.\" I nod as I wrap my head around the reality check I'd just been given. \"A good day.\"",
        "\"I'm really happy it went well.\" She says as she lets me go. \"They won't all be like that. You gotta enjoy these ones, just don't let them get in there.\" She points at my heart. \"Okay?\"\n\n\"Yeah.\"\n\n\"I love you kid.\"\n\nI sigh and nod again. \"I love you too Kiki.\"\n\n\"Hey, uh, do you have any of that money left?\" She scratches the back of her neck. \"I'm heading out soon and I'm a little light...\"\n\n\"I got a bit.\" I'd rather just give her the money than hear the excuses as to why she needed it. Pulling a fifty from my pocket I hand it to her.\n\nShe takes it, gratefully, but pauses. \"Is that it?\"\n\n\"Yeah. I bumped into Mr. Khan on the way in...\"\n\n\"That asshole! I told him I'd have the rent next week.\" She folds up the bill and tucks it into the waistband of her shorts and grumbles again. \"Asshole.\"\n\n\"Well, we owe three hundred less now.\"\n\nShe lets out a breath. \"Yeah...that's good, I guess.\"\n\n\"I'm gonna start pulling my weight around here.\" I tell her. \"You'll see. If...if that woman wants me again or...or if I can get a few more t-tricks...maybe you won't have to work so much.\"\n\n\"Ha! That'd be nice.\"\n\n\"I'm going to need clothes.\" I say. \"These weren't cutting it out there in burbs.\"\n\n\"Yes! Let's go to the consignment store this weekend.\" She says excitedly. \"I can get you looking like a real fine piece of ass.\"\n\n\"Kiki!\"\n\nWith a giggle and wink she spins on her heel and heads for her room. \"I knew you could do it Donny. You're the fucking best! Don't you ever forget that little brother.\"\n\n\"You too.\" I say.\n\nAs Kiki got ready for her night of work I sit alone nibbling at the greasy pizza but thinking about that fresh BLT prepared just for me. Staring into the living room I take in the cramped space with frayed mismatched furniture and cannot help but reflect back on luxuriousness of the house I was in just a couple of short hours ago. The further I got from it the more that whole afternoon really did feel like a dream. Nothing about it felt real. And yet...I could still taste that sandwich and Mom's delicious homemade apple pie if I thought about it hard enough.\n\n***\n\nChapter 10\n\nThree days pass with no word from Diane. I had been warned about this when she pulled me into the life. Whores like me, clean cut and passably cute, had a very niche clientele. If I was stripper level studly, a bad boy, a femboy, or packing a monster cock with legendary bedroom skills the demand would be higher. And, of course, if I was willing to go gay I could be working almost nightly. As it was, I simply had to wait for the right kind of customer to come along. I'd only gotten that first gig because of a shortage after all, a shortage that the well-connected Diane had nearly topped up already.\n\nWith each passing day I was coming around to realize just how true Kiki's words had been. I had just been a boy toy to Evelyn. All that sweet talk was just that, sweet and empty. It hurt. I really thought we'd made a connection there. All I could think about was her but it was clear that she wasn't thinking about me. If our roles were reversed there was NO WAY I wouldn't have summoned her for another visit. But her silence spoke volumes. I had fulfilled whatever weird needs she had for awhile and I wouldn't hear from her again until her fetish had to be fed once more.\n\nAh well, it was a nice fantasy while it lasted. Besides, today was going to be a good day. It was Saturday and Kiki was going to take me to the clothes store and get me a new outfit that wouldn't make me stand out so badly out in those exclusive neighborhoods. This would be fun! We always had a good time together even if it was just shopping. Five o'clock sharp, just as we agreed, I rap on her bedroom door.\n\n\"Rise and shine sleepyhead.\" I call. \"Time to go shopping.\"\n\nI crack the door and cautiously peek in, ready to dart back if she was indecent. The room was dark and suffocatingly stuffy. She had a space heater on despite the fact it wasn't cold in the apartment. Somewhere on the bed among the piles of crumpled blankets and pillows and stuffed animals was my sister.\n\n\"Come on you...\" My voice dies as the light from the opening door falls across her cluttered night stand...and I see the spoon and syringe. \"No.\" I whisper as my heart breaks.\n\nHurrying to her bed I scramble to find my sister. I let out a gasp of relief when I hear the slow steady sound of her breathing. Oh thank God! I pull the sheet away from her face and she furrows her eyebrows and clamps her lids tight. \"Mmmmm!\" She protests drowsily.\n\n\"Kiki.\" I whisper as I pet the hair from her face. \"Kiki, you said no more needles. You promised.\"\n\n\"Mmm?\" In a haze she blinks her eyes open and looks up at me. \"Ohhh, hey baby brother.\" Her voice is weak and tired. With a limp hand she strokes my cheek with her fingers. \"Love youuu.\"\n\n\"Kiki.\" I sigh, deeply disappointed in her. \"We were going to go shopping, remember?\"\n\n\"Were we?\" Her eyelids droop shut. \"I forgot. I'm sorryyy.\"\n\nI forgot. How many times had Mom said that to us over the years?\n\n\"God damn it Kiki. God damn you.\"\n\n\"Hey, heyyy...I'm sorry.\" She slurs. \"How...how about another time? Mmm? I promise.\"\n\n\"Oh Kiki.\"\n\n\"I promise...I promissssse...\" She drifts off back into a drug induced stupor.\n\nI tuck her back in and kiss her forehead then hide her drugs as best I can so she didn't take anymore in this state. I stand and look down on her sweet peaceful face framed by her curly hair. She was walking the same path as our mother, I could see it but I didn't know what to do about it. Solutions cost money, money that I certainly didn't have. I leave the room and quietly close the door behind me.\n\nI was disappointed, I was really looking forward to our shopping trip, but I was used to disappointment. I look around the apartment...I certainly didn't want to stick around here for the rest of the day. I could go chill with a friend but...I felt restless. I didn't want to just chill. I wanted to DO something. I glance back to Kiki's door. There was no way she'd be working tonight in that state. The groceries I had bought had run out this morning. With Kiki down maybe I could take care of things, for once I could provide for us. I give Diane a call.\n\n\"Danny?\"\n\n\"Donny.\"\n\n\"Whatever. What's up?\"\n\n\"Um...I was hoping you might have some work for me.\" I swallow. \"I...uh...I thought...maybe you had something. I haven't heard from you.\"\n\n\"A boy that wants to work. I like your spirit Danny.\" She says. \"You willing to suck a cock yet?\"\n\nAn image of Evelyn's big lady dick flashes through my mind before I shake it out. That was not the cock she was talking about. \"No, not yet.\"\n\n\"Yet?\" Her interest is piqued. \"I like the sound of that!\" There is a pause. \"What the hell, I appreciate your initiative. Yeah, I'm sending some boys over to a bachelorette party. The pay isn't great but you keep all the tips. Do good and you could really rake it in.\"\n\n\"A party?\" I could feel my chest tighten at the thought of it. \"Uh, I think I would be better one on one. I'm not sure party's are really...\"\n\n\"All you gotta do is follow along with what the other guys do. You'll get the hang of it. Listen, you want to work tonight or don't you?\"\n\nI close my eyes and think of Kiki and our barren cupboard, then let out a defeated sigh. \"Yeah, I want to work.\"\n\n\"Great! Go wait outside your building. Lamar will pick you up as soon as he can.\"\n\n\"I...don't really have much to wear.\"\n\n\"Oh, don't worry about that.\" She laughs. \"G-strings will be provided.\"\n\n***\n\nIt is just past two in the morning when I return home. I drop my coat on my shoes and make straight for the bathroom where I take a long hot shower to try and clean the filth from my soul. From there I head straight for bed where I hide my head under my pillow and try desperately not to cry as I wipe my mind from the terrible memories of the evening. But the hoots and whistles and leers and rough gropes and drunken laughs and degrading language would not be forgotten so easily. I had sold my dignity for a piddly sixty bucks. And not only had I barely gotten any tips, the other guys all said that they didn't want to work with me anymore as I 'brought the mood down'. I had bombed!\n\nThat night I lay awake, my eyes tracing along the cracks in the ceiling as I think.\n\nI could try again at an honest job but that was easier said than done. Patchy experience, sketchy references, no education, I didn't even own a proper tie for an interview. My history of sticky fingers certainly didn't help either. I hadn't stolen anything in nearly a year now but that sort of charge sticks with you in the eyes of potential employers. But I had to try. What choice did I have? I wasn't cut out for the life of a prostitute. I couldn't handle the demeaning work and I certainly couldn't handle having my heart toyed with. I wasn't tough like that, not like Mom and Kiki.\n\nBut...they had help. A pill, a powder, a needle. Something to take the edge off, something to cloud the memories, something to hold back the pain. Maybe, if I just took a little, maybe it could help me relax and numb my troubled mind enough to do the job. Just a little wouldn't hurt. I knew the dangers well enough not to let myself get hooked on the junk. I'd be careful. If I could hold on just a little longer...maybe I could see her again. Just one more time.\n\nI knew now that Eveyln's concern about me was false, but for a son that not even his real mother could love false was better than none. I wanted so bad to return to that fantasy. Closing my eyes I see Mom's beautiful hazel eyes come into view followed by her face and then her long scarlet hair. Next her luscious curvaceous body comes into view. \"Mmmm.\" Reaching down I start to stroke myself. What a body! Curves, tits, ass, and that huge cock. I had thought about her so much these past days that her extra organ didn't even bother me anymore. It just made her more unique, more special, and more beautiful in my eyes. My Mom wasn't like those boring vapid skanks at that party. My Mom was one of a kind. And she knew how to treat a boy too! All through the chaos and confusion of the bachelorette party I'd been struggling to keep it up, not so now. As I thought of Evelyn my dick was stiff in no time at all.\n\n***\n\nAfter a good wank I am able to get some shut-eye. It is almost noon before I finally roll out of bed. I find that, having slept all day yesterday, Kiki was already up and out. She leaves me a little note taped to door. \"We're going shopping. Soon! Count on it. Love you kid.\"\n\nI sigh as I tear it down. \"Love you too Sis.\" I crumple the note and toss in the trash.\n\nI am tidying up when I hear my phone ring. Rummaging about in the closet I find my jacket where Kiki had hung it and fish out my phone to see that it was Diane.\n\n\"Shit.\" I sigh. \"Calling to fire my ass no doubt.\" Just after noon on a Sunday, and after last night's performance, what else could it be? Ah well, probably for the best. I answer. \"Hello?\"\n\n\"Where the fuck you been Danny!? I've been calling for over a fucking hour.\"\n\n\"Uh, sleeping.\" I mumble.\n\n\"Fucking sleeping beauty, isn't that lovely.\" She says sarcastically. \"Keep your phone on you dumb ass!\"\n\n\"It's Sunday...\"\n\n\"Whoopty fucking doo. Do you know what 'on call' means? You think you get weekends off? You think I get a day off? You work when there's work, and right now there's work. We're coming to get you. Be there in fifteen.\"\n\n\"Fifteen!? What!?\" I croak. \"I...I'm not ready.\"\n\n\"Well get fucking ready sunshine.\"\n\nA trick? Now? I was barely awake. I hadn't even showered yet. I had no clean clothes. And I still felt wretched and gross from my ordeal last night. In both body and mind I was not ready for this! My eyes flit to Kiki's room. Did she find those drugs I hid? Maybe...just a little taste...might just perk me up and dumb me down enough to...\n\n\"Hello?\" Diane interrupts my thoughts.\n\n\"I...uh...I don't think I can.\" I shake my head. \"You'll have to find someone else.\"\n\n\"Oh no!\" She barks. \"It's gotta be you and it's gotta be now. She was quite insistent.\"\n\n\"She was? Who...?\"\n\n\"Who the fuck do you think?\" Diane says. \"Fuck you're dim Danny. You've only had two jobs, do you honestly think it was one of the girls from the party? Ha!\" She says. \"After last night's shit show you fucking owe me one. Now put on your big boy pants and...GET FUCKING READY!\"\n\nAll thoughts of drugs and not being ready are wiped from my mind as I feel my spirit lift. \"Yes Ma'am!\"\n\n***\n\nChapter 11\n\n\"Mom! I'm home!\" I call out as the door swings closed behind me. I hang my jacket and kick off my shoes and I am hurrying down the hall even before she appears from the kitchen to welcome me.\n\n\"My boy!\"\n\nWe meet in the middle, throwing ourselves into each other's arms for a long, hard, close hug. For me at least it was a moment of pure heartfelt bliss. Mom was holding me again, in that way only she could. Ohhhhh, I wish I could stay in this moment forever.\n\nI bury my face in her neck and let out a joyful sigh. \"I missed you. I missed you.\"\n\n\"I missed you too.\" She says with a catch in her soft voice. She kisses my cheek. \"Ohhhh, my boy.\"\n\nGrabbing my head she peppers me with kisses and gives me a look up and down. Her smile fades a little. \"Oh Donald, you look...are you okay?\"\n\nI smile. \"I'm okay. Just a long night, ya know? You know how us young guys stay up all night. Ha ha ha!\" I was downright giddy to see her again.\n\nHer brows furrow as she studies me closer, her soft hand stroking down my temple. \"Right.\"\n\nTruth was I looked like shit. I'd gotten very little sleep the night before and what I did get was shallow and patchy. With only fifteen minutes to prepare I barely had enough time to pull a comb through my hair, stroke a razor over my face, and give my teeth a hasty brush. And my clothes...they were downright embarrassing. Wearing the same jeans as the first time, only dirtier, and a the cleanest crumpled t shirt I could find on the floor of my room I must looked like a bum straight off the curb to her privileged eyes.\n\n\"Sorry.\" I apologize for my shabby appearance. \"I didn't get any warning. My fault for not being prepared.\"\n\n\"It's okay.\" She says softly. \"My day only opened up this morning. I didn't have much warning either.\" She stares me in the eyes. \"How are you doing Donald?\"\n\n\"I'm...\" I turn my eyes toward the kitchen. \"...hey! Is that an apple pie I smell? That's my favorite.\"\n\n\"Hungry?\"\n\n\"Starving! I didn't eat breakfast.\"\n\n\"Well then, let Mom take care of that for you.\" She takes my arm and leads me into the kitchen.\n\nAs she makes me pancakes I sit there grinning like a fool. I was here! Back inside the fantasy. Oh, it was just wonderful. As she cooks she keeps interrupting our back and forth with persistent questions. \"How are you doing?\" \"You okay?\" \"How are you feeling?\" And other such probing things. I always answer them just the same. \"I'm fine Mom.\" \"I'm okay Mom.\" \"Feeling great Mom.\"\n\nShe wasn't convinced. She serves me the pancakes she stands across the island from me with concern etched on her beautiful face as watches me snarf down the fluffy syrup soaked morsels or motherly perfection.\n\n\"Mmmm!\" I smile and chew and swallow with exaggerated relish, showing her how happy I was.\n\nHer concern only deepens. \"What's wrong Donald? Something is wrong.\"\n\n\"Mmm, what do you mean?\" I ask through a full mouth. \"I'm home. What could be better than that?\"\n\nShe narrows her eyes then shakes her head. \"No.\" She waves toward me. \"This...this isn't real. You're acting like those other boys.\" Her voice softens. \"I want my Donald. I want my real boy.\"\n\n\"What do you mean? I am real. Ha! Boy I sure do love your home cooking. Yum, yum, yum!\"\n\n\"Oh my sweet...what did they do to you?\"\n\n\"They didn't...\" My voice falters.\n\n\"What happened?\"\n\nMy fork pauses in midair as I stare down at the half eaten stack of pancakes. \"I'm...okay...\"\n\n\"No, you're not.\" She reaches across and lays a hand lightly on my shoulder. \"You can tell me.\"\n\nMy hand trembles. My throat suddenly felt dry and the sweet taste in my mouth turns to ash. \"This...this is...the last time...\"\n\n\"The last time?\"\n\n\"I'm quitting. I...can't do it. I can't...be...what they need me to be. What you need me to be.\" I shrink, ashamed, in my seat. \"They touched me Mom. Those women last night. They touched me and...said things...I...I didn't like it. I...hate...them.\"\n\n\"Oh my boy!\" She covers her mouth, the glimmer of a tear in her eye. \"My sweet child.\"\n\nI see and hear her false concern and I nearly wretch.\n\nMy eyes snap up to meet hers. \"Okay...you want real. I'll be as real as it gets. I'm scared Evelyn. I'm fucking scared.\" I drop the fork, it clatters loudly to the plate startling her and causing her to flinch back. \"I've got no fucking money. I got no fucking future. My sister's a fucking junkie. Her life is falling apart right in front of me. She needs me and I don't fucking know what to do! I can't even look after myself! I love her! She's...she's all I got.\"\n\nEvelyn stares at me with wide stunned eyes.\n\n\"But the worst part, the very worst part...is you!\"\n\n\"Me?\" She gasps as if a dagger had just been driven straight into her heart.\n\n\"You want ME to be real? What about YOU?\" I say, my voice tremors with pent up anger and pain. \"Meeting you was the most...wonderful...thing...\" I shake my head, not allowing myself to cry again in front of her. \"I believed those things you said. I thought we...connected. I thought you liked me. But, but, you just used me. Your little boy toy. Your make-believe son. Just another in a long line of sons for hire. Kiki told me about you people. She said how you people don't even think about people like me...and her. I'll do it for you one more time 'Mom'. I'll do what you want Evelyn, I'll say what you want, I'll always keep your secrets. Just...please...stop pretending that you really care about me.\" I thump my chest. \"I can't take it! Not...from you.\"\n\nBy the time she comes around to my side I am already a sobbing mess. So much for not crying. My fatigued mind and battered spirit hadn't the fortitude to handle this shit. She takes me into her warm, soft embrace and I collapse into her, needing any sort of kindly human contact right now even if it was just for show. She holds me. She kisses my head. She tells me that I am brave and strong boy. I don't know if she was mocking me or not but I accept the nurturing words and cling to them just as I clung to her body.\n\n\"Donald.\"\n\n\"Ye-yeah?\" I sniffle.\n\n\"I'd like to show you something.\" I look up at her to see her gazing down at me with a calm gentle warmth. There was no anger, no judgment, no offense in her clear hazel eyes. She takes the hem of her skirt and daubs my wet cheeks dry. \"Could I show you something?\"\n\nHesitantly I nod.\n\nShe takes me by the arm again and I follow. To my surprise she leads me out of the house, out the back door and out onto a large stone deck beyond which was a glimmering azure swimming pool. Taking a hard right she leads me along the house to a door situated near the corner. Taking out a key she unlocks the door to reveal a wide staircase leading down. There was a sturdy railing along one side and one of those chairlifts for the elderly along the other. She motions me to enter.\n\nI descend down the stairs with Evelyn close behind and come to another door. I look back over my shoulder and she gives me a nod to continue. Opening it up I come to stand in completely empty basement suite.\n\n\"What's this?\"\n\n\"You're new home.\" She says. \"Or so I hope.\"\n\nI turn to look at her. \"You...want me...to live here?\"\n\nShe lets out a nervous sigh. \"Well, I wasn't planning on showing you this so soon. I wanted to see how this time went, to see if what I felt was real, but...\" She looks around the common room where the kitchen, dining room, and living room were all attached. \"We had this done up for my grandfather. He lived here his last few years. We wanted him close but we knew he needed his own space. We never bothered to convert it back again. Alan and I in this big house, it's not like we need the space. It's been empty for a long time now.\"",
        "\"You...want...me...here?\"\n\n\"It'll be complicated. I will have to talk Alan into it, which won't be easy.\" She says. \"My husband likes quiet and he likes his privacy. If you are here you'll have to be on your best behavior.\" She steps closer. \"If I can convince him to rent the suite he'll leave all the details to me. He can't be bothered with stuff like this. I'll go through the charade of a process. We'll have to come up with some story of who you are and why you need to live out here in this neighborhood. A story that'll hold up. Neighbors and friends will ask questions.\"\n\n\"But...\"\n\nAs if reading my mind she says. \"I...I didn't know you were looking after your sister. I didn't know it was that sort of thing.\" She laughs, a sad laugh. \"There's so much I don't know about you. We're practically...strangers. I...I'm not sure what to say.\"\n\n\"Me neither.\" I look around me in disbelief.\n\n\"You said you couldn't do it anymore?\" She whispers. \"Neither can I. Thinking about you...out there. I've been so worried knowing about you and your new job. It killed me not knowing how you were. I tried to call you but Diane said that clients and talent only speak through her. I wanted to bring you here but we've been so busy.\" Closer she comes to me. \"I don't know how we make this work. All I know is that...I want my son under this roof. Under my roof. I want my boy here, with me.\"\n\nI bow my head, feeling terrible for doubting her and the things I'd said to her. \"Oh Mom.\"\n\nReaching out she takes my arms and squeezes them and gazes into my eyes. \"Is this real enough for you Donald?\"\n\nTo be continued..."
    ],
    "authorname": "grimbous",
    "tags": [
        "futa",
        "futanari",
        "mommydom",
        "gentle femdom",
        "romance",
        "drama",
        "taboo roleplay"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/son-for-hire-ch-01-11"
}