{
    "title": "Grace Ch. 12",
    "pages": [
        "Thursday rolled around quickly and it was time to work with Grace again on her essay. Sighing inwardly, I packed up my portfolio and headed to the parking lot. The sky was clear and blue, but a cold wind whistled between the cars and raised dust devils on the frigid softball field across the street. A stripe of dirty ice lay packed along the curb in front of all the cars. Winter in New England.\n\nI sat in the car for a few minutes to kill time before setting out. Ignoring the coming and going around me, I shook my head and thought back over the last few days. Grace spread out on a wide couch in the sunroom. Filling her with cum in her mother's bed. Grace's dad trying to be funny. Lindsey high as a kite and clinging to me in the paddle tennis shed. Jesus, this was a messed-up situation! Glancing at the time, I started the engine to break the cold and wondered how this would all play out in the end. Would Grace be jealous or unable to work with me? Would Lindsey become more than a romp?\n\nLindsey opened it six inches and I saw one eye and a sliver of blue bathrobe. I smiled.\n\n\"Can I help you?\" she asked in a suspicious voice.\n\n\"Yes,\" I replied formally, catching onto her game. \"I'm here to check the gas meter.\"\n\n\"Bullshit,\" she replied quietly. \"You're that creep who molested my daughter.\"\n\n\"That's true. But I still need to check the meter.\"\n\n\"Fine.\"\n\nI give her credit for maintaining her scowl for that long. When she opened the door, though, her resolve cracked and she snorted and smiled.\n\n\"Come on in,\" she chuckled.\n\nSo far, so good. I walked past her into the kitchen, pulled out a stool, and sat down. She raised an eyebrow at my presumption, but pulled the next one out and sat down, her elbow resting on the granite. I decided at that moment that the games had gone on long enough. Since I didn't see Grace anywhere, I spoke softly and earnestly.\n\n\"Lindsey, I feel like we have a lot to talk about, but I still have to work with Grace and get her through Law and Gov, right?\"\n\n\"I know that,\" she replied evenly. Her eyes were inscrutable.\n\n\"And yesterday was fucking incredible,\" I said with more pleasure in my voice.\n\n\"I know that, too!\" she said, her body visibly relaxing and a smile beginning to show.\n\n\"Nothing has changed between you and me because of what happened this weekend, okay?\"\n\nHer smile grew wider and she leaned forward with her eyes gleaming, much more herself.\n\n\"Okay. Fine. But you're still going to tell me all about it later.\"\n\n\"Yes, ma'am. Anything for a steady customer.\"\n\n\"You're an asshole. I'll go get Gracie.\"\n\n\"Thank you,\" I said, feeling much more relaxed myself.\n\nShe slipped off the stool and vanished upstairs while I got myself settled at the tutoring table. Grace showed up a minute later and sat down. She didn't get her books or laptop out, but turned quietly to face me.\n\n\"Are you okay?\" I asked gently.\n\nShe nodded, but her eyes were wide and serious. The usually bright green of her irises seemed darker today.\n\n\"What's up?\" I asked. \"Are you weirded out by the weekend?\"\n\n\"A little bit. I'm also kind of embarrassed about my dad still. And kind of...I don't know...weirded out again because of you and my mom.\"\n\nI smiled as genuinely as I could and stroked her knee.\n\n\"That's a lot to think about!\" I said to validate her feelings. \"So first things first. You're not responsible for your dad's behavior. I'm a big boy, and I can handle guys like that. Okay?\"\n\nShe nodded again.\n\n\"As for your mom...\" I began.\n\nHer eyes darted toward the stairs unconsciously.\n\n\"You said last week that your mom seemed happy, right?\"\n\nAnother nod.\n\n\"Well, it's no secret that she and I have been...seeing each other. Sometimes after you and I are done, and sometimes on other days. You guys have talked about that, right?\"\n\nA tiny smile flickered in her eyes, but she simply nodded in response and stayed silent.\n\n\"So that's a good thing, Grace. She makes me happy, and I make her a little happier, and it's not going to wreck your family or anything. If it's making you really uncomfortable, though, I will absolutely stop seeing your mom.\"\n\nShe shook her head just a fraction.\n\n\"No,\" she said quietly. \"I want her to be happy. And I know my dad is an asshole. And I know you're being really nice to her. We talk about...how you make her feel.\"\n\nI snorted gently, smiling back at her.\n\n\"I KNOW you guys talk about that!\" I laughed.\n\nShe giggled and looked more at ease. To finish up the awkwardness, I put my serious face on again and kept a firm hold on her knee as I spoke.\n\n\"The last thing, Grace, is you and me. What happened this weekend is something I will always treasure. You are young and beautiful and sexy as hell, and I've been fantasizing about you for ages. But we both know that kind of thing isn't supposed to happen, right?\"\n\nShe was silent again, but nodded seriously.\n\n\"Even if we had a great time,\" I finished.\n\nShe looked down at my hand and put hers over it, holding me gently.\n\n\"That's the problem,\" she whispered without looking up. \"I did have a great time. I've never felt that sexy or that...grown-up, or that happy after.\"\n\n\"Grace...\" I said with soft urgency, pulling my hand up between us to draw her gaze upward.\n\nI smiled and kissed her fingers, causing her to smile a tiny bit in return.\n\n\"Can I tell you something messed up?\" I asked her.\n\n\"Sure,\" she said with a puzzled look.\n\n\"I think your mom was pushing us to...get together like that because she wanted you to feel that way. The way she gets to feel sometimes. I'm not superman, but I do try and make a woman feel sexy and special and satisfied, and that usually means that I get to feel that same way. And YOU did that for me. You. Not your mom, not some fantasy girl. Grace made me feel that way by being sexy and grown-up and amazing. And it probably shouldn't happen again because we still have to work together and write this damn paper!\" I finished with a laugh.\n\nThat was a lot for the kid to process, I know, but I desperately wanted to shift gears away from her feeling conflicted about what we had done. Fortunately, she tracked along with my shift in tone and laughed, squeezing my hand again out of happiness. Before she could say anything in return, though, I added one last shot of humor to move us forward.\n\n\"And I'm still not taking you to the prom!\"\n\nShe rolled her eyes, which is all that deserved, then let go of my hand and turned to get her stuff out of the backpack beside her.\n\n\"Now where were we?\" I asked innocently as she opened her laptop.\n\nForty-five minutes later, Grace had a paragraph about Tinker v. Des Moines written out. It had taken a lot of coaxing and going over things she had already read and written to get there, but it was an acceptable if not perfect addition to the paper. Her phone started buzzing with about 10 minutes left of our hour, but she thoughtfully ignored it until the work was done. After her laptop was away, though, she couldn't resist and grabbed it with an apologetic glance toward me.\n\n\"Time for lacrosse?\" I asked with amusement.\n\n\"Yup,\" she replied absently, her thumbs flying. \"Katie needs a ride.\"\n\nHer eyes darted toward mine, but I kept my face neutral.\n\n\"Well, you did a great job, so you can get out of here and get her right now. Mrs. Day should be really happy with your work.\"\n\nShe grinned with relief at the early dismissal and the praise. I think she was also relieved that I hadn't made a thing about her mentioning Katie.\n\n\"Thanks, Mr. Robertson!\" she said as she got up from her chair. \"Are you...staying?\" she added uncertainly.\n\n\"If it's okay with you, I do need to talk to your mom.\"\n\nShe turned one toe inward and looked down for a few seconds.\n\n\"It's okay,\" she said at last. \"You make her happy, and that makes me happy.\"\n\nI smiled with relief.\n\n\"You're a good daughter,\" I said simply.\n\n\"She's a good mom. See you later!\"\n\nWith that, she was off across the kitchen, grabbing her jacket along the way, and then out the door with a quiet thud. Then my phone buzzed on the table. I tapped to open it and laughed. It was from Lindsey, and it contained four emojis: an eggplant, a taco, a tongue, and water drops. She was clearly learning kid codes! I sent back a drool face to show my enthusiasm.\n\nThe reply came quickly: \"Do you remember where the guest bedroom is?\"\n\n\"Yup,\" I texted back.\n\n\"Meet there.\"\n\nMore than happy to play along, I did as I was instructed and walked down the hall. Lindsey was waiting there still wearing her robe and looking delicious. She had two glasses of wine in her hands and a sultry smile on her face.\n\n\"Can you get the door?\" she asked, gesturing slightly behind her.\n\nI stepped past her and gallantly opened the glass-paneled door for her. The turned in a swirl of dark fabric and shapely calf and went in before me. She paused just inside the dark space and used her elbow to turn on soft lights.\n\nI moved past her and looked around while she nudged the door shut behind us. The dream house just got better and better, I thought to myself. The room was a mirror-image of the sunroom I had enjoyed over the weekend, but set up as a spa. One end had a wood-paneled sauna and a spacious tiled bathroom. The middle was taken up by two hot tubs--a round cedar Japanese soaking tub that was easily six feet across and a luxurious six-person spa studded with jets and headrests and LED lights. The air was humid and warm and smelled faintly of ozone. Large plants were dotted around the room--palms and succulents--and there were a few of the same wide couches the sunroom had. I grinned to myself and shook my head.\n\n\"Are you going to gawk at the plants all day or would you like some wine?\" I heard behind me.\n\nChagrined, I smiled and turned around. Lindsey was smiling archly, her eyes sparkling.\n\n\"Sorry,\" I said suavely, \"I was just wishing your house was bigger. I'm feeling cramped.\"\n\nThat drew the snort it merited. She handed me a glass and clinked hers against it in the process. We both took a sip and then she stepped closer, the knot of her belt nudging my groin.\n\n\"I will say this for my husband,\" she admitted in response. \"He doesn't mind how I spend his money. I just told him I wanted a hot tub.\"\n\n\"I'm happier about the him-not-being-at-home part of the equation\" I said with a leer, wrapping my free hand around her waist.\n\n\"That's because you're a pervert,\" she scolded. \"And you're wearing too many clothes again!\"\n\nShe kissed me quickly to take the sting out of her words, then took my glass and set both of them down on a tall metal plant-stand beside her.\n\n\"Come on,\" she said, tossing her head behind her. \"House rules--gotta shower before tub.\"\n\nShe whirled again and headed toward the bathroom. I smiled as always at her directness and followed her, shucking off shoes and socks as I heard the water start. By the time I was piling my clothes on a bench beside the bathroom door, steam was billowing out. When I was nude, I strolled into the bathroom and eyed the fixtures enviously. The vanity was topped with pale gray stone and had a bronze vessel sink. The floor was covered in enormous dark slate tiles, and the walls and shower were white subway tiles with dark grout. The shower was huge, too--a six-foot square with teak benches and multiple heads. Lindsey stood in the unglassed part of the entry, completely nude, with her weight on one foot and her arms crossed, framing her perky breasts and tight nipples. Her eyes were dark and smiling as I approached.\n\n\"Do you know what I've been doing while you guys were working?\" she asked softly, reaching one arm up to snake around my neck.\n\n\"I could guess,\" I smiled back at her, \"but I'm sure you'll let me know somehow!\"\n\nGrinning slightly, she twined her free hand in mine and drew it downward, letting go to place my palm against the smooth, firm rise of her mound. My fingers fell naturally along the contours of her pussy and I felt the slippery heat there. My own lips curled into a grin and I dragged my two middle fingers along her opening, gathering moisture before I curled them abruptly up inside her. She gasped and moved forward against me, trapping my arm as her own wrapped around my neck and pulled me back a step, tilting her face up for a kiss.\n\n\"You guessed it!\" she whispered, her lips moving delightfully against mine. \"I was warming myself up for you!\"\n\nI couldn't think of a good response, so I hummed happily into the kiss and kept stroking in and out of her. Lindsey arched her hips toward me and then turned slightly, lifting one foot to rest on the bench beside us. My hand stayed busy and she dropped one of hers to my growing cock. One breast was pressed firmly against my chest and the other nipple grazed my arm as she stroked her thumb up and down the underside of my shaft. My tongue darted between her lips in time with my fingers plunging inside her.\n\nAs soon as my cock was standing fully upright, Lindsey broke the kiss and stepped back.\n\n\"Fuck!\" she moaned softly, \"I need you to fuck me right now!\"\n\nAs soon as she said that, she turned around and braced her palms on the bench, her head resting against a thick towel that hung at the ready. She looked back over her shoulder as I stepped in behind her. I quickly stroked the backs of her thighs and then spread her ass cheeks, pushing my now-drooling cock against her. Neither one of us needed to tease, though, and I reached down and pushed the head down, sliding across the tight bump of her anus and slipping between the slick lips of her pussy. I had to widen my stance a bit to get the angle right, but when I was lined up, I leaned forward and slid into her firmly, burying myself with one steady motion. Our simultaneous groans echoed in the enclosed space.\n\n\"Don't fuck around!\" she growled, leaning down further to brace one shoulder against the wall. \"Fuck me right now and cum for me!\"\n\nAfter an hour with Grace and a quick build-up with Lindsey herself, I was more than ready to go along with her plan. I pulled almost all the way out and grabbed hold of her hips. Then I plunged forward again, her labia opening fully to let me in and her ass pushing back against me to make sure I got as deep as she wanted me. Her nails tickled my swinging balls briefly and then left as I started to pump into her. Once again, she was strumming her own clit as I started to fuck her in earnest.\n\nSteam billowed around me from the forgotten shower, making us both glisten with mist and exertion. The slapping of my thighs against her ass and the liquid sounds of our union filled the space around us. Her legs were close together which made her entrance as tight as her depths, so I knew it wouldn't take much to make me explode. I drank in the sight of her sexy back and the firm swell of her hips and ass thumping against me. To keep my mind occupied, I reached down for a minute and fondled her breasts as they swung in time with my thrusts, pinching her nipples periodically. When I started to feel my urgency rise, though, I stood up straighter, my thrusts lifting her up a bit as I held tightly to her waist and pumped myself into her. My thighs quivered with strain and pleasure and my breath began to rattle as I got close.\n\n\"Are you going to cum?\" Lindsey gasped below me.\n\n\"Any second!\" I told her, my eyes shut tight, straining toward release.\n\nUnbelievably, she pulled away from me, my cock popped out of her, and my eyes flew open.\n\nBefore I could say anything, though, she spun down to her knees and grabbed my cock, stroking my tightly and flicking her tongue all around the head and her fingers danced along my shaft.\n\n\"Give it to me!\" she whispered in a sexy, throaty voice. \"Give me your cum!\"\n\nWho could resist? With a sudden full-body spasm, I thrust my hips forward and grabbed the towel bar in front of me. Lindsey pulled her mouth off of me and kept stroking quickly so that spurts of cum flew everywhere as I throbbed, spattering her face, breasts, hands and arms. As my body relaxed, she stopped stroking and sucked gently on the head, giggling when her tongue tickled my almost-too-sensitive flesh and I flinched. Her fingers ringed my cock and pulled stray drops of cum toward the head where her quick lips and tongue gathered them in. She hummed happily as she cleaned me up and I stood above her breathing deeply.\n\nI stayed there in reverie for a long moment, but then I felt Lindsey shift against my legs and stand up between the bench and me. Her warm skin draped itself against my body and she nestled her face in my chest, holding me close. I felt cool spots where my cum had landed, but ignored the sensation in favor of the overall embrace. Is there anything better?\n\n\"Your heart is still pounding!\" Lindsey whispered into my chest hair, her warm breath stirring them.\n\n\"Are you surprised?\" I murmured against her hair.\n\n\"No,\" she replied, \"it's kind of gratifying!\"\n\nI snorted out a laugh.\n\n\"You've a very exciting woman and you make me really hot!\" I admitted.\n\n\"Right back atcha,\" she whispered back, tilting her head up so that her chin lay on my sternum. \"Let's get cleaned up and into that tub, okay?\"\n\nFive minutes later, I was neck-deep in the Japanese tub, perched on a convenient ledge. The water was right at the edge of being too hot, but as long as I didn't move much, it was amazing. Lindsey was just barely keeping her chin above the surface, and her arms floated easily in front of her. Her breasts bobbed and flashed through the ripples our gentle motions created.\n\n\"How was Grace today?\" she asked after a few minutes of basking.\n\n\"She's a little weirded out, but she'll be okay,\" I answered openly.\n\nLindsey smiled knowingly.\n\n\"How could she not be?\" she asked. \"She just got royally fucked by her teacher, and that same guy is doing that and more with her mom!\"\n\n\"So is \"royally fucked\" your phrase or hers?\" I asked with a leer.\n\nShe laughed, sending ripples across the steaming surface.\n\n\"Quit fishing for compliments and make a lap!\" she answered.\n\nI braced my feet and Lindsey swooshed her arms to guide herself into a turn that ended with her back against my chest and her sweet ass nestled against my groin. She lay back with a sigh and I felt the coolness of her damp hair against my shoulder and neck.\n\n\"Can you put your arms around me?\" she asked quietly.\n\nI complied, wrapping them just under her breasts and clasping each opposing wrist. Lindsey responded by bringing her own arms up to cross over mine, holding me in place.\n\n\"Okay!\" she sighed, settling back against me fully. \"I want you to tell me ALL about your weekend! I'm dying to hear your side of the story.\"\n\nI chuckled and gave her a squeeze.\n\n\"Is THAT what was making you so horny?\" I asked.\n\n\"A little bit,\" she answered quickly. \"Actually, kind of a lot!\"\n\n\"Well, good!\" I said gently against her ear.\n\nSpeaking softly, I told her all about getting Grace coffee, about our talk in the sunroom, our first tenuous kiss and finally the thrill of tasting her young pussy for the first time. Lindsey squirmed in my arms, clearly turned on by hearing about it again. Trapped beneath her in the scalding water, my cock hardened against the backs of her thighs.\n\n\"She said she came so hard she almost passed out!\" Lindsey vouchsafed with a giggle when I finished that part of the story.\n\nI chuckled and released my clasped hands to toy with her breasts, thumbing the dark pink nipples back and forth.\n\n\"Just another satisfied customer,\" I murmured modestly.\n\nLindsey reached down between her thighs and pinched the head of my cock, tugging it forward and up until it lay between them. Moving slowly and hissing slightly as the heat of the water hit her, she spread her legs wider and nestled the top of my shaft between her labia. A different kind of warmth spread across my sensitive skin. Lindsey writhed again and rubbed me firmly against herself. She kept it up as she started to talk again.",
        "\"She also told me that you made love to her after that right there on the couch. How was that for you?\"\n\n\"Oh, my God, Lindsey--how do you think? I was living my best teacher fantasy and Grace was riding my cock like a champ!\"\n\n\"Was she good at it?\" she asked slyly, glancing up at me.\n\n\"She doesn't have your finesse, but she was fine!\" I said loyally and truthfully.\n\n\"Such a gentleman,\" she snickered. \"Then what happened?\"\n\n\"Well,\" I said as I thought back to those moments, \"she rode me until she had another huge orgasm, and then she told me she wanted to feel what YOU had been feeling, so she said it was time for me to cum inside her. You can guess how much THAT turned me on, so I turned her over and let her have it!\"\n\n\"I'll bet you did, you horny fucker!\"\n\nHer hands held me firmly in place as she ground herself against me, squeezing with her thighs and humping just a little. I felt her lubrication spread across me and then vanish in the ozone-rich water of the tub.\n\n\"Then we rested for a little bit and I told her how wonderful she was, and then we did some work.\"\n\n\"I can't believe you made her do work!\" Lindsey said with a laugh.\n\n\"Hey--I'm being paid to do a job!\" I replied plaintively.\n\nLindsey's fingers tightened painfully on my cock as she laughed.\n\n\"Yeah!\" she snorted, \"that's what you were doing!\"\n\n\"No, seriously...she needed some time to process. So I gave her something to do.\"\n\n\"That's actually sweet,\" she said grudgingly. She stroked the underside of my cock more gently and added an accolade: \"I knew you were a nice guy. For a pervert.\"\n\nI couldn't help but laugh at the accuracy of both parts. Then a thought struck me.\n\n\"I guess I am a huge pervert,\" I confessed, taking firm hold of her breasts. \"But YOU,\" I said teasingly as I pinched and pulled her nipples, \"seem to be enjoying this a lot as well!\"\n\nLindsey gasped and smiled, then lay back against me again.\n\n\"If I thought it would work, I'd ride your cock right here and show you!\" she told me, twisting her head for a kiss.\n\n\"That IS a tragedy,\" I told her with a grin, \"but you can make it up to me later\"\n\n\"Finish your story and you can take me into the sauna!\" she replied.\n\nI leaned in for one more kiss and then twitched my arms to pull her back into a comfortable position. She continued to rub my cock between her lips, nudging her clit with every circle.\n\n\"So we had a snack,\" I continued with a chuckle, \"and then she took me upstairs. I followed her into your room and I almost laughed out loud when I figured out what she was up to!\"\n\nLindsey snorted but stayed still.\n\n\"And then we climbed up into your bed, Lindsey. The same place you and I were last week. And I made her cum so she was nice and wet again, and then she started to ride me, but I wanted to see her ass more and she was pretty happy with that idea, so I started doing her from behind.\"\n\n\"We talked about how much you like her ass!\" Lindsey told me with a giggle.\n\n\"Thanks, mom!\" I teased her.\n\n\"So then what?\" she prodded me.\n\n\"So then I got really turned on and I started fucking her hard and deep and smacking her ass.\"\n\n\"She LOVED that!\" Lindsey exclaimed, sliding herself up and down the top of my shaft. \"She said you were SO deep inside her that you were hitting her cervix and you were playing with her butthole and it was amazing!\"\n\n\"Holy shit, I knew she liked that!\" I said with equal enthusiasm.\n\n\"Who wouldn't?\" Lindsey asked rhetorically.\n\n\"Well, I fucking loved it!\" I resumed. \"I knew I was going to cum soon, so I pushed her down flat on your bed and fucked her hard--just like a grown woman--and pretty soon I was just pumping her full of cum and collapsing on top of her!\"\n\n\"God...I'm jealous of that little bitch!\" Lindsey hissed.\n\nHer hands were still busy under the water and she ground herself onto me with sharp little twitches of her hips.\n\n\"Kiss my neck!\" she whispered. \"Kiss my neck and tell me what it felt like to fuck Grace in my bed and cum inside her!\"\n\nI did as she asked, whispering hotly against her skin and nibbling and kissing between words. I told her how tight and hot her daughter's pussy was and how much I love lying on her bare skin and feeling my cock slipping and sliding inside her. Finally, I told her about how sexy and wrong it felt to realize that Grace was intentionally letting my cum slip out on her mom's side of the bed. That seemed to set her off as much as anything! With a frantic moan, she arched her hips and pushed the head of my cock inside her a few inches. Then Lindsey held my cock in place and rubbed her clit almost frantically as her stomach clenched and she rocked forward, trembling from the power of her orgasm. I felt the rippling clasp of her internal muscles and smiled against her back as I held her steady.\n\nWhen she finally relaxed, Lindsey's body sagged back against me and my cock was nudged out of position, coming to rest again between her thighs.\n\n\"Fuck!\" she whispered between shaky breaths. \"I wish I knew why this turns me on so much!\"\n\n\"You're a very sexual person,\" I said, kissing her shoulder. \"And it's a huge turn-on to hear about people you know having sex!\"\n\n\"I know that!\" she sighed. \"But the idea of YOU fucking HER is what really gets me!\"\n\n\"Okay, so you're a super-horny MILF mom who wants to see her daughter get royally fucked!\" I said with a laugh.\n\nOddly, Lindsey's body stiffened against mine. Then she leaned to one side so she could look me directly in the face. Her dark hair hung in a damp tousle around her face and her eyes were deep and serious.\n\n\"You're right, you know,\" she said softly and earnestly. \"I DO want to watch that.\"\n\nI knew she was serious, and I could tell the idea had taken her by surprise. The whole idea gave me a thrill deep inside, of course, but I had to let this one proceed at its own pace. To help her shift gears, I gave her a smile and kissed her lips softly.\n\n\"That,\" I said quietly, \"would be a dream come true. But right now, I'm naked in a hot tub with YOU and you promised me a rematch in the sauna!\"\n\nEver mercurial, Lindsey switched from serious to eager and giggled.\n\n\"Hot and steamy coming up!\" she said with a grin, leaning in to kiss me passionately.\n\nThe hot ripples swirled between us as she turned fully in my arms and straddled me. Then she planted her feet and stood up, her body rising up to tower over me, steaming in the cooler air. I lazed back against the side of the tub and gazed up, grinning, at the reddened skin of her breasts and belly. My hands ran up her legs to her waist and back down while she smiled down at me.\n\n\"Come on,\" she said in her normal voice, \"I'll grab us towels.\n\nLeaning over the edge, she extracted two fresh, fluffy towels from a cabinet built against the side of the tub. She passed me one and draped the other around her shoulders as she stepped over the edge and out. I stood up and followed her as gracefully as I could onto the mat. Then I snapped my towel out fully and while she dried her hair briefly, I swept my towel down her back and over her ass. She twisted around to grin at me and turned, standing up straight in front of me with her arms up by her head, offering her whole body to my touch. I smiled back and dried her quickly--shoulders, breasts, belly, thighs, and calves, kneeling to reach low enough to finish. While I was down there, I gave her belly a quick kiss and then stood up. With an easy motion, I wrapped the towel around my waist and tucked the end in to hold it. Unexpectedly, Lindsey did the same. Instead of tying her towel around her the way a woman usually does, she wrapped it man-style around her waists, her bare breasts gleaming in the soft light. It was irresistible.\n\n\"Damn!\" I said reverently, stepping close to brush my body against her breasts. \"You look good enough to eat!\"\n\n\"Hold that thought!\" Lindsey giggled, taking my hand and pulling me toward the sauna."
    ],
    "authorname": "outdoorhorny",
    "tags": [
        "mf",
        "cheating",
        "creampie"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/grace-ch-12-1"
}