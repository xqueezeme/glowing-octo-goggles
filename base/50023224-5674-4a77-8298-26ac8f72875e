{
    "title": "A First, My Friend's Sister Ch. 03",
    "pages": [
        "Jeanie led me by the hand into the hotel. My heart was racing in anticipation as we crossed through the lobby to the elevator. She led me inside and pressed our floor number. As soon as the doors closed she pulled me into her wordlessly. Our mouths found one another and we kissed passionately, tongues dancing in our excitement. When the doors opened we separated momentarily as we stumbled into the hallway. She fished into her little purse and pulled out the key card for our room.\n\nShe gave me a devious look as she slid the card into the lock. \"Can you believe this is happening?\" she asked coyly.\n\n\"I can't believe anything that happened tonight is real,\" I replied.\n\nThe lock clicked and she pulled the handle. I pushed the door open for her. \"Disappointed?\" she asked, raising her eyebrows.\n\nI shook my head. \"Wondering how I could be so fucking lucky, actually,\" I said.\n\nShe smiled seductively as she brushed past me entering the room. I stepped in after her and let the door swing shut behind me. I put the empty champagne bottle down on the desk, and deposited my jacket on the desk chair. No lights were on but the curtains were open and bright moonlight spilled in. Jeanie clicked on a light, but it made everything seem artificial.\n\n\"No,\" I told her, \"leave it off.\"\n\n\"Don't you want to see me?\" she asked smiling.\n\n\"Yes, I want to see you in the moonlight. I want see you the way you looked on Overlook Ridge, when we first kissed.\"\n\nShe clicked the light off and stepped into me, pressing up against me. \"That's so romantic, Jim,\" she said. I ran my right hand along her cheek and returned her smile. I let my hand caress her cheek and the back of her neck, while I ran my left hand up and down her arm, soothing her. I knew this moment had to feel monumental to her; I wanted her to know I was going to treat her kindly. We stared into each other's eyes for several moments.\n\n\"Are you scared?\" I whispered.\n\n\"No,\" she whispered back, \"I'm with you.\"\n\nI smiled. \"Jeanie, I want this to be wonderful for you. If you're not comfortable or if things feel like they're too overwhelming or anything, just tell me.\"\n\nShe nodded slightly, letting me know she appreciated the gesture. But I could hear her breath coming in shorter, quicker gasps. I knew her heart must have been pounding as hard as mine was. We stared at each other. There was nothing left to say. We'd shared an amazing night. I'd done the best I could to make it memorable, an evening she'd always cherish and remember. Now here we were. Everything we'd shared as friends and as admirers had led to this moment.\n\nI pulled her softly into me and kissed her deeply. She met my kiss with fervor, running her hands around my back and pulling me into her. We explored each other's mouths again, as we had so many times that evening. Again I found myself wondering how the hell it had come to this. I had begun the evening telling myself that I wouldn't lay a hand on her. That she was off-limits and that out of respect for her brother I would not let this happen. Now here I was, alone in a hotel with her, kissing her passionately, about to make love to her. I couldn't believe it was happening.\n\nBut she was right. I owed it to her to respect her wishes as well. And she had assured me that this was what she wanted, and that I was the right man for her to be here with. When I searched my own feelings, I knew I felt that as well. I did care about her. I wanted nothing but the best for her, and I respected her completely. I knew my intentions were good.\n\nOnce I told myself this, I let go of any inhibitions I had left. I felt her soft tongue searching my mouth and it was as though I melted into her. It's ok to want her, I thought. It's ok to want to touch her, to feel her, to explore her. You care about her. Genuinely and deeply. And she cares about you. It's ok to take her. She wants you and she's offering herself to you. Take her.\n\nAs soon as these thoughts entered my head, it was like a switch going off. I ran my hands down her back to her sides and lifted her up slightly, so that we were level and our kisses were straight on. She wrapped her arms around my shoulders and moaned, running her tongue in a circle over my lips. I let my hands drift down slightly onto her behind. She responded by wrapping her right leg around me.\n\nI could feel the firm roundness of her ass beneath the dress. My heart skipped a beat as I ground myself gently into her. I thought of the few layers of clothes between us and how easily they could be removed. Her beautiful dress, which she had looked positively gorgeous in all night, was just a thin, delicate piece of fabric. This airy little garment was all that separated me from the heavenly delights of Jeanie's femininity beneath.\n\nI squeezed her tightly to support her weight and began walking her slowly toward the bed. She moaned again when she realized what was happening. I was taking her there. I was taking her to where this evening was going to meet its inevitable climax, to where our destinies were leading us.\n\nWe got to the bed and I sat her down gently. We broke our kiss and looked into one another's eyes. I felt like I should say something reassuring.\n\n\"Jeanie...\" I began, but she cut me off.\n\n\"Jim, I want you.\" She said it quickly and authoritatively, dispelling anything I may have felt compelled to say. I put both hands on her face and just looked at her for a moment. Then I slowly and seductively ran them down onto her shoulders, slipping my fingers under the straps of her dress. I let my hands run lower onto her chest, moving agonizingly slowly. Her shoulders heaved with the depth of her breathing, anticipating my touch on her sensitive flesh.\n\nI ran my hands down under her dress onto her bare breasts, giving the tiny little handfuls a gentle squeeze. Her head dipped back, as though her neck suddenly became soft, and she exhaled deeply. I cupped both tits gently and squeezed them firmly. I let my thumbs trace little circles around her nipples, and I felt the sensitive flesh of her areolas begin to tighten and harden as the blood rushed into them. I was dying to see them, to slip the dress off her and see her beautiful breasts in all their glory. To pinch the nipples until they were engorged, to lick them, suck them, bite them. I could feel my eagerness boiling up inside me.\n\nI ran my thumbs over her nipples repeatedly. They had hardened to fullness and I tweaked them softly. Jeanie moaned deeply, and I pushed my mouth into hers. I gave her a little push and she fell weakly backward onto the bed, breaking our kiss. My hands slipped out from under her dress and I stood above her, gazing down at her lying on the bed.\n\nShe met my gaze for a moment, then broke eye contact, letting her eyes drift down to my crotch. My cock had hardened in my pants and I felt it twinge involuntarily as she stared at it. She looked back up at me and grinned deviously seeing my cock twitch. She grabbed me by my belt and pulled me down onto her. I let myself fall on top of her into a deep kiss. I pushed my tongue immediately past her lips and into her mouth, simulating exactly what I was absolutely dying to do to her. She accepted it willingly, curling her own tongue around it and sucking it gently with her soft, fleshy lips.\n\nShe ran both of her hands down my back onto my ass and squeezed hard. I groaned into her mouth and thrust my hips into her. She tilted her head back and broke our kiss, letting her tongue lick my teeth and lips erotically on its way out. \"Mmmmmmm, you don't even know how long I've wanted to grab this ass,\" she growled, fixing her gaze in my eyes, her jaw hanging open hungrily.\n\n\"Really?\" I asked seductively, raising my eyebrows.\n\n\"Hell yes,\" she groaned, \"you have the cutest little ass.\" She squeezed me again harder, her nails digging into my cheeks through my pants.\n\nI ground into her and turned her just slightly onto her side. \"Oh I don't even want to hear about cute little asses, girl,\" I responded, running my right hand down the small of her back onto her behind, pressing the heel of my palm into her crack and curling my fingers up, pressing the fabric of her dress between her cheeks. \"I've had to look at this perfect little butt for years knowing I could never touch it.\"\n\nShe smiled again. \"You really looked at it?\" she asked.\n\n\"God yes,\" I replied heatedly. \"I had to pretend I didn't notice how amazing you look in your jeans, how perfectly your tight, little sweatpants fit, how you'd wear those little short-shorts in the summer. You drive me so crazy with this cute little butt.\" I ran my hand under one of her cheeks and pulled it upward, squeezing it tightly.\n\nJeanie laughed and ground herself into me, swatting my ass with her hand. \"You lie!\" she laughed. \"You never checked out my ass.\"\n\n\"Oh yes I did, sweetheart,\" I assured her. \"I wanted to do this so badly it almost drove me insane.\" As I said this I gave her ass cheek a slap like she did mine and squeezed it again.\n\n\"Did I really drive you crazy, baby?\" she asked, smiling and biting her lower lip seductively and grinding into me again.\n\n\"God yes, you have no idea,\" I panted.\n\n\"Oh I think I have an idea,\" she said, renewing her own grip on my ass and squeezing harder. \"Is this what you wanted, huh?\" she asked, nipping my lips with hers. \"Did you want to grab my ass?\"\n\n\"God yes, sweetie.\"\n\n\"Did you want to squeeze it?\"\n\n\"So badly.\"\n\n\"Do you really want to feel it, huh?\"\n\n\"You know I do; I have for so long.\"\n\n\"Really? You wanna feel it like this? Is this what you want?\" As she said this she ran her hand behind her and in one deft motion pulled the back of her dress up so that my hand could fondle her bare ass. She held my gaze with hers as she did it to heighten the naughtiness of the moment. I knew she wasn't wearing panties; she'd told me so earlier in the night. So in the split-second it took for her to slip her dress up, I went from having a handful of her dress to having a handful of her bare flesh.\n\nIt was soft and yielding and warm to the touch. I moaned with the sexiness of the moment and kissed her aggressively. She used her hand to press into mine and encourage me to really squeeze her ass. I grabbed a full handful of her ample flesh and curled my fingers into her crack. Then she broke the kiss off suddenly.\n\n\"Ohhh yes,\" she moaned. \"Do you like that? Is that what you wanted?\"\n\n\"Fuck yes, Jeanie, it's better than I even imagined.\"\n\n\"Is it? You really like it?\" As she said this she pushed my hand further onto her ass, forcing it down deeper into her crack. I obliged and pulled her ass cheek open, then ran my fingers up into her crack and found the little soft spot in her crevice. I didn't push deep into her, but just let my fingertips gently caress her delicate area. She groaned and her head lolled backward onto the bed.\n\nI could feel tiny little prickly hairs around her little ring of muscle, and below it my fingertips just barely grazed the slick velvet of her sex. It was warm and moist, and I was overcome with the desire to dive into it. Instead I buried my face into her exposed neck and licked from her chest to her earlobe.\n\nMy cock was now rigid in my pants and I ground it into her again. In the heat of that passionate moment, Jeanie moaned and almost shuddered, then spread her legs widely so I could press between them. I felt her secret place open wide with my fingers, and I was dying to be inside it, but I didn't want to rush things. I slipped my hand out from under her dress and ran it up over her breast again.\n\nI simultaneously kissed my way down her neck to her chest. There I met my hand which was under her dress squeezing her tit, my palm pressing against her nipple, swirling it around brazenly. My fingertips were slick with her nectar and I licked the sweetness off each finger.\n\n\"Oh my god,\" Jeanie whispered. She was watching me. Her hair had come out of its perfect set-up and curly tendrils were hanging tantalizingly down in her face. She looked so incredibly sexy I could barely even breathe. I couldn't believe I entered this evening thinking I could possibly not lay a finger on this girl. She was unbelievably beautiful in that moment.\n\nI met her gaze for a second, then I slowly and seductively wrapped the shoulder strap of her dress around one finger of the hand I had on her breast. Her lips curled into a grin. I returned her grin then very slowly pulled down on the strap until the dress slipped down off her breast. I backed my hand away slowly and stared at her exposed tit.\n\nIt was gorgeous. It wasn't big, but she certainly wasn't flat-chested either. It was a delightfully perky little handful, and she looked indescribably sexy laying there with her dress half pulled down, and one breast hanging out. Her nipple was taut and erect, pointing slightly upward. It was dark brown, with a puckered areola encircling it. The flesh of her breast was slightly lighter than the dark, olive-colored skin surrounding it. Even though it was only May, she'd obviously already gotten some bikini time in the sun.\n\nI looked back up into her eyes. She was still smiling sweetly, but now her breathing was heavy. I held her gaze for a moment, then without warning I descended greedily on her nipple, pulling it into my mouth and sucking it eagerly.\n\n\"Ahhhhhhh,\" Jeanie moaned, and arched her back to meet my suction. I ran circular licks around her areola, then flicked her nipple vigorously with quick back and forth strokes. Then I pulled it gently between my teeth and sucked it hard. Under my ministrations, Jeanie began to grind her hips into me. I remembered our earlier session of dry-humping and realized almost immediately I wouldn't be able to do that for long without cumming in my pants.\n\nI re-positioned myself so that I was kneeling over her. I broke off my suction on her tit, and pulled her other shoulder strap down, revealing her other breast. \"Holy shit, Jim,\" she moaned.\n\nI just smiled at her and descended on her other breast. I gave it the same treatment I'd given the other, sucking it long and hard. I started gently, just caressing and massaging it with my tongue to make it stiffen. But soon I was pulling it with my lips and nibbling it between my teeth. The entire time Jeanie's head was rolling back and forth on the bed, moaning my name and squeaking softly.\n\nAfter several minutes I lifted my head again, breaking my suction on her breast. Jeanie put her hands on my chest. \"I'm so turned on, Jim,\" she whispered hungrily.\n\n\"Come here, sweetie,\" I said, taking her hands in mine. I stood up off the bed and helped her scooch to the edge and stand next to me. The straps still hung limply off her shoulders, but the dress fell back into place covering her breasts.\n\nI looked her in the eyes, still holding her hands. \"Can I take your dress off, Giana?\" I asked softly. I used her more formal name because I knew this was a point of no return. I wanted her to know that I was still that guy that she trusted enough to use that name.\n\nShe looked up into my eyes, nodded gently, and whispered, \"Yes.\" I ran my hands up her arms to comfort her, then I stepped to her side. I kissed her softly on her shoulder, and ran a trail of tender kisses along her neckline as I maneuvered slowly behind her. She let her head loll to the side as I kissed her neck, until I was standing directly behind her. I let my fingertips just barely graze the skin on her shoulder blades as I ran a line of kisses down her back. She shrugged her shoulders seductively as a little shiver ran through her. Soon I reached the top of her dress with my kisses, and the little zipper lay hidden there.\n\nI slipped my fingers in and slid the zipper painstakingly slowly down her back until I reached the top of her behind. The flaps of the dress swung open and in the moonlight I could barely see the downy little hairs growing from the small of her back down to the top of her crack. I bent down and made a meandering little trail of kisses all the way down her back to where the dress still hung. As I did so, Jeanie let a long, little moan escape her lips.\n\n\"Mmmmmm, oh Jim,\" she whispered. I stood up behind her and she turned around slowly. The dress hung limply off her, held on by just the spaghetti shoulder straps hooked on her arms. I looked her in the eyes, then hooked my fingers into the straps on her arms. I pulled them gently toward me to free them from her, and she dropped her arms slowly. Once I slipped them off her arms, only I had the weight of the dress in my hands.\n\nI let it fall forward, and her breasts fell free. Then I let it drop to her waist where it hung for a split second on her hips, and slipped away. I dropped the straps and the dress billowed to the floor, revealing Jeanie naked before me for the first time.\n\nHer breath came in shallow, ragged little gasps. My own heart pounded in my chest. Our eyes were locked for a moment in utter ecstasy. \"I'm naked, Jim,\" she whispered.\n\n\"I know, sweetie,\" I whispered back, letting my eyes drop slowly down to her exquisite body lit seductively in the moonlight. I drank in the heavenly sight. Her perky little breasts heaved slightly with her breaths, the dark brown nipples standing taut and erect. Her tummy was soft and just slightly swelled in the middle. It wasn't fat by any means; she was clearly fit and in good shape. But it had just the slightest, pleasant little roundness to it, swelling gently up around her navel.\n\nAnd below her little tummy was an absolute vision to behold. Once again her tan lines were obvious as the skin just below her waist was a little lighter than the dark olive skin around her midriff. Her pussy grew in a tight, curly little patch on her womanly mound. The patch was not large, but it grew thick and dense in a little triangle that narrowed as it approached the sweet chasm between her thighs. The hairs themselves were not long, but instead were tightly curled and grew thickly together in her patch. She had shaved the areas just to the side of her sex where her mound tapered down to her crotch and lips, but her little hairs grew to her clitoral hood, and down onto her outer labia. The sight of her beautiful womanhood made my heart skip a beat. So this was the alluring little mystery she'd left uncovered by underwear for me, I thought to myself. It was gorgeous.\n\nI stared at her sex for a moment, my mouth hanging agape. Then I looked into her eyes again. \"You're so beautiful, Francesca,\" I said breathlessly. I was having trouble breathing normally with my heart racing in my chest.\n\n\"Am I?\" she asked.\n\n\"God yes, you're gorgeous. So gorgeous.\"\n\n\"You're the first, Jim. You're the first to see me.\"\n\n\"Oh honey, I'm so lucky. You're amazing.\"\n\n\"I want to look beautiful for you.\"\n\n\"You do, sweetie, you did all night.\" I took her by the arms and pulled her toward me. \"You are absolutely breathtaking.\" I ran my hands down her arms then onto her back. Her skin was warm and soft and I let my hands roam down to the small of her back, holding her close to me.\n\nWordlessly she began unbuttoning my shirt. It was already untucked from our intense makeout session in the limo, and she was unfastening the buttons slowly but easily. She looked into my eyes.\n\n\"Can I undress you?\" she asked.\n\nI nodded eagerly. The moment was becoming real. No longer was our lovemaking some sort of distant, elusive fantasy in my head. Now it was becoming tangible. She was naked before me, unbuttoning my shirt. Soon I'd have to reveal myself to her. I hoped I wouldn't disappoint her. I hoped I would be as remarkable to behold as she had been to me.\n\nSoon she had my shirt unbuttoned, and she slipped it off my shoulders, letting it fall to the floor. She ran her fingers down my chest, letting her nails dig into my nipples as they raked past. Then she grabbed the bottom of my undershirt and pulled it upward. I put my arms up to allow her to slip it over my head, then helped her free it from my arms and tossed it to the floor. She stared at my chest and exhaled sharply.",
        "\"I've seen you without your shirt so many times, but I feel like this is my first time really seeing you,\" she said throatily. \"Do you remember last summer,\" she asked, pressing her palms into my chest, \"when you let me rub sunscreen on your back?\"\n\n\"Let you? I loved every second of it,\" I replied.\n\n\"Yeah, it was all I could do not to leave scratch marks down your back I was so turned on.\"\n\n\"Jeanie!\" I laughed. She smiled deviously and let her hands roam down my chest to my waist, where she curled her fingers around my belt. She brought her hands together slowly at the buckle, and slipped it free from the harness. She pulled it backward gently and the clasp popped out of the hole, then she unfastened it from the buckle leaving it open.\n\nMy heart pounded. This was it. She was looking down at my pants. She was going to take them off me. I could feel my cock becoming stiff and engorged. It wasn't like I'd been with that many women. I prayed she wouldn't be disappointed, that what I had would please her. I was just average; it wasn't like I had a huge dick. And with all her expectations, what if it came down to this last crucial detail and I let her down with my average cock? Part of me was overwhelmed with lust, while the other part was terrified of this revealing.\n\nShe unbuttoned my pants. I couldn't watch anymore. I let my eyes fixate on her beautiful little breasts and the erect nipples standing atop them. She pulled either side of my pants and the zipper ran down, buzzing audibly. I felt my cock push free from the confines of my pants. My boxer briefs would surely be straining to contain the throbbing erection within. Jeanie gasped slightly as she bent to push my pants down.\n\nI lifted my right leg back quickly and yanked my shoe off. Then I did the same with my left. Once they were off, Jeanie bent lower and slipped my pants down off my feet. I quickly did the same to remove my socks, and Jeanie stood up and looked in my eyes.\n\n\"You're really struggling to get out of your boxers down there,\" she joked, smiling at me. I appreciated her using a little humor to help relieve some of the tension.\n\n\"Yeah, I sure am,\" I laughed back. \"I just hope I don't look ridiculous.\"\n\n\"Ridiculous? Why would you think you look ridiculous?\" She looked deep into my eyes.\n\n\"Well, I guess I just hope that, you know, 'it' doesn't disappoint you.\"\n\nShe laughed. I gave her a confused look, but she put her hand on my arm soothing me. \"Can I tell you a naughty secret, Jim?\" she asked.\n\n\"Ok,\" I replied, lifting my chin a little in suspicion and raising one eyebrow at her.\n\n\"Well, that day I rubbed lotion on you, I might have also... seen you naked.\"\n\n\"Jeanie!\" I said flabbergasted. I wasn't actually mad but I was quite surprised. \"How?\"\n\n\"Don't be mad. Promise you won't be mad?' she asked.\n\n\"Oooooook,\" I said, eyeing her suspiciously.\n\n\"Well, you know how you changed into your swim trunks in our upstairs bathroom before we all hung out by the pool?\"\n\n\"Yeah?\"\n\n\"And well, you do realize that that bathroom is connected to both Tony and my bedrooms.\"\n\n\"Yeah?\"\n\n\"So, well, maybe I left my adjoining door a little bit open.\"\n\n\"Francesca Giana Delvecchio!\" I yelled jokingly.\n\n\"Don't be mad, Jim, you can't be mad!\"\n\n\"Why can't I?\" I asked. I wasn't really mad, but I did want to tease her about it.\n\n\"Well... because I really liked what I saw.\"\n\n\"Oh stop.\"\n\n\"I'm serious, Jim. There's no need for you to be embarrassed right now, or worried that you'll disappoint me. Because I've seen 'it'... and it is awesome. Took my breath away.\"\n\nI laughed. \"Well, little Jeanie, I must say I am very surprised by you.\"\n\nShe laughed as well, then got a saucy look on her face. \"Oh and by the way, if I haven't mentioned this already, your ass is pretty delicious too.\" After saying this, she reached behind me and gave my ass a good, hard slap.\n\nI pulled her into me, her breasts pressing into my chest, my cock standing rigid between us. \"Why you little sneak,\" I teased. She stood on her tippytoes to kiss me.\n\n\"You're not mad, are you?\" she asked sincerely. Hell, how could I be mad? It wasn't like I'd never looked at her lustfully. I tried to be good but there were lots of times when I checked her out, filthy thoughts running through my head.\n\n\"No, I'm not mad,\" I assured her. \"Actually, one time when we were playing in the pool, your boob totally slipped out of your bathing suit and I didn't say anything.\"\n\n\"Well, well, Mister Goody Two-Shoes checked out my boob and didn't tell me,\" she laughed.\n\n\"Yeah. And remember Easter weekend when we watched that stupid movie in your living room, and Tony and I were on the floor and you were on the couch... I could totally see up your skirt.\"\n\n\"Jim Stillman!\" she yelled.\n\n\"Nice white undies, by the way,\" I joked.\n\nShe slapped my chest but I caught her hands and pushed my mouth onto hers. We kissed passionately for several moments, until finally she broke our kiss. \"Ok, so I guess we're even?\" she asked.\n\n\"Even, my ass,\" I joked, \"you saw my dick and I got one little glimpse of a boob and some underwear? That's not even!\"\n\nShe rolled her eyes and smiled. Then, without the slightest hesitation, she took a step back and put her arms out. I drank in the glorious sight of her in all her nakedness. \"Ok,\" I said warmly after a moment, \"now we're even.\"\n\nShe smiled and stepped back into me. We kissed again. I was so grateful to her for turning what was a nerve-wracking moment for me into one that was fun. That sort of thing was quintessential Jeanie. But when we broke the kiss off she looked into my eyes seriously, holding my gaze. Slowly, almost imperceptibly, she hooked her fingers into the waistband of my boxers. She tugged it gently outward, freeing my erection from the elastic, and ran her fingers to my side. Slowly she bent at the waist and slipped my underwear down my legs. When she got them to my knees, she dropped them to the floor and lingered there for a moment staring at my erect cock.\n\n\"God damn,\" she exhaled breathily, \"it's so beautiful. So fucking hot.\" She let her eyes dip lower, looking at my balls hanging heavily below my dick. I had bought a grooming razor while at college and had started keeping myself shaved pretty trim. I could feel her warm breath tickling me as she exhaled. I was dying to feel her touch.\n\n\"Do you like it?\" I asked.\n\n\"Shit, yes,\" she replied. \"It's so pretty, and you shaved! I can't even stand it.\" She stood up, and looked into my eyes. Holding my eyes with hers she gently ran her fingertips up my shaft. I shuddered involuntarily and exhaled sharply feeling her soft touch. But I smiled to let her know how good it felt. She smiled back and let her eyes drop again. She ran her fingers up and down the length of my cock several times, just grazing my sensitive flesh softly and getting a feel for my stiffness. My cock grew harder at her touch. After several moments she let her hand dip under my balls and she cupped them in her palm and squeezed very gently.\n\n\"They're so soft,\" she whispered, \"so sensitive.\"\n\n\"That feels so nice, Jeanie,\" I whispered back.\n\nShe looked into my eyes again. \"Jim, I don't know what to do next,\" she said, her voice sounded almost apologetic.\n\n\"It's ok, sweetie,\" I said reassuringly, \"can we just do what feels natural? What feels right?\"\n\nShe nodded and let my balls go, running her hand softly up my cock once more. I kissed her. Softly at first, but soon our hunger started building, heightening the intensity. I held her close to me, our naked bodies pressed together. She ran her hands around my back and squeezed tightly. Then I cradled her and gently pushed her down onto the bed, holding her close to me and descending with her, never breaking our kiss.\n\nOn the bed we lay next to one another, kissing passionately and running our hands up each other's sides. I let my thumb drift down and caress her nipple gently as my hand made slow, sweeping moves back and forth from her chest down to her hips. She did the same to me, letting her hands slip onto my ass as she made her sweeps.\n\nI felt the lust building within me. I was here, naked on a bed with my best friend's sister, the girl I promised I wouldn't touch. But now, I couldn't resist her. The passion we'd shared all evening had built to this peak, and I wanted to know her. I wanted to explore her, to touch her, to taste her.\n\nI broke our kiss suddenly and lunged in to kiss her neck. She gasped and moaned my name. I pushed her gently but firmly onto her back and maneuvered myself on top of her, planting wet kisses, licks and bites on her neck and shoulder. Her head tipped backward and I licked her neck from her throat to her chin. I ran my fingertips over her lips and she kissed them, letting her tongue dart out and lick them softly.\n\nSuddenly and without warning I pushed myself slightly down and took her right nipple into my mouth. She squeaked excitedly. I ran both of my hands down her chest and cupped each of her tits, squeezing them savagely. I held the warm flesh of her right tit up and pointed the hard nipple into my mouth so I could suck it fiercely and squeeze it. Jeanie's entire body trembled as my mouth worked her tit erotically, nipping, biting and pulling on her engorged nipple.\n\nAfter several minutes, I switched to her left breast. She was moaning loudly and her hips had begun to buck uncontrollably. She was breathing methodically through her nose, her nostrils flaring wildly, as though she was straining to maintain control under my ministrations.\n\n\"Unnnnhhhh, Jim, that feels so gooooooood,\" she moaned.\n\nI sucked her nipple with a loud smack, then ran a trail of kisses down her belly to her navel. She grabbed my hair with both hands, both anticipating and being very much intimidated by what I was so very close to doing. I looked up at her from her belly and smiled.\n\n\"Are you ok, sweetie?\" I asked gently, letting her know everything was all right.\n\n\"Yes, I'm ok. It just feels so amazing, it's like almost mind-blowing. Like sensory overload.\"\n\n\"It's ok, Jeanie, I won't rush you into anything. You just tell me if you feel overwhelmed or if it's too crazy, ok?\"\n\n\"I'm ok, Jim, it's so good. But thank you for being so sweet.\"\n\nI smiled again at her, this time a little more deviously. She returned my smile with an equally devious one, and I knew she was ok. We were still each other, still good, understanding friends who'd known each other for years. But now, I wanted to make her feel sexy. I wanted to make her feel something amazing, something she'd never felt before, and let her lose herself in bliss.\n\n\"I'm going to kiss your belly button now, ok?\" I whispered seductively.\n\nShe nodded. \"Ok,\" she whispered back, her jaw swinging open slightly. I lowered my face to my task, Jeanie's fingers still tangled in my hair. I placed soft, wet kisses in a circle around her navel, relishing her warm, supple flesh. There was a doughy little cushion of softness above her hard muscle underneath, and I pulled little lipfuls of her into my mouth as I kissed her. Then I let my tongue trace a circle around her belly button, barely grazing her skin, before I plunged it into her navel and swirled it gently around.\n\nShe giggled. \"Ohhhh Jim, that's so good,\" she squealed. I pressed my mouth around her belly button as I let my tongue massage down into her, a sexy simulation of what I would do to her below. She pushed my head gently down, urging me to keep teasing her, her fingers squeezing handfuls of my hair.\n\nI made another loud, slurping smack on her belly button, then withdrew my tongue and kissed a little trail over to her side, where I rested my lips and nose in the slight indentation of her love handle. She turned a bit onto her side to give me access to her hip. I kissed another trail from her love handle up the ridge of her hip, where I gave her little circular, teasing licks. I was dying to kiss her down between her legs, but I didn't want to rush her. I wanted to show her how wonderful it can feel to have attention lavished on your entire body.\n\nI pulled her gently toward me, and she took the clue willingly, smiling and moaning in anticipation. She rolled onto her stomach, revealing her perfect little ass to me, just inches from my face. I relished the sight, drinking in every inch, every little detail. She had dark, downy little hairs growing from the small of her back down in a descending little triangle into her crack. They were subtle, just tiny little hairs, but they were incredibly arousing.\n\nI'd noticed them many times when we hung out by the Delvecchios' pool in the summer. Jeanie would wear skimpy little bikinis, allowing me to survey the details of her blossoming womanhood behind dark sunglasses. But I'd always put those thoughts out of my head as soon as they popped in. She'd be lying on her stomach sunbathing and I'd see those little hairs, and immediately an image of myself kissing them would pop into my head. But I'd squash it; I wouldn't let it become the distraction of a full-fledged fantasy.\n\nNow here I was, finally able to indulge my desires, and I was going to enjoy this. On the actual skin of her ass cheeks were light little hairs as well, even finer than the ones in her crack. Her cheeks swelled alluringly, fine round hills just a little doughy and cushiony, so exquisitely feminine. I ran both my hands down her sides and along the curves of her love handles and hips. I stopped for just a single, agonizing moment before I slid them onto both cheeks of her heavenly little ass.\n\n\"Mmmmmmm,\" she moaned, smiling contentedly, craning her neck back over her shoulder to watch me touching her. My jaw dropped open at the soft, billowy perfection of her cute little behind. I squeezed both cheeks with my hands to feel her ample flesh filling between my fingers. I had strong handfuls of her and I just shook them gently, amazed by how big and soft and cottony her flesh was.\n\n\"God your ass is a work of art, sweetie,\" I groaned excitedly.\n\n\"You like it?\" she laughed, her voice humming with desire.\n\n\"I love it,\" I replied hungrily, squeezing every inch of both cheeks repeatedly, kneading my hands into her ass cheeks like they were dough. \"Can I kiss it?\" I asked her seductively. \"Can I kiss your pretty little ass?\"\n\n\"Yes, please,\" she hissed eagerly. I wasted no time, descending almost desperately onto her cheeks and giving them soft wet kisses all over. I let my nose trace a line along those downy hairs from the small of her back down to her crack, enjoying their soft, tickly feeling.\n\nHow that ass had teased me, I thought to myself. How many times had I seen it squeezed obscenely into skin-tight jeans? How many times had I seen her sweatpants riding up into her crack, perfectly outlining those gorgeous feminine curves? How many times had her bikini bottoms ridden into her crack, giving her such an alluring little wedgie, revealing tantalizing glimpses of her pillowy flesh? And every time I'd had to temper myself. To squelch any images or any little thought of indulging in that pretty little ass. Now here I was, my desires that had built up like magma inside a volcano now erupting out of me.\n\nI ran my hands in circles, cupping her flesh and squeezing perversely, a thousand images playing in my head of times I'd seen it before and wanted so badly to do just this. I gave it light little swats, just to watch her cheeks jiggle, the ripples undulating her soft, doughy flesh. I was losing my mind. I would swat her, watch the jiggle, then bite gently into her skin and feel it jiggling against my lips. Her ass was beyond amazing.\n\n\"Mmmmmm,\" she squealed, \"you do like it, don't you?\"\n\n\"It's unbelievable, Jeanie,\" I replied, still squeezing her. \"It's so perfect. I've wanted to do this for so long.\"\n\n\"You should have, Jim,\" she stated. \"I wouldn't have stopped you.\"\n\n\"You know I couldn't, Giana.\"\n\nShe looked back at me, deep into my eyes. \"You can now,\" she said matter-of-factly. That simple statement encompassed our entire evening. She was right. There were so many reasons I could never touch her before. We were friends, she was Tony's little sister, we were too young... they all made sense then and they did keep us from ever indulging ourselves. But now, they simply weren't as meaningful. Yes, those issues were still there. But the bottom line was that we were both grown up now, and could both decide for ourselves how we would show our affection to whomever we chose. We were free to be ourselves; we were free to care for one another.\n\nI broke our eye contact and stared down at her gorgeous behind, my hands pressed into her cheeks, her flesh slightly pink from my kisses, squeezes and slaps. I pressed both cheeks slightly outward, revealing her little chasm in the middle. I didn't push hard; I certainly didn't want this moment to be vulgar. I just pushed enough to reveal a little of her secret place to me.\n\nHer hole was dark brown, with a larger ring of slightly lighter brown skin encircling it. The ring had a thin little circle of tiny, wiry black hairs growing out of it. The hole itself was tight and puckered, a tiny little fist of muscle. I descended slowly and ran a circle of soft kisses along the insides of her cheeks. Jeanie buried her face into the bed moaning, grabbing handfuls of the sheets in her fists. I didn't want to overwhelm her with this moment. I couldn't be too intrusive into her most secret place.\n\nI kissed slowly and softly until the tension left her, and she eased into my ministrations. Then I made light little licks around her ring, teasing the wiry hairs and feeling them tickle my tongue. I didn't want to go any deeper than her rim though. This moment could overwhelm her and I didn't want to take her too far. I just wanted to show her how much I admired her entire body, and give her a glimpse of how intense it could be to be loved in even your most secret, sensitive spot.\n\nI licked her rim in a circle several times. She moaned my name throatily into the bed. But I backed away before I took her too far. I pulled my tongue slowly out from her ass, and scooted downward on the bed slightly. I kissed the backs of her thighs. She pulled her head up and looked back at me again. \"Oh Jim, you're driving me so crazy,\" she moaned.\n\n\"Does it feel good, sweetie?\" I asked.\n\n\"Everything feels so amazing,\" she gasped, \"I'm in heaven.\"\n\n\"Not quite yet, baby, but we're getting there,\" I replied.\n\nShe bit her lower lip and smiled. I continued kissing her legs and made my way down behind her knees. I licked the smooth, sensitive flesh there and she bucked up off the mattress, pushing her butt upward into the air. She giggled as I licked and nipped her. Then I made a trail of kisses down to her calves and ankles.\n\nI picked her foot up and placed wet kisses from her ankle to her instep. I didn't want to overwhelm her and go to her toes. They could be very sensitive and very ticklish so I backed away and just held her foot, massaging it gently. I gave it several more soft kisses. She watched me as I kissed her. She had pulled a mouthful of sheet up from the bed and was biting it as she watched, her hair falling in little tendrils down onto her face. It was incredibly seductive.\n\n\"Turn over, sweetie,\" I whispered after several moments, a little half-grin on my lips. She met my grin and twisted over slowly onto her back. I let her foot go, then took in the beautiful sight before me. I was down at the foot of the bed looking up at this beautiful young creature laid out before me. She spread her legs slightly apart so she could see me, her face peering out just over the swell of her breasts, the little nipples like cherries resting atop. I let my gaze search up the length of her olive-colored legs, past the knees to the fleshy thighs, all the way up to her glorious sex.\n\nIt was shadowed in the moonlight, but I could see the dark patch of her pussy running down onto her outer labia, which were plump and pressed together, like a secret little doorway I had to open to get to the treasures inside. Her little triangle dipped low and ended in shadow where her buttcheeks pressed together and hid her lower bounty.",
        "I began planting wet kisses on both of her calves, each one moving slowly and steadily higher up her legs. Her shoulders heaved with the depths of her breaths, and soon I had reached her thighs. She spread her legs slightly wider and her sweet sex began to open more for me as well. I could see a glistening wetness on her lips, a little vertical stream running down her center.\n\nI ran long licks on both legs one-by-one, from her inner thigh all the way to where her leg met her mound. Her fragrance was absolutely intoxicating. The air between her legs was thick with her heady, musky aroma. I inhaled deeply and felt its moistness coat my nose and lungs. Her smell was rich and savory, with a tinge of sweetness within it as well, like warm honey. It was a smell that was all Jeanie, her own unique fragrance. I relished it, breathing deeply of her. Was I the first to breathe in that exquisite scent - the scent of her essence, tinged with her excitement, the sweet allure of her womanhood?\n\nI stared at her sex, then looked up into her eyes, They were wide and expectant, her right index finger hooked into her lower lip. \"Will you kiss me there, Jim?\" she whispered hungrily.\n\n\"Yes,\" I nodded. \"Do you want me to?\"\n\nShe nodded back. \"Yes.\"\n\n\"Are you sure?\" I persisted.\n\nWithout hesitation she nodded again. \"Yes.\"\n\nI leaned into her painstakingly slowly. The smell of her wetness was overwhelming; I felt my head swim. I pushed my lips onto her lips and kissed softly, never breaking eye contact with her. I heard her hands slap down onto the bed, and she pulled the sheets taut into her fists. But she kept her gaze fixed into my eyes. I gave her labia several long kisses, mimicking the same kisses I gave to her mouth. Her wetness was coating my lips and chin, but I refrained from licking her just yet. This was the first step; I had to introduce her to this slowly. So I kissed and kissed her, nipping her soft, fleshy labia between my lips. Getting just flashes of her sweet taste in my mouth by pulling and nipping her moist, pliable flesh.\n\nShe moaned throatily watching me. \"Oh my god, Jim,\" she groaned, \"oh my god.\"\n\n\"Does that feel nice?\" I asked her between kisses.\n\n\"God yes,\" she cooed, \"so nice.\"\n\n\"Can I lick you, sweetie? Can I taste you?\" I asked, knowing what her answer would be even before I asked. She was ready. Her body was taut and rigid and her juices flowed steadily and thickly from her beautiful valley. She was ready to feel what it was to have uninhibited attention lavished on her sex; I knew she was.\n\n\"Oh yes, Jim, please do it. I'm so ready,\" she moaned.\n\nI kissed her pussy again deeply, almost savagely, pushing her lips apart and coating my mouth in her sweet nectar. \"Are you sure you're ready?\" I asked, teasing her, my words muffled with my mouth buried in her womanhood.\n\n\"Fuck yes!\" she yelled expectantly, letting me know I need tease her no more. As if I needed another clue she pressed her hand into the back of my head and pushed me into her sex, her fingers tangling in my hair.\n\nI knew I could tease her no longer. I'd brought her into ecstasy and she was dying to know what erotic pleasures my mouth could bring her. I let her push my mouth into her sex and I licked her hungrily. On the first licks I left my tongue large, flat and wet, running it over her entire mound. I savored my first real tastes of her tangy juice. On each lick upward I cupped my tongue and brought a little pool of her honey into my mouth. She was flowing freely and I could savor copious amounts of her essence. She was tangy and salty with a wonderful little tinge of sweetness that stayed in my mouth once I was coated with her.\n\nShe moaned lustily with every lick. \"Aaaaahhhhh, Jim, aaaaaaahhhh, yesssssss...\"\n\nI lavished attention on every inch of her sweet sex. She arched her back and swept her head from side to side on the pillow, groaning with pleasure. I repeatedly licked both of her lips. I ran my tongue and mouth up onto her clitoral hood, even pushing it gently back slightly to find the little bud nestled beneath it. I gave her mound soft, wet kisses, nuzzling my nose in her pussy hair and feeling it tickle my cheeks and chin.\n\nThen I'd crane my neck downward beneath her and push my tongue between her lips to the entrance of her sweet chasm. I'd swirl it there and feel her open up. She lifted her right leg and rested it on my shoulder. Even from the soft ministrations of my tongue, I could feel how tight and tiny her little hole was. I was awash in ecstasy knowing I was the first to savor her precious sweetness, and that I'd be the first to enter her pristine womanhood.\n\nThe thought drove me absolutely insane. I brought both of my hands up between her legs and rested my palms on either side of her sex, pressing gently against her swollen lips. \"God, you are so beautiful, Jeanie,\" I whispered hoarsely, relishing the sight of her enflamed sex, swollen and wet from my kisses and licks. Very gingerly and lovingly, I used my thumbs to gently pull her outer lips apart and open her precious chasm wide for me. Her inner labia were thin and dark pink, and they slipped open widely for me like the petals of a delicate flower opening to meet the daylight. I gasped at the beautiful sight.\n\nShe heard me and asked, \"Am I ok, Jim? Do you like me?\"\n\nFearing that she misunderstood my reaction to seeing her treasure, I quickly reassured her. \"Oh my god, yes, you're better than ok, sweetie. You are absolutely gorgeous. I can't even tell you how beautiful you are.\"\n\nInstead of trying to tell her, I knew the only way to truly describe how much I admired her loveliness would be to show her. So I did just that. I lowered my mouth to the task, running my tongue in circles around her hole, gently massaging her inner lips. After each circle I'd give her one long, vertical lick from the entrance to her vagina all the way up to her clitoris, gathering a warm, sweet mouthful of her honey on every stroke. Her body quivered beneath me and she moaned my name. \"Ohhhhhh, Jim, that feels soooooo gooooooood.\"\n\nI turned her on for several minutes like this, moaning into her sex as I licked her, but soon my curiosity got the best of me. I held her open widely with my thumbs, and let my gaze fall on the little opening to her vagina. It was tight and closed, a little ring of soft, pink muscle gripping ardently. I used the index finger on my right hand to push against it gently. It yielded, but reluctantly, and only the very tip of my finger entered her. It was insanely tight, but velvety smooth to the touch, and my ecstasy was making me dizzy. I replaced my finger with my tongue, kissing and licking her hole deeply. I was able to push my tongue into her just a little bit, letting it swirl around gently inside her. She groaned throatily. \"Nnnnnnnggggggg, ohhhhhhhhh, Jim.\"\n\nI knew it had to be an incredibly strange, yet incredibly erotic, sensation for her to feel my finger and tongue enter her. I was going insane feeling her taut little muscle gripping so tightly around my tongue. Yet it was so satiny smooth that it sent waves of desire sweeping down my body into my cock, now rock hard in anticipation of feeling her firm smoothness.\n\nI slipped my tongue slowly out of her and she craned her neck down to look at me. I met her gaze, then slowly raised myself slightly to hover over her clit. I used my thumb to gently push back her hood, revealing her tiny, throbbing little pink nub. It stood taut and at attention, almost begging to be licked. I would give it what it wanted, I decided. I looked her in the eyes and gave her an absolutely devious, hungry look. She met my gaze just as hungrily, shaking her head slightly in disbelief, and in the next instant I dropped my head and sucked her swollen nub into my mouth.\n\nI licked and sucked it greedily, knowing very well that she was primed and ready to feel direct, intense stimulation on her most sensitive spot. Her body immediately tensed; she stiffened at the waist and grabbed the back of my head with both hands, urging me to give her the satisfaction she craved. A deep, guttural groan escaped her throat and told me she was reveling in the sensations I was lavishing upon her. \"Unnnnnhhhhhhhhh.\"\n\nI sucked her clit passionately, pulling as much of her tender flesh into my mouth as I could and letting my tongue lap over it repeatedly in tight, little circles. She bucked her hips in rhythm to my licking, meeting every stroke with a swirl of her hips. I ran my hands up underneath her, supporting her hips and ass as she ground against my face. I squeezed her ass gently, encouraging her, and she gripped my hair tighter, pulling my face deeper into her sex. Any timidity she felt going into this was quickly evaporating as ecstasy washed over her.\n\nThe moment was overwhelming me. Her heady smell was intoxicating as I dragged breaths in through my nose, buried in the bushy hair on her mound. Her tangy sweet taste was so heavenly, the animal flavor of her sex appealing to every base instinct within me. I felt myself drinking in her essence, consuming her like a predator would its prey. But in such a beautiful, erotic way.\n\nI knew she was cherishing every moment as well from the primal grunts and groans escaping her mouth, and from the spasmodic bucking of her hips. She raised her left leg as well, and wrapped both around my shoulders. I let her weight fall into the bed and brought my right hand around to massage her pussy lips. I used my index and middle fingers to spread her labia open, then dropped my mouth from her clit back to her little hole. I got her entrance as wet and lubricated as I could with several drooling licks, then I pressed my index finger gently against her tight opening. I watched it intently as I pushed it agonizingly slowly into her tiny cleft.\n\nThe taut little opening to her vagina yielded just a little, allowing my fingertip to slip inside. She moaned but I could tell it was pleasure not pain she was feeling. I fastened my mouth onto her clit again to let her feel intense pleasure, because I knew I had to find out just what her vagina could handle.\n\nIt was so tight and so firm, unlike anything I'd ever experienced before. I wasn't exactly a very experienced guy, but I'd had several lovers. Jeanie's sweet womanhood was very different from any I'd known before. It was tiny and tight as a little fist. I couldn't imagine fitting inside her. My cock, even while being average size, was still enormous compared to just my finger. But here she was, gripping tightly on just my fingertip. I had to see if she could handle more.\n\nWhile sucking her clit greedily, I pushed my finger ever so gently deeper into her. At first it felt like I wouldn't be able to, like her little muscle would hold me fast and not allow any penetration. But then it slowly relented and my finger gently slid deeper inside her. She grabbed handfuls of the sheet at her sides and sucked breath in through her teeth.\n\n\"Are you ok, sweetie?\" I whispered, easing off her clit for a moment but keeping my finger inside her.\n\n\"Yes... it feels so good, Jim. Don't stop.\"\n\nHer encouragement was what I needed to hear. I knew the sensation had to be almost overwhelming for her, so I wanted to move slowly to not scare her. I also now knew she was enjoying everything so I felt good about showing her more. I slid my finger slowly into her as deep as it would go, her tight tunnel gripping every inch of it firmly. My head swam just imagining how incredible that tightness would feel on my cock. I twisted my hand around so that it was palm up, and very gently I curled my finger inside her to press softly against the roof of her vagina.\n\nShe arched her back and propped herself up on her elbows to look at me, her jaw hanging open. I met her gaze, hoping she was still ok.\n\n\"Is this all right, Jeanie, are you ok?\" I asked.\n\nWithout saying a word, she simply nodded and exhaled breathily, still keeping her gaze fixed on my eyes. I curled my finger again, this time slowly pulling it slightly out of her. Then I sank it deeper again, and curled it to massage the soft, spongy roof of her sex.\n\n\"Holy shit,\" she moaned, \"that feels so fucking incredible, Jim.\" I smiled at her, then slowly dropped my mouth back onto her clit. I maintained eye contact with her as I sucked her tender little nub into my mouth, massaging it softly with my tongue.\n\n\"Fuuuuuuuuuck,\" she groaned and dropped her head onto the bed. I continued my ministrations on her, sucking and licking her swollen clit, while using my finger to gently stimulate the little sensitive spot on the roof of her pussy. After several minutes I gradually increased my pace a bit, maximizing the pleasure I was giving her. Her body began to tense up and stiffen, and she grabbed my shoulders with both hands, digging her nails into my flesh.\n\n\"Fuck, don't stop, baby,\" she hissed through clenched teeth and ragged breaths, \"don't fucking stop.\"\n\nI'd never heard Jeanie so raw and intense as she was in that moment. Even when her anger with her brother exploded, she still never really swore or let her animal side out. Sure, she was firecracker, but it never seemed like she became uncensored. It was probably because she never wanted to show true emotions in front of her brother because he would surely use them as ammunition to further ridicule her. Here, though, there were no such constraints. Jeanie was letting herself go and it was beautiful to behold. Her reactions to our lovemaking were pure; it was almost like I was seeing the real Jeanie for the first time.\n\nI kept my pace steady and firm for her, my tongue and mouth sucking her throbbing clit luxuriously while my finger stimulated her insides. Her body was stiff with tension and she dug her nails into my back, a string of profanities shooting obscenely from her mouth with each quick breath.\n\n\"Fuck, Jim, shit, so fucking good, nnnnnnn, don't stop...\"\n\nI stayed with her as her moment built, her hips bucking in a slow, smooth rhythm, every muscle in her body rigid. Finally, after several intense moments, I felt her body release. It wasn't a full, glorious explosion. It was more of a hesitant little unclenching, as her tiny pussy spasmed several times on my finger then relaxed.\n\nThis was pretty much what I expected. In what little experience I had with women, I knew that the first time was always a bit strained. She needed to not only trust me, and that I genuinely just wanted to see to her pleasure without judgment or expectations, but also to trust herself. If this was Jeanie's first orgasm with another person, and I assumed that it was, then she had to trust herself and her own body's reaction. Even if it wasn't her first with anyone else, it was her first with me. So that meant she had to build that level of trust.\n\nI expected that and was very ok with it. I let the little waves wash over her, moans escaping her lips like she was singing a soft tune. \"Oooooooooooohhhh, mmmmmmmmmmm...\"\n\nWhen the waves subsided I gave her clit a final kiss and slid my finger slowly out of her. She lifted her head off the bed and smiled down at me. \"Jim, that was so nice,\" she said dreamily.\n\n\"Did it feel good, sweetie?\" I asked.\n\n\"Mm hmm,\" she hummed approvingly and giggled. Almost immediately, she grabbed me by my hair and gently pulled me up to lay face-to-face beside her. She kissed me softly, running her lips and tongue seductively around my mouth. I knew she must have tasted her own sweetness on my lips, and the thought sent a jolt running through me to my cock. I was hard as a rock, wanting desperately to grind against her.\n\nWithout warning she turned quickly onto her side and pushed me flat against the bed, never breaking our kiss as she did so. She grabbed both of my hands and held them flat against the bed above my head, sliding her leg between mine.\n\n\"I'm gonna do bad things to you now, things I've wanted to do for so long,\" she growled into my mouth as we kissed.\n\n\"Fine by me,\" I grunted back. Immediately she broke our kiss and descended on my neck hungrily. She ran soft, sensuous kisses along my neckline and to my shoulders. She found my ears, nibbling, sucking and licking them with soft, seductive flicks as I groaned. Then she dropped suddenly down to my chest, biting my flesh and nipping her way to my nipple. She ran her tongue in warm, wet circles around my nipple, and I ran my hand into the hair on the back of her head, showing her how thoroughly she was turning me on.\n\nWithout hesitation she fastened her mouth on my nipple and sucked greedily, sending a volt of electricity running through me. I groaned and pulled her head closer to me, making sure she got the message to suck me hard and strong. She complied eagerly, biting my hard nipple gently while increasing the suction with her mouth.\n\n\"Nnnnnggg, damn Jeanie,\" I moaned, \"that's so nasty.\"\n\nShe pulled my nipple savagely between her tongue and teeth, and popped off it with a loud slurp. Then she repeated the same treatment on my other nipple, grinding it in her mouth and driving me into an erotic frenzy. After several moments she slipped off that nipple with a loud smack as well. She looked up at me with a naughty grin on her face. I just grinned back, dying to feel what she would give me next.\n\nStill grinning she began kissing a soft, wet trail down my chest to my belly. She gave me teasing little licks with each kiss until she reached my navel. There she circled her tongue in a long, erotic kiss around my belly button, flicking me seductively with the tip of her tongue. I laughed and groaned simultaneously feeling her seductive little ministrations. She laughed back but by the look in her eye I knew she was ready to stop teasing me.\n\nShe pushed herself lower and gave me soft wet kisses on the sensitive skin where my legs met my torso, then let her mouth hover just over my throbbing cock. I was absolutely dying to feel her warm mouth on my manhood, and my breaths were coming in ragged heaves. I could feel her soft breaths tickling the sensitive tip of my cock. I grabbed two fistfuls of the sheet in anticipation.\n\nJeanie looked up at me, her own shoulders heaving in anticipation. \"Jim,\" she said, \"if I don't do it right...\"\n\nI immediately interrupted her. \"Jeanie, you have me so turned on. Don't even think about doing it right, sweetie; I'm just going crazy to feel you. What you do to me will feel so right, I promise you.\"\n\n\"Really?\"\n\n\"Absolutely. You are so amazing, Giana.\"\n\nAt this she smiled sweetly up at me. Then she raised her left hand and wrapped it gently around my shaft. She propped her weight onto her right hand and held herself just over my cock. I dropped my head to the pillow and arched my back slightly, anticipating the glorious sensation that would follow.\n\nVery softly, and very gently, Jeanie kissed the tip of my cock. She gave it several sensual, loving kisses, barely opening her lips to nip and massage it. I knew it must have been slick with pre-cum, and I heard Jeanie licking her lips slightly, getting her first taste of me. After several moments I felt the warm, velvety softness of her tongue running down the underside of my cock, just below the tip. Then she arched her neck forward and I felt her full, soft lips wrap around the head of my erection, drawing it into her hot mouth.\n\nThe sensation was heavenly. Her mouth felt impossibly warm on my cock as she let her tongue circle the tip several times. She lowered her head slightly and my cock sank deeper into her mouth, her tongue gently massaging the underside as it slipped into her. Then she gradually backed it out, keeping the suction on it firm and stimulating. With a little pop she let the tip slip out of her mouth.\n\n\"Does this feel good, Jim?\" she asked in a whisper. As if my groans and my back arching weren't answer enough, I growled a simple reply back to her.",
        "\"Hell... yes... Jeanie.\"\n\nWith that she dropped back to her task, wrapping her mouth around my cock and pulling me into her. Gradually she increased her up and down rhythm and the depth of insertion. She worked her hand along my shaft as well, gripping me firmly as she bobbed up and down.\n\n\"Holy shit, sweetie,\" I moaned, \"you are so amazing.\"\n\nShe groaned approvingly on my cock but kept her suction tight and didn't break rhythm. She worked into a steady pace, sinking my dick deep into her mouth, then pulling it out to the head which she would hold firmly but gently between her teeth and flick teasingly with her tongue, letting the very tip of her tongue split and massage the hole at the top.\n\nMy mind swirled in ecstasy. I thought this couldn't be the first time Jeanie had given head; she was too unbelievably good at it. How she knew the right pace and the right amount of pressure to apply to get me rock hard, how she deftly and knowingly found every sensitive spot and stimulated it erotically. But I didn't give a shit whether this was her first time going down or not. I was losing my mind to her ministrations, and I felt the explosion building quickly inside me.\n\nJeanie quickened her motions slightly, as if she sensed what was building within me. She let the spit run from her mouth liberally, lubricating her hand as she jerked me with every stroke. She took my cock deep into her mouth; it hit the soft flesh at the back of her throat on each insertion. She hummed and moaned each time she plunged it into her, only increasing the intensity of the pleasure she was giving me.\n\nSoon I realized how imminent my orgasm was. If I didn't stop her immediately I was going to explode in her mouth, and I didn't want to deflate the moment by losing myself so quickly. I wanted to make this night special for her, not awkward by letting what I knew was going to be a huge load spill down her throat.\n\nI stopped my thrusting and took Jeanie's head gently in both hands to slow her rhythm. She bobbed several more times up and down the length of my cock, then eased her pace gradually until she let it slip from her mouth and just held it gently in her hand.\n\n\"What's wrong, baby, is it not good?\" she asked, somewhat breathless.\n\n\"No, sweetie, it's amazing. It feels so incredibly good, that's the problem. I want to save it. I want this to be about us, not just me.\"\n\n\"But you made me feel good; I want to make you feel good.\"\n\n\"I know, and you have. You are.\" I pulled her head gently up so that we were face-to-face. I kissed her softly. She let my cock slip from her fingers and ran her hands across my back. I broke our soft kiss gently and gazed into her sweet brown eyes.\n\n\"It's time, Jeanie,\" I whispered, \"I want to make love to you.\" She smiled adoringly into my eyes and bit her lower lip. I had to make sure she was ready for this moment. \"Do you want me?\" I asked, afraid that having come so far she might now be intimidated, that the moment might finally be overwhelming her. But, it turns out, I needn't have worried.\n\nShe smiled again. \"I want you, Jim, so badly. I'm ready.\"\n\nI pulled her mouth onto mine and kissed her deeply. She dug her nails into my back, urging me to take her, to build our desire to its peak, to the inevitable conclusion we both anticipated and craved. I pushed forward into her body and she leaned back, taking my weight on top of her, never breaking our kiss. I pressed against her warm, naked body, sliding my hands beneath her and pulling her into me. Our tongues danced in one another's mouths, both moaning and grinding into each other passionately.\n\nI maneuvered myself on top of her, my hands cradling her head, fingers tangled in her hair. She spread her legs and pulled me down close to her, welcoming me. My cock was rock hard and I let it rub against the insides of her thighs. Her breathing became heavy, the gravity of the moment sinking into her. I broke our kiss and stared into her eyes, reassuring her that she would be ok with me; I would take care of her. But even I wasn't sure how to proceed from here.\n\n\"Jeanie,\" I began, unsure of how to broach the subject, \"I don't have a... you know...\"\n\nShe just smiled. \"What?\" she asked coyly.\n\n\"You know, protection. I don't have...\"\n\nShe smiled again. \"It's ok, I'm protected,\" she whispered. \"I'm on the pill.\"\n\n\"Wait, how...\" I began, but she pulled me into a soft kiss.\n\n\"Just relax,\" she whispered, \"you're supposed to be the calm one right now.\"\n\nI had a million questions in my head, things I didn't understand. But she pressed her lips to mine again and I felt her tremble just a little, and I knew that in this moment I had to be strong and guide her. So I buried the questions in my head and kissed her back, holding her shoulders firmly in my hands. She moaned into my mouth and the moment grew erotically. She squirmed beneath me, spreading her legs wider and running her foot up the back of my leg. I felt the warmth emanating from between her legs and I let myself sink down onto her soft body.\n\nI thrust my hips gently and let my cock rub between her lips, getting it slick with her juices. Her pussy was delicately soft and soaking wet, beckoning me. I stayed my desire, keeping my movements slow and deliberate, though the fire was raging within me. I was dying to take her deeply, to sink myself into her tightness and let myself explode. But I remained gentle with her; her love was a flower that I could not crush with aggression. So I just let my manhood slide softly between her labia for several moments, building our passion and allowing her to become comfortable with the sensation and my size.\n\nShe smiled at me. \"That feels nice,\" she whispered.\n\n\"Are you ready, sweetie?\" I whispered back, not breaking the smooth, gentle rhythm of my cock gliding between her lips. By now it was coated with her wetness, slick and lubricated, ready to slide inside her.\n\nShe nodded to my question, and gave me an intense, ready look. Our eyes locked together. I balanced myself in position on one elbow and slid my other hand down to the base of my cock. I steadied it there and guided it into position. I let it slide brazenly between her lips several more times, pressing against her plump labia and opening her up to me.\n\nShe sucked in a broken breath of air, a little gasp anticipating this sweet moment. I held her gaze as I positioned the tip of my cock at her tight entrance. I could feel the taut muscles guarding her hole, gripping me tightly. For me, I knew this feeling would be exquisite. I just hoped it wouldn't be too unpleasant for her, that any pain she might feel wouldn't overwhelm the pleasure.\n\nShe dug her fingers gently into my back and inhaled. She trembled slightly as she drew breath, but I held my breath for the moment. I pushed gently forward with my hips and I felt her muscles spread slowly apart and draw me in, just the tip at first, held in her pussy's first tight embrace.\n\nShe exhaled in a long, slow breath, groaning softly. I pushed just an inch further into her and stopped, bringing my hand up to her cheek, using it to cradle her face. I stared into her eyes.\n\n\"Are you ok, Giana?\" I whispered.\n\nShe nodded. \"I'm ok. It's really big.\"\n\nI smiled. I wasn't all that big, but I'm sure I must have seemed that way to her.\n\n\"I'm inside you, sweetie.\"\n\n\"I know.\"\n\n\"Can I keep going?\"\n\nAgain she nodded. \"Just go slowly, ok?\"\n\nI nodded and kissed her softly. As I kissed her I let my cock sink another inch inside her, willing myself to go as slowly as possible. It wasn't easy. The feeling of her soft insides was incredible. She was so unbelievably tight and warm; I was dying to ravage her. But I had to be patient and let her get used to me, to become accustomed to having something the size of my cock within her. So I just reveled in the feeling of her little pussy gripping me tightly.\n\nShe kissed me passionately as she grew accustomed to feeling me inside her. She ran her hands up and down my back as I cradled her face in my hands. I couldn't believe this was happening; how was it even possible that I was fucking my best friends' sister right now, a girl I had known for years, a girl I swore I wouldn't lay a finger on?\n\nI let myself sink another inch inside her. She gasped into my mouth, but she adjusted to the feeling in a moment and pushed her tongue into my mouth brazenly. I met her forceful kisses, massaging her tongue in my mouth and letting my hands slide back into her hair. I pulled her hair back gently and she arched her back, simultaneously bucking her hips slightly and taking more of me into her.\n\nThis time she moaned loudly. \"Mmmmmm, god you feel so good,\" she groaned.\n\nI pushed further into her, letting myself sink in another inch. I groaned as well, feeling the firm tightness of her virginity wrapped around my manhood. \"Nnnnnnnn ooohhhh, Jeanie.\" I couldn't hold myself back for much longer. The exquisiteness of the sensation was overwhelming me.\n\nI dropped my head onto her breast and pulled her taut little nipple into my mouth. She gasped and dug her nails into my back. That put me over the edge. I bucked my hips forward involuntarily, burying my cock into her as far as I could go.\n\nShe squealed loudly, but I held my position inside her, not wanting to thrust wildly and cause her pain. Slowly her body relaxed and her muscles softened as she became accustomed to having all of me inside her. I let her nipple slip from my lips with a loud smack then kissed my way over to other breast, drawing that nipple in to nip and suck it lovingly, swirling my tongue in circles around her erect nub. She moaned approvingly.\n\nAfter several moments, I let her nipple go and looked her in the eyes. \"This is it, sweetie, I'm as far in as I can go.\"\n\n\"It feels so good, Jim,\" she said breathlessly.\n\n\"You feel incredible, Francesca, so fucking incredible.\"\n\n\"Yeah?\" she asked, her eyebrows raising.\n\n\"God yes,\" I groaned.\n\n\"Then fuck me, Jim.\"\n\nI stared into her eyes in amazement. Was she really ready? I didn't want to hurt her. But her look was burning with intensity; I could tell her entire body was pulsating with desire, just as mine was. I held her gaze. \"Really?\" I asked.\n\n\"Fuck yes,\" she replied defiantly.\n\n\"Oh my little dirty girl,\" I whispered hoarsely, pressing my mouth onto hers. I moved my knees up slightly under me to better position myself with leverage. She wrapped both of her feet around the backs of my legs, urging me to take her. And I would. Oh god, how I would have this girl, I thought to myself. I was more turned on in that moment than I'd ever been in my life. Hearing sweet little Jeanie tell me to fuck her ignited a blazing fire within me.\n\nI slid my cock slowly out of her to the tip, then glided it equally slowly back into her. She broke our kiss off and glared into my eyes, daring me to give it to her. So again I repeated my motion several more times, backing out to my very tip, then burying back into her to the hilt, increasing speed slightly on each thrust. Her pussy was impossibly tight and soaking wet on my cock. The sensation was glorious; I'd never felt anything so incredibly perfect. She was so velvety soft and warm, her insides a tight little sheath of silken smoothness on my cock. After several moments, we settled into a slow rhythm, pressing into each other softly.\n\n\"Are you ok?\" I asked her, not breaking our smooth, comfortable pace.\n\n\"Oh god yes, Jim,\" she panted, \"this is what I dreamed about.\"\n\n\"It doesn't hurt?\"\n\n\"No, it's just a little hurt. But it gets less and less every second.\"\n\n\"Oh sweetie,\" I groaned, and kissed her softly. Gradually, as she got used to the sensation of having me in her, she began to meet my thrusts with her hips. Soon our hips swiveled in unison as I sank rhythmically into and out of her sweet womanhood. She couldn't seem to figure out where to put her hands though. Almost alternating on each thrust she would run them up and down my back, then onto the bed where she would grab handfuls of the sheet.\n\nShe moaned in unison to our rhythm, sometimes a low, guttural groan, sometimes a high, gasping squeak. She even giggled every few moments, moaning my name. \"Mmmmm, Jim, I can't believe this is really happening,\" she cooed.\n\n\"This feels so fucking good, Jeanie,\" I groaned.\n\n\"Oh god yes, give it to me.\" Hearing Jeanie urge me on was driving me over the edge. She dug her heels into the backs of my legs, willing me to fuck her with everything I had. I spread my legs slightly to distribute my weight more evenly, then increased the rhythm and depth of my thrusts. Jeanie responded immediately by groaning deeply and arching her back to meet my deep penetrations.\n\nHer pussy felt indescribably good. The taut ring of muscle at her entrance gripped my cock firmly, loosening slightly as I plunged in, then tightening strongly as I withdrew. The sensation was heavenly, feeling her tightness gripping me on every thrust, but plunging into a velvety soft sheet of satin inside her. She was so tight, so soft, and so warm I had to will myself not to get too excited. As I increased my rhythm, I could already feel my explosion building within me. But I had to hold out; I had to make this memorable and beautiful for her.\n\nI ran my fingers into her hair and kissed her. She moaned into my mouth as I kept every thrust into her deep and long. Then I ran my hands down her neck, over her shoulders, and onto her breasts, squeezing her stiff brown nipples between my fingers. I gave her one more long thrust, then held my cock deep inside her. I gazed into her eyes as we both panted trying to catch our breath.\n\n\"Is this good for you, sweetie?\" I asked, sucking in air rapidly, trying to calm my pounding heart.\n\nShe nodded. \"It's so good, Jim, you feel so good inside me.\"\n\n\"No more pain?\"\n\nShe shook her head no, still holding my stare with her own soft brown eyes. I began to slowly pull out and push into her once more, gazing deeply into her eyes. I kept each thrust excruciatingly slow, denying myself the hard, fast pounding I was dying to give to her. She met my rhythm with slow, deliberate swivels of her hips in unison with each long, deliberate thrust I gave her. We both groaned softly as we stared into each other's eyes, fucking one another slowly but passionately.\n\n\"Do you want to try something?\" I asked after several moments. She raised her eyebrows as though she expected me to suggest something freaky, but I immediately smiled, placating her fears. \"No,\" I said, \"nothing weird. It'll be nice.\"\n\n\"Ok,\" she whispered, smiling.\n\n\"Do you want to be on top?\" I asked.\n\nShe nodded enthusiastically. \"I really do,\" she said eagerly, \"but I'm just worried I won't be good. I mean, I don't know what I'm doing.\" \n\n\"Francesca,\" I said reassuringly, \"look at us. We're making love.\" We both looked down at our bodies, writhing and pressing together in unison. I had her breasts in my hands, my thumbs pushing into her hard nipples. Below, I watched my cock sliding slowly into and out of her sex, her little tuft of pussy hair matted and wet from our lovemaking. I heard her breath catch in her chest as we watched ourselves.\n\n\"Isn't it beautiful?\" I asked.\n\n\"God, yes,\" she nodded.\n\n\"Nothing we do right now could be wrong, sweetie, because it's me and you. So you just do what feels good for you, and I promise it will be good for me too.\"\n\n\"Really?\" she asked, pressing her nose into mine and drawing my eyes to hers.\n\n\"Definitely,\" I promised.\n\n\"Ok, then.\"\n\n\"Ok, so just follow my lead.\" I sank my cock as deeply into her as I could, enjoying the sound of her throaty moan as I did so, then I moved her legs gently off the backs of mine and let them rest on the bed. I put one hand on her waist and the other on her shoulder and gradually began to tip her to one side.\n\n\"What are we doing?\" she asked.\n\n\"Just trust me. I don't want to be out of you for a second, so just roll on top of me, ok?\"\n\nShe giggled and kissed my lips. \"Mmmmm, ok,\" she groaned. We continued our roll slowly, as she slid out from under me carefully, holding me inside her. Then, in one final quick movement, I tumbled onto my back and she mounted me, never losing my cock from her pussy's firm grasp.\n\nShe giggled again as she lay on top of me, gently sinking her teeth into my neck. She ran her hands along my arms until she grasped both of my hands in hers, then pinned my arms to the bed over my head, licking and nibbling my neck as she did so. She licked a line from my neck to my earlobe, sucking it between her teeth. Then she kissed her way along my cheek to my mouth, where she licked a soft circle around my lips.\n\n\"Mmmmmm, I've got you right where I want you, Stillman,\" she moaned seductively into my mouth, nipping my lips between her teeth.\n\n\"Right where I want to be, Delvecchio,\" I groaned back, slipping my tongue into her mouth with a quick little flick.\n\nShe laughed again, bucking her hips gently and letting her weight settle back onto my cock. I sank into her slowly, both of us moaning into each other's mouths as we melted back into one another. She lay flat on top of me, letting her weight press down on me, shifting her hips gently to ease me into and out of her.\n\n\"Ooooooh, baby\" she whispered, \"tell me if I'm doing it right.\"\n\nI kissed her lips softly. \"Of course it's right, sweetie. Just fuck me.\" We both grinned deviously at each other and laughed, sharing a beautiful, dirty moment. \n\nI slipped my hands out from hers and ran them down her sides, guiding her hips with my hands in a slow, grinding motion. She quickly caught on to the rhythm and motion, gently swiveling her hips erotically, gliding my cock smoothly in and out of her soft, warm sex.\n\nShe nibbled her lower lip and breathed deeply in and out as she rode me. I squeezed her hips with my hands, encouraging her to keep giving it to me slowly. We moaned in unison as our bodies pressed together.\n\n\"Oh my god, Jeanie, you feel so good,\" I gasped after several moments. I couldn't believe how impossibly warm and tight her little pussy was. It felt like she was expanding just barely enough to accommodate my cock; her muscles gripping firmly, her silken sheath bathing me in softness. I ran my hands back along her hips and squeezed both of her ass cheeks. She moaned and kissed me hard, grinding into me and holding my cock deep inside her.\n\nThen she put her hands on my chest and pushed me down, raising herself up off me a little. \"I can't believe this is really happening, Jim,\" she gushed.\n\n\"Is it good for you, sweetie?\" I asked.\n\n\"God yes, it's amazing,\" she groaned. She swiveled her hips several times, holding my eyes with hers. \"Does that feel good?\" she asked.\n\nI nodded wordlessly, my intense stare giving her answer enough.\n\n\"But what if I do this?\" she asked, raising herself up off of her hands, and leaning her weight back onto her knees and hips. This put her weight onto our sex and my cock sunk even deeper inside her. She ran her hands into her hair and cocked her head backward, arching her back and letting her hair cascade down. We both moaned at the intensity of the feeling.\n\nI took a moment to admire this amazing creature on top of me. Her olive skin looked creamy and smooth in the moonlight seeping in through the windows. Her breasts were little hills on her chests, her upturned little nipples taut and erect. I gave her ass another squeeze then ran my hands along the front of her hips, up her belly, and over her soft tits. I squeezed her smooth, yielding flesh in my palms, pinching her nipples between my fingers.\n\nShe groaned and cocked her head forward again, biting her bottom lip. She looked so incredibly sexy in that moment I almost forgot she was my best friend's little sister. This was not the awkward little girl I remembered having to rescue from her brother all those times when we were kids. This was a beautiful woman, embracing her burgeoning sexuality with fervor, becoming as sexy a vision as I'd ever laid eyes upon.",
        "She reveled in the ecstasy of the moment, holding my eyes with hers as she swiveled her hips, riding me with all her weight pressing into our sex. Her virginity and innocence were melting away, replaced by the empowerment of knowing the mutual pleasure of two lovers coming together as one.\n\nI found myself almost unable to speak. \"Francesca, my god, you are so amazing,\" I whispered.\n\n\"Mmmmm,\" she moaned, \"this is so incredible.\" She swiveled her hips in a smooth, undulating motion. \"You feel so good inside me.\" After saying this she leaned further back, putting one hand behind her on my thigh so she could balance her weight. She thrust against me, and I watched my cock sinking into and out of her little pussy, her hair slick with wetness and tangled. The sight of our sex was almost more than I could handle, and I felt the pressure building within me.\n\n\"Ahhhhhhhhhhh,\" I moaned, and ran my hand down her belly to our sex. I ran my fingers through her tuft of pussy hair, then began massaging her swollen clit with my thumb. Her wetness flowed copiously and I used it to lubricate my thumb as I ground it in circles against her engorged little nub.\n\nHer jaw swung wide open as I played with her, and her breaths came in ragged gasps. She moaned my name in ecstasy, and her hips bucked with her pleasure. \"Nnnnnnn, oh James, ohhhh fuck...\" Her fingernails dug into my thigh as she struggled to maintain balance and composure in the throes of bliss. I rolled her swollen clit repeatedly with my thumb knowing the pleasure it was giving her, a pleasure she was feeling for the first time.\n\nAfter several moments her body convulsed with little shudders and I knew she'd felt another beautiful release. Not a wracking explosion of orgasm, but a hesitant little unclenching, feeling her body let go and consume her. She groaned loudly and her body began to go limp. \"Mmmmmmmm, uunnnnnnnnnhhhhh... oh my god...\"\n\nShe let her body fall forward on top me. I embraced her and held her tightly as her hips bucked with the last few waves of her pleasure. She buried her face in my neck as she sucked in air, her hair falling into my face. I smelled her beautiful fragrance, taking a deep breath through my nose. Then I brought my thumb to my mouth. It was coated with her juices, thick, salty and sweet at the same time. She moaned into my ear.\n\n\"Holy shit, Jim, this is so amazing,\" she whispered breathlessly. She was making just the tiniest little rocking motion with her hips, gently sliding my cock in and out of her. It took every ounce of willpower I possessed to hold myself steady. I wanted to grind into her so badly and let myself go inside her. But I forced myself to remain patient.\n\n\"Is it good for you?\" I asked.\n\n\"Yes, it's better than I ever hoped it could be.\"\n\n\"It doesn't hurt?\"\n\n\"No. I mean, there's a little hurt, but it's kind of a good hurt. The bad stuff ended quickly because you were so gentle with me.\" She moved her face in front of mine and looked into my eyes. \"Is it good for you, though? I mean, am I good?\"\n\nI ran my hands along her cheeks and into her hair. \"Jeanie, you are so incredible. I can't even tell you how good it feels.\"\n\n\"Really?\" she smiled.\n\nI nodded. \"You are so beautiful.\" I pulled her mouth to mine and kissed her deeply. After a moment she broke the kiss, gazing into my eyes.\n\n\"I want you to take me now. I want you to cum for me,\" she said seductively.\n\n\"Really?\" I asked, staring intently into her eyes. I couldn't believe I was hearing little Jeanie, the girl I'd known for so long, say such dirty things.\n\nShe nodded. \"This is so good. I want you to let go. I want to know I give you pleasure.\"\n\nI grabbed her face in both hands again and kissed her passionately. \"You do. Baby, you are so amazing.\" In one confident move I raised my leg and turned my hips, guiding her to roll to the side. I thrust into her deeply to stay inside her, then pushed myself over on top of her. She moved with me, wrapping her leg around me to hold me inside her, then rolling onto her back and taking me on top of her. Once on top, I maneuvered myself into position and she wrapped her legs around me.\n\n\"Mmmmmm, yes Jim, fuck me,\" she moaned into my mouth. This was the final straw and it was all I needed to hear. Jeanie telling me to fuck her drove me over the tipping point. The girl rarely ever even swore so to hear this coming out of her mouth yet again drove me to the point of ecstasy.\n\nI grabbed fistfuls of the sheet behind her head for leverage and ground my hips into hers. She pressed her feet into the back of my thighs, and traced her fingernails down the length of my back, encouraging me to lay into her with everything I had. I didn't hold back. I thrust into her long and deep, increasing my rhythm gradually as she got used to the strength and depth of my strokes.\n\nShe willed me to give her more with her eyes, moaning and gasping in broken breaths as I railed into her deeply. Her pussy gripped me tightly, the muscles at her opening a firm fist clinging adamantly as I thrust into and out of her silky insides. The feeling was exquisite and I knew I was rapidly approaching my explosion.\n\n\"Unnnhhhhh, oh god, Jeanie, you feel so fucking good,\" I groaned, willing myself to hold out just a little longer, though I knew my load was ready to burst forth.\n\nShe dug her nails into my back. \"Oh Jim, ohhhhhhhh, give it to me,\" she moaned.\n\n\"You want me to give it to you?\" I moaned desperately, knowing my orgasm was now imminent.\n\n\"Yes, fucking give it to me,\" she hissed erotically, her eyebrows furrowed in a look of unabashed ecstasy as she devoured me with her eyes.\n\n\"You want it?\" I blurted perversely, now unable to stem the tide rising through my cock, ready to explode. I held her eyes with mine, building the unbridled ecstasy of the moment.\n\n\"I want it,\" she said simply, returning the intensity of my gaze as she simultaneously pulled her knees back and spread herself wide open for me.\n\nThat was all I could take. I buried myself as deeply inside her sweet pussy as I could and let my body take over, a surrender to the throes and convulsions of climax, a leap over the cliff of abandonment. My load sprang forth out of me uncontrollably, the first jet of cum seemingly sapping every ounce of my energy with it as it shot inside her.\n\n\"Nnnnnnnnuhhhhhh, ohhhhhhh fuck, oh Giana, oh my god...\" I babbled and groaned almost incoherently as my load drained out of me in spurt after spurt of warm cum. The orgasm was intense and draining and I collapsed into Jeanie's arms after the first few dramatic gushes, letting the waves and convulsions wash over me as my essence spilled into her.\n\nShe took me into her arms, moaning contentedly in my ear. I buried my face into her soft neck as I ground my hips in long, drawn-out thrusts, draining every drop of my essence into her. After several moments I gradually quieted my eager rhythm into long, slow, deliberate strokes as the throes of my powerful orgasm subsided. We both breathed heavily for several moments, but our heart-rates gradually slowed.\n\nI lifted my head up from the crook of her neck and found her smiling wide-eyed at me. I returned her smile, still swiveling my hips just slightly, my now flagging cock sliding smoothly and slowly inside her. \"What?\" I asked, seeing her beaming smile.\n\n\"We just had sex,\" she stated matter-of-factly.\n\n\"Yeah,\" I laughed, kissing her nose and cheeks several times, not knowing what she was thinking. I could hardly believe that I'd just shared this moment with this beautiful girl, my best friend's little sister. She'd actually offered me her maidenhood, her sweet virginity, and our lovemaking had been beautiful and intense. After a moment, she smiled up at me.\n\n\"Is it always this awesome?\" she asked, laughing with me.\n\n\"No,\" I whispered, smiling down to her, \"it gets even better.\" I then pressed my mouth into hers and kissed her deeply. She returned the kiss, and pulled me tighter into her with both her arms and legs.\n\n\"Mmmmmmm,\" she moaned, \"is that a promise?\"\n\nI arched my back and buried my semi-hard cock into her as far as I could and held it there. I looked into her eyes and smiled again. I didn't know what the future would hold between us, but this moment was absolutely perfect, and I only knew I wanted to feel this perfection again.\n\n\"I promise,\" I said. Hearing this, she smiled and kissed me again. After a few moments, I slowly rolled off of her, letting my cock slip gently out from inside her. I rolled onto my side next to her, then wrapped my arm around her and pulled her into my embrace. She curled onto her side and nuzzled her head into my shoulder. We both lay there for a while, staring at the ceiling in silence. I was breathing in the sweet aroma of her hair and contemplating the night's improbable events.\n\nHow did this happen? How did I begin the night just accompanying my best friend's little sister, the sweet girl I'd known for years, to her prom, and end with us lying next to one another in this hotel room bed? I thought I could resist her. I thought I could just be her friend and show her a nice night. But that hadn't happened. I had found myself powerless to resist her. Why was that? Did I have feelings beyond friendship for her? Clearly I did. When we touched I found myself immediately wanting more of her, until the point where I had to have her, to make love to her with untamed abandon.\n\nSo what would happen now? My mind was swimming with thought. Apparently Jeanie's was too, because the next moment she spoke.\n\n\"Jim?\"\n\n\"Yes, sweetie?\"\n\n\"Was it good for you? I mean, seriously, was it good or was it just like you doing a favor for a silly kid?\"\n\nI scooted down the bed slightly so my face was next to hers, and I held her cheek in my hand. I looked her deeply in the eyes so that she would know I was being honest with her. \"Jeanie, this was incredible. It was so good I'm practically speechless.\"\n\n\"Really? Even though I didn't know what I was doing?\"\n\n\"It was your first time, sweetie, how could you have known exactly what to do? And believe me, what you did was amazing. Seriously freaking amazing.\"\n\n\"Yeah?\" she asked.\n\n\"Yeah,\" I stated emphatically.\n\n\"I'm so glad it was you, Jim. I've always wanted it to be you.\"\n\nI kissed her. \"I'm glad it was me too, Jeanie,\" I said, laughing. She smiled and buried her head back into my shoulder. I rolled onto my back and pulled her into me. That exchange somehow made me feel so much more at ease. I knew she was comfortable and I knew she was happy. And really, that was all that truly mattered to me. I let myself relax and after several moments the exertions of the evening took their toll on me and I dozed off.\n\nI awoke with a start a little while later, suddenly realizing how late it was. \"Oh shit,\" I gasped, \"what time is it? We gotta get you home; your parents are going to kill me.\"\n\nShe put her hand on my chest to hold me down. \"Stop, relax, sweetie, relax,\" she said in a soothing voice. \"I told them I wouldn't be home until morning. They think I'm staying at Missy's house, remember?\"\n\n\"Oh,\" I said, relieved. \"Oh ok.\" I let my shoulders drop back down onto the bed. She kissed my chest several times.\n\n\"Did you really think I didn't think of that, silly?\" she asked.\n\n\"I just want to take care of you, honey, I made a promise.\"\n\n\"You did,\" she said simply, slowly massaging my chest with her fingertips. I relaxed again after several minutes and drifted back to sleep. The next time I awoke the sun was beginning to crack the night sky. It was dawn. I lifted my head and when I did Jeanie lifted hers to smile at me.\n\n\"You already awake?\" I asked her. She nodded and smiled. \"So we gotta get going, huh?\" I asked, knowing but not wanting to hear the answer. Again she nodded, but this time she scrunched up her lips in disappointment. She looked so ridiculously cute doing it that it broke my heart. I leaned forward and kissed her.\n\n\"I don't wanna leave,\" she said, pursing her bottom lip out sadly.\n\n\"Why, sweetie, what's wrong?\"\n\n\"Because once we leave, the perfect night ends.\"\n\n\"Yeah, I know,\" I said sympathetically. \"But we're always going to hold last night dear, aren't we?\" I asked.\n\nShe nodded. \"So that means it will never end as long as it always lives in our hearts,\" I said, holding her eyes with mine.\n\nShe smiled. \"That is so sweet, Jim,\" she said, pushing herself up and kissing me again. We gazed into each other's eyes for several moments, then finally we helped one another up. She went into the bathroom and cleaned while I gathered up our clothes. I couldn't help but watch her cute, little naked body as she walked slowly across the room, her soft, round ass bouncing gently in the pale morning light. I wondered if I'd ever get to see it again; if I'd ever be naked and free with her again like this.\n\nI rounded up our stuff and had it ready and waiting for her. She came out of the bathroom a few minutes later, still naked and gorgeous. I drank in the sight of her beauty one more time, her dark brown nipples slightly upturned on her pert, little breasts, her tuft of jet black hair a wild, unruly little patch on the mound between her legs, her soft, olive-colored skin looking sleek and divine.\n\nShe hadn't worn underwear so it was a simple matter to get her dressed. I simply helped her slip back into her dress, then fastened the zipper up her back. I got turned on again when she turned around and smiled at me, knowing there was nothing between me and her sultry nakedness but the thin fabric of her dress. But I had to get her home, so I just smiled.\n\nI grabbed my own clothes and hit the bathroom, washing up and getting dressed as quickly as I could. I came out and she stood by the door with her purse. I took her hand and together we walked out. She looked back over her shoulder as the door swung close and said with a smile, \"I'll always love that room!\"\n\nI laughed out loud. \"Yeah, no shit. Me too.\"\n\nWe checked out at the front desk and made our way to her car. We laughed several more times on the ride home, but as we pulled onto our street I felt a twinge of sadness creep in. She slowed the car by my house, but I told her to just drive to hers. \"Why?\" she asked.\n\n\"Because I want to walk you to your door, of course. You're still my beautiful prom date, and that's how the evening has to end.\"\n\n\"Jim, you are such a sweetheart,\" she said smiling, pulling the car up the street to her house. She parked it and I put a finger up telling her to hold on a sec. I got out and ran around the car to escort her out of her door.\n\n\"M'lady,\" I said formally, holding out my hand. She took it and smiled again.\n\n\"Thank you, sir,\" she said loftily and bowed slightly. I bowed back laughing then took her hand in mine and led her up the pathway to her door. I was at a loss for words in that moment, but in an instant a very definite fact jumped into my mind.\n\n\"I want to see this girl again,\" I said to myself. \"I want to be with her. I don't know what it means. I don't know what the implications will be. I don't know how she feels. But I want to see her again. It's that simple.\"\n\nI heard my thoughts as loudly in my head as if I had just screamed them out loud. And I knew exactly what I had to do. I didn't know what she would say. I didn't know what she was thinking. For all I knew, she wanted all this to be a one-night thing and to just go back to whatever friendship we had before. Maybe I was just a fleeting fantasy, and that reality dictated there could be nothing between us. But be that as it may, I had to take the chance. I had to ask her out. And for the first time all night, I actually felt nervous. I don't know how she did it, but the tables were turned and now I was nervous as hell and I didn't know what to say to her.\n\nWe got to her porch and stopped. She took both of my hands in hers.\n\n\"Jim,\" she said softly, \"tonight was so wonderful. Thank you so much.\"\n\n\"No, Giana, don't thank me. I had such a great time, I... it really was... the best night of my life.\" I didn't know what I was saying, I was fumbling.\n\n\"Mine too,\" she whispered, smiling sweetly. Suddenly, when I saw that sweet smile, I gathered my courage.\n\n\"Jeanie, I really did have a great time with you. And... I would really love to see you again. I mean, if you'd like to... would you want to hang out with me sometime? Can I maybe take you out to dinner or something?\"\n\nI wasn't sure if I sounded ridiculous or not, but I asked it as well as I could in that moment. My heart raced anticipating her answer. At first she looked at me rather quizzically, then she smiled hesitantly.\n\n\"Jim, are you... asking me out?\" she asked. \"Like on a date?\" Her eyes searched me.\n\n\"Yeah, yes, I am. Would you go out with me sometime?\"\n\nThe question hung in the air for just a split-second, but it felt like the longest moment of my life. For just a single, tiny second she stared at me without reacting, then a wide smile beamed forth on her mouth.\n\n\"Really?\" she asked. \"I... I would love to, Jim.\"\n\n\"Seriously?\"\n\n\"Yes, you idiot, of course I want to.\" She held her arms out and I stepped into them, hugging her. \"I would love to go out with you sometime,\" she whispered in my ear as we hugged.\n\nI stepped back slightly, feeling incredibly relieved. \"Great. So, like, when?\" I asked.\n\n\"How about tonight?\" she asked, laughing.\n\n\"Perfect,\" I replied, laughing as well. \"I gotta work 11 to 6 so how about I call after I get out and we'll do dinner?\"\n\n\"Definitely,\" she smiled. \"I can't wait.\"\n\nShe looked so impossibly beautiful in the soft morning light, there on her parents' porch. I wasn't sure exactly what time it was, or if they were awake yet, or even if they were watching from behind the curtains, but it didn't matter. I'd just spent the most amazing evening with the most beautiful girl in the world, and in that moment I didn't care who knew. I pulled her into me and kissed her softly on the mouth, her delicate lips pressing like little warm feathers onto mine.\n\nWe broke the kiss after a moment and smiled into each other's eyes. I didn't care if the door swung open and Tony, or her father, came rushing out onto the porch to punch me. I had a date with a beautiful girl, one that made my heart skip a beat. Nothing else in the world mattered."
    ],
    "authorname": "johnwhoknew",
    "tags": [
        "virginity",
        "prom"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/a-first-my-friends-sister-ch-03"
}