{
    "title": "CWB 7 - Married with Benefits",
    "pages": [
        "\"Ummm,\" I moaned to the ministrations of my beautiful fianc\u00e9es mouth. Lying near my knees, away from my touch, she had my cock held upright, loving on me. It wasn't a blowjob to get me off, she was loving on me because she wanted to. She wasn't lying away to prevent me from touching her but lying in a position where I could watch her perform her magic on my cock even as she watched my face.\n\n\"Like that?\" She asked, pulling back momentarily before sticking her tongue out and slowly rubbing her lips and tongue up and down my shaft.\n\n\"Of course.\"\n\n\"I'm glad. I love sucking your cock.\"\n\n\"Is that the way my sister sucked that stripper?\" She giggled in response.\n\n\"Does that turn you on? Hearing about your sister doing something naughty?\"\n\n\"Not really. To me, it just seems so out of character for her. I always thought of her as a bit of a goody-goody.\"\n\n\"She sure isn't that\" Stacy said raising her head up, \"She did it like this,\" and slipped me completely into her mouth, causing me to groan in appreciation again. A minute or so later she pulled off, climbed on top and slipped me into her waiting warmth.\n\nIn the days since her bachelorette party Stacy had entertained me multiple times with descriptions of the goings on at Desert Sun Resort. That it was where they were going, that it was a nude, or at least a clothing optional, resort, that they were going to have a stripper couple entertain and perform sex acts in front of them, I'd had no clue. It had been my sister that had informed me that the girls were planning a surprise party, and that it was in Palm Springs, but other than that I'd been told nothing, and known nothing, before they'd gone. Ellen had told me they were all chipping in to buy her airline ticket and pay for the resort, but I'd said I'd gladly pay for her share, and had.\n\n\"Josette really hadn't ever had oral sex before?\" I asked, finding it almost unbelievable that a woman, that just had her 22nd birthday and had lived with twins, had never received oral sex. She had lived with two guys, had threesomes virtually daily, had sucked their cocks together and separately, but they had never returned the favor seemed especially unbelievable. And then to have done it with a stranger, in a standing 69, was a super-athletic feat for a first time. I'd seen such a thing on internet porn before, and an acquaintance told me about seeing a standing 69 performance in an Amsterdam red-light district show when he'd been stationed in Europe in the Army, but I'd never attempted it myself. After giggling and laughing about it with Stacy, she said she'd wondered how it was, so we tried. We managed to get into position, but we gave it up long before either of us achieved orgasm, but admitted it was quite the fun and exotic act.\n\n\"She said she'd hadn't.\"\n\n\"God, those guys she was living with, the twins? It sure sounds like they were a bit self-centered. I can't believe anyone wouldn't take care of their lover.\" I realized I didn't know how far either Ellen or Josette had gone. \"They didn't suck him off, did they?\"\n\n\"Ellen and Josette?\" I nodded. \"No, they both just had some fun, and then the two strippers fucked with us watching.\"\n\nMy mind turned inward momentarily, wondering how the twins could possibly have neglected Josette like they had, and realized that it is always harder to see your own faults than it is others. \"Stacy, will you promise to tell me if you need something that I'm not providing, tell me if I'm not taking care of you properly?\"\n\n\"Oh baby,\" she said, a shiver running through her body as my hands twiddled her nipples as she rode me, \"you are phenomenal.\"\n\nAnd then my sister going down on Josette. Ellen never having been with a woman, Josette never having been with a woman, and Stacy and Carrie trying to give her an orgasm by sucking her nipples. \"Do you think she really might have cum just from her nipples being sucked?\" I asked. I didn't have to explain that I was thinking of Josette.\n\n\"Ummm, God I've always dreamed of something like that.\"\n\n\"You have? Do you think you could?\"\n\n\"No.\" She leaned back, thrusting her breasts forward into my hands. \"I don't think it would work with me. I love it when you play with my nipples, it turns me on something fierce, but it's not that intense for me. I'm pretty sure Josette could though. She was twisting and squirming just before Ellen went down on her.\" She giggled. \"And Ellen said she was sure when I put sun lotion on her that if I'd fingered her, she would have come.\"\n\n\"Fuck,\" I said, raising my hips and cock into my cousin.\n\n\"That turns you on?\" She asked, leaning forward, and pivoting her pussy up and down on my cock. It was a familiar position, I could tell she was getting close to orgasm, as was I. \"Thinking of your sister with Josette?\"\n\n\"No.... making Josette cum with just her nipples... or you fingering her.\" I couldn't say that the thought of my sister naked and going down on a woman wasn't arousing, but it was the thought of Josette writhing beneath Carrie and Stacy, her hands imagined on the back of their heads holding them to her breasts, that had triggered my imagination.\n\n\"Oh Fuck! I'm going to cum,\" Stacy said. Shuddering and quivering, seconds later her pussy clamped against my cock. I relinquished my twiddling of her nipples with my left hand and reached down, finding her clit with my thumb, and increasing her pleasure. Seconds later she began thrusting on me in earnest, attempting to give me release, and shortly after I came inside her.\n\n\"Do you suppose that would be called a nipplegasm?\" Stacy asked a while later as we were once again cuddled together.\n\n\"Sucking them to orgasm?\" I stated, confirming what she was thinking.\n\n\"Maybe someday we should give it a try? See if we can't get her off?\" I did not respond, just continued to hold her close.\n\nI had only ever barely met Josette, when they'd arrived to pick up Stacy, and again a few days later when they dropped her off, but had never gotten any kind of mutual attraction vibe from her. Sure, she was very attractive, although a bit skinny for my tastes, but that did not mean I had any desire to bed the woman. My thoughts drifted back to Carrie, and Stacy offering to share me with Carrie, to let me, or have me, fuck Carrie even before I met her.\n\n\"You would want me... you'd want us, to try and get her off together?\"\n\n\"You wouldn't want to?\"\n\n\"That's not what I asked,\" I answered. \"You said maybe someday we could try and get her off together by sucking her nipples? You'd want me to join you?\" I had no problem imagining that perhaps Stacy would be interested in playing with Josette, any more than I no longer had any problem seeing her, or us, playing with Carrie.\n\n\"More like, maybe I could join you when you're fucking her?\"\n\n\"What are you talking about?\" I asked, rolling my head over to look at Stacy. \"You're thinking I'm going to fuck a woman that I don't even know?\"\n\n\"Of course, you are. She's my BFF too.\" She giggled and continued, \"She was a bit miffed that we'd gone to Mexico and taken Carrie with us and hadn't even told her. We've shared everything together for years.\"\n\nI just laid there thinking for a moment, extrapolating what she was saying. If they shared everything, and she wanted to share me with Josette, and already had with Carrie, and they were obviously healthy hetero or bisexuals, eventually the two of them were likely to hook up with someone else. If Stacy wanted to share me with her BFF's, did that mean that she also wanted them to share with her?\n\n\"I, um... Someday they're likely to hook up with someone of their own... so are you saying... um...\" I didn't finish the words; the thought was easily understood by Stacy. We were getting quite good at that, following what each other was thinking, finishing each other's sentences, answering before the sentence was complete.\n\n\"That I want them to share their hubby with me too?\" Her head shook no on my shoulder. \"Not at all. I'm not interested, I've got all I want with you. I don't want any other man.\"\n\n\"Oh.\" I mulled this over in my mind, coming up with another discrepancy. \"Is that why you didn't suck that stripper when he offered?\"\n\n\"Yeah. I wasn't interested.\"\n\n\"No thoughts of your last time as a single woman letting your hair out and going wild and fuck someone else?\"\n\n\"Nah. Not me. It was fun to watch the two of them fuck, but I did not want to suck or fuck him. Besides, if I had wanted to do that, the guy that was hitting on me that first night I would have liked better. More my type.\"\n\n\"Guy? The first night?\" she'd shifted into something she hadn't told me before. \"What was that?\"\n\n\"We went to Costas nightclub, and there was this one guy that was hitting on my pretty hard, but I didn't let him get carried away too much.\"\n\n\"Too much?\" I picked up on that without knowing what it meant.\n\n\"What, is my hubby-to-be jealous?\" she giggled, wrapping her arm over my chest.\n\n\"No, just that you said \"too much\" which implies that something happened. I just wondered what.\"\n\n\"He felt me up.\"\n\n\"Oh?\" I said, not really asking for more details but giving the opportunity.\n\n\"Yeah. We danced quite a bit. At first when he was behind me, he put his hands on my hips. Later when he was in front, he pulled me against him with his hands on my bottom. Later we had a slow dance, and he had my hand in his, held between us and he pushed our hands against my breast and was rubbing my nipple with his thumb. That's when I broke it off. I just told him it had been fun, but that was as far as it was going, and I started dancing with others. It wasn't but a few minutes later that we left. Ellen wanted to know why I didn't let him take me home.\"\n\n\"My sister?\" I said, shocked again. \"Why that little...\" I didn't finish.\n\nStacy laughed outright. \"I don't think she's the prude that you thought she was.\"\n\n\"Wow. I guess not.\" I thought for just a second, \"Did she?\"\n\n\"Did she what?\"\n\n\"Go home with someone? Sleep with someone?\"\n\n\"No. But she has.\"\n\n\"What??\" I said, looking down at her again. \"Tell me.\"\n\n\"That's how she knew about Desert Sun. They were there a couple of years ago, shared a suite just like we did, and... well, they ended up having sex with each other's spouses.\"\n\n\"My sister is a swinger?\"\n\n\"I don't know as they are all the time. From what she said it was a one-time thing, but she also said that she enjoyed it. They enjoyed it.\n\nI shook my head, my memories coming to the forefront. Years of living in the same house with my sister, knowing that my buddy's, when they were over, were always asking where my sister was. I never saw her naked, but I had seen her wrapped in a towel between the bath and her room. I knew she looked pretty good in a bikini, but I had never been interested; my sister had never been a sexual thought in my mind. I remembered her going to her senior prom, with a dress that left her upper chest bare, the first time I had ever wondered how a dress like that stayed up. I knew she'd had boyfriends, but she'd never been around the house with them that much. Her husband Dave was the first guy that she ever brought home for dinner. The following day when I asked her about him, she confessed she was going to marry him, but that he just did not know it yet. Outwardly, at least in front of our parents, she had always seemed somewhat conservative and reserved, and here I was finding that she had, at least once, swapped husbands with a girlfriend.\n\nSuddenly it dawned on me. Carrie and Stacy sucking Josette's nipples. Ellen had gone down on Josette; Carrie and Stacy I knew were lovers... had my sister and my fianc\u00e9e also become lovers? I gulped. \"Stace?\"\n\n\"Yeah?\"\n\n\"You said that Ellen went down on Josette while you and Carrie were sucking her nipples...\"\n\n\"Yeah.\"\n\n\"Did um, Ellen and you...\" I had butterflies in my stomach as I asked. If Stacy was playing with Carrie, and with Josette -- was it that much different that perhaps she'd played with my sister also? How exactly did I feel about that, my fianc\u00e9e having sex with my sister? I wasn't sure.\n\n\"No.\"\n\n\"Oh.\"\n\n\"Would you have liked that?\"\n\n\"God, I don't know. I don't think so.\" My wife having sex with my sister, my sister having sex with my wife? That just seems too weird. My sister and I have never been attracted to each other, at least, I have never been attracted that way to her. If anything, we've got a better relationship now than we did when we were teens. We lived in the same house for 18 years, and except when we were kids, I've never even seen her naked. I've never known anything about what she was doing with boyfriends or anything. \"It's just that I know you've been with Carrie and Josette and...\"\n\n\"I hadn't,\" she corrected.\n\n\"Hadn't what?\"\n\n\"Been with Josette. When Carrie and I were sucking her nipples, that was the first time that Josette and I have ever done anything sexual.\"\n\nI thought back over everything that had happened and realized I had skipped a cog. Carrie and Stacy had gotten together while we were separated, and although I knew that Josette was the fill of the trio, Stacy had never said anything about getting together with her. They'd skinny dipped and sunbathed naked at the Fletchers, and somehow, I'd assumed that she'd been with Carrie and Josette even though, thinking back, I realized there had never even been a hint of them together.\n\n\"When Josette reached orgasm, Ellen said she couldn't believe she'd done that. Carrie asked Ellen if she'd ever had a woman go down on her, and she said she hadn't. Carrie said \"Well, I'll be glad to take care of that,\" rolled off the bed, grabbed Ellen's hand and pulled her up and said, \"See you in the morning, this girl needs some TLC.\"\n\n\"So... you and Josette slept together?\"\n\nStacy giggled, \"Well, we didn't get much sleep.\"\n\nThe thought of Stacy and Josette together had my cock rising again. The thought of Ellen and Carrie together, totally gone from my mind. \"You like that, don't you? Thinking about Josette and me?\"\n\n\"What makes you say that?\" I queried, knowing I'd been expanding in her hand.\n\n\"The way your cock's getting hard. The same way it did when I told you about Carrie and me.\"\n\n\"I guess I can't deny that.\" We lay there for a few moments, her just holding my cock and slowly stroking.\n\n\"Stace?\"\n\n\"Yeah, baby?\"\n\n\"Why didn't you?\"\n\n\"Why didn't I what?\"\n\n\"Hook up with that guy, or suck the stripper when you had the chance, or probably several other times you could have taken a walk on the wild side. It was your bachelorette party, that's where those kinds of things happen. One last chance to play around with someone, find out what you're missing?\"\n\n\"You wanted me to?\"\n\n\"No, that's not what I'm saying. But I would have understood if you had.\"\n\nIt was several moments before she answered. \"I didn't want to... I do not think I'm missing anything. I'm not interested in anyone else anymore, you're the only lover I'm interested in having inside me.\"\n\n\"Seems to me you've still got a few lovers with tongues and fingers.\"\n\n\"Yeah,\" she giggled, \"but that's different. That is just for fun. They aren't going to help me make a baby someday.\"\n\n\"Oh? Are we going to do that?\" I asked, teasing as much as anything. Although we'd not yet discussed kids, I knew that I wanted some, and had assumed that Stacy did, but we just hadn't discussed it.\n\n\"I sure hope so.\"\n\n\"Ok. One baby on the agenda.\"\n\n\"At least two.\"\n\n\"Two? Getting kinda pushy, aren't we?\"\n\n\"OK, then three. But I'll settle for two.\"\n\n\"If you say so.\" We lay there quietly, Stacy's hand gently stroking my cock and I could tell she was getting sleepier. We'd been here before; cuddling, pillow talk, and eventually she'd ask if I was ready to fuck her to sleep. A thought popped into my mind. \"Stace?\"\n\n\"Yeah babe?\"\n\n\"I'm glad you didn't fuck anyone else.\"\n\n\"Me too.\" It was several seconds later before she said, \"Did you?\"\n\nAs always when caught with an unexpected question, I repeated the question, giving myself time to think and arrange my answer. \"Did I what?\"\n\n\"Fuck anyone? At your bachelor party? You haven't told me anything about it.\"\n\n\"Do you want to hear about it?\"\n\n\"Yeah. I asked, didn't I?\"\n\n\"Mostly it was just getting drunk.\"\n\n\"A little out of the norm for you.\"\n\n\"You can say that again.\"\n\nAlthough I had definitely been drunk several times in my life, I'd learned early on that getting drunk seemed 'fun' at the time, but the following day always proved that it wasn't worth it. Usually, I would cut myself off when I was slightly inebriated, and then shift to \"hard\" drinks, of which I always told the bartender \"no more alcohol -- whatever I order, make it virgin.\" The guys would always think I was having a rum and coke, but it was only coke; or a Tequila Sunrise, but it was just orange juice and grenadine, or I would order a beer, and they'd give me an O'Doul's in a glass. Nobody ever knew better. But not that night; they had been ordering, and passing more and more to me, and admittedly I'd gotten quite wasted.\n\n\"We started at Morton's Steakhouse,\" I started, immediately interrupted by Stacy.\n\n\"Was it good?\"\n\n\"Excellent.\"\n\n\"Why haven't you ever taken me there.\"\n\n\"I'd never been there either.\"\n\n\"You're going to have to take me there.\"\n\n\"We can do that,\" I replied. \"Anniversary?\"\n\n\"What? You expect me to wait a year?\"\n\n\"Thirteen months.\"\n\n\"You're going to have to do better than that.\"\n\n\"Ok, we will come up with some special occasion. After dinner, we started bar hopping, all the old hangouts. We saw Vickie at the Cocky Bull.\"\n\n\"Vickie?\"\n\n\"Victoria... Ms. Big Tits, isn't that what you called her?\"\n\n\"Oh, her!\" Stacy said, pulling her hand away from my cock.\n\nI laughed, reached down, and put her hand back where it had been. \"You don't need to worry, she said hello and wished us the best.\"\n\n\"I'll bet. Did you kiss her?\"\n\n\"Just in saying goodbye. A little peck.\"\n\n\"Did you feel her up?\"\n\n\"No. She was with some guy.\"\n\n\"Too bad. Her loss.\" She giggled. \"You should have. Last fling as a single guy.\"\n\n\"What next?\"\n\n\"The guys took me to all the old hangouts. Saw a couple of the guys from work, and then...\" I hesitated and then shrugged it off. She'd told me about going dancing, and somebody feeling her up, so was I going to pretend we hadn't gone to strip bars... \"and then we started on the strip bars.\"\n\n\"Strip bars? You mean titty bars?\"\n\n\"Yes, I mean titty bars.\"\n\nShe giggled. \"See anything you liked?\"\n\n\"I always like pretty girls, you know that.\"\n\n\"You like tits.\" I laughed.\n\n\"Yes, I like tits.\"\n\n\"Did you get a lap dance?\"\n\n\"What do you think?\" I asked in response, neither confirming nor denying.\n\n\"Did you get to feel her up?\"\n\n\"Two of them.\"\n\n\"Two? How many did you get?\"\n\n\"The guys bought me a lap dance everywhere we went.\"\n\n\"How does that work?\"\n\n\"The girls dance on stage and pay closer attention to you if you put money out for them.\"\n\n\"Do you have to put money out?\"\n\n\"No, but they don't pay much attention to you if you don't.\"\n\n\"What do you mean pay attention?\"\n\n\"Dance right in front of you. Well, not actually 'dance', more just twist and squirm and show off their bodies.\"\n\n\"Naked?\"\n\n\"They start with clothes on, and gradually strip until they're naked. At least in two of the places they got naked, the third was in the next town where they had to keep at least a G-string on when they were on stage. But they all got naked for the lap dance.\"\n\n\"What do they do when they're dancing on stage?\"\n\n\"It's all a tease. They'll bend over and shake their tits in your face, or bend over backward with their pussy right in front of your face. Sometimes they will sit on the stage and spread their legs. The guys were paying for everything, and when they put a twenty out, one of the girls did that and put her legs onto my shoulders.\"",
        "\"Is that a lap dance?\"\n\n\"No, lap dances are usually in back. They almost always have a 'private' or an 'executive' area. It's usually behind heavy curtains where nobody else can see what is going on.\"\n\n\"And what is going on? Do they fuck you?\"\n\n\"No. At least I never have.\"\n\n\"Is that so they can touch you? Or you touch them?\"\n\n\"Sometimes. At least a little.\"\n\n\"How much is a little?\"\n\n\"Most of the time they'll let you feel them up, feel their tits. Sometimes they'll let you finger them.\"\n\n\"Finger their pussy?\"\n\n\"I didn't, but I know some of the guys say they have before.\"\n\n\"Tits?\"\n\n\"Yes.\"\n\n\"Ohhh! Were they nice?\"\n\n\"Yes.\"\n\n\"As nice as Carries?\"\n\n\"Yes.\"\n\n\"As nice as mine?\"\n\n\"No.\"\n\nShe laughed. \"You always say that.\"\n\n\"What can I say, it's true.\"\n\n\"Did they touch you?\"\n\n\"My dick?\"\n\n\"Yes.\"\n\n\"One of them rubbed her pussy against me through my pants, but the others didn't.\"\n\n\"One did? Why didn't the others?\"\n\n\"That's not exactly normal, but you get what you pay for.\"\n\n\"Why did she? Did the guys pay her more?\"\n\n\"No. She was gyrating naked in front of me and asked if we were there for any kind of occasion, and when I said it was a bachelor party, she wanted to know who the lucky guy was. When I told her it was me, she told me that if I wanted to take it out, she'd sit on it for free.\"\n\n\"Why didn't you?\"\n\n\"Because I didn't want to fuck some slutty bar girl.\"\n\n\"Why not?\" Stacy asked, squeezing my erection which had once again.\n\n\"Because she wasn't you.\"\n\nStacy giggled. \"Good answer lover boy.\" She leaned over and kissed me. \"You said she touched you?\"\n\n\"Just through my pants. When I told her no thanks, she said, \"spoil sport\" and pushed her pussy against my cock anyway.\"\n\n\"Oh. That was at the last bar?\"\n\n\"Nope,\" I laughed, \"that was at the first.\"\n\n\"So that's it? Drinking and titty bars? No strippers? No strange sexpot to bed my boy one last time as a single man?\"\n\n\"Nope. Mostly just drinking.\"\n\n\"Yeah, us too. Lots of Mimosas, Pina Coladas, Tequila Sunrises and Margaritas at dinner and the clubs. We should have gotten some Margarita mix, but we did OK.\"\n\n\"Drinking, skinny dipping and telling all your sex secrets.\" I laughed, cuddling her to me and fondling her breast.\n\n\"That too.\"\n\n\"So, tell me more about these \"questions\". Ellen came up with them?\"\n\n\"I guess. I never asked, but she seemed to have brought them out originally.\"\n\n\"Have you told me about all of them?\"\n\n\"I don't know. I told you about Ellen never having been with a woman, and Josette never having had oral sex?\"\n\n\"Yeah. A couple of times.\"\n\nStacy slowly reiterated the stories, about their 'confessions,' and what they had done. Playing nude volleyball, first Carrie and then all of them flashing their boobs to the Uber driver, the strippers; she didn't intentionally hold anything back although she didn't reiterate it in chronological order either.\n\n\"So, you had a good time?\" Rick asked, idly stroking her arm as he did.\n\n\"It could have been better.\"\n\n\"Oh? How's that?\"\n\n\"It would have been better if you were there with me.\"\n\n\"That would have been fun. Four beautiful naked girls and me? I think I'd like that.\"\n\nShe giggled, \"Do you think you could handle it? All of us?\" and then was quiet for a few moments. \"Will you take me sometime?\"\n\n\"To the resort? What was it, Desert Sunshine?\"\n\n\"No, the name is Desert Sun Resort, but I was talking about a strip club. Will you take me with you sometime?\"\n\n~\n\n\"Do you know what happens one week from today?\" I asked quietly when I knew she was awake. She'd rolled over and cuddled to me, almost always the way she woke when I was still in bed. Although I had morning wood to greet her with, she hadn't yet explored me that way.\n\n\"What?\" she responded groggily, her hand stroking up and across my chest before moving further down my belly.\n\n\"Gees, I can't believe it,\" I teased, \"here we're supposed to get married and you don't even know it's next Saturday.\" Her hand had continued down my body and now gripped my erection.\n\n\"Hmm,\" she cooed. Now awake she turned her body and moved down, sticking her tongue out and licking my cock, almost exactly where we'd left off the night before. \"Just think,\" she said a moment later, pulling back from my cock momentarily, \"the next time I suck a cock on a Saturday morning it will be that of my husband.\"\n\n\"Not yet next Saturday,\" I corrected, \"but you could on Sunday.\"\n\n\"Who says I'm going to suck your cock next Saturday?\" Something in the way she said it, I could feel the tease, but wasn't sure what it was.\n\n\"Oh,\" I said, followed by an \"Oh!\" when her teeth drug around my glans, \"let's see, what Saturday have we started out where you didn't take me in your mouth? Uh... how about never!\" I chuckled at her in return.\n\n\"Why do you think I'm going to suck you next Saturday? Don't you know you're not supposed to see the bride on her wedding day until she shows up in church?\"\n\n\"Oh?\" I reached down and stroked the back of her head, careful not to press her to my cock, just letting her know I was appreciating her loving on me. \"And where will you be sleeping,\" I questioned, continuing the mutual tease, \"with Carrie or Josette?\"\n\n\"And.\" She said, pulling away from my cock just momentarily to say this. She had me rapidly approaching an orgasm, and by now she knew my every response so absolutely knew it.\n\n\"And... what?\" I choked out, having to hold back from my hips trying to force my cock into her mouth. She pulled her mouth back, leaving me on the verge of shooting, gripping my cock and squeezing an orgasm off at the base.\n\n\"Maybe I'll spend the night with Carrie and Josette. The three of us haven't really played together yet except that few minutes at the resort before Carrie and Ellen went to the other room.\"\n\n\"Think you'd like that? A threesome with your girlfriends?\"\n\n\"Uhmm, yeah,\" She cooed before leaning back in and taking me in her mouth. I thought she was going to finish me off this time, but again she stopped just before it was too late, and this time swung around and over, guiding me into her hot wetness. \"But don't you think it would be more fun as a foursome? Do you think you could handle all three of us?\" I didn't answer, her body, despite that I hadn't yet touched her, telling me that she was super turned on for some reason. \"I can't wait to see you fuck Josette.\"\n\n\"You would like that?\" I responded, my own hips beginning to buck up into my soon to be wife. \"Me fucking your girlfriend?\"\n\n\"Oh, hell yeah!\" She whispered, her eyes closing, and moments later her pussy clamped around my cock in orgasm. Despite that she'd been servicing me, she came first, although in just a few seconds my cock throbbed with relief.\n\nCollapsing forward, Stacy lay on top of me without moving to let my cock come out. A few moments later I'd shrunk enough that I did come out, a cool puddle of semen and her juices dribbling onto my cock and balls, and bedsheet, although we'd soon get up and strip the bed as it was laundry day.\n\n\"That really turns you on, doesn't it?\" I asked a few moments later. \"You always come hard when we're talking about me fucking Carrie, and now Josette?\"\n\n\"Yeah... I guess. The thought of watching you do them, it really turns me on. Sharing you with them...\"\n\n\"What about Victoria? What did you call her, Miss Big Tits?\"\n\n\"That was different.\"\n\n\"Different? How so? That you aren't doing her?\"\n\n\"That's not fair. That's not it at all.\"\n\n\"Well, we weren't really together, so that thought of me with someone else wasn't a turn on?\"\n\n\"No. It made me jealous.\"\n\n\"Ahh... so you do get jealous? Why Victoria and not Carrie?\" She didn't answer, just continued lying on top of me, her head nestled to my chin and neck. \"Should I be jealous of you and Carrie or you and Josette?\"\n\nAgain, it was quite some time before she answered, lifting her head, and looking me in the face when she did. \"No, because I share them with you. They have been my best buds forever. I want you to love them the way that I do. I don't know that Big Titted Bitch and don't want to.\"\n\nI laughed, and then decided to just drop it. \"What about Carrie and Josette? You share them with me? Or I share you with them?\"\n\n\"I don't know. Both, I guess.\"\n\n\"What about in another week? When we're married, what then? Are we going to be exclusive?\"\n\nShe rolled off of me and off to the side. I moved my arm and she cuddled against me, her hand stroking my stomach and chest. \"Ricky, I never want another man but you, but something about sharing you with them... I sort of knew it before, but seeing you and Carrie together in Mexico... sharing you with her, it really, really, turned me on.\"\n\n\"It was pretty fun together, but if I've got a say in this, I'll be perfectly happy being with you alone for the rest of my life.\"\n\n\"You want me to quit being with them? I will if that's what you want.\"\n\n\"I didn't say that\" I responded. \"I'm pretty sure I don't want to share you with another man, but you should know by now that I'm not jealous of your girlfriends, especially since you share them with me.\"\n\n~\n\n\"I think we're staying at the Residence Inn again,\" Stacy said into the phone to someone that I hadn't yet identified. \"Yeah, it's actually really convenient... By yourself? Oh, yeah, I can see that... well, why don't you stay with us? The room has two double beds, and that way you can leave your parents in their own room... Oh, don't worry, Ricky won't mind...\"\n\n\"Who was that?\" I asked when she hung up. We were on our way back home, at least to our childhood homes, when the call came in. In typical Stacy fashion she had talked with whomever it was for perhaps half an hour while I at first tried to fathom who and what they were talking about, and then just tuned her out.\n\n\"Josette. She's going to stay with us, is that OK? I didn't know her parents had moved to a retirement village and their place doesn't have an extra bedroom anymore, so she was going to sleep on their couch for a couple of nights.\"\n\nI immediately understood that this was going to be \"before\" the wedding, as my dad had told me they were getting us a \"Honeymoon Suite\" for the night of the wedding at a high-priced hotel downtown, even if Stacy didn't know that. I'd already booked a room for the days we were going to be there, including our wedding night, at the Residence Inn and just figured to tell them it would be one-less night when we checked in. \"What about not seeing you until the actual wedding ceremony?\" I asked, knowing perfectly well that she had no plans for her or me to sleep elsewhere. \"I thought I'd go to mom and dads...\"\n\n\"Your Aunt and Uncle are staying with them. You'd have nowhere to sleep.\"\n\n\"There's always the couch.\"\n\n\"You'd choose a rickety old couch over a plush and comfy hotel room bed where you can sleep next to your plush and comfy fianc\u00e9e? That doesn't sound like you.\"\n\n\"I figured since you're inviting your best bud to spend the night with you that you'd probably be busy entertaining...\" I threw back at her, nonplussed by the tease.\n\n\"Maybe I should,\" she teased right back. \"Make you jerk off in the corner while Josette and I practice our cunnilingus skills on each other.\" I slipped my hand onto her leg, pulling her a bit closer, and just let her tease disappear. We both recognized it for what it was and knew neither of us was serious.\n\n\"You know I love you, my Imp?\"\n\n\"Whatever!!\" she giggled, twisting her head and flinging her hair backwards. \"I bet you say that to all your lovers.\"\n\n\"Nope. Just one.\"\n\n\"Mmm. I like hearing that.\"\n\n~\n\nThat \"our place\" was to have a party, after the Thursday evening rehearsal and dinner, wasn't originally known to me, actually it just sort of happened. My sister Ellen whispered to me, as dinner was about to come to an end, \"where's the party? Your place? Let's ditch the parents, shall we?\" We didn't really have to \"ditch\" them, they were all ready to bid goodbye until Saturday.\n\nAlthough not exactly a \"huge\" party location, the eight of us had no problems. My childhood buddies, Jerry and Lawrence (who went by \"Chip\") were whom I'd asked to be in the wedding party along with Ellen's husband Dave. Chip was my best man, although both Chip and Jerry had to work on Friday. Dave and Ellen had brought along a cooler of beer and Margarita mix, makings for Pina Coladas and Tequila Sunrises. Even then, nobody was really interested in 'getting drunk', just having fun, and by midnight everyone except for Josette had left. Josette and Stacy were talking and sharing, and eventually headed into the bedroom while I finished my beer.\n\nI turned on ESPN, catching up on all the scores, and contemplated how the last year had changed everything. The shortened 2020 MLB season had changed what was normally a marathon into a sprint. I contemplated all those times in the past where a team had started the year like gang busters, finding themselves in first place after a month, only to fall apart by June and find themselves well out of the playoffs in September. And then there were those teams that had started slow, reached their stride in July or August and found themselves in the playoffs at the end of the year. But last year, those early birds found they were still \"in it\" after just 60 games, and the \"late bloomers\" never had a chance. Some teams played well but lost, others played shitty but won and, as always, it seemed to be the golden rule: \"them with the most gold, rule.\" And there was nobody with more gold than the LA Dodgers. I contemplated the new \"man on second\" in extra innings rule, as well as adding the designated hitter to the National League. I shook my head, wondering that if the idea was to take \"pitchers\" completely out of the offense, why they just did not change the rule and make an \"offense\" and \"defense\" such as the NFL does? If you DH for one player, why not DH for all players? Nine hitters, and nine fielders. Got a great shortstop who can't hit a buck and a half? DH! Got a dynamite center fielder who can catch anything between the sidelines, but hasn't gotten a hit in 92 games? DH! Got a player who hits a hundred home runs but needs a taxi to get to first base? DH! Of course, then it would not be baseball anymore, but then again, what difference does that make? The American League hasn't had baseball in years. So be it, I sighed, realizing that change is inevitable, and it suddenly popped into my mind that in less than 48 hours I would be married to the woman of my dreams, the biggest change of my life was about to take place. Flipping the TV off, having seen that my team had lost once again, I turned the lights off and headed to the bedroom.\n\nStacy and Josette were lying on one of the king-size beds, talking, as I entered. I reached down and touched Stace's foot, gently stroking her calf. \"Solving the world's problems?\" I asked, having no clue what they were chatting about.\n\n\"Just about,\" she answered, \"going to take a shower?\" I confirmed it, and since we were going to be sharing a bedroom with someone, took my shorts and toothbrush with me as I headed to the bath.\n\nI suppose I should have expected it. All the signs were there, but I hadn't been paying that much attention. That Stacy had invited Josette to stay with us, prior to her \"surprise\" invitation that she had me overhear while we were driving to town, I didn't know at that time. That Stacy had asked Josette if she'd like to have sex with her again, and to 'share' me, our last non-married encounter with someone else, I didn't know. But, when I came out of the bath to find them both still on the bed but dressed differently, there was no doubt. Stacy and I had talked before about what would be fun to do with Josette if she ever wanted to play, and I knew we had reached that point. It was a surprise, but I had to admit, not totally unexpected.\n\nStacy had changed into her black nightie. The lacy see-through cloth did nothing to hide her body, although in conjunction with the lace panty, her pussy was slightly hidden from view. Josette, lying in the middle of the bed so there was no doubt where I was to go, didn't have lingerie on but in many ways, she was dressed more enticingly. A thin, white, form fitting spaghetti strap tank top did nothing but accent her body. That she had been braless all day long, I had previously observed, just noting that she really didn't need one. Her small breasts were enticing mounds, but it was her nipples, already erect, pressing and plainly visible through the cloth, that caught my eye. Her nipples, and some sort of accent or decoration also visible, pressing against the cloth. The top stopped midriff, just above her belly button, with the small matching diamond that all three of the girls had showing. Her bikini panties were small and tight, a slight camel toe showing. There was also a small wet spot right in the cleft, so even if her erect nipples had not been showing, there was obvious evidence of her self-arousal.\n\n\"I hope you don't mind,\" Stacy said, barely able to suppress the giggle of her 'little lie'. \"Josette said she wouldn't mind playing and I told her you wouldn't mind either.\"\n\nI could have gone around to the far side of the bed next to Josette, but instead pulled up beside Stacy, bending to kiss her. I slipped a hand onto her belly, running it up underneath the teddy to her bare breast, squeezing it a bit under the watching eye of Josette.\n\n\"So... I take it my wife's girlfriend is going to watch me molest my wife?\"\n\n\"Well, she's not your wife yet.\" Stacy giggled, by doing so confirming to me that I wasn't misinterpreting what I was seeing.\n\n\"So...\" I repeated, changing it just a bit, \"I take it my soon-to-be wife's girlfriend is going to watch me molest my soon-to-be my wife?\"\n\n\"Uh, huh.\" She giggled, \"and I'm thinking your soon-to-be wife is going to enjoy helping you molest her, too.\"\n\n\"Oh?\" I said, pulling my hand back from under Stacy's teddy. \"Is that so?\" I asked, reaching further across her body, and sliding my hand onto the mound of Josette's breast. My fingers easily found and pinched her nipple through the thin cloth, tracing and exploring and trying to decipher the apparently metallic decoration surrounding it, causing a shiver to run through her body as I did.\n\n\"Stacy says you're pretty good all by yourself.\" I realized my cock had rapidly responded and, pointing down the leg of my shorts, was now trying to erect through the cloth.\n\n\"Oh? Is that so?\"\n\n\"Uhm, hmm,\" Stacy said, her hand reaching over and cupping my cock through my pants, \"that I did.\" Without warning, she gripped the bottom of the shorts and pulled down, my shorts easily sliding down except that they caught momentarily on my cock, which then sprang free. Practically in her face, she didn't hesitate to bend forward just that bit and take me in her mouth, even while I was leaning across and fondling Josette's tit. I slid my left hand back under Stacy's nightie, filling it with her bare breast while my fingers twiddled Josette's nipple.\n\nIt was just a quick suck of my cock by Stacy before she turned back. I had lowered my fingers to the bottom of Josette's tight-fitting shirt, trying to slide them underneath, but it was quite tight. \"Need some help?\" Stacy said as she turned from me and reached over to help pull Josette's shirt up. My other hand now free of Stacy's boob, it was nothing to get the shirt moving with our four hands working together. Josette sat up and raised her arms as she allowed Stacy to remove her shirt, lying back moments later, now nude from her panties up, her nipple decorations now totally visible.\n\nI had noticed earlier, at least once during the wedding rehearsal and a couple of times at dinner, that Josette's nipples had visibly protruded through her shirt. I hadn't been able to see the decorations at that time, but now, at first through the thin tank top and now topless, that she was wearing flower shaped decorations. Slightly springy, they gripped her nipples, both accenting them and presumably keeping them erect.",
        "\"My goodness, somebody's proud of her nipples, isn't she?\" I teased, reaching up with a finger to run it over the decoration.\n\n\"I don't have nice tits like Carrie and Stacy,\" she answered, the somber tone telling me that she was sensitive about her tits, \"I have to do something or nobody would ever notice me.\"\n\n\"Hasn't she got the cutest little titties?\" Stacy giggled, her hand running down over the nearer breast, her fingers closing around her nipple momentarily, twirling along the decoration, \"I just love them.\" I climbed onto the bed, crossing over Stacy and straddling Josette. I reached for the waist of her panties, gripped them and worked them down, Josette raising her bottom off the bed just momentarily to help, and then lying back, now totally nude.\n\nI ran my eyes up and down Josette's body, seeing her tongue nervously licking her lips, watching me as I appraised her. Her breasts were just slight mounds on her chest, but her nipples, totally erect and apparently held that way by the decorations, more than made up for their smaller size. Her belly was firm and hard, muscles rippling beneath the skin; that she had been and was a competitive swimmer was obvious from her muscle development. The diamond belly piercing matched perfectly with Stacy and Carrie's was next; just as on those other two a beautiful accent to a beautiful body. Below that, her pubic hair was trimmed into a small triangular shape, just enough to fit within her bikini bottoms. It was wider above and ended in a point just above her lips and clit with her labia and lower pubic area shaved smooth. \"My God, Josie,\" I said, not even realizing that was the first time I'd ever called her anything other than Josette, \"I could eat you all day long. You presented your boyfriends with a feast like this, and they never went down on you?\"\n\nHer face flipped momentarily to Stacy who was just lying beside her watching. \"She told you that?\"\n\n\"She told me everything. Everyone's confessions, about the strippers, about the party. The stripper flipping you upside down and tonguing you for the first time. Her and Cassie sucking your nipples, and Ellen going down on you for her first time with a woman. Sounded to me like you all had a really good time. So, tell me,\" I said as I moved to her other side and climbed further up, \"Is it true that you can cum just from having your nipples sucked?\" I leaned in and took the exquisite little nub of her right breast into my mouth. As I did, her hand came up to stroke the back of my head.\n\n\"Once.\"\n\n\"Oh?\" I pulled back and eyed Stacy who understood what I was thinking. \"It didn't happen when Stacy and Carrie were trying?\"\n\n\"Ellen...\"\n\n\"Ah,\" I said, \"Stacy said they thought she might have interrupted too soon, that Ellen's tongue helped out. But now we're going to see if we can get you off that way before I dine on that sweet pussy of yours.\"\n\nI ran my eyes down her body again, Stacy on the far side leaning in and suckling her nipple. I reached out with my hand to her leg, running it up her thigh and across her hip and onto her stomach before I too leaned back in and suckled her near breast.\n\nIt was obvious, from the time my tongue touched her, that her nipples were ultra-sensitive. The way the one in my mouth swelled to my tongue, and I presume the other to Stacy's tongue at the same time; the way her body writhed and twisted beneath our mouths. I had stroked her body with my hand, but had now removed it, keeping it on the bed beside her; nothing was touching her except my mouth and Stacy's. It was hard, the natural thing would have been to accent my mouth with stroking of her body, but I just listened and felt the arousal increasing through her nipple.\n\nI swirled my tongue around and around her areola, tracing the decoration, sucking hard at times, relinquishing the vacuum and the slithering back and forth with my lips at others. I'm sure Stacy was doing similar, although I had my eyes closed, just relishing the sensuous feel. That Josie was getting more and more aroused was fed back to me through her body. The feel of her stomach rising, tilting the angle of her breast to my mouth; sensing her hips rising, desirous of touch and penetration by fingers or a cock or tongue; her chest rising, forcing her tits against our faces. And, of course, her nipples themselves, swelling and elongating even more to the pleasures of our mouths.\n\nKnowing that she seldom wore a bra, there were many times I'd seen her breasts without any protruding nubs under her clothes, just her mounds of femininity accenting the curves of her waist and bottom. Other times, when something was said, perhaps some teasing going on, I'd seen her nipples perk-up, two sexy little accents to an otherwise nearly perfect body. When we had started in on her, they'd been more erect than if she had not been at least slightly aroused, presumably assisted by the decorations, but nothing like they were now. The harder and longer they got, the more her chest pressed upward, trying for a harder contact, and the more her breathing in my ear became ragged. Her hand, resting on the back of my head, and presumably the other on Stacy's, gradually gripped as the tension in her body increased. I heard her inhale, a slight \"ugh.... ungh...agh...\" and suddenly she collapsed back in on herself in orgasm. Her chest had been lifted off the bed, it now fell back as her shoulders came together, an \"Oh Fuck! Oh Fuck!\" and a hard convulsion contorting her body.\n\nSome women when they cum don't want to be touched for a while. Others, when they cum, like it to continue, like to stay on that high as long as possible. I wasn't sure with Josie, so just continued sucking and nibbling her nipple waiting for a sign that she wanted me to quit, her nipple now easily twice as large as when I'd started. Her stomach and entire body were now convulsing, shuddering, and shaking, and only about half of the spasm I could equate directly to something I did. My teeth closed around, nipping on her nipple, and a shudder went through her body. Closing my lips, sucking hard and running my tongue back and forth caused her shoulders to clinch together. Finally, her hand on the back of my head indicated she was trying to pull away and I eased my assault on her breast. \"Enough...\" she breathed and, as I pulled away, she breathed out an \"Oh my God...\"\n\nI looked across her body only to find Stacy looking at me. A wry grin crossed her face as she said, \"I guess we've determined she really can cum from her nipples being sucked. My God that was hot.\"\n\n\"It was that\" I replied. Turning to Josette I said, \"do you cum as hard with a tongue on your clit?\"\n\nHer eyes had been closed, now they opened, and she looked at Stacy, and then at me. \"I did when Stacy did me.\"\n\n\"Oh, that's right, you've never had a man do it, have you? Maybe we can rectify that right now.\" I hadn't yet moved from where I was, although my hand had once again reached to her belly and side, stroking from thigh to breast.\n\n\"Not yet, give me a minute,\" she whispered, and looked down along her body and mine. \"I want to suck your cock.\"\n\n\"There's time enough for that later,\" I answered, \"right now, it's all about you, although Stacy did say you were pretty good with your tongue, too.\"\n\nLooking over at Stacy, I saw that she had reached down to pull her nightie off and was now slithering out of her panties, so she was totally naked with us. Josie glanced at Stacy again, finding a smile there before she answered.\n\n\"That was my first time, I don't know how good I was.\"\n\n\"And your second time, and your third time,\" Stacy giggled, and now naked, slid up beside Josette, her hand once again finding her breast. Josette's hand that had been behind my head reached over and fondled Stacy.\n\n\"You've got such nice tits,\" she said, another shiver running through her as she did. \"I always thought you had perfect tits, although Ricky probably wishes they were big like Carrie?\"\n\n\"I don't know, he always says they're prefect too, but he definitely liked playing with Carrie's.\"\n\n\"Why do you girls always seem to want what you don't have?\" I whispered, sliding my hand up onto Josie's other breast as I did. \"Josie wishes she had boobs like Stace, Stace wishes she had boobs as big as Carrie. I think you girls are all perfect. Carrie loves to titty fuck, which she can do better than Stacy, and Josie can cum from just her nipples being sucked, which I know has never even come close to happening with Stacy.\"\n\nStacy giggled, \"Yeah, but it sure would be fun if I could.\"\n\nLeaning over a bit, I moved my hand and began kissing on Josie's body. Kissing below her breasts and onto her belly, I followed the lead of my hand which was caressing constantly lower. As soon as I could I kissed her pubic hair, Josie's hand following along on the back of my head.\n\nNow essentially perpendicular to her, I had to either turn further to a 69 position, or move down to crawl between her legs. Although a 69 would be fun, I chose to move away from her, going below her legs and then forcing them apart as I slowly kissed up the inside of her legs.\n\nWith her hair trimmed into a triangle, I started there with my mouth and gradually worked downward. I kept my tongue and lips wet, suckling her labia gently, running a tongue along her cleft, careful not to do too much, too fast. I don't know what or how my sister or Stacy had pleasured her, but by now I intimately knew what Stacy liked and had no problem pleasuring Carrie when we'd been in Mexico either. I wanted it to be slow and intoxicating, I wanted her to have as much of an orgasm from my tongue as she had from Stace and me sucking her nipples minutes before.\n\nI hadn't been paying attention to Stacy and what she was doing, but some movement above my head made me look. Stacy was moving into position above Josie's face, and while I watched Josette's tongue came out to tantalizing Stacy's proffered nipple, just as Josette's fingers moved between Stacy's legs, her finger finding her clit and causing Stacy to shudder.\n\nStacy had told me several times how hot it was to watch Carrie and me together, how hot it was to assist aiming my cock into Carrie's quick. She'd also told me how she and Josie had really clicked that last night in Palm Springs, and although Ellen had gotten her off with her tongue to begin with, after Carrie and Ellen had gone to the other bed, Josette and Stacy had played for quite some time. Now, seeing Josette fingering my fianc\u00e9e, seeing Stacy's leg opening up to give Josette complete access to her pussy even while she was suckling on her breast, I suddenly realized just how hot that scenario was. I hadn't expected this. Although Stacy had said that if and when we invited Josette to stay with us she fully expected that it would be staying not just in our hotel room or our apartment, but also in our bed, I really hadn't fathomed how hot it would be to see them together like that. My cock throbbed in anticipation.\n\nMy tongue, on the other hand, continued to tease Josette, the writhing and squirming of her body telling me how close I was getting to finishing her off. I didn't need to look and closed my eyes, letting my tongue tell me if what I was doing was prefect or not. I extended the build-up as much as possible; I suckled her labia, ran my tongue between them from her vagina to her clit, slipped my tongue as deeply into her vagina as I could, finally concentrating on her clit. Her hips were trying to force her pussy into my face by that time, but she need not have as I was already committed to finishing her off. Once her orgasm started, I kept her at the peak, shuddering and shaking, trying my best to extend her pleasure. I heard a moan and again opened my eyes.\n\nI had felt the movement and shifting on the bed, but with my eyes closed, savoring Josette's nectar and arousal, I hadn't realized what Stacy and Josette were doing. Now, opening my eyes, I found myself looking at my soon to be wife's gorgeous ass rather than Josette's face. As I was lying between Josette's legs, my tongue feasting on her pussy, Stacy had straddled her and was riding her tongue. The moan that I had heard had been Stacy, not Josette. Josette's tongue had made Stacy cum even as she came to my own.\n\nPulling away from Josette I crawled around her legs and up beside them. Sitting up on my knees, I touched Stacy's head to turn her face to mine, expecting her to just turn. Instead, she lifted from Josette's mouth, swinging a leg over and kneeling beside me. Now she did hungrily kiss me, her lust obviously not slated, and at the same time, I felt Josette's hand, and then her mouth, on my cock. She had rolled to her side, facing me, and was finally sucking my cock for the first time.\n\nStacy looked down when I did, and then gave me a hot wet kiss before pulling away and lying back down beside us. Reaching up with a hand she gripped my cock and Josette's hand. It wasn't long before she leaned in closer and Josette shifted my cock toward Stacy who then took me into her mouth. Getting a blow job from two beautiful ladies had always been a fantasy. A threesome, for that matter, had always been a masturbatory fantasy. And, although Stacy was the only lover I had ever had a threesome with; even in Mexico, with Carrie, a dual blowjob hadn't happened. Now they returned the oral pleasure I had bestowed just moments before. Stacy watching Josie, Josie watching Stacy; Stacy licking and sucking while Josie stroked with her hand, Josie swallowing my cock, her tongue slithering around and around while Stacy slowly stroked. Eventually the inevitable occurred, and I too groaned in the ultimate pleasure.\n\nI awoke to an almost dark room, entangled in arms and legs. As usual for me, it was at least an hour earlier than Stacy liked to wake. Josette was snuggled to me on one side, Stacy on the other. I don't know how long I'd slept, by the time I had come to their combined mouths I was more than ready to fall asleep. Having gotten up earlier than normal to drive the 7 hours, having the rehearsal, having the \"party\" followed by our own private \"after party,\" just relaxing after cumming had been enough. I couldn't remember whether Josette and Stacy had shared with each other after I dozed off, but my dozing had turned into a sound sleep. I wondered whether Stacy had needed an orgasm to fall asleep or whether our play had been enough.\n\nI disentangled myself, trying not to wake either woman, although I knew that was virtually impossible. I went to the toilet and climbed into the shower, scraped the stubble off my chin, and half an hour later when I returned, they were no longer asleep. It was lighter now than it had been with sunlight filtering around the edges of the blackout curtains. The girls were now closer together, lying on their sides facing each other, presumably talking. \"I see my sleeping beauties have awakened,\" I said, sitting on the bed behind Stacy and slipping my hand onto her naked bottom.\n\n\"Hmmm,\" Stacy said, rolling toward me and putting her arm around my waist. I leaned down to kiss her, and she put her arms around my neck to pull me in. \"Good morning, my love.\"\n\n\"Good morning,\" I replied, \"Are you two starting the day without me?\"\n\n\"Not yet. Just waiting for someone to bring our play toy back to us.\"\n\n\"Oh? Is that all I am, a play toy?\" She pulled on my arm to move me over her, and back onto the bed between them. Josie moved back slightly, and I flopped onto my back between them.\n\n\"Not yet,\" Josette giggled, her hand grabbing my partially hard, but rapidly expanding, cock, \"but you're getting there.\" Stacy's hand came down to join Josette's, two hands playing with my cock had me hard almost immediately. \"Do I get a kiss too?\"\n\n\"I don't know,\" I answered, looking the other way to Stacy, \"Does she?\" Stacy smirked, her hand reaching up and pushing my cheek to turn back toward Josette. \"I take it that's a yes,\" I answered. Josette rose just a bit and I slid my arm under her, allowing her to snuggle closer and lean into me. Her eyes closed, her hand withdrawing from my cock, leaving my fianc\u00e9e alone fondling me as she gave herself into a kiss. Lips at first, followed by tongues and increasing passion, I felt myself getting harder not just from Stacy's grip but from lust for the girl I was kissing. I let my hand rise to her breast, finding and playing with the decoration that still adorned her nipple.\n\n\"I like your decorations,\" I said, pulling away from the kiss. \"Do you wear them all the time?\"\n\n\"No, not all the time. I like them too. They help with my A.D.D.\" I pulled back a bit to look into her face.\n\n\"Attention Deficit Disorder?\" I translated, making sure I had not misunderstood what she was saying. \"You have A.D.D.?\"\n\nJosette giggled, \"Just my girls. I don't have big sexy boobs like Carrie and Stacy do so they don't draw as much attention. They get more attention when my nipples are hard.\"\n\n\"Oh, is that so?\" I said with a laugh, rolling back onto my back and pulling her slightly up and onto me, moving her so I could suckle her nipple. Stacy moved back slightly to give me room as I did, never relinquishing her hold on my cock. I suckled her nipples, nipping them with my teeth, eliciting a groan of pleasure from her when I did. \"I think what you've got is absolutely perfect for you,\" I said as I moved to her other nipple.\n\n\"I'm glad you like them,\" she said, moving her body completely on top of mine so it was easier to nibble her nips, \"but it doesn't keep me from wishing I had some real tits.\" I gently closed my teeth on her right nipple and her body responded with a sharp shudder. That she'd moved into a position where she could now easily ride me Cowgirl wasn't missed by me or by Stacy, and when Josette moved her hips just a bit lower, Stacy began to stroke her pussy with my cock.\n\n\"Are you ready to ride my boyfriend?\" Stacy whispered a moment later. Josette moved still lower, and with Stacy holding my cock upright for her, slowly slid me into her pussy. I wasn't sure whether it had totally been me that caused it, but she was hot and wet.\n\n\"Oh God, I love doing that!\" Stacy said, having relinquished the grip on my cock as I slid into Josette and moving back up beside me. I knew exactly what she was saying, she'd told me before how much it had turned her on watching me fucking Carrie and even more so guiding my cock into her, and how she had wanted to do the same with Josette. Now she relinquished her hand hold, just watching my cock disappear into Josette. She moved back up next to me, her arm going across my chest as she leaned in to kiss me.\n\n\"I love you, baby,\" I whispered to her as her face came up to mine. She kissed me, every bit as hot and passionate as my kiss had been with Josette moments before. That she was almost as turned on as Josette was obvious to me. My arm was around her shoulder and onto her back so there was not much I could do to please her except to entice her to help out. Looking down my body I could see my cock disappearing and reappearing inside Josette, glistening with her juices as she worked me over at her own speed. Leaning back from the kiss, Stacy's head came onto my shoulder, her hand onto my stomach, as she also watched. \"Come up here so I can eat you at the same time,\" I whispered and that's all it took.\n\nSitting upright Stacy rose to her feet, straddled me with her back to Josette, and lowered her pussy to my face. I had not touched her pussy yet, but when I did I found her as hot and wet as Josette, a groan emanating from her, as my tongue began to work its magic on her body. Knowing exactly where my tongue was, she was able to direct herself precisely where she wanted. Lower down, and my tongue searched out her vagina; rising higher - she directed her clit to my tongue. Pulling my arms from around her legs, I raised them until I could fondle her breasts, the combination of a tongue on her clit and hands on her tits eliciting another groan of pleasure from her.",
        "With both girls on top, I had little control of anything. Josette was fucking my cock at her own speed, obviously enjoying having me in her and not trying to get off very fast. Stacy, fucking my tongue, seemed much more intent on getting off, until suddenly she rose, pulling away from me and my hands, turned around and lowered herself back to my face, her hands on my hips to steady herself as she seated her pussy to my tongue once again.\n\nNow able to only see up her sleek back and ass, I ran my hands onto her ass cheeks, squeezing and fondling them, before sliding m hands around to her front and reaching for her breasts once again. I immediately bumped into other hands -- Josette's hands were also on her breasts. And while I couldn't see them, raising my hands to Stacy's arms, I could feel that hers were extended out and she was playing with Josette's nipples at the same time.\n\nIt wasn't possible for any of us to last long, and we didn't. Stacy came almost immediately, but she was guiding where my tongue could work on her, and with our months of experience, I knew exactly what did her good. She stayed, shudders of orgasm rippling through her body until she'd had enough, and then moved.\n\nJosette had been fucking me slowly, but with Stacy's hands on her nipples I could feel her movements becoming erratic too. It wasn't long and just as when I'd tongued her the night before, her directed movements segued into a whole-body shuddering as she came. Her movements had been moving me closer to cumming too, but now that she had collapsed forward into a quivering mass on me and against Stacy, my impending orgasm rapidly receded. With Stacy moving away from my tongue, Josette naturally followed, my cock flopping free as she moved off of me.\n\n\"Ohh!\" Josette breathed, her body relaxing now that she wasn't touching or being touched by me, \"Oh my god, that was so good.\" A sudden convulsion ran through her body as Stacy's hand once again fondled her breast and nipple. \"He's good, isn't he?\"\n\n\"Oh God yes,\" she answered as Stacy looked sideways and smiled at me. Whether it was that she saw my cock still hard, or that there was no evidence of my orgasm, she said quizzically, \"Didn't you cum?\"\n\n\"No, that's ok. It was nice.\"\n\n\"Oh baby, I'm sorry we didn't take care of you. Do you want me to suck you off?\"\n\n\"No, let me!\" Josette interrupted, apparently having recovered from her orgasm as she turned and flopped onto the bed where she could attack me with her mouth.\n\n\"Did I say you could?\" Stacy laughed, reaching for my cock with her hand, bending it away from Josette.\n\n\"You didn't say I couldn't,\" she giggled in response, also reaching over to my cock, and suddenly my two lovers were mock fighting over who got to give me a blow job. It wasn't much of a fight as Stacy ran her tongue up the shaft, and then gave in first, pushing my erection back where Josette could also lick the shaft. Back and forth, licking and caressing until Josette took me into her mouth, now causing me to groan. She sucked and licked before pulling back. \"I taste different than you do,\" she said to Stacy, and I realized she was talking about her own juices on my cock.\n\n\"You've never tasted yourself before?\"\n\n\"Uh-uh,\" she answered as she slipped her lips back over my cock head.\n\n\"I do sometimes. When I am masturbating and lick my fingers, I've tasted myself.\" Josette pulled off and pushed my cock toward Stacy who stuck out her tongue and licked up the shaft. \"I like the taste of your pussy,\" she giggled, \"and I especially like tasting it off of Ricky's cock.\"\n\nThe two of them were definitely not in competition for sucking my cock, willingly working together and driving me closer to completion on my first ever double blow job. I finally approached orgasm, and whether it was that my cock was now purple and swollen from the long attention or whether Stacy recognized my tells by this time, when I groaned and reached for them, neither pulled away. Instead they both leaned in at the same time, both caressing my cock with their lips and tongues from opposite sides. When my cock finally spasmed it was into the air between their lips, both coming away with my jism on their faces.\n\n~\n\n\"How does this work?\" I asked Stacy sometime later as we were coming out of the shower. After our morning play time, Josette had taken a shower and left, saying she had things to do before the girl's hair appointments that afternoon leaving Stacy and me alone, for the first time virtually since we'd arrived in town. Stacy and I had showered together immediately after Josette, and now were getting dressed.\n\n\"How does what work?\" Stacy asked. With just her bra on, she turned to look at me as she was getting her blouse ready to put on.\n\n\"You... Me... Carrie and now Josette? We're getting married tomorrow, so what does that mean? I can't say as I ever imagined having sex my wife's friends, or my wife having sex with her friends. You seem to enjoy us doing that.\"\n\n\"I do,\" she said simply, walking around the bed and stepping up to me. I put my arms around her, and realizing she wanted to be kissed, did so. \"Haven't you liked it?\"\n\n\"Of course, I wouldn't have done it if it wasn't enjoyable. But what about the future? Are you going to continue to bring your friends to our bed, sharing me as a lover with them?\" She pulled away, and with a glance at me reached again for her blouse, shimmying it over her head and shoulders before she turned back. She'd taken time to think through her answer, exactly what I would have hoped for. Stepping back to the bed she sat beside me where I was putting on my shoes, and took my hand, stopping me.\n\n\"No. Do you mind me being lovers with my friends?\"\n\n\"I don't know. I can't say as we've got a traditional relationship. I mean, just how many guys get to marry their sexy ass cousin and she brings a couple of hotties with her for variety?\" I grinned at her, but she was serious.\n\n\"I'm serious, Ricky. We're getting married, and you have a say in my love life now. If you want me to give them up and be exclusive with you, I will.\"\n\nI reached up and stroked her face, turning it up towards me, thinking about it before answering. \"I don't think so. I cannot dictate to you or control who you love, all I can say is that I love you. Carrie and Josette are both hotties, but if you want me to never play with them again, I won't. Carrie realized that; when you were pushing me to hook up with her she said no, not unless you were involved. She said she'd hook up with us,  but not me But if I tell you what you can or can't do, eventually you'll resent me for that.\" I stopped for a moment, she was just looking at me, thinking about what I said. \"What I'm not sure about is the future. What happens when they find someone of their own and get married? What then? Will they want to share you with their...\"? I didn't need to finish and didn't; she understood.\n\n\"When they get married, will they want me to join them.\"\n\n\"Exactly. I'm sorry, I know it's not fair, but I don't think I want that. At least not now, with someone I don't know, someone I can't even imagine.\"\n\n\"Carrie and Josette have been my best friends for years. We've always shared everything. And since we've become lovers, it only seems natural for me to share you with them, and I really get hot watching you with them. I'm not interested in anyone else.\" I nodded, contemplating what we were negotiating.\n\n\"God, Stacy, I'm so fucking in love with you. Fucking them was hot, but if I never do that again, that's perfectly fine with me. You're more than enough woman for me.\"\n\n\"Hmmm,\" she purred, \"I like that. But I like sharing you with them, too.\"\n\n\"Me too.\" That she said she was not interested in anyone else was a relief in my mind. Standing up I turned and offered her my hand. \"You better hurry and get dressed, your hair appointments are in just a bit.\" I had to turn away as I could not keep a straight face as I added, \"and I've got to meet Vickie for one last quickie this afternoon...\"\n\nStacy didn't even rise to the bait, almost instantly she responded, \"When I Lorena Bobbitt your dick, do you want me to just trash it or have it bronzed and put it on the wall?\" I turned back towards her to see her give me a big grin and stick her tongue out.\n\n~\n\n\"You're looking pretty hunky, bro,\" Ellen said quietly for just me as she stepped up to me, reached up and straightened my collar. \"Pretty dapper, if I do say so.\" She had a small plain box in her hand as she did, and although I noticed, I did not pay any attention to it.\n\n\"You're looking pretty sexy too,\" I responded, raising an arm and having her slide over into my hug. \"I think I like the dresses,\" I said, glancing down at her bare chest. The bridesmaid's dresses were all off the shoulder, bare chest, and I could see that on her and assumed that at least for Carrie, had significant cleavage showing. I had seen my sister in a bikini before which, like most bikinis, left most of her breasts bare, and I had never even thought anything of it. But in a low-cut dress which exposed the same amount of breast, the same amount of cleavage, I recognized was supposed to be sexy, and was. I had not seen Josette yet, although I knew she didn't have a lot of bust to show off, I was sure it would be equally as sexy on her.\n\n\"You always did like tits,\" she responded.\n\n\"Oh? How do you know that?\"\n\n\"Mary... Kathy... Rebecca Hastings...\" she said, listing off some of my previous girlfriends, \"Stacy...\"\n\n\"Ok, Ok! Alright already,\" I laughed, pushing away from her. \"All ancient history, except for Stace.\"\n\n\"You'll like her dress.\"\n\n\"I hope so.\"\n\n\"Come with me,\" she said quietly. Taking my hand, we stepped outside, and over to an adjacent room. Stepping in, she pushed the door closed.\n\nHer hand came up, handing me the small box. \"I got you and Stacy a little present.\"\n\nOpening the box, I was surprised to see just a small remote control of some kind. I did not know what it was for but as I reached to push the \"on\" button, I was stopped by her hand gripping mine. A \"No -- wait,\" and Ellen giggled as she pushed my fingers away from the \"on\" button. \"What is it?\" I asked, flipping it over and looking at the plain back.\n\n\"This is the on button,\" Ellen said, pointing to the button that I'd already deciphered as the on/off, \"Push it, it goes on, push and slide and it stays on, and this is the speed control,\" she said, pointing to the two arrowed buttons with up and down arrows. \"But don't turn it on until you can see Stacy. It's the remote control for the vibrator in her panties.\" She giggled, \"I recommend you don't turn it on, at least for now, unless you can see where she is. Low will let her know you are thinking naughty thoughts about her and keep her all hot and bothered, and high will bring her to her knees. Anything in between -- well, you will have to play and see how much she can take. Believe me, at least the first few times it's hard not to physically react, even on low.\"\n\n\"Vibrator?\" I said, only slowly understanding what my sister had just given me, \"you mean, like a sex toy?\"\n\n\"Uh-huh, and it's absolutely the best ever.\" I can be slow sometimes, but suddenly I realized she was saying that she, and Dave, had played with one of these before.\n\n\"You've... uh... the first few times...\" I repeated, suddenly realizing that I was about to ask my sister about her sex life, something I'd never really done before, but she had already confessed that she and her husband had played with this, or something similar.\n\n\"Uh-huh. You can tickle her clit anywhere, any time, and nobody else will know. It's Dave's and my favorite toy when we're not at home. But be careful, it really will bring her to her knees if you've got it on too high and surprise her. And don't leave it on too long unless you're wanting to get her off, just short bursts work best to start.\"\n\n\"Anywhere? In public?\" I asked, guiltily glancing around the closed room, feeling like the world knew about this naughty little controller.\n\nEllen giggled, \"That's the point. Dave got me off one time in church when I was sitting next to mom.\" She giggled again, \"believe me, it was hard not to squirm.\"\n\n\"I guess that answers whether she'll be wearing panties under her dress?\" I stated more than asked.\n\n\"She said she wasn't going to, but I think I convinced her that, in this case, it's more fun to wear something naughty than to go bare. Come on,\" she said, turning back to the door and stepping out. \"See you in a few minutes.\"\n\nThe wedding was, well -- a typical wedding? For me it was a blur; I remember seeing Stacy at the back as she started up the aisle escorted by her dad. We said, \"I do,\" \"we do,\" and then suddenly it was over, we were now married and at the reception.\n\nThe weather was perfect for an outdoor wedding in a park, followed by an open-air reception. I would have been just as happy to have gone to the courthouse and just \"gotten hitched,\" but of course our mothers would not have any part of that, and truly the setting was beautiful. I couldn't help but think that every time I shook the hands of a relative, since most were relatives of both of us, they must have come to grips with the fact that Stacy and I were cousins, as well as that we were now \"married.\" I only got a negative feeling from one person, and he was only a relative by marriage. I remember thinking \"Fuck him!\" as he walked away and didn't let it bother me in the least.\n\nWe were about half through the reception line when I reached down to scratch my leg, just rubbing it, and realized that something was in my pocket, and immediately remembered the toy controller. I glanced at Stacy, she was oblivious to me, holding the hand and talking with some unknown well-wisher, probably someone she knew, and I didn't. I slipped my hand into my pocket, arranged it, and thumbed the on button.\n\nThe response from Stacy was instantaneous; a yelp, squeezing the hand she was holding and bending forward. I immediately released the button, just a momentary buzz on her clit, but recognized immediately that if it had been on high it would have been just as Ellen said -- she'd have been on her knees.\n\n\"Are you OK, honey? What's wrong?\" The unknown woman concernedly asked as Stacy turned to me. I put my arm out and she stepped into my embrace, relinquishing the woman's hand, her eyes coming across mine, an unspoken \"Oh My God!\" look passing between us.\n\n\"I'm... I'm OK... Just a... stomach spasm,\" she lied, \"I think I just need some food.\" Returning my hug, her mouth came up by my ear and she whispered, \"Oh My God! That was mean!\" As Stacy turned back to the reception line, my eyes caught sight of Ellen and Dave behind a crowd of people and looking right at us, both of them laughing. They knew exactly what had happened, and while I was watching, Ellen's eyes got big and her body jerked, bending momentarily toward me. She grinned and turned to Dave, playfully slapped his arm and then gave him a big kiss on the cheek. I saw his hand coming out of his pocket and Ellen glance back at us, confirming what I thought had just happened, as they moved towards their seats. She hadn't specifically said she was wearing her vibrating panties, but just as they had been watching and known I'd just teased Stacy, I knew that Dave had just teased Ellen.\n\nI could tell that Stacy was expecting more, but I didn't give it to her immediately. The reception line depleted, we moved on to an intimate dinner for a hundred, with Stacy and me at a table up front while Carrie and Ellen and Josette and my \"assistants,\" sat at the table directly in front of us. I had to laugh at the \"assistants\" name; really all they were there for was to take me to a bachelor party and escort Stacy's bridesmaids. It was all fairly traditional, with perhaps that one naughty exception.\n\nThe second time I teased Stacy was when she was sitting down at our table. I had just pulled her chair out for her, controller unseen in my hand, and as she lowered herself to the chair, I again pressed the button. She flinched this time but, in the act of sitting down as she was, I don't think anyone noticed. She leaned over to me and whispered, \"You're a brat.\"\n\n\"No, Ellen's the brat,\" I responded, and both of us looked directly at her. When she looked up at us, she knew exactly what we were thinking about and burst into a laugh. Dave looked up to see what she was laughing at, and when she whispered something to him, he also got a big grin on his face. At least they kept our naughty secret to themselves.\n\nI don't think many of us have a real clue where \"traditions\" come from. We just do them because we have always done them. Tossing of the bouquet, throwing rice over the newlyweds, the first dance together, the bride dancing with her new father-in-law, the groom dancing with the new mother-in-law. Except that Stacy and I had known our new in-laws for all of our lives, it was all led by tradition.\n\nI'd occasionally teased Stacy again all evening long, just a short burst of stimulation here and there, which always elicited a hug and quick kiss in return. At least most were short buzzes, one longer buzz was during dinner when we were seated, and I left it on for perhaps half a minute. She had done her best to not show anything. A quick jolt to her body when it turned on, and then her hands gripping the table, trying to not look like anything was happening, and then the obvious relief when I turned it off.\n\n\"Oh My God, Ricky, if you hadn't turned that off, I would have cum,\" she whispered into my ear.\n\n\"A hundred witnesses to your first married orgasm?\" I giggled and whispered in reply, nibbling her ear and then turning her face up and kissing her outright when someone clinked their knife against their glass, another tradition met.\n\nWe walked around together after dinner, greeting all our guests. When we got back to the table with all our bridesmaids and groomsmen, I made an effort to lean in and hug each of the bridesmaids, saying thank you, until I reached Ellen. Holding the remote control hidden in my hand, I slid my hands down her arms knowing she could feel it, and when my hand reached hers, I surreptitiously slipped the controller into her hand. \"When we dance, make her cum,\" I whispered so just she could hear. She didn't directly acknowledge that she'd heard, but when I glanced back as we walked to the dance floor, she had a twinkle in her eye.\n\nI felt Stacy twitch in my arms, her face rising from my shoulder to look me in the face. If it had not been for the twitch, she might have hidden it, but her quiet \"you stinker!\" and a slight shudder through her body confirmed that Ellen was playing with the control. I could not hear a buzz, but I could feel the buzz of Stacy's body as Ellen controlled it as I had asked -- to get Stacy off. \"Ha...How are you doing that?\" she whispered, her body slightly shuddering in my arms.\n\n\"Doing what?\" I whispered back into her ear, holding her still closer so that if she lost it, nobody would know.\n\n\"Ohhh... I'm going to...\"\n\n\"Uhm-hmm,\" I hummed, \"I know.\" The dance wasn't long, perhaps three minutes, but Stacy's warning of impending orgasm was needless, I could feel her body against mine, her body in my arms, and when I spun us around to where I could see Ellen, she came. I don't know whether Dave was watching, but my eye caught Ellen and I could tell she knew. Just a slight nod at her and the rigidity in Stacy's body relaxed.\n\n~\n\n\"How did you do that?\" Stacy said quietly, perhaps three hours later when we were in the parent provided limousine on the way to our \"wedding night\" hotel room. Tomorrow evening we were on our way to Tahiti, but tonight, we had the bridal suite downtown.\n\n\"Do what?\" I asked, surmising that she assumed the vibrator had been controlled by me. I'd let her know at the dinner table, in the reception line, but she hadn't picked up that I'd passed it on to Ellen.",
        "\"The vibrator. How did you do that? I couldn't even see the controller.\"\n\n\"Magic?\" I teased. \"Did it work?\"\n\n\"Hmmm,\" she crooned back at me, and leaning over, gave me a wet and sloppy kiss. \"Yes, it worked.\"\n\n\"What makes you think I did it?\" I asked, kissing up the side of her face and nibbling at her ear.\n\n\"You didn't?\" She responded, pulling away from me, and looking me in the face to detect my honesty. I just smirked.\n\n\"Who gave it to us?\" I asked a moment later.\n\n\"Ellen?\"\n\n\"Uh-huh.\"\n\n\"Oh! That brat! I thought it was you!.\"\n\n\"It was until we were about to dance, and I knew I couldn't control it unseen. I told her to make sure you came.\"\n\n\"Oh! I can't believe it,\" she laughed, and reached for her handbag. Fumbling she soon got her cell phone out, and pushed dial for someone.\n\n\"Who are you calling?\" I asked, but she didn't answer.\n\n\"I can't believe you,\" she said without any greeting when someone answered. \"You were supposed to give that to Rick!\" I surmised it was Ellen, whatever she said elicited a peal of laughter from Stacy. \"Yeah, Oh yeah.\" Ellen said something and then she flipped it onto speaker phone and said, \"I can't believe it, my first orgasm as a married woman and it was at the hands of my sister-in-law!\"\n\nAll three of us laughed, but Ellen had the last word. \"Welcome to the family, sis.\"\n\n~\n\nThis will be the final submittal of the CWB series. Most of my stories are planned and thought about for months or years before I put pen to paper, however as indicated in the opening segment, this wasn't a planned or thought out story, it was just a response to the \"Covid Quarantine Contest\". It was all of you, demanding more, that continued that one-time stand alone story into a series.\n\nAs the last installment, I am going to dedicate the entire series to those unfortunate souls that have perished from this awful Pandemic, nearly 1.5 million at this writing, and increasing by over 10,000 per day.\n\nI hope you've had fun reading, but remember that the premise was based on the worst Pandemic since the only partially documented Pandemic of the 1918 \"Spanish\" Flu. Remember that the 1918 flu is called the Spanish flu in that Spain was virtually the only \"free\" country talking about it. The military of virtually all other countries squashed whatever was really happening, which was that anywhere between 20 and 100 million people died from essentially the same type of symptoms as Covid 19 has presented.\n\nOf course, the reality is, using the naming convention of pandemic by our last President as the \"Chinese Virus,\" the 1918 flu should have really been known as the \"American Flu, as the earliest documented cases were in the US Army basic training center in Kansas. The US Army, in its infinite wisdom, then packed up everyone, whether sick or not, and put them in troop ships going to Europe. By the time they arrived two weeks later, nearly everyone had it, and it transmitted to allies and enemies alike.\n\nSo now we've got Covid 19, of which we are currently showing 169 million infected, and 3,499,220 dead, worldwide. We, in the US, tend to think the world is centered in North America and seeing the decreasing trends here, many believe the pandemic is over. We don't pay attention to the facts, we don't really look at the statistics, we ignore what is happening elsewhere, but today -- May 26, 2021 -- the US STILL has the most infections and the most deaths, the absolute worst response in the world. (Although India, with an average of over 200,000 new infections per day (but 4 times the population of the US) could match our infections by July 1 and our deaths by August 1), but there is nowhere that is yet approaching the infections per million people, or deaths per million, that the US has.\n\nEven with the introduction of multiple vaccines, Covid is not over. The new cases per day in the US are 14% higher today (22,738) than they were one year ago today (19,901), and many countries (Brazil, and India being prime examples) still have serious infection rates and death rates.\n\nTake Care people. Stay well, stay alive, and if you happen to think about it, click those stars below as a 5 and that little button as favorite! Rick and Stacy and Carrie and Josette and Ellen all thank you! LOL "
    ],
    "authorname": "BenLong",
    "tags": [
        "cousins",
        "sharing",
        "toys"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/cwb-7-married-with-benefits"
}