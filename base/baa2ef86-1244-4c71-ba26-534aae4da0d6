{
    "title": "The Twelve Vitali Ch. 34",
    "pages": [
        "Authors note: Hello everyone. Well this is the second last chapter and I hope you enjoy the climax of this story! Thank you everyone for the positive feedback and comments they continue to mean the world to me and have brightened my days. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nMaria stood on the tarmac facing the plane that held so many of her dreams and her nightmares. Giovanni, her twin brother, her illicit lover, her stalker and her tormentor, she felt little love for the man who had destroyed her life so completely. She had been imprisoned and cut off from everything she loved. It had taken her many years to come to terms with what she had done and what she had lost; and she had found a sense of acceptance, if not peace, for what she had been and the evil she had wrought on her husbands and children.\n\nShe wasn't that woman any longer, she knew she wasn't, but the thought of seeing Giovanni and withstanding his anger and betrayal terrified her more than the first meeting with her children had done back in January. She didn't know why he terrified her so much now so many years later. He had already taken everything from her, including her identity. She could never be the woman he knew again, and she knew she would die at his hands once he realised that.\n\n\"How long is he going to make her stand there?\" Ricco hissed at Sava. His mother had been standing in full view of the plane with Leyton Papillo for over ten minutes now with no sign of movement from the people inside. Considering the lengths to which he had gone to get to Maria, it was beyond reasoning that he would make her stand there waiting for him to open the door for so long.\n\n\"Until your brother and Catriona arrive, I think,\" Sava said thoughtfully. \"We had hoped the sight of the woman he wanted would stir him to action, but he has other plans, it seems now. Perhaps the Suebi who are guiding him have a greater hold on him than we gave credit for. Or perhaps he was never here for Maria, but only to distract us enough to give him and the Suebi access to what they wanted all along.\"\n\n\"This isn't what we talked about!\" Ricco growled.\n\n\"The movement of a butterfly wing can change the outcome of one destiny and replace it with another. All we can do is try to grasp each moment before the most likely scenario occurs,\" Sava said and tilted his head as if seeing something only a few feet before him that Ricco couldn't. \"Excuse me for a moment,\" Sava said, and turned toward the hanger where the rest of his people waited and watched.\n\n\"Fuck!\" Ricco growled, seeing the spot in the sky that told him that Matteo and Cat were closer than expected. He needed a plan to keep her safe, he needed a way to ensure the people he loved survived this day. His thoughts immediately went to Cat, her image so clear in his brain. She accepted him, all of him, the good and the bad, the darkness and the light. He could be whole with her like never before in his life. With a vision in his mind and a feeling of panic deep within his gut, he turned and followed Sava in to speak with the other members of the Tater, grateful to see Stefano there with them.\n\n\"I think Giovanni has given the Suebi the true weakness of every table,\" Ricco announced as he approached them, looking up. \"Coming here for Maria is merely a distraction; he's here for Cat and has no intention of releasing Theresa!\" The six men and women stared at him. \"Fuck! It's not just our mothers, is it?\" He asked, looking at the serious faces who watched him. \"We have to warn the other tables; they won't be expecting this with their Chairs away from home!\"\n\nRicco immediately pulled his phone out and texted the close-knit group of friends Matteo had grown up with, thankful that he had placed them as a group in his phone after the buck's night. He hoped they would take him seriously and get their mothers to safety in time.\n\n*Ricco: 17.48: Suebi plans to take the mothers of every table. Protect the heart of your tables, now!* \n\n\"Leyton, you have to call an alert and get your wife somewhere safe now!\" he yelled from the open hangar.\n\n\"I'm here!\" Lydia said loudly enough to draw Ricco's attention back to the hangar. \"Rick made me come with him and put the whole family on alert hours ago. What's going on?\"\n\nRicco breathed and looked at Rick Papillo with new eyes. He was the Oracle of the Papillo and obviously had formidable powers and the belief in himself to follow through on his feelings. Ricco knew he needed to start doing that, no matter what the odds were that he was wrong. In this case, however, he knew he wasn't, and he was glad that Lydia was here with the men who would protect her with their own lives if necessary. Now if he could just protect Cat in the same way.\n\n*****\n\n\"What the fuck have you done, Martino?\" Tony Sartori snarled as alerts started to sound from the phones of the Chairs who remained at the Battaglia fortress. \"If you think your family is immune from a Suebi attack I'd like to know why?\" he made the thinly veiled accusation and silenced the room. \"We all know our families will act according to the protocols we have in place, so if this is meant as a distraction for us to leave you to run and hide, think again.\"\n\n\"Where are your wife and daughter-in-law right now?\" Alberto asked, having received the message almost immediately from his son, Phil, explaining the alert. \"If the Suebi take all of the mothers because of your arrogance and stupidity, your family is done, I promise you I will see to it myself, if no one else will.\"\n\nTrevino stared at them, the blood draining from his face. Giovanni wouldn't have done this to them, but he couldn't deny the fact that Giovanni had already kidnapped members of the Vitali and was flying north to expose the Papillo family and the secrets of each table. He couldn't make sense of it. After Giovanni's outburst several months ago, when he had accused Trevino of knowing Maria's fate, he had calmed down and seemed to have put the whole story Vanessa had told Mario about seeing her mother behind him. The watchers he had personally sent to monitor the man and his son had reported nothing untoward, and now Trevino wondered now about their loyalty to him over the Watchman himself, Giovanni.\n\nTrevino hoped that whoever was sending out the warnings had alerted Theo. The loss of his wife and the new baby would break Theo, he knew, and no matter what else he had to face, he would never be able to face his son again if that happened because he hadn't controlled his brother.\n\n*****\n\nTwelve minutes after Ricco had sent out his text, small bands of Suebi mounted their attacks in ten different locations around the country. Those that had received the message first had moved with lightning speed to get the mothers of their tables to safety. Those that had been in the second wave of alerts, or who doubted the veracity of the message due to old enmities and feuds, were not so lucky with their delay to act.\n\nDante Donati was on his way home when he got the text, and not caring if it was true or not hit the alert button on his phone. He needed to ensure Peri and the children were safe, and while he knew the people at his home would ensure they were safe, he needed to be there himself. He pressed the accelerator to the floor as he dialled Josh, thinking that was the best way to let all the tables know about the warning Ricco Vitali had sent through.\n\nJosh was unreachable, probably having called home as soon as the alert went off. So he concentrated on getting home in one piece and then texting all of his friends. He hoped one of the others Ricco had texted had been in a better position than him to warn the other families. It hadn't even occurred to him to question the text message. This wasn't something people would joke about, ever, and his gut told him it was true, and that was all he needed these days to believe it. With the family under alert precautions, all he could do was get home as fast as possible and warn as many people as he could.\n\n\"Ben,\" Dante answered his phone as he negotiated a corner at speed. \"The Suebi are after the mothers of every Table. Get Carlo to my place, I'm on my way there but not close enough. Get everyone to Peri and the kids!\" he snapped and hung up, leaving Ben to do his job and get his watchmen all streaming toward their country house.\n\nHe arrived home twenty minutes later, the gate open telling him something was very wrong as he drove up the long driveway from the road to the top of the hill. He skidded to a stop behind a large black van and opened his door, bounding up the stairs to the open front door where Dino stood with Lorenzo, looking grave.\n\n\"They came dressed as watchmen. If Ben hadn't changed the password as soon as the alert went out they may have gotten to her,\" Dino said in a low terse voice that showed his disgust.\n\n\"Peri is up in her tower, and the kids are downstairs with Carlo and Louisa,\" Lorenzo added. \"She's not happy, so tread carefully.\" He warned his cousin with a grimace. \"She threatened to do some decidedly evil things to me if I didn't take her to her children, so I blamed you and Josh and said I was just following orders.\"\n\n\"Thanks,\" Dante sighed with a grimace to match, but knowing she was safe and that the people who had come for her had been stopped was worth dealing with her wrath. He silently thanked Ricco for the warning that seemed to have arrived just in time to avoid the crisis. He hoped the other families were doing as well with protecting their mother's.\n\nDante opened the door to Peri's tower and called up his warning as he climbed the stairs. Peri met him halfway, flying into his arms with tears streaming down her face.\n\n\"I need to see the children, please, Dante!\" she sobbed. \"I need my babies close right now!\" He nodded, saying nothing, and walked with her down to the basement, his arm curled about her waist pulling her close to his body, unwilling to let her go, even when the children all squealed in delight to see their parents and ran toward them for reassurance.\n\n*****\n\nNathanael and Oscar moved quickly as soon as the message came through. Their mother and Ally were together at the family depository with their younger brother's new wife, helping her pick some statement pieces for their new home. Hitting the alert, they ran to their car and sped toward the depository, aware that watchmen raced after them, not understanding why they wouldn't have stayed where they were to be collected and taken to safety.\n\nThey arrived at the depository and raced inside to the women they loved, followed by the men in black and gold suits that denoted their station as watchmen. They were heading toward the exit when several more watchmen arrived, claiming to have been sent to retrieve the mothers and take them to safety. There was something wrong, even though they had the right passwords. Nathanael could feel the wrongness of it, and he turned to Oscar and Ally.\n\n\"If you have ever trusted my gut feelings, now is the time, go to the office and lock yourselves in. Go now!\" Nathanael said urgently, and turned to face the half a dozen men who had come to take his mother and Ally from them, prepared for the fight that was about to ensue.\n\n\"That was a mistake, Gambaro,\" one of the fake watchmen said, pulling a gun from his shoulder holster. \"Give us the mothers and we will let some of you live.\"\n\n\"Look around you, fellas. How are you ever going to get out of here if you hurt me?\" Nathanael asked, calmly holding up his hand and trying to speak without a tremor of the panic he felt in his voice. From behind him came a gunshot, and the man, obviously the leader, went down, shooting at Nathanael as he went.\n\nThe fight was short, and when the dust settled two more of their number had been shot, and Nathanael lay on the floor with several people leaning over him screaming to their phones. Darkness encroached on his awareness, and he tried to ask about Ally before he finally passed out, needing to know she was safe.\n\n*****\n\nCarmella Martino sat and sobbed as she listened to why her husband had been taken into custody by the thirteen and held at the Battaglia stronghold. Marina Battaglia had held her older sister's hand and sympathised before turning to Audrey Martino and reassuring her that Theo would be allowed to lead the family through this crisis until the judgement on Giovanni and the family was passed down by the family Chairs who made up the thirteenth table.\n\nAudrey had taken the news stoically. She believed wholeheartedly in her husband and Archie, who she loved almost as much. They were good men, and they couldn't be condemned by the sins of their fathers. She held her baby son tightly to her chest as he slept in her arms, and said nothing through the whole sordid story. She hadn't ever met Catriona Vitali, having missed the wedding, but she knew that Theo counted Matteo amongst his closest friends, and couldn't imagine what he was going through, as not only his family crumbled around him, but his life-long friendships as well.\n\nThe three women gasped in surprise as an alert sounded on their phones, and they stood, preparing to move into the panic room with the rest of the household. They jumped as the door to the sitting room was thrown open to show several of the uniformed watchmen standing there. The men looked behind them and moved into the room, closing the doors on the rest of the family who were racing to ensure their safety.\n\n\"Move!\" one of the men growled, and indicated the large French door that lined one wall of the room letting in light. Another moved to open the doors and immediately closed them again.\n\n\"Someone gave them a warning. What do we do now?\" One of the men asked.\n\n\"What we came to do,\" the oldest and obvious leader said, pulling a gun from his shoulder holster.\n\n\"No!\" Marina cried out, and threw herself in front of Audrey and the baby who had begun to cry now.\n\nGun's fired, the doors burst inward as their own people tried to get to them, and chaos broke out.\n\n*****\n\nJust before six O'clock the jet carrying Roberto, Matteo and Cat touched down and taxied through to stop, facing the other jet like two prized fighting cockerels' ready to battle. As soon as the engines stopped and the door opened, Matteo's phone sprang to life.\n\n\"You barely made the deadline! Bring your wife to stand beside your mother and tell the Papillo to back off and worry about their own mothers!\" Giovanni snarled and ended the call. Matteo looked toward the front of the plane where Cat stood with Bradbury, talking quietly.\n\n\"My mother is out there,\" he said quietly as he approached her. \"Giovanni wants you to stand with her. Are you up for this? You can always say no and just stay on the plane. He doesn't even have to know you're here,\" Matteo said.\n\n\"He's right,\" Ricco said from the open doorway, and looked at her carefully. He knew at that moment she would insist. Giovanni had her brother, and she had always done whatever was needed to look after him. He bent his head to kiss her and smiled. \"Hello.\"\n\n\"Hi,\" she smiled. \"I missed you.\" Then she kissed him back properly, not caring of who stood around them in the plane.\n\n\"Before you go, the writers of the letters were not your family or your grandfather, but I have found a man who is your cousin and can prove it,\" he spoke in hushed tones. \"You do have another family who would like to know you when you have time to meet them properly.\"\n\n\"I do?\" she stared at him in astonishment.\n\n\"Yes, I can explain it all to you after you rescue David,\" he smiled and looked at Matteo's worried expression. \"You need to trust me here,\" he said to his brother. \"Trust that I love her just as much as you do,\" Matteo said nothing but nodded. \"Stefano is in the hangar, he will fill you in on what you need to know.\" Matteo's phone buzzed to life again.\n\n\"Keeping me waiting does not bode well for you or yours! Get Cat out onto the tarmac, I know she flew with you!\" Giovanni demanded and ended the call.\n\n\"Cat, they want the mothers of the tables because they are the heart of the tables. Giovanni is just a puppet for the people who are really behind this. Get David off the plane and then run back to us, we will be ready,\" he said. \"Don't stay on that plane if they are going to take off, okay?\"\n\n\"I'm a survivor, you both know that. I am fine, don't worry,\" Cat said calmly, reaching up to cup a hand on each of their cheeks. \"I love you both very much,\" she smiled and turned toward the stairs, walking down ahead of the other occupants on board, closely followed by Bradbury. She turned at the bottom of the stairs and smiled. \"We talked about this, you can't come with me. You need to make sure that Matt and Ric don't do anything stupid now. You promised me you would look after them the way you have looked after me.\"\n\nBradbury nodded, looking unhappy, and moved away toward the hangar as she watched for a moment, then she walked toward the lone woman and two men who stood before the other jet.\n\n\"Hello, Rick,\" she said, recognising Matteo's friend.\n\n\"Cat, I'm sorry we had to meet again like this,\" he said softly, taking her hand. \"This is my brother, Leyton, I'm not sure if you met at the wedding, and this is Maria Vitali.\"\n\n\"Don't be sorry, you didn't make this mess,\" Cat said pleasantly. \"Hello, Leyton,\" she inclined her head toward the second of the Papillo brothers. \"I believe Matteo needs to see you, Giovanni has been giving him directions via his phone. Maria and I are to wait here.\" She told them before looking at Maria. \"Hello,\" she said, offering her hand in greeting.\n\n\"Hello,\" Maria took her hand and looked the self-possessed young woman up and down, marvelling at the fact that she seemed so calm. Maria knew she looked and sounded as terrified as she felt.\n\n\"Well, this sucks,\" Cat sighed. \"I don't know whether to automatically love you because you brought the men I love into this world or hate you forever because you tried to take them out of this world again before I had the chance to meet them,\" Cat said, her nervousness making her honest. She watched as Maria's eyes widened at the statement.\n\n\"I guess I can't blame you for that,\" Maria sighed. \"I can offer you a multitude of excuses and blame many people, but at the end of the day I was sick, and I got the help I needed with the Papillo. I don't want to be here in this place right now, however, or see him,\" she looked at the plane.\n\n\"Yet you are here,\" Cat said, tilting her head.\n\n\"I am, but I am terrified and would rather be anywhere but here,\" Maria confessed. \"I'm not sure I can make my legs work to board the plane if we have to,\" she admitted.\n\n\"It's going to be okay. I can do this. I have to do this. Your sons saved me, and now it's my turn,\" Cat said firmly, resolved to end this situation, and looked toward where the door had opened on the jet holding her brother and the madman Giovanni. David appeared and began descending the stairs slowly, with Mick just behind him.\n\n\"David!\" Cat ran toward him and threw her arms around him. \"Thank god you're okay! Mick!\" she released David and hugged the second man with the same ferocity.\n\n\"They have guns on us. They want you to get on the plane,\" Mick said, shielding her from the jet as he spoke. \"The crazy one who has been texting Matt is just about frothing at the mouth to get to that other woman, but he's not in charge up there.\"\n\n\"Who is?\" Cat asked, looking at Mick and her brother.\n\n\"A guy called Frederick, he's got his own agenda, and it involves you, Theresa, and that woman,\" David said.\n\n\"Who is the mother of the Martino's?\" Cat suddenly asked Maria.\n\n\"Carmella, or at least she was. They may have a new mother now, I don't know,\" Maria said.\n\n\"Yes, her name is Audrey,\" Cat smiled, remembering that Audrey had just had a baby who kept her from the wedding. \"I remember now.\" She took a breath. \"I know what I need to do now. Can you take Maria over to Matteo and tell him what you just told me? I will stand here and wait, so they have someone to point their guns at,\" she lied.",
        "As if a flash of lightning hit her, clarity dawned. This was never about Maria, she was just the catalyst. It had always been about her... Her and Theresa. Vanessa and Giovanni had helped the other men for the promise of Maria's return. Well, this was not Cat's first rodeo, and once David and Mick had turned away, shepherding Maria between them, Cat held up her hands in surrender and hurried toward the stairs.\n\nThe sight that greeted her eyes when she got to the doorway surprised her. The man she could only assume was Fredrick held Theresa by one arm, a gun held out toward her as she walked through the door. His men had obviously subdued Giovanni, who lay on the floor groaning with a man's booted foot on his neck. Mario and Vanessa stood together in a corner with two guns trained on them.\n\n\"Why did you send my mother away?\" Vanessa screeched at her, fear and frustration colouring the tone of her voice.\n\n\"They didn't need her, they only needed me. Isn't that right, Fredrick?\" Cat asked, turning her head to look at the man holding Theresa.\n\n\"Very clever, little girl, I could almost be proud of you if you hadn't interfered with my plans. I'm assuming they all know now,\" he gave a cruel smile.\n\n\"Do Giovanni and Mario know you have killed the heart of their table, as well as all the others? Poor Theo, having to raise that baby without his wife or mother, but I guess you and your fathers survived that fate, didn't you, Vanessa,\" Cat said coldly, and watched the emotions dance across her face.\n\n\"You didn't really think the Suebi wouldn't have their own agenda here? What good is reuniting Maria, a dead woman, with her daughter and lover to them?\" She asked cruelly, twisting the knife of her words. \"The fact that you were willing to sacrifice me isn't surprising, but that you could condemn the woman who raised you to death at the hands of the Suebi is...\" Cat spread her hands wordlessly and shook her head.\n\n\"You lie!\" Mario spat.\n\n\"Call your family, if you dare, Carmella and Audrey are dead,\" Cat said without emotion, only guessing at the fact, not knowing for sure. \"As are all of the mothers of the tables except Theresa and myself, but I expect that's about to change.\"\n\n\"Lydia Papillo still lives and hides in that hangar with her husband,\" Fredrick shrugged, not denying what Cat was saying. \"David should be giving them my ultimatum as we speak. Once she is taken care of, the tables will be done. At least for a generation or two.\"\n\n\"Did you not learn anything from the Donati?\" Theresa asked, horrified by what she was hearing. \"Our lives don't matter in the grand scheme of things. There is always someone better, stronger and more capable of stepping up where others fail. You will hurt the families, but the strong ones will not fail to rise again, nor will they allow the others to fall apart. My daughters, Mia, or Aria, could step into the mother role just as easily and lead the family out of darkness. I would have said the same about you, Vanessa, until today.\"\n\nFrederick pressed his gun against Theresa's side and dragged her toward the doorway again as Vanessa spoke.\n\n\"I'm not your daughter!\" Vanessa screeched angrily, but doubt showed on her face.\n\n\"I didn't give birth to you, but I was your mother in every other way,\" Theresa said indignantly. \"Should I have tried to kill or hurt your brothers and fathers the way you and your mother did? Would that have made me more of a mother to you? Would you honestly be happier if I were dead?\" She reefed her arm away from Fredrick, surprising him. Once free, she turned back toward Vanessa, prepared to argue further until the bullet entering her lower back above her hip made her stagger back toward the doorway in shock and collapse onto the top platform in full view of the men and women watching. \"I love you, Vanessa!\" she cried out against the barking voice of Frederick.\n\n\"Bring me Lydia Papillo or Catriona is next!\" Frederick demanded, then kicked Theresa to tumble unceremoniously down the stairs.\n\n\"No!\" Cat said, and launched herself at the man who turned back toward the interior. Caught off balance as she kneed him in the groin and pushed hard at his shoulders, he tumbled backwards, following Theresa down the stairs. Another shot went off, and Cat stumbled as it grazed her shoulder. She turned in time to see Mario wrestling with one of the thugs and Vanessa sitting and staring wide-eyed as the second gunman held his gun on the wrestling men until Giovanni got to his feet behind them and entered the fray by disarming the second man.\n\nCat stood transfixed by the whole scene for several long minutes, then suddenly she was being picked up and carried from the plane as the people continued to fight. Coming to her senses, she yelled. \"Run, Vanessa, Run!\" then she was being carted down the stairs and toward the hangar. Looking back toward the plane, she could see men milling around the stairs and others climbing into the jet. It was Bradbury who carried her, and she couldn't see where Matteo and Ricco were. Once inside the hanger she was placed on her feet with a group of strangers, and Bradbury turned and jogged off back toward the plane.\n\n\"Cat!\" Lydia said. \"My God, you're alive!\" The petite woman embraced her, tears shining in her eyes.\n\n\"I'm fine! Where's Theresa?\" she asked looking around.\n\n\"Roberto left with a driver to get her to the medical centre,\" Lydia said. \"She's alive, but It looks bad, Cat, I'm sorry.\"\n\nCat looked around, lost. She didn't know what to do. The men were all busy issuing orders and trying to sort out what was happening. She knew it was probably shock, but she felt cold and tired and unable to move as she tried to think about what she needed to do first. She was numb, and it seemed her brain was too.\n\n\"Cat, you're bleeding!\" Lydia cried out, noticing for the first time her shoulder and looking around for help. She went to find Leyton or Rick, leaving Cat with her brother, who had approached them.\n\n\"Cat,\" David said softly. \"This is fucking crazy town stuff. Are you okay?\"\n\n\"Me?\" Cat blinked at her brother. \"You were the one kidnapped.\" She said equally softly and without emotion, and staring at her brother, not quite being able to work out why he was here or where here was.\n\n\"Cat?\" he said more loudly. \"Cat? What's wrong?' he asked again when she didn't respond, drawing the attention of Lydia and the small group of people close by.\n\nCat felt herself fading; she had barely eaten today and had been running off pure adrenaline until she finally hit a wall. She could see David and hear him talking, but she couldn't understand or formulate any words to respond to whatever he was saying. She looked at him in wonder as he suddenly grew taller, making her crane her neck to continue looking at him. David disappeared, and Bradbury was there, looking angry, and she wanted to tell him to leave her alone, but she couldn't think how to do that. Then she was floating, and she leaned back, looking up at the sky which suddenly materialised above her head only to be whisked away again. Matteo, it was Matteo, not Bradbury. She smiled and leaned against him, listening to his heartbeat, and finally closed her eyes. She was always safe with Matteo.\n\n*****\n\n\"Stay angry, there will be time to look after those you love, but now you must lead the family the way you were always meant to,\" Fawn said. \"Hold tight to your rage and deal with what needs to be done. The women you love will live. This I know.\"\n\nRicco said nothing as he looked at the small woman beside him as the car carrying Matteo and Cat raced away from the tarmac. Sava and Fawn had stopped him from leaving with them. He knew he couldn't just leave the Papillo leaders to deal with the fallout from this. He turned back toward the plane. Hugh and Knox had arrived with Matteo and Cat, along with Bradbury, who was on his way to the medical clinic while the others were working with the Papillo men to clear the plane.\n\n\"I'm about to call Bruno and tell him what happened here. Most of the Chairs are still in the fortress,\" Leyton said quietly, coming to stand beside Ricco. \"You should tell your family before they find out through rumour or well-meaning friends trying to find out more information.\"\n\n\"Yeah,\" Ricco said, watching the body of his sister being carried from the plane. The two surviving Suebi had killed the three members of the tables in the struggle that ensued after Cat had pushed Frederick down the stairs after Theresa, where he had been subdued quickly by the men who had raced to Theresa's aid.\n\n\"They're both alive, you saved the mothers of the Vitali,\" Leyton said softly, trying to comfort the man who looked like he could either explode or break down at any moment.\n\n\"I did nothing!\" Ricco spat angrily. \"Cat saved them, though she will blame herself for Vanessa's death and Theresa's injuries!\"\n\n\"Call your brothers and tell them the truth of it as you know it so far. Tell them my brothers and I will do everything possible to ensure Theresa and Cat get all the medical attention they need. I am sorry about your sister,\" Leyton gripped his shoulder and shook his head. \"Unfortunately, we aren't the only ones with sisters who betrayed us.\"\n\n\"I'll make the call,\" Ricco said, and turned away from Leyton, who threatened to unravel the anger he needed to hang to or fall apart at the thought of Theresa and Cat in the hospital and Vanessa dead. This was his family, and he had failed to protect them. He had let Vanessa down by not seeing what was going on or following up after the scene at the wedding that Cobi had told him about. He would need to get to the bottom of that as well. He needed to know now if there was anything he could have done to avoid this moment in time.\n\nHolding his phone to his ear, he walked around the side of the hanger in search of shade and slid down to the ground, leaning his back against the wall. He heard his brother's anxious voice and lost the thread of anger he had been clinging to. Feeling the absolute devastation from the afternoon's events, he took long silent moments before speaking.\n\n\"Walk away from the table, Cobi, the news isn't good,\" Ricco said in a strained voice and listened as his brother moved on the other end of the call. \"Cat and Theresa have been shot and taken to the hospital, Cat should be okay, with medical attention, Matt is with her. It is touch and go for Theresa, but she has the best the Papillo can provide for her, and Papa is with her. Vanessa didn't make it,\" he said quietly. \"We will fly her body home tomorrow. Can you make the arrangements with the Papillo?\"\n\n\"Fuck! Fuck! Fucking Fuckers!\" Cobi exploded loudly, making his brothers look from the table to where he stood. \"The men who took them?\"\n\n\"The Suebi were using Giovanni's madness. They tried to take out the mothers of every table, we believe. See if you can find out if everyone made it, I tried to warn them, but who knows if my message got to them in time. Giovanni and Mario are dead; we have the three Suebi who travelled with them.\" Ricco said in a deadpan voice. \"The Suebi were pulling strings the whole time, I think Vanessa found out, or at least suspected something at the wedding. Can we look into that again when I get back?\" Ricco's mind worked over all he needed to say. \"It's not good, Cobi, make sure they know Matt and I will get everyone home as soon as possible.\"\n\n\"I'll get Lucca to call the Papillo contacts and get the full story later tonight,\" Cobi said, sounding calmer but still furious. Ricco smiled, he had thought his rage had been spent, but hearing it in his brother's voice fuelled his own rage about what a stupid fucking plan this had been. \"Do what you need to do and call if you need anything at all. I'll make the arrangements for Vanessa,\" Cobi said.\n\n\"Thanks, Cobi. Get Paolo to call Papa, I think he may be needed, Theresa was shot at close range,\" Ricco said, the strength and anger returning to his voice. \"Maybe get Isaiah to call and see if Matt wants him to come for Cat.\"\n\n\"Isaiah, not Zach?\" Cobi asked.\n\n\"Yeah!\" Ricco snapped. \"Let's skip the congratulations until we know they are still needed!\" His anger was fully back now, and he was ready to face the fallout of what had happened.\n\n\"Fuckers!\" Cobi spat again. \"Get home soon,\" he ordered, and hung up to face the men of the Vitali table and deliver the news.\n\n*****\n\nTheresa had been stabilised as best as possible and airlifted to Darwin, the closest major city. The Sartori family were grateful for the ten minutes warning they had to protect their family and met the plane, ensuring every specialist available was on call for whatever the Vitali family needed.\n\nThe close-range shooting should have killed Theresa immediately, but she had clung to life as surely as Roberto clung to her hand as she lay unmoving during her journey to the medical clinic and again to the helipad. As if waiting for Stefano to arrive, Theresa woke briefly before being transferred to Darwin, and spoke to the men she loved about their family and the children she loved so desperately and begged them to take her home where she could see them, then she closed her eyes and lapsed back into deep sleep.\n\nTheresa was rushed to surgery the moment the helicopter arrived at the hospital in Darwin, and Roberto and Stefano went to work calling their family and friends to find out what the fallout had been, for not only their own family but for all of the tables and their attacks on the mothers.\n\nThey heard the stories of close calls and the death or Carmella Martino with little emotion. It wasn't until they realised that Ricco was being hailed as a hero for giving them all the last-minute warning that had saved the hearts of the tables that they reacted. Pride filling them for the son they had believed would one day lead the family as Chair but had made him Oracle instead in the face of Matteo's ultimatum.\n\n\"Fate has a way of putting the right man in the right position,\" Stefano said quietly after one such call to Fabiano Amarti.\n\n\"So, it seems,\" Roberto nodded. \"They were always meant to lead together, no matter the roles we gave them in the end.\"\n\n*****\n\nIsaiah sat on the small jet reading through the digital file Zachary had sent him. He held Cat's medical records from a violent and neglectful early life, as well as during her relationship with Ned Kelso. Attached to the documents were the records from this year, including a detailed account of her life since coming to work for Vanessa and entering into the sphere of the family's influence. With hours to kill, he poured over the information, going through a wide range of emotions, not the least of which was anger. Anger at the unfairness of her early life and the neglect she suffered. Anger at the man she had put her faith in and had treated her so badly, Ned Kelso. Anger at his cousins and uncles for pushing her into such a harsh trial when it wasn't necessary. Anger at all the events since then that would have driven a mere mortal past the point of physical and mental exhaustion long before now.\n\nThe fact that she wasn't a mere mortal struck a chord with him. She shouldn't possibly be able to survive all of this and still be so warm and caring to the family she had embraced. Not just the men she loved and her intimate circle, but all of them. To him, even. He remembered her coming to him and confiding that she was pregnant and how scared she had been about the fact. He understood now why she had thought she wouldn't be good a good mother and why the pregnancy worried her so much. He hadn't delved deeply into her past then, and regretted that decision now.\n\nHe knew from Zion how run down she was, not sleeping or eating well. He had no doubt that her collapse was at least partially due to physical exhaustion, more than likely mental exhaustion as well. He considered the small facts he knew about what had happened this afternoon. He'd been on his phone right up until takeoff, and while he could use his phone in the air, reception was spotty, at best, as they flew over the desert heart of the country.\n\nIt was two in the morning when he walked into the hospital with the man who was his, or at least Zachary's counterpart in the Papillo family, and discovered Cat had a wound to her shoulder where a bullet had grazed her that had been able to be treated here sufficiently. She was in shock and exhausted, and they had given her a mild sedative to help her sleep comfortably, despite claiming she didn't need it. They had an ultrasound booked for the following morning to ensure all was well for her baby.\n\nThe news on Theresa was more distressing, but he knew his father would be in Darwin by now and ensuring everything that could be done was being done. He stepped into the room and looked at his cousins as they sat slumped in chairs at Cat's bedside, looking defeated in their exhaustion. He said nothing, just nodding to them as he picked up her chart and read through it. Isaiah had no qualms about the fact that Cat was getting the best treatment possible.\n\n\"Papa's gone to Darwin, he should be there now, and we should get some real answers about Theresa,\" Isaiah said softly as he gently took his observations on Cat so as not to disturb her. \"You two look like shit. Go find some coffee and a shaving kit so you don't scare her when she wakes up, I'll stay with her now. There are a few people in the waiting room as well that you should probably send home. They gave her a mild sedative, so she won't be waking up anytime soon.\"\n\n\"Coffee wouldn't go astray,\" Matteo whispered and stretched, \"but I'm not going anywhere. I'll be right here in the hospital, they'll have a kit somewhere, I'm sure.\"\n\n\"I'll see to the people in the waiting room, but I am only going down the hall,\" Ricco grumbled and stood.\n\n\"Call Zion, he's running the table with brutal efficiency, and he won't be sleeping, he can tell you what they know so far. Get him to let Zach know that I'll get Cat home by tomorrow night and to make the arrangements.\" He said it, not for Zachary's sake, his brother would already be making arrangements, if he knew him at all, but more for Zion and Lucca's sake. Their mother lay on the brink of death, and the woman they had sworn to look after was lying in hospital with a superficial bullet wound. Isaiah had never seen Lucca quite so distraught and understood now why Zion had been put in the Chair in Mateo's absence.\n\n\"Brutal efficiency?\" Matteo blinked at Isaiah.\n\n\"He's the leader, even all the Uncles do what he says. Cobi was his biggest supporter, especially after your call when he lost it for a while,\" Isaiah admitted. \"Everyone took Vanessa's death hard, especially Cobi. He said he knew something was up at the wedding, but had let her gloss it over.\"\n\n\"Yeah, I know,\" Ricco admitted, letting his anger rise again to help him deal with all that had happened in one day. It felt to him like he had lived a week in this one day, and he had to admit he was exhausted and needed coffee too.\n\n\"Zion, my little brother?\" Matteo asked again, as if he had never considered Zion stepping up in the way he had. He had thought he would lead with and through the advice of others rather than leading in his own right. \"The quiet one?\"\n\n\"He's not so quiet now, and I would bet anything there's nothing he'd appreciate more than a call from his big brother right now,\" Isaiah said. \"Go do what you Chairs and Oracles do in moments of crisis. Let me tend my patient, she's in safe hands.\" Isaiah waited until they had gone and turned back to Cat. \"They are gone now, do you want to tell me why you are only pretending to sleep?\" he asked gently.\n\n\"Pete Donati,\" Cat whispered in a coarse dry voice as she fluttered her eyes open. She took a sip of the water he held for her and looked at him. She barely knew Isaiah, but she knew he was her best chance of getting away from this family and having time to think, really think, about everything that happened, not only to her but the men she loved. \"Can you do what he did for Peri?\"",
        "Ricco had stopped Matteo just outside the hospital room door and motioned to him to be quiet. Matteo's brows rose as he heard the voices. He didn't understand, but he had the feeling Ricco knew more about what was going on than he did.\n\nRicco motioned him away from the door and began to explain the story of meeting Cat and what Pete had done for Cat after telling her what he had done for Peri as a way to get her to trust him.\n\n\"She needs time, Matt, and I think this time we have to give it to her,\" Ricco said softly. \"If we don't we could lose her forever.\"\n\n*****\n\nThe ten minutes warning Ricco had sent out to Matteo's friends had saved lives and enabled each of the tables to capture at least a few of the Suebi who had attempted to impersonate, or in some cases infiltrate the watchmen of the tables. Carmella Martino had died instantly, and Marina Battaglia clung precariously to life after taking the bullet meant for Audrey as she had tried to protect the baby in her arms. Audrey was injured, but not as seriously. The mothers of the other tables had managed to get to safety, as the men who protected them confronted the men who would have assassinated them. The injuries to the men had been numerous, some more severly than others, but no further life was lost.\n\nAs if on a suicide mission, many of the Suebi who had come to kill the mothers had died fighting the families they had come to destroy. The few who had been taken said nothing as they were taken to cells within the training facilities that belonged to each family.\n\nRomey Donati sat with his Uncle Charles and listened sceptically to the small envoy that had come to their facility claiming to be part of the mysterious Tater Dynasty. The three women seemed unconcerned that their information was being checked, and talked quite openly about why they had come and identified themselves to one of the Italics as they called the families of the Twelve Tables.\n\nThe Suebi had tried to destroy the tables while implicating the Tater as those responsible for the evil deeds, which made them decide as a people to work with the Italics to take down the Suebi as best they could without resorting to the same violence that had been perpetrated by them on their enemies.\n\nThe Tater had decided on a plan to take away their main sources of income by informing the police of their activities. Each of the twelve families had captured some of the Suebi men, and the Tater delegations, using their best psychics, as well as their own resources and information networks, added to the information already collected by the Italics.\n\nConvincing the men of The Twelve tables to work with them was not easy, but with the goodwill of the Vitali and Papillo men, most families agreed to give them the benefit of the doubt. The actions began in Tasmania where the Suebi main base was located. The Pellegrini family was more inclined to work with the Tater after experience with the mysterious mystics before their journey to their new life in Australia when they took over the table. Within two days federal law enforcement had swooped on several poppy plantations which had legal holdings and permits, but found evidence of illegal secondary businesses for the excessive crops they maintained which the local authorities had turned a blind eye to. The facts of the case were confirmed as Ben Donati came back into the room and nodded.\n\n\"It's just like they said,\" Ben said. \"The Pellegrini confirmed it, and Ricco told Dante that he had been working with the Tater to shut down their operations in Melbourne.\"\n\n\"Each table will be approached by a delegation,\" the oldest of the women said. \"There is no joy to be found in violent vengeance. It is time to take away their power and resources and leave them weak in both financial and human resources. We need to not just chop off the head of the snake only to find another two grow back in the future. We must weaken them so that it will take generations to recover, if ever.\"\n\n\"At least half of the tables have already have been approached, and for what it's worth you're plan has my vote,\" Ben said, his voice harsh. He still suffered daily for the betrayal of his wife and the Suebi's role in facilitating both his sisters and his wife's plans against the family, not to mention the death of his brother, Lio.\n\n\"Okay,\" Romey shrugged. \"The Suebi we caught are downstairs, but they haven't told us anything yet. I'll show you the way.\"\n\n\"They don't have to speak for us to learn what we need to know,\" the older woman spoke again with a sly smile.\n\n*****\n\nThe fallout from the unified attack around the nation had been great, keeping the leaders of the tables engaged in various dealings with the Tater and each other. Ricco was being hailed a hero by most of the men, and justice had been swift against the Martino family who had protected and aided the delusional Giovanni. Those men had been horrified by the loss of Carmella and the attacks on all of the families. They had assumed that only the Vitali family would suffer from Giovanni's madness, and had not only allowed it, but in some cases encouraged it.\n\nTheo Martino had welcomed Ricco and several members of the Tater who had sped up the investigation; and by the end of the week many of the Savoy-Martino men and their families found themselves flying back to the seat of their family's power in Italy to face the very real justice of the family hierarchy.\n\nThe Suebi were finding themselves under siege from all sides, and with their home base and resources decimated they were unable to pull what was left of their resources together to protect themselves.\n\nContent that their work was done, the Tater started to retreat back to their colonies and their lives away from major cities. The men of the Italics had all the information they needed to ensure a vast blow was struck against their enemies, and both dynasties found a new respect for each other.\n\nSava and his younger brother, Vedran, did not return home immediately with the others who had gone to Melbourne with the Vitali to assist their family rebuild from the disaster that had befallen them. Instead, they had travelled to the country retreat where Cat hid away from all the stresses of her world.\n\n\"Nobody has come to visit me for almost two weeks,\" Cat said, tilting her head at the young nurse who informed her that she had visitors who insisted that she see them.\n\n\"They said it was very important they speak to you,\" The nurse said softly. \"They said their names were Sava and Vedran Mizik.\"\n\n\"Can you tell them I will meet them at the caf\u00e9 on the deck?\" Cat asked and went to get a sweater.\n\n\"Yes, Mrs. Vitali,\" the nurse said equally quietly, and left the small retreat that was Cat's temporary home.\n\nFor once she was reassured that the hulking Bradbury stalked her. To his credit he had never bothered her, and she rarely saw him, but she knew he was there watching and reporting back on her boring days. Though she doubted anyone could get near her in here, it was reassuring to know he was nearby. He had been the one to pull her from the plane, to ensure Matteo got her to the hospital when she collapsed. He had been there every time she needed someone, and she had never thanked him properly, she realised. \n\nIsaiah had been true to his word and had taken her somewhere to rest and think, and as long as she ate and slept well, he kept to his end of the bargain, all except for Bradbury and Hugh, who took shifts watching over her. She spoke to both Ricco and Matteo every day, she loved them, she couldn't deny it, but she needed time. Time to just be alone and to heal. Time to work out if love was enough for them or if she would always let them down like she had done so often recently. Not that she had told them that, her conversations were about their days and members of the family and how much they missed her in their home and daily lives. For her part, she apologised excessively, never saying what exactly she was apologising for.\n\nShe stepped out of her retreat and walked up the path toward the caf\u00e9, curious as to who her visitors were and what they were doing here. She walked slowly up to the caf\u00e9, sensing rather than seeing Bradbury as he tailed her. She stopped as she entered the caf\u00e9 and turned to face him, seeing him stop at the entrance before moving further inside to find her mysterious guests.\n\n\"Catriona, I am Sava,\" a man with dark hair and blue eyes like hers greeted her and held out a chair at the table he sat at with another younger man. \"This is my brother, Vedran,\" he introduced the other man.\n\n\"Hello,\" she smiled. \"To what do I owe this visit?\" Cat asked.\n\n\"My brother made a new friend recently,\" Vedran spoke first. \"He told him this story about a princess who battled chaos and misfortune her whole life and was scared of nothing. Then she found love and peace and became frightened and ran and hid from the world in a high tower guarded by an angry guard dog. It is the way of fairy tales, perhaps, but it seems such a waste. So, I came to see if the story was true. Are you scared to be happy, Catriona?\"\n\n\"What?\" she shook her head. \"I'm afraid your friend has told you a fairy tale,\" she laughed. \"I am no princess, and there is no high tower here. Who is this friend of yours?\" She asked Sava.\n\n\"My brother is always too eager and skipped to the end of our story instead of telling you the beginning, which you do not know,\" he said in a deep quiet voice as if soothing her anxiety about meeting two total strangers who obviously knew all about her. \"We have ordered a range of treats to share, and coffee for while we talk. I hope that is alright?\" he asked pleasantly, as waitresses approached the table with a tiered stand and a large coffee pot for them to help themselves as they talked.\n\n\"Could I please have a peach iced tea?\" Cat asked the waitress. She had changed her diet in the last two weeks in an effort to get her morning sickness under control. She had given up coffee, although she still craved it. \"Thank you for the offer of coffee, but I just can't drink it at the moment,\" she said apologetically.\n\n\"Whatever you like is fine with me,\" Sava inclined his head to her as he spoke. \"Are you unwell?\"\n\n\"No, not in the way you think, just a little upset tummy in the mornings, though some days it seems to last longer into the afternoons than others. It will pass, I am told,\" she said with a half laugh. \"Tell me your story.\" she encouraged.\n\n\"My great-grandmother was a queen among our people, her name was Catherine. She married a very powerful psychic, for want of a better word, and they came to be the leaders of our tribe. Catherine had two daughters, my grandmother, Katerina, and her sister, Katinka, your grandmother,\" Sava paused for her to take in this information with a wide-eyed gasp.\n\n\"My grandmother?\" Cat frowned, \"My grandmother's name was Tina!\" she argued.\n\n\"She would have changed it to hide her origins, most likely. Gypsy blood was not always looked on kindly, particularly in that era. The sisters were beautiful, and, as was the way of my people, marriages were arranged for them to men of high standing and ability. Katinka, or Tina, though, was unhappy, and allowed herself to be swept off her feet and away from her family by an outsider who belonged to one of the great dynasties, which might be why she had to change her name.\"\n\n\"If she left and hid, how is it you know this much?\" Cat asked.\n\n\"She reached out to my grandmother more than once in her life, but she was forbidden from responding in any way. Once the bonds to our tribal ways are severed they can never be regained. Or, at least, that is the most traditional view. We are, perhaps, a little less rigid these days. Here, I have photos of your mother,\" Sava placed three small photos on the table that looked like they had been taken in a photo booth.\n\nCat looked at them silently. The resemblance to herself was startling. Her only memories of her grandmother were of a grey hair and wrinkles and stooped shoulders, as if she held the weight of some tremendous burden on them. Her memories of her mother were blurred together images of giddy, drunken smiles and drug-induced sleep. These pictures showed healthy, happy women, these were people she didn't know at all.\n\n\"They aren't of my mother or grandmother, or, at least, not as I knew them,\" she sighed sadly.\n\n\"And so we get onto Vedran's version of the story,\" Sava nodded knowingly, using the same calm voice. \"You are the princess who survived the evils the world threw at you, and now that you have the chance for happiness you are scared. How long do you plan to hide here and keep the men who love you, the family who love you, and the friends who love you at arm's length?\" He asked.\n\n\"Their life is simpler without me constantly causing drama in it,\" Cat bit out, defending her actions.\n\n\"If you truly wish to hide you can come home with us and meet the rest of your family, princess.\" Vedran offered. \"We would welcome you and your baby, if you truly wished to leave the Vitali behind you. You have royal blood flowing through your veins, and you are far too precious to be left with the Vitali, who have a habit of not protecting their women sufficiently. Our family would expect us to offer you sanctuary with us.\"\n\n\"That's not true, none of it. I am not a princess, and Ricco and Matteo have done nothing but try to protect me, even from myself!\" she defended them automatically. \"It is me who has never been good enough for them!\"\n\n\"A princess of royal lineage is not good enough for an Italic?\" Sava asked, horrified by her assessment and shaking his head. \"You do not know your worth, but if that is how you feel then make your choice, cousin. You cannot stay here forever, it has already been weeks, and the men who love you are withering without you,\" Sava said. \"It is time to choose to regain your life and the love it holds or sever the ties that bind you to it and choose a different path. You cannot hold yourself or them in limbo any longer, it is cruel, even for a princess of the Mizik line. Ricco is my friend, and it is hard to see him suffer so much while trying to support Matteo, who fares much worse.\"\n\n\"They seem okay when I talk to them,\" she said slowly, wondering why these strange men were giving her an ultimatum while claiming to be long-lost cousins.\n\n\"If it was them refusing to see you and deny you their love...\" Sava said gently. \"How would you fare?\"\n\n\"That's unfair!\" Cat blurted, biting her tongue before the next words rolled out of her mouth. She was about to say that they would never do that, and she realised how true it was. They would never make her suffer the way she made them suffer. The thought of them suffering because of her selfish demands to be left alone and given time jolted her. Her cousins were right, she had been here too long, and it was time to go home. She wanted to go home to her husbands; the thought surprised her with its clarity. \n\n\"Is it?\" Sava asked calmly.\n\n\"Perhaps not, but whether I admit it or not, the decision was made for me months ago. I just needed time after the moment on the plane,\" Cat admitted.\n\n\"I was there,\" Sava said. \"I read you as you arrived. You had been prepared to die to protect the Vitalis'. Is it so hard to live now because you survived when others didn't? What happened to Vanessa was of her own making, and no fault of yours.\"\n\n\"Are you reading me now?\" Cat narrowed her eyes at him. It wasn't Vanessa she felt guilt over, but rather Theresa's injuries, because they were her fault.\n\n\"The Suebi men planned to kill you all, regardless. Your actions saved Theresa's life, she will recover from her injuries. I know it to be true.\" Sava smiled, admitting he had been trying to read her.\n\n\"Tell me about your family.\" she said, suddenly changing the direction of their conversation. She wanted to know where her grandmother came from, even if she had no plans to discover their way of life for herself. Perhaps she might visit one day with Ricco, if they were friends, but these people had turned their backs on her as surely as everyone else in her young life did.\n\n*****\n\nThomas and Zion walked into the penthouse, concerned as to why Matteo and Ricco had wanted to see them separately from the rest of the table. They'd been working hard with the Tater to ensure as many of the Suebi were rounded up by the police as possible. They'd been holding meetings with each member of the table, staying on top of everything that was being done and every skerrick of information they could glean from their own contacts to make sense of what the Tater supplied them with. The last two weeks had seen both men barely take a break for their own lives.\n\nMatteo and Ricco had to face the Thirteenth Table and give full accounts of the events that culminated with the events at the Papillo airport, which had taken almost a week by the time judgement had been passed on Trevino Martino and his family. Matteo spoke up on Theo's behalf, saying that he knew that had Theo known of what was occurring he never would have sanctioned it or turned a blind eye to what was happening.\n\nMarcus also spoke for Theo and about the findings of his investigation, but he only stayed briefly at the deliberations due to his wife's injuries and his need to be at her bedside. Each of the Chairs lauded Ricco's actions in giving the tables as much warning as possible of the attacks no one would have been expecting with their eyes firmly focused on what was happening to the Vitali and Martino families.\n\n\"Hey, come on in,\" Matteo invited, seeing them come through the foyer. \"It's been so busy we've barely had time to catch up, let alone have a proper conversation.\"\n\n\"You look like you need to catch up on sleep rather than on what we've been doing,\" Thomas joked, but, like the other members of their table, he worried about how Matteo was handling the fallout from the event, especially with Cat disappearing the way she had and refusing to see anyone.\n\n\"Meh, I love Lisa's cooking, he can invite me any night. Not having access to Lisa was the worst thing about going back to my place,\" Zion chuckled. \"I've decided it's time to get a housekeeper of my own and send her over here for Lisa's recipes. Unless, of course, you want to gift me Lisa,\" he grinned.\n\n\"It's an open invitation, come and stay whenever you want,\" Ricco said, walking into the room with a beer for everyone. \"But Lisa isn't going anywhere, if I have any say in it.\" He grinned as Lisa came into the room with a plate of Bruschetta for them to share as they drank their beer.\n\n\"So, the two quietest members of our table turned out to be the better leaders in our absence,\" Matteo said. \"Apparently the Chair suits you, Zion,\" he raised his eyebrow at his brother.\n\n\"And you, Thomas, stepped in and let Lucca be the watchman, which was who he needed to be,\" Ricco added. \"Cobi was there to support, but everyone tells me it was you, even while we were both stuck in the Battaglia stronghold giving testimony, you both had a tight grip on the reigns and pulled everyone together on what needed to be done.\"\n\n\"Everyone had their role and did it,\" Thomas shrugged. \"Zion asked me to jump, and I said how high.\"\n\n\"Honestly, when the alarm went off I kept asking when your plane would land,\" Zion chuckled. \"I had no idea what I was doing, and Lucca was working his ass off with Cosimo. He made sure everyone was safe and accounted for, he tracked you and Cat.\"\n\n\"Lucca, himself, said it should be the two of you,\" Matteo said.\n\n\"What should be the two of us?\" Zion said.\n\n\"Matteo charged onto the jet when the guns started going off,\" Ricco said carefully. \"You may have had to step up permanently, Zee. I doubt anyone who has worked with you over the last two weeks would challenge that decision. Lucca wouldn't, and neither would Cobi.\"",
        "\"Wait! You would expect me? A cousin? To step up to be Oracle if anything happened to Ric?\" Thomas was aghast at the idea. \"I didn't grow up like you guys knowing I would have to lead, or even be on the table at all. And just to address the elephant in the room, I'm not into the whole m\u00e9nage thing, no matter how hot your wife is,\" he spoke directly to Matteo.\n\n\"I'm pretty glad to hear that,\" Matteo chuckled. \"That was never on the table, for either of you, and doesn't have to be, according to tradition rather than the law.\"\n\n\"What we want is just an extra meeting or two a week, individually or together. Once all this drama settles down we'll have the time for that,\" Ricco said.\n\n\"What I want is for you two not to run into gunfire anymore and make the whole deal a possibility,\" Zion said, shaking his head. \"I can't even believe we are having this conversation.\"\n\n\"Wasn't much better when Papa started talking about his death to us,\" Matteo said. \"Ricco handled it better than me, but still...\" he shrugged.\n\n\"Every other table member has a shadow now, with the way our fathers have set it up with all of the cousins. Everyone except Matteo and I, so we are fixing that, plus, we are both planning holidays with Cat, separately from each other, so it will be good to know that people are stepping up if necessary and the table will know who has the right to step up if challenged,\" Ricco said.\n\n\"So, Lucca is fine with it. What about Chase? He's the oldest in my family,\" Thomas pointed out.\n\n\"Do you really think he wants it?\" Matteo asked, knowing it would be way out of Chase's comfort zone.\n\nThey continued to talk as they ate and drank red wine, teasing and joking as much as talking over the seriousness of the situation that faced their family over the last six months. The evening was growing late when Lisa hurried from the kitchen toward the foyer, startling them as they glimpsed her through the wide passageway.\n\n\"I'll go,\" Thomas said and stood. When he came back, he shrugged. \"Just a delivery Lisa had been waiting for. Come on, Zee, I'll give you a lift home. If I sit down I might not ever get up again,\" he chuckled.\n\n\"We haven't had dessert yet, and you don't want to miss one of Lisa's deserts,\" Zion complained.\n\n\"I'll buy you ice cream on the way home,\" Thomas chuckled, but turned his head away from Matteo and Ricco and looked at Zion meaningfully.\n\n\"Please stay for dessert,\" Cat said, stepping into the room with a shy smile. \"It's me who's intruding on your dinner, and I am so tired, I just want to go to bed. I wanted to say hello before I headed that way though.\"\n\n\"Cat!\" Zion exclaimed, standing to hug the woman who stood beside him as his brothers gaped at her. \"Looks like Thomas is buying me ice cream, we'll catch up once you're settled back in.\" Before he'd finished speaking Matteo was there, pulling Cat into his arms and crushing her to him.\n\n\"Enjoy that Ice cream, Zee,\" Ricco grinned, as Matteo kissed Cat, uncaring of the other three men in the room. The two men left quietly, and he moved toward where Matteo held Cat and pulled her from his arms to repeat the processes, holding her close and kissing her as well. \"You said something about bed?\" he asked in a low murmur.\n\n\"I also mentioned sleep,\" she laughed lightly and stepped back. \"I'm sorry,\" she said, reaching up to cup both their cheeks. \"I'm sorry it took me so long to remember where I needed to be, where I promised to be,\" she took a deep breath. \"I love you,\" her eyes travelled over both of them. \"I should have been here for you like you have always been for me.\"\n\n\"You were injured and unwell. You were past the point of exhaustion and needed time to recuperate,\" Matteo gave her all the excuses she needed to justify shutting them out of her life for weeks, at least physically.\n\n\"You could have recuperated here with us though. We would have given you time and space just as easily here as there. At least here we would have been able to see you get better instead of worrying if you would return at all,\" Ricco said gently, but still expressing how hurt he was that she had needed to get away from them so badly that she had shut hem out for days before finally answering their calls.\n\n\"I know that now, and I am sorry,\" she said quietly. \"I was always the one who had to handle everything until I met you and your family. I looked after the people I loved, they didn't look after me, not ever. I was looking for a piece of me that I thought was missing, only to find that the piece fit so snugly now I didn't realise I had it all the time. I'm not explaining this very well,\" she sighed. \"I was wrecked, emotionally and physically, and it took a visit from complete strangers to make me understand that I wouldn't recover properly until I came home to the people who love me best.\"\n\n\"I love you best,\" Matteo said in a voice made gravelly by emotion. He wrapped his arms around her and pulled her close, holding her back to his chest as she faced Ricco. \"Ric does too, but he hides it better me.\"\n\n\"I just show it in different ways,\" Ricco said, his voice still holding an edge. \"I want you to promise, no more running away. No matter what happens, you trust us to give you what you need.\"\n\n\"No more running away,\" she said softly, looking into his eyes and seeing the edge of his darkness there. Something she rarely saw without rope nearby, and never in front of Matteo. They both looked tired and drawn. They had been suffering far worse than her. Bradbury had told her what they had both been through since the day they flew into the Kimberley, and she had only added to their worries and workload instead of easing it as she thought she might. \"I promise,\" she said sincerely.\n\nRicco moved forward, not taking her from his brother's arms but rather sandwiching her between them. He cupped her face, tilting it up to his and kissed her deeply, with a passion he usually reserved for the playroom when he knew she was his to possess and use as he wanted and needed.\n\n\"Sleep,\" he said as he pulled away. \"We all need some decent sleep.\" He took her hand and pulled both Cat and Matteo toward the bedroom. He would let her sleep tonight, but there was nothing he and Matteo couldn't cancel tomorrow in order to spend the day with her and ensure that the changes they had all undergone in the last few weeks were part of their new life together, starting now.\n\n\"I missed you so much. I don't know why I stayed there so long. I think I was just avoiding having to deal with hospitals and funerals because I messed up again. I'm so sorry about Vanessa,\" Cat said quietly once they were in the bedroom.\n\n\"You have nothing to be sorry about,\" Matteo said. \"You and Theresa are alive because of what you did. You were amazing and brave and...\"\n\n\"Reckless,\" Ricco cut him off. \"You don't have to sacrifice yourself for anyone,\" he said, knowing what had gone through her mind as she boarded the plane after talking with Sava, who had warned him of the guilt she would be feeling over the deaths and her own survival. He took her face in his hands and made her look at him. \"Don't you understand it would have killed us to have lost you?\"\n\nCat blinked, unable to move from the seriously dark look he gave her. Once again she was struck by the difference in him, as if the lightness he always carried was being overwhelmed by the dark Master within him. He was angry with her, and she felt the heat of it in his gaze.\n\n\"We love you, Cat, more than anything. If anything would have happened to you...\" Matteo's voice dropped off, but the emotions he felt were obvious; and she pulled her eyes from Ricco's gaze to look at Matteo. Where Ricco's eyes were dark with anger, Matteo's eyes seemed to be dulled with sadness. Guilt wracked Cat, and she stood between them, kissing them alternately and apologising over again.\n\nAs she kissed them, she felt their hands start to caress her and her blouse being undone. The intention to only sleep tonight seemingly forgotten as Ricco stepped back and removed his shirt. He undid his belt and slowly pushed down his pants and boxers. At the same time, Matteo had carefully removed her shirt and bra, being careful of the wound on her shoulder. He kissed her neck and shoulders as he did so, making small shivers of delight travel through her while watching the pure naked maleness of Ricco step back toward her again.\n\nRicco took her in his arms and turned her to face Matteo, encouraging him to undress, and ran his fingers over Cat's shoulder and down her spine to the waistband of her skirt, dipping below to caress the top of the crease of her ass. Cat found her eyes glued to Matteo as the body she knew and loved so well was exposed to her eyes. He was gorgeous, delicious, even, and felt all the sensations of love and lust and need that she had for these men rise within her.\n\nThe skirt fell to pool at her feet, and Ricco wasted no time divesting her of the thong she wore beneath it, steadying her as she stepped out of the garment. Then he stood at her back again and reached around to grasp her breasts, one in each hand, as Matteo stood to let her drink him in as he watched the two of them in return. Ricco cupped, kneaded and displayed the globes of flesh that were her breasts for his brother, working his fingers out to the nipples which he pinched hard and pulled away from her body, making her gasp delightfully for him.\n\nMatteo closed the distance in one large step and kissed her hard, trapping Ricco's hands between their bodies, and groaned deeply. Cat ground back against Ricco's hard cock, making him groan in counterpoint, and revelled in the love and lust these two men showered on her, and she felt for them.\n\nCat felt the pressure of Ricco's hands on her shoulders and slowly sank down to her knees, her lips and tongue immediately finding Matteo's cock. She sucked the head into her mouth, rolling and fluttering her tongue, enjoying the taste and feel of him. Matteo groaned deeply again, and she felt Ricco kneel behind her, one hand sliding between her legs to tease her and force her to widen her legs for him. Matteo's hands tangled in her hair, holding her still as Ricco's other hand came down heavily on her ass, spanking her.\n\n\"Fuck!\" Matteo growled as the vibration of her stifles scream reverberated through his cock, making him jerk his hips. He began to slowly move in and out of her mouth, his eyes flicking between the beautiful lips wrapped around his cock and his brother who was fucking her with his fingers and spanking her slowly but forcefully. Ricco took the time to rub the reddened skin as he drew his wet fingers from her pussy to lubricate the tight dark star of her ass before repeating the process. \"Fuck!\" Matteo growled again, as he felt ready to cum, knowing it would only be the first time tonight. They could sleep all day tomorrow, because he needed this. He needed her, and he needed Ricco. He needed his family, the two people he loved most in this world.\n\nOverwhelmed and on the verge of cumming Cat felt Matteo grip her hair, tightly holding her in place, and his cock swell as Ricco's hand landed again, making her cry out a moment before Matteo came, filling her mouth and pushing her over the edge with him. She felt Ricco steady her as he continued to use his hand on her, forcing a thick finger into her ass. She swallowed, making strange whimpering noises as she shook and spasmed between her lovers.\n\nMatteo staggered back toward the bed and Ricco scooped Cat up into his arms, carrying her to the bed. He sat with his back against the headboard and pulled her between his legs, gently encouraging her to move down his body. He wanted her submission, not just for himself but for Matteo as well. He would have liked her to kneel before him, but there would be plenty of time for that in the future. For now, he was content to control what happened between the three of them tonight. Matteo was intuitive and would know what to do once he caught his breath.\n\nA deep groan escaped Ricco as Cat practically devoured his cock, sucking him hard and deep, immediately one hand come up to clutch his balls firmly. He watched as Matteo moved behind Cat and raised her hips without disturbing the suctioning mouth that held his cock captive. He saw Matteo follow his lead, mirroring how he had teased and spanked Cat while she sucked his cock only minutes ago. His fingers, though, concentrated on her ass, delving deeply and easing the tight muscle open further and further for him between sharp slaps to the cheeks of her ass, keeping them red and heated.\n\nCat floated in the heady mix of pain and pleasure, her whole body singing for the men who knew it, knew her, so well. Waves of searing heat and pure pleasure rolled through her, making her shudder and jerk, as Ricco grunted loudly and began to take control of her head, forcing it up and down his cock in rapid motion until he came, shouting out his orgasm to the room. She came again with him, Matteo driving her to the edge and pushing her over with his hands and fingers.\n\nRicco held her in place, fighting through the excruciating sensations, ensuring her mouth kept his cock hard and ready to fuck as her eyes glazed over and she sagged over him, despite Matteo's hold on her hips. It took him only a few minutes to recover, and holding Cat to him he moved down the bed and lifted her to settle over his cock, sliding into her hot wet depths easily, feeling her tighten around him as he moved, bucking his hips slowly to thrust all of his cock into her. Matteo helped to ensure she was comfortable with her injured shoulder before kneeling behind her between Ricco's widely spread legs.\n\nWith his fingers tangled once again into her hair, Ricco lifted her head so he could look into her beautiful face and see the painful pleasure written there as Matteo slowly forced his big cock into her ass. Ricco delighted in the grimace and gasps she made, and she whined throughout the painful intrusion and slowly settled into an acceptance of the hot hard flesh searing her into her ass. Finally, he heard her breathing change and the sounds she made become more heated. She was fucking amazing, so sexy and hot and willing, he loved her for so many reasons, not the least of which were moments like this.\n\n\"Fuck!\" he growled and pumped his hips upwards toward where his brother's cock lay, and they slowly got into a rhythm, fucking the woman they loved simultaneously. After what seemed an age, Matteo pulled out of Cat, laying on the bed beside Ricco, lifting his arms toward Cat. Ricco passed her to his brother and keenly watched the point of impact as Matteo drove roughly up inside her, burying himself deeply and fucking her until Ricco moved into position behind her.\n\nOnce flat against Matteo's chest, Cat braced herself for what she knew was coming. Ricco gripped her ass cheeks tightly and drove himself forward, grunting with the force as he slammed into her, making her cry out. After several minutes of slow movement, the brothers once again got into a rhythm and fucked Cat hard, Matteo torturing her sensitive nipples as Ricco alternately slapped her thighs and cheeks of her ass.\n\nCat felt her mind melting away on pure sensation as the men she loved reclaimed her in the most physical way. She repeatedly came for them, and, as if not fully within her body, saw, rather then felt them stiffen and cry out in their orgasms almost simultaneously.\n\nNot one of the trio felt the need to get up and clean up, instead they fell asleep in a tangled heap, each touching the other as if needing the connection. Cat faded into sleep quickly, feeling like her world had altered immeasurably but unable to understand how. Her mind wandered, filling her dreams full of twisted images of the men she loved in dark places, such as dungeons or prison cells. That disturbed her and made her feel even more guilty for staying away as long as she did.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "plane",
        "airport",
        "shooting",
        "family",
        "mothers"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-34"
}