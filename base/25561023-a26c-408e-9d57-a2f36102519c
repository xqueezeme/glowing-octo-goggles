{
    "title": "James & Jasmine Ch. 03",
    "pages": [
        "Wednesday \u2013 Paris\n\nJames awoke with a smile on his face. He was in Paris, things were going well with Caresse, and he was finding himself totally enthralled by the young lady sleeping across the hall. And the day ahead was surely going to be a full and most interesting one. He bounded out of bed and was showered, shaved and dressed in no time. He took his laptop and headed downstairs to have a coffee in the dining room, awaiting Jasmine's arrival.\n\nShe came down shortly after he did and his eyes scanned the length of her beautiful frame. She was dressed in a stylish spring dress \u2013 the thin orange and yellow fabric hugging her lower torso, but flaring out in a flouncy tightly pleated skirt around her long lean legs. James couldn't help but notice the tight seductive bounce of her bust line as she strode towards him, her long tresses flowing over her square shoulder. He was amazed every time he saw her \u2013 such stately elegance and beauty wrapped up in one lithe package. Yet, despite her wholesome good looks, there was a naughty young lady underneath, as he was slowly discovering \u2013 day by day \u2013 to his delight. \n\n\"Good morning, kind sir,\" she greeted with a broad smile, her pearly whites framed by lovely lush lips. It was hard to believe that this gorgeous young lady was the same person he'd been stroking to orgasm only a few hours earlier. James loved the dichotomy and returned her smile. \n\n\"Bon jour, Jasmine,\" he replied, pronouncing her name as the French did, with the accent on the second syllable. \n\n\"So, we have a busy day today, don't we? Tell me all about it...boss,\" she said with relish in her sweet soft voice. She ordered breakfast and coffee and focused in on his agenda for the day. Neither of them alluded to the incredible night they had just shared, preferring to think toward the wonderful day, and night, that lay ahead. \n\n\"Well, we're off to Caresse to finalize plans and our contract extension. I think we're good on both accounts and it should be a pleasant day of planning their next moves. I may focus on the contractual arrangements; you may need to deal with some of the design issues. I'm sure they'll seek out your opinions on the fonts, styles and colors that might be most appropriate for the American market.\"\n\nJasmine smiled as she sipped her coffee and James found his eyes traveling down to gaze into the dark supple cleavage that was subtly exposed, but almost begging to be noticed. He didn't want to appear to be leering, even though he was, and his eyes returned to hers as he continued. She smiled knowingly.\n\n\"We'll actually have the afternoon free, I think, so we'll have to decide how to spend our time for a few hours. We could sight-see...or spend some time together back here at the hotel,\" he added with a glint in his eye. Jasmine remained silent and just gave him that sweet smile that made him melt each time he was witness to it.\n\n\"We've been invited to dinner with the Caresse staff later tonight \u2013 not until 8 or so. Then there was talk of everybody going dancing at a nearby club. So we'll play it by ear as the evening goes. I do know we don't want to be out too late as we have an early train tomorrow morning. But we'll have to spend an appropriate amount of time with our hosts \u2013 so clubbing later tonight is definitely on the agenda.\n\n\"Oh, good,\" Jasmine said. \"I love to dance. That will be so much fun!\"\n\n\"That's the rough outline of our Mecredi,\" he said with a wave of his hand. \"I'm sure we'll find some time \u2013 I hope we will, anyway \u2013 to spend on our own. I look forward to that. Last night was incredible,\" he added, finally broaching the subject they'd both avoided.\n\n\"Oh, James. It was. I hope you were able to take care of your, um, condition,\" she laughed. \n\n\"Actually, believe it or not, I did not. I was tired and decided to hold off and enjoy today, or tonight, even more.\"\n\n\"Oh no,\" she said with concern. \"Well then, we'll have to pay extra special attention to you later. Speaking of, who makes the rules tonight?\" she asked with a devilish undertone to her question. \n\n\"I suggest we make the rules together. But I do have a suggestion. I think once we leave Paris, there will be no rules \u2013 all systems will be go,\" he said jokingly. \"But my suggestion for later today is that we focus on explorations of,\" he paused, \"an oral nature.\" He smiled at his use of words.\n\n\"Oh my. Sounds so formal \u2013 like a science experiment,\" she said, as she put her cup down in the saucer. \"But I must say I'm really enjoying our long slow seduction, James, and I'm happy to make it one more step before we leave Paris. I like your idea. A lot.\" They looked at one another deeply. \"And, to tell you the truth,\" Jasmine added in a whisper, \"I can't wait to have you in my mouth, James.\" James hadn't expected such a forthright comment, but he should be getting to know this about Jasmine by now. She could be very blunt and to the point. He liked that.\n\n\"And I could say the same, young lady. I can't wait to taste you, to lick you, to drink you in,\" he added in the same low tone. He realized, as he said it, that they better back off before they lost themselves and didn't get to their meeting at all. He cleared his throat, sat up straight and Jasmine did the same.\n\n\"Glad we got that settled,\" she said with a giggle. They finished breakfast, grabbed their briefcases and headed out to the car waiting for them, once again, under the porte cochere of their hotel. \n\nThey entered the Caresse offices a short time later and were shown right into Pierre's office. He greeted them warmly and James could already sense a growing connection between Pierre and Jasmine. She seemed to light up as Pierre kissed her gently on each cheek and smile at his deadly good looks. James let his mind wander to what might lay in store for them in St. Tropez when they would visit Pierre and Nicole in a few days. He just as quickly realized he shouldn't let himself daydream at this critical moment. He ear-marked those thoughts for later, regained his composure and got his business game face back on. \n\nThe day went smoothly and James and Jasmine found themselves mostly on separate tracks. James spent the next few hours dealing with the contractual side of things. And, interestingly, it was Nicole who handled the financial dealings. Pierre, as it turned out, was much more involved with the artistic and design side of the business, so he and Jasmine headed down the hall to meet with the graphic designers, photographer and models. \n\nJasmine was thrilled to have a little one on one time with Pierre and knew James would feel the same way about spending time with Nicole. As she entered the studio she was shocked to see several of her own photo boards leaning against the wall. \n\nThe assembled group studied and discussed styles and colors as two models jumped in and out of various lingerie combinations, not bothering to worry about privacy. Both of them were stunningly beautiful, but one of them really caught Jasmine's eye. She looked to be in her early twenties; a tall, slender, but buxom, blond who looked to be of European descent. Her lush body was flawless and she seemed to notice Jasmine eyeing her, as she smiled back to acknowledge the attention. What really struck Jasmine was her skin; it appeared almost translucent. She could only imagine how smooth it must feel to the touch. She also had deep beautiful blue eyes that seemed full of promise. \n\nGiven that the photographs in the ads would be in black and white, the approach had a bearing on the selection of the garments to be used. Solid blacks and whites, or combinations of both, seemed to make the most sense. They spent time looking at various combinations and were making significant headway when Pierre went off to the other side of the room to take a phone call. Jasmine suddenly found herself seated next to the model that had caught her attention.\n\n\"Hi,\" she said in an accent that Jasmine immediately pegged as Eastern European or Russian. \"My name is Sophie,\" she said with an extended hand. Jasmine took her hand and felt her strong warm grip.\n\n\"Jasmine,\" she replied. \"My pleasure.\"\n\n\"Your photographs are beautiful, Jasmine,\" she said, immediately opening up to her new friend. \"You have modeled before?\" she inquired.\n\n\"Um, actually...no. I, well, I had to step in when the model we were supposed to shoot didn't show up. It was a last minute thing.\" Sophie seemed to be taken aback and reacted like she was in disbelief.\n\n\"Well, you look as good as anyone I've ever seen in this lingerie, I must say.\" She paused briefly before continuing. \"Are you here with James?\"\n\n\"Yes,\" Jasmine replied. \"Do you know him?\" she asked with a quizzical expression.\n\n\"Well, we were introduced at dinner last time he was here. He's a very interesting man, I must say. Very sexy,\" she added softly with a conspiratorial grin. \"But he was all business on that trip. I couldn't even get him up on the dance floor,\" she said with a laugh.\n\nJasmine began to put it all together as she recalled James mentioning how their hosts had sat him down at dinner next to a lovely model. She even further admired his fortitude now that she was seeing the very model James had been paired up with. She was a lovely female specimen and surely worthy of any lingerie that Caresse might care to share with the world. Jasmine could not stop looking at the taut smooth curves of her exquisite body and the glowing radiance of her beautiful face. \n\n\"I hope you're having more fun,\" Sophie said, with a bit of prurient curiosity showing in her innocent comment. Jasmine could feel Sophie's eyes taking her in while they talked and she was feeling drawn to this lovely exotic woman. \n\n\"Well, actually, we're having a wonderful time. As you might have heard, his partner was injured and, so, he invited me to fill in for Paul.\"\n\n\"Well, wise choice, I would say. Maybe I'll see you later tonight at dinner,\" she said with a smile that seemed to say much more. \n\nJust then Pierre returned and they got on with the work to be done. The rest of the afternoon flew by and soon Jasmine and James reconnected in Nicole's office. Plans were laid out for the coming weeks \u2013 including a return trip to Paris in a couple months \u2013 and James and Jasmine gathered up their things to depart. \n\nThey finalized arrangements for later in the evening and Pierre wrote out instructions for their visit in a few days to St. Tropez. Several times she caught Pierre's eye and felt his gaze capture her attention. His sparkling eyes seemed to look straight into her soul. They departed with friendly two cheek kisses and subtle touches. James felt on top of the world as they left the offices and headed back downstairs \u2013 with much to still look forward to as the day unfolded. \n\nThey wended their way back to the hotel around two and made plans before separating. James needed to tend to some communications back in his room and Jasmine was interested in using the gym. They decided Jasmine would come to his room around 4:30 and they would see where things led; still having time to enjoy themselves and get to dinner with time to spare. They parted ways with a gentle hug that did little to telegraph their true connection.\n\nJames returned to his room, made a few phone calls, answered some important emails and then took a short nap before hopping in the shower. At precisely 4:30 he heard a soft knock at his door. \n\nHe opened the door and gawked at the vision of loveliness leaning against his door jamb. She was wearing a short and very revealing silver silk slip and impossibly high heels, barely covered by a black satin robe. Her hair was up in a very casual way and exposed the huge hoop earrings dangling from her earlobes. She had on just enough make-up to highlight her intoxicating eyes and luscious lips.\n\n\"I'm glad you answered quickly, James. I didn't want to be caught standing out in the hall like this in the middle of the afternoon,\" she said as she sauntered into the room with a confident air. James just stared. \"I wasn't sure what the dress code was for this get-together, so I just threw something on,\" she joked. She let the robe fall from her shoulders and onto the floor in a small satin heap as she turned to look at James head on.\n\n\"I'm going to bet that Missy had a hand in this selection,\" he suggested as he ogled the way the expensive satin lay across her sexy body. Her legs looked so smooth and lengthened by the heels; her ass pert and perfect. \n\n\"Yes, she did. Good observation, James. The only thing I couldn't decide on was whether to wear panties or not,\" she added as she spun for James's approval.\n\n\"And what did you decide?\" James queried.\n\n\"I guess you'll just have to wait and find out,\" she answered with a mischievous grin. Knowing her flair for the dramatic, he was wagering she had on something tiny and sexy \u2013 one more miniscule layer to remove. \n\nJames poured them both a glass of red wine and they toasted the late Parisian afternoon and the adventure about to unfold. She seemed to be enjoying walking back and forth in her heels and skimpy garb, so James settled back on the bed to enjoy the show. He sat on the edge of the bed, leaned back on his elbows, spread his legs, and took a sip of wine as he gazed in awe at the lovely woman striding and swaying before him. \n\n\"Mmm, walk back and forth for me, Jasmine. Let me look at you.\" He watched keenly as she smiled and showed off for her lover. \"God, you're beautiful,\" he seethed. \n\n\"Mmm. Thank you, James. So you like what you see?\" she asked impertinently as she strutted her amazing body across the length of James's room once again; her soft tits bouncing seductively and her lovely ass twitching tightly under the sheer short garment. She smiled knowingly at James as he ogled her form; her own arousal surging at the sexual power she was exerting at that moment. \n\n\"God, I want you,\" James murmured.\n\nJasmine smiled warmly as she slowly approached him. She put her glass down on the bureau, placed her hands high on his thighs and leaned in to whisper in his ear, her lovely floral scent scrambling his senses. \"Then you shall have me,\" she whispered breathlessly in his ear. \n\nShe stood back up, grabbed a pillow and threw it down between his feet. She locked in James's gaze before reaching across to slide the left strap of her slip, and then the right, off of her slender shoulders. She lowered the bodice of her slip, inch by inch; the fullness of the upper slopes of her breasts straining for release. She hissed with delight as her distended pink nipples emerged, rock hard and tipped toward the sky. With a flourish, she then reached down and pulled the slip up and over her head, her tits jiggling seductively with the movement. Her picture perfect breasts were now on full display, defying gravity. James could also now see that she was, as he'd suspected, wearing the tiniest of thongs, silver to match her now discarded slip.\n\nShe leaned forward to place her hands on his thighs again as she bent over to kneel down. Her soft natural breasts hung and swayed like full fleshy pendulums from her slender torso. James couldn't speak; he just watched as she knelt between his legs and slowly slid her hands up along the tops of this thighs.\n\n\"You are wearing far too many clothes, James. It's unfair,\" she teased in a little girl voice. The growing bulge in his slacks gave testament to his gathering arousal. Jasmine circumvented his visible excitement and reached up to begin unbuckling his belt, after which she lightly grabbed his zipper and began to slide it down over James's hardening mass. She grabbed his pants and boxers all in one grip and pulled down. His turgid cock lay full and lanky across his thigh as she exposed it. She threw his clothes aside and reached up to unbutton his shirt. James could have helped, but he was enjoying the feel of her full breasts rubbing against his dick, now growing and thickening by the moment. He finally assisted in pulling his shirt off and leaned back to enjoy the attention. \n\n\"Oh, James,\" Jasmine whispered. \"You have such a nice big cock,\" she cooed, breathing on his now fully erect member as she spoke. She gently blew along his length from a few inches away, then made eye contact with him as her tongue emerged and she gently licked the bulbous head of his raging hard-on. She cradled the engorged tip of his cock with her tongue, sliding it back and forth across his frenulum as she stared into his needy eyes. James felt like he was watching one of those up-close point of view porn movies, except it was his cock being washed with his lover's slick tongue. As Jasmine stared into his eyes, she opened her delicate mouth and gently enveloped the straining head of his cock. Her mouth was so warm, so wet, and so incredibly soft. Her technique was slow and deliberate, just the way James liked it. \n\nThe sight of this gorgeous woman looking up at him with her lips languidly locked around his rock hard penis \u2013 it was a sight he knew he would never get tired of. He watched intently, taking in every little detail: her slender manicured fingers wrapped around the base of his shaft, her other hand gently cupping and kneading his bulging ball sac, her cheeks hollowed from sucking, the little whimpering moans that made it sound like nothing had ever tasted better. But it was her deep green eyes that entranced him, each time she looked up to see him watching her; the tip of his hard dick firmly ensconced between her soft lips.\n\nShe pulled off and began to lick her way down James's quivering shaft, lower and lower, the rivulets of her gorgeous mane tickling his inner thighs as she descended. He felt her swirling tongue lather his smoothly shaved balls and a groan erupted from some deep dark place in his core. Jasmine was moaning herself and the slurpy sound of her testicular explorations was a complete turn-on for both of them. She took each big ball in her mouth, one at a time, swirling her tongue around the circumference before letting it pop out of her mouth with a moan \u2013 first one, then the other. She returned his gaze with a fat ball in her mouth, then, letting go of his rigid shaft, she shook her head back and forth, causing his rock hard cock to shake back and forth like a meaty metronome. James stared in amazement as his cock rocked the opposite way from her twisting head. She stopped to swirl her tongue before disengaging. \n\n\"Mmm, your balls are so smooth, James. I love that you shave them. Makes them perfect for sucking,\" she added as she opened her mouth wide and engulfed his left ball once again. James groaned.\n\n\"God, I love to have my balls sucked, baby.\" She giggled with his testicle encased in her mouth and James felt it vibrate through his crotch. \"Really gently.\"\n\n\"Then so it shall be,\" she said quickly, before re-engaging in her ball sucking exercise. \n\nJasmine let his nut pop out of her mouth with a flair, then flattened her tongue and began to again lick her way up the underside of James's hardened root, one slender hand again cupping his glistening freshly shaved balls, while the other remained wrapped around the base of his rigid rod. The vision of Jasmine sucking his cock was almost too much for James to comprehend. He flashed back to meeting her that very first day when she was making a presentation. Now she was between his legs, sucking his dick \u2013 in Paris. \n\n\"God, that feels so good, Jasmine. Don't stop,\" he commanded. \n\n\"I wasn't planning on it,\" she said after letting his erection fall from his mouth for a second. \"I've wanted to suck your cock since the moment we landed in Paris,\" she added, before opening her mouth wide and descending three or four inches down James's rock hard member. He groaned in appreciation \u2013 her technique was perfection \u2013 long, slow, warm and wet \u2013 and no teeth, all lips.\n\nHe knew most women took pride in their oral skills. Hell, everyone, man or woman, wants to feel that they excel in that department. But James often found that many younger women had watched too much porn and seemed to feel that they had to be aggressive and rough. He had always appreciated a woman who handled his cock with care; who acknowledged that its hardness sometimes belied its sensitivity. He much preferred a soft feathery touch, whether from his lover's hand or mouth. And he'd always hated to feel the rough edges of a woman's teeth. Jasmine seemed to know this intuitively.",
        "Suddenly Jasmine disengaged and stood up, moving quickly onto the bed and kneeling to the side of James supine form, his cock towering thickly above his groin. She grabbed the base of James's erection, leaned over and slowly slid her mouth down over his bulbous head and beyond. James moaned loudly in appreciation as his right hand came up to cup Jasmine's breasts. As she began to bob up and down on his steely stem, he felt her soft dangling breasts bounce in and out of his hand; the distended nubbin of her erect nipples contrasting with the soft pliant flesh of her tit. God, how he loved the feeling of her luscious natural breast jiggling in and out of his hand as she sucked him with an expertise that could have only come from years of practice and many lucky lovers. \n\nHe loved the whimpering sounds she made as she sucked, making it sound like she was deriving as much pleasure from her wet warm mouth as he was. James slid his hand from her bouncing boobs down her tummy and in between her legs. She gasped as his finger found her satin covered clit, her panties already soaking wet with her flowing juices. He loved the feel of her warm wet lips encased in a tight satin pouch. He could feel the indentation of her slit as his finger gently pressed against her. He twiddled his finger tightly as she paused for a minute to enjoy the sensation. As James returned his hand to her bobbling bosom, Jasmine doubled her effort \u2013 gagging slightly as she took a little too much girth in her mouth. She lifted off of his cock once again, gasping for air before spitting on his dick and spreading the saliva all over his glistening shaft. Once again she returned to sucking \u2013 a woman on a mission. She seemed so naughty, yet it all seemed to come to her so naturally. \n\nAs much as James was enjoying this, and would return to it, he knew he wasn't quite ready to orgasm. He wanted to savor that feeling as he suddenly felt the burning need to turn the table. He lifted Jasmine's chin and whispered to her.\n\n\"Jasmine. My turn,\" was all he could stammer. \"I don't want to cum yet,\" he said in a hoarse whisper. \"And I want to taste you, baby,\" he murmured. \"I want to taste all of you.\" \n\nJames moved quickly to change positions, but told Jasmine to stay right where she was, on all fours in the middle of the bed. He moved behind her and gently pushed her head forward so she was face down, head turned and the sweet curve of her ass in the air. Good God, what loveliness, James thought to himself as he surveyed her body. The tiny line of thong barely covered her sex, the silver satin panel hiding her lovely holes. Her ass looked round and succulent; impossible to resist. He reached up and pulled her thong down over her cheeks, exposing the exquisite view of her ass and pussy \u2013 her sexual core. He pulled it halfway down her thigh so the taut material was stretched tight between her delectable legs. \n\nHer pussy was impossibly beautiful, as he knew it would be. The rounded ridges of her outer lips framed a long pink juicy slit of delicately furled labia; already glistening with arousal. Her inner lips were splayed open, beckoning him to taste their glistening tenderness. Her sweet aroma reached his nostrils and made his brain spin and his cock swell. Jasmine appeared to be totally uninhibited and happy to expose herself to this most intimate viewpoint. James closed his eyes, inhaled her delicious scent and thanked the heavens for being at the threshold of dining on such a treasure. \n\nHe placed his hands on her sweet young ass, pulling with his thumbs to open her sex. The view was awesome and intimate, as he leaned down and probed her asshole with the tip of his stiffened tongue. He could tell Jasmine hadn't expected that as she gasped her approval, clutching the bedspread as she closed her eyes to concentrate on what he was doing to her. \n\n\"Oh, James,\" she whispered as she arched her back to meet his mouth.\n\nHe nuzzled his face in between her cheeks, probing her anus with abandon, licking her with long strokes of his flattened tongue, then deeply probing her tight sphincter with a rigid coiled tongue. He licked lower, his elongated tongue now tasting the back end of her dripping pussy as his nose nuzzled into her ass. God, he wanted to taste and suck every inch of her. He moaned his appreciation as his tongue delved lower and tasted, for the first time, the soaking wet flesh of her enflamed pussy. He scooped his tongue in as far as it would go and gathered her tasty nectar in his mouth. He leaned down even lower as his nose nuzzled into her succulent pink flesh and his tongue found her clit \u2013 engorged and slippery from lust and longing. He flicked her clit with his tongue and felt her body react to his oral connection, her long flowing hair sprawled across the bed. \n\nFor her part Jasmine couldn't believe James was licking her asshole. 'What a naughty boy?' she thought. But how perceptive that he'd surprise her by going there first? She loved to be surprised and tingled with anticipation at all the directions things might go. She had always enjoyed having her ass played with \u2013 licked and probed \u2013 and James was finding that out much earlier than most of her lovers. 'How cheeky of him,' she thought as she pushed back against his wandering tongue. She moaned deeply each time he probed her bottom and each time he returned to flick her clit with an expertise that most definitely came with age and experience. She let herself get lost in the pleasure of the moment \u2013 her pussy being sucked by her new lover \u2013 her boss.\n\nJust as she was getting into the rhythm of the moment, James suddenly changed things up. He flipped her over, taking control of her body, molding her position to his own burning desire. She felt herself give in to his will \u2013 willing to let him do anything he wanted to her. He grabbed her long legs and pulled her toward the end of the bed, pulling off her tiny thong, her last flimsy line of defense, and flinging it onto the floor unceremoniously. He positioned her so her ass sat on the bed and her feet were on the floor. She looked delectable laying in such a submissive position and James's mouth watered at the image. She looked up at her new lover, his stiff erection bouncing with his frantic movements. She'd tend to him again later. But for the moment, she was going to lay back and enjoy James and whatever he had in store for her. \n\nHe grabbed the pillow Jasmine had used previously and knelt on it between her wide spread legs. There was something so sexy and submissive about this position \u2013 laying naked on the bed, her long lean limbs splayed in a way that totally exposed her perfectly shaped pussy, already oozing with arousal. It glistened pink and dripped with excitement as James just stared in awe at the labial perfection only inches from his eyes. It stood to reason \u2013 if every other part of her was gorgeous, her glorious pussy would surely follow suit. She was as smooth as a baby, recently waxed her surmised, and her delicate inner lips were unfurled and open like a spring flower after a warm rain. She absentmindedly dipped her hand down to touch herself as James readied himself for play; running her fingers across her clit and even opening her lips for his benefit. James was close enough to hear the sticky evidence of her secretions and the sensory overload of being so near to nirvana made his cock throb with excitement.\n\n\"Such beauty, Jasmine. I'm honored,\" he professed. He knelt down and leaned forward. Gazing into her gaping sex he opened his senses to the moment. The warm wet sound of her excitement could be heard as she blithely fingered her lips and her sweet pungent aroma filled the air. The sight, smell, and sounds of Jasmine's arousal had an intoxicating effect on James. He moved forward ever so slightly and began to lick her thighs, now even closer to her beautiful flowing sex. As she continued to gently thrum her clit, James slowly licked his way up her long lean legs. So smooth. \n\nJames looked up as he nibbled his way north and saw Jasmine gazing down at him with a look of pure unadulterated lust in her eyes. All modicum of modesty was gone as she reached down with forked fingers and gently pulled the loose skin back to spread her labia \u2013 opening up her lovely pink pussy for James's inspection and worship. She placed her other hand on James's head and pulled him toward her. James resisted going too fast \u2013 he wanted to savor every view, every whiff, every angle and every taste.\n\nHe stuck his tongue out as he gazed into Jasmine's eyes and gently licked her clit; twirling his tongue in tight circles as he watched her reaction. Her eyes closed, her mouth opened and her head went back in a show of approval. She tasted as sweet and clean as a mountain stream and James felt a rush of desire tear through his brain like a booster rocket as he leaned in further. He could feel Jasmine's hand pulling him into her \u2013 and he obliged. With open mouth he met the delectable slit of her sex with a kiss that enveloped the entirety of her engorged labia. A deep seated moan escaped her throat as his tongue delved deeply into her inner recesses \u2013 sweeping through her vagina from bottom to top \u2013 ending with a punctuated sucking of the erect nubbin of her exposed clit. Her reaction was all James needed to dive into one of his favorite pastimes \u2013 eating pussy. \n\n\"Oh, God, Jasmine. You taste so good. Delectable,\" he crooned. \n\nWhat started out as gentle probing and licking, soft sucks and slow tongue, escalated into a total devouring of Jasmine's delicious cunt? Never had he been so hungry to taste a new lover or more turned on. He squeezed her delicious cheeks into the palms of his hand, lifting and separating her pussy, as he dined on her delectable lips and dove face first into her gaping slice of wet girl flesh. 'God, she tastes good,' he thought to himself as he ate like a man starved for female flavor. \n\nJasmine lay back and rode the waves of pleasure washing through her body as her boss feasted on her womanly flesh. Oh, how she loved it when a man showed utter devotion when eating her out. James was totally absorbed and, thus, she lay back and got lost in the incredible stimulation. She'd heard men say that blowjob technique was important, but so was enthusiasm. Well, Jasmine had always felt the same way about cunnilingus. She wanted her man to want to be down there \u2013 to absolutely love being down there. And James was not holding back. She could tell he was thoroughly enjoying himself and was totally and unequivocally absorbed in eating pussy. It was as simple as that. \n\n\"Oh, God, I love your pussy, Jasmine,\" he panted. \"I can't get enough of it,\" he added before diving back in.\n\nJames could feel Jasmine moving her hips and grinding into his face. He felt her respond to more pressure \u2013 the more he sucked, the more she seemed to tilt and gyrate her hips, pushing to meet his mouth. He disengaged his hands from her ass and slid his right middle finger into her pussy as he sucked on her clit. Jasmine groaned and pulled his head harder into her hole. Damn, he could literally not get enough of this woman. She was so juicy and dripping and her liquids tasted so fucking good. With purpose he doubled down. As he inserted his left thumb just inside her asshole, and curled his right middle finger up and onto her G spot, he began to suck and flick her clit with a soft, but intense, focus. He waited to see how Jasmine would respond and he felt her body stiffen and press against his face. He moaned loudly into her flowing gash as he sucked her hard and wiggled the pads of his middle finger against her deepest soft space. Her moans became whimpers; her little jerks became full body spasms \u2013 and as James sucked Jasmine's cunt with every ounce of his being, he felt her edging closer and closer to orgasm. \n\n\"Oh, James,\" she cried as he felt her lift her hips up to meet his oral assault. \"Don't stop! Fuck, don't stop!!\" she begged. \"Oh, shit! Suck me! Unf!\"\n\nHe knew not to stop what he was doing. Now was not the time for variety. Now was the time for keeping up what was working. Jasmine was humping her hips into James's face and he could feel her clutching his head in between her wide open legs. He moaned noisily, he sucked with a vengeance, he moved his fingers, and he ate Jasmine like he might never eat a woman again. \n\n\"Oh fuck, James! I'm gonna cum Ooohhh...!\" she screamed as she arched her back and her body tensed like a board. \"Fuuuuck.\"\n\nTime seemed to stand still as the sounds of a hungry mouth on a dripping pussy overtook the soundscape and James felt Jasmine tense and scream an unintelligible grouping of words. He could taste her juices changing as she absolutely flooded his mouth with warm cum and they screamed in unison, her body convulsing with an orgasm that overtook her like a unexpected ocean wave and shook her to the core. He sucked up every gushing drop and knew his face was absolutely drenched with her sweet cream. \n\nBoth of them retreated for a few minutes to recuperate; both of their hearts beating madly. Jasmine hadn't cum that hard in quite a while \u2013 or at least since last night, she laughed to herself. And James's tongue was sore from the exertion and he lay back to rest his weary jaw. He pulled back to admire the incredible beauty of her gaping post-orgasmic pussy \u2013 open, pink, wet \u2013 a vision of pure and unadulterated sex. Then he closed his eyes. \n\nHe was awoken from his sexual stupor by Jasmine as she pulled him onto his feet all of a sudden. She knelt down before him in a most submissive position and placed herself squarely between his slightly spread legs. She looked up into his eyes with a look of sheer and utter need as she lightly cupped his hanging balls with one hand and carefully encircled the root of his semi-rigid shaft with the thumb and forefinger of her other hand. \n\nJames looked down into her plaintive eyes as she softly stroked him and pulled his ball sac into her mouth. As she looked up into his eyes with a look of sheer joy, he felt her swirling tongue slather his hairless testicles in a gesture of reciprocation. James had always loved to have his balls sucked, and Jasmine seemed to know this intuitively as her mouth encircled them one at a time. \n\n\"Good, Jasmine. So good,\" was all he could offer. \n\nShe paused for a moment before continuing; her slender fingers wrapping around his hardening meat. \n\n\"James. Will you do me a favor?\" she asked so innocently.\n\n\"Anything,\" James hissed in reply. How could he deny her anything at this very moment?\n\n\"I want you to cum in my mouth. I want to drink you. Will you let me?\" she said with a slight pout. \"Please.\"\n\n\"God, yes,\" James stammered.\n\nShe maintained eye contact as her tongue began to slowly trace a line along the under ridge of his hardening length, lathering his shaft with a splayed tongue. She seemed to be savoring every inch as she ascended, pausing a moment with open eyes and wide mouth before closing her luscious lips and encircling his bulbous head with oral love. James groaned as he heard and felt her moan with delight. He loved the little feminine sounds that Jasmine expressed as she sucked his cock. \n\nHe placed his hands lightly on her wild locks as she began to suck his dick with a perfect measure of pressure, tempo and sound. Her mouth felt like molten silk enveloping his fully engorged penis. James had had his share of blowjobs, but he felt like he was experiencing one of those rare erotic moments of sheer perfection. \n\nFor her part Jasmine was relishing the temperature and texture of her lover's throbbing member. James's cock was the perfect size for sucking \u2013 large, extremely hard, hairless and straight. God, she loved sucking a man when she really wanted to please him. And she was going to do everything in her power to suck James dry. She wanted to feel him explode in her mouth so she could drink down every drop of his hot semen. She found that perfect rhythm \u2013 not too fast, not too slow \u2013 that she knew from experience would bring her man to climax. \n\nAnd she kept making sure she was looking at him. There was nothing she enjoyed more than watching her lover's eyes when she sucked, and James was no exception. She felt so in control as she looked up into his lowered lids. He looked like they were going to roll back in his head at any second. Several times she went deep and felt the head of James cock push against the back of her throat. And all the while she gently cupped his balls with both of her small hands and urged him on \u2013 begging him without words to deposit his load in her hungry mouth. His deep seated groans were a testament to his increasing arousal. She heard that familiar sound of erratic breathing and tensing of muscles.\n\n\"Oh, yessss, Jasmine. Oh yes!! Unnnnf. Oh fuck. Oh...I'm gonna cum, baby!\"\n\nAnd that was exactly what Jasmine wanted. She kept up the pace \u2013 lots of saliva, lots of tongue and lips, lots of whimpering moans \u2013 all combined with a steady pace \u2013 in and out, in and out. James was lost in a state of oral bliss as he felt himself reach the edge.\n\nHis orgasms were very strong when he was completely turned on, as he was now. The power of his cum exploding at such close range had caused more than a few of his lovers to choke on the spurting jets of his semen when he ejaculated down their throats. \n\n\"Oh, God! Get ready!\" he screamed as Jasmine powered through to finish the blowjob the way she wanted \u2013 with James exploding in her mouth. \n\nHer motions didn't falter. She felt his body tense and there was a moment of silence as James's body twitched. Suddenly James felt his explosion welling up in his core. \"Here cums!\" he screamed as the first jet of cum, followed by another, and another, burst into Jasmine's mouth. Her soft lips were sealed around his shaft as he emptied himself into her warm wet mouth. His orgasm subsided in diminishing aftershocks as Jasmine sucked down every last drop. Their eyes met as his climax ebbed and she slowly disengaged and let some of his load slide out of her mouth. James watched as she looked in his eyes and swallowed. She returned to lick his turgid shaft, now spent. She cleaned him up with her tongue, searching for every last drop of his seed. \n\n\"Mmm,\" she moaned. \"Yum.\"\n\nJames and Jasmine were spent \u2013 totally \u2013 and were on the verge of drifting off into a peaceful slumber when James prodded his partner from her stupor\n\n\"Jasmine. We need to wake up before we sleep through dinner,\" he cajoled \n\nIt was true \u2013 they needed to rally once they'd checked the time and realized that more adventures awaited them. Jasmine gathered her things and slithered out of the room quietly, promising to return within a half an hour. James suggested he'd knock on her door at 7:30.\n\nJames showered and dressed and a short while later was knocking on Jasmine's door. She answered with a flourish and James marveled at the ease with which this young woman could transform her look so effortlessly.\n\nShe looked ready for a casual evening of dining and dancing and James whistled under his breath as he took her in. She wore skin tight leggings that were a mottled design of black and white. The came to just above her ankle where they highlighted a pair of black stilettos that looked sinful enough to be outlawed. A low cut orange top accented the generosity of her bust, but hung loose enough to sway loosely to just above her waist. The cut kept her incredible ass on display as well as allowing flashes of her belly and waist. It would be perfect for the dance floor, James thought to himself. He also found himself wondering what she could possibly be wearing, if anything, underneath. Her hair was up in a casual twist and huge hoop earrings accented the entire ensemble.\n\n\"Wow,\" was all James could mutter. \"Deadly,\" he added.\n\nJasmine smiled. \"I'll take that as a compliment, thank you,\" she replied. \"I don't know what they wear in the French clubs exactly, but hopefully this will fit the bill,\" she said.",
        "\"Oh, most definitely,\" James responded. \"Now, let's get going before you change your mind,\" he joked.\n\nThey met their driver downstairs \u2013 a routine they were becoming spoiled by \u2013 and he whisked them north into the 13th. Jasmine cuddled up next to James for the drive and he could smell her scent tangling his brain. \n\nThey arrived at the bistro in short order and entered the high-ceilinged premises. The Caresse group was assembled in a rear room reserved for their purposes. James and Jasmine immediately melded into the small crowd and became separated for a while. Wine was flowing and the mood was upbeat and celebratory. And although they were seated next to one another for dinner, they ended up talking to the others around them. The bistro was loud and bright and Jasmine found herself relishing in the moment \u2013 a successful business transaction complete and a night of pure pleasure \u2013 eating, drinking and dancing \u2013 before them.\n\nAt one point, as people moved about the table after dinner, Jasmine found herself sitting next to Sophie as James was turned elsewhere deep in conversation. Jasmine was, once again, transfixed by the beautiful blond who appeared to be turning all of her charms on without even trying. \n\n\"So, Jasmine. Will you and James be coming to the club with us after dinner? It's just down the street,\" she queried.\n\n\"Oh, yes. Most definitely. We wouldn't miss it,\" Jasmine replied. There was something provocatively sexy about Sophie's Eastern European accent. She was curious and asked where she was from.\n\n\"Well, I grew up in the Czech Republic \u2013 Prague, actually. But my parents moved us to Paris when I was in high school and we've all been in France ever since,\" she explained. \"Anyway, I can't wait to get out on the dance floor with you. It will be such fun,\" she said seductively as she gently touched Jasmine's bare arm. It sent a shiver up Jasmine's spine. \n\n\"So is it true that I hear you are going to visit Pierre and Nicole in St. Tropez?\" she inquired over a sip of wine.\n\n\"Yes, we are. Saturday night to Monday. It sounds like so much fun. Have you been there?\" Jasmine asked. Sophie smiled benignly before replying. \n\n\"Yes, several times.\"\n\n\"Ohhh,\" Jasmine responded. \"Tell me everything. Who did you go with? What's it like? What did you do? Details,\" she insisted, almost hopping in her seat. \n\nJasmine could see a lascivious grin cross Sophie's delicate features as she proceeded to respond.\n\n\"Well, as you can imagine, they are wonderful and gracious hosts. Their villa is gorgeous and sits on a bluff overlooking a beach and the sea and only a short drive into town. It's close to everything, but secluded and private at the same time.\"\n\nThe way Sophie said \"secluded and private\" made Jasmine smile deep inside. She watched Sophie brush her hair back and purse her beautiful full lips before continuing, the corners of her mouth creased in a conspiratorial smile.\n\n\"I've been there twice. The first time I visited alone,\" Sophie said, looking directly into Jasmine's eyes. \"It was part interview, part photo shoot and...part fun,\" she said after hesitating. \"I was going to school in Aix en Provence at the time and modeling on the side. Pierre came across some of my photos somewhere and contacted me. I went down one weekend to meet with them and it was...amazing,\" she said with glint of mischief in her eyes. \"As I said, they are gracious hosts, love food and wine. We sunbathed on the beach and poolside \u2013 they have a beautiful pool \u2013 and we went out to eat in St. Tropez, went dancing, and...just had a wonderful time. They brought a photographer in to do some photos and, by the end of the weekend, had offered me a job. I'm still living and going to school in Aix, but I come to Paris on a regular basis as they need me. It's been wonderful.\"\n\n\"Mmm. I can just imagine. Sounds incredible,\" Jasmine offered. \"What a great opportunity for you.\"\n\n\"Yes. They are great to work for and, of course, fun to hang out with as well. You'll have a great time, Jasmine. Believe me,\" she said with a knowing smile. \"Both you and James,\" she added without hesitation.\n\n\"Oh, I know. So you went back a second time?\"\n\n\"Yes. My boyfriend at the time and I went down a few months later. It was another weekend of work and play \u2013 business and pleasure. I did some modeling for some new pieces at the time and my boyfriend and I got to hang out with Pierre and Nicole. It was an amazing weekend \u2013 my boyfriend spoke about it for months afterwards. Still does, though we're not together anymore.\"\n\n\"Oh, my God. I can't wait,\" Jasmine said, clapping her hands in delight.\n\n\"You'll love it. You know, some Americans have a problem with the nudity here,\" Sophie continued. \"St. Tropez and the Med are not for everyone. But,\" Sophie said as she looked Jasmine up and down, \"I can't imagine you'll have any issues.\" \n\nJasmine smiled and responded. \"None whatsoever,\" she stated emphatically.\n\n\"Then you'll get right into the flow and have a great time,\" she said grinning. \"Let's just say you won't need many clothes while you're there.\" She gave Jasmine a knowing smile and stood up to mingle some more, hesitating to add a comment before she left. \n\n\"And, I guess since I'm sharing, I should mention one or two other things...just so you know,\" Sophie said in a very conspiratorial manner, bending over to talk softly into Jasmine's ear. \"And maybe I'm being presumptuous in mentioning this, but...\" Sophie hesitated and looked to Jasmine to see if she should continue.\n\n\"Yes. Tell me.\"\n\n\"Well, Pierre and Nicole love to, you know...watch. And, I think even more, they love to be watched, if you know what I mean. Just so you're aware,\" she said with a wicked grin. \"I probably shouldn't be sharing such intimate information. But you are going there for two nights, so...\" Her voice trailed off, before she added one parting comment. \"They are insatiable lovers, Jasmine. And if you like that sort of thing, you and James will have a most incredible time.\"\n\n\"Mmm. Sounds wonderful, Sophie. Thanks for sharing. That's good information to know.\"\n\n\"Have you been to Nice before?\" Sophie continued, sitting back down for a minute.\n\n\"No. James has and seems to have a pretty good line on what we might be doing there.\"\n\n\"Well, I am going to be visiting my brother in Nice on Saturday night, or his place, I should say. He's traveling and I told him I'd stop in for a night and care for his cat. If you need a guide about town, let me know. I'd love to show you the clubs. Or, you and James together. We could have fun,\" she said with another sly grin. \n\nJasmine felt herself getting caught up in a web of lust and desire. There were so many things to look forward to in the next few days.\n\n\"Oh, that would be wonderful, Sophie. I'm sure James would love having you along for the ride.\"\n\nThey both grinned at the innuendo and traded cell phone numbers. Sophie disappeared into the crowd. Dinner was winding down and folks were beginning to stir and make plans for heading to the club. Jasmine suddenly felt a warm hand on her shoulder and looked up to see Pierre's sparkling eyes smiling down at her.\n\n\"I hope you enjoyed dinner, Jasmine. Are you going to come dancing with us?\"\n\nJasmine could feel his gaze scanning the very visible upper slopes of her breasts. She arched her back slightly as she turned to answer, aware of his eyes scoping out the depth of her generous cleavage.\n\n\"Of course,\" she replied.\n\n\"Bon,\" Pierre replied. \"Let's walk together \u2013 it's only a block.\"\n\nJasmine could see James standing and talking to Nicole. Jasmine caught his eye and he smiled a silent assent. They had only known one another a short time, but they were already beginning to communicate with knowing glances and subtle looks. Pierre held out his elbow and Jasmine accepted.\n\n\"I wouldn't want you twisting your ankle in those incredible heels, Jasmine,\" Pierre said with a kind smile. She could get lost in those eyes, she thought to herself. They headed toward the exit followed by James and Nicole; both engaged in an intense conversation. Pierre continued as they slowly sauntered down the Rue Simone.\n\n\"Jasmine, I wanted to commend you again for stepping in and doing such an incredible job in Paul's place. Your photos are outstanding and you have done our lingerie proud.\"\n\nShe loved holding onto his bicep and getting subtle whiffs of his musky scent. They were just walking on the street, but it somehow felt dangerously provocative and exciting. \n\n\"You have a beautiful body, but your inner beauty shows through in each and every photograph. You're a natural and, while I know you have a job, if you ever want to move to Paris and model and work for us, you are more than welcome. I am not trying to steal you from James, but you should know the offer is there at any time.\"\n\nJasmine smiled and, for a brief moment, got lost in Pierre's steely blue gaze. She righted herself and responded with a warm smile.\n\n\"I'll remember that, Pierre, you can be sure. But I think I'm a little too old to be a model anymore. Now let's go dance,\" she said as she grabbed his hand and pulled him into the club; James and Nicole close behind. They left the Parisian street scene far behind as they descended a long circular staircase to a thumping rhythm that drew them down into the bowels of the building. Jasmine could feel the bass surging up into her body as they arrived at the lower level and merged into a sea of dancing bodies.\n\nJames, following close behind, had admired Jasmine's ass along the entire walk from the restaurant to the club; her cheeks clearly defined and outlined in her tights. Nicole had even noticed him watching his date and commented.\n\n\"She's quite special, James. You have a good one there. We can't wait for the two of you to come to St. Tropez. But, until then, let's dance,\" she said with enthusiasm.\n\nThe two couples joined others from Caresse already assembled in a corner of the club furnished with large comfortable leather couches, low coffee tables and soft sexy lighting. James and Jasmine each grabbed a glass of wine and surveyed the dance floor \u2013 a sizzling dance scene that was still early and only going to get hotter as the evening wore on. After a few sips, James felt Jasmine grab his hand and lead him into the mass of writhing bodies.\n\nBoth James and Jasmine loved to dance as they felt themselves swept onto the dance floor by the pounding bass and provocative rhythms. The sound seemed to be coming from everywhere. Jasmine smiled lasciviously as her hands wove above her head and her exquisite body began to gyrate to the pounding beat. They were pressed in on all sides by hot young bodies writhing to the steady tempo, yet they we were in their own orbit, dancing to the EDM that resonated in the cavernous cellar space. \n\nThey danced and swirled; gliding and thrusting to the pulsing sound of synths and kick drums. Jasmine turned and arched her back, offering her perfectly sculpted ass to James as she smiled over her shoulder. James pressed his hips up against her, as he nestled between her cheeks. They rode and danced, pumping their bodies against one another to the pounding rhythm. Everyone else was doing the same, so their public display of carnal potential just blended into the throbbing mass of swirling swaying bodies. \n\nJames wrapped his arm around Jasmine's tummy and pulled her tight ass against him, then whispered (or more like shouted) into her ear. \"This is going to be a very good night, Jasmine.\" She acknowledged by pressing her sweet butt against the thick rise in his slacks. Her assenting smile told him everything he needed to know. \n\nThe DJ kicked it into high gear with a Deadmau5 tune and suddenly the dance floor was awash in a throbbing mass of humanity gyrating to the beat. James and Jasmine were packed in tight and moved as one with the crowd, their bodies pressed together and unified with the whole. James felt like he was immersed in a cocoon of sexual warmth and erotic promise.\n\nSuddenly Pierre and Nicole appeared next to them on the dance floor, smiling and lost in their own musical trance. Pierre moved well, his white shirt partially unbuttoned and his face lost in a blissful moment. Nicole danced and swayed with a feline grace and sexual energy that was palpable \u2013 her body a visual expression of the sexy throbbing music that permeated their space. \n\nThey could all feel the drinks they'd had at dinner beginning to drown out their inhibitions as the music loosened their bodies and buffeted their libidos. And though they may have felt as one with the crowd, the packed floor was so full of dancers focused on themselves or their partners that no one was noticing James and Jasmine as their bodies pressed together and moved in unison. \n\nJasmine again raised her arms above her head, eyes closed, and swayed seductively as she got absorbed into the rhythm and sucked into the pulsing roar of the music. Her body moved in time and James watched, entranced, as she opened her eyes to find him, moving closer to him; their hips grinding to the tempo and finding a common bond.\n\nJames stepped back to survey his beautiful companion, now lost in a rhythmic moment as the bass rumbled and the kick drum punched their guts. They were weaving and swaying, not quite touching, when James felt her slender hand reach out and lightly graze the generous bulge in his slacks. She ran her manicured nails along the length and gave it a little squeeze. James reacted by reaching out to touch her body as well; lightly fondling those perfect breasts he'd admired since the first moment they met. Closer and closer they moved, until James reached behind and cupped her smoothly clad bottom and pulled her towards him; leaning down low to press his gathering hardness against the steady rhythmic hump of her hips. The feel of her soft ripe bottom in the palm of each hand drove him wild with desire. \n\nHe brushed her long brunette tresses to the side as they slowed their dance and he placed his lips on her long lean neck. James couldn't see, but could sense Pierre and Nicole, lost in their own rhythm, just inches away. Jasmine bent her head away to allow him unfettered access as his lips moved up her long smooth neck to her ear. Her exotic scent was scrambling his brain. Even above the cacophonous sound of the music she could hear and feel his breath in her ear. She could sense his heat and desire and his growing need for her. James again cupped her cheeks and pulled her tight form against him; their bodies still moving to the groove. He kneaded her swaying derriere as their hips ground to a song all of their own. They were all but oblivious now to anyone and anything around them; lost in their own web of arousal \n\nJasmine suddenly turned and twirled around quickly as James pulled her back against his writhing hips. She arched her back and looked over her shoulder with a devilish grin, offering her sweet ass to James; begging him with her eyes to press his hardening staff against the crease of her gyrating bottom. They were certainly not the only ones on the floor who were doing the dance of pure lust and need. James grabbed her waist and moved his hips against hers in a steady beat to the incessant groove of the pumping electronic music...music made for sex... music made for fucking. \n\nAs the next song dropped and the beat kicked in, James felt Jasmine slide from his gasp \u2013 replaced by the whirling form of Nicole. Pierre slid next to Jasmine and suddenly, naturally, all four of them were dancing and shaking to the thrum of punchy synths and bottomless bass. Their bodies moved suggestively and James felt his mind surfing on the rhythmic pulse of sound. More Caresse people surrounded them and Sophie was suddenly in the mix, moving her slender young body to the tempo of lust that permeated the night. \n\nThey were having a great time, getting lost in the flow of the evening. But suddenly James felt Jasmine grab his hand and lead him to the edge of the floor.\n\n\"Are you having a good time?\" she queried.\n\n\"Yes, but...\" \n\n\"We should go \u2013 shouldn't we?\" Jasmine stated matter-of-factly. James grimaced, but smiled his assent.\n\n\"Actually, yes, I'm sorry to say. We have an early train and still have to pack. We should go,\" he acknowledged, \"while we still can.\"\n\nJasmine smiled and wrapped her fingers between his. \n\n\"I agree. I'm ready when you are. Let's say our goodbyes and take our leave.\"\n\nThey waved to Pierre and Nicole who eased off the dance floor and peeled off to a corner to see James and Jasmine off for the night. They compared notes for Saturday and made sure they were all on the same page. \n\n\"James, Henri, your chauffeur is waiting outside to take you and Jasmine back to your hotel. He'll take you to the train station in the morning as well. We'll look forward to seeing you in St. Tropez on Saturday. Thanks for coming \u2013 and dancing,\" he added with a smile. \"It was fun.\"\n\n\"It was, Pierre. And thank you for your wonderful hospitality \u2013 especially having a driver at our beck and call. We're spoiled,\" he joked. \"And, yes, we'll see you Saturday afternoon. Thanks again.\"\n\nWith goodbyes said, James and Jasmine ascended to the street level, found Henri on the other side of the street and climbed inside the sedan, greeting Henri as they settled into the back seat. \n\nThey had barely pulled away from the curb when James felt a hand on his thigh as Jasmine curled up closely to him.\n\n\"Oh, my,\" was all he could muster.\n\n\"Mmm, I was just getting warmed up on the dance floor, James. What am I ever going to do with all this pent up energy,\" she whispered, as her hand cupped the heavy package in James' trousers. Jasmine leaned into his ear. \"Dancing turns me on,\" she stated rather directly as she immediately began to stroke James to hardness. It didn't take much; James was pretty turned on himself. \n\nJasmine heard James say something to the driver in French and the two men laughed. Jasmine looked at James expectantly, wondering what he'd said.\n\n\"I told him to take the long way home,\" he grinned.\n\nWith that settled James felt his belt buckle being disassembled and a wet warm mouth pleading in his ear.\n\n\"I need your cock in my mouth,\" Jasmine implored. She rearranged herself on the back seat and proceeded to disengage James's gathering erection from the confines of his slacks. Within moments she held him, her slender hands wrapped around his girth, as she gave his meaty shaft a few gentle strokes. \n\nWith a wan smile she gazed up at James. \"I didn't have dessert,\" she exclaimed before descending over his bulbous head with an open hungry mouth. She, unexpectedly, impaled her throat on his cock, stopping at a gagging point and then receding to purse her lips and rub his helmeted head all over her mouth and face. James moaned loudly and knew Henri would be party to whatever action happened in his back seat. But James figured he'd been a driver in Paris for many years and this wouldn't be the first blowjob he'd ever been witness to.\n\nJasmine appeared to be totally unselfconscious about giving head in front of a third party. Between the alcohol, dancing and sexual vibe of the evening, she had totally thrown caution to the wind.\n\nJames felt her other hand delve down between his legs to cup his balls as her tongue danced over his rigid rod and flayed his penis with kisses and licks and the gentlest sucks possible. She was totally into this moment of wanton lust and James just looked down in amazement at the gorgeous tresses of luxurious hair that fell over his lap. Her mouth felt like a silken glove enveloping his throbbing manhood as she kept moving \u2013 up and down. The night had turned him on as well, so he knew he'd be short-lived at the rate with which she was sucking him. \n\nShe pulled back, saliva spanning between the tip of his cock and her luscious lips as she stroked him quickly and expertly for a few seconds before once again dunking his dick back into her open mouth. She whimpered and moaned as she sucked, and while Henri may not have been able to see much in the darkened car, there was no mistaking the erotic sounds of a desperate cock-sucking emanating from the back seat. ",
        "James rested his hand on Jasmine's head and loved feeling her bob up and down, burying his dick in her willing mouth. She varied speed and depth, keeping him guessing and surprising him every so often with a deep gagging suck that felt like she was taking almost his entire length. He moaned loudly, as did she, and pretty soon she was cupping his tightened ball sack as she sucked with abandon, knowing that the lifting of his hips and his staccato breathing and moaning was a sign of an impending explosion. \n\n\"Oh, God, Jasmine. I'm gonna cum!\" he screamed, as she tightened her grip and didn't let him escape. She wanted to suck up and swallow every drop of his cum as James felt his cock spasm with one spurt after another; spurts that would have flown all over the car had the tip of his cock not been buried in deep in Jasmine's sweet warm mouth. He heard her choke slightly, knowing he had flooded her throat with gobs of creamy heat.\n\nHe panted and groaned as he collapsed back into the cushy leather of the car, feeling Jasmine continue to suck on his throttled cock, her lips and tongue licking up every drop of his spent seed. \n\n\"Jasmine, that was amazing,\" he exclaimed.\n\nJasmine didn't reply. She just pulled up from his lap and leaned in for a kiss. She was not being shy this evening as she French kissed him in the country where it had presumably been invented. Her mouth opened and her tongue swirled in his mouth as he tasted his own cum coating her mouth. James wasn't shy about tasting his own semen, and he could tell that Jasmine was completely turned on by sharing his load with him. There was something so intimate about swishing ejaculate between their mouths and he knew most guys shied away from this intimacy. He, however, did not. He loved it. \n\nSuddenly James felt Jasmine start to put him away, zipping up his fly and repositioning his belt. He reached down to touch her, suggesting he might want to return the favor in some way. But Jasmine rebuffed him.\n\n\"No, no, James. This was just for you. We're almost back at the hotel and we'll have plenty of time to play tomorrow. Just lay back and enjoy,\" she explained. She leaned in close to his ear. \"I love sucking your cock, James. You taste so good,\" she giggled. James had never heard sweeter words or in a sexier voice. He wrapped his arm around her and pulled her close as they turned the corner onto the street where their hotel was. \n\n\"Merci beaucoup, Henri. A demain,\" James said as they disembarked. Henri smiled and waved. It was all in a day's work for someone like him \u2013 driving people through the City of Lights. \n\nJames and Jasmine went to their rooms to pack \u2013 and prepare for leaving Paris and heading to the South of France early the next morning. And more adventures."
    ],
    "authorname": "gapster7",
    "tags": [
        "older/younger",
        "boss/intern",
        "french",
        "lingerie",
        "blowjob",
        "dancing",
        "paris"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/james-and-jasmine-ch-03"
}