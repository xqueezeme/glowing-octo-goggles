{
    "title": "Zeb's First Time Experiences Ch. 02",
    "pages": [
        "Just a recap to remind you of what happened in chapter one ... I'm Zeb a nineteen year old architectural student. I have a girlfriend Ginny (Ginz) who is studying in another city. Ginny is both beautiful and smart ... she also lost her legs years ago in a car accident and uses a wheelchair. I live alone but my life is far from dull. So far my first time sexual experiences have included a first blow job, first sex with Ginny, sex with another girl (with Ginny's approval). I've also had a threesome and enjoyed anal. So let's see what else I have to share in this chapter of my life.\n\nGinny had left to go back to college almost a week ago and I was curious as to how the seduction of her roommate, an Australian girl called Emma was progressing. Finally she called on Saturday evening and I could tell by the sound of her voice that something had happened.\n\n\"We did it, last night!\" Ginny exclaimed!\n\n\"I take it things went well?\"\n\n\"Oh you know just the run of the mill multi orgasmic experience ... nothing out of the ordinary,\" she replied trying to sound as though it was nothing special ... but failing miserably.\n\n\"Way to go Ginz baby!\"\n\n\"I know!\" The elation was back in her voice. \"It was so much better than I thought. All the tools of seduction Issy used on me I used on Emma and she responded just like I'd hoped. It was unbelievable!\"\n\nGinny spent the next hour talking non-stop about her experience and I was so turned on by her intimate narrative that I masturbated the whole time. I could tell that Ginny had a hand down her pants as well ... her speech highlighted at times by small moans of pleasure!\n\nI felt no jealousy in regard to her liaison with Emma, just as Ginny hadn't when I told her about Issy. Just knowing she was enjoying her sexual freedom made me happy and excited for her. We had already agreed that we were both free to explore new sexual experiences while apart\n\n.\n\nThe next day I meet Issy for lunch ... she'd also received a call to thank her for all the practical advice she'd given. We both laughed at how ecstatic Ginny had sounded at her newfound powers of seduction.\n\nFor the next two months life carried on as usual. Issy spent the night once a week and it always resulted in our sweat covered bodies gasping for air after a torrid session between the sheets. It never ceased to amaze me how Issy always introduced something new each time to spice things up ... sometimes it was a new position or maybe a toy from her collection. On one occasion she turned up wearing a strap-on dildo under her clothes. It wasn't until we were lying on the bed kissing that I felt a bump between us ... I knew it wasn't me as I was still soft and just starting to grow. Issy smiled as she saw the look of confusion on my face.\n\n\"Time for me to introduce you to my new friend,\" she smirked. \"I call him Rod!\"\n\n\"And just exactly what do you think you're going to do with your friend Rod?\" I questioned in reply.\n\n\"Well he's all new and shiny and has never been up a virgin ass before so maybe today is going to be his lucky day.\" Issy pushed her hips into me so I could feel more of her rigid new friend.\n\n\"I don't know about that.\" My voice sounded a little unsure\n\n.\n\n\"Come on Zeb baby, you've had my ass numerous times. I think you need to reciprocate and feel the pleasure it brings.\" Her smile widened as she continued to rub against my groin.\n\n\"Pleasure to you or me?\" I responded.\n\n\"Both baby,\" she purred in my ear seductively. \"I'll be gentle with you ... I promise.\"\n\nIssy stripped off my shorts, t-shirt and underwear. She then stood and did a slow strip tease finally revealing the five inch black dildo attached to her waist by thin leather straps. She played with the false cock, licking her hand and pretending to wank while moving her hips alluringly.\n\nI have to admit by the time she approached the bed my cock was standing to full attention and I was ready for playtime!\n\nIssy covered the dildo with lube that I kept in the bedside drawer and then used her fingers to grease up my butt hole. I was on my back with my legs up over her shoulders and she kept eye contact with me the whole time ... a sly smile on her lips.\n\nOn a few occasions in the past I'd had a finger up my ass both by Issy and Ginny. But this was a whole different ballgame.\n\n\"Ready for Mr Rod?\"\n\n\"Fuck! Lets do this!\" I uttered and smiled.\n\nIssy slowly pushed against my lubed hole and the dildo popped inside. To my surprise it didn't feel too bad. Slowly the whole thing disappeared up my butt and after a few moments of discomfort it actually felt okay. Issy grabbed my cock and started to wank me as she began to fuck my ass. The sensation of movement on my prostate was strange but exciting and before long I was asking her to go faster with both hand and dildo.\n\n\"Fuck! I'm going to cum!\" I announced as my hands gripped the sheets and my hips rose up off the bed.\n\nI then had one of the most sensational orgasms I'd ever had, the feeling was amazing. Rope after rope of jizz shot from my cock in unison with Issy's stokes against my prostate. I don't think I'd spurted more than maybe five times before but at least eight jets of my sticky white liquid erupted out landing on Issy's stomach and boobs\n\n.\n\nThe surprising thing was I stayed rock hard afterwards and was able to satisfy Issy over the next half hour. I even strapped the dildo onto myself and double penetrated her. The dildo was definitely something we would both enjoy again!\n\nI still had a lot of time on my hands during the week, I was cruising through the architectural course and had also finished the decoration of my new home. My prospective boss Doug wasn't really allowed to give me work in the first year of my course ... but he did come up with a solution to keep me occupied. He knew I liked photography, so I was presented with a top of the line digital camera and told to spend time photographing architectural styles around town. 'Look, appreciate and learn' were Doug's words of encouragement as he sent me out on a mission of discovery. And discover I did ... but it wasn't quite what Doug or even I could have ever imagined!\n\nI was down in the old town dock area early one morning snapping photos of porticos and fa\u00e7ade's from places built in the late eighteen hundreds. Mostly old bank and merchant buildings that had some stunning features and workmanship ... styles that were literally forgotten in today's modern glass and concrete structures. One fa\u00e7ade in particular fascinated me ... it was a smaller building only about twenty feet wide sandwiched between two larger buildings of the same era. The frontage was a pale yellow stone block with small weathered green double doors in front flanked by tall thin windows. The three story fa\u00e7ade looked like it hadn't been updated since it's conception. The construction date of 1835 was engraved into the stone above the door, as was the original tenants occupation ... 'J. P. Small - Cobblers'. I suppose not a lot of room was needed for shoe making and repairs in those days. The second floor had an old hoist above wooden shutters that were once used for the access of supplies, the old-rusted wheel still hanging under the gantry. The shutters were now permanently open and revealed a large casement window. The third floor had a center window with an ornate wrought iron juliet balcony in front, probably fronting the old cobblers accommodations.\n\nThe building was now a small caf\u00e9. The only signage was a small board outside on the pavement proclaiming 'Cobblers Caf\u00e9 - best coffee in town', written in a cursive old English style font. The sign must have had some truth to it as I had to wait numerous times for people to enter and exit between photos.\n\nI was surprised when during a close up I spotted someone staring back at me from the third story window. I waved at the person but didn't receive a reciprocating gesture ... in fact I got a rather stern look back and then they flicked me the bird! I was a bit stunned and my overactive imagination flew to the conclusion that it was perhaps someone who was there for a forbidden liaison and they'd taken me for a private eye hired by their better half ... well, maybe not! More likely simply someone who didn't appreciate being in my photo.\n\nI'd spent an hour outside taking pictures and making notes before deciding I was now obliged to at least buy a coffee to repay the owner for the use of their building in my research.\n\nI entered to a rather busy caf\u00e9. Being so small there was only five tables to sit at and they were all occupied by a mixture of cliental ... from business suits to dock workers. Old pictures of cobblers at work adorned the walls and wooden crates with old shoes and shoe making paraphernalia were dotted around in little nooks and crannies, the smell of fresh coffee beans hung in the air ... it was a nice cosy set up.\n\nI waited in line and ordered a flat white, the barista told me that there were tables upstairs and they'd bring my drink up to me.\n\nI climbed the narrow wooden staircase and found myself in a large open room that covered the whole second floor. Rows of old shoes hung from the walls and I felt like I'd been transported back to a 1920's shoe shop. I was the only person in the area and so I took a seat at the table in front of the open window. My coffee arrived a few minutes later and it lived up to the advertised signage ... best I'd tasted in town. While enjoying my java I decided to take a look at some of the images I had captured. I was abruptly interrupted.\n\n\"We don't care what they offer, we're not selling. So you can fuck off back to your ivory tower and tell them that!\"\n\nI looked up shocked at the angry tirade, the girl had thrown at me . \"I think you've got me confused with someone else!\" I replied.\n\n\"Fuck off! I saw you. I know you're planning what you'll do with the site ... taking pictures, making notes. We know there may be some ... what do you call it 'structural integrity' problems ... but we're going to fix them ourselves so you can't tear it down. So you can just piss off!\"\n\nThe fiery young girl was wearing a loose fitting smock with paint all over it, and a very worn Yankee's baseball cap. She stood with her hands on her hips ... and if looks could kill I would be well and truly dead!\n\n\"I actually think this building probably has reasonably good structural integrity and why the hell would anyone want to tear it down?\" I replied calmly trying to diffuse the situation\n\n\"What! Who the fuck are you?\"\n\n\"Who the fuck are you?\" I retorted.\n\n\"I'm Millie Drake and I own this place ... well my sister does. Anyway aren't you working for that bastard McMillian who wants to buy the whole block?\"\n\n\"Case of mistaken identity I'm afraid. Names Zeb and I'm an architectural student who happens to think this building is magnificent.\"\n\n\"Oh shit! Sorry, I just thought ... fuck, I'm an idiot. I apologize.\"\n\n\"I'd be upset if I knew someone wanted to tear this place down too ... and apology accepted.\" I smiled.\n\n\"Look let me get you another coffee to make it up to you.\"\n\n\"Only if you join me Millie and tell me why you think this building might be structurally unsound? Maybe I can help.\"\n\n\"Ah, okay.\" Millie seemed a little taken aback by my offer. \"I'll be back in a minute.\"\n\nAs she turned to walk away I noticed her long blonde hair pony tailed out the back of the cap, the last few inches were dyed a light blue color. \n\nWhile Millie was away I took a quick look around the room at the beamed ceiling structure and the condition of the brick walls. There did seem to be some cracks and things but nothing was too out of whack.\n\nMillie returned with two cups of fresh coffee ... and a totally different look. Gone was the oversized paint stained smock and the cap. Her new appearance was stunning. Khaki shorts and a tight fitting black tank top revealed long tanned limbs and a nice, toned body, her waist length hair was loosely hanging around her shoulders. I couldn't help but stare.\n\n\"What! Have I got paint on my face?\" Millie asked in response to my fixated look.\n\n\"Ah, n ..no.\" I stammered taking the cup from her outstretched hand. \"You just look quite different from before.\"\n\n\"What you prefer my tit's in a tight top rather than my painting gear?\" She asked with an impish grin.\n\nI blushed at being caught staring.\n\n\"Hey just messing with you.\" Millie continued smiling as she sat opposite. \"Cute that you blushed though.\" She giggled and sipped her coffee.\n\nNow I really reddened up and could feel my cheeks start to burn.\n\n\"Sorry, I can be a little inappropriate at times. Warped sense of humor,\" she said seeing my uncomfortable situation.\n\nI smiled back and hoped my face was returning to normal color. There was a long pause as we both sipped from our cups.\n\n\"So you said you might be able to help. How?\" She broke the awkward silence.\n\n\"Well first off, who and why does someone want to pull this place down?\" I asked.\n\nMillie related the story of her sister owning the building and the pressure that had been put on her to sell due to a consortium of investors wanting to renovate the whole street and install upscale apartments for cash rich city dwellers. The historic society had waded in and claimed that the buildings were of heritage value. The only way that they could now be renovated was if the fa\u00e7ades were kept intact but the rest of the building could be gutted and rebuilt. The developers were now trying to prove that the structures behind were old and unsafe. They were hoping that most of the current owners couldn't afford to do remedial work so would have to sell out. Millie's sister Grace had received an estimate of seventy-five thousand dollars to fix things plus engineering and design costs but was struggling to find the money. The developers were trying to find more faults to make it even harder for her to afford the repairs.\n\n\"How much does she have? If you don't mind me asking?\" I queried.\n\n\"Grace has ten thousand cash, can get a donation from the historic society for another thirty thousand, plus the bank will lend her a maximum of twenty grand. So we're fifteen short, and that's only if there is no more hidden costs. I don't even want to think about what an engineer and a designer would cost on top of that.\n\n\"Fifteen grand isn't too much more to raise and I might be able to help out with the other areas.\"\n\n\"We only have two weeks to confirm with the council that we've got it all covered!\" Millie sighed. \"To top it all off Grace has been ordered to bed rest for the remainder of her pregnancy due to high blood pressure. She's not able to help at all and I'm in charge of the sinking ship.\"\n\n\"I'm sure you could find someone to borrow the money from.\" I encouraged.\n\n\"Grace won't borrow another cent and she gets really upset when I even mention it. It took a lot of persuasion for her to even accept the money from the Historic Society guys. I think she's given up on her dream of keeping the place ... too much stress and she can't handle it at the moment.\"\n\n\"Okay, well like I said I think I can help with the design and engineering.\"\n\n\"Wow. Thanks for the offer but I don't really know you. Why would you help?\"\n\n\"Call me a sucker for a tight black top.\" I quipped.\n\nIt was now Millie's turn to blush. I smiled.\n\n\"Actually I can talk to my boss about it. He would hate to see these buildings developed the wrong way, he's got an architectural firm and loves this part of town. I'm sure he would want to know what's happening here and I think he'd offer help.\"\n\n\"I don't know what to say. Thanks. But I still have to get fifteen grand, and it can't be gifted or borrowed.\"\n\n\"Any ideas?\"\n\n\"Well I have a meeting in half an hour with a couple who want their wedding day recorded and I will make six grand from that.\"\n\n\"Wow, six grand, you must be good. So what, you're a caf\u00e9 boss and a painter, plus moonlighting as a wedding photographer in the weekends?\n\n\"Actually I have a small production company. Just one employee at the moment, me! I work from upstairs. As for the painting I'm doing the walls upstairs to make it brighter. I normally don't run the caf\u00e9, that's Grace's job I'm just helping in the crisis. \n\n\"Okay. Well at least you've got six grand toward that crisis ... only a bit more to go.\"\n\n\"My, my aren't we Mr positive. It's actually nine grand to go ... a tad more than a bit!\" Her tone was slightly cynical.\n\n\"Sorry, I didn't mean to be flippant.\" I apologized.\n\n\"No, I'm sorry. You're only trying to help. I could actually be making ten grand from the wedding day if the photographer I use hadn't up and left to work for a newspaper up north.\" Millie lamented.\n\n\"Ten grand. What just for taping and photographing a wedding ceremony and reception?\"\n\n\"Actually the fee is higher because they also want the wedding night taped!\"\n\n\"You are joking! You mean they want you to tape them bonking?\" I shook my head in amazement.\n\n\"Bonking! Who the hell uses that word anymore.\" Millie laughed. \"But yes, they want the bonking as well.\"\n\n\"That's kind of weird don't you think ... kinky?\"\n\n\"They seem a nice couple. He's a merchant banker and she's a high school teacher. They're older, in their forties and it's the first marriage for both of them. I guess they are a bit kinky wanting that part of the day taped but hell it's added a lot to my normal cost.\"\n\n\"What you just set up the camera on a tripod or do you stay and move around doing close ups watching them do it all night?\" I was intrigued at the thought.\n\n\"That's what we are going to talk about at the meeting. But I have a feeling they might want to cancel now I don't have someone to help with the photography at the ceremony and reception. Unless you want to help out, how good are you with that camera?\"\n\n\"Not that good. I mean I've always had an eye for a good picture but posing people for family wedding shots, I don't think so.\"\n\n\"Let's see.\" Millie took my camera from the table and began scrolling through the pics I had taken over the last week.\n\n\"Not great eh.\" I shrugged as she continued looking.\n\n\"Some of these are amazing!\" She declared talking more to herself than me. \"These shots of the girl with the tattoos are really good.\"\n\nI had forgotten I still had shots of Issy on there. I quickly tried to jog my memory regarding how revealing they were ... she was nude in some but I don't think any were what you'd class as pornographic.\n\n\"That's a friend ... her body is ... quite unique.\"\n\n\"Shit yeah. I'd love to know who her tat artist is, that's really good work.\" Millie looked up at me. \"I've got a few tats myself ... they're kind'a hidden away,\" she added with a smile.\n\nI smiled back and sipped my coffee while she finished with the camera.\n\n\"You're definitely good enough for the wedding and reception pics and I could do the family posing stuff. It would just mean snapping as many pics as you can and then I'll edit them later. So what do you say? I could pay for your time.\"\n\nMillie sat staring at me waiting for my answer. \n\n\"Are you serious?\"\n\n\"Yep. I mean you have an eye for it, I can tell. So are you in or out?\"\n\n\"You do realize you only meet me less than fifteen minutes ago?\"\n\n\"What can I say, I'm a good judge of character ... and I'm desperate.\"\n\nI deliberated for a few moments as she stared at me with pleading eyes. \"Okay, what the hell, I'm in. But you don't need to pay me, put all the money into the building.\"\n\n\"Excellent!\" Millie held out her hand to shake. I smiled and shrugged before extending my own hand.\n\nWe then raised our cups and toasted the deal.\n\nThe kinky couple arrived ten minutes later and I was surprised to find they were reasonably normal. David was about six foot, slightly greying hair and looked fit and trim in a grey work suit. Kelly was a real looker ... strawberry blonde hair, pretty face with deep emerald green eyes, she was a little overweight but her curves looked good in a thigh high blue dress. For a couple in their mid-forties they looked pretty good.",
        "I sat at a nearby table as they talked with Millie. They went over some details of what they wanted , from pre-wedding to reception. When it came time to discuss the night activities they both just ploughed on as though it was quite normal. They did throw a bit of a curve ball when it was revealed they wanted at least two cameras in the bedroom, for close ups.\n\nMillie looked over at me. \"You up for the second video camera?\"\n\n\"Yeah of course. But it will cost a thousand more.\" I replied trying to sound confident. \"More equipment, editing and labor.\" I added with a professional tone.\n\n\"No problem.\" David replied without hesitation.\n\nAn hour later Millie and I sat at the window table, me sipping my third coffee of the day.\n\n\"I can't believe you had the balls to ask for another thousand bucks.\" Millie shook her head in disbelief.\n\n\"Hey, my voyeur skills don't come cheap.\" I grinned. \"And it means you now only have to find a measly four grand more.\"\n\n\"I must admit I am feeling a little more confident about things. Thanks.\"\n\n\"No problem. Now how about I help you with that painting upstairs, I'm quite good at that sort of thing.\"\n\n\"Fuck, where did you come from, and can I keep you!\" Millie laughed.\n\nWe spent the rest of the day chatting and painting walls. I found out the Millie was only 21 and had started her little video production business only six months ago. Her Dad had been a pioneer in the area of music videos and Millie had worked with him for years during vacation. He'd had a heart attack two years ago and hadn't recovered well. Unable to work he had given all his equipment to Millie. She had worked for her sister since leaving school and began to do event and wedding videos in the weekends, finally deciding to make it a full time career. She now lived and worked out of the open plan studio we were painting.\n\nEvery day for the rest of the week I called into the caf\u00e9 after classes to discuss more about what is required of a pretend professional wedding photographer. I found Millie to be great company and we developed a good friendship. Early on we established that it was just going to be just friends ... I already had both Ginz and Issy in my life and Millie said she wasn't looking for any physical attachment at the moment.\n\nI told both Ginny and Issy about my upcoming adventure and they both reacted the same way ... they laughed. I must admit my pride took a little bit of a dive at their reaction but I could also see the funny side of things ... I had no experience in either wedding or porno photography. But they could have at least had a little faith in my abilities. When I looked a little miffed at her reaction Issy gave me a pity fuck to raise my spirits ... her strip tease beforehand raised more than just my spirits and I put the that raised item to good use in all her wet and warm places!\n\nFinally Saturday came and I dressed in black pants and a black shirt, so I would blend into the background during the day. I drove over to the caf\u00e9 at 10.00am and helped Millie load up the video gear. We drove an hour north of the city to a private estate where the nuptials were going to take place.\n\nDavid meet us at the venue and showed us the outdoor setup for the ceremony and the indoor ballroom where the reception and dance would take place. I let Millie take the lead and she walked me through where I would get the best shots at each venue. We then went off to take some pre-wedding shots of Kelly and her bridesmaids in one of the large suites on the second floor.\n\nI felt a bit like a fish out of water, snapping pics of half dressed women and girls rushing around like there was no tomorrow. Millie did little interviews with each of the bridesmaids and finally Kelly. I shuffled around the edges getting by bearings and confidence. Just as I thought things were pretty much done ... they weren't!\n\n\"Okay ladies, knickers off!\" Kelly shouted to the now dressed ensemble.\n\n\"You heard the her.\" Vicky, the maid of honor said looking at the others.\n\n\"I thought you were joking about that Aunt Kelly.\" One of the younger girls protested.\n\n\"Nope. It was done at Vicky, Margo and Sally's weddings, and I'm not going to break the tradition.\" Kelly laughed back. \"It's our good luck charm right ladies?\" She added looking at the three older women.\n\n\"You bet it is.\" Vicky agreed already bending down to remove her panties from her ankles.\n\nThe others all followed suit, giggling and laughing as they their undergarments formed a pile on the floor.\n\nMillie and I just smiled at each other and shrugged.\n\nSo now there were six panty-less women in the room. Standing staring at each other smiling.\n\n\"Photo!\" Vicky said with a gleeful shriek.\n\n\"You up for this young man.\" Margo asked me with a smirk.\n\n\"Whenever you're ready ladies.\" I replied not really knowing what was going to happen.\n\nThe six women took a few minutes lining up against the wall and then Vicky counted to three before they all lifted their dresses up to reveal six very naked genitalia. I stood wide eyed in shock for a few seconds before gathering my composure. \n\nI was amazed at the different looks they bared. Kelly had a lush patch of strawberry blonde curls sitting atop her shaven pussy, the curtains matched the drapes perfectly in her case. Vicky was completely bare and her labia hung down in two meaty strips. Margo the oldest women of the group had a full bush of dark hair. Sally, Kelly's younger sister sported a classic landing strip of a light brown colour. The other two girls where younger and both were flushed from either excitement or embarrassment. Karen was Vicky's daughter and must have been in her late teens, her pubes were trimmed for a bikini but still unshaven lower down. The last of the six was Lara, Margo's daughter, she had the pussy of the day ... three horizontal strips of dyed hair, each strip dyed a different color, blue, red and green.. Below that she was clean shaven with a gold clit ring finishing the ensemble.\n\n\"Okay, smile.\" I said before snapping off a number of shots.\n\nThey all smiled and giggled as I snapped away, posing in various positions. When I was done they all dropped their dresses again and carried on as though it had been a totally normal exercise. I did notice Lara took a little longer to lower her dress and she eyeballed me and pouted her lips in a kiss before joining the others.\n\nNone of the nickers were put back on so I guess it was going to be a commando wedding party from the female side.\n\nMillie and I left them to it and headed to where David and his groomsmen were waiting.\n\n\"If you want to fuck Lara then make sure it's after the speeches and the cutting of the cake and don't take too long we'll have to set up for the night shoot.\" Millie said and winked at me.\n\n\"What makes you think I'd get to fuck Lara?\" I was shocked by her statement.\n\n\"Come on didn't you see the way she was looking at you the whole time we were in there, and then there was the kiss before she covered her pussy. A very interesting and sexy looking pussy I must admit. That clit ring was really nice ... better than my one.\" \n\n\"You have a pierced clit?\" I looked at Millie with raised eyebrows.\n\n\"Yeah, and nipple and belly. But don't change the subject. That Lara has got the 'one night stand' hots for you Zeb baby.\" Millie blew a kiss to mimic Lara.\n\n\"You're full of it.\" I retorted.\n\n\"Good grief sometimes guys can be so dumb when it comes to reading woman. I bet you free coffee for a month that she will try to fuck you before the night is out!\"\n\n\"Free coffee! It's a bet.\" I said enthusiastically.\n\n\"Not so fast. If you lose you get to paint my bathroom.\"\n\n\"I would probably have painted it anyway. So deal!\"\n\n\"I'll pick out the paint tomorrow.\" Millie laughed as she knocked on David's door.\n\nI took photos of the groom and groomsmen and Millie did her interview thing before we headed back to cover the girls walk to the ceremony.\n\nI kept an eye on Lara as we walked and caught her looking at me more than once. Millie noticed and gave me a nudge.\n\n\"What do you think of a blue feature wall next to the shower.\" She teased.\n\nThe ceremony went off without a hitch and I got some really good shots while staying out of Millie's video frame. I was quite proud of myself. The reception was easier and I had more confidence in a less formal environment. By the end of the speeches I had taken at least 400 pics, plenty for Millie to edit down.\n\nI hadn't seen much of Lara during the night except to get some shots of the head table. I was feeling a little disappointed that I may win the bet with Millie. \n\nJust after the cutting of the cake I was handed a note by one of the waiters. It was handwritten on a napkin asking me to go to the room the girls were in earlier to retrieve something I'd left behind. I was relieved to get the note because it meant that it must be the lens cap I had misplaced sometime earlier. I rushed off to get it without thinking anything more about it.\n\nWhen I got to the room I knocked lightly just in case someone was there. Getting no reply I opened the door and went in. Before I had a chance to look around I heard Lara's voice.\n\n\"You looking for this?\"\n\nI turned to see her lying on the chase lounge with my lens cap. She wasn't holding the cap it was protruding out from between her pussy lips. Yep, she was naked.\n\n\"I found this earlier and thought I better return it.\" She removed the cap and lifted it to her mouth licking the edge that had been inside her. \"So what do I get as a finder's fee.\" Her voice laden with innuendo.\n\nNo free coffee for me I thought as I moved across the room pulling off my shirt.\n\nWe didn't make love ... we fucked! Hard and passionate. Lara was a real firecracker that made more noise than a room full of wild cats. She tore off my pants and immediately took my fast growing cock into her mouth, licking and sucking like her life depended on it. Between bobbing up and down she managed to engage in some of the most dirty sex talk I had ever heard. It was obvious she was pretty practiced at the art of sucking cock as just before I was about to tell her I was close to cumming she pulled her head off and started kissing up my stomach before latching onto my nipple sucking and nibbling at that instead. I felt as though I wasn't giving anything back so I pulled her head up and crushed my lips onto hers, both of us used our tongues to explore the others mouth. I roughly ran my hands over her breasts pinching the nipples.\n\n\"Oh yeah, fuck yeah. I love that, harder.\" Lara declared loudly in a brief moment while our mouths were detached.\n\nI pinched the nipples harder and then lowered one hand a smacked her across the butt. Her moan of approval led me to repeat the action. If she liked it rough I wasn't going to deny her ... within reason, I'm not a sadist.\n\nFinally I lifted her up and carried her into the adjoining bedroom, dumping her onto the mattress before spreading her legs and lowering my head between her thighs. If I thought her language was pretty bad before then I was mistaken, a new verbal barrage of vulgarity and moans filled my ears as I latched onto her pussy and let rip with my tongue. She had a musky smell emanating from within and it filled my nostrils acting as an aphrodisiac to my senses. Her piercing clinked against my teeth as I latched onto her clit and began to lick and suck for all I was worth. When I rammed two fingers up inside her pussy it took her over the top ... in a way I didn't expect. Lara erupted with a gush of liquid. My face was covered and I pulled away just missing a second and then third spurt. I could see her urethra opening pulsing out the liquid ... she had just peed in my face! I didn't know whether to be repulsed or excited by her massive reaction. I hadn't swallowed any so that was a positive ... and it really didn't smell bad. I grabbed a handful of bed sheet and wiped my face.\n\n\"For fuck's sake. Get that cock in me!\" Lara shouted desperately as she bounced on the bed still experiencing what I supposed had been an orgasmic experience.\n\nI didn't need to be told twice so I lined up and thrust my hard cock deep into her very wet twat. \n\nNow, I'm unsure whether she proceeded to have a second orgasm or whether the first one just kept going but her cries and moans didn't subside as I pounded away. I was so close to cumming before I entered her and I only lasted a minute or two before my cock bottomed out on her cervix and I shot my load with such intensity that I joined her in shouting out in rapture.\n\nIt took both of us a few minutes to recover as we lay side by side on the bed. Finally I stood looking around. Her liquid contractions had wet not only the bed, the carpet also had major dark patches of moistness.\n\n\"Fuck do you always cum like that?\" I asked as I helped her up.\n\n\"Yeah, I'm a bit of a squirter when I get really excited,\" she confessed looking a bit sheepish as she glanced at the mess.\n\n\"That's definitely a first for me.\"\n\n\"Sorry, should have warned you when you were down there.\" The apology was offered with a wry smile.\n\n\"Hey, I'm not complaining. I think we both enjoyed ourselves ... I know I did.\"\n\n\"Thanks, your sweet.\" Lara kissed me lightly on the lips.\n\n\"We better have a quick shower and get back before we're missed.\" I took her hand as I lead the way to the bathroom.\n\nFifteen minutes later I was back at the reception when Millie came up to me.\n\n\"Where have you been! We need to set up in the honeymoon suite before David and Kathy get there.\"\n\n\"Ah, I've been getting this ... I misplaced it earlier.\" I held up the lens cover.\n\n\"Why is your hair wet?\" Millie looked at me suspiciously. \"Oh, fuck me! You did it with the bridesmaid didn't you!\" She added incredulously as the penny dropped.\n\n\"A gentleman never tells.\" I said rather lamely.\n\n\"You randy bastard! You leave me here to cover for you while you shag the wedding party. Mind you that means I get a nice looking bathroom.\" Millie smiled smugly and patted me on the shoulder.\n\n\"It wasn't the wedding party, it was one bridesmaid and you predicted it anyway.\" I countered offensively.\n\n\"What, so if I predicted you were going to were going to fuck more of the bridal party you would have done that too?\" She quizzed back.\n\n\"One per wedding, that's my rule.\" I smiled back.\n\nMillie laughed as we went to pick up our gear and head upstairs.\n\nI was surprised when we got to the bridal suite that Millie had a whole storyline she wanted to follow in the video. The final tape would seem as though a voyeur had watched the couple screwing from behind an ajar door. We taped the first part ourselves by having a hand knock on the suite door then enter with their swipe card. Millie held the camera over my shoulder as I played the voyeur ... the camera shooting what would be the view from my eyes. I called out 'room service' and walked across the empty lounge area to the bedroom door. We then set the camera up on a tripod as though someone was peeking through the opening into the adjoining bedroom. Millie had two more cameras that we'd use for close ups in the bedroom, each of us would operate one and move around the bed, making sure that on a few occasions we would both step out of the door camera view so that voyeur shot could be edited in.\n\nI was impressed at how calm Millie was about the whole situation ... I was so nervous that I doubted I could hold the camera steady.\n\nDavid and Kathy arrived half an hour later. Both of them seemed a little nervous as well, but you could also see the excitement in their eyes.\n\nMillie explained her plan of attack and the newlyweds couldn't hold back on their enthusiasm for the idea. So we all took our places and began.\n\nI've never really thought of myself as a voyeur but I must admit looking through the camera lens at the scene was a real turn on ... I was there but in some respects I wasn't. David started to undress Kathy and I could feel my cock harden in my pants! Her body was different from others I had seen, full creamy colored breasts with nice sized areolas topped with stiff nipples. Her stomach wasn't flat and she carried a little weight ... but that didn't detract from her sexiness. I'd already seen her pussy earlier in the day and it looked even better with slightly swollen moist lips. She was aroused and her slit glistened with wetness . David's cock was straining against his pants and when Kathy unzipped him ... a thick eight inch monster sprung forward. I heard a stifled audible gasp from Millie as she laid eyes on it, causing me to glanced across and catch her eye. I grinned and shook my head in disbelief. Millie smiled back before returning her attention to the couple on the bed.\n\nIt took a few minutes to work out how to keep out of each other's shot, but soon we were zooming in and out as David went down on his new bride, his tongue lapping up her labia while his fingers explored her pussy and asshole.\n\nBetween gasps and moans Kathy gave David verbal instructions on what she liked and this led to her heightened enjoyment. She was writhing on the sheets in ecstasy.\n\nMillie used hand gestures to indicate when we should pull away out of the voyeur cameras view. We also found she concentrated more on David and I on Kathy for the close ups ... it was working well. After an hour we had two sweaty performers who had participated in individual oral, 69, missionary, cowgirl, and doggy style. They showed no signs of stopping. Kelly had orgasmed at least twice and possibly a third time I wasn't sure. David had stayed rock hard the whole time and I was in awe of how he hadn't cum already. At one stage he had hinted at possible anal penetration but Kathy had rejected the idea saying it was just too big. To make up for his slight disappointment she had given him a prostrate massage while sucking his cock again.\n\nI had given up on trying to hide my stiff cock as it bulged in my pants and no-one seemed to care anyway. The room was quite warm and Millie had stripped off her blouse but was still quite decent in a sports bra. Seeing her flat toned stomach and belly piercing was an extra pleasant distraction though.\n\nFinally during the second blow job David declared he was about to cum.\n\n\"On camera!\" Millie exclaimed as she moved closer to the action.\n\nKathy pulled her head up and used her hand to finish job. David gave one last loud grunt and fired away! His first spurt shot high into the air and I was lucky to be able to get the whole thing in picture. The second burst went even further and some of it landed on Millie's hair almost four foot away. It was an impressive effort as four more streams arched out landing on Kathy's upper body. When he was done David collapsed back onto the bed gasping for breath. Kathy moved up beside him and they lay entwined together on the rather damp sheets.\n\nMillie gave me a nod and we moved away into the adjoining lounge area leaving the newlyweds some privacy ... if that was possible in the circumstances.\n\nWe sat on the couch in silence for a few minutes.\n\n\"Fuck that was so hot.\" Millie finally spoke. \"My pussy is so wet, my panties are soaked!\"\n\n\"I know what you mean. I think my cock is going to bloody burst!\" I declared as we both looked at the huge bulge in my pants.\n\n\"That looks pretty impressive!\" Millie glanced at me her eyebrows raised in a questioning way.\n\n\"We agreed just friends remember.\" I replied.\n\n\"I know I but I'm so fucking horny at the moment.\" She sighed.\n\n\"Ditto!\" I agreed.\n\n\"Well maybe we can take care of that.\" A voice came from the open bedroom door.\n\nBoth Millie and I sat up with shock and turned to face the door.\n\nKathy was standing in the doorway smiling. Her skin had a sheen of moisture that made it look very exotic. Fuck she looked sexy ... the epitome of the term MILF! David appeared beside her his cock still fully erect.",
        "\"You know it's another fantasy of ours to have foursome. There's no reason why that can't be tonight. You both seem to need a little sexual relief anyway.\"\n\n\"I know we're old enough to be your parents but as you've just seen we aren't too bad in bed.\" Kathy added.\n\n\"What do you say. Of course we'd expect to pay for the extra time involved. How would two thousand sound for the rest of the night.\" David quizzed.\n\n\"You mean two thousand each? I asked in reply.\n\n\"Whatever it takes Zeb. We just want the two of you in here with us.\"\n\nI looked Millie, she seemed a little unsure.\n\n\"What do you want us to do ... you said foursome.\" I asked uncertainly.\n\n\"Just straight sex, I'm not into guys Zeb.\"\n\n\"That suits me neither am I.\" I responded.\n\n\"I was hoping for a little action with you Millie. But only if you are agreeable.\" Kathy said hopefully. \"No pressure though sweetheart,\" she added sincerely.\n\n\"I haven't been with another women before so I'm not sure.\" Millie nervously replied.\n\n\"That's okay ... we can just see how things go. No expectations.\"\n\n\"Can we have a moment?\" I asked.\n\n\"Of course ... we'll wait in the bedroom.\" David took Kathy's hand as they both retreated into the next room.\n\nI swivelled around to face Millie. \"You don't have to do this if you don't want to.\" I took her hands in mine. \"We can walk away now no problem, you can get the money somewhere else.\"\n\n\"It's not the money ... I'm just afraid I won't know what to do.\"\n\n\"What? I don't understand?\"\n\n\"I'm a virgin okay!\" Millie blurted out.\n\n\"You're kidding right!\" I exclaimed.\n\n\"I know sometimes I sound like a frigging whore. But the truth is it's all talk.\" Millie confessed.\n\n\"So you've never had sex ... at all?\"\n\n\"Well I've done things with a vibrator, so I 'm not a virgin as far as a hymen and all that goes. ... but yeah no real cock has seen the inside of me.\" Millie shrugged and sighed.\n\n\"Wow!\"\n\n\"I mean it's not that I haven't wanted too it's just haven't been ready or had the time I suppose. I went to an all girl's school, then work and starting the business ... I guess I just got too busy ... and my vibrator filled in for the real thing.\"\n\n\"Well you don't have to do anything tonight.\" I assured her.\n\n\"No, that's the thing I want it to be tonight. Seeing Kathy and David tonight has made me want to do it! I just don't want to disappoint anyone.\" Frustration was evident in her voice.\n\n\"Are you sure?\" I asked quietly giving her hands a reassuring squeeze.\n\n\"Hey, like you I'm so fucking horny right now ... and I want a cock inside me. Really.\" She squeezed my hands and nodded.\n\n\"Okay, but I think we should let Kathy and David know it's your first time.\"\n\n\"Okay.\"\n\nWe stood and headed for the bedroom hand in hand.\n\nDavid and Kathy were initially just as shocked as I was. They had assumed we were a couple. However both of them put Millie at ease by saying it would be an honor for them to be her first. Kathy was concerned about David's size but Millie joked that her vibrator was similar so she didn't see a problem in that area. We all laughed at that and it seemed to break the ice and we relaxed a little.\n\n\"So clothes off then.\" I said and started to unto my shirt buttons.\n\n\"Why don't we help with that.\" Kathy responded and beckoned for me to come closer. David held out his hand towards Millie and she too moved towards the bed.\n\nAs Kathy slowly stripped me I looked across at David. \"I don't know how the hell you can still be so hard after the last hour and a half.\"\n\n\"Let me tell you any forty year old man would get rock hard again at the thought of making love to a beautiful, sexy young girl like Millie.\" Kathy answered for him and smiled. She then leaned over and gently kissed Millie on the lips.\n\nSoon all four of us were naked on the bed. David and I on our backs while Kathy gave Millie some tips on how to suck a cock. She was a good teacher and I was on the brink of cumming in no time. Millie had David moaning as well and before we knew it both of us announced we were going to blow. Kathy implored Millie to let the first spurts go then to use her mouth again to take the rest. To her credit Millie did just that with Kathy doing the same to me. I have to say that after having been aroused for so long I had a massive amount of cum to ejaculate out. It was such a relief to just empty my balls and Kathy swallowed a large portion of it. David didn't seem to have as much left in the tank after his earlier effort but it was still enough to surprise Millie and she could barely keep up with swallowing what she was getting.\n\n\"Let's give the boys a few minutes to recover sweetheart while I introduce you to the joy of being with another women.\" Kathy said seductively to the wide eyed young girl before her.\n\nIt was now I could start to really appreciate how sexy Millie was. Her breasts were tanned along with the rest of her body ... she obviously sunbathed topless. The twin mounds were medium size but perfectly shaped with small areolas centered by two little hard protruding nipples, one of which was pierced and sported a small silver dumb-bell. Tattoos of butterflies adorned the area just under each breast. Her pubic region was untanned and topped by a triangle of light brown hair, neatly trimmed for a summer swimsuit, her labia clearly visible as that area had also been shaved. I smiled as I saw the clit ring piercing her little nub of sensitive skin ... she hadn't been joking earlier.\n\nAs she lay there on her back, legs spread waiting for Kathy to move into position I could see a combination of excitement and nervousness in her eyes. I reached over and took her hand just as a warm wet tongue sweep up her pussy and over her clit.\n\nDavid and I both sat back and watched Kathy completely overwhelm Millie's senses with an artful display of cunnilingus. When the inevitable climax came it was unbelievable to watch ... starting with a low moan and ending in a series of loud gasps, one hand gripping the sheets and the other tightly squeezing my own hand. It was such a turn on my cock was standing to attention again and ready for action ... amazingly so was David's!\n\nThe rest of the night was full of action. I got to fuck Kathy ... or should I say she got to fuck me! I let her take control and call the shots, after all she was paying for it. I have to admit being with an older women was quite a turn on and having a bit of extra flesh to grab onto was an interesting change from the more petite bodies of Ginny and Issy. As she sat astride riding my ridged cock her boobs raised and lowered in unison with every thrust ... it was mesmerising. I reached up squeezing and fondling the bouncing globes to both our delight. I couldn't help but smile ... my first Milf fuck.\n\nOn the other side of the bed David took Millie's virginity and he was remarkably tender and gentle compared to the way he'd taken Kathy earlier. I noticed that he kept playing around her butt hole both with his fingers and tongue and it was clear he liked that area.\n\n\"You can put it in my ass if you want.\" Millie announced as David was about to enter her pussy again in the doggy position.\n\nWe were all shocked by her statement.\n\n\"Hey, he's no bigger than my butt plug.\" Was her response to our astonished looks. \"I kind of like being filled up there when I masturbate,\" she added with a shy grin.\n\n\"Are you sure?\"\n\n\"Yeah, just use some lube.\" Millie looked back at David and smiled. \"You know you want to, you've had a finger up my butt for the last half hour.\"\n\nDavid didn't need a second invitation, as he grabbed some lube from the bedside table and greased up both his cock and the tight puckered asshole in front of him.\n\nKathy and I who were also in the doggy position slowed our activity and turned to watch as David first inserted one and then two fingers up inside Millie's butt, gently moving them in and out.\n\n\"Okay, that feels fine. Now fill me up.\" She finally said breathing slowly.\n\nDavid lined up behind her and pushed his cock against the taut opening, the head slowly disappeared inside. Gradually the whole eight inches became buried to the hilt. Millie was silent and we could hear her drawing deep breaths as her sphincter muscles relaxed and adjusted to the intruder inside her.\n\n\"Okay ... that feels good now.\" She finally said in a breathy voice.\n\nWith the comfort of those words David started to slowly fuck her ass.\n\nMillie tried to reach back and rub her clit but lost her balance falling forward.\n\n\"Here allow me.\" Kathy responded as she lay on her back a scooted between Millie's legs, her mouth latching onto the younger girls pussy.\n\n\"Oh fuck yeah!\" Was Millie's muffled acknowledgement as she rested her head on Kathy's stomach.\n\nI moved across and spread Kathy's legs, kneeling between them I entered her pussy again and continued where I'd left off.\n\nI was so turned on by the incredible site before me that I felt my balls tighten and announced I was about to cum. To my surprise Millie raised her head and leaned forward pulling my shaft out of Kathy's pussy, her hand stroked me a couple of times before I exploded onto her breasts. She then sucked me dry swallowing any remaining cum ... she was squeezing my cock hard as her own impending orgasm caused her to tense up. \n\nDavid climaxed soon after and Millie was not far behind, they both grunted and moaned before collapsing onto the bed. David's cock made a loud popping sound as it exited Millie's ass, in return she let out a rather large fart which expelled a copious amount of sperm onto Kathy's breasts.\n\nWe all laughed at the unceremonious end to our unusual night of sexual endeavor.\n\nIt was after four am when I drove into the garage at home. Kathy and David had told us we could stay but we decided to let them wake up together as newlyweds, not as a couple of sexual deviants sharing a bed with two young people well over half their age. \n\nI had bought Millie home with me as the coffee shop would be open in two hours and she needed some sleep in peace and quiet. We stumbled up to the bathroom and took a quick shower together, with not even a thought of the fact we were naked again. Ten minutes later we were both fast asleep on my bed ... still naked.\n\nI woke the next morning spooning warm flesh. My morning wood had slipped between the soft upper thighs of my bed-mate, and as I tried to extract myself I felt the thighs tighten their grip on my shaft.\n\n\"That feels nice.\" Millie murmured sleepily.\n\n\"\"Hmmm.\" I replied and stayed where I was. I reached around and hugged her closer. \"You're nice and warm.\" I added and tucked my head into her neck.\n\n\"Need more sleep.\" Millie responded drowsily.\n\n\"Hmmm. Okay.\"\n\nWe fell back to sleep.\n\nIt was almost noon when I awoke again and Millie was still tucked into me. Her breathing was slow and regular and I smiled as a looked over to see small dribble of saliva had run down her chin. I gently wiped it off with my finger before extracting myself from the bed ... my earlier boner had subsided to a semi erection.\n\nI relieved my bladder and brushed my teeth before heading for the kitchen to make coffee and toast. Ten minutes later I gently nudged Millie awake.\n\n\"Coffee?\" I asked holding a hot mug in front of her.\n\n\"Morning.\" She sat up and stretched her arms above her head. \"I've got no clothes on,\" she stated the obvious mid yawn as I handed her the coffee.\n\n\"Hadn't really noticed.\" I replied smiling as I sat down on the bed.\n\n\"Did we fuck last night?\" Her mind was still trying to catch up.\n\n\"No just David.\" I replied.\n\n\"No I mean here, I remember feeling your cock.\"\n\n\"No we went back to sleep.\"\n\n\"Okay, sorry I must have been really tired.\"\n\n\"What, sorry we didn't have sex or sorry for not remembering?\" I asked and grinned again.\n\n\"Maybe both.\" She smiled back. \"But remember we agreed to just be friends. I don't want to risk ruining our friendship and besides you have a girlfriend.\"\n\n\"Hmmm, right. Naked in my bed, looking really sexy and cute ... drinking my coffee. And you pull the old 'I just want to be friends line'.\" Really!\" I joked back.\n\n\"Yep. But thanks for the sexy and cute compliment anyway.\" Her smile broadened and she leaned over an gave me a kiss on the cheek.\"\n\n\"Oh, not the cheek kiss too.\" I tried to sound rejected.\n\n\"Is that toast for me?\" Millie ignored my plea and grabbed a piece of toast off the plate I was holding.\n\nWe finished breakfast in a contented silence and then got dressed.\n\n\"I still can't believe last night!\" Millie said shaking her head in disbelief as I drove her home to the caf\u00e9.\n\n\"Fifteen thousand dollars, I know it's amazing.\" I agreed.\n\n\"I wasn't referring to the money! But yes it is nice to have that ... and thank you again for giving us your share.\"\n\nI smiled and shrugged. \"No problem.\"\n\n\"I was actually referring to the sex. We taped a couple on their wedding night and then we joined them in a foursome ... and I lost my virginity to both of them!\" Millie exclaimed continuing to shake her head.\n\n\"You forgot the part when you let me cum on your tits and then sucked me dry.\" I added with a grin.\n\n\"Yeah well just take that as a little thank you for your efforts and not mention it again.\"\n\n\"I'm not sure I can forget that.\"\n\n\"Zeb! Come on please ...\" \n\n\"Consider it forgotten.\" I interrupted her plea. \"But maybe not until I masturbate thinking about it later.\" I added chuckling.\n\n\"Zeb!\" Millie punched me lightly on the arm.\n\n\"Okay, I won't mention it again. I have to agree with you though, who would have thought the night would be like that. First piece of voyeurism and first foursome for me as well.\"\n\n\"You also fucked a bridesmaid remember.\"\n\n\"I will never forget that. She peed in my face when she orgasmed.\"\n\n\"Eww! What?\" Millie looked shocked.\n\n\"It wasn't as bad as it sounds ... I mean I didn't swallow anything. She just squirted.\"\n\n\"I guess I've done that before too ...with my vibrator. You must have got her really excited to get a squirt.\"\n\n\"You squirt!\"\n\n\"Oh fuck, forget I mentioned it ... I don't want to fund your next wank with images of me. Gross!\"\n\nI laughed at her declaration of disgust and denied her assumption.\n\nOn the drive home after dropping her off I knew she was probably right ... I would think about it that night with cock in hand.\n\nIt was pleasing however that over the next couple of weeks my relationship with Millie didn't really change. We were a little more familiar and enjoyed time together but it was more like a brother sister relationship. I introduced her to Ginny on a zoom call and the two girls seemed to get on okay. Ginny asking a heap of questions about the wedding night bombshell ... I had already given her my side of the story.\n\nMillie meeting Issy for the first time didn't go so smoothly. I had shared the story of the wedding with Issy too and she didn't have any problems with my activities that night, but when they met I sensed something odd. I couldn't put my finger on it ... there was just an element of tension in the air during our meal together. It was strange as I thought they would get on like a house on fire.\n\nI made a decision to see them separately from then on as I didn't want any friction to ruin the relationship I had with either of them.\n\nOf course being a mere male I didn't read the situation at all correctly. Apparently it wasn't tension from a difference in outlook or a personality clash. It was sexual.\n\nI found them in bed together a week later at Millie's place!\n\nI had arrived to finish the painting of the bathroom. After a quick coffee in the caf\u00e9 I made my way upstairs. I hadn't bothered to knock on the third floor apartment door and just walked in. It was a big room with a small kitchenette in one corner and a lounge area with a workspace by the window. Down the opposite end was a king sized bed and the small bathroom.\n\nThe girls were occupied on the bed ... Issy's pert little backside was facing me as she knelt between a pair of open legs, her head gently moving up and down as she directed her full attention to pleasing a moaning Millie. I stood on the doorstep stunned ... I definitely hadn't seen this coming! For a brief moment I thought about leaving ... but that wasn't going to happen. I was actually torn between confronting them or silently watching the liaison proceed. I chose the latter.\n\nMillie was moaning in the same way I'd remembered from her time with Kathy ... a low continuous sound of pleasure. Her hands were gripping the bed sheets and her hips were moving in unison with Issy's head.\n\nMy cock grew in my pants as I continued to stare. It was obvious that Issy has already had a good tongue lashing as her swollen pussy lips were wet with saliva and her own juices. A bright green butt plug was firmly secured in her asshole and she reached back and slowly removed it while still concentrating on Millie's clit. The plug popped out and a trickle of lube ran slowly down her thigh ... fuck that looked so sexy. I so wanted to sneak up behind her and plunge my cock into that tight little ass hole.\n\nIssy ran the plug up and down her wet pussy a couple of times and it glistened with moisture, she then lined it up with Millie's tight little hole and slowly started to insert it.\n\n\"Oh fuck, fuck, fuck ... yesss!\" Millie cried out in elation. The plug stretching out her ass in blissful ecstasy.\n\nFive minutes later Millie orgasmed. Her hips rising off the bed and her body trembling at the feelings of euphoria. I could hear Issy laughing as she tried to hold her mouth against the sensitive throbbing pussy.\n\nIt took a few minutes for Millie to calm herself and she lay panting with her eyes tightly shut while Issy blew lightly on her labia and gently stroked her stomach.\n\nWhen they were both relaxed I coughed loudly.\n\nMillie's eyes opened wide as she lifted her head looking towards the door. Issy spun around and awkwardly fell off the bed as she tried to grab the sheet to cover herself.\n\n\"Fuck Zeb! What the fuck!\" Issy exclaimed as she scrambled to a sitting position. \"You scared the shit out of me, you bastard!\"\n\n\"Sorry.\" I said with no real sincerity.\n\n\"The fuck you are! How long have you been standing there.\" She sounded pissed off.\n\n\"A while.\" I answered and stepped forward offering my hand to help her up.\n\nIssy reluctantly took the hand and pulled herself up, she resat on the edge of the bed glaring at me.\n\nMillie hadn't said a word yet and I looked over at her as she sat with her knees up covering her body in a defensive position. She looked worried. \"You alright?\" I asked quietly, this time my voice was sincere in its questioning.\n\n\"Yeah. I guess ... I'm sorry Zeb.\" \n\n\"Sorry for what. I'm the one who should be sorry for scaring you like that.\"\n\n\"Bloody right you should!\" Issy proclaimed as she shuffled back towards Millie putting an arm around her.\n\n\"I know, I know. Look, it's just a bit of a shock ... I mean I thought you two didn't like each other.\" I raised my hands in frustration and stared at them.\n\n\"I'm sorry we should have told you, it's just we were concerned it might affect our relationship with you!\" Millie offered in reply.\n\n\"What! How? Fuck sometimes you women can be so confusing!\" I was exasperated at her statement. \"Why would it affect our relationship. I've been really worried that two of my best friends hate each other and it's been driving me mad. Obviously this is a whole lot better than what you lead me to believe.\"\n\nI just shrugged and shook my head in frustration heading into the bathroom to continue painting.\n\n\"So that means you're okay with it?\" Millie called out from the bedroom.\n\n\"Just keep the noise down to so I can concentrate on cutting straight lines on this feature wall.\" I answered.\n\n\"We both still love you!\" Issy cried out. \n\nI didn't answer.\n\n\"Zeb, did you hear me?\"",
        "I poked my head around the doorway. Both girls were sitting up and looked concerned. \"And I still love the two of you.\" I winked and smiled before returning to the bathroom.\n\nI painted with a massive hard on for the rest of the morning ... as neither of them knew what it meant to have quiet sex!\n\nEight weeks later and things had settled down, I had completed mid-year exams, Millie was a doting auntie to her new niece, and Issy was working on a new project for the firm and loving it. Ginny flew up for the holidays and the four of us had some wild nights together ... but that's another story!\n\nVote and let me know if you want more."
    ],
    "authorname": "silverfern",
    "tags": [
        "foursome",
        "voyeur",
        "voyeurism",
        "girl/girl",
        "anal sex",
        "group",
        "group sex",
        "mature"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/zebs-first-time-experiences-ch-02"
}