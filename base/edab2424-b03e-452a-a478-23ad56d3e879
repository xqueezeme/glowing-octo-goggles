{
    "title": "How I Met My Husband - By Her",
    "pages": [
        "Author's note: This turned more into a funny story about me talking with my friends about sex, than a super erotic story about sex. I still hope you'll find it entertaining, just know what it is before you start.\n\n*******\n\nI woke up in new guy's bed. That wasn't unusual for me. I was kind of a blowjob slut in college. I like giving head. For me there is a power trip to it. When I have a cock in my mouth, I feel completely in control. I'm also quite talented as no small number of guys will attest to. At the time of this story, every guy I had gone down on in a bed had asked me to stay the night after. For all of their macho talk about \"hit it and quit it\" and bullshit like that, you'd be surprised how many guys want to just pass out cuddling you after you have blown their mind (and their cock).\n\nI was completely naked. That was a little less common of an occurrence but still not unusual. I usually only gave head when I hooked up with someone and kept my panties on. I would sometimes finger myself while I did it because for most guys, especially in college, after I blew them they were too spent to finish me back. But about half the guys I played with did go down on me, so being naked wasn't completely out of the ordinary.\n\nWhat was different is I had sex with the guy I was in bed with. I never did that. And I mean never. Sure, I blew guys the night I met them all the time, but I never had sex with them. This was the first time I had sex with a guy I had known for less than several months and I had only known this guy several hours. I did have a one night stand once before but it had been with a woman on spring break. \n\nI had only been with two guys before last night and both of them were guys I was in an exclusive relationship with when I slept with them. And with the two of them I had only had sex a total of five times. But last night I had met Chris and he had become the third guy I let inside of me. \n\nFor some reason Chris had been different. I decided to fuck him just a few hours after we met. And the sex had been great. Far better than either of my boyfriends. But now I found myself naked, my head on the chest of a guy I just met, who had already been inside me. I was strangely comfortable considering I was new to this but unsure what to do. Did I stay or sneak out? Put my Halloween Costume back on and make the \"walk of shame\" home?\n\nMy decision was made for me when he realized I was awake.\n\n\"Good morning,\" he said.\n\nI looked up at him and he kissed me. And what a kiss! Perfect amount of tongue, my head laying on his chest with his left arm behind it propping it up. His left hand was on my ass. He right brushed my face, then his fingers ran through my hair. Also his breath was minty fresh, which I knew mine was not.\n\n\"Mmm,\" I moaned when the kiss ended. \"Can I have a mint?\"\n\nHe grabbed a small container of mints and opened it. I took one then asked how many he had. He said four or five, and I took a few more.\n\nMy leg was draped across him and his cock was pressed against it. Even though he wasn't hard it was still big. While I had sucked bigger cocks Chris was definitely by far the biggest guy I had slept with. And it was much bigger soft than most I had seen, including some of the guys who were bigger than him hard. He jokes it is made for show not to grow.\n\n\"Last night was amazing,\" he said. \"I had a lot of fun.\"\n\n\"It really was. Do you just mean in bed?\" I asked.\n\n\"No,\" he said. \"I had fun the whole night, dancing, talking, fucking, all of it.\"\n\nWithout another work he rolled me onto my back and pulled me closer to the middle of the bed. He laid on top of me, my breasts pressed against his chest. He was kissing my neck. I hurriedly chewed up the mints I had taken to I could kiss him again. Chris is a sexy guy. He's 6'3\", tan, with shaggy black hair. He has the perfect amount of chest hair, sexy brown eyes, and a great smile. He's also really fit with a slim but toned body. He's 185 pounds with the kind of abs that feel rock hard even through a shirt.\n\nHe kissed me then grabbed a condom off his desk. When he sat up to get it I saw his cock was already erect. It's a great cock. A little over seven inches, so big, but not too big. It's thick, but not too thick. Straight, no weird curves, no unsightly veins, the kind of cock that gets a guy casted on a porn site geared toward women and couples. I watched as he rolled the condom down on it\n\nHere I was about to have sex again. I don't know what had gotten into me (other than a great cock). If there was any debate in my head on if I was ready to do this again there was no debate with my body. I had already slid my legs apart and was inviting him to me. I was ready to feel him inside of me again.\n\nI let out a gasp as he entered me. My lips spread apart as his wonderful cock slid into my wet pussy. I hadn't realized just how wet I was until I took in his cock so easily. I had never had sex twice in the same week before, much less twice in twelve hours like this. I almost couldn't believe what I was doing, but I wanted to do it so badly at the same time.\n\nThe sex the night before had been raw and rough. We had been drinking, dancing, grinding, and when the clothes came off we tore into each other. Now he fucked me softly, gently. It was passionate. We were locked together kissing while locked together fucking. His hands cradling my body, holding me to his. It was the way I imagined my first time would have been, but unfortunately hadn't been. It was the kind of sex I expected to have with my two boyfriends, but never did. It was the kind of sex that made me feel comfortable, special, wanted. \n\nIt could have been 5 minutes or an hour of him rolling around in me when I felt my orgasm cumming. I was so lost in the moment, the sex felt so good I wasn't even thinking about the orgasm until it came. When I used a toy, or fingered myself, or was with my girlfriends, I was focused on making myself cum. This time, I was just enjoying myself. I was completely relaxed, or as relaxed as a 19 year old girl can be with a thick cock inside of her.\n\nI moaned that I was cumming and he kept thrusting into me. His hips rolling in little circles so that I could feel his cock exploring all angles inside of my pussy. My orgasm seemed to just keep going. My head tilted back, my eyes closed, I just took in all the feelings. His cock gliding in and out of me. His pelvis rubbing against my clit. Him kissing my neck. His hands rubbing on my side and back, holding my hip.\n\nHe must have been holding back his orgasm because as soon as mine ended he pulled his cock out of me, pulled off the condom and started to cover me with his cum. The first spurt made it all the way to my neck. He pumped his cock with his hand and cum came shooting out on my breasts and my stomach. It was so much cum, more than most guys gave me when I blew them. It was more impressive when you consider he had covered my back and ass with a large load only about 7 hours earlier.\n\nHe wiped me off with a towel then I pulled him down to me. We made out for a few more minutes. I wanted this man. Not just for sex, I wanted this to be my man. I didn't realize it at the time, but this was the guy I was going to marry. He was clearly experienced, and I didn't want to be just another one night stand for him. Fortunately he appeared to feel the same way.\n\n\"Let me take you to dinner tonight. A proper date,\" he told me.\n\nI said of course. We traded numbers, made plans for him to pick me up, and we got dressed. When I started to put my costume back on he told me he had something for me. He gave me a t-shirt and a pair of gym shorts. They were obviously going to be oversized on me. And there was another problem.\n\n\"If I walk home in this everyone will know I hooked up last night. In a costume I can at least claim I was drunk and stayed with a sorority sister.\"\n\nI did often stay with a few sisters. Both freshman year and this year. Sometimes just because I was drunk and needed to crash. And occasionally, with two girls, I had ongoing sexual relationships. Nothing serious, but a friends with benefits kind of thing.\n\n\"Walk?\" He asked. \"I'm gonna give you a ride.\"\n\nI protested at first that he didn't need to do that. My sorority house wasn't far away. But he insisted, and I appreciated it. He pulled into the parking lot and dropped me off at the back entrance to my house. I gave him a kiss goodbye and snuck in without being seen.\n\nWhen I got to my room my roommate, who was also my \"big\" in the sorority, was up and checking out her social media.\n\n\"There's my little cock-gobbler!\" She exclaimed.\n\nI swear she meant it as a term of endearment. The girls who knew my hang ups about having sex with guys knew I had also blown over 30 of them. They all got a kick out of it. Jessica, my roommate, had been out with me last night. She had left the house where I met Chris to go back to another house where a guy she had met earlier had been texting her. Before leaving she knew I planned on staying with Chris, and she made a joke about how he had no idea how good of a blowjob he was in for.\n\nI smiled and she held both her arms in the air. I walked over and gave her a hug, then asked how her night went.\n\n\"Ugh, awful,\" she replied. \"The guy I went back for, had the biggest cock I had ever seen. Seriously.\" \n\nI giggled as she held her hands apart with fingers pointed up, about ten or eleven inches apart.\n\n\"It was uncomfortable at first. I was almost starting to get used to it when he came. Seriously, from the time I entered the room, got undressed, he put a condom on, put it in me, came, and I got dressed and walked out... less than ten minutes. No foreplay or anything. Just him barreling that monster into me then having kind of a spasm on top of me 90 second later.\"\n\n\"Oh no,\" I laughed while giving her another hug.\n\n\"It was so short, that when one of his brothers saw me walk out he said 'oh man, you shot him down?' So I had to call on Bob at the end of the night. Had you not been off blowing that guy from the band I would have jumped you when you got home.\"\n\n\"Bob\" was what Jessica called any of her three vibrators and meant \"Battery Operated Boyfriend\".\n\nI kissed her on the check, like a friendly \"smack\" of a kiss, and said maybe later I would take care of her. I was about to tell her about my night, when there was a banging at the door.\n\n\"Is Mandy back yet?\"\n\nIt was Liz. Liz and Jessica were two of my closest friends. They were also two of the four women I had ever had sex with, and the only two where I had done it with more than once. I said I was in and the door swung open.\n\nLiz was still wearing a catholic schoolgirl outfit that had been her costume the night before. Her makeup was more than a little smeared. She had the look of a woman who had spent the night fucking.\n\n\"You had sex!\" she exclaimed pointing at me.\n\n\"Bullshit,\" Jessica said.\n\n\"She did!\" Liz said turning to Jessica. \"And I know, because I was having sex in the room next to her, and I heard her. And my god!\" she turned back to me. \"Did. I. Hear you! You were like a fucking banshee.\"\n\n\"Hey Liz,\" Jessica interrupted, giggling a bit. \"The guy you fucked, was it the other guy from the band? With the fake boobs.\"\n\nChris, the guy I had hooked up with, was playing keyboard in the band at the house we visited. He was dressed as Dr. Teeth from the band from the Muppets. The guy Liz had hooked up with was dressed as Janice from the band, which included fake boobs as part of the costume.\n\n\"It was a costume Jess, but yes it was-\"\n\n\"And did he cum on your face?\" Jessica interrupted yet again. \"I'm only asking cause your makeup, it's pretty rad right now and-\"\n\n\"Oh My God Jessica yes he came on my face. But that's ok. I'm a sexually enlightened woman, I fuck guys, I fuck girls, if a guy is really good sometimes I let them cum on my face. But you,\" Liz turned back to me. \"You never have sex with guys. You only blow them. But last night I heard you doing it. Spill it. I want every detail.\"\n\nLiz sat on the bed looking at me expectantly. Jessica was waiting too, looking at me almost giddily. \n\n\"What,\" I said. \"We had a lot of fun, he was a nice guy, he helped me take Heather home when she got too drunk, and when we got back to his room we did it.\"\n\nBoth Liz and Jessica said some version of \"no\" clearly wanting more details.\n\n\"Ok, I'll tell you.\"\n\nThey both already knew the beginning of the story. We had all gone out together. It was the Saturday before Halloween, and a lot of the fraternities were having blowout parties. We all wore typical slutty costumes, all store bought. Liz and I were sophomores, Jessica was junior. Also in our group was my little Heather, Liz's little Allison, (both of whom were freshmen) and Liz's big Carrie (another junior).\n\nI was the character Link from the Zelda video games. I'm blonde, 5'5\", and very fit. At the time I was wearing a bra that added a cup size to my 34C breasts, making them look like D's. I have a few tattoos, all of which I got my freshman year of college.  \n\nAllison was the first to leave our group. She was dating a guy in the first fraternity we went to, and she stayed with him when we went to the next house. Two houses later Jessica met her one minute warrior. She was wearing a slutty nurse costume. Jessica had a very similar body to me. We both wore 34C bras, she was only an inch taller than me at 5'6\". We both could wear a size 2 or 4 dress. The biggest differences are that she's a natural redhead, has no tattoos, and in college she had a pierced tongue.\n\nLiz was in the catholic schoolgirl outfit she still had on. She's an itty bitty thing. She's 5'1\" and about 100 pounds with 32B breasts which look pretty large on such a small woman. She has pale skin, lots of freckles, and jet black hair which while down now, had been in pigtails the night before.\n\nOf the four girls who had started the night single, Heather was the only one not to meet a guy. Heather was incredibly sexy to me, but she had confidence issues around guys. As a result, her freshman year when she did meet guys they were not always the best ones. She's a bit shorter than me, 5'4\", very petite, under 110 pounds, maybe even under 100. She has a snow white complexion, pale skin, soft brown hair, and 32A beasts. She was a brunette with very sexy green eyes. She was jewish, and a bit self-conscious about her nose, but I thought it was cute. It gave her character. I knew several guys who agreed. The night before she was a cat, which means she wore lingerie, cat ears, and had whiskers drawn on her face.\n\nWe ended the night at Carrie's boyfriend's fraternity. Carrie was a plus sized girl. The kind of woman that guys online would call fat, but give up a testicle to sleep with. She was about the same height as Jessica, with dark brown hair, and she had huge boobs. I personally have never seen them, but Liz described them once as 36E and \"gravity defying\". For Halloween she rocked a German beer maid outfit. She got hit on a lot.\n\nI had never really been to a party Carrie's boyfriend's fraternity. They just weren't one of the houses we hung out with much. I had come by for a quick shot while bouncing from house to house but that was it. I had nothing against them, but we went to a college with over 20 sororities and 20 fraternities, so you couldn't know everyone at all of them. This night was obviously different.\n\nLiz was my best \"party hop\" friend. Freshman year we went out together all the time. We wore skimpy outfits, we made out with each other, and we made guys want us. We got invited to anything we wanted and we never paid for a drink. All the fun things you do when you are dumb and 18.\n\nLast night we had all gone to the party, danced, met guys, and spent the night with them. That much my friends already knew. What they didn't know, and I thought wanted to, was why him.\n\n\"Ok, I really liked this guy, he was really nice, artistic, and funny. His band was good, and he was the one who came up with their funny costumes. When Heather got too drunk, he literally carried her to her dorm room for me.\"\n\n\"That is not what I want to know,\" Liz said. \"What did he do that was so amazing you were so loud?\"\n\n\"Oh my god,\" I said, burying my head in my hands. \"Is that really all you want to know?\" I asked.\n\n\"No, I want to know why you slept with this guy,\" Jessica said. She made a goofy face at me, grinning and fluttering her eyes. \"Is he the one?\" she joked.\n\n\"I dunno, I definitely want to see him again. He's taking me to dinner tonight.\"\n\n\"Mandy!\" Liz Exclaimed. \"Focus! Get to the part where he fucked your brains out.\"\n\n\"Liz,\" Jessica put a hand on her leg. \"You have got to go change out of that ridiculous costume and fix your damn face. Then we'll hear the story.\"\n\nBy the time Liz came back to the room Jessica and I had found Chris on social media and we're going through his pictures.\n\n\"He's a hottie,\" Jessica said. \"He seems like a boob man, and you've got those so that's good. But... all the women he's pictured on dates with have huge boobs. Like D's or DD's. Check this chick out, you may want to watch out for her. She's in a ton of his pics.\"\n\nShe pulled up a picture of him at what looked like a formal. The woman pictured with him did in fact have huge boobs and was wearing a low cut dress that really highlighted them.\n\n\"That's ok, I met her last night,\" I told Jessica. \"Apparently they are childhood friends. Her name is Chelsea.\"\n\nAfter the first time I talked with Chris the night before the woman in the picture had come up to me. She was intimidating at first. She was 5'8\" with a dyed blonde pixie cut. She had been wearing a playboy bunny costume and she had a body that made me believe she could have been an actual playmate. Her tits were obviously fake but they still looked amazing. She had quizzed me to make sure I wasn't going to be a bitch toward Chris. By the end of the night she had been really drunk but I think I won her seal of approval.\n\nLooking through his pictures there were several other very busty women in pictures with him. Many of which were at formal and semiformal events. He also had a few pictures with a woman who was as tall as he was when she was wearing heels. She was pretty much flat chested, but looked like a runway model. They were all gorgeous. \n\n\"Whatever,\" I said. \"I slept with him, and we have a date tonight, so I'm not gonna compare myself to them.\"\n\n\"You should,\" Liz said. \"Yeah they are hot, but damn girl you are too, and you give the best head on campus.\"\n\nI'm not bad looking, and my blowjob reputation did proceed me at a few fraternity houses, something I viewed with an odd mixture of embarrassment and pride. With Liz back, and wearing normal clothes, I began to give them the details of the night.\n\n\"I decided really early I was gonna fool around with him, but when we took Heather home, he was such a gentleman. And then in his bed, I dunno why I did it, but I did. And it was amazing.\"\n\nThe walk to Heather's dorm had been a little embarrassing at first. A few random drunk guys cheered for us, thinking we were heading off to have a threesome. Chris had been really cool about it though. I was hoping Heather was too drunk to remember, but she had told Chris how hot he was, and that if he wasn't already going to get a blowjob from me she would have sex with him. He just laughed, and never brought it back up during the night.\n\n\"When we got back to his room, he was just so smooth, but not in a slimy way.\" I told them. \"He never went faster than I wanted. He waited until I grabbed his cock to try to finger me. He undressed me at the same pace I was undressing him. He never really assumed anything, which I really liked.\"\n\n\"He also focused on me. Most guys want head first, but he started by eating me out, and ladies, he was really, really good at it.\"",
        "Chris obviously had experience down there. He made me cum faster than any guy had done before. He was better at it than Liz or Jessica, but I wasn't going to tell them that now. And his hands massaged all over my body while he ate me out. It was amazing.\n\n\"So I started to blow him, and he had a really nice cock. It was bigger than either of the guys I have slept with before.\"\n\n\"How big?\" Liz asked.\n\n\"Between seven and eight inches,\" I told them. Then I reached into my bedside table and pulled out my thickest vibrator. \"And about this big around.\"\n\n\"No wonder you were screaming,\" Liz laughed. \"I'm lying there, and all of a sudden I hear screaming, and am like, 'I know that voice.'\"\n\n\"Laying there with cum on your face you mean?\" Jessica joked.\n\n\"He had cleaned me up already,\" Liz said, tilting her head back to mock being haughty.\n\nJessica held a finger up, as if getting ready to make a point.\n\n\"But just to be clear, you didn't hear Mandy, until after you let a one night stand cover your face in his spunk.\"\n\n\"Oh come on Jessica, don't act like you have never gotten a facial.\"\n\nJessica just shrugged and smiled, as if to say Liz had a fair point.\n\nLiz, trying again to change the subject away from her facial asked me if I could deepthroat the entire thing. When I said I could, she said to prove it. My vibrator was clean, so I decided to demonstrate on it. Before I did though a thought popped into my head.\n\n\"You didn't use this one did you?\" I asked Jessica.\n\n\"No, I used my rabbit.\"\n\nLiz looked at the two of us, \"you share your toys? Ugh, you two are so weird.\"\n\n\"You have used this toy before too,\" I pointed out.\n\n\"Yeah,\" she said. \"But that's different. I was with you when you were using it on me. I didn't just come in here and take your toy.\"\n\n\"You would probably borrow it if you two lived in the same room,\" Jessica said. Liz looked like she was going to argue but I guess she figured Jessica was right so she just gave us a pouty face.\n\nI opened my mouth and slid it down my throat. Jessica gave me a golf clap and Liz joked I should turn it on now. I almost choked laughing at her.\n\n\"So, since we have clearly established I got a facial, did Chris cum on your face?\"\n\n\"He came on my ass and back last night...then again on my stomach and breasts this morning.\" \n\n\"Ah, doggystyle, that's why you were so loud,\" Liz mused.\n\n\"Actually, when I started to blow him, he said he wanted to fuck, so I rode him. Then he put me on my back and fucked me missionary. Ladies, it was heaven. He was thrusting in little circles. I had a fucking amazing orgasm even though I had already cum from him going down on me.\"\n\nWhen I got on top of Chris is also when I realized I wasn't completely in charge. When I give head, I'm in control. Chris had grabbed my hips and started to rock me back and forth. He was obviously more experienced than I was, and it felt amazing. I liked having him in control.\n\n\"Is that when I heard you?\"\n\n\"No. After I came, I kind of begged him to pound me. So there is one position I had done before when drunk where I got really loud, and he put me in that position and I just couldn't hold back.\"\n\nJessica put me on my back on the bed. \n\n\"I think we need a demonstration!\" she joked.\n\nI held my legs up in a \"V\" and pulled them back toward me, so my pussy was tilted up toward the ceiling a bit. I moved Jessica to be in the position where she could hold them up and push them back a bit.\n\n\"This is how I was when you heard me.\" I said.\n\n\"Shortly after you got a massive load of man magma on your face,\" Jessica added smiling at Liz.\n\n\"Oh shut up,\" She said. \"My guy was amazing in bed too. He earned that facial.\"\n\n\"Are you gonna marry him?\" Jessica asked, making the googly eyes expressions she had jokingly made at me earlier.\n\n\"No,\" Liz said. \"But I'm definitely gonna fuck him again.\"\n\n(Liz and that guy have been married for 7 years as I am writing this, but I'll get to them more in later stories)\n\n\"So when did you switch to doggystyle?\" Jessica asked, still holding my legs up in a V.\n\n\"When I got too loud I was worried I would wake everyone up.\"\n\n\"You realized that too late.\" Liz joked. \n\n\"Anyway, he fucked me doggystyle while I played with my clit, and I came a third time. Then he covered my back, and I mean covered, it was a lot of cum.\"\n\n\"And you did it again this morning?\"\n\n\"Yes, it was softer, we were pressed against each other, making out after downing half a can of mints. Different than last night, but I had another really good orgasm. And he came a lot this morning for a guy who had just gotten off a few hours earlier.\"\n\n\"So after one night, the guy has given you four orgasms. That's more than any other guy has given you, right?\"\n\nI nodded yes. The only three people who had given me more orgasms than Chris were women, and Liz and Jessica were two of them. The other was a woman I met on spring break my freshman year and spent a night with, but she had a lot of toys she used to do that.\n\n\"Yeah, you totally should have let him give you a facial,\" Liz said.\n\nJessica rolled off my bed, satisfied with my story.\n\n\"Yeah, you two are getting married.\" She joked. Funny thing is she was right."
    ],
    "authorname": "nerdy_thirties_cpl",
    "tags": [
        "sorority",
        "cumshot",
        "blonde",
        "funny",
        "romantic",
        "halloween"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/how-i-met-my-husband-by-her"
}