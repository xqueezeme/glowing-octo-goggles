{
    "title": "Respect Your Elders",
    "pages": [
        "When I hear someone utter the old saying, \"try it, you might like it\", I think of when I discovered that I actually like broccoli covered with cheese when I visited my grandmother during the 8th grade. I was forced to eat the vegetable in fear of hurting her feelings, but realized I loved it. Or when I discovered jazz music in my college days. Little did I know I would recently discover something I enjoy, that I had no idea I loved so much, but first a little background.\n\nAfter I graduated from college, I was recruited by a large company for a position that was too good to pass up. It was a very good job with great pay and the promise for quick advancement. Despite one big hitch, I quickly accepted the job. The hitch? The company was located in the deep south, and I am from Nebraska.\n\nMy girlfriend at the time had no intention of moving and I didn't have any friends or family that lived in Atlanta. So basically, I would begin this new chapter of my life all alone. I was bummed that I had to say goodbye to friends and family. It was also tough breaking up with my girlfriend.\n\nHere I was, a new town, a new setting and despite having a terrific job, I felt so out of place. I rented an apartment near downtown Atlanta that was really nice. It was technically out of my range financially, but my parents gave me a nice going away/graduation present and set me up with a hefty account that would make me comfortable money-wise for a good while.\n\nAs I was setting up my new apartment, I was also starting my new job. Between my training, coming home after work to buy things to furnish my apartment, my first three weeks were incredibly busy. I didn't have much alone time or a chance to relax. It wasn't until my second month, that I had the opportunity for some free time to just catch my breath.\n\nOn the first weekend that I could do something for myself, I decided to enjoy the pool that my apartment featured. Although there were only 50 units, each apartment was large and really impressive. The whole complex featured some impressive amenities, one was a really great pool that looked like something from an expensive resort hotel. It was mid-June in Atlanta; I was needing to cool down and enjoy a dip in our pool.\n\nWhen I got to the pool, it had just opened at 8am. There was no one else except for one person who was doing laps between the length of the pool. I found a good spot to get a little sun. I thought I might work on my tan before I got into the water.\n\nAs I laid back, I gave a little more attention to the man swimming so hard back and forth in the pool. He was a black man and it made me think about how little I have interacted with black people in my past but knew that I would live in an area that had many more people of color than where I came from.\n\nI was not bothered by the fact that in Atlanta I would live with more black people than I ever did, but I also knew it would be different than my small town in Nebraska or in college. At work, there were more white people than black people but everywhere else I went, I could see I was the minority, but I was raised to treat all people with respect.\n\nAs I was reflecting on this, the gentleman got out of the pool. I got a better look at him and the first thing I noticed was that he was wearing a speedo swim trunk and it was being pushed to its limit! It didn't leave much to the imagination that he was well-endowed.\n\nThe man had a remarkable bulge that really stood out despite that fact that I wasn't trying to look for it. Immediately, I thought back to those times when I had heard that black men were huge. It sounded like a myth or urban legend but from the time I was a teenager I used to hear the stories that black men were well hung.\n\nI was thinking that this man could be prove that myth when I then realized he was walking straight towards me, with that package appearing to swing as he walked! When he came up to me, he smiled and held out his hand.\n\n\"Hi, my name is Charles. You're new here aren't you.\" He said in a friendly manner.\n\nI stood up and shook his hand, \"Just moved in last month. My name is Brad, nice to meet you.\" I responded.\n\n\"This place is great, isn't it?\" Charles said as he looked around. \"It's expensive but worth it, have you tried the hot tub?\" He pointed to the hot tub that was on the other side of the pool.\n\n\"Not yet.\" I answered.\n\n\"Well after I work out in the exercise room, I love to relax in it.\" He then pointed out the building that housed a full weight room and Nautilus equipment.\n\nI could see that Charles was very physically fit with muscular arms, legs and even a slight sixpack. His black skin was hairless, it made his athletic attributes stand out more prominently. In fact, if I was to judge him on his body and tight skin, I would guess he was in his thirties or younger, but Charles had a rugged look to his face. Handsome, but certain facial features made me wonder if he was older than his body made him look.\n\nHis head was clean shaven, and he didn't have any facial hair, but a few wrinkles suggested he could be in his late 40's or 50's. Still, with a well-defined chest, abs and the arms & legs of a professional athlete, it was hard to call him an old man.\n\n\"How long have you lived here Charles?\" I asked.\n\n\"Three years. Oh, hey call me Sarge. All my friends do.\" He proceeded to tell me he was a retired Sergeant in the army, serving over 30 years, mostly as a drill instructor at a boot camp.\n\n\"You're in your 50's?\" I asked stunned.\n\n\"57.\" He replied. I had to tell him how impressed I was that he was in such fantastic shape and that I could only wish to be in such good condition when I am older.\n\n\"Well, I swim or jog for over an hour every day, work out every other day and eat clean. Good genes don't hurt either.\" He responded.\n\nSarge sat on the patio chair next to me and started a conversation with me that lasted for the next hour. We spoke about ourselves, my new career and how I was from Nebraska. He told me he was divorced and started a security business after he left the military.\n\nI found Sarge to be interesting and easy to talk to. He was so manly and rugged with a deep voice and some of the stories he told about his days training young men for service were fascinating. I told him how different my small town in Nebraska was from Atlanta. Sarge then asked if I knew many black people growing up. I honestly told him only a few in college and that my hometown didn't have any black families living there.\n\n\"Atlanta must be a culture shock to you.\" He said jokingly. If he only knew I was just thinking the same thing before he came out of the pool.\n\nSarge asked if I liked barbecue ribs and that he was going to grill tonight. I told him I had plans, but he insisted I come for dinner. I accepted his offer since he seemed like such a nice guy.\n\n\"Dress casual now\" he suggested, \"it's summertime in Atlanta and it will be hot tonight.\" He grabbed his towel and left the pool area.\n\nThat evening I was getting ready to go over to Sarge's apartment which was right across the parking lot from my place. I decided to take his advice and wear shorts and a nice tee shirt. When Sarge answered his door, he was wearing a Polo shirt and blue jeans. He still looked remarkably young for 57.\n\nThe dinner was delicious, I commented how good the barbecue was. He told me it was a homemade sauce, passed down from his family. We sat on his large porch while we ate and stayed there while we had a beer after our meal.\n\nOur conversation once again turned to our past experiences and Sarge admitted something that stunned me because it seemed to have come out of nowhere.\n\n\"I haven't had sex in almost a year.\" He admitted. I was taken aback mostly because Sarge seemed like a man the ladies would run to. He was tall, built and had what I would consider good looks if I was judging another man.\n\nSarge told me after the divorce he concentrated on his business and just hadn't put himself out there the last couple of years. I then opened up and told him that I hadn't done anything since coming to Atlanta. I explained how I had to break up with my girlfriend and being so busy, I didn't have time to talk to another woman, much less date.\n\nAs Sarge started to talk about how his divorce changed him, I slipped into deep thought within myself. It had occurred to me that not only had I missed out on sex for over two months, but I also hadn't even had any sexual release in that time. I knew I had been horny, my cock got hard at different times throughout the day for no reason, but I simply had zero opportunity to even jack off.\n\nA wave of horniness suddenly rushed though me. My body was telling me that tonight, actually now would be a good chance to run home and find that release I needed. My cock was stiffening from just the idea of getting to play with it, finally, after this long drought of no orgasms.\n\nWhatever Sarge was saying to me was lost in the sudden urge to go home and jerk off. I even thought I could call my old girlfriend and enjoy some phone sex. Surely, she would be willing to have some. I snapped out of my deep thoughts and told Sarge I needed to run. He was disappointed that I had suddenly, out of nowhere, excused myself but even as he was trying to stop me and offer me another beer, I was out the door and walking briskly to my place. I left Sarge at his door shouting \"Brad! Brad! Come back!\"\n\nI hated to be rude to my gracious host but as soon as I got into my bedroom I stripped out of my clothes and jumped into my bed. I first called my old girlfriend on my cell phone, my cock was standing straight up, hard as a rock as I dialed. No answer.\n\nI stroked my cock, the sensation of my hand running up and down was exactly what I needed. I moaned from the first pleasurable sensation I gave my dick. I began to vision the last sexual experience I had with my girlfriend. I felt like we had a good connection and she told me I was a good lover.\n\nShe was beautiful and had a great body, I loved to fuck & eat her or have her suck my cock. I was visioning a sexual encounter with her, then suddenly the image of Sarge exiting the pool entered my mind.\n\nThat stunning body and even more, that mind-blowing bulge. I replayed the reaction I had when I laid eyes on him. But wait a minute, I'm thinking about a man? But I'm not bi and I'm certainly not gay! How could I be thinking of another man right now. I made myself rethink of my old girlfriend.\n\nBut that moment Sarge came up to me, the bulge was even more pronounced when he was close. Ok, ok, ok let me think about that hot secretary we have at the office. The one with the big tits that often wears a mini dress skirt and has those fantastic legs. She was smiling at me the other day, like Sarge smiled when he introduced himself at the pool.\n\nI started to envision Sarge pulling down that strained speedo and revealing his cock to me. What did a black cock look like? I looked at mine all the time. I was a healthy 7 inches and the three woman I had sex with said I had a very nice dick, but I know Sarge's is much bigger, but how large is it?\n\nIf my cock was hard before, it was getting like I never felt before. Almost numb with pure unadulterated stiffness. I pulled it down to my stomach and let it go. It spung right back up, and didn't even wobble a bit, it was so fucking hard.\n\nWhy am I fantasizing about another man? I can't believe I am thinking about a man with my cock this hard. What if I actually touched Sarge's dick? A big black dick, I never thought I would want to do something like that, but the image is so...so appealing. An odd feeling grips my stomach, it's like I'm cramping up. I am breathing hard. I feel very warm despite my apartment being cooled by the air conditioner.\n\nSarge is much older than me, but he seems so sexy and strong. He could probably have his way with me if he wanted to. What if he MADE me suck his cock, that could be sensual!! The rush of my excitement is so palpable. I feel like I am having an out-of-body experience!!\n\nI'm not only having my first fantasy about a man but my first interracial fantasy, my first fantasy about a person much older than me. The newness of it all is so exciting and different.\n\nI jack my cock slowly. I know I can shoot at any moment, but I want this to last. It will probably be the only time I fantasize like this. I am certain. I bet Sarge has an amazing cock. I bet the myth is true, especially in his case.\n\nSuddenly there is a knock on my door. I disregard it. I can't imagine anyone that is more important than what is going on. There is no way I am interrupting what is probably the most intense masturbation experience of my life.\n\nI am deep into the thought of Sarge, a cock, a big black cock. Me sucking a big black cock. Again... the door!! Now the knocks are loud. \"Goddammit!\" I scream as I jump out of bed and throw a towel around my waist. My hard-on is still raging even though it is covered with a towel. I open my door with just a crack and say loudly \"What!!\" in anger.\n\n\"Brad?\" A familiar deep voice comes from the other side.\n\n\"Sarge?\" I answer in response as I open the door wider and come out from behind it. \"What's...uh...going on?\" I ask. I am stunned that the man I was just so deep in thought about is actually standing in front of me again. I am also feeling embarrassment that I was having such carnal thoughts about him just seconds ago.\n\n\"You left so quickly, I wanted to see if you were ok.\"\n\n\"Oh.... yeah. I'm good. I just...uh...I had to do a few things...here...that I forgot I needed to do...um, how are you?\" I was rambling and sounded like an idiot. The images were flashing of him in those Speedos in my mind as I talked.\n\nSarge could see I was in a towel, but I was also trying to hide the fact that I had a hard dick pushing it out in the front. \"Were you in the middle of a shower?\" He asked.\n\n\"Oh no...I mean yeah, I was in the shower...when I heard the knock.\" Still stammering.\n\n\"Why are you not wet?\" He wondered out loud, he caught me lying. I stood in silence, not knowing what to say next.\n\nSarge pushed his way inside. \"I need to tell you something.\" I felt so vulnerable, defenseless, trying to hide my erection and not let on the fact that I was just fantasizing about this man. \"Sit down Brad.\" He commanded. I obeyed.\n\nI took a seat in the middle of the couch I had in my living room. My hands resting on my lap still fumbling to cover my dick which was still hard and probably leaking pre-cum. Sarge stood in front of me as I looked up at this man that stood 6'4\", easily.\n\n\"There is something that I was trying to tell you before you left. Something that I think is important you should know. There is a reason why I haven't had sex in about a year.\"\n\nI sat quietly and held onto every word he was saying. He was obviously trying to use his words carefully; this was something profound he was telling me. Sarge explained that he just didn't get a divorce. His wife left him. She did so because she caught him looking at porn but not just any porn.\n\n\"You see Brad. Like anyone else, I have an attraction for a \"type\". My type happens to be...men. Younger men. Younger white men...like you.\" His words floored me. I couldn't move, I couldn't speak. Inside, I was screaming excitement. My outward appearance probably resonated shock.\n\nThe porn his wife caught him looking at was gay interracial porn, Sarge explained. For many, many years he had fantasized about sex with a white male and by the time he was in his 40's, they had stopped having sex because he knew he just wanted to have sex with younger white men.\n\nAfter his marriage ended, he moved to these apartments and met a resident here. They became lovers until the man moved from Atlanta and Sarge was once again without a lover. Sarge said it was hard to find a male lover, he didn't go to bars or use online sites. He wanted to meet a man naturally he said.\n\n\"Then I saw you...\" Sarge stood in front of me and began to touch his crotch. He rubbed himself as he said, \"When I first laid eyes on you, I knew you were exactly my type. I was very attracted to you when I first saw you at the pool.\" Now Sarge was massaging his bulge. You could see it growing under his jeans. The amazing thing was that it didn't run down his pants but along the front.\n\nSarge continued to squeeze his shaft, that was showing through his jeans, it looked unbelievable. \"Now I heard you talk about a girlfriend and all...\" His hands gripping his thick and growing cock that was actually snaking to his hip. My eyes began to water, I hadn't blinked in the last couple of minutes. \"...but I have to think that the way you are looking at me you are a little curious.\"\n\nDespite his wearing jeans, you could make out the outline of a long, thick rod, just aching to come out. Easily over 10\" long and as thick as a cucumber, it looked so menacing even under his clothes. \"Oh yeah, I can see you are.\" He said in complete confidence.\n\nI could only nod, it was a very slow and small one. Again, my stomach was cramping, I never felt arousal like this before. \"You said you didn't know many black people growing up? You never made any black friends?\" He ran his fingers to his belt and began to slowly undo his belt.\n\nMy mouth moved but I couldn't make a sound. I was stunned from the poised manner that Sarge was enticing me with. He knew he had my complete attention, so he didn't bother with rushing anything.\n\n\"You have never seen a black cock before?\" Still speechless, I could only shake my head no. Like my nod, small and slow. Sarge had pulled his belt apart and let it hang, he was now going for the fastner on his pants.\n\nHe leisurely undid his pants. \"I have to believe that despite your inexperience with black men, you heard about us...about a special gift we are blessed with.\" Now his zipper was coming down, flirtatiously and measured.\n\nI again nodded, ever so slightly. I was a deer caught in the headlights; frozen and afraid. I was also incredibly aroused and was squeezing my own rock-hard cock.\n\n\"Is it true?\" I said in a breathless whisper. Now clutching my own cock through the towel, I decided that I wanted to see it and that I should show some signs of my curiosity. Sarge peeled open one side of his pants and then the other, slowly. His jeans were now open, I could see he wasn't wearing any underwear. Sarge walked up to me and was less than a foot away, his crotch right in front of my face.\n\n\"Is what true?\" Sarge asked in an ominous way. He knew exactly what I meant; want I was curious about, but he wanted me to say the words.\n\n\"Do black men have bigger cocks?\" My voice was stronger this time I spoke, probably because I wanted to know. My yearning was showing.\n\nIt was actually a redundant question because anyone could see Sarge was carrying a huge cock in his pants. He had squeezed and rubbed it to its steely hard state. It was only a matter of would he show me this humungous dick.\n\n\"Curious?\" I will never forget the sound of his voice saying that word. I responded in an infatuated manner, \"I am...I am...I am.\"\n\nOn my fourth \"I am.\" He pulled it out, the biggest cock I will probably ever see in my life. It was magnificent, beyond the images I pictured of what it might look like. The size, intimidating. The color, exotic. The rigidness, impressive. The length, mind-blowing. The girth, unbelievable. The balls, massive. I let out a sigh in response of laying eyes on it for the first time, it wouldn't be the last time I would react to it so emotionally.\n\nLike his body, he had no hair down there. No pubic hair and his nuts were smooth. The cock head and skin at the start of his shaft were a lighter shade of black but his rod was like the rest of his skin, a deep sensual shade of chocolate. The veins that ran down his cock were pronounced and swollen. One huge vein ran down the middle of his cock and others ran across, giving his rod the appearance of an exceptionally swollen cock.",
        "It only took seconds to understand the magic, the appeal that so many have for a black cock, especially one so well-endowed. I was immediately mesmerized, but strongly intimidated by it. That sent shivers through my skin. I was in awe of it, impressed with it, but his ebony spear scared the hell out of me. It also made me think about what my friends or family would say if they saw me right now, being so intoxicated by a 57-year-old black man with his cock in my face.\n\nSarge started to slowly work his cock in front of me, in a teasing fashion. He was uncircumcised, another fascinating aspect of this remarkable ebony snake, and he pulled the foreskin off his huge apple head, then slid his excess skin back over it. I was flabbergasted when Sarge grabbed it with his other hand, he was using both fucking hands to stroke it! I let out a whimper.\n\nSarge stroked his cock using different methods. He held it with one hand facing up and the other palm down, he gripped the base as he jerked the area around his huge head. He cupped and pulled his hefty balls, clamping on his nut-sack while they appeared to swell in the remaining portion of his skin purse. He twisted and pulled on his cock. He shook it and let it bob around with no hands showing incredible strength and hardness.\n\nFor five minutes he absolutely teased & tantalized me with a show that anyone who loves big cock would pay money to see, just mere inches from my face. I was bewildered, entranced and drawn to the staggering display of manhood in front of me.\n\nSarge knew he had me wrapped around his finger. I hadn't taken my eyes off his beautiful cock for a second. Yet, I hadn't made a move towards it. Sarge didn't know that I was frozen with fear.\n\nWhat if this was just a case of penis envy? What if I was just simply impressed with a dick that dwarfed mine in comparison? What if I loved it so much, I never wanted to have sex with a woman anymore? I really didn't know what to do, but I certainly wasn't going to leave or take my eyes off this remarkable penis.\n\nThen, there was a silent confrontation between us of who would make the first move. A battle of wills between the supreme motivator and the novice wanting to be introduced to interracial sex but hesitant to begin. Sarge decided an introduction should be made as he reached down and grabbed my wrist, placing my hand on his cock.\n\nInstantly, the fact that I couldn't wrap my fingers around his shaft made me heave deep gasps of air. Although I had a grip on this ebony masterpiece, I couldn't come close to touching my fingers to my thumb! His cock had tremendous weight as well, it felt so heavy, how could he walk around when it was hard??\n\nMy hand slid up & down his cock. The veins felt like they were made of metal. His cock, despite covered with a soft layer of skin, felt like it was made of granite. I was out of my mind with lust and hunger. I did something I couldn't believe was capable of.\n\nI kissed his cock.\n\nNot a little peck or a friendly smooch, but a deep soulful kiss with affection on his huge head. I was smitten. When I pulled away in astonishment with my action, I looked up at Sarge. Now he was quiet, he didn't smile, wink or nod. He simply looked into my eyes deeply. It was frightening the power he had over me.\n\nThis was it. I was about to begin a new adventure. To experience something, I would have never dreamed I was capable of doing before this day. I have never met a man who admitted that he sucked on another man's cock, but I was about to. I was as nervous as much as I was excited to do it. I opened my mouth wide because I knew it was a mouthful and Sarge's massive head slipped between my lips and deep into my mouth.\n\nI tightened my lips and mouth on his cock. His bulbous head completely filled my mouth, I knew I couldn't get much more of his cock in my mouth, but I managed to stuff about half of it in my orifice. As soon as I did, I coughed and sputtered, it had hit the back of my throat and I gagged on it. I pulled it out and took a deep breath. I looked up at Sarge, still no reaction. He was as stoic and intense as he was silent.\n\n\"It's so big.\" I muttered in embarrassment of my faux pas before stuffing it back in for a second time. This time I realized there was a salty but sweet taste to his skin. My mouth watered as I began to enjoy the taste of Sarge's big black cock. That made it much easier to slide my mouth up and down this intimidating beast.\n\nSarge's only movement was to hold my shoulder and grip the back of my head as I continued to pump his cock into my mouth. My hand griped the base of his cock with one hand and my other had held his balls, which was not easy to grip with one hand. The moans that filled the room didn't come from Sarge but from me, I was enjoying sucking on my first black man. I would be lying if I didn't admit that the first five minutes of blowing him was the most exciting thing I have ever done.\n\nI pulled my mouth off his cock for the first time and saw that I had already made a sloppy mess with my never-ending supply of saliva. His cock head was glistening with my spit all over it and I realized that I had drooled a lot on my chin and chest. I switched tactics and began to run my tongue up and down his thick pipe, spreading the saliva beyond what would fit in my mouth.\n\nI felt a rush of amazement that I had to run my tongue up and down to such mind-blowing lengths. At estimation, without a ruler, I would have to say his cock was at least 11 inches, I wouldn't be shocked if it was 12. My earlier visual estimation was correct, I have held cucumbers that weren't as thick as Sarge's penis. The fact that he could fill this cock with enough blood to get it this hard seemed like a medical miracle.\n\n\"Sarge, you cock is so beautiful.\" I told him with honest appraisal.\n\n\"You're doing so well Brad.\" He told me. That meant a lot, to know he liked what I was doing. \"So, you like black cock?\" he asked.\n\n\"Oh my god, I love it!\" I admitted. \"I love black cock.\" Sarge bent down and held both sides of my face. He then kissed me, which surprised me and made my skin jump. Suddenly I felt his tongue, and we began to French kiss. I once told a girl I dated that I would only French kiss a girl if I really liked her and was attracted to her. I responded more passionately with Sarge than with any woman I ever kissed like that.\n\nWe kissed for a few minutes and Sarge asked me if I wanted to suck his cock some more. My response was simply, \"Please!\" and I returned to sucking his magnificent rod while sitting on my couch.\n\nSarge took off his shirt and slipped out of his jeans, as I continued to slurp up and down his huge head. My mouth just kept getting wetter and wetter. I also began to pick up speed, going up and down his cock. I didn't know I would be so noisy at oral sex but between my moaning and the slurping sounds I make, I hoped I wasn't making Sarge wish I was as quiet as he was.\n\nIt really surprised me how quiet Sarge was. I know some people like to talk dirty, some moan but Sarge was as quiet as a mouse throughout the entire time I sucked his cock. At most, you could hear him take a deep breath now and then, but his style was a deep brooding intensity that confounded me.\n\nWell into the 20-minute mark of my first blowjob, I realized that I had almost neglected Sarge's phenomenal balls. I held them in a tight grip, pulled on them a lot and gave then a squeeze now and then, but these nuts needed some attention, especially the kind I wanted to give them.\n\nI never thought I could be so deeply drawn to a man's testicles, but in honesty, I just discovered tonight that a black man's sexual organ drives me crazy. Sarge had these striking pair of balls, first because they could easily be the size of golf balls and second, they hung low. My ball sack was tight, Sarge's hung down as if the heft of his giant nuts stretched the skin that housed them after so many years.\n\nI lifted his monstruous cock and began to lick on his sack with those heavy hangers. Every time I tasted a section of flesh on Sarge for the first time, my mouth would flood with saliva. His skin was so flavorful, his balls were the best tasting.\n\nWhen I took one of his balls in my mouth, I immediately understood, like his cock, I couldn't fit as much as I wanted to in my mouth. But that just meant I would spend more time showing love to both of them. Sarge tried to take his cock back from my grip, but I wouldn't let him have it. After all, he has jerked on that beauty his whole life. Let someone else enjoy it!\n\nI separated each nut by sucking it in my mouth and pulling it with my mouth. When it would pass my lips and fall out of my mouth, I would repeat the same thing with the other one. All the while as I took turns on the seargents balls my hand was furiously jacking his cock.\n\nMy moans still continued as I sucked & licked his balls as I stroked his dick. Every minute that passed I fell in love with this incredible package more and more. I just went wild on his cock, circling all around from burying his cock in my mouth, to licking and kissing his shaft to showing appreciation to those hefty testicles. It had been over thirty minutes since I started going down on Sarge and I wasn't close to getting tired or losing craving for his stunning ebony manhood.\n\nSarge had something else in mind, something that I should have known would happen but would really get my heart racing. Without effort Sarge picked me up and threw me over his shoulder. Although I am much shorter and smaller than he is, I couldn't believe he carried my 5'9\" body like a rag doll. I could have been 10 pounds rather than the 160 I weighed.\n\nMy towel amazingly was still wrapped around my waist when he laid me on my bed. Sarge walked out of my bedroom, but I knew he would return, and I knew what was coming. I was even more intimidated than when I realized I would be sucking his huge dick.\n\nSarge was going to fuck me.\n\nWhen I opened my towel, my notion was correct. I had oozed a bunch of precum, it was a mess. I used the towel to clean up before Sarge returned, but my hard-on was still going strong. When Sarge walked back in, I was laying on my back, completely nude. He had something in his hand, it was a matter of seconds that I discovered that he had brought a tube of lube with him. We never said a word to each other. Sarge just took the lube and squeezed out a hefty amount on his cock and I positioned myself to the edge of the bed.\n\nI wasn't about to protest or suggest we try it another time. I probably wanted this more than Sarge, even if I knew this would be a challenging endeavor. I leaned back on my elbows, propped myself up and watched as Sarge totally lubed his cock. The ointment made his cock even sexier as it shined and glimmered making the black skin of his cock glow.\n\nAs Sarge stepped up to the edge of the bed, I opened my legs. My cock was sticking straight up. Sarge poured some on his fingers and started to apply it to the outer rim of my ass. After adding more to his fingers, he slipped a finger in my ass, then two, working them around and beginning to stretch my virgin asshole. When he got to where he could slip both fingers with ease, he squeezed even more on his cock head.\n\nHis huge head was covered with the synthetic lube when he said in his deep voice, \"Ready?\"\n\nI answered, \"Yes.\"\n\nHe then asked, \"How do you want your first black cock?\"\n\n\"Give it to me anyway you want to Sarge.\" I replied.\n\nI lifted my spread legs in the air and Sarge grabbed them behind the knees. He bent his knees and I watched as he lined up his cock head to my asshole. Sarge spread my legs as wide as they could and bended a bit more. His cock head rested right on top of my anus. My last words before he penetrated me were, \"I'm going to love this.\"\n\nI could feel the weight of his cock and the building pressure on my asshole. Suddenly my anus started to open and expand. I could feel Sarge's cock being pushed into me, slowly. I let out a gasp, it was already an incredible feeling. Sarge's cock was so hard it didn't bend or give way, it held firm and made it so easy when I felt the unmistakable sensation of his head slipping past the rim of my asshole. I was immediately stretched beyond belief and my limits tested. I watched as Sarge's impressive ebony rod slipped deeper and deeper into my body.\n\n\"Oh...my...God!\" I exclaimed. The unbelievable feeling of being sodomized by this well hung, African American could never have been foreseen in my wildest dreams. The reality of this moment was made so vividly by the intense physical sensation and the spectacle of Sarge's giant cock sliding in and out of me.\n\nI shook my head wildly, thrashing about, whimpering & moaning loudly. Nothing would ever match the intensity, the overwhelming raw emotion I was feeling. When I looked down to see that most of his cock was in me I loudly gasped, \"Fuck! I love your big black cock!\"\n\nI could hear Sarge breathing deeply but as far as noise, that was the extent of this silent lover of mine. Then he began to go to work. I'm just going to give you a spoiler alert right now for my story. Sarge might just be the most talented and skilled lover a man could be. His strokes are powerful, steady and always in rhythm. Whether he fucks fast & hard or slow & easy, he is without a doubt, fantastic at laying pipe. His magnificent tool aside, he could make anyone, man or woman, crazy with lust the way he could pump that big cock into your body.\n\nI know others dream about having a lover like Sarge, but I can't out into words how truly talented he is at fucking. He is like a sex god in bed, perfect in every way and mind-blowing with his technique. Sarge could have been a gigolo if he wanted to be, and I know all of his customers would have been satisfied.\n\nWe were just ten minutes into Sarge fucking me when I realized something alarming and quite unexpected. My arms were stretched out and I was clutching my bedsheet with each fisted hand. I was gritting my teeth mightily, taking Sarge's pounding. He had quickly built-up speed and thrust in his strokes, showing me no mercy despite the fact that I had never had a cock in my ass, particularly one his size. Throughout the entire night I had barely touched my cock, except when I first got home. I looked down to see it swinging wildly in the air from Sarge's unbelievable physical onslaught on my poor asshole.\n\nI felt my stomach once again knot up and cramp. It was a strange pain, one that I felt when I went through puberty and before I had my first nocturnal dream. The sensation grew and grew as Sarge continued to lay into me. He had my legs spread wide, holding them down as he pumped that huge cock into me. I was taking at least 8 or 9 inches of his cock in me. My body was enjoying the thrill of my first interracial experience when I realized I was about to cum!!!\n\nI wasn't stroking it or anything. It was unmistakable but much more intense than any orgasm I had ever had before. It was actually so strong it scared me, simply because I had never felt such a raw sensation. I had NEVER cum like this and I couldn't believe I was capable.\n\n\"Sarge!! Oh Sarge! Oh my God!\" Were the only words I could muster. I was trying to warn him, but Sarge was too busy dominating my white anus to stop or slow down. I couldn't hold it or control it a second longer and I couldn't let go of my grip of my sheets, my hands were frozen in their clutch from the pounding of Sarge's fantastic tool.\n\nMy cock exploded in a firework of semen. My first load of cum that had escaped my cock in over two months went in all different directions like a can of soda that had been opened after being shook. The pressure of holding this orgasm for so long just overtook me and made for an unforgettable climax.\n\nCum shot up in the air. It even hit Sarge, but it didn't faze him or cause him to slow down. He simply continued to fuck me as my cock made a huge mess. I bore the brunt of the cum shower. My body was covered in semen when it was all over.\n\nI was drained in more ways than one. Sarge slowed down and then pulled out. My asshole needed the break as well. He had only pounded it for less than a half hour, but it was feeling like I had been fucked all day. He grabbed the towel that already had my precum, wiping my body and his off. He did tell me that was amazing but warned me that it only turned him on more and he wanted me a whole lot more. I told him I was more than willing, but I needed to catch my breath.\n\nSarge only gave me five minutes while he applied a fresh coat of lube on his cock. I was laying on my side when he laid next to me. \"You're so sexy.\" He said as I could feel his cock making its way back inside me from behind. I positioned my leg to make it more comfortable and I soon felt the tightness of his cock slipping deep in me. The added lube helped and Sarge was always considerate enough to reapply more lube to his monster whenever we changed positions.\n\nSarge pulled me into him with his arm wrapped around me. He clutched my chest as he worked himself into me. We were soon kissing again as he fucked me side to side, spooning me. I whimpered as he bore into me, his cock once again driving me wild.\n\nIt wasn't even ten minutes when Sarge wanted to fuck me with power and speed again. He positioned me in the middle of my bed on my knees and elbows. Doggie style has always been my favorite sexual position, but I never would have believed that I would be the receiver before tonight.\n\nWhen I fucked girls doggie style, I was always on my knees. Sarge did something amazing and remarkable. He stood flat footed on the bed and simply positioned himself by bending his knees. This had to be physically taxing, it would for me, but the entire 20 minutes Sarge fucked me, he did it by using his legs and hips.\n\nLet me tell you also, if I thought he fucked me hard while I was on my back, that was nothing compared to how he laid into me doggie style. Sarge also must have gotten deeper into me from that position because his hips slapped my ass. Speaking of slapping, I could feel Sarge's balls slapping against mine and on my taint, an amazing feeling and incredible to imagine.\n\nBefore tonight I would have never considered myself feminine or girly in any way. I played football in high school, hunted deer and was always considered masculine by my friends and family, but when you are fucked by a 12\" black cock for 20 minutes hard and fast, you tend to sound passive and womanlike. I whimpered, I moaned, I cried out the oohs and ahhs that a girl would make. My face cringed, I gritted my teeth, my eyes squinted, and you would have thought I was in pain by my facial expressions.\n\nFor twenty minutes, I was loud with my cries from being dominated. Sarge was as quiet as ever, I looked behind me many times, looked at the stud who was working me over and his face was frozen with an emotionless stare. He was disciplined and cold in his facial expression.\n\nThe whole time he had me doggie style, I had to question if he was truly 57, this man did not fuck like he was six years older than my father!! He was an amazing physical specimen. So full of life and power. I was 32 years younger, I couldn't do most of the things he did to me or for as long. I had sucked and fucked this black stud for over an hour. He showed no signs of slowing down. I had to keep up with him, I didn't want to disappoint him in anyway.\n\nI needed the five-minute break Sarge gave me when he went and got some water. When he returned with a bottle of water for me, his cock was still hard as a rock, sticking straight out. I was amazed, but I had to ask, \"Are you on Viagra?\"\n\nSarge laughed, \"Why do you think I take Viagra?\"\n\n\"You're over twice my age and you have kept that incredible erection since we started. You have to be on a pill or something.\" I stated.",
        "\"You want to know why my cock is so hard?\" he asked.\n\n\"Hell yeah.\" I responded.\n\n\"I'll show you why...\" Sarge once again lubed up his cock. He laid on his back, his cock standing tall and mighty. I knew what he wanted and I threw my leg over him. It took about thirty seconds to have him back into me deep. As I rode his cock and once again began to whimper and moan, Sarge pulled me down and whispered, \"Because I find you so hot and sexy!\" We kissed as I rode his huge cock for about 15 minutes.\n\nNext, we tried reverse cowgirl...err cowboy. Once again, a fresh layer of lube was applied, I worked his cock into me. It was starting to get easier to take Sarge's huge shlong, but never easy. I decided to match Sarge's impressive stance when he fucked me doggie and rode him only with my feet and hands touching the bed as I pumped my body on his pole. I looked like I was playing a game of Twister. I don't know what was tougher, working out like an aerobics instructor or taking Sarge's huge black dick. I was exhausted after 15 minutes of fucking this way. Although I was sporting another erection (it came back when I was riding Sarge), I was tapping out. I told Sarge that I couldn't go any more.\n\nWe had fucked for around two hours, a personal record for me. As I laid there on my bed, catching my breath. I looked over and saw that magnificent ebony manhood of Sarge's. It was still hard, still impressive, still intimidating. I also realized that he hadn't orgasmed yet.\n\n\"Sarge, what can I do to make you cum?\" I asked exhausted but with a complete yearning to please this man.\n\n\"What do you want to do?\" He questioned.\n\nI thought about it, fucking this man felt so good but completely exhausting. I don't think I could take his brutal lovemaking for another five minutes. What I really enjoyed was sucking that wonderful black baby-maker, the thought of tasting his cum started to perk me back to life. \"Let's clean up, I have an idea.\" I told him.\n\nWe took a shower together and I washed the sergeant, lathering up his dick and body with a soapy washcloth. Sarge could have been a Nubian king and I, his faithful subject, giving my majesty a proper cleansing. As soon as I rinsed all the soap off of him, I bent over to take him in my mouth again. He never lost his brilliant erection for one minute during the wash and when I started sucking him again, I realized that Sarge was as virile as a man could get.\n\nI didn't have to bend over completely to get Sarge's cock deep in my mouth and I sucked him bant over for well over ten minutes. Eventually, I got on my knees and Sarge held my head, fucking my mouth. Every once and I while he would pull it out of my mouth and rub the head all over my face. When my mouth wasn't stuffed with Sarge's cock, I would praise and worship his it with my words.\n\nWe really didn't recognize that I ran out of hot water until the shower got really cold. We just simply jumped out of the tub. I sat on the bathroom floor, sitting on my butt as Sarge straddled over me, putting his cock back into my mouth. My back was supported by the tub and I started to jack off my cock. Sarge was facing the tub and had crouched so that his dick was in front of my face. He had one hand on the shower wall for support.\n\nI could bob my head back and forth and I did so at a quick pace as Sarge was working his shaft with his other hand. One of my hands had a hold of Sarge's leg and the other was jerking my own cock. When Sarge would pull his dick out of my mouth, I would instantly go to his balls, licking and sucking them. He stroked his shaft as I did that and would return his cock into my mouth.\n\nI don't know how long we were in this position; I was having too much fun and enjoying myself to keep up with the time, but I am certain it was longer than when we where in my living room. Again, Sarge never made a sound, never made a face. He was a rock. I could feel my second load building up, but I was determined not to cum again until Sarge did. I did whatever I could to draw it out but it was getting harder with every ten minutes passed.\n\nI kept an eye on Sarge, although he wore the same blank, intense stare. I looked for any sign he might be getting close to cumming. Suddenly, Sarge closed his eyes and threw back his head. I felt his cock begin to throb mightily in my mouth. The powerful pulses that I could feel resonating thought his shaft only told me one important bit of news. He was about to cum.\n\nSarge opened his mouth and let out a guttural moan, deep within his soul. I continued to suck faster, sliding my mouth over the first 6 inches of his cock with as much speed as I could muster. Saliva was pouring out of my mouth and collecting all over my chin and chest. I moaned loudly when Sarge cried out, \"Oh shit!\"\n\nIf you think he came in the next few seconds, you would be wrong. You see, Sarge explained to me later that night his M.O. in having an orgasm and why he is so quiet during sex. Sarge practices the art of having complete control of his body and his orgasms. He said when he has sex, he is in deep concentration to suppress his urge to cum. He likes to build and build his release. During sex, he is fighting off any opportunity to cum. He wants to make it last a long time and he proved that he could go a solid three hours that night.\n\nHe said by holding off an orgasm, when he does have one, it is ten times more powerful and produces a bigger load than just getting off the first opportunity that comes along. He also told me later that night all the sounds and facial expressions he finally did make was him fighting off that climax at its strongest point. He said he could have cum when he first threw back his head but he was using everything he had to prolong it the ten minutes he did.\n\nI wish you could have seen what I had the pleasure to witness. It was the most incredibly erotic, sensual thing I have ever seen a person go through, man or woman. I looked up, continuing to suck Sarge's cock and watched him writhe in heighted ecstasy. The man who barely said a word for over three hours of incredible sex was loudly exclaiming \"OH SHIT!\" over and over. His moans were as deep as his voice, seemingly coming from his soul more than anything. The expressions on his face were intense and extremely sensual. His cock felt like it was breathing, it would expand and contract back while it was deep in my mouth.\n\nSuddenly, Sarge pulled his cock out of my mouth. I wiped the collection of spit that covered my chin and I waited with baited breath what was going to happen next. Sarge ran his hand up and down his cock, much slower than the speed I was pumping my mouth on it. \"Ohhhhhhh\" he moaned. I badly needed to cum but I myself was holding back, waiting for Sarge. If I didn't cum earlier that night, I wouldn't have lasted this long but I to slowed down in fear I would climax before Sarge.\n\nHe was stroking it just over my face, I nearly went to lick his balls some more when he stopped stroking it. I could see him holding his breath and then it happened. I had watched my dick shoot cum many times, I was always proud of the way that it shot out like a water gun but the first huge load of semen that left Sarge's cock drooled out like a full tube of toothpaste that was squeezed tightly.\n\nIt was a large amount and instantly I could see that Sarge's cum was extraordinarily thick and creamy, his semen was whiter than mine! Because I was sitting there in amazement, my mouth was wide open and I caught a good amount of the first load that drooled out of Sarge's cock head, the rest spilled on my chin. Instinctively I swallowed that first glob of semen that fell into my mouth, it was really gooey, like yogurt but very warm and had a fruity taste to it amazingly enough, I didn't expect that.\n\nSarge slowly pulled his grip back then forward and a second load of cum spilled out before I could open my mouth again and I missed an equally copious load that covered my face. Sarge was loudly going \"Ahhhhhhh\" and slowly stroking when more black seed spilled out of his cock. By the time I willingly opened my mouth again I had cum all over my face.\n\nI lifted myself to come right up with my mouth to his head to accept the next load, it filled my mouth more than what I had swallowed. By now I was cumming and I moaned while quickly swallowing what Sarge just deposited in my mouth. I didn't know how much more there would be but I was already amazed how much semen the man had dropped. I don't know what it was about Sarge's semen that made me want to swallow it, but it was really exciting to eat his cum.\n\nWhen Sarge stroked his cock the fifth time it was undoubtedly the largest amount of cum to leave his body so far, it had actually left with some force and totally missed my mouth landing on my forehead and it quickly started to drool down the side of my face with a heaviness and due to the bountiful amount of cum it was.\n\nWhen Sarge drew his grip back, there was a little spurt of cum that escaped. Of course, when I say a little spurt, I would actually estimate it was still more than a tablespoon of black seed. I caught the next load with my tongue stuck way out of my mouth and when I drew it back in, I had yet another mouthful of cum to swallow.\n\nBy the time I had finished cumming, the first of Sarge's final three ropes of semen landed on my face and neck. The last two went straight down my gullet because I had wrapped my lips around his head, so I didn't miss anymore.\n\nHis climax easily lasted over 30 seconds and I counted 10 large loads of semen he shot and a few sizable droplets he spurted as well. His hot cum felt so thick and heavy on my face. I knew I was covered in the sergeant's black seed. I used Sarge's cock head to scoop up a large glob of his cum on my cheek and cleaned his head off.\n\nHe helped me up and I quickly ran to the mirror to see the mess he made. Including what I swallowed, I wouldn't be surprised if he shot over a half-a-cup of semen. I know that sounds like a bold estimation, but I am actually being conservative with my guess.\n\nWe both cleaned up and jumped into bed, Sarge and I kissed some, touched each other and talked for the next two hours until we fell asleep in each other's arms. I dreamed of his cock fucking me and sucking it, even asleep I couldn't escape the hold it had on me. When I woke, I saw it was 6:30 in the morning. I looked over at Sarge and he was sound asleep on his back. I had to see that cock again. I carefully, slowly pulled the cover that he was sleeping under down and exposed his cock. Even semi-erect it looked so awesome and meaty. It twitched and throbbed in his sleep. I started to play with my cock as I stared and admired it but it just simply made me hungry for it. I carefully pulled myself up and over to him and took his cock in my hands, it actually started to grow as soon as I touched it and I began to stroke it.\n\nWhen I started playing with it, Sarge's cock came alive and hardened in less than a minute to its full glory, I debated if I should leave it alone and let Sarge sleep or get another taste of his delicious dick. I thought, \"what the hell\", and buried it in my mouth for the third time in the last 214 hours. Again, I moaned and made the loudest slurping sounds. I was sure Sarge would wake but he remained sound asleep. I couldn't just suck this man's cock in a slow, leisurely pace. I went crazy with interracial lust on it, sucking it like I was possessed.\n\nIn his sleep, Sarge opened his legs, I used the space to lay between his legs on my side, able to stroke my own cock while I enjoyed his. Sarge would moan and even put his hand on my head, but he seemed to remain asleep even if I might have pushed him into a REM state. I sucked his balls and pulled them with my mouth as I stroked him. I was dumbfounded how he could sleep while I was doing all of this.\n\nThe clock read 7:10 when I looked over, I had been sucking the sergeant for over 30 minutes. I noticed his shaft started to pulse and throb in a familiar way. I guessed with him sleep he couldn't exert his complete control over his orgasm and he might be on the verge of having one.\n\nI was thrilled at this and continued my action of bobbing up and down on his fat head while jerking his shaft. I started to cum at the thought of getting to swallow another load from this beautiful black cock. When I finished, I used my free hand to cup and squeeze those incredible testicles. His cock was really coming to life.\n\nSuddenly, I felt a large mass of thick cum fill my mouth, his cock was deep in my mouth when it shot, I had to pull off his cock. Sarge breathed loudly and I saw his eyes open. His next load shot on my face before I could reinsert it in my mouth but from then on, I took every drop in my mouth. Sarge weakly moaned, \"Shit! Oh fuck\" in a sleepy tone but I am sure he was able to experience the orgasm awake. His cock kept filling my mouth and as soon as I swallowed, a fresh batch of black seed filled it.\n\nI had swallowed six times. His rich, creamy cum was hard to accept in the quantity it was delivered in, but I managed to get most of it down my throat. Sarge half asleep looked down at me continuing to clean up with my mouth and asked in a playful manner, \"What are you doing, Brad?\"\n\n\"Just thought I would fix me some breakfast.\" I told him."
    ],
    "authorname": "NineIsFine67",
    "tags": [
        "interracial",
        "gay",
        "bbc",
        "oral",
        "anal",
        "cum swallowing",
        "old young"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/respect-your-elders"
}