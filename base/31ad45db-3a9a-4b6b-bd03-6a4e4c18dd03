{
    "title": "The Year of the Cat Ch. 13",
    "pages": [
        "The following day, after work, Matt sat at his bedroom desk, filling out important job paperwork that he just discovered needed to be filed the next day. Only two pages remained to complete the task when he heard the bedroom door opening. \n\nBubsy cat pawed across the bed room floor to Matt's desk. The black feline leapt up on to the desktop and casually sat directly on the page Matt was writing on. \n\n\"Well, hello!\" Matt exclaimed playfully. Bubsy nuzzled Matt's chin, purring. \n\n\"I know... I promise when I'm done I'll fix you a bowl of tuna fish. Ok, buddy? Just give me a few more minutes.\"\n\nBubsy allowed Matt to continue his work, stepping aside to watch closely nearby. \n\n\"I'm gonna miss you while I'm away, buddy.\" Matt said to the cat while he wrote. \"You gonna miss me?\" Bubsy gave Matt a silent, slow blink in reply. \n\nFinally, the last of the forms had been filled out and put away, ready to file in the morning. Bubsy followed Matt eagerly towards the kitchen. \n\nWalking towards the dining room, Matt could see Janice and Kendra sitting on her bed through the open door. The girls were sharing a joint while music played quietly from Kendra's phone. \n\n\"Hey, Matty! Come in here and hit this!\" called out Janice. \n\nKendra laughed. \"...And smoke this joint too!\" \n\nMatt and Janice chuckled through a blushed smile between them. \n\n\"I'll be there in a second. I'm gonna feed this kitty.\" Matt said, reaching for a can of tuna in the pantry. \n\nKendra laughed again. \"That's what's up!\" turning to Janice. \"You hear that, girl? Matt wants to feed your kitty!\"\n\n\"Kendra!\" Janice gasped. \"Geeze!\"\n\n\"What!?\" Kendra giggled, exhaling a cloud of white smoke.\n\nMatt quickly prepared Bubsy's tuna, chopping it up finely in his bowl. The purring feline rubbed affectionately against Matt's leg when he sat the bowl down on the ground. \n\nMatt then walked into Janice's room to grasp the offered joint from Kendra's outstretched arm. \n\n\"Cheers.\" said Matt, inhaling. \n\n\"Oh! Matty!\" exclaimed Janice, suddenly. \"Come here and sit between us!\" She pulled out her camera phone. \"I need a selfie of us three.\" \n\nMatt set the joint down on the ashtray and nestled himself into a seated position between the two women. Janice extended her arm, holding the phone aloft. \n\nJanice and Kendra crowded around Matt to fit themselves into the camera frame. Matt couldn't help but to give a genuine smile when he felt the warmth of the women's massive breasts squeezing against him. \n\n\"Say 'CHEEEESE!'\" exclaimed Janice. \n\nThe camera snapped a charming image of the three's smiling faces. \"Oh! This is perfect!\" Janice squealed. \"I'm getting this one framed, for sure! You're both getting copies too.\"\n\nJanice's eyes lingered for a tender moment on the image displayed her screen. \n\n\"Oh... you guys...\" she sniffed.\n\n\"Don't you dare start that crying again, girl!\" Kendra said, sternly. \"We got time for that later.\"\n\nJanice wiped her eyes. \"I know... you're right. I try to forget... but then I remember and It just stabs me in the guts.\" She laid her head affectionately on Matt's shoulder.\n\nKendra giggled. \"You need your guts stabbed the RIGHT away!\" she laughed, patting the bulge in Matt's lap. \n\nMatt blushed a shade deeper. Janice rolled her eyes trying to be stern, but broke almost immediately into giggles at the sight of Kendra's large grin. \"Could we talk about something else besides dick, please?\"\n\n\"Oh! Ok...\" Kendra thought for a moment. \"When's the last time you got your pussy licked?\"\n\n\"Jesus, Kendra!...\"\n\n\"Excuse me, Miss!\" Kendra gave Janice an admonishing look. \"You sat there and watched the last time I got my pussy ate!\" Kendra exclaimed. \"I can't just ASK about your last time?\"\n\nJanice sighed. \"Well...since it's just you two:...Truth is... I don't have a first time, let alone a last time.\"\n\nKendra gasped, completely taken aback. \"Ok... Game over. Are you fucking serious, Janice!?\"\n\nJanice was suddenly alarmed by the grave tone and the wide eyed amazement Kendra projected. \"Y-Yeah... what's the big deal?\"\n\n\"Oh...\" Kendra looked like she wanted to cry now. \"Oh, girl... Oh, you poor bitch!\" \n\nKendra turned to Matt, seated close beside her. \"Do your home girl a solid, please! Give her that gold medal mouth so she can have a REAL orgasm for once, please?\"\n\nMatt held up his palms, bowing his head. \"Kendra... look, Janice and I made an agreement... her... 'kitty' is off limits, ok?\"\n\nHe saw Janice's hand reach over and pat his knee, as if to say: 'that's enough. it's ok'. Janice stayed quiet for a moment, staring at the floor, lost in thought. \"Like... how good is it supposed to be?\" she asked Kendra, slowly. \n\nKendra blew out her nose. \"Shit... the way HE does... it'll make that big 'O' you had on his lap seem like a tickle!\"\n\nMatt heard a sudden intake of surprised breath from Janice. She bit her lip, casting her eyes shyly up to Matt's. She struggled to speak. \"I... uh...\"\n\nAn awkward silence fell. \n\n\"...She wants you to eat her pussy out tonight.\" Kendra said to Matt, flatly. \n\nMatt's eyes widened in amazement. \"Are... are you sure?\" \n\nHe immediately felt a sharp elbow in his side from Kendra.\n\n\"Ow!\" Matt winced. \"I mean... uh... Sure!\"\n\nJanice offered no correction to the proposal. Another silent moment passed. Matt gulped. \n\n\"Jesus H. Jefferson!\" Kendra raised her arms in frustration. \"Fine! I'll get this party started then!\" \n\nWith that, she reached over and pushed Matt onto his back against Janice's bed. Kendra undid Matt's pants and quickly had them gathered around his ankles. \n\nAs if it had been agreed upon earlier, the three simultaneously removed their shirts and tossed them aside. \n\nKendra easily grasped Matt's flaccid penis, stroking it awake with tender sweeps of her supple palms. \n\nJanice smiled down into Matt's eyes as he lay prone on her bedsheets. She bent forward, letting her enormous naked breasts dangle before his hungry eyes and lips. She shimmied her shoulders, ever so slightly, creating a massive, lumbering sway of titty mass. Janice's erect nipples grazed against Matt's outstretched tongue. \n\n\"Well, well!!\" Kendra exclaimed, holding the shaft of Matt's now fully erect, throbbing dick. \"Hello, Mr. Perfect!\"\n\nJanice looked over her shoulder towards Kendra, who was kneeling down to face Matt's solid cock. A tinge of envy shot through Janice's loins, watching Kendra's lips and tongue bathing his dick.\n\nMatt's open mouth waited eagerly for Janice's massive tit to be pressed into it. When he felt the soft, supple weight of her giant tits sliding down his chest instead, he opened his eyes to see. \n\nJanice lowered herself off the bed to her knees, opposite Kendra. Janice seemed to be in a trance as she leaned forward and started planting small kisses up the thick shaft of Matt's dick. \n\nKendra's eyes widened at Janice's zealous mouth on Matt's fat cock. Kendra shot him a glance of impressed approval before she once again bent forward and joined her friend. \n\nMatt begged himself not to fall into a trance watching the two gorgeous women running their lips and tongues over his veined shaft, back and forth. \n\n\"Hooollly shit!\" Matt hissed at the incredible sensation of his thick cock head being traded between two adoring lips and two wet, playful tongues. \n\nThe women often gazed lustfully into each other's eyes, occasionally letting their mouths' sensual duty focus on one another. Their moans of passion and the sounds of sucking, smacking lips were the only noise in the house. Matt reluctantly allowed himself to look down at Kendra and Janice tenderly make out with each other. \n\nAn involuntary groan of pleasure escaped him, staring entranced at the beautiful vision. The girls attention was drawn back to Matt's amazed, slack jawed expression. Janice and Kendra both smiled seductively at him. \n\nKendra continued to worship Matt's dick on her knees, sucking him with renewed fervor. Janice, meanwhile, approached Matt's face to cradle his head while their mouths met in breathless passion. His hands found her massive breasts and gently squeezed the endless expanse of perfect softness. \n\nKendra felt the tell tale sign of Matt's imminent orgasm in her mouth as she sucked his dick eagerly. He moaned in frozen ecstasy as his cock blasted cum into Kendra's throat. She swallowed every drop with stunning expertise. \n\nWiping the corners of her mouth with her fingers, Kendra stood, smiling at Janice. \"Your turn~!\"\n\nJanice and Matt paused their make out session to smile at each other. \"Uhhm... where do you want me, baby?\" Janice whispered, her vocal pitch was higher, innocent sounding. \n\nMatt smiled and raised himself. He patted her pillow. \"Lay back, right here... wherever you're most comfortable.\" he spoke softly. Janice repositioned herself on her back, her head nestled against the soft pillow. Kendra looked on beside her with an anticipatory grin. \n\nMatt, on his knees, bent over Janice's naked torso, began kissing Janice's neck softy. His lips left a moist pucker trail across her collarbone, down to her chest. Matt reached up and gathered her massive breasts together, squeezing and rubbing them against each other. His lips and tongue bathed her erect, pink nipples. He kissed all over her piled soft gorgeousness, rubbing his face against them. \n\nReluctantly moving on, Matt's trail of kisses led its way down her soft belly. Matt's mouth met the hem of Janice's underwear. \n\n\"Oh... baby...\" breathed Janice. \"Please... take my panties off.\"\n\nMatt's breath shuddered as he hooked his thumbs into the narrow band of cloth at each of her hips and dragged them down, slowly. His lips continued their kissing trail into the newly revealed area of flesh. Janice flinched a little, when she felt Matt's kiss on her outer labia; the first sensation of it's kind for her. \n\nMatt was now knelt between Janice's legs. Her knees, nervously spread apart, opening her inviting, moist flower before his eyes. He looked up to see Janice's fear laden anticipation.\n\nA kiss. And another small kiss. Then Janice felt a full, open mouth mashed against her vagina and a strong, wet tongue encircling her rigid clitoris. \n\nInside, Janice felt something akin to an earthquake commencing, ground zero currently being lavished by Matt's invigorating mouth. The shockwaves coursed though her body, relentlessly. The intensity kept building. Only within a few seconds, Janice was already crashing through previous notions, into a brand new territory of sensational bliss. Matt continued to roll Janice's clitoris around his tongue rapidly, feeling it becoming stiffer. The ultimate crescendo was fast approaching, unlike anything she had felt before. \n\nThe image of a space rocket's impossibly powerful launch thrusters propelling its payload off the ground was caught in her mind's eye as her brain flailed for some reference to attach to this astonishing new feeling. \n\nWhen it finally hit, Janice's orgasm felt like it arrived with such force, it immediately began echoing inside of her, multiplying into a cacophony of what she could only think to call a \"super orgasm\". \n\nJanice panicked. She felt like her body wasn't meant to cum so incredibly hard. \"Oh fuck...\" Janice's mind raced. \"It's not stopping!! Oh my god! He broke me!! I'm gonna be stuck cumming for the rest of my life!!\" \n\nJanice's flailing arms urgently pushed Matt's head away. She gasped for air desperately when the massive orgasm finally relinquished it's carnal grip after what seemed to be several minutes. Matt had to pry his trapped head from in between Janice's squeezed thighs. Kendra was knelt on the ground, hands cautiously uncovering her ears. \n\n\"You might hear from the neighbors about that one!\" Kendra chuckled. \n\nJanice wasn't even aware she had been screaming. She laid on her back, eyes wide, not moving except for the heaving of her chest. \n\nMatt wiped his mouth, looking up at Janice, concerned. \"Are you okay, home girl?\"\n\nHis voice snapped Janice out of her trance. She looked at him with a severe desperation. He felt her hands grab his arms and pull him towards her, wrapping Matt in a tight embrace against her chest. \n\n\"You can't leave me...\" Janice breathed, an edge of tearfulness in her voice. \"Please... please don't leave me, Matty!\" she sniffed. \n\nMatt's vision was was becoming blurred by tears, looking into Janice's pleading eyes. His heart broke for her. \n\n\"Oh, Girl... you know he can't stay...\" Kendra said, solemnly. \n\nJanice's head snapped towards Kendra, tears flowing freely now. \"You!... You can't go either!... Please... \"\n\nKendra could only sigh and shake her head, sadly. She reached out and embraced Matt and Janice. The three held each other, crying for several minutes. \n\n\"I... I'm sorry, guys.\" said Janice, meekly, loosening her embrace. \"I don't expect you to stay. I... I just lost it there for a second.\"\n\n\"Don't be sorry.\" said Kendra, taking a seat on the bed beside Janice. \"You know we both love you.\"\n\nJanice looked into each of her friend's eyes, warmly. \"And I love both of you.\"\n\n~~~~~~~~~~~~\n\nTo make up for her outburst, Janice offered to sleep in her own bed for the night, so Kendra and Matt could have some one-on-one time. The two protested against the idea, but Janice was insistent. \n\n\"He'll be all yours after tonight.\" Kendra smiled at Janice once Matt had left the room. \"I've got a ton of shit to do to get my place ready to move, so I won't be around much.\"\n\n\"Will you at least come with us to the airport Saturday morning?\" asked Janice, climbing into her bedsheets. \"I might need you for emotional support.\"\n\n\"Of course, sweety! Have a good night!\" Kendra cooed, blowing her a kiss. \n\n~~~~~~~~~~~~\n\nWednesday. Only three nights remained until Matt's departure. Matt and Janice stood beside each other at the kitchen sink rinsing the dishes and placing them in the dishwasher. \n\n\"What do you feel like doing tonight?\" asked Matt, handing Janice a plate. \n\n\"I know!\" exclaimed Janice. \"We should watch our show tonight! We haven't seen it in so long.\"\n\n\"Yeah, you're right! Good idea.\"\n\nIn the living room, Janice nestled close to Matt as he cued up the episode on the television. \n\n\"Do you recall what was happening on this show?\" Matt asked Janice as the program began. \n\n\"I hardly remember. I think we'll have to both play catch-up while we watch.\"\n\nIt wasn't long before the two were reacquainted with the storyline and reinvested in the characters. As the episode played, Janice stroked Matt's arm and chest, while her head rested against his shoulder. Occasionally she would caress the bulge in his pants, feeling his cock thicken in her hand. \n\nJanice gasped. In a shocking plot twist, the protagonist's wife was revealed to have been sleeping with her husband's mortal enemy all along. \n\nJanice gulped, watching terrible judgment being heaped upon the woman after her infidelity had been laid bare before all to witness. Her hand stood still on Matt's chest in mid stroke. \n\nJanice slowly sat up straight, placing her hands in her lap. Matt glanced, cautiously over to see her face. She wore an expression of extreme anxiety, her eyes unable to look away from the poor woman's final sentence: death by beheading. Matt watched Janice's hand unconsciously reach up and touch her neck, tenderly. \n\nShe squirmed in her seat, watching the young woman's fate unfold on the screen. Just when the executioner's axe fell, Janice's phone suddenly began ringing, nearly startling her out of her skin. \n\n\"Bobby Calling\"\n\nShe gasped. \"Oh sssshit! Uh.. uh... hold on a minute, h-homeboy.\"\n\nMatt paused the program with the remote. Standing to her feet, she moved quickly to her room. Janice shut the door and answered the call. \n\n\"Hey, b-baby!\" Janice's shaking voice answered. \n\n\"Don't 'hey baby' me!\" Bobby snarled over the phone. \n\n\"W-what's wrong?\"\n\n\"You know EXACTLY what's wrong!\" \n\nJanice paled. \n\n\"...You still haven't sent my parents a 'thank you' card for Christmas yet, have you?\"\n\nJanice blinked, suddenly remembering her errant duty. \"I'm sorry, baby. I'll get it out t-\"\n\n\"Jesus!\" Bobby bellowed. \"You know how much shit my parents give me about you already! C'mon, Janice!\"\n\nShe winced at the sting of his words. \"Okay! ...I promise, it'll be in the mail tomorrow.\"\n\n\"You're killing me. You realize how much pressure I'm under?! What the hell could be so distracting over there?\" \n\nJanice gulped. \"N-nothing! I-I mean, I just found out my friend from work is moving away... and... and then I'm also gonna be without a roommate for three months...\"\n\n\"Whatever. Fuck him.\" cursed Bobby. \n\n\"What?\"\n\n\"You heard me: fuck that guy! What's his name... 'Mr. Perfect'... Mark?... no, Matt... that's right! 'Door Mat'!! Yeah, fuck that loser.\"\n\nDespite Janice's tension, she had to slap a hand over her mouth to stifle a giggle. \n\nIt seemed, to her, that hearing the words helped hammer the point home: \"It's time.\" she thought. \n\n\"Ok... uhh, listen, Bob.\" Janice said, flatly. \"I have something... BIG coming up... and I need to get ready for it.\"\n\n\"Fine bye.\" The line beeped off, abruptly. \n\nJanice set her phone down, casting her eyes towards the living room with a smile. \n\n~~~~~~~~~~~~\n\nMatt waited tensely on the living room couch. The screen's frozen image of a blood stained axe seemed to mock his anxiety; feeling as though the forward sexual momentum he and Janice were sharing had suddenly been severed, brutally. \n\nIt was several minutes before he heard Janice's footsteps approaching the living room again. Matt half guessed that she was coming in to say 'goodnight'.\n\nWhen she appeared in the doorway, Matt noticed that she had changed clothes. Her loose sweatpants had been replaced by a red plaid mini skirt that dangled level with her bare pussy. Her plump ass cheeks barely half covered. Her former non-descript T-shirt was gone and a tiny, spaghetti strapped tank top struggled valiantly over her massive tits. \n\nJanice silently stood before Matt, gazing deeply into his eyes with a look of unhinged seduction. Without breaking eye contact, Matt reached over to the remote and switched off the television. \n\nShe quietly held out a hand for him to grasp, raising him from the couch. The gap between their bodies closed as their arms entwined around each other. Janice kissed Matt, deeply. He felt his shirt being lifted off. As the garment was tossed onto the floor, Janice bent over to place kisses on Matt's bare chest. She flicked his small nipples with her tongue while her hands busied themselves undoing Matt's belt and fly. \n\nMatt shuddered in erotic joy watching Janice descend to her knees before the expanding bulge in his pants. Janice's mouth left kisses all the way down his abdomen to the hem of his underwear. Pulling the boxers off slowly, she kept her kisses going, on to the base of his downward turned erection. \n\nHis cock, being slowly unveiled, was immediately greeted by wet, passionate lips and a lingering tongue. When the large phallus sprung upwards upon being freed by constricting underwear, Janice was waiting to grasp it in her tiny hand. She immediately began a slow stroke up and down the entirety of his thick shaft. \n\nJanice nervously gaged Matt's immense girth with her wide spread fingers. \"How the fuck is this going to even work?\" she silently fretted, barely able to close her two hands around it. \n\nShe could hear Matt loose his breath when her mouth closed around the top of his sensitive cock head, licking it slowly, sucking as much as she could manage. Janice then dragged her tongue all the way from his balls, slowly up his throbbing shaft, to the very tip of his slitted head. She continued her sucking and stroking diligently. \n\nComing up for air to moan in pleasure, Janice gazed seductively into his eyes. \"I'm ready, baby... I'm ready for you to have all of me tonight.\" ",
        "Precum instantly emerged from the tip Matt's dick when he heard her words. She smiled and sensually licked the liquid from his tip. \n\nHer stroking motion increased in tempo. \"Mmm! Does that mean you're ready too, baby?\" Another bubble of clear precum formed. \n\n\"Ooo! Fuck yesss! Good! You've waited a long time for this, haven't you... Waiting to cram this big juicy cock in my tiny little pussy?\" A steady stream was now running down his shaft, lubricating Janice's sensual stroking. She slurped the clear jizz leaking from his cock head, looking up at him. \"I'm not gonna lie, baby... I'm kind scared.\" she breathed. \"...but I'm still ready and excited!\"\n\n\"Don't worry. I'll be gentle... until you don't want me to be.\" Matt said in a low voice. \n\nJanice, once again, opened her jaw as wide as she could and lowered her mouth over his dick. Her sucking and stroking had Matt hurtling towards a climax. \"Oh damn... here it comes, honey! Sshhhit!\" \n\nJanice moaned in excited pleasure as her mouth filled with semen. She managed to only choke a little as the deluge engulfed her orifice. Her eyes watered. Janice ran her tongue over his sensitive head, making sure Matt's dick was spent. His knees felt weak, catching his breath. \n\n\"Wow, baby! You're fucking great at that!\" Matt said, breathlessly. \n\n\"Really?!\" Janice exclaimed, happily surprised. Matt assisted her to her feet. \"I would have NEVER thought I could suck SO much dick!\"\n\nMatt chuckled. \"Well... you've been surprising me on a regular basis these days.\"\n\nJanice smiled brightly at him, hugging him tightly and bringing his face close to kiss. \"Your bed or mine?\" she cooed in his ear. \n\nJanice squeaked in mild shock when she suddenly felt her feet lift off the ground. Matt effortlessly scooped her up in his arms to cradle her against his chest. \n\n\"Mine. I just put fresh sheets on.\" he said, carrying her through the doorway. \n\n\"Oh my!\" Janice blushed, feeling the delicious warmth of security beating in Matt's chest as he placed her gently down on to the bed. \n\nShe laid back against the pillows, instinctively spreading her legs while Matt crawled towards her from the foot of the bed. Janice's tiny skirt was gathered around her waist, her bare pussy glistening in the low light of Matt's bedside lamp. \n\nMatt bent over, sliding forward towards Janice's exposed vagina. She gasped when she felt Matt's lips press against her labia and his tongue separating her folds, caressing her clitoris. Her breath was taken away once again by the intense rush of erotic sensation. Instead of panicking this time, Janice threw her head back and surrendered to The Bliss. \n\nIntense waves of electric pleasure coursed through her body. She felt as though she was going to be carried away by the force. \n\nJanice's fists clenched the bedsheets as she felt herself becoming lighter... practically weightless. Janice opened her eyes watching the ceiling slowly approaching her. \n\n\"I think I'm floating!\" Janice mused to herself. \"How... delicious!\" \n\nShe slowly turned her head to look back. \"Oh yeah... See? Matty is down there going to town... on... me...?\"\n\nThe shock of realization combined with a sudden shudder in the aether forced Janice's senses back into her body, just in time for the first massive orgasm to slam into her. \n\n\"OHMYGOD!!\" Janice screamed, writhing in pleasured agony. \"Oh fuck!! It's... it's too good!!\"\n\nJanice's chest heaved, her huge tits spilling out of her meager tank top. \n\nMatt raised himself to approach her face. His solid erection glided against Janice's thigh as he bent down and kissed her lips, tenderly. \n\n\"I should let you get on top first, baby.\" Matt whispered. \"That way you have control of how much you want.\"\n\nJanice felt nervous raising herself up, letting Matt lay down on his back while she straddled his thighs. The mini skirt was undone and tossed to the floor. Matt could feel her wet slit drag across the shaft of his fully erect penis as she scooted forward. \n\nJanice took both his hands and brought them to her exhausted tank top. Matt lifted the cotton cloth up, unveiling Janice's massive, gorgeous breasts, slowly lifting the shirt over her head. She allowed him to massage and knead her cream colored globes for several minutes while she slowly slid her sopping wet pussy up and down his fat cock. \n\nFinally, Janice moved forward again and bent close to Matt's face. He could feel the head of his dick find her wet entrance. Janice bit her lip, giving a quiet whimper. \n\nHer breathing suddenly intensified as Matt felt Janice lowering herself onto him, impaling her pussy with the head of his thick cock. \n\n\"Oh my fuck!\" she squealed. \"It... it hurts!\"\n\nMatt's breathing was deep and slow. \"Don't force it, baby. Take your time.\"\n\nJanice rocked her hips in small movements, slowly becoming accustomed to the astonishing thickness of Matt's cock. Little by little she was able to feed more of his huge, hard penis into her throbbing pussy. \n\n\"Are... are you all the way in?\" Janice asked through ragged breaths. \n\nMatt shook his head. \"No, baby. You're almost halfway now.\"\n\nJanice's mind reeled. \"What the fuck!?\" The inner walls of her vagina were stretched wider than she had ever experienced before. The further his penis bore into her wet vagina, she was convinced that she was going to split apart. \n\nInch after inch was slowly fed into Janice's overwhelmed pussy. \"You've GOT to be all the way in, by now...\" Janice said with a raspy voice. \n\n\"Close. Couple more inches.\" breathed Matt.\n\n\"Oh fuck! Just... push slow...\"\n\nMatt flexed his hips, slowly driving his shaft the rest of the way into her pussy. \n\nJanice practically collapsed onto his chest. Pushing her hands onto his pectoral muscles, she supported herself with locked arms. The feeling of such fullness within her made Janice's mind spin. Matt involuntary flexed his cock inside of her. \n\n\"Oh FUUUCK!\" Janice moaned loudly and began shaking. Her outstretched finger dug their nails into his chest as a sudden orgasm raged through her. \n\nJanice felt like her virginity had truly and finally been claimed. Every sexual encounter she had ever had before seemed like a dress rehearsal compared to this; the actual event. \n\nShe began slowly moving up and down on Matt's cock. Janice's sharp breaths and gasping moans began, subdued at first, then growing louder and louder as her strokes deepened and her tempo increased. \n\nMatt was becoming hypnotized by Janice's huge swaying breasts rocking back and forth, colliding against her rib cage over and over with rippling impact. He looked down to see her pussy lips gripping his cock tightly. \n\n\"Oh, Jesus!! Oh!...YES! Oh my god... I... I had no idea!!\"\n\nMatt's hands massaged her enormous breasts as she bounced up and down on his dick. He could feel her skin becoming damp with sweat. A beaded drop rolled down her face. \n\n\"Let's switch, baby.\" Matt breathed, lifting himself to his elbows. Janice obliged his request by rolling on to her back. The two moved together so that Matt's cock stayed lodged in her tight pussy as they traded positions. \n\nJanice looked up into Matt's eyes with a vulnerability that made his heart want to catch fire. He lowered his face to hers, giving her a passionate kiss while he slowly slid his dick in and out of her soaked vagina. \n\n\"Oh!! Please... Oooo!... Oh my god!! Oh, Matty... baby... it's so good!! Oh my FUCK!! It's SO GOOD!!\"\n\nMatt picked up the pace slightly. Within just a few strokes he felt her pussy clench his dick as another freight train orgasm barreled through her. Janice screamed in pure sexual ecstasy. \n\n\"Matty!!... Oh, god! Matty!! Yes, baby!! Oh... you fuck me so good!!\"\n\nSeveral lustful minutes passed while the two made passionate love. The bed creaked under the pressure of the pair's efforts. \n\n\"Oh baby...\" Matt said, urgently. \"It's coming... where do you want it?\"\n\n\"Fuck yes! All over my tits!! Cover 'em in that hot cum, baby!!\" Janice growled through clenched teeth. \n\nMatt's balls tensed. He quickly pulled his throbbing cock from her wet snatch and moved forward, stroking his dick rapidly. Janice brought her giant tits together just in time to receive a shower of cum splashing against her skin. \n\nMatt fell, exhausted, beside her. Janice turned and looked deeply into his eyes. They shared a silent moment, feeling the weight of their actions settling heavily. \n\n\"Whatever happens...\" she said, rolling over towards him. \"I wanted this...\"\n\nMatt watched her wince when she closed her legs. \"...even though I feel like I can park a car in my twat now!\"\n\nMatt smiled, sheepishly. \"Sorry.\"\n\nJanice grinned. \"S'ok.\" She leaned towards him, kissing Matt's lips. \"It was fucking worth it!\""
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "big tits",
        "enormous breasts",
        "huge boobs",
        "slow burn",
        "fetish"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-13"
}