{
    "title": "Game If You Are",
    "pages": [
        "Jordy rolled his eyes as I cracked open another beer. \n\n\"Dude, slow down. We have all night.\" I glanced at him. Mmm. We had all night but we were heading to the pub very shortly. And at the pub, hopefully already halfway to trashed were Rico, and Mikey, and Mo and last, but so far from least- \n\nElijah. \n\nAnd it had been... only a week? Jesus. A week since I'd seen Elijah. And I really, really, didn't think I could face him sober. \n\n\"Ah, you guys are lightweights. Gotta get ahead.\" I teased. Jordy rolled his eyes. \n\n\"For someone who can't go to the grocery store without me to reach the shelves you sure can put away the booze.\" He conceded. I hit him playfully. \n\n\"Managed it by myself yesterday.\" I crowed in faux pride. \n\n\"Is that why we have off-brand everything?\" He grunted. Which actually. Yes. That is why we had off brand everything. There was a shortage of disarmingly handsome tall men at Pak n Save yesterday. I told him as much and downed my beer. Ah, fuck it. I had to rip the band aid off at some point. \n\n\"Alright.\" I stood up and pulled on a jacket. \"Let's go.\" Jordy laughed as he looked at my face. \n\n\"We're meeting up with the guys.\" He said. \"Not going into battle.\"\n\n\"Potion master...\" I ignored him and started riffing. \"I'm going into battle, I need your strongest potion...\" Lucky Jordy is a huge dork and that completely distracted him. \n\n\"You can't handle my strongest potion!\" And we continued that all the way to the pub. \n\n\u2014\u2014\n\nElijah and I only barely caught each other's eyes as we 'sup' nodded each other. Wooo boy. This was gonna be so damn awkward. We avoided being too near each other, tuning into a different conversation if someone invited us in. The beer was helping though. After a couple he even sat next to me and I didn't feel the need to jump away immediately. He nudged my knee. \n\n\"You good?\" He asked. I smiled at him. \n\n\"Yeah man. You?\"\n\n\"Yeah.\" He cleared his throat and glanced around the bar. \n\n\"So do we talk about it?\" He murmured. I burst out laughing. He's such an idiot. \n\n\"No!\" I said. \"God no! And here?!\" I nodded towards our friends and he grinned goofily. \n\n\"Aight.\" He said. \"So, you hired a new barista yet?\"\n\n\"Na, no ones looking.\" I sighed. \"We're paying an insane rate as well. $27 an hour, that's unheard of but still- no one biting.\" \n\n\"I'll keep my ears peeled.\" He said. \n\n\"You don't want to come back?\"\n\n\"And work for you?\"\n\n\"Guess so?\"\n\n\"Na, I can't take you seriously.\" He laughed. \"Don't know how anyone does, actually.\" \n\n\"Ah, my staff haven't seen me on a Friday night.\" I laughed. \"That pretty much destroys all credibility.\" \n\n\"As soon as Dua Lipa comes on you turn into the world's most flaming homo.\"\n\n\"Hey!\" I thumped him. \"You can't say that!\"\n\n\"Can, do, and will.\" He raised his eyebrows and sat up straight with his arms folded, as though that would intimidate me. I rolled my eyes at him. \n\n\"We both know I can take you in a fight.\" I said. Elijah looked at me and opened his mouth. I felt myself starting to blush as his eyes slowly drifted down my body and back up to my face. \n\n\"Well.\" He said eventually. \"You got me there.\" \n\nLuckily Mo interrupted by looking for a tie breaker in would you rather, and we all got distracted by the merits of carrying a goat around for the rest of your life or sleeping with one in your bed for the rest of your life. Elijah kept his eyes to himself and we barely spoke for the next two hours.\n\nAnd then he caught me tumbling out of the bathroom. \n\n\"Woah, shrimp.\" He caught me. \"You've had too much.\" I rolled my eyes and straightened up. \n\n\"I'm good.\" Elijah didn't let me go. He held onto my shoulders and raised his eyebrows. He cleared his throat. \n\n\"You don't think you've overdone it?\" He said slowly. His grip sort of tightened and loosened again as he stared at me. \"Because... maybe I should take you home?\" I looked into his eyes, to make sure he meant what I thought he meant and I swallowed. \n\n\"Um.\" \n\n\"Or was that a one off?\" He said quietly. I shook my head. \n\n\"Game if you are.\" I said. My voice sounded a lot steadier than it had any right to. Elijah grinned. \n\n\"Then let's get you home, you little inebriate.\" I laughed and pinched my cheeks, to make them go red and the whole thing more convincing. He pretended to help me back to the others as I put on quite a convincing stagger. \"Right.\" He said. \"I'm taking Gideon home. Fucker needs to learn to pace himself.\"\n\n\"Told you so.\" Jordy said. \n\n\"Fuck off.\" I mumbled. \n\n\u2014\u2014\n\nWe didn't say much in the Uber home. What do you say? He cleared his throat and drew a breath from time to time, but he obviously didn't have the nerve to commit to saying whatever he was thinking. \n\nI was trying really hard not to think. To lower my expectations. To stop stressing out. To stop worrying about what this would mean. \n\nWe arrived at mine and I turned the lights and the heater on and opened my mouth to offer him a beer but as I turned to him he was looking at me- the exact way he looked at me last time. Last time. Oh god. We were doing this weren't we? Once is... whatever it is. \n\nTwice is a thing. \n\nElijah's eyes were narrowed and steely. \n\n\"Gideon.\" He said. His voice was low and firm. \n\n\"Yes?\" I swallowed. \n\n\"Strip.\" Elijah said. I felt the heat rise up from my stomach and I almost moaned. Actually I think I did moan as I obeyed him and fell out of my clothes. God. He was straight out of a porno.\n\nWell. \n\nAll of this was. \n\n\u2014\u2014\n\nA week ago we were at his, playing video games because he'd had a party the day before and I crashed for the night. We were shooting the shit about nothing in particular when for whatever reason he was moaning about the lack of action he'd been getting. I was teasing him because, quite honestly, lack of action is far from a problem for me.\n\n\"You just need to broaden your horizons.\" I said. \"Bet you could have blow jobs on tap if you went on Grindr.\"\n\n\"That's a bit shitty isn't it?\" He laughed. \"I mean, it's an app for gay men.\"\n\n\"It's a hookup app.\" I corrected him. \"Trust me, 'straight guy looking for cocksucker' might work in your favour.\" \n\n\"Would you suck a straight guy?\"\n\n\"Dude.\" I laughed. \"I must have sucked a hundred straight guys.\"\n\n\"They can't have been that straight.\" \n\n\"Getting your dick sucked is getting your dick sucked.\" I shrugged. \n\n\"Huh.\" He glanced at me. \"And you don't care?\"\n\n\"Why would I care? Sucking dick is sucking dick.\"\n\nElijah sat in silence for a minute before he sighed deeply. \n\n\"Well.\" He said, and he nudged me. I glanced at him. \n\n\"What?\" He nodded pointedly at his crotch and I blushed as I realised he was rock solid. \n\n\"That's your fault.\" He said. I laughed. \n\n\"I'm flattered.\" He raised his eyebrows and me and cocked his head to the side. \n\n\"So...\" My gut suddenly twisted. Uh-oh. What had I talked myself into here? Elijah was looking at me hungrily. He shrugged coyly, looking at his dick again, knowing I knew exactly what he meant. \"Sucking dick is sucking dick right?\" He said quietly. \n\n\"Yeah but that's YOUR dick.\" I said slowly. My body was kinda betraying me though. \n\n\"So? No homo, no nothing... You want it, or at least part of you does.\" He looked pointedly at my own somewhat noticeable bulge. \"I want it too... I mean... it doesn't matter right?\" I bit my lip. Probably a bad idea? But I did want it. We both did. Maybe we could make this work. \n\n\"I mean... Ok.\" I said slowly. Elijah grinned and sat back triumphantly, spreading his legs and looking at me. \n\nAnd in spite of my misgivings, god I mean, I was so horny. He was so hard. I slowly slipped off the couch and nestled between his legs. He moaned as he looked at me. \n\n\"Yeah.\" He whispered. \"Take it out.\" I reached for his trousers and slowly undid them. His voice was sending me straight to wanting to submit, wanting to make him feel good, wanting to be there at his feet, serving him. I shuffled his pants down and gently released his cock. I moaned as I took it out, and he moaned as I moaned, turned on by how turned on I was. I paused, with my hand on it and looked up at him. I needed him to instruct me. \"Sniff it.\" He muttered. I closed my eyes and leant in. See, this is why straight guys like gay men sucking them. What girl is really gonna sit there on her knees and truly worship a dick like that? But I just obeyed, because him teasing and making me work for it was so damn hot. I inhaled his scent, pressing my nose to his pubes and just gently brushing his cock with my lips, knowing I didn't have permission to kiss or taste just yet. \n\nHis hand found itself in my hair and he played with it gently, his hand firm on my head. \n\n\"Good.\" He said. \"You can kiss it.\" I glanced up at him. \n\n\"Thank you.\" I mumbled, before closing my eyes again and missing the tip reverently. \n\n\"Go on.\" He said as I paused, and I took that as an invitation to start really working on him. I gently started to lick his shaft, his balls, switching between long strokes with my tongue and French kissing. He moaned and lay back. \"So good.\" He mumbled. \"Suck it.\" \n\nI obliged him, and started to suck properly. He moaned. \n\n\"Oh you're such a cocksucker.\" He whined. \"Damn whore. Wish I'd known about this earlier. I would have had you on your knees for me years ago.\" I moaned in agreement, starting to fuck my throat on him. He was thrusting back with increasing intensity, and slowly his hands wrapped around my head, and he held me still as he fucked my throat. \"You like this?\" He panted. It wasn't really a question, which didn't matter because I did like it. Elijah and I were built for each other. I moaned and wrapped my hands around his calves, so he knew. \"Oh god.\" He moaned. \"Oh Jesus, Gid...\" I moaned around him as he tensed up. \"Shit dude, sorry, I'm cum...\" He grunted as I glanced up at him and our eyes met. I swear time stopped. He stared at me, with my mouth wrapped around him. His mouth opened a little as we made eye contact and he moaned as he started throbbing and spurting into my mouth. I held his gaze as I swallowed. He bit his lip and his eyes slowly rolled back and closed as he finished pumping into my willing throat. I closed my eyes in supplication as his hand once again rested on my head, just nestling in the curls at the back. \n\n\u2014\u2014-\n\nI wasn't expecting him to tell me to strip, but my cock throbbed because being told what to do by Elijah was so hot. I wasn't joking earlier, I totally could take him in a fight because I train- but just to look at us you wouldn't guess it. He's as tall as I am short- and I am short, I know. He's brown because he's from the Islands, and I'm brown because my Mum's from Mexico but he's all dark from years tanning in the sun and I could pass for white on the right day. He has that 'I work in film' scruffy beard and short hair thing everyone he seems to work with has. I like my hair a little longer, and I try to hold onto what little facial hair I get just to make sure I never slip into looking too femme. \n\nElijah could not take his eyes off me as I undressed. I half heartedly tried to cover my dick with my hands and he stopped me. \n\n\"Don't hide.\" He said. \"It's so hot that you're hard for me.\" I blushed furiously, but I dropped my hands to my sides and he moaned. \"Come here.\" He motioned for me as he sat down on the couch. \"Here.\" He guided my hand to his dick. \"I'm hard as hell.\" He said. I moaned. He was. He was so hard.\n\n\"Seems a little unfair that I'm naked when I'm the gay one.\" I said, as I felt him up over his jeans. Elijah raised his eyebrows. \n\n\"Yeah.\" He coughed. \"But... dude. You...\" He slowly stroked my abs. I glanced at him. We stared at each other. I mean. Yes. My body is a finely curated fucking artwork. It's entirely over compensating for the fact that I'm 5'6 on my best days. Pre Covid I had a six pack but it's a slightly more modest four pack right now. And no one has complained about the extra weight on my ass, because boys like that, but I'm well aware of it. \n\nAll of that aside, I didn't expect Elijah to particularly notice my body, because we were both in this pretty purely for the dick sucking, and if anything I thought the fact that I was solidly all man underneath my clothes would be kind of a major turn off.\n\nBut Elijah had that glint in his eye. That 'I am a wolf, little boy, and I'm about to devour you' look. He didn't even need words, he just raised his eyebrows and glanced at the ground beneath him and I was kneeling again, looking up at him. He ran his fingers through my curls and clasped my chin. \n\n\"You want this?\" He said. \n\n\"Yes.\" I replied quietly. He probed my lips with his thumb and he moaned as I parted them and started to suck on it. He guided my hand back to his dick and I started rubbing it through his jeans. \n\n\"You're my cocksucker now.\" He whispered. \"Whenever I want it, you stop being my friend and become my slut.\" I squeezed his dick and moaned appreciatively. Yes, absolutely yes. I'd had this arrangement before and I'd always loved it- just being a hole for a guy to fulfill his needs. \n\nElijah withdrew his hands and sat back on the couch. I looked up at him. \n\n\"Take it out.\" He instructed. I gently fumbled with his trousers and boxers, pulling them down and trying not to run my hands all over his thighs and pubes... I was here to worship him, but not like a lover. Like a cocksucker. \n\nI was leaking, so damn hard, as I looked up at him. He held the base of his dick in his hand and slapped me gently on the face with it. \n\n\"You like this?\" He whispered. \n\n\"Yeah.\"\n\n\"You like being my bitch?\" His voice was low and growly. I stared at him, my lips parted... for all I knew I was drooling. \n\n\"Yes, Eli.\" \n\n\"Good boy.\" He stroked my face and I shivered. Huh. He'd even got the noun right. I'd been called a good girl in this position more times than I cared to count. And I didn't love it, being girly just isn't my thing, but I can go with it. \"Kiss it.\" He held his dick in front of me and I tentatively reached out and placed my lips on it. I looked up at him, and he nodded his permission and I closed my eyes and began to make out with it, kissing up and down his shaft, licking it gently as he offered to me- tasting his sweet pre, mingled with his sweat. \"Gideon.\" He whispered. \"You want to suck on my dick?\" I reluctantly pulled away. \n\n\"Yeah.\" He smirked at me. \n\n\"How much do you want it?\" Pretty bad. My gut lurched and my face blushed as I realised he was going to make me beg. \n\n\"Please.\" I mumbled quietly. \"I want your cock so bad. Please can I suck it?\"\n\n\"You're hot when you beg.\" He stroked my face. \"Are you always a submissive little slut for dick?\" I moaned. \n\n\"Not always.\" I panted. \"Just for good dick.\"\n\n\"You want my dick, slut? You gonna be my subby little cocksucker?\"\n\n\"Yes please.\" I whimpered. I reached for myself but thought twice. I'd have to jerk off later. This wasn't about me. Elijah noticed though and he smirked. \n\n\"You can touch yourself while you suck me.\" He whispered. \"That's hot.\" I moaned. \n\n\"Can I start sucking then?\" Elijah noticed the note of sarcasm in my voice and laughed. He flicked my nipple, which sent me right back into sub space, and he leant back. \n\n\"Go on then, cocksucker. You have my permission.\" \n\nHe didn't need to tell me twice. I'd been admiring it since I knelt before it. Elijah was large, bigger than me for sure although mine looks bigger because I'm like half the size of him in general. He's uncut, lucky bastard. I wish I had a foreskin to play with. I love them so damn much. His cock is girthy, with a little hair at the base because he's straight and has never heard of manscaping, but it's so hot. \n\nI wrapped my mouth around the tip as I pushed his foreskin back, and savoured the taste. He hadn't lasted long last time and this time I wanted to enjoy myself properly. I went so slowly- appreciating every inch of his dick as I licked it, tasting it- the difference between the tip, and his foreskin, and the base, and the underside... And his big heavy balls... Oh god. I started jerking myself off gently. \n\nI had teased him for long enough, and I was impatient anyway. I opened my eyes and his were locked on me. He was staring at me so intensely. I started to swallow him, half of him, then a little more, and finally I gagged just a little as my lips pressed against his pubes. He was flushed as he looked at me. \n\n\"Good boy.\" He whispered. I moaned and closed my eyes again, and bobbed my head up and down, feeling him slide in and out of my throat. \n\nHe didn't let me lead for long, before his hands wrapped in my hair and I felt myself held down. I jerked myself furiously as he used me, I really was just a receptacle for his cum. He moaned and I could feel him getting hot and shaking and I waited eagerly for his load... But he pushed me off and leant back over the couch. I panted and looked up at him, confused. He blinked as he caught my eye. \n\n\"Don't wanna cum yet, give me a minute.\"\n\n\"We have all night.\" I pouted. \"Let me finish you and we'll go for round 2.\" Elijah snorted as he ran his fingers through my hair. \n\n\"God, you really are a slut Gideon.\" \n\n\"Sure.\" I shrugged. \"Can I have your load then?\" He laughed. \n\n\"I wanna try something.\" He said, shuffling around on the couch. To my surprise he discarded his shirt as he rearranged himself. He noticed me checking him out and smirked. \"Come here.\" He gestured. I wasn't sure what he meant. Did he want me to...? \"Head there.\" He directed. \"And then I can suck you too.\" I blinked. Not the arrangement. \n\n\"Can... we... Not?\" I suggested. Elijah's face fell as he looked at me. \n\n\"I thought... this worked for you...\" His voice was full of dismay. Idiot. I rolled my eyes. \n\n\"This works really well.\" I said. \"I am so down for being your cocksucker. But A) I can't do you properly if you're doing me, I need to be fully in the zone to worship you, and B) 69ing sounds hella gay and we said no homo.\" Elijah laughed as he looked at me. \n\n\"I'm willing to admit that this whole thing is a little gay.\" He said. I laughed. \n\n\"No way man! It's just a bro job!\" He smiled at me and sat up again, and in spite of myself I rested my head on his thigh. He kept playing with my hair, running his fingers through it and curling it around his fingers. We gazed at each other. \"Should I keep going?\" I asked eventually. He nodded. \n\n\"Real slow. I'm sensitive.\" I nodded and closed my eyes, and took him in slowly. He moaned. \"Fucking hell.\" He moaned. \"Imma have to tell the guys about this. Criminal to keep this mouth to myself.\" He moaned as I flicked my tongue over the base of his dick. \"I am pretty selfish though.\" He whispered. \"And I might get jealous if I thought you liked anyone else's cock more than mine.\" I rolled my eyes internally. \"You're such a good cocksucker.\" He whispered, and I was hard again. Uh, he knew how to turn me on.\n\nAs I sucked I felt his hands wander, just touches here and squeezes there. My pecs, my biceps... he was almost caressing me. \n\n\"All this.\" He whispered. \"Hard muscle. But you're so soft. You're my little bitch.\" I moaned and pulled off for a second. \n\n\"Yes Eli, I'm your bitch.\" He moaned and pushed me back again, and he started the relentless pounding from before, holding me firmly in place for him- still, my throat wide, on my knees as he used me. He didn't stop himself this time and gave me a quick warning. Like last time I opened my eyes and as he came we were staring at each other, our eyes filled with lust. \n\nBefore he'd finished cumming I found myself pulled up off my knees, and half in his lap. He was pressing his face to mine feverishly and sticking his tongue down my throat. Who am I to turn down a hot kiss like that? We moaned into each other's mouths with total unbound lust and I held his dick tight as he squeezed out the last of his cum. He lay his head on my shoulder, panting for a second, before turning to me. He pressed his lips to my neck. ",
        "\"You're so hot.\" He whispered. \"You are magic.\" I laughed. \n\n\"I always told you guys are better.\"\n\n\"I don't know about guys.\" He said. \"But you...\" He reached for my dick, which was hard and leaking, and it took a lot of willpower but I batted him away. He pouted at me. \"Not fair.\" He said. \"You helped me, I help you.\" \n\n\"Trust me.\" I sighed. \"You don't owe me shit. I get off on what you're doing.\"\n\n\"You didn't finish.\" He said flatly. \"And I have a reputation to uphold, so let me take care of you.\" I glanced at him. His arms wrapped around me and he pulled me to sit on his lap properly. He looked at me... softly. He stroked my cheek. \"I did something wrong.\" He said quietly. He phrased it almost as a question as he looked at me. I shrugged. \n\n\"Not wrong.\" I swallowed. \"Just uh... this arrangement with other guys is usually less um... kissy and touchy afterwards.\" I laughed. \"Maybe... if we're gonna keep doing this maybe we talk boundaries?\" Elijah nodded seriously. He glanced at my dick, which was rapidly softening and he glanced back at me. \n\n\"Well, on my end I would like it if you came.\" He said. \n\n\"I held off.\" I admitted. \"Next time I'll get there while sucking.\" Elijah grinned and started blushing. \n\n\"Ok.\" He said. \"Good.\" He laughed. \"This is weird.\"\n\n\"It's fine.\" I reassured him. \"You're just not used to it.\" I squeezed his hand. \"This is gonna be such a good arrangement for us Eli. We give each other exactly what we need.\" \n\n\"Yeah.\" He murmured. \n\n\"Like a tool.\" I insisted. \"We can just use each other. Fuck, I can't believe we didn't try this sooner.\"\n\n\"You sound so callous.\" Elijah raised his eyebrows and I laughed. \n\n\"Oh sorry! I thought you signed up for the cocksucker bundle. Did you want the premium full boyfriend package? We can hold hands in public and get mushy feelings and talk about Ru Paul. Did you want that? I offer that too.\" Elijah laughed and hit me playfully. \n\n\"Put some damn clothes on.\" He said. I laughed and extracted myself from his lap. He couldn't stop himself from slapping my ass as I went to get dressed again, and I grinned to myself. Glad it was getting the appreciation it deserved. \n\nHe hung out for a bit, playing with a lego set I'd half started at some point, which he said he was really into. We finished that and then we settled on the couch and watched Futurama for a bit. As we sat there I felt his arm slowly twist around me, and his fingers in my hair. I frowned at him. \n\n\"What?\" He laughed as he saw my face. \"What?!\" He insisted as I shrugged him off. \n\n\"What was that?\" I asked. \n\n\"Oh.\" He blushed. \"Uh... you know, with girls, afterwards...\"\n\n\"I'm not a girl.\" He nodded and looked away. \"Stop being weird.\" I punched him in the shoulder. He rolled his eyes. \n\n\"Can't promise you that, Gid.\" I grunted. \n\n\u2014\u2014-\n\nWeeks passed, and Elijah fit nicely into my schedule. He was usually horny late at night, just as I finished work. I got him off enough during the week that when the weekend rolled round and we had to see the guys we weren't all pent up and weird, we just joked and fucked with each other like normal. We'd always been close. If anything, we were closer than ever. I guess that makes sense. You start swallowing a guy's cum and you just get a little closer as homies. That seems normal. \n\nWe both had jobs from hell with stupid hours and no respect- me managing a restaurant and him managing an IT team. We gave each other a chance to moan about our days to someone who wasn't involved and could take it on, and we relieved the pressure pretty thoroughly. We were such a good fit. I moaned about assholes on Scruff and he moaned about how he was having absolutely no luck with anyone except me. We agreed we we were so fucking right to start this arrangement- he was striking out like crazy and I don't have time for dating right now. But Elijah and I were filling each other's needs almost completely. Naturally, I still had a couple of old hookups I wouldn't say no to if they called- because a guy can't live on blow jobs alone and I liked fucking, and getting fucked, and that wasn't the game plan with Elijah. \n\nI was so relaxed these days. He was the missing puzzle piece. I was so glad he'd pushed me. \n\n----\n\nWe grinned at each other as the guys started packing up to go to town after the Phoenix game. \n\n\"Looks like your place is free?\" He glanced at my flatmate Jordy, who'd just had a breakup and was looking to absolutely total himself. I nodded. \n\n\"I have to make a token appearance but take my keys and I'll be there soon.\" I handed them to him surreptitiously and he pocketed them with a smile. \n\n\"Better be.\" He growled. \"I'm off.\" He called to the guys. They all moaned. \n\n\"You're such a wimp these days!\" Mo complained. \"Come for one.\"\n\n\"On call.\" Elijah shrugged. He worked for Weta and for all I knew he could be on call. Rico sighed. \n\n\"That job's bad for you.\" He said. \"If you can't get fucked on the weekends, what's the point of working all week?\" Elijah rolled his eyes. \n\n\"Great life philosophy.\" He said flatly. \"Alright, if you've stopped giving me shit, goodnight- see ya soon.\" We waved him goodnight and I let myself be dragged into town. \n\nI actually could have talked myself into staying for longer. The buzz from the beers while watching the game was comfortable, and I was grinning and joking as I stood outside near the gas heaters while the others smoked, talking about nothing in particular. There was even a cute guy there who was eying me up as he chain smoked. I almost texted Elijah that I was held up, or maybe we should just try another night... But he texted me first. \n\nDon't keep me waiting. \n\nI shivered. Ugh. Total right thing to say. I made my excuses immediately. And on the way out I dropped my number off at cigarette guy. Just in case. \n\n\u2014\u2014\n\nElijah was having a beer in the kitchen and he tossed me one as I walked in. I was so horny and buzzed I went in for a kiss, and delightfully, he kissed me back, wrapping his arms around me and sticking his tongue down my throat. I grinned as we parted and perched on the low stool next to him. He looked at me and smiled, leaning over and tucking a curl behind my ear. He took a deep breath and I waited for him to work up the nerve to whatever he had to say. \n\n\"I've been watching porn.\" He said. I laughed. \n\n\"Gross.\" I joked. \"Am I not enough for you?!\" He rolled his eyes. \"If we're confessing we watch porn then I guess I'll confess that I drink water. Breathe air. Enjoy sleeping.\" Elijah sighed and let me tease him. \n\n\"I meant gay porn.\" He said slowly. \"I found a guy who looks like you.\" I choked on my beer and he patted my back consolingly as I coughed for two minutes, half laughing which wasn't helping. \n\n\"Ok?\" I said eventually. \"Oh god wait, who is it?\"\n\n\"Uh...\" Elijah shrugged. \"Armond Rizzo?\" I blushed and silently congratulated myself as I started to laugh again. \n\n\"Why are we having this conversation?\" I hit his shoulder. \"Not that I'm not flattered.\"\n\n\"Well... I guess... I kind of want to fuck you.\" He said slowly. \"Is that on the table?\" I inhaled sharply and looked at him. He winced. \"So that's a no.\" He said quickly.\n\n\"Not a no, per se...\" I gulped down some beer. \"Only dude... look. Getting sucked is getting sucked. But fucking a pussy and... look it's not the same yeah?\" \n\n\"Yeah, I didn't mean tonight.\" He said slowly. \"I realise there's a bit of... ah... work involved...\"\n\n\"Prep, yes, lube, and then you have to go slow and look out for me because my ass needs a bit more time to accommodate than a vagina, and then my dick's gonna be there...\"\n\n\"I think you're hot.\" Elijah interrupted me. He looked me in the eye. \"I'm not trying to trick myself into thinking I'm with a woman if that's what you're worried about.\" \n\n\"Oh.\" That was only one aspect, but it did help. Sex with a guy who wants to be with a girl is just plain shitty. \"Ok. There's that. And... then... I guess I'm a little worried you'll be too rough.\" Elijah's eyes twinkled. \n\n\"Whatever, little slut. I know you like it rough.\" I grinned.\n\n\"There's hot rough and ouch, stop that you're actually going to injure me rough.\" I said firmly. \n\n\"So tell me.\" He said. \"The way you always do when I go too far and you go from submissive to sassy in 2 seconds.\" I blushed and swallowed more beer as he smiled at me. His hand brushed my forearm. \"I like it when you do that.\" He reassured me. I cleared my throat. \n\n\"Ok and finally...\" I took a deep breath. \"This arrangement works really well. Do you want to risk fucking that up? Sex is a huge risk, Eli.\" He blinked at me.\n\n\"Is it?\" He said. \"Why? Feelings?\" I rolled my eyes. \n\n\"You wish.\" I teased. \"Blurred lines.\" I said. \"What if it goes bad? What if it's... messy? What if we...\" Elijah caught my hands. \n\n\"What if you're overthinking this?\" He said. \"What if it's fine? We're just taking the next step to fuckbuddy.\" He squeezed my hands. \"And there's no rush. Think about it.\" I nodded slowly. Well. I'd think about it. He grinned as he sat back and the look in his eye turned from gentle to steely. I love when he does that. \"In the meantime...\" He growled. I put my beer down and slid to my knees before him. \"Good boy.\" He whispered, and stroked my head as I looked up at him. \"Want it?\"\n\n\"Please.\" He clasped my chin and tilted my head. \n\n\"You can do better than that.\" He whispered. I closed my eyes and felt my cock twitch. \n\n\"Please, I need you so bad.\" I looked at him. \"Eli...\"\n\n\"Yeah, go for it Gid. You deserve it.\" I reached for him and he helped me out, shuffling his trousers down. I thumbed the top of his briefs as I tried to pull them down. He paused, wrapping his hands around mine. He looked at me thoughtfully. \"Bedroom?\" He suggested. I glanced around the room and shrugged. \"I like watching you.\" He whispered. \"Which is easier when you're naked and I can lie down.\"\n\n\"Well. In that case.\" \n\nElijah stood up and pulled his trousers up. He reached for me and pulled me up, before wrapping his arms around me and picking me up. \n\n\"Hey!\" I pummelled him with my fists. I laughed. \"Asshole.\" I grumbled, and let my arms wrap around him. \"Third door on the left.\" I directed him as he carried me. He located my room, and thank god I'd had some foresight to tidy up. He placed me on my bed and grinned at me. \n\n\"Crazy how light you are, shrimp.\"\n\n\"Fuck off, I'd still take you.\" \n\n\"I know.\" He stroked my face and leant in to kiss me. We made out for some time, rutting against each other. Eventually he pulled away. \"Strip, Gideon.\" He murmured. I pulled my shirt off, and he touched my body as I removed everything else. He ran his fingers through my hair and grinned at me. He shifted to lie back, kicking his shoes off and pressing his back against the headboard. He gestured to his body and I made short work of his trousers before kneeling between his legs. I pushed my hair off my face and knelt over him. \"Oh yeah.\" He whispered. \"Fuck yes cocksucker. Good boy. Suck my dick baby.\" I moaned enthusiastically as I slobbered all over him. I wasn't going slow today. I wanted to choke on him. I was panting and grinding into the duvet below me. He pulled on my hair, and I looked up at him. \"Touch yourself.\" He commanded. \"Show me how hot you are for me.\" I obeyed him instantly, wrapping my hand around myself and fucking my hand ruthlessly as I sucked. \"That's it cocksucker. You look so good.\" He moaned. \"Oh fuck yeah. Don't hold back baby. You make me feel so good.\" I didn't hold back. I was so horny, I knew I'd cum if he kept on at me like this. I felt his hand grab my hip, and move to my ass as I sucked and jerked and sweated and moaned all over Elijah. \"Fuck, you feel so good, you look so good. Fuck, fuck, fuck...\" His hands gripped me tight as he thrust deep into my throat. Oh fuck yes, he was cumming. I relaxed my throat and grunted as I felt my own climax build. I came just as he pulled out of my mouth, all over his shirt which in retrospect I probably should have taken off. I moaned as I looked down at him, squeezing my sensitive dick. He lay back and gazed at me. \n\n\"Shit.\" I looked at his shirt. \"Eli, I'm so sorry I've totally fucked up your shirt.\" He winced as he glanced down. He started to laugh. \n\n\"That is a big load for a little guy.\"\n\n\"I'm not little!\" Elijah rolled his eyes and sat up, pulling me to straddle him. \n\n\"You are little, and I didn't mean this.\" He touched my dick and an electric shock went through my body. Huh. In all this time he's never really touched my cock like that before. He stroked it gently... and despite the overstimulation it wouldn't be long until I got hard again if he kept doing that. \n\n\"Eli.\" I moved his hand. \"Call me little again and I will bite down on your dick so hard I'll break it in half.\" He winced. \n\n\"Sorry, Gid. Just teasing.\" \n\n\"I know.\" He looked at me and back at his shirt. He peeled it off with a sigh. \n\n\"Thanks for that.\" He whined as he threw it in the ground. \n\n\"I'll make it up to you.\" I grinned. \n\n\"Yeah. Give us a minute yeah? Come here.\" He gestured for me to join him lying down, moving his arm as though I was gonna tuck myself in there. I laughed. \n\n\"Cuddling? I'm good.\" Elijah's face fell. I nudged his ribs. \n\n\"You keep acting like I'm some girly one night stand. It's me Eli. I'll grab us a beer.\" Elijah nodded and sat up. He still looked disappointed.\n\nI stood up and stretched out before heading to grab us the beer. He was watching me as I moved, and I grinned. Can't believe I'd basically converted my dumb straight football bro with the power of my mouth alone. I strutted into the kitchen and opened the fridge and panicked as the front door opened. \n\nAh. Shit. \n\n\"Don't come in!\" I yelled, hastily covering myself with the box of beer. \n\n\"What?\" Jordy yelled as he rounded the corner. His eyes widened and he quickly covered them. \"Why are you naked?!\" He laughed. \n\n\"Why are you home so early?\" I laughed as well, even as I shook with embarrassment. He started gesturing with his hands, keeping his eyes firmly closed. \n\n\"Same as you? Tired and drunk?\" I looked around. \n\n\"Ok let me escape.\" I started to exit the room, with the beer in my arms. \n\n\"Wait.\" Jordy said. \"The guys are coming round.\"\n\n\"No!\" I winced as I thought about Elijah. \"I mean... ok... Look I'll probably skip it, I'm exhausted.\" \n\n\"Alright, yeah, I'm sorry I forgot about your hell weeks. We'll keep it down.\" Aw. My heart went out a little to him, because honestly my terrible sleep schedule was the least of my problems. \n\n\"Night.\" I said. \n\nI slipped back to my room where Elijah was sitting up on the bed, his arms wrapped around his legs. He bit his lip. \n\n\"Jordy's home?\" He asked. I winced and sat on the bed. \n\n\"The others are coming over.\" I whispered. He shook his head, and his shoulders started shaking as he laughed. \"It's not funny!\"\n\n\"It's hilarious!\" He whispered. He looked around my room and sighed. \"I'll sneak out the window.\" He said and grinned at me. \"I feel like a teenager.\" I laughed. \n\n\"Me too.\" We looked at each other, grinning. \"Alright.\" I stood up and rustled through my drawers, trying to find anything that would fit him. He laughed and touched my back as he started getting dressed. \"Maybe this?\" I held out a shirt that definitely wasn't mine- it must have been left by a hookup at some point. Elijah raised his eyebrows as he looked at it. \n\n\"Hmmm.\" He said. \"You damn slut.\" I laughed as he pulled it on. \n\n\"Eh.\" I shrugged. \"Didn't get that good with no practise.\" Elijah grinned. \n\n\"I'll see you soon, Gid.\" He did up his trousers and slowly opened the window. \"That was great. As always.\"\n\n\"See you soon, stud.\" I laughed and helped him wriggle out the window. \n\nBy the time the guys were arriving I was comfortably tucked up in bed. I sighed contentedly and my thoughts drifted pleasurably to my buddy Elijah. He wanted to fuck me huh? I wasn't too sure about that. I liked what we had. Fucking? That was a bit of a bridge. Not that I didn't want it. You don't suck on a cock like Elijah's for months without occasionally fantasising... \n\n\u2014\u2014\u2014\n\n\"You ever let a mostly straight friend fuck you?\" I sat next to Bailey on his cigarette break at work. Bailey spluttered all over me. \n\n\"Yeah.\" He said eventually. \"I think that's a trap all gay men fall into.\" He winced as he looked at me. \"He'll never love you.\"\n\n\"Love?\" I laughed. Aw Bailey. He was 7 years younger than me and his dreams hadn't been crushed yet like mine- but he was a hard worker and I knew they would be one day. He was too concerned about others- exactly the trap I'd fallen into. Bailey was going to put his art career to one side, just like I'd put my writing career to one side, and he was going to end up managing his own restaurant through sheer good work ethic, just like me. I smiled at him. Did I believe in love at his age? Probably not. I was always just a tad more skeptical than he was. \n\n\"I don't want love. I don't even want like!\" I laughed. \"I'm way too busy for a boyfriend.\" Bailey raised an eyebrow. \n\n\"So the whole unwholesome single life thing isn't just a bit?\" I shrugged. \n\n\"Just me.\" I said quietly. Bailey took a drag on his cigarette as he looked at me. \n\n\"Then go for it.\" He said. \"If you're sure there's no feelings there.\"\n\n\"Definitely not.\" I grinned. \"Yeah. Imma go for it.\" \n\n\"Good for you.\" He said flatly. He stubbed out his cigarette and marched back in. Hmmm. I might have hit a nerve. Poor kid. He'd work out no feelings soon enough though. We all do.\n\n\u2014\u2014\n\nI knew I'd be seeing Elijah on Thursday. I didn't know if I wanted to go for it though. I mean. I wanted that option open, so I did all I needed to do... But I didn't tell him. I just grinned when we met up at his, and declined food, and waited to see where we went. \n\n\"Barista?\" He asked. I grimaced. Nope. \n\n\"On set photographer?\" I countered. He winced. \n\n\"I'm having a hard time with that.\" He muttered. I put my hand on his knee. \n\n\"Need a distraction?\" \n\n\u2014-\n\nHe was balls deep in my mouth, moaning. My throat was on fire but I didn't care because I didn't want his dick away from my lips. He was moaning and pulsing and I felt his biceps swell as he warned me. \n\n\"Gid...\" He murmured. I let him coat my insides, swallowing every drop of his cum. I glanced up at him. He was staring at me, as usual. I gently let his cock fall from my mouth. I cleared my throat. \n\n\"Hey Eli.\" I murmured. \"I need another load tonight.\" His eyes crinkled. \n\n\"Insatiable.\" He whispered. \n\n\"I know.\" I smiled at him. \"But this time...\" I felt myself blushing as I looked at him. \"I guess... I thought about things.\" Eli turned his head to one side. \"Specifically. I thought about you know... Going to the next level.\"\n\n\"Oh fuck.\" Eli's eyes narrowed as he stared at me hungrily. \"Tonight?\" He whispered. I bit my lower lip. \n\n\"I'm ready.\" I said slowly. \"Game if you are.\" He moaned. \n\n\"Oh fuck, good boy.\" He ran his fingers through my hair and leant over to kiss me deeply. I tilted my head up to meet his mouth and he roughly pulled me into his lap. I straddled him for a bit as we made out. His hands were all over me. He really did like my body, he was caressing it in all the right ways... he would rub one of my muscles, feeling it, almost worshipping it, tracing little figures around it before moving on. He didn't slouch with his body either but he's more toned than me, less powerfully built. I guess when you're as tall as he is it's probably harder. And maybe he just doesn't care. Which he shouldn't. He's utterly perfect as he is. \n\nHis dick started rubbing against my ass and he moaned. I could feel him slowly trying to find my entrance and I laughed and stopped him. \n\n\"We ok?\" He panted as I stood up. I rolled my eyes and grabbed my bag. I threw him a pack of condoms. \n",
        "\"You.\" I said firmly. I pulled out some lube and knelt between his legs again. \"Me.\" I raised my eyebrows at him. \"Can't believe you were trying to go in dry.\" He blushed furiously. \n\n\"Maybe you take the lead here.\" He mumbled. \"It's possible watching porn hasn't entirely prepared me for the real thing.\"\n\n\"Well I certainly don't moan like Armond Rizzo.\" He laughed. \n\n\"Good- I usually have to mute him halfway through.\" I grinned as I watched him roll the condom on and started to work myself open. Elijah watched me as I knelt between his legs, my arm reaching behind me. I moaned as I fingered myself, closing my eyes and letting my need to be filled take over... and I felt Elijah's hand caress my cheek. I looked up at him.\n\n\"Can I?\" I blinked.\n\n\"Huh?\"\n\n\"Can I...\" He moved his hands over my shoulders and looked at me. His eyes were filled with lust and he was breathing heavy. I couldn't quite read his intent and I frowned at him. He rolled his eyes and pulled me up on his lap again. \"You're so dumb when you're horny.\" He whispered in my ear. \"Let me finger you, little slut.\" I moaned and my head fell against him. \n\n\"Yeah.\" I whined, in spite of my misgivings. An ass is just so different to what he was used to... but he was firm and he pinned me to his chest- holding me in a soft chokehold as he caressed my ass. I heard him squirt more lube on his hand and I shivered as I felt the cold liquid in his fingers. \n\nHe was slow, gentle. He sort of knew what he was doing... stroking my crack at first and slapping my cheeks as he teased me. He found my hole and I moaned as he rubbed in little circles. He pulled my hair and whispered in my ear. \n\n\"Just one?\"\n\n\"Yeah.\" I moaned my assent. He slowly stuck a finger in and I whined. He didn't quite know what to do, and I started rocking back and forth for him until he suddenly worked it out. \"Oh shit.\" He whispered as I went limp in his arms as he hit the right spot. \"Oh you like that, baby. You really like that.\" I arched my back. \n\n\"Eli, more, please.\"\n\n\"Yeah baby.\" He inserted another finger- a little rougher- and started working me harder, and I was ready for it. I slammed back on him hard and willing and he moaned in sync with me. \"Oh you fucking whore.\" He sighed. \"Jesus, you slut. You love this. You love being my little sextoy don't you?\" \n\n\"Yeah.\" I pressed myself against him. \"More, Eli...\"\n\n\"Beg.\"\n\n\"Please Eli. Please. Please fuck me.\" He moaned and he pulled my head back firmly to look me in the eye .\n\n\"You want my dick?\"\n\n\"Yes, Eli.\"\n\n\"You want my big dick in your tight little ass?\"\n\n\"Please Eli. Please fuck me.\" His eyes closed and he grunted. \n\n\"Oh fuck yeah.\" He whispered. He withdrew his fingers and I knelt on the couch, holding my ass open as I went to sit on him. He guided his dick to my hole, and he moaned as he lay still and watched me slowly lower myself onto him. \n\nI am a total whore, I'll be clear about that. And thank God I am because Elijah was huge, and rough, and he wanted me so badly. He let me set the pace for as long as it took for him to realise he wasn't going to hurt me- which was round the time I groaned as I felt his balls brush against me. \n\nHis hands moved from softly holding my arms to gripping my waist tightly. He was holding me in place, and I didn't fight against it, I wanted him to own me, to use me, to enjoy everything about me that I'd worked so hard on to give pleasure. And he was. He thrust into me hard and deep. \n\n\"Christ.\" He moaned. \"You're so tight Gid. Oh fuck.\" I moaned and tried to hold myself upright as he pounded me.\n\n\"Yeah, fuck, you're so big.\" I whined. \"Eli...\"\n\n\"Moan my name bitch.\"\n\n\"Eli...\"\n\n\"Gideon.\" We thrust into each other and his grip tightened on me. \"Baby...\" He whispered. \"I'm so close.\" I moaned. That was so hot. I wanted him to lose control over me. I pushed my ass out a little more and bounced in his lap. I teased his nipples and he suddenly gripped me tight. I wasn't a human anymore, I was just his vehicle to get off. And that was so. Fucking. Hot. I grunted his name as he groaned, thrusting way up into me, claiming me as his personal whore. I could feel him throbbing, and he gasped as he finished... \n\nHe held me tight as our breathing calmed down, and slowly he loosened his grip, and started stroking my arms.\n\n\"Shit.\" He laughed. \"I think I'm such a stud too. Sorry Gid. Can I get you off?\" I shrugged. When I bottom it's really not about me cumming. If a top likes to see it I will but really it's all about his dick. Mine doesn't count. Still. I glanced at Elijah. \n\n\"That was great bro.\" I slapped him on the shoulder. \"Not bad at all for your first time. I guess you upgraded to the fuckbuddy package.\" \n\n\"We can do this again?\"\n\n\"Fucking better.\" I grinned and he smiled at me and ran his hands over my arms again. He really liked my arms. \"Hey Eli.\" I cleared my throat. \"Question. Do you actually want to see me cum or is that just your weird hetero need for fairness?\" He laughed.  \n\n\"Uh...\" He played with my nipple. \"I guess it would be kind of hot. I really like it when you cum with me.\" \n\n\"But it's not with you now...\" Elijah moved his hands from my chest to my abs, and he swallowed as he wrapped his hand around my dick. \n\n\"This good?\" He whispered. I closed my eyes and nodded. \n\nI could cum pretty fast when I needed to, and I didn't want to waste his time. He had one hand on the small of my back as the other jerked me off, and he got me there in minutes. I glanced up at him just as I started to cum and his eyes were burning into mine. His lip curled as he saw me watching him. I whimpered, feeling so vulnerable, knowing he was making me lose control. He moaned as I released over his hand, and he let me fall against him, panting. He stroked my hair and we held each other tight until I suggested we should probably clean up because even though his flatmates were in Queenstown, I still had an irrational fear of being walked in on. \n\nWe showered after we'd made sure the couch wasn't totally fucked. We'd never done that before but we'd never fucked before and the two seemed to go hand in hand pretty well. Elijah soaped up, and instead of handing it to me he stepped towards me as if he planned to rub me down. I held my arms out, laughing. \n\n\"Back off buddy, I can clean myself.\" Elijah raised his eyebrows. \n\n\"You're ok with my cock in your ass but god forbid I touch you when we shower together?\" I laughed. \n\n\"Boundaries Eli. I have them.\" He rolled his eyes. \n\n\"You have stupid ones.\"\n\n\"Maybe. But they're mine so it doesn't matter if they're stupid.\" He caught my eye and swallowed. \n\n\"Sorry.\" He grunted. \"You're right.\" \n\nWe kept watching Futurama, on separate couches because I knew how handsy he was and I really do have boundaries. Even if they are stupid ones. As midnight rolled around I yawned and suggested I should be off. Eli looked thoughtfully at me.\n\n\"You could stay the night?\" I laughed. \n\n\"I'm good. I'll see you soon.\" \n\n\"Ok.\"\n\nI glanced at him as I left. He seemed lonely. Poor guy. He really needed to get laid. I mean, by a girl. You know, one who wanted to cuddle afterwards. I sighed as I headed home. Man. I probably wasn't helping with that. Maybe I should back off. \n\n\u2014\u2014-\n\nBacking off would have been easier if we weren't both gagging for it. I did try. Sort of. I turned him down once or twice. \n\n\"How's straight guy?\" Bailey asked as we polished cutlery. I shrugged. \n\n\"He's ok.\" I sighed. \"He needs a girlfriend bad.\" Bailey laughed. \n\n\"He told you that?\"\n\n\"No, he just keeps you know, trying to cuddle, and play with my hair, and all that shit.\" I laughed. Bailey didn't. He raised his eyebrows at me. \"What?\"\n\n\"What do you mean what?\" He looked at me pointedly. I shrugged.\n\n\"What?!\" I insisted, laughing. \"That's your 'You're a fucking idiot' face.\" Bailey smiled. \n\n\"Because you're a fucking idiot.\" He said. \"Ah... You sure your straight guy is straight?\"\n\n\"Well.\" I grinned. \"Don't tell him but he is definitely not straight. The guy watches Armond Rizzo.\" Bailey laughed. He looked me over. \n\n\"Well that adds up.\" He said. I grinned and splashed some water at him. He laughed and wiped his face. \"Hey dipshit.\" He said slowly. I didn't exactly welcome my staff calling me 'dipshit' but this was Bailey after all. \"I think your fuckbuddy wants more.\" I laughed. \n\n\"Definitely. With a lady.\" Bailey shook his head. \n\n\"If you say so.\"\n\n\u2014\u2014\n\nIt worked for another couple of months. Actually, I'd never been happier. We had a little routine: hang out- start with sucking his dick, pause, and hang out naked, then fuck, then hang out until one of us was tired. And once a fortnight or so I'd have to get on Grindr and find myself a hole, but other than that... man. Life was pretty fucking great. \n\n\"Hey Gid.\" Elijah said one day, just before I was about to call it a night. I glanced at him. I knew he'd been going to say something. He was sighing all evening, and staring at me with a sort of thoughtful look. \"This whole thing.\" He cleared his throat as he gestured to me. \"You don't think it's kind of a recipe for catching feelings?\" I glanced at him. As if. I've played this game before. \n\n\"Eli. This is just fucking.\" \n\n\"I know.\" He swallowed. \"But I mean... we hang out. It's in the realm of possibility that could mean something.\"\n\n\"Sure.\" I shrugged. \"Not with you though buddy. I'm not really into straight guys.\" I grinned at him reassuringly. He didn't seem reassured. He bit his lip, looking behind me and not quite meeting my eye.\n\n\"And if I wasn't straight?\" I rolled my eyes. \n\n\"Aw, come on Eli.\" He swallowed and looked at me. I raised my eyebrows. \"Ok. Fine. In theory, if you were a gay man who I was into... this could lead to catching feelings.\" He nodded thoughtfully. \"But this is you dipshit. I think you're safe.\" \n\n\"But you like me? We're friends?\"\n\n\"Yeah?\"\n\n\"But you don't like me like that. Even though you also definitely do like me like that.\"\n\n\"Eli!\" I stood up. \"God, you're overthinking this.\" I stretched out and grabbed my stuff. \"I gotta go dude, promise I'm not crushing on you, but if you're worried we can stop fucking for a bit.\"\n\n\"I don't wanna stop fucking.\" I grinned as he caught my eye. \n\n\"I'll see you later.\" \n\n\u2014\u2014-\n\nI got home after Elijah's a few weeks later and Jordy was up. He threw me a beer. \n\n\"Home late.\" He glanced at his phone. \"How was he?\" He asked. I rolled my eyes. \n\n\"None of your business.\" I winked at him. \"But satisfied.\" Jordy laughed. He motioned for me to join him in the living room and I obliged him, throwing myself next to him on the couch. \n\n\"I have to have an uncomfortable conversation with you that neither of us want to have.\" Jordy sighed. I glanced at him. \n\n\"Oh?\"\n\n\"Been talking to Elijah.\" He said. I felt myself grow stiff and red.\n\n\"Oh?\" He sighed and punched my shoulder. \n\n\"Don't be coy. He told me all about you two.\" I felt myself blushing.\n\n\"Oh.\" I said flatly. Hmmm. You know I used to have like, an actual vocabulary. Jordy cleared his throat. \n\n\"He made me swear not to tell you I knew.\"\n\n\"Well good work.\" I raised my eyebrows. \"Wish you kept that promise.\" I mumbled. My whole face was red. Jordy sighed.\n\n\"Yeah.\" He stretched out. \"Well. Secrets out bud. And talking to Eli- well. I thought I might need to have a bit of a heart to heart with you, mate.\" He sighed and cracked his knuckles as he looked at me. My neck pricked. \n\n\"This again? I just spent like a week trying to reassure Eli there's no feelings involved...\" Jordy raised his eyebrows. \n\n\"You're an idiot.\" He said. \"Eli said you hang out four times a week.\"\n\n\"Yeah, we hang out, then we... Well, you know... Come on. You know me, Jordy. Man, I can barely do feelings properly when I have them! That's why Jack and I fell apart, and Scott always said I was emotionally unavailable. I swear to god I'm not going to be cut up when Eli gets a girlfriend.\" Jordy sighed. \n\n\"I know you're not.\" He looked at me seriously. \"I'm not worried about you at all. I'm worried about him when you get bored of getting fucked and get a bottom.\" I stared at him, and slowly my lips twitched. I laughed. \n\n\"What?!\" I spluttered. \n\n\"Four times a week?\" Jordy nudged me. \" You're not seeing anyone else right now, you don't have time.\" I looked away. \n\n\"I guess not.\" I mumbled. Not on purpose. I was just ... busy. \n\n\"What's the sex to hanging out ratio?.\" I shrugged. \n\n\"I dunno? 70/30?\" \n\n\"More sex?\"\n\n\"No, more hanging out.\" \n\n\"And you don't think that sounds a little like... relationshippy?\" I swallowed. I shook my head but Jordy sighed and took my hand. \"Look, Mr No Feelings, I'm really sorry to be the one to tell you this. But you've stumbled into a classic blunder. I think you've accidentally got yourself... well. A boyfriend. One who has feelings for you. I don't know what you're gonna do about that.\" I blinked. I laughed and sat back. \n\n\"It's not like that!\" I cracked open the beer and shook my head at Jordy. \"I have a fuckbuddy, and I've had enough concern about it, honestly.\" Jordy sighed.\n\n\"Would you shut up and listen Gid? Elijah wouldn't have told me about a fuckbuddy, especially not you. And the way he talks about you...\" He winced. \"Look, this always happens ok? No one can be good friends and have casual sex and not develop feelings.\"\n\n\"I can!\"\n\n\"Well you either need to develop some or man up and stop seeing Elijah, because trust me, you two are not on the same page.\" I blinked. Jordy and I looked at each other in silence. He shrugged at me. I stammered for a second before I found my voice. \n\n\"Are you sure?\" I said. Jordy nodded slowly. \n\n\"Yeah. I'm kind of worried about him. If this really means nothing to you, you have to stop it. Sooner rather than later.\" I swallowed. \n\n\"Why did... why didn't he... talk to me about this?\"\n\n\"Just a guess here. But... you don't really invite talking about feelings, Gid. You don't think he might have tried?\" My stomach sank. Yeah. He totally had. I looked at Jordy and ran my fingers through my hair. \n\n\"Crap.\" I said. Jordy winced. \n\n\"Let him down easy.\" He said. I raised my eyebrows. \n\n\"What's easy?\" Jordy shrugged. \n\n\"Fuck man I don't know.\" He sighed. \"You so shouldn't have started this.\" I sighed and dropped my head in my hands. \n\n\"Well, thanks for that. I'll bear that in mind next time one of you suggest that I suck you off.\" I groaned as Jordy laughed. \n\n\"You dumb slut.\" He patted my shoulder. Yep. I never claimed to be anything else. \n\n\u2014\u2014\n\nElijah picked me up when I answered the door and swung me round before throwing both of us on the couch and kissing me hungrily. I responded without thinking. A hot guy sweeps you off your feet and starts kissing you so deep your toes tingle and you're meant to ignore that? I melted into him. \n\nHe pushed my hair off my face and smiled at me.\n\n\"Missed you.\" My stomach lurched. I sat up. \n\n\"Babe, we...\" I suddenly blushed and stumbled on my words. I glanced at Elijah. He touched my knee. \n\n\"You ok?\" He asked. I looked at him. That had slipped out so easily. Did I call him that often?\n\n\"When did I start calling you babe?\" I wondered out loud. Elijah smiled a little. \n\n\"A few weeks ago.\" He said. I swallowed. I suddenly felt tongue tied. I had a plan going into this- but it suddenly didn't sit right. I felt my tongue grow heavy as I tried to move forward. \n\n\"We need to talk.\" I said slowly. Elijah took my hand. \n\n\"Yeah.\" He said slowly. \"It's about time.\" We looked at each other. I took a deep breath... and I didn't say anything. Elijah was better at that anyway. \"Gideon.\" He said seriously. \"I think I caught feelings.\" I nodded slowly. \n\n\"Hmmm.\" I said. He nudged me in the ribs. \n\n\"Not a helpful response.\" He said. I sighed. \n\n\"I'm so bad at this.\" I admitted. \"Eli...\" My stomach churned. He squeezed my knee. \n\n\"It's ok.\" He said. \"I can take it.\" Ah. My heart. I shook my head. \n\n\"Eli, it's not that I don't have feelings. Of course I do. I'm human. But I'm bad at relationships. I don't really have time for boyfriends and I usually feel shitty when I can't be the man they want. And if I'm going to hurt you... I'd rather just... break it off now.\" Elijah stroked my knee slowly. I glanced up at him and he was staring into the distance. He glanced at me and caught my eye. He smiled softly. \n\n\"Hey Gid.\" He said. \"There's not a lot I'm asking from you. I want what we already do- maybe with the addition of a few sleepovers. That's it. Well. And you can call me babe in public. I'd like it if you called me babe in public. But if that's too much you're right, we should break it off.\" I bit my lip. \n\n\"Well.\" I cleared my throat. \"Here's the thing. That's fine. I could do that. But... I sleep around.\" I blushed as I admitted it- but Elijah just laughed and tousled my hair. \n\n\"Yeah, you're a damn slut.\" He sighed. \"But... right now it's just me isn't it?\"\n\n\"Well... yes.\"\n\n\"And is that ok?\" \n\n\"For now?\"\n\n\"So what if we go with ok for now- and you promise to be honest with me, and we cross the 'my boyfriend's an insatiable whore' bridge when we come to it.\" I swallowed. \n\n\"I guess.\" I looked at him. His face fell for a second as he took me in. \n\n\"It's not enough is it?\" He said. I looked away. I felt my stomach churn and my chest grow hot. \n\nIt almost was enough. I was never as happy as I was with him. Yeah yeah, I'd pretended I didn't have feelings- and sure, I wasn't head over heels in love, I was just warm and happy with him- all the time. Talking about our days, drinking beer, playing video games, on my knees... it didn't matter. Maybe it wasn't what movies and books will tell you love is, but I knew how I felt. I'd gone and got myself a man I could happily spend a hundred years with. \n\nBut. \n\n\"One small thing, that I know is gonna be a big thing.\" I took a deep breath and looked at him. \"I like to fuck. I like to be on top sometimes.\" Elijah blinked. He managed to maintain eye contact, even as both of our faces turned red. \n\n\"Well.\" He stroked my face. \"I'll just have to learn to like getting fucked.\"\n\n\"What if you don't?\" I said. He looked thoughtfully at me. \n\n\"A don't ask don't tell policy on you getting what you need when you need it? With the expectation you return to me and tell me you love me and I'm the best you'll ever have.\" I laughed. \n\n\"Well. That's certainly a solution.\" He shrugged. \n\n\"I'm not saying I'd do anything to make it work. But I think it already is working. And I think we can iron out the kinks.\" He moved his hands to hold mine and sighed. \"What do you think?\" I squeezed his hands. \n\n\"I think we are going to have so many arguments about who's on top, and if I looked at a guy for too long, and why I don't make enough time for your dick when I'm tired after a long shift. And I think the other guys will think it's a joke at best, and be total dicks about it at worst, and blame me for being a predator. I think your dad is gonna threaten to beat me up and your mum and my mum will hate each other.\" I swallowed. \"But if that hasn't put you off then... Eli, I want you so bad. Everything we have and everything we can have.\" Eli sighed and he pressed his lips to my forehead. \n\n\"It's kind of put me off.\" He whispered. I laughed and thumped him. \n\n\"Whatever.\" I grinned and jumped into his arms, pressing my ass against him. \"Good luck finding another stand in for your favourite porn star.\" He laughed and held me on his lap, stroking my thighs. \n\n\"Oh Gideon.\" He whispered. \"I really didn't... I really didn't plan on this... but...\" I rested my head on his chest and blinked up at him.\n\n\"Sorry for turning you gay.\" I muttered. He laughed and pushed me off him, rolling his eyes with a soft look of disgust. \n\n\"You ever take anything seriously?\" He chided. I shook my head. \n\n\"Almost never, you know what you're in for. Anyway, you already got serious me tonight. That took a lot out of me.\" I pouted and Elijah sighed and handed me a beer. ",
        "\"Fair.\" He said. \"Well... here's to us I guess.\" He lifted his bottle and we clinked them. I smiled as I settled into his arms. \"Ooh.\" He teased me. \"Snuggling before the cocksucking? That's not like you.\" \n\n\"You upgraded to the premium boyfriend package, comes with a lot of extra features the fuckbuddy package skimps on.\"\n\n\"I am so fucking into the upgrade.\" He pushed my hair off my face and started kissing my ear. I laughed. \n\n\"You haven't seen the extra cost though.\" I grinned. \"You might regret it later.\" He laughed. \n\n\"So this is the free trial? In 30 days I have to take you out to dinner?\" I pulled his arm to wrap around me. \n\n\"I take YOU out to dinner.\" I looked at him. \"Just cos you're usually on top you get to pay?\" He shrugged. \n\n\"We can argue about it at the till.\"\n\n\"Definitely not.\" I swore at him. \"I hate customers who do that.\" He leant down to kiss my cheek. \n\n\"Hot head.\" He teased. \n\n\u2014\u2014\n\nI yawned as I dumped my stuff on the kitchen table. Jordy yelled at me from the living room and I slouched in to crash down next to him. \n\n\"Missed you last night.\" He put on his 'hard talk with a friend' face. \"You ok?\" I looked at him and swallowed. \n\n\"Yeah.\" I coughed. \"We um... Didn't break up.\" Jordy hit me. \n\n\"Come on!\" He threw his hands up. \n\n\"Hold up!\" I pushed him off me. \"We talked! It kind of sucked, but I'm glad we did, and we're trying it.\" Jordy raised his eyebrows. \n\n\"Coward.\" He said. \n\n\"What?!\" I rolled my eyes. \"Coward? I told him I liked him! I told my supposedly straight friend that I liked him! I think that's the bravest I've ever been!\" Jordy glared at me. Then he turned his head to one side. \n\n\"You really like him?\" I blinked and looked away. \n\n\"Well... yeah Jordy. He's my best friend. And I mean, it doesn't hurt that he's like, hot as hell. And he likes me.\" \n\n\"You said no feelings.\"\n\n\"I say a lot of shit.\" Jordy snorted. He looked at me carefully. \n\n\"Ok.\" He said slowly. \"So are you two telling people then?\"\n\n\"Yeah.\" I sighed. \"Seems so.\"\n\n\u2014\u2014\n\nWe didn't like... officially announce it or anything. We just stopped sneaking around. We held each other's hand. We brought each other's drinks. The other guys took about three weeks to actually catch on- I could see them laughing at first, and then confused, and finally, one by one they all actually asked us. \n\n\"Uh.\" Mo sat next to me. \"Sorry to pry, but... are you and Eli... like... A thing now?\" I shrugged. \n\n\"Yeah.\" I said. \"We were fooling around and one night he forgot to say no homo and, well, you know where that gets you.\" Mo laughed. \n\n\"You're so full of it.\" He looked around. \"But really? You and Eli... you are, aren't you? I spotted Elijah inside and waved to him. He grinned and came out to join us. \n\n\"Hey.\" He kissed my head before sitting down next to me and greeting Mo. \n\n\"Mo was just asking if we're a thing.\" I said. Mo blushed and coughed. Elijah shrugged. \n\n\"A thing huh?\" He grinned at Mo. \"A good thing?\"He put his arm around me and I moved a fraction closer to him. Mo grinned. \n\n\"Knew it!\" He crowed. \"Mikey owes me $10.\" \n\n\u2014\u2014-\n\n\"You were fucking around with Mo, weren't you?\" Mikey asked at the bar the next week. I had no idea what he meant and I shrugged blankly. \"You and Eli?\" I rolled my eyes. \n\n\"Ah.\" I said. \"No, I wasn't fucking around with Mo. I'm fucking around with Eli. I don't think I have the energy for anyone else.\" Mikey snorted. \n\n\"Fuck off.\" He nudged my shoulder. \"Really?\"\n\n\"I dunno what to tell you.\"\n\n\"Eli's straight.\" I shrugged. \n\n\"Yeah, That weirded me out a bit at first too. But it's ok, it's only gay if our dicks actually touch so we make sure to wear protection.\" Mikey rolled his eyes. I looked around for Eli. Why was I the one always fronting this conversation? Mikey cleared his throat. \n\n\"So... are you two... like... Dating then?\" I glanced at him. I stopped fooling around and folded my arms. \n\n\"Do we have a problem Mikey?\" He blushed. \"Yes.\" I confirmed. \"We're dating. Weird for me too, believe me.\" Mikey shook his head.\n\n\"Sorry.\" He mumbled. \"It's... I didn't mean it like...\"\n\n\"Don't worry.\" I patted his forearm. \"My ass is magic but it isn't going to turn everyone gay.\" He laughed. \n\n\"It might.\" He said. He raised his eyebrows and bit his lip. \"Sorry.\" He said again. \"I'm happy for you too. I am. I'm just...\"\n\n\"It's ok.\" I shrugged. \"It's not something we need to talk about.\" He looked away awkwardly as I made my escape to anywhere else in the bar.\n\n\u2014\u2014-\n\nI let myself into his flat and looked around. His flat was way nicer than mine, probably because between the three of them all working for Weta no one ever seemed to be home. Which suited Elijah and I very well because we could barely make it to the bedroom most nights. \n\nI made my way to his room and, being exhausted from work, I basically fell asleep there, fully clothed, spread eagle on his bed. I woke up sometime later because someone was stroking my back and murmuring nice things. Presumably Elijah. \n\n\"You awake?\" He whispered. I didn't answer quite fast enough- because I wasn't, not really. \"Aw, Gid.\" He whispered. \"Why are you so much easier to talk to when you're asleep?\" He sighed, and I tried to will myself to say something in response, but he kept talking and I found myself lying still, listening, still sort of half asleep. \"I love you.\" He whispered. \"And I hate that I can't say that when you're awake, but I know how it would go. You'd give me that look... like you feel sorry for me.\" He sighed. \"So unfair that you were the gay one all along and I'm the idiot with too many feelings.\" I opened my mouth to say something but he was still going. \"I feel like I talked you into this.\" He said. \"I feel like you only said yes because there wasn't a better option on your plate. And I'm scared you're going to marry me because you figure why not. And I kind of hate you for that. But I guess I love you more because I'm going along with it.\" He sighed. \"I wish you loved me the way I loved you Gid.\" His hand paused in stroking my back and he curled up beside me. \n\nI turned over. \n\n\"You're a fucking idiot.\" I said. \n\nElijah blinked. \n\n\"I thought you were asleep.\"\n\n\"Evidently.\" \n\n\"I uh...\" He blushed. \"Uh. I didn't want to tell you that.\" I looked at him. \n\n\"I wish you'd told me earlier.\" I said quietly. \"Here I am, playing it cool.\" I smiled and touched his cheek. \"Hey stupid. Guess what. The gay guy always falls first. And usually really hard. I'm used to self preservation.\" \n\n\"So... you do actually feel something for me? Other than... you know. Horniness?\" I rolled my eyes as we loosely held each other on his bed. \n\n\"Eli. You absolute fuckwit. I love you. So deeply. Like, I think I'll die if you leave me. Like I tried to work out if Ju\u00e1rez-Mataiti or Mataiti-Ju\u00e1rez sounded better, which is ridiculous because even if marriage was on the table I have no idea why we're hyphenating our surnames...\" \n\n\"They both sound good.\" \n\n\"Really? I definitely think Mataiti-Ju\u00e1rez, but then I'm worried Mum will be sad because I've put you first...\"\n\n\"Oh.\" Elijah interrupted me with a smile. \"You ah... you have thought about this.\"\n\n\"All the time, Eli.\" I bit my lip. \"Eli. I love you.\" I sat up and held his hands. \"Sorry I don't say it.\" He smiled. \n\n\"You're saying it now. I love you too, Gideon.\"\n\n\"You fucking better, asshole.\" He laughed. \n\n\"So when do I meet your mum? Will she hate me? Does she know you're taking my name?\" I rolled my eyes. \"And your dad? Is he scary?\"\n\n\"About as scary as me.\"\n\n\"Absolutely terrifying.\" Elijah widened his eyes in mock terror. \n\n\"But secretly kind of a soft touch.\" I admitted. \"What about your mum and dad?\"\n\n\"Funny story.\" He bit his lip. \"They had a bet when I was ten about whether I was gay or not so mum is in for a really big pay cheque if I introduce you. But dads kind of...\" He winced. \n\n\"Oh.\" I touched his shoulder. \"That sucks.\" Elijah shrugged as he looked at me. \n\n\"Dude. I'm almost 30. Dad can suck it up.\" I smiled. \n\n\"Well. I mean. If it goes bad I probably only need a pair of heels to make a half convincing woman.\" Elijah laughed.\n\n\"As if.\" He grinned at me. \"You are the least feminine thing I've ever seen, despite being a long haired midget.\" I smiled. \n\n\"Well. Thank you.\" I hit him playfully. \"I'm not a midget.\" \n\n\"Hmm.\" He grunted non-committedly. \n\n\"Fuck off!\" I laughed. He grinned and slowly wrapped his arms around my waist, and let his head fall to my chest. \n\n\"There's a lot I'm thinking about.\" He said slowly. \"But really, Gid. We're sticking with Mataiti-Ju\u00e1rez?\" I laughed.\n\n\"It's a bit of a mouthful.\" I admitted. \"But ah... yeah. I guess if marriage was on the table...\"\n\n\"It is.\"\n\nWe looked at each other. I swallowed.\n\n\"You know... this isn't how this is meant to end.\"\n\nElijah frowned as he looked at me. \n\n\"Huh?\" \n\n\"When we started fooling round it was like a porno. And then... Well the production value dramatically increased... but the thing is with queer films, they usually end with one of us committing suicide... only we're not doing that are we? We're doing a fucking Hallmark love story.\" \n\n\"We're not.\" He grinned at me. \"We're Fry and Leela. Bit of an unusual journey but we were always going to get there.\" I rolled my eyes as he grinned at me. \"Love you Gid. Gideon Mataiti-Ju\u00e1rez.\"\n\n\"Woah woah woah. You don't get to slip your name in there without an outrageous proposal.\" Eli raised his eyebrows. \n\n\"Outrageous?\"\n\n\"I'd like outrageous.\" Eli looked at me thoughtfully. \n\n\"Need a ring size.\" He said. \"Hold up.\" He jumped up and grabbed a zip tie from a drawer. He wrapped it around my finger and marked it with a grin. \"Hopefully that'll work.\" He said. \"So what? Diamond? No, that's not you. Ugh. Emerald? Opal?\" I bit my lip as I looked at him.\n\n\"Are you actually asking? Or is this a bit?\" Eli raised his eyebrows. \n\n\"You really think I'm going to let the guy who gives the best blow jobs I've ever had run away with someone else? I'm game if you are. Gold or silver?\"\n\n\"Silver.\" I said quietly. \"I don't need a rock though. Just a band. Maybe our initials.\"\n\n\"E.M.J and G.M.J.\" I stifled a grin. \n\n\"You're really sold on Mataiti-Ju\u00e1rez?\"\n\n\"I like the sound of it.\"\n\n\"I guess Mum can suck it up.\" Eli smiled as he clasped my hand. \n\n\"If she really has a problem with it I'll take Ju\u00e1rez any day.\" \n\n\u2014\u2014\n\n\"The. Fuck. Is. That.\" Bailey grabbed my hand immediately, before I'd even had a chance to sit down and have a coffee. \n\n\"Bailey. Long black. Please.\" \n\n\"Holy shit. Gid, you're not engaged?!\"\n\n\"Just a little bit. And a lot hungover. Coffee. Or honestly- you're fired.\" He had the good sense to nod and disappear and show up two minutes later with my coffee. He didn't leave me alone though. He leant on his arm and stared at me. \n\n\"Only you.\" He sighed. \"God, you fall into a living cliche and somehow walk out fine.\"\n\n\"I'm that good.\" I rolled my eyes. \n\nNot strictly true. Elijah's just that into me. And I think I can honestly say, when he got down on one knee in the middle of a crowded restaurant, that I was the happiest man in the world. I might still be. The high might never wear off. \n\nIt's funny. I spent most of my twenties being a whore because why not? I guess the media I consumed when I was growing up convinced me it was safer that way. I figured I'd find a nice gay man eventually who wanted more than just to fuck a tight little half Latino- but I never in a million years imagined it would be the same guy I watched stupid cartoons with and played Deep Rock Galactic with- the same guy I'd always gone to football games with and got pissed with. I never really knew the 'like' could turn into love. \n\nAnd I don't think I deserve it. I'm still pinching myself everyday because Bailey is right. No one should fall into what I fell into and come out not only unscathed, but with a ring and a wedding date and a whole set of in laws who don't entirely trust you, but it's whatever because... \n\nIt's whatever because I won the fucking god damn lottery. And I'm not going to question that. \n\n---"
    ],
    "authorname": "DrHenderson",
    "tags": [
        "cocksucker",
        "blow jobs",
        "anal",
        "gay romance",
        "gay slut",
        "straight to gay",
        "interracial",
        "submissive"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/game-if-you-are"
}